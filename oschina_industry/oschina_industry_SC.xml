<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[开源中国-综合资讯]]>
        </title>
        <link>https://www.oschina.net/news/industry</link>
        <atom:link href="http://rsshub.app/oschina/news/industry" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[开源中国-综合资讯 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Fri, 15 Dec 2023 20:09:09 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[生成式 AI 的落地焦虑，如何破？]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="margin-left:0.0001pt; margin-right:0px"><span><span><span><span>自 ChatGPT 火爆出圈以来，各式大模型与生成式 AI 技术喷涌而出，医疗、金融、出行、消费零售、互联网等各个行业都在寻找利用生成式</span></span><span><span> AI 技术赋能业务</span></span><span><span>创新</span></span><span><span>的方法。然而，</span></span><span><span>从摸索到落地，</span></span><span><span>企业</span></span><span><span>在应用</span></span><span><span>用生成式 AI 技术尚存在门槛，使用现成的技术服务又会产生安全等方面的顾虑，比如业务数据泄漏等问题。一时间，许多企业陷入进退两难的境地。本篇就来说道说道企业在落地生成生式 AI 应用过程中的那些事。</span></span></span></span></p><ul><li><h2 style="text-align:left"><span><span><strong><strong><span><span><strong>从模型选择到业务安全，生成式 AI 应用诞生的曲折</strong></span></span></strong></strong></span></span></h2></li></ul><p style="margin-left:.0001pt; margin-right:0; text-align:left"><span><span><span><span>实际上，生成式 AI 市场经过一年多快速的发展，一方面市场上涌现出很多</span></span><span><span>大模型与配套服务，另一方面，企业面临的难题也在与日俱增。</span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:left"><span><span><span><span>首先，从模型的选择开始，眼花缭乱的大模型就已经够厂家喝上一壶。5 月 28 日，由中国科学技术信息研究所、科技部新一代人工智能发展研究中心联合相关研究机构编写的《中国人工智能大模型地图研究报告》正式发布，报告显示，我国 10 亿参数规模以上大模型已发布近 80 个。再到 10 月中国新一代人工智能发展战略研究院发布的《2023 中国新一代人工智能科技产业发展报告》显示，目前国内大模型总数达 238 个。而据北京经信局数据，截至 10 月初，北京发布大模型数量达 115 个，其中通用大模型 12 个，垂类大模型 103 个。</span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:left"><span><span><span><span>按照这个发展趋势，「百模大战」或许很快就会升级为「千模大战」。而企业如何选择大模型便会难上加难。在具体应用场景中，企业需要在准确性和性能平衡间作出衡量，有效地比较模型并根据其首选指标找到最佳选择，这就需要深厚的数据科学专业知识，也会耗费大量的人力时间成本。</span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:left"><span><span><span><span>而模型的选择只是开始，确定模型之后，还需要结合自身业务，做模型的精调、训练等工作。在这一步，公司的业务数据类型与大模型输入所要求的数据类型需要做一定适配，同时输入的数据需要具有代表性、多样性、一致性和可靠性，这样才能实现效果更佳的输出，这便要求企业需要有既懂业务，又懂大模型技术的工程师对数据进行整理。</span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:left"><span><span><span><span>此外，大模型的精调也需要大量的算力，需要投入大量的资金和时间来购买和维护硬件设备，或者租用云服务，同时基础设施也需要长时间的维护。而大模型技术作为新兴技术，许多公司并没有相应的人才储备与经验，这对企业来说也是不小的压力。</span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:left"><span><span><span><span>模型本身的问题解决了之后，企业还要面临安全隐患。比如很多使用方会担心，用了某个大模型，那么自己的数据会不会都被模型方看到甚至泄露？会不会导致敏感信息泄漏，或是生成违规内容等等？那么，企业就需要确保数据在传输、存储和处理的过程中不会被泄露或者滥用，以免给业务和声誉带来损失。</span></span></span></span></p><ul><li><h2 style="text-align:left"><span><span><strong><strong><span><span><strong>亚马逊云科技助力企业安全构建生成式 AI 应用</strong></span></span></strong></strong></span></span></h2></li></ul><p style="margin-left:.0001pt; margin-right:0; text-align:left"><span><span><span><span>面对种种挑战，对于许企业来说，最佳选择可以是给自己找一个 AI 助手，全方面辅助完成 AI 能力的嵌入，最常见的便是云上大模型平台和服务。</span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:left"><span><span><span><span>2023 年 11 月 28 日，2023 亚马逊云科技 re:Invent 在美国拉斯维加斯盛大开启，并于 12 月 2 日圆满落下帷幕。2023 年 12 月 12 日起，2023 亚马逊云科技 re:Invent 中国行城市巡展活动将在 10 大城市开启，覆盖北京、上海、广州、深圳、成都、青岛、南京、西安、杭州、长沙 10 个城市！</span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:left"><span><span><span><span><img alt="" height="1068" src="https://oscimg.oschina.net/oscnet/up-2aec5379c01dccaa8d1cb0c81c83e824ec0.png" width="1600" referrerpolicy="no-referrer"></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:left"><span><span><span><span>作为全球云计算领域的年度风向标，2023 亚马逊云科技 re:Invent 为全球云计算爱好者和构建者带来了最新的产品和技术发布、最前沿的领导者洞察和全球云计算的最佳实践。在今年 re:Invent 中，一系列重磅发布成为大会焦点，从 Serverless、生成式 AI 时代的数据战略、芯片与云底座创新，到 Amazon Bedrock 的重磅更新、企业级生成式 AI 应用 (Amazon Q</span></span><span><span>) 的全新发布等等，系列组合拳为企业落地生成式 AI 应用全方位护航。</span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:left"><img alt="" height="1067" src="https://oscimg.oschina.net/oscnet/up-c52755aef19a7aa20abb1e9cd7e8662d7ab.png" width="1600" referrerpolicy="no-referrer"></p><p style="margin-left:.0001pt; margin-right:0; text-align:left"><span><span><span><span>在多个新发布的动作中，一项全面托管服务的重磅更新引人注目——Amazon Bedrock 发布更多模型选择和全新强大功能。</span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:left"><span><span><span><span>首先，Amazon Bedrock 上集成了 AI21 Labs、Anthropic、Cohere、Meta、Stability AI 和亚马逊的多种行业领先大语言模型和其他模型，用户可轻松访问。不仅如此，为了帮助客户在纷繁的模型中选择更适合自己的，Amazon Bedrock 新功能可帮助客户高效评估、比较和选择最适合其应用场景和业务需求的模型。</span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:left"><span><span><span><span>确定模型之后，企业往往需要针对模型做适配，或者说是扩展调优，最大程度地释放数据价值。针对这些部分，Amazon Bedrock 知识库功能使用上下文和相关公司数据定制模型响应：组织希望使用专有数据补充现有模型，以获得更相关和更准确的响应。针对模型调优，Amazon Bedrock 中的 Cohere Command、Meta Llama 2 和 Amazon Titan 模型支持调优，为客户的模型定制提供更多选项，Anthropic Claude 也即将支持调优。</span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:left"><span><span><span><span>此外，Amazon Bedrock 也兼备代理功能，可以自动执行，使用公司系统和数据源执行多步骤任务。虽然模型能够有效地进行对话和创建新内容，但如果能够执行复杂的操作，例如解决问题以及与公司系统交互以完成任务（例如，旅行预定或订购替换零件），它们可以提供更多价值。然而，这需要定制化地将模型与公司数据源、API 以及内部和外部系统集成起来。开发人员必须编写代码来协调模型、系统和用户之间的交互，以便应用程序可以按逻辑顺序执行一系列 API 调用。为了将模型与数据源连接起来，开发人员必须部署 RAG，以便模型可以根据任务调整其响应。最后，开发人员必须配置和管理必要的基础设施，并制定数据安全和隐私策略。这些步骤非常耗时且需要专业知识，从而减慢了生成式 AI 应用程序的开发速度。现在正式可用、完全托管的 Amazon Bedrock 代理功能使生成式 AI 应用程序能够跨公司系统和数据源执行多步骤任务。</span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:left"><span><span><span><span>最后，在交互安全层面。虽然许多模型使用内置控件来过滤不良和有害内容，但企业希望进一步定制交互，以保证话题始终与业务相关，符合公司政策，并遵守「负责任的 AI」的原则。例如，银行可能希望这样设置其在线助手：避免查询竞争对手、避免提供投资建议、以及限制有害内容。此外，应用户要求，可能要变换或隐去用户的个人身份信息（PII）以保证安全。企业希望以一种简化的方式在生成 AI 应用程序中强化关键策略和规则，以提供所答即所问的用户体验并支持更安全地使用该技术。Amazon Bedrock 的 Guardrails 功能现已推出预览版，使客户能够为生成式 AI 应用程序实施保护措施。借助 Amazon Bedrock 的 Guardrails 功能，客户可以根据应用程序要求和负责任的 AI 策略跨模型实施保护措施。这些应用程序根据客户应用场景和「负责任的 AI」原则进行定制，因此这一功能可以增强用户交互的安全性和隐私性。</span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:left"><img alt="" height="1067" src="https://oscimg.oschina.net/oscnet/up-28a6f412bca7e88f6847ddd2341600b1962.png" width="1600" referrerpolicy="no-referrer"></p><p style="margin-left:.0001pt; margin-right:0; text-align:left"><span><span><span><span>目前，亚马逊云科技已经推出多款产品助力企业构建生成式 AI 应用，缓解 AI「焦虑」其中也不乏许多科技界合作伙伴。MongoDB 首席产品官 Sahir Azam 表示：「各行各业越来越多的客户希望利用生成式 AI 来构建下一代应用程序，但许多人担心数据隐私以及人工智能驱动的系统输出的准确性。为了满足客户的需求，我们将 MongoDB Atlas 作为 Amazon Bedrock 的知识库，以便我们的共同客户可以利用其运营数据安全地构建生成式 AI 应用程序，以符合最终用户期望的信任度和准确性来创建个性化体验。通过这种集成，客户可以访问行业领先的基础模型，并使用 MongoDB Atlas Vector Search 处理过的数据来创建应用程序，在正确的上下文中提供更多相关的输出。利用 Amazon Bedrock 知识库中内置的数据隐私最佳实践，客户可以节省在生成式 AI 运营上花费的时间，从而更专注于技术部署，以在，亚马逊云科技上提供更有吸引力的最终用户体验。」</span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:left"><span><span><span><span>当然，除了 Amazon Bedrock，2023 亚马逊云科技 re:Inven 还有许多重磅发布，并且在接下来的 2023 亚马逊云科技 re:Invent 中国活动中，亚马逊云科技也将对各个新产品新功能做深入解读。</span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:left"><img alt="" height="1067" src="https://oscimg.oschina.net/oscnet/up-c47b8d38d09f54435ff17dbe0dd4b647787.png" width="1601" referrerpolicy="no-referrer"></p><p style="margin-left:.0001pt; margin-right:0; text-align:left"><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fhttps%3A%2F%2Faws.amazon.com%2Fcn%2Fproducts%2F%3Faws-products-all.sort-by%3Ditem.additionalFields.productNameLowercase%26aws-products-all.sort-order%3Dasc%26awsf.re%253AInvent%3Devent-year%2523aws-reinvent-2023%26awsf.Free%2BTier%2BType%3D*all%26awsf.tech-category%3D*all%26trk%3D6ffebce9-f4cb-4ff0-910e-6b6ee3c74dc8%26sc_channel%3Del" target="_blank"><strong><span>点击此处，一链速看亚马逊云科技 re:Invent 2023 的所有热门发布</span></strong></a><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fhttps%3A%2F%2Faws.amazon.com%2Fcn%2Fproducts%2F%3Faws-products-all.sort-by%3Ditem.additionalFields.productNameLowercase%26aws-products-all.sort-order%3Dasc%26awsf.re%253AInvent%3Devent-year%2523aws-reinvent-2023%26awsf.Free%2BTier%2BType%3D*all%26awsf.tech-category%3D*all%26trk%3D6ffebce9-f4cb-4ff0-910e-6b6ee3c74dc8%26sc_channel%3Del" target="_blank"><strong>。</strong></a></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 15 Dec 2023 10:06:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271239</guid>
            <link>https://www.oschina.net/news/271239</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[稚晖君创业公司再融资，金额超 6 亿元，投前估值 35 亿元]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2F36kr.com%2Fp%2F2560285742488705" target="_blank">据报道</a>，稚晖君创业公司智元机器人近日完成新一轮 A3 融资。</p><p>本轮融资由蓝驰创投、中科创星、鼎晖投资、长飞基金、C 资本、高瓴创投、立景创新、三花控股集团、基石资本、临港新片区基金和银杏谷资本投资。 据了解，本轮投前估值为 35 亿元，融资金额超 6 亿元人民币。</p><p>目前，该公司正在进行新一轮融资，投前 70 亿元估值。截止发稿，官方并未给到回复。</p><p>智元机器人因创始人「稚晖君」彭志辉而出名，公司希望对标特斯拉的擎天柱，产品方向为人形机器人。今年 8 月，智元推出了<em><u><a href="https://www.oschina.net/news/254290">远征 A1 人形机器人</a></u></em>，并发布了其自研的 PowerFlow 关节电机，反关节的设计和灵巧手 SkillHand。</p><p><img src="https://static.oschina.net/uploads/space/2023/0818/134556_I0Zb_2720166.jpg" referrerpolicy="no-referrer"></p><p>智元机器人在 8 月发布会时表示，他们已经和多家头部制造业服务企业对接，并面向 3C 电子、汽车装备等不同场景，训练了很多如拧螺丝的动作，公司预计 2024 年产品会推向商业化落地。</p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 15 Dec 2023 08:41:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271228</guid>
            <link>https://www.oschina.net/news/271228</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[MariaDB 拆分 SkySQL，作为独立公司成立]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">MariaDB<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmariadb.com%2Fnewsroom%2Fpress-releases%2Fmariadb-finalizes-spinoff-of-skysql%2F" target="_blank"> 宣布</a>已将其 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fskysql.com%2F" target="_blank">SkySQL</a> 业务拆分为一家独立的云数据库公司，以负责构建和支持 SkySQL 产品。</span></p><p><span style="color:#000000">「我们相信，此次分拆将促进依赖 SkySQL 的客户顺利过渡。我们很高兴 SkySQL 产品将在一家新公司的领导下继续发展，同时让我们能够集中精力开发核心的 MariaDB 企业服务器产品。」</span></p><p><span style="color:#000000">未来，新公司 SkySQL Inc. 将承担 SkySQL 数据库即服务 (DBaaS) 的开发、销售和支持工作。MariaDB 将持有 SkySQL 的股权，以强调两家公司之间的长期合作关系。</span></p><p><span style="color:#000000">SkySQL DBaaS 产品是 MariaDB 数据库的云托管和生产级版本。SkySQL 表示，通过作为一个独立实体推出，它将能够加快向平台提供新功能的步伐。其主要优先事项之一是在 Microsoft Azure 上启动该服务。目前，客户可以通过 Amazon Web Services 和 Google Cloud 进行访问。</span></p><p><span style="color:#000000"><img alt="" height="294" src="https://oscimg.oschina.net/oscnet/up-a1e38eab7fc4e80eb5d8322843767666f63.webp" width="300" referrerpolicy="no-referrer"></span></p><p><span style="color:#000000">MariaDB 于 2020 年推出了 SkySQL，称它是流行的 MariaDB 数据库的云原生版本，是 MySQL 数据库的替代品。由于 SkySQL 是基于 Kubernetes 构建，因此它可以与任何类型的云基础设施相融合。</span></p><p><span style="color:#000000">SkySQL 的云原生特性意味着客户可以更轻松地管理其数据库部署。与 Oracle 等其他公司的数据库产品相比，它的许可和管理也更容易。此外，SkySQL 是首批支持行、列式以及组合行和列式存储的 DBaaS 服务之一，这是一种可以在同一个数据集上在一个位置处理事务和分析的技术。</span></p><p><span style="color:#000000">由于采用了 MariaDB 专有的 MaxScale 和 Xpand 技术，SkySQL 还声称比其他类型的数据库具有更高的可用性和更大的可扩展性。</span></p><p><span style="color:#000000">作为一个独立的实体，SkySQL 的领导团队包括：首席执行官 Nithin Rao、联合创始人 Jags Ramnarayan（首席技术官）和 Saravana Krishnamurthy (CPO)。曾在 MariaDB 中负责开发和运营 SkySQL 的核心技术团队也已加入该公司。</span></p><p><span style="color:#000000">Rao <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsiliconangle.com%2F2023%2F12%2F14%2Fmariadb-spins-skysql-independent-database-service-company%2F" target="_blank">表示</a>，通过分拆 SkySQL，新公司将确保 SkySQL 继续成为那些希望在云中获得最佳 MariaDB 体验的客户的「不二之选」。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 15 Dec 2023 07:26:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271211/mariadb-spins-skysql-independent-company</guid>
            <link>https://www.oschina.net/news/271211/mariadb-spins-skysql-independent-company</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[FolkMQ 「多中心」集群部署方案]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#24292e; text-align:start">FolkMQ 是一个新起的内存型消息中间件。</p><h3>简介</h3><ul><li>采用 「多路复用」 + "内存运行" + "快照持久化" + "Broker 集群模式"（可选）+</li><li>基于<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsocketd.noear.org%2F" target="_blank">Socket.D 网络应用协议</a><span>&nbsp;</span>开发。全新设计，自主架构！</li></ul><table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:0px; box-sizing:border-box; color:#24292e; display:block; font-family:-apple-system,&quot;system-ui&quot;,&quot;Segoe UI&quot;,Helvetica,Arial,sans-serif,&quot;Apple Color Emoji&quot;,&quot;Segoe UI Emoji&quot;,&quot;Segoe UI Symbol&quot;; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; margin-bottom:16px; margin-top:0px; orphans:2; overflow:auto; text-align:start; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:960px; word-spacing:0px"><tbody><tr><th>角色</th><th>功能</th></tr></tbody><tbody><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">生产端</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">发布消息（Qos0、Qos1）、发布定时消息（Qos0、Qos1）、发布重试</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">&nbsp;</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">&nbsp;</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">消费端</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">订阅、取消订阅</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">消费端</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">消费-ACK（自动、手动）</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">&nbsp;</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">&nbsp;</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">服务端</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">发布-Confirm、订阅-Confirm、取消订阅-Confirm、派发-Retry、派发-Delayed</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">服务端</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">内存运行、快照持久化（自动、停机、手动）</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">服务端</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">集群热扩展</td></tr></tbody></table><h3>特点</h3><ul><li>高吞吐量、低延迟（单机版，180K TPS）</li><li>扩展性（集群可」热扩展「服务节点）</li><li>持久性、可靠性</li><li>高可用（只要有」一个「同类节点在即可）</li></ul><h3>多中心集群部署演示：</h3><p><iframe frameborder="0" height="400" scrolling="no" src="https://player.bilibili.com/player.html?aid=409798174&amp;bvid=BV1vG411a7Q7&amp;cid=1367060964&amp;p=1" style="box-sizing: border-box; font-size: 16px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; color: rgb(36, 41, 46); font-family: -apple-system, &quot;system-ui&quot;, &quot;Segoe UI&quot;, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; text-align: start; background-color: rgb(255, 255, 255);" width="700" referrerpolicy="no-referrer"></iframe></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 15 Dec 2023 04:52:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271182</guid>
            <link>https://www.oschina.net/news/271182</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[OpenAI 「泄露」 GPT-4.5，价格是 GPT-4 的 6 倍]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>OpenAI 官网的产品价格订阅页面似乎意外地「泄露」了 GPT-4.5。按照页面的信息，GPT-4.5 的价格是目前 GPT-4 的 6 倍。</p><blockquote><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-31d1ece739917eff1f166c5dbe37cdaf3cd.png" referrerpolicy="no-referrer"></p><p>来源：<em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.reddit.com%2Fr%2FOpenAI%2Fcomments%2F18i5n29%2Fanyone_hear_of_gpt45_drop_today%2F" target="_blank">https://www.reddit.com/r/OpenAI/comments/18i5n29/anyone_hear_of_gpt45_drop_today/</a></u></em></p></blockquote><p>根据描述，最先进的模型带来了<strong>跨语言、音频、视觉、视频和 3D 的多模态功能，以及复杂的推理和跨模态理解</strong>，以及 3 个新型号：</p><ul><li>GPT-4.5</li><li>GPT-4.5-64k</li><li>GPT-4.5-audio-and-speech</li></ul></div>
                                    ]]>
            </description>
            <pubDate>Fri, 15 Dec 2023 03:44:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271170/openai-leak-gpt45</guid>
            <link>https://www.oschina.net/news/271170/openai-leak-gpt45</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[夸克浏览器 PC 版开启内测]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff"><span style="color:#555555">夸克浏览器今天正式开启 PC 版本的内测，安装包大小 165 MB，基于 Chromium&nbsp;112 内核版本打造，目前内测版本功能相对简单，主打夸克小工具和夸克网盘。</span></span></p><p><span style="background-color:#ffffff"><span style="color:#555555"><img alt="" height="313" src="https://oscimg.oschina.net/oscnet/up-7d2b1e9f052bd1f16e693666b844526c384.png" width="500" referrerpolicy="no-referrer"></span></span></p><p><span style="color:#555555"><img alt="" height="313" src="https://oscimg.oschina.net/oscnet/up-c1abc7d9868a44f006af303db9fc34bc1f2.png" width="500" referrerpolicy="no-referrer"></span></p><p><span style="background-color:#ffffff"><span style="color:#555555"><img alt="" height="319" src="https://oscimg.oschina.net/oscnet/up-1a021e823d1e28e62da4d57b8883ec880ef.png" width="300" referrerpolicy="no-referrer"></span></span></p><p><span style="background-color:#ffffff"><span style="color:#555555">安装完成，需要使用夸克浏览器手机版扫码登录，登录后的界面</span></span></p><p><span style="background-color:#ffffff"><span style="color:#555555"><img alt="" height="338" src="https://oscimg.oschina.net/oscnet/up-118ef3c22895713a51398d5edfc8ff9bde0.png" width="500" referrerpolicy="no-referrer"></span></span></p><p><span style="background-color:#ffffff"><span style="color:#555555">文件工具中心</span></span></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 15 Dec 2023 03:42:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271168</guid>
            <link>https://www.oschina.net/news/271168</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Bytebase 2.12.0 - 改进自动补全和布局导航]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h2>🚀 新功能</h2><ul><li>支持 MySQL 高级自动补全。</li><li>支持从 UI 上导入分类分级配置。 <img src="https://oscimg.oschina.net/oscnet/up-0268af7aad60dafccd3d2d9f573a25e45b2.png" alt="file" referrerpolicy="no-referrer"></li></ul><h2>🔔 重大变更</h2><ul><li>作废已有企业版试用证书。之后可以通过提交申请获取新的试用证书。</li></ul><h2>🎄 改进</h2><ul><li><p>改进整体布局和导航。</p></li><li><p>支持在 SQL 编辑器里显示以及查询 PostgreSQL 数据库分区表。</p></li><li><p>优化对数据库/实例/慢查询的过滤体验。 <img src="https://oscimg.oschina.net/oscnet/up-0e38c7ab958fb392f60f9f749b38a5a5e48.png" alt="file" referrerpolicy="no-referrer"></p></li><li><p>Schema 编辑器性能优化。</p></li><li><p>支持 TiDB 7.5。</p></li><li><p>提升 MySQL SQL 审核，的兼容性。</p></li></ul><h2>🐞 Bug 修复</h2><ul><li>修复了当结果太大无法查询 MongoDB 的问题。</li><li>修复了在 SQL Editor 中无法查询 PostgreSQL 视图的问题。</li></ul><h2>🎠 社区</h2><ul><li>感谢 @jinrenjie 提交 fix(smtp): fix host name error in smtp authentication #9674</li></ul><h2>📕 安装及升级</h2><p>参考<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fbytebase%2Fbytebase%23installation" target="_blank">升级指南</a>。如果从之前版本升级，获取新版本后，重新启动升级即可。</p><hr><p>💡 更多资讯，请关注 Bytebase 公号：Bytebase</p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 15 Dec 2023 03:31:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/6148470/blog/10321743</guid>
            <link>https://my.oschina.net/u/6148470/blog/10321743</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[互联网大厂月薪分布：字节跳动超 5% 员工月薪高于 5 万]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>某统计机构公开了一份国内互联网大厂的月薪分布。从统计来看，贝壳、阿里、滴滴、拼多多、快手和腾讯有超过 60% 的员工，月薪都在 3-5 万区间。而拼多多和字节跳动，还有 5% 以上的员工月薪超过了 5 万。</p><p><img src="https://oscimg.oschina.net/oscnet/up-6dee49384f61d67489bea92afa25362f142.png" referrerpolicy="no-referrer"></p><p>大家熟悉的华为，有 51% 的员工月薪在 3-5 万区间（3.4% 员工月薪超过 5 万），而小米这个数字为 47.5%。</p><p>事实上，不少互联网公司内部都有等级评定，而像华为、阿里、腾讯内部，级别高的员工甚至年薪+分红都轻松过百万。</p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 15 Dec 2023 03:30:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271163</guid>
            <link>https://www.oschina.net/news/271163</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[赠书 + 5 折购书，作者线上亲解《MLOps 工程实践》]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><strong>如何实现 </strong><strong>AI</strong><strong> 规模化落地？</strong></p><p><strong>如何跨越 </strong><strong>AI</strong><strong> 工程化鸿沟？</strong></p><p><strong>如何解决 </strong><strong>AI</strong><strong> 落地的效果与效率难题？</strong></p><p>这三大问题，都可以在《MLOps 工程实践：工具、技术与企业级应用》这本书中找到答案。</p><p>《MLOps 工程实践》由第四范式创始人领衔撰写，腾讯、小米、百度等分享经验，涵盖生产级机器学习项目相关技术理论、工具和大厂案例，构建可靠、高效、可复用、可扩展机器学习模型。</p><p>12 月 18 日晚 19:00，《MLOps 工程实践》的三名作者陈庆、颜丙政、赵喜生将直播分享本书内容，并讲述写书背后的故事，一起探讨 MLOps 的过去、现在和未来。</p><p><img height="600" src="https://oscimg.oschina.net/oscnet/up-60cbe740936b6e154b981698fc29b5ca488.png" width="600" referrerpolicy="no-referrer"></p><p>&nbsp;</p><p>此外，直播期间，我们还将对外<strong><span style="color:#2980b9">赠送 10 本《MLOps 工程实践》</span></strong>，在直播评论区互动或参与直播抽奖即有机会获得！</p><p>同时，在 12 月 18 日当天，定价 109 元的<span style="color:#2980b9"><strong>《MLOps 工程实践》将打五折！</strong></span>扫码入群，即可获取购书链接！</p><p><img height="401" src="https://oscimg.oschina.net/oscnet/up-c1ed9b7c34eb99c03694baa402a428eb7bd.png" width="414" referrerpolicy="no-referrer"></p><p><strong>直播主题：</strong>三大作者亲解 MLOps ——《MLOps 工程实践》读书分享会</p><p><strong>直播时间：</strong>12 月 18 日（周一） 19:00-20:30</p><p><strong>直播平台：</strong>「OSC 开源社区」 视频号</p><p><strong>主办方：</strong>开源中国、机械工业出版社</p><div><div><p><strong>直播嘉宾：</strong></p><div><p>&nbsp;&nbsp; <strong>主持人：</strong></p><p>&nbsp;&nbsp;孙越，星策社区产品经理</p><p>&nbsp;&nbsp; <strong>分享嘉宾：</strong></p><p>&nbsp;&nbsp;陈庆，第四范式大语言模型式说解决方案产品负责人</p><p>&nbsp;&nbsp;颜丙政，第四范式架构师</p><p>&nbsp;&nbsp;赵喜生，腾讯机器学习平台架构师</p><p><img height="1422" src="https://oscimg.oschina.net/oscnet/up-96816a36a647d5cac6e6102f7c1ece4591d.png" width="800" referrerpolicy="no-referrer"></p><p><strong>除了赠书之外，我们还有更多直播福利：</strong></p></div></div></div><ul><li><p>互动抽奖：在直播评论区提问，被直播嘉宾回复的用户可获 OSC T 恤 1 件，名额不限。</p></li><li><p>福袋抽奖：直播中将有多轮抽奖，参与就有机会获得 OSC T 恤、笔记本、马克杯 、前沿技术书籍等。</p></li></ul><p><img height="281" src="https://oscimg.oschina.net/oscnet/up-5107f5e07c513d574174e5301fed5a6be4c.png" width="500" referrerpolicy="no-referrer"></p><p>小伙伴们，我们直播间见～</p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 15 Dec 2023 03:16:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/3859945/blog/10321745</guid>
            <link>https://my.oschina.net/u/3859945/blog/10321745</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[JavaScript 引擎 V8 年度回顾：新编译器、修改基础架构、改进 GC……]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>V8 官方博客<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fv8.dev%2Fblog%2Fholiday-season-2023" target="_blank">回顾了</a></u> 2023 年的重要变化：通过创新的性能优化，V8 不断突破 Web 领域的可能性界限。比如引入新的中间层编译器，对顶层编译器基础架构、运行时和垃圾回收进行多项改进，从而全面提升速度。</p><p><img src="https://oscimg.oschina.net/oscnet/up-bf9e793830df03255fd7b3a067d1fec862c.png" referrerpolicy="no-referrer"></p><p>除了性能改进之外，V8 团队还为 JavaScript 和 WebAssembly 添加了许多新功能。比如通过 WasmGC 将支持垃圾回收的编程语言用于 Web 开发（<u><em><a href="https://www.oschina.net/news/264807/wasmgc-chrome" target="_blank">Chrome 支持运行 Kotlin、Java 等 GC 编程语言</a></em></u>）。</p><p>此外还改进了沙箱基础设施，并为 V8 引入了控制流完整性 (CFI)，为用户提供了更安全的环境。</p><p><img src="https://oscimg.oschina.net/oscnet/up-3394d169661bc1f898bec9fe7ebe5286e7a.png" referrerpolicy="no-referrer"></p><p><strong>V8 2023 重磅新特性回顾</strong></p><ol><li><p><strong>新的中间层编译器 Maglev</strong>：Maglev 是 V8 引擎的新中间层编译器，它的推出使得代码的优化速度大大提高。相比于现有的编译器，Maglev 的编译速度快了 10 到 100 倍，并且在 JetStream 和 Speedometer 等性能测试中取得了 8.2% 和 6% 的性能提升。</p></li><li><p><strong>新的顶层优化编译器架构 Turboshaft</strong>：V8 引擎还引入了 Turboshaft，这是一个用于顶层优化编译器的新内部架构。使用 Turboshaft 后，编译速度提高了一倍，这有助于节约能源并为未来的性能提升奠定基础。</p></li><li><p><strong>更快的 HTML 解析器</strong>：V8 团队对 HTML 解析器进行了优化，这导致 Speedometer 测试分数提高了 3.4%。这些变化也被 WebKit 项目采纳，从而对 Chrome 浏览器的性能产生了积极影响。</p></li><li><p><strong>更快的 DOM 分配</strong>：V8 团队还对 DOM 对象的内存分配策略进行了优化，这使得 DOM 对象的分配速度提高了 3 倍，并在 DOM 密集型测试中取得了显著的改进。</p></li><li><p><strong>新的 JavaScript 特性</strong>：V8 引擎还推出了一系列新的 JavaScript 特性，包括可调整大小的 ArrayBuffers、ArrayBuffer 传输、String isWellFormed 和 toWellFormed 等。</p></li><li><p><strong>WebAssembly 更新</strong>：V8 引擎为 WebAssembly 引入了多个新特性和性能优化，包括对多内存的支持、尾调用、放松的 SIMD 等。</p></li><li><p><strong>WebAssembly 垃圾回收</strong>：V8 引擎最终实现了 WebAssembly 垃圾回收（WasmGC），这使得可以将使用 Java、Kotlin、Dart 等垃圾回收语言编写的应用程序编译为 WebAssembly，从而提高了其运行速度。</p></li><li><p><strong>安全增强</strong>：V8 引擎还在安全方面进行了改进，包括改进了沙箱基础设施、引入了控制流完整性（CFI）等。</p></li></ol><p>原文：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fv8.dev%2Fblog%2Fholiday-season-2023" target="_blank">https://v8.dev/blog</a></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 15 Dec 2023 03:16:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271159/v8-2023-recap</guid>
            <link>https://www.oschina.net/news/271159/v8-2023-recap</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Firefox 为 Android 用户提供 450 多个新扩展]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">Mozilla 正式<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.mozilla.org%2Fen%2Fmozilla%2Fnew-extensions-youll-love-now-available-on-firefox-for-android%2F" target="_blank">宣布</a>在 Addons.mozilla.org (AMO) Android 页面上，面向用户提供 450 多个新的 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Faddons.mozilla.org%2Fzh-CN%2Fandroid%2F%3F_gl%3D1*72qen9*_ga*MTM5NzQ4MDI5My4xNzAwNjE4OTgx*_ga_X4N05QV93S*MTcwMjYwNzA0MC4xLjAuMTcwMjYwNzA0MC4wLjAuMA.." target="_blank">Firefox Android 版扩展</a>。</span></p><p><span style="color:#000000">「这一里程碑标志着一个新的开放式移动扩展生态系统的启动，开发者现在可以自由创建和发布扩展，用户也可以轻松访问并在 Firefox for Android 上安装这些扩展。」</span></p><p><img height="303" src="https://oscimg.oschina.net/oscnet/up-7126e1593955faa3278ba5deb2d5c413912.png" width="700" referrerpolicy="no-referrer"></p><p><span style="color:#000000">Firefox 工程副总裁 Vicky Chin 称，扩展最初的意义就是人们用来定制自己的互联网体验的一种方式。Firefox&nbsp;是当下唯一一个支持开放扩展生态系统的主要 Android 浏览器。他们计划在未来几个月启用更多扩展，供用户选择并定制自己的移动互联网体验。</span></p><p><span style="color:#000000">现在的人在<span style="background-color:#ffffff">很多事情上都依赖于移动设备 — 快速信息搜索、阅读文章、听音乐、寻找食谱等。</span>目前一些可用的相关扩展程序有：</span></p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Faddons.mozilla.org%2Fen-US%2Fandroid%2Faddon%2Fmidnight-lizard-quantum%2F%3Futm_source%3Daddons.mozilla.org%26utm%2520_medium%3Dreferral%26utm_content%3Dsearch" target="_blank"><strong>Midnight Lizard</strong></a><strong style="color:#000000"><span>&nbsp;</span>– 阅读更轻松&nbsp;</strong></li></ul><p><span style="color:#000000">Midnight Lizard 扩展可以调节手机界面颜色，增加或减少亮度和对比度；还能添加蓝光滤镜、屏幕着色器，以及夜间模式。从而减轻眼睛疲劳，保持良好状态。</span></p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Faddons.mozilla.org%2Fen-US%2Fandroid%2Faddon%2Fdark-background-light-text%2F%3Futm_source%3Daddons.mozilla.org%26utm_medium%3Dreferral%26utm_content%3Dsearch" target="_blank"><strong>深色背景和浅色文本</strong></a><strong>&nbsp;– 保持简洁</strong></li></ul><p><span style="color:#000000">用户可以自由定制，让所有网页都以深色背景和浅色文本的方式呈现，或者也可只选择部分网页。</span></p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Faddons.mozilla.org%2Fen-US%2Fandroid%2Faddon%2Fworldwide-radio%2F" target="_blank"><strong>全球电台</strong></a><strong>&nbsp;– 尽情享受</strong></li></ul><p><span style="color:#000000">可直接从 Android 版 Firefox 浏览器访问来自世界各地的 50,000 多个广播电台。</span></p><p><span style="background-color:#ffffff; color:#000000">公告称，随着越来越多的开发者创建针对移动设备优化的内容，预计未来几个月还将出现一波新的 Firefox for Android 扩展浪潮。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 15 Dec 2023 02:52:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271154/new-extensions-available-firefox-for-android</guid>
            <link>https://www.oschina.net/news/271154/new-extensions-available-firefox-for-android</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[AI 代码助手盛行，编程语言排行榜都没法做了]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>RedMonk 编程语言排行榜通过追踪编程语言在 GitHub 和 Stack Overflow 上的代码使用情况与讨论数量，统计分析后进行排序，其旨在深入了解潜在的语言采用趋势。因此在众多编程语言榜单中，RedMonk 编程语言排行榜在专业度和认可度方面称得上是业内天花板了。</p><blockquote><p>RedMonk 榜单的数据收集方式包含两部分：<br> -使用 GitHub Archive 作为数据源对 GitHub 数据进行分析；<br> -Stack Overflow 部分则直接使用其提供的实用工具&nbsp;data explorer，具体排序算法见<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fredmonk.com%2Fsogrady%2F2019%2F07%2F18%2Flanguage-rankings-6-19%2F">官方介绍</a>。</p></blockquote><p>该榜单一年发布两次，上次更新是 5 月（<u><a href="https://www.oschina.net/news/241358/redmonk-language-rankings-1-23" target="news">RedMonk 排行：Objective-C 日渐衰落</a></u>）。按照惯例，第 2 次更新是 11 月，但直到现在也没有任何动静。</p><p>昨日，官方<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fredmonk.com%2Frstephens%2F2023%2F12%2F14%2Flanguage-rankings-update%2F" target="_blank">解释</a></u>了为何迟迟不发布新的编程语言榜单——原因是他们按照以往的方式获取数据后发现，收集到的数据量跟往年比较相差巨大。</p><p>自 ChatGPT 发布以来，各种 AI 代码助手大行其道，因此问答社区的整体提问数量大幅下降。而在 GitHub 中，根据 GitHub Archive 的数据，与 2022 年 2 月的 PR 相比，2023 年 1 月的 PR 量下降了约 25%，完全出乎意料。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-fd179e77353ed33816985ce76dfca218f56.png" referrerpolicy="no-referrer"></p><p>RedMonk 称虽然早已知晓 Stack Overflow 的流量已出现显著下滑（<em><u><a href="https://www.oschina.net/news/251072/the-fall-of-stack-overflow" target="news">Stack Overflow 访问量大幅下降</a></u></em>），但没有预料到 GitHub 上的数据会出现如此重大的「异常」。</p><p>因此 RedMonk 指出，基于人工智能的代码助手的出现和兴起已经影响了 RedMonk 语言排名的数据。随着问题和知识共享从公共论坛转移到私人工具，他们从公开数据中确定有意义趋势的能力将无限期地改变。</p><p>RedMonk 称会继续跟踪这些趋势，<strong>并确定样本量的变化将如何影响他们进行排名</strong>，同时预告&nbsp;2024 年 1 月，发布新榜单。</p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 15 Dec 2023 02:50:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271153/redmonk-language-rankings-update</guid>
            <link>https://www.oschina.net/news/271153/redmonk-language-rankings-update</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Google Groups 停止支持 Usenet]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>谷歌宣布从&nbsp;2024 年 2 月 22 日开始，用户无法再使用 Google Groups（网址为 groups.google.com）向 Usenet 群组发布内容、订阅 Usenet 群组，或查看新的 Usenet 内容。但可以继续查看和搜索 2024 年 2 月 22 日之前在 Google Groups 上发布的历史 Usenet 内容。</p><p><img src="https://oscimg.oschina.net/oscnet/up-3d4af7d4780a6e633853c6fc3460057d75c.png" referrerpolicy="no-referrer"></p><p>来源：<u><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsupport.google.com%2Fgroups%2Fanswer%2F11036538%3Fhl%3Den" target="_blank">https://support.google.com/groups/answer/11036538?hl=en</a></em></u></p><p>谷歌表示，在过去几年里，基于文本的 Usenet 群组中的合规活跃已显著下降，因为用户已转向更现代的技术和格式，例如社交媒体和基于 Web 的论坛。目前通过 Usenet 传播的大部分内容都是<strong>二进制（非文本）文件共享</strong>（Google Groups 不支持该项功能），以及垃圾邮件。</p><p>Usenet（/ˈjuːznɛt/）是一种在计算机上可用的全球分布式讨论系统。它是从通用的 Unix 到 Unix 复制（UUCP） 拨号网络架构中发展出来的。</p><p>杜克大学研究生汤姆·特拉斯科特与吉姆·埃利斯在 1979 年设计了 Usenet，并于 1980 年发布。用户阅读和发布消息到一个或多个主题类别，称为「新闻组」。Usenet 在许多方面类似于公告板系统（BBS），并且是现在广泛使用的 Internet 论坛的前身。</p><p>Linux 内核的命运齿轮启动正是由 Usenet 见证——1991 年 8 月 26 日，芬兰大学生 Linus Benedict Torvalds 向 comp.os.minix 新闻组的成员透露了出于 「业余爱好」 而正在研究操作系统，当时 Linus 在邮件中表示自己捣鼓的操作系统只是一个业余性质项目，不会像 GNU 那样庞大和专业。</p><blockquote><p>我正在研究一款（自由的）操作系统（就是个兴趣爱好，我不会搞得像 GNU 那么大那么专业），打算让它工作在 386 (486) AT 平台上。它从四月就开始酝酿了，马上就快好了。我希望那些喜欢或不喜欢 minix 的人能够反馈意见，因为我的系统和它有点类似（同样的文件系统的物理布局 —— 由于实际原因，还有些其他的东西）。</p><p>我现在已经移植了&nbsp;bash (1.08) 和&nbsp;gcc (1.40)， 而且看起来奏效了。这意味着我会在几个月内得到一些实用的东西。我想了解大多数人想要的特性是什么，欢迎各位积极提出建议，不过我不保证能实现 :-)</p><p><img alt="" src="https://static.oschina.net/uploads/space/2019/0826/211817_vyJK_2720166.jpg" referrerpolicy="no-referrer"></p></blockquote></div>
                                    ]]>
            </description>
            <pubDate>Fri, 15 Dec 2023 02:14:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271146</guid>
            <link>https://www.oschina.net/news/271146</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[ChainForge —— 开源可视化编程环境]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="text-align:start"><span><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>ChainForge 是一个数据流提示工程环境，用于分析和评估 LLM 响应。它旨在对提示、聊天响应和响应质量进行早期、快速而直接的探索，而不仅仅是与个别 LLM 的临时聊天。使用 ChainForge，你可以：</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><ul><li><strong>一次查询多个 LLM，</strong>快速有效地测试提示的想法和变化。</li><li><strong>比较不同提示排列、不同模型和不同模型设置的响应质量，</strong>以选择最适合你的用例的提示和模型。</li><li><strong>设置评估指标</strong>（评分函数）并立即可视化提示、提示参数、模型和模型设置的结果。</li><li><strong>跨模板参数和聊天模型同时进行多个对话。</strong>模板不仅仅是提示，还包括后续聊天消息，并在每次聊天对话时检查和评估输出。</li></ul><p style="text-align:start"><span><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>ChainForge 附带了许多示例评估流程，让你了解可能性，其中包括根据 OpenAI 评估中的基准生成的 188 个示例流程。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:start"><span><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span><img alt="" height="186" src="https://static.oschina.net/uploads/space/2023/0808/145508_tLk6_4252687.png" width="500" referrerpolicy="no-referrer"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:start"><span><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span><img alt="" height="322" src="https://static.oschina.net/uploads/space/2023/0808/145813_aswq_4252687.png" width="500" referrerpolicy="no-referrer"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:start"><span><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>ChainForge 的一个关键目标是促进提示和模型的<strong>比较</strong>和<strong>评估</strong>。基本特点是：</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><ul><li><strong>提示排列</strong>：设置提示模板并向其提供输入变量的变体。ChainForge 将提示所有选定的 LLM 以及输入提示的所有可能排列，以便你可以更好地感受到提示质量。你还可以以任意深度链接提示模板（例如，比较模板）。</li><li><strong>聊天轮流</strong>：超越提示和模板后续聊天消息，就像提示一样。你可以测试用户查询的措辞如何改变 LLM 的输出，或者比较多个聊天模型（或具有不同设置的相同聊天模型！）的后续响应的质量。</li><li><strong>模型设置</strong>：更改支持的模型的设置，并比较不同的设置。例如，你可以通过添加多个 ChatGPT 模型、更改单个设置以及给每个模型起暱称来衡量系统消息对 ChatGPT 的影响。ChainForge 将向模型的每个版本发送查询。</li><li><strong>评估节点</strong>：探测链中的 LLM 响应并（经典地）测试它们的某些所需行为。从根本上讲，这是基于 Python 脚本的。计划在不久的将来为常见用例添加预设评估器节点（例如，名称实体识别）。注意，你还可以将 LLM 响应链接到提示模板中，以帮助在更广泛的评估方法之前以较低的成本评估输出。</li><li><strong>可视化节点</strong>：在分组盒须图（对于 <span style="background-color:#ffffff; color:#1f2328">numeric metrics</span>）和直方图（对于 <span style="background-color:#ffffff; color:#1f2328">boolean metrics</span>）等图上可视化评估结果。目前仅支持 <span style="background-color:#ffffff; color:#1f2328">numeric&nbsp;</span>和 <span style="background-color:#ffffff; color:#1f2328">boolean metrics</span>。目标是在未来为用户提供更多的绘图控制和选项。</li></ul><p style="text-align:start"><span><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>总而言之，这些功能可让你轻松：</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><ul><li><strong>比较提示和提示参数</strong>：选择能够最大化你的评估目标指标（例如，最低代码错误率）的最佳提示集。或者，了解更改提示模板中的参数如何影响响​​应的质量。</li><li><strong>跨模型比较</strong>：跨模型和不同模型设置比较每个提示的响应。</li></ul></div>
                                                                ]]>
            </description>
            <pubDate>Fri, 15 Dec 2023 01:55:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/p/chainforge</guid>
            <link>https://www.oschina.net/p/chainforge</link>
        </item>
        <item>
            <title>
                <![CDATA[Gitee 推荐 | 云原生成本优化开源项目 Crane]]>
            </title>
            <description>
                <![CDATA[<h1><a id="user-content-crane-cloud-resource-analytics-and-economics" class="anchor" href="https://gitee.com/gocrane/crane#crane-cloud-resource-analytics-and-economics"></a>Crane: Cloud Resource Analytics and Economics</h1><p><a href="https://gitee.com/link?target=https%3A%2F%2Fgoreportcard.com%2Freport%2Fgithub.com%2Fgocrane%2Fcrane"><img src="https://goreportcard.com/badge/github.com/gocrane/crane" alt="Go Report Card" referrerpolicy="no-referrer"></a><a href="https://gitee.com/link?target=https%3A%2F%2Fgodoc.org%2Fgithub.com%2Fgocrane%2Fcrane"><img src="https://godoc.org/github.com/gocrane/crane?status.svg" alt="GoDoc" referrerpolicy="no-referrer"></a><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.apache.org%2Flicenses%2FLICENSE-2.0.html"><img src="https://img.shields.io/github/license/gocrane/crane" alt="License" referrerpolicy="no-referrer"></a><img src="https://img.shields.io/github/go-mod/go-version/gocrane/crane" alt="GoVersion" referrerpolicy="no-referrer"></p><div align="center"><img alt="Crane logo" height="100" src="https://gitee.com/gocrane/crane/raw/main/docs/images/crane.svg" title="Crane" width="200" referrerpolicy="no-referrer"></div><hr><h2><a id="user-content-crane-是什么" class="anchor" href="https://gitee.com/gocrane/crane#crane-%E6%98%AF%E4%BB%80%E4%B9%88"></a>Crane 是什么</h2><blockquote><p><a href="https://gitee.com/gocrane/crane/blob/main/README.md">English</a> | 中文</p></blockquote><p>Crane 是一个基于 FinOps 的云资源分析与成本优化平台。它的愿景是在保证客户应用运行质量的前提下实现极致的降本。</p><div align="center"><img alt="fcs logo" height="200" src="https://gitee.com/gocrane/crane/raw/main/docs/images/Crane-FinOps-Certified-Solution.png" title="FinOps Certified Solution" width="200" referrerpolicy="no-referrer"></div><p>Crane 是 <a href="https://gitee.com/link?target=https%3A%2F%2Fwww.finops.org%2F">FinOps 基金会</a>认证的<a href="https://gitee.com/link?target=https%3A%2F%2Fwww.finops.org%2Fcertifications%2Ffinops-certified-solution%2F">云优化方案</a>。</p><p><strong>如何在 Crane 中开启成本优化之旅？</strong></p><ol><li><strong>成本展示</strong>: Kubernetes 资源 ( Deployments, StatefulSets ) 的多维度聚合与展示。</li><li><strong>成本分析</strong>: 周期性的分析集群资源的状态并提供优化建议。</li><li><strong>成本优化</strong>: 通过丰富的优化工具更新配置达成降本的目标。</li></ol><p><a href="https://gitee.com/link?target=https%3A%2F%2Fuser-images.githubusercontent.com%2F35299017%2F186680122-d7756b47-06be-44cb-8553-1957eaa3ed45.mp4">https://user-images.githubusercontent.com/35299017/186680122-d7756b47-06be-44cb-8553-1957eaa3ed45.mp4</a></p><p>Crane Dashboard <strong>在线 Demo</strong>: <a href="https://gitee.com/link?target=http%3A%2F%2Fdashboard.gocrane.io%2F">http://dashboard.gocrane.io/</a></p><h2><a id="user-content-main-features" class="anchor" href="https://gitee.com/gocrane/crane#main-features"></a>Main Features</h2><img alt="Crane Overview" height="330" src="https://gitee.com/gocrane/crane/raw/main/docs/images/crane-overview.png" width="900" referrerpolicy="no-referrer"><p><strong>成本可视化和优化评估</strong></p><ul><li>提供一组 Exporter 计算集群云资源的计费和账单数据并存储到你的监控系统，比如 Prometheus。</li><li>多维度的成本洞察，优化评估。通过 <code>Cloud Provider</code> 支持多云计费。</li></ul><p><strong>推荐框架</strong></p><p>提供了一个可扩展的推荐框架以支持多种云资源的分析，内置了多种推荐器：资源推荐，副本推荐，闲置资源推荐。<a href="https://gitee.com/link?target=https%3A%2F%2Fgocrane.io%2Fzh-cn%2Fdocs%2Ftutorials%2Frecommendation%2F">了解更多</a></p><p><strong>基于预测的水平弹性器</strong></p><p>EffectiveHorizontalPodAutoscaler 支持了预测驱动的弹性。它基于社区 HPA 做底层的弹性控制，支持更丰富的弹性触发策略（预测，观测，周期），让弹性更加高效，并保障了服务的质量。<a href="https://gitee.com/link?target=https%3A%2F%2Fgocrane.io%2Fzh-cn%2Fdocs%2Ftutorials%2Fusing-effective-hpa-to-scaling-with-effectiveness%2F">了解更多</a></p><p><strong>负载感知的调度器</strong></p><p>动态调度器根据实际的节点利用率构建了一个简单但高效的模型，并过滤掉那些负载高的节点来平衡集群。<a href="https://gitee.com/link?target=https%3A%2F%2Fgocrane.io%2Fzh-cn%2Fdocs%2Ftutorials%2Fscheduling-pods-based-on-actual-node-load%2F">了解更多</a></p><p><strong>基于 QOS 的混部</strong></p><p>QOS 相关能力保证了运行在 Kubernetes 上的 Pod 的稳定性。具有多维指标条件下的干扰检测和主动回避能力，支持精确操作和自定义指标接入；具有预测算法增强的弹性资源超卖能力，复用和限制集群内的空闲资源；具备增强的旁路 cpuset 管理能力，在绑核的同时提升资源利用效率。<a href="https://gitee.com/gocrane/crane/blob/main/docs/tutorials/using-qos-ensurance.zh.md">了解更多</a>。</p><h2><a id="user-content-架构" class="anchor" href="https://gitee.com/gocrane/crane#%E6%9E%B6%E6%9E%84"></a>架构</h2><p>Crane 的整体架构如下：</p><img alt="Crane Overview" height="550" src="https://gitee.com/gocrane/crane/raw/main/docs/images/crane-arch.png" referrerpolicy="no-referrer"><p><strong>Craned</strong></p><p>Craned 是 Crane 的最核心组件，它管理了 CRDs 的生命周期以及 API。Craned 通过 <code>Deployment</code> 方式部署且由两个容器组成：</p><ul><li>Craned: 运行了 Operators 用来管理 CRDs，向 Dashboard 提供了 WebApi，Predictors 提供了 TimeSeries API</li><li>Dashboard: 基于 TDesign's Starter 脚手架研发的前端项目，提供了易于上手的产品功能</li></ul><p><strong>Fadvisor</strong></p><p>Fadvisor 提供一组 Exporter 计算集群云资源的计费和账单数据并存储到你的监控系统，比如 Prometheus。Fadvisor 通过 <code>Cloud Provider</code> 支持了多云计费的 API。</p><p><strong>Metric Adapter</strong></p><p>Metric Adapter 实现了一个 <code>Custom Metric Apiserver</code>. Metric Adapter 读取 CRDs 信息并提供基于 <code>Custom/External Metric API</code> 的 HPA Metric 的数据。</p><p><strong>Crane Agent</strong></p><p>Crane Agent 通过 <code>DaemonSet</code> 部署在集群的节点上。</p><h2><a id="user-content-快速开始" class="anchor" href="https://gitee.com/gocrane/crane#%E5%BF%AB%E9%80%9F%E5%BC%80%E5%A7%8B"></a>快速开始</h2><ul><li><a href="https://gitee.com/link?target=https%3A%2F%2Fgocrane.io%2Fzh-cn%2Fdocs%2Fgetting-started%2Fintroduction%2F">介绍</a></li><li><a href="https://gitee.com/link?target=https%3A%2F%2Fgocrane.io%2Fzh-cn%2Fdocs%2Fgetting-started%2Finstallation%2Fquick-start%2F">快速开始</a></li><li><a href="https://gitee.com/link?target=https%3A%2F%2Fgocrane.io%2Fzh-cn%2Fdocs%2Ftutorials%2F">教程</a></li></ul><h2><a id="user-content-文档" class="anchor" href="https://gitee.com/gocrane/crane#%E6%96%87%E6%A1%A3"></a>文档</h2><p>完整的文档请<a href="https://gitee.com/link?target=https%3A%2F%2Fgocrane.io%2Fzh-cn">查看</a>。</p><h2><a id="user-content-社区" class="anchor" href="https://gitee.com/gocrane/crane#%E7%A4%BE%E5%8C%BA"></a>社区</h2><ul><li><p>Slack(English): <a href="https://gitee.com/link?target=https%3A%2F%2Fjoin.slack.com%2Ft%2Fgocrane%2Fshared_invite%2Fzt-1k3beos1i-ejN6sV0jx5_MAkKRbl~MFQ">https://gocrane.slack.com</a></p></li><li><p>微信群:</p></li></ul><img alt="Wechat" src="https://user-images.githubusercontent.com/6251116/226240172-53bae906-3abc-4b04-89d5-eee11c13faaa.png" title="Wechat" width="200" referrerpolicy="no-referrer"><img alt="Wechat" src="https://gitee.com/gocrane/crane/raw/main/docs/images/wechat.jpeg" title="Wechat" width="200" referrerpolicy="no-referrer"><p>添加微信后回复 "Crane"，小助手会定期将您加入微信群。</p><ul><li>社区双周会 (APAC, Chinese)
<ul><li><a href="https://gitee.com/link?target=https%3A%2F%2Fmeeting.tencent.com%2Fdm%2FSjY20wCJHy5F">Meeting Link</a></li><li><a href="https://gitee.com/link?target=https%3A%2F%2Fdoc.weixin.qq.com%2Fdoc%2Fw3_AHMAlwa_AFU7PT58rVhTFKXV0maR6%3Fscode%3DAJEAIQdfAAo0gvbrCIAHMAlwa_AFU">Meeting Notes</a></li><li><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.wolai.com%2F33xC4HB1JXCCH1x8umfioS">Video Records</a></li></ul></li></ul><h2><a id="user-content-roadmap" class="anchor" href="https://gitee.com/gocrane/crane#roadmap"></a>RoadMap</h2><p><a href="https://gitee.com/gocrane/crane/blob/main/docs/roadmaps/roadmap-2022.md">了解更多</a>。</p><h2><a id="user-content-如何贡献" class="anchor" href="https://gitee.com/gocrane/crane#%E5%A6%82%E4%BD%95%E8%B4%A1%E7%8C%AE"></a>如何贡献</h2><p>欢迎参与贡献 Crane 项目。请参考 <a href="https://gitee.com/gocrane/crane/blob/main/CONTRIBUTING.md">CONTRIBUTING</a> 了解如何参与贡献。</p><p>关于如何参与 Crane 的开发，你可以参考 <a href="https://gitee.com/gocrane/crane/blob/main/docs/developer-guide.md">开发文档</a>。</p><h2><a id="user-content-行为准则" class="anchor" href="https://gitee.com/gocrane/crane#%E8%A1%8C%E4%B8%BA%E5%87%86%E5%88%99"></a>行为准则</h2><p>Crane 采用了 <a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fcncf%2Ffoundation%2Fblob%2Fmaster%2Fcode-of-conduct.md">CNCF Code of Conduct</a>.</p>]]>
            </description>
            <pubDate>Fri, 15 Dec 2023 01:50:00 GMT</pubDate>
            <guid isPermaLink="false">https://gitee.com/gocrane/crane</guid>
            <link>https://gitee.com/gocrane/crane</link>
        </item>
        <item>
            <title>
                <![CDATA[每日一博 | 理解 Mysql 索引原理及特性]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0px; margin-right:0px; text-align:left">作为开发人员，碰到了执行时间较长的 sql 时，基本上大家都会说」加个索引吧」。但是索引是什么东西，索引有哪些特性，下面和大家简单讨论一下。</p><span id="OSC_h1_1"></span><h1>1 索引如何工作，是如何加快查询速度</h1><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">索引就好比书本的目录，提高数据库表数据访问速度的数据库对象。当我们的请求打过来之后，如果有目录，就会快速的定位到章节，再从章节里找到数据。如果没有目录，如大海捞针一般，难度可见一斑。这就是我们经常碰到的罪魁祸首，全表扫描。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">一条索引记录中包含的基本信息包括：键值（即你定义索引时指定的所有字段的值）+逻辑指针（指向数据页或者另一索引页）。通常状况下，由于索引记录仅包含索引字段值（以及 4-9 字节的指针），索引实体比真实的数据行要小许多，索引页相较数据页来说要密集许多。一个索引页可以存储数量更多的索引记录，这意味着在索引中查找时在 I/O 上占很大的优势，理解这一点有助于从本质上了解使用索引的优势，也是大部分性能优化所需要切入的点。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">1）没有索引的情况下访问数据：</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://img1.jcloudcs.com/developer.jdcloud.com/0c0cace5-88ad-42da-95e9-0c7518db68fa20220518151143.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">2）使用平衡二叉树结构索引的情况下访问数据：</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://img1.jcloudcs.com/developer.jdcloud.com/bad080ed-9e20-487d-8b2c-72cc65379a6d20220518151201.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">第一张图没有使用索引我们会进行顺序查找，依照数据顺序逐个进行匹配，进行了 5 次寻址才查询出所需数据，第二张图用了一个简单的平衡二叉树索引之后我们只用了 3 次，这还是数据量小的情况下，数据量大了效果更明显，所以总结来说创建索引就是为了加快数据查找速度；</p><span id="OSC_h1_2"></span><h1>2 索引的组成部分和种类</h1><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">常见的索引的实现方式有很多种，比如 hash、数组、树，下面为大家介绍下这几种模型使用上有什么区别</p><span id="OSC_h3_3"></span><h3>2.1 hash</h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">hash 思路简单，就是把我们插入的 key 通过 hash 函数算法 (以前一般是取余数，就好比 hashmap 的计算方式移位异或之类的)，计算出对应的 value，把这个 value 放到一个位置，这个位置叫做哈希槽。对应磁盘位置指针放入 hash 槽里面。一句话总结 hash 索引，就是存储了索引字段的 hash 值和数据所在磁盘文件指针。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">但是不可避免的是，无论什么算法，数据量大了之后难免会出现不同的数据被放在一个 hash 槽里面。比如字典上的 「吴」和」武」就是同音，你查字典的时候到这里只能顺序往下去找了。索引的处理也是这样，会拉出一个链表，需要的时候顺序遍历即可。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://img1.jcloudcs.com/developer.jdcloud.com/89334960-0eef-4905-bfc1-e2d51f727a5f20220518151225.png" referrerpolicy="no-referrer"></p><ul><li>缺点：无序索引，区间查询性能低，因为区间查询会造成多次访问磁盘，多次 io 耗时是很难接受的。</li><li>优点：insert 迅速，只需往后补就行</li><li>场景：等值查询， 比如 memcached 。不适用大量重复数据的列，避免 hash 冲突</li><li>总结：想成 java 的 hashmap 即可</li></ul><span id="OSC_h3_4"></span><h3>2.2 有序数组</h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">如果我们需要区间查询的时候，hash 索引的性能就不尽如人意了。这个时候有序数组的优势就能体现出来了。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">当我们需要从一个有序数组里取 A 和 B 之间的值时，只需要通过二分法定位到 A 的位置，时间复杂度 O(log(N)),接着从 A 遍历到 B 即可，论速度的话，基本上可以说是最快的了。但是当我们需要更新的时候，需要进行的操作就很多了。如果需要插入一条数据，你需要挪动数据之后的所有数据，浪费性能。所以总结来说，只有不怎么变化的数据适合有序数组结构的索引。</p><ul><li>缺点：insert 新数据的时候，需要改变后续所有数据，成本略高。</li><li>优点：查询速度很快，理论最大值。</li><li>场景：归档查询，日志查询等极少变化的</li><li>总结：就是顺序排的数组</li></ul><span id="OSC_h3_5"></span><h3>2.3 二叉搜索树</h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">基本原则是树的左节点都小于父节点，右节点都大于父节点</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://img1.jcloudcs.com/developer.jdcloud.com/d7db16ff-ef8f-43d1-976f-3be199a8a17520220518151308.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">这里我们就能看出来，二叉搜索树的查询效率原则上是 O(log(N))，为了保证是平衡二叉树，更新效率也是 O(log(N))。但是数据很多的情况树的高度会达到很高，过多次访问磁盘，是不可取的。并且极端情况下，树退化成链表，查询的复杂度会被拉成 O(n)。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">进化成多叉树，也就是多个子节点的时候，会大大的减少树的高度，降低访问磁盘。</p><ul><li>缺点：数据量大的时候，树会过高，导致多次访问磁盘</li><li>优点：进化成多叉树，会降低树高，访问磁盘次数。</li><li>场景：适用很多场景</li><li>总结：左小右大的树</li></ul><span id="OSC_h3_6"></span><h3>2.4 B 树</h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">在每个节点存储多个元素，在每个节点尽可能多的存储数据。每个节点可以存储 1000 个索引（16k/16=1000），这样就将二叉树改造成了多叉树，通过增加树的叉树，将树从高瘦变为矮胖。构建 1 百万条数据，树的高度只需要 2 层就可以（1000*1000=1 百万），也就是说只需要 2 次磁盘 IO 就可以查询到数据。磁盘 IO 次数变少了，查询数据的效率也就提高了。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">这种数据结构我们称为 B 树，B 树是一种多叉平衡查找树</p><span id="OSC_h3_7"></span><h3>2.5 B+树</h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">B+树和 B 树最主要的区别在于非叶子节点是否存储数据的问题。</p><ul><li>B 树：非叶子节点和叶子节点都会存储数据。</li><li>B+树：只有叶子节点才会存储数据，非叶子节点至存储键值。叶子节点之间使用双向指针连接，最底层的叶子节点形成了一个双向有序链表。</li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://img1.jcloudcs.com/developer.jdcloud.com/dae49342-5708-486d-bfc8-ef08438f97d420220518151353.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">正是因为 B+树的叶子节点是通过链表连接的，所以找到下限后能很快进行区间查询，比正常的中序遍历快</p><span id="OSC_h1_8"></span><h1>3 索引的维护</h1><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">当你 insert 一条数据的时候，索引需要做出必要的操作来保证数据的有序型。一般自增数据直接在后面加就行了，特殊情况下如果数据加到了中间，就需要挪动后面所有的数据，这样效率比较受影响。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">最糟糕的情况，如果当前的数据页（页是 mysql 存储的最小单位）存满了，需要申请一个新的数据页，这个过程被称为页分裂。如果造成了页分裂的话，势必会造成性能的影响。但是 mysql 并不是无脑的数据分裂，如果你是从中间进行数据分裂的话，对于自增主键，会导致一半的性能浪费。mysql 会根据你的索引的类型，和追踪插入数据的情况决定分裂的方式，一般都存在 mysql 数据页的 head 里面，如果是零散的插入，会从中间分裂。如果是顺序插入，一般是会选择插入点开始分裂，或者插入点往后几行导致的。决定是否从中间分裂，还是从最后分裂。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://img1.jcloudcs.com/developer.jdcloud.com/852d73fd-8b03-4a8d-9a02-ef5fc3af0dc020220518151424.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">如果插入的是不规则的数据，没法保证后一个值比前一个大，就会触发上面说的分裂逻辑，最后达到下面的效果</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://img1.jcloudcs.com/developer.jdcloud.com/94e8b55f-3a09-424f-a02c-4386bcd1e00820220518151446.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">所以绝大多数情况下，我们都需要使用自增索引，除非需要业务自定义主键，最好能保证只有一个索引，且索引是唯一索引。这样可以避免回表，导致查询搜索两棵树。保证数据页的有序性，可以更好的使用索引。</p><span id="OSC_h1_9"></span><h1>4 回表</h1><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">通俗的讲就是，如果索引的列在 select 所需获得的列中（因为在 mysql 中索引是根据索引列的值进行排序的，所以索引节点中存在该列中的部分值）或者根据一次索引查询就能获得记录就不需要回表，如果 select 所需获得列中有大量的非索引列，索引就需要先找到主键，再到表中找到相应的列的信息，这就叫回表。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">要介绍回表自然就得介绍聚集索引和非聚集索引<br> InnoDB 聚集索引的叶子节点存储行记录，因此， InnoDB 必须要有，且只有一个聚集索引：</p><ul><li>如果表定义了主键，则 PK 就是聚集索引；</li><li>如果表没有定义主键，则第一个非空唯一索引（not NULL unique）列是聚集索引；</li><li>否则，InnoDB 会创建一个隐藏的 row-id 作为聚集索引；</li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://img1.jcloudcs.com/developer.jdcloud.com/4d39742a-3d3e-46ae-b8b8-4a0cfc210bea20220518151519.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">当我们使用普通索引查询方式，则需要先搜索普通索引树，然后得到主键 ID 后，再到 ID 索引树搜索一次。因为非主键索引的叶子节点里面，实际存的是主键的 ID。这个过程虽然用了索引，但实际上底层进行了两次索引查询，这个过程就称为回表。也就是说，基于非主键索引的查询需要多扫描一棵索引树。因此，我们在应用中应该尽量使用主键查询。或者有高频请求时，合理建立联合索引，防止回表。</p><span id="OSC_h1_10"></span><h1>5 索引覆盖</h1><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">一句话表达的话，是只需要在一棵索引树上就能获取 SQL 所需的所有列数据，无需回表，速度更快。落实到 sql 上的话，只要执行计划里面的输出结果 Extra 字段为 Using index 时，能够触发索引覆盖。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">常见的优化手段，就是上面提到的，将查询的字段都建到索引里面，至于 dba 愿不愿意让你建，那就需要你们自己 battle 了。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">一般索引覆盖适用的场景包括，全表 count 查询优化、列查询回表、分页回表。高版本的 mysql 已经做了优化，当命中联合索引的其中一个字段，另外一个是 id 的时候，会自动优化，无需回表。因为二级索引的叶子上存了 primary key，也算索引覆盖，无需额外成本。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://img1.jcloudcs.com/developer.jdcloud.com/3de168ed-d16a-40b9-918f-5708a5afd79320220518151542.png" referrerpolicy="no-referrer"></p><span id="OSC_h1_11"></span><h1>6 最左匹配原则</h1><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">简单来说，就是你使用 ‘xx%’的时候，符合条件的话也会使用索引。<br> 如果是联合索引的话，我举个例子，创建一个（a,b）的联合索引</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://img1.jcloudcs.com/developer.jdcloud.com/2667417a-9461-42ab-9aba-a9672163013220220518151604.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">可以看到 a 的值是有顺序的，1，1，2，2，3，3，而 b 的值是没有顺序的 1，2，1，4，1，2。但是我们又可发现 a 在等值的情况下，b 值又是按顺序排列的，但是这种顺序是相对的。这是因为 MySQL 创建联合索引的规则是首先会对联合索引的最左边第一个字段排序，在第一个字段的排序基础上，然后在对第二个字段进行排序。所以 b=2 这种查询条件没有办法利用索引。举个例子，我弄一个索引，<br> KEY<span>&nbsp;</span><code>idx_time_zone</code><span>&nbsp;</span>(<code>time_zone</code>,<code>time_string</code>) USING BTREE<br> 执行第一条 sql,全表扫描</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://img1.jcloudcs.com/developer.jdcloud.com/716156a7-d4a8-4ba3-8b26-d323c616b57120220518151840.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">执行第二条 sql，可以看到使用了索引。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://img1.jcloudcs.com/developer.jdcloud.com/7d52aa89-3d81-44d9-a0ee-d22f39b9a1bb20220518151851.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">再看两条 sql，建立的索引是 KEY<span>&nbsp;</span><code>idx_time_zone</code><span>&nbsp;</span>(<code>time_zone</code>,<code>time_string</code>) USING BTREE</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://img1.jcloudcs.com/developer.jdcloud.com/99932f6e-53a8-4e76-a929-2d182bf661af20220518151906.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://img1.jcloudcs.com/developer.jdcloud.com/522e9e70-cd83-4e7d-a11f-06772def669720220518151913.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">按照正常逻辑来说，第二条 sql 是不符合索引字段的顺序的，应该不能使用索引才对，但是实际情况却和我们期望的不太一样，这是为啥呢？</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">从 mysql 被 oracle 收购以后，mysql 加入了很多 oracle 以前的技术，高版本 mysql 自动优化了 where 条件的先后顺序。简单来说就是查询优化器做了这一步操作，sql 会做预处理，那一条能更好的查询就会使用那种规则。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">顺便提一下 mysql 的查询优化器能帮忙干的一些事</p><span id="OSC_h3_12"></span><h3>6.1 条件转化</h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">例如 where a=b and b=2，可以得到 a=2,条件传递。最后的 sql 是 a=2 and b=2 &gt; &lt; = like 都可以传递</p><span id="OSC_h3_13"></span><h3>6.2 无效代码的排除</h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">例如 where 1=1 and a=2, 1=1 永远是正确的，所以最后会优化成 a=2<br> 在比如 where 1=0 永远是 false 的，这样的也会被排除掉，整 sql 无效<br> 或者非空字段 where a is null ,这样的也会被排除</p><span id="OSC_h3_14"></span><h3>6.3 提前计算</h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">包含数学运算的部分，例如 where a= 1+2 会帮你算好，where a=3</p><span id="OSC_h3_15"></span><h3>6.4 存取类型</h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">当我们评估一个条件表达式，MySQL 判断该表达式的存取类型。下面是一些存取类型，按照从最优到最差的顺序进行排列：</p><ul><li>system 系统表，并且是常量表</li><li>const 常量表</li><li>eq_ref unique/primary 索引，并且使用的是’=’进行存取</li><li>ref 索引使用’=’进行存取</li><li>ref_or_null 索引使用’=’进行存取，并且有可能为 NULL</li><li>range 索引使用 BETWEEN、IN、&gt;=、LIKE 等进行存取</li><li>index 索引全扫描</li><li>ALL 表全扫描</li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">经常看执行计划的，一眼就能看出来这是啥意思，举个例子</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">where index_col=2 and normal_col =3 这里就会选用 index_col=2 会作为驱动项。驱动项的意思是指一个 sql 选定他的执行计划的时候，可能有多条执行路径，一个是全表扫描，再过滤是否符合索引字段及非索引字段的值。另一种是通过索引字段，键值=2 找到对应的索引树，过滤后的结果，再比较是否符合非索引字段的值。一般情况下，走索引都比全表扫描需要读取磁盘的次数少，所以称它为更好的执行路径，也就是通过索引字段，作为其驱动表达式</p><span id="OSC_h3_16"></span><h3>6.5 范围存取</h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">简单来说，a in(1,2,3) 和 a=1 or a=2 or a=3 是一样的，between 1 and 2 和 a&gt;1 and a&lt;2 也是一样的， 无需可以优化。</p><span id="OSC_h3_17"></span><h3>6.6 索引存取类型</h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">避免使用相同前缀的索引，也就是一个字段不要在多个索引上有相同的前缀。比如一个字段已经建立了唯一索引，这个时候如果再给他建立一个联合索引，会导致优化器并不知道你要使用哪个索引。或者你建了前缀相同的一个单索引，一个联合索引，就算你写上了条件，也不一定能用上联合索引。当然，可以 force，这就另说了。</p><span id="OSC_h3_18"></span><h3>6.7 转换</h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">简单的表达式可以进行转换，比如 where -2 = a 会自动变成 where a= -2 ，但是如果牵扯到数学运算，就不能转换了，比如 where 2= -a 这时候不会自动转成 where a =-2.</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://img1.jcloudcs.com/developer.jdcloud.com/b6540c88-243d-482f-99c4-b9450e5d91b820220518152102.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">第二条 sql 就可以使用索引</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://img1.jcloudcs.com/developer.jdcloud.com/6cd2d32d-d033-4cc0-8913-d7d7ee152df420220518152115.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">所以，我们在开发的过程中，需要注意 sql 的写法，自觉写成 where a=-2</p><span id="OSC_h3_19"></span><h3>6.8 and、union、order by、group by 等</h3><p>1）and</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">and 条件后，如果都没索引，扫描全表。有一个存取类型更好，见 5.4 ,会使用存储类型更好的索引，如果都一样，哪个索引先创建，用哪个。</p><p>2）union</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">union 每条语句单独优化</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://img1.jcloudcs.com/developer.jdcloud.com/b9614405-17ae-4603-ac8e-829d32ce431e20220518152156.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">这里就会分别执行两条 sql，用到索引，再合并结果集</p><span id="OSC_h4_20"></span><h4>3）order by</h4><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">order by 会过滤无效排序，比如一个字段本来就有索引</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://img1.jcloudcs.com/developer.jdcloud.com/b722a940-cc4f-452d-ac78-de4b2874a4a920220518152333.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">第二条 sql 和第一条的查询效果是一样的</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://img1.jcloudcs.com/developer.jdcloud.com/e2e6d9a2-3d82-460c-b745-dfcfc150684120220518152355.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">所以，写 sql 的时候，不要写无用排序，比如 order by ‘xxx’ 这样没有意义。</p><p>4）group by</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">简单来说 group by 的字段，有索引会走索引，group by a order by a 这里的 order by 等于没写，结果集已经是排序完毕的了，参考 6.8-3 order by<br> select distinct col_a from table a 等价于 select col_a from a group by col_a</p><span id="OSC_h1_21"></span><h1>7 索引下推</h1><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">主要的核心点就在于把数据筛选的过程放在了存储引擎层去处理，而不是像之前一样放到 Server 层去做过滤。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">如果在一张表上，name 和 age 都建立索引，查询条件为 where name like ‘xx%’ and age=11,在低版本的 mysql(5.6 以下) 的根据索引的最左匹配原则，可以得到放弃了 age，只根据 name 过滤数据。根据 name 拿到所有的 id 之后，再根据 id 回表。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">高版本 mysql 里，没有忽略 age 这个属性，带着 age 属性过滤，直接过滤掉了 age 为 11 的数据，假设不根据 age 过滤的数据为 10 条，过滤后只剩 3 条，就少了 7 次回表。减少了 io 会大量减少性能消耗</p><span id="OSC_h1_22"></span><h1>8 小表驱动大表</h1><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">小表驱动大表，也是我们听惯了的话了，其含义主要是指小表的数据集驱动大表的数据集，减少连接次数。打个比方:</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">表 A 有 1w 数据，表 B 有 100w 数据，如果 A 表作为驱动表，处于循环的外层，那么只需要 1w 次的连接即可。如果 B 表在外层，那么则需要循环 100w 次。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">下面我们实际测试看看，准备环境 mysql 5.7+</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://img1.jcloudcs.com/developer.jdcloud.com/332fc02e-0855-4d5c-9640-3729fb97671f20220518152438.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">准备两张表，一张表 ib_asn_d 数据 9175， 一张表 bs_itembase_ext_attr 数据 1584115，都在商品编码字段上有索引。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">首先小表驱动大表</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://img1.jcloudcs.com/developer.jdcloud.com/8ae8c5a2-fc81-404e-939c-4c5a846038aa20220518152459.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">多次反复测试，执行时间大概 7 秒。<br> 接下来看看大表驱动小表。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://img1.jcloudcs.com/developer.jdcloud.com/84f43596-24b7-426a-a95e-5de71817c7c120220518152511.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">将近 300 秒，不是一个量级的。<br> 接下来分别分析执行计划，执行计划里第一条就是驱动表。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://img1.jcloudcs.com/developer.jdcloud.com/4db8a038-c193-4a8a-bf50-90fbf633d61320220518152521.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">小表驱动大表，大表用了索引，小表全表扫描，只扫描 8000 多行</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://img1.jcloudcs.com/developer.jdcloud.com/c49f2138-2027-4b77-8748-0e0fc160950c20220518152612.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">大表驱动小表，大表全表扫描，需要扫描 147w 行。<br> 经过多次测试得出了结论:</p><ol><li>当使用 left join 时，左表是驱动表，右表是被驱动表 ;</li><li>当使用 right join 时，右表是驱动表，左表是被驱动表 ;</li><li>当使用 inner join 时，mysql 会选择数据量比较小的表作为驱动表，大表作为被驱动表 ;</li><li>驱动表索引不生效，非驱动表索引生效</li></ol><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">保证小表是驱动表很重要。</p><span id="OSC_h1_23"></span><h1>9 总结</h1><ol><li>覆盖索引：如果查询条件使用的是普通索引（或是联合索引的最左原则字段），查询结果是联合索引的字段或是主键，不用回表操作，直接返回结果，减少 IO 磁盘读写读取整行数据，所以高频字段建立联合索引是很有必要的</li><li>最左前缀：联合索引的最左 N 个字段，也可以是字符串索引的最左 M 个字符。建立索引的时候，注意左前缀不要重复，避免查询优化器无法判定如何使用索引</li><li>索引下推：name like ‘hello%’and age &gt;10 检索，MySQL 5.6 版本之前，会对匹配的数据进行回表查询。5.6 版本后，会先过滤掉 age&lt;10 的数据，再进行回表查询，减少回表率，提升检索速度</li></ol><blockquote><p>作者：京东物流&nbsp;吴思维&nbsp;<br> 来源：京东云开发者社区，转载请注明来源</p></blockquote></div>
                                    ]]>
            </description>
            <pubDate>Fri, 15 Dec 2023 01:47:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/4090830/blog/10320986</guid>
            <link>https://my.oschina.net/u/4090830/blog/10320986</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[鸿蒙系统即将走向独立，多家高校设立「鸿蒙班」]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">澎湃新闻报道称，华为以及鸿蒙系软件厂商正在积极培养鸿蒙开发人才。其中，产学联动、产教融合来培养鸿蒙生态人才是重要的一条路径，很多高校已经设立了「鸿蒙班」。目前已有 23 家 985 高校、46 家 211 高校已开设或即将开设 HarmonyOS 相关课程。</span></p><p><span style="color:#000000">一位鸿蒙生态内部人士表示，目前鸿蒙开发人才比较紧缺，而安卓开发人才相对过剩，掌握鸿蒙的技术人员待遇比安卓开发人员要好一些，这使得很多开发人员愿意转岗鸿蒙开发。</span></p><p><span style="color:#000000">「鸿蒙开发难度并不大，基本上培训 1-2 个月就可以开发了。但很多人认为鸿蒙不好做主要是工具比较少，其中常用的工具就那么几十种，但有些时候需要用到不常用的工具，安卓有几千个上万个工具，鸿蒙还比较少，需要开源成员不断去开发工具。」</span></p><p><span style="color:#000000"><img alt="" height="281" src="https://oscimg.oschina.net/oscnet/up-5af2a19b40efd2d0cf528af680c4e240062.jpg" width="500" referrerpolicy="no-referrer"></span></p><p><span style="color:#000000">目前，南京大学已开设了《移动互联网软件工程》课程，将 HarmonyOS 作为课程核心，替换了原有的安卓开发课程。南京大学教授刘钦表示：</span></p><blockquote><p><span style="color:#000000">2010 年安卓生态刚起步时南大就开设了安卓课程，安卓那个时代是先进科学，从来没有看到那么大的一个开源手机操作系统，我们开设了安卓开发课程。如今是一个万物互联时代，鸿蒙操作系统给出的整套思路是针对万物互联的，能够连接各种设备，我们认为在移动互联网时代，学生以后从事软件开发工作，你掌握这个很有必要，所以我们选择这个时候开设这门课。</span></p><p><span style="color:#000000">我们这个是必选课，我们预计是 150-180 人之间，实际上有多少人选呢？230 多人，这个超出我们的预计，说明学生对鸿蒙操作系统还是愿意去学的。</span></p></blockquote><p><span style="color:#000000">刘钦之前还曾公开表达过用鸿蒙替代安卓的意义，HarmonyOS 不再是「多一个选择」，而是「对安卓的替代」。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 14 Dec 2023 10:24:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271083</guid>
            <link>https://www.oschina.net/news/271083</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[ChatGPT 作为非人类入选 Nature 2023 年度十大科学人物]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>顶级科学期刊《Nature》公布 2023 年在科学领域产生重大影响的十位人物。<span style="font-family:-apple-system,BlinkMacSystemFont,&quot;Apple Color Emoji&quot;,&quot;Segoe UI Emoji&quot;,&quot;Segoe UI Symbol&quot;,&quot;Segoe UI&quot;,&quot;PingFang SC&quot;,&quot;Hiragino Sans GB&quot;,&quot;Microsoft YaHei&quot;,&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif">让人惊讶的是，今年还有一位</span><strong style="font-family:-apple-system,BlinkMacSystemFont,&quot;Apple Color Emoji&quot;,&quot;Segoe UI Emoji&quot;,&quot;Segoe UI Symbol&quot;,&quot;Segoe UI&quot;,&quot;PingFang SC&quot;,&quot;Hiragino Sans GB&quot;,&quot;Microsoft YaHei&quot;,&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif">非人类入选</strong><span style="font-family:-apple-system,BlinkMacSystemFont,&quot;Apple Color Emoji&quot;,&quot;Segoe UI Emoji&quot;,&quot;Segoe UI Symbol&quot;,&quot;Segoe UI&quot;,&quot;PingFang SC&quot;,&quot;Hiragino Sans GB&quot;,&quot;Microsoft YaHei&quot;,&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif"> ，那就是过去一年出尽风头的聊天机器人：<strong>ChatGPT</strong>。</span></p><blockquote><p><img src="https://oscimg.oschina.net/oscnet/up-6233f0c596f17c60e86a39faa3edff571b7.png" referrerpolicy="no-referrer"></p><p>来源：<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.nature.com%2Farticles%2Fd41586-023-03930-6" target="_blank">https://www.nature.com/articles/d41586-023-03930-6</a></u></p></blockquote><p>《自然》特写部主编 Richard Monastersky 表示： 「<strong>虽然这个工具不算人物，也不完全满足《自然》十大人物的评选条件，但我们将其破例纳入榜单，从而承认生成式 AI 给科学发展和进步带来的巨大改变。</strong>」</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-3ed50fc4e10684a58c8fbb439cb06452944.png" referrerpolicy="no-referrer"></p><p>选 ChatGPT 或许是为了「节目效果」，但「真正的 ChatGPT 之父」——<span style="font-family:-apple-system,BlinkMacSystemFont,&quot;Apple Color Emoji&quot;,&quot;Segoe UI Emoji&quot;,&quot;Segoe UI Symbol&quot;,&quot;Segoe UI&quot;,&quot;PingFang SC&quot;,&quot;Hiragino Sans GB&quot;,&quot;Microsoft YaHei&quot;,&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif">OpenAI 首席科学家 Ilya Sutskever 入选可谓是当之无愧，《自然》杂志给出的上榜理由是「<strong>ChatGPT 和其他正在改变社会的人工智能系统的先驱</strong>」。</span></p><p><img src="https://oscimg.oschina.net/oscnet/up-b29f90b5017756aeba69d51325616e264cf.png" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 14 Dec 2023 10:16:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271077</guid>
            <link>https://www.oschina.net/news/271077</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[中国法院做出全球首个 5G 专利费率判决]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">日前，重庆市第一中级人民法院就 OPPO 诉诺基亚标准必要专利使用费纠纷一案作出判决，判决确认了诺基亚 2G-5G 标准必要专利的全球性的公平、合理和无歧视（FRAND）费率：针对 5G 多模手机，在全球第一区的单台许可费为 1.151 美元/台，在第二区（中国大陆地区）及第三区的单台许可费为 0.707 美元/台。针对 4G 多模手机，在第一区的单台许可费为 0.777 美元/台，在第二区及第三区的单台许可费为 0.477 美元/台。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">本次判决是中国法院首次对标准必要专利诉讼作出全球费率判决。2021 年，最高人民法院首次在「OPPO 夏普标准必要专利许可纠纷案」中终审裁定中国法院对标准专利具备全球费率管辖权。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">此外，判决首次确定了手机行业 5G 标准累积费率为 4.341%-5.273%。按照本次裁决，不考虑多模制式占比，一部 200 美元的纯 5G 手机，整机收取 5G 专利费的上限为 10.55 美元。</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 14 Dec 2023 06:20:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271007</guid>
            <link>https://www.oschina.net/news/271007</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[【直播预告】上云 vs 下云：降本增笑？割韭菜？]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>本月，滴滴崩溃事件闹得轰轰烈烈，各种离谱派单层出不穷，而造成这一混乱的，则是底层出故障的阿里云。尴尬的是，这已经不是它第一次崩溃了，距离上一次，还不到一个月。</p><p>一时之间，各种有关「云」的讨论纷纷扬扬：有人眼馋马斯克的 X 下云省钱，觉得反正都有风险，还不如自己弄，这样更可掌控，也更清楚；有人则认为上云才是未来的趋势，想要发挥出软件的最大优势，上云更合适。</p><p>那么，你怎么看呢——</p><p><strong>公有云崩溃，到底是必然事件，还是事出偶然？</strong></p><p><strong>X 的案例参考性有多大？想省钱是该上云 or 下云呢？</strong></p><p><strong>到底是自建云更安全，还是公有云更有保障？</strong></p><p><strong>对普通的厂商而言，该怎么选择呢？</strong></p><p>本期，OSCHINA【开源漫谈】特地邀请了 5 位业内具有代表性的专家，直播探讨一下，接下来，我们该上云还是下云？</p><p>&nbsp;</p><p><strong>直播主题：</strong>上云 vs 下云：降本增笑？割韭菜？</p><p><strong>直播时间：</strong>12 月 20 日 19:00 - 20:30</p><p><strong>直播平台：</strong>「OSC 开源社区」视频号</p><p><strong>主办方：</strong>开源中国</p><p>&nbsp;</p><div><div><p><strong>直播嘉宾：</strong></p><div><div><p>&nbsp;&nbsp;<strong>主持人：</strong></p><p>&nbsp;&nbsp;&nbsp;&nbsp;李鹤，kinitiras、kluster-capacity 作者，kubernetes、karmada 社区贡献者，前滴滴软件开发工程师。16 年起一直从事容器相关工作，公众号云原生散修，个人 blog https://www.likakuli.com，目前在虾皮北京，做资源利用率优化相关工作。</p></div><div><p>&nbsp;&nbsp;<strong>正方：</strong></p><p>&nbsp;&nbsp;&nbsp;&nbsp;周新宇，AutoMQ 联合创始人 &amp; CTO，是 Apache 软件基金会成员，Apache RocketMQ 联合创始人 &amp; PMC 成员。有近十年的云计算从业经历，完整经历了阿里云中间件上云历程，是云原生上云理念的倡导者。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;蒋明，前淘宝 DBA。</p></div><div><p>&nbsp;&nbsp;<strong>反方：</strong></p><p style="text-align:left">&nbsp;&nbsp;&nbsp;&nbsp;冯若航，磐吉云数 CEO / 创始人，Pigsty 作者，PostgreSQL 中文社区开源技术委员。公众号《非法加冯》主理人，下云倡导者。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;马工，在北欧从事 Infra 工程师，公众号《瑞典马工》主理人。主张云计算是新的操作系统，其用户是软件开发者，简单的搬迁上云没有意义。他认为目前云计算厂商有太多的草台班子，80% 的乙方员工都不会用自家的云。</p></div></div></div></div><p>&nbsp;</p><p>公有云崩溃屡屡出现，我们仍该坚持上云还是掉头选择下云？你怎么看呢？快扫码预约直播，一起讨论吧~还可以进我们的 OSC 技术交流群，分享你的想法哦~</p><p style="text-align:center"><img height="2895" src="https://oscimg.oschina.net/oscnet/up-6186bbf0b6471570446bb66c1dc403bc7b3.png" width="750" referrerpolicy="no-referrer"></p><p>&nbsp;</p><p style="text-align:left"><strong>直播福利</strong></p><ul><li><p>互动抽奖：在直播评论区提问，被直播嘉宾回复的用户可获 OSC 魔方一个，名额不限。</p></li><li><p>福袋抽奖：直播中将有多轮抽奖，参与就有机会获得 OSC T 恤、魔方等。</p></li></ul><p style="text-align:center"><img height="2160" src="https://oscimg.oschina.net/oscnet/up-555ffa0866e12bdebcbbab1295b7fef43bc.png" width="3840" referrerpolicy="no-referrer"></p><p>我们直播间见吧~</p><p>&nbsp;</p><p><strong>特别鸣谢本次合作社区：</strong></p><ul><li><p><strong>PostgreSQL</strong><strong>中文社区</strong></p></li></ul><p>PostgreSQL 中文社区是一个非盈利的民间组织，目前成员都以志愿者身份加入，成立的目的在于构建 PG 数据库技术生态圈子 (内核、用户培训机构、厂商、服务商、软件开发商、高校形成 「业务与利益双向驱动」 的良性发展生态圈); 帮助企业解决人才培养和企业商用数据库成本问题，社区会在各运营平台发布 PostgreSQL 最新信息和 PostgreSQL 相关技术文章，推动 PG 技术在中国的发展。 官网链接：http://www.postgres.cn/index.php/v2/home</p><p>&nbsp;</p><ul><li><p><strong>Pigsty</strong></p></li></ul><p style="text-align:left">Pigsty 是本地优先的 RDS 开源替代，开箱即用的 PostgreSQL 发行版，自带高可用、监控系统，PITR，IaC 与部署方案。</p><p style="text-align:left">官网链接：https://pigsty.cc</p><p>&nbsp;</p><ul><li><p><strong>AutoMQ 开源社区</strong></p></li></ul><p>AutoMQ 社区聚集了一群热衷于云原生技术的开源爱好者，他们曾经见证并应对了消息队列基础设施在大型互联网公司和云计算公司面临的种种挑战，希望与广大开发者共同探索，以云原生技术为基础，重新塑造这一关键领域，探索云原生消息队列的更多可能性。目前，AutoMQ 社区以 Apache 协议开源了云原生版本的 Kafka 和 RocketMQ 实现，致力于用云原生的技术栈，大幅度降低企业的云资源成本，以及提高运维效率。</p><p>社区地址：https://github.com/AutoMQ</p><p>&nbsp;</p><ul><li><p><strong>TiDB</strong></p></li></ul><p>由 TiDB 生态中的开发者、用户、合作伙伴一起建立的分享、学习平台。TiDB 线上社区汇聚了 33448 位 TiDB 资深用户（注册用户数），所有成员都可以在这里自由发声，互相协助解决问题。社区线上论坛 asktug.com 已经积累 23,000+ 个问题帖（主题帖数），90 % 的问题都得到了解决，累计总回复 243,000+ 个（主题帖回复数）。</p><p>社区地址：asktug.com</p><p>&nbsp;</p><ul><li><p><strong>Apache</strong><strong> IoTDB </strong></p></li></ul><p>Apache IoTDB 是一款低成本、高可用的物联网原生时序数据库，采用端边云协同的轻量化结构，支持一体化的物联网时序数据收集、存储、管理与分析，具有多协议兼容、超高压缩比、高通量读写、工业级稳定、极简运维等特点。IoTDB 自研完整的存储引擎、查询引擎、计算引擎，并支持权限管理、集群管理、系统监控、可视化呈现等多项功能，可实现物联网时序数据全生命周期，也就是涵盖写入、存储、处理、查询、分析、展示等多个维度的时序数据高效管理，助力企业构建时序数据高可用、高稳定解决方案。</p><p>作为全球性开源项目，Apache IoTDB 已成为 Apache 基金会顶级项目，并建成全球认可的国际开源社区。目前，Apache IoTDB 社区拥有超过 260 名代码提交者，完成 9000 余次提交，收获 4100 余次 stars，代码活跃度于 Apache 350 余个项目中排名第三。</p><p>社区地址：https://iotdb.apache.org</p><p>&nbsp;</p><ul><li><p><strong>StarRocks</strong></p></li></ul><p>Linux 基金会项目 StarRocks 是数据分析新范式的开创者、新标准的领导者。面世三年来，StarRocks 一直专注打造世界顶级的新一代极速全场景 MPP 数据库，帮助企业构建极速统一的湖仓分析新范式，是实现数字化转型和降本增效的关键基础设施。</p><p>社区地址：https://www.starrocks.io/</p><p>项目链接：https://github.com/StarRocks/starrocks</p><p>&nbsp;</p><ul><li><p><strong>Gitee</strong></p></li></ul><p>Gitee（码云）是开源中国于 2013 年推出的基于 Git 的代码托管平台、企业级研发效能平台，提供中国本土化的代码托管服务。</p><p>截止 2023 年 7 月，Gitee 已经有 1000 万名注册用户和 2500 万个代码仓库，是中国境内规模最大的代码托管平台。同时，旗下企业级 DevOps 研发效能管理平台 Gitee 企业版已服务超过 26 万家企业。</p><p>网址：https://gitee.com/</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 14 Dec 2023 03:56:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/6852546/blog/10321438</guid>
            <link>https://my.oschina.net/u/6852546/blog/10321438</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
    </channel>
</rss>
