<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[开源中国-综合资讯]]>
        </title>
        <link>https://www.oschina.net/news/industry</link>
        <atom:link href="https://rsshub.app/oschina/news/industry" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[开源中国-综合资讯 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Wed, 11 Oct 2023 10:32:29 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[GreptimeDB v0.4 重大更新 — 新版引擎 Mito2 专为时序数据而生]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h2>引言</h2><p>从去年 11 月 GreptimeDB 首次上线开源以来，Greptime 团队经过一轮又一轮的持续迭代，从 v0.1 的初步架构完成，到 v0.2 兼容了 PromQL 的单机版本，再到 v0.3 增加了分布式的能力。</p><p>v0.3 功能层面已经相对稳定，包括了单机版，分布式，PromQL 兼容性以及对不同接入协议的支持，很多用户开始尝试，我们也收到了大量的反馈和建议，同时，我们也在 GreptimeCloud 项目里面吃自己狗粮，底层完全依托于 v0.3，不断地把需求回吐给 DB 团队。</p><p>其中呼声最大的便是查询性能问题，坦率的讲，v0.3 版本虽然功能稳定，写入性能也满足需求，但在查询性能上依然有很大的提升空间，还不足以应对大规模的数据查询分析。v0.4 为了解决这个问题，对存储查询引擎 Mito 做了一次重大升级，几乎是重写了一遍，而围绕引擎相关的组件也随之重构，最后通过 TSBS 测试套件实测提升了平均有 6 倍，具体可以参考文末的测试报告（PS: 可能熟悉车的朋友会觉得 Mito 比较眼熟，没错，是来自于 Alfa Romeo MiTo，谁让公司有三位 Alfa Romeo 车主呢）。</p><p>在充分测试的保障下，今天，我们终于可以激动地宣布：<strong>GreptimeDB v0.4 正式发布，和以往版本不同，v0.4 版本的发布标志着 GreptimeDB 已基本做好踏入生产环境的准备，更意味着一段新的探索与挑战即将启程！</strong></p><p>总结来说，此次新版本更新主要在以下几个方面：</p><ul><li><strong>性能优化</strong>：重新设计的新版引擎 Mito2；</li><li><strong>稳定性优化</strong>：CREATE, DROP, ALTER 等 DDL 统一单机和分布式实现并引入 Procedure 框架保证最终一致性；</li><li><strong>体验优化</strong>：支持 Vector/OpenTelemetry 等。</li></ul><p>从 v0.3 到 v0.4，Greptime 团队主要项目中，共有来自 <strong>6 个国家和地区的 42 位贡献者，累计合并了 726 个 PRs，涉及到 7659 个文件修改，包含了 271 个功能优化，163 个修复，107 个重构以及大量测试</strong>。同时，伴随着版本的更新，使用文档和技术文档也已更新至最新。另外，我们还发布了 C++, Erlang 和 JS SDK， 官方目前已经支持了 Golang/Java/Rust/C++/Erlang/JS 6 种语言。社区方面，我们也迎来了一位新的 Committer: @ <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNiwakaDev" target="_blank">Niwaka</a>。</p><h2>GreptimeDB v0.4 重点内容</h2><ul><li><p><strong>查询存储性能</strong></p><ul><li>完全重新设计了新版引擎 Mito2，专门针对时间序列数据进行了优化，实测性能比 v0.3 提升 5-20 多倍不等；</li><li>受 Cassandra 启发，支持了 TWCS（Time Window Compaction Strategy）压缩策略；</li><li>支持了新的对象存储 Google Cloud Storage。</li></ul></li><li><p><strong>稳定性和可靠性</strong></p><ul><li>丰富 sqlness 测试场景；</li><li>依托于混沌测试 Case 的不断完善，v0.4 版本将具备更可靠的分布式健壮性；</li><li>基于 Procedure 框架实现 Create/Alter/Drop Table 等 DDL 操作并统一单机和分布式实现；</li><li>重构了整个分布式架构，优化心跳协议，使得分布式版本运行更加稳定。</li></ul></li><li><p><strong>体验优化</strong></p><ul><li>新增支持 range select，支持与普通函数嵌套使用；</li><li>全新的 Dashboard；</li><li>优化 DESC TABLE 体验；</li><li>支持 Apache ORC 格式的外部表；</li><li>支持用户友好的 gRPC 行格式写入协议。</li></ul></li><li><p><strong>集成与其他</strong></p><ul><li>Vector 增加 GreptimeDB metrics 的输出支持；</li><li>支持使用 KubeBlocks 启动 GreptimeDB 集群；</li><li>集成 EMQX；</li><li>支持 CentOS；</li><li>发布 JS/Erlang/C++ 官方客户端。</li></ul></li></ul><h2>GreptimeDB v0.4 性能测试</h2><p>GreptimeDB 是基于 TSBS 进行了性能测试。TSBS（Time Series Benchmark Suite）是以 Go 为主语言的一套程序，用于生成时序数据集并对读写性能进行基准测试。最初由老牌时序数据库厂商 InfluxDB 工程师发布，并不断由 TimescaleDB 团队进行改进。该套件是可扩展的，可以包含不同类型的数据和查询类型，并在系统之间进行比较。GreptimeDB 在套件基础上做了对应的扩展，具体项目地址: <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FGreptimeTeam%2Ftsbs%2F" target="_blank">https://github.com/GreptimeTeam/tsbs/</a></p><h3>测试硬件和数据准备</h3><h4>硬件环境</h4><p><img src="https://oscimg.oschina.net/oscnet/up-26f7b9c09596e41415f23cbe9fe38b50321.png" alt="" referrerpolicy="no-referrer"></p><h4>测试数据 (基于 TSBS)</h4><p><img src="https://oscimg.oschina.net/oscnet/up-212b9c4d620e0f2782ccfaa50765b6aaacb.png" alt="" referrerpolicy="no-referrer"></p><p>启动配置（默认配置，仅修改数据目录）</p><pre><code class="language-protobuf">[storage]
data_home = "/var/greptimedb/"
</code></pre><p>测试结果 (与 v0.3.2 对比，数值越小越好) <img src="https://oscimg.oschina.net/oscnet/up-f7143a1d8eec97992dcef82c3b6bb1417b3.png" alt="" referrerpolicy="no-referrer"></p><p><img src="https://oscimg.oschina.net/oscnet/up-6b3abf6a8b5a386341fd842ece66818dc6d.png" alt="" referrerpolicy="no-referrer"></p><p><img src="https://oscimg.oschina.net/oscnet/up-da52a25b5c06783401388180af4c3926e6c.png" alt="" referrerpolicy="no-referrer"></p><h2>升级提示</h2><p>为了进行彻底地优化，不受历史包袱干扰 0.3 -&gt; 0.4 有一些 breaking change，需要停机升级。为此我们提供了升级工具，稍晚会在官方文档中加入升级手册，大致步骤如下：</p><ol><li>创建一个新的 0.4 集群；</li><li>关闭旧集群流量入口（停写）；</li><li>通过 CLI 升级工具导出数据；</li><li>导入数据到新集群；</li><li>入口流量切换到 0.4 新集群。</li></ol><h2>GreptimeDB 未来展望</h2><p>GreptimeDB 不断追求的核心目标仍然是建立一个具备弹性的 ServerlessDB 架构。同时我们意识到未来的趋势在于数据库的自治化，我们会逐步在数据库自治方面投入更多，结合智能化的调度技术，逐步实现时序数据库的安全自动驾驶。</p><h2>致谢社区</h2><p>感谢每一位关注 GreptimeDB、给 GreptimeDB 提建议甚至提交代码的朋友，是你们的支持让我们前进得更坚定。GreptimeDB 是一个基于 Rust 的数据库项目，无论你是在学习 Rust 语言想要寻找项目上手的同学，还是已经有一定经验的技术大牛，甚至是希望对开源社区有所贡献的非技术同学，你一定能在 GreptimeDB 找到适合你的贡献方式，成为我们的贡献者，和来自全世界各地的其他社区贡献者一起交流最新技术。悄悄说一句，成为贡献者能收到 Greptime 限量精美周边礼品哦~</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 11 Oct 2023 10:26:24 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/6839317/blog/10116982</guid>
            <link>https://my.oschina.net/u/6839317/blog/10116982</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Gitee 推荐 | Java 异步非阻塞通讯内核 aio-socket]]>
            </title>
            <description>
                <![CDATA[<p align="center"><img alt="logo" src="https://gitee.com/mxd_2022/static/raw/master/aio-socket/aio-socket-logo.png" referrerpolicy="no-referrer"></p><h2 align="center"><a id="user-content-aio-socket-v3x" class="anchor" href="https://gitee.com/starboot/aio-socket#aio-socket-v3x"></a>aio-socket v3.x</h2><h4 align="center"><a id="user-content-一款强大且轻量的传输层通讯框架内核" class="anchor" href="https://gitee.com/starboot/aio-socket#%E4%B8%80%E6%AC%BE%E5%BC%BA%E5%A4%A7%E4%B8%94%E8%BD%BB%E9%87%8F%E7%9A%84%E4%BC%A0%E8%BE%93%E5%B1%82%E9%80%9A%E8%AE%AF%E6%A1%86%E6%9E%B6%E5%86%85%E6%A0%B8"></a>一款强大且轻量的传输层通讯框架内核</h4><p align="center"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.oscs1024.com%2Fproject%2Foscs%2Fmxd888%2Faio-socket%3Fref%3Dbadge_small"><img src="https://www.oscs1024.com/platform/badge/mxd888/aio-socket.svg?size=small" alt="OSCS Status" referrerpolicy="no-referrer"></a><a href="https://gitee.com/mxd_2022/aio-socket/stargazers"><img src="https://gitee.com/mxd_2022/aio-socket/badge/star.svg?theme=dark" alt="gitee star" referrerpolicy="no-referrer"></a><a href="https://gitee.com/mxd_2022/aio-socket"><img src="https://img.shields.io/badge/aio--socket-2.0.0--RELEASE-yellowgreen" alt="" referrerpolicy="no-referrer"></a><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.apache.org%2Flicenses%2FLICENSE-2.0"><img src="https://img.shields.io/badge/License-Apache--2.0-brightgreen.svg" alt="" referrerpolicy="no-referrer"></a><a target="_blank" href="https://gitee.com/link?target=https%3A%2F%2Fwww.oracle.com%2Fjava%2Ftechnologies%2Fjavase%2Fjavase-jdk8-downloads.html"><img src="https://img.shields.io/badge/JDK-8+-green.svg" alt="" referrerpolicy="no-referrer"></a><a target="_blank" href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fmxd888%2Faio-socket"><img src="https://img.shields.io/github/stars/mxd888/aio-socket.svg?style=social" alt="github star" referrerpolicy="no-referrer"></a></p><h2><a id="user-content-aio-socket-简介" class="anchor" href="https://gitee.com/starboot/aio-socket#aio-socket-%E7%AE%80%E4%BB%8B"></a>aio-socket 简介</h2><p>Java AIO 通讯内核，采用了内存池、线程池、插件化增添模块等思想进行设计，借鉴了前人的优秀设计
意在制作一个易于理解、性能强悍的通讯内核。为单机驾驭百万连接不懈努力。下述列出了 aio-socket
本身本领，并且友好的支持自定义扩展。</p><blockquote><ol><li>内核级集群（去中心化分布式集群）</li><li>断线重连功能</li><li>内核级 ACK 消息确认（保证消息必达）</li><li>插件化管理功能模块</li><li>优秀的内存池模型</li><li>全方面的流量监控</li><li>质简质朴的架构设计</li><li>一目了然的常用 API 封装</li><li>无与伦比的半包、粘包处理</li><li>SSL、TLS 加密模块</li><li>禁止连接黑名单模块</li><li>心跳检测（自动剔除 60s 无心跳的连接）</li><li>完全调用底层 jdk，无任何依赖，充分发挥 jdk 的性能</li><li>5G 时代、稳定、实时、亚毫秒级、百万并发级的 TCP 协议底层通讯内核</li><li>基于 aio-socket 实现的产品：t-im(即时通讯框架)、WeChat(即时通讯安卓客户端)</li></ol></blockquote><h2><a id="user-content-软件架构" class="anchor" href="https://gitee.com/starboot/aio-socket#%E8%BD%AF%E4%BB%B6%E6%9E%B6%E6%9E%84"></a>软件架构</h2><p>给大家画个架构图🎉
<img src="https://gitee.com/mxd_2022/static/raw/master/aio-socket/aio-socket-frame.jpg" alt="Image text" referrerpolicy="no-referrer"></p><h5 align="center"><a id="user-content-单机服务器架构图" class="anchor" href="https://gitee.com/starboot/aio-socket#%E5%8D%95%E6%9C%BA%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%9E%B6%E6%9E%84%E5%9B%BE"></a>单机服务器架构图</h5><h2><a id="user-content-开始使用" class="anchor" href="https://gitee.com/starboot/aio-socket#%E5%BC%80%E5%A7%8B%E4%BD%BF%E7%94%A8"></a>开始使用</h2><h4><a id="user-content-aio-socket-作者电脑环境" class="anchor" href="https://gitee.com/starboot/aio-socket#aio-socket-%E4%BD%9C%E8%80%85%E7%94%B5%E8%84%91%E7%8E%AF%E5%A2%83"></a>aio-socket 作者电脑环境</h4><blockquote><ol><li>jdk 1.8.0_221</li><li>maven 3.6.1</li><li>IDEA 2020.1 社区版</li></ol></blockquote><h4><a id="user-content-引入 maven 座标" class="anchor" href="https://gitee.com/starboot/aio-socket#%E5%BC%95%E5%85%A5maven%E5%9D%90%E6%A0%87"></a>引入 Maven 座标</h4><p>v3.0 版本暂未推送至 Maven 中央仓库，大家可以 fork 到自己仓库并且 pull 到本地电脑运行体验。<br>
首先启动服务器: aio-socket-demo/src/main/java/cn.starboot.socket.demo.batch.server.Server.java<br>
启动客户端：aio-socket-demo/src/main/java/cn.starboot.socket.demo.batch.client.Client.java<br><br></p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line">&lt;dependency&gt;</span><span id="LC2" class="line">  &lt;groupId&gt;cn.starboot.socket&lt;/groupId&gt;</span><span id="LC3" class="line">  &lt;artifactId&gt;aio-socket-all&lt;/artifactId&gt;</span><span id="LC4" class="line">  &lt;version&gt;3.0.0&lt;/version&gt;</span><span id="LC5" class="line">&lt;/dependency&gt;</span></pre><div class="markdown-code-block-copy-btn"></div></div></div><h4><a id="user-content-起步" class="anchor" href="https://gitee.com/starboot/aio-socket#%E8%B5%B7%E6%AD%A5"></a>起步</h4><p>aio-socket</p><h2><a id="user-content-联系方式" class="anchor" href="https://gitee.com/starboot/aio-socket#%E8%81%94%E7%B3%BB%E6%96%B9%E5%BC%8F"></a>联系方式</h2><p>官方 QQ 群号：867691377
<a target="_blank" href="https://gitee.com/link?target=https%3A%2F%2Fjq.qq.com%2F%3F_wv%3D1027%26k%3DGd6P6BcT"><img border="0" src="https://pub.idqqimg.com/wpa/images/group.png" alt="t-im" title="t-im" referrerpolicy="no-referrer"></a><br></p><h2><a id="user-content-进群前先在 github 或 gitee 上 star-" class="anchor" href="https://gitee.com/starboot/aio-socket#%E8%BF%9B%E7%BE%A4%E5%89%8D%E5%85%88%E5%9C%A8github%E6%88%96gitee%E4%B8%8Astar-"></a>进群前先在 github 或 gitee 上 star ★</h2><p>请看完再进群，进群是为了相互交流技术，共同学习进步，设置进群问题是防止有某云服务器销售人员，或其他乱发广告的进入；</p><h2><a id="user-content-重要说明-" class="anchor" href="https://gitee.com/starboot/aio-socket#%E9%87%8D%E8%A6%81%E8%AF%B4%E6%98%8E-"></a>重要说明 ☆☆☆</h2><p>第一本项目完全开源免费，可以拥有其任何使用权，但不代表可以做非法乱纪的事情，本项目以质朴质简思想开发，意在打造最易读懂源码为主，并不是以高深的设计哲学为主，
可用作学习或不重要的作业使用，切勿商用，商用出现后果概不负责！！！非常感谢配合</p><h2><a id="user-content-上层应用开源项目链接" class="anchor" href="https://gitee.com/starboot/aio-socket#%E4%B8%8A%E5%B1%82%E5%BA%94%E7%94%A8%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE%E9%93%BE%E6%8E%A5"></a>上层应用开源项目链接</h2><p>t-im：基于 aio-socket 开发的高性能 IM 通讯框架，官网：  <a href="https://gitee.com/starboot/t-im">https://gitee.com/starboot/t-im</a><br><br>
WeChat：为 t-im 提供基本的 UI 功能，官网：  <a href="https://gitee.com/starboot/we-chat">https://gitee.com/starboot/we-chat</a><br><br>
本项目如有侵犯到任何个人或组织的权益请联系邮箱：<a href="mailto:1191998028@qq.com">1191998028@qq.com</a> （如有侵权请联系删除）</p>]]>
            </description>
            <pubDate>Wed, 11 Oct 2023 09:39:20 GMT</pubDate>
            <guid isPermaLink="false">https://gitee.com/starboot/aio-socket</guid>
            <link>https://gitee.com/starboot/aio-socket</link>
        </item>
        <item>
            <title>
                <![CDATA[每日一博 | 我在前端写 Java Spring Boot 项目]]>
            </title>
            <description>
                <![CDATA[<div class="content"><span id="OSC_h1_1"></span><h1><span><span><span>前言</span></span></span></h1><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>玩归玩，闹归闹，别拿 </span></span></span><span><span><code><span>C 端</span></code></span></span><span><span><span> 开玩笑！ 这里不推荐大家把 Node 服务作为 C 端服务，毕竟它是</span></span></span><span><span><code><span>单线程多任务</span></code></span></span><span><span><span> 机制。 这一特性是 </span></span></span><span><span><code><span>Javascript</span></code></span></span><span><span><span> 语言设计之初，就决定了它的使命 - Java &gt;&gt;&gt;【Script】，这里就不多解释了，大家去看看 JavaScript 的历史就知道啦～这也就决定了，它不能像后端语言那样 </span></span></span><span><span><code><span>多线程多任务</span></code></span></span><span><span><span>，用户访问量小还能承受，一旦承受访问量大高并发，就得凉凉～</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>那为什么我们还要去写 Node 服务？ 主要是方便快捷，对于小项目可以迅速完成建设，开发成本小。 其次，主要通过写 </span></span></span><span><span><code><span>Nest</span></code></span></span><span><span><span> 完成下面收获：</span></span></span></p><ul><li><span><span><span><span>学习装饰器语法，感受其简洁优美；</span></span></span></span></li><li><span><span><span><span>自己学习一门新的开发框架，感受不同框架的优缺点，为以后开发选型打基础；</span></span></span></span></li><li><span><span><span><span>感受服务端排查问题的复杂性，找找前端设计的灵感。</span></span></span></span></li></ul><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>本篇文章主要是使用 NestJs + Sequelize + MySQL 完成基础运行， 带大家了解 Node 服务端的基础搭建，也可以顺便看看 Java SpringBoot 项目的基础结构，它俩真的非常相似，不信你去问服务端开发同学。 </span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>养成好习惯，看文章先一键三连～【点赞，关注，转发】，评论可以看完再吐槽～继续完善填坑～</span></span></span></p><span id="OSC_h1_2"></span><h1><span><span><span>第一步、项目跑起来</span></span></span></h1><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>在选择服务端的时候，我之前使用过 Egg.js ，所以这次就不选它了。其次，Egg 也是继承了 Koa 的开发基础，加上 Express 也是基于 Koa 上创新的，两者应该差不多，就不选择 Koa 和 Express 。</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>所以，我想尝试下 Nest.js 看语法跟 Java 是一样的，加上之前也自己开发过 Java + SpringBoot 的项目，当然更古老的 SSH 2.0 也从无到有搭建过，即：Spring2.0 + Struts2+ Hibernate3.2，想想应该会很容易上手，顺便怀旧下写写。</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>参考文档：</span></span></span></p><ul><li><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.geeksforgeeks.org%2Fbest-nodejs-frameworks-for-app-development%2F" target="_blank" rel="nofollow"><span><span><span>https://www.geeksforgeeks.org/best-nodejs-frameworks-for-app-development/</span></span></span></a><span><span><span>﻿</span></span></span></span></li><li><span><span><span><span>﻿</span></span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fanywhere.epam.com%2Fbusiness%2Fbest-node-js-frameworks" target="_blank" rel="nofollow"><span><span><span>https://anywhere.epam.com/business/best-node-js-frameworks</span></span></span></a><span><span><span>﻿</span></span></span></span></li></ul><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>说下我的想法，首先我们刚入门，估计会有一堆不清楚的坑，我们先简单点，后续我们再继续加深。既然要搞服务端，要搞就多搞点，我们都去尝鲜玩玩。我们打算使用 </span></span></span><span><span><code><span>Nest</span></code></span></span><span><span><span> 作为前端框架，</span></span></span><span><span><code><span>Graphql</span></code></span></span><span><span><span> 作为中间处理层。底层数据库我们用传统的 </span></span></span><span><span><code><span>MySQL</span></code></span></span><span><span><span>，比较稳定可靠，而且相对比较熟悉，这个就不玩新的了，毕竟数据库是一切的基石 。</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>说下我们具体实现步骤：</span></span></span></p><div><span>1.</span><span><span><span><strong><span>【必须】</span></strong></span></span><span><span><span>没有任何数据库，完成接口请求运行，能够跑起来；</span></span></span></span></div><div><span>2.</span><span><span><span><strong><span>【必须】</span></strong></span></span><span><span><span>创建基础数据库 </span></span></span><span><span><code><span>MySQL</span></code></span></span><span><span><span> ，接入 </span></span></span><span><span><code><span>@nestjs/sequelize</span></code></span></span><span><span><span> 库，完成 </span></span></span><span><span><code><span>增删改查</span></code></span></span><span><span><span> 功能即：</span></span></span><span><span><code><span>CRUD</span></code></span></span></span></div><div><span>3.</span><span><span><span><span>【</span></span></span><span><span><strong><span>可选</span></strong></span></span><span><span><span>】打算采取 </span></span></span><span><span><code><span>Graphql</span></code></span></span><span><span><span> 处理 API 查询，做到精确数据查询，这个已经火了很多了，但是真正使用的很少，我们打算先感受下，后续可以直接用到业务。</span></span></span></span></div><div><span>4.</span><span><span><span><span>【</span></span></span><span><span><strong><span>可选</span></strong></span></span><span><span><span>】接入 </span></span></span><span><span><code><span>Swagger</span></code></span></span><span><span><span> 自动生成 API 文档，快捷进行前端与后端服务联调测试。</span></span></span></span></div><div><span>◦</span><span><span><span><span>Swagger 是一个开源工具，用于设计、构建、记录和使用 RESTful web 服务。</span></span></span></span></div><div><span>5.</span><span><span><span><strong><span>【可选】</span></strong></span></span><span><span><span>接口请求，数据库优化处理</span></span></span></span></div><div><span>◦</span><span><span><span><span>请求分流，数据库写入加锁，处理并发流程</span></span></span></span></div><div><span>◦</span><span><span><span><span>增加 </span></span></span><span><span><code><span>middleware</span></code></span></span><span><span><span> 中间件统一处理请求及响应，进行鉴权处理，请求拦截等操作</span></span></span></span></div><div><span>◦</span><span><span><span><span>数据库分割备份，数据库融灾处理，分为：主、备、灾</span></span></span></span></div><div><span>◦</span><span><span><span><span>数据库读写分离，数据双写，建立数据库缓存机制，使用 </span></span></span><span><span><code><span>redis</span></code></span></span><span><span><span> 处理</span></span></span></span></div><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><em><strong><span>也欢迎大家补充更多的优化点，我们一起探讨～有兴趣可以帮忙补充代码哈～</span></strong></em></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>确定了大概方向，我们就开始整。先不追求一步到位，否则越多越乱，锦上添花的东西，我们可以后续增加，基础功能我们要优先保障完成。Nest.js 官网：</span></span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.nestjs.com%2F" target="_blank" rel="nofollow"><span><span><span>https://docs.nestjs.com/ </span></span></span></a><span><span><span>，话不多说，我们直接开整。</span></span></span></p><pre><code><span><span><span style="color:#708090"># 进入文件夹目录</span></span><span><span></span></span><span><span style="color:#669900">cd</span></span><span><span> full-stack-demo/packages
</span></span><span><span style="color:#708090"># 安装脚手架</span></span><span><span></span></span><span><span style="color:#dd4a68">npm</span></span><span><span> i -g @nestjs/cli
</span></span><span><span style="color:#708090"># 创建基础项目</span></span><span><span>
nest new node-server-demo 
</span></span><span><span style="color:#708090"># 进入项目 </span></span><span><span></span></span><span><span style="color:#669900">cd</span></span><span><span> new node-server-demo 
</span></span><span><span style="color:#708090"># 运行项目测试</span></span><span><span></span></span><span><span style="color:#dd4a68">npm</span></span><span><span> run start:dev

</span></span></span></code></pre><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>我们移除一些不需要的东西，先简单再复杂，别把自己搞晕了。接下来写一个简单示例感受下这个框架，之后完整的代码，我会公布在后面。废话不多说，开整！调整后目录结构：</span></span></span></p><div><span>•</span><span><span><span><code><span>common</span></code></span></span><span><span><span> - 公用方法类</span></span></span></span></div><div><span>•</span><span><span><span><code><span>config</span></code></span></span><span><span><span> - 配置类文件</span></span></span></span></div><div><span>•</span><span><span><span><code><span>controller</span></code></span></span><span><span><span> - 控制器，用于处理前端发起的各类请求</span></span></span></span></div><div><span>•</span><span><span><span><code><span>service</span></code></span></span><span><span><span> - 服务类，用于处理与数据库交互逻辑</span></span></span></span></div><div><span>•</span><span><span><span><code><span>dto</span></code></span></span><span><span><span> - DTO（Data Transfer Object）可以用于验证输入数据、限制传输的字段或格式。</span></span></span></span></div><div><span>•</span><span><span><span><code><span>entities</span></code></span></span><span><span><span> - 实体类，用于描述对象相关的属性信息</span></span></span></span></div><div><span>•</span><span><span><span><code><span>module</span></code></span></span><span><span><span> - 模块，用于注册所有的服务类、控制器类，类似 Spring 里面的 bean</span></span></span></span></div><div><span>◦</span><span><span><span><span>这里不能完全等同哈，两个实现机制上就不同，只是帮助大家理解。</span></span></span></span></div><div><span>•</span><span><span><span><code><span>main.ts</span></code></span></span><span><span><span> - nest 启动入口</span></span></span></span></div><div><span>•</span><span><span><span><code><span>types</span></code></span></span><span><span><span> - typescript 相关声明类型</span></span></span></span></div><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>﻿</span></span></span></p><div><img alt="" height="652" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-10-07-19-27D10wKQg77UKtvJTL.jpg" width="192" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span>﻿</span></span></span></p><p><span><span><span>只是写 demo, 搞快点就没有怎么写注释了，我感觉是一看就懂了，跟 Java SpringBoot 的写法非常一致，部分代码展示：</span></span></span></p><ul><li><span><span><span><span>控制器 controller </span></span></span></span></li></ul><pre><code><span><span><span style="color:#708090">// packages/node-server-demo/src/controller/user/index.ts</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> Controller</span></span><span><span style="color:#999999">,</span></span><span><span> Get</span></span><span><span style="color:#999999">,</span></span><span><span> Query </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'@nestjs/common'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span> UserServices </span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'@/service/user'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> GetUserDto</span></span><span><span style="color:#999999">,</span></span><span><span> GetUserInfoDto </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'@/dto/user'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span>@Controller</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#669900">'user'</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#0077aa">export</span></span><span><span></span></span><span><span style="color:#0077aa">class</span></span><span><span></span></span><span><span style="color:#dd4a68">UserController</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#dd4a68">constructor</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#0077aa">private</span></span><span><span></span></span><span><span style="color:#0077aa">readonly</span></span><span><span> userService</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span> UserServices</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#708090">// Get 请求 user/name?name=bricechou</span></span><span><span></span></span><span><span>@Get</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#669900">'name'</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#0077aa">async</span></span><span><span></span></span><span><span style="color:#dd4a68">findByName</span></span><span><span style="color:#999999">(</span></span><span><span>@Query</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span> getUserDto</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span> GetUserDto</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span></span></span><span><span style="color:#0077aa">this</span></span><span><span style="color:#999999">.</span></span><span><span>userService</span></span><span><span style="color:#999999">.</span></span><span><span>read</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">findByName</span></span><span><span style="color:#999999">(</span></span><span><span>getUserDto</span></span><span><span style="color:#999999">.</span></span><span><span>name</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#708090">// Get 请求 user/info?id=123</span></span><span><span></span></span><span><span>@Get</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#669900">'info'</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#0077aa">async</span></span><span><span></span></span><span><span style="color:#dd4a68">findById</span></span><span><span style="color:#999999">(</span></span><span><span>@Query</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span> getUserInfoDto</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span> GetUserInfoDto</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">const</span></span><span><span> user </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span></span></span><span><span style="color:#0077aa">await</span></span><span><span></span></span><span><span style="color:#0077aa">this</span></span><span><span style="color:#999999">.</span></span><span><span>userService</span></span><span><span style="color:#999999">.</span></span><span><span>read</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">findById</span></span><span><span style="color:#999999">(</span></span><span><span>getUserInfoDto</span></span><span><span style="color:#999999">.</span></span><span><span>id</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> gender</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span> user</span></span><span><span style="color:#999999">.</span></span><span><span>gender</span></span><span><span style="color:#999999">,</span></span><span><span> job</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span> user</span></span><span><span style="color:#999999">.</span></span><span><span>job </span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span></span></code></pre><pre><code><span><span><span style="color:#708090">// packages/node-server-demo/src/controller/log/add.ts</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> Controller</span></span><span><span style="color:#999999">,</span></span><span><span> Post</span></span><span><span style="color:#999999">,</span></span><span><span> Body </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'@nestjs/common'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> AddLogDto </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'@/dto/log'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span> LogServices </span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'@/service/log'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span>@Controller</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#669900">'log'</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#0077aa">export</span></span><span><span></span></span><span><span style="color:#0077aa">class</span></span><span><span></span></span><span><span style="color:#dd4a68">CreateLogController</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#dd4a68">constructor</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#0077aa">private</span></span><span><span></span></span><span><span style="color:#0077aa">readonly</span></span><span><span> logServices</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span> LogServices</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#708090">// post('/log/add')</span></span><span><span></span></span><span><span>@Post</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#669900">'add'</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#dd4a68">create</span></span><span><span style="color:#999999">(</span></span><span><span>@Body</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span> createLogDto</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span> AddLogDto</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span></span></span><span><span style="color:#0077aa">this</span></span><span><span style="color:#999999">.</span></span><span><span>logServices</span></span><span><span style="color:#999999">.</span></span><span><span>create</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">create</span></span><span><span style="color:#999999">(</span></span><span><span>createLogDto</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span></span></code></pre><ul><li><span><span><span><span>数据转换 Data Transfer Object </span></span></span></span></li></ul><pre><code><span><span><span style="color:#708090">// packages/node-server-demo/src/dto/user.ts</span></span><span><span></span></span><span><span style="color:#0077aa">export</span></span><span><span></span></span><span><span style="color:#0077aa">class</span></span><span><span></span></span><span><span style="color:#dd4a68">CreateUserDto</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span>
  name</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">string</span></span><span><span style="color:#999999">;</span></span><span><span>
  age</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">number</span></span><span><span style="color:#999999">;</span></span><span><span>
  gender</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">string</span></span><span><span style="color:#999999">;</span></span><span><span>
  job</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">string</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#708090">// 可以分开写，也可以合并</span></span><span><span></span></span><span><span style="color:#0077aa">export</span></span><span><span></span></span><span><span style="color:#0077aa">class</span></span><span><span></span></span><span><span style="color:#dd4a68">GetUserDto</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span>
  id</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">?</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">number</span></span><span><span style="color:#999999">;</span></span><span><span>
  name</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">string</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#708090">// 可以分开写，也可以合并</span></span><span><span></span></span><span><span style="color:#0077aa">export</span></span><span><span></span></span><span><span style="color:#0077aa">class</span></span><span><span></span></span><span><span style="color:#dd4a68">GetUserInfoDto</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span>
  id</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">number</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span></span></code></pre><ul><li><span><span><span><span>service 数据库交互处理类</span></span></span></span></li></ul><pre><code><span><span><span style="color:#708090">// packages/node-server-demo/src/service/user/read.ts</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> Injectable </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'@nestjs/common'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> User </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'@/entities/User'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span>@Injectable</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#0077aa">export</span></span><span><span></span></span><span><span style="color:#0077aa">class</span></span><span><span></span></span><span><span style="color:#dd4a68">ReadUserService</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#dd4a68">constructor</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">async</span></span><span><span></span></span><span><span style="color:#dd4a68">findByName</span></span><span><span style="color:#999999">(</span></span><span><span>name</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">string</span></span><span><span style="color:#999999">)</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">Promise</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">&lt;</span></span><span><span>User</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">&gt;</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#708090">// 可以处理判空，从数据库读取/写入数据，可能会被多个 controller 进行调用</span></span><span><span></span></span><span><span style="color:#669900">console</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">info</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#669900">'ReadUserService findByName &gt; '</span></span><span><span style="color:#999999">,</span></span><span><span> name</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span></span></span><span><span style="color:#669900">Promise</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">resolve</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">{</span></span><span><span> id</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#990055">1</span></span><span><span style="color:#999999">,</span></span><span><span> name</span></span><span><span style="color:#999999">,</span></span><span><span> job</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">'程序员'</span></span><span><span style="color:#999999">,</span></span><span><span> gender</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#990055">1</span></span><span><span style="color:#999999">,</span></span><span><span> age</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#990055">18</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">async</span></span><span><span></span></span><span><span style="color:#dd4a68">findById</span></span><span><span style="color:#999999">(</span></span><span><span>id</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">number</span></span><span><span style="color:#999999">)</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">Promise</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">&lt;</span></span><span><span>User</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">&gt;</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#669900">console</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">info</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#669900">'ReadUserService findById &gt; '</span></span><span><span style="color:#999999">,</span></span><span><span> id</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span></span></span><span><span style="color:#669900">Promise</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">resolve</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">{</span></span><span><span>
      id</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#990055">1</span></span><span><span style="color:#999999">,</span></span><span><span>
      name</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">'BriceChou'</span></span><span><span style="color:#999999">,</span></span><span><span>
      job</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">'程序员'</span></span><span><span style="color:#999999">,</span></span><span><span>
      gender</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#990055">1</span></span><span><span style="color:#999999">,</span></span><span><span>
      age</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#990055">18</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span></span></code></pre><ul><li><span><span><span><span>module 模块注册，服务类/控制类</span></span></span></span></li></ul><pre><code><span><span><span style="color:#708090">// packages/node-server-demo/src/module/user.ts</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> Module </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'@nestjs/common'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span> UserService</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> ReadUserService </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'@/service/user'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> UserController </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'@/controller/user'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span>@Module</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">{</span></span><span><span>
  providers</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#999999">[</span></span><span><span>UserService</span></span><span><span style="color:#999999">,</span></span><span><span> ReadUserService</span></span><span><span style="color:#999999">]</span></span><span><span style="color:#999999">,</span></span><span><span>
  controllers</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#999999">[</span></span><span><span>UserController</span></span><span><span style="color:#999999">]</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#0077aa">export</span></span><span><span></span></span><span><span style="color:#0077aa">class</span></span><span><span></span></span><span><span style="color:#dd4a68">UserModule</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span style="color:#999999">}</span></span><span><span></span></span></span></code></pre><pre><code><span><span><span style="color:#708090">// packages/node-server-demo/src/module/index.ts 根模块注入</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> Module </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'@nestjs/common'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> UserModule </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'./user'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> LogModule </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'./log'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span>@Module</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">{</span></span><span><span>
  imports</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#999999">[</span></span><span><span>
    UserModule</span></span><span><span style="color:#999999">,</span></span><span><span>
    LogModule</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">]</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#0077aa">export</span></span><span><span></span></span><span><span style="color:#0077aa">class</span></span><span><span></span></span><span><span style="color:#dd4a68">AppModule</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span style="color:#999999">}</span></span><span><span></span></span></span></code></pre><ul><li><span><span><span><span>main.js 启动注册的所有类</span></span></span></span></li></ul><pre><code><span><span><span>// packages/node-server-demo/src/main.ts
import { AppModule } from '@/module';
import { NestFactory } from '@nestjs/core';
import { NestExpressApplication } from '@nestjs/platform-express';

async function bootstrap() {
  const app = await NestFactory.create&lt;NestExpressApplication&gt;(AppModule);
  // 监听端口 3000 
  await app.listen(3000);
}

bootstrap();

</span></span></span></code></pre><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>这样一个单机的服务器就启动起来了，我们可以使用 </span></span></span><span><span><code><span>Postwoman</span></code></span></span><span><span><span> [</span></span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhoppscotch.io%2F" target="_blank" rel="nofollow"><span><span><span>https://hoppscotch.io/</span></span></span></a><span><span><span>] 进行请求，瞅瞅看返回效果。</span></span></span></p><div><img alt="" height="411" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-09-22-11-32nFgn22QoRKqZ9oMW.jpg" width="463" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span>﻿</span></span></span></p><div><img alt="" height="297" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-09-22-11-320kQIUM44BtGOUf6I.jpg" width="623" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span>﻿</span></span></span></p><p><span><span><span>控制枱也收到日志了，后面可以把这些日志请求保留成 </span></span></span><span><span><code><span>.log</span></code></span></span><span><span><span> 文件，这样请求日志也有了，完美！下一步，我们开始连接数据库，这样就不用单机玩泥巴了～</span></span></span></p><span id="OSC_h1_3"></span><h1><span><span><span>第二步、配置 MySQL</span></span></span></h1><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>MySQL 安装其实很简单，我电脑是 Mac 的，所以下面的截图都是以 mac 为例，先下载对应的数据库。</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>下载地址：</span></span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdev.mysql.com%2Fdownloads%2Fmysql%2F" target="_blank" rel="nofollow"><span><span><span>https://dev.mysql.com/downloads/mysql/ </span></span></span></a><span><span><span>至于其他系统的，可以网上找教程，这个应该烂大街了，我就不重复搬运教程了。</span></span></span></p><ul><li><span><span><span><strong><span>注意：</span></strong></span></span><span><span><span>安装的数据库，一定要设置密码，连接数据库必须要有密码，否则会导致连接数据库失败。</span></span></span></span></li><li><span><span><span><span>MySQL 我们只安装数据库就行，熟悉指令的童鞋，就直接命令行操作就行。</span></span></span></span></li><li><span><span><span><span>不熟悉的话，那就下载图形化管理工具。</span></span></span></span></li></ul><div><span>◦</span><span><span><span><span>Mysql 官方控制枱 </span></span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdev.mysql.com%2Fdownloads%2Fworkbench%2F" target="_blank" rel="nofollow"><span><span><span>https://dev.mysql.com/downloads/workbench/</span></span></span></a><span><span><span>﻿</span></span></span></span></div><div><span>◦</span><span><span><span><span>Windows 也可以使用 </span></span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.heidisql.com%2Fdownload.php%3Fdownload%3Dinstaller" target="_blank" rel="nofollow"><span><span><span>https://www.heidisql.com/download.php?download=installer</span></span></span></a><span><span><span>﻿</span></span></span></span></div><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>PS：安装 workbench 时发现要求 </span></span></span><span><span><code><span>MacOS 13</span></code></span></span><span><span><span>以上，我的电脑是 </span></span></span><span><span><code><span>MacOS 12</span></code></span></span><span><span><span>。</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>白白下载，所以只能 </span></span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdownloads.mysql.com%2Farchives%2Fworkbench%2F" target="_blank" rel="nofollow"><span><span><span>https://downloads.mysql.com/archives/workbench/ </span></span></span></a><span><span><span>从归档里面找低版本 </span></span></span><span><span><code><span>8.0.31</span></code></span></span><span><span><span>。对于数据库服务也有版本要求，大家按照自己电脑版本，选择支持的版本即可。 </span></span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdownloads.mysql.com%2Farchives%2Fcommunity%2F" target="_blank" rel="nofollow"><span><span><code><span>https://downloads.mysql.com/archives/community/</span></code></span></span></a><span><span><span>。我这边选择的是默认最新版本：</span></span></span><span><span><code><span>8.0.34</span></code></span></span><span><span><span>，下载好直接安装，一路 </span></span></span><span><span><code><span>Next</span></code></span></span><span><span><span> 到底，记住自己输入的 Root 密码！！！</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>确认好当前数据库是否已经运行起来了，启动 Workbench 查看状态。</span></span></span></p><div><img alt="" height="284" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-09-22-11-3232hBsN9S6ryKq22Kq.jpg" width="641" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span>﻿</span></span></span></p><p><span>1.<span><span><span>创建数据库</span></span></span></span></p><div><img alt="" height="287" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-09-22-11-32Y6bY8NOU328GGDBA.jpg" width="643" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span>﻿</span></span></span><span><span><span>数据库存在字符集选择，不同的字符集和校验规则，会对存储数据产生影响，所以大家可以自行查询，按照自己存储数据原则选择，我这里默认选最广泛的。确认好，就选择右下角的应用按钮。</span></span></span></p><div><span>2.</span><span><span><span><span>创建表和属性</span></span></span></span></div><div><img alt="" height="373" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-09-22-11-32oDMpwdctNZsX7Yr.jpg" width="770" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span>﻿</span></span></span></p><p><span><span><span>选项解答：</span></span></span></p><div><span>•</span><span><span><span><code><span>PRIMARY KEY</span></code></span></span><span><span><span> 是表中的一个或多个列的组合，它用于唯一标识表中的每一行。</span></span></span></span></div><div><span>•</span><span><span><span><code><span>Not NULL</span></code></span></span><span><span><span> 和 </span></span></span><span><span><code><span>Unique</span></code></span></span><span><span><span> 就不解释，就是直译的那个意思。</span></span></span></span></div><div><span>•</span><span><span><span><code><span>GENERATED</span></code></span></span><span><span><span> 生成列是表中的一种特殊类型的列，它的值不是从插入语句中获取的，而是根据其他列的值通过一个表达式或函数生成的。</span></span></span></span></div><pre><code><span><span><span style="color:#0077aa">CREATE</span></span><span><span></span></span><span><span style="color:#0077aa">TABLE</span></span><span><span> people </span></span><span><span style="color:#999999">(</span></span><span><span>
    first_name </span></span><span><span style="color:#0077aa">VARCHAR</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#990055">100</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">,</span></span><span><span>
    last_name </span></span><span><span style="color:#0077aa">VARCHAR</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#990055">100</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">,</span></span><span><span>
    full_name </span></span><span><span style="color:#0077aa">VARCHAR</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#990055">200</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#0077aa">AS</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span>CONCAT</span></span><span><span style="color:#999999">(</span></span><span><span>first_name</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#669900">' '</span></span><span><span style="color:#999999">,</span></span><span><span> last_name</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span></span></code></pre><ul><li><span><span><span><code><span>UNSIGNED</span></code></span></span><span><span><span> 这个数值类型就只能存储正数（包括零），不会存储负数。</span></span></span></span></li><li><span><span><span><code><span>ZEROFILL</span></code></span></span><span><span><span> 将数值类型的字段的前面填充零，他会自动使字段变为 </span></span></span><span><span><code><span>UNSIGNED</span></code></span></span><span><span><span>，直到该字段达到声明的长度，如：00007</span></span></span></span></li><li><span><span><span><code><span>BINARY</span></code></span></span><span><span><span> 用于存储二进制字符串，如声明一个字段为 BINARY(5)，那么存储在这个字段中的字符串都将被处理为长度为 5 的二进制字符串。</span></span></span></span></li></ul><div><span>◦</span><span><span><span><span>如尝试存储一个长度为 3 的字符串，那么它将在右侧用两个空字节填充。</span></span></span></span></div><div><span>◦</span><span><span><span><span>如果你尝试存储一个长度为 6 的字符串，那么它将被截断为长度为 5</span></span></span></span></div><div><span>◦</span><span><span><span><span>主要用途是存储那些需要按字节进行比较的数据，例如加密哈希值</span></span></span></span></div><ul><li><span><span><span><span>此外也可顺手传创建一个索引，方便快速查找。</span></span></span></span></li></ul><pre><code><span><span><span style="color:#0077aa">CREATE</span></span><span><span></span></span><span><span style="color:#0077aa">TABLE</span></span><span><span></span></span><span><span style="color:#999999">`</span></span><span><span>rrweb</span></span><span><span style="color:#999999">`</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#999999">`</span></span><span><span>test_sys_req_log</span></span><span><span style="color:#999999">`</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span></span></span><span><span style="color:#999999">`</span></span><span><span>id</span></span><span><span style="color:#999999">`</span></span><span><span></span></span><span><span style="color:#0077aa">INT</span></span><span><span></span></span><span><span style="color:#0077aa">UNSIGNED</span></span><span><span></span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">NOT</span></span><span><span></span></span><span><span style="color:#990055">NULL</span></span><span><span></span></span><span><span style="color:#0077aa">AUTO_INCREMENT</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">`</span></span><span><span>content</span></span><span><span style="color:#999999">`</span></span><span><span></span></span><span><span style="color:#0077aa">TEXT</span></span><span><span></span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">NOT</span></span><span><span></span></span><span><span style="color:#990055">NULL</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">`</span></span><span><span>l_level</span></span><span><span style="color:#999999">`</span></span><span><span></span></span><span><span style="color:#0077aa">INT</span></span><span><span></span></span><span><span style="color:#0077aa">UNSIGNED</span></span><span><span></span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">NOT</span></span><span><span></span></span><span><span style="color:#990055">NULL</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">`</span></span><span><span>l_category</span></span><span><span style="color:#999999">`</span></span><span><span></span></span><span><span style="color:#0077aa">VARCHAR</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#990055">255</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">NOT</span></span><span><span></span></span><span><span style="color:#990055">NULL</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">`</span></span><span><span>l_created_at</span></span><span><span style="color:#999999">`</span></span><span><span></span></span><span><span style="color:#0077aa">TIMESTAMP</span></span><span><span></span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">NOT</span></span><span><span></span></span><span><span style="color:#990055">NULL</span></span><span><span></span></span><span><span style="color:#0077aa">DEFAULT</span></span><span><span></span></span><span><span style="color:#0077aa">CURRENT_TIMESTAMP</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">`</span></span><span><span>l_updated_at</span></span><span><span style="color:#999999">`</span></span><span><span></span></span><span><span style="color:#0077aa">TIMESTAMP</span></span><span><span></span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">NOT</span></span><span><span></span></span><span><span style="color:#990055">NULL</span></span><span><span></span></span><span><span style="color:#0077aa">DEFAULT</span></span><span><span></span></span><span><span style="color:#0077aa">CURRENT_TIMESTAMP</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#0077aa">PRIMARY</span></span><span><span></span></span><span><span style="color:#0077aa">KEY</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">`</span></span><span><span>id</span></span><span><span style="color:#999999">`</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#0077aa">UNIQUE</span></span><span><span></span></span><span><span style="color:#0077aa">INDEX</span></span><span><span></span></span><span><span style="color:#999999">`</span></span><span><span>id_UNIQUE</span></span><span><span style="color:#999999">`</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">`</span></span><span><span>id</span></span><span><span style="color:#999999">`</span></span><span><span></span></span><span><span style="color:#0077aa">ASC</span></span><span><span style="color:#999999">)</span></span><span><span> VISIBLE</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#0077aa">INDEX</span></span><span><span></span></span><span><span style="color:#999999">`</span></span><span><span>table_index</span></span><span><span style="color:#999999">`</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">`</span></span><span><span>l_level</span></span><span><span style="color:#999999">`</span></span><span><span></span></span><span><span style="color:#0077aa">ASC</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">`</span></span><span><span>l_category</span></span><span><span style="color:#999999">`</span></span><span><span></span></span><span><span style="color:#0077aa">ASC</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">`</span></span><span><span>l_time</span></span><span><span style="color:#999999">`</span></span><span><span></span></span><span><span style="color:#0077aa">ASC</span></span><span><span style="color:#999999">)</span></span><span><span> VISIBLE</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span></span></code></pre><div><span>3.</span><span><span><span><span>连接数据库</span></span></span></span></div><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>由于目前 </span></span></span><span><span><code><span>node-oracledb</span></code></span></span><span><span><span> 官方尚未提供针对 Apple Silicon 架构的预编译二进制文件。导致我们无法在 </span></span></span><span><span><strong><span>Mac M1 芯片</span></strong></span></span><span><span><span>上使用 </span></span></span><span><span><code><span>TypeORM</span></code></span></span><span><span><span> 链接数据库操作，它目前只支持 </span></span></span><span><span><strong><span>Mac x86 芯片</span></strong></span></span><span><span><span>。哎～折腾老半天，查阅各种文档，居然有这个坑，没关系我们换个方式打开。</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>我们不得不放弃，从而选用 </span></span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.nestjs.com%2Ftechniques%2Fdatabase%23sequelize-integration" target="_blank" rel="nofollow"><span><span><span>https://docs.nestjs.com/techniques/database#sequelize-integration </span></span></span></a><span><span><span>哐哐哐～一顿操作猛如虎，盘它！</span></span></span></p><ul><li><span><span><span><span>安装 </span></span></span><span><span><code><span>Sequelize</span></code></span></span></span></li></ul><pre><code><span><span><span># 安装连接库
npm install </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">--</span></span><span><span>save </span></span><span><span>@nestjs</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">/</span></span><span><span>sequelize sequelize sequelize</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">-</span></span><span><span>typescript mysql2
# 安装 </span></span><span><span style="color:#0077aa">type</span></span><span><span></span></span><span><span style="color:#dd4a68">npm</span></span><span><span> install </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">--</span></span><span><span>save</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">-</span></span><span><span>dev </span></span><span><span>@types</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">/</span></span><span><span>sequelize

</span></span></span></code></pre><ul><li><span><span><span><span>配置数据库基础信息</span></span></span></span></li></ul><pre><code><span><span><span style="color:#708090">// packages/node-server-demo/src/module/index.ts</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> Module </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'@nestjs/common'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> UserModule </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'./user'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> LogModule </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'./log'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> Log </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'@/entities/Log'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> SequelizeModule </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'@nestjs/sequelize'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span>@Module</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">{</span></span><span><span>
  imports</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#999999">[</span></span><span><span>
    SequelizeModule</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">forRoot</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">{</span></span><span><span>
      dialect</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">'mysql'</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#708090">// 按数据库实际配置</span></span><span><span>
      host</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">'127.0.0.1'</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#708090">// 按数据库实际配置</span></span><span><span>
      port</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#990055">3306</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#708090">// 按数据库实际配置</span></span><span><span>
      username</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">'root'</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#708090">// 按数据库实际配置</span></span><span><span>
      password</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">'hello'</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#708090">// 按数据库实际配置</span></span><span><span>
      database</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">'world'</span></span><span><span style="color:#999999">,</span></span><span><span>
      synchronize</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#990055">true</span></span><span><span style="color:#999999">,</span></span><span><span>
      models</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#999999">[</span></span><span><span>Log</span></span><span><span style="color:#999999">]</span></span><span><span style="color:#999999">,</span></span><span><span>
      autoLoadModels</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#990055">true</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">,</span></span><span><span>
    LogModule</span></span><span><span style="color:#999999">,</span></span><span><span>
    UserModule</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">]</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#0077aa">export</span></span><span><span></span></span><span><span style="color:#0077aa">class</span></span><span><span></span></span><span><span style="color:#dd4a68">AppModule</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span style="color:#999999">}</span></span><span><span></span></span></span></code></pre><ul><li><span><span><span><span>实体与数据库一一映射处理</span></span></span></span></li></ul><pre><code><span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> getNow </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'@/common/date'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span>
  Model</span></span><span><span style="color:#999999">,</span></span><span><span>
  Table</span></span><span><span style="color:#999999">,</span></span><span><span>
  Column</span></span><span><span style="color:#999999">,</span></span><span><span>
  PrimaryKey</span></span><span><span style="color:#999999">,</span></span><span><span>
  DataType</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'sequelize-typescript'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span>@Table</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">{</span></span><span><span> tableName</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">'test_sys_req_log'</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#0077aa">export</span></span><span><span></span></span><span><span style="color:#0077aa">class</span></span><span><span></span></span><span><span style="color:#dd4a68">Log</span></span><span><span></span></span><span><span style="color:#0077aa">extends</span></span><span><span></span></span><span><span style="color:#dd4a68">Model&lt;Log&gt;</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span>@PrimaryKey</span></span><span><span></span></span><span><span>@Column</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">{</span></span><span><span>
    type</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span> DataType</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#990055">INTEGER</span></span><span><span style="color:#999999">,</span></span><span><span>
    autoIncrement</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#990055">true</span></span><span><span style="color:#999999">,</span></span><span><span>
    field</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">'id'</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span>
  id</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">number</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span>@Column</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">{</span></span><span><span> field</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">'content'</span></span><span><span style="color:#999999">,</span></span><span><span> type</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span> DataType</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#990055">TEXT</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span>
  content</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">string</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span>@Column</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">{</span></span><span><span> field</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">'l_level'</span></span><span><span style="color:#999999">,</span></span><span><span> type</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span> DataType</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#990055">INTEGER</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span>
  level</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">number</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#708090">// 3 严重，2 危险，1 轻微</span></span><span><span></span></span><span><span>@Column</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">{</span></span><span><span> field</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">'l_category'</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span>
  category</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">string</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#708090">// 模块分类/来源分类</span></span><span><span></span></span><span><span>@Column</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">{</span></span><span><span>
    field</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">'l_created_at'</span></span><span><span style="color:#999999">,</span></span><span><span>
    type</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span> DataType</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#990055">NOW</span></span><span><span style="color:#999999">,</span></span><span><span>
    defaultValue</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#dd4a68">getNow</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span>
  createdAt</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">number</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span>@Column</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">{</span></span><span><span>
    field</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">'l_updated_at'</span></span><span><span style="color:#999999">,</span></span><span><span>
    type</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span> DataType</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#990055">NOW</span></span><span><span style="color:#999999">,</span></span><span><span>
    defaultValue</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#dd4a68">getNow</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span>
  updatedAt</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">number</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span></span></code></pre><ul><li><span><span><span><span>module 注册实体</span></span></span></span></li></ul><pre><code><span><span><span style="color:#708090">// packages/node-server-demo/src/module/log.ts</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> Module </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'@nestjs/common'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> SequelizeModule </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'@nestjs/sequelize'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> Log </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'@/entities/Log'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span> LogServices</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span>
  CreateLogService</span></span><span><span style="color:#999999">,</span></span><span><span>
  UpdateLogService</span></span><span><span style="color:#999999">,</span></span><span><span>
  DeleteLogService</span></span><span><span style="color:#999999">,</span></span><span><span>
  ReadLogService</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'@/service/log'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span>
  CreateLogController</span></span><span><span style="color:#999999">,</span></span><span><span>
  RemoveLogController</span></span><span><span style="color:#999999">,</span></span><span><span>
  UpdateLogController</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'@/controller/log'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span>@Module</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">{</span></span><span><span>
  imports</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#999999">[</span></span><span><span>SequelizeModule</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">forFeature</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">[</span></span><span><span>Log</span></span><span><span style="color:#999999">]</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">]</span></span><span><span style="color:#999999">,</span></span><span><span>
  providers</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#999999">[</span></span><span><span>
    LogServices</span></span><span><span style="color:#999999">,</span></span><span><span>
    CreateLogService</span></span><span><span style="color:#999999">,</span></span><span><span>
    UpdateLogService</span></span><span><span style="color:#999999">,</span></span><span><span>
    DeleteLogService</span></span><span><span style="color:#999999">,</span></span><span><span>
    ReadLogService</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">]</span></span><span><span style="color:#999999">,</span></span><span><span>
  controllers</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#999999">[</span></span><span><span>CreateLogController</span></span><span><span style="color:#999999">,</span></span><span><span> RemoveLogController</span></span><span><span style="color:#999999">,</span></span><span><span> UpdateLogController</span></span><span><span style="color:#999999">]</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#0077aa">export</span></span><span><span></span></span><span><span style="color:#0077aa">class</span></span><span><span></span></span><span><span style="color:#dd4a68">LogModule</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span style="color:#999999">}</span></span><span><span></span></span></span></code></pre><ul><li><span><span><span><span>service 操作数据库处理数据</span></span></span></span></li></ul><pre><code><span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> Log </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'@/entities/Log'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> Injectable </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'@nestjs/common'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> AddLogDto </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'@/dto/log'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> InjectModel </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'@nestjs/sequelize'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> ResponseStatus </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'@/types/BaseResponse'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> getErrRes</span></span><span><span style="color:#999999">,</span></span><span><span> getSucVoidRes </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'@/common/response'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span>@Injectable</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#0077aa">export</span></span><span><span></span></span><span><span style="color:#0077aa">class</span></span><span><span></span></span><span><span style="color:#dd4a68">CreateLogService</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#dd4a68">constructor</span></span><span><span style="color:#999999">(</span></span><span><span></span></span><span><span>@InjectModel</span></span><span><span style="color:#999999">(</span></span><span><span>Log</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#0077aa">private</span></span><span><span> logModel</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#0077aa">typeof</span></span><span><span> Log</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">async</span></span><span><span></span></span><span><span style="color:#dd4a68">create</span></span><span><span style="color:#999999">(</span></span><span><span>createLogDto</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span> AddLogDto</span></span><span><span style="color:#999999">)</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">Promise</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">&lt;</span></span><span><span>ResponseStatus</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">&lt;</span></span><span><span style="color:#0077aa">null</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">&gt;&gt;</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#669900">console</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">info</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#669900">'CreateLogService create &gt; '</span></span><span><span style="color:#999999">,</span></span><span><span> createLogDto</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">const</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> level </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span></span></span><span><span style="color:#990055">1</span></span><span><span style="color:#999999">,</span></span><span><span> content </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span></span></span><span><span style="color:#669900">''</span></span><span><span style="color:#999999">,</span></span><span><span> category </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span></span></span><span><span style="color:#669900">'INFO'</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span> createLogDto </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">||</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">const</span></span><span><span> str </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span> content</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">trim</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">if</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">!</span></span><span><span>str</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span></span></span><span><span style="color:#dd4a68">getErrRes</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#990055">500</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#669900">'日志内容为空'</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">const</span></span><span><span> item </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span>
      level</span></span><span><span style="color:#999999">,</span></span><span><span>
      category</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#708090">// Tips: 为防止外部数据进行数据注入，我们可以对内容进行 encode 处理。</span></span><span><span></span></span><span><span style="color:#708090">// content: encodeURIComponent(str),</span></span><span><span>
      content</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span> str</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">await</span></span><span><span></span></span><span><span style="color:#0077aa">this</span></span><span><span style="color:#999999">.</span></span><span><span>logModel</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">create</span></span><span><span style="color:#999999">(</span></span><span><span>item</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span></span></span><span><span style="color:#dd4a68">getSucVoidRes</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span></span></code></pre><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>一路操作猛如虎，回头一看嘿嘿嘿～终于，我们收到了来自外界的第一条数据！</span></span></span><span><span><code><span> hello world！</span></code></span></span></p><div><img alt="" height="455" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-09-22-11-32UjXKHV8myXikTQj.jpg" width="530" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span>﻿</span></span></span><span><span><span>﻿</span></span></span></p><div><img alt="" height="406" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-09-22-11-32Yip7Bh7Tjx23VV9.jpg" width="530" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span>﻿</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><strong><span>连接及创建数据成功！此时已经完成基础功能啦～</span></strong></span></span></p><span id="OSC_h1_4"></span><h1><span><span><span>第三步、实现 </span></span></span><span><span><code><span>CRUD</span></code></span></span><span><span><span> 基础功能</span></span></span></h1><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>剩下的内容，其实大家可以自行脑补了，就是调用数据库的操作逻辑。先说说什么是 </span></span></span><span><span><code><span>CRUD</span></code></span></span></p><ul><li><span><span><span><code><span>C</span></code></span></span><span><span><span> create 创建</span></span></span></span></li><li><span><span><span><code><span>R</span></code></span></span><span><span><span> read 读取</span></span></span></span></li><li><span><span><span><code><span>U</span></code></span></span><span><span><span> update 更新</span></span></span></span></li><li><span><span><span><code><span>D</span></code></span></span><span><span><span> delete 删除</span></span></span></span></li></ul><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>下面给个简单示例，大家看看，剩下就去找文档，实现业务逻辑即可：</span></span></span></p><pre><code><span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> Injectable </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'@nestjs/common'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> InjectModel </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'@nestjs/sequelize'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> User </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'./user.model'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span>@Injectable</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#0077aa">export</span></span><span><span></span></span><span><span style="color:#0077aa">class</span></span><span><span></span></span><span><span style="color:#dd4a68">UserService</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#dd4a68">constructor</span></span><span><span style="color:#999999">(</span></span><span><span></span></span><span><span>@InjectModel</span></span><span><span style="color:#999999">(</span></span><span><span>User</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#0077aa">private</span></span><span><span> userModel</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#0077aa">typeof</span></span><span><span> User</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#708090">// 创建新数据</span></span><span><span></span></span><span><span style="color:#0077aa">async</span></span><span><span></span></span><span><span style="color:#dd4a68">create</span></span><span><span style="color:#999999">(</span></span><span><span>user</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span> User</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">const</span></span><span><span> newUser </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span></span></span><span><span style="color:#0077aa">await</span></span><span><span></span></span><span><span style="color:#0077aa">this</span></span><span><span style="color:#999999">.</span></span><span><span>userModel</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">create</span></span><span><span style="color:#999999">(</span></span><span><span>user</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span> newUser</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#708090">// 查找所有数据</span></span><span><span></span></span><span><span style="color:#0077aa">async</span></span><span><span></span></span><span><span style="color:#dd4a68">findAll</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span></span></span><span><span style="color:#0077aa">this</span></span><span><span style="color:#999999">.</span></span><span><span>userModel</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">findAll</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#708090">// 按要求查找单个</span></span><span><span></span></span><span><span style="color:#0077aa">async</span></span><span><span></span></span><span><span style="color:#dd4a68">findOne</span></span><span><span style="color:#999999">(</span></span><span><span>id</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">string</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span></span></span><span><span style="color:#0077aa">this</span></span><span><span style="color:#999999">.</span></span><span><span>userModel</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">findOne</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">{</span></span><span><span> where</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> id </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#708090">// 按要求更新</span></span><span><span></span></span><span><span style="color:#0077aa">async</span></span><span><span></span></span><span><span style="color:#dd4a68">update</span></span><span><span style="color:#999999">(</span></span><span><span>id</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">string</span></span><span><span style="color:#999999">,</span></span><span><span> user</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span> User</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">await</span></span><span><span></span></span><span><span style="color:#0077aa">this</span></span><span><span style="color:#999999">.</span></span><span><span>userModel</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">update</span></span><span><span style="color:#999999">(</span></span><span><span>user</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> where</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> id </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span></span></span><span><span style="color:#0077aa">this</span></span><span><span style="color:#999999">.</span></span><span><span>userModel</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">findOne</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">{</span></span><span><span> where</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> id </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#708090">// 按要求删除</span></span><span><span></span></span><span><span style="color:#0077aa">async</span></span><span><span></span></span><span><span style="color:#0077aa">delete</span></span><span><span style="color:#999999">(</span></span><span><span>id</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">string</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">const</span></span><span><span> user </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span></span></span><span><span style="color:#0077aa">await</span></span><span><span></span></span><span><span style="color:#0077aa">this</span></span><span><span style="color:#999999">.</span></span><span><span>userModel</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">findOne</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">{</span></span><span><span> where</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> id </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">await</span></span><span><span> user</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">destroy</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#999999">}</span></span></span></code></pre><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><code><span>Tips:</span></code></span></span><span><span><span> 进行删除的时候，我们可以进行假删除，两个数据库，一个是备份数据库，一个是主数据库。主数据库可以直接删除或者增加标识表示删除。备份数据库，可以不用删除只写入和更新操作，这样可以进行数据还原操作。 </span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>此外，为了防止 SQL 数据库注入，大家需要对数据来源进行统一校验处理或者直接进行 encode 处理，对于重要数据可以直接进行 MD5 加密处理，防止数据库被直接下载泄露。关于 SQL 数据库的安全处理，网上教程有很多，大家找一找就可以啦～</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>部署就比较简单了，我们就不需要一一赘述了，数据库可以用集团提供的云数据库，而 Nest 就是普通的 node 部署。</span></span></span></p><blockquote><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>作者：京东零售，周明亮</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>来源：京东云开发者社区，转载请注明来源</span></span></span></p></blockquote></div>
                                    ]]>
            </description>
            <pubDate>Tue, 10 Oct 2023 08:44:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/4090830/blog/10116557</guid>
            <link>https://my.oschina.net/u/4090830/blog/10116557</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[微软将在 Windows 中弃用 VBScript]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">微软<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flearn.microsoft.com%2Fen-us%2Fwindows%2Fwhats-new%2Fdeprecated-features" target="_blank">宣布</a>弃用 VBScript，并计划在<span style="background-color:#ffffff">未来的 Windows 版本中逐步淘汰</span><span style="background-color:#ffffff">该脚本语言</span><span style="background-color:#ffffff">。「VBScript 在从操作系统中移除之前，将作为按需功能提供。」</span></span></p><p><span style="color:#000000"><span style="background-color:#ffffff">按需功能是 Windows 操作系统中的可选功能，如 .NET Framework（.NetFx3）、Hyper-V 和 Windows Subsystem for Linux，这些功能默认情况下不会安装，但可以在必要时随时添加。</span></span></p><p><img height="371" src="https://oscimg.oschina.net/oscnet/up-c228c1d4dce95ce5941b7b368396073c90c.png" width="500" referrerpolicy="no-referrer"></p><p><span style="color:#000000"><span style="background-color:#ffffff">VBScript（也称为 Visual Basic Sc​​ript 或 Microsoft Visual Basic Sc​​ripting Edition）</span><span style="background-color:#ffffff">是一种</span><span style="background-color:#ffffff">类似于 Visual Basic 或 Visual Basic for Applications (VBA) </span><span style="background-color:#ffffff">的脚本语言</span><span style="background-color:#ffffff">，</span><span style="background-color:#ffffff">可追溯到 1996 年。</span></span></p><p><span style="color:#000000"><span style="background-color:#ffffff">VBScript 基于 pre.NetNet Basic，可以看作是&nbsp;VB&nbsp;语言的简化版，它具有原语言容易学习的特性。这种语言广泛应用于网页和 ASP 程序制作，同时还可以直接作为一个可执行程序，用于调试简单的 VB 语句非常方便。VBScript 与 Internet Explorer 捆绑，将活动脚本集成到 Windows 环境中，并通过 Windows 脚本与主机应用程序通信。</span></span></p><p><span style="color:#000000">尽管微软官方并未对此做出解释，但其弃用 VBScript 的</span><span style="background-color:#ffffff; color:#000000">的部分原因可能是出于安全考虑</span><span style="color:#000000">。科技媒体 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bleepingcomputer.com%2Fnews%2Fsecurity%2Fmicrosoft-to-kill-off-vbscript-in-windows-to-block-malware-delivery%2F" target="_blank">Bleeping Computer</a> 认为，此举旨在减少日益猖獗的利用各种 Windows 和 Office 功能进行感染的恶意软件活动。恶意行为者曾使用 VBScript <span style="background-color:#ffffff">将恶意软件分发到受害者的计算机上</span>，包括 Lokibot、Emotet、Qbot 等臭名昭著的恶意软件，以及最近的 DarkGate 恶意软件等。</span></p><p><span style="color:#000000">在 2018 年，微软将对 AMSI 的支持扩展到了 Office 365 应用程序，遏制了利用 VBA 宏的攻击。随后，微软禁用了 Excel 4.0 (XLM) 宏，引入了 XLM 宏保护，强制默认阻止 VBA Office 宏，并开始在全球 Microsoft 365 租户中默认阻止不受信任的 XLL 加载项。</span></p><p><strong><span style="color:#000000">相关阅读：</span></strong></p><ul><li style="text-align:start"><a href="https://www.oschina.net/news/108796/update-disabling-vbscript-internet-explorer-11" target="_blank">微软将于本月开始在旧版 Windows 的 IE 11 中禁用 VBScript</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Tue, 10 Oct 2023 08:39:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261322/microsoft-deprecated-vbscript-in-window</guid>
            <link>https://www.oschina.net/news/261322/microsoft-deprecated-vbscript-in-window</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[HTTP/2 'Rapid Reset' 漏洞，引发每秒可达数亿次的 DDoS 攻击]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Cloudflare 谷歌等企业发现 HTTP/2 的一个 0day 漏洞可以放大 DDoS 攻击，每秒可达数亿次。</p><p>互联网巨头表示，新发现的 HTTP/2 漏洞已被用来发起 DDoS 攻击，其规模远远超出了之前记录的任何一次。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-4f87908c80d9741d9fd3379eb23b69b5d57.png" referrerpolicy="no-referrer"></p><p>Cloudflare、谷歌、微软和亚马逊均表示，他们成功缓解了其中两家公司在 8 月和 9 月记录的最大 DDoS 第 7 层攻击，但没有透露这些攻击是针对谁的。这些公司表示，这些攻击之所以可能发生，是因为 HTTP/2 协议中存在一个 0day 漏洞，他们将其命名为<strong>「HTTP/2 快速重置」 (HTTP/2 'Rapid Reset')</strong>。</p><p>HTTP/2 允许通过单个连接同时向网站发出多个请求，从而加快页面加载速度。Cloudflare 写道，这些攻击显然涉及到一个自动循环，即向使用 HTTP/2 的网站发送并立即取消「数十万个」请求，导致服务器不堪重负并使其脱机。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-81269d06319748aede89595b229a10e3edb.png" referrerpolicy="no-referrer"></p><p>谷歌记录的最严重的攻击每秒超过 3.98 亿次请求，据称这是其之前记录的任何此类攻击的七倍多。Cloudflare 在峰值时每秒处理了 2.01 亿个请求，它也称其为破纪录，而亚马逊记录的请求最少，达到了极限。每秒 1.55 亿次。微软没有透露自己的数据。</p><p>参考链接</p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.theverge.com%2F2023%2F10%2F10%2F23911186%2Fddos-http2-vulnerability-blocked-amazon-aws-cloudflare-google-cloud" target="_blank">https://www.theverge.com/2023/10/10/23911186/ddos-http2-vulnerability-blocked-amazon-aws-cloudflare-google-cloud</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcloud.google.com%2Fblog%2Fproducts%2Fidentity-security%2Fhow-it-works-the-novel-http2-rapid-reset-ddos-attack" target="_blank">https://cloud.google.com/blog/products/identity-security/how-it-works-the-novel-http2-rapid-reset-ddos-attack</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Tue, 10 Oct 2023 08:29:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261320/http2-rapid-reset-ddos-attack</guid>
            <link>https://www.oschina.net/news/261320/http2-rapid-reset-ddos-attack</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[ChromeOS 是使用 Google 桌面环境的 Linux 发行版]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Kevin C. Tofel 是一名专注报道 Chromebook 内容的科技作者。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.aboutchromebooks.com%2Fnews%2Fnow-more-than-ever-chromeos-is-linux-with-googles-desktop-environment%2F" target="_blank">最近他在文章提到</a>，<strong>ChromeOS 现在更像是带有 Google 桌面环境的 Linux 发行版</strong>。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-45d0fda10e68e749e56a35a059e2e1980cf.png" referrerpolicy="no-referrer"></p><p>他说道，尽管并非所有人都知道，但 ChromeOS 实际上是一个 Linux 发行版。这个事实被有效地隐藏了。他对此的理解是：<strong>对于主流消费者来说，Linux 可能是一个令人恐惧的词汇</strong>。但无法否认，ChromeOS 就是 Linux —— 它使用了 Linux 内核，<strong>但被图形用户界面（也就是桌面环境）隐藏了起来</strong>。</p><p>他解释说，当你安装 Linux 时，你会选择一个发行版。它可能是 Arch、Fedora、Debian、Ubuntu。他自己用的是 Pop OS! —— 包含一个 Linux 内核以及该特定发行版的软件和修改。你可以把内核看作是最底层的软件。它帮助其他软件与硬件进行交互，以形成一个连贯的系统。这就是你可以通过应用程序或终端浏览文件的原因。</p><p>然而，这只是系统的一部分。另一部分是你如何与它进行交互。有些人更喜欢使用终端和命令行来完成所有事情，这种方法涉及到相对陡峭的学习曲线。所以有图形化的桌面环境来帮助解决这个问题。这些环境会以可视化的方式显示可点击的文件夹，或者有一个应用程序启动器菜单等等。</p><p>尽管大多数 Linux 发行版都带有默认的桌面环境，用户可以从许多其他环境中进行安装和选择。但在 ChromeOS 上你不能这样做，这就是为什么他说&nbsp;<strong>ChromeOS 使用了 Google 的桌面环境</strong>。</p><p>因此回到 ChromeOS 和底层系统软件上来说，它就是 Linux。<strong>Google 使用了你从未见过的定制版本的 Linux</strong>。</p><p>Kevin C. Tofel 进一步解释说，当你在 ChromeOS 上打开 Linux，你会看到一个终端和运行在虚拟机中的 Debian Linux 容器。这就是为什么你可以在 ChromeOS 上运行 Linux 应用程序的原因。</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 10 Oct 2023 06:55:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261297/chromeos-is-linux-with-googles-desktop-environment</guid>
            <link>https://www.oschina.net/news/261297/chromeos-is-linux-with-googles-desktop-environment</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[ChatGPT 移动应用 9 月收入高达 458 万美元]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">市场情报公司 Appfigures 的最新分析数据<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fappfigures.com%2Fresources%2Finsights%2F20231006%3Ff%3D2" target="_blank">显示</a>，OpenAI 的官方 ChatGPT 应用程序安装数量和收入持续增长，9 月份创下了两项新纪录：全球 iOS 和 Android 应用程序的下载量达到 1560 万次，其中 Google Play 的下载量为 900 万，App Store 的下载量为 660 万。以及总收入接近 460 万美元，净收入 320 万美元；其中 300 万美元，自 iPhone 用户，其余来自 Google Play。</span></p><p><span style="color:#000000">ChatGPT 官方应用自 5 月起在 App Store 上架，7 月正式登录 Google Play 平台。自推出以来，ChatGPT 应用的总安装量已达到 5220 万次。该应用在 6、7、8 月份的总营收分别为 210 万美元、274 万美元以及 381 万美元。</span></p><p><span style="color:#000000">目前为止，美国仍是 ChatGPT 的最大市场，贡献了该应用程序生命周期收入的约 60%。</span></p><p><img height="285" src="https://oscimg.oschina.net/oscnet/up-fd19ce9c3118494505c250065e7d0da18c7.png" width="500" referrerpolicy="no-referrer"></p><p><span style="color:#000000">但数据也显示，移动端 ChatGPT 应用的收入增长已经开始放缓。前几个月的收入增长率高达 30% (7 月为 31%，8 月为 39%)，但 9 月份已降至 20%，是迄今为止最低数值。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftechcrunch.com%2F2023%2F10%2F09%2Fchatgpts-mobile-app-hit-record-4-58m-in-revenue-last-month-but-growth-is-slowing%2F" target="_blank">TechCrunch</a> 指出，收入增长放缓可能是 ChatGPT 接近饱和的第一个迹象，表明愿意为每月 19.99 美元的 ChatGPT+ 订阅服务付费的用户可能已经达到了上限。</span></p><p><span style="color:#000000">不过 ChatGPT 并不是收入最高的 AI 应用。Appfigures 数据显示，一款名为 Ask AI 的竞争对手由于大量的广告支出而获得了更多的收入；从 ChatGPT 移动版推出时的 5 月份的 648 万美元上升到了 8 月份的峰值 655 万美元。9 月份略有下降，降至 551 万美元，但仍高于 ChatGPT。其他竞争者如 Genie 和 AI Chat Smith 的增长幅度都不及 Ask AI。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 10 Oct 2023 03:36:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261118/chatgpts-mobile-app-revenue-4-58m</guid>
            <link>https://www.oschina.net/news/261118/chatgpts-mobile-app-revenue-4-58m</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[curl 8.4.0 将修复高危安全漏洞]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>curl 创始人&nbsp;Daniel Stenberg（社区称号 bagder）表示将于 10 月 11 日发布的 curl 8.4.0 会修复高危安全漏洞，并称该漏洞可能是很长一段时间以来<strong> curl 遇到的最严重漏洞 (the worst curl security flaw in a long time)</strong>，同时影响到 libcurl 库和 curl 工具。</p><p>此外还会修复被评级为"LOW"的安全漏洞——仅 libcurl 受影响。</p><ul><li>CVE-2023-38545: severity HIGH (affects both libcurl and the curl tool)</li><li>CVE-2023-38546: severity LOW (affects libcurl only, not the tool)</li></ul><blockquote><p><img src="https://static.oschina.net/uploads/space/2023/1010/105819_w1di_2720166.png" referrerpolicy="no-referrer"></p><p>via&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcurl%2Fcurl%2Fdiscussions%2F12026" target="_blank">https://github.com/curl/curl/discussions/12026</a></p></blockquote><p>bagder 表示目前无法透露有关受影响的版本范围，因为这会导致漏洞被高精确地针对性利用。他只说到「过去几年」发布的版本都会受影响。</p><p>bagder 已在邮件列表宣布该消息，建议使用 curl 的开发者密切关注即将发布的 curl 8.4.0，同时梳理在项目中使用该库的情况，以便及时安装更新。</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 10 Oct 2023 03:14:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261110/curl-8-4-coming</guid>
            <link>https://www.oschina.net/news/261110/curl-8-4-coming</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[俄罗斯企业基于龙芯处理器生产电脑和服务器]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>据俄罗斯衞星通讯社援引《生意人报》<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FtjpK9hyQwC_NB3MBC77I3w" target="_blank">报道</a>，俄 Norsi-Trans 公司将开始<strong>生产使用龙芯处理器的数据存储系统、服务器和电脑</strong>。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-b6f73a81e7091a90d17e8abc7c4ca014bb1.png" referrerpolicy="no-referrer"></p><p>据市场参与者称，中国合作伙伴决定允许向俄罗斯联邦进口处理器是由于龙芯受到美国的封锁制裁。</p><p>Norsi-Trans 总经理谢尔盖·奥夫钦尼科夫表示，<strong>公司已经采购了约 100 个龙芯处理器，将试生产一批使用龙芯处理器的设备</strong>。</p><p>Norsi-Trans 的合作伙伴将是 Basalt SPO（Alt OS 的开发商），该公司董事会主席 Alexei Smirnov 表示，ALT OS 适用于龙芯处理器。</p><p>俄罗斯数据存储系统开发商协会执行总监奥列格·伊祖姆鲁多夫指出，俄方企业将采购性能<strong>与英特尔 i5 相仿的龙芯 5000 系列处理器（12nm 工艺）</strong>。</p><p>《生意人报》指出，Norsi-Trans 并非唯一计划在产品中使用龙芯处理器的俄罗斯电子制造商，Prombit 公司的「路线图」中也包含类似计划。</p><p>接受该报采访的专家认为，俄罗斯设备转用龙芯处理器对于减少对 Intel 和 AMD 等美国技术的依赖很有必要。</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 10 Oct 2023 03:09:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261266</guid>
            <link>https://www.oschina.net/news/261266</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[RISC-V：不受任何单一公司或国家的控制]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">路透社此前发文称&nbsp;</span><a href="https://www.oschina.net/news/260839/us-china-tech-war-risc-v" target="_blank">RISC-V 技术将成为中美科技战的新战场</a><span style="color:#000000">，多名美国政客<span style="background-color:#ffffff">以国家安全为由，敦促拜登政府对 RISC-V 采取行动，呼吁拜登政府对 RISC-V 相关技术的出口实施限制。</span></span></p><p><span style="color:#000000"><span style="background-color:#ffffff">10 月 10 日，RISC-V 国际基金会发布了一篇名为</span>「</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Friscv.org%2Fblog-chinese%2F2023%2F10%2Frisc-v%25ef%25bc%259a%25e7%2594%25b1%25e5%2585%25a8%25e7%2590%2583%25e7%25a4%25be%25e5%258c%25ba%25e6%2594%25af%25e6%258c%2581%25e7%259a%2584%25e5%25bc%2580%25e6%2594%25be%25e6%25a0%2587%25e5%2587%2586%25ef%25bc%258c%25e4%25b8%25ba%25e6%2589%2580%25e6%259c%2589%25e4%25ba%25ba%25e6%258f%2590%25e4%25be%259b%25e5%25bc%2580%2F" target="_blank">RISC-V：由全球社区支持的开放标准，为所有人提供开放计算</a><span style="color:#000000">」的文章。例举了 RISC-V 具有战略重要性的三个关键原因：</span></p><ul><li><span style="color:#000000">几十年来，开放标准对于技术创新、采用和发展至关重要</span></li><li><span style="color:#000000">开放标准为广泛的利益相关者（就业、消费者、研究、学术界、工业界等）创造机会并刺激增长</span></li><li><span style="color:#000000">RISC-V 是定义的开放标准计算指令集架构</span></li></ul><p><img height="226" src="https://oscimg.oschina.net/oscnet/up-521efa89405d2d464232e797d3be397fab6.png" width="700" referrerpolicy="no-referrer"></p><p>基金会 CEO<span style="background-color:#ffffff; color:#333333">&nbsp;</span>Calista Redmond 在文章中表明，<span style="color:#000000"><span style="background-color:#ffffff">RISC-V 将会继续存在。RISC-V 是一个开放标准，吸收了来自世界各地的有意义的贡献。<strong>作为全球标准，RISC-V 不受任何单一公司或国家的控制。</strong>并强调：</span></span></p><blockquote><p><span style="color:#000000">RISC-V 规范的开发基于非专有的贡献或均匀分布在北美、欧洲和亚洲的 RISC-V 成员公开培养的贡献。RISC-V International 不提供芯片设计、开源内核、专有 IP 或实现，而是发布一组常用的全球开放标准。这些已发布的标准所包含的信息并不比专有架构已发布的信息多。唯一的区别是市场可以使用这些标准，而无需获得控股公司的专有许可。竞争不是发生在标准层面，而是发生在实施层面。</span></p><p style="color:#676767; margin-left:0; margin-right:0; text-align:start"><span style="color:#000000">RISC-V 为世界各地的公司带来了参与快速增长的半导体领域的巨大潜力。限制公司、代工厂、政府和研究机构采用 RISC-V 将使他们无法从自己资助和创建的开放标准中受益，同时让全球竞争对手在自己的实施中领先。</span></p><p style="color:#676767; margin-left:0; margin-right:0; text-align:start"><span style="color:#000000">获得开放标准可以让公司更快地创新，并把时间花在创造差异化产品上，而不是试图重新发明轮子。 正如世界各地的公司都采用以太网、HTTPS、JPEG 和 USB 标准一样，我们也看到 RISC-V 作为开放标准的类似趋势。 RISC-V 的灵活性、可扩展性和扩展性为开发人员提供了无与伦比的设计自由度。</span></p></blockquote><p>更多详情可<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Friscv.org%2Fblog-chinese%2F2023%2F10%2Frisc-v%25ef%25bc%259a%25e7%2594%25b1%25e5%2585%25a8%25e7%2590%2583%25e7%25a4%25be%25e5%258c%25ba%25e6%2594%25af%25e6%258c%2581%25e7%259a%2584%25e5%25bc%2580%25e6%2594%25be%25e6%25a0%2587%25e5%2587%2586%25ef%25bc%258c%25e4%25b8%25ba%25e6%2589%2580%25e6%259c%2589%25e4%25ba%25ba%25e6%258f%2590%25e4%25be%259b%25e5%25bc%2580%2F" target="_blank">查看官方博客</a>。&nbsp;</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 10 Oct 2023 02:46:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261262/risc-v-enable-open-computing-for-all</guid>
            <link>https://www.oschina.net/news/261262/risc-v-enable-open-computing-for-all</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[与创新者同行！Apache Doris 首届线下峰会即将开启，最新议程公开！｜即刻预约]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoris-summit.org.cn%2F%3Futm_source%3DOSChina%26utm_medium%3Dcontent%26utm_id%3D2023" target="_blank">点击此处，即刻报名 Doris Summit Asia 2023</a></strong></p><p>回顾人类的发展史，地球起源于 46 亿年前的原始星云、地球生命最初出现于 35 亿年前的原始海洋、人类物种诞生于数百万年前，而人类生产力的真正提升源于十八世纪六十年代的工业革命，自此以后，我们所熟知的一切，蒸汽机、电话、汽车、计算机、互联网、智能手机才被逐步创造出来。百年间，人类社会的变革超越了过去数百万年的总和，真正的「行万世于一时」。</p><p>探索人类社会如此极速飞跃的源动力，我们相信答案不言而喻——<strong>创新的力量</strong>。</p><p>身为技术从业者，我们无比庆幸生于这个时代，无比推崇冯·诺依曼、图灵和乔布斯，也无比致敬这些创新者们为世界带来的变化。</p><p>而时代的洪流滚滚向前，我们也期待能与更多的创新者携手，共同为数据世界带来些改变，这也是我们今年 Doris Summit Asia 2023 的主题——<strong>「与创新者同行」</strong>。</p><span id="OSC_h2_1"></span><h2><strong>与技术创新者同行，众行者远</strong></h2><hr><p>这一年里， Apache Doris 完成了从 1.0 到 2.0 具有里程碑意义的版本跨越。通过持续技术创新，实现了令人瞩目的性能飞跃。不仅如此，Apache Doris 不断拓展应用场景边界，以适配更广泛的分析场景，并为用户提供更加高效和统一的实时分析解决方案。</p><p>在性能飞跃和场景拓宽的背后，离不开所有社区开发者们的辛勤付出。截止目前，社区的贡献者已达到近 600 名，月度活跃贡献者超过 120 位，已经成为全球大数据和数据库领域最活跃的开源项目之一。在 Doris Summit Asia 2023，多位社区 PMC 成员、Committer 以及社区核心开发者将为大家带来 Apache Doris 在过去一年技术飞跃背后的思考与揭秘，敬请期待。</p><span id="OSC_h2_2"></span><h2>与行业创新者同行，不虚此行</h2><hr><p>这一年里，Apache Doris 收获到了更多行业用户的认可， 在全球范围内获得数千家中大型企业的广泛应用，涵盖金融、互联网、能源、制造、通信、企业服务等数十个行业，赢得了数万名大数据工程师的信赖，<strong>Apache Doris 正在成为开源实时数据仓库的事实标准</strong>！</p><p>在 Doris Summit Asia 2023，来自美团、小米、中国邮政储蓄银行、中国电信、中国联通、网易、腾讯、平安、雨润、虎牙等众多行业创新者们将会分享基于 Apache Doris 的创新应用，我们也希望这些宝贵的实践经验可以被更多用户聆听，以技术交流和思维碰撞为所有用户带来更加深刻的启发。</p><span id="OSC_h2_3"></span><h2>与产业创新者同行，携手共进</h2><hr><p>开源软件与商业化公司的关系从来都密不可分，开源亦是一种创新的商业模式。我们也很欣喜地看到，来自，飞轮科技、阿里云、腾讯云、AWS、天翼云、火山引擎等行业顶尖云厂商提供了基于 Apache Doris 的商业化服务，以商业成功来反哺社区，推动社区更加可持续发展。</p><p>与此同时，Apache Doris 也收获了更多的上下游合作伙伴，无论是 Apache IoTDB、Apache Shardingsphere、RisingWave、TiDB 等知名开源数据库，或是 Apache APISIX 、Apache DolphinScheduler、Apache Flink、Apache SeaTunnel 、Apache StreamPark 等顶级大数据开源项目，亦或是数势科技、Tapdata、NineData 等领先的数据服务供应商，都在一同携手、为行业注入新的活力。</p><p>立足当下展望未来，我们致敬每一位追风赶月的创新者们，也期待与更多创新者与一同前行，探索数据世界的更多可能性！</p><p><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoris-summit.org.cn%2F%3Futm_source%3DOSChina%26utm_medium%3Dcontent%26utm_id%3D2023" target="_blank">点击此处，即刻报名 Doris Summit Asia 2023</a></strong></p><p>👇🏻 <strong>现峰会完整议程已经公开，期待 10 月 21 日与你在 Doris Summit Asia 2023 相遇~</strong><img src="https://oscimg.oschina.net/oscnet/up-dab17d24a4536cf9739385c1588dfd31b19.jpg" alt="" referrerpolicy="no-referrer"><img src="https://oscimg.oschina.net/oscnet/up-2e69e54e44df9411ba012e003c2b73e6279.jpg" alt="" referrerpolicy="no-referrer"><img src="https://oscimg.oschina.net/oscnet/up-f82e92416023157e58713c6159cff7e288c.jpg" alt="" referrerpolicy="no-referrer"><img src="https://oscimg.oschina.net/oscnet/up-14f2a7696897166d3853e7aa97a77560bd7.jpg" alt="" referrerpolicy="no-referrer"><img src="https://oscimg.oschina.net/oscnet/up-5a70b43ccd8e71f062bc5ca2557039712c8.jpg" alt="" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 10 Oct 2023 02:33:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/5735652/blog/10116741</guid>
            <link>https://my.oschina.net/u/5735652/blog/10116741</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Unity 首席执行官 John Riccitiello 离职]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>根据 Unity 官方消息，Unity 首席执行官 John Riccitiello 已宣布离职，该事宜即日生效。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-6c10a9521e4d9916a0e7e7d57f5f97d17cb.png" referrerpolicy="no-referrer"></p><p><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.businesswire.com%2Fnews%2Fhome%2F20231009494331%2Fen%2FUnity-Announces-Leadership-Transition" target="_blank">Unity 在一份声明中表示</a>，已任命 James Whitehurst 为临时首席执行官，Roelof Botha 为董事长。Riccitiello 将继续为 Unity 提供建议，以确保平稳过渡，董事会将启动任命一位永久首席执行官的流程。</p><p><img src="https://static.oschina.net/uploads/space/2023/1010/103434_WHy2_2720166.png" referrerpolicy="no-referrer"></p><p>此前 Unity 宣布了新的收费规则，引起业内人士的强烈不满。之后 Unity 向公众和业内人士道歉，并调整了收费规则。</p><p><strong>延伸阅读</strong></p><ul><li><a href="https://www.oschina.net/news/257929/unity-runtime-fee">Unity 引擎明年起根据游戏安装量收费 (runtime fee)</a></li><li><a href="https://www.oschina.net/news/258513/unity-apologize-for-runtime-fee">Unity 道歉：将修改 "runtime fee" 收费政策</a></li><li><a href="https://www.oschina.net/news/258477/wait-is-unity-allowed-to-just-change-its-fee-structure-like-that">走近「收费门」：互相矛盾的服务条款导致 Unity 面临被起诉的风险</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Tue, 10 Oct 2023 02:32:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261101/unity-ceo-john-riccitiello-is-retiring</guid>
            <link>https://www.oschina.net/news/261101/unity-ceo-john-riccitiello-is-retiring</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[【SIG 月报】9 月 openKylin 社区 SIG 组最新进展分享]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#222222; margin-left:0px; margin-right:0px; text-align:justify"><span><span style="color:#000000">为推动社区繁荣发展，打造开源操作系统创新生态，openKylin 社区围绕</span><strong><span style="color:#000000">创新硬件、人机交互、智能支撑、终端安全、互联协同、云端融合</span></strong><span style="color:#000000">等多个技术领域，以技术小组的形式开展深入研究和技术创新。接下来，让我们一起盘点 9 月份 openKylin 社区 SIG 组的最新进展：</span></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:center"><span><strong><span style="color:#ffffff"><span style="background-color:#4f9eff">9 月社区新增 SIG</span></span></strong></span></p><h1>9 月社区新增 1 个 SIG 组，目前已累计成立 86 个 SIG 组，新增 SIG 组信息如下：</h1><p style="color:#222222; margin-left:0; margin-right:0; text-align:left"><span><strong><span style="color:#ff9b0e"><span style="background-color:#f5faff">01</span></span><span style="color:#1c9cee"><span style="background-color:#f5faff">AI4OS SIG</span></span></strong></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000"><span style="background-color:#f5faff">操作系统智能化（Artificial Intelligence for Operating System）由社区爱好者发起成立，致力于将人工智能（AI）与操作系统（OS）相结合，以实现操作系统的智能化和性能优化。将大模型为代表的 AI 技术嵌入 openKylin 操作系统，让 AI 深扎底层操作系统，可以在没有任何应用作为中介的情况下，直接调用 AI 大模型能力完成任务。</span></span></span></p><ul><li><span><span style="color:#000000">SIG 主页：</span></span></li><li><span><span style="color:#0052ff">https://gitee.com/openkylin/community/tree/master/sig/AI4OS</span></span></li></ul><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify">&nbsp;</p><p style="color:#222222; margin-left:0; margin-right:0; text-align:center"><span><strong><span style="color:#ffffff"><span style="background-color:#4f9eff">9 月社区 SIG 活跃度汇总</span></span></strong></span></p><p>9 月社区新增有效 PR 数 559 个、仓库 Fork 数新增 104 个、SIG 组公开例会召开 7 次。截至目前，社区累计有效 PR 数 11122 个、仓库 Fork 数 4364 个、SIG 组公开例会召开 93 次，其中：</p><ul><li><span><span style="color:#000000">9 月社区 SIG 组 PR 贡献 top15 如下：</span></span></li></ul><div><p style="text-align:center"><img alt="" height="556" src="https://oscimg.oschina.net/oscnet/up-f6da435acfce936b5ba91e340785173187f.png" width="794" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px">&nbsp;</p></div><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">9 月社区 SIG 组活跃地图分布情况（颜色越深代表越活跃，参考维度：PR、issue、SIG 会议）如下：</span></span></p><div><p style="text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-13b61252308faea98672ac9805bdafca274.png" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px">&nbsp;</p></div><p style="color:#222222; margin-left:0; margin-right:0; text-align:center"><span><strong><span style="color:#ffffff"><span style="background-color:#4f9eff">9 月社区技术进展与成果</span></span></strong></span></p><p style="margin-left:0px; margin-right:0px; text-align:justify"><strong>一、UKUI SIG</strong></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">UKUI(Ultimate Kylin User Interface) SIG 小组致力于桌面环境相关软件包的规划、维护和升级工作，满足各种设备和用户需求的桌面环境程序，主要包含程序启动器（开始菜单）、用户配置、文件管理、登录锁屏、桌面、网络工具、快捷配置等，为用户提供基本的图形化操作平台。桌面核心组件开发工具以 Qt、C++为主，宗旨是始终如一地提升系统的操作体验，提供集稳定性、美观性、流畅性和便捷性为一体的桌面环境。9 月进展如下：</span></span></p><ul><li><span><span style="color:#000000">系统监视器新增后台运行功能并注册托盘图标；</span></span></li><li><span><span style="color:#000000">搜索、开始菜单适配多 Display 场景下；</span></span></li><li><span><span style="color:#000000">优化搜索设置项显示策略、优化内存操作逻辑和若干 bug；</span></span></li><li><span><span style="color:#000000">修复文件管理器操作相关的若干问题；</span></span></li><li><span><span style="color:#000000">修复切换语言后立刻重启计算机后桌面出现多余图标问题；</span></span></li><li><span><span style="color:#000000">修复桌面目录后出现「锁状」图标问题；</span></span></li><li><span><span style="color:#000000">修复任务栏预览窗口操作显示逻辑问题；</span></span></li><li><span><span style="color:#000000">修复控制面板关于模块部分名词拼写问题；</span></span></li><li><span><span style="color:#000000">修复系统安装完成后应用通知按钮为关闭状态的问题；</span></span></li><li><span><span style="color:#000000">完成 3 篇桌面协议相关翻译；</span></span></li><li><span><span style="color:#000000">UKUI-Lite 技术方案评审；</span></span></li><li><span><span style="color:#000000">UKUI Framework 后续规划及统一接口方案评审。</span></span></li></ul><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">欢迎各位感兴趣的社区开发者加入我们，一起打造 openKylin 桌面系统稳定易用的桌面环境！</span></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify">&nbsp;</p><p style="margin-left:0px; margin-right:0px; text-align:justify"><strong>二、RISC-V SIG</strong></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#333333">本</span>SIG 组主要负责 RISC-V 架构开源软件包的维护，发布 openKylin 的 RISC-V 版本，进行软件包构建、系统构建等工作。9 月 RISC-V SIG 组进展如下：</span></p><ul><li><span><span style="color:#000000">解决了 VisionFive2 开发板在 wayland 模式下鼠标指针不显示的问题；</span></span></li><li><span><span style="color:#000000">制作 roma 笔记本新版 sdk3.6.1 的镜像；</span></span></li><li><span><span style="color:#000000">更新并发布 VisionFive2 和荔枝派的 openKylin1.0.1 版本镜像；</span></span></li><li><span><span style="color:#000000">获取 electron 的包，通过安装高版本依赖的方式解决了 electron 的启动问题，目前可以在 xorg 模式下正常运行 electron；</span></span></li><li><span><span style="color:#000000">尝试在荔枝派开发板中适配 gpu，和厂商沟通联调；</span></span></li><li><span><span style="color:#000000">调试并进行 box64 代码梳理。主要学习动态重编译部分，梳理了运行微信从模拟运行入口，到 opcode 翻译，到汇编指令执行的流程。</span></span></li></ul><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">欢迎所有对 RISC-V 开发平台技术方向感兴趣的爱好者加入到 RISC-V SIG！</span></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify">&nbsp;</p><p style="margin-left:0px; margin-right:0px; text-align:justify"><strong>三、Release SIG</strong></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">Release SIG 主要负责协调各个 SIG 组，把控版本开发进度和风险，制定版本发布计划，完成版本发布工作等。Release SIG 9 月主要进展如下：</span></span></p><ul><li><span><span style="color:#000000">推动 openKylin 1.0.1 各架构版本集成、测试验收等工作，完成 1.0.1 版本发布；</span></span></li><li><span><span style="color:#000000">推动搜狗输入法 NG 版本和 openKylin 1.0.1 适配；</span></span></li><li><span><span style="color:#000000">编写 openKylin 1.0.1 版本更新日志；</span></span></li><li><span><span style="color:#000000">openKylin 2.0 版本规划，需求讨论、推进，启动基础库选型等工作；</span></span></li><li><span><span style="color:#000000">和儒特科技讨论 QSFramework 在社区合作落地、代码持续集成等事宜。</span></span></li></ul><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">欢迎所有对 openKylin 社区版本集成、版本管理、版本发行等工作感兴趣的爱好者加入到 Release SIG！</span></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify">&nbsp;</p><p style="margin-left:0px; margin-right:0px; text-align:justify"><strong>四、Packaging SIG</strong></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">Packaging SIG 负责维护 openKylin 社区的软件包打包规范，维护公共软件包，以及协调和决策社区版本发布过程中的包依赖问题。9 月主要进展如下：</span></span></p><ul><li><span><span style="color:#000000">《openKylin 生态应用自主选型构建》任务第一阶段选型报告评审；</span></span></li><li><span><span style="color:#000000">cme 程序无法使用（Compilation failed），执行报错问题分析修改；</span></span></li><li><span><span style="color:#000000">解决 arm64 架构基础构建工具 cmake 运行报符号未定义的问题；</span></span></li><li><span><span style="color:#000000">软件包源码信息整改。</span></span></li></ul><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">欢迎所有对 openKylin 社区软件自主选型、编译打包工作感兴趣的社区爱好者加入我们！</span></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify">&nbsp;</p><p style="margin-left:0px; margin-right:0px; text-align:justify"><strong>五、QA SIG</strong></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">QA SIG 组致力于提升 openKylin 社区版本质量，包括社区版本测试、质量保障等。9 月主要进展如下：</span></span></p><ul><li><span><span style="color:#000000">openKylin-1.0-2309-beta-0901 版本测试；</span></span></li><li><span><span style="color:#000000">窗管替换 wlcom 专项测试；</span></span></li><li><span><span style="color:#000000">openKylin-1.0-2309-beta-0908 版本测试；</span></span></li><li><span><span style="color:#000000">openKylin-1.0.1-0918 版本测试。</span></span></li></ul><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">欢迎所有对 openKylin 社区版本测试、质量管理感兴趣的社区爱好者加入我们！</span></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify">&nbsp;</p><p style="margin-left:0px; margin-right:0px; text-align:justify"><strong>六、SecurityGovernance SIG</strong></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">openKylin SecurityGovernance SIG 通过接收和响应 openKylin 社区的产品安全问题报告、提供社区安全指导，开展安全治理等活动提升社区产品的安全性。9 月主要进展如下：</span></span></p><ul><li><span><span style="color:#000000">Genmai 开发：新增安全漏洞自动化用例 poc40 个；解决某些架构下返回值异常导致崩溃问题；适配龙芯架构,适配 risc-v 架构，进度 80%；解决漏洞用例 yaml 文件格式错误问题；解决 kysec、Selinux 导致 poc 及基线扫描出错问题；增加「将 root 权限传入基线脚本」的功能；开发根据服务端版本自动更新功能；解决 C/S 架构漏洞检测传输时长过长造成超时问题；新增原创安全漏洞 5 个；</span></span></li><li><span><span style="color:#000000">参加在西班牙毕尔巴鄂由 Linux 基金会主办的 2023 Linux 安全峰会，并发表主题演讲。</span></span></li></ul><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">欢迎所有对 openKylin 版本安全全漏洞挖掘/验证、安全漏洞修复等安全方面工作感兴趣的社区爱好者加入我们！</span></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify">&nbsp;</p><p style="margin-left:0px; margin-right:0px; text-align:justify"><strong>七、OpenSDK SIG</strong></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">OpenSDK SIG 组负责开发者套件（base、system、applications）规划、开发、维护等工作，致力于解决应用在多操作系统中的兼容性问题。9 月主要进展如下：</span></span></p><ul><li><span><span style="color:#000000">完成配置化模块的 conf2 表结构设计、xml2yaml 特定格式转换工具开发工作；后端服务支持数据写入以及键值对变更信号发送；</span></span></li><li><span><span style="color:#000000">优化并协助其他组件排查解决问题共 21 个：优化开发手册易用性，包括 man 手册以及开发指南中 API 引入的 sdk 版本号；优化应用埋点接口功能。</span></span></li></ul><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">欢迎所有对开发者套件感兴趣的社区爱好者们加入 OpenSDK SIG 组！</span></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:left">&nbsp;</p><p style="margin-left:0px; margin-right:0px; text-align:justify"><strong>八、CompatWinApp SIG</strong></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">CompatWinApp SIG 组致力于将大量的 Windows 系统应用程序引入到 openKylin 系统。SIG 组将通过研究应用兼容技术和指令翻译技术，研制完善的 windows 应用兼容方案，让更多的 windows 应用能兼容运行于 openKylin 系统，不断繁荣 openKylin 软件生态。9 月主要进展如下：</span></span></p><ul><li><span><span style="color:#000000">修改 wine 助手下载流程，直接下载应用修改为先跳转到应用程序下载页面；在当前应用配置文件中增加应用下载页参数；</span></span></li><li><span><span style="color:#000000">下载应用时增加对用户的操作提示；修复当应用下载链接更新时无法下载的问题；修复下载链接重定向时无法下载的问题；</span></span></li><li><span><span style="color:#000000">研究解决了 wine riched20 模块中导致的微信编辑输入框右键不显示菜单的问题，初步解决了编辑框光标位置错乱的问题；</span></span></li><li><span><span style="color:#000000">在 wine-program 仓库 wiki 界面增加 wine 助手的使用说明。</span></span></li></ul><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">欢迎所有对应用兼容技术和指令翻译技术感兴趣的爱好者加入到 CompatWinApp SIG！</span></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify">&nbsp;</p><p style="margin-left:0px; margin-right:0px; text-align:justify"><strong>九、Infrastructure SIG</strong></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">Infrastructure SIG 负责 openKylin 社区的基础平台系统功能的开发、维护。9 月主要进展如下：</span></span></p><ul><li><span><span style="color:#000000">优化 openKylin 看板结合 SIG 状态自动更新 SIG 数量问题；</span></span></li><li><span><span style="color:#000000">openKylin 看板增加任务平台积分更新功能；</span></span></li><li><span><span style="color:#000000">优化 openKylin 看板前端，增加页面缓存 TAB；</span></span></li><li><span><span style="color:#000000">CLA 开放企业管理员手动添加签署员工限制；</span></span></li><li><span><span style="color:#000000">CLA 修复企业管理员后台一些内容未国际化问题；</span></span></li><li><span><span style="color:#000000">openKylin 看板增加 commit 信息统计，支持 commit 记录导出。</span></span></li></ul><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">欢迎所有对 openKylin 社区基础设施平台开发维护感兴趣的爱好者加入到 Infrastructure SIG！</span></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify">&nbsp;</p><p style="margin-left:0px; margin-right:0px; text-align:justify"><strong>十、Connectivity SIG</strong></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">本 SIG 组致力于 openKylin 社区的互联互通基础能力开发与维护，9 月主要进展如下：</span></span></p><ul><li><span><span style="color:#000000">优化文件管理其插件相关能力，解决线程安全问题。</span></span></li></ul><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">欢迎各位感兴趣的社区开发者加入 Connectivity SIG 小组，一起共建 openKylin 桌面系统互联互通能力！</span></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify">&nbsp;</p><p style="margin-left:0px; margin-right:0px; text-align:justify"><strong>十一、I18n SIG</strong></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">I18N SIG 组负责 openKylin 社区国际化和本地化相关工作，包括多语言开发框架、多语言平台开发和维护，以及社区、版本内文档的翻译管理相关工作。9 月主要进展如下：</span></span></p><ul><li><span><span style="color:#000000">翻译官网新闻 18 篇；</span></span></li><li><span><span style="color:#000000">翻译 openKylin 基于 RISC-V 的主要工作介绍；</span></span></li><li><span><span style="color:#000000">校验 openKylin 个人信息保护及隐私政策声明。</span></span></li></ul><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">欢迎所有对操作系统、网站网页、文档等翻译工作感兴趣的社区爱好者们加入 I18n SIG 组！</span></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:left">&nbsp;</p><p style="margin-left:0px; margin-right:0px; text-align:justify"><strong>十二、InputMethod SIG</strong></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">本 SIG 组致力于组建输入法开源社区，推进开源输入法框架及开源输入法在社区维护。9 月主要进展如下：</span></span></p><ul><li><span><span style="color:#000000">定位分析搜狗输入法问题，包括 wayland 环境输入窗口显示异常、托盘菜单图标显示异常和候选词上屏异常等问题；</span></span></li><li><span><span style="color:#000000">讨论 OK 输入法进展，完成 OK 输入法设计文档；</span></span></li><li><span><span style="color:#000000">分析拼音输入法右键菜单显示异常问题，与 fcitx 社区讨论修改情况；</span></span></li><li><span><span style="color:#000000">完成虚拟键盘支持动画效果开发，提高 UI 美观度；</span></span></li><li><span><span style="color:#000000">完成虚拟键盘支持多语言输入开发，其中包括哈萨克语、维吾尔语、柯尔克孜语和藏语等。</span></span></li></ul><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">欢迎所有对 openKylin 社区 fcitx 输入法框架、桌面虚拟键盘开发工作感兴趣的社区爱好者加入我们！</span></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify">&nbsp;</p><p style="margin-left:0px; margin-right:0px; text-align:justify"><strong>十三、Kernel SIG</strong></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">Kernel SIG 组致力于新硬件适配、新功能、新特性开发。不断提升内核健壮性、稳定性，能更好的为 openKylin 系统和应用程序提供底层技术支持。9 月主要进展如下：</span></span></p><ul><li><span><span style="color:#000000">6.1 内核从 6.1.43 更新到 6.1.55。</span></span></li></ul><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">欢迎所有对内核感兴趣的社区小伙伴加入 openKylin 社区 Kernel SIG 组！</span></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify">&nbsp;</p><p style="margin-left:0px; margin-right:0px; text-align:justify"><strong>十四、Virtualization SIG</strong></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">Virtualization SIG 组致力于构建 openKylin 社区系统虚拟化技术，打造面向端、边、云的全场景虚拟化解决方案。9 月主要进展如下：</span></span></p><ul><li><span><span style="color:#000000">qemu:修复了 CVE-2023-0330 漏洞。</span></span></li></ul><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">欢迎所有对虚拟化组件或软件包技术感兴趣的社区小伙伴加入 openKylin 社区 Virtualization SIG 组！</span></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify">&nbsp;</p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><em><strong>十五、Framework SIG</strong></em></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">本 SIG 组致力于为 openKylin 社区提供集程序编辑、编译、调试、发布、分析等全套开发功能的编程环境，涵盖通用集成开发环境、编译工具链、运行时环境、类库等，9 月主要进展如下：</span></span></p><ul><li><span><span style="color:#000000">Kylin-Code 发布 v0.1.3，修复诸多问题，并上架应用商店；</span></span></li></ul><ul><li><span><span style="color:#000000">C/C++调试，Java 调试，插件依赖管理，死锁检测等插件发布新版本。</span></span></li></ul><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">欢迎对集成开发环境研发感兴趣的社区开发者和爱好者加入 Framework SIG！</span></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify">&nbsp;</p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><em><strong>十六、Cutefish SIG</strong></em></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">Cutefish SIG 负责移植 Cutefish 桌面环境及其组件，专注于打造美观易用、极简操作的桌面环境。9 月进展如下：</span></span></p><ul><li><span><span style="color:#000000">完成 RISC-V 架构开发板 VisionFive2 的适配工作；</span></span></li><li><span><span style="color:#000000">完成 ARM 架构开发板 CoolPi 4B 的适配工作。</span></span></li></ul><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">如果您对移植桌面环境有兴趣，或者有相关打包经验，欢迎加入我们！</span></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify">&nbsp;</p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><em><strong>十七、KernelBuilder SIG</strong></em></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">KernelBuilder SIG 组负责 openKylin 内核预览版本的自动化构建，构建工具（kernel-builder）的规划、开发、维护等工作。同时积极维护了 openkylin-rootfs 和 openkylin-wsl 仓库，为 openKylin 提供了可用的根文件系统、wsl 开发环境为 openKylin 在 docker 容器化创造了条件。9 月主要进展如下：</span></span></p><ul><li><span><span style="color:#000000">rootfs 根文件系统迭代更新；</span></span></li><li><span><span style="color:#000000">docker 镜像打包制作；</span></span></li><li><span><span style="color:#000000">利用 github actions 自动打包制作 rootfs 根文件系统和 docker 镜像，并更新内部环境；</span></span></li><li><span><span style="color:#000000">distcc 软件适配进行中；</span></span></li><li><span><span style="color:#000000">为内核自动化构建创造 docker 预运行环境；</span></span></li><li><span><span style="color:#000000">同时本月联合 opendde sig 开展共同开发计划；</span></span></li><li><span><span style="color:#000000">香橙派 kernel 适配中、根文件系统适配中；</span></span></li><li><span><span style="color:#000000">内部测试 apt 源已搭建完成、目前可以小范围通过 apt 分发测试版内核。</span></span></li></ul><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">欢迎所有对 openKylin 社区内核构建及应用、docker 容器化、根文件系统、wsl 开发环境感兴趣的社区爱好者加入我们！</span></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify">&nbsp;</p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><em><strong>十八、RTHypervisor SIG</strong></em></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">RTHypervisor SIG 小组致力于实时虚拟化技术的研究，目前主要包括 Jailhouse，提供工控、车载等领域实时控制的虚拟化解决方案，Jailhouse 项目 9 月主要进展如下：</span></span></p><ul><li><span><span style="color:#000000">新增 arm64 平台上通过将 pcie rc 和 its 隔离给 non root cel 的方式，将 pcie 设备隔离给 non root cell，实现 pcie 设备直通功能。</span></span></li></ul><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">欢迎所有对 openKylin 社区实时虚拟化技术感兴趣的社区爱好者加入我们！</span></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify">&nbsp;</p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><em><strong>十九、FAQ SIG</strong></em></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">FAQ SIG 小组致力于收集各渠道社区开发者、爱好者等用户反馈的问题，并建立相关标准化流程推动问题解答或解决同时，在这一过程中不断为 openKylin 社区积累 FAQ 知识库。9 月主要进展如下：</span></span></p><ul><li><span><span style="color:#000000">召开 1 次 SIG 例会，和 UKUI SIG，Docs SIG，Community SIG 组交流和讨论当前待解决的问题；</span></span></li><li><span><span style="color:#000000">收集论坛、社群高频问题并提交 issue 指派给开发，解决 10+高频问题；</span></span></li><li><span><span style="color:#000000">社群用户答疑与指导，指导用户解决系统下载安装、软件商店、桌面环境等相关问题。</span></span></li></ul><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">欢迎所有感兴趣的社区爱好者加入我们！</span></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify">&nbsp;</p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><em><strong>二十、OpenDDE SIG</strong></em></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">OpenDDE SIG 致力于维护 openKylin 的 DDE 桌面环境以及相关组件，专注于打造美观易用、极简操作的桌面环境。9 月主要进展如下：</span></span></p><ul><li><span><span style="color:#000000">联合 KernelBuilder SIG 研究了 VisionFive2 EDK2 UEFI 镜像制作流程；</span></span></li><li><span><span style="color:#000000">DDE 桌面软件包更新工作。</span></span></li></ul><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">如果您对移植桌面环境有兴趣，或者有相关打包经验，欢迎加入我们！</span></span></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 10 Oct 2023 02:25:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261098</guid>
            <link>https://www.oschina.net/news/261098</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[GNOME 移除对 X.Org 会话支持]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>由于 Fedora 40 希望禁用 GNOME 的 X11 会话支持，并且还让 KDE Plasma 6 Wayland 仅适用于 Fedora。目前上游 GNOME 正在评估禁用以及移除对 X.Org 会话的支持，未来转变为<strong>只支持 Wayland 的桌面环境</strong>。</p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgitlab.gnome.org%2FGNOME%2Fgnome-session%2F-%2Fmerge_requests%2F98" target="_blank">根据 GNOME 的仓库动态</a>，开发者递交了一组合并请求，准备移除对 X.Org 会话支持。移除这些支持将直接使 gnome-session 减少 3.6k 行代码。</p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgitlab.gnome.org%2FGNOME%2Fgnome-session%2F-%2Fmerge_requests%2F98" target="_blank"><img height="1099" src="https://static.oschina.net/uploads/space/2023/1010/184926_ndoo_2720166.png" width="2187" referrerpolicy="no-referrer"></a></p><p>开发者称，X11 的测试越来越少，自 2016 年以来 GNOME 就默认使用 Wayland 会话，现在是时候完全移除 X.Org 会话了。可能到明年 GNOME 项目将只支持 Wayland 会话。</p><p>与此同时，有人提出了一些担忧，这可能会影响 Budgie 和 Pantheon 等尚未完全过渡到 Wayland 的下游桌面。</p><hr><p>延伸阅读</p><ul><li><a href="https://www.oschina.net/news/241063/asahi-linux-stop-x-org" target="_blank">Asahi Linux 致用户：停止使用 X.Org，Wayland 才是未来</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Mon, 09 Oct 2023 11:01:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261201/gnome-mr-drop-x11-session</guid>
            <link>https://www.oschina.net/news/261201/gnome-mr-drop-x11-session</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Captum —— PyTorch 模型解释和理解库]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Captum 是为 PyTorch 设计的模型解释性和理解库。在拉丁语中，「Captum」意味着理解。这个库为 PyTorch 模型提供了通用的实现方法，包括集成渐变、显著性图、smoothgrad、vargrad 等。它可以快速集成使用像 torchvision、torchtext 等特定领域的库构建的模型。目前，Captum 仍处于测试阶段，并在积极开发中。</p><p>随着模型复杂性的增加以及透明度的缺失，模型解释性方法变得越来越重要。模型理解已经成为研究的活跃领域，并在各个使用机器学习的行业中获得了实际应用的关注。Captum 提供了最先进的算法，包括集成渐变，以使研究者和开发者更容易理解哪些特征对模型的输出起了作用。</p><p>对于模型开发者来说，Captum 可以帮助他们通过识别不同的特征来改进和排查模型，从而设计出更好的模型，并排查意外的模型输出。</p><p>Captum 还帮助机器学习研究者更轻松地实现可以与 PyTorch 模型互动的解释性算法。此外，研究者还可以使用 Captum 快速地将他们的工作与库中的其他现有算法进行对比。</p><p><strong>属性算法概述</strong></p><p><strong>目标受众</strong></p><p>Captum 的主要受众是希望改进他们的模型并了解哪些特征重要的模型开发者，以及专注于识别能够更好解释许多模型类型的算法的解释性研究者。</p><p>应用工程师也可以使用 Captum。他们在生产中使用经过训练的模型时，Captum 能提供更容易的排错方式，并有可能为最终用户提供更好的解释，例如为什么他们会看到某个特定的内容，如电影推荐。</p><p>总体而言，Captum 为 PyTorch 提供了一个强大的工具，不仅对模型进行深入的解释和理解，还可以为模型开发者和研究人员提供有关模型工作原理的洞察，从而促进更好的模型设计和应用。</p></div>
                                                                ]]>
            </description>
            <pubDate>Mon, 09 Oct 2023 08:54:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/p/captum</guid>
            <link>https://www.oschina.net/p/captum</link>
        </item>
        <item>
            <title>
                <![CDATA[每日一博 | Redis 流量镜像的实现]]>
            </title>
            <description>
                <![CDATA[<div class="content"><span id="OSC_h2_1"></span><h2>背景</h2><p>对 Redis 场景降本增效，涉及到将部分 Redis 实例迁移到类似社区 pika 这种支持 Redis 协议的基于 SSD 磁盘存储的项目（阿里云 Tair），降低存储成本。迁移过程需要进行性能验证，除了基本的选型压测之外，还必须对每个业务场景做全指令的性能覆盖，才能确保业务迁移的性能以及指令兼容稳定性。常规的做法是需要业务开发配合在工程里进行流量双发，或者小范围流量灰度。</p><p>以上这个问题，不管哪种方式都需要投入更多的人力和时间，对降本增效本身这件事情来说，大大降低了 roi 。如果能够做到直接将原 Redis 的所有读流量重放到目标 Redis SSD 的实例，则迁移整件事件 SRE 可以完成 99% ，而且将大大缩短迁移实例的时间，所以 Redis 流量镜像这个需求就应运而生了。</p><p>tips：我们的数据迁移方案采用阿里云的 DTS ，DTS 是基于 Redis 主从复制的原理实现的，所以写流量性能在数据同步过程就可以直接验证了</p><span id="OSC_h2_2"></span><h2>调研</h2><p>Google 上、Github 上逛了一圈，没有十分契合的东西，所以最后决定自研。查到的一些相关信息如下：</p><ul><li>阿里云的 SLS Redis 审计日志</li></ul><p>阿里云的 Redis 实例支持将 Redis 的执行日志丢到 SLS（一个日志记录查询的产品） 记录，但是只有写流量的记录，达不到 Redis 读流量回放的需求。</p><ul><li>pika redis-copy 工具：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAtomFoundation%2Fpika%2Fissues%2F2044" target="_blank">https://github.com/OpenAtomFoundation/pika/issues/2044</a></li></ul><p>这个工具已经被 pika 项目丢弃了。目前只有文档，仓库里已经没有相关的代码了。不过本文实现也是基于和 pika 的实现原理一样的</p><ul><li>istio 实现 Redis 流量镜像：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcloudnativeto%2Fcloudnativeto.github.io%2Fissues%2F76" target="_blank">https://github.com/cloudnativeto/cloudnativeto.github.io/issues/76</a></li></ul><p>基于 istio 做 Redis 的镜像流量，必须接入 istio 才行，局限性太大了，而且引入一个新的 istio 组件需要做很多的稳定性测试，所以这个路线就直接否了</p><span id="OSC_h2_3"></span><h2>实现</h2><p>直接接入正题，采用 Redis 的 monitor 指令来实现这个需求。</p><pre><code class="language-java">/**
 * @author kl (http://kailing.pub)
 * @since 2023/9/27
 */
public class RedisMonitorTest {

    static final JedisPool targetRedisPool = new JedisPool("127.0.0.1", 6398);
    static final JedisPool sourceRedisPool = new JedisPool("127.0.0.1", 6379);
    static final Set&lt;String&gt; redisReadCommands = new HashSet&lt;&gt;(Arrays.asList(
            "get", "strlen", "exists", "getbit", "getrange", "substr", "mget", "llen", "lindex",
            "lrange", "sismember", "scard", "srandmember", "sinter", "sunion", "sdiff", "smembers",
            "sscan", "zrange", "zrangebyscore", "zrevrangebyscore", "zrangebylex", "zrevrangebylex",
            "zcount", "zlexcount", "zrevrange", "zcard", "zscore", "zrank", "zrevrank", "zscan", "hget",
            "hmget", "hlen", "hstrlen", "hkeys", "hvals", "hgetall", "hexists", "hscan", "randomkey",
            "keys", "scan", "dbsize", "type", "sync", "psync", "ttl", "touch", "pttl", "dump", "object",
            "memory", "bitcount", "bitpos", "georadius_ro", "georadiusbymember_ro", "geohash",
            "geopos", "geodist", "pfcount", "xrange", "xrevrange", "xlen", "xread", "xpending",
            "xinfo", "lolwut"
    ));
    
    public static void main(String[] args) {
            try (Jedis jedis = sourceRedisPool.getResource()) {
                jedis.monitor(new JedisMonitor() {
                    @Override
                    public void onCommand(String command) {
                        sendCommand(command);
                    }
                });
            }
    }
    
    public static void sendCommand(String commandStr) {
        String[] parts = commandStr.split("\"");
        if (parts.length &lt; 2) {
            return;
        }
        String cmd = parts[1];
        List&lt;String&gt; args = new ArrayList&lt;&gt;();
        for (int i = 3; i &lt; parts.length; i += 2) {
            args.add(parts[i]);
        }
        if (redisReadCommands.contains(cmd.toLowerCase())) {
            ProtocolCommand command = () -&gt; cmd.getBytes(StandardCharsets.UTF_8);

            try (Jedis jedis = targetRedisPool.getResource()) {
                try {
                    long startTime = System.currentTimeMillis();
                    jedis.sendCommand(command, args.toArray(new String[0]));
                    System.out.println(cmd + ":" + (System.currentTimeMillis() - startTime));
                } catch (Exception e) {
                    System.err.println(cmd + e.getMessage());
                }
            }
        }
    }
}</code></pre><p>以上是一段可以直接执行的伪代码，将&nbsp;sourceRedis 的所有读流量转发到&nbsp;targetRedis 执行</p><span id="OSC_h2_4"></span><h2>实现解析</h2><p>上面采用的 Java 的 Redis 客户端 jedis 来开发，首先调用了 monitor 这个指令，这个指令是一个阻塞指令，会一直订阅 Redis 服务端的指令执行记录，记录的格式如下：</p><pre><code>1695869359.747056 [0 127.0.0.1:64257] "ZRANGEBYSCORE" "delayed_tasks" "0" "1695869359805247076" "LIMIT" "0" "1"
1695869359.748040 [0 127.0.0.1:64257] "EXISTS" "asynq:{sys}:paused"
1695869359.748259 [0 127.0.0.1:64257] "EXISTS" "asynq:{sync}:paused"
1695869359.748578 [0 127.0.0.1:64257] "EXISTS" "asynq:{default}:paused"
1695869359.748916 [0 127.0.0.1:64257] "ZRANGEBYSCORE" "delayed_tasks" "0" "1695869359869190783" "LIMIT" "0" "1"
1695869359.749154 [0 127.0.0.1:64257] "ZRANGEBYSCORE" "delayed_tasks" "0" "1695869359877625076" "LIMIT" "0" "1"
1695869359.749348 [0 127.0.0.1:64257] "ZRANGEBYSCORE" "delayed_tasks" "0" "1695869359878760313" "LIMIT" "0" "1"
1695869359.749530 [0 127.0.0.1:64257] "ZRANGEBYSCORE" "delayed_tasks" "0" "1695869359882064571" "LIMIT" "0" "1"
1695869359.779048 [0 127.0.0.1:64257] "ZRANGEBYSCORE" "delayed_tasks" "0" "1695869360024586886" "LIMIT" "0" "1"
1695869359.785898 [0 127.0.0.1:64257] "ZRANGEBYSCORE" "delayed_tasks" "0" "1695869360031603858" "LIMIT" "0" "1"
1695869359.786092 [0 127.0.0.1:64257] "ZRANGEBYSCORE" "delayed_tasks" "0" "1695869360031656719" "LIMIT" "0" "1"
1695869359.786923 [0 127.0.0.1:64257] "ZRANGEBYSCORE" "delayed_tasks" "0" "1695869360031666910" "LIMIT" "0" "1"</code></pre><p>所以我们只要解析出指令，然后发送到目标实例就好了</p><p>这里还涉及到一个问题，怎么过滤出只有读指令的记录？</p><p>我尝试过问 chatGPT ，但是他一点都不靠谱，不是少了读的指令，就是用其他写指令凑数。所以不可信。好在 Redis 服务端对每个指令都进行了打标，区分了读指令还是写指令。</p><p><img height="2124" src="https://oscimg.oschina.net/oscnet/up-44f7a2eac1677679c388b29b1cbb6516f98.png" width="2932" referrerpolicy="no-referrer"></p><p>所以只需要把所有的只读指令打印到控制枱复制出来就解决这个问题了。</p><span id="OSC_h2_5"></span><h2>注意事项</h2><p>Redis monitor 指令是一个对 Redis 性能有损的指令，官方测试会对单实例 Redis 降低 50% 左右的性能，我实际测试在 Redis 实际负载不高的情况下,这个影响可以忽略不计（特别高 QPS 的实例谨慎使用）。因为 Redis 单机 QPS 能支撑 10W 。比如线上实时 QPS 1W ，使用 monitor 的时候，QPS 和 RT 几乎没有变化。</p><p>另外需要注意，monitor 长时间运行会增加 Redis 的内存消耗，所以如果做性能验证，最好控制下时间，不要一直跑。</p><p><img height="1532" src="https://oscimg.oschina.net/oscnet/up-ec5ada01401a210a0401bba6bb508c8d109.png" width="1580" referrerpolicy="no-referrer"></p><ul><li>monitor 文档：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fredis.io%2Fcommands%2Fmonitor%2F" target="_blank">https://redis.io/commands/monitor/</a></li></ul><span id="OSC_h2_6"></span><h2>结语</h2><p style="color:#000000; margin-left:0; margin-right:0; text-align:start">在本篇博客中，我们探讨了 Redis 流量镜像的实现方法和其在降本增效方面的重要性。我们了解到，传统的验证方式在迁移 Redis 实例时需要大量的人力和时间投入，降低了降本增效的 ROI。为了解决这一问题，引入了 Redis 流量镜像的需求。</p><p style="color:#000000; margin-left:0; margin-right:0; text-align:start">通过将原 Redis 的所有读流量直接重放到目标 Redis SSD 实例，我们可以高效地完成迁移实例的过程，减少了 SRE 的工作量，并显著缩短了迁移时间。这种方法不仅提高了迁移过程的效率，还降低了成本和风险，使得降本增效的目标更加可行和实现。通过采用这种方法，我们可以更高效地迁移 Redis 实例，并在降低成本、提高效率的同时保持业务的性能和稳定性。</p><p style="color:#000000; margin-left:0; margin-right:0; text-align:start">谢谢您的阅读！如果您有任何问题或想法，请随时参与评论留言。</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 09 Oct 2023 08:51:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/klblog/blog/10115744</guid>
            <link>https://my.oschina.net/klblog/blog/10115744</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[内核维护者回应缩短 LTS 内核支持期限，原因就是没人用]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Linux 基金会上个月宣布将 LTS 内核的支持时间<a href="https://www.oschina.net/news/258970/linux-gives-up-on-6-year-lts" target="_blank"><strong>从六年缩短到两年</strong></a>。当时给出的原因是缺乏使用和缺乏支持。</p><blockquote><p>维持这么久确实没有意义，因为人们已经不再使用它们了。</p><p>还有一个很大的问题是，Linux 代码维护人员的倦怠。他们在完成工作时面临着许多障碍。一方面，维护人员需要在日常工作之余维护代码，但维护工作通常没有报酬。最重要的是，由于人手不足等问题，维护人员的工作量也越来越大。</p></blockquote><p>稳定版内核维护者 Greg Kroah-Hartman <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnews.ycombinator.com%2Fitem%3Fid%3D37749846" target="_blank">近日的回应</a>再度印证上述原因——<strong>没人用 LTS 内核</strong>。</p><p><img src="https://static.oschina.net/uploads/space/2023/1010/161155_p7kt_2720166.png" referrerpolicy="no-referrer"></p><p>对于 Linux 基金会减少对内核开发的批评，Greg 表示基金会对内核社区的投入和支持一直在增加。仅仅因为 Linux 基金会成员公司的需要而不断引入新项目新用户，并不意味着它减少对内核社区的投入。这不是零和游戏，不是 Linux 基金会的运作方式。</p><p><img src="https://static.oschina.net/uploads/space/2023/1010/162752_spIB_2720166.png" referrerpolicy="no-referrer"></p><p>他强调 Linux 基金会对内核的支持一直在增加，根本不存在放弃的情况。</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 09 Oct 2023 08:29:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261164/greg-says-lf-strongly-supports-kernel-developers</guid>
            <link>https://www.oschina.net/news/261164/greg-says-lf-strongly-supports-kernel-developers</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Reddit Programming 板块的未来]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">Reddit 管理员 ketralnis 发布并置顶了一篇名为「<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.reddit.com%2Fr%2Fprogramming%2Fcomments%2F173viwj%2Fmeta_the_future_of_rprogramming%2F" target="_blank">The future of r/programming</a>」的帖子，就 r/programming 板块的规则制订征集用户意见。</span></p><p><span style="color:#000000">根据介绍，目前&nbsp;r/programming 板块中允许发布的内容类型包括：实际的编程内容、编程新闻、程序员职业内容、程序员感兴趣但与编程无关的文章/新闻、以及一些带代码的演示。禁止的内容类型包括：政治和八卦讨论、没有代码的演示、一些低质量无营养的提问和内容、发布调查或招聘启事以及 Meta posts 等</span></p><p><span style="color:#000000">此外，像一些宽泛的行业相关新闻、低质量的复制粘贴类内容、同一话题的重复讨论帖、标题过于社论化或阴谋论的内容，一般情况下都会进行删除。但如这该贴已经具有了一定的热度，管理员则会视情况进行保留。</span></p><p><img height="395" src="https://oscimg.oschina.net/oscnet/up-16b207c45a0b6d76821ddb5ef82e35c5545.png" width="500" referrerpolicy="no-referrer"></p><p><span style="color:#000000">ketralnis 表示，目前 r/programming 板块的相关规则非常模糊，且实际的版主管理方式与这些规则的联系也很松散。</span></p><p><span style="color:#000000">譬如，就算是一些被禁止发布的帖子类型，如果评论线程中已经出现了健康的讨论内容，那么这些帖子大多数也都会被保留下来。且相关的评论审核也非常宽松，导致有很多机器人刷评以及一些引战的激烈言论出现。「然而，GPT 评论机器人数量正在明显上升，以我们现有的活跃版主人数而言，很快就会难以承受。」</span></p><p><span style="color:#000000">因此，ketralnis 在公告中也透露正在招募更多的 mods。「如果我们想让它变得更好，就需要更多的人力。」</span></p><p><span style="color:#000000">「我们知道世界上存在对不受监管的空间的需求，但&nbsp;r/programming&nbsp;并不是这样的空间......就我个人而言，我的梦想是让&nbsp;r/programming&nbsp;成为拥有最高质量编程内容的地方，在这里我每天都能读到有趣的内容、学到新的知识。」</span></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 09 Oct 2023 08:19:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261161/reddit-future-of-rprogramming</guid>
            <link>https://www.oschina.net/news/261161/reddit-future-of-rprogramming</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[九章云极 DataCanvas 公司完成 D1 轮融资！]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="text-align:center"><img height="383" src="https://oscimg.oschina.net/oscnet/up-bbbb9a1d74fefff63912dffe366a6a8cdd1.jpg" width="900" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0"><strong>近日，九章云极 DataCanvas 公司完成总融资额 3 亿元 D1 轮融资。</strong>中国电子集团旗下中电智慧基金、华民投、中国太平旗下太平创新、浙江东方旗下东方嘉富等央国企旗下投资机构，以及卓源资本等专注人工智能赛道的知名财务投资机构参与本轮融资。</p><p style="margin-left:0; margin-right:0">九章云极 DataCanvas 公司作为国家专精特新小巨人企业，其「人工智能」技术创新能力和「基础软件」产品商业化能力备受市场认可。2020 年被 Gartner 列入全球 AutoML 关键供应商库，并连续四年入选 IDC 中国机器学习开发平台厂商全国 Top3。在全球人工智能开源领域，自主研发的多项全球首个开源项目，填补 AI 领域技术空白，引领人工智能行业跨时代发展。作为中国信通院的战略合作单位、标准核心参编单位，共同编订发布全球首个 AI 模型开发管理标准、全国首个商用人工智能开发平台等多项人工智能基础软件领域、大模型领域的标准。作为大模型生态共同体中的通用大模型代表企业，模型伙伴成员单位，九章云极 DataCanvas 公司与相关政府部门共建经济高效的智算中心以及大模型产业集聚区，并率先落地规模化、可复制的大模型应用——企业知识管家，充分破除企业知识管理过程中的痛点难点，全面释放企业业务价值。</p><p style="margin-left:0; margin-right:0">投资方表示，九章云极 DataCanvas 公司包含大模型在内的前沿人工智能技术成果、长效优势显著的 AI 基础软件商业化策略，充分展现了我国科技创新企业的实力和潜力。基础软件是人工智能的底座，人工智能的基础软件的发展决定了人工智能发展的深度、高度、广度，拥有商业化的广阔市场。在大算力时代，充分发挥算法+算力的优势，作为赛道领头企业实现规模化行业应用能力，看好公司未来发展。</p><p style="margin-left:0; margin-right:0; text-align:center"><strong><span>AI 基础软件</span>正为企业创新和社会进步提供核心驱动力</strong></p><p style="margin-left:0; margin-right:0"><span>近年来，AI 基础软件成为政府、技术服务厂商和市场客户的重点关注和布局方向，各部门政府相继发布措施条例来鼓励、支持、培养基础软件产品服务的开发以及对本地现有产业的支持赋能，云服务厂商、技术创新企业、传统企业都正在利用自身优势打造 AI 基础软件服务内核和外延，为垂直业务场景创新落地和跨行业智能决策提供源源不断的活力。</span>IDC 数据显示，截止到 2022 年底，中国人工智能软件市场规模超过 307 亿元人民币。根据中国信息通信研究院测算，2022 年我国算力核心产业规模达到 1.8 万亿元，其中政府、金融、电信领域保持高速增长，连同其他专业 AI 服务领域的增长共同促进了中国人工智能基础软件的发展和应用落地。</p><p style="margin-left:0; margin-right:0">多年来，凭借行业领先的人工智能基础软件，九章云极 DataCanvas 为各行各业的头部企业提供自主 AI 能力。在今年 6 月的产品发布会上，九章云极 DataCanvas 公司宣布产品体系升级，重磅发布业界前沿技术水准的 DataCanvas Alaya 九章元识大模型、DingoDB 多模向量数据库等多款产品，共同构成<span>&nbsp;</span><strong>「AIFS 人工智能基础软件」和「DataPilot 数据领航员」</strong>核心产品体系。至此，九章云极 DataCanvas 公司成功实现构建企业「大+小」模型能力的产品布局。</p><p style="margin-left:0; margin-right:0">DataCanvas Alaya 九章元识大模型（以下简称「九章元识」）不仅包含配置和参数的多样选择，还以「白盒」形态提供给用户，这使得用户获用大模型技术能力的同时，还获得了最大化的自主能力。九章元识这一开放性无疑将大模型的自主应用门槛降到最低。</p><p style="margin-left:0; margin-right:0">此外，九章元识还具有「多模态」的重要属性。支持各类结构化和非结构化数据（包括数字、文本、图像、音频、视频等），将成倍转化和输出数据资产价值。同时，为了支撑多模态数据的对齐，九章云极 DataCanvas 公司推出的开源产品 DingoDB 多模向量数据库，配合元识大模型，可以为向量数据提供存储和分析，为多模态数据的利用和管理提供必备工具载体。</p><p style="margin-left:0; margin-right:0">当前，九章云极 DataCanvas 公司已推出基于九章元识和 DingoDB 的大模型解决方案「企业知识管家」，破除私域多模态数据管理和应用难题，赋能企业构建高度自动化与智能化的企业知识库，加速多模态大模型落地应用。</p><p style="margin-left:0; margin-right:0; text-align:center"><strong><span>从 AI 基础软件到 AI 基础服务</span>，&nbsp;「云中云」战略再进阶</strong></p><p style="margin-left:0; margin-right:0">从终端大模型应用，到模型构建平台、算法平台，到向量数据库，再到最底层的算力建设，大模型技术的火热为 AI 模型产业链提供层层机遇。在将底层核心技术视为发展命脉的市场态势下，人工智能基础设施再度引爆。基于对未来趋势的研判和为用户提供全生命周期服务的初衷，<strong>九章云极 DataCanvas 公司正式成立智算中心，将在人工智能基础软件产品优势的基础上，为广大用户提供「算法+算力」一体化服务，构建高效计算底座的基础设施。</strong></p><p style="margin-left:0; margin-right:0">九章云极 DataCanvas 公司董事长方磊表示，自提出「云中云」战略以来，公司以 AI 基础软件为载体，持续将 AI 能力嵌入千行百业的云生态中，成果显著。此次推出的「算法+算力」一体化服务，是抓住市场中算力的巨大需求，深化与云厂商、智算中心等伙伴的生态合作，共同构建高质量的「AI 基础服务」。&nbsp;</p><p style="margin-left:0; margin-right:0">未来，九章云极 DataCanvas 公司将围绕客户的人工智能升级需求，践行「云中云」战略，充分布局算力建设，加速多模态大模型行业落地，以先进技术创新引领行业，为数字经济建设助力筑基。</p><p style="margin-left:0; margin-right:0"><strong>投资方简介</strong></p><p style="margin-left:0; margin-right:0"><strong>中电智慧基金</strong>作为中国电子的产业投资基金，坚持服务于中国电子主责主业，投向战略性新兴产业，推动重构计算产业体系，在集成电路、网络安全、数据产业、高新电子等领域开展投资布局。充分发挥产业背景优势，推动被投企业与集团产业充分协同，对集团补链强链，对企业投后赋能。</p><p style="margin-left:0; margin-right:0"><strong>华民投</strong>是股权投资领域的国家队、央企投资协会会员单位。借助权威股东的资源背景，公司广泛链接资本市场和 5000 多家上市公司，紧跟国家战略，围绕战略新兴产业开展投资，投资的项目涉及半导体、新材料、新能源、智能汽车、人工智能、数字经济和生物医药等多个方向，全面助力国家产业升级转型和经济发展。</p><p style="margin-left:0; margin-right:0"><strong>太平创新</strong>是国内首批经原中国银保监会批准设立的保险系私募基金管理公司之一，作为中国太平保险集团旗下专业私募股权投资平台，充分发挥保险资金的专业优势与中国太平的央企担当，布局医疗健康、科技金融、先进制造、乡村振兴等投资赛道。</p><p style="margin-left:0; margin-right:0"><strong>东方嘉富</strong>是浙江省属国有上市金控平台——浙江东方 (SH.600120) 旗下「市场化运作专业化管理」的混合所有制私募基金管理机构，重点关注智能制造和新材料、新一代信息技术及生命科学领域早期及成长期企业的投资，并已建立起私募股权投资加私募证券投资「一二级投研联动」的资产管理体系。截至目前，东方嘉富累积管理基金总规模超 150 亿元人民币，累积投资企业超 90 家。</p><p style="margin-left:0; margin-right:0"><strong>卓源资本</strong>创始于 2016 年，是一家专注于集成电路及 AI 的专业投资机构，起源于清华大学计算机系 FIT 楼实验室，由清华大学校友共同创办。卓源资本致力于打造中国最领先的泛集成电路及 AI 领域的投资机构，创始团队累计管理与投资规模超过 30 亿人民币。</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 09 Oct 2023 06:50:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261144</guid>
            <link>https://www.oschina.net/news/261144</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[首个图文混合创作大模型「书生·浦语灵笔」开源]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">上海人工智能实验室（上海 AI 实验室）<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FbXz_BRiv8CskONSWQR44WA" target="_blank">宣布</a>推出首个图文混合创作大模型书生·浦语灵笔（InternLM-XComposer，简称「浦语灵笔」），依托强大的多模态性能，解锁「一键生成」图文混合文章的创作能力，为大模型落地应用提供更多可能。</span></p><p><span style="color:#000000">目前，浦语灵笔已开源其中的智能创作和对话（InternLM-XComposer-7B）及多任务预训练（InternLM-XComposer-VL-7B）版本，并提供免费商用。</span></p><p><span style="color:#000000">此前，上海 AI 实验室曾陆续开源了书生·浦语大语言模型的 7B（InterLM-7B）及 20B（InternLM-20B）版本。基于书生·浦语大语言模型（InternLM），浦语灵笔接受视觉和语言模态输入，不仅在图文对话方面表现优秀，更具备图文并茂文章的「一键生成」能力。</span></p><p><span style="color:#000000">浦语灵笔能够进行流利的中英文图文对话，准确理解图像内容；并解锁了图文并茂文章创作的全新能力。除自动配图能力外，浦语灵笔还提供了配图推荐和更换功能，根据用户实际需求定制图文内容。</span></p><p><span style="color:#000000"><img alt="" height="284" src="https://oscimg.oschina.net/oscnet/up-ec14d16110bb87f0afcb2b74f79d7e39691.png" width="500" referrerpolicy="no-referrer"></span></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-f6052a5051fe3cacf90b67197e4a6aca666.gif" width="500" referrerpolicy="no-referrer"></p><p><span style="color:#000000">目前，浦语灵笔已支持科普文稿、营销广告、新闻稿件、影视评论、生活指南等类型文章的图文并茂生成，并将逐渐开放更多能力。</span></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-65a9432b417fb971eade0876788010d6752.gif" width="500" referrerpolicy="no-referrer"></p><p><span style="color:#000000">浦语灵笔为图文文章创作设计了「三步走」的算法流程：</span></p><ul><li><span style="color:#000000">理解用户指令，创作符合主题要求的长文章。</span></li><li><span style="color:#000000">智能分析文章，模型自动规划插图的理想位置，并生成所需图像的内容要求。</span></li><li><span style="color:#000000">多层次智能筛选，利用多模态大模型的图像理解能力，从图库中锁定最完美的图片。</span></li></ul><p><img alt="" height="249" src="https://oscimg.oschina.net/oscnet/up-b14e63c7394663e682d3500915895eaf962.png" width="500" referrerpolicy="no-referrer"></p><p><span style="color:#000000">研究人员采用 5 个主流的多模态大模型评测对 InternLM-XComposer-VL-7B 的能力进行了详细测试。</span></p><p><img height="384" src="https://oscimg.oschina.net/oscnet/up-6d115621e76f671c92c4cd8b35d201bd0c4.png" width="500" referrerpolicy="no-referrer"></p><p><img height="233" src="https://oscimg.oschina.net/oscnet/up-221640dab71f38f3d96610b4a6b94d5671d.png" width="500" referrerpolicy="no-referrer"></p><p><img height="353" src="https://oscimg.oschina.net/oscnet/up-fd2769a9128cb307d94d946f31bb4ff3bc2.png" width="500" referrerpolicy="no-referrer"></p><p><img height="345" src="https://oscimg.oschina.net/oscnet/up-fee648bef717b06a7d28b20b5d0ed2625e7.png" width="500" referrerpolicy="no-referrer"></p><p><img height="355" src="https://oscimg.oschina.net/oscnet/up-9c29359b6718e111b5a2c03074cc6ed6b97.png" width="500" referrerpolicy="no-referrer"></p><p><img height="315" src="https://oscimg.oschina.net/oscnet/up-b748c9bb6f4b6b3948fb921b630992b227f.png" width="500" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 09 Oct 2023 06:14:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261135</guid>
            <link>https://www.oschina.net/news/261135</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
    </channel>
</rss>
