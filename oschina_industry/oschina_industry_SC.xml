<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[开源中国-综合资讯]]>
        </title>
        <link>https://www.oschina.net/news/industry</link>
        <atom:link href="https://rsshub.app/oschina/news/industry" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[开源中国-综合资讯 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Thu, 18 Jan 2024 11:00:35 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[KubeSphere 开源社区 2023 年度回顾与致谢]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>2023 年结束了，让我们再一次一起回顾一下 KubeSphere 开源社区在过去一年的变化。更重要的是，本篇文章将会对 2023 年所有参与过 KubeSphere 社区贡献的成员致以最诚挚的感谢，快来看看有没有你！</p><h2>开源项目发展情况</h2><p>2023 年，在国内外社区贡献者的参与下，KubeSphere 及 KubeSphere 社区衍生出的其他开源项目得以稳定且活跃的前进。感谢各位贡献者！</p><table><thead><tr><th>开源项目</th><th>正式发版</th><th>新增重要功能</th></tr></thead><tbody><tr><td>KubeSphere</td><td>3 个</td><td>扩大对 K8s 的支持范围，最新稳定性支持 v1.26；&lt;br/&gt;重构告警策略架构，解耦为告警规则与规则组；&lt;br/&gt;提升集群别名展示权重，减少原集群名称不可修改导致的管理问题。</td></tr><tr><td>KubeKey</td><td>11 个</td><td>Kubeadm 配置更新至 v1beta3，支持部署 K8s v1.27+；&lt;br/&gt;支持部署 Hybrident 网络查件；&lt;br/&gt; 支持自定义配置集群 DNS 参数；&lt;br/&gt; 支持自定义配置集群 Etcd 参数。</td></tr><tr><td>OpenFunction</td><td>4 个</td><td>集成 WasmEdge，支持 Wasm 函数和更完整的 CI/CD；&lt;br/&gt;新增 v1beta2 API，支持 Dapr 状态管理；&lt;br/&gt;集成 KEDA http-addon 作为同步函数运行时；&lt;br/&gt;支持在启用 SkyWalking 跟踪时添加环境变量。</td></tr><tr><td>Fluent Operator</td><td>9 个</td><td>支持 FluentBit 部署为 StatefulSet；&lt;br/&gt; Fluentd CRD 提供自定义插件类型；&lt;br/&gt; 为 FluentBit daemonset 提供 namespace 级别的权限；&lt;br/&gt;添加多个插件（如 Datadog、S3、nginx 插件等）；&lt;br/&gt;完善 helm，提供更多自定义设置完成安装；&lt;br/&gt;支持以 DaemonSet 的方式部署 Fluentd；&lt;br/&gt;添加禁用未使用 controller 的参数；&lt;br/&gt;支持以 StatefulSet 的形式部署 FluentBit。</td></tr></tbody></table><p>需要特别指出的是，Fluent Operator 已经是一个全球化的项目，其贡献者大部分来自海外，越来越受欢迎和具有影响力。</p><h2>合作伙伴与应用生态</h2><p>2022 年年末，我们重新梳理了 KubeSphere 合作伙伴的类型与权益说明。在 2023 年，我们也新增了合作伙伴，丰富了应用生态。在此，向所有的合作伙伴致以最诚挚的谢意！</p><p>2023 年，我们与以下开源社区/机构建立或保持了合作关系（顺序不分先后）：</p><p><img src="https://oscimg.oschina.net/oscnet/up-fdef3cab4ee2b07582e5730b1e9ed32b28e.png" alt="" referrerpolicy="no-referrer"></p><p>如果您希望与 KubeSphere 深度合作，成为 KubeSphere 的合作伙伴，欢迎您与我们取得联系。具体请参考：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fkubesphere.io%2Fzh%2Fnews%2Fkubesphere-partner%2F" target="_blank">欢迎加入 KubeSphere 社区合作伙伴阵容！</a>。</p><blockquote><p>值得一提的是，2023 年 8 月，KubeSphere LuBan 云原生可扩展架构正式发布，可以非常方便地使第三方应用与云原生生态组件进行即插即用（plug-and-play）的集成。截止目前，我们已发布了基于 KubeSphere Luban 架构开发的 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fkubesphere.com.cn%2Fextensions%2F" target="_blank">6 款扩展组件</a>，欢迎更多的云原生软件开发商、开源社区和开发者加入 KubeSphere 扩展组件生态，为用户提供多样化和个性化的场景拓展。</p></blockquote><h2>社区活动</h2><p>2023 年，KubeSphere 社区组织了 6 场线下 Meetup，6 场线上云原生直播活动，分享了云原生领域的多个方向的实践经验、技术解读等等，为 KubeSphere 社区用户持续赋能，此外也紧跟 AI 时代的大潮，在 AI 领域进行了一点探索，分享了多个 AI 相关的内容。</p><p>您可以通过以下链接回顾每场活动：</p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fkubesphere.io%2Fzh%2Flive%2Fmeetup-shenzhen-20230408%2F" target="_blank">深圳站 Meetup</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fkubesphere.io%2Fzh%2Flive%2Fmeetup-hangzhou-20230603%2F" target="_blank">杭州站 Meetup</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fkubesphere.io%2Fzh%2Flive%2Fmeetup-shanghai-20230805%2F" target="_blank">上海站 Meetup</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fkubesphere.io%2Fzh%2Flive%2Fmeetup-chengdu-20231104%2F" target="_blank">成都站 Meetup</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fkubesphere.io%2Fzh%2Flive%2Fmeetup-guangzhou-20231125%2F" target="_blank">广州站 Meetup</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fkubesphere.io%2Fzh%2Flive%2Fmeetup-suzhou-20231223%2F" target="_blank">苏州站 Meetup</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fkubesphere.io%2Fzh%2Flive%2F" target="_blank">云原生直播</a></li></ul><p>再次感谢在这些活动中做出贡献的讲师、社区委员会成员、志愿者以及合作伙伴，大家的齐心协力，促使了活动的成功组织及内容输出。</p><h2>年度用户落地实践案例</h2><p>20232 年又有十多家企业在社区发布了实践案例，帮助其他社区用户落地 KubeSphere 和云原生技术：</p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fkubesphere.io%2Fzh%2Fblogs%2Fbest-practices-of-kubesphere-in-zhidian%2F" target="_blank">蜘点云原生之 KubeSphere 落地实践过程</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fkubesphere.io%2Fzh%2Fcase%2Fhshc%2F" target="_blank">花生好车基于 KubeSphere 的微服务架构实践</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fkubesphere.io%2Fzh%2Fcase%2Falphaflow%2F" target="_blank">微宏科技基于 KubeSphere 的微服务架构实践</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fkubesphere.io%2Fzh%2Fblogs%2Fkubesphere-practice-of-internet-healthcare-industry%2F" target="_blank">KubeSphere 在互联网医疗行业的应用实践</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fkubesphere.io%2Fzh%2Fblogs%2Fkubesphere-practice-iot-dici%2F" target="_blank">某物联网数智化园区行业基于 KubeSphere 的云原生实践</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fkubesphere.io%2Fzh%2Fblogs%2Fkubesphere-best-practices-in-smart-connected-vehicles%2F" target="_blank">基于 KubeSphere 的应用容器化在智能网联汽车领域的实践</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fkubesphere.io%2Fzh%2Fblogs%2Fbest-practice-kubesphere-a-manufacturing-company%2F" target="_blank">某制造企业基于 KubeSphere 的云原生落地实践</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fkubesphere.io%2Fzh%2Fcase%2Feastcom%2F" target="_blank">东方通信基于 KubeSphere 的云计算落地经验</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fkubesphere.io%2Fzh%2Fcase%2Fexcelsecu%2F" target="_blank">文鼎创智能物联云原生容器化平台实践</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fkubesphere.io%2Fzh%2Fblogs%2Fbest-practices-kubesphere-assist-in-improving-the-efficiency-of-rd%2F" target="_blank">KubeSphere 助力提升研发效能的应用实践分享</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fkubesphere.io%2Fzh%2Fcase%2Fwuxitv%2F" target="_blank">无锡广电新媒体云原生容器化平台实践</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fkubesphere.io%2Fzh%2Fblogs%2Ft3-kubesphere-best-practice%2F" target="_blank">T3 出行云原生容器化平台实践</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fkubesphere.io%2Fzh%2Fcase%2Fbobinfo%2F" target="_blank">好上好信息 API 微服务集群在 KubeSphere 的部署实践</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fkubesphere.io%2Fzh%2Fcase%2Fkeyenlinx%2F" target="_blank">技研智联云原生容器化平台实践</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fkubesphere.io%2Fzh%2Fcase%2Fyiheda%2F" target="_blank">怡合达业务大规模容器化最佳实践</a></li></ul><p>在此十分感谢以上各位社区用户慷慨的贡献自己的实践经验，帮助其他用户成长。</p><p>社区也非常欢迎各大企业或组织向 KubeSphere 社区提交自己的实践案例。详情参考：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FQZXEyxFubDMUQvY0kbZdcA" target="_blank">快来投稿吧！KubeSphere 社区征稿活动开启啦！</a>。</p><h2>2023 年度 KubeSphere 贡献者</h2><h3>2023 年度 KubeSphere Ambassador</h3><p>2023 年，社区发起了一个 KubeSphere 大使计划（KubeSphere Ambassadorship Program），首次向全球的贡献者公开征集。最终，我们通过评估选出了 2023 年的 14 位 KubeSphere Ambassador：</p><ul><li>Onur Canoğlu</li><li>Rossana Suarez</li><li>Jona Apelbaum</li><li>Nilo Yucra Gavilan</li><li>Halil BUGOL</li><li>Eda Konyar</li><li>İremnur Önder</li><li>Harun Eren SAT</li><li>Min Yin</li><li>Kevin Xu</li><li>Haili Zhang</li><li>Zhengjun Zhou</li><li>Zhenfei Pei</li><li>Jianlin Zheng</li></ul><p>此次评选出的 KubeSphere Ambassador 任期为一年（2023.9.20-2024.9.21），新的选举可在明年同期举行。我们希望通过大使计划营造一个更加开放的社区环境。</p><h3>2023 年度 KubeSphere Talented Speaker</h3><p>2023 年共有 44 位 KubeSphere Talented Speaker 参与了 KubeSphere 组织或参与的技术交流分享活动，分享了 KubeSphere 及其他云原生技术的理论知识或实践经验，此外还有部分讲师分享了 AI 方向的内容。</p><p><img src="https://oscimg.oschina.net/oscnet/up-b585c24a98c278805a17676a8b86fe348c3.png" alt="" referrerpolicy="no-referrer"></p><p>所有的分享内容（视频或文字）均已更新到 KubeSphere 官网，欢迎大家回顾：</p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fkubesphere.io%2Fzh%2Flive%2F" target="_blank">https://kubesphere.io/zh/live/</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fkubesphere.io%2Fzh%2Fconferences%2F" target="_blank">https://kubesphere.io/zh/conferences/</a></li></ul><h3>2023 年度 KubeSphere Contributor</h3><p>2023 年共诞生了 112 位新的 KubeSphere Contributor，他们在 GitHub 提交了至少一个 PR，或在社区通过文章形式分享过 KubeSphere 实践经验。</p><p>以下为 2023 年度 KubeSphere Contributor 的 GitHub ID 或名字（排名不分先后）：</p><table><thead><tr><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td>fm2022aa</td><td>zhengzehong331</td><td>NeonSludge</td><td>antrema</td></tr><tr><td>dundun9</td><td>fengshunli</td><td>lwabish</td><td>qyz87</td></tr><tr><td>samanthacastille</td><td>yudong2015</td><td>HarleyB123</td><td>adiforluls</td></tr><tr><td>sigboom</td><td>xmsanchez</td><td>xiaoniankang</td><td>Jacklalala</td></tr><tr><td>anhoderai</td><td>ericwinn</td><td>sekfung</td><td>k8sk-kevin</td></tr><tr><td>Yong Lin</td><td>Fritzmomoto</td><td>jseutter</td><td>schuenen</td></tr><tr><td>soybean217</td><td>zhbinary</td><td>Wei Mao</td><td>ExerciseBook</td></tr><tr><td>MioOgbeni</td><td>akardes</td><td>ialidzhikov</td><td>jouve</td></tr><tr><td>nicognaW</td><td>snowgo</td><td>JorgeReus</td><td>chuan-you</td></tr><tr><td>deqingLv</td><td>jynolen</td><td>littleplus</td><td>felfa01</td></tr><tr><td>sologgfun</td><td>lucumt</td><td>JensLoe</td><td>lewis262626</td></tr><tr><td>cubxxw</td><td>duguhaotian</td><td>nemcikjan</td><td>erhudy</td></tr><tr><td>ksdpmx</td><td>littleBlackHouse</td><td>athlonreg</td><td>drzhangg</td></tr><tr><td>joshuabaird</td><td>testwill</td><td>tuoeg</td><td>gnadaban</td></tr><tr><td>gregorycuellar</td><td>kaiohenricunha</td><td>sakateka</td><td>littlejiancc</td></tr><tr><td>wongearl</td><td>Feng Zhou</td><td>Xiaobin Wu</td><td>vincent-vinf</td></tr><tr><td>yash97</td><td>Mike</td><td>ajax-bychenok-y</td><td>ikolesnikovrevizto</td></tr><tr><td>Zhenglong Zhang</td><td>BaiMeow</td><td>L1ghtman2k</td><td>Nyefan</td></tr><tr><td>Rajan-226</td><td>WaywardWizard</td><td>alexandrevilain</td><td>cuishuang</td></tr><tr><td>sjliu1</td><td>xuelangos</td><td>zhuxiujuan28</td><td>Shoufa Wang</td></tr><tr><td>Xiaobu</td><td>husnialhamdani</td><td>ic0xgkk</td><td>inksnw</td></tr><tr><td>lamadome</td><td>leonsteinhaeuser</td><td>tomsun28</td><td>win5923</td></tr><tr><td>Xiaoyu Bi</td><td>OlegVanHorst</td><td>nekomeowww</td><td>caoxianfei1</td></tr><tr><td>cw-Guo</td><td>king-119</td><td>stexandev</td><td>Hanmo123</td></tr><tr><td>JoeDerby</td><td>SongJXin</td><td>gunine</td><td>jongwooo</td></tr><tr><td>studyingwang23</td><td>Leirong Luo</td><td>Ganbingkun</td><td>MisterMX</td></tr><tr><td>Shimada666</td><td>donniean</td><td>guerzon</td><td>liuxu623</td></tr><tr><td>nyuxiao</td><td>samt42</td><td>oklizy</td><td>blackshy</td></tr></tbody></table><h3>2023 年度 KubeSphere Member</h3><p>2023 年共诞生 1 位新的 KubeSphere Member——<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fzaunist" target="_blank">zaunist</a>，他深度参与了 KubeSphere 社区<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkubesphere%2Fcommunity%2Fissues%2F420" target="_blank">开源贡献</a>，在社区独立完成了功能特性开发、文档撰写以及测试。</p><p>社区也欢迎更多的 contributor 能进阶为 member，如果您在半年内为特定的 SIG 代码库贡献了至少一个显著的 PR 或者完成一项或多项功能的开发，即可去 GitHub 提交 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkubesphere%2Fcommunity%2Fissues" target="_blank">Issue</a> 来申请。</p><p><strong>2023 年，社区通过<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fask.kubesphere.io%2Fforum%2Ft%2Fks-beweekly" target="_blank">社区双周报</a>给 2023 年诞生的新贡献者及讲师都颁发了证书，同时也将这些证书更新到了论坛的<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fask.kubesphere.io%2Fforum%2Fd%2F9280-kubesphere" target="_blank">证书汇总贴</a>。当然这个帖子里也包括了 KubeSphere Ambassador 和 KubeSphere Member 的证书，欢迎大家领取。</strong></p><p>KubeSphere 社区向 2023 年度 KubeSphere Member、KubeSphere Ambassador、KubeSphere Talented Speaker 及 KubeSphere Contributor 致谢，也欢迎更多的社区小伙伴参与开源贡献，共建开源生态。</p><h2>社区用户委员会发展情况</h2><p>2023 年 4 月 8 日，KubeSphere 社区用户委员会深圳站成立，此后上海站与杭州站也分别有新的成员加入。</p><p>至此，KubeSphere 社区用户委员会已成立五个城市站：上海站、杭州站、成都站、广州站、深圳站。</p><p>2023 年，KubeSphere 用户委员会继续发挥着巨大的作用，他们在社区非常活跃，做了非常多且高质量的贡献，比如组织活动、输出文章、参与播客录制等等。</p><p>在此，照例感谢下各位站长，他们在社区做出了大量贡献，他们积极的布道，发展用户委员会和社区：</p><ul><li>上海站站长张海立</li><li>杭州站站长尹珉</li><li>成都站站长周正军</li><li>广州站站长裴振飞</li><li>深圳站站长徐鹏</li></ul><h2>KubeSphere 个人认证考试</h2><p>2023 年 11 月 22 日，KubeSphere 个人认证考试上线。截止到 12 月 31 日，已有 200+ 用户参与。</p><p>认证考试题目来自于社区活动征集，提供者大部分为社区用户。</p><p>关于考试的具体介绍，大家可以参考这篇文章：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fask.kubesphere.io%2Fforum%2Fd%2F22924-kuai-lai-kao-shi-na-zheng-shu-kubesphere-ge-ren-ji-neng-zhuan-ye-kao-shi-ren-zheng-shang-xian-la" target="_blank">快来考试拿证书！KubeSphere 个人技能专业考试认证上线啦！</a>。</p><p>目前第二期考试活动正在进行中，欢迎大家参与！详情参考：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fask.kubesphere.io%2Fforum%2Fd%2F23057-kubesphere-guan-li-yuan-kao-shi-ren-zheng-can-yu-zhe-huo-jiang-ming-dan-gong-bu" target="_blank">KubeSphere 管理员考试认证参与者获奖名单公布</a>。</p><h2>社区关注度情况</h2><p><img src="https://oscimg.oschina.net/oscnet/up-4eefbeff273b39fec8e61aadb0e6490d7cb.png" alt="" referrerpolicy="no-referrer"></p><blockquote><p>注：以上数据为 2023 年 12 月 31 日数据。</p></blockquote><h2>总结与展望</h2><p>2023 年，KubeSphere 社区依旧在稳定发展，这得益于每一位社区成员的参与与贡献，在此向各位社区成员表示诚挚的感谢。</p><p>2024 年，KubeSphere 社区将保持目前的发展节奏，在内容、活动、产品等多个方向保质保量。我们也期待更多的小伙伴加入社区、参与社区。</p><blockquote><p>本文由博客一文多发平台 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopenwrite.cn%3Ffrom%3Darticle_bottom" target="_blank">OpenWrite</a> 发布！</p></blockquote></div>
                                    ]]>
            </description>
            <pubDate>Thu, 18 Jan 2024 10:44:30 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/4197945/blog/10883323</guid>
            <link>https://my.oschina.net/u/4197945/blog/10883323</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Milvus 上新：支持上万个 Collection、新增 Accesslog 功能……]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>2024 年开年，Milvus 好消息不断。除了收获 Github 25,000 颗星的成就，Milvus 也发布了新年的第一个版本—— 2.3.4。</p><p>此次发版的主要目的是为用户提供一个高扩展性且更易用的 Milvus 版本。为此，Milvus 新增了许多易用性功能，比如：可追踪外部接口调用的 accesslog；对 parquet 数据格式的导入做了支持；引入了更清晰的错误消息；更快的加载速度以及更好的查询分片平衡能力。在扩展性方面，团队通过对内部处理逻辑进行优化以及对内存使用效率的提升，使得 Milvus 集群目前可支持多达 10,000 个 Collection，可以满足大数据量和多租户场景下的要求。</p><p>以下将对这些主要特性和重点优化进行解释说明：</p><h2>支持上万的 Collection/Partition 数量</h2><p>Collection/Partition 是 Milvus 管理逻辑集合的主要单元，类似关系型数据库里 Table/Partition 的概念。虽然理论上 Milvus 能支持 65,536 个 Collection，但在实际使用中，随着 Collection 数量的增加，系统内部的开销会变大，一些资源可能会存在瓶颈，比如用于写入的 kafka topic 数量，以及 time tick 带来的 CPU 开销等。</p><p>因此 Collection 的实际数量限制和硬件规格以及负载有关，小于理论值。在某些场景下，用户希望尽可能多支持的 Collection，比如：知识库场景下用户希望用不同的 Collection 存储不同的主题或信息来源的数据；有的用户将 Milvus 作为数据中台并以 Collection 粒度对外提供多租户的能力……这些都对 Collection 数量提出了更高的需求。在这个版本里，我们针对系统做了大量优化和测试工作，将 Collection 的数量限制提升了一个档次，从之前的 4096 提升到目前可以稳定支持上万 Collection，该能力已经能满足大多知识库和多租户的场景需求。</p><h2>新增访问日志 Access log 功能</h2><p>Milvus 的访问日志功能允许服务端记录接口调用的详细信息，每一次用户通过 gRPC 发起的请求都会被记录下来，这有助于监控系统状态和追踪可能出现的问题。通过这一功能，用户可以进行：</p><ul><li><p>安全审计：通过访问日志来检查历史数据访问的合法性和安全性。</p></li><li><p>错误排查：当出现问题时，利用日志可以快速查看报错信息，并了解接口调用的上下文，帮助定位和解决问题。</p></li><li><p>性能分析：通过监控响应时间，用户可以识别异常查询和优化慢查询，提升整体性能。</p></li></ul><p>目前，访问日志只记录通过 gRPC 协议调用的各类接口请求，RESTful API 请求的访问日志将在后续版本进行支持。相关使用请见（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmilvus.io%2Fdocs%2Fconfigure_access_logs.md" target="_blank">https://milvus.io/docs/configure_access_logs.md</a>）。</p><h2>数据导入支持 Parquet 格式</h2><p>Parquet 是一种广泛使用的列式存储格式，能高效处理大批量数据，尤其广泛应用在数据分析和机器学习领域。通过支持 Parquet 格式的数据导入，我们为用户提供了更加灵活和高效的数据处理能力。</p><p>对于正在使用 Parquet 格式存储和处理大规模数据集的用户来说，这意味着现在可以无缝地将其数据集成到 Milvus 的向量数据库中，而无需进行繁琐的数据格式转换。这不仅简化了数据的导入过程，还大大缩短了从数据准备到向量检索的时间。同时 Milvus 的数据格式转换工具 BulkWriter 也将支持 Parquet 格式并作为其默认输出格式。</p><h2>兼容性变更</h2><p>为了减少资源消耗，新版本 Milvus 默认关闭了在 Search/Query 接口中对 Partition Names 参数做正则表达式的支持。但是，用户依旧可以通过配置 proxy.partitionNameRegexp 重新启用此功能。</p><h2>各类优化</h2><p>此外，Milvus 2.3.4 还进行了各式优化，包括：</p><ul><li><p>提升数据检索和可变长度数据处理的内存效率，这将帮助系统更稳定的运行；</p></li><li><p>将错误信息以总分（Summary &amp; Details）方式组织，使得 Error message 更易读；</p></li><li><p>完善 RBAC 功能，支持自定义 built-in role，新增对 Partition 级别的权限管理；</p></li><li><p>interimIndex 开关额外支持构建 Binlog Index 临时索引以优化持续写入场景下分布式集群上做并发查询的性能。</p></li></ul><p>回顾过去的半年，Milvus 一直保持着高效的迭代速度，大版本也从 2.2 升级到了 2.3，新增了不少功能。发版方面，对于小版本，我们一般着眼于提升稳定性和易用性，让用户用的省心安心；而在大版本上，一方面，我们会贴合用户使用场景，另一方面会紧跟技术前沿保持创新，发布一批全新的功能。</p><p>这里提前做一个预告，Milvus 的下一个大版本 2.4 正在路上，届时会发布一批重磅功能，包括但不限于：多向量多模态的支持 Multi-Vectors、稀疏向量 Sparse Embedding、分类聚合 Group By、倒排索引 Inverted Index、数据迁移容灾工具 CDC 等……敬请期待！</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 18 Jan 2024 10:44:30 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/4209276/blog/10883232</guid>
            <link>https://my.oschina.net/u/4209276/blog/10883232</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[华为发布 HarmonyOS NEXT 鸿蒙星河版（开发者预览）]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>今天下午在深圳举办的鸿蒙生态千帆启航仪式上，华为常务董事、终端 BG CEO 余承东宣布：<strong>HarmonyOS NEXT 鸿蒙星河版（开发者预览版）面向开发者开放申请</strong>。鸿蒙星河版将实现六大极致原生体验，包括原生精致、易用、流畅、安全、智能和互联。</p><p><img src="https://oscimg.oschina.net/oscnet/up-3b40ebae0c495dbbb24a8e02981c656ca22.jpg" referrerpolicy="no-referrer"></p><blockquote><ul><li>HarmonyOS NEXT 开发者预览版申请：<strong><em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.huawei.com%2Fconsumer%2Fcn%2FactivityDetail%2Fharmonyos-next-preview%2F" target="_blank">https://developer.huawei.com/consumer/cn/activityDetail/harmonyos-next-preview/</a></u></em></strong></li><li>HarmonyOS NEXT 开发者预览版关键开发特性：<br><u><em><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.huawei.com%2Fconsumer%2Fcn%2Fnext" target="_blank">https://developer.huawei.com/consumer/cn/next</a></strong></em></u></li><li>HarmonyOS NEXT 开发者预览版支持设备：</li></ul><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-1a4d340dcc618a646d78671419e2b08db71.png" referrerpolicy="no-referrer"></p></blockquote><p>余承东表示，首批鸿蒙原生应用生态伙伴已经突破 200 家。预计到今年年底，将有 5000 款应用完成鸿蒙原生开发。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-568f3f03223ab175b643dcf3434b6ad54ee.png" referrerpolicy="no-referrer"></p><p>据介绍，HarmonyOS NEXT 鸿蒙星河版采用华为自研内核，抛弃了传统的 Linux 内核以及 AOSP 安卓开放源代码项目等代码，仅支持鸿蒙内核和鸿蒙系统的应用。</p><p>余承东在发布会现场表示，鸿蒙内核超越传统内核，鸿蒙系统是真正的操作系统，从编程语言到编译器都是全栈自研。他还说道，真正的操作系统需要有底座和生态支持。经过十年的发展和蝶变，鸿蒙操作系统已在各种场景设备上得到广泛应用。华为力求在核心技术、全栈能力、底座和生态方面实现全面发展，打造真正的操作系统。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-9a92b0ee0233ea897e68426d8b4de28bcf6.png" referrerpolicy="no-referrer"></p><p>按照发布日程，HarmonyOS NEXT 鸿蒙星河版将于 Q2 推出开发者 Beta 版，Q4 发布商用版。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-c3f2e68f3c1f3af41732820781574df2a78.png" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 18 Jan 2024 09:50:46 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276094/harmonyos-next-dev-preview</guid>
            <link>https://www.oschina.net/news/276094/harmonyos-next-dev-preview</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[GreptimeDB v0.6 发布 | 支持 Datanodes 间迁移数据表 Region]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>2024 年新年伊始，Greptime 团队携新年的活力，持续进行紧锣密鼓的版本迭代。继上一次更新后，仅仅三周我们的开源时序数据库就又迎来了一个更加强大、功能丰富的新版本——GreptimeDB v0.6。</p><p>接下来我们将介绍 GreptimeDB v0.6 的主要版本改进：</p><ul><li>v0.6 功能上新</li><li>其他亮点更新</li></ul><h2>Region Migration</h2><p>在 v0.5 版本中，我们引入了对 Kafka WAL 的支持，使得在多个 Datanode 之间实现 Region 数据的同步和迁移成为可能。在 0.6 版本中，我们初步实现了 Region Migration 功能，<strong>为用户提供了在 Datanode 之间迁移数据表 Region 的能力，同时保障了数据的完整性，为动态调节集群负载提供了很好的基础。</strong></p><p>例如，随着查询性能需求的增长，用户可以通过 Region Migration 轻松将数据表 Region 迁移到负载更低或者更大规格的 Datanode 节点，以实现更好的查询性能。</p><p>未来，我们计划引入动态 Region 分布，该功能将在不中断服务的情况下，根据实时监测的负载状况和业务需求，智能地重新分配数据 Region，以优化资源利用。这将实现更加智能和高效的数据管理，为持续变化的业务环境提供可持续的支持。</p><h2>其他亮点更新</h2><ul><li><p>新增配置项，允许指定查询的默认时区</p><p>通过增加 <code>--store-key-prefix</code> 配置选项，管理员可以指定 metasrv 所使用的 Key 前缀，从而避免键名冲突。</p></li><li><p>实现了 PromQL 中的 OR 逻辑算子</p><p>新增特殊的 <code>UNION</code> 算子（在 PromQL 中为 <code>OR</code>）专门用于特定的 PromQL 查询场景。该算子接受两个输入节点，左子节点的所有列都会输出，<code>compare_keys</code> 指定的列则用于检查重复。遇到重复时，若均源自右节点则只保留首行，源自左节点则丢弃右节点的行；输出包含所有左右节点的列，且行顺序不固定。</p></li></ul><h2>未来展望</h2><p>在 v0.7 版本中，我们将引入一个全新的索引模块，其中的第一个实现会是倒排索引。我们的目标是通过这个索引模块来提升在海量时间线中筛选出少量时间线并进行查询时的性能。这正是可观测场景中 Metric Engine 着重关注的特性。目前，我们的团队正在对两者的结合进行测试，以确保其性能和稳定性。请大家期待我们即将发布的 v0.7 版本！</p><h3>关于 Greptime 的小知识：</h3><p>Greptime 格睿科技于 2022 年创立，目前正在完善和打造时序数据库 GreptimeDB，格睿云 GreptimeCloud 和可观测工具 GreptimeAI 这三款产品。</p><p>GreptimeDB 是一款用 Rust 语言编写的时序数据库，具有分布式、开源、云原生和兼容性强等特点，帮助企业实时读写、处理和分析时序数据的同时降低长期存储成本；GreptimeCloud 可以为用户提供全托管的 DBaaS 服务，能够与可观测性、物联网等领域高度结合；GreptimeAI 为 LLM 量身打造，提供成本、性能和生成过程的全链路监控。</p><p>GreptimeCloud 和 GreptimeAI 已正式公测，欢迎关注公众号或官网了解最新动态！</p><p>官网：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgreptime.cn%2F" target="_blank">https://greptime.cn/</a></p><p>GitHub: <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FGreptimeTeam%2Fgreptimedb" target="_blank">https://github.com/GreptimeTeam/greptimedb</a></p><p>文档：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.greptime.cn%2F" target="_blank">https://docs.greptime.cn/</a></p><p>Twitter: <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftwitter.com%2FGreptime" target="_blank">https://twitter.com/Greptime</a></p><p>Slack: <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgreptime.com%2Fslack" target="_blank">https://greptime.com/slack</a></p><p>LinkedIn: <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.linkedin.com%2Fcompany%2Fgreptime%2F" target="_blank">https://www.linkedin.com/company/greptime/</a></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 18 Jan 2024 09:20:51 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/6839317/blog/10862471</guid>
            <link>https://my.oschina.net/u/6839317/blog/10862471</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[开放签电子签章项目加入渠成开源社区]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">开放签上线一个月，目前 gitee、github 两个社区截止发稿前 start 总量 426，每周累计增长 100 左右。在开源中国、github、csdn 等社区得到了广大开发者用户的关注，也得到渠成开源社区的关注，感谢他们。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">开放签于 2024 年 1 月份正式加入渠成开源社区，希望能跟渠成开源社区一起发展，借助和学习渠成的开源运营方法，把开放签开源社区运营的越来越好。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>渠成开源社区介绍</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">渠成开源社区由禅道项目管理软件团队发起，社区的经营主体为青岛渠成开源计算机网络技术研究中心，是从事非营利性社会服务活动的社会组织。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">渠成开源社区主要面向一线开源软件生产者、贡献者、组织者、赞助商和用户，以解决具体实际问题为宗旨，旨在打造以开源软件为核心纽带的开源生态系统，真正做到让每一个优秀的开源软件都能实现商业化。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>渠成开源社区要做的事情</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">渠成开源社区以解决开源实际问题为宗旨，打造以开源软件为核心的开源生态系统。社区会围绕代码工程侧、经营模式侧和社区活动侧这三类事情展开：</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">帮助开源软件社区把项目做得更好：支持开源任务悬赏，包含开源文档、开源 Bug、开源极客营、开源测试、产品设计、UI 设计等等。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">帮助开源软件社区把项目经营得更好：围绕如何以开源软件建立自己的经营模式提供文章、视频、沙龙、培训等一系列的内容。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">充分链接开源生态中的各种角色：通过各种社区功能、线上线下的活动建立各角色的充分链接。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>开放签电子签章介绍</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">开放签团队源自于电子合同 SaaS 公司，专注于提供电子签章相关的专业解决方案，开放签致力于将电子签章产品、技术开源、开放，让电子签署更加简单。我们更加相信秉承开放共享这一价值观，能够为产品与用户之间带来更多信任。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">接下来，开放签继续秉持开源开放的精神，加入更多开源社区，探索更多的开源运营方式，为更多的开发者和用户带来更多的共享，更好的服务。</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 18 Jan 2024 09:14:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276088</guid>
            <link>https://www.oschina.net/news/276088</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[字节跳动开源 Gödel Scheduler：在离线统一调度器]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>字节跳动宣布基于 Kubernetes 系统自研分布式调度器：Gödel Scheduler。一个能统一调度在线和离线业务的分布式调度器，能在满足在离线业务功能和性能需求的前提下，提供良好的扩展性和调度质量。</p><p>具备如下主要特点：</p><ul><li><p>基于 K8s Scheduler，结合<strong>乐观并发</strong>思想，把最耗时的应用到节点匹配（filtering and scoring）操作放在 scheduler 组件，可以并发执行，提高大规模集群调度吞吐；</p></li><li><p><strong>两层调度语义</strong>抽象（Unit 和 Pod）和<strong>二级调度框架</strong>实现：提供更灵活的「批」调度能力，更好支持离线业务的同时，可以进一步提高调度吞吐和提升系统扩展性 （扩展后的框架可以更好地处理一些特殊场景）；</p></li><li><p>丰富的功能和优秀的性能，满足在线，离线（批，流）和训练等业务需求，真正做到统一调度；</p></li><li><p>兼容 Kubernetes 生态，可以替换 K8s Scheduler；</p><ul><li>由于性能以及架构优化，在 framework interface 上与 K8s Scheduler 不完全一样，但扩展性不受影响，也可以像 Kubernetes 一样实现 scheduling plugin；</li></ul></li></ul><p><span style="background-color:#ffffff; color:#3e3e3e">架构如下图所示：</span></p><p><span style="background-color:#ffffff; color:#3e3e3e"><img alt="" height="207" src="https://oscimg.oschina.net/oscnet/up-df6660cb4c8f0bdd045a0ffbd83527872fc.png" width="500" referrerpolicy="no-referrer"></span></p><p><span style="color:#3e3e3e">Gödel Scheduler 由三个组件组成：</span><span style="color:#3e3e3e">Dispatcher、Scheduler<span>&nbsp;</span></span><span style="color:#3e3e3e">和</span><span style="color:#3e3e3e"><span>&nbsp;</span></span><span style="color:#3e3e3e">Binder</span><span style="color:#3e3e3e">。</span><span style="color:#3e3e3e">其中，Scheduler 组件是多实例，乐观并发调度， Dispatcher 和 Binder 则是单实例。</span>&nbsp;</p><p>公告指出，<span style="color:#3e3e3e">在过去两年里，Gödel Scheduler 已在字节跳动内部大规模落地，提供丰富的调度语义和功能，包括但不限于 Gang、Job level affinity、微拓扑调度、丰富的排队策略、抢占策略以及调度策略等，它高效稳定地支撑着抖音、今日头条等内部多种复杂业务的运行。</span></p><p><span style="color:#3e3e3e">除了架构优化以外，项目团队还基于以前优化 Kubernetes 原生调度器的经验，对 Gödel Scheduler 的实现进行了更深度的性能优化。结合内部优化过的 Kubernetes 系统，Gödel 调度器单分片吞吐可</span><span style="color:#000000">达&nbsp;<strong>2000+ Pods/s</strong>, 多分片可达&nbsp;<strong>5000+ Pods/s</strong>。并基</span><span style="color:#3e3e3e">于此不断提升单集群规模，目前字节跳动内部最大的线上单集群规模已经达到 20000+&nbsp;节点、100w+ Pods。</span></p><p><span style="color:#3e3e3e">经过内部多年反复验证，目前&nbsp;<span style="background-color:#ffffff">Gödel 系统</span>已达相对稳定状态。</span></p><p><span style="background-color:#ffffff; color:#3e3e3e">未来，开源团队计划持续迭代 Gödel scheduler，提供更加丰富的功能和更好的扩展性，不断优化一些特殊场景下（比如高部署率，高抢占频率等）的调度吞吐。同时，通过重调度的方式希望解决</span><strong>调度性能</strong><span style="background-color:#ffffff; color:#3e3e3e">和</span><strong>调度质量</strong><span style="background-color:#ffffff; color:#3e3e3e">难兼顾的难题，在保证调度吞吐的基础上，大幅提升调度质量。以及注重生态建设，兼容适配业务主流的系统和框架。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 18 Jan 2024 09:04:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276087</guid>
            <link>https://www.oschina.net/news/276087</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[OSI 报告：从历史角度看 DOSP 做法]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">Open Source Initiative (OSI) 于日前发布了一份名为「<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.opensource.org%2Fa-historic-view-of-the-practice-to-delay-releasing-open-source-software-osis-report%2F" target="_blank">Delayed Open Source Publication: A Survey of Historical and Current Practices</a>」的新报告，深入研究了 DOSP 的历史、模式以及发展趋势。</span></p><p><span style="color:#000000">延迟开源发布 (DOSP) 是是首先在专有许可证下分发或公开部署软件，然后以开源许可证有计划地发布该软件源代码的做法；Business Source License (BSL) 就是一种广为人知的 DOSP 许可。</span></p><p><span style="color:#000000">在整个开源软件历史中，软件生产商都一直在实践 DOSP；报告收集了一些示例，并对其进行分类以进行分析。</span></p><p><img height="386" src="https://oscimg.oschina.net/oscnet/up-1d9caa78ae4188bd65c15762117db68688e.png" width="300" referrerpolicy="no-referrer"></p><p><span style="color:#000000">最早的 DOSP 实例之一是 1998 年左右根据"Aladdin Free Public License"发布的 Aladdin GhostScript，后来过渡到同时采用专有许可和 GPL 的发布模型。KDE 的 Qt 库也是一个鲜明的示例，它将 DOSP 作为防止潜在开发中止的一种保障措施。Qt 的许可历史很复杂，如今其可以在商业和开源 GPL 2.0、GPL 3.0 和 LGPL 3.0 许可下使用。</span></p><p><span style="color:#000000">研究人员<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fthenewstack.io%2Fdelayed-open-source-publication-emerges-as-open-source-rival%2F" target="_blank">发现</a> DOSP 大致有 3 种类型：</span></p><ul><li><span style="color:#000000">Unconditional scheduled relicensing。这种直接的方法涉及在过渡到开源许可之前预先定义的时间延迟。</span></li><li><span style="color:#000000">Event-driven relicensing。在这种情况下，开源发布与特定事件相关联，比如发布新的专有版本，促使其前身开源。虽然这种方式曾经很常见，但现在已经很少使用了。</span></li><li><span style="color:#000000">Conditional relicensing。这种类型取决于某些条件，例如在转向开源之前获得资金或找到合适的非营利组织。但这个承诺可能会存在不会兑现的风险。</span></li></ul><p><span style="color:#000000">与 DOSP 相关的一个变种是 "visible source"或 "source available"。在这些模型中，源代码通常是可用的，但没有 Open Source Definition (OSD) 所保证的自由。近期比较著名的例子就是 Meta 的 AI 大语言模型 Llama 2 Community License，其代码是可用的，但商业使用受到限制。</span></p><p><span style="color:#000000">OSI 研究人员发现，在 DOSP 早期，DOSP"通常是为了垄断直接的商业收入：许可证将授予开源所需的大部分权限，但关键是不允许商业使用软件"。"这一限制适用于包括用户在内的所有下游被许可方，而不仅仅是开发者。</span></p><p><span style="color:#000000">"然而，最近一些 DOSP 许可证是为了防止任何被许可人在与某些特定类型的软件竞争的产品或服务中使用该软件，而这些软件对许可人来说具有重要的战略意义，与直接收入无关。"</span></p><p><span style="color:#000000">例如，为 MariaDB 编写的 BSL 1.1 不允许在生产中使用许可代码，除非许可人使用"Additional Use Grant (AUG)"机制。但&nbsp;</span><span style="background-color:#ffffff; color:#222222">AUG 因公司而异，也正因如此，</span><span style="background-color:#ffffff; color:#142640">每个 BSL 实例实际上都是一个本质上不同的许可证。</span></p><p><span style="color:#000000">如今，BSL 正在兴起。HashiCorp 在去年宣布变更核心产品的开源协议，从 MPL 2.0 迁移到 BSL 1.1，CouchBase、DragonflyDB 和 ArangoDB 等十来个项目都也使用了 BSL 协议。</span></p><p><span style="color:#000000">除了 DOSP 许可证，MongoDB 和 Redis 等几个面向云的软件项目在过去几年中也放弃了开源许可证，转而采用带有非竞争条款的许可证 (如 SSPL)。</span></p><p><span style="color:#000000">研究认为，DOSP 是企业用来保持商业优势，同时试图尽可能多地保留开源的优势的一种方式。但随着延迟的增加，开源的好处也会越来越少。探索这些好处与独占利用期限之间的权衡是未来值得研究的方向。此外，DOSP 的实验和多样性也都比我们所意识到的要多得多--尝试 DOSP 的项目、以及尝试的方式都要远远多出想象。</span></p><p><span style="color:#000000">报告还提出了一些未来值得继续研究的方向，包括：AGPL 与 DOSP 许可对比、对外部贡献的影响、首次发布开源代码后的重新授权等等。</span></p><p><span style="color:#000000">更多详情可<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopensource.org%2Fdelayed-open-source-publication%2F" target="_blank">查看完整报告</a>。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 18 Jan 2024 08:39:06 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276084/delayed-open-source-publication-osi-report</guid>
            <link>https://www.oschina.net/news/276084/delayed-open-source-publication-osi-report</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[云风宣布开源自研游戏引擎 Ant Engine]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>知名游戏开发者云风昨天宣布开源游戏引擎 Ant Engine。</p><blockquote><p><img src="https://oscimg.oschina.net/oscnet/up-23bf9834f7a41a24e60e8e09ce41c348727.png" referrerpolicy="no-referrer"></p><p>via<em><u>&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftwitter.com%2Fcloudwu%2Fstatus%2F1747509339752116544" target="_blank">https://twitter.com/cloudwu/status/1747509339752116544</a></u></em></p></blockquote><p>云风表示其所在公司已批准 Ant Engine 的开源申请，仓库已对外开放，但现在尚未正式发布，文档、示例等均待在&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fejoy%2Fant%2Fwiki" target="_blank">Wiki</a>&nbsp;上逐步完善，游戏仓库将于年后公开。他还说道，Ant Engine 已经开发了 6 年，其团队使用这个引擎开发的游戏有一年历史，技术部分已经全部完成（游戏体验部分还需要调整），性能方面超出预期。</p><p>Ant Engine 目前只有 iOS 版本完全可用。引擎可以在 Windows 上运行，但缺乏一些和 PC 相关的支持（比如接入 Steam ，更好的键盘鼠标支持）。Mac 版本略有不足，Android 版本尚未完成。</p><p><strong><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.codingnow.com%2F2024%2F01%2Fant_engine_open_source.html" target="_blank">云风介绍道</a></u></strong>，<strong>Ant Engine 基于 Lua 开发</strong>，有极低的理解成本，和极高的动态可定制性。他还表示：「以往基于 Lua 这类动态语言开发的基础设施中，最难解决是性能问题，而性能恰巧又已被 ANT 解决的相当不错。ANT 在手机上有极好的性能，我们用它开发的游戏，在极其复杂的场景下，iPhone 12 上依然可以小于每帧 10ms 的速度渲染。对于同等复杂度的场景，Unity 实现同等的效率将非常困难。」</p><ul><li>Ant Engine 技术特点：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fejoy%2Fant%2Fwiki%2FTechnicalFeatures" target="_blank">https://github.com/ejoy/ant/wiki/TechnicalFeatures</a></li><li>Ant Engine 的虚拟文件系统：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fejoy%2Fant%2Fwiki%2FVFS" target="_blank">https://github.com/ejoy/ant/wiki/VFS</a></li><li>Ant Engine&nbsp;的包系统：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fejoy%2Fant%2Fwiki%2FPackage" target="_blank">https://github.com/ejoy/ant/wiki/Package</a></li></ul><hr><p>吴云洋（Cloud），网名云风，毕业于中南大学，原网易游戏核心成员、杭州研究中心总监，是网易《大话西游》、《梦幻西游》等游戏的重要开发者。2011 年 9 月 5 日宣布已从网易辞职。</p><p>云风 GitHub 主页：<em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcloudwu" target="_blank">https://github.com/cloudwu</a></u></em></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 18 Jan 2024 07:48:35 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276078/cloudwu-ant-engine-open-source</guid>
            <link>https://www.oschina.net/news/276078/cloudwu-ant-engine-open-source</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[RWKV 元始智能完成种子轮融资，非 Transformer 架构的开源大语言模型]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>元始智能是一家国产开源非 Transformer 架构大语言模型提供商，其核心产品<strong>RWKV</strong>兼具 Transformer 和 RNN 的优势：推理效率高且恒定，显存占用少且恒定，支持无限上下文，对芯片友好。</p><p>近日，RWKV 元始智能<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2F7XpIuQ_sNQNzMNOqZajp3Q" target="_blank">完成种子轮融资</a></u>，投资方为陆奇于 2018 年创立的奇绩创坛和某匿名投资者。目前元始智能已开始继续融第二轮。</p><p>RWKV 是国产开源的首个非 Transformer 架构的大语言模型，目前已经迭代到第六代 RWKV-6。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-536b34de46699fb3de48f5d00644dded7b7.png" referrerpolicy="no-referrer"></p><p>RWKV 作者彭博在 2022 年 5 月开始训练 RWKV-2，当时只有 1 亿（100M）参数规模，后续在 2023 年 3 月训练了 RWKV-4 140 亿（14B）参数版本。</p><p>RWKV-5 的 15 亿和 30 亿参数版本已发布，且 70 亿参数版本会在 2024 年 1 月发布。而 RWKV-6 的 15 亿和 30 亿参数版本将在 2024 年 2 月发布，然后将继续训练 70 亿和 140 亿参数版本。</p><p>RWKV-5 和 RWKV-6 系列的特点是支持全球 100+种语言，也支持几十种编程语言，目前可以在 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.rwkv.com%2F" target="_blank">https://www.rwkv.com/ </a>体验在线 Demo。</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 18 Jan 2024 06:48:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276071</guid>
            <link>https://www.oschina.net/news/276071</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[智谱 AI 推出新一代基座模型 GLM-4，发起大模型开源基金]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>2024 年 01 月 16 日，在「智谱 AI 技术开放日 (Zhipu DevDay)」上，智谱 AI 发布新一代基座大模型 GLM-4，据称其整体性能相比 GLM3 全面提升 60%，逼近 GPT-4。</p><p><img src="https://oscimg.oschina.net/oscnet/up-ec790242fcd97c4ae3b363227a23e2c4e15.png" referrerpolicy="no-referrer"></p><p>GLM-4 亮点：</p><ul><li>支持更长上下文，单次提示词能处理的文本可达 300 页，上下文窗口长度最高达 128K</li><li>更强的多模态，文生图和多模态理解得到增强</li><li>支持处理 Excel、PDF、PPT 等格式的文件</li><li>可自动调用代码解释器进行复杂的方程或微积分求解</li><li>支持更快推理速度，更多并发，大大降低推理成本</li><li>增强了智能体能力</li></ul><p>智谱 AI 还发布了 All Tools、GLMs、MaaS API、大模型科研基金、大模型开源基金以及「Z 计划」创业基金等内容。</p><p>其中「大模型开源基金」包括三个「一千」：</p><ul><li>第一个「一千」，是 1000 张卡。智谱 AI 将为大模型开源社区提供一千张卡，助力开源开发；</li><li>第二个「一千」，是 1000 万人民币。智谱 AI 将提供 1000 万元的现金用来支持与大模型相关的开源项目。</li><li>第三个「一千」是 1000 亿 tokens。智谱 AI 将为优秀的开源开发者提供 1000 亿免费 API tokens。</li></ul><p><img src="https://oscimg.oschina.net/oscnet/up-59f5243472f2ad88a4dcdaa6399e4738afc.png" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 18 Jan 2024 06:08:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276067</guid>
            <link>https://www.oschina.net/news/276067</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[红帽正在开发 AI 工具]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Red Hat 工程师 Jiri Kyjovsky&nbsp;<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flists.fedoraproject.org%2Farchives%2Flist%2Fdevel%40lists.fedoraproject.org%2Fthread%2FMHUCYUJS7VZBESFYTALNAVPARK4RHPQO%2F" target="_blank">透露称</a></u>，他们正在开发一款名为"<strong>Log Detective</strong>"的 AI 工具，通过人工智能模型来帮助分析 RPM 包构建失败的原因。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-4011afdd7b7b4264fa60f8d2096ddb05293.png" referrerpolicy="no-referrer"></p><p>via&nbsp;<em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flog-detective.com%2F%23about" target="_blank">https://log-detective.com/</a></u></em></p><p>该工具将利用 AI 模型来识别和解释构建失败，并提供简单的建议以解决问题。Log Detective 的目标是使 RPM 打包人员更容易找出构建失败的原因。他们正在训练 AI 模型，以便它能够理解 RPM 构建日志，并用简单的语言解释失败原因，并提供修复建议。</p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flog-detective.com%2F" target="_blank">Log Detective 官网写道</a>：</p><blockquote><p>每个构建都会产生数千行输出，分割在多个日志文件中。相关的错误消息可能在任何地方。这就像大海捞针一样。</p><p>经验丰富的打包者有一种直觉，错误消息最有可能出现在哪里，但无论如何，这个过程都很乏味。新手则常常被复杂性所淹没，完全错过错误消息。</p><p>Log Detective 通过训练 AI 模型来理解 RPM 构建日志，并用简单的语言解释错误，提供修复方法的建议，开发者根本不需要打开日志。</p></blockquote></div>
                                    ]]>
            </description>
            <pubDate>Thu, 18 Jan 2024 03:34:01 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276057/red-hat-ai-log-detective</guid>
            <link>https://www.oschina.net/news/276057/red-hat-ai-log-detective</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Linus Torvalds 重新开始为 Linux 6.8 合并新代码]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>上周末，Linus Torvalds 所居住的俄勒冈州波特兰地区<u><a href="https://www.oschina.net/news/275878/linux-6-8-merge-window-hiatus">遭遇严重冬季风暴</a></u>，导致互联网和电力中断。因此在 Linux 6.8 合并窗口期间，Linus 的 Git 合并工作被迫中断近五天。但从内核仓库的最新动态来看，合并工作现已重新启动。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-597e98686d727d741b06dac623483c6803b.png" referrerpolicy="no-referrer"></p><p>Linus Torvalds 今天在 social.kernel.org 上<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsocial.kernel.org%2Fusers%2Ftorvalds" target="_blank">发布的最后一条消息称</a></u>，他的第五天"休假"正在进行，他所在地区希望今晚之前恢复供电，尽管昨天也有过类似的承诺，但没有实现。但在这不不久后，他开始为 Linux 6.8 合并新代码：</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-7160aba63cd79c783f54e5bd0d0f2f11d6a.png" referrerpolicy="no-referrer"></p><p>到目前为止，他还没有在 Linux 内核邮件列表上宣布是否需要延长合并窗口，或者因为 4~5 天的停机时间而做其他改动，但至少内核树上有了新代码。</p><p>Linux 6.8 将带来许多新功能。如果原计划不变，Linux 6.8-rc1 应该会在本周日发布，标志着合并窗口的结束，而稳定版 6.8 内核应该会在 3 月中旬发布。</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 18 Jan 2024 03:05:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276056/linux-6-8-merges-resume</guid>
            <link>https://www.oschina.net/news/276056/linux-6-8-merges-resume</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[网易有道自研知识库问答引擎 QAnything 开源]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>网易有道<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FkFOqYqhpy0Q4OvvGul-3qA" target="_blank">宣布</a>自研的知识库问答引擎 QAnything 正式开源：Q 是 question，A 是 answer，QAnything 的目标在于「万物皆可问」。</p><p>除了可以调用云端大模型服务，还支持纯本地部署。系统支持 word、ppt、excel、pdf、图片等多种文档格式，直接导入进去即可像"ChatGPT"一样问答。</p><p><img alt="" height="443" src="https://oscimg.oschina.net/oscnet/up-dd1c3f39b8916876b15ad0cc25aeaa24bfa.png" width="500" referrerpolicy="no-referrer"></p><p>（QAnything 系统架构图）</p><p>QAnything 的主要原理是基于检索增强的生成（Retrieval Augmented Generation，简称 RAG）。作为有道自研的 RAG 引擎，QAnything 结合了用户私有数据和大模型的优势——用户的任何内容，以任意的形式存在，比如各种格式的文档，音频，数据库等，都可以在 QAnything 的支持下，变成可以针对其内容进行问答的使用方式，通过这个技术框架用户可以很方便地搭建自己的智能知识助手。</p><p>值得一提的是，QAnything 是一套完整的 RAG 系统，包括专门优化的自研的 embedding 和 rerank 模型，微调后的 LLM，优化后的推理代码，向量数据库，以及一个立即上手可用的前端。所有的算法模型（包括 7B 大模型+embedding/rerank+OCR）占用显存不超过 16G。</p><p>如今，QAnything 已在有道翻译文档问答、有道速读及有道内部业务的客服系统等多个产品中进行了应用。</p><p><img height="225" src="https://oscimg.oschina.net/oscnet/up-6945d43fa219cdaa7b5009ef9ffeb614e4e.png" width="500" referrerpolicy="no-referrer"></p><p><span style="background-color:#ffffff; color:rgba(0, 0, 0, 0.9)">公告表示，目前 QAnything 项目还在不断迭代，欢迎大家参与开发，并给予更多反馈。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 18 Jan 2024 02:36:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276054</guid>
            <link>https://www.oschina.net/news/276054</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[WeChatMsg - 开源微信聊天记录管理工具]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>WeChatMsg 是一款开源的微信聊天管理工具。</p><div><a href="https://memotrace.lc044.love/"><img height="240" src="https://memotrace.lc044.love/img/logo%20-%20%E5%89%AF%E6%9C%AC.png" referrerpolicy="no-referrer"></a></div><blockquote><div>&nbsp;</div><h2>前言</h2><div><p>我深信有意义的不是微信，而是隐藏在对话框背后的一个个<strong>深刻故事</strong>。未来，每个人都能拥有 AI 的陪伴，而你的数据能够赋予它有关于你过去的珍贵记忆。我希望每个人都有将自己的生活痕迹👨‍👩‍👦👚🥗🏠️🚴🧋⛹️🛌🛀留存的权利，而不是遗忘💀。</p><p><strong>所以《留痕》</strong></p></div></blockquote><h2 style="text-align:start">🍉功能</h2><ul><li>还原微信聊天界面
<ul><li>🗨文本✅</li><li>🏝图片✅</li><li>🐻‍❄️表情包✅</li><li>拍一拍等系统消息✅</li></ul></li><li>导出聊天记录
<ul><li>sqlite 数据库✅</li><li>HTML(文本、图片、视频、表情包、语音、文件、系统消息)✅</li><li>CSV 文档✅</li><li>TXT 文档✅</li><li>Word 文档✅</li></ul></li><li>分析聊天数据，做成可视化年报 (急需前端大佬提供优质模板)</li><li>🔥<strong>项目持续更新中</strong></li><li>开发计划
<ul><li>自主选择年度报告年份</li><li>一键导出全部表情包、文件、图片、视频、语音</li><li>合并多个备份数据</li><li>批量导出数据</li><li>个人年度报告</li><li>群组年度报告</li><li>按日期、关键词索引</li></ul></li><li>小伙伴们想要其他功能可以留言哦📬</li><li>🔥项目正处于并将长期处于发展阶段，给我一些时间♾️，你所期望的未来都会实现</li></ul></div>
                                                                ]]>
            </description>
            <pubDate>Thu, 18 Jan 2024 02:18:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/p/wechatmsg</guid>
            <link>https://www.oschina.net/p/wechatmsg</link>
        </item>
        <item>
            <title>
                <![CDATA[好好的 「代码优化」 是怎么一步步变成 「过度设计」 的]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="rich_media_content js_underline_content
                       autoTypeSetting24psection
            " id="js_content"><section style="margin-bottom: 8px;outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);text-align: center;visibility: visible;" data-mpa-powered-by="yiban.io"><img class="rich_pages wxw-img __bg_gif" data-backh="96" data-backw="578" data-cropselx1="0" data-cropselx2="578" data-cropsely1="0" data-cropsely2="96" data-imgfileid="503042843" data-ratio="0.16666666666666666" src="https://oscimg.oschina.net/oscnet/0cd486c9-de1a-49c7-a79b-2306f73c35c6.gif" data-type="gif" data-w="636" style="outline: 0px;letter-spacing: 0.544px;font-size: var(--articleFontsize);border-radius: 8px;text-align: justify;width: 100%;visibility: visible !important;background-size: 16px !important;height: auto;" referrerpolicy="no-referrer"><br style="outline: 0px;visibility: visible;"></section><section data-mpa-template="t" data-mpa-template-id="502" data-mpa-category="模板" style="outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);visibility: visible;"><section data-mpa-category="模板" data-mid="" style="padding-right: 1px;padding-left: 1px;outline: 0px;width: 677px;display: flex;justify-content: flex-start;align-items: center;flex-direction: column;visibility: visible;"><section data-mid="" style="outline: 0px;letter-spacing: 0.544px;width: 675px;display: grid;grid-template-columns: 26px auto;visibility: visible;"><section data-mid="" style="outline: 0px;width: 26px;height: 14px;display: flex;justify-content: center;align-items: center;align-self: center;visibility: visible;"><br style="outline: 0px;visibility: visible;"></section><section data-mid="" style="padding-left: 7px;outline: 0px;display: flex;justify-content: flex-start;align-items: center;visibility: visible;"><section data-mid="" style="margin-right: 7px;outline: 0px;text-align: left;visibility: visible;"><p data-mid="" style="outline: 0px;width: 0px;font-size: 14px;font-family: PingFangSC-Semibold, &quot;PingFang SC&quot;;font-weight: bold;color: rgb(58, 92, 244);line-height: 20px;visibility: visible;"><br style="outline: 0px;visibility: visible;"></p></section><section data-mid="" style="margin-bottom: 4px;outline: 0px;width: 635px;height: 1px;border-top: 1px solid rgb(58, 92, 244);align-self: flex-end;visibility: visible;"><br style="outline: 0px;visibility: visible;"></section></section></section><section data-mid="" style="padding: 7px 14px 9px 19px;outline: 0px;width: 675px;text-align: left;border-bottom: 1px solid rgb(58, 92, 244);visibility: visible;"><p style="margin-top: 8px;margin-bottom: 8px;outline: 0px;min-height: 24px;letter-spacing: 0.578px;text-align: justify;visibility: visible;line-height: 1.75em;"><span style="color: rgb(62, 62, 62);font-size: 15px;letter-spacing: 0.578px;text-wrap: wrap;">有一天 Review 师妹的代码，看到一行很难看的代码，毕竟师妹刚开始转 JAVA，一些书写小习惯还是要养成，所以锱铢必较还是有必要的，于是给出了一些优化思路的建议，以及为什么要这么做。建议完后，我并没有停下」追求极致「的脚步，随着不断的思考，发现这段代码的优化慢慢变得五花八门起来了，完成了一次「代码优化」到「过度设计」的典型思考过程，这过程中涉及了很多 Java 的语法糖及设计模式的东西，很典型，能启发思考，遂记录下来。</span></p></section></section></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><br style="outline: 0px;visibility: visible;"></section><section style="margin-bottom: 0px;outline: 0px;box-sizing: inherit;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);color: rgba(25, 26, 31, 0.9);font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 16px;text-align: center;visibility: visible;line-height: 1.75em;"><span style="outline: 0px;visibility: visible;font-size: 15px;letter-spacing: 1px;"><img class="rich_pages wxw-img" data-imgfileid="503042840" data-ratio="0.3161764705882353" data-s="300,640" data-type="png" data-w="408" src="https://oscimg.oschina.net/oscnet/32fe6b4b-8bdc-4381-812a-d4d61bf97d58.png" style="outline: 0px;color: rgb(34, 34, 34);font-family: system-ui, -apple-system, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;visibility: visible !important;width: 113px !important;" referrerpolicy="no-referrer"></span></section><section style="margin-bottom: 0px;outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);color: rgb(34, 34, 34);text-align: center;visibility: visible;line-height: normal;"><span style="outline: 0px;color: rgb(3, 69, 255);font-family: -apple-system, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 18px;letter-spacing: 1px;visibility: visible;">一切的开始</span></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><br></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><span style="font-size: 15px;color: rgb(62, 62, 62);">起初是一段很简单的代码，开始仅仅是将外域的一些标识符转换为域内的标识符。</span></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><br></section><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="cs"><code><span class="code-snippet_outer">public&nbsp;Integer&nbsp;parseSaleType(String&nbsp;saleTypeStr){</span></code><code><span class="code-snippet_outer">  if(saleTypeStr == null || saleTypeStr.equals("")){</span></code><code><span class="code-snippet_outer">    return null;</span></code><code><span class="code-snippet_outer">  }</span></code><code><span class="code-snippet_outer">  if(saleTypeStr.equals("JX")){</span></code><code><span class="code-snippet_outer">    return 1;</span></code><code><span class="code-snippet_outer">  }</span></code><code><span class="code-snippet_outer">  return null;</span></code><code><span class="code-snippet_outer">}</span></code></pre></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><br></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><span style="font-size: 15px;color: rgb(62, 62, 62);">逻辑上很简单，实现的逻辑看上去也没啥大问题，基本学校的老师也是这么教的。</span></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><span style="font-size: 15px;color: rgb(62, 62, 62);"><br></span></section><section style="margin-bottom: 0px;outline: 0px;box-sizing: inherit;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);color: rgba(25, 26, 31, 0.9);font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 16px;text-align: center;visibility: visible;line-height: normal;"><span style="outline: 0px;font-size: 15px;letter-spacing: 1px;visibility: visible;"><img class="rich_pages wxw-img" data-imgfileid="503042842" data-ratio="0.3056872037914692" data-s="300,640" data-type="png" data-w="422" src="https://oscimg.oschina.net/oscnet/9766627e-6900-4974-8a8e-eabb92ae0829.png" style="outline: 0px;color: rgb(34, 34, 34);font-family: system-ui, -apple-system, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;visibility: visible !important;width: 117px !important;" referrerpolicy="no-referrer"></span></section><section style="margin-bottom: 0px;outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);color: rgb(34, 34, 34);text-align: center;visibility: visible;line-height: normal;"><span style="outline: 0px;font-family: -apple-system, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 18px;letter-spacing: 1px;visibility: visible;color: rgb(0, 17, 255);">语法规范</span></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><br></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;color: rgb(62, 62, 62);">但是嘛<span style="color: rgb(62, 62, 62);letter-spacing: 1px;">，不好看也容易犯错误，鸡蛋里挑骨头也得挑，于是给出了几个写代码的建议：</span></span></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></section><span id="OSC_h4_1"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong><strong style="outline: 0px;visibility: visible;"><span style="color: rgb(0, 17, 255);outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">有函数式方法的尽量用</span></strong></span></h4><section style="margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="color: rgb(0, 17, 255);outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;"><br></span></strong></span></section><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="javascript"><code><span class="code-snippet_outer"><span class="code-snippet__comment">//saleTypeStr == nullObjects.isNull(saleTypeStr)</span></span></code></pre></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><br></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><span style="font-size: 15px;color: rgb(62, 62, 62);">首先呢，虽然由于判断 null 这么写不会报错，但是按照常量写==前面的要求，应该倒过来写。另外，这种有 JDK 原生函数式的判断方法，还是优先使用函数式的写法，一来是有方法名比较直观，另外也是方便之后熟练使用 Lamada，别写出 .filter(x -&gt; null == x) 这样的写法，还是 .filter(Objects::isNull) 更可读些。</span></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><span style="color: rgb(20, 20, 220);font-weight: bold;letter-spacing: 0.578px;background-color: rgb(255, 255, 255);font-family: -apple-system, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 16px;text-indent: 0em;"><br></span></section><span id="OSC_h4_2"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 8px;margin-bottom: 8px;text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;"><span style="outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong><strong style="outline: 0px;visibility: visible;"><span style="color: rgb(0, 17, 255);outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">判断字符串为空不要自己写容易漏逻辑，尽量使用现成的方法</span></strong></span></h4><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><br></section><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="bash"><code><span class="code-snippet_outer">//if(saleTypeStr&nbsp;==&nbsp;null&nbsp;||&nbsp;saleTypeStr.equals(""))</span></code><code><span class="code-snippet_outer">if(StringUtils.isBlank(saleTypeStr))</span></code></pre></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><br></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><span style="font-size: 15px;color: rgb(62, 62, 62);">虽然原方法里无论判不判断空字符或者空格字符都不会影响最终方法的表征，但是从第一行想表达的判断「字符串是不是为空」这件事来看，这行并不能判断「空格字符」存在的情况，所以词不达意，另外也趁机强化记忆下 isBlank 和 isEmpty 的区别。</span></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><span style="font-size: 15px;color: rgb(62, 62, 62);">org.apache.commons.lang3 里有很多工具类，方法比较成熟逻辑也比较完整。</span></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><span style="font-size: 15px;color: rgb(62, 62, 62);">同理 org.apache.commons.collections4.CollectionUtils 还有一堆集合操作的工具。</span></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><span style="font-size: 15px;color: rgb(62, 62, 62);"><br></span></section><span id="OSC_h4_3"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 8px;margin-bottom: 8px;text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;"><span style="outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong><strong style="outline: 0px;visibility: visible;"><span style="color: rgb(0, 17, 255);outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">equals 判定，常量写前面</span></strong></span></h4><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><br></section><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="bash"><code><span class="code-snippet_outer">//if(saleTypeStr.equals("JX"))</span></code><code><span class="code-snippet_outer">if("JX".equals(saleTypeStr))</span></code></pre></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><br></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><span style="font-size: 15px;color: rgb(62, 62, 62);">虽然前面判断过 null，所以这里并不会报空指针，但是但凡之后书写前面漏了，这里就开始报错了。</span></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><br></section><span id="OSC_h4_4"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 8px;margin-bottom: 8px;text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;"><span style="outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong><strong style="outline: 0px;visibility: visible;"><span style="color: rgb(0, 17, 255);outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">少用魔法值，定义常量</span></strong></span></h4><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><strong style="color: rgb(62, 62, 62);font-size: 14px;letter-spacing: 0.034em;"></strong></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><br></section><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="java"><code><span class="code-snippet_outer">private&nbsp;static&nbsp;final&nbsp;String&nbsp;JX_SALE_TYPE_STR&nbsp;=&nbsp;"JX";</span></code><code><span class="code-snippet_outer">private static final Integer JX_SALE_TYPE_INT = 1;</span></code></pre></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><br></section><section style="line-height: 1.75em;margin-bottom: 8px;margin-top: 8px;"><span style="font-size: 15px;color: rgb(62, 62, 62);">但凡同一个魔法值在多处用，就怕漏改，所以收束定义在常量下，至少能保证全局引用的统一性。</span></section><section style="line-height: 1.75em;margin-bottom: 8px;margin-top: 8px;"><span style="font-size: 15px;color: rgb(62, 62, 62);"><br></span></section><span id="OSC_h4_5"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;margin-top: 8px;margin-bottom: 8px;"><span style="outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong><strong style="outline: 0px;visibility: visible;"><span style="color: rgb(0, 17, 255);outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">无状态方法，可选择定义为类静态</span></strong></span></h4><p style="line-height: 1.75em;margin-top: 8px;margin-bottom: 8px;"><br></p><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="typescript"><code><span class="code-snippet_outer">//public&nbsp;Integer&nbsp;parseSaleType(String&nbsp;saleTypeStr)public static Integer parseSaleType(String saleTypeStr)</span></code></pre></section><section style="line-height: 1.75em;margin-bottom: 8px;margin-top: 8px;"><br></section><section style="line-height: 1.75em;margin-bottom: 8px;margin-top: 8px;"><span style="font-size: 15px;color: rgb(62, 62, 62);">方法本身跟所在类的实例对象状态无关，且不会诱发线程安全问题，故符合被定义为 static 的条件，可先于对象创建在方法区，防止每个对象创建一次的时候，堆内存创建一次。</span></section><section data-mpa-template="t" mpa-from-tpl="t"><section style="margin: 33px auto;visibility: visible;" mpa-from-tpl="t"><section style="transform: scale(0.9);transform-origin: center center;box-sizing: border-box;visibility: visible;margin-top: 0px;margin-bottom: 0px;line-height: normal;"><section style="display: flex;flex-flow: row;text-align: center;justify-content: center;box-sizing: border-box;visibility: visible;" mpa-from-tpl="t"><section style="display: inline-block;vertical-align: middle;width: 156.797px;align-self: center;box-sizing: border-box;visibility: visible;" mpa-from-tpl="t"><section style="margin-top: 0.5em;margin-bottom: 0.5em;box-sizing: border-box;visibility: visible;" mpa-from-tpl="t"><section style="margin-bottom: 0px;outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;visibility: visible;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);text-align: center;line-height: normal;"><img class="rich_pages wxw-img" data-imgfileid="503042841" data-ratio="0.3056872037914692" data-s="300,640" src="https://oscimg.oschina.net/oscnet/3b57d41f-bf50-46bc-9f31-e741973316f3.png" data-type="png" data-w="422" style="outline: 0px;letter-spacing: 0.544px;font-size: 14px;visibility: visible !important;width: 117px !important;" referrerpolicy="no-referrer"></section><p style="outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);color: rgb(100, 99, 99);font-size: 15px;text-align: center;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="outline: 0px;font-family: -apple-system, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 18px;color: rgb(0, 17, 255);letter-spacing: 1px;">逻辑简化</span></p></section></section></section></section></section></section><section style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="font-size: 15px;color: rgb(62, 62, 62);letter-spacing: 1px;">语法的问题强调完，就得再琢磨琢磨这段逻辑需不需要这么多代码来表述了，乍眼一看没问题，但其实没必要写这么多。</span></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 8px;"><span style="font-size: var(--articleFontsize);letter-spacing: 0.034em;text-align: left;"><br></span></section><span id="OSC_h4_6"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 0.5em;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;"><span style="outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong><strong style="outline: 0px;visibility: visible;"><span style="color: rgb(0, 17, 255);outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">明确主体逻辑</span></strong></span></h4><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 8px;"><strong style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: var(--articleFontsize);letter-spacing: 0.034em;"><span style="font-size: 15px;color: rgb(62, 62, 62);"><br></span></strong></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 8px;"><strong style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: var(--articleFontsize);letter-spacing: 0.034em;"><span style="font-size: 15px;color: rgb(62, 62, 62);">判断入参有效性 -&gt; 处理核心逻辑 -&gt; 缺省返回</span></strong><span style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.034em;font-size: 15px;color: rgb(62, 62, 62);">，其实这个方法的构建思路是非常标准且合乎常理的，思考习惯很好，只是在这个简单的方法场景不免逻辑有些冗余。</span></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 8px;"><br></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 8px;"><span style="font-size: 15px;color: rgb(62, 62, 62);">其实再看这个方法，最核心的逻辑就是把字符串对应到数字上，其他不命中的情况返回 null 就可以了，那么简化逻辑后，为空判定其实可以去掉，直接变为：</span></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><br></section><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="java"><code><span class="code-snippet_outer">private&nbsp;static&nbsp;final&nbsp;String&nbsp;JX_SALE_TYPE_STR&nbsp;=&nbsp;"JX";</span></code><code><span class="code-snippet_outer">private static final Integer JX_SALE_TYPE_INT = 1;</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">public static Integer parseSaleType(String saleTypeStr){</span></code><code><span class="code-snippet_outer">  if(JX_SALE_TYPE_STR.equals(saleTypeStr)){</span></code><code><span class="code-snippet_outer">    return JX_SALE_TYPE_INT;</span></code><code><span class="code-snippet_outer">  }</span></code><code><span class="code-snippet_outer">  return null;</span></code><code><span class="code-snippet_outer">}</span></code></pre></section><section><section><section powered-by="xiumi.us"><p style="white-space: normal;margin-top: 0px;margin-bottom: 0px;"><strong style="letter-spacing: 0.034em;"><span style="font-size: 15px;"><br></span></strong></p><span id="OSC_h4_7"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 0.5em;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;"><span style="outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong><strong style="outline: 0px;visibility: visible;"><span style="color: rgb(0, 17, 255);outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">语法简化：三元运算符</span></strong></span></h4><p><br></p></section></section><section style="margin-top: 0px;margin-bottom: 0px;"><span style="color: rgb(62, 62, 62);font-size: 15px;letter-spacing: 0.034em;">再仔细看下场景有没有成熟的范式，【布尔式+返回值+非此即彼】，三元运算符可堪一用。</span></section></section><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="cs"><code><span class="code-snippet_outer">public static Integer parseSaleType(String saleTypeStr){</span></code><code><span class="code-snippet_outer">  return JX_SALE_TYPE_STR.equals(saleTypeStr) ? JX_SALE_TYPE_INT : null;</span></code><code><span class="code-snippet_outer">}</span></code></pre></section><section style="font-size: 15px;margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><section style="text-align: justify;justify-content: flex-start;margin: 10px 0%;display: flex;flex-flow: row;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: bottom;width: auto;min-width: 10%;flex: 0 0 auto;height: auto;align-self: flex-end;"><section powered-by="xiumi.us"><p style="white-space: normal;"><br></p><span id="OSC_h4_8"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 0.5em;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;"><span style="letter-spacing: 1px;"><span style="outline: 0px;visibility: visible;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong></span><strong style="color: rgb(0, 17, 255);letter-spacing: 1px;outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">语法简化：Optional</span></strong></span></h4><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 0.5em;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;"><br></h4><span id="OSC_h4_9"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 0.5em;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;"><span style="font-size: 15px;">这个场景范式也满足，【可能为空，有后续处理，有条件，有缺省值】，Optional 也算完美契合。</span></h4><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 0.5em;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;"><br></h4></section></section></section></section><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="cpp"><code><span class="code-snippet_outer">public static Integer parseSaleType(String saleTypeStr){</span></code><code><span class="code-snippet_outer">  Optional.ofNullable(saleTypeStr).filter(JX_SALE_TYPE_STR::equals).map(o -&gt; JX_SALE_TYPE_INT).orElse(null);</span></code><code><span class="code-snippet_outer">}</span></code></pre></section><p style="line-height: 1.75em;margin-top: 0px;margin-bottom: 8px;"><br></p><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;font-size: 15px;"><section powered-by="xiumi.us" style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;font-size: 15px;"><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;font-size: 15px;"><section powered-by="xiumi.us" style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;font-size: 15px;"><span id="OSC_h4_10"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 0.5em;text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;margin-bottom: 8px;"><span style="letter-spacing: 1px;"><span style="outline: 0px;visibility: visible;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong></span><strong style="color: rgb(0, 17, 255);outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">方法独立存在的必要性讨论</span></strong></span></h4><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 0.5em;text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;margin-bottom: 8px;"><br></h4><span id="OSC_h4_11"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 0.5em;text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;margin-bottom: 8px;"><span style="font-size: 15px;">其实语法简化到三元运算符和 Optional 这一步，如果一个方法体内只有这一行，这个方法独立存在的必要性的就开始存疑了，如果所有的转换流程都能收束在工程中的某个环节上，且保证这个方法的引用仅存在一处，那么这一行代码其实放在主干代码上更好，防止来回跳转的代码阅读障碍，当然这也仅仅是在现状下的讨论，如果存在且不仅限于以下几种状况时还得独立出来：</span></h4></section></section></section></section><ol class="list-paddingleft-1" style="list-style-type: decimal;"><li style="margin-top: 0.5em;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;font-size: 15px;"><section style="margin-top: 0.5em;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;font-size: 15px;"><section style="text-align: justify;justify-content: flex-start;margin: 10px 0%;display: flex;flex-flow: row;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: bottom;width: auto;min-width: 10%;flex: 0 0 auto;height: auto;align-self: flex-end;"><span style="font-size: 15px;">未来除了一种逻辑分支外，还会扩展其他分支，并且有被扩展的可能；</span></section></section></section></li><li style="margin-top: 0.5em;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;font-size: 15px;"><section style="margin-top: 0.5em;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;font-size: 15px;"><section style="text-align: justify;justify-content: flex-start;margin: 10px 0%;display: flex;flex-flow: row;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: bottom;width: auto;min-width: 10%;flex: 0 0 auto;height: auto;align-self: flex-end;"><span style="font-size: 15px;">虽然还是一种逻辑分支，但是判断的内容变长了，跟上下文和调用状态有关；</span></section></section></section></li><li style="margin-top: 0.5em;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;font-size: 15px;"><section style="margin-top: 0.5em;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;font-size: 15px;"><section style="text-align: justify;justify-content: flex-start;margin: 10px 0%;display: flex;flex-flow: row;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: bottom;width: auto;min-width: 10%;flex: 0 0 auto;height: auto;align-self: flex-end;"><span style="font-size: 15px;">虽然还是一种逻辑分支，但是逻辑总在调整；</span></section></section></section></li><li style="margin-top: 0.5em;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;font-size: 15px;"><section style="margin-top: 0.5em;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;font-size: 15px;"><section style="text-align: justify;justify-content: flex-start;margin: 10px 0%;display: flex;flex-flow: row;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: bottom;width: auto;min-width: 10%;flex: 0 0 auto;height: auto;align-self: flex-end;"><span style="font-size: 15px;">一处定义，多点引用；</span></section></section></section><section style="margin-top: 0.5em;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;font-size: 15px;"><section style="text-align: justify;justify-content: flex-start;margin: 10px 0%;display: flex;flex-flow: row;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: bottom;width: auto;min-width: 10%;flex: 0 0 auto;height: auto;align-self: flex-end;"><br></section></section></section></li></ol><section style="margin-top: 0.5em;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;font-size: 15px;"><section style="margin-bottom: 0px;outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);text-align: center;line-height: normal;"><img class="rich_pages wxw-img" data-imgfileid="503042839" data-ratio="0.328125" data-s="300,640" data-type="png" data-w="256" src="https://oscimg.oschina.net/oscnet/0b0881dd-148e-4d14-91fe-eb53964d59ed.png" style="outline: 0px;letter-spacing: 0.544px;font-size: 16px;visibility: visible !important;width: 122px !important;" referrerpolicy="no-referrer"></section><section style="margin-bottom: 0px;outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);color: rgb(100, 99, 99);font-size: 15px;text-align: center;line-height: normal;"><span style="outline: 0px;color: rgb(0, 17, 255);font-family: -apple-system, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 18px;letter-spacing: 1px;">继续拓展：定义枚举</span></section></section><section style="text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;font-size: 15px;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><br></section><section style="text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;font-size: 15px;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">「如无必要，勿增实体」</span></section><section style="text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;font-size: 15px;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><br></section><section style="text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;font-size: 15px;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">假如这个传入的字符其实还有很多种，返回的映射也有很多种的时候，其实在这里继续写一堆常量定义就很不理智了。</span></section><section style="text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;font-size: 15px;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><section style="text-align: left;justify-content: flex-start;margin: 10px 0%;display: flex;flex-flow: row nowrap;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: bottom;width: auto;min-width: 10%;flex: 0 0 auto;height: auto;align-self: flex-end;"><section style="margin-top: 0.5em;text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;margin-bottom: 8px;font-size: 15px;" powered-by="xiumi.us"><p style="margin-top: 0.5em;text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;margin-bottom: 8px;font-size: 15px;"><br></p><span id="OSC_h4_12"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 0.5em;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;"><span style="letter-spacing: 1px;"><span style="outline: 0px;visibility: visible;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong></span><strong style="color: rgb(0, 17, 255);letter-spacing: 1px;outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">值枚举构建</span></strong></span></h4><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;font-size: 15px;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><br></h4><span id="OSC_h4_13"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;font-size: 15px;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">考虑继续将入参的所有可能和出参的所有可能，可以构建为两组枚举值，这样所有的同簇常量就被放到一起了。</span></h4><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;font-size: 15px;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><br></h4><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;font-size: 15px;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><img class="rich_pages wxw-img" data-backh="189" data-backw="455" data-galleryid="" data-imgfileid="503042846" data-ratio="0.4153846153846154" data-s="300,640" src="https://oscimg.oschina.net/oscnet/f6a249a0-4411-4e31-abcc-705c6bab2de0.png" data-type="png" data-w="455" style="text-align: center;color: rgba(0, 0, 0, 0.9);font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: var(--articleFontsize);letter-spacing: 0.034em;width: 100%;" referrerpolicy="no-referrer"></h4></section></section></section></section><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="typescript"><code><span class="code-snippet_outer">public&nbsp;enum&nbsp;SaleTypeStrEnum{</span></code><code><span class="code-snippet_outer">  JX,</span></code><code><span class="code-snippet_outer">  // OTHERS</span></code><code><span class="code-snippet_outer">  ;</span></code><code><span class="code-snippet_outer">}</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">@AllArgsConstructor</span></code><code><span class="code-snippet_outer">@Getter</span></code><code><span class="code-snippet_outer">public enum SaleTypeIntEnum{</span></code><code><span class="code-snippet_outer">  JX(1),</span></code><code><span class="code-snippet_outer">  // OTHERS</span></code><code><span class="code-snippet_outer">  ;</span></code><code><span class="code-snippet_outer">  private Integer code;</span></code><code><span class="code-snippet_outer">}</span></code></pre></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><br></section><section style="text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;font-size: 15px;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><section style="text-align: left;justify-content: flex-start;margin: 10px 0%;display: flex;flex-flow: row nowrap;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: bottom;width: auto;min-width: 10%;flex: 0 0 auto;height: auto;align-self: flex-end;"><span style="font-size: 15px;letter-spacing: 1px;">但是这个枚举功能并不完善，因为从入参映射为 SaleTypeStrEnum，依然需要一段转换的逻辑，需要用到 SaleTypeStrEnum::name 来判定传参命中了哪个，所以这个逻辑不应该放在枚举外，继续补充：</span></section></section></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><br></section><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="cs"><code><span class="code-snippet_outer">public&nbsp;enum&nbsp;SaleTypeStrEnum{</span></code><code><span class="code-snippet_outer">  JX,</span></code><code><span class="code-snippet_outer">  // OTHERS </span></code><code><span class="code-snippet_outer">  ;</span></code><code><span class="code-snippet_outer">  public static SaleTypeStrEnum getByName(String saleTypeStr){</span></code><code><span class="code-snippet_outer">    for (SaleTypeStrEnum value : SaleTypeStrEnum.values()) {</span></code><code><span class="code-snippet_outer">      if(value.name().equals(saleTypeStr)){</span></code><code><span class="code-snippet_outer">        return value;</span></code><code><span class="code-snippet_outer">      }</span></code><code><span class="code-snippet_outer">    }</span></code><code><span class="code-snippet_outer">    return null;</span></code><code><span class="code-snippet_outer">  }</span></code><code><span class="code-snippet_outer">}</span></code></pre></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><br></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><span style="font-size: 15px;letter-spacing: 1px;text-align: left;background-color: rgb(255, 255, 255);color: rgb(34, 34, 34);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">方法有了，但是每次传进来值都要遍历整个枚举，O(n) 效率太低了，还是老规矩，空间换时间。</span><br></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><span style="font-size: 15px;color: rgb(62, 62, 62);"><br></span></section><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="typescript"><code><span class="code-snippet_outer">public&nbsp;enum&nbsp;SaleTypeStrEnum{</span></code><code><span class="code-snippet_outer">  JX,</span></code><code><span class="code-snippet_outer">  // OTHERS</span></code><code><span class="code-snippet_outer">  ;</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">  /**</span></code><code><span class="code-snippet_outer">    * 预热转换关系到内存</span></code><code><span class="code-snippet_outer">    */</span></code><code><span class="code-snippet_outer">  private static Map&lt;String, SaleTypeStrEnum&gt; NAME_MAP = Arrays.stream(SaleTypeStrEnum.values()).collect(Collectors.toMap(SaleTypeStrEnum::name, Function.identity()));</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">  public static SaleTypeStrEnum getByName(String saleTypeStr){</span></code><code><span class="code-snippet_outer">    return NAME_MAP.get(saleTypeStr);</span></code><code><span class="code-snippet_outer">  }</span></code><code><span class="code-snippet_outer">}</span></code></pre></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><br></section><p style="margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="font-size: 15px;text-align: left;background-color: rgb(255, 255, 255);color: rgb(34, 34, 34);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 1px;">这样每次检索就是 O(1) 了，那么最终方法体内也能使用 switch 管理原本的 if-else</span></p><p style="margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><br></p><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="cs"><code><span class="code-snippet_outer">public&nbsp;static&nbsp;Integer&nbsp;parseSaleType(String&nbsp;saleTypeStr){</span></code><code><span class="code-snippet_outer">  switch(SaleTypeStrEnum.getByName(saleTypeStr)){</span></code><code><span class="code-snippet_outer">    case JX:return SaleTypeIntEnum.JX.getCode();</span></code><code><span class="code-snippet_outer">    // OTHERS</span></code><code><span class="code-snippet_outer">    default:return null;</span></code><code><span class="code-snippet_outer">  }</span></code><code><span class="code-snippet_outer">}</span></code></pre></section><section style="font-size: 15px;margin-top: 0px;margin-bottom: 0px;"><section style="text-align: justify;justify-content: flex-start;margin: 10px 0%;display: flex;flex-flow: row;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: bottom;width: auto;align-self: flex-end;flex: 0 0 0%;height: auto;line-height: 0;"><section style="text-align: right;" powered-by="xiumi.us"><br></section></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><section style="display: inline-block;vertical-align: bottom;width: auto;min-width: 10%;flex: 0 0 auto;height: auto;align-self: flex-end;"><section powered-by="xiumi.us"><p style="white-space: normal;"><br></p><span id="OSC_h4_14"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 0.5em;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;"><span style="letter-spacing: 1px;"><span style="outline: 0px;visibility: visible;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong></span><strong style="color: rgb(0, 17, 255);letter-spacing: 1px;outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">关系枚举构建</span></strong></span></h4><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></h4><span id="OSC_h4_15"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="text-align: left;background-color: rgb(255, 255, 255);color: rgb(34, 34, 34);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 1px;">再仔细思考下，其实这里在描述的内容，无论是哪个枚举描述的内容都是同一件事物，方法本身就是描述两个不同编码的转换关系，且转换关系本身就是单向的，且映射路径极度简单，所以简单化一点，可以直接构建转换关系枚举﻿。</span></h4><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></h4><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;text-align: center;"><img class="rich_pages wxw-img" data-galleryid="" data-imgfileid="503042845" data-ratio="0.5683453237410072" data-s="300,640" src="https://oscimg.oschina.net/oscnet/a9fb2fe6-5cab-4fa2-9653-70f97f05993f.png" data-type="png" data-w="278" style="color: rgb(62, 62, 62);font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;text-align: center;letter-spacing: 0.578px;" referrerpolicy="no-referrer"></h4></section></section></section></section></section><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="typescript"><code><span class="code-snippet_outer">@Getter</span></code><code><span class="code-snippet_outer">@AllArgsConstructor</span></code><code><span class="code-snippet_outer">public enum SaleTypeRelEnum {</span></code><code><span class="code-snippet_outer">  // 不在分别定义两类变量，而是直接定义变量映射关系</span></code><code><span class="code-snippet_outer">  JX("JX", 1),</span></code><code><span class="code-snippet_outer">  // OTHERS</span></code><code><span class="code-snippet_outer">  ;</span></code><code><span class="code-snippet_outer">  private String fromCode;</span></code><code><span class="code-snippet_outer">  private Integer toCode;</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">  private static Map&lt;String, SaleTypeRelEnum&gt; FROM_CODE_MAP = Arrays.stream(SaleTypeRelEnum.values()).collect(Collectors.toMap(SaleTypeRelEnum::getFromCode, Function.identity()));</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">  public static SaleTypeRelEnum get(String saleTypeStr){</span></code><code><span class="code-snippet_outer">    return FROM_CODE_MAP.get(saleTypeStr);</span></code><code><span class="code-snippet_outer">  }</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">  public static Integer parseCode(String saleTypeStr){</span></code><code><span class="code-snippet_outer">    return Optional.ofNullable(SaleTypeRelEnum.get(saleTypeStr)).map(SaleTypeRelEnum::getToCode).orElse(null);</span></code><code><span class="code-snippet_outer">  }</span></code><code><span class="code-snippet_outer">}</span></code></pre></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><br></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><span style="color: rgb(62, 62, 62);font-size: 15px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.034em;">如果将转关系作为枚举，那么从职责上划分，转换这个动作应该是封闭在枚举内的固有行为，而不该暴露在外，故原来对方法的引用其实应该转为对关系枚举中 SaleTypeEnum::parseCode 方法的引用，O(1) 检索且封闭性良好，同时支持更多简单单向映射关系的管理，要是以后出现的新场景都是这种关系，那够扛很久嘞。</span></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><span style="color: rgb(62, 62, 62);font-size: 15px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.034em;"><br></span></section><section style="outline: 0px;text-wrap: wrap;background-color: rgb(255, 255, 255);font-size: 11pt;font-family: DengXian;color: rgb(0, 0, 0);letter-spacing: normal;text-align: center;margin-top: 0px;margin-bottom: 0px;line-height: 1.75em;"><img class="rich_pages wxw-img" data-imgfileid="503042844" data-ratio="0.328125" data-s="300,640" src="https://oscimg.oschina.net/oscnet/aec4be25-424c-421a-bd55-847d3abb75e1.png" data-type="png" data-w="256" style="outline: 0px;color: rgb(34, 34, 34);font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;visibility: visible !important;width: 133px !important;" referrerpolicy="no-referrer"></section><section style="outline: 0px;text-align: center;margin-top: 0px;margin-bottom: 0px;line-height: 1.75em;"><span style="outline: 0px;box-sizing: inherit;color: rgb(0, 17, 255);font-family: -apple-system, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 18px;text-wrap: wrap;background-color: rgb(255, 255, 255);letter-spacing: 1px;">继续拓展：设计模式</span></section><section style="margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><br></section><section style="margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="font-size: 15px;color: rgb(62, 62, 62);letter-spacing: 1px;">枚举的前提还是基于无状态前提，如果转换的的映射关系不再单纯，变得复杂，枚举的简单映射管理就不 work 了。</span></section><p style="margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="color: rgb(62, 62, 62);font-size: 15px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 1px;">﻿</span></p><p style="margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="font-size: 15px;color: rgb(62, 62, 62);letter-spacing: 1px;">「万事不决，上设计模式」</span></p><p style="margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="color: rgb(62, 62, 62);font-size: 15px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 1px;">﻿</span></p><p style="margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="font-size: 15px;color: rgb(62, 62, 62);letter-spacing: 1px;">哎~就是玩儿~</span></p><p style="margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 16px;text-align: left;outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;"><br></span></strong></span></p><p style="margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 16px;text-align: left;outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong></span><strong style="font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 16px;text-align: left;color: rgb(0, 17, 255);letter-spacing: 1px;outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">策略模式-简单实现</span></strong></p><p style="margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;color: rgb(62, 62, 62);font-size: 15px;letter-spacing: 1px;"><br></span></p><p style="margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;color: rgb(62, 62, 62);font-size: 15px;letter-spacing: 1px;">首先，依然将传入的字符串作为路由依据，但是传入的内容为了防止有未来扩展，所以构造一个上下文，策略本身基于上下文来处理，借助上文定义的值枚举做策略路由。</span></p><section style="text-align: center;margin-top: 0px;margin-bottom: 0px;"><img class="rich_pages wxw-img" data-galleryid="" data-imgfileid="503042848" data-ratio="0.42483660130718953" data-s="300,640" src="https://oscimg.oschina.net/oscnet/8374ff02-4a1a-4ed7-9a87-c797f2e3fcff.png" data-type="png" data-w="459" style="height: auto !important;" referrerpolicy="no-referrer"></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><br></section><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="java"><code><span class="code-snippet_outer">/**</span></code><code><span class="code-snippet_outer">  * 定义策略接口</span></code><code><span class="code-snippet_outer">  */</span></code><code><span class="code-snippet_outer">public interface SaleTypeParseStrategy{</span></code><code><span class="code-snippet_outer">  Integer parse(SaleTypeParseContext saleTypeParseContext);</span></code><code><span class="code-snippet_outer">}</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">/**</span></code><code><span class="code-snippet_outer">  * 策略实现</span></code><code><span class="code-snippet_outer">  */</span></code><code><span class="code-snippet_outer">public class JxSaleTypeParseStrategy implements SaleTypeParseStrategy{</span></code><code><span class="code-snippet_outer">  @Override</span></code><code><span class="code-snippet_outer">  public Integer parse(SaleTypeParseContext saleTypeParseContext) {</span></code><code><span class="code-snippet_outer">    return SaleTypeIntEnum.JX.getCode();</span></code><code><span class="code-snippet_outer">  }</span></code><code><span class="code-snippet_outer">}</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">/**</span></code><code><span class="code-snippet_outer">  * 调用上下文</span></code><code><span class="code-snippet_outer">  */</span></code><code><span class="code-snippet_outer">@Data</span></code><code><span class="code-snippet_outer">public class SaleTypeParseContext{</span></code><code><span class="code-snippet_outer">  private SaleTypeStrEnum saleTypeStr;</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">  private SaleTypeParseStrategy parseStrategy;</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">  public Integer pasre(){</span></code><code><span class="code-snippet_outer">    return parseStrategy.parse(this);</span></code><code><span class="code-snippet_outer">  }</span></code><code><span class="code-snippet_outer">}</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">public static Integer parseSaleType(String saleTypeStr){</span></code><code><span class="code-snippet_outer">  SaleTypeStrEnum saleTypeEnum = SaleTypeStrEnum.getByName(saleTypeStr);</span></code><code><span class="code-snippet_outer">  SaleTypeParseContext context = new SaleTypeParseContext();</span></code><code><span class="code-snippet_outer">  context.setSaleTypeStr(saleTypeEnum);</span></code><code><span class="code-snippet_outer">  switch(saleTypeStr){</span></code><code><span class="code-snippet_outer">    // 策略路由</span></code><code><span class="code-snippet_outer">    case JX:context.setParseStrategy(new JxSaleTypeParseStrategy());break;</span></code><code><span class="code-snippet_outer">    // 继续扩展</span></code><code><span class="code-snippet_outer">    default:return null;</span></code><code><span class="code-snippet_outer">  }</span></code><code><span class="code-snippet_outer">  return context.parse();</span></code><code><span class="code-snippet_outer">}</span></code></pre></section><section style="margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><br></section><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;color: rgb(62, 62, 62);letter-spacing: 1px;">当然，如果是这种没有上下文强依赖的策略，无论是静态单例还是 Spring 单例都会是一个不错的选择。SaleTypeParseContext 本身可以继续扩展内容和其他属性继<span style="color: rgb(62, 62, 62);">续丰富参数，策略实现中也可以继续针对更多参数扩充逻辑。</span></span></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="background-color: rgb(255, 255, 255);font-size: 16px;font-weight: bold;text-indent: 0em;text-align: left;font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;outline: 0px;visibility: visible;color: rgb(0, 17, 255);letter-spacing: 1px;"><strong style="outline: 0px;visibility: visible;"><span style="background-color: rgb(255, 255, 255);font-weight: bold;text-align: left;color: rgb(20, 20, 220);text-indent: 0em;outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;"><br></span></strong></span></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="background-color: rgb(255, 255, 255);font-size: 16px;font-weight: bold;letter-spacing: 1px;text-indent: 0em;text-align: left;font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;outline: 0px;visibility: visible;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="color: rgb(20, 20, 220);text-indent: 0em;outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;"><span style="text-wrap: wrap;font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 16px;text-align: left;outline: 0px;visibility: visible;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong></span><strong style="text-wrap: wrap;font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 16px;text-align: left;color: rgb(0, 17, 255);letter-spacing: 1px;outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">策略工厂-手动容器</span></strong></span></strong><strong style="outline: 0px;visibility: visible;"></strong></span></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(62, 62, 62);font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 1px;"><br></span></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(62, 62, 62);font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 1px;">策略是个好东西，但是简单实现下，这里依然将策略实现的路由过程交给了调用方来做，那么每增加一种实现，调用点还要继续改，要是恰好有若干调用点就完犊子了，并不优雅，所以搞个中间层容器工厂，解耦一下依赖。</span></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;color: rgb(62, 62, 62);letter-spacing: 1px;"><br></span></p><p style="text-align: center;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><img class="rich_pages wxw-img" data-galleryid="" data-imgfileid="503042847" data-ratio="0.3641207815275311" data-s="300,640" src="https://oscimg.oschina.net/oscnet/04ea1adc-df26-4624-87ea-c935c47a385b.png" data-type="png" data-w="563" style="height: auto !important;" referrerpolicy="no-referrer"></p><p style="text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></p><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="java"><code><span class="code-snippet_outer">@Component</span></code><code><span class="code-snippet_outer">public static class SaleTypeParseStrategyContainer{</span></code><code><span class="code-snippet_outer">  public final static Map&lt;SaleTypeStrEnum, SaleTypeParseStrategy&gt; STRATEGY_MAP = new HashMap&lt;&gt;();</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">  @PostConstruct</span></code><code><span class="code-snippet_outer">  public void init(){</span></code><code><span class="code-snippet_outer">    STRATEGY_MAP.put(SaleTypeStrEnum.JX, new JxSaleTypeParseStrategy());</span></code><code><span class="code-snippet_outer">    // 继续拓展</span></code><code><span class="code-snippet_outer">  }</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">  public Integer parse(SaleTypeParseContext saleTypeParseContext){</span></code><code><span class="code-snippet_outer">    return Optional.ofNullable(STRATEGY_MAP.get(saleTypeParseContext.getSaleTypeStr())).map(strategy-&gt; strategy.parse(saleTypeParseContext)).orElse(null);</span></code><code><span class="code-snippet_outer">  }</span></code><code><span class="code-snippet_outer">}</span></code></pre></section><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></p><p style="margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="font-size: 15px;color: rgb(62, 62, 62);letter-spacing: 1px;">容器内手动创建各个策略的实现的单例后进行托管，那调用方只需要去构建上下文就好了，实际调用的方法更换为 SaleTypeParseStrategyContainer::parse，那后续无论策略如何丰富，调用方都不需要再感知这部分变化。后续出现了新的策略实现，<span style="color: rgb(62, 62, 62);">则在工厂内继续追加路由表即可。</span></span></p><p style="margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="letter-spacing: 1px;"><strong style="font-size: 16px;letter-spacing: 1px;text-indent: 0em;text-align: left;color: rgb(0, 17, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;outline: 0px;visibility: visible;"><span style="text-indent: 0em;font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;outline: 0px;visibility: visible;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;"><br></span></strong></span></strong></span></p><p style="margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="letter-spacing: 1px;"><strong style="font-size: 16px;letter-spacing: 1px;text-indent: 0em;text-align: left;color: rgb(0, 17, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;outline: 0px;visibility: visible;"><span style="color: rgb(20, 20, 220);text-indent: 0em;outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;"><span style="font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;outline: 0px;visibility: visible;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong></span><strong style="font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;color: rgb(0, 17, 255);outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">注册与发现&amp;策略工厂-Spring 容器</span></strong></span></strong><strong style="font-size: 16px;letter-spacing: 1px;text-indent: 0em;text-align: left;color: rgb(0, 17, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;outline: 0px;visibility: visible;"></strong></span></p><section><section powered-by="xiumi.us"><section><section powered-by="xiumi.us"><p style="margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><br></p><p style="margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="color: rgb(62, 62, 62);font-size: 15px;letter-spacing: 1px;">如果考虑到策略会依赖 Spring 的 bean 和其他有状态对象，那么这里也可以改成 Spring 的注入模式，同时继续将「支持哪种情况」由托管方容器移动至策略内部，改成由策略实现自身去注册到容器中。</span></p><p style="margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><br></p><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><img class="rich_pages wxw-img" data-galleryid="" data-imgfileid="503042850" data-ratio="0.33276740237691" data-s="300,640" src="https://oscimg.oschina.net/oscnet/5f1309e8-d605-426f-867e-20fef37033d9.png" data-type="png" data-w="589" style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: var(--articleFontsize);letter-spacing: 0.034em;text-align: center;" referrerpolicy="no-referrer"></section></section></section></section></section><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="java"><code><span class="code-snippet_outer">public&nbsp;interface&nbsp;SaleTypeParseStrategy{</span></code><code><span class="code-snippet_outer">  Integer parse(SaleTypeParseContext saleTypeParseContext);</span></code><code><span class="code-snippet_outer">  // 所支持的情况</span></code><code><span class="code-snippet_outer">  SaleTypeStrEnum support();</span></code><code><span class="code-snippet_outer">}</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">@Component</span></code><code><span class="code-snippet_outer">public class JxSaleTypeParseStrategy implements SaleTypeParseStrategy{</span></code><code><span class="code-snippet_outer">  @Override</span></code><code><span class="code-snippet_outer">  public Integer parse(SaleTypeParseContext saleTypeParseContext) {</span></code><code><span class="code-snippet_outer">    return SaleTypeIntEnum.JX.getCode();</span></code><code><span class="code-snippet_outer">  }</span></code><code><span class="code-snippet_outer">  @Override</span></code><code><span class="code-snippet_outer">  public SaleTypeStrEnum support() {</span></code><code><span class="code-snippet_outer">    return SaleTypeStrEnum.JX;</span></code><code><span class="code-snippet_outer">  }</span></code><code><span class="code-snippet_outer">}</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">@Component</span></code><code><span class="code-snippet_outer">public static class SaleTypeParseStrategyContainer{</span></code><code><span class="code-snippet_outer">  public final static Map&lt;SaleTypeStrEnum, SaleTypeParseStrategy&gt; STRATEGY_MAP = new HashMap&lt;&gt;();</span></code><code><span class="code-snippet_outer">  @Autowired</span></code><code><span class="code-snippet_outer">  private List&lt;SaleTypeParseStrategy&gt; parseStrategyList;</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">  @PostConstruct</span></code><code><span class="code-snippet_outer">  public void init(){</span></code><code><span class="code-snippet_outer">    parseStrategyList.stream().forEach(strategy-&gt; STRATEGY_MAP.put(strategy.support(), strategy));</span></code><code><span class="code-snippet_outer">  }</span></code><code><span class="code-snippet_outer">  public Integer parse(SaleTypeParseContext saleTypeParseContext){</span></code><code><span class="code-snippet_outer">    return Optional.ofNullable(STRATEGY_MAP.get(saleTypeParseContext.getSaleTypeStr())).map(strategy-&gt; strategy.parse(saleTypeParseContext)).orElse(null);</span></code><code><span class="code-snippet_outer">  }</span></code><code><span class="code-snippet_outer">}</span></code></pre></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><br></section><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;color: rgb(62, 62, 62);">这样的话，连容器都不用改了，追加策略实现的改动只与当前策略有关，调用方和容器类都不需要感知了，但是缺点就在于如果有俩策略支持的情况相同，取到的是哪个<span style="color: rgb(62, 62, 62);letter-spacing: 1px;">就听天由命了~</span></span></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;color: rgb(62, 62, 62);letter-spacing: 1px;"><br></span></p><p style="font-size: 15px;text-align: left;justify-content: flex-start;flex-flow: row;vertical-align: bottom;width: auto;min-width: 10%;flex: 0 0 auto;height: auto;align-self: flex-end;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(20, 20, 220);font-weight: bold;letter-spacing: 1px;background-color: rgb(255, 255, 255);font-family: -apple-system, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 16px;text-indent: 0em;"><strong style="letter-spacing: 1px;text-indent: 0em;text-wrap: wrap;font-size: 16px;text-align: left;color: rgb(0, 17, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;outline: 0px;visibility: visible;"><span style="color: rgb(20, 20, 220);text-indent: 0em;outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;"><span style="font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;outline: 0px;visibility: visible;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong></span><strong style="font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;color: rgb(0, 17, 255);outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">注册与发现&amp;责任链</span></strong></span></strong></span></p><section style="font-size: 15px;text-align: justify;justify-content: flex-start;flex-flow: row;vertical-align: bottom;width: auto;min-width: 10%;flex: 0 0 auto;height: auto;align-self: flex-end;margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="color: rgb(62, 62, 62);letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;text-align: justify;"><br></span></section><section style="font-size: 15px;text-align: justify;justify-content: flex-start;flex-flow: row;vertical-align: bottom;width: auto;min-width: 10%;flex: 0 0 auto;height: auto;align-self: flex-end;margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="color: rgb(62, 62, 62);letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;text-align: justify;">当然如果不能事先知道「支持哪种情况」，只能在运行时判断「是否支持」，将事前判定改为运行时判定，广义责任链会是一个不错的选择，把所有策略排成一排，谁举手说自己能处理就谁处理。</span></section><p style="font-size: 15px;text-align: left;justify-content: flex-start;flex-flow: row;vertical-align: bottom;width: auto;min-width: 10%;flex: 0 0 auto;height: auto;align-self: flex-end;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(62, 62, 62);letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;text-align: justify;"><br></span></p><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(62, 62, 62);font-size: 15px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 1px;">﻿</span><img class="rich_pages wxw-img" data-galleryid="" data-imgfileid="503042849" data-ratio="0.3082077051926298" data-s="300,640" src="https://oscimg.oschina.net/oscnet/e9efe248-d032-45da-a437-a20a73077a84.png" data-type="png" data-w="597" style="text-align: center;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: var(--articleFontsize);letter-spacing: 0.034em;" referrerpolicy="no-referrer"></section><section style="text-align: justify;margin-top: 0px;margin-bottom: 0px;"><br></section><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="java"><code><span class="code-snippet_outer">public&nbsp;interface&nbsp;SaleTypeParseStrategy{</span></code><code><span class="code-snippet_outer">  Integer parse(SaleTypeParseContext saleTypeParseContext);</span></code><code><span class="code-snippet_outer">  // 用于判断是否支持</span></code><code><span class="code-snippet_outer">  boolean support(SaleTypeParseContext saleTypeParseContext);</span></code><code><span class="code-snippet_outer">}</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">@Component</span></code><code><span class="code-snippet_outer">public class JxSaleTypeParseStrategy implements SaleTypeParseStrategy{</span></code><code><span class="code-snippet_outer">  @Override</span></code><code><span class="code-snippet_outer">  public Integer parse(SaleTypeParseContext saleTypeParseContext) {</span></code><code><span class="code-snippet_outer">    return SaleTypeIntEnum.JX.getCode();</span></code><code><span class="code-snippet_outer">  }</span></code><code><span class="code-snippet_outer">  @Override</span></code><code><span class="code-snippet_outer">  public boolean support(SaleTypeParseContext saleTypeParseContext) {</span></code><code><span class="code-snippet_outer">    return SaleTypeStrEnum.JX.equals(saleTypeParseContext.getSaleTypeStr());</span></code><code><span class="code-snippet_outer">  }</span></code><code><span class="code-snippet_outer">}</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">@Component</span></code><code><span class="code-snippet_outer">public static class SaleTypeParseStrategyContainer{</span></code><code><span class="code-snippet_outer">  @Autowired</span></code><code><span class="code-snippet_outer">  private List&lt;SaleTypeParseStrategy&gt; parseStrategyList;</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">  public Integer parse(SaleTypeParseContext saleTypeParseContext){</span></code><code><span class="code-snippet_outer">    return parseStrategyList.stream()</span></code><code><span class="code-snippet_outer">        .filter(strategy-&gt;strategy.support(saleTypeParseContext))</span></code><code><span class="code-snippet_outer">        .findAny()</span></code><code><span class="code-snippet_outer">        .map(strategy-&gt;strategy.parse(saleTypeParseContext))</span></code><code><span class="code-snippet_outer">        .orElse(null);</span></code><code><span class="code-snippet_outer">  }</span></code><code><span class="code-snippet_outer">}</span></code></pre></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><br></section><section style="font-size: 15px;text-align: justify;justify-content: flex-start;flex-flow: row;vertical-align: bottom;width: auto;min-width: 10%;flex: 0 0 auto;height: auto;align-self: flex-end;margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="color: rgb(62, 62, 62);letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;text-align: justify;font-size: 15px;">这样的实现，依然可以将改动收束在策略本体上，修改相对集中，可以无耦地进行扩展。</span></section><section style="font-size: 15px;text-align: justify;justify-content: flex-start;flex-flow: row;vertical-align: bottom;width: auto;min-width: 10%;flex: 0 0 auto;height: auto;align-self: flex-end;margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="color: rgb(62, 62, 62);letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;text-align: justify;font-size: 15px;"><br></span></section><section style="margin-bottom: 0px;outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);text-align: center;line-height: normal;"><img class="rich_pages wxw-img" data-imgfileid="503042853" data-ratio="0.328125" data-s="300,640" src="https://oscimg.oschina.net/oscnet/564c4bbd-3a0d-430c-bde8-35f76f4e0d5a.png" data-type="png" data-w="256" style="outline: 0px;color: rgb(51, 51, 51);font-size: 20px;font-weight: bold;letter-spacing: 0.578px;visibility: visible !important;width: 134px !important;" referrerpolicy="no-referrer"></section><section style="margin-bottom: 0px;outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);color: rgb(100, 99, 99);font-size: 15px;text-align: center;line-height: normal;"><span style="outline: 0px;font-family: -apple-system, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 1px;font-size: 18px;color: rgb(0, 17, 255);">其他拓展</span></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">以上还只是在 JAVA 语言内去玩一些花样，在当前这种场景下肯定是有过度设计的嫌疑，7 行代码可以缩到 1 行，也可以扩充到 70 行，所以说嘛：</span></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">「用代码行数来考量一个程序员是不太合适滴！~」</span></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">﻿</span></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">当然了，也还可以继续借助其他的中间件搞花样，包括但不限于：</span></section><ol class="list-paddingleft-1" style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><li style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;font-size: 15px;letter-spacing: 1px;"><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">植入 Diamond 走走动态配置开关的思路；<br></span></section></li><li style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;font-size: 15px;letter-spacing: 1px;"><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">植入 QLExpress 搞搞逻辑表达式的思路；</span></section></li><li style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;font-size: 15px;letter-spacing: 1px;"><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">把策略实现改成 HsfProvider 走分布式调用思路；</span></section></li><li style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;font-size: 15px;letter-spacing: 1px;"><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">借助一些成熟的网关走服务路由的的调用思路；</span></section></li></ol><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">就不再此再过多展开了。</span><span style="color: rgb(100, 99, 99);font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 14px;letter-spacing: 0.578px;text-align: center;"></span></section><p><br></p><section data-role="outer" label="Powered by 135editor.com" style="margin-bottom: 0px;outline: 0px;letter-spacing: 0.544px;visibility: visible;"><section style="margin-top: 5px;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;font-size: 16px;word-break: break-all;color: rgb(0, 0, 0);font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;text-align: center;line-height: 1.75em;"><span style="outline: 0px;color: rgb(0, 17, 255);"><strong style="outline: 0px;">¤</strong></span><span style="outline: 0px;"><strong style="outline: 0px;">&nbsp;拓展阅读&nbsp;</strong></span><span style="outline: 0px;color: rgb(0, 17, 255);"><strong style="outline: 0px;">¤</strong></span></section><section style="margin-top: 5px;margin-bottom: 5px;outline: 0px;letter-spacing: 0.544px;font-size: 16px;word-break: break-all;color: rgb(0, 0, 0);font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;text-align: center;line-height: 1.75em;"><br style="outline: 0px;"></section><section style="margin-top: 8px;margin-bottom: 8px;outline: 0px;font-family: -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 0.544px;text-indent: 0em;text-align: center;line-height: 1.75em;min-height: 24px;clear: both;visibility: visible;"><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fmp%2Fappmsgalbum%3F__biz%3DMzAxNDEwNjk5OQ%3D%3D%26action%3Dgetalbum%26album_id%3D2565944923443904512%23wechat_redirect" textvalue="3DXR 技术" linktype="text" imgurl="" imgdata="null" tab="innerlink" data-linktype="2" style="outline: 0px;color: var(--weui-LINK);-webkit-user-drag: none;cursor: pointer;">3DXR 技术</a>&nbsp;|&nbsp; 
   <a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fmp%2Fappmsgalbum%3F__biz%3DMzAxNDEwNjk5OQ%3D%3D%26action%3Dgetalbum%26album_id%3D1533906991218294785%23wechat_redirect" textvalue="终端技术" linktype="text" imgurl="" imgdata="null" tab="innerlink" data-linktype="2" style="outline: 0px;color: var(--weui-LINK);-webkit-user-drag: none;cursor: pointer;">终端技术</a>&nbsp;|&nbsp; 
   <a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fmp%2Fappmsgalbum%3F__biz%3DMzAxNDEwNjk5OQ%3D%3D%26action%3Dgetalbum%26album_id%3D1592015847500414978%23wechat_redirect" textvalue="音视频技术" linktype="text" imgurl="" imgdata="null" tab="innerlink" data-linktype="2" style="outline: 0px;color: var(--weui-LINK);-webkit-user-drag: none;cursor: pointer;">音视频技术</a></section><p style="margin-top: 8px;margin-bottom: 8px;outline: 0px;min-height: 24px;font-family: -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 0.544px;text-indent: 0em;text-align: center;line-height: 1.75em;visibility: visible;"><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fmp%2Fappmsgalbum%3F__biz%3DMzAxNDEwNjk5OQ%3D%3D%26action%3Dgetalbum%26album_id%3D1539610690070642689%23wechat_redirect" textvalue="服务端技术" linktype="text" imgurl="" imgdata="null" tab="innerlink" data-linktype="2" style="outline: 0px;color: var(--weui-LINK);-webkit-user-drag: none;cursor: pointer;">服务端技术</a><span style="outline: 0px;letter-spacing: 0.544px;">&nbsp;|&nbsp;</span><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fmp%2Fappmsgalbum%3F__biz%3DMzAxNDEwNjk5OQ%3D%3D%26action%3Dgetalbum%26album_id%3D2565883875634397185%23wechat_redirect" textvalue="技术质量" linktype="text" imgurl="" imgdata="null" tab="innerlink" data-linktype="2" style="outline: 0px;color: var(--weui-LINK);-webkit-user-drag: none;cursor: pointer;">技术质量</a>&nbsp;|&nbsp;<a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fmp%2Fappmsgalbum%3F__biz%3DMzAxNDEwNjk5OQ%3D%3D%26action%3Dgetalbum%26album_id%3D1522425612282494977%23wechat_redirect" textvalue="数据算法" linktype="text" imgurl="" imgdata="null" tab="innerlink" data-linktype="2" style="outline: 0px;color: var(--weui-LINK);-webkit-user-drag: none;cursor: pointer;">数据算法</a></p><p style="margin-top: 8px;margin-bottom: 8px;outline: 0px;min-height: 24px;font-family: -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 0.544px;text-indent: 0em;text-align: center;line-height: 1.75em;visibility: visible;"><br style="outline: 0px;"></p><section class="mp_profile_iframe_wrp" style="margin-bottom: 24px;outline: 0px;"><mp-common-profile class="custom_select_card mp_profile_iframe js_wx_tap_highlight" data-pluginname="mpprofile" data-id="MzAxNDEwNjk5OQ==" data-headimg="http://mmbiz.qpic.cn/mmbiz_png/33P2FdAnju8t5nZGhAatCrc4e2iaDfAaoInribRKxc7MOqdTGygfcLqSDxhj0trCHVEh94Sjl7zuWYzwouYtJ0VQ/300?wx_fmt=png&amp;wxfrom=19" data-nickname="大淘宝技术" data-alias="AlibabaMTT" data-signature="大淘宝技术官方账号" data-from="2" data-index="0" data-origin_num="690" data-isban="0" data-biz_account_status="0" data-weui-theme="light" data-is_biz_ban="0"></mp-common-profile></section></section><section><section powered-by="xiumi.us"><section><section><section><section><article data-identifier-application__slash__x-doc-key="mxPOGyPLWx65nKa9"></article></section></section></section></section></section></section><section style="margin-bottom: 0px;"><section style="display: none;margin-top: 0px;"><br></section></section><p style="display: none;"><mp-style-type data-value="3"></mp-style-type></p></div><p style="color: #858585; font-size: 13px;">本文分享自微信公众号 - 大淘宝技术（AlibabaMTT）。<br>如有侵权，请联系 support@oschina.cn 删除。<br>本文参与「<a href="https://www.oschina.net/sharing-plan" target="_blank">OSC 源创计划</a>」，欢迎正在阅读的你也加入，一起分享。</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 18 Jan 2024 02:11:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/4662964/blog/10860307</guid>
            <link>https://my.oschina.net/u/4662964/blog/10860307</link>
            <author>
                <![CDATA[大淘宝技术]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[禅道软件获 2024 首个 GVP（最有价值开源项目）]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff; color:#333333">2024 开门见喜！1 月 1 日，</span><strong>禅道项目管理软件与旗下产品「ZUI 前端 UI 框架」入选 Gitee 最有价值开源项目计划</strong><span style="background-color:#ffffff; color:#333333">，</span><span style="background-color:#ffffff; color:#337fe5"><strong>禅道项目管理软件荣获 2024 首个 GVP（最有价值开源项目）</strong></span><span style="background-color:#ffffff; color:#333333">！</span></p><div><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcdn.easycorp.cn%2Fweb%2Fdata%2Fupload%2Fzentao%2F202401%2Ff_2bcd4ea0943f839941cedad5b6bc543e.jpg" target="_blank"><img align="" alt="禅道-最有价值开源项目" height="298" src="https://cdn.easycorp.cn/web/data/upload/zentao/202401/f_2bcd4ea0943f839941cedad5b6bc543e.jpg" width="500" referrerpolicy="no-referrer"></a></div><p><span style="background-color:#ffffff; color:#333333">GVP（Gitee Most Valuable Project）最有价值开源项目计划是 Gitee 综合评定出的优秀开源项目的展示平台，代表了开源项目的高质量能力与水平。</span><br> &nbsp;</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">在十四年的开源之路中，禅道项目管理软件在技术架构、产品创新、产品质量、社区参与度和用户影响力等方面都有着出色的表现。同时，禅道不断关注和研究业内实践，有机融合 IPD、SAFe、CMMI、Scrum、看板、瀑布和 DevOps 等七大项目管理模型，吸收人工智能（AI）、商业智能（BI）和信息管理（IM）等前沿技术，<strong><span style="color:#337fe5">旨在为用户提供专业高效的项目管理工具及落地解决方案</span></strong>。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:center"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcdn.easycorp.cn%2Fweb%2Fdata%2Fupload%2Fzentao%2F202401%2Ff_a7a01cec65c980b562bb018f156b7065.jpg" target="_blank"><img align="" alt="禅道-全生命周期项目管理软件" height="1425" src="https://cdn.easycorp.cn/web/data/upload/zentao/202401/f_a7a01cec65c980b562bb018f156b7065.jpg" width="500" referrerpolicy="no-referrer"></a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:center"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcdn.easycorp.cn%2Fweb%2Fdata%2Fupload%2Fzentao%2F202401%2Ff_fcca93a985b436fd8e7b9270e65c223a.jpg" target="_blank"><img align="" alt="禅道-全生命周期项目管理软件" height="1079" src="https://cdn.easycorp.cn/web/data/upload/zentao/202401/f_fcca93a985b436fd8e7b9270e65c223a.jpg" width="500" referrerpolicy="no-referrer"></a></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 18 Jan 2024 00:56:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276041/zentao-gvp</guid>
            <link>https://www.oschina.net/news/276041/zentao-gvp</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[书生·浦语 2.0（InternLM2）大语言模型正式开源]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>1 月 17 日，书生·浦语 2.0（InternLM2）发布会暨书生·浦源大模型挑战赛启动仪式在上海举行。上海人工智能实验室与商汤科技联合香港中文大学和复旦大学正式发布新一代大语言模型<strong>书⽣·浦语 2.0（InternLM2）</strong>。</p><p><img src="https://oscimg.oschina.net/oscnet/up-52e9a3ed647ca67a108395c42fa403f5137.jpg" referrerpolicy="no-referrer"></p><blockquote><p>开源地址</p><ul><li>Github：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FInternLM%2FInternLM" target="_blank">https://github.com/InternLM/InternLM</a></li><li>HuggingFace：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhuggingface.co%2Finternlm" target="_blank">https://huggingface.co/internlm</a></li><li>ModelScope：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmodelscope.cn%2Forganization%2FShanghai_AI_Laboratory" target="_blank">https://modelscope.cn/organization/Shanghai_AI_Laboratory</a></li></ul></blockquote><p>据介绍，InternLM2 是在 2.6 万亿 token 的高质量语料上训练得到的。沿袭第一代书生·浦语（InternLM）的设定，InternLM2 包含 7B 及 20B 两种参数规格及基座、对话等版本，满足不同复杂应用场景需求。秉持「以高质量开源赋能创新」理念，上海 AI 实验室继续提供 InternLM2 免费商用授权。</p><p>InternLM2 的核心理念在于回归语言建模的本质，致力于通过提高语料质量及信息密度，实现模型基座语言建模能力获得质的提升，进而在数理、代码、对话、创作等各方面都取得长足进步，<strong>综合性能达到同量级开源模型的领先水平。</strong>其支持 200K token 的上下文，一次性接收并处理约 30 万汉字的输入内容，准确提取关键信息，实现长文本中「大海捞针」。</p><p><img src="https://oscimg.oschina.net/oscnet/up-7c9cb74f4a31bdfb986e5bd545788786bac.png" referrerpolicy="no-referrer"></p><p><img src="https://oscimg.oschina.net/oscnet/up-318647a9bfbcddcb935f2efd51bc26c7cdf.png" referrerpolicy="no-referrer"></p><p>此外，InternLM2 的各项能力获得全面进步，相比于初代 InternLM，在推理、数学、代码等方面的能力提升尤为显著，综合能力领先于同量级开源模型。</p><p>根据大语言模型的应用方式和用户关注的重点领域，研究人员定义了语言、知识、推理、数学、代码、考试等六个能力维度，在 55 个主流评测集上对多个同量级模型的表现进行了综合评测。评测结果显示，InternLM2 的轻量级（7B）及中量级（20B）版本性能在同量级模型中表现优异。</p><p><img src="https://oscimg.oschina.net/oscnet/up-63b21de53ea876e2f73bebcc2d1cb185f26.png" referrerpolicy="no-referrer"></p><p><img src="https://oscimg.oschina.net/oscnet/up-5b27ccfd736b8e6c812fa412f2b84901be4.png" referrerpolicy="no-referrer"></p><ul></ul></div>
                                    ]]>
            </description>
            <pubDate>Wed, 17 Jan 2024 12:09:49 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276033/shanghai-ai-lab-internlm2</guid>
            <link>https://www.oschina.net/news/276033/shanghai-ai-lab-internlm2</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[ICLR 2024 录用结果公布，MetaGPT 喜提 ICLR 2024 Oral (1.2%)]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><img alt="" height="777" src="https://oscimg.oschina.net/oscnet/up-8a3c5ea8b36088086707d6c53bac8e20f2d.jpg" width="1197" referrerpolicy="no-referrer"></p><p><span>一年一度的 ICLR 顶会录用结果公布了！今年共 7000 多篇投稿论文，录用率 31%。</span></p><p><span>邮件显示，今年 ICLR 2024 组委会共收到了 7262 篇投稿，总体录用率约为 31%，与去年相似（2023 年总投稿数 5000）。</span></p><p><span>其中 spotlights 论文的录用率为 5%（约有 363 篇），Oral 论文的录用率为 1.2%（约有 85 篇）。</span></p><p><span style="background-color:#ffffff; color:rgba(0, 0, 0, 0.9)">ICLR 提交的论文主题大致包括：700 篇有扩散，NeRF 少于 100 篇，900 多篇大模型，100 多篇 ChatGPT（8 篇 Bard，16 篇 Claude)，170 篇关于 Llama，200 篇 CLIP，200 篇 NLP，大约 750 篇视觉研究。</span></p><p><img alt="" height="521" src="https://oscimg.oschina.net/oscnet/up-f440cb08ff5c4f309e92e3c2b5b92a9910f.jpg" width="1191" referrerpolicy="no-referrer"></p><p style="color:#374151; margin-left:0; margin-right:0; text-align:start">在即将到来的国际计算机学习表征会议（ICLR 2024）上，一个重要的研究成果「MetaGPT: Meta Programming for Multi-Agent Collaborative Framework」将被展示为口头报告。这一荣誉仅授予了总提交论文中的 1.2%。</p><p style="color:#374151; margin-left:0; margin-right:0; text-align:start">该项目是关于多智能体系统的先进研究，旨在通过元编程提升协作机器学习模型的效能。项目由一支国际研究团队完成，他们对这一成就表示欣喜。</p><p style="color:#374151; margin-left:0; margin-right:0; text-align:start">该论文的选中体现了团队的创新能力和科研成果的实际应用价值。完整的研究报告现已在 arXiv 上发布，并且相关代码已经在 GitHub 上开源，供学术界和公众查阅。</p><p style="color:#374151; margin-left:0; margin-right:0; text-align:start">论文和代码的公开旨在鼓励开放科学和促进全球范围内的协作研究。研究团队欢迎并感谢社区对他们工作的关注和支持。</p><ul><li>论文链接：https://arxiv.org/pdf/2308.00352.pdf</li><li>代码链接：https://github.com/geekan/MetaGPT</li></ul></div>
                                    ]]>
            </description>
            <pubDate>Wed, 17 Jan 2024 07:12:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276008</guid>
            <link>https://www.oschina.net/news/276008</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[汉为加入 OurBMC，联合打造软硬件协同 BMC 技术]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:rgba(0, 0, 0, 0.9); margin-left:8px; margin-right:8px; text-align:justify"><span>近日，广东汉为信息技术有限公司签署了 CLA（Contributor License Agreement，贡献者许可协议）&nbsp;，宣布正式加入 OurBMC 社区。</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:8px; margin-right:8px; text-align:justify"><span>广东汉为信息技术有限公司成立于 2014 年，是国产化计算机体系根部企业，专业从事国产化计算机产品的研发、制造和销售，主要产品包括嵌入式工控机、云终端计算机、网络安全设备、AI 小站、核心控制板卡等，核心技术包括计算机硬件设计、自主固件和国产化操作系统适配、FPGA 设计、边缘计算机及物联网、AI 及 5G 小站、安全可信计算等。</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:8px; margin-right:8px; text-align:justify"><span>汉为致力于成为国产化自主可控数字技术领域的先锋信创企业，专注于为电力、工控、交通、政务、金融等行业客户提供高可靠、高安全、高品质的软硬件整体解决方案产品和服务。</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:8px; margin-right:8px; text-align:justify"><span>汉为加入 OurBMC 社区后，将更好地融入社区 BMC 生态，为共同推进 BMC 技术自主可控，促进上下游信创企业协同，打造 BMC 信息系统软硬件生态添砖加瓦。</span></p><h4><strong><span style="color:#3498db">OurBMC 社区</span></strong></h4><p style="color:rgba(0, 0, 0, 0.9); margin-left:8px; margin-right:8px; text-align:justify"><span style="background-color:#ffffff; color:rgba(0, 0, 0, 0.9)">OurBMC 社区将秉承 「开放、平等、协作、创新」 原则，坚持 「开源、共建」 的合作方式，携手社区各成员单位共同推进 BMC 技术快速发展，辐射上下游形成产业共振，加速构建繁荣的信息系统软硬件生态。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 17 Jan 2024 01:47:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/275976</guid>
            <link>https://www.oschina.net/news/275976</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[热烈欢迎 HertzBeat 三位小伙伴新晋社区 Committer]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><img height="600" src="https://oscimg.oschina.net/oscnet/up-98fded00e1617e3edd5cc3174b3afd47597.webp" width="1920" referrerpolicy="no-referrer"><img alt="" src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/4b57f13746ec4286b8d02b1a7a294746~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1920&amp;h=600&amp;s=899967&amp;e=png&amp;b=213958" referrerpolicy="no-referrer"></p><blockquote><p>热烈欢迎 Dromara HertzBeat 有三位小伙伴新晋社区 Committer, 让我们来了解下他们的开源经历吧！</p></blockquote><h1>New Committer - vinci</h1><p><img alt="" src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9f01d65b82a44a108492845d1bdfe9d8~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=552&amp;h=553&amp;s=95966&amp;e=jpg&amp;b=d4c4ab" referrerpolicy="no-referrer"><img height="553" src="https://oscimg.oschina.net/oscnet/up-94e86368985d6e0fdc0bae9b8154f1a32db.webp" width="552" referrerpolicy="no-referrer"></p><p><strong>姓名：王佳宁</strong></p><p><strong>浙江大学计算机学院研究生一年级</strong></p><p><strong>Github ID: vinci-897</strong></p><h2>初识 Hertzbeat</h2><p>2023 年 3 月，我关注到了 Hertzbeat 的项目，于是直接给社区的 Tom 老哥发了邮件咨询是否可以加入，老哥很爽快的给了回复。刚好我当时正是大四时间比较充裕，就果断挑了一个 issue 解决，在 hertzbeat 有了第一个 pull request。</p><h2>开始提交 PR</h2><p>在之后一段时间里，我花了一段时间阅读 Hertzbeat 的代码，又断断续续的交了几个 pr。直到 4 月份，我了解到开源之夏相关活动，刚好 Hertzbeat 也在参加，所以提交了报名信息后便顺利入选。我的任务主要是负责实现一个推送方式的采集器，在编写代码的过程中，我得到了许多社区的郑晨鑫导师和 Tom 老哥帮助，最终能够顺利完成代码，整个过程还是比较顺利的。</p><h2>开源贡献</h2><ul><li>新增 push module，暴露接口供用户推送数据。</li><li>在 collector 模块中实现对推送数据的采集。</li><li>在前端中实现展示用户自定义的数据。</li></ul><h2>收获</h2><ul><li>接触到了很优秀的开源社区，提升了相关领域的技术水平。</li></ul><p>感谢 Tom 哥和我的 ospp 导师郑晨鑫，他们在我接触开源社区的过程中给出了许多帮助和建议。目前我仍然在社区中负责部分代码的开发，希望 Hertzbeat 以后可以越来越好！</p><p><img height="1414" src="https://oscimg.oschina.net/oscnet/up-8b23af7b60b07b7bb59c81aaa4815fca808.png" width="2000" referrerpolicy="no-referrer"></p><hr><h1>New Committer - 淞筱</h1><p><img height="460" src="https://oscimg.oschina.net/oscnet/up-d13bf758fee49fdb204df34f5456208bdf2.png" width="460" referrerpolicy="no-referrer"></p><p><strong>姓名：周书胜</strong></p><p><strong>河南师范大学大三学生</strong></p><h2>初识 Hertzbeat</h2><p>今年三月份，在小宝学长的影响下，对开源项目有了些许概念，并为后来学习开源项目奠定了基础，但由于当时只学习了一些 Java 基础，所以并没有再深入了解。</p><h2>开始提交 PR</h2><p>在今年七月份，基本完成 Java 框架开发的学习后，在小宝学长的鼓励下，我开始尝试拉取 issue，并在 7 月 20 日提交了第一个 PR。在此期间，也咨询了 Hertzbeat 作者和东风学长一些相关问题，实在感谢。</p><h2>开源贡献</h2><ul><li>支持 Spring Gateway、Apache Spark、Apache Hive 等服务指标采集</li><li>自定义 nginx、pop3 协议，对 Nginx，POP3 邮箱服务器进行指标采集，并添加相应帮助文档</li></ul><h2>收获</h2><ul><li>接触了更加优秀、结构更加复杂的大型项目，提高了编程和解决问题的能力</li><li>将理论知识付诸于实践，收获了 JUC，微服务相关的开发经验，以及宝贵的项目经历</li></ul><h2>感谢社区小伙伴</h2><p>感谢 HertzBeat 的作者、HertzBeat/Sms4j Committer 铁甲小宝同学、Sms4j Committer 东风同学，在我遇到自己不能解决的问题时，常常向三位哥哥请教，他们也总是不厌其烦，耐心的帮助我解决问题，实在是无以言表。</p><p>感谢社区的其它小伙伴，在与他们交流讨论的过程中收获满满，也感受到了 Dromara 社区活跃的开源氛围。</p><h2>给新人的一些建议</h2><ul><li>初次参与开源项目时，可以从简单的任务开始。逐渐熟悉项目的代码和流程，并逐步承担更复杂的任务。</li><li>如果遇到自己无法解决的问题时，可以多多请教社区的小伙伴们。</li></ul><p><img alt="" src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0b74eaf12a9f4be2807d823ff0a1b562~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=2000&amp;h=1414&amp;s=620535&amp;e=png&amp;b=fefaf7" referrerpolicy="no-referrer"><img height="1414" src="https://oscimg.oschina.net/oscnet/up-d529478f0368258215a7ece2ae48352a55a.png" width="2000" referrerpolicy="no-referrer"></p><hr><h1>New Committer - 东风</h1><p><img height="236" src="https://oscimg.oschina.net/oscnet/up-ed07eac47f5cddc5128796c75a6ce819412.png" width="236" referrerpolicy="no-referrer"></p><p><strong>姓名：张洋</strong></p><p><strong>河南师范大学应届生</strong></p><h2>初识 hertzbeat</h2><p>今年 6 月份开始对项目进行深入了解，我是经朋友推荐了解该项目的，一直对开源项目和社区有所探索，很喜欢这种大家互相分享、讨论并改进的氛围。同时之前在项目中也尝试实现一些监控，所以对于该项目比较感兴趣。</p><h2>开始提交 PR</h2><p>在今年 7 月起，我发现 hertzbeat 的 issue 和 pr 很活跃，于是就通过他们的 issue 和 pr 来了解如何实现某个协议的监控。随后我发现有关于 smtp 协议监控的 task，就在 issue 上与作者进行讨论，随后通过文档和代码完成了自己的 pr。</p><h2>开源贡献</h2><ul><li>实现 smtp、ntp、websocket 可用性的监控。</li><li>实现 memcached 、NebulaGraph 的监控指标。</li><li>为实现的监控添加相关文档。</li></ul><h2>收获</h2><ul><li>收获了监控相关的开发经验，新增了一个宝贵的项目经历。</li><li>对于网络协议有了更深刻的了解。</li><li>对于开源项目的贡献流程有了初步认识。</li></ul><h2>感谢社区小伙伴</h2><p>感谢 hertzbeat 的作者提供的相关文档和帮助。感谢朋友的带领，为我提供了勇气，让我敢于尝试进入开源项目进行贡献。感谢社区中其他的小伙伴的 issue 和 pr，加快了我对于该项目的了解。</p><h2>对新人的一点建议</h2><ul><li>issue 和 pr 是你了解的项目的敲门砖，一点要敢于讨论并发表观点。</li><li>贡献不分大小，要敢于尝试，并不断提升自己。</li></ul><p><img height="1414" src="https://oscimg.oschina.net/oscnet/up-7598e29c6007a740aaf2ffaf725b6118a4c.png" width="2000" referrerpolicy="no-referrer"></p><hr><h2>什么是 HertzBeat?</h2><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdromara%2Fhertzbeat" target="_blank">HertzBeat 赫兹跳动</a> 是一个拥有强大自定义监控能力，高性能集群，兼容 Prometheus，无需 Agent 的开源实时监控告警系统。</p><h3>特点</h3><ul><li>集 <strong>监控+告警+通知</strong> 为一体，支持对应用服务，应用程序，数据库，缓存，操作系统，大数据，中间件，Web 服务器，云原生，网络，自定义等监控阈值告警通知一步到位。</li><li>易用友好，无需 <code>Agent</code>，全 <code>WEB</code> 页面操作，鼠标点一点就能监控告警，零上手学习成本。</li><li>将 <code>Http, Jmx, Ssh, Snmp, Jdbc, Prometheus</code> 等协议规范可配置化，只需在浏览器配置监控模版 <code>YML</code> 就能使用这些协议去自定义采集想要的指标。您相信只需配置下就能立刻适配一款 <code>K8s</code> 或 <code>Docker</code> 等新的监控类型吗？</li><li>兼容 <code>Prometheus</code> 的系统生态并且更多，只需页面操作就可以监控 <code>Prometheus</code> 所能监控的。</li><li>高性能，支持多采集器集群横向扩展，支持多隔离网络监控，云边协同。</li><li>自由的告警阈值规则，<code>邮件</code><code>Discord</code><code>Slack</code><code>Telegram</code><code>钉钉</code><code>微信</code><code>飞书</code><code>短信</code><code>Webhook</code><code>Server 酱</code> 等方式消息及时送达。</li></ul><blockquote><p><code>HertzBeat</code>的强大自定义，多类型支持，高性能，易扩展，低耦合，希望能帮助开发者和团队快速搭建自有监控系统。</p></blockquote><p><img alt="" src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/2bd5f4a43338489bbd8491d093a3eb9b~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=2814&amp;h=1772&amp;e=png&amp;b=fefcfc" referrerpolicy="no-referrer"><img height="1772" src="https://oscimg.oschina.net/oscnet/up-040e32cdd6a5456d32d30323af6976b211b.png" width="2814" referrerpolicy="no-referrer"></p><p><strong>Github: <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdromara%2Fhertzbeat" target="_blank">https://github.com/dromara/hertzbeat</a></strong></p><p><strong>Gitee: <a href="https://gitee.com/dromara/hertzbeat">https://gitee.com/dromara/hertzbeat</a></strong></p><p>欢迎更多小伙伴参与到 HertzBeat 的开源协作中来，不管是一个错别字还是标点符号我们都非常欢迎，大家一起学习进步，目标做一个世界级开源软件。</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 17 Jan 2024 00:53:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/275975</guid>
            <link>https://www.oschina.net/news/275975</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
    </channel>
</rss>
