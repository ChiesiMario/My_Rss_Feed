<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[开源中国-综合资讯]]>
        </title>
        <link>https://www.oschina.net/news/industry</link>
        <atom:link href="https://rsshub.app/oschina/news/industry" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[开源中国-综合资讯 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Fri, 27 Oct 2023 08:30:57 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[推特年度工程总结，数据感人，什么代码减少 60 万行、节省 1 亿美元]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://www.oschina.net/event/2331193" _blank"="">OSC 请你来轰趴啦！1028 苏州源创会，一起寻宝 AI 时代<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p>推特官方帐号发布了<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftwitter.com%2FXEng%2Fstatus%2F1717754398410240018" target="_blank">一年的工程总结</a>，亮点数据包括：</p><ul><li><p><span style="color:#000000"><span style="background-color:#ffffff">彻底重构 For you 服务和排名系统，代码行数从 700K 减少到 70K，减少了 90%，计算占用量减少了 50%，帖子吞吐量增加了 80%。</span></span></p></li><li><p><span style="color:#000000"><span style="background-color:#ffffff">重构了技术栈的 API 中间件层，并简化了架构</span></span>，<span style="color:#000000"><span style="background-color:#ffffff">删除超过 10 万行代码和数千个未使用的内部端，消除未采用的客户端服务。</span></span></p></li><li><p><span style="color:#000000"><span style="background-color:#ffffff">关闭萨克拉门托数据中心并重新配置 5,200 个机架和 148,000 台服务器，每年节省超过 1 亿美元。</span></span></p></li><li><p><span style="color:#000000"><span style="background-color:#ffffff">元数据获取后延迟减少了 50%，全局 API 超时错误减少了 90%。</span></span></p></li><li><p><span style="color:#000000"><span style="background-color:#ffffff">优化了对云服务提供商的使用，在本地进行更多工作，每月云成本降低了 60%。具体是将所有媒体/blob 工件移出云，使得整体云数据存储大小减少了 60%。同时，云数据处理成本降低了 75%。</span></span></p></li><li><p><span style="color:#000000"><span style="background-color:#ffffff">构建本地 GPU 超级计算集群，并设计、开发和交付 43.2Tbps 的新网络结构架构以支持集群。 </span></span></p></li><li><p><span style="color:#000000"><span style="background-color:#ffffff">扩展网络主干容量和冗余，每年节省 1,390 万美元。 </span></span></p></li></ul><hr><p><img src="https://static.oschina.net/uploads/space/2023/1027/161455_YSrE_2720166.png" referrerpolicy="no-referrer"></p><hr><p><strong>推荐阅读</strong></p><ul><li><a href="https://www.oschina.net/news/231624/a-single-engineer-brought-down-twitter" target="_blank">一名工程师修改配置导致推特宕机，马斯克回应：要彻底重写这堆 "ShitCode"</a></li><li><a href="https://www.oschina.net/news/259436/elon-musk-moved-twitter-servers-himself" target="news">马斯克硬核迁移推特服务器</a></li><li><a href="https://www.oschina.net/news/247743/twitter-rate-limit" target="news">马斯克称 Twitter 数据被极端抓取，紧急上线「限流」机制</a></li><li><a href="https://www.oschina.net/news/228687/musk-twitter-recommend-algorithm" target="news">马斯克连夜命令推特工程师修改算法</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Fri, 27 Oct 2023 08:00:51 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/263723/x-engineering-report</guid>
            <link>https://www.oschina.net/news/263723/x-engineering-report</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[全新的分布式锁，功能简单且强大]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><div data-traceid="news_comment_top_ad" data-tracepid="news_comment_top" style="text-align: center;"><a style="color:#A00;font-weight:bold;" href="https://www.oschina.net/event/2331193" target="_blank">OSC 请你来轰趴啦！1028 苏州源创会，一起寻宝 AI 时代<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div></div><blockquote><p>来源：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftlnet.top%2Farticle%2F22425101" target="_blank">《全新的分布式锁，功能简单且强大》</a></p><p>前言：分布式锁是分布式系统中一个极为重要的工具。目前有多种分布式锁的设计方案，比如借助 redis，mq，数据库，zookeeper 等第三方服务系统来设计分布式锁。tldb 提供的分布式锁，主要是要简化这个设计的过程，提供一个简洁可靠，类似使用程序中对象锁的方式来获取分布式锁。</p></blockquote><p><strong>tldb 提供分布式锁使用方法：</strong></p><ol><li><p>lock 阻塞式请求锁</p></li><li><p>trylock 尝试加锁，若锁已被占用，则失败返回，反之，则获取该锁</p></li><li><p>unlock 释放已经获取的锁</p><p>tldb 提供的分布式锁功能主要在 MQ 模块中实现，调用的方法在 MQ 客户端实现，客户端的实现实际非常简单，除了目前已经实现的几种语言 java，golang，python，javaScript 写的 simpleClient，其实其他开发者有兴趣也可以实现其他语言的 MQ 客户端，完全没有技术门槛。分布式锁由 tldb 服务器控制，所以它相对客户端来说，也是跨语言的，如，用 java 客户端上锁的对象，其他语言同样无法获取该对象锁。</p></li></ol><hr><h4><strong>Lock(string,int) 方法的使用</strong></h4><p>tldb 提供的是以字符串为锁对象的独占锁， 如，lock("abc",3) 必须提供两个参数：</p><ol><li>第一个参数为锁对象，即服务器对「abc」对象分配一个锁，所有对"abc"对象请求加锁的线程争用一个独占锁，该方法为一个阻塞方法，请求到锁则返回，如果锁被其他线程占用，则一直阻塞直至获取到锁。</li><li>第二个参数为持有该分布式锁的最长时间，单位为秒，例如 lock("abc",3)，意思是，如果超过 3 秒还没有调用 unlock 释放该锁，服务器将强制释放该锁，继续将锁分配给其他请求的线程。</li></ol><hr><h4><strong>UnLock(string) 方法的使用</strong></h4><ul><li>UnLock 为释放分布式锁时调用的方法。客户端在成功获取分布式锁后，服务器会返回一个该锁的 key，客户端执行完逻辑代码的最后，必须显式调用 UnLock(key) 来释放该分布式锁。如果没有调用 unlock 释放锁，tldb 将等待锁释放的超时时间直至超时后强制释放该锁。</li></ul><hr><h4><strong>TryLock(string,int) 方法的使用</strong></h4><ul><li>trylock 与 lock 相似，但是 lock 方法阻塞的，调用 lock 方法请求分布式锁时，如果该锁已经被占用，那么 lock 方法将一直等待直至 tldb 服务器将锁分配给它，这与程序中获取独占锁的方式一致。而 trylock 时非阻塞的，调用 trylock 后会立即返回，如果获取到锁，tldb 会将标识该锁的 key 一并返回，如何该锁已经被占用，服务器将返回空数据。</li></ul><hr><p><strong>以下以 go 为例使用分布式锁</strong></p><p>因为 tldb 分布式的实现是在 MQ 模块，所以 go 程序必须使用 tlmq-go, tldb 的 mq 客户端进行调用锁方法。</p><pre><code>   import  "github.com/donnie4w/tlmq-go/cli"
</code></pre><p>调用 lock 的程序：lock 方法是阻塞的</p><pre><code>sc := cli.NewMqClient("ws://127.0.0.1:5001", "mymq=123")
sc.Connect()
//以上为，客户端连接 MQ 服务器
key, err := sc.Lock("testlock", 3)
//lock 中两个参数，第一个参数为字符串，即 tldb 服务器为「testlock」分配一个全局的分布式锁
//第二个参数 3 为客户端持有该锁的最长时间，表示超过 3 秒没有释放锁时，tldb 服务器将在服务端强制释放该锁，并分配给其他请求锁的线程
if err!=nil{
    //获取锁失败，需查看 tldb 能正常访问
}else{
    defer sc.UnLock(key) //获取锁成功后，必须在程序最后调用 Unlock
    //执行业务逻辑程序
}
</code></pre><p><strong>调用 tryLock 的程序，trylock 是非阻塞的</strong></p><pre><code>sc := cli.NewMqClient("ws://127.0.0.1:5001", "mymq=123")
sc.Connect()

if key, ok := sc.TryLock("testlock2", 3); ok {
    //ok 为 true，表示已经成功获取到分布式锁
    defer sc.UnLock(key) //在程序最后释放锁对象
    ...        
}
</code></pre><p><strong>go 用自旋的方式使用 trylock 获取分布式锁，实现程序的阻塞等待</strong></p><pre><code>sc := cli.NewMqClient("ws://127.0.0.1:5001", "mymq=123")
sc.Connect()
var key string
for {
if  v, ok := sc.TryLock("testlock", 3); ok {
    key = v
break
} else {
&lt;-time.After(100* time.Millisecond)
}
}
defer sc.UnLock(key)
...//业务逻辑代码
</code></pre><p>这段程序应该比较易于理解，就是每隔 100 毫秒，循环获取字符串「testlock」的分布式锁直至成功。</p><hr><p><strong>以下以 java 为例</strong> java 客户端为 tlmq-j ：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdonnie4w%2Ftlmq-j" target="_blank">https://github.com/donnie4w/tlmq-j</a></p><p>maven 配置</p><pre><code>&lt;dependency&gt;        
   &lt;groupId&gt;io.github.donnie4w&lt;/groupId&gt;      
   &lt;artifactId&gt;tlmq-j&lt;/artifactId&gt;     
   &lt;version&gt;0.0.2&lt;/version&gt;   
&lt;/dependency&gt;
</code></pre><p>调用 lock 方法</p><pre><code>MqClient mc = new SimpleClient("ws://127.0.0.1:5001", "mymq=123");
mc.connect();
//java 连接服务器
String key = null;
try{
      key = mc.lock("testlock", 3); //获取分布式
      ... //执行业务逻辑程序
}finally {
     if (key!=null){
         mc.unLock(key); //释放分布式锁
     }
}
</code></pre><p>调用 trylock 方法</p><pre><code>MqClient mc = new SimpleClient("ws://127.0.0.1:5001", "mymq=123");
mc.connect();
String key = null;
try{
      key = mc.tryLock("testlock", 3); //获取分布式
      ... //执行业务逻辑程序
} finally {
     if (key!=null){
         mc.unLock(key); //释放分布式锁
     }               
}
</code></pre><p><strong>以下是 tldb 分布式锁的功能测试数据：</strong><strong>多线程并发，调用 lock 获取同一个对象锁后，程序的运行数据：</strong></p><p><img src="https://oscimg.oschina.net/oscnet/up-09276d085e420b382074c69dade4cd6372b.jpg" alt="" referrerpolicy="no-referrer"></p><p><strong>多线程并发使用自旋的方式调用 trylock 与 lock 获取同一个对象锁：</strong><img src="https://oscimg.oschina.net/oscnet/up-cb14a249e167dfb0eca3c06850a6017f182.jpg" alt="" referrerpolicy="no-referrer"></p><hr><p><a href="https://www.oschina.net/action/GoToLink?url=mailto%3A%E6%9C%89%E4%BB%BB%E4%BD%95%E9%97%AE%E9%A2%98%E6%88%96%E5%BB%BA%E8%AE%AE%E8%AF%B7Email%EF%BC%9Adonnie4w%40gmail.com%E6%88%96" target="_blank">有任何问题或建议请 Email：donnie4w@gmail.com 或</a><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftlnet.top%2Fcontact" target="_blank">https://tlnet.top/contact</a> 发信给我，谢谢！</p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 27 Oct 2023 07:39:01 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/donnie4w/blog/10114233</guid>
            <link>https://my.oschina.net/donnie4w/blog/10114233</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[微软已拥有超过 100 万付费 Copilot 用户]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://www.oschina.net/event/2331193" _blank"="">OSC 请你来轰趴啦！1028 苏州源创会，一起寻宝 AI 时代<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p><span style="color:#000000">微软 CEO 萨提亚·纳德拉 (Satya Nadella) 日前透露，该公司 GitHub Copilot 软件的付费用户已超过 100 万。</span></p><p><span style="color:#000000">「借助 GitHub Copilot，我们将开发人员的工作效率提高了 55%，我们拥有超过 100 万付费 Copilot 用户。此外，已有超过 37,000 个组织订阅了 Copilot for Business，环比增长 40%。本季度，我们通过 GitHub Copilot Chat 添加了新功能，Shopify 等数字原生企业以及马士基和普华永道等领先企业已在使用这些功能，以提高其软件开发人员的生产力。」</span></p><p><img height="264" src="https://oscimg.oschina.net/oscnet/up-1fbc03d629d9cf27183ca8ebfb858414029.png" width="700" referrerpolicy="no-referrer"></p><p><span style="color:#000000">纳德拉表示，Copilot 是其在公司产品线中推广 AI 的众多方式之一。该公司的必应搜索引擎已经与 OpenAI 的 ChatGPT 集成，迄今为止用户参与的聊天数量已「超过 19 亿次」。</span></p><p><span style="color:#000000">他指出，Microsoft Edge 浏览器的市场份额现已连续 10 个季度增长。「本季度，我们推出了新的个性化答案以及对 DALL-E 3 的支持，帮助人们获得更相关的答案并创建极其逼真的图像。迄今为止，我们已创建了超过 18 亿张图像。借助 Copilot 在购物方面的应用，大家可以获取更多量身定制的推荐以及达成更好的交易。」</span></p><p><span style="color:#000000">目前，微软已经向初创公司 OpenAI 投资超过 100 亿美元；华尔街预计微软将从与 OpenAI 的合作中获得巨大的财务回报。一些华尔街分析师估计，这种合作关系有一天可能会给微软带来 1000 亿美元的价值。</span></p><p><span style="color:#000000">尽管纳德拉没有量化 GitHub Copilot 的收入，但微软 CFO Amy Hood 表示，「高于预期的 AI 消费推动了 Azure 的收入增长」。</span></p><p><span style="color:#000000">该公司智能云计算业务本季度的总收入超出了分析师的预期 (234 亿美元)，同比增长 19%，达到 243 亿美元。Hood 表示，其中 Azure 业务增长了 29%，有 3 个百分点来自「AI 服务」。</span></p><p><span style="color:#000000">此外，微软方面还将 Copilot 引入了 Power Platform，使任何人都可以使用自然语言来创建应用程序，构建虚拟代理和分析数据。纳德拉表示：「包括 3M、Equinor、Lumen Technologies、Nationwide、PG&amp;E 和丰田在内的超过 126,000 家组织都使用了 Copilot 和 Power Platform。」</span></p><p><span style="color:#000000">该公司还正在将生成式 AI 添加到其 LinkedIn 业务中。「我们发现本季度在 LinkedIn 上观看 AI 相关学习课程的会员数量增加了近 80%」。以及将 Copilot 扩展到医疗保健等各行各业。目前，该公司正在将临床工具集成到 Azure 上的 Fabric 数据服务中。</span></p><p><span style="color:#000000">纳德拉称，GitHub Copilot 和其他产品的推出还处于早期阶段。「我们正处于非常非常早期的阶段，因此我们期待看到这些产品在未来的发展。Copilot 的早期发展给了我们很大的信心，更重要的是，让我们的客户对这些产品所代表的价值充满了信心。」</span></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 27 Oct 2023 07:33:01 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/263710</guid>
            <link>https://www.oschina.net/news/263710</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[国家安全部：警惕一些境外 SDK 背后的「数据间谍」窃密]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://www.oschina.net/event/2331193" _blank"="">OSC 请你来轰趴啦！1028 苏州源创会，一起寻宝 AI 时代<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><blockquote><p>本文转载自 <u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2Fxq_0nAxzuZ4t0HLXLy8BEg" target="_blank"><strong>国家安全部微信公众号</strong></a></u></p></blockquote><p>你知道 SDK 是什么吗？SDK 是英文 Software Development Kit 的缩写，即软件开发工具包，它的类型多种多样。如果把开发一个软件系统比作盖一所「三室一厅」的房子，那么不同的 SDK 就是这套房子的「客厅」「卧室」「衞生间」「厨房」等功能模块。盖好这套房子，我们只需要从不同的供应商那里选择这个功能模块拼装即可，而不再需要从「砌砖」「垒墙」做起，从而极大提高了软件开发的效率。</p><p>近年来，国家安全机关工作发现，境外一些别有用心的组织和人员，正在通过 SDK 搜集我用户数据和个人信息，给我国家安全造成了一定风险隐患。</p><h4><span style="color:#ffffff"><strong><span style="background-color:#2980b9">SDK 带来哪些数据安全问题？</span></strong></span></h4><p>当前，SDK 以其多样化、易用性和灵活性等优势成为移动供应产业链中最重要的一项服务，与此同时也带来诸多数据安全问题。</p><ul><li><strong>过度收集用户数据</strong></li></ul><p>有些 SDK 会收集与提供服务无关的个人信息，或强制申请非必要的使用权限，比如获取地理位置、通话记录、相册照片等信息以及拍照、录音等功能。当 SDK 的用户覆盖量达到一定规模时，可以通过搜集的大量数据，对不同用户群体进行画像侧写，从而分析出潜在的有用信息，比如同事关系、单位位置、行为习惯等。</p><p>一些境外 SDK 服务商，通过向开发者提供免费服务，甚至向开发者付费等方式来获取数据。据相关网站披露，一款在美国拥有 5 万日活跃用户的应用程序，其开发者通过使用某 SDK，每月可以获得 1500 美元的收入。作为回报，该 SDK 服务商可以从这款应用程序中收集用户的位置数据。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-28cd143918cb6491c1493e0dcedaa1e2bd3.png" referrerpolicy="no-referrer"></p><p><em>SDK 搜集个人信息类型</em></p><ul><li><strong>境外情报机构将 SDK 作为搜集数据的重要渠道</strong></li></ul><p>据报道，美国特种作战司令部曾向美国 SDK 服务商 Anomaly Six 购置了「商业遥测数据源」的访问服务，而该服务商曾自称将 SDK 软件植入全球超过 500 款应用中，可以监控全球大约 30 亿部手机的位置信息。</p><p>2022 年 4 月，有关媒体曝光巴拿马一家公司通过向世界各地的应用程序开发人员付费的方式，将其 SDK 代码整合到应用程序中，秘密地从数百万台移动设备上收集数据，而该公司与为美国情报机构提供网络情报搜集等服务的国防承包商关系密切。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-b4bc6599b4e81d3e9a7883925c9f4c2c397.png" referrerpolicy="no-referrer"></p><p><em>《华尔街日报》：美国政府承包商在多个手机 APP 中嵌入跟踪软件</em></p><h4><span style="color:#ffffff"><strong><span style="background-color:#2980b9">消除 SDK 背后的数据风险</span></strong><strong><span style="background-color:#2980b9">我们应该怎么做？</span></strong></span></h4><p>据国内权威机构掌握，截至 2022 年 12 月，我国 10 万个头部应用中，共检测出 2.3 万余例样本使用境外 SDK，使用境外 SDK 应用的境内终端约有 3.8 亿台。对此，我们又应该做些什么呢？</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-85cdd9629fe616749844499bf44f168c4aa.png" referrerpolicy="no-referrer"></p><p><em>SDK 申请收集用户信息占比</em></p><ul><li><strong>应用程序开发企业</strong>：应尽量选择接入经过备案认证的 SDK，引入境外 SDK 前应做好安全检测和风险评估，深入了解 SDK 的隐私政策，并利用 SDK demo 以及 APP 测试环境对 SDK 声明内容进行一致性比对，并持续监测 SDK 是否有异常行为。</li><li><strong>个人用户</strong>：个人用户在使用手机应用程序时，要增强个人信息保护意识及安全使用技能，要选择安全可靠的渠道下载使用应用程序，不安装来路不明的应用，不盲目通过敏感权限的申请。特别是发现 SDK 申请与应用功能无关的权限时，需要保持高度警惕。</li></ul></div>
                                    ]]>
            </description>
            <pubDate>Fri, 27 Oct 2023 07:18:01 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/263704</guid>
            <link>https://www.oschina.net/news/263704</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[WxAutoExIm - 微信聊天图片自动备份工具]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><div data-traceid="project_detail_above_text_link_1" data-tracepid="project_detail_above_text_link"><a style="color:#A00; font-weight:bold;" href="https://www.oschina.net/event/2331193" target="_blank">OSC 请你来轰趴啦！1028 苏州源创会，一起寻宝 AI 时代 <img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div></div><p>WxAutoExIm 是一款免费开源微信聊天图片自动备份工具，自动备份微信聊天图片到指定位置，即开即用。该工具能够扫描 dat 加密图片并且解密，把微信微信图片自动备份为普通图片。</p><p>WxAutoExIm 使用 Rust 和 C++ 开发，工具开源、解密算法不开源。</p><p><strong>运行截图</strong></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-0f7f60097376c7df3344aacf35adaba6e2e.png" referrerpolicy="no-referrer"><img alt="" src="https://oscimg.oschina.net/oscnet/up-1f4f2464b4440e7cadd1f23e748210200cc.png" referrerpolicy="no-referrer"><img alt="" src="https://oscimg.oschina.net/oscnet/up-b544656edd46ba309b4ed2b8a8b1f2f7b8c.png" referrerpolicy="no-referrer"></p></div>
                                                                ]]>
            </description>
            <pubDate>Fri, 27 Oct 2023 03:16:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/p/wxautoexim</guid>
            <link>https://www.oschina.net/p/wxautoexim</link>
        </item>
        <item>
            <title>
                <![CDATA[OpenAI、谷歌微软等设立 1000 万美元 AI 安全基金]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://www.oschina.net/event/2331193" _blank"="">OSC 请你来轰趴啦！1028 苏州源创会，一起寻宝 AI 时代<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p><span style="color:#000000">谷歌、微软、OpenAI 和 Anthropic <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopenai.com%2Fblog%2Ffrontier-model-forum-updates" target="_blank">发布联合声明</a>，任命美国智库学会高管 Chris Meserole 为前沿模型论坛 (Frontier Model Forum) 首任执行董事。并宣布设立 1000 万美元的 AI 安全基金，「以推动正在进行的工具开发研究，帮助社会能够有效地测试和评估最有能力的 AI 模型。」</span></p><p><span style="color:#000000">前沿模型论坛由微软、OpenAI、谷歌和 Anthropic 在今年 7 月联合创立而成，是一个专注于确保安全和负责任地开发前沿人工智能模型的行业机构。该论坛旨在帮助：</span></p><ul><li><span style="color:#000000">推动人工智能安全研究，促进负责任地开发前沿模型并最大限度地降低潜在风险；</span></li><li><span style="color:#000000">确定前沿模型的安全最佳实践；</span></li><li><span style="color:#000000">与政策制定者、学术界、民间社会和其他方面分享知识，推动负责任的人工智能发展；</span></li><li><span style="color:#000000">以及<span style="background-color:#ffffff">大力支持开发有助于应对社会挑战的 AI 应用程序</span>。</span></li></ul><p><img height="243" src="https://oscimg.oschina.net/oscnet/up-08b8848cddef1c10504a853bad39c129725.png" width="700" referrerpolicy="no-referrer"></p><p><span style="color:#000000">公告指出，AI 安全基金<span style="background-color:#ffffff">将支持来自世界各地附属于学术机构、研究机构和初创公司的独立研究人员。初始资金来自 Anthropic、谷歌、微软和 OpenAI，以及其他慈善合作伙伴。</span></span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000"><span style="background-color:#ffffff">基金的主要重点将在于，</span><span style="background-color:#ffffff">支持开发新的模型评估技术，以帮助开发和测试前沿系统潜在危险能力的评估技术。「我们相信，增加该领域的资金将有助于提高安全标准，并为行业、政府和民间社会应对 AI 系统带来的挑战所需的缓解和控制提供见解。&nbsp;」</span></span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000"><span style="background-color:#ffffff">该基金将在未来几个月内征集提案。</span>前沿模型论坛还计划<span style="background-color:#ffffff">成立一个顾问委员会，以帮助指导其战略和优先事项。</span></span></p><hr><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000"><span style="background-color:#ffffff">1000 万美元不算小数目，但在 AI 安全研究的背景下以及与前沿模式论坛成员在商业活动上的花费相比，这一数目就「显得相当保守了」。科技媒体&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftechcrunch.com%2F2023%2F10%2F25%2Fai-titans-throw-a-tiny-bone-to-ai-safety-researchers%2F" target="_blank">TechCrunch</a> 指出，仅今年一年，Anthropic 就从亚马逊筹集了数十亿美元，用于开发下一代 AI 助手，此前谷歌也向其投资了 300 美元。</span></span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000">且与其他 AI 安全基金相比，该基金的规模也很小。根据博客 Less Wrong 的</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.lesswrong.com%2Fposts%2FWGpFFJo2uFe5ssgEb%2Fan-overview-of-the-ai-safety-funding-situation" target="_blank">分析</a><span style="color:#000000">，由 Facebook 创始人 (Dustin Moskovitz 联合创办的资助和研究基金会 Open Philanthropy 已为 AI 安全捐赠了约 3.07 亿美元。</span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000">公益公司「The Survival and Flourishing Fund」也已向 AI 安全项目捐赠了约 3000 万美元。美国国家科学基金会表示，未来两年将斥资 2000 万美元用于 AI 安全研究，部分资金由 Open Philanthropy 资助。</span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000">「</span><span style="color:#000000">前沿模型论坛暗示下一步将成立一个规模更大的基金。如果这一目标实现，它可能有机会推动 AI 安全研究 —— 前提是我们相信该基金的明确营利性支持者不会对研究施加不当影响。但无论你如何划分，<strong>首批资金似乎都过于有限，无法取得多大成就。</strong></span><span style="color:#000000">」</span></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 26 Oct 2023 08:40:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/263552/frontier-model-forum-ai-safety</guid>
            <link>https://www.oschina.net/news/263552/frontier-model-forum-ai-safety</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[腾讯混元大模型正式开放「文生图」功能、代码能力提升 20%]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://www.oschina.net/event/2331193" _blank"="">OSC 请你来轰趴啦！1028 苏州源创会，一起寻宝 AI 时代<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p><span style="background-color:#ffffff; color:rgba(0, 0, 0, 0.75)">今天上午，腾讯混元大模型迎来全新升级，<strong>并正式对外开放「文生图」功能</strong>。</span></p><blockquote><p><img src="https://static.oschina.net/uploads/space/2023/1026/153337_LfTH_2720166.jpg" referrerpolicy="no-referrer"></p></blockquote><p>进入「腾讯混元助手」小程序即可使用腾讯混元大模型：</p><p><img height="754" src="https://static.oschina.net/uploads/space/2023/1026/165557_Bc0Q_2720166.png" width="400" referrerpolicy="no-referrer"></p><p><span style="background-color:#ffffff; color:rgba(0, 0, 0, 0.75)"><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2Fu0AGtpwm_LmgnDY7OQhKGg" target="_blank">官方公告称</a></u>，升级后的腾讯混元中文效果整体超过 GPT-3.5，<strong>代码能力大幅提升 20%</strong>，达到业界领先水平。</span></p><p>据介绍，经过对 32 种主流语言代码文件、各类计算机书籍和博客的学习增训，腾讯混元代码处理水平提升超过 20%，代码处理效果胜出 ChatGPT 6.34%，在 HumanEval 公开测试集指标上全面超过 Starcoder、Codellama 等业界头部开源代码大模型。</p><p>只需输入简单的指令如「帮我用前端语言实现一个贪吃蛇」，腾讯混元便能自动生成可运行的代码，快速制作出一个贪吃蛇小游戏。此外，腾讯混元还支持 Python、C++、Java、JavaScript 等多种语言的指令生成，比如输入「用 Python 画红色的心形线」，腾讯混元会提供代码库选择、安装命令、绘制代码等具体操作步骤的指引。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-74216bf9be5ab9c4baadcbe9551410b8953.png" referrerpolicy="no-referrer"></p><p>对于大模型文生图功能，腾讯称其难点体现在<strong>对提示词的语义理解，生成内容的合理性以及生成图片的效果</strong>。针对这三个技术难点，腾讯进行了专项的技术研究，提出了一系列原创算法，来保证生成图片的可用性和画质。</p><p>1、<strong>在语义理解方面，腾讯混元采用了中英文双语细粒度的模型</strong>，模型同时建模中英文实现双语理解，而不是通过翻译，通过优化算法提升了模型对细节的感知能力与生成效果，有效避免多文化差异下的理解错误。</p><p>2、<strong>在内容合理性方面</strong>，AI 生成人体结构和手部经常容易变形。<strong>混元文生图通过增强算法模型的图像二维空间位置感知能力</strong>，并讲人体骨架和人手结构等先验信息引入到生成过程中，让生成的图像结构更合理，减少错误率。</p><p>3、<strong>在画面质感方面，混元文生图基于多模型融合的方法，提升生成质感</strong>。经过模型算法的优化之后，混元文生图的人像模型，包含发丝、皱纹等细节的效果提升了 30%，场景模型，包含草木、波纹等细节的效果提升了 25%。</p><hr><p>下面是官方提供的「腾讯混元文生图」使用案例。</p><ul><li>生成一幅照片：亚洲女子，魅力，中短发，戴墨镜，站在长城上，背景有红叶</li></ul><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-68d0953d2980101a5d24fe95c964a701946.png" referrerpolicy="no-referrer"></p><ul><li>生成一张长城的照片，摄影风，真实感</li></ul><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-3d745e8069507f0664da26f405ccddc4bc5.png" referrerpolicy="no-referrer"></p><ul><li>帮我画一个拿着奶茶的甄嬛，扁平插画，可爱 Q 版</li></ul><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-b61d22330c53d477f4669f355753becd266.png" referrerpolicy="no-referrer"></p><ul><li>生成 3D 游戏军事场景动漫，城市战区，废墟瓦砾，焦黑的建筑，空气中弥漫硝烟</li></ul><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-f900d701ddb927a9b2fdb40caa870f9d736.png" referrerpolicy="no-referrer"></p><ul><li>画一幅渔舟唱晚的画</li></ul><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-58f36165a591c6630cd605fb7afb63f5e47.png" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 26 Oct 2023 07:46:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/263543</guid>
            <link>https://www.oschina.net/news/263543</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[《2023 年三季度互联网投融资运行情况》研究报告发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://www.oschina.net/event/2331193" _blank"="">OSC 请你来轰趴啦！1028 苏州源创会，一起寻宝 AI 时代<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p><span style="background-color:#ffffff; color:rgba(0, 0, 0, 0.9)">中国信息通信研究院政策与经济研究所互联网运行分析团队于日前，<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FxZbTT8DZ0Q79-2RGTXhFbg" target="_blank">发布</a>了《2023 年三季度互联网投融资运行情况》报告。</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify">报告构建了互联网行业投融资研究框架，借助 CB Insights 数据库，深入挖掘我国和全球行业投融资整体态势及重点领域情况，为行业趋势预测、热点问题预判提供重要参考。</p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify">本季要点：</p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><strong>1.&nbsp;</strong><strong>我国互联网投融资略有反弹。</strong>2023Q3，我国互联网投融资规模企稳，案例数环比下跌 5.8%，同比下跌 54%；披露的金额环比上涨 34.7%，同比下跌 36.4%。</p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><strong>2.<span>&nbsp;</span></strong><strong>全球互联网投融资继续下探。</strong>2023Q3，全球互联网投融资案例数环比下跌 5.1%，同比下跌 23.4%；披露的金额环比下跌 15.5%，同比下跌 28.8%。</p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span><strong>3.</strong><strong>企业服务融资占比保持领先。</strong>2023Q3，我国企业服务领域融资案例数占比 25.7%，融资金额占比 26%；全球企业服务领域融资案例数占比 21.3%，融资金额占比 19.8%。</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span>报告全文：</span></p><p><img height="3587" src="https://oscimg.oschina.net/oscnet/up-ee666d0691d7989a2ff66c9cfbe80f422d2.png" width="500" referrerpolicy="no-referrer"></p><p><img height="2012" src="https://oscimg.oschina.net/oscnet/up-2d7d99c36f9f1ebf6569235631c9a3771cd.png" width="500" referrerpolicy="no-referrer"></p><p><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.caict.ac.cn%2Fkxyj%2Fqwfb%2Fqwsj%2F202310%2FP020231027488865727077.pdf" target="_blank">报告全文下载</a>。</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 26 Oct 2023 06:36:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/263690</guid>
            <link>https://www.oschina.net/news/263690</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Ubuntu 24.04 发布日期定为 2024 年 4 月 25 日]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://www.oschina.net/event/2331193" _blank"="">OSC 请你来轰趴啦！1028 苏州源创会，一起寻宝 AI 时代<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p><span style="color:#000000">Ubuntu 的下一个长期支持 (LTS) 版本 Ubuntu 24.04 的最终发布日期已<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flaunchpad.net%2Fubuntu%2Fnoble" target="_blank">确定</a>，计划于 2024 年 4 月 25 日发布。</span></p><p><span style="color:#000000">除此之外，Ubuntu 24.04 的功能冻结阶段定于 2024 年 2 月 29 日；Ubuntu 24.04 beta 计划于 2024 年 4 月 4 日发布。</span></p><p><span style="color:#000000">目前尚未知晓 Ubuntu 24.04 版本的具体代号，<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.omgubuntu.co.uk%2F2023%2F10%2Fubuntu-24-04-release-date-set-for-april-25-2024" target="_blank">OMG! Ubuntu</a> 认为，其可能会在 11 月初于拉脱维亚里加举行的 2023 年 Ubuntu 峰会上正式宣布。但已知的是，其代号的前半部分为「Noble」。</span></p><p><img height="303" src="https://oscimg.oschina.net/oscnet/up-3ba65917ba444a9427e968bdf7618fbc210.png" width="700" referrerpolicy="no-referrer"></p><p><span style="color:#000000">Ubuntu 的 LTS 版本将获得 5 年的安全更新、错误修复和精选应用程序更新。Ubuntu Pro 则会在此基础上额外增加 5 年的安全保障，为现代的 LTS 版本提供了长达十年的支持。</span></p><p><span style="color:#000000">Ubuntu 24.04 将是 Ubuntu 自 2006 年以来的第 10 个 LTS 版本，不过迄今为止对 Ubuntu 24.04 中将包含的新功能和改进知之甚少。但 Noble 大概率会采用 GNOME 46，并且会提供一个新的 Linux 内核。此外，我们还将看到首个正式发布的全 Snap 不可变 Ubuntu 桌面镜像。</span></p><p><span style="color:#000000">有关 Ubuntu 24.04 LTS 的更多信息，可关注未来几个月的后续更新。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 26 Oct 2023 06:25:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/263525/ubuntu-24-04-release-date-april-25-2024</guid>
            <link>https://www.oschina.net/news/263525/ubuntu-24-04-release-date-april-25-2024</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Windows CE 彻底退役]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://www.oschina.net/event/2331193" _blank"="">OSC 请你来轰趴啦！1028 苏州源创会，一起寻宝 AI 时代<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p>诞生于 1996 年的 Windows 嵌入式操作系统 —— Windows CE (Windows Embedded Compact) 本月迎来了它的生命周期终点。</p><p>Windows CE 最初是 Windows 的精简版本，之后逐渐发展成为全新的操作系统，它有自己的 CE 内核，而不是传统 Windows 操作系统使用的 NT 内核。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-8f640a89f188c88148ea17ea44e6c74b915.png" referrerpolicy="no-referrer"></p><p>它的最后一个版本是 2013 年 8 月 11 日发布的 Windows Embedded Compact 2013（或者叫 Windows CE 8.0），该版本于 2018 年 10 月结束主流支持 (Mainstream Support)，<strong>2023 年 10 月结束延长支持 (Extended Support)</strong>，成为不受支持的退役产品。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-bea6f86fc521c769ddd160731ae640284b0.png" referrerpolicy="no-referrer"></p><p>然而很少有人注意到 Windows CE 的生命周期已结束。作为一个产品，CE 8.0 的发布未能获得太多关注或宣传。即使在 Windows CE 社区中，大多数人也认为 Windows Embedded Compact 2013 完全不适合使用。与之前的 Windows CE 7.0 一样，基于 CE 8.0 平台发布的设备很少，因此大多数人甚至从未见过 CE 8 的实体设备。</p><p>CE 8 唯一值得注意的特性是首次加入了 IPv6 支持，但更重要的是删除了默认示例用户界面，它规定任何 OEM 都必须发布带有完全自定义编码界面的设备，然而很少有供应商愿意这样做，此举事实上真正结束了廉价 Windows CE 上网本设备的时代。</p><blockquote><p>事实上微软并未介绍过 CE 缩写的由来，一般解释则有 Compact Edition、Customer Embedded、Consumer Electronics 等等。</p><p>在 2008 年 4 月 15 日举行的嵌入式系统大会上，微软宣布将 Windows CE 更名为 Windows Embedded Compact，与 Windows Embedded Enterprise、Windows Embedded Standard 和 Windows Embedded POSReady 组成 Windows Embedded 系列产品。</p></blockquote><p>===彩蛋分割线===</p><p>曾被称为「国产机皇」的魅族 M8，其运行的操作系统正是基于 Windows CE 开发。</p><p><img alt="" height="533" src="https://oscimg.oschina.net/oscnet/up-786c41866ad15ca06fc5d0a683e8366c459.png" width="400" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 26 Oct 2023 06:22:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/263685/end-of-an-era-windows-ces-final-day</guid>
            <link>https://www.oschina.net/news/263685/end-of-an-era-windows-ces-final-day</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Bytebase 2.10.0 - 支持更灵活的变更发布人]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><div data-traceid="news_comment_top_ad" data-tracepid="news_comment_top" style="text-align: center;"><a style="color:#A00;font-weight:bold;" href="https://www.oschina.net/event/2331193" target="_blank">OSC 请你来轰趴啦！1028 苏州源创会，一起寻宝 AI 时代<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div></div><h2>🚀 新功能</h2><ul><li>发布策略支持制定更灵活的变更发布人：可以指定任意角色集合，也可以指定自定义审批流的最后一个审批人。</li></ul><p><img src="https://oscimg.oschina.net/oscnet/up-232e6912ae4dfccc575951fdcfb6182eaae.png" alt="file" referrerpolicy="no-referrer"></p><ul><li>支持在项目中创建分支保护规则。</li><li>支持给数据库设置标签。</li><li>支持给字段设置标签。</li><li>支持给表设置分类分级。</li></ul><h2>🎄 改进</h2><ul><li><p>支持 PostgreSQL 16。</p></li><li><p>SQL Editor：支持自定义数据库树的视图。</p></li></ul><p><img src="https://oscimg.oschina.net/oscnet/up-07ab1d1c2b98175941d8e28433fe617b896.png" alt="file" referrerpolicy="no-referrer"></p><ul><li>SQL Editor：允许提前终止查询。</li></ul><p><img src="https://oscimg.oschina.net/oscnet/up-80f111990561ce0c665fe4cce51db4fcb3a.png" alt="file" referrerpolicy="no-referrer"></p><ul><li>支持从指定分支中创建子分支。</li><li>支持在分支合并时选择其他目标分支。</li><li>支持在工单中使用 SQL Server 局部变量。</li><li>基于 Parser 为 Postgres, MySQL, Oracle, SQL Server, Snowflake 查询语句增加 LIMIT 子句。</li><li>表详情页展示「类型」的最大长度（如有）。</li></ul><h2>🐞 Bug 修复</h2><ul><li>修复分支和变更 Schema 中的列默认值问题。</li></ul><h2>📕 安装及升级</h2><p>参考<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fbytebase%2Fbytebase%23installation" target="_blank">升级指南</a>。如果从之前版本升级，获取新版本后，重新启动升级即可。</p><hr><p>💡 更多资讯，请关注 Bytebase 公号：Bytebase</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 26 Oct 2023 06:21:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/6148470/blog/10136864</guid>
            <link>https://my.oschina.net/u/6148470/blog/10136864</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[每日一博 | POSIX 真的不适合对象存储吗？]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><div data-traceid="news_comment_top_ad" data-tracepid="news_comment_top" style="text-align: center;"><a style="color:#A00;font-weight:bold;" href="https://www.oschina.net/event/2331193" target="_blank">OSC 请你来轰趴啦！1028 苏州源创会，一起寻宝 AI 时代<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div></div><p>最近，留意到 MinIO 官方博客的一篇题为「<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.min.io%2Ffilesystem-on-object-store-is-a-bad-idea%2F" target="_blank">在对象存储上实现 POSIX 访问接口是坏主意</a>」的文章，作者以 S3FS-FUSE 为例分享了通过 POSIX 方式访问 MinIO 中的数据时碰到了性能方面的困难，性能远不如直接访问 MinIO。在对结果进行分析时，作者认为是 POSIX 本身存在的缺陷导致的性能问题。这个结论与我们既有经验有一定出入。</p><p>我们知道 POSIX 是一个有用而且广泛应用的标准，遵循它而开发的程序可以保证不同操作系统之间的兼容性和可移植性。各行各业中常用的业务系统和应用程序，大多遵循 POSIX 标准。</p><p>随着云计算、大数据、人工智能等技术的发展和数据存储量的攀升，本地化应用也逐渐产生对对象存储等弹性存储的需求，MinIO 等对象存储虽然提供了各种语言的 SDK，但许多传统应用很难甚至无法修改代码去适配对象存储的访问接口，这促使很多存储产品在对象存储的基础上去实现 POSIX 接口来满足这样的刚性需求。</p><p>业内在对象存储上实现 POSIX 接口的产品有很多，比如 Ceph、JuiceFS、Weka 等，它们都有广泛的用户群和大量的成功案例，在性能方面也都有不错的表现。</p><p>诚然，我们认可 POSIX 存在较大的复杂性，需要付出很大的努力才能解决好相关的问题，但这些问题并不是无法解决。抱着尊重和求证的态度，我搭建了测试环境，采用相同的样本和测试方法，进行了一番验证。</p><h2>测试项目</h2><p>为了得到更为全面的测试结果，我将 JuiceFS 引入了对比。</p><p>JuiceFS 是开源的云原生分布式文件系统，它采用对象存储作为数据存储层，采用独立的数据库存储元数据。提供了包括 POSIX API、S3 API、CSI Driver、HDFS API、WebDAV 在内的多种访问方式，具有独特的数据分块、缓存和并发读写机制。JuiceFS 是文件系统，与 s3fs-fuse 等只提供简单的从对象存储到 POSIX 协议转换的工具有着本质的不同。</p><p>通过将 JuiceFS 引入对比，可以更为客观地求证以对象存储为底层实现 POSIX 等协议的利弊。</p><p>在本文中，我会对 MinIO、JuiceFS 和 s3fs-fuse 进行以下两项测试：</p><ol><li><p>10GB 大文件的写入测试</p></li><li><p>Pandas 小文件覆盖写测试</p></li></ol><p>在底层存储方面，它们均使用部署在独立服务器上的 MinIO 实例；在测试样本方面，10GB 文件会采用那篇文章中使用的 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdata.cityofnewyork.us%2Fapi%2Fviews%2Ft29m-gskq%2Frows.csv%3FaccessType%3DDOWNLOAD" target="_blank">csv</a> 文件。</p><blockquote><p>本文所提及的环境、软件、脚本、样本数据等均提供完整的代码和说明，确保读者可以复现环境和测试结果。</p></blockquote><h2>服务器及测试环境准备</h2><p>两台配置相同的云服务器：</p><ul><li>System: Ubuntu 22.04 x64</li><li>CPU: 8 cores</li><li>RAM: 16GB</li><li>SSD: 500GB</li><li>Network: VPC</li></ul><p>每台服务器的信息如下：</p><table><thead><tr><th align="left">Server</th><th>IP</th><th>For</th></tr></thead><tbody><tr><td align="left">Server A</td><td>172.16.254.18</td><td>MinIO Instance</td></tr><tr><td align="left">Server B</td><td>172.16.254.19</td><td>Test Environment</td></tr></tbody></table><h3>Server A 的准备工作</h3><p>1.我在 Server A 上通过 Docker 部署了 MinIO，命令如下：</p><pre><code class="language-bash"># 创建并进入专用目录
mkdir minio &amp;&amp; cd minio

# 创建配置文件
mkdir config
touch config/minio
</code></pre><p><code>config/minio</code> 文件中写入以下信息：</p><pre><code class="language-bash">MINIO_ROOT_USER=admin
MINIO_ROOT_PASSWORD=abc123abc
MINIO_VOLUMES="/mnt/data"
</code></pre><p>2.创建 MinIO 容器：</p><pre><code class="language-bahs">sudo docker run -d --name minio \
  -p 9000:9000 \
  -p 9090:9090 \
  -v /mnt/minio-data:/mnt/data \
  -v ./config/minio:/etc/config.env \
  -e "MINIO_CONFIG_ENV_FILE=/etc/config.env" \
  --restart unless-stopped \
  minio/minio server --console-address ":9090"
</code></pre><p>3.在 MinIO 的 Web Console 中预先创建三个 buckets：</p><table><thead><tr><th align="left">Bucket Name</th><th align="left">目的</th></tr></thead><tbody><tr><td align="left">test-minio</td><td align="left">用于测试 MinIO</td></tr><tr><td align="left">test-juicefs</td><td align="left">用于测试 JuiceFS</td></tr><tr><td align="left">test-s3fs</td><td align="left">用于测试 s3fs-fuse</td></tr></tbody></table><h3>Server B 的准备工作</h3><p>下载 10GB 测试样本文件</p><pre><code class="language-bash">curl -LO https://data.cityofnewyork.us/api/views/t29m-gskq/rows.csv?accessType=DOWNLOAD
</code></pre><p>2.安装 mc 客户端</p><p>mc 是 MinIO 项目开发的命令行文件管理器，可以在 Linux 命令行读写本地以及 S3 兼容的对象存储。mc 的 cp 命令可以实时显示数据拷贝的进度和速度，便于观察各项测试。</p><blockquote><p>注：为了保持测试的公平性，三种方案均采用 mc 进行写测试。</p></blockquote><pre><code class="language-bash"># 下载 mc
wget https://dl.min.io/client/mc/release/linux-amd64/mc

# 检查版本
mc -v
mc version RELEASE.2023-09-20T15-22-31Z (commit-id=38b8665e9e8649f98e6162bdb5163172e6ecc187)
Runtime: go1.21.1 linux/amd64

# 安装 mc
sudo install mc /usr/bin

# 为 MinIO 添加别名
mc alias set my http://172.16.254.18:9000 admin abc123abc
</code></pre><p>3.安装 s3fs-fuse</p><pre><code class="language-bash">sudo apt install s3fs

# 检查版本
s3fs --version
Amazon Simple Storage Service File System V1.93 (commit:unknown) with OpenSSL

# 设置对象存储访问密钥
echo admin:abc123abc &gt;  ~/.passwd-s3fs

# 修改密钥文件权限
chmod 600  ~/.passwd-s3fs

# 创建挂载目录
mkdir mnt-s3fs

# 挂载对象存储
s3fs test-s3fs:/ /root/mnt-s3fs -o url=http://172.16.254.18:9000 -o use_path_request_style
</code></pre><p>4.安装 JuiceFS</p><p>这里使用官方提供的脚本安装最新的 JuiceFS 社区版</p><pre><code class="language-bash"># 一键安装脚本
curl -sSL https://d.juicefs.com/install | sh -

# 检查版本
juicefs version
juicefs version 1.1.0+2023-09-04.08c4ae6
</code></pre><p>JuiceFS 是文件系统，需要先创建才能使用。除了对象存储，还需要一个数据库作为元数据引擎，支持多种数据库，这里使用较常用的 Redis 作为元数据引擎。</p><blockquote><p>注：我在这里将 Redis 安装在 Server A，通过 172.16.254.18:6379 进行访问，无密码，安装过程略，详情参考 Redis 官方文档。</p></blockquote><pre><code class="language-bash"># 创建文件系统
juicefs format --storage minio \
--bucket http://172.16.254.18:9000/test-juicefs \
--access-key admin \
--secret-key abc123abc \
--trash-days 0 \
redis://172.16.254.18/1 \
myjfs
</code></pre><p>5.另外，我会同时以较为常用的 POSIX 和 S3 API 两种方式访问 JuiceFS 并分别测试它们的性能。</p><pre><code class="language-bash"># 创建挂载目录
mkdir ~/mnt-juicefs

# 以 POSIX 方式挂载文件系统
juicefs mount redis://172.16.254.18/1 /root/mnt-juicefs

# 以 S3 API 方式访问文件系统
export MINIO_ROOT_USER=admin
export MINIO_ROOT_PASSWORD=abc123abc
juicefs gateway redis://172.16.254.18/1 0.0.0.0:9000

# 在 mc 中为 JuiceFS S3 API 添加别名
mc alias set juicefs http://172.16.254.18:9000 admin abc123abc
</code></pre><blockquote><p>注：JuiceFS Gateway 也可以部署在 Server A 或其他任何可联网服务器上，因为它开放的是基于网络访问的 S3 API。</p></blockquote><h2>测试及结果</h2><h3>测试一：10GB 文件写入测试</h3><p>这项测试用来评估写大文件的性能，耗时越短性能越好。这里会使用 time 命令统计写入耗时，结果会包含三个指标：</p><ul><li><p><strong>real</strong>：从命令开始到结束的实际时间。它包括了所有的等待时间，例如等待 I/O 操作完成、等待进程切换、等待资源等。</p></li><li><p><strong>user</strong>：在用户态（用户模式）执行的时间，也就是 CPU 用于执行用户代码的时间。它通常表示命令的计算工作量。</p></li><li><p><strong>sys</strong>：在内核态（系统模式）执行的时间，也就是 CPU 用于执行内核代码的时间。它通常表示命令与系统调用（如文件 I/O、进程管理等）相关的工作量。</p></li></ul><h4>MinIO</h4><pre><code class="language-bash"># 执行拷贝测试
time mc cp ./2018_Yellow_Taxi_Trip_Data.csv  my/test-minio/
</code></pre><p>MinIO 直写 10 GB 文件的测试结果：</p><pre><code class="language-bahs">
real 0m27.651s
user 0m10.767s
sys 0m5.439s
</code></pre><h4>s3fs-fuse</h4><pre><code class="language-bash"># 执行拷贝测试
time mc cp ./2018_Yellow_Taxi_Trip_Data.csv /root/mnt-s3fs/
</code></pre><p>s3fs-fuse 写 10 GB 文件的测试结果：</p><pre><code class="language-bash">
real 3m6.380s
user 0m0.012s
sys 0m5.459s
</code></pre><blockquote><p>注：虽然写入耗时 3 分零 6 秒，但并没有出现那篇文章所谓写入失败的情况。</p></blockquote><h4>JuiceFS POSIX 和 S3 API</h4><p>分别测试 JuiceFS 的 POSIX 和 S3 API 的大文件写性能：</p><pre><code class="language-bash"># POSIX 写测试
time mc cp ./2018_Yellow_Taxi_Trip_Data.csv /root/mnt-juicefs/

# S3 API 写测试
time mc cp ./2018_Yellow_Taxi_Trip_Data.csv  juicefs/myjfs/

</code></pre><p>JuiceFS POSIX 写 10 GB 文件的测试结果：</p><pre><code class="language-bash">
real 0m28.107s
user 0m0.292s
sys 0m6.930s
</code></pre><p>JuiceFS S3 API 写 10GB 文件的测试结果：</p><pre><code class="language-bash">real 0m28.091s
user 0m13.643s
sys 0m4.142s
</code></pre><h4>大文件写结果总结</h4><p><img src="https://oscimg.oschina.net/oscnet/up-173c5df31eb67e8ef11190f6d753f102a5e.png" alt="" referrerpolicy="no-referrer"></p><p>从测试结果来看，直接写 MinIO 和 JuiceFS 的性能相当，均可在 30s 内完成，而 s3fs-fuse 写入 10GB 文件耗时 3 分钟以上，平均比前两者慢了 6 倍左右。</p><p>在写入大文件时，mc 会使用 Multipart API 来将文件分块上传到 S3 接口，而只能单线程写入到 POSIX。JuiceFS 在大文件的顺序写也会自动将文件分块并并发写入到 MinIO 中，因此与直接写 MinIO 性能相当。而 S3FS 默认先是单线程写入到缓存盘，然后再分块写入到 MinIO 中，这会耗费更多写入时间。</p><p>按照写 10GB 文件耗时 30 秒计算，平均速度为 333 MB/s，这是云服务器 SSD 的带宽限制，测试结果表明，MinIO 和 JuiceFS 都能打满本地 SSD 的带宽，它们的性能会随着服务器云盘和网络带宽的提升而提升。</p><h3>测试二：Pandas 小文件覆盖写</h3><p>这项测试主要用来评估对象存储在小文件覆盖写方面的性能，各个软件的测试脚本略有不同，你可以在<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgist.github.com%2Fyuhr123%2F7acb7e6bb42fb0ff12f3ba64d2cdd7da" target="_blank">这里</a>找到所有脚本代码。</p><pre><code class="language-bash">
# 获取测试脚本
curl -LO https://gist.githubusercontent.com/yuhr123/7acb7e6bb42fb0ff12f3ba64d2cdd7da/raw/30c748e20b56dec642a58f9cccd7ea6e213dab3c/pandas-minio.py

# 执行测试
python3 pandas-minio.py
</code></pre><p>测试结果：</p><pre><code class="language-bash">
Execution time: 0.83 seconds
</code></pre><h4>s3fs-fuse</h4><pre><code class="language-bash">
# 获取测试脚本
curl -LO gist.githubusercontent.com/yuhr123/7acb7e6bb42fb0ff12f3ba64d2cdd7da/raw/30c748e20b56dec642a58f9cccd7ea6e213dab3c/pandas-s3fs.py

# 执行测试
python3 pandas-s3fs.py
</code></pre><p>测试结果：</p><pre><code class="language-bash">Execution time: 0.78 seconds
</code></pre><h4>JuiceFS POSIX</h4><pre><code class="language-bash"># 获取测试脚本
curl -LO gist.githubusercontent.com/yuhr123/7acb7e6bb42fb0ff12f3ba64d2cdd7da/raw/30c748e20b56dec642a58f9cccd7ea6e213dab3c/pandas-juicefs-posix.py

# 执行测试
python3 pandas-juicefs-posix.py
</code></pre><p>测试结果：</p><pre><code class="language-bash">Execution time: 0.43 seconds
</code></pre><h4>JuiceFS S3 API</h4><pre><code class="language-bash"># 获取测试脚本
curl -LO https://gist.githubusercontent.com/yuhr123/7acb7e6bb42fb0ff12f3ba64d2cdd7da/raw/30c748e20b56dec642a58f9cccd7ea6e213dab3c/pandas-juicefs-s3api.py

# 执行测试
python3 pandas-juicefs-s3api.py
</code></pre><p>测试结果：</p><pre><code class="language-bash">Execution time: 0.86 seconds
</code></pre><h4>Pandas 小文件覆盖写结果总结</h4><p><img src="https://oscimg.oschina.net/oscnet/up-5b3aa52d25367600d2ed77d28758cccf647.png" alt="" referrerpolicy="no-referrer"></p><p>在这项测试中，JuiceFS FUSE-POSIX 的速度最快，几乎是其他方案的 2 倍。MinIO、s3fs-fuse、JuiceFS S3 Gateway 的速度相当。从小文件覆盖写的角度来看，POSIX 接口效率更高，比对象存储接口有更好的性能表现。</p><h3>测试结果</h3><table><thead><tr><th align="left"></th><th align="right">MinIO</th><th align="right">S3FS-FUSE</th><th align="right">JuiceFS (FUSE)</th><th align="right">JuiceFS (s3 gateway)</th></tr></thead><tbody><tr><td align="left">10GB 大文件写</td><td align="right">0m27.651s</td><td align="right">3m6.380s</td><td align="right">0m28.107s</td><td align="right">0m28.091s</td></tr><tr><td align="left">Pandas 小文件覆盖写</td><td align="right">0.83s</td><td align="right">0.78s</td><td align="right">0.46s</td><td align="right">0.96s</td></tr></tbody></table><h2>分析和总结</h2><p><strong>问题一：S3FS 为什么这么慢？</strong></p><p>从测试数据可以清楚地看到，写入同样的 10GB 大文件，S3FS 需要 3 分钟，而 MinIO 和 JuiceFS 只需要 30 秒左右，速度相差近 6 倍，这主要是由于不同的技术实现导致的。</p><p>s3fs-fuse 在写入文件时，会优先写入本地临时文件，然后以分片方式上传对象存储。如果本地磁盘空间不足，则会以同步的方式上传。因为它需要在本地磁盘和 S3 存储之间进行数据复制，在处理大文件或大量文件时就会导致性能下降。</p><p>再者，S3FS 依赖底层对象存储的元数据管理能力，当需要读写大量文件时，频繁地与对象存储交互获取元数据也会对性能产生很大的影响。</p><p>简单来说，写入 S3FS 的文件体积和总量越大，相应的性能开销也会成比例地放大。</p><p><strong>问题二：JuiceFS 为什么更快？</strong></p><p>同样是通过 FUSE 进行读写，为什么 JuiceFS 可以与 MinIO 一样打满磁盘带宽，而没有像 S3FS 那样出现性能问题呢？这同样也是由技术架构决定的。</p><p>在写入文件时，数据虽然也经由 FUSE 层处理，但 JuiceFS 通过高并发、缓存、数据分块等技术降低了与底层对象存储之间的通信开销，一次性处理更多文件的读写请求，从而减少了等待时间和传输延迟。</p><p>另外，JuiceFS 采用独立的数据库（在本文中使用了 Redis）管理元数据，当文件量特别大时，独立的元数据引擎能有效释放压力，可以更快地定位文件位置。</p><h3>结论</h3><p>以上数据表明，把对象存储作为底层，在其上实现 POSIX 接口不一定会损失性能，不论是写大文件还是小文件，JuiceFS 的性能与直接写 MinIO 是相当的，并没有因为访问 POSIX 而损失底层对象存储的性能。而在 Pandas 表格覆盖写方面，JuiceFS FUSE-POSIX 的性能不降反升，超过 MinIO 近两倍。</p><p>从测试结果不难发现，某些软件（例如 s3fs-fuse）将 S3 API 与 POSIX 接口相互转换可能会导致对象存储的性能损失，但它不失为一款还算方便的临时访问 S3 的小工具，但要想长期稳定的高性能使用，需要通过更为审慎的调研和验证来选择其他更适的方案。</p><p>简单的非结构化文件归档存储，直接使用 MinIO 或云上对象存储是不错的选择。而对于需要进行大规模数据存储和处理，如 AI 模型训练、大数据分析和 Kubernetes 数据持久化等频繁读写的场景，JuiceFS 的独立元数据管理、并发读写和缓存机制会带来更好的性能表现，是更值得尝试的高性能文件系统解决方案。</p><p>希望这篇内容能够对你有一些帮助，如果有其他疑问欢迎加入 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjuicefs.com%2F" target="_blank">JuiceFS 社区</a>与大家共同交流。</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 26 Oct 2023 06:16:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/5389802/blog/10123104</guid>
            <link>https://my.oschina.net/u/5389802/blog/10123104</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[昆仑万维 Q3 报告：实现经营性现金流 7.6 亿]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://www.oschina.net/event/2331193" _blank"="">OSC 请你来轰趴啦！1028 苏州源创会，一起寻宝 AI 时代<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p><span style="color:#000000">昆仑万维发布了 2023 年第三季度报告。据报告披露，昆仑万维第三季度<strong>全面加速推进</strong>「All in」 AGI 与 AIGC 的战略布局，在多个方向均取得了突破性进展。截至本报告期末，昆仑万维实现营业收入<strong>36.8 亿</strong>元，同比增长 8%。实现经营性现金流<strong>7.6 亿</strong>元，同比增长<strong>33%</strong>。</span></p><p><span style="color:#000000">今年前三季度，昆仑万维海外业务收入占比进一步提升至 84%，同比增加近 9 个百分点；整体毛利率达 80%，继续保持在较高水平；实现归属于上市公司股东的净利润 3.3 亿元，<strong>稳居行业第一梯队</strong>。昆仑万维第三季度实现经营性净利润 1.0 亿元，环比增长 29%。</span></p><p><span style="color:#000000">为全面落实「All in」AGI 与 AIGC 的战略布局，昆仑万维前三季度研发费用提升至 6.2 亿元，加速推进相关业务发展。此外，9 月 21 日，昆仑万维发布公告，公司控股股东、实际控制人周亚辉先生及一致行动人盈瑞世纪承诺未来三年（从 2023 年 9 月 22 日到 2026 年 9 月 21 日）不以任何形式减持所持有的公司股票，包括承诺期间该部分股份因资本公积转增、派送股票红利、配股、增发等事项产生的新增股份，长期助力昆仑万维成为一家全球领先的人工智能科技企业。</span></p><p><img height="282" src="https://static.oschina.net/uploads/space/2023/1027/113236_MDTf_4252687.png" width="500" referrerpolicy="no-referrer"></p><p><span style="color:#000000">报告称，在国内 AGI 与 AIGC 领域，其「天工」大模型在逻辑推理、文本理解、多模态能力等多个方面均取得了显著突破。基于大模型核心能力的提升，「天工」APP 进行了全面迭代升级，整合了 AI 搜索、AI 阅读、AI 创作等核心功能，覆盖了<strong>工作、学习和生活</strong>等多个应用场景。</span></p><p><span style="color:#000000">AI 搜索功能经过升级，提高了信息获取的精准度和效率。AI 阅读功能高效分析文章链接或文档文件，生成 AI 摘要并提炼要点，帮助用户快速了解文章内容。同时，支持问答式交互，使用户能够更便捷地查询文档信息。AI 创作提供轻松高效的创作体验，满足<strong>学术教育、职场文档、创意写作、广告营销</strong>等不同场景需求。</span></p><p><span style="color:#000000">作为昆仑万维 AI 业务矩阵之一的 AI 游戏也取得了重要进展。昆仑万维旗下 Play for Fun 游戏工作室自研的首款 AI 游戏《Club Koala》于 8 月 25 日在德国科隆国际游戏展亮相。Club Koala 引入了 AI NPC，并通过 Atom 系统控制 NPC 行为，使 AI NPC 拥有自我意识及记忆能力，为玩家提供更真实、更具沉浸感的游戏体验。</span></p><p><span style="color:#000000">海外布局方面，昆仑万维依托旗下信息分发及元宇宙业务 Opera 原生浏览器 AI 助手 Aria，推出了一系列前沿 AI 功能。</span></p><p><span style="color:#000000"><img alt="" height="236" src="https://oscimg.oschina.net/oscnet/up-b99565529a38b20bc30538e26fb9fe3d15d.png" width="500" referrerpolicy="no-referrer"></span></p><p><span style="color:#000000"><em>Aria「重用」与「改述」功能</em></span></p><p><span style="color:#000000"><em><img alt="" height="238" src="https://oscimg.oschina.net/oscnet/up-00dfeb44b4d900099bac85a6a6d12e867cc.png" width="500" referrerpolicy="no-referrer"></em></span></p><p><span style="color:#000000"><em>Aria「Compose」与「My Style」功能</em></span></p><p><span style="color:#000000">Aria 已在包括欧盟在内的<strong>180</strong>多个国家和地区上线，用户突破<strong>百万</strong>。此外，Aria 已覆盖 Mac、Windows、Linux、Android 和 iOS 等所有主要平台，以及公司元宇宙入口 Opera GX。</span></p><p><span style="color:#000000">截至本季度末，昆仑万维此前采购及租赁芯片已到货<strong>约 6000 张</strong>，另外还有约<strong>3000 张</strong>芯片待交付。目前昆仑万维已有算力预计能够满足未来 1~2 年除视频 AIGC 之外的大模型算力需求。</span></p><p><span style="color:#000000">报告期内，昆仑万维宣布通过增资方式控股 AI 算力芯片企业北京艾捷科芯科技有限公司（简称「艾捷科芯」），完成「算力基础设施—大模型算法—AI 应用」全产业链布局。艾捷科芯旨在开发一款可编程的、具有高性能的 NPU 产品，同时应用于模型训练及推理。</span></p><p><span style="color:#000000">此外，昆仑万维在「华为全联接大会 2023」举办期间，发布「天工大模型端云一体化方案」。该方案具备开箱即用、定制调优、服务保障三大优势，企业可以自主地训练模型，也可以<strong>基于天工模型定制</strong>，实现从应用场景真实需求出发，赋能业务发展并提升竞争力。</span></p><p><span style="color:#000000">「昆仑万维 2023 年第三季度报告展示了公司在 AGI 及 AIGC 领域的突飞猛进。随着技术的不断创新和业务的持续扩张，以及在全产业链布局的驱动下，昆仑万维有望加速成为全球领先的人工智能龙头企业。」</span></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 26 Oct 2023 03:32:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/263657</guid>
            <link>https://www.oschina.net/news/263657</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Gitee 推荐 | 基于 React 技术栈的工作流高阶组件 Antd-bpmn]]>
            </title>
            <description>
                <![CDATA[<h1><a id="user-content-antd-bpmn" class="anchor" href="https://gitee.com/antdadmin/antd-bpmn#antd-bpmn"></a>Antd-bpmn</h1><p>一个基于 React + Ant.design + bpmn.js 编写的工作流高阶组件。</p><p><img src="https://gitee.com/antdadmin/antd-bpmn/raw/main/docs/assets/images/01.png" alt="" referrerpolicy="no-referrer"></p><h3><a id="user-content-已完成功能" class="anchor" href="https://gitee.com/antdadmin/antd-bpmn#%E5%B7%B2%E5%AE%8C%E6%88%90%E5%8A%9F%E8%83%BD"></a>已完成功能</h3><ul class="task-list"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" checked="" disabled=""> 基于 bpmn.js 的基础画图功能</li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" checked="" disabled=""> XML 预览</li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" checked="" disabled=""> XML 保存</li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" checked="" disabled=""> 对齐方式：向右对齐，左右居中，向左对齐，向上对齐，上下居中，向下对齐</li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" checked="" disabled=""> 放大、缩小</li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" checked="" disabled=""> 撤销、重做</li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" checked="" disabled=""> 小地图、快捷键</li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" checked="" disabled=""> 重写工具栏（更符合国人习惯）</li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" checked="" disabled=""> 重写元素菜单（更符合国人习惯）</li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" checked="" disabled=""> 属性面板的设置</li></ul><h3><a id="user-content-如何使用" class="anchor" href="https://gitee.com/antdadmin/antd-bpmn#%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8"></a>如何使用</h3><p>安装：</p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line">npm i @codeflex/antd-bpmn</span></pre><div class="markdown-code-block-copy-btn"></div></div></div><p>示例代码：</p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="kd">function</span><span class="nx">App</span><span class="p">()</span><span class="p">{</span></span><span id="LC2" class="line"><span class="kd">const</span><span class="nx">config</span><span class="p">:</span><span class="nx">AntdBpmnConfig</span><span class="o">=</span><span class="p">{</span></span><span id="LC3" class="line"><span class="na">deptDataUrl</span><span class="p">:</span><span class="dl">"</span><span class="s2">/xxxx</span><span class="dl">"</span><span class="p">,</span></span><span id="LC4" class="line"><span class="na">xmlDataUrl</span><span class="p">:</span><span class="dl">"</span><span class="s2">bpmn.demo.xml</span><span class="dl">"</span><span class="p">,</span></span><span id="LC5" class="line"><span class="na">onLoad</span><span class="p">:</span><span class="p">(</span><span class="nx">url</span><span class="p">,</span><span class="kd">set</span><span class="p">)</span><span class="o">=&gt;</span><span class="p">{</span></span><span id="LC6" class="line"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">onLoad</span><span class="dl">"</span><span class="p">,</span><span class="nx">url</span><span class="p">)</span></span><span id="LC7" class="line"><span class="c1">// 加载 xml 数据</span></span><span id="LC8" class="line"><span class="k">if</span><span class="p">(</span><span class="nx">url</span><span class="o">===</span><span class="dl">"</span><span class="s2">bpmn.demo.xml</span><span class="dl">"</span><span class="p">)</span><span class="p">{</span></span><span id="LC9" class="line"><span class="nx">fetch</span><span class="p">(</span><span class="nx">url</span><span class="p">).</span><span class="nx">then</span><span class="p">(</span><span class="nx">response</span><span class="o">=&gt;</span><span class="kd">set</span><span class="p">(</span><span class="nx">response</span><span class="p">.</span><span class="nx">text</span><span class="p">()))</span></span><span id="LC10" class="line"><span class="p">.</span><span class="k">catch</span><span class="p">(</span><span class="nx">err</span><span class="o">=&gt;</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">err</span><span class="p">));</span></span><span id="LC11" class="line"><span class="p">}</span></span><span id="LC12" class="line"><span class="c1">// 加载部门数据</span></span><span id="LC13" class="line"><span class="k">else</span><span class="p">{</span></span><span id="LC14" class="line"><span class="kd">set</span><span class="p">([</span></span><span id="LC15" class="line"><span class="p">{</span><span class="na">value</span><span class="p">:</span><span class="dl">'</span><span class="s1">dept1</span><span class="dl">'</span><span class="p">,</span><span class="na">label</span><span class="p">:</span><span class="dl">'</span><span class="s1">北京分公司</span><span class="dl">'</span><span class="p">},</span></span><span id="LC16" class="line"><span class="p">{</span><span class="na">value</span><span class="p">:</span><span class="dl">'</span><span class="s1">dept2</span><span class="dl">'</span><span class="p">,</span><span class="na">label</span><span class="p">:</span><span class="dl">'</span><span class="s1">上海分公司</span><span class="dl">'</span><span class="p">},</span></span><span id="LC17" class="line"><span class="p">{</span><span class="na">value</span><span class="p">:</span><span class="dl">'</span><span class="s1">dept3</span><span class="dl">'</span><span class="p">,</span><span class="na">label</span><span class="p">:</span><span class="dl">'</span><span class="s1">-- 上海研发部</span><span class="dl">'</span><span class="p">},</span></span><span id="LC18" class="line"><span class="p">])</span></span><span id="LC19" class="line"><span class="p">}</span></span><span id="LC20" class="line"><span class="p">},</span></span><span id="LC21" class="line"></span><span id="LC22" class="line"><span class="na">onChooseAssignee</span><span class="p">:</span><span class="p">(</span><span class="kd">set</span><span class="p">)</span><span class="o">=&gt;</span><span class="p">{</span></span><span id="LC23" class="line"><span class="kd">set</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">random</span><span class="p">(),</span><span class="dl">"</span><span class="s2">Michael</span><span class="dl">"</span><span class="p">);</span></span><span id="LC24" class="line"><span class="p">},</span></span><span id="LC25" class="line"><span class="p">};</span></span><span id="LC26" class="line"><span class="k">return</span><span class="p">&lt;</span><span class="nc">AntdBpmn</span><span class="na">config</span><span class="p">=</span><span class="si">{</span><span class="nx">config</span><span class="si">}</span><span class="p">/&gt;;</span></span><span id="LC27" class="line"><span class="p">}</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><p><strong>AntdBpmnConfig</strong> 说明：</p><ul><li>xmlDataUrl: 获取 bpmn xml 数据的 URL</li><li>deptDataUrl: 获取部门数据的 URL</li><li>onLoad: 监听加载网络数据，数据加载完毕后通过第二个参数 <code>set</code> 方法来设置</li><li>onChooseAssignee: 监听选择用户操作，选择用户后通过第二个参数 <code>set</code> 方法来设置</li></ul><h3><a id="user-content-运行测试" class="anchor" href="https://gitee.com/antdadmin/antd-bpmn#%E8%BF%90%E8%A1%8C%E6%B5%8B%E8%AF%95"></a>运行测试</h3><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line">git clone https://gitee.com/antdadmin/antd-bpmn.git</span><span id="LC2" class="line"></span><span id="LC3" class="line">npm <span class="nb">install</span></span><span id="LC4" class="line">npm run dev</span></pre><div class="markdown-code-block-copy-btn"></div></div></div><h3><a id="user-content-antdadmin-技术交流群" class="anchor" href="https://gitee.com/antdadmin/antd-bpmn#antdadmin-%E6%8A%80%E6%9C%AF%E4%BA%A4%E6%B5%81%E7%BE%A4"></a>AntdAdmin 技术交流群</h3><p>QQ 群：560291578</p><h3><a id="user-content-antdadmin-简介" class="anchor" href="https://gitee.com/antdadmin/antd-bpmn#antdadmin-%E7%AE%80%E4%BB%8B"></a>AntdAdmin 简介</h3><p>AntdAdmin 是一个致力于 <strong>中国信创</strong> 产业的前端开源框架，其底层技术栈主要以 React + Ant.design 为主。AntdAdmin 开源（或者计划开源）的产品主要如下：</p><ul><li><strong>antd-admin</strong>：一个基于 React + Ant.Design 的中（后）台 UI 框架（准备中...）。</li><li><strong>antd-crud</strong>：一个基于 React + Ant.Design 的增删改查高级组件（已开源：<a href="https://gitee.com/antdadmin/antd-crud">https://gitee.com/antdadmin/antd-crud</a> ）。</li><li><strong>antd-bpmn</strong>：一个基于 React + Ant.Design 的工作流设计组件（已开源：<a href="https://gitee.com/antdadmin/antd-bpmn">https://gitee.com/antdadmin/antd-bpmn</a> ）。</li><li><strong>antd-builder</strong>：一个基于 React + Ant.Design 的表单拖拽设计组件（准备中...）。</li></ul>]]>
            </description>
            <pubDate>Thu, 26 Oct 2023 03:19:00 GMT</pubDate>
            <guid isPermaLink="false">https://gitee.com/antdadmin/antd-bpmn</guid>
            <link>https://gitee.com/antdadmin/antd-bpmn</link>
        </item>
        <item>
            <title>
                <![CDATA[Ubuntu LTS 坚持 10 年更新不动摇]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://www.oschina.net/event/2331193" _blank"="">OSC 请你来轰趴啦！1028 苏州源创会，一起寻宝 AI 时代<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p>Linux 内核开发者 Jonathan Corbet 此前在欧洲开源峰会上宣布，LTS 内核的支持时间将<u><a href="https://www.oschina.net/news/258970/linux-gives-up-on-6-year-lts" target="_blank">从六年缩短至两年</a></u>，原因在于缺乏使用和缺乏支持。稳定版内核维护者 Greg Kroah-Hartman 也表示「<u><a href="https://www.oschina.net/news/261164/greg-says-lf-strongly-supports-kernel-developers" target="_blank">没人用 LTS 内核</a></u>」。</p><p>近日，Ubuntu 开发商 Canonical <u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fubuntu.com%2Fblog%2Flinux-kernel-lts" target="_blank">发表博客称</a></u>，他们会坚持为 Ubuntu LTS 版本提供 10 年的更新支持。</p><blockquote><p><img height="718" src="https://static.oschina.net/uploads/space/2023/1027/105620_6hYU_2720166.png" width="1527" referrerpolicy="no-referrer"></p></blockquote><p>Canonical 在博客写道：</p><blockquote><p><strong>Ubuntu 为您提供 10 年的稳定性</strong></p><p>近二十年来，Canonical 一直是 Ubuntu Linux 内核最重要的 LTS 提供商。 我们每两年发布一个新的 LTS 内核，并总共维护 10 年。我们为 LTS 内核提供为期五年的安全更新，并可以选择通过扩展安全维护 (ESM) 将维护窗口延长至 10 年。</p><p>Canonical 的专门工程团队负责维护所有 Ubuntu 内核、管理 Linux 内核 CVE，并针对关键缺陷应用提供相关补丁。 内核高可靠性是我们设计和工程决策的核心，并且由于 Ubuntu 在生产环境中的广泛使用，我们处于不断提高可靠性的有利位置。</p><p>Ubuntu 内核经过严格的测试、完善和改进，使其成为计算领域中经过最严格生产测试的内核之一。</p><p>Canonical 的维护和支持工作完全独立于上游 LTS，并将像以前一样继续进行。 尽管上游 LTS 支持发生了变化，Canonical 仍然致力于为 Ubuntu 内核提供可靠的支持，确保 Linux 社区和企业可以继续依赖稳定和安全的软件。</p></blockquote><p>鉴于 Linux 内核维护周期即将发生的变化，Canonical 这番对长期支持的承诺显得更加重要。毕竟维护 Linux 内核需要大量的专业知识，这在处理设计为长寿命的产品时变得尤其具有挑战性，意味着组织可能会在维护和核心业务目标之间进行权衡。</p><p>Canonical 提供了生产级软件分发机制，以及一致的可靠安全更新流。该方法已经在生产环境中经过严格测试，从基本操作系统和关键软件包的安全更新扩展到基础设施组件和应用程序。</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 26 Oct 2023 03:10:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/263647/ubuntu-linux-kernel-lts-10yr</guid>
            <link>https://www.oschina.net/news/263647/ubuntu-linux-kernel-lts-10yr</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[小米澎湃 OS 正式发布，Xiaomi Vela 将开源]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://www.oschina.net/event/2331193" _blank"="">OSC 请你来轰趴啦！1028 苏州源创会，一起寻宝 AI 时代<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p><span style="color:#000000">在小米澎湃 OS 暨小米 14 系列新品发布会上，雷军<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FyVatKNDYaEPabwTyVN-1wQ" target="_blank">宣布</a>正式发布全新操作系统小米澎湃 OS（Xiaomi HyperOS），并表示计划开源其</span><span style="background-color:#ffffff; color:#222222">自研的 Xiaomi Vela 系统内核。</span></p><p><span style="color:#000000">雷军介绍称，小米集团的全新战略是：从「手机 × AIoT」，升级「人车家全生态」；而承接新战略的关键就是小米澎湃 OS。小米澎湃 OS 是一套完整的跨端系统，历经 13 年探索，历时 7 年研发而成。定位为：以人为中心，打造「人车家全生态」操作系统，「这是一次史无前例的系统底层重构，工作量非常大。」</span></p><p><span style="color:#000000">小米在其中投入了 5000 名工程师，并在设计之初提出了五大设计目标：</span></p><p><span style="color:#000000"><img alt="" height="214" src="https://oscimg.oschina.net/oscnet/up-d67d41e84ecbf23996764d026e5488dca64.jpg" width="500" referrerpolicy="no-referrer"></span></p><p><span style="color:#000000">有关小米澎湃 OS 的具体介绍如下：</span></p><h4><span style="color:#000000"><strong>底层重构，全面发挥设备性能</strong></span></h4><p><span style="color:#000000">在最底层的系统内核层，该团队将自研的 Xiaomi Vela 系统内核与深度修改的 Linux 系统内核进行融合，重构了性能调度、任务管理、内存管理、文件管理等各个基础模块，实现了性能、效率的大幅提升。</span></p><p><img height="286" src="https://oscimg.oschina.net/oscnet/up-d6f930b8ab8ba527d90f18c59826a999496.png" width="500" referrerpolicy="no-referrer"></p><p><strong><span style="color:#000000">核心系统</span></strong></p><p><span style="color:#000000">小米澎湃 OS 核心系统有几大特性：</span></p><ul><li><span style="color:#000000">第一拥有强大的异构硬件兼容性，支持 200+处理器平台，20+文件系统，200+硬件品类。</span></li><li><span style="color:#000000">第二灵活性极高，运行空间支持从 64KB 到 24GB。</span></li><li><span style="color:#000000">第三能基于不同硬件为其配置必需资源，加上底层 IO 技术栈的文件去重和压缩，极大幅度精简固件。</span></li></ul><p><img height="222" src="https://oscimg.oschina.net/oscnet/up-25826e7e57ee3d5a04ba79dba779d18aae1.png" width="500" referrerpolicy="no-referrer"></p><p><strong><span style="color:#000000">调度</span></strong></p><p><span style="color:#000000">小米澎湃 OS 最重要的能力之一，就是调度发挥卓越的硬件性能，在高算力设备上，比安卓原生内核更快；在轻量设备上，比行业头部的轻量商用 OS 内核更快。</span></p><p><img height="216" src="https://oscimg.oschina.net/oscnet/up-a882b1b6dda5967319c78b674b3f2f79ddb.png" width="500" referrerpolicy="no-referrer"></p><p><img height="213" src="https://oscimg.oschina.net/oscnet/up-c387fd4b4d70612b9a77ab035899d5ec0c2.png" width="500" referrerpolicy="no-referrer"></p><p><img height="218" src="https://oscimg.oschina.net/oscnet/up-53fa103f3764054071491e3007e71a0e68f.png" width="500" referrerpolicy="no-referrer"></p><p><span style="color:#000000">当然快是不够的，最重要的是精准。一部手机上可能同时运行着上万个线程，原生 OS 一般把线程分为两类，优先与普通，以一个相对固定的周期评估负载，但在复杂场景下，系统评估是赶不上负载变化速度的。而小米澎湃 OS 分类则更为细致，系统评估周期会跟根据任务执行时间动态变化。</span></p><p><img height="221" src="https://oscimg.oschina.net/oscnet/up-29854cac511f0e6b6c4decdd6946869cdff.png" width="500" referrerpolicy="no-referrer"></p><p><img height="216" src="https://oscimg.oschina.net/oscnet/up-64a77dd556ef86efd43c9523eeeee73df0e.png" width="500" referrerpolicy="no-referrer"></p><p><img height="213" src="https://oscimg.oschina.net/oscnet/up-d28c5e7c0d63a43eee257cfe399b1711a68.png" width="500" referrerpolicy="no-referrer"></p><p><span style="color:#000000">此外，系统会进一步分析线程间的依赖关系来进行染色，根据染色关联关键任务，对 CPU 进行精准负载评估。在算力有限的轻量设备上，系统还可以把任务拆分到多个运算单元上协同计算，最大化发挥硬件性能。精准的调度能力，保障流畅体验的同时，也会带来优异的功耗表现。</span></p><p><img height="200" src="https://oscimg.oschina.net/oscnet/up-0f7813b86fdcabef979795c3c11eb192399.png" width="354" referrerpolicy="no-referrer">&nbsp;<img height="200" src="https://oscimg.oschina.net/oscnet/up-6b034e2a0fa168a6eebcea06c617aa8e125.png" width="356" referrerpolicy="no-referrer"></p><p><strong><span style="color:#000000">重构内存管理</span></strong></p><p><span style="color:#000000">小米澎湃 OS 独特的内存管理机制，通过精准化一体评估、提前分配、及时回收与分级加速，带来了超强性能和驻留表现。连续启动 30 个应用，耗时最短，连续启动 30 个应用两轮，驻留数量最多。</span></p><p><img height="218" src="https://oscimg.oschina.net/oscnet/up-e19c1e0d7f4b89bd0b55de98c35e1381549.png" width="500" referrerpolicy="no-referrer">&nbsp;<img height="217" src="https://oscimg.oschina.net/oscnet/up-ac82a08de7db5d164f1df951790c87ed110.png" width="500" referrerpolicy="no-referrer"></p><p><strong><span style="color:#000000">重构文件管理</span></strong></p><p><span style="color:#000000">重构了文件系统，软硬结合，小米澎湃 OS 可达到 50 个月性能衰减几乎为零，彻底告别手机越用越卡的情况。</span></p><p><img height="217" src="https://oscimg.oschina.net/oscnet/up-af646f4e4505f07e67c5bad89fb2e01bbd4.png" width="500" referrerpolicy="no-referrer">&nbsp;<img height="216" src="https://oscimg.oschina.net/oscnet/up-ef2debedf7f852355407e67349f6663921b.png" width="500" referrerpolicy="no-referrer"></p><p><strong><span style="color:#000000">重构网络系统</span></strong></p><p><span style="color:#000000">小米澎湃 OS 重构了网络系统，在高铁、微信语音、游戏平均时延、WLAN 峰值带宽方面也有着卓越的表现。</span></p><p><img height="218" src="https://oscimg.oschina.net/oscnet/up-de377c6d0687460d25cebb0f4d397263998.png" width="500" referrerpolicy="no-referrer"></p><p><strong><span style="color:#000000">重构图形子系统</span></strong></p><p><span style="color:#000000">小米澎湃 OS 重构了图形子系统，能轻松实现高质量的渲染效果。在系统中实现复杂模糊混色的多级渲染，支持非常独特的「动态玻璃」效果，实时模拟玻璃的光影变幻，还能实现柔和的空间投影、实时渲染光照效果。</span></p><p><img height="200" src="https://oscimg.oschina.net/oscnet/up-8de2aaf1f3314363bacc2a90071d2dcb2df.jpg" width="467" referrerpolicy="no-referrer">&nbsp;<img alt="" height="200" src="https://oscimg.oschina.net/oscnet/up-1fb227a7f81ab447db52e79ee4ffacc5730.jpg" width="467" referrerpolicy="no-referrer"></p><p><img alt="" height="200" src="https://oscimg.oschina.net/oscnet/up-a1937dee1d1a9d003589816b3e84675384d.jpg" width="467" referrerpolicy="no-referrer">&nbsp;<img alt="" height="200" src="https://oscimg.oschina.net/oscnet/up-87292ec26024ee0889ce096559f59d4f4a8.jpg" width="467" referrerpolicy="no-referrer"></p><p><img alt="" height="200" src="https://oscimg.oschina.net/oscnet/up-071784a287dd7ddbb9f252d0444b9454d04.jpg" width="467" referrerpolicy="no-referrer"></p><h4><span style="color:#000000"><strong>跨端智联，助力设备高效连接</strong></span></h4><p><strong><span style="color:#000000">Xiaomi HyperConnect 跨端互联框架</span></strong></p><p><span style="color:#000000">小米自研了澎湃跨互联框架「Xiaomi HyperConnect」。在小米澎湃 OS 下，设备能动态实时组网。</span></p><p><img height="286" src="https://oscimg.oschina.net/oscnet/up-c0b728fbf2a5bd496b5eeef31cfa86f25cf.png" width="500" referrerpolicy="no-referrer"></p><p><strong><span style="color:#000000">融合设备中心</span></strong></p><p><span style="color:#000000">以及设计了融合设备中心，使得用户可以随时看到设备的联网情况。</span></p><p><span style="color:#000000"><img alt="" height="281" src="https://oscimg.oschina.net/oscnet/up-c376c4267d44901e1491ef37d3c40289773.gif" width="500" referrerpolicy="no-referrer"></span></p><p><span style="color:#000000">不仅是手机、PAD 等个人设备，这个能力也开放给了智能家居领域。比如，空调能自动根据人数调温度、家里的监控能自动帮你找宠物在哪。</span></p><p><span style="color:#000000"><img alt="" src="https://oscimg.oschina.net/oscnet/up-119e9537e04527326e487b7f4af48e1e9a0.gif" width="500" referrerpolicy="no-referrer"></span></p><p><span style="color:#000000">还可以根据自己的喜好进行编排、比如打个响指屋里的灯都亮了、家里的灯能随着音箱的律动变化等。</span></p><p><span style="color:#000000"><img alt="" height="281" src="https://oscimg.oschina.net/oscnet/up-19bafac7985dccdca8a4b0761a51c2fc1f5.gif" width="500" referrerpolicy="no-referrer"></span></p><h4><span style="color:#000000"><strong>主动智能，迎接前沿 AI 技术落地</strong></span></h4><p><span style="color:#000000">雷军认为，主动智能是未来操作系统的一个重要特质。所以，他们推出了「Xiaomi HyperMind」，一个跨越多端的智能思考中枢，可以感知你的日常习惯，为你提供自动化建议。</span></p><p><img height="218" src="https://oscimg.oschina.net/oscnet/up-265b627d96de3081670ac0c519e29d66921.png" width="500" referrerpolicy="no-referrer"></p><p><span style="color:#000000">此外，整个系统也使用了非常多基于 AI 大模型的功能，支持实时字幕、小爱输入助手、AI 写真、AI 妙画、AI 搜图等功能。</span></p><p><img height="216" src="https://oscimg.oschina.net/oscnet/up-591fa655eb5152842eb5e1c0ebc0ae913ca.png" width="500" referrerpolicy="no-referrer"></p><p><span style="color:#000000">大模型对算力和技术架构都有着极高的要求，一般都是在云端使用的。小米澎湃 OS 的 AI 子系统支持最新的大模型 NPU 部署技术，很快就能在手机端侧直接运行。</span></p><p><img height="216" src="https://oscimg.oschina.net/oscnet/up-6145795b903e6a2c89f657bc77d56c4b07f.png" width="500" referrerpolicy="no-referrer">&nbsp;</p><p><img height="217" src="https://oscimg.oschina.net/oscnet/up-06ce6ce252c420d24be08fb754b4fa113e2.png" width="500" referrerpolicy="no-referrer"></p><p><img height="218" src="https://oscimg.oschina.net/oscnet/up-e909ed213e586f1d7d9574b125b44647f24.png" width="500" referrerpolicy="no-referrer"></p><h4><span style="color:#000000"><strong>全端安全隐私，单设备、跨设备都安全</strong></span></h4><p><span style="color:#000000">安全隐私框架的基础，是小米自主研发的底层安全系统 TEE，它拥有独立的内核，在使用 CPU、内存等资源时，在硬件层面完全隔离。TEE 系统通过形式化方法进行严格的数学逻辑推导和证明，保障系统达到」数学意义"上的严格安全。</span></p><p><img height="223" src="https://oscimg.oschina.net/oscnet/up-aed7af72b22cc55003730454c86363a8683.png" width="500" referrerpolicy="no-referrer"></p><p><span style="color:#000000">开发团队同时加持了跨端安全隐私体系，每台设备是否安全，不是由设备自己判断，而是设备间基于安全子系统相互判断，保障整个设备网络更加安全；同时在数据传输的链路使用硬件级 TEE 端到端加密，达到互联网的全面安全。 并将隐私保护从单端扩充到了多设备，支持互联权限管理、互联行为提醒和记录</span></p><h4><span style="color:#000000"><strong>开发生态，与全球开发者共建共创</strong></span></h4><p><span style="color:#000000">Xiaomi HyperConnect 将向 APP 开发者、智能硬件开发者开放。包括了应用开发者和智能硬件开发者，目前已有超过 9000 家智能硬件设备厂商接入，全面覆盖 200 余个品类。</span></p><p>「<span style="color:#000000">Xiaomi Vela 也将开源，为全球开发者贡献力量。</span>」</p><p><span style="color:#000000">小米澎湃 OS 的首批发布计划如下：</span></p><p><span style="color:#000000"><img alt="" height="667" src="https://oscimg.oschina.net/oscnet/up-bc51697f057c9f360a911c06e73d039ea6b.png" width="500" referrerpolicy="no-referrer"></span></p><p><span style="color:#000000">有关此次发布会的更多详情，可查看<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FyVatKNDYaEPabwTyVN-1wQ" target="_blank">此处</a>。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 26 Oct 2023 03:06:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/263645</guid>
            <link>https://www.oschina.net/news/263645</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[no-GIL Python，启动！]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://www.oschina.net/event/2331193" _blank"="">OSC 请你来轰趴啦！1028 苏州源创会，一起寻宝 AI 时代<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p>CPython 核心开发者 Thomas Wouters 代表 Python 指导委员会宣布：<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdiscuss.python.org%2Ft%2Fpep-703-making-the-global-interpreter-lock-optional-in-cpython-acceptance%2F37075" target="_blank"><strong>正式接受 PEP 703 提案</strong></a></u>。</p><blockquote><p>PEP 703（Making the Global Interpreter Lock Optional，让全局解释器锁成为可选），简称<strong> no-GIL</strong>，也被称为自由线程 (free-threaded)。</p></blockquote><blockquote><p><img src="https://oscimg.oschina.net/oscnet/up-c596a475dbbae0dd91e3f3072a9b309f794.png" referrerpolicy="no-referrer"></p></blockquote><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">根据提案的描述，CPython 的全局解释器锁 (GIL) 阻止了同时多线程执行代码，成为了在多核 CPU 上提高 Python 代码运行效率的一大障碍。PEP 703 提案建议向 CPython 添加构建配置 (<code>--disable-gil</code>)，使其在没有全局解释器锁的情况下运行 Python 代码，并进行必要的更改以保证解释器线程安全。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">Thomas Wouters 表示，Python 指导委员会当然很清楚 no-GIL 意味着什么，社区普遍也是秉承支持的态度，毕竟它为 Python 带来巨大好处。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">但与此同时，<span><span><span>委员会担心移除 GIL 会破坏目前的所有扩展模块，或者显着降低 CPython 的性能或可维护性。</span></span></span><span><span><span>此外，</span></span><span><span>第三方 PyPI 软件包生态系是 Python 的一大优势，与 C 语言库的紧密、高效集成则是 CPython 的优势之一。</span></span><span><span>它们使得存在多种软件包选择成为可能，这是 Python 的独特卖点。</span></span></span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span><span><span>因此他们需要谨慎实现 no-GIL，避免破坏这些优势，或者导致其他开发者放弃数十年的软件包开发。</span></span></span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span><span><span>由于还没有实现 no-GIL，评估实际影响以及让第三方软件包适应新的自由线程的实用性是很困难的。尤其是</span></span><span><span>与线程相关的问题的不可预测性更是让难度升级，</span></span></span><span><span><span>因为有些问题只有在显着负载下才会暴露。</span></span></span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span><span><span>目前</span></span></span> Python 指导委员针对 no-GIL 的实现计划分成三个阶段：</p><ol><li style="text-align:left"><strong>实验阶段</strong>。通过提供 build-time 选项，让开发者在构建时选择启用自由线程 (free-threaded)。在此阶段对外明确告知<span><span><span>是实验性的，不支持用于生产环境。</span></span></span></li><li style="text-align:left"><strong>支持但不默认阶段</strong>。<span><span><span>该阶段将在 API 和 ABI 变更充分解决，并且有足够的社区支持时开始启动。</span></span></span></li><li style="text-align:left"><strong>默认阶段</strong>。此时默认启用自由线程（初期仍支持禁用），但此阶段确切的标准很难确定，目标是使开发者尽可能无缝且无痛地进行升级和兼容。</li></ol><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdiscuss.python.org%2Ft%2Fpep-703-making-the-global-interpreter-lock-optional-in-cpython-acceptance%2F37075" target="_blank">点此查看详情</a>。</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 25 Oct 2023 10:36:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/263570/pep-703-acceptance</guid>
            <link>https://www.oschina.net/news/263570/pep-703-acceptance</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Java 11 和 Java 17 使用率均超 Java 8]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://www.oschina.net/event/2331193" _blank"="">OSC 请你来轰趴啦！1028 苏州源创会，一起寻宝 AI 时代<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p><span style="color:#000000">Java 软件供应商&nbsp;Azul <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.azul.com%2Fnewsroom%2Fazul-state-of-java-survey-report-2023-businesses-exploring-java-alternatives%2F" target="_blank">发布</a>了首份年度 Java 现状调查报告，基于对全球 2062 名 Java 专业人士和基于 Java 的应用程序用户进行的调查。调查探讨的领域包括 Java 采用趋势、Oracle 最新 Java 定价变化的影响、Java 应用程序向云的迁移以及公司如何优化云成本，以及常见漏洞和暴露 (CVE) 的安全注意事项。</span></p><p><span style="color:#000000"><img alt="" height="340" src="https://oscimg.oschina.net/oscnet/up-ae384b843fd1f2008ed4e7affed0c1bd24a.png" width="300" referrerpolicy="no-referrer"></span></p><p><span style="color:#000000">结果表明，<strong>Java 的采用依然强劲</strong>，98% 的受访者表示在他们的软件应用程序或基础架构中使用了 Java。其中 57% 的受访者表示，他们至少 60% 的应用程序是基于 Java 的；有&nbsp;<span style="background-color:#ffffff">66% 的公司为 Java 支持付费。</span></span></p><p><span style="color:#000000">2018 年 9 月发布的 Java 11 和 2020 年 9 月发布的 Java 17 是使用最广泛的 Java 版本，使用率分别为 48% 和 45%。其次是 2014 年 3 月发布的 Java&nbsp;8，使用率为 40%。<span style="background-color:#ffffff">85% 的受访者使用的是 LTS 版本的 Java，64% 的受访者使用了多个 Java 版本。</span></span></p><p><span style="color:#000000"><strong>Oracle 的 Java 市场份额正在下降</strong>。在使用 Oracle Java 的受访者中，82% 的人表示对 1 月份推出的新 Java SE 通用订阅定价模式感到担忧。受 Oracle 最新的定价政策影响，72% 的受访者表示他们正在考虑使用 OpenJDK 等开源替代品；而在没有考虑采用开源替代方案的受访者中，有 14% 的人表示，是因为他们没有想到可以这样做。</span></p><p><span style="color:#000000">但仅管如此，Oracle 仍然是 Java 市场的强大参与者。42% 的受访者表示他们仍然使用至少一个 Oracle Java 实例，不过其中 74% 的组织表示他们还使用至少一个 OpenJDK 供应商的 JDK。大约 60% 的公司选择了 OpenJDK 发行版而不是 Oracle Java SE。</span></p><p><span style="color:#000000"><strong>90% 的受访者在云环境中使用 Java</strong>：公有 (48%)、私有 (47%) 或混合 (40%)。云格局正在迅速转变，组织不断向云迈进，以实现可扩展性、灵活性、生产力和敏捷性，但成本和安全性仍然是两个主要挑战。</span></p><p><span style="color:#000000">近 70% 的公司表示，他们正在为至少 20% 的未使用云容量付费，「这是过度配置云资源的明显迹象」。<span style="background-color:#ffffff">95% 的公司在过去一年中采取了降低云成本的措施</span>，46% 的企业正在利用高性能 Java 平台更有效地使用云资源。</span></p><p><span style="color:#000000"><strong>Log4Shell 漏洞对组织产生了广泛的安全影响。</strong>近 80% 的受访者表示受到了 2021 年 Log4J 库漏洞的影响。近一半的公司在该漏洞出现后不得不分配额外的工程时间，30% 的公司受到尝试利用此漏洞的影响。</span></p><p><span style="color:#000000">近三分之二的调查受访者明确表示，第三方和开源应用程序及库是最令人担忧的 CVE 来源。其中 57% 的受访者将开源库和应用程序列为最令人担忧的 CVE 来源，51% 的受访者认为第三方库和应用程序是最令人担忧的 CVE 来源。</span></p><p><span style="color:#000000">更多详情可<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.azul.com%2Freport%2F2023-state-of-java%2F" target="_blank">查看完整报告</a>。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 25 Oct 2023 07:51:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/263544/azul-state-of-java-survey-report-2023</guid>
            <link>https://www.oschina.net/news/263544/azul-state-of-java-survey-report-2023</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[ChatGPT 更新「知识」数据，截至 2023 年 4 月]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://www.oschina.net/event/2331193" _blank"="">OSC 请你来轰趴啦！1028 苏州源创会，一起寻宝 AI 时代<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p>ChatGPT 刚刚宣布，其「知识」数据已进行更新，当前的知识截止日期是 2023 年 4 月。</p><p><img height="786" src="https://static.oschina.net/uploads/space/2023/1026/143656_e72e_2720166.png" width="1651" referrerpolicy="no-referrer"></p><p>注意，此次知识数据更新仅面向 GPT-4 版本提供。</p><p>ChatGPT 官方提供了如下示例。</p><p>提问：<strong>请列出最近发生的 10 次灾难，以及在您的知识截止日期前的伤亡人数。灾难至少应始于 2022 年之后。</strong></p><blockquote><p>Here are 10 significant catastrophes that occurred after 2022, up to my knowledge cutoff in April 2023, along with their associated casualties:</p><ol><li><p><strong>Earthquake in Turkey and Syria (February 6, 2023):</strong> This devastating earthquake, with a magnitude of 7.8, struck southeastern Turkey and northern Syria, leading to widespread destruction. The death toll exceeded 47,000 people, making it one of the deadliest earthquakes in recent history.</p></li><li><p><strong>Floods in Brazil (January 2023):</strong> Severe floods and landslides hit the state of São Paulo in Brazil, resulting in over 50 deaths. Several cities, including São Sebastião and Ubatuba, were significantly impacted.</p></li><li><p><strong>Train Derailment in Greece (March 1, 2023):</strong> A passenger train and a freight train collided in central Greece, near the city of Larissa, causing the death of at least 57 people.</p></li><li><p><strong>Earthquake in Afghanistan (June 22, 2022):</strong> A powerful earthquake with a magnitude of 5.9 struck eastern Afghanistan, particularly affecting the Paktika and Khost provinces. The catastrophe resulted in the death of over 1,000 people.</p></li><li><p><strong>Floods in Pakistan (Mid-2022):</strong> Monsoon floods in Pakistan, particularly severe in the Sindh and Balochistan provinces, led to the deaths of over 1,000 people and displaced millions.</p></li><li><p><strong>Tornado Outbreak in the United States (March 2023):</strong> A series of tornadoes swept across several states in the U.S., including Mississippi, Alabama, and Georgia. The outbreak caused at least 25 fatalities.</p></li><li><p><strong>Ferry Fire in the Philippines (March 28, 2023):</strong> A fire broke out on a ferry in the Philippines, leading to at least 31 deaths. The incident occurred near the island of Basilan.</p></li><li><p><strong>Typhoon Noru in the Philippines (September 2022):</strong> This powerful typhoon, also known as Karding, caused widespread destruction in the Philippines, resulting in the deaths of at least 8 people.</p></li><li><p><strong>Landslides in Peru (January 2023):</strong> Heavy rains triggered landslides in the Cusco region of Peru, leading to at least 36 deaths. The town of Santa Teresa, near the tourist attraction Machu Picchu, was particularly affected.</p></li><li><p><strong>Cyclone Gabrielle in New Zealand (February 2023):</strong> This powerful cyclone caused significant flooding and landslides in New Zealand's North Island, leading to at least 11 deaths.</p></li></ol><p>Please note that the number of casualties and the impact of these catastrophes might have changed after my last update in April 2023.</p></blockquote><p>via <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fchat.openai.com%2Fshare%2F3b088460-86f8-4fa6-afd1-802b7f9a5e9f" target="_blank">https://chat.openai.com/share/3b088460-86f8-4fa6-afd1-802b7f9a5e9f</a></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 25 Oct 2023 06:39:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/263533</guid>
            <link>https://www.oschina.net/news/263533</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Vercel 为]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://www.oschina.net/event/2331193" _blank"="">OSC 请你来轰趴啦！1028 苏州源创会，一起寻宝 AI 时代<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p>一个多月前，Vercel <a href="https://www.oschina.net/news/258259/v0-dev-by-vercel">推出</a>根据文本生成 UI 界面代码的新产品：v0，官方称其为<strong>「生成式 UI」 (Generative UI)</strong>。</p><p><img alt="https://static.oschina.net/uploads/space/2023/0915/154136_ygaU_2720166.png" src="https://static.oschina.net/uploads/space/2023/0915/154136_ygaU_2720166.png" referrerpolicy="no-referrer"></p><p>只需要输入文字提示，v0 即可生成需要的 UI 组件界面，而且可以直接复制代码粘贴到需要使用的任何地方。</p><p><strong>主要特性</strong></p><ul><li>即时生成：可以根据用户的文本提示即时生成 UI 组件，这为用户提供了快速的实时反馈和迭代能力。</li><li>支持实时修改：通过提供更具体和详细的提示来获得更精确的结果。</li><li>简单易用：用户只需提供简单的文本提示，无需复杂的设计或编程知识。</li><li>集成多种组件：提供了多种 UI 组件的示例，如音乐播放器、发票表格等，这为用户提供了丰富的选择。</li></ul><p><img alt="" src="https://static.oschina.net/uploads/space/2023/0915/153904_iXi8_2720166.png" referrerpolicy="no-referrer"></p><p>Vercel 近日<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fvercel.com%2Fblog%2Fannouncing-v0-generative-ui" target="_blank">宣布</a></u> v0 已从 Alpha 过渡到 Beta，向 5000 名用户开放了访问权限，并为想要解锁 v0 完整功能集的用户推出订阅计划——包含 4 档级别：</p><ul><li><strong>Free</strong>: $0 per month includes 200 credits</li><li><strong>Basic</strong>: $10/month includes 1,500 credits</li><li><strong>Standard</strong>: $30/month includes 5,000 credits</li><li><strong>Premium</strong>: $50/month includes 10,000 credits</li></ul></div>
                                    ]]>
            </description>
            <pubDate>Wed, 25 Oct 2023 06:28:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/263528/v0-generative-ui</guid>
            <link>https://www.oschina.net/news/263528/v0-generative-ui</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
    </channel>
</rss>
