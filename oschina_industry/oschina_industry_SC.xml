<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[开源中国-综合资讯]]>
        </title>
        <link>https://www.oschina.net/news/industry</link>
        <atom:link href="https://rsshub.app/oschina/news/industry" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[开源中国-综合资讯 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Wed, 20 Dec 2023 11:56:36 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[每个故障都是一次涅槃]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>2023 年 12 月 19 日，今天 sealos 的公有云一个小时内被攻击 3 次，每次，几 G 到，十几 G 的流量，都是 CC 攻击（七层多 IP 地址模拟用户请求），这种比 DDos 还难防，现在凌晨一点，刚处理完所有临时方案，以及咨询一些外部的安全专家，后续会有一系列的加强防控来保障稳定性。有些感想，怕睡一觉忘了，赶紧写下来。</p><h2>致歉</h2><p>首先要给所有喜欢 sealos 的同学道歉，这几天的连续攻击让平台出现几次几分钟的不可用，比如今天每次大概会 3～5 min, 流量是瞬间过来把 15 台 nginx 全部打爆的，然后 k8s 会自动拉起恢复，我们停止掉了被攻击应用，并把资源扩大了一倍来硬抗，这是临时方案。</p><p>被攻击之后我们的稳定性数据是 99.9%，对于稳定性要求高于这个数字的业务可以考虑缓一缓使用我们的公有云，先可以跑一些开发测试或者周边应用，核心业务可以考虑独立部署方案。</p><p>后面平台会按照 SLA 承诺给收到损失的用户相应赔偿，有迁移走的用户可以联系我们对未消费余额全部退款，再次表示深深的歉意。</p><h2>这一天迟早要来</h2><p>在大概一个月前还没被攻击的时候，laf 作者老根吃饭时就在讲，为什么 sealos 还没受到攻击，这不合理，没被攻击反而让人感到不安。现在头顶的剑是落下了，这是成为一朵成熟的云的必经之路。没想到来的这么快。</p><h2>创业一年中遇到前所未有的挑战</h2><p>创业我们选择了一条极难，极让人兴奋的路，做公有云，这怎么看都不应该是一个小团队能做的了的事，我嫌难度不够再增加一点：做一个多租户的容器公有云。还可以把难度再加一点：先做国内。最终想做成一个优雅的牛逼的公有云，然后任何人都可以直接拥有这个云操作系统，一键装起来一个对标公有云能力的云，磨平公有云私有云的边界。</p><p>创业前虽然也做过非常多有挑战的事，比如容器云支撑整个讯飞核心研发平台，深度学习平台的 GPU 批任务，碎片化，当时做了一个亚洲最大的 GPU 集群，后面在 k8s 上完全取代 openstack 的创世系统，在阿里云的时候应用交付平台和开源 sealer 等，但这些大多都是私有云，和公有云不是一个挑战级别。</p><p>创业时我们在技术上是激进的，现金流上是保守的，因为我认为前沿的不太成熟的技术别人不敢用，我敢，这就是创业公司的竞争优势，不成熟的技术你让他成熟了这就成为你建立壁垒的砖块。当有长期的积累，这朵云稳定运行超过 2 年时，我们就会达到原子弹爆炸的临界值，没人能拒绝这样优秀的东西了。</p><p>第一次大的故障是 2023.3.17 号，记的这么清楚是因为公司一周年庆祝，我们买了蛋糕水果，结果 laf 刚上线没几天就挂了，全公司核心人员修复了 15 个小时，蛋糕摆在那儿就没时间切了。最终原因是因为用了某平台的轻量服务器，网络包紊乱，后来全部切走，低成本是要付出代价的。</p><p>后面几次故障是 laf 的用户迅速暴涨，导致 mongo 的租户迅速突破上限，很少有这种多租户共享一个实例的场景，影响到了我们的用户，其中有一个用户在北京，我就过去给他们道歉了，并承诺无论花多大代价都必须把他们的稳定性做好，后面几乎整个 laf 团队都铺在这个事情上，中间过程故事很多，已经到了我们帮助用户去调优代码的程度了，当然稳定性问题是没有那么好解决的，但是最终还是收敛下来了，现在这个客户今年已经从 0 开始有大几百万用户了，这种背靠背作战让我们很有成就感，就像在爬一座又一座山，中间我们可能被划伤，摔倒，但是没死，变秃了也变强了。</p><p>然后就是网关，我们确实几乎市面上所有的网关都尝试用了一遍，测试了一遍，都有不同程度各种各样的问题。 我自己遇到这些问题是兴奋的，这就意味着机会，意味着我们解决了这些问题就会变成竞争力，所以我们不断死磕难点。比如我们正在用的 k8s 刚刚 GA 的 Gateway API，我们会充分的压力测试与解决其中还不太成熟的问题，又比如我们一定要把数据库稳定的跑容器里。</p><p>最近遇到的就是被攻击，原因是因为 sealos 上跑了大量的 GPT 相关的应用，某些应用的流量又特别大，而这些应用的竞争对手就会恶意攻击。我们做过充分的性能测试，比如几十万 QPS 都可以轻松扛住，但是攻击者是下血本了，流量打的非常之大，隔三差五就来两下。我们后续会通过 tls 特征分析，http2 以及 ip2local 几个层面来综合解决 cc 攻击的问题。这次之后我们又将一次脱胎换骨，真的我现确切的感受就是这样，一个产品的强大是要经过苛刻的场景千锤百炼的，高手的身上都是伤疤。</p><p>这次故障用户里面就会出现两种人，一种是谩骂声，说稳定性差，体验差，服务差，我十分理解，也多少有些失落，确实我们不完美，我们在努力改进，也尽自己所能去做一些弥补，当我们足够强大的时候，欢迎回来。 另外一种是支持和鼓励，让我非常感动，群里很多做网络安全的同学主动联系我，给我们提供非常靠谱的方案，甚至共享一些付费数据来为我们提供更好的防护能力，以前 laf 故障的时候也是，有些客户给我们发红包，说修复故障辛苦了，是个好项目，无论遇到什么困难一定要做下去，这些用户真的是我们的前进动力。</p><h2>稳定性与成本</h2><p>很难的一件事就是用户不接受你不稳定这合情合理，同样不接受成本高，而往往有时候就是需要投入更大成本来解决稳定性问题，比如我们这些遇到的，一种解决方式就是把流量抗下来，那就需要耗费大量服务器，这就是成本，或者加 waf ddos 防护这也是成本，这些隐性成本挺多用户要么不认，要么用不起（也有原意用的）。所以成本和稳定性之间就形成了一种矛盾。而且这种 CC 攻击如果攻击者足够专业的话让你没法做特征分析，那么理论上可能真的只有硬抗下来，抗的这个成本算谁的。</p><p>所以我现在能理解为什么公有云贵了，就是为了解决那剩下的 10% 问题，需要花 200% 300% 的成本去解决，比如多副本，比如机房灌水，等等。</p><p>这次被攻击之后让我更加坚定拥抱公有云，确实云在底层解决掉了很多问题，如果是托管服务器迟早都会遇到这些问题，然后花数倍的成本云解决。 反而通过高效充分的云上调度手段能在公有云上把成本进一步降低。</p><p>总之，不稳定，用户骂你，贵，用户亦骂你。 我是觉得骂的对，不骂不进步。技术有意思的点也在这，解决矛盾问题，比如稳定性与成本的矛盾，比如功能强大与复杂度的矛盾，这些新的牛逼的技术就是为了能找到一个优雅的方式能兼顾。</p><h2>涅槃重生</h2><p>我们还是一如既往的走技术激进路线，稳定性的问题是一定会被收敛的，sealos 的核心组件就那么多，一块一块硬啃也能啃下来，今天暴露的问题是为了明天的高鲁棒性，要想涅槃重生得把自己架在火上烤，公有云就是我们的试金石，预计半年到一年的时间我们可以解决掉绝大多数核心问题，倒时一个稳如老狗，便宜，简单，开放的云会绽放在大家面前。 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ffanux%2Fsealos" target="_blank">sealos 以 kubernetes 为内核的云操作系统发行版，让云原生简单普及</a></p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Flafjs%2Flaf" target="_blank">laf 写代码像写博客一样简单，什么 docker kubernetes 统统不关心，我只关心写业务！</a></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 20 Dec 2023 09:26:42 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/5254806/blog/10322777</guid>
            <link>https://my.oschina.net/u/5254806/blog/10322777</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[大多数严重网络攻击都源于不到 1% 的漏洞]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">网络安全软件提供商 Qualys 发布了一份「<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.qualys.com%2Fvulnerabilities-threat-research%2F2023%2F12%2F19%2F2023-threat-landscape-year-in-review-part-one" target="_blank">2023 年威胁态势回顾</a>」的研究报告。详细介绍了漏洞威胁态势、主要漏洞类型和其他相关数据的关键见解，包括平均利用时间、MITRE ATT&amp;CK 策略和技术，以及 2023 年最活跃的勒索软件和威胁行为者。</span></p><p><span style="color:#000000">截至报告成文时，2023 年共披露了 26,447 个漏洞，比 2022 年披露的漏洞总数多了 1,500 多个，是有史以来披露的最高数量。但并非所有漏洞都具有高风险，事实上，只有不到 1% 的漏洞会导致最高风险，并且经常被广泛利用。</span></p><p><span style="color:#000000"><img alt="" height="267" src="https://oscimg.oschina.net/oscnet/up-6c4543e7ec1ce3b06a0a8d7e071286489ad.webp" width="500" referrerpolicy="no-referrer"></span></p><p><span style="color:#000000"><img alt="" height="253" src="https://oscimg.oschina.net/oscnet/up-33ab1f11fb9bec4cecc7e8181bba654c281.webp" width="500" referrerpolicy="no-referrer"></span></p><ul><li><span style="color:#000000">在已披露的漏洞中，超过 7,000 个漏洞具有概念验证漏洞利用代码，可能会导致成功利用漏洞。但漏洞利用代码的质量通常较低，这可能会降低攻击成功的可能性。</span></li><li><span style="color:#000000">大约 206 个漏洞具有可用的武器化利用代码，这意味着<span style="background-color:#ffffff">如果利用这些漏洞</span>，很可能会危害目标系统。</span></li><li><span style="color:#000000">有 115 个漏洞经常被威胁者、恶意软件和勒索软件组织（例如 Clop）利用。</span></li><li><span style="color:#000000">在观察到的漏洞中，109 个有被利用的已知证据，并被列入 CISA 已知被利用漏洞 (KEV) 清单。</span></li><li><span style="color:#000000">97 个漏洞已被利用，但未包含在 CISA KEV 列表中。</span></li><li><span style="color:#000000">LockBit 和 Cerber 等勒索软件集团利用了 20 个漏洞。此外，恶意软件和僵尸网络组织利用了 15 个漏洞。</span></li></ul><p><span style="color:#000000">超过三分之一的已识别高风险漏洞可以被远程利用。五种最常见的漏洞类型占已发现漏洞总数的 70% 以上。</span></p><p><span style="color:#000000"><img alt="" height="253" src="https://oscimg.oschina.net/oscnet/up-c379630bd2ad0f2b2de66be6226cedb00f8.webp" width="500" referrerpolicy="no-referrer">&nbsp;</span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000"><span style="background-color:#ffffff">2023 年高危漏洞的平均利用时间约为 44 天。但报告指出，在许多情况下，</span><span style="background-color:#ffffff">漏洞在发布当天就可以被利用。「这一立即行动代表了攻击者作案方式的转变，凸显了攻击者效率的不断提高和防御者响应窗口的不断缩小。」</span></span></p><p style="margin-left:0; margin-right:0; text-align:start"><strong>25% 的高风险 CVE 在发布当天就已被利用，</strong><span style="color:#000000"><span style="background-color:#ffffff">75% 的漏洞在发布后 19 天（大约三周）内被利用。</span></span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000"><span style="background-color:#ffffff">全年被利用的主要漏洞包括针对 PaperCut NG、MOVEit Transfer、各种 Windows 操作系统、Google Chrome、Atlassian Confluence 和 Apache ActiveMQ 的漏洞。许多漏洞可以远程利用，无需物理访问目标系统。</span></span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000">在已发现的 206 个漏洞中，有 32.5% 的漏洞位于网络基础设施或 Web 应用程序领域，而这些领域传统上很难通过常规手段进行防护。</span></p><p><span style="color:#000000"><strong>远程服务利用（T1210 和 T0866）、面向公众的应用程序的利用（T1190 和 T0819）</strong>和<strong>特权升级利用 (T1068)​​​​​​​<strong style="color:#6a778b">&nbsp;</strong></strong>是 MITRE ATT&amp;CK 的三大策略。其中最常用的远程服务利用，在企业中出现了 72 次，在工业控制系统中出现了 24 次。面向公众的应用程序的利用在企业中出现了 53 次，在工业控制系统中出现了 19 次；特权升级利用排在第三位，记录了 20 次。</span></p><p><span style="color:#000000">为了降低风险，报告建议企业应采用多层次方法，利用各种传感器清查面向公众的应用程序和远程服务的漏洞。并建议根据列入 CISA KEV 列表、高利用概率分数和武器化利用代码的可用性等因素，确定修复工作的优先顺序。</span></p><p>更多详情可<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.qualys.com%2Fvulnerabilities-threat-research%2F2023%2F12%2F19%2F2023-threat-landscape-year-in-review-part-one" target="_blank">查看完整报告</a>。</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 20 Dec 2023 09:22:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271898/2023-threat-landscape-year</guid>
            <link>https://www.oschina.net/news/271898/2023-threat-landscape-year</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[倪光南院士：希望国产 SSD 替代进口 HDD]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>「2023 探索大会」今日在北京举办，中国工程院院士倪光南在会上表示：「我们希望在存储界迅速地推进以半导体存储取代机械存储这样一个科技革命的趋势，<strong>推动国产 SSD 产品替代进口的 HDD 产品</strong>。」</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-e03cbbc2dbb4d357d48b52d863fe3d1c73a.png" referrerpolicy="no-referrer"></p><p>倪光南院士称，半导体存储以其高性能、低功耗等优势，正在逐渐取代传统的机械存储。这次科技革命将带来巨大的产业变革，对于推动国产 SSD 产品替代进口的 HDD 产品，以及提升我国在全球半导体存储领域的地位具有重大意义。然而，要实现这个目标，我国还需要在人才储备等方面得到大力支持。与发达国家相比，我国在半导体存储领域的人才储备还有一些差距。因此，倪光南院士呼吁相关部门和企业能够在这方面给予更多的支持和关注。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-24efc7c284d1c70c6dca31b2f9c63c3bdb1.png" referrerpolicy="no-referrer"></p><p>倪光南在今年 6 月的第十三届电子信息产业标准推动会上指出，目前 HDD 市场均被外企垄断，在 HDD 领域寻求突破异常困难。倪光南提到，闪存和 SSD 均属于半导体存储范畴，闪存指的是存储介质，即闪存颗粒，SSD 指的是存储设备。</p><p>目前我国算力中心中采用 SSD 的占比较低，在我国存储市场中，闪存所占比例还较低，未来发展空间巨大。他表示，随着我国国产存储整机和闪存生产能力逐步提升，SSD 取代 HDD 时机已经到来。</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 20 Dec 2023 08:09:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271880</guid>
            <link>https://www.oschina.net/news/271880</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[知名开源项目作者因躁狂症失业——「在线求打钱」]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Requests 是知名的 Python HTTP 库（项目已捐赠给 Python 软件基金会）。</p><blockquote><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-572c04dd97a41d6c7e7474bfd845177323f.png" referrerpolicy="no-referrer"></p></blockquote><p>最近 Requests 作者 Kenneth Reitz 在社交媒体表示自己目前的财务情况出现问题，所以需要<strong>寻求资金来维持基本生存</strong>。</p><blockquote><p><img src="https://static.oschina.net/uploads/space/2023/1220/122429_Vhez_2720166.png" referrerpolicy="no-referrer"></p><p><strong>我目前正在寻求资金，以维持我们的生计。到目前为止，我所担任的职位在经济上并不宽裕。虽然我正在努力，但我们现在的生活还是捉襟见肘。有人愿意帮忙吗？<br> 我已经安装了 CashApp。</strong></p><p>via&nbsp;<em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftwitter.com%2Fkennethreitz42%2Fstatus%2F1734713908735230191" target="_blank">https://twitter.com</a></u></em></p></blockquote><p>Kenneth Reitz 最近的推文<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftwitter.com%2Fkennethreitz42%2Fstatus%2F1734575827545723236" target="_blank">显示</a></u>，其本人正在寻找新的工作机会——缺少稳定的收入来源，也难怪 Kenneth Reitz 需要「在线求打钱」。</p><blockquote><p><img height="330" src="https://static.oschina.net/uploads/space/2023/1220/120541_XEHC_2720166.png" width="1280" referrerpolicy="no-referrer"></p><p><img src="https://static.oschina.net/uploads/space/2023/1220/121110_Kh2A_2720166.png" referrerpolicy="no-referrer"></p></blockquote><p>Kenneth Reitz 还<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftwitter.com%2Fkennethreitz42%2Fstatus%2F1734731803858968577" target="_blank">坦言</a></u>几周前自己<strong>因躁狂症而失业</strong>。</p><blockquote><p><img src="https://static.oschina.net/uploads/space/2023/1220/121840_F9TY_2720166.png" referrerpolicy="no-referrer"></p></blockquote><p>下面是 Kenneth Reitz 的作品和简介：</p><p><img src="https://oscimg.oschina.net/oscnet/up-f59b6ee0dd1750cca83570ae8cdeae8e246.png" referrerpolicy="no-referrer"></p><p>via&nbsp;<em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkennethreitz" target="_blank">https://github.com/kennethreitz</a></u></em></p><hr><p>延伸阅读</p><ul><li><a href="https://www.oschina.net/news/106470/why-im-not-collaborating-with-kenneth-reitz" target="_blank">知名 Python 库 Requests 作者&nbsp;Kenneth Reitz 被指骗捐</a></li><li><a href="https://www.oschina.net/news/197320/python-requests-library-domain-expired" target="_blank">Python HTTP 库 Requests 官网域名已过期</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Wed, 20 Dec 2023 04:14:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271855</guid>
            <link>https://www.oschina.net/news/271855</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[用 600 万人的数据集训练出预测人类死亡时间的大模型]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.newscientist.com%2Farticle%2F2408480-ai-trained-on-millions-of-life-stories-can-predict-risk-of-early-death%2F" target="_blank">根据 NewScientist 的报道</a></u>，丹麦科技大学研究团队近日发布了一款新的大模型产品，<strong>可以预测人类的死亡几率</strong>。</p><p><img height="1402" src="https://static.oschina.net/uploads/space/2023/1220/111104_rUMq_2720166.png" width="2500" referrerpolicy="no-referrer"></p><p>该团队领导人 Sune Lehmann Jørgensen 表示，该模型名为 <strong>Life2vec</strong> ，由一个独特的丰富数据集进行训练，而数据集涵盖了从 2008 年到 2020 年 600 万人的教育、看病和就医情况、诊断结果、收入和职业。</p><p>研究团队表示，在实验中他们收集了一组年龄在 35 岁至 65 岁之间的人的数据，其中一半人在 2016 年至 2020 年间死亡。研究人员要求 Life2vec&nbsp;预测哪些人活着，哪些人死亡。结果显示，它比金融行业中用于定价人寿保险保单的现有人工智能模型或精算生命表准确率高出 11%。</p><p>此外，Life2vec 还能比经过专门训练的人工智能模型更准确地预测人口子集的性格测试结果。</p><p>Sune Lehmann Jørgensen 认为，该模型已使用足够的数据进行训练，因此它应该可以揭示普遍的健康和社会主题。这意味着它可以用来预测健康问题并及早发现它们，或者被政府用来消减不平等现象——这或将为未来公共健康科学开辟一种全新的评估模式。</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 20 Dec 2023 03:11:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271848/ai-llm-predict-risk-of-early-death</guid>
            <link>https://www.oschina.net/news/271848/ai-llm-predict-risk-of-early-death</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[2023 全球十大工程成就发布：ChatGPT、鸿蒙操作系统、中国空间站等入选]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>12 月 20 日，由中国工程院院刊《Engineering》评选的 「<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2F8ABT0lPLOHjHGoazMA60FQ" target="_blank">2023 全球十大工程成就</a></u>」正式发布。</p><p><img src="https://oscimg.oschina.net/oscnet/up-cc3a6043e931597f51ac42d9cd9200fd083.png" referrerpolicy="no-referrer"></p><p>据介绍，本年度入围的「全球十大工程成就」，主要指过去五年由世界各国工程科技工作者合作或单独完成且实践验证有效的、并且已经产生全球影响的工程科技重大创新成果，既包括重大工程项目或关键技术装备，也涵盖工程科技关键性原始创新与突破。</p><p>本次评选出的成就包括：<strong>ChatGPT、中国空间站、百亿亿次超级计算机、白鹤滩水电站、双小行星重定向测试、RTS,S/AS01 疟疾疫苗、鸿蒙操作系统、Spot &amp; Atlas 机器人、锂离子动力电池、无人驾驶航空器</strong>。</p><h4><strong>ChatGPT</strong></h4><p>2022 年 11 月 30 日，美国 OpenAI 公司推出聊天机器人产品 ChatGPT。作为一种基于注意力学习机制的自然语言生成神经网络模型，ChatGPT 通过自监督学习、有监督微调和人在回路强化学习相互结合，可以实现文本内容合成、机器翻译、自动文档摘要、代码生成等功能。ChatGPT 是迄今为止通过自然语言交互获得人工智能赋能最成功的产品之一，为人类实现通用人工智能提供了一种范式。</p><p><img src="https://static.oschina.net/uploads/space/2023/1220/104232_xj46_2720166.png" referrerpolicy="no-referrer"></p><h4><strong>中国空间站</strong></h4><p>2022 年 11 月，中国空间站在历经 11 次发射任务后完成在轨组装建造。中国空间站本体由 3 舱组成，入轨总质量 67.5 吨，航天员活动空间 122 立方米，可实现长期 3 人、短期 6 人驻留，配备 4 台独特的 LT-100 型大功率霍尔电推进发动机维持轨道运行，采用先进再生式生命保障技术实现资源闭环利用。中国空间站的建成和运行，将为人类太空探索和开发提供更加广阔的前景和机会。</p><p><img src="https://static.oschina.net/uploads/space/2023/1220/104313_L46r_2720166.png" referrerpolicy="no-referrer"></p><h4><strong><strong>百亿亿次超级计算机</strong></strong></h4><p>2022 年 5 月 30 日，美国能源部橡树岭国家实验室与 AMD 合作建造的「FRONTIER」超级计算机系统，以每秒 1.1×1018 次浮点运算，被国际超级计算组织评为世界上运行速度最快的计算机。作为全球首个突破每秒百亿亿次性能的计算机，「FRONTIER」超级计算机开启了 E 级计算的新时代，将为解决目前世界上最严峻的科学挑战，如精确的气候预测、核聚变模拟、新材料和新药物研发等，提供更加有力的计算工具。</p><p><img src="https://static.oschina.net/uploads/space/2023/1220/104352_40QF_2720166.png" referrerpolicy="no-referrer"></p><h4><strong>白鹤滩水电站</strong></h4><p>2022 年 12 月 20 日，位于中国金沙江下游干流的白鹤滩水电站全部机组投产发电。电站大坝为 300 米级特高混凝土双曲拱坝，在国际上首次全坝使用低热水泥混凝土浇筑。电站安装全球首批 16 台单机容量百万千瓦的水轮发电机组，引领水力发电进入单机百万千瓦新时代。白鹤滩水电站与三峡工程、葛洲坝工程、乌东德水电站、溪洛渡水电站、向家坝水电站，构成了中国长江上跨越 1800 千米的全球最大清洁能源走廊。</p><p><img src="https://static.oschina.net/uploads/space/2023/1220/104453_695T_2720166.png" referrerpolicy="no-referrer"></p><h4><strong>双小行星重定向测试</strong></h4><p>2022 年 9 月 27 日，美国国家航空航天局利用发射总质量 610 千克的「双小行星重定向测试」航天器，在距离地球 1100 万千米的太空中，以 6.6 千米 / 秒的相对速度，撞击一组近地双小行星系统中较小的一颗小行星，从而将其轨道周期缩短了 32 分钟。这是人类首次开展的保护地球免受小行星撞击威胁的测试任务，成功展示了人类有目的地改变天体轨道运动的能力。</p><p><img src="https://static.oschina.net/uploads/space/2023/1220/104521_lFKR_2720166.png" referrerpolicy="no-referrer"></p><h4><strong><strong>RTS,S / AS01 疟疾疫苗</strong></strong></h4><p>2021 年 10 月 6 日，世界衞生组织首次建议在一些疟疾传播风险较高的地区给儿童接种 RTS,S / AS01 疟疾疫苗。这是全球首款获批的疟疾疫苗，由英国葛兰素史克公司与 PATH MVI 合作开发。该疟疾疫苗创新性地将恶性疟原虫环子孢子蛋白 CSP 的 C-末端序列与乙型肝炎病毒表面抗原融合、组装成病毒样颗粒结构的亚单位疫苗，极大提高了免疫原性。疟疾疫苗的研制成功是人类抗击疟疾史上的重要的里程碑事件。</p><p><img src="https://static.oschina.net/uploads/space/2023/1220/104537_KQxl_2720166.png" referrerpolicy="no-referrer"></p><h4><strong><strong><strong>鸿蒙操作系统</strong></strong></strong></h4><p>2019 年 8 月 9 日，华为公司发布了全新的基于微内核、面向全场景的分布式操作系统 —— 鸿蒙操作系统。鸿蒙系统首次将分布式架构用于终端操作系统，实现用户跨终端无缝协同体验，采用全新的微内核设计重塑终端设备可信安全，通过统一 IDE 支撑一次开发，多端部署，实现跨终端生态共享。鸿蒙操作系统为人、设备、场景的互联互通提供了解决方案，代表了面向全场景智慧时代的技术创新。</p><p><img src="https://static.oschina.net/uploads/space/2023/1220/104552_FA8q_2720166.png" referrerpolicy="no-referrer"></p><h4><strong><strong><strong><strong>Spot &amp; Atlas 机器人</strong></strong></strong></strong></h4><p>近年来，美国波士顿动力发布的每款新机器人都会给人们带来了视觉上和认知上的强烈冲击。升级版的四足机器人 Spot，具有 360 度避障功能，可以在不同地形、环境下行走、跑步、攀爬等；新一代 Atlas 双足人形机器人，拥有 28 个自由度，可以自然连贯地完成跳跃、翻滚、倒立、跳舞、跑酷等动作。波士顿动力机器人代表了当今机器人研发的最先进水平，呈现出广阔的产业应用前景。</p><p><img src="https://static.oschina.net/uploads/space/2023/1220/104612_UOF2_2720166.png" referrerpolicy="no-referrer"></p><h4><strong>锂离子动力电池</strong></h4><p>锂离子动力电池以锂离子嵌入化合物为正极材料、以碳素材料为负极材料，具有高能量密度、长寿命、轻量环保等优势。近年来，锂离子动力电池关键核心技术不断突破，电池系统能量密度达到 255Wh/kg，循环寿命超过 5000 次，热扩散时间提高至大于 24 小时，安全性能大大提升。作为一种新型能源存储技术，锂离子动力电池已在电动汽车、电动轻型车、电动工具、航空航天等领域得到广泛应用。</p><p><img src="https://static.oschina.net/uploads/space/2023/1220/104627_RaM8_2720166.png" referrerpolicy="no-referrer"></p><h4><strong><strong>无人驾驶航空器</strong></strong></h4><p>无人驾驶航空器是由人为远程操作或自主程序控制、可执行多种任务的无人飞行器。近年来，随着动力技术、悬停技术、导航技术、人机交互、集群技术、人工智能的不断突破，无人机快速迈向智能化、小型化、集群化、体系化。大疆、Parrot、3D Robotics 等公司引领全球无人机技术及产业进步。作为一种具备高度灵活性的运载工具，无人驾驶航空器在军事及民用等诸多领域表现出极具潜力的应用前景。</p><p><img src="https://static.oschina.net/uploads/space/2023/1220/104641_1sWG_2720166.png" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 20 Dec 2023 02:39:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271838</guid>
            <link>https://www.oschina.net/news/271838</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Linux 主线内核支持谷歌 Tensor GS101 芯片 & Pixel 6]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.phoronix.com%2Fnews%2FLinux-6.8-GS101-SoC-Pixel-6" target="_blank">根据 Phoronix 的报道</a></u>，Google Tensor GS101 SoC 于 2021 年推出，搭载在 Google Pixel 6 智能手机上。经过两年多的时间，主线 Linux 内核终于将在即将到来的 Linux 6.8 内核周期中看到对 GS101 SoC 和 Pixel 6 的支持。这意味着 Linux 内核将提供对这些设备的原生支持，而不再依赖于各种 Android/AOSP 下游内核源。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-af38da392f9a814dc517d6eb77c3e5df165.png" referrerpolicy="no-referrer"></p><p>GS101 「Whitechapel」 SoC 是一款八核处理器，混合了 Cortex X1 / A76 / X55 内核、Mali-G78 MP20 显卡，基于 5nm LPE 三星工艺构建。</p><p>经过多轮代码审查后，最初的 Google Tensor GS101 支持补丁以及 Pixel 6 智能手机设备树已在即将到来的 Linux 6.8 周期之前进入三星 SoC 树的「for-next」分支。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-4ddc6490c7f6e7ba62340afc154b29adbf2.png" referrerpolicy="no-referrer"></p><p>借助 Pixel 6 「Oriole」 支持，它已经在这个即将成为主线的代码上进行了测试，可以使用最小的 Busybox initramfs 启动并成功访问 shell。</p><p>在最近针对 Tensor/GS101 SoC 支持和 Pixel 6 主板覆盖范围的补丁系列中，可以看到 gs101/Tensor SoC 还用于 Pixel6a（bluejay）和 Pixel 6 Pro（raven）手机。 目前，gs101 SoC 和 Oriole 添加了 DT。<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgit.kernel.org%2Fpub%2Fscm%2Flinux%2Fkernel%2Fgit%2Fkrzk%2Flinux.git%2Flog%2F%3Fh%3Dfor-next" target="_blank"> 正如在补丁中看到的那样</a></u>，SoC 基于 Samsung Exynos SoC，因此许多底层 Exynos 驱动程序和绑定可以重复使用。</p><p>本系列中添加的支持包括：</p><ul><li>cpus</li><li>pinctrl</li><li>CCF implementation of cmu_top, cmu_misc &amp; cmu_apm</li><li>watchdog</li><li>USI uart</li><li>gpio</li></ul><p>这足以使用上游内核启动到 busybox initramfs 和 shell，在接下来的几周和几个月内，Linux 内核将添加更多平台支持。</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 20 Dec 2023 02:24:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271837/linux-6-8-gs101-soc-pixel-6</guid>
            <link>https://www.oschina.net/news/271837/linux-6-8-gs101-soc-pixel-6</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[工信部：将制定符合国情的 Web3.0 发展战略文件]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">工信部于 12 月 19 日公布了<span style="background-color:#ffffff">《<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.miit.gov.cn%2Fzwgk%2Fjytafwgk%2Fart%2F2023%2Fart_7eba1016ef5a4d98979b0167f38e4b35.html" target="_blank">对全国政协十四届一次会议第 02969 号提案的答复</a>》（即</span>《关于推进 Web3 产业发展的提案》<span style="background-color:#ffffff">）。</span></span></p><p><img alt="" height="284" src="https://static.oschina.net/uploads/space/2023/1220/095646_yU57_4252687.png" width="700" referrerpolicy="no-referrer"></p><p><span style="color:#000000"><span style="background-color:#ffffff">其中提出，下一步将在已开展工作的基础上，</span>加强与相关部门的协同互动，推动 Web3.0 技术创新和产业高质量发展。</span></p><p style="color:#070707; margin-left:0; margin-right:0; text-align:left"><span style="color:#000000">一是完善顶层设计。加强 Web3.0 调查研究，制定符合我国国情的 Web3.0 发展战略文件，明晰 Web3.0 发展路径、技术重点、应用模式，处理好继承与创新、发展与安全、政府与市场、供给与需求的关系。聚焦政务、工业等重点领域，鼓励开展 NFT、分布式应用（DApp）等新商业模式，加速 Web3.0 的创新应用和数字化生态构建。</span></p><p style="color:#070707; margin-left:0; margin-right:0; text-align:left"><span style="color:#000000">二是加强技术研究和监管。支持企业、高校、研究机构开展 Web3.0 技术体系研究，在跨链、隐私计算、智能合约等方面实现关键核心技术突破。部署区块链安全监管与治理技术研究，开展联盟链技术收敛和跨链互认研究，探索兼顾公有链开放特性和联盟链易监管特性的区块链技术体系架构。加大数据安全产品研发支持力度，加强网络产品安全漏洞管理，提升 Web3.0 发展中的网络和数据安全保护能力。</span></p><p style="color:#070707; margin-left:0; margin-right:0; text-align:left"><span style="color:#000000">三是开展国际交流合作。紧密跟踪国际政产学研各界关于 Web3.0 的前沿动态。鼓励科研院所、高校、企业等参与 Web3.0 相关全球标准化活动，推动参与和主导 Web3.0 相关国际标准、事实标准、国际联盟标准制定，提升国际话语权和规则制定权。加快复合型人才培养，培育富有创新能力的高端人才，建设高水平人才队伍。</span></p><p style="color:#070707; margin-left:0; margin-right:0; text-align:left"><span style="color:#000000">四是加大技术宣传和推广。建好用好已有科普平台资源，通过科普中国等官方新媒体平台的传播，持续提高公众对 Web3.0 技术的理解和认识。推动开展分布式数字身份（DID）等应用试点，探索机构和个人 Web3.0 数字身份认证和数字资产管理体系，建立数据治理和交易流通机制，形成可复制可推广的典型示范项目。推动 Web3.0 学术进步和技术成果应用，搭建技术和产业应用交流平台，促进 Web3.0 产业创新发展。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 20 Dec 2023 01:57:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271831</guid>
            <link>https://www.oschina.net/news/271831</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[道客加入 openKylin，携手探索和推广云原生技术！]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span>近日，上海道客网络技术有限公司（以下简称」道客「）签署了 openKylin 社区 CLA（Contributor License Agreement 贡献者许可协议），正式加入 openKylin 开源社区。</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:center"><img alt="" height="1079" src="https://oscimg.oschina.net/oscnet/up-ab9bed0a81b0e3a2f642b2497de73ff3756.png" width="829" referrerpolicy="no-referrer"></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span><span>「DaoCloud 道客」，云原生领域的创新领导者，成立于 2014 年底，拥有自主知识产权的核心技术，致力于打造开放的云操作系统为企业数字化转型赋能。产品能力覆盖云原生应用的开发、交付、运维全生命周期，并提供公有云、私有云和</span>混合云<span>等多种交付方式。</span></span></p><p><span>成立迄今，道客已在金融科技、先进制造、智能汽车、零售网点、城市大脑等多个领域深耕，是国家级「专精特新」小巨人企业、上海市高新技术企业、上海市&nbsp;「科技小巨人」&nbsp;企业和上海市&nbsp;「专精特新」&nbsp;企业，并入选了科创板培育企业名单。</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:center"><img alt="" height="410" src="https://oscimg.oschina.net/oscnet/up-30755a6d93b64206b86f9831c2758798f8b.png" width="940" referrerpolicy="no-referrer"></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span>加入 openKylin 社区后，道客将与 openKylin 共同探索和推广云原生技术。作为在云原生领域的领跑企业，道客拥有前沿的创新技术、丰富的云原生实践经验和广泛的生态连接，这将促进云原生技术在 openKylin 操作系统上的应用和发展，推动 openKylin 生态圈的进一步扩大。</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span>同时，道客将与 openKylin 共享开源资源。openKylin 开源社区和道客都致力于开源技术的推广和共享。双方可以分享各自的开源项目和经验，互相学习和借鉴，这有助于加速技术的发展和创新，建立互利共赢的良性循环。</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span>此外，双方可以共同组织技术交流会议、研讨会和培训活动，为双方成员以及外部其他开源社区成员提供学习和交流的机会。双方将联合推动开源项目的合作开发，促进项目之间的互操作性和协同工作。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 20 Dec 2023 01:27:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271824</guid>
            <link>https://www.oschina.net/news/271824</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[开源不挣钱？这个项目上线半年月入超 30w]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>很兴奋的告诉大家，Sealos 自从 6 月份上线以来，<strong>仅半年时间注册用户已经突破 7 万，月收入超过 30w</strong>，本文来向大家介绍我们是怎么做开源商业化的。每月平均增速超过 40%，而且这些收入大部分来自用户充值，或者是通过开源社区主动找到我们付费。</p><h2>商业化的重要性</h2><p>作为一家创业公司做开源，我们除了融资那点钱，没有别的收入来源，不像大厂可以有其它现金流来补开源这块，我们不考虑商业化那就会死，死了项目就无法维护和加大投入，最终就是用户和我们双输。</p><p>而有了能走通的商业模式，我们就能创造营收，有了营收就可以招更多的人，融更多的钱，加大更多的投入，发展更大的市场，客户多了边际成本就可以下降，每个用户也就能得到价格更便宜，质量更好的产品，是个良性循环，资金像血液一样驱动整个项目蓬勃向前发展，最终用户和我们都受益，双赢。</p><p>fake.js 作者因为没有好的商业模式而关停项目就实属可惜。</p><p><img src="https://oscimg.oschina.net/oscnet/up-3b6082bb17923dd8037723829e91d0bc16c.webp" alt="" referrerpolicy="no-referrer"></p><p>当然我也非常敬重那些非常有情怀只做免费开源视金钱如粪土的人，不过在我看来钱是工具，是杠杆，有这个可以让项目几十上百倍速度发展。</p><h2>那为什么不闭源</h2><p>既然要收钱干嘛还要开源？来搞伪开源嘛？</p><p>首先，我自己乃至我们整个团队都觉得开源是一件很酷的事情，你的代码是需要给很多人看的，要求自然就高，开源确实是在写代码鄙视链的顶端，热爱是内驱因素，<strong>看到 Star 涨就是开心，看到上榜就是欢乐</strong>。</p><table><thead><tr><th><img src="https://oscimg.oschina.net/oscnet/up-d66a25551f2412f7e942ca91d5825bf9505.png" alt="" referrerpolicy="no-referrer"></th><th><img src="https://oscimg.oschina.net/oscnet/up-889096cd75a3e0dc9539bf680434900a7f2.png" alt="" referrerpolicy="no-referrer"></th><th><img src="https://oscimg.oschina.net/oscnet/up-94a70962f6c6633dc013cb73b41d0e2d91d.png" alt="" referrerpolicy="no-referrer"></th></tr></thead></table><p>第二，确实因为开源是非常好的协作模式，你的客户更容易提需求，更容易定制自己需要的东西，更容易给社区贡献一起共建。我们能发展这么好社区力量至少占了 30%。</p><p>第三，本着尽可能对用户负责，我希望<strong>哪怕我这家公司挂了，我们项目还在，用户还能继续用我们的东西</strong>，而不用提心掉胆一个小公司死了我的业务怎么办，最坏情况是自己还可以搭一套。</p><ul><li>Sealos: <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Flabring%2Fsealos" target="_blank">https://github.com/labring/sealos</a></li><li>FastGPT: <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Flabring%2FFastGPT" target="_blank">https://github.com/labring/FastGPT</a></li><li>Laf: <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Flabring%2Flaf" target="_blank">https://github.com/labring/laf</a></li></ul><p>当然，开源确实会带来更大的客户流量，<strong>我们公司 0 销售人员，靠的全是客户主动找上我们</strong>，不开源几乎很难做到。而且开源是一个试金石，你技术不行产品力不行就是做不起来，开发者都挑剔的很，东西不好不管是平台背书还是使劲宣传都没啥卵用。</p><h2>开源做太好，大家就不付钱了？</h2><p>其实有些时候确实是这样，你做差了用户不会用，你做太好了用户不掏钱，所以现在很多开源项目会<strong>区分企业版和开源版</strong>，我是不喜欢这种方式的，因为维护两个版本是很累的事，每次都需要考虑哪些东西合并企业版，哪些东西不合并，时间一久两个版本就直接分叉了，后面直接索性开源版不投入了，这种方式很别扭，不高级。</p><p>还有一种就是<strong>服务收费</strong>，大客户愿意掏钱买平安，找最专业的团队维护他们的系统，官方团队肯定最专业，是个不错的方式。但是这种有两个问题，首先项目团队得撑到那一天，大客户通常比较认你的市场地位，发展到一定知名度的时候可能才有这个机会，很多人没到这一天自己就挂了。其次，这种模式也挑项目，通常重要性比较高的东西，像网关，数据库，安全这些关乎企业生死的东西愿意掏钱。</p><p>然后就是云服务，这是一种很香的商业模式，<strong>用户看了开源确实想用的时候，通过云服务是最快能用起来的方式。</strong></p><p><img src="https://oscimg.oschina.net/oscnet/up-ee607865098282b09f4016ab81ff0c69b65.jpg" alt="" referrerpolicy="no-referrer"></p><h2>我们的商业模式</h2><p>Sealos 是做<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsealos.run%2Fdocs%2FIntro" target="_blank">云操作系统</a>的，所以云服务就是就是我们天生不二之选，所以我们几乎从创业第一天开始就在做<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcloud.sealos.io" target="_blank">云服务</a>。</p><p>Sealos 特别有意思，在诞生第一天起就是收费的，最早期时是卖安装包，代码开源但是安装包收费，如果用户自己根据源码去构建安装包可能需要一周时间，而拿 168 元就可以立马下载，所以卖了很多。而对于我而言早就写好了机器人去做这些事，完全实现了睡后收入，这样有更多精力来做新功能。</p><p>即便 Sealos 的开源做的非常完美，用户还是有非常大可能性用云服务，因为云服务提供了额外的附加值：</p><ul><li><strong>使用上更简单可以打开浏览器直接用。</strong></li><li><strong>我们维护肯定比你自己维护专业。</strong></li><li><strong>用户一多每个用户成本会下降。</strong></li><li><strong>持续升级更新。</strong></li></ul><p>但凡用户是可以用公有云的大概率还是会用，而不会去自己吭哧吭哧搭建。</p><p>这里有非常需要注意的一点，就是开源提供了核心能力，商业化提供了附加值，而附加价值通常是让用户更方便了，但是用户通常愿意为附加值付出的价格是非常有限的，一旦你太贵就会导致用户拿开源自己搭建。这就造成一个非常尴尬的境地，收少了养不活自己，收多了用户自己搭。</p><p>所以云服务还有一个非常重要的逻辑，就是成本转移，<strong>以前用户需要付给别的厂商的钱现在付给你了，这样用户付给你的钱就多了，用户需要支出的总成本还可能降低了</strong>，你的商业模式中让用户总成本降低是非常核心关键的部分。比如用户自建，还是得买服务器吧，而用我们服务就可以把买服务器的钱花在我们这，享受更便捷成本更低的服务。</p><p><img src="https://oscimg.oschina.net/oscnet/up-39d7662898a5d90f1ea33420409d2401732.jpg" alt="" referrerpolicy="no-referrer"></p><p>私有云情况就不一样了，用户必须要自己搭建，这个时候我们就延续了 Sealos 一开始的商业模式，但是更牛逼了，而不是收安装包的下载费用了，我们在 Sealos 内部实现了计量系统，用户可以通过 Licence 充值，即便私有云也是有账户余额，按量计费，用完了就得续 Licence，拿着一个加密文件到集群中 apply 额度就充进去了。这是个绝妙的构想：</p><ul><li>很多私有软件的授权过程很恶心，需要采集硬件信息什么的，Sealos 不需要。</li><li>实现了公有云和私有云计费方式的完全统一，顺便一起解决了企业内部人员配额问题。</li><li>针对大小不同的客户都有合理的价格，不会出现小客用不起，大客不敢用的情况。</li></ul><p>这样收费会不会让用户反感？</p><p>我还是觉得提供价值合理收费天经地义，原则也是尽可能找到<strong>让客户与项目整体利益最大化的点</strong>，收费贵了伤害了用户利益，收费便宜了我们没法快速前进，要平衡好这中间的利益关系，是个矛盾统一体。</p><p>私有云技术上也得有很强的实力才行，我们推崇「自助式私有云」，也就是大部分用户是有能力自己完成整个交付过程的，几乎不用我们干预，这也是能把价格降低的核心因素，比如 <strong>512 元的私有云集群你敢想？任何一家企业做这种生意都会亏死吧？</strong> 但是这个价格 Sealos 能做，因为我们可以标准化，自助式，规模化，这样小的集群未来我们可以卖 10 万套。</p><h2>总结</h2><p>开源商业化是个非常有意思的过程，比单纯做开源有趣的多，而且能真的把雪球滚起来，形成良性循环，最终固定成本提高，边际成本极速下降，用户就能享受到优质的便宜的产品，项目方也可以盆满钵满。</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 19 Dec 2023 09:36:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/4148359/blog/10322473</guid>
            <link>https://my.oschina.net/u/4148359/blog/10322473</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[我们都应该学习 PHP]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff; color:#333333">估计有很多朋友是因为 PHP 这三个字母进来阅读的。现在开发者社区里面都在贬低 PHP，唱衰 PHP，已然成了一个梗。但我觉得 PHP 非常值得大家重新认识，PHP 开发者社区也非常值得大家学习。不见得是来学习 PHP 这门编程语言，可以学习 PHP 这门语言的设计思想和 PHP 开发者社区的运作模式。</span><br><br><span style="background-color:#ffffff; color:#333333">PHP 这三个字母官方的含义是这样的——</span><strong>P</strong><span style="background-color:#ffffff; color:#333333">HP:<span>&nbsp;</span></span><strong>H</strong><span style="background-color:#ffffff; color:#333333">ypertext<span>&nbsp;</span></span><strong>P</strong><span style="background-color:#ffffff; color:#333333">reprocessor。但我想对 PHP 这三个字母做一个新的解读：</span><span style="background-color:#ffffff; color:#e53333"><strong>P</strong></span><span style="background-color:#ffffff; color:#e53333">ragmatic</span><span style="background-color:#ffffff; color:#e53333"><strong>、H</strong></span><span style="background-color:#ffffff; color:#e53333">umanized、</span><span style="background-color:#ffffff; color:#e53333"><strong>P</strong></span><span style="background-color:#ffffff; color:#e53333">ermanent</span><span style="background-color:#ffffff; color:#333333">。这三个单词也是我们所熟知的</span><span style="background-color:#ffffff; color:#e53333">注重实效、人性化设计和长期主义</span><span style="background-color:#ffffff; color:#333333">。在我看来，PHP 这门编程语言和它背后的开发者社区非常深刻地体现了这三种思想，而这正是我们现在提倡的回归的经营本质。</span><br><br><span style="background-color:#ffffff; color:#333333">这么说有点太抽象，还是来举具体的例子吧。我说一个所有做管理软件的团队都会遇到的问题，</span><span style="background-color:#ffffff; color:#e53333">如何应对客户的定制化需求</span><span style="background-color:#ffffff; color:#333333">？</span><br><br><strong>可能的解决方案之一是开分支</strong><span style="background-color:#ffffff; color:#333333">。开一个分支，在分支上进行定制开发，然后交付给客户。Git 开分支很快，瞬间就完成了，挺简单的。但如果有十个客户、几十个客户、几百个客户呢？分支的维护就是巨大的成本。比如产生了 Bug，需要在几十乃至上百个分支里面进行代码的合并更新，这个维护工作就要了命了。</span><br><br><strong>另外一种可能的解决方案是在代码里面预留各种各样的配置开关</strong><span style="background-color:#ffffff; color:#333333">。针对不同的客户采用不同的配置或者开关。但这种方式会造成大量的代码冗余，程序结构复杂冗长，逻辑结构不清晰。长期积累下来之后，代码就难以更新维护，成为屎山一样的代码。而且也没有办法完全解决客户个性化的问题，搞不好还是需要开分支来解决。</span><br><br><strong>到后来低代码开发平台就开始流行</strong><span style="background-color:#ffffff; color:#333333">。其实这也不是什么新鲜事。我记得在 2013 年左右的时候去一个客户那儿做培训，他们团队内部有一个高手，做了一套快速开发平台，给客户做交付全是在这个平台上进行各种配置。表面上来看是快了，但实际上</span><span style="background-color:#ffffff; color:#e53333">复杂度只会转移，不会消失</span><span style="background-color:#ffffff; color:#333333">。快速开发平台带来的问题是抽象不够、表现能力不强。受限于快速开发平台本身的能力，难以解决更深层次的业务逻辑问题。所以这时候就需要快速开发平台提供更强大的能力，比如逻辑判断、循环，甚至需要直接开放编程接口，允许用户自己写代码来实现。到最后快速开发平台本身就变成了一个开发语言。</span><br><br><span style="background-color:#ffffff; color:#333333">来说说我们禅道项目管理软件的解决方案吧。</span><strong>我们的解决方案就是给客户提供扩展</strong><span style="background-color:#ffffff; color:#333333">。而我们的这种能力是基于 PHP 的运行机制实现的。众所周知，PHP 是脚本语言，是动态加载动态执行的。而且它也有很完善的面向对象编程的机制，所以在 PHP 世界里面，可以做各种好玩的事情。禅道项目管理软件的代码分为了大家所熟知的 MVC 三层，即 Model、View、Controller。同时我们又细分了 Configuration、Language、CSS 和 JavaScript 这些概念。在框架层我们还有基础的 Framework 和核心的 Library。所有的这些不同层次的代码都是可以扩展的。禅道的所有请求都会经由一个单一入口来加载，框架在加载代码的时候会优先判断扩展目录里面有没有符合扩展规则的代码需要加载。如果有的话，就先加载扩展的代码。而扩展的代码在继承基础代码的基础上又可以做进一步的修改。通过这种方式我们就实现了非常完整的扩展机制，可以根据客户的需要做各种的改动。我们给客户交付的都是扩展代码，从来不开分支。</span><br><br><span style="background-color:#ffffff; color:#333333">禅道软件的这种扩展机制，其实是很简单的一种架构，没有什么太复杂高深的技术。无外乎就是定义各种的扩展规则，然后实现动态加载的逻辑就可以了。但恰恰是这种</span><strong>简单的架构是最有效的</strong><span style="background-color:#ffffff; color:#333333">。可以有效解决个性化定制和主干代码更新的问题。而这种能力是在 PHP 语言的动态机制基础上构建的。这是 PHP 注重实效的非常好的一个体现。</span><br><br><span style="background-color:#ffffff; color:#333333">PHP 社区也非常注重开发者友好。我就不多讲，简单说几个点。比如 PHP 的手册，非常成体系，非常翔实，是我见过所有编程语言里官方文档维护得最好的。PHP 在语言设计的时候也尽量给到开发者各种的自由，没有太多强制的地方。同一个问题在 PHP 世界里面有各种各样的实现方式。</span><br><br><strong>PHP 开发者社区也非常地稳健，不急不躁，稳步前进</strong><span style="background-color:#ffffff; color:#333333">。PHP 社区在更新迭代的时候采取了渐进式的方式，向下的兼容性做得很好。这样可以保证老版本 PHP 开发的程序也可以享受新版本 PHP 带来的性能提升的收益。两年前 PHP 社区还成立了基金会，</span><span style="background-color:#ffffff; color:#e53333">累计募集了超过 110 万美金的资金，截止今天账面上结余 73 万美金</span><span style="background-color:#ffffff; color:#333333">。在过去的一年里，PHP 基金会雇用了 6 位全职或者兼职的 PHP 开发人员。在新的一年里还会计划雇用 4 名开发人员。消息发出后，PHP 基金会共得到了 207 份申请。PHP 基金会从中选出了 12 名合格候选人的候选名单，又从中选出了 4 名杰出的开发者。自从成立了基金会之后，PHP 的发版速度也在加快，一切都在朝着更好的方向发展。</span><br><br><span style="background-color:#ffffff; color:#333333">今天是借 PHP 这门编程语言展开讨论。但其实在产品研发和企业经营过程中也是一样的道理。同样也需要注重实效、人性化设计和长期主义。随着新经济周期的到来，我相信会有越来越多的团队开始注重三者。</span><span style="background-color:#ffffff; color:#e53333">比如我最近就看到了好多从微服务架构重新用单体应用模式重构的案例</span><span style="background-color:#ffffff; color:#333333">。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 19 Dec 2023 09:15:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/easysoft/blog/10322559</guid>
            <link>https://my.oschina.net/easysoft/blog/10322559</link>
            <author>
                <![CDATA[开源春哥]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Arm 裁员 70 多名中国工程师，拟重组中国软件业务]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">彭博社援引知情人士<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ffortune.com%2Fasia%2F2023%2F12%2F18%2Farm-lays-off-over-70-software-engineers-in-china-and-will-relocate-some-of-the-jobs-outside-the-country-as-u-s-chip-restrictions-take-hold%2F%3Fref%3Dbiztoc.com" target="_blank">消息称</a>，A<span style="background-color:#fefefe">rm</span> 最近在中国<span style="background-color:#ffffff">解雇了 70 多名软件工程师，并将一些职位迁移到了亚洲以外的地区。</span></span></p><p><span style="color:#000000"><span style="background-color:#ffffff">在被裁撤职位的员工中，</span><span style="background-color:#ffffff">约有 15 人将被安排从事与中国相关项目的不同岗位上。而这些被</span><span style="background-color:#ffffff">裁掉的职位将暂由合同制软件工程师顶上，这些人都曾参与涉及 Arm 全球业务的项目。</span></span></p><p><span style="color:#000000"><span style="background-color:#fefefe">Arm 在一份声明中表示：「为了确保中国软件生态系统能够充分发挥 Arm 性能和功能的优势，Arm 正在重组其中国软件工程资源，将重点放在对本地开发人员的直接支持上。」&nbsp;</span></span></p><p><img height="335" src="https://oscimg.oschina.net/oscnet/up-0ac353574d344b4b6bfff75e8de619d946c.png" width="500" referrerpolicy="no-referrer"></p><p><span style="color:#000000"><span style="background-color:#ffffff">今年 11 月，由于智能手机销量下滑，Arm 发布了令人失望的营收预期。</span><span style="background-color:#fefefe">Arm&nbsp;</span><span style="background-color:#ffffff">首席财务官 Jason Child 在与对分析师的对话中表示，由于世界其他地区的增长速度更快，中国对 Arm 全球销售额的贡献率从 25% 下降到 20%。</span></span></p><p><span style="color:#000000">ARM 此次裁员实际上也反映了行业内的一些普遍做法。今年早些时候，由于<span style="background-color:#ffffff">电子产品需求不振而导致半导体行业低迷</span>，包括高通公司在内的主要芯片公司都削减了全球员工水平。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 19 Dec 2023 08:03:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271747/arm-lays-off-over-70-software-engineers-in-china</guid>
            <link>https://www.oschina.net/news/271747/arm-lays-off-over-70-software-engineers-in-china</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[原生，启动！米哈游启动鸿蒙原生应用开发]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">HarmonyOS 官方微博宣布，米哈游将启动鸿蒙原生应用开发。</span></p><blockquote><p><span style="color:#000000">原生，启动！</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fs.weibo.com%2Fweibo%3Fq%3D%2523%25E7%25B1%25B3%25E5%2593%2588%25E6%25B8%25B8%25E5%25AE%25A3%25E5%25B8%2583%25E5%2590%25AF%25E5%258A%25A8%25E9%25B8%25BF%25E8%2592%2599%25E5%258E%259F%25E7%2594%259F%25E5%25BA%2594%25E7%2594%25A8%25E5%25BC%2580%25E5%258F%2591%2523" target="_blank"><span style="color:#000000">#米哈游宣布启动鸿蒙原生应用开发#</span></a><span style="color:#000000">，当「技术宅拯救世界」的</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2Fn%2F%25E7%25B1%25B3%25E5%2593%2588%25E6%25B8%25B8miHoYo" target="_blank"><span style="color:#000000">@米哈游 miHoYo</span></a><span style="color:#000000"></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2Fn%2F%25E5%258E%259F%25E7%25A5%259E" target="_blank"><span style="color:#000000">@原神</span></a><span style="color:#000000"> 遇上 HarmonyOS NEXT，将为跨平台的游戏玩法和玩家体验带来更多可能。</span></p></blockquote><p><span style="color:#000000">米哈游旗下多款游戏原神、崩坏星穹铁道、未定事件簿、崩坏 3、崩坏学园 2 都将推出鸿蒙版本。</span></p><p><img height="303" src="https://oscimg.oschina.net/oscnet/up-b9052b34e967b05a966cf501dda0752b279.png" width="500" referrerpolicy="no-referrer"></p><p><span style="background-color:#ffffff; color:#333333">此前，网易也宣布启动鸿蒙原生游戏开发，包括旗下逆水寒、光遇、第五人格、阴阳师、永劫无间、梦幻西游等游戏。</span>&nbsp;</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 19 Dec 2023 07:33:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271740</guid>
            <link>https://www.oschina.net/news/271740</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[OpenAI 发布安全指南，董事会有权推翻 CEO 决策]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">OpenAI 正在扩展其内部安全流程，<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopenai.com%2Fsafety%2Fpreparedness" target="_blank">发布</a>了一个名为 Preparedness Framework (测试版) 的指导方针，旨在帮助跟踪、评估、预测和防范未来将存在的高级人工智能模型或前沿模型相关的风险。</span></p><p><span style="color:#000000"><span style="background-color:#ffffff">该框架提出：</span></span><span style="color:#000000"><strong>对模型进行评估并开发持续更新的「记分卡」</strong>。</span><span style="color:#000000">评估结果将有助于评估风险并衡量缓解策略的有效性。记分卡</span><span style="color:#000000">可以衡量和跟踪潜在危害的各种指标，例如模型的功能、漏洞和影响；并在达到某些风险阈值时触发审查和干预措施。「我们的目标是探究不安全因素的具体边缘，以有效降低所揭示的风险。」</span></p><p><span style="color:#000000"><img alt="" height="332" src="https://oscimg.oschina.net/oscnet/up-f76858a5f38d3d5e9ef431929186217caa2.webp" width="300" referrerpolicy="no-referrer"></span></p><p><span style="color:#000000">他们将<span style="background-color:#ffffff">风险划分为四个类别和四个级别。类别包括网络安全、CBRN（化学、生物、辐射、核威胁）、说服和模型自主，风险级别分为低、中、高和严重。只有缓解后得分在"中"或以下的模型才能部署，得分在"高"或以下的模型才能进一步开发针对高风险或临界（缓解前）风险级别的模型，则将实施额外的安全措施。</span></span></p><p><span style="color:#000000">此外，OpenAI <span style="background-color:#ffffff">还将创建一个专门的团队来实施该框架，监督技术工作和安全决策的运作结构。Preparedness 团队将开展技术工作，检查前沿模型的局限性，进行评估并综合报告；而跨职能的安全</span>咨询<span style="background-color:#ffffff">小组，则负责审查所有报告并将其提交给领导层和董事会。&nbsp;</span></span></p><p><span style="color:#000000">其中值得关注的一条规则是，<strong>虽然领导层是决策者，但董事会有权推翻决策</strong>。具体来说，Preparedness 团队每月将向内部安全咨询小组发送报告，该小组对其进行分析后，向 OpenAI 首席执行官 </span><span style="background-color:#ffffff; color:#333333">Sam Altman&nbsp;</span><span style="color:#000000">和董事会提交建议。</span><span style="background-color:#ffffff; color:#333333">Altman&nbsp;</span><span style="color:#000000">和公司高层可以根据这些报告决定是否发布新的 AI 系统，但董事会有权撤销这一决定。</span></p><p><span style="color:#000000">在&nbsp;OpenAI 宣布这一消息之前，其主要竞争对手 Anthropic 也发布了几份关于 AI 安全的重要声明。譬如最近发布的</span>&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.anthropic.com%2Findex%2Fanthropics-responsible-scaling-policy" target="_blank">Responsible Scaling Policy</a><span style="color:#000000">，一个定义特定的框架 AI&nbsp;安全级别以及用于开发和部署人工智能模型的相应协议。</span></p><p style="text-align:start"><span style="color:#000000">OpenAI 和 Anthropic 两个框架在结构和方法上都存在显着差异。 Anthropic 的政策更为正式和规范，将安全措施与模型能力直接挂钩，如果无法证明安全性，则暂停开发。 OpenAI 的框架则更加灵活、更具适应性，设置了触发审查的一般风险阈值，而不是预定义的级别。</span></p><p style="text-align:start"><span style="color:#000000">专家<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fventurebeat.com%2Fai%2Fopenai-announces-preparedness-framework-to-track-and-mitigate-ai-risks%2F" target="_blank">认为</a>，这两种框架都有各有优缺点，但 Anthropic 的方法可能在激励和执行安全标准方面具有优势。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 19 Dec 2023 03:16:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271695/openai-preparedness-framework-ai-risks</guid>
            <link>https://www.oschina.net/news/271695/openai-preparedness-framework-ai-risks</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[有道基于 Amoro Mixed Format 构建准实时湖仓实践]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h2>作者简介</h2><p><strong>谢怡</strong>，网易有道高级大数据开发工程师，目前主要参与实时计算和湖仓一体方向的研发</p><p><strong>王涛</strong>，网易资深平台开发工程师，主要从事大数据和湖仓平台建设</p><h2>业务背景</h2><p>有道的数据层架构可分为离线和实时两部分，离线计算主要采用 Hive、Spark，采用批处理的方式定时调度。实时部分采用 Flink+Doris（版本 0.14.0）构建实时数仓，用于处理实时埋点日志、业务库变更数据。ODS 层数据源为 Kafka 埋点日志、数据库业务数据，DWD、DWS 层数据通过 Flink 计算引擎加工，写入 Doris 中。同时将 Doris 数据定时同步至 Hive，用于离线调度计算。该架构存在如下问题：</p><ol><li>开发和运维成本高：Flink SQL 与 Hive/Spark 语法差异大，Hive/Spark 向 Flink 迁移成本高，Flink 大状态任务运维和优化难度高。</li><li>在全增量流式读取场景的支持性较弱，难以满足有道场景下 Flink 全量读取 Hive 历史数据及 Kafka 增量数据的需求。</li><li>流批存储不统一，造成双倍的数据开发和存储成本，且容易造成数据口径不一致。</li><li>Doris 作为数据孤岛，采用 SSD 存储，成本较高，不适合大规模词典日志数据存储，长期两套存储方案不利于成本优化。</li><li>需要持续地在 Hive 和 Doris 之间导入导出数据，链路过长容易引入不稳定因素，比如大规模数据写入时，Doris 导出 Hive 偶发数据丢失，并且不支持储存长 String 类型的字符串。</li></ol><p><img src="https://oscimg.oschina.net/oscnet/up-489a8fdd6efa0a9ee2676073bb304b58d6b.png" alt="" referrerpolicy="no-referrer"> 结合上述问题，有道希望从 Hive 升级为湖仓一体方案，支持流批读写，统一数据存储。并基于 Spark/Trino/Hive ETL 搭建分钟/小时级近实时数仓，降低开发和运维成本，在绝大多数场景下替换 Doris 的分钟级数仓场景，减少数据库数据同步成本，有效降本增效。</p><h2>引入 Amoro Mixed Hive</h2><p>Amoro Mixed Hive 提供了 Hive 读写兼容、数据自优化的能力，基于此提供了两种不同时效性读取的能力：</p><ol><li>Merge on read 可以达到分钟级数据新鲜度</li><li>Hive 读可以达到小时级新鲜度，同时也实现了对 Hive 数据的更新和删除，下游老 Hive 任务无需作任何修改即可享受数据时效性提升到小时级，对于习惯使用 Hive 的分析师来讲可以做到无感，降低了新技术的使用门槛。</li></ol><h3>Hive 表格式兼容</h3><p>Amoro 为了兼容 Hive 设计了 Mixed Hive，Mixed Hive 的存储结构如图， BaseStore 是一张独立的 iceberg 表，Hive 表作为 BaseStore 的一部分，ChangeStore 是一张独立的 iceberg 表, Mixed Hive 支持：</p><ul><li>schema、partition、types 与 Hive format 保持一致</li><li>使用 Hive connector 将 Mixed Hive 表当成 Hive 表来读写</li><li>可以将 Hive 表原地升级为 Mixed Hive 表，升级过程没有数据重写和迁移，秒级响应</li><li>具备湖仓一体的特性，包括基于主键 upsert，流式读写，ACID，time travel 等功能</li></ul><p>Hive 读写兼容的特性实现 Hive 表向 Mixed Hive 的无缝迁移， 并且可以做到上下游无感知。 <img src="https://oscimg.oschina.net/oscnet/up-3550dd6d29e576a93536d882286c7556cf4.png" alt="" referrerpolicy="no-referrer"></p><h3>Hive 数据更新</h3><p>Amoro 借助 Self-optimizing 将实时写入的变更合并到 Hive， 实现了 Hive 数据更新。Self-optimizing 目标是基于新型数据湖表格式打造像数据库，传统数仓一样开箱即用的流式湖仓服务，Self-optimizing 包含但不限于文件合并，去重，排序。 Amoro 将表中的文件按照大小分为了两类： <img src="https://oscimg.oschina.net/oscnet/up-8b8dffb1776d5214b68ada646b63f7eb500.png" alt="" referrerpolicy="no-referrer"></p><ul><li>Fragment File：碎片文件，默认配置下小于 16 MB 的文件，此类文件需要及时得合并成更大的文件，以提升读取性能</li><li>Segment File：默认配置下大于 16MB 的文件，此类文件已经具备一定的大小，但还不到理想的 128MB。</li></ul><p>基于文件分类，Amoro 将文件优化任务分为三类：Minor optimizing、Major optimizing、Full optimizing，应对写友好、读友好的场景，在保证写入性能同时，保证读性能的平衡。特别地 Full optimizing 会将实时写入的数据定时合并到 Hive 目录，实现 Hive 数据视图的更新，提高 Hive 数据的时效性。 持续的 Self-optimizing 可以有效优化表内文件的大小分布，降低小文件数，减少 AP 查询的性能开销。</p><h2>落地方案</h2><h3>数据链路改造</h3><p><img src="https://oscimg.oschina.net/oscnet/up-7b7422983d7cbce206f28492bc676b96301.png" alt="" referrerpolicy="no-referrer"> 基于 Amoro，我们对于传统链路进行了以下改造：</p><ol><li>开发方式上，贴源层的数据导入从 Flink SQL 方式改造成基于实时数据湖平台，业务通过简单的交互即可完成 Hive 升级和入湖链路的构建。</li><li>通过数据传输定时同步数据库到 Hive 的链路，改造成实时 Mixed Hive format 表，数据时效性提升的同时，也提前了离线 workflow 基线，数据产出时间大大提前。</li><li>Amoro 替换 Doirs，降低数据链路的复杂度，做到存储的流批统一，提高了稳定性。</li><li>数据查询端，通过直接查询 Mixed Hive format 表实现数据时效性的提升,数据报表时效性可以达到分钟级；原来查询 Hive 的报表链路时效性可以提升到小时级。</li></ol><h3>实时数据湖平台共建</h3><p>为了屏蔽底层存储变更对于业务开发的学习成本， 网易杭研基于 Amoro 在内部提供了实时数据湖开发平台，封装了从 Hive 表升级到构建数据入湖全流程，帮助用户一站式完成开发和运维，降低用户的使用门槛和成本。</p><ul><li>Hive 表升级到 Mixed Hive 表，包含主键配置、分区键配置。</li><li>创建源端到 Mixed Hive 表的入湖任务, 支持数据库 cdc 入湖、日志入湖。 
  <ul><li>基于 NDC（网易数据运河） 打通从源端数据库 binlog 直接输出到 Mixed Hive 表全增量入湖链路。</li><li>支持配置日志 kakfa 到 Mixed Hive 表的实时入湖链路。</li></ul></li></ul><p><img src="https://oscimg.oschina.net/oscnet/up-ad976e460e398b1720879654ad706a5dab6.jpg" alt="" referrerpolicy="no-referrer"> 通过用户调研，相对于引入 Amoro 之前基于 Flink 实时入湖的架构，用户的开发成本下降 65%， 运维成本下降 40%。 通过实时数据湖平台实现 Flink 入湖、用户编写 Spark/Trino sql 实现 DWD、DWS 层的 ETL 加工，构建分钟、小时级近实时数仓，极大降低了用户的开发成本。并且该方案存储流批统一的特点，也降低了用户数据开发和数据修复的成本。同时，Amoro 全量/增量 Flink 流式读取的特性，也可以满足对时效性要求更高的流式处理场景。</p><p>在开源 Amoro 和杭研实时数据湖平台之上，有道也深度参与了社区贡献和平台共建，包括：</p><ul><li>贡献 Mixed Format 支持 ORC 格式，解决 Amoro 只支持 Parquet 格式 Hive 表的限制，避免 ORC 到 Parquet 表的拷贝才能升级的流程， 预计节省冗余存储 20TB 存储</li><li>搭建 Amoro 平台监控体系、自动运维优化，保障线上表质量、数据时效性、集群稳定性</li><li>Trino 引擎查询 Amoro 支持 Hadoop-proxy，基于有道 HDFS ranger 实现权限管理</li><li>多项 Amoro Optimizer 优化以提高 Optimizer 稳定性，如：Flink Optimizer 任务重试上报 AMS</li><li>多项实时数据湖平台优化以提升可靠性和用户体验，如：实时数据湖平台支持 Amoro 高可用</li></ul><p><img src="https://oscimg.oschina.net/oscnet/up-65a69f60ca3247bcebca2f7e1a06d2b6c24.png" alt="" referrerpolicy="no-referrer"></p><h3>查询优化</h3><p>目前有道主要使用 MPP 引擎 Trino 对 Mixed Hive 表进行分钟级时效性的 OLAP 查询。在大多数场景下，默认的查询性能符合要求。对于查询响应要求较高的一些场景，发现 Mixed Hive 查询性能达不到业务要求，并且比其它业务环境的查询性能差。Amoro 和有道同学分析 Trino 的查询 profile 和，底层 HDFS 性能，发现了三个优化点,优化后 Mixed Hive 表的查询性能提升明显，查询耗时下降了 92%，基本接近 Hive 静态数据查询，并且已经可以满足业务的要求。三个优化如下：</p><ol><li>对 Query Plan 阶段，Amoro 改写了原本的 Plan 逻辑，将需要用来判断数据是否被删除的 Sequence Number 直接从一次多线程的 Plan 中获取，减少了之前单独使用一个额外的单线程 Plan 去获取该变量的开销；</li><li>对于数据倾斜的问题，Amoro 对 delete 文件开销较小但文件数量较多的任务进行了更细粒度的拆分，通过提高并行度，性能提升 50%。</li><li>有道对 HDFS 的优化，在分析过程中发现通过 Router 访问的 RPC 响应时长 .95 达到 262ms, 远超正常集群的 5ms 以内，通过将 HDFS 访问切到直连 HDFS 集群，rpc 响应时间降为 .95 耗时 15ms，Mixed Hive 表平均查询耗时下降 83.3%。 另外，在可以降低时效性要求的场景，直接查询 Mixed Hive 的 BaseStore 也可达到分钟级的时效性，查询性能更好，可以与 Hive 查询静态数据相当。</li></ol><h3>应用情况</h3><p>2023 年初，Amoro 在有道开始上线应用，目前线上表数量 500+张、100+ TB 存储、日存储增量 200GB/天，Spark/Trino 日均查询量 6000+，覆盖有道 10+业务部门，在续报、投放等多个场景落地了分钟级近实时数仓，并且通过 Amoro 托管的数据自优化功能，有效避免数仓业务中的小文件问题，达到持续降本提效的效果。</p><p>在替换 Doris 的实践上， 有道词典已经完成了 Amoro 替换 Doris，下掉了 Doris 集群的节点。有道精品课也逐步以 Amoro 替代 Doris，预计明年上半年完成替换。</p><p>在构建近实时数仓实践上，三个业务部门已经完成了基于 Amoro 搭建近实时数仓，整条链路的延迟最低可达 3mins。同时，实时增量写 Mixed Hive 表替代传统的全量数据传输任务，提前了离线 workflow 基线，ADS 表产出时间最快可提前 6 小时。</p><p>业务收益上，数据产出效率由 T+1 提升到小时级/分钟级， 实现更快更有效的决策分析（投放、销售策略等），为有道多个部门带来了成本降低或效率提升，比如词典社区视频播放时长提升 10%， 点击率提升 4.6%。</p><h2>社区贡献</h2><p>在 Amoro 开源社区，有道已有 13 个 PR 合并，包括：</p><ul><li>Mix Table Format 支持 ORC 文件格式</li><li>Flink DDL 支持计算列和 Watermark</li><li>Trino 引擎支持 hadoop-proxy</li><li>支持 HTTP 请求创建 optimizer group</li><li>删表操作优化</li><li>Flink Optimizer failover 重试上报 AMS</li></ul><h2>未来规划</h2><ol><li>在查询性能方面，目前 Amoro 在查询响应要求高的绝大部分场景下 AP 查询性能已基本满足用户需求。平台层目标是保证 90% 查询响应耗时响应在 5s 以内，基于 SSD 的 Doris 平均查询时间为 1.8s，Amoro 优化后的平均查询时间在 5s ，可以满足绝大部分查询场景。未来将持续优化查询性能，比如 Full optimize 中引入 Z-order 提升 data skiping 的命中率等。</li><li>当前入湖任务是单表单任务，有大量的变更少的数据库表，入湖任务资源利用率相对较低。杭研实时数据湖平台已上线 Flink Session 入湖，复用 Session 的 JM/TM 资源，优化入湖任务的资源利用率。预计将减少入湖任务的内存、CPU 资源约 30%~50% 左右。</li><li>Paimon 在 Flink partial update 的场景下有较好的可用性，未来计划通过 Amoro 尝试落地。我们希望借助 Amoro 的 Unified Catalog，统一管理 Mixed Hive 表、Paimon 表、Mixed Iceberg 表，像使用 Mixed Hive 一样使用 Paimon 表，保留用户当前基于 Amoro 的开发体验。</li></ol><hr><p><strong>End~</strong></p><p>如果你对<strong>数据湖，湖仓一体、table format 或 Amoro 社区</strong>感兴趣，欢迎联系我们深入交流。</p><p><strong>关于 Amoro 的更多资讯可查看：</strong></p><ul><li><strong>官网</strong>：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Famoro.netease.com%2F" target="_blank">https://amoro.netease.com/</a></li><li><strong>源码</strong>：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNetEase%2Famoro" target="_blank">https://github.com/NetEase/amoro</a></li></ul><p><strong>社群交流</strong>：搜索 <em><strong>kllnn999</strong></em>，添加芦田爱菜小助手微信加入社群</p><p><img src="https://oscimg.oschina.net/oscnet/up-842de6cc219b0043ce1f88ec898c7c7ec83.jpg" alt="" referrerpolicy="no-referrer"></p><p>作者：谢怡 &amp; 王涛</p><p>编辑：Viridian</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 19 Dec 2023 03:14:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/6895272/blog/10322356</guid>
            <link>https://my.oschina.net/u/6895272/blog/10322356</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[MongoDB 内部系统遭遇攻击，部分客户数据被泄露]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>MongoDB 公司近日发布了<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.mongodb.com%2Falerts" target="_blank">告警通知</a></u>，称其在上周检测到的一次网络攻击中，发现公司内部系统被攻击者破坏，导致部分客户数据泄露。</p><p>在与 MongoDB CISO Lena Smart 往来的电子邮件中， MongoDB 声称在周三（12 月 13 日）晚上检测了到其系统遭到攻击，事件发生后公司内部立刻成立了网络安全专家组，开始详细调查这一事件。MongoDB 在邮件中写道：</p><blockquote><p>MongoDB 目前正在调查一起涉及未经授权访问某些 MongoDB 公司内部系统的网络安全事件，该安全事件可能导致部分客户账户元数据和联系信息泄露，<strong>但尚未发现客户存储在 MongoDB Atlas 中的数据有任何泄露</strong>。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-1120a564c1712e991b0730b26c06d77cad9.png" referrerpolicy="no-referrer"></p></blockquote><p>经过调查分析，MongoDB 公司并不认为威胁攻击者访问了存储在 MongoDB Atlas 中的任何客户数据。不过 MongoDB 同样承认在安全人员发现数据泄漏事件之前，攻击者已经访问其内部系统一段时间了。数据泄露事件通知中还指出，MongoDB 公司目前正在积极进行安全调查分析。</p><p>鉴于部分客户元数据被暴露，MongoDB 建议所有客户在其账户上启用多因素身份验证、轮换密码，并对潜在的定向网络钓鱼和社交工程攻击时刻保持警惕。</p><p>最后，MongoDB 公司强调将继续在 MongoDB Alerts 网页上发布有关漏洞的最新信息，也会在该网页上发布有关中断和其他事件的最新信息。</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 19 Dec 2023 02:57:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271688/mongodb-says-customer-data-was-exposed-in-a-cyberattack</guid>
            <link>https://www.oschina.net/news/271688/mongodb-says-customer-data-was-exposed-in-a-cyberattack</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Adobe 放弃收购 Figma，需支付 10 亿美元补偿费]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>12 月 18 日，Figma 联合创始人兼 CEO <u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.figma.com%2Fblog%2Ffigma-adobe-abandon-proposed-merger%2F" target="_blank">发布文章</a></u>，宣布在 15 个月的监管审查程序后，Figma 与 Adobe 认为二者的收购提议已<strong>不会获得监管批准，决定停止本次收购</strong>。因交易终止，Adobe 需要向 Figma <u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.sec.gov%2FArchives%2Fedgar%2Fdata%2F796343%2F000114036122033413%2Fny20005310x2_8k.htm" target="_blank">支付</a></u>一笔 10 亿美元现金的补偿费。</p><p>Adobe 在 2022 年 9 月<u><a href="https://www.oschina.net/news/210475/adobe-to-acquire-figma">宣布</a></u>以 200 亿美元收购开发在线设计协作软件的创业公司 Figma，并表示收购后 Figma 将保持自主运行。</p><p><img src="https://oscimg.oschina.net/oscnet/up-bf6c1fe7a671d0abebcca4cc84a6f1c39da.png" referrerpolicy="no-referrer"></p><p>这是 Adobe 历史上金额最高的一笔收购案。但这笔收购案引发了监管机构对于大型科技公司收购潜在竞争对手的创业公司会增强其市场力量的担忧。Adobe 则辩解称它与 Figma 基本不存在竞争关系。</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 19 Dec 2023 02:34:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271682/figma-adobe-abandon-proposed-merger</guid>
            <link>https://www.oschina.net/news/271682/figma-adobe-abandon-proposed-merger</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Zadig 深度集成 Apollo 实现跨环境配置的一致性传递]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#191b1f; margin-left:0px; margin-right:0px"><img alt="" src="https://oscimg.oschina.net/oscnet/up-f3257d38d2e7887e27e6dec4becb607045c.png" referrerpolicy="no-referrer"></p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">在现代软件系统中，配置管理是确保软件质量的关键环节。应用程序的配置直接影响到其功能、性能和安全性。通过有效的配置管理，可以确保应用程序在不同环境中的一致性和稳定性，从而避免因配置错误而导致的问题和事故。然而，实现配置一致性变更，面临着诸多挑战，包括多环境的差异、多组件系统的复杂性、动态性以及安全性等方面，这些因素增加了对系统可维护性和安全保障的难度。</p><div><img src="https://pic4.zhimg.com/80/v2-dd0227ff7ce659b46ab979e63d63cf5b_1440w.webp" width="690" referrerpolicy="no-referrer"></div><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">Zadig 通过深度集成 Apollo，为工程师提供更便捷的途径，使其能够在不同环境中传递一致性的配置，从而提高系统的稳定性、降低维护成本，为团队提供更高效的开发和部署体验。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">接下来我们将结合实际案例，介绍如何通过 Zadig 解决 Apollo 配置管理复杂性和一致性传递的难题。</p><span id="OSC_h1_1"></span><h1>&nbsp;</h1><span id="OSC_h1_2"></span><h1><span style="color:#fd2968"><strong>管理员配置</strong></span></h1><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">管理员在 Zadig 中集成 Apollo 配置管理系统，配置工作流 「Apollo 配置变更」任务，即可实现配置的自动化变更、帮助工程师方便的完成配置的一致性传递。</p><span id="OSC_h3_3"></span><h3>&nbsp;</h3><span id="OSC_h3_4"></span><h3><span style="color:#fd2968"><strong>第一步：集成 Apollo</strong></span></h3><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">访问 Zadig 系统设置 &gt; 集成管理 &gt; 配置管理 &gt; 添加 Apollo 配置管理系统。</p><div><img src="https://pic1.zhimg.com/80/v2-3573f965a1175b6605b54d3fe68ac264_1440w.webp" width="690" referrerpolicy="no-referrer"></div><div><img src="https://pic2.zhimg.com/80/v2-ec5aec67c3d0241e35612abda454eea9_1440w.webp" width="690" referrerpolicy="no-referrer"></div><span id="OSC_h3_5"></span><h3>&nbsp;</h3><span id="OSC_h3_6"></span><h3><span style="color:#fd2968"><strong>第二步：配置工作流任务</strong></span></h3><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">将 「Apollo 配置变更」任务编排到工作流中，即可通过 Zadig 工作流一键实现自动变更配置。具体操作：编辑工作流 &gt; 添加配置变更任务 &gt; 选择 Apollo 配置变更 &gt; 填写相关参数后保存。</p><div><img src="https://pic3.zhimg.com/80/v2-7fd8bee1c7de44a53a09a11a1a7119fe_1440w.webp" width="690" referrerpolicy="no-referrer"></div><div><img src="https://pic3.zhimg.com/80/v2-29a3902b9e3116af90f01140f2fa7246_1440w.webp" width="690" referrerpolicy="no-referrer"></div><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">为了控制多环境使用和变更权限，比如仅允许开发人员对开发环境的配置进行变更，不可修改其他环境的配置。在 Zadig 上可以通过设置 Apollo 配置范围来实现配置修改权限的控制，从而确保系统环境的稳定性。</p><div><img src="https://pic4.zhimg.com/80/v2-15aa010c9034991101699633e3edab47_1440w.webp" width="690" referrerpolicy="no-referrer"></div><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">配置 3 条工作流，具体配置参考如下：</p><table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; box-sizing:border-box; color:rgba(0, 0, 0, 0.9); display:table; font-family:system-ui,-apple-system,&quot;system-ui&quot;,&quot;Helvetica Neue&quot;,&quot;PingFang SC&quot;,&quot;Hiragino Sans GB&quot;,&quot;Microsoft YaHei UI&quot;,&quot;Microsoft YaHei&quot;,Arial,sans-serif; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:0.544px; margin:0px 0px 10px; max-width:100%; orphans:2; outline:0px; overflow-wrap:break-word !important; padding:0px; text-align:justify; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:657px; word-spacing:0px"><tbody><tr><td style="background-color:#ff7faa; border-color:#3e3e3e #f0f9ff #3e3e3e #3e3e3e; border-image:initial; border-style:none solid none none; border-width:0px 1px 0px 0px"><p style="margin-left:0; margin-right:0"><span style="color:#ffffff"><strong>工作流名称</strong></span></p></td><td style="background-color:#ff7faa; border-color:#3e3e3e #f0f9ff #3e3e3e #3e3e3e; border-image:initial; border-style:none solid none none; border-width:0px 1px 0px 0px"><p style="margin-left:0; margin-right:0"><span style="color:#ffffff"><strong>工作流用途</strong></span></p></td><td style="background-color:#ff7faa; border-color:#3e3e3e #f0f9ff #3e3e3e #3e3e3e; border-image:initial; border-style:none solid none none; border-width:0px 1px 0px 0px"><p style="margin-left:0; margin-right:0"><span style="color:#ffffff"><strong>工作流步骤配置</strong></span></p></td></tr><tr><td style="background-color:rgba(255, 242, 243, 0.46); border-color:#3e3e3e #7aafe7 #7aafe7 #3e3e3e; border-image:initial; border-style:solid; border-width:0px; vertical-align:top"><p style="margin-left:0; margin-right:0"><span style="color:#ff6699"><strong>demo-workflow-dev</strong></span></p></td><td style="border-color:#3e3e3e #7aafe7 #7aafe7 #3e3e3e; border-image:initial; border-style:solid; border-width:0px; vertical-align:top"><p style="margin-left:0; margin-right:0"><span style="color:#ff6699">开发环境更新</span></p></td><td style="border-color:#3e3e3e #7aafe7 #7aafe7 #3e3e3e; border-image:initial; border-style:solid; border-width:0px; vertical-align:top"><p style="margin-left:0; margin-right:0"><span style="color:#ff6699">构建 &gt;&nbsp; dev 环境配置变更 &gt; 部署 dev 环境</span></p></td></tr><tr><td style="background-color:rgba(255, 242, 243, 0.46); border-color:#3e3e3e #7aafe7 #7aafe7 #3e3e3e; border-image:initial; border-style:solid; border-width:0px; vertical-align:top"><p style="margin-left:0; margin-right:0"><span style="color:#ff6699"><strong>demo-workflow-sit</strong></span></p></td><td style="border-color:#3e3e3e #7aafe7 #7aafe7 #3e3e3e; border-image:initial; border-style:solid; border-width:0px; vertical-align:top"><p style="margin-left:0; margin-right:0"><span style="color:#ff6699">测试环境更新</span></p></td><td style="border-color:#3e3e3e #7aafe7 #7aafe7 #3e3e3e; border-image:initial; border-style:solid; border-width:0px; vertical-align:top"><p style="margin-left:0; margin-right:0"><span style="color:#ff6699">构建 &gt;&nbsp; sit 环境配置变更 &gt; 部署 sit 环境 &gt; 自动化测试 &gt; IM 通知</span></p></td></tr><tr><td style="background-color:rgba(255, 242, 243, 0.46); border-color:#3e3e3e #7aafe7 #7aafe7 #3e3e3e; border-image:initial; border-style:solid; border-width:0px; vertical-align:top"><p style="margin-left:0; margin-right:0"><span style="color:#ff6699"><strong>demo-workflow-prod</strong></span></p></td><td style="border-color:#3e3e3e #7aafe7 #7aafe7 #3e3e3e; border-image:initial; border-style:solid; border-width:0px; vertical-align:top"><p style="margin-left:0; margin-right:0"><span style="color:#ff6699">生产发布</span></p></td><td style="border-color:#3e3e3e #7aafe7 #7aafe7 #3e3e3e; border-image:initial; border-style:solid; border-width:0px; vertical-align:top"><p style="margin-left:0; margin-right:0"><span style="color:#ff6699">SRE 审批 &gt; prod 环境配置变更 &gt; 部署 prod 环境 &gt; 回归测试</span></p></td></tr></tbody></table><div><img src="https://pic3.zhimg.com/80/v2-a241519025a1b9eb9ee5c98468822e3e_1440w.webp" width="690" referrerpolicy="no-referrer"></div><span id="OSC_h3_7"></span><h3>&nbsp;</h3><span id="OSC_h3_8"></span><h3><span style="color:#fd2968"><strong>第三步：配置协作模式[可选]</strong></span></h3><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">配置协作模式，为开发、测试、发布工程师配置工作流权限，具体配置参考如下：</p><table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; box-sizing:border-box; color:rgba(0, 0, 0, 0.9); display:table; font-family:system-ui,-apple-system,&quot;system-ui&quot;,&quot;Helvetica Neue&quot;,&quot;PingFang SC&quot;,&quot;Hiragino Sans GB&quot;,&quot;Microsoft YaHei UI&quot;,&quot;Microsoft YaHei&quot;,Arial,sans-serif; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:0.544px; margin:0px 0px 10px; max-width:100%; orphans:2; outline:0px; overflow-wrap:break-word !important; padding:0px; text-align:justify; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:657px; word-spacing:0px"><tbody><tr><td style="background-color:#ff7faa; border-color:#3e3e3e #f0f9ff #3e3e3e #3e3e3e; border-image:initial; border-style:none solid none none; border-width:0px 1px 0px 0px"><p style="margin-left:0; margin-right:0"><span style="color:#ffffff"><strong>协作模式名称</strong></span></p></td><td style="background-color:#ff7faa; border-color:#3e3e3e #f0f9ff #3e3e3e #3e3e3e; border-image:initial; border-style:none solid none none; border-width:0px 1px 0px 0px"><p style="margin-left:0; margin-right:0"><span style="color:#ffffff"><strong>包含协作成员</strong></span></p></td><td style="background-color:#ff7faa; border-color:#3e3e3e #f0f9ff #3e3e3e #3e3e3e; border-image:initial; border-style:none solid none none; border-width:0px 1px 0px 0px"><p style="margin-left:0; margin-right:0"><span style="color:#ffffff"><strong>工作流权限配置</strong></span></p></td></tr><tr><td style="background-color:rgba(255, 242, 243, 0.46); border-color:#3e3e3e #7aafe7 #7aafe7 #3e3e3e; border-image:initial; border-style:solid; border-width:0px; vertical-align:top"><p style="margin-left:0; margin-right:0"><span style="color:#ff6699"><strong>dev-mode</strong></span></p></td><td style="border-color:#3e3e3e #7aafe7 #7aafe7 #3e3e3e; border-image:initial; border-style:solid; border-width:0px; vertical-align:top"><p style="margin-left:0; margin-right:0"><span style="color:#ff6699">开发工程师</span></p></td><td style="border-color:#3e3e3e #7aafe7 #7aafe7 #3e3e3e; border-image:initial; border-style:solid; border-width:0px; vertical-align:top"><p style="margin-left:0; margin-right:0"><span style="color:#ff6699">共享 demo-workflow-dev 工作流</span></p></td></tr><tr><td style="background-color:rgba(255, 242, 243, 0.46); border-color:#3e3e3e #7aafe7 #7aafe7 #3e3e3e; border-image:initial; border-style:solid; border-width:0px; vertical-align:top"><p style="margin-left:0; margin-right:0"><span style="color:#ff6699"><strong>qa-mode</strong></span></p></td><td style="border-color:#3e3e3e #7aafe7 #7aafe7 #3e3e3e; border-image:initial; border-style:solid; border-width:0px; vertical-align:top"><p style="margin-left:0; margin-right:0"><span style="color:#ff6699">测试工程师</span></p></td><td style="border-color:#3e3e3e #7aafe7 #7aafe7 #3e3e3e; border-image:initial; border-style:solid; border-width:0px; vertical-align:top"><p style="margin-left:0; margin-right:0"><span style="color:#ff6699">共享 demo-workflow-qa 工作流</span></p></td></tr><tr><td style="background-color:rgba(255, 242, 243, 0.46); border-color:#3e3e3e #7aafe7 #7aafe7 #3e3e3e; border-image:initial; border-style:solid; border-width:0px; vertical-align:top"><p style="margin-left:0; margin-right:0"><span style="color:#ff6699"><strong>sre-mode</strong></span></p></td><td style="border-color:#3e3e3e #7aafe7 #7aafe7 #3e3e3e; border-image:initial; border-style:solid; border-width:0px; vertical-align:top"><p style="margin-left:0; margin-right:0"><span style="color:#ff6699">发布工程师</span></p></td><td style="border-color:#3e3e3e #7aafe7 #7aafe7 #3e3e3e; border-image:initial; border-style:solid; border-width:0px; vertical-align:top"><p style="margin-left:0; margin-right:0"><span style="color:#ff6699">共享 demo-workflow-prod 工作流</span></p></td></tr></tbody></table><div><img src="https://pic2.zhimg.com/80/v2-fb94c1df223825d45582b37ec5295309_1440w.webp" width="690" referrerpolicy="no-referrer"></div><span id="OSC_h1_9"></span><h1>&nbsp;</h1><span id="OSC_h1_10"></span><h1><span style="color:#fd2968"><strong>工程师使用</strong></span></h1><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">下面我们将详细探讨开发阶段、测试阶段和生产发布阶段如何在 Zadig 上实现 Apollo 配置一致性变更。</p><span id="OSC_h3_11"></span><h3>&nbsp;</h3><span id="OSC_h3_12"></span><h3><span style="color:#fd2968"><strong>场景一：开发工程师自测联调-根据实际业务改动更新配置</strong></span></h3><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">构建 &gt; Apollo 配置变更 &gt; 部署，实现开发环境业务和配置的自动化变更。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">开发工程师代码实现完毕后需要自测联调时，执行 demo-workflow-dev 工作流，选择需要更新的服务，在 Apollo 配置变更任务中选择配置项并修改配置内容。</p><div><img src="https://pic1.zhimg.com/80/v2-6234f172b23f96cf13a32854c911b9d8_1440w.webp" width="690" referrerpolicy="no-referrer"></div><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">配置变更成功后会自动执行部署任务更新开发环境，实现开发环境中业务代码和配置的一键变更，快速自测联调。</p><div><img src="https://pic2.zhimg.com/80/v2-b459690e5bedee09939858b1724b03fd_1440w.webp" width="690" referrerpolicy="no-referrer"></div><div><img src="https://pic3.zhimg.com/80/v2-29997ebf9a3ebdc5af9823d1937781b6_1440w.webp" width="690" referrerpolicy="no-referrer"></div><span id="OSC_h3_13"></span><h3>&nbsp;</h3><span id="OSC_h3_14"></span><h3><span style="color:#fd2968"><strong>场景二：测试工程师集成测试-复用开发的配置改动</strong></span></h3><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">构建 &gt; Apollo 配置变更 &gt; 部署 &gt; 自动化测试 &gt; IM 通知，实现测试环境业务和配置的自动化、高效变更。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">测试工程师集成测试时，执行 demo-workflow-sit 工作流，选择需要更新的服务和对应的配置变更。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">如下图所示，点击「同步配置」，选择开发环境的服务配置，可以获取开发环境和测试环境之间的配置差异，选择需要同步的配置。点击同步按钮后，通过变更前后的比对，一目了然地了解变更的内容。最后，点击执行工作流即可完成对测试环境配置的自动化变更。</p><div><img src="https://pic1.zhimg.com/80/v2-ca03d506877feb247e78bbd363cbe390_1440w.webp" width="690" referrerpolicy="no-referrer"></div><div><img src="https://pic2.zhimg.com/80/v2-6e8dd2d4caa688ac36c9b85e99ab60a1_1440w.webp" width="690" referrerpolicy="no-referrer"></div><div><img src="https://pic3.zhimg.com/80/v2-05074af5fd97bb674d45234417b4008a_1440w.webp" width="690" referrerpolicy="no-referrer"></div><span id="OSC_h3_15"></span><h3>&nbsp;</h3><span id="OSC_h3_16"></span><h3><span style="color:#fd2968"><strong>场景三：发布工程师生产发布-审批配置改动</strong></span></h3><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">SRE 审批 &gt; Apollo 配置变更 &gt; 部署 prod 环境 &gt; 自动化测试，实现业务和配置自动化、安全上线。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">发布工程师执行 demo-workflow-prod 工作流进行生产发布，选择要变更的 Apollo 配置并修改内容。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">和测试工程师操作类似，选择测试环境中的配置，获得测试环境和生产环境的差异，选择需要同步的配置后，对生产环境进行改动。</p><div><img src="https://pic2.zhimg.com/80/v2-972183642f2bf0ad731b13c7c5217ca9_1440w.webp" width="690" referrerpolicy="no-referrer"></div><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">另外，鉴于生产发布的严肃性，通常需要相关责任人对发布内容进行审批。审批人员可以通过 Zadig 工作流任务信息详细了解本次任务的具体改动，来保障发布内容的正确性和可靠性。</p><div><img src="https://pic1.zhimg.com/80/v2-e989736963def70923f2db929b598214_1440w.webp" width="690" referrerpolicy="no-referrer"></div><div><img src="https://pic3.zhimg.com/80/v2-fb23b293f63ed41e0c53d1af010f05c2_1440w.webp" width="690" referrerpolicy="no-referrer"></div><span id="OSC_h1_17"></span><h1>&nbsp;</h1><span id="OSC_h1_18"></span><h1><span style="color:#fd2968"><strong>小结</strong></span></h1><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">Zadig 工作流支持编排 Apollo 配置变更任务，以实现业务和配置的自动化、高效变更。此外，它还具备多环境配置同步和单环境变更前后对比的能力，有助于确保配置在开发、测试和生产发布中的一致性传递。从而为生产发布过程提供了稳定、安全和可靠的保障。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:center"><span style="background-color:#ffffff; color:rgba(0, 0, 0, 0.9)">立即体验 Zadig V2.0 新架构，开启高效交付之旅！🚀&nbsp;</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:center"><strong><span style="color:#ff2968">Zadig 开放，链接，专业</span></strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:center"><strong><span style="color:#ff2968"><img alt="" src="https://oscimg.oschina.net/oscnet/up-ed2906cceb629103785658ca6748d6cd8ea.png" referrerpolicy="no-referrer"></span></strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:center"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4NDY0NTMyNw%3D%3D%26mid%3D2247491329%26idx%3D1%26sn%3D1a729186b2b5ca733c578ee8b288e823%26chksm%3Dcfb453a1f8c3dab74fb1118ac1c95aa898437a8f786385b21e0b0799d6da4eda9101acb626c0%26token%3D1376697300%26lang%3Dzh_CN%23rd" target="_blank">阅读原文</a>&nbsp;/&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkoderover%2Fzadig" target="_blank">Zadig 在 Github</a>&nbsp;/&nbsp;<a href="https://gitee.com/koderover/zadig">Zadig 在 Gitee</a></p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start"><strong>推荐阅读 :&nbsp;</strong><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4NDY0NTMyNw%3D%3D%26mid%3D2247490415%26idx%3D1%26sn%3D1914c7fd25aac5d33b98663571bbb744%26chksm%3Dcfb457cff8c3ded9c02809aad88012fa802eac55222eebe70b8c637ca2c86a101045aa81e73a%26scene%3D21%23wechat_redirect" target="_blank">是时候和 Jenkins 说再见了</a><span style="color:#333333">&nbsp;</span><span style="color:#333333">/&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4NDY0NTMyNw%3D%3D%26mid%3D2247491180%26idx%3D1%26sn%3D3320b05425fb5608aa0ddb994376d7ff%26chksm%3Dcfb452ccf8c3dbda46e16a0728daeed32cd172d4753b31bf89dc8471078dc4116404c820426c%26scene%3D21%23wechat_redirect" target="_blank">Jenkins 任务如何迁移到 Zadig 工作流</a><span style="color:#333333">&nbsp;/&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4NDY0NTMyNw%3D%3D%26mid%3D2247491208%26idx%3D1%26sn%3D6d1a8fc08eae6c00c180939da8e213eb%26chksm%3Dcfb45228f8c3db3efac6c9116f0a26cacdb6e8c6dcf71e8756608d3ae908d13a1c6676f80dbf%26scene%3D21%23wechat_redirect" target="_blank">Jenkins 迁移 Zadig，新项目实施上线效率提升&nbsp;6 倍</a><span style="color:#333333">&nbsp;/&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4NDY0NTMyNw%3D%3D%26mid%3D2247491219%26idx%3D1%26sn%3D92463d29d1f6ebd17b382004254852fd%26chksm%3Dcfb45233f8c3db2598088826aa39c323de6c6f6485e42a373c65a6a7d871ea64472802dc4430%26scene%3D21%23wechat_redirect" target="_blank">揭秘 Zadig V2.0.0 新开源架构：效率飙升 50% 背后故事</a><span style="color:#333333">&nbsp;/&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4NDY0NTMyNw%3D%3D%26mid%3D2247491301%26idx%3D1%26sn%3Db6fb856b449dbab1e0959996dd218b4d%26chksm%3Dcfb45245f8c3db53add8e70502f98be8dc237b9f2d3462b48e603f5eb6acef05e5ff7b42b029%26scene%3D21%23wechat_redirect" target="_blank">Zadig 支持 Nacos 跨环境配置变更，自动实现一致性变更</a></p><p>&nbsp;</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 19 Dec 2023 02:27:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/koderover/blog/10322413</guid>
            <link>https://my.oschina.net/koderover/blog/10322413</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Dubbo 3.3.0-beta 版本正式发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="text-align:justify">近日，Apache Dubbo 发布了 3.3 分支大版本 3.3.0-beta.1，相较于 3.2 系列版本，3.3.0-beta 引入了一些重量级的功能升级，按照社区规划，3.3 也将是 Dubbo3 非常重要的一个里程碑大版本，在 3.3.0 首个正式版本之后 Dubbo3 将正式进入长期稳定维护态，即标志着 Dubbo3 作为面向云原生时代的下一代微服务框架将具备规划的所有核心功能。</p><p style="text-align:justify">让我们先快速看一下 3.3.0-beta.1 版本为我们带来了哪些核心能力升级吧：</p><ul><li><strong>全新升级的 Triple 协议，</strong>Triple 协议可同时运行在 HTTP1/2 之上，与 gRPC 保持 100% 兼容的同时，支持 cURL 和浏览器直接访问。</li><li>新发布一系列<strong>&nbsp;Spring Boot Starter 组件</strong>，包括 Zookeeper, Nacos, Sentinel 等，大幅降低开发过程中的依赖管理负担。</li><li><strong>Rest 风格的编程注解支持</strong>（涵盖 Spring MVC、JAX-RS），借助 Dubbo 的多协议发布机制，可以轻松的将 RPC 服务发布为标准的 HTTP 端点，简化前端接入成本。</li><li><strong>Dubbo AOT</strong>（GraalVM Native Image）正式发布，特定场景下启动速度提升 10 倍，内存等资源消耗降低 4 倍。</li><li>升级&nbsp;<strong>JDK 21&nbsp;</strong>支持，增加 Project Loom 协程支持。</li><li><strong>可观测性</strong>进一步提升，进一步提升 metrics 统计指标，简化 tracing 等使用。</li></ul><p style="text-align:justify">接下来，我们将对其中的一些重点功能进行更深入的讲解。</p><span id="OSC_h3_1"></span><h3>Spring Boot Starters</h3><p style="text-align:justify">3.3.0-beta.1 版本发布的 Starter 组件，可以大幅简化 Spring Boot 用户的应用开发，以 Zookeeper 注册中心为例，新版本的开发只需要增加以下一个依赖即可。可以通过&nbsp;<u><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fstart.dubbo.apache.org%2F%253Fspm%253Da2c6h.13046898.publish-article.3.4b9b6ffaLAbqGN" target="_blank">https://start.dubbo.apache.org</a></em></u>&nbsp;生成项目快速体验。</p><pre><code>&lt;dependency&gt;
    &lt;groupId&gt;org.apache.dubbo&lt;/groupId&gt;
    &lt;artifactId&gt;dubbo-spring-boot-starter&lt;/artifactId&gt;
&lt;/dependency&gt;
&lt;dependency&gt;
    &lt;groupId&gt;org.apache.dubbo&lt;/groupId&gt;
    &lt;artifactId&gt;dubbo-zookeeper-spring-boot-starter&lt;/artifactId&gt;
&lt;/dependency&gt;</code></pre><p style="text-align:justify">同样的，还有 dubbo-curator5-zookeeper-spring-boot-starter、 dubbo-nacos-spring-boot-starter、 dubbo-sentinel-spring-boot-starter、 dubbo-seata-spring-boot-starter 、 dubbo-observability-spring-boot-starter、 dubbo-tracing-otel-zipkin-spring-boot-starter 等。</p><span id="OSC_h3_2"></span><h3>Dubbo AOT 静态化（GraalVM Native Image）</h3><p style="text-align:justify">Dubbo AOT 是 Dubbo 3.3.0-beta 版本发布的静态化方案支持，它基于 GraalVM Native Image 实现，旨在大幅提升 Dubbo 应用的启动与运行速度。可以通过&nbsp;<u><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fstart.dubbo.apache.org%2F%253Fspm%253Da2c6h.13046898.publish-article.4.4b9b6ffaLAbqGN" target="_blank">https://start.dubbo.apache.org</a></em></u>&nbsp;快速生成包含 GraalVM 支持的项目，快速体验，以下是测试环境的一些运行效果总结。</p><p style="text-align:justify">Native 的可视性文件比 Jar 包方式的启动耗时降低了 12 倍+，在客户端应用，它的启动耗时降低了 11 倍+。所以在刚刚提到的 Serverless 场景上，它能提供一个非常好的启动速度。在扩容的时候能够达到秒级，甚至达到毫秒级。</p><p style="text-align:center"><img src="https://pic3.zhimg.com/80/v2-3afe07303b9f9375b5d15419d3f69376_720w.webp" referrerpolicy="no-referrer"></p><p style="text-align:justify">通过静态化执行文件执行后，比都为 Jar 包的情况，第一次调用的耗时降低 6 倍。这第一次调用代表的是预热的时长，以及第一次需要解析的类，包括资源的情况等等。这让我们在 Serverless 场景下能够瞬间达到性能峰值。</p><p style="text-align:center"><img src="https://pic3.zhimg.com/80/v2-6171ecb37669792b91c74639635a41ea_720w.webp" referrerpolicy="no-referrer"></p><p style="text-align:justify">在 Dubbo 应用的基础上，它的内存损耗也降低大概 3.5 倍。Native 静态化执行文件可以做到 60M 的内存占比，<strong>在客户端它的内存损耗也大概降低了 4 倍。</strong></p><p style="text-align:center"><img src="https://pic1.zhimg.com/80/v2-dcc129be07bbf1f96721cf97ab260464_720w.webp" referrerpolicy="no-referrer"></p><span id="OSC_h3_3"></span><h3>Triple 协议升级</h3><p style="text-align:justify">Triple 协议是 Dubbo3 设计的基于 HTTP 的 RPC 通信协议规范，它完全兼容 gRPC 协议，支持 Request-Response、Streaming 流式等通信模型，可同时运行在 HTTP/1 和 HTTP/2 之上。</p><p style="text-align:justify">你可以使用 cURL 等标准 HTTP 工具直接访问发布的 Triple 服务，大幅降低测试与前端接入成本。</p><pre><code>curl \
 --header 'Content-Type: application/json' \
 --data '{"sentence": "Hello World"}' \
 http://localhost:8080/apache.dubbo.demo.example.v1.ExampleService/Say</code></pre><p style="text-align:justify">Dubbo 框架提供了 Triple 协议的多种语言实现，它们可以帮助你构建浏览器、gRPC 兼容的 HTTP API 接口。Dubbo 框架同时支持 Protobuf-first 和 Interface-first 编程模式，即不绑定 IDL 的服务定义与开发模式，比如在 Dubbo Java 中，你可以选择使用 Java Interface 和 Pojo 类定义 Dubbo 服务，并将其发布为基于 Triple 协议通信的微服务。</p><p style="text-align:justify">以下是 Triple 协议的多语言实现布局，目前已经支持了浏览器端的 Dubbo-web，后端的 Java、Go、Node.js、Rust 等，未来会提供 Mobile 端以及更多后端语言实现。</p><p style="text-align:center"><img src="https://pic3.zhimg.com/80/v2-c7b948c09210468c65170512dd40e186_720w.webp" referrerpolicy="no-referrer"></p><span id="OSC_h3_4"></span><h3>Rest 协议升级</h3><p style="text-align:justify">基于 Dubbo 的多协议发布能力，rest 风格的 http 服务发布可以有非常多的应用场景，它可以让你在增加少量注解代码的情况下（当前支持 Spring MVC、JAX-RS 两套注解模式），将之前的 RPC 服务发布为标准的 rest 风格 HTTP 服务。这在很多场景将会非常有用，比如以下是一个 Dubbo 与 Spring Cloud 体系互通的用例。</p><p style="text-align:justify">我们要实现以下互通目标，让左边的 Spring 应用能够调用到右侧的 Dubbo 应用。我们可以利用 Dubbo 的多协议发布机制，为一些服务配置多协议（tcp &amp; http）发布，让这个 Dubbo 应用同时服务 Dubbo 微服务体系和 Spring Cloud 微服务体系。</p><p style="text-align:center"><img src="https://pic2.zhimg.com/80/v2-f5fa8b4cec37aa6c8038a6e3eb7224c5_720w.webp" referrerpolicy="no-referrer"></p><p style="text-align:justify">为了实现这个效果，我们只需要在配置中增加多协议配置即可：</p><pre><code>dubbo:
  protocols:
    - id: rest
      name: rest
      port: 8090
    - id: dubbo
      name: dubbo
      port: 20880</code></pre><p style="text-align:justify">同时，@DubboService 服务注解中也配置为多协议发布。</p><pre><code>@DubboService(protocol="rest,dubbo")
public class UserServiceImpl implements UserService {}</code></pre><p style="text-align:justify">这样，我们就成功的将 UserService 服务以 dubbo 和 rest 两种协议发布了出去（多端口多协议的方式），dubbo 协议为 Dubbo 体系服务，rest 协议为 Spring Cloud 体系服务。</p><p style="text-align:justify">为了发布标准的 rest 风格服务，记得在接口上增加注解，在这里我们使用 Spring MVC 注解。</p><pre><code>@RestController
@RequestMapping("/users")
public interface UserService {
    @GetMapping(value = "/list")
    List&lt;User&gt; getUsers();
}</code></pre><span id="OSC_h3_5"></span><h3>可观测性（Metrics &amp; Tracing）</h3><p style="text-align:justify">首先，是大幅提升了 Metrics、Tracing 的易用性，对于 Spring Boot 用户而言，只需要添加一个依赖即可。</p><p style="text-align:justify">开启 Metrics：</p><pre><code>&lt;dependency&gt;
    &lt;groupId&gt;org.apache.dubbo&lt;/groupId&gt;
    &lt;artifactId&gt;dubbo-observability-spring-boot-starter&lt;/artifactId&gt;
&lt;/dependency&gt;</code></pre><p style="text-align:justify">开启 Tracing：</p><pre><code>&lt;dependency&gt;
    &lt;groupId&gt;org.apache.dubbo&lt;/groupId&gt;
    &lt;artifactId&gt;dubbo-tracing-otel-zipkin-spring-boot-starter&lt;/artifactId&gt;
&lt;/dependency&gt;</code></pre><p style="text-align:justify">其次，在监控指标的丰富度上进一步提升。</p><p style="text-align:center"><img src="https://pic3.zhimg.com/80/v2-ad54c5f19d7abd1f741f2e0b78e85d3e_720w.webp" referrerpolicy="no-referrer"></p><span id="OSC_h3_6"></span><h3>JDK 21 与协程</h3><p style="text-align:justify">3.3.0-beta 版本可支持平滑升级到 JDK 21 版本，同时，增加了 Project Loom 协程支持，只需要配置 setThreadPool(virtual) 即可实现协程模型开启。</p><p style="text-align:justify">具体实现上，是我们在新版本增加了以下 Threadpool SPI 实现：</p><pre><code>virtual=org.apache.dubbo.common.threadpool.support.loom.VirtualThreadPool</code></pre><p style="text-align:justify">&nbsp;</p><pre><code>/**
 * Creates a thread pool that use virtual thread
 *
 * @see Executors#newVirtualThreadPerTaskExecutor()
 */
public class VirtualThreadPool implements ThreadPool {
    @Override
    public Executor getExecutor(URL url) {
        String name = url.getParameter(THREAD_NAME_KEY, (String) url.getAttribute(THREAD_NAME_KEY, DEFAULT_THREAD_NAME));
        return Executors.newThreadPerTaskExecutor(
            Thread.ofVirtual()
                .name(name, 1)
                .factory());
    }
}</code></pre><span id="OSC_h3_7"></span><h3>Roadmap</h3><p style="text-align:justify">对于 Dubbo3 而言，当前社区维护有 3.1、3.2、3.3 三个大的版本，其中 3.2 是当前推荐的稳定生产版本，3.3 正处于 beta 阶段，在接下来几个月将取代 3.2 成为最新稳定版本。</p><p style="text-align:justify">截止 3.3.0-beta.1 版本，整个 Dubbo3 规划的核心功能均已开发完成。从这个版本开始，Dubbo3 将进入长期稳定维护阶段，这意味着我们将不会再为任何的 Dubbo3 新版本引入新的功能规划，社区将专注在已有功能的迭代与稳定性保证上。基于这样的基调，我们制定未来半年的社区 Roadmap：<u><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fgithub.com%2Fapache%2Fdubbo%2Fissues%2F13065%253Fspm%253Da2c6h.13046898.publish-article.5.4b9b6ffaLAbqGN" target="_blank">https://github.com/apache/dubbo/issues/13065</a></em></u></p><p style="text-align:justify">关于面向未来的新功能，我们将在 Dubbo4 中持续探索，欢迎持续关注社区进展。</p><p style="text-align:justify"><em>作者：Apache Dubbo 社区</em></p><p style="text-align:justify"><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.aliyun.com%2Farticle%2F1393813%3Futm_content%3Dg_1000386180" target="_blank">原文链接</a></strong></p><p style="text-align:justify"><strong>本文为阿里云原创内容，未经允许不得转载。</strong></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 19 Dec 2023 01:56:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/yunqi/blog/10322295</guid>
            <link>https://my.oschina.net/yunqi/blog/10322295</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[2023 年的 Servo：贡献者数量增加与新功能亮相，展望未来规划]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div><div><div><p>2023 年，Servo 在开源浏览器引擎领域取得了显著的进展。今年，Servo 的主要代码库<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fservo%2Fservo" target="_blank">servo/servo</a>共收到了 1037 个拉取请求，这是去年的 382%；提交了 2485 次，是去年的 375%。其中，53 名独立贡献者参与了项目，比去年增长了 140%。</p><p style="text-align:center"><img height="336" src="https://oscimg.oschina.net/oscnet/up-4d7c9dcb7d605c38fe0af213450ff263005.png" width="433" referrerpolicy="no-referrer"></p><p>在所有的贡献中，由人类（而非机器人）提交的拉取请求中，有 30% 来自于 Igalia 之外的个人，18% 来自于非审查人员。Servo 在过去一年中在六场国际会议上进行了介绍，包括 RustNL、Web Engines Hackfest、LF Europe Member Summit、Open Source Summit Europe、GOSIM Workshop 和 GOSIM Conference。</p><p>Servo 现在拥有一个可用的「minibrowser」用户界面，支持屏幕外渲染，其实验性的 WebGPU 支持也得到了更新。此外，Servo 现在再次出现在<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwpt.fyi" target="_blank">wpt.fyi</a>上。Servo 的新布局引擎在 iframe、浮动、堆叠上下文、内联布局、边距折叠、‘position: sticky’、‘min-width’和‘min-height’、‘max-width’和‘max-height’、‘align-content’、‘justify-content’、‘white-space’、‘text-indent’、‘text-align: justify’、<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fservo.org%2Fblog%2F2023%2F05%2F31%2Fadding-support-for-outline-properties%2F" target="_blank">‘outline’和‘outline-offset’</a>以及‘filter: drop-shadow()’等方面表现出了其优势。</p><p style="text-align:center"><img height="336" src="https://oscimg.oschina.net/oscnet/up-d938266a007cc9d1532eb919eb68089a660.png" width="433" referrerpolicy="no-referrer"></p><p>在<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweb-platform-tests.org" target="_blank">Web Platform Tests</a>的部分测试中，Servo 的新布局引擎显示出了显著的进步。例如，在 floats 测试中，新布局引擎的通过率达到了 82.2%，而在 floats-clear 测试中达到了 73.3%。此外，Servo 在 Acid1 测试中也通过了新布局引擎，并在 CSS2 abspos、CSS2 定位和 CSS Position 测试套件中取得了优于旧布局引擎的成绩。</p><p>Servo 的下一步计划包括维护现有项目，发布 Android 每夜构建版本，完成与 Tauri 的整合（得益于 NLNet 的支持），以及实现对表格、更好的浮动支持和非拉丁文本的支持（也是得益于 NLNet 的支持）。</p><p>2024 年，Servo 将参加<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ffosdem.org%2F2024%2F" target="_blank">FOSDEM 2024</a>，Rakhi Sharma 将在 2 月 3 日 16:45 当地时间（15:45 UTC）进行关于「在 Rust 项目中嵌入 Servo」的演讲。Servo 团队也在积极寻找赞助商，以支持这个旨在提供可嵌入、独立、内存安全、模块化、并行 Web 渲染引擎的开发。有兴趣的个人或公司可以访问<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fservo.org%2Fsponsorship%2F" target="_blank">Servo 的赞助页面</a>，或通过邮件<a href="https://www.oschina.net/action/GoToLink?url=mailto%3Ajoin%40servo.org" target="_blank">join@servo.org</a>进行咨询。</p><p>在人们担忧浏览器引擎多样性陷入低谷的十年里，Servo 希望能够帮助改变这一现状。</p></div></div></div></div>
                                    ]]>
            </description>
            <pubDate>Tue, 19 Dec 2023 01:24:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271660/servo-2023</guid>
            <link>https://www.oschina.net/news/271660/servo-2023</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
    </channel>
</rss>
