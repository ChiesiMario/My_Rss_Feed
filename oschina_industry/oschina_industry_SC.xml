<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[开源中国-综合资讯]]>
        </title>
        <link>https://www.oschina.net/news/industry</link>
        <atom:link href="https://rsshub.app/oschina/news/industry" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[开源中国-综合资讯 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Thu, 18 Jan 2024 06:59:41 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[RWKV 元始智能完成种子轮融资，非 Transformer 架构的开源大语言模型]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>元始智能是一家国产开源非 Transformer 架构大语言模型提供商，其核心产品<strong>RWKV</strong>兼具 Transformer 和 RNN 的优势：推理效率高且恒定，显存占用少且恒定，支持无限上下文，对芯片友好。</p><p>近日，RWKV 元始智能<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2F7XpIuQ_sNQNzMNOqZajp3Q" target="_blank">完成种子轮融资</a></u>，投资方为陆奇于 2018 年创立的奇绩创坛和某匿名投资者。目前元始智能已开始继续融第二轮。</p><p>RWKV 是国产开源的首个非 Transformer 架构的大语言模型，目前已经迭代到第六代 RWKV-6。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-536b34de46699fb3de48f5d00644dded7b7.png" referrerpolicy="no-referrer"></p><p>RWKV 作者彭博在 2022 年 5 月开始训练 RWKV-2，当时只有 1 亿（100M）参数规模，后续在 2023 年 3 月训练了 RWKV-4 140 亿（14B）参数版本。</p><p>RWKV-5 的 15 亿和 30 亿参数版本已发布，且 70 亿参数版本会在 2024 年 1 月发布。而 RWKV-6 的 15 亿和 30 亿参数版本将在 2024 年 2 月发布，然后将继续训练 70 亿和 140 亿参数版本。</p><p>RWKV-5 和 RWKV-6 系列的特点是支持全球 100+种语言，也支持几十种编程语言，目前可以在 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.rwkv.com%2F" target="_blank">https://www.rwkv.com/ </a>体验在线 Demo。</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 18 Jan 2024 06:48:37 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276071</guid>
            <link>https://www.oschina.net/news/276071</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[智谱 AI 推出新一代基座模型 GLM-4，发起大模型开源基金]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>2024 年 01 月 16 日，在「智谱 AI 技术开放日 (Zhipu DevDay)」上，智谱 AI 发布新一代基座大模型 GLM-4，支持 128K 的上下文窗口长度，单次提示词能处理的文本可达 300 页，文生图和多模态理解得到增强，支持处理 Excel、PDF、PPT 等格式的文件，可自动调用代码解释器进行复杂的方程或微积分求解。</p><p><img src="https://oscimg.oschina.net/oscnet/up-ec790242fcd97c4ae3b363227a23e2c4e15.png" referrerpolicy="no-referrer"></p><p>此外还发布了 All Tools、GLMs、MaaS API、大模型科研基金、大模型开源基金以及「Z 计划」创业基金等内容。</p><p>其中「大模型开源基金」包括三个「一千」：</p><ul><li>第一个「一千」，是 1000 张卡。智谱 AI 将为大模型开源社区提供一千张卡，助力开源开发；</li><li>第二个「一千」，是 1000 万人民币。智谱 AI 将提供 1000 万元的现金用来支持与大模型相关的开源项目。</li><li>第三个「一千」是 1000 亿 tokens。智谱 AI 将为优秀的开源开发者提供 1000 亿免费 API tokens。</li></ul><p><img src="https://oscimg.oschina.net/oscnet/up-59f5243472f2ad88a4dcdaa6399e4738afc.png" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 18 Jan 2024 06:09:02 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276067</guid>
            <link>https://www.oschina.net/news/276067</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[红帽正在开发 AI 工具]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Red Hat 工程师 Jiri Kyjovsky&nbsp;<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flists.fedoraproject.org%2Farchives%2Flist%2Fdevel%40lists.fedoraproject.org%2Fthread%2FMHUCYUJS7VZBESFYTALNAVPARK4RHPQO%2F" target="_blank">透露称</a></u>，他们正在开发一款名为"<strong>Log Detective</strong>"的 AI 工具，通过人工智能模型来帮助分析 RPM 包构建失败的原因。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-4011afdd7b7b4264fa60f8d2096ddb05293.png" referrerpolicy="no-referrer"></p><p>via&nbsp;<em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flog-detective.com%2F%23about" target="_blank">https://log-detective.com/</a></u></em></p><p>该工具将利用 AI 模型来识别和解释构建失败，并提供简单的建议以解决问题。Log Detective 的目标是使 RPM 打包人员更容易找出构建失败的原因。他们正在训练 AI 模型，以便它能够理解 RPM 构建日志，并用简单的语言解释失败原因，并提供修复建议。</p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flog-detective.com%2F" target="_blank">Log Detective 官网写道</a>：</p><blockquote><p>每个构建都会产生数千行输出，分割在多个日志文件中。相关的错误消息可能在任何地方。这就像大海捞针一样。</p><p>经验丰富的打包者有一种直觉，错误消息最有可能出现在哪里，但无论如何，这个过程都很乏味。新手则常常被复杂性所淹没，完全错过错误消息。</p><p>Log Detective 通过训练 AI 模型来理解 RPM 构建日志，并用简单的语言解释错误，提供修复方法的建议，开发者根本不需要打开日志。</p></blockquote></div>
                                    ]]>
            </description>
            <pubDate>Thu, 18 Jan 2024 03:34:01 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276057/red-hat-ai-log-detective</guid>
            <link>https://www.oschina.net/news/276057/red-hat-ai-log-detective</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Linus Torvalds 重新开始为 Linux 6.8 合并新代码]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>上周末，Linus Torvalds 所居住的俄勒冈州波特兰地区<u><a href="https://www.oschina.net/news/275878/linux-6-8-merge-window-hiatus">遭遇严重冬季风暴</a></u>，导致互联网和电力中断。因此在 Linux 6.8 合并窗口期间，Linus 的 Git 合并工作被迫中断近五天。但从内核仓库的最新动态来看，合并工作现已重新启动。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-597e98686d727d741b06dac623483c6803b.png" referrerpolicy="no-referrer"></p><p>Linus Torvalds 今天在 social.kernel.org 上<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsocial.kernel.org%2Fusers%2Ftorvalds" target="_blank">发布的最后一条消息称</a></u>，他的第五天"休假"正在进行，他所在地区希望今晚之前恢复供电，尽管昨天也有过类似的承诺，但没有实现。但在这不不久后，他开始为 Linux 6.8 合并新代码：</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-7160aba63cd79c783f54e5bd0d0f2f11d6a.png" referrerpolicy="no-referrer"></p><p>到目前为止，他还没有在 Linux 内核邮件列表上宣布是否需要延长合并窗口，或者因为 4~5 天的停机时间而做其他改动，但至少内核树上有了新代码。</p><p>Linux 6.8 将带来许多新功能。如果原计划不变，Linux 6.8-rc1 应该会在本周日发布，标志着合并窗口的结束，而稳定版 6.8 内核应该会在 3 月中旬发布。</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 18 Jan 2024 03:05:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276056/linux-6-8-merges-resume</guid>
            <link>https://www.oschina.net/news/276056/linux-6-8-merges-resume</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[网易有道自研知识库问答引擎 QAnything 开源]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>网易有道<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FkFOqYqhpy0Q4OvvGul-3qA" target="_blank">宣布</a>自研的知识库问答引擎 QAnything 正式开源：Q 是 question，A 是 answer，QAnything 的目标在于「万物皆可问」。</p><p>除了可以调用云端大模型服务，还支持纯本地部署。系统支持 word、ppt、excel、pdf、图片等多种文档格式，直接导入进去即可像"ChatGPT"一样问答。</p><p><img alt="" height="443" src="https://oscimg.oschina.net/oscnet/up-dd1c3f39b8916876b15ad0cc25aeaa24bfa.png" width="500" referrerpolicy="no-referrer"></p><p>（QAnything 系统架构图）</p><p>QAnything 的主要原理是基于检索增强的生成（Retrieval Augmented Generation，简称 RAG）。作为有道自研的 RAG 引擎，QAnything 结合了用户私有数据和大模型的优势——用户的任何内容，以任意的形式存在，比如各种格式的文档，音频，数据库等，都可以在 QAnything 的支持下，变成可以针对其内容进行问答的使用方式，通过这个技术框架用户可以很方便地搭建自己的智能知识助手。</p><p>值得一提的是，QAnything 是一套完整的 RAG 系统，包括专门优化的自研的 embedding 和 rerank 模型，微调后的 LLM，优化后的推理代码，向量数据库，以及一个立即上手可用的前端。所有的算法模型（包括 7B 大模型+embedding/rerank+OCR）占用显存不超过 16G。</p><p>如今，QAnything 已在有道翻译文档问答、有道速读及有道内部业务的客服系统等多个产品中进行了应用。</p><p><img height="225" src="https://oscimg.oschina.net/oscnet/up-6945d43fa219cdaa7b5009ef9ffeb614e4e.png" width="500" referrerpolicy="no-referrer"></p><p><span style="background-color:#ffffff; color:rgba(0, 0, 0, 0.9)">公告表示，目前 QAnything 项目还在不断迭代，欢迎大家参与开发，并给予更多反馈。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 18 Jan 2024 02:36:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276054</guid>
            <link>https://www.oschina.net/news/276054</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[WeChatMsg - 开源微信聊天记录管理工具]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>WeChatMsg 是一款开源的微信聊天管理工具。</p><div><a href="https://memotrace.lc044.love/"><img height="240" src="https://memotrace.lc044.love/img/logo%20-%20%E5%89%AF%E6%9C%AC.png" referrerpolicy="no-referrer"></a></div><blockquote><div>&nbsp;</div><h2>前言</h2><div><p>我深信有意义的不是微信，而是隐藏在对话框背后的一个个<strong>深刻故事</strong>。未来，每个人都能拥有 AI 的陪伴，而你的数据能够赋予它有关于你过去的珍贵记忆。我希望每个人都有将自己的生活痕迹👨‍👩‍👦👚🥗🏠️🚴🧋⛹️🛌🛀留存的权利，而不是遗忘💀。</p><p><strong>所以《留痕》</strong></p></div></blockquote><h2 style="text-align:start">🍉功能</h2><ul><li>还原微信聊天界面
<ul><li>🗨文本✅</li><li>🏝图片✅</li><li>🐻‍❄️表情包✅</li><li>拍一拍等系统消息✅</li></ul></li><li>导出聊天记录
<ul><li>sqlite 数据库✅</li><li>HTML(文本、图片、视频、表情包、语音、文件、系统消息)✅</li><li>CSV 文档✅</li><li>TXT 文档✅</li><li>Word 文档✅</li></ul></li><li>分析聊天数据，做成可视化年报 (急需前端大佬提供优质模板)</li><li>🔥<strong>项目持续更新中</strong></li><li>开发计划
<ul><li>自主选择年度报告年份</li><li>一键导出全部表情包、文件、图片、视频、语音</li><li>合并多个备份数据</li><li>批量导出数据</li><li>个人年度报告</li><li>群组年度报告</li><li>按日期、关键词索引</li></ul></li><li>小伙伴们想要其他功能可以留言哦📬</li><li>🔥项目正处于并将长期处于发展阶段，给我一些时间♾️，你所期望的未来都会实现</li></ul></div>
                                                                ]]>
            </description>
            <pubDate>Thu, 18 Jan 2024 02:18:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/p/wechatmsg</guid>
            <link>https://www.oschina.net/p/wechatmsg</link>
        </item>
        <item>
            <title>
                <![CDATA[好好的 「代码优化」 是怎么一步步变成 「过度设计」 的]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="rich_media_content js_underline_content
                       autoTypeSetting24psection
            " id="js_content"><section style="margin-bottom: 8px;outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);text-align: center;visibility: visible;" data-mpa-powered-by="yiban.io"><img class="rich_pages wxw-img __bg_gif" data-backh="96" data-backw="578" data-cropselx1="0" data-cropselx2="578" data-cropsely1="0" data-cropsely2="96" data-imgfileid="503042843" data-ratio="0.16666666666666666" src="https://oscimg.oschina.net/oscnet/0cd486c9-de1a-49c7-a79b-2306f73c35c6.gif" data-type="gif" data-w="636" style="outline: 0px;letter-spacing: 0.544px;font-size: var(--articleFontsize);border-radius: 8px;text-align: justify;width: 100%;visibility: visible !important;background-size: 16px !important;height: auto;" referrerpolicy="no-referrer"><br style="outline: 0px;visibility: visible;"></section><section data-mpa-template="t" data-mpa-template-id="502" data-mpa-category="模板" style="outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);visibility: visible;"><section data-mpa-category="模板" data-mid="" style="padding-right: 1px;padding-left: 1px;outline: 0px;width: 677px;display: flex;justify-content: flex-start;align-items: center;flex-direction: column;visibility: visible;"><section data-mid="" style="outline: 0px;letter-spacing: 0.544px;width: 675px;display: grid;grid-template-columns: 26px auto;visibility: visible;"><section data-mid="" style="outline: 0px;width: 26px;height: 14px;display: flex;justify-content: center;align-items: center;align-self: center;visibility: visible;"><br style="outline: 0px;visibility: visible;"></section><section data-mid="" style="padding-left: 7px;outline: 0px;display: flex;justify-content: flex-start;align-items: center;visibility: visible;"><section data-mid="" style="margin-right: 7px;outline: 0px;text-align: left;visibility: visible;"><p data-mid="" style="outline: 0px;width: 0px;font-size: 14px;font-family: PingFangSC-Semibold, &quot;PingFang SC&quot;;font-weight: bold;color: rgb(58, 92, 244);line-height: 20px;visibility: visible;"><br style="outline: 0px;visibility: visible;"></p></section><section data-mid="" style="margin-bottom: 4px;outline: 0px;width: 635px;height: 1px;border-top: 1px solid rgb(58, 92, 244);align-self: flex-end;visibility: visible;"><br style="outline: 0px;visibility: visible;"></section></section></section><section data-mid="" style="padding: 7px 14px 9px 19px;outline: 0px;width: 675px;text-align: left;border-bottom: 1px solid rgb(58, 92, 244);visibility: visible;"><p style="margin-top: 8px;margin-bottom: 8px;outline: 0px;min-height: 24px;letter-spacing: 0.578px;text-align: justify;visibility: visible;line-height: 1.75em;"><span style="color: rgb(62, 62, 62);font-size: 15px;letter-spacing: 0.578px;text-wrap: wrap;">有一天 Review 师妹的代码，看到一行很难看的代码，毕竟师妹刚开始转 JAVA，一些书写小习惯还是要养成，所以锱铢必较还是有必要的，于是给出了一些优化思路的建议，以及为什么要这么做。建议完后，我并没有停下」追求极致「的脚步，随着不断的思考，发现这段代码的优化慢慢变得五花八门起来了，完成了一次「代码优化」到「过度设计」的典型思考过程，这过程中涉及了很多 Java 的语法糖及设计模式的东西，很典型，能启发思考，遂记录下来。</span></p></section></section></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><br style="outline: 0px;visibility: visible;"></section><section style="margin-bottom: 0px;outline: 0px;box-sizing: inherit;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);color: rgba(25, 26, 31, 0.9);font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 16px;text-align: center;visibility: visible;line-height: 1.75em;"><span style="outline: 0px;visibility: visible;font-size: 15px;letter-spacing: 1px;"><img class="rich_pages wxw-img" data-imgfileid="503042840" data-ratio="0.3161764705882353" data-s="300,640" data-type="png" data-w="408" src="https://oscimg.oschina.net/oscnet/32fe6b4b-8bdc-4381-812a-d4d61bf97d58.png" style="outline: 0px;color: rgb(34, 34, 34);font-family: system-ui, -apple-system, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;visibility: visible !important;width: 113px !important;" referrerpolicy="no-referrer"></span></section><section style="margin-bottom: 0px;outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);color: rgb(34, 34, 34);text-align: center;visibility: visible;line-height: normal;"><span style="outline: 0px;color: rgb(3, 69, 255);font-family: -apple-system, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 18px;letter-spacing: 1px;visibility: visible;">一切的开始</span></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><br></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><span style="font-size: 15px;color: rgb(62, 62, 62);">起初是一段很简单的代码，开始仅仅是将外域的一些标识符转换为域内的标识符。</span></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><br></section><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="cs"><code><span class="code-snippet_outer">public&nbsp;Integer&nbsp;parseSaleType(String&nbsp;saleTypeStr){</span></code><code><span class="code-snippet_outer">  if(saleTypeStr == null || saleTypeStr.equals("")){</span></code><code><span class="code-snippet_outer">    return null;</span></code><code><span class="code-snippet_outer">  }</span></code><code><span class="code-snippet_outer">  if(saleTypeStr.equals("JX")){</span></code><code><span class="code-snippet_outer">    return 1;</span></code><code><span class="code-snippet_outer">  }</span></code><code><span class="code-snippet_outer">  return null;</span></code><code><span class="code-snippet_outer">}</span></code></pre></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><br></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><span style="font-size: 15px;color: rgb(62, 62, 62);">逻辑上很简单，实现的逻辑看上去也没啥大问题，基本学校的老师也是这么教的。</span></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><span style="font-size: 15px;color: rgb(62, 62, 62);"><br></span></section><section style="margin-bottom: 0px;outline: 0px;box-sizing: inherit;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);color: rgba(25, 26, 31, 0.9);font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 16px;text-align: center;visibility: visible;line-height: normal;"><span style="outline: 0px;font-size: 15px;letter-spacing: 1px;visibility: visible;"><img class="rich_pages wxw-img" data-imgfileid="503042842" data-ratio="0.3056872037914692" data-s="300,640" data-type="png" data-w="422" src="https://oscimg.oschina.net/oscnet/9766627e-6900-4974-8a8e-eabb92ae0829.png" style="outline: 0px;color: rgb(34, 34, 34);font-family: system-ui, -apple-system, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;visibility: visible !important;width: 117px !important;" referrerpolicy="no-referrer"></span></section><section style="margin-bottom: 0px;outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);color: rgb(34, 34, 34);text-align: center;visibility: visible;line-height: normal;"><span style="outline: 0px;font-family: -apple-system, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 18px;letter-spacing: 1px;visibility: visible;color: rgb(0, 17, 255);">语法规范</span></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><br></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;color: rgb(62, 62, 62);">但是嘛<span style="color: rgb(62, 62, 62);letter-spacing: 1px;">，不好看也容易犯错误，鸡蛋里挑骨头也得挑，于是给出了几个写代码的建议：</span></span></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></section><span id="OSC_h4_1"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong><strong style="outline: 0px;visibility: visible;"><span style="color: rgb(0, 17, 255);outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">有函数式方法的尽量用</span></strong></span></h4><section style="margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="color: rgb(0, 17, 255);outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;"><br></span></strong></span></section><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="javascript"><code><span class="code-snippet_outer"><span class="code-snippet__comment">//saleTypeStr == nullObjects.isNull(saleTypeStr)</span></span></code></pre></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><br></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><span style="font-size: 15px;color: rgb(62, 62, 62);">首先呢，虽然由于判断 null 这么写不会报错，但是按照常量写==前面的要求，应该倒过来写。另外，这种有 JDK 原生函数式的判断方法，还是优先使用函数式的写法，一来是有方法名比较直观，另外也是方便之后熟练使用 Lamada，别写出 .filter(x -&gt; null == x) 这样的写法，还是 .filter(Objects::isNull) 更可读些。</span></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><span style="color: rgb(20, 20, 220);font-weight: bold;letter-spacing: 0.578px;background-color: rgb(255, 255, 255);font-family: -apple-system, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 16px;text-indent: 0em;"><br></span></section><span id="OSC_h4_2"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 8px;margin-bottom: 8px;text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;"><span style="outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong><strong style="outline: 0px;visibility: visible;"><span style="color: rgb(0, 17, 255);outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">判断字符串为空不要自己写容易漏逻辑，尽量使用现成的方法</span></strong></span></h4><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><br></section><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="bash"><code><span class="code-snippet_outer">//if(saleTypeStr&nbsp;==&nbsp;null&nbsp;||&nbsp;saleTypeStr.equals(""))</span></code><code><span class="code-snippet_outer">if(StringUtils.isBlank(saleTypeStr))</span></code></pre></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><br></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><span style="font-size: 15px;color: rgb(62, 62, 62);">虽然原方法里无论判不判断空字符或者空格字符都不会影响最终方法的表征，但是从第一行想表达的判断「字符串是不是为空」这件事来看，这行并不能判断「空格字符」存在的情况，所以词不达意，另外也趁机强化记忆下 isBlank 和 isEmpty 的区别。</span></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><span style="font-size: 15px;color: rgb(62, 62, 62);">org.apache.commons.lang3 里有很多工具类，方法比较成熟逻辑也比较完整。</span></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><span style="font-size: 15px;color: rgb(62, 62, 62);">同理 org.apache.commons.collections4.CollectionUtils 还有一堆集合操作的工具。</span></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><span style="font-size: 15px;color: rgb(62, 62, 62);"><br></span></section><span id="OSC_h4_3"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 8px;margin-bottom: 8px;text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;"><span style="outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong><strong style="outline: 0px;visibility: visible;"><span style="color: rgb(0, 17, 255);outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">equals 判定，常量写前面</span></strong></span></h4><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><br></section><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="bash"><code><span class="code-snippet_outer">//if(saleTypeStr.equals("JX"))</span></code><code><span class="code-snippet_outer">if("JX".equals(saleTypeStr))</span></code></pre></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><br></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><span style="font-size: 15px;color: rgb(62, 62, 62);">虽然前面判断过 null，所以这里并不会报空指针，但是但凡之后书写前面漏了，这里就开始报错了。</span></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><br></section><span id="OSC_h4_4"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 8px;margin-bottom: 8px;text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;"><span style="outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong><strong style="outline: 0px;visibility: visible;"><span style="color: rgb(0, 17, 255);outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">少用魔法值，定义常量</span></strong></span></h4><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><strong style="color: rgb(62, 62, 62);font-size: 14px;letter-spacing: 0.034em;"></strong></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><br></section><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="java"><code><span class="code-snippet_outer">private&nbsp;static&nbsp;final&nbsp;String&nbsp;JX_SALE_TYPE_STR&nbsp;=&nbsp;"JX";</span></code><code><span class="code-snippet_outer">private static final Integer JX_SALE_TYPE_INT = 1;</span></code></pre></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><br></section><section style="line-height: 1.75em;margin-bottom: 8px;margin-top: 8px;"><span style="font-size: 15px;color: rgb(62, 62, 62);">但凡同一个魔法值在多处用，就怕漏改，所以收束定义在常量下，至少能保证全局引用的统一性。</span></section><section style="line-height: 1.75em;margin-bottom: 8px;margin-top: 8px;"><span style="font-size: 15px;color: rgb(62, 62, 62);"><br></span></section><span id="OSC_h4_5"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;margin-top: 8px;margin-bottom: 8px;"><span style="outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong><strong style="outline: 0px;visibility: visible;"><span style="color: rgb(0, 17, 255);outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">无状态方法，可选择定义为类静态</span></strong></span></h4><p style="line-height: 1.75em;margin-top: 8px;margin-bottom: 8px;"><br></p><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="typescript"><code><span class="code-snippet_outer">//public&nbsp;Integer&nbsp;parseSaleType(String&nbsp;saleTypeStr)public static Integer parseSaleType(String saleTypeStr)</span></code></pre></section><section style="line-height: 1.75em;margin-bottom: 8px;margin-top: 8px;"><br></section><section style="line-height: 1.75em;margin-bottom: 8px;margin-top: 8px;"><span style="font-size: 15px;color: rgb(62, 62, 62);">方法本身跟所在类的实例对象状态无关，且不会诱发线程安全问题，故符合被定义为 static 的条件，可先于对象创建在方法区，防止每个对象创建一次的时候，堆内存创建一次。</span></section><section data-mpa-template="t" mpa-from-tpl="t"><section style="margin: 33px auto;visibility: visible;" mpa-from-tpl="t"><section style="transform: scale(0.9);transform-origin: center center;box-sizing: border-box;visibility: visible;margin-top: 0px;margin-bottom: 0px;line-height: normal;"><section style="display: flex;flex-flow: row;text-align: center;justify-content: center;box-sizing: border-box;visibility: visible;" mpa-from-tpl="t"><section style="display: inline-block;vertical-align: middle;width: 156.797px;align-self: center;box-sizing: border-box;visibility: visible;" mpa-from-tpl="t"><section style="margin-top: 0.5em;margin-bottom: 0.5em;box-sizing: border-box;visibility: visible;" mpa-from-tpl="t"><section style="margin-bottom: 0px;outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;visibility: visible;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);text-align: center;line-height: normal;"><img class="rich_pages wxw-img" data-imgfileid="503042841" data-ratio="0.3056872037914692" data-s="300,640" src="https://oscimg.oschina.net/oscnet/3b57d41f-bf50-46bc-9f31-e741973316f3.png" data-type="png" data-w="422" style="outline: 0px;letter-spacing: 0.544px;font-size: 14px;visibility: visible !important;width: 117px !important;" referrerpolicy="no-referrer"></section><p style="outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);color: rgb(100, 99, 99);font-size: 15px;text-align: center;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="outline: 0px;font-family: -apple-system, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 18px;color: rgb(0, 17, 255);letter-spacing: 1px;">逻辑简化</span></p></section></section></section></section></section></section><section style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="font-size: 15px;color: rgb(62, 62, 62);letter-spacing: 1px;">语法的问题强调完，就得再琢磨琢磨这段逻辑需不需要这么多代码来表述了，乍眼一看没问题，但其实没必要写这么多。</span></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 8px;"><span style="font-size: var(--articleFontsize);letter-spacing: 0.034em;text-align: left;"><br></span></section><span id="OSC_h4_6"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 0.5em;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;"><span style="outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong><strong style="outline: 0px;visibility: visible;"><span style="color: rgb(0, 17, 255);outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">明确主体逻辑</span></strong></span></h4><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 8px;"><strong style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: var(--articleFontsize);letter-spacing: 0.034em;"><span style="font-size: 15px;color: rgb(62, 62, 62);"><br></span></strong></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 8px;"><strong style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: var(--articleFontsize);letter-spacing: 0.034em;"><span style="font-size: 15px;color: rgb(62, 62, 62);">判断入参有效性 -&gt; 处理核心逻辑 -&gt; 缺省返回</span></strong><span style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.034em;font-size: 15px;color: rgb(62, 62, 62);">，其实这个方法的构建思路是非常标准且合乎常理的，思考习惯很好，只是在这个简单的方法场景不免逻辑有些冗余。</span></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 8px;"><br></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 8px;"><span style="font-size: 15px;color: rgb(62, 62, 62);">其实再看这个方法，最核心的逻辑就是把字符串对应到数字上，其他不命中的情况返回 null 就可以了，那么简化逻辑后，为空判定其实可以去掉，直接变为：</span></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><br></section><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="java"><code><span class="code-snippet_outer">private&nbsp;static&nbsp;final&nbsp;String&nbsp;JX_SALE_TYPE_STR&nbsp;=&nbsp;"JX";</span></code><code><span class="code-snippet_outer">private static final Integer JX_SALE_TYPE_INT = 1;</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">public static Integer parseSaleType(String saleTypeStr){</span></code><code><span class="code-snippet_outer">  if(JX_SALE_TYPE_STR.equals(saleTypeStr)){</span></code><code><span class="code-snippet_outer">    return JX_SALE_TYPE_INT;</span></code><code><span class="code-snippet_outer">  }</span></code><code><span class="code-snippet_outer">  return null;</span></code><code><span class="code-snippet_outer">}</span></code></pre></section><section><section><section powered-by="xiumi.us"><p style="white-space: normal;margin-top: 0px;margin-bottom: 0px;"><strong style="letter-spacing: 0.034em;"><span style="font-size: 15px;"><br></span></strong></p><span id="OSC_h4_7"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 0.5em;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;"><span style="outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong><strong style="outline: 0px;visibility: visible;"><span style="color: rgb(0, 17, 255);outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">语法简化：三元运算符</span></strong></span></h4><p><br></p></section></section><section style="margin-top: 0px;margin-bottom: 0px;"><span style="color: rgb(62, 62, 62);font-size: 15px;letter-spacing: 0.034em;">再仔细看下场景有没有成熟的范式，【布尔式+返回值+非此即彼】，三元运算符可堪一用。</span></section></section><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="cs"><code><span class="code-snippet_outer">public static Integer parseSaleType(String saleTypeStr){</span></code><code><span class="code-snippet_outer">  return JX_SALE_TYPE_STR.equals(saleTypeStr) ? JX_SALE_TYPE_INT : null;</span></code><code><span class="code-snippet_outer">}</span></code></pre></section><section style="font-size: 15px;margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><section style="text-align: justify;justify-content: flex-start;margin: 10px 0%;display: flex;flex-flow: row;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: bottom;width: auto;min-width: 10%;flex: 0 0 auto;height: auto;align-self: flex-end;"><section powered-by="xiumi.us"><p style="white-space: normal;"><br></p><span id="OSC_h4_8"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 0.5em;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;"><span style="letter-spacing: 1px;"><span style="outline: 0px;visibility: visible;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong></span><strong style="color: rgb(0, 17, 255);letter-spacing: 1px;outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">语法简化：Optional</span></strong></span></h4><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 0.5em;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;"><br></h4><span id="OSC_h4_9"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 0.5em;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;"><span style="font-size: 15px;">这个场景范式也满足，【可能为空，有后续处理，有条件，有缺省值】，Optional 也算完美契合。</span></h4><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 0.5em;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;"><br></h4></section></section></section></section><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="cpp"><code><span class="code-snippet_outer">public static Integer parseSaleType(String saleTypeStr){</span></code><code><span class="code-snippet_outer">  Optional.ofNullable(saleTypeStr).filter(JX_SALE_TYPE_STR::equals).map(o -&gt; JX_SALE_TYPE_INT).orElse(null);</span></code><code><span class="code-snippet_outer">}</span></code></pre></section><p style="line-height: 1.75em;margin-top: 0px;margin-bottom: 8px;"><br></p><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;font-size: 15px;"><section powered-by="xiumi.us" style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;font-size: 15px;"><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;font-size: 15px;"><section powered-by="xiumi.us" style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;font-size: 15px;"><span id="OSC_h4_10"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 0.5em;text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;margin-bottom: 8px;"><span style="letter-spacing: 1px;"><span style="outline: 0px;visibility: visible;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong></span><strong style="color: rgb(0, 17, 255);outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">方法独立存在的必要性讨论</span></strong></span></h4><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 0.5em;text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;margin-bottom: 8px;"><br></h4><span id="OSC_h4_11"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 0.5em;text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;margin-bottom: 8px;"><span style="font-size: 15px;">其实语法简化到三元运算符和 Optional 这一步，如果一个方法体内只有这一行，这个方法独立存在的必要性的就开始存疑了，如果所有的转换流程都能收束在工程中的某个环节上，且保证这个方法的引用仅存在一处，那么这一行代码其实放在主干代码上更好，防止来回跳转的代码阅读障碍，当然这也仅仅是在现状下的讨论，如果存在且不仅限于以下几种状况时还得独立出来：</span></h4></section></section></section></section><ol class="list-paddingleft-1" style="list-style-type: decimal;"><li style="margin-top: 0.5em;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;font-size: 15px;"><section style="margin-top: 0.5em;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;font-size: 15px;"><section style="text-align: justify;justify-content: flex-start;margin: 10px 0%;display: flex;flex-flow: row;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: bottom;width: auto;min-width: 10%;flex: 0 0 auto;height: auto;align-self: flex-end;"><span style="font-size: 15px;">未来除了一种逻辑分支外，还会扩展其他分支，并且有被扩展的可能；</span></section></section></section></li><li style="margin-top: 0.5em;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;font-size: 15px;"><section style="margin-top: 0.5em;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;font-size: 15px;"><section style="text-align: justify;justify-content: flex-start;margin: 10px 0%;display: flex;flex-flow: row;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: bottom;width: auto;min-width: 10%;flex: 0 0 auto;height: auto;align-self: flex-end;"><span style="font-size: 15px;">虽然还是一种逻辑分支，但是判断的内容变长了，跟上下文和调用状态有关；</span></section></section></section></li><li style="margin-top: 0.5em;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;font-size: 15px;"><section style="margin-top: 0.5em;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;font-size: 15px;"><section style="text-align: justify;justify-content: flex-start;margin: 10px 0%;display: flex;flex-flow: row;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: bottom;width: auto;min-width: 10%;flex: 0 0 auto;height: auto;align-self: flex-end;"><span style="font-size: 15px;">虽然还是一种逻辑分支，但是逻辑总在调整；</span></section></section></section></li><li style="margin-top: 0.5em;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;font-size: 15px;"><section style="margin-top: 0.5em;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;font-size: 15px;"><section style="text-align: justify;justify-content: flex-start;margin: 10px 0%;display: flex;flex-flow: row;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: bottom;width: auto;min-width: 10%;flex: 0 0 auto;height: auto;align-self: flex-end;"><span style="font-size: 15px;">一处定义，多点引用；</span></section></section></section><section style="margin-top: 0.5em;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;font-size: 15px;"><section style="text-align: justify;justify-content: flex-start;margin: 10px 0%;display: flex;flex-flow: row;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: bottom;width: auto;min-width: 10%;flex: 0 0 auto;height: auto;align-self: flex-end;"><br></section></section></section></li></ol><section style="margin-top: 0.5em;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;font-size: 15px;"><section style="margin-bottom: 0px;outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);text-align: center;line-height: normal;"><img class="rich_pages wxw-img" data-imgfileid="503042839" data-ratio="0.328125" data-s="300,640" data-type="png" data-w="256" src="https://oscimg.oschina.net/oscnet/0b0881dd-148e-4d14-91fe-eb53964d59ed.png" style="outline: 0px;letter-spacing: 0.544px;font-size: 16px;visibility: visible !important;width: 122px !important;" referrerpolicy="no-referrer"></section><section style="margin-bottom: 0px;outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);color: rgb(100, 99, 99);font-size: 15px;text-align: center;line-height: normal;"><span style="outline: 0px;color: rgb(0, 17, 255);font-family: -apple-system, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 18px;letter-spacing: 1px;">继续拓展：定义枚举</span></section></section><section style="text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;font-size: 15px;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><br></section><section style="text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;font-size: 15px;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">「如无必要，勿增实体」</span></section><section style="text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;font-size: 15px;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><br></section><section style="text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;font-size: 15px;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">假如这个传入的字符其实还有很多种，返回的映射也有很多种的时候，其实在这里继续写一堆常量定义就很不理智了。</span></section><section style="text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;font-size: 15px;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><section style="text-align: left;justify-content: flex-start;margin: 10px 0%;display: flex;flex-flow: row nowrap;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: bottom;width: auto;min-width: 10%;flex: 0 0 auto;height: auto;align-self: flex-end;"><section style="margin-top: 0.5em;text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;margin-bottom: 8px;font-size: 15px;" powered-by="xiumi.us"><p style="margin-top: 0.5em;text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;margin-bottom: 8px;font-size: 15px;"><br></p><span id="OSC_h4_12"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 0.5em;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;"><span style="letter-spacing: 1px;"><span style="outline: 0px;visibility: visible;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong></span><strong style="color: rgb(0, 17, 255);letter-spacing: 1px;outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">值枚举构建</span></strong></span></h4><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;font-size: 15px;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><br></h4><span id="OSC_h4_13"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;font-size: 15px;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">考虑继续将入参的所有可能和出参的所有可能，可以构建为两组枚举值，这样所有的同簇常量就被放到一起了。</span></h4><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;font-size: 15px;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><br></h4><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;font-size: 15px;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><img class="rich_pages wxw-img" data-backh="189" data-backw="455" data-galleryid="" data-imgfileid="503042846" data-ratio="0.4153846153846154" data-s="300,640" src="https://oscimg.oschina.net/oscnet/f6a249a0-4411-4e31-abcc-705c6bab2de0.png" data-type="png" data-w="455" style="text-align: center;color: rgba(0, 0, 0, 0.9);font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: var(--articleFontsize);letter-spacing: 0.034em;width: 100%;" referrerpolicy="no-referrer"></h4></section></section></section></section><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="typescript"><code><span class="code-snippet_outer">public&nbsp;enum&nbsp;SaleTypeStrEnum{</span></code><code><span class="code-snippet_outer">  JX,</span></code><code><span class="code-snippet_outer">  // OTHERS</span></code><code><span class="code-snippet_outer">  ;</span></code><code><span class="code-snippet_outer">}</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">@AllArgsConstructor</span></code><code><span class="code-snippet_outer">@Getter</span></code><code><span class="code-snippet_outer">public enum SaleTypeIntEnum{</span></code><code><span class="code-snippet_outer">  JX(1),</span></code><code><span class="code-snippet_outer">  // OTHERS</span></code><code><span class="code-snippet_outer">  ;</span></code><code><span class="code-snippet_outer">  private Integer code;</span></code><code><span class="code-snippet_outer">}</span></code></pre></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><br></section><section style="text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;font-size: 15px;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><section style="text-align: left;justify-content: flex-start;margin: 10px 0%;display: flex;flex-flow: row nowrap;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: bottom;width: auto;min-width: 10%;flex: 0 0 auto;height: auto;align-self: flex-end;"><span style="font-size: 15px;letter-spacing: 1px;">但是这个枚举功能并不完善，因为从入参映射为 SaleTypeStrEnum，依然需要一段转换的逻辑，需要用到 SaleTypeStrEnum::name 来判定传参命中了哪个，所以这个逻辑不应该放在枚举外，继续补充：</span></section></section></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><br></section><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="cs"><code><span class="code-snippet_outer">public&nbsp;enum&nbsp;SaleTypeStrEnum{</span></code><code><span class="code-snippet_outer">  JX,</span></code><code><span class="code-snippet_outer">  // OTHERS </span></code><code><span class="code-snippet_outer">  ;</span></code><code><span class="code-snippet_outer">  public static SaleTypeStrEnum getByName(String saleTypeStr){</span></code><code><span class="code-snippet_outer">    for (SaleTypeStrEnum value : SaleTypeStrEnum.values()) {</span></code><code><span class="code-snippet_outer">      if(value.name().equals(saleTypeStr)){</span></code><code><span class="code-snippet_outer">        return value;</span></code><code><span class="code-snippet_outer">      }</span></code><code><span class="code-snippet_outer">    }</span></code><code><span class="code-snippet_outer">    return null;</span></code><code><span class="code-snippet_outer">  }</span></code><code><span class="code-snippet_outer">}</span></code></pre></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><br></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><span style="font-size: 15px;letter-spacing: 1px;text-align: left;background-color: rgb(255, 255, 255);color: rgb(34, 34, 34);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">方法有了，但是每次传进来值都要遍历整个枚举，O(n) 效率太低了，还是老规矩，空间换时间。</span><br></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><span style="font-size: 15px;color: rgb(62, 62, 62);"><br></span></section><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="typescript"><code><span class="code-snippet_outer">public&nbsp;enum&nbsp;SaleTypeStrEnum{</span></code><code><span class="code-snippet_outer">  JX,</span></code><code><span class="code-snippet_outer">  // OTHERS</span></code><code><span class="code-snippet_outer">  ;</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">  /**</span></code><code><span class="code-snippet_outer">    * 预热转换关系到内存</span></code><code><span class="code-snippet_outer">    */</span></code><code><span class="code-snippet_outer">  private static Map&lt;String, SaleTypeStrEnum&gt; NAME_MAP = Arrays.stream(SaleTypeStrEnum.values()).collect(Collectors.toMap(SaleTypeStrEnum::name, Function.identity()));</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">  public static SaleTypeStrEnum getByName(String saleTypeStr){</span></code><code><span class="code-snippet_outer">    return NAME_MAP.get(saleTypeStr);</span></code><code><span class="code-snippet_outer">  }</span></code><code><span class="code-snippet_outer">}</span></code></pre></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><br></section><p style="margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="font-size: 15px;text-align: left;background-color: rgb(255, 255, 255);color: rgb(34, 34, 34);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 1px;">这样每次检索就是 O(1) 了，那么最终方法体内也能使用 switch 管理原本的 if-else</span></p><p style="margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><br></p><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="cs"><code><span class="code-snippet_outer">public&nbsp;static&nbsp;Integer&nbsp;parseSaleType(String&nbsp;saleTypeStr){</span></code><code><span class="code-snippet_outer">  switch(SaleTypeStrEnum.getByName(saleTypeStr)){</span></code><code><span class="code-snippet_outer">    case JX:return SaleTypeIntEnum.JX.getCode();</span></code><code><span class="code-snippet_outer">    // OTHERS</span></code><code><span class="code-snippet_outer">    default:return null;</span></code><code><span class="code-snippet_outer">  }</span></code><code><span class="code-snippet_outer">}</span></code></pre></section><section style="font-size: 15px;margin-top: 0px;margin-bottom: 0px;"><section style="text-align: justify;justify-content: flex-start;margin: 10px 0%;display: flex;flex-flow: row;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: bottom;width: auto;align-self: flex-end;flex: 0 0 0%;height: auto;line-height: 0;"><section style="text-align: right;" powered-by="xiumi.us"><br></section></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><section style="display: inline-block;vertical-align: bottom;width: auto;min-width: 10%;flex: 0 0 auto;height: auto;align-self: flex-end;"><section powered-by="xiumi.us"><p style="white-space: normal;"><br></p><span id="OSC_h4_14"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 0.5em;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;"><span style="letter-spacing: 1px;"><span style="outline: 0px;visibility: visible;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong></span><strong style="color: rgb(0, 17, 255);letter-spacing: 1px;outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">关系枚举构建</span></strong></span></h4><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></h4><span id="OSC_h4_15"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="text-align: left;background-color: rgb(255, 255, 255);color: rgb(34, 34, 34);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 1px;">再仔细思考下，其实这里在描述的内容，无论是哪个枚举描述的内容都是同一件事物，方法本身就是描述两个不同编码的转换关系，且转换关系本身就是单向的，且映射路径极度简单，所以简单化一点，可以直接构建转换关系枚举﻿。</span></h4><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></h4><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;text-align: center;"><img class="rich_pages wxw-img" data-galleryid="" data-imgfileid="503042845" data-ratio="0.5683453237410072" data-s="300,640" src="https://oscimg.oschina.net/oscnet/a9fb2fe6-5cab-4fa2-9653-70f97f05993f.png" data-type="png" data-w="278" style="color: rgb(62, 62, 62);font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;text-align: center;letter-spacing: 0.578px;" referrerpolicy="no-referrer"></h4></section></section></section></section></section><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="typescript"><code><span class="code-snippet_outer">@Getter</span></code><code><span class="code-snippet_outer">@AllArgsConstructor</span></code><code><span class="code-snippet_outer">public enum SaleTypeRelEnum {</span></code><code><span class="code-snippet_outer">  // 不在分别定义两类变量，而是直接定义变量映射关系</span></code><code><span class="code-snippet_outer">  JX("JX", 1),</span></code><code><span class="code-snippet_outer">  // OTHERS</span></code><code><span class="code-snippet_outer">  ;</span></code><code><span class="code-snippet_outer">  private String fromCode;</span></code><code><span class="code-snippet_outer">  private Integer toCode;</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">  private static Map&lt;String, SaleTypeRelEnum&gt; FROM_CODE_MAP = Arrays.stream(SaleTypeRelEnum.values()).collect(Collectors.toMap(SaleTypeRelEnum::getFromCode, Function.identity()));</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">  public static SaleTypeRelEnum get(String saleTypeStr){</span></code><code><span class="code-snippet_outer">    return FROM_CODE_MAP.get(saleTypeStr);</span></code><code><span class="code-snippet_outer">  }</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">  public static Integer parseCode(String saleTypeStr){</span></code><code><span class="code-snippet_outer">    return Optional.ofNullable(SaleTypeRelEnum.get(saleTypeStr)).map(SaleTypeRelEnum::getToCode).orElse(null);</span></code><code><span class="code-snippet_outer">  }</span></code><code><span class="code-snippet_outer">}</span></code></pre></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><br></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><span style="color: rgb(62, 62, 62);font-size: 15px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.034em;">如果将转关系作为枚举，那么从职责上划分，转换这个动作应该是封闭在枚举内的固有行为，而不该暴露在外，故原来对方法的引用其实应该转为对关系枚举中 SaleTypeEnum::parseCode 方法的引用，O(1) 检索且封闭性良好，同时支持更多简单单向映射关系的管理，要是以后出现的新场景都是这种关系，那够扛很久嘞。</span></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><span style="color: rgb(62, 62, 62);font-size: 15px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.034em;"><br></span></section><section style="outline: 0px;text-wrap: wrap;background-color: rgb(255, 255, 255);font-size: 11pt;font-family: DengXian;color: rgb(0, 0, 0);letter-spacing: normal;text-align: center;margin-top: 0px;margin-bottom: 0px;line-height: 1.75em;"><img class="rich_pages wxw-img" data-imgfileid="503042844" data-ratio="0.328125" data-s="300,640" src="https://oscimg.oschina.net/oscnet/aec4be25-424c-421a-bd55-847d3abb75e1.png" data-type="png" data-w="256" style="outline: 0px;color: rgb(34, 34, 34);font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;visibility: visible !important;width: 133px !important;" referrerpolicy="no-referrer"></section><section style="outline: 0px;text-align: center;margin-top: 0px;margin-bottom: 0px;line-height: 1.75em;"><span style="outline: 0px;box-sizing: inherit;color: rgb(0, 17, 255);font-family: -apple-system, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 18px;text-wrap: wrap;background-color: rgb(255, 255, 255);letter-spacing: 1px;">继续拓展：设计模式</span></section><section style="margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><br></section><section style="margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="font-size: 15px;color: rgb(62, 62, 62);letter-spacing: 1px;">枚举的前提还是基于无状态前提，如果转换的的映射关系不再单纯，变得复杂，枚举的简单映射管理就不 work 了。</span></section><p style="margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="color: rgb(62, 62, 62);font-size: 15px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 1px;">﻿</span></p><p style="margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="font-size: 15px;color: rgb(62, 62, 62);letter-spacing: 1px;">「万事不决，上设计模式」</span></p><p style="margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="color: rgb(62, 62, 62);font-size: 15px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 1px;">﻿</span></p><p style="margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="font-size: 15px;color: rgb(62, 62, 62);letter-spacing: 1px;">哎~就是玩儿~</span></p><p style="margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 16px;text-align: left;outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;"><br></span></strong></span></p><p style="margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 16px;text-align: left;outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong></span><strong style="font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 16px;text-align: left;color: rgb(0, 17, 255);letter-spacing: 1px;outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">策略模式-简单实现</span></strong></p><p style="margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;color: rgb(62, 62, 62);font-size: 15px;letter-spacing: 1px;"><br></span></p><p style="margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;color: rgb(62, 62, 62);font-size: 15px;letter-spacing: 1px;">首先，依然将传入的字符串作为路由依据，但是传入的内容为了防止有未来扩展，所以构造一个上下文，策略本身基于上下文来处理，借助上文定义的值枚举做策略路由。</span></p><section style="text-align: center;margin-top: 0px;margin-bottom: 0px;"><img class="rich_pages wxw-img" data-galleryid="" data-imgfileid="503042848" data-ratio="0.42483660130718953" data-s="300,640" src="https://oscimg.oschina.net/oscnet/8374ff02-4a1a-4ed7-9a87-c797f2e3fcff.png" data-type="png" data-w="459" style="height: auto !important;" referrerpolicy="no-referrer"></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><br></section><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="java"><code><span class="code-snippet_outer">/**</span></code><code><span class="code-snippet_outer">  * 定义策略接口</span></code><code><span class="code-snippet_outer">  */</span></code><code><span class="code-snippet_outer">public interface SaleTypeParseStrategy{</span></code><code><span class="code-snippet_outer">  Integer parse(SaleTypeParseContext saleTypeParseContext);</span></code><code><span class="code-snippet_outer">}</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">/**</span></code><code><span class="code-snippet_outer">  * 策略实现</span></code><code><span class="code-snippet_outer">  */</span></code><code><span class="code-snippet_outer">public class JxSaleTypeParseStrategy implements SaleTypeParseStrategy{</span></code><code><span class="code-snippet_outer">  @Override</span></code><code><span class="code-snippet_outer">  public Integer parse(SaleTypeParseContext saleTypeParseContext) {</span></code><code><span class="code-snippet_outer">    return SaleTypeIntEnum.JX.getCode();</span></code><code><span class="code-snippet_outer">  }</span></code><code><span class="code-snippet_outer">}</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">/**</span></code><code><span class="code-snippet_outer">  * 调用上下文</span></code><code><span class="code-snippet_outer">  */</span></code><code><span class="code-snippet_outer">@Data</span></code><code><span class="code-snippet_outer">public class SaleTypeParseContext{</span></code><code><span class="code-snippet_outer">  private SaleTypeStrEnum saleTypeStr;</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">  private SaleTypeParseStrategy parseStrategy;</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">  public Integer pasre(){</span></code><code><span class="code-snippet_outer">    return parseStrategy.parse(this);</span></code><code><span class="code-snippet_outer">  }</span></code><code><span class="code-snippet_outer">}</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">public static Integer parseSaleType(String saleTypeStr){</span></code><code><span class="code-snippet_outer">  SaleTypeStrEnum saleTypeEnum = SaleTypeStrEnum.getByName(saleTypeStr);</span></code><code><span class="code-snippet_outer">  SaleTypeParseContext context = new SaleTypeParseContext();</span></code><code><span class="code-snippet_outer">  context.setSaleTypeStr(saleTypeEnum);</span></code><code><span class="code-snippet_outer">  switch(saleTypeStr){</span></code><code><span class="code-snippet_outer">    // 策略路由</span></code><code><span class="code-snippet_outer">    case JX:context.setParseStrategy(new JxSaleTypeParseStrategy());break;</span></code><code><span class="code-snippet_outer">    // 继续扩展</span></code><code><span class="code-snippet_outer">    default:return null;</span></code><code><span class="code-snippet_outer">  }</span></code><code><span class="code-snippet_outer">  return context.parse();</span></code><code><span class="code-snippet_outer">}</span></code></pre></section><section style="margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><br></section><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;color: rgb(62, 62, 62);letter-spacing: 1px;">当然，如果是这种没有上下文强依赖的策略，无论是静态单例还是 Spring 单例都会是一个不错的选择。SaleTypeParseContext 本身可以继续扩展内容和其他属性继<span style="color: rgb(62, 62, 62);">续丰富参数，策略实现中也可以继续针对更多参数扩充逻辑。</span></span></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="background-color: rgb(255, 255, 255);font-size: 16px;font-weight: bold;text-indent: 0em;text-align: left;font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;outline: 0px;visibility: visible;color: rgb(0, 17, 255);letter-spacing: 1px;"><strong style="outline: 0px;visibility: visible;"><span style="background-color: rgb(255, 255, 255);font-weight: bold;text-align: left;color: rgb(20, 20, 220);text-indent: 0em;outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;"><br></span></strong></span></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="background-color: rgb(255, 255, 255);font-size: 16px;font-weight: bold;letter-spacing: 1px;text-indent: 0em;text-align: left;font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;outline: 0px;visibility: visible;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="color: rgb(20, 20, 220);text-indent: 0em;outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;"><span style="text-wrap: wrap;font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 16px;text-align: left;outline: 0px;visibility: visible;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong></span><strong style="text-wrap: wrap;font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 16px;text-align: left;color: rgb(0, 17, 255);letter-spacing: 1px;outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">策略工厂-手动容器</span></strong></span></strong><strong style="outline: 0px;visibility: visible;"></strong></span></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(62, 62, 62);font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 1px;"><br></span></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(62, 62, 62);font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 1px;">策略是个好东西，但是简单实现下，这里依然将策略实现的路由过程交给了调用方来做，那么每增加一种实现，调用点还要继续改，要是恰好有若干调用点就完犊子了，并不优雅，所以搞个中间层容器工厂，解耦一下依赖。</span></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;color: rgb(62, 62, 62);letter-spacing: 1px;"><br></span></p><p style="text-align: center;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><img class="rich_pages wxw-img" data-galleryid="" data-imgfileid="503042847" data-ratio="0.3641207815275311" data-s="300,640" src="https://oscimg.oschina.net/oscnet/04ea1adc-df26-4624-87ea-c935c47a385b.png" data-type="png" data-w="563" style="height: auto !important;" referrerpolicy="no-referrer"></p><p style="text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></p><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="java"><code><span class="code-snippet_outer">@Component</span></code><code><span class="code-snippet_outer">public static class SaleTypeParseStrategyContainer{</span></code><code><span class="code-snippet_outer">  public final static Map&lt;SaleTypeStrEnum, SaleTypeParseStrategy&gt; STRATEGY_MAP = new HashMap&lt;&gt;();</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">  @PostConstruct</span></code><code><span class="code-snippet_outer">  public void init(){</span></code><code><span class="code-snippet_outer">    STRATEGY_MAP.put(SaleTypeStrEnum.JX, new JxSaleTypeParseStrategy());</span></code><code><span class="code-snippet_outer">    // 继续拓展</span></code><code><span class="code-snippet_outer">  }</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">  public Integer parse(SaleTypeParseContext saleTypeParseContext){</span></code><code><span class="code-snippet_outer">    return Optional.ofNullable(STRATEGY_MAP.get(saleTypeParseContext.getSaleTypeStr())).map(strategy-&gt; strategy.parse(saleTypeParseContext)).orElse(null);</span></code><code><span class="code-snippet_outer">  }</span></code><code><span class="code-snippet_outer">}</span></code></pre></section><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></p><p style="margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="font-size: 15px;color: rgb(62, 62, 62);letter-spacing: 1px;">容器内手动创建各个策略的实现的单例后进行托管，那调用方只需要去构建上下文就好了，实际调用的方法更换为 SaleTypeParseStrategyContainer::parse，那后续无论策略如何丰富，调用方都不需要再感知这部分变化。后续出现了新的策略实现，<span style="color: rgb(62, 62, 62);">则在工厂内继续追加路由表即可。</span></span></p><p style="margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="letter-spacing: 1px;"><strong style="font-size: 16px;letter-spacing: 1px;text-indent: 0em;text-align: left;color: rgb(0, 17, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;outline: 0px;visibility: visible;"><span style="text-indent: 0em;font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;outline: 0px;visibility: visible;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;"><br></span></strong></span></strong></span></p><p style="margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="letter-spacing: 1px;"><strong style="font-size: 16px;letter-spacing: 1px;text-indent: 0em;text-align: left;color: rgb(0, 17, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;outline: 0px;visibility: visible;"><span style="color: rgb(20, 20, 220);text-indent: 0em;outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;"><span style="font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;outline: 0px;visibility: visible;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong></span><strong style="font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;color: rgb(0, 17, 255);outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">注册与发现&amp;策略工厂-Spring 容器</span></strong></span></strong><strong style="font-size: 16px;letter-spacing: 1px;text-indent: 0em;text-align: left;color: rgb(0, 17, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;outline: 0px;visibility: visible;"></strong></span></p><section><section powered-by="xiumi.us"><section><section powered-by="xiumi.us"><p style="margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><br></p><p style="margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="color: rgb(62, 62, 62);font-size: 15px;letter-spacing: 1px;">如果考虑到策略会依赖 Spring 的 bean 和其他有状态对象，那么这里也可以改成 Spring 的注入模式，同时继续将「支持哪种情况」由托管方容器移动至策略内部，改成由策略实现自身去注册到容器中。</span></p><p style="margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><br></p><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><img class="rich_pages wxw-img" data-galleryid="" data-imgfileid="503042850" data-ratio="0.33276740237691" data-s="300,640" src="https://oscimg.oschina.net/oscnet/5f1309e8-d605-426f-867e-20fef37033d9.png" data-type="png" data-w="589" style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: var(--articleFontsize);letter-spacing: 0.034em;text-align: center;" referrerpolicy="no-referrer"></section></section></section></section></section><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="java"><code><span class="code-snippet_outer">public&nbsp;interface&nbsp;SaleTypeParseStrategy{</span></code><code><span class="code-snippet_outer">  Integer parse(SaleTypeParseContext saleTypeParseContext);</span></code><code><span class="code-snippet_outer">  // 所支持的情况</span></code><code><span class="code-snippet_outer">  SaleTypeStrEnum support();</span></code><code><span class="code-snippet_outer">}</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">@Component</span></code><code><span class="code-snippet_outer">public class JxSaleTypeParseStrategy implements SaleTypeParseStrategy{</span></code><code><span class="code-snippet_outer">  @Override</span></code><code><span class="code-snippet_outer">  public Integer parse(SaleTypeParseContext saleTypeParseContext) {</span></code><code><span class="code-snippet_outer">    return SaleTypeIntEnum.JX.getCode();</span></code><code><span class="code-snippet_outer">  }</span></code><code><span class="code-snippet_outer">  @Override</span></code><code><span class="code-snippet_outer">  public SaleTypeStrEnum support() {</span></code><code><span class="code-snippet_outer">    return SaleTypeStrEnum.JX;</span></code><code><span class="code-snippet_outer">  }</span></code><code><span class="code-snippet_outer">}</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">@Component</span></code><code><span class="code-snippet_outer">public static class SaleTypeParseStrategyContainer{</span></code><code><span class="code-snippet_outer">  public final static Map&lt;SaleTypeStrEnum, SaleTypeParseStrategy&gt; STRATEGY_MAP = new HashMap&lt;&gt;();</span></code><code><span class="code-snippet_outer">  @Autowired</span></code><code><span class="code-snippet_outer">  private List&lt;SaleTypeParseStrategy&gt; parseStrategyList;</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">  @PostConstruct</span></code><code><span class="code-snippet_outer">  public void init(){</span></code><code><span class="code-snippet_outer">    parseStrategyList.stream().forEach(strategy-&gt; STRATEGY_MAP.put(strategy.support(), strategy));</span></code><code><span class="code-snippet_outer">  }</span></code><code><span class="code-snippet_outer">  public Integer parse(SaleTypeParseContext saleTypeParseContext){</span></code><code><span class="code-snippet_outer">    return Optional.ofNullable(STRATEGY_MAP.get(saleTypeParseContext.getSaleTypeStr())).map(strategy-&gt; strategy.parse(saleTypeParseContext)).orElse(null);</span></code><code><span class="code-snippet_outer">  }</span></code><code><span class="code-snippet_outer">}</span></code></pre></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><br></section><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;color: rgb(62, 62, 62);">这样的话，连容器都不用改了，追加策略实现的改动只与当前策略有关，调用方和容器类都不需要感知了，但是缺点就在于如果有俩策略支持的情况相同，取到的是哪个<span style="color: rgb(62, 62, 62);letter-spacing: 1px;">就听天由命了~</span></span></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;color: rgb(62, 62, 62);letter-spacing: 1px;"><br></span></p><p style="font-size: 15px;text-align: left;justify-content: flex-start;flex-flow: row;vertical-align: bottom;width: auto;min-width: 10%;flex: 0 0 auto;height: auto;align-self: flex-end;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(20, 20, 220);font-weight: bold;letter-spacing: 1px;background-color: rgb(255, 255, 255);font-family: -apple-system, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 16px;text-indent: 0em;"><strong style="letter-spacing: 1px;text-indent: 0em;text-wrap: wrap;font-size: 16px;text-align: left;color: rgb(0, 17, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;outline: 0px;visibility: visible;"><span style="color: rgb(20, 20, 220);text-indent: 0em;outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;"><span style="font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;outline: 0px;visibility: visible;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong></span><strong style="font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;color: rgb(0, 17, 255);outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">注册与发现&amp;责任链</span></strong></span></strong></span></p><section style="font-size: 15px;text-align: justify;justify-content: flex-start;flex-flow: row;vertical-align: bottom;width: auto;min-width: 10%;flex: 0 0 auto;height: auto;align-self: flex-end;margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="color: rgb(62, 62, 62);letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;text-align: justify;"><br></span></section><section style="font-size: 15px;text-align: justify;justify-content: flex-start;flex-flow: row;vertical-align: bottom;width: auto;min-width: 10%;flex: 0 0 auto;height: auto;align-self: flex-end;margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="color: rgb(62, 62, 62);letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;text-align: justify;">当然如果不能事先知道「支持哪种情况」，只能在运行时判断「是否支持」，将事前判定改为运行时判定，广义责任链会是一个不错的选择，把所有策略排成一排，谁举手说自己能处理就谁处理。</span></section><p style="font-size: 15px;text-align: left;justify-content: flex-start;flex-flow: row;vertical-align: bottom;width: auto;min-width: 10%;flex: 0 0 auto;height: auto;align-self: flex-end;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(62, 62, 62);letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;text-align: justify;"><br></span></p><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(62, 62, 62);font-size: 15px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 1px;">﻿</span><img class="rich_pages wxw-img" data-galleryid="" data-imgfileid="503042849" data-ratio="0.3082077051926298" data-s="300,640" src="https://oscimg.oschina.net/oscnet/e9efe248-d032-45da-a437-a20a73077a84.png" data-type="png" data-w="597" style="text-align: center;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: var(--articleFontsize);letter-spacing: 0.034em;" referrerpolicy="no-referrer"></section><section style="text-align: justify;margin-top: 0px;margin-bottom: 0px;"><br></section><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="java"><code><span class="code-snippet_outer">public&nbsp;interface&nbsp;SaleTypeParseStrategy{</span></code><code><span class="code-snippet_outer">  Integer parse(SaleTypeParseContext saleTypeParseContext);</span></code><code><span class="code-snippet_outer">  // 用于判断是否支持</span></code><code><span class="code-snippet_outer">  boolean support(SaleTypeParseContext saleTypeParseContext);</span></code><code><span class="code-snippet_outer">}</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">@Component</span></code><code><span class="code-snippet_outer">public class JxSaleTypeParseStrategy implements SaleTypeParseStrategy{</span></code><code><span class="code-snippet_outer">  @Override</span></code><code><span class="code-snippet_outer">  public Integer parse(SaleTypeParseContext saleTypeParseContext) {</span></code><code><span class="code-snippet_outer">    return SaleTypeIntEnum.JX.getCode();</span></code><code><span class="code-snippet_outer">  }</span></code><code><span class="code-snippet_outer">  @Override</span></code><code><span class="code-snippet_outer">  public boolean support(SaleTypeParseContext saleTypeParseContext) {</span></code><code><span class="code-snippet_outer">    return SaleTypeStrEnum.JX.equals(saleTypeParseContext.getSaleTypeStr());</span></code><code><span class="code-snippet_outer">  }</span></code><code><span class="code-snippet_outer">}</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">@Component</span></code><code><span class="code-snippet_outer">public static class SaleTypeParseStrategyContainer{</span></code><code><span class="code-snippet_outer">  @Autowired</span></code><code><span class="code-snippet_outer">  private List&lt;SaleTypeParseStrategy&gt; parseStrategyList;</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">  public Integer parse(SaleTypeParseContext saleTypeParseContext){</span></code><code><span class="code-snippet_outer">    return parseStrategyList.stream()</span></code><code><span class="code-snippet_outer">        .filter(strategy-&gt;strategy.support(saleTypeParseContext))</span></code><code><span class="code-snippet_outer">        .findAny()</span></code><code><span class="code-snippet_outer">        .map(strategy-&gt;strategy.parse(saleTypeParseContext))</span></code><code><span class="code-snippet_outer">        .orElse(null);</span></code><code><span class="code-snippet_outer">  }</span></code><code><span class="code-snippet_outer">}</span></code></pre></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><br></section><section style="font-size: 15px;text-align: justify;justify-content: flex-start;flex-flow: row;vertical-align: bottom;width: auto;min-width: 10%;flex: 0 0 auto;height: auto;align-self: flex-end;margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="color: rgb(62, 62, 62);letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;text-align: justify;font-size: 15px;">这样的实现，依然可以将改动收束在策略本体上，修改相对集中，可以无耦地进行扩展。</span></section><section style="font-size: 15px;text-align: justify;justify-content: flex-start;flex-flow: row;vertical-align: bottom;width: auto;min-width: 10%;flex: 0 0 auto;height: auto;align-self: flex-end;margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="color: rgb(62, 62, 62);letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;text-align: justify;font-size: 15px;"><br></span></section><section style="margin-bottom: 0px;outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);text-align: center;line-height: normal;"><img class="rich_pages wxw-img" data-imgfileid="503042853" data-ratio="0.328125" data-s="300,640" src="https://oscimg.oschina.net/oscnet/564c4bbd-3a0d-430c-bde8-35f76f4e0d5a.png" data-type="png" data-w="256" style="outline: 0px;color: rgb(51, 51, 51);font-size: 20px;font-weight: bold;letter-spacing: 0.578px;visibility: visible !important;width: 134px !important;" referrerpolicy="no-referrer"></section><section style="margin-bottom: 0px;outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);color: rgb(100, 99, 99);font-size: 15px;text-align: center;line-height: normal;"><span style="outline: 0px;font-family: -apple-system, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 1px;font-size: 18px;color: rgb(0, 17, 255);">其他拓展</span></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">以上还只是在 JAVA 语言内去玩一些花样，在当前这种场景下肯定是有过度设计的嫌疑，7 行代码可以缩到 1 行，也可以扩充到 70 行，所以说嘛：</span></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">「用代码行数来考量一个程序员是不太合适滴！~」</span></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">﻿</span></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">当然了，也还可以继续借助其他的中间件搞花样，包括但不限于：</span></section><ol class="list-paddingleft-1" style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><li style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;font-size: 15px;letter-spacing: 1px;"><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">植入 Diamond 走走动态配置开关的思路；<br></span></section></li><li style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;font-size: 15px;letter-spacing: 1px;"><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">植入 QLExpress 搞搞逻辑表达式的思路；</span></section></li><li style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;font-size: 15px;letter-spacing: 1px;"><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">把策略实现改成 HsfProvider 走分布式调用思路；</span></section></li><li style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;font-size: 15px;letter-spacing: 1px;"><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">借助一些成熟的网关走服务路由的的调用思路；</span></section></li></ol><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">就不再此再过多展开了。</span><span style="color: rgb(100, 99, 99);font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 14px;letter-spacing: 0.578px;text-align: center;"></span></section><p><br></p><section data-role="outer" label="Powered by 135editor.com" style="margin-bottom: 0px;outline: 0px;letter-spacing: 0.544px;visibility: visible;"><section style="margin-top: 5px;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;font-size: 16px;word-break: break-all;color: rgb(0, 0, 0);font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;text-align: center;line-height: 1.75em;"><span style="outline: 0px;color: rgb(0, 17, 255);"><strong style="outline: 0px;">¤</strong></span><span style="outline: 0px;"><strong style="outline: 0px;">&nbsp;拓展阅读&nbsp;</strong></span><span style="outline: 0px;color: rgb(0, 17, 255);"><strong style="outline: 0px;">¤</strong></span></section><section style="margin-top: 5px;margin-bottom: 5px;outline: 0px;letter-spacing: 0.544px;font-size: 16px;word-break: break-all;color: rgb(0, 0, 0);font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;text-align: center;line-height: 1.75em;"><br style="outline: 0px;"></section><section style="margin-top: 8px;margin-bottom: 8px;outline: 0px;font-family: -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 0.544px;text-indent: 0em;text-align: center;line-height: 1.75em;min-height: 24px;clear: both;visibility: visible;"><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fmp%2Fappmsgalbum%3F__biz%3DMzAxNDEwNjk5OQ%3D%3D%26action%3Dgetalbum%26album_id%3D2565944923443904512%23wechat_redirect" textvalue="3DXR 技术" linktype="text" imgurl="" imgdata="null" tab="innerlink" data-linktype="2" style="outline: 0px;color: var(--weui-LINK);-webkit-user-drag: none;cursor: pointer;">3DXR 技术</a>&nbsp;|&nbsp; 
   <a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fmp%2Fappmsgalbum%3F__biz%3DMzAxNDEwNjk5OQ%3D%3D%26action%3Dgetalbum%26album_id%3D1533906991218294785%23wechat_redirect" textvalue="终端技术" linktype="text" imgurl="" imgdata="null" tab="innerlink" data-linktype="2" style="outline: 0px;color: var(--weui-LINK);-webkit-user-drag: none;cursor: pointer;">终端技术</a>&nbsp;|&nbsp; 
   <a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fmp%2Fappmsgalbum%3F__biz%3DMzAxNDEwNjk5OQ%3D%3D%26action%3Dgetalbum%26album_id%3D1592015847500414978%23wechat_redirect" textvalue="音视频技术" linktype="text" imgurl="" imgdata="null" tab="innerlink" data-linktype="2" style="outline: 0px;color: var(--weui-LINK);-webkit-user-drag: none;cursor: pointer;">音视频技术</a></section><p style="margin-top: 8px;margin-bottom: 8px;outline: 0px;min-height: 24px;font-family: -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 0.544px;text-indent: 0em;text-align: center;line-height: 1.75em;visibility: visible;"><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fmp%2Fappmsgalbum%3F__biz%3DMzAxNDEwNjk5OQ%3D%3D%26action%3Dgetalbum%26album_id%3D1539610690070642689%23wechat_redirect" textvalue="服务端技术" linktype="text" imgurl="" imgdata="null" tab="innerlink" data-linktype="2" style="outline: 0px;color: var(--weui-LINK);-webkit-user-drag: none;cursor: pointer;">服务端技术</a><span style="outline: 0px;letter-spacing: 0.544px;">&nbsp;|&nbsp;</span><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fmp%2Fappmsgalbum%3F__biz%3DMzAxNDEwNjk5OQ%3D%3D%26action%3Dgetalbum%26album_id%3D2565883875634397185%23wechat_redirect" textvalue="技术质量" linktype="text" imgurl="" imgdata="null" tab="innerlink" data-linktype="2" style="outline: 0px;color: var(--weui-LINK);-webkit-user-drag: none;cursor: pointer;">技术质量</a>&nbsp;|&nbsp;<a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fmp%2Fappmsgalbum%3F__biz%3DMzAxNDEwNjk5OQ%3D%3D%26action%3Dgetalbum%26album_id%3D1522425612282494977%23wechat_redirect" textvalue="数据算法" linktype="text" imgurl="" imgdata="null" tab="innerlink" data-linktype="2" style="outline: 0px;color: var(--weui-LINK);-webkit-user-drag: none;cursor: pointer;">数据算法</a></p><p style="margin-top: 8px;margin-bottom: 8px;outline: 0px;min-height: 24px;font-family: -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 0.544px;text-indent: 0em;text-align: center;line-height: 1.75em;visibility: visible;"><br style="outline: 0px;"></p><section class="mp_profile_iframe_wrp" style="margin-bottom: 24px;outline: 0px;"><mp-common-profile class="custom_select_card mp_profile_iframe js_wx_tap_highlight" data-pluginname="mpprofile" data-id="MzAxNDEwNjk5OQ==" data-headimg="http://mmbiz.qpic.cn/mmbiz_png/33P2FdAnju8t5nZGhAatCrc4e2iaDfAaoInribRKxc7MOqdTGygfcLqSDxhj0trCHVEh94Sjl7zuWYzwouYtJ0VQ/300?wx_fmt=png&amp;wxfrom=19" data-nickname="大淘宝技术" data-alias="AlibabaMTT" data-signature="大淘宝技术官方账号" data-from="2" data-index="0" data-origin_num="690" data-isban="0" data-biz_account_status="0" data-weui-theme="light" data-is_biz_ban="0"></mp-common-profile></section></section><section><section powered-by="xiumi.us"><section><section><section><section><article data-identifier-application__slash__x-doc-key="mxPOGyPLWx65nKa9"></article></section></section></section></section></section></section><section style="margin-bottom: 0px;"><section style="display: none;margin-top: 0px;"><br></section></section><p style="display: none;"><mp-style-type data-value="3"></mp-style-type></p></div><p style="color: #858585; font-size: 13px;">本文分享自微信公众号 - 大淘宝技术（AlibabaMTT）。<br>如有侵权，请联系 support@oschina.cn 删除。<br>本文参与「<a href="https://www.oschina.net/sharing-plan" target="_blank">OSC 源创计划</a>」，欢迎正在阅读的你也加入，一起分享。</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 18 Jan 2024 02:11:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/4662964/blog/10860307</guid>
            <link>https://my.oschina.net/u/4662964/blog/10860307</link>
            <author>
                <![CDATA[大淘宝技术]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[禅道软件获 2024 首个 GVP（最有价值开源项目）]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff; color:#333333">2024 开门见喜！1 月 1 日，</span><strong>禅道项目管理软件与旗下产品「ZUI 前端 UI 框架」入选 Gitee 最有价值开源项目计划</strong><span style="background-color:#ffffff; color:#333333">，</span><span style="background-color:#ffffff; color:#337fe5"><strong>禅道项目管理软件荣获 2024 首个 GVP（最有价值开源项目）</strong></span><span style="background-color:#ffffff; color:#333333">！</span></p><div><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcdn.easycorp.cn%2Fweb%2Fdata%2Fupload%2Fzentao%2F202401%2Ff_2bcd4ea0943f839941cedad5b6bc543e.jpg" target="_blank"><img align="" alt="禅道-最有价值开源项目" height="298" src="https://cdn.easycorp.cn/web/data/upload/zentao/202401/f_2bcd4ea0943f839941cedad5b6bc543e.jpg" width="500" referrerpolicy="no-referrer"></a></div><p><span style="background-color:#ffffff; color:#333333">GVP（Gitee Most Valuable Project）最有价值开源项目计划是 Gitee 综合评定出的优秀开源项目的展示平台，代表了开源项目的高质量能力与水平。</span><br> &nbsp;</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">在十四年的开源之路中，禅道项目管理软件在技术架构、产品创新、产品质量、社区参与度和用户影响力等方面都有着出色的表现。同时，禅道不断关注和研究业内实践，有机融合 IPD、SAFe、CMMI、Scrum、看板、瀑布和 DevOps 等七大项目管理模型，吸收人工智能（AI）、商业智能（BI）和信息管理（IM）等前沿技术，<strong><span style="color:#337fe5">旨在为用户提供专业高效的项目管理工具及落地解决方案</span></strong>。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:center"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcdn.easycorp.cn%2Fweb%2Fdata%2Fupload%2Fzentao%2F202401%2Ff_a7a01cec65c980b562bb018f156b7065.jpg" target="_blank"><img align="" alt="禅道-全生命周期项目管理软件" height="1425" src="https://cdn.easycorp.cn/web/data/upload/zentao/202401/f_a7a01cec65c980b562bb018f156b7065.jpg" width="500" referrerpolicy="no-referrer"></a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:center"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcdn.easycorp.cn%2Fweb%2Fdata%2Fupload%2Fzentao%2F202401%2Ff_fcca93a985b436fd8e7b9270e65c223a.jpg" target="_blank"><img align="" alt="禅道-全生命周期项目管理软件" height="1079" src="https://cdn.easycorp.cn/web/data/upload/zentao/202401/f_fcca93a985b436fd8e7b9270e65c223a.jpg" width="500" referrerpolicy="no-referrer"></a></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 18 Jan 2024 00:56:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276041/zentao-gvp</guid>
            <link>https://www.oschina.net/news/276041/zentao-gvp</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[书生·浦语 2.0（InternLM2）大语言模型正式开源]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>1 月 17 日，书生·浦语 2.0（InternLM2）发布会暨书生·浦源大模型挑战赛启动仪式在上海举行。上海人工智能实验室与商汤科技联合香港中文大学和复旦大学正式发布新一代大语言模型<strong>书⽣·浦语 2.0（InternLM2）</strong>。</p><p><img src="https://oscimg.oschina.net/oscnet/up-52e9a3ed647ca67a108395c42fa403f5137.jpg" referrerpolicy="no-referrer"></p><blockquote><p>开源地址</p><ul><li>Github：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FInternLM%2FInternLM" target="_blank">https://github.com/InternLM/InternLM</a></li><li>HuggingFace：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhuggingface.co%2Finternlm" target="_blank">https://huggingface.co/internlm</a></li><li>ModelScope：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmodelscope.cn%2Forganization%2FShanghai_AI_Laboratory" target="_blank">https://modelscope.cn/organization/Shanghai_AI_Laboratory</a></li></ul></blockquote><p>据介绍，InternLM2 是在 2.6 万亿 token 的高质量语料上训练得到的。沿袭第一代书生·浦语（InternLM）的设定，InternLM2 包含 7B 及 20B 两种参数规格及基座、对话等版本，满足不同复杂应用场景需求。秉持「以高质量开源赋能创新」理念，上海 AI 实验室继续提供 InternLM2 免费商用授权。</p><p>InternLM2 的核心理念在于回归语言建模的本质，致力于通过提高语料质量及信息密度，实现模型基座语言建模能力获得质的提升，进而在数理、代码、对话、创作等各方面都取得长足进步，<strong>综合性能达到同量级开源模型的领先水平。</strong>其支持 200K token 的上下文，一次性接收并处理约 30 万汉字的输入内容，准确提取关键信息，实现长文本中「大海捞针」。</p><p><img src="https://oscimg.oschina.net/oscnet/up-7c9cb74f4a31bdfb986e5bd545788786bac.png" referrerpolicy="no-referrer"></p><p><img src="https://oscimg.oschina.net/oscnet/up-318647a9bfbcddcb935f2efd51bc26c7cdf.png" referrerpolicy="no-referrer"></p><p>此外，InternLM2 的各项能力获得全面进步，相比于初代 InternLM，在推理、数学、代码等方面的能力提升尤为显著，综合能力领先于同量级开源模型。</p><p>根据大语言模型的应用方式和用户关注的重点领域，研究人员定义了语言、知识、推理、数学、代码、考试等六个能力维度，在 55 个主流评测集上对多个同量级模型的表现进行了综合评测。评测结果显示，InternLM2 的轻量级（7B）及中量级（20B）版本性能在同量级模型中表现优异。</p><p><img src="https://oscimg.oschina.net/oscnet/up-63b21de53ea876e2f73bebcc2d1cb185f26.png" referrerpolicy="no-referrer"></p><p><img src="https://oscimg.oschina.net/oscnet/up-5b27ccfd736b8e6c812fa412f2b84901be4.png" referrerpolicy="no-referrer"></p><ul></ul></div>
                                    ]]>
            </description>
            <pubDate>Wed, 17 Jan 2024 12:09:49 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276033/shanghai-ai-lab-internlm2</guid>
            <link>https://www.oschina.net/news/276033/shanghai-ai-lab-internlm2</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[ICLR 2024 录用结果公布，MetaGPT 喜提 ICLR 2024 Oral (1.2%)]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><img alt="" height="777" src="https://oscimg.oschina.net/oscnet/up-8a3c5ea8b36088086707d6c53bac8e20f2d.jpg" width="1197" referrerpolicy="no-referrer"></p><p><span>一年一度的 ICLR 顶会录用结果公布了！今年共 7000 多篇投稿论文，录用率 31%。</span></p><p><span>邮件显示，今年 ICLR 2024 组委会共收到了 7262 篇投稿，总体录用率约为 31%，与去年相似（2023 年总投稿数 5000）。</span></p><p><span>其中 spotlights 论文的录用率为 5%（约有 363 篇），Oral 论文的录用率为 1.2%（约有 85 篇）。</span></p><p><span style="background-color:#ffffff; color:rgba(0, 0, 0, 0.9)">ICLR 提交的论文主题大致包括：700 篇有扩散，NeRF 少于 100 篇，900 多篇大模型，100 多篇 ChatGPT（8 篇 Bard，16 篇 Claude)，170 篇关于 Llama，200 篇 CLIP，200 篇 NLP，大约 750 篇视觉研究。</span></p><p><img alt="" height="521" src="https://oscimg.oschina.net/oscnet/up-f440cb08ff5c4f309e92e3c2b5b92a9910f.jpg" width="1191" referrerpolicy="no-referrer"></p><p style="color:#374151; margin-left:0; margin-right:0; text-align:start">在即将到来的国际计算机学习表征会议（ICLR 2024）上，一个重要的研究成果「MetaGPT: Meta Programming for Multi-Agent Collaborative Framework」将被展示为口头报告。这一荣誉仅授予了总提交论文中的 1.2%。</p><p style="color:#374151; margin-left:0; margin-right:0; text-align:start">该项目是关于多智能体系统的先进研究，旨在通过元编程提升协作机器学习模型的效能。项目由一支国际研究团队完成，他们对这一成就表示欣喜。</p><p style="color:#374151; margin-left:0; margin-right:0; text-align:start">该论文的选中体现了团队的创新能力和科研成果的实际应用价值。完整的研究报告现已在 arXiv 上发布，并且相关代码已经在 GitHub 上开源，供学术界和公众查阅。</p><p style="color:#374151; margin-left:0; margin-right:0; text-align:start">论文和代码的公开旨在鼓励开放科学和促进全球范围内的协作研究。研究团队欢迎并感谢社区对他们工作的关注和支持。</p><ul><li>论文链接：https://arxiv.org/pdf/2308.00352.pdf</li><li>代码链接：https://github.com/geekan/MetaGPT</li></ul></div>
                                    ]]>
            </description>
            <pubDate>Wed, 17 Jan 2024 07:12:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276008</guid>
            <link>https://www.oschina.net/news/276008</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[汉为加入 OurBMC，联合打造软硬件协同 BMC 技术]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:rgba(0, 0, 0, 0.9); margin-left:8px; margin-right:8px; text-align:justify"><span>近日，广东汉为信息技术有限公司签署了 CLA（Contributor License Agreement，贡献者许可协议）&nbsp;，宣布正式加入 OurBMC 社区。</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:8px; margin-right:8px; text-align:justify"><span>广东汉为信息技术有限公司成立于 2014 年，是国产化计算机体系根部企业，专业从事国产化计算机产品的研发、制造和销售，主要产品包括嵌入式工控机、云终端计算机、网络安全设备、AI 小站、核心控制板卡等，核心技术包括计算机硬件设计、自主固件和国产化操作系统适配、FPGA 设计、边缘计算机及物联网、AI 及 5G 小站、安全可信计算等。</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:8px; margin-right:8px; text-align:justify"><span>汉为致力于成为国产化自主可控数字技术领域的先锋信创企业，专注于为电力、工控、交通、政务、金融等行业客户提供高可靠、高安全、高品质的软硬件整体解决方案产品和服务。</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:8px; margin-right:8px; text-align:justify"><span>汉为加入 OurBMC 社区后，将更好地融入社区 BMC 生态，为共同推进 BMC 技术自主可控，促进上下游信创企业协同，打造 BMC 信息系统软硬件生态添砖加瓦。</span></p><h4><strong><span style="color:#3498db">OurBMC 社区</span></strong></h4><p style="color:rgba(0, 0, 0, 0.9); margin-left:8px; margin-right:8px; text-align:justify"><span style="background-color:#ffffff; color:rgba(0, 0, 0, 0.9)">OurBMC 社区将秉承 「开放、平等、协作、创新」 原则，坚持 「开源、共建」 的合作方式，携手社区各成员单位共同推进 BMC 技术快速发展，辐射上下游形成产业共振，加速构建繁荣的信息系统软硬件生态。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 17 Jan 2024 01:47:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/275976</guid>
            <link>https://www.oschina.net/news/275976</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[热烈欢迎 HertzBeat 三位小伙伴新晋社区 Committer]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><img height="600" src="https://oscimg.oschina.net/oscnet/up-98fded00e1617e3edd5cc3174b3afd47597.webp" width="1920" referrerpolicy="no-referrer"><img alt="" src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/4b57f13746ec4286b8d02b1a7a294746~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1920&amp;h=600&amp;s=899967&amp;e=png&amp;b=213958" referrerpolicy="no-referrer"></p><blockquote><p>热烈欢迎 Dromara HertzBeat 有三位小伙伴新晋社区 Committer, 让我们来了解下他们的开源经历吧！</p></blockquote><h1>New Committer - vinci</h1><p><img alt="" src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9f01d65b82a44a108492845d1bdfe9d8~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=552&amp;h=553&amp;s=95966&amp;e=jpg&amp;b=d4c4ab" referrerpolicy="no-referrer"><img height="553" src="https://oscimg.oschina.net/oscnet/up-94e86368985d6e0fdc0bae9b8154f1a32db.webp" width="552" referrerpolicy="no-referrer"></p><p><strong>姓名：王佳宁</strong></p><p><strong>浙江大学计算机学院研究生一年级</strong></p><p><strong>Github ID: vinci-897</strong></p><h2>初识 Hertzbeat</h2><p>2023 年 3 月，我关注到了 Hertzbeat 的项目，于是直接给社区的 Tom 老哥发了邮件咨询是否可以加入，老哥很爽快的给了回复。刚好我当时正是大四时间比较充裕，就果断挑了一个 issue 解决，在 hertzbeat 有了第一个 pull request。</p><h2>开始提交 PR</h2><p>在之后一段时间里，我花了一段时间阅读 Hertzbeat 的代码，又断断续续的交了几个 pr。直到 4 月份，我了解到开源之夏相关活动，刚好 Hertzbeat 也在参加，所以提交了报名信息后便顺利入选。我的任务主要是负责实现一个推送方式的采集器，在编写代码的过程中，我得到了许多社区的郑晨鑫导师和 Tom 老哥帮助，最终能够顺利完成代码，整个过程还是比较顺利的。</p><h2>开源贡献</h2><ul><li>新增 push module，暴露接口供用户推送数据。</li><li>在 collector 模块中实现对推送数据的采集。</li><li>在前端中实现展示用户自定义的数据。</li></ul><h2>收获</h2><ul><li>接触到了很优秀的开源社区，提升了相关领域的技术水平。</li></ul><p>感谢 Tom 哥和我的 ospp 导师郑晨鑫，他们在我接触开源社区的过程中给出了许多帮助和建议。目前我仍然在社区中负责部分代码的开发，希望 Hertzbeat 以后可以越来越好！</p><p><img height="1414" src="https://oscimg.oschina.net/oscnet/up-8b23af7b60b07b7bb59c81aaa4815fca808.png" width="2000" referrerpolicy="no-referrer"></p><hr><h1>New Committer - 淞筱</h1><p><img height="460" src="https://oscimg.oschina.net/oscnet/up-d13bf758fee49fdb204df34f5456208bdf2.png" width="460" referrerpolicy="no-referrer"></p><p><strong>姓名：周书胜</strong></p><p><strong>河南师范大学大三学生</strong></p><h2>初识 Hertzbeat</h2><p>今年三月份，在小宝学长的影响下，对开源项目有了些许概念，并为后来学习开源项目奠定了基础，但由于当时只学习了一些 Java 基础，所以并没有再深入了解。</p><h2>开始提交 PR</h2><p>在今年七月份，基本完成 Java 框架开发的学习后，在小宝学长的鼓励下，我开始尝试拉取 issue，并在 7 月 20 日提交了第一个 PR。在此期间，也咨询了 Hertzbeat 作者和东风学长一些相关问题，实在感谢。</p><h2>开源贡献</h2><ul><li>支持 Spring Gateway、Apache Spark、Apache Hive 等服务指标采集</li><li>自定义 nginx、pop3 协议，对 Nginx，POP3 邮箱服务器进行指标采集，并添加相应帮助文档</li></ul><h2>收获</h2><ul><li>接触了更加优秀、结构更加复杂的大型项目，提高了编程和解决问题的能力</li><li>将理论知识付诸于实践，收获了 JUC，微服务相关的开发经验，以及宝贵的项目经历</li></ul><h2>感谢社区小伙伴</h2><p>感谢 HertzBeat 的作者、HertzBeat/Sms4j Committer 铁甲小宝同学、Sms4j Committer 东风同学，在我遇到自己不能解决的问题时，常常向三位哥哥请教，他们也总是不厌其烦，耐心的帮助我解决问题，实在是无以言表。</p><p>感谢社区的其它小伙伴，在与他们交流讨论的过程中收获满满，也感受到了 Dromara 社区活跃的开源氛围。</p><h2>给新人的一些建议</h2><ul><li>初次参与开源项目时，可以从简单的任务开始。逐渐熟悉项目的代码和流程，并逐步承担更复杂的任务。</li><li>如果遇到自己无法解决的问题时，可以多多请教社区的小伙伴们。</li></ul><p><img alt="" src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0b74eaf12a9f4be2807d823ff0a1b562~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=2000&amp;h=1414&amp;s=620535&amp;e=png&amp;b=fefaf7" referrerpolicy="no-referrer"><img height="1414" src="https://oscimg.oschina.net/oscnet/up-d529478f0368258215a7ece2ae48352a55a.png" width="2000" referrerpolicy="no-referrer"></p><hr><h1>New Committer - 东风</h1><p><img height="236" src="https://oscimg.oschina.net/oscnet/up-ed07eac47f5cddc5128796c75a6ce819412.png" width="236" referrerpolicy="no-referrer"></p><p><strong>姓名：张洋</strong></p><p><strong>河南师范大学应届生</strong></p><h2>初识 hertzbeat</h2><p>今年 6 月份开始对项目进行深入了解，我是经朋友推荐了解该项目的，一直对开源项目和社区有所探索，很喜欢这种大家互相分享、讨论并改进的氛围。同时之前在项目中也尝试实现一些监控，所以对于该项目比较感兴趣。</p><h2>开始提交 PR</h2><p>在今年 7 月起，我发现 hertzbeat 的 issue 和 pr 很活跃，于是就通过他们的 issue 和 pr 来了解如何实现某个协议的监控。随后我发现有关于 smtp 协议监控的 task，就在 issue 上与作者进行讨论，随后通过文档和代码完成了自己的 pr。</p><h2>开源贡献</h2><ul><li>实现 smtp、ntp、websocket 可用性的监控。</li><li>实现 memcached 、NebulaGraph 的监控指标。</li><li>为实现的监控添加相关文档。</li></ul><h2>收获</h2><ul><li>收获了监控相关的开发经验，新增了一个宝贵的项目经历。</li><li>对于网络协议有了更深刻的了解。</li><li>对于开源项目的贡献流程有了初步认识。</li></ul><h2>感谢社区小伙伴</h2><p>感谢 hertzbeat 的作者提供的相关文档和帮助。感谢朋友的带领，为我提供了勇气，让我敢于尝试进入开源项目进行贡献。感谢社区中其他的小伙伴的 issue 和 pr，加快了我对于该项目的了解。</p><h2>对新人的一点建议</h2><ul><li>issue 和 pr 是你了解的项目的敲门砖，一点要敢于讨论并发表观点。</li><li>贡献不分大小，要敢于尝试，并不断提升自己。</li></ul><p><img height="1414" src="https://oscimg.oschina.net/oscnet/up-7598e29c6007a740aaf2ffaf725b6118a4c.png" width="2000" referrerpolicy="no-referrer"></p><hr><h2>什么是 HertzBeat?</h2><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdromara%2Fhertzbeat" target="_blank">HertzBeat 赫兹跳动</a> 是一个拥有强大自定义监控能力，高性能集群，兼容 Prometheus，无需 Agent 的开源实时监控告警系统。</p><h3>特点</h3><ul><li>集 <strong>监控+告警+通知</strong> 为一体，支持对应用服务，应用程序，数据库，缓存，操作系统，大数据，中间件，Web 服务器，云原生，网络，自定义等监控阈值告警通知一步到位。</li><li>易用友好，无需 <code>Agent</code>，全 <code>WEB</code> 页面操作，鼠标点一点就能监控告警，零上手学习成本。</li><li>将 <code>Http, Jmx, Ssh, Snmp, Jdbc, Prometheus</code> 等协议规范可配置化，只需在浏览器配置监控模版 <code>YML</code> 就能使用这些协议去自定义采集想要的指标。您相信只需配置下就能立刻适配一款 <code>K8s</code> 或 <code>Docker</code> 等新的监控类型吗？</li><li>兼容 <code>Prometheus</code> 的系统生态并且更多，只需页面操作就可以监控 <code>Prometheus</code> 所能监控的。</li><li>高性能，支持多采集器集群横向扩展，支持多隔离网络监控，云边协同。</li><li>自由的告警阈值规则，<code>邮件</code><code>Discord</code><code>Slack</code><code>Telegram</code><code>钉钉</code><code>微信</code><code>飞书</code><code>短信</code><code>Webhook</code><code>Server 酱</code> 等方式消息及时送达。</li></ul><blockquote><p><code>HertzBeat</code>的强大自定义，多类型支持，高性能，易扩展，低耦合，希望能帮助开发者和团队快速搭建自有监控系统。</p></blockquote><p><img alt="" src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/2bd5f4a43338489bbd8491d093a3eb9b~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=2814&amp;h=1772&amp;e=png&amp;b=fefcfc" referrerpolicy="no-referrer"><img height="1772" src="https://oscimg.oschina.net/oscnet/up-040e32cdd6a5456d32d30323af6976b211b.png" width="2814" referrerpolicy="no-referrer"></p><p><strong>Github: <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdromara%2Fhertzbeat" target="_blank">https://github.com/dromara/hertzbeat</a></strong></p><p><strong>Gitee: <a href="https://gitee.com/dromara/hertzbeat">https://gitee.com/dromara/hertzbeat</a></strong></p><p>欢迎更多小伙伴参与到 HertzBeat 的开源协作中来，不管是一个错别字还是标点符号我们都非常欢迎，大家一起学习进步，目标做一个世界级开源软件。</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 17 Jan 2024 00:53:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/275975</guid>
            <link>https://www.oschina.net/news/275975</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[腾讯 APIJSON 插件 apijson-influxdb 开源，支持物联网时序数据库]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><img height="1570" src="https://oscimg.oschina.net/oscnet/up-bdaf900bde612e78f2a7ac5ec7f7dda180c.png" width="2202" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">腾讯 APIJSON 是一种专为 API 而生的 JSON 网络传输协议，以及，基于这套协议实现的 ORM 库。<br><strong>为各种增删改查提供了完全自动化的万能 API，零代码实时满足千变万化的各种新增和变更需求。</strong><br> 能大幅降低开发和沟通成本，简化开发流程，缩短开发周期。适合中小型前后端分离的项目。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>自 2016 年开源 7 年来发展迅速，目前 16K+ Star 位居 400W Java 开源项目前 100。</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>国内，腾讯、华为、阿里巴巴、字节跳动、美团、拼多多、百度、京东、网易、快手、圆通，等 和<br> 国外 Google, Apple, Microsoft, Amazon, Tesla, Meta(FB), Paypal 等数百个知名大厂员工 Star，<br> 也有，腾讯、华为、字节跳动、Microsoft、Zoom、知乎，等 工程师/专家/架构师，提了 PR/Issue，<br> 还被，腾讯、华为、百度、SHEIN、快手、中兴、传音、圆通、美图，等各大知名厂商用于各类项目。</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="1352" src="https://oscimg.oschina.net/oscnet/up-05507add1ab73979181e2a721832b2ef017.png" width="1850" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="1344" src="https://oscimg.oschina.net/oscnet/up-b0118180bc641918130cef0f4dee2bf1ca1.png" width="1634" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">&nbsp;</p><h1>apijson-influxdb<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjitpack.io%2F%23APIJSON%2Fapijson-influxdb" target="_blank"><img alt="" src="https://camo.githubusercontent.com/55f0e390e03835ec2f3c0b4b5900f178c1b9936e2812bf6713752eba0cc42c35/68747470733a2f2f6a69747061636b2e696f2f762f4150494a534f4e2f6170696a736f6e2d696e666c757864622e737667" referrerpolicy="no-referrer"></a></h1><p style="color:#1f2328; text-align:start">腾讯<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FTencent%2FAPIJSON" target="_blank">APIJSON</a><span>&nbsp;</span>6.1.0+ 的 InfluxDB 数据库插件，可通过 Maven, Gradle 等远程依赖。<br> An InfluxDB plugin for Tencent<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FTencent%2FAPIJSON" target="_blank">APIJSON</a><span>&nbsp;</span>6.1.0+</p><p><img height="537" src="https://oscimg.oschina.net/oscnet/up-2622b2a410334f159d06a034274178e5160.png" width="1280" referrerpolicy="no-referrer"></p><p style="color:#1f2328; text-align:start"><span>&nbsp;</span><img height="774" src="https://oscimg.oschina.net/oscnet/up-85ca42d8fe14a70bfc0c3b0ab5128d4eb43.png" width="1280" referrerpolicy="no-referrer"></p><h2>添加依赖</h2><h2>Add Dependency</h2><h3>Maven</h3><h4>1. 在 pom.xml 中添加 JitPack 仓库</h4><div><pre>&lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">repositories</span>&gt;
&lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">repository</span>&gt;
    &lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">id</span>&gt;jitpack.io&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">id</span>&gt;
    &lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">url</span>&gt;https://jitpack.io&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">url</span>&gt;
&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">repository</span>&gt;
&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">repositories</span>&gt;
</pre></div><h4>2. 在 pom.xml 中添加 apijson-influxdb 依赖</h4><div><pre>&lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">dependency</span>&gt;
    &lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">groupId</span>&gt;com.github.APIJSON&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">groupId</span>&gt;
    &lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">artifactId</span>&gt;apijson-influxdb&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">artifactId</span>&gt;
    &lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">version</span>&gt;LATEST&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">version</span>&gt;
&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">dependency</span>&gt;</pre><div><h2>使用</h2><h2>Usage</h2><p style="color:#1f2328; text-align:start">在你项目继承 AbstractSQLExecutor 的子类重写方法 execute<br> Override execute in your SQLExecutor extends AbstractSQLExecutor</p><div><pre><span style="color:var(--color-prettylights-syntax-constant)">@</span><span style="color:var(--color-prettylights-syntax-constant)">Override</span><span style="color:var(--color-prettylights-syntax-keyword)">public</span><span style="color:var(--color-prettylights-syntax-storage-modifier-import)">JSONObject</span><span>execute</span>(<span style="color:var(--color-prettylights-syntax-constant)">@</span><span style="color:var(--color-prettylights-syntax-constant)">NotNull</span><span style="color:var(--color-prettylights-syntax-storage-modifier-import)">SQLConfig</span>&lt;<span style="color:var(--color-prettylights-syntax-storage-modifier-import)">Long</span>&gt; <span>config</span>, <span style="color:var(--color-prettylights-syntax-storage-modifier-import)">boolean</span><span>unknownType</span>) <span style="color:var(--color-prettylights-syntax-keyword)">throws</span><span>Exception</span> {
            <span style="color:var(--color-prettylights-syntax-keyword)">if</span> (<span>config</span>.<span style="color:var(--color-prettylights-syntax-entity)">isInfluxDB</span>()) {
                <span style="color:var(--color-prettylights-syntax-keyword)">return</span><span style="color:var(--color-prettylights-syntax-storage-modifier-import)">InfluxdbUtil</span>.<span style="color:var(--color-prettylights-syntax-entity)">execute</span>(<span>config</span>, <span style="color:var(--color-prettylights-syntax-constant)">null</span>, <span>unknownType</span>);
            }
   
            <span style="color:var(--color-prettylights-syntax-keyword)">return</span><span style="color:var(--color-prettylights-syntax-entity)">super</span>.<span style="color:var(--color-prettylights-syntax-entity)">execute</span>(<span>config</span>, <span>unknownType</span>);
        }</pre><div>
    &nbsp;
   </div></div><br><span style="background-color:#ffffff; color:#1f2328">在你项目继承 AbstractSQLConfig 的子类重写方法 execute</span><br><span style="background-color:#ffffff; color:#1f2328">Override execute in your SQLConfig extends AbstractSQLConfig</span><div><pre><span style="color:var(--color-prettylights-syntax-constant)">@</span><span style="color:var(--color-prettylights-syntax-constant)">Override</span><span style="color:var(--color-prettylights-syntax-keyword)">public</span><span style="color:var(--color-prettylights-syntax-storage-modifier-import)">String</span><span>getSchema</span>() {
<span style="color:var(--color-prettylights-syntax-keyword)">return</span><span style="color:var(--color-prettylights-syntax-storage-modifier-import)">InfluxDBUtil</span>.<span style="color:var(--color-prettylights-syntax-entity)">getSchema</span>(<span style="color:var(--color-prettylights-syntax-entity)">super</span>.<span style="color:var(--color-prettylights-syntax-entity)">getSchema</span>(), <span style="color:var(--color-prettylights-syntax-constant)">DEFAULT_SCHEMA</span>, <span style="color:var(--color-prettylights-syntax-entity)">isInfluxDB</span>());
}

<span style="color:var(--color-prettylights-syntax-constant)">@</span><span style="color:var(--color-prettylights-syntax-constant)">Override</span><span style="color:var(--color-prettylights-syntax-keyword)">public</span><span style="color:var(--color-prettylights-syntax-storage-modifier-import)">String</span><span>getSQLSchema</span>() {
<span style="color:var(--color-prettylights-syntax-keyword)">return</span><span style="color:var(--color-prettylights-syntax-storage-modifier-import)">InfluxDBUtil</span>.<span style="color:var(--color-prettylights-syntax-entity)">getSQLSchema</span>(<span style="color:var(--color-prettylights-syntax-entity)">super</span>.<span style="color:var(--color-prettylights-syntax-entity)">getSQLSchema</span>(), <span style="color:var(--color-prettylights-syntax-entity)">isInfluxDB</span>());
}
</pre></div></div></div><p style="color:#1f2328; text-align:start">有问题可以去 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FTencent%2FAPIJSON" target="_blank">Tencent/APIJSON</a> 提 issue</p><p style="color:#1f2328; text-align:start">&nbsp;</p><h4>点右上角 ⭐Star 支持一下，谢谢 ^_^</h4><p style="color:#1f2328; text-align:start"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FAPIJSON%2Fapijson-influxdb" target="_blank">https://github.com/APIJSON/apijson-influxdb</a></p><p>&nbsp;</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 16 Jan 2024 02:01:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/275914</guid>
            <link>https://www.oschina.net/news/275914</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[OSCHINA 2023 新增开源项目榜 TOP 100]]>
            </title>
            <description>
                <![CDATA[数据说明：1. OSCHINA 2023 新收录的开源项目；2. 按照浏览量高低进行排名。]]>
            </description>
            <pubDate>Mon, 15 Jan 2024 11:39:00 GMT</pubDate>
            <guid isPermaLink="false">https://osc.cool/project/top_2023/</guid>
            <link>https://osc.cool/project/top_2023/</link>
        </item>
        <item>
            <title>
                <![CDATA[Zadig v2.1.0 版本发布：工作流与环境全面协同升级！]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div><img alt="" src="https://oscimg.oschina.net/oscnet/up-7d4b2301dcfa1c73bbdd8e72527b654452d.png" referrerpolicy="no-referrer"></div><p style="margin-left:0; margin-right:0">经过长时间的精心打磨和用户反馈的积极参与，我们宣布 Zadig 迎来了全新的里程碑 — 版本 2.1.0 的隆重发布！在这个版本中，我们聚焦于提升工作流与环境管理的整体能力，以满足不断增长的用户期望和多元化的使用场景。通过跨环境配置比对和同步，实现了一致性传递，使得业务和配置变更更加自动化和高效。全新的自测模式和 Istio 全链路灰度发布机制提升了发布流程的智能和安全性。多环境共享命名空间的便捷操作为企业提供了更灵活的业务管理方式。引入多平台、跨厂商、多协议的支持，使 Zadig 在全球交付中更具竞争力。自定义工作流在 Windows 平台上执行批处理脚本，满足更多异构场景的需求。</p><span id="OSC_h2_1"></span><h2>&nbsp;</h2><span id="OSC_h2_2"></span><h2><strong>跨环境配置比对和同步,助力实现一致性传递</strong></h2><p style="margin-left:0; margin-right:0">自定义工作流 Apollo、Nacos 配置变更支持跨环境比对和同步，以实现业务和配置的自动化、高效变更，以及确保配置在开发、测试和生产发布中的一致性传递。从而为生产发布过程提供了稳定、安全和可靠的保障。</p><div><img src="https://pic3.zhimg.com/80/v2-ec3328498b1340c67d1b903ca67ef43e_1440w.webp" width="690" referrerpolicy="no-referrer"></div><p>同步 Apollo 配置</p><div><img src="https://pic4.zhimg.com/80/v2-fc2754afebe382c76935b641d6efea1f_1440w.webp" width="690" referrerpolicy="no-referrer"></div><p>Apollo 配置变更前后比对</p><div><img src="https://pic3.zhimg.com/80/v2-4a3bb6534a00f7801f663e925b963b0a_1440w.webp" width="690" referrerpolicy="no-referrer"></div><p>同步 Nacos 配置</p><div><img src="https://pic1.zhimg.com/80/v2-9864d985eaa59753265d5e1b7fb24b6c_1440w.webp" width="690" referrerpolicy="no-referrer"></div><p>Nacos 配置变更前后比对</p><span id="OSC_h2_3"></span><h2>&nbsp;</h2><span id="OSC_h2_4"></span><h2><strong>自测模式升级,开发自测联调无烦恼</strong></h2><p style="margin-left:0; margin-right:0">自测模式能力升级，支持入口服务的自测调试，使服务自测变得更加智能、无烦恼，为开发者提供更顺畅的调试体验。</p><div><img src="https://pic3.zhimg.com/80/v2-a487007f4e1f2ab7c8e3b96be0b91e1a_1440w.webp" width="690" referrerpolicy="no-referrer"></div><p>自测模式为入口服务配置 istio 网关</p><div><img src="https://pic2.zhimg.com/80/v2-a56a24d8a27393450fd9c417318681f5_1440w.webp" width="690" referrerpolicy="no-referrer"></div><p>配置 istio 网关并绑定访问地址</p><span id="OSC_h2_5"></span><h2>&nbsp;</h2><span id="OSC_h2_6"></span><h2><strong>Istio 全链路灰度发布,为生产发布保驾护航</strong></h2><p style="margin-left:0; margin-right:0">支持 Istio 全链路灰度发布，为生产环境发布提供更安全、更可靠、更高效的升级方式，加强系统发布的稳健性。</p><div><img src="https://pic4.zhimg.com/80/v2-4f7b1092be359cfb432ba68e4b8b5c5b_1440w.webp" width="690" referrerpolicy="no-referrer"></div><p>基准环境与灰度环境</p><div><img src="https://pic2.zhimg.com/80/v2-d44b94bdeeb70348888eee2722371b25_1440w.webp" width="690" referrerpolicy="no-referrer"></div><p>基于流量比例灰度策略</p><div><img src="https://pic2.zhimg.com/80/v2-e06eb831d7835e2df3a71b6fd93e5b11_1440w.webp" width="690" referrerpolicy="no-referrer"></div><p>基于请求头部灰度策略</p><span id="OSC_h2_7"></span><h2>&nbsp;</h2><span id="OSC_h2_8"></span><h2><strong>多环境共享 K8s 命名空间,业务划分清晰明了</strong></h2><p style="margin-left:0; margin-right:0">Zadig v2.1.0 进一步提升了对多环境的支持，实现了多环境共享命名空间 (NS) 的便捷操作。管理员可以更加灵活地进行业务划分，满足企业对于业务管理的更精细需求。</p><div><img src="https://pic1.zhimg.com/80/v2-9820c02c381df9d930f27cb56766286c_1440w.webp" width="690" referrerpolicy="no-referrer"></div><span id="OSC_h2_9"></span><h2>&nbsp;</h2><span id="OSC_h2_10"></span><h2><strong>多平台、跨厂商、多协议的支持,进一步搞定全球交付</strong></h2><p style="margin-left:0; margin-right:0">谷歌云作为国际市场中重要的云厂商，本次做了严肃的兼容性测试，来满足客户在多云架构下，国际化全球部署的需求。</p><div><img src="https://pic2.zhimg.com/80/v2-bf1dca247b9097cf0dca7fa4ef728ebd_1440w.webp" width="690" referrerpolicy="no-referrer"></div><p>集群管理支持谷歌云 GCP</p><div><img src="https://pic4.zhimg.com/80/v2-97256102f6789ecb0af8eea24b87656f_1440w.webp" width="690" referrerpolicy="no-referrer"></div><p>对象存储支持谷歌云 Cloud Storage</p><p style="margin-left:0; margin-right:0">自定义工作流构建和通用任务支持在 Windows 上执行批处理脚本，满足更多异构场景。</p><div><img src="https://pic2.zhimg.com/80/v2-41a9ae581dbdec31d2c57aead9a30039_1440w.webp" width="690" referrerpolicy="no-referrer"></div><p>Windows 主机集成</p><div><img src="https://pic1.zhimg.com/80/v2-c6702957377db3a37768814e630d22a0_1440w.webp" width="690" referrerpolicy="no-referrer"></div><p>构建支持批处理脚本</p><span id="OSC_h2_11"></span><h2>&nbsp;</h2><span id="OSC_h2_12"></span><h2><strong>一大波修复和优化,系统稳定性和使用体验 Up！Up！Up！</strong></h2><p style="margin-left:0; margin-right:0">通过一系列问题修复和稳定性优化，系统可用性得到了显著提升，为用户提供更为稳定的使用环境和本地化的使用体验：</p><p style="margin-left:0; margin-right:0"><strong>·<span>&nbsp;</span></strong>修复工作流视图特殊字符报错问题、构建模板敏感信息无效等问题</p><p style="margin-left:0; margin-right:0"><strong>·<span>&nbsp;</span></strong>自定义工作流任务支持中文名称，补全工作流和环境 i18n 翻译等等</p><div><img src="https://pic3.zhimg.com/80/v2-f767a0775a31320648d01ead1f72e276_1440w.webp" width="690" referrerpolicy="no-referrer"></div><p>工作流视图名称修复及工作流任务支持中文</p><div><img src="https://pic3.zhimg.com/80/v2-84ec440046ddf4e8c5b594099fd90cd2_1440w.webp" width="690" referrerpolicy="no-referrer"></div><p>服务调试修复</p><span id="OSC_h2_13"></span><h2>&nbsp;</h2><span id="OSC_h2_14"></span><h2><strong>新增功能详情列表</strong></h2><span id="OSC_h3_15"></span><h3><strong>新功能</strong></h3><p style="margin-left:0; margin-right:0"><strong>·<span>&nbsp;</span></strong>自定义工作流任务支持中文</p><p style="margin-left:0; margin-right:0"><strong>·<span>&nbsp;</span></strong>自定义工作流支持 Grafana 监测任务</p><p style="margin-left:0; margin-right:0"><strong>·<span>&nbsp;</span></strong>自定义工作流 Apollo 和 Nacos 配置变更支持跨环境配置比对和同步</p><p style="margin-left:0; margin-right:0"><strong>·<span>&nbsp;</span></strong>自定义工作流 SQL 变更任务使用密码支持特殊字符</p><p style="margin-left:0; margin-right:0"><strong>·<span>&nbsp;</span></strong>自定义工作流构建和通用任务支持在 Windows 上执行</p><p style="margin-left:0; margin-right:0"><strong>·<span>&nbsp;</span></strong>生产环境支持 Istio 全链路灰度</p><p style="margin-left:0; margin-right:0"><strong>·<span>&nbsp;</span></strong>自测模式支持访问子环境中入口服务</p><p style="margin-left:0; margin-right:0"><strong>·<span>&nbsp;</span></strong>多个环境支持共享同一个 NS</p><p style="margin-left:0; margin-right:0"><strong>·<span>&nbsp;</span></strong>环境支持查看 Cronjob 资源的容器信息</p><p style="margin-left:0; margin-right:0"><strong>·<span>&nbsp;</span></strong>集群管理严格兼容性测试支持谷歌云 GCP</p><p style="margin-left:0; margin-right:0"><strong>·<span>&nbsp;</span></strong>对象存储严格兼容性测试支持谷歌云 Cloud Storage</p><p style="margin-left:0; margin-right:0"><strong>·<span>&nbsp;</span></strong>Chart 仓库集成支持 OCI 协议</p><p style="margin-left:0; margin-right:0"><strong>·<span>&nbsp;</span></strong>补全工作流和环境 i18n 翻译</p><p style="margin-left:0; margin-right:0">&nbsp;</p><span id="OSC_h3_16"></span><h3><strong>其他修复及优化</strong></h3><p style="margin-left:0; margin-right:0"><strong>·<span>&nbsp;</span></strong>创建环境增加事务回滚，提高稳定性</p><p style="margin-left:0; margin-right:0"><strong>·<span>&nbsp;</span></strong>修复构建模板中敏感信息变量无效问题</p><p style="margin-left:0; margin-right:0"><strong>·<span>&nbsp;</span></strong>修复从容器中下载文件报错问题</p><p style="margin-left:0; margin-right:0"><strong>·<span>&nbsp;</span></strong>修复工作流视图名称包含特殊字符 &amp; 和 \ 时报错问题</p><p style="margin-left:0; margin-right:0"><strong>·<span>&nbsp;</span></strong>修复环境创建中或者集群断开连接时，环境无法删除问题</p><p style="margin-left:0; margin-right:0"><strong>·<span>&nbsp;</span></strong>修复托管项目环境修改镜像报错问题</p><p style="margin-left:0; margin-right:0"><strong>·<span>&nbsp;</span></strong>修复若干发布计划模块问题</p><p style="margin-left:0; margin-right:0">&nbsp;</p><span id="OSC_h2_17"></span><h2><strong>Release Notes</strong></h2><span id="OSC_h3_18"></span><h3><strong>New Features</strong></h3><p style="margin-left:0; margin-right:0"><strong>·</strong><span>&nbsp;</span>Chinese support for custom workflow tasks</p><p style="margin-left:0; margin-right:0"><strong>·</strong><span>&nbsp;</span>Custom workflow supports Grafana monitoring tasks.</p><p style="margin-left:0; margin-right:0"><strong>·</strong><span>&nbsp;</span>Config synchronization for Apollo and Nacos config management task.</p><p style="margin-left:0; margin-right:0"><strong>·</strong><span>&nbsp;</span>Mysql data change task support password with special characters</p><p style="margin-left:0; margin-right:0"><strong>·</strong><span>&nbsp;</span>Self-test mode supports accessing entry services in sub-environments.</p><p style="margin-left:0; margin-right:0"><strong>·<span>&nbsp;</span></strong>Namespace sharing for multiple environments.</p><p style="margin-left:0; margin-right:0"><strong>·<span>&nbsp;</span></strong>Container inspection for Cronjob resource in environment.</p><p style="margin-left:0; margin-right:0"><strong>·</strong><span>&nbsp;</span>Cluster management supports integration with Google Cloud Platform (GCP).</p><p style="margin-left:0; margin-right:0"><strong>·</strong><span>&nbsp;</span>Object storage supports integration with Google Cloud Storage.</p><p style="margin-left:0; margin-right:0"><strong>·</strong><span>&nbsp;</span>Chart repository integration supports the OCI protocol.</p><p style="margin-left:0; margin-right:0"><strong>·</strong><span>&nbsp;</span>The English version implemented.</p><p style="margin-left:0; margin-right:0">&nbsp;</p><span id="OSC_h3_19"></span><h3><strong>Other Fixes and Optimizations</strong></h3><p style="margin-left:0; margin-right:0"><strong>·</strong><span>&nbsp;</span>Environmental creation now includes transaction rollback to improve stability.</p><p style="margin-left:0; margin-right:0"><strong>·</strong><span>&nbsp;</span>Fixed an issue where sensitive information variables in build templates were invalid.</p><p style="margin-left:0; margin-right:0"><strong>·</strong><span>&nbsp;</span>Fixed an issue where downloading files from containers resulted in an error.</p><p style="margin-left:0; margin-right:0"><strong>·</strong><span>&nbsp;</span>Fixed an issue where errors occurred when the workflow view name contained special characters '&amp;' and ''.</p><p style="margin-left:0; margin-right:0"><strong>·</strong><span>&nbsp;</span>Fixed an issue where environments could not be deleted when the connection was lost during environment creation or cluster shutdown.</p><p style="margin-left:0; margin-right:0"><strong>·</strong><span>&nbsp;</span>Fixed several issues in the release planning module.</p><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="margin-left:0; margin-right:0">社区中已经有大量小伙伴成功升级到 Zadig v2.1.0，并且他们享受到了全新功能带来的便捷和效率提升。我们期待更多用户的加入，共同体验 Zadig v2.1.0 带来的卓越之处。</p><p style="margin-left:0; margin-right:0">Zadig v2.1.0 完整的功能列表和升级过程详情见:<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.koderover.com%2Fzadig%2FZadig%2520v2.1.0%2Frelease-notes%2Fv2.1.0%2F" target="_blank"><span style="background-color:#ffffff; color:#5f9cef">https://docs.koderover.com/zadig/Zadig%20v2.1.0/release-notes/v2.1.0/</span></a></p><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="margin-left:0; margin-right:0">&nbsp;</p><p>&nbsp;</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:center"><span style="background-color:#ffffff; color:rgba(0, 0, 0, 0.9)">立即体验 Zadig V2.0 新架构，开启高效交付之旅！🚀&nbsp;</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:center"><strong><span style="color:#ff2968">Zadig，让工程师更加专注创造</span></strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-16e6b25cd9b3c92bc711c17b21e99e9b040.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:center"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4NDY0NTMyNw%3D%3D%26mid%3D2247491363%26idx%3D1%26sn%3Dd6ccb8938f4702f560f28d5b79324cf3%26chksm%3Dcfb45383f8c3da9540c0c3eb1080f729fa2545db2063159b5fb05ddeb818f082e21adb2f9189%26token%3D1376697300%26lang%3Dzh_CN%23rd" target="_blank">阅读原文</a>&nbsp;/&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkoderover%2Fzadig" target="_blank">Zadig 在 Github</a>&nbsp;/&nbsp;<a href="https://gitee.com/koderover/zadig">Zadig 在 Gitee</a></p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start"><strong>推荐阅读 :&nbsp;</strong><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4NDY0NTMyNw%3D%3D%26mid%3D2247491441%26idx%3D1%26sn%3D3eb5d7125489434ff567d60ae48ef5e5%26chksm%3Dcfb453d1f8c3dac7a9ba2de20d6d8d37f94ea5a0812030843cde5d9512bd93deb208073ff1bf%26scene%3D21%23wechat_redirect" target="_blank">只有大厂才可以有 DevOps 平台？</a>&nbsp;/&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4NDY0NTMyNw%3D%3D%26mid%3D2247490637%26idx%3D1%26sn%3D6e0498b37fb15f8b8903c4997e5611d8%26chksm%3Dcfb450edf8c3d9fb758d691081f09fd85d91dbb17534ba9c18c2300725462d3806581efbd237%26scene%3D21%23wechat_redirect" target="_blank">Zadig vs. Jenkins 详细比对：时代的选择与开发者之选</a>&nbsp;/&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4NDY0NTMyNw%3D%3D%26mid%3D2247491499%26idx%3D1%26sn%3D0bf38f5bde35f9f0aec0cedca79d74b4%26chksm%3Dcfb4530bf8c3da1d9e9aad6af00d150be6ffd231a3e7801512cb8b749746e3c8ceca2feafadd%26scene%3D21%23wechat_redirect" target="_blank">探索 Zadig 自测模式，一套环境多人协同，释开发者创造力！</a>&nbsp;/&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4NDY0NTMyNw%3D%3D%26mid%3D2247491474%26idx%3D1%26sn%3D5f7c40d430e16fcbfa69104c4a46a797%26chksm%3Dcfb45332f8c3da247c792998c84b0885a3b40a534cfd2011e0e7ea30a51cadeeabb37fdba14d%26scene%3D21%23wechat_redirect" target="_blank">阿里云 MSE + Zadig，面向开发者的全链路灰度发布解决方案</a>&nbsp;/&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4NDY0NTMyNw%3D%3D%26mid%3D2247491336%26idx%3D1%26sn%3D805f7d2c44c96cab529ffef120d84ca0%26chksm%3Dcfb453a8f8c3dabe83163a873135f2a72cdddcb9faeecefe5e40f20a358681304484c56cce51%26scene%3D21%23wechat_redirect" target="_blank">ZADIG 专家版倾情上线：一键高效发布，119 元/人月起，社区老友享年终福利！</a></p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><p>&nbsp;</p><p style="margin-left:0; margin-right:0">&nbsp;</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 15 Jan 2024 11:19:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/koderover/blog/10837792</guid>
            <link>https://my.oschina.net/koderover/blog/10837792</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Linux 内核被冬季风暴「封印」]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Linus Torvalds&nbsp;在内核邮件列表宣布，由于他位于美国俄勒冈州波特兰的居住地遭遇严重冬季风暴，<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftwitter.com%2Ftrimet%2Fstatus%2F1746303249433718913" target="_blank">导致网络和电力中断</a></u>，他所在的波特兰附近地区气温降至 -10°C，<strong>因此他不得不暂停 Linux 6.8 内核的合并窗口</strong>。</p><blockquote><p><img src="https://oscimg.oschina.net/oscnet/up-5eb469b6270c0caae9811520812b4c99919.png" referrerpolicy="no-referrer"></p><p>via<em><u>&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flore.kernel.org%2Flkml%2FCAHk-%3DwjMWpmXtKeiN__vnNO4TcttZR-8dVvd_oBq%2BhjeSsWUwg%40mail.gmail.com%2FT%2F%23u" target="_blank">https://lore.kernel.org/lkml/</a></u></em></p></blockquote><p>Linus 在 1 月 7 日<u><a href="https://www.oschina.net/news/274674/linux-kernel-6-7">发布 </a></u>Linux 6.7 内核，随后开启 6.8 合并窗口，预计持续两周，但上周末合并窗口处于中间阶段时，他居住的地方因冬季风暴而断电断网。Linus 称恢复电力和网络通常需要比较长的时间，他曾经历过需要一周多时间供电才恢复。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-eb2042ee44802498cfdd287f5d9c55703b6.png" referrerpolicy="no-referrer"></p><p><em>俄勒冈州冬季风暴现场图，来自&nbsp;<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.opb.org%2Farticle%2F2024%2F01%2F14%2Fwinter-storm-ice-snow-deaths-power-failures-portland-oregon-willamette-valley%2F" target="_blank">https://www.opb.org/article</a></u></em></p><p>Linus 还表示他没有去星巴克继续工作的打算，因为<strong>内核开发并没有重要到需要寻找温暖和 Wi-Fi 的地步</strong>。所以按照目前的情况，Linux 6.8 RC1 大概率会推迟发布。</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 15 Jan 2024 10:07:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/275878/linux-6-8-merge-window-hiatus</guid>
            <link>https://www.oschina.net/news/275878/linux-6-8-merge-window-hiatus</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[OpenAI 删除了禁止其技术被用于军事用途的条款]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>OpenAI 于近日删除了一项涉及其 AI 模型的使用禁令。</p><p>在今年 1 月 10 日之前，OpenAI 公司在其 AI 模型的使用条款中曾明确表示，禁止将其模型用于很可能会造成人员伤亡的用途上，比如「研发武器」和「军事与战争」。</p><p>然而，在 1 月 10 日对其使用条款进行一番大更新后，OpenAI 公司虽然在禁止项中仍然提到禁止将其产品、模型和服务用于会导致人员伤亡的用途上，并提到了「武器开发和使用」，但先前同样被禁止的军事用途，如今却在文本中消失了。</p><p><img alt="" height="268" src="https://oscimg.oschina.net/oscnet/up-bc969fc4ffeeb76065e1fcb29db2cb945c0.png" width="300" referrerpolicy="no-referrer"></p><p><img alt="" height="211" src="https://oscimg.oschina.net/oscnet/up-8072704afb44c2511fb347ca69d4470632f.png" width="300" referrerpolicy="no-referrer"></p><p>对此，OpenAI 公司的发言人在回应美国调查新闻网站「拦截者」时表示，1 月 10 日这次对使用条款的大调整，是因为公司的产品和服务已经被全世界广泛使用，所以需要设立一套更加简洁和普适的规则，包括让规则中的文本变得更加清晰，更好被理解、记忆以及应用。</p><p>并强调，新的使用条款中提到的「不要去伤害他人」本身就是一个很宽泛同时也很好理解的概念，可以适用于很多语境之下，而且条款中还列举了武器作为一个明显的例子。</p><p>但该发言人并没有正面回应「禁止伤害」这个宽泛的表述，是否包括一切军事用途，仅称条款禁止其技术被包括军方的人用于研发和使用武器，伤害他人或摧毁他人财物，或是在未授权的情况下用于破坏任何服务或系统的安全。</p><p>有网络安全专家对「拦截者」网站表示，OpenAI 删掉使用条款中禁止军事和战争用途的内容，是一个很大的变化，说明该公司新版使用条款关注的重点，是在确保法律合规之上提供更多的灵活性，但在很多国家，军事和战争都会被披上合法的外衣，所以 OpenAI 公司的这次调整潜在的影响将是巨大的。</p><p>其他专家亦对「拦截者」网站也表示，OpenAI 的新使用条款反映出公司正在悄悄弱化其先前反对军事应用的立场。有专家还指出，OpenAI 的重要合作伙伴微软公司就是美国军方主要的供应商之一。而且美军对于 AI 技术的需求也越来越强烈。</p><p>「拦截者」网站还特别提到，虽然 OpenAI 公司的产品、模型和服务如今还没有被用于操控武器去杀人，但实际上其技术已经开始被军方用于编写代码、处理武器采购以及情报分析等方面。换言之，尽管没有被直接用于杀人，该公司的技术都已经在被用于协助这样的工作了。</p><p><em>来源：<span style="background-color:#ffffff; color:rgba(0, 0, 0, 0.9)"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2F7QvBJZ0wgICl5j8iZNh_xA" target="_blank">环球时报</a></span></em></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 15 Jan 2024 09:39:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/275867</guid>
            <link>https://www.oschina.net/news/275867</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[优秀！openKylin 获中国开放指令生态 (RISC-V) 联盟「2023 年生态贡献奖」]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span style="color:#333333">为进一步推动 RISC-V 产业生态在国内的快速发展，中国开放指令生态（RISC-V）联盟于 2024 年 1 月 13 日举办联盟 2023 年年会。openKylin 社区作为联盟会员单位受邀出席此次大会。</span></p><p><span style="color:#333333">本次会议以「开放合作&nbsp;共赢未来」为主题，邀请政府部门、产业界、学术界及相关组织等代表共襄盛会，共同探讨 RISC-V 的全球发展趋势和中国 RISC-V 产业生态的可持续发展，推动相关产业链深度融合，共赢未来。</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:center"><img alt="" height="851" src="https://oscimg.oschina.net/oscnet/up-557d1d6f136603254abc054305e5c26def9.jpg" width="1280" referrerpolicy="no-referrer"></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span style="color:#333333">会上，2023 年度联盟颁奖仪式举行。</span><strong><span style="color:#333333">凭借在 RISC-V 领域的卓越贡献，openKylin 社区获得由联盟颁发的「2023 年度生态贡献奖」。</span></strong></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:center"><img alt="" height="1706" src="https://oscimg.oschina.net/oscnet/up-034b5e277d21809b0b9d9a89af43db98f2b.png" width="1280" referrerpolicy="no-referrer"></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span style="color:#333333">openKylin 作为中国领先的开源操作系统根社区，自成立起，就十分关注并持续投入 RISC-V 架构生态建设，从源码级别自主构建了 RISC-V 开源桌面操作系统版本，实现了对算能 RISC-V 高性能平台的全方位支持，涵盖了桌面环境、软件生态、容器化部署和人工智能等关键领域。</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span style="color:#333333">截至目前，openKylin RISC-V 版本能够支持 HiFive Unmatched、VisionFive2、LicheePi 和 SG2042 EVB 等市场主流 RISC-V SoC 开发平台，并与深度数智联合发布了全球首款 RISC-V 笔记本电脑 DC-ROMA。</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span style="color:#333333">同时，openKylin 社区研发团队还基于 RISC-V 指令集和 GPU 优化了 UKUI 桌面环境，提升用户使用体验，并通过适配 openKylin 自研软件、Libreoffice、浏览器、影音播放和程序开发等常用软件，满足了用户的基本使用需求。未来，openKylin 将携手生态伙伴，持续推动 RISC-V 架构芯片与 openKylin 操作系统的开发适配，共同致力于 RISC-V 生态的发展与探索。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 15 Jan 2024 09:02:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/275851</guid>
            <link>https://www.oschina.net/news/275851</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Ruffle 2023 回顾 - Rust 实现的开源 Flash Player 模拟器]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>2017 年 7 月，Adobe <u><a href="https://www.oschina.net/news/87109/adobe-finished-flash-update" target="_blank">宣布</a></u>将在 2020 年底停止对 Flash 的支持。随着 Flash 被淘汰，互联网上大量关于 Flash 的优秀资源也将因此而埋没。为了让这些 Flash 资源能在互联网上继续运行，有人就创建了能运行 Flash 的模拟器 —— Ruffle 正是诞生于此背景。</p><p><img src="https://static.oschina.net/uploads/space/2019/1031/083144_S43f_2720166.png" referrerpolicy="no-referrer"></p><p>Ruffle 是采用 Rust 编程语言编写的 Adob​​e Flash Player 模拟器，并通过 WebAssembly 提供面向桌面和 Web 的版本。</p><p><img src="https://oscimg.oschina.net/oscnet/up-a104990330c78e86c41be7c2290d3fac93f.png" referrerpolicy="no-referrer"></p><p>该项目近日回顾了 2023 的亮点：</p><ol><li>ActionScript 3 语言从 60% 提升到 75%。</li><li>ActionScript 3 API 支持从 60% 提升到 68%。</li><li>合并了 852 个 PR，关闭了 1,288 个 issue。</li><li>实现了 7 种 Flash 滤镜效果，使内容看起来更加准确。<br><img alt="" src="https://oscimg.oschina.net/oscnet/up-d31574c99a47a1580e384ade10304a6baab.png" referrerpolicy="no-referrer"></li><li>实现了 cacheAsBitmap 支持，对于使用它的游戏来说是一个巨大的优化。</li><li>改进了文本渲染，包括基本的文本布局框架（TLF）支持和文本输入功能。<br><img src="https://oscimg.oschina.net/oscnet/up-43ff37b72e27e5d39d1968670b5806d319d.png" referrerpolicy="no-referrer"></li><li>实现了套接字（TCP 套接字或 XML 套接字）的支持，这对于多人在线游戏非常重要。</li><li>支持 FLV 视频播放，包括 H.264 解码的工作原型。</li><li>初步支持 AIR（Adobe Integrated Runtime）。</li><li>允许混合 AVM（ActionScript Virtual Machine）的影片正确运行。</li><li>改进了扩展，使其在 Edge 商店和 Firefox for Android 上可用。</li><li>改进了桌面用户界面，添加了新的高级打开菜单和调试工具。<br><img src="https://oscimg.oschina.net/oscnet/up-0d45019ccdd1c76387927417098712db9ae.png" referrerpolicy="no-referrer"></li><li>重新设计了 Ruffle 的网站，增加了新的选项和演示播放器。</li></ol><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fruffle.rs%2Fblog%2F2024%2F01%2F14%2F2023-in-review" target="_blank">详情</a>。</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 15 Jan 2024 08:51:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/275848/ruffle-rs-2023-in-review</guid>
            <link>https://www.oschina.net/news/275848/ruffle-rs-2023-in-review</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[AI 将影响全球近 40% 的工作，加剧财富不平等]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">国际货币基金组织 (IMF) 最新发布了一份「<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.imf.org%2Fen%2FPublications%2FStaff-Discussion-Notes%2FIssues%2F2024%2F01%2F14%2FGen-AI-Artificial-Intelligence-and-the-Future-of-Work-542379%3Fcid%3Dbl-com-SDNEA2024001" target="_blank">Gen-AI: Artificial Intelligence and the Future of Work</a>」报告，就人工智能 (AI) 对全球劳动力市场的潜在影响进行了研究分析。</span></p><p><img height="248" src="https://oscimg.oschina.net/oscnet/up-0a60dadc2ad1271e2bbcc7e075e1bc01c6d.png" width="500" referrerpolicy="no-referrer"></p><p><span style="color:#000000">研究结果表明，AI 将影响全球近 40% 的就业岗位；且与新兴市场和低收入国家相比，发达经济体将受到更大的影响：面临着更大的 AI 风险，但也有更多的机会可利用 AI 所带来的好处。</span></p><p><span style="color:#000000">在发达经济体中，约有 60% 的工作可能会受到 AI 的影响。大约一半受影响的工作可能会受益于 AI 的整合，从而提高生产率。至于另一半，则可能被 AI 应用所取代，从而会降低劳动力需求，导致工资下降和招聘减少。在最极端的情况下，其中一些工作岗位可能会消失。</span></p><p><span style="color:#000000">相比之下，在新兴市场和低收入国家，AI 的普及率预计分别为 40% 和 26%。这一发现表明，新兴市场和发展中经济体面临的 AI 直接干扰相对较少。与此同时，其中许多国家没有基础设施或熟练劳动力来利用 AI；随着时间的推移，该技术也可能会加剧国家之间的不平等。</span></p><p><span style="color:#000000"><img alt="" height="500" src="https://oscimg.oschina.net/oscnet/up-98e906efbf800cfbb59c06a8fc0ced1e2a4.png" width="500" referrerpolicy="no-referrer"></span></p><p><span style="color:#000000">与此同时，AI 还可能影响国家内部的收入和财富不平等。收入阶层内部会出现两极分化，能够利用 AI 工具的人的生产率和工资会提高，不能利用的则会落后。国际货币基金组织认为，年轻人可能更容易利用机会，而年长的则可能难以适应。</span></p><p><span style="color:#000000">国际货币基金组织总裁 Kristalina Georgieva 在<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.imf.org%2Fen%2FBlogs%2FArticles%2F2024%2F01%2F14%2Fai-will-transform-the-global-economy-lets-make-sure-it-benefits-humanity" target="_blank">博文</a>中指出，「在大多数情况下，AI 可能会加剧整体贫富差距，这是一个令人不安的趋势，决策者必须积极加以应对，防止这一技术进一步加剧社会紧张局势。各国必须建立全面的社会安全网，并为弱势工人提供再培训计划。这样，我们就能使 AI 转型更具包容性，保护生计并遏制不平等。」</span></p><p><span style="color:#000000">「人工智能时代已经来临，我们仍有能力确保它为所有人带来繁荣。」</span></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 15 Jan 2024 07:51:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/275823/ai-will-transform-the-global-economy</guid>
            <link>https://www.oschina.net/news/275823/ai-will-transform-the-global-economy</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
    </channel>
</rss>
