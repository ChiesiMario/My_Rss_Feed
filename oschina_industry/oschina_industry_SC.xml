<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[开源中国-综合资讯]]>
        </title>
        <link>https://www.oschina.net/news/industry</link>
        <atom:link href="https://rsshub.app/oschina/news/industry" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[开源中国-综合资讯 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Thu, 28 Sep 2023 12:07:14 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[Raspberry Pi 5 将于 10 月底发布，60 美元起售]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">在 <a href="https://www.oschina.net/news/107700/raspberry-pi-4-model-b">Raspberry Pi 4</a> 发布四年后，<span style="background-color:#ffffff">Raspberry Pi 公司</span><span style="background-color:#ffffff">宣布 Raspberry Pi 5 将于 10 月底推出。此前，</span><span style="background-color:#ffffff">Raspberry Pi 首席执行官 Eben Upton 在访谈中</span></span><a href="https://www.oschina.net/news/222527/raspberry-pi-5" target="_blank">表示</a><span style="color:#000000"><span style="background-color:#ffffff">，由于持续的供应链复苏，Raspberry Pi 可能不会在 2023 年发布 Raspberry Pi 5。</span></span></p><p><span style="color:#000000">根据介绍，Raspberry Pi 5 4GB 型号的售价为 60 美元，8GB 版本的售价为 80 美元。与 Raspberry Pi 4 相比，Raspberry Pi 5&nbsp;的 CPU 和 GPU 性能提高了两到三倍；内存和 I/O 带宽大约是两倍；并且是首款采用英国剑桥内部设计的芯片的 Raspberry Pi 计算机。</span></p><p><img height="333" src="https://oscimg.oschina.net/oscnet/up-d361cf4dc5042dc2ca363c929128c72f516.png" width="500" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0; text-align:start"><strong><span style="color:#000000">主要特点包括：</span></strong></p><ul><li><span style="color:#000000">2.4GHz 四核 64 位 Arm Cortex-A76 CPU</span></li><li><span style="color:#000000">VideoCore VII GPU，支持 OpenGL ES 3.1、Vulkan 1.2</span></li><li><span style="color:#000000">双 4Kp60 HDMI 显示输出</span></li><li><span style="color:#000000">4Kp60 HEVC 解码器</span></li><li><span style="color:#000000">双频 802.11ac Wi-Fi</span></li><li><span style="color:#000000">Bluetooth 5.0 / Bluetooth Low Energy (BLE)</span></li><li><span style="color:#000000">支持 SDR104 模式的高速 microSD 卡接口</span></li><li><span style="color:#000000">2 个 USB 3.0 端口，支持 5Gbps 同步运行</span></li><li><span style="color:#000000">2 个 USB 2.0 端口</span></li><li><span style="color:#000000">千兆位以太网，支持 PoE+（需要单独的 PoE+ HAT，即将推出）</span></li><li><span style="color:#000000">2 × 4-lane MIPI 摄像头/显示收发器</span></li><li><span style="color:#000000">PCIe 2.0 x1 接口，用于快速外设</span></li><li><span style="color:#000000">Raspberry Pi 标准 40-pin GPIO 接头</span></li><li><span style="color:#000000">Real-time clock</span></li><li><span style="color:#000000">电源按钮</span></li></ul><h4><strong><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span style="color:#222222"><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>新平台、新芯片组</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></h4><p style="margin-left:0px; margin-right:0px; text-align:start"><span style="background-color:#ffffff; color:#222222">三款新芯片均专为 Raspberry Pi 5 程序设计。</span></p><p style="margin-left:0px; margin-right:0px; text-align:start"><strong><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span style="color:#222222"><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>BCM2712</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></p><p style="margin-left:0px; margin-right:0px; text-align:start"><span style="background-color:#ffffff; color:#222222">BCM2712 是 Broadcom 的一款新型 16 纳米应用处理器 (AP)，源自为 Raspberry Pi 4 提供动力的 28 纳米 BCM2711 AP，并具有众多架构增强功能。</span></p><p style="margin-left:0px; margin-right:0px; text-align:start"><img height="337" src="https://oscimg.oschina.net/oscnet/up-8c726b4de45a468c3271117d7ce5b99aca5.png" width="500" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px; text-align:start"><strong><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span style="color:#222222"><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>RP1</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></p><p style="margin-left:0px; margin-right:0px; text-align:start"><span style="color:#000000"><span style="background-color:#ffffff">RP1 是用于 Raspberry Pi 5 的 I/O 控制器，由 Raspberry Pi 提供 RP2040 微控制器的同一团队设计，并与 RP2040 一样，在 TSMC 成熟的 40LP 工艺上实现。RP1 自 2016 年开始开发，是在 Raspberry Pi 上开展过的运行时间最长、最复杂且（耗资 1500 万美元）最昂贵的项目。</span></span></p><p style="margin-left:0px; margin-right:0px; text-align:start"><img height="333" src="https://oscimg.oschina.net/oscnet/up-efd812a0420b676ba96d4b1be955ae094ed.png" width="500" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px; text-align:start"><strong><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span style="color:#222222"><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>DA9091</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></p><p style="margin-left:0; margin-right:0; text-align:start"><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span style="color:#222222"><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>BCM2712 和 RP1 由芯片组的第三个新组件&nbsp;Renesas DA9091 "Gilmour" power-management IC (PMIC) 支持。它集成了八个独立的开关模式电源，以生成电路板所需的各种电压，其中包括一个四相核心电源，能够提供 20 安培的电流，为 Cortex-A76 cores 和 BCM2712 中的其他数字逻辑供电。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="background-color:#ffffff; color:#222222">与 BCM2712 一样，DA9091 是多年共同开发的成果。</span></p><div><img height="327" src="https://oscimg.oschina.net/oscnet/up-38bf4f1f2b6741bd33d457c7e5946f51be8.png" width="500" referrerpolicy="no-referrer"></div><h4><strong><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span style="color:#222222"><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>外形演变</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></h4><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000"><span style="background-color:#ffffff">从外观上看，</span>Raspberry Pi 5 与前代产品非常相似。不过，在保留信用卡大小的整体尺寸的同时，团队也借此机会更新了一些设计元素，以适应新芯片组的功能。</span></p><p style="margin-left:0; margin-right:0; text-align:start"><img height="335" src="https://oscimg.oschina.net/oscnet/up-86995819166a105d1ba44dca761548db40d.png" width="500" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0; text-align:start">更多详情可<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.raspberrypi.com%2Fnews%2Fintroducing-raspberry-pi-5%2F" target="_blank">查看官方公告</a>。</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 28 Sep 2023 07:29:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/259858/introducing-raspberry-pi-5</guid>
            <link>https://www.oschina.net/news/259858/introducing-raspberry-pi-5</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Apache Dubbo 首个 Node.js 3.0-alpha 版本正式发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><span id="OSC_h3_1"></span><h3>关于 Apache Dubbo3</h3><p style="text-align:justify">Apache Dubbo 是一款易用、高性能的 WEB 和 RPC 框架，同时为构建企业级微服务提供服务发现、流量治理、可观测、认证鉴权等能力、工具与最佳实践。经过近几年发展，Dubbo3 已在阿里巴巴集团各条业务线实现全面推广，成功取代运行多年的 HSF 框架，同时 Dubbo3 的多语言体系也有了快速发展，目前涵盖的多语言体系有</p><ul><li>apache/dubbo<strong>[1]</strong>&nbsp;(java)</li><li>apache/dubbo-go<strong>[2]</strong></li><li>apache/dubbo-js<strong>[3]</strong>&nbsp;(web、node.js)</li><li>apache/dubbo-rust<strong>[4]</strong></li></ul><p style="text-align:justify">基于 Dubbo3 定义的 Triple 协议，你可以轻松编写浏览器、移动端、gRPC 兼容的 RPC 服务，并让这些服务同时运行在 HTTP/1 和 HTTP/2 上。Dubbo Node.js SDK 支持使用 IDL 或编程语言特有的方式定义服务，并提供一套轻量的 API 来发布或调用这些服务。</p><p style="text-align:center"><img src="https://pic4.zhimg.com/80/v2-6dd39f09768f62d955dde2fb6ceeafef_720w.webp" referrerpolicy="no-referrer"></p><span id="OSC_h3_2"></span><h3>关于 Dubbo3 Node.js 首个发布版</h3><p style="text-align:justify">Dubbo-js 项目于 9 月份刚刚发布了支持 Dubbo3 协议的首个 alpha 版本，该项目是 Dubbo3 的 Typescript 版本实现，提供了 Web、Node.js 两种发布包。其中，Web 框架能让开发者直接在浏览器页面访问后端服务，Node.js 则进一步丰富了后端微服务技术栈的选择。当前 Node.js 版本主要是实现了 Triple 协议的完整支持，接下来的版本中，社区将继续完善地址发现、负载均衡等服务治理能力。</p><span id="OSC_h4_3"></span><h4>Node.js 微服务开发完整示例</h4><p style="text-align:justify">本示例基于最新发布的 Node.js 版本，演示了基于 Triple 协议的 RPC 通信模式，示例使用 Protocol Buffer 定义 RPC 服务，并演示了代码生成、服务发布和服务访问等过程。</p><p style="text-align:justify"><strong>前置条件</strong></p><p style="text-align:justify">因为使用 Protocol Buffer 的原因，我们首先需要安装相关的代码生成工具，这包括 @bufbuild/protoc-gen-es、@bufbuild/protobuf、@apachedubbo/protoc-gen-apache-dubbo-es、@apachedubbo/dubbo。</p><pre><code>npm install @bufbuild/protoc-gen-es @bufbuild/protobuf @apachedubbo/protoc-gen-apache-dubbo-es @apachedubbo/dubbo</code></pre><p style="text-align:justify"><strong>定义服务</strong></p><p style="text-align:justify">现在，使用 Protocol Buffer (IDL) 来定义一个 Dubbo 服务。</p><p style="text-align:justify">创建目录，并生成文件：</p><pre><code>mkdir -p proto &amp;&amp; touch proto/example.proto</code></pre><p style="text-align:justify">写入内容：</p><pre><code>syntax = "proto3";

package apache.dubbo.demo.example.v1;

message SayRequest {
  string sentence = 1;
}

message SayResponse {
  string sentence = 1;
}

service ExampleService {
  rpc Say(SayRequest) returns (SayResponse) {}
}</code></pre><p style="text-align:justify">这个文件声明了一个叫做 ExampleService 的服务，为这个服务定义了 Say 方法以及它的请求参数 SayRequest 和返回值 SayResponse。</p><p style="text-align:justify"><strong>生成代码</strong></p><p style="text-align:justify">创建 gen 目录，做为生成文件放置的目标目录。</p><pre><code>mkdir -p gen</code></pre><p style="text-align:justify">运行以下命令，在 gen 目录下生成代码文件：</p><pre><code>PATH=$PATH:$(pwd)/node_modules/.bin \
  protoc -I proto \
  --es_out gen \
  --es_opt target=ts \
  --apache-dubbo-es_out gen \
  --apache-dubbo-es_opt target=ts \
  example.proto</code></pre><p style="text-align:justify">运行命令后，应该可以在目标目录中看到以下生成的文件:</p><pre><code>├── gen
│   ├── example_dubbo.ts
│   └── example_pb.ts
├── proto
│   └── example.proto</code></pre><p style="text-align:justify"><strong>实现服务</strong></p><p style="text-align:justify">接下来我们就需要添加业务逻辑了，实现 ExampleService ，并将其注册到 DubboRouter 中。</p><p style="text-align:justify">创建 dubbo.ts 文件：</p><pre><code>import { DubboRouter } from "@apachedubbo/dubbo";
import { ExampleService } from "./gen/example_dubbo";

export default (router: DubboRouter) =&gt;
  // registers apache.dubbo.demo.example.v1
  router.service(ExampleService, {
    // implements rpc Say
    async say(req) {
      return {
        sentence: `You said: ${req.sentence}`,
      };
    },
  }, { serviceGroup: 'dubbo', serviceVersion: '1.0.0' });</code></pre><p style="text-align:justify"><strong>启动 Server</strong></p><p style="text-align:justify">Dubbo 服务可以嵌入到普通的 Node.js 服务器、Next.js、Express 或 Fastify 中。在这里我们将使用 Fastify，所以让我们安装 Fastify 以及我们为 Fastify 准备的插件。</p><pre><code>npm install fastify @apachedubbo/dubbo-fastify</code></pre><p style="text-align:justify">创建 server.ts 文件，新建一个 Server，把上一步中实现的 ExampleService 注册给它。</p><p style="text-align:justify">接下来就可以直接初始化和启动 Server 了，它将在指定的端口接收请求。</p><pre><code>import { fastify } from "fastify";
import { fastifyDubboPlugin } from "@apachedubbo/dubbo-fastify";
import routes from "./dubbo";

async function main() {
  const server = fastify();
  await server.register(fastifyDubboPlugin, {
    routes,
  });
  server.get("/", (_, reply) =&gt; {
    reply.type("text/plain");
    reply.send("Hello World!");
  });
  await server.listen({ host: "localhost", port: 8080 });
  console.log("server is listening at", server.addresses());
}

void main();</code></pre><p style="text-align:justify">最后，运行代码启动服务。</p><pre><code>npx tsx server.ts</code></pre><p style="text-align:justify"><strong>访问服务</strong></p><p style="text-align:justify">最简单的方式是使用 HTTP/1.1 POST 请求访问服务，参数则作以标准 JSON 格式作为 HTTP 负载传递。如下是使用 cURL 命令的访问示例:</p><pre><code>curl \
 --header 'Content-Type: application/json' \
 --header 'TRI-Service-Version: 1.0.0' \
 --header 'TRI-Service-group: dubbo' \
 --data '{"sentence": "Hello World"}' \
 http://localhost:8080/apache.dubbo.demo.example.v1.ExampleService/Say</code></pre><p style="text-align:justify">也可以使用标准的 Dubbo client 请求服务，我们首先需要从生成代码即 dubbo-node 包中获取服务代理，为它指定 server 地址并初始化，之后就可以发起起 RPC 调用了。</p><p style="text-align:justify">创建 client.ts 文件。</p><pre><code>import { createPromiseClient } from "@apachedubbo/dubbo";
import { ExampleService } from "./gen/example_dubbo";
import { createDubboTransport } from "@apachedubbo/dubbo-node";

const transport = createDubboTransport({
  baseUrl: "http://localhost:8080",
  httpVersion: "1.1",
});

async function main() {
  const client = createPromiseClient(ExampleService, transport, { serviceVersion: '1.0.0', serviceGroup: 'dubbo' });
  const res = await client.say({ sentence: "Hello World" });
  console.log(res);
}
void main();</code></pre><p style="text-align:justify">运行客户端：</p><pre><code>npx tsx client.ts</code></pre><span id="OSC_h3_4"></span><h3>总结</h3><p style="text-align:justify">当前 Node.js 版本主要是实现了 Triple 协议的完整支持，接下来的版本中，社区将继续完善地址发现、负载均衡等服务治理能力</p><p style="text-align:justify"><strong>相关链接：</strong></p><p style="text-align:justify">[1] apache/dubbo</p><p style="text-align:justify"><u><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fgithub.com%2Fapache%2Fdubbo" target="_blank">https://github.com/apache/dubbo</a></em></u></p><p style="text-align:justify">[2] apache/dubbo-go</p><p style="text-align:justify"><u><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fgithub.com%2Fapache%2Fdubbo-go" target="_blank">https://github.com/apache/dubbo-go</a></em></u></p><p style="text-align:justify">[3] apache/dubbo-js</p><p style="text-align:justify"><u><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fgithub.com%2Fapache%2Fdubbo-js" target="_blank">https://github.com/apache/dubbo-js</a></em></u></p><p style="text-align:justify">[4] apache/dubbo-rust</p><p style="text-align:justify"><u><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fgithub.com%2Fapache%2Fdubbo-rust" target="_blank">https://github.com/apache/dubbo-rust</a></em></u></p><p style="text-align:justify"><em>作者：蔡建怿</em></p><blockquote><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fclick.aliyun.com%2Fm%2F1000373503%2F" target="_blank"><span style="color:#ff9900">点击立即免费试用云产品，开启云上实践之旅！</span></a></strong></blockquote><p style="text-align:justify"><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.aliyun.com%2Farticle%2F1333160%3Futm_content%3Dg_1000381068" target="_blank">原文链接</a></strong></p><p style="text-align:justify"><strong>本文为阿里云原创内容，未经允许不得转载。</strong></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 28 Sep 2023 06:31:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/yunqi/blog/10114644</guid>
            <link>https://my.oschina.net/yunqi/blog/10114644</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Pika v3.5.1 发布，兼容 Redis 的 NoSQL 数据库]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Pika 社区很高兴宣布，我们今天发布已经过我们生产环境验证 v3.5.1 版本 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAtomFoundation%2Fpika%2Freleases%2Ftag%2Fv3.5.1" target="_blank">https://github.com/OpenAtomFoundation/pika/releases/tag/v3.5.1</a> 。</p><p>该版本不仅做了很多优化工作，还引入了多项新功能。这些新功能包括，动态关闭 WAL、ReplicationID 检测是否增量复制、在 K8s 环境上 Pika 服务的自动注册从而实现集群的自组织、以及 exporter 检测集群指标等等，无疑将会让用户享受到更为稳定和高效的 NoSQL 使用体验。</p><h2>1 新特性</h2><ul><li><p>1 Slow log 增加队列等待时间统计，在队列阻塞的时候方便我们进行问题定位。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAtomFoundation%2Fpika%2Fpull%2F1997" target="_blank">PR 1997</a>， 作者 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fwangshao1" target="_blank">wangshao1</a>。</p></li><li><p>2 主从复制使用 ReplicationID 判断是否进行增量同步，解决原主从同步方式切主后整个数据集会进行全量复制的问题，可以提升 Pika 性能。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAtomFoundation%2Fpika%2Fpull%2F1951" target="_blank">PR 1951</a>， 作者 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FMixficsol" target="_blank">Mixficsol</a>。</p></li><li><p>3 WAL 以 'disablewal' 命令方式支持动态关闭，在写性能遇到瓶颈的时候，可以通过命令关闭 WAL &nbsp;缓解写性能下降的问题，关闭 WAL 有机器宕机后丢失数据的风险，用户需要根据自己的使用习惯权衡。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAtomFoundation%2Fpika%2Fpull%2F2015" target="_blank">PR 2015</a>，作者 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FMixficsol" target="_blank">Mixficsol</a>。</p></li><li><p>4 flush 线程数和 compaction 线程数合二为一，在 Compaction 性能瓶颈时，可以动态调整线程数，缓解 Comapction 损耗 Pika 性能的问题。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAtomFoundation%2Fpika%2Fpull%2F2014" target="_blank">PR 2014</a>， 作者 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FTianpingan" target="_blank">Tianpingan</a>。</p></li><li><p>5 升级了 RocksDB 版本到 v8.3.3。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAtomFoundation%2Fpika%2Fpull%2F2000" target="_blank">PR 2000</a>， 作者 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdingxiaoshuai123" target="_blank">dingxiaoshuai123</a>。</p></li><li><p>6 新增周期性打印工作队列的长度功能，在队列阻塞的时候可以快速定位问题。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAtomFoundation%2Fpika%2Fpull%2F1978" target="_blank">PR 1978</a>， 作者 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FTianpingan" target="_blank">Tianpingan</a>。</p></li><li><p>7 新增利用一个&nbsp;<code>pika_exporter</code>&nbsp;监测整个集群的指标，实现一个 Pika Exporter 实例监控整个集群，解决了 3.5.0 版本一个&nbsp;Pika Exporter &nbsp;监测一个 Pika 实例消耗资源的问题。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAtomFoundation%2Fpika%2Fpull%2F1953" target="_blank">PR 1953</a>， 作者 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fchenbt-hz" target="_blank">chenbt-hz</a>。</p></li><li><p>8 实现在&nbsp; K8s &nbsp;环境上&nbsp; Pika &nbsp;服务的自动注册，在启动时自动注册，从而实现集群的自组织 ，实现了通过命令拉起整个 Pika Cluster 集群。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAtomFoundation%2Fpika%2Fpull%2F1931" target="_blank">PR 1931</a>， 作者 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmachinly" target="_blank">machinly</a>。</p></li></ul><h2>2 bug 修复</h2><ul><li><p>1 调整了 Rate_limit 参数，修复了压测时出现 RPS 为 0 的情况 。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAtomFoundation%2Fpika%2Fpull%2F2009" target="_blank">PR 2009</a>， 作者 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FMixficsol" target="_blank">Mixficsol</a>。</p></li><li><p>2 修复了 INFODATA 命令中对于遍历数据文件时出现空路径的逻辑判断。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAtomFoundation%2Fpika%2Fpull%2F1996" target="_blank">PR 1996</a>， 作者 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FMixficsol" target="_blank">Mixficsol</a>。</p></li><li><p>3 修复了 Codis 在线上出现大毛刺的问题。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAtomFoundation%2Fpika%2Fpull%2F2016" target="_blank">PR 2016</a>， 作者 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fchejinge" target="_blank">chejinge</a>。</p></li><li><p>4 修复了 macOS 环境下编译使用 tools 导致编译不过的问题 。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAtomFoundation%2Fpika%2Fpull%2F2011" target="_blank">PR 2011</a>， 作者 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FA2ureStone" target="_blank">A2ureStone</a>。</p></li><li><p>5 减少了 exporter 非必要日志的打印，降低，了资源利用率。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAtomFoundation%2Fpika%2Fpull%2F1945" target="_blank">PR 1945</a>， 作者 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FMixficsol" target="_blank">Mixficsol</a>。</p></li></ul><h2>3 使用建议</h2><p>本次新增了几个配置参数，大家在使用过程中，需要根据使用情况按需调整：</p><ul><li><p>1 max-rsync-parallel-num：主从全量复制线程数，需要根据自己机器 CPU 核数和部署实例个数进行调整，建议最小设置为 2。</p></li><li><p>2 rate-limiter-bandwidth:&nbsp;限制 RocksDB 数据库读写速度，限制数据库在一定时间内可以读写的数据量，默认 2000MiB/s，需要根据自己的机器性能和部署实例做调整。</p></li><li><p>max-background-jobs: compaction 和 flushdb 线程数，要根据自己机器 CPU 核数和部署实例个数进行调整，建议最小设置为 4。</p></li><li><p>3 throttle-bytes-per-second:&nbsp;主从复制传输限速参数，默认为 200MiB/s，该参数可以根据机器网卡的配置及部署 pika 实例的个数进行调整。</p></li></ul><p><img src="https://oscimg.oschina.net/oscnet/up-d55384ab133b76068b38aa4c6549a956cfd.png" alt="" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 28 Sep 2023 06:27:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/dubbogo/blog/10114890</guid>
            <link>https://my.oschina.net/dubbogo/blog/10114890</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[耗时两年倒贴 1.5 万美元，Chrome 扩展如何盈利]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">一名开发者 Steve Jones <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmedium.com%2F%40stevemacxcode%2Fi-spent-2-years-building-a-chrome-extension-lost-15k-dollars-in-the-process-and-made-just-over-7b2481c2b394" target="_blank">发文</a>表示，自己在两年前开始开发一个 Chrome 扩展程序，过程中投入了大量的资金，但却始终无法实现盈利。目前为止只赚到了 200 美元，而这些钱还都是近一周收到的打赏。</span></p><p><span style="color:#000000">具体来说，这名开发者在两年前推出了一个名为 Zecento 的 Chrome 扩展程序，其功能是帮助用户在亚马逊上做出更好的购买决策并节省金钱。主要通过分析产品/卖家的历史数据，告诉用户是否是购买的好时机，然后在价格下降（或其他商家以更优惠的价格提供相同产品）时给买家发送通知。目前，该扩展只在意大利地区可用，作者计划后续将在美国和加拿大推出。</span></p><p><img height="282" src="https://oscimg.oschina.net/oscnet/up-fc6ebf5126370f72408ffe6a55cc9672b04.png" width="500" referrerpolicy="no-referrer"></p><p><span style="color:#000000">Zecento 以免费的形式面向大众提供；但为了盈利，作者还推出了一个功能更完善的付费计划。但这就是问题所在，只有极少数用户的选择了付费计划，从而导致开发者严重的入不敷出。</span></p><p><span style="color:#000000">面对这种情况，Steve 也与其他一些开发了 Chrome 扩展的开发者进行了沟通交流，结果发现大差不差：大家都有一个正在被使用的产品，但却没有任何赚钱的途径。</span></p><p><span style="color:#000000">为了改善自己的处境，Steve 在大概一周前新开发了一个库，提供了一个可以通过 API 向 Chrome 浏览器扩展开发者进行打赏的渠道。在此后的一周时间内，Steve 陆陆续续收到了 200 多美元的资助，「我觉得如果能将它开源用于其他 Chrome 浏览器扩展也会很酷。」</span></p><p><span style="color:#000000">在文章的最后，Steve 也提出了一个问题：在为你的 Chrome 扩展程序（或者任何其他没有稳定商业模式的有价值网站）实现盈利方面，你遇到的最大问题是什么？你认为这个产品可能存在哪些问题？</span></p><p><span style="color:#000000"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.reddit.com%2Fr%2Fprogramming%2Fcomments%2F16sq2jk%2Fi_spent_2_years_building_a_chrome_extension_lost%2F" target="_blank">Reddit </a>上针对这个帖子也进行了热烈的讨论。有网友指出，Zecento 是一个 Chrome 扩展程序，但作者发文所配的主图上却是 Firefox，「令人恼火」。「这也就解释了为什么他们损失了 1.5 万美元。」</span></p><p><span style="color:#000000">还有人提出疑问：这 1.5 万美元是怎么花的？市场上是否早就已经有同类型产品的存在？以及作者为什么不通过 affiliate links 促进用户购买来实现盈利？</span></p><p><span style="color:#000000">对此，作者则回复表示，自己做了很多愚蠢的决定：包括在意大利花了约 6000 美元注册了一家公司，还花费了 2000 美元的会计费用。并花费了 2000 美元找了一些有影响力的人进行推广，以及定制品牌 T 恤等推广消耗。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 28 Sep 2023 03:51:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/259832/spent-2-years-building-a-chrome-extension-lost-15k</guid>
            <link>https://www.oschina.net/news/259832/spent-2-years-building-a-chrome-extension-lost-15k</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[电力行业首个自主可控的大模型发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">南方电网人工智能科技有限公司负责研发的电力行业人工智能创新平台及自主可控电力大模型正式公开<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FWqir8vzxkVkDvwpTXtYKKQ" target="_blank">发布</a>。</span></p><p><span style="color:#000000">电力行业人工智能创新平台提供模型即服务（MaaS），支持模型快速迭代开发，并支撑电力人工智能资源面向全社会开放共享。百度提供了昆仑芯 AI 芯片、飞桨框架、开发套件等技术产品支持。</span></p><p><span style="color:#000000">电力大模型是电力行业人工智能创新平台首个产品，覆盖智能创作、设备巡检、电力调度等七大应用场景，也可应用于特定业务场景。其中，电力调度场景功能通过百度智能云千帆大模型平台，基于文心大模型打造。</span></p><p><span style="color:#000000">南方电网人工智能公司表示，将深度挖掘电网企业在电力人工智能领域的数据、场景、专业优势，同时将携手各方共同推进人工智能与能源电力行业深度融合，为数字时代经济体系优化升级和满足人民美好生活的电力需要做出更大贡献。</span></p><p><span style="color:#000000">发布会现场演示了「南网调度值班助手」，一个基于百度文心大模型打造的 AI 原生应用。根据介绍，电力调度值班助手遇到问题第一时间就能给出高质量解答，让员工不再需要投入大量时间去死记硬背常规内容。面对紧急情况，它可以秒级生成处置方案，及时响应 15 分钟电力市场调节要求。</span></p><p><span style="color:#000000"><img alt="" height="235" src="https://oscimg.oschina.net/oscnet/up-7f687c2312fb31fc129b37f1e57f71bcef3.jpg" width="700" referrerpolicy="no-referrer"></span></p><p><span style="color:#000000">而且，员工只需要说一句话，电力调度值班助手就可以把各种安全预警归类总结，整理地清清楚楚，自动生成工单和交接班日报，让管理和调度人员，能快速知晓全局态势。电力调度值班助手增强了应急响应能力，在应对突发事件的紧急情况时，可以快速响应，制定合理的调度策略，保障电力供应的稳定和安全。</span></p><p><span style="color:#000000">南方电网人工智能科技有限公司研发的电力行业人工智能创新平台，可面向内外部用户提供训练、微调、部署等服务，是算法模型的训练工厂，将有效降低电力企业获取大模型能力的门槛。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 28 Sep 2023 02:31:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/259815</guid>
            <link>https://www.oschina.net/news/259815</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Omnivore —— 稍后阅读应用程序]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Omnivore 是一款免费、开源、适合认真阅读的稍后阅读应用程序。不受干扰、注重隐私、开源，专为知识工作者和终身学习者而设计。适合喜欢阅读的人。</p><p>保存文章、新闻通讯和文档并稍后阅读，专注且无干扰。添加注释和亮点。按照你想要的方式整理你的阅读列表并在所有设备上同步。</p><p><img alt="" height="333" src="https://static.oschina.net/uploads/space/2023/0927/164637_a7IE_4252687.png" width="500" referrerpolicy="no-referrer"></p><p><strong>特点：</strong></p><ul><li>高亮显示、备注、搜索和共享</li><li>全键盘导航</li><li>在长文章中自动保存你的位置</li><li>通过电子邮件添加通讯文章（支持 substack）</li><li>支持 PDF</li><li>用 Node.js 和 TypeScript 编写的网络应用程序</li><li>Native iOS app</li><li>Android app (source)</li><li>面向 Android 用户的渐进式网络应用程序</li><li>适用于 Chrome、Safari、Firefox 和 Edge 的浏览器扩展</li><li>Labels (又称 tagging)</li><li>离线支持</li><li>文本转语音（仅限 iOS）</li><li>通过<span>&nbsp;</span><a href="https://github.com/omnivore-app/logseq-omnivore">Logseq Plugin</a>&nbsp;支持&nbsp;<a href="https://logseq.com/">Logseq</a></li><li>通过 <a href="https://github.com/omnivore-app/obsidian-omnivore">Obsidian Plugin</a>&nbsp;支持 <a href="https://obsidian.md/">Obsidian</a></li></ul><p><img height="337" src="https://static.oschina.net/uploads/space/2023/0927/164600_K6T2_4252687.png" width="500" referrerpolicy="no-referrer"></p></div>
                                                                ]]>
            </description>
            <pubDate>Thu, 28 Sep 2023 02:29:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/p/omnivore</guid>
            <link>https://www.oschina.net/p/omnivore</link>
        </item>
        <item>
            <title>
                <![CDATA[Gitee 推荐 | 基于 Vue 的大屏设计器 DataRoom]]>
            </title>
            <description>
                <![CDATA[<div align="center"><h1><a id="user-content-dataroom" class="anchor" href="https://gitee.com/gcpaas/DataRoom#dataroom"></a>DataRoom</h1><strong>简单、免费、开源的大屏设计器</strong></div><p align="center"><img alt="stars" src="https://gitee.com/gcpaas/DataRoom/badge/star.svg?theme=dark" referrerpolicy="no-referrer"><img alt="forks" src="https://gitee.com/gcpaas/DataRoom/badge/fork.svg?theme=dark" referrerpolicy="no-referrer"><img alt="GitHub license" src="https://img.shields.io/badge/license-Apache%20License%202.0-blue.svg" referrerpolicy="no-referrer"><img alt="Company" src="https://img.shields.io/badge/%E5%85%AC%E5%8F%B8-%E7%A7%91%E5%A4%A7%E5%9B%BD%E5%88%9B%E4%BA%91%E7%BD%91%E7%A7%91%E6%8A%80%E6%9C%89%E9%99%90%E5%85%AC%E5%8F%B8-blue.svg" referrerpolicy="no-referrer"><a href="https://gitee.com/link?target=http%3A%2F%2Fgcpaas.gccloud.com"><img src="https://img.shields.io/badge/%E9%A2%84%E8%A7%88-%E6%BC%94%E7%A4%BA%E7%8E%AF%E5%A2%83-yellow" alt="预览" referrerpolicy="no-referrer"></a></p>
🔥DataRoom 是一款基于 SpringBoot、MyBatisPlus、Vue、ElementUI、G2Plot、Echarts 等技术栈的大屏设计器，具备大屏设计、预览能力，支持 MySQL、Oracle、PostgreSQL、SQLServer、ElasticSearch、JSON、JS、HTTP、Groovy 等数据集接入，使用简单，完全免费，代码开源。<br><p><strong>最新版本</strong><img alt="npm" src="https://img.shields.io/npm/v/@gcpaas/data-room-ui" referrerpolicy="no-referrer"><img alt="Maven Central" src="https://img.shields.io/maven-central/v/com.gccloud/dataroom-core" referrerpolicy="no-referrer"></p><h2><a id="user-content-功能介绍" class="anchor" href="https://gitee.com/gcpaas/DataRoom#%E5%8A%9F%E8%83%BD%E4%BB%8B%E7%BB%8D"></a>功能介绍</h2><h3><a id="user-content-1-大屏管理" class="anchor" href="https://gitee.com/gcpaas/DataRoom#1-%E5%A4%A7%E5%B1%8F%E7%AE%A1%E7%90%86"></a>1. 大屏管理</h3><p>支持大屏【新增】、【编辑】、【设计】、【预览】、【复制】、【删除】操作</p><br><img src="https://gitee.com/gcpaas/DataRoom/raw/master/doc/images/%E5%A4%A7%E5%B1%8F%E7%AE%A1%E7%90%86.png" height="200" referrerpolicy="no-referrer"><h3><a id="user-content-2-设计器" class="anchor" href="https://gitee.com/gcpaas/DataRoom#2-%E8%AE%BE%E8%AE%A1%E5%99%A8"></a>2. 设计器</h3><p>采用拖拉拽可视化设计，支持 20+种图表组件、15 种边框组件、10 多种修饰组件</p><br><img src="https://gitee.com/gcpaas/DataRoom/raw/master/doc/images/%E8%AE%BE%E8%AE%A1%E5%99%A8.png" height="200" referrerpolicy="no-referrer"><h3><a id="user-content-3-资源库" class="anchor" href="https://gitee.com/gcpaas/DataRoom#3-%E8%B5%84%E6%BA%90%E5%BA%93"></a>3. 资源库</h3><p>支持资源自定义上传、在大屏设计器中直接引用资源，如：3D 图片、边框图片、装饰条、背景图</p><br><img alt="logo" src="https://gitee.com/gcpaas/DataRoom/raw/master/doc/images/%E8%B5%84%E6%BA%90%E5%BA%93.png" height="200" referrerpolicy="no-referrer"><h3><a id="user-content-4-数据源" class="anchor" href="https://gitee.com/gcpaas/DataRoom#4-%E6%95%B0%E6%8D%AE%E6%BA%90"></a>4. 数据源</h3><p>支持 MySQL、PostgreSQL、Oracle 、ClickHouse 数据库接入</p><br><img alt="logo" src="https://gitee.com/gcpaas/DataRoom/raw/master/doc/images/%E6%95%B0%E6%8D%AE%E6%BA%90.png" height="200" referrerpolicy="no-referrer"><h3><a id="user-content-5-数据集" class="anchor" href="https://gitee.com/gcpaas/DataRoom#5-%E6%95%B0%E6%8D%AE%E9%9B%86"></a>5. 数据集</h3><p>支持原始数据集、自助数据集、存储过程数据集、JSON 数据集、脚本数据集、JS 脚本数据集、HTTP 数据集多种方式接入数据</p><br><img alt="logo" src="https://gitee.com/gcpaas/DataRoom/raw/master/doc/images/%E6%95%B0%E6%8D%AE%E9%9B%86.png" height="200" referrerpolicy="no-referrer"><br><img alt="logo" src="https://gitee.com/gcpaas/DataRoom/raw/master/doc/images/%E6%95%B0%E6%8D%AE%E9%9B%862.png" height="200" referrerpolicy="no-referrer"><h2><a id="user-content-优势" class="anchor" href="https://gitee.com/gcpaas/DataRoom#%E4%BC%98%E5%8A%BF"></a>优势</h2><p>✅ 一站式大屏解决方案，从<span><strong>数据源接入</strong></span>-&gt;<span><strong>数据清洗处理</strong></span>-&gt;<span><strong>大屏设计</strong></span>-&gt;<span><strong>大屏预览</strong></span>-&gt;<span><strong>大屏发布上线</strong></span><br>
✅ 支持<span><strong>多种数据集接入</strong></span>，如：原始数据集、自助数据集 (支持多表关联)、存储过程、JSON(静态数据)、JS 脚本、Groovy 脚本、ElasticSearch、HTTP 接口，满足大多数数据接入需求<br>
✅ 支持大屏🔥<span><strong>独立部署</strong></span>，不对原有工程产生影响，适用于老项目<br>
✅ 支持大屏🔥<span><strong>嵌入式集成</strong></span>，引入依赖包即可，与项目无缝融合，无其他系统框架依赖，减少运维成本，适用于新项目<br>
✅ 支持🔥<span><strong>组件在线、离线开发</strong></span>，在线开发业务组件、离线开发系统组件，轻松解决图表不满足需求问题<br>
✅ 支持自定义接口权限、数据权限，轻松对接🔥<span><strong>Shiro、Security</strong></span>等认证框架，保证大屏数据安全<br></p><br><h2><a id="user-content-特性" class="anchor" href="https://gitee.com/gcpaas/DataRoom#%E7%89%B9%E6%80%A7"></a>特性</h2><table><thead><tr><th>特性</th><th align="left"></th></tr></thead><tbody><tr><td>支持大屏、设计、预览、导出图片</td><td align="left">✅</td></tr><tr><td>支持图层上下调整，支持置于顶层、置于底层</td><td align="left">✅</td></tr><tr><td>支持画布组件任意框选、组合、取消组合、锁定、批量删除、复制功能</td><td align="left">✅</td></tr><tr><td>支持多组件框选后对齐，如：左对齐、右对齐、上对齐、下对齐、中部对齐、水平均分、垂直均分</td><td align="left">✅</td></tr><tr><td>支持文本、超链接、时间选择器、输入框、按钮、Tab 标签、图片、轮播表、播放器、排名表、翻牌器、基础表格、倒计时、系统时间、外链集成、主题切换基础组件</td><td align="left">✅</td></tr><tr><td>支持折线图、柱状图、面积图、条形图、饼图、环图、水波图、仪表盘、进度条、词云图、雷达图、漏斗图、梯形图、中国地图、飞线图等图表组件</td><td align="left">✅</td></tr><tr><td>支持组件库，包含系统组件、业务组件、自定义组件，在线编辑器二次开发业务或自定义图表组件</td><td align="left">✅</td></tr><tr><td>支持图表数据定时刷新能力</td><td align="left">✅</td></tr><tr><td>支持 15 种边框组件，具备动画、渐变色设置</td><td align="left">✅</td></tr><tr><td>支持 10 多种修饰组件，具备动画、渐变色设置</td><td align="left">✅</td></tr><tr><td>支持资源库，包含 LOGO、3D 图标、2D 图标、修饰条、背景图等上百个大屏设计资源，资源支持自定义上传</td><td align="left">✅</td></tr><tr><td>支持多种数据源，目前支持 MySQL、PostgreSQL、Oracle、ClickHouse 数据库</td><td align="left">✅</td></tr><tr><td>支持多种数据集，目前支持原始数据集、自助数据集 (支持多表关联)、存储过程数据集、JSON 数据集 (静态数据)、JS 数据集、Groovy 脚本数据集、ElasticSearch 数据集、HTTP 数据集，接入不同数据来源</td><td align="left">✅</td></tr><tr><td>支持自定义接口权限、数据权限，可对接项目已有权限管理完成对大屏的安全管控</td><td align="left">✅</td></tr><tr><td>支持老项目外链集成、新项目依赖包集成</td><td align="left">✅</td></tr></tbody></table><br><h2><a id="user-content-快速开始" class="anchor" href="https://gitee.com/gcpaas/DataRoom#%E5%BF%AB%E9%80%9F%E5%BC%80%E5%A7%8B"></a>快速开始</h2><p>1️⃣ 如果你想源码启动体验，<a href="https://gitee.com/link?target=https%3A%2F%2Fwww.yuque.com%2Fchuinixiongkou%2Fbigscreen%2Fofy1bqhqgua1fu0f">请点击这里</a></p><p>2️⃣ 如果你想使用 Docker 启动体验 ，<a href="https://gitee.com/link?target=https%3A%2F%2Fwww.yuque.com%2Fchuinixiongkou%2Fbigscreen%2Fahhq3i7zxea46ox2">请点击这里</a></p><p>3️⃣ 如果你想将大屏集成到项目中，<a href="https://gitee.com/link?target=https%3A%2F%2Fwww.yuque.com%2Fchuinixiongkou%2Fbigscreen%2Fofy1bqhqgua1fu0f">请点击这里</a></p><p>4️⃣ 如果你想设计一个大屏，<a href="https://gitee.com/link?target=https%3A%2F%2Fwww.yuque.com%2Fchuinixiongkou%2Fbigscreen%2Fofy1bqhqgua1fu0f">请点击这里</a></p><p>5️⃣ 如果你想独立部署大屏，<a href="https://gitee.com/link?target=https%3A%2F%2Fwww.yuque.com%2Fchuinixiongkou%2Fbigscreen%2Fxd78cw7t12q7kfbl%23gGrS2">请点击这里</a></p><br><h2><a id="user-content-演示环境" class="anchor" href="https://gitee.com/gcpaas/DataRoom#%E6%BC%94%E7%A4%BA%E7%8E%AF%E5%A2%83"></a>演示环境</h2><p>演示环境会不定时进行更新  <a href="https://gitee.com/link?target=http%3A%2F%2Fgcpaas.gccloud.com%2FbigScreen" target="_blank">点击立即体验</a><span><strong>（请不要在演示环境中放入生产数据）</strong></span></p><br><h2><a id="user-content-常见问题" class="anchor" href="https://gitee.com/gcpaas/DataRoom#%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98"></a>常见问题</h2><p>⚠️&nbsp;&nbsp;<a href="https://gitee.com/link?target=https%3A%2F%2Fwww.yuque.com%2Fchuinixiongkou%2Fbigscreen%2Findex">使用手册、二次开发、部署手册、常见问题</a><br>
⚠️&nbsp;&nbsp;<a href="https://gitee.com/gcpaas/DataRoom">(码云仓库</a><br>
⚠️&nbsp;&nbsp;<a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fgcpaas%2FDataRoom">GitHub 仓库</a><br></p><h2><a id="user-content-生态插件" class="anchor" href="https://gitee.com/gcpaas/DataRoom#%E7%94%9F%E6%80%81%E6%8F%92%E4%BB%B6"></a>生态插件</h2><table><thead><tr><th>组件</th><th>地址</th></tr></thead><tbody><tr><td>大屏设计器</td><td><a href="https://gitee.com/gcpaas/DataRoom">码云</a>、<a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fgcpaas%2FDataRoom">GitHub</a></td></tr><tr><td>仪表盘设计器</td><td><a href="https://gitee.com/gcpaas/DashBoard">码云</a>、<a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fgcpaas%2FDashBoard">GitHub</a></td></tr><tr><td>数据集</td><td><a href="https://gitee.com/gcpaas/dataset">码云</a>、<a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fgcpaas%2Fdataset">GitHub</a></td></tr></tbody></table><br><h2><a id="user-content-联系我们" class="anchor" href="https://gitee.com/gcpaas/DataRoom#%E8%81%94%E7%B3%BB%E6%88%91%E4%BB%AC"></a>联系我们</h2><p><img alt="logo" width="200" src="https://gitee.com/gcpaas/DataRoom/raw/master/doc/images/qq.png" referrerpolicy="no-referrer"></p><h2><a id="user-content-许可证" class="anchor" href="https://gitee.com/gcpaas/DataRoom#%E8%AE%B8%E5%8F%AF%E8%AF%81"></a>许可证</h2><p>Apache License 2.0</p>]]>
            </description>
            <pubDate>Thu, 28 Sep 2023 02:21:00 GMT</pubDate>
            <guid isPermaLink="false">https://gitee.com/gcpaas/DataRoom</guid>
            <link>https://gitee.com/gcpaas/DataRoom</link>
        </item>
        <item>
            <title>
                <![CDATA[每日一博 | 揭秘编码器与解码器语言模型]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="rich_media_content js_underline_content
                       defaultNoSetting
            " id="js_content"><section style="margin-left: 8px;margin-right: 8px;"><img class="rich_pages wxw-img" data-backh="461" data-backw="578" data-ratio="0.7972222222222223" src="https://oscimg.oschina.net/oscnet/7052e54b-97a3-4169-b237-d3d5dccd698d.png" data-w="1080" style="letter-spacing: 0.578px;text-wrap: wrap;width: 100%;height: auto;" referrerpolicy="no-referrer"></section><section style="margin-bottom: 0px;text-wrap: wrap;"><section style="outline: 0px;background-color: rgb(25, 25, 25);visibility: visible;"><section data-darkmode-bgcolor-16221004879619="rgb(25, 25, 25)" data-darkmode-original-bgcolor-16221004879619="#fff|rgb(255, 255, 255)" data-style="max-width: 100%; background-color: rgb(255, 255, 255); letter-spacing: 0.544px; font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; visibility: visible; box-sizing: border-box !important; overflow-wrap: break-word !important; color: rgb(163, 163, 163) !important;" class="js_darkmode__0" data-darkmode-bgcolor-16339314364542="rgb(25, 25, 25)" data-darkmode-original-bgcolor-16339314364542="#fff|rgb(255, 255, 255)" data-darkmode-color-16339314364542="rgb(163, 163, 163)" data-darkmode-original-color-16339314364542="#fff|rgb(163, 163, 163)" style="outline: 0px;background-color: rgb(255, 255, 255);visibility: visible;"><section data-darkmode-bgcolor-16221004879619="rgb(25, 25, 25)" data-darkmode-original-bgcolor-16221004879619="#fff|rgb(255, 255, 255)" data-darkmode-bgcolor-16339314364542="rgb(25, 25, 25)" data-darkmode-original-bgcolor-16339314364542="#fff|rgb(255, 255, 255)" data-darkmode-color-16339314364542="rgb(163, 163, 163)" data-darkmode-original-color-16339314364542="#fff|rgb(163, 163, 163)" style="outline: 0px;visibility: visible;"><section data-darkmode-bgcolor-16221004879619="rgb(25, 25, 25)" data-darkmode-original-bgcolor-16221004879619="#fff|rgb(255, 255, 255)" data-darkmode-bgcolor-16339314364542="rgb(25, 25, 25)" data-darkmode-original-bgcolor-16339314364542="#fff|rgb(255, 255, 255)" data-darkmode-color-16339314364542="rgb(163, 163, 163)" data-darkmode-original-color-16339314364542="#fff|rgb(163, 163, 163)" style="outline: 0px;visibility: visible;"><section data-darkmode-bgcolor-16221004879619="rgb(25, 25, 25)" data-darkmode-original-bgcolor-16221004879619="#fff|rgb(255, 255, 255)" data-darkmode-bgcolor-16339314364542="rgb(25, 25, 25)" data-darkmode-original-bgcolor-16339314364542="#fff|rgb(255, 255, 255)" data-darkmode-color-16339314364542="rgb(163, 163, 163)" data-darkmode-original-color-16339314364542="#fff|rgb(163, 163, 163)" style="outline: 0px;visibility: visible;"><section data-darkmode-bgcolor-16221004879619="rgb(25, 25, 25)" data-darkmode-original-bgcolor-16221004879619="#fff|rgb(255, 255, 255)" data-darkmode-bgcolor-16339314364542="rgb(25, 25, 25)" data-darkmode-original-bgcolor-16339314364542="#fff|rgb(255, 255, 255)" data-darkmode-color-16339314364542="rgb(163, 163, 163)" data-darkmode-original-color-16339314364542="#fff|rgb(163, 163, 163)" style="outline: 0px;visibility: visible;"><section data-darkmode-bgcolor-16221004879619="rgb(25, 25, 25)" data-darkmode-original-bgcolor-16221004879619="#fff|rgb(255, 255, 255)" data-darkmode-bgcolor-16339314364542="rgb(25, 25, 25)" data-darkmode-original-bgcolor-16339314364542="#fff|rgb(255, 255, 255)" data-darkmode-color-16339314364542="rgb(163, 163, 163)" data-darkmode-original-color-16339314364542="#fff|rgb(163, 163, 163)" style="outline: 0px;visibility: visible;"><section data-darkmode-bgcolor-16221004879619="rgb(25, 25, 25)" data-darkmode-original-bgcolor-16221004879619="#fff|rgb(255, 255, 255)" data-darkmode-bgcolor-16339314364542="rgb(25, 25, 25)" data-darkmode-original-bgcolor-16339314364542="#fff|rgb(255, 255, 255)" data-darkmode-color-16339314364542="rgb(163, 163, 163)" data-darkmode-original-color-16339314364542="#fff|rgb(163, 163, 163)" style="outline: 0px;visibility: visible;"><section data-darkmode-bgcolor-16221004879619="rgb(25, 25, 25)" data-darkmode-original-bgcolor-16221004879619="#fff|rgb(255, 255, 255)" data-darkmode-bgcolor-16339314364542="rgb(25, 25, 25)" data-darkmode-original-bgcolor-16339314364542="#fff|rgb(255, 255, 255)" data-darkmode-color-16339314364542="rgb(163, 163, 163)" data-darkmode-original-color-16339314364542="#fff|rgb(163, 163, 163)" style="outline: 0px;visibility: visible;"><section style="margin-right: 8px;margin-left: 8px;outline: 0px;visibility: visible;line-height: 1.75em;"><section data-darkmode-bgcolor-16221004879619="rgb(41, 41, 41)" data-darkmode-original-bgcolor-16221004879619="#fff|rgb(255, 255, 255)|rgb(239, 239, 239)" data-darkmode-color-16221004879619="rgb(168, 168, 168)" data-darkmode-original-color-16221004879619="#fff|rgb(62, 62, 62)" data-style="padding: 10px; max-width: 100%; background-color: rgb(239, 239, 239); color: rgb(62, 62, 62); line-height: 25.6px; display: inline-block; width: 670px; border-width: 2px; border-style: dashed; border-color: transparent; visibility: visible; box-sizing: border-box !important; overflow-wrap: break-word !important;" class="js_darkmode__1" data-darkmode-bgcolor-16339314364542="rgb(41, 41, 41)" data-darkmode-original-bgcolor-16339314364542="#fff|rgb(255, 255, 255)|rgb(239, 239, 239)" data-darkmode-color-16339314364542="rgb(168, 168, 168)" data-darkmode-original-color-16339314364542="#fff|rgb(163, 163, 163)|rgb(62, 62, 62)" style="padding: 10px;outline: 0px;background-color: rgb(239, 239, 239);line-height: 25.6px;display: inline-block;width: 670px;border-width: 2px;border-style: dashed;border-color: transparent;visibility: visible;"><section data-darkmode-bgcolor-16221004879619="rgb(41, 41, 41)" data-darkmode-original-bgcolor-16221004879619="#fff|rgb(255, 255, 255)|rgb(239, 239, 239)" data-darkmode-color-16221004879619="rgb(168, 168, 168)" data-darkmode-original-color-16221004879619="#fff|rgb(62, 62, 62)" data-darkmode-bgcolor-16339314364542="rgb(41, 41, 41)" data-darkmode-original-bgcolor-16339314364542="#fff|rgb(255, 255, 255)|rgb(239, 239, 239)" data-darkmode-color-16339314364542="rgb(168, 168, 168)" data-darkmode-original-color-16339314364542="#fff|rgb(163, 163, 163)|rgb(62, 62, 62)" style="outline: 0px;visibility: visible;"><section data-darkmode-bgcolor-16221004879619="rgb(41, 41, 41)" data-darkmode-original-bgcolor-16221004879619="#fff|rgb(255, 255, 255)|rgb(239, 239, 239)" data-darkmode-color-16221004879619="rgb(168, 168, 168)" data-darkmode-original-color-16221004879619="#fff|rgb(62, 62, 62)" data-darkmode-bgcolor-16339314364542="rgb(41, 41, 41)" data-darkmode-original-bgcolor-16339314364542="#fff|rgb(255, 255, 255)|rgb(239, 239, 239)" data-darkmode-color-16339314364542="rgb(168, 168, 168)" data-darkmode-original-color-16339314364542="#fff|rgb(163, 163, 163)|rgb(62, 62, 62)" style="outline: 0px;visibility: visible;"><p style="letter-spacing: 0.578px;"><span style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 16px;letter-spacing: 1px;"><span style="font-size: 16px;letter-spacing: 1px;text-wrap: wrap;background-color: rgb(239, 239, 239);">Transformer 架构的问世</span><span style="font-size: 16px;letter-spacing: 1px;text-wrap: wrap;background-color: rgb(239, 239, 239);">标志着现代语言大模型时代的开启。</span><span style="font-size: 16px;letter-spacing: 1px;text-wrap: wrap;background-color: rgb(239, 239, 239);">自 2018 年以来，<a target="_blank" href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzU5ODY2MTk3Nw%3D%3D%26mid%3D2247491825%26idx%3D1%26sn%3D6b7494f1a24520f5e76fbca4b739e199%26chksm%3Dfe426ec7c935e7d10925628ee95207e9cd7e4c61b36c176d1e1dbb89bc1c79f1729dde095301%26scene%3D21%23wechat_redirect" textvalue="各类语言大模型层出不穷" linktype="text" imgurl="" imgdata="null" data-itemshowtype="0" tab="innerlink" data-linktype="2"><strong>各类语言大模型层出不穷</strong></a>。</span></span></p><p style="letter-spacing: 0.578px;"><span style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 16px;letter-spacing: 1px;"><br></span></p><p style="letter-spacing: 0.578px;"><span style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 16px;letter-spacing: 1px;">通过 LLM 进化树（<span style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 16px;letter-spacing: 1px;color: rgb(136, 136, 136);"><em><span style="font-size: 16px;letter-spacing: 1px;text-wrap: wrap;background-color: rgb(239, 239, 239);">github.com/Mooler0410/LLMsPracticalGuide</span></em></span>）来看<span style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;text-wrap: wrap;background-color: rgb(239, 239, 239);font-size: 16px;letter-spacing: 1px;">，这些语言模型主要分为三类：一是「仅编码器」，该类语言模型擅长文本理解，因为它们允许信息在文本的两个方向上流动；二是「仅解码器」，该类语言模型擅长文本生成，因为信息只能从文本的左侧向右侧流动，并以自回归方式有效生成新词汇；三「编码器-解码器」组，该类语言模型对上述两种模型进行了结合，用于完成需要理解输入并生成输出的任务，例如翻译。</span></span></p><span style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 16px;letter-spacing: 1px;"></span><p><br></p><p style="letter-spacing: 0.578px;"><span style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 16px;letter-spacing: 1px;">本文作者 Sebastian Raschka 对这三类语言模型的工作原理进行了详细解读。他是人工智能平台 Lightning AI 的 LLM 研究员，也是《<span style="font-size: 16px;letter-spacing: 1px;text-wrap: wrap;background-color: rgb(239, 239, 239);">Machine Learning Q an</span><span style="font-size: 16px;letter-spacing: 1px;text-wrap: wrap;background-color: rgb(239, 239, 239);">d AI》的作者。</span></span></p><p style="letter-spacing: 0.578px;"><span style="letter-spacing: 0.578px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: var(--articleFontsize);"><br></span></p><p style="letter-spacing: 0.578px;text-align: left;"><span style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;text-align: justify;font-size: 16px;letter-spacing: 1px;"><span style="text-align: left;">（以下内容由 OneFlow 编译发布，转载请联系授权。</span></span><span style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 16px;letter-spacing: 1px;">原文</span><span style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 16px;letter-spacing: 1px;">：https://magazine.sebastianraschka.com/p/understanding-encoder-and-decoder)</span><span style="font-size: 16px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;"></span></p></section></section></section></section></section></section></section></section></section></section></section></section></section></section><p><br></p><p ql-global-para="true" line="7sj5" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><span style="outline: 0px;color: rgb(63, 63, 63);"><strong style="outline: 0px;"><span style="outline: 0px;font-size: 16px;letter-spacing: 2px;">来源 | Ahead of AI</span></strong></span></p><p ql-global-para="true" line="Zq0W" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><span style="outline: 0px;color: rgb(63, 63, 63);"><strong style="outline: 0px;"><span style="outline: 0px;font-size: 16px;letter-spacing: 2px;">OneFlow 编译</span></strong></span></p><p ql-global-para="true" line="KqmY" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><span style="outline: 0px;color: rgb(63, 63, 63);"><strong style="outline: 0px;"><span style="outline: 0px;font-size: 16px;letter-spacing: 2px;">翻译｜杨婷、宛子琳</span></strong></span></p><p ql-global-para="true" line="KqmY" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><br></p><p ql-global-para="true" line="KqmY" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><span style="font-size: 16px;letter-spacing: 2px;">有人希望我能深入介绍一下语言大模型（LLM）的相关术语，并解释我们现在认为理所当然的一些技术性更强的术语，包括「编码器式」和「解码器式」LLM 等。这些术语是什么意思？</span></p><p ql-global-para="true" line="KqmY" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><span style="font-size: 16px;letter-spacing: 2px;"><br></span></p><p ql-global-para="true" line="KqmY" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><span style="font-size: 16px;letter-spacing: 2px;">编码器和解码器架构基本上都使用了相同的自注意力层对单词词元（token）进行编码，然而，不同的是：编码器被设计为学习可以用于各种预测建模任务（如分类）的嵌入；解码器被设计用于生成新的文本，例如回答用户的查询等。</span></p><p style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);text-align: center;line-height: 1.6em;"><br></p><span id="OSC_h2_1"></span><h2 style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);text-align: center;line-height: 1.6em;"><p style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);text-align: center;line-height: 1.6em;"><strong style="outline: 0px;"><span style="outline: 0px;letter-spacing: 2px;font-size: 24px;color: rgb(246, 171, 0);">1</span></strong></p><p style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);text-align: center;line-height: 1.6em;"><span style="font-size: 17px;color: rgb(30, 35, 128);"><strong style="outline: 0px;"><span style="outline: 0px;letter-spacing: 2px;">原始 Transformer</span></strong></span></p></h2><p ql-global-para="true" line="gFkG" ql-global="true" style="line-height: 100%;margin-bottom: 0pt;margin-top: 0pt;font-size: 11pt;color: #494949;">&nbsp;</p><p ql-global-para="true" line="V6BC" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><span style="outline: 0px;letter-spacing: 2px;font-size: 16px;">原始 Transformer 架构（"Attention Is All You Need"，2017 年）是为英法和英德语言翻译而开发的，它同时使用了编码器和解码器，如下图所示。</span></p><p ql-global-para="true" line="V6BC" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><br></p><section style="line-height: 100%;margin: 0pt 8px;font-size: 11pt;color: rgb(73, 73, 73);"><img class="rich_pages wxw-img" data-backh="594" data-backw="578" data-ratio="1.026851851851852" src="https://oscimg.oschina.net/oscnet/30371c43-cd3c-460e-89a2-b8950862e798.png" data-type="png" data-w="1080" height="auto" style="width: 100%;height: auto;" width="1422" referrerpolicy="no-referrer"></section><p ql-global-para="true" line="KqmY" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><br></p><section style="margin-bottom: 0px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;margin-left: 8px;margin-right: 8px;"><span style="outline: 0px;letter-spacing: 2px;font-size: 16px;">上图中，输入文本（即要翻译的句子）首先被分词为单独的单词词元，然后通过嵌入层对这些词元进行编码，完成后进入编码器部分。接下来，在每个嵌入的单词上添加位置编码向量，之后，这些嵌入会通过多头自注意力层。多头注意力层之后会进行残差与层归一化（Add &amp; normalize），它进行了一层标准化操作，并通过跳跃连接（skip connection，也称为残差连接或快捷连接）添加原始嵌入。最后，进入「全连接层」（它是由两个全连接层（全连接层之间有一个非线性激活函数）组成的小型多层感知器）之后，输出会被再次"<span style="font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 16px;letter-spacing: 2px;text-wrap: wrap;background-color: rgb(255, 255, 255);">残差与层归一化</span>"，然后再将输出传递到解码器模块的多头自注意力层。</span></section><section style="margin-bottom: 0px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;margin-left: 8px;margin-right: 8px;"><span style="font-size: 16px;letter-spacing: 2px;"><br></span></section><section style="margin-bottom: 0px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;margin-left: 8px;margin-right: 8px;"><span style="font-size: 16px;letter-spacing: 2px;">上图的解码器部分与编码器部分的整体结构十分相似，关键区别是它们的输入和输出内容。编码器要接收进行翻译的输入文本，而解码器则负责生成翻译后的文本。</span></section><p ql-global-para="true" line="KqmY" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);text-align: center;line-height: 1.6em;"><br></p><span id="OSC_h2_2"></span><h2 style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);text-align: center;line-height: 1.6em;"><p style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);text-align: center;line-height: 1.6em;"><strong style="outline: 0px;"><span style="outline: 0px;letter-spacing: 2px;font-size: 24px;color: rgb(246, 171, 0);">2</span></strong></p><p style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);text-align: center;line-height: 1.6em;"><span style="color: rgb(30, 35, 128);font-size: 17px;"><strong style="outline: 0px;"><span style="outline: 0px;letter-spacing: 2px;">编码器</span></strong></span></p></h2><p ql-global-para="true" line="wHxM" ql-global="true" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><span style="outline: 0px;letter-spacing: 2px;color: rgb(30, 35, 128);font-size: 17px;">&nbsp;</span></p><p ql-global-para="true" line="Ih2s" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;text-align: justify;"><span style="outline: 0px;letter-spacing: 2px;font-size: 16px;">上图展示的原始 Transformer 架构中的编码器部分负责理解和提取输入文本中的相关信息，它输出的是输入文本的一个连续表示（嵌入），然后将其传递给解码器。最终，解码器根据从编码器接收到的连续表示生成翻译后的文本（目标语言）。</span></p><p ql-global-para="true" line="EiXb" ql-global="true" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;text-align: justify;"><span style="outline: 0px;letter-spacing: 2px;font-size: 16px;">&nbsp;</span></p><p ql-global-para="true" line="WF2B" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;text-align: justify;"><span style="outline: 0px;letter-spacing: 2px;font-size: 16px;">多年来，基于原始 Transformer 模型中的编码器模块开发了多种仅编码器架构。其中两个最具代表性的例子是 BERT（ </span><span style="outline: 0px;letter-spacing: 2px;font-size: 16px;">用于语言理解的深度双向 Transformer 预训练 2018</span><span style="outline: 0px;letter-spacing: 2px;font-size: 16px;">）和 RoBERTa（</span><span style="outline: 0px;letter-spacing: 2px;font-size: 16px;">鲁棒优化的 BERT 预训练方法，2018</span><span style="outline: 0px;letter-spacing: 2px;font-size: 16px;">）。</span></p><p ql-global-para="true" line="7kNX" ql-global="true" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;text-align: justify;"><span style="outline: 0px;letter-spacing: 2px;font-size: 16px;">&nbsp;</span></p><p ql-global-para="true" line="dTUz" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;text-align: left;"><span style="outline: 0px;letter-spacing: 2px;font-size: 16px;">BERT（Bidirectional Encoder Representations from Transformers）是一种基于 Transformer 编码器模块的仅编码器架构，它使用掩码语言建模（如下图所示）和下一个句子预测任务，在大型文本语料库上进行预训练。</span></p><p ql-global-para="true" line="dTUz" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;text-align: center;"><br></p><section style="line-height: 100%;margin: 0pt 8px;font-size: 11pt;color: rgb(73, 73, 73);text-align: center;"><img class="rich_pages wxw-img" data-backh="340" data-backw="562" data-ratio="0.6046296296296296" src="https://oscimg.oschina.net/oscnet/9181fed3-ebd9-4431-910a-6876353bfdd0.png" data-type="png" data-w="1080" height="auto" style="width: 100%;height: auto;" width="1456" referrerpolicy="no-referrer"><em><span style="font-size: 12px;text-align: center;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.034em;color: rgb(136, 136, 136);">BERT 式 Transformer 中使用的掩码语言建模预训练目标图示。</span></em></section><p ql-global-para="true" line="KqmY" style="line-height: 100%;margin-bottom: 0pt;margin-top: 0pt;font-size: 11pt;color: rgb(73, 73, 73);text-align: center;"><br></p><p ql-global-para="true" line="KqmY" style="line-height: 100%;margin-bottom: 0pt;margin-top: 0pt;font-size: 11pt;color: #494949;"><br></p><p ql-global-para="true" line="v1Tx" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><span style="font-size: 16px;outline: 0px;letter-spacing: 2px;">掩码语言建模的主要思路是在输入序列中随机掩码（或替换）一些单词词元，并训练模型根据上下文来预测原始的掩码词元。</span></p><p ql-global-para="true" line="bVfy" ql-global="true" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><span style="font-size: 16px;outline: 0px;letter-spacing: 2px;">&nbsp;</span></p><p ql-global-para="true" line="WFlZ" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><span style="font-size: 16px;outline: 0px;letter-spacing: 2px;">除上图所示的掩码语言建模预训练任务之外，下一个句子预测任务要求模型去预测两个随机排列的句子在原始文档中的语句顺序是否正确。例如，两个用[SEP]标记分隔开的随机句子：</span></p><p ql-global-para="true" line="WFlZ" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><span style="font-size: 16px;letter-spacing: 2px;"></span><br></p><ul class="list-paddingleft-1" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><li style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><p style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><span style="outline: 0px;letter-spacing: 2px;">[CLS] Toast is a simple yet delicious food [SEP] It’s often served with butter, jam, or honey.</span></p></li><li style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><p style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><span style="outline: 0px;letter-spacing: 2px;">[CLS] It’s often served with butter, jam, or honey. [SEP] Toast is a simple yet delicious food.</span></p></li></ul><p ql-global-para="true" line="XE3v" ql-global="true" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><span style="outline: 0px;letter-spacing: 2px;">&nbsp;</span></p><p ql-global-para="true" line="YIyR" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><span style="font-size: 16px;outline: 0px;letter-spacing: 2px;">其中，[CLS]词元是模型的占位符，提示模型返回一个 True 或 False 标签，用来表示句子顺序是否正确。</span></p><p ql-global-para="true" line="32qe" ql-global="true" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><span style="font-size: 16px;outline: 0px;letter-spacing: 2px;">&nbsp;</span></p><p ql-global-para="true" line="G4mq" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><span style="font-size: 16px;outline: 0px;letter-spacing: 2px;">掩码语言和下一个句子预训练目标使得 BERT 可以大量学习输入文本的上下文表示，然后可以针对各种下游任务（如情感分析、问答和命名实体识别）对这些表示进行微调。</span></p><p ql-global-para="true" line="53Rw" ql-global="true" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><span style="font-size: 16px;outline: 0px;letter-spacing: 2px;">&nbsp;</span></p><p ql-global-para="true" line="qq5c" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><span style="font-size: 16px;outline: 0px;letter-spacing: 2px;">RoBERTa（Robustly optimized BERT approach）是 BERT 的优化版本。它与 BERT 保持了相同的整体架构，但进行了一些训练和优化改进，例如更大的 batch 尺寸，更多的训练数据，并去除了下一个句子预测任务。这些改进使得 RoBERTa 拥有更好的性能，相比 BERT，RoBERTa 能更好地处理各种自然语言理解任务。</span></p><p ql-global-para="true" line="KqmY" style="line-height: 100%;margin-bottom: 0pt;margin-top: 0pt;font-size: 11pt;color: #494949;"><br></p><span id="OSC_h2_3"></span><h2 style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);text-align: center;line-height: 1.6em;"><p style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);text-align: center;line-height: 1.6em;"><strong inline-dir="ltr" ql-global="true" style="font-size: 12pt;"><strong style="outline: 0px;"><span style="outline: 0px;letter-spacing: 2px;font-size: 24px;color: rgb(246, 171, 0);">3</span></strong></strong></p><p style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);text-align: center;line-height: 1.6em;"><span style="font-size: 17px;"><strong inline-dir="ltr" ql-global="true" style="font-size: 12pt;"><span style="font-size: 17px;color: rgb(30, 35, 128);"><strong style="outline: 0px;"><span style="font-size: 17px;outline: 0px;letter-spacing: 2px;">解码器</span></strong></span></strong></span></p></h2><p ql-global-para="true" line="ssPl" ql-global="true" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><strong inline-dir="ltr" ql-global="true" style="font-size: 12pt;"><span style="font-size: 16px;outline: 0px;letter-spacing: 2px;">&nbsp;</span></strong></p><p ql-global-para="true" line="ggKv" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><span style="outline: 0px;letter-spacing: 2px;font-size: 16px;">回到本节开头的原始 Transformer 架构，解码器中的多头自注意机制与编码器中的类似，但经过掩码处理，以防模型关注到未来位置，确保对位置 i 的预测仅基于已知的小于 i 的输出位置。下图为解码器逐词生成输出的过程。</span></p><p ql-global-para="true" line="ggKv" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><span style="font-size: 16px;letter-spacing: 2px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;"></span><br></p><section style="line-height: 100%;margin: 0pt 8px;font-size: 11pt;color: rgb(73, 73, 73);"><img class="rich_pages wxw-img" data-backh="508" data-backw="578" data-ratio="0.8796296296296297" src="https://oscimg.oschina.net/oscnet/4cb53146-0bdd-4ab8-b165-bf38c2119643.png" data-type="png" data-w="1080" height="auto" style="width: 100%;height: auto;" width="1162" referrerpolicy="no-referrer"></section><p ql-global-para="true" line="ByIX" style="text-align:center;line-height: 100%;margin-bottom: 0pt;margin-top: 0pt;font-size: 11pt;color: #494949;"><span style="color: rgb(136, 136, 136);"><em><span style="font-size: 12px;">原始 Transformer 中的下一个句子预测任务示意图。</span></em></span><strong inline-dir="ltr" ql-global="true" style="text-align: justify;letter-spacing: 0.034em;font-size: 12pt;"></strong></p><p ql-global-para="true" line="LD42" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><strong inline-dir="ltr" ql-global="true" style="font-size: 12pt;"><br></strong></p><p ql-global-para="true" line="LD42" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><span style="font-size: 16px;outline: 0px;letter-spacing: 2px;">这种掩码操作（在上图中可明确看到，但实际上在解码器的多头自注意机制内部发生）对于在训练和推理过程中保持 Transformer 模型的自回归特性至关重要。自回归特性能确保模型逐个生成输出词元，并使用先前生成的词元作为上下文，以生成下一个词元。</span></p><p ql-global-para="true" line="6Phy" ql-global="true" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><span style="font-size: 16px;outline: 0px;letter-spacing: 2px;">&nbsp;</span></p><p ql-global-para="true" line="VuCc" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><span style="font-size: 16px;outline: 0px;letter-spacing: 2px;">多年来，研究人员在原始编码器-解码器 Transformer 架构的基础上进行扩展，开发出了几种仅解码器模型，这些模型能高效处理各种自然语言任务，其中最著名的是 GPT（Generative Pre-trained Transformer）系列模型。</span></p><p ql-global-para="true" line="KShm" ql-global="true" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><span style="font-size: 16px;outline: 0px;letter-spacing: 2px;">&nbsp;</span></p><p ql-global-para="true" line="mTt2" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><span style="font-size: 16px;outline: 0px;letter-spacing: 2px;">GPT 系列模型为仅解码器模型，它们在大规模无监督文本数据上进行预训练，然后针对特定任务进行微调，如文本分类、情感分析、问答和摘要生成等。GPT 模型包括 GPT-2、GPT-3（GPT-3 于 2020 年发布，具备少样本学习能力）以及最新的 GPT-4，这些模型在各种基准测试中展现出了卓越性能，是目前最受欢迎的自然语言处理架构。</span></p><p ql-global-para="true" line="mTt2" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><span style="font-size: 16px;letter-spacing: 2px;color: rgba(0, 0, 0, 0.9);"><br></span></p><p ql-global-para="true" line="mTt2" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><span style="font-size: 16px;letter-spacing: 2px;color: rgba(0, 0, 0, 0.9);">GPT 模型最引人注目的特性之一是涌现特性。涌现特性指的是模型在下一个词预测的预训练中发展出来的能力和技能。尽管这些模型只是被训练预测下一个词，但预训练后的模型却能够执行各种任务，如文本摘要生成、翻译、问答和分类等。此外，这些模型可通过上下文学习来完成新任务，而无需更新模型参数。</span></p><p ql-global-para="true" line="KqmY" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);text-align: center;line-height: 1.6em;"><br></p><p style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);text-align: center;line-height: 1.6em;"><strong inline-dir="ltr" ql-global="true" style="font-size: 12pt;"><strong style="outline: 0px;"><span style="outline: 0px;letter-spacing: 2px;font-size: 24px;color: rgb(246, 171, 0);">4</span></strong></strong></p><p style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);text-align: center;line-height: 1.6em;"><strong inline-dir="ltr" ql-global="true" style="font-size: 12pt;"><span style="font-size: 17px;color: rgb(30, 35, 128);"><strong style="outline: 0px;"><span style="font-size: 17px;outline: 0px;letter-spacing: 2px;">编码器-解码器混合模型</span></strong></span></strong></p><p ql-global-para="true" line="KqmY" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);text-align: center;line-height: 1.6em;"><br></p><ul class="list-paddingleft-1" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><li style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><p style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;text-align: left;"><span style="font-size: 16px;outline: 0px;letter-spacing: 2px;">BART (</span><span style="font-size: 16px;outline: 0px;letter-spacing: 2px;">Denoising Sequence-to-Sequence Pre-training for Natural Language Generation, Translation, and Comprehension, 2019</span><span style="font-size: 16px;outline: 0px;letter-spacing: 2px;">)</span></p></li><li style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><p style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;text-align: left;"><span style="font-size: 16px;outline: 0px;letter-spacing: 2px;">and T5 (</span><span style="font-size: 16px;outline: 0px;letter-spacing: 2px;">Exploring the Limits of Transfer Learning with a Unified Text-to-Text Transformer, 2019</span><span style="font-size: 16px;outline: 0px;letter-spacing: 2px;">).</span></p></li></ul><p ql-global-para="true" line="9kOd" ql-global="true" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><span style="font-size: 16px;outline: 0px;letter-spacing: 2px;">&nbsp;</span></p><p ql-global-para="true" line="o411" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><span style="font-size: 16px;outline: 0px;letter-spacing: 2px;">除传统的编码器和解码器架构之外，新型编码器-解码器模型的发展取得了重大突破，充分发挥了编码器和解码器模型的优势。这些模型融合了新颖技术、预训练目标或架构修改，以提高在各种自然语言处理任务中的性能表现。下面是一些值得关注的新型编码器-解码器模型：</span></p><p ql-global-para="true" line="brLj" ql-global="true" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><span style="font-size: 16px;outline: 0px;letter-spacing: 2px;">&nbsp;</span></p><ul class="list-paddingleft-1" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><li style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><p style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><span style="font-size: 16px;outline: 0px;letter-spacing: 2px;">BART（用于自然语言生成、翻译和理解的去噪序列到序列预训练模型，2019 年发布）</span></p></li></ul><p ql-global-para="true" line="uBa7" ql-global="true" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><span style="font-size: 16px;outline: 0px;letter-spacing: 2px;">&nbsp;</span></p><ul class="list-paddingleft-1" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><li style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><p style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><span style="font-size: 16px;outline: 0px;letter-spacing: 2px;">T5（通过统一的文本到文本 Transformer 来探索迁移学习的极限，2019 年发布）。</span></p></li></ul><p ql-global-para="true" line="3BS0" ql-global="true" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><span style="font-size: 16px;outline: 0px;letter-spacing: 2px;">&nbsp;</span></p><p ql-global-para="true" line="1jaN" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><span style="font-size: 16px;outline: 0px;letter-spacing: 2px;">编码器-解码器模型通常用于自然语言处理，这些任务涉及理解输入序列并生成相应的输出序列。这些序列往往具有不同的长度和结构。这种模型在需要复杂映射以及捕捉输入序列和输出序列之间的元素关系的任务中表现出色。编码器-解码器模型常用于文本翻译和摘要生成等任务。</span></p><p ql-global-para="true" line="1jaN" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><br></p><span id="OSC_h2_4"></span><h2 style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);text-align: center;line-height: 1.6em;"><p style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);text-align: center;line-height: 1.6em;"><strong style="outline: 0px;"><span style="outline: 0px;letter-spacing: 2px;font-size: 24px;color: rgb(246, 171, 0);">5</span></strong></p><p style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);text-align: center;line-height: 1.6em;"><span style="color: rgb(30, 35, 128);font-size: 17px;"><strong style="outline: 0px;"><span style="font-size: 17px;color: rgb(30, 35, 128);outline: 0px;letter-spacing: 2px;">术语和行话</span></strong></span></p><p style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);text-align: center;line-height: 1.6em;"><br><strong style="letter-spacing: 0.544px;font-size: var(--articleFontsize);outline: 0px;"><span style="outline: 0px;letter-spacing: 2px;font-size: 24px;color: rgb(246, 171, 0);"></span></strong></p></h2><p ql-global-para="true" line="xTxg" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><span style="font-size: 16px;outline: 0px;letter-spacing: 2px;">这些模型（包括仅编码器、仅解码器和编码器-解码器模型）都属于序列到序列模型（通常简称为「seq2seq」）。值得注意的是，虽然我们将 BERT 模型称为仅编码器模型，但「仅编码器」这个描述可能会引起误解，因为这些模型在预训练期间也会将嵌入解码为输出的词元或文本。</span></p><p ql-global-para="true" line="ffbc" ql-global="true" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><span style="font-size: 16px;outline: 0px;letter-spacing: 2px;">&nbsp;</span></p><p ql-global-para="true" line="olef" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><span style="font-size: 16px;outline: 0px;letter-spacing: 2px;">换句话说，仅编码器和仅解码器架构都在进行「解码」。然而，与仅解码器和编码器-解码器架构不同，仅编码器架构不是以自回归的方式进行解码。自回归解码是指逐个词元地生成输出序列，其中每个词元都基于先前生成的词元。相比之下，仅编码器模型不会以这种方式生成连贯的输出序列。相反，它们专注于理解输入文本并生成特定任务的输出，如标签预测或词元预测。</span></p><p ql-global-para="true" line="olef" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><br></p><span id="OSC_h2_5"></span><h2 style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);text-align: center;line-height: 1.6em;"><p style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);text-align: center;line-height: 1.6em;"><strong style="outline: 0px;"><span style="outline: 0px;letter-spacing: 2px;font-size: 24px;color: rgb(246, 171, 0);">6</span></strong></p><p style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);text-align: center;line-height: 1.6em;"><span style="color: rgb(30, 35, 128);font-size: 17px;"><strong style="outline: 0px;"><span style="font-size: 17px;color: rgb(30, 35, 128);outline: 0px;letter-spacing: 2px;">结论</span></strong></span></p></h2><p ql-global-para="true" line="oXY9" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><span style="font-size: 16px;outline: 0px;letter-spacing: 2px;"><br></span></p><p ql-global-para="true" line="oXY9" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><span style="font-size: 16px;outline: 0px;letter-spacing: 2px;">简而言之，编码器模型在学习用于分类任务的嵌入表示方面非常受欢迎，编码器-解码器模型用于生成任务，这些任务依赖输入，以生成输出（例如翻译和摘要生成），而仅解码器模型则用于其他类型的生成任务，包括问答。</span></p><p ql-global-para="true" line="oXY9" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><span style="font-size: 16px;outline: 0px;letter-spacing: 2px;"><br></span></p><p ql-global-para="true" line="oXY9" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><span style="font-size: 16px;outline: 0px;letter-spacing: 2px;">自首个 Transformer 架构问世以来，已经开发出数百种编码器、解码器和编码器-解码器混合模型，模型概览如下图所示：</span></p><p ql-global-para="true" line="oXY9" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><br></p><section style="line-height: 100%;margin: 0pt 8px;font-size: 11pt;color: rgb(73, 73, 73);text-align: center;"><img class="rich_pages wxw-img" data-backh="780" data-backw="578" data-ratio="1.349074074074074" src="https://oscimg.oschina.net/oscnet/b7af6163-1ad1-4fe1-bee9-5e7645230015.png" data-type="png" data-w="1080" height="auto" style="width: 100%;height: auto;" width="1456" referrerpolicy="no-referrer"><span style="color: rgb(136, 136, 136);"><em><span style="color: rgb(136, 136, 136);text-align: center;font-size: 12px;">按架构类型和开发者分类的部分最受欢迎的大型语言 Transformer。</span></em></span></section><p ql-global-para="true" line="PDtt" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><br></p><p ql-global-para="true" line="ddC0" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><span style="font-size: 16px;outline: 0px;letter-spacing: 2px;">尽管仅编码器模型逐渐失去了关注度，但 GPT-3、ChatGPT 和 GPT-4 等仅解码器模型在文本生成方面取得了重大突破，并开始广泛流行。然而，仅编码器模型在基于文本嵌入进行预测模型训练方面仍然非常有用，相较于生成文本，它具备独特优势。</span></p><p style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><br></p><section style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);caret-color: rgba(0, 0, 0, 0.9);text-size-adjust: inherit;line-height: 1.75em;text-align: left;"><span style="outline: 0px;color: rgb(136, 136, 136);font-size: 14px;letter-spacing: 1px;">其他人都在看</span></section><span id="OSC_h3_6"></span><h3 style="letter-spacing: 0.578px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);"><ul class="list-paddingleft-1" style="width: 577.422px;outline: 0px;"><li style="outline: 0px;font-size: 14px;letter-spacing: 1px;"><p style="outline: 0px;"><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzU5ODY2MTk3Nw%3D%3D%26mid%3D2247491825%26idx%3D1%26sn%3D6b7494f1a24520f5e76fbca4b739e199%26chksm%3Dfe426ec7c935e7d10925628ee95207e9cd7e4c61b36c176d1e1dbb89bc1c79f1729dde095301%26scene%3D21%23wechat_redirect" textvalue="语言大模型的进化轨迹" linktype="text" imgurl="" imgdata="null" data-itemshowtype="0" tab="innerlink" data-linktype="2">语言大模型的进化轨迹</a><br style="outline: 0px;"></p></li><li style="outline: 0px;font-size: 14px;letter-spacing: 1px;"><p style="outline: 0px;"><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzU5ODY2MTk3Nw%3D%3D%26mid%3D2247491908%26idx%3D1%26sn%3D208a592f66f2cb2f412f9b58bca87401%26chksm%3Dfe426f72c935e6641a14837bb0a600bcbf28b9b2d427ca01477b492cfff2116aafedfd66c900%26scene%3D21%23wechat_redirect" textvalue="通俗解构语言大模型的工作原理" linktype="text" imgurl="" imgdata="null" data-itemshowtype="0" tab="innerlink" data-linktype="2" hasload="1" style="color: var(--weui-LINK);font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 14px;letter-spacing: 1px;text-wrap: wrap;background-color: rgb(255, 255, 255);outline: 0px;cursor: pointer;">通俗解构语言大模型的工作原理</a><br></p></li><li style="outline: 0px;font-size: 14px;letter-spacing: 1px;"><p style="outline: 0px;"><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzU5ODY2MTk3Nw%3D%3D%26mid%3D2247492001%26idx%3D1%26sn%3D8ee2ef77916c2992f570c294adc1ec19%26chksm%3Dfe426f97c935e6819fbd0cad4ca972da01c1ba40baef933db2a3eadfaed12a7605444ad86132%26scene%3D21%23wechat_redirect" textvalue="PyTorch 创始人：开源成功的方法论" linktype="text" imgurl="" imgdata="null" data-itemshowtype="0" tab="innerlink" data-linktype="2">PyTorch 创始人：开源成功的方法论</a><br style="outline: 0px;"></p></li><li style="outline: 0px;font-size: 14px;letter-spacing: 1px;"><p style="outline: 0px;"><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzU5ODY2MTk3Nw%3D%3D%26mid%3D2247491721%26idx%3D1%26sn%3D71fd215ca3625f276913db5f62d6791e%26chksm%3Dfe426ebfc935e7a96d0437566485a5774b6e3063ba4c768093eaffc25f054730e0f7f836be3f%26scene%3D21%23wechat_redirect" textvalue="GPT 总设计师：大型语言模型的未来" linktype="text" imgurl="" imgdata="null" data-itemshowtype="0" tab="innerlink" data-linktype="2" hasload="1" style="color: var(--weui-LINK);outline: 0px;cursor: pointer;"></a><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzU5ODY2MTk3Nw%3D%3D%26mid%3D2247491882%26idx%3D1%26sn%3D7fabac6b07025d2e4e3a5db652bdab69%26chksm%3Dfe426f1cc935e60a8e203870b2ad09e2f2c9c0a48d1b6b9f826f70270875672d26e3775bf272%26scene%3D21%23wechat_redirect" textvalue="大模型的无限上下文与数据集组合艺术" linktype="text" imgurl="" imgdata="null" data-itemshowtype="0" tab="innerlink" data-linktype="2" hasload="1" style="color: var(--weui-LINK);outline: 0px;cursor: pointer;">大模型的无限上下文与数据集组合艺术</a></p></li><li style="outline: 0px;font-size: 14px;letter-spacing: 1px;"><p style="outline: 0px;"><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzU5ODY2MTk3Nw%3D%3D%26mid%3D2247491926%26idx%3D1%26sn%3Da442e6e93d8fb60106c952a96f37883f%26chksm%3Dfe426f60c935e676e569842cee9e4c60b82471e41dcbb9e6c126d79d3d383ba5e37a8e6b3113%26scene%3D21%23wechat_redirect" textvalue="GPT-4.5 前瞻：代码解释器，编程新纪元" linktype="text" imgurl="" imgdata="null" data-itemshowtype="0" tab="innerlink" data-linktype="2" hasload="1" style="color: var(--weui-LINK);outline: 0px;cursor: pointer;">GPT-4.5 前瞻：代码解释器，编程新纪元</a></p></li><li style="outline: 0px;font-size: 14px;letter-spacing: 1px;"><p style="outline: 0px;"><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzU5ODY2MTk3Nw%3D%3D%26mid%3D2247491988%26idx%3D1%26sn%3Dc5fcc5f3fa27bb00bf8ef9af05e7ca89%26chksm%3Dfe426fa2c935e6b4ebb279bf19471f39629ccfb6733e6d8a580fdcbb01e80bd59266f3830bac%26scene%3D21%23wechat_redirect" textvalue="OpenAI 首席科学家：通向无监督学习之路" linktype="text" imgurl="" imgdata="null" data-itemshowtype="0" tab="innerlink" data-linktype="2">OpenAI 首席科学家：通向无监督学习之路</a><br style="outline: 0px;"></p></li><li style="outline: 0px;font-size: 14px;letter-spacing: 1px;"><section style="outline: 0px;line-height: 1.75em;"><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzU5ODY2MTk3Nw%3D%3D%26mid%3D2247491935%26idx%3D1%26sn%3D9535636ca06c16345b432a9de5383f1e%26chksm%3Dfe426f69c935e67f717ca8a968b9dd2a3f69b45f330b561b3584ba1b196149c8ba00d3d452eb%26scene%3D21%23wechat_redirect" textvalue="OpenAI 超级对齐负责人：「驾驭」超级智能的四年计划" linktype="text" imgurl="" imgdata="null" data-itemshowtype="0" tab="innerlink" data-linktype="2" hasload="1" style="color: var(--weui-LINK);outline: 0px;cursor: pointer;">OpenAI 对齐负责人：「驾驭」超级智能四年计划</a><br style="outline: 0px;"></section></li></ul><section style="outline: 0px;line-height: 1.75em;text-align: left;"><span style="outline: 0px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 1px;font-size: 14px;color: rgb(63, 63, 63);">试用 OneFlow: github.com/Oneflow-Inc/oneflow/</span></section></h3><h2 style="margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);"><hr style="outline: 0px;border-style: solid;border-right-width: 0px;border-bottom-width: 0px;border-left-width: 0px;border-color: rgba(0, 0, 0, 0.1);transform-origin: 0px 0px;transform: scale(1, 0.5);"></h2><p style="margin-bottom: 0px;letter-spacing: 0.578px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);"><img class="rich_pages wxw-img" data-backh="162" data-backw="578" data-galleryid="" data-ratio="0.2802690582959641" data-s="300,640" src="https://oscimg.oschina.net/oscnet/37608b32-0850-4062-ad9e-62704a14d974.png" data-type="png" data-w="892" style="outline: 0px;letter-spacing: 0.578px;text-align: center;font-size: var(--articleFontsize);display: inline;width: 100%;visibility: visible !important;height: auto;" referrerpolicy="no-referrer"></p><p style="display: none;"><mp-style-type data-value="10000"></mp-style-type></p></div><p style="color: #858585; font-size: 13px;">本文分享自微信公众号 - OneFlow（OneFlowTechnology）。<br>如有侵权，请联系 support@oschina.cn 删除。<br>本文参与「<a href="https://www.oschina.net/sharing-plan" target="_blank">OSC 源创计划</a>」，欢迎正在阅读的你也加入，一起分享。</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 28 Sep 2023 02:17:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/oneflow/blog/10109514</guid>
            <link>https://my.oschina.net/oneflow/blog/10109514</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[1-8 月我国软件业务收入 75178 亿元，同比增长 13.5%]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff; color:#333333"><span style="color:#222222">工信部</span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.miit.gov.cn%2Fgxsj%2Ftjfx%2Frjy%2Fart%2F2023%2Fart_6971a3c0ea6c49c19e364c9597a79077.html" target="_blank">发布</a><span style="background-color:#ffffff; color:#222222">公告指出，</span>1－8 月份，我国软件和信息技术服务业（以下简称「软件业」）运行态势平稳，软件业务收入保持较快增长，利润总额保持两位数增长，软件业务出口小幅回落。</p><h4 style="margin-left:0px; margin-right:0px; text-align:left"><strong>一、总体运行情况</strong></h4><p style="color:#070707; margin-left:0; margin-right:0; text-align:left"><strong>软件业务收入保持较快增长。</strong>1－8 月份，我国软件业务收入 75178 亿元，同比增长 13.5%。</p><p style="color:#070707; margin-left:0; margin-right:0; text-align:left"><img height="247" src="https://oscimg.oschina.net/oscnet/up-f59dae23160a190f074b176bc35b4b355cc.png" width="500" referrerpolicy="no-referrer"></p><p style="color:#070707; margin-left:0; margin-right:0; text-align:left"><strong>利润总额保持两位数增长。</strong>1－8 月份，软件业利润总额 8628 亿元，同比增长 13.9%。</p><p style="color:#070707; margin-left:0; margin-right:0; text-align:left"><img height="240" src="https://oscimg.oschina.net/oscnet/up-a5be7b7ce2f6094b7ce524cb85d2fbae3ae.png" width="500" referrerpolicy="no-referrer"></p><p style="color:#070707; margin-left:0; margin-right:0; text-align:left"><strong>软件业务出口小幅回落。</strong>1－8 月份，软件业务出口 319.3 亿美元，同比下降 4.5%，其中，软件外包服务出口同比增长 3.4%。</p><p style="color:#070707; margin-left:0; margin-right:0; text-align:left"><img height="245" src="https://oscimg.oschina.net/oscnet/up-02c6fcf5f78b3c28e5a1d42f26fd56c8475.png" width="500" referrerpolicy="no-referrer"></p><h4 style="margin-left:0px; margin-right:0px; text-align:left">二、分领域运行情况</h4><p style="color:#070707; margin-left:0; margin-right:0; text-align:left"><strong>软件产品收入保持两位数增长。</strong>1－8 月份，软件产品收入 17437 亿元，同比增长 10.8%，占全行业收入的比重为 23.2%。其中，工业软件产品收入 1704 亿元，同比增长 12.5%。</p><p style="color:#070707; margin-left:0; margin-right:0; text-align:left"><strong>信息技术服务收入较快增长。</strong>1－8 月份，信息技术服务收入 50116 亿元，同比增长 14.8%，在全行业收入中占比为 66.7%。其中，云计算、大数据服务共实现收入 7532 亿元，同比增长 15.7%，占信息技术服务收入的比重为 15%；集成电路设计收入 1994 亿元，同比增长 5%；电子商务平台技术服务收入 6981 亿元，同比增长 9%。</p><p style="color:#070707; margin-left:0; margin-right:0; text-align:left"><strong>信息安全收入稳步增长。</strong>1－8 月份，信息安全产品和服务收入 1211 亿元，同比增长 10%。</p><p style="color:#070707; margin-left:0; margin-right:0; text-align:left"><strong>嵌入式系统软件收入平稳增长。</strong>1－8 月份，嵌入式系统软件收入 6413 亿元，同比增长 11.7%。</p><p style="color:#070707; margin-left:0; margin-right:0; text-align:left"><img height="240" src="https://oscimg.oschina.net/oscnet/up-ca04e9482bac3cc3bfa58966553072bb78c.png" width="500" referrerpolicy="no-referrer"></p><h4 style="margin-left:0px; margin-right:0px; text-align:left"><strong>三、分地区运行情况</strong></h4><p style="color:#070707; margin-left:0; margin-right:0; text-align:left"><strong>东北、中、西部地区软件业务收入小幅回落，东部地区增势突出。</strong>1－8 月份，东部地区完成软件业务收入 62244 亿元，同比增长 14%，增速较 1－7 月份提高 0.1 个百分点；中部地区完成软件业务收入 3619 亿元，同比增长 13.1%，增速较 1－7 月份回落 1 个百分点；西部地区完成软件业务收入 7604 亿元，同比增长 10.1%，增速较 1－7 月份回落 0.1 个百分点；东北地区完成软件业务收入 1711 亿元，同比增长 13.3%，增速较 1－7 月份回落 1.1 个百分点。四个地区软件业务收入在全国总收入中的占比分别为 82.8%、4.8%、10.1% 和 2.3%。</p><p style="color:#070707; margin-left:0; margin-right:0; text-align:left"><img height="411" src="https://oscimg.oschina.net/oscnet/up-014347b37905d0dfbf6bf0c75b012606161.png" width="853" referrerpolicy="no-referrer"></p><p style="color:#070707; margin-left:0; margin-right:0; text-align:left"><strong>主要软件大省收入占比持续提升。</strong>1－8 月份，软件业务收入居前 5 名的省份中,北京市、广东省、江苏省、山东省、上海市软件收入分别为 16277 亿元、13224 亿元、8820 亿元、7813 亿元和 6599 亿元，分别增长 18%、14%、8%、16.9% 和 19.2%，五省 (市) 合计软件业务收入 52733 亿元，占全国比重为 70.1%，占比较去年同期提高 1 个百分点。</p><p style="color:#070707; margin-left:0; margin-right:0; text-align:left"><img height="245" src="https://oscimg.oschina.net/oscnet/up-532e0fecf7e23b162e945c871453a347556.png" width="500" referrerpolicy="no-referrer"></p><p style="color:#070707; margin-left:0; margin-right:0; text-align:left"><strong>中心城市软件业务收入平稳增长。</strong>1－8 月份，全国 15 个副省级中心城市实现软件业务收入 36850 亿元，同比增长 10.8%，增速较 1－7 月份回落 0.3 个百分点，占全国软件业务收入比重为 49%，占比较去年同期回落 1.2 个百分点。其中，大连、济南、成都、深圳 、厦门和青岛软件业务收入增速超过全行业整体增速。</p><p style="color:#070707; margin-left:0; margin-right:0; text-align:left"><img height="252" src="https://oscimg.oschina.net/oscnet/up-8dd2fb16da3fed178ef346f447a3e12b3c6.png" width="500" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 27 Sep 2023 09:53:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/259757</guid>
            <link>https://www.oschina.net/news/259757</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[「根本不需要 TypeScript，JS + JSDoc 够了」，大佬说我想多了]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>本月，Ruby on Rails 作者 DHH 宣布移除其团队开源项目 Turbo 8 中的 TypeScript 代码。</p><p><img height="768" src="https://oscimg.oschina.net/oscnet/up-58c4155f83bbd826f4bb0ec1ab8d1e32ccd.png" width="1080" referrerpolicy="no-referrer"></p><p>他认为，TypeScript 对他来说只是阻碍。不仅因为它需要显式的编译步骤，还因为它用类型编程污染了代码，很影响开发体验。</p><p>无独有偶，不久前，知名前端 UI 框架 Svelte 也<span style="color:#245bdb"><a href="https://www.oschina.net/news/240489/svelte-ts-to-jsdoc" rel="nofollow">宣布从 TypeScript 切换到 JavaScript</a></span>。负责 Svelte 编译器的开发者说，改用 JSDoc 后，代码不需要编译构建即可进行调试 —— 简化了编译器的开发工作。</p><p>Svelte 不是第一个放弃 TypeScript 的前端框架。早在 2020 年，Deno 就迁移了一部分内部 TypeScript 代码到 JavaScript，以减少构建时间。</p><p>Deno 团队给出的理由，总结一下就是：<strong>减少构建时间</strong>、<strong>降低发布的代码体积</strong>、<strong>减少编写的代码量</strong>。</p><p>加上今年短期内已经有两个项目从 TypeScript 切换到 JavaScript 了，这个状况就很令人迷惑。<strong>难道从</strong><strong> TypeScript 切回 JavaScript</strong><strong> 已经成了当下的新潮流？</strong>在推特和 GitHub 上，讨论也是纷纷扬扬。有人赞同，表示欣赏他们的勇气；有人反对，表示这是开历史倒车。网友觉得，编译速度慢，改进编译器就行了，因噎废食有点想不通。</p><p>所以，放弃 TypeScript 回归 JavaScript 是在追求舒适的 partner，还是在开历史的倒车？</p><p>对此，开源中国找来了 3 位使用过 TypeScript 和 JavaScript 的前端大佬，听听他们的看法。他们分别是：</p><ul><li><p><span style="color:#245bdb">刘勇，社区暱称天猪，某大厂 Node.js </span><span style="color:#245bdb">Infra</span><span style="color:#245bdb"> 负责人，EggJS / CNPM 核心开发者。</span></p></li><li><p><span style="color:#245bdb">刘易成，社区暱称 xcatliu（流浪小猫），《</span><span style="color:#245bdb">TypeScript</span><span style="color:#245bdb"> 入门教程》作者，来自腾讯文档团队。</span></p></li><li><p><span style="color:#245bdb">李振，社区暱称 tick，来自腾讯文档团队。</span></p></li></ul><p>&nbsp;</p><span id="OSC_h1_1"></span><h1>一、开历史倒车？谈不上</h1><p><span style="color:#245bdb"><strong>Q1：</strong></span><span style="color:#245bdb"><strong>TypeScript</strong></span><span style="color:#245bdb"><strong> 是基于 </strong></span><span style="color:#245bdb"><strong>JavaScript</strong></span><span style="color:#245bdb"><strong> 推出的新语言，理论上应该比 JavaScript 完善的，为什么大家还会倒回去用旧的 JavaScript 呢？这算不算开历史的倒车？</strong></span></p><p><strong>刘勇：</strong>不算倒车，这只是一个选择，在某些场景下，写 TypeScript 会带来一些额外成本。譬如我看过一些开源库的源码，核心逻辑可能就几十行，但为了实现准确的类型提示，写出来的类型体操反而远远多于核心源码，孰是孰非对于不同的开发者有不同的准绳，需要找到其中的平衡点。当然，就目前的情况，在力所能及的情况下，我个人推荐能用 TypeScript 就用 TypeScript ，但是否要玩类型体操则根据开发者自身情况来决策。</p><p><strong>刘易成：</strong>已经使用了 TypeScript 的项目改回使用 JavaScript 是很少见的，更多的项目是从 JavaScript 升级到 TypeScript。TypeScript 完善了 JavaScript 的类型系统，使得代码的可维护性更高了，但同时也增加了编译步骤和一些开发成本。对于一些项目而言，JavaScript 已经能够满足需求了，就没必要增加 TypeScript 类型系统的复杂性了，但是对于另一些复杂项目，更需要类型系统来帮助提高代码可维护性，所以这不算开历史的倒车，而是根据实际情况做技术选型。</p><p>&nbsp;</p><p><span style="color:#245bdb"><strong>Q2：以上从 </strong></span><span style="color:#245bdb"><strong>TypeScript</strong></span><span style="color:#245bdb"><strong> 切回到 </strong></span><span style="color:#245bdb"><strong>JavaScript</strong></span><span style="color:#245bdb"><strong> 的项目，都是做开发框架的，所以这是不是跟项目类型有关呢？做框架的项目更有可能选择</strong></span><span style="color:#245bdb"><strong> JavaScript</strong></span><span style="color:#245bdb"><strong> 吗？</strong></span></p><p><strong>李振：</strong>是的，项目类型可以是影响选择 JavaScript 还是 TypeScript 的一个因素。在开发框架或库时，特别是前端框架或库，选择使用 JavaScript 的情况较为常见。</p><p>一方面，开发框架需要具备广泛的兼容性，以便开发者可以在各种项目中使用。由于 JavaScript 是 Web 开发的基础语言，几乎所有的浏览器和环境都支持 JavaScript。这使得使用 JavaScript 编写的框架更容易被广泛采用和集成。</p><p>另一方面，开发框架通常需要提供简单易用的 API 和灵活的扩展机制，以满足各种项目的需求。使用 JavaScript 可以更加直接地表达这些概念，而不需要过多的类型注解和编译步骤。这使得开发者可以更快地理解和使用框架，并且更容易进行自定义和扩展。</p><p><strong>刘勇：</strong>框架和类库的开发者，往往需要考虑到很多 edge case，在这种情况下，编写完善的类型是一件很费心力的事，代码量会多了不少，从而会导致维护成本的增加。其实现在社区还是在探索的阶段，需要找到一个平衡点，哪一些是需要完善的，哪一些是可以取舍的。</p><p>&nbsp;</p><p><span style="color:#245bdb"><strong>Q3：基于</strong></span><span style="color:#245bdb"><strong></strong></span><span style="color:#245bdb"><strong>JavaScript</strong></span><span style="color:#245bdb"><strong> 改进的语言却遭到了开发者的嫌弃，这能说是 </strong></span><span style="color:#245bdb"><strong>TypeScript</strong></span><span style="color:#245bdb"><strong></strong></span><span style="color:#245bdb"><strong>设计的失败吗？</strong></span></p><p><strong>李振：</strong>这并不能被视为 TypeScript 设计的失败。每个项目和开发团队都有自己的需求和偏好。有些开发者可能认为 TypeScript 增加了额外的复杂性和学习曲线，或者觉得它在某些方面不符合他们的开发风格。这并不意味着 TypeScript 设计的失败，而是反映了不同开发者对工具和语言的不同看法和需求。</p><p>TypeScript 仍然在许多项目中被广泛使用，并且持续发展和改进。它提供了许多有价值的功能，如类型安全、代码智能感知和重构支持等，这些功能对于大型项目和团队协作非常有益。因此，无论是否有一些项目选择回到 JavaScript，TypeScript 仍然是一个受欢迎和成功的语言。</p><p><strong>刘易成：</strong>TypeScript 的成功无需质疑，已经有无数的项目证明了它的成功。开发者并没有「嫌弃」 TypeScript，只是认为并不是所有项目都适合使用 TypeScript。不管开发者用的是 JavaScript 还是 TypeScript ，都受益于 TypeScript 的 language service 太多了。TypeScript 已经是前端生态系统中最不可或缺的一环了。</p><p>&nbsp;</p><span id="OSC_h1_2"></span><h1>二、TypeScript 和 JavaScript 并不是简单地互为替身</h1><p><span style="color:#245bdb"><strong>Q4：有评论认为，</strong></span><span style="color:#245bdb"><strong>TypeScript</strong></span><span style="color:#245bdb"><strong></strong></span><span style="color:#245bdb"><strong>编译速度慢，改进编译器就行了，转回</strong></span><span style="color:#245bdb"><strong></strong></span><span style="color:#245bdb"><strong>JavaScript</strong></span><span style="color:#245bdb"><strong> 是因噎废食，你怎么看？</strong></span></p><p><strong>刘勇：</strong>需要提醒的是，目前社区一些转回 JavaScript 的都是框架和类库，这些作者的决策点并不是只因为 TypeScript 编译速度。</p><p>另外，「改进编译器」这事其实没那么简单，就像 TypeScript-node 在某个版本更新后，动态解析的速度慢了非常多，但也没计划优化。像 esbuild 目前还不支持装饰器。同时应用侧又开始一窝蜂上 monorepo，更加剧了整体耗时。我们只能寄希望于 TypeScript 官方的大神们再出绝招。</p><p><strong>刘易成：</strong>即使是 JavaScript 项目，也有编译/打包/构建等过程，绝大部分项目都不会因为加入了 TypeScript 编译就慢很多。是否转回 JavaScript 还是需要综合考虑项目复杂度、团队协作规模等因素。</p><p>另外，改进 TypeScript 编译速度并不是一个容易的事，TypeScript 的类型系统和语言特性很复杂，这只能靠 TypeScript 团队下功夫了。</p><p>&nbsp;</p><p><span style="color:#245bdb"><strong>Q5：我们一开始用 </strong></span><span style="color:#245bdb"><strong>TypeScript</strong></span><span style="color:#245bdb"><strong> 是因为 TypeScript 提供了类型检查，弥补了 </strong></span><span style="color:#245bdb"><strong>JavaScript</strong></span><span style="color:#245bdb"><strong> 只有逻辑没有类型的问题，那如果我们用 JavaScript + JSDoc 来解决类型声明，是不是就不用使用 TypeScript 了？</strong></span></p><p><strong>刘勇：</strong>首先，JSDoc 并不能完全解决类型声明问题，它也不能在开发期就帮助开发者发现一些问题。</p><p>其次，这两者并不冲突，我个人在写 TypeScript 的时候也会写对应的 JSDoc，因为 TypeScript 的类型没法有更多的注释和描述。我更期望看到后续 TypeScript 团队能优化这块的体验。</p><p><strong>刘易成：</strong>JSDoc 只能解决一部分类型的问题，而 TypeScript 是一个完整的类型系统。TypeScript 生态更繁荣，对于普通开发者和普通的项目而言，使用 JSDoc 的开发和维护成本可能会比 TypeScript 更高。</p><p><strong>李振：</strong>理论上也是可行的，但与 TypeScript 相比，它仍然存在一些限制：</p><ul><li><p>静态类型检查的完整性：JSDoc 注释是基于注释的方式，而不是直接嵌入到语言中，因此它的类型检查可能不如 TypeScript 的类型系统完整和准确。</p></li><li><p>工具支持的差异：尽管一些工具和编辑器可以利用 JSDoc 注释进行类型检查，但与 TypeScript 相比，它们的功能和智能感知可能有所限制。</p></li><li><p>生态系统的差异：TypeScript 有一个独立的类型系统和类型声明文件生态系统，这使得与现有的 JavaScript 库和工具更加无缝集成。而使用 JavaScript + JSDoc 可能需要更多的手动工作来编写和维护类型注释。</p></li></ul><p>&nbsp;</p><span id="OSC_h1_3"></span><h1>三、TypeScript 和 JavaScript ，其实各有千秋</h1><p><span style="color:#245bdb"><strong>Q6：你觉得</strong></span><span style="color:#245bdb"><strong></strong></span><span style="color:#245bdb"><strong>TypeScript</strong></span><span style="color:#245bdb"><strong></strong></span><span style="color:#245bdb"><strong>有什么特别的长处，对开发者来说是</strong></span><span style="color:#245bdb"><strong></strong></span><span style="color:#245bdb"><strong>JavaScript</strong></span><span style="color:#245bdb"><strong> 做不到的？</strong></span></p><p><strong>刘勇：</strong>类型的元数据描述能力，这个是 JavaScript 目前还不具备的，除非 TC39 的 「JavaScript 类型标注」（ Types as Comments）等提案能落地。像我们就很重视 「API 元数据」，通过工程化的方式，可以从代码中提取出来接口 API 信息，从而可以在 codegen，mock，前后端协作等很多方面来提升研发体验和研发效能。</p><p><strong>李振：</strong>TypeScript 相对于 JavaScript ，主要是引入了静态类型系统，并且可以兼容 JavaScript 生态。本质上来看，并没有哪些功能是 JavaScript 完全无法实现的。但是 TypeScript 经过这么多年的发展，已经形成自己良好的生态系统。比如 TypeScript 类型声明文件，提供了丰富的类型定义，与第三方库的集成更加顺畅。JavaScript 要实现类似的功能，需要开发者做更多的工作。</p><p>&nbsp;</p><p><span style="color:#245bdb"><strong>Q7：你觉得对普通项目来说，使用</strong></span><span style="color:#245bdb"><strong></strong></span><span style="color:#245bdb"><strong>TypeScript</strong></span><span style="color:#245bdb"><strong></strong></span><span style="color:#245bdb"><strong>有什么不方便或者不利的地方吗？</strong></span></p><p><strong>刘勇：</strong>主要还是工作流的复杂化带来开发成本的提升，我记得之前在 StackOverflow 看过一个关于 TypeScript 的回答是，我开发一个简单的功能，但是解决类型问题就花了一整天的时间，在我们公司内部做日常的技术答疑的时候，也经常发现有不少用户对 TypeScript 问题完全不知道从何下手。举一个 Node.js 项目的例子，很多用户就不理解为什么 tsconfig.json 里的 paths 在代码编译成 JavaScript 后会不生效，因为这些问题，就会容易导致产生计划之外的工作量。</p><p><strong>刘易成：</strong>使用 TypeScript 需要增加一个「编译」的过程，不过现在各种脚手架已经帮你做好了这些步骤，所以成本已经很低了。还有就是 TypeScript 有一些学习成本，如果是新手很容易不注意类型检查，把 TypeScript 写成了 AnyScript，失去了使用 TypeScript 的意义，所以建议通过一些约束和培训，让项目中的 TypeScript 更加标准。</p><p>&nbsp;</p><span id="OSC_h1_4"></span><h1>四、TypeScript VS JavaScript ，你 Pick 谁？</h1><p style="text-align:left">根据 Stack Overflow <span style="color:#245bdb"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsurvey.stackoverflow.co%2F2023%2F" rel="nofollow">发布</a></span>的 2023 年开发者调查报告，JavaScript 连续 11 年成为最流行编程语言，使用占比达 63.61%，TypeScript 则排名第五，使用占比 38.87%。在人气方面，JavaScript 的开发者社区仍然是巨大而活跃的，在社区中可以很方便地找到大量成熟的开发项目和可用资源。在框架和工具方面，随着 TypeScript 的日益受欢迎，已经有了很多支持它的框架和工具。而 JavaScript，由于其历史的深厚，几乎所有的前端框架和库都会优先支持。</p><p>&nbsp;</p><p><span style="color:#245bdb"><strong>Q8：有人认为，</strong></span><span style="color:#245bdb"><strong></strong></span><span style="color:#245bdb"><strong>TypeScript</strong></span><span style="color:#245bdb"><strong></strong></span><span style="color:#245bdb"><strong>的出现是因为一般人驾驭不了</strong></span><span style="color:#245bdb"><strong></strong></span><span style="color:#245bdb"><strong>JavaScript</strong></span><span style="color:#245bdb"><strong> ，有人则觉得「水平越差的人越喜欢自由」，你怎么看？这两个语言的选择跟程序员的水平有关吗？</strong></span></p><p><strong>李振：</strong>拿爱好来判断个人水平是挺无聊的事情。写 JavaScript<strong></strong>和写 TypeScript 都有大牛。</p><p><strong>刘勇：</strong>笑～ 平时可没少见有同学吐槽，好好的 TypeScript 项目，被人提交了一堆 Any。也见过很多吐槽接手了一个 TypeScript 仓库，要硬着头皮看一大堆类型定义，搞清楚这些奇奇怪怪的类型是如何工作的。我觉得语言的选择主要看团队的工程化和规范化程度，过犹不及。如果一个 TypeScript 类库写了一大堆类型，但却连一个单测都没有，那我觉得它是不合格的。</p><p><strong>刘易成：</strong>TypeScript<strong></strong>的出现确实有一部分原因是 JavaScript<strong></strong>比较难「驾驭」，JavaScript<strong></strong>太灵活了，缺少类型的约束，很容易写出 bug 代码，TypeScript 一定程度上解决了这个问题，使得代码的可维护性更高了。</p><p>JavaScript<strong></strong>和 TypeScript 不能用来衡量程序员的水平。对于简单的项目或者个人项目而言，JavaScript<strong></strong>可能更加轻量和灵活，但对于需要大团队协作，复杂的项目而言，TypeScript 的类型系统就可以带来更好的代码维护性和可靠性了。</p><p>&nbsp;</p><p><span style="color:#245bdb"><strong>Q9：你认为这两个语言是不是分别有不同的适用项目？什么时候该用 </strong></span><span style="color:#245bdb"><strong>TypeScript</strong></span><span style="color:#245bdb"><strong></strong></span><span style="color:#245bdb"><strong>什么时候该用 </strong></span><span style="color:#245bdb"><strong>JavaScript</strong></span><span style="color:#245bdb"><strong> 呢？对个人和企业开发者来说，应该怎么选？</strong></span></p><p><strong>刘易成：</strong>对于大型项目、多人协作和需要高可靠性的项目来说，使用 TypeScript 更好；对于小型项目、个人项目，可以使用 JavaScript<strong></strong>更快迭代，当然也建议使用 TypeScript 保持更高的可维护性。</p><p>另外企业也需要根据员工技术能力和项目历史包袱来灵活选择技术栈。</p><p><strong>李振：</strong>个人觉得大型项目首选 TypeScript，拿我所在的团队，腾讯文档来说，团队有上百个项目，包括前端项目和一些 node 项目，大家都是首选 TypeScript 作为开发语言，可以降低团队协作的成本。个人开发者，如果是小型项目，其实无所谓，根据自己的爱好选择就行了。</p><p>&nbsp;</p><p><span style="color:#245bdb"><strong>Q10：你如何看待 </strong></span><span style="color:#245bdb"><strong>TypeScript</strong></span><span style="color:#245bdb"><strong></strong></span><span style="color:#245bdb"><strong>的未来发展？你觉得它是一时流行还是会终将取代 </strong></span><span style="color:#245bdb"><strong>JavaScript</strong></span><span style="color:#245bdb"><strong> ？你认为谁的技术生态更好一点呢？</strong></span></p><p><strong>刘勇：</strong>TypeScript<strong></strong>的定位是 JavaScript<strong></strong>的一个超集，它的能力是以 TC39 制定的 ECMAScript 规范为基准（即 JavaScript<strong></strong>）。我觉得它也谈不上会取代 JavaScript<strong></strong>，毕竟它并不是官方规范，而且 JavaScript<strong></strong>的存量生态实在是太庞大了。</p><p>当然，TypeScript 现在已经某种程度上成为事实的标准，尤其是因为 Node.js 官方对 ESM 和 CJS 何去何从的犹豫，导致社区开发者长时间的割裂，越来越多的人被迫选择用 TypeScript 来写类库，然后同时编译为 ESM 和 CJS。目前 TypeScript 的生态已经成规模，所以它不会像 CoffeeScript 那样昙花一现。</p><p><strong>刘易成：</strong>我个人认为 TypeScript 会持续流行并得到更广泛的应用。但并不会「取代」 JavaScript<strong></strong>。TypeScript 的目标一直都不是「取代」 JavaScript<strong></strong>，而是基于 JavaScript<strong></strong>提供类型系统，作为 JavaScript<strong></strong>的一个补充，在不同的项目和场景中发挥各自的优势。</p><p>JavaScript<strong></strong>和 TypeScript 的技术生态早已融合在一起了吧，几乎所有库都会有 TypeScript 类型文件。</p><p><strong>李振：</strong>我认为 TypeScript 不太可能完全取代 JavaScript，而是作为 JavaScript 的一个补充和增强。两者暂时不会出现零和博弈，也希望这两种语言都可以有更好的发展。目前来看 JavaScript 的生态更庞大一些，但是 TypeScript 的地位和影响力不断增长。作为普通开发者，在两者并不冲突的当下，最好都能关注其发展。</p><p>&nbsp;</p><p>对此，你怎么看？你手上用着的是 JavaScript<strong></strong>还是 TypeScript 呢？哪个更顺手？评论区见吧~</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 27 Sep 2023 09:31:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/6852546/blog/10114672</guid>
            <link>https://my.oschina.net/u/6852546/blog/10114672</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[OpenAI 寻求出售现有股票，估值高达 900 亿美元]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">据《<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.msn.com%2Fen-us%2Fmoney%2Ftechnology%2Fopenai-seeks-new-valuation-of-up-to-90-billion-in-share-sale%2Far-AA1hiJ9W" target="_blank">华尔街日报</a>》援引知情人士消息称，OpenAI&nbsp;</span><span style="background-color:#ffffff; color:#2b2b2b">正在与投资者讨论股票出售事宜</span><span style="color:#000000">。这家&nbsp;</span><span style="background-color:#ffffff; color:#2b2b2b">ChatGPT 背后的人工智能初创公司的估值将在 800 亿至 900 亿美元之间，大约是今年早些时候水平的三倍。</span></p><p><span style="color:#000000"><span style="background-color:#ffffff">今年 4 月，OpenAI 从红杉资本、Andreessen Horowitz、Thrive 和 K2 Global 等支持者那里获得了略高于 3 亿美元的融资，估值为 290 亿美元。</span></span></p><p><img height="233" src="https://static.oschina.net/uploads/space/2023/0927/162258_T3Uz_4252687.png" width="600" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0"><span style="color:#000000">知情人士称，这家由微软持股 49% 的初创公司已告诉投资者，预计今年的收入将达到 10 亿美元，并在 2024 年创造更多数十亿美元的收入。<span style="background-color:#ffffff">预计该交易将允许员工出售现有股票，而不是公司发行新股票来筹集额外资金。知情人士称，OpenAI 代表已开始就该交易向投资者进行推销，不过条款可能会发生变化。</span></span></p><p style="margin-left:0; margin-right:0; text-align:left"><span style="color:#000000"><span style="background-color:#ffffff">800 亿美元或以上的估值将使 OpenAI 成为全球估值最高的初创公司之一，仅次于埃隆·马斯克 (Elon Musk) 的 SpaceX 和 TikTok 母公司字节跳动 (ByteDance)。该数字突显了 OpenAI 在多大程度上能够重塑硅谷的格局，这一数字凸显了 OpenAI 能够重塑硅谷格局的程度，并迫使更富有、更成熟的科技巨头全面调整其产品路线图，效仿 OpenAI 的做法。</span></span></p><p style="margin-left:0; margin-right:0; text-align:left"><span style="color:#000000"><span style="background-color:#ffffff">OpenAI 的目标是向硅谷投资者出售价值数亿美元的现有股票，这笔交易将立即为微软带来巨额账面利润。</span></span></p><p style="margin-left:0; margin-right:0; text-align:left"><span style="color:#000000">这次员工持股出售可能会为从外部投资者那里筹集更多资金设定一个最低价格。人们普遍预计，OpenAI 将通过发行新股来筹集更多资金，以满足开发和维护其人工智能系统所需的计算成本。</span></p><p><span style="color:#000000"><span style="background-color:#ffffff">知情人士称</span>，<span style="background-color:#ffffff">该公司</span>已经<span style="background-color:#ffffff">引起了</span>孙正义的软银等投资巨头的浓厚兴趣。集资将涉及出售新股，与目前正在进行的要约收购程序分开。并表示，<span style="background-color:#ffffff">OpenAI 有意让微软持有该公司少数股权，这意味着这家科技巨头很可能无法在任何融资中购买股票，从而使自己的持股比例超过 50%。</span></span></p><p><span style="color:#333333">OpenAI<span>&nbsp;暂未回应置评请求。</span></span></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 27 Sep 2023 08:17:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/259735/openai-seeks-new-valuation-90-billion</guid>
            <link>https://www.oschina.net/news/259735/openai-seeks-new-valuation-90-billion</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Google 庆祝成立 25 周年]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Google 今天上线了新的 Doodle <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.google%2Finside-google%2Fcompany-announcements%2Fgoogle-25th-birthday%2F" target="_blank">庆祝</a>成立 25 周年。</p><p><img src="https://static.oschina.net/uploads/space/2023/0927/134213_x9MB_2720166.gif" referrerpolicy="no-referrer"></p><p>Google 于 1998 年 9 月 4 日成立，但是自 2002 年以来，该公司在 9 月的任意一天（<strong>通常是 9 月 27 日）</strong>庆祝其周年纪念日。</p><p><img alt="A screenshot of the Google search homepage in 1998" src="https://storage.googleapis.com/gweb-uniblog-publish-prod/images/Hero_Option-2.width-1200.format-webp.webp" referrerpolicy="no-referrer"></p><p><img src="https://static.oschina.net/uploads/space/2023/0927/140629_bPBa_2720166.png" referrerpolicy="no-referrer"></p><blockquote><p>今天的涂鸦庆祝 Google 的 25 周年。虽然我们在 Google 总是面向未来，但生日也可以是反思的时候。让我们一起走下记忆的长廊，了解我们是如何在 25 年前诞生的...</p><p>无论是命运还是运气，博士生 Sergey Brin 和 Larry Page 在 90 年代末斯坦福大学计算机科学项目中相遇。他们很快发现他们有着相似的愿景：使万维网更加易于访问。这对搭档在宿舍里不知疲倦地开发出一个更好搜索引擎的原型。随着他们在项目上取得了实质性进展，他们将操作移至 Google 第一个办公室——租来的车库。1998 年 9 月 27 日，谷歌公司正式成立。</p><p>自 1998 年以来已经发生了很多变化——包括今天涂鸦中看到的我们标志——但使命始终没有改变：组织世界信息，并使其普遍可接触和有用。全球数十亿人使用 Google 进行搜索、连接、工作、娱乐等等！</p><p>感谢您过去 25 年与我们共同进步。 我们迫不及待想要看到未来会带领我们走向何方，一起。</p></blockquote><p><em>via&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.google.com%2Fdoodles%2Fgoogles-25th-birthday" target="_blank">https://www.google.com/doodles/googles-25th-birthday</a></em></p><p>在搜索栏输入「Google's 25th birthday」或「Google 25 周岁生日」能看到彩蛋：</p><p><img src="https://static.oschina.net/uploads/space/2023/0927/132647_6ySe_2720166.png" referrerpolicy="no-referrer"></p><p><img src="https://static.oschina.net/uploads/space/2023/0927/140517_zSMr_2720166.png" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 27 Sep 2023 05:35:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/259698/googles-25th-birthday</guid>
            <link>https://www.oschina.net/news/259698/googles-25th-birthday</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[macOS Containers：在 macOS 用 Docker 运行 macOS 镜像]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>macOS Containers 是一群开发者基于 chroot 打造的工具，能让你在 macOS 用 Docker 运行 macOS 镜像。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-e8fbfed437c488003bb6d570a3f4afa4b01.png" referrerpolicy="no-referrer"></p><p>macOS Containers 官网<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmacoscontainers.org%2F" target="_blank">写道</a>：</p><blockquote><p>容器从根本上改变了现代软件的开发和部署方式。包括 FreeBSD、Solaris、Linux 甚至 Windows 在内的多种操作系统都支持容器，<strong>但 macOS 却没有原生支持容器</strong>——直到现在 macOS Containers 诞生。</p><p><img src="https://static.oschina.net/uploads/space/2023/0927/121649_g9Y7_2720166.png" referrerpolicy="no-referrer"></p></blockquote></div>
                                    ]]>
            </description>
            <pubDate>Wed, 27 Sep 2023 04:15:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/259695/macos-containers</guid>
            <link>https://www.oschina.net/news/259695/macos-containers</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[历史最悠久的 Unity 官方用户组在 13 年后宣布解散]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">自称为历史最悠久的&nbsp;Unity&nbsp;开发者团队 Boston Unity Group (BUG) <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbostonunitygroup.s3.us-east-1.amazonaws.com%2Findex.html" target="_blank">宣布</a>将在&nbsp;9 月 27 日晚组织最后一次会议，然后进行解散。根据介绍，BUG 由 Elliott Mitchell 和 Alex Schwartz 于 2010 年夏天创立，是世界上第一个官方 Unity 用户组。</span></p><blockquote><p><span style="color:#000000">「BUG 社区的持续发展催生了波士顿及其他地区游戏开发的新时代......从第一天起，BUG 就得到了 Unity 和前首席执行官 David Helgason 的热情认可和支持。Unity 提供了后勤支持、专业许可证赠品、研讨会、演讲、赞助、在 Unite 大会上发言的机会等等。在早期，David 和 Unity 明白，培养独立开发者的草根团体对 Unity 的长期发展至关重要，并有助于实现他们为各行各业的人们提供民主化游戏开发的目标。」</span></p></blockquote><p><img height="261" src="https://static.oschina.net/uploads/space/2023/0927/120517_6aBs_4252687.png" width="700" referrerpolicy="no-referrer"></p><p><span style="color:#000000">BUG 在致社区的公开信中表达了对 David 和所有 Unity 员工的感谢。但他们也指出，过去几年间 Unity 已将其重点从游戏行业和支持开发者社区转移开。IPO 后，该公司似乎将利润看得比一切都重要，包括进行了多次收购并裁减了核心人员。导致开发者所需的许多关键系统仍然处于混乱且通常不完整的状态，Unity 传递的信息是广告和收入比游戏开发者关心的功能要更为重要。</span></p><p><span style="color:#000000">尤其是 Unity 本月推出的新定价模式，BUG 将其描述为「令人匪夷所思的敌对服务条款和价格表动」；也正是 Unity 的这一举措，促使了 BUG 解散的决策。</span></p><blockquote><p><span style="color:#000000">来自游戏行业的响亮而明确的谴责是前所未有的，Unity 别无选择，只能撤销一些最令人震惊的修改。即使有了这些新的让步，修改后的定价模式还是对我们社区中独立工作室的成功造成了不成比例的影响。</span></p><p><span style="color:#000000">更重要的是，我们看到了一个由高管主导的商业决策是多么容易和轻率，就能让我们辛辛苦苦建立起来的工作室面临破产的风险，威胁到我们作为专业人士的生计，并对我们行业的长远发展提出挑战。今天的 Unity 已经不再是集团成立之初的那个公司了，我们曾经对公司的信任已经彻底被侵蚀了。</span></p></blockquote><p><span style="color:#000000">BUG 的这一感受也在游戏开发社区的广大群体中得到了</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftwitter.com%2FFuckedByUnity" target="_blank">回应</a><span style="color:#000000">，许多知名开发者表示，Unity 的举措基本没有挽回他们对该公司的信任。</span></p><p><span style="color:#000000">《吸血鬼幸存者》游戏的开发者 Poncle 在 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.reddit.com%2Fr%2Fpcgaming%2Fcomments%2F16rsuh0%2Fvampire_survivors_ama_with_developers_poncle%2F" target="_blank">Reddit AMA</a> 上被问及他们的下一款游戏/续作是否会再次使用 Unity 引擎时，就简明扼要地表示了拒绝："不，谢谢......即使 Unity 会完全收回他们的决定，我也不认为在他们目前的领导下信任他们是明智之举。"</span></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 27 Sep 2023 04:05:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/259693/first-official-unity-user-group-disbands</guid>
            <link>https://www.oschina.net/news/259693/first-official-unity-user-group-disbands</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[GNOME 45 动态三层缓存补丁更新]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>GNOME 45 "Rīga" 上周已正式<a href="https://www.oschina.net/news/259088/gnome-45-r%C4%ABga-released">发布</a>，此版本虽然有许多针对桌面环境的改进，但上游缺少的一个功能是 Canonical 主导的<strong> Mutter 动态三层缓存</strong>。</p><p>动态三层缓存用于在需要时提升性能，并且已被证明有助于提高桌面渲染性能，例如使用英特尔集成显卡和 Raspberry Pi 显卡。此外，Debian 和 Ubuntu 已经合并这个动态三重缓冲补丁有一段时间了，但这项特性仍未能合并到上游。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-311bd78a79409ec737ca4af54e1a17734ef.png" referrerpolicy="no-referrer"></p><p>虽然动态三层缓存未能进入 GNOME 45，但 Canonical 的工程师 Daniel van Vugt <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsalsa.debian.org%2Fgnome-team%2Fmutter%2F-%2Fmerge_requests%2F108" target="_blank">更新了 Debian/Ubuntu 补丁</a>以与 Mutter 45.0 兼容。</p><blockquote><p>动态三层缓存是 Daniel 负责的一项功能，其动机是为了在需要的时候动态地进行三级缓存，以使 GPU 加快其时钟频率，否则它的渲染效率就会变慢。让 GPU 工作得更快并暂时导致额外的帧延迟不是理想的方式，但它似乎确实能在需要的时候让 GPU 性能得到提升。</p></blockquote><p><img src="https://static.oschina.net/uploads/space/2023/0927/112744_naxT_2720166.png" referrerpolicy="no-referrer"></p><p>目前看来，一切都已准备就绪——使用 GNOME 45 的 Ubuntu 23.10 将提供动态三层缓存，该版本将于 10 月中旬首次亮相。该补丁现在还修复了显示器拔出插头时可能导致的潜在内存泄漏，该泄漏可能会导致独立 GPU 无法进入低功耗状态。</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 27 Sep 2023 03:30:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/259683/gnome-45-triple-buffering</guid>
            <link>https://www.oschina.net/news/259683/gnome-45-triple-buffering</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Apple 推出全球开发者资源 —— 人人能编程]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>9 月 26 日，Apple 宣布推出&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.apple.com%2Fexperts%2F" target="_blank">Meet with Apple Experts</a>&nbsp;开发者资源，帮助全球 Apple 开发者社区发现并参与课程、研讨会、实验室、一对一咨询等体验。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-03b3fbe6bda95fda8279db7ce8319e77581.png" referrerpolicy="no-referrer"></p><p>Meet with Apple Experts 初期提供超过 50 个课程、研讨会和咨询项目，并将持续提供线上和线下活动，开发者也可借助该平台和 Apple 专家直接沟通，获取洞见、支持和反馈；Meet with Apple Experts 同时也为所有开发者提供在各时区、通过各种语言举行的课程、实验室、研讨会和挑战赛，开发者即日起可报名参与多种主题的课程，深入探索 iOS 17、iPadOS 17、watchOS 10、visionOS，了解如何针对最新发布的硬件产品优化 app 和游戏。</p><p>注册 Apple 开发者、Apple Developer Program 和 Apple Developer Enterprise Program 的现成员可访问&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.apple.com%2Fexperts%2F" target="_blank">developer.apple.com/experts</a>&nbsp;进一步了解可参与的最新课程、实验室和特别活动的信息。</p><p>据了解，除了 Meet with Apple Experts，Apple 还为开发者提供了众多额外的开发工具和资源，包括各种先进工具与端到端支持，协助开发者构建、测试、营销和发行应用；同时内容丰富的免费工具与框架套件、Apple 开发者学院、企业家培训营、App 加速器和 Swift Student Challenge 等项目，以及「人人能编程」和 Swift Playgrounds 等开放工具，也确保所有人都能平等、方便地获取编程技术资源。</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 27 Sep 2023 02:34:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/259667</guid>
            <link>https://www.oschina.net/news/259667</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Appilot —— 面向 DevOps 场景的 AI 助手]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><strong style="color:rgba(0, 0, 0, 0.9)"><span style="color:#006ed5">Appilot 是面向 DevOps 场景的 AI 助手 </span></strong><span style="background-color:#ffffff; color:rgba(0, 0, 0, 0.9)">，这款产品将充分利用 AI 大语言模型的能力为用户提供变革性的部署和应用管理体验</span><span style="background-color:#ffffff; color:rgba(0, 0, 0, 0.9)">。</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify">Appilot 基于大语言模型进行推理，并且可以运行在本地个人电脑上。用户可以根据自身的需求和使用习惯，将 Appilot 集成到任意平台，进而实现通过输入自然语言即可调用后端平台的能力。具体特性包括：</p><ul style="list-style-type:disc; margin-left:0; margin-right:0"><li><p style="margin-left:0; margin-right:0"><strong><span style="color:#006ed5">应用管理</span></strong>：借助 Appilot，您可以通过自然语言交互来轻松地部署、升级、回滚和查看应用程序的日志，无需繁琐的手动操作。</p></li><li><p style="margin-left:0; margin-right:0"><strong><span style="color:#006ed5">环境管理</span></strong>：无论克隆环境还是查看环境内的依赖关系，均可通过 Appilot 实现，使用简单的指令即可完成复杂的环境管理任务。</p></li><li><p style="margin-left:0; margin-right:0"><strong><span style="color:#006ed5">诊断排障</span></strong>：如果发现系统异常，Appilot 所拥有的排查和修复功能，可以帮助您快速识别问题并采取措施解决它们。</p></li><li><p style="margin-left:0; margin-right:0"><strong><span style="color:#006ed5">行为护栏</span></strong>：我们深知安全的重要性，因此 Appilot 仅提供领域特定的回答，并要求审批任何可能导致系统变更的操作，有助于确保您的系统不会受到未经授权的访问。</p></li><li><p style="margin-left:0; margin-right:0"><strong><span style="color:#006ed5">混合基础设施编排</span></strong>：Appilot 可以轻松对接任意基础设施，无缝集成各种云服务、容器化平台等，使您能够在多样化的环境中运行应用程序。</p></li><li><p style="margin-left:0; margin-right:0"><strong><span style="color:#006ed5">支持多语言</span></strong>：您可以采用包括但不限于中文、英文等语言输入指令进行交互。</p></li><li><p style="margin-left:0; margin-right:0"><strong><span style="color:#006ed5">可插拔后端</span></strong>：我们秉持着开源开放的理念，避免供应商锁定。因此您可以根据需要自定义后端，以满足您的具体需求。</p></li></ul><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-4f085f385caee96aa02b719013b8c3bad6d.png" referrerpolicy="no-referrer"></p></div>
                                                                ]]>
            </description>
            <pubDate>Wed, 27 Sep 2023 02:34:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/p/appilot</guid>
            <link>https://www.oschina.net/p/appilot</link>
        </item>
        <item>
            <title>
                <![CDATA[为承德程序员发声]]>
            </title>
            <description>
                <![CDATA[<h1 class="header article-title"><a href="https://www.oschina.net/question/2720166_2331095">为承德程序员发声</a><div class="ui orange label horizontal" data-tooltip="热门">热</div></h1><div class="extra ui horizontal list meta-wrap"><div class="item"><a href="https://my.oschina.net/hardbone" class="__user"><span>局</span></a> 发布于，昨天 10:28
                    </div><div class="item">阅读 16K+</div><div class="item collect-btn " data-id="2331095" data-user-id="2720166" data-obj-type="2" data-max="99" data-tag-required="" data-current-user-id="" data-recommend-tags=""><i class="star outline icon"></i> 收藏 <span data-collect-count="" data-id="2331095" data-obj-type="2">4</span></div><div class="item comment-count"><a href="https://www.oschina.net/question/2720166_2331095#comments" class="normal"><i class="comment outline icon"></i> 评论 <span data-article-reply-count="">33</span></a></div></div><div class="content" id="articleContent"><blockquote><p>转载自，唐巧微信公众号<br><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FdudaNfJJJVUpy2MKiZQAIA" target="_blank" rel="nofollow">https://mp.weixin.qq.com/s/dudaNfJJJVUpy2MKiZQAIA</a></p></blockquote><p><strong>事情起因</strong></p><p>承德一位程序员因为在 GitHub 上接海外的开源项目，因为交流不方便使用了俗话称作「fan 墙」的软件以便访问 Google 等外网服务，被罚款 200 元，没收 3 年「非法收入」100 多万元。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-edac4ca38ffde4385c9de44dba968ab1986.png" referrerpolicy="no-referrer"></p><p><strong>行业观点</strong></p><p>事情发生后，我身边的所有人都为该处罚表达不满情绪。部分朋友把这个归结小地方处罚不规范。</p><p>胡锡进专门发文，希望对这种社会危害性为零的远程打工挣外汇行为进行宽容。</p><p>但随后他删除了微博。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-7c214e7091ef10a031e68380830f004df3c.png" referrerpolicy="no-referrer"></p><p><strong>我的观点</strong></p><p>1、程序员在国内向境外输出劳动力，既赚取了外汇，又解决了自己的就业问题，而且向世界展示了中国互联网行业的全球竞争力。国家非但不应该打击，而且应该鼓励。</p><p>这是一种新形态的「出口」。有助于中国建立更大的全球影响力。事实上，这位被罚同行的工作内容，就是从事大量被使用的开源项目的开发。参与开源项目本就是输出行业影响力的最佳方式。</p><p>2、当前并没有渠道为这一类人群的合法访问外国网络提供便利。希望相关部门能对合法的使用外网需求，建立合适的申请和监管渠道。</p><p>3、在相关规章制度完善之前，对于工作生活需要，不得已访问境外网站的。如果没有对社会产生负面影响，那么不应该处罚。对于有利于个人就业，有利于行业发展，有利于国家声誉的事情，国家应该适度鼓励并组织研究相关法规，帮助规范和健全相关经济活动。</p><hr><ul><li><a href="https://www.oschina.net/news/259325" target="_blank" rel="nofollow">罚款 200 元，没收 100 多万</a></li></ul></div><div class="poll-wrap"></div><div class="additional-remarks"></div><div class="ui basic center aligned segment action"><div class="ui big buttons"><a class="ui basic button collect-btn hover" data-id="2331095" data-user-id="2720166" data-obj-type="2" data-max="99" data-tag-required="" data-current-user-id="" data-recommend-tags=""><i class="star outline icon"></i>收藏 (<span data-collect-count="" data-id="2331095" data-obj-type="2">4</span>)</a><div class="ui basic dropdown share button osc-share dropdown-share" data-tag="share-question"><i class="share icon"></i><span>分享</span><div class="menu"><a class="item" data-platform="weibo" data-value="weibo"><i class="weibo icon"></i>微博</a><a class="item" data-platform="qq" data-value="qq"><i class="qq icon"></i>QQ</a><a class="item" data-platform="wechat" data-value="wechat"><i class="weixin icon"></i>微信</a></div></div></div><div class="ui basic segment"><a class="ban" ban-report="" data-id="2331095" data-obj-type="2" data-url="https://www.oschina.net/question/2720166_2331095"><i class="flag red icon"></i>举报</a></div></div>
            ]]>
            </description>
            <pubDate>Wed, 27 Sep 2023 02:32:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/question/2720166_2331095</guid>
            <link>https://www.oschina.net/question/2720166_2331095</link>
        </item>
        <item>
            <title>
                <![CDATA[Gitee 推荐 | 用于构建用户界面的 JavaScript 库 openInula]]>
            </title>
            <description>
                <![CDATA[<h1><a id="user-content-openinula-开源项目" class="anchor" href="https://gitee.com/openInula/inula#openinula-%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE"></a>openInula 开源项目</h1><h2><a id="user-content-项目介绍" class="anchor" href="https://gitee.com/openInula/inula#%E9%A1%B9%E7%9B%AE%E4%BB%8B%E7%BB%8D"></a>项目介绍</h2><p>单词 Inula（发音为：[ˈɪnjʊlə]），意为一类旋覆花属菊科的植物。openInula 是一款用于构建用户界面的 JavaScript 库，提供响应式 API 帮助开发者简单高效构建 web 页面，比传统虚拟 DOM 方式渲染效率提升 30% 以上！同时 InulaJS 提供与 React 保持一致的 API，并且提供 5 大常用功能丰富的核心组件：状态管理器、路由、国际化、请求组件、应用脚手架，以便开发者高效、高质量的构筑基于 InulaJS 的前端产品。</p><h2><a id="user-content-技术架构" class="anchor" href="https://gitee.com/openInula/inula#%E6%8A%80%E6%9C%AF%E6%9E%B6%E6%9E%84"></a>技术架构</h2><p><img src="https://gitee.com/openInula/inula-doc/raw/master/static/img/structure.PNG" alt="输入图片说明" referrerpolicy="no-referrer"></p><h3><a id="user-content-核心能力" class="anchor" href="https://gitee.com/openInula/inula#%E6%A0%B8%E5%BF%83%E8%83%BD%E5%8A%9B"></a>核心能力</h3><p><strong>响应式 API</strong></p><ul><li>openInula 通过最小化重新渲染的范围，从而进行高效的 UI 渲染。这种方式避免了虚拟 DOM 的开销，使得 openInula 在性能方面表现出色。</li><li>openInula 通过比较变化前后的 JavaScript 对象以细粒度的依赖追踪机制来实现响应式更新，无需用户过度关注性能优化。</li><li>简洁 API：
<ol><li>openInula 提供了两组简洁直观的 API--响应式 API 和与 React 一致的传统 API，使得开发者可以轻松地构建复杂的交互式界面。</li><li>openInula 简洁的 API 极大降低了开发者的学习成本，开发者使用响应式 API 可以快速构建高效的前端界面。</li></ol></li></ul><p><strong>兼容 ReactAPI</strong></p><ul><li>与 React 保持一致 API 的特性、可以无缝支持 React 生态。</li><li>使用传统 API 可以无缝将 React 项目切换至 openInula，React 应用可零修改切换至 openInula。</li></ul><h3><a id="user-content-openinula-配套组件" class="anchor" href="https://gitee.com/openInula/inula#openinula-%E9%85%8D%E5%A5%97%E7%BB%84%E4%BB%B6"></a>openInula 配套组件</h3><p><strong>状态管理器/inula-X</strong></p><p>inula-X 是 openInula 默认提供的状态管理器，无需额外引入三方库，就可以简单实现跨组件/页面共享状态。
inula-X 与 Redux 比可创建多个 Store，不需要在 Reducer 中返回 state 并且简化了 Action 和 Reducer 的创建步骤，原生支持异步能力，组件能做到精准重渲染。inula-X 均可使用函数组件、class 组件，能提供 redux 的适配接口及支持响应式的特点。</p><p><strong>路由/inula-router</strong></p><p>inula-router 是 openInula 生态组建的一部分，为 openInula 提供前端路由的能力，是构建大型应用必要组件。
inula-router 涵盖 react-router、history、connect-react-router 的功能。</p><p><strong>请求/inula-request</strong></p><p>inula-request 是 openInula 生态组件，涵盖常见的网络请求方式，并提供动态轮询钩子函数给用户更便捷的定制化请求体验。</p><p><strong>国际化/inula-intl</strong></p><p>inula-intl 是基于 openInula 生态组件，其主要提供了国际化功能，涵盖了基本的国际化组件和钩子函数，便于用户在构建国际化能力时方便操作。</p><p><strong>调试工具/inula-dev-tools</strong></p><p>inula-dev-tools 是一个为 openInula 开发者提供的强大工具集，能够方便地查看和编辑组件树、管理应用状态以及进行性能分析，极大提高了开发效率和诊断问题的便捷性。</p><p><strong>脚手架/inula-cli</strong></p><p>inula-cli 是一套针对 openInula 的编译期插件，它支持代码优化、JSX 语法转换以及代码分割，有助于提高应用的性能、可读性和可维护性。</p><h2><a id="user-content-openinula-文档" class="anchor" href="https://gitee.com/openInula/inula#openinula-%E6%96%87%E6%A1%A3"></a>openInula 文档</h2><p>欢迎访问 openInula 官网文档仓库，参与 openInula 开发者文档开源项目，与我们一起完善开发者文档。</p><p><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.openinula.net%2F">访问官网</a></p><h2><a id="user-content-代码仓地址" class="anchor" href="https://gitee.com/openInula/inula#%E4%BB%A3%E7%A0%81%E4%BB%93%E5%9C%B0%E5%9D%80"></a>代码仓地址</h2><p>openInula 仓库地址：<a href="https://gitee.com/openinula">https://gitee.com/openinula</a></p><h2><a id="user-content-如何参与" class="anchor" href="https://gitee.com/openInula/inula#%E5%A6%82%E4%BD%95%E5%8F%82%E4%B8%8E"></a>如何参与</h2><p><strong>参与贡献</strong>
欢迎您参与<a href="https://gitee.com/openinula/docs/blob/master/%E8%B4%A1%E7%8C%AE%E6%8C%87%E5%8D%97.md">贡献</a>，我们鼓励开发者以各种方式参与文档反馈和贡献。</p><p>您可以对现有文档进行评价、简单更改、反馈文档质量问题、贡献您的原创内容，详细请参考<a href="https://gitee.com/openinula/docs/blob/master/%E8%B4%A1%E7%8C%AE%E6%8C%87%E5%8D%97.md">贡献文档</a>。</p><h2><a id="user-content-许可协议" class="anchor" href="https://gitee.com/openInula/inula#%E8%AE%B8%E5%8F%AF%E5%8D%8F%E8%AE%AE"></a>许可协议</h2><p>openInula 主要遵循 Mulan Permissive Software License v2 协议，详情请参考各代码仓 LICENSE 声明。</p><h2><a id="user-content-联系方式" class="anchor" href="https://gitee.com/openInula/inula#%E8%81%94%E7%B3%BB%E6%96%B9%E5%BC%8F"></a>联系方式</h2><p><a href="mailto:team@inulajs.org">team@inulajs.org</a></p>]]>
            </description>
            <pubDate>Wed, 27 Sep 2023 02:28:00 GMT</pubDate>
            <guid isPermaLink="false">https://gitee.com/openInula/inula</guid>
            <link>https://gitee.com/openInula/inula</link>
        </item>
        <item>
            <title>
                <![CDATA[GNU 和自由软件运动四十周年]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>自由软件基金会 (FSF) 发表文章<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.fsf.org%2Fnews%2Fforty-years-of-gnu-and-the-free-software-movement" target="_blank">庆祝</a> GNU 和自由软件运动四十年。</p><blockquote><p><img src="https://static.oschina.net/uploads/space/2023/0927/141138_JLed_2720166.png" referrerpolicy="no-referrer"></p></blockquote><p>1983 年 9 月 27 日，计算机科学家 Richard Matthew Stallman（简称 RMS）宣布开发<strong>类 Unix 自由软件操作系统</strong>的「<strong>GNU&nbsp;计划</strong>」，并借此发起自由软件运动，GNU 名字代表 <strong>GNU's not Unix</strong>。</p><p><img alt="" height="293" src="https://oscimg.oschina.net/oscnet/up-e77ab9915a29996c9837bf3e3e3b15d4c07.png" width="300" referrerpolicy="no-referrer"></p><p>▲「GNU 计划」标志</p><p>四十年后的今天，GNU 和自由软件比以往任何时候都重要，虽然软件已经深入到我们的日常生活，但绝大多数用户无法完全控制它。</p><blockquote><p>自由软件的定义最初由 RMS 本人制定。自由软件的初衷是尊重用户的自由，并且尊重整个社区。</p><p>粗略来讲，一个软件如果是自由软件，这意味着用户可以自由地运行、拷贝、分发、学习、修改并改进该软件。因此，「自由软件 (Free Software)」中的"free"是关乎自由的问题，与价格无关，软件如何定价并不影响它是否被归类为自由软件。</p><p>具体来说，自由软件的用户拥有四项基本自由：</p><p>(0) 自由运行软件<br> (1) 自由学习和修改软件源代码<br> (2) 自由发布软件拷贝<br> (3) 自由发布修改后的软件版本</p></blockquote><p><img src="https://oscimg.oschina.net/oscnet/up-ddccf4eb6af9e5f1ea79edef64ea1b64119.JPEG" referrerpolicy="no-referrer"></p><p>GNU 是唯一专门为捍衞用户自由而开发的操作系统，四十年来始终忠于其创始理念。自 1983 年以来，「GNU 计划」为私有操作系统提供了合乎道德的完整替代方案。这要归功于世界各地的 GNU 开发志愿者四十年来的不懈努力。</p><p>除了技术，GNU 还开创性地提出了 "<strong>Copyleft</strong>"。Copyleft 是源自自由软件运动的概念，是一种利用现有著作权体制 (Copyright) 来保护所有用户和二次开发者的自由的授权方式。</p><p>Copyleft 中的 "Left"，不使用英语中「保留」的意思，而是指「Left（左）」，与「版权 (Copyright)」中的「Right（右）」具有镜像的关系。注意，Copyleft 不是反著作权运动，不主张废止著作权，也不是公有领域 (Public Domain)。</p><p>二者的区别可总结为："Copyright"指软件的版权和其它一切权利归软件作者所私有，用户只有使用权，没有其它如复制、重新修改发布等权利。而"Copyleft"的特点是仅版权归原作者所有，其他一切权利可以与任何人共享。</p><p><img height="300" src="https://oscimg.oschina.net/oscnet/up-5d41e7a854ad38374f2b19a4d95bfa825c3.png" width="300" referrerpolicy="no-referrer"></p><p>▲ Copyleft 标志</p><p>FSF 执行董事 Zoë Kooyman 表示，GNU 不仅仅是基于自由软件的最广泛使用的操作系统，也是指导自由软件运动四十年的哲学理念的核心。</p><p>他还说道，我们希望四十周年纪念能够激励更多黑客加入 GNU，实现在全世界范围内创建、改进和共享自由软件的目标。如今，软件正在控制我们的世界，而 GNU 是对现状的批判和解决方案，我们亟需它来避免技术控制人类。</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 26 Sep 2023 06:26:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/259709/forty-years-of-gnu-and-the-free-software-movement</guid>
            <link>https://www.oschina.net/news/259709/forty-years-of-gnu-and-the-free-software-movement</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
    </channel>
</rss>
