<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[开源中国-综合资讯]]>
        </title>
        <link>https://www.oschina.net/news/industry</link>
        <atom:link href="https://rsshub.app/oschina/news/industry" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[开源中国-综合资讯 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Mon, 26 Feb 2024 11:40:07 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[鸿蒙程序员平均月薪超 1 万 8]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>据智联招聘数据显示，春招鸿蒙岗位需求是去年近 3 倍。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-47729617a06471ca213c42bdadb7fd974ad.png" referrerpolicy="no-referrer"></p><p>本月初，华为 HarmonyOS 在新年贺词中提到，基于开源鸿蒙开发的 HarmonyOS NEXT 鸿蒙星河版将在今年秋天正式和消费者见面，这也促使大量企业急需鸿蒙人才。</p><p>春节后开工第一周，鸿蒙相关职位数同比增长 163%，投递人数同比增长 349%，同时，鸿蒙开发岗的招聘薪资，达到 18191 元/月，比总体开发岗的平均薪资（16617 元/月）高出 9%。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-bb038ad20fec544a0619fbde6c5f4049059.png" referrerpolicy="no-referrer"></p><p>来自：<em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1656737654%2FO2miyxjc4" target="_blank">现代快报</a></u></em></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 26 Feb 2024 10:49:02 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/280369</guid>
            <link>https://www.oschina.net/news/280369</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[云原生周刊：Docker 推出 Docker Build Cloud]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h2>开源项目推荐</h2><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkube-vip%2Fkube-vip" target="_blank">Kube-Vip</a></h3><p>Kube-Vip 旨在为 Kubernetes 集群提供高可用性和负载均衡功能。它提供了一个可插拔的 VIP（虚拟 IP）管理器，可以为集群中的服务分配一个虚拟 IP 地址，并自动将流量路由到正确的节点。该项目提供了多种配置选项，可以根据需要选择适合的负载均衡算法和 IP 模式。Kube-Vip 还支持一些高级功能，如自定义健康检查和故障转移。通过使用 Kube-Vip，用户可以轻松地实现 Kubernetes 集群的高可用性和可靠性，提供稳定的服务和无缝的故障恢复能力。</p><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fselefra%2Fselefra" target="_blank">Selefra</a></h3><p>Selefra 的意思是「从基础设施中选择*」。它是一款开源策略即代码软件，可为多云和 SaaS 环境提供分析，包括 AWS、GCP、Azure、阿里云、Kubernetes、Github、Cloudflare 和 Slack 等 30 多种服务。</p><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmarvasgit%2Fkubernetes-statemonitor" target="_blank">KubeStateWatch</a></h3><p>KubeStateWatch 是 Kubernetes 的状态监视器，用于向多个通道发送通知，告知更改的时间和内容。</p><p>它可以独立使用，也可以部署在 Kubernetes 中。但它的主要目的是部署在 Kubernetes 中。</p><p>KubeStateWatch 是 kubewatch 的扩展和简化版本。</p><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fweaveworks%2Ftf-controller" target="_blank">Weave GitOps' Terraform Controller</a></h3><p>Weave GitOps 的 Terraform 控制器（又名 Weave TF-Controller）是 Flux 的控制器，用于以 GitOps 方式协调 Terraform 资源。借助 Flux 与 Terraform 的强大功能，TF-controller 允许您按照自己的节奏在 Kubernetes 和 Terraform 领域中对基础设施和应用程序资源进行 GitOps 化。</p><h2>文章推荐</h2><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmedium.com%2F%40deepaksharma2494%2Funderstanding-kubernetes-and-docker-easiest-explanation-9505638107e3" target="_blank">了解 Docker 和 Kubernetes：一个简单的解释</a></h3><p>这篇文章以简单易懂的方式解释了 Kubernetes 和 Docker 的概念。文章首先介绍了 Docker 的作用，将应用程序和其依赖项打包成容器，实现跨平台的可移植性。然后，文章详细解释了 Kubernetes 的作用，它是一个容器编排和管理工具，用于自动化应用程序的部署、扩展和管理。文章强调了 Kubernetes 的重要性，它可以帮助解决容器化应用程序的挑战，如负载均衡、服务发现和自动容错。通过理解这两个概念，读者可以更好地了解如何使用 Docker 打包应用程序，并如何使用 Kubernetes 管理和运行这些容器化应用程序。</p><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fovercast.blog%2Fzero-downtime-deployments-with-kubernetes-a-full-guide-71019397b924" target="_blank">使用 Kubernetes 进行零停机部署：完整指南</a></h3><p>这篇文章提供了关于使用 Kubernetes 实现零停机时间部署的全面指南。它介绍了零停机时间部署的基本原理和重要性，并详细解释了 Kubernetes 支持的各种部署策略，如滚动更新、蓝绿部署和金丝雀发布。文章还深入探讨了如何通过 Kubernetes 的服务和 Ingress 来优化流量管理，确保应用程序的高可用性和用户体验。此外，文章还介绍了一些高级的零停机时间技术，如特性标志和 A/B 测试，以进一步提升部署的弹性和可靠性。</p><h2>云原生动态</h2><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.infoq.com%2Fnews%2F2024%2F02%2Fdocker-build-cloud%2F%3FtopicPageSponsorship%3Defb5f5b6-1e14-4b4f-8fdb-fd15c9d625f9" target="_blank">Docker 推出 Docker Build Cloud</a></h3><p>Docker 最近宣布了他们基于云的容器镜像构建工具 Docker Build Cloud 的正式推出。Docker Build Cloud 提供远程共享缓存和针对 AMD64 和 ARM64 CPU 架构的本地构建器，旨在"改善协作"并减少镜像构建时间。</p><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcloudnativenow.com%2Ffeatures%2Fcrossplane-maintainers-add-python-support-to-control-plane%2F" target="_blank">Crossplane 增加对 Python 的支持</a></h3><p>用于管理混合 IT 环境的开源 Crossplane 平台的维护者除了现有的 Go 支持之外，还增加了对 Python 编程语言的支持。</p><p>此外，除了现在将项目托管在 xpkg.upbound.io 上之外，命令行界面 (CLI) 还通过其他子命令进行了扩展，以简化 DevOps 工作流程，xpkg.upbound.io 是唯一符合开放容器计划 (OCI) 规范的注册中心了解 Crossplane 包的内部结构。</p><p>Crossplane 最初由 Upbound 开发，是 Kubernetes 控制平面的扩展，它使用复合资源定义 (XRD) 和 Kubernetes 自定义资源定义 (CRD) 将该控制平面的覆盖范围扩展到旧平台。该功能使得跨多个云和本地 IT 环境集中管理控制平面成为可能。随着 Crossplane 1.15 版本的发布，IT 团队现在还可以使用 Kubernetes 应用程序编程接口 (API) 服务器中的验证库根据其模式离线验证资源。</p><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.infoq.com%2Fnews%2F2024%2F02%2Fgrab-kafka-kubernetes-aws-nth%2F%3FtopicPageSponsorship%3Defb5f5b6-1e14-4b4f-8fdb-fd15c9d625f9" target="_blank">Grab 改进 K8s 上的 Kafka 容错能力</a></h3><p>Grab 更新了 Kubernetes 上的 Kafka 设置，以提高容错能力，并完全消除 Kafka 代理意外终止时的人为干预。为了解决初始设计的缺点，团队集成了 AWS Node Termination Handler (NTH)，使用负载均衡器控制器进行目标组映射，并切换到 ELB 卷进行存储。</p><p>两年来，Grab 一直在生产环境中使用 Strimzi 在 Kubernetes ( EKS ) 上运行 Apache Kafka，作为其 Coban 实时数据平台的一部分。该团队之前利用 Strimzi（现在是 CNCF 孵化项目），通过将经过验证的身份验证、授权和机密性机制应用于所有服务器-服务器和客户端-服务器集成来增强 Kafka 集群安全性。</p><blockquote><p>本文由博客一文多发平台 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopenwrite.cn%3Ffrom%3Darticle_bottom" target="_blank">OpenWrite</a> 发布！</p></blockquote></div>
                                    ]]>
            </description>
            <pubDate>Mon, 26 Feb 2024 09:55:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/4197945/blog/11044789</guid>
            <link>https://my.oschina.net/u/4197945/blog/11044789</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[2024 年 Apache DolphinScheduler RoadMap：引领开源调度系统的未来]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>非常欢迎大家来到 Apache DolphinScheduler 社区！随着开源技术在全球范围内的快速发展，社区的贡献者 <strong>「同仁」</strong> 一直致力于构建一个强大而活跃的开源调度系统社区，为用户提供高效、可靠的任务调度和工作流管理解决方案。</p><p><img src="https://oscimg.oschina.net/oscnet/up-6e52878282cac3d28604d1cbd49899728c9.png" alt="file" referrerpolicy="no-referrer"></p><p>在过去的一段时间里，我们取得了一些重要的成就，但我们的愿景远未实现。为了更好地满足用户需求和推动项目的发展，我们在 2024 新春伊始，制定了以下 Roadmap，将在未来的版本中实现一系列激动人心的功能和改进。</p><h2>当前社区状态</h2><p>2024 年 roadmap 有两个来源，部分是来自 2023 年发起但是没有开始实施，或者实施了部分的议题，另一部分是最新新增的议题。2024 年 roadmap 可以分成如下几个部分</p><p><strong>云原生相关</strong>： 我们希望增加 K8S executor 复用 K8S 提供的能力做弹性资源管理、监控和失败重试等</p><p><strong>任务插件增强</strong>： 我们收到了用户关于任务插件的诉求，将会进一步支持 streaming 类型的任务、trigger 类型插件等，除此之外，我们还希望统一在 worker 和 master 中运行的任务、以及为任务插件增加生命周期的接口。于此同时我们会持续关注动态任务组件的功能，希望以后可以对任务组件单独发版保证迭代频率</p><p><strong>DataOps 相关</strong>：希望引入 data ops 相关功能，通过集成 git 供应商来实现 git ops，最终实现工作流 CICD&nbsp;</p><p><strong>测试</strong>： 我们会继续完善和增加项目单元测试覆盖率，并且逐步补充 API 部分的测试</p><p><strong>其他优化</strong>：引入工作流事件触发功能；优化审计日志</p><h3>云原生相关</h3><p>我们希望引入 K8S executor 作为 dispatcher 将 dolphinscheduler 的任务分发到 K8S 中，K8S executor 的好处是我们可以有更高的资源利用率；沿用 K8S 的监控机制，实现 pod level 的监控；沿用 pod 容错做任务容错。</p><p>这个设计的核心是将 executor 的抽象出来变成可配置的， 用户可以选择 K8S 或者非 K8S 的 executor，如果选择 K8S executor ，dolphinscheduler 会将任务提交到 K8S API server ，每个任务启动一个 worker，运行一个 pod。这一点的好处是 worker 不是一个长期运行的资源，而是仅当有任务的时候才需要启动。当业务低谷的时候，我们有空运行的 worker 来等待任务运行。</p><p>详情请看链接：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdolphinscheduler%2Fissues%2F13316" target="_blank">https://github.com/apache/dolphinscheduler/issues/13316</a></p><p><img src="https://oscimg.oschina.net/oscnet/up-bcabca103a55182159cc091dd62f7578835.png" alt="file" referrerpolicy="no-referrer"></p><h3>任务插件增强</h3><p><strong>streaming 任务类型增强</strong></p><p>2023 年 dolphinscheduler 社区增加了 streaming 任务类型的支持，但是是使用 shell 提交 flink 任务，一经推出收获了不少用户。当时实现的是一个简单版本，想看看用户反馈，开发者在开发过程，以及用户的使用中发现了部分可优化项。这部分优化项目我们希望能在 2024 年有部分进展，其中包括</p><ul><li>使用 flink sdk 去创建和提交任务，目前的 shell 方式提交不能很好的监控和处理运行中的任务，使用 sdk 可以有更多功能的支持，详情请看链接：&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdolphinscheduler%2Fissues%2F11440" target="_blank">https://github.com/apache/dolphinscheduler/issues/11440</a></li><li>支持 flink sql</li><li>增加 flink 的指标</li><li>增加 checkpoints savepoint 管理，保证任务失败重试等异常情况能继续执行</li></ul><p>详情请查看 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdolphinscheduler%2Fissues%2F11352" target="_blank">https://github.com/apache/dolphinscheduler/issues/11352</a></p><p><strong>动态任务组件 &amp; 任务单独发版</strong></p><p>这个任务是引入动态任务组件的概念，将任务组件的参数通过后端定义，然后在前端渲染，希望通过这样方法化简任务组件的开发流程，在参数的输入类型没有新增的情况下，可以不修改或者少修改前端代码而实现任务组件的新增和修改。</p><p>详情请看链接：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdolphinscheduler%2Fissues%2F12526" target="_blank">https://github.com/apache/dolphinscheduler/issues/12526</a></p><p>同时这个任务也是我们将任务插件单独发版的前置任务，任务插件单独发版也是非常重要的功能，实现了这个功能后，我们可以加快任务插件的发版频率，保证用户使用的是功能丰富、最新的任务插件。例如我们有一个新的任务插件 A ，这个插件在昨天被 merge 到 dev 分支，那么我们今天就能安排这个插件的发版。又例如我们发现了已经发版的任务插件 B 有比较严重的 bug，在，这个 bug 被 fix 后，我们就能安排插件的 bugfix 版本发版。</p><p>这个任务已经实现了已经简单的 demo，详情请看链接： <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdolphinscheduler%2Fissues%2F12526" target="_blank">https://github.com/apache/dolphinscheduler/issues/12526</a></p><p><strong>任务插件生命周期管理</strong></p><p>为任务插件增加 close 方法从而更好的管理任务插件，特别是需要关闭资源的的任务组件，如数据库、云计算资源任务等。我们目前为任务插件定义了 init、handle、cancel 等方法，对于关闭资源的方法都是在任务中单独实现的，所以希望抽象一个 close 方法统一处理需要关闭资源的任务。</p><p>详情请看链接： <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdolphinscheduler%2Fissues%2F14877" target="_blank">https://github.com/apache/dolphinscheduler/issues/14877</a></p><p><strong>统一 worker 和逻辑任务</strong></p><p>dolphinscheduler 现在有两个类型的任务 spi，分别是 worker 任务和逻辑任务，这两种任务类型分别是运行在 worker 上的，以及运行在 master 上的。不同的 spi 导致两种任务有不同的生命周期管理，并且不利于后面动态任务组件的实现，所以需要将两种任务尽可能弄成统一 spi。</p><p>详情请看链接： <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdolphinscheduler%2Fissues%2F14823" target="_blank">https://github.com/apache/dolphinscheduler/issues/14823</a></p><h3>Git Ops</h3><p>dolphinscheduler 在处理生产和开发环境的时候，只能通过 json 导入导出来实现，社区部分伙伴建议我们可以使用 gitops 方法论来实现开发到生产环境的部署。GitOps 是一种基于版本控制系统的持续交付和基础设施管理的方法。它的核心理念是将整个系统的状态和配置存储在版本控制库中，通过 Git 的特性实现对系统的自动化管理和持续交付。</p><p><strong>gitops 支持</strong></p><p>希望将工作流相关资源的校验、工作流部署到生产环境的功能集成到 dolphinscheduler 中，集成之后只需要在 dolphinscheduler 配置 git 供应商的 url 和鉴权信息，就能在远程仓库中有新的 push 事件后，立马触发工作流的更新操作，从而保证生产中的工作流和远端 git 供应商的定义是一样的，实现客户的 cicd ，保证流程简单便捷</p><p><strong>测试</strong></p><p>测试对于开源软件至关重要，它不仅确保软件质量和稳定性，还提高了用户体验。通过全面的测试，可以及时发现和修复潜在的问题，增强软件的可靠性。测试也是保证新功能引入不破坏现有功能的关键，为开源项目的可持续发展提供了坚实的基础。dolphinscheduler 社区从 2023 年一直在努力提高测试覆盖度、并做了优化让贡献者更加方便的写测试，但是测试的增强是一个长期的工作，2024 年我们会坚持这部分内容</p><p><strong>API 测试</strong></p><p>在 api 层面的测试，确保我们核心的 api 接口能正常运行。当被 api 测试覆盖的接口，可以确保每次提交新代码时，API 接口逻辑和依赖关系都正确，不会破坏之前已有的功能。补充缺失的单元测试，确保接口与接口之间的连接性。dolphinscheduler 社区在 2023 年已经启动 api 测试的补充，目前部分核心接口已经覆盖，希望在 2024 年将尽可能多的 api 接口进行覆盖。</p><p>详情请看链接： <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdolphinscheduler%2Fissues%2F10411" target="_blank">https://github.com/apache/dolphinscheduler/issues/10411</a></p><p><strong>UT 增强</strong></p><p>单元测试对比 API 测试是粒度更加小的，他能保证部分代码块如预期般工作，在此之前我们升级到了 junit5，并且增加了 worker 部分的测试覆盖率，与 api 测试一样的是，这是一个长期的工作，同时需要更多有激情的贡献者参与到该功能的建设中。</p><p>详情请看链接： <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdolphinscheduler%2Fissues%2F10573" target="_blank">https://github.com/apache/dolphinscheduler/issues/10573</a></p><h3>其他优化</h3><p><strong>工作流 trigger 支持</strong></p><p>引入 trigger 插件实现事件触发，目前我们工作流的启动方式有两种，用户手动触发；定时触发。事件触发是希望增加其中的范围，让工作流可以被更多的事件触发。目前打算支持的事件包括</p><ul><li>定时触发： 目前已经有的触发方式</li><li>消息队列触发：通过消息监听消息队列的方式触发工作流</li><li>HTTP、TCP、SMTP 触发：通过监听 HTTP、TCP、SMTP 特定事件触发工作流</li></ul><p><img src="https://oscimg.oschina.net/oscnet/up-b839753a55a744119a2477182268d00ef2f.png" alt="file" referrerpolicy="no-referrer"></p><p>详情请看链接： <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdolphinscheduler%2Fissues%2F15330" target="_blank">https://github.com/apache/dolphinscheduler/issues/15330</a></p><p><strong>审计日志增强</strong></p><p>Apache Dolphinscheduler 会在 2024 年增加更多的审计日志相关的功能，保证将用户对资源的操作能记录下来，这里的资源包括项目、工作流、任务、资源中心文件、udf、数据源等在 dolphinscheduler 中会被创建、修改、删除、更新的资源。</p><p>我们目前打算通过 AOP 的方式实现这个功能，<strong>实现了审计日志后</strong>，用户可以更好的查看资源创建情况，当出现意外情况时及时通过审计日志发现历史操作。</p><p>目前有一个 PR 初步实现了这个功能，详情请看链接： <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdolphinscheduler%2Fissues%2F15423" target="_blank">https://github.com/apache/dolphinscheduler/issues/15423</a></p><p>随着这份路线图的实施，Apache DolphinScheduler 社区将持续优化和扩展我们的调度系统，为用户提供更加强大、灵活和高效的解决方案。</p><p>我们相信，通过社区成员的共同努力和用户的积极反馈，Apache DolphinScheduler 将继续领跑开源调度和工作流管理领域，为企业和开发者带来更多的价值和可能性。让我们携手并进，共同见证 Apache DolphinScheduler 的蓬勃发展和创新旅程。</p><p>&nbsp;</p><blockquote><p>本文由 <a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.whaleops.com" target="_blank">白鲸开源科技</a> 提供发布支持！</p></blockquote></div>
                                    ]]>
            </description>
            <pubDate>Mon, 26 Feb 2024 09:47:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/dailidong/blog/11044801</guid>
            <link>https://my.oschina.net/dailidong/blog/11044801</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[基于 Qt5 的 Windows 截图工具，可代替微信和搜狗截图]]>
            </title>
            <description>
                <![CDATA[<p><img src="https://gitee.com/tujiaw/ntscreenshot/raw/master/ntscreenshot_demo.png" alt="ntscreenshot" referrerpolicy="no-referrer"><img src="https://gitee.com/tujiaw/ntscreenshot/raw/master/ntscreenshot_demo2.png" alt="ntscreenshot" referrerpolicy="no-referrer"></p><p><a href="https://gitee.com/tujiaw/ntscreenshot/tree/master/release">已编译好的绿色包下载</a></p><h1><a id="user-content-ntscreenshot" class="anchor" href="https://gitee.com/tujiaw/ntscreenshot#ntscreenshot"></a>ntscreenshot</h1><p>Windows 截图工具，基本功能都实现了，陆陆续续也花了不少时间，<a href="https://gitee.com/tujiaw/ntscreenshot">源码地址</a>有兴趣的 Star 一下吧。</p><h1><a id="user-content-功能列表" class="anchor" href="https://gitee.com/tujiaw/ntscreenshot#%E5%8A%9F%E8%83%BD%E5%88%97%E8%A1%A8"></a>功能列表</h1><h2><a id="user-content-基本的截图功能" class="anchor" href="https://gitee.com/tujiaw/ntscreenshot#%E5%9F%BA%E6%9C%AC%E7%9A%84%E6%88%AA%E5%9B%BE%E5%8A%9F%E8%83%BD"></a>基本的截图功能</h2><ul><li>托盘菜单</li><li>全局快捷键设置，默认 F5 截图，F6 贴图</li><li>开机自启动设置</li><li>移动鼠标自动感知选区</li><li>放大器，放大当前鼠标所在像素点周围区域</li><li>显示选区大小，鼠标光标座标，光标所在位置像素的颜色</li><li>c 键复制当前颜色</li><li>移动鼠标选择选区</li><li>方向键进行像素级移动</li><li>截图背景透明度设置</li><li>保存截图到剪切板</li><li>保存截图到文件目录</li></ul><h2><a id="user-content-贴图" class="anchor" href="https://gitee.com/tujiaw/ntscreenshot#%E8%B4%B4%E5%9B%BE"></a>贴图</h2><ul><li>贴图管理</li><li>贴图边框</li></ul><h2><a id="user-content-标注" class="anchor" href="https://gitee.com/tujiaw/ntscreenshot#%E6%A0%87%E6%B3%A8"></a>标注</h2><ul><li>基本图形文字标注</li><li>支持改颜色，画笔、字体大小</li><li>支持马赛克</li><li>支持撤销</li></ul><h2><a id="user-content-上传图床" class="anchor" href="https://gitee.com/tujiaw/ntscreenshot#%E4%B8%8A%E4%BC%A0%E5%9B%BE%E5%BA%8A"></a>上传图床</h2><p>需要配置服务器</p><h2><a id="user-content-设置" class="anchor" href="https://gitee.com/tujiaw/ntscreenshot#%E8%AE%BE%E7%BD%AE"></a>设置</h2><p>托盘右键菜单打开设置窗口</p>]]>
            </description>
            <pubDate>Mon, 26 Feb 2024 09:45:10 GMT</pubDate>
            <guid isPermaLink="false">https://gitee.com/tujiaw/ntscreenshot</guid>
            <link>https://gitee.com/tujiaw/ntscreenshot</link>
        </item>
        <item>
            <title>
                <![CDATA[GitHub Copilot 会扩大代码的不安全性]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>开发者安全公司 Snyk 发文<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsnyk.io%2Fblog%2Fcopilot-amplifies-insecure-codebases-by-replicating-vulnerabilities%2F" target="_blank">指出</a>，GitHub Copilot 可以复制代码中现有的安全问题。即当用户现有的代码库存在安全问题时，GitHub Copilot 可能会基于此提供一些不安全的代码建议；「这意味着，项目中现有的安全债务会让使用 Copilot 的不安全开发变得更不安全。」</p><p>另一方面，如果代码库已经高度安全，则 Copilot 生成存在安全问题的代码的可能性就会较小，因为它可以利用的不安全代码上下文较少。这也极大地激励了人们投入时间来减少现有代码库中的漏洞，从而减少未来通过生成式 AI 编码助手引入的问题。</p><p>Snyk 表示， GitHub Copilot、Amazon CodeWhisperer 和 ChatGPT 等生成式 AI 编码助手在生产力和代码效率方面实现了重大飞跃。但这些工具不理解代码语义，因此无法对其进行判断。</p><p>GitHub Copilot 根据从大量现有代码存储库中学到的模式和结构生成代码片段。虽然这种方法有优点，但在安全方面也存在明显的缺点。Copilot 的代码建议可能会无意中复制邻接文件中存在的现有安全漏洞和不良做法，导致不安全的编码实践，并为一系列安全漏洞打开大门。</p><p><img height="287" src="https://oscimg.oschina.net/oscnet/up-af08dd68db7fed4ac1bc73918bf7af185e2.png" width="500" referrerpolicy="no-referrer"></p><p>为了减少 AI 助手生成的代码中重复出现现有的安全问题，Snyk 建议采取以下措施：</p><ul><li>开发人员应该对代码进行手动审查。</li><li>安全团队应该建立 SAST（security application security testing）护栏，包括策略。</li><li>开发人员应遵守安全编码指南。</li><li>安全团队应该为开发团队提供培训和意识，并对每个团队积压的问题进行优先级和分类。</li><li>执行团队应强制要求设置安全护栏。</li></ul><p>更多详情可<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsnyk.io%2Fblog%2Fcopilot-amplifies-insecure-codebases-by-replicating-vulnerabilities%2F" target="_blank">查看官方博客</a>。&nbsp;</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 26 Feb 2024 08:12:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/280334/github-copilot-amplifies-insecure-codebases</guid>
            <link>https://www.oschina.net/news/280334/github-copilot-amplifies-insecure-codebases</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[🔥 周热点 | Warp 正式发布 Linux 版本；披着 Windows 11 外衣的 Ubuntu：能跑 exe 程序、支持 Android 应用.....]]>
            </title>
            <description>
                <![CDATA[回顾一周热门资讯。2024.02.19-2024.02.25]]>
            </description>
            <pubDate>Mon, 26 Feb 2024 07:39:00 GMT</pubDate>
            <guid isPermaLink="false">https://mp.weixin.qq.com/s?__biz=MzA4OTI5NjUwOA==&#38;mid=2649094405&#38;idx=1&#38;sn=76fa95b2d568a613ee5903f8d3976d4a&#38;chksm=880c4216bf7bcb00d586ffe8ded38f9c3b4426ec5ddfc0f8617a965327c402a814e03533dd08&#38;token=1383836775&#38;lang=zh_CN#rd</guid>
            <link>https://mp.weixin.qq.com/s?__biz=MzA4OTI5NjUwOA==&#38;mid=2649094405&#38;idx=1&#38;sn=76fa95b2d568a613ee5903f8d3976d4a&#38;chksm=880c4216bf7bcb00d586ffe8ded38f9c3b4426ec5ddfc0f8617a965327c402a814e03533dd08&#38;token=1383836775&#38;lang=zh_CN#rd</link>
        </item>
        <item>
            <title>
                <![CDATA[1024 分辨率下最快模型，字节跳动文生图开放模型 SDXL-Lightning 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><img src="https://oscimg.oschina.net/oscnet/up-73d9ffe00a0d63e36ff98fa923e79b6bf92.png" alt="" referrerpolicy="no-referrer"></p><blockquote><p>文章来源｜字节跳动智能创作团队</p></blockquote><p>很高兴跟大家分享我们最新的文生图模型 —— SDXL-Lightning，它实现了前所未有的速度和质量，并且已经向社区开放。</p><p>模型：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhuggingface.co%2FByteDance%2FSDXL-Lightning" target="_blank">https://huggingface.co/ByteDance/SDXL-Lightning</a></p><p>论文：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Farxiv.org%2Fabs%2F2402.13929" target="_blank">https://arxiv.org/abs/2402.13929</a></p><p><img src="https://oscimg.oschina.net/oscnet/up-dbb8391e5301fe0818c07c5007701e0819d.png" alt="" referrerpolicy="no-referrer"></p><h2>闪电般的图像生成</h2><p>生成式 AI 正凭借其根据文本提示（text prompts）创造出惊艳图像乃至视频的能力，赢得全球的瞩目。然而，当前最先进的生成模型依赖于扩散过程（diffusion），这是一个将噪声逐步转化为图像样本的迭代过程。这个过程需要耗费巨大的计算资源并且速度较慢，在生成高质量图像样本的过程中，单张图像的处理时间约为 5 秒，其中通常需要多次（20 到 40 次）调用庞大的神经网络。这样的速度限制了有快速、实时生成需求的应用场景。如何在提升生成质量的同时加快速度，是当前研究的热点领域，也是我们工作的核心目标。</p><p>SDXL-Lightning 通过一种创新技术——<strong>渐进式对抗蒸馏（Progressive Adversarial Distillation）</strong>——突破了这一障碍，实现了前所未有的生成速度。该模型能够在短短 2 步或 4 步内生成极高质量和分辨率的图像，将计算成本和时间降低十倍。我们的方法甚至可以在 1 步内为超时敏感的应用生成图像，虽然可能会稍微牺牲一些质量。</p><p>除了速度优势，SDXL-Lightning 在图像质量上也有显著表现，并在评估中超越了以往的加速技术。在实现更高分辨率和更佳细节的同时保持良好的多样性和图文匹配度。</p><p><img src="https://oscimg.oschina.net/oscnet/up-6b51a9297b11683e92da115b696de953036.gif" alt="" referrerpolicy="no-referrer"> 速度对比示意</p><p>原始模型（20 步），我们的模型（2 步）</p><h2>模型效果</h2><p>我们的模型可以通过 1 步、2 步、4 步和 8 步来生成图像。推理步骤越多，图像质量越好。</p><p>以下是我们的 4 步生成结果： <img src="https://oscimg.oschina.net/oscnet/up-015feba9e22188c5c0903fb75dce3e8b13f.png" alt="" referrerpolicy="no-referrer"></p><p>以下是我们的 2 步生成结果： <img src="https://oscimg.oschina.net/oscnet/up-4943949b28735497159ae73bd6222f0c97a.png" alt="" referrerpolicy="no-referrer"></p><p>与以前的方法（Turbo 和 LCM）相比，我们的方法生成的图像在细节上有显著改进，并且更忠实于原始生成模型的风格和布局。</p><p><img src="https://oscimg.oschina.net/oscnet/up-99a60575458ab118c0706dcfb0fcd00f199.png" alt="" referrerpolicy="no-referrer"></p><h2>回馈社区，开放模型</h2><p>开源开放的浪潮已经成为推动人工智能迅猛发展的关键力量，字节跳动也自豪地成为这股浪潮的一部分。我们的模型基于目前最流行的文字生成图像开放模型 SDXL，该模型已经拥有一个繁荣的生态系统。现在，我们决定将 SDXL-Lightning 开放给全球的开发者、研究人员和创意从业者，以便他们能访问并运用这一模型，进一步推动整个行业的创新和协作。</p><p>在设计 SDXL-Lightning 时，我们就考虑到与开放模型社区的兼容。社区中已有众多艺术家和开发者创建了各种各样的风格化图像生成模型，例如卡通和动漫风格等。为了支持这些模型，我们提供 SDXL-Lightning 作为一个增速插件，它可以无缝地整合到这些多样风格的 SDXL 模型中，为各种不同模型加快图像生成的速度。</p><p><img src="https://oscimg.oschina.net/oscnet/up-9b1d4811ae28daa9f18b7dc72848ab191b5.png" alt="" referrerpolicy="no-referrer"> 我们的模型也可以和目前非常流行的控制插件 ControlNet 相结合，实现极速可控的图片生成。</p><p><img src="https://oscimg.oschina.net/oscnet/up-9215316be3b78c2af2c84a7df0cc9760b1f.png" alt="" referrerpolicy="no-referrer"> 我们的模型也支持开源社区里目前最流行的生成软件 ComfyUI，模型可以被直接加载来使用： <img src="https://oscimg.oschina.net/oscnet/up-db434e5743cd4966699ba28133c7606abfe.png" alt="" referrerpolicy="no-referrer"></p><h2>关于技术细节</h2><p>从理论上来说，图像生成是一个由噪声到清晰图像的逐步转化过程。在这一过程中，神经网络学习在这个转化流（flow）中各个位置上的梯度。</p><p>生成图像的具体步骤是这样的：首先，我们在流的起点，随机采样一个噪声样本，接着用神经网络计算出梯度。根据当前位置上的梯度，我们对样本进行微小的调整，然后不断重复这一过程。每一次迭代，样本都会更接近最终的图像分布，直至获得一张清晰的图像。</p><p><img src="https://oscimg.oschina.net/oscnet/up-586c0cfa75fa7c3308fa9421e66f6bb352d.png" alt="" referrerpolicy="no-referrer"><em>图：生成流程</em><em>（</em><em>图片来自</em><em>：</em><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Farxiv.org%2Fabs%2F2011.13456" target="_blank">https://arxiv.org/abs/2011.13456</a></em><em>）</em></p><p>由于生成流复杂且非直线，生成过程必须一次只走一小步以减少梯度误差累积，所以需要神经网络的频繁计算，这就是计算量大的原因。</p><p><img src="https://oscimg.oschina.net/oscnet/up-13ed5521422c15757fe99d8e1c85130cdc0.png" alt="" referrerpolicy="no-referrer"><em>图：曲线流程</em><em>（</em><em>图片来自</em><em>：</em><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Farxiv.org%2Fabs%2F2210.05475" target="_blank">https://arxiv.org/abs/2210.05475</a></em><em>）</em></p><p>为了减少生成图像所需的步骤数量，许多研究致力于寻找解决方案。一些研究提出了能减少误差的采样方法，而其他研究则试图使生成流更加直线化。尽管这些方法有所进展，但它们仍然需要超过 10 个推理步骤来生成图像。</p><p>另一种方法是模型蒸馏，它能够在少于 10 个推理步骤的情况下生成高质量图像。不同于计算当前流位置下的梯度，模型蒸馏改变模型预测的目标，直接让其预测下一个更远的流位置。具体来说，我们训练一个学生网络直接预测老师网络完成了多步推理的后的结果。这样的策略可以大幅减少所需的推理步骤数量。通过反复应用这个过程，我们可以进一步降低推理步骤的数量。这种方法被先前的研究称之为渐进式蒸馏。</p><p><img src="https://oscimg.oschina.net/oscnet/up-6d96b685339c4b2a6d8f5b95cf6be348912.png" alt="" referrerpolicy="no-referrer"><em>图：渐进式蒸馏</em><em>，学生网络预测老师网络多步后的结果</em></p><p>在实际操作中，学生网络往往难以精确预测未来的流位置。误差随着每一步的累积而放大，导致在少于 8 步推理的情况下，模型产生的图像开始变得模糊不清。</p><p>为了解决这个问题，我们的策略是不强求学生网络精确匹配教师网络的预测，而是让学生网络在概率分布上与教师网络保持一致。换言之，学生网络被训练来预测一个概率上可能的位置，即使这个位置并不完全准确，我们也不会对它进行惩罚。这个目标是通过对抗训练来实现的，引入了一个额外的判别网络来帮助实现学生网络和教师网络输出的分布匹配。</p><p>这是我们研究方法的简要概述。在我们的技术论文（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Farxiv.org%2Fabs%2F2402.13929" target="_blank">https://arxiv.org/abs/2402.13929</a>）中，我们提供了更深入的理论分析、训练策略以及模型的具体公式化细节。</p><h2>SDXL-Lightning 之外</h2><p>尽管本研究主要探讨了如何利用 SDXL-Lightning 技术进行图像生成，但我们所提出的渐进式对抗蒸馏方法的应用潜力不局限于静态图像的范畴。这一创新技术也可以被运用于快速且高质量生成视频、音频以及其他多模态内容。我们诚挚邀请您在 HuggingFace 平台上体验 SDXL-Lightning，并期待您宝贵的意见和反馈。</p><p>模型：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhuggingface.co%2FByteDance%2FSDXL-Lightning" target="_blank">https://huggingface.co/ByteDance/SDXL-Lightning</a></p><p>论文：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Farxiv.org%2Fabs%2F2402.13929" target="_blank">https://arxiv.org/abs/2402.13929</a></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 26 Feb 2024 07:36:47 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/6210722/blog/11044777</guid>
            <link>https://my.oschina.net/u/6210722/blog/11044777</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[国内首部文生视频 AI 动画片将在央视开播]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">由中央广播电视总枱制作的中国首部文生视频 AI 动画片《千秋诗颂》，将于 2 月 26 日起在总枱央视综合频道（CCTV-1）18:40 档开播，首次推出六集。</span></p><p><img height="398" src="https://oscimg.oschina.net/oscnet/up-202804fca1b5f2955175a418d3c4a78ad2f.png" width="700" referrerpolicy="no-referrer"></p><p><span style="color:#000000">《千秋诗颂》是国内首部以我国自主 AIGC 技术支撑制作的系列动画片，</span><span style="color:#000000">依托中央广播电视总枱「央视听媒体大模型」，运用 AI 技术聚焦统编语文教材 200 多首诗词，转化为唯美的国风动画片。</span></p><div style="text-align:start"><span style="color:#000000">节目综合运用可控图像生成、人物动态生成、文生视频等最新技术成果，支持了从美术设计到动效生成，再到后期成片的各个环节，实现了「有声言诗和无声画意」的有机融合。</span></div><div style="text-align:start">
 &nbsp;
</div><p><span style="color:#000000">根据介绍，在同等预算条件下，按照传统动画制作流程计算，《千秋诗颂》至少需要 8 个月时间，依托大模型后，制作周期缩短至 4 个月。目前，这项应用仍处于产研结合阶段，未来大模型研发成熟后，制作周期和动画精细度都会加速迭代升级。</span></p><p><span style="color:#000000">节目的技术总指导、上海人工智能实验室领军科学家林达华介绍称，《千秋诗颂》通过科学家和艺术家的跨界合作，不断突破技术与艺术之间的界限，为 AI 技术和媒体创作深度融合的探索迈出了重要一步。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 26 Feb 2024 07:29:09 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/280320</guid>
            <link>https://www.oschina.net/news/280320</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[开源日报 | 为什么挡不住英伟达；Sora 不靠蛮力]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>欢迎阅读 OSCHINA 编辑部出品的开源日报，每天更新一期。</p><h3><span style="color:#e67e22"><strong># 2024.2.23</strong></span></h3><h2><strong><span style="color:#16a085">今日要点</span></strong></h2><p><strong>OpenSource Daily</strong></p><h3><a href="https://www.oschina.net/news/279907/echarts-5-5-0" target="_blank">Apache ECharts 5.5.0 引入 1KB 的客户端轻量运行时</a></h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong style="color:#333333">在 5.5.0 版本中，我们新增了客户端轻量运行时</strong><span style="background-color:#ffffff; color:#333333">，客户端无需加载完整 ECharts 即可实现部分交互。这样，我们可以在服务端渲染图表，然后在客户端加载轻量运行时，实现一些常见的交互。这意味着，</span><strong style="color:#333333">只需要加载&nbsp;4KB 的轻量运行时（gzip 后 1KB），即可实现带初始动画和部分常用交互形式的图表</strong><span style="background-color:#ffffff; color:#333333">。这一改进将极大地提升页面加载速度，特别是对于移动端的体验。</span></p><h3><a href="https://www.oschina.net/news/279954/java-virtual-threads-pinning-issue" target="_blank">Oracle 致力解决 Java 虚拟线程 「Pinning」 问题</a></h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">虚拟线程在 2023 年 9 月发布的 JDK 21 中正式成为一项稳定功能。该功能在 Java 生态系统中反响极佳，但仍存在一些痛点。Oracle 日前在&nbsp;Inside Java 网站上详细<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Finside.java%2F2024%2F02%2F21%2Fquality-heads-up%2F" target="_blank">介绍</a>了虚拟线程的 「Pinning」 问题。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">最常见的两种情况是：(a) 虚拟线程在 synchronized method 中驻留（如执行 socket I/O）；(b)<span>&nbsp;</span><span style="color:#333333">虚拟线程阻塞进入&nbsp;synchronized method</span>，因为对象的相关监视器被另一个线程持有。</p><p><img src="https://oscimg.oschina.net/oscnet/up-6a2e93ce6802a570c1704258c9a589e998e.png" referrerpolicy="no-referrer"></p><hr><h2><strong><span style="color:#16a085">今日观察</span></strong></h2><p><img src="https://oscimg.oschina.net/oscnet/up-b2647b78f90f168fbe94870901603370b9e.png" referrerpolicy="no-referrer"></p><p><span style="background-color:#ffffff; color:#333333">- 微博<span>&nbsp;</span></span><u><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1464484735%2FO1OCA77rn" target="_blank">zibuyu9</a></em></u></p><hr><h2><span style="color:#16a085"><strong>今日推荐</strong></span></h2><p><img src="https://oscimg.oschina.net/oscnet/up-154377718c801865b6bdcbff50e301efb9c.png" referrerpolicy="no-referrer"></p><hr><h2><span style="color:#16a085"><strong>开源之声</strong></span></h2><p><img height="592" src="https://oscimg.oschina.net/oscnet/up-4ce7cc4480c1bf19d2608d9b28aaefcc0ff.png" width="1650" referrerpolicy="no-referrer"></p><p><img src="https://oscimg.oschina.net/oscnet/up-199b252f58314913ee2d31f583785b25af9.png" referrerpolicy="no-referrer"></p><hr><h2><span style="color:#16a085"><strong>每日项目榜</strong></span></h2><p><strong><span style="background-color:#e67e22">每日 Gitee 精选</span></strong></p><p><img src="https://oscimg.oschina.net/oscnet/up-268a8c2b0c4687d66bb89c8efe12b66fed9.png" referrerpolicy="no-referrer"></p><blockquote><h4><strong><span style="background-color:#e67e22">在线阅读完整日报内容，访问：</span></strong><br><u><em><strong><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/92n4c9ryegpcq1z/015_sora_KcAkRNX93Y.pdf">开源日报第 015 期：为什么挡不住英伟达；Sora 不靠蛮力</a></strong></em></u></h4></blockquote><hr><p><strong>往期回顾</strong></p><ul><li><a href="https://oscimg.oschina.net/public_shard/%E5%BC%80%E6%BA%90%E6%97%A5%E6%8A%A5%E7%AC%AC013%E6%9C%9F%EF%BC%9A%E7%AD%89%E5%88%B0%20Sora%20%E5%BC%80%E6%BA%90%E4%BA%86%E7%AB%8B%E5%88%BB%E6%8E%A8%E5%87%BA%E5%B1%9E%E4%BA%8E%E6%88%91%E4%BB%AC%E8%87%AA%E5%B7%B1%E7%9A%84%E5%A4%A7%E6%A8%A1%E5%9E%8B.pdf">开源日报第 013 期：等到 Sora 开源了立刻推出属于我们自己的大模型</a></li><li><a href="https://oscimg.oschina.net/public_shard/%E5%BC%80%E6%BA%90%E6%97%A5%E6%8A%A5%E7%AC%AC012%E6%9C%9F%EF%BC%9ASora%20%E7%BB%99%E4%B8%AD%E5%9B%BD%20AI%20%E5%B8%A6%E6%9D%A5%E7%9A%84%E7%9C%9F%E5%AE%9E%E5%8F%98%E5%8C%96%EF%BC%9BDart%203.3%20%E5%8F%91%E5%B8%83.pdf">开源日报第 012 期：Sora 给中国 AI 带来的真实变化；Dart 3.3 发布</a></li><li><a href="https://oscimg.oschina.net/public_shard/%E5%BC%80%E6%BA%90%E6%97%A5%E6%8A%A5%E7%AC%AC11%E6%9C%9F%EF%BC%9A%E7%9B%AE%E5%89%8D%E8%BF%98%E6%B2%A1%E6%9C%89%E2%80%9C%E5%A4%A7%E6%A8%A1%E5%9E%8B%E7%89%88Linux%E2%80%9D.pdf">开源日报第 011 期：目前还没有「大模型版 Linux」</a></li><li><a href="https://oscimg.oschina.net/public_shard/%E5%BC%80%E6%BA%90%E6%97%A5%E6%8A%A5%E7%AC%AC010%E6%9C%9F%EF%BC%9ATauri%20v2%20%E6%94%AF%E6%8C%81%20Android%20%E5%92%8C%20iOS%EF%BC%8C%E8%B7%A8%E5%B9%B3%E5%8F%B0%E5%BC%80%E5%8F%91%E6%96%B0%E9%80%89%E6%8B%A9.pdf">开源日报第 010 期：Tauri v2 支持 Android 和 iOS，跨平台开发新选择</a></li><li><a href="https://oscimg.oschina.net/public_shard/%E5%BC%80%E6%BA%90%E6%97%A5%E6%8A%A5009%E6%9C%9F%EF%BC%9AVue.js%E8%AF%9E%E7%94%9F10%E5%91%A8%E5%B9%B4%EF%BC%9B%E6%89%8E%E5%85%8B%E4%BC%AF%E6%A0%BC%E8%A7%A3%E9%87%8AMeta%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E5%BC%80%E6%BA%90%E5%85%B6AI%E6%8A%80%E6%9C%AF.pdf">开源日报第 009 期：Vue.js 诞生 10 周年；扎克伯格解释 Meta 为什么要开源其 AI 技术</a></li><li><a href="https://www.oschina.net/news/277585">开源日报第 008 期：推动中国开源软硬件发展的经验与建议</a></li><li><a href="https://www.oschina.net/news/277415">开源日报第 007 期：「Linux 中国」 开源社区宣布停止运营</a></li><li><a href="https://www.oschina.net/news/277214">开源日报第 006 期：选择技术栈一定要选择开源的</a></li><li><a href="http://www.oschina.net/news/277040">开源日报第 005 期：RISC-V 万兆开源交换机发售；npm 存在大量武林外传视频</a></li><li><a href="https://www.oschina.net/news/276864">开源日报第 004 期：百度输入法在候选词区域植入广告；大神用 Excel 构建 CPU</a></li></ul><p>&nbsp;</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 26 Feb 2024 04:06:19 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/280290</guid>
            <link>https://www.oschina.net/news/280290</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[JetBrains 在其所有 IDE 中推出新终端测试版]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">JetBrains 宣布在其 IDE 中集成了新终端（Beta），并将从 2024.1 版本开始在 UI 中提供。用户可以 Settings/Preferences | Tools | Terminal | Enable New Terminal 中切换旧版和新版终端。目前，它仅支持 Bash、Zsh 和 PowerShell，其他 shell 仍在开发中。</span></p><p><span style="color:#000000"><img alt="" height="200" src="https://oscimg.oschina.net/oscnet/up-e70691932299e4ec5737278cff2d512db84.png" width="500" referrerpolicy="no-referrer"></span></p><p><span style="color:#000000">新终端保留了旧终端的主要功能，并添加可提高生产力和效率的新功能。「新终端旨在结合基本功能和高级功能，是一种熟悉的工具，以全新的方式呈现，并具有一组扩展的功能。我们的目标是保留终端工作的功能，增强便利性和简单性，并解决长期存在的问题。」</span></p><h4><strong><span style="color:#000000">视觉变化</span></strong></h4><p><span style="color:#000000">从视觉上看，新终端与新 UI 的外观和风格保持一致，并且可在从 2024.1 版本开始的所有 JetBrains IDE 中使用。新终端的主要视觉区别在于每个命令都以单独的块呈现，以帮助用户快速定位每个命令的开始和结束，增强输出的可读性。此更改还带来了其他新功能：例如使用箭头轻松在块间导航，以及使用户能够轻松在提示和输出之间切换的⌘↑ / ⌘↓（macOS）和 Ctrl+↑ / Ctrl+↓（Windows 和 Linux）快捷键。</span></p><p><img height="201" src="https://oscimg.oschina.net/oscnet/up-39347304fe50e1769512e9e718eea543d82.png" width="500" referrerpolicy="no-referrer"></p><p><span style="color:#000000">另一个重大变化是 command completio 功能，支持命令、路径、参数和选项，旨在简化命令输入。</span></p><p><img height="206" src="https://oscimg.oschina.net/oscnet/up-94190c719098f89c43bacfda6e1af905baf.png" width="500" referrerpolicy="no-referrer"></p><p><span style="color:#000000">以及新增了便捷的命令历史记录，可以进行筛选，更容易浏览最近执行的命令。改进了配色方案，使得调色板现在既美观又易于阅读。</span></p><p><img height="204" src="https://oscimg.oschina.net/oscnet/up-8464c12985cb2039b524c53c86e47d95883.png" width="500" referrerpolicy="no-referrer"></p><h4><strong><span style="color:#000000">架构变化</span></strong></h4><p><span style="color:#000000">一些显著变更包括：</span></p><p><span style="color:#000000">完全控制了终端的提示区域。用户现在可以在命令输入期间使用编辑器动作并使用鼠标移动光标。在这个阶段，可能会存在一些问题，比如 shell 快捷键无法工作，行为不符合预期等，团队正在努力解决这些问题。</span></p><p><span style="color:#000000">重新设计了 command completion 功能，将 IDE 的所有知识整合到建议中。由于相关更新仍在进行中，可能会导致一些补全选项不可用，或者与 shell-based completion 不同。</span></p><p><span style="color:#000000">添加了我们自己的命令提示符，显示当前目录、Git 分支、Python 虚拟环境和 Anaconda 环境。此举旨在提供丰富的现代命令提示符，即使在 shell 中未配置也是如此。鉴于有些人更喜欢使用与系统终端中相同的提示符，项目团队还在研究支持这种情况的自定义选项。</span></p><h4><strong><span style="color:#000000">下一步</span></strong></h4><p><span style="color:#000000">JetBrains 计划为新终端提供许多其他功能，比如更多的可视化自定义选项、在内置和 Shell 提示符之间切换的能力、区块的上下文操作、更好的选项卡管理和 AI 新功能。</span></p><p><span style="color:#000000">包括引入更多终端自定义选项（字体、间距等）、改进 command completion 功能、添加在内置提示符和 shell 提示符之间切换的功能、引入块的上下文操作以及简化终端中的选项卡管理。以及计划实施有用的 AI 功能，例如协助输入命令或解释所获得的结果。</span></p><p><span style="color:#000000">更多详情可<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.jetbrains.com%2Fidea%2F2024%2F02%2Fthe-new-terminal-beta-is-now-in-jetbrains-ides%2F" target="_blank">查看官方博客</a>。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 26 Feb 2024 03:28:17 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/280280/jetbrains-ides-new-terminal-beta</guid>
            <link>https://www.oschina.net/news/280280/jetbrains-ides-new-terminal-beta</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Windows + VSCode + WSL 的 Web 开发体验秒了 Mac]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Ruby on Rails 作者 DHH 狠狠地吹了一波 Windows 的开发体验，他表示已使用 Windows PC 超过一周，<strong>在 VSCode、WSL 和英特尔 CPU 的加持下，运行编程测试的速度比 M3 Max 还快</strong>，整体感觉完全可以替代 macOS 进行 Web 开发。</p><blockquote><p><img src="https://oscimg.oschina.net/oscnet/up-b3c494233cc676d511e7a6f7847642826e0.png" referrerpolicy="no-referrer"><em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftwitter.com%2Fdhh%2Fstatus%2F1761830698758066298" target="_blank">https://twitter.com/dhh/status/1761830698758066298</a></u></em></p></blockquote><p>DHH 说道：「微软竟然能把 Linux 与 Windows 整合得这么好。我原以为在 WSL 下运行肯定会受到性能上的影响。或者说，它会变得笨拙和卡顿。但事实并非如此。……因此，我们要为微软点赞！通过与 Linux 和开源握手言和，微软为开发者提供了极具生产力的工具组合。现在，英特尔和 AMD 的芯片也终于在硬件方面给苹果带去了竞争压力。」</p><p>延伸阅读：<u><em><a href="https://www.oschina.net/news/261816/you-can-t-get-faster-than-no-build" target="_blank">DHH 锐评 「打包工具」：前端根本不需要构建 (No Build)</a></em></u></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 26 Feb 2024 03:09:17 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/280277/vscode-wsl-for-web-development</guid>
            <link>https://www.oschina.net/news/280277/vscode-wsl-for-web-development</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Flax Engine —— 多平台 3D 游戏引擎]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff; color:#1f2328">Flax Engine 是一款用 C++ 和 C# 编写的高品质现代 3D 游戏引擎。</span></p><p>特性：</p><ul><li>无缝 C# 和 C++ 脚本编写</li><li>自动绘制调用批处理和实例化</li><li>默认情况下，每个资产都使用异步内容流</li><li>跨平台支持（Windows、Linux、Android、macOS、iOS、PS4、PS5、Switch、Xbox One、Xbox Series X/S...）</li><li>实时全局照明（DDGI 和带有自定义软件光线追踪的反射）</li><li>GPU 光照贴图烘焙</li><li>可视化脚本</li><li>视觉特效工具</li><li>嵌套预制件</li><li>大世界（世界座标的 64 位精度）</li><li>本地化工具</li><li>在线服务（Steam、Xbox Live、PSN...）</li><li>多人游戏网络</li><li>动画工具和功能</li><li>开放世界工具（地形、树叶、雾、关卡流）</li><li>在编辑器中热重载 C#/C++</li><li>技术美术人员的游戏全局变量</li><li>提供完整的源代码</li><li>来自引擎开发人员的直接沟通和帮助</li><li>轻量级开发（完整的仓库克隆 + 编译不到 3 分钟）</li></ul><p><img alt="" height="260" src="https://static.oschina.net/uploads/space/2023/0918/162245_QJFM_4252687.jpg" width="500" referrerpolicy="no-referrer"></p><p><img alt="" height="265" src="https://static.oschina.net/uploads/space/2023/0918/162326_omZj_4252687.jpg" width="500" referrerpolicy="no-referrer"></p><p><img alt="" height="267" src="https://static.oschina.net/uploads/space/2023/0918/162336_iDUN_4252687.jpg" width="500" referrerpolicy="no-referrer"></p></div>
                                                                ]]>
            </description>
            <pubDate>Mon, 26 Feb 2024 03:05:17 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/p/flax-engine</guid>
            <link>https://www.oschina.net/p/flax-engine</link>
        </item>
        <item>
            <title>
                <![CDATA[欢迎新晋开源支付网关，Dromara DaxPay]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h2><span>​&nbsp;</span>作者介绍</h2><ul><li>名称：喵呀</li><li>dromara 开源组织成员，dromara/dax-pay 作者</li><li>支付行业新兵，Java 高级开发工程师，开发、设计、运维多面手</li><li>一枚新济南人，热爱逛各地的博物馆，热爱追寻各种历史古迹</li><li>个人空间：<a href="https://gitee.com/GIotEE">https://gitee.com/GIotEE</a></li></ul><h2>背景</h2><p>在平时对接三方支付时，尤其需要对接多家支付的时候，是不是有以下痛点：</p><blockquote><ol><li>各家支付系统的调用方式、返回参数、数据签名、回调格式等都不尽相同，对接时互相之间无法复用</li><li>各家支付系统提供的支付能力不尽相同，有时候业务系统为了对客户展现的功能一致，需要写大量的适配代码才能实现</li><li>支付订单、退款订单、回调记录、订单关闭、对账分账等必要功能都需要进行实现，需要考虑各种场景才能保证不出问题</li><li>有时候业务上需要支持一些扩展的支付类型，如要支持钱包支付、支持多种支付方式进行组合支付、支持聚合支付实现一码通扫等</li></ol></blockquote><p>如果你遇到这些问题，<strong>Dromara DaxPay</strong>（开源支付网关）或许能帮助到你：</p><p>​ 它是<code>Dromara 开源社区</code>旗下新晋的一款开源支付网关系统，将各种支付通道（如支付宝、微信、云闪付等）的调用方式进行抽象统一，隐藏开发者不需要关注的细节，只需要一份代码就可以与多家支付通道对接。<code>DaxPay</code>独立部署，提供独立的管理界面，不侵入业务系统也不需要业务系统进行改造，只需要通过<code>http</code>进行调用就拥有相应的支付能力。除了对各类三方支付系统进行了对接，还对常用的支付方式进行了扩展，支持聚合支付、组合支付、钱包支付等功能。</p><h2>系统亮点</h2><ul><li>基于<code>Spring Boot</code>、<code>Vue3</code>主流技术栈，方便对系统进行扩展和改造</li><li>已对接<code>微信支付</code>和<code>支付宝</code>支付的接口，后续版本将支持<code>V3</code>版本支付接口，以及<code>云闪付</code>、<code>PayPal</code>等更多类型的支付通道</li><li>对接各类支付通道对外提供统一的接口，简化支付对接的复杂度，也方便后期快速替换或增加新的支付通道</li><li>提供<code>钱包支付</code>、<code>现金支付</code>、<code>储值卡支付</code>等扩展支付方式，同时支持组合支付，满足业务系统多样的支付场景</li><li>提供<code>Java</code>版本的<code>SDK</code>工具包，简化业务系统对接流程，同时也可以使用<code>HTTP</code>方式进行接口调用，保证了更低的耦合性和通用性</li><li>请求、响应、回调数据都支持启用签名机制，可根据实际需要进行开关，保证交易的安全可靠</li><li>提供管理平台，可以对各类订单、记录、配置进行便捷的操作，方便运营人员进行支付业务的管理</li><li>提供<code>聚合支付</code>、<code>电脑收银台</code>和<code>手机收银台</code>的演示模块，供开发者参考其实现支付功能的逻辑</li><li>系统源码为商业友好的<code>Apache-2.0</code>协议，文档为更加宽松的<code>MIT</code>协议，不需要担心后续代码和文档会突然进行收费</li></ul><h2>使用说明</h2><blockquote><p>此处以使用 SKD 对接简单支付接口为例，演示业务系统如何通过 SDK 快速接入到支付网关中</p></blockquote><h3>引入 SDK</h3><pre><code class="language-xml">&lt;!-- 支付 SDK 路径 --&gt;
&lt;dependency&gt;
    &lt;groupId&gt;cn.bootx.platform&lt;/groupId&gt;
    &lt;artifactId&gt;daxpay-single-sdk&lt;/artifactId&gt;
    &lt;version&gt;${latest.version}&lt;/version&gt;
&lt;/dependency&gt;
</code></pre><h3>调用代码</h3><pre><code class="language-java">package cn.bootx.platform.daxpay.sdk;

import cn.bootx.platform.daxpay.sdk.code.PayChannelEnum;
import cn.bootx.platform.daxpay.sdk.code.PayWayEnum;
import cn.bootx.platform.daxpay.sdk.model.PayOrderModel;
import cn.bootx.platform.daxpay.sdk.net.DaxPayConfig;
import cn.bootx.platform.daxpay.sdk.net.DaxPayKit;
import cn.bootx.platform.daxpay.sdk.param.pay.SimplePayParam;
import cn.bootx.platform.daxpay.sdk.response.DaxPayResult;
import org.junit.Before;
import org.junit.Test;

/**
 * 简单支付
 * @author xxm
 * @since 2024/2/2
 */
public class SimplePayOrderTest {

    @Before
    public void init() {
        // 初始化支付配置
        DaxPayConfig config = DaxPayConfig.builder()
                .serviceUrl("http://127.0.0.1:9000")
                // 需要跟网关中配置一致
                .signSecret("123456")
                .build();
        DaxPayKit.initConfig(config);
    }

    @Test
    public void simplePay() {
        // 简单支付参数
        SimplePayParam param = new SimplePayParam();
        param.setBusinessNo("P0001");
        param.setAmount(1);
        param.setTitle("测试支付宝支付");
        // 支付宝扫码支付
        param.setChannel(PayChannelEnum.ALI.getCode());
        param.setPayWay(PayWayEnum.QRCODE.getCode());

        // 如果切换为微信扫码支付, 只需要更改一下通道编码参数即可,
        // param.setChannel(PayChannelEnum.ALI.getCode());

        DaxPayResult&lt;PayOrderModel&gt; execute = DaxPayKit.execute(param, true);
        PayOrderModel data = execute.getData();
        // 打印用于扫码使用的
        System.out.println(data.getPayBody());
    }
}
</code></pre><h2>项目和演示地址</h2><h3>源码地址</h3><table><tbody><tr><th>项目</th><th>GITEE</th><th>GITHUB</th></tr></tbody><tbody><tr><td>后端地址</td><td><a href="https://gitee.com/dromara/dax-pay">https://gitee.com/dromara/dax-pay</a></td><td><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdromara%2Fdax-pay" target="_blank">https://github.com/dromara/dax-pay</a></td></tr><tr><td>Web 前端地址</td><td><a href="https://gitee.com/bootx/dax-pay-ui">https://gitee.com/bootx/dax-pay-ui</a></td><td><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxxm1995%2Fdax-pay-ui" target="_blank">https://github.com/xxm1995/dax-pay-ui</a></td></tr><tr><td>H5 前端地址</td><td><a href="https://gitee.com/bootx/dax-pay-h5">https://gitee.com/bootx/dax-pay-h5</a></td><td><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxxm1995%2Fdax-pay-h5" target="_blank">https://github.com/xxm1995/dax-pay-h5</a></td></tr></tbody></table><h3>管理平台:</h3><blockquote><p>注：演示账号部分功能修改删除权限未开放。</p></blockquote><p>地址：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdaxpay.demo.bootx.cn" target="_blank">https://daxpay.demo.bootx.cn</a> 账号：daxpay 密码：123456</p><h3>网关接口</h3><blockquote><p>注：接口平台只开放支付网关相关的接口，不开放系统其他接口。</p></blockquote><p>地址: <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdaxpay.server.bootx.cn%2Fdoc.html" target="_blank">https://daxpay.server.bootx.cn/doc.html</a> 账号: daxpay 密码: 123456</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/pFar3GT.jpg" referrerpolicy="no-referrer"></p><h3>收银台</h3><blockquote><p>请勿大额支付，可以通过后台管理平台进行退款</p></blockquote><p>电脑收银台地址: <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdaxpay.demo.bootx.cn%2F%23%2Fcashier" target="_blank">https://daxpay.demo.bootx.cn/#/cashier</a></p><p>手机收银台地址: <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdaxpay.demo.bootx.cn%2Fh5%2F%23%2Fcashier%2FuniCashier" target="_blank">https://daxpay.demo.bootx.cn/h5/#/cashier/uniCashier</a></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/pF8n9x0.jpg" referrerpolicy="no-referrer"></p><h2>沟通交流</h2><p>一个人的能力总是有限的，非常欢迎大家能够一起来交流，一起成长！！！</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 26 Feb 2024 03:03:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/280274</guid>
            <link>https://www.oschina.net/news/280274</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[中国电子拟向中国软件投资 20 亿元，打造操作系统核心技术]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff; color:rgba(0, 0, 0, 0.9)">中国软件与技术服务股份有限公司发布《2024 年度向特定对象发行 A 股股票预案》。</span><span>本次向特定对象发行股票数量不超过 90,130,689 股（含本数），占中国软件<span>本次发行前总股数 10.48%，不超过本次发行前总股本的 30%。</span></span></p><p><span>本次发行各认购对象拟认购金额及股份数量如下：</span></p><p><img height="121" src="https://oscimg.oschina.net/oscnet/up-8d4ed7ad29265e08c048bc38bcc8773ac52.png" width="500" referrerpolicy="no-referrer"></p><p><span>本次向特定对象发行股票拟募集资金总额（含发行费用）<span>不超过 20 亿元，扣除发行费用后的募集资金净额拟全部投入以下项目：</span></span></p><p><img height="144" src="https://oscimg.oschina.net/oscnet/up-81bd21ed796c2a4beeaa9d20999d342b32d.png" width="500" referrerpolicy="no-referrer"></p><p><span>中国电子最近一年及一期主要财务数据如下：</span></p><p><img height="230" src="https://oscimg.oschina.net/oscnet/up-c39035eccf16806bb7c97fc21491281f6c0.png" width="500" referrerpolicy="no-referrer"></p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FVakZAoL5LtCSGSWad8jxrw" target="_blank">公告</a>指出，<span style="background-color:#ffffff; color:rgba(0, 0, 0, 0.9)">本次全部募集资金以麒麟软件为主体，投入「移固融合终端操作系统产品研发」、「面向云化的服务器操作系统产品研发」、「嵌入式操作系统能力平台建设」三个项目。</span></p><p>详情可<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.sse.com.cn%2Fdisclosure%2Flistedinfo%2Fannouncement%2Fc%2Fnew%2F2023-09-23%2F688418_20230923_K1H9.pdf" target="_blank">查看完整文件</a>。</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 26 Feb 2024 02:36:17 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/280270</guid>
            <link>https://www.oschina.net/news/280270</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Gitee 推荐 | 智能杯垫产品 iCupBox]]>
            </title>
            <description>
                <![CDATA[<h1><a id="user-content-icupbox" class="anchor" href="https://gitee.com/jiangtao008/iCupBox#icupbox"></a>iCupBox</h1><ul><li>csdn 博客 (tao.jiang)： <a href="https://gitee.com/link?target=https%3A%2F%2Fblog.csdn.net%2Fweixin_42887343">https://blog.csdn.net/weixin_42887343</a></li><li>csdn 博客 (dan.yin)： <a href="https://gitee.com/link?target=https%3A%2F%2Fblog.csdn.net%2Fweixin_38880029">https://blog.csdn.net/weixin_38880029</a></li></ul><h2><a id="user-content-项目介绍" class="anchor" href="https://gitee.com/jiangtao008/iCupBox#%E9%A1%B9%E7%9B%AE%E4%BB%8B%E7%BB%8D"></a>项目介绍</h2><ul><li>这是一款智能杯垫产品，基于 GTD 时间管理理念设计，目的是提醒人们专心工作和及时喝水休息，提高工作效率。</li></ul><p>项目分为客户端 APP 和杯垫固件系统：</p><ul><li>客户端 APP，使用 QML 开发，集成 GTD 时间管理方法，与杯垫固件系统通讯，控制杯垫固件系统的显示内容；</li><li>杯垫固件系统，使用的 esp8266 作为主控，集成 WIFI、蓝牙、红外对管、0.96 寸 oled、dht11 温湿度模块、ds1302 时钟模块锂电池、锂电池充电模块。</li></ul><p>各部分作用：</p><ul><li>WIFI，用于 PC 客户端 APP 的数据通讯；</li><li>_ 蓝牙，用于手机客户端 APP 的数据通讯；_</li><li>红外对管，用于杯子就位检测；</li><li>oled：用于信息显示及提示喝水休息；</li><li>dht11:检测环境温湿度；</li><li>ds1302：用于系统时钟管理（保存和输出准确时间）</li></ul><h2><a id="user-content-设计原理" class="anchor" href="https://gitee.com/jiangtao008/iCupBox#%E8%AE%BE%E8%AE%A1%E5%8E%9F%E7%90%86"></a>设计原理：</h2><p>使用番茄工作法，选择一个待完成的任务，将番茄时间设为 25 分钟，专注工作，中途不允许做任何与该任务无关的事，直到番茄时钟响起，
然后进行短暂休息一下（5 分钟就行），然后再开始下一个番茄。每 4 个番茄时段多休息一会儿。
番茄工作法会极大地提高了工作的效率，还会有意想不到的成就感。</p><h2><a id="user-content-总体功能介绍" class="anchor" href="https://gitee.com/jiangtao008/iCupBox#%E6%80%BB%E4%BD%93%E5%8A%9F%E8%83%BD%E4%BB%8B%E7%BB%8D"></a>总体功能介绍</h2><ul><li>1、喝水提醒；</li><li>2、日程提醒；</li><li>3、时间显示；</li><li>4、温度监测；</li><li>5、湿度监测；</li><li>6、诗词播报；</li><li>7、天气播报；</li></ul><h2><a id="user-content-详细功能说明" class="anchor" href="https://gitee.com/jiangtao008/iCupBox#%E8%AF%A6%E7%BB%86%E5%8A%9F%E8%83%BD%E8%AF%B4%E6%98%8E"></a>详细功能说明</h2><ul><li>1、规划当日计划，根据 SMART 原则，制作月计划、日计划，并同步到杯垫固件系统；</li><li>2、提醒喝水休息，目前时间定为 25 分钟提醒一次，超过后，每 15 分钟时提醒一次；</li><li>3、自动图片显示，每次提醒都有对应的系列图片显示；</li><li>4、当处于提醒状态，除了图片显示外，屏幕还会闪烁，类似 led 闪烁效果用于提醒</li><li>5、提醒状态一共分为 5 个等级，分别为 15min、25min、55min，后续这些时间可通过上位机设置。</li><li>6、时间、温湿度显示功能，交叉显示一些基本信息，如当前时间，环境中的温度、湿度。在提示状态下，该节目也会带有闪烁提示效果。</li><li>7、自动对时，内置时钟模块，虽然设置好后比较准确，但是还是可以通过连接 WiFi 自动校准时间，该功能后续考虑是否需要。</li><li>8、诗词显示，在等待喝水的过程中，可以随机显示一些界面或信息，其中诗词就是一个方面。</li></ul><h2><a id="user-content-项目文件说明" class="anchor" href="https://gitee.com/jiangtao008/iCupBox#%E9%A1%B9%E7%9B%AE%E6%96%87%E4%BB%B6%E8%AF%B4%E6%98%8E"></a>项目文件说明</h2><ul><li>mcuCode/cupHold ：杯垫中 esp8266 的代码</li><li>doc ：一些项目的输出文档</li><li>setAppCode : 项目上位机代码，用于设计杯垫的一些配置，如时间、喝水提醒时长、显示的图片等等</li><li>tools ： 项目中需要用到的一些工具</li><li>3DModel ： 杯垫的外壳文件，可直接用切图软件打开后，输出给 3D 打印机打印</li><li>showIMG ： 一些显示效果</li></ul><h2><a id="user-content-硬件电路" class="anchor" href="https://gitee.com/jiangtao008/iCupBox#%E7%A1%AC%E4%BB%B6%E7%94%B5%E8%B7%AF"></a>硬件电路</h2><ul><li>电路图*</li></ul><h2><a id="user-content-开发历程" class="anchor" href="https://gitee.com/jiangtao008/iCupBox#%E5%BC%80%E5%8F%91%E5%8E%86%E7%A8%8B"></a>开发历程</h2><ul><li>tao.jiang：项目截至目前-2022-4-3，陆陆续续搞了一个月，其中最喜欢做的就是硬件设计和焊接了，重回老本行。。。。。。最不喜欢的就是这个小屏幕的 UI 设计，比 pc 端软件的 ui 麻烦太多了，像素少也就算了，还不支持灰度（只有二值化）。</li><li>dan.yin：2022 年 7 月 2 日正式加入本项目，主要负责本产品规则和上位机实施，作为一开源项目爱好者，将不遗余力的贡献一份力量。</li></ul><p><img src="https://gitee.com/jiangtao008/iCupBox/raw/master/showIMG/readme/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20230604125622.jpg" alt="输入图片说明" referrerpolicy="no-referrer"></p><p><img src="https://gitee.com/jiangtao008/iCupBox/raw/master/showIMG/readme/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20230604125743.jpg" alt="输入图片说明" referrerpolicy="no-referrer"></p><p><img src="https://gitee.com/jiangtao008/iCupBox/raw/master/showIMG/readme/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20230604125007.jpg" alt="输入图片说明" referrerpolicy="no-referrer"></p>]]>
            </description>
            <pubDate>Mon, 26 Feb 2024 02:25:00 GMT</pubDate>
            <guid isPermaLink="false">https://gitee.com/jiangtao008/iCupBox</guid>
            <link>https://gitee.com/jiangtao008/iCupBox</link>
        </item>
        <item>
            <title>
                <![CDATA[基于 Rust 开发的终端应用 Warp 发布 Linux 版本]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Warp 是一个基于 Rust 开发的现代化终端应用，内置 AI 功能，支持 CPU 加速。</p><p>此前 Warp 仅面向 Mac 平台提供，近日其开发团队终于<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.warp.dev%2Fblog%2Fwarp-for-linux" target="_blank">发布</a></u>了 Linux 版本，用户可在大多数主流 Linux 发行版上安装 Warp，包括 Ubuntu、Fedora、Arch Linux 或 Red Hat，目前提供的安装包格式包括：</p><ul><li><strong>.deb (apt)</strong></li><li><strong>.rpm (yum/dnf/zypper)</strong></li><li><strong>.pkg.tar.zst (pacman)</strong></li><li><strong>.AppImage</strong></li></ul><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-4de6b7dfa97856c11c9134895a8dd615060.png" referrerpolicy="no-referrer"></p><p><strong>Warp for Linux 特性</strong></p><ul><li><p>基于 Rust 编写，所有图形渲染都直接在 GPU 上完成，性能极佳</p></li><li><p>支持 zsh、bash 和 fish 等 shell</p></li><li><p>拥有现代化的编辑特性，比如鼠标支持、自动完成、语法高亮和多光标支持</p></li><li><p>Warp AI 可以帮助开发者查找忘记的命令、调试错误或通过自然语言转换为命令行</p></li><li><p>Warp Drive 可以将终端变得协作化，开发者可以将重要的命令保存为可重用的工作流，并与团队成员共享</p></li></ul><hr><p>Warp 团队介绍了开发 Linux 版本的一些技术挑战。由于 Linux 上的 GPU API 与 macOS 上的 Metal API 有很大区别，因此 Warp 团队使用了开源的 Rust 库来实现跨平台渲染，例如 wgpu、winit 和 cosmic-text。<strong>除了平台特定的抽象之外，Linux 版本的 Warp 与 Mac 版本共享了大约 98% 的代码</strong>。</p><p>值得一提的是，为了更好地支持跨平台抽象，Warp 团队还扩展了其内部基于 Rust 的 UI 框架，并计划在未来开源该框架。</p><p>现在，Warp 已经支持 macOS 和 Linux 两个主流平台。Warp 团队正在积极开发 Windows 版本，预计将在今年晚些时候发布。下载地址：<u><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fapp.warp.dev%2Fget_warp%3Flinux%3Dtrue%26auto_download%3Dfalse" target="_blank">https://app.warp.dev/get_warp</a></em></u></p><p><img src="https://oscimg.oschina.net/oscnet/up-606dd90d1e674b566bbb400477a9e8f3704.png" referrerpolicy="no-referrer"></p><hr><p><strong>延伸阅读：<u><em><a href="https://www.oschina.net/news/276588/zed-is-now-open-source" target="news">Rust 编写的 Zed 编辑器正式开源</a></em></u></strong></p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 25 Feb 2024 11:09:37 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/280197/warp-for-linux</guid>
            <link>https://www.oschina.net/news/280197/warp-for-linux</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[周鸿祎：Sora 的技术路线如果被开源，国内将能很快赶上]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>360 集团创始人周鸿祎近日接受了新京报的独家采访，在被问及国内大模型企业如何追赶 Sora 时，他认为：</p><blockquote><p>「Sora 的技术路线如果被开源，国内将能很快赶上，但在追赶 Sora 时，算力有可能成为门槛，对此，集中国内所有 AI 企业的算力或许是方法之一。」</p></blockquote><p>周鸿祎对新京报贝壳财经记者表示，Sora 所代表的技术路线出炉后，国外也有两条路线的斗争，一条是 OpenAI 的闭源，另一条是以 Meta 为代表的开源，「开源路线的目标就要打破闭源，他们会不断去猜测闭源是怎么做的，最后再开源出来。<strong>开源出来的好处是，很多小公司和大公司的个人成员会积极地在开源项目中借鉴他人成果，同时再贡献自己的成果，其化学作用会非常明显</strong>。」</p><p>周鸿祎同时认为，在追赶 Sora 方面，算力可能也是一个坎。Sora 视频分析对算力的消耗应该是远远超过千亿模型的。所以，当现在国内显卡都被卡脖子之后，算力就可能会是一个问题。「目前，Meta 已经有 50 万块 GPU，明年可能会买百万块，微软应该也会按照百万级别去下订单。而国内的所有人工智能公司加在一起可能有 50 万块 GPU，但都分散在各个公司里。」&nbsp;</p><p>来源：<em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fm.bjnews.com.cn%2Fdetail%2F1708743244168689.html" target="_blank">https://m.bjnews.com.cn/detail/1708743244168689.html</a></u></em></p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 25 Feb 2024 02:26:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/280267</guid>
            <link>https://www.oschina.net/news/280267</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[每日一博 | LangChain 原理学习笔记]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="rich_media_content js_underline_content
                       autoTypeSetting24psection
            " id="js_content"><section style="margin-bottom: 8px;outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);text-align: center;visibility: visible;" data-mpa-powered-by="yiban.io"><img class="rich_pages wxw-img __bg_gif" data-backh="96" data-backw="578" data-cropselx1="0" data-cropselx2="578" data-cropsely1="0" data-cropsely2="96" data-imgfileid="503044953" data-ratio="0.16666666666666666" src="https://oscimg.oschina.net/oscnet/5d6661c6-490a-4660-829f-c96629c9c1aa.gif" data-type="gif" data-w="636" style="outline: 0px;letter-spacing: 0.544px;font-size: var(--articleFontsize);border-radius: 8px;text-align: justify;width: 100%;visibility: visible !important;background-size: 16px !important;height: auto;" referrerpolicy="no-referrer"><br style="outline: 0px;visibility: visible;"></section><section data-mpa-template="t" data-mpa-template-id="502" data-mpa-category="模板" style="outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);visibility: visible;"><section data-mpa-category="模板" data-mid="" style="padding-right: 1px;padding-left: 1px;outline: 0px;width: 677px;display: flex;justify-content: flex-start;align-items: center;flex-direction: column;visibility: visible;"><section data-mid="" style="outline: 0px;letter-spacing: 0.544px;width: 675px;display: grid;grid-template-columns: 26px auto;visibility: visible;"><section data-mid="" style="outline: 0px;width: 26px;height: 14px;display: flex;justify-content: center;align-items: center;align-self: center;visibility: visible;"><br style="outline: 0px;visibility: visible;"></section><section data-mid="" style="padding-left: 7px;outline: 0px;display: flex;justify-content: flex-start;align-items: center;visibility: visible;"><section data-mid="" style="margin-right: 7px;outline: 0px;text-align: left;visibility: visible;"><p data-mid="" style="outline: 0px;width: 0px;font-size: 14px;font-family: PingFangSC-Semibold, &quot;PingFang SC&quot;;font-weight: bold;color: rgb(58, 92, 244);line-height: 20px;visibility: visible;"><br style="outline: 0px;visibility: visible;"></p></section><section data-mid="" style="margin-bottom: 4px;outline: 0px;width: 635px;height: 1px;border-top: 1px solid rgb(58, 92, 244);align-self: flex-end;visibility: visible;"><br style="outline: 0px;visibility: visible;"></section></section></section><section data-mid="" style="padding: 7px 14px 9px 19px;outline: 0px;width: 675px;text-align: left;border-bottom: 1px solid rgb(58, 92, 244);visibility: visible;"><p style="outline: 0px;min-height: 24px;letter-spacing: 0.578px;text-align: justify;visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="text-align: left;font-size: 15px;letter-spacing: 1px;">最新越发觉得 AI 的发展，对未来是一场革命，LangChain 已经在工程设计上有了最佳实践，类似于 AI 时代的编程模型或编程框架，有点 Spring 框架的意思。之前在 LangChain 上也有些最佳实践，所以在这里分享记录下。</span></p></section></section></section><section style="margin-top: 8px;margin-bottom: 8px;outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);line-height: 1.75em;visibility: visible;"><br style="outline: 0px;visibility: visible;"></section><section style="margin-bottom: 0px;outline: 0px;box-sizing: inherit;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);color: rgba(25, 26, 31, 0.9);font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 16px;text-align: center;visibility: visible;line-height: 1.75em;"><span style="outline: 0px;visibility: visible;font-size: 15px;letter-spacing: 1px;"><img class="rich_pages wxw-img" data-imgfileid="503044950" data-ratio="0.3161764705882353" data-s="300,640" src="https://oscimg.oschina.net/oscnet/c23e6652-3a60-4f04-91a9-75c32aeb79c6.png" data-type="png" data-w="408" style="outline: 0px;color: rgb(34, 34, 34);font-family: system-ui, -apple-system, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;visibility: visible !important;width: 113px !important;" referrerpolicy="no-referrer"></span></section><section style="margin-bottom: 0px;outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);color: rgb(34, 34, 34);text-align: center;visibility: visible;line-height: normal;"><span style="outline: 0px;color: rgb(3, 69, 255);font-family: -apple-system, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 18px;letter-spacing: 1px;visibility: visible;">LangChain 解决什么问题</span></section><p style="outline: 0px;visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;text-align: justify;"><br></p><p style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">LangChain 是基于 LLM 之上的，在应用层和底层 LLM 之前的一个很好的编程框架，如果把 LLM 比喻为各种类型的数据库、中间件等这些基础设施，应用层是各种业务逻辑的组合之外，那么 LangChain 就负责桥接与业务层和底层 LLM 模型，让开发者可以快速地实现对接各种底层模型和快速实现业务逻辑的软件开发框架。</span></p><p style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;"><br></span></p><p style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">那么 LangChain 是如何做到的呢？试想一下，现在底层有一个大模型的推理能力，除了在对话框手动输入跟他聊天之外。如何用计算机方式跟它互动呢？如果把一次 LLM 调用当作一个原子能力，如何编排这些原子能力来解决一些业务需求呢？Langchain 就是来解决这个事情的。</span></p><section style="margin-top: 8px;margin-bottom: 8px;outline: 0px;visibility: visible;line-height: 1.75em;"><br></section><section style="margin-bottom: 0px;outline: 0px;box-sizing: inherit;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);color: rgba(25, 26, 31, 0.9);font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 16px;text-align: center;visibility: visible;line-height: normal;"><span style="outline: 0px;font-size: 15px;letter-spacing: 1px;visibility: visible;"><img class="rich_pages wxw-img" data-imgfileid="503044952" data-ratio="0.3056872037914692" data-s="300,640" src="https://oscimg.oschina.net/oscnet/4a2ee990-1779-43cc-a673-50748e9a264e.png" data-type="png" data-w="422" style="outline: 0px;color: rgb(34, 34, 34);font-family: system-ui, -apple-system, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;visibility: visible !important;width: 117px !important;" referrerpolicy="no-referrer"></span></section><section style="margin-bottom: 0px;outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);color: rgb(34, 34, 34);text-align: center;visibility: visible;line-height: normal;"><span style="outline: 0px;font-family: -apple-system, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 18px;letter-spacing: 1px;visibility: visible;color: rgb(0, 17, 255);">LangChain 的几个核心概念</span></section><section style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></section><span id="OSC_h4_1"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 0.5em;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;"><span style="outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong><strong style="outline: 0px;visibility: visible;"><span style="color: rgb(0, 17, 255);outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">Model I/O</span></strong></span></h4><p style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></p><p style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">这里重点把背后的 LLM 模型做了一层封装，开发者可以通过更改配置的方式快速切换底层 LLM 模型，比如 chatgpt，chatGLM、通义千问等模型。</span></p><p style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;"><br></span></p><p style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">同时还有些高阶功能：比如提供了缓存等功能，这样对于语义上类似的 query，如果缓存有，那么 langchain 可以快速返回结果，而不需要调用大模型。</span></p><p style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;"><br></span></p><span id="OSC_h4_2"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 0.5em;margin-bottom: 8px;text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;"><span style="outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong><strong style="outline: 0px;visibility: visible;"><span style="color: rgb(0, 17, 255);outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">Retriver</span></strong></span></h4><p style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></p><section style="min-height: 24px;text-align: left;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">检索是为了解决大模型打通用户的本身数据，做一些面向业务属性的东西。这里的检索并非传统的关系型数据库，更多的是与大模型的本身逻辑相似的，比如向量数据库。</span></section><section style="min-height: 24px;text-align: left;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;"><br></span></section><section style="min-height: 24px;text-align: left;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;"><strong>一个经典的结合 LLM 和外部用户的文档进行智能答疑的场景</strong></span></section><section style="min-height: 24px;text-align: left;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><br></section><section style="min-height: 24px;text-align: left;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">文档-&gt;分词-&gt;embedding-&gt;向量数据库</span></section><section style="min-height: 24px;text-align: left;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">query-&gt;向量数据库查询-&gt;TOP N-&gt;上下文+ 用户提问 + prompt -&gt; LLM -&gt; 返回结果</span></section><section style="min-height: 24px;text-align: left;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;"><br></span></section><section style="min-height: 24px;text-align: left;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">一个经典的图如下：</span></section><section style="min-height: 24px;text-align: center;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><img class="rich_pages wxw-img" data-backh="368" data-backw="578" data-imgfileid="503044954" data-ratio="0.637962962962963" src="https://oscimg.oschina.net/oscnet/ea3e7438-856d-47b9-b1d4-20042680f627.png" data-type="png" data-w="1080" style="width: 100%;height: auto;" width="2400" referrerpolicy="no-referrer"></section><section style="min-height: 24px;text-align: left;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><br></section><p style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;"><strong>关键技术：文档如何拆分、embedding 过程、 TOPN 向量距离的选择</strong></span></p><p style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></p><p style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">embedding 技术选型</span></p><p style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">embedding 是将现实中的物体通过向量化的方法转化为高维向量，可被机器学习模型所识别。他是一种映射，同时也保证了能清晰地表达现实物体的特征。基于此，可以进行一些归类分析、回归分析等。</span></p><p style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">现在市面上常见的 embedding 方法有通义千问的 embedding 等方法。</span></p><p style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></p><p style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">向量数据库：</span></p><p style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">向量数据库底层存储的是一堆向量，它提供了根据向量相似度进行查询的能力，一般情况下，向量相似度代表了现实世界中物体的相似度。比如」我的名字是小明「 和「我叫小明」这两句话所代表的含义几乎是相同的，那么在 embedding 之后，基于向量数据库进行查询的时候，它们俩的相似度就会很近。</span></p><section style="min-height: 24px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;"><br></span></section><span id="OSC_h4_3"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 0.5em;margin-bottom: 8px;text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;"><span style="outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong><strong style="outline: 0px;visibility: visible;"><span style="color: rgb(0, 17, 255);outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">Chain</span></strong></span></h4><section style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></section><p style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">各种类型的 chain，chain 代表了各种业务类型的组合，类似于工作流的编排。</span></p><section style="min-height: 24px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><br></section><span id="OSC_h4_4"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 0.5em;margin-bottom: 8px;text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;"><span style="outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong><strong style="outline: 0px;visibility: visible;"><span style="color: rgb(0, 17, 255);outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">Memory</span></strong></span></h4><p style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></p><p style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">LLM 本身提供了记忆的能力，同时提供了接口，开发者可以将历史的对话记录传入给 LLM。LangChain 需要使用外部存储保存这些历史的会话和记忆。可以使用数据库、缓存等进行保存。</span></p><p style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;"><br></span></p><span id="OSC_h4_5"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 0.5em;margin-bottom: 8px;text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;"><span style="outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong><strong style="outline: 0px;visibility: visible;"><span style="color: rgb(0, 17, 255);outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">Agent</span></strong></span></h4><p style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></p><p style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">重点是代理工具</span></p><p style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">代理工具可以让应用程序基于大模型的推理能力，然后进行代理工具或代理服务的调用。因为 LLM 是没有「联网」的能力的，如果想解决特定的应用场景，代理工具是个完美的选择。</span></p><p style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">代理工具通常包含三个方面：用户输入、prompt 编排 LLM 思考与路由代理的过程、背后的代理服务。其中难点可能就在于 prompt 设计了。通常的「套路」是这样的：</span></p><p style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></p><p style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">ReAct 模型</span></p><p style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">输入：用户的问题</span></p><p style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">思考过程：如果是情况 1（这个是需要 LLM 进行意图识别进行思考的），那么推理和提取出一些关键参数，调用 agent1，如果是情况 2，那么推理和提取出一些关键参数，调用 agent2</span></p><p style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">Act：调用 agent1 对应一个 JSON 格式化的输入，调用 function1，返回结果。</span></p><p style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">观察：观察调用后的结果，再结合推理的能力，再进行循环思考。</span></p><p style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></p><section style="margin-bottom: 0px;outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 0.544px;text-wrap: wrap;text-align: center;visibility: visible;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);margin-top: 8px;line-height: 1.75em;"><img class="rich_pages wxw-img" data-imgfileid="503044951" data-ratio="0.3056872037914692" data-s="300,640" src="https://oscimg.oschina.net/oscnet/335c2740-2ac6-4cd0-a8bc-d421b0bc2086.png" data-type="png" data-w="422" style="outline: 0px;letter-spacing: 0.544px;font-size: 14px;visibility: visible !important;width: 117px !important;" referrerpolicy="no-referrer"></section><p style="margin-bottom: 0px;outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 0.544px;text-wrap: wrap;text-align: center;background-color: rgb(255, 255, 255);color: rgb(100, 99, 99);line-height: normal;"><span style="outline: 0px;font-family: -apple-system, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 18px;color: rgb(0, 17, 255);letter-spacing: 1px;">LangChain 的在实际场景中的实践</span></p><section style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></section><p style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">集团内部开发了一个 JAVA 版本的 LangChain 框架，以下实践基于此框架与开源大模型 chatGLM-6B 进行。</span></p><p style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></p><span id="OSC_h4_6"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 0.5em;margin-bottom: 8px;text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;"><span style="outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong><strong style="outline: 0px;visibility: visible;"><span style="color: rgb(0, 17, 255);outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">淘宝开放平台智能问答</span></strong></span></h4><p style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></p><p style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">淘宝开放平台对内托管了上万个 API，每天在内部群里都会有开发者咨询 API 发布问题，之前我们是通过 NLP 来实现智能问答的，现将它升级为基于大模型的智能问答，以下是具体的技术实现过程。</span></p><p style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></p><ul class="list-paddingleft-1" style="list-style-type: disc;"><li style="color: rgb(0, 17, 255);"><span id="OSC_h4_7"></span><h4 style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;color: rgb(0, 17, 255);">知识库 Embedding 过程</span></h4></li></ul><p style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: var(--articleFontsize);letter-spacing: 0.034em;"></span><br></p><p style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">由于之前已经沉淀好了很多知识库，都是 Question-Answer 的这种形式，这里我们对 Question，也就是问题进行 Embedding，此处采用通义千问提供的 Embedding 方法。</span></p><p style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></p><p style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">知识库 embedding：</span></p><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="javascript"><code><span class="code-snippet_outer">TongYiEmbeddings embeddings = <span class="code-snippet__keyword">new</span> TongYiEmbeddings();</span></code><code><span class="code-snippet_outer">embeddings.setServerAccessId(ALINLP_EMBEDDINGS_ACCESSID);</span></code><code><span class="code-snippet_outer">embeddings.setServerUrl(ALINLP_EMBEDDINGS_SERVER_URL);</span></code><code><span class="code-snippet_outer">embeddings.setServerUuid(ALINLP_EMBEDDINGS_UUID);</span></code><code><span class="code-snippet_outer">Document <span class="code-snippet__built_in">document</span> = <span class="code-snippet__keyword">new</span> Document();</span></code><code><span class="code-snippet_outer"><span class="code-snippet__built_in">document</span>.setPageContent(rawText);</span></code><code><span class="code-snippet_outer">List&lt;Document&gt; documents = embeddings.embedDocument(Arrays.asList(<span class="code-snippet__built_in">document</span>));</span></code><code><span class="code-snippet_outer">Document  vecDocument= documents.get(<span class="code-snippet__number">0</span>);</span></code><code><span class="code-snippet_outer"><span class="code-snippet__comment">// 向量化知识</span></span></code><code><span class="code-snippet_outer"><span class="code-snippet__built_in">String</span> embeddingString = <span class="code-snippet__built_in">JSON</span>.toJSONString(vecDocument.getEmbedding()).replaceAll(<span class="code-snippet__string">"\\["</span>, <span class="code-snippet__string">"{"</span>)</span></code><code><span class="code-snippet_outer">.replaceAll(<span class="code-snippet__string">"\\]"</span>, <span class="code-snippet__string">"}"</span>);</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer"><span class="code-snippet__keyword">return</span> embeddingString;</span></code></pre></section><p style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></p><ul class="list-paddingleft-1" style="list-style-type: disc;"><li style="color: rgb(0, 17, 255);"><span id="OSC_h4_8"></span><h4 style="min-height: 24px;text-align: justify;margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="font-size: 15px;letter-spacing: 1px;color: rgb(0, 17, 255);">向量数据库存储和查询</span></h4></li></ul><section style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: var(--articleFontsize);letter-spacing: 0.034em;"></span><br></section><section style="min-height: 24px;text-align: justify;margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="font-size: 15px;letter-spacing: 1px;">此处采用 hologres 向量数据库，图中红框表示知识库问题与回答在数据库中具体的向量化存储数据。</span></section><section style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="letter-spacing: 1px;"><span style="font-size: 15px;"></span></span></section><section style="min-height: 24px;text-align: justify;margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="font-size: 15px;letter-spacing: 1px;"><img class="rich_pages wxw-img" data-backh="129" data-backw="578" data-imgfileid="503044958" data-ratio="0.22255192878338279" src="https://oscimg.oschina.net/oscnet/b1a595f8-7ea6-4f3c-a5d7-ebcc2d405d65.png" data-type="png" data-w="674" style="width: 100%;height: auto;" referrerpolicy="no-referrer"></span></section><p style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;"><br></span></p><p style="min-height: 24px;text-align: justify;margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="font-size: 15px;letter-spacing: 1px;">向量距离数据库查询：</span></p><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="sql"><code><span class="code-snippet_outer"><span class="code-snippet__keyword">select</span> origin_content <span class="code-snippet__keyword">as</span> originContent,</span></code><code><span class="code-snippet_outer">        origin_title <span class="code-snippet__keyword">as</span> originTitle,</span></code><code><span class="code-snippet_outer">        pm_approx_squared_euclidean_distance(embedding_title, <span class="code-snippet__comment">#{embeddingTitle}) as distance</span></span></code><code><span class="code-snippet_outer"><span class="code-snippet__keyword">from</span> vs_knowledge</span></code><code><span class="code-snippet_outer"><span class="code-snippet__keyword">order</span><span class="code-snippet__keyword">by</span> distance <span class="code-snippet__keyword">asc</span></span></code><code><span class="code-snippet_outer"><span class="code-snippet__keyword">limit</span><span class="code-snippet__comment">#{limit}</span></span></code><code><span class="code-snippet_outer"></span></code></pre></section><p style="min-height: 24px;text-align: justify;margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><br></p><ul class="list-paddingleft-1" style="list-style-type: disc;"><li style="color: rgb(0, 17, 255);"><p style="min-height: 24px;text-align: justify;margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="font-size: 15px;letter-spacing: 1px;color: rgb(0, 17, 255);">大模型问答链路</span></p></li></ul><section style="min-height: 24px;text-align: justify;margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="font-size: 15px;"><strong><br></strong></span></section><section style="min-height: 24px;text-align: justify;margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="font-size: 15px;letter-spacing: 1px;">问答 chain 的基本实现：</span></section><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="javascript"><code><span class="code-snippet_outer"><span class="code-snippet__comment">//1. 初始化 ChatGLM 的参数</span></span></code><code><span class="code-snippet_outer">ChatGLMV2Internal chatGLMV2Internal = <span class="code-snippet__keyword">new</span> ChatGLMV2Internal();</span></code><code><span class="code-snippet_outer">chatGLMV2Internal.setTemperature(<span class="code-snippet__number">0.01</span>d);</span></code><code><span class="code-snippet_outer">chatGLMV2Internal.setMaxLength(<span class="code-snippet__number">2048</span>);</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer"><span class="code-snippet__comment">//2. 提示词编写</span></span></code><code><span class="code-snippet_outer">PromptTemplate prompt = <span class="code-snippet__keyword">new</span> PromptTemplate();</span></code><code><span class="code-snippet_outer"><span class="code-snippet__built_in">String</span> template = <span class="code-snippet__string">"已知信息：\n"</span> +</span></code><code><span class="code-snippet_outer"><span class="code-snippet__string">"{context} \n"</span> +</span></code><code><span class="code-snippet_outer"><span class="code-snippet__string">"\n"</span> +</span></code><code><span class="code-snippet_outer"><span class="code-snippet__string">"根据上述已知信息，简洁和专业的来回答用户的问题。如果无法从中得到答案，请说 「根据已知信息无法回答该问题」 或 「没有提供足够的相关信息」，不允许在答案中添加编造成分，答案请使用中文。问题是：{question}"</span>;</span></code><code><span class="code-snippet_outer">prompt.setTemplate(template);</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer"><span class="code-snippet__comment">//3. 向量数据库检索配置，比如最大向量距离</span></span></code><code><span class="code-snippet_outer">RetrievalQA qa = <span class="code-snippet__keyword">new</span> RetrievalQA();</span></code><code><span class="code-snippet_outer">qa.setRecommend(<span class="code-snippet__number">5</span>);</span></code><code><span class="code-snippet_outer">qa.setMaxDistanceValue(<span class="code-snippet__number">10000.0</span>d);</span></code><code><span class="code-snippet_outer">qa.setLlm(chatGLMV2Internal);</span></code><code><span class="code-snippet_outer">qa.setPrompt(prompt);</span></code><code><span class="code-snippet_outer">qa.setRetriever(holoRetriver.asRetriever());</span></code><code><span class="code-snippet_outer">qa.init();</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer"><span class="code-snippet__comment">//4. LLM 大模型问答</span></span></code><code><span class="code-snippet_outer"><span class="code-snippet__built_in">Map</span>&lt;<span class="code-snippet__built_in">String</span>, <span class="code-snippet__built_in">Object</span>&gt; inputs = <span class="code-snippet__keyword">new</span> HashMap&lt;&gt;();</span></code><code><span class="code-snippet_outer">inputs.put(<span class="code-snippet__string">"question"</span>, question);</span></code><code><span class="code-snippet_outer">inputs.put(<span class="code-snippet__string">"input"</span>, question);</span></code><code><span class="code-snippet_outer"><span class="code-snippet__built_in">Map</span>&lt;<span class="code-snippet__built_in">String</span>, <span class="code-snippet__built_in">Object</span>&gt; outputs = qa.run(inputs);</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">llmKonwledgeDO.setContent(<span class="code-snippet__built_in">String</span>.valueOf(outputs.get(<span class="code-snippet__string">"text"</span>)));</span></code><code><span class="code-snippet_outer"><span class="code-snippet__comment">// 补充 doclist</span></span></code><code><span class="code-snippet_outer"><span class="code-snippet__keyword">return</span> llmKonwledgeDO;</span></code></pre></section><section style="min-height: 24px;text-align: justify;margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><br></section><span id="OSC_h4_9"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 0.5em;margin-bottom: 8px;text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;"><span style="outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong><strong style="outline: 0px;visibility: visible;"><span style="color: rgb(0, 17, 255);outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">AI Agent 实践</span></strong></span></h4><section style="min-height: 24px;text-align: justify;margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><br></section><p style="min-height: 24px;text-align: justify;margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="font-size: 15px;letter-spacing: 1px;">以下实现了一个网关</span><span style="font-size: 15px;letter-spacing: 1px;">API 调用日志解析的 agent。</span></p><section style="min-height: 24px;text-align: justify;margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><br></section><section style="min-height: 24px;text-align: justify;margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="font-size: 15px;letter-spacing: 1px;">Agent 工具注册：</span></section><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="powershell"><code><span class="code-snippet_outer">this.setName(<span class="code-snippet__string">"ApiLogTool"</span>);</span></code><code><span class="code-snippet_outer">this.setDescription(<span class="code-snippet__string">"这是一个调用日志查询接口，如果[{question}]中包含 requestId 关键字,你可以请求这个工具与日志系统进行交互，调用这个工具。\n"</span> +</span></code><code><span class="code-snippet_outer"><span class="code-snippet__string">"请先提取出 requestId 的值，将它赋值为 value。调用参数：[{\"</span>requestId\<span class="code-snippet__string">": \"</span>value\<span class="code-snippet__string">", \"</span>type\<span class="code-snippet__string">": \"</span>String\<span class="code-snippet__string">", \"</span>description\<span class="code-snippet__string">": \"</span>调用请求 id\<span class="code-snippet__string">"}]。"</span>);</span></code></pre></section><section style="min-height: 24px;text-align: justify;margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="font-size: 15px;"><strong><br></strong></span></section><section style="min-height: 24px;text-align: justify;margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="font-size: 15px;letter-spacing: 1px;">工具解析：</span></section><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="javascript"><code><span class="code-snippet_outer"><span class="code-snippet__built_in">Map</span>&lt;<span class="code-snippet__built_in">String</span>,<span class="code-snippet__built_in">Object</span>&gt; parse = (<span class="code-snippet__built_in">Map</span>&lt;<span class="code-snippet__built_in">String</span>,<span class="code-snippet__built_in">Object</span>&gt;)<span class="code-snippet__built_in">JSON</span>.parse(toolInput);</span></code><code><span class="code-snippet_outer"><span class="code-snippet__keyword">if</span>(parse.get(<span class="code-snippet__string">"requestId"</span>)==<span class="code-snippet__literal">null</span>){</span></code><code><span class="code-snippet_outer"><span class="code-snippet__keyword">return</span><span class="code-snippet__keyword">new</span> ToolExecuteResult(<span class="code-snippet__string">""</span>);</span></code><code><span class="code-snippet_outer">}</span></code><code><span class="code-snippet_outer"><span class="code-snippet__built_in">String</span> requestId = parse.get(<span class="code-snippet__string">"requestId"</span>).toString();</span></code><code><span class="code-snippet_outer">ApiLogSearchQuery apiLogSearchQuery = <span class="code-snippet__keyword">new</span> ApiLogSearchQuery();</span></code><code><span class="code-snippet_outer"><span class="code-snippet__comment">//日志查询解析处理</span></span></code></pre></section><section style="min-height: 24px;text-align: justify;margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><br></section><section style="min-height: 24px;text-align: justify;margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="font-size: 15px;letter-spacing: 1px;">思考决策逻辑：</span></section><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="typescript"><code><span class="code-snippet_outer"><span class="code-snippet__keyword">public</span><span class="code-snippet__keyword">static</span> final <span class="code-snippet__built_in">String</span> FORMAT_INSTRUCTIONS_CH =</span></code><code><span class="code-snippet_outer"><span class="code-snippet__string">"用户提出了一个问题: {question} \n"</span> +</span></code><code><span class="code-snippet_outer"><span class="code-snippet__string">"你可以选择使用下面这些工具：\n"</span>+</span></code><code><span class="code-snippet_outer"><span class="code-snippet__string">"{tool_list_description}"</span>+</span></code><code><span class="code-snippet_outer"><span class="code-snippet__string">"\n"</span>+</span></code><code><span class="code-snippet_outer"><span class="code-snippet__string">"同时你的思考过程如下："</span>+</span></code><code><span class="code-snippet_outer"><span class="code-snippet__string">"Thought: 每一次你需要首先思考你应该做什么\n"</span> +</span></code><code><span class="code-snippet_outer"><span class="code-snippet__string">"Action: 你需要决定是否使用工具，应该是[{tool_names}] 中的一个 Action，格式为 JSON。如果匹配不到工具，就不要思考了，直接返回结果，请不要把思考过程返回给用户。\n"</span> +</span></code><code><span class="code-snippet_outer"><span class="code-snippet__string">"Input: 如果匹配到工具，使用的工具的输入参数，赋值给 params\n"</span> +</span></code><code><span class="code-snippet_outer"><span class="code-snippet__string">"Observation: 如果匹配到工具，工具的输出结果，格式为[]。\n"</span> +</span></code><code><span class="code-snippet_outer"><span class="code-snippet__string">"Answer: 每一步回答问题的答案，格式为 JSON。你可以多次使用 Thought/Action/Input/Observation/Answer 来一步一步的思考如何回答问题。\n"</span>;</span></code></pre></section><p style="min-height: 24px;text-align: justify;margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><br></p><section style="margin-bottom: 0px;outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);font-size: 15px;background-color: rgb(255, 255, 255);text-align: center;line-height: normal;"><img class="rich_pages wxw-img" data-imgfileid="503044956" data-ratio="0.328125" data-s="300,640" src="https://oscimg.oschina.net/oscnet/457ebbb7-b2db-4f81-af49-cb94bd9aa6dc.png" data-type="png" data-w="256" style="outline: 0px;letter-spacing: 0.544px;font-size: 16px;visibility: visible !important;width: 122px !important;" referrerpolicy="no-referrer"></section><section style="margin-bottom: 0px;outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;font-size: 15px;background-color: rgb(255, 255, 255);color: rgb(100, 99, 99);text-align: center;line-height: normal;"><span style="outline: 0px;color: rgb(0, 17, 255);font-family: -apple-system, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 18px;letter-spacing: 1px;">个人小思考</span></section><section style="min-height: 24px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;"><strong><br></strong></span></section><ol class="list-paddingleft-1" style="margin-top: 8px;margin-bottom: 8px;padding-left: 1.5em;outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);min-height: 24px;line-height: 1.75em;"><li style="margin-top: 8px;margin-bottom: 8px;outline: 0px;min-height: 24px;text-align: justify;line-height: 1.75em;font-size: 15px;letter-spacing: 1px;"><section style="outline: 0px;min-height: 24px;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="outline: 0px;letter-spacing: 1px;">未来微服务 HSF 这种形式会向上往 agent 工厂或者 agent 服务框架这种形式演进，因为这个框架搭好了后，后面各个业务方快速集成到 agent 服务上，可被上层 AI 应用层调用</span></section></li><li style="margin-top: 8px;margin-bottom: 8px;outline: 0px;min-height: 24px;text-align: justify;line-height: 1.75em;font-size: 15px;letter-spacing: 1px;"><section style="outline: 0px;min-height: 24px;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="outline: 0px;letter-spacing: 1px;">如果多个 agent 联动了，才是真正的智能</span></section></li><li style="margin-top: 8px;margin-bottom: 8px;outline: 0px;min-height: 24px;text-align: justify;line-height: 1.75em;font-size: 15px;letter-spacing: 1px;"><section style="outline: 0px;min-height: 24px;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="outline: 0px;letter-spacing: 1px;">如何定义 agent？</span></section></li></ol><section style="outline: 0px;min-height: 24px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="outline: 0px;font-size: 15px;letter-spacing: 1px;">Agent 体系架构可以分为慎思型、反应型和混合型。</span></section><section style="outline: 0px;min-height: 24px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="outline: 0px;font-size: 15px;letter-spacing: 1px;">慎思型构建负责规划和推理行为，反应型构建处理需要快速响应的重要事件。</span></section><section style="outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);min-height: 24px;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><strong><span style="outline: 0px;font-size: 15px;letter-spacing: 1px;">信念-期望-意图（Belief-Desire-ltension， BDI) 体系架构是混合型体系架构的一个重要类型。</span></strong><span style="outline: 0px;font-size: 15px;letter-spacing: 1px;">Agent 的表示形式，Agent 的行为可以被描述成好像拥有信念、期望和意图等思维状态。<strong>信念表示 Agent 拥有的知识，期望描述 Agent 追求的目标，意图说明 Agent 选择计划以实现哪些目标。</strong></span></section><section style="min-height: 24px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="letter-spacing: 1px;"><br></span></section><section style="min-height: 24px;text-align: center;line-height: 1.75em;margin-bottom: 0px;margin-top: 0px;"><img class="rich_pages wxw-img" data-imgfileid="503044957" data-ratio="0.4925925925925926" src="https://oscimg.oschina.net/oscnet/6bf178e3-ef35-4c6d-8abc-81ef9528723d.png" data-type="png" data-w="1080" width="1080" referrerpolicy="no-referrer"></section><section style="min-height: 24px;text-align: center;line-height: 1.75em;margin-bottom: 0px;margin-top: 0px;"><span style="font-size: 12px;color: rgb(136, 136, 136);">openai 提供的 agent 概念</span></section><section style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></section><p style="margin-bottom: 0px;outline: 0px;text-wrap: wrap;background-color: rgb(255, 255, 255);font-size: 11pt;font-family: DengXian;color: rgb(0, 0, 0);letter-spacing: normal;text-align: center;line-height: normal;"><img class="rich_pages wxw-img" data-imgfileid="503044955" data-ratio="0.328125" data-s="300,640" src="https://oscimg.oschina.net/oscnet/319926d9-6e10-4a37-853a-8e49a4bef5bd.png" data-type="png" data-w="256" style="outline: 0px;font-size: 14.6667px;color: rgb(34, 34, 34);font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;visibility: visible !important;width: 133px !important;" referrerpolicy="no-referrer"></p><p style="margin-bottom: 0px;outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);line-height: 1.75em;text-align: center;"><span style="outline: 0px;box-sizing: inherit;color: rgb(0, 17, 255);font-family: -apple-system, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 18px;letter-spacing: 1px;">团队介绍</span></p><section style="min-height: 24px;text-align: justify;margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><br></section><section style="min-height: 24px;text-align: justify;margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="font-size: 15px;">我们是淘天集团商家与开放平台团队，目前主要围绕商家的日常经营场景，为中小商家提供高效易用的电商工具。</span></section><section style="margin-bottom: 0px;outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;font-size: 15px;background-color: rgb(255, 255, 255);color: rgb(100, 99, 99);text-align: justify;line-height: normal;"><br></section><section data-role="outer" label="Powered by 135editor.com" style="margin-bottom: 0px;outline: 0px;letter-spacing: 0.544px;visibility: visible;"><section style="margin-top: 5px;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;font-size: 16px;word-break: break-all;color: rgb(0, 0, 0);font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;text-align: center;line-height: 1.75em;"><span style="outline: 0px;color: rgb(0, 17, 255);"><strong style="outline: 0px;">¤</strong></span><span style="outline: 0px;"><strong style="outline: 0px;">&nbsp;拓展阅读&nbsp;</strong></span><span style="outline: 0px;color: rgb(0, 17, 255);"><strong style="outline: 0px;">¤</strong></span></section><section style="margin-top: 5px;margin-bottom: 5px;outline: 0px;letter-spacing: 0.544px;font-size: 16px;word-break: break-all;color: rgb(0, 0, 0);font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;text-align: center;line-height: 1.75em;"><br style="outline: 0px;"></section><section style="margin-top: 8px;margin-bottom: 8px;outline: 0px;font-family: -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 0.544px;text-indent: 0em;text-align: center;line-height: 1.75em;min-height: 24px;clear: both;visibility: visible;"><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fmp%2Fappmsgalbum%3F__biz%3DMzAxNDEwNjk5OQ%3D%3D%26action%3Dgetalbum%26album_id%3D2565944923443904512%23wechat_redirect" textvalue="3DXR 技术" linktype="text" imgurl="" imgdata="null" tab="innerlink" data-linktype="2" style="outline: 0px;color: var(--weui-LINK);cursor: pointer;">3DXR 技术</a>&nbsp;|&nbsp; 
   <a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fmp%2Fappmsgalbum%3F__biz%3DMzAxNDEwNjk5OQ%3D%3D%26action%3Dgetalbum%26album_id%3D1533906991218294785%23wechat_redirect" textvalue="终端技术" linktype="text" imgurl="" imgdata="null" tab="innerlink" data-linktype="2" style="outline: 0px;color: var(--weui-LINK);cursor: pointer;">终端技术</a>&nbsp;|&nbsp; 
   <a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fmp%2Fappmsgalbum%3F__biz%3DMzAxNDEwNjk5OQ%3D%3D%26action%3Dgetalbum%26album_id%3D1592015847500414978%23wechat_redirect" textvalue="音视频技术" linktype="text" imgurl="" imgdata="null" tab="innerlink" data-linktype="2" style="outline: 0px;color: var(--weui-LINK);cursor: pointer;">音视频技术</a></section><p style="margin-top: 8px;margin-bottom: 8px;outline: 0px;min-height: 24px;font-family: -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 0.544px;text-indent: 0em;text-align: center;line-height: 1.75em;visibility: visible;"><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fmp%2Fappmsgalbum%3F__biz%3DMzAxNDEwNjk5OQ%3D%3D%26action%3Dgetalbum%26album_id%3D1539610690070642689%23wechat_redirect" textvalue="服务端技术" linktype="text" imgurl="" imgdata="null" tab="innerlink" data-linktype="2" style="outline: 0px;color: var(--weui-LINK);cursor: pointer;">服务端技术</a><span style="outline: 0px;letter-spacing: 0.544px;">&nbsp;|&nbsp;</span><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fmp%2Fappmsgalbum%3F__biz%3DMzAxNDEwNjk5OQ%3D%3D%26action%3Dgetalbum%26album_id%3D2565883875634397185%23wechat_redirect" textvalue="技术质量" linktype="text" imgurl="" imgdata="null" tab="innerlink" data-linktype="2" style="outline: 0px;color: var(--weui-LINK);cursor: pointer;">技术质量</a>&nbsp;|&nbsp;<a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fmp%2Fappmsgalbum%3F__biz%3DMzAxNDEwNjk5OQ%3D%3D%26action%3Dgetalbum%26album_id%3D1522425612282494977%23wechat_redirect" textvalue="数据算法" linktype="text" imgurl="" imgdata="null" tab="innerlink" data-linktype="2" style="outline: 0px;color: var(--weui-LINK);cursor: pointer;">数据算法</a></p><p style="margin-top: 8px;margin-bottom: 8px;outline: 0px;min-height: 24px;font-family: -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 0.544px;text-indent: 0em;text-align: center;line-height: 1.75em;visibility: visible;"><br style="outline: 0px;"></p><section class="mp_profile_iframe_wrp" style="margin-bottom: 24px;outline: 0px;"><mp-common-profile class="custom_select_card mp_profile_iframe js_wx_tap_highlight" data-pluginname="mpprofile" data-id="MzAxNDEwNjk5OQ==" data-headimg="http://mmbiz.qpic.cn/mmbiz_png/33P2FdAnju8t5nZGhAatCrc4e2iaDfAaoInribRKxc7MOqdTGygfcLqSDxhj0trCHVEh94Sjl7zuWYzwouYtJ0VQ/300?wx_fmt=png&amp;wxfrom=19" data-nickname="大淘宝技术" data-alias="AlibabaMTT" data-signature="大淘宝技术官方账号" data-from="2" data-index="0" data-origin_num="697" data-isban="0" data-biz_account_status="0" data-weui-theme="light" data-is_biz_ban="0"></mp-common-profile></section></section><section style="display: none;line-height: 1.75em;"><br></section><p style="display: none;"><mp-style-type data-value="3"></mp-style-type></p></div><p style="color: #858585; font-size: 13px;">本文分享自微信公众号 - 大淘宝技术（AlibabaMTT）。<br>如有侵权，请联系 support@oschina.cn 删除。<br>本文参与「<a href="https://www.oschina.net/sharing-plan" target="_blank">OSC 源创计划</a>」，欢迎正在阅读的你也加入，一起分享。</p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 25 Feb 2024 02:22:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/4662964/blog/11044513</guid>
            <link>https://my.oschina.net/u/4662964/blog/11044513</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Wubuntu：披着 Windows 11 外衣的 Ubuntu]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>众所周知，Ubuntu 是最受欢迎的 Linux 发行版之一。而微软拥抱 Linux 之后，Windows 成为了最好的 Linux 发行版（不是）。如果将两者结合，会碰撞出怎样的火花？</p><p><strong>Wubuntu，又称 "Windows Ubuntu"</strong>，是基于 Ubuntu 开发的操作系统，其最具特色之处在于<strong>完全复刻了 Windows 的所有外观和功能</strong>，而且运行时不需要具备 TPM、安全启动或任何其他硬件要求。</p><blockquote><p><img src="https://oscimg.oschina.net/oscnet/up-b78011bce450db4cf20d1bb7cc559cd4cb6.png" referrerpolicy="no-referrer"><em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.wubuntu.org%2F" target="_blank">https://www.wubuntu.org/</a></u></em></p></blockquote><p><span>此外，Wubuntu</span>&nbsp;通过集成 Wine 提供了与 Windows 应用的兼容性，开发者称 Wubuntu 支持运行 Windows 的 .exe 和 .msi&nbsp;程序，以及支持 Android 应用。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-bc1f4a6dcc383b64786c013151ada03e885.png" referrerpolicy="no-referrer"></p><p>Wubuntu 使用的技术栈：</p><p><img src="https://oscimg.oschina.net/oscnet/up-d127229369e54b269f10365f1fad568a5d1.png" referrerpolicy="no-referrer"></p><p>Wubuntu 运行效果：</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-2e20ee135339d10eb33a0777b818ad6c9f1.png" referrerpolicy="no-referrer"><img alt="" src="https://oscimg.oschina.net/oscnet/up-ffec60452f4b93085c10c897e93761e16df.png" referrerpolicy="no-referrer"><img alt="" src="https://oscimg.oschina.net/oscnet/up-62e9f8b8a805f7ed3d4598c1d5c957a3119.png" referrerpolicy="no-referrer"><img alt="" src="https://oscimg.oschina.net/oscnet/up-1725fe7868e691dfed08e9814c6661a523e.png" referrerpolicy="no-referrer"><img alt="" src="https://oscimg.oschina.net/oscnet/up-61332db8d1390d860514df218a3d8a55444.png" referrerpolicy="no-referrer"></p><p>这界面不能说和 Windows 11 一模一样，只能说完全一致，微软法务部看了真的不会律师函警告吗？</p><p>此外，根据官网的信息，Wubuntu 提供免费版和专业版，其中专业版需要付费购买密钥才可使用，价格为 35 美元。但官方没有介绍两者的功能差异。</p><p>Wubuntu 下载地址：<em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.wubuntu.org%2Findex.php%2Fget%2Fwubuntu" target="_blank">https://www.wubuntu.org/index.php/get/wubuntu</a></u></em></p></div>
                                    ]]>
            </description>
            <pubDate>Sat, 24 Feb 2024 10:06:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/280083/wubuntu-windows-ubuntu</guid>
            <link>https://www.oschina.net/news/280083/wubuntu-windows-ubuntu</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[为什么 Chromebook 键盘采用小写字母？]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Chromebook 键盘上的所有按键都是小写字母。自 2010 年推出第一款 Chromebook 原型机 CR-48 以来，他们就一直如此。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-fdbc3ca95eb510cf632ffad2f3b12b6bf02.png" referrerpolicy="no-referrer"></p><p>谷歌最近<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.google%2Fproducts%2Fchromebooks%2Fchromebooks-lowercase-keyboard%2F" target="_blank">解释</a></u>了他们对「全小写键盘」的设计思路。当时参与早期 Chromebook 设计的 ChromeOS 团队高级主管 Alexander Kuscher 认为可以对按键进行精简，从而打造一款易于使用、对用户友好的键盘。</p><p>Chromebook 团队高级产品经理 Donny Reynolds 提出：</p><blockquote><p>我们已经习惯了键盘上的大写字母，但如果你进入一个文本开始编写文档，并开始在传统键盘上键入，按键就会与屏幕上显示的不一致，对吧？你按下大写'D'键，但出现的却是小写'd'。</p></blockquote><p>因此，他们决定不再为 Chromebook 键盘印上大写字母——确保用户「所见即所得」。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-f381533dbaf1652c58fb82ffd2f52aa40f7.png" referrerpolicy="no-referrer"></p><p>其实当时许多手机和平板电脑已经配备了简化的现代键盘——Android 手机在 2008 年首次亮相时就采用了小写键盘。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-e678bff4959ef28477371fd4d648545eed9.png" referrerpolicy="no-referrer"></p><p><em>早在 2008 年初代 G1 推出时，Android 就开启了小写键盘革命</em>。</p><p>因此 Donny Reynolds 表示：「当我们开始制造 Chromebook 时，我们自问‘计算机如何才能与众不同，而且没有几十年来的包袱？看起来更友好是我们计算机设计的一个重要组成部分，我认为小写键盘确实已经成为几乎自己的标志性品牌，以帮助实现这一目标。」</p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 23 Feb 2024 04:45:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/280052/chromebooks-lowercase-keyboard</guid>
            <link>https://www.oschina.net/news/280052/chromebooks-lowercase-keyboard</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
    </channel>
</rss>
