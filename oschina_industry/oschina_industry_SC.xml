<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[开源中国-综合资讯]]>
        </title>
        <link>https://www.oschina.net/news/industry</link>
        <atom:link href="https://rsshub.app/oschina/news/industry" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[开源中国-综合资讯 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Sat, 07 Oct 2023 03:49:23 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[ChatGPT 遭「卡脖子」，OpenAI 计划自研 AI 芯片]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#000000; text-align:start">根据&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftechcrunch.com%2F2023%2F10%2F06%2Fopenai-said-to-be-considering-developing-its-own-ai-chips%2F%3Fguccounter%3D1%26guce_referrer%3DaHR0cHM6Ly93d3cuZ29vZ2xlLmNvbS5oay8%26guce_referrer_sig%3DAQAAAL3fVeW5BS1z3Z9olNE6c2iybavGH0APpfPZxySiJi7WUXe83N7739IvRls5vIwuXKyA2eYoWcTiKlUTh7jVhzMkKKxJTSaY_n4awPm8XvK2tXu2OjLfdsRALDvUWwB1idflbNBNoRwu_fzD-uhZrxP90RGZfxjBWi5mEUiKzpMc" target="_blank">TechCrunch</a>&nbsp;的报道，随着 AI 芯片短缺的问题日益严重，OpenAI 现已开始考虑自研 AI 芯片。</p><p style="color:#000000; text-align:start">据悉，从去年开始 OpenAI 内部就已经开始讨论 AI 芯片战略，以解决其 AI 芯片短缺的问题。这些方案包括自研 AI 芯片、与英伟达等芯片制造商展开更紧密的合作、实现供应商多元化等。</p><p>OpenAI 首席执行官 Sam Altman 去年就公开抱怨英伟达 GPU 芯片稀缺，称公司受到 GPU 的严重限制。</p><p>由于英伟达主导了全球 95% 的 Al 训练领域市场，随着英伟达 GPU 显卡稀缺，加上 AI 算力成本持续攀升，即便强如 OpenAI 也在寻找新方案，从而避免长期被「卡脖子」。</p><p style="color:#000000; text-align:start">报道称，该公司尚未决定继续推进。Sam Altman 此前表示已将收购更多 AI 芯片作为公司的首要任务。</p><p style="color:#000000; text-align:start"><img alt="" src="https://static.oschina.net/uploads/space/2023/1007/112609_aSEr_2720166.jpeg" referrerpolicy="no-referrer"></p><p style="color:#000000; text-align:start">OpenAI 和大多数竞争对手一样，依赖基于 GPU 的硬件来开发 ChatGPT、GPT-4 和 DALL-E 3 等模型。GPU 能够并行执行许多计算，因此非常适合训练当今最强大的人工智能。</p><p style="color:#000000; text-align:start">不过 GPU 等芯片目前面临严重短缺的问题，据报道，英伟达性能最好的人工智能芯片在 2024 年之前都已售罄。</p></div>
                                    ]]>
            </description>
            <pubDate>Sat, 07 Oct 2023 03:26:44 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/260598</guid>
            <link>https://www.oschina.net/news/260598</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[CoDeF —— 强时序一致性视频处理算法]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>CoDeF 是能够高度保持视频时序一致性的的视频处理算法，可以轻松完成视频风格迁移、视频关键点追踪（包括流体）、用户自定义的视频内容编辑等任务。</p><p>CoDeF 支持将图像风格化算法升级为视频风格化算法，将图像关键点检测算法升级为视频关键点跟踪算法（甚至包括水和烟雾等非刚性物体的追踪），将图像语义分割算法升级为视频物体跟踪算法，将图像超分算法升级为视频超分算法，同时支持用户可交互的视频内容编辑。</p><p><img src="https://oscimg.oschina.net/oscnet/up-86a32563b77d2c6eaf06e2b3c03c320f292.gif" referrerpolicy="no-referrer"></p></div>
                                                                ]]>
            </description>
            <pubDate>Sat, 07 Oct 2023 02:58:44 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/p/codef</guid>
            <link>https://www.oschina.net/p/codef</link>
        </item>
        <item>
            <title>
                <![CDATA[Gitee 推荐 | 字符串插值变量处理工具库 FlexVars]]>
            </title>
            <description>
                <![CDATA[<h1><a id="user-content-flexvars" class="anchor" href="https://gitee.com/zhangfisher/flexvars#flexvars"></a>FlexVars</h1><p>Powerful string interpolation tool library</p><p><a href="https://gitee.com/link?target=https%3A%2F%2Fzhangfisher.github.io%2Fflexvars%2F%23%2Fcn%2Freadme">中文</a><a href="https://gitee.com/link?target=https%3A%2F%2Fzhangfisher.github.io%2Fflexvars%2F%23%2Fen%2Freadme">English</a></p><h2><a id="user-content-features" class="anchor" href="https://gitee.com/zhangfisher/flexvars#features"></a>Features</h2><p>-Supports positional and dictionary interpolation
-Supports multiple error handling mechanisms
-Support for null value processing mechanism
-Support filter chain processing of input variable values
-Support variable prefix suffix
-98%+unit test coverage</p><h2><a id="user-content-getting-started" class="anchor" href="https://gitee.com/zhangfisher/flexvars#getting-started"></a>Getting Started</h2><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="k">import</span><span class="p">{</span><span class="nx">FlexVars</span><span class="p">}</span><span class="k">from</span><span class="dl">"</span><span class="s2">flexvars</span><span class="dl">"</span></span><span id="LC2" class="line"></span><span id="LC3" class="line"><span class="kd">const</span><span class="nx">flexvars</span><span class="o">=</span><span class="k">new</span><span class="nx">FlexVars</span><span class="p">({</span></span><span id="LC4" class="line"><span class="na">filters</span><span class="p">:{</span></span><span id="LC5" class="line"><span class="na">currency</span><span class="p">:{</span></span><span id="LC6" class="line"><span class="na">args</span><span class="p">:[</span><span class="dl">"</span><span class="s2">prefix</span><span class="dl">"</span><span class="p">,</span><span class="dl">"</span><span class="s2">suffix</span><span class="dl">"</span><span class="p">,</span><span class="dl">"</span><span class="s2">sign</span><span class="dl">"</span><span class="p">],</span></span><span id="LC7" class="line"><span class="na">default</span><span class="p">:{</span><span class="na">prefix</span><span class="p">:</span><span class="dl">"</span><span class="s2">USD </span><span class="dl">"</span><span class="p">,</span><span class="na">suffix</span><span class="p">:</span><span class="dl">""</span><span class="p">,</span><span class="na">sign</span><span class="p">:</span><span class="dl">"</span><span class="s2">$</span><span class="dl">"</span><span class="p">}</span></span><span id="LC8" class="line"><span class="nl">next</span><span class="p">:(</span><span class="na">value</span><span class="p">:</span><span class="kr">any</span><span class="p">,</span><span class="na">args</span><span class="p">:</span><span class="nb">Record</span><span class="o">&lt;</span><span class="kr">string</span><span class="p">,</span><span class="kr">any</span><span class="o">&gt;</span><span class="p">,</span><span class="na">context</span><span class="p">:</span><span class="nx">FlexFilterContext</span><span class="p">)</span><span class="o">=&gt;</span><span class="p">{</span></span><span id="LC9" class="line"><span class="k">return</span><span class="s2">`</span><span class="p">${</span><span class="nx">args</span><span class="p">.</span><span class="nx">prefix</span><span class="p">}${</span><span class="nx">args</span><span class="p">.</span><span class="nx">sign</span><span class="p">}${</span><span class="nx">value</span><span class="p">}${</span><span class="nx">args</span><span class="p">.</span><span class="nx">suffix</span><span class="p">}</span><span class="s2">`</span></span><span id="LC10" class="line"><span class="p">}</span></span><span id="LC11" class="line"><span class="p">}</span></span><span id="LC12" class="line"><span class="p">}</span></span><span id="LC13" class="line"><span class="p">})</span></span><span id="LC14" class="line"></span><span id="LC15" class="line"><span class="kd">const</span><span class="nx">_</span><span class="o">=</span><span class="nx">flexvars</span><span class="p">.</span><span class="nx">replace</span></span><span id="LC16" class="line"></span><span id="LC17" class="line"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">_</span><span class="p">(</span><span class="dl">"</span><span class="s2">hello {}</span><span class="dl">"</span><span class="p">,</span><span class="dl">"</span><span class="s2">flexvars</span><span class="dl">"</span><span class="p">))</span></span><span id="LC18" class="line"><span class="c1">// =&gt; hello flexvars</span></span><span id="LC19" class="line"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">_</span><span class="p">(</span><span class="dl">"</span><span class="s2">I am {}</span><span class="dl">"</span><span class="p">,</span><span class="dl">"</span><span class="s2">tom</span><span class="dl">"</span><span class="p">)).</span><span class="nx">toBe</span><span class="p">(</span><span class="dl">"</span><span class="s2">I am tom</span><span class="dl">"</span><span class="p">)</span></span><span id="LC20" class="line"><span class="c1">// =&gt; I am tom</span></span><span id="LC21" class="line"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">_</span><span class="p">(</span><span class="dl">"</span><span class="s2">{ value | currency}</span><span class="dl">"</span><span class="p">,</span><span class="mi">100</span><span class="p">)).</span><span class="nx">toBe</span><span class="p">(</span><span class="dl">"</span><span class="s2">USD $100</span><span class="dl">"</span><span class="p">))</span></span><span id="LC22" class="line"><span class="c1">// =&gt; USD $100</span></span><span id="LC23" class="line"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">_</span><span class="p">(</span><span class="dl">"</span><span class="s2">{ value | currency('RMB','￥','元')}</span><span class="dl">"</span><span class="p">,</span><span class="mi">100</span><span class="p">)).</span><span class="nx">toBe</span><span class="p">(</span><span class="dl">"</span><span class="s2">RMB ￥100 元</span><span class="dl">"</span><span class="p">))</span><span class="c1">// </span></span><span id="LC24" class="line"><span class="c1">// =&gt; RMB ￥100 元</span></span><span id="LC25" class="line"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">_</span><span class="p">(</span><span class="dl">"</span><span class="s2">{ value | currency({prefix:'EUR '',suffix:''',sign:'€'})}</span><span class="dl">"</span><span class="p">,</span><span class="mi">100</span><span class="p">)).</span><span class="nx">toBe</span><span class="p">(</span><span class="dl">"</span><span class="s2">RMB €100</span><span class="dl">"</span><span class="p">))</span></span><span id="LC26" class="line"><span class="c1">// =&gt; EUR €100</span></span><span id="LC27" class="line"></span><span id="LC28" class="line"><span class="nx">flexvars</span><span class="p">.</span><span class="nx">addFilter</span><span class="p">({</span></span><span id="LC29" class="line"><span class="na">name</span><span class="p">:</span><span class="dl">"</span><span class="s2">add</span><span class="dl">"</span><span class="p">,</span></span><span id="LC30" class="line"><span class="na">args</span><span class="p">:[</span><span class="dl">"</span><span class="s2">step</span><span class="dl">"</span><span class="p">],</span></span><span id="LC31" class="line"><span class="na">default</span><span class="p">:{</span><span class="na">step</span><span class="p">:</span><span class="mi">1</span><span class="p">},</span></span><span id="LC32" class="line"><span class="nx">next</span><span class="p">(</span><span class="na">value</span><span class="p">:</span><span class="kr">any</span><span class="p">,</span><span class="na">args</span><span class="p">:</span><span class="nb">Record</span><span class="o">&lt;</span><span class="kr">string</span><span class="p">,</span><span class="kr">any</span><span class="o">&gt;</span><span class="p">,</span><span class="na">context</span><span class="p">:</span><span class="nx">FlexFilterContext</span><span class="p">){</span></span><span id="LC33" class="line"><span class="k">return</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">value</span><span class="p">)</span><span class="o">+</span><span class="nx">args</span><span class="p">.</span><span class="nx">step</span></span><span id="LC34" class="line"><span class="p">}</span></span><span id="LC35" class="line"><span class="p">})</span></span><span id="LC36" class="line"><span class="c1">// call chaining</span></span><span id="LC37" class="line"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">_</span><span class="p">(</span><span class="dl">"</span><span class="s2">{ value | add}</span><span class="dl">"</span><span class="p">,</span><span class="mi">100</span><span class="p">)).</span><span class="nx">toBe</span><span class="p">(</span><span class="dl">"</span><span class="s2">101</span><span class="dl">"</span><span class="p">)</span></span><span id="LC38" class="line"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">_</span><span class="p">(</span><span class="dl">"</span><span class="s2">{ value | add|add }</span><span class="dl">"</span><span class="p">,</span><span class="mi">100</span><span class="p">)).</span><span class="nx">toBe</span><span class="p">(</span><span class="dl">"</span><span class="s2">102</span><span class="dl">"</span><span class="p">)</span></span><span id="LC39" class="line"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">_</span><span class="p">(</span><span class="dl">"</span><span class="s2">{ value | add(2)|add(3) }</span><span class="dl">"</span><span class="p">,</span><span class="mi">100</span><span class="p">)).</span><span class="nx">toBe</span><span class="p">(</span><span class="dl">"</span><span class="s2">105</span><span class="dl">"</span><span class="p">)</span></span><span id="LC40" class="line"><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">_</span><span class="p">(</span><span class="dl">"</span><span class="s2">{ value | add(2)|add(3)|add(4) }</span><span class="dl">"</span><span class="p">,</span><span class="mi">100</span><span class="p">)).</span><span class="nx">toBe</span><span class="p">(</span><span class="dl">"</span><span class="s2">109</span><span class="dl">"</span><span class="p">)</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div>]]>
            </description>
            <pubDate>Sat, 07 Oct 2023 02:45:31 GMT</pubDate>
            <guid isPermaLink="false">https://gitee.com/zhangfisher/flexvars</guid>
            <link>https://gitee.com/zhangfisher/flexvars</link>
        </item>
        <item>
            <title>
                <![CDATA[每日一博 | 买彩票能中大奖？用 Java 盘点常见的概率悖论]]>
            </title>
            <description>
                <![CDATA[<div class="content"><span id="OSC_h1_1"></span><h1>引言</h1><p>《双色球头奖概率与被雷劈中的概率哪个高？》</p><p>《3 人轮流射击，枪法最差的反而更容易活下来？》</p><p>让我们用 Java 来探索 ta 们！</p><span id="OSC_h1_2"></span><h1>悖论 1：著名的三门问题</h1><p><strong>规则描述</strong>：你正在参加一个游戏节目，你被要求在三扇门中选择一扇：其中一扇后面有一辆车；其余两扇后面则是山羊。你选择了一道门，假设是一号门，然后知道门后面有什么的主持人，开启了另一扇后面有山羊的门，假设是三号门。他然后问你：「你想选择二号门吗？请问若想获得车，参赛者应该换二号门吗？</p><p><img alt="" src="https://mp.toutiao.com/mp/agw/article_material/open_image/get?code=ZjdjNjc4YjA2ZDYwMTE0MjNiYmViZTFjN2ZkMDQxZWIsMTY5NDA3OTk1MDA0Ng==" referrerpolicy="no-referrer"></p><p><strong>论证</strong>：分析需求，拆解为如下代码</p><pre><code>/**
 * &lt;p&gt; 三门问题解决方案 &lt;/p&gt;
 * @author yuanfeng.wang
 * @since 2023/8/29
 */
import java.util.Random;

public class ThreeDoorSolution {

    public static void main(String[] args) {
        // 模拟执行 1 万次，打印获胜的概率
        threeDoor(10000);
    }

    /**
     * 三门问题逻辑拆解
     * @param numSimulations 总共执行多少轮游戏
     */
    private static void threeDoor(int numSimulations) {
        int switchWins = 0;
        int stayWins = 0;

        Random random = new Random();
        for (int i = 0; i &lt; numSimulations; i++) {
            // 随机确定车所在的门
            int carDoor = random.nextInt(3);

            // 玩家随机选择一扇门
            int playerChoice = random.nextInt(3);

            // 主持人随机打开一扇门：要求该门不是玩家选择的，且必须是羊
            int openedDoor;
            do {
                openedDoor = random.nextInt(3);
            } while (openedDoor == carDoor || openedDoor == playerChoice);

            // 换门后的选择：不能是打开的门，不能是玩家选择的门，则是交换之后的门
            int finalChoice;
            do {
                finalChoice = random.nextInt(3);
            } while (finalChoice == playerChoice || finalChoice == openedDoor);

            // 计算是否换门获胜
            if (finalChoice == carDoor) {
                switchWins++;
            }

            // 计算不换门获胜
            if (playerChoice == carDoor) {
                stayWins++;
            }
        }

        // 输出结果
        System.out.println("在 " + numSimulations + " 次模拟中：");
        System.out.println("换门获胜的概率：" + (double) switchWins / numSimulations);
        System.out.println("不换门获胜的概率：" + (double) stayWins / numSimulations);
    }
}
// 模拟运行，打印结果如下
// 在 10000 次模拟中：
// 换门获胜的概率：0.6679
// 不换门获胜的概率：0.3321

</code></pre><p><strong>结论</strong>：三门问题看似一道简单的概率题，几十年来却一直引发巨大争议，持两种不同观点的人基本是五五开；事实上始终选择换门的玩家，获胜的概率 2/3，而保持原方案的胜率只有 1/3</p><span id="OSC_h1_3"></span><h1>悖论 2：双色球我能中大奖</h1><p><strong>规则描述</strong>：从 1-33 个红色球中随机选出 6 个，再从 1-16 个蓝色球中随机选择 1 个，最终开奖出一注 6+1 组合球，无顺序要求；</p><ul><li>一等奖：中 6 红 + 1 蓝</li><li>二等奖：中 6 红</li><li>三等奖：中 5 红 + 1 蓝</li><li>四等奖：中 4 红 + 1 蓝，或只中 5 个红</li><li>五等奖：中 3 红 + 1 蓝，或只中 4 个红</li><li>六等奖：中 1 蓝</li></ul><p><strong>论证</strong>：分析玩法，计算一等奖中奖率，从 33 个红球样本中选择 6 个，计算总共的组合数，即数学公式 C(n, m) = n!/((n-m)! * m!)，代入计算 C(33, 6) = 33!/((33-6)! * 6!) = 1107568，再乘以 16，最终得出一等奖获奖概率 1/17721088。</p><p>分析规则，以下代码展示了开奖一次，购买 N 注时，打印中奖信息的程序，当代入 N=500 万时，多次执行，可以很轻松打印出一等奖</p><pre><code>
import java.util.*;

/**
 * &lt;p&gt;双色球随机模拟&lt;/p&gt;
 * @author yuanfeng.wang
 * @since 2023/8/29
 */
public class SsqSolution {

    private static Random random = new Random();

    /**
     * 开奖的红球
     */
    private static Set&lt;Integer&gt; winningRedBalls;

    /**
     * 开奖的蓝球
     */
    private static int winningBlueBall;

    // 静态块初始化一组开奖号码
    static {
        // 篮球 01-16
        winningBlueBall = random.nextInt(16) + 1;

        // 红球 01-33 生成 6 个
        winningRedBalls = new HashSet&lt;&gt;();
        while (winningRedBalls.size() &lt; 6) {
            int num = random.nextInt(33) + 1;
            winningRedBalls.add(num);
        }
    }

    public static void main(String[] args) {
        play(500_0000);
    }

    /**
     *
     * @param num 运行一次程序只开一次奖，此参数表示总共购买多少注
     */
    public static void play(int num) {
        System.out.println("\n 本期开奖号码：");
        System.out.println("红球：" + winningRedBalls + " 篮球：" + winningBlueBall);
        for (int i = 0; i &lt; num; i++) {
            playOnce();
        }
    }

    private static void playOnce() {
        Set&lt;Integer&gt; userRedBalls = getUserSelectedRedBalls();
        int userBlueBall = getUserSelectedBlueBall();

        int redBallMatch = countMatchingBalls(userRedBalls, winningRedBalls);
        boolean blueBallMatch = (userBlueBall == winningBlueBall);

        if (redBallMatch == 6 &amp;&amp; blueBallMatch) {
            System.out.println("\n 恭喜你中了一等奖！");
            System.out.println("玩家购买的号码：");
            System.out.println("红球：" + userRedBalls + " 蓝球：" + userBlueBall);
        } else if (redBallMatch == 6) {
            System.out.println("\n 恭喜你中了二等奖！");
        } else if (redBallMatch == 5 &amp;&amp; blueBallMatch) {
//            System.out.println("\n 恭喜你中了三等奖！");
        } else if (redBallMatch == 5 || (redBallMatch == 4 &amp;&amp; blueBallMatch)) {
//            System.out.println("\n 恭喜你中了四等奖！");
        } else if (redBallMatch == 4 || (redBallMatch == 3 &amp;&amp; blueBallMatch)) {
//            System.out.println("\n 恭喜你中了五等奖！");
        } else if (blueBallMatch) {
//            System.out.println("\n 恭喜你中了最小奖！");
        } else {
            //没中奖，不打印记录
        }
    }

    /**
     * 返回玩家选择的 6 个红球,范围 1-33，不重复
     */
    private static Set&lt;Integer&gt; getUserSelectedRedBalls() {
        Set&lt;Integer&gt; userRedBalls = new HashSet&lt;&gt;();
        while (userRedBalls.size() &lt; 6) {
            int num = random.nextInt(33) + 1;
            userRedBalls.add(num);
        }
        return userRedBalls;
    }

    /**
     * 玩家选择的 1 个蓝球,范围 1-16
     */
    private static int getUserSelectedBlueBall() {
        return random.nextInt(16) + 1;
    }

    /**
     * 匹配中了几个红球
     * @return 中红球个数
     */
    private static int countMatchingBalls(Set&lt;Integer&gt; userBalls, Set&lt;Integer&gt; winningBalls) {
        int count = 0;
        for (int ball : userBalls) {
            if (winningBalls.contains(ball)) {
                count++;
            }
        }
        return count;
    }

}

</code></pre><p><strong>结论</strong>：排除其它因素，头奖概率约 1700 万分之 1，这个结论并不直观，例举如下几个进行对比</p><p>1.一家祖孙三代人的生日都在同一天的概率约为 27 万分之一</p><p>2.小行星撞击地球的概率保守推测是 200 万分之一</p><p>3.生出全男或全女四胞胎的概率约为 352 万分之一</p><span id="OSC_h1_4"></span><h1>悖论 3：三个枪手</h1><p><strong>描述</strong>：三个小伙子同时爱上了一个姑娘，为了决定他们谁能娶这个姑娘，他们决定用枪进行一次决斗。A 的命中率是 30％，B 比他好些，命中率是 50％，最出色的枪手是 C，他从不失误，命中率是 100％。由于这个显而易见的事实，为公平起见，他们决定按这样的顺序：A 先开枪，B 第二，C 最后。然后这样循环，直到他们只剩下一个人。那么 A 第一枪应该怎么打？谁活下来的概率最大？</p><p><strong>论证</strong>：每个人的目标都是活下来，为了目标寻找最好的策略。以下开始分人讨论</p><p><strong>A：</strong></p><ul><li>若 A 开枪射杀了 B，则下个开枪是 C，C 会 100% 射杀 A，这不是一个好策略</li><li>若 A 开枪射杀了 C，则下一轮 B 会有 50% 的几率杀掉自己</li><li>若 A 开枪未打中，则下一轮可以坐山观虎斗，所以 A 最好的策略看似是故意打空枪更好一些</li></ul><p><strong>B：</strong></p><ul><li>若 A 已经将 C 射杀，此时 B 与 A 互相射击，B 的生存率高于 A</li><li>B 只能选择射杀 C，因为只要 C 活着，都会优先射杀 B</li></ul><p><strong>C：</strong></p><ul><li>先消除威胁大的 B，然后再杀掉 A，只要自己有开 2 枪的机会，直接获胜</li></ul><p><strong>结论</strong>：需求太复杂，暂未实现生存概率计算😭，欢迎补充悖论 3 的代码论证过程</p><blockquote><p>作者：京东保险&nbsp;王苑沣</p><p>来源：京东云开发者社区，转载请注明来源</p></blockquote></div>
                                    ]]>
            </description>
            <pubDate>Sat, 07 Oct 2023 02:41:31 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/4090830/blog/10109696</guid>
            <link>https://my.oschina.net/u/4090830/blog/10109696</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[KubeSphere 社区双周报 | OpenFunction v1.2.0 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>KubeSphere 社区双周报主要整理展示新增的贡献者名单和证书、新增的讲师证书以及两周内提交过 commit 的贡献者，并对近期重要的 PR 进行解析，同时还包含了线上/线下活动和布道推广等一系列社区动态。</p><p>本次双周报涵盖时间为：2023.09.15-2023.09.28。</p><h2>贡献者名单</h2><p><img src="https://oscimg.oschina.net/oscnet/up-cce05b68864a3f222cd17e6df1aa1c3655b.gif" alt="" referrerpolicy="no-referrer"></p><p><img src="https://oscimg.oschina.net/oscnet/up-7e6818d775388b1291392b3250789734a38.png" alt="" referrerpolicy="no-referrer"></p><h2>新晋 KubeSphere Contributor</h2><p>两周内共有 2 位新晋 KubeSphere Contributor，感谢各位对 KubeSphere 社区的贡献！</p><p><img src="https://oscimg.oschina.net/oscnet/up-ca0b0945c103e0492a91de92a5132784bea.png" alt="" referrerpolicy="no-referrer"></p><p><img src="https://oscimg.oschina.net/oscnet/up-e3ad1819572baf498ffd15433cf938b034d.png" alt="" referrerpolicy="no-referrer"></p><h2>近期更新</h2><h3>KubeSphere</h3><h4>1. 支持通过 IP 搜索 pod</h4><p>相关 PR：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkubesphere%2Fkubesphere%2Fpull%2F5921" target="_blank">https://github.com/kubesphere/kubesphere/pull/5921</a></p><p>贡献者：zhou1203</p><h3>OpenFunction</h3><h4>1. 发布了 OpenFunction v1.2.0，支持使用 keda-addons-http 作为同步函数运行时</h4><p>相关 Release: <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenFunction%2FOpenFunction%2Freleases%2Ftag%2Fv1.2.0" target="_blank">https://github.com/OpenFunction/OpenFunction/releases/tag/v1.2.0</a></p><p>贡献者：wrongerror</p><h4>2. 升级 OpenFunction Chart 依赖组件 Dapr, Keda 以及 contour 的版本</h4><p>相关 PR: <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenFunction%2Fcharts%2Fpull%2F51" target="_blank">https://github.com/OpenFunction/charts/pull/51</a></p><p>贡献者：wrongerror</p><h3>KubeKey</h3><h4>1. 支持部署 Kubernetes v1.27+</h4><p>相关 PR: <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkubesphere%2Fkubekey%2Fpull%2F2000" target="_blank">https://github.com/kubesphere/kubekey/pull/2000</a></p><p>贡献者：pixiake</p><h4>2. 支持部署高可用 Harbor</h4><p>相关 PR：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkubesphere%2Fkubekey%2Fpull%2F1992" target="_blank">https://github.com/kubesphere/kubekey/pull/1992</a></p><p>贡献者：wenwenxiong</p><blockquote><p>本文由博客一文多发平台 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopenwrite.cn%3Ffrom%3Darticle_bottom" target="_blank">OpenWrite</a> 发布！</p></blockquote></div>
                                    ]]>
            </description>
            <pubDate>Sat, 07 Oct 2023 02:17:31 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/4197945/blog/10115731</guid>
            <link>https://my.oschina.net/u/4197945/blog/10115731</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[1/8 的开源下载包含已知漏洞，开源项目的积极维护减少]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff; color:#333333">Sonatype&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.sonatype.com%2Fintroducing-our-9th-annual-state-of-the-software-supply-chain-report" target="_blank">发布</a>了最新的一份</span>《软件供应链状况》报告，深入探讨了如何在充满选择的世界中定义更好的软件，并探讨人工智能 (AI) 对软件开发的深远影响；还研究了开源供应、需求和安全之间错综复杂的相互作用。</p><p>报告跟踪了 Java (Maven)、JavaScript (npm)、Python (PyPI)、.NET (NuGet Gallery) 四大开源生态系统的开源应用增长情况。2022 年至 2023 年间，可用开源项目的数量平均增长了 29%。2023 年，开源项目平均发布了 15 个可供使用的版本，不同开源注册中心的特定生态系统平均有 10 到 22 个版本。这意味着每个月都会发布 1-2 个新版本，在观察到的生态系统中总共发布了 6000 万个新版本。</p><p><img height="293" src="https://oscimg.oschina.net/oscnet/up-a3af85a689f0adbcfb8236b4dac77b7f235.png" width="500" referrerpolicy="no-referrer"></p><p>每个受检测的生态系统都表现出一致的项目增长率，平均同比增长率高达 29%。</p><p><img height="295" src="https://oscimg.oschina.net/oscnet/up-9ab7acc5786b753b241922eeaa519953a3d.png" width="500" referrerpolicy="no-referrer"></p><p>但随着开源组件供应量的持续增长，其需求却未能与之同步。在过去两年中，下载量的增长率逐渐下降。2023 年的平均增长率为 33%，与 2021 年 73% 的增长率相比大幅下降。</p><p><span style="color:#000000">与此同时，开源软件安全问题没有放缓的迹象。截至 2023 年 9 月，研究团队共发现了&nbsp;245,032 个恶意软件包，是往年总和的 2 倍。八分之一的开源下载存在已知风险，且仍有 23% 的 Log4j 下载存在严重漏洞。</span></p><p><img height="304" src="https://oscimg.oschina.net/oscnet/up-b8b946760f70163d67ebbf53b91a14930fd.png" width="500" referrerpolicy="no-referrer"></p><p><span style="color:#000000">开源项目的主动维护也变得越来越少。研究表明，去年有近五分之一（18.6%）的项目停止维护，影响了 Java 和 JavaScript 生态系统。<span style="background-color:#ffffff">只有 11% 的开源项目实际上得到了积极维护。</span>尽管存在这些缺陷，但 Sonatype 仍然表示，近 96% 存在已知漏洞的组件下载可以通过选择无漏洞版本来避免。</span></p><p><span style="color:#000000">就软件开发中的人工智能而言，97% 的受访 DevOps 和 SecOps 领导者表示，他们目前在工作流程中某种程度上使用了人工智能，大多数人每天使用两个或更多工具。</span><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>去年，企业环境中 AI 和 ML 组件的采用率增加了 135%。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p><span style="color:#000000"><span style="background-color:#ffffff">研究还发现，企业自认为的安全程度与实际情况之间存在脱节。67% 的公司表示，他们确信自己的系统中没有来自漏洞库的代码，但今年有 10% 的公司因漏洞组件而遭遇安全漏洞。39% 的公司可以在</span><span style="background-color:#ffffff">&nbsp;1 到 7 天的时间内发现漏洞，29% 的公司需要一周以上的时间，28% 的公司只需要不到一天的时间。</span></span></p><p><span style="color:#000000"><span style="background-color:#ffffff">更多详情可<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.sonatype.com%2Fstate-of-the-software-supply-chain%2Fintroduction" target="_blank">查看完整报告</a>。</span></span></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 06 Oct 2023 04:46:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/260454/9th-annual-state-of-the-software-supply-chain-report</guid>
            <link>https://www.oschina.net/news/260454/9th-annual-state-of-the-software-supply-chain-report</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[GCC 安全策略文档已合并到仓库]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#000000; text-align:start">最近几周在 GCC 邮件列表进行讨论后，开发团队为 GCC 代码库添加了 GCC 安全策略，以概述编译器项目的安全流程。</p><p style="color:#000000; text-align:start"><img alt="" src="https://static.oschina.net/uploads/space/2023/1006/113615_PVqj_2720166.jpeg" referrerpolicy="no-referrer"></p><p style="color:#000000; text-align:start">该文档概述了 GCC 安全漏洞处理建议、GCC 语言运行库的安全注意事项、在 GCC 中实现的安全功能，以及私下报告安全漏洞的最佳方式。</p><p style="color:#000000; text-align:start">GCC 安全政策文档于周三<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgcc.gnu.org%2Fgit%2F%3Fp%3Dgcc.git%3Ba%3Dcommit%3Bh%3D4cac1d2eec5549927fe0caee179f80007e8d729b" target="_blank">提交</a>到代码库。如果希望了解更多关于 GCC 安全策略的内容，可以在&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgcc.gnu.org%2Fgit%2F%3Fp%3Dgcc.git%3Ba%3Dblob%3Bf%3DSECURITY.txt" target="_blank">SECURITY.txt</a>&nbsp;中阅读。</p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 06 Oct 2023 03:37:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/260447/gcc-security-policy</guid>
            <link>https://www.oschina.net/news/260447/gcc-security-policy</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Gitee 推荐 | Rocky Linux 系统安全加固工具 narsil]]>
            </title>
            <description>
                <![CDATA[<p><a href="https://gitee.com/seatonjiang/narsil/blob/main/README.md">English</a> | 简体中文</p><p align="center"><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fseatonjiang%2Fnarsil%23gh-light-mode-only"><img src="https://gitee.com/seatonjiang/narsil/raw/main/.github/narsil-light.png#gh-light-mode-only" referrerpolicy="no-referrer"></a><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fseatonjiang%2Fnarsil%23gh-dark-mode-only"><img src="https://gitee.com/seatonjiang/narsil/raw/main/.github/narsil-dark.png#gh-dark-mode-only" referrerpolicy="no-referrer"></a></p><p align="center"><img src="https://img.shields.io/static/v1?style=flat-square&amp;message=Rocky%20Linux&amp;color=15B076&amp;logo=rockylinux&amp;logoColor=FFFFFF&amp;label=" referrerpolicy="no-referrer"><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fseatonjiang%2Fnarsil%2Fissues"><img src="https://img.shields.io/github/issues/seatonjiang/narsil?style=flat-square&amp;color=blue" referrerpolicy="no-referrer"></a><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fseatonjiang%2Fnarsil%2Fpulls"><img src="https://img.shields.io/github/issues-pr/seatonjiang/narsil?style=flat-square&amp;color=brightgreen" referrerpolicy="no-referrer"></a><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fseatonjiang%2Fnarsil%2Fblob%2Fmain%2FLICENSE"><img src="https://img.shields.io/github/license/seatonjiang/narsil?&amp;style=flat-square" referrerpolicy="no-referrer"></a></p><p align="center"><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fseatonjiang%2Fnarsil%2Fissues">报告问题</a>
    ·
    <a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fseatonjiang%2Fnarsil%2Fissues">功能需求</a></p><p align="center">Rocky Linux 的系统安全加固工具</p><h2><a id="user-content--工具截图" class="anchor" href="https://gitee.com/seatonjiang/narsil#-%E5%B7%A5%E5%85%B7%E6%88%AA%E5%9B%BE"></a>💻 工具截图</h2><h3><a id="user-content-脚本执行" class="anchor" href="https://gitee.com/seatonjiang/narsil#%E8%84%9A%E6%9C%AC%E6%89%A7%E8%A1%8C"></a>脚本执行</h3><p align="center"><img src="https://gitee.com/seatonjiang/narsil/raw/main/.github/script-execution.png" referrerpolicy="no-referrer"></p><h3><a id="user-content-登录信息" class="anchor" href="https://gitee.com/seatonjiang/narsil#%E7%99%BB%E5%BD%95%E4%BF%A1%E6%81%AF"></a>登录信息</h3><p align="center"><img src="https://gitee.com/seatonjiang/narsil/raw/main/.github/login-information.png" referrerpolicy="no-referrer"></p><h3><a id="user-content-挂载硬盘" class="anchor" href="https://gitee.com/seatonjiang/narsil#%E6%8C%82%E8%BD%BD%E7%A1%AC%E7%9B%98"></a>挂载硬盘</h3><p align="center"><img src="https://gitee.com/seatonjiang/narsil/raw/main/.github/mount-disk.png" referrerpolicy="no-referrer"></p><h2><a id="user-content--工具特性" class="anchor" href="https://gitee.com/seatonjiang/narsil#-%E5%B7%A5%E5%85%B7%E7%89%B9%E6%80%A7"></a>✨ 工具特性</h2><ul><li>限制密码使用期限为 30 天</li><li>密码过期 30 天后，该账户将被禁用</li><li>设置两次修改密码的时间间隔为 1 天</li><li>在密码过期前 7 天将发出警告</li><li>将系统默认加密算法设置为 SHA512</li><li>将会话超时策略设置为 180 秒</li><li>为新建的用户创建并加入一个同名的组</li><li>将新建用户的 home 目录权限设置为 0750</li><li>将存量用户的 home 目录权限设置为 0750</li><li>强化 OpenSSH 配置（有些配置需要手动配置）</li><li>禁止没有 home 目录的用户登录</li><li>禁止新建的用户使用 SHELL 登录</li><li>禁止上传和用户信息的功能</li><li>禁止删除用户时同步删除该用户的组</li></ul><p>还有很多特性没有被列举出来，可以参考 <code>scripts</code> 目录下的文件了解更多信息。</p><h2><a id="user-content--使用说明" class="anchor" href="https://gitee.com/seatonjiang/narsil#-%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E"></a>🚀 使用说明</h2><h3><a id="user-content-第一步克隆仓库" class="anchor" href="https://gitee.com/seatonjiang/narsil#%E7%AC%AC%E4%B8%80%E6%AD%A5%E5%85%8B%E9%9A%86%E4%BB%93%E5%BA%93"></a>第一步：克隆仓库</h3><p>确保服务器安装了 Git，否则需要先用 <code>sudo dnf install -y git</code> 命令安装软件：</p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line">git clone https://github.com/seatonjiang/narsil.git</span></pre><div class="markdown-code-block-copy-btn"></div></div></div><p>如果因为网络问题无法连接，可以使用 Gitee 镜像仓库，但是镜像仓库会有 <code>30</code> 分钟的延迟：</p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line">git clone https://gitee.com/seatonjiang/narsil.git</span></pre><div class="markdown-code-block-copy-btn"></div></div></div><h3><a id="user-content-第二步编辑配置" class="anchor" href="https://gitee.com/seatonjiang/narsil#%E7%AC%AC%E4%BA%8C%E6%AD%A5%E7%BC%96%E8%BE%91%E9%85%8D%E7%BD%AE"></a>第二步：编辑配置</h3><p>进入项目文件夹：</p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="nb">cd </span>narsil</span></pre><div class="markdown-code-block-copy-btn"></div></div></div><p>核对配置文件中的配置信息（配置文件说明在下文）：</p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line">vi narsil.conf</span></pre><div class="markdown-code-block-copy-btn"></div></div></div><h3><a id="user-content-第三步运行脚本" class="anchor" href="https://gitee.com/seatonjiang/narsil#%E7%AC%AC%E4%B8%89%E6%AD%A5%E8%BF%90%E8%A1%8C%E8%84%9A%E6%9C%AC"></a>第三步：运行脚本</h3><p>如果是 root 账号，可以直接运行，如果是普通账号，需要使用 <code>sudo</code> 运行，而且必须用 <code>bash</code> 运行该脚本：</p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="nb">sudo </span>bash narsil.sh</span></pre><div class="markdown-code-block-copy-btn"></div></div></div><h2><a id="user-content--配置文件" class="anchor" href="https://gitee.com/seatonjiang/narsil#-%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6"></a>📝 配置文件</h2><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="c"># 每一项操作完成后进行验证</span></span><span id="LC2" class="line"><span class="py">VERIFY</span><span class="p">=</span><span class="s">'Y'</span></span><span id="LC3" class="line"></span><span id="LC4" class="line"><span class="c"># 云服务器使用 Metadata 覆盖默认配置</span></span><span id="LC5" class="line"><span class="py">METADATA</span><span class="p">=</span><span class="s">'Y'</span></span><span id="LC6" class="line"></span><span id="LC7" class="line"><span class="c"># 在 banner 中添加生产环境的提示</span></span><span id="LC8" class="line"><span class="py">PROD_TIPS</span><span class="p">=</span><span class="s">'Y'</span></span><span id="LC9" class="line"></span><span id="LC10" class="line"><span class="c"># SSH 端口配置</span></span><span id="LC11" class="line"><span class="py">SSH_PORT</span><span class="p">=</span><span class="s">'22'</span></span><span id="LC12" class="line"></span><span id="LC13" class="line"><span class="c"># 时区配置</span></span><span id="LC14" class="line"><span class="py">TIME_ZONE</span><span class="p">=</span><span class="s">'Asia/Shanghai'</span></span><span id="LC15" class="line"></span><span id="LC16" class="line"><span class="c"># 主机名称配置（当 METADATA 为 Y 时会自动拉取元数据）</span></span><span id="LC17" class="line"><span class="py">HOSTNAME</span><span class="p">=</span><span class="s">'rockylinux'</span></span><span id="LC18" class="line"></span><span id="LC19" class="line"><span class="c"># DNS 服务器配置（当 METADATA 为 Y 时会自动拉取元数据）</span></span><span id="LC20" class="line"><span class="py">DNS_SERVER</span><span class="p">=</span><span class="s">'119.29.29.29 119.28.28.28'</span></span><span id="LC21" class="line"></span><span id="LC22" class="line"><span class="c"># NTP 服务器配置（当 METADATA 为 Y 时会自动拉取元数据）</span></span><span id="LC23" class="line"><span class="py">NTP_SERVER</span><span class="p">=</span><span class="s">'ntp.tencent.com'</span></span><span id="LC24" class="line"></span><span id="LC25" class="line"><span class="c"># Docker 配置</span></span><span id="LC26" class="line"><span class="py">DOCKER_CE_REPO</span><span class="p">=</span><span class="s">'http://mirrors.tencent.com/docker-ce/linux/centos/docker-ce.repo'</span></span><span id="LC27" class="line"><span class="py">DOCKER_CE_MIRROR</span><span class="p">=</span><span class="s">'mirrors.tencent.com'</span></span><span id="LC28" class="line"><span class="py">DOCKER_HUB_MIRRORS</span><span class="p">=</span><span class="s">'https://hub-mirror.c.163.com'</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><h2><a id="user-content--独立功能" class="anchor" href="https://gitee.com/seatonjiang/narsil#-%E7%8B%AC%E7%AB%8B%E5%8A%9F%E8%83%BD"></a>🔨 独立功能</h2><p>Narsil 中包含了一些独立的功能，这些功能并不在自动执行的脚本中，需要使用参数单独使用，可以使用 <code>sudo bash narsil.sh -h</code> 命令查看所有独立功能。</p><h3><a id="user-content-清理垃圾" class="anchor" href="https://gitee.com/seatonjiang/narsil#%E6%B8%85%E7%90%86%E5%9E%83%E5%9C%BE"></a>清理垃圾</h3><p>清理所有的系统日志文件。</p><blockquote><p>某些云服务商提供的镜像由于制作的过程不规范，导致打包了一些垃圾文件到镜像中，建议在初始化系统之前先进行清理。</p></blockquote><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="nb">sudo </span>bash narsil.sh <span class="nt">-c</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><h3><a id="user-content-安装-docker" class="anchor" href="https://gitee.com/seatonjiang/narsil#%E5%AE%89%E8%A3%85-docker"></a>安装 Docker</h3><p>安装 Docker 服务并设置镜像加速（腾讯云会自动使用内网加速地址）。</p><blockquote><p>安装完成后，可以使用 <code>docker run hello-world</code> 测试 Docker 的相关功能是否正常。</p></blockquote><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="nb">sudo </span>bash narsil.sh <span class="nt">-d</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><h3><a id="user-content-挂载硬盘-1" class="anchor" href="https://gitee.com/seatonjiang/narsil#%E6%8C%82%E8%BD%BD%E7%A1%AC%E7%9B%98-1"></a>挂载硬盘</h3><p>交互式挂载数据盘（腾讯云会使用弹性云硬盘的软链接方式挂载），数据无价，操作过程切记小心！</p><blockquote><p>如果所选的硬盘已经被挂载，会提示解除挂载及格式化操作。</p></blockquote><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="nb">sudo </span>bash narsil.sh <span class="nt">-f</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><h3><a id="user-content-修改主机名称" class="anchor" href="https://gitee.com/seatonjiang/narsil#%E4%BF%AE%E6%94%B9%E4%B8%BB%E6%9C%BA%E5%90%8D%E7%A7%B0"></a>修改主机名称</h3><p>配置文件的参数如果没有变化，那么将优先获取元数据。</p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="nb">sudo </span>bash narsil.sh <span class="nt">-h</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><h3><a id="user-content-修改端口" class="anchor" href="https://gitee.com/seatonjiang/narsil#%E4%BF%AE%E6%94%B9%E7%AB%AF%E5%8F%A3"></a>修改端口</h3><p>交互式修改 SSH 端口。</p><blockquote><p>端口范围需要在 10000 到 65535 之间。</p></blockquote><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="nb">sudo </span>bash narsil.sh <span class="nt">-p</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><h3><a id="user-content-卸载监控" class="anchor" href="https://gitee.com/seatonjiang/narsil#%E5%8D%B8%E8%BD%BD%E7%9B%91%E6%8E%A7"></a>卸载监控</h3><p>卸载云服务商安装到服务器中的各种监控组件。</p><blockquote><p>目前已经支持腾讯云监控组件的卸载。</p></blockquote><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="nb">sudo </span>bash narsil.sh <span class="nt">-r</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><h3><a id="user-content-添加交换空间" class="anchor" href="https://gitee.com/seatonjiang/narsil#%E6%B7%BB%E5%8A%A0%E4%BA%A4%E6%8D%A2%E7%A9%BA%E9%97%B4"></a>添加交换空间</h3><p>如果物理内存太小，建议添加交换空间。</p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="nb">sudo </span>bash narsil.sh <span class="nt">-s</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><h2><a id="user-content--目录结构" class="anchor" href="https://gitee.com/seatonjiang/narsil#-%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84"></a>📂 目录结构</h2><p>下面是整个项目的文件夹结构，<code>config</code> 及 <code>scripts</code> 文件夹中的文件省略显示。</p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line">narsil</span><span id="LC2" class="line">├── narsil.sh</span><span id="LC3" class="line">├── narsil.conf</span><span id="LC4" class="line">├── config</span><span id="LC5" class="line">│   └── <span class="o">(</span>some config files<span class="o">)</span></span><span id="LC6" class="line">└── scripts</span><span id="LC7" class="line">    └── <span class="o">(</span>some script files<span class="o">)</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><h2><a id="user-content--参与共建" class="anchor" href="https://gitee.com/seatonjiang/narsil#-%E5%8F%82%E4%B8%8E%E5%85%B1%E5%BB%BA"></a>🤝 参与共建</h2><p>我们欢迎所有的贡献，你可以将任何想法作为 Pull Requests 或 Issues 提交，顺颂商祺 :)</p><h2><a id="user-content--开源许可" class="anchor" href="https://gitee.com/seatonjiang/narsil#-%E5%BC%80%E6%BA%90%E8%AE%B8%E5%8F%AF"></a>📃 开源许可</h2><p>项目基于 GNU 通用公共许可证 v3.0 发布，详细说明请参阅 <a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fseatonjiang%2Fnarsil%2Fblob%2Fmain%2FLICENSE">LICENCE</a> 文件。</p>]]>
            </description>
            <pubDate>Fri, 06 Oct 2023 03:36:00 GMT</pubDate>
            <guid isPermaLink="false">https://gitee.com/seatonjiang/narsil</guid>
            <link>https://gitee.com/seatonjiang/narsil</link>
        </item>
        <item>
            <title>
                <![CDATA[大模型在无损压缩方面超越 PNG 和 FLAC]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#000000; text-align:start">Google DeepMind 和 Meta 的研究人员发表论文《<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Farxiv.org%2Fabs%2F2309.10668" target="_blank">Language Modeling Is Compression</a>》，他们发现 DeepMind 的大语言模型 Chinchilla 70B 在图像和音频的无损压缩上超过了 PNG 和 FLAC。</p><p style="color:#000000; margin-left:0; margin-right:0; text-align:start">论文提到，Chinchilla 70B 能将 ImageNet 图像数据库中的图像无损压缩到原始大小 43.4%，超过了 PNG 算法的 58.5%。</p><p style="color:#000000; margin-left:0; margin-right:0; text-align:start">Chinchilla 能将 LibriSpeech 音频数据集中的样本无损压缩到原始大小 16.4%，超过 FLAC 算法的 30.3%。</p><p style="color:#000000; text-align:start"><img alt="" src="https://oscimg.oschina.net/oscnet/up-ca6b2c476913b6a89c88077731175c6b63b.png" referrerpolicy="no-referrer"></p><p style="color:#000000; text-align:start"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Farstechnica.com%2Finformation-technology%2F2023%2F09%2Fai-language-models-can-exceed-png-and-flac-in-lossless-compression-says-study%2F" target="_blank">据介绍</a>，Chinchilla 70B 主要是训练用于处理文本，但它在压缩其它类型的数据集上的效果也表现优异，甚至优于专门的算法。</p><p style="color:#000000; text-align:start">下面的例子比较了 gzip 和 Chinchilla 在示例文本上的生成效果。可以看到，gzip 的输出没有可读性。</p><p><img alt="" src="https://static.oschina.net/uploads/space/2023/1005/191209_GfKh_2720166.png" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 05 Oct 2023 11:14:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/260407/llm-can-exceed-png-and-flac-in-lossless-compression</guid>
            <link>https://www.oschina.net/news/260407/llm-can-exceed-png-and-flac-in-lossless-compression</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[龙芯为 Linux 6.7 支持 LoongArch 架构 KVM 虚拟机]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>在已发布的多个 Linux 内核版本中，龙芯工程师都致力于为 LoongArch 架构实现更多内核功能。到目前为止，LoongArch CPU 的性能虽然无法与 x86_64 或 Arm 硬件相比，但正在慢慢变得更加实用，此外架构支持方面已经越来越成熟。</p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgit.kernel.org%2Fpub%2Fscm%2Flinux%2Fkernel%2Fgit%2Fchenhuacai%2Flinux-loongson.git%2Flog%2F%3Fh%3Dloongarch-next" target="_blank">根据龙芯工程师最新提交的代码</a>，Linux 内核的龙芯 Git 分支已将其所有初始 KVM 支持 (Kernel-based Virtual Machine) 代码提交到 loongarch-next 排队，迎接大约一个月后 Linux 6.7 合并窗口，即将迎来对基于内核的虚拟机支持。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-da5409cd652b9af9cb94b9dd19283a665d1.png" referrerpolicy="no-referrer"></p><p>这组补丁为龙芯 CPU 提供了所有基础的 KVM 支持代码。这种 KVM 支持依赖于 LoongArch 的虚拟化扩展，是 LoongArch 支持的首个虚拟化方式。</p><p>虽然考虑到目前 LoongArch CPU 性能水平，KVM 虚拟化支持在目前可能不太实用，但随着性能的提高，以及龙芯未来在云 / 虚拟化服务器领域的扩展，KVM 虚拟化支持将变得十分重要，因此提早做准备是有必要的。</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 04 Oct 2023 04:13:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/260296/loongarch-kvm-for-linux-6-7</guid>
            <link>https://www.oschina.net/news/260296/loongarch-kvm-for-linux-6-7</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[AgentVerse —— 多 LLM 环境模拟框架]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>AgentVerse 提供了一个多功能框架，可简化为大型语言模型（LLM）创建定制多代理环境的过程。框架旨在以最小的投入促进快速开发和定制，从而使研究人员能够专注于他们的研究，而不是被实施细节所困扰。</p><p><img alt="" height="333" src="https://static.oschina.net/uploads/space/2023/0915/161848_BpYH_4252687.png" width="500" referrerpolicy="no-referrer"></p><h4 style="text-align:start"><strong><span><span><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>特点</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></h4><ul><li><p><span><span><strong>高效的环境构建：</strong>我们的框架提供了一系列基本构建块，可以轻松创建多代理环境。只需要配置文件中的几行，就可以轻松构建 LLM 聊天室等基本环境。此过程需要为 LLM 士定义环境设置和提示，使研究人员能够专注于实验和分析。</span></span></p></li><li><p><span><span><strong>可定制组件</strong>：AgentVerse 通过将多代理环境划分为五个功能模块并定义各自的接口来简化多代理环境。对于使用 AgentVerse 提供的基础模块无法直接构建的复杂环境，你可以自定义这五个功能模块中的一个或多个接口，根据你的需求高效地创建你自己的多 Agent 环境。</span></span></p></li><li><p><span><span><strong>工具（插件）利用</strong>：AgentVerse 通过工具支持多代理环境。目前，AgentVerse 支持<a href="https://github.com/OpenBMB/BMTools">BMTools</a>中提供的工具。</span></span></p></li></ul><p><img height="287" src="https://static.oschina.net/uploads/space/2023/0915/161814_aa6e_4252687.png" width="500" referrerpolicy="no-referrer"></p></div>
                                                                ]]>
            </description>
            <pubDate>Wed, 04 Oct 2023 03:40:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/p/agentverse</guid>
            <link>https://www.oschina.net/p/agentverse</link>
        </item>
        <item>
            <title>
                <![CDATA[每日一博 | 使用 FHE 实现加密大语言模型]]>
            </title>
            <description>
                <![CDATA[每日一博 | 使用 FHE 实现加密大语言模型]]>
            </description>
            <pubDate>Wed, 04 Oct 2023 03:29:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/HuggingFace/blog/10112832</guid>
            <link>https://my.oschina.net/HuggingFace/blog/10112832</link>
        </item>
        <item>
            <title>
                <![CDATA[呼唤国内 Java 开发者共建 Solon]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h3>Solon 是什么？</h3><p style="color:#24292e; text-align:start"><strong>Java 生态级应用开发框架</strong>。从零开始构建，有自己的标准规范与开放生态（历时五年，具备全球第二级别的生态规模）。更多内容详见：<a href="https://www.oschina.net/news/258633">《中国这么多 Java 开发者，应该诞生出生态级应用开发框架》</a></p><h3>有什么特点？</h3><ul><li>启动快 5 ～ 10 倍。<span>&nbsp;</span><strong>（更快）</strong></li><li>qps 高 2～ 3 倍。<span>&nbsp;</span><strong>（更高）</strong></li><li>运行时内存节省 1/3 ~ 1/2。<span>&nbsp;</span><strong>（更少）</strong></li><li>打包可以缩小到 1/2 ~ 1/10；比如，300Mb 的变成了 23Mb。<span>&nbsp;</span><strong>（更小）</strong></li><li>同时支持 jdk8, jdk11, jdk17, jdk21,<span>&nbsp;</span><strong>graalvm native image</strong></li></ul><h3>呼唤？</h3><p style="color:#24292e; text-align:start">如果您开源感兴趣且愿意学习和贡献，欢迎您共建 Solon 生态。</p><h3>项目仓库地址？</h3><ul><li>gitee：<a href="https://gitee.com/noear/solon">https://gitee.com/noear/solon</a></li><li>github：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnoear%2Fsolon" target="_blank">https://github.com/noear/solon</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Tue, 03 Oct 2023 13:59:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/260414</guid>
            <link>https://www.oschina.net/news/260414</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[特斯拉：FSD 不使用高清地图，只依赖神经网络和海量数据]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>特斯拉最近解释了其全自动驾驶 (FSD) 软件是如何运作的，以及其作出决策背后的依据。</p><blockquote><p><img src="https://static.oschina.net/uploads/space/2023/1003/180701_AefK_2720166.png" referrerpolicy="no-referrer"></p></blockquote><p>特斯拉的官方推特账号<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftwitter.com%2FTesla%2Fstatus%2F1707858812424606039" target="_blank">转发</a>了特斯拉硅谷车主俱乐部发布的一段短视频，视频内容展示了 FSD 如何在没有任何导航的情况下在湖边的一条土路上行驶。该俱乐部<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftwitter.com%2FteslaownersSV%2Fstatus%2F1706123024037269568" target="_blank">写道</a>：「世界还没有意识到正在发生什么。」</p><p><img height="823" src="https://static.oschina.net/uploads/space/2023/1003/180844_X59r_2720166.png" width="725" referrerpolicy="no-referrer"></p><p>特斯拉在转发的推文中说道：</p><blockquote><p>特斯拉 FSD 不依赖高清地图，这意味着 Autopilot 可以在汽车以前从未见过的地方启用。 虽然它会考虑导航以到达正确的目的地，但如果没有路线或地图可用，它会选择最可能的路径。<strong>这条路径是由大多数人在任何给定场景下所做的事情决定的，并由我们全球数百万辆汽车的学习提供动力。</strong>车道的概念也只是松散地嵌入到我们的系统中，使汽车能够自信地在没有标记的道路上行驶。</p></blockquote><p>特斯拉利用其车队的视频来训练 FSD 的能力。马斯克此前曾表示：「道路是为生物神经网络和眼睛设计的，因此数字神经网络和摄像头将发挥最佳作用。」</p><p>今年 7 月初，在 2023 年世界人工智能大会上，马斯克还表示，特斯拉「非常接近」实现全自动驾驶能力。他说：「过去我对这个预测一直是错误的，但我觉得我们比以往任何时候都更接近这个预测。」</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-adf92c911bcb0d3d528ae1aac0dca386027.png" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 03 Oct 2023 10:13:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/260260</guid>
            <link>https://www.oschina.net/news/260260</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[RMS 谈 AI、Red Hat 和道德软件许可]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#000000; text-align:start">在瑞士 Biel 举行的庆祝 GNU 诞生 40 周年的活动上，GNU 和 FSF 创始人 Richard Stallman (RMS) 发表了 25 分钟的演讲，除了披露身患癌症外，他还谈论了 Red Hat、AI 和道德软件许可。</p><p style="color:#000000; text-align:start"><img alt="" src="https://oscimg.oschina.net/oscnet/up-d7dc3b154962c7667a46bffdb69807efc99.png" referrerpolicy="no-referrer"></p><p style="color:#000000; text-align:start"><em>RMS 在瑞士 Biel 参加庆祝 GNU 40 岁生日的活动</em></p><p style="color:#000000; text-align:start">RMS 表示目前正在接受滤泡性淋巴瘤的治疗，他称之为「生长缓慢和可控的」。</p><p style="color:#000000; text-align:start"><strong>Red Hat&nbsp;<strong><strong>和&nbsp;</strong></strong>GPL</strong></p><p style="color:#000000; text-align:start">Red Hat 的支持合同禁止客户重新分发该公司的开源软件，RMS 认为此举可能没有违反 GPL 许可，但其做法是「反社会的」。</p><p style="color:#000000; text-align:start">他认为 Red Hat 应该停止这一做法，或者社区能通过施加影响力让 Red Hat 做出改变。</p><p style="color:#000000; text-align:start"><strong>生成式&nbsp;<strong><strong>AI&nbsp;</strong></strong>不具备理解能力</strong></p><p style="color:#000000; text-align:start">对于 AI 或生成式聊天机器人 ChatGPT，RMS 认为危险主要来自于 AI 营销人员所编织的敍事。</p><p style="color:#000000; text-align:start">他认为今天的 AI 尚未真正具有理解能力，但人们正使用 AI 这一术语来夸大其词，他说 ChatGPT 生成的内容都是废话，不过是流畅的废话。</p><p style="color:#000000; text-align:start">因此他认为，相信 ChatGPT 这类产品生成的内容的人都很愚蠢。</p><p style="color:#000000; text-align:start">RMS 说道：「在我看来，‘intelligence’ 意味着需要具备了解或理解某个领域的能力。如果某些东西不能真正理解事情，我们不应该说它是智能的，甚至是一点智能都没有，但人们正在用人工智能一词来描述废话生成器。」</p><p style="color:#000000; text-align:start">所以他没有把那些产品称作「人工智能」或任何带有 ‘intelligence’ 一词的东西，因为这会鼓励大众认为它们（生成式人工智能程序）所说的不是胡说八道。它鼓励大众相信它们，这给了他们造成巨大伤害的机会。</p><p style="color:#000000; text-align:start">然而，这并不意味着 RMS 认为真正的人工智能并不存在。</p><p style="color:#000000; text-align:start">他说：「有些程序可以查看一些放大细胞的照片并告诉你诊断结果，无论是否患有癌症，比任何人类医生都更有可能正确。另外，有一些人工智能系统可以非常有效地找出什么会吸引人们的注意力。这些被反社交媒体平台使用，可悲的是，它们效果很好。他们非常擅长这些工作，但他们所做的是让用户上瘾。」</p><p style="color:#000000; text-align:start"><strong>道德软件许可证</strong></p><p style="color:#000000; text-align:start">RMS 似乎不是所谓的「道德」软件许可证的支持者，试图监管谁可以使用软件。</p><p style="color:#000000; text-align:start">这不足为奇，因为他倡导的自由软件哲学的四项基本自由中的第一项是用户具有出于任何目的运行软件的自由。</p><p style="color:#000000; text-align:start">演讲最后，RMS 抛出了一个问题——「我们如何让年轻人对自由软件感兴趣？」</p><p style="color:#000000; text-align:start">他称这个问题是「我们在社区中面临的难题之一」。</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 03 Oct 2023 04:41:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/260374/rms-talks-red-hat-ai-and-ethical-software-licenses</guid>
            <link>https://www.oschina.net/news/260374/rms-talks-red-hat-ai-and-ethical-software-licenses</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Stability AI 发布最新语言模型：Stable LM 3B]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Stability AI 昨日<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fstability.ai%2Fblog%2Fstable-lm-3b-sustainable-high-performance-language-models-smart-devices" target="_blank">发布</a>最新语言模型：Stable LM 3B，可在笔记本和手机等智能设备上运行。</p><p><img src="https://static.oschina.net/uploads/space/2023/1003/123230_hJQt_2720166.png" referrerpolicy="no-referrer"></p><p>公告写道，Stable LM 3B 包含 30 亿个参数，相比于行业通常使用的 70 亿参数，它更小、更高效。主要功能如下：&nbsp;</p><ul><li>文本生成：可以用于生成文本</li><li>自回归：基于变换器解码器架构</li><li>多样性的训练数据：使用了多个开源大规模数据集</li></ul><p>Stable LM 3B 主要特点：</p><ol><li>高性能：尽管只有 30 亿个参数，但性能与更大的模型相当，甚至有时超过它们。</li><li>低功耗：设计为在便携式设备上高效运行，因此电力需求较低。</li><li>多平台兼容：可以在边缘设备、家用电脑以及其他便携式数字设备上运行。</li><li>可微调：模型可以根据特定需求进行微调，如编程辅助或其他专用应用。</li><li>开源：该模型已在 Hugging Face 平台上开源 (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhuggingface.co%2Fstabilityai%2Fstablelm-3b-4e1t" target="_blank">https://huggingface.co/stabilityai/stablelm-3b-4e1t</a>)，方便开发者使用和改进。</li><li>训练细节：该模型在 Stability AI 的集群上进行了训练，使用了 256 个 NVIDIA A100 40GB GPU（AWS P4d 实例）。</li></ol><p>详情：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fstability.ai%2Fblog%2Fstable-lm-3b-sustainable-high-performance-language-models-smart-devices" target="_blank">https://stability.ai/blog/</a></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 03 Oct 2023 04:35:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/260235/stable-lm-3b</guid>
            <link>https://www.oschina.net/news/260235/stable-lm-3b</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[适用于 Box 的 ONLYOFFICE 文档集成应用程序现已可用]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">适用于 Box 的 ONLYOFFICE 集成应用程序可直接在 Box 前端中处理文件。 请继续阅读了解详情。</p><p style="color:#333333; margin-left:0px; margin-right:0px; text-align:center"><img alt="New integration available: ONLYOFFICE &amp; Box" src="https://static-blog.onlyoffice.com/wp-content/uploads/2023/09/27103552/ONLYOFFICE-Box-integration.jpg" referrerpolicy="no-referrer"></p><h2>ONLYOFFICE 文档是什么</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.onlyoffice.com%2Fzh%2Foffice-suite.aspx" target="_blank">ONLYOFFICE 文档</a>是一个功能强大的在线编辑器，用于文本文档、电子表格、演示文稿、表单和 PDF 阅读器，可以与任何平台集成。跨平台并与微软格式高度兼容，ONLYOFFICE 为初创公司提供了优秀的办公套件。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">在 ONLYOFFICE 文档中，您能够以实时和段落锁定模式安全地协作处理文档。共享权限包括可编辑、可查看、可审阅、可填写表单、可留评论等。其他协作功能包括追踪更改、版本历史记录、文档比较和恢复。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">由于自定义选项和灵活性，ONLYOFFICE 文档几乎可以适应任何屏幕。默认功能可通过第三方插件进行扩展，例如 <a href="https://www.oschina.net/news/259993/onlyoffice-ai">AI 助手</a>、缩放、谷歌翻译、文本识别、语音输入等。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">ONLYOFFICE 也可以与其他平台集成，允许您在&nbsp;<span style="background-color:#ffffff; color:#333333">Odoo、Pipedrive、Confluence、Moodle、Nextcloud、Seafile 等平台上使用文档协作编辑功能。</span></p><h2><strong>ONLYOFFICE 应用程序及其功能</strong></h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">ONLYOFFICE 新的集成应用程序可以让用户在流行的云内容管理平台 Box 中轻松打开和编辑现有文档、电子表格和演示文稿。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">为此，请单击 3 点图标启动文件上下文菜单，找到<strong>集成</strong>，然后选择<strong>用 ONLYOFFICE 打</strong><strong>开</strong>，相应的 ONLYOFFICE 编辑器将以全屏模式在新选项卡中打开。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">如果您与其他 Box 用户有共享文件，还可以协作处理文档。</p><p style="color:#333333; margin-left:0px; margin-right:0px; text-align:center"><img alt="New integration available: ONLYOFFICE &amp; Box" src="https://static-blog.onlyoffice.com/wp-content/uploads/2023/09/27103850/Box-onlyoffice-edit-files.png" referrerpolicy="no-referrer"></p><h2><strong>如何安装应用程序</strong></h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">ONLYOFFICE 应用程序可在<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fapp.box.com%2Fapp-center%2Fonlyoffice_personal%2Fapp" target="_blank">Box App Center</a>（应用程序中心）完全免费使用。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Faccount.box.com%2Flogin" target="_blank">登录您的 Box 帐户</a>并按「<strong>安装</strong>」按钮即可。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>请注意</strong>：该应用程序使用 ONLYOFFICE 文档云的预配置租户，不需要任何额外配置。</p><h2><strong>支持的文件格式</strong></h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">适用于 Box 的 ONLYOFFICE 应用程序支持处理多种文件格式：</p><ul><li>OOXML 文件，包括 DOCX、XLSX、PPTX，可直接打开进行编辑。</li><li>DOCXF 和 OFORM，用于处理数字表单。</li><li>ODT、ODP、ODS、TXT、CSV、RTF、EPUB、FB2 只能打开查看，也可以直接进行编辑，但由于格式限制可能会导致数据丢失，或者转换为 OOXML 进行进一步编辑。</li><li>DOC、XLS、PPT、DOT、ET、FODP、HTM、POT 等可以打开仅供查看，也可以转换为 OOXML 进行编辑。</li><li>PDF、DJVU、OXPS 只能打开查看。</li></ul></div>
                                    ]]>
            </description>
            <pubDate>Mon, 02 Oct 2023 11:17:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/260197</guid>
            <link>https://www.oschina.net/news/260197</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[「开源 Windows」ReactOS 改进 GUI 设置/安装]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>近日，ReactOS Deutschlande.V.&nbsp;宣布聘请了该项目的长期贡献者，在接下来的五个月内致力于开发 ReactOS GUI 设置模式 (ReactOS GUI setup mode)，该特性将替代之前基于文本的设置方案，以降低使用门槛。</p><p>目前 ReactOS 正在向 Hermès Bélusca-Maïto 支付费用，让他在接下来的五个月内开发 ReactOS GUI 设置模式，以完成安装 ReactOS 过程中第一阶段的目标。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-bf70d29b68f97316bc35adb689b7fa33baf.png" referrerpolicy="no-referrer"></p><p>据介绍，<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Freactos.org%2Fwiki%2FInstalling_ReactOS" target="_blank">安装 ReactOS 会经历三个阶段</a>。前两个阶段需要处理系统的安装，而第三阶段是用户的第一个可用引导界面。</p><ul><li>第一阶段 – 文本模式设置，从 ReactOS CD-ROM 启动。</li><li>第二阶段 – 引导至 GUI 安装程序。用户信息的输入和文件的注册。</li><li>第三阶段 – 引导至桌面，用户配置。</li></ul><p><strong>目前安装 ReactOS 第一步的唯一选择是通过文本模式安装</strong>，其余的安装将在第二阶段安装后处理。自该项目启动以来，这一直是在虚拟机或裸机上安装 ReactOS 的标准方法，因此需要一些门槛，也劝退了不少用户。</p><p>ReactOS GUI 设置模式的开发路线图如下：</p><ul><li>完成有关 CAB 文件提取的 setupapi.dll 的部分 Winesync；</li><li>将 FreeLdr 引导加载程序安装选择步骤移至 ROS 磁盘 / 分区选择步骤之后，并放在实际安装之前；</li><li>集成注册表设置回调（目前 GUI 设置中不存在）；</li><li>添加对 GUI 设置的 GPT 支持；</li><li>杂项（进一步清理、一些重构等）。</li></ul><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Freactos.org%2Fproject-news%2Fhermes-belusca-hired-full-time%2F" target="_blank">详情</a></p><blockquote><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">ReactOS 项目的主要目标就是提供一个与 Windows 环境二进制兼容的操作系统。它能让你的 Windows 应用程序和驱动程序如同在 Windows 上一样运行。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">此外，由于应用了 Windows 操作系统的外观特性，已经熟悉 Windows 用户界面的用户在使用 ReactOS 时将驾轻就熟。ReactOS 的终极目标是使你能够在感觉不到最终用户体验变化的前提下，使用 ReactOS 来替代 Windows。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img src="https://static.oschina.net/uploads/space/2019/0306/073550_CIxD_2720166.png" referrerpolicy="no-referrer"></p></blockquote></div>
                                    ]]>
            </description>
            <pubDate>Mon, 02 Oct 2023 03:42:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/260162/reactos-gui-setup-project</guid>
            <link>https://www.oschina.net/news/260162/reactos-gui-setup-project</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[苹果中国 App Store 将不允许未备案应用上架]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>苹果更新了「App 信息」中「<strong>在中国大陆的供应情况</strong>」，要求 App 有备案号才能在中国大陆的 App Store 中上架。这意味着大部分外国应用将无法通过 App Store 在中国区提供下载。</p><p><img src="https://static.oschina.net/uploads/space/2023/1002/112310_WnrJ_2720166.jpg" referrerpolicy="no-referrer"></p><p><img src="https://static.oschina.net/uploads/space/2023/1002/112502_k0Xd_2720166.jpg" referrerpolicy="no-referrer"></p><p>苹果称：</p><blockquote><p>中国工业和信息化部（MIIT）要求 App 必须具备有效的互联网信息服务提供者（ICP）备案号。此外，游戏 App 必须取得网络游戏出版物号。图书和报刊杂志 App 必须持有中国国家新闻出版署（NPPA）颁发的《网络出版服务许可证》。包含宗教内容的 App 必须持有中国国家宗教事务局（NRAA）颁发的《互联网宗教信息服务许可证》。新闻 App 必须持有中国国家互联网信息办公室（CAC）颁发的《互联网新闻信息服务许可证》。如果你已经或计划在中国大陆的 App Store 中提供上述类型的 App，则必须提供相关信息和证明文件。如果 App 符合上述情况，请在「App 信息」页面的相应位置填写 ICP 备案信息。为方便 Apple 验证你的网络游戏出版物号，请上传游戏的 ISBN（国际标准书号）核发单或批复文件，以及最新营业执照的副本。此外，你还可以上传相应运营单位的授权协议。为方便 Apple 验证你的出版许可，请上传《网络出版服务许可证》或中国国家新闻出版署颁发的其他相关许可、授权方提供的出版许可授权书、营业执照、ICP 许可证或类似的证明文件。为方便 Apple 验证你的互联网宗教信息服务许可，请上传《互联网宗教信息服务许可证》、授权方提供的许可授权书、营业执照、ICP 许可证或类似的证明文件。为方便 Apple 验证你的互联网新闻信息服务许可，请上传《互联网新闻信息服务许可证》、授权方提供的许可授权书、营业执照、ICP 许可证或类似的证明文件。</p></blockquote><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.apple.com%2Fcn%2Fhelp%2Fapp-store-connect%2Freference%2Fapp-information%2F" target="_blank">https://developer.apple.com/cn/help/app-store-connect/reference/app-information/</a></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 02 Oct 2023 03:25:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/260160</guid>
            <link>https://www.oschina.net/news/260160</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Snap 商店遭受恶意应用攻击，临时新增人工审核]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000"><span style="background-color:#ffffff">Canonical 的 Snap Store&nbsp;团队发布<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fforum.snapcraft.io%2Ft%2Ftemporary-suspension-of-automatic-snap-registration-following-security-incident%2F37077" target="_blank">公告称</a>，他们于近日收到了一些用户所报告的安全隐患事件。即，几个最近新发布的 Snap 可能存在恶意</span><span style="background-color:#ffffff">，可以</span><span style="background-color:#ffffff">窃取用户的加密资金。</span></span></p><p><span style="color:#000000">目前，Snap Store 已经删除了所报告的 Snap。新的 Snap 注册实施了临时人工审核要求，立即生效。此人工审查旨在阻止恶意行为者注册合法应用程序的名称（或至少听起来合法的名称），并将其用作向用户推送恶意 Snap 的途径。</span></p><p><img height="270" src="https://oscimg.oschina.net/oscnet/up-88656dc09868a0f56e324642884ef0b8f38.png" width="500" referrerpolicy="no-referrer"></p><p><span style="color:#000000">当用户尝试注册新的&nbsp;Snap 时，系统将提示「请求保留名称」。Snap Store 工作人员手动审核成功后，该名称将被注册。上传和发布现有 Snap 的修订版则不会受到影响。</span></p><blockquote><p style="text-align:start"><span style="color:#000000">对于这可能给我们的 snap 发布者和开发者带来的任何不便，我们深表歉意。然而，我们认为这是目前最谨慎的行动。</span></p><p style="text-align:start"><span style="color:#000000">我们希望彻底调查这一事件，而不会给系统带来任何干扰，更重要的是，我们希望确保我们的用户在 Snap Store 中获得安全且值得信赖的体验。</span></p><p style="text-align:start"><span style="color:#000000">请耐心等待我们进行调查。我们将在未来几天提供更详细的更新。</span></p></blockquote><p><span style="color:#000000">如果你最近从 Snap Store 安装了任何新上架的<span style="background-color:#ffffff">加密账本应用程序</span>，不妨检查一下应用程序是否还在列表中。如果没有，这可能意味着它已因为被怀疑是恶意程序而撤下。&nbsp;</span></p><p><span style="color:#000000">更多详情可查看&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fforum.snapcraft.io%2Ft%2Ftemporary-suspension-of-automatic-snap-registration-following-security-incident%2F37077" target="_blank">Snapcraft 论坛</a>。</p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 01 Oct 2023 04:53:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/260114/snap-store-security-incident</guid>
            <link>https://www.oschina.net/news/260114/snap-store-security-incident</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
    </channel>
</rss>
