<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[开源中国-综合资讯]]>
        </title>
        <link>https://www.oschina.net/news/industry</link>
        <atom:link href="https://rsshub.app/oschina/news/industry" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[开源中国-综合资讯 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Mon, 13 Nov 2023 21:17:37 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[每日一博 | 小红书万亿级社交网络关系下的图存储系统的架构设计与实践]]>
            </title>
            <description>
                <![CDATA[<div class="content"><blockquote><p style="margin-left:auto; margin-right:auto">本文由小红书基础架构存储组空洞和刘备分享，原题「小红书如何应对万亿级社交网络关系挑战？图存储系统 REDtao 来了！」，本文有修订和改动。</p></blockquote><span id="OSC_h1_1"></span><h1>1、引言</h1><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start">小红书是一个社区属性为主的产品，它涵盖了各个领域的生活社区，并存储海量的社交网络关系。</p><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start">为了解决社交场景下超大规模数据的更新与关联读取问题，并减少数据库压力和成本，我们自研了面向超大规模社交网络的图存储系统 REDtao，大大提高了系统稳定性。该系统借鉴了 Facebook 的图存储系统设计，将缓存和底层数据库封装起来，并对外提供统一的图查询 API，实现了访问收敛，同时在缓存中实现了高效的边聚合。</p><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start"><strong>本文将为你分享小红书面向超大规模社交网络的图存储系统 REDtao 的架构设计与技术实践过程，希望能带给你启发。</strong></p><div><img alt="" src="https://img2023.cnblogs.com/blog/1834368/202311/1834368-20231109100814146-1822532915.png" referrerpolicy="no-referrer"></div><div>
  &nbsp; 
</div><div><span style="font-size:26px; font-weight:600">2、关于作者</span></div><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start"><strong>空洞：</strong>小红书基础架构存储组，负责图存储系统 REDtao 和分布式缓存的研发。</p><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start"><strong>刘备：</strong>小红书基础架构存储组负责人，负责 REDkv / REDtao / REDtable / REDgraph 的整体架构和技术演进。</p><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start">基础架构存储组是给小红书的业务部门提供稳定可靠的存储和数据库服务，满足业务对存储产品的功能、性能、成本和稳定性要求。目前负责自研分布式 KV、分布式缓存、图存储系统、图数据库和表格存储。</p><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start"><strong>已上线的存储产品包括：</strong></p><ul><li><strong><em>1）</em></strong><span style="color:#800000">REDkv</span>&nbsp;: 分布式高性能 KV；</li><li><strong><em>2）</em></strong><span style="color:#800000">REDtao</span>&nbsp;：满足一跳查询的高性能图存储数据库；</li><li><strong><em>3）</em></strong>&nbsp;<span style="color:#800000">REDtable</span>&nbsp;：提供 Schema 语义和二级索引的表格存储；</li><li><strong><em>4）</em></strong>&nbsp;<span style="color:#800000">REDgraph&nbsp;</span>：提供两跳及以上的图语义查询数据库。</li></ul><span id="OSC_h1_2"></span><h1>3、技术背景</h1><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start">小红书是以年轻人为主的生活记录、分享平台，用户可以通过短视频、图文等形式记录生活点滴，分享生活方式。</p><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start">在小红书的社交领域里，我们有用户、笔记、商品等实体，这些实体之间有各种各样的关系。</p><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start"><strong>例如：</strong>用户与笔记之间可能存在「拥有」（发布）、「点赞」、「收藏」等三种关系，同时还存在对应的反向关系「被点赞」，「被收藏」等。</p><div><img alt="" src="https://img2023.cnblogs.com/blog/1834368/202311/1834368-20231109100823896-426246333.png" referrerpolicy="no-referrer"><p style="margin-left:auto; margin-right:auto">小红书的社交图谱数据已经达到了万亿条边的规模，且增长速度非常快。当用户登陆小红书时，每个用户都会看到关注的好友、粉丝、点赞、收藏以及其他为其量身定做的内容。</p></div><div><img alt="" src="https://img2023.cnblogs.com/blog/1834368/202311/1834368-20231109100833021-264867122.png" referrerpolicy="no-referrer"><p style="margin-left:auto; margin-right:auto">这些信息高度个性化，需要实时从这些海量社交关系数据中读取用户相关信息。这是一个读为主的过程，读取压力非常大。</p></div><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start">过去，我们将这些社交图谱数据都存储在运维成熟的 MySQL 数据库中。</p><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start">然而，即使我们只有百万请求每秒的规模，MySQL 的 CPU 使用率仍然到达了 55% 。随着用户和 DAU 爆发式的增长，需要不断扩容 MySQL 数据库，这带来了巨大的成本和稳定性压力。</p><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start"><strong>为了解决这些问题且考虑到没有合适的开源方案，2021 年初我们开启了从 0 到 1 自研 REDtao 的历程。</strong></p><span id="OSC_h1_3"></span><h1>4、方案调研和 API 设计</h1><span id="OSC_h3_4"></span><h3>4.1 方案调研</h3><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start">我们充分调研了业内其他厂商的实现，发现有着强社交属性的公司基本上都有一个自研的图存储系统（如下图所示）。</p><div><img alt="" src="https://img2023.cnblogs.com/blog/1834368/202311/1834368-20231109100842159-1173936430.png" referrerpolicy="no-referrer"><p style="margin-left:auto; margin-right:auto"><strong>比如：</strong></p></div><ul><li><strong><em>1）</em></strong>Facebook 实现了一个叫做 「TAO」 专门的分布式社交图谱数据库，并将其作为最核心的存储系统；</li><li><strong><em>2）</em></strong>Pinterest 和 Facebook 类似，也实现了类似的图存储系统；</li><li><strong><em>3）</em></strong>字节跳动自研了 ByteGraph 并将其用于存储核心的社交图谱数据；</li><li><strong><em>4）</em></strong>Linkedln 在 KV 之上构建了社交图谱服务。</li></ul><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start">考虑到当时我们的社交图谱数据已经存放在 MySQL 数据库上且规模巨大，而社交图谱数据服务是非常重要的服务，对稳定性的要求非常高。回溯 Facebook 当年遇到的问题和我们类似，数据存储在 Memcache 和 MySQL 中。因此，<strong>参考 Facebook 的 Tao 图存储系统更贴合我们的实际情况和已有的技术架构，风险更小。</strong></p><span id="OSC_h3_5"></span><h3>4.2API 设计</h3><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start">社交图谱的访问主要是边的关系查询。</p><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start">我们的图模型将关系表示为一个&nbsp;&lt;key, value&gt;&nbsp;对，其中 key 是 (&nbsp;FromId,&nbsp;&nbsp;AssocType,&nbsp;&nbsp;ToId&nbsp;) 的三元组，value&nbsp;是属性的&nbsp;&nbsp;JSON 格式。</p><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start"><strong>比如「用户 A 」关注「用户 B 」，映射到 REDtao 的数据存储结构为：</strong></p><blockquote><p style="margin-left:auto; margin-right:auto">1&lt;FromId:用户 A 的 ID, AssocType：关注， ToId：用户 B 的 ID&gt;&nbsp; -&gt;&nbsp; Value （属性的 json 字段）</p></blockquote><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start">我们对业务方的需求进行分析，封装了 25 个图语义的 API 给业务方使用，满足了其增删改查的需求，并收敛业务方的使用方式。</p><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start">相比于 Facebook 的 Tao，我们还补充了社交图谱所需要的图语义，为反作弊场景提供了额外的过滤参数。</p><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start">同时，在缓存层面，我们支持对不同的字段在缓存中配置局部二级索引。</p><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start">下面给一些典型的使用场景。</p><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start"><span style="color:#3366ff"><strong><em>1）场景一：</em></strong></span>获取关注了 A 的所有正常用户（并且剔除作弊用户）：</p><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start">1getAssocs(「被关注类型」, 用户 A 的 ID, 分页偏移量, 最大返回值, 只返回正常用户，是否按照时间从新到旧)</p><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start"><span style="color:#3366ff"><strong><em>2）场景二：</em></strong></span>获取 A 的粉丝个数（并且剔除作弊用户）：</p><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start">1getAssocCount(「被关注类型」, 用户 A 的 ID, 只返回正常用户)</p><span id="OSC_h1_6"></span><h1>5、整体架构设计</h1><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start"><strong>REDtao 的架构设计考虑了下面这几个关键的要素：</strong></p><div><img alt="" src="https://img2023.cnblogs.com/blog/1834368/202311/1834368-20231109100851870-111501264.png" referrerpolicy="no-referrer"><p style="margin-left:auto; margin-right:auto"><strong>整体架构分为三层：</strong></p></div><ul><li><strong><em>1）</em></strong>接入层；</li><li><strong><em>2）</em></strong>缓存层；</li><li><strong><em>3）</em></strong>持久层。</li></ul><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start">业务方通过 REDtao SDK 接入服务。</p><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start"><strong>如下图：</strong></p><div><img alt="" src="https://img2023.cnblogs.com/blog/1834368/202311/1834368-20231109100901195-1853383534.png" referrerpolicy="no-referrer"><p style="margin-left:auto; margin-right:auto"><strong>在这个架构中：</strong>和 Facebook Tao 不一样的是，我们的缓存层是一个独立的分布式集群，和下面的持久层是解耦的。缓存层和下面的持久层可以独立的扩容缩容，缓存分片和 MySQL 分片不需要一一对应，这样带来了更好的灵活性，MySQL 集群也变成了一个可以插拔替换的持久存储。</p></div><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start"><span style="color:#3366ff"><strong><em>1）读流程：</em></strong></span>客户端将读请求发送给 router，router 接收到 RPC 请求后，根据边类型选择对应的 REDtao 集群，根据三元组 (&nbsp;FromId,&nbsp;&nbsp;AssocType,&nbsp;&nbsp;ToId&nbsp;) 通过一致性 Hash 计算出分片所在的 Follower 节点，将请求转发到该节点上。Follower 节点接收到该请求，首先查询本地的图缓存，如果命中则直接返回结果。如果没有命中，则将请求转发给 Leader 节点。同样的，Leader 节点如果命中则返回，如果不命中则查询底层 MySQL 数据库。</p><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start"><span style="color:#3366ff"><strong><em>2）写流程：</em></strong></span>客户端将写请求发送给 router，和读流程一样，会转发到对应的 Follower 节点上。Follower 节点会转发写请求给 Leader 节点，Leader 节点转发给 MySQL，当 MySQL 返回写入成功后，Leader 会清除本地图缓存对应的 Key，并同步给其他所有 Follower 清除掉该 Key，保证数据的最终一致性。</p><span id="OSC_h1_7"></span><h1>6、高可用设计</h1><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start">REDtao 分为独立的两层：缓存层和持久层。每一层都保证高可用性。</p><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start"><span style="color:#3366ff"><strong><em>1）自研的分布式缓存：</em></strong></span></p><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start">我们自研了实现图语义的分布式 cache 集群，支持故障自动检测和恢复、水平扩缩容。</p><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start">它是一个双层 cache，每个分片都有一个 Leader 和若干个 Follower。所有的请求都先发给外层的 Follower，再由 Follower 转发给 Leader。这样的好处是读压力大的时候只需要水平扩展 Follower，单点 Leader 写入的方式也降低了复杂度，更容易实现数据的一致性。</p><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start">如果一个副本故障，系统会在秒级别内进行切换。当持久层发生故障时，分布式缓存层仍然可以对外提供读取服务。</p><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start"><span style="color:#3366ff"><strong><em>2）高可用的 MySQL 集群：</em></strong></span></p><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start">MySQL 集群通过自研的中间件实现了分库分表方案，并支持 MySQL 的水平扩容。每个 MySQL 数据库有若干从库，并且与公司内部其他的 MySQL 运维方案一致，保证高可用性。</p><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start"><span style="color:#3366ff"><strong><em>3）限流保护功能：</em></strong></span></p><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start">为防止缓存击穿导致 MySQL 突发大量请求，从而导致 MySQL 宕机，我们通过限制每个主节点最大 MySQL 并发请求数来实现限流保护 MySQL。达到最大并发请求限制之后的请求会被挂起等待，直到已有请求被处理返回，或者达到等待超时请求被拒绝不会被继续请求到 MySQL 。限流阈值在线可调，根据 MySQL 集群规模调整对应限制。</p><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start">为防止爬虫或者作弊用户频繁刷同一条数据，我们利用 REDtaoQueue 顺序执行对写入或者点查同一条边的请求，队列长度会被限制，控制同一时间大量相同的请求执行。相比於单个全局的队列控制所有请求的方式，基于每个请求的队列可以很好地限制单个同一请求，而不影响其他正常请求。</p><span id="OSC_h1_8"></span><h1>7、高性能设计</h1><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start">数据结构的设计是 REDtao 高性能的重要保证。</p><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start">我们采用了三层嵌套 HashTable 的设计, 通过根据某个起点 from_id 从第一级 HashTable 中查找到 REDtaoGraph，记录了所有 type 下对应的所有的出边信息。</p><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start">接着，在第二级 HashTable 中，根据某个 type_id 查找到 AssocType 对应某个 type 下边所有出边的计数、索引以及其他元数据。</p><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start">最终在最后一级 HashTable ，通过 AssocType 的某个 to_id 查找到最终边信息。</p><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start">我们记录了创建时间、更新时间、版本、数据以及 REDtaoQueue，time_index 则对应根据创建时间排序列表。</p><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start">最后一级 HashTable 以及索引限制存储最新的 1000 个边信息，以限制超级点占据过多内存，同时集中提高最新热数据的查询命中率以及效率。REDtaoQueue 用于排队当前某个关系的读写，只记录了当前最后一个请求的元数据。</p><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start"><strong>每次查询或写入时，首先查询 REDtaoAssoc：</strong></p><ul><li><strong><em>1）</em></strong>若缓存不存在，则会首先创建只包含 REDtaoQueue 的对象；</li><li><strong><em>2）</em></strong>若缓存已存在，则会更新队列元数据，将自己设置为队列的最后一个请求，并挂起等待被执行。</li></ul><div><img alt="" src="https://img2023.cnblogs.com/blog/1834368/202311/1834368-20231109100911612-1532352980.png" referrerpolicy="no-referrer"><p style="margin-left:auto; margin-right:auto">通过这种多层 hash+ 跳表的设计，我们能高效地组织点、边、索引、时间序链表之间的关系。内存的申请、释放在同一个线程上完成。</p></div><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start">在线上环境中，我们的系统可以在一台 16 核的云厂商虚拟机上跑到 150w 查询请求/s，同时 CPU 利用率仅有 22.5% 。下方是线上集群的一个监控图，单机的 QPS 到达 3w ，每个 RPC 请求聚合了 50 个查询。</p><div><img alt="" src="https://img2023.cnblogs.com/blog/1834368/202311/1834368-20231109100924600-713301343.png" referrerpolicy="no-referrer"><p style="margin-left:auto; margin-right:auto"><img alt="" src="https://img2023.cnblogs.com/blog/1834368/202311/1834368-20231109100930254-238602771.png" referrerpolicy="no-referrer"></p><p style="margin-left:auto; margin-right:auto"><img alt="" src="https://img2023.cnblogs.com/blog/1834368/202311/1834368-20231109100937325-407160453.png" referrerpolicy="no-referrer"></p></div><div>
  &nbsp; 
</div><span id="OSC_h1_9"></span><h1>8、易用性设计</h1><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start"><span style="color:#3366ff"><strong><em>1）丰富的图语义 API ：</em></strong></span></p><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start">我们在 REDtao 中封装了 25 个图语义的 API 给业务方使用，满足了业务方的增删改查的需求。业务方无需自行编写 SQL 语句即可实现相应操作，使用方式更加简单和收敛。</p><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start"><span style="color:#3366ff"><strong><em>2）统一的访问 URL ：</em></strong></span></p><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start">由于社区后端数据太大，我们按照不同的服务和优先级拆分成了几个 REDtao 集群。</p><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start">为了让业务方不感知后端的集群拆分逻辑，我们实现了统一的接入层。</p><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start">不同的业务方只需使用同一个服务 URL ，通过 SDK 将请求发送到接入层。接入层会接收到不同业务方的图语义的请求，并根据边的类型路由到不同的 REDtao 集群。它通过订阅配置中心，能够实时感知到边的路由关系，从而实现统一的访问 URL，方便业务方使用。</p><div><img alt="" src="https://img2023.cnblogs.com/blog/1834368/202311/1834368-20231109100946353-550184379.png" referrerpolicy="no-referrer"></div><span id="OSC_h1_10"></span><h1>9、数据一致性设计</h1><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start">作为社交图谱数据，数据的一致性至关重要。我们需要严格保证数据的最终一致性以及一定场景下的强一致性。为此，我们采取了以下措施：</p><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start"><span style="color:#3366ff"><strong><em>1）缓存更新冲突的解决：</em></strong></span></p><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start">REDtao 为每个写入请求生成一个全局递增的唯一版本号。在使用 MySQL 数据更新本地缓存时，需要比较版本号，如果版本号比缓存的数据版本低，则会拒绝此更新请求，以避免冲突。</p><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start"><span style="color:#3366ff"><strong><em>2）写后读的一致性：</em></strong></span></p><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start">Proxy 会将同一个 fromId 的点或边请求路由到同一个读 cache 节点上，以保证读取数据一致性。</p><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start"><span style="color:#3366ff"><strong><em>3）主节点异常场景：</em></strong></span></p><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start">Leader 节点收到更新请求后，会将更新请求变为 invalidate cache 请求异步的发送给其他 follower，以保证 follower 上的数据最终一致。在异常情况下，如果 Leader 发送的队列已满导致 invalidate cache 请求丢失，那么会将其他的 follower cache 全部清除掉。</p><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start">如果 Leader 故障，新选举的 Leader 也会通知其他 follower 将 cache 清除。</p><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start">此外，Leader 会对访问 MySQL 的请求进行限流，从而保证即使个别分片的 cache 被清除掉也不会将 MySQL 打崩。</p><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start"><span style="color:#3366ff"><strong><em>4）少量强一致的请求：</em></strong></span></p><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start">由于 MySQL 的从库也提供读服务，对于少量要求强一致的读请求，客户端可以将请求染上特殊标志，REDtao 会透传该标志，数据库 Proxy 层会根据该标志将读请求转发到 MySQL 主库上，从而保证数据的强一致。</p><span id="OSC_h1_11"></span><h1>10、 跨云多活设计</h1><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start">跨云多活是公司的重要战略，也是 REDtao 支持的一个重要特性。</p><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start"><span style="color:#000000"><strong>REDtao 的跨云多活架构整体如下：</strong></span></p><div><img alt="" src="https://img2023.cnblogs.com/blog/1834368/202311/1834368-20231109100957668-1157782416.png" referrerpolicy="no-referrer"></div><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start">这里不同于 Facebook Tao 的跨云多活实现，Facebook Tao 的跨云多活实现如下图所示。</p><div><img alt="" src="https://img2023.cnblogs.com/blog/1834368/202311/1834368-20231109101006586-29931000.png" referrerpolicy="no-referrer"><p style="margin-left:auto; margin-right:auto">Facebook 的方案依赖于底层的 MySQL 的主从复制都通过 DTS Replication 来做。而 MySQL 原生的主从复制是自身功能，DTS 服务并不包含 MySQL 的主从复制。该方案需要对 MySQL 和 DTS 做一定的改造。前面说到，我们的缓存和持久层是解藕的，在架构上不一样。</p></div><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start">因此，REDtao 的跨云多活架构是我们结合自身场景下的设计，它在不改动现有 MySQL 功能的前提下实现了跨云多活功能。</p><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start"><strong><em>1）</em></strong>持久层我们通过 MySQL 原生的主从 binlog 同步将数据复制到其他云的从库上。其他云上的写请求和少量要求强一致读将被转发到主库上。正常的读请求将读取本区的 MySQL 数据库，满足读请求对时延的要求。</p><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start"><strong><em>2）</em></strong>缓存层的数据一致性是通过 MySQL DTS 订阅服务实现的，将 binlog 转换为 invalidate cache 请求，以清理掉本区 REDtao cache 层的 stale 数据。由于读请求会随机读取本区的任何一个 MySQL 数据库，因此 DTS 订阅使用了一个延迟订阅的功能，保证从 binlog 同步最慢的节点中读取日志，避免 DTS 的 invalidate cache 请求和本区 read cache miss 的请求发生冲突从而导致数据不一致。</p><span id="OSC_h1_12"></span><h1>11、云原生实现</h1><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start">REDtao 的云原生特性重点体现在弹性伸缩、支持多 AZ 和 Region 数据分布、产品可以实现在不同的云厂商间迁移等几个方面。REDtao 在设计之初就考虑到支持弹性扩缩容、故障自动检测及恢复。</p><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start">随着 Kubernetes 云原生技术越来越成熟，我们也在思考如何利用 k8s 的能力将部署和虚拟机解绑，进一步云原生化，方便在不同的云厂商之间部署和迁移。</p><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start">REDtao 实现了一个运行在 Kubernetes 集群上的 Operator，以实现更快的部署、扩容和坏机替换。</p><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start">为了让 k8s 能感知集群分片的分配并且控制同一分片下的 Pods 调度在不同宿主机上，集群分组分片分配由 k8s Operator 渲染并控制创建 DuplicateSet （小红书自研 k8s 资源对象）。</p><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start">REDtao 则会创建主从并根据 Operator 渲染出来的分片信息创建集群，单个 Pod 故障重启会重新加入集群，无需重新创建整个集群。集群升级时，Operator 通过感知主从分配控制先从后主的顺序，按照分片分配的顺序滚动升级以减少升级期间线上影响。</p><div><img alt="" src="https://img2023.cnblogs.com/blog/1834368/202311/1834368-20231109101017940-473565696.png" referrerpolicy="no-referrer"></div><span id="OSC_h1_13"></span><h1>12、老服务的平滑升级实践</h1><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start">但凡变革，皆属不易。实现全新的 REDtao 只是完成了相对容易的那部分工作。</p><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start">小红书的社交图谱数据服务已经在 MySQL 上运行多年，有很多不同的业务跑在上面，任何小的问题都会影响到小红书的在线用户。因此，如何保证不停服的情况下让现有业务无感知地迁移到 REDtao 上成为一个非常大的挑战。</p><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start"><strong>我们的迁移工作关键有两点：</strong></p><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start"><strong><em>1）</em></strong>将老的大 MySQL 集群按优先级拆分成了四个 REDtao 集群。这样，我们可以先将优先级最低的服务迁移到一个 REDtao 集群，充分灰度后再迁移高优先级的集群；</p><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start"><strong><em>2）</em></strong>专门开发了一个 Tao Proxy SDK，支持对原来的 MySQL 集群和 REDtao 集群进行双写双读，数据校验比对。</p><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start"><strong>迁移时：</strong>我们首先将低优先级的数据从 MySQL 通过 DTS 服务迁移到了一个 REDtao 集群，并升级好业务方的 SDK 。DTS 服务一直对增量数据进行同步。业务方 SDK 会订阅配置中心的配置变更，我们修改配置让 Tao Proxy SDK 同时读写 MySQL 集群和 REDtao 集群，并关闭 DTS 服务。此时会使用 MySQL 集群的结果返回给用户。</p><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start"><strong>在停止 DTS 服务时：</strong>有可能会有新的 MySQL 数据通过 DTS 同步过来，造成了 REDtao 集群新写的数据被同步过来的老数据覆盖。因此，在关闭 DTS 服务后，我们会通过工具读取开双写之后到关闭 DTS 服务这个时间段的 binlog 对数据进行校验和修复。</p><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start"><strong>修复完成之后：</strong>Tao Proxy SDK 的双读会展示两边不一致的数据量，并过滤掉因为双写时延不一致导致数据不一致的请求。灰度一段时间后观察到 diff 的数目基本为 0，将 Tao Proxy SDK 的配置改为只读写新的 REDtao 集群。</p><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start"><strong>最终：</strong>我们在 22 年初完成小红书所有核心社交图谱万亿边级别数据的迁移和正确性校验，并做到了整个迁移服务无感知，迁移过程没有发生一起故障。</p><span id="OSC_h1_14"></span><h1>13、新图存储系统带来的结果和收益</h1><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start">我们的社交图谱数据访问中，90% 以上的请求都是读请求，并且社交图谱的数据有非常强的时间局部性（即最近更新的数据最容易被访问）。REDtao 上线后，获得 90% 以上的 cache 命中率， 对 MySQL 的 QPS 降低了 70%+ ，大大降低了 MySQL 的 CPU 使用率。在缩容 MySQL 的副本数目后，整体成本降低了 21.3%。‍</p><div><img alt="" src="https://img2023.cnblogs.com/blog/1834368/202311/1834368-20231109101027612-723992858.png" referrerpolicy="no-referrer"></div><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start">业务的访问方式都全部收敛到 REDtao 提供的 API 接口上，在迁移过程中，我们还治理了一些老的不合理访问 MySQL 数据库的方式，以及自定义某些字段赋予特殊含义的不合理做法，通过 REDtao 规范了数据访问。</p><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start">对比 2022 年初和 2023 年初，随着 DAU 的增长，社交图谱的请求增长了 250% 以上，如果是之前 MySQL 的老架构，扩容资源基本上和请求增长速度成正比，至少需要扩容 1 倍的资源成本（数万核）。</p><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start">而得益于 REDtao 系统的存在，因其 90% 的缓存命中率，实际上整体成本只增加了 14.7%（数千核）就能扛下 2.5 倍的请求增长。在成本和稳定性上有了较大的提升。</p><div><img alt="" src="https://img2023.cnblogs.com/blog/1834368/202311/1834368-20231109101038049-1261356123.png" referrerpolicy="no-referrer"></div><span id="OSC_h1_15"></span><h1>14、未来展望</h1><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start">在较短的时间，我们自研了图存储系统 REDtao ，解决了社交图谱关系数据快速增长的问题。</p><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start">REDtao 借鉴了 FaceBook Tao 的论文，并对整体架构、跨云多活做了较多的改进，全新实现了一个高性能的分布式图缓存，更加贴合我们自身的业务特点和提供了更好的弹性。同时，利用 k8s 能力进一步实现了云原生化。</p><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start">随着 DAU 的持续增长，万亿的数据规模也在继续增长，我们也面临着更多的技术挑战。</p><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start"><strong>目前公司内部的 OLTP 图场景主要分为三块：</strong></p><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start"><strong><em>1）</em></strong><span style="color:#800000">社交图谱数据服务：</span>通过自研图存储系统 REDtao 满足了社交场景超大规模数据的更新与关联读取问题。目前已经存储了万亿规模的关系；</p><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start"><strong><em>2）</em></strong><span style="color:#800000">风控场景：</span>通过自研图数据库 REDgraph，满足多跳的实时在线查询。目前存储了千亿点和边的关系，满足 2 跳以及 2 跳以上的查询；</p><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start"><strong><em>3）</em></strong><span style="color:#800000">社交推荐：</span>这块主要是两跳的查询。每天通过 Hive 批量地导入全量的数据，通过 DTS 服务近实时的写入更新数据。因为是在线场景，对时延的要求非常高，当前的 REDgraph 还无法满足这么高的要求，因此业务方主要是用 REDkv 来存储。</p><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start"><strong>针对以上场景：</strong>为了快速满足业务需求，我们使用了三套不同的自研存储系统：REDtao 、REDgraph 和 REDkv 。</p><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start">显然相对于 3 套存储系统，用一个统一的架构和系统去解决这几个图相关的场景是更加合适的。</p><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start"><strong>未来：</strong>我们会将 REDgraph 和 REDtao 融合成一个统一的数据库产品，打造业内顶尖的图技术，对公司内部更多的场景进行赋能。</p><span id="OSC_h1_16"></span><h1>15、相关资料</h1><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start">[1]&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.52im.net%2Fthread-1910-1-1.html" target="_blank" rel="nofollow">以微博类应用场景为例，总结海量社交系统的架构设计步骤</a></p><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start">[2]&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.52im.net%2Fthread-1391-1-1.html" target="_blank" rel="nofollow">腾讯技术分享：社交网络图片的带宽压缩技术演进之路</a></p><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start">[3]&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.52im.net%2Fthread-1191-1-1.html" target="_blank" rel="nofollow">基于社交网络的 Yelp 是如何实现海量用户图片的无损压缩的？</a></p><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start">[4]&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.52im.net%2Fthread-2202-1-1.html" target="_blank" rel="nofollow">社交软件红包技术解密 (一)：全面解密 QQ 红包技术方案——架构、技术实现等</a></p><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start">[5]&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.52im.net%2Fthread-2568-1-1.html" target="_blank" rel="nofollow">社交软件红包技术解密 (六)：微信红包系统的存储层架构演进实践</a></p><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start">[6]&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.52im.net%2Fthread-2583-1-1.html" target="_blank" rel="nofollow">社交软件红包技术解密 (九)：谈谈手 Q 红包的功能逻辑、容灾、运维、架构等</a></p><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start">[7]&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.52im.net%2Fthread-2145-1-1.html" target="_blank" rel="nofollow">渐行渐远的人人网：十年亲历者的互联网社交产品覆盘和反思</a></p><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start">[8]&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.52im.net%2Fthread-2153-1-1.html" target="_blank" rel="nofollow">中国互联网社交二十年：全民见证的互联网创业演义</a></p><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start">[9]&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.52im.net%2Fthread-2711-1-1.html" target="_blank" rel="nofollow">盘点移动互联网时代的社交产品进化史（上篇）：谁主沉浮</a></p><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start">[10]&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.52im.net%2Fthread-2724-1-1.html" target="_blank" rel="nofollow">盘点移动互联网时代的社交产品进化史（下篇）：大浪淘沙</a></p><div>
  技术交流： 
</div><div><div><div><div><div><div><div><div><blockquote><p style="margin-left:auto; margin-right:auto">- 移动端 IM 开发入门文章：《<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.52im.net%2Fthread-464-1-1.html" target="_blank" rel="nofollow">新手入门一篇就够：从零开发移动端 IM</a>》</p><p style="margin-left:auto; margin-right:auto">- 开源 IM 框架源码：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FJackJiang2011%2FMobileIMSDK" target="_blank" rel="nofollow">https://github.com/JackJiang2011/MobileIMSDK</a>（<a href="https://gitee.com/jackjiang/MobileIMSDK" target="_blank" rel="nofollow">备用地址点此</a>）</p></blockquote></div></div></div></div></div></div></div><p style="margin-left:auto; margin-right:auto">（本文已同步发布于：<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.52im.net%2Fthread-4495-1-1.html" target="_blank" rel="nofollow">http://www.52im.net/thread-4495-1-1.html</a>）</p></div></div>
                                    ]]>
            </description>
            <pubDate>Mon, 13 Nov 2023 05:44:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/jb2011/blog/10141763</guid>
            <link>https://my.oschina.net/jb2011/blog/10141763</link>
            <author>
                <![CDATA[JackJiang-]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[TIOBE 11 月榜单：PHP 升至第 7，Kotlin 能否跻身四大？]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff; color:#000000"><span style="background-color:#ffffff">TIOBE 公布了 2023&nbsp;年 11 月的</span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.tiobe.com%2Ftiobe-index%2F" target="_blank">编程语言排行榜</a><span style="background-color:#ffffff; color:#000000"><span style="background-color:#ffffff">。</span></span></p><p><img height="58" src="https://oscimg.oschina.net/oscnet/up-8a5433bccbbd8bdfd3522e84b84c0c1cebb.png" width="700" referrerpolicy="no-referrer"></p><p><span style="color:#000000">Kotlin 排名继续稳步上升，继上月<span style="background-color:#ffffff">排名</span><span style="background-color:#ffffff">从第 20 位升至 18 后；本月又上涨了 0.17%，升至第 15 位。Kotlin 曾在 2 个月前进入了 TIOBE 指数的前 20。该语言的第一波流行是在&nbsp;2017 年，彼时 Google 宣布在 Android 上对 Kotlin 提供一流的支持，Kotlin 在 TIOBE 指数中也达到了近 1% 的峰值。但这一记录在本月被打破，目前&nbsp;</span>Kotlin&nbsp;<span style="background-color:#ffffff">的评级为 1.15%。</span></span></p><p><span style="color:#000000"><span style="background-color:#ffffff">TIOBE CEO&nbsp;Paul Jansen&nbsp;</span>评论称，「<span style="background-color:#ffffff">Kotlin 的进步将止步于何处？</span>Kotlin 与 Java 完全互操作，因此是 Java 编程语言的直接竞争对手。其不仅适用于开发 Android 应用程序，如今的每个 Java 领域都是 Kotlin 的机会。Kotlin 符合现代编程文化，即具有强大类型系统的表达式语言，并通过设计避免出现空指针异常。根据我的经验，我非常确信 Kotlin 能跻身前十名。至于它能否跻身'四大'，这仍是一个有待回答的问题。」</span></p><p><strong style="color:#333333">TIOBE 11 月 TOP 20 编程语言</strong></p><p><img height="429" src="https://oscimg.oschina.net/oscnet/up-19103dc2e0ecf25b044f501819bbe7f7a07.png" width="500" referrerpolicy="no-referrer"></p><p><span style="background-color:#ffffff; color:#000000">相较上月，Top&nbsp;10 榜单 PHP (8→7)<span>&nbsp;</span>排名再进一名，</span>Visual Basic 跌至第 8；其他排名无甚变化。<span style="background-color:#ffffff; color:#000000">Top 11-20 中其他语言的一些波动包括：</span></p><ul style="list-style-type:disc; margin-left:0; margin-right:0"><li><span style="color:#000000"><span style="background-color:#ffffff">Scratch 排名持续攀升，从 12 升至 11</span></span></li><li><span style="color:#000000"><span style="background-color:#ffffff">Fortran 的排名从 16 回升至 12</span></span></li><li><span style="color:#000000">Go&nbsp;<span style="background-color:#ffffff">的排名从 11 跌至 13</span></span></li><li><span style="color:#000000">MATLAB&nbsp;<span style="background-color:#ffffff">的排名保持在 14</span></span></li><li><span style="color:#000000">Kotlin&nbsp;<span style="background-color:#ffffff">的排名从 18 升至 15</span></span></li><li><span style="color:#000000"><span style="background-color:#ffffff">Delphi/Object Pascal&nbsp;</span><span style="background-color:#ffffff">的排名从 13 跌至 16</span></span></li><li><span style="color:#000000">Swift&nbsp;<span style="background-color:#ffffff">的排名从 15 跌至 17</span></span></li><li><span style="color:#000000"><span style="background-color:#ffffff">Ruby 的排名从 19 升至 18</span></span></li><li><span style="color:#000000"><span style="background-color:#ffffff">R 的排名从 17 跌至 19</span></span></li><li><span style="color:#000000"><span style="background-color:#ffffff">Rust 的排名保持 20 不变</span></span></li></ul><p><strong style="color:#333333">TOP 10 编程语言 TIOBE 指数走势（2002-2024）</strong></p><p><img height="223" src="https://oscimg.oschina.net/oscnet/up-1ab8bae47fcd417aea75a3a7d715e631ed9.png" width="700" referrerpolicy="no-referrer"></p><p><strong style="color:#333333">第 21-50 名编程语言排行</strong></p><p><img height="440" src="https://oscimg.oschina.net/oscnet/up-2ff38b1f72527a9e92c58c41311064af057.png" width="500" referrerpolicy="no-referrer"></p><p><span style="background-color:#ffffff; color:#000000">第 51-100 名如下，由于它们之间的数值差异较小，仅以文本形式列出（按字母排序）：</span></p><blockquote><p>4th Dimension/4D, ABC, ActionScript, APL, ATLAS, AutoLISP, Awk, bc, Bourne shell, CL (OS/400), Clipper, CLIPS, Clojure, Eiffel, Elixir, Erlang, Euphoria, Forth, Groovy, Hack, Icon, Io, J, J#, JScript, LabVIEW, Ladder Logic, Modula-2, Monkey, NATURAL, Nim, OCaml, OpenEdge ABL, PL/I, PowerShell, Pure Data, Q, Racket, REXX, Ring, RPG, Snap!, SPARK, SPSS, SQR, Stata, Tcl, TOM, VHDL, Wolfram</p></blockquote><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="color:#000000">TIOBE 编程社区指数（The TIOBE Programming Community index）是一个衡量编程语言受欢迎程度的指标，该指数每月更新一次。评判的依据来自世界范围内的工程师、课程和第三方供应商，包括流行的搜索引擎，如 Google、必应、雅虎、维基百科、亚马逊、YouTube 和百度都被用于指数计算。值得注意的是，TIOBE 指数并不代表编程语言的好坏或编写代码的多少。</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="color:#000000">该指数可以用来检查你的编程技能是否还能跟上时代的步伐，或者在开始建立一个新的软件系统时，基于指数对采用何种编程语言做出决策。</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.tiobe.com%2Ftiobe-index%2Fprogramminglanguages_definition%2F" target="_blank">TIOBE 指数</a><span style="color:#000000">的定义方式，以及详细榜单信息<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.tiobe.com%2Ftiobe-index%2F" target="_blank">均可查看官网</a>。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 13 Nov 2023 04:00:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266227/tiobe-index-2023011</guid>
            <link>https://www.oschina.net/news/266227/tiobe-index-2023011</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[比尔·盖茨：AI Agent 将颠覆软件行业]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>比尔·盖茨在其个人网站<strong><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.gatesnotes.com%2FAI-agents" target="_blank">撰文</a></u></strong>谈论了&nbsp;<strong>AI Agent</strong>，称它将彻底改变大众使用电脑的方式，并颠覆软件行业。</p><p><img src="https://static.oschina.net/uploads/space/2023/1111/211033_XnvN_2720166.png" referrerpolicy="no-referrer"></p><blockquote><p>AI Agent 属于人工智能领域的术语，是一种能够感知环境、进行决策和执行动作的智能实体。不同于传统的人工智能，AI Agent 具备通过独立思考、调用工具去逐步完成给定目标的能力。</p></blockquote><p>比尔·盖茨认为，现在要在电脑上执行任何任务，必须先告诉设备启动相应的程序。但它们无法帮助用户发送邮件、分享自拍、分析数据、安排聚会获购买电影票，即便是最好的网站，也无法完全了解自己的工作、生活、兴趣和人际关系。并且使用这些信息为你做事的能力也有限。这种事情在今天只有与另一个人（例如亲密的朋友或私人助理）合作时才有可能实现。</p><p>但是未来五年内，上述情况将彻底改变。用户只需要用简洁明了的语言「告诉」设备自己想做什么，软件便可根据用户分享信息的多少、对用户生活的了解程度，作出个性化的回应。在不久的将来，任何上网的人都可以拥有一个由远远超出当今技术的&nbsp;<span style="font-family:-apple-system,BlinkMacSystemFont,&quot;Apple Color Emoji&quot;,&quot;Segoe UI Emoji&quot;,&quot;Segoe UI Symbol&quot;,&quot;Segoe UI&quot;,&quot;PingFang SC&quot;,&quot;Hiragino Sans GB&quot;,&quot;Microsoft YaHei&quot;,&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif">AI 驱动的个人助理。</span></p><p>比尔·盖茨说道，这种对自然语言做出反应，并能根据对用户的了解完成许多不同任务的软件被称为<strong> Agent</strong>。而他在这 30 多年来，一直在思考关于 Agent 的问题，并在 1995 年出版的《未来之路》<em>(The Road Ahead)&nbsp;</em>一书中对其进行了论述。但直到最近，由于人工智能的进步，Agent 才变得切实可行。</p><p>他认为，<strong>Agent 不仅会改变每个人与计算机交互的方式。它们还将颠覆软件行业，掀起自我们从输入命令到点击图标以来最大的计算革命</strong>。而 AI Agent 最令人兴奋的影响是它们将使当今对大多数人来说过于昂贵的服务民主化。它们将在四个领域产生特别大的影响：医疗保健、教育、生产力以及购物娱乐。</p><p>原文：<em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.gatesnotes.com%2FAI-agents" target="_blank">https://www.gatesnotes.com/AI-agents</a></u></em></p></div>
                                    ]]>
            </description>
            <pubDate>Sat, 11 Nov 2023 13:33:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266065/bill-gate-talk-about-ai-agents</guid>
            <link>https://www.oschina.net/news/266065/bill-gate-talk-about-ai-agents</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Kotlin 1.9.20 现已发布，KMP 进入稳定阶段]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="rich_media_content js_underline_content
                       defaultNoSetting
            " id="js_content"><section style="font-size: 15px;box-sizing: border-box;font-style: normal;font-weight: 400;text-align: justify;margin-bottom: 0px;" data-mpa-powered-by="yiban.io"><section style="text-align: left;justify-content: flex-start;display: flex;flex-flow: row;box-sizing: border-box;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;vertical-align: top;align-self: flex-start;flex: 0 0 auto;box-sizing: border-box;"><section style="justify-content: flex-start;display: flex;flex-flow: row;box-sizing: border-box;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;vertical-align: top;align-self: flex-start;flex: 0 0 auto;box-sizing: border-box;"><section style="margin: 30px 0% 10px;justify-content: flex-start;display: flex;flex-flow: row;box-sizing: border-box;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;vertical-align: top;background-color: rgb(237, 238, 242);align-self: flex-start;flex: 0 0 auto;box-sizing: border-box;"><section style="display: flex;width: 100%;flex-flow: column;box-sizing: border-box;" powered-by="xiumi.us"><section style="z-index: auto;box-sizing: border-box;" powered-by="xiumi.us"><section style="display: flex;flex-flow: row;justify-content: flex-start;transform: translate3d(18px, 0px, 0px);-webkit-transform: translate3d(18px, 0px, 0px);-moz-transform: translate3d(18px, 0px, 0px);-o-transform: translate3d(18px, 0px, 0px);margin: -16px 0% 0px;box-sizing: border-box;"><section style="display: inline-block;vertical-align: top;width: 15%;flex: 0 0 auto;height: auto;align-self: flex-start;box-sizing: border-box;"><section style="text-align: center;margin: -16px 0px 0px;line-height: 0;box-sizing: border-box;" powered-by="xiumi.us"><section style="max-width: 100%;vertical-align: middle;display: inline-block;line-height: 0;box-sizing: border-box;"><img class="rich_pages wxw-img" data-ratio="1" data-s="300,640" src="https://oscimg.oschina.net/oscnet/857c41ff-cddd-4928-8250-1a8458f95df4.png" data-w="707" style="vertical-align: middle;max-width: 100%;width: 100%;box-sizing: border-box;" width="100%" referrerpolicy="no-referrer"></section></section></section><section style="display: inline-block;vertical-align: top;width: auto;flex: 0 0 auto;align-self: flex-start;min-width: 10%;max-width: 100%;height: auto;box-sizing: border-box;"><section style="transform: translate3d(5px, 0px, 0px);-webkit-transform: translate3d(5px, 0px, 0px);-moz-transform: translate3d(5px, 0px, 0px);-o-transform: translate3d(5px, 0px, 0px);box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: justify;color: rgb(115, 119, 173);padding: 0px 7px;line-height: 1.2;box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><span style="box-sizing: border-box;"><strong style="box-sizing: border-box;">记得加关注， Kotlin 之路不迷路！</strong></span></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: justify;font-size: 12px;color: rgb(221, 18, 101);line-height: 1.2;box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><span style="box-sizing: border-box;">&nbsp; &nbsp; Kotlinlang.org</span></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section></section></section></section></section></section></section></section></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: justify;box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: justify;box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;">Kotlin 1.9.20 版本已发布，适用于所有目标的<strong style="box-sizing: border-box;"> K2 编译器</strong>现已进入<strong style="box-sizing: border-box;">测试版</strong>阶段，<strong style="box-sizing: border-box;">Kotlin Multiplatform </strong>现已进入<strong style="box-sizing: border-box;">稳定阶段</strong><sup style="box-sizing: border-box;">1</sup>。</p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: justify;box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: justify;box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;">以下是此版本的一些亮点：</p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: justify;box-sizing: border-box;"><ul class="list-paddingleft-1" style="list-style-type: disc;box-sizing: border-box;padding-left: 40px;list-style-position: outside;"><li style="box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;">适用于所有目标的 K2 现已进入测试版阶段</p></li><li style="box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;">稳定的 Kotlin Multiplatform</p></li><li style="box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;">用于设置多平台项目的新默认层次结构模板</p></li><li style="box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;">Kotlin Multiplatform 中全面支持 Gradle 配置缓存</p></li><li style="box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;">Kotlin/Native 中默认启用自定义内存分配器</p></li><li style="box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;">Kotlin/Native 中垃圾回收器的性能改进</p></li><li style="box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;">Kotlin/Wasm 中的新目标和重命名目标，支持最新的 Wasm GC</p></li><li style="box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;">Kotlin/Wasm 的标准库中支持 WASI API</p></li></ul></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: justify;box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: justify;box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;">有关完整的更改列表，请参阅&nbsp;<strong style="box-sizing: border-box;">Kotlin 1.9.20 最新变化</strong><sup style="font-size: 11px;box-sizing: border-box;">2</sup>或&nbsp;<strong style="box-sizing: border-box;">GitHub 上的版本说明</strong><sup style="font-size: 11px;box-sizing: border-box;">3</sup>。</p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: justify;box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="text-align: center;justify-content: center;display: flex;flex-flow: row;margin: 10px 0px;box-sizing: border-box;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: middle;width: 48px;align-self: center;flex: 0 0 auto;height: auto;box-sizing: border-box;"><section style="margin-top: 10px;margin-bottom: 10px;line-height: 0;box-sizing: border-box;" powered-by="xiumi.us"><section style="max-width: 100%;vertical-align: middle;display: inline-block;line-height: 0;box-sizing: border-box;"><img data-ratio="1" data-s="300,640" data-w="500" src="https://oscimg.oschina.net/oscnet/6bfa4c27-1a25-41fd-9125-da620c956bf6.png" style="vertical-align: middle;max-width: 100%;width: 100%;box-sizing: border-box;" width="100%" referrerpolicy="no-referrer"></section></section></section><section style="display: inline-block;vertical-align: middle;width: auto;align-self: center;flex: 100 100 0%;height: auto;padding: 0px 0px 0px 10px;box-sizing: border-box;"><section style="text-align: left;margin: 10px 0px 0px;box-sizing: border-box;" powered-by="xiumi.us"><section style="color: rgb(42, 8, 69);font-size: 24px;line-height: 1.2;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;"><strong style="box-sizing: border-box;">适用于所有目标的新 Kotlin K2 编译器已进入测试版阶段</strong></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="margin: 2px 0px 8px;box-sizing: border-box;" powered-by="xiumi.us"><section style="background-color: rgb(120, 85, 245);height: 1px;box-sizing: border-box;"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section></section></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: justify;box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;">JetBrains 的 Kotlin 团队正在继续稳定新 K2 编译器，这将带来重大性能改进，加快新语言功能的开发，统一 Kotlin 支持的所有平台，并为多平台项目提供更好的架构。</p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: justify;box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><strong style="box-sizing: border-box;"></strong></p><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><strong style="box-sizing: border-box;">随着 1.9.20 版本的发布，新 K2 编译器已面向所有平台进入测试版阶段：JVM、Native、JS 和 Wasm。这意味着您现在可以在任何 Kotlin 项目中试用 K2。</strong></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: justify;box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: justify;box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;">Kotlin 团队通过成功编译数十个用户和内部项目，确保了新编译器的质量。大量用户也参与了稳定过程，在他们的项目中试用新 K2 编译器，并报告他们发现的任何问题。</p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: justify;box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: justify;box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><strong style="box-sizing: border-box;">Kotlin 1.9.20 版本还在 kapt 编译器插件中引入了 K2 支持。</strong>&nbsp;现在，所有必要的 Kotlin 编译器插件都支持 K2。这些包括 kapt、serialization、AtomicFU、Lombok、SAM with receiver、all-open、no-arg、jvm-abi-gen、Android Lint 和 Jetpack Compose 编译器插件。支持 K2 的 Kotlin Symbol Processing (KSP) 将在 Kotlin 1.9.20 发布后一周内发布。</p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: justify;box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: justify;box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;">如果您使用任何其他编译器插件，请查看相关文档以了解其是否与 K2 兼容。</p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: justify;box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: justify;box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><strong style="box-sizing: border-box;">下一站是 Kotlin 2.0</strong></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: justify;box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: justify;box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><strong style="box-sizing: border-box;">Kotlin 的下一个主要版本是 2.0.0，新 K2 编译器将作为默认的稳定编译器面向所有目标提供。</strong></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: justify;box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: justify;box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;">为了尽快解决发现的任何问题，我们计划频繁发布一系列小型 Kotlin 2.0 稳定版本。这些版本将包括 Beta1、Beta2、Beta3、RC1 和 RC2。</p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: justify;box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: justify;box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;">在 Kotlin 2.0.0-RC1 发布时，我们计划确保与其他版本 Kotlin 编译器编译的代码的二进制文件兼容性，并消除使用 K2 编译的二进制文件时的中毒现象。这样您就能够在生产环境中使用新的 K2 编译器。</p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: justify;box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: justify;box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><strong style="box-sizing: border-box;">参与进来：立即塑造 Kotlin 2.0 并试用 K2 编译器</strong></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: justify;box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: justify;box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;">K2 编译器即将完成其稳定过程，并在 Kotlin 2.0 中默认启用。至关重要的是，我们呼吁尽可能多的开发者试用 K2 并报告任何潜在问题。&nbsp;</p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: justify;box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: justify;box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;">您的反馈将帮助我们解决任何问题，并确保 K2 即使在最复杂的场景中也能完美运行。只需使用 K2 对您的项目进行一次编译就可以为达到 Kotlin 2.0 里程碑做出显著贡献。<strong style="box-sizing: border-box;"> 立即试用 K2！</strong><sup style="box-sizing: border-box;">4</sup></p><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="text-align: center;justify-content: center;display: flex;flex-flow: row;margin: 10px 0px;box-sizing: border-box;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: middle;width: 48px;align-self: center;flex: 0 0 auto;height: auto;box-sizing: border-box;"><section style="margin-top: 10px;margin-bottom: 10px;line-height: 0;box-sizing: border-box;" powered-by="xiumi.us"><section style="max-width: 100%;vertical-align: middle;display: inline-block;line-height: 0;box-sizing: border-box;"><img data-ratio="1" data-s="300,640" data-w="500" src="https://oscimg.oschina.net/oscnet/6bfa4c27-1a25-41fd-9125-da620c956bf6.png" style="vertical-align: middle;max-width: 100%;width: 100%;box-sizing: border-box;" width="100%" referrerpolicy="no-referrer"></section></section></section><section style="display: inline-block;vertical-align: middle;width: auto;align-self: center;flex: 100 100 0%;height: auto;padding: 0px 0px 0px 10px;box-sizing: border-box;"><section style="text-align: left;margin: 10px 0px 0px;box-sizing: border-box;" powered-by="xiumi.us"><section style="color: rgb(42, 8, 69);font-size: 24px;line-height: 1.2;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;"><strong style="box-sizing: border-box;">如何安装 Kotlin 1.9.20</strong></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="margin: 2px 0px 8px;box-sizing: border-box;" powered-by="xiumi.us"><section style="background-color: rgb(120, 85, 245);height: 1px;box-sizing: border-box;"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section></section></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: justify;box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;">如果您已经在使用<strong style="box-sizing: border-box;">&nbsp;IntelliJ IDEA</strong><sup style="box-sizing: border-box;">5</sup>&nbsp;2023.1 或 2023.2，IDE 会自动建议将 Kotlin 更新到 1.9.20。您也可以按照<strong style="box-sizing: border-box;">这些说明</strong><sup style="box-sizing: border-box;">6</sup>手动更新。IntelliJ IDEA 2023.3 将包含 Kotlin 1.9.20 插件。</p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: justify;box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: justify;box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;">对于 Android Studio Hedgehog (231) 和 Iguana (232)，Kotlin 1.9.20 插件将包含在即将推出的 Android Studio 更新中。如果需要命令行编译器，请从<strong style="box-sizing: border-box;">&nbsp;GitHub 版本页面</strong><sup style="box-sizing: border-box;">7</sup>下载。</p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: justify;box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: justify;box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><strong style="box-sizing: border-box;">如果您遇到任何问题</strong></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: justify;box-sizing: border-box;"><ul class="list-paddingleft-1" style="list-style-type: disc;box-sizing: border-box;padding-left: 40px;list-style-position: outside;"><li style="box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;">在&nbsp;<strong style="box-sizing: border-box;">Slack</strong><sup style="font-size: 11px;box-sizing: border-box;">8</sup>（<strong style="box-sizing: border-box;">获得邀请</strong><sup style="font-size: 11px;box-sizing: border-box;">9</sup>）上获取帮助。</p></li><li style="box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;">向我们的问题跟踪器&nbsp;<strong style="box-sizing: border-box;">YouTrack</strong><sup style="box-sizing: border-box;">10</sup>&nbsp;报告问题。</p></li></ul><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="text-align: center;justify-content: center;display: flex;flex-flow: row;margin: 10px 0px;box-sizing: border-box;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: middle;width: 48px;align-self: center;flex: 0 0 auto;height: auto;box-sizing: border-box;"><section style="margin-top: 10px;margin-bottom: 10px;line-height: 0;box-sizing: border-box;" powered-by="xiumi.us"><section style="max-width: 100%;vertical-align: middle;display: inline-block;line-height: 0;box-sizing: border-box;"><img data-ratio="1" data-s="300,640" data-w="500" src="https://oscimg.oschina.net/oscnet/6bfa4c27-1a25-41fd-9125-da620c956bf6.png" style="vertical-align: middle;max-width: 100%;width: 100%;box-sizing: border-box;" width="100%" referrerpolicy="no-referrer"></section></section></section><section style="display: inline-block;vertical-align: middle;width: auto;align-self: center;flex: 100 100 0%;height: auto;padding: 0px 0px 0px 10px;box-sizing: border-box;"><section style="text-align: left;margin: 10px 0px 0px;box-sizing: border-box;" powered-by="xiumi.us"><section style="color: rgb(42, 8, 69);font-size: 24px;line-height: 1.2;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;"><strong style="box-sizing: border-box;">特别感谢我们的 EAP Champions 🥇👏</strong></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="margin: 2px 0px 8px;box-sizing: border-box;" powered-by="xiumi.us"><section style="background-color: rgb(120, 85, 245);height: 1px;box-sizing: border-box;"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section></section></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: justify;box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;">Zac Sweers、Alexander Nozik、Oleg Yukhnevich、Josh Friend、Łukasz Wasylkowski、Simon Marquis、Benoit ‘BoD’ Lubek、Yang、Rustam Musin、Russell Wolf、Jake Wharton、Rick Clephas、Artyom Shendrik、Johannes Svensson、Sterling Albury、David Lopez。</p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: justify;box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="text-align: center;justify-content: center;display: flex;flex-flow: row;margin: 10px 0px;box-sizing: border-box;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: middle;width: 48px;align-self: center;flex: 0 0 auto;height: auto;box-sizing: border-box;"><section style="margin-top: 10px;margin-bottom: 10px;line-height: 0;box-sizing: border-box;" powered-by="xiumi.us"><section style="max-width: 100%;vertical-align: middle;display: inline-block;line-height: 0;box-sizing: border-box;"><img data-ratio="1" data-s="300,640" data-w="500" src="https://oscimg.oschina.net/oscnet/6bfa4c27-1a25-41fd-9125-da620c956bf6.png" style="vertical-align: middle;max-width: 100%;width: 100%;box-sizing: border-box;" width="100%" referrerpolicy="no-referrer"></section></section></section><section style="display: inline-block;vertical-align: middle;width: auto;align-self: center;flex: 100 100 0%;height: auto;padding: 0px 0px 0px 10px;box-sizing: border-box;"><section style="text-align: left;margin: 10px 0px 0px;box-sizing: border-box;" powered-by="xiumi.us"><section style="color: rgb(42, 8, 69);font-size: 24px;line-height: 1.2;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;"><strong style="box-sizing: border-box;">更多文章和视频</strong></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="margin: 2px 0px 8px;box-sizing: border-box;" powered-by="xiumi.us"><section style="background-color: rgb(120, 85, 245);height: 1px;box-sizing: border-box;"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section></section></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: justify;box-sizing: border-box;"><ul class="list-paddingleft-1" style="list-style-type: disc;box-sizing: border-box;padding-left: 40px;list-style-position: outside;"><li style="box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;">「Kotlin 1.9.20 最新变化」文档：</p><p style="margin: 0px;padding: 0px;box-sizing: border-box;"><span style="color: rgb(0, 86, 150);font-size: 14px;box-sizing: border-box;">https://kotlinlang.org/docs/whatsnew1920.html</span></p></li><li style="box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;">Kotlin 1.9.20 最新变化 YouTube 视频：</p><p style="margin: 0px;padding: 0px;box-sizing: border-box;"><span style="font-size: 14px;color: rgb(0, 86, 150);box-sizing: border-box;">https://youtu.be/Ol_96CHKqg8</span><br style="box-sizing: border-box;"></p></li><li style="box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;">K2 编译器将在 Kotlin 2.0 中进入稳定状态：</p><p style="margin: 0px;padding: 0px;box-sizing: border-box;"><span style="font-size: 14px;color: rgb(0, 86, 150);box-sizing: border-box;">https://blog.jetbrains.com/zh-hans/kotlin/2023/02/k2-kotlin-2-0/</span></p></li><li style="box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;">Kotlin Multiplatform 已经稳定并且可以投入生产环境：</p><p style="margin: 0px;padding: 0px;box-sizing: border-box;"><span style="color: rgb(0, 86, 150);font-size: 14px;box-sizing: border-box;">https://blog.jetbrains.com/kotlin/2023/11/kotlin-multiplatform-stable/</span></p></li><li style="box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;">Kotlin EAP Champion：</p><p style="margin: 0px;padding: 0px;box-sizing: border-box;"><span style="font-size: 14px;color: rgb(0, 86, 150);box-sizing: border-box;">https://blog.jetbrains.com/kotlin/2022/11/eap-champions/</span><br style="box-sizing: border-box;"></p></li></ul></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section></section></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="margin-top: 10px;margin-bottom: 10px;box-sizing: border-box;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;border-width: 1px;border-style: solid;border-color: rgb(120, 85, 245);padding: 10px;box-shadow: rgb(204, 204, 204) 0.2em 0.2em 0.3em;box-sizing: border-box;"><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><strong style="box-sizing: border-box;">相关链接：</strong></p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: left;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;"><span style="font-size: 14px;box-sizing: border-box;">1. Kotlin Multiplatform 现已进入稳定阶段：</span></p><p style="margin: 0px;padding: 0px;box-sizing: border-box;"><span style="font-size: 14px;color: rgb(51, 122, 183);box-sizing: border-box;">https://blog.jetbrains.com/kotlin/2023/11/kotlin-multiplatform-stable/https://github.com/jetbrains/exposed</span></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: left;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;"><span style="font-size: 14px;box-sizing: border-box;">2. Kotlin 1.9.20 最新变化：&nbsp;</span></p><p style="margin: 0px;padding: 0px;box-sizing: border-box;"><span style="font-size: 14px;color: rgb(51, 122, 183);box-sizing: border-box;">http://kotlinlang.org/docs/whatsnew1920.html</span></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><span style="font-size: 14px;box-sizing: border-box;">3. GitHub 上的版本说明：</span></p><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><span style="font-size: 14px;color: rgb(51, 122, 183);box-sizing: border-box;">https://github.com/JetBrains/kotlin/releases/tag/v1.9.20</span></p><p style="margin-bottom: 0px;font-size: 15px;letter-spacing: 0.578px;text-wrap: wrap;"><span style="font-size: 14px;">4. 立即试用 K2！：</span></p><p style="margin-bottom: 0px;font-size: 15px;letter-spacing: 0.578px;text-wrap: wrap;"><span style="font-size: 14px;color: rgb(51, 122, 183);">https://kotlinlang.org/docs/whatsnew1920.html</span></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><span style="font-size: 14px;box-sizing: border-box;">5. IntelliJ IDEA：</span></p><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><span style="font-size: 14px;color: rgb(51, 122, 183);box-sizing: border-box;">https://www.jetbrains.com.cn/idea/download/</span></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><span style="font-size: 14px;box-sizing: border-box;">6. 这些说明：</span></p><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><span style="font-size: 14px;color: rgb(51, 122, 183);box-sizing: border-box;">https://kotlinlang.org/docs/releases.html#update-to-a-new-release</span></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="box-sizing: border-box;"><p style="text-align: left;white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><span style="font-size: 14px;box-sizing: border-box;">7. GitHub 版本页面:&nbsp;</span></p><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><span style="color: rgb(51, 122, 183);font-size: 14px;text-align: left;box-sizing: border-box;">https://github.com/JetBrains/kotlin/releases/tag/v1.9.20</span></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="box-sizing: border-box;"><p style="text-align: left;white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><span style="font-size: 14px;box-sizing: border-box;">8. Slack:&nbsp;</span></p><p style="text-align: left;white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><span style="font-size: 14px;color: rgb(51, 122, 183);box-sizing: border-box;">http://kotlinlang.slack.com/</span></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="box-sizing: border-box;"><p style="text-align: left;white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><span style="font-size: 14px;box-sizing: border-box;">9. 获得邀请：</span></p><p style="text-align: left;white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><span style="font-size: 14px;color: rgb(51, 122, 183);box-sizing: border-box;">https://surveys.jetbrains.com/s3/kotlin-slack-sign-up</span></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="box-sizing: border-box;"><p style="text-align: left;white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><span style="font-size: 14px;box-sizing: border-box;">10. YouTrack：</span></p><p style="text-align: left;white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><span style="font-size: 14px;color: rgb(51, 122, 183);box-sizing: border-box;">https://youtrack.jetbrains.com/issues/KT</span></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section></section></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="margin: 10px 0px 0px;text-align: left;justify-content: flex-start;display: flex;flex-flow: row;box-sizing: border-box;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;vertical-align: top;border-left: 3px solid rgb(219, 219, 219);border-bottom-left-radius: 0px;padding: 0px 0px 0px 8px;align-self: flex-start;flex: 0 0 auto;box-sizing: border-box;"><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="color: rgb(125, 125, 125);font-size: 12px;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;">本博文英文原作者：</p><p style="margin: 0px;padding: 0px;box-sizing: border-box;">Andrey Polyakov</p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section></section></section><section style="margin: 10px 0% 0px;text-align: left;justify-content: flex-start;display: flex;flex-flow: row;box-sizing: border-box;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;vertical-align: top;background-position: 97.529% 66.6681%;background-repeat: repeat;background-size: 171.01%;background-attachment: scroll;align-self: flex-start;flex: 0 0 auto;height: auto;background-image: url(&quot;https://oscimg.oschina.net/oscnet/0eddb263-e655-40fb-bb29-ad40b1263907.png&quot;);box-sizing: border-box;"><section style="text-align: justify;justify-content: flex-start;display: flex;flex-flow: row;box-sizing: border-box;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;vertical-align: top;padding: 26px;align-self: flex-start;flex: 0 0 auto;box-sizing: border-box;"><section style="margin: -9px 0px 7px;box-sizing: border-box;" powered-by="xiumi.us"><section style="font-size: 16px;color: rgb(248, 248, 248);box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><strong style="box-sizing: border-box;">这就是 Kotlin 编程语言</strong></p><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><strong style="box-sizing: border-box;">简洁、跨平台、且有趣！</strong></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="margin: 0px;box-sizing: border-box;" powered-by="xiumi.us"><section class="mp_profile_iframe_wrp" style="box-sizing: border-box;"><mp-common-profile class="js_uneditable custom_select_card mp_profile_iframe" data-id="Mzg4MzkxMzg3MQ==" data-pluginname="mpprofile" data-headimg="http://mmbiz.qpic.cn/mmbiz_png/y4ibuu6gd7d4NyzPduLLqtqddBasicL77gAgbLQD89CyYm1n7icODFhBr3xMoloOA7yicfjR8Bv0oaRP3CJuRLIO4Q/0?wx_fmt=png" data-nickname="Kotlin 开发者" data-alias="" data-signature="现代、简洁、安全的编程语言，由 JetBrains 打造。面向服务器、Android、Web 和原生平台，提供多种在平台间重用代码的方式以实现高效编程。官网：kotlinlang.org" data-from="0" data-is_biz_ban="0"></mp-common-profile></section></section><section style="text-align: center;margin: 7px 0px 0px;line-height: 0;box-sizing: border-box;" powered-by="xiumi.us"><section style="max-width: 100%;vertical-align: middle;display: inline-block;line-height: 0;width: 45%;height: auto;box-sizing: border-box;"><img class="rich_pages wxw-img" data-ratio="0.4119760479041916" data-s="300,640" src="https://oscimg.oschina.net/oscnet/3798f3e4-8493-496c-9edb-4fd1944d295e.png" data-w="835" style="vertical-align: middle;max-width: 100%;width: 100%;box-sizing: border-box;" width="100%" referrerpolicy="no-referrer"></section></section></section></section></section></section></section><p style="display: none;margin-bottom: 0px;"><mp-style-type data-value="10000"></mp-style-type></p></div><p style="color: #858585; font-size: 13px;">本文分享自微信公众号 - JetBrains（JetBrainsChina）。<br>如有侵权，请联系 support@oschina.cn 删除。<br>本文参与「<a href="https://www.oschina.net/sharing-plan" target="_blank">OSC 源创计划</a>」，欢迎正在阅读的你也加入，一起分享。</p></div>
                                    ]]>
            </description>
            <pubDate>Sat, 11 Nov 2023 11:04:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/5494143/blog/10142143</guid>
            <link>https://my.oschina.net/u/5494143/blog/10142143</link>
            <author>
                <![CDATA[JetBrains 中国]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Linux 上的 .NET 8 独立体积减少 50%]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>.NET 7 首次引入了以<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flearn.microsoft.com%2Fen-us%2Fdotnet%2Fcore%2Fdeploying%2Fnative-aot%2F" target="_blank">原生 AOT (Native AOT)</a></u>发布应用程序的选项。基于此特性，开发者使用原生 AOT 发布应用程序可以创建一个完全独立 (self-contained) 的版本，它不需要运行时，所有内容都包含在一个文件中。</p><p><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flearn.microsoft.com%2Fen-us%2Fdotnet%2Fcore%2Fwhats-new%2Fdotnet-8%23native-aot-support" target="_blank">微软介绍道</a></u>，.NET 8 为原生 AOT 发布带来了以下改进：</p><ul><li>增加对 x64 和 macOS Arm64 架构的支持</li><li>将 Linux 上原生 AOT 应用程序的大小最多减少 50%<br><br> 下表显示了使用原生 AOT 发布的 "Hello World" 应用程序的大小，其中包括 .NET 7 与 .NET 8 上的整个 .NET 运行时：<br><img height="414" src="https://static.oschina.net/uploads/space/2023/1111/184357_9MxX_2720166.png" width="2356" referrerpolicy="no-referrer"></li></ul><p><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flearn.microsoft.com%2Fen-us%2Fdotnet%2Fcore%2Fwhats-new%2Fdotnet-8" target="_blank">点此查看详情</a></u>。</p></div>
                                    ]]>
            </description>
            <pubDate>Sat, 11 Nov 2023 10:45:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266051</guid>
            <link>https://www.oschina.net/news/266051</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[JetBrains 推出新的 C/C++ IDE：CLion Nova]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">JetBrains 宣布推出全新的&nbsp;CLion Nova 早期预览版，<span style="background-color:#ffffff">使用 ReSharper C++/Rider C++ 语言引擎而不是 CLion「传统」引擎。「我们将新的实验预览版命名为 CLion Nova，而当前的 CLion 版本则是 CLion Classic。未来，我们计划将 CLion Nova 并入 CLion Classic。我们不打算推出新产品。」</span></span></p><p><span style="color:#000000">该公司打算先收集用户反馈，然后在 2024 年的某个时刻根据具体的反馈结果将&nbsp;<span style="background-color:#ffffff">CLion Nova 合并到&nbsp;CLion Classic。在此之前，预览版本将免费提供，并且可以与 CLion (Classic) 安装并行安装。目前&nbsp;CLion Nova&nbsp;</span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.jetbrains.com%2Ftoolbox-app%2F" target="_blank">只能通过 Toolbox 应用程序</a><span style="color:#000000">获得。</span></p><p><span style="color:#000000"><span style="background-color:#ffffff"><img alt="" height="281" src="https://oscimg.oschina.net/oscnet/up-d8f4e7450a6ce6527151f7d97e3629a6f59.png" width="500" referrerpolicy="no-referrer"></span></span></p><p><span style="color:#000000">CLion Nova&nbsp;重点关注 IDE 的响应能力、准确性和性能。有两个主要目标：</span></p><ul style="margin-left:0; margin-right:0"><li><span style="color:#000000">解决 CLion 因使用「传统」引擎而导致的长期存在的<strong>性能</strong>和<strong>质量问题。</strong></span></li><li><span style="color:#000000">统一 JetBrains 所有 C++ 工具（即 CLion、Rider 和 ReSharper C++）的用户体验。</span></li></ul><p><span style="color:#000000">&nbsp;<img alt="" height="211" src="https://oscimg.oschina.net/oscnet/up-d18769c1e056c9bdb1ea86ad5ce12804963.png" width="300" referrerpolicy="no-referrer"></span></p><p><span style="color:#000000">CLion Nova 仍然使用两种 C++ 语言引擎：基于 clangd 的引擎和 ReSharper C++/Rider 使用的引擎，且&nbsp;CLion Nova 包含了 CLion Classic 的大部分功能。</span></p><p><span style="color:#000000">CLion Nova </span>的性能优势主要在于：</p><ul style="margin-left:0; margin-right:0"><li>更快的高亮显示速度，尤其是在代码增量更新的情况下</li><li>响应速度更快的&nbsp;UI</li><li>查找使用速度更快</li><li>重构时的冻结和挂起情况显着减少</li><li>更快的测试索引</li></ul><p>此外，CLion Nova 还增添了一些 CLion Classic 中未包含的新功能：&nbsp;</p><ul style="margin-left:0; margin-right:0"><li>新的重构，例如<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.jetbrains.com%2Fhelp%2Fresharper%2FRefactorings_for_CPP.html%23intro_field" target="_blank">引入字段</a>、<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.jetbrains.com%2Fhelp%2Fresharper%2FRefactorings_for_CPP.html%23namespace_alias" target="_blank">引入命名空间别名</a>、<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.jetbrains.com%2Fhelp%2Fresharper%2FRefactorings_for_CPP.html%23using_enum" target="_blank">引入 using 枚举</a>以及<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.jetbrains.com%2Fhelp%2Fresharper%2FRefactorings_for_CPP.html%23convert_to_scoped" target="_blank">转换为作用域枚举</a>。</li><li>新的检查、快速修复和意图，例如冗余限定符、用明确的类型声明替换<code>auto</code>以及<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.jetbrains.com%2Fhelp%2Fresharper%2FCode_Style_Assistance_in_CPP.html%23sort_includes" target="_blank"><code>#include</code>指令排序</a>。</li><li>新的代码提示，例如<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.jetbrains.com%2Fhelp%2Fresharper%2FSettings_Inlay_Hints_CPP_Other.html%23preprocessor-directive" target="_blank">预处理指令提示</a>﻿和&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.jetbrains.com%2Fhelp%2Fresharper%2FInline_Parameter_Name_Hints.html%23push-to-hint-mode" target="_blank">Push-to-Hint 模式</a>。</li></ul><p><img alt="" height="183" src="https://oscimg.oschina.net/oscnet/up-13d64d47fd11ccfff6297a4bd485597e5e7.png" width="500" referrerpolicy="no-referrer"></p><p><span style="color:#000000">与 CLion Classic 不同的是，CLion Nova 不使用&nbsp;<strong style="color:#19191c">clangd&nbsp;</strong>来实现代码完成或高亮显示等核心 IDE 功能。不过，JetBrains 的 clangd 分支仍然与新引擎一起运行，以执行各种任务（ClangFormat、Clang-Tidy、MISRA 检查、数据流分析等）。&nbsp;</span></p><p>公告指出，对于&nbsp;<span style="color:#000000">CLion Classic </span>而言，使用&nbsp;<span style="color:#000000">CLion Nova </span>将拥有一些全新的体验：</p><ul style="margin-left:0; margin-right:0"><li>用户键入时 IDE 的一些反应方式会有所差异。</li><li>与代码洞察功能相关的某些 UI 元素和设置可能看起来不寻常或位于不熟悉的位置。</li><li>某些与代码相关的设置在 CLion Nova 中可能具有不同的默认值。首次启动时，CLion Nova 将从 CLion Classic 迁移一些按项目和应用程序设置，但不是全部。</li><li>在不同语言配置（即调试/发布）之间切换可能需要更多时间来让代码洞察引擎跟上。也没有选项可以切换每个文件的解析上下文。</li><li>ReSharper C++ 仅适用于 Windows，而 Rider 则支持跨平台。ReSharper C++/Rider 引擎可能无法像 Windows 环境那样无缝地支持非 Windows 环境。</li></ul><p><img alt="" height="382" src="https://oscimg.oschina.net/oscnet/up-c2c732eb8e4fd3d5f0bda9c1c6c3a7e2241.png" width="500" referrerpolicy="no-referrer"></p><p>&nbsp;<span style="color:#000000">CLion Nova 目前确实的功能包括：</span></p><ul style="margin-left:0; margin-right:0"><li><strong>工具链</strong>：存在多种选项可用于在 CLion 中设置<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.jetbrains.com%2Fhelp%2Fclion%2F2023.3%2Fremote-development.html" target="_blank">远程工作</a>。CLion Nova 支持本地资源的远程工作，但瘦客户端 (Gateway)&nbsp; 的远程工作尚不可用。</li><li><strong>语言</strong>：Objective-C 语言、CUDA（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fyoutrack.jetbrains.com%2Fissue%2FRSCPP-613" target="_blank">RSCPP-613</a>、<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fyoutrack.jetbrains.com%2Fissue%2FCPP-26144" target="_blank">CPP-26144</a>）和一些特定于供应商的编译器扩展尚不受支持。</li><li>目前不支持某些 intentions 和 quick-fixes，例如&nbsp;Simplify 语句 (&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fyoutrack.jetbrains.com%2Fissue%2FCPP-35879" target="_blank">CPP-35879</a>&nbsp;)。</li><li>一些流行度不高的 refactorings 也不支持。官方计划稍后重新引入 Move<span style="background-color:#ffffff; color:#19191c"><span>&nbsp;</span>(</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fyoutrack.jetbrains.com%2Fissue%2FCPP-35867" target="_blank">CPP-35867</a><span style="background-color:#ffffff; color:#19191c">) 和<span>&nbsp;</span></span>Inline Parameter<span style="background-color:#ffffff; color:#19191c"><span>&nbsp;</span>refactorings (</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fyoutrack.jetbrains.com%2Fissue%2FCPP-35868" target="_blank">CPP-35868</a><span style="background-color:#ffffff; color:#19191c">)</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fyoutrack.jetbrains.com%2Fissue%2FCPP-35868" target="_blank">。</a></li><li>JetBrains 的 AI 助手尚不适用于 CLion Nova。</li></ul></div>
                                    ]]>
            </description>
            <pubDate>Sat, 11 Nov 2023 10:44:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266295/jetbrains-clion-nova</guid>
            <link>https://www.oschina.net/news/266295/jetbrains-clion-nova</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[正式开源！网易有道上线 「易魔声」 语音合成引擎]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><strong>刚刚，我们上线了「易魔声」开源语音合成（TTS）引擎！🎉🎉🎉</strong></p><p>「易魔声」，是一款有道自研 TTS 引擎，目前支持中英文双语，包含<strong>2000 多种不同的音色</strong>，更有特色的情感合成功能，支持合成包含<strong>快乐、兴奋、悲伤、愤怒</strong>等广泛情感的语音。</p><p style="text-align:center"><strong><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fpan.baidu.com%2Fs%2F1Gl7irtGrXoqFwgox3UzlgA%3Fpwd%3Dtwck" rel="nofollow" target="_blank">「易魔声」中文&nbsp; 网易有道</a></strong></p><p style="text-align:center">（我们用「易魔声」将以上这段话进行了技术合成，点击试听 ）</p><p>用户可免费在开源社区 GitHub 进行下载使用（地址：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnetease-youdao%2FEmotiVoice" rel="nofollow" target="_blank">https://github.com/netease-youdao/EmotiVoice</a>），通过我们提供的 web 界面、及批量生成结果的脚本接口，轻松实现音色的情感合成与应用。</p><p style="text-align:center"><img alt="" src="https://mp.weixin.qq.com/s/WktfW3t1O5vn4QJWoRVLuA" referrerpolicy="no-referrer"><img alt="" src="https://oscimg.oschina.net/oscnet/up-9d1543d602359db470e97a2559595b763a6.png" referrerpolicy="no-referrer"></p><p style="text-align:center">（<strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnetease-youdao%2FEmotiVoice" rel="nofollow" target="_blank">GitHub 开源界面</a></strong>，点击蓝字可跳转）</p><p>在你过往的回忆里，是不是也有一些特别的声音，比如：偶像的声音激励人心、妈妈的声音让我们一秒回忆起小时候......声音，作为语言维度的一种，总是蕴含着人类充沛的情感表达。<strong>而富有情感的合成语音，是能够为应用和内容增色的 AI 功能。</strong></p><p>现在通过「易魔声」，简单通过在文本中加入情感的描述提示，开发者或者内容创作者就可以自由合成符合自己需求的带有情感的语音，比传统 TTS 更加自然逼真！👍</p><p>「易魔声」，是有道 AI 团队今年开发的一个项目。随着基于 GAN 等现代 AI 技术的语音能力越来越成熟，实现一个质量较高的 TTS 系统的门槛越来越低。但即使如此，中英双语的高质量、现代 TTS 模块还是不容易找到，要在自己的应用与内容中<strong>加入高逼真度且高度可控的语音，特别是中英双语的语音，依然比较麻烦</strong>。</p><p>这也是我们将这个项目开源的初衷，希望能帮助有需求的开发者与内容创作者，并不断扩大高质量 TTS 的应用范围。<strong>目前该项目还处于初期阶段，期待大家在</strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnetease-youdao%2FEmotiVoice" rel="nofollow" target="_blank"><strong>开源网站</strong></a><strong>给予我们更多反馈</strong>，我们非常希望听到大家的使用体验与建议💪，<strong>欢迎各位扫码进群交流～</strong></p><p style="text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-95a884f5c1625d1bcc2e8d42937f33d0cb9.jpg" referrerpolicy="no-referrer"></p><p style="text-align:center"><strong>若二维码失效，可扫描下方二维码，添加我们工作人员的企业微信申请进群~</strong></p><p style="text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-c7306442e032ed93adbdf1a5fecf938d6b4.jpg" referrerpolicy="no-referrer"></p><p>借此机会，我们也邀请您了解和探索有道的更多酷炫 AI 技术👇</p><ul><li>您可以尝试我们的<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fai.youdao.com%2Fpersonalized-voice.s" rel="nofollow" target="_blank"><strong>声音定制和声音复刻功能</strong></a>（点击蓝字即可试用）。从用户录制到试听整个过程只需 5 分钟，即可完成个性化的声音定制。</li><li>您也可以和**<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhiecho.youdao.com%2F%23%2Fweb" rel="nofollow" target="_blank">Hi Echo 虚拟人口语私教</a>**（点击蓝字即可跳转）聊一聊。通过有道的「子曰」教育大模型、语音和虚拟人技术，Echo 可以陪你轻松练习地道的英语口语。每天练习 10 分钟，口语水平快速提高哦。</li><li>您还可以微信搜索**「有道智云体验中心」小程序**。在这里，可以访问我们已经对开发者通过 API 等形式开放的文本和图像翻译、文字和各类图片识别、作文批改等各类 AI 技术。</li></ul><p><strong>关于有道智云</strong></p><p>有道智云 AI 开放平台，是网易有道旗下一站式人工智能服务提供商，为开发者、企业和政府机构等提供自然语言翻译、文字识别、OCR、语音识别等服务以及行业解决方案，致力于提供安全、可靠和高效的云服务。</p><p>联系电话：010-8255-8901；商务合作：AIcloud_Business@corp.youdao.com.</p><p>想了解更多关于有道人工智能的内容，可访问「有道智云」官网👉<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fai.youdao.com%2F" rel="nofollow" target="_blank"><strong>https://ai.youdao.com</strong></a>.</p></div>
                                    ]]>
            </description>
            <pubDate>Sat, 11 Nov 2023 10:32:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/youdaotech/blog/10142807</guid>
            <link>https://my.oschina.net/youdaotech/blog/10142807</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[完蛋！我被 Out of Memory 包围了！]]>
            </title>
            <description>
                <![CDATA[<div class="content"><ul><li><p>是极致魅惑、洒脱自由的<code>Java heap space</code>？</p></li><li><p>是知性柔情、温婉大气的<code>GC overhead limit exceeded</code>？</p></li><li><p>是纯真无邪、活泼可爱的<code>Metaspace</code>？</p></li><li><p>如果以上不是你的菜，那还有……</p></li><li><p>刁蛮任性，无迹可寻的<code>CodeCache</code>！</p></li><li><p>性感火辣、心思细腻的<code>Direct Memory</code></p></li><li><p>高贵冷艳，独爱你一人的<code>OOM Killer</code>！</p></li><li><p>总有一款，能让你钟情！BUG 选择权，现在交由你手！</p></li></ul><p><img alt="image.png" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-11-02-10-57XocqTnPFlxTzDLX.png" referrerpolicy="no-referrer"></p><span id="OSC_h1_1"></span><h1>Java heap space</h1><p>这是最常见的一个 OOM 问题了，谁还没经历过一个 Heap OOM 呢？</p><p>当堆内存被塞满之后，一边 GC 无法及时回收，一边又在继续创建新对象，Allocator 无法分配新的内存之后，就会送一个 OOM 的错误：</p><pre><code>java.lang.OutOfMemoryError: Java heap space

</code></pre><p>分析解决起来无非是那几步：</p><ol><li><p>dump 堆内存</p></li><li><p>通过 MAT、YourKit、JProfiler 、IDEA Profiler 等一系列工具分析 dump 文件</p></li><li><p>找到占用内存最多、最大的对象，看看是哪个小可爱干的</p></li><li><p>分析代码，尝试优化代码、减少对象创建</p></li><li><p>增加 JVM 堆内存、限制请求数、线程数、增加节点数量等</p></li></ol><span id="OSC_h3_2"></span><h3>常见类库使用误区</h3><p>尤其是一些工具库，尽可能的避免每次新建对象，从而节省内存提升性能。</p><p>大多数主流的类库，入口类都保证了单例线程安全，全局维护一份即可</p><p>举一些常见的错误使用例子：</p><span id="OSC_h4_3"></span><h4>Apache HttpClient</h4><p>CloseableHttpClient ，这玩意相当于一个「浏览器进程」了，背后有连接池连接复用，一堆机制的辅助类，如果每次都 new 一个，不仅速度慢，而且浪费了大量资源。</p><p>比较正常的做法是，全局维护一个（或者根据业务场景分组，每组一个）实例，服务启动时创建，服务关闭时销毁：</p><pre><code>CloseableHttpClient httpClient = HttpClients.custom()
                .setMaxConnPerRoute(maxConnPerRoute)
                .setMaxConnTotal(maxConnTotal)
                /// ...
                                 .build();

</code></pre><span id="OSC_h4_4"></span><h4>Gson</h4><p>毕竟是 Google 的项目，入口类自然也是实现了线程安全，全局维护一份 Gson 实例即可</p><span id="OSC_h4_5"></span><h4>Jackson</h4><p>Jackson 作为 Spring MVC 默认的 JSON 处理库，功能强大、用户众多，xml/json/yaml/properties/csv 各种主流格式都支持，单例线程安全自然也是 ok 的，全局维护一份 ObjectMapper 即可。</p><span id="OSC_h1_6"></span><h1>GC overhead limit exceeded</h1><p>这个错误比较有意思，上面的 Java heap space 是内存彻底满了之后，还在持续的创建新对象，此时服务会彻底假死，无法处理新的请求。</p><p>而这个错误，只是表示 GC 开销过大，Collector 花了大量的时间回收内存，但释放的堆内存却很小，并不代表服务死了</p><p>此时程序处于一种很微妙的状态：堆内存满了（或者达到回收阈值），不停的触发 GC 回收，但大多数对象都是可达的无法回收，同时 Mutator 还在低频率的创建新对象。</p><p>出现这个错误，一般都是流量较低的场景，有太多常驻的可达对象无法回收，但是吧，GC 后空闲的内存还可以满足服务的基本使用</p><p>不过此时，已经在频繁的老年代 GC 了，老年代又大对象又多、在现有的回收算法下，GC 效率非常低并切资源占用巨大，甚至会出现把 CPU 打满的情况。</p><p>出现这个错误的时候，从监控角度看起来可能是这个样子：</p><ol><li><p>请求量可能并不大</p></li><li><p>不停 GC，并切暂停时间很长</p></li><li><p>时不时的还有新的请求，但响应时间很高</p></li><li><p>CPU 利用率很高</p></li></ol><p>毕竟还是堆内存的问题，排查思路和上面的<code>Java heap space</code>没什么区别。</p><span id="OSC_h1_7"></span><h1>Metaspace/PermGen</h1><p>Metaspace 区域里，最主要的就是 Class 的元数据了，ClassLoader 加在的数据，都会存储在这里。</p><p>MetaSpace 初始值很小，默认是没有上限的。当利用率超过 40%（默认值 MinMetaspaceFreeRatio）会进行扩容，每次扩容一点点，扩容也不会直接 FullGC。</p><p>比较推荐的做法，是不给初始值，但限制最大值：</p><pre><code>-XX:MaxMetaspaceSize=

</code></pre><p>不过还是得小心，这玩意满了后果很严重，轻则 Full GC，重则 OOM：</p><pre><code>java.lang.OutOfMemoryError: Metaspace

</code></pre><p>排查 MetaSpace 的问题，主要思路还是追踪 Class Load 数据，比较主流的做法是：</p><ol><li><p>通过 Arthas 之类的工具，查看 ClassLoader、loadClassess 的数据，分析数量较多的 ClassLoader 或者 Class</p></li><li><p>打印每个 class 的加载日志：<code>-XX:+TraceClassLoading -XX:+TraceClassUnloading</code></p></li></ol><p>下面介绍几个常见的，可能导致 MetaSpace 增长的场景：</p><span id="OSC_h3_8"></span><h3>反射使用不当</h3><p>JAVA 里的反射，性能是非常低的，以反射的对象必须得缓存起来。尤其是这个<code>Method</code>对象，如果在并发的场景下，每次都获取新的 Method，然后 invoke 的话，用不了多久 MetaSpace 就给你打爆！</p><p>简单的说，并发场景下，Method.invoke 会重复的动态创建 class，从而导致 MetaSpace 区域增长，具体分析可以参考笨神的文章《<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fheapdump.cn%2Farticle%2F54786" rel="nofollow" target="_blank">从一起 GC 血案谈到反射原理</a>》。</p><p>用反射时，尽可能的用成熟的工具类，Spring 的、Apache 的都可以。它们都内置了 reflection 相关对象的缓存，功能又全性能又好，足以解决日常的使用需求。</p><span id="OSC_h3_9"></span><h3>一些 Agent 的 bug</h3><p>一些 Java Agent，静态的和运行时注入的都算。基于 Instrumentation 这套 API 做了各种增强，一会 load 一会 redefine 一会 remove 的，如果不小心出现 BUG，也很容易生成大量动态的 class，从而导致 metaspace 打满。</p><span id="OSC_h3_10"></span><h3>动态代理问题</h3><p>像 Spring 的 AOP ，也是基于动态代理实现的，不管是 CgLib 还是 JDK Proxy，不管是 ASM 还是 ByteBuddy。最终的结果都逃不开动态创建、加载 Class，有这两个操作，那 Metaspace 必定受影响。</p><p>Spring 的 Bean 默认是<code>singleton</code>的，如果配置为<code>prototype</code>，那么每次 getBean 就会创建新的代理对象，重新生成动态的 class、重新 define，MetaSpace 自然越来越大。</p><span id="OSC_h1_11"></span><h1>Code Cache</h1><p>Code Cache 区域，存储的是 JIT 编译后的热点代码缓存（注意，编译过程中使用的内存不属于 Code cache），也属于 non heap 。</p><p>如果 Code cache 满了，你可能会看到这么一条日志：</p><pre><code>Server VM warning: CodeCache is full. Compiler has been disabled.

</code></pre><p>此时 JVM 会禁用 JIT 编译，你的服务也会开始变慢。</p><p>Code Cache 的上限默认比较低，一般是 240MB/128MB，不同平台可能有所区别。</p><p>可以通过参数来调整 Code Cache 的上限：</p><pre><code>-XX:ReservedCodeCacheSize=

</code></pre><p>只要尽量避免过大的 Class、Method ，一般也不太会出现这个区域被打满的问题，默认的 240MB/128MB 也足够了</p><span id="OSC_h1_12"></span><h1>Direct Memory</h1><p>Direct Memory 区域，一般称之为直接内存，很多涉及到，磁盘 I/O ，Socket I/O 的场景，为了「Zero Copy」提升性能都会使用 Direct Memory。</p><p>就比如 Netty ，它真的是把 Direct Memory 玩出了花（有空写一篇 Netty 内存管理分析）……</p><p>使用 Direct Memory 时，相当于直接绕过 JVM 内存管理，调用 malloc() 函数，体验手动管理内存的乐趣～</p><p>不过吧，这玩意使用比较危险，一般都配合 Unsafe 操作，一个不小心地址读写的地址错误，就能得到一个 JVM 给你的惊喜：</p><pre><code>#
# A fatal error has been detected by the Java Runtime Environment:
#
#  EXCEPTION_ACCESS_VIOLATION (0xc0000005) at pc=0x00007ffdbd5d19b4, pid=1208, tid=0x0000000000002ee0
#
# JRE version: Java(TM) SE Runtime Environment (8.0_301-b09) (build 1.8.0_301-b09)
# Java VM: Java HotSpot(TM) 64-Bit Server VM (25.301-b09 mixed mode windows-amd64 compressed oops)  
# Problematic frame:
# C  [msvcr100.dll+0x119b4]
# 
# No core dump will be written. Minidumps are not enabled by default on client versions of Windows
#
# If you would like to submit a bug report, please visit:
#   http://bugreport.java.com/bugreport/crash.jsp
# The crash happened outside the Java Virtual Machine in native code.
# See problematic frame for where to report the bug.
#

</code></pre><p><img alt="image.png" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-11-02-10-369sm6Shj7lkLZQao.png" referrerpolicy="no-referrer"></p><p>更多的解释，可以参考我这篇《<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsegmentfault.com%2Fa%2F1190000020228048" rel="nofollow" target="_blank">Java 中的 Heap Buffer 与 Direct Buffer</a>》</p><p>这个 Direct Memory 区域，默认是无上限的，但为了防止被 OS Kill，还是会限制一下，给个 256MB 或者更小的值，防止内存无限增长：</p><pre><code>-XX:MaxDirectMemorySize=

</code></pre><p>如果 Direct Memory 达到 MaxDirectMemorySize 并且无法释放时，就会得到一个 OOM 错误：</p><pre><code>java.lang.OutOfMemoryError: Direct buffer memory

</code></pre><span id="OSC_h1_13"></span><h1>Linux OOM Killer</h1><p>跳出 JVM 内存管理之后，当 OS 内存耗尽时，Linux 会选择内存占用最多，优先级最低或者最不重要的进程杀死。</p><p>一般在容器里，主要的进程就是肯定是我们的 JVM ，一旦内存满，第一个杀的就是它，而且还是 kill -TERM (-9) 信号，打你一个猝不及防。</p><p>如果 JVM 内存参数配置合理，远低于容器内存限制，还是出现了 OOM Killer 的话，那么恭喜你，大概率是有什么 Native 内存泄漏。</p><p>这部分内存，JVM 它还管不了。</p><p>除了 JVM 内部的 Native 泄漏 BUG 这种小概率事件外，大概率是你引用的第三方库导致的。</p><p>这类问题排查起来非常麻烦，毕竟在 JVM 之外，只能靠一些原生的工具去分析。</p><p>而且吧，这种动不动就要 root 权限的工具，可是得领导审批申请权限的……排查成本真的很高</p><p><img alt="image.png" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-11-02-10-39aqlx39acVlRQ29Qrm.png" referrerpolicy="no-referrer"></p><p>排查 Native 内存的基本的思路是：</p><ol><li><p>pmap 查看内存地址映射，定位可疑内存块、分析内存块数据</p></li><li><p>strace 手动追踪进程系统调用，分析内存分配的系统调用链路</p></li><li><p>更换 jemalloc/tcmalloc 之类的内存分配器（或者 async-profiler 有个支持 native 分析的分支）追踪 malloc 的调用链路</p></li></ol><p>目前最常见的 Native 内存泄漏场景，是 JDK 的 Inflater/Deflater 这俩卧龙凤雏，功能是提供 GZIP 的压缩、解压，在默认 glibc 的 malloc 实现下，很容易出现「内存泄漏」。如果出现 Native 内存泄漏，可以先看看应用里有没有 GZIP 相关操作，说不定有惊喜。</p><hr><p>好了，各类风格的 OOM 都感受完了，到底哪一个更能打动你呢？</p><blockquote><p>作者：京东保险，蒋信</p><p>来源：京东云开发者社区，转载请注明来源</p></blockquote></div>
                                    ]]>
            </description>
            <pubDate>Sat, 11 Nov 2023 10:30:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/4090830/blog/10141303</guid>
            <link>https://my.oschina.net/u/4090830/blog/10141303</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[【直播回顾】开源创业：要怎么推广项目，去哪里找钱？]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>11 月 2 日，OSCHINA 直播——【开源漫谈】第 5 期，邀请了中国第一个人站长高春辉、禅道软件公司创始人王春生、津津乐道创始人朱峰，聊了聊开源创业相关的话题，涉及开源协议、开源漏洞、项目捐赠、创业赛道等方向。</p><p>其中，关于开源协议的选择、开源项目漏洞责任归属，以及是否要将开源项目捐赠给基金会，王春生已经在《<a href="https://my.oschina.net/oscpyaqxylk/blog/10114031">关于开源软件的七大错误认知</a>》一文做了详细解答。另外《<a href="https://my.oschina.net/u/6852546/blog/10118120">开源软件有漏洞，作者需要负责吗？是的！</a>》《<a href="https://my.oschina.net/oscpyaqxylk/blog/10140275">项目捐给了开源基金会，作者手上还剩了什么？</a>》等文章也对相关问题进行了详细分析，本文不再赘述，而是主要将关注点放在如何推广开源项目，怎么选择创业赛道等等话题上。</p><p>想了解更多精彩内容，可以微信扫描下方二维码，观看完整直播：</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-28f36ff6e308f95d2736438e921e43f2dca.png" referrerpolicy="no-referrer"></p><span id="OSC_h3_1"></span><h3><span style="color:#3498db"><strong>01 自己的开源项目，能不能拿来创业？</strong></span></h3><p><strong>朱峰：</strong>怎么判断自己的开源项目能不能拿来创业？</p><p><strong>王春生：</strong>首先，软件一定要有价值，能够帮助用户解决问题，这是一个大前提，不管是什么方向的创业，这是基本的。</p><p>二是要考虑软件面向的用户群体。如果你的开源软件纯粹是面向开发者，那么将很难实现商业上的转化。如果是面向企业内部的，这个方向还是有大作为的。</p><p>现在也一些很好的方向，比如工业化这块，有技术的可以朝着这个方向发展，这也是属于国家「卡脖子」的技术领域，是能够赚到钱的。我一个朋友做了一个仿真相关领域的开源平台，前段时间拿到了投资。未来这些方向还有很大机会。</p><p>不是说 to c 属性不能做，但你要拿来创业，最好不要去碰 to c 属性的开源软件。因为 to c 属性的产品，已经有互联网大厂在跟进，他们的打法是个人完全没办法复制的。</p><p><strong>朱峰：</strong>老高你认为如何？当初做 ECShop（国内第一个开源的电商建站软件） 的时候，国内还没有这么健全的开源生态。是怎么想到要将 ECShop 开源的？</p><p><strong>高春辉：</strong>开源确实是能够吸引很多用户。但项目和公司能否持续，和你开源不开源关系并不大，跟商业模式本身是否健康有很大关系。当时最有意思的一个事儿，是做网站模板的，也就是做外围工作的能赚钱，但我们做软件的人并不赚钱。</p><p>国内国外对开源的认可度是不一样的。在国内，用户很大可能就想省钱，你开源了，我就用你的开源版本，宁可自己改一改，也不愿意花钱。但国外对开源软件付费认可度会更高。同样一个软件，国外有人能成立公司，能成功，在国内可能不会那么顺利。</p><p>我们当时还有一个大问题，就是我们的软件，自始至终都是自己人在做开发。开源只是开放的源代码，真正愿意来贡献代码的人非常少。</p><p><strong>朱峰：</strong>如果我没有记错的话，你做 ECShop 的时候开源生态还没有现在这么好。</p><p><strong>高春辉：</strong>那时候没有。但我觉得，就是国内有了好的开源生态，可能情况也不会好很多。软件复杂度上来以后，真的愿意花时间把软件看懂，并在上面贡献的人也很少。现在 GitHub 比较火的项目，贡献多的大多是全职开发者，个人贡献者能有几个？大家都很忙，工作 996 ，回家了只想睡觉。在国内做开源还是要审慎。</p><span id="OSC_h3_2"></span><h3><span style="color:#3498db"><strong>02 免费用户提需求，心态是怎样吗？</strong></span></h3><p><strong>朱峰：</strong>很多时候免费用户会提出一些功能改进、BUG 修复、技术支持等要求，你们在遇到这些问题的时候，心态是怎么样的？我记得当年老高搞 ECShop，也有很多用户提各种各样的需求，然后还催着赶紧搞定。作为开发者，在这个时候心里会不会有一点点不舒服？</p><p><strong>高春辉：</strong>我觉得我的心态分成两个阶段，第一个阶段是很开心，因为有人给你提需求。但后面会发现，一旦你的资源不够，他提需求还用道德绑架的口吻来跟你聊，你就会觉得不爽了。这个东西我是免费的，你凭什么逼着我去做这个功能？</p><p>现在有些开源的维护者写的文章非常灰心丧气。原因很多，一是自己花了很多精力时间去维护这个软件，二是没有报酬，三是有些大公司用了他的东西，也没有什么支持。</p><p><strong>朱峰：</strong>春生怎么看这件事情？今天整个开源生态的情况跟当年老高那会儿又不太一样，你看到免费用户的这些诉求是怎么样的？</p><p><strong>王春生：</strong>首先，有人用肯定是好事情。我经常办一些线下商务活动，很多用户都会跟我说，他们用禅道很久了，一直也没付费，其实挺不好意思的。但我说，这就很好，你们用我们的软件，就是对我们最大的支持。他可能在当时不会买，但是员工会流动，会带着禅道到新公司，产生新的机会。所以从这一点来讲，有用户来提需求，提 bug，然后甚至有可能 diss 你等等，我觉得这都是好事情，就说明软件是真的有人在用，有人在乎你。如果你发布一个产品，都没人反馈，那就是另外一个凄惨的故事了。</p><p>第二，要区分对待用户需求，同时也要有引导。对同一件事，大家的价值认知其实是不太一样的。站在提需求或者提 bug 的用户角度，我已经对你的产品付出了很多心血，花了很大的力气来跟你讨论，还帮你提建议，提改进，你们应该立即去响应，处理这些问题。</p><p>站在开发者角度，正如老高所说的，资源确实是有限的，没办法响应所有需求。我觉得还是要保持平常心，因为不可能让每人都完全赞同。</p><p>面对用户的需求和反馈，还是需要甄别。不能被用户的反馈影响你产品的发展方向，得要有自己的主线。有的需求非常合理，逻辑也非常自洽，但只是代表的是一小部分的场景，放在通用产品角度来看，就不见得合适。如果梳理出来的需求，是绝大多数用户都有可能能用到的，那么就要第一时间去响应，然尽可能快地处理。此外，对于一些通用性可能并没有那么强的功能需求，我们也可以通过插件的方式来解决。</p><span id="OSC_h3_3"></span><h3><span style="color:#3498db"><strong>03 做产品变成了二次开发的外包公司，你们怎么看？</strong></span></h3><p><strong>朱峰：</strong>谈到二次开发也是一个挺有意思的话题，很多的做产品的公司最后都变成了做二次开发的外包公司。你怎么看待这件事？</p><p><strong>王春生：</strong>我觉得要抵住诱惑，尤其是刚开始的时候。</p><p><strong>朱峰：</strong>但是这个诱惑往往很难抵得住，当你没有钱的时候，人家拍给你几十万让把这事儿给干了，你说你能不干吗？</p><p><strong>王春生：</strong>我们也遇到过，这会让我们不停怀疑自己，走的方向是不是正确的，再重新坚定，然后再重新怀疑，再重新坚定，再重新怀疑，一直处于这样的过程中。</p><p>这么些年，不断地会有客户提出定制需求，订单金额少则十几万、几十万，多的可能过百万。做还是不做，确实是一个很大的选择。我的建议是，定制开发可以做，但是不要影响产品发展的主线，不要被定制开发项目拉歪整个团队的方向。如果定制开发的项目庞大，我们一般都不接；要求驻场我们也不接。人力有限，大项目很可能把整个团队都给拖过去，挺要命的。</p><span id="OSC_h3_4"></span><h3><span style="color:#3498db"><strong>04 怎么推广自己的开源软件？</strong></span></h3><p><strong>朱峰：</strong>怎么让你的开源项目有更多的人用，有更多人能参与其中？</p><p><strong>王春生：</strong>一是 release often，就是尽可能早、尽可能快地发布。开源软件天然就有这种属性，通过快速、持续地产品交付，就能自然而然地获得用户关注。新产品总是会有早期的种子用户，会很喜欢去尝试一些新的东西。禅道早期也是这么起来的。</p><p>比如一个以 GitHub 为内容来源的公众号，为了流量，它会定期地去挖掘一些比较好的项目并对外宣传，这就相当于有人去帮你做这个事情。</p><p>除了在产品方面尽可能早地发布，还要去写文章进行宣传，当时我们也在开源中国做了很多推广，对我们有很大的帮助。同时也在其他地方比如一些新闻网站做 SEO 优化，交换链接，参与活动，赞助等等，一些常规的运营手段都得用起来。</p><p>所以说，在早期的时候，开源软件作者在埋头写产品之外，还是要花一定的心思在运营上。有人认为产品做出来之后，用户自然而然就来了，这不太现实。</p><p><strong>高春辉：</strong>做开源软件跟做网站，没有本质的区别，它就是一个产品。产品推广，无非是看它的用途和你的受众。你的受众是做电商的，那你就要找这个圈子去曝光你的新功能，特性，用户会很好奇地去使用。</p><p>当年的做电商有两个思路：是跟着淘宝混还是自己做个站？</p><p>为了流量，大家都会选择淘宝。只有大公司才有可能会建自己的电商站，但维护很重。我们当时接过摩托罗拉项目，建个站然后通过广告引流，促成销售，但最后摩托罗拉还是选择了淘宝、京东渠道。因为对他们来说，不管是淘宝还是个站，最后只要能够实现销售额就可以。</p><p>至少在那个时候，有个站在自己的控制之下，用户是有兴趣去尝试的。国内用户都喜欢把数据放在自己手里，喜欢私有化部署，如果相关功能做得好，其实是很有吸引力的。</p><p><strong>朱峰：</strong>去建立个人影响力，建立自己的个人品牌，我觉得是合适的。如果你自己是一个自带流量的 KOL，去推自己的项目往往会事半功倍。但如果你是一个闷头写代码的素人，这件事情可能就比较难。</p><p>现在流量太贵了，买流量投广告去推广开源项目，显然不现实。所以你怎么把信任你的人留存在自己的私域里，把自己就变成了一个 KOL，这个事情才重要。</p><p>刚才春生也提到，他早先用三分之一时间开发，三分之一时间写文档，三分之一时间写文章。为什么他要用三分之一时间写文章？他就是要建立自己的影响力，因为只有个人私域自带的流量才真正是你的流量，才能够为你当前的项目，甚至说以后的项目去做转化。</p><span id="OSC_h3_5"></span><h3><span style="color:#3498db"><strong>05 软件开源，培训收费，这个思路可行吗？</strong></span></h3><p><strong>朱峰：</strong>有直播间网友提问，软件开源，培训收费，这个思路可行吗？</p><p><strong>高春辉： </strong>那成本会很高的。除非你是在线培训，或者是录制好的课程，但录制好的课程一旦泄露出去，也很麻烦。</p><p><strong>王春生：</strong>你让我提建议的话，那就是不要想着通过技术支持或者培训去收费。</p><p><strong>高春辉：</strong>对，还得通过产品本身挣钱。</p><p><strong>王春生：</strong>这块儿我想多说几句。我觉得很多开源开发者对技术支持这件事情理解得不太正确。我所接触的很多些开源软件的微信群、QQ 群，全是网友自己在互相抱团取暖，官方作者基本上不出来回答问题。</p><p>作者会认为，软件是免费的，有 FAQ（Frequently Asked Questions，常见问题解答），有文档，甚至可能还录了视频，该做的我都做了，你要想解决问题，就应该自己动手。我接触过很多的开源软件作者，基本上都是这么一种心态。如果开源作者只是为了自己的兴趣而开发软件，这么做是完全没问题的。</p><p>但如果要做商业化，还是要把这些用户当做潜在客户去对待，认真地、扎扎实实地给人家提供技术支持，让他把产品用起来，让他感知到你和团队是在认真做产品，做事情。这样才有可能跟用户之间建立起信任，才有可能去做下一步商业上的转化。</p><p>你想，我们进店吃饭，店员爱理不理地说，筷子在这儿，茶水在那儿，甚至锅灶在那儿，你可以自己炒，你肯定就不开心了。虽然目前我没有付费，你怎么知道我将来就不会付费？</p><p>所以我们的策略就是，对开源版本投入大量的人力和资源，甚至会要求第一时间响应开源版本的免费用户。对开源用户做好支持了，才有源源不断的用户，才会产生收费版本的需求。</p><span id="OSC_h3_6"></span><h3><span style="color:#3498db"><strong>06 禅道挣到钱了吗？</strong></span></h3><p><strong>朱峰：</strong>做开源项目到底挣不挣钱？禅道挣钱了吗？盈利方面有没有向好的趋势？</p><p><strong>王春生：</strong>早期的话，真的是在用爱发电，苦哈哈地做开源。从 2012 年下半年开始，现金流基本上已经盈亏平衡了。</p><p>2011 年的时候，我们是十多人的一个小团队，已经有一定的支出了，确实遇到了资金不足的问题。老高二话不说就打了第一笔钱，是我的天使投资人。 到了年底，其他几位股东也陆陆续续凑了一笔钱，准备好了 2012 年的运营费用，决定开始招聘销售、技术支持等等岗位上的人才。当时做了打算，成不成就看这一把了。如果不行了，就再去打工。</p><p>在 2012 年的上半年，我们就推出了第一个收费版本，到了下半年，现金流基本上就实现了盈亏平衡。</p><p><strong>朱峰：</strong>老高当年的 ECShop 是怎么赚钱的？</p><p><strong>高春辉：</strong>软件本身不赚钱，靠卖了赚钱。那时候做 ECShop 是 2006 年左右，电商在国内还不被看好。没有钱怎么办？那时候肯定去融资。结果跟投资人聊了大概十分钟，人家就说，十年内中国电商都不会有什么大的发展。这就把我说泄气了，那就卖了吧。</p><p>那时候淘宝、京东在往上走了，但大家都不知道它能做多大。现在你回头看， ECShop 模式在国内确实会有天花板。因为国内都是走平台策略，流量给平台拉走了，单店的模式基本上不会有太多用户。反而做淘宝的生态服务商会有更大的发展空间。但它的天花板也很低，每年能赚钱但有限，想上市基本没戏。</p><span id="OSC_h3_7"></span><h3><span style="color:#3498db"><strong>07 创业去哪里找钱？</strong></span></h3><p><strong>朱峰：</strong>大家都知道这几年，创业行情不是特别好，想找一些投资人更是尤为困难。请两位老兵跟大家聊聊怎么找钱的事儿。</p><p><strong>高春辉：</strong>我当时投资禅道的钱，也是到处凑出来的。春生要再多，我也给不起了。钱当时凑得也比较难，但是对我来说，就算都给亏光了，公司关门了，我也还好。当时我觉得，春生只要能够认真做，不走错，他就能赚钱。</p><p>至于现在，我觉得就别想着去融资这个事，先踏踏实把这个东西先做出来，哪怕利用这业余时间做，把它跑起来，你的压力就小很多。</p><p>千万不要以为，你拿了钱之后压力会小，你拿了钱压力会变大。因为现在的投资几乎就都是有连带担保的。但凡是你求 vc 的，连带担保是跑不了的。 我前几天看到一个广东的创业者说，医保攒的钱都被投资人冻结了，理论上这是救命钱。也不多，可能就几万块钱，但是连医保卡的钱都不放过，你想这个钱好拿吗？</p><p><strong>朱峰：</strong>春生在疫情期间拿到了投资，这一轮融资估值还不低。那在这个过程当中，你是怎么去选择这些投资人？</p><p><strong>王春生：</strong>也是机缘巧合，朋友介绍促成的。我们的投资人是高成资本，是中国专注于企服赛道的投资机构。彼此之间都非常认同：高成资本对我们的经营方式比较认同，我们对高成资本的投资理念也非常认同。高成资本创始合伙人洪婧是对企服赛道非常了解，而且投的都是长期项目。</p><p>到今天来看，其实大家都不太看好企服赛道这个大方向了。因为受中美关系、经济环境等各方面的影响，企服赛道正处于低谷期。风险投资商更关注硬科技、人工智能这些方向，所以现在想拿钱不太容易。再一个，美元基金基本上都撤了，人民币基金投资比较谨慎。</p><p>如果你想创业的话，我觉得这时候不是一个好时机。</p><p><strong>高春辉：</strong>我个人觉得这个时候适合积蓄力量。你可以做事儿，不要去融资。</p><span id="OSC_h3_8"></span><h3><span style="color:#3498db"><strong>08 一个有 4000 多 star 的开源聊天软件，怎么往下走？</strong></span></h3><p><strong>朱峰：</strong>直播间有网友问题，他有一个开源项目，是一个聊天软件，有 4000 多，的 star，要怎么往下走，能给点儿建议吗？</p><p><strong>王春生：</strong>我觉得还是要收费。通过开源版和收费版，把软件功能区分开。 在国内，经常会有一些说法：中国企业不乐意为软件付费。我认为这个观点是错误的。我所接触的客户，再小的客户，都非常乐意为软件付费。不过有个前提，就是这个软件需要具备很高的性价比。如果人家花个几千块或者两三万的费用就能解决一个问题，哪怕企业规模不是很大，还是会乐意掏钱。现在很多企服赛道软件不太好卖。为什么？因为动不动一个人一年的授权就要好几千，这个价格，很多消费者真的接受不了。</p><p>一个聊天软件有 4000 多，的 star，首先就有了比较好的基础，可以尝试去推收费的版本。</p><p><strong>朱峰：</strong>那如果他卖付费版本了，但是收入不高，那你怎么办？</p><p><strong>高春辉：</strong>他得先去想，那些给他打 4000 多个 star 的人的想法是啥。人家都有动手能力，就不需要买付费版。你的软件越专业，用户付费的可能性才越大。你的软件简单安装就能用，愿意付费的人可能就会很少。</p><p><strong>王春生：</strong>我们也有一个聊天的软件，叫喧喧，最开始也是开源的，后来没用开源方式去做。一年下来，有零零星星的收入，没几个钱，也就能把我们开发团队的工资赚出来。我觉得这可能是跟方向有关系，因为现在国内企业微信、钉钉、飞书太强了。</p><p>但我觉得也不要灰心，还是要找准自己的定位，就是跟其他软件的不同点是什么，不要把东西做得跟别人一样。飞书有什么功能，钉钉有什么功能，我们也要有这些功能，这是不行的，一定要有自己的差异点，把自己的这个定位搞清楚，面向的是什么样的用户场景。比如转转打入军工行业，那它就做最安全的私有部署软件。</p><p>这纯粹是当参考哈，因为我们也没有完全做出来，也还在摸索方向。</p><p>第二，从经营上来讲，经营企业，确实会有很多的事情，需要你耐心去打磨。比如说定价策略。很多开源软件作者特别具有程序员特质，定价非常直爽，100 块钱或者 1000 块钱就能买终身版，或者定个 1000 块的早鸟价，后期还会再涨价。</p><p>就这种定价方式而言，太过于草率。定价是有技巧的。比如在超市，有个东西价格比较贵，但它会衬托另一个价格更低的产品很实惠，这是一种策略；还有一种就是打包策略，在麦当劳、肯德基，花了 20 块钱就买了一个汉堡，再多花两三块钱就能得到一包薯条或者一杯可乐，消费者就会觉得很实惠。</p><p>有观点认为，定价就相当于定生死。定价，就决定了产品在市场上面向的用户群体、销售模式、商业模式、漏斗转化模式。在企服赛道，有的产品卖得非常贵，一个人一年授权是几千块钱，甚至国外产品一个人一年的授权能卖到 2 万块钱。但人家可以卖，我们就卖不了，而且人家卖的体量要比我们大太多了。所以还是要找准自己的市场。</p><span id="OSC_h3_9"></span><h3><strong>09 出现负面舆情，怎么公关？</strong></h3><p><strong>朱峰：</strong>出现负面舆情，你怎么去公关？这对于开源软件还挺重要的。</p><p><strong>王春生：</strong>早些年发布禅道的时候，确实有很多人说，市面上已经有很多开源的缺陷管理工具，bug 管理工具，为什么还要重新造轮子。那时候是要花一部分的精力来回应这些质疑和吐槽的声音。</p><p>很多朋友在劝我，说没必要去理会这些。但我说一定要正面去回应，站在我的角度给大家解释，可能产品有不尽人意的地方，但也不像你说的那么不堪。</p><p>正面回应，最重要的不是让这个人去认同你的观点，而是要给「旁观者」信心。站在旁观者角度，软件作者不正面回应的话，就会觉得产品真的有问题，肯定会去对产品失去信心，有句话叫三言成虎嘛！</p><p>禅道是我的饭碗，是我们整个团队衣食住行的来源，所以我一定会正面回应，去影响旁观的用户，这还是蛮关键的。</p><p><strong>高春辉：</strong>这让我想起来个事，严格地讲是被敲诈。 他说：「我知道你这个地方有漏洞，是你给我钱我帮你修复好，还是我把它卖给别人？」</p><p>最后我们认栽。还好就那个钱并不多，人家也不是为了指望你给他挣多少钱，我们也觉得，花钱把这个问题消灭在萌芽之中也没有错。毕竟代码可能有几万行，有时候真的没法面面俱到，也很难一下就发现。能找上门愿意跟你谈的，都算是给你帮忙。要是被别有用心的人拿在手里，那可能给你的打击会更大。</p></div>
                                    ]]>
            </description>
            <pubDate>Sat, 11 Nov 2023 09:23:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/3859945/blog/10142795</guid>
            <link>https://my.oschina.net/u/3859945/blog/10142795</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[腾讯开源 hel-micro：工具链无关的微模块方案]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>腾讯宣布开源&nbsp;<span style="background-color:#ffffff; color:#353535">hel-micro，号称业内首个以 sdk 的方式支持模块联邦技术的方案，它脱离了工具链的枷锁，回归到 js 语言本身，接入快速、简单、灵活，极大的降低了模块联邦技术的接入门槛，让不同工具链间的联邦模块可以互认互通，提高了模块的流通</span><span style="background-color:#ffffff; color:#353535">。</span></p><p><span style="background-color:#ffffff; color:#353535"><img alt="" height="240" src="https://oscimg.oschina.net/oscnet/up-3760e632729b56bfe4d157f4b2fb5455b40.png" width="500" referrerpolicy="no-referrer"></span></p><p><span style="background-color:#ffffff; color:#353535">独创的双构建机制，让远程模块的开发体验等效于本地模块</span></p><p><span style="background-color:#ffffff; color:#353535"><img alt="" height="226" src="https://oscimg.oschina.net/oscnet/up-9ac5bb169c747eb678ef83848d529f6bf42.png" width="500" referrerpolicy="no-referrer"></span></p><p style="color:#353535; margin-left:0; margin-right:0; text-align:start"><span>运行时模块聚合让线上动态更新易如反掌，也可以按需定制不同场景的版本下发规则</span></p><p style="color:#353535; margin-left:0; margin-right:0; text-align:start"><img alt="" height="268" src="https://oscimg.oschina.net/oscnet/up-8427bafa096f9e1c1dc45202b6b1b66f0e0.gif" width="500" referrerpolicy="no-referrer"></p><p style="color:#353535; margin-left:0; margin-right:0; text-align:start"><span style="background-color:#ffffff; color:#353535">相比社区已有方案，hel-micro 优势如下：</span></p><p style="color:#353535; margin-left:0; margin-right:0; text-align:start"><img height="247" src="https://oscimg.oschina.net/oscnet/up-b8a0b5e7e04c4a14ecb8ac2fba8c20ea2f8.png" width="500" referrerpolicy="no-referrer"></p><p style="color:#353535; margin-left:0; margin-right:0; text-align:start"><span style="background-color:#ffffff; color:#353535">基于 sdk 的远程加载能力，可以搭配公共 cdn 部署远程模块（sdk 默认指向 unpkg），用户也可以轻松定制自己的模块管控平台，然后重置 sdk 的请求模块元数据接口即可。</span></p><p style="color:#353535; margin-left:0; margin-right:0; text-align:start"><img height="128" src="https://oscimg.oschina.net/oscnet/up-7c5943f713c18c5fe937d597ec0f074914c.png" width="500" referrerpolicy="no-referrer"></p><p style="color:#353535; margin-left:0; margin-right:0; text-align:start"><span style="background-color:#ffffff; color:#353535">再结合用户自己的 cd&amp;cd&nbsp;流水线，可完成模块从提交、发布、到运维的全生命周期管理的闭环</span></p><p style="color:#353535; margin-left:0; margin-right:0; text-align:start"><img height="211" src="https://oscimg.oschina.net/oscnet/up-358b8d82cf1ffc4ee0652faae21586b2efe.png" width="500" referrerpolicy="no-referrer"></p><p style="color:#353535; margin-left:0; margin-right:0; text-align:start"><span>进而可以搭建出一个类似如下架构&nbsp;helpack&nbsp;的模块管控平台</span></p><p style="color:#353535; margin-left:0; margin-right:0; text-align:start"><img height="290" src="https://oscimg.oschina.net/oscnet/up-fe1dd3acf6cd1c99f7dd5cc4fa183cd1a61.png" width="500" referrerpolicy="no-referrer"></p><h4 style="margin-left:0px; margin-right:0px; text-align:start"><strong>开源规划</strong></h4><p><img height="282" src="https://oscimg.oschina.net/oscnet/up-c12d7d3a6c5668b3a734ad321842ca7ef11.png" width="500" referrerpolicy="no-referrer"></p><p style="color:#353535; margin-left:0; margin-right:0; text-align:start"><span>项目团队表示规划未来将实现更多的上层框架远程加载适配器，例如</span></p><ul><li style="text-align:start"><span>远程&nbsp;web&nbsp;component&nbsp;组件</span></li><li style="text-align:start"><span>远程&nbsp;angular 组件</span></li><li style="text-align:start"><span>远程 vue 组件</span></li><li style="text-align:start"><span>远程 react 组件（已实现为 hel-micro-react，提供钩子函数加载远程 react 组件）</span></li><li style="text-align:start"><span>远程&nbsp;svelte&nbsp;组件&nbsp;等....</span></li></ul><p style="color:#353535; margin-left:0; margin-right:0; text-align:start"><span>同时后续很快很提供一个基于`hel-micro`&nbsp;+&nbsp;`react`&nbsp;+&nbsp;`pnpm`&nbsp;的微前端应用示范`helra`.</span></p><p style="color:#353535; margin-left:0; margin-right:0; text-align:start"><span>helra 将提供以下特性：</span></p><p style="color:#353535; margin-left:0; margin-right:0; text-align:start"><span>1&nbsp;子应用独立部署，独立发布，由一级路由命中访问</span></p><p style="color:#353535; margin-left:0; margin-right:0; text-align:start"><span>2&nbsp;共享基座上下文，可在一级路由下独立注册自己的子路由</span></p><p style="color:#353535; margin-left:0; margin-right:0; text-align:start"><span>3&nbsp;应用本地启动自带基座，发布后基座运行时自动移除</span></p><p style="color:#353535; margin-left:0; margin-right:0; text-align:start"><span>4&nbsp;应用间可相互共享组件，享受动态更新优势</span></p><p style="color:#353535; margin-left:0; margin-right:0; text-align:start"><span>5&nbsp;所有应用均可访问更底层的远程公告库，</span></p><p style="color:#353535; margin-left:0; margin-right:0; text-align:start"><span>6&nbsp;开发时应用间可以相互联调对方的代码</span></p><p style="color:#353535; margin-left:0; margin-right:0; text-align:start"><img height="241" src="https://oscimg.oschina.net/oscnet/up-190569b11b02b497276869cfd91321178e1.png" width="300" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Sat, 11 Nov 2023 09:22:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266277</guid>
            <link>https://www.oschina.net/news/266277</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[KubeSphere 社区双周报 | KubeSphere 3.4.1 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>KubeSphere 社区双周报主要整理展示新增的贡献者名单和证书、新增的讲师证书以及两周内提交过 commit 的贡献者，并对近期重要的 PR 进行解析，同时还包含了线上/线下活动和布道推广等一系列社区动态。</p><p>本次双周报涵盖时间为：2023.10.27-2023.11.09。</p><h2>贡献者名单</h2><p><img src="https://oscimg.oschina.net/oscnet/up-19dea7efe9006edc4fbe02ed14d7f6c2cf9.gif" alt="" referrerpolicy="no-referrer"></p><p><img src="https://oscimg.oschina.net/oscnet/up-561990cd09bca795835d53b08821ba25daf.png" alt="" referrerpolicy="no-referrer"></p><h2>新晋 KubeSphere Contributor</h2><p>两周内共有 8 位新晋 KubeSphere Contributor，感谢各位对 KubeSphere 社区的贡献！</p><table><thead><tr><th>GitHub ID</th><th>证书</th></tr></thead><tbody><tr><td>Ganbingkun</td><td><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpek3b.qingstor.com%2Fkubesphere-community%2Fimages%2Fcontributor-2023-Ganbingkun.png" target="_blank">下载证书</a></td></tr><tr><td>MisterMX</td><td><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpek3b.qingstor.com%2Fkubesphere-community%2Fimages%2Fcontributor-2023-MisterMX.png" target="_blank">下载证书</a></td></tr><tr><td>Shimada666</td><td><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpek3b.qingstor.com%2Fkubesphere-community%2Fimages%2Fcontributor-2023-Shimada666.png" target="_blank">下载证书</a></td></tr><tr><td>donniean</td><td><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpek3b.qingstor.com%2Fkubesphere-community%2Fimages%2Fcontributor-2023-donniean.png" target="_blank">下载证书</a></td></tr><tr><td>guerzon</td><td><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpek3b.qingstor.com%2Fkubesphere-community%2Fimages%2Fcontributor-2023-guerzon.png" target="_blank">下载证书</a></td></tr><tr><td>liuxu623</td><td><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpek3b.qingstor.com%2Fkubesphere-community%2Fimages%2Fcontributor-2023-liuxu623.png" target="_blank">下载证书</a></td></tr><tr><td>nyuxiao</td><td><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpek3b.qingstor.com%2Fkubesphere-community%2Fimages%2Fcontributor-2023-nyuxiao.png" target="_blank">下载证书</a></td></tr><tr><td>samt42</td><td><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpek3b.qingstor.com%2Fkubesphere-community%2Fimages%2Fcontributor-2023-samt42.png" target="_blank">下载证书</a></td></tr></tbody></table><h2>新晋 KubeSphere Talented Speaker</h2><p>在上周六（11.4）KubeSphere 社区联合 SOFAStack 社区及 KubeBlocks 社区共同组织了成都站 Meetup，在本次 Meetup 中共诞生了五位新的 KubeSphere Talented Speaker，他们在本次活动中贡献了精彩的演讲。</p><table><thead><tr><th>姓名</th><th>证书</th></tr></thead><tbody><tr><td>王勤龙</td><td><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpek3b.qingstor.com%2Fkubesphere-community%2Fimages%2Fspeaker-2023-wangqinlong.png" target="_blank">下载证书</a></td></tr><tr><td>魏泓舟</td><td><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpek3b.qingstor.com%2Fkubesphere-community%2Fimages%2Fspeaker-2023-weihongzhou.png" target="_blank">下载证书</a></td></tr><tr><td>胡子杰</td><td><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpek3b.qingstor.com%2Fkubesphere-community%2Fimages%2Fspeaker-2023-huzijie.png" target="_blank">下载证书</a></td></tr><tr><td>刘东明</td><td><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpek3b.qingstor.com%2Fkubesphere-community%2Fimages%2Fspeaker-2023-liudongming.png" target="_blank">下载证书</a></td></tr><tr><td>吴学强</td><td><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpek3b.qingstor.com%2Fkubesphere-community%2Fimages%2Fspeaker-2023-wuxueqiang.png" target="_blank">下载证书</a></td></tr></tbody></table><h2>近期更新</h2><h3>KubeSphere</h3><h4>1. KubeSphere 3.4.1 发布</h4><p>相关 release：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkubesphere%2Fkubesphere%2Freleases%2Ftag%2Fv3.4.1" target="_blank">https://github.com/kubesphere/kubesphere/releases/tag/v3.4.1</a></p><h3>Fluent Operator</h3><h4>1. FluentBit 升级到 2.1.10 版本</h4><p>相关 PR: <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ffluent%2Ffluent-operator%2Fpull%2F978" target="_blank">https://github.com/fluent/fluent-operator/pull/978</a></p><p>贡献者：wenchajun</p><h4>2. 为 Fluentd 添加存活及就绪探针</h4><p>相关 PR: <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ffluent%2Ffluent-operator%2Fpull%2F980" target="_blank">https://github.com/fluent/fluent-operator/pull/980</a></p><p>贡献者：cw-Guo</p><h4>3. 为 Fluentd 添加输入插件 monitor_agent</h4><p>相关 PR: <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ffluent%2Ffluent-operator%2Fpull%2F967" target="_blank">https://github.com/fluent/fluent-operator/pull/967</a></p><p>贡献者： joshuabaird</p><h4>4. 修改 helm chart，使其可以传递 Fluentd env 变量</h4><p>相关 PR: <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ffluent%2Ffluent-operator%2Fpull%2F977" target="_blank">https://github.com/fluent/fluent-operator/pull/977</a></p><p>贡献者：guerzon</p><h2>社区动态</h2><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4NTU0MzEyMg%3D%3D%26mid%3D2247526692%26idx%3D1%26sn%3D910c266022887e1adfd9b9167d5c70e3%26chksm%3Dcfa57099f8d2f98f6c7a36f29a72c50f107f71e036550bef87b20adbebeef66c637b6efc7b1f%26token%3D524162139%26lang%3Dzh_CN%23rd" target="_blank">OpenFunction 1.2.0 发布：集成 KEDA http-addon 作为同步函数运行时</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4NTU0MzEyMg%3D%3D%26mid%3D2247526860%26idx%3D1%26sn%3D69e7c60e8265c01cc2ab0860c6710348%26chksm%3Dcfa57071f8d2f967a26f7caf3febd620ccc6e67c8e3db1c0c40b8793cfd74dce0720a9a675d1%26token%3D524162139%26lang%3Dzh_CN%23rd" target="_blank">云原生 + AI Meetup 成都站（11.4）精彩回顾（视频回放 + PPT）</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fkubesphere.io%2Fzh%2Fconferences%2Falerting-2023%2F" target="_blank">以 Kubernetes 原生方式实现多集群告警</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fkubesphere.io%2Fzh%2Fblogs%2Fdeploy-kubesphere-v3.4.0-on-arm-openeuler-2%2F" target="_blank">ARM 版 openEuler 22.03 部署 KubeSphere 3.4.0 不完全指南续篇</a></li></ul><blockquote><p>本文由博客一文多发平台 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopenwrite.cn%3Ffrom%3Darticle_bottom" target="_blank">OpenWrite</a> 发布！</p></blockquote></div>
                                    ]]>
            </description>
            <pubDate>Sat, 11 Nov 2023 06:01:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/4197945/blog/10142489</guid>
            <link>https://my.oschina.net/u/4197945/blog/10142489</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Slowquery —— 图形化显示 MySQL 慢日志平台]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="text-align:start"><span style="background-color:#ffffff; color:#1f2328">Slowquery</span>&nbsp;是一个开源的 PHP Web 应用程序，旨在帮助数据库管理员（DBA）和开发者更好地管理和监控 MySQL 数据库的慢查询日志。它提供了一个简单易用的界面，可以方便地查看和分析慢查询日志，并提供了许多有用的功能，例如慢查询邮件报警和自动发送慢查询分析报告等。</p><p>以下是主要功能和特点：</p><ol><li>显示慢查询日志：提供了一个实时更新的界面，可以显示数据库中的慢查询日志，包括执行时间、执行次数、SQL 语句等信息。用户可以通过界面轻松地查看和分析慢查询日志，找到哪些查询是慢查询，并了解它们的执行情况。</li><li>慢查询搜索和筛选：提供了强大的搜索和筛选功能，使用户可以快速找到感兴趣的慢查询。用户可以通过执行时间、执行次数、SQL 语句等多个维度进行搜索和筛选，还可以对搜索结果进行排序和过滤，以便更好地了解慢查询的情况。</li><li>慢查询分析：提供了慢查询分析功能，可以对慢查询进行深入的分析和诊断。它可以将慢查询与数据库的表结构进行关联，显示每个表的查询次数和平均执行时间等信息，使用户更好地了解慢查询的本质和根源。</li><li>邮件报警：支持配置邮件报警功能，可以自动发送慢查询分析报告和警报信息给指定的邮箱。用户可以根据需要设置报警阈值和报警时间等参数，以便及时了解数据库的性能问题。</li></ol><hr><p style="color:#1f2328; text-align:start">参考了开源工具 Anemometer 图形展示思路，开发在页面上点击慢 SQL，就会自动反馈优化建议，同时也支持自动发送邮件报警功能。</p><p style="color:#1f2328; text-align:start">agent 客户端慢日志采集分析是结合 Percona pt-query-digest 工具来实现。</p><hr><p><img alt="image" src="https://camo.githubusercontent.com/a7f7c0d40aafb4a0ac83921b84b47902b62dbcfd151e2c1a160f7ba85c605e6a/68747470733a2f2f646261706c75732e636e2f75706c6f616466696c652f323031392f303332302f32303139303332303130313730393136352e6a7067" referrerpolicy="no-referrer"></p><p><img alt="image" src="https://camo.githubusercontent.com/bf8132e9b985c985d7cba6c81af73f89027c0b145c064d0d27231d3201f35686/68747470733a2f2f646261706c75732e636e2f75706c6f616466696c652f323031392f303332302f32303139303332303130313732343432382e6a7067" referrerpolicy="no-referrer"></p><p><img height="768" src="https://oscimg.oschina.net/oscnet/up-fdcdf886f52f4aced8b0a9733ed59f75b68.png" width="1366" referrerpolicy="no-referrer"></p><hr><p style="color:#1f2328; text-align:start"><span style="background-color:#ffffff; color:#1f2328">视频演示：</span><a href="https://www.douyin.com/video/7278552026181586216">https://www.douyin.com/video/7278552026181586216</a></p><hr><p style="color:#1f2328; text-align:start">服务端部署</p><h1 style="margin-left:0; margin-right:0; text-align:start"><a href="https://github.com/hcymysql/slowquery#%E6%8B%89%E5%8F%96%E9%95%9C%E5%83%8F">拉取镜像</a></h1><div style="text-align:start"><pre><code>shell&gt; docker pull docker.io/hcymysql/slowquery:2023-09-13</code></pre></div><h1 style="margin-left:0; margin-right:0; text-align:start"><a href="https://github.com/hcymysql/slowquery#%E5%90%AF%E5%8A%A8">启动</a></h1><div style="text-align:start"><pre><code>shell&gt; docker run -itd -e "TERM=xterm-256color" --privileged --name slowquery -p 80:80 -p 3306:3306 &lt;IMAGE ID&gt; /usr/sbin/init
</code></pre></div><h1 style="margin-left:0; margin-right:0; text-align:start"><a href="https://github.com/hcymysql/slowquery#%E8%BF%9B%E5%85%A5docker%E9%87%8C%E5%90%AF%E5%8A%A8httpd%E6%9C%8D%E5%8A%A1">进入 docker 里，启动 httpd 服务</a></h1><div style="text-align:start"><pre><code>shell&gt; docker exec -it slowquery /bin/bash
shell&gt; systemctl start httpd.service </code></pre></div><hr><h1><span>​</span>录入你要监控的 MySQL 主库配置信息</h1><div style="text-align:start"><pre><code>mysql&gt; INSERT INTO slowquery.dbinfo VALUES (1,'192.168.148.101','test','admin','123456',3306);
</code></pre><div><hr><p>客户端部署</p></div></div><p style="color:#1f2328; text-align:start">进入到 slowquery/client_agent_script 目录下，把 slowquery_analysis.sh 脚本拷贝到生产 MySQL 主库上做慢日志分析推送，并修改里面的配置信息</p><p style="color:#1f2328; text-align:start">定时任务（10 分钟一次）</p><div style="text-align:start"><pre><code>*/10 * * * * /bin/bash /usr/local/bin/slowquery_analysis.sh &gt; /dev/null 2&gt;&amp;1</code></pre></div><p style="color:#1f2328; text-align:start"><a href="https://github.com/hcymysql/slowquery#%E6%89%93%E5%BC%80%E6%B5%8F%E8%A7%88%E5%99%A8%E8%BE%93%E5%85%A5httpyouripslowqueryslowqueryphp">打开浏览器，输入</a><a href="http://yourip/slowquery/slowquery.php">http://yourIP/slowquery/slowquery.php</a></p><hr><h1 style="text-align:start">慢查询邮件推送报警配置</h1><p style="color:#1f2328; text-align:start">进入到 slowquery/alarm_mail/目录里，修改 sendmail.php 配置信息</p><p style="color:#1f2328; text-align:start">定时任务（每隔 3 小时慢查询报警推送一次）</p><div style="text-align:start"><pre><code>0 */3 * * * cd /var/www/html/slowquery/alarm_mail;/usr/bin/php  /var/www/html/slowquery/alarm_mail/sendmail.php</code></pre></div><p><img alt="image" src="https://camo.githubusercontent.com/f473330c47bae487618e026e4a2b1a333f40225ddf7dbc49e4d2bab2b863b017/68747470733a2f2f646261706c75732e636e2f75706c6f616466696c652f323031392f303332302f32303139303332303130313832363135302e6a7067" referrerpolicy="no-referrer"></p><p><img height="643" src="https://oscimg.oschina.net/oscnet/up-5579779848fc6de5f8ba128de399d97154d.png" width="1158" referrerpolicy="no-referrer"></p></div>
                                                                ]]>
            </description>
            <pubDate>Sat, 11 Nov 2023 06:00:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/p/slowquery</guid>
            <link>https://www.oschina.net/p/slowquery</link>
        </item>
        <item>
            <title>
                <![CDATA[Gitee 推荐 | 边缘计算网关框架 FreeIOE]]>
            </title>
            <description>
                <![CDATA[<h1><a id="user-content-freeioe" class="anchor" href="https://gitee.com/freeioe/freeioe#freeioe"></a>FreeIOE</h1><p><strong><a href="https://gitee.com/link?target=http%3A%2F%2Ffreeioe.org">FreeIOE</a></strong> 是用于快速构建工业物联网边缘计算网关的开源框架。 <a href="https://gitee.com/freeioe/freeioe/blob/master/README.md">English|英文</a></p><h2><a id="user-content-如何使用" class="anchor" href="https://gitee.com/freeioe/freeioe#%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8"></a>如何使用</h2><ul><li><a href="https://gitee.com/link?target=http%3A%2F%2Ffreeioe.org">FreeIOE 社区</a></li><li><a href="https://gitee.com/link?target=http%3A%2F%2Fwiki.freeioe.org">FreeIOE WIKI 知识库</a></li><li><a href="https://gitee.com/link?target=http%3A%2F%2Fhelp.cloud.thingsroot.com%2Fquick_start%2F">快速使用指南</a></li><li><a href="https://gitee.com/link?target=http%3A%2F%2Fcloud.thingsroot.com">冬笋云平台</a></li></ul><h2><a id="user-content-应用开发" class="anchor" href="https://gitee.com/freeioe/freeioe#%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91"></a>应用开发</h2><h3><a id="user-content-文档" class="anchor" href="https://gitee.com/freeioe/freeioe#%E6%96%87%E6%A1%A3"></a>文档</h3><ul><li><a href="https://gitee.com/link?target=https%3A%2F%2Ffreeioe.gitbook.io%2Fdoc%2F">FreeIOE 应用开发手册</a></li></ul><h3><a id="user-content-示例" class="anchor" href="https://gitee.com/freeioe/freeioe#%E7%A4%BA%E4%BE%8B"></a>示例</h3><ul><li><p><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Ffreeioe%2Ffreeioe_example_apps">FreeIOE 应用示例代码库</a></p><ul><li>Modbus 应用示例（Master/Slave)</li><li>OPCUA 应用示例 (Server/Client)</li><li>发那科 Focas 协议数据采集 (通过 ubus 服务)</li><li>DLT645 电表数据采集应用</li><li>Aliyun/Huawei/Baidu/联通云 (Telit)/浪潮云/中信云，等物联网平台接入 (基于 MQTT 协议)</li><li>基于 Socat/Frpc 工具的网络/串口远程映射</li><li>基于 uci 指令的网络管理应用</li><li>支持支持 EtherNet/IP CIP 协议的 PLC 接入示例</li><li>三菱 MC 协议 PLC 接入示例</li><li>欧姆龙 Hostlink 协议接入示例</li><li>时序数据库写入示例</li></ul></li><li><p><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fviccom%2Fmyfreeioe_apps">第三方应用</a></p><ul><li>支持设备点表的 Modbus 数据采集应用</li><li>华为 UPS2000 设备数据采集应用（基于 Modbus)</li><li>华为 UPS2000 数据导出到 Redis 数据库</li><li>设备多路由管理应用（自动切换 4G 和有线网络)</li><li>网管网络信息收集应用</li><li>网络、串口远程映射应用</li><li>西门子 PLC S7 全系列应用</li><li>设备远程编程应用（网络设备、串口设备)</li><li>MQTT 数据上送示例</li><li>华日激光数据采集应用（主动模式)</li></ul></li></ul><h2><a id="user-content-框架开发" class="anchor" href="https://gitee.com/freeioe/freeioe#%E6%A1%86%E6%9E%B6%E5%BC%80%E5%8F%91"></a>框架开发</h2><p>FreeIOE 基于 [Skynet] (<a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fcloudwu%2Fskynet">https://github.com/cloudwu/skynet</a>) 框架.</p><blockquote><p>可以从它的<a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fcloudwu%2Fskynet%2Fwiki">wiki</a> 获取更多信息。
FreeIOE 使用的<a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fsrdgame%2Fskynet">skynet</a> 具有更多的 C 扩展模块</p></blockquote><h2><a id="user-content-提交问题" class="anchor" href="https://gitee.com/freeioe/freeioe#%E6%8F%90%E4%BA%A4%E9%97%AE%E9%A2%98"></a>提交问题</h2><p>请使用 github 的<a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Ffreeioe%2Ffreeioe%2Fissues">问题列表</a>.</p><h2><a id="user-content-购买 freeioe-物联网智能网关" class="anchor" href="https://gitee.com/freeioe/freeioe#%E8%B4%AD%E4%B9%B0freeioe-%E7%89%A9%E8%81%94%E7%BD%91%E6%99%BA%E8%83%BD%E7%BD%91%E5%85%B3"></a>购买 FreeIOE 物联网智能网关</h2><ul><li>冬笋科技: <a href="https://gitee.com/link?target=https%3A%2F%2Fwww.thingsroot.com%2Fproduct%2F">ThingsLink 系列</a></li><li>旋思科技: <a href="https://gitee.com/link?target=http%3A%2F%2Fwww.symid.com%2F">SymLink 系列</a></li></ul><h2><a id="user-content-已知问题" class="anchor" href="https://gitee.com/freeioe/freeioe#%E5%B7%B2%E7%9F%A5%E9%97%AE%E9%A2%98"></a>已知问题</h2><h2><a id="user-content-授权协议" class="anchor" href="https://gitee.com/freeioe/freeioe#%E6%8E%88%E6%9D%83%E5%8D%8F%E8%AE%AE"></a>授权协议</h2><p>MIT</p>]]>
            </description>
            <pubDate>Sat, 11 Nov 2023 05:47:00 GMT</pubDate>
            <guid isPermaLink="false">https://gitee.com/freeioe/freeioe</guid>
            <link>https://gitee.com/freeioe/freeioe</link>
        </item>
        <item>
            <title>
                <![CDATA[俄罗斯操作系统 Aurora OS 5.0 全新 UI 亮相]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>俄罗斯媒体 IXBT 报道称，该地本土企业 «Открытая мобильная платформа» 于 2023 年 11 月 9 日至 10 日在圣彼得堡举行的 Mobius 2023 年秋季移动开发者专业会议上，展示了 Aurora OS 5.0 的界面和其他细节。</p><p><img src="https://static.oschina.net/uploads/space/2023/1113/120639_HiDQ_2720166.png" referrerpolicy="no-referrer"></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-ebbd1d489fcf6d12a5bdfcba1b22c86358e.png" referrerpolicy="no-referrer"></p><p>据介绍，Aurora OS 包含许多改进，提升了办公人员在日常场景使用设备的易用性。最显著的变化是采用全新 UI 和手势控制——据称根据第四代 Aurora OS 的两年工业使用经验和用户研究进行了重新设计。</p><p>该公司的开发与服务部总监表示，「<strong>Aurora OS 5.0 将使我们对大型平板电脑屏幕空间进行更有效地利用，并在多任务环境中为用户提供新的便利</strong>。我还想指出的是，我们都在关注设计方法和趋势，并努力创造自己的方法，这使我们拥有独特的专业知识和经验。」</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-9ca474cad8338bca368d7b8d6801f400d41.png" referrerpolicy="no-referrer"><img alt="" src="https://oscimg.oschina.net/oscnet/up-f875b8758cfbd958ef22bd59649e672f478.png" referrerpolicy="no-referrer"><img alt="" src="https://oscimg.oschina.net/oscnet/up-1917685e14efe0133de924358c2627f8129.png" referrerpolicy="no-referrer"><img alt="" src="https://oscimg.oschina.net/oscnet/up-285260b36b2b889bb8c9cfabea41050c0ba.png" referrerpolicy="no-referrer"></p><p>Aurora OS 基于 Sailfish OS 开发，Sailfish OS （旗鱼）是由芬兰公司 Jolla 在 MeeGo 基础上开发的移动操作系统。</p><blockquote><p>相关阅读</p><p><em><u><a href="https://www.oschina.net/news/107440/huawei-considering-cooperate-with-russia-s-aurora" target="_blank">华为考虑与俄罗斯开源操作系统 Aurora 进行深度研发合作</a><br><a href="https://www.oschina.net/news/83581/chinese-sailfish-system-will-come-after-six-month">继俄罗斯之后，中国也要拥有自己的 Sailfish 移动系统了</a></u></em></p></blockquote><p>2016 年，俄罗斯公司 Open Mobile Platform 获得开发俄罗斯版本的 Sailfish OS 的许可。目前，Aurora OS 主要供俄罗斯政府部门和国企使用。</p><p>来源：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.ixbt.com%2Fnews%2F2023%2F11%2F11%2Fv-rossii-predstavili-interfejs-otechestvennoj-os-avrora-50.html" target="_blank"><u>https://www.ixbt.com</u>/</a>、<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frns.online%2Fimportozameshchenie%2F51756508-ixbt-razrabotchiki-rossiyskoy-os-avrora-predstavili-versiyu-5-0%2F" target="_blank">https://rns.online/</a></u></p></div>
                                    ]]>
            </description>
            <pubDate>Sat, 11 Nov 2023 04:18:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266231</guid>
            <link>https://www.oschina.net/news/266231</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[我们真的需要这么多 RPC 框架吗？]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>10 月 18 日，腾讯开源了 RPC 开发框架——tRPC，号称具有「多语言、高性能」的特点，首批开源支持 Go / Cpp 两种编程语言。 众所周知，现有的开源 RPC 框架已经很多了， gRPC、Thrift、Dubbo、bRPC，难道就没有一个能腾讯满足需求吗，腾讯是不是在重复造轮子？我们真的需要这么多 RPC 框架吗？</p><p>为此，开源中国对腾讯 tRPC 团队进行了采访，来解答网友心中的部分疑惑。</p><p><strong>一、有网友认为现有的开源 RPC 框架已经很多了，腾讯搞 tRPC 是在重复造轮子。您怎么看待这种观点？</strong></p><p>存量的框架的确够多了，但对腾讯来说，多一套框架不能只是多了一套，核心是让存量归一。</p><p>以前在腾讯，都是由业务自己选择 RPC 框架，造成在用的框架种类繁多，有开源的，有自研的，达数十种。它们使用的通信协议不一样，使用的名字服务不一样，造成服务之间互通不顺畅，阻碍了业务的发展。同时，众多的 RPC 框架维护和使用成本也很高，急需收敛存量框架。是选择一个存量框架还是重新开发一个新的框架去做收敛，我们在开发 tRPC 之前，也深度思考了这个问题，并在内部进行了充分的讨论，最终决定采用自研 tRPC。因为腾讯的业务形态多样，对性能、开发语言支持、架构开放性等方面要求都比较高，已开源或者内部已有的 RPC 框架或多或少还不能完全满足腾讯业务的需求。</p><p><strong>二、腾讯曾在 2017 年开源了 RPC 框架 Tars。今天的 tRPC 跟 Tars 有什么联系吗？为什么要另起炉灶又开发了个新的？</strong></p><p>tRPC 和 Tars 是两个完全独立框架。不过，tRPC 设计之初也有借鉴 Tars 的部分设计，tRPC 的部分核心开发设计者曾经也是 Tars 的核心开发设计者。 之所以要另起炉灶，主要还是因为 Tars 不能承担起公司内部框架存量归一的目标，自身架构上比较封闭是最主要的原因。而 tRPC 采用插件化的设计，架构开放性很强，很容易融入到已有的服务治理平台中去，更利于存量收敛。</p><p><strong>三、tRPC 项目是从什么时候开始的？背后有什么故事值得分享吗？</strong></p><p>tRPC 项目从 2019 开始，到现在已经 4 年多了。当时公司存量框架数量最多的时候，达数十种，严重影响了研发效率，阻碍业务进一步发展。 tRPC 从成立到发展至今确实也发生了很多故事。比如在成立之初，对于是否应该另起炉灶去做 tRPC 来收敛存量框架，当时在公司内也是见解不一。我们内部论坛就这个问题有一个帖子，在全公司范围进行了激烈讨论，评论达到了上百条，pv 到达上万。不辩不明。</p><p>在内部经过这么大范围的讨论后，才最终确定了要自研 tRPC。 研发 tRPC 得到公司内部技术人员的广泛支持。为了使 tRPC 能成为集大成的 RPC 框架，能够承担存量归一的重任，我们研发采用了内部社区模式，公司很多擅长框架开发的技术同事都主动积极参与进来，先后为 tRPC 贡献代码的人员有数百人之多。设计研发过程中也是各种思想碰撞，比如 tRPC 插件化的总体架构形态的确定，就是通过几次数十人的闭门会议，在激烈的争吵中形成的。</p><p><strong>四、为什么要将 tRPC 开源？希望开源能给该项目带来什么？</strong></p><p>开源 tRPC 的原因有两个： 1.公司内部业务对外扩展时需要。如游戏出海，业务需要在外部企业私有化部署，这时候因为业务开发使用了 tRPC，需要把代码交付出去。 2.希望通过开源对外做更多的技术分享交流，并借助社区的力量来进一步将 tRPC 打造得更好。</p><p><strong>五、官方提到 tRPC 支持多种通信协议，能具体说一下支持哪些通信协议吗？协议的通用性和高性能可以兼得吗？</strong></p><p>tRPC 框架默认支持 tRPC 协议，还支持业界 HTTP(s)/gRPC/bRPC/Tars/Thrift 协议，以及公司内部多种通信协议，目前只开源了 HTTP(s)/gRPC 协议，未来会逐步开源其它协议。</p><p>对于协议这块通用性和高性能是否兼得的问题，这里更多地要看业务场景和需求，如果想要通用性，可以选择 HTTP 或者 gRPC 协议，如果想要高性能，可以选择 tRPC 协议，因为协议本身设计和实现会对性能有比较大的影响。</p><p><strong>六、相比较于其他开源框架，tRPC 出现得比较晚。从 RPC 框架的演进历史来看，tRPC 与其他开源 RPC 框架有什么本质上的区别吗？</strong></p><p>RPC 框架演进到现在确实已经很成熟了，业界开源的 RPC 框架各自之间也都很难说有什么本质区别，更多的是符合各自业务发展的诉求。tRPC 出现的主要目的是做公司存量框架收敛，它有一定的后发优势，可以吸取已有存量框架的优点，规避不足，通过在高性能的基础上基于插件化思想去构建开放性的架构，使它能更适用于腾讯多样复杂的业务场景。</p><p><strong>七、官方提到项目规划，主要有两点，一是开源更多编程语言：Java、Python、Node，二是丰富生态，开源更多云原生相关的插件和组件。想问下是出于哪些方面考虑，将其作为未来重点开发方向？</strong></p><p>主要还是希望框架能够更广泛和高效地使用起来，更多的开发语言支持能覆盖更多的场景，如现在很多企业都是使用 Java 语言，tRPC 只有支持 Java 才有可能成为其候选。又如现在 AI 场景大部分都使用 Python，那么 tRPC 支持了 Python 才有可能被使用。</p><p>丰富生态也是希望 tRPC 能够帮助使用者能够更快速构建自己的微服务体系。目前大家都喜欢使用云原生相关的组件去构建自己的微服务体系，tRPC 如果能够丰富云原生的插件生态，那么用户使用 tRPC 和这些云原生的组件对接就会更高效快捷。</p><p><strong>八、腾讯有 tRPC，百度有 bRPC，阿里有 Dubbo，字节有 Volo，为什么每个大厂都要开发自己的 RPC 框架？</strong></p><p>大厂为什么都要开发自己的 RPC 框架？个人觉得主要还是业务形态决定的。虽然 RPC 框架看起来都差不多，但真正应用到业务时，根据业务的形态不同又会有很多差异。 如果使用开源的框架，很有可能要费很大的成本才能解决这些差异，花费的时间周期也会更长，甚至可能解决不了。比如我们在游戏场景使用 tRPC 时，发现游戏这种有状态的业务场景，通用的 RPC 设计并不能满足其需求，我们也是基于 tRPC 插件化的架构，通过和游戏团队合作替换了底层通信组件后，才满足了游戏场景的需求。如果采用的开源框架，这个问题可能就很难解决了。</p></div>
                                    ]]>
            </description>
            <pubDate>Sat, 11 Nov 2023 03:15:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/3859945/blog/10142659</guid>
            <link>https://my.oschina.net/u/3859945/blog/10142659</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[openKylin 软件商店上新啦！超多精品应用任意下载~]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#222222; margin-left:0px; margin-right:0px; text-align:justify"><span><span style="color:#000000">openKylin 开源操作系统自发布以来，软件生态建设便在积极向前推进。目前已经有一大批常用应用和工具汇集于此，进一步丰富了 openKylin 软件生态系统。</span></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">近期，在社区成员和开发者们的共同努力下，openKylin 软件商店又上架了一系列精品应用，涵盖社交、办公、开发、安全、网络办公、游戏、音乐等多种分类，为用户提供更多选择。</span></span></p><div><p style="text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-6557f6cf65f30164b860b12e34078d1b1f2.png" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px">&nbsp;</p></div><p style="color:#222222; margin-left:0; margin-right:0; text-align:center"><span><strong><span style="color:#000000">部分上架应用如下：</span></strong></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:center"><span><strong><span style="color:#ffffff"><span style="background-color:#0b79ff">社交</span></span></strong></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><strong><span style="color:#ffffff"><span style="background-color:#757ae4">01</span></span><span style="color:#202020">微信</span></strong></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#333333">Linux 原生微信版本，支持单人、多人参与。能够通过网络给好友发送文字消息、表情和图片，让沟通更方便。</span></span></p><div><p style="text-align:center"><img alt="" height="1080" src="https://oscimg.oschina.net/oscnet/up-748e2dfc0282856571a7c813305a44112fc.png" width="1920" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px">&nbsp;</p></div><p style="color:#222222; margin-left:0; margin-right:0; text-align:left"><span><strong><span style="color:#ffffff"><span style="background-color:#757ae4">02</span></span><span style="color:#202020">QQ</span></strong></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#333333">腾讯 QQ 是一款专门为 Linux 系统打造的网络社交聊天工具，支持在线聊天、即时传送视频、语音和文件等多种多样的功能，并可与多种通讯终端相连。</span></span></p><div><p style="text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-ecaa0adda8a923a79416136adab448b78ed.png" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px">&nbsp;</p></div><p style="color:#222222; margin-left:0; margin-right:0; text-align:center"><span><strong><span style="color:#ffffff"><span style="background-color:#0b79ff">输入法</span></span></strong></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><strong><span style="color:#ffffff"><span style="background-color:#757ae4">01</span></span><span style="color:#202020">搜狗输入法</span></strong></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#333333">支持各种各样的词汇，包括常用词、专业词汇、流行语等，可以根据您的输入习惯和上下文、预测出想要输入的词汇。</span></span></p><div><p style="text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-d4480b1423a810f588ee82ef7b092248360.png" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px">&nbsp;</p></div><p style="color:#222222; margin-left:0; margin-right:0; text-align:center"><span><strong><span style="color:#ffffff"><span style="background-color:#0b79ff">办公</span></span></strong></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><strong><span style="color:#ffffff"><span style="background-color:#757ae4">01</span></span><span style="color:#202020">WPS 办公软件（版本更新）</span></strong></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#333333">WPS 新版本更加尊重 Linux 用户特定的使用习惯，自带方正字体集，还有在线模板和素材使文档创作更加高效，让您轻松完成文字处理、表格制作、幻灯片制作等办公事务地处理!</span></span></p><div><p style="text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-3627b01a6664d946154dfd4bd4be6a4ffcf.png" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px">&nbsp;</p></div><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><strong><span style="color:#ffffff"><span style="background-color:#757ae4">02</span></span><span style="color:#202020">亿图图示</span></strong></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#333333">一款综合类型办公绘图软件，可以用于制作流程图、工业设计、组织架构图、信息图、图文混排、平面布局图等 220 余种绘图种类。</span></span></p><div><p style="text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-f9248c13b0a8420146de44dceb47080c601.png" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px">&nbsp;</p></div><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><strong><span style="color:#ffffff"><span style="background-color:#757ae4">03</span></span><span style="color:#202020">亿图脑图</span></strong></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#333333">专业思维导图软件、云同步跨平台、海量脑图模板、功能全易上手。将纷繁复杂的想法、知识和信息，如学习笔记、会议纪要、项目需求等简化成一张张清晰的思维导图，以结构化有序化的方式呈现，提高归纳、学习和记忆的效率，方便展示和讲解。</span></span></p><div><p style="text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-8e2e29936c3ecf4eabce91d95209cf05981.png" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px">&nbsp;</p></div><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><strong><span style="color:#ffffff"><span style="background-color:#757ae4">04</span></span><span style="color:#202020">亿图项目管理</span></strong></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#333333">一款专业的甘特图绘制和项目管理软件，轻松创建甘特图，帮助您进行项目规划，资源和预算管理等；功能实用且操作简单，是您进行项目管理的好帮手。</span></span></p><div><p style="text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-3ec8a0e96d490d78e6f1a90848968677ce7.png" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px">&nbsp;</p></div><p style="color:#222222; margin-left:0; margin-right:0; text-align:left"><span><strong><span style="color:#ffffff"><span style="background-color:#757ae4">05</span></span><span style="color:#202020">ONLYOFFICE</span></strong></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#333333">一款简洁好用的的办公套件，结合文本、电子表格和演示文稿编辑器，允许在没有互联网连接的情况下创建、查看和编辑存储系统文档，同时支持云盘上的文档编辑。</span></span></p><div><p style="text-align:center"><img alt="" height="1080" src="https://oscimg.oschina.net/oscnet/up-6535beb63772fe42292ad2e0a04b65d0546.png" width="1920" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px">&nbsp;</p></div><p style="color:#222222; margin-left:0; margin-right:0; text-align:center"><span><strong><span style="color:#ffffff"><span style="background-color:#0b79ff">会议</span></span></strong></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><strong><span style="color:#ffffff"><span style="background-color:#757ae4">01</span></span><span style="color:#202020">腾讯会议（版本更新）</span></strong></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#333333">支持加入会议与发起快速会议，快速连接内外部合作伙伴，1080P 高清画质，智能音视频降噪，畅享极致流畅体验。随时随地，畅享高效云端协作，共享屏幕、互动批注、协作白板、在线文档让演示协作更加生动便捷，分组讨论、云端录制、自动会议纪要助力分享与交流，提升会议效率。</span></span></p><div><p style="text-align:center"><img alt="" height="1080" src="https://oscimg.oschina.net/oscnet/up-f374bd40fd121a2af1c97d23bf79703b375.png" width="1920" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px">&nbsp;</p></div><p style="color:#222222; margin-left:0; margin-right:0; text-align:center"><span><strong><span style="color:#ffffff"><span style="background-color:#0b79ff">浏览器</span></span></strong></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><strong><span style="color:#ffffff"><span style="background-color:#757ae4">01</span></span><span style="color:#202020">360 安全浏览器</span></strong></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#333333">支持以浏览器为载体，面向党、政、军、企，以提高桌面办公效率、降低办公协作成本、保护业务信息数据安全、全平台场景化企业办公管控为需求目标的统一办公平台</span></span></p><div><p style="text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-c7b972846dd4356b443eec6364c505b84d9.png" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px">&nbsp;</p></div><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><strong><span style="color:#ffffff"><span style="background-color:#757ae4">02</span></span><span style="color:#202020">红莲花安全浏览器</span></strong></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#333333">红莲花安全浏览器，融入我国国产密码算法和一系列安全功能，打造了更安全的架构，支持自主网络信任体系。全面兼容龙芯（MIPS)、龙芯（LoongArch)、飞腾、兆芯、鲲鹏、海光、申威等国产处理器。</span></span></p><div><p style="text-align:center"><img src="https://oscimg.oschina.net/oscnet/up-2aa9d32a08fb5282c92c149ba6406831d99.png" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px">&nbsp;</p></div><p style="color:#222222; margin-left:0; margin-right:0; text-align:left"><span><span style="color:#000000">以上就是本次上架部分应用介绍，由于篇幅有限，这里就不一一列举了。更多应用，请移步至 openKylin 操作系统软件商店下载体验~~</span></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">目前，openKylin 社区生态系统已面向全体社区成员开放，无论你是经验丰富的开发者还是普通用户，都可以参与其中，为社区的建设添砖加瓦。以下为 openKylin 社区应用适配完整参与流程：</span></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#333333"><span style="background-color:#f0f3ff">1、访问 openKylin 官网（</span></span><span style="color:#0052ff"><span style="background-color:#f0f3ff">https://www.openkylin.top</span></span><span style="background-color:#f0f3ff">），点击「支持—兼容适配」，进入页面提交适配申请，社区工作人员收集到企业/个人适配申请信息后，将与之联系；</span></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#333333"><span style="background-color:#f0f3ff">2、通过 openKylin 官网渠道下载系统 ISO 文件，进行自适配测试并输出测试报告；</span></span></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#333333"><span style="background-color:#f0f3ff">3、企业/个人将产品信息和测试报告对接给社区工作人员；</span></span></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#333333"><span style="background-color:#f0f3ff">4、社区工作人员再针对企业/个人提交的测试报告中用例进行验证；</span></span></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#333333"><span style="background-color:#f0f3ff">5、若验证成功，则上架到软件商店并签发「openKylin 兼容证书」。</span></span></span></p><p style="color:#222222; margin-left:0px; margin-right:0px; text-align:justify"><span><span style="color:#000000">如果你对此感兴趣，那么欢迎你加入我们，携手构建枝繁叶茂的产业全栈生态。</span></span></p></div>
                                    ]]>
            </description>
            <pubDate>Sat, 11 Nov 2023 02:33:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266218</guid>
            <link>https://www.oschina.net/news/266218</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[阿里云严重故障，全线产品受影响（已恢复）]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>22:30 更新：阿里云称，<strong>受影响云产品均已恢复，因故障影响部分云产品的数据（如监控、账单等）可能存在延迟推送情况，不影响业务运行</strong>。</p><p>&nbsp;</p><p>19:33 更新：阿里云称，工程师通过分批重启组件服务，绝大部分地域控制枱服务已恢复访问。</p><p><img src="https://static.oschina.net/uploads/space/2023/1112/194354_8AJz_2720166.png" referrerpolicy="no-referrer"></p><p>来源：<u><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhelp.aliyun.com%2Fnoticelist%2Farticleid%2F1064981333.html" target="_blank">https://help.aliyun.com/noticelist/articleid/1064981333.html</a></em></u></p><p>&nbsp;</p><p>19:00 更新：<strong>阿里云已确认故障原因与某个底层服务组件有关，工程师正在紧急处理中</strong>。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-21fe108caa0ffe2bf02998ed8b9185bbce6.png" referrerpolicy="no-referrer"></p><p>官方通告显示，阿里云全线产品受影响。</p><p><img src="https://static.oschina.net/uploads/space/2023/1112/192749_ICdb_2720166.png" referrerpolicy="no-referrer"></p><p>&nbsp;</p><p>18:20 更新，官方回应：</p><blockquote><p>2023-11-12 18:14<br> (GMT+8)<br> 尊敬的客户：您好！<br> 北京时间 2023 年 11 月 12 日 17:44 起，阿里云监控发现云产品控制枱访问及 API 调用出现异常，阿里云工程师正在紧急介入排查。非常抱歉给您的使用带来不便，若有任何问题，请随时联系我们。</p></blockquote><hr><p>今天下午 17:50 左右，大量网友表示阿里云盘出现访问故障，其手机端和电脑端均无法登录，具体报错信息如下：</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-ad5c239c350f3277020b8cc7e597a5871a8.png" referrerpolicy="no-referrer"></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-3e011677674370654775af30139a5838081.png" referrerpolicy="no-referrer"></p><p>与此同时，许多开发者称阿里云 OSS 服务出现故障，并且无法进入控制枱。有人指出，阿里云的 RAM 服务 (Resource Access Management) 整个挂掉，所以影响到所有使用 RAM 的服务。</p><p><img src="https://static.oschina.net/uploads/space/2023/1112/181542_tcJ3_2720166.png" referrerpolicy="no-referrer"></p><p><img height="268" src="https://static.oschina.net/uploads/space/2023/1112/181847_WbQS_2720166.png" width="1002" referrerpolicy="no-referrer"></p><p><img src="https://static.oschina.net/uploads/space/2023/1112/181907_j4TS_2720166.png" referrerpolicy="no-referrer"></p><p>随后微博实时热搜显示，阿里旗下多款产品均出现访问故障：</p><p><img src="https://static.oschina.net/uploads/space/2023/1112/183202_tC6p_2720166.png" referrerpolicy="no-referrer"></p><p>据称此次故障是阿里云中心化 API 服务故障，导致控制枱无法访问且 API 无法使用。</p><p>由于该故障为全域故障。所有部署于阿里云且高度依赖阿里云 API 的平台均出现故障情况，包括<strong>淘宝、钉钉、咸鱼、阿里云盘、不背单词</strong>等。</p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 10 Nov 2023 10:17:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266144</guid>
            <link>https://www.oschina.net/news/266144</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[UNIX 时间即将进入 17 亿纪元]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>UNIX 时间（或称 POSIX 时间）是 UNIX 或类 UNIX 系统使用的时间表示方式：从 UTC 1970 年 1 月 1 日 0 时 0 分 0 秒起至现在的总秒数，不考虑闰秒（由于 UTC 包括了闰秒，但在 POSIX 时间中闰秒会被忽略以提供一种简便且兼容的计算时差的方法。因此&nbsp;POSIX 时间转换后不一定是 UTC，尽管它也存在）。</p><p>再过两天，北京时间 2023/11/15&nbsp;06:13:20，UNIX 时间将进入 1700000000&nbsp;纪元。</p><p><img src="https://static.oschina.net/uploads/space/2023/1112/173535_gh8g_2720166.png" referrerpolicy="no-referrer"></p><p>上一次「亿级更新」：<em><u><a href="https://www.oschina.net/news/118614/unix-time-reached-1600m">UNIX 时间 16 亿秒纪念</a></u></em></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 10 Nov 2023 09:36:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266134</guid>
            <link>https://www.oschina.net/news/266134</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[汤不热 (Tumblr) 凉了]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>WordPress 联合创始人兼 Automattic CEO —— Matt Mullenweg 近日在其 Tumblr 账号<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.tumblr.com%2Fphotomatt%2F733551497286172672%2Ftranslation-of-internalspeak-to-externalspeak" target="_blank">回应</a>了一份被泄露的公司内部备忘录。</p><blockquote><p><img src="https://static.oschina.net/uploads/space/2023/1112/164725_xseW_2720166.png" referrerpolicy="no-referrer"></p></blockquote><p>下图即为被泄露的备忘录截图：</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-8dc1de6ca95482b835d9520554bae36e77c.png" referrerpolicy="no-referrer"></p><p>Matt 先是肯定了内容的真实性，但表示不完整，所以他决定公开说明关于这份备忘录的具体情况。</p><p>这份备忘录谈论了关于 Tumblr 的下一步计划。Matt 表示，Tumblr 产品和营销团队的 139 名员工中的绝大多数将被分配到其它部门，客户支持和服务以及信任和安全部门的员工将留下来，继续原来的工作。</p><p>该决策意味着 Tumblr 事实上进入了维护模式，往后只保证最基础的运营。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-440c4e4db036d1382e33a921d5dfacaa70a.png" referrerpolicy="no-referrer"></p><p>Tumblr 成立于 2007 年，2013 年被雅虎以 11 亿美元收购，2019 年被 WordPress 母公司 Automattic 以仅仅 300 万美元收购。Tumblr 曾以大量成人内容闻名，但 2018 年 12 月它宣布禁止成人内容。此举导致 Tumblr&nbsp;流量大跌，流失了海量用户。很多人认为从这个时候起，汤不热就已经凉了。</p><p>Tumblr 试过挣扎，去年 11 月，Automattic 公司决定有限度地让艺术家重新在 Tumblr 上发布成人内容，希望借此召回用户。但它又别扭地表示，禁止艺术家通过成人内容获利。因此艺术家和创作者们并没有回来，用户也没有。</p><p>Matt 在备忘录说道，他们在收购 Tumblr 之后的四年里，为该业务投入了大约 200 名全职员工，并花费了超过 1 亿美元试图扭转 Tumblr 的亏本局面。但该目标现在仍没实现。不过他表示不会解雇任何员工，员工可以在其他部门就职，每个人都可以列出他们最想做的三项工作。</p><p>延伸阅读：<u><em><a href="https://www.oschina.net/news/219050/tumblr-will-support-activitypub" target="_blank">WordPress 创始人称 Tumblr 将支持 ActivityPub 协议</a></em></u></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 10 Nov 2023 09:13:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266133</guid>
            <link>https://www.oschina.net/news/266133</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[多家互联网公司急招鸿蒙程序员]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>近日，网易、美团等多家互联网公司发布和鸿蒙系统有关岗位招聘，加快推进鸿蒙原生应用开发转型。</p><p>11 月 8 日，美团<a href="https://www.oschina.net/news/265725">发布</a>了鸿蒙高级工程师、鸿蒙基建工程师等多个鸿蒙开发相关岗位，主要开发美团鸿蒙 App、大众点评鸿蒙 App。根据脉脉平台，美团鸿蒙基建工程师岗位给出的月薪在 4 万元到 6 万元之间。</p><p><img alt="up-ae63f8c42eec2e0095d1026cb5f531df31b.png" src="https://oscimg.oschina.net/oscnet/up-ae63f8c42eec2e0095d1026cb5f531df31b.png" referrerpolicy="no-referrer"></p><p>11 月 10 日，网易更新了高级/资深 Android 开发工程师岗位，职位要求参与云音乐多端多 OS 的产品（Android、鸿蒙等）研发迭代。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-bd02726e9b32c06796408d6ee345fa87c40.png" referrerpolicy="no-referrer"></p><p>脉脉平台显示，钉钉也发布了鸿蒙开发工程师岗位，月薪在 1.5 万元到 3 万元之间。</p><p>智联招聘平台显示，2023 年 1 月至 10 月，招聘鸿蒙相关岗位的行业主要集中在互联网、计算机软件和运营商/增值服务相关行业，岗位主要是软件研发、移动研发相关的 Android 开发工程师、C++开发工程师、嵌入式软件开发、Java 开发工程师和软件测试等职类。相关岗位对学历和经验要求也相对较高，要求本科及以上学历和 3 年以上工作经验的招聘职位数占比分别超 75% 和 43%，平均招聘薪资达 17537 元/月，超市场平均水平。</p><p>在此之前，旅行领域 App 同程旅行与华为签署鸿蒙生态协议，并正式启动鸿蒙原生版 App 开发。据悉，同程旅行鸿蒙原生版 App 将于 2023 年年底完成全量版本开发。</p><p>据了解，目前华为已经与合作伙伴和开发者在社交、影音、游戏、资讯、金融、旅行等 18 个领域全面展开合作，全力推进鸿蒙生态建设。</p><p>9 月 25 日华为秋季全场景新品发布会上，余承东宣布，全面启动鸿蒙原生应用，HarmonyOS NEXT 开发者预览版将在 2024 年第一季度面向开发者开放。</p><p>数据显示，截至今年 8 月，鸿蒙生态设备数已超过 7 亿，220 万开发者投入到鸿蒙生态的开发。</p><hr><p>延伸阅读：<em><u><a href="https://www.oschina.net/news/261747" target="news">深圳信息职业技术学院开设「开源鸿蒙班」</a></u></em></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 10 Nov 2023 05:01:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266107</guid>
            <link>https://www.oschina.net/news/266107</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
    </channel>
</rss>
