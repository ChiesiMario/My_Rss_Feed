<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[开源中国-综合资讯]]>
        </title>
        <link>https://www.oschina.net/news/industry</link>
        <atom:link href="https://rsshub.app/oschina/news/industry" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[开源中国-综合资讯 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Fri, 17 Nov 2023 19:53:15 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[鲜衣怒马少年时｜GreptimeDB 开源一周年回顾]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h2>开源故事</h2><p>也许在进入软件行业的第一天，我们就已经与开源结缘。</p><p>很难想象没有开源的世界会是什么样子，非要举个例子的话，就好比菜谱不再公开，那所有人都只能自研，说不好连麻婆豆腐都需要远赴蜀地才能品上一品。正因为开源，我们得以共享珍贵的的食谱，所以也愿意将自研的食谱无私贡献出去。</p><p>作为一个现代的软件从业者，怎么能不在开源的世界里有些许经验呢？Greptime 三位创始人从职业早期就融入到了开源社区中，在受益的过程中也不断反哺开源，各自负责并维护了多个知名项目（如 SOFAJRaft, handlebars-rust, aviatorscript），有些项目本身的关注度和影响力都超过了 GreptimeDB。</p><p>在不断接触开源的过程中，一个有趣又大胆的想法在创始人庄晓丹心里如切如磋，如琢如磨：「打造一款世界级的基础软件」。他和另一位创始人冯家纯在蚂蚁集团实践 AIOps 智能运维时，因为市面并没有一款满足需求的超大规模时序数据平台而选择了自研，同时来自滴滴的另一位创始人孙宁也看到了时序数据存储、分析对于车联网的重要价值。所谓念念不忘，必有回想，三人一拍即合，这个「世界级的基础软件」的团队雏形就这么诞生了——打造一款面向未来且更贴近市场需求的时序数据库。</p><p>这种对产品品质高度追求的热切和渴望，不仅来自于创始人本身，也来自于整个 Greptime 团队。这里的每一个小伙伴都身怀绝技，有人放弃高薪埋头苦干，也有人从技术转向市场，更有人身兼技术、市场和运营多职⋯⋯底层的基础软件本身就很难做，加上开源更是 buff 叠满，没点情怀的人，真的不敢做开源。</p><p>正是这群少而精专的人，成就了现在的 Greptime（格睿科技），基于开源的 GreptimeDB 不断衍生和迭代出了商业化版本的时序数据库 GreptimeCloud 和可观测的 AI 工具 GreptimeAI 两款产品。</p><h3>我们还做了一个视频，和 GreptimeDB 回顾一周年的成长历程🎥（感兴趣的小伙伴请自行寻找视频 🔍）</h3><h2>开源数据</h2><p><img src="https://oscimg.oschina.net/oscnet/up-f88e430b4ec657a770973ec32c4d8a8bcab.png" alt="" referrerpolicy="no-referrer"></p><h2>开源历程（版本发布）</h2><p>GreptimeDB 自去年宣布开源后历经 v0.1 到 v0.4，每一个版本的发布都意味着 GreptimeDB 又一次的成长和完善。从框架构建到分布式能力的实现，再到新引擎 Mito 的重大革新，GreptimeDB 一直在路上：</p><p><img src="https://oscimg.oschina.net/oscnet/up-44a9791c096b6701e22a6ada7096cbe0d0e.png" alt="" referrerpolicy="no-referrer"></p><ul><li><p>2023.3.8 GreptimeDB v0.1 聚焦单机功能</p></li><li><p>2023.4.19 GreptimeDB v0.2 单机功能强化，云分布式开启</p><ul><li>完善单机功能；</li><li>PromQL 兼容性提升至 50%；</li><li>提出 Procedure 框架；</li><li>为 Cloud 和，分布式铺垫基础。</li></ul></li><li><p>2023.6.7 GreptimeDB v0.3 分布式初版：查询性能优化和稳定性增强</p><ul><li>分布式性能优化；</li><li>查询能力提升； -稳定性增强。</li></ul></li><li><p>2023.10.10 GreptimeDB v0.4 写入查询能力提升，查询性能提升 5~20 倍</p><ul><li>新版存储引擎 Mito2；</li><li>稳定性优化；</li><li>体验优化；</li><li>PromQL 兼容性提升至 70% 以上。</li></ul></li></ul><p>GreptimeDB 还将继续稳定更新版本，和社区的大家一起不断向前。</p><p>不仅有 GreptimeDB，我们还有 GreptimeCloud 和 GreptimeAI 正在公测，欢迎到官网体验并跟我们聊聊您的使用感受。下面具体明晰 Greptime 系列产品，请看 👀</p><blockquote><p>GreptimeCloud 基于开源的 GreptimeDB，为用户提供全托管的 DBaaS，能够与可观测性、物联网等领域结合的应用产品结合。利用云提供软件和服务，可以达到快速的自助开通和交付，标准化的运维支持，和更好的资源弹性。</p></blockquote><blockquote><p>GreptimeAI 是为 LLM 应用量身定制的可观测性解决方案，开发者可以通过该方案全面、深入地了解应用的成本、性能、流量和安全情况，在保证低成本和高性能的同时提供高效可靠的分析能力，同时保留了时序数据库的灵活性。</p></blockquote><h2>开源意义</h2><p>「又是做数据库的！」这是我们在技术展会听到的最多的一句话。做数据库的厂商确实很多，但也说明这个缺口还没有被补足，大家的产品在性能方面都各有欠缺，那开源的价值也就出现了：巨大的需求激生了市面上层出不穷的解决方案，每一家厂商都力图在性能赛道上超越对方。</p><p>开源对于 GreptimeDB 来说，意味着与世界各地志同道合的人共同探索未知，拼凑出技术的全貌。它不仅让我们的产品在广泛的用户和开发者中得到锤炼，而且构建了一个共同维护和持续改进的技术社区。在这里，每个人的声音都能被听见，每行代码都汇聚着智慧的火花。这正是开源精神闪耀的时刻，因为它不单是关于代码的开放，更是一种思维的开放。</p><p>我们做开源，也做商业化，回顾这一年，我们的开源产品 GreptimeDB 和商业化产品 GreptimeCloud 始终是共同进步的，都凝聚了社区的智慧和努力。所以在这个特别的日子，我们不单是在庆祝一个时间节点，更是在赞颂一种开放、合作、共赢的开源精神。</p><h2>开源社区</h2><h3>Greptime social 版</h3><p>开源一年的时间里，我们走进一个个技术聚会去寻找志同道合的伙伴：在全球 AI 开发者先锋大会上研讨前沿；在庆祝 SOFA 五周年时分享开源之路的感悟；在 Qcon 大会中探讨软件的未来；在 WOT 全球技术创新大会里展望明天；在 Rust 中国大会上讨论 Rust 的可能性；在 COSCon'23 和开源人共话开源意义；在 KubeCon + CloudNativeCon 和来自全球的业内人士探讨代码（点击会议名称即可跳转相关的参会详情哦 🎉）⋯⋯是代码汇聚了我们，也是开源连接了我们，见证了我们的成长。</p><p><img src="https://oscimg.oschina.net/oscnet/up-be7d81d1c9c46c50bc46397ef9e37474317.png" alt="" referrerpolicy="no-referrer"></p><h3>Greptime 主办方版</h3><p>除了融入业界，我们还主办了以自己社区和产品为主的中/英文线上 Meetup，联合 EMQX/KubeBlocks/Pika 举办了线下 Meetup 赢得了业界同行的共鸣与支持，加深了我们与社区的联系（Meetup 回顾请看 Greptime 视频号）。</p><p><img src="https://oscimg.oschina.net/oscnet/up-f8177361887abb20aafb27ca49cffd0b074.png" alt="" referrerpolicy="no-referrer"></p><h3>Greptime 拓展版</h3><p>在 GreptimeDB 披荆斩棘的过程中，源源不断地加入了近 50 个 Contributors，其中还晋升了 2 个 Committers ——来自英国的 Eugene 和日本的 Niwaka 出于对 TSDB 的关注和热爱 🫶 源源不断地为 GreptimeDB 贡献了极有价值的 PR，让我们的框架不断完善，功能也将在未来趋于完备。</p><p>受到地理优势的助力，我们的 Contributors 主要来源于中国，也有来自英国、新西兰和荷兰等其他国家的贡献者。同国家的技术朋友对我们的支持和认可令人可亲，国外友人的支持也让我们对自己的产品和正在做的事充满信心。除此之外，印度和日本的 Contributor 也让我们看到了时序数据库之于全球基础软件的意义。更荣幸的是我们收获了非洲尼日利亚技术朋友的关注和代码支持，并在这个过程中交流愉快。</p><p>Greptime 始终欢迎全球对 Rust、TSDB 和 Infra 感兴趣的技术客了解我们、加入我们，并和我们携手共建美好开源社区，和好玩的人一起做有意思的事～</p><p>前路漫漫，我们不会止步，Greptime 将继续参与行业会议，举办更多形式的交流活动，与你一同分享我们对产品的思考，坚持我们对技术的追求，锻铸更好的产品。在这条不断开拓的路上，我们诚邀你携手同行，与 GreptimeDB 共同成长。</p><h1>Greptime 社媒全新板块和大家 say hi 👋</h1><p><strong>【遇见格睿 💜】</strong> 曾有参与「开源之夏」&amp; Greptime 的同学成功完成了项目试炼，最终选择加入 Greptime 继续实习，也有很多关注 Greptime 的人在大大小小的会议中和我们快乐面基，更有来自大洋彼岸和同在华夏的朋友们持续关注 Greptime 的每一次进步······大家都是见证了 Greptime 诞生和成长的挚友，在如此多开源和初创的社区里面刚好相遇相识，在科技交汇的宇宙里找到共鸣的瞬间，嗯，怎么不算有缘呢？</p><p>或许你也听多了 Greptime 成长史，所以不妨来点新鲜的👂你是如何得知 Greptime 的呢？你为什么会关注我们呢？你有参与到 Greptime 的社区贡献中来吗？或者你对 Greptime 有什么「惊鸿一瞥」的记忆吗？</p><p>现在我们诚挚地邀请你聊聊「你与 Greptime」的故事，我们将会把你的故事整理成文稿，分享给更多的人（当然你要是自己动笔敍写就更棒了👍）。欢迎添加小助手微信（greptime，懒得手动搜索的朋友请滑到文末扫码添加）讲出你的故事，审核通过即可获得我们的限量版 Greptime 文创大礼包（悄悄说是真的限量版哦🎁）。</p><p>Greptime 开源一周年之际，我们想听听你的声音，诚邀你讲述「遇见格睿」的独家故事。</p><h2>开源未来</h2><p>GreptimeDB 将继续忠实开源的初心，真诚地欢迎全球的技术人员和开源朋友一起合作。我们深知，开源不仅仅是一个代码仓库的开放，更是一个技术、想法和创意交流的平台，欢迎任何一个愿意给 GreptimeDB 提意见和贡献代码的人，而我们也将在以下几方面继续努力：</p><ul><li><p>继续积极推进 GreptimeDB 的核心功能完善，与社区一起完成更多功能的孵化和落地，增强系统的功能和稳定性，为用户提供更加完备的数据库工具；</p></li><li><p>和社区的大家真诚合作，增加交流，鼓励更多的开发者参与到 GreptimeDB 的构建中来；</p></li><li><p>着重构建一个与 GreptimeDB 相关的工具、插件和服务的生态，提供更丰富的整合方案和应用场景，帮助开发者和企业更容易地将 GreptimeDB 应用于实际的业务中；</p></li><li><p>为了更好地反映社区意见和需求，我们将逐步引入开放治理模型，与更多的开发者和社区参与者面对面交流；</p></li></ul><p>开源的道路是一条充满挑战与机遇的旅程，我们相信并希望通过持续的努力和不懈的追求与全球的开源同伴们共创开源软件的美好未来。</p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 17 Nov 2023 10:56:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/6839317/blog/10143939</guid>
            <link>https://my.oschina.net/u/6839317/blog/10143939</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[CLion Nova 强势登陆 C 和 C++ 开发领域，使用 ReSharper C++/Rider C++ 语言引擎！]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="rich_media_content js_underline_content
                       autoTypeSetting24psection
            " id="js_content"><p style="text-align: center;" data-mpa-powered-by="yiban.io"><img class="rich_pages wxw-img" data-galleryid="" data-ratio="0.1836734693877551" src="https://oscimg.oschina.net/oscnet/4ee8e558-caa4-423e-981b-c76935ea8387.gif" data-type="gif" data-w="637" style="" referrerpolicy="no-referrer"></p><section style="font-size: 16px;color: rgb(62, 62, 62);line-height: 1.6;letter-spacing: 0px;font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;"><section style="font-size: 16px;"><section style="margin-right: 0%;margin-left: 0%;text-align: left;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: top;padding-right: 10px;padding-left: 10px;background-color: rgb(12, 176, 199);"><section style="display: inline-block;vertical-align: middle;"><section style="display: inline-block;vertical-align: middle;color: rgb(215, 251, 255);padding-right: 2px;font-size: 19px;"><p><strong>摘要</strong></p></section></section><section style="display: inline-block;vertical-align: middle;width: 0.8em;height: 0.8em;border-top: 0.2em solid rgb(215, 251, 255);border-right: 0.2em solid rgb(215, 251, 255);transform: rotate(45deg);"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section></section></section><p style="font-size: inherit;color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;">最近，我们宣布推出 CLion 的一个免费早期预览版，<strong>它使用 ReSharper C++/Rider C++ 语言引擎而不是 CLion 的「旧版」引擎</strong>。预览版可以通过我们的专属 <a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.jetbrains.com.cn%2Ftoolbox-app%2F" textvalue="Toolbox App" linktype="text" imgurl="" tab="outerlink" data-linktype="2">Toolbox App</a> 源获取。2024 年，根据反馈结果，CLion Nova 将合并到 CLion 中。在此之前，预览版可免费使用，并与通常的 CLion (Classic) 并行安装。</p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" data-ratio="0.562962962962963" data-s="300,640" src="https://oscimg.oschina.net/oscnet/fccf280f-4ee1-407c-8ece-d282b99a783b.png" data-type="png" data-w="1080" style="" referrerpolicy="no-referrer"></p><p><span style="font-size: inherit;color: inherit;line-height: inherit;"><br></span></p><p><span style="font-size: inherit;color: inherit;line-height: inherit;"><br></span></p><section style="font-size: 16px;"><section style="margin-right: 0%;margin-left: 0%;text-align: left;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: top;padding-right: 10px;padding-left: 10px;background-color: rgb(12, 176, 199);"><section style="display: inline-block;vertical-align: middle;"><section style="display: inline-block;vertical-align: middle;color: rgb(215, 251, 255);padding-right: 2px;font-size: 19px;"><p><strong>史前时期</strong></p></section></section><section style="display: inline-block;vertical-align: middle;width: 0.8em;height: 0.8em;border-top: 0.2em solid rgb(215, 251, 255);border-right: 0.2em solid rgb(215, 251, 255);transform: rotate(45deg);"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section></section></section><p style="font-size: inherit;color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;">JetBrains 的第一个 C++ 引擎为 AppCode 而设计，这是我们面向 iOS 和 macOS 开发者提供的 IDE。它为 IntelliJ 平台的一部分，最初使用 Java 编写，后来也使用 Kotlin 编写。引擎的方式和架构可以很好地服务于基于 IntelliJ 的 IDE 中的许多语言，然而，这种设计并不是特别适合 C++ 语言。</p><p style="font-size: inherit;color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;">为了更快地与 C++ 的发展保持一致，并分离引擎和 IDE 进程，基于 clangd 的引擎后来被添加到 CLion 中。这个引擎基于我们的 clangd 自定义分支，可以检测警告和错误并在编辑器中显示，建议快速修复，以及执行高亮显示、补全和特定导航操作。它也用于<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.jetbrains.com%2Fclion%2F2023%2F11%2Fstriving-for-better-cpp-code-part-i-data-flow-analysis-basics%2F" style="font-size: inherit;line-height: inherit;color: rgb(30, 107, 184);" data-linktype="2" target="_blank">数据流分析</a>和 MISRA 检查等。同时，CLion 的「旧版」引擎负责其他代码洞察功能，例如重构。我们的 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.jetbrains.com.cn%2Fhelp%2Fclion%2F2023.3%2Fc-support.html" target="_blank" rel="noopener" style="font-size: inherit;line-height: inherit;color: rgb(30, 107, 184);" data-linktype="2">CLion 文档</a>提供了详细的「职责列表」。</p><p style="font-size: inherit;color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;">clangd 有很多优势，但对于项目级重构和操作，它的作用不是很大。我们设计了一个基于 clangd 的索引器原型，甚至在它之上实现了一个实验性 <em style="font-size: inherit;color: inherit;line-height: inherit;">Find Usages</em>（查找用法），您可以<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.jetbrains.com.cn%2Fhelp%2Fclion%2F2023.3%2Ffind-highlight-usages.html%23usages-clangdindexer" target="_blank" rel="noopener" style="font-size: inherit;line-height: inherit;color: rgb(30, 107, 184);" data-linktype="2">在 CLion 中启用和评估该功能</a>。</p><p style="font-size: inherit;color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;">JetBrains 为 C++ 开发的另一个替代方案是 ReSharper C++ 和 Rider（用于 C++ 游戏开发）中使用的语言引擎。还有一种通信协议，使 Rider 等基于 IntelliJ 的 IDE 能够与充当语言引擎的独立后端进程进行通信。我们现在也已将此协议和原始引擎适配到 CLion！</p><p><span style="font-size: inherit;color: inherit;line-height: inherit;"><br></span></p><section style="font-size: 16px;"><section style="margin-right: 0%;margin-left: 0%;text-align: left;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: top;padding-right: 10px;padding-left: 10px;background-color: rgb(12, 176, 199);"><section style="display: inline-block;vertical-align: middle;"><section style="display: inline-block;vertical-align: middle;color: rgb(215, 251, 255);padding-right: 2px;font-size: 19px;"><p><strong>目标</strong></p></section></section><section style="display: inline-block;vertical-align: middle;width: 0.8em;height: 0.8em;border-top: 0.2em solid rgb(215, 251, 255);border-right: 0.2em solid rgb(215, 251, 255);transform: rotate(45deg);"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section></section></section><p style="font-size: inherit;color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;">在这个新的实验性解决方案中，我们重点关注 IDE 的响应性、准确度和性能。我们有两个主要目标：</p><ul style="font-size: inherit;color: inherit;line-height: inherit;padding-left: 32px;" class="list-paddingleft-1"><li style="font-size: inherit;color: inherit;line-height: inherit;margin-bottom: 0.5em;"><p>解决 CLion 因使用「旧版」引擎而导致的长期存在的<strong style="font-size: inherit;color: inherit;line-height: inherit;">性能</strong>和<strong style="font-size: inherit;color: inherit;line-height: inherit;">质量</strong>问题。</p></li><li style="font-size: inherit;color: inherit;line-height: inherit;margin-bottom: 0.5em;"><p><span style="font-size: inherit;color: inherit;line-height: inherit;">统一我们所有 C++ 工具的用户体验，这些工具包括 CLion、Rider 和 ReSharper C++。</span></p></li></ul><figure style="font-size: inherit;color: inherit;line-height: inherit;"><img class="rich_pages wxw-img" data-ratio="0.704331450094162" src="https://oscimg.oschina.net/oscnet/92e5374c-f4d1-4774-8f6c-7296bf6a1db8.png" data-type="png" data-w="1062" style="font-size: inherit;color: inherit;line-height: inherit;margin-right: auto;margin-left: auto;" title="CLion Nova 介绍" referrerpolicy="no-referrer"></figure><p style="font-size: inherit;color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;">我们将新的实验性预览版命名为 <strong style="font-size: inherit;color: inherit;line-height: inherit;">CLion Nova</strong>，而当前版本的 CLion 为 <strong style="font-size: inherit;color: inherit;line-height: inherit;">CLion Classic</strong>。未来，我们计划将 CLion Nova 合并到 CLion Classic 中。<strong>设想中没有新产品。</strong></p><p><span style="font-size: inherit;color: inherit;line-height: inherit;"><br></span></p><section style="font-size: 16px;"><section style="margin-right: 0%;margin-left: 0%;text-align: left;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: top;padding-right: 10px;padding-left: 10px;background-color: rgb(12, 176, 199);"><section style="display: inline-block;vertical-align: middle;"><section style="display: inline-block;vertical-align: middle;color: rgb(215, 251, 255);padding-right: 2px;font-size: 19px;"><p><strong>优势和增强</strong></p></section></section><section style="display: inline-block;vertical-align: middle;width: 0.8em;height: 0.8em;border-top: 0.2em solid rgb(215, 251, 255);border-right: 0.2em solid rgb(215, 251, 255);transform: rotate(45deg);"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section></section></section><p style="font-size: inherit;color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;">CLion Nova 仍然使用两种 C++ 语言引擎：<strong>一种是基于 clangd 的引擎，另一种是 ReSharper C++/Rider 使用的引擎。</strong>CLion Classic 的大部分功能在 CLion Nova 中应该完全相同。</p><p style="font-size: inherit;color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;">CLion Nova 在性能方面的显著优势：</p><ul style="font-size: inherit;color: inherit;line-height: inherit;padding-left: 32px;" class="list-paddingleft-1"><li style="font-size: inherit;color: inherit;line-height: inherit;margin-bottom: 0.5em;"><p><span style="font-size: inherit;color: inherit;line-height: inherit;">更快的高亮显示速度，特别是对于增量代码更新</span></p></li><li style="font-size: inherit;color: inherit;line-height: inherit;margin-bottom: 0.5em;"><p><span style="font-size: inherit;color: inherit;line-height: inherit;">响应更快的 UI</span></p></li><li style="font-size: inherit;color: inherit;line-height: inherit;margin-bottom: 0.5em;"><p>更快的 <em style="font-size: inherit;color: inherit;line-height: inherit;">Find Usages</em>（查找用法）</p></li><li style="font-size: inherit;color: inherit;line-height: inherit;margin-bottom: 0.5em;"><p><span style="font-size: inherit;color: inherit;line-height: inherit;">重构中的冻结和挂起显著减少</span></p></li><li style="font-size: inherit;color: inherit;line-height: inherit;margin-bottom: 0.5em;"><p><span style="font-size: inherit;color: inherit;line-height: inherit;">更快的测试索引</span></p></li></ul><p style="font-size: inherit;color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;">这种统一还为 CLion Nova 带来了 CLion Classic 功能集中不存在的新功能：</p><ul style="font-size: inherit;color: inherit;line-height: inherit;padding-left: 32px;" class="list-paddingleft-1"><li style="font-size: inherit;color: inherit;line-height: inherit;margin-bottom: 0.5em;"><p>新的重构，例如 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.jetbrains.com.cn%2Fhelp%2Fresharper%2FRefactorings_for_CPP.html%23intro_field" target="_blank" rel="noopener" style="font-size: inherit;line-height: inherit;color: rgb(30, 107, 184);" data-linktype="2">Introduce Field</a>（引入字段）、<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.jetbrains.com.cn%2Fhelp%2Fresharper%2FRefactorings_for_CPP.html%23namespace_alias" target="_blank" rel="noopener" style="font-size: inherit;line-height: inherit;color: rgb(30, 107, 184);" data-linktype="2">Introduce Namespace Alias</a>（引入命名空间别名）、<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.jetbrains.com.cn%2Fhelp%2Fresharper%2FRefactorings_for_CPP.html%23using_enum" target="_blank" rel="noopener" style="font-size: inherit;line-height: inherit;color: rgb(30, 107, 184);" data-linktype="2">Introduce using Enumeration</a>（引入 using 枚举），以及 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.jetbrains.com.cn%2Fhelp%2Fresharper%2FRefactorings_for_CPP.html%23convert_to_scoped" target="_blank" rel="noopener" style="font-size: inherit;line-height: inherit;color: rgb(30, 107, 184);" data-linktype="2">Convert to Scoped Enumeration</a>（转换为作用域枚举）。</p></li><li style="font-size: inherit;color: inherit;line-height: inherit;margin-bottom: 0.5em;"><p>新的检查、快速修复和意图，例如冗余限定符、将 <code style="font-size: inherit;line-height: inherit;padding: 2px 4px;border-radius: 4px;margin-right: 2px;margin-left: 2px;color: rgb(233, 105, 0);background: rgb(248, 248, 248);"><span style="color: rgb(0, 0, 0);">auto</span></code> 替换为显式类型声明，以及 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.jetbrains.com.cn%2Fhelp%2Fresharper%2FCode_Style_Assistance_in_CPP.html%23sort_includes" target="_blank" rel="noopener" style="font-size: inherit;line-height: inherit;" data-linktype="2"><code style="font-size: inherit;line-height: inherit;padding: 2px 4px;border-radius: 4px;margin-right: 2px;margin-left: 2px;color: rgb(233, 105, 0);background: rgb(248, 248, 248);"><span style="font-size: inherit;line-height: inherit;color: rgb(0, 0, 0);">#include</span></code> 指令的排序</a>。</p></li><li style="font-size: inherit;color: inherit;line-height: inherit;margin-bottom: 0.5em;"><p>新的代码提示，例如<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.jetbrains.com.cn%2Fhelp%2Fresharper%2FSettings_Inlay_Hints_CPP_Other.html%23preprocessor-directive" target="_blank" rel="noopener" style="font-size: inherit;line-height: inherit;color: rgb(30, 107, 184);" data-linktype="2">预处理程序指令提示</a>和 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.jetbrains.com.cn%2Fhelp%2Fresharper%2FInline_Parameter_Name_Hints.html%23push-to-hint-mode" target="_blank" rel="noopener" style="font-size: inherit;line-height: inherit;color: rgb(30, 107, 184);" data-linktype="2">Push-to-Hint 模式</a>。</p></li></ul><figure style="font-size: inherit;color: inherit;line-height: inherit;"><img class="rich_pages wxw-img" data-ratio="0.3648148148148148" src="https://oscimg.oschina.net/oscnet/d318a7be-02c5-4e1a-8569-3628ad96f760.png" data-type="png" data-w="1080" style="font-size: inherit;color: inherit;line-height: inherit;display: block;margin-right: auto;margin-left: auto;" title="include 排序" referrerpolicy="no-referrer"><figcaption style="line-height: inherit;margin-top: 10px;text-align: center;color: rgb(153, 153, 153);font-size: 0.7em;">
     include 排序 
   </figcaption></figure><p><span style="font-size: inherit;color: inherit;line-height: inherit;"><br></span></p><p><span style="font-size: inherit;color: inherit;line-height: inherit;"><br></span></p><section style="font-size: 16px;"><section style="margin-right: 0%;margin-left: 0%;text-align: left;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: top;padding-right: 10px;padding-left: 10px;background-color: rgb(12, 176, 199);"><section style="display: inline-block;vertical-align: middle;"><section style="display: inline-block;vertical-align: middle;color: rgb(215, 251, 255);padding-right: 2px;font-size: 19px;"><p><strong>显著差异</strong></p></section></section><section style="display: inline-block;vertical-align: middle;width: 0.8em;height: 0.8em;border-top: 0.2em solid rgb(215, 251, 255);border-right: 0.2em solid rgb(215, 251, 255);transform: rotate(45deg);"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section></section></section><p style="font-size: inherit;color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;">与 CLion Classic 不同，CLion Nova 不使用 <strong style="font-size: inherit;color: inherit;line-height: inherit;">clangd</strong> 来实现代码补全或高亮显示等核心 IDE 功能。不过，JetBrains 的 clangd 分支仍然与新引擎一起运行，用于各种任务（ClangFormat、Clang-Tidy、MISRA 检查、数据流分析等）。</p><p style="font-size: inherit;color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;">CLion Classic 用户开始使用 CLion Nova 时将获得的新体验：</p><ul style="font-size: inherit;color: inherit;line-height: inherit;padding-left: 32px;" class="list-paddingleft-1"><li style="font-size: inherit;color: inherit;line-height: inherit;margin-bottom: 0.5em;"><p><span style="font-size: inherit;color: inherit;line-height: inherit;">当用户输入时，IDE 的一些反应方式有所改变。</span></p></li><li style="font-size: inherit;color: inherit;line-height: inherit;margin-bottom: 0.5em;"><p><span style="font-size: inherit;color: inherit;line-height: inherit;">与代码洞察功能相关的某些 UI 元素和设置可能看起来不一样，或位于不常用的位置。</span></p></li><li style="font-size: inherit;color: inherit;line-height: inherit;margin-bottom: 0.5em;"><p><span style="font-size: inherit;color: inherit;line-height: inherit;">某些与代码相关的设置在 CLion Nova 中可能具有不同的默认值。首次启动时，CLion Nova 将从 CLion Classic 迁移一些项目特定和应用程序特定的设置，但不是全部。</span></p></li><li style="font-size: inherit;color: inherit;line-height: inherit;margin-bottom: 0.5em;"><p><span style="font-size: inherit;color: inherit;line-height: inherit;">在不同语言配置（例如， 调试/发布）之间切换可能需要更多时间让代码洞察引擎跟上进度。也没有选项用于切换每个文件的解析上下文。</span></p></li><li style="font-size: inherit;color: inherit;line-height: inherit;margin-bottom: 0.5em;"><p><span style="font-size: inherit;color: inherit;line-height: inherit;">ReSharper C++ 仅适用于 Windows，而 Rider 可跨平台。不过，ReSharper C++/Rider 引擎可能无法像对 Windows 那样无缝支持非 Windows 环境。如果您遇到这样的情况，请向我们报告。</span></p></li></ul><figure style="font-size: inherit;color: inherit;line-height: inherit;"><img class="rich_pages wxw-img" data-ratio="0.762962962962963" src="https://oscimg.oschina.net/oscnet/2b2c29f3-24fb-470d-9e9c-e38b20669042.png" data-type="png" data-w="1080" style="font-size: inherit;color: inherit;line-height: inherit;margin-right: auto;margin-left: auto;" title="类型转换提示设置" referrerpolicy="no-referrer"><figcaption style="line-height: inherit;margin-top: 10px;text-align: center;color: rgb(153, 153, 153);font-size: 0.7em;">
     类型转换提示设置 
   </figcaption></figure><p style="font-size: inherit;color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;">当前缺少的功能的列表：</p><ul style="font-size: inherit;color: inherit;line-height: inherit;padding-left: 32px;" class="list-paddingleft-1"><li style="font-size: inherit;color: inherit;line-height: inherit;margin-bottom: 0.5em;"><p><strong style="font-size: inherit;color: inherit;line-height: inherit;">工具链</strong>：在 CLion 中，可以通过多个选项设置<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.jetbrains.com.cn%2Fhelp%2Fclion%2F2023.3%2Fremote-development.html" target="_blank" rel="noopener" style="font-size: inherit;line-height: inherit;color: rgb(30, 107, 184);" data-linktype="2">远程工作</a>。CLion Nova 支持使用本地源进行远程工作，但使用瘦客户端（Gateway）的远程工作尚不可用。</p></li><li style="font-size: inherit;color: inherit;line-height: inherit;margin-bottom: 0.5em;"><p><strong style="font-size: inherit;color: inherit;line-height: inherit;">语言</strong>：Objective-C 语言、CUDA（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fyoutrack.jetbrains.com%2Fissue%2FRSCPP-613" target="_blank" rel="noopener" style="font-size: inherit;line-height: inherit;color: rgb(30, 107, 184);" data-linktype="2">RSCPP-613</a>、<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fyoutrack.jetbrains.com%2Fissue%2FCPP-26144" target="_blank" rel="noopener" style="font-size: inherit;line-height: inherit;color: rgb(30, 107, 184);" data-linktype="2">CPP-26144</a>）和某些针对特定供应商的编译器扩展程序还不受支持。</p></li><li style="font-size: inherit;color: inherit;line-height: inherit;margin-bottom: 0.5em;"><p><em style="font-size: inherit;color: inherit;line-height: inherit;">Simplify statement</em>（简化语句）等意图和快速修复目前还不受支持 (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fyoutrack.jetbrains.com%2Fissue%2FCPP-35879" target="_blank" rel="noopener" style="font-size: inherit;line-height: inherit;color: rgb(30, 107, 184);" data-linktype="2">CPP-35879</a>)。</p></li><li style="font-size: inherit;color: inherit;line-height: inherit;margin-bottom: 0.5em;"><p>一些不太热门的重构也未加入。我们计划以后重新引入 <em style="font-size: inherit;color: inherit;line-height: inherit;">Move</em>（移动）(<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fyoutrack.jetbrains.com%2Fissue%2FCPP-35867" target="_blank" rel="noopener" style="font-size: inherit;line-height: inherit;color: rgb(30, 107, 184);" data-linktype="2">CPP-35867</a>) 和 <em style="font-size: inherit;color: inherit;line-height: inherit;">Inline Parameter</em>（内联形参）重构 (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fyoutrack.jetbrains.com%2Fissue%2FCPP-35868" target="_blank" rel="noopener" style="font-size: inherit;line-height: inherit;color: rgb(30, 107, 184);" data-linktype="2">CPP-35868</a>)。</p></li><li style="font-size: inherit;color: inherit;line-height: inherit;margin-bottom: 0.5em;"><p><span style="font-size: inherit;color: inherit;line-height: inherit;">JetBrains 的 AI Assistant 尚不适用于 CLion Nova。</span></p></li></ul><p><span style="font-size: inherit;color: inherit;line-height: inherit;"><br></span></p><p><span style="font-size: inherit;color: inherit;line-height: inherit;"><br></span></p><section style="font-size: 16px;"><section style="margin-right: 0%;margin-left: 0%;text-align: left;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: top;padding-right: 10px;padding-left: 10px;background-color: rgb(12, 176, 199);"><section style="display: inline-block;vertical-align: middle;"><section style="display: inline-block;vertical-align: middle;color: rgb(215, 251, 255);padding-right: 2px;font-size: 19px;"><p><strong>如何安装 CLion Nova</strong></p></section></section><section style="display: inline-block;vertical-align: middle;width: 0.8em;height: 0.8em;border-top: 0.2em solid rgb(215, 251, 255);border-right: 0.2em solid rgb(215, 251, 255);transform: rotate(45deg);"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section></section></section><p style="font-size: inherit;color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;">CLion Nova 是免费的早期预览版，只能通过 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.jetbrains.com.cn%2Ftoolbox-app%2F" target="_blank" rel="noopener" style="font-size: inherit;line-height: inherit;color: rgb(30, 107, 184);" data-linktype="2">Toolbox App</a> 获取：</p><figure style="font-size: inherit;color: inherit;line-height: inherit;"><img class="rich_pages wxw-img" data-ratio="1.0327868852459017" src="https://oscimg.oschina.net/oscnet/65c5f047-8c38-49bd-8580-0957ee2b9c39.png" data-type="png" data-w="854" style="font-size: inherit;color: inherit;line-height: inherit;display: block;margin-right: auto;margin-left: auto;" title="Toolbox App" referrerpolicy="no-referrer"></figure><p style="font-size: inherit;color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;">CLion Nova 是抢先体验预览版，因此需要登录，但您可以免费使用，直到 CLion Nova 合并到 CLion 中。我们将定期通过 Toolbox App 发布 CLion Nova 更新。</p><p style="font-size: inherit;color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;"><strong>与 CLion Classic 相比，CLion Nova 具有响应更快的 UI、更好的整体 IDE 性能和更高的功能质量，特别是 C++ 代码重构。</strong>立即试用，并告诉我们您的想法！</p><p><span style="font-size: inherit;color: inherit;line-height: inherit;"><br></span></p><section style="font-size: 16px;"><section style="margin-right: 0%;margin-left: 0%;text-align: left;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: top;padding-right: 10px;padding-left: 10px;background-color: rgb(12, 176, 199);"><section style="display: inline-block;vertical-align: middle;"><section style="display: inline-block;vertical-align: middle;color: rgb(215, 251, 255);padding-right: 2px;font-size: 19px;"><p><strong>分享您的反馈</strong></p></section></section><section style="display: inline-block;vertical-align: middle;width: 0.8em;height: 0.8em;border-top: 0.2em solid rgb(215, 251, 255);border-right: 0.2em solid rgb(215, 251, 255);transform: rotate(45deg);"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section></section></section><p style="font-size: inherit;color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;">CLion Nova 标志着一个巨大变化，需要在多种环境中接受细致的测试。因此，我们需要您的帮助！鉴于您有多种环境和用例，我们希望您测试 CLion Nova 并与我们分享您的体验。</p><p style="font-size: inherit;color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;">我们特别感兴趣的是您对以下问题的想法：</p><ul style="font-size: inherit;color: inherit;line-height: inherit;padding-left: 32px;" class="list-paddingleft-1"><li style="font-size: inherit;color: inherit;line-height: inherit;margin-bottom: 0.5em;"><p><span style="font-size: inherit;color: inherit;line-height: inherit;">与 CLion Classic 相比，什么在 CLion Nova 中对您的项目效果更好？</span></p></li><li style="font-size: inherit;color: inherit;line-height: inherit;margin-bottom: 0.5em;"><p><span style="font-size: inherit;color: inherit;line-height: inherit;">什么中断了您的工作流并阻止您在 CLion Nova 中使用 IDE？这些中断是 CLion Nova 特有的，还是 CLion Classic 中也存在？</span></p></li></ul><p style="font-size: inherit;color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;">使用 CLion Nova 一段时间后，我们会请求您提交反馈表。希望您能抽出时间填写并提交反馈表！</p><figure style="font-size: inherit;color: inherit;line-height: inherit;"><img class="rich_pages wxw-img" data-ratio="0.6601851851851852" src="https://oscimg.oschina.net/oscnet/0128aea9-7303-4ade-9eb7-435b1e2707fc.png" data-type="png" data-w="1080" style="font-size: inherit;color: inherit;line-height: inherit;display: block;margin-right: auto;margin-left: auto;" title="反馈" referrerpolicy="no-referrer"></figure><p style="font-size: inherit;color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;">当然，我们的<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fyoutrack.jetbrains.com%2Fissues%2FCPP" target="_blank" rel="noopener" style="font-size: inherit;line-height: inherit;color: rgb(30, 107, 184);" data-linktype="2">问题跟踪器</a>也可以接收反馈，只是请注明您的问题与 CLion Nova 而不是 CLion Classic 有关。</p><section style="font-size: 16px;"><a title="https://www.jetbrains.com.cn/toolbox-app/" formlinkparm="[{&quot;href&quot;:&quot;https://www.jetbrains.com.cn/toolbox-app/&quot;}]" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.jetbrains.com.cn%2Ftoolbox-app%2F" target="_blank" rel="noopener noreferrer" powered-by="xiumi.us" data-linktype="2"><section style="margin-top: 0.5em;margin-bottom: 0.5em;text-align: center;"><section style="display: inline-block;border-radius: 5px;padding-right: 0.75em;padding-left: 0.75em;border-width: 1px;border-style: solid;border-color: rgba(0, 0, 0, 0.2);background-color: rgb(247, 247, 247);color: rgb(69, 69, 69);line-height: 1.9;font-size: 15px;"><p>通过 Toolbox App 获取</p></section></section></a></section><p style="font-size: inherit;color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;">您的 CLion 团队<br>JetBrains<br><em style="font-size: inherit;color: inherit;line-height: inherit;">The Drive to Develop</em></p></section><section style="font-size: 16px;"><section style="transform: perspective(0px);transform-style: flat;" powered-by="xiumi.us"><section style="margin-top: 10px;text-align: left;justify-content: flex-start;display: flex;flex-flow: row;transform: rotateY(180deg);"><section style="display: inline-block;width: 100%;vertical-align: top;border-left: 3px solid rgb(219, 219, 219);border-bottom-left-radius: 0px;padding-left: 8px;align-self: flex-start;flex: 0 0 auto;"><section style="transform: perspective(0px);transform-style: flat;" powered-by="xiumi.us"><section style="transform: rotateY(180deg);"><section style="color: rgb(125, 125, 125);font-size: 13px;text-align: right;"><p><strong>本博文英文原作者：Anastasia Kazakova</strong></p></section><grazie-editor-wrapper></grazie-editor-wrapper></section></section></section></section></section><section style="" powered-by="xiumi.us"><p style="text-wrap: wrap;"><br></p><grazie-editor-wrapper></grazie-editor-wrapper></section><section style="text-align: center;justify-content: center;display: flex;flex-flow: row;margin-top: 10px;margin-bottom: 20px;" powered-by="xiumi.us"><section style="display: inline-block;width: auto;vertical-align: top;align-self: flex-start;flex: 0 0 auto;border-style: solid;border-width: 1px;min-width: 5%;height: auto;box-shadow: rgb(12, 176, 199) 6px 6px 0px 0px;padding: 8px;"><section style="text-align: left;" powered-by="xiumi.us"><section style="text-align: justify;font-size: 17px;"><p style="text-wrap: wrap;"><strong>CLion 相关阅读</strong></p></section><grazie-editor-wrapper></grazie-editor-wrapper></section></section></section><a title="https://mp.weixin.qq.com/s?__biz=MzkwNDI5NzUyMQ==&amp;mid=2247496559&amp;idx=2&amp;sn=5eb355611f667a64838432ac4cb5129e&amp;chksm=c08b9e31f7fc172780f20ce7d3485fd7779f6461f8a5bc5adcc724e92304a287ea7f3d7c0709&amp;token=829715172&amp;lang=zh_CN&amp;scene=21#wechat_redirect" formlinkparm="[{&quot;href&quot;:&quot;https://mp.weixin.qq.com/s?__biz=MzkwNDI5NzUyMQ==&amp;mid=2247496559&amp;idx=2&amp;sn=5eb355611f667a64838432ac4cb5129e&amp;chksm=c08b9e31f7fc172780f20ce7d3485fd7779f6461f8a5bc5adcc724e92304a287ea7f3d7c0709&amp;token=829715172&amp;lang=zh_CN&amp;scene=21#wechat_redirect&quot;}]" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzkwNDI5NzUyMQ%3D%3D%26mid%3D2247496559%26idx%3D2%26sn%3D5eb355611f667a64838432ac4cb5129e%26chksm%3Dc08b9e31f7fc172780f20ce7d3485fd7779f6461f8a5bc5adcc724e92304a287ea7f3d7c0709%26token%3D829715172%26lang%3Dzh_CN%26scene%3D21%23wechat_redirect" target="_blank" rel="noopener noreferrer" powered-by="xiumi.us" data-linktype="1"><section style="text-align: center;margin-top: 10px;margin-bottom: 10px;line-height: 0;"><section style="vertical-align: middle;display: inline-block;line-height: 0;box-shadow: rgb(0, 0, 0) 2px 2px 8px -3px;border-radius: 5px;overflow: hidden;"><span class="js_jump_icon h5_image_link"><img class="rich_pages wxw-img" data-ratio="0.3037037037037037" data-s="300,640" src="https://oscimg.oschina.net/oscnet/a16279ec-e81d-4d66-9ed1-ad633d1ef51f.jpg" data-type="jpeg" data-w="1080" style="vertical-align: middle;width: 100%;" referrerpolicy="no-referrer"></span></section></section></a><a title="https://mp.weixin.qq.com/s?__biz=MzkwNDI5NzUyMQ==&amp;mid=2247504083&amp;idx=1&amp;sn=6f131091a5ffcd1b1135cbbaaff43764&amp;chksm=c08bbd8df7fc349b0e5f4542dab76b5f086a558209a95aff44294c68b138987720116b4b09fe&amp;token=141262335&amp;lang=zh_CN&amp;scene=21#wechat_redirect" formlinkparm="[{&quot;href&quot;:&quot;https://mp.weixin.qq.com/s?__biz=MzkwNDI5NzUyMQ==&amp;mid=2247504083&amp;idx=1&amp;sn=6f131091a5ffcd1b1135cbbaaff43764&amp;chksm=c08bbd8df7fc349b0e5f4542dab76b5f086a558209a95aff44294c68b138987720116b4b09fe&amp;token=141262335&amp;lang=zh_CN&amp;scene=21#wechat_redirect&quot;}]" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzkwNDI5NzUyMQ%3D%3D%26mid%3D2247504083%26idx%3D1%26sn%3D6f131091a5ffcd1b1135cbbaaff43764%26chksm%3Dc08bbd8df7fc349b0e5f4542dab76b5f086a558209a95aff44294c68b138987720116b4b09fe%26token%3D141262335%26lang%3Dzh_CN%26scene%3D21%23wechat_redirect" target="_blank" rel="noopener noreferrer" powered-by="xiumi.us" data-linktype="1"><section style="text-align: center;margin-top: 10px;margin-bottom: 10px;line-height: 0;"><section style="vertical-align: middle;display: inline-block;line-height: 0;box-shadow: rgb(0, 0, 0) 2px 2px 8px -3px;border-radius: 5px;overflow: hidden;"><span class="js_jump_icon h5_image_link"><img class="rich_pages wxw-img" data-ratio="0.3037037037037037" data-s="300,640" src="https://oscimg.oschina.net/oscnet/e6080d20-4fd6-4f42-82fc-8cfc81c80439.png" data-type="png" data-w="1080" style="vertical-align: middle;width: 100%;" referrerpolicy="no-referrer"></span></section></section></a><a title="https://mp.weixin.qq.com/s?__biz=MzkwNDI5NzUyMQ==&amp;mid=2247488552&amp;idx=1&amp;sn=325cd4dabc7b63d16e9f7751a6816685&amp;chksm=c0887976f7fff060f31afe600cd65226cf85af6d188193389a6f741a7005956abb724d58060b&amp;token=829715172&amp;lang=zh_CN&amp;scene=21#wechat_redirect" formlinkparm="[{&quot;href&quot;:&quot;https://mp.weixin.qq.com/s?__biz=MzkwNDI5NzUyMQ==&amp;mid=2247488552&amp;idx=1&amp;sn=325cd4dabc7b63d16e9f7751a6816685&amp;chksm=c0887976f7fff060f31afe600cd65226cf85af6d188193389a6f741a7005956abb724d58060b&amp;token=829715172&amp;lang=zh_CN&amp;scene=21#wechat_redirect&quot;}]" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzkwNDI5NzUyMQ%3D%3D%26mid%3D2247488552%26idx%3D1%26sn%3D325cd4dabc7b63d16e9f7751a6816685%26chksm%3Dc0887976f7fff060f31afe600cd65226cf85af6d188193389a6f741a7005956abb724d58060b%26token%3D829715172%26lang%3Dzh_CN%26scene%3D21%23wechat_redirect" target="_blank" rel="noopener noreferrer" powered-by="xiumi.us" data-linktype="1"><section style="text-align: center;margin-top: 10px;margin-bottom: 10px;line-height: 0;"><section style="vertical-align: middle;display: inline-block;line-height: 0;box-shadow: rgb(0, 0, 0) 2px 2px 8px -3px;border-radius: 5px;overflow: hidden;"><span class="js_jump_icon h5_image_link"><img class="rich_pages wxw-img" data-ratio="0.3037037037037037" data-s="300,640" src="https://oscimg.oschina.net/oscnet/13d205fa-9275-4939-aded-d97b3a582aa0.jpg" data-type="jpeg" data-w="1080" style="vertical-align: middle;width: 100%;" referrerpolicy="no-referrer"></span></section></section></a><section style="margin-top: 10px;margin-bottom: 10px;" powered-by="xiumi.us"><section style="box-shadow: rgb(170, 170, 170) 0px 0px 10px inset;border-color: rgb(192, 200, 209);padding: 10px 18px;border-width: 1px;border-style: solid;background-color: rgb(240, 244, 255);border-radius: 5px;overflow: hidden;"><section style="margin: 10px 0%;justify-content: flex-start;display: flex;flex-flow: row;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: middle;width: 38px;flex: 0 0 auto;height: auto;align-self: center;"><section style="text-align: center;margin-top: 10px;margin-bottom: 10px;line-height: 0;" powered-by="xiumi.us"><section style="vertical-align: middle;display: inline-block;line-height: 0;width: 38px;height: auto;"><img data-ratio="1" data-s="300,640" src="https://oscimg.oschina.net/oscnet/279e0629-2fa2-412a-8d50-5bcd12f491e5.png" data-type="png" data-w="1080" style="vertical-align: middle;width: 100%;" referrerpolicy="no-referrer"></section></section></section><section style="display: inline-block;vertical-align: middle;width: auto;min-width: 10%;flex: 0 0 auto;height: auto;align-self: center;margin-left: 10px;border-bottom: 3px solid rgb(0, 0, 0);border-bottom-right-radius: 0px;"><section style="" powered-by="xiumi.us"><section style="font-size: 19px;color: rgb(0, 0, 0);"><p style="text-wrap: wrap;"><strong>关于 CLion</strong></p></section><grazie-editor-wrapper></grazie-editor-wrapper></section></section></section><section style="" powered-by="xiumi.us"><section style="color: rgb(0, 0, 0);font-size: 15px;"><p style="text-wrap: wrap;"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzkwNDI5NzUyMQ%3D%3D%26mid%3D2247487178%26idx%3D2%26sn%3D6d95e4b411feb60da6108d3aee21d77d%26scene%3D21%23wechat_redirect" target="_blank" data-linktype="2"></a>CLion 是用于 Windows、Linux 和 macOS 上 C 或 C++开发的智能 IDE。CLion 了解现代 C++ 标准并提供预处理程序支持。它还集成了 GDB/LDB 和一套单元测试框架。&nbsp;</p></section><grazie-editor-wrapper></grazie-editor-wrapper></section><a title="https://www.jetbrains.com.cn/clion/" formlinkparm="[{&quot;href&quot;:&quot;https://www.jetbrains.com.cn/clion/&quot;}]" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.jetbrains.com.cn%2Fclion%2F" target="_blank" rel="noopener noreferrer" powered-by="xiumi.us" data-linktype="2"><section style="text-align: center;margin-top: 15px;margin-bottom: 7.5px;"><section style="display: inline-block;border-radius: 5px;line-height: 2.3;background-color: rgb(12, 176, 199);font-size: 15px;color: rgb(255, 247, 245);width: 100%;"><p><strong>进一步了解 CLion</strong></p></section><grazie-editor-wrapper></grazie-editor-wrapper></section></a></section></section><section style="text-align: left;justify-content: flex-start;display: flex;flex-flow: row;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;vertical-align: top;align-self: flex-start;flex: 0 0 auto;"><section style="text-align: center;margin-top: 10px;margin-bottom: 10px;line-height: 0;" powered-by="xiumi.us"><section style="vertical-align: middle;display: inline-block;line-height: 0;"><img class="rich_pages wxw-img" data-ratio="0.5" data-s="300,640" src="https://oscimg.oschina.net/oscnet/58ab6ef4-d590-4ee8-800e-872ee344e21e.png" data-type="png" data-w="1080" style="vertical-align: middle;width: 100%;" referrerpolicy="no-referrer"></section></section><section style="" powered-by="xiumi.us"><section style="font-size: 13px;color: rgb(125, 125, 125);text-align: justify;"><p style="text-wrap: wrap;"><strong>⏬ 戳「阅读原文」了解更多</strong></p></section></section></section></section></section><p style="display: none;"><mp-style-type data-value="3"></mp-style-type></p></div><p style="color: #858585; font-size: 13px;">本文分享自微信公众号 - JetBrains（JetBrainsChina）。<br>如有侵权，请联系 support@oschina.cn 删除。<br>本文参与「<a href="https://www.oschina.net/sharing-plan" target="_blank">OSC 源创计划</a>」，欢迎正在阅读的你也加入，一起分享。</p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 17 Nov 2023 08:27:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/5494143/blog/10143808</guid>
            <link>https://my.oschina.net/u/5494143/blog/10143808</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Fleet 推出 Kotlin Multiplatform 支持预览版，在单一 IDE 中开发 KMP 应用程序！]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="rich_media_content js_underline_content
                       defaultNoSetting
            " id="js_content"><section style="font-size: 15px;line-height: 1.6;letter-spacing: 0px;padding-right: 5px;padding-left: 0px;color: rgb(0, 0, 0);box-sizing: border-box;font-style: normal;font-weight: 400;text-align: justify;margin-bottom: 0px;" data-mpa-powered-by="yiban.io"><section style="text-align: left;justify-content: flex-start;display: flex;flex-flow: row;box-sizing: border-box;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;vertical-align: top;align-self: flex-start;flex: 0 0 auto;box-sizing: border-box;"><section style="justify-content: flex-start;display: flex;flex-flow: row;box-sizing: border-box;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;vertical-align: top;align-self: flex-start;flex: 0 0 auto;box-sizing: border-box;"><section style="margin: 30px 0% 10px;justify-content: flex-start;display: flex;flex-flow: row;box-sizing: border-box;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;vertical-align: top;background-color: rgb(237, 238, 242);align-self: flex-start;flex: 0 0 auto;box-sizing: border-box;"><section style="display: flex;width: 100%;flex-flow: column;box-sizing: border-box;" powered-by="xiumi.us"><section style="z-index: auto;box-sizing: border-box;" powered-by="xiumi.us"><section style="display: flex;flex-flow: row;justify-content: flex-start;transform: translate3d(18px, 0px, 0px);-webkit-transform: translate3d(18px, 0px, 0px);-moz-transform: translate3d(18px, 0px, 0px);-o-transform: translate3d(18px, 0px, 0px);margin: -16px 0% 0px;box-sizing: border-box;"><section style="display: inline-block;vertical-align: top;width: 15%;flex: 0 0 auto;height: auto;align-self: flex-start;box-sizing: border-box;"><section style="text-align: center;margin: -16px 0px 0px;line-height: 0;box-sizing: border-box;" powered-by="xiumi.us"><section style="max-width: 100%;vertical-align: middle;display: inline-block;line-height: 0;box-sizing: border-box;"><img class="rich_pages wxw-img" data-ratio="1" data-s="300,640" src="https://oscimg.oschina.net/oscnet/34d34a69-0c6b-4707-8aaf-d6aadb6b3d82.png" data-w="707" style="vertical-align: middle;max-width: 100%;width: 100%;box-sizing: border-box;" width="100%" referrerpolicy="no-referrer"></section></section></section><section style="display: inline-block;vertical-align: top;width: auto;flex: 0 0 auto;align-self: flex-start;min-width: 10%;max-width: 100%;height: auto;box-sizing: border-box;"><section style="transform: translate3d(5px, 0px, 0px);-webkit-transform: translate3d(5px, 0px, 0px);-moz-transform: translate3d(5px, 0px, 0px);-o-transform: translate3d(5px, 0px, 0px);box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: justify;color: rgb(115, 119, 173);padding: 0px 7px;line-height: 1.2;box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><span style="box-sizing: border-box;"><strong style="box-sizing: border-box;">记得加关注， Kotlin 之路不迷路！</strong></span></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: justify;font-size: 12px;color: rgb(221, 20, 100);line-height: 1.2;box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><span style="box-sizing: border-box;">&nbsp; &nbsp; Kotlinlang.org</span></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section></section></section></section></section></section></section></section></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: justify;box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section></section></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: unset;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;"><span style="color: rgb(120, 85, 245);box-sizing: border-box;"><strong style="box-sizing: border-box;">Kotlin Multiplatform&nbsp;(KMP) </strong></span>是 JetBrains 构建的开源技术，允许跨多个平台共享代码，同时保留了原生编程的优势。支持的平台包括 iOS、Android、桌面、Web 等。</p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: unset;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;">现在，我们在&nbsp;<span style="color: rgb(120, 85, 245);box-sizing: border-box;"><strong style="box-sizing: border-box;">Fleet</strong></span>&nbsp;中推出 <strong style="box-sizing: border-box;"><span style="color: rgb(120, 85, 245);box-sizing: border-box;">Kotlin Multiplatform 支持预览版</span></strong>，这将简化多平台应用程序开发，进一步丰富 <a target="_blank" href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4MzkxMzg3MQ%3D%3D%26mid%3D2247485165%26idx%3D1%26sn%3Dbf4b59d0544f2c35d812a997f0c4246c%26chksm%3Dcf41630df836ea1bb3b400a1dd49f30989fd569a59cc1e36e361834d90ce96fa30fa16d2f8e3%26scene%3D21%23wechat_redirect" textvalue="Fleet 中广泛的 Kotlin 支持" linktype="text" imgurl="" imgdata="null" data-itemshowtype="0" tab="innerlink" data-linktype="2">Fleet 中广泛的 Kotlin 支持</a>。请注意，如果您的目标是 iOS 和 macOS，则需要 Xcode。</p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="margin-top: 10px;margin-bottom: 10px;box-sizing: border-box;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;border-width: 1px;border-style: solid;border-color: rgb(120, 85, 245);padding: 10px;box-shadow: rgb(204, 204, 204) 0.2em 0.2em 0.3em;box-sizing: border-box;"><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><strong style="box-sizing: border-box;">由此开始 Fleet 中的 Kotlin Multiplatform 项目：</strong></p><p style="text-align: left;white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><span style="font-size: 14px;color: rgb(51, 122, 183);box-sizing: border-box;">https://www.jetbrains.com.cn/en-us/help/kotlin-multiplatform-dev/fleet.html</span></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section></section></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: unset;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;">我们来看看其中的部分功能。</p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="font-size: 18px;color: rgb(120, 85, 245);box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><strong style="box-sizing: border-box;">简洁</strong></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: unset;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;">打开多平台项目时，Fleet 将自动为 Android 和/或 iOS 平台创建运行配置，如项目构建文件中所声明。您可以使用它们在 Android 虚拟设备或 iOS 模拟器上执行应用程序。</p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="text-align: center;margin-top: 10px;margin-bottom: 10px;line-height: 0;box-sizing: border-box;" powered-by="xiumi.us"><section style="max-width: 100%;vertical-align: middle;display: inline-block;line-height: 0;box-sizing: border-box;"><img class="rich_pages wxw-img" data-ratio="0.3861111111111111" data-s="300,640" src="https://oscimg.oschina.net/oscnet/9a4b619d-4c02-4f6a-be57-936ee1dd0673.png" data-w="1080" style="vertical-align: middle;max-width: 100%;width: 100%;box-sizing: border-box;" width="100%" referrerpolicy="no-referrer"></section></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="font-size: 18px;color: rgb(120, 85, 245);box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><strong style="box-sizing: border-box;">多语言编程</strong></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: unset;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;">Fleet 是多语言 IDE，因此，在多平台项目中使用原生代码时，无需切换到不同的编辑器或牺牲实用性。编辑 Swift 代码时，您将获得与 Kotlin 和 Java 相同的丰富功能，以及对 Xcode 项目的完整支持。</p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="text-align: center;margin-top: 10px;margin-bottom: 10px;line-height: 0;box-sizing: border-box;" powered-by="xiumi.us"><section style="max-width: 100%;vertical-align: middle;display: inline-block;line-height: 0;box-sizing: border-box;"><img class="rich_pages wxw-img" data-ratio="0.5101851851851852" data-s="300,640" src="https://oscimg.oschina.net/oscnet/5507a1e6-80fb-4767-80a8-273863eea3a6.png" data-w="1080" style="vertical-align: middle;max-width: 100%;width: 100%;box-sizing: border-box;" width="100%" referrerpolicy="no-referrer"></section></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="font-size: 18px;color: rgb(120, 85, 245);box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><strong style="box-sizing: border-box;">代码导航</strong></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: unset;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;">Fleet 支持 Swift 与 Kotlin 之间的跨语言导航。例如，在 Kotlin 函数上使用 <strong>Show Usages</strong>（显示用法）操作时，Swift 代码中的任何调用都会在结果中显示。如果存在单个匹配项，则显示关联文件。</p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="text-align: center;margin-top: 10px;margin-bottom: 10px;line-height: 0;box-sizing: border-box;" powered-by="xiumi.us"><section style="max-width: 100%;vertical-align: middle;display: inline-block;line-height: 0;box-sizing: border-box;"><img class="rich_pages wxw-img" data-ratio="0.4137291280148423" data-s="300,640" src="https://oscimg.oschina.net/oscnet/23ef65b1-e657-4f85-b984-6c159563fc8e.gif" data-w="1078" style="vertical-align: middle;max-width: 100%;width: 100%;box-sizing: border-box;" width="100%" referrerpolicy="no-referrer"></section></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="font-size: 18px;color: rgb(120, 85, 245);box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><strong style="box-sizing: border-box;">重构</strong></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: unset;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;">Fleet 中的重构也是跨语言的。在下面的示例中，如果我们在 MainViewController 类型上使用 <strong>Rename</strong>（重命名）重构，那么重构将同时应用于 Kotlin 和 Swift 模块。</p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="text-align: center;margin-top: 10px;margin-bottom: 10px;line-height: 0;box-sizing: border-box;" powered-by="xiumi.us"><section style="max-width: 100%;vertical-align: middle;display: inline-block;line-height: 0;box-sizing: border-box;"><img class="rich_pages wxw-img" data-ratio="0.5384615384615384" data-s="300,640" src="https://oscimg.oschina.net/oscnet/f824138a-7238-4875-bf96-7eac80cd2df5.gif" data-w="1079" style="vertical-align: middle;max-width: 100%;width: 100%;box-sizing: border-box;" width="100%" referrerpolicy="no-referrer"></section></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="font-size: 18px;color: rgb(120, 85, 245);box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><strong style="box-sizing: border-box;">调试</strong></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: unset;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;">Fleet 中的调试也是跨语言的。您可以在 Swift 代码中设置断点，查看该环境中的值和调用堆栈，步入 Kotlin 调用，然后根据需要继续。</p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="text-align: center;margin-top: 10px;margin-bottom: 10px;line-height: 0;box-sizing: border-box;" powered-by="xiumi.us"><section style="max-width: 100%;vertical-align: middle;display: inline-block;line-height: 0;box-sizing: border-box;"><img class="rich_pages wxw-img" data-ratio="0.46574074074074073" data-s="300,640" src="https://oscimg.oschina.net/oscnet/b2105c54-0b6a-45b0-b389-439305f3d6a8.gif" data-w="1080" style="vertical-align: middle;max-width: 100%;width: 100%;box-sizing: border-box;" referrerpolicy="no-referrer"></section></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="text-align: center;justify-content: center;display: flex;flex-flow: row;margin: 10px 0px;box-sizing: border-box;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: middle;width: 48px;align-self: center;flex: 0 0 auto;height: auto;box-sizing: border-box;"><section style="margin-top: 10px;margin-bottom: 10px;line-height: 0;box-sizing: border-box;" powered-by="xiumi.us"><section style="max-width: 100%;vertical-align: middle;display: inline-block;line-height: 0;width: 80%;height: auto;box-sizing: border-box;"><img data-ratio="1" data-s="300,640" data-w="500" src="https://oscimg.oschina.net/oscnet/d2fa58f1-a075-427e-9dd1-57d1330762e7.png" style="vertical-align: middle;max-width: 100%;width: 100%;box-sizing: border-box;" width="100%" referrerpolicy="no-referrer"></section></section></section><section style="display: inline-block;vertical-align: middle;width: auto;align-self: center;flex: 100 100 0%;height: auto;padding: 0px 0px 0px 10px;box-sizing: border-box;"><section style="text-align: left;margin: 10px 0px 0px;box-sizing: border-box;" powered-by="xiumi.us"><section style="color: rgb(42, 8, 69);font-size: 22px;line-height: 1.2;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;"><strong style="box-sizing: border-box;">单一 IDE</strong></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="margin: 2px 0px 8px;box-sizing: border-box;" powered-by="xiumi.us"><section style="background-color: rgb(120, 85, 245);height: 1px;box-sizing: border-box;"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section></section></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: unset;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;">如您所知，创建 Kotlin Multiplatform 应用程序通常需要组合使用多个 IDE。以移动端为目标时，情况相同，因为需要 Android Studio 和 Xcode。不过，<strong>我们在 Fleet 上的目标是提供一个单一 IDE，让您可以在其中开发应用程序而无需切换工具</strong>（以 Apple 设备为目标时仍需安装 Xcode，日常工作则不需要）。</p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="text-align: center;justify-content: center;display: flex;flex-flow: row;margin: 10px 0px;box-sizing: border-box;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: middle;width: 48px;align-self: center;flex: 0 0 auto;height: auto;box-sizing: border-box;"><section style="margin-top: 10px;margin-bottom: 10px;line-height: 0;box-sizing: border-box;" powered-by="xiumi.us"><section style="max-width: 100%;vertical-align: middle;display: inline-block;line-height: 0;width: 80%;height: auto;box-sizing: border-box;"><img data-ratio="1" data-s="300,640" data-w="500" src="https://oscimg.oschina.net/oscnet/d2fa58f1-a075-427e-9dd1-57d1330762e7.png" style="vertical-align: middle;max-width: 100%;width: 100%;box-sizing: border-box;" width="100%" referrerpolicy="no-referrer"></section></section></section><section style="display: inline-block;vertical-align: middle;width: auto;align-self: center;flex: 100 100 0%;height: auto;padding: 0px 0px 0px 10px;box-sizing: border-box;"><section style="text-align: left;margin: 10px 0px 0px;box-sizing: border-box;" powered-by="xiumi.us"><section style="color: rgb(42, 8, 69);font-size: 22px;line-height: 1.2;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;"><strong style="box-sizing: border-box;">定价模型</strong></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="margin: 2px 0px 8px;box-sizing: border-box;" powered-by="xiumi.us"><section style="background-color: rgb(120, 85, 245);height: 1px;box-sizing: border-box;"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section></section></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: unset;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;"><strong>预览期间，Fleet（包括 Kotlin Multiplatform Tooling）将保持免费。</strong>发布 Kotlin Multiplatform Tooling 时，我们预计定价模型将与 Fleet 本身的定价模型保持一致。我们将在接近发布日期时提供更多信息。</p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="text-align: center;justify-content: center;display: flex;flex-flow: row;margin: 10px 0px;box-sizing: border-box;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: middle;width: 48px;align-self: center;flex: 0 0 auto;height: auto;box-sizing: border-box;"><section style="margin-top: 10px;margin-bottom: 10px;line-height: 0;box-sizing: border-box;" powered-by="xiumi.us"><section style="max-width: 100%;vertical-align: middle;display: inline-block;line-height: 0;width: 80%;height: auto;box-sizing: border-box;"><img data-ratio="1" data-s="300,640" data-w="500" src="https://oscimg.oschina.net/oscnet/d2fa58f1-a075-427e-9dd1-57d1330762e7.png" style="vertical-align: middle;max-width: 100%;width: 100%;box-sizing: border-box;" width="100%" referrerpolicy="no-referrer"></section></section></section><section style="display: inline-block;vertical-align: middle;width: auto;align-self: center;flex: 100 100 0%;height: auto;padding: 0px 0px 0px 10px;box-sizing: border-box;"><section style="text-align: left;margin: 10px 0px 0px;box-sizing: border-box;" powered-by="xiumi.us"><section style="color: rgb(42, 8, 69);font-size: 22px;line-height: 1.2;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;"><strong style="box-sizing: border-box;">我们对 IntelliJ IDEA&nbsp;</strong></p><p style="margin: 0px;padding: 0px;box-sizing: border-box;"><strong style="box-sizing: border-box;">和 IntelliJ 平台的承诺</strong></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="margin: 2px 0px 8px;box-sizing: border-box;" powered-by="xiumi.us"><section style="background-color: rgb(120, 85, 245);height: 1px;box-sizing: border-box;"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section></section></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: unset;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;">Fleet 使用适用于 Swift 的 IntelliJ 代码处理引擎和我们所有的 Kotlin 支持，因此，<strong>我们将继续在 IntelliJ IDEA 和 IntelliJ 平台（因此也包括 Android Studio）上提供对 Kotlin 的支持。</strong>此外，在 IntelliJ IDEA 中使用 Kotlin 的开发者数量不断增加，<strong>我们向您保证，我们将继续推动对此平台的创新和支持。</strong></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: unset;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;">话虽如此，IntelliJ IDEA 的目标受众仍将主要是以 JVM 为目标的服务器端开发者。虽然可以在 IntelliJ IDEA 和 Android Studio 中打开、导航和构建 Kotlin Multiplatform 项目，但其他功能（例如针对特定平台的运行配置、Compose Multiplatform 功能以及其他促进多平台开发的功能）将<strong>仅在 Fleet 中受支持</strong>。</p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="text-align: center;justify-content: center;display: flex;flex-flow: row;margin: 10px 0px;box-sizing: border-box;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: middle;width: 48px;align-self: center;flex: 0 0 auto;height: auto;box-sizing: border-box;"><section style="margin-top: 10px;margin-bottom: 10px;line-height: 0;box-sizing: border-box;" powered-by="xiumi.us"><section style="max-width: 100%;vertical-align: middle;display: inline-block;line-height: 0;width: 80%;height: auto;box-sizing: border-box;"><img data-ratio="1" data-s="300,640" data-w="500" src="https://oscimg.oschina.net/oscnet/d2fa58f1-a075-427e-9dd1-57d1330762e7.png" style="vertical-align: middle;max-width: 100%;width: 100%;box-sizing: border-box;" width="100%" referrerpolicy="no-referrer"></section></section></section><section style="display: inline-block;vertical-align: middle;width: auto;align-self: center;flex: 100 100 0%;height: auto;padding: 0px 0px 0px 10px;box-sizing: border-box;"><section style="text-align: left;margin: 10px 0px 0px;box-sizing: border-box;" powered-by="xiumi.us"><section style="color: rgb(42, 8, 69);font-size: 22px;line-height: 1.2;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;"><strong style="box-sizing: border-box;">如何开始</strong></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="margin: 2px 0px 8px;box-sizing: border-box;" powered-by="xiumi.us"><section style="background-color: rgb(120, 85, 245);height: 1px;box-sizing: border-box;"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section></section></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: unset;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;">要开始 Kotlin Multiplatform 开发并尝试我们的炫酷功能，您可以通过&nbsp;<strong style="box-sizing: border-box;">JetBrains Toolbox App</strong><sup style="font-size: 11px;box-sizing: border-box;">1</sup>&nbsp;安装最新版本的 Fleet。我们还有一个全新的<strong style="box-sizing: border-box;">在线 Web 向导</strong><sup style="box-sizing: border-box;">2</sup>，用于创建 Kotlin Multiplatform 项目。</p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: unset;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;">请务必查看<strong style="box-sizing: border-box;">适用于 </strong><strong style="box-sizing: border-box;">Kotlin Multiplatform 开发的 Fleet</strong><sup style="font-size: 11px;box-sizing: border-box;">3</sup>教程，获取创建您的第一个应用程序的分步指南。您还可以查看我们准备的一些&nbsp;<strong style="box-sizing: border-box;">KMP 示例应用程序</strong><sup style="font-size: 11px;box-sizing: border-box;">4</sup>。</p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="margin-top: 10px;margin-bottom: 10px;box-sizing: border-box;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;border-width: 1px;border-style: solid;border-color: rgb(120, 85, 245);padding: 10px;box-shadow: rgb(204, 204, 204) 0.2em 0.2em 0.3em;box-sizing: border-box;"><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><strong style="box-sizing: border-box;">由此开始 Fleet 中的 Kotlin Multiplatform 项目：</strong></p><p style="text-align: left;white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><span style="font-size: 14px;color: rgb(51, 122, 183);box-sizing: border-box;">https://www.jetbrains.com.cn/en-us/help/kotlin-multiplatform-dev/fleet.html</span></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section></section></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="text-align: center;justify-content: center;display: flex;flex-flow: row;margin: 10px 0px;box-sizing: border-box;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: middle;width: 48px;align-self: center;flex: 0 0 auto;height: auto;box-sizing: border-box;"><section style="margin-top: 10px;margin-bottom: 10px;line-height: 0;box-sizing: border-box;" powered-by="xiumi.us"><section style="max-width: 100%;vertical-align: middle;display: inline-block;line-height: 0;width: 80%;height: auto;box-sizing: border-box;"><img data-ratio="1" data-s="300,640" data-w="500" src="https://oscimg.oschina.net/oscnet/d2fa58f1-a075-427e-9dd1-57d1330762e7.png" style="vertical-align: middle;max-width: 100%;width: 100%;box-sizing: border-box;" width="100%" referrerpolicy="no-referrer"></section></section></section><section style="display: inline-block;vertical-align: middle;width: auto;align-self: center;flex: 100 100 0%;height: auto;padding: 0px 0px 0px 10px;box-sizing: border-box;"><section style="text-align: left;margin: 10px 0px 0px;box-sizing: border-box;" powered-by="xiumi.us"><section style="color: rgb(42, 8, 69);font-size: 22px;line-height: 1.2;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;"><strong style="box-sizing: border-box;">我们需要您的反馈</strong></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="margin: 2px 0px 8px;box-sizing: border-box;" powered-by="xiumi.us"><section style="background-color: rgb(120, 85, 245);height: 1px;box-sizing: border-box;"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section></section></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: unset;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;"><strong>Fleet 中的 Kotlin Multiplatform Tooling 还处于非常早期的阶段，我们希望听到您的反馈。</strong>让我们知道什么有效、什么无效、缺少什么，以及您不能没有什么。请在这篇博文下留言或使用我们的<strong style="box-sizing: border-box;">问题跟踪器</strong><sup style="box-sizing: border-box;">5</sup>。您还可以在 Kotlin Slack 的<strong style="box-sizing: border-box;">&nbsp;#fleet</strong><sup style="box-sizing: border-box;">6</sup>&nbsp;频道上分享您对 Kotlin Multiplatform（包括 Kotlin Multiplatform Tooling）的任何反馈。</p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: unset;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;">谢谢！</p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="margin-top: 10px;margin-bottom: 10px;box-sizing: border-box;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;border-width: 1px;border-style: solid;border-color: rgb(120, 85, 245);padding: 10px;box-shadow: rgb(204, 204, 204) 0.2em 0.2em 0.3em;box-sizing: border-box;"><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><strong style="box-sizing: border-box;">相关链接：</strong></p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: left;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;"><span style="font-size: 14px;box-sizing: border-box;">1. JetBrains Toolbox App：</span></p><p style="margin: 0px;padding: 0px;box-sizing: border-box;"><span style="font-size: 14px;color: rgb(51, 122, 183);box-sizing: border-box;">https://www.jetbrains.com.cn/fleet/download/</span></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: left;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;"><span style="font-size: 14px;box-sizing: border-box;">2. 在线 Web 向导：&nbsp;</span></p><p style="margin: 0px;padding: 0px;box-sizing: border-box;"><span style="font-size: 14px;color: rgb(51, 122, 183);box-sizing: border-box;">https://kmp.jetbrains.com/</span></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><span style="font-size: 14px;box-sizing: border-box;">3. 适用于 Kotlin Multiplatform 开发的 Fleet：</span></p><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><span style="font-size: 14px;color: rgb(51, 122, 183);box-sizing: border-box;">https://www.jetbrains.com.cn/help/kotlin-multiplatform-dev/fleet.html</span></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><span style="font-size: 14px;box-sizing: border-box;">4. KMP 示例应用程序：</span></p><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><span style="font-size: 14px;color: rgb(51, 122, 183);box-sizing: border-box;">https://kotlinlang.org/docs/multiplatform-mobile-samples.html</span></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><span style="font-size: 14px;box-sizing: border-box;">5. 问题跟踪器：</span></p><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><span style="font-size: 14px;color: rgb(51, 122, 183);box-sizing: border-box;">https://youtrack.jetbrains.com/issues/FL</span></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="box-sizing: border-box;"><p style="text-align: left;white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><span style="font-size: 14px;box-sizing: border-box;">6. #fleet:&nbsp;</span></p><p style="text-align: left;white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><span style="font-size: 14px;color: rgb(51, 122, 183);box-sizing: border-box;">https://slack-chats.kotlinlang.org/c/fleet</span></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section></section></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="margin: 10px 0% 8px;text-align: left;justify-content: flex-start;display: flex;flex-flow: row;box-sizing: border-box;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;vertical-align: top;border-left: 3px solid rgb(219, 219, 219);border-bottom-left-radius: 0px;padding: 0px 0px 0px 8px;align-self: flex-start;flex: 0 0 auto;box-sizing: border-box;"><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="color: rgba(0, 0, 0, 0.5);text-align: justify;font-size: 12px;box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><strong style="box-sizing: border-box;">本博文英文原作者：</strong></p><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><strong style="box-sizing: border-box;">Hadi Hariri</strong></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section></section></section><section style="text-align: left;justify-content: flex-start;display: flex;flex-flow: row;box-sizing: border-box;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;vertical-align: top;align-self: flex-start;flex: 0 0 auto;box-sizing: border-box;"><section style="margin: 10px 0% 0px;justify-content: flex-start;display: flex;flex-flow: row;box-sizing: border-box;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;vertical-align: top;background-position: 97.529% 66.6681%;background-repeat: repeat;background-size: 171.01%;background-attachment: scroll;align-self: flex-start;flex: 0 0 auto;height: auto;background-image: url(&quot;https://oscimg.oschina.net/oscnet/271f4c27-ea16-4f2d-a68d-14b00060ba7b.png&quot;);box-sizing: border-box;"><section style="text-align: justify;justify-content: flex-start;display: flex;flex-flow: row;box-sizing: border-box;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;vertical-align: top;padding: 26px;align-self: flex-start;flex: 0 0 auto;box-sizing: border-box;"><section style="margin: -9px 0px 7px;box-sizing: border-box;" powered-by="xiumi.us"><section style="font-size: 16px;color: rgb(248, 248, 248);box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><strong style="box-sizing: border-box;">这就是 Kotlin 编程语言</strong></p><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><strong style="box-sizing: border-box;">简洁、跨平台、且有趣！</strong></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="margin: 0px;box-sizing: border-box;" powered-by="xiumi.us"><section class="mp_profile_iframe_wrp" style="box-sizing: border-box;"><mp-common-profile class="js_uneditable custom_select_card mp_profile_iframe" data-id="Mzg4MzkxMzg3MQ==" data-pluginname="mpprofile" data-headimg="http://mmbiz.qpic.cn/mmbiz_png/y4ibuu6gd7d4NyzPduLLqtqddBasicL77gAgbLQD89CyYm1n7icODFhBr3xMoloOA7yicfjR8Bv0oaRP3CJuRLIO4Q/0?wx_fmt=png" data-nickname="Kotlin 开发者" data-alias="" data-signature="现代、简洁、安全的编程语言，由 JetBrains 打造。面向服务器、Android、Web 和原生平台，提供多种在平台间重用代码的方式以实现高效编程。官网：kotlinlang.org" data-from="0" data-is_biz_ban="0"></mp-common-profile></section></section><section style="text-align: center;margin: 7px 0px 0px;line-height: 0;box-sizing: border-box;" powered-by="xiumi.us"><section style="max-width: 100%;vertical-align: middle;display: inline-block;line-height: 0;width: 45%;height: auto;box-sizing: border-box;"><img class="rich_pages wxw-img" data-ratio="0.4119760479041916" data-s="300,640" src="https://oscimg.oschina.net/oscnet/da9c722b-a4ec-41ad-934c-525407224327.png" data-w="835" style="vertical-align: middle;max-width: 100%;width: 100%;box-sizing: border-box;" width="100%" referrerpolicy="no-referrer"></section></section></section></section></section></section></section></section></section><p style="display: none;margin-bottom: 0px;"><mp-style-type data-value="10000"></mp-style-type></p></div><p style="color: #858585; font-size: 13px;">本文分享自微信公众号 - JetBrains（JetBrainsChina）。<br>如有侵权，请联系 support@oschina.cn 删除。<br>本文参与「<a href="https://www.oschina.net/sharing-plan" target="_blank">OSC 源创计划</a>」，欢迎正在阅读的你也加入，一起分享。</p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 17 Nov 2023 08:26:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/5494143/blog/10143810</guid>
            <link>https://my.oschina.net/u/5494143/blog/10143810</link>
            <author>
                <![CDATA[JetBrains 中国]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[字节跳动：利用 AI 自动调优 Linux 内核参数]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">在近日举办的&nbsp;Linux Plumbers Conference 上提出，字节跳动&nbsp;Linux 内核工程师 <span style="background-color:#ffffff">Cong Wang&nbsp;</span>发表了一个「</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flpc.events%2Fevent%2F17%2Fcontributions%2F1520%2F" target="_blank">Linux Kernel Autotuning</a><span style="color:#000000">」的主题演讲，提议可以使用人工智能（AI）和机器学习（ML）来调整 Linux 内核，从而为特定工作负载带来效果最优化。</span></p><p><span style="color:#000000">他指出，现在的 Linux 内核为用户提供了数以千计的参数，因此想要通过调整参数以获得最佳性能已经变得越来越困难。大多数情况下，不同的工作负载需要对不同的 Linux 内核参数集进行不同的调整。</span></p><p><span style="color:#000000">而在像字节跳动这样的大型数据中心，要针对数百种不同的工作负载手动调整 Linux 内核参数几乎是不可能的。因此字节跳动提出了一个解决方案，尝试以最小的工程投入实现整个 Linux 内核参数调整过程的自动化。</span></p><blockquote><p><span style="color:#000000">我们还注意到，内存管理是 Linux 内核子系统中对自动调优的需求较多的一个。借助贝叶斯优化等机器学习算法，我们相信自动调优甚至可以击败大多数 Linux 内核工程师。在本次演讲中，我们将介绍 Linux 内核自动调整解决方案的工作原理以及其设计和架构的概述。我们还将研究 Linux 内核内存管理的一些特定案例，以展示我们的结果作为概念验证。</span></p><p><span style="color:#000000">对于未来的工作，我们希望利用这个机会提出并讨论一个内核内机器学习框架，该框架可以进一步推动这个项目，在内核空间中完全优化 Linux 内核快速路径。</span></p></blockquote><p><img height="293" src="https://oscimg.oschina.net/oscnet/up-c9b82884de3f323f768ac146d08acaeded9.png" width="700" referrerpolicy="no-referrer"></p><p><span style="color:#000000"><span style="background-color:#ffffff">Wang 打趣称</span>，此举并不是为了「让 Linux 内核工程师失业」，而是旨在将人类工程师从调整每个单独工作负载的性能的工作中解放出来，同时利用历史数据做出更好的决策，找到比目前使用试错和启发式方法得出的解决方案更好的解决方案。</span></p><p><span style="color:#000000">自动调整系统旨在根据特定的工作负载和硬件配置，自动调整 Linux 内核的内部设置。这种动态调整可确保最佳性能，解决 Linux 社区长期以来面临的一个针对特定场景手动调整内核的难题。</span></p><ul><li><span style="color:#000000">动态优化： 系统持续监控内核性能，对 CPU 频率缩放和内存管理等设置进行实时调整。</span></li><li><span style="color:#000000">提高效率： 通过优化资源使用，自动调整系统大大提高了 Linux 系统的效率，尤其是在不同工作负载的环境中。</span></li><li><span style="color:#000000">用户友好界面： 该系统包含一个用户友好界面，即使技术知识有限的用户也能从增强的内核性能中受益。</span></li><li><span style="color:#000000">可定制的设置： 高级用户可以自定义自动调整参数，</span><span style="color:#080a12">根据其特定需求定制系统。</span></li></ul><p><span style="color:#000000">虽然目前还处于早期阶段，但字节方面表示已经取得了一些进展。例如，通过将 DAMON（一个用于内存访问监控和优化的 Linux 内核子系统）与该框架结合使用，能够为 MySQL 应用程序找到最佳方案。为此，他们运行了不同的 DAMON 方案并对其性能进行了比较，发现可以将应用程序的内存使用量减少 30%。</span></p><p><span style="color:#000000">在另一项案例中，该公司通过优化调整 16 个内核 sysctl 参数，优化了 NGINX 服务器上的 HTTP 网络延迟。在最佳情况下，与专家手动调整相比，ML 调整使 NGNIX 网络性能提升了 12%。</span></p><p><span style="color:#000000">字节并未宣称其 AI/ML 方法适用于所有 Linux 调整工作，但工程师也表示：「虽然存在局限性，但我们相信内核机器学习不仅是可能的，而且是必要的。」</span></p><p><span style="color:#000000">科技媒体 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.zdnet.com%2Farticle%2Ftuning-the-linux-kernel-with-ai-according-to-bytedance%2F" target="_blank">ZDNet</a> 的编辑对字节此举表达了认可，并认为其可能改变 Linux 应用程序的游戏规则。「通过简化内核优化，将使 Linux 对更广泛的用户和应用程序来说更易用、更高效。特别是，我看到自动调整系统几乎可以提升所有服务器、云计算和数据中心应用的性能。」</span></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 17 Nov 2023 08:23:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266922/linux-kernel-ai-bytedance</guid>
            <link>https://www.oschina.net/news/266922/linux-kernel-ai-bytedance</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[FFmpeg 6.1 发布，7.0 时代即将来临]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="rich_media_content js_underline_content
                       autoTypeSetting24psection
            " id="js_content"><p><img class="rich_pages wxw-img" data-croporisrc="https://oscimg.oschina.net/oscnet/c25dbd9e-d477-45de-b2d1-cbc70d97d425.png" data-cropx1="0" data-cropx2="560" data-cropy1="79" data-cropy2="233" data-ratio="0.275" src="https://oscimg.oschina.net/oscnet/cff4bf1a-3b56-4508-bc04-b40d90f61cd4.jpg" data-type="jpeg" data-w="560" style="width: 560px;height: 154px;" referrerpolicy="no-referrer"></p><p style="margin: 0pt 0pt 16px;letter-spacing: 0.578px;text-wrap: wrap;font-family: 等线;font-size: 12pt;line-height: 1.6em;"><span style="font-family: 微软雅黑;letter-spacing: 0pt;vertical-align: baseline;">11 月 10 日，FFmpeg 6.1 正式发布。</span></p><section style="margin: 0pt 0pt 16px;letter-spacing: 0.578px;text-wrap: wrap;font-family: 等线;font-size: 12pt;line-height: 1.6em;"><span style="font-family: 微软雅黑;letter-spacing: 0pt;vertical-align: baseline;">FFmpeg 发布版本的时候，按照惯例，会选择一些物理学家名字作为代号，这一新版本代号为「Heaviside」。主要为纪念伟大的英国数学家和物理学家奥利弗·黑维塞（Oliver Heaviside)。</span></section><section style="margin: 0pt 0pt 16px;letter-spacing: 0.578px;text-wrap: wrap;font-family: 等线;font-size: 12pt;line-height: 1.6em;"><span style="font-family: 微软雅黑;letter-spacing: 0pt;vertical-align: baseline;">奥利弗·黑维塞（Oliver Heaviside) 自学成才，没有系统经历过高等教育，但在物理、数学、工程领域成果非凡，其名言一直为人所津津乐道。</span></section><blockquote class="js_blockquote_wrap" data-type="2" data-url="" data-author-name="" data-content-utf8-length="0" data-source-title="「数学分 2 种，严格的和物理直观化的。前者的范围窄；后者粗犷而广泛。拘泥于公式的严格证明只会令绝大多数的数学物理探究止步不前。难道我要在完全理解消化反应的所有机理以前，拒绝进食吗？」"><section class="blockquote_info js_blockquote_source" data-json="%7B%22type%22%3A%22out%22%2C%22source%22%3A%22url%22%2C%22digest%22%3A%22%22%2C%22digestLen%22%3A90%2C%22text%22%3A%22%E2%80%9C%E6%95%B0%E5%AD%A6%E5%88%862%E7%A7%8D%EF%BC%8C%E4%B8%A5%E6%A0%BC%E7%9A%84%E5%92%8C%E7%89%A9%E7%90%86%E7%9B%B4%E8%A7%82%E5%8C%96%E7%9A%84%E3%80%82%E5%89%8D%E8%80%85%E7%9A%84%E8%8C%83%E5%9B%B4%E7%AA%84%EF%BC%9B%E5%90%8E%E8%80%85%E7%B2%97%E7%8A%B7%E8%80%8C%E5%B9%BF%E6%B3%9B%E3%80%82%E6%8B%98%E6%B3%A5%E4%BA%8E%E5%85%AC%E5%BC%8F%E7%9A%84%E4%B8%A5%E6%A0%BC%E8%AF%81%E6%98%8E%E5%8F%AA%E4%BC%9A%E4%BB%A4%E7%BB%9D%E5%A4%A7%E5%A4%9A%E6%95%B0%E7%9A%84%E6%95%B0%E5%AD%A6%E7%89%A9%E7%90%86%E6%8E%A2%E7%A9%B6%E6%AD%A2%E6%AD%A5%E4%B8%8D%E5%89%8D%E3%80%82%E9%9A%BE%E9%81%93%E6%88%91%E8%A6%81%E5%9C%A8%E5%AE%8C%E5%85%A8%E7%90%86%E8%A7%A3%E6%B6%88%E5%8C%96%E5%8F%8D%E5%BA%94%E7%9A%84%E6%89%80%E6%9C%89%E6%9C%BA%E7%90%86%E4%BB%A5%E5%89%8D%EF%BC%8C%E6%8B%92%E7%BB%9D%E8%BF%9B%E9%A3%9F%E5%90%97%EF%BC%9F%E2%80%9D%22%2C%22article%22%3A%7B%7D%2C%22hasReportOverSize%22%3Afalse%2C%22editorReportData%22%3A%5B%7B%22id%22%3A%22122333%22%2C%22key%22%3A%2276%22%2C%22len%22%3A1%7D%5D%2C%22from%22%3A%22%E2%80%9C%E6%95%B0%E5%AD%A6%E5%88%862%E7%A7%8D%EF%BC%8C%E4%B8%A5%E6%A0%BC%E7%9A%84%E5%92%8C%E7%89%A9%E7%90%86%E7%9B%B4%E8%A7%82%E5%8C%96%E7%9A%84%E3%80%82%E5%89%8D%E8%80%85%E7%9A%84%E8%8C%83%E5%9B%B4%E7%AA%84%EF%BC%9B%E5%90%8E%E8%80%85%E7%B2%97%E7%8A%B7%E8%80%8C%E5%B9%BF%E6%B3%9B%E3%80%82%E6%8B%98%E6%B3%A5%E4%BA%8E%E5%85%AC%E5%BC%8F%E7%9A%84%E4%B8%A5%E6%A0%BC%E8%AF%81%E6%98%8E%E5%8F%AA%E4%BC%9A%E4%BB%A4%E7%BB%9D%E5%A4%A7%E5%A4%9A%E6%95%B0%E7%9A%84%E6%95%B0%E5%AD%A6%E7%89%A9%E7%90%86%E6%8E%A2%E7%A9%B6%E6%AD%A2%E6%AD%A5%E4%B8%8D%E5%89%8D%E3%80%82%E9%9A%BE%E9%81%93%E6%88%91%E8%A6%81%E5%9C%A8%E5%AE%8C%E5%85%A8%E7%90%86%E8%A7%A3%E6%B6%88%E5%8C%96%E5%8F%8D%E5%BA%94%E7%9A%84%E6%89%80%E6%9C%89%E6%9C%BA%E7%90%86%E4%BB%A5%E5%89%8D%EF%BC%8C%E6%8B%92%E7%BB%9D%E8%BF%9B%E9%A3%9F%E5%90%97%EF%BC%9F%E2%80%9D%22%7D"><span class="blockquote_other">「数学分 2 种，严格的和物理直观化的。前者的范围窄；后者粗犷而广泛。拘泥于公式的严格证明只会令绝大多数的数学物理探究止步不前。难道我要在完全理解消化反应的所有机理以前，拒绝进食吗？」</span></section></blockquote><blockquote class="js_blockquote_wrap" data-type="2" data-url="" data-author-name="" data-content-utf8-length="0" data-source-title="Mathematics is of two kinds, Rigorous and Physical. The former is Narrow: the latter Bold and Broad. To have to stop to formulate rigorous demonstrations would put a stop to most physico-mathematical inquiries. Am I to refuse to eat because I do not fully understand the mechanism of digestion?"><section class="blockquote_info js_blockquote_source" data-json="%7B%22type%22%3A%22out%22%2C%22source%22%3A%22url%22%2C%22digest%22%3A%22%22%2C%22digestLen%22%3A296%2C%22text%22%3A%22%EF%BC%88Mathematics%C2%A0is%C2%A0of%C2%A0two%C2%A0kinds%2C%C2%A0Rigorous%C2%A0and%C2%A0Physical.%C2%A0The%C2%A0former%C2%A0is%C2%A0Narrow%3A%C2%A0the%C2%A0latter%C2%A0Bold%C2%A0and%C2%A0Broad.%C2%A0To%C2%A0have%C2%A0to%C2%A0stop%C2%A0to%C2%A0formulate%C2%A0rigorous%C2%A0demonstrations%C2%A0would%C2%A0put%C2%A0a%C2%A0stop%C2%A0to%C2%A0most%C2%A0physico-mathematical%C2%A0inquiries.%C2%A0Am%C2%A0I%C2%A0to%C2%A0refuse%C2%A0to%C2%A0eat%C2%A0because%C2%A0I%C2%A0do%C2%A0not%C2%A0fully%C2%A0understand%C2%A0the%C2%A0mechanism%C2%A0of%C2%A0digestion%3F%EF%BC%89%22%2C%22article%22%3A%7B%7D%2C%22hasReportOverSize%22%3Afalse%2C%22editorReportData%22%3A%5B%7B%22id%22%3A%22122333%22%2C%22key%22%3A%2276%22%2C%22len%22%3A1%7D%5D%2C%22from%22%3A%22Mathematics%20is%20of%20two%20kinds%2C%20Rigorous%20and%20Physical.%20The%20former%20is%20Narrow%3A%20the%20latter%20Bold%20and%20Broad.%20To%20have%20to%20stop%20to%20formulate%20rigorous%20demonstrations%20would%20put%20a%20stop%20to%20most%20physico-mathematical%20inquiries.%20Am%20I%20to%20refuse%20to%20eat%20because%20I%20do%20not%20fully%20understand%20the%20mechanism%20of%20digestion%3F%22%7D"><span class="blockquote_other">Mathematics is of two kinds, Rigorous and Physical. The former is Narrow: the latter Bold and Broad. To have to stop to formulate rigorous demonstrations would put a stop to most physico-mathematical inquiries. Am I to refuse to eat because I do not fully understand the mechanism of digestion?</span></section></blockquote><p style="margin: 0pt 0pt 24px;letter-spacing: 0.578px;text-wrap: wrap;font-family: 等线;font-size: 12pt;text-align: left;line-height: 1.6em;"><span style="font-family: 微软雅黑;letter-spacing: 0pt;vertical-align: baseline;">大佬的详细生平见</span><span style="font-size: 16px;text-wrap: wrap;font-family: 微软雅黑;letter-spacing: 0pt;vertical-align: baseline;color: rgb(0, 122, 170);"><strong><strong>奥利弗·黑维塞</strong></strong></span></p><p><strong style="font-family: 等线;font-size: 12pt;text-wrap: wrap;letter-spacing: 0.034em;"><span style="font-family: 微软雅黑;letter-spacing: 0pt;vertical-align: baseline;color: rgb(0, 122, 170);">FFmpeg 此次发布重要信息包含以下几点：</span></strong></p><p><span style="font-family: 微软雅黑;letter-spacing: 0pt;vertical-align: baseline;color: rgb(0, 0, 0);"><span style="vertical-align: baseline;font-size: 16px;letter-spacing: 0.578px;text-indent: -22.4px;text-wrap: wrap;font-family: 微软雅黑;">1.&nbsp;</span><span style="font-size: 16px;text-wrap: wrap;text-indent: -22pt;font-family: 微软雅黑;letter-spacing: 0pt;vertical-align: baseline;">支持增强版本的 RTMP/FLV，主要支持了 HEVC、VP9、AV1 等编解码格式。由于 Adobe 已经停止 RTMP 维护更新，这导致许多公司都在通过私有的方式支持新的视频编码格式。FFmpeg 这次官方支持，长期看有可能统一混乱的私有方案，但在短期内也会增加混乱与工作量，因为企业不得不同时维护私有和开放多套标准。诚如著名的网络漫画网站 https://xkcd.com/927/而言，我们又多了一个标准。</span></span></p><p style="text-align: center;"><img class="rich_pages wxw-img" data-galleryid="" data-ratio="0.5662337662337662" data-s="300,640" src="https://oscimg.oschina.net/oscnet/970365fa-75de-4f0f-89ba-ea65c99da75c.png" data-type="png" data-w="770" style="" referrerpolicy="no-referrer"></p><p><span style="color: rgb(0, 0, 0);font-size: 16px;text-wrap: wrap;text-indent: -22pt;font-family: 微软雅黑;letter-spacing: 0pt;vertical-align: baseline;">2.对新一代编码标准 VVC 和 MPEG-5 EVC (Essential Video Coding) 的 parser, muxer ，demuxer 以及 bsf 的支持。FFmpeg 社区一直在积极开发原生的 VVC 的 decoder，目前看，容器格式和 bit stream 相关的支持已经初步完成，让我们等待它原生的 VVC 解码器被合并；另一方面，MPEG-5 EVC 相关的支持工作也在积极的进行，只是其编解码器以第三方库的方式支持（</span><span style="font-size: 16px;text-wrap: wrap;text-indent: -22pt;font-family: 微软雅黑;letter-spacing: 0pt;vertical-align: baseline;color: rgb(0, 122, 170);">https://github.com/mpeg5</span><span style="color: rgb(0, 0, 0);font-size: 16px;text-wrap: wrap;text-indent: -22pt;font-family: 微软雅黑;letter-spacing: 0pt;vertical-align: baseline;">）。</span></p><p style="text-align: justify;"><span style="color: rgb(0, 0, 0);font-family: 微软雅黑;font-size: 16px;letter-spacing: 0pt;text-indent: -22pt;">3.FFmpeg 重新实现了自己的 FFT，用于其内部编解码器和滤波器的 FFT、MDCT、DCT 和 DST 实现已经完全被更快的 libavutil/tx 所取代；这个改动一方面带来速度上面的收益，另外一方面，也使得库的大小大为减小。</span></p><p style="text-align: justify;"><span style="font-size: 12pt;color: rgb(0, 0, 0);font-family: 微软雅黑;letter-spacing: 0pt;text-indent: -22pt;">4.硬件加速继续迭代。一方面，FFmpeg 已经支持了基于 Vulkan 的解码（当然，如同大多数硬件加速一样，它要在一定的限制条件下才能使用）。另外，也进一步支持了基于 VAAP 的 AV1 编码。说到 VAAPI，最让人吃惊的莫过于，FFmpeg 通过 libva-win32 项目，可以在 WIndows 上使用 FFmpeg VAAPI 的相关功能，这要感谢微软的工程师们在 WIndows 上的 WSL 项目上的努力。</span></p><p style="margin: 0pt 0pt 16px 16.8pt;letter-spacing: 0.578px;text-wrap: wrap;font-family: 等线;font-size: 12pt;text-indent: -16.8pt;line-height: 1.6em;"><strong style="letter-spacing: 0.034em;"><span style="font-family: 微软雅黑;letter-spacing: 0pt;vertical-align: baseline;color: rgb(0, 122, 170);">具体</span></strong><strong><span style="text-indent: -22pt;font-family: 微软雅黑;letter-spacing: 0pt;vertical-align: baseline;color: rgb(0, 122, 170);">改进</span></strong><strong style="letter-spacing: 0.034em;"><span style="font-family: 微软雅黑;letter-spacing: 0pt;vertical-align: baseline;color: rgb(0, 122, 170);">亮点如下：</span></strong><br></p><ul class="list-paddingleft-1" style="width: 577.42px;letter-spacing: 0.578px;text-wrap: wrap;"><li style="font-size: 16px;"><section style="margin: 0pt;font-family: 等线;font-size: 12pt;line-height: 1.5em;"><span style="text-indent: -22pt;font-family: 微软雅黑;letter-spacing: 0pt;vertical-align: baseline;">libaribcaption 译码器<br></span></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等线;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span data-font-family="&quot;微软雅黑&quot;,sans-serif" style="font-family: 微软雅黑;letter-spacing: 0pt;vertical-align: baseline;">Playdate&nbsp;视频&nbsp;Decoder&nbsp;和&nbsp;Demuxer</span><o:p></o:p></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等线;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="font-family: 微软雅黑;letter-spacing: 0pt;vertical-align: baseline;">在 Windows 上扩展对 libva-win32 的 VAAPI 支持</span></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等线;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="text-indent: -22pt;font-family: 微软雅黑;letter-spacing: 0pt;vertical-align: baseline;">命令行新增选项:-readrate_initial_burst</span></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等线;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="font-family: 微软雅黑;letter-spacing: 0pt;text-indent: -22pt;">arls&nbsp;音频滤镜</span></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等线;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="font-family: 微软雅黑;letter-spacing: 0pt;text-indent: -22pt;">setts 和 asetpts 过滤器中的命令支持</span></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等线;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="font-family: 微软雅黑;letter-spacing: 0pt;text-indent: -22pt;">Vulkan 解码 hwaccel，支持 H264、HEVC 和 AV1</span></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等线;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="font-family: 微软雅黑;letter-spacing: 0pt;text-indent: -22pt;">color_vulkan 过滤器</span></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等线;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="font-family: 微软雅黑;letter-spacing: 0pt;text-indent: -22pt;">bwdif_vulkan 过滤器</span></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等线;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="text-indent: -22pt;font-family: 微软雅黑;letter-spacing: 0pt;vertical-align: baseline;">nlmeans_vulkan 过滤器</span></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等线;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="font-family: 微软雅黑;letter-spacing: 0pt;text-indent: -22pt;">RivaTuner 视频解码器</span></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等线;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="text-indent: -22pt;font-family: 微软雅黑;letter-spacing: 0pt;vertical-align: baseline;">xfade_vulkan 过滤器</span></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等线;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="font-family: 微软雅黑;letter-spacing: 0pt;text-indent: -22pt;">vMix 视频解码器</span></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等线;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="font-family: 微软雅黑;letter-spacing: 0pt;text-indent: -22pt;">基本视频编码解析器，混音器和解音器</span></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等线;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="font-family: 微软雅黑;letter-spacing: 0pt;text-indent: -22pt;">基本视频编码帧合并 bsf</span></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等线;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="font-family: 微软雅黑;letter-spacing: 0pt;text-indent: -22pt;">bwdif_cuda 过滤器</span></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等线;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="font-family: 微软雅黑;letter-spacing: 0pt;text-indent: -22pt;">微软 RLE 视频编码器</span></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等线;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="font-family: 微软雅黑;letter-spacing: 0pt;text-indent: -22pt;">原始 AC-4 混频器和解混频器</span></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等线;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="font-family: 微软雅黑;letter-spacing: 0pt;text-indent: -22pt;">原始的 VVC 比特流解析器，复用器和解复用器</span></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等线;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="font-family: 微软雅黑;letter-spacing: 0pt;text-indent: -22pt;">位流过滤器用于编辑 VVC 流中的元数据</span></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等线;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="font-family: 微软雅黑;letter-spacing: 0pt;text-indent: -22pt;">比特流过滤器转换 VVC 从 MP4 到 Annex&nbsp;B</span></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等线;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="text-indent: -22pt;font-family: 微软雅黑;letter-spacing: 0pt;vertical-align: baseline;">videotoolbox 的 Scale_vt 过滤器</span></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等线;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="font-family: 微软雅黑;letter-spacing: 0pt;text-indent: -22pt;">videotoolbox 的 transpse_vt 过滤器</span></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等线;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="font-family: 微软雅黑;letter-spacing: 0pt;text-indent: -22pt;">支持 P_SKIP 提示以加速 libx264 编码</span></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等线;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="text-indent: -22pt;font-family: 微软雅黑;letter-spacing: 0pt;vertical-align: baseline;">支持 HEVC、VP9、AV1 编解码器，增强 flv 格式</span></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等线;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="font-family: 微软雅黑;letter-spacing: 0pt;text-indent: -22pt;">Apsnr 和 asisdr 音频滤波器</span></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等线;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="font-family: 微软雅黑;letter-spacing: 0pt;text-indent: -22pt;">OSQ 解码器和编码器</span></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等线;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="text-indent: -22pt;font-family: 微软雅黑;letter-spacing: 0pt;vertical-align: baseline;">在增强的 RTMP 协议中支持 HEVC、VP9、AV1 编解码器</span></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等线;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="font-family: 微软雅黑;letter-spacing: 0pt;text-indent: -22pt;">CRI&nbsp;USM 解混器</span></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等线;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="font-family: 微软雅黑;letter-spacing: 0pt;text-indent: -22pt;">ffmpeg 命令行'-top'选项已弃用，取而代之的是 setfield 过滤器</span></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等线;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="font-family: 微软雅黑;letter-spacing: 0pt;text-indent: -22pt;">AV1 编码器</span></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等线;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="text-indent: -22pt;font-family: 微软雅黑;letter-spacing: 0pt;vertical-align: baseline;">ffprobe&nbsp;XML 输出模式更改为考虑同一父元素中的多个变量字段元素</span></section></li><li style="font-size: 16px;"><p style="margin: 0pt 0pt 16px 22pt;font-family: 等线;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="text-indent: -22pt;font-family: 微软雅黑;letter-spacing: 0pt;vertical-align: baseline;">Ffprobe&nbsp;-output_format 选项作为-of 的别名添加</span></p></li></ul><section><strong style="font-family: 等线;font-size: 12pt;text-wrap: wrap;letter-spacing: 0.034em;"><span style="font-family: 微软雅黑;letter-spacing: 0pt;vertical-align: baseline;color: rgb(0, 122, 170);">除去这些特性，FFmpeg 内部也有一些优化，包含了：</span></strong></section><ul class="list-paddingleft-1" style="width: 577.42px;letter-spacing: 0.578px;text-wrap: wrap;"><li><p style="margin: 0pt 0pt 0pt 22pt;font-family: 等线;font-size: 12pt;text-indent: -22pt;line-height: 1.6em;"><span style="font-family: 微软雅黑;letter-spacing: 0pt;text-indent: -22pt;">在视频解码器中大幅减少内存分配，从而降低内存等开销</span></p></li><li><p style="margin: 0pt 0pt 0pt 22pt;font-family: 等线;font-size: 12pt;text-indent: -22pt;line-height: 1.6em;"><span style="text-indent: -22pt;font-family: 微软雅黑;letter-spacing: 0pt;vertical-align: baseline;">对&nbsp;DSP&nbsp;代码的许多部分进行了&nbsp;RISC-V&nbsp;优化，针对常用解码器已经被合并</span><o:p></o:p></p></li><li><section style="margin: 0pt 0pt 16px 22pt;font-family: 等线;font-size: 12pt;text-indent: -22pt;line-height: 1.6em;"><span style="text-indent: -22pt;font-family: 微软雅黑;letter-spacing: 0pt;vertical-align: baseline;">提高每个数据包的时间戳和帧持续时间的正确性，从而提升变帧率视频的支持</span></section></li></ul><p style="margin: 0pt 0pt 16px;letter-spacing: 0.578px;text-wrap: wrap;font-family: 等线;font-size: 12pt;line-height: 1.6em;"><span style="text-indent: -22pt;font-family: 微软雅黑;letter-spacing: 0pt;vertical-align: baseline;">下一个主要版本将是 7.0 版本，按照计划，将在 2024 年 2 月份发布。FFmpeg 最近这些年，虽然也经历了一些波折，但发展并未停滞，相反越来越迅速，而我们也即将迎来 FFmpeg 7.0 的大版本。</span></p><p style="margin-bottom: 0px;letter-spacing: 0.578px;text-wrap: wrap;"><span style="letter-spacing: 0.034em;font-size: 14px;color: rgb(0, 0, 0);">Reference:</span></p><p style="margin: 3pt 0pt;letter-spacing: 0.578px;text-wrap: wrap;font-family: 等线;font-size: 12pt;line-height: 1.6em;"><strong><span style="letter-spacing: 0pt;vertical-align: baseline;font-size: 14px;color: rgb(0, 122, 170);">https://ffmpeg.org/index.html%23pr6.1</span></strong></p><section style="margin: 3pt 0pt;letter-spacing: 0.578px;text-wrap: wrap;font-family: 等线;font-size: 12pt;line-height: 1.6em;"><strong><span style="letter-spacing: 0pt;vertical-align: baseline;font-size: 14px;color: rgb(0, 122, 170);">https://github.com/veovera/enhanced-rtmp/blob/main/enhanced-rtmp.pdf</span></strong><span style="text-decoration: underline;"><strong><span style="font-size: 14px;color: rgb(0, 122, 170);"><o:p></o:p></span></strong></span></section><p style="margin: 3pt 0pt 8px;letter-spacing: 0.578px;text-wrap: wrap;font-family: 等线;font-size: 12pt;line-height: 1.6em;"><strong><span style="letter-spacing: 0pt;vertical-align: baseline;font-size: 14px;color: rgb(0, 122, 170);">https://devblogs.microsoft.com/directx/video-acceleration-api-va-api-now-available-on-windows/</span></strong><span style="font-size: 14px;color: rgb(0, 122, 170);"><o:p></o:p></span></p><section style="letter-spacing: 0.578px;text-wrap: wrap;"><span style="font-family: 微软雅黑;font-size: 14px;letter-spacing: 0pt;text-indent: -22pt;">*&nbsp;感谢赵军老师对本篇文章的技术审校。</span></section><span id="OSC_h1_1"></span><h1 style="margin-bottom: 14px;font-size: 22px;text-wrap: wrap;outline: 0px;line-height: 1.4;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-align: start;background-color: rgb(255, 255, 255);"><strong><span style="font-size: 16px;color: rgb(0, 122, 170);">10 天倒计时！深圳站大会亮点前瞻！</span></strong></h1><p style="text-align: center;"><img class="rich_pages wxw-img" data-galleryid="" data-ratio="4.072222222222222" data-s="300,640" src="https://oscimg.oschina.net/oscnet/11da6aa5-0cbd-4b2c-ade4-dffc56e84fd1.jpg" data-type="jpeg" data-w="1080" style="" referrerpolicy="no-referrer"></p><section style="letter-spacing: 0.578px;text-wrap: wrap;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);font-size: 16px;"><section style="outline: 0px;"><section style="outline: 0px;"><section powered-by="xiumi.us" style="outline: 0px;text-align: center;line-height: 0;"><section style="margin-top: 8px;outline: 0px;"><span style="outline: 0px;letter-spacing: normal;caret-color: rgba(0, 0, 0, 0.9);font-size: 14px;color: rgb(136, 136, 136);visibility: visible;"><em style="outline: 0px;visibility: visible;"><em style="outline: 0px;color: rgb(34, 34, 34);font-family: -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.4352px;caret-color: rgb(51, 51, 51);visibility: visible;"><span style="outline: 0px;color: rgb(26, 26, 26);font-family: PingFangTC-Light;visibility: visible;">▲</span></em></em><em style="outline: 0px;visibility: visible;">点击</em></span><span style="outline: 0px;color: rgb(56, 115, 139);"><span style="outline: 0px;letter-spacing: normal;caret-color: rgba(0, 0, 0, 0.9);font-size: 14px;visibility: visible;"><em style="outline: 0px;visibility: visible;">「</em></span><strong style="outline: 0px;caret-color: rgba(0, 0, 0, 0.9);font-size: var(--articleFontsize);letter-spacing: 0.544px;visibility: visible;"><span style="outline: 0px;font-size: 14px;visibility: visible;"><em style="outline: 0px;visibility: visible;">阅读原文</em><em style="outline: 0px;visibility: visible;">」</em></span></strong></span><span style="outline: 0px;letter-spacing: normal;caret-color: rgba(0, 0, 0, 0.9);font-size: 14px;color: rgb(136, 136, 136);visibility: visible;"><em style="outline: 0px;visibility: visible;"><em style="outline: 0px;color: rgb(34, 34, 34);font-family: -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.4352px;caret-color: rgb(51, 51, 51);visibility: visible;"><span style="outline: 0px;color: rgb(26, 26, 26);font-family: PingFangTC-Light;visibility: visible;">▲</span></em></em></span></section></section></section></section></section><section style="margin-bottom: 8px;text-wrap: wrap;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);caret-color: rgba(0, 0, 0, 0.9);text-size-adjust: inherit;text-align: center;visibility: visible;line-height: 1.6em;"><span style="outline: 0px;letter-spacing: normal;color: rgb(56, 115, 139);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;letter-spacing: 1px;font-size: 14px;visibility: visible;"><em style="outline: 0px;visibility: visible;"><span style="outline: 0px;visibility: visible;letter-spacing: 0.544px;">跳转 LiveVideoStackCon 2023 深圳站，官网，了解更多信息</span></em></span></strong></span></section><p style="display: none;"><mp-style-type data-value="3"></mp-style-type></p></div><p style="color: #858585; font-size: 13px;">本文分享自微信公众号 - LiveVideoStack（livevideostack）。<br>如有侵权，请联系 support@oschina.cn 删除。<br>本文参与「<a href="https://www.oschina.net/sharing-plan" target="_blank">OSC 源创计划</a>」，欢迎正在阅读的你也加入，一起分享。</p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 17 Nov 2023 08:22:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/3521704/blog/10143844</guid>
            <link>https://my.oschina.net/u/3521704/blog/10143844</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Rust 语言官方规范的制定进展]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">Rust 团队在几个月前接受了&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frust-lang.github.io%2Frfcs%2F3355-rust-spec.html" target="_blank">RFC 3355</a>&nbsp;<span style="color:#000000">的提议，决定开始制定 Rust 语言的官方规范。由 Eric（Rust Reference 的维护者）、Felix（Rust 语言团队）、Joel（Rust 基金会）和 Mara（RFC 的作者）来共同推动这项工作的进行。</span></p><p><span style="color:#000000">截至今日，Eric 四人代表规范团队<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.rust-lang.org%2Finside-rust%2F2023%2F11%2F15%2Fspec-vision.html" target="_blank">发文介绍了</a>这项工作的最新进展，以及后续的一些其他规划。</span></p><h4 style="text-align:start"><span><span><strong><span><span><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>Editor</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></span></span></h4><p style="text-align:start"><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>第一步是填补&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frust-lang.github.io%2Frfcs%2F3355-rust-spec.html%23role-of-the-editor" target="_blank">RFC 中规定的</a>「editor」角色。规范的协调和编辑职责被特意委托给 Rust 基金会，以确保工作的连续性。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:start"><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>由于没有面试到合适的人选，基金会选择考虑内部选择作为替代方案。作为其现有工作的一部分，该基金会的技术总监 Joel 表示愿意担任该职位的候选人。Eric、Felix 和 Mara 等也同意了这一提议，「因为他在行业标准和技术编辑方面拥有丰富的经验，并且与 Rust 项目关系密切」。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><h4 style="text-align:start"><strong style="color:#000000">规范团队（Specification Team）</strong></h4><p style="text-align:start"><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>由于相关工作不可能只由 editor 单人完成，因此还在围绕规范工作组建一个团队，即规范团队（Specification Team），作为语言团队的一个子团队。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:start"><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>最初成员包括：</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><ul><li>Felix Klock (team lead)</li><li>Mara Bos (team lead)</li><li>Joel Marcey (team member, editor)</li><li>Eric Huss (team member)</li></ul><h4 style="text-align:start"><strong style="color:#000000">利益相关者</strong>（<span><span><strong><span><span><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>Stakeholders</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></span></span>）</h4><p style="text-align:start"><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>将挑选并维护一份利益相关者名单，他们将担任顾问和审阅者。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>最初名单包括：</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><ul><li>Rust 语言团队全体成员</li><li>来自 types team 的一名或多名代表</li><li>operational semantics team 的一名或多名代表</li><li>来自 Ferrocene 的一名或多名代表（高可靠性/可用性，例如汽车行业。）</li><li>Formal Methods Research and Development 的一名或多名代表</li><li>Operating System Development 的一名或多名代表 (Rust for Linux; Microsoft)</li></ul><h4 style="text-align:start"><span><span><strong><span><span><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>Authority and Approval</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></span></span></h4><p style="text-align:start"><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>虽然规范团队负责撰写和编辑规范，但 Rust 语言的定义权仍属于相关团队，如语&nbsp;language team 和 library API team。这些团队应在必要时让其他团队/子团队参与进来，例如提出问题、提名问题进行​​讨论以及请求 FCP 批准关键决策。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><blockquote><p style="text-align:start"><span style="color:#000000">为了让规范团队能够在不受审批流程限制的情况下生成内容并进行迭代，我们将在工作存储库中制定规范草案。在一些工具的帮助下，我们将公开跟踪哪些项目仍需要团队批准，以及哪些项目受到利益相关者的公开关注。</span></p><p style="text-align:start"><span style="color:#000000">我们将所有变更分类为次要变更或重大变更。较小的更改是对规范团队来说似乎没有争议或微不足道的项目。例如，语言团队已经通过 FCP 批准的更改、排版和语法修复、初衷明确的澄清，以及类似的令人兴奋的更改。重大变更是那些可能有问题、重要或有争议的变更。规范团队和相关权威团队的任何成员以及任何规范利益相关者都可以将更改标记为重大更改。对规范的重大更改必须经过通常的批准流程（例如语言 FCP）才能出现在规范的已发布（非草案）版本中。</span></p><p style="text-align:start"><span style="color:#000000">语言和规范团队应努力拥有至少一名共同成员（例如 Felix）充当联络人，以帮助确保我们对次要变更与重大变更的理解保持同步。</span></p></blockquote><h4 style="text-align:start"><span><span><strong><span><span><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>目标</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></span></span></h4><p style="text-align:start"><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>规范团队的目标是创建和维护 Rust 规范。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>Rust 规范的目的是提供权威资源来确定哪些源文本是有效的 Rust 程序以及此类程序的行为方式。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:start"><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>一个理想的规范既要：</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><ul><li style="text-align:start"><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>为当前和未来的 Rust 版本定义给定 Rust 程序的语义的规范边界</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></li><li style="text-align:start"><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>提供与该规范实例相关的 Rust 版本特有的语义描述细节。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></li></ul><p style="text-align:start"><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>特定于版本的详细信息的规定可以直接在规范中提供，也可以通过委托给相关 Rust 团队拥有的其他文档来间接提供。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><h4 style="text-align:start"><span><span><span><span><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>渐进式开发</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></h4><p style="text-align:start"><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>既要为当前和未来的 Rust 版本提供规范性约束，又要描述当前 Rust 版本的细节。因此该团队决定将通过迭代和渐进的方式最大限度地提高其工作价值。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><blockquote><p style="text-align:start"><span style="color:#000000">我们预计该规范的早期版本将重点关注提供当前 Rust 版本的详细描述。这样的规范可以从现有的工作成果（如 Ferrocene 规范）中衍生出来，因为该规范明确侧重于提供特定 Rust 版本的详细说明。对这些特定版本描述的反馈意见将帮助我们了解如何以最佳方式在规范中制定规范性约束。</span></p><p style="text-align:start"><span style="color:#000000">由于我们前面提到的对当前 Rust 版本的关注，规范的早期版本可能会有一些空白，其中规定的界限比必要的更加不精确。例如，规定「不安全的 Rust 代码可能会导致未定义的行为」没有提供有关如何编写定义良好的不安全代码的指导。即使存在这种不精确性，规定的界限仍然可以提供有用的高级保证（例如「安全的 Rust 不会导致未定义的行为」）。规范的未来版本会添加更多说明性细节（例如「不安全的 Rust 代码在以下条件下不会导致未定义的行为：……」），直到我们达到所需的精度级别。</span></p></blockquote><h4 style="text-align:start"><strong><span><span><span><span><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>范围</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></h4><p style="text-align:start"><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>规范应至少涵盖 Rust 语法和语义的以下领域某些部分可能与特定后端或目标实现技术（如 inline asm）有内在联系。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><ul><li>Rust 的语法，通过&nbsp;Backus-Naur Form (BNF) 或 BNF&nbsp;的一些合理扩展来指定。</li><li><span style="background-color:#ffffff; color:#000000">Macro expansion</span><ul><li>Macro-by-example (<code>macro_rules</code>) transcription; Hygiene</li><li><code>cfg</code><span>&nbsp;</span>属性</li><li>Procedural macros; attributes 以及 derive</li></ul></li><li>路径和标识符解析 
  <ul><li>Modules</li></ul></li><li>静态语义 
  <ul><li>类型定义；类型表达式；布局</li><li>类型推断和类型检查；子类型化</li><li>生命周期和借用检查</li></ul></li><li>泛型；关联项解析和&nbsp;Trait solving</li><li>安全 Rust 的操作语义 
  <ul><li>绑定表格；匹配表达式；drop glue</li><li>值的移动和复制；借用</li><li>field projection; method dispatch 
    <ul><li>operator overloading</li></ul></li></ul></li><li>不安全 Rust 的操作语义 
  <ul><li>memory model</li><li>inline assembly</li></ul></li><li>Const evaluation</li><li>Crates 和 crate linkage</li></ul><p style="text-align:start"><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>此列表可随着时间的推移而扩展。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><h4 style="text-align:start"><span><span><strong><span><span><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>Presentation</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></span></span></h4><p style="text-align:start"><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>Rust 规范将是一个可公开访问的文档，类似于所有其他 Rust 文档（并具有相同的<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frust-lang%2Frust%2Fblob%2Fmaster%2FLICENSE-MIT" target="_blank">许可</a><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frust-lang%2Frust%2Fblob%2Fmaster%2FLICENSE-APACHE" target="_blank">条款</a>）。文本将以英语编写，并且仅使用规范本身定义的技术术语或在免费在线词典中具有明确定义的技术术语。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:start"><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>规范中的各个项目都可以被引用和命名：不仅可以在超链接中，而且在文本中（例如「[syntax.patterns.arm.5]」）。在可能的情况下，这些名称/项目引用应在不同版本的规范中持续存在。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:start"><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>规范的迭代应包括突出显示版本之间差异的 renderings。（参见 Ada 参考手册等。）</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:start"><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>Rust 规范将以鼓励志愿者贡献的格式进行维护，即使规范团队预计必须对每个贡献进行重新授权，以保持规范的一致性。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:start"><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>虽然完整性和正确性是首要任务，但团队将尽力使规范尽可能易于理解。理想情况下，任何 Rust 程序员都应该能够深入研究并找到他们可能遇到的任何语言问题的答案，而无需询问已经非常熟悉该文档的「language lawyer」。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><h4 style="text-align:start"><span><span><strong><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>发布节奏</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></span></span></h4><p style="text-align:start"><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>Rust 发布将独立于规范审批流程进行。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:start"><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>如果给定版本的规范尚未获得批准，则该版本将在没有相关规范的情况下发布。（不过，该团队可能会在后续提供与给定版本相关的规范。）</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:start"><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>这是设计使然。规范工作不得为项目增加需要克服的新障碍，以履行其现有义务，例如 6 周的发布周期。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:start"><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>团队愿景是最终能够达到自动交付更新规范的程度，并且能够按照项目的 6 周发布节奏完成。但是，从短期和中期来看，其希望能够自由地滞后于 6 周的发布节奏。当规范团队为以前未涉及的领域逐步添加新内容，或大幅缩小当前版本规范的规定范围时，滞后于 Rust 发布计划的能力可能会特别有用。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:start"><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>虽然规范开发过程不会阻止发布，但语言功能的更改应与规范的相关更新相结合。一旦开始发布与特定版本相关的规范，那么如果没有规范团队批准对当前草案规范的相应拉取请求，则对当前规范中记录的语言功能的更改就无法稳定。规范中未记录的语言功能的更改可以在不更新规范的情况下稳定下来，但需要规范团队成员确认相应的功能未记录。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:start"><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>通过强制执行新功能在稳定之前必须成为规范的一部分的规则，有望消除规范与 Rust 版本之间潜在滞后的主要根源。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><h4 style="text-align:start"><span><span><strong><span><span><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>下一步</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></span></span></h4><ul><li>为团队制定定期会议时间表。</li><li>确定利益相关者名单。</li><li>制作第一个「demo product」，供利益相关者审查。</li></ul></div>
                                    ]]>
            </description>
            <pubDate>Fri, 17 Nov 2023 04:03:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266889/spec-vision-rust</guid>
            <link>https://www.oschina.net/news/266889/spec-vision-rust</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[微软确认为 Windows 10 引入 AI 助手 Copilot]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><u><a href="https://www.oschina.net/news/265760">与之前的传言相印证</a></u>，微软宣布计划在 Windows 10 版本 22H2 中添加 AI 助手 Copilot。Copilot 将包含在 Windows 10 家庭版和专业版中。该更新的发布日期尚未公布，预计在不久的将来发布。</p><p><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.theverge.com%2F2023%2F11%2F16%2F23963576%2Fmicrosoft-copilot-windows-10-ai-features-release-preview" target="_blank">在一份新闻稿中</a></u>，<strong>微软表示在向 Windows 11 用户提供 Copilot 时收到了"很好的反馈"</strong>。与之前不为 Windows 10 22H2 提供主要功能升级的计划不同，微软现在决定"进行额外投资，以确保每个人都能从他们的 Windows PC 中获得最大价值，包括 Windows 中的 Copilot（预览版）"。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-6116c383b7c3be2c7b4c9bf35cc44cda3ea.png" referrerpolicy="no-referrer"></p><p>值得注意的是，<strong>并非所有 Windows 10 电脑都能运行 Copilot</strong>。根据微软的要求，<strong>您的设备必须配备 720p 显示屏（或更高分辨率）和至少 4GB 内存</strong>。此外，某些 Windows 10 版本将无法使用 Copilot，至少暂时无法使用。</p><p>由组织管理的版本为 22H2 的 Windows 10 专业版设备将不包含在 Copilot 在 Windows 中的初始推广中。版本 22H2 的 Windows 10 企业版和教育版设备也不会被纳入 Copilot in Windows 的初始推广范围。</p><p>微软所使用的措辞提供了一种可能性，即在某些时候，Copilot 可能会被添加到 Windows 10 的这些版本中。不过，Windows 10 的支持终止日期保持不变。该操作系统的生命周期将于 2025 年 10 月 14 日结束。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-e281fe6f97375c953a2fe93f6baebeb2533.png" referrerpolicy="no-referrer"></p><p>除了在不久的将来将 Copilot 引入 Windows 10 之外，微软还将添加一项新功能，让用户能够尽快使用 Copilot 以及其他可能的重要新功能和改进。微软将在"设置"的"Windows 更新"部分为"发布预览版"内部用户添加"一旦有最新更新，立即获取"切换选项。</p><p>微软补充说："这将在未来几个月内通过受控功能推出（CFR）的方式分阶段推出。"</p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 17 Nov 2023 03:05:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266876</guid>
            <link>https://www.oschina.net/news/266876</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Unity 6 将于 2024 年发布，下一个 LTS 版本]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Unity 公司在今天举办的 Unite 2023 上<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftwitter.com%2Funity%2Fstatus%2F1725080342636192251" target="_blank">宣布</a></u>，2024 年将发布重大版本更新&nbsp;<strong>Unity 6</strong>，并表示其为下一个长期支持版本 (LTS)。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-a6955e1397b32b26e403a1c0cdd519dc6fa.png" referrerpolicy="no-referrer"></p><p>Unity 在大会上演示了全新的 Unity 6 引擎，并通过 Syncy Studios 采用 Unity 6 制作的《幻想王国（Fantasy Kingdom）》Demo 进行了<em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fyoutu.be%2FyggoHVLd01c" target="_blank">演示</a></u></em>，强调 Unity 6 的性能与画面改进。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-3fd8486e8d8b61d16fec201e834d5fd2ba3.png" referrerpolicy="no-referrer"></p><p><img height="1302" src="https://oscimg.oschina.net/oscnet/up-5d7463e58f86e8e5cae6592b2bfc92aa80c.png" width="2348" referrerpolicy="no-referrer"></p><p><img src="https://oscimg.oschina.net/oscnet/up-daf8fe34d603bc0c73addb3fda72e81707d.png" referrerpolicy="no-referrer"></p><p><img height="1316" src="https://oscimg.oschina.net/oscnet/up-220b5372a5f614527cfd3b4da88df5a3dc3.png" width="2360" referrerpolicy="no-referrer"></p><p><img src="https://oscimg.oschina.net/oscnet/up-9fa7c45bc268f01ef3b71f6aec5e2ae2bd2.png" referrerpolicy="no-referrer"></p><p><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.unity.com%2Fnews%2Funite-2023-keynote-game-development-unity-6" target="_blank">Unity 公司称</a></u> Unity 6 将带来显著的性能增强、提升创建多人游戏的速度，以及对 XR 设备更深入的支持。此外还解锁了新渲染功能的支持，实现了更高水平的图形保真度。</p><ul><li>以惊人的性能提供先进的视觉效果</li><li>加速多人游戏的创建和规模化</li><li>利用 AI 工具探索新的创意可能性</li><li>通过下一代移动功能和创新的 VR 设备支持让玩家随时随地接触</li></ul><p>Untiy&nbsp;提到的 AI 工具为 Sentis，允许开发者在&nbsp;Unity&nbsp;运行时导入&nbsp;AI&nbsp;模型，从而创建基于&nbsp;AI&nbsp;的 NPC。Sentis&nbsp;的独特之处在于 AI 模型最终在用户设备上本地运行，不需要开发者额外配置云服务器。</p><p>Unity 6 还将带来对全新 WebGPU 图形后端的初步支持。从 Unity 6 开始，玩家将能够在网络上的任何位置运行 Unity 游戏，包括在原生应用程序内或浏览器内的 Web 视图中。</p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 17 Nov 2023 02:42:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266869/unity-6-unite-2023</guid>
            <link>https://www.oschina.net/news/266869/unity-6-unite-2023</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[pyvideotrans —— 视频翻译和配音工具]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff; color:#1f2328">这是一个视频翻译工具，可将一种语言的视频翻译为另一种语言和配音的视频。 语音识别基于<span>&nbsp;</span></span><code>openai-whisper</code><span style="background-color:#ffffff; color:#1f2328"><span>&nbsp;</span>离线模型、文字翻译使用</span><code>google|baidu|chatGPT</code><span style="background-color:#ffffff; color:#1f2328">翻译接口，文字合成语音使用<span>&nbsp;</span></span><code>Microsoft Edge tts</code><span style="background-color:#ffffff; color:#1f2328">。</span></p><p><img height="407" src="https://static.oschina.net/uploads/space/2023/1107/143850_zTPQ_4252687.png" width="500" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px; text-align:start"><strong>使用预编译版本方法</strong></p><ol start="0"><li><p>只可用于 win10 win11 系统 (编译版非最新，建议源码部署)</p></li><li><p>从 release 中下载最新版，解压，双击 sp.exe</p></li><li><p>原始视频目录：选择 mp4 视频；</p></li><li><p>输出视频目录：如果不选择，则默认生成在同目录下的<span>&nbsp;</span><code>_video_out</code></p></li><li><p>选择翻译：可选 google、百度、chatGPT，后两者需要点击「设置翻译 key」，设置相应信息</p></li><li><p>网络代理地址：如果你所在地区无法直接访问 google，需要在软件界面，网络代理，中设置代理，比如若使用 v2ray ，则填写<span>&nbsp;</span><code>http://127.0.0.1:10809</code>,若 clash，则填写<span>&nbsp;</span><code>http://127.0.0.1:7890</code>. 如果你修改了默认端口或使用的其他代理软件，则按需填写</p></li><li><p>视频原始语言：选择待翻译视频里的语言种类</p></li><li><p>翻译目标语言：选择希望翻译到的语言种类</p></li><li><p>选择配音：选择翻译目标语言后，可从配音选项中，选择配音角色；</p><p>硬字幕: 是指始终显示字幕，不可隐藏，如果希望网页中播放时也有字幕，请选择硬字幕嵌入</p><p>软字幕: 如果播放器支持字幕管理，可显示或者隐藏字幕，该方式网页中播放时不会显示字幕，某些国产播放器可能不支持,需要将生成的视频同名 srt 文件和视频放在一个目录下才会显示</p><p><strong>不能「既不嵌入字幕又不选择配音角色」</strong></p></li><li><p>文字识别模型: 选择 base/small/medium/large, 识别效果越来越好，但识别速度越来越慢，第一次将需要下载模型，默认 base,可以预先单独下载模型后，放到<span>&nbsp;</span><code>当前软件目录/models</code>目录下.</p><p><strong>模型单独下载地址</strong></p><p><a href="https://openaipublic.azureedge.net/main/whisper/models/65147644a518d12f04e32d6f3b26facc3f8dd46e5390956a9424a650c0ce22b9/tiny.pt">tiny 模型</a></p><p><a href="https://openaipublic.azureedge.net/main/whisper/models/ed3a0b6b1c0edf879ad9b11b1af5a0e6ab5db9205f891f668f8b0e6c6326e34e/base.pt">base 模型</a></p><p><a href="https://openaipublic.azureedge.net/main/whisper/models/9ecf779972d90ba49c06d968637d720dd632c55bbf19d441fb42bf17a411e794/small.pt">small 模型</a></p><p><a href="https://openaipublic.azureedge.net/main/whisper/models/345ae4da62f9b3d59415adc60127b97c714f32e89e936602e85993674d08dcb1/medium.pt">medium 模型</a></p><p><a href="https://openaipublic.azureedge.net/main/whisper/models/e4b87e7e0bf463eb8e6956e646f1e277e901512310def2c24bf0e11bd3c28e9a/large.pt">large 模型</a></p></li><li><p>配音语速：填写 -90 到+90 之间的数字，同样一句话在不同语言语音下，所需时间是不同的，因此配音后可能声画字幕不同步，可以调整此处语速，负数代表降速，正数代表加速播放。</p></li><li><p>自动加速: 如果翻译后的语音时长大于原时长，并且这里确认选中，那么将强制加速播放该片段，以缩小时长</p></li><li><p>静音片段: 填写 100 到 2000 的数字，代表毫秒，默认 500，即以大于等于 500ms 的静音片段为区间分割语音</p></li><li><p>点击，开始按钮，底部会显示当前进度和日志，右侧文本框内显示字幕</p></li></ol><blockquote><p>原始视频统一使用 mp4 格式，处理速度快，网络兼容性好</p><p>采用软合成字幕：字幕作为单独文件嵌入视频，可再次提取出，如果播放器支持，可在播放器字幕管理中启用或禁用字幕；</p><p>默认会在，原始视频目录，下生成同名的字幕文件，视频名.srt</p><p>对于无法识别的语音将直接复制原语音</p></blockquote></div>
                                                                ]]>
            </description>
            <pubDate>Fri, 17 Nov 2023 02:25:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/p/pyvideotrans</guid>
            <link>https://www.oschina.net/p/pyvideotrans</link>
        </item>
        <item>
            <title>
                <![CDATA[Gitee 推荐 | 基于一致性缓存的分布式事务应用框架 Zeze]]>
            </title>
            <description>
                <![CDATA[<p>What Is Zeze?</p><p>Zeze 是一个基于一致性缓存的分布式事务应用框架，详见 doc/zeze.docx</p>]]>
            </description>
            <pubDate>Fri, 17 Nov 2023 02:23:00 GMT</pubDate>
            <guid isPermaLink="false">https://gitee.com/e2wugui/zeze</guid>
            <link>https://gitee.com/e2wugui/zeze</link>
        </item>
        <item>
            <title>
                <![CDATA[每日一博 | 视觉 BEV 基本原理和方案解析]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>BEV(Bird’s-Eye-View) 是一种鸟瞰视图的传感器数据表示方法，它的相关技术在自动驾驶领域已经成了「标配」，纷纷在新能源汽车、芯片设计等行业相继量产落地。BEV 同样在高德多个业务场景使用，例如：<strong>高精地图地面要素识别</strong>、<strong>车道线拓扑构建</strong>、<strong>车端融合定位</strong>中都扮演了重要角色。如图 1‑1 所示：</p><p style="text-align:center"><img alt="" src="https://pic1.zhimg.com/80/v2-6877926e4fd053ef08b19049d51767f8_1440w.jpg" referrerpolicy="no-referrer"></p><p style="text-align:center">图 1‑1 BEV 在高德应用场景（仅列举部分）a) 高精底图 b) 地面要素识别 c) 车道线拓扑构建[1] d) 车端融合定位 (BEV 特征和底图匹配)[2]</p><p>本文分享的内容主要包括两个部分：视觉 BEV 基本原理、方案解析。</p><p><strong>1.BEV 基础</strong></p><p><strong>1.1.引言</strong></p><p>如图 1‑2 所示，BEV 具有如下优势：</p><p><strong>1) BEV 视图尺度变化小</strong>。在 PV 空间（即透视图，类似通常行车记录仪所采集的车辆前视图）中，物体近大远小，物体的大小和类别、远近都有关，而在 BEV 空间中，物体的大小只和类别有关；</p><p><strong>2) BEV 空间是决策友好空间</strong>。BEV 空间更接近 3D 真实空间的平面空间，而 PV 空间是真实物理世界在透视投影下的视图，以图 1‑2 的车道线举例，在真实世界中平行的两条车道线，在 BEV 空间下还是平行的，在 PV 空间却是相交的。相比之下，BEV 空间下的信息能更方便地被下游规控模块理解和使用。</p><p>本章将介绍 BEV 基础知识。首先介绍 BEV 的核心**「视角转换模块」的基本原理**，包括 2D-&gt;3D 和 3D-&gt;2D 两种路线，然后介绍 BEV 使用的<strong>魔法「可形变模块」</strong>，最后介绍<strong>BEV 方案中常用的损失函数</strong>。</p><p style="text-align:center"><img alt="" src="https://picx.zhimg.com/80/v2-a9e4e534bb87131577673960410b5677_1440w.jpg" referrerpolicy="no-referrer"></p><p style="text-align:center">图 1‑2 BEV 空间和 PV 空间的图像可视化，a) BEV 空间 b) PV 空间</p><p><strong>1.2.视角转换</strong></p><p>如 1.1 所述，在 BEV 空间下进行数据处理和操作具有尺度变化小、决策友好的优势，但原始的图像数据是在 PV 空间下的，如何将 PV 空间的数据转换到 BEV 空间或者是 3D 空间（有 3D 空间下的数据，将其拍扁就能转到 BEV 空间）呢？这就是视角转换模块要干的事。</p><p><strong>1.2.1. 2D-&gt;3D 转换模块</strong></p><p>2D-&gt;3D 转换模块基本思想是从 2D 像素或者特征出发去找 3D 空间下的对应表示，类似深度估计。下面介绍主流的 2D-&gt;3D 转换方法。</p><p>LSS(Lift-Splat-and-Shot)[3]是主流的 2D-&gt;3D 转换方法，如图 1‑3 所示，Lift 指对各相机的图像显式地估计特征点的深度分布，得到包含图像特征的视锥（点云）；Splat——结合相机内外参把所有相机的视锥（点云）分配到 BEV 空间的网格中，对每个格子中的多个视锥点进行 pooling 计算，形成 BEV 特征图；Shoot——用 task head 处理 BEV 特征图，输出感知结果。最后将 C 维的特征和 D 维的深度分布做外积，得到每个深度下的特征，深度概率越大，对应特征响应就越强。</p><p style="text-align:center"><img alt="" src="https://pica.zhimg.com/80/v2-43d4c71faf7a138576f6ba06458e22aa_1440w.png" referrerpolicy="no-referrer"></p><p style="text-align:center">图 1‑3 LSS 示意，每个特征点生成系列离散深度点，再为深度点生成特征[3]</p><p>Pseudo-LiDAR 是另一种 2D-&gt;3D 转换方法，如图 1‑4 所示，相比 LSS 为特征点预测一系列离散深度，Pseudo-LiDAR 直接预测深度图，每个像素都有且仅有一个深度。</p><p style="text-align:center"><img alt="" src="https://picx.zhimg.com/80/v2-53fd09fd23b24641939a1b729c035932_1440w.png" referrerpolicy="no-referrer"></p><p style="text-align:center">图 1‑4 Pseudo-LiDAR 示意，预测深度图，根据原始图像和深度图映射至 3D 空间[4]</p><p><strong>1.2.2. 3D-&gt;2D 转换模块</strong></p><p>3D-&gt;2D 转换模块基本思想是根据 3D 点查找对应的 2D 特征，类似 3D 空间投影到 PV 空间。下面介绍主流的 3D-&gt;2D 转换方法。</p><p>如图 1‑5 所示，将 3D 参考点根据成像原理投影到 PV 空间获取对应图像特征的方式可以认为是显式映射，这里的参考点可以使用预设的 BEV 空间的参考点，也可以使用网络生成。</p><p style="text-align:center"><img alt="" src="https://picx.zhimg.com/80/v2-cc01c8996b31566d84f9db31ce62143e_1440w.png" referrerpolicy="no-referrer"></p><p style="text-align:center">图 1‑5 显式映射[5]</p><p>相比显式映射，隐式映射不再通过投影映射，而是让网络自己学特征和 3D 座标的映射。如图 1‑6 所示，它先生成视锥空间下的一系列点，再转换到 3D 空间下，然后将提取的图像特征和 3D 点传入 encoder，encoder 处理后输出的就是带有 3D 座标信息的特征。</p><p style="text-align:center"><img alt="" src="https://picx.zhimg.com/80/v2-015461e8177d0ce576c5768410dcb80b_1440w.png" referrerpolicy="no-referrer"></p><p style="text-align:center">图 1‑6 隐式映射[6]</p><p><strong>1.3. 可形变模块</strong></p><p>要介绍的可形变模块有两种，<strong>可形变卷积</strong>和<strong>可形变注意力</strong>，可形变模块的作用更容易通过可形变卷积理解，所以先介绍可形变卷积。</p><p>可形变卷积是在卷积的基础上添加 offset 得到的，如图 1‑7 最左边的 a) 所示，普通卷积通过人工设计的 pattern 整合 pattern 内采样点的信息，其 pattern 设计好后就是固定的，可形变卷积，如图 1‑7 b) 所示，可以计算出每个采样点的 offset，采样点+offset 才是真实的采样点，使得卷积的 pattern 形式更加灵活，且一定程度上可学习。</p><p style="text-align:center"><img alt="" src="https://picx.zhimg.com/80/v2-25ee3e549c4c201ec23b27b2927ed7f0_1440w.jpg" referrerpolicy="no-referrer"></p><p style="text-align:center">图 1‑7 可形变卷积示意，a) 普通卷积 b) 可形变卷积[7]</p><p>如图 1‑8 所示，注意力机制需要通过 Q (query) 找到 K (key)，获得 K 的信息，这个过程也存在可变形的操作空间，让网络自己学习参考点的偏移量。</p><p style="text-align:center"><img alt="" src="https://pic1.zhimg.com/80/v2-ae9b641901f4aabf7cd99d5cbbea4c9d_1440w.png" referrerpolicy="no-referrer"></p><p style="text-align:center">图 1‑8 可变形注意力示意[8]</p><p><strong>1.4. 损失函数</strong></p><p>损失函数大部分与任务相关，且大同小异，这里集中介绍下后续方案解析需要用到的一些共性的损失函数。</p><p>Box Loss (包围盒损失函数) 是目标检测常用的几何损失函数，常采用 L1 Loss 的形式：</p><p><img alt="" src="https://pic1.zhimg.com/80/v2-7cd755ebefb004c45aa1d2f8ed391d17_1440w.jpg" referrerpolicy="no-referrer"></p><p>Focal Loss 是交叉熵损失函数的拓展，常用于分类问题。普通交叉熵损失函数在正负样本不均衡时表现不佳，因此引入平衡交叉熵。另外普通交叉熵损失函数对于难例无法重点学习，因此引入难例聚焦。最终形式为：</p><p><img alt="" src="https://picx.zhimg.com/80/v2-7b684f60a21cd467d25d4dc4a869d7d9_1440w.jpg" referrerpolicy="no-referrer"></p><p><strong>2. 视觉 BEV 方案解析</strong></p><p><strong>2.1. 引言</strong></p><p>第一章的内容为第二章的方案解析打下知识基础，接下来第二章主要解析具有代表性的视觉 BEV 方案，主要根据视角转换模块的类型对方案进行分类，首先介绍 2D-&gt;3D 的代表性方案，然后介绍 3D-&gt;2D 的代表性方案。</p><p><strong>2.2. 2D-&gt;3D 代表性方案解析</strong></p><p>2D-&gt;3D 的代表性 BEV 方案有<strong>BEVDet</strong>和<strong>BEVDepth</strong>，下面我们逐一介绍。</p><p><strong>2.2.1. BEVDet</strong></p><p>3D 目标检测跟踪由基于 PV 空间的方法主导，BEV 语义分割跟踪由基于 BEV 空间的方法主导，那么 PV 空间和 BEV 空间哪个更适合做自动驾驶感知呢？是否可以在同一的框架下做这些任务？作者为了回答这两个问题，提出了如图 2‑1 所示的基于 BEV 空间的 3D 目标检测框架，BEVDet。BEVDet 主要由四个部分组成，分别为图像特征编码器，视角转换模块，BEV 特征编码器，检测头。</p><p style="text-align:center"><img alt="" src="https://picx.zhimg.com/80/v2-1e60694f26d5751b2879bb3b208d9895_1440w.png" referrerpolicy="no-referrer"></p><p style="text-align:center">图 2‑1 BEVDet 框架[9]</p><p>图像特征编码器 (Image-view Encoder) 使用 2D Backbone 网络，如 ResNet、SwinTransformer 等，对输入的多视角图像做多尺度特征提取，得到多尺度特征。</p><p>视角转换模块 (View Transformer) 对输入的多视角图像特征使用 LSS 进行离散深度分布预测，获得 3D 视锥特征。</p><p>3D 视锥特征经过 pooling 操作拍扁到 BEV 空间，BEV 特征编码器 (BEV Encoder) 对 BEV 空间下的特征做多尺度特征提取，得到 BEV 特征。</p><p>最后送入检测头进行 3D 目标检测，分类监督使用的损失函数为 Focal loss，包围盒监督使用的损失函数为 L1 loss。</p><p><strong>2.2.2. BEVDepth</strong></p><p>作者实验发现 LSS 估计的深度替换成随机值影响不大，而采用真值深度对指标提升很大，因此得出 LSS 估计深度不准的结论，如图 2‑2 所示，在没有明确的深度监督的情况下，很难输出准确，泛化性强的深度感知结果，要想获得更好的检测结果，需要更准的深度，因此引入深度监督训练深度子网络。</p><p style="text-align:center"><img alt="" src="https://pica.zhimg.com/80/v2-81044f858876fb86f021267da764c5b7_1440w.png" referrerpolicy="no-referrer"></p><p style="text-align:center">图 2‑2 LSS 的深度预测结果和 BEVDepth 的深度预测结果的对比[10]</p><p>图 2‑3 是 BEVDepth 的框架，也能大致分为图像特征编码器，视角转换模块，BEV 特征编码器，检测头四个部分。图像特征编码模块大同小异，后续不再展开说明。</p><p style="text-align:center"><img alt="" src="https://pic1.zhimg.com/80/v2-a4ad33f6e9c360247e91b77932b374e5_1440w.png" referrerpolicy="no-referrer"></p><p style="text-align:center">图 2‑3 BEVDepth 框架[10]</p><p>视角转换模块的核心是深度估计，深度估计网络 DepthNet 的框架如图 2‑4 所示，首先使用 MLP 对相机内参进行特征化，然后用 SE (Squeeze-and-Extraction) 对图像特征进行通道加权，然后经过 3 个残差块以及可形变卷积，得到深度。深度再与图像特征进行外积，得到 3D 视锥特征。</p><p style="text-align:center"><img alt="" src="https://picx.zhimg.com/80/v2-fa606fad900b85501db561a22819eef8_1440w.png" referrerpolicy="no-referrer"></p><p style="text-align:center">图 2‑4 深度估计网络框架[10]</p><p>相机和用于监督的点云之间的外参可能不准，内参也可能不准，都会导致深度估计有偏，因此 BEV 特征编码器引入深度修正对 3D 视锥特征的深度进行修正，然后进行高效体素池化获得 BEV 特征。</p><p>检测头所使用的损失函数和 BEVDet 是一致的，不做赘述。深度监督使用的损失函数为二分类交叉熵。</p><p><strong>2.3. 3D-&gt;2D 代表性方案解析</strong></p><p>前面介绍的 2D-&gt;3D 的方案始终绕不过深度估计，深度估计难免会引入误差，换个思路，先有 3D 点，再根据 3D 点找 2D 特征的方式无需进行深度估计，避免了这部分误差。3D-&gt;2D 的代表性方案有 Detr3D、BEVFormer 和 PETR。</p><p><strong>2.3.1. Detr3D</strong></p><p>如图 2‑5 所示，Detr3D 是 Detr 在 3D 目标检测的扩展，也是使用 query 进行特征获取，然后进行检测。Detr3D 的图像特征编码器大同小异，不再赘述。</p><p style="text-align:center"><img alt="" src="https://pic1.zhimg.com/80/v2-aecefc46ac607f6b9cfe9a8c72d878cb_1440w.png" referrerpolicy="no-referrer"></p><p style="text-align:center">图 2‑5 Detr3D 框架[5]</p><p>特征转换模块首先使用 object query 生成 3D 参考点，将参考点投影到 PV 空间获取图像特征，获取到的图像特征能进一步优化物体的 3D 表征，得到物体的 3D 特征。</p><p>将特征送入检测头进行目标检测，可以得到一系列的检测结果。普遍地，大家会用 NMS 等后处理方式获得最终用于 Loss 计算的检测结果，如图 2‑6 所示，Detr3D 继承了 Detr 的做法，采用双边图匹配获得与真值一一对应的检测结果。损失函数与前面所述并未本质差异，不做赘述了。</p><p style="text-align:center"><img alt="" src="https://pic1.zhimg.com/80/v2-ecb60b683e331a3662bddef87ba2deed_1440w.png" referrerpolicy="no-referrer"></p><p style="text-align:center">图 2‑6 双边图匹配获得与真值一一对应的检测结果[11]</p><p><strong>2.3.2. BEVFormer</strong></p><p>行车过程有天然的时序特点，当前帧看到的车道线，在后续几帧大概率也是存在且可见的，如何利用这个时序特点是前述方案没有考虑的。BEVFormer 引入时序信息进一步增强 BEV 的检测能力。BEVFormer 的图像特征编码模块和前述大同小异，不做赘述。</p><p>BEVFormer 的核心是中间的 BEV 特征编码模块，BEV 特征编码模块的核心是时序自注意力 (Temporal Self-Attention) 和空间交叉注意力 (Spatial Cross-Attention)，时序注意力是为了利用历史帧 BEV 特征增强当前帧 BEV 特征，空间交叉注意力则是为了从图像特征获取信息。</p><p style="text-align:center"><img alt="" src="https://pica.zhimg.com/80/v2-f3bbe02646e521461ad36b8e2d4e159f_1440w.png" referrerpolicy="no-referrer"></p><p style="text-align:center">图 2‑7 BEVFormer 框架[12]</p><p>具体地，BEVFormer 的时序自注意力首先利用车辆运动信息将当前帧 BEV 特征和历史帧 BEV 特征进行对齐，然后再使用自注意力融合两者信息，由于车辆运动信息可能不准，不同时刻周围的可利用信息分布也不一致，所以具体使用的是图 2‑8 所示的可变形注意力机制。</p><p style="text-align:center"><img alt="" src="https://pica.zhimg.com/80/v2-4f86254bec875df7b4c8b27b3c7d1484_1440w.png" referrerpolicy="no-referrer"></p><p style="text-align:center">图 2‑8 时序可变形自注意力[12]</p><p>BEVFormer 的空间交叉注意力首先为每个格子在 Z 方向上采样 4 个值，得到一个格子上的 4 个参考点，然后与图像特征进行交叉注意力，获得图像特征。如图 2‑9 所示，这里的交叉注意力也采用可变形注意力机制。</p><p style="text-align:center"><img alt="" src="https://pic1.zhimg.com/80/v2-b65c4f416dedc9b27608bc42b4d8f0b2_1440w.png" referrerpolicy="no-referrer"></p><p style="text-align:center">图 2‑9 空间可变形交叉注意力[12]</p><p>损失函数的计算和 Detr3D 一致，不再赘述。</p><p><strong>2.3.3. PETR</strong></p><p>3D-&gt;2D 的方案一般都需要将参考点投影到 PV 空间，再取图像特征，PETR 避免了复杂的 3D-&gt;2D 转换及特征采样，直接让网络自己学习 2D-3D 的映射。PETR 的框架如图 2‑10 所示，包括图像特征编码器、3D 座标生成器、3D 特征编码器 (3D Position Encoder)、3D 特征解码器和检测头。图像特征编码器大同小异，不再赘述。</p><p style="text-align:center"><img alt="" src="https://picx.zhimg.com/80/v2-3bd06c74ccb12b7e4de4e16d317b7cb0_1440w.png" referrerpolicy="no-referrer"></p><p style="text-align:center">图 2‑10 PETR 框架[6]</p><p>3D 座标生成器生成视锥空间的一系列 3D 点，具体地，首先将相机视锥空间离散成大小为的网格，网格中的每一点用表示。3D 空间中一个点用表示。通过相机内外参可以将相机视锥空间转换到 3D 空间中。最后再进行归一化。</p><p>2D 图像特征和 3D 座标一起送入到 3D 特征编码器中，2D 特征进行卷积通道降维，3D 座标进行位置编码，然后将处理后的 2D 特征和 3D 座标编码整合，最后特征展平。</p><p style="text-align:center"><img alt="" src="https://pic1.zhimg.com/80/v2-ec98be180482b7f680c1edfa0471e7e0_1440w.png" referrerpolicy="no-referrer"></p><p style="text-align:center">图 2‑11 3D 特征编码器[6]</p><p>3D 特征解码器先在 3D 空间生成一系列随机点，再通过 MLP 生成可学习的 query，query 在 3D 特征中取特征，最后使用检测头进行检测。损失函数与 Detr3D 大同小异，不再赘述。</p><p><strong>3. 总结展望</strong></p><p>本文从 BEV 的基础出发，介绍了视觉 BEV 具有代表性的方案。视觉 BEV 已经展现出强大的场景理解能力。但是还存在很多值得探索且有挑战的方向[13]：</p><p>深度估计是 BEV 的核心，LSS、Pseudo-LiDAR、激光蒸馏、立体视觉或运动恢复结构等都是有前景的方向。</p><p>如何融合传感器的信息也是至关重要的，使用 Transformer 的自注意力、交叉注意力融合不同模态的特征已经被证明是个可行的方向。多模态中 CLIP 的文本-图像对也是个很有启发的思路。</p><p>泛化性是深度学习亘古不变的话题和努力的方向，在一个设备（数据）上训练好的模型在另一个设备（数据）表现是否一样好。每个设备都要付出训练成本是让人难以接受的。如何将模型和设备解耦在未来一段时间都将是重要的研究方向。</p><p>大模型或者基础模型已经在不同领域上取得令人印象深刻的结果，并一举成为 SOTA。在 BEV 感知中如何利用大模型中丰富的知识，在更多的任务上取得更好的效果，这将会逐步引起人们的重视。</p><p><strong>4. 参考文献</strong></p><p>[1] Bencheng Liao, Shaoyu Chen, Xinggang Wang, et al. Maptr: Structured modeling and learning for online vectorized hd map construction[J]. arXiv preprint arXiv:2208.14437,2022,</p><p>[2] Yuzhe He, Shuang Liang, Xiaofei Rui, et al. EgoVM: Achieving Precise Ego-Localization using Lightweight Vectorized Maps[J]. arXiv preprint arXiv:2307.08991,2023,</p><p>[3] Jonah Philion and Sanja Fidler. Lift, splat, shoot: Encoding images from arbitrary camera rigs by implicitly unprojecting to 3d[A]. Springer: 194-210</p><p>[4] Yan Wang, Wei-Lun Chao, Divyansh Garg, et al. Pseudo-lidar from visual depth estimation: Bridging the gap in 3d object detection for autonomous driving[A]. 8445-8453</p><p>[5] Yue Wang, Vitor Campagnolo Guizilini, Tianyuan Zhang, et al. Detr3d: 3d object detection from multi-view images via 3d-to-2d queries[A]. PMLR: 180-191</p><p>[6] Yingfei Liu, Tiancai Wang, Xiangyu Zhang, et al. Petr: Position embedding transformation for multi-view 3d object detection[A]. Springer: 531-548</p><p>[7] Jifeng Dai, Haozhi Qi, Yuwen Xiong, et al. Deformable convolutional networks[A]. 764-773</p><p>[8] Xizhou Zhu, Weijie Su, Lewei Lu, et al. Deformable detr: Deformable transformers for end-to-end object detection[J]. arXiv preprint arXiv:2010.04159,2020,</p><p>[9] Junjie Huang, Guan Huang, Zheng Zhu, et al. Bevdet: High-performance multi-camera 3d object detection in bird-eye-view[J]. arXiv preprint arXiv:2112.11790,2021,</p><p>[10] Yinhao Li, Zheng Ge, Guanyi Yu, et al. BEVDepth: Acquisition of Reliable Depth for Multi-View 3D Object Detection[J]. Proceedings of the AAAI Conference on Artificial Intelligence,2023,37(2): 1477-1485</p><p>[11] Nicolas Carion, Francisco Massa, Gabriel Synnaeve, et al. End-to-end object detection with transformers[A].Springer: 213-229</p><p>[12] Zhiqi Li, Wenhai Wang, Hongyang Li, et al. Bevformer: Learning bird’s-eye-view representation from multi-camera images via spatiotemporal transformers[A].Springer: 1-18</p><p>[13] Hongyang Li, Chonghao Sima, Jifeng Dai, et al. Delving into the Devils of Bird's-eye-view Perception: A Review, Evaluation and Recipe[J]. arXiv preprint arXiv:2209.05324,2022,</p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 17 Nov 2023 02:16:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/amaptech/blog/10143491</guid>
            <link>https://my.oschina.net/amaptech/blog/10143491</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Dromara 社区新晋开源项目 - Akali(阿卡丽)，轻量化的热点&降级处理框架！]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><img height="383" src="https://oscimg.oschina.net/oscnet/up-be8fcabf525c0668386e7be6a812d46264e.png" width="900" referrerpolicy="no-referrer"></p><h2>前言</h2><p>Dromara 社区再添一个成员项目！</p><p>今天为大家介绍的是——Akali。</p><p>它轻量小巧，来无影去无踪，不足 500 行代码，却能解决高流量场景中主要的问题：热点处理和降级处理。</p><h2>介绍</h2><p>Akali（阿卡丽）是一个轻量级本地化热点检测/降级框架，适用于大流量场景，可轻松解决业务中超高流量的并发查询等场景。并且接入和使用极其简单，10 秒钟即可接入使用！</p><p>Akali 框架的理念就是小巧，实用，丝血团战，满血退场，所到之处，皆为虚无。</p><p>Gitee：<a href="https://gitee.com/dromara/Akali">https://gitee.com/dromara/Akali</a></p><p>Github：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fbryan31%2FAkali" target="_blank">https://github.com/bryan31/Akali</a></p><p>官方网站：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fakali.yomahub.com%2F" target="_blank">https://akali.yomahub.com/</a></p><h2>使用</h2><p>引入依赖：</p><pre><code>&lt;dependency&gt;
  &lt;groupId&gt;com.yomahub&lt;/groupId&gt;
  &lt;artifactId&gt;akali&lt;/artifactId&gt;
  &lt;version&gt;1.0.1&lt;/version&gt;
&lt;/dependency&gt;
</code></pre><h2>对任意方法进行热点处理</h2><p>只需要加上<code>@AkaliHot</code>这个标注，任意方法均可以获得热点检测，并在热点期间用热点数据进行返回，在热点过后，又会自动调用原本业务逻辑。</p><p>举例：比如有一个商品查询的业务，传入 SkuCode，返回商品信息。当某个商品进行促销时，访问的量就会增加，但是对于相同的 SkuCode 而言，其短时间窗口内返回的 SkuInfo 是一致的，我们的目标是当某个商品 sku 被大量查询时，框架能够在短时间内把这个商品 sku 提为热点数据，并通过对其进行缓存返回来降低对下游业务的压力。而当热点值过后，框架又能够自动摘除这个热点值，使其按照原有方式进行查询。</p><p>其本质相当于实时的监测了热点，并对其热点数据做了一个短时间内的缓存。</p><p>以下示例代表了：当相同的 skuCode 在 5 秒内超过 50 次调用时，会自动把这个 skuCode 的值提为热点，并用最后一次的返回值直接返回。当调用低于 5 秒 50 次调用时，框架会自动的摘除掉这个热点。使其正常的调用你原有代码进行逻辑计算并返回。这一切都是自动的。</p><pre><code>@AkaliHot(grade = FlowGradeEnum.FLOW_GRADE_QPS, count = 50, duration = 5)
public SkuInfo getSkuInfo(String skuCode){
  //do your biz and return sku info
}
</code></pre><p>其中<code>grade</code>参数除了有以<code>QPS</code>作为维度统计，还有以<code>Thread</code>个数作为维度统计。比如：</p><pre><code>@AkaliHot(grade = FlowGradeEnum.FLOW_GRADE_THREAD, count = 50, duration = 5)
public SkuInfo getSkuInfo(String skuCode){
  //do your biz and return sku info
}
</code></pre><p>这就代表了，如果某个 skuCode 在 5 秒之内有超过 50 个线程正在运行，那么就提为热点，并用热点数据直接返回。</p><p>对开源项目比较熟悉的同学看到这肯定想到了京东的框架-<code>hotkey</code>，<code>Akali</code>不同于<code>hotkey</code>，完全是本地运行的，不依赖于服务端，而且接入比<code>hotkey</code> 方便多了。性能完全相当于<code>hotkey</code>。</p><h2>对任意方法进行降级</h2><p>只需要加上<code>@AkaliFallback</code>注解。任意方法均可获得降级功能。</p><p>举例：某一个方法需要调用外部的接口，但是外部的接口性能不佳，耗时高。当并发一高时，线程池就会吃满，线程池队列也会逐渐堆积从而导致超时，或者丢弃，严重时会拖垮整个系统。</p><p>这时，我们只要对这个方法加上<code>@AkaliFallback</code>标注，即可解决。</p><pre><code>@AkaliFallback(grade = FlowGradeEnum.FLOW_GRADE_THREAD, count = 100)
public String sayHi(String name){
  return "hi,"+name;
}

public String sayHiFallback(String name){
  return "fallback str";
}
</code></pre><p>以上注解表示了，当这个方法的同时运行的线程超过 100 个时，触发降级，降级会自动调用<code>原方法名+Fallback</code>方法名 (并且参数要一致)，当降级触发后会直接返回<code>fallback str</code>，当线程数小于 100 时，框架也会自动摘除降级，还是输出<code>hi,xxxx</code>。</p><p>如果你的类中没有定义 fallback 方法，那么触发降级时会报错，当然你可以在降级方法中去抛错，来让上游系统知道你这个方法已经达到了瓶颈。</p><h2>注意事项</h2><p>Akali 只针对于 Springboot，Spring 环境，并且所有标注了<code>@AkaliHot</code>或者<code>@AkaliFallback</code>的类一定得注册到 spring 上下文中。</p><p>Akali 在 springboot 中会自动扫描所有标注的类，您无需做任何配置，在 spring 中，你需要配置：</p><pre><code>&lt;bean class="com.yomahub.akali.strategy.FallbackStrategy"/&gt;
&lt;bean class="com.yomahub.akali.strategy.MethodHotspotStrategy"/&gt;
&lt;bean class="com.yomahub.akali.spring.AkaliScanner"/&gt;
</code></pre><h2>最后</h2><p>如果大家感兴趣的话，请在 Gitee 上为 Akali 点上小星星哦。</p><p>Gitee：<a href="https://gitee.com/dromara/Akali">https://gitee.com/dromara/Akali</a></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 17 Nov 2023 01:09:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266848</guid>
            <link>https://www.oschina.net/news/266848</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[微软推出全新「Windows App」]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">微软在&nbsp;Ignite 2023 上宣布推出一款适用于 iOS、iPadOS、Web 和 Windows 的全新「Windows App」，目前正以预览版形式提供。</span></p><p><span style="color:#000000">用户可以通过该 APP 连接 Windows 365、Azure 虚拟桌面、Microsoft Dev Box 或个人远程桌面 PC。在手机或 iPad 上，用户无需下载或安装任何内容即可启动 Windows 环境。</span></p><p><span style="color:#000000"><img alt="" height="309" src="https://oscimg.oschina.net/oscnet/up-6de517b3878e038efe903ec950a3f14d987.webp" width="500" referrerpolicy="no-referrer"></span></p><p><span style="color:#000000">新的 Windows APP 带来了多项新功能：如支持多显示器、自定义显示分辨率、动态显示缩放、网络摄像头、音频和打印机的设备重定向等。用户可以固定最喜欢的应用程序，以便快速访问，还可以在不同账户之间轻松切换。</span></p><p><span style="color:#000000">虽然微软官方表示该应用程序仅上架 iOS、Windows、macOS 以及网页端，但提供的屏幕截图显示 Android&nbsp;平板上也能运行该应用。或许 Android 版本将会在不久的未来推出。</span></p><p><span style="color:#000000">不过，该 Windows APP 仅面向微软企业用户提供，个人账户无法访问相关服务。但有迹象表明，微软计划通过 Windows 365 为普通消费者提供云 PC。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 16 Nov 2023 09:57:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266787/microsoft-windows-app-launched-run-cloud-pc</guid>
            <link>https://www.oschina.net/news/266787/microsoft-windows-app-launched-run-cloud-pc</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[ClickHouse 联合创始人、前 Google 副总裁 Yury 到访杭州玖章算术公司，双方建立生态合作]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span><span style="color:#000000">10 月 31 日，ClickHouse 联合创始人 Yury 到访未来科技城，与玖章算术创始人叶正盛和国际总经理 Ni Demai 展开沟通与推进合作。</span></span></p><div><p style="text-align:center"><img alt="" height="1280" src="https://oscimg.oschina.net/oscnet/up-3abad57e89ff8fcc5278d96ff167a2bf87d.jpg" width="1707" referrerpolicy="no-referrer"></p><p style="color:#999999; margin-left:0; margin-right:0; text-align:center">图片备注：Ni Demai(左),Yury(中),叶正盛 (右)</p></div><p style="margin-left:0; margin-right:0"><span><span style="color:#000000">ClickHouse 是深受开发者青睐的实时分析型数据库，成立 2 年就发展成为基础软件领域的独角兽，玖章算术核心产品 NineData 则是中国数据库工具领域的佼佼者。通过本次沟通，</span><span style="color:#f04142">ClickHouse 将继续增加其在生态能力上的投入，引入玖章算术成为 ClickHouse 全球正式合作伙伴</span><span style="color:#000000">，NineData 将提供数据复制、SQL 开发等能力，帮助开发者更加便捷、稳定地使用 ClickHouse。</span></span></p><p style="margin-left:0; margin-right:0"><span><span style="color:#000000">ClickHouse 中国区负责人王楠（Tracy）、玖章算术首席产品经理蔡冬者参与了本次会议，双方深度交流了 NineData 帮助 ClikHouse 完成数据复制的实践场景，将在 ClickHouse 中国社区发展深度合作。</span></span></p><p style="margin-left:0px; margin-right:0px; text-align:center"><img alt="" height="1659" src="https://oscimg.oschina.net/oscnet/up-29fbbc98347ec5e04fcc19c903bdcbea0d0.jpg" width="2091" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0">Yury 作为 ClickHouse 的联合创始人、产品和工程总裁，是前谷歌、Netflix 的副总裁。<span style="color:#f04142">本次代表 ClickHouse 与玖章算术 CEO 叶正盛进行沟通，旨在加强两家公司之间的合作，增强 ClickHouse 的生态能力建设，帮助开发者更好地使用 ClickHouse。</span></p><p style="margin-left:0px; margin-right:0px; text-align:center"><img alt="" height="1080" src="https://oscimg.oschina.net/oscnet/up-d6908642b538092775611c1383c849b5928.jpg" width="2301" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0"><span><span style="color:#000000">叶正盛是玖章算术创始人，在数据库生态工具产品里有 20 年经验，是国内把数据库生态工具体系做成专业产品的第一人。后续，</span><span style="color:#f04142">NineData 将快速支持 ClickHouse 最新版本，适配 ClickHouse Cloud，同时会更大力度投入中国 ClickHouse 社区建设。</span></span></p><div><p style="text-align:center"><img alt="" height="1080" src="https://oscimg.oschina.net/oscnet/up-e0d4a2d815c5fc2bf9daf62ae54c45c901c.jpg" width="2301" referrerpolicy="no-referrer"></p><p style="color:#999999; margin-left:0; margin-right:0; text-align:center">玖章算术创始人叶正盛（中）</p></div><p style="margin-left:0; margin-right:0"><span><span style="color:#000000">NineData 提供企业级 SQL 开发能力，包括数据库堡垒机、生产变更服务，以及细粒度权限管控、审计、敏感数据脱敏处理等功能。并集成了大模型 AI 技术，提供智能 SQL 编写、SQL 优化和数据库专业知识问答，能够帮助客户提高 DBA 与技术团队及 ISV 伙伴的合作效率。</span></span></p><p style="margin-left:0; margin-right:0"><span><span style="color:#000000">NineData 的数据复制能力可应用于多种场景，包括在线数据库到数据仓库实时同步、数据库国产化替换、数据上云、数据容灾等，支持 1000 公里数据实时同步，复制性能超过 10 万 TPS，领先于市场主流产品。</span></span></p><p style="margin-left:0; margin-right:0"><span><span style="color:#000000">NineData 的创始团队由阿里云、华为、IBM 等公司资深数据库专家组成。NineData 支持 MySQL、Oracle、PostgreSQL、ClickHouse、Redis、MongoDB、Doris 等 60 种主流数据源。</span></span></p><div><p style="text-align:center"><img alt="" height="1332" src="https://oscimg.oschina.net/oscnet/up-7e72cd287ff75493e4b1730da64f74e22f5.png" width="2878" referrerpolicy="no-referrer"></p><p style="color:#999999; margin-left:0; margin-right:0; text-align:center">NineData 支持 60 种主流数据源</p></div><p style="margin-left:0; margin-right:0"><span><span style="color:#000000">目前，NineData 已经为上万开发者提供服务，在中国移动、沃尔沃、绿城集团等大型企业上线，与华为云、阿里云、腾讯云、百度云、移动云、AWS、Apache Doris、SelectDB 等平台建立了紧密合作关系。NineData 的目标是让企业各个数据源之间的数据自由流动，让数据管理与研发流程更安全、更高效。</span></span></p><p style="margin-left:0px; margin-right:0px"><span><strong><span style="color:#000000">结束语：</span></strong><span style="color:#000000"><span>&nbsp;</span>ClickHouse 与玖章算术 NineData 的合作将促进其生态系统的发展，NineData 将更好地支持 ClickHouse 数据库复制、SQL 开发等。这一合作将为中国的 ClickHouse 社区带来更多支持和创新，进一步推动社区发展，帮助开发者更好的使用 ClickHouse，发掘数据价值，推进企业业务发展。</span></span></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 16 Nov 2023 09:51:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266785</guid>
            <link>https://www.oschina.net/news/266785</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[GitHub 报告：TypeScript 取代 Java 成为第三受欢迎语言]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">GitHub 发布了 2023 年度&nbsp;Octoverse 开源状态报告。主要研究了围绕 AI、云和 Git 的开源活动如何改变开发人员体验，以及如何在开发者和企业中产生越来越大的影响。</span></p><p><span style="color:#000000">报告发现了三大趋势：</span></p><ul><li><span style="color:#000000"><strong>开发人员正在大量使用生成式 AI 进行构建。</strong>越来越多的开发人员尝试使用 OpenAI 和其他 AI 公司的基础模型，开源生成式 AI 项目甚至在 2023 年进入了按贡献者数量排名的十大最受欢迎的开源项目。几乎所有开发人员 (92%) 都在使用或尝试借助 AI 编码工具。</span></li><li><span style="color:#000000"><strong>开发人员正在大规模运行云原生应用程序。</strong>使用基于 Git 的基础设施即代码 (IaC) 工作流的声明式语言越来越多，云部署的标准化程度更高，开发人员使用 Dockerfile 和容器、IaC 以及其他云原生技术的速度也急剧加快。</span></li><li><span style="color:#000000"><strong>2023 年 first-time 开源贡献者数量最多。</strong>其中，有商业支持的开源项目依旧最受贡献者欢迎。但生成式 AI 项目在今年进入了 first-time 贡献者最受欢迎的的十大项目之列。GitHub 上的私人项目显着增长，同比增长 38%，占 GitHub 上所有活动的 80% 以上。</span></li></ul><p><span style="color:#000000"><strong>全球开发者社区</strong>继续增长。美国拥有 2020 万开发者，开发者人数在去年增长了 21%，仍然是全球最大的开发者社区。亚太地区、非洲、南美洲和欧洲的开发者社区规模逐年扩大，其中印度、巴西和日本处于领先地位。</span></p><p><span style="color:#000000">预计到 2027 年，印度将取代美国成为 GitHub 上最大的开发者社区。新加坡今年是亚太地区开发者人数增长最快的国家，并且是开发者占总人口的比例最高的第地区（全球范围内）。报告指出，由于日本在技术和初创企业方面的进一步投资，明年日本的开发者将有持续增长。</span></p><p><img alt="" height="281" src="https://oscimg.oschina.net/oscnet/up-ac720a0e760e91cc5b2eb3fbe5912621880.webp" width="500" referrerpolicy="no-referrer"></p><p><img height="356" src="https://oscimg.oschina.net/oscnet/up-80f62228356fcbdefb478e041a0eac39e37.png" width="400" referrerpolicy="no-referrer"></p><p><span style="color:#000000"><strong>生成式 AI </strong>在 2023 年经历了爆发式增长，仅半年内涌现出的生成式 AI 项目数量就已达到了 2022 年全年的两倍之多。开发人员也开始更多地尝试使用 AI 模型。前几年，开发人员常使用 tensorflow/tensorflow、pytorch/pytorch 等机器学习库构建项目；现在则更多尝试使用 AI 模型和 LLM（如 ChatGPT API）。</span></p><p><img height="270" src="https://oscimg.oschina.net/oscnet/up-7496f60e2ee0f94240f5faf6341e5262a5b.png" width="500" referrerpolicy="no-referrer"></p><p><span style="background-color:#ffffff; color:rgba(0, 0, 0, 0.9)">报告分析了 GitHub 上排名前 20 位的开源生成式 AI 项目，发现其中一些顶级项目都是由个人所有。生成式 AI 项目中的个人贡献者正在全球范围内大幅飙升，同比增长幅度达到了 148%，而生成式 AI 项目总数也同比增长 248%。</span></p><p><span style="background-color:#ffffff; color:rgba(0, 0, 0, 0.9)">美国、印度和日本在开发者社区中处于领先地位，</span><span style="background-color:#ffffff; color:#24292f">香港特别行政区</span><span style="background-color:#ffffff; color:rgba(0, 0, 0, 0.9)">、英国和巴西紧随其后。</span></p><p><img height="257" src="https://oscimg.oschina.net/oscnet/up-24b4f2b8554174e97591f4e9b11183c4b8e.png" width="500" referrerpolicy="no-referrer"></p><p><strong style="color:rgba(0, 0, 0, 0.9)">最流行的编程语言</strong></p><p><img height="144" src="https://oscimg.oschina.net/oscnet/up-3a0a14c95ce1e310f742e6ce36ad9af9795.png" width="500" referrerpolicy="no-referrer"></p><p>报告指出，<span style="background-color:#ffffff; color:rgba(0, 0, 0, 0.9)">自 2019 年云原生开发大规模增长以来，IaC 在开源领域持续增长。2023 年，Shell 和 Hashicorp 配置语言（HCL）再次成为开源项目中的顶级语言，</span><span style="background-color:#ffffff; color:#24292f">HCL 采用率同比增长 36%；「表明运维和 IaC 工作在开源领域越来越受到重视」。</span></p><p><img height="263" src="https://oscimg.oschina.net/oscnet/up-72dde2bf24c363d79ba454d8df65c964a2b.png" width="500" referrerpolicy="no-referrer"></p><ul style="list-style-type:disc; margin-left:0; margin-right:0"><li><span style="color:#000000">JavaScript 仍然是 GitHub 上最常用的语言，其次是 Python。</span></li><li><span style="color:#000000">TypeScript 越来越受欢迎，<span style="background-color:#ffffff">首次取代 Java 成为 GitHub 上 OSS 项目中第三大最受欢迎的语言，其用户群增长了 37%。</span></span></li><li><span style="color:#000000">用于数据分析和操作的流行语言和框架明显增加。T-SQL 和 TeX 等古老的语言在 2023 年均有所增长，凸显了数据科学家、数学家和分析师越来越多地使用开源平台和工具。「<span style="background-color:#ffffff">编程语言不再仅仅局限于传统软件开发领域</span>」。</span></li><li><span style="color:#000000"><span style="background-color:#ffffff">在 GitHub 上一些较新的项目中，Kotlin、Rust、Go 和 Lua 的采用出现了较大的增长。「Rust 和 Lua 都以内存安全和高效著称，而且都可用于系统和嵌入式系统编程，这也是它们增长的原因。而 Go 最近的增长则是由 Kubernetes 和 Prometheus 等云原生项目的推动。」</span></span></li></ul><p><img height="262" src="https://oscimg.oschina.net/oscnet/up-58e41eb95e2505a64d2a2a8a7b46fdf4ee6.png" width="500" referrerpolicy="no-referrer"></p><p><span style="color:#000000"><span style="background-color:#ffffff">其他一些发现还包括：</span></span></p><ul><li><span style="color:#000000"><span style="background-color:#ffffff">与 2022 年相比，2023 年开源代码开发人员合并的针对易受攻击软件包的自动 Dependabot 拉取请求增加了 60%</span></span></li><li><span style="color:#000000"><span style="background-color:#ffffff">2023 年，</span><span style="background-color:#ffffff">开发者</span><span style="background-color:#ffffff">为 GitHub 上的开源项目做出了 3.01 亿次贡献，这些项目既有像 Mastodon 这样的热门项目，也有像 Stable Diffusion 和 LangChain 这样的生成式 AI 项目。</span></span></li><li><span style="color:#000000"><span style="background-color:#ffffff">2023 年有 430 万个存储库使用了 Docker。Linux 发行版 NixOS/nixpkgs 在过去两年中一直位居开源项目贡献者榜首。</span></span></li></ul><p><span style="background-color:#ffffff; color:#333333">更多详情可</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.blog%2F2023-11-08-the-state-of-open-source-and-ai%2F" target="_blank">查看完整报告</a><span style="background-color:#ffffff; color:#333333">。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 16 Nov 2023 07:57:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266757/2023-state-of-the-octoverse</guid>
            <link>https://www.oschina.net/news/266757/2023-state-of-the-octoverse</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[李开复再回应争议：受益于开源也贡献开源]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>针对旗下「零一万物」 开源的 Yi 大模型近日被质疑照搬 Llama 架构，只对两个张量（Tensor）名称做了修改的风波，李开复在朋友圈<span style="color:#030303">转发了「</span><a href="https://www.oschina.net/news/266597" target="news">零一万物对 Yi-34B 训练过程的说明</a><span style="color:#030303">」文章，并配文</span>回应称：</p><blockquote><p><span style="color:#030303">零一万物 Yi-34B 模型训练的说明也回应这两天大家对于模型架构的探讨。全球大模型架构一路从 GPT2--&gt;Gopher--&gt;Chinchilla--&gt;Llama2-&gt;Yi，行业逐渐形成大模型的通用标准（就像做一个手机 app 开发者不会去自创 iOS、Android 以外的全新基础架构）。01.AI 起步受益于开源，也贡献开源，从社区中虚心学习，我们会持续进步。</span></p></blockquote><p><img height="290" src="https://static.oschina.net/uploads/space/2023/1116/141708_SLoh_4252687.png" width="300" referrerpolicy="no-referrer"></p><p><strong>相关阅读：</strong></p><ul><li><a href="https://www.oschina.net/news/266377">李开复旗下 AI 公司 「零一万物」 开源的 Yi 大模型照搬 Llama 架构</a></li><li><a href="https://www.oschina.net/news/266525">「零一万物」 回应 Yi 开源大模型 「套壳」 Llama</a></li><li><p style="margin-left:0px; margin-right:0px; text-align:start"><a href="https://www.oschina.net/news/266597" target="_blank">零一万物对 Yi-34B 训练过程的说明</a></p></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Wed, 15 Nov 2023 06:14:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266727</guid>
            <link>https://www.oschina.net/news/266727</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[.NET 8.0 中有哪些新的变化？]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><strong>1 性能提升</strong></p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdevblogs.microsoft.com%2Fdotnet%2Fperformance-improvements-in-aspnet-core-8%2F" target="_blank">.NET 8 在整个</a><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdevblogs.microsoft.com%2Fdotnet%2Fdotnet-8-performance-improvements-in-dotnet-maui%2F" target="_blank">堆栈</a><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdevblogs.microsoft.com%2Fdotnet%2Fthis-arm64-performance-in-dotnet-8%2F" target="_blank">中</a>带来了数千项性能<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdevblogs.microsoft.com%2Fdotnet%2Fperformance-improvements-in-net-8%2F" target="_blank">改进</a> 。默认情况下会启用一种名为动态配置文件引导优化 (PGO) 的新代码生成器，它可以根据实际使用情况优化代码，并且可以将应用程序的性能提高高达 20%。现在支持的 AVX-512 指令集能够对 512 位数据向量执行并行操作，这意味着可以在更短的时间内处理更多的数据。原始类型（数字及其他类型）现在实现了新的可格式化和可解析接口，这使它们能够直接格式化和解析为 UTF-8，而无需任何转码开销。 <img src="https://img-blog.csdnimg.cn/img_convert/b91071a2632a5da242e53238fb844e52.png" alt="" referrerpolicy="no-referrer"></p><p><strong>2.NET Aspire</strong></p><p>.NET Aspire 是一个用于使用 .NET 构建弹性、可观察和可配置的云原生应用程序的堆栈。它包括一组针对云原生而增强的精选组件，默认情况下包括遥测、弹性、配置和运行状况检查。结合复杂而简单的本地开发人员体验，.NET Aspire 可以在第 1 天和第 100 天轻松发现、获取和配置云原生应用程序的基本依赖项。</p><p>点击这里查看.NET Aspire 的预览版本。 <img src="https://img-blog.csdnimg.cn/img_convert/ba664a021af354f1fc46c013578b8946.png" alt="" referrerpolicy="no-referrer"></p><p><strong>3.NET 8 容器增强功能 – 更安全、更紧凑、更高效</strong></p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdevblogs.microsoft.com%2Fdotnet%2Fsecuring-containers-with-rootless%2F" target="_blank">使用 .NET 比以往更轻松、更安全地使用容器</a>打包应用程序。每个 .NET 映像都包含一个非 root 用户，从而通过单行配置启用更安全的容器。.NET SDK 工具无需 Dockerfile 即可发布容器映像，并且默认情况下是非 root 的。由于 .NET 基础映像更小，因此可以更快地部署容器化应用程序 - 包括我们映像的新实验变体，这些变体可为本机 AOT 提供真正最小的应用程序大小。选择使用新的 Chiseled Ubuntu 映像变体进行更多安全强化，以进一步减少攻击面。使用 Dockerfile 或 SDK 工具，为任何架构构建应用程序和容器映像。 <img src="https://img-blog.csdnimg.cn/img_convert/16b65a6962356cd1e24f164cf66ead3c.png" alt="" referrerpolicy="no-referrer"></p><p><strong>4 原生 AoT – 迈向更高密度可持续计算的旅程</strong></p><p>无需等待 JIT（即时）编译器在运行时编译代码。无需部署 JIT 编译器和 IL 代码。AOT 应用程序仅部署应用程序所需的代码。应用程序现在可以在不允许使用 JIT 编译器的受限环境中运行。 <img src="https://img-blog.csdnimg.cn/img_convert/5037b084ad2c4e26f6696f6c7b74712a.png" alt="" referrerpolicy="no-referrer"></p><p><strong>5 人工智能 – 将 AI 融入您的 .NET 应用程序</strong></p><p>生成式人工智能和大型语言模型正在改变人工智能领域，使开发人员能够在其应用程序中创建独特的人工智能体验。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgist.github.com%2FLadyNaggaga%2F5b0a708f2b945f5c8ca8ade4974665ff" target="_blank">.NET 8 可以</a>通过 .NET SDK 中一流的开箱即用 AI 功能以及与多种工具的无缝集成来轻松利用 AI。</p><p>.NET 8 为该，库带来了多项增强功能，以提高其与生成式 AI 工作负载的兼容性，例如集成 Tensor Primitives。随着人工智能应用程序的兴起，新的工具和 SDK 出现了。我们与众多内部和外部合作伙伴合作，例如 Azure OpenAI、Azure Cognitive Search、Milvus、Qdrant 和 Microsoft Teams，以确保 .NET 开发人员可以通过各自的 SDK 轻松访问各种 AI 模型、服务和平台。此外，开源语义内核 SDK 简化了这些 AI 组件与新的和现有应用程序的集成，以帮助您提供创新的用户体验。System.Numerics</p><p>现在提供各种示例和参考模板，展示模式和实践，以便开发人员轻松入门：</p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdotnet%2FeShop" target="_blank">客户聊天机器人</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FAzure-Samples%2Fazure-search-openai-demo-csharp" target="_blank">检索增强生成</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdevblogs.microsoft.com%2Fdotnet%2Fdemystifying-retrieval-augmented-generation-with-dotnet%2F" target="_blank">使用 Azure AI 服务开发应用程序</a><img src="https://img-blog.csdnimg.cn/img_convert/892b90ec5d84e0bf792f8dba707dce58.png" alt="" referrerpolicy="no-referrer"></li></ul><p><strong>6Blazor – 使用 .NET 构建全栈 Web 应用程序</strong></p><p>.NET 8 中的 Blazor 可以同时使用服务器和客户端来处理您的所有 Web UI 需求。这是全栈 Web UI！通过专注于优化页面加载时间、可扩展性和提升用户体验的多项新增强功能，开发人员现在可以在同一应用程序中使用 Blazor Server 和 Blazor WebAssembly，在运行时自动将用户从服务器转移到客户端。得益于新的基于「Jiterpreter」的运行时和新的内置组件，您的 .NET 代码在 WebAssembly 上的运行速度显着加快。作为增强.NET 8 中整体身份验证、授权和身份管理的一部分，Blazor 现在支持生成完整的基于 Blazor 的身份 UI。 <img src="https://img-blog.csdnimg.cn/img_convert/f0563b1ef218bb7b09130df55e5de700.png" alt="" referrerpolicy="no-referrer"></p><p><strong>7.NET MAUI – 提升性能、可靠性和开发人员体验</strong></p><p>.NET MAUI 提供单一项目系统和单一代码库来构建 WinUI、Mac Catalyst、iOS 和 Android 应用程序。本机 AOT（实验性）现在支持针对类似 iOS 的平台。适用于 .NET MAUI 的新 Visual Studio Code 扩展为您提供了开发跨平台 .NET 移动和桌面应用程序所需的工具。现在支持 Xcode 15 和 Android API 34，允许您瞄准最新版本的 iOS 和 Android。在性能、控件和 UI 元素以及特定于平台的行为方面进行了大量的质量改进，例如桌面交互添加了更好的点击处理、键盘侦听器等。 <img src="https://img-blog.csdnimg.cn/img_convert/130807a5e11b784d65aa556290afda0d.png" alt="" referrerpolicy="no-referrer"></p><p><strong>8 C# 12 功能 – 简化语法以提高开发人员的工作效率</strong></p><p>C# 12 让您的编码体验更加高效和愉快。现在，您可以使用简单而优雅的语法在任何类和结构中创建主构造函数。不再需要样板代码来初始化您的字段和属性。使用简洁且富有表现力的语法创建数组、跨度和其他集合类型时会感到高兴。对 lambda 表达式中的参数使用新的默认值。不再需要重载或空检查来处理可选参数。您甚至可以使用 usingalias 指令为任何类型添加别名，而不仅仅是命名类型！</p><p><strong>8.1 集合表达式</strong></p><p>在 C# 12 之前，创建集合需要针对不同场景使用不同的语法。初始化所需的与 or 不同的语法。以下是创建集合的几种方法：List&lt;int&gt;int[]Span&lt;int&gt;</p><pre><code class="language-C#">int[] x1 = new int[] { 1, 2, 3, 4 };
int[] x2 = Array.Empty&lt;int&gt;();
WriteByteArray(new[] { (byte)1, (byte)2, (byte)3 });
List&lt;int&gt; x4 = new() { 1, 2, 3, 4 };
Span&lt;DateTime&gt; dates = stackalloc DateTime[] { GetDate(0), GetDate(1) };
WriteByteSpan(stackalloc[] { (byte)1, (byte)2, (byte)3 });
</code></pre><p><strong>8.2 任何类或结构上的主构造函数</strong></p><p>C# 12 扩展了主构造函数以适用于所有类和结构，而不仅仅是记录。主构造函数允许在声明类时定义构造函数参数：</p><pre><code class="language-C#">public class BankAccount(string accountID, string owner)
{
    public string AccountID { get; } = accountID;
    public string Owner { get; } = owner;

    public override string ToString() =&gt; $"Account ID: {AccountID}, Owner: {Owner}";
}
</code></pre><p>主构造函数参数最常见的用途是：</p><ul><li>作为 base() 构造函数调用的参数。</li><li>初始化成员字段或属性。</li><li>在实例成员中引用构造函数参数。</li><li>删除依赖注入中的样板。</li></ul><p><strong>8.3 别名任意类型</strong></p><p>别名类型是从代码中删除复杂类型签名的便捷方法。using 从 C# 12 开始，其他类型在别名指令中有效。例如，这些别名在早期版本的 C# 中无效：</p><pre><code class="language-C#">using intArray = int[]; // Array types.
using Point = (int x, int y);  // Tuple type
using unsafe ArrayPtr = int*;  // Pointer type (requires "unsafe")
</code></pre><p><strong>8.4 默认 lambda 参数</strong></p><p>从 C# 12 开始，您可以在 lambda 表达式中声明默认参数：</p><pre><code class="language-C#">var IncrementBy = (int source, int increment = 1) =&gt; source + increment;

Console.WriteLine(IncrementBy(5)); // 6
Console.WriteLine(IncrementBy(5, 2)); // 7
</code></pre><p><strong>8.5 内联数组</strong></p><p>运行时团队和其他库作者使用内联数组来提高应用的性能。 内联数组使开发人员能够创建固定大小的 struct 类型数组。 具有内联缓冲区的结构应提供类似于不安全的固定大小缓冲区的性能特征。 你可能不会声明自己的内联数组，但当它们从运行时 API 作为 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flearn.microsoft.com%2Fzh-cn%2Fdotnet%2Fapi%2Fsystem.span-1" target="_blank">System.Span&lt;T&gt;</a> 或 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flearn.microsoft.com%2Fzh-cn%2Fdotnet%2Fapi%2Fsystem.readonlyspan-1" target="_blank">System.ReadOnlySpan&lt;T&gt;</a> 对象公开时，你将透明地使用这些数组。</p><pre><code class="language-C#">[System.Runtime.CompilerServices.InlineArray(10)]
public struct Buffer
{
    private int _element0;
}
</code></pre><p>它们的用法与任何其他数组类似：</p><pre><code class="language-C#">var buffer = new Buffer();
for (int i = 0; i &lt; 10; i++)
{
    buffer[i] = i;
}

foreach (var i in buffer)
{
    Console.WriteLine(i);
}
</code></pre><p>区别在于编译器可以利用有关内联数组的已知信息。 你可能会像使用任何其他数组一样使用内联数组。 有关如何声明内联数组的详细信息，请参阅有关 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flearn.microsoft.com%2Fzh-cn%2Fdotnet%2Fcsharp%2Flanguage-reference%2Fbuiltin-types%2Fstruct%23inline-arrays" target="_blank">struct</a><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flearn.microsoft.com%2Fzh-cn%2Fdotnet%2Fcsharp%2Flanguage-reference%2Fbuiltin-types%2Fstruct%23inline-arrays" target="_blank">类型</a>的语言参考。</p><p><strong>9.反射改进</strong></p><p>.NET 5 中引入了函数指针，但当时未添加对反射的相应支持。 对函数指针使用 typeof 或反射时（例如分别使用 typeof(delegate*&lt;void&gt;()) 或 FieldInfo.FieldType），返回了 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flearn.microsoft.com%2Fzh-cn%2Fdotnet%2Fapi%2Fsystem.intptr" target="_blank">IntPtr</a>。 从 .NET 8 开始，将改为返回 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flearn.microsoft.com%2Fzh-cn%2Fdotnet%2Fapi%2Fsystem.type" target="_blank">System.Type</a> 对象。 此类型提供对函数指针元数据的访问，包括调用约定、返回类型和参数。</p><p>新功能目前仅在 CoreCLR 运行时和 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flearn.microsoft.com%2Fzh-cn%2Fdotnet%2Fapi%2Fsystem.reflection.metadataloadcontext" target="_blank">MetadataLoadContext</a> 中实现。已将新的 API 添加到 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flearn.microsoft.com%2Fzh-cn%2Fdotnet%2Fapi%2Fsystem.type" target="_blank">System.Type</a>（例如 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flearn.microsoft.com%2Fzh-cn%2Fdotnet%2Fapi%2Fsystem.type.isfunctionpointer%23system-type-isfunctionpointer" target="_blank">IsFunctionPointer</a>）以及 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flearn.microsoft.com%2Fzh-cn%2Fdotnet%2Fapi%2Fsystem.reflection.propertyinfo" target="_blank">System.Reflection.PropertyInfo</a>、System.Reflection.FieldInfo 和 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flearn.microsoft.com%2Fzh-cn%2Fdotnet%2Fapi%2Fsystem.reflection.parameterinfo" target="_blank">System.Reflection.ParameterInfo</a>。 以下代码演示如何使用一些新 API 进行反射。</p><pre><code class="language-C#">// Sample class that contains a function pointer field.
public unsafe class UClass
{
    public delegate* unmanaged[Cdecl, SuppressGCTransition]&lt;in int, void&gt; _fp;
}

// ...

FieldInfo fieldInfo = typeof(UClass).GetField(nameof(UClass._fp));

// Obtain the function pointer type from a field.
Type fpType = fieldInfo.FieldType;

// New methods to determine if a type is a function pointer.
Console.WriteLine($"IsFunctionPointer: {fpType.IsFunctionPointer}");
Console.WriteLine($"IsUnmanagedFunctionPointer: {fpType.IsUnmanagedFunctionPointer}");

// New methods to obtain the return and parameter types.
Console.WriteLine($"Return type: {fpType.GetFunctionPointerReturnType()}");

foreach (Type parameterType in fpType.GetFunctionPointerParameterTypes())
{
    Console.WriteLine($"Parameter type: {parameterType}");
}

// Access to custom modifiers and calling conventions requires a "modified type".
Type modifiedType = fieldInfo.GetModifiedFieldType();

// A modified type forwards most members to its underlying type.
Type normalType = modifiedType.UnderlyingSystemType;

// New method to obtain the calling conventions.
foreach (Type callConv in modifiedType.GetFunctionPointerCallingConventions())
{
    Console.WriteLine($"Calling convention: {callConv}");
}

// New method to obtain the custom modifiers.
foreach (Type modreq in modifiedType.GetFunctionPointerParameterTypes()[0].GetRequiredCustomModifiers())
{
    Console.WriteLine($"Required modifier for first parameter: {modreq}");
}
</code></pre><p>输出：</p><pre><code class="language-C#">IsFunctionPointer: True
IsUnmanagedFunctionPointer: True
Return type: System.Void
Parameter type: System.Int32&amp;
Calling convention: System.Runtime.CompilerServices.CallConvSuppressGCTransition
Calling convention: System.Runtime.CompilerServices.CallConvCdecl
Required modifier for first parameter: System.Runtime.InteropServices.InAttribute
</code></pre><p><strong>10.配置绑定源生成器</strong></p><p>.NET 8 引入了一个源生成器，用于在 ASP.NET Core 中提供 AOT 和适合剪裁的配置。 该生成器是现有的基于反射的实现的替代方法。</p><p>源生成器探测 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flearn.microsoft.com%2Fzh-cn%2Fdotnet%2Fapi%2Fmicrosoft.extensions.options.configureoptions-1.configure%23microsoft-extensions-options-configureoptions-1-configure%28-0%29" target="_blank">Configure(TOptions)</a>、Bind 和 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flearn.microsoft.com%2Fzh-cn%2Fdotnet%2Fapi%2Fmicrosoft.extensions.configuration.configurationbinder.get" target="_blank">Get</a> 调用来从中检索类型信息。 在项目中启用生成器后，编译器将隐式选择生成的方法，而非预先存在的基于反射的框架实现。</p><p>无需更改源代码即可使用生成器。 AOT Web 应用中默认启用该生成器。 对于其他项目类型，源生成器默认关闭，但你可通过在项目文件中将 EnableConfigurationBindingGenerator 属性设置为 true 来选择使用它：</p><pre><code class="language-XML">&lt;PropertyGroup&gt;
    &lt;EnableConfigurationBindingGenerator&gt;true&lt;/EnableConfigurationBindingGenerator&gt;
&lt;/PropertyGroup&gt;
</code></pre><p>以下代码演示了调用绑定器的示例：</p><pre><code class="language-C#">using Microsoft.AspNetCore.Builder;
using Microsoft.Extensions.Configuration;
using Microsoft.Extensions.DependencyInjection;

WebApplicationBuilder builder = WebApplication.CreateBuilder(args);
IConfigurationSection section = builder.Configuration.GetSection("MyOptions");

// !! Configure call - to be replaced with source-gen'd implementation
builder.Services.Configure&lt;MyOptions&gt;(section);

// !! Get call - to be replaced with source-gen'd implementation
MyOptions options0 = section.Get&lt;MyOptions&gt;();

// !! Bind call - to be replaced with source-gen'd implementation
MyOptions options1 = new MyOptions();
section.Bind(options1);

WebApplication app = builder.Build();
app.MapGet("/", () =&gt; "Hello World!");
app.Run();

public class MyOptions
{
    public int A { get; set; }
    public string S { get; set; }
    public byte[] Data { get; set; }
    public Dictionary&lt;string, string&gt; Values { get; set; }
    public List&lt;MyClass&gt; Values2 { get; set; }
}

public class MyClass
{
    public int SomethingElse { get; set; }
}
</code></pre><p><strong>11.针对 Android 应用的 AOT 编译</strong></p><p>为了减小应用大小，面向 Android 的 .NET 和 .NET MAUI 应用在发布模式下构建时使用分析的预先 (AOT) 编译模式。 与常规 AOT 编译相比，分析的 AOT 编译所影响的方法更少。 .NET 8 引入了 &lt;AndroidStripILAfterAOT&gt; 属性，你可使用它进一步对 Android 应用进行 AOT 编译，从而更进一步减少应用大小。</p><pre><code class="language-XML">&lt;PropertyGroup&gt;
  &lt;AndroidStripILAfterAOT&gt;true&lt;/AndroidStripILAfterAOT&gt;
&lt;/PropertyGroup&gt;
</code></pre><p>默认情况下，将 AndroidStripILAfterAOT 设置为 true 会替代默认的 AndroidEnableProfiledAot 设置，从而允许剪裁已 AOT 编译的（几乎）所有方法。 还可通过将两个属性都显式设置为 true 来结合使用分析的 AOT 和 IL 条带化：</p><pre><code class="language-XML">&lt;PropertyGroup&gt;
  &lt;AndroidStripILAfterAOT&gt;true&lt;/AndroidStripILAfterAOT&gt;
  &lt;AndroidEnableProfiledAot&gt;true&lt;/AndroidEnableProfiledAot&gt;
&lt;/PropertyGroup&gt;
</code></pre><p><strong>12.代码分析</strong></p><p>.NET 8 包括几个新的代码分析器和修复程序，可帮助验证是否正确且高效地使用 .NET 库 API。 下表总结了新的分析器。</p><table><thead><tr><th>规则 ID</th><th>类别</th><th>说明</th></tr></thead><tbody><tr><td>CA1856</td><td>性能</td><td>未在参数上正确应用 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flearn.microsoft.com%2Fzh-cn%2Fdotnet%2Fapi%2Fsystem.diagnostics.codeanalysis.constantexpectedattribute" target="_blank">ConstantExpectedAttribute</a> 属性时触发。</td></tr><tr><td>CA1857</td><td>性能</td><td>当参数使用 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flearn.microsoft.com%2Fzh-cn%2Fdotnet%2Fapi%2Fsystem.diagnostics.codeanalysis.constantexpectedattribute" target="_blank">ConstantExpectedAttribute</a> 添加批注但提供的参数不是常量时触发。</td></tr><tr><td><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flearn.microsoft.com%2Fzh-cn%2Fdotnet%2Ffundamentals%2Fcode-analysis%2Fquality-rules%2Fca1858" target="_blank">CA1858</a></td><td>性能</td><td>若要确定字符串是否以给定前缀开头，最好调用 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flearn.microsoft.com%2Fzh-cn%2Fdotnet%2Fapi%2Fsystem.string.startswith" target="_blank">String.StartsWith</a>，而不是调用 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flearn.microsoft.com%2Fzh-cn%2Fdotnet%2Fapi%2Fsystem.string.indexof" target="_blank">String.IndexOf</a>，然后将结果与零进行比较。</td></tr><tr><td><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flearn.microsoft.com%2Fzh-cn%2Fdotnet%2Ffundamentals%2Fcode-analysis%2Fquality-rules%2Fca1859" target="_blank">CA1859</a></td><td>性能</td><td>此规则建议尽可能将特定局部变量、字段、属性、方法参数和方法返回类型从接口或抽象类型升级到具体类型。 使用具体类型可生成更高质量的代码。</td></tr><tr><td><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flearn.microsoft.com%2Fzh-cn%2Fdotnet%2Ffundamentals%2Fcode-analysis%2Fquality-rules%2Fca1860" target="_blank">CA1860</a></td><td>性能</td><td>若要确定集合类型是否具有任何元素，最好使用 Length、Count 或 IsEmpty，而不是调用 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flearn.microsoft.com%2Fzh-cn%2Fdotnet%2Fapi%2Fsystem.linq.enumerable.any" target="_blank">Enumerable.Any</a>。</td></tr><tr><td><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flearn.microsoft.com%2Fzh-cn%2Fdotnet%2Ffundamentals%2Fcode-analysis%2Fquality-rules%2Fca1861" target="_blank">CA1861</a></td><td>性能</td><td>重复调用时，不会重复使用作为参数传递的常量数组，这意味着每次都会创建一个新数组。 若要提高性能，请考虑将数组提取到静态只读字段。</td></tr><tr><td><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flearn.microsoft.com%2Fzh-cn%2Fdotnet%2Ffundamentals%2Fcode-analysis%2Fquality-rules%2Fca1865-ca1867" target="_blank">CA1865-CA1867</a></td><td>性能</td><td>对於单字符串，char 重载的性能更好。</td></tr><tr><td>CA2021</td><td>可靠性</td><td><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flearn.microsoft.com%2Fzh-cn%2Fdotnet%2Fapi%2Fsystem.linq.enumerable.cast%23system-linq-enumerable-cast-1%28system-collections-ienumerable%29" target="_blank">Enumerable.Cast(IEnumerable)</a> 和 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flearn.microsoft.com%2Fzh-cn%2Fdotnet%2Fapi%2Fsystem.linq.enumerable.oftype%23system-linq-enumerable-oftype-1%28system-collections-ienumerable%29" target="_blank">Enumerable.OfType(IEnumerable)</a> 需要兼容的类型才能正常运行。 泛型类型不支持扩大转换和用户定义的转换。</td></tr><tr><td>CA1510-CA1513</td><td>可维护性</td><td>在构造新的异常实例方面，引发帮助程序比 if 块更简单、更高效。 这四个分析器是为以下例外情况创建的：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flearn.microsoft.com%2Fzh-cn%2Fdotnet%2Fapi%2Fsystem.argumentnullexception" target="_blank">ArgumentNullException</a>、<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flearn.microsoft.com%2Fzh-cn%2Fdotnet%2Fapi%2Fsystem.argumentexception" target="_blank">ArgumentException</a>、<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flearn.microsoft.com%2Fzh-cn%2Fdotnet%2Fapi%2Fsystem.argumentoutofrangeexception" target="_blank">ArgumentOutOfRangeException</a> 和 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flearn.microsoft.com%2Fzh-cn%2Fdotnet%2Fapi%2Fsystem.objectdisposedexception" target="_blank">ObjectDisposedException</a>。</td></tr></tbody></table><p><strong>13.Core .NET 库</strong></p><p><strong>13.1 时间抽象</strong></p><p>新的 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flearn.microsoft.com%2Fzh-cn%2Fdotnet%2Fapi%2Fsystem.timeprovider" target="_blank">TimeProvider</a> 类和 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flearn.microsoft.com%2Fzh-cn%2Fdotnet%2Fapi%2Fsystem.threading.itimer" target="_blank">ITimer</a> 接口添加了时间抽象功能，让你可以在测试方案中模拟时间。 此外，还可以使用时间抽象，通过 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flearn.microsoft.com%2Fzh-cn%2Fdotnet%2Fapi%2Fsystem.threading.tasks.task.delay" target="_blank">Task.Delay</a> 和 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flearn.microsoft.com%2Fzh-cn%2Fdotnet%2Fapi%2Fsystem.threading.tasks.task.waitasync" target="_blank">Task.WaitAsync</a> 来模拟依赖于时间进度的 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flearn.microsoft.com%2Fzh-cn%2Fdotnet%2Fapi%2Fsystem.threading.tasks.task" target="_blank">Task</a> 操作。 时间抽象支持以下基本时间操作：</p><ul><li>检索本地和 UTC 时间</li><li>获取用于测量性能的时间戳</li><li>创建计时器</li></ul><p>以下代码片段演示了一些使用情况示例。</p><pre><code class="language-C#">// Get system time.
DateTimeOffset utcNow = TimeProvider.System.GetUtcNow();
DateTimeOffset localNow = TimeProvider.System.GetLocalNow();

// Create a time provider that works with a
// time zone that's different than the local time zone.
private class ZonedTimeProvider : TimeProvider
{
    private TimeZoneInfo _zoneInfo;

    public ZonedTimeProvider(TimeZoneInfo zoneInfo) : base()
    {
        _zoneInfo = zoneInfo ?? TimeZoneInfo.Local;
    }

    public override TimeZoneInfo LocalTimeZone =&gt; _zoneInfo;

    public static TimeProvider FromLocalTimeZone(TimeZoneInfo zoneInfo) =&gt;
        new ZonedTimeProvider(zoneInfo);
}

// Create a timer using a time provider.
ITimer timer = timeProvider.CreateTimer(callBack, state, delay, Timeout.InfiniteTimeSpan);

// Measure a period using the system time provider.
long providerTimestamp1 = TimeProvider.System.GetTimestamp();
long providerTimestamp2 = TimeProvider.System.GetTimestamp();

var period = GetElapsedTime(providerTimestamp1, providerTimestamp2);
</code></pre><p><strong>13.2UTF8 改进</strong></p><p>如果要启用将类型的类似字符串的表示形式写出到目标范围，请在类型上实现新的 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flearn.microsoft.com%2Fzh-cn%2Fdotnet%2Fapi%2Fsystem.iutf8spanformattable" target="_blank">IUtf8SpanFormattable</a> 接口。 此新接口与 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flearn.microsoft.com%2Fzh-cn%2Fdotnet%2Fapi%2Fsystem.ispanformattable" target="_blank">ISpanFormattable</a> 密切相关，但面向 UTF8 和 Span&lt;byte&gt;，而不是 UTF16 和 Span&lt;char&gt;。</p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flearn.microsoft.com%2Fzh-cn%2Fdotnet%2Fapi%2Fsystem.iutf8spanformattable" target="_blank">IUtf8SpanFormattable</a> 已在所有基元类型（以及其他）上实现，无论是面向 string、Span&lt;char&gt; 还是 Span&lt;byte&gt;，其共享逻辑完全一致。 它完全支持所有格式（包括新的「B」二进制说明符）和所有区域性。 这意味着现在可以从 Byte、Complex、Char、DateOnly、DateTime、DateTimeOffset、Decimal、Double、Guid、Half、IPAddress、IPNetwork、Int16、Int32、Int64、Int128、IntPtr、NFloat、SByte、Single、Rune、TimeOnly、TimeSpan、UInt16、UInt32、UInt64、UInt128、UIntPtr 和 Version 直接格式化为 UTF8。</p><p>新的 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flearn.microsoft.com%2Fzh-cn%2Fdotnet%2Fapi%2Fsystem.text.unicode.utf8.trywrite" target="_blank">Utf8.TryWrite</a> 方法向现有 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flearn.microsoft.com%2Fzh-cn%2Fdotnet%2Fapi%2Fsystem.memoryextensions.trywrite" target="_blank">MemoryExtensions.TryWrite</a> 方法（基于 UTF16）提供基于 UTF8 的对应方法。 可以使用内插字符串语法将复杂表达式直接格式化为 UTF8 字节范围，例如：</p><pre><code class="language-C#">static bool FormatHexVersion(
    short major,
    short minor,
    short build,
    short revision,
    Span&lt;byte&gt; utf8Bytes,
    out int bytesWritten) =&gt;
    Utf8.TryWrite(
        utf8Bytes,
        CultureInfo.InvariantCulture,
        $"{major:X4}.{minor:X4}.{build:X4}.{revision:X4}",
        out bytesWritten);
</code></pre><p><strong>13.3 加密</strong></p><p>.NET 8 添加了对 SHA-3 哈希基元的支持。 （目前，具有 OpenSSL 1.1.1 或更高版本和 Windows 11 Build 25324 或更高版本的 Linux 支持 SHA-3。）可在其中使用 SHA-2 的 API 现在提供对 SHA-3 的补充。 对于哈希，这包括 SHA3_256、SHA3_384 和 SHA3_512；对于 HMAC，这包括 HMACSHA3_256、HMACSHA3_384 和 HMACSHA3_512；对于其中可配置算法的哈希，这包括 HashAlgorithmName.SHA3_256、HashAlgorithmName.SHA3_384 和 HashAlgorithmName.SHA3_512；对于 RSA OAEP 加密，这包括 RSAEncryptionPadding.OaepSHA3_256、RSAEncryptionPadding.OaepSHA3_384 和 RSAEncryptionPadding.OaepSHA3_512。</p><p>以下示例演示如何使用 API（包括 SHA3_256.IsSupported 属性）来确定平台是否支持 SHA-3。</p><pre><code class="language-C#">// Hashing example
if (SHA3_256.IsSupported)
{
    byte[] hash = SHA3_256.HashData(dataToHash);
}
else
{
    // ...
}

// Signing example
if (SHA3_256.IsSupported)
{
     using ECDsa ec = ECDsa.Create(ECCurve.NamedCurves.nistP256);
     byte[] signature = ec.SignData(dataToBeSigned, HashAlgorithmName.SHA3_256);
}
else
{
    // ...
}
</code></pre><p><strong>13.4 基于流的 ZipFile 方法</strong></p><p>.NET 8 包含 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flearn.microsoft.com%2Fzh-cn%2Fdotnet%2Fapi%2Fsystem.io.compression.zipfile.createfromdirectory" target="_blank">ZipFile.CreateFromDirectory</a> 的新重载，通过它可以收集目录中包含的所有文件并压缩这些文件，然后将生成的 zip 文件存储到提供的流中。 同样，通过新的 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flearn.microsoft.com%2Fzh-cn%2Fdotnet%2Fapi%2Fsystem.io.compression.zipfile.extracttodirectory" target="_blank">ZipFile.ExtractToDirectory</a> 重载，可提供包含压缩文件的流，并将其内容提取到文件系统中。 下面是新的重载：</p><pre><code class="language-C#">namespace System.IO.Compression;

public static partial class ZipFile
{
    public static void CreateFromDirectory(string sourceDirectoryName, Stream destination);
    public static void CreateFromDirectory(string sourceDirectoryName, Stream destination, CompressionLevel compressionLevel, bool includeBaseDirectory);
    public static void CreateFromDirectory(string sourceDirectoryName, Stream destination, CompressionLevel compressionLevel, bool includeBaseDirectory, Encoding? entryNameEncoding);

    public static void ExtractToDirectory(Stream source, string destinationDirectoryName) { }
    public static void ExtractToDirectory(Stream source, string destinationDirectoryName, bool overwriteFiles) { }
    public static void ExtractToDirectory(Stream source, string destinationDirectoryName, Encoding? entryNameEncoding) { }
    public static void ExtractToDirectory(Stream source, string destinationDirectoryName, Encoding? entryNameEncoding, bool overwriteFiles) { }
}
</code></pre><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.grapecity.com.cn%2Fdeveloper%2Factivereports" target="_blank">ActiveReports</a>是一款专注于 .NET 和 .NET Core 平台的报表控件。通过拖拽式报表设计器， 可以快速地设计 Excel 表格、Word 文档、图表、数据过滤、数据钻取、精准套打等类型报表， 全面满足 WinForm、ASP.NET、ASP.NET MVC、WPF 平台中各种报表的开发需要。 同时，通过丰富的 API 可以灵活的实现报表创建、加载和运行时的个性化自定义需求。</p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.grapecity.com.cn%2Fsolutions%2Fwyn" target="_blank">Wyn 商业智能</a>是基于葡萄城 20 多年数据分析技术积累打造的全新一代嵌入式 BI 产品，旨在提供可与应用系统深度集成的数据分析功能，能够与企业现有业务系统 OA， ERP，MES，CRM 等应用系统深度集成，整合、分析多个业务系统的数据，自助式分析业务数据、实时分析决策，全面提升企业竞争力。</p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.grapecity.com.cn%2Fdeveloper%2Fspreadstudio" target="_blank">Spread .NET</a>是一个功能、布局与 Excel 高度类似的 .NET 表格控件，可全面满足 WinForm、ASP.NET、XAML 和 WinRT 等平台下表格数据处理、数据可视化开发需求。Spread .NET 支持 462 种 Excel 公式，提供可嵌入系统的类 Excel 设计器和全面开放的 API，为 .NET 开发人员构建企业级表格应用程序提供更加专业的选择。</p><p>参考资料：</p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flearn.microsoft.com%2Fzh-cn%2Fdotnet%2Fcore%2Fwhats-new%2Fdotnet-8%23networking" target="_blank">https://learn.microsoft.com/zh-cn/dotnet/core/whats-new/dotnet-8#networking</a></p><p><strong>扩展链接：</strong></p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.grapecity.com.cn%2Fblogs%2Fexcel-io-spreadjs-blazor" target="_blank">如何使用 Blazor 框架在前端浏览器中导入/导出 Excel XLSX</a></p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.grapecity.com.cn%2Fblogs%2Fcreate-flow-chart-dotnet" target="_blank">如何在.NET 电子表格应用程序中创建流程图</a></p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.grapecity.com.cn%2Fblogs%2Fsjs-realtime-data-refresh-part1" target="_blank">如何将实时数据显示在前端电子表格中</a></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 15 Nov 2023 06:08:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/powertoolsteam/blog/10143465</guid>
            <link>https://my.oschina.net/powertoolsteam/blog/10143465</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[小米推出 Xiaomi Vela 快应用开发工具：Aiot-IDE]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>小米在今天举办的《2023&nbsp;小米 IoT 生态伙伴大会》上<a href="https://www.oschina.net/news/266688/xiaomi-vela-opensource">宣布</a>全面开源&nbsp;Xiaomi Vela。</p><p><img alt="" height="667" src="https://oscimg.oschina.net/oscnet/up-2e4d78299513d8dd8e48dd44f9f1c80cbea.png" width="500" referrerpolicy="no-referrer"></p><blockquote><p>Xiaomi Vela 是小米基于开源实时操作系统&nbsp;<strong><a href="https://www.oschina.net/p/nuttx">NuttX</a></strong>&nbsp;打造的物联网嵌入式软件平台，Vela 在各种物联网硬件平台上提供统一的软件服务，支持丰富的组件和易用的框架，打通碎片化的物联网应用场景。</p></blockquote><p>随 Xiaomi Vela 一同发布的还有 Aiot-IDE，官方称这是用于开发<strong> Xiaomi Vela 快应用</strong>的工具。据介绍，在小米智能穿戴 (Wearable) 设备上进行应用开发，此类应用统称为 <strong>Xiaomi Vela 快应用</strong>。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-8c26527175a6a981cbd609b6b5fa67209b5.png" referrerpolicy="no-referrer"></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-642ef5598b7a4dfdf8d448948a0b32a4fbc.png" referrerpolicy="no-referrer"></p><p>官方称 Aiot-IDE 基于 VS Code 进行开发，此外快应用的开发也类似网页开发。感兴趣可以下载安装体验：</p><ul><li><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fiot.mi.com%2Fvela%2Fquickapp%2Fzh%2Fcontent%2Fguide%2Fstart%2Fuse-ide.html" target="_blank">Aiot-IDE 下载地址</a></u>（该&nbsp;IDE 只支持在<code>Ubuntu 20.04</code>下进行 vela 项目的开发）</li></ul></div>
                                    ]]>
            </description>
            <pubDate>Wed, 15 Nov 2023 06:04:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266723</guid>
            <link>https://www.oschina.net/news/266723</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[开源中国将在年末推出大模型托管平台，大量人才招募中]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000"><span style="background-color:#ffffff">Gitee 正在招募大量人才，欢迎加入。</span></span></p><p><img alt="" height="1348" src="https://static.oschina.net/uploads/space/2023/1116/151453_9FSP_3820517.jpg" width="500" referrerpolicy="no-referrer"></p><p><span style="color:#000000"><span style="background-color:#ffffff">开源中国于 2023 年 6 月完成了&nbsp;</span><strong><span style="background-color:#ffffff">7.75 亿元&nbsp;</span></strong></span><span style="color:#000000">B+ 轮战略融资</span><span style="color:#000000">，公司创始团队重新成为实际控制人，经此股份重组企业成为完全中立平台。目前，开源中国员工共计 300 余人，其中研发团队占比 85% 以上。</span></p><p><span style="color:#000000"><strong><span style="background-color:#ffffff">开源中国将在年末推出大模型托管平台</span></strong><span style="background-color:#ffffff">，在 AI 时代为广大开发者和企业提供更高质量的服务。从软件应用到 AI 时代，开源中国将坚持帮助国内开发者和企业共同发展，创造健康的生态环境。</span></span></p><p><span style="color:#000000"><span style="background-color:#ffffff">Gitee 是开源中国旗下，国内第一大企业级研发效能平台和全球第二大开源代码托管平台。经过 10 年发展，Gitee 已经拥有超过 1100 万开发者，托管超过 2500 万个代码仓库，服务 26 万家企业（含 1200 家中大型私有化部署企业）和 2000 多所高校，为他们提供优质的 DevOps 产品服务。</span></span></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 15 Nov 2023 03:58:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266707/gitee-hiring</guid>
            <link>https://www.oschina.net/news/266707/gitee-hiring</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[金山办公 WPS AI 开启公测]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>金山办公<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FcSKhX3tqmZgdw7EfTid_TA" target="_blank">宣布</a>旗下只能办公助手 WPS AI 开启公测，即日起面向全体用户陆续开放体验。WPS AI 是一款生成式人工智能应用，具备了大语言模型能力。它提供起草、改写、总结、润色等功能，可以提高办公创作效率。</p><p>用户可前往 <strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fai.wps.cn%2F" target="_blank">WPS AI 官网</a></strong>申请权益，并下载最新版 WPS PC 客户端限时体验文字/智能文档、表格/智能表格、PPT 演示组件的 AI 能力，安卓、iOS 和 Mac 端预计将于 11 月底陆续开放。</p><p><img alt="" height="376" src="https://oscimg.oschina.net/oscnet/up-9b4717aaa45d58081e02785ba28fc5dda23.png" width="300" referrerpolicy="no-referrer"></p><p><img alt="" height="354" src="https://oscimg.oschina.net/oscnet/up-fa29542a7d817329492fdc62024e16f7025.png" width="300" referrerpolicy="no-referrer"></p><p><img alt="" height="379" src="https://oscimg.oschina.net/oscnet/up-f98e75322933cd6c5d3e5239be36401148e.png" width="300" referrerpolicy="no-referrer"></p><p>更多详细功能介绍可查看 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhome.wps.cn%2Ftopic%2F10254" target="_blank">WPS AI 能力介绍（11 月最新版）</a>。</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 15 Nov 2023 03:52:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266706</guid>
            <link>https://www.oschina.net/news/266706</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
    </channel>
</rss>
