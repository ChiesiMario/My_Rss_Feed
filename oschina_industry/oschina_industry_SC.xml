<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[开源中国-综合资讯]]>
        </title>
        <link>https://www.oschina.net/news/industry</link>
        <atom:link href="https://rsshub.app/oschina/news/industry" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[开源中国-综合资讯 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Sat, 18 Nov 2023 16:53:52 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[Gitee 推荐 | 运行在 Python 虚拟机上的面向对象编程语言 AIL]]>
            </title>
            <description>
                <![CDATA[<h1><a id="user-content-ail-30-alpha-3" class="anchor" href="https://gitee.com/LaomoBK/ail#ail-30-alpha-3"></a>AIL 3.0 alpha 3</h1><p><a href="https://gitee.com/LaomoBK/ail/blob/3.0/docs/whatsnew.md">AIL 3.0 Kirara 版本更新内容</a></p><p><a href="https://gitee.com/LaomoBK/ail/blob/3.0/docs/versions/2_3.md">AIL 2.3 Diona 版本更新内容</a></p><p><a href="https://gitee.com/LaomoBK/ail/blob/3.0/docs/versions/2_2.md">AIL 2.2 Klee 版本更新内容</a></p><p><img src="https://img.shields.io/badge/AIL-Programming%20Language-blue" alt="AIL badge" referrerpolicy="no-referrer"><img src="https://img.shields.io/badge/python-3.8-blue" alt="python badge" referrerpolicy="no-referrer"><img src="https://img.shields.io/badge/version-3.0%20alpha-success" alt="version badge" referrerpolicy="no-referrer"><img src="https://img.shields.io/badge/license-GPL-blue" alt="license badge" referrerpolicy="no-referrer"></p><p>AIL 是一门开源的运行在 Python 虚拟机上的面向对象的编程语言。支持 Python 的大多数特性的同时，还额外增加了如 match 表达式，匿名函数，名称空间等 AIL 自身的特性。</p><h2><a id="user-content-环境需求" class="anchor" href="https://gitee.com/LaomoBK/ail#%E7%8E%AF%E5%A2%83%E9%9C%80%E6%B1%82"></a>环境需求</h2><p><strong>具有完整标准库的 Python3.8</strong></p><p>推荐使用 <strong>cpython</strong> 解释器，其他 Python 解释器并未进行过测试。</p><h2><a id="user-content-hello-world" class="anchor" href="https://gitee.com/LaomoBK/ail#hello-world"></a>Hello World</h2><h4><a id="user-content-hello-world-with-one-statement" class="anchor" href="https://gitee.com/LaomoBK/ail#hello-world-with-one-statement"></a>Hello World with one statement</h4><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="k">print</span><span class="s">'Hello World'</span><span class="p">;</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><p>..or..</p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="n">console</span><span class="p">.</span><span class="n">writeln</span><span class="p">(</span><span class="s">'Hello World!'</span><span class="p">);</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><h4><a id="user-content-hello-world-in-lambda" class="anchor" href="https://gitee.com/LaomoBK/ail#hello-world-in-lambda"></a>Hello World in lambda</h4><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="p">(()</span><span class="o">-&gt;</span><span class="n">console</span><span class="p">.</span><span class="n">writeln</span><span class="p">(</span><span class="s">'Hello World'</span><span class="p">))();</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><h4><a id="user-content-hello-world-in-function" class="anchor" href="https://gitee.com/LaomoBK/ail#hello-world-in-function"></a>Hello World in function</h4><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="kd">func</span><span class="nf">helloWorld</span><span class="p">()</span><span class="p">{</span></span><span id="LC2" class="line"><span class="n">print</span><span class="s">"Hello World!"</span><span class="p">;</span></span><span id="LC3" class="line"><span class="p">}</span></span><span id="LC4" class="line"></span><span id="LC5" class="line"><span class="nf">helloWorld</span><span class="p">();</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><h4><a id="user-content-hello-world-in-anonymous-function" class="anchor" href="https://gitee.com/LaomoBK/ail#hello-world-in-anonymous-function"></a>Hello World in anonymous function</h4><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="p">(</span><span class="nf">func</span><span class="p">()</span><span class="p">{</span></span><span id="LC2" class="line"><span class="n">print</span><span class="s">"Hello World!"</span><span class="p">;</span></span><span id="LC3" class="line"><span class="p">})();</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><h4><a id="user-content-hello-world-in-class" class="anchor" href="https://gitee.com/LaomoBK/ail#hello-world-in-class"></a>Hello World in class</h4><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="kd">class</span><span class="kt">Hello</span><span class="p">{</span></span><span id="LC2" class="line"><span class="kd">func</span><span class="nf">helloWorld</span><span class="p">(</span><span class="k">self</span><span class="p">)</span><span class="p">{</span></span><span id="LC3" class="line"><span class="n">print</span><span class="s">"Hello World!"</span><span class="p">;</span></span><span id="LC4" class="line"><span class="p">}</span></span><span id="LC5" class="line"><span class="p">}</span></span><span id="LC6" class="line"></span><span id="LC7" class="line"><span class="kt">Hello</span><span class="p">()</span><span class="o">.</span><span class="nf">helloWorld</span><span class="p">();</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><h4><a id="user-content-斐波那契数列" class="anchor" href="https://gitee.com/LaomoBK/ail#%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%95%B0%E5%88%97"></a>斐波那契数列</h4><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="kd">func</span><span class="nf">fib</span><span class="p">(</span><span class="n">n</span><span class="p">)</span><span class="p">{</span></span><span id="LC2" class="line"><span class="k">if</span><span class="n">n</span><span class="o">==</span><span class="mi">1</span><span class="n">or</span><span class="n">n</span><span class="o">==</span><span class="mi">2</span><span class="p">{</span></span><span id="LC3" class="line"><span class="k">return</span><span class="mi">1</span><span class="p">;</span></span><span id="LC4" class="line"><span class="p">}</span><span class="n">elif</span><span class="n">n</span><span class="o">&gt;=</span><span class="mi">2</span><span class="p">{</span></span><span id="LC5" class="line"><span class="k">return</span><span class="nf">fib</span><span class="p">(</span><span class="n">n</span><span class="o">-</span><span class="mi">2</span><span class="p">)</span><span class="o">+</span><span class="nf">fib</span><span class="p">(</span><span class="n">n</span><span class="o">-</span><span class="mi">1</span><span class="p">);</span></span><span id="LC6" class="line"><span class="p">}</span></span><span id="LC7" class="line"><span class="p">}</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><p>以上例子均在 AIL 3.0 alpha 0 版本下测试通过</p><h2><a id="user-content-主要语言特性" class="anchor" href="https://gitee.com/LaomoBK/ail#%E4%B8%BB%E8%A6%81%E8%AF%AD%E8%A8%80%E7%89%B9%E6%80%A7"></a>主要语言特性</h2><p><em>以下例子均已在 AIL 2.3 版本下通过编译</em></p><h3><a id="user-content-更多的-for-语句" class="anchor" href="https://gitee.com/LaomoBK/ail#%E6%9B%B4%E5%A4%9A%E7%9A%84-for-%E8%AF%AD%E5%8F%A5"></a>更多的 for 语句</h3><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="k">for</span><span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="n">j</span><span class="o">=</span><span class="nf">len</span><span class="p">(</span><span class="n">x</span><span class="p">);</span><span class="n">i</span><span class="o">&lt;</span><span class="nf">len</span><span class="p">(</span><span class="n">x</span><span class="p">);</span><span class="n">i</span><span class="o">+=</span><span class="mi">1</span><span class="p">,</span><span class="n">j</span><span class="o">-=</span><span class="mi">1</span><span class="p">{</span></span><span id="LC2" class="line"><span class="c1">// ...</span></span><span id="LC3" class="line"><span class="p">}</span></span><span id="LC4" class="line"></span><span id="LC5" class="line"><span class="k">for</span><span class="p">{</span></span><span id="LC6" class="line"><span class="c1">// forever...</span></span><span id="LC7" class="line"><span class="p">}</span></span><span id="LC8" class="line"></span><span id="LC9" class="line"><span class="n">foreach</span><span class="n">i</span><span class="k">in</span><span class="nf">range</span><span class="p">(</span><span class="mi">100</span><span class="p">)</span><span class="p">{</span></span><span id="LC10" class="line"><span class="c1">// ...</span></span><span id="LC11" class="line"><span class="p">}</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><h3><a id="user-content-namespace-名称空间" class="anchor" href="https://gitee.com/LaomoBK/ail#namespace-%E5%90%8D%E7%A7%B0%E7%A9%BA%E9%97%B4"></a>namespace 名称空间</h3><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="n">namespace</span><span class="n">Vegetables</span><span class="p">{</span></span><span id="LC2" class="line"><span class="n">cabbage</span><span class="o">=</span><span class="s">'cabbage'</span><span class="p">;</span></span><span id="LC3" class="line"><span class="n">leaf_mustard</span><span class="o">=</span><span class="s">'mustard'</span><span class="p">;</span></span><span id="LC4" class="line"><span class="p">}</span></span><span id="LC5" class="line"></span><span id="LC6" class="line"></span><span id="LC7" class="line"><span class="n">namespace</span><span class="n">Fruits</span><span class="p">{</span></span><span id="LC8" class="line"><span class="n">apple</span><span class="o">=</span><span class="s">'apple'</span><span class="p">;</span></span><span id="LC9" class="line"><span class="n">tomato</span><span class="o">=</span><span class="s">'tomato'</span><span class="p">;</span></span><span id="LC10" class="line"><span class="p">}</span></span><span id="LC11" class="line"></span><span id="LC12" class="line"></span><span id="LC13" class="line"><span class="k">print</span><span class="s">'An %s a day keeps the doctor away'</span><span class="o">%</span><span class="n">Fruits</span><span class="p">.</span><span class="n">apple</span><span class="p">;</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><h3><a id="user-content-强大的-match-表达式" class="anchor" href="https://gitee.com/LaomoBK/ail#%E5%BC%BA%E5%A4%A7%E7%9A%84-match-%E8%A1%A8%E8%BE%BE%E5%BC%8F"></a>强大的 match 表达式</h3><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="n">name</span><span class="o">=</span><span class="n">match</span><span class="n">lang_name</span><span class="p">{</span></span><span id="LC2" class="line"><span class="s">'Python'</span><span class="p">:</span><span class="s">'py'</span><span class="p">,</span></span><span id="LC3" class="line"><span class="s">'Java'</span><span class="p">:</span><span class="s">'java'</span><span class="p">,</span></span><span id="LC4" class="line"><span class="s">'AIL'</span><span class="p">:</span><span class="s">'ail'</span><span class="p">,</span></span><span id="LC5" class="line"><span class="p">}</span></span><span id="LC6" class="line"></span><span id="LC7" class="line"><span class="p">(</span><span class="n">match</span><span class="n">point</span><span class="p">{</span></span><span id="LC8" class="line"><span class="n">Point</span><span class="err">!</span><span class="p">{</span><span class="n">x</span><span class="p">:</span><span class="mi">5</span><span class="p">,</span><span class="n">y</span><span class="p">:</span><span class="mi">6</span><span class="p">}:</span><span class="p">()</span><span class="o">-&gt;</span><span class="p">{</span></span><span id="LC9" class="line"><span class="o">//</span><span class="n">handle</span><span class="n">it</span><span class="p">...</span></span><span id="LC10" class="line"><span class="p">},</span></span><span id="LC11" class="line"><span class="k">else</span><span class="p">:</span><span class="p">()</span><span class="o">-&gt;</span><span class="p">{</span></span><span id="LC12" class="line"><span class="o">//</span><span class="n">handle</span><span class="n">it</span><span class="p">...</span></span><span id="LC13" class="line"><span class="p">}</span></span><span id="LC14" class="line"><span class="p">})();</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><h3><a id="user-content-通过引用-global-变量在-local-域中定义同名变量" class="anchor" href="https://gitee.com/LaomoBK/ail#%E9%80%9A%E8%BF%87%E5%BC%95%E7%94%A8-global-%E5%8F%98%E9%87%8F%E5%9C%A8-local-%E5%9F%9F%E4%B8%AD%E5%AE%9A%E4%B9%89%E5%90%8C%E5%90%8D%E5%8F%98%E9%87%8F"></a>通过引用 global 变量在 local 域中定义同名变量</h3><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="n">a</span><span class="o">=</span><span class="m">10</span><span class="p">;</span></span><span id="LC2" class="line"></span><span id="LC3" class="line"><span class="k">func</span><span class="n">f</span><span class="p">()</span><span class="p">{</span></span><span id="LC4" class="line"><span class="n">a</span><span class="o">:=</span><span class="n">a</span><span class="p">;</span></span><span id="LC5" class="line"><span class="p">}</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><h3><a id="user-content-与-python-协作" class="anchor" href="https://gitee.com/LaomoBK/ail#%E4%B8%8E-python-%E5%8D%8F%E4%BD%9C"></a>与 Python 协作</h3><p>在 AIL 中可以直接导入 Python 模块，使用类似 Python 的 import 语句：</p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="k">import</span><span class="err">!</span><span class="n">os</span><span class="p">.</span><span class="n">path</span><span class="k">as</span><span class="n">ospath</span><span class="p">;</span></span><span id="LC2" class="line"><span class="k">import</span><span class="err">!</span><span class="n">numpy</span><span class="k">as</span><span class="n">np</span><span class="p">;</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="kn">from</span><span class="nn">PIL</span><span class="kn">import</span><span class="n">Image</span><span class="p">;</span></span><span id="LC2" class="line"></span><span id="LC3" class="line"></span><span id="LC4" class="line"><span class="n">Image</span><span class="p">.</span><span class="nb">open</span><span class="p">(</span><span class="s">'klee.jpg'</span><span class="p">).</span><span class="n">show</span><span class="p">();</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><p>亦或是在 AIL 程序中直接插入 Python 代码：</p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="kd">func</span><span class="nf">gen</span><span class="p">(</span><span class="n">n</span><span class="p">)</span><span class="p">{</span></span><span id="LC2" class="line"><span class="cp">#return [x**n for x in range(n)]</span></span><span id="LC3" class="line"><span class="p">}</span></span><span id="LC4" class="line"></span><span id="LC5" class="line"></span><span id="LC6" class="line"><span class="n">print</span><span class="nf">gen</span><span class="p">(</span><span class="mi">5</span><span class="p">);</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><h2><a id="user-content-安装-ail" class="anchor" href="https://gitee.com/LaomoBK/ail#%E5%AE%89%E8%A3%85-ail"></a>安装 AIL</h2><p>运行 AIL 事先准备好的 <strong>setup.py</strong> 可以非常快速地在您的电脑上配置好 AIL。</p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line">python3 setup.py <span class="nb">install</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><p>在终端中输入:</p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line">ail</span></pre><div class="markdown-code-block-copy-btn"></div></div></div><p>或者</p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line">python3 -m ail</span></pre><div class="markdown-code-block-copy-btn"></div></div></div><p><em><strong>Windows 下应确保 {PYTHON_HOME}/Script/ 已添加到 PATH 中</strong></em><em><strong>Linux/Mac OS 下应确保当前用户的 bin 目录已添加到 PATH 中</strong></em></p><p>若进入 AIL 的交互环境，则安装成功。</p><h2><a id="user-content-文档" class="anchor" href="https://gitee.com/LaomoBK/ail#%E6%96%87%E6%A1%A3"></a>文档</h2><p>AIL 的文档仍然在完善中。具体的进度可以在 <code>/docs/</code> 中查看。</p><h2><a id="user-content-ail-语句" class="anchor" href="https://gitee.com/LaomoBK/ail#ail-%E8%AF%AD%E5%8F%A5"></a>AIL 语句</h2><p>文档 <a href="https://gitee.com/LaomoBK/ail/blob/3.0/docs/reference/statements.md">AIL 语句</a> 简要地描述了 AIL 的语句</p><h2><a id="user-content-vim-语法高亮支持" class="anchor" href="https://gitee.com/LaomoBK/ail#vim-%E8%AF%AD%E6%B3%95%E9%AB%98%E4%BA%AE%E6%94%AF%E6%8C%81"></a>VIM 语法高亮支持</h2><p>AIL 为 vim 专门编写了其语法高亮文件，写代码的时候妈妈再也不会担心敲错关键字了！</p><p>提供了如下高亮支持：</p><ul><li>关键字</li><li>字符串、数字</li><li>基本类型注解</li><li>AIL 与 Python 内置函数、常量</li></ul><p><img src="https://gitee.com/LaomoBK/ail/raw/2.3/misc/vim_highlight.jpg" alt="vim highlight" referrerpolicy="no-referrer"></p><h4><a id="user-content-配置" class="anchor" href="https://gitee.com/LaomoBK/ail#%E9%85%8D%E7%BD%AE"></a>配置</h4><ol><li>将 <strong>plugin/vim/syntax/ail.vim</strong> 与 <strong>plugin/vim/ftdetect/ail.vim</strong> 分别复制到 <strong>{VIM_HOME}/syntax/</strong> 和 <strong>{VIM_HOME}/ftdetect/</strong></li><li>重新启动 vim 即可</li></ol><h2><a id="user-content-treetxt" class="anchor" href="https://gitee.com/LaomoBK/ail#treetxt"></a>tree.txt</h2><p>这是最早期 AIL 语法分析器生成的语法树</p><p><em>对应的程序<strong>应该</strong>可以在早期 commit 中找到</em></p>]]>
            </description>
            <pubDate>Fri, 17 Nov 2023 03:06:00 GMT</pubDate>
            <guid isPermaLink="false">https://gitee.com/LaomoBK/ail</guid>
            <link>https://gitee.com/LaomoBK/ail</link>
        </item>
        <item>
            <title>
                <![CDATA[微软推出全新「Windows App」]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">微软在&nbsp;Ignite 2023 上宣布推出一款适用于 iOS、iPadOS、Web 和 Windows 的全新「Windows App」，目前正以预览版形式提供。</span></p><p><span style="color:#000000">用户可以通过该 APP 连接 Windows 365、Azure 虚拟桌面、Microsoft Dev Box 或个人远程桌面 PC。在手机或 iPad 上，用户无需下载或安装任何内容即可启动 Windows 环境。</span></p><p><span style="color:#000000"><img alt="" height="309" src="https://oscimg.oschina.net/oscnet/up-6de517b3878e038efe903ec950a3f14d987.webp" width="500" referrerpolicy="no-referrer"></span></p><p><span style="color:#000000">新的 Windows APP 带来了多项新功能：如支持多显示器、自定义显示分辨率、动态显示缩放、网络摄像头、音频和打印机的设备重定向等。用户可以固定最喜欢的应用程序，以便快速访问，还可以在不同账户之间轻松切换。</span></p><p><span style="color:#000000">虽然微软官方表示该应用程序仅上架 iOS、Windows、macOS 以及网页端，但提供的屏幕截图显示 Android&nbsp;平板上也能运行该应用。或许 Android 版本将会在不久的未来推出。</span></p><p><span style="color:#000000">不过，该 Windows APP 仅面向微软企业用户提供，个人账户无法访问相关服务。但有迹象表明，微软计划通过 Windows 365 为普通消费者提供云 PC。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 16 Nov 2023 09:57:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266787/microsoft-windows-app-launched-run-cloud-pc</guid>
            <link>https://www.oschina.net/news/266787/microsoft-windows-app-launched-run-cloud-pc</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[ClickHouse 联合创始人、前 Google 副总裁 Yury 到访杭州玖章算术公司，双方建立生态合作]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span><span style="color:#000000">10 月 31 日，ClickHouse 联合创始人 Yury 到访未来科技城，与玖章算术创始人叶正盛和国际总经理 Ni Demai 展开沟通与推进合作。</span></span></p><div><p style="text-align:center"><img alt="" height="1280" src="https://oscimg.oschina.net/oscnet/up-3abad57e89ff8fcc5278d96ff167a2bf87d.jpg" width="1707" referrerpolicy="no-referrer"></p><p style="color:#999999; margin-left:0; margin-right:0; text-align:center">图片备注：Ni Demai(左),Yury(中),叶正盛 (右)</p></div><p style="margin-left:0; margin-right:0"><span><span style="color:#000000">ClickHouse 是深受开发者青睐的实时分析型数据库，成立 2 年就发展成为基础软件领域的独角兽，玖章算术核心产品 NineData 则是中国数据库工具领域的佼佼者。通过本次沟通，</span><span style="color:#f04142">ClickHouse 将继续增加其在生态能力上的投入，引入玖章算术成为 ClickHouse 全球正式合作伙伴</span><span style="color:#000000">，NineData 将提供数据复制、SQL 开发等能力，帮助开发者更加便捷、稳定地使用 ClickHouse。</span></span></p><p style="margin-left:0; margin-right:0"><span><span style="color:#000000">ClickHouse 中国区负责人王楠（Tracy）、玖章算术首席产品经理蔡冬者参与了本次会议，双方深度交流了 NineData 帮助 ClikHouse 完成数据复制的实践场景，将在 ClickHouse 中国社区发展深度合作。</span></span></p><p style="margin-left:0px; margin-right:0px; text-align:center"><img alt="" height="1659" src="https://oscimg.oschina.net/oscnet/up-29fbbc98347ec5e04fcc19c903bdcbea0d0.jpg" width="2091" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0">Yury 作为 ClickHouse 的联合创始人、产品和工程总裁，是前谷歌、Netflix 的副总裁。<span style="color:#f04142">本次代表 ClickHouse 与玖章算术 CEO 叶正盛进行沟通，旨在加强两家公司之间的合作，增强 ClickHouse 的生态能力建设，帮助开发者更好地使用 ClickHouse。</span></p><p style="margin-left:0px; margin-right:0px; text-align:center"><img alt="" height="1080" src="https://oscimg.oschina.net/oscnet/up-d6908642b538092775611c1383c849b5928.jpg" width="2301" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0"><span><span style="color:#000000">叶正盛是玖章算术创始人，在数据库生态工具产品里有 20 年经验，是国内把数据库生态工具体系做成专业产品的第一人。后续，</span><span style="color:#f04142">NineData 将快速支持 ClickHouse 最新版本，适配 ClickHouse Cloud，同时会更大力度投入中国 ClickHouse 社区建设。</span></span></p><div><p style="text-align:center"><img alt="" height="1080" src="https://oscimg.oschina.net/oscnet/up-e0d4a2d815c5fc2bf9daf62ae54c45c901c.jpg" width="2301" referrerpolicy="no-referrer"></p><p style="color:#999999; margin-left:0; margin-right:0; text-align:center">玖章算术创始人叶正盛（中）</p></div><p style="margin-left:0; margin-right:0"><span><span style="color:#000000">NineData 提供企业级 SQL 开发能力，包括数据库堡垒机、生产变更服务，以及细粒度权限管控、审计、敏感数据脱敏处理等功能。并集成了大模型 AI 技术，提供智能 SQL 编写、SQL 优化和数据库专业知识问答，能够帮助客户提高 DBA 与技术团队及 ISV 伙伴的合作效率。</span></span></p><p style="margin-left:0; margin-right:0"><span><span style="color:#000000">NineData 的数据复制能力可应用于多种场景，包括在线数据库到数据仓库实时同步、数据库国产化替换、数据上云、数据容灾等，支持 1000 公里数据实时同步，复制性能超过 10 万 TPS，领先于市场主流产品。</span></span></p><p style="margin-left:0; margin-right:0"><span><span style="color:#000000">NineData 的创始团队由阿里云、华为、IBM 等公司资深数据库专家组成。NineData 支持 MySQL、Oracle、PostgreSQL、ClickHouse、Redis、MongoDB、Doris 等 60 种主流数据源。</span></span></p><div><p style="text-align:center"><img alt="" height="1332" src="https://oscimg.oschina.net/oscnet/up-7e72cd287ff75493e4b1730da64f74e22f5.png" width="2878" referrerpolicy="no-referrer"></p><p style="color:#999999; margin-left:0; margin-right:0; text-align:center">NineData 支持 60 种主流数据源</p></div><p style="margin-left:0; margin-right:0"><span><span style="color:#000000">目前，NineData 已经为上万开发者提供服务，在中国移动、沃尔沃、绿城集团等大型企业上线，与华为云、阿里云、腾讯云、百度云、移动云、AWS、Apache Doris、SelectDB 等平台建立了紧密合作关系。NineData 的目标是让企业各个数据源之间的数据自由流动，让数据管理与研发流程更安全、更高效。</span></span></p><p style="margin-left:0px; margin-right:0px"><span><strong><span style="color:#000000">结束语：</span></strong><span style="color:#000000"><span>&nbsp;</span>ClickHouse 与玖章算术 NineData 的合作将促进其生态系统的发展，NineData 将更好地支持 ClickHouse 数据库复制、SQL 开发等。这一合作将为中国的 ClickHouse 社区带来更多支持和创新，进一步推动社区发展，帮助开发者更好的使用 ClickHouse，发掘数据价值，推进企业业务发展。</span></span></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 16 Nov 2023 09:51:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266785</guid>
            <link>https://www.oschina.net/news/266785</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[中国科学院软件所在分组加密算法差分密码分析方面取得进展]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">中国科学院软件研究所可信智能系统研究团队在分组加密算法的差分密码分析方面取得<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FbrkeBtNVsRP27RgnXZLnVg" target="_blank">进展</a>。该工作设计了一个面向分组加密算法的领域编程语言 EasyBC，在此基础上提出了通用、可扩展的差分密码分析方法，研制了全自动分析工具平台 EasyBC （如图 1）。</span></p><p><span style="color:#000000">该研究成果以_EasyBC: A Cryptography-Specific Language for Security Analysis of Block Ciphers against Differential Cryptanalysis_为题被编程语言国际顶级会议 POPL 2024 录用，通讯作者是软件所计算机科学国家重点实验室宋富研究员。</span></p><p><span style="color:#000000"><img alt="" height="122" src="https://oscimg.oschina.net/oscnet/up-3680dde4b4183fc67c37f117d71002e2e79.png" width="500" referrerpolicy="no-referrer"></span></p><p><em><span style="color:#000000">图 1. EasyBC 平台流程图</span></em></p><p><span style="color:#000000">分组加密算法（block cipher）是将明文分成多个等长的模块（block），使用对称密钥对每组分别加密或解密，广泛应用于电子邮件加密、银行交易转帐等多个领域。作为极其重要的加密协议组成，主流分组加密算法有中国国家密码管理局颁布的 SM1、SM4 和 SM7，美国政府核定的标准算法 AES 和 3DES。而差分密码分析在评估分组加密算法的安全性方面发挥着核心作用，是分组加密算法标准化不可或缺的安全性分析手段。当前已有的差分密码分析方法在通用性、自动化程度方面存在一定不足，同时建模过程复杂导致用户需要熟悉大量的建模方法及底层分析工具的应用。</span></p><p><span style="color:#000000">为解决上述不足，研究团队设计了一种分组加密算法的密码学专用高级编程语言 EasyBC，提供了完整的语法、类型和语义的形式定义，为分组加密算法安全性自动分析奠定了良好基础；提出了三种不同分析精度和性能的差分密码分析方法，不仅统一和优化了已有的各类加密操作的建模方法，并提出了多种新的建模方法。</span></p><p><span style="color:#000000">研究团队实现了 23 个加密原语，包括美国国家标准与技术研究院（National Institute of Standards and Technology，NIST）认证加密方案的底层置换算法以及多种常用分组加密算法（如图 2）；并对其中的分组密码原语进行了安全性分析（如图 3），进而验证了 EasyBC 语言的表达能力以及 EasyBC 工具平台安全性自动分析的有效性。</span></p><p><span style="color:#000000"><img alt="" height="184" src="https://oscimg.oschina.net/oscnet/up-6c84d792455028442affb5312288fbac624.png" width="500" referrerpolicy="no-referrer"></span></p><p><em><span style="color:#000000">图 2.EasyBC 语言实现的 23 个加密原语</span></em></p><p><em><span style="color:#000000"><img alt="" height="171" src="https://oscimg.oschina.net/oscnet/up-55a59db5baf9240d59fc4e82c667f38b199.png" width="500" referrerpolicy="no-referrer"></span></em></p><p><em><span style="color:#000000">图 3.Word-wise 实现的加密原语差分密码安全性分析结果</span></em></p><p><span style="color:#000000">该研究对分组加密算法的差分密码分析研究具有重要意义，为后续密码学相关研究者们进行分组加密算法的安全性全自动分析和各类运算操作建模方法性能评估提供了良好的研究基础和平台支撑。</span></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:left"><strong>论文信息：</strong></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:left"><em>EasyBC: A Cryptography-Specific Language for Security Analysis of Block Ciphers against Differential Cryptanalysis</em>. Pu Sun (ShanghaiTech University), Fu Song* (Institute of Software Chinese Academy of Sciences, and University of Chinese Academy of Sciences), Yuqi Chen (ShanghaiTech University), Taolue Chen (Birkbeck, University of London). Proc. ACM Program. Lang. 8, POPL, Article 29 (January 2024), 33 pages.<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoi.org%2F10.1145%2F3632871" target="_blank">https://doi.org/10.1145/3632871</a></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 16 Nov 2023 04:31:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/267024</guid>
            <link>https://www.oschina.net/news/267024</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[OneTable —— Lakehouse 表格式间全方位互操作]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff; color:#1f2328">OneTable 是一种表格式的全方位转换器，可促进数据处理系统和查询引擎之间的互操作性</span><span style="color:#000000">。Apache Hudi、Delta Lake 和 Apache Iceberg 之间无缝互操作。</span></p><p>OneTable 不是一种新的或独立的格式，OneTable 提供了用于转换 Lakehouse 表格式元数据的抽象和工具</p><p><span><span>OneTable 通过利用表表示的通用模型来简化数据湖操作。这允许用户以一种格式写入数据，同时仍然受益于其他格式的集成和功能。例如，OneTable 使现有的 Hudi 用户能够无缝地使用 Databricks 的 Photon Engine 或使用 Snowflake 查询 Iceberg 表。创建从一种格式到另一种格式的转换非常简单，只需要实现一些接口，项目团队认为，这将有助于将来支持的源格式和目标格式的扩展。</span></span></p><p style="margin-left:0px; margin-right:0px"><img alt="" height="414" src="https://static.oschina.net/uploads/space/2023/1116/163549_inUl_4252687.png" width="500" referrerpolicy="no-referrer"></p></div>
                                                                ]]>
            </description>
            <pubDate>Thu, 16 Nov 2023 03:13:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/p/onetable</guid>
            <link>https://www.oschina.net/p/onetable</link>
        </item>
        <item>
            <title>
                <![CDATA[每日一博 | Transformers 中原生支持的量化方案概述]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="rich_media_content js_underline_content
                       autoTypeSetting24psection
            " id="js_content"><section data-tool="mdnice 编辑器" data-website="https://www.mdnice.com" style="font-size: 16px;color: black;padding-right: 10px;padding-left: 10px;line-height: 1.6;letter-spacing: 0px;word-break: break-word;text-align: left;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;" data-mpa-powered-by="yiban.io"><span style="font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: 0px;text-align: left;text-wrap: wrap;color: rgb(58, 58, 58);">本文旨在对 transformers 支持的各种量化方案及其优缺点作一个清晰的概述，以助于读者进行方案选择。</span></section><p data-tool="mdnice 编辑器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);">目前，量化模型有两个主要的用途:</p><ul data-tool="mdnice 编辑器" class="list-paddingleft-1" style="margin-top: 8px;margin-bottom: 8px;padding-left: 25px;width: 557.438px;color: rgb(0, 0, 0);font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;"><li><section style="margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(58, 58, 58);">
     在较小的设备上进行大模型推理 
   </section></li><li><section style="margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(58, 58, 58);">
     对量化模型进行适配器微调 
   </section></li></ul><p data-tool="mdnice 编辑器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);">到目前为止，transformers 已经集成并&nbsp;<strong style="color: black;">原生</strong>&nbsp;支持了&nbsp;<em style="color: black;">bitsandbytes</em>&nbsp;和&nbsp;<em style="color: black;">auto-gptq</em>&nbsp;这两个量化库。请注意，🤗 optimum 还支持更多的量化方案，但本文不会涉及这一块内容。</p><p data-tool="mdnice 编辑器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);">要详细了解每种方案的更多信息，可查看下文列出的相关资源，或者阅读相应的&nbsp;<code style="margin: 3px;padding: 3px;font-size: 14px;border-radius: 4px;font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;color: rgb(155, 110, 35);background-color: rgb(255, 245, 227);">transformers</code>&nbsp;文档。</p><p data-tool="mdnice 编辑器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);">另请注意，下文内容仅适用于&nbsp;<code style="margin: 3px;padding: 3px;font-size: 14px;border-radius: 4px;font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;color: rgb(155, 110, 35);background-color: rgb(255, 245, 227);">PyTorch</code>&nbsp;模型，&nbsp;<code style="margin: 3px;padding: 3px;font-size: 14px;border-radius: 4px;font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;color: rgb(155, 110, 35);background-color: rgb(255, 245, 227);">Tensorflow</code>&nbsp;和&nbsp;<code style="margin: 3px;padding: 3px;font-size: 14px;border-radius: 4px;font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;color: rgb(155, 110, 35);background-color: rgb(255, 245, 227);">Flax/JAX</code>&nbsp;模型不在讨论范围之内。</p><span id="OSC_h2_1"></span><h2 data-tool="mdnice 编辑器" style="margin-top: 2em;margin-bottom: 35px;font-weight: bold;font-size: 22px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.2em;color: rgb(255, 157, 0);"><span style="margin-right: 3px;padding: 2px 13px;color: rgb(255, 157, 11);visibility: visible;display: inline-block;border-left: 5px solid rgb(255, 157, 0);height: 30.3958px;font-size: 18px;">目录</span><span style="padding-left: 10px;font-size: 18px;color: rgb(255, 157, 11);display: inline-block;border-left: 5px solid rgb(255, 157, 11);visibility: visible;"></span></h2><ul data-tool="mdnice 编辑器" class="list-paddingleft-1" style="margin-top: 8px;margin-bottom: 8px;padding-left: 25px;width: 557.438px;color: rgb(0, 0, 0);font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;"><li><section style="margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(58, 58, 58);">
     资源 
   </section></li><li><section style="margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(58, 58, 58);">
     bitsandbytes 与 auto-gptq 之比较 
   </section></li><li><section style="margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(58, 58, 58);">
     深入研究速度基准 
   </section></li><li><section style="margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(58, 58, 58);">
     总结与最后的话 
   </section></li><li><section style="margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(58, 58, 58);">
     致谢 
   </section></li></ul><span id="OSC_h2_2"></span><h2 data-tool="mdnice 编辑器" style="margin-top: 2em;margin-bottom: 35px;font-weight: bold;font-size: 22px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.2em;color: rgb(255, 157, 0);"><span style="margin-right: 3px;padding: 2px 13px;color: rgb(255, 157, 11);visibility: visible;display: inline-block;border-left: 5px solid rgb(255, 157, 0);height: 30.3958px;font-size: 18px;">资源</span><span style="padding-left: 10px;font-size: 18px;color: rgb(255, 157, 11);display: inline-block;border-left: 5px solid rgb(255, 157, 11);visibility: visible;"></span></h2><ul data-tool="mdnice 编辑器" class="list-paddingleft-1" style="margin-top: 8px;margin-bottom: 8px;padding-left: 25px;width: 557.438px;color: rgb(0, 0, 0);font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;"><li><section style="margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(58, 58, 58);">
     GPTQ 博文&nbsp;– 概述什么是 GPTQ 量化方法以及如何使用它。 
   </section></li><li><section style="margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(58, 58, 58);">
     bistandbytes 4 比特量化博文&nbsp;- 本文介绍了 4 比特量化和 QLoRa，QLoRa 是一种高效的微调方法。 
   </section></li><li><section style="margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(58, 58, 58);">
     bistandbytes 8 比特量化博文&nbsp;- 本文解释了如何与 bitsandbytes 配合使用 8 比特量化。 
   </section></li><li><section style="margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(58, 58, 58);">
     有关 GPTQ 基础用法的 Google Colab 笔记本&nbsp;- 本笔记本展示了如何使用 GPTQ 方法量化你自己的 transformer 模型，如何用量化模型进行推理，以及如何对量化模型进行微调。 
   </section></li><li><section style="margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(58, 58, 58);">
     有关 bitsandbytes 基础用法的 Google Colab 笔记本&nbsp;- 该笔记本展示了如何在推理中使用 4 比特模型及其所有变体，以及如何在免费的 Google Colab 实例上运行 GPT-neo-X (20B 模型)。 
   </section></li><li><section style="margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(58, 58, 58);">
     Merve 撰写的关于量化的博文&nbsp;- 本文简要介绍了量化以及 transformers 中原生支持的量化方法。 
   </section></li></ul><span id="OSC_h2_3"></span><h2 data-tool="mdnice 编辑器" style="margin-top: 2em;margin-bottom: 35px;font-weight: bold;font-size: 22px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.2em;color: rgb(255, 157, 0);"><span style="margin-right: 3px;padding: 2px 13px;color: rgb(255, 157, 11);visibility: visible;display: inline-block;border-left: 5px solid rgb(255, 157, 0);height: 30.3958px;font-size: 18px;">bitsandbytes 与 auto-gptq 之比较</span><span style="padding-left: 10px;font-size: 18px;color: rgb(255, 157, 11);display: inline-block;border-left: 5px solid rgb(255, 157, 11);visibility: visible;"></span></h2><p data-tool="mdnice 编辑器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);">本节我们将讨论&nbsp;<code style="margin: 3px;padding: 3px;font-size: 14px;border-radius: 4px;font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;color: rgb(155, 110, 35);background-color: rgb(255, 245, 227);">bitsandbytes</code>&nbsp;和&nbsp;<code style="margin: 3px;padding: 3px;font-size: 14px;border-radius: 4px;font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;color: rgb(155, 110, 35);background-color: rgb(255, 245, 227);">gptq</code>&nbsp;量化各自的优缺点。请注意，这些比较主要基于社区的反馈，它们具有一定的时效性，会随着时间的推移而变化，比如说其中一些功能缺失已被纳入相应库的路线图中了。</p><span id="OSC_h3_4"></span><h3 data-tool="mdnice 编辑器" style="margin-top: 10px;margin-bottom: 5px;padding-top: 10px;font-weight: bold;font-size: 20px;color: rgb(0, 0, 0);font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.4;"><span style="padding-left: 1em;color: rgb(81, 81, 81);font-size: 17px;border-left: 3px solid rgb(249, 191, 69);">bitsandbytes 有什么好处？</span></h3><p data-tool="mdnice 编辑器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);"><strong style="color: black;">简单</strong>: bitsandbytes 依旧是量化任何模型的最简单方法，因为它不需要量化校准数据及校准过程 (即零样本量化)。任何模型只要含有&nbsp;<code style="margin: 3px;padding: 3px;font-size: 14px;border-radius: 4px;font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;color: rgb(155, 110, 35);background-color: rgb(255, 245, 227);">torch.nn.Linear</code>&nbsp;模块，就可以对其进行开箱即用的量化。每当在&nbsp;<code style="margin: 3px;padding: 3px;font-size: 14px;border-radius: 4px;font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;color: rgb(155, 110, 35);background-color: rgb(255, 245, 227);">transformers</code>&nbsp;中添加新架构时，只要其可以用&nbsp;<code style="margin: 3px;padding: 3px;font-size: 14px;border-radius: 4px;font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;color: rgb(155, 110, 35);background-color: rgb(255, 245, 227);">accelerate</code>&nbsp;库的&nbsp;<code style="margin: 3px;padding: 3px;font-size: 14px;border-radius: 4px;font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;color: rgb(155, 110, 35);background-color: rgb(255, 245, 227);">device_map="auto"</code>&nbsp;加载，用户就可以直接受益于开箱即用的 bitsandbytes 量化，同时该方法对性能的影响也是最小的。量化是在模型加载时执行的，无需运行任何后处理或准备步骤。</p><p data-tool="mdnice 编辑器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);"><strong style="color: black;">跨模态互操作性</strong>: 由于量化模型的唯一条件是包含&nbsp;<code style="margin: 3px;padding: 3px;font-size: 14px;border-radius: 4px;font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;color: rgb(155, 110, 35);background-color: rgb(255, 245, 227);">torch.nn.Linear</code>&nbsp;层，因此量化对于任何模态都可以实现开箱即用。用户可以开箱即用地加载诸如 Whisper、ViT、Blip2 之类的 8 比特或 4 比特模型。</p><p data-tool="mdnice 编辑器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);"><strong style="color: black;">合并适配器 (adapter) 时性能下降为 0</strong>: (如果你对此不熟悉，请参阅&nbsp;此文&nbsp;以获得有关适配器和 PEFT 的更多信息)。如果你在量化基础模型之上训练适配器，则可以将适配器合并在基础模型之上进行部署，而不会降低推理性能。你甚至还可以在反量化模型之上&nbsp;合并&nbsp;适配器！GPTQ 不支持此功能。</p><span id="OSC_h3_5"></span><h3 data-tool="mdnice 编辑器" style="margin-top: 10px;margin-bottom: 5px;padding-top: 10px;font-weight: bold;font-size: 20px;color: rgb(0, 0, 0);font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.4;"><span style="padding-left: 1em;color: rgb(81, 81, 81);font-size: 17px;border-left: 3px solid rgb(249, 191, 69);">autoGPTQ 有什么好处？</span></h3><p data-tool="mdnice 编辑器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);"><strong style="color: black;">文本生成速度快</strong>: 对&nbsp;文本生成&nbsp;任务而言，GPTQ 量化模型的速度比 bitsandbytes 量化模型的速度更快，下文我们会详细比较。</p><p data-tool="mdnice 编辑器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);"><strong style="color: black;">n 比特支持</strong>: GPTQ 算法可以将模型量化至 2 比特！但这可能会导致严重的质量下降。我们建议使用 4 比特，这个值对 GPTQ 而言是个很好的折衷。</p><p data-tool="mdnice 编辑器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);"><strong style="color: black;">易于序列化</strong>: GPTQ 模型支持任意比特的序列化。只要安装了所需的软件包，就支持开箱即用地从 TheBloke 空间&nbsp;中加载后缀为&nbsp;<code style="margin: 3px;padding: 3px;font-size: 14px;border-radius: 4px;font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;color: rgb(155, 110, 35);background-color: rgb(255, 245, 227);">-GPTQ</code>&nbsp;的模型。bitsandbytes 支持 8 比特序列化，但尚不支持 4 比特序列化。</p><p data-tool="mdnice 编辑器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);"><strong style="color: black;">AMD 支持</strong>: 开箱即用支持 AMD GPU！</p><span id="OSC_h3_6"></span><h3 data-tool="mdnice 编辑器" style="margin-top: 10px;margin-bottom: 5px;padding-top: 10px;font-weight: bold;font-size: 20px;color: rgb(0, 0, 0);font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.4;"><span style="padding-left: 1em;color: rgb(81, 81, 81);font-size: 17px;border-left: 3px solid rgb(249, 191, 69);">bitsandbytes 还有哪些潜在的改进空间？</span></h3><p data-tool="mdnice 编辑器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);"><strong style="color: black;">文本生成速度比 GPTQ 慢</strong>: 使用&nbsp;<code style="margin: 3px;padding: 3px;font-size: 14px;border-radius: 4px;font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;color: rgb(155, 110, 35);background-color: rgb(255, 245, 227);">generate</code>&nbsp;接口时，bitsandbytes 4 比特模型比 GPTQ 慢。</p><p data-tool="mdnice 编辑器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);"><strong style="color: black;">4 比特权重不可序列化</strong>: 目前，4 比特模型无法序列化。社区用户经常提出这样的请求，我们相信 bitsandbytes 维护者应该很快就能解决这个问题，因为这已经在其路线图中了！</p><span id="OSC_h3_7"></span><h3 data-tool="mdnice 编辑器" style="margin-top: 10px;margin-bottom: 5px;padding-top: 10px;font-weight: bold;font-size: 20px;color: rgb(0, 0, 0);font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.4;"><span style="padding-left: 1em;color: rgb(81, 81, 81);font-size: 17px;border-left: 3px solid rgb(249, 191, 69);">autoGPTQ 还有哪些潜在的改进空间？</span></h3><p data-tool="mdnice 编辑器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);"><strong style="color: black;">校准数据集</strong>: 对校准数据集的需求可能会让一些用户难以用上 GPTQ。此外，模型量化可能需要几个小时 (例如，根据&nbsp;该论文第 2 节，175B 的模型需要 4 个 GPU 时)。</p><p data-tool="mdnice 编辑器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);"><strong style="color: black;">目前仅可用于语言模型</strong>: 截至目前，用 autoGPTQ 对模型进行量化的 API 仅支持语言模型。使用 GPTQ 算法量化非文本 (或多模态) 模型应该是可行的，但原始论文或 auto-gptq 代码库中尚未对此有详细说明。如果社区对这方面很有兴趣，将来可能会考虑这一点。</p><span id="OSC_h2_8"></span><h2 data-tool="mdnice 编辑器" style="margin-top: 2em;margin-bottom: 35px;font-weight: bold;font-size: 22px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.2em;color: rgb(255, 157, 0);"><span style="margin-right: 3px;padding: 2px 13px;color: rgb(255, 157, 11);visibility: visible;display: inline-block;border-left: 5px solid rgb(255, 157, 0);height: 30.3958px;font-size: 18px;">深入研究速度基准</span><span style="padding-left: 10px;font-size: 18px;color: rgb(255, 157, 11);display: inline-block;border-left: 5px solid rgb(255, 157, 11);visibility: visible;"></span></h2><p data-tool="mdnice 编辑器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);">我们决定在不同硬件上使用 bitsandbytes 和 auto-gptq 在推理和适配器微调这两大场景上进行一系列广泛的基准测试。推理基准测试应该让用户了解不同推理方法之间可能存在的速度差异，而适配器微调基准测试应该让用户在需要决定选择 bitsandbytes 还是 GPTQ 基础模型进行适配器微调时有一个清晰的判断。</p><p data-tool="mdnice 编辑器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);">基本设置如下:</p><ul data-tool="mdnice 编辑器" class="list-paddingleft-1" style="margin-top: 8px;margin-bottom: 8px;padding-left: 25px;width: 557.438px;color: rgb(0, 0, 0);font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;"><li><section style="margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(58, 58, 58);">
     bitsandbytes: 使用&nbsp; 
    <code style="margin: 3px;padding: 3px;font-size: 14px;border-radius: 4px;font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;color: rgb(155, 110, 35);background-color: rgb(255, 245, 227);">bnb_4bit_compute_dtype=torch.float16</code>&nbsp;进行 4 比特量化。确保使用&nbsp; 
    <code style="margin: 3px;padding: 3px;font-size: 14px;border-radius: 4px;font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;color: rgb(155, 110, 35);background-color: rgb(255, 245, 227);">bitsandbytes&gt;=0.41.1</code>&nbsp;，以用上 4 比特加速核函数。 
   </section></li><li><section style="margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(58, 58, 58);">
     auto-gptq: 确保&nbsp; 
    <code style="margin: 3px;padding: 3px;font-size: 14px;border-radius: 4px;font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;color: rgb(155, 110, 35);background-color: rgb(255, 245, 227);">auto-gptq&gt;=0.4.0</code>&nbsp;以用上&nbsp; 
    <code style="margin: 3px;padding: 3px;font-size: 14px;border-radius: 4px;font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;color: rgb(155, 110, 35);background-color: rgb(255, 245, 227);">exllama</code>&nbsp;加速核函数进行 4 比特量化。 
   </section></li></ul><span id="OSC_h3_9"></span><h3 data-tool="mdnice 编辑器" style="margin-top: 10px;margin-bottom: 5px;padding-top: 10px;font-weight: bold;font-size: 20px;color: rgb(0, 0, 0);font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.4;"><span style="padding-left: 1em;color: rgb(81, 81, 81);font-size: 17px;border-left: 3px solid rgb(249, 191, 69);">推理速度 (仅前向)</span></h3><p data-tool="mdnice 编辑器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);">该基准测试仅测量预填充 (prefill) 步骤，该步骤对应于训练期间的前向传递。测试基於单张英伟达 A100-SXM4-80GB GPU，提示长度为 512，模型为&nbsp;<code style="margin: 3px;padding: 3px;font-size: 14px;border-radius: 4px;font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;color: rgb(155, 110, 35);background-color: rgb(255, 245, 227);">meta-llama/Llama-2-13b-hf</code>&nbsp;。</p><p data-tool="mdnice 编辑器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);">batch size = 1 时:</p><section data-tool="mdnice 编辑器" style="margin-bottom: 0px;color: rgb(0, 0, 0);font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;overflow-x: auto;"><table><thead><tr style="border-width: 1px 0px 0px;border-right-style: initial;border-bottom-style: initial;border-left-style: initial;border-right-color: initial;border-bottom-color: initial;border-left-color: initial;border-top-style: solid;border-top-color: rgb(204, 204, 204);background-color: white;"><th style="border-top-width: 1px;border-color: rgb(204, 204, 204);background-color: rgb(240, 240, 240);text-align: center;min-width: 85px;">量化方法</th><th style="border-top-width: 1px;border-color: rgb(204, 204, 204);background-color: rgb(240, 240, 240);text-align: center;min-width: 85px;">act_order</th><th style="border-top-width: 1px;border-color: rgb(204, 204, 204);background-color: rgb(240, 240, 240);text-align: center;min-width: 85px;">比特数</th><th style="border-top-width: 1px;border-color: rgb(204, 204, 204);background-color: rgb(240, 240, 240);text-align: center;min-width: 85px;">group_size</th><th style="border-top-width: 1px;border-color: rgb(204, 204, 204);background-color: rgb(240, 240, 240);text-align: center;min-width: 85px;">加速核</th><th style="border-top-width: 1px;border-color: rgb(204, 204, 204);background-color: rgb(240, 240, 240);text-align: center;min-width: 85px;">加载时间 (秒)</th><th style="border-top-width: 1px;border-color: rgb(204, 204, 204);background-color: rgb(240, 240, 240);text-align: center;min-width: 85px;">每词元延迟 (毫秒)</th><th style="border-top-width: 1px;border-color: rgb(204, 204, 204);background-color: rgb(240, 240, 240);text-align: center;min-width: 85px;">吞吐 (词元/秒)</th><th style="border-top-width: 1px;border-color: rgb(204, 204, 204);background-color: rgb(240, 240, 240);text-align: center;min-width: 85px;">峰值显存 (MB)</th></tr></thead><tbody style="border-width: 0px;border-style: initial;border-color: initial;"><tr style="border-width: 1px 0px 0px;border-right-style: initial;border-bottom-style: initial;border-left-style: initial;border-right-color: initial;border-bottom-color: initial;border-left-color: initial;border-top-style: solid;border-top-color: rgb(204, 204, 204);background-color: white;"><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">fp16</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">None</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">None</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">None</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">None</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">26.0</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">36.958</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">27.058</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">29152.98</td></tr><tr style="border-width: 1px 0px 0px;border-right-style: initial;border-bottom-style: initial;border-left-style: initial;border-right-color: initial;border-bottom-color: initial;border-left-color: initial;border-top-style: solid;border-top-color: rgb(204, 204, 204);background-color: rgb(248, 248, 248);"><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">gptq</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">False</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">4</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">128</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">exllama</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">36.2</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">33.711</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">29.663</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">10484.34</td></tr><tr style="border-width: 1px 0px 0px;border-right-style: initial;border-bottom-style: initial;border-left-style: initial;border-right-color: initial;border-bottom-color: initial;border-left-color: initial;border-top-style: solid;border-top-color: rgb(204, 204, 204);background-color: white;"><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">bitsandbytes</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">None</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">4</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">None</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">None</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">37.64</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">52.00</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">19.23</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">11018.36</td></tr></tbody></table></section><p data-tool="mdnice 编辑器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);">batch size = 16 时:</p><section data-tool="mdnice 编辑器" style="margin-bottom: 0px;color: rgb(0, 0, 0);font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;overflow-x: auto;"><table><thead><tr style="border-width: 1px 0px 0px;border-right-style: initial;border-bottom-style: initial;border-left-style: initial;border-right-color: initial;border-bottom-color: initial;border-left-color: initial;border-top-style: solid;border-top-color: rgb(204, 204, 204);background-color: white;"><th style="border-top-width: 1px;border-color: rgb(204, 204, 204);background-color: rgb(240, 240, 240);text-align: center;min-width: 85px;">量化方法</th><th style="border-top-width: 1px;border-color: rgb(204, 204, 204);background-color: rgb(240, 240, 240);text-align: center;min-width: 85px;">act_order</th><th style="border-top-width: 1px;border-color: rgb(204, 204, 204);background-color: rgb(240, 240, 240);text-align: center;min-width: 85px;">比特数</th><th style="border-top-width: 1px;border-color: rgb(204, 204, 204);background-color: rgb(240, 240, 240);text-align: center;min-width: 85px;">group_size</th><th style="border-top-width: 1px;border-color: rgb(204, 204, 204);background-color: rgb(240, 240, 240);text-align: center;min-width: 85px;">加速核</th><th style="border-top-width: 1px;border-color: rgb(204, 204, 204);background-color: rgb(240, 240, 240);text-align: center;min-width: 85px;">加载时间 (秒)</th><th style="border-top-width: 1px;border-color: rgb(204, 204, 204);background-color: rgb(240, 240, 240);text-align: center;min-width: 85px;">每词元延迟 (毫秒)</th><th style="border-top-width: 1px;border-color: rgb(204, 204, 204);background-color: rgb(240, 240, 240);text-align: center;min-width: 85px;">吞吐 (词元/秒)</th><th style="border-top-width: 1px;border-color: rgb(204, 204, 204);background-color: rgb(240, 240, 240);text-align: center;min-width: 85px;">峰值显存 (MB)</th></tr></thead><tbody style="border-width: 0px;border-style: initial;border-color: initial;"><tr style="border-width: 1px 0px 0px;border-right-style: initial;border-bottom-style: initial;border-left-style: initial;border-right-color: initial;border-bottom-color: initial;border-left-color: initial;border-top-style: solid;border-top-color: rgb(204, 204, 204);background-color: white;"><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">fp16</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">None</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">None</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">None</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">None</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">26.0</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">69.94</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">228.76</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">53986.51</td></tr><tr style="border-width: 1px 0px 0px;border-right-style: initial;border-bottom-style: initial;border-left-style: initial;border-right-color: initial;border-bottom-color: initial;border-left-color: initial;border-top-style: solid;border-top-color: rgb(204, 204, 204);background-color: rgb(248, 248, 248);"><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">gptq</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">False</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">4</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">128</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">exllama</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">36.2</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">95.41</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">167.68</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">34777.04</td></tr><tr style="border-width: 1px 0px 0px;border-right-style: initial;border-bottom-style: initial;border-left-style: initial;border-right-color: initial;border-bottom-color: initial;border-left-color: initial;border-top-style: solid;border-top-color: rgb(204, 204, 204);background-color: white;"><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">bitsandbytes</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">None</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">4</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">None</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">None</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">37.64</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">113.98</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">140.38</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">35532.37</td></tr></tbody></table></section><p data-tool="mdnice 编辑器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);">我们可以看到，bitsandbyes 和 GPTQ 的预填充速度相当，batch size 比较大时 GPTQ 稍快一些。欲了解有关该基准测试的更多详细信息，请参阅此&nbsp;链接。</p><span id="OSC_h3_10"></span><h3 data-tool="mdnice 编辑器" style="margin-top: 10px;margin-bottom: 5px;padding-top: 10px;font-weight: bold;font-size: 20px;color: rgb(0, 0, 0);font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.4;"><span style="padding-left: 1em;color: rgb(81, 81, 81);font-size: 17px;border-left: 3px solid rgb(249, 191, 69);">生成速度</span></h3><p data-tool="mdnice 编辑器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);">下面测试推理过程中模型的生成速度，你可以在&nbsp;此处&nbsp;找到基准测试脚本，用于重现我们的结果。</p><span id="OSC_h4_11"></span><h4 data-tool="mdnice 编辑器" style="margin-top: 30px;margin-bottom: 15px;font-weight: bold;font-size: 18px;color: rgb(0, 0, 0);font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.2em;">use_cache</h4><p data-tool="mdnice 编辑器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);">我们先测试&nbsp;<code style="margin: 3px;padding: 3px;font-size: 14px;border-radius: 4px;font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;color: rgb(155, 110, 35);background-color: rgb(255, 245, 227);">use_cache</code>&nbsp;参数的影响，以更好地了解在生成过程中键值缓存对速度的影响。</p><p data-tool="mdnice 编辑器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);">该基准测试在 A100 上运行，提示长度为 30，生成词元数也为 30，模型为&nbsp;<code style="margin: 3px;padding: 3px;font-size: 14px;border-radius: 4px;font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;color: rgb(155, 110, 35);background-color: rgb(255, 245, 227);">meta-llama/Llama-2-7b-hf</code>&nbsp;。</p><p data-tool="mdnice 编辑器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);"><code style="margin: 3px;padding: 3px;font-size: 14px;border-radius: 4px;font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;color: rgb(155, 110, 35);background-color: rgb(255, 245, 227);">use_cache=True</code>&nbsp;时:</p><figure data-tool="mdnice 编辑器" style="margin-top: 10px;margin-bottom: 10px;color: rgb(0, 0, 0);font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;display: flex;flex-direction: column;justify-content: center;align-items: center;"><img class="rich_pages wxw-img" data-ratio="0.7776726584673604" data-type="png" data-w="1057" style="margin-right: auto;margin-bottom: 15px;margin-left: auto;width: 456px;border-radius: 5px;display: block;height: auto !important;" src="https://oscimg.oschina.net/oscnet/89cecb17-53bf-4d9d-a2ba-240693eb1dc1.png" referrerpolicy="no-referrer"><figcaption style="margin-top: 5px;text-align: center;color: rgb(221, 165, 45);font-size: 14px;">
    use_cache=True A100 基准测试结果 
  </figcaption></figure><p data-tool="mdnice 编辑器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);"><code style="margin: 3px;padding: 3px;font-size: 14px;border-radius: 4px;font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;color: rgb(155, 110, 35);background-color: rgb(255, 245, 227);">use_cache=False</code>&nbsp;时:</p><figure data-tool="mdnice 编辑器" style="margin-top: 10px;margin-bottom: 10px;color: rgb(0, 0, 0);font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;display: flex;flex-direction: column;justify-content: center;align-items: center;"><img class="rich_pages wxw-img" data-ratio="0.75" data-type="jpeg" data-w="1080" style="margin-right: auto;margin-bottom: 15px;margin-left: auto;width: 480px;border-radius: 5px;display: block;height: auto !important;" src="https://oscimg.oschina.net/oscnet/022b4baa-5ae6-4f1d-958b-e3310900c08c.jpg" referrerpolicy="no-referrer"><figcaption style="margin-top: 5px;text-align: center;color: rgb(221, 165, 45);font-size: 14px;">
    use_cache=False A100 基准测试结果 
  </figcaption></figure><p data-tool="mdnice 编辑器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);">通过这两个基准测试，可以得出结论，使用注意力缓存时，生成速度会更快，该结论符合预期。此外，一般来说，GPTQ 比 bitsandbytes 更快。例如，&nbsp;<code style="margin: 3px;padding: 3px;font-size: 14px;border-radius: 4px;font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;color: rgb(155, 110, 35);background-color: rgb(255, 245, 227);">batch_size=4</code>&nbsp;且&nbsp;<code style="margin: 3px;padding: 3px;font-size: 14px;border-radius: 4px;font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;color: rgb(155, 110, 35);background-color: rgb(255, 245, 227);">use_cache=True</code>&nbsp;时，GPTQ 速度快了一倍！因此，我们下一个基准测试中会直接使用&nbsp;<code style="margin: 3px;padding: 3px;font-size: 14px;border-radius: 4px;font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;color: rgb(155, 110, 35);background-color: rgb(255, 245, 227);">use_cache=True</code>&nbsp;。请注意，&nbsp;<code style="margin: 3px;padding: 3px;font-size: 14px;border-radius: 4px;font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;color: rgb(155, 110, 35);background-color: rgb(255, 245, 227);">use_cache=True</code>&nbsp;会消耗更多显存。</p><span id="OSC_h4_12"></span><h4 data-tool="mdnice 编辑器" style="margin-top: 30px;margin-bottom: 15px;font-weight: bold;font-size: 18px;color: rgb(0, 0, 0);font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.2em;">硬件</h4><p data-tool="mdnice 编辑器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);">下面，我们看看量化模型在不同的硬件上的表现。我们使用的提示长度为 30，生成 30 个词元，使用的模型是&nbsp;<code style="margin: 3px;padding: 3px;font-size: 14px;border-radius: 4px;font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;color: rgb(155, 110, 35);background-color: rgb(255, 245, 227);">meta-llama/Llama-2-7b-hf</code>&nbsp;。</p><p data-tool="mdnice 编辑器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);">单张 A100:</p><figure data-tool="mdnice 编辑器" style="margin-top: 10px;margin-bottom: 10px;color: rgb(0, 0, 0);font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;display: flex;flex-direction: column;justify-content: center;align-items: center;"><img class="rich_pages wxw-img" data-ratio="0.7776726584673604" data-type="png" data-w="1057" style="margin-right: auto;margin-bottom: 15px;margin-left: auto;width: 475px;border-radius: 5px;display: block;height: auto !important;" src="https://oscimg.oschina.net/oscnet/89cecb17-53bf-4d9d-a2ba-240693eb1dc1.png" referrerpolicy="no-referrer"><figcaption style="margin-top: 5px;text-align: center;color: rgb(221, 165, 45);font-size: 14px;">
    A100 基准测试结果 
  </figcaption></figure><p data-tool="mdnice 编辑器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);">单张 T4:</p><figure data-tool="mdnice 编辑器" style="margin-top: 10px;margin-bottom: 10px;color: rgb(0, 0, 0);font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;display: flex;flex-direction: column;justify-content: center;align-items: center;"><img class="rich_pages wxw-img" data-ratio="0.75" data-type="jpeg" data-w="1080" style="margin-right: auto;margin-bottom: 15px;margin-left: auto;width: 498px;border-radius: 5px;display: block;height: auto !important;" src="https://oscimg.oschina.net/oscnet/cb3e5573-2968-485b-9022-4c5349549b6e.jpg" referrerpolicy="no-referrer"><figcaption style="margin-top: 5px;text-align: center;color: rgb(221, 165, 45);font-size: 14px;">
    T4 基准测试结果 
  </figcaption></figure><p data-tool="mdnice 编辑器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);">单张 Titan RTX:</p><figure data-tool="mdnice 编辑器" style="margin-top: 10px;margin-bottom: 10px;color: rgb(0, 0, 0);font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;display: flex;flex-direction: column;justify-content: center;align-items: center;"><img class="rich_pages wxw-img" data-ratio="0.75" data-type="jpeg" data-w="1080" style="margin-right: auto;margin-bottom: 15px;margin-left: auto;width: 484px;border-radius: 5px;display: block;height: auto !important;" src="https://oscimg.oschina.net/oscnet/7ec27ae0-dce1-41ad-9622-a3f7a6bb6446.jpg" referrerpolicy="no-referrer"><figcaption style="margin-top: 5px;text-align: center;color: rgb(221, 165, 45);font-size: 14px;">
    TITAN RTX 基准测试结果 
  </figcaption></figure><p data-tool="mdnice 编辑器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);">从上面的基准测试中，我们可以得出结论，对于这三款 GPU，GPTQ 都比 bitsandbytes 更快。</p><span id="OSC_h4_13"></span><h4 data-tool="mdnice 编辑器" style="margin-top: 30px;margin-bottom: 15px;font-weight: bold;font-size: 18px;color: rgb(0, 0, 0);font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.2em;">生成长度</h4><p data-tool="mdnice 编辑器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);">在下面的基准测试中，我们将尝试不同的生成长度，看看它们对量化模型速度的影响。实验基于 A100，我们使用的提示长度为 30，并改变生成词元的长度。使用的模型是&nbsp;<code style="margin: 3px;padding: 3px;font-size: 14px;border-radius: 4px;font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;color: rgb(155, 110, 35);background-color: rgb(255, 245, 227);">meta-llama/Llama-2-7b-hf</code>&nbsp;。</p><p data-tool="mdnice 编辑器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);">生成 30 个词元:</p><figure data-tool="mdnice 编辑器" style="margin-top: 10px;margin-bottom: 10px;color: rgb(0, 0, 0);font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;display: flex;flex-direction: column;justify-content: center;align-items: center;"><img class="rich_pages wxw-img" data-ratio="0.7776726584673604" data-type="png" data-w="1057" style="margin-right: auto;margin-bottom: 15px;margin-left: auto;width: 469px;border-radius: 5px;display: block;height: auto !important;" src="https://oscimg.oschina.net/oscnet/89cecb17-53bf-4d9d-a2ba-240693eb1dc1.png" referrerpolicy="no-referrer"><figcaption style="margin-top: 5px;text-align: center;color: rgb(221, 165, 45);font-size: 14px;">
    A100 基准测试结果 
  </figcaption></figure><p data-tool="mdnice 编辑器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);">生成 512 个词元:</p><figure data-tool="mdnice 编辑器" style="margin-top: 10px;margin-bottom: 10px;color: rgb(0, 0, 0);font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;display: flex;flex-direction: column;justify-content: center;align-items: center;"><img class="rich_pages wxw-img" data-ratio="0.75" data-type="jpeg" data-w="1080" style="margin-right: auto;margin-bottom: 15px;margin-left: auto;width: 500px;border-radius: 5px;display: block;height: auto !important;" src="https://oscimg.oschina.net/oscnet/60f8c3d1-292c-4d18-aef8-8eedd1161826.jpg" referrerpolicy="no-referrer"><figcaption style="margin-top: 5px;text-align: center;color: rgb(221, 165, 45);font-size: 14px;">
    生成 512 个词元的 A100 基准测试结果 
  </figcaption></figure><p data-tool="mdnice 编辑器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);">从以上基准测试中，我们可以得出结论，无论生成长度如何，GPTQ 都比 bitsandbytes 更快。</p><span id="OSC_h3_14"></span><h3 data-tool="mdnice 编辑器" style="margin-top: 10px;margin-bottom: 5px;padding-top: 10px;font-weight: bold;font-size: 20px;color: rgb(0, 0, 0);font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.4;"><span style="padding-left: 1em;color: rgb(81, 81, 81);font-size: 17px;border-left: 3px solid rgb(249, 191, 69);">适配器微调 (前向 + 后向)</span></h3><p data-tool="mdnice 编辑器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);">对量化模型进行全模型微调是不可能的。但是，你可以利用参数高效微调 (PEFT) 来微调量化模型，在其之上训练新的适配器。我们使用一种名为「低秩适配器 (LoRA)」的微调方法: 无需微调整个模型，仅需微调这些适配器并将它们正确加载到模型中。我们来对比一下微调速度吧！</p><p data-tool="mdnice 编辑器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);">该基准测试基于英伟达 A100 GPU，我们使用 Hub 中的&nbsp;<code style="margin: 3px;padding: 3px;font-size: 14px;border-radius: 4px;font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;color: rgb(155, 110, 35);background-color: rgb(255, 245, 227);">meta-llama/Llama-2-7b-hf</code>&nbsp;模型。请注意，对于 GPTQ 模型，我们必须禁用&nbsp;<code style="margin: 3px;padding: 3px;font-size: 14px;border-radius: 4px;font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;color: rgb(155, 110, 35);background-color: rgb(255, 245, 227);">exllama</code>&nbsp;加速核，因为它不支持微调。</p><figure data-tool="mdnice 编辑器" style="margin-top: 10px;margin-bottom: 10px;color: rgb(0, 0, 0);font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;display: flex;flex-direction: column;justify-content: center;align-items: center;"><img class="rich_pages wxw-img" data-ratio="0.75" data-type="png" data-w="640" style="margin-right: auto;margin-bottom: 15px;margin-left: auto;width: 487px;border-radius: 5px;display: block;height: auto !important;" src="https://oscimg.oschina.net/oscnet/13c41f61-4906-4881-8a38-8b3b4e76b862.png" referrerpolicy="no-referrer"><figcaption style="margin-top: 5px;text-align: center;color: rgb(221, 165, 45);font-size: 14px;">
    A100 微调基准测试结果 
  </figcaption></figure><p data-tool="mdnice 编辑器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);">从结果中，我们可以得出结论，bitsandbytes 的微调速度比 GPTQ 更快。</p><span id="OSC_h3_15"></span><h3 data-tool="mdnice 编辑器" style="margin-top: 10px;margin-bottom: 5px;padding-top: 10px;font-weight: bold;font-size: 20px;color: rgb(0, 0, 0);font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.4;"><span style="padding-left: 1em;color: rgb(81, 81, 81);font-size: 17px;border-left: 3px solid rgb(249, 191, 69);">性能退化</span></h3><p data-tool="mdnice 编辑器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);">量化对于减少内存消耗非常有用。然而，它也会带来性能退化。我们使用 Open-LLM 排行榜&nbsp;来比较性能！</p><p data-tool="mdnice 编辑器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);">对于 7B 模型:</p><section data-tool="mdnice 编辑器" style="margin-bottom: 0px;color: rgb(0, 0, 0);font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;overflow-x: auto;"><table><thead><tr style="border-width: 1px 0px 0px;border-right-style: initial;border-bottom-style: initial;border-left-style: initial;border-right-color: initial;border-bottom-color: initial;border-left-color: initial;border-top-style: solid;border-top-color: rgb(204, 204, 204);background-color: white;"><th style="border-top-width: 1px;border-color: rgb(204, 204, 204);background-color: rgb(240, 240, 240);text-align: center;min-width: 85px;">模型</th><th style="border-top-width: 1px;border-color: rgb(204, 204, 204);background-color: rgb(240, 240, 240);text-align: center;min-width: 85px;">均值</th><th style="border-top-width: 1px;border-color: rgb(204, 204, 204);background-color: rgb(240, 240, 240);text-align: center;min-width: 85px;">ARC</th><th style="border-top-width: 1px;border-color: rgb(204, 204, 204);background-color: rgb(240, 240, 240);text-align: center;min-width: 85px;">Hellaswag</th><th style="border-top-width: 1px;border-color: rgb(204, 204, 204);background-color: rgb(240, 240, 240);text-align: center;min-width: 85px;">MMLU</th><th style="border-top-width: 1px;border-color: rgb(204, 204, 204);background-color: rgb(240, 240, 240);text-align: center;min-width: 85px;">TruthfulQA</th></tr></thead><tbody style="border-width: 0px;border-style: initial;border-color: initial;"><tr style="border-width: 1px 0px 0px;border-right-style: initial;border-bottom-style: initial;border-left-style: initial;border-right-color: initial;border-bottom-color: initial;border-left-color: initial;border-top-style: solid;border-top-color: rgb(204, 204, 204);background-color: white;"><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">meta-llama/llama-2-7b-hf</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;"><strong>54.32</strong></td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">53.07</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">78.59</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">46.87</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">38.76</td></tr><tr style="border-width: 1px 0px 0px;border-right-style: initial;border-bottom-style: initial;border-left-style: initial;border-right-color: initial;border-bottom-color: initial;border-left-color: initial;border-top-style: solid;border-top-color: rgb(204, 204, 204);background-color: rgb(248, 248, 248);"><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">meta-llama/llama-2-7b-hf-bnb-4bit</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;"><strong>53.4</strong></td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">53.07</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">77.74</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">43.8</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">38.98</td></tr><tr style="border-width: 1px 0px 0px;border-right-style: initial;border-bottom-style: initial;border-left-style: initial;border-right-color: initial;border-bottom-color: initial;border-left-color: initial;border-top-style: solid;border-top-color: rgb(204, 204, 204);background-color: white;"><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">TheBloke/Llama-2-7B-GPTQ</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;"><strong>53.23</strong></td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">52.05</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">77.59</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">43.99</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">39.32</td></tr></tbody></table></section><p data-tool="mdnice 编辑器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);">对于 13B 模型:</p><section data-tool="mdnice 编辑器" style="margin-bottom: 0px;color: rgb(0, 0, 0);font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;overflow-x: auto;"><table><thead><tr style="border-width: 1px 0px 0px;border-right-style: initial;border-bottom-style: initial;border-left-style: initial;border-right-color: initial;border-bottom-color: initial;border-left-color: initial;border-top-style: solid;border-top-color: rgb(204, 204, 204);background-color: white;"><th style="border-top-width: 1px;border-color: rgb(204, 204, 204);background-color: rgb(240, 240, 240);text-align: center;min-width: 85px;">模型</th><th style="border-top-width: 1px;border-color: rgb(204, 204, 204);background-color: rgb(240, 240, 240);text-align: center;min-width: 85px;">均值</th><th style="border-top-width: 1px;border-color: rgb(204, 204, 204);background-color: rgb(240, 240, 240);text-align: center;min-width: 85px;">ARC</th><th style="border-top-width: 1px;border-color: rgb(204, 204, 204);background-color: rgb(240, 240, 240);text-align: center;min-width: 85px;">Hellaswag</th><th style="border-top-width: 1px;border-color: rgb(204, 204, 204);background-color: rgb(240, 240, 240);text-align: center;min-width: 85px;">MMLU</th><th style="border-top-width: 1px;border-color: rgb(204, 204, 204);background-color: rgb(240, 240, 240);text-align: center;min-width: 85px;">TruthfulQA</th></tr></thead><tbody style="border-width: 0px;border-style: initial;border-color: initial;"><tr style="border-width: 1px 0px 0px;border-right-style: initial;border-bottom-style: initial;border-left-style: initial;border-right-color: initial;border-bottom-color: initial;border-left-color: initial;border-top-style: solid;border-top-color: rgb(204, 204, 204);background-color: white;"><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">meta-llama/llama-2-13b-hf</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;"><strong>58.66</strong></td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">59.39</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">82.13</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">55.74</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">37.38</td></tr><tr style="border-width: 1px 0px 0px;border-right-style: initial;border-bottom-style: initial;border-left-style: initial;border-right-color: initial;border-bottom-color: initial;border-left-color: initial;border-top-style: solid;border-top-color: rgb(204, 204, 204);background-color: rgb(248, 248, 248);"><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">TheBloke/Llama-2-13B-GPTQ (revision = 'gptq-4bit-128g-actorder_True')</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;"><strong>58.03</strong></td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">59.13</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">81.48</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">54.45</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">37.07</td></tr><tr style="border-width: 1px 0px 0px;border-right-style: initial;border-bottom-style: initial;border-left-style: initial;border-right-color: initial;border-bottom-color: initial;border-left-color: initial;border-top-style: solid;border-top-color: rgb(204, 204, 204);background-color: white;"><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">TheBloke/Llama-2-13B-GPTQ</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;"><strong>57.56</strong></td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">57.25</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">81.66</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">54.81</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">36.56</td></tr><tr style="border-width: 1px 0px 0px;border-right-style: initial;border-bottom-style: initial;border-left-style: initial;border-right-color: initial;border-bottom-color: initial;border-left-color: initial;border-top-style: solid;border-top-color: rgb(204, 204, 204);background-color: rgb(248, 248, 248);"><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">meta-llama/llama-2-13b-hf-bnb-4bit</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;"><strong>56.9</strong></td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">58.11</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">80.97</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">54.34</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">34.17</td></tr></tbody></table></section><p data-tool="mdnice 编辑器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);">从上面的结果中，我们可以得出结论，模型越大，退化越少。更有意思的是，所有的退化都很小！</p><span id="OSC_h2_16"></span><h2 data-tool="mdnice 编辑器" style="margin-top: 2em;margin-bottom: 35px;font-weight: bold;font-size: 22px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.2em;color: rgb(255, 157, 0);"><span style="margin-right: 3px;padding: 2px 13px;color: rgb(255, 157, 11);visibility: visible;display: inline-block;border-left: 5px solid rgb(255, 157, 0);height: 30.3958px;font-size: 18px;">总结与最后的话</span><span style="padding-left: 10px;font-size: 18px;color: rgb(255, 157, 11);display: inline-block;border-left: 5px solid rgb(255, 157, 11);visibility: visible;"></span></h2><p data-tool="mdnice 编辑器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);">通过本文，我们比较了多种设置下的 bitsandbytes 和 GPTQ 量化。我们发现，bitsandbytes 更适合微调，而 GPTQ 更适合生成。根据这一观察，获得最佳合并模型的一种方法是:</p><ul data-tool="mdnice 编辑器" class="list-paddingleft-1" style="margin-top: 8px;margin-bottom: 8px;padding-left: 25px;width: 557.438px;color: rgb(0, 0, 0);font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;"><li><section style="margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(58, 58, 58);">
     (1) 使用 bitsandbytes 量化基础模型 (零样本量化) 
   </section></li><li><section style="margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(58, 58, 58);">
     (2) 添加并微调适配器 
   </section></li><li><section style="margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(58, 58, 58);">
     (3) 将训练后的适配器合并到基础模型或&nbsp;反量化模型&nbsp;之中！ 
   </section></li><li><section style="margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(58, 58, 58);">
     (4) 使用 GPTQ 量化合并后的模型并将其用于部署 
   </section></li></ul><p data-tool="mdnice 编辑器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);">我们希望这个概述让每个人都能更轻松地将 LLM 应用至各自的应用场景中，我们期待看到大家用它构建自己的有趣应用！</p><span id="OSC_h2_17"></span><h2 data-tool="mdnice 编辑器" style="margin-top: 2em;margin-bottom: 35px;font-weight: bold;font-size: 22px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.2em;color: rgb(255, 157, 0);"><span style="margin-right: 3px;padding: 2px 13px;color: rgb(255, 157, 11);visibility: visible;display: inline-block;border-left: 5px solid rgb(255, 157, 0);height: 30.3958px;font-size: 18px;">致谢</span><span style="padding-left: 10px;font-size: 18px;color: rgb(255, 157, 11);display: inline-block;border-left: 5px solid rgb(255, 157, 11);visibility: visible;"></span></h2><p data-tool="mdnice 编辑器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);">我们要感谢 Ilyas、Clémentine 和 Felix 在基准测试上的帮助。</p><p data-tool="mdnice 编辑器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);">我们还要感谢 Pedro Cuenca 对本文撰写的帮助。</p><blockquote data-tool="mdnice 编辑器" style="margin-top: 20px;margin-bottom: 20px;padding: 10px 10px 10px 20px;border-left-color: rgb(255, 177, 27);color: rgb(106, 115, 125);font-size: 0.9em;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;letter-spacing: normal;text-align: left;text-wrap: wrap;border-top: none;border-right: none;border-bottom: none;overflow: auto;background: rgb(255, 245, 227);"><p style="font-size: 16px;line-height: 26px;color: rgb(89, 89, 89);">🤗 宝子们可以戳&nbsp;<strong style="color: black;">阅读原文</strong>&nbsp;查看文中所有的外部链接哟！</p></blockquote><hr data-tool="mdnice 编辑器" style="margin-top: 20px;margin-bottom: 20px;color: rgb(0, 0, 0);font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;height: 1px;border-right: none;border-bottom: none;border-left: none;border-top-style: solid;border-top-color: rgb(249, 191, 69);"><blockquote data-tool="mdnice 编辑器" style="margin-top: 0px;margin-bottom: 0px;padding-top: 1px;padding-bottom: 1px;padding-left: 5px;color: rgb(91, 91, 91);font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;letter-spacing: normal;text-align: left;text-wrap: wrap;border-top: none;border-right: none;border-bottom: none;background: rgba(158, 158, 158, 0.1);"><blockquote style="margin-top: 0px;margin-bottom: 0em;padding-top: 0px;padding-left: 0px;border-width: initial;border-style: none;border-color: initial;"><blockquote style="margin-top: 0px;margin-bottom: 0em;padding-top: 0px;padding-left: 0px;border-width: initial;border-style: none;border-color: initial;"><blockquote style="margin-top: 0px;margin-bottom: 0em;padding-top: 0px;padding-left: 0px;border-width: initial;border-style: none;border-color: initial;"><p style="margin: 10px;color: rgb(63, 63, 63);line-height: 1.5;font-size: 14px;">英文原文:&nbsp;<span style="color: rgb(136, 136, 136);letter-spacing: 0px;">https://hf.co/blog/overview-quantization-transformers</span></p><p style="margin: 10px;color: rgb(63, 63, 63);line-height: 1.5;font-size: 14px;">原文作者: Younes Belkada，Marc Sun，Ilyas Moutawwakil，Clémentine Fourrier，Félix Marty</p><p style="margin: 10px;color: rgb(63, 63, 63);line-height: 1.5;font-size: 14px;">译者: Matrix Yao (姚伟峰)，英特尔深度学习工程师，工作方向为 transformer-family 模型在各模态数据上的应用及大规模模型的训练推理</p><p style="margin: 10px;color: rgb(63, 63, 63);line-height: 1.5;font-size: 14px;">审校/排版: zhongdongy (阿东)</p></blockquote></blockquote></blockquote></blockquote><p style="display: none;"><mp-style-type data-value="3"></mp-style-type></p></div><p style="color: #858585; font-size: 13px;">本文分享自微信公众号 - Hugging Face（gh_504339124f0f）。<br>如有侵权，请联系 support@oschina.cn 删除。<br>本文参与「<a href="https://www.oschina.net/sharing-plan" target="_blank">OSC 源创计划</a>」，欢迎正在阅读的你也加入，一起分享。</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 16 Nov 2023 03:00:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/HuggingFace/blog/10142931</guid>
            <link>https://my.oschina.net/HuggingFace/blog/10142931</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[OpenAI 总裁 Greg Brockman 辞职]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">在&nbsp;<span style="background-color:#ffffff">OpenAI 宣布 CEO 兼联合创始人萨姆・阿尔特曼（Sam Alt</span>man<span style="background-color:#ffffff">）离职并退出公司董事会数小时后，OpenAI 总裁兼联合创始人格雷格・布罗克曼（</span>Greg<span style="background-color:#ffffff">&nbsp;</span>Brockman<span style="background-color:#ffffff">）</span>也<span style="background-color:#ffffff">在社交平台发文宣布离职。</span></span></p><p><img height="482" src="https://oscimg.oschina.net/oscnet/up-2ff8ed4b48e6c2c73a5fb9a87d3030b4b91.png" width="300" referrerpolicy="no-referrer"></p><p><span style="color:#000000"><span style="background-color:#ffffff">布罗克曼表示他向 OpenAI 团队发送了以下消息：</span></span></p><blockquote><p>大家好，</p><p>自从 8 年前在我的公寓里开始创业以来，我们一起建立的一切让我深感自豪。我们一起经历了 8 个艰难而又美好的时期，取得了如此巨大的成就，尽管有种种原因证明这本应是不可能的。</p><p>但从今天的新闻来看，我不干了</p><p>我真心祝愿你们一切顺利。我将一如既往地坚信创建安全 AGl、造福全人类的使命。</p></blockquote><p><strong>相关阅读：</strong></p><ul><li><a href="https://www.oschina.net/news/267006/openai-ceo-sam-altman-fired" target="_blank">OpenAI 董事会内讧，CEO 兼创始人 Sam Altman 被逐出公司</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Thu, 16 Nov 2023 02:51:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/267013/openai-greg-brockman-quit</guid>
            <link>https://www.oschina.net/news/267013/openai-greg-brockman-quit</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[OpenAI 董事会内讧，CEO 兼创始人 Sam Altman 被逐出公司]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>根据 OpenAI&nbsp;官网今日的<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopenai.com%2Fblog%2Fopenai-announces-leadership-transition" target="_blank">突发公告</a></u>，OpenAI 董事会宣布 Sam Altman 将辞去首席执行官一职，并离开公司董事会。</p><p><img src="https://static.oschina.net/uploads/space/2023/1118/094343_jFQ6_2720166.png" referrerpolicy="no-referrer"></p><p>OpenAI 表示，首席技术官 Mira Murati 将临时担任首席执行官，该任命立即生效。</p><p>公告写道，Sam Altman&nbsp;离职是在 OpenAI 公司董事会经过深思熟虑的审查程序之后做出的决策。他们表示，<strong>Sam&nbsp;Altman 在与董事会的沟通中未能始终保持坦诚的态度，妨碍了董事会履行职责的能力。董事会不再相信他有能力继续领导 OpenAI</strong>。</p><p>此外，Greg Brockman 也将卸任董事会主席一职，但他仍将留在 OpenAI。</p><p>Sam Altman 在社交平台<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftwitter.com%2Fsama%2Fstatus%2F1725631621511184771" target="_blank">确认</a></u>了这一消息，并表示自己很喜欢在 OpenAI 工作的时光。之后他会透露自己接下来的计划。</p><p><img height="1100" src="https://oscimg.oschina.net/oscnet/up-2df524ec069855367416e640876397304d9.png" width="1274" referrerpolicy="no-referrer"></p><p>Sam Altman 宣布离开 OpenAI 的消息后，Greg Brockman 随后也转发了这条推文，并<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftwitter.com%2Fgdb%2Fstatus%2F1725667410387378559" target="_blank">宣布</a></u>从 OpenAI 离职。</p><p><img height="1674" src="https://static.oschina.net/uploads/space/2023/1118/103001_guWs_2720166.png" width="1276" referrerpolicy="no-referrer"></p><hr><p><strong>OpenAI 董事会背景介绍</strong></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-d25562ede7c2c9cb8ad6b910dc676e921e6.png" referrerpolicy="no-referrer"></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-36af122dcd1cd3ff5d78eed6751de5fcbcb.png" referrerpolicy="no-referrer"></p><hr><p>下面是一些爆料：</p><blockquote><p>OpenAI 的高层将有大批离职，我预计 Altman 今晚会对此作出回应。据我所知，这起事件源于公司内部追求利润的一派和坚持非盈利原则的一派之间的「观念不合」。开发者大会上的一些问题也是导火索。</p><p>消息人士透露，在 Altman 的领导下，公司更倾向于追求盈利，并且开发步伐迅猛，这被一些人认为过于冒险。与此同时，坚持非盈利原则的一派则更注重安全和谨慎，双方因此产生了分歧。</p><p>Sam 阵营中的一位人士称这是一次「政变」，而另一位则认为这是正确的决策。 尽管这种说法似乎更有道理，但科技界充斥着形形色色的谣言，其中不乏一些荒诞不经的。显然，我们还将面临许多值得质疑的消息。</p><p>还有消息人士指出，这场分歧的主要双方是 Altman/Brockman 组合与首席科学家 Ilya Sutskever 和董事会成员 Helen Toner，后两者在这次事件中立场一致。</p><p><img height="538" src="https://static.oschina.net/uploads/space/2023/1118/101316_JdcD_2720166.png" width="1276" referrerpolicy="no-referrer"><br><br> via&nbsp;<u><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftwitter.com%2Fkaraswisher%2Fstatus%2F1725678074333635028" target="_blank">https://twitter.com/karaswisher/status/1725678074333635028</a></em></u></p></blockquote></div>
                                    ]]>
            </description>
            <pubDate>Thu, 16 Nov 2023 01:38:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/267006/openai-ceo-sam-altman-fired</guid>
            <link>https://www.oschina.net/news/267006/openai-ceo-sam-altman-fired</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[鲜衣怒马少年时｜GreptimeDB 开源一周年回顾]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h2>开源故事</h2><p>也许在进入软件行业的第一天，我们就已经与开源结缘。</p><p>很难想象没有开源的世界会是什么样子，非要举个例子的话，就好比菜谱不再公开，那所有人都只能自研，说不好连麻婆豆腐都需要远赴蜀地才能品上一品。正因为开源，我们得以共享珍贵的的食谱，所以也愿意将自研的食谱无私贡献出去。</p><p>作为一个现代的软件从业者，怎么能不在开源的世界里有些许经验呢？Greptime 三位创始人从职业早期就融入到了开源社区中，在受益的过程中也不断反哺开源，各自负责并维护了多个知名项目（如 SOFAJRaft, handlebars-rust, aviatorscript），有些项目本身的关注度和影响力都超过了 GreptimeDB。</p><p>在不断接触开源的过程中，一个有趣又大胆的想法在创始人庄晓丹心里如切如磋，如琢如磨：「打造一款世界级的基础软件」。他和另一位创始人冯家纯在蚂蚁集团实践 AIOps 智能运维时，因为市面并没有一款满足需求的超大规模时序数据平台而选择了自研，同时来自滴滴的另一位创始人孙宁也看到了时序数据存储、分析对于车联网的重要价值。所谓念念不忘，必有回想，三人一拍即合，这个「世界级的基础软件」的团队雏形就这么诞生了——打造一款面向未来且更贴近市场需求的时序数据库。</p><p>这种对产品品质高度追求的热切和渴望，不仅来自于创始人本身，也来自于整个 Greptime 团队。这里的每一个小伙伴都身怀绝技，有人放弃高薪埋头苦干，也有人从技术转向市场，更有人身兼技术、市场和运营多职⋯⋯底层的基础软件本身就很难做，加上开源更是 buff 叠满，没点情怀的人，真的不敢做开源。</p><p>正是这群少而精专的人，成就了现在的 Greptime（格睿科技），基于开源的 GreptimeDB 不断衍生和迭代出了商业化版本的时序数据库 GreptimeCloud 和可观测的 AI 工具 GreptimeAI 两款产品。</p><h3>我们还做了一个视频，和 GreptimeDB 回顾一周年的成长历程🎥（感兴趣的小伙伴请自行寻找视频 🔍）</h3><h2>开源数据</h2><p><img src="https://oscimg.oschina.net/oscnet/up-f88e430b4ec657a770973ec32c4d8a8bcab.png" alt="" referrerpolicy="no-referrer"></p><h2>开源历程（版本发布）</h2><p>GreptimeDB 自去年宣布开源后历经 v0.1 到 v0.4，每一个版本的发布都意味着 GreptimeDB 又一次的成长和完善。从框架构建到分布式能力的实现，再到新引擎 Mito 的重大革新，GreptimeDB 一直在路上：</p><p><img src="https://oscimg.oschina.net/oscnet/up-44a9791c096b6701e22a6ada7096cbe0d0e.png" alt="" referrerpolicy="no-referrer"></p><ul><li><p>2023.3.8 GreptimeDB v0.1 聚焦单机功能</p></li><li><p>2023.4.19 GreptimeDB v0.2 单机功能强化，云分布式开启</p><ul><li>完善单机功能；</li><li>PromQL 兼容性提升至 50%；</li><li>提出 Procedure 框架；</li><li>为 Cloud 和，分布式铺垫基础。</li></ul></li><li><p>2023.6.7 GreptimeDB v0.3 分布式初版：查询性能优化和稳定性增强</p><ul><li>分布式性能优化；</li><li>查询能力提升； -稳定性增强。</li></ul></li><li><p>2023.10.10 GreptimeDB v0.4 写入查询能力提升，查询性能提升 5~20 倍</p><ul><li>新版存储引擎 Mito2；</li><li>稳定性优化；</li><li>体验优化；</li><li>PromQL 兼容性提升至 70% 以上。</li></ul></li></ul><p>GreptimeDB 还将继续稳定更新版本，和社区的大家一起不断向前。</p><p>不仅有 GreptimeDB，我们还有 GreptimeCloud 和 GreptimeAI 正在公测，欢迎到官网体验并跟我们聊聊您的使用感受。下面具体明晰 Greptime 系列产品，请看 👀</p><blockquote><p>GreptimeCloud 基于开源的 GreptimeDB，为用户提供全托管的 DBaaS，能够与可观测性、物联网等领域结合的应用产品结合。利用云提供软件和服务，可以达到快速的自助开通和交付，标准化的运维支持，和更好的资源弹性。</p></blockquote><blockquote><p>GreptimeAI 是为 LLM 应用量身定制的可观测性解决方案，开发者可以通过该方案全面、深入地了解应用的成本、性能、流量和安全情况，在保证低成本和高性能的同时提供高效可靠的分析能力，同时保留了时序数据库的灵活性。</p></blockquote><h2>开源意义</h2><p>「又是做数据库的！」这是我们在技术展会听到的最多的一句话。做数据库的厂商确实很多，但也说明这个缺口还没有被补足，大家的产品在性能方面都各有欠缺，那开源的价值也就出现了：巨大的需求激生了市面上层出不穷的解决方案，每一家厂商都力图在性能赛道上超越对方。</p><p>开源对于 GreptimeDB 来说，意味着与世界各地志同道合的人共同探索未知，拼凑出技术的全貌。它不仅让我们的产品在广泛的用户和开发者中得到锤炼，而且构建了一个共同维护和持续改进的技术社区。在这里，每个人的声音都能被听见，每行代码都汇聚着智慧的火花。这正是开源精神闪耀的时刻，因为它不单是关于代码的开放，更是一种思维的开放。</p><p>我们做开源，也做商业化，回顾这一年，我们的开源产品 GreptimeDB 和商业化产品 GreptimeCloud 始终是共同进步的，都凝聚了社区的智慧和努力。所以在这个特别的日子，我们不单是在庆祝一个时间节点，更是在赞颂一种开放、合作、共赢的开源精神。</p><h2>开源社区</h2><h3>Greptime social 版</h3><p>开源一年的时间里，我们走进一个个技术聚会去寻找志同道合的伙伴：在全球 AI 开发者先锋大会上研讨前沿；在庆祝 SOFA 五周年时分享开源之路的感悟；在 Qcon 大会中探讨软件的未来；在 WOT 全球技术创新大会里展望明天；在 Rust 中国大会上讨论 Rust 的可能性；在 COSCon'23 和开源人共话开源意义；在 KubeCon + CloudNativeCon 和来自全球的业内人士探讨代码（点击会议名称即可跳转相关的参会详情哦 🎉）⋯⋯是代码汇聚了我们，也是开源连接了我们，见证了我们的成长。</p><p><img src="https://oscimg.oschina.net/oscnet/up-be7d81d1c9c46c50bc46397ef9e37474317.png" alt="" referrerpolicy="no-referrer"></p><h3>Greptime 主办方版</h3><p>除了融入业界，我们还主办了以自己社区和产品为主的中/英文线上 Meetup，联合 EMQX/KubeBlocks/Pika 举办了线下 Meetup 赢得了业界同行的共鸣与支持，加深了我们与社区的联系（Meetup 回顾请看 Greptime 视频号）。</p><p><img src="https://oscimg.oschina.net/oscnet/up-f8177361887abb20aafb27ca49cffd0b074.png" alt="" referrerpolicy="no-referrer"></p><h3>Greptime 拓展版</h3><p>在 GreptimeDB 披荆斩棘的过程中，源源不断地加入了近 50 个 Contributors，其中还晋升了 2 个 Committers ——来自英国的 Eugene 和日本的 Niwaka 出于对 TSDB 的关注和热爱 🫶 源源不断地为 GreptimeDB 贡献了极有价值的 PR，让我们的框架不断完善，功能也将在未来趋于完备。</p><p>受到地理优势的助力，我们的 Contributors 主要来源于中国，也有来自英国、新西兰和荷兰等其他国家的贡献者。同国家的技术朋友对我们的支持和认可令人可亲，国外友人的支持也让我们对自己的产品和正在做的事充满信心。除此之外，印度和日本的 Contributor 也让我们看到了时序数据库之于全球基础软件的意义。更荣幸的是我们收获了非洲尼日利亚技术朋友的关注和代码支持，并在这个过程中交流愉快。</p><p>Greptime 始终欢迎全球对 Rust、TSDB 和 Infra 感兴趣的技术客了解我们、加入我们，并和我们携手共建美好开源社区，和好玩的人一起做有意思的事～</p><p>前路漫漫，我们不会止步，Greptime 将继续参与行业会议，举办更多形式的交流活动，与你一同分享我们对产品的思考，坚持我们对技术的追求，锻铸更好的产品。在这条不断开拓的路上，我们诚邀你携手同行，与 GreptimeDB 共同成长。</p><h1>Greptime 社媒全新板块和大家 say hi 👋</h1><p><strong>【遇见格睿 💜】</strong> 曾有参与「开源之夏」&amp; Greptime 的同学成功完成了项目试炼，最终选择加入 Greptime 继续实习，也有很多关注 Greptime 的人在大大小小的会议中和我们快乐面基，更有来自大洋彼岸和同在华夏的朋友们持续关注 Greptime 的每一次进步······大家都是见证了 Greptime 诞生和成长的挚友，在如此多开源和初创的社区里面刚好相遇相识，在科技交汇的宇宙里找到共鸣的瞬间，嗯，怎么不算有缘呢？</p><p>或许你也听多了 Greptime 成长史，所以不妨来点新鲜的👂你是如何得知 Greptime 的呢？你为什么会关注我们呢？你有参与到 Greptime 的社区贡献中来吗？或者你对 Greptime 有什么「惊鸿一瞥」的记忆吗？</p><p>现在我们诚挚地邀请你聊聊「你与 Greptime」的故事，我们将会把你的故事整理成文稿，分享给更多的人（当然你要是自己动笔敍写就更棒了👍）。欢迎添加小助手微信（greptime，懒得手动搜索的朋友请滑到文末扫码添加）讲出你的故事，审核通过即可获得我们的限量版 Greptime 文创大礼包（悄悄说是真的限量版哦🎁）。</p><p>Greptime 开源一周年之际，我们想听听你的声音，诚邀你讲述「遇见格睿」的独家故事。</p><h2>开源未来</h2><p>GreptimeDB 将继续忠实开源的初心，真诚地欢迎全球的技术人员和开源朋友一起合作。我们深知，开源不仅仅是一个代码仓库的开放，更是一个技术、想法和创意交流的平台，欢迎任何一个愿意给 GreptimeDB 提意见和贡献代码的人，而我们也将在以下几方面继续努力：</p><ul><li><p>继续积极推进 GreptimeDB 的核心功能完善，与社区一起完成更多功能的孵化和落地，增强系统的功能和稳定性，为用户提供更加完备的数据库工具；</p></li><li><p>和社区的大家真诚合作，增加交流，鼓励更多的开发者参与到 GreptimeDB 的构建中来；</p></li><li><p>着重构建一个与 GreptimeDB 相关的工具、插件和服务的生态，提供更丰富的整合方案和应用场景，帮助开发者和企业更容易地将 GreptimeDB 应用于实际的业务中；</p></li><li><p>为了更好地反映社区意见和需求，我们将逐步引入开放治理模型，与更多的开发者和社区参与者面对面交流；</p></li></ul><p>开源的道路是一条充满挑战与机遇的旅程，我们相信并希望通过持续的努力和不懈的追求与全球的开源同伴们共创开源软件的美好未来。</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 15 Nov 2023 10:56:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/6839317/blog/10143939</guid>
            <link>https://my.oschina.net/u/6839317/blog/10143939</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[CLion Nova 强势登陆 C 和 C++ 开发领域，使用 ReSharper C++/Rider C++ 语言引擎！]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="rich_media_content js_underline_content
                       autoTypeSetting24psection
            " id="js_content"><p style="text-align: center;" data-mpa-powered-by="yiban.io"><img class="rich_pages wxw-img" data-galleryid="" data-ratio="0.1836734693877551" src="https://oscimg.oschina.net/oscnet/4ee8e558-caa4-423e-981b-c76935ea8387.gif" data-type="gif" data-w="637" style="" referrerpolicy="no-referrer"></p><section style="font-size: 16px;color: rgb(62, 62, 62);line-height: 1.6;letter-spacing: 0px;font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;"><section style="font-size: 16px;"><section style="margin-right: 0%;margin-left: 0%;text-align: left;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: top;padding-right: 10px;padding-left: 10px;background-color: rgb(12, 176, 199);"><section style="display: inline-block;vertical-align: middle;"><section style="display: inline-block;vertical-align: middle;color: rgb(215, 251, 255);padding-right: 2px;font-size: 19px;"><p><strong>摘要</strong></p></section></section><section style="display: inline-block;vertical-align: middle;width: 0.8em;height: 0.8em;border-top: 0.2em solid rgb(215, 251, 255);border-right: 0.2em solid rgb(215, 251, 255);transform: rotate(45deg);"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section></section></section><p style="font-size: inherit;color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;">最近，我们宣布推出 CLion 的一个免费早期预览版，<strong>它使用 ReSharper C++/Rider C++ 语言引擎而不是 CLion 的「旧版」引擎</strong>。预览版可以通过我们的专属 <a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.jetbrains.com.cn%2Ftoolbox-app%2F" textvalue="Toolbox App" linktype="text" imgurl="" tab="outerlink" data-linktype="2">Toolbox App</a> 源获取。2024 年，根据反馈结果，CLion Nova 将合并到 CLion 中。在此之前，预览版可免费使用，并与通常的 CLion (Classic) 并行安装。</p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" data-ratio="0.562962962962963" data-s="300,640" src="https://oscimg.oschina.net/oscnet/fccf280f-4ee1-407c-8ece-d282b99a783b.png" data-type="png" data-w="1080" style="" referrerpolicy="no-referrer"></p><p><span style="font-size: inherit;color: inherit;line-height: inherit;"><br></span></p><p><span style="font-size: inherit;color: inherit;line-height: inherit;"><br></span></p><section style="font-size: 16px;"><section style="margin-right: 0%;margin-left: 0%;text-align: left;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: top;padding-right: 10px;padding-left: 10px;background-color: rgb(12, 176, 199);"><section style="display: inline-block;vertical-align: middle;"><section style="display: inline-block;vertical-align: middle;color: rgb(215, 251, 255);padding-right: 2px;font-size: 19px;"><p><strong>史前时期</strong></p></section></section><section style="display: inline-block;vertical-align: middle;width: 0.8em;height: 0.8em;border-top: 0.2em solid rgb(215, 251, 255);border-right: 0.2em solid rgb(215, 251, 255);transform: rotate(45deg);"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section></section></section><p style="font-size: inherit;color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;">JetBrains 的第一个 C++ 引擎为 AppCode 而设计，这是我们面向 iOS 和 macOS 开发者提供的 IDE。它为 IntelliJ 平台的一部分，最初使用 Java 编写，后来也使用 Kotlin 编写。引擎的方式和架构可以很好地服务于基于 IntelliJ 的 IDE 中的许多语言，然而，这种设计并不是特别适合 C++ 语言。</p><p style="font-size: inherit;color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;">为了更快地与 C++ 的发展保持一致，并分离引擎和 IDE 进程，基于 clangd 的引擎后来被添加到 CLion 中。这个引擎基于我们的 clangd 自定义分支，可以检测警告和错误并在编辑器中显示，建议快速修复，以及执行高亮显示、补全和特定导航操作。它也用于<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.jetbrains.com%2Fclion%2F2023%2F11%2Fstriving-for-better-cpp-code-part-i-data-flow-analysis-basics%2F" style="font-size: inherit;line-height: inherit;color: rgb(30, 107, 184);" data-linktype="2" target="_blank">数据流分析</a>和 MISRA 检查等。同时，CLion 的「旧版」引擎负责其他代码洞察功能，例如重构。我们的 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.jetbrains.com.cn%2Fhelp%2Fclion%2F2023.3%2Fc-support.html" target="_blank" rel="noopener" style="font-size: inherit;line-height: inherit;color: rgb(30, 107, 184);" data-linktype="2">CLion 文档</a>提供了详细的「职责列表」。</p><p style="font-size: inherit;color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;">clangd 有很多优势，但对于项目级重构和操作，它的作用不是很大。我们设计了一个基于 clangd 的索引器原型，甚至在它之上实现了一个实验性 <em style="font-size: inherit;color: inherit;line-height: inherit;">Find Usages</em>（查找用法），您可以<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.jetbrains.com.cn%2Fhelp%2Fclion%2F2023.3%2Ffind-highlight-usages.html%23usages-clangdindexer" target="_blank" rel="noopener" style="font-size: inherit;line-height: inherit;color: rgb(30, 107, 184);" data-linktype="2">在 CLion 中启用和评估该功能</a>。</p><p style="font-size: inherit;color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;">JetBrains 为 C++ 开发的另一个替代方案是 ReSharper C++ 和 Rider（用于 C++ 游戏开发）中使用的语言引擎。还有一种通信协议，使 Rider 等基于 IntelliJ 的 IDE 能够与充当语言引擎的独立后端进程进行通信。我们现在也已将此协议和原始引擎适配到 CLion！</p><p><span style="font-size: inherit;color: inherit;line-height: inherit;"><br></span></p><section style="font-size: 16px;"><section style="margin-right: 0%;margin-left: 0%;text-align: left;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: top;padding-right: 10px;padding-left: 10px;background-color: rgb(12, 176, 199);"><section style="display: inline-block;vertical-align: middle;"><section style="display: inline-block;vertical-align: middle;color: rgb(215, 251, 255);padding-right: 2px;font-size: 19px;"><p><strong>目标</strong></p></section></section><section style="display: inline-block;vertical-align: middle;width: 0.8em;height: 0.8em;border-top: 0.2em solid rgb(215, 251, 255);border-right: 0.2em solid rgb(215, 251, 255);transform: rotate(45deg);"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section></section></section><p style="font-size: inherit;color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;">在这个新的实验性解决方案中，我们重点关注 IDE 的响应性、准确度和性能。我们有两个主要目标：</p><ul style="font-size: inherit;color: inherit;line-height: inherit;padding-left: 32px;" class="list-paddingleft-1"><li style="font-size: inherit;color: inherit;line-height: inherit;margin-bottom: 0.5em;"><p>解决 CLion 因使用「旧版」引擎而导致的长期存在的<strong style="font-size: inherit;color: inherit;line-height: inherit;">性能</strong>和<strong style="font-size: inherit;color: inherit;line-height: inherit;">质量</strong>问题。</p></li><li style="font-size: inherit;color: inherit;line-height: inherit;margin-bottom: 0.5em;"><p><span style="font-size: inherit;color: inherit;line-height: inherit;">统一我们所有 C++ 工具的用户体验，这些工具包括 CLion、Rider 和 ReSharper C++。</span></p></li></ul><figure style="font-size: inherit;color: inherit;line-height: inherit;"><img class="rich_pages wxw-img" data-ratio="0.704331450094162" src="https://oscimg.oschina.net/oscnet/92e5374c-f4d1-4774-8f6c-7296bf6a1db8.png" data-type="png" data-w="1062" style="font-size: inherit;color: inherit;line-height: inherit;margin-right: auto;margin-left: auto;" title="CLion Nova 介绍" referrerpolicy="no-referrer"></figure><p style="font-size: inherit;color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;">我们将新的实验性预览版命名为 <strong style="font-size: inherit;color: inherit;line-height: inherit;">CLion Nova</strong>，而当前版本的 CLion 为 <strong style="font-size: inherit;color: inherit;line-height: inherit;">CLion Classic</strong>。未来，我们计划将 CLion Nova 合并到 CLion Classic 中。<strong>设想中没有新产品。</strong></p><p><span style="font-size: inherit;color: inherit;line-height: inherit;"><br></span></p><section style="font-size: 16px;"><section style="margin-right: 0%;margin-left: 0%;text-align: left;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: top;padding-right: 10px;padding-left: 10px;background-color: rgb(12, 176, 199);"><section style="display: inline-block;vertical-align: middle;"><section style="display: inline-block;vertical-align: middle;color: rgb(215, 251, 255);padding-right: 2px;font-size: 19px;"><p><strong>优势和增强</strong></p></section></section><section style="display: inline-block;vertical-align: middle;width: 0.8em;height: 0.8em;border-top: 0.2em solid rgb(215, 251, 255);border-right: 0.2em solid rgb(215, 251, 255);transform: rotate(45deg);"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section></section></section><p style="font-size: inherit;color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;">CLion Nova 仍然使用两种 C++ 语言引擎：<strong>一种是基于 clangd 的引擎，另一种是 ReSharper C++/Rider 使用的引擎。</strong>CLion Classic 的大部分功能在 CLion Nova 中应该完全相同。</p><p style="font-size: inherit;color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;">CLion Nova 在性能方面的显著优势：</p><ul style="font-size: inherit;color: inherit;line-height: inherit;padding-left: 32px;" class="list-paddingleft-1"><li style="font-size: inherit;color: inherit;line-height: inherit;margin-bottom: 0.5em;"><p><span style="font-size: inherit;color: inherit;line-height: inherit;">更快的高亮显示速度，特别是对于增量代码更新</span></p></li><li style="font-size: inherit;color: inherit;line-height: inherit;margin-bottom: 0.5em;"><p><span style="font-size: inherit;color: inherit;line-height: inherit;">响应更快的 UI</span></p></li><li style="font-size: inherit;color: inherit;line-height: inherit;margin-bottom: 0.5em;"><p>更快的 <em style="font-size: inherit;color: inherit;line-height: inherit;">Find Usages</em>（查找用法）</p></li><li style="font-size: inherit;color: inherit;line-height: inherit;margin-bottom: 0.5em;"><p><span style="font-size: inherit;color: inherit;line-height: inherit;">重构中的冻结和挂起显著减少</span></p></li><li style="font-size: inherit;color: inherit;line-height: inherit;margin-bottom: 0.5em;"><p><span style="font-size: inherit;color: inherit;line-height: inherit;">更快的测试索引</span></p></li></ul><p style="font-size: inherit;color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;">这种统一还为 CLion Nova 带来了 CLion Classic 功能集中不存在的新功能：</p><ul style="font-size: inherit;color: inherit;line-height: inherit;padding-left: 32px;" class="list-paddingleft-1"><li style="font-size: inherit;color: inherit;line-height: inherit;margin-bottom: 0.5em;"><p>新的重构，例如 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.jetbrains.com.cn%2Fhelp%2Fresharper%2FRefactorings_for_CPP.html%23intro_field" target="_blank" rel="noopener" style="font-size: inherit;line-height: inherit;color: rgb(30, 107, 184);" data-linktype="2">Introduce Field</a>（引入字段）、<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.jetbrains.com.cn%2Fhelp%2Fresharper%2FRefactorings_for_CPP.html%23namespace_alias" target="_blank" rel="noopener" style="font-size: inherit;line-height: inherit;color: rgb(30, 107, 184);" data-linktype="2">Introduce Namespace Alias</a>（引入命名空间别名）、<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.jetbrains.com.cn%2Fhelp%2Fresharper%2FRefactorings_for_CPP.html%23using_enum" target="_blank" rel="noopener" style="font-size: inherit;line-height: inherit;color: rgb(30, 107, 184);" data-linktype="2">Introduce using Enumeration</a>（引入 using 枚举），以及 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.jetbrains.com.cn%2Fhelp%2Fresharper%2FRefactorings_for_CPP.html%23convert_to_scoped" target="_blank" rel="noopener" style="font-size: inherit;line-height: inherit;color: rgb(30, 107, 184);" data-linktype="2">Convert to Scoped Enumeration</a>（转换为作用域枚举）。</p></li><li style="font-size: inherit;color: inherit;line-height: inherit;margin-bottom: 0.5em;"><p>新的检查、快速修复和意图，例如冗余限定符、将 <code style="font-size: inherit;line-height: inherit;padding: 2px 4px;border-radius: 4px;margin-right: 2px;margin-left: 2px;color: rgb(233, 105, 0);background: rgb(248, 248, 248);"><span style="color: rgb(0, 0, 0);">auto</span></code> 替换为显式类型声明，以及 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.jetbrains.com.cn%2Fhelp%2Fresharper%2FCode_Style_Assistance_in_CPP.html%23sort_includes" target="_blank" rel="noopener" style="font-size: inherit;line-height: inherit;" data-linktype="2"><code style="font-size: inherit;line-height: inherit;padding: 2px 4px;border-radius: 4px;margin-right: 2px;margin-left: 2px;color: rgb(233, 105, 0);background: rgb(248, 248, 248);"><span style="font-size: inherit;line-height: inherit;color: rgb(0, 0, 0);">#include</span></code> 指令的排序</a>。</p></li><li style="font-size: inherit;color: inherit;line-height: inherit;margin-bottom: 0.5em;"><p>新的代码提示，例如<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.jetbrains.com.cn%2Fhelp%2Fresharper%2FSettings_Inlay_Hints_CPP_Other.html%23preprocessor-directive" target="_blank" rel="noopener" style="font-size: inherit;line-height: inherit;color: rgb(30, 107, 184);" data-linktype="2">预处理程序指令提示</a>和 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.jetbrains.com.cn%2Fhelp%2Fresharper%2FInline_Parameter_Name_Hints.html%23push-to-hint-mode" target="_blank" rel="noopener" style="font-size: inherit;line-height: inherit;color: rgb(30, 107, 184);" data-linktype="2">Push-to-Hint 模式</a>。</p></li></ul><figure style="font-size: inherit;color: inherit;line-height: inherit;"><img class="rich_pages wxw-img" data-ratio="0.3648148148148148" src="https://oscimg.oschina.net/oscnet/d318a7be-02c5-4e1a-8569-3628ad96f760.png" data-type="png" data-w="1080" style="font-size: inherit;color: inherit;line-height: inherit;display: block;margin-right: auto;margin-left: auto;" title="include 排序" referrerpolicy="no-referrer"><figcaption style="line-height: inherit;margin-top: 10px;text-align: center;color: rgb(153, 153, 153);font-size: 0.7em;">
     include 排序 
   </figcaption></figure><p><span style="font-size: inherit;color: inherit;line-height: inherit;"><br></span></p><p><span style="font-size: inherit;color: inherit;line-height: inherit;"><br></span></p><section style="font-size: 16px;"><section style="margin-right: 0%;margin-left: 0%;text-align: left;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: top;padding-right: 10px;padding-left: 10px;background-color: rgb(12, 176, 199);"><section style="display: inline-block;vertical-align: middle;"><section style="display: inline-block;vertical-align: middle;color: rgb(215, 251, 255);padding-right: 2px;font-size: 19px;"><p><strong>显著差异</strong></p></section></section><section style="display: inline-block;vertical-align: middle;width: 0.8em;height: 0.8em;border-top: 0.2em solid rgb(215, 251, 255);border-right: 0.2em solid rgb(215, 251, 255);transform: rotate(45deg);"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section></section></section><p style="font-size: inherit;color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;">与 CLion Classic 不同，CLion Nova 不使用 <strong style="font-size: inherit;color: inherit;line-height: inherit;">clangd</strong> 来实现代码补全或高亮显示等核心 IDE 功能。不过，JetBrains 的 clangd 分支仍然与新引擎一起运行，用于各种任务（ClangFormat、Clang-Tidy、MISRA 检查、数据流分析等）。</p><p style="font-size: inherit;color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;">CLion Classic 用户开始使用 CLion Nova 时将获得的新体验：</p><ul style="font-size: inherit;color: inherit;line-height: inherit;padding-left: 32px;" class="list-paddingleft-1"><li style="font-size: inherit;color: inherit;line-height: inherit;margin-bottom: 0.5em;"><p><span style="font-size: inherit;color: inherit;line-height: inherit;">当用户输入时，IDE 的一些反应方式有所改变。</span></p></li><li style="font-size: inherit;color: inherit;line-height: inherit;margin-bottom: 0.5em;"><p><span style="font-size: inherit;color: inherit;line-height: inherit;">与代码洞察功能相关的某些 UI 元素和设置可能看起来不一样，或位于不常用的位置。</span></p></li><li style="font-size: inherit;color: inherit;line-height: inherit;margin-bottom: 0.5em;"><p><span style="font-size: inherit;color: inherit;line-height: inherit;">某些与代码相关的设置在 CLion Nova 中可能具有不同的默认值。首次启动时，CLion Nova 将从 CLion Classic 迁移一些项目特定和应用程序特定的设置，但不是全部。</span></p></li><li style="font-size: inherit;color: inherit;line-height: inherit;margin-bottom: 0.5em;"><p><span style="font-size: inherit;color: inherit;line-height: inherit;">在不同语言配置（例如， 调试/发布）之间切换可能需要更多时间让代码洞察引擎跟上进度。也没有选项用于切换每个文件的解析上下文。</span></p></li><li style="font-size: inherit;color: inherit;line-height: inherit;margin-bottom: 0.5em;"><p><span style="font-size: inherit;color: inherit;line-height: inherit;">ReSharper C++ 仅适用于 Windows，而 Rider 可跨平台。不过，ReSharper C++/Rider 引擎可能无法像对 Windows 那样无缝支持非 Windows 环境。如果您遇到这样的情况，请向我们报告。</span></p></li></ul><figure style="font-size: inherit;color: inherit;line-height: inherit;"><img class="rich_pages wxw-img" data-ratio="0.762962962962963" src="https://oscimg.oschina.net/oscnet/2b2c29f3-24fb-470d-9e9c-e38b20669042.png" data-type="png" data-w="1080" style="font-size: inherit;color: inherit;line-height: inherit;margin-right: auto;margin-left: auto;" title="类型转换提示设置" referrerpolicy="no-referrer"><figcaption style="line-height: inherit;margin-top: 10px;text-align: center;color: rgb(153, 153, 153);font-size: 0.7em;">
     类型转换提示设置 
   </figcaption></figure><p style="font-size: inherit;color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;">当前缺少的功能的列表：</p><ul style="font-size: inherit;color: inherit;line-height: inherit;padding-left: 32px;" class="list-paddingleft-1"><li style="font-size: inherit;color: inherit;line-height: inherit;margin-bottom: 0.5em;"><p><strong style="font-size: inherit;color: inherit;line-height: inherit;">工具链</strong>：在 CLion 中，可以通过多个选项设置<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.jetbrains.com.cn%2Fhelp%2Fclion%2F2023.3%2Fremote-development.html" target="_blank" rel="noopener" style="font-size: inherit;line-height: inherit;color: rgb(30, 107, 184);" data-linktype="2">远程工作</a>。CLion Nova 支持使用本地源进行远程工作，但使用瘦客户端（Gateway）的远程工作尚不可用。</p></li><li style="font-size: inherit;color: inherit;line-height: inherit;margin-bottom: 0.5em;"><p><strong style="font-size: inherit;color: inherit;line-height: inherit;">语言</strong>：Objective-C 语言、CUDA（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fyoutrack.jetbrains.com%2Fissue%2FRSCPP-613" target="_blank" rel="noopener" style="font-size: inherit;line-height: inherit;color: rgb(30, 107, 184);" data-linktype="2">RSCPP-613</a>、<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fyoutrack.jetbrains.com%2Fissue%2FCPP-26144" target="_blank" rel="noopener" style="font-size: inherit;line-height: inherit;color: rgb(30, 107, 184);" data-linktype="2">CPP-26144</a>）和某些针对特定供应商的编译器扩展程序还不受支持。</p></li><li style="font-size: inherit;color: inherit;line-height: inherit;margin-bottom: 0.5em;"><p><em style="font-size: inherit;color: inherit;line-height: inherit;">Simplify statement</em>（简化语句）等意图和快速修复目前还不受支持 (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fyoutrack.jetbrains.com%2Fissue%2FCPP-35879" target="_blank" rel="noopener" style="font-size: inherit;line-height: inherit;color: rgb(30, 107, 184);" data-linktype="2">CPP-35879</a>)。</p></li><li style="font-size: inherit;color: inherit;line-height: inherit;margin-bottom: 0.5em;"><p>一些不太热门的重构也未加入。我们计划以后重新引入 <em style="font-size: inherit;color: inherit;line-height: inherit;">Move</em>（移动）(<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fyoutrack.jetbrains.com%2Fissue%2FCPP-35867" target="_blank" rel="noopener" style="font-size: inherit;line-height: inherit;color: rgb(30, 107, 184);" data-linktype="2">CPP-35867</a>) 和 <em style="font-size: inherit;color: inherit;line-height: inherit;">Inline Parameter</em>（内联形参）重构 (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fyoutrack.jetbrains.com%2Fissue%2FCPP-35868" target="_blank" rel="noopener" style="font-size: inherit;line-height: inherit;color: rgb(30, 107, 184);" data-linktype="2">CPP-35868</a>)。</p></li><li style="font-size: inherit;color: inherit;line-height: inherit;margin-bottom: 0.5em;"><p><span style="font-size: inherit;color: inherit;line-height: inherit;">JetBrains 的 AI Assistant 尚不适用于 CLion Nova。</span></p></li></ul><p><span style="font-size: inherit;color: inherit;line-height: inherit;"><br></span></p><p><span style="font-size: inherit;color: inherit;line-height: inherit;"><br></span></p><section style="font-size: 16px;"><section style="margin-right: 0%;margin-left: 0%;text-align: left;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: top;padding-right: 10px;padding-left: 10px;background-color: rgb(12, 176, 199);"><section style="display: inline-block;vertical-align: middle;"><section style="display: inline-block;vertical-align: middle;color: rgb(215, 251, 255);padding-right: 2px;font-size: 19px;"><p><strong>如何安装 CLion Nova</strong></p></section></section><section style="display: inline-block;vertical-align: middle;width: 0.8em;height: 0.8em;border-top: 0.2em solid rgb(215, 251, 255);border-right: 0.2em solid rgb(215, 251, 255);transform: rotate(45deg);"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section></section></section><p style="font-size: inherit;color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;">CLion Nova 是免费的早期预览版，只能通过 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.jetbrains.com.cn%2Ftoolbox-app%2F" target="_blank" rel="noopener" style="font-size: inherit;line-height: inherit;color: rgb(30, 107, 184);" data-linktype="2">Toolbox App</a> 获取：</p><figure style="font-size: inherit;color: inherit;line-height: inherit;"><img class="rich_pages wxw-img" data-ratio="1.0327868852459017" src="https://oscimg.oschina.net/oscnet/65c5f047-8c38-49bd-8580-0957ee2b9c39.png" data-type="png" data-w="854" style="font-size: inherit;color: inherit;line-height: inherit;display: block;margin-right: auto;margin-left: auto;" title="Toolbox App" referrerpolicy="no-referrer"></figure><p style="font-size: inherit;color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;">CLion Nova 是抢先体验预览版，因此需要登录，但您可以免费使用，直到 CLion Nova 合并到 CLion 中。我们将定期通过 Toolbox App 发布 CLion Nova 更新。</p><p style="font-size: inherit;color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;"><strong>与 CLion Classic 相比，CLion Nova 具有响应更快的 UI、更好的整体 IDE 性能和更高的功能质量，特别是 C++ 代码重构。</strong>立即试用，并告诉我们您的想法！</p><p><span style="font-size: inherit;color: inherit;line-height: inherit;"><br></span></p><section style="font-size: 16px;"><section style="margin-right: 0%;margin-left: 0%;text-align: left;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: top;padding-right: 10px;padding-left: 10px;background-color: rgb(12, 176, 199);"><section style="display: inline-block;vertical-align: middle;"><section style="display: inline-block;vertical-align: middle;color: rgb(215, 251, 255);padding-right: 2px;font-size: 19px;"><p><strong>分享您的反馈</strong></p></section></section><section style="display: inline-block;vertical-align: middle;width: 0.8em;height: 0.8em;border-top: 0.2em solid rgb(215, 251, 255);border-right: 0.2em solid rgb(215, 251, 255);transform: rotate(45deg);"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section></section></section><p style="font-size: inherit;color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;">CLion Nova 标志着一个巨大变化，需要在多种环境中接受细致的测试。因此，我们需要您的帮助！鉴于您有多种环境和用例，我们希望您测试 CLion Nova 并与我们分享您的体验。</p><p style="font-size: inherit;color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;">我们特别感兴趣的是您对以下问题的想法：</p><ul style="font-size: inherit;color: inherit;line-height: inherit;padding-left: 32px;" class="list-paddingleft-1"><li style="font-size: inherit;color: inherit;line-height: inherit;margin-bottom: 0.5em;"><p><span style="font-size: inherit;color: inherit;line-height: inherit;">与 CLion Classic 相比，什么在 CLion Nova 中对您的项目效果更好？</span></p></li><li style="font-size: inherit;color: inherit;line-height: inherit;margin-bottom: 0.5em;"><p><span style="font-size: inherit;color: inherit;line-height: inherit;">什么中断了您的工作流并阻止您在 CLion Nova 中使用 IDE？这些中断是 CLion Nova 特有的，还是 CLion Classic 中也存在？</span></p></li></ul><p style="font-size: inherit;color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;">使用 CLion Nova 一段时间后，我们会请求您提交反馈表。希望您能抽出时间填写并提交反馈表！</p><figure style="font-size: inherit;color: inherit;line-height: inherit;"><img class="rich_pages wxw-img" data-ratio="0.6601851851851852" src="https://oscimg.oschina.net/oscnet/0128aea9-7303-4ade-9eb7-435b1e2707fc.png" data-type="png" data-w="1080" style="font-size: inherit;color: inherit;line-height: inherit;display: block;margin-right: auto;margin-left: auto;" title="反馈" referrerpolicy="no-referrer"></figure><p style="font-size: inherit;color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;">当然，我们的<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fyoutrack.jetbrains.com%2Fissues%2FCPP" target="_blank" rel="noopener" style="font-size: inherit;line-height: inherit;color: rgb(30, 107, 184);" data-linktype="2">问题跟踪器</a>也可以接收反馈，只是请注明您的问题与 CLion Nova 而不是 CLion Classic 有关。</p><section style="font-size: 16px;"><a title="https://www.jetbrains.com.cn/toolbox-app/" formlinkparm="[{&quot;href&quot;:&quot;https://www.jetbrains.com.cn/toolbox-app/&quot;}]" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.jetbrains.com.cn%2Ftoolbox-app%2F" target="_blank" rel="noopener noreferrer" powered-by="xiumi.us" data-linktype="2"><section style="margin-top: 0.5em;margin-bottom: 0.5em;text-align: center;"><section style="display: inline-block;border-radius: 5px;padding-right: 0.75em;padding-left: 0.75em;border-width: 1px;border-style: solid;border-color: rgba(0, 0, 0, 0.2);background-color: rgb(247, 247, 247);color: rgb(69, 69, 69);line-height: 1.9;font-size: 15px;"><p>通过 Toolbox App 获取</p></section></section></a></section><p style="font-size: inherit;color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;">您的 CLion 团队<br>JetBrains<br><em style="font-size: inherit;color: inherit;line-height: inherit;">The Drive to Develop</em></p></section><section style="font-size: 16px;"><section style="transform: perspective(0px);transform-style: flat;" powered-by="xiumi.us"><section style="margin-top: 10px;text-align: left;justify-content: flex-start;display: flex;flex-flow: row;transform: rotateY(180deg);"><section style="display: inline-block;width: 100%;vertical-align: top;border-left: 3px solid rgb(219, 219, 219);border-bottom-left-radius: 0px;padding-left: 8px;align-self: flex-start;flex: 0 0 auto;"><section style="transform: perspective(0px);transform-style: flat;" powered-by="xiumi.us"><section style="transform: rotateY(180deg);"><section style="color: rgb(125, 125, 125);font-size: 13px;text-align: right;"><p><strong>本博文英文原作者：Anastasia Kazakova</strong></p></section><grazie-editor-wrapper></grazie-editor-wrapper></section></section></section></section></section><section style="" powered-by="xiumi.us"><p style="text-wrap: wrap;"><br></p><grazie-editor-wrapper></grazie-editor-wrapper></section><section style="text-align: center;justify-content: center;display: flex;flex-flow: row;margin-top: 10px;margin-bottom: 20px;" powered-by="xiumi.us"><section style="display: inline-block;width: auto;vertical-align: top;align-self: flex-start;flex: 0 0 auto;border-style: solid;border-width: 1px;min-width: 5%;height: auto;box-shadow: rgb(12, 176, 199) 6px 6px 0px 0px;padding: 8px;"><section style="text-align: left;" powered-by="xiumi.us"><section style="text-align: justify;font-size: 17px;"><p style="text-wrap: wrap;"><strong>CLion 相关阅读</strong></p></section><grazie-editor-wrapper></grazie-editor-wrapper></section></section></section><a title="https://mp.weixin.qq.com/s?__biz=MzkwNDI5NzUyMQ==&amp;mid=2247496559&amp;idx=2&amp;sn=5eb355611f667a64838432ac4cb5129e&amp;chksm=c08b9e31f7fc172780f20ce7d3485fd7779f6461f8a5bc5adcc724e92304a287ea7f3d7c0709&amp;token=829715172&amp;lang=zh_CN&amp;scene=21#wechat_redirect" formlinkparm="[{&quot;href&quot;:&quot;https://mp.weixin.qq.com/s?__biz=MzkwNDI5NzUyMQ==&amp;mid=2247496559&amp;idx=2&amp;sn=5eb355611f667a64838432ac4cb5129e&amp;chksm=c08b9e31f7fc172780f20ce7d3485fd7779f6461f8a5bc5adcc724e92304a287ea7f3d7c0709&amp;token=829715172&amp;lang=zh_CN&amp;scene=21#wechat_redirect&quot;}]" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzkwNDI5NzUyMQ%3D%3D%26mid%3D2247496559%26idx%3D2%26sn%3D5eb355611f667a64838432ac4cb5129e%26chksm%3Dc08b9e31f7fc172780f20ce7d3485fd7779f6461f8a5bc5adcc724e92304a287ea7f3d7c0709%26token%3D829715172%26lang%3Dzh_CN%26scene%3D21%23wechat_redirect" target="_blank" rel="noopener noreferrer" powered-by="xiumi.us" data-linktype="1"><section style="text-align: center;margin-top: 10px;margin-bottom: 10px;line-height: 0;"><section style="vertical-align: middle;display: inline-block;line-height: 0;box-shadow: rgb(0, 0, 0) 2px 2px 8px -3px;border-radius: 5px;overflow: hidden;"><span class="js_jump_icon h5_image_link"><img class="rich_pages wxw-img" data-ratio="0.3037037037037037" data-s="300,640" src="https://oscimg.oschina.net/oscnet/a16279ec-e81d-4d66-9ed1-ad633d1ef51f.jpg" data-type="jpeg" data-w="1080" style="vertical-align: middle;width: 100%;" referrerpolicy="no-referrer"></span></section></section></a><a title="https://mp.weixin.qq.com/s?__biz=MzkwNDI5NzUyMQ==&amp;mid=2247504083&amp;idx=1&amp;sn=6f131091a5ffcd1b1135cbbaaff43764&amp;chksm=c08bbd8df7fc349b0e5f4542dab76b5f086a558209a95aff44294c68b138987720116b4b09fe&amp;token=141262335&amp;lang=zh_CN&amp;scene=21#wechat_redirect" formlinkparm="[{&quot;href&quot;:&quot;https://mp.weixin.qq.com/s?__biz=MzkwNDI5NzUyMQ==&amp;mid=2247504083&amp;idx=1&amp;sn=6f131091a5ffcd1b1135cbbaaff43764&amp;chksm=c08bbd8df7fc349b0e5f4542dab76b5f086a558209a95aff44294c68b138987720116b4b09fe&amp;token=141262335&amp;lang=zh_CN&amp;scene=21#wechat_redirect&quot;}]" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzkwNDI5NzUyMQ%3D%3D%26mid%3D2247504083%26idx%3D1%26sn%3D6f131091a5ffcd1b1135cbbaaff43764%26chksm%3Dc08bbd8df7fc349b0e5f4542dab76b5f086a558209a95aff44294c68b138987720116b4b09fe%26token%3D141262335%26lang%3Dzh_CN%26scene%3D21%23wechat_redirect" target="_blank" rel="noopener noreferrer" powered-by="xiumi.us" data-linktype="1"><section style="text-align: center;margin-top: 10px;margin-bottom: 10px;line-height: 0;"><section style="vertical-align: middle;display: inline-block;line-height: 0;box-shadow: rgb(0, 0, 0) 2px 2px 8px -3px;border-radius: 5px;overflow: hidden;"><span class="js_jump_icon h5_image_link"><img class="rich_pages wxw-img" data-ratio="0.3037037037037037" data-s="300,640" src="https://oscimg.oschina.net/oscnet/e6080d20-4fd6-4f42-82fc-8cfc81c80439.png" data-type="png" data-w="1080" style="vertical-align: middle;width: 100%;" referrerpolicy="no-referrer"></span></section></section></a><a title="https://mp.weixin.qq.com/s?__biz=MzkwNDI5NzUyMQ==&amp;mid=2247488552&amp;idx=1&amp;sn=325cd4dabc7b63d16e9f7751a6816685&amp;chksm=c0887976f7fff060f31afe600cd65226cf85af6d188193389a6f741a7005956abb724d58060b&amp;token=829715172&amp;lang=zh_CN&amp;scene=21#wechat_redirect" formlinkparm="[{&quot;href&quot;:&quot;https://mp.weixin.qq.com/s?__biz=MzkwNDI5NzUyMQ==&amp;mid=2247488552&amp;idx=1&amp;sn=325cd4dabc7b63d16e9f7751a6816685&amp;chksm=c0887976f7fff060f31afe600cd65226cf85af6d188193389a6f741a7005956abb724d58060b&amp;token=829715172&amp;lang=zh_CN&amp;scene=21#wechat_redirect&quot;}]" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzkwNDI5NzUyMQ%3D%3D%26mid%3D2247488552%26idx%3D1%26sn%3D325cd4dabc7b63d16e9f7751a6816685%26chksm%3Dc0887976f7fff060f31afe600cd65226cf85af6d188193389a6f741a7005956abb724d58060b%26token%3D829715172%26lang%3Dzh_CN%26scene%3D21%23wechat_redirect" target="_blank" rel="noopener noreferrer" powered-by="xiumi.us" data-linktype="1"><section style="text-align: center;margin-top: 10px;margin-bottom: 10px;line-height: 0;"><section style="vertical-align: middle;display: inline-block;line-height: 0;box-shadow: rgb(0, 0, 0) 2px 2px 8px -3px;border-radius: 5px;overflow: hidden;"><span class="js_jump_icon h5_image_link"><img class="rich_pages wxw-img" data-ratio="0.3037037037037037" data-s="300,640" src="https://oscimg.oschina.net/oscnet/13d205fa-9275-4939-aded-d97b3a582aa0.jpg" data-type="jpeg" data-w="1080" style="vertical-align: middle;width: 100%;" referrerpolicy="no-referrer"></span></section></section></a><section style="margin-top: 10px;margin-bottom: 10px;" powered-by="xiumi.us"><section style="box-shadow: rgb(170, 170, 170) 0px 0px 10px inset;border-color: rgb(192, 200, 209);padding: 10px 18px;border-width: 1px;border-style: solid;background-color: rgb(240, 244, 255);border-radius: 5px;overflow: hidden;"><section style="margin: 10px 0%;justify-content: flex-start;display: flex;flex-flow: row;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: middle;width: 38px;flex: 0 0 auto;height: auto;align-self: center;"><section style="text-align: center;margin-top: 10px;margin-bottom: 10px;line-height: 0;" powered-by="xiumi.us"><section style="vertical-align: middle;display: inline-block;line-height: 0;width: 38px;height: auto;"><img data-ratio="1" data-s="300,640" src="https://oscimg.oschina.net/oscnet/279e0629-2fa2-412a-8d50-5bcd12f491e5.png" data-type="png" data-w="1080" style="vertical-align: middle;width: 100%;" referrerpolicy="no-referrer"></section></section></section><section style="display: inline-block;vertical-align: middle;width: auto;min-width: 10%;flex: 0 0 auto;height: auto;align-self: center;margin-left: 10px;border-bottom: 3px solid rgb(0, 0, 0);border-bottom-right-radius: 0px;"><section style="" powered-by="xiumi.us"><section style="font-size: 19px;color: rgb(0, 0, 0);"><p style="text-wrap: wrap;"><strong>关于 CLion</strong></p></section><grazie-editor-wrapper></grazie-editor-wrapper></section></section></section><section style="" powered-by="xiumi.us"><section style="color: rgb(0, 0, 0);font-size: 15px;"><p style="text-wrap: wrap;"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzkwNDI5NzUyMQ%3D%3D%26mid%3D2247487178%26idx%3D2%26sn%3D6d95e4b411feb60da6108d3aee21d77d%26scene%3D21%23wechat_redirect" target="_blank" data-linktype="2"></a>CLion 是用于 Windows、Linux 和 macOS 上 C 或 C++开发的智能 IDE。CLion 了解现代 C++ 标准并提供预处理程序支持。它还集成了 GDB/LDB 和一套单元测试框架。&nbsp;</p></section><grazie-editor-wrapper></grazie-editor-wrapper></section><a title="https://www.jetbrains.com.cn/clion/" formlinkparm="[{&quot;href&quot;:&quot;https://www.jetbrains.com.cn/clion/&quot;}]" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.jetbrains.com.cn%2Fclion%2F" target="_blank" rel="noopener noreferrer" powered-by="xiumi.us" data-linktype="2"><section style="text-align: center;margin-top: 15px;margin-bottom: 7.5px;"><section style="display: inline-block;border-radius: 5px;line-height: 2.3;background-color: rgb(12, 176, 199);font-size: 15px;color: rgb(255, 247, 245);width: 100%;"><p><strong>进一步了解 CLion</strong></p></section><grazie-editor-wrapper></grazie-editor-wrapper></section></a></section></section><section style="text-align: left;justify-content: flex-start;display: flex;flex-flow: row;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;vertical-align: top;align-self: flex-start;flex: 0 0 auto;"><section style="text-align: center;margin-top: 10px;margin-bottom: 10px;line-height: 0;" powered-by="xiumi.us"><section style="vertical-align: middle;display: inline-block;line-height: 0;"><img class="rich_pages wxw-img" data-ratio="0.5" data-s="300,640" src="https://oscimg.oschina.net/oscnet/58ab6ef4-d590-4ee8-800e-872ee344e21e.png" data-type="png" data-w="1080" style="vertical-align: middle;width: 100%;" referrerpolicy="no-referrer"></section></section><section style="" powered-by="xiumi.us"><section style="font-size: 13px;color: rgb(125, 125, 125);text-align: justify;"><p style="text-wrap: wrap;"><strong>⏬ 戳「阅读原文」了解更多</strong></p></section></section></section></section></section><p style="display: none;"><mp-style-type data-value="3"></mp-style-type></p></div><p style="color: #858585; font-size: 13px;">本文分享自微信公众号 - JetBrains（JetBrainsChina）。<br>如有侵权，请联系 support@oschina.cn 删除。<br>本文参与「<a href="https://www.oschina.net/sharing-plan" target="_blank">OSC 源创计划</a>」，欢迎正在阅读的你也加入，一起分享。</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 15 Nov 2023 08:27:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/5494143/blog/10143808</guid>
            <link>https://my.oschina.net/u/5494143/blog/10143808</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Fleet 推出 Kotlin Multiplatform 支持预览版，在单一 IDE 中开发 KMP 应用程序！]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="rich_media_content js_underline_content
                       defaultNoSetting
            " id="js_content"><section style="font-size: 15px;line-height: 1.6;letter-spacing: 0px;padding-right: 5px;padding-left: 0px;color: rgb(0, 0, 0);box-sizing: border-box;font-style: normal;font-weight: 400;text-align: justify;margin-bottom: 0px;" data-mpa-powered-by="yiban.io"><section style="text-align: left;justify-content: flex-start;display: flex;flex-flow: row;box-sizing: border-box;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;vertical-align: top;align-self: flex-start;flex: 0 0 auto;box-sizing: border-box;"><section style="justify-content: flex-start;display: flex;flex-flow: row;box-sizing: border-box;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;vertical-align: top;align-self: flex-start;flex: 0 0 auto;box-sizing: border-box;"><section style="margin: 30px 0% 10px;justify-content: flex-start;display: flex;flex-flow: row;box-sizing: border-box;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;vertical-align: top;background-color: rgb(237, 238, 242);align-self: flex-start;flex: 0 0 auto;box-sizing: border-box;"><section style="display: flex;width: 100%;flex-flow: column;box-sizing: border-box;" powered-by="xiumi.us"><section style="z-index: auto;box-sizing: border-box;" powered-by="xiumi.us"><section style="display: flex;flex-flow: row;justify-content: flex-start;transform: translate3d(18px, 0px, 0px);-webkit-transform: translate3d(18px, 0px, 0px);-moz-transform: translate3d(18px, 0px, 0px);-o-transform: translate3d(18px, 0px, 0px);margin: -16px 0% 0px;box-sizing: border-box;"><section style="display: inline-block;vertical-align: top;width: 15%;flex: 0 0 auto;height: auto;align-self: flex-start;box-sizing: border-box;"><section style="text-align: center;margin: -16px 0px 0px;line-height: 0;box-sizing: border-box;" powered-by="xiumi.us"><section style="max-width: 100%;vertical-align: middle;display: inline-block;line-height: 0;box-sizing: border-box;"><img class="rich_pages wxw-img" data-ratio="1" data-s="300,640" src="https://oscimg.oschina.net/oscnet/34d34a69-0c6b-4707-8aaf-d6aadb6b3d82.png" data-w="707" style="vertical-align: middle;max-width: 100%;width: 100%;box-sizing: border-box;" width="100%" referrerpolicy="no-referrer"></section></section></section><section style="display: inline-block;vertical-align: top;width: auto;flex: 0 0 auto;align-self: flex-start;min-width: 10%;max-width: 100%;height: auto;box-sizing: border-box;"><section style="transform: translate3d(5px, 0px, 0px);-webkit-transform: translate3d(5px, 0px, 0px);-moz-transform: translate3d(5px, 0px, 0px);-o-transform: translate3d(5px, 0px, 0px);box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: justify;color: rgb(115, 119, 173);padding: 0px 7px;line-height: 1.2;box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><span style="box-sizing: border-box;"><strong style="box-sizing: border-box;">记得加关注， Kotlin 之路不迷路！</strong></span></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: justify;font-size: 12px;color: rgb(221, 20, 100);line-height: 1.2;box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><span style="box-sizing: border-box;">&nbsp; &nbsp; Kotlinlang.org</span></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section></section></section></section></section></section></section></section></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: justify;box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section></section></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: unset;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;"><span style="color: rgb(120, 85, 245);box-sizing: border-box;"><strong style="box-sizing: border-box;">Kotlin Multiplatform&nbsp;(KMP) </strong></span>是 JetBrains 构建的开源技术，允许跨多个平台共享代码，同时保留了原生编程的优势。支持的平台包括 iOS、Android、桌面、Web 等。</p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: unset;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;">现在，我们在&nbsp;<span style="color: rgb(120, 85, 245);box-sizing: border-box;"><strong style="box-sizing: border-box;">Fleet</strong></span>&nbsp;中推出 <strong style="box-sizing: border-box;"><span style="color: rgb(120, 85, 245);box-sizing: border-box;">Kotlin Multiplatform 支持预览版</span></strong>，这将简化多平台应用程序开发，进一步丰富 <a target="_blank" href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4MzkxMzg3MQ%3D%3D%26mid%3D2247485165%26idx%3D1%26sn%3Dbf4b59d0544f2c35d812a997f0c4246c%26chksm%3Dcf41630df836ea1bb3b400a1dd49f30989fd569a59cc1e36e361834d90ce96fa30fa16d2f8e3%26scene%3D21%23wechat_redirect" textvalue="Fleet 中广泛的 Kotlin 支持" linktype="text" imgurl="" imgdata="null" data-itemshowtype="0" tab="innerlink" data-linktype="2">Fleet 中广泛的 Kotlin 支持</a>。请注意，如果您的目标是 iOS 和 macOS，则需要 Xcode。</p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="margin-top: 10px;margin-bottom: 10px;box-sizing: border-box;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;border-width: 1px;border-style: solid;border-color: rgb(120, 85, 245);padding: 10px;box-shadow: rgb(204, 204, 204) 0.2em 0.2em 0.3em;box-sizing: border-box;"><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><strong style="box-sizing: border-box;">由此开始 Fleet 中的 Kotlin Multiplatform 项目：</strong></p><p style="text-align: left;white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><span style="font-size: 14px;color: rgb(51, 122, 183);box-sizing: border-box;">https://www.jetbrains.com.cn/en-us/help/kotlin-multiplatform-dev/fleet.html</span></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section></section></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: unset;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;">我们来看看其中的部分功能。</p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="font-size: 18px;color: rgb(120, 85, 245);box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><strong style="box-sizing: border-box;">简洁</strong></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: unset;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;">打开多平台项目时，Fleet 将自动为 Android 和/或 iOS 平台创建运行配置，如项目构建文件中所声明。您可以使用它们在 Android 虚拟设备或 iOS 模拟器上执行应用程序。</p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="text-align: center;margin-top: 10px;margin-bottom: 10px;line-height: 0;box-sizing: border-box;" powered-by="xiumi.us"><section style="max-width: 100%;vertical-align: middle;display: inline-block;line-height: 0;box-sizing: border-box;"><img class="rich_pages wxw-img" data-ratio="0.3861111111111111" data-s="300,640" src="https://oscimg.oschina.net/oscnet/9a4b619d-4c02-4f6a-be57-936ee1dd0673.png" data-w="1080" style="vertical-align: middle;max-width: 100%;width: 100%;box-sizing: border-box;" width="100%" referrerpolicy="no-referrer"></section></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="font-size: 18px;color: rgb(120, 85, 245);box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><strong style="box-sizing: border-box;">多语言编程</strong></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: unset;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;">Fleet 是多语言 IDE，因此，在多平台项目中使用原生代码时，无需切换到不同的编辑器或牺牲实用性。编辑 Swift 代码时，您将获得与 Kotlin 和 Java 相同的丰富功能，以及对 Xcode 项目的完整支持。</p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="text-align: center;margin-top: 10px;margin-bottom: 10px;line-height: 0;box-sizing: border-box;" powered-by="xiumi.us"><section style="max-width: 100%;vertical-align: middle;display: inline-block;line-height: 0;box-sizing: border-box;"><img class="rich_pages wxw-img" data-ratio="0.5101851851851852" data-s="300,640" src="https://oscimg.oschina.net/oscnet/5507a1e6-80fb-4767-80a8-273863eea3a6.png" data-w="1080" style="vertical-align: middle;max-width: 100%;width: 100%;box-sizing: border-box;" width="100%" referrerpolicy="no-referrer"></section></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="font-size: 18px;color: rgb(120, 85, 245);box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><strong style="box-sizing: border-box;">代码导航</strong></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: unset;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;">Fleet 支持 Swift 与 Kotlin 之间的跨语言导航。例如，在 Kotlin 函数上使用 <strong>Show Usages</strong>（显示用法）操作时，Swift 代码中的任何调用都会在结果中显示。如果存在单个匹配项，则显示关联文件。</p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="text-align: center;margin-top: 10px;margin-bottom: 10px;line-height: 0;box-sizing: border-box;" powered-by="xiumi.us"><section style="max-width: 100%;vertical-align: middle;display: inline-block;line-height: 0;box-sizing: border-box;"><img class="rich_pages wxw-img" data-ratio="0.4137291280148423" data-s="300,640" src="https://oscimg.oschina.net/oscnet/23ef65b1-e657-4f85-b984-6c159563fc8e.gif" data-w="1078" style="vertical-align: middle;max-width: 100%;width: 100%;box-sizing: border-box;" width="100%" referrerpolicy="no-referrer"></section></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="font-size: 18px;color: rgb(120, 85, 245);box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><strong style="box-sizing: border-box;">重构</strong></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: unset;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;">Fleet 中的重构也是跨语言的。在下面的示例中，如果我们在 MainViewController 类型上使用 <strong>Rename</strong>（重命名）重构，那么重构将同时应用于 Kotlin 和 Swift 模块。</p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="text-align: center;margin-top: 10px;margin-bottom: 10px;line-height: 0;box-sizing: border-box;" powered-by="xiumi.us"><section style="max-width: 100%;vertical-align: middle;display: inline-block;line-height: 0;box-sizing: border-box;"><img class="rich_pages wxw-img" data-ratio="0.5384615384615384" data-s="300,640" src="https://oscimg.oschina.net/oscnet/f824138a-7238-4875-bf96-7eac80cd2df5.gif" data-w="1079" style="vertical-align: middle;max-width: 100%;width: 100%;box-sizing: border-box;" width="100%" referrerpolicy="no-referrer"></section></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="font-size: 18px;color: rgb(120, 85, 245);box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><strong style="box-sizing: border-box;">调试</strong></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: unset;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;">Fleet 中的调试也是跨语言的。您可以在 Swift 代码中设置断点，查看该环境中的值和调用堆栈，步入 Kotlin 调用，然后根据需要继续。</p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="text-align: center;margin-top: 10px;margin-bottom: 10px;line-height: 0;box-sizing: border-box;" powered-by="xiumi.us"><section style="max-width: 100%;vertical-align: middle;display: inline-block;line-height: 0;box-sizing: border-box;"><img class="rich_pages wxw-img" data-ratio="0.46574074074074073" data-s="300,640" src="https://oscimg.oschina.net/oscnet/b2105c54-0b6a-45b0-b389-439305f3d6a8.gif" data-w="1080" style="vertical-align: middle;max-width: 100%;width: 100%;box-sizing: border-box;" referrerpolicy="no-referrer"></section></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="text-align: center;justify-content: center;display: flex;flex-flow: row;margin: 10px 0px;box-sizing: border-box;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: middle;width: 48px;align-self: center;flex: 0 0 auto;height: auto;box-sizing: border-box;"><section style="margin-top: 10px;margin-bottom: 10px;line-height: 0;box-sizing: border-box;" powered-by="xiumi.us"><section style="max-width: 100%;vertical-align: middle;display: inline-block;line-height: 0;width: 80%;height: auto;box-sizing: border-box;"><img data-ratio="1" data-s="300,640" data-w="500" src="https://oscimg.oschina.net/oscnet/d2fa58f1-a075-427e-9dd1-57d1330762e7.png" style="vertical-align: middle;max-width: 100%;width: 100%;box-sizing: border-box;" width="100%" referrerpolicy="no-referrer"></section></section></section><section style="display: inline-block;vertical-align: middle;width: auto;align-self: center;flex: 100 100 0%;height: auto;padding: 0px 0px 0px 10px;box-sizing: border-box;"><section style="text-align: left;margin: 10px 0px 0px;box-sizing: border-box;" powered-by="xiumi.us"><section style="color: rgb(42, 8, 69);font-size: 22px;line-height: 1.2;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;"><strong style="box-sizing: border-box;">单一 IDE</strong></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="margin: 2px 0px 8px;box-sizing: border-box;" powered-by="xiumi.us"><section style="background-color: rgb(120, 85, 245);height: 1px;box-sizing: border-box;"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section></section></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: unset;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;">如您所知，创建 Kotlin Multiplatform 应用程序通常需要组合使用多个 IDE。以移动端为目标时，情况相同，因为需要 Android Studio 和 Xcode。不过，<strong>我们在 Fleet 上的目标是提供一个单一 IDE，让您可以在其中开发应用程序而无需切换工具</strong>（以 Apple 设备为目标时仍需安装 Xcode，日常工作则不需要）。</p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="text-align: center;justify-content: center;display: flex;flex-flow: row;margin: 10px 0px;box-sizing: border-box;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: middle;width: 48px;align-self: center;flex: 0 0 auto;height: auto;box-sizing: border-box;"><section style="margin-top: 10px;margin-bottom: 10px;line-height: 0;box-sizing: border-box;" powered-by="xiumi.us"><section style="max-width: 100%;vertical-align: middle;display: inline-block;line-height: 0;width: 80%;height: auto;box-sizing: border-box;"><img data-ratio="1" data-s="300,640" data-w="500" src="https://oscimg.oschina.net/oscnet/d2fa58f1-a075-427e-9dd1-57d1330762e7.png" style="vertical-align: middle;max-width: 100%;width: 100%;box-sizing: border-box;" width="100%" referrerpolicy="no-referrer"></section></section></section><section style="display: inline-block;vertical-align: middle;width: auto;align-self: center;flex: 100 100 0%;height: auto;padding: 0px 0px 0px 10px;box-sizing: border-box;"><section style="text-align: left;margin: 10px 0px 0px;box-sizing: border-box;" powered-by="xiumi.us"><section style="color: rgb(42, 8, 69);font-size: 22px;line-height: 1.2;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;"><strong style="box-sizing: border-box;">定价模型</strong></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="margin: 2px 0px 8px;box-sizing: border-box;" powered-by="xiumi.us"><section style="background-color: rgb(120, 85, 245);height: 1px;box-sizing: border-box;"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section></section></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: unset;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;"><strong>预览期间，Fleet（包括 Kotlin Multiplatform Tooling）将保持免费。</strong>发布 Kotlin Multiplatform Tooling 时，我们预计定价模型将与 Fleet 本身的定价模型保持一致。我们将在接近发布日期时提供更多信息。</p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="text-align: center;justify-content: center;display: flex;flex-flow: row;margin: 10px 0px;box-sizing: border-box;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: middle;width: 48px;align-self: center;flex: 0 0 auto;height: auto;box-sizing: border-box;"><section style="margin-top: 10px;margin-bottom: 10px;line-height: 0;box-sizing: border-box;" powered-by="xiumi.us"><section style="max-width: 100%;vertical-align: middle;display: inline-block;line-height: 0;width: 80%;height: auto;box-sizing: border-box;"><img data-ratio="1" data-s="300,640" data-w="500" src="https://oscimg.oschina.net/oscnet/d2fa58f1-a075-427e-9dd1-57d1330762e7.png" style="vertical-align: middle;max-width: 100%;width: 100%;box-sizing: border-box;" width="100%" referrerpolicy="no-referrer"></section></section></section><section style="display: inline-block;vertical-align: middle;width: auto;align-self: center;flex: 100 100 0%;height: auto;padding: 0px 0px 0px 10px;box-sizing: border-box;"><section style="text-align: left;margin: 10px 0px 0px;box-sizing: border-box;" powered-by="xiumi.us"><section style="color: rgb(42, 8, 69);font-size: 22px;line-height: 1.2;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;"><strong style="box-sizing: border-box;">我们对 IntelliJ IDEA&nbsp;</strong></p><p style="margin: 0px;padding: 0px;box-sizing: border-box;"><strong style="box-sizing: border-box;">和 IntelliJ 平台的承诺</strong></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="margin: 2px 0px 8px;box-sizing: border-box;" powered-by="xiumi.us"><section style="background-color: rgb(120, 85, 245);height: 1px;box-sizing: border-box;"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section></section></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: unset;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;">Fleet 使用适用于 Swift 的 IntelliJ 代码处理引擎和我们所有的 Kotlin 支持，因此，<strong>我们将继续在 IntelliJ IDEA 和 IntelliJ 平台（因此也包括 Android Studio）上提供对 Kotlin 的支持。</strong>此外，在 IntelliJ IDEA 中使用 Kotlin 的开发者数量不断增加，<strong>我们向您保证，我们将继续推动对此平台的创新和支持。</strong></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: unset;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;">话虽如此，IntelliJ IDEA 的目标受众仍将主要是以 JVM 为目标的服务器端开发者。虽然可以在 IntelliJ IDEA 和 Android Studio 中打开、导航和构建 Kotlin Multiplatform 项目，但其他功能（例如针对特定平台的运行配置、Compose Multiplatform 功能以及其他促进多平台开发的功能）将<strong>仅在 Fleet 中受支持</strong>。</p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="text-align: center;justify-content: center;display: flex;flex-flow: row;margin: 10px 0px;box-sizing: border-box;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: middle;width: 48px;align-self: center;flex: 0 0 auto;height: auto;box-sizing: border-box;"><section style="margin-top: 10px;margin-bottom: 10px;line-height: 0;box-sizing: border-box;" powered-by="xiumi.us"><section style="max-width: 100%;vertical-align: middle;display: inline-block;line-height: 0;width: 80%;height: auto;box-sizing: border-box;"><img data-ratio="1" data-s="300,640" data-w="500" src="https://oscimg.oschina.net/oscnet/d2fa58f1-a075-427e-9dd1-57d1330762e7.png" style="vertical-align: middle;max-width: 100%;width: 100%;box-sizing: border-box;" width="100%" referrerpolicy="no-referrer"></section></section></section><section style="display: inline-block;vertical-align: middle;width: auto;align-self: center;flex: 100 100 0%;height: auto;padding: 0px 0px 0px 10px;box-sizing: border-box;"><section style="text-align: left;margin: 10px 0px 0px;box-sizing: border-box;" powered-by="xiumi.us"><section style="color: rgb(42, 8, 69);font-size: 22px;line-height: 1.2;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;"><strong style="box-sizing: border-box;">如何开始</strong></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="margin: 2px 0px 8px;box-sizing: border-box;" powered-by="xiumi.us"><section style="background-color: rgb(120, 85, 245);height: 1px;box-sizing: border-box;"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section></section></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: unset;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;">要开始 Kotlin Multiplatform 开发并尝试我们的炫酷功能，您可以通过&nbsp;<strong style="box-sizing: border-box;">JetBrains Toolbox App</strong><sup style="font-size: 11px;box-sizing: border-box;">1</sup>&nbsp;安装最新版本的 Fleet。我们还有一个全新的<strong style="box-sizing: border-box;">在线 Web 向导</strong><sup style="box-sizing: border-box;">2</sup>，用于创建 Kotlin Multiplatform 项目。</p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: unset;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;">请务必查看<strong style="box-sizing: border-box;">适用于 </strong><strong style="box-sizing: border-box;">Kotlin Multiplatform 开发的 Fleet</strong><sup style="font-size: 11px;box-sizing: border-box;">3</sup>教程，获取创建您的第一个应用程序的分步指南。您还可以查看我们准备的一些&nbsp;<strong style="box-sizing: border-box;">KMP 示例应用程序</strong><sup style="font-size: 11px;box-sizing: border-box;">4</sup>。</p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="margin-top: 10px;margin-bottom: 10px;box-sizing: border-box;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;border-width: 1px;border-style: solid;border-color: rgb(120, 85, 245);padding: 10px;box-shadow: rgb(204, 204, 204) 0.2em 0.2em 0.3em;box-sizing: border-box;"><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><strong style="box-sizing: border-box;">由此开始 Fleet 中的 Kotlin Multiplatform 项目：</strong></p><p style="text-align: left;white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><span style="font-size: 14px;color: rgb(51, 122, 183);box-sizing: border-box;">https://www.jetbrains.com.cn/en-us/help/kotlin-multiplatform-dev/fleet.html</span></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section></section></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="text-align: center;justify-content: center;display: flex;flex-flow: row;margin: 10px 0px;box-sizing: border-box;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: middle;width: 48px;align-self: center;flex: 0 0 auto;height: auto;box-sizing: border-box;"><section style="margin-top: 10px;margin-bottom: 10px;line-height: 0;box-sizing: border-box;" powered-by="xiumi.us"><section style="max-width: 100%;vertical-align: middle;display: inline-block;line-height: 0;width: 80%;height: auto;box-sizing: border-box;"><img data-ratio="1" data-s="300,640" data-w="500" src="https://oscimg.oschina.net/oscnet/d2fa58f1-a075-427e-9dd1-57d1330762e7.png" style="vertical-align: middle;max-width: 100%;width: 100%;box-sizing: border-box;" width="100%" referrerpolicy="no-referrer"></section></section></section><section style="display: inline-block;vertical-align: middle;width: auto;align-self: center;flex: 100 100 0%;height: auto;padding: 0px 0px 0px 10px;box-sizing: border-box;"><section style="text-align: left;margin: 10px 0px 0px;box-sizing: border-box;" powered-by="xiumi.us"><section style="color: rgb(42, 8, 69);font-size: 22px;line-height: 1.2;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;"><strong style="box-sizing: border-box;">我们需要您的反馈</strong></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="margin: 2px 0px 8px;box-sizing: border-box;" powered-by="xiumi.us"><section style="background-color: rgb(120, 85, 245);height: 1px;box-sizing: border-box;"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section></section></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: unset;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;"><strong>Fleet 中的 Kotlin Multiplatform Tooling 还处于非常早期的阶段，我们希望听到您的反馈。</strong>让我们知道什么有效、什么无效、缺少什么，以及您不能没有什么。请在这篇博文下留言或使用我们的<strong style="box-sizing: border-box;">问题跟踪器</strong><sup style="box-sizing: border-box;">5</sup>。您还可以在 Kotlin Slack 的<strong style="box-sizing: border-box;">&nbsp;#fleet</strong><sup style="box-sizing: border-box;">6</sup>&nbsp;频道上分享您对 Kotlin Multiplatform（包括 Kotlin Multiplatform Tooling）的任何反馈。</p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: unset;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;">谢谢！</p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="margin-top: 10px;margin-bottom: 10px;box-sizing: border-box;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;border-width: 1px;border-style: solid;border-color: rgb(120, 85, 245);padding: 10px;box-shadow: rgb(204, 204, 204) 0.2em 0.2em 0.3em;box-sizing: border-box;"><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><strong style="box-sizing: border-box;">相关链接：</strong></p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: left;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;"><span style="font-size: 14px;box-sizing: border-box;">1. JetBrains Toolbox App：</span></p><p style="margin: 0px;padding: 0px;box-sizing: border-box;"><span style="font-size: 14px;color: rgb(51, 122, 183);box-sizing: border-box;">https://www.jetbrains.com.cn/fleet/download/</span></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: left;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;"><span style="font-size: 14px;box-sizing: border-box;">2. 在线 Web 向导：&nbsp;</span></p><p style="margin: 0px;padding: 0px;box-sizing: border-box;"><span style="font-size: 14px;color: rgb(51, 122, 183);box-sizing: border-box;">https://kmp.jetbrains.com/</span></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><span style="font-size: 14px;box-sizing: border-box;">3. 适用于 Kotlin Multiplatform 开发的 Fleet：</span></p><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><span style="font-size: 14px;color: rgb(51, 122, 183);box-sizing: border-box;">https://www.jetbrains.com.cn/help/kotlin-multiplatform-dev/fleet.html</span></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><span style="font-size: 14px;box-sizing: border-box;">4. KMP 示例应用程序：</span></p><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><span style="font-size: 14px;color: rgb(51, 122, 183);box-sizing: border-box;">https://kotlinlang.org/docs/multiplatform-mobile-samples.html</span></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><span style="font-size: 14px;box-sizing: border-box;">5. 问题跟踪器：</span></p><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><span style="font-size: 14px;color: rgb(51, 122, 183);box-sizing: border-box;">https://youtrack.jetbrains.com/issues/FL</span></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="box-sizing: border-box;"><p style="text-align: left;white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><span style="font-size: 14px;box-sizing: border-box;">6. #fleet:&nbsp;</span></p><p style="text-align: left;white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><span style="font-size: 14px;color: rgb(51, 122, 183);box-sizing: border-box;">https://slack-chats.kotlinlang.org/c/fleet</span></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section></section></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="margin: 10px 0% 8px;text-align: left;justify-content: flex-start;display: flex;flex-flow: row;box-sizing: border-box;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;vertical-align: top;border-left: 3px solid rgb(219, 219, 219);border-bottom-left-radius: 0px;padding: 0px 0px 0px 8px;align-self: flex-start;flex: 0 0 auto;box-sizing: border-box;"><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="color: rgba(0, 0, 0, 0.5);text-align: justify;font-size: 12px;box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><strong style="box-sizing: border-box;">本博文英文原作者：</strong></p><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><strong style="box-sizing: border-box;">Hadi Hariri</strong></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section></section></section><section style="text-align: left;justify-content: flex-start;display: flex;flex-flow: row;box-sizing: border-box;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;vertical-align: top;align-self: flex-start;flex: 0 0 auto;box-sizing: border-box;"><section style="margin: 10px 0% 0px;justify-content: flex-start;display: flex;flex-flow: row;box-sizing: border-box;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;vertical-align: top;background-position: 97.529% 66.6681%;background-repeat: repeat;background-size: 171.01%;background-attachment: scroll;align-self: flex-start;flex: 0 0 auto;height: auto;background-image: url(&quot;https://oscimg.oschina.net/oscnet/271f4c27-ea16-4f2d-a68d-14b00060ba7b.png&quot;);box-sizing: border-box;"><section style="text-align: justify;justify-content: flex-start;display: flex;flex-flow: row;box-sizing: border-box;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;vertical-align: top;padding: 26px;align-self: flex-start;flex: 0 0 auto;box-sizing: border-box;"><section style="margin: -9px 0px 7px;box-sizing: border-box;" powered-by="xiumi.us"><section style="font-size: 16px;color: rgb(248, 248, 248);box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><strong style="box-sizing: border-box;">这就是 Kotlin 编程语言</strong></p><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><strong style="box-sizing: border-box;">简洁、跨平台、且有趣！</strong></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="margin: 0px;box-sizing: border-box;" powered-by="xiumi.us"><section class="mp_profile_iframe_wrp" style="box-sizing: border-box;"><mp-common-profile class="js_uneditable custom_select_card mp_profile_iframe" data-id="Mzg4MzkxMzg3MQ==" data-pluginname="mpprofile" data-headimg="http://mmbiz.qpic.cn/mmbiz_png/y4ibuu6gd7d4NyzPduLLqtqddBasicL77gAgbLQD89CyYm1n7icODFhBr3xMoloOA7yicfjR8Bv0oaRP3CJuRLIO4Q/0?wx_fmt=png" data-nickname="Kotlin 开发者" data-alias="" data-signature="现代、简洁、安全的编程语言，由 JetBrains 打造。面向服务器、Android、Web 和原生平台，提供多种在平台间重用代码的方式以实现高效编程。官网：kotlinlang.org" data-from="0" data-is_biz_ban="0"></mp-common-profile></section></section><section style="text-align: center;margin: 7px 0px 0px;line-height: 0;box-sizing: border-box;" powered-by="xiumi.us"><section style="max-width: 100%;vertical-align: middle;display: inline-block;line-height: 0;width: 45%;height: auto;box-sizing: border-box;"><img class="rich_pages wxw-img" data-ratio="0.4119760479041916" data-s="300,640" src="https://oscimg.oschina.net/oscnet/da9c722b-a4ec-41ad-934c-525407224327.png" data-w="835" style="vertical-align: middle;max-width: 100%;width: 100%;box-sizing: border-box;" width="100%" referrerpolicy="no-referrer"></section></section></section></section></section></section></section></section></section><p style="display: none;margin-bottom: 0px;"><mp-style-type data-value="10000"></mp-style-type></p></div><p style="color: #858585; font-size: 13px;">本文分享自微信公众号 - JetBrains（JetBrainsChina）。<br>如有侵权，请联系 support@oschina.cn 删除。<br>本文参与「<a href="https://www.oschina.net/sharing-plan" target="_blank">OSC 源创计划</a>」，欢迎正在阅读的你也加入，一起分享。</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 15 Nov 2023 08:26:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/5494143/blog/10143810</guid>
            <link>https://my.oschina.net/u/5494143/blog/10143810</link>
            <author>
                <![CDATA[JetBrains 中国]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[字节跳动：利用 AI 自动调优 Linux 内核参数]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">在近日举办的&nbsp;Linux Plumbers Conference 上提出，字节跳动&nbsp;Linux 内核工程师 <span style="background-color:#ffffff">Cong Wang&nbsp;</span>发表了一个「</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flpc.events%2Fevent%2F17%2Fcontributions%2F1520%2F" target="_blank">Linux Kernel Autotuning</a><span style="color:#000000">」的主题演讲，提议可以使用人工智能（AI）和机器学习（ML）来调整 Linux 内核，从而为特定工作负载带来效果最优化。</span></p><p><span style="color:#000000">他指出，现在的 Linux 内核为用户提供了数以千计的参数，因此想要通过调整参数以获得最佳性能已经变得越来越困难。大多数情况下，不同的工作负载需要对不同的 Linux 内核参数集进行不同的调整。</span></p><p><span style="color:#000000">而在像字节跳动这样的大型数据中心，要针对数百种不同的工作负载手动调整 Linux 内核参数几乎是不可能的。因此字节跳动提出了一个解决方案，尝试以最小的工程投入实现整个 Linux 内核参数调整过程的自动化。</span></p><blockquote><p><span style="color:#000000">我们还注意到，内存管理是 Linux 内核子系统中对自动调优的需求较多的一个。借助贝叶斯优化等机器学习算法，我们相信自动调优甚至可以击败大多数 Linux 内核工程师。在本次演讲中，我们将介绍 Linux 内核自动调整解决方案的工作原理以及其设计和架构的概述。我们还将研究 Linux 内核内存管理的一些特定案例，以展示我们的结果作为概念验证。</span></p><p><span style="color:#000000">对于未来的工作，我们希望利用这个机会提出并讨论一个内核内机器学习框架，该框架可以进一步推动这个项目，在内核空间中完全优化 Linux 内核快速路径。</span></p></blockquote><p><img height="293" src="https://oscimg.oschina.net/oscnet/up-c9b82884de3f323f768ac146d08acaeded9.png" width="700" referrerpolicy="no-referrer"></p><p><span style="color:#000000"><span style="background-color:#ffffff">Wang 打趣称</span>，此举并不是为了「让 Linux 内核工程师失业」，而是旨在将人类工程师从调整每个单独工作负载的性能的工作中解放出来，同时利用历史数据做出更好的决策，找到比目前使用试错和启发式方法得出的解决方案更好的解决方案。</span></p><p><span style="color:#000000">自动调整系统旨在根据特定的工作负载和硬件配置，自动调整 Linux 内核的内部设置。这种动态调整可确保最佳性能，解决 Linux 社区长期以来面临的一个针对特定场景手动调整内核的难题。</span></p><ul><li><span style="color:#000000">动态优化： 系统持续监控内核性能，对 CPU 频率缩放和内存管理等设置进行实时调整。</span></li><li><span style="color:#000000">提高效率： 通过优化资源使用，自动调整系统大大提高了 Linux 系统的效率，尤其是在不同工作负载的环境中。</span></li><li><span style="color:#000000">用户友好界面： 该系统包含一个用户友好界面，即使技术知识有限的用户也能从增强的内核性能中受益。</span></li><li><span style="color:#000000">可定制的设置： 高级用户可以自定义自动调整参数，</span><span style="color:#080a12">根据其特定需求定制系统。</span></li></ul><p><span style="color:#000000">虽然目前还处于早期阶段，但字节方面表示已经取得了一些进展。例如，通过将 DAMON（一个用于内存访问监控和优化的 Linux 内核子系统）与该框架结合使用，能够为 MySQL 应用程序找到最佳方案。为此，他们运行了不同的 DAMON 方案并对其性能进行了比较，发现可以将应用程序的内存使用量减少 30%。</span></p><p><span style="color:#000000">在另一项案例中，该公司通过优化调整 16 个内核 sysctl 参数，优化了 NGINX 服务器上的 HTTP 网络延迟。在最佳情况下，与专家手动调整相比，ML 调整使 NGNIX 网络性能提升了 12%。</span></p><p><span style="color:#000000">字节并未宣称其 AI/ML 方法适用于所有 Linux 调整工作，但工程师也表示：「虽然存在局限性，但我们相信内核机器学习不仅是可能的，而且是必要的。」</span></p><p><span style="color:#000000">科技媒体 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.zdnet.com%2Farticle%2Ftuning-the-linux-kernel-with-ai-according-to-bytedance%2F" target="_blank">ZDNet</a> 的编辑对字节此举表达了认可，并认为其可能改变 Linux 应用程序的游戏规则。「通过简化内核优化，将使 Linux 对更广泛的用户和应用程序来说更易用、更高效。特别是，我看到自动调整系统几乎可以提升所有服务器、云计算和数据中心应用的性能。」</span></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 15 Nov 2023 08:23:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266922/linux-kernel-ai-bytedance</guid>
            <link>https://www.oschina.net/news/266922/linux-kernel-ai-bytedance</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[FFmpeg 6.1 发布，7.0 时代即将来临]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="rich_media_content js_underline_content
                       autoTypeSetting24psection
            " id="js_content"><p><img class="rich_pages wxw-img" data-croporisrc="https://oscimg.oschina.net/oscnet/c25dbd9e-d477-45de-b2d1-cbc70d97d425.png" data-cropx1="0" data-cropx2="560" data-cropy1="79" data-cropy2="233" data-ratio="0.275" src="https://oscimg.oschina.net/oscnet/cff4bf1a-3b56-4508-bc04-b40d90f61cd4.jpg" data-type="jpeg" data-w="560" style="width: 560px;height: 154px;" referrerpolicy="no-referrer"></p><p style="margin: 0pt 0pt 16px;letter-spacing: 0.578px;text-wrap: wrap;font-family: 等线;font-size: 12pt;line-height: 1.6em;"><span style="font-family: 微软雅黑;letter-spacing: 0pt;vertical-align: baseline;">11 月 10 日，FFmpeg 6.1 正式发布。</span></p><section style="margin: 0pt 0pt 16px;letter-spacing: 0.578px;text-wrap: wrap;font-family: 等线;font-size: 12pt;line-height: 1.6em;"><span style="font-family: 微软雅黑;letter-spacing: 0pt;vertical-align: baseline;">FFmpeg 发布版本的时候，按照惯例，会选择一些物理学家名字作为代号，这一新版本代号为「Heaviside」。主要为纪念伟大的英国数学家和物理学家奥利弗·黑维塞（Oliver Heaviside)。</span></section><section style="margin: 0pt 0pt 16px;letter-spacing: 0.578px;text-wrap: wrap;font-family: 等线;font-size: 12pt;line-height: 1.6em;"><span style="font-family: 微软雅黑;letter-spacing: 0pt;vertical-align: baseline;">奥利弗·黑维塞（Oliver Heaviside) 自学成才，没有系统经历过高等教育，但在物理、数学、工程领域成果非凡，其名言一直为人所津津乐道。</span></section><blockquote class="js_blockquote_wrap" data-type="2" data-url="" data-author-name="" data-content-utf8-length="0" data-source-title="「数学分 2 种，严格的和物理直观化的。前者的范围窄；后者粗犷而广泛。拘泥于公式的严格证明只会令绝大多数的数学物理探究止步不前。难道我要在完全理解消化反应的所有机理以前，拒绝进食吗？」"><section class="blockquote_info js_blockquote_source" data-json="%7B%22type%22%3A%22out%22%2C%22source%22%3A%22url%22%2C%22digest%22%3A%22%22%2C%22digestLen%22%3A90%2C%22text%22%3A%22%E2%80%9C%E6%95%B0%E5%AD%A6%E5%88%862%E7%A7%8D%EF%BC%8C%E4%B8%A5%E6%A0%BC%E7%9A%84%E5%92%8C%E7%89%A9%E7%90%86%E7%9B%B4%E8%A7%82%E5%8C%96%E7%9A%84%E3%80%82%E5%89%8D%E8%80%85%E7%9A%84%E8%8C%83%E5%9B%B4%E7%AA%84%EF%BC%9B%E5%90%8E%E8%80%85%E7%B2%97%E7%8A%B7%E8%80%8C%E5%B9%BF%E6%B3%9B%E3%80%82%E6%8B%98%E6%B3%A5%E4%BA%8E%E5%85%AC%E5%BC%8F%E7%9A%84%E4%B8%A5%E6%A0%BC%E8%AF%81%E6%98%8E%E5%8F%AA%E4%BC%9A%E4%BB%A4%E7%BB%9D%E5%A4%A7%E5%A4%9A%E6%95%B0%E7%9A%84%E6%95%B0%E5%AD%A6%E7%89%A9%E7%90%86%E6%8E%A2%E7%A9%B6%E6%AD%A2%E6%AD%A5%E4%B8%8D%E5%89%8D%E3%80%82%E9%9A%BE%E9%81%93%E6%88%91%E8%A6%81%E5%9C%A8%E5%AE%8C%E5%85%A8%E7%90%86%E8%A7%A3%E6%B6%88%E5%8C%96%E5%8F%8D%E5%BA%94%E7%9A%84%E6%89%80%E6%9C%89%E6%9C%BA%E7%90%86%E4%BB%A5%E5%89%8D%EF%BC%8C%E6%8B%92%E7%BB%9D%E8%BF%9B%E9%A3%9F%E5%90%97%EF%BC%9F%E2%80%9D%22%2C%22article%22%3A%7B%7D%2C%22hasReportOverSize%22%3Afalse%2C%22editorReportData%22%3A%5B%7B%22id%22%3A%22122333%22%2C%22key%22%3A%2276%22%2C%22len%22%3A1%7D%5D%2C%22from%22%3A%22%E2%80%9C%E6%95%B0%E5%AD%A6%E5%88%862%E7%A7%8D%EF%BC%8C%E4%B8%A5%E6%A0%BC%E7%9A%84%E5%92%8C%E7%89%A9%E7%90%86%E7%9B%B4%E8%A7%82%E5%8C%96%E7%9A%84%E3%80%82%E5%89%8D%E8%80%85%E7%9A%84%E8%8C%83%E5%9B%B4%E7%AA%84%EF%BC%9B%E5%90%8E%E8%80%85%E7%B2%97%E7%8A%B7%E8%80%8C%E5%B9%BF%E6%B3%9B%E3%80%82%E6%8B%98%E6%B3%A5%E4%BA%8E%E5%85%AC%E5%BC%8F%E7%9A%84%E4%B8%A5%E6%A0%BC%E8%AF%81%E6%98%8E%E5%8F%AA%E4%BC%9A%E4%BB%A4%E7%BB%9D%E5%A4%A7%E5%A4%9A%E6%95%B0%E7%9A%84%E6%95%B0%E5%AD%A6%E7%89%A9%E7%90%86%E6%8E%A2%E7%A9%B6%E6%AD%A2%E6%AD%A5%E4%B8%8D%E5%89%8D%E3%80%82%E9%9A%BE%E9%81%93%E6%88%91%E8%A6%81%E5%9C%A8%E5%AE%8C%E5%85%A8%E7%90%86%E8%A7%A3%E6%B6%88%E5%8C%96%E5%8F%8D%E5%BA%94%E7%9A%84%E6%89%80%E6%9C%89%E6%9C%BA%E7%90%86%E4%BB%A5%E5%89%8D%EF%BC%8C%E6%8B%92%E7%BB%9D%E8%BF%9B%E9%A3%9F%E5%90%97%EF%BC%9F%E2%80%9D%22%7D"><span class="blockquote_other">「数学分 2 种，严格的和物理直观化的。前者的范围窄；后者粗犷而广泛。拘泥于公式的严格证明只会令绝大多数的数学物理探究止步不前。难道我要在完全理解消化反应的所有机理以前，拒绝进食吗？」</span></section></blockquote><blockquote class="js_blockquote_wrap" data-type="2" data-url="" data-author-name="" data-content-utf8-length="0" data-source-title="Mathematics is of two kinds, Rigorous and Physical. The former is Narrow: the latter Bold and Broad. To have to stop to formulate rigorous demonstrations would put a stop to most physico-mathematical inquiries. Am I to refuse to eat because I do not fully understand the mechanism of digestion?"><section class="blockquote_info js_blockquote_source" data-json="%7B%22type%22%3A%22out%22%2C%22source%22%3A%22url%22%2C%22digest%22%3A%22%22%2C%22digestLen%22%3A296%2C%22text%22%3A%22%EF%BC%88Mathematics%C2%A0is%C2%A0of%C2%A0two%C2%A0kinds%2C%C2%A0Rigorous%C2%A0and%C2%A0Physical.%C2%A0The%C2%A0former%C2%A0is%C2%A0Narrow%3A%C2%A0the%C2%A0latter%C2%A0Bold%C2%A0and%C2%A0Broad.%C2%A0To%C2%A0have%C2%A0to%C2%A0stop%C2%A0to%C2%A0formulate%C2%A0rigorous%C2%A0demonstrations%C2%A0would%C2%A0put%C2%A0a%C2%A0stop%C2%A0to%C2%A0most%C2%A0physico-mathematical%C2%A0inquiries.%C2%A0Am%C2%A0I%C2%A0to%C2%A0refuse%C2%A0to%C2%A0eat%C2%A0because%C2%A0I%C2%A0do%C2%A0not%C2%A0fully%C2%A0understand%C2%A0the%C2%A0mechanism%C2%A0of%C2%A0digestion%3F%EF%BC%89%22%2C%22article%22%3A%7B%7D%2C%22hasReportOverSize%22%3Afalse%2C%22editorReportData%22%3A%5B%7B%22id%22%3A%22122333%22%2C%22key%22%3A%2276%22%2C%22len%22%3A1%7D%5D%2C%22from%22%3A%22Mathematics%20is%20of%20two%20kinds%2C%20Rigorous%20and%20Physical.%20The%20former%20is%20Narrow%3A%20the%20latter%20Bold%20and%20Broad.%20To%20have%20to%20stop%20to%20formulate%20rigorous%20demonstrations%20would%20put%20a%20stop%20to%20most%20physico-mathematical%20inquiries.%20Am%20I%20to%20refuse%20to%20eat%20because%20I%20do%20not%20fully%20understand%20the%20mechanism%20of%20digestion%3F%22%7D"><span class="blockquote_other">Mathematics is of two kinds, Rigorous and Physical. The former is Narrow: the latter Bold and Broad. To have to stop to formulate rigorous demonstrations would put a stop to most physico-mathematical inquiries. Am I to refuse to eat because I do not fully understand the mechanism of digestion?</span></section></blockquote><p style="margin: 0pt 0pt 24px;letter-spacing: 0.578px;text-wrap: wrap;font-family: 等线;font-size: 12pt;text-align: left;line-height: 1.6em;"><span style="font-family: 微软雅黑;letter-spacing: 0pt;vertical-align: baseline;">大佬的详细生平见</span><span style="font-size: 16px;text-wrap: wrap;font-family: 微软雅黑;letter-spacing: 0pt;vertical-align: baseline;color: rgb(0, 122, 170);"><strong><strong>奥利弗·黑维塞</strong></strong></span></p><p><strong style="font-family: 等线;font-size: 12pt;text-wrap: wrap;letter-spacing: 0.034em;"><span style="font-family: 微软雅黑;letter-spacing: 0pt;vertical-align: baseline;color: rgb(0, 122, 170);">FFmpeg 此次发布重要信息包含以下几点：</span></strong></p><p><span style="font-family: 微软雅黑;letter-spacing: 0pt;vertical-align: baseline;color: rgb(0, 0, 0);"><span style="vertical-align: baseline;font-size: 16px;letter-spacing: 0.578px;text-indent: -22.4px;text-wrap: wrap;font-family: 微软雅黑;">1.&nbsp;</span><span style="font-size: 16px;text-wrap: wrap;text-indent: -22pt;font-family: 微软雅黑;letter-spacing: 0pt;vertical-align: baseline;">支持增强版本的 RTMP/FLV，主要支持了 HEVC、VP9、AV1 等编解码格式。由于 Adobe 已经停止 RTMP 维护更新，这导致许多公司都在通过私有的方式支持新的视频编码格式。FFmpeg 这次官方支持，长期看有可能统一混乱的私有方案，但在短期内也会增加混乱与工作量，因为企业不得不同时维护私有和开放多套标准。诚如著名的网络漫画网站 https://xkcd.com/927/而言，我们又多了一个标准。</span></span></p><p style="text-align: center;"><img class="rich_pages wxw-img" data-galleryid="" data-ratio="0.5662337662337662" data-s="300,640" src="https://oscimg.oschina.net/oscnet/970365fa-75de-4f0f-89ba-ea65c99da75c.png" data-type="png" data-w="770" style="" referrerpolicy="no-referrer"></p><p><span style="color: rgb(0, 0, 0);font-size: 16px;text-wrap: wrap;text-indent: -22pt;font-family: 微软雅黑;letter-spacing: 0pt;vertical-align: baseline;">2.对新一代编码标准 VVC 和 MPEG-5 EVC (Essential Video Coding) 的 parser, muxer ，demuxer 以及 bsf 的支持。FFmpeg 社区一直在积极开发原生的 VVC 的 decoder，目前看，容器格式和 bit stream 相关的支持已经初步完成，让我们等待它原生的 VVC 解码器被合并；另一方面，MPEG-5 EVC 相关的支持工作也在积极的进行，只是其编解码器以第三方库的方式支持（</span><span style="font-size: 16px;text-wrap: wrap;text-indent: -22pt;font-family: 微软雅黑;letter-spacing: 0pt;vertical-align: baseline;color: rgb(0, 122, 170);">https://github.com/mpeg5</span><span style="color: rgb(0, 0, 0);font-size: 16px;text-wrap: wrap;text-indent: -22pt;font-family: 微软雅黑;letter-spacing: 0pt;vertical-align: baseline;">）。</span></p><p style="text-align: justify;"><span style="color: rgb(0, 0, 0);font-family: 微软雅黑;font-size: 16px;letter-spacing: 0pt;text-indent: -22pt;">3.FFmpeg 重新实现了自己的 FFT，用于其内部编解码器和滤波器的 FFT、MDCT、DCT 和 DST 实现已经完全被更快的 libavutil/tx 所取代；这个改动一方面带来速度上面的收益，另外一方面，也使得库的大小大为减小。</span></p><p style="text-align: justify;"><span style="font-size: 12pt;color: rgb(0, 0, 0);font-family: 微软雅黑;letter-spacing: 0pt;text-indent: -22pt;">4.硬件加速继续迭代。一方面，FFmpeg 已经支持了基于 Vulkan 的解码（当然，如同大多数硬件加速一样，它要在一定的限制条件下才能使用）。另外，也进一步支持了基于 VAAP 的 AV1 编码。说到 VAAPI，最让人吃惊的莫过于，FFmpeg 通过 libva-win32 项目，可以在 WIndows 上使用 FFmpeg VAAPI 的相关功能，这要感谢微软的工程师们在 WIndows 上的 WSL 项目上的努力。</span></p><p style="margin: 0pt 0pt 16px 16.8pt;letter-spacing: 0.578px;text-wrap: wrap;font-family: 等线;font-size: 12pt;text-indent: -16.8pt;line-height: 1.6em;"><strong style="letter-spacing: 0.034em;"><span style="font-family: 微软雅黑;letter-spacing: 0pt;vertical-align: baseline;color: rgb(0, 122, 170);">具体</span></strong><strong><span style="text-indent: -22pt;font-family: 微软雅黑;letter-spacing: 0pt;vertical-align: baseline;color: rgb(0, 122, 170);">改进</span></strong><strong style="letter-spacing: 0.034em;"><span style="font-family: 微软雅黑;letter-spacing: 0pt;vertical-align: baseline;color: rgb(0, 122, 170);">亮点如下：</span></strong><br></p><ul class="list-paddingleft-1" style="width: 577.42px;letter-spacing: 0.578px;text-wrap: wrap;"><li style="font-size: 16px;"><section style="margin: 0pt;font-family: 等线;font-size: 12pt;line-height: 1.5em;"><span style="text-indent: -22pt;font-family: 微软雅黑;letter-spacing: 0pt;vertical-align: baseline;">libaribcaption 译码器<br></span></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等线;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span data-font-family="&quot;微软雅黑&quot;,sans-serif" style="font-family: 微软雅黑;letter-spacing: 0pt;vertical-align: baseline;">Playdate&nbsp;视频&nbsp;Decoder&nbsp;和&nbsp;Demuxer</span><o:p></o:p></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等线;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="font-family: 微软雅黑;letter-spacing: 0pt;vertical-align: baseline;">在 Windows 上扩展对 libva-win32 的 VAAPI 支持</span></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等线;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="text-indent: -22pt;font-family: 微软雅黑;letter-spacing: 0pt;vertical-align: baseline;">命令行新增选项:-readrate_initial_burst</span></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等线;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="font-family: 微软雅黑;letter-spacing: 0pt;text-indent: -22pt;">arls&nbsp;音频滤镜</span></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等线;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="font-family: 微软雅黑;letter-spacing: 0pt;text-indent: -22pt;">setts 和 asetpts 过滤器中的命令支持</span></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等线;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="font-family: 微软雅黑;letter-spacing: 0pt;text-indent: -22pt;">Vulkan 解码 hwaccel，支持 H264、HEVC 和 AV1</span></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等线;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="font-family: 微软雅黑;letter-spacing: 0pt;text-indent: -22pt;">color_vulkan 过滤器</span></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等线;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="font-family: 微软雅黑;letter-spacing: 0pt;text-indent: -22pt;">bwdif_vulkan 过滤器</span></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等线;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="text-indent: -22pt;font-family: 微软雅黑;letter-spacing: 0pt;vertical-align: baseline;">nlmeans_vulkan 过滤器</span></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等线;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="font-family: 微软雅黑;letter-spacing: 0pt;text-indent: -22pt;">RivaTuner 视频解码器</span></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等线;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="text-indent: -22pt;font-family: 微软雅黑;letter-spacing: 0pt;vertical-align: baseline;">xfade_vulkan 过滤器</span></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等线;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="font-family: 微软雅黑;letter-spacing: 0pt;text-indent: -22pt;">vMix 视频解码器</span></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等线;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="font-family: 微软雅黑;letter-spacing: 0pt;text-indent: -22pt;">基本视频编码解析器，混音器和解音器</span></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等线;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="font-family: 微软雅黑;letter-spacing: 0pt;text-indent: -22pt;">基本视频编码帧合并 bsf</span></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等线;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="font-family: 微软雅黑;letter-spacing: 0pt;text-indent: -22pt;">bwdif_cuda 过滤器</span></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等线;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="font-family: 微软雅黑;letter-spacing: 0pt;text-indent: -22pt;">微软 RLE 视频编码器</span></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等线;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="font-family: 微软雅黑;letter-spacing: 0pt;text-indent: -22pt;">原始 AC-4 混频器和解混频器</span></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等线;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="font-family: 微软雅黑;letter-spacing: 0pt;text-indent: -22pt;">原始的 VVC 比特流解析器，复用器和解复用器</span></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等线;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="font-family: 微软雅黑;letter-spacing: 0pt;text-indent: -22pt;">位流过滤器用于编辑 VVC 流中的元数据</span></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等线;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="font-family: 微软雅黑;letter-spacing: 0pt;text-indent: -22pt;">比特流过滤器转换 VVC 从 MP4 到 Annex&nbsp;B</span></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等线;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="text-indent: -22pt;font-family: 微软雅黑;letter-spacing: 0pt;vertical-align: baseline;">videotoolbox 的 Scale_vt 过滤器</span></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等线;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="font-family: 微软雅黑;letter-spacing: 0pt;text-indent: -22pt;">videotoolbox 的 transpse_vt 过滤器</span></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等线;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="font-family: 微软雅黑;letter-spacing: 0pt;text-indent: -22pt;">支持 P_SKIP 提示以加速 libx264 编码</span></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等线;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="text-indent: -22pt;font-family: 微软雅黑;letter-spacing: 0pt;vertical-align: baseline;">支持 HEVC、VP9、AV1 编解码器，增强 flv 格式</span></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等线;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="font-family: 微软雅黑;letter-spacing: 0pt;text-indent: -22pt;">Apsnr 和 asisdr 音频滤波器</span></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等线;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="font-family: 微软雅黑;letter-spacing: 0pt;text-indent: -22pt;">OSQ 解码器和编码器</span></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等线;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="text-indent: -22pt;font-family: 微软雅黑;letter-spacing: 0pt;vertical-align: baseline;">在增强的 RTMP 协议中支持 HEVC、VP9、AV1 编解码器</span></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等线;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="font-family: 微软雅黑;letter-spacing: 0pt;text-indent: -22pt;">CRI&nbsp;USM 解混器</span></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等线;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="font-family: 微软雅黑;letter-spacing: 0pt;text-indent: -22pt;">ffmpeg 命令行'-top'选项已弃用，取而代之的是 setfield 过滤器</span></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等线;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="font-family: 微软雅黑;letter-spacing: 0pt;text-indent: -22pt;">AV1 编码器</span></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等线;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="text-indent: -22pt;font-family: 微软雅黑;letter-spacing: 0pt;vertical-align: baseline;">ffprobe&nbsp;XML 输出模式更改为考虑同一父元素中的多个变量字段元素</span></section></li><li style="font-size: 16px;"><p style="margin: 0pt 0pt 16px 22pt;font-family: 等线;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="text-indent: -22pt;font-family: 微软雅黑;letter-spacing: 0pt;vertical-align: baseline;">Ffprobe&nbsp;-output_format 选项作为-of 的别名添加</span></p></li></ul><section><strong style="font-family: 等线;font-size: 12pt;text-wrap: wrap;letter-spacing: 0.034em;"><span style="font-family: 微软雅黑;letter-spacing: 0pt;vertical-align: baseline;color: rgb(0, 122, 170);">除去这些特性，FFmpeg 内部也有一些优化，包含了：</span></strong></section><ul class="list-paddingleft-1" style="width: 577.42px;letter-spacing: 0.578px;text-wrap: wrap;"><li><p style="margin: 0pt 0pt 0pt 22pt;font-family: 等线;font-size: 12pt;text-indent: -22pt;line-height: 1.6em;"><span style="font-family: 微软雅黑;letter-spacing: 0pt;text-indent: -22pt;">在视频解码器中大幅减少内存分配，从而降低内存等开销</span></p></li><li><p style="margin: 0pt 0pt 0pt 22pt;font-family: 等线;font-size: 12pt;text-indent: -22pt;line-height: 1.6em;"><span style="text-indent: -22pt;font-family: 微软雅黑;letter-spacing: 0pt;vertical-align: baseline;">对&nbsp;DSP&nbsp;代码的许多部分进行了&nbsp;RISC-V&nbsp;优化，针对常用解码器已经被合并</span><o:p></o:p></p></li><li><section style="margin: 0pt 0pt 16px 22pt;font-family: 等线;font-size: 12pt;text-indent: -22pt;line-height: 1.6em;"><span style="text-indent: -22pt;font-family: 微软雅黑;letter-spacing: 0pt;vertical-align: baseline;">提高每个数据包的时间戳和帧持续时间的正确性，从而提升变帧率视频的支持</span></section></li></ul><p style="margin: 0pt 0pt 16px;letter-spacing: 0.578px;text-wrap: wrap;font-family: 等线;font-size: 12pt;line-height: 1.6em;"><span style="text-indent: -22pt;font-family: 微软雅黑;letter-spacing: 0pt;vertical-align: baseline;">下一个主要版本将是 7.0 版本，按照计划，将在 2024 年 2 月份发布。FFmpeg 最近这些年，虽然也经历了一些波折，但发展并未停滞，相反越来越迅速，而我们也即将迎来 FFmpeg 7.0 的大版本。</span></p><p style="margin-bottom: 0px;letter-spacing: 0.578px;text-wrap: wrap;"><span style="letter-spacing: 0.034em;font-size: 14px;color: rgb(0, 0, 0);">Reference:</span></p><p style="margin: 3pt 0pt;letter-spacing: 0.578px;text-wrap: wrap;font-family: 等线;font-size: 12pt;line-height: 1.6em;"><strong><span style="letter-spacing: 0pt;vertical-align: baseline;font-size: 14px;color: rgb(0, 122, 170);">https://ffmpeg.org/index.html%23pr6.1</span></strong></p><section style="margin: 3pt 0pt;letter-spacing: 0.578px;text-wrap: wrap;font-family: 等线;font-size: 12pt;line-height: 1.6em;"><strong><span style="letter-spacing: 0pt;vertical-align: baseline;font-size: 14px;color: rgb(0, 122, 170);">https://github.com/veovera/enhanced-rtmp/blob/main/enhanced-rtmp.pdf</span></strong><span style="text-decoration: underline;"><strong><span style="font-size: 14px;color: rgb(0, 122, 170);"><o:p></o:p></span></strong></span></section><p style="margin: 3pt 0pt 8px;letter-spacing: 0.578px;text-wrap: wrap;font-family: 等线;font-size: 12pt;line-height: 1.6em;"><strong><span style="letter-spacing: 0pt;vertical-align: baseline;font-size: 14px;color: rgb(0, 122, 170);">https://devblogs.microsoft.com/directx/video-acceleration-api-va-api-now-available-on-windows/</span></strong><span style="font-size: 14px;color: rgb(0, 122, 170);"><o:p></o:p></span></p><section style="letter-spacing: 0.578px;text-wrap: wrap;"><span style="font-family: 微软雅黑;font-size: 14px;letter-spacing: 0pt;text-indent: -22pt;">*&nbsp;感谢赵军老师对本篇文章的技术审校。</span></section><span id="OSC_h1_1"></span><h1 style="margin-bottom: 14px;font-size: 22px;text-wrap: wrap;outline: 0px;line-height: 1.4;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-align: start;background-color: rgb(255, 255, 255);"><strong><span style="font-size: 16px;color: rgb(0, 122, 170);">10 天倒计时！深圳站大会亮点前瞻！</span></strong></h1><p style="text-align: center;"><img class="rich_pages wxw-img" data-galleryid="" data-ratio="4.072222222222222" data-s="300,640" src="https://oscimg.oschina.net/oscnet/11da6aa5-0cbd-4b2c-ade4-dffc56e84fd1.jpg" data-type="jpeg" data-w="1080" style="" referrerpolicy="no-referrer"></p><section style="letter-spacing: 0.578px;text-wrap: wrap;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);font-size: 16px;"><section style="outline: 0px;"><section style="outline: 0px;"><section powered-by="xiumi.us" style="outline: 0px;text-align: center;line-height: 0;"><section style="margin-top: 8px;outline: 0px;"><span style="outline: 0px;letter-spacing: normal;caret-color: rgba(0, 0, 0, 0.9);font-size: 14px;color: rgb(136, 136, 136);visibility: visible;"><em style="outline: 0px;visibility: visible;"><em style="outline: 0px;color: rgb(34, 34, 34);font-family: -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.4352px;caret-color: rgb(51, 51, 51);visibility: visible;"><span style="outline: 0px;color: rgb(26, 26, 26);font-family: PingFangTC-Light;visibility: visible;">▲</span></em></em><em style="outline: 0px;visibility: visible;">点击</em></span><span style="outline: 0px;color: rgb(56, 115, 139);"><span style="outline: 0px;letter-spacing: normal;caret-color: rgba(0, 0, 0, 0.9);font-size: 14px;visibility: visible;"><em style="outline: 0px;visibility: visible;">「</em></span><strong style="outline: 0px;caret-color: rgba(0, 0, 0, 0.9);font-size: var(--articleFontsize);letter-spacing: 0.544px;visibility: visible;"><span style="outline: 0px;font-size: 14px;visibility: visible;"><em style="outline: 0px;visibility: visible;">阅读原文</em><em style="outline: 0px;visibility: visible;">」</em></span></strong></span><span style="outline: 0px;letter-spacing: normal;caret-color: rgba(0, 0, 0, 0.9);font-size: 14px;color: rgb(136, 136, 136);visibility: visible;"><em style="outline: 0px;visibility: visible;"><em style="outline: 0px;color: rgb(34, 34, 34);font-family: -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.4352px;caret-color: rgb(51, 51, 51);visibility: visible;"><span style="outline: 0px;color: rgb(26, 26, 26);font-family: PingFangTC-Light;visibility: visible;">▲</span></em></em></span></section></section></section></section></section><section style="margin-bottom: 8px;text-wrap: wrap;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);caret-color: rgba(0, 0, 0, 0.9);text-size-adjust: inherit;text-align: center;visibility: visible;line-height: 1.6em;"><span style="outline: 0px;letter-spacing: normal;color: rgb(56, 115, 139);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;letter-spacing: 1px;font-size: 14px;visibility: visible;"><em style="outline: 0px;visibility: visible;"><span style="outline: 0px;visibility: visible;letter-spacing: 0.544px;">跳转 LiveVideoStackCon 2023 深圳站，官网，了解更多信息</span></em></span></strong></span></section><p style="display: none;"><mp-style-type data-value="3"></mp-style-type></p></div><p style="color: #858585; font-size: 13px;">本文分享自微信公众号 - LiveVideoStack（livevideostack）。<br>如有侵权，请联系 support@oschina.cn 删除。<br>本文参与「<a href="https://www.oschina.net/sharing-plan" target="_blank">OSC 源创计划</a>」，欢迎正在阅读的你也加入，一起分享。</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 15 Nov 2023 08:22:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/3521704/blog/10143844</guid>
            <link>https://my.oschina.net/u/3521704/blog/10143844</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Rust 语言官方规范的制定进展]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">Rust 团队在几个月前接受了&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frust-lang.github.io%2Frfcs%2F3355-rust-spec.html" target="_blank">RFC 3355</a>&nbsp;<span style="color:#000000">的提议，决定开始制定 Rust 语言的官方规范。由 Eric（Rust Reference 的维护者）、Felix（Rust 语言团队）、Joel（Rust 基金会）和 Mara（RFC 的作者）来共同推动这项工作的进行。</span></p><p><span style="color:#000000">截至今日，Eric 四人代表规范团队<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.rust-lang.org%2Finside-rust%2F2023%2F11%2F15%2Fspec-vision.html" target="_blank">发文介绍了</a>这项工作的最新进展，以及后续的一些其他规划。</span></p><h4 style="text-align:start"><span><span><strong><span><span><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>Editor</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></span></span></h4><p style="text-align:start"><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>第一步是填补&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frust-lang.github.io%2Frfcs%2F3355-rust-spec.html%23role-of-the-editor" target="_blank">RFC 中规定的</a>「editor」角色。规范的协调和编辑职责被特意委托给 Rust 基金会，以确保工作的连续性。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:start"><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>由于没有面试到合适的人选，基金会选择考虑内部选择作为替代方案。作为其现有工作的一部分，该基金会的技术总监 Joel 表示愿意担任该职位的候选人。Eric、Felix 和 Mara 等也同意了这一提议，「因为他在行业标准和技术编辑方面拥有丰富的经验，并且与 Rust 项目关系密切」。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><h4 style="text-align:start"><strong style="color:#000000">规范团队（Specification Team）</strong></h4><p style="text-align:start"><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>由于相关工作不可能只由 editor 单人完成，因此还在围绕规范工作组建一个团队，即规范团队（Specification Team），作为语言团队的一个子团队。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:start"><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>最初成员包括：</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><ul><li>Felix Klock (team lead)</li><li>Mara Bos (team lead)</li><li>Joel Marcey (team member, editor)</li><li>Eric Huss (team member)</li></ul><h4 style="text-align:start"><strong style="color:#000000">利益相关者</strong>（<span><span><strong><span><span><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>Stakeholders</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></span></span>）</h4><p style="text-align:start"><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>将挑选并维护一份利益相关者名单，他们将担任顾问和审阅者。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>最初名单包括：</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><ul><li>Rust 语言团队全体成员</li><li>来自 types team 的一名或多名代表</li><li>operational semantics team 的一名或多名代表</li><li>来自 Ferrocene 的一名或多名代表（高可靠性/可用性，例如汽车行业。）</li><li>Formal Methods Research and Development 的一名或多名代表</li><li>Operating System Development 的一名或多名代表 (Rust for Linux; Microsoft)</li></ul><h4 style="text-align:start"><span><span><strong><span><span><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>Authority and Approval</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></span></span></h4><p style="text-align:start"><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>虽然规范团队负责撰写和编辑规范，但 Rust 语言的定义权仍属于相关团队，如语&nbsp;language team 和 library API team。这些团队应在必要时让其他团队/子团队参与进来，例如提出问题、提名问题进行​​讨论以及请求 FCP 批准关键决策。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><blockquote><p style="text-align:start"><span style="color:#000000">为了让规范团队能够在不受审批流程限制的情况下生成内容并进行迭代，我们将在工作存储库中制定规范草案。在一些工具的帮助下，我们将公开跟踪哪些项目仍需要团队批准，以及哪些项目受到利益相关者的公开关注。</span></p><p style="text-align:start"><span style="color:#000000">我们将所有变更分类为次要变更或重大变更。较小的更改是对规范团队来说似乎没有争议或微不足道的项目。例如，语言团队已经通过 FCP 批准的更改、排版和语法修复、初衷明确的澄清，以及类似的令人兴奋的更改。重大变更是那些可能有问题、重要或有争议的变更。规范团队和相关权威团队的任何成员以及任何规范利益相关者都可以将更改标记为重大更改。对规范的重大更改必须经过通常的批准流程（例如语言 FCP）才能出现在规范的已发布（非草案）版本中。</span></p><p style="text-align:start"><span style="color:#000000">语言和规范团队应努力拥有至少一名共同成员（例如 Felix）充当联络人，以帮助确保我们对次要变更与重大变更的理解保持同步。</span></p></blockquote><h4 style="text-align:start"><span><span><strong><span><span><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>目标</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></span></span></h4><p style="text-align:start"><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>规范团队的目标是创建和维护 Rust 规范。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>Rust 规范的目的是提供权威资源来确定哪些源文本是有效的 Rust 程序以及此类程序的行为方式。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:start"><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>一个理想的规范既要：</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><ul><li style="text-align:start"><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>为当前和未来的 Rust 版本定义给定 Rust 程序的语义的规范边界</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></li><li style="text-align:start"><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>提供与该规范实例相关的 Rust 版本特有的语义描述细节。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></li></ul><p style="text-align:start"><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>特定于版本的详细信息的规定可以直接在规范中提供，也可以通过委托给相关 Rust 团队拥有的其他文档来间接提供。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><h4 style="text-align:start"><span><span><span><span><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>渐进式开发</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></h4><p style="text-align:start"><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>既要为当前和未来的 Rust 版本提供规范性约束，又要描述当前 Rust 版本的细节。因此该团队决定将通过迭代和渐进的方式最大限度地提高其工作价值。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><blockquote><p style="text-align:start"><span style="color:#000000">我们预计该规范的早期版本将重点关注提供当前 Rust 版本的详细描述。这样的规范可以从现有的工作成果（如 Ferrocene 规范）中衍生出来，因为该规范明确侧重于提供特定 Rust 版本的详细说明。对这些特定版本描述的反馈意见将帮助我们了解如何以最佳方式在规范中制定规范性约束。</span></p><p style="text-align:start"><span style="color:#000000">由于我们前面提到的对当前 Rust 版本的关注，规范的早期版本可能会有一些空白，其中规定的界限比必要的更加不精确。例如，规定「不安全的 Rust 代码可能会导致未定义的行为」没有提供有关如何编写定义良好的不安全代码的指导。即使存在这种不精确性，规定的界限仍然可以提供有用的高级保证（例如「安全的 Rust 不会导致未定义的行为」）。规范的未来版本会添加更多说明性细节（例如「不安全的 Rust 代码在以下条件下不会导致未定义的行为：……」），直到我们达到所需的精度级别。</span></p></blockquote><h4 style="text-align:start"><strong><span><span><span><span><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>范围</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></h4><p style="text-align:start"><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>规范应至少涵盖 Rust 语法和语义的以下领域某些部分可能与特定后端或目标实现技术（如 inline asm）有内在联系。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><ul><li>Rust 的语法，通过&nbsp;Backus-Naur Form (BNF) 或 BNF&nbsp;的一些合理扩展来指定。</li><li><span style="background-color:#ffffff; color:#000000">Macro expansion</span><ul><li>Macro-by-example (<code>macro_rules</code>) transcription; Hygiene</li><li><code>cfg</code><span>&nbsp;</span>属性</li><li>Procedural macros; attributes 以及 derive</li></ul></li><li>路径和标识符解析 
  <ul><li>Modules</li></ul></li><li>静态语义 
  <ul><li>类型定义；类型表达式；布局</li><li>类型推断和类型检查；子类型化</li><li>生命周期和借用检查</li></ul></li><li>泛型；关联项解析和&nbsp;Trait solving</li><li>安全 Rust 的操作语义 
  <ul><li>绑定表格；匹配表达式；drop glue</li><li>值的移动和复制；借用</li><li>field projection; method dispatch 
    <ul><li>operator overloading</li></ul></li></ul></li><li>不安全 Rust 的操作语义 
  <ul><li>memory model</li><li>inline assembly</li></ul></li><li>Const evaluation</li><li>Crates 和 crate linkage</li></ul><p style="text-align:start"><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>此列表可随着时间的推移而扩展。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><h4 style="text-align:start"><span><span><strong><span><span><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>Presentation</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></span></span></h4><p style="text-align:start"><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>Rust 规范将是一个可公开访问的文档，类似于所有其他 Rust 文档（并具有相同的<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frust-lang%2Frust%2Fblob%2Fmaster%2FLICENSE-MIT" target="_blank">许可</a><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frust-lang%2Frust%2Fblob%2Fmaster%2FLICENSE-APACHE" target="_blank">条款</a>）。文本将以英语编写，并且仅使用规范本身定义的技术术语或在免费在线词典中具有明确定义的技术术语。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:start"><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>规范中的各个项目都可以被引用和命名：不仅可以在超链接中，而且在文本中（例如「[syntax.patterns.arm.5]」）。在可能的情况下，这些名称/项目引用应在不同版本的规范中持续存在。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:start"><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>规范的迭代应包括突出显示版本之间差异的 renderings。（参见 Ada 参考手册等。）</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:start"><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>Rust 规范将以鼓励志愿者贡献的格式进行维护，即使规范团队预计必须对每个贡献进行重新授权，以保持规范的一致性。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:start"><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>虽然完整性和正确性是首要任务，但团队将尽力使规范尽可能易于理解。理想情况下，任何 Rust 程序员都应该能够深入研究并找到他们可能遇到的任何语言问题的答案，而无需询问已经非常熟悉该文档的「language lawyer」。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><h4 style="text-align:start"><span><span><strong><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>发布节奏</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></span></span></h4><p style="text-align:start"><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>Rust 发布将独立于规范审批流程进行。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:start"><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>如果给定版本的规范尚未获得批准，则该版本将在没有相关规范的情况下发布。（不过，该团队可能会在后续提供与给定版本相关的规范。）</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:start"><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>这是设计使然。规范工作不得为项目增加需要克服的新障碍，以履行其现有义务，例如 6 周的发布周期。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:start"><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>团队愿景是最终能够达到自动交付更新规范的程度，并且能够按照项目的 6 周发布节奏完成。但是，从短期和中期来看，其希望能够自由地滞后于 6 周的发布节奏。当规范团队为以前未涉及的领域逐步添加新内容，或大幅缩小当前版本规范的规定范围时，滞后于 Rust 发布计划的能力可能会特别有用。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:start"><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>虽然规范开发过程不会阻止发布，但语言功能的更改应与规范的相关更新相结合。一旦开始发布与特定版本相关的规范，那么如果没有规范团队批准对当前草案规范的相应拉取请求，则对当前规范中记录的语言功能的更改就无法稳定。规范中未记录的语言功能的更改可以在不更新规范的情况下稳定下来，但需要规范团队成员确认相应的功能未记录。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:start"><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>通过强制执行新功能在稳定之前必须成为规范的一部分的规则，有望消除规范与 Rust 版本之间潜在滞后的主要根源。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><h4 style="text-align:start"><span><span><strong><span><span><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>下一步</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></span></span></h4><ul><li>为团队制定定期会议时间表。</li><li>确定利益相关者名单。</li><li>制作第一个「demo product」，供利益相关者审查。</li></ul></div>
                                    ]]>
            </description>
            <pubDate>Wed, 15 Nov 2023 04:03:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266889/spec-vision-rust</guid>
            <link>https://www.oschina.net/news/266889/spec-vision-rust</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[微软确认为 Windows 10 引入 AI 助手 Copilot]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><u><a href="https://www.oschina.net/news/265760">与之前的传言相印证</a></u>，微软宣布计划在 Windows 10 版本 22H2 中添加 AI 助手 Copilot。Copilot 将包含在 Windows 10 家庭版和专业版中。该更新的发布日期尚未公布，预计在不久的将来发布。</p><p><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.theverge.com%2F2023%2F11%2F16%2F23963576%2Fmicrosoft-copilot-windows-10-ai-features-release-preview" target="_blank">在一份新闻稿中</a></u>，<strong>微软表示在向 Windows 11 用户提供 Copilot 时收到了"很好的反馈"</strong>。与之前不为 Windows 10 22H2 提供主要功能升级的计划不同，微软现在决定"进行额外投资，以确保每个人都能从他们的 Windows PC 中获得最大价值，包括 Windows 中的 Copilot（预览版）"。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-6116c383b7c3be2c7b4c9bf35cc44cda3ea.png" referrerpolicy="no-referrer"></p><p>值得注意的是，<strong>并非所有 Windows 10 电脑都能运行 Copilot</strong>。根据微软的要求，<strong>您的设备必须配备 720p 显示屏（或更高分辨率）和至少 4GB 内存</strong>。此外，某些 Windows 10 版本将无法使用 Copilot，至少暂时无法使用。</p><p>由组织管理的版本为 22H2 的 Windows 10 专业版设备将不包含在 Copilot 在 Windows 中的初始推广中。版本 22H2 的 Windows 10 企业版和教育版设备也不会被纳入 Copilot in Windows 的初始推广范围。</p><p>微软所使用的措辞提供了一种可能性，即在某些时候，Copilot 可能会被添加到 Windows 10 的这些版本中。不过，Windows 10 的支持终止日期保持不变。该操作系统的生命周期将于 2025 年 10 月 14 日结束。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-e281fe6f97375c953a2fe93f6baebeb2533.png" referrerpolicy="no-referrer"></p><p>除了在不久的将来将 Copilot 引入 Windows 10 之外，微软还将添加一项新功能，让用户能够尽快使用 Copilot 以及其他可能的重要新功能和改进。微软将在"设置"的"Windows 更新"部分为"发布预览版"内部用户添加"一旦有最新更新，立即获取"切换选项。</p><p>微软补充说："这将在未来几个月内通过受控功能推出（CFR）的方式分阶段推出。"</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 15 Nov 2023 03:05:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266876</guid>
            <link>https://www.oschina.net/news/266876</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Unity 6 将于 2024 年发布，下一个 LTS 版本]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Unity 公司在今天举办的 Unite 2023 上<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftwitter.com%2Funity%2Fstatus%2F1725080342636192251" target="_blank">宣布</a></u>，2024 年将发布重大版本更新&nbsp;<strong>Unity 6</strong>，并表示其为下一个长期支持版本 (LTS)。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-a6955e1397b32b26e403a1c0cdd519dc6fa.png" referrerpolicy="no-referrer"></p><p>Unity 在大会上演示了全新的 Unity 6 引擎，并通过 Syncy Studios 采用 Unity 6 制作的《幻想王国（Fantasy Kingdom）》Demo 进行了<em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fyoutu.be%2FyggoHVLd01c" target="_blank">演示</a></u></em>，强调 Unity 6 的性能与画面改进。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-3fd8486e8d8b61d16fec201e834d5fd2ba3.png" referrerpolicy="no-referrer"></p><p><img height="1302" src="https://oscimg.oschina.net/oscnet/up-5d7463e58f86e8e5cae6592b2bfc92aa80c.png" width="2348" referrerpolicy="no-referrer"></p><p><img src="https://oscimg.oschina.net/oscnet/up-daf8fe34d603bc0c73addb3fda72e81707d.png" referrerpolicy="no-referrer"></p><p><img height="1316" src="https://oscimg.oschina.net/oscnet/up-220b5372a5f614527cfd3b4da88df5a3dc3.png" width="2360" referrerpolicy="no-referrer"></p><p><img src="https://oscimg.oschina.net/oscnet/up-9fa7c45bc268f01ef3b71f6aec5e2ae2bd2.png" referrerpolicy="no-referrer"></p><p><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.unity.com%2Fnews%2Funite-2023-keynote-game-development-unity-6" target="_blank">Unity 公司称</a></u> Unity 6 将带来显著的性能增强、提升创建多人游戏的速度，以及对 XR 设备更深入的支持。此外还解锁了新渲染功能的支持，实现了更高水平的图形保真度。</p><ul><li>以惊人的性能提供先进的视觉效果</li><li>加速多人游戏的创建和规模化</li><li>利用 AI 工具探索新的创意可能性</li><li>通过下一代移动功能和创新的 VR 设备支持让玩家随时随地接触</li></ul><p>Untiy&nbsp;提到的 AI 工具为 Sentis，允许开发者在&nbsp;Unity&nbsp;运行时导入&nbsp;AI&nbsp;模型，从而创建基于&nbsp;AI&nbsp;的 NPC。Sentis&nbsp;的独特之处在于 AI 模型最终在用户设备上本地运行，不需要开发者额外配置云服务器。</p><p>Unity 6 还将带来对全新 WebGPU 图形后端的初步支持。从 Unity 6 开始，玩家将能够在网络上的任何位置运行 Unity 游戏，包括在原生应用程序内或浏览器内的 Web 视图中。</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 15 Nov 2023 02:42:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266869/unity-6-unite-2023</guid>
            <link>https://www.oschina.net/news/266869/unity-6-unite-2023</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[pyvideotrans —— 视频翻译和配音工具]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff; color:#1f2328">这是一个视频翻译工具，可将一种语言的视频翻译为另一种语言和配音的视频。 语音识别基于<span>&nbsp;</span></span><code>openai-whisper</code><span style="background-color:#ffffff; color:#1f2328"><span>&nbsp;</span>离线模型、文字翻译使用</span><code>google|baidu|chatGPT</code><span style="background-color:#ffffff; color:#1f2328">翻译接口，文字合成语音使用<span>&nbsp;</span></span><code>Microsoft Edge tts</code><span style="background-color:#ffffff; color:#1f2328">。</span></p><p><img height="407" src="https://static.oschina.net/uploads/space/2023/1107/143850_zTPQ_4252687.png" width="500" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px; text-align:start"><strong>使用预编译版本方法</strong></p><ol start="0"><li><p>只可用于 win10 win11 系统 (编译版非最新，建议源码部署)</p></li><li><p>从 release 中下载最新版，解压，双击 sp.exe</p></li><li><p>原始视频目录：选择 mp4 视频；</p></li><li><p>输出视频目录：如果不选择，则默认生成在同目录下的<span>&nbsp;</span><code>_video_out</code></p></li><li><p>选择翻译：可选 google、百度、chatGPT，后两者需要点击「设置翻译 key」，设置相应信息</p></li><li><p>网络代理地址：如果你所在地区无法直接访问 google，需要在软件界面，网络代理，中设置代理，比如若使用 v2ray ，则填写<span>&nbsp;</span><code>http://127.0.0.1:10809</code>,若 clash，则填写<span>&nbsp;</span><code>http://127.0.0.1:7890</code>. 如果你修改了默认端口或使用的其他代理软件，则按需填写</p></li><li><p>视频原始语言：选择待翻译视频里的语言种类</p></li><li><p>翻译目标语言：选择希望翻译到的语言种类</p></li><li><p>选择配音：选择翻译目标语言后，可从配音选项中，选择配音角色；</p><p>硬字幕: 是指始终显示字幕，不可隐藏，如果希望网页中播放时也有字幕，请选择硬字幕嵌入</p><p>软字幕: 如果播放器支持字幕管理，可显示或者隐藏字幕，该方式网页中播放时不会显示字幕，某些国产播放器可能不支持,需要将生成的视频同名 srt 文件和视频放在一个目录下才会显示</p><p><strong>不能「既不嵌入字幕又不选择配音角色」</strong></p></li><li><p>文字识别模型: 选择 base/small/medium/large, 识别效果越来越好，但识别速度越来越慢，第一次将需要下载模型，默认 base,可以预先单独下载模型后，放到<span>&nbsp;</span><code>当前软件目录/models</code>目录下.</p><p><strong>模型单独下载地址</strong></p><p><a href="https://openaipublic.azureedge.net/main/whisper/models/65147644a518d12f04e32d6f3b26facc3f8dd46e5390956a9424a650c0ce22b9/tiny.pt">tiny 模型</a></p><p><a href="https://openaipublic.azureedge.net/main/whisper/models/ed3a0b6b1c0edf879ad9b11b1af5a0e6ab5db9205f891f668f8b0e6c6326e34e/base.pt">base 模型</a></p><p><a href="https://openaipublic.azureedge.net/main/whisper/models/9ecf779972d90ba49c06d968637d720dd632c55bbf19d441fb42bf17a411e794/small.pt">small 模型</a></p><p><a href="https://openaipublic.azureedge.net/main/whisper/models/345ae4da62f9b3d59415adc60127b97c714f32e89e936602e85993674d08dcb1/medium.pt">medium 模型</a></p><p><a href="https://openaipublic.azureedge.net/main/whisper/models/e4b87e7e0bf463eb8e6956e646f1e277e901512310def2c24bf0e11bd3c28e9a/large.pt">large 模型</a></p></li><li><p>配音语速：填写 -90 到+90 之间的数字，同样一句话在不同语言语音下，所需时间是不同的，因此配音后可能声画字幕不同步，可以调整此处语速，负数代表降速，正数代表加速播放。</p></li><li><p>自动加速: 如果翻译后的语音时长大于原时长，并且这里确认选中，那么将强制加速播放该片段，以缩小时长</p></li><li><p>静音片段: 填写 100 到 2000 的数字，代表毫秒，默认 500，即以大于等于 500ms 的静音片段为区间分割语音</p></li><li><p>点击，开始按钮，底部会显示当前进度和日志，右侧文本框内显示字幕</p></li></ol><blockquote><p>原始视频统一使用 mp4 格式，处理速度快，网络兼容性好</p><p>采用软合成字幕：字幕作为单独文件嵌入视频，可再次提取出，如果播放器支持，可在播放器字幕管理中启用或禁用字幕；</p><p>默认会在，原始视频目录，下生成同名的字幕文件，视频名.srt</p><p>对于无法识别的语音将直接复制原语音</p></blockquote></div>
                                                                ]]>
            </description>
            <pubDate>Wed, 15 Nov 2023 02:25:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/p/pyvideotrans</guid>
            <link>https://www.oschina.net/p/pyvideotrans</link>
        </item>
        <item>
            <title>
                <![CDATA[Gitee 推荐 | 基于一致性缓存的分布式事务应用框架 Zeze]]>
            </title>
            <description>
                <![CDATA[<p>What Is Zeze?</p><p>Zeze 是一个基于一致性缓存的分布式事务应用框架，详见 doc/zeze.docx</p>]]>
            </description>
            <pubDate>Wed, 15 Nov 2023 02:23:00 GMT</pubDate>
            <guid isPermaLink="false">https://gitee.com/e2wugui/zeze</guid>
            <link>https://gitee.com/e2wugui/zeze</link>
        </item>
        <item>
            <title>
                <![CDATA[每日一博 | 视觉 BEV 基本原理和方案解析]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>BEV(Bird’s-Eye-View) 是一种鸟瞰视图的传感器数据表示方法，它的相关技术在自动驾驶领域已经成了「标配」，纷纷在新能源汽车、芯片设计等行业相继量产落地。BEV 同样在高德多个业务场景使用，例如：<strong>高精地图地面要素识别</strong>、<strong>车道线拓扑构建</strong>、<strong>车端融合定位</strong>中都扮演了重要角色。如图 1‑1 所示：</p><p style="text-align:center"><img alt="" src="https://pic1.zhimg.com/80/v2-6877926e4fd053ef08b19049d51767f8_1440w.jpg" referrerpolicy="no-referrer"></p><p style="text-align:center">图 1‑1 BEV 在高德应用场景（仅列举部分）a) 高精底图 b) 地面要素识别 c) 车道线拓扑构建[1] d) 车端融合定位 (BEV 特征和底图匹配)[2]</p><p>本文分享的内容主要包括两个部分：视觉 BEV 基本原理、方案解析。</p><p><strong>1.BEV 基础</strong></p><p><strong>1.1.引言</strong></p><p>如图 1‑2 所示，BEV 具有如下优势：</p><p><strong>1) BEV 视图尺度变化小</strong>。在 PV 空间（即透视图，类似通常行车记录仪所采集的车辆前视图）中，物体近大远小，物体的大小和类别、远近都有关，而在 BEV 空间中，物体的大小只和类别有关；</p><p><strong>2) BEV 空间是决策友好空间</strong>。BEV 空间更接近 3D 真实空间的平面空间，而 PV 空间是真实物理世界在透视投影下的视图，以图 1‑2 的车道线举例，在真实世界中平行的两条车道线，在 BEV 空间下还是平行的，在 PV 空间却是相交的。相比之下，BEV 空间下的信息能更方便地被下游规控模块理解和使用。</p><p>本章将介绍 BEV 基础知识。首先介绍 BEV 的核心**「视角转换模块」的基本原理**，包括 2D-&gt;3D 和 3D-&gt;2D 两种路线，然后介绍 BEV 使用的<strong>魔法「可形变模块」</strong>，最后介绍<strong>BEV 方案中常用的损失函数</strong>。</p><p style="text-align:center"><img alt="" src="https://picx.zhimg.com/80/v2-a9e4e534bb87131577673960410b5677_1440w.jpg" referrerpolicy="no-referrer"></p><p style="text-align:center">图 1‑2 BEV 空间和 PV 空间的图像可视化，a) BEV 空间 b) PV 空间</p><p><strong>1.2.视角转换</strong></p><p>如 1.1 所述，在 BEV 空间下进行数据处理和操作具有尺度变化小、决策友好的优势，但原始的图像数据是在 PV 空间下的，如何将 PV 空间的数据转换到 BEV 空间或者是 3D 空间（有 3D 空间下的数据，将其拍扁就能转到 BEV 空间）呢？这就是视角转换模块要干的事。</p><p><strong>1.2.1. 2D-&gt;3D 转换模块</strong></p><p>2D-&gt;3D 转换模块基本思想是从 2D 像素或者特征出发去找 3D 空间下的对应表示，类似深度估计。下面介绍主流的 2D-&gt;3D 转换方法。</p><p>LSS(Lift-Splat-and-Shot)[3]是主流的 2D-&gt;3D 转换方法，如图 1‑3 所示，Lift 指对各相机的图像显式地估计特征点的深度分布，得到包含图像特征的视锥（点云）；Splat——结合相机内外参把所有相机的视锥（点云）分配到 BEV 空间的网格中，对每个格子中的多个视锥点进行 pooling 计算，形成 BEV 特征图；Shoot——用 task head 处理 BEV 特征图，输出感知结果。最后将 C 维的特征和 D 维的深度分布做外积，得到每个深度下的特征，深度概率越大，对应特征响应就越强。</p><p style="text-align:center"><img alt="" src="https://pica.zhimg.com/80/v2-43d4c71faf7a138576f6ba06458e22aa_1440w.png" referrerpolicy="no-referrer"></p><p style="text-align:center">图 1‑3 LSS 示意，每个特征点生成系列离散深度点，再为深度点生成特征[3]</p><p>Pseudo-LiDAR 是另一种 2D-&gt;3D 转换方法，如图 1‑4 所示，相比 LSS 为特征点预测一系列离散深度，Pseudo-LiDAR 直接预测深度图，每个像素都有且仅有一个深度。</p><p style="text-align:center"><img alt="" src="https://picx.zhimg.com/80/v2-53fd09fd23b24641939a1b729c035932_1440w.png" referrerpolicy="no-referrer"></p><p style="text-align:center">图 1‑4 Pseudo-LiDAR 示意，预测深度图，根据原始图像和深度图映射至 3D 空间[4]</p><p><strong>1.2.2. 3D-&gt;2D 转换模块</strong></p><p>3D-&gt;2D 转换模块基本思想是根据 3D 点查找对应的 2D 特征，类似 3D 空间投影到 PV 空间。下面介绍主流的 3D-&gt;2D 转换方法。</p><p>如图 1‑5 所示，将 3D 参考点根据成像原理投影到 PV 空间获取对应图像特征的方式可以认为是显式映射，这里的参考点可以使用预设的 BEV 空间的参考点，也可以使用网络生成。</p><p style="text-align:center"><img alt="" src="https://picx.zhimg.com/80/v2-cc01c8996b31566d84f9db31ce62143e_1440w.png" referrerpolicy="no-referrer"></p><p style="text-align:center">图 1‑5 显式映射[5]</p><p>相比显式映射，隐式映射不再通过投影映射，而是让网络自己学特征和 3D 座标的映射。如图 1‑6 所示，它先生成视锥空间下的一系列点，再转换到 3D 空间下，然后将提取的图像特征和 3D 点传入 encoder，encoder 处理后输出的就是带有 3D 座标信息的特征。</p><p style="text-align:center"><img alt="" src="https://picx.zhimg.com/80/v2-015461e8177d0ce576c5768410dcb80b_1440w.png" referrerpolicy="no-referrer"></p><p style="text-align:center">图 1‑6 隐式映射[6]</p><p><strong>1.3. 可形变模块</strong></p><p>要介绍的可形变模块有两种，<strong>可形变卷积</strong>和<strong>可形变注意力</strong>，可形变模块的作用更容易通过可形变卷积理解，所以先介绍可形变卷积。</p><p>可形变卷积是在卷积的基础上添加 offset 得到的，如图 1‑7 最左边的 a) 所示，普通卷积通过人工设计的 pattern 整合 pattern 内采样点的信息，其 pattern 设计好后就是固定的，可形变卷积，如图 1‑7 b) 所示，可以计算出每个采样点的 offset，采样点+offset 才是真实的采样点，使得卷积的 pattern 形式更加灵活，且一定程度上可学习。</p><p style="text-align:center"><img alt="" src="https://picx.zhimg.com/80/v2-25ee3e549c4c201ec23b27b2927ed7f0_1440w.jpg" referrerpolicy="no-referrer"></p><p style="text-align:center">图 1‑7 可形变卷积示意，a) 普通卷积 b) 可形变卷积[7]</p><p>如图 1‑8 所示，注意力机制需要通过 Q (query) 找到 K (key)，获得 K 的信息，这个过程也存在可变形的操作空间，让网络自己学习参考点的偏移量。</p><p style="text-align:center"><img alt="" src="https://pic1.zhimg.com/80/v2-ae9b641901f4aabf7cd99d5cbbea4c9d_1440w.png" referrerpolicy="no-referrer"></p><p style="text-align:center">图 1‑8 可变形注意力示意[8]</p><p><strong>1.4. 损失函数</strong></p><p>损失函数大部分与任务相关，且大同小异，这里集中介绍下后续方案解析需要用到的一些共性的损失函数。</p><p>Box Loss (包围盒损失函数) 是目标检测常用的几何损失函数，常采用 L1 Loss 的形式：</p><p><img alt="" src="https://pic1.zhimg.com/80/v2-7cd755ebefb004c45aa1d2f8ed391d17_1440w.jpg" referrerpolicy="no-referrer"></p><p>Focal Loss 是交叉熵损失函数的拓展，常用于分类问题。普通交叉熵损失函数在正负样本不均衡时表现不佳，因此引入平衡交叉熵。另外普通交叉熵损失函数对于难例无法重点学习，因此引入难例聚焦。最终形式为：</p><p><img alt="" src="https://picx.zhimg.com/80/v2-7b684f60a21cd467d25d4dc4a869d7d9_1440w.jpg" referrerpolicy="no-referrer"></p><p><strong>2. 视觉 BEV 方案解析</strong></p><p><strong>2.1. 引言</strong></p><p>第一章的内容为第二章的方案解析打下知识基础，接下来第二章主要解析具有代表性的视觉 BEV 方案，主要根据视角转换模块的类型对方案进行分类，首先介绍 2D-&gt;3D 的代表性方案，然后介绍 3D-&gt;2D 的代表性方案。</p><p><strong>2.2. 2D-&gt;3D 代表性方案解析</strong></p><p>2D-&gt;3D 的代表性 BEV 方案有<strong>BEVDet</strong>和<strong>BEVDepth</strong>，下面我们逐一介绍。</p><p><strong>2.2.1. BEVDet</strong></p><p>3D 目标检测跟踪由基于 PV 空间的方法主导，BEV 语义分割跟踪由基于 BEV 空间的方法主导，那么 PV 空间和 BEV 空间哪个更适合做自动驾驶感知呢？是否可以在同一的框架下做这些任务？作者为了回答这两个问题，提出了如图 2‑1 所示的基于 BEV 空间的 3D 目标检测框架，BEVDet。BEVDet 主要由四个部分组成，分别为图像特征编码器，视角转换模块，BEV 特征编码器，检测头。</p><p style="text-align:center"><img alt="" src="https://picx.zhimg.com/80/v2-1e60694f26d5751b2879bb3b208d9895_1440w.png" referrerpolicy="no-referrer"></p><p style="text-align:center">图 2‑1 BEVDet 框架[9]</p><p>图像特征编码器 (Image-view Encoder) 使用 2D Backbone 网络，如 ResNet、SwinTransformer 等，对输入的多视角图像做多尺度特征提取，得到多尺度特征。</p><p>视角转换模块 (View Transformer) 对输入的多视角图像特征使用 LSS 进行离散深度分布预测，获得 3D 视锥特征。</p><p>3D 视锥特征经过 pooling 操作拍扁到 BEV 空间，BEV 特征编码器 (BEV Encoder) 对 BEV 空间下的特征做多尺度特征提取，得到 BEV 特征。</p><p>最后送入检测头进行 3D 目标检测，分类监督使用的损失函数为 Focal loss，包围盒监督使用的损失函数为 L1 loss。</p><p><strong>2.2.2. BEVDepth</strong></p><p>作者实验发现 LSS 估计的深度替换成随机值影响不大，而采用真值深度对指标提升很大，因此得出 LSS 估计深度不准的结论，如图 2‑2 所示，在没有明确的深度监督的情况下，很难输出准确，泛化性强的深度感知结果，要想获得更好的检测结果，需要更准的深度，因此引入深度监督训练深度子网络。</p><p style="text-align:center"><img alt="" src="https://pica.zhimg.com/80/v2-81044f858876fb86f021267da764c5b7_1440w.png" referrerpolicy="no-referrer"></p><p style="text-align:center">图 2‑2 LSS 的深度预测结果和 BEVDepth 的深度预测结果的对比[10]</p><p>图 2‑3 是 BEVDepth 的框架，也能大致分为图像特征编码器，视角转换模块，BEV 特征编码器，检测头四个部分。图像特征编码模块大同小异，后续不再展开说明。</p><p style="text-align:center"><img alt="" src="https://pic1.zhimg.com/80/v2-a4ad33f6e9c360247e91b77932b374e5_1440w.png" referrerpolicy="no-referrer"></p><p style="text-align:center">图 2‑3 BEVDepth 框架[10]</p><p>视角转换模块的核心是深度估计，深度估计网络 DepthNet 的框架如图 2‑4 所示，首先使用 MLP 对相机内参进行特征化，然后用 SE (Squeeze-and-Extraction) 对图像特征进行通道加权，然后经过 3 个残差块以及可形变卷积，得到深度。深度再与图像特征进行外积，得到 3D 视锥特征。</p><p style="text-align:center"><img alt="" src="https://picx.zhimg.com/80/v2-fa606fad900b85501db561a22819eef8_1440w.png" referrerpolicy="no-referrer"></p><p style="text-align:center">图 2‑4 深度估计网络框架[10]</p><p>相机和用于监督的点云之间的外参可能不准，内参也可能不准，都会导致深度估计有偏，因此 BEV 特征编码器引入深度修正对 3D 视锥特征的深度进行修正，然后进行高效体素池化获得 BEV 特征。</p><p>检测头所使用的损失函数和 BEVDet 是一致的，不做赘述。深度监督使用的损失函数为二分类交叉熵。</p><p><strong>2.3. 3D-&gt;2D 代表性方案解析</strong></p><p>前面介绍的 2D-&gt;3D 的方案始终绕不过深度估计，深度估计难免会引入误差，换个思路，先有 3D 点，再根据 3D 点找 2D 特征的方式无需进行深度估计，避免了这部分误差。3D-&gt;2D 的代表性方案有 Detr3D、BEVFormer 和 PETR。</p><p><strong>2.3.1. Detr3D</strong></p><p>如图 2‑5 所示，Detr3D 是 Detr 在 3D 目标检测的扩展，也是使用 query 进行特征获取，然后进行检测。Detr3D 的图像特征编码器大同小异，不再赘述。</p><p style="text-align:center"><img alt="" src="https://pic1.zhimg.com/80/v2-aecefc46ac607f6b9cfe9a8c72d878cb_1440w.png" referrerpolicy="no-referrer"></p><p style="text-align:center">图 2‑5 Detr3D 框架[5]</p><p>特征转换模块首先使用 object query 生成 3D 参考点，将参考点投影到 PV 空间获取图像特征，获取到的图像特征能进一步优化物体的 3D 表征，得到物体的 3D 特征。</p><p>将特征送入检测头进行目标检测，可以得到一系列的检测结果。普遍地，大家会用 NMS 等后处理方式获得最终用于 Loss 计算的检测结果，如图 2‑6 所示，Detr3D 继承了 Detr 的做法，采用双边图匹配获得与真值一一对应的检测结果。损失函数与前面所述并未本质差异，不做赘述了。</p><p style="text-align:center"><img alt="" src="https://pic1.zhimg.com/80/v2-ecb60b683e331a3662bddef87ba2deed_1440w.png" referrerpolicy="no-referrer"></p><p style="text-align:center">图 2‑6 双边图匹配获得与真值一一对应的检测结果[11]</p><p><strong>2.3.2. BEVFormer</strong></p><p>行车过程有天然的时序特点，当前帧看到的车道线，在后续几帧大概率也是存在且可见的，如何利用这个时序特点是前述方案没有考虑的。BEVFormer 引入时序信息进一步增强 BEV 的检测能力。BEVFormer 的图像特征编码模块和前述大同小异，不做赘述。</p><p>BEVFormer 的核心是中间的 BEV 特征编码模块，BEV 特征编码模块的核心是时序自注意力 (Temporal Self-Attention) 和空间交叉注意力 (Spatial Cross-Attention)，时序注意力是为了利用历史帧 BEV 特征增强当前帧 BEV 特征，空间交叉注意力则是为了从图像特征获取信息。</p><p style="text-align:center"><img alt="" src="https://pica.zhimg.com/80/v2-f3bbe02646e521461ad36b8e2d4e159f_1440w.png" referrerpolicy="no-referrer"></p><p style="text-align:center">图 2‑7 BEVFormer 框架[12]</p><p>具体地，BEVFormer 的时序自注意力首先利用车辆运动信息将当前帧 BEV 特征和历史帧 BEV 特征进行对齐，然后再使用自注意力融合两者信息，由于车辆运动信息可能不准，不同时刻周围的可利用信息分布也不一致，所以具体使用的是图 2‑8 所示的可变形注意力机制。</p><p style="text-align:center"><img alt="" src="https://pica.zhimg.com/80/v2-4f86254bec875df7b4c8b27b3c7d1484_1440w.png" referrerpolicy="no-referrer"></p><p style="text-align:center">图 2‑8 时序可变形自注意力[12]</p><p>BEVFormer 的空间交叉注意力首先为每个格子在 Z 方向上采样 4 个值，得到一个格子上的 4 个参考点，然后与图像特征进行交叉注意力，获得图像特征。如图 2‑9 所示，这里的交叉注意力也采用可变形注意力机制。</p><p style="text-align:center"><img alt="" src="https://pic1.zhimg.com/80/v2-b65c4f416dedc9b27608bc42b4d8f0b2_1440w.png" referrerpolicy="no-referrer"></p><p style="text-align:center">图 2‑9 空间可变形交叉注意力[12]</p><p>损失函数的计算和 Detr3D 一致，不再赘述。</p><p><strong>2.3.3. PETR</strong></p><p>3D-&gt;2D 的方案一般都需要将参考点投影到 PV 空间，再取图像特征，PETR 避免了复杂的 3D-&gt;2D 转换及特征采样，直接让网络自己学习 2D-3D 的映射。PETR 的框架如图 2‑10 所示，包括图像特征编码器、3D 座标生成器、3D 特征编码器 (3D Position Encoder)、3D 特征解码器和检测头。图像特征编码器大同小异，不再赘述。</p><p style="text-align:center"><img alt="" src="https://picx.zhimg.com/80/v2-3bd06c74ccb12b7e4de4e16d317b7cb0_1440w.png" referrerpolicy="no-referrer"></p><p style="text-align:center">图 2‑10 PETR 框架[6]</p><p>3D 座标生成器生成视锥空间的一系列 3D 点，具体地，首先将相机视锥空间离散成大小为的网格，网格中的每一点用表示。3D 空间中一个点用表示。通过相机内外参可以将相机视锥空间转换到 3D 空间中。最后再进行归一化。</p><p>2D 图像特征和 3D 座标一起送入到 3D 特征编码器中，2D 特征进行卷积通道降维，3D 座标进行位置编码，然后将处理后的 2D 特征和 3D 座标编码整合，最后特征展平。</p><p style="text-align:center"><img alt="" src="https://pic1.zhimg.com/80/v2-ec98be180482b7f680c1edfa0471e7e0_1440w.png" referrerpolicy="no-referrer"></p><p style="text-align:center">图 2‑11 3D 特征编码器[6]</p><p>3D 特征解码器先在 3D 空间生成一系列随机点，再通过 MLP 生成可学习的 query，query 在 3D 特征中取特征，最后使用检测头进行检测。损失函数与 Detr3D 大同小异，不再赘述。</p><p><strong>3. 总结展望</strong></p><p>本文从 BEV 的基础出发，介绍了视觉 BEV 具有代表性的方案。视觉 BEV 已经展现出强大的场景理解能力。但是还存在很多值得探索且有挑战的方向[13]：</p><p>深度估计是 BEV 的核心，LSS、Pseudo-LiDAR、激光蒸馏、立体视觉或运动恢复结构等都是有前景的方向。</p><p>如何融合传感器的信息也是至关重要的，使用 Transformer 的自注意力、交叉注意力融合不同模态的特征已经被证明是个可行的方向。多模态中 CLIP 的文本-图像对也是个很有启发的思路。</p><p>泛化性是深度学习亘古不变的话题和努力的方向，在一个设备（数据）上训练好的模型在另一个设备（数据）表现是否一样好。每个设备都要付出训练成本是让人难以接受的。如何将模型和设备解耦在未来一段时间都将是重要的研究方向。</p><p>大模型或者基础模型已经在不同领域上取得令人印象深刻的结果，并一举成为 SOTA。在 BEV 感知中如何利用大模型中丰富的知识，在更多的任务上取得更好的效果，这将会逐步引起人们的重视。</p><p><strong>4. 参考文献</strong></p><p>[1] Bencheng Liao, Shaoyu Chen, Xinggang Wang, et al. Maptr: Structured modeling and learning for online vectorized hd map construction[J]. arXiv preprint arXiv:2208.14437,2022,</p><p>[2] Yuzhe He, Shuang Liang, Xiaofei Rui, et al. EgoVM: Achieving Precise Ego-Localization using Lightweight Vectorized Maps[J]. arXiv preprint arXiv:2307.08991,2023,</p><p>[3] Jonah Philion and Sanja Fidler. Lift, splat, shoot: Encoding images from arbitrary camera rigs by implicitly unprojecting to 3d[A]. Springer: 194-210</p><p>[4] Yan Wang, Wei-Lun Chao, Divyansh Garg, et al. Pseudo-lidar from visual depth estimation: Bridging the gap in 3d object detection for autonomous driving[A]. 8445-8453</p><p>[5] Yue Wang, Vitor Campagnolo Guizilini, Tianyuan Zhang, et al. Detr3d: 3d object detection from multi-view images via 3d-to-2d queries[A]. PMLR: 180-191</p><p>[6] Yingfei Liu, Tiancai Wang, Xiangyu Zhang, et al. Petr: Position embedding transformation for multi-view 3d object detection[A]. Springer: 531-548</p><p>[7] Jifeng Dai, Haozhi Qi, Yuwen Xiong, et al. Deformable convolutional networks[A]. 764-773</p><p>[8] Xizhou Zhu, Weijie Su, Lewei Lu, et al. Deformable detr: Deformable transformers for end-to-end object detection[J]. arXiv preprint arXiv:2010.04159,2020,</p><p>[9] Junjie Huang, Guan Huang, Zheng Zhu, et al. Bevdet: High-performance multi-camera 3d object detection in bird-eye-view[J]. arXiv preprint arXiv:2112.11790,2021,</p><p>[10] Yinhao Li, Zheng Ge, Guanyi Yu, et al. BEVDepth: Acquisition of Reliable Depth for Multi-View 3D Object Detection[J]. Proceedings of the AAAI Conference on Artificial Intelligence,2023,37(2): 1477-1485</p><p>[11] Nicolas Carion, Francisco Massa, Gabriel Synnaeve, et al. End-to-end object detection with transformers[A].Springer: 213-229</p><p>[12] Zhiqi Li, Wenhai Wang, Hongyang Li, et al. Bevformer: Learning bird’s-eye-view representation from multi-camera images via spatiotemporal transformers[A].Springer: 1-18</p><p>[13] Hongyang Li, Chonghao Sima, Jifeng Dai, et al. Delving into the Devils of Bird's-eye-view Perception: A Review, Evaluation and Recipe[J]. arXiv preprint arXiv:2209.05324,2022,</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 15 Nov 2023 02:16:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/amaptech/blog/10143491</guid>
            <link>https://my.oschina.net/amaptech/blog/10143491</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Dromara 社区新晋开源项目 - Akali(阿卡丽)，轻量化的热点&降级处理框架！]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><img height="383" src="https://oscimg.oschina.net/oscnet/up-be8fcabf525c0668386e7be6a812d46264e.png" width="900" referrerpolicy="no-referrer"></p><h2>前言</h2><p>Dromara 社区再添一个成员项目！</p><p>今天为大家介绍的是——Akali。</p><p>它轻量小巧，来无影去无踪，不足 500 行代码，却能解决高流量场景中主要的问题：热点处理和降级处理。</p><h2>介绍</h2><p>Akali（阿卡丽）是一个轻量级本地化热点检测/降级框架，适用于大流量场景，可轻松解决业务中超高流量的并发查询等场景。并且接入和使用极其简单，10 秒钟即可接入使用！</p><p>Akali 框架的理念就是小巧，实用，丝血团战，满血退场，所到之处，皆为虚无。</p><p>Gitee：<a href="https://gitee.com/dromara/Akali">https://gitee.com/dromara/Akali</a></p><p>Github：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fbryan31%2FAkali" target="_blank">https://github.com/bryan31/Akali</a></p><p>官方网站：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fakali.yomahub.com%2F" target="_blank">https://akali.yomahub.com/</a></p><h2>使用</h2><p>引入依赖：</p><pre><code>&lt;dependency&gt;
  &lt;groupId&gt;com.yomahub&lt;/groupId&gt;
  &lt;artifactId&gt;akali&lt;/artifactId&gt;
  &lt;version&gt;1.0.1&lt;/version&gt;
&lt;/dependency&gt;
</code></pre><h2>对任意方法进行热点处理</h2><p>只需要加上<code>@AkaliHot</code>这个标注，任意方法均可以获得热点检测，并在热点期间用热点数据进行返回，在热点过后，又会自动调用原本业务逻辑。</p><p>举例：比如有一个商品查询的业务，传入 SkuCode，返回商品信息。当某个商品进行促销时，访问的量就会增加，但是对于相同的 SkuCode 而言，其短时间窗口内返回的 SkuInfo 是一致的，我们的目标是当某个商品 sku 被大量查询时，框架能够在短时间内把这个商品 sku 提为热点数据，并通过对其进行缓存返回来降低对下游业务的压力。而当热点值过后，框架又能够自动摘除这个热点值，使其按照原有方式进行查询。</p><p>其本质相当于实时的监测了热点，并对其热点数据做了一个短时间内的缓存。</p><p>以下示例代表了：当相同的 skuCode 在 5 秒内超过 50 次调用时，会自动把这个 skuCode 的值提为热点，并用最后一次的返回值直接返回。当调用低于 5 秒 50 次调用时，框架会自动的摘除掉这个热点。使其正常的调用你原有代码进行逻辑计算并返回。这一切都是自动的。</p><pre><code>@AkaliHot(grade = FlowGradeEnum.FLOW_GRADE_QPS, count = 50, duration = 5)
public SkuInfo getSkuInfo(String skuCode){
  //do your biz and return sku info
}
</code></pre><p>其中<code>grade</code>参数除了有以<code>QPS</code>作为维度统计，还有以<code>Thread</code>个数作为维度统计。比如：</p><pre><code>@AkaliHot(grade = FlowGradeEnum.FLOW_GRADE_THREAD, count = 50, duration = 5)
public SkuInfo getSkuInfo(String skuCode){
  //do your biz and return sku info
}
</code></pre><p>这就代表了，如果某个 skuCode 在 5 秒之内有超过 50 个线程正在运行，那么就提为热点，并用热点数据直接返回。</p><p>对开源项目比较熟悉的同学看到这肯定想到了京东的框架-<code>hotkey</code>，<code>Akali</code>不同于<code>hotkey</code>，完全是本地运行的，不依赖于服务端，而且接入比<code>hotkey</code> 方便多了。性能完全相当于<code>hotkey</code>。</p><h2>对任意方法进行降级</h2><p>只需要加上<code>@AkaliFallback</code>注解。任意方法均可获得降级功能。</p><p>举例：某一个方法需要调用外部的接口，但是外部的接口性能不佳，耗时高。当并发一高时，线程池就会吃满，线程池队列也会逐渐堆积从而导致超时，或者丢弃，严重时会拖垮整个系统。</p><p>这时，我们只要对这个方法加上<code>@AkaliFallback</code>标注，即可解决。</p><pre><code>@AkaliFallback(grade = FlowGradeEnum.FLOW_GRADE_THREAD, count = 100)
public String sayHi(String name){
  return "hi,"+name;
}

public String sayHiFallback(String name){
  return "fallback str";
}
</code></pre><p>以上注解表示了，当这个方法的同时运行的线程超过 100 个时，触发降级，降级会自动调用<code>原方法名+Fallback</code>方法名 (并且参数要一致)，当降级触发后会直接返回<code>fallback str</code>，当线程数小于 100 时，框架也会自动摘除降级，还是输出<code>hi,xxxx</code>。</p><p>如果你的类中没有定义 fallback 方法，那么触发降级时会报错，当然你可以在降级方法中去抛错，来让上游系统知道你这个方法已经达到了瓶颈。</p><h2>注意事项</h2><p>Akali 只针对于 Springboot，Spring 环境，并且所有标注了<code>@AkaliHot</code>或者<code>@AkaliFallback</code>的类一定得注册到 spring 上下文中。</p><p>Akali 在 springboot 中会自动扫描所有标注的类，您无需做任何配置，在 spring 中，你需要配置：</p><pre><code>&lt;bean class="com.yomahub.akali.strategy.FallbackStrategy"/&gt;
&lt;bean class="com.yomahub.akali.strategy.MethodHotspotStrategy"/&gt;
&lt;bean class="com.yomahub.akali.spring.AkaliScanner"/&gt;
</code></pre><h2>最后</h2><p>如果大家感兴趣的话，请在 Gitee 上为 Akali 点上小星星哦。</p><p>Gitee：<a href="https://gitee.com/dromara/Akali">https://gitee.com/dromara/Akali</a></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 15 Nov 2023 01:09:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266848</guid>
            <link>https://www.oschina.net/news/266848</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
    </channel>
</rss>
