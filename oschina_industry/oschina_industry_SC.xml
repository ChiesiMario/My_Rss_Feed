<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[开源中国-综合资讯]]>
        </title>
        <link>https://www.oschina.net/news/industry</link>
        <atom:link href="https://rsshub.app/oschina/news/industry" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[开源中国-综合资讯 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Sat, 23 Sep 2023 09:32:43 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[尤雨溪：高质量中文文档的重要性]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://www.oschina.net/question/4489239_2331019" _blank"="">
数据技术都能四世同堂，凭什么开发 30 岁就要被干掉？ 
<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p><span style="color:#000000"><span style="background-color:#ffffff">Vue.js 和 Vite 的创建者</span>尤雨溪在最近的一次<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.thisdot.co%2Fblog%2Fcreator-of-vue-js-and-vite-evan-yous-journey-from-google-engineer-to-open%2F" target="_blank">访谈中</a>，谈到了自己<span style="background-color:#ffffff">成为独立开源开发人员的历程；重点介绍了向全职开源工作的过渡、Vue.js 的成长以及他对未来的期望。</span></span></p><p><span style="color:#000000"><img height="282" src="https://oscimg.oschina.net/oscnet/up-98b89dc57ad7b224f597857decc86eb4ee9.png" width="500" referrerpolicy="no-referrer"></span></p><p><span style="color:#000000">在分享了成为一名全职开源开发人员的历程以及促进这一转变的挑战和因素时，尤雨溪将自己的成功归功于运气和坚持的结合。他详细阐述了自己开发 Vue.js 的经历，强调了保持对解决一些有趣的问题时的热情；并概述了 API 驱动开发的方法，即在实现之前设计事物的工作方式。</span></p><p><span style="color:#000000">尤雨溪解释称，Vue.js 最初是通过 Hacker News 和中国社交网络等平台吸引的用户，而这主要得益于它自下而上的方法和用户友好的文档；与 React 和 Angular 等大型框架形成了鲜明对比。</span></p><p><span style="color:#000000">他认为，Vue.js 的发展历程中的一大转折点是其在 Laravel 社区中的崭露头角，正是因此才巩固了 Vue.js 作为生产项目可靠框架的声誉。关于 Vue.js 对后端开发人员的吸引力，尤雨溪则认为，主要得益于该项目与传统后端框架的无缝集成。</span></p><p><span style="color:#000000">访谈内容还涉及了&nbsp;<span style="background-color:#ffffff">Vue.js 在不同地区（尤其是亚洲）的采用情况。尤雨溪将项目在这些地区的成功归功于自己对中国社交网络的积极参与，同时还强调了高质量中文文档的重要性。</span></span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000"><span style="background-color:#ffffff">此外，尤雨溪还分享了他在 Vue.js 早期阶段的工作节奏和满足感，并将其与项目发展过程中所需的更复杂的决策过程进行了对比。</span></span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000"><span style="background-color:#ffffff">更多详情可<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fyoutu.be%2FweaYWoL_ymI" target="_blank">查看完整视频</a>。</span></span></p></div>
                                    ]]>
            </description>
            <pubDate>Sat, 23 Sep 2023 04:11:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/259202</guid>
            <link>https://www.oschina.net/news/259202</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[英特尔参与 CentOS Stream 项目]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://www.oschina.net/question/4489239_2331019" _blank"="">
数据技术都能四世同堂，凭什么开发 30 岁就要被干掉？ 
<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p><span style="color:#000000">红帽官方发布<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FgAmZSf447gZEqd8n3tGd_A" target="_blank">公告</a>欢迎英特尔参与进 CentOS Stream 项目，并表示「这一举措不仅进一步深化了我们长期的合作关系，也构建在英特尔已经在 Fedora 项目中积极贡献的基础之上。」</span></p><p><img height="250" src="https://oscimg.oschina.net/oscnet/up-de0d91800dda02f5f04460a8e28f9ef7085.png" width="500" referrerpolicy="no-referrer"></p><p><span style="color:#000000">目前，CentOS Stream 共包括以下特别兴趣小组（SIG）：</span></p><ul><li><p><span style="color:#000000">指令集架构（ISA）特别兴趣小组（SIG）致力于聚焦于 CentOS Stream 中最新的 ISA 基线和工具链技术，以提高性能并减少碳足迹为最终目标。</span></p></li><li><p><span style="color:#000000">虚拟化 SIG 旨在为最新的虚拟化安全功能提供全面支持，确保开箱即用，其中包括像 Intel® Trust Domain Extensions（Intel® TDX）这样的保密计算能力。</span></p></li><li><p><span style="color:#000000">超大规模 SIG 旨在支持和构建适用于大规模基础设施的 CentOS Stream 部署用例，以满足不同规模的需求。</span></p></li></ul><p>英特尔将为这些小组做出贡献。「<span style="background-color:#ffffff; color:rgba(0, 0, 0, 0.9)">通过积极频繁地为 CentOS Stream 贡献，红帽和英特尔能够更有效地支持 RHEL 中最新的硬件架构进步，尤其是那些满足我们用户新兴关键需求的进展。</span>」</p><p><span>英特尔公司系统软件工程副总裁兼总经理 Mark Skarpness 表示，该公司的目标是借助 CentOS Stream 和 Fedora，为红帽生态系统的所有上游贡献提供更强大的英特尔平台支持。</span></p><p><span style="background-color:#ffffff; color:rgba(0, 0, 0, 0.9)">除了为 CentOS Stream 贡献外，红帽与英特尔的合作涵盖了多个领域，包括 5G 网络、边缘计算、人工智能（AI）和系统安全。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Sat, 23 Sep 2023 03:24:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/259196</guid>
            <link>https://www.oschina.net/news/259196</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[NExT-GPT —— 任意对任意多模态大语言模型]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="text-align:start">NExT-GPT 是一个端到端通用的任意多模态大型语言模型（MM-LLM）系统。开发团队将 LLM 与多模态适配器和不同的扩散解码器连接起来，使 NExT-GPT 能够感知输入并以文本、图像、视频和音频的任意组合生成输出。</p><p style="text-align:start">通过利用现有训练有素的高性能编码器和解码器，NExT-GPT 仅使用某些投影层的少量参数（1％）进行调整，这不仅有利于低成本训练，而且便于方便地扩展到更多潜在的方式。</p><p style="text-align:start">此外还引入了模态切换指令调整（MosIT）并为 MosIT 手动策划高质量的数据集，在此基础上，NExT-GPT 被赋予了复杂的跨模态语义理解和内容生成的能力。</p><p style="text-align:start"><span><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>NExt-GPT 建立在现有预训练的 LLM、多模态编码器和 SoTA 扩散模型之上，具有足够的端到端指令调整。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:start"><span><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span><img alt="" height="255" src="https://static.oschina.net/uploads/space/2023/0922/152547_Wq8a_4252687.png" width="500" referrerpolicy="no-referrer"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><ul><li><strong>多模态编码阶段。</strong>利用已建立的编码器以各种模式对输入进行编码，其中这些表示通过投影层投影成法学硕士可以理解的类似语言的表示。</li><li><strong>LLM 理解和推理阶段。</strong>利用现有的开源法学硕士作为核心来处理输入信息以进行语义理解和推理。LLM 不仅直接生成文本标记，还生成独特的「模态信号」标记，这些标记充当指示解码层是否相应输出模态内容以及输出什么模态内容的指令。</li><li><strong>多模式生成阶段。</strong>从 LLM（如果有）接收具有特定指令的多模态信号，基于 Transformer 的输出投影层将信号标记表示映射为后续多模态解码器可以理解的表示形式。</li></ul><p><img height="138" src="https://static.oschina.net/uploads/space/2023/0922/152430_MsEF_4252687.png" width="500" referrerpolicy="no-referrer"></p><p><img alt="" height="599" src="https://static.oschina.net/uploads/space/2023/0922/152456_Uqt0_4252687.png" width="500" referrerpolicy="no-referrer"></p><p><em>NExT-GPT 推理过程。灰色表示模块已停用。</em></p></div>
                                                                ]]>
            </description>
            <pubDate>Sat, 23 Sep 2023 03:16:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/p/next-gpt</guid>
            <link>https://www.oschina.net/p/next-gpt</link>
        </item>
        <item>
            <title>
                <![CDATA[Gitee 推荐 | 云原生分布式操作系统 KubeSphere]]>
            </title>
            <description>
                <![CDATA[<p align="center"><a href="https://gitee.com/link?target=https%3A%2F%2Fkubesphere.com.cn%2F"><img src="https://gitee.com/kchstack/kubesphere/raw/master/docs/images/kubesphere-icon.gif" alt="banner" width="200px" referrerpolicy="no-referrer"></a></p><p align="center"><b>适用于<i> Kubernetes 多云、数据中心和边缘 </i>管理的容器平台</b></p><p align="center"><a href="https://gitee.com/link?target=https%3A%2F%2Fgoreportcard.com%2Freport%2Fgithub.com%2Fkubesphere%2Fkubesphere"><img src="https://goreportcard.com/badge/github.com/kubesphere/kubesphere" alt="A+" referrerpolicy="no-referrer"></a><a href="https://gitee.com/link?target=https%3A%2F%2Fhub.docker.com%2Fr%2Fkubesphere%2Fks-installer"><img src="https://img.shields.io/docker/pulls/kubesphere/ks-installer" referrerpolicy="no-referrer"></a><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fkubesphere%2Fkubesphere%2Fissues%3Fq%3Dis%253Aissue%2Bis%253Aopen%2Bsort%253Aupdated-desc%2Blabel%253A%2522good%2Bfirst%2Bissue%2522"><img src="https://img.shields.io/github/issues/kubesphere/kubesphere/good%20first%20issue?logo=github" alt="good first issue" referrerpolicy="no-referrer"></a><a href="https://gitee.com/link?target=https%3A%2F%2Ftwitter.com%2Fintent%2Ffollow%3Fscreen_name%3DKubeSphere"><img src="https://img.shields.io/twitter/follow/KubeSphere?style=social" alt="follow on Twitter" referrerpolicy="no-referrer"></a><a href="https://gitee.com/link?target=https%3A%2F%2Fjoin.slack.com%2Ft%2Fkubesphere%2Fshared_invite%2Fzt-1ilxbsp39-t4ES4xn5OI0eF5hvOoAhEw"><img src="https://img.shields.io/badge/Slack-2000%2B-blueviolet?logo=slack&amp;logoColor=white" referrerpolicy="no-referrer"></a><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.youtube.com%2Fchannel%2FUCyTdUQUYjf7XLjxECx63Hpw"><img src="https://img.shields.io/youtube/channel/subscribers/UCyTdUQUYjf7XLjxECx63Hpw?style=social" referrerpolicy="no-referrer"></a></p><hr><h2><a id="user-content-kubesphere-是什么" class="anchor" href="https://gitee.com/kchstack/kubesphere#kubesphere-%E6%98%AF%E4%BB%80%E4%B9%88"></a>KubeSphere 是什么</h2><blockquote><p><a href="https://gitee.com/kchstack/kubesphere/blob/master/README.md">English</a> | 中文</p></blockquote><p><a href="https://gitee.com/link?target=https%3A%2F%2Fkubesphere.io%2Fzh%2F">KubeSphere</a> 愿景是打造一个以 <a href="https://gitee.com/link?target=https%3A%2F%2Fkubernetes.io%2Fzh%2F">Kubernetes</a> 为内核的 <strong>云原生分布式操作系统</strong>，它的架构可以非常方便地使第三方应用与云原生生态组件进行即插即用（plug-and-play）的集成，支持云原生应用在多云与多集群的统一分发和运维管理。 KubeSphere 也是一个多租户容器平台，提供全栈的 IT 自动化运维的能力，简化企业的 DevOps 工作流。KubeSphere 提供了运维友好的向导式操作界面，帮助企业快速构建一个强大和功能丰富的容器云平台，详情请参阅 <a href="https://gitee.com/kchstack/kubesphere#%E5%B9%B3%E5%8F%B0%E5%8A%9F%E8%83%BD">平台功能</a> 。</p><p>下面的屏幕截图让我们进一步了解 KubeSphere，关于 KubeSphere 更详细的介绍与说明请参阅 <a href="https://gitee.com/link?target=https%3A%2F%2Fkubesphere.io%2Fzh%2Fdocs%2Fintroduction%2Fwhat-is-kubesphere%2F">什么是 KubeSphere</a> 。</p><table><tbody><tr><td width="50%" align="center"><b>工作台</b></td><td width="50%" align="center"><b>项目资源</b></td></tr><tr><td><img src="https://gitee.com/kchstack/kubesphere/raw/master/docs/images/console.png" referrerpolicy="no-referrer"></td><td><img src="https://gitee.com/kchstack/kubesphere/raw/master/docs/images/project.png" referrerpolicy="no-referrer"></td></tr><tr><td width="50%" align="center"><b>CI/CD 流水线</b></td><td width="50%" align="center"><b>应用商店</b></td></tr><tr><td><img src="https://gitee.com/kchstack/kubesphere/raw/master/docs/images/cicd.png" referrerpolicy="no-referrer"></td><td><img src="https://gitee.com/kchstack/kubesphere/raw/master/docs/images/app-store.png" referrerpolicy="no-referrer"></td></tr></tbody></table><h2><a id="user-content-demo-环境" class="anchor" href="https://gitee.com/kchstack/kubesphere#demo-%E7%8E%AF%E5%A2%83"></a>Demo 环境</h2><p>🎮 <a href="https://gitee.com/link?target=https%3A%2F%2Fkubesphere.cloud%2Fconsole%2Fmanaged-cluster%2F">KubeSphere Cloud 轻量集群</a>为您提供免费、稳定且开箱即用的 KubeSphere 托管集群服务。注册账号并登录后，可在 5 秒内新建一个安装 KubeSphere 的 K8s 集群，进而进入 KubeSphere 交互式体验各项功能。</p><p>🖥 您还可以通过 <a href="https://gitee.com/link?target=https%3A%2F%2Fyoutu.be%2FYxZ1YUv0CYs">Demo 视频</a>快速了解使用操作。</p><h2><a id="user-content-平台功能" class="anchor" href="https://gitee.com/kchstack/kubesphere#%E5%B9%B3%E5%8F%B0%E5%8A%9F%E8%83%BD"></a>平台功能</h2><details><summary><b>🕸 部署 Kubernetes 集群</b></summary>
  支持在任何基础设施上部署 Kubernetes，支持在线安装和离线安装，<a href="https://gitee.com/link?target=https%3A%2F%2Fkubesphere.io%2Fzh%2Fdocs%2Finstalling-on-linux%2Fintroduction%2Fintro%2F">了解更多</a>。
  </details><details><summary><b>🔗 Kubernetes 多集群管理</b></summary>
  提供集中控制平台来管理多个 Kubernetes 集群，支持将应用程序发布到跨不同云供应商的多个 k8s 集群上。
  </details><details><summary><b>🤖 Kubernetes DevOps</b></summary>
  提供基于 GitOps 的 CD 方案，底层支持 Argo CD，可实时统计 CD 状态。结合主流 CI 引擎 Jenkins，让 DevOps 更加易用。<a href="https://gitee.com/link?target=https%3A%2F%2Fkubesphere.io%2Fzh%2Fdevops%2F">了解更多</a>。
  </details><details><summary><b>🔎 云原生可观测性</b></summary>
  支持多维度监控、事件和审计日志；内置多租户日志查询和收集，告警和通知，<a href="https://gitee.com/link?target=https%3A%2F%2Fkubesphere.io%2Fzh%2Fobservability%2F">了解更多</a>。
  </details><details><summary><b>🧩 基于 Istio 的微服务治理</b></summary>
  为分布式微服务应用程序提供细粒度的流量管理、可观测性和服务跟踪，支持可视化的流量拓扑，<a href="https://gitee.com/link?target=https%3A%2F%2Fkubesphere.io%2Fzh%2Fservice-mesh%2F">了解更多</a>。
  </details><details><summary><b>💻 应用商店</b></summary>
  为基于 Helm 的应用程序提供应用商店，并在 Kubernetes 平台上提供应用程序生命周期管理功能，<a href="https://gitee.com/link?target=https%3A%2F%2Fkubesphere.io%2Fzh%2Fdocs%2Fpluggable-components%2Fapp-store%2F">了解更多</a>。
  </details><details><summary><b>💡 Kubernetes 边缘节点管理</b></summary>
  基于 <a href="https://gitee.com/link?target=https%3A%2F%2Fkubeedge.io%2Fzh%2F">KubeEdge</a> 实现应用与工作负载在云端与边缘节点的统一分发与管理，解决在海量边、端设备上完成应用交付、运维、管控的需求，<a href="https://gitee.com/link?target=https%3A%2F%2Fkubesphere.io%2Fzh%2Fdocs%2Fpluggable-components%2Fkubeedge%2F">了解更多</a>。
  </details><details><summary><b>📊 多维度计量与计费</b></summary>
  提供基于集群与租户的多维度资源计量与计费的监控报表，让 Kubernetes 运营成本更透明，<a href="https://gitee.com/link?target=https%3A%2F%2Fkubesphere.io%2Fzh%2Fdocs%2Ftoolbox%2Fmetering-and-billing%2Fview-resource-consumption%2F">了解更多</a>。
  </details><details><summary><b>🗃 支持多种存储和网络解决方案</b></summary>
  支持 GlusterFS、CephRBD、NFS、LocalPV ，并提供多个 CSI 插件对接公有云与企业级存储。提供 Kubernetes 在裸机、边缘和虚拟化中的负载均衡器实现 <a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fkubesphere%2Fopenelb">OpenELB</a> 。提供网络策略和容器组 IP 池管理，支持 Calico、Flannel、Kube-OVN。
  </details><details><summary><b>🏘 多租户与统一鉴权认证</b></summary>
  提供统一的认证鉴权与细粒度的基于角色的授权系统，支持对接 AD/LDAP 。
  </details><details><summary><b>🧠 GPU 工作负载调度与监控</b></summary>
  支持可视化创建 GPU 工作负载，支持 GPU 监控，同时还支持对 GPU 资源进行租户级配额管理。
  </details><h2><a id="user-content-架构说明" class="anchor" href="https://gitee.com/kchstack/kubesphere#%E6%9E%B6%E6%9E%84%E8%AF%B4%E6%98%8E"></a>架构说明</h2><p>KubeSphere 使用前后端分离的架构，将 <a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fkubesphere%2Fconsole">前端</a> 与 <a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fkubesphere%2Fkubesphere">后端</a> 分开。后端的各个功能组件可通过 REST API 对接外部系统。</p><p><img src="https://gitee.com/kchstack/kubesphere/raw/master/docs/images/architecture.png" alt="Architecture" referrerpolicy="no-referrer"></p><hr><h2><a id="user-content-最新版本" class="anchor" href="https://gitee.com/kchstack/kubesphere#%E6%9C%80%E6%96%B0%E7%89%88%E6%9C%AC"></a>最新版本</h2><p>🎉 KubeSphere 3.3.2 全新发布！！多项功能与体验优化，带来更好的产品体验，详见 <a href="https://gitee.com/link?target=https%3A%2F%2Fkubesphere.io%2Fzh%2Fdocs%2Frelease%2Frelease-v332%2F">v3.3.2 版本说明</a> 。</p><h2><a id="user-content-安装" class="anchor" href="https://gitee.com/kchstack/kubesphere#%E5%AE%89%E8%A3%85"></a>安装</h2><p>KubeSphere 支持在任意平台运行，从本地数据中心到混合多云再走向边缘。此外，KubeSphere 可以部署在任何版本兼容的 Kubernetes 集群上。Installer 默认将执行最小化安装，您可以在安装前或安装后自定义<a href="https://gitee.com/link?target=https%3A%2F%2Fkubesphere.io%2Fzh%2Fdocs%2Fquick-start%2Fenable-pluggable-components%2F">安装可插拔功能组件</a>。</p><h3><a id="user-content-快速入门" class="anchor" href="https://gitee.com/kchstack/kubesphere#%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8"></a>快速入门</h3><h4><a id="user-content-在-k8sk3s-上安装" class="anchor" href="https://gitee.com/kchstack/kubesphere#%E5%9C%A8-k8sk3s-%E4%B8%8A%E5%AE%89%E8%A3%85"></a>在 K8s/K3s 上安装</h4><p>请确保您的集群已经安装 Kubernetes v1.19.x、v1.20.x、v1.21.x、* v1.22.x、* v1.23.x 或 * v1.24.x。带星号的版本可能出现边缘节点部分功能不可用的情况。因此，如需使用边缘节点，推荐安装 Kubernetes v1.21.x 及之前的版本。运行以下命令以在现有 Kubernetes 集群上安装 KubeSphere：</p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="s">kubectl apply -f https://github.com/kubesphere/ks-installer/releases/download/v3.3.1/kubesphere-installer.yaml</span></span><span id="LC2" class="line"></span><span id="LC3" class="line"><span class="s">kubectl apply -f https://github.com/kubesphere/ks-installer/releases/download/v3.3.1/cluster-configuration.yaml</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><h4><a id="user-content-all-in-onelinux-单节点安装" class="anchor" href="https://gitee.com/kchstack/kubesphere#all-in-onelinux-%E5%8D%95%E8%8A%82%E7%82%B9%E5%AE%89%E8%A3%85"></a>All-in-one（Linux 单节点安装）</h4><p>👨‍💻 没有 Kubernetes 集群? 可以用 <a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fkubesphere%2Fkubekey">KubeKey</a> 在 Linux 环境以 All-in-one 快速安装单节点 K8s/K3s 和 KubeSphere，下面以 K3s 为例：</p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="c1"># 下载 KubeKey</span></span><span id="LC2" class="line"><span class="s">curl -sfL https://get-kk.kubesphere.io | VERSION=v2.3.0 sh -</span></span><span id="LC3" class="line"><span class="c1"># 为 kk 赋予可执行权限</span></span><span id="LC4" class="line"><span class="s">chmod +x kk</span></span><span id="LC5" class="line"><span class="c1"># 创建集群</span></span><span id="LC6" class="line"><span class="s">./kk create cluster --with-kubernetes v1.21.4-k3s --with-kubesphere v3.3.1</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><p>可使用以下命令查看安装日志。如果安装成功，可使用 <code>http://IP:30880</code> 访问 KubeSphere Console，管理员登录帐密为 <code>admin/P@88w0rd</code>。</p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="s">kubectl logs -n kubesphere-system $(kubectl get pod -n kubesphere-system -l 'app in (ks-install, ks-installer)' -o jsonpath='{.items[0].metadata.name}') -f</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><h3><a id="user-content-在托管-kubernetes-上部署-kubesphere" class="anchor" href="https://gitee.com/kchstack/kubesphere#%E5%9C%A8%E6%89%98%E7%AE%A1-kubernetes-%E4%B8%8A%E9%83%A8%E7%BD%B2-kubesphere"></a>在托管 Kubernetes 上部署 KubeSphere</h3><p>KubeSphere 托管在以下云供应商上，您可以通过在其托管的 Kubernetes 服务上一键安装来部署 KubeSphere。</p><ul><li><a href="https://gitee.com/link?target=https%3A%2F%2Faws.amazon.com%2Fquickstart%2Farchitecture%2Fqingcloud-kubesphere%2F">在 Amazon EKS 上部署 KubeSphere</a></li><li><a href="https://gitee.com/link?target=https%3A%2F%2Fmarket.azure.cn%2Fmarketplace%2Fapps%2Fqingcloud.kubesphere">在 Azure AKS 上部署 KubeSphere</a></li><li><a href="https://gitee.com/link?target=https%3A%2F%2Fmarketplace.digitalocean.com%2Fapps%2Fkubesphere">在 DigitalOcean 上部署 KubeSphere</a></li><li><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.qingcloud.com%2Fproducts%2Fkubesphereqke">在青云 QingCloud QKE 上部署 KubeSphere</a></li></ul><p>您还可以在几分钟内在其他托管的 Kubernetes 服务上安装 KubeSphere，请参阅 <a href="https://gitee.com/link?target=https%3A%2F%2Fkubesphere.io%2Fzh%2Fdocs%2Finstalling-on-kubernetes%2F">官方文档</a> 以开始使用。</p><blockquote><p>👨‍💻 不能访问网络？参考 <a href="https://gitee.com/link?target=https%3A%2F%2Fkubesphere.io%2Fzh%2Fdocs%2Finstalling-on-kubernetes%2Fon-prem-kubernetes%2Finstall-ks-on-linux-airgapped%2F">在 Kubernetes 上离线安装</a> 或者 <a href="https://gitee.com/link?target=https%3A%2F%2Fkubesphere.io%2Fzh%2Fdocs%2Finstalling-on-linux%2Fintroduction%2Fair-gapped-installation%2F">在 Linux 上离线安装</a> 了解如何使用私有仓库来安装 KubeSphere。</p></blockquote><h2><a id="user-content-指引讨论贡献与支持" class="anchor" href="https://gitee.com/kchstack/kubesphere#%E6%8C%87%E5%BC%95%E8%AE%A8%E8%AE%BA%E8%B4%A1%E7%8C%AE%E4%B8%8E%E6%94%AF%E6%8C%81"></a>指引、讨论、贡献与支持</h2><p>我们 <img class="emoji" alt=":heart:" style="vertical-align: middle" src="https://cn-assets.gitee.com/assets/emoji/heart-aa0a990af1ed6612e33b6344ea04b28b.png" width="14" height="14" referrerpolicy="no-referrer"> 您的贡献。<a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fkubesphere%2Fcommunity">社区</a> 将引导您了解如何开始贡献 KubeSphere。<a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fkubesphere%2Fcommunity%2Ftree%2Fmaster%2Fdeveloper-guide%2Fdevelopment">开发指南</a> 说明了如何安装开发环境。</p><ul><li><a href="https://gitee.com/link?target=https%3A%2F%2Fkubesphere.com.cn%2Fforum%2F">中文论坛</a></li><li><a href="https://gitee.com/link?target=https%3A%2F%2Fkubesphere.com.cn%2F">社区微信群（见官网底部）</a></li><li><a href="https://gitee.com/link?target=https%3A%2F%2Fjoin.slack.com%2Ft%2Fkubesphere%2Fshared_invite%2FenQtNTE3MDIxNzUxNzQ0LTZkNTdkYWNiYTVkMTM5ZThhODY1MjAyZmVlYWEwZmQ3ODQ1NmM1MGVkNWEzZTRhNzk0MzM5MmY4NDc3ZWVhMjE">Slack Channel</a></li><li><a href="https://gitee.com/link?target=https%3A%2F%2Fspace.bilibili.com%2F438908638">Bilibili</a></li><li><a href="https://gitee.com/link?target=https%3A%2F%2Ftwitter.com%2FKubeSphere">Twitter</a></li></ul><p>:hugs: 请将任何 KubeSphere 的 Bug、问题和需求提交到 <a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fkubesphere%2Fkubesphere%2Fissues">KubeSphere GitHub Issue</a>。</p><p><img class="emoji" alt=":heart_decoration:" style="vertical-align: middle" src="https://cn-assets.gitee.com/assets/emoji/heart_decoration-c6bb912722707dbea619b810f0f9eccf.png" width="14" height="14" referrerpolicy="no-referrer"> 若您期待官方、高效的技术服务，青云科技也为 KubeSphere 开源版本提供全程可靠、小时响应的工单支持，详情垂询 <a href="https://gitee.com/link?target=https%3A%2F%2Fkubesphere.cloud%2Fticket%2F">KubeSphere 在线技术支持</a>。</p><h2><a id="user-content-谁在使用-kubesphere" class="anchor" href="https://gitee.com/kchstack/kubesphere#%E8%B0%81%E5%9C%A8%E4%BD%BF%E7%94%A8-kubesphere"></a>谁在使用 KubeSphere</h2><p><a href="https://gitee.com/link?target=https%3A%2F%2Fkubesphere.io%2Fzh%2Fcase%2F">用户案例学习</a> 列出了哪些企业在使用 KubeSphere。欢迎 <a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fkubesphere%2Fkubesphere%2Fissues%2F4123">发表评论</a> 来分享您的使用案例。</p><h2><a id="user-content-landscapes" class="anchor" href="https://gitee.com/kchstack/kubesphere#landscapes"></a>Landscapes</h2><p align="center"><br><br><img src="https://landscape.cncf.io/images/left-logo.svg" width="150" referrerpolicy="no-referrer">&nbsp;&nbsp;<img src="https://landscape.cncf.io/images/right-logo.svg" width="200" referrerpolicy="no-referrer">&nbsp;&nbsp;
<br><br>
KubeSphere 是 CNCF 基金会成员并且通过了 <a href="https://gitee.com/link?target=https%3A%2F%2Fwww.cncf.io%2Fcertification%2Fsoftware-conformance%2F%23logos">Kubernetes 一致性认证
</a>，进一步丰富了 <a href="https://gitee.com/link?target=https%3A%2F%2Flandscape.cncf.io%2F%3Flandscape%3Dobservability-and-analysis%26license%3Dapache-license-2-0">CNCF 云原生的生态。
</a></p>]]>
            </description>
            <pubDate>Sat, 23 Sep 2023 03:10:00 GMT</pubDate>
            <guid isPermaLink="false">https://gitee.com/kchstack/kubesphere</guid>
            <link>https://gitee.com/kchstack/kubesphere</link>
        </item>
        <item>
            <title>
                <![CDATA[每日一博 | 实时数仓混沌演练实践]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><div data-traceid="news_comment_top_ad" data-tracepid="news_comment_top" style="text-align: center;"><a style="color:#A00;font-weight:bold;" href="https://www.oschina.net/question/4489239_2331019" target="_blank">数据技术都能四世同堂，凭什么开发 30 岁就要被干掉？ <img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div></div><span id="OSC_h1_1"></span><h1>一、背景介绍</h1><p>目前实时数仓提供的投放实时指标优先级别越来越重要，不再是单独的报表展示等功能，特别是提供给下游规则引擎的相关数据，直接对投放运营的广告投放产生直接影响，数据延迟或者异常均可能产生直接或者间接的资产损失。 <img alt="" src="https://oscimg.oschina.net/oscnet/up-809771304bbfbfaefda51eb5e25fc0b743f.jpg" referrerpolicy="no-referrer"></p><p>从投放管理平台的链路全景图来看，实时数仓是不可或缺的一环,可以快速处理海量数据，并迅速分析出有效信息，同时支持投放管理平台的手动控盘。实时节点事故，将可能导致整个投放链路无法正常运行，另外，投放规则引擎是自动化操作，服务需要 24 小时运行，所以需要配置及时有效的数据质量监控预警，能快速识别到波动异常或者不符合业务的数据，从而计划引入混沌工程，希望可以通过主动注入故障的方式、尽可能提前感知风险、发现潜在问题，并针对性地进行防范、加固，避免故障发生时所带来的严重后果，提高实时数仓整体抗风险能力。</p><span id="OSC_h1_2"></span><h1>二、演练范围</h1><p>为了能更细致反应出混沌演练情况，根据演练的内容不同，将实时数仓混沌分为两部分：<strong>技术侧和业务侧</strong>。</p><p><strong>技术侧混沌</strong>：基于中间件、数据库、JVM、基础资源、网络、服务等注入常见的异常，根据实际业务中梳理的应用核心场景进行混沌演练，检验系统的脆弱性和应急响应能力，从而提升团队的稳定性保障处理能力。 <img alt="" src="https://oscimg.oschina.net/oscnet/up-cc08de52de41ac5854303f7b55939ec35ff.jpg" referrerpolicy="no-referrer"></p><p><strong>业务侧混沌</strong>：对于电商活动密集型的公司来说，各种到达率、曝光率，以及更加宏观的 GMV、用户拉新数、用户召唤数等，都能表现出业务的健康程度，在实际生活中，为了描述一种稳定状态，我们需要一组指标构成一种模型，而不是单一指标。无论是否采用混沌工程，识别出这类指标的健康状态都是至关重要的，所以要围绕它们建立一整套完善的数据采集、监控、预警机制，当业务指标发生波动较大时，我们能搞快速感知、定位、修复止血。 <img alt="" src="https://oscimg.oschina.net/oscnet/up-f656ab86204af67698ca5e53593548d77c9.jpg" referrerpolicy="no-referrer"></p><p><strong>过往数仓混沌工程均是技术侧，此次在投放链路已搭建完成主备链路的前提下，期望通可以通过多轮业务侧混沌，提高系统整体的数据异动感知能力。</strong></p><span id="OSC_h1_3"></span><h1>三、演练计划</h1><p>工欲善其事，必先利其器，在执行混沌演练前，需要准备好前置工作，制定合理的演练 SOP、方案、计划，对演练环境、脚本、数据、工具，场景及爆炸半径等进行可能性评估，在确认可行性 ok 的情况下，约好关联方时间，再进行实践操作。 <img alt="" src="https://oscimg.oschina.net/oscnet/up-cfdf19906836e41b5cb869b64608d799432.jpg" referrerpolicy="no-referrer"></p><p>本篇主要和大家分享基于业务侧的实时数仓混沌演练过程：</p><span id="OSC_h2_4"></span><h2>1.编写演练 SOP</h2><p>SOP 是一种标准的作业程序，就是将某一事件的操作步骤和要求，进行细化、量化及优化，形成一种标准的操作过程，关于业务侧混沌，尤其是实时数仓数据相关的演练，我们也是第一次做，目前在业界也没有找到相关的演练指导参考，处于探索阶段，为了方便项目进度的顺利进行及后续演练操作更加规范、高效，在演练前期大家经过沟通、讨论后，项目前期梳理的 SOP 演练模板，如下： <img alt="" src="https://oscimg.oschina.net/oscnet/up-b05836c213c5deb4a521e61b8d9bf67f60f.jpg" referrerpolicy="no-referrer"></p><span id="OSC_h2_5"></span><h2>2.演练方案调研</h2><p>先收集实时数仓投放链路核心指标范围，在此基础上，拉取一段时间内的历史数据进行分析，找到每个指标对应的健康波动阀值，从而在配置相应的 DQC 规则监控，对于波动不在健康阀值的异常指标，在分钟级别（预期 15min）内及时告警，并快速排查响应。为此，在演练前期，我们经历过一系列的方案调研、探索，如下：</p><p><strong>「下文提供的方案，指标数据都是以设备激活数为例进行分析」</strong></p><ul><li><p>方案一: 按照天维度，收集最近一段时间，<strong>同一天每个整点设备激活数，占当天大盘占比</strong>，统计出最小值、最大值，作为该指标的健康波动阀值; <img alt="" src="https://oscimg.oschina.net/oscnet/up-5db6bf773388277a477d014346b562cbbc9.jpg" referrerpolicy="no-referrer"></p></li><li><p>方案二: 按照天维度，收集一段时间内，<strong>同一天相邻整点指标波动</strong>数据找规律，比如每天上午 9 点到 10 点的波动数据，然后分别通过一系列的数学分布方法进行数据统计，从而希望找一个相对稳定的波动区间； <img alt="" src="https://oscimg.oschina.net/oscnet/up-e6acfa0ba597d5eec2b48a96608a1ded0d4.jpg" referrerpolicy="no-referrer"></p></li><li><p>方案三: 按照天维度，收集一段时间内，<strong>相邻天整点指标波动</strong>数据找规律，比如昨天上午 9 点到前天上午 9 点的波动数据，然后分别通过一系列的数学分布方法进行数据统计，从而希望找一个相对稳定的波动区间； <img alt="" src="https://oscimg.oschina.net/oscnet/up-ec085c12fa338ea0704fef3dcc4a96d16fa.jpg" referrerpolicy="no-referrer"></p></li><li><p>方案四:在前面三种方案的基础上，指标在工作日和周末的波动可能不一样，所以我们在日维度统计的基础上，我们也调研了<strong>周维度同比波动</strong>分布情况，比如每周一上午 9 点到上午 10 点的波动数据，然后分别通过一系列的数学分布方法进行数据统计，从而希望找一个相对稳定的波动区间； <img alt="" src="https://oscimg.oschina.net/oscnet/up-867fe3fd131a2016e25d162e0a81407fc07.jpg" referrerpolicy="no-referrer"></p></li><li><p>方案五:同理，我们也调研了<strong>周维度环比波动</strong>分布情况，比如本周一上午 9 点到上周一上午 9 点的波动数据，然后分别通过一系列的数学分布方法进行数据统计，从而希望找一个相对稳定的波动区间； <img alt="" src="https://oscimg.oschina.net/oscnet/up-3f6117360a9087dea86b7d0a38eb7053db9.jpg" referrerpolicy="no-referrer"></p></li><li><p>方案六：基于主备链路，在 source 源相同的情况下，经过实时数仓计算出的指标，在同一段时间两条链路 sink 出来的结果数据，正常应该是保持一致，或者波动较小，比如 10 分钟延迟的主备链路，波动不超过 10%，平均差异做到一致性做到 90% 以上。</p></li></ul><p>方案 1 到 5，都尝试过一遍，每个方案场景数据通过最大值、最小值、平均值、各百分位分布、方差、标准差等统计出来的数据分析，很难找到一个相当稳定的波动规律，也无法框定指标具体的阀值区间，实际演练过程，如果设置的波动告警阀值过大，真实生产上业务数据波动异常时，无法及时告警发现；设置过小，将导致告警频繁，对其准确性、有效性可能存在质疑，而且，实时投放的核心指标有几十个，每个指标对应的健康阀值都不一样，要收集、分析成本非常高，从演练的效果上看，也不是很明显。</p><p><strong>整体评估下来，演练主要采用的是方案六：涉及到的实时投放核心指标数共收集 29 个，一段时间内（15min），主备链路指标波动差异不超过 10%。</strong></p><span id="OSC_h2_6"></span><h2>3.演练方式</h2><p>红蓝对抗演练，将团队分为红（防）蓝（攻）两组。</p><blockquote><p>测试人员组成蓝军：负责制定混沌演练方案，执行目标系统故障注入，详细记录演练过程；</p><p>实时数仓开发为红军：负责发现故障、应急响应、排除故障，同时验证系统在不同故障场景下的容错能力、监控能力、人员响应能力、恢复能力等可靠性能力。 <img alt="" src="https://oscimg.oschina.net/oscnet/up-f3b6dfa0fc9f4c79a51bf8dda03258b9c04.jpg" referrerpolicy="no-referrer"></p></blockquote><span id="OSC_h1_7"></span><h1>四、演练流程</h1><p>整体演练过程，大致分为三个阶段：准备阶段、攻防阶段及覆盘阶段。 <img alt="" src="https://oscimg.oschina.net/oscnet/up-7cd2ed35bed2468d536c47d934484c34db0.jpg" referrerpolicy="no-referrer"></p><span id="OSC_h2_8"></span><h2>1.准备阶段</h2><ul><li><p>方案准备完评审通过后，确认好链路计划；</p></li><li><p>蓝军按计划根据事先制定的攻击方案，提前准备好相应的测试数据、脚本； ‍</p></li><li><p>红军按计划根据事先制定的攻击方案，在演练前，提前确保环境可用，并进行监控防御、应急响应措施。</p></li></ul><span id="OSC_h2_9"></span><h2>2.攻防阶段</h2><ul><li><p>蓝队根据事先制定的攻击方案，模拟真实的攻击行为，按照约定的时间在演练链路（备用链路）进行攻击，进行故障注入，同时记录好相应的操作步骤，方便后续报告梳理；</p></li><li><p>红队在蓝军攻击后，通过飞书/邮件告警等通知方式实时关注监控系统运行情况，如有异常告警，需第一时间进行问题排查定位，在评估修复方案；</p></li><li><p>在攻防对抗的过程中，蓝军可根据红军的防御措施进行调整和改进攻击策略，尽力突破系统的防御并达到既定目标，同时红军也可分析蓝军的攻击手法和行为模型，不断改进防御措施来加强防御。</p></li></ul><span id="OSC_h2_10"></span><h2>3.覆盘和改进阶段</h2><ul><li><p>在混沌演练结束后，进行总结和评估，分析红队和蓝队的表现，评估系统的安全性和抗攻击能力；</p></li><li><p>总结经验教训，总结成功的防御措施和失败的攻击手法，以便于改进系统的安全策略； ‍</p></li><li><p>根据评估结果和总结经验，制定改进计划，修补系统中的漏洞和薄弱点，提升系统的抗风险能力。</p></li></ul><span id="OSC_h1_11"></span><h1>五、攻防实战</h1><p>本次演练共计有 29 个指标波动 case，整体演练操作大同小异。 <img alt="" src="https://oscimg.oschina.net/oscnet/up-231ad23a9d169ab0aca3cc910ee770bb003.jpg" referrerpolicy="no-referrer"></p><p>以其中 case17 「召回商品收藏 uv 在某个渠道下整点波动异常」为例，<strong>具体的演练操作流程如下。</strong></p><span id="OSC_h2_12"></span><h2>1.数据准备</h2><ul><li>通过后台数据库，拉出生产主 (备) 链路，某个渠道（如<code>media_id</code> = '2'）下某个整点（如<code>hour</code> = 10）下，召回商品收藏 uv 对应的整体统计值 N。</li></ul><pre><code>--渠道小时整点维度下，商品收藏 uv 汇总数据
select
  `指标名称`,
  `日期`,
  '2' as `指标 ID`,
  `小时段`,
  sum(`指标值`)
from table_a
where
  date = date_format(now(), '%Y%m%d')
  and `指标名称` in ( '商品收藏 uv' )
  and `小时段` = 10
  AND `指标 id` = '2'
GROUP BY
  `指标名称`,
  `日期`,
  `小时段`
order by
  指标名称;
</code></pre><ul><li>拉出备用链路，某个渠道（如<code>media_id</code> = '2'）下某个整点（如<code>hour</code> = 10）下，具体的一条明细数据，记录商品收藏 uv 对应的值为 n,把 n 改为 n+0.1N,后续注入进备用链路，从而使得主备波动差异在 10%。</li></ul><pre><code>-- 明细数据
select
  t.指标名称,t.账户 id,t.计划 ID,t.设备类型,t.指标值
from
  (
    select
      `账户 id`,
      `计划 id`,
      `指标名称`,
      `指标值`,
      `设备类型` ,
      row_number() over (partition by 指标名称 order by 指标值 desc ) as rn
    from  table_a
    where
      date = date_format(now(), '%Y%m%d')
      and `指标名称` in ('商品收藏 uv')
      and `设备类型` = '召回'
      and `小时段` = 10
      AND `指标 id` = '2'
  ) t
where
  t.rn = 1
ORDER BY 指标名称;
</code></pre><ul><li>整理后得到需要注入的数据数据，见标黄部分。 <img alt="" src="https://oscimg.oschina.net/oscnet/up-ede988eb7f5092a5961838f767529977686.jpg" referrerpolicy="no-referrer"></li></ul><span id="OSC_h2_13"></span><h2>2.故障注入 odps</h2><ul><li>将需要注入的数据导入 odps。</li></ul><p>导入前，需要在 datawork 空间中新建测试表 du_qa_dw_dev.hundun_case，用于导入演练数据</p><pre><code>-- drop table if  EXISTS du_qa_dw_dev.hundun_case;
CREATE TABLE IF NOT EXISTS hundun_case
(
    message  STRING COMMENT '消息内容'
)
COMMENT '混沌演练'
;
</code></pre><ul><li>往 du_qa_dw_dev.hundun_case 表里灌数。</li></ul><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-9a812903d786097d62990f612ff7aa80cac.jpg" referrerpolicy="no-referrer"><img alt="" src="https://oscimg.oschina.net/oscnet/up-46b380b575675ee1cfa3f6fb5dcfd895036.jpg" referrerpolicy="no-referrer"></p><ul><li>验证数据导入是否成功。 <img alt="" src="https://oscimg.oschina.net/oscnet/up-f1b328461b1a5b283c4e8975019463c0d4d.jpg" referrerpolicy="no-referrer"></li></ul><span id="OSC_h2_14"></span><h2>3.odps 同步到 kafka</h2><p>执行 flink 同步脚本，将 odsp du_qa_dw_dev.hundun_case 表表数据同步到对应的 kafka topic 中。</p><p><strong>flink 任务脚本：</strong></p><pre><code>--SQL
--********************************************************************--
--odps 同步到 kakfa 脚本，用于实时数仓混沌演练异常注入使用
--********************************************************************--
-- 基本函数
CREATE FUNCTION JsonParseField AS 'com.alibaba.blink.udx.log.JsonParseField';
CREATE FUNCTION jsonStringUdf AS 'com.alibaba.blink.udx.udf.JsonStringUdfV2';
---同步账号表
CREATE TABLE `source` (
message                        VARCHAR  
) WITH (
   'connector' = 'du-odps',
  'endPoint' = '***',
  'project' = '***',
  'tableName' = 'hundun_case_01',
  'accessId' = '*******',
  'accessKey' = '*******'

);

CREATE TABLE `kafka_sink` (
  `messageKey`  VARBINARY,
  `message`  VARBINARY,
  PRIMARY KEY (`messageKey`) NOT ENFORCED
) WITH (
  'connector' = 'du-kafka',
  'topic' = '********',
   'properties.bootstrap.servers' = '*******',
  'properties.compression.type' = 'gzip',
  'properties.batch.size' = '40960',
  'properties.linger.ms' = '1000',
  'key.format' = 'raw',
  'value.format' = 'raw',
  'value.fields-include' = 'EXCEPT_KEY'
);

INSERT INTO kafka_sink
SELECT
cast(MD5(message) as VARBINARY),
cast(message as VARBINARY)
FROM source
;
</code></pre><span id="OSC_h2_15"></span><h2>4.kafka 平台查询数据</h2><p>执行完 flink 同步任务后，可通过后台查询，对应的数据是否同步成功。 <img alt="" src="https://oscimg.oschina.net/oscnet/up-1cf077eceab902d334f7a02744f110a4ea3.jpg" referrerpolicy="no-referrer"></p><span id="OSC_h2_16"></span><h2>5.异常注入通知</h2><p>在异常注入完成后，可以通过飞书群通知，告知红军，如收到告警，需第一时间群告知。</p><blockquote><p>蓝军：蓝军已完成数据准备，请红军在演练前确保环境 OK 且已完成规则配置，另外务必将演练时间计划及时同步通知到下游关联方；</p><p>蓝军：已完成注入。</p></blockquote><span id="OSC_h2_17"></span><h2>6.告警触发通知</h2><ul><li>红军在演练前，可通过监控平台提前配置好防御规则。 <img alt="" src="https://oscimg.oschina.net/oscnet/up-db13e71a209e4074cce8a2bbc1a41667f5c.jpg" referrerpolicy="no-referrer"></li><li>在异常注入后，如符合预期，在 15min 内发现指标波动异常，红军需及时同步到演练群中。</li></ul><blockquote><p>中危**双链路主备一致监控</p><p>服务名：**** 环境：****** 告警时间：****** 触发条件：**双链路比对波动异常，持续 10 分钟，告警详情：指标:prd_collect_uv 主对比备下降:[-10%] 主:1066 备:956</p><p>业务域：实时数仓</p><p>应用负责人：***</p></blockquote><ul><li>如不符合预期，未在 15min 内发现指标波动异常，红军需及时定位、跟进问题，并在修复后，沟通后续演练验证修复结果。</li></ul><blockquote><p>红军：15min 内未收到告警，定位中</p><p>红军：原因已找到，由于***造成，导致告警数据没有及时发出，正在修复处理</p><p>红军：已修复，请红军重新发起攻击</p></blockquote><span id="OSC_h2_18"></span><h2>7.演练过程记录</h2><p>收集、汇总记录演练过程中的每个操作，含时间点、执行人、操作等，如下： <img alt="" src="https://oscimg.oschina.net/oscnet/up-464e3d7975b42956cc2007407a22290fcce.jpg" referrerpolicy="no-referrer"></p><span id="OSC_h1_19"></span><h1>六、演练总结</h1><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-679f8b1b380d497f60dc055e5eb209dc097.jpg" referrerpolicy="no-referrer"></p><span id="OSC_h1_20"></span><h1>七、未来展望</h1><p>实时数仓业务侧的混沌演练，从 0 到 1，在经过一系列的探索实践后，通过主备链路比对方式，演练期间对于异常波动的指标，可以快速识别感知，从演练结果上，取得了不错的成效，但也存在一定的局限性，如：</p><ul><li><p>演练期间，通过人工注入的异常数据，如无法快速清除，可能影响到备用链路使用。</p></li><li><p>对于没有备链路的实时指标波动，需要制定更精细化的可行方案，找寻指标健康波动范围。</p></li></ul><p>这些都需要团队进一步去探索、解决，同时在演练的过程中，我们将不断积累、丰富演练 case、完善演练库，后续计划通过引入工具（平台）、建立演练协助机制、定期定时演练等手段，使混沌演练更加自动化、规范化、常态化，提高实时数仓整体数据稳定。 <img alt="" src="https://oscimg.oschina.net/oscnet/up-44be503ee4b17e831ef9e2fabf906b71236.jpg" referrerpolicy="no-referrer"> *文 / 袁宵</p><p>本文属得物技术原创，更多精彩文章请看：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftech.dewu.com%2F" rel="nofollow" target="_blank">得物技术官网</a></p><p>未经得物技术许可严禁转载，否则依法追究法律责任！</p></div>
                                    ]]>
            </description>
            <pubDate>Sat, 23 Sep 2023 03:08:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/5783135/blog/10112796</guid>
            <link>https://my.oschina.net/u/5783135/blog/10112796</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[华为开源 openInula 前端框架，兼容 React API 和生态]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">lnula（发音为：[ˈɪnjʊlə]）。openInula 是一款用于构建用户界面的 JavaScript 库，提供响应式 API 帮助开发者简单高效构建 web 页面，比传统虚拟 DOM 方式渲染效率提升 30% 以上！同时 InulaJS 提供与 React 保持一致的 API，并且提供 5 大常用功能丰富的核心组件：状态管理器、路由、国际化、请求组件、应用脚手架，以便开发者高效、高质量的构筑基于 InulaJS 的前端产品。</p><h2 style="margin-left:0; margin-right:0; text-align:left">技术架构</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="输入图片说明" src="https://static.oschina.net/uploads/img/202309/23073740_6lHO.png" referrerpolicy="no-referrer"></p><h3 style="margin-left:0; margin-right:0; text-align:left">核心能力</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><strong>响应式 API</strong></p><ul><li>openInula 通过最小化重新渲染的范围，从而进行高效的 UI 渲染。这种方式避免了虚拟 DOM 的开销，使得 openInula 在性能方面表现出色。</li><li>openInula 通过比较变化前后的 JavaScript 对象以细粒度的依赖追踪机制来实现响应式更新，无需用户过度关注性能优化。</li><li>简洁 API：
<ol style="list-style-type:lower-roman"><li>openInula 提供了两组简洁直观的 API--响应式 API 和与 React 一致的传统 API，使得开发者可以轻松地构建复杂的交互式界面。</li><li>openInula 简洁的 API 极大降低了开发者的学习成本，开发者使用响应式 API 可以快速构建高效的前端界面。</li></ol></li></ul><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><strong>兼容 ReactAPI</strong></p><ul><li>与 React 保持一致 API 的特性、可以无缝支持 React 生态。</li><li>使用传统 API 可以无缝将 React 项目切换至 openInula，React 应用可零修改切换至 openInula。</li></ul><h3 style="margin-left:0; margin-right:0; text-align:left">openInula 配套组件</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><strong>状态管理器/inula-X</strong></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">inula-X 是 openInula 默认提供的状态管理器，无需额外引入三方库，就可以简单实现跨组件/页面共享状态。 inula-X 与 Redux 比可创建多个 Store，不需要在 Reducer 中返回 state 并且简化了 Action 和 Reducer 的创建步骤，原生支持异步能力，组件能做到精准重渲染。inula-X 均可使用函数组件、class 组件，能提供 redux 的适配接口及支持响应式的特点。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><strong>路由/inula-router</strong></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">inula-router 是 openInula 生态组建的一部分，为 openInula 提供前端路由的能力，是构建大型应用必要组件。 inula-router 涵盖 react-router、history、connect-react-router 的功能。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><strong>请求/inula-request</strong></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">inula-request 是 openInula 生态组件，涵盖常见的网络请求方式，并提供动态轮询钩子函数给用户更便捷的定制化请求体验。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><strong>国际化/inula-intl</strong></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">lnula-intl 是基于 openInula 生态组件，其主要提供了国际化功能，涵盖了基本的国际化组件和钩子函数，便于用户在构建国际化能力时方便操作。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><strong>调试工具/inula-dev-tools</strong></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">inula-dev-tools 是一个为 openInula 开发者提供的强大工具集，能够方便地查看和编辑组件树、管理应用状态以及进行性能分析，极大提高了开发效率和诊断问题的便捷性。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><strong>脚手架/inula-cli</strong></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">lnula-cli 是一套针对 openInula 的编译期插件，它支持代码优化、JSX 语法转换以及代码分割，有助于提高应用的性能、可读性和可维护性。</p></div>
                                                                ]]>
            </description>
            <pubDate>Fri, 22 Sep 2023 23:42:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/p/openinula</guid>
            <link>https://www.oschina.net/p/openinula</link>
        </item>
        <item>
            <title>
                <![CDATA[低代码引擎 TinyEngine 正式发布！！！]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><div data-traceid="news_comment_top_ad" data-tracepid="news_comment_top" style="text-align: center;"><a style="color:#A00;font-weight:bold;" href="https://www.oschina.net/question/4489239_2331019" target="_blank">数据技术都能四世同堂，凭什么开发 30 岁就要被干掉？ <img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div></div><p><img src="https://oscimg.oschina.net/oscnet/up-889246aad04bcf78bd25d07144ac7a00325.png" alt="" referrerpolicy="no-referrer"> 在当今数字化飞速发展的时代，企业对高效、敏捷的应用程序需求日益旺盛。为了满足这一需求，越来越多的低代码开发平台开始涌现。这些平台通过提供简单易用的开发工具和优化后的开发流程，帮助开发者快速构建高质量、可重复使用的应用程序，同时降低了开发的难度和成本，提高了开发效率和灵活性。这些低代码开发平台的出现，无疑为企业的数字化转型提供了更快速、更高效的方法，也将推动整个软件开发行业的进步。</p><h2>TinyEngine 项目介绍</h2><p>随着企业对于低代码开发平台的需求日益增长，急需一个通用的解决方案来满足各种低代码平台的开发需求。正是在这种情况下，低代码引擎应运而生。它是一种通用的开发框架，通过对低代码平台系统常用的功能进行解构，将其划分为多个功能模块，并为每个模块定义了相应的协议和开发范式，使得开发者可以根据自身的业务需求，轻松定制开发出自己的低代码开发平台。</p><p>随着企业对于低代码开发平台的需求日益增长，急需一个通用的解决方案来满足各种低代码平台的开发需求。正是在这种情况下，低代码引擎应运而生。它是一种通用的开发框架，通过对低代码平台系统常用的功能进行解构，将其划分为多个功能模块，并为每个模块定义了相应的协议和开发范式，使得开发者可以根据自身的业务需求，轻松定制开发出自己的低代码开发平台。</p><p><img src="https://oscimg.oschina.net/oscnet/up-eafd0400a47b2223f7736ca1f815f5931b7.png" alt="" referrerpolicy="no-referrer"></p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopentiny.design%2F" target="_blank">TinyEngine</a> 提供了低代码底层能力，并集成了人工智能，从而使用户能够高效开发。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopentiny.design%2F" target="_blank">TinyEngine</a> 具有强大的拖拽功能，无论是图元还是复杂组件，都能在画布上带来流畅的体验。它适用于多场景的低代码平台开发，包括资源编排、流程编排、服务端渲染、模型驱动、移动端、大屏端以及页面编排等低代码平台。</p><h3>架构</h3><p><img src="https://oscimg.oschina.net/oscnet/up-9987cd6c7d0245549bcf11fca5ea1e97da5.png" alt="" referrerpolicy="no-referrer"></p><h3>核心亮点</h3><ul><li><strong>可以定制开发低码平台</strong>。</li></ul><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopentiny.design%2F" target="_blank">TinyEngine</a> 采用灵活的系统架构，其出色的整体架构提供了高度的自定义自由度，使用户能够像搭建积木一样选择不同的模块来构建自己的专属设计器。此外，插件化的架构使得用户可以方便地扩展与业务相关的功能。 在 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopentiny.design%2F" target="_blank">TinyEngine</a> 中，插件根据位置大致分为三类：toolbars/plugins/settings，分别对应顶部区域、左侧区域和右侧区域。toolbars 插件主要偏向于无需 UI 或者 UI 较为简单的工具插件，plugins 是业务功能插件，显示在左侧 (或下方) 抽屉页面，可以通过点击进行展开收起或切换。这些功能都像是独立的积木块，用户可以选择性地保留或删除。同时，用户也可以开发自己的插件或工具，并将其安装到对应的位置。<strong>TinyEngine 的灵活性极强，用户可以自由地决定他们想要开发什么样的低代码平台。</strong></p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopentiny.design%2F" target="_blank">TinyEngine</a> 提供了一套完善的插件体系，涵盖了插件开发所需的基础 UI 库、工具库、插件面板的显示控制、生命周期管理、公共 API 注册与共享等。这一体系使得开发者只需遵循简单的规范，即可快速开发出业务所需的插件，从而极大地提高了开发效率和灵活性。通过使用 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopentiny.design%2F" target="_blank">TinyEngine</a> 提供的插件体系，开发者可以更加轻松地管理和维护复杂的插件生态系统，同时降低维护成本。总之，<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopentiny.design%2F" target="_blank">TinyEngine</a> 的插件体系为开发者提供了一个全面、高效、灵活的开发平台，使得快速开发出高质量的插件成为可能。</p><p>插件开发需要遵循一定的开发规范，主要是文件规范与导出规范：</p><p>1、文件规范，必须包含下面几个文件</p><pre><code class="language-js">pluginProject
- src 插件源码
- index.js 注册插件入口，需要导出约定的数据结构
- package.json
</code></pre><p>2、导出规范， index.js 文件需要导出一个对象来声明基础信息</p><pre><code class="language-js"> import component, { api } from './src/Main.vue'
 
 export default {
          id: 'pluginId', // 插件 id
          title: 'pluginName', // 插件名
          icon: 'js', // 插件 icon
          align: 'top', // 插件位置，左侧插件可选值：'top' | 'bottom'  工具栏可选值：'right' | 'center' | 'left'
          component, // 插件面板打开时渲染的组件
          api, // 插件暴露的 api，可以提供给其他插件调用
        }
</code></pre><p>在此基础上就可以按照业务需要自由开发相关逻辑代码。</p><p>3、最后在 addons.js 插件配置文件中引入，就完成一个完整的插件开发了。</p><pre><code class="language-js">import Materials from '@xxxx/lowcode-plugin-materials'

        export default {
          plugins: [
            Materials,
            // ...
          ],
          toolbars: [
            // ...
          ],
          settings: [
            // ...
          ],
        }
</code></pre><p>（ps:我们呼吁用户把开发的插件包开源，共建 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopentiny.design%2F" target="_blank">TinyEngine</a> 的生态。）</p><ul><li><strong>TinyEngine 有开放的物料协议和扩展接口。</strong> &nbsp;</li></ul><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopentiny.design%2F" target="_blank">TinyEngine</a> 低代码引擎默认的物料来源于华为云开源组件库 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopentiny.design%2Ftiny-vue%2Fzh-CN%2Fos-theme%2Fdocs%2Fchangelog" target="_blank">TinyVue</a>，该组件库拥有丰富的组件和强大的功能。并且实现了跨端垮技术栈，同时支持 vue2 和 vue3。即使业务系统使用其他组件库，也无需切换，得益于 TinyEngine 强大的开放物料设计，可直接导入第三方组件库，例如 elementUI 和 AntDesign 等。引擎底层技术架构采用 webcomponent 技术，因此支持 Vue、React 和 Angular 等不同技术栈的组件或区块。<strong>用户可以自由选择所需的组件库并导入使用</strong>。</p><p>导入第三方组件库，找到 runner.js 物料文件。然后参照默认物料 @opentiny/vue 即可，主要修改以下地方：</p><pre><code class="language-js">// 全量导入 UI 组件库
import UI from '@xxxx/UI'

Object.entries(UI).forEach(([key, component]) =&gt; {
   const { name } = component
   if (name) {
   window.TinyLowcodeComponent[name] = component
   }
  })

// 导入某个组件库里面的单个组件
 import { button } from '@xxxx/UI'

window.TinyLowcodeComponent[name] = button
</code></pre><p>通过导入第三方组件库，用户可以在低代码平台中使用这些组件库来开发应用程序。除了导入组件外，用户还需要通过 bundle.json 文件来描述导入的组件所暴露出来的事件和属性。这样，用户可以在应用程序中使用这些组件，并通过 bundle.json 文件来了解和使用组件的事件和属性。这是一个非常方便和灵活的功能，使得用户可以自由地使用和定制他们所需的组件，从而快速开发出高质量的应用程序。</p><pre><code class="language-json"> // 以下 JSON 为节选按钮暴露的属性
        {
          "schema": {
            "type": "object",
            "properties": {
              "size": {
                "title": "定义按钮尺寸",
                "type": "string",
                "enum": ["large", "medium", "small", "mini"],
                "enumNames": ["较大尺寸", "中等尺寸", "较小尺寸", "迷你尺寸"],
                "default": ""
              },
              "text": {
                "title": "设置按钮显示的文本",
                "type": "string",
                "default": ""
              }
            },
            "events": {
              "onClick": {
                "label": {
                  "zh_CN": "鼠标单击时触发",
                  "en_US": "Triggered on mouse click"
                },
                "description": {
                  "zh_CN": "鼠标单击时触发的回调函数"
                },
                "type": "event",
                "defaultValue": ""
              }
            }
          }
        }
</code></pre><ul><li><strong>TinyEngine 支持自定义 DSL 生成定制的源代码。</strong></li></ul><p>相对于在运行时由平台提供渲染引擎的方式，这种方式能够为用户提供更多的自主权和安全性。用户可以自由地定义自己的 DSL，并根据需要生成定制化的源代码，从而更加灵活地控制应用程序的行为和性能。</p><p><img src="https://oscimg.oschina.net/oscnet/up-a49a7815e0e7252136772b0fcb2daf2f5ca.png" alt="" referrerpolicy="no-referrer"></p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopentiny.design%2F" target="_blank">TinyEngine</a> 默认生成 Vue 的源代码。当页面编排完成后，会生成一个包含页面信息的 schema。DSL 通过便利递归等方法，从中生成源代码。如果技术栈是 Angular 或 React，用户可以完全开发一个 Angular 或 React 的 DSL，从而生成一个新的源代码工程。用户可以根据自己的需求定制生成源代码的方式，这是一个非常灵活和强大的功能，使得 TinyEngine 可以适应不同的技术栈和需求，从而更加广泛地应用于各种应用程序的开发。</p><p>如果你想开发其他技术栈的 DSL，那么一定要对<strong>页面协议</strong>比较熟悉。</p><pre><code class="language-js">interface&nbsp;IPageSchema&nbsp;{&nbsp;//&nbsp;页面&nbsp;或&nbsp;区块&nbsp;schema  
&nbsp;&nbsp;fileName?:&nbsp;string;&nbsp;//&nbsp;页面名称，schema&nbsp;是页面时使用  
&nbsp;&nbsp;componentName?:&nbsp;string;&nbsp;//&nbsp;组件名，schema&nbsp;是页面时值为&nbsp;"Page"  
&nbsp;&nbsp;blockName?:&nbsp;string;&nbsp;//&nbsp;区块名，schema&nbsp;是区块时使用  
&nbsp;&nbsp;id:&nbsp;string;  
&nbsp;&nbsp;css?:&nbsp;string;&nbsp;//&nbsp;页面全局样式  
&nbsp;&nbsp;props?:&nbsp;{&nbsp;//&nbsp;组件绑定的属性  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[prop:string]?:&nbsp;any;  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;style?:&nbsp;string;&nbsp;//&nbsp;行内样式  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;className?:&nbsp;string;&nbsp;//&nbsp;绑定的样式类名  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lifeCycles?:&nbsp;{&nbsp;//&nbsp;生命周期  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[prop:string]?:&nbsp;{  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;type:&nbsp;'js';&nbsp;//&nbsp;固定值  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;source:&nbsp;string;&nbsp;//&nbsp;函数字符串  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};  
&nbsp;&nbsp;children?:&nbsp;Array&lt;&nbsp;IComponentSchema&nbsp;&gt;&nbsp;|&nbsp;string;&nbsp;//&nbsp;子组件列表&nbsp;或&nbsp;文本字符串  
&nbsp;&nbsp;dataSource?:&nbsp;{&nbsp;//&nbsp;数据源  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;list:&nbsp;Array&lt;&nbsp;IDateSource&nbsp;&gt;&nbsp;//&nbsp;数据源列表  
&nbsp;&nbsp;};  
&nbsp;&nbsp;actions?:&nbsp;{&nbsp;//&nbsp;页面&nbsp;JS  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;module:&nbsp;{  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;source:&nbsp;string;&nbsp;//&nbsp;页面定义的&nbsp;JS&nbsp;源码字符串  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;type:&nbsp;"FUNCTION";&nbsp;//&nbsp;固定值  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;list:&nbsp;Array&lt;{  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;id:&nbsp;string;&nbsp;//&nbsp;页面所定义的函数名  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;title:&nbsp;string;&nbsp;//&nbsp;配置时显示名称&nbsp;与&nbsp;id&nbsp;一致  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&gt;  
&nbsp;&nbsp;};  
&nbsp;&nbsp;bridge?:&nbsp;{&nbsp;//&nbsp;桥接  
&nbsp;&nbsp;imports?:&nbsp;Array&lt;{  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name:&nbsp;string;&nbsp;//&nbsp;配置时显示名称  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;type:&nbsp;"package"&nbsp;|&nbsp;"local";&nbsp;//&nbsp;package:&nbsp;npm&nbsp;包;&nbsp;local:&nbsp;本地文件  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path:&nbsp;string;&nbsp;//&nbsp;导入的路径 (包名或者本地路径)  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;item:&nbsp;string;&nbsp;//&nbsp;导入的项目  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;useDefault?:&nbsp;boolean;&nbsp;//&nbsp;是否默认导出  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;instance?:&nbsp;string;&nbsp;//&nbsp;实例名，需要注入 service 时需要添加该字段，typescript&nbsp;模式下使用  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&gt;  
&nbsp;&nbsp;};  
&nbsp;&nbsp;inputs:&nbsp;Array&lt;{&nbsp;//&nbsp;页面接口：输入类型  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name:&nbsp;string;&nbsp;//&nbsp;输入属性名称  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;type:&nbsp;string;&nbsp;//&nbsp;数据类型声明  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;defaultValue?:&nbsp;any;&nbsp;//&nbsp;默认值  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&gt;;  
&nbsp;&nbsp;outputs:&nbsp;Array&lt;{&nbsp;//&nbsp;页面接口：事件输出  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name:&nbsp;string;&nbsp;//&nbsp;typescript 类型声明  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;type:&nbsp;string;&nbsp;//&nbsp;数据类型声明  
&nbsp;&nbsp;}&gt;;  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;schema?:&nbsp;IComponentMetaSchema&nbsp;//&nbsp;区块时使用，区块需要暴露的组件属性元数据  
&nbsp;&nbsp;}
</code></pre><p>对于需要被搜索引擎爬虫 SEO 的用户，也可以用服务端 SSR 的解决方式。这种方案也可以用来快速查看自己编辑的页面。</p><pre><code class="language-js"> // 伪代码
 function render(_schema) {
  let _arr = []
  _schema.forEach((item) =&gt; {
    let componentName = item.componentName
    if (item.children &amp;&amp; item.children.length) {
      _arr.push(
        h(componentName, item.props, [
          item?.props?.text,
          render(item.children),
        ]),
      )
    } else {
      const text = item?.props?.text || ''
      _arr.push(h(componentName, item.props, text))
    }
  })

  return _arr
}
</code></pre><ul><li><strong>TinyEngine 支持高低代码混合开发。</strong></li></ul><p>高低代码混合开发可以更好地满足业务需求。在企业的应用开发中，往往需要面对快速变化的业务需求，此时，如果全部采用低代码方式进行开发，则可能会因为代码的复杂性而无法快速适应变化。而如果采用高低代码混合的方式，则可以通过低代码进行常规业务的快速开发，对于特殊的业务逻辑，则由专业开发人员通过高代码进行实现，这样就可以更好地满足业务需求的变化。</p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopentiny.design%2F" target="_blank">TinyEngine</a> 在构建应用程序的过程中，提供了下载源代码的功能，使得用户可以在线下进行复杂业务逻辑的调试。这一特点极大地便利了开发者的操作，减少了在线调试和测试的时间和资源消耗，同时也提高了代码的质量和可靠性。通过下载源代码进行调试，用户可以更加灵活地控制应用程序的行为和性能，从而更好地满足业务需求。总之，TinyEngine 的这一特点为用户提供了更多的自主权和灵活性，使得他们可以更加高效地控制应用程序的行为和性能。</p><ul><li><strong>TinyEngine 支持 AI 辅助开发。</strong> &nbsp;</li></ul><p>低代码平台与 AI 的结合具有巨大的发展潜力。这种结合可以在很大程度上提高非专业开发者的开发效率和应用智能化水平。随着 AI 技术的不断发展和低代码平台的不断成熟，二者的结合将会在更多领域内实现更高效、更智能的业务流程和管理模式，带来更大的商业价值。</p><p>低代码平台通过提供易于使用的开发工具和预先构建的模块，简化了应用程序的开发过程。AI 技术则可以帮助应用程序具备更智能、更自适应的特性。通过低代码平台和 AI 的结合，开发者可以更快速、更高效地构建应用程序，并实现更智能化的应用特性。</p><p><img src="https://oscimg.oschina.net/oscnet/up-3acfa3b07927729dbdd65990716f506f4e0.gif" alt="" referrerpolicy="no-referrer"></p><h2>企业关于低代码的需求</h2><ul><li><h3>PDM 元数据电子审批流</h3></li></ul><p>审批流业务场景是现代企业运营中不可或缺的一环。业务流程从某个特定点开始，然后经过一系列的审批节点，完成流程的审批。这些节点通常由不同级别的人员担任，例如主管、经理、财务、法务和总经理等，每个人都扮演着特定的角色和职责。</p><p>假设场景如下：流程发起人 A 启动了一个电子审批流程。这个流程首先会被传递到主管进行审批。在审批过程中，主管会仔细检查初始业务流程信息和其他相关数据，然后决定是否进一步推进流程，或退回给 A 进行修订。如果主管批准了这个流程，那么它将被移交给下一级审批人，也就是经理。在经理的审批环节，他/她也会详查相关数据和信息，并基于这些以及自己的独立判断来做出决策。值得注意的是，尽管经理可以查看到主管填写的一些技术信息，但这些信息并不对财务和法务公开。也就是说，只有经理和总经理可以看到这些技术信息，财务和法务无法获知。经理会根据这些保密信息以及自己的专业判断来决定是否继续推进流程。</p><p>如果经理也批准了该流程，那么它将被送至财务节点进行审批。在审批过程中，财务主要关注经济相关的问题，例如价格、付款方式等等。一旦财务审批通过，流程会被移交给法务进行审批。</p><p>与财务审批类似，法务审批主要关注法律风险和合规性问题。在审批时，法务会仔细检查相关的合同、协议等法律文件，并评估是否存在任何法律风险或合规性问题。一旦法务批准了流程，流程将被移交给总经理进行最后的审批，以完成整个审批流程。 <img src="https://oscimg.oschina.net/oscnet/up-9fc0999e0fce89328d824f66ddf847869ac.png" alt="" referrerpolicy="no-referrer"> 需要注意的是，这种审批流业务场景并不是只有一个，而是有很多个。例如，除了上述的采购流程，还有其他业务流程需要进行审批，比如：数据入库流程、报价流程等等。每个流程都有自己的特点和审批节点数量不一。有些流程可能只需要两三个节点就可以完成审批，有些则可能需要十几个节点才能完成。但是，所有类型的审批流大致相似。如：页面上常见的元素包括表单、表格以及常用的审批组件等。</p><p><strong>技术分析：</strong> 若采用传统的开发方式，每当新增一种流程时，前端开发人员都需要开发所有审批节点的审批页面，并重新进行发布流程。同样地，服务端开发人员也需要重新建立一个审批流，通过特定页面录入各节点审批人，并编写相应的审批流规则。显然，这对于前端和服务端开发人员来说都是十分繁琐的工作。</p><p><strong>解决方案：</strong> &nbsp;基于 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopentiny.design%2F" target="_blank">TinyEngine</a> 低代码引擎，开发出一个专为电子审批流设计的低代码平台。然后，将所有与流程相关的组件，如模板、评审记录和流程指引等导入到平台的物料区域。最后，将这个专注于开发审批流的低代码平台集成到 PDM 元数据电子流业务模块中。在低代码平台上，想要开发任意一个流程的审批页面，只需要将流程模板拖入，并在模板中嵌入本流程的表单或表格，即可轻松完成该节点的审批页面，极大地提高了开发效率和便利性！ 服务端也将采用另一种特定于 flow 类型的低代码平台（将在后续内容中详细介绍），以实现对审批流程人员编排。这样，前后端之间的连接就实现了完美的贯通。</p><p><img src="https://oscimg.oschina.net/oscnet/up-a11ab19ac7c4e4cc0c06599cea2390308c9.png" alt="" referrerpolicy="no-referrer"></p><ul><li><h3>Flow 图元编排类型设计器</h3></li></ul><p>图形编排在众多场景中扮演着重要角色，例如流程图、审批流、部署流水线和架构图等。资源编排只是编排的主体变成了云服务资源。</p><p>资源编排遵循基础设施即代码（Infrastructure as Code, IaC）的设计理念，资源编排与以往单独管理每种云服务资源的方式有所不同。通过资源编排设计器，用户无需手动创建多个资源，只需在平台上使用设计器进行拖拽和配置，即可生成模板，并一键部署多个资源。这样，用户可以更加高效地管理和编排云服务资源，提高资源的利用率和部署速度。</p><p>因此，针对资源编排服务场景，我们需要定制一个专用的低代码平台来满足用户的需求。该平台将具备图形化界面，允许用户通过简单的拖拽和配置来创建、修改和删除资源编排模板，而无需编写大量的代码。此外，该平台还将支持一键部署功能，以快速部署多个资源，提高资源编排的效率和速度。</p><p>考虑到需要支持大量的云服务资源，且每个云服务资源需要配置的属性各不相同，因此采用传统开发方式为每种云服务资源开发专门的属性设置页面是不可行的。因此，我们需要一个能够自定义渲染的属性配置方案。通过自定义渲染，用户可以根据不同的云服务资源类型和属性，自由地定义和控制属性页面的交互效果，从而提高属性配置的灵活性和可扩展性。</p><p>同时模板是极为重要的一环，它直接关系到最终资源的部署。因此，模板需要符合特定的标准格式，这就要求画布和属性面板的输入必须能够准确反映到最终的模板中。</p><p>整理出主要的述求：</p><ul><li>整个页面应至少包含以下几部分：资源列表、画布和属性设置面板</li><li>画布应具备核心的拖拽和连线绘图功能，以支持用户直观地进行资源编排</li><li>属性设置面板需要支持自定义配置渲染，以满足不同云服务资源类型和属性的配置需求</li><li>该平台应具备可拓展性，以支持开发出其他能力，满足未来可能出现的新的编排需求</li></ul><p>在分析了上述需求后，我们可以清楚地看到，使用传统开发方式将面临巨大的工作量和现实的实现困难。同时，经过对比发现，资源编排设计器和低代码设计器之间有许多相似之处，例如它们都涉及基础资源、拖拽操作和配置功能，只是在画布区域存在差异。</p><p><strong>解决方案：</strong> TinyEngine 作为一个出色的低代码引擎，通过优秀的整体架构提供了高度自由的定制能力。它允许我们像搭积木一样选择不同的积木来搭建一个专属的设计器。同时，属性面板全部通过 JSON 配置文件进行渲染，无需编写任何代码，灵活而强大。这种开发方式可以大大降低开发成本，提高效率。 该设计器的布局类似于 VS Code，核心模板与功能区域划分清晰明了，易于上手。插件化的架构也使得自由拓展业务相关功能变得轻而易举。 综上所述，我们最终决定使用 TinyEngine 来开发图元编排设计器，以满足资源编排的需求。</p><p><img src="https://oscimg.oschina.net/oscnet/up-83884bfe0dc60af97c83a8fcd38fb3980d5.png" alt="" referrerpolicy="no-referrer"></p><ul><li><h3>其他业务类型的低码平台诉求</h3></li></ul><p>1，跨境电商的低代码平台，旨在方便商家快速装修店铺。商家只需要从平台提供的模板中选择一套适合自己的商品模板，并进行文字和图片的修改，即可快速建立自己的电商网站。此外，该平台还需要具备方便搜索引擎优化（SEO）的功能，让商家的电商网站更容易被潜在客户发现。</p><p>2，随着移动互联网的迅速普及，各种应用程序推送消息的需求日益增长。在这个背景下，APP 厂商只需要使用推送消息平台提供的模板，并简单配置一下推送内容和样式，即可轻松实现消息推送。</p><p>3，运维管理平台是针对企业运营过程中涉及的各种数据和页面进行管理的工具。随着企业运营数据的不断增加，页面变得越来越复杂。其实不同的岗位对于关心的信息也不尽相同。低代码平台的应用可以让不同岗位的员工通过简单的拖拽操作，轻松获取自己需要的数据和信息。这种方式不仅可以提高工作效率，而且还可以降低操作难度，使得更多人可以轻松上手使用。</p><h2>未来展望</h2><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopentiny.design%2F" target="_blank">TinyEngine</a> 专注于为用户提供低代码的基础能力，目前正致力于跟生成式 AI 相结合，与用户共同打造面向未来的应用。</p><h2><strong>其他说明</strong></h2><p><img src="https://oscimg.oschina.net/oscnet/up-82d36f2d7d034985e744c65d9c21470bba8.png" alt="" referrerpolicy="no-referrer"></p><p>OpenTiny&nbsp;是一套企业级 Web 应用构建解决方案，提供跨端、跨框架的 UI 组件库，适配 PC 端 / 移动端等多端，支持&nbsp;Vue2 / Vue3 / Angular&nbsp;多技术栈，拥有集成人工智能的低代码引擎，包含主题配置系统 / 中后台模板 / CLI&nbsp;命令行等丰富的效率提升工具，可帮助开发者高效开发 Web 应用。</p><p><strong>核心亮点：</strong></p><ul><li>跨端跨框架：&nbsp;使用 Renderless 无渲染组件设计架构，实现了一套代码同时支持 Vue2 / Vue3，PC / Mobile 端，并支持函数级别的逻辑定制和全模板替换，灵活性好、二次开发能力强</li><li>组件丰富：PC 端有 100+组件，移动端有 30+组件，包含高频组件 Table、Tree、Select 等，内置虚拟滚动，保证大数据场景下的流畅体验，除了业界常见组件之外，我们还提供了一些独有的特色组件，如：Split 面板分割器、IpAddress IP 地址输入框、Calendar 日历、Crop 图片裁切等</li><li>集成人工智能：低代码引擎提供低代码底层的能力，集成人工智能，让 AI 助力用户高效开发，适用于多场景的低代码平台开发。如：资源编排、服务端渲染、模型驱动、移动端、大屏端、页面编排等低代码平台</li><li>配置式组件：&nbsp;组件支持模板式和配置式两种使用方式，适合低代码平台，目前团队已经将 OpenTiny 集成到内部的低代码平台，针对低码平台做了大量优化</li><li>周边生态齐全：&nbsp;提供了基于 Angular + TypeScript 的 TinyNG 组件库，提供包含 10+ 实用功能、20+ 典型页面的 TinyPro 中后台模板，提供覆盖前端开发全流程的 TinyCLI 工程化工具，提供强大的在线主题配置平台 TinyTheme</li></ul><hr><p>欢迎加入 OpenTiny 开源社区。添加微信小助手：opentiny-official 一起参与交流前端技术～</p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.juejin.cn%2F%3Ftarget%3Dhttps%253A%252F%252Fopentiny.design%252F" title="https://link.juejin.cn/?target=https%3A%2F%2Fopentiny.design%2F" target="_blank">OpenTiny 官网</a>&nbsp;：<strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.juejin.cn%2F%3Ftarget%3Dhttps%253A%252F%252Fopentiny.design%252F" title="https://link.juejin.cn/?target=https%3A%2F%2Fopentiny.design%2F" target="_blank">opentiny.design/</a></strong></p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.juejin.cn%3Ftarget%3Dhttps%253A%252F%252Fgithub.com%252Fopentiny%252F" title="https://github.com/opentiny/" target="_blank">OpenTiny 代码仓库</a>：<strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.juejin.cn%3Ftarget%3Dhttps%253A%252F%252Fgithub.com%252Fopentiny%252F" title="https://github.com/opentiny/" target="_blank">github.com/opentiny/</a></strong></p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.juejin.cn%2F%3Ftarget%3Dhttps%253A%252F%252Fopentiny.design%252Ftiny-vue" title="https://link.juejin.cn/?target=https%3A%2F%2Fopentiny.design%2Ftiny-vue" target="_blank">Vue 组件库</a>：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.juejin.cn%2F%3Ftarget%3Dhttps%253A%252F%252Fopentiny.design%252Ftiny-vue" title="https://link.juejin.cn/?target=https%3A%2F%2Fopentiny.design%2Ftiny-vue" target="_blank">opentiny.design/tiny-vue</a></p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.juejin.cn%2F%3Ftarget%3Dhttps%253A%252F%252Fopentiny.design%252Ftiny-ng" title="https://link.juejin.cn/?target=https%3A%2F%2Fopentiny.design%2Ftiny-ng" target="_blank">Angular 组件库</a>：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.juejin.cn%2F%3Ftarget%3Dhttps%253A%252F%252Fopentiny.design%252Ftiny-ng" title="https://link.juejin.cn/?target=https%3A%2F%2Fopentiny.design%2Ftiny-ng" target="_blank">opentiny.design/tiny-ng</a></p><p>欢迎进入代码仓库 Star🌟TinyVue、TinyNG、TinyCLI~</p><p>如果你也想要共建，可以进入代码仓库，找到&nbsp;<code>good first issue</code>标签，一起参与开源贡献~</p><p><strong>往期文章推荐</strong></p><p><img src="https://oscimg.oschina.net/oscnet/up-e8bd5f9b0f2dedea3b5fcd23ab93a80c124.png" alt="" referrerpolicy="no-referrer"></p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.juejin.cn%3Ftarget%3Dhttp%253A%252F%252Fmp.weixin.qq.com%252Fs%253F__biz%253DMzU5ODA3OTY5Ng%253D%253D%2526mid%253D2247491605%2526idx%253D1%2526sn%253Db85064d6b81a2a673bc9e1eeea82a1dd%2526chksm%253Dfe4b01aac93c88bc1de779f6e558da7cdd181cec49a1fbdac804b54bab19729cbc45ddf3f104%2526scene%253D21%2523wechat_redirect" title="http://mp.weixin.qq.com/s?__biz=MzU5ODA3OTY5Ng==&amp;mid=2247491605&amp;idx=1&amp;sn=b85064d6b81a2a673bc9e1eeea82a1dd&amp;chksm=fe4b01aac93c88bc1de779f6e558da7cdd181cec49a1fbdac804b54bab19729cbc45ddf3f104&amp;scene=21#wechat_redirect" target="_blank">必不可少的 UI 组件一——组件的基础知识</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.juejin.cn%3Ftarget%3Dhttp%253A%252F%252Fmp.weixin.qq.com%252Fs%253F__biz%253DMzU5ODA3OTY5Ng%253D%253D%2526mid%253D2247491250%2526idx%253D1%2526sn%253D66b6840f3f93d415a33b9ade09dcd9b8%2526chksm%253Dfe48ff0dc93f761ba3965380b759b184616d9dc39a903f1bda689037ba0b177c98fb0bae7c38%2526scene%253D21%2523wechat_redirect" title="http://mp.weixin.qq.com/s?__biz=MzU5ODA3OTY5Ng==&amp;mid=2247491250&amp;idx=1&amp;sn=66b6840f3f93d415a33b9ade09dcd9b8&amp;chksm=fe48ff0dc93f761ba3965380b759b184616d9dc39a903f1bda689037ba0b177c98fb0bae7c38&amp;scene=21#wechat_redirect" target="_blank">OpenTiny Vue 3.10.0 版本发布：组件 Demo 支持 Composition 写法，新增 4 个新组件</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.juejin.cn%3Ftarget%3Dhttp%253A%252F%252Fmp.weixin.qq.com%252Fs%253F__biz%253DMzU5ODA3OTY5Ng%253D%253D%2526mid%253D2247490886%2526idx%253D1%2526sn%253D3c0fcbe86c01b01e0ed876904743ca76%2526chksm%253Dfe48fcf9c93f75ef621391689021922451ae5621c75f0c5c3024352d9df8d0f18139095865f9%2526scene%253D21%2523wechat_redirect" title="http://mp.weixin.qq.com/s?__biz=MzU5ODA3OTY5Ng==&amp;mid=2247490886&amp;idx=1&amp;sn=3c0fcbe86c01b01e0ed876904743ca76&amp;chksm=fe48fcf9c93f75ef621391689021922451ae5621c75f0c5c3024352d9df8d0f18139095865f9&amp;scene=21#wechat_redirect" target="_blank">前端 Vuer，请收好这份《Vue 组件单元测试》宝典</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.juejin.cn%3Ftarget%3Dhttp%253A%252F%252Fmp.weixin.qq.com%252Fs%253F__biz%253DMzU5ODA3OTY5Ng%253D%253D%2526mid%253D2247490622%2526idx%253D1%2526sn%253Df928726a3608ebf0999529187dc2a22c%2526chksm%253Dfe48fd81c93f7497608ed97ea0d60d12b61d03c062ebda49c84a9c4e3cdb0550e25930df9aa1%2526scene%253D21%2523wechat_redirect" title="http://mp.weixin.qq.com/s?__biz=MzU5ODA3OTY5Ng==&amp;mid=2247490622&amp;idx=1&amp;sn=f928726a3608ebf0999529187dc2a22c&amp;chksm=fe48fd81c93f7497608ed97ea0d60d12b61d03c062ebda49c84a9c4e3cdb0550e25930df9aa1&amp;scene=21#wechat_redirect" target="_blank">OpenTiny 前端组件库正式开源啦！面向未来，为开发者而生</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.juejin.cn%3Ftarget%3Dhttp%253A%252F%252Fmp.weixin.qq.com%252Fs%253F__biz%253DMzU5ODA3OTY5Ng%253D%253D%2526mid%253D2247490528%2526idx%253D1%2526sn%253D911d84e6bb275e6125464f07643c1150%2526chksm%253Dfe48fa5fc93f734911c4f44a5f4e2d6c4e29e00ad68cae35c4edc3771de1cbf65cd5f2a8a224%2526scene%253D21%2523wechat_redirect" title="http://mp.weixin.qq.com/s?__biz=MzU5ODA3OTY5Ng==&amp;mid=2247490528&amp;idx=1&amp;sn=911d84e6bb275e6125464f07643c1150&amp;chksm=fe48fa5fc93f734911c4f44a5f4e2d6c4e29e00ad68cae35c4edc3771de1cbf65cd5f2a8a224&amp;scene=21#wechat_redirect" target="_blank">从自研走向开源的 TinyVue 组件库</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.juejin.cn%3Ftarget%3Dhttp%253A%252F%252Fmp.weixin.qq.com%252Fs%253F__biz%253DMzI2MDE3MTM4MA%253D%253D%2526mid%253D2701520396%2526idx%253D1%2526sn%253Dbd42224d212cb4b78ffcbca98f463db8%2526chksm%253Dce9cfd17f9eb7401d41b21639f80b09846a1c44b237c6733b809aeb2259c3d2521c88c490e7a%2526scene%253D21%2523wechat_redirect" title="http://mp.weixin.qq.com/s?__biz=MzI2MDE3MTM4MA==&amp;mid=2701520396&amp;idx=1&amp;sn=bd42224d212cb4b78ffcbca98f463db8&amp;chksm=ce9cfd17f9eb7401d41b21639f80b09846a1c44b237c6733b809aeb2259c3d2521c88c490e7a&amp;scene=21#wechat_redirect" target="_blank">我要做开源，提交我的第一个 PR</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Fri, 22 Sep 2023 10:31:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/6769809/blog/10112556</guid>
            <link>https://my.oschina.net/u/6769809/blog/10112556</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[OpenTiny 低代码开发引擎子项目 TinyEngine 正式发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://www.oschina.net/question/4489239_2331019" _blank"="">
数据技术都能四世同堂，凭什么开发 30 岁就要被干掉？ 
<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p>2023 年 9 月 21 日，华为全联接大会 2023 「开源创新，共筑智能世界」论坛在上海前滩香格里拉酒店圆满落幕。在此次开源分论坛上，华为云开源业务总经理邓明昆进行了题为《开源协同创新，加速云计算应用》的分享。</p><p><img alt="" height="333" src="https://oscimg.oschina.net/oscnet/up-117a8ef69eb67291660e465882856e89581.webp" width="500" referrerpolicy="no-referrer"></p><p><em>华为云开源业务总经理，邓明昆</em></p><p>邓明昆在分论坛演讲中提到：云原生技术以「分布式、松耦合、高韧性」等特征在企业基础架构升级及应用开发上展现出巨大的价值，越来越多企业开始基于云原生构建面向未来的创新服务。华为云深耕云原生，坚持开放共享，协同推动云原生技术创新与生态发展，共创新价值，释放数字生产力。 截止到目前，华为云已经开源了多个开源项目，并吸引了社区广大开发者的深度参与和支持。</p><p><strong>1.聚焦分布式云原生技术设施与云原生应用技术栈开源</strong></p><p>Kurator 整合多云、多集群统一编排、统一调度、统一流量治理，统一监控运维、边云协同等核心能力，助力广大开发者快速搭建分布式云原生平台，实现跨云跨边的一致性分布式云原生应用体验。</p><p>与此同时，华为云还将云原生技术栈开源，帮助开发者快速构建云原生应用。通过云原生应用技术栈，开发者可以专注业务实现，应用一跳入云，实现业务敏捷、高效创新。</p><p><img alt="" height="333" src="https://oscimg.oschina.net/oscnet/up-2509296725ce8927bcbc81f4e5c44bb5cfc.webp" width="500" referrerpolicy="no-referrer"></p><p><strong>2.Volcano 特性升级，新能力释放大模型计算潜力</strong></p><p>大模型时代，以 GPU 为核心的算力供给已成为大模型产业发展的关键基础设施，用户对于 GPU 资源的使用存在资源利用率低、资源分配不灵活等痛点问题，必须采购大量冗余的异构算力才能满足业务需求，异构算力成本高昂，为企业的发展带来很大的负担。</p><p>基于此现状，邓明昆在演讲中向大家介绍了 Volcano 的两个重点特性：<strong> GPU 调度与隔离以及 JobFlow 工作流编排引擎支持。</strong></p><ul><li>通过 GPU 资源多任务共享，GPU 资源按比例分配等技术来大幅提升算力资源的利用率，降低算力成本。</li><li>通过支持 JobFlow 轻量任务流编排引擎，帮助开发者简化多个任务并行与依赖关系的管理，大幅度提升整体计算效率。</li></ul><p><strong>3. OpenTiny 低代码开发引擎子项目 TinyEngine 正式发布，AI 辅助加速应用创新</strong></p><p>OpenTiny 作为开源的跨端、跨框架、跨版本企业级前端组件方案，可以帮助开发者快速构建极致体验的云原生应用。在本次大会中，邓明昆正式对外发布了低代码开发引擎子项目 TinyEngine。</p><p>TinyEngine 低码引擎通过接入华为云盘古大模型等各类大模型的强大能力，使得开发者通过文本交互或者语音对话就可以完成 WEB 应用的开发，应用技术门槛大幅降低，开发效率大幅提升，实现企业应用的高效敏捷、极致体验。</p><p>邓明昆强调：</p><p>「华为云坚持深耕云原生，坚持开源开放，我们希望通过开源、开放，能够快速凝聚企业、开源组织、学术机构、以及广大开发者一起推动云原生技术共享，以及云原生产业的标准化，真正实现云原生产业创新与生态发展，共创新价值，释放数字生产力！」</p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 22 Sep 2023 10:22:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/259135</guid>
            <link>https://www.oschina.net/news/259135</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[CentOS Integration SIG 成立]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://www.oschina.net/question/4489239_2331019" _blank"="">
数据技术都能四世同堂，凭什么开发 30 岁就要被干掉？ 
<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p><span style="color:#000000">CentOS 董事会已<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.centos.org%2F2023%2F09%2Fcentos-board-meeting-recap-september-2023%2F" target="_blank">批准</a>成立 CentOS Integration Special Interest Group (SIG)。该小组旨在帮助那些在 Red Hat Enterprise Linux (RHEL) 或特别是其上游 CentOS Stream 上构建产品和服务的人员，验证其能否在未来版本中继续运行。</span></p><p><span style="color:#000000">红帽 RHEL CI 工程师 Aleksandra Fedorova 在相关</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flists.centos.org%2Fpipermail%2Fcentos-devel%2F2023-August%2F143077.html" target="_blank">提案</a><span style="color:#000000">中提出：</span></p><blockquote><p style="text-align:start"><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span>我想提议成立一个新的特别兴趣小组，专注于围绕 CentOS Stream 的集成工作。</span></span></span></span></span></span></span></span></span></span></span></span></span></p><p><span style="color:#000000">集成就是验证构建在 RHEL 或 CentOS Stream 基础上的产品和服务能否在 CentOS Stream 和下一个 RHEL 版本上继续运行，并且不会因软件包更新而中断。</span></p><p><span style="color:#000000">由于 RHEL 内容只有在发布后才可用，因此&nbsp;</span>RHEL-based<span>&nbsp;</span><span style="color:#000000">服务传统上使用的是 catching-up 集成模式：人们必须在更新发布后调整其产品和服务，以便在新的 RHEL 上运行。调整服务需要时间，会占用受支持的 RHEL 生命周期。这也减少了我们处理破坏性变更的选择。</span></p><p><span style="color:#000000">CentOS Stream 提供了一种实现前瞻性集成的方法：你可以在开发过程中，在变更发布到 CentOS Stream 或 RHEL 软件源之前，尽早进行集成。这样，我们就可以防止或至少为任何可能通过 CentOS Stream 或 RHEL 更新发布的破坏性变更做好准备。</span></p></blockquote><p><span style="color:#000000">此&nbsp;SIG 的目的在于，在 CentOS Stream 更新发布到 CentOS 镜像之前，提供一个共享空间来开发和维护有关协作控制和测试 CentOS Stream 更新的工具和知识库。包括 package-level&nbsp;和 compose-level 集成。</span></p><p><span style="color:#000000">SIG 计划将记录其他 SIG 使用的现有集成工作流程；确定常见问题；管理、开发和推广 CentOS Stream 的第三方 CI；以及开发集成工具包。</span></p><p><span style="color:#000000">在 SIG 获得董事会批准之后，Aleksandra Fedorova 还发帖<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdiscussion.fedoraproject.org%2Ft%2Fcentos-integration-sig-everyone-is-welcome%2F90378" target="_blank">表示</a>，该小组正在建立工具和沟通渠道，欢迎大家加入并探讨合作方式。</span></p><p><img height="315" src="https://oscimg.oschina.net/oscnet/up-3e6928d626dc3ff9422b7d4ff53f37fa148.png" width="500" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 22 Sep 2023 09:07:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/259120/centos-integration-sig</guid>
            <link>https://www.oschina.net/news/259120/centos-integration-sig</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Gitee 推荐 | 开源华容道（滑块拼图）游戏]]>
            </title>
            <description>
                <![CDATA[<pre class="clean txt-style">这是一款 linux 平台下的滑块拼图游戏. 详细文档参见 doc/slide.pdf.
游戏按前后台模式设计. 后台负责游戏规则实现和流程控制, 前台负责与用户交互. 
前端开发者可以基于软件包内的游戏引擎部分开发不同的用户界面.

软件包内包含 3 个部分:

1) 游戏引擎
2) ncurses 的前端
3) gtk3 的前端

编译运行方法为:

1) 游戏引擎 (无法直接运行)
make

2) 基于 ncurses 的前端
make sp_cs
./sp_cs

3) 基于 gtk3 的前端
make sp_gtk
./sp_gtk

依赖:

ncurses
gtk3
pkg-config</pre>
]]>
            </description>
            <pubDate>Fri, 22 Sep 2023 07:19:00 GMT</pubDate>
            <guid isPermaLink="false">https://gitee.com/tfcolin/slide</guid>
            <link>https://gitee.com/tfcolin/slide</link>
        </item>
        <item>
            <title>
                <![CDATA[PHP、.NET 和 Java 到底谁遥遥领先，看评论区见高低！]]>
            </title>
            <description>
                <![CDATA[<h1 class="header article-title"><a href="https://www.oschina.net/question/2720166_2331057">PHP、.NET 和 Java 到底谁遥遥领先，看评论区见高低！</a><div class="ui red label horizontal" data-tooltip="置顶">顶</div></h1><div class="extra ui horizontal list meta-wrap"><div class="item"><a href="https://my.oschina.net/hardbone" class="__user"><span>局</span></a> 发布于，昨天 12:32
                    </div><div class="item">阅读 4K+</div><div class="item collect-btn " data-id="2331057" data-user-id="2720166" data-obj-type="2" data-max="99" data-tag-required="" data-current-user-id="" data-recommend-tags="PHP"><i class="star outline icon"></i> 收藏 <span data-collect-count="" data-id="2331057" data-obj-type="2">3</span></div><div class="item comment-count"><a href="https://www.oschina.net/question/2720166_2331057#comments" class="normal"><i class="comment outline icon"></i> 答案 <span data-article-reply-count="">12</span></a></div></div><div class="tags"><a class="ui horizontal label" href="https://www.oschina.net/question/tag/php" target="_blank"><img src="https://static.oschina.net/uploads/logo/php_C12WY.png" referrerpolicy="no-referrer">PHP</a></div><div class="content" id="articleContent"><p class="ad-wrap"><a data-traceid="question_detail_above_text_link_ad" data-tracepid="question_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://www.oschina.net/question/4489239_2331019" target="_blank">数据技术都能四世同堂，凭什么开发 30 岁就要被干掉？&gt;&gt;&gt; <img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></p><p>上周末将《<a href="https://www.oschina.net/news/257647/an-internet-of-php" target="_blank" rel="nofollow">PHP 最新统计数据：市场份额超 7 成、CMS 中的王者</a>》这篇新闻挂到了置顶位，并且修改了标题——《PHP 遥遥领先》。</p><p><img src="https://static.oschina.net/uploads/space/2023/0922/121304_DUFP_2720166.png" referrerpolicy="no-referrer"></p><p>「编程语言一哥」PHP 不负众望，水友们的评论马上干到了上百条。春哥<a href="https://my.oschina.net/easysoft" target="_blank" rel="nofollow"></a><a href="https://my.oschina.net/easysoft" target="_blank" rel="nofollow">@开源春哥</a> 甚至让我长期置顶这篇新闻：</p><blockquote><p><img height="464" src="https://static.oschina.net/uploads/space/2023/0922/120758_eC7B_2720166.png" width="1747" referrerpolicy="no-referrer"></p></blockquote><p>刚好 Java 前天也发布了重大更新<strong>&nbsp;<a href="https://www.oschina.net/news/258730/jdk-21-lts-ga" target="_blank" rel="nofollow">Java 21 LTS</a></strong>，上周&nbsp;<strong>.NET 8&nbsp;也发布了<a href="https://www.oschina.net/news/258091/performance-improvements-in-dot-net-8" target="_blank" rel="nofollow">首个 RC</a></strong>。</p><p>下面就来看看三大编程语言金刚的评论区表现。</p><p><img height="368" src="https://oscimg.oschina.net/oscnet/up-56c5275191fd70caf6787c4a196ed4b4eee.png" width="1298" referrerpolicy="no-referrer"></p><p><img src="https://oscimg.oschina.net/oscnet/up-2229a1117aad67bb82de3971896f8a2c3ab.png" referrerpolicy="no-referrer"></p><p><img src="https://oscimg.oschina.net/oscnet/up-5f055ef0241f6ea1c078a62eee16e4f84fd.png" referrerpolicy="no-referrer"></p><p>看到这，一眼高下立辨了吧？</p><p>不服？继续看各自的精彩评论：</p><ul><li><strong>.NET</strong></li></ul><p><img src="https://oscimg.oschina.net/oscnet/up-376d055216fd9aa85439f8eb344a71c3d06.png" referrerpolicy="no-referrer"></p><ul><li><strong>Java</strong></li></ul><p><img src="https://oscimg.oschina.net/oscnet/up-1c44bba64b7ddae051509774c0982fb8ad8.png" referrerpolicy="no-referrer"></p><ul><li><strong>PHP</strong></li></ul><p><img src="https://oscimg.oschina.net/oscnet/up-52b51e937e44bdbbd46d14a2716a1c39cf6.png" referrerpolicy="no-referrer"></p><p>好了，不多说了。Sir，this way——</p><ul><li><a href="https://www.oschina.net/comment/news/258091" target="_blank" rel="nofollow">.NET 8 性能大幅提升，比 .NET 7 遥遥领先</a></li><li><a href="https://www.oschina.net/comment/news/258730" target="_blank" rel="nofollow">Java 21 / JDK 21 (LTS) GA</a></li><li><a href="https://www.oschina.net/comment/news/257647" target="_blank" rel="nofollow">PHP 最新统计数据：市场份额超 7 成、CMS 中的王者</a></li></ul></div><div class="poll-wrap"></div><div class="additional-remarks"></div><div class="ui basic center aligned segment action"><div class="ui big buttons"><a class="ui basic button collect-btn hover" data-id="2331057" data-user-id="2720166" data-obj-type="2" data-max="99" data-tag-required="" data-current-user-id="" data-recommend-tags="PHP"><i class="star outline icon"></i>收藏 (<span data-collect-count="" data-id="2331057" data-obj-type="2">3</span>)</a><div class="ui basic dropdown share button osc-share dropdown-share" data-tag="share-question"><i class="share icon"></i><span>分享</span><div class="menu"><a class="item" data-platform="weibo" data-value="weibo"><i class="weibo icon"></i>微博</a><a class="item" data-platform="qq" data-value="qq"><i class="qq icon"></i>QQ</a><a class="item" data-platform="wechat" data-value="wechat"><i class="weixin icon"></i>微信</a></div></div></div><div class="ui basic segment"><a class="ban" ban-report="" data-id="2331057" data-obj-type="2" data-url="https://www.oschina.net/question/2720166_2331057"><i class="flag red icon"></i>举报</a></div></div>
            ]]>
            </description>
            <pubDate>Fri, 22 Sep 2023 04:32:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/question/2720166_2331057</guid>
            <link>https://www.oschina.net/question/2720166_2331057</link>
        </item>
        <item>
            <title>
                <![CDATA[Windows 版 AI Copilot 将于 9 月 26 日推出]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://www.oschina.net/question/4489239_2331019" _blank"="">
数据技术都能四世同堂，凭什么开发 30 岁就要被干掉？ 
<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p><span style="color:#000000">微软<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblogs.microsoft.com%2Fblog%2F2023%2F09%2F21%2Fannouncing-microsoft-copilot-your-everyday-ai-companion%2F" target="_blank">宣布</a>将发布统一的人工智能助手 Copilot，称之为「Microsoft Copilot」；可在 Windows 11、Microsoft 365 以及 Edge 和必应的网络浏览器中使用。</span></p><p><span style="color:#000000"><img alt="" height="281" src="https://static.oschina.net/uploads/space/2023/0922/114210_h1cO_4252687.jpg" width="500" referrerpolicy="no-referrer"></span></p><p><span style="color:#000000">公告指出，Copilot 将作为 Windows 11 免费更新的一部分，从 9 月 26 日开始以早期形式推出；并将于今年秋季在必应、Edge 和 Microsoft 365 Copilot 上推出。</span></p><ul><li><span style="color:#000000">下一个 Windows 11 更新拥有 150 多项新功能。为 Windows PC 带来强大的 Copilot 功能和全新的人工智能体验，如画图、照片、剪贴板等应用程序。</span></li><li><span style="color:#000000">必应将增加对 OpenAI 最新 <a href="https://www.oschina.net/news/259053/openai-dall-e-3">DALL.E 3</a> 模型的支持，并根据用户的搜索历史提供更加个性化的答案，还将提供全新的人工智能购物体验，以及更新必应聊天企业版，使其更具移动性和可视化。DALL.E 3&nbsp;是 OpenAI 刚推出的最新图像生成 AI 模型，该模型本身已升级包括生成嵌入图像中的文本的能力，并且能够更好地理解用户对图像中对象之间关系的自然语言描述。</span></li><li><span style="color:#000000">Microsoft 365 Copilot 将于 2023 年 11 月 1 日与 Microsoft 365 Chat (曾用名 Business Chat) 一起面向企业客户全面推出。Microsoft 365 Chat 是一款全新的人工智能助手，可以梳理你工作中的所有数据，包括电子邮件、会议、聊天、文档等，还有网络。</span></li></ul><p><span style="color:#000000">Windows 中的 Copilot 集成提供的新功能之一是"Sound Like Me"，即 Copilot AI 可以扫描和分析你的写作风格，并在 Microsoft Outlook 中为你撰写电子邮件。微软方面还演示了新的 Windows 版 Copilot，类似于其当前的开放式人工智能 Bing Chat 应用界面，右侧栏允许用户与 Copilot 对话，并选择不同的选项。</span></p><p><span style="color:#000000">Microsoft 365 总经理 Colette Stallbaumer 在活动中<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fventurebeat.com%2Fai%2Fmicrosoft-announces-ai-copilot-for-windows-coming-september-26th%2F" target="_blank">发言</a>称，计划于 11 月 1 日推出的新 Microsoft 365 Copilot 可以跨多个网络源实时执行自己的市场研究，为员工提供准确的最新信息。「你很快就会无法想象没有它的生活。」</span></p><p><span style="color:#000000">更多详情可<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblogs.microsoft.com%2Fblog%2F2023%2F09%2F21%2Fannouncing-microsoft-copilot-your-everyday-ai-companion%2F" target="_blank">查看官方博客</a>。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 22 Sep 2023 03:41:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/259065/microsoft-copilot-windows</guid>
            <link>https://www.oschina.net/news/259065/microsoft-copilot-windows</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[思科 280 亿美元收购 Splunk]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://www.oschina.net/question/4489239_2331019" _blank"="">
数据技术都能四世同堂，凭什么开发 30 岁就要被干掉？ 
<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p>思科公司今日宣布，将以每股 157 美元的现金收购网络安全软件公司 Splunk，交易总金额约为 280 亿美元。</p><p>收购交易完成后，Splunk 总裁兼 CEO Gary Steele 将加入思科的高级领导团队，向思科董事长兼 CEO 查克・罗宾斯 (Chuck Robbins) 汇报工作。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-bfa94442f47d5f037a2aa360a512186ccfd.png" referrerpolicy="no-referrer"></p><p>Splunk 创建于 2003 年，总部位于旧金山，是一家网络安全公司，<strong>帮助企业监控和分析其数据，以最大限度地减少黑客攻击的风险，并更快地解决一些技术问题。</strong></p><p>罗宾斯对此表示：「我们很高兴能让思科和 Splunk 走到一起。两家公司合并后，将有能力推动下一代以人工智能（AI）为基础的安全和监控。从威胁检测和响应，到威胁预测和预防，我们将帮助各种规模的组织更安全、更具弹性。」</p><p>Splunk 总裁兼 CEO Gary Steele 称：「与思科的合并代表着 Splunk 下一阶段的成长之旅，这将加快我们的使命，帮助世界各地的组织变得更具弹性，同时为股东提供更多价值。」</p><p>思科表示，在这笔交易完成后的第一个财年，预计将推动公司实现正现金流和毛利率增长，并在第二年实现每股收益增长（基于非美国通用会计准则）。此外，它还将加快思科的营收和毛利率增长。</p><p>这笔交易不会影响思科之前宣布的股票回购计划和分红计划。目前，该交易已获得思科和 Splunk 董事会的一致批准，预计将在 2024 年第三季度末完成。</p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 22 Sep 2023 03:34:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/259064/cisco-to-acquire-splunk</guid>
            <link>https://www.oschina.net/news/259064/cisco-to-acquire-splunk</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[网易国产开源分布式存储系统 —— Curve]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><div data-traceid="news_comment_top_ad" data-tracepid="news_comment_top" style="text-align: center;"><a style="color:#A00;font-weight:bold;" href="https://www.oschina.net/question/4489239_2331019" target="_blank">数据技术都能四世同堂，凭什么开发 30 岁就要被干掉？ <img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div></div><p><strong>导读：</strong>Curve 是一款高性能、易运维、云原生的开源分布式存储系统 (CNCF Sandbox)。可应用于主流的云原生基础设施平台：对接 OpenStack 平台为云主机提供高性能块存储服务；对接 Kubernetes 为其提供 RWO、RWX 等类型的持久化存储卷；对接 PolarFS 作为云原生数据库的高性能存储底座，完美支持云原生数据库的存算分离架构。</p><p>Curve 亦可作为云存储中间件使用 S3 兼容的对象存储作为数据存储引擎，为公有云用户提供高性价比的共享文件存储。本文将介绍 Curve 块存储相关的部分，并分享 Curve 在一些场景的应用。</p><p><strong>全文目录：</strong></p><p>1.&nbsp;分布式存储介绍</p><p>2.&nbsp;Curve 架构及介绍</p><p>3.&nbsp;Curve 主要亮点</p><p>4.&nbsp;Curve RoadMap</p><p>5. 问答环节‍‍‍</p><hr><p style="text-align:center"><strong>01&nbsp;<strong style="font-weight:bold">分布式存储介绍</strong></strong></p><p><strong>1.分布式存储的分类</strong></p><p><img alt="图片" src="https://oscimg.oschina.net/oscnet/up-60548d0cd6163131fdc564e3830aa9d46cd.png" referrerpolicy="no-referrer"></p><p>首先简单介绍一下分布式存储的分类。分布式存储可以分为三类：对象存储、文件存储和块存储。对象存储在互联网中应用的比较多，比如一个对象、一个图片、一个音频，这种可以通过 PUT GET 接口来进行存储。文件存储与传统意义的文件系统的区别是，它是分布式的，传统的项目对应的是 Ext4，或者是 NTFS。块存储，就是所谓的云盘。</p><p><strong>2. 分布式存储的要素</strong></p><p><img alt="图片" src="https://oscimg.oschina.net/oscnet/up-8f2e360879b2e122e40443a076540d994af.png" referrerpolicy="no-referrer"></p><p>下面介绍一下分布式存储在设计时的一些要素。首先，需要大容量的硬盘空间，并且可以随机写，还有最重要的是要保证服务的质量，数据不能丢失，还要保证它的可用性。</p><p><img alt="图片" src="https://oscimg.oschina.net/oscnet/up-f0e776540bc3e8b157a37ec8e92912f3a6b.png" referrerpolicy="no-referrer"></p><p><strong>要素可以拆解为以下三方面：</strong></p><p>①第一是高性能。在分布存储里面，存储节点会非常多，所以要知道数据存在什么位置以及如何去取。</p><p>②第二是可用性。要保证数据的可靠性，避免数据丢失，并且保证在机器故障时数据的读写是能够正常运行的。</p><p>③第三是可扩展性。如果容量用完了，可以新增机器扩展容量。</p><p><img alt="图片" src="https://oscimg.oschina.net/oscnet/up-5c8457c22a6744081c1412e447bd2493faa.png" referrerpolicy="no-referrer"></p><p>数据分布，主要有两种，一个是无中心节点，另一个是有中心节点。</p><p><img alt="图片" src="https://oscimg.oschina.net/oscnet/up-3d4c661ba73529efb2a5f0451c2eeae8f64.png" referrerpolicy="no-referrer"></p><p>另外一个比较重要的点是一致性协议。首先是 Ceph 的强一致性。在分布式系统中，一致性是指在多个副本之间保持数据一致。在 RADOS 中，数据被分割成多个对象，每个对象都有多个副本，这些副本分布在集群的不同节点上。当一个对象被修改时，Ceph 会确保所有的副本都被同时更新，从而保证了强一致性。第二是 Raft 算法，他只需要大多数副本保证更新完成就可以认为成功了。</p><p style="text-align:center"><strong>02‍&nbsp;Curve 架构及介绍</strong></p><p><strong>1. 项目介绍</strong></p><p><img alt="图片" src="https://oscimg.oschina.net/oscnet/up-1b5a84574cb14756bf00e118f72a8e9e0c8.png" referrerpolicy="no-referrer"></p><p>关于 Curve，我们的愿景是希望打造一款性能比较好，适用多种场景的，并且是围绕开源的云原生分布式存储系统。目前，Curve 已经捐赠给 CNCF 基金会，并成为其生态系统中的一个项目。Curve 提供块存储和文件存储两种方式，以满足不同应用的需求。</p><p>对于 Curve 块存储，它具有快照克隆恢复功能，主要应用场景包括 OpenStack 云主机和 Kubernetes 持久存储卷。对于共享需求，Curve 提供文件存储；对于性能要求较高且无共享需求的场景，建议使用 Curve 块存储。</p><p>Curve 还与阿里巴巴的 PolarDB 进行了联合，作为其底层存储运行。此外，Curve 也在 AI 训练领域得到了广泛应用。Curve 在过去几年中通过了信创认证，并获得了工信部组织的中国开源创新大赛二等奖。</p><p><strong>2. Curve 的架构介绍</strong></p><p><img alt="图片" src="https://oscimg.oschina.net/oscnet/up-6d3f00e6d8e462f9218aec534b1ec6eeee9.png" referrerpolicy="no-referrer"></p><p><img alt="图片" src="https://oscimg.oschina.net/oscnet/up-fa6327e3f5acc103590004280e9c74fd8f9.png" referrerpolicy="no-referrer"></p><p>Curve 的整体架构是以硬盘为单位进行空间分配，每个硬盘被划分为多个 segment，而每个 segment 又包含多个 chunk。引入 segment 的概念是为了减少原数据的量。类似于 Ceph 中的一个硬盘对应一个节点，Curve 中的一个硬盘对应一个服务组件，由一个磁盘进程进行管理。</p><p>Curve 采用了 Raft 协议作为其一致性协议的选择。这是因为 Curve 项目的背景与我们在网易的实际业务需求有关。在网易的业务中，之前大部分业务使用的是 Ceph。然而，在使用 Ceph 过程中，一旦用户更换硬盘或某个机器发生故障，会导致业务出现卡顿，这是业务方无法接受的。因此，这促使我们进行 Curve 的研发。基于这个背景，我们选择了 Raft 协议。</p><p>选择 Raft 协议的原因有两个方面：一是 Raft 协议具有较高的可用性，相对于 Ceph 的强一致性模型，在集群中出现一些问题时，可用性不会受到太大影响。另一个原因是 Raft 协议相对较容易理解。</p><p><img alt="图片" src="https://oscimg.oschina.net/oscnet/up-cd1ac097abb82dec9ef1e7ada229877b1e1.png" referrerpolicy="no-referrer"></p><p>在 Curve 的开发过程中，我们希望能够快速迭代，并避免重复开发组件。为了实现这一目标，我们选择了百度的 Braft 和 brpc 这两个被广泛认可为优秀的组件作为底层基础。我们在这两个组件的基础上也进行了一系列的开发工作。</p><p style="text-align:center"><strong>03‍&nbsp;</strong><strong><strong><strong><strong><strong><strong>Curve 的主要亮点</strong></strong></strong></strong></strong></strong></p><p>Curve 的主要亮点是以下四个方面：</p><p><img alt="图片" src="https://oscimg.oschina.net/oscnet/up-bc6e65700dc909c40311e218a9768746a67.png" referrerpolicy="no-referrer"></p><p>下面将逐一展开介绍。</p><p><strong>1. 高性能</strong></p><p><img alt="图片" src="https://oscimg.oschina.net/oscnet/up-e760595d7748b8f2b2f989156161c58b033.png" referrerpolicy="no-referrer"></p><p>Curve 在随机读写方面表现优于 Ceph。然而，我们也要承认目前存在一个问题：在大块顺序读写方面，Curve 的性能差于于 Ceph。我们正在进行后续的优化工作，以改进这方面的性能表现。</p><p>在性能方面，我们的目标是支持云原生数据库，因为云原生数据库对性能要求较高。除了支持阿里巴巴的 PolarDB 数据库，我们还支持网易内部的其他数据库。我们致力于提供高性能的存储解决方案，以满足不同数据库的需求。</p><p><img alt="图片" src="https://oscimg.oschina.net/oscnet/up-994eb01c84046176f0800e1ae5e041531dc.png" referrerpolicy="no-referrer"></p><p>在数据库方面，我们引入了 SPDK（Storage Performance Development Kit）和 RDMA（Remote Direct Memory Access）技术。这两种技术已经在 2023 年上半年上线。然而，在实施过程中，我们也面临了一些问题和挑战。以下是一些典型的例子：</p><ul><li><p>RDMA 对网络质量要求较高。当用户的网络质量较差时，可能会出现丢包或拥塞现象，而这对性能的影响明显高于 TCP。为了解决这个问题，我们实现了网络链路的自动切换机制。当用户的网络质量较差时，系统会自动切换到 TCP 来应对这个问题。</p></li><li><p>在将 NVMe 绑定到 SPDK 后，它将没有盘符。然而，缺少盘符会导致线上监控失效。对于一个存储系统来说，缺乏监控是不可接受的。为了解决这个问题，我们利用 SPDK 提供的一系列脚本进行了内部适配，以确保监控的正常运行。这些问题和挑战是我们在引入 SPDK 和 RDMA 技术时所面临的，我们正在努力解决它们，以提供更稳定和可靠的存储解决方案。</p></li><li><p>第三个挑战是关于 Brpc 的 RDMA 支持。在当时，Brpc 的 RDMA 功能并不完善。因此，我们对 Brpc 的 RDMA 进行了支持。由于 RDMA 支持是一个较为常见的技术，我们对 Brpc 的 RDMA 进行了文档介绍和代码方面的比较。如果您对此感兴趣，欢迎加入我们的微信群进行学习和交流。</p></li><li><p>第四个挑战是关于零拷贝技术。在引入 SPDK 后，我们希望引入零拷贝技术。然而，零拷贝技术在实施过程中有很多要求。因此，我们对这项技术进行了一些探索和研究。最终，我们成功实现了零拷贝技术，并且我们的技术和性能得到了显著提升。</p></li></ul><p><img alt="图片" src="https://oscimg.oschina.net/oscnet/up-65ade50ebc4c14c24941d3810e23d6e459d.png" referrerpolicy="no-referrer"></p><p>在混合存储方面，我们利用了 bcache 来实现。为什么要采用混合存储呢？因为使用 NVMe 或者 SSD 可能会在性能和成本方面遇到一些瓶颈。因此，我们希望能够利用 HDD 作为数据盘，类似于 Ceph 中的 HDD，而利用高性能存储设备来提升低速磁盘的 IO 性能。为了实现这一目标，我们采用了 bcache 技术。</p><p>bcache 技术在我们的架构中起到了重要作用。在最初的设计中，我们使用了一个 NVMe 硬盘和几块数据盘。然而，如果 NVMe 硬盘发生故障，那么整个数据盘的数据都会丢失。为了解决这个问题，我们采用了 raid 技术，以提供冗余备份。此外，我们还对 bcache 进行了优化。在优化过程中，我们遇到了一些问题，例如发现 bcache 的 writeback 机制会失效，即使写入的数据量未达到阈值。最终，我们发现这是一个 bug，并进行了修复。有关这个 bug 的详细记录可以在上面图片的链接中找到。</p><p>在处理 bcache Gc 的影响方面，我们也进行了一些工作。例如，我们采取了分离的策略，将 WAL 单独放置在 NVMe 设备中，而不放在 bcache Gc 的范围内。通过这样的方式，我们能够减少 bcache Gc 对系统性能的影响。</p><p>第三个问题也是非常重要的，尽管在最初的测试中可能不容易发现，但我们花了相当长的时间来定位它。我们发现在测试集群性能时，重复测试可能导致性能下降。最终的定位结果表明，这实际上是由于 NVMe 硬盘本身存在的问题。在持续写入的情况下，NVMe 硬盘的性能可能会下降。这与硬盘的 SAD 和 OP 空间有关。通过适当设置 OP 空间，可以提升硬盘的性能。</p><p>此外，我们还了解到三星的企业级硬盘可能存在一些问题，例如固件支持方面。有关这方面的详细记录可以在下面图片的参考链接中找到。如果您对此感兴趣，欢迎参考相关文档。</p><p><img alt="图片" src="https://oscimg.oschina.net/oscnet/up-0f3432603c41237ef6dc0e16b18b2046f3c.png" referrerpolicy="no-referrer"></p><p>在高性能方面，我们仍然有许多工作要做。正如之前提到的，我们的随机读写性能要比 Ceph 好得多，但在顺序读写方面则差于 Ceph。因此，我们将重点优化顺序读写性能，这是我们后续工作的重点之一。</p><p>另一个重要工作是本地快照的支持。目前，我们的快照功能将快照上传到 S3 存储。然而，对于一些用户来说，他们对数据的安全性要求更高，可能没有使用 S3 存储。因此，我们非常关注本地快照的支持，以满足这些用户的需求 (本地快照功能已经开发完成，预计 Q4 可 release)。</p><p>还有其它一些计划，可以查看相关的 road map 以获取更多信息。</p><p><strong>2. 易运维</strong></p><p><img alt="图片" src="https://oscimg.oschina.net/oscnet/up-e521a8cd71fec4d3f95abdc7ef5b4d8b943.png" referrerpolicy="no-referrer"></p><p>Curve 是一个易运维的存储系统。即使对于不熟悉 Curve 的人来说，根据我们的文档，只需要花费十几分钟的时间就能够将 Curve 部署起来。除了部署易用性方面，我们还支持在 Kubernetes 云原生环境中进行部署。我们提供了类似于 Operator 的解决方案，使得 Curve 的部署和运维更加简单。目前，我们已经支持了基本的部署易用性，例如 Operator，但还有一些高级功能，如自动升级，尚未完全实现，我们将在后续继续努力。</p><p><strong>3. 更稳定</strong></p><p><img alt="图片" src="https://oscimg.oschina.net/oscnet/up-4477769b02032940a4736f7c927aefb98bc.png" referrerpolicy="no-referrer"></p><p>Curve 在稳定性方面具有显著优势。正如之前提到的，我们选择开发 Curve 的原因之一就是为了提高系统的稳定性，这也是我们从 Ceph 中获得的经验。此外，热升级也是 Curve 的一个亮点。关于热升级的详细信息，您可以在我们的文档中找到相关介绍。</p><p><img alt="图片" src="https://oscimg.oschina.net/oscnet/up-ad257be5042ded1f38f1c744f47adbf71a5.png" referrerpolicy="no-referrer"></p><p>在 Curve 的开发过程中，我们对质量要求非常高。我们进行了单元测试、集成测试以及各种其他类型的测试，以确保系统的稳定性和可靠性。我们注重测试的全面性和多样性，以确保 Curve 在各种异常场景下都能表现出色。</p><p><strong>4. 高质量</strong></p><p><img alt="图片" src="https://oscimg.oschina.net/oscnet/up-1fceab38905487d84fc8b68135b0c4eb82a.png" referrerpolicy="no-referrer"></p><p>对于 Curve 项目，当开发者提交一个 PR 时，会自动触发 CI 流程。CI 流程包括单元测试、集成测试和系统测试等多个测试环节。只有当 CI 流程通过并且测试通过后，PR 才会被合并入代码库。这样的流程确保了代码的质量和稳定性。</p><p><img alt="图片" src="https://oscimg.oschina.net/oscnet/up-d3c5f3188305357a77ff3ba6eff6e1f74e5.png" referrerpolicy="no-referrer"></p><p>在技术架构的先进性方面，简要介绍两个关键点。首先是中心化节点，它充当集群的中心，可以感知集群的负载容量和异常情况，并进行资源调度和数据均衡。其次是文件池的 chunkfilepool，它通过降低文件原数据的开销来提高性能，同时也支持快照功能。目前，我们使用的是快照 S3，这使得用户可以方便地与 S3 或其他对象存储进行对接。</p><p style="text-align:center"><strong>04‍ RoadMap</strong></p><p>最后来分享一下后续的计划。</p><p><img alt="图片" src="https://oscimg.oschina.net/oscnet/up-9eb888f377682035a38dcd90e23921c5ac3.png" referrerpolicy="no-referrer"></p><p>除了 CurveBS，我们还有 Curve FS 作为另一个重点方向。Curve BS 已经在网易进行了两三年的大规模线上运行，数据非常稳定，目前主要是在进行支持一些高级特性方面的工作。而 Curve FS 在 2022 年 6 月份完成了第一个 release 版本并上线。截至目前，Curve FS 的开发时间只有大约一年左右，还有很多工作要做。特别是在 AI 时代，我们希望 Curve 能够在支持 AI 方面做得更好，这也是我们的一个亮点。当然，除了支持 Ai，我们还在开发其他场景的支持，例如 ES 和传统的接口，如 HDFS。</p><p style="text-align:center"><strong>05‍ 问答环节</strong></p><p><strong>Q：Curve 写入代码性能比 Ceph 低吗？</strong></p><p>A：在性能方面，Curve 在随机写方面表现比 Ceph 要好很多，但在顺序写方面则差于 Ceph。这主要是因为 Ceph 在过去使用了双写的机制，导致日志和数据都需要写入两次。为了解决这个问题，Ceph 后来采用了 BlueStore 引擎，使得大块写入时只需写入数据一次，从而减少了原数据的写入量。然而，Curve 目前仍然存在日志和数据写入两份的问题，因为它使用了 Raft 机制。这导致了带宽的利用率不高，性能相对于 Ceph 较差。因此，我们的重点之一是优化 Curve 的顺序写性能，特别是在 KBS（Kernel Block Service）方面。我们目前正在进行这方面的工作。</p><p><strong>Q</strong>：<strong>我了解 Curve，请提供 CurveFS 和 CurveBS 他们之间的区别和联系？</strong></p><p>A：Curve FS 是一个文件系统，而 Curve BS 是一个块存储系统。与 Ceph 相比，Curve 有一个有趣的特点是 Curve FS 和 Curve BS 可以进行联动。这意味着 Curve FS 的数据既可以存储在 S3 中，也可以存储在 Curve BS 中。这是与 Ceph 相比的一个亮点。通过这种联动，我们可以根据性能需求直接对接 Curve BS，或者根据成本需求直接对接 S3。这是我们的一个亮点，为用户提供了更大的灵活性和选择性。</p><p><strong>Q</strong>：<strong>SPD 跟 RDMA 什么时候开源？</strong></p><p>A：关于 SPDK 和 RDMA，我们在 GitHub 上已经有一个版本可用。在上半年，我们在这方面进行了大量的工作，并且在不久前进行了上线。目前，我们正在整理相关的源代码和其他资料。预计在第四季度我们将完成整理工作并达到一个稳定的状态。</p><p><strong>Q</strong>：<strong>Curve 如何对接 K8S?在这一方面做了一些什么事情？</strong></p><p>A：Curve 有一个重要亮点是易运维，我们开发了 CurveAdm 工具。CurveAdm 工具通过容器化技术实现了部署和易运维的功能，这只是其中的一小部分。此外，我们还支持与云原生环境结合，我们已经通过 Operator 实现了这一功能。</p><p>&nbsp;</p><p style="text-align:center"><em><strong>------ END. ------</strong></em></p><p>🔥 社区资讯：</p><p><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4MjgxNDYwMA%3D%3D%26mid%3D2247495286%26idx%3D1%26sn%3D958d75811fdf9b5e603988d0f693be10%26chksm%3Dcf525591f825dc8770eab6ecffef893730cc0b6b15a314f59fcbe3e200f5022942315c69569e%26scene%3D21%23wechat_redirect" target="_blank">Curve 社区上半年 Roadmap 进展及下半年规划</a></p><p>🔥 用户案例：</p><p><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4MjgxNDYwMA%3D%3D%26mid%3D2247492574%26idx%3D1%26sn%3Df05f75b1d24e1f15e5b5de2e787993fd%26chksm%3Dcf525839f825d12fd537be23eeabbaf518c26d39f5d67013e9df5097a6841b002301abb8fa8c%26scene%3D21%23wechat_redirect" target="_blank">Curve 文件存储在 Elasticsearch 冷热数据存储中的应用实践</a></p><p><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4MjgxNDYwMA%3D%3D%26mid%3D2247492351%26idx%3D1%26sn%3Dc40936fabc9d1c65da3888e14164fdb5%26chksm%3Dcf525918f825d00ecac6c5740b707dda3118e56b88bb218ba8b2554b3323faa6bd6733b91f63%26scene%3D21%23wechat_redirect" target="_blank">扬州万方：基于申威平台的 Curve 块存储在高性能和超融合场景下的实践</a></p><p><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4MjgxNDYwMA%3D%3D%26mid%3D2247492032%26idx%3D1%26sn%3D9131727a47dc1b774689a99d6f2f01a8%26chksm%3Dcf525a27f825d331e21b9e0d56dcfd812eb49a5675950c6dd48ab1e5cd63795a27a70b35d290%26scene%3D21%23wechat_redirect" target="_blank">创云融达：基于 Curve 块存储的超融合场景实践</a></p><p>🔥 技术解析：</p><p><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4MjgxNDYwMA%3D%3D%26mid%3D2247495461%26idx%3D1%26sn%3D9b34ab555ad4d5fbde1b8a360044f69b%26chksm%3Dcf5254c2f825ddd4edaf667a87b6f26c32f91f7f2d3f1c0e1a3cd49fdbc88687524362bf8382%26scene%3D21%23wechat_redirect" target="_blank">探索 : CurveBS 模拟 RBD 接口对接 OpenStack</a></p><p><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4MjgxNDYwMA%3D%3D%26mid%3D2247495489%26idx%3D1%26sn%3Dfc07a375f20d2729d8a1ba295db361db%26chksm%3Dcf5254a6f825ddb0092bc87c3021b1f2a8a7250e66fed43493febb2267d36dbdb633c7da9ba3%26scene%3D21%23wechat_redirect" target="_blank">Curve 安全加固：基于 Kerberos 的鉴权系统</a></p><p><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4MjgxNDYwMA%3D%3D%26mid%3D2247495444%26idx%3D1%26sn%3D5439d799b880f1b2b81ccc9ff96152a9%26chksm%3Dcf5254f3f825dde5e38d5dde8aeead7031092d306ad050d00cfbe08e7df74bb0f4c88864ee64%26scene%3D21%23wechat_redirect" target="_blank">CurveBS RDMA &amp; SPDK 部署指南</a></p><p><img alt="图片" src="https://oscimg.oschina.net/oscnet/up-7cafa07c4121b6275cf4638eda144c93161.jpg" referrerpolicy="no-referrer"></p><p>&nbsp;</p><ul><li><p><strong>GitHub</strong>：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopencurve%2Fcurve" target="_blank">https://github.com/opencurve/curve</a></p></li><li><p><strong>官网</strong>：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopencurve.io%2F" target="_blank">https://opencurve.io/</a></p></li><li><p><strong>用户论坛</strong>：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fask.opencurve.io%2F" target="_blank">https://ask.opencurve.io/</a></p></li><li><p><strong>微信群：搜索群助手微信号 OpenCurve_bot</strong></p></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Fri, 22 Sep 2023 03:04:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/6923788/blog/10112708</guid>
            <link>https://my.oschina.net/u/6923788/blog/10112708</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[OpenAI 发布 DALL-E 3，支持使用 ChatGPT 生成提示词]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://www.oschina.net/question/4489239_2331019" _blank"="">
数据技术都能四世同堂，凭什么开发 30 岁就要被干掉？ 
<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p>OpenAI&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopenai.com%2Fdall-e-3" target="_blank">宣布</a>推出图片生成模型 DALL-E 的最新版本 DALL-E 3，该版本将加入<strong>使用 ChatGPT 生成提示词</strong>的功能。</p><p><img height="600" src="https://static.oschina.net/uploads/space/2023/0922/104305_q5ED_2720166.png" width="1314" referrerpolicy="no-referrer"></p><p>用户可以利用简单的提示词让 ChatGPT 生成适合的文字描述，并利用 DALL-E 3 来生成不同需求的图片。DALL-E 3 还可以生成更高质量的图像，且对提示词有着更好的理解能力，特别是在处理长提示时表现更优。为用户生成更好更精准的图片。</p><p>DALL-E 3 将于 10 月份首先向 ChatGPT Plus 和 ChatGPT Enterprise 用户提供，随后在秋季向研究实验室及其 API 服务发布。</p><hr><p>OpenAI 官方给出了体现 DALL·E 3 出色理解能力的案例：</p><ul><li><strong>灵感来自荔枝的球形椅子</strong></li></ul><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-7b7f1f1044ed4cb5126a84865982e574dd7.png" referrerpolicy="no-referrer"></p><ul><li><strong>卷发像暴风一样飘扬，服装像大理石和瓷器碎片组成的旋风一样的舞者</strong></li></ul><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-04160afa5b9731aca3a7ca2832af1896695.png" referrerpolicy="no-referrer"></p><ul><li><strong>土豆国王俯瞰着它的王国</strong></li></ul><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-8fe2d4463cd59234d5b7210cc9805153601.png" referrerpolicy="no-referrer"></p><p>详情：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopenai.com%2Fdall-e-3" target="_blank">https://openai.com/dall-e-3</a></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 22 Sep 2023 02:48:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/259053/openai-dall-e-3</guid>
            <link>https://www.oschina.net/news/259053/openai-dall-e-3</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[国内首家！阿里云 Elasticsearch 8.9 版本释放 AI 搜索新动能]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><div data-traceid="news_comment_top_ad" data-tracepid="news_comment_top" style="text-align: center;"><a style="color:#A00;font-weight:bold;" href="https://www.oschina.net/question/4489239_2331019" target="_blank">数据技术都能四世同堂，凭什么开发 30 岁就要被干掉？ <img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div></div><p><strong>简介：</strong> &nbsp;阿里云作为国内首家上线 Elasticsearch 8.9 版本的厂商，在提供 Elasticsearch Relevance Engine™ (ESRE™) 引擎的基础上，提供增强 AI 的最佳实践与 ES 本身的混合搜索能力，为用户带来了更多创新和探索的可能性。</p><p>近年来，人工智能的快速发展和广泛应用在各个行业中都取得了显著的成果。在搜索领域，阿里云 Elasticsearch 作为一款功能强大的搜索引擎，一直以来都在为企业提供高效、准确的搜索服务。现在，阿里云作为国内首家上线 Elasticsearch 8.9 版本的厂商，在提供 Elasticsearch Relevance Engine™ (ESRE™) 引擎的基础上，提供增强 AI 的最佳实践与 ES 本身的混合搜索能力，为用户带来了更多创新和探索的可能性。</p><p>此次从 8.5 版本到 8.9 版本的全新升级，新增了以下重点功能，使得阿里云 Elasticsearch 在向量检索和混合搜索能力都具有显著改善，大大提升了搜索结果的准确性和相关性。</p><ul><li>支持文本和向量召回结果混排（RRF）。</li><li>向量最大维度提升到 2048。</li><li>暴力检索性能提升。</li><li>KNN 查询支持多个字段同时查询。</li><li>内置 ELSER 模型。</li><li>稳定支持 NLP 分布式模型调度管理。</li><li>……</li></ul><p><strong>向量检索---为搜索插上飞跃的翅膀</strong></p><p>向量检索作为 8.x 版本的重要新增能力，突破了传统的基于关键词的搜索，利用机器学习和人工智能的力量，将文本内容转换为向量表示，即将文本数据中的每个单词表示为一个向量，并通过计算向量之间的距离来判断文本之间的相似度来实现检索，从而实现文本的高效检索和处理。相较于传统文本检索，通过增加了单词和文档之间的语义关系，使得搜索的相关性显著提升；同时处理对象从文本到图像、语音等类型的扩展，应用场景的层面也得到了相应的增加；当然向量检索更能够根据用户偏好定制化搜索结果，为用户提供了个性化的搜索体验。</p><p><img alt="" height="230" src="https://oscimg.oschina.net/oscnet/up-16bb40a3367330add16f6d6bb3d9d13145b.png" width="500" referrerpolicy="no-referrer"></p><p>向量检索技术的应用场景非常广泛，包括搜索引擎优化、图像搜索、自然语言处理、推荐系统、情感分析等领域。现阿里云 Elasticsearch 产品已经提供向量检索基础能力，可根据<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.aliyun.com%2Farticle%2F1298246%3Fspm%3Da2c6h.13046898.publish-article.3.5fe06ffakRqdWa" target="_blank">基于 Elasticsearch 向量检索的以文搜图</a>进行体验。</p><p><strong>混合搜索 RRF---搜索结果和性能的双重助力</strong></p><p>混合搜索 RRF（Reciprocal rank fusion）支持对多种不同方式召回的多个结果集进行综合再排序，返回最终的排序结果。之前 Elasticsearch 已经分别支持基于 BM25 的相关性排序和向量相似度的召回排序，通过 RRF 可以对这两者的结果进行综合排序，使得排序的准确性显著提升。相对於单一搜索搜索技术，混合搜索 RRF 的优势十分明显，可任意组合多个搜索技术并获得综合性搜索结果，使得搜索的准确性和相关性大幅提升，从场景的适应性来看，企业可根据自身业务设计专属搜索方案，自由度也明显提高。关于混合搜索 RRF 在搜索结果准确性和相关性提升的实验验证，可根据 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.aliyun.com%2Farticle%2F1332447%3Fspm%3Da2c6h.13046898.publish-article.4.5fe06ffakRqdWa" target="_blank">阿里云 Elasticsearch 使用 RRF 混排优化语义查询结果对比</a> 进行测试查看，并获得如下结果。</p><p><img alt="" height="330" src="https://oscimg.oschina.net/oscnet/up-a559b4d22fa1a0cd7bb02b54d3ec0a52811.png" width="500" referrerpolicy="no-referrer"></p><p>随着新版本的上线，阿里云 Elasticsearch 再次展现了其在搜索领域的不断前进。为用户带来了更加智能化和深层次的搜索体验。未来，阿里云 Elasticsearch 将继续努力创新，为用户带来更多搜索技术的突破和可能性。</p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 22 Sep 2023 02:28:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/5583868/blog/10112705</guid>
            <link>https://my.oschina.net/u/5583868/blog/10112705</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Go 1.22 将修复 for 循环变量错误]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://www.oschina.net/question/4489239_2331019" _blank"="">
数据技术都能四世同堂，凭什么开发 30 岁就要被干掉？ 
<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p>上月正式发布的 <strong><a href="https://www.oschina.net/news/252970/go-1-21-released" target="_blank">Go 1.21 </a></strong>修改了&nbsp;for 循环变量的语义（预览阶段，<strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgolang%2Fgo%2Fwiki%2FLoopvarExperiment" target="_blank">点此查看详情</a></strong>）。</p><p>现在，Go 团队表示 <strong>Go 1.22 会将这项特性发布为正式功能</strong>。</p><p><img src="https://static.oschina.net/uploads/space/2023/0921/181540_2xic_2720166.png" referrerpolicy="no-referrer"></p><p>根据 Go 开发团队技术 leader Russ Cox (rsc) 的介绍，Go 开发者经常会犯的错误是在循环迭代结束后，保留​​对循环变量的引用，此时它会采用预期之外的新值。</p><p>例如下面的程序：</p><pre><code class="language-go">func main() {
    done := make(chan bool)

    values := []string{"a", "b", "c"}
    for _, v := range values {
        go func() {
            fmt.Println(v)
            done &lt;- true
        }()
    }

    // wait for all goroutines to complete before exiting
    for _ = range values {
        &lt;-done
    }
}</code></pre><p>其创建的三个 goroutine 都用于打印相同的变量<code>v</code>，因此它们只会打印出&nbsp;「c」, 「c」, 「c」，而不是按顺序打印 「a」, 「b」, 和 「c」。</p><p>从 Go1.21 开始，开发者可以启用<code>GOEXPERIMENT=loopvar</code>来构建 Go 程序，以解决上文提到的 for 循环变量问题。</p><p>构建命令：</p><pre><code class="language-text">GOEXPERIMENT=loopvar go install my/program
GOEXPERIMENT=loopvar go build my/program
GOEXPERIMENT=loopvar go test my/program
GOEXPERIMENT=loopvar go test my/program -bench=.
...</code></pre><p>现在 Go 开发团队表示，从 Go1.22 开始，新的 for 循环语义将会在 go.mod 文件中的 Go 版本大于等于 Go1.22 下默认启用。</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 21 Sep 2023 10:34:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/258984/golang-loopvar-preview</guid>
            <link>https://www.oschina.net/news/258984/golang-loopvar-preview</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Linux 内核 LTS 期限将从 6 年恢复至 2 年]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://www.oschina.net/question/4489239_2331019" _blank"="">
数据技术都能四世同堂，凭什么开发 30 岁就要被干掉？ 
<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p><span style="color:#000000">在日前举行的欧洲开源峰会上，Linux 内核开发人员兼《Linux Weekly News》执行主编 Jonathan Corbet <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.zdnet.com%2Farticle%2Flong-term-support-for-linux-kernel-to-be-cut-as-maintainence-remains-under-strain%2F" target="_blank">介绍</a>了 Linux 内核的最新动态以及未来的发展方向。其中一项即将发生的重大变化是：Linux 内核的长期支持 (LTS) 时间将从六年缩短至两年。</span></p><p><span style="color:#000000">目前 Linux 社区仍然遵守当前的生命周期终止时间表，因此已发布的 6.1、5.15、5.10、5.4、4.19 和 4.14 六个 LTS 版本会遵守六年的规律，但之后发布的新版本则只会有两年周期。</span></p><p><span style="color:#000000">对此，Corbet 解释称，主要原因在于缺乏使用和缺乏支持；「维持这么久确实没有意义，因为人们已经不再使用它们了」。还有一个很大的问题是，Linux 代码维护人员的倦怠；他们在完成工作时面临着许多障碍。一方面，维护人员需要在日常工作之余维护代码，但维护工作通常没有报酬。最重要的是，由于人手不足等问题，维护人员的工作量也越来越大。</span></p><p><span style="color:#000000">科技媒体 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Farstechnica.com%2Fgadgets%2F2023%2F09%2Flinux-gives-up-on-6-year-lts-thats-fine-for-pcs-bad-for-android%2F" target="_blank">Ars Technica</a> 认为，对于 PC 端来说，两年似乎是一个不错的支持窗口；但对于基于 Linux 打造的 Android 移动操作系统来说，却不尽然。2017 年，Google 开发者 Iliyan Malchev 在一次 Android Linux 演讲中<a href="https://www.oschina.net/news/89220/linux-lts-6-year">宣布</a> Linux 内核的 LTS 期限从两年延长至六年；彼时的这一扩展主要就是考虑到了 Android 和物联网设备。</span></p><p><span style="color:#000000"><img alt="" height="274" src="https://oscimg.oschina.net/oscnet/up-5fecaadc98e0bcc94e4fb7bffe6218bd2b6.jpg" width="500" referrerpolicy="no-referrer"></span></p><p><span style="color:#000000"><img alt="" height="274" src="https://oscimg.oschina.net/oscnet/up-826a6c24004d702cec301acd8b875458fa3.jpg" width="500" referrerpolicy="no-referrer"></span></p><p><span style="color:#000000">而现如今，在 PC 上，两年仅代表内核更新之间的间隔时间，因此是一个很好的时间表。但对嵌入式设备而言，考虑到大部分的开发周期和整个消费者支持窗口期，这"两年"时长显然不够。</span></p><p><span style="color:#000000">按照谷歌此前的描述，手机开发需要两年时间，内核在工程流程的初期就已锁定。因此如果按照两年的 LTS 期限，当手机最终发货时，LTS 内核将达到生命周期的终点，导致用户将在设备的整个生命周期中使用过时的内核。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 21 Sep 2023 09:06:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/258970/linux-gives-up-on-6-year-lts</guid>
            <link>https://www.oschina.net/news/258970/linux-gives-up-on-6-year-lts</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[英伟达的 AI 霸主地位会持久吗？]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><div data-traceid="news_comment_top_ad" data-tracepid="news_comment_top" style="text-align: center;"><a style="color:#A00;font-weight:bold;" href="https://www.oschina.net/question/4489239_2331019" target="_blank">数据技术都能四世同堂，凭什么开发 30 岁就要被干掉？ <img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div></div><div class="rich_media_content js_underline_content
                       defaultNoSetting
            " id="js_content"><p style="text-align: center;margin-left: 8px;margin-right: 8px;"><img class="rich_pages wxw-img js_insertlocalimg" data-backh="375" data-backw="562" data-ratio="0.6670212765957447" data-s="300,640" data-type="jpeg" data-w="940" style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: var(--articleFontsize);letter-spacing: 0.034em;width: 100%;height: auto !important;" src="https://oscimg.oschina.net/oscnet/ba8c9635-bd23-4b82-8638-b5bdb6702999.jpg" referrerpolicy="no-referrer"><span style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: var(--articleFontsize);letter-spacing: 0.034em;"></span><br></p><section style="margin-bottom: 0px;letter-spacing: 0.578px;text-wrap: wrap;"><section style="letter-spacing: 0.578px;outline: 0px;background-color: rgb(25, 25, 25);visibility: visible;"><section data-darkmode-bgcolor-16221004879619="rgb(25, 25, 25)" data-darkmode-original-bgcolor-16221004879619="#fff|rgb(255, 255, 255)" data-style="max-width: 100%; background-color: rgb(255, 255, 255); letter-spacing: 0.544px; font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; visibility: visible; box-sizing: border-box !important; overflow-wrap: break-word !important; color: rgb(163, 163, 163) !important;" class="js_darkmode__0" data-darkmode-bgcolor-16339314364542="rgb(25, 25, 25)" data-darkmode-original-bgcolor-16339314364542="#fff|rgb(255, 255, 255)" data-darkmode-color-16339314364542="rgb(163, 163, 163)" data-darkmode-original-color-16339314364542="#fff|rgb(163, 163, 163)" style="outline: 0px;background-color: rgb(255, 255, 255);visibility: visible;"><section data-darkmode-bgcolor-16221004879619="rgb(25, 25, 25)" data-darkmode-original-bgcolor-16221004879619="#fff|rgb(255, 255, 255)" data-darkmode-bgcolor-16339314364542="rgb(25, 25, 25)" data-darkmode-original-bgcolor-16339314364542="#fff|rgb(255, 255, 255)" data-darkmode-color-16339314364542="rgb(163, 163, 163)" data-darkmode-original-color-16339314364542="#fff|rgb(163, 163, 163)" style="outline: 0px;visibility: visible;"><section data-darkmode-bgcolor-16221004879619="rgb(25, 25, 25)" data-darkmode-original-bgcolor-16221004879619="#fff|rgb(255, 255, 255)" data-darkmode-bgcolor-16339314364542="rgb(25, 25, 25)" data-darkmode-original-bgcolor-16339314364542="#fff|rgb(255, 255, 255)" data-darkmode-color-16339314364542="rgb(163, 163, 163)" data-darkmode-original-color-16339314364542="#fff|rgb(163, 163, 163)" style="outline: 0px;visibility: visible;"><section data-darkmode-bgcolor-16221004879619="rgb(25, 25, 25)" data-darkmode-original-bgcolor-16221004879619="#fff|rgb(255, 255, 255)" data-darkmode-bgcolor-16339314364542="rgb(25, 25, 25)" data-darkmode-original-bgcolor-16339314364542="#fff|rgb(255, 255, 255)" data-darkmode-color-16339314364542="rgb(163, 163, 163)" data-darkmode-original-color-16339314364542="#fff|rgb(163, 163, 163)" style="outline: 0px;visibility: visible;"><section data-darkmode-bgcolor-16221004879619="rgb(25, 25, 25)" data-darkmode-original-bgcolor-16221004879619="#fff|rgb(255, 255, 255)" data-darkmode-bgcolor-16339314364542="rgb(25, 25, 25)" data-darkmode-original-bgcolor-16339314364542="#fff|rgb(255, 255, 255)" data-darkmode-color-16339314364542="rgb(163, 163, 163)" data-darkmode-original-color-16339314364542="#fff|rgb(163, 163, 163)" style="outline: 0px;visibility: visible;"><section data-darkmode-bgcolor-16221004879619="rgb(25, 25, 25)" data-darkmode-original-bgcolor-16221004879619="#fff|rgb(255, 255, 255)" data-darkmode-bgcolor-16339314364542="rgb(25, 25, 25)" data-darkmode-original-bgcolor-16339314364542="#fff|rgb(255, 255, 255)" data-darkmode-color-16339314364542="rgb(163, 163, 163)" data-darkmode-original-color-16339314364542="#fff|rgb(163, 163, 163)" style="outline: 0px;visibility: visible;"><section data-darkmode-bgcolor-16221004879619="rgb(25, 25, 25)" data-darkmode-original-bgcolor-16221004879619="#fff|rgb(255, 255, 255)" data-darkmode-bgcolor-16339314364542="rgb(25, 25, 25)" data-darkmode-original-bgcolor-16339314364542="#fff|rgb(255, 255, 255)" data-darkmode-color-16339314364542="rgb(163, 163, 163)" data-darkmode-original-color-16339314364542="#fff|rgb(163, 163, 163)" style="outline: 0px;visibility: visible;"><section data-darkmode-bgcolor-16221004879619="rgb(25, 25, 25)" data-darkmode-original-bgcolor-16221004879619="#fff|rgb(255, 255, 255)" data-darkmode-bgcolor-16339314364542="rgb(25, 25, 25)" data-darkmode-original-bgcolor-16339314364542="#fff|rgb(255, 255, 255)" data-darkmode-color-16339314364542="rgb(163, 163, 163)" data-darkmode-original-color-16339314364542="#fff|rgb(163, 163, 163)" style="outline: 0px;visibility: visible;"><section style="margin-right: 8px;margin-left: 8px;outline: 0px;visibility: visible;line-height: 1.75em;"><section data-darkmode-bgcolor-16221004879619="rgb(41, 41, 41)" data-darkmode-original-bgcolor-16221004879619="#fff|rgb(255, 255, 255)|rgb(239, 239, 239)" data-darkmode-color-16221004879619="rgb(168, 168, 168)" data-darkmode-original-color-16221004879619="#fff|rgb(62, 62, 62)" data-style="padding: 10px; max-width: 100%; background-color: rgb(239, 239, 239); color: rgb(62, 62, 62); line-height: 25.6px; display: inline-block; width: 670px; border-width: 2px; border-style: dashed; border-color: transparent; visibility: visible; box-sizing: border-box !important; overflow-wrap: break-word !important;" class="js_darkmode__1" data-darkmode-bgcolor-16339314364542="rgb(41, 41, 41)" data-darkmode-original-bgcolor-16339314364542="#fff|rgb(255, 255, 255)|rgb(239, 239, 239)" data-darkmode-color-16339314364542="rgb(168, 168, 168)" data-darkmode-original-color-16339314364542="#fff|rgb(163, 163, 163)|rgb(62, 62, 62)" style="padding: 10px;outline: 0px;background-color: rgb(239, 239, 239);line-height: 25.6px;display: inline-block;width: 670px;border-width: 2px;border-style: dashed;border-color: transparent;visibility: visible;"><section data-darkmode-bgcolor-16221004879619="rgb(41, 41, 41)" data-darkmode-original-bgcolor-16221004879619="#fff|rgb(255, 255, 255)|rgb(239, 239, 239)" data-darkmode-color-16221004879619="rgb(168, 168, 168)" data-darkmode-original-color-16221004879619="#fff|rgb(62, 62, 62)" data-darkmode-bgcolor-16339314364542="rgb(41, 41, 41)" data-darkmode-original-bgcolor-16339314364542="#fff|rgb(255, 255, 255)|rgb(239, 239, 239)" data-darkmode-color-16339314364542="rgb(168, 168, 168)" data-darkmode-original-color-16339314364542="#fff|rgb(163, 163, 163)|rgb(62, 62, 62)" style="outline: 0px;visibility: visible;"><section data-darkmode-bgcolor-16221004879619="rgb(41, 41, 41)" data-darkmode-original-bgcolor-16221004879619="#fff|rgb(255, 255, 255)|rgb(239, 239, 239)" data-darkmode-color-16221004879619="rgb(168, 168, 168)" data-darkmode-original-color-16221004879619="#fff|rgb(62, 62, 62)" data-darkmode-bgcolor-16339314364542="rgb(41, 41, 41)" data-darkmode-original-bgcolor-16339314364542="#fff|rgb(255, 255, 255)|rgb(239, 239, 239)" data-darkmode-color-16339314364542="rgb(168, 168, 168)" data-darkmode-original-color-16339314364542="#fff|rgb(163, 163, 163)|rgb(62, 62, 62)" style="outline: 0px;visibility: visible;"><p style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;letter-spacing: 0.578px;text-wrap: wrap;outline: 0px;background-color: rgb(239, 239, 239);line-height: 1.6em;"><span style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 16px;letter-spacing: 2px;color: rgb(63, 63, 63);">目前英伟达因其 GPU 芯片在 AI 革命中扮演着核心角色，使其成为 AI 时代最赚钱的公司。</span></p><p style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;letter-spacing: 0.578px;text-wrap: wrap;outline: 0px;background-color: rgb(239, 239, 239);line-height: 1.6em;"><br></p><p style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;letter-spacing: 0.578px;text-wrap: wrap;outline: 0px;background-color: rgb(239, 239, 239);line-height: 1.6em;"><span style="font-size: 16px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 2px;color: rgb(63, 63, 63);">本文作者&nbsp;<span style="color: rgb(63, 63, 63);font-size: 16px;letter-spacing: 2px;text-wrap: wrap;background-color: rgb(239, 239, 239);">Pete Warden&nbsp;</span>总结了铸就英伟达 AI 霸主地位的四点优势：</span><span style="color: rgb(63, 63, 63);font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 16px;letter-spacing: 2px;">几乎无人运行大规模机器学习应用；英伟达的替代品都很糟糕；研究人员掌握着硬件采购的风向舵；训练时延的影响。</span></p><p style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;letter-spacing: 0.578px;text-wrap: wrap;outline: 0px;background-color: rgb(239, 239, 239);line-height: 1.6em;"><br></p><p style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;letter-spacing: 0.578px;text-wrap: wrap;outline: 0px;background-color: rgb(239, 239, 239);line-height: 1.6em;"><span style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 16px;letter-spacing: 2px;color: rgb(63, 63, 63);">随着 AI 技术的发展，<span style="color: rgb(63, 63, 63);font-size: 16px;letter-spacing: 2px;text-wrap: wrap;background-color: rgb(239, 239, 239);">Pete 预测，</span>上述优势将逐渐发生变化：英伟达在整体 AI 市场中的份额占比将下降，虽然 AI 市场整体将大幅增长，英伟达的绝对销量会有所增长，但却难以继续维持目前的利润率。</span></p><p style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;letter-spacing: 0.578px;text-wrap: wrap;outline: 0px;background-color: rgb(239, 239, 239);line-height: 1.6em;"><br></p><p style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;letter-spacing: 0.578px;text-wrap: wrap;outline: 0px;background-color: rgb(239, 239, 239);line-height: 1.6em;"><span style="outline: 0px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 16px;letter-spacing: 2px;color: rgb(63, 63, 63);">Pete Warden 是智能传感器公司 Useful Sensor 的创始人，出版了《公共数据手册》和《大数据词汇表》，创建了 OpenHeatMap 和 Data Science Toolkit 等开源项目。</span></p><p style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;letter-spacing: 0.578px;text-wrap: wrap;outline: 0px;background-color: rgb(239, 239, 239);line-height: 1.6em;"><br></p><p style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;letter-spacing: 0.578px;text-wrap: wrap;outline: 0px;background-color: rgb(239, 239, 239);line-height: 1.6em;text-align: left;"><span style="letter-spacing: 2px;outline: 0px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 16px;color: rgb(63, 63, 63);">（以下内容由 OneFlow 编译发布，转载请联系授权。</span><span style="color: rgb(63, 63, 63);font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 16px;letter-spacing: 2px;">原文：https://petewarden.com/2023/09/10/why-nvidias-ai-supremacy-is-only-temporary/）</span></p></section></section></section></section></section></section></section></section></section></section></section></section></section></section><p style="line-height: 1.6em;text-align: justify;margin-left: 8px;margin-right: 8px;"><br></p><p style="line-height: 1.6em;text-align: justify;margin-left: 8px;margin-right: 8px;"><strong><span style="font-size: 16px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 2px;color: rgb(63, 63, 63);">作者 | Pete Warden</span></strong></p><p style="line-height: 1.6em;text-align: justify;margin-left: 8px;margin-right: 8px;"><strong><span style="color: rgb(63, 63, 63);font-size: 16px;letter-spacing: 2px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">OneFlow 编译</span></strong></p><p style="line-height: 1.6em;text-align: justify;margin-left: 8px;margin-right: 8px;"><strong><span style="color: rgb(63, 63, 63);font-size: 16px;letter-spacing: 2px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">翻译｜宛子琳、杨婷</span></strong></p><p style="line-height: 1.6em;text-align: justify;margin-left: 8px;margin-right: 8px;"><br></p><p style="line-height: 1.6em;text-align: justify;margin-left: 8px;margin-right: 8px;"><span style="font-size: 16px;letter-spacing: 2px;color: rgb(63, 63, 63);">英伟达（Nvidia）是一家令人敬佩的公司，几十年来他们勇于逆势而行，实现与众不同的愿景，并因其在 AI 革命中扮演的核心角色（GPU 成为神经网络计算的引擎），成为了市值最高的企业之一。</span></p><p style="line-height: 1.6em;text-align: justify;margin-left: 8px;margin-right: 8px;"><span style="font-size: 16px;letter-spacing: 2px;color: rgb(63, 63, 63);"><br></span></p><p style="line-height: 1.6em;text-align: justify;margin-left: 8px;margin-right: 8px;"><span style="font-size: 16px;letter-spacing: 2px;color: rgb(63, 63, 63);">然而，我认为在未来几年内，英伟达在机器学习领域的主导地位可能会受到一定程度的动摇，本文将详细解释其中的原因。为阐明这一观点，我打算探讨一些驱动英伟达目前主导地位的因素，以及未来可能发生的变化。</span></p><p style="line-height: 1.6em;text-align: justify;margin-left: 8px;margin-right: 8px;"><span style="font-size: 16px;letter-spacing: 2px;color: rgb(63, 63, 63);"><br></span></p><span id="OSC_h2_1"></span><h2><p style="line-height: 1.6em;text-align: center;margin-left: 8px;margin-right: 8px;"><strong><span style="letter-spacing: 2px;font-size: 24px;color: rgb(246, 171, 0);">1</span></strong></p><p style="line-height: 1.6em;text-align: center;margin-left: 8px;margin-right: 8px;"><strong><span style="letter-spacing: 2px;font-size: 17px;color: rgb(30, 35, 128);">目前的优势</span></strong></p><p style="line-height: 1.6em;text-align: justify;margin-left: 8px;margin-right: 8px;"><br></p></h2><span id="OSC_h3_2"></span><h3><p style="line-height: 1.6em;text-align: justify;margin-left: 8px;margin-right: 8px;"><span style="font-size: 16px;"><strong><span style="letter-spacing: 2px;color: rgb(63, 63, 63);">1. 几乎无人运行大规模机器学习的推理</span></strong></span></p><p style="line-height: 1.6em;text-align: justify;margin-left: 8px;margin-right: 8px;"><br></p></h3><p style="line-height: 1.6em;text-align: justify;margin-left: 8px;margin-right: 8px;"><span style="font-size: 16px;letter-spacing: 2px;color: rgb(63, 63, 63);">除少数几家大型科技公司之外，很少有其他公司真正开始大规模地在生产环境中运行大型 AI 模型。这些公司仍在探索如何利用这些新能力，因此它们的成本主要集中在数据集收集、用于训练的硬件以及模型研究者的薪资。这意味着更重视机器学习的训练，而非推理。</span></p><p style="line-height: 1.6em;text-align: justify;margin-left: 8px;margin-right: 8px;"><strong style="font-size: 16px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.034em;"><span style="letter-spacing: 2px;color: rgb(63, 63, 63);font-size: 15px;"><br></span></strong></p><p style="line-height: 1.6em;text-align: justify;margin-left: 8px;margin-right: 8px;"><span style="font-size: 16px;"><strong><span style="letter-spacing: 2px;color: rgb(63, 63, 63);">2. 英伟达难以被替代</span></strong></span></p><h3 style="line-height: 1.6em;text-align: justify;margin-left: 8px;margin-right: 8px;"><p style="line-height: 1.6em;text-align: justify;margin-left: 8px;margin-right: 8px;"><br></p></h3><p style="line-height: 1.6em;text-align: justify;margin-left: 8px;margin-right: 8px;"><span style="font-size: 16px;letter-spacing: 2px;color: rgb(63, 63, 63);">对于创建或使用机器学习模型的开发者来说，相比使用 AMD 的 OpenCL 卡、<a target="_blank" href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzU5ODY2MTk3Nw%3D%3D%26mid%3D2247489536%26idx%3D1%26sn%3D356152077173bca0e11129d755b78ac3%26chksm%3Dfe419636c9361f20a57ec7690f792c139741768f0a4c5296e4c736eb1e41d846f06be9787dd4%26scene%3D21%23wechat_redirect" textvalue="谷歌的 TPU" linktype="text" imgurl="" imgdata="null" data-itemshowtype="0" tab="innerlink" data-linktype="2"><strong>谷歌的 TPU</strong></a>、<a target="_blank" href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzU5ODY2MTk3Nw%3D%3D%26mid%3D2247489423%26idx%3D1%26sn%3D06ee2940404e0732ee7860152ddab571%26chksm%3Dfe4199b9c93610af10a6f32614fbb035d0acd56855e70e93a0e8af363beef8dd04ddaeeb43b0%26scene%3D21%23wechat_redirect" textvalue="Cerebras" linktype="text" imgurl="" imgdata="null" data-itemshowtype="0" tab="innerlink" data-linktype="2"><strong>Cerebras</strong></a> 系统或其他硬件，使用英伟达的 GPU 更容易且更省时。英伟达的软件堆栈更加成熟，提供了更为丰富的示例、文档和相关资源，更容易找到有经验的工程师，与主要框架的集成效果也更好。实际上，英伟达在构建平台效应方面无可匹敌，当前的市场形势呈现出明显的赢家通吃倾向，英伟达毫无疑问就是那个脱颖而出的赢家。</span></p><p style="line-height: 1.6em;text-align: justify;margin-left: 8px;margin-right: 8px;"><strong style="font-size: 16px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.034em;"><span style="letter-spacing: 2px;color: rgb(63, 63, 63);font-size: 15px;"><br></span></strong></p><p style="line-height: 1.6em;text-align: justify;margin-left: 8px;margin-right: 8px;"><span style="font-size: 16px;"><strong><span style="letter-spacing: 2px;color: rgb(63, 63, 63);">3. 研究人员掌握硬件采购的话语权</span></strong></span></p><h3 style="line-height: 1.6em;text-align: justify;margin-left: 8px;margin-right: 8px;"><p style="line-height: 1.6em;text-align: justify;margin-left: 8px;margin-right: 8px;"><br></p></h3><p style="line-height: 1.6em;text-align: justify;margin-left: 8px;margin-right: 8px;"><span style="font-size: 16px;letter-spacing: 2px;color: rgb(63, 63, 63);">雇佣机器学习研究员是一项极具挑战性的任务，经验丰富的专家享有丰富的职业选择，满足他们的需求至关重要，而他们的需求之一就是英伟达平台。这些专家已经熟悉并能高效地在英伟达平台上工作，而使用其他的替代平台需要时间，且不一定能获得同等的职场认可。考虑到雇佣和留住机器学习研究员的高昂成本，购买硬件时必须优先考虑他们的偏好。</span></p><p style="line-height: 1.6em;text-align: justify;margin-left: 8px;margin-right: 8px;"><strong style="font-size: 16px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.034em;"><span style="letter-spacing: 2px;color: rgb(63, 63, 63);font-size: 15px;"><br></span></strong></p><p style="line-height: 1.6em;text-align: justify;margin-left: 8px;margin-right: 8px;"><span style="font-size: 16px;"><strong><span style="letter-spacing: 2px;color: rgb(63, 63, 63);">4、训练时延的影响</span></strong></span></p><h3 style="line-height: 1.6em;text-align: justify;margin-left: 8px;margin-right: 8px;"><p style="line-height: 1.6em;text-align: justify;margin-left: 8px;margin-right: 8px;"><br></p></h3><p style="line-height: 1.6em;text-align: justify;margin-left: 8px;margin-right: 8px;"><span style="font-size: 16px;letter-spacing: 2px;color: rgb(63, 63, 63);">根据经验，通常情况下，从头训练一个模型大约需要一周时间。自 AlexNet 早期以来，这一规则一直适用，因为如果迭代周期变长，就很难进行实证测试和原型制作等关键步骤了，而这些步骤对于达到所需的准确度目标来说仍然至关重要。</span></p><p style="line-height: 1.6em;text-align: justify;margin-left: 8px;margin-right: 8px;"><br></p><p style="line-height: 1.6em;text-align: justify;margin-left: 8px;margin-right: 8px;"><span style="font-size: 16px;letter-spacing: 2px;color: rgb(63, 63, 63);">随着硬件性能的提升，人们构建的模型也越来越大，这导致训练时间再次接近原先的水平。为获得更好的效果，人们开始侧重于构建更高质量的模型，而非减少整体训练时间。因此，购买最新的英伟达 GPU 变得极具吸引力，因为大部分现有代码可以直接使用，只是运行速度更快。理论上说，竞争对手有机会通过较低的时延赢得优势，但由于其软件堆栈并不完善（CUDA 在此方面已投资了数十年），这一机会只是一种幻觉。</span></p><p style="line-height: 1.6em;text-align: justify;margin-left: 8px;margin-right: 8px;"><br></p><span id="OSC_h2_3"></span><h2 style="line-height: 1.6em;text-align: center;margin-left: 8px;margin-right: 8px;"><p style="line-height: 1.6em;text-align: center;margin-left: 8px;margin-right: 8px;"><strong><span style="letter-spacing: 2px;font-size: 24px;color: rgb(246, 171, 0);">2</span></strong></p><p style="line-height: 1.6em;text-align: center;margin-left: 8px;margin-right: 8px;"><strong><span style="letter-spacing: 2px;font-size: 17px;color: rgb(30, 35, 128);">会发生怎样的改变？</span></strong></p><p style="line-height: 1.6em;text-align: justify;margin-left: 8px;margin-right: 8px;"><br></p></h2><p style="line-height: 1.6em;text-align: justify;margin-left: 8px;margin-right: 8px;"><span style="font-size: 16px;letter-spacing: 2px;color: rgb(63, 63, 63);">希望上文所述的几个原因足以成为解释英伟达取得成功的重要结构性因素。以下是我对上述因素未来变化情况的预测。</span></p><p style="line-height: 1.6em;text-align: justify;margin-left: 8px;margin-right: 8px;"><strong style="text-align: left;font-size: 16px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.034em;"><span style="letter-spacing: 2px;color: rgb(63, 63, 63);font-size: 15px;"><br></span></strong></p><p style="line-height: 1.6em;text-align: justify;margin-left: 8px;margin-right: 8px;"><span style="font-size: 16px;"><strong style="text-align: left;font-size: 16px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.034em;"><span style="letter-spacing: 2px;color: rgb(63, 63, 63);">1. 推理（inference）而非训练（training）将占据主导地位</span></strong></span></p><h3 style="line-height: 1.6em;text-align: justify;margin-left: 8px;margin-right: 8px;"><p style="line-height: 1.6em;text-align: justify;margin-left: 8px;margin-right: 8px;"><br></p></h3><p style="line-height: 1.6em;text-align: justify;margin-left: 8px;margin-right: 8px;"><span style="font-size: 16px;letter-spacing: 2px;color: rgb(63, 63, 63);">几年前有人告诉我：「训练成本与研究人员数量成正比，推理成本与用户数量成正比」。我从中得出的结论是，在未来某个时刻，公司在用户请求上运行模型的计算量将超过他们用于训练的计算量。虽然单次训练的成本较高，运行推理的成本较低，但世界上有着大量的潜在用户，涉及众多不同的应用场景，这些推理需求的累计总量将超过训练总量，因为研究人员的数量毕竟是有限的。</span></p><p style="line-height: 1.6em;text-align: justify;margin-left: 8px;margin-right: 8px;"><br></p><p style="line-height: 1.6em;text-align: justify;margin-left: 8px;margin-right: 8px;"><span style="font-size: 16px;letter-spacing: 2px;color: rgb(63, 63, 63);">对于硬件来说，这意味着优先级将转向降低推理成本。<strong>很多机器学习研究员将推理视为训练的一个子集，但从根本上讲，这种看法是错的。</strong></span></p><p style="line-height: 1.6em;text-align: justify;margin-left: 8px;margin-right: 8px;"><span style="color:#3f3f3f;"><span style="font-size: 16px;letter-spacing: 2px;"><strong><br></strong></span></span><span style="font-size: 16px;letter-spacing: 2px;color: rgb(63, 63, 63);">在推理过程中，由于需要在时延和吞吐量之间做权衡，所以通常难以组装出大批量的输入数据，而在面向用户的应用程序中，时延一直是至关重要的影响因素。小型或单个输入批次会显著改变工作负载，并需要采用截然不同的优化方法。此外，在推理过程中，还有很多因素（如权重）是保持不变的，因此可以通过权重压缩或常数折叠（constant folding）等预处理技术来获益。</span></p><p style="line-height: 1.6em;text-align: justify;margin-left: 8px;margin-right: 8px;"><strong style="font-size: 16px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.034em;"><span style="letter-spacing: 2px;color: rgb(63, 63, 63);font-size: 15px;"><br></span></strong></p><p style="line-height: 1.6em;text-align: justify;margin-left: 8px;margin-right: 8px;"><span style="font-size: 16px;"><strong style="text-align: left;font-size: 16px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.034em;"><span style="letter-spacing: 2px;color: rgb(63, 63, 63);">2. CPU 在推理方面的竞争力</span></strong></span></p><h3 style="line-height: 1.6em;text-align: justify;margin-left: 8px;margin-right: 8px;"><p style="line-height: 1.6em;text-align: justify;margin-left: 8px;margin-right: 8px;"><br></p></h3><p style="line-height: 1.6em;text-align: justify;margin-left: 8px;margin-right: 8px;"><span style="font-size: 16px;letter-spacing: 2px;color: rgb(63, 63, 63);">在模型训练过程中，CPU 的速度仍然慢得让人难以接受，因此上文在列举英伟达的替代品时，并没有提及 CPU。但主流的桌面级 CPU（x86、Arm，以及可能即将推出的 RISC-V）经过了几十年的工具链投资，比英伟达具备更成熟的开发工具和社区。此外，主流 CPU 的单次计算操作成本也远低于任何 GPU。</span></p><p style="line-height: 1.6em;text-align: justify;margin-left: 8px;margin-right: 8px;"><br></p><p style="line-height: 1.6em;text-align: justify;margin-left: 8px;margin-right: 8px;"><span style="font-size: 16px;letter-spacing: 2px;color: rgb(63, 63, 63);">回顾互联网时代的早期阶段，当时建立互联网公司的主要成本是从 Sun 等公司花费数百万美元购买高端网络服务器硬件，因为它们是唯一能够可靠地提供低时延网页服务的平台，那些服务器拥有当时市面上最快的硬件配置。当整个网站需要在一台机器上运行时，硬件速度就成了至关重要的因素。然而，随着分布式软件的应用，人们可以将工作分配到大量性能相对较低但廉价的通用 x86 服务器上，这导致 Sun 的市场份额迅速萎缩。</span></p><p style="line-height: 1.6em;text-align: justify;margin-left: 8px;margin-right: 8px;"><br></p><p style="line-height: 1.6em;text-align: justify;margin-left: 8px;margin-right: 8px;"><span style="font-size: 16px;letter-spacing: 2px;color: rgb(63, 63, 63);">目前，模型训练很难以类似的方式进行分布式处理。虽然工作负载可以在相互紧密连接的几个 GPU 上进行分割，但不断更新的模式使得通过在低端 CPU 上进行分片（sharding）来减少时延变得不现实。不过，对于推理阶段，情况则不同。模型权重是固定的，因此可以在初始化阶段轻松地在许多机器上进行复制，而无需通信。这使得大量的商用 PC 对依赖 ML 推理的应用程序来说非常有吸引力。</span></p><p style="line-height: 1.6em;text-align: justify;margin-left: 8px;margin-right: 8px;"><strong style="font-size: 16px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.034em;"><span style="letter-spacing: 2px;color: rgb(63, 63, 63);font-size: 15px;"><br></span></strong></p><p style="line-height: 1.6em;text-align: justify;margin-left: 8px;margin-right: 8px;"><span style="font-size: 16px;"><strong style="text-align: left;font-size: 16px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.034em;"><span style="letter-spacing: 2px;color: rgb(63, 63, 63);">3. 部署工程师话语权增加</span></strong></span></p><h3 style="line-height: 1.6em;text-align: justify;margin-left: 8px;margin-right: 8px;"><p style="line-height: 1.6em;text-align: justify;margin-left: 8px;margin-right: 8px;"><br></p></h3><p style="line-height: 1.6em;text-align: justify;margin-left: 8px;margin-right: 8px;"><span style="font-size: 16px;letter-spacing: 2px;color: rgb(63, 63, 63);">随着推理成本开始主导训练过程，降低推理成本的压力将越来越大。在这种情况下，研究人员的偏好将不再是最高优先级。为精简生产流程，他们需要从事一些相对不太感兴趣的工作。随着相关技能的广泛普及，未来几年将会有更多能够训练模型的人进入劳动力市场。这意味着研究人员在企业中的话语权将被削弱，而部署团队的需求会更受重视。</span></p><p style="line-height: 1.6em;text-align: justify;margin-left: 8px;margin-right: 8px;"><strong style="font-size: 16px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.034em;"><span style="letter-spacing: 2px;color: rgb(63, 63, 63);font-size: 15px;"><br></span></strong></p><p style="line-height: 1.6em;text-align: justify;margin-left: 8px;margin-right: 8px;"><span style="font-size: 16px;"><strong style="text-align: left;font-size: 16px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.034em;"><span style="letter-spacing: 2px;color: rgb(63, 63, 63);">4. 应用成本规律</span></strong></span></p><h3 style="line-height: 1.6em;text-align: justify;margin-left: 8px;margin-right: 8px;"><p style="line-height: 1.6em;text-align: justify;margin-left: 8px;margin-right: 8px;"><br></p></h3><p style="line-height: 1.6em;text-align: justify;margin-left: 8px;margin-right: 8px;"><span style="font-size: 16px;letter-spacing: 2px;color: rgb(63, 63, 63);">当推理阶段占据整体人工智能预算的主导地位时，硬件和工作负载的需求会有很大不同。研究人员十分注重快速实验的能力，因此他们需要具备灵活性来进行新想法的原型设计。相对来说，应用程序通常较少更换模型，一旦研究人员找到了符合他们需求的模型，可能会在多年内使用相同的基本架构。</span></p><p style="line-height: 1.6em;text-align: justify;margin-left: 8px;margin-right: 8px;"><br></p><p style="line-height: 1.6em;text-align: justify;margin-left: 8px;margin-right: 8px;"><span style="font-size: 16px;letter-spacing: 2px;color: rgb(63, 63, 63);">或许我们正朝着这样一个世界前进：模型作者使用类似于 Matlab 针对数学算法的专门工具，然后将结果交给部署工程师，由他们手动将结果转换为更适用于特定应用的高效形式。这一推断不无道理，因为如果模型架构保持不变（即便权重发生变化），随时间的推移，任何的成本节约都会倍增。</span></p><p style="line-height: 1.6em;text-align: justify;margin-left: 8px;margin-right: 8px;"><br></p><span id="OSC_h2_4"></span><h2 style="line-height: 1.6em;text-align: center;margin-left: 8px;margin-right: 8px;"><p style="line-height: 1.6em;text-align: center;margin-left: 8px;margin-right: 8px;"><strong><span style="letter-spacing: 2px;font-size: 24px;color: rgb(246, 171, 0);">3</span></strong></p><p style="line-height: 1.6em;text-align: center;margin-left: 8px;margin-right: 8px;"><strong><span style="letter-spacing: 2px;font-size: 17px;color: rgb(30, 35, 128);">上述改变意味着什么？</span></strong></p><p style="line-height: 1.6em;text-align: justify;margin-left: 8px;margin-right: 8px;"><br></p></h2><p style="line-height: 1.6em;text-align: justify;margin-left: 8px;margin-right: 8px;"><span style="font-size: 16px;letter-spacing: 2px;color: rgb(63, 63, 63);">通过上述的四个预测可以得出结论：<strong>英伟达在 AI 市场份额中的占比将下降。</strong>虽然 AI 市场整体将大幅增长，英伟达的绝对销量可能会继续增长，但将难以持续维持目前的利润率。</span></p><p style="line-height: 1.6em;text-align: justify;margin-left: 8px;margin-right: 8px;"><br></p><p style="line-height: 1.6em;text-align: justify;margin-left: 8px;margin-right: 8px;"><span style="font-size: 16px;letter-spacing: 2px;color: rgb(63, 63, 63);">在这种转变中，预计传统的 CPU 平台（如 x86 和 Arm ）将胜出。推理过程需要与传统的业务逻辑紧密集成，以运行终端用户应用程序，因此很难想象，即使是针对推理而专门设计的硬件也能够跨越总线（bus）运行，因为涉及延迟问题。相反，我预计 CPU 将获得更加紧密集成的机器学习支持，首先作为协处理器，最终作为专门的指令，就像浮点数支持的演变一样。</span></p><p style="line-height: 1.6em;text-align: justify;margin-left: 8px;margin-right: 8px;"><br></p><p style="line-height: 1.6em;text-align: justify;margin-left: 8px;margin-right: 8px;"><span style="font-size: 16px;letter-spacing: 2px;color: rgb(63, 63, 63);">以上因素推动着我的研究和创业方向。未来几年，改进模型推理将带来巨大的影响，但与训练相比，推理仍然被忽视。</span></p><p style="line-height: 1.6em;text-align: justify;margin-left: 8px;margin-right: 8px;"><br></p><p style="line-height: 1.6em;text-align: justify;margin-left: 8px;margin-right: 8px;"><span style="font-size: 16px;letter-spacing: 2px;color: rgb(63, 63, 63);">不过，这种情况正在发生改变。像 Reddit 中的 LocalLlama 社区专注于推理的改进，GGML 的成功则证明了人们对专注推理的框架的需求之大，此外，几个通用模型的传播也增加了推理优化的回报。</span></p><p style="line-height: 1.6em;text-align: justify;margin-left: 8px;margin-right: 8px;"><br></p><p style="line-height: 1.6em;text-align: justify;margin-left: 8px;margin-right: 8px;"><span style="font-size: 16px;letter-spacing: 2px;color: rgb(63, 63, 63);">我之所以如此关注边缘端，是因为它最接近未来将运行大部分云端 AI 的大规模普通 PC 的环境。早在 2013 年，我开始编写 Jetpac SDK ，旨在通过在 100 台 m1.small AWS 服务器集群上加速计算机视觉，相较于在数百万张图像上进行推理的 GPU 实例，这种方法更加经济高效。后来我才意识到 SDK 在移动设备上的适用性如此之好。</span></p><p style="line-height: 1.6em;text-align: justify;margin-left: 8px;margin-right: 8px;"><br></p><section style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;text-wrap: wrap;outline: 0px;caret-color: rgba(0, 0, 0, 0.9);font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-size-adjust: auto;line-height: 1.75em;text-align: left;"><span style="background-color: rgb(255, 255, 255);color: rgb(136, 136, 136);letter-spacing: 1px;font-size: 15px;">其他人都在看</span></section><span id="OSC_h3_5"></span><h3 style="letter-spacing: 0.578px;text-wrap: wrap;"><ul class="list-paddingleft-1" style="width: 577.422px;"><li style="outline: 0px;font-size: 15px;letter-spacing: 1px;"><p><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzU5ODY2MTk3Nw%3D%3D%26mid%3D2247491988%26idx%3D1%26sn%3Dc5fcc5f3fa27bb00bf8ef9af05e7ca89%26chksm%3Dfe426fa2c935e6b4ebb279bf19471f39629ccfb6733e6d8a580fdcbb01e80bd59266f3830bac%26scene%3D21%23wechat_redirect" textvalue="OpenAI 首席科学家：通向无监督学习之路" linktype="text" imgurl="" imgdata="null" data-itemshowtype="0" tab="innerlink" data-linktype="2" style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;text-wrap: wrap;letter-spacing: 0.578px;font-size: 15px;"><span style="font-size: 15px;">通向无监督学习之路</span></a><br></p></li><li style="outline: 0px;font-size: 15px;letter-spacing: 1px;"><p><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzU5ODY2MTk3Nw%3D%3D%26mid%3D2247492023%26idx%3D1%26sn%3D28acd01925189816397de2317040f71e%26chksm%3Dfe426f81c935e697cacc74133e02923089df26cd8b2b07efd0e08d7a5ee2c9ca98d1a913f9cd%26scene%3D21%23wechat_redirect" textvalue="TorchDynamo 初探②：Torch.FX 调研和实践" linktype="text" imgurl="" imgdata="null" data-itemshowtype="0" tab="innerlink" data-linktype="2" style="letter-spacing: 1px;text-wrap: wrap;font-size: 15px;"><span style="font-size: 15px;">Torch.FX 调研和实践</span></a><br></p></li><li style="outline: 0px;font-size: 15px;letter-spacing: 1px;"><p><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzU5ODY2MTk3Nw%3D%3D%26mid%3D2247492022%26idx%3D1%26sn%3D4c2dc51a0f57494539e2d0dae4e8356b%26chksm%3Dfe426f80c935e696b204053faad502b81a5aecf14c3ff804281f8f02bbc215519a3a2ac9627e%26scene%3D21%23wechat_redirect" textvalue="揭秘编码器与解码器语言模型" linktype="text" imgurl="" imgdata="null" data-itemshowtype="0" tab="innerlink" data-linktype="2" style="font-size: 15px;"><span style="font-size: 15px;">揭秘编码器与解码器语言模型</span></a></p></li><li style="outline: 0px;font-size: 15px;letter-spacing: 1px;"><p><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzU5ODY2MTk3Nw%3D%3D%26mid%3D2247492022%26idx%3D1%26sn%3D4c2dc51a0f57494539e2d0dae4e8356b%26chksm%3Dfe426f80c935e696b204053faad502b81a5aecf14c3ff804281f8f02bbc215519a3a2ac9627e%26scene%3D21%23wechat_redirect" textvalue="揭秘编码器与解码器语言模型" linktype="text" imgurl="" imgdata="null" data-itemshowtype="0" tab="innerlink" data-linktype="2"></a><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzU5ODY2MTk3Nw%3D%3D%26mid%3D2247491908%26idx%3D1%26sn%3D208a592f66f2cb2f412f9b58bca87401%26chksm%3Dfe426f72c935e6641a14837bb0a600bcbf28b9b2d427ca01477b492cfff2116aafedfd66c900%26scene%3D21%23wechat_redirect" textvalue="通俗解构语言大模型的工作原理" linktype="text" imgurl="" imgdata="null" data-itemshowtype="0" tab="innerlink" data-linktype="2" style="font-size: 15px;"><span style="font-size: 15px;">通俗解构语言大模型的工作原理</span></a></p></li><li style="outline: 0px;font-size: 15px;letter-spacing: 1px;"><p><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzU5ODY2MTk3Nw%3D%3D%26mid%3D2247492001%26idx%3D1%26sn%3D8ee2ef77916c2992f570c294adc1ec19%26chksm%3Dfe426f97c935e6819fbd0cad4ca972da01c1ba40baef933db2a3eadfaed12a7605444ad86132%26scene%3D21%23wechat_redirect" textvalue="PyTorch 创始人：开源成功的方法论" linktype="text" imgurl="" imgdata="null" data-itemshowtype="0" tab="innerlink" data-linktype="2" style="letter-spacing: 0.578px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;"><span style="font-size: 15px;">PyTorch 创始人：开源成功的方法论</span></a></p></li><li style="outline: 0px;font-size: 15px;letter-spacing: 1px;"><p><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzU5ODY2MTk3Nw%3D%3D%26mid%3D2247492040%26idx%3D1%26sn%3Daed3ec88c328d23435bb24cfe7179dbd%26chksm%3Dfe426ffec935e6e82af92f9922696b65de62ecb5e6499e3ab1e82725889bc164c1fdf4a6ff4f%26scene%3D21%23wechat_redirect" textvalue="OpenAI 首席科学家：直面 AGI 的可能性" linktype="text" imgurl="" imgdata="null" data-itemshowtype="0" tab="innerlink" data-linktype="2" style="letter-spacing: 0.578px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;"><span style="font-size: 15px;"><span style="letter-spacing: 0.578px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">OpenAI 首席科学家：直面 AGI 的可能性</span></span></a></p></li></ul></h3><span id="OSC_h3_6"></span><h3 style="letter-spacing: 0.578px;text-wrap: wrap;"><ul class="list-paddingleft-1" style="width: 577.422px;"><li style="outline: 0px;font-size: 15px;letter-spacing: 1px;"><section style="letter-spacing: 0.578px;"><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzU5ODY2MTk3Nw%3D%3D%26mid%3D2247491935%26idx%3D1%26sn%3D9535636ca06c16345b432a9de5383f1e%26chksm%3Dfe426f69c935e67f717ca8a968b9dd2a3f69b45f330b561b3584ba1b196149c8ba00d3d452eb%26scene%3D21%23wechat_redirect" textvalue="OpenAI 超级对齐负责人：「驾驭」超级智能的四年计划" linktype="text" imgurl="" imgdata="null" data-itemshowtype="0" tab="innerlink" data-linktype="2" style="font-size: 15px;"><span style="font-size: 15px;">OpenAI 对齐负责人：「驾驭」超级智能四年计划</span></a><br></section></li></ul><section style="outline: 0px;line-height: 1.75em;text-align: left;"><span style="outline: 0px;background-color: rgb(255, 255, 255);letter-spacing: 1px;color: rgb(63, 63, 63);font-size: 15px;">试用 OneFlow: github.com/Oneflow-Inc/oneflow/</span></section></h3><h2 style="margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;text-wrap: wrap;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);"><hr style="outline: 0px;border-style: solid;border-right-width: 0px;border-bottom-width: 0px;border-left-width: 0px;border-color: rgba(0, 0, 0, 0.1);transform-origin: 0px 0px;transform: scale(1, 0.5);"></h2><p style="margin-bottom: 0px;letter-spacing: 0.578px;text-wrap: wrap;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);"><img class="rich_pages wxw-img" data-backh="162" data-backw="578" data-galleryid="" data-ratio="0.2802690582959641" data-s="300,640" data-type="png" data-w="892" style="letter-spacing: 0.578px;text-align: center;font-size: var(--articleFontsize);outline: 0px;display: inline;width: 100%;visibility: visible !important;height: auto !important;" src="https://oscimg.oschina.net/oscnet/5b64ee31-833c-4a6d-a3f5-1cbf8d5e1f08.png" referrerpolicy="no-referrer"></p><p style="display: none;"><mp-style-type data-value="10000"></mp-style-type></p></div><p style="color: #858585; font-size: 13px;">本文分享自微信公众号 - OneFlow（OneFlowTechnology）。<br>如有侵权，请联系 support@oschina.cn 删除。<br>本文参与「<a href="https://www.oschina.net/sharing-plan" target="_blank">OSC 源创计划</a>」，欢迎正在阅读的你也加入，一起分享。</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 21 Sep 2023 08:26:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/oneflow/blog/10112067</guid>
            <link>https://my.oschina.net/oneflow/blog/10112067</link>
            <author>
                <![CDATA[OneFlow 深度学习框架]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[deepin 官宣正式接入大模型]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://www.oschina.net/question/4489239_2331019" _blank"="">
数据技术都能四世同堂，凭什么开发 30 岁就要被干掉？ 
<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p>deepin 正式<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2Fc13tYvL26S3CCht1f_RitA" target="_blank">官宣</a>已实现大模型能力接入，多款自研应用软件实现智能化升级。</p><p>统信软件高级副总经理、CTO 张磊表示：「目前 UOS AI 实现了国内外主流大模型的能力接入，并封装成 deepin 的 AI 底层公共能力；同时，我们也将把 UOS AI 逐步开源给第三方应用，让更多应用可以在 deepin 上直接调用大模型。</p><p>公告指出，大模型的接入为 deepin 带来更多可能，操作系统可以更好地理解用户行为，提升用户体验：</p><ul><li>首先，通用大模型通过操作系统探索更多应用场景。通用大模型具有强大的语言理解和处理能力，可以为用户提供智能化的体验；</li><li>其次，大模型的出现带来了全新的交互模式，未来每位用户都将拥有一个专属的 AI 助理，这个助理将运行在操作系统之上；</li><li>最后，未来 AI 将是操作系统的基础能力之一，合作伙伴可以直接调用操作系统提供的 AI 能力，释放平台价值。</li></ul><h4><strong>三大应用，全新升级，为 AI 进化</strong></h4><p>在 AI 能力落地方面，deepin 选取了用户常用的智能全局搜索、邮件、浏览器三大应用，率先开启 AI 能力，为用户提供智能化应用体验。</p><p><strong>智能全局搜索：一键搜索、一键直达</strong></p><p>智能全局搜索支持三大核心能力，包括自然语言搜索、图片内容搜索、文档内容搜索，可实现「一键搜索，一键直达」的便捷体验。</p><p><img alt="" height="281" src="https://oscimg.oschina.net/oscnet/up-9b7631bf352e063e37ad3063c3c4d6bb1ce.png" width="500" referrerpolicy="no-referrer"></p><p>不管是关键词文件名查找，还是文件内容查找、图片 OCR 查找、时间范围查找等，都支持智能全局搜索。</p><p><strong>邮箱新体验：在这里，新建无限可能</strong></p><p>邮箱同样是日常办公中最为常见，也是应用最为频繁的软件之一。更多时候，我们会把时间花在书写的规范性及排版构思中，而这些诉求都可以通过 UOS AI 快速完成，大大提升用户的工作效率和品质。</p><p><img alt="" height="281" src="https://oscimg.oschina.net/oscnet/up-bd3092054ddf468288daf221eb7729ef732.png" width="500" referrerpolicy="no-referrer"></p><p>例如，仅需输入邮件主题，UOS AI 便可输出内容，供你参考；写好邮件，想不出主题，UOS AI 帮你总结；对已写的邮件内容不满意，交给 UOS AI 帮你润色……更多智能化功能，等你体验。</p><p><strong>浏览器新玩法：从场景中来，到体验中去</strong></p><p>从此，用提问代替搜索！来体验浏览学习、创作编剧、提示词管理等丰富功能。未来，还将加入更多智能化应用体验。</p><p><img alt="" height="259" src="https://oscimg.oschina.net/oscnet/up-892cd0b93b60ecfaf7afa1a656c276a805f.png" width="500" referrerpolicy="no-referrer"></p><p>目前，浏览器 AI 三大亮点功能包括：</p><ul><li>聊天问答：右侧固定聊天框，为用户提供基于大模型的问答聊天服务；</li><li>快捷浮窗：在网页内提供 AI 快捷浮窗，支持 AI 翻译、AI 总结、AI 改写等内容处理能力。同时支持在快捷浮窗运行用户自定义的提示词功能。</li><li>自定义提示词：提供提示词自定义功能，支持用户自定义提示词，已实现个性化功能。</li></ul><p>deepin 方面表示，此次接入大模型将为用户带来更加智能化的操作体验。用户可以通过语音识别、图像识别等技术，更加便捷地进行操作，为日常使用带来极大的便利。</p><p>「未来，UOS AI 将在 deepin 的原生应用和第三方应用中探索更多模式。随着技术的不断进步和发展，我们将会成为更加优秀的开源操作系统，为全球用户带来更好的体验。同时，我们也期待更多的开发者和企业能够参与到这一创新过程中来，共同推动开源操作系统和大模型的深度融合，为构建更美好的未来科技世界贡献力量。」</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 21 Sep 2023 08:22:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/258958</guid>
            <link>https://www.oschina.net/news/258958</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
    </channel>
</rss>
