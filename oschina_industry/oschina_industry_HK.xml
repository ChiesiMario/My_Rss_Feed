<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[開源中國-綜合資訊]]>
        </title>
        <link>https://www.oschina.net/news/industry</link>
        <atom:link href="https://rsshub.app/oschina/news/industry" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[開源中國-綜合資訊 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Fri, 13 Oct 2023 09:34:39 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[掃清最後一片障礙，英國批准微軟收購動視暴雪]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">英國競爭與市場管理局（CMA）正式<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.gov.uk%2Fgovernment%2Fnews%2Fmicrosoft-concession-a-gamechanger-that-will-promote-competition" target="_blank">宣佈</a>，批准微軟收購動視暴雪的交易，從而為這筆交易掃除了最後一個主要全球監管障礙。交易完成後，微軟將成為世界上營收第三高的遊戲公司，僅次於騰訊和索尼。</span></p><p><span style="color:#000000">這一結果源於今年 8 月份微軟為完成交易所做出的一項讓步：即，由育碧取代微軟購買動視的雲流媒體版權。育碧將獲得動視未來 15 年內所有 PC 和遊戲機遊戲的雲流媒體版權，但這僅適用於歐洲經濟區 (EEA) 以外的市場。在歐洲經濟區內，育碧將獲得「銷售、分銷和轉授動視遊戲雲流媒體版本的非獨家許可。」 這意味着微軟也將能夠在歐洲獲得動視遊戲的雲流媒體播放權。</span></p><p><img height="373" src="https://oscimg.oschina.net/oscnet/up-032ff0710e6560c01ebe8e890fb455cc867.png" width="700" referrerpolicy="no-referrer"></p><p><span style="color:#000000"><span style="background-color:#ffffff">一直以來，CMA 都是該收購案最堅定的反對者。公告稱，</span>微軟的這一讓步解決了 CMA 有關市場壟斷的擔憂，從而同意重新審視該交易，並於 8 月啓動了新的調查。在調查完成後，CMA 則宣佈批准了該交易。</span></p><p><span style="color:#000000">CMA 首席執行官 Sarah Cardell 表示：「通過將動視暴雪的雲流媒體版權出售給育碧，我們確保微軟無法壟斷這個重要且快速發展的市場。隨着雲遊戲的發展，這種幹預將確保人們獲得更具競爭力的價格、更好的服務和更多的選擇。我們是全球唯一一家取得這一成果的競爭機構。 」</span></p><p><span style="color:#000000">但另一方面，Cardell 還對微軟在整個歷時約 20 個月的收購事件中的策略提出了批評，稱「企業及其顧問應該清楚地認識到，微軟採用的策略不是與 CMA 交涉的方式。 在我們最初的調查中，微軟本有機會進行重組，但它卻繼續堅持推進我們已經告知過他們的根本行不通的一攬子措施。以這種方式拖延訴訟只會浪費時間和金錢。」</span></p><p><span style="color:#000000">針對這一批准，微軟</span><span style="background-color:#ffffff; color:#2b2b2b">總裁 Brad Smith 也<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftwitter.com%2FBradSmi%2Fstatus%2F1712711053552107606" target="_blank">發文</a>表達了感謝，「</span><span style="color:#404040">我們現在已經跨過了</span><span style="background-color:#ffffff; color:#0f1419">這次收購的最終監管障礙，</span><span style="color:#404040">我們相信這將使得全球玩家和遊戲行業受益。</span><span style="background-color:#ffffff; color:#2b2b2b">」</span></p><p><img height="244" src="https://oscimg.oschina.net/oscnet/up-0dc46f62076b04db544fb535114c8b30dca.png" width="700" referrerpolicy="no-referrer"></p><p><strong><span style="color:#000000">相關閲讀：</span></strong></p><ul><li><a href="https://www.oschina.net/news/249038/microsoft-activision-blizzard-ftc-win" target="_blank">美國法院駁回 FTC 禁令請求，允許微軟收購暴雪</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Fri, 13 Oct 2023 08:03:41 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261636/cma-microsoft-activision</guid>
            <link>https://www.oschina.net/news/261636/cma-microsoft-activision</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[M2 Ultra 可並行運行 128 個 Llama2-7B 流]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>llama.cpp 是開發者 Georgi Gerganov 用純 C/C++ 代碼實現的&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Farxiv.org%2Fabs%2F2302.13971" target="_blank">LLaMA</a>&nbsp;模型推理開源項目。所謂推理，即是「給輸入-跑模型-得輸出」的模型運行過程。</p><p>最近 Georgi Gerganov 用搭載蘋果 <strong>M2 Ultra 處理器</strong>的設備運行了一系列測試，其中包括<strong>並行運行 128 個 Llama 2 7B 流</strong>。</p><p><img src="https://oscimg.oschina.net/oscnet/up-a4746f7529ff6aaa74c16a12aff409c17db.gif" referrerpolicy="no-referrer"></p><p>具體結果如下：</p><p><img height="1074" src="https://static.oschina.net/uploads/space/2023/1013/154448_xdg1_2720166.png" width="950" referrerpolicy="no-referrer"></p><p><em>via&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fggerganov%2Fllama.cpp%2Fpull%2F3228" target="_blank">https://github.com/ggerganov/llama.cpp/pull/3228</a></em></p><p>對於 M2 Ultra 的這番表現，<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnews.ycombinator.com%2Fitem%3Fid%3D37846387" target="_blank">有人給出瞭解釋</a>，M2 Ultra 或 M1 和 M2 系列 CPU 的速度之所以如此快，<strong>是因為執行推理任務的主要瓶頸是內存帶寬，而不是計算能力</strong>。</p><p><img src="https://static.oschina.net/uploads/space/2023/1013/155118_ZCum_2720166.png" referrerpolicy="no-referrer"></p><p>而 M2 Ultra 的帶寬為 800 GB/s，是普通現代台式機 CPU（雙通道 DDR4-6400 帶寬為 102 GB/s）的 8 倍。</p><p>如此高的帶寬是蘋果為 M1 和 M2 芯片設計了統一內存架構的結果。通常在筆記本電腦或台式機上，CPU 和 GPU 擁有不同的內存系統：高帶寬（但容量相對較低）的顯存和相對低帶寬（但容量較高）的 CPU 內存。</p><p>蘋果公司簡化了這種方案，轉而採用 CPU 和 GPU 共享的單一高帶寬內存系統。這樣做的唯一缺點是，這種高帶寬內存必須緊密集成在 M2 封裝中，因此最大容量受到限制。</p><p>例如，無論你花費 5,600 美元（最便宜的 Mac Studio 機型，配備 M2 Utra 和 192 GB 內存），還是 10,000 美元以上（最頂配 Mac Pro），都只能獲得最大 192 GB 內存。但另一方面，如果你的工作負載（如推理）不需要超過 192 GB 的內存，那就再好不過了。</p><p>如此看來，蘋果在這方面做出了正確的權衡。通常來説，在通用 CPU 的單插槽上實現 800 GB/s 的內存帶寬，這在以前從未實現過。</p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 13 Oct 2023 07:52:41 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261626</guid>
            <link>https://www.oschina.net/news/261626</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[微軟稱黑客組織正在利用 Atlassian 新的 0day 漏洞]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftechcrunch.com%2F2023%2F10%2F11%2Fchinese-state-hackers-atlassian-zero-day%2F" target="_blank">根據科技媒體 Techcrunch 報道</a>，微軟的威脅情報團隊在 X（前身為 Twitter）上發佈的帖子<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftwitter.com%2FMsftSecIntel%2Fstatus%2F1711871732644970856" target="_blank">表示</a>，它觀察到一個名為 Storm-0062 的黑客組織正在利用 Atlassian Confluence 數據中心和服務器中最近披露的一個關鍵缺陷。</p><p><img src="https://static.oschina.net/uploads/space/2023/1012/162312_aNLm_2720166.png" referrerpolicy="no-referrer"></p><p>Atlassian 在 10 月 4 日披露了其 Confluence 數據中心和服務器中的一個漏洞：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fconfluence.atlassian.com%2Fsecurity%2Fcve-2023-22515-privilege-escalation-vulnerability-in-confluence-data-center-and-server-1295682276.html" target="_blank">CVE-2023-22515</a>。</p><p><img src="https://static.oschina.net/uploads/space/2023/1012/162610_P2fX_2720166.png" referrerpolicy="no-referrer"></p><p>微軟安全團隊表示，它從 9 月 14 日起就觀察到了漏洞利用。Atlassian 本週更新了安全通知，稱該漏洞正被活躍利用，並表示此漏洞可能允許遠程攻擊者<strong>創建未經授權的管理員帳户來訪問 Confluence 服務器</strong>。</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 12 Oct 2023 08:27:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261452/atlassian-zero-day</guid>
            <link>https://www.oschina.net/news/261452/atlassian-zero-day</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[2023 CCF 中國開源大會丨開源商業化分論壇，即將開幕！]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="text-align:center"><img height="608" src="https://oscimg.oschina.net/oscnet/up-efd9ab459b96f871de47e91eb63966b717e.png" width="1080" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px">2023 CCF 中國開源大會即將於 10 月 21 日-22 日於湖南長沙舉行，將舉辦近 20 場領域平行分論壇。由<strong>馬越</strong>作為主席的<strong>開源商業化分論壇</strong>邀請您共同分享經驗和見解，共同探索開源領域的無限未來！</p><p style="margin-left:0px; margin-right:0px">&nbsp;</p><span id="OSC_h2_1"></span><h2><strong>一、分論壇簡介</strong></h2><p style="margin-left:0px; margin-right:0px">2023 CCF 中國開源大會「開源商業化」分論壇旨在幫助開發人員和企業家瞭解如何將開源項目轉化為可持續的商業模式。本論壇將討論開源項目商業化最佳實踐，分享成功案例，包括但不限於：開源項目的商業模式、融資和投資、法律問題、市場營銷、社區建設和管理、技術創新等，為更多開發者和企業提供可借鑑的經驗，共同推動開源生態建設，助力開源生態發展。<strong>屆時將於 2023 年 10 月 21 日 14：00-18：00 在湖南省長沙市北辰國際會議中心 1 層 102B 恭候各位同行~</strong></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0px; margin-right:0px">&nbsp;</p><span id="OSC_h2_2"></span><h2><strong>二、分論壇主席</strong></h2><p style="margin-left:0px; margin-right:0px; text-align:center"><img height="854" src="https://oscimg.oschina.net/oscnet/up-1888ff0415a286b8fd1237284c4b92ee2e2.png" width="572" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px; text-align:center"><strong><span>馬越</span></strong></p><p style="margin-left:0px; margin-right:0px; text-align:center"><strong>開源中國董事長、恆拓開源（834415）創始人、曾任董事長</strong></p><p style="margin-left:0px; margin-right:0px">馬越，開源中國董事長，恆拓開源（834415）創始人、曾任董事長。10 年美國開源技術設計和管理經驗，2006 年成為紅帽世界開源創新獎的首位華人獲獎者。</p><p style="margin-left:0px; margin-right:0px">2007 年響應政府號召回國創業，創立中國第一家開源技術服務公司：恆拓開源，用軟件開源化的價值理念為大型企業進行 IT 戰略諮詢，幫助企業落地開源技術整體解決方案，使開源技術在本土企業級應用領域有了廣泛實踐。</p><p style="margin-left:0px; margin-right:0px">2013 年至今建設開源中國，專注於本土開發者服務平台的建設。旗下運營的 gitee.com 目前已經成為世界第二大代碼託管平台，成為本土開源生態創新的基礎設施。</p><p style="margin-left:0px; margin-right:0px">&nbsp;</p><span id="OSC_h2_3"></span><h2><strong>三、分論壇演講</strong></h2><span id="OSC_h4_4"></span><h4><strong>（一）中國開源商業發展的現狀及思考</strong></h4><p style="margin-left:0px; margin-right:0px; text-align:center"><img height="854" src="https://oscimg.oschina.net/oscnet/up-fe8894eecddd1af4e192d6b2438998e75ea.png" width="572" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px; text-align:center"><strong><span>馬越</span></strong></p><p style="margin-left:0px; margin-right:0px; text-align:center"><strong>開源中國董事長、恆拓開源（834415）創始人、曾任董事長</strong></p><p style="margin-left:0px; margin-right:0px"><strong>1、嘉賓介紹</strong></p><p style="margin-left:0px; margin-right:0px">見分論壇主席介紹。</p><p style="margin-left:0px; margin-right:0px"><strong>2、演講內容</strong></p><p style="margin-left:0px; margin-right:0px">本土開源項目商業化現狀、痛點分析、解決方案建議。</p><p style="margin-left:0px; margin-right:0px; text-align:center">&nbsp;</p><span id="OSC_h4_5"></span><h4><strong>（二）大模型 to B 中的開源和商業探討</strong></h4><p style="margin-left:0px; margin-right:0px; text-align:center"><img height="555" src="https://oscimg.oschina.net/oscnet/up-2e94d9132889077a24cabbca9d2bfc0c616.png" width="497" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px; text-align:center"><strong><span>譚中意</span></strong></p><p style="margin-left:0px; margin-right:0px; text-align:center"><strong>CCF 開源發展委員會，常委</strong></p><p style="margin-left:0px; margin-right:0px"><strong>1、嘉賓介紹</strong></p><p style="margin-left:0px; margin-right:0px">譚中意，第四範式架構師，CCF 開源發展委員會常委， LF AI &amp; Data Generative AI Commons 發起人。</p><p style="margin-left:0px; margin-right:0px"><strong>2、演講內容</strong></p><p style="margin-left:0px; margin-right:0px">本分享探討在大模型 to B 領域內的開源和商業，包括機會和挑戰；重點探討基礎模型玩家的開源和商業，應用開發玩家的開源和商業等。</p><p style="margin-left:0px; margin-right:0px; text-align:center">&nbsp;</p><span id="OSC_h4_6"></span><h4><strong>（三）從開源到 Serverless —— TiDB 商業化演進邏輯</strong></h4><p style="margin-left:0px; margin-right:0px; text-align:center"><img height="460" src="https://oscimg.oschina.net/oscnet/up-688c84dc0f820396e8c0258362ace18bd02.png" width="306" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px; text-align:center"><strong><span>劉松</span></strong></p><p style="margin-left:0px; margin-right:0px; text-align:center"><strong>PingCAP 副總裁</strong></p><p style="margin-left:0px; margin-right:0px"><strong>1、嘉賓介紹</strong></p><p style="margin-left:0px; margin-right:0px">劉松，現任 PingCAP 副總裁，曾經擔任甲骨文大中國區技術戰略部總經理，阿里雲副總裁等職務，曾負責阿里雲的雲計算生態構建，智庫合作，人才培養計劃等工作。</p><p style="margin-left:0px; margin-right:0px">劉松長期活躍於中國軟件產業，親身觀察互聯網與信息化產業融合趨勢，在軟件與互聯網行業發展趨勢，雲計算和開源產業的商業模式構建，數據庫技術發展趨勢，企業數字化轉型等方面多年的實踐經驗。</p><p style="margin-left:0px; margin-right:0px"><strong>2、演講內容</strong></p><p style="margin-left:0px; margin-right:0px">TiDB 是 PingCAP 自主研發、開源的全球領先的分佈式關係數據庫，自 2015 年開源以來，已在全球範圍內得到廣泛應用。TiDB 的商業化歷程始於 2018 年，逐步走向全球化，並於 2022 年發佈 TiDB Cloud 雲數據庫。2023 年，PingCAP 推出了 TiDB Serverless 產品，將開源數據庫的優勢與雲原生技術相結合，為用户提供更簡單、更高效、更具成本效益的使用體驗。本次演講將圍繞 TiDB 的商業化歷程，從開源到雲數據庫，再到 Serverless，深入探討 TiDB 商業化演進的邏輯，以及貫穿始終的技術商業化思考。</p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0px; margin-right:0px; text-align:center">&nbsp;</p><span id="OSC_h4_7"></span><h4><strong><strong>（四）中國開源操作系統商業發展探索</strong></strong></h4><p style="margin-left:0px; margin-right:0px; text-align:center"><img height="459" src="https://oscimg.oschina.net/oscnet/up-5025b005efbe16d416795069b0e0b2a8d85.png" width="320" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px; text-align:center"><strong><span>任紫東</span></strong></p><p style="margin-left:0px; margin-right:0px; text-align:center"><strong>統信軟件解決方案中心，專家</strong></p><p style="margin-left:0px; margin-right:0px"><strong>1、嘉賓介紹</strong></p><p style="margin-left:0px; margin-right:0px">任紫東，統信技術中心資深專家，曾在國際操作系統公司從事操作系統工作近 15 年，曾在統信軟件產研中心，解決方案擔任技術與解決方案推廣工作。對操作系統生態與技術發展趨勢，國產操作系統建設與突破，開源社區運營與發展等方面有較深刻的瞭解，參加了歐拉社區、龍蜥社區、Deepin 開源社區的建設，在桌面操作系統和服務器操作系統商業落地替換領域有豐富經驗。</p><p style="margin-left:0px; margin-right:0px"><strong>2、演講內容</strong></p><p style="margin-left:0px; margin-right:0px">開源社區在 2010 年開始在中國探索，到 2020 年爆發，實現快速增長，期間筆者參與了幾大社區的建設和運營，在社區運營和治理，開放與商業，有諸多觀察和體會，特拋磚引玉，與參會者分享和討論。</p><p style="margin-left:0px; margin-right:0px; text-align:center">&nbsp;</p><span id="OSC_h4_8"></span><h4><strong><strong>（五）白鯨 DataOps 開源矩陣商業化之路</strong></strong></h4><p style="margin-left:0px; margin-right:0px; text-align:center"><img height="460" src="https://oscimg.oschina.net/oscnet/up-62b2d2deb36b74b85fb94410a82ef0786ad.png" width="309" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px; text-align:center"><strong><span>郭煒</span></strong></p><p style="margin-left:0px; margin-right:0px; text-align:center"><strong>白鯨開源 CEO</strong></p><p style="margin-left:0px; margin-right:0px"><strong>1、嘉賓介紹</strong></p><p style="margin-left:0px; margin-right:0px">郭煒，白鯨開源 CEO，Apache 基金會成員，Apache 孵化器導師，ClickHouse 華人社區創始人， Apache Dolphin Scheduler PMC，Apache SeaTunnel 導師。</p><p style="margin-left:0px; margin-right:0px">郭煒先生畢業於北京大學，現任中國通信學會開源技術委員會委員，TGO 鯤鵬會北京分會會長，ApacheCon Asia DataOps 論壇主席，波蘭 DataOps 峯會、北美 Big Data Day 演講嘉賓，虎嘯十年，傑出數字技術人物，中國開源社區最佳 33 人，中國 2021 年開源傑出人物。</p><p style="margin-left:0px; margin-right:0px">郭煒先生曾任易觀 CTO，聯想研究院大數據總監，萬達電商數據部總經理，先後在中金、IBM、Teradata 任大數據方重要職位，對大數據前沿研究做出卓越貢獻。同時郭先生參與多個技術社區工作，比如 Presto、Alluxio、Hbase 等，是國內開源社區領軍人物。</p><p style="margin-left:0px; margin-right:0px"><strong>2、演講內容</strong></p><p style="margin-left:0px; margin-right:0px">白鯨開源是由多名 Apache Software Foundation Member 成立的原生開源公司，維護着 Apache DolphinScheduler 和 Apache SeaTunnel 主要的社區維護者和貢獻者，擁有 2 個頂級 Apache 項目，員工 80% 都是 Apache Committer，共同打造開源原生的 DataOps 產品線，在 1 年內獲得多家頭部券商、保險、銀行行業和全球互聯網的商業客户，本次分享白鯨開源如何打造商業化產品並快速獲得商業化進展，希望給中國開源商業生態盡一份力量。</p><p style="margin-left:0px; margin-right:0px; text-align:center">&nbsp;</p><span id="OSC_h4_9"></span><h4><strong>（六）從開源時序數據庫到工業大數據處理平台——TDengine 的商業化之路</strong></h4><p style="margin-left:0px; margin-right:0px; text-align:center"><img height="456" src="https://oscimg.oschina.net/oscnet/up-8a4ee1bf334af43296eae96f50ce5c67540.png" width="333" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px; text-align:center"><strong><span>李廣</span></strong></p><p style="margin-left:0px; margin-right:0px; text-align:center"><strong>TDengine&nbsp;聯合創始人&nbsp;&amp;&nbsp;商業化&nbsp;VP</strong></p><p style="margin-left:0px; margin-right:0px"><strong>1、嘉賓介紹</strong></p><p style="margin-left:0px; margin-right:0px">李廣，TDengine 聯合創始人 &amp; 商業化 VP，原華為北研所高級工程師/研發部經理/華為運營商 BG 全球行銷資深產品經理/華為全球客户羣系統部部長 /華為公司解決方案 5 級架構師/華為大客户商業交易專業 5 級任職/華為 SDN &amp; NCE 產品商業管理負責人。</p><p style="margin-left:0px; margin-right:0px"><strong>2、演講內容</strong></p><p style="margin-left:0px; margin-right:0px">TDengine 時序數據處理引擎的初心;TDengine 從開源到工業大數據處理平台的變遷邏輯;TDengine 商業化邏輯的本質。</p><p style="margin-left:0px; margin-right:0px">&nbsp;</p><span id="OSC_h4_10"></span><h4><strong>（七）我們為什麼選擇深耕中國不出海</strong></h4><p style="margin-left:0px; margin-right:0px; text-align:center"><img height="457" src="https://oscimg.oschina.net/oscnet/up-37cf5084229f063ad2f468e8fa6cbf92118.png" width="303" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px; text-align:center"><strong><span>李倩</span></strong></p><p style="margin-left:0px; margin-right:0px; text-align:center"><strong>築棧（KodeRover / Zadig）創始人 &amp; CEO</strong></p><p style="margin-left:0px; margin-right:0px"><strong>1、嘉賓介紹</strong></p><p style="margin-left:0px; margin-right:0px">李倩，開源 Zadig 作者，築棧（KodeRover) 創始人兼 CEO；前七牛雲工程總監，阿里雲 MVP，QCon/MSUP/TGO/極客時間/騰訊 PCG/TEG 效能特邀專家，專注在雲原生 CI/CD、DevOps、平台工程架構等大規模軟件研發的基礎工程領域的研究和應用。</p><p style="margin-left:0px; margin-right:0px"><strong>2、演講內容</strong></p><p style="margin-left:0px; margin-right:0px">1. 下個十年，中國 To B 基礎軟件創業的大機遇（大機遇的特點：看不清、找不準、藏的深）。</p><p style="margin-left:0px; margin-right:0px">2. 商業化戰略和戰術。1）戰略：持續創新；2）戰術：接地氣 ——面向頭部和長尾企業的針對性戰術。</p><p style="margin-left:0px; margin-right:0px">3. 戰略性深耕中國。</p><p style="margin-left:0px; margin-right:0px">1）幫助最有生命力的國企/央企/民企的工程師真正把持續創新的國產化軟件用起來，用好；</p><p style="margin-left:0px; margin-right:0px">2）如何適應傳統採購；</p><p style="margin-left:0px; margin-right:0px">3）如何打造適閤中國的基礎軟件產業鏈。</p><p style="margin-left:0px; margin-right:0px">4. 戰術性不出海。</p><p style="margin-left:0px; margin-right:0px">1) 企業形成商業規模化之前，創始人必須做出單一市場的選擇打殲滅戰；</p><p style="margin-left:0px; margin-right:0px">2) 規模化的特質：已經在技術和商業雙維度上佔領市場絕對第一；</p><p style="margin-left:0px; margin-right:0px">3) 單一大市場形成規模化之後，可以考慮出海。</p><p style="margin-left:0px; margin-right:0px">&nbsp;</p><span id="OSC_h4_11"></span><h4><strong>（八）EMQ —— 開源數實融合基礎軟件的商業化</strong></h4><p style="margin-left:0px; margin-right:0px; text-align:center"><img height="434" src="https://oscimg.oschina.net/oscnet/up-b8b7ee75881f56df48b356ae55991504768.png" width="303" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px; text-align:center"><strong><span>金髮華</span></strong></p><p style="margin-left:0px; margin-right:0px; text-align:center"><strong>EMQ 映雲科技聯合創始人兼 CPO</strong></p><p style="margin-left:0px; margin-right:0px"><strong>1、嘉賓介紹</strong></p><p style="margin-left:0px; margin-right:0px">金髮華，EMQ 映雲科技聯合創始人兼 CPO。2018 年，金髮華加入 EMQ，負責公司產品與研發相關工作，LF Edge eKuiper 項目發起者；2016 年創業，成立大規模性能測試平台 xmeter.net，並於 2018 年被 EMQ 收購；在 2016 年之前的 10 年，就職於 IBM 中國開發中心，帶領團隊從事於軟件開發和測試工具、以及 DevOps 工具的研發。</p><p style="margin-left:0px; margin-right:0px"><strong>2、演講內容</strong></p><p style="margin-left:0px; margin-right:0px">EMQ 是一家開源物聯網數據基礎設施軟件供應商，交付全球領先的開源雲原生 MQTT 消息服務器和流處理數據庫，為企業雲/邊/端的海量物聯網數據提供高可靠、高性能的實時連接、移動、處理與集成，助力構建「面向未來」的物聯網平台與應用。本演講將介紹在數實融合大背景下，介紹 EMQ 提供的開源 + 商業化的技術在車聯網、工業、新能源等行業的應用，通過打通運營技術（OT）和信息技術（IT）系統之間的連接，能夠促進各行業的數字化轉型，實現更高效的運營和更智能的決策。</p><p style="margin-left:0px; margin-right:0px; text-align:center">&nbsp;</p><span id="OSC_h4_12"></span><h4><strong>（九）開源與 AI 時代下的投資邏輯</strong></h4><p style="margin-left:0px; margin-right:0px; text-align:center"><img height="445" src="https://oscimg.oschina.net/oscnet/up-b4ae757d240288e6aeb6c347ea7a187b825.png" width="376" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px; text-align:center"><strong><span>江志桐</span></strong></p><p style="margin-left:0px; margin-right:0px; text-align:center"><strong>天際科技投資副總裁</strong></p><p style="margin-left:0px; margin-right:0px"><strong>1、嘉賓介紹</strong></p><p style="margin-left:0px; margin-right:0px">江志桐，天際科技投資副總裁，雲計算、AI 行業負責人，加入天際科技投資前曾在華夏基金 (香港) 私募股權投資部任職。畢業於香港科技大學學士學位，加州伯克利商學院 MBA。</p><p style="margin-left:0px; margin-right:0px"><strong>2、演講內容</strong></p><p style="margin-left:0px; margin-right:0px">開源與 AI 交疊的時代背景下，投資機構的投資邏輯是什麼？天際資本如何預判與佈局？</p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0px; margin-right:0px">&nbsp;</p><span id="OSC_h2_13"></span><h2><span><strong>2023 CCF 中國開源大會</strong></span>（2023 CCF ChinaOSC）</h2><p style="margin-left:0px; margin-right:0px">2023 CCF 中國開源大會擬於<strong>2023 年 10 月 21 日至 22 日</strong>在<strong>湖南省長沙市北辰國際會議中心</strong>召開。大會由中國計算機學會、開放原子開源基金會主辦，CCF 開源發展委員會、湖南先進技術研究院承辦，中國電子信息產業集團有限公司協辦，CSDN 社區特別支持，本屆大會的主題為「開源聯合、聚力共贏」。</p><p style="margin-left:0px; margin-right:0px">本屆大會將組織特邀報告、高峯論壇和領域分論壇等多類型活動。大會將邀請開源及相關領域中國科學院院士、中國工程院院士與知名專家，為大會帶來特邀報告並參加開源高峯論壇等活動。本屆大會作為中國開源領域的年度盛會，誠摯地邀請開源領域學術界、企業界、教育界的學者、從業者、師生等前來參會，共見中國開源新徵程！</p><p style="margin-left:0px; margin-right:0px"><span>大會<strong>報名通道</strong>已開啓，歡迎開源領域學術界、企業界、教育界的學者、從業者、師生等前來參會，共見中國開源新徵程！</span></p><p style="margin-left:0px; margin-right:0px; text-align:center"><strong><span>大會註冊報名二維碼及鏈接：</span></strong></p><p style="margin-left:0px; margin-right:0px; text-align:center"><img height="500" src="https://oscimg.oschina.net/oscnet/up-60e4c511bc6c8aae589705b837bc553c206.png" width="500" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px; text-align:center"><strong><span style="background-color:#ffffff; color:rgba(0, 0, 0, 0.9)">https://chinaosc2023.ccf.org.cn/register</span></strong></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 12 Oct 2023 07:04:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/6852546/blog/10117508</guid>
            <link>https://my.oschina.net/u/6852546/blog/10117508</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[億圖軟件加入 openKylin，助推社區辦公生態繁榮]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#222222; margin-left:0px; margin-right:0px; text-align:justify"><span><span style="color:#000000">近日，深圳市億圖軟件有限公司（以下簡稱「億圖軟件」）簽署 openKylin 社區 CLA（Contributor License Agreement 貢獻者許可協議），正式加入 openKylin 開源社區。</span></span></p><div><p style="text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-716e50f9d07314848b1a3d9d05b3994296a.png" referrerpolicy="no-referrer"></p></div><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">深圳市億圖軟件有限公司成立於 2014 年，自成立以來一直致力於繪圖創意軟件的研究和開發，憑藉多年在圖形可視化領域積累的經驗，億圖已經成為國內外專業的繪圖創意類軟件提供商。其主要產品包括億圖圖示 EdrawMax、億圖腦圖 MindMaster、項目管理軟件 EdrawProj、平面設計軟件菲果、組織架構圖軟件 OrgCharting。</span></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">億圖軟件依託萬興科技集團成熟的產品研發體系，有效保障產品質量，打造出性能可靠、安全穩定的產品和服務方案。億圖圖示、億圖腦圖已獲得國家版權局頒發的軟件著作證書和第三方機構出具的質量測試報告，產品完成度和穩定性均得到良好驗證。</span></span></p><div><p style="text-align:center"><img alt="" height="410" src="https://oscimg.oschina.net/oscnet/up-a599eea407fc47edf19092c1bf68e52ff54.png" width="940" referrerpolicy="no-referrer"></p></div><p style="color:#222222; margin-left:0px; margin-right:0px; text-align:justify"><span><span style="color:#000000">在加入 openKylin 社區後，億圖軟件與 openKylin 完成了億圖圖示和億圖腦圖兩款軟件的適配，並已上架至 openKylin 軟件商店，同時，億圖項目管理軟件也在適配中。後續，億圖軟件也將持續與 openKylin 社區在生態適配、社區活動、技術交流等方面開展合作，共同推動社區生態繁榮。</span></span></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 12 Oct 2023 06:13:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261428</guid>
            <link>https://www.oschina.net/news/261428</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[項目管理軟件 Atlassian 斥資 9.75 億美元收購 Loom]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>總部位於澳大利亞的項目管理軟件提供商 Atlassian 宣佈計劃以近 10 億美元的價格（9.75 億美元）收購位於美國視頻消息平台 Loom。</p><blockquote><p><img src="https://static.oschina.net/uploads/space/2023/1013/120339_F5Rb_2720166.png" referrerpolicy="no-referrer"></p></blockquote><p>兩家公司表示，此次收購將幫助 Atlassian 提高其項目管理工具中的協作能力，並讓用户輕鬆地將視頻工作整合到他們現有的工作流程中。</p><p>在收購之前，Atlassian 是 Loom 企業級視頻平台的一個客户。Loom 的其他知名客户包括亞馬遜、蘋果、高盛和瞻博網絡等。</p><p>總部位於美國舊金山的 Loom 提供了一個異步視頻消息傳遞工具，可幫助用户通過即時共享的視頻進行通信。該公司成立於 2016 年，表示其 20 萬客户每月創建近 500 萬個 Loom 視頻。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-04936b7f95652bdd5174348d632c84c4650.png" referrerpolicy="no-referrer"></p><p>Atlassian 表示，收購完成後 Loom 仍將作為獨立產品提供，並計劃將 Loom 整合到其全套項目管理工具中。</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 12 Oct 2023 04:04:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261584</guid>
            <link>https://www.oschina.net/news/261584</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[AMD 宣佈收購開源公司 Nod.ai]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">AMD 正式<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.amd.com%2Fen%2Fnewsroom%2Fpress-releases%2F2023-10-10-amd-to-acquire-open-source-ai-software-expert-nod-.html" target="_blank">宣佈</a>簽署收購&nbsp;Nod.ai&nbsp;的最終協議，以擴展 AMD 公司的開放式人工智能軟件能力。Nod.ai&nbsp;成立於 2013 年，是一家專門針對高性能硬件優化人工智能軟件的初創公司，其整個團隊都將會在收購後加入 AMD。此次收購的具體財務條款並未披露。</span></p><p><span style="color:#000000">「Nod.ai 的加入將為 AMD 帶來一支經驗豐富的團隊，該團隊已開發出業界領先的軟件技術，可加速部署針對 AMD Instinct 數據中心加速器、Ryzen AI 處理器、EPYC 處理器、Versal SoC 和 Radeon&nbsp; GPU 進行優化的人工智能解決方案。該協議與以開放軟件生態系統為核心的 AMD AI 發展戰略高度一致，通過開發者工具、庫和模型降低了客户的准入門檻。」</span></p><p><img height="292" src="https://oscimg.oschina.net/oscnet/up-319fab720109f98ce2dfe943a39a4ab0a70.png" width="700" referrerpolicy="no-referrer"></p><p><span style="color:#000000">外媒指出，對 Nod.ai 的收購表明，AMD 想在快速增長的人工智能芯片市場中佔據一席之地。據行業分析師稱，到 2032 年，該市場規模將達到 3837 億美元。</span></p><p style="text-align:start"><span><span><span><span><span><span style="color:#1a202c"><span><span><span><span><span><span><span><span><span><span><span><span><span><span>AMD 人工智能事業部高級副總裁 Vamsi Boppana 表示，此次收購預計將顯着增強 AMD 為 AI 客户提供開放軟件的能力，使他們能夠輕鬆部署針對 AMD 硬件調整的高性能 AI 模型。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span style="color:#1a202c"><span><span><span><span><span><span><span><span><span><span><span><span><span><span>「收購 Nod.ai 預計將顯着增強我們為人工智能客户提供開放軟件的能力，使他們能夠輕鬆部署針對 AMD 硬件調整的高性能人工智能模型。」</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:start"><span><span><span><span><span><span style="color:#1a202c"><span><span><span><span><span><span><span><span><span><span><span><span><span><span>除了技術之外，AMD 還表示希望利用 Nod.ai 的工程人才來提高其在開源社區和開源開發者羣體內的信譽。Nod.ai 是許多研究人員使用的 SHARK 和 Torch-MLIR 等人工智能軟件庫的主要貢獻方。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:start"><span><span><span><span><span><span style="color:#1a202c"><span><span><span><span><span><span><span><span><span><span><span><span><span><span>近年來，AMD 一直在大力投資人工智能技術，如 CDNA、XDNA、RDNA 和 Zen 架構，以便在快速增長的人工智能市場上與 Nvidia 和英特爾等競爭對手展開競爭。相關行業報告指出，到 2032 年，全球人工智能市場規模預計將達到約 5940 億美元。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 12 Oct 2023 03:47:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261416/amd-to-acquire-open-source-nod-ai</guid>
            <link>https://www.oschina.net/news/261416/amd-to-acquire-open-source-nod-ai</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[2026 年將有 80% 的企業將採用 GenAI，增長 16 倍]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">Gartner 最新發布的一份</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.gartner.com%2Fen%2Fnewsroom%2Fpress-releases%2F2023-10-11-gartner-says-more-than-80-percent-of-enterprises-will-have-used-generative-ai-apis-or-deployed-generative-ai-enabled-applications-by-2026" target="_blank">報告</a><span style="color:#000000">指出，<span style="background-color:#ffffff">預測到 2026 年，超過 80% 的企業將使用生成式人工智能 (GenAI) 應用程序編程接口 (API) 或模型，和/或在生產環境中部署支持 GenAI 的應用程序。而在 2023 年，這一比例還不到 5%；這</span>意味着在短短三年內，採用或創建生成式 AI 模型的企業數量將增長 16 倍。</span></p><p><span style="color:#000000">Gartner 傑出副總裁分析師 Arun Chandrasekaran 稱，「生成式 AI 已成為企業管理層的首要任務，並引發了基礎模型之外的新工具的巨大創新。<span style="background-color:#ffffff">醫療保健、生命科學、法律、金融服務和公共部門等許多行業對生成式人工智能的需求正在不斷增加。</span>」</span></p><p><span style="color:#000000">該公司預計將在未來十年對組織產生巨大影響的<span style="background-color:#ffffff">三項創新</span>包括：</span><span style="background-color:#ffffff; color:#000000">支持 GenAI 的應用程序，基礎模型以及 AI 信任、風險和安全管理 (AI TRiSM)</span><span style="color:#000000">。</span></p><p><span style="color:#000000"><img alt="" height="312" src="https://oscimg.oschina.net/oscnet/up-121558672e450fdd70a9ec035bdf56bf188.png" width="500" referrerpolicy="no-referrer"></span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000">支持 GenAI 的應用程序使用&nbsp;GenAI 來實現用户體驗 (UX) 和任務增強，以加速和協助完成用户期望的結果。組織可以採用這些應用程序來促進員工的內部工作或為客户提供體驗，從而改善他們的服務和客户體驗。</span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000">Chandrasekaran 在報告中表示：「當今 GenAI 嵌入式功能最常見的模式是文本到 X，它通過使用自然語言進行快速工程，使工作人員能夠民主地完成過去的專門任務。<span style="background-color:#ffffff">然而，這些應用程序仍然存在諸如幻覺和不準確等障礙，可能會限制廣泛的影響和採用。</span>」&nbsp;</span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000">基礎模型是指生成式 AI 應用程序的機器學習模型，例如&nbsp;GPT&nbsp;與 ChatGPT 的關係。&nbsp;這些基礎模型經過大量數據的訓練，用於支持可以完成各種任務的不同應用程序。</span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000">基礎模型正處於技術成熟度曲線上預期膨脹的頂峯。Gartner 預測，到 2027 年，基礎模型將支撐 60% 的自然語言處理 (NLP) 用例，相較 2021 年的不到 5% 實現了大幅增長。</span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000">AI TRiSM 是指能夠解決生成式 AI 模型相關問題並確保其成功部署的一組解決方案。&nbsp;<span style="background-color:#ffffff">AI TRiSM 確保 AI 模型治理、可信性、公平性、可靠性、穩健性、有效性和數據保護。AI TRiSM 包括模型可解釋性和可解釋性、數據和內容異常檢測、AI 數據保護、模型操作和對抗攻擊抵抗的解決方案和技術。</span></span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000">AI TRiSM 是提供負責任的人工智能的重要框架，Gartner 預計其將在兩到五年內獲得主流採用。到 2026 年，將 AI 透明度、信任和安全性付諸實施的組織，其 AI 模型在採用率、業務目標和用户接受度方面將提高 50%。</span></p><p><span style="color:#000000">更多詳情可</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.gartner.com%2Fen%2Fnewsroom%2Fpress-releases%2F2023-10-11-gartner-says-more-than-80-percent-of-enterprises-will-have-used-generative-ai-apis-or-deployed-generative-ai-enabled-applications-by-2026" target="_blank">查看官方公告</a><span style="color:#000000">。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 12 Oct 2023 03:32:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261579/80-of-enterprises-generative-ai-2026</guid>
            <link>https://www.oschina.net/news/261579/80-of-enterprises-generative-ai-2026</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Ubuntu 23.10 發版插曲：因包含仇恨言論，ISO 鏡像被緊急「召回」]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Ubuntu 23.10 正式版今天發佈不久後，其桌面安裝程序 UI 的一組特定翻譯中<strong>被發現來自惡意貢獻者的仇恨言論</strong>。</p><blockquote><p><img alt="" src="https://static.oschina.net/uploads/space/2023/1013/110402_tO2M_2720166.png" referrerpolicy="no-referrer"></p></blockquote><p><em>via&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftwitter.com%2Fubuntu%2Fstatus%2F1712593893319930079" target="_blank">https://twitter.com/ubuntu/status/1712593893319930079</a></em></p><p>Canonical 官方知釋後立馬<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdiscourse.ubuntu.com%2Ft%2Fannouncement-ubuntu-desktop-23-10-release-image-is-being-updated-to-resolve-a-malicious-translation-incident%2F39365" target="_blank">「召回」</a>已發佈的 ISO 鏡像，並表示待修正完成後再上架新的鏡像。被刪除的受影響鏡像包括 <strong>Ubuntu Desktop 23.10、Ubuntu Budgie 23.10 和 Ubuntu Desktop 每日構建</strong>。</p><p><img src="https://static.oschina.net/uploads/space/2023/1013/113359_1piA_2720166.png" referrerpolicy="no-referrer"></p><p>官方表示，此事件僅影響桌面安裝程序中的一組翻譯，系統和數據不會受到影響。如果是從舊版本升級到 Ubuntu 23.10，沒有采用全新安裝，同樣不會受到影響。</p><hr><p>關於仇恨言論的具體內容，omgubuntu <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.omgubuntu.co.uk%2F2023%2F10%2Fubuntu-23-10-installer-translations-hijack" target="_blank">的報道</a>做了如下描述。整體感受就是看完之後只想求一雙沒看過的眼睛。</p><p><img height="615" src="https://static.oschina.net/uploads/space/2023/1013/132550_KgmV_2720166.png" width="1222" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 12 Oct 2023 03:29:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261578/ubuntu-23-10-recalled</guid>
            <link>https://www.oschina.net/news/261578/ubuntu-23-10-recalled</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Wordpress.com 已支持 ActivityPub 協議]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>WordPress.com <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwordpress.com%2Fblog%2F2023%2F10%2F11%2Factivitypub%2F" target="_blank">發佈公告稱</a>已支持 ActivityPub 協議——正式連接「聯邦宇宙」 (fediverse)。</p><blockquote><p>聯邦宇宙由像 Mastodon 這樣的聯合平台組成，這些平台是由獨立網站或服務器組成的網絡，這些網站或服務器可以相互通信，同時仍然單獨運行。</p><p>這很像電子郵件，用户可以向擁有不同服務（例如 Gmail、Yahoo 等）帳户的用户發送電子郵件，但所有這些都可以無縫交互。同樣，聯合平台使用户能夠在統一網絡中跨不同服務關注、共享內容並與之交互。</p></blockquote><p>ActivityPub 是開源、去中心化的社交網絡協議，目前被 Mastodon、Pixelfed 和串流服務 PeerTube 等應用使用。它提供了一個客户端到服務器的 API 用於<strong>創建、更新和刪除內容</strong>，以及一個<strong>聯邦制的服務器到服務器 API</strong>用於<strong>傳遞通知和訂閲內容</strong>。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-1545cdc089c2b02c28421e95ec08dc9554e.png" referrerpolicy="no-referrer"></p><p>▲ ActivityPub 運行原理</p><p>半年前，WordPress 母公司已經收購了 WordPress 插件&nbsp;<a href="https://www.oschina.net/news/232623/automattic-acquires-activitypub" target="_blank">ActivityPub </a>，它用於博客與許多聯合平台（包括 Mastodon、Pleroma、Friendica 等）之間的無縫集成。該插件使博客讀者能夠在這些平台上關注博主文章。</p><p><img src="https://oscimg.oschina.net/oscnet/up-043b7e29824014e389a49fff34ba108e388.png" referrerpolicy="no-referrer"></p><p><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwordpress.com%2Fblog%2F2023%2F10%2F11%2Factivitypub%2F" target="_blank">點此查看在 Wordpress.com 使用 ActivityPub 的具體教程</a></strong>。</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 12 Oct 2023 03:29:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261413/wordpress-activitypub</guid>
            <link>https://www.oschina.net/news/261413/wordpress-activitypub</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[更穩定高效、更廣泛兼容，openKylin Wayland SIG 成功研發 wlcom 合成器]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="margin-left:0; margin-right:0"><strong>近日，openKylin 社區 Wayland SIG 成功研發了基於 wayland 協議的合成器 Kylin wayland-compositor（簡稱 wlcom），實現了操作系統圖形棧底層核心子系統的進一步突破。</strong></p><p style="text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-6de842b2f992f25b078f771458805b5ab4f.png" referrerpolicy="no-referrer"></p><p><span>圖形顯示系統是人機交互的核心模塊，目前廣泛使用的 X-Window(也常稱為 X 或 X11) 顯示系統，最初由麻省理工學院 1984 年研發，歷經近 40 年的修補與擴展，代碼量龐大，維護困難，設計也已略顯「陳舊」。</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span>X 顯示系統中窗管與合成器是兩個獨立組件，通信開銷大，且存在窗口內容與合成器不同步的問題，容易造成圖像撕裂；X 客户端可篡改其他 X 客户端窗口屬性及顯示內容，安全性不強；合成管理器必須主動向 X 顯示服務獲取所有客户端圖像數據進行圖像合成，導致圖像顯示延遲風險增加。</span></p><p style="text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-b1bc0c4843a031812f77b3b19a1435688d9.jpg" referrerpolicy="no-referrer"></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span>針對 X 中的上述缺陷，開源社區於 2008 提出了替代方案—wayland 顯示服務器協議。該協議下，wayland 合成器與 wayland 顯示服務合為一個整體組件，通信開銷低；客户端之間的輸入和輸出隔離，提高了客户端的安全性；客户端頁面刷新時，合成器只處理數據有更新的區域，提高了顯示合成效率。</span></p><p style="margin-left:0; margin-right:0"><span>鑑於 wayland 相對 X 的巨大優勢，目前國際通用 linux 發行版本已經把 wayland 合成器作為默認的顯示服務器。但目前社區開源 wayland 合成器在兼容性及穩定性方面存在不足。一方面大多數基於 X 協議編寫的遊戲、圖形密集型等專業應用程序在 wayland 環境上兼容性較差，同時 wayland 各桌面環境定義了大量的私有協議，協議擴展難；另外，雖然 wayland 項目已經進行了十餘年，在使用上仍然不夠穩定，存在各種問題。</span></p><p style="margin-left:0; margin-right:0"><span>為解決上述問題，openKylin 社區 Wayland SIG 基於 wlroots 研發了 wayland 合成器—wlcom，其整體框架如下圖所示：</span></p><p style="margin-left:0; margin-right:0; text-align:center"><img alt="" height="1436" src="https://oscimg.oschina.net/oscnet/up-da45eed01db37e0cbf10899b2f3466d440a.jpg" width="2012" referrerpolicy="no-referrer"></p><p><span><span>目前，wlcom 已基本完成與 UKUI 核心組件融合，適配兼容主流媒體類、社交類、辦公類等 X 應用。關於 wlcom 更多細節，敬請關注 openKylin 公眾號。</span></span></p><p><strong>關於 Wayland SIG</strong></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span>openKylin Wayland SIG 小組由麒麟軟件有限公司發起成立，致力於新一代圖形顯示服務器相關技術研究，包括 wayland 合成器、X 兼容等，提供 wayland 相關軟件包的技術規劃、設計、開發、維護和升級服務，共同推動新一代圖形服務器技術發展及落地。</span></p><ul><li><p style="margin-left:0; margin-right:0; text-align:justify"><span style="color:#000000">郵件列表：</span></p><p style="margin-left:0; margin-right:0; text-align:justify"><span style="color:#0052ff">wayland@lists.openkylin.top</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span style="color:#000000">SIG 主頁：</span></p><p style="margin-left:0; margin-right:0; text-align:justify"><span style="color:#0052ff">https://gitee.com/openkylin/community/tree/master/sig/Wayland</span></p></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Thu, 12 Oct 2023 01:56:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261552</guid>
            <link>https://www.oschina.net/news/261552</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[KCL 社區開源雙週報 | 更多 Kubernetes 模型和 IDE 插件功能支持!]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><img alt="" src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/751c1f01c30049ae95a0ed823adca32b~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1127&amp;h=435&amp;s=19510&amp;e=png&amp;a=1&amp;b=cee5bf" referrerpolicy="no-referrer"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkcl-lang" target="_blank">KCL</a> 是一個開源的基於約束的記錄及函數語言並通過成熟的編程語言技術和實踐來改進對大量繁雜配置比如雲原生 Kubernetes 配置場景的編寫，致力於構建圍繞配置的更好的模塊化、擴展性和穩定性，更簡單的邏輯編寫，以及更簡單的自動化和生態工具集成。</p><p>本欄目將會雙週更新 KCL 語言社區最新動態，包括功能、官網更新和最新的社區動態等，幫助大家更好地瞭解 KCL 社區！</p><p><em><strong>KCL 官網：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fkcl-lang.io%2F" target="_blank">https://kcl-lang.io</a></strong></em></p><h2>內容概述</h2><p>感謝所有貢獻者過去兩週 (2023 09.07 - 10.11) 的傑出工作，以下是重點合併內容概述</p><p><strong>🔧 語言及工具鏈更新</strong></p><ul><li>KCL v0.6.0 於 9.15 發佈，更新內容包括語言、工具鏈、社區集成，詳細內容請查看 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2Ff6RCZqxS2iliRGIz0036yA" target="_blank">https://mp.weixin.qq.com/s/f6RCZqxS2iliRGIz0036yA</a></li><li>KCL IDE 更新 - 支持對標準庫和內置函數的懸停提示，支持對 KCL 代碼錯誤的快速修復；發佈適配 Intellij IDEA 2023.2 的插件版本</li><li>KCL 包管理工具 KPM 更新 - kpm run 支持編譯 KCL 文件，並集成了導入工具</li><li>KCL 文檔工具更新 - 支持將 docstring Examples 章節輸出到文檔</li><li>KCL 語言更新 - 優化了一些錯誤信息的輸出，部分的錯誤信息中增加了修復建議</li></ul><p><strong>📰 官網和用例更新</strong></p><ul><li>KCL 官網新增 v0.6.0 文檔版本</li><li>KCL 模型新增容器、服務和 Pod Security Policy (PSP) 相關的配置編輯、校驗 20 個 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkcl-lang%2Fkrm-kcl%2Ftree%2Fmain%2Fexamples" target="_blank">https://github.com/kcl-lang/krm-kcl/tree/main/examples</a></li></ul><h2>特別鳴謝</h2><p>以下排名不分先後</p><ul><li>感謝 @jakezhu9 對 KCL Import 工具 Terraform Schema 到 KCL Schema 轉換的貢獻 🙌 <em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkcl-lang%2Fkcl-go%2Fpull%2F152" target="_blank">https://github.com/kcl-lang/kcl-go/pull/152</a></em></li><li>感謝 @jakezhu9 對 kpm 集成 Import 工具的貢獻 🙌 <em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkcl-lang%2Fkpm%2Fpull%2F194" target="_blank">https://github.com/kcl-lang/kpm/pull/194</a></em></li><li>感謝 @zwpaper 對 KCL 文檔和 Tree Sitter Grammar 做出的貢獻 🙌 <em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkcl-lang%2Ftree-sitter-kcl%2Fpull%2F1" target="_blank">https://github.com/kcl-lang/tree-sitter-kcl/pull/1</a></em> 等</li><li>感謝 @mrgleeco, @ghpu, @steeling, @prahaladramji, @zwpaper 等在使用 KCL 及工具鏈過程中提出的寶貴反饋和討論 🙌</li></ul><h2>精選更新</h2><h3>KCL IDE 插件更新</h3><p>在最近的 0.6.0 發佈中，KCL IDE 插件增加了標準庫和 builtin 函數的懸停提示，新增支持對 KCL 代碼錯誤的快速修復。此外，還增加了 language Server 側的 e2e 測試及 konfig 倉庫的集成測試，以保障 IDE 插件的穩定迭代。在尚未發佈的版本中，還新增了 <code>kcl-language-server version</code> 子命令以輸出版本信息。歡迎升級、使用 —— KCL 在各個 IDE 平台的插件安裝方式請查看<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fkcl-lang.io%2Fdocs%2Fuser_docs%2Fgetting-started%2Finstall%2F%232-install-kcl-ide-extension" target="_blank">https://kcl-lang.io/docs/user_docs/getting-started/install/#2-install-kcl-ide-extension</a></p><p>&nbsp;</p><h4>IntelliJ 插件</h4><ul><li>IntelliJ 插件現已適配 2023.2+ 版本，您可以在下面的鏈接中下載安裝：</li></ul><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkcl-lang%2Fintellij-kcl%2Freleases" target="_blank">https://github.com/kcl-lang/intellij-kcl/releases</a></p><h3>KCL 包管理工具</h3><p>kpm run 支持編譯 KCL 文件，並集成了導入工具，同時增加了 —quiet 來屏蔽輸出日誌。</p><p><img alt="" src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/531a6725e8f740229e9337fccf6933d3~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1136&amp;h=816&amp;s=91588&amp;e=png&amp;b=faf9f9" referrerpolicy="no-referrer"></p><h3>KCL 語言更新</h3><p>在尚未發佈的版本中，KCL 的編譯命令優化了一些錯誤信息的輸出，部分的錯誤信息中增加了修復建議： <img alt="" src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9bf254b8f62241fc877c8bb4ffba9807~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1642&amp;h=190&amp;s=99725&amp;e=png&amp;b=fefefe" referrerpolicy="no-referrer"></p><h3>KCL 模型更新</h3><p>近幾周內，我們提供了更多針對容器、服務和 Pod Security Policy (PSP) 配置編輯及校驗的使用案例。您可參照對應的示例引入以上配置和校驗： <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkcl-lang%2Fkrm-kcl%2Ftree%2Fmain%2Fexamples" target="_blank">https://github.com/kcl-lang/krm-kcl/tree/main/examples</a></p><p>下面我們以 Kubectl KCL 插件和 disallow-svc-lb 模型進行説明，disallow-svc-lb 的作用是對 Service 資源進行校驗，不允許 Service 資源的類型設置為 <code>LoadBalancer</code>，編寫如下 YAML 文件 (manifests.yaml)：</p><pre><code>apiVersion: krm.kcl.dev/v1alpha1
kind: KCLRun
metadata:
  name: disallow-svc-lb
  annotations: 
    krm.kcl.dev/version: 0.0.1
    krm.kcl.dev/type: validation
    documentation: &gt;-
      A validation that prevents the creation of Service resources of type `LoadBalancer`
spec:
  source: oci://ghcr.io/kcl-lang/disallow-svc-lb
---
apiVersion: v1
kind: Service
metadata:
  name: my-service
spec:
  selector:
    app.kubernetes.io/name: MyApp
  ports:
    - name: http
      protocol: TCP
      port: 80
  type: LoadBalancer # 錯誤地設置了 LoadBalancer
</code></pre><p>通過 Kubectl KCL 工具在客户端進行資源驗證：</p><pre><code>kubectl kcl apply -f manifests.yaml
</code></pre><p>我們會得到如下結果：</p><pre><code>A validation that prevents the creation of Service resources of type `LoadBalancer`, for Service: my-service
</code></pre><h3>社區動態</h3><p>集成了 KCL 0.6 的 KusionStack 發佈 0.9 版本，詳細更新內容請查看：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FnZOHdmgcfOMRf0XUXfSJ-g" target="_blank">https://mp.weixin.qq.com/s/nZOHdmgcfOMRf0XUXfSJ-g</a></p><h3>活動預告</h3><h4>KCD 杭州站 10.21 日線下活動</h4><p>Kubernetes Community Days（KCD）杭州站將於 10.21 舉行線下活動，活動詳情及報名：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FrnNhmT4yoO66bGYNtFtG6g" target="_blank">https://mp.weixin.qq.com/s/rnNhmT4yoO66bGYNtFtG6g</a></p><h4>KCL 開源雙週會</h4><p>近期 KCL 開源雙週會將於 10.12 進行，歡迎社區小夥伴踴躍參與、交流：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkcl-lang%2Fcommunity%2Fdiscussions%2F8" target="_blank">https://github.com/kcl-lang/community/discussions/8</a></p><p>點擊鏈接入會，或添加至會議列表： <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmeeting.tencent.com%2Fdm%2FHc6sNpqTWnPb" target="_blank">https://meeting.tencent.com/dm/Hc6sNpqTWnPb</a></p><p>#騰訊會議：778-2381-6338</p><p>複製該信息，打開手機騰訊會議即可參與</p><h2>其他資源</h2><p>❤️ 感謝所有 KCL 用户和社區小夥伴在社區中提出的寶貴反饋與建議。預計 11 月底我們會正式發佈 KCL v0.7 新版本，敬請期待!</p><p>更多其他資源請參考：</p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fkcl-lang.io%2F" target="_blank">KCL 網站</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fkusionstack.io%2F" target="_blank">KusionStack 網站</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fkcl-lang.io%2Fdocs%2Fcommunity%2Frelease-policy%2Froadmap" target="_blank">KCL 2023 路線規劃</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkcl-lang%2Fkcl%2Fmilestone%2F7" target="_blank">KCL v0.7.0 Milestone</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkcl-lang%2Fkcl%2Fissues" target="_blank">KCL Github Issues</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Forgs%2Fkcl-lang%2Fdiscussions" target="_blank">KCL Github Discussion</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkcl-lang%2Fcommunity" target="_blank">KCL Community</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Wed, 11 Oct 2023 12:38:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261492</guid>
            <link>https://www.oschina.net/news/261492</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[GreptimeDB v0.4 重大更新 — 新版引擎 Mito2 專為時序數據而生]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h2>引言</h2><p>從去年 11 月 GreptimeDB 首次上線開源以來，Greptime 團隊經過一輪又一輪的持續迭代，從 v0.1 的初步架構完成，到 v0.2 兼容了 PromQL 的單機版本，再到 v0.3 增加了分佈式的能力。</p><p>v0.3 功能層面已經相對穩定，包括了單機版，分佈式，PromQL 兼容性以及對不同接入協議的支持，很多用户開始嘗試，我們也收到了大量的反饋和建議，同時，我們也在 GreptimeCloud 項目裏面吃自己狗糧，底層完全依託於 v0.3，不斷地把需求回吐給 DB 團隊。</p><p>其中呼聲最大的便是查詢性能問題，坦率的講，v0.3 版本雖然功能穩定，寫入性能也滿足需求，但在查詢性能上依然有很大的提升空間，還不足以應對大規模的數據查詢分析。v0.4 為瞭解決這個問題，對存儲查詢引擎 Mito 做了一次重大升級，幾乎是重寫了一遍，而圍繞引擎相關的組件也隨之重構，最後通過 TSBS 測試套件實測提升了平均有 6 倍，具體可以參考文末的測試報告（PS: 可能熟悉車的朋友會覺得 Mito 比較眼熟，沒錯，是來自於 Alfa Romeo MiTo，誰讓公司有三位 Alfa Romeo 車主呢）。</p><p>在充分測試的保障下，今天，我們終於可以激動地宣佈：<strong>GreptimeDB v0.4 正式發佈，和以往版本不同，v0.4 版本的發佈標誌着 GreptimeDB 已基本做好踏入生產環境的準備，更意味着一段新的探索與挑戰即將啓程！</strong></p><p>總結來説，此次新版本更新主要在以下幾個方面：</p><ul><li><strong>性能優化</strong>：重新設計的新版引擎 Mito2；</li><li><strong>穩定性優化</strong>：CREATE, DROP, ALTER 等 DDL 統一單機和分佈式實現並引入 Procedure 框架保證最終一致性；</li><li><strong>體驗優化</strong>：支持 Vector/OpenTelemetry 等。</li></ul><p>從 v0.3 到 v0.4，Greptime 團隊主要項目中，共有來自 <strong>6 個國家和地區的 42 位貢獻者，累計合併了 726 個 PRs，涉及到 7659 個文件修改，包含了 271 個功能優化，163 個修復，107 個重構以及大量測試</strong>。同時，伴隨着版本的更新，使用文檔和技術文檔也已更新至最新。另外，我們還發布了 C++, Erlang 和 JS SDK， 官方目前已經支持了 Golang/Java/Rust/C++/Erlang/JS 6 種語言。社區方面，我們也迎來了一位新的 Committer: @ <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNiwakaDev" target="_blank">Niwaka</a>。</p><h2>GreptimeDB v0.4 重點內容</h2><ul><li><p><strong>查詢存儲性能</strong></p><ul><li>完全重新設計了新版引擎 Mito2，專門針對時間序列數據進行了優化，實測性能比 v0.3 提升 5-20 多倍不等；</li><li>受 Cassandra 啓發，支持了 TWCS（Time Window Compaction Strategy）壓縮策略；</li><li>支持了新的對象存儲 Google Cloud Storage。</li></ul></li><li><p><strong>穩定性和可靠性</strong></p><ul><li>豐富 sqlness 測試場景；</li><li>依託於混沌測試 Case 的不斷完善，v0.4 版本將具備更可靠的分佈式健壯性；</li><li>基於 Procedure 框架實現 Create/Alter/Drop Table 等 DDL 操作並統一單機和分佈式實現；</li><li>重構了整個分佈式架構，優化心跳協議，使得分佈式版本運行更加穩定。</li></ul></li><li><p><strong>體驗優化</strong></p><ul><li>新增支持 range select，支持與普通函數嵌套使用；</li><li>全新的 Dashboard；</li><li>優化 DESC TABLE 體驗；</li><li>支持 Apache ORC 格式的外部表；</li><li>支持用户友好的 gRPC 行格式寫入協議。</li></ul></li><li><p><strong>集成與其他</strong></p><ul><li>Vector 增加 GreptimeDB metrics 的輸出支持；</li><li>支持使用 KubeBlocks 啓動 GreptimeDB 集羣；</li><li>集成 EMQX；</li><li>支持 CentOS；</li><li>發佈 JS/Erlang/C++ 官方客户端。</li></ul></li></ul><h2>GreptimeDB v0.4 性能測試</h2><p>GreptimeDB 是基於 TSBS 進行了性能測試。TSBS（Time Series Benchmark Suite）是以 Go 為主語言的一套程序，用於生成時序數據集並對讀寫性能進行基準測試。最初由老牌時序數據庫廠商 InfluxDB 工程師發佈，並不斷由 TimescaleDB 團隊進行改進。該套件是可擴展的，可以包含不同類型的數據和查詢類型，並在系統之間進行比較。GreptimeDB 在套件基礎上做了對應的擴展，具體項目地址: <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FGreptimeTeam%2Ftsbs%2F" target="_blank">https://github.com/GreptimeTeam/tsbs/</a></p><h3>測試硬件和數據準備</h3><h4>硬件環境</h4><p><img src="https://oscimg.oschina.net/oscnet/up-26f7b9c09596e41415f23cbe9fe38b50321.png" alt="" referrerpolicy="no-referrer"></p><h4>測試數據 (基於 TSBS)</h4><p><img src="https://oscimg.oschina.net/oscnet/up-212b9c4d620e0f2782ccfaa50765b6aaacb.png" alt="" referrerpolicy="no-referrer"></p><p>啓動配置（默認配置，僅修改數據目錄）</p><pre><code class="language-protobuf">[storage]
data_home = "/var/greptimedb/"
</code></pre><p>測試結果 (與 v0.3.2 對比，數值越小越好) <img src="https://oscimg.oschina.net/oscnet/up-f7143a1d8eec97992dcef82c3b6bb1417b3.png" alt="" referrerpolicy="no-referrer"></p><p><img src="https://oscimg.oschina.net/oscnet/up-6b3abf6a8b5a386341fd842ece66818dc6d.png" alt="" referrerpolicy="no-referrer"></p><p><img src="https://oscimg.oschina.net/oscnet/up-da52a25b5c06783401388180af4c3926e6c.png" alt="" referrerpolicy="no-referrer"></p><h2>升級提示</h2><p>為了進行徹底地優化，不受歷史包袱幹擾 0.3 -&gt; 0.4 有一些 breaking change，需要停機升級。為此我們提供了升級工具，稍晚會在官方文檔中加入升級手冊，大致步驟如下：</p><ol><li>創建一個新的 0.4 集羣；</li><li>關閉舊集羣流量入口（停寫）；</li><li>通過 CLI 升級工具導出數據；</li><li>導入數據到新集羣；</li><li>入口流量切換到 0.4 新集羣。</li></ol><h2>GreptimeDB 未來展望</h2><p>GreptimeDB 不斷追求的核心目標仍然是建立一個具備彈性的 ServerlessDB 架構。同時我們意識到未來的趨勢在於數據庫的自治化，我們會逐步在數據庫自治方面投入更多，結合智能化的調度技術，逐步實現時序數據庫的安全自動駕駛。</p><h2>致謝社區</h2><p>感謝每一位關注 GreptimeDB、給 GreptimeDB 提建議甚至提交代碼的朋友，是你們的支持讓我們前進得更堅定。GreptimeDB 是一個基於 Rust 的數據庫項目，無論你是在學習 Rust 語言想要尋找項目上手的同學，還是已經有一定經驗的技術大牛，甚至是希望對開源社區有所貢獻的非技術同學，你一定能在 GreptimeDB 找到適合你的貢獻方式，成為我們的貢獻者，和來自全世界各地的其他社區貢獻者一起交流最新技術。悄悄説一句，成為貢獻者能收到 Greptime 限量精美周邊禮品哦~</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 11 Oct 2023 10:25:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/6839317/blog/10116982</guid>
            <link>https://my.oschina.net/u/6839317/blog/10116982</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[中興通訊「星雲研發大模型」：AI 編程助手、1000 億 token]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>2023 年 10 月 11 日-13 日，在中國移動全球合作伙伴大會舉辦期間，中興通訊「星雲研發大模型」亮相，<strong>旨在輔助開發人員進行需求分析、產品設計、編程、測試、版本部署等</strong>。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-0ea8f6611738c94f383a5186925f9339ae3.png" referrerpolicy="no-referrer"></p><p>據介紹，<strong>「星雲研發大模型」支持白名單機制有效控制使用範圍</strong>，以及代碼特徵值識別有效識別敏感代碼片段、敏感詞識別機制可實時監測並攔截敏感內容，還有後台審計機制可完整回溯安全事件等。</p><p>中興通訊表示，2023 年 4 月，「星雲研發大模型」使用啓動，截至目前，<strong>日活人數達 1.2 萬人，&nbsp;代碼採納率達 40%~45%，編碼提效 30%，整體研發提效 10%</strong>。</p><p>中興通訊將領域數據、Know-How 知識積累、數十萬篇通信領域技術文檔和<strong>1000 億 token</strong>的無線 / 核心網 / 雲代碼語料等注入大模型，進行增量預訓練，使用並行訓練框架。</p><p>中興通訊稱：「自研部署方案使用動態 batch 策略、PagedAttention 技術，結合無損模型量化，吞吐量大幅提升，<strong>單 GPU（A800）達到 1500tokens / s，僅使用 4 張 GPU 卡（A800）可滿足超千人使用需求</strong>。對比業界常規的部署方案，單 GPU 吞吐量分別提升 10 + 倍和 20 + 倍；結合 int4 量化技術，在模型精度不下降情況下，模型大小和顯存使用量均下降一半。」</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 11 Oct 2023 09:48:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261477</guid>
            <link>https://www.oschina.net/news/261477</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[開源中國發布大模型技術圖譜（LLM Tech Map）]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>LLM 技術圖譜 (LLM Tech Map) 是將 LLM 相關技術進行系統化和圖形化的呈現，此圖譜主要特點是「<strong>專注於技術人視角</strong>」，不求從 LLM 產業角度匯聚信息，而是希望讓從事相關工作或是想了解 LLM 的技術人有一個快速感知。</p><p><span style="color:#e67e22"><strong>核心價值：幫助技術人快速瞭解 LLM 的核心技術和關鍵方向。</strong></span></p><p style="text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-89419d5edbf373da239902e38c150921bc4.png" referrerpolicy="no-referrer"></p><p>LLM 技術圖譜（LLM Tech Map）從<strong>基礎設施</strong>、<strong>大模型</strong>、<strong>Agent</strong>、<strong>AI 編程</strong>、<strong>工具和平台</strong>，以及<strong>算力</strong>幾個方面，為開發者整理了當前 LLM 中最為熱門和硬核的技術領域以及相關的軟件產品和開源項目。</p><hr><h3>基礎設施</h3><p>LLM 技術圖譜（LLM Tech Map）的基礎設施部分主要包括以下幾個方面：</p><ul><li>向量數據庫：向量數據庫是專門用於存儲和檢索向量數據的數據庫，它可以為 LLM 提供高效的存儲和檢索能力。</li><li>數據庫向量支持：傳統數據庫通常不支持向量數據的存儲和檢索，數據庫向量支持可以為傳統數據庫添加向量數據的存儲和檢索能力。</li><li>大模型框架、微調 (Fine Tuning)：針對大模型的開發。</li><li>大模型訓練平台與工具</li></ul><h3>大模型</h3><p>LLM 技術圖譜（LLM Tech Map）的大模型部分主要包括以下幾個方面：</p><ul><li>備案上線的中國大模型：有牌照提供服務的大模型，需要注意的是大模型和相應的產品多半名稱不同。</li><li>知名大模型：在全球範圍內，已經發布了多款知名大模型，這些大模型在各個領域都取得了突破性的進展。</li><li>知名大模型應用：LLM 已經在多種應用場景中得到了應用，包括文本生成、機器翻譯、問答、自然語言推理等。</li></ul><h3>AI Agent（LLM Agent）</h3><p>LLM Agent 是指基於 LLM 技術構建的智能代理，它可以用於各種任務，比如讓機器與 ChatGPT 交互，一層一層挖掘信息，自動化完成任務；比如由機器人構成的虛擬小鎮。</p><h3>AI 編程</h3><p>讓 LLM 幫你編寫代碼。</p><h3>工具和平台</h3><p>LLM 技術圖譜（LLM Tech Map）的工具和平台部分主要包括以下幾個方面：</p><ul><li>LLMOps：簡單點説（大家當前在説的），就是「快速從大模型到應用」。</li><li>大模型聚合平台：匯聚大模型能力，提供服務。</li><li>開發工具：其它開發相關的 LLM 工具。</li></ul><h3>算力</h3><p>LLM 模型的訓練和部署需要大量的算力，算力是 LLM 技術發展的關鍵因素。</p><hr><p><strong>LLM Tech Map 已託管到 Gitee：<a href="https://gitee.com/oschina/llm-map" target="_blank">https://gitee.com/oschina/llm-map</a></strong></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 11 Oct 2023 09:11:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261467/oschina-llm-map</guid>
            <link>https://www.oschina.net/news/261467/oschina-llm-map</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[SiFive 推出兩款新型高性能 RISC-V 處理器]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">RISC-V 芯片廠商 SiFive <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.sifive.com%2Fpress%2Fsifive-announces-differentiated-solutions-for-generative" target="_blank">宣佈</a>推出兩款新產品 SiFive Performance P870 CPU 和 SiFive Intelligence X390，主要面向高性能計算和 AI/ML 應用。</span></p><p style="text-align:start"><span style="color:#000000">SiFive Performance P870 和 SiFive Intelligence X390 提供低功耗、計算密度和矢量計算能力，旨在為消費電子、汽車技術和基礎設施領域的數據密集型計算應用程序提供顯着的性能提升。</span></p><p style="text-align:start"><span style="color:#000000">SiFive 高管強調了該公司致力於推動高性能 RISC-V 創新並縮小與其他指令集架構的差距。並表示，消費電子和基礎設施等領域對半導體的需求不斷增長，推動了 RISC-V 生態系統的快速擴張。</span></p><p style="text-align:start"><img height="265" src="https://oscimg.oschina.net/oscnet/up-f6db62d251fa51cb784cdb2fef741ac53e2.png" width="500" referrerpolicy="no-referrer"></p><p style="text-align:start"><img height="254" src="https://oscimg.oschina.net/oscnet/up-44006158dd13e95de661c64ecf3bb99eddc.png" width="500" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000"><span style="background-color:#ffffff"><strong>SiFive </strong></span><strong>Performance</strong><span style="background-color:#ffffff"><strong> P870</strong></span></span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000"><span style="background-color:#ffffff">P870 </span>專為高性能消費類應用而設計，也可與數據中心的矢量處理器一起使用。<span style="background-color:#ffffff">在指令集架構可用性、吞吐量、並行性和內存帶寬方面</span>為 RISC-V 性能樹立了新標準。</span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000"><span style="background-color:#ffffff">P870 具有一個&nbsp;</span></span><span style="background-color:#ffffff; color:#000000">6 發射亂序執行核心</span><span style="color:#000000"><span style="background-color:#ffffff">和一個共享集羣高速緩存。與上一代 SiFive 性能處理器相比，P870 峯值單線程性能提升了 50% (specINT2k6)，最多可支持 32 </span>核集羣<span style="background-color:#ffffff">。</span></span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000"><span style="background-color:#ffffff">此外，P870 完全兼容 Google 對 RISC-V 上 Android 的平台要求，還提供其他經過驗證的 SiFive 功能：</span>128b VLEN 長度的 RISC-V 矢量 (RVV)、矢量加密和 Hypervisor 擴展、IOMMU 和先進中斷架構 (AIA)、非包含性 (non-inclusive) 三級緩存、經過驗證的 RISC-V WorldGuard 安全設計。</span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000"><span style="background-color:#ffffff"><strong>SiFive </strong></span><strong>Intelligence&nbsp;</strong><span style="background-color:#ffffff"><strong>X390</strong></span></span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000">SiFive Intelligence X390 以其前身 SiFive Intelligence X280 為基礎，<span style="background-color:#ffffff">憑藉單核配置、雙倍矢量長度和雙矢量 ALU，將矢量計算性能提高了 4 倍，並將持續數據帶寬量增加了 4 倍。</span></span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000"><span style="background-color:#ffffff">藉助 SiFive 矢量協處理器接口擴展 (VCIX)，公司可以輕鬆添加自己的矢量指令和/或加速硬件，並允許用户通過自定義指令大幅提高性能。</span></span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000"><span style="background-color:#ffffff">功能包括：1024 位 VLEN、512 位 DLEN、單/雙矢量 ALU、VCIX（2048 位輸出，1024 位輸入）。</span></span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000">「<span style="background-color:#ffffff">將 P870 高性能通用計算 SoC 與由 X390 和客户 AI 硬件引擎組成的高性能 NPU 集羣結合在一起，為產品設計人員提供高度靈活、低功耗和可編程的解決方案，併為複雜工作負載提供卓越的計算密度。</span>」</span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000">SiFive 強調了客户對這些組合解決方案的濃厚興趣，並表示其中一些客户使用高性能 SiFive 產品在芯片開發和商業化方面取得了成功。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 11 Oct 2023 09:07:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261465/sifive-two-new-high-performance-risc-v-processors</guid>
            <link>https://www.oschina.net/news/261465/sifive-two-new-high-performance-risc-v-processors</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[每日一博 | 我在前端寫 Java Spring Boot 項目]]>
            </title>
            <description>
                <![CDATA[<div class="content"><span id="OSC_h1_1"></span><h1><span><span><span>前言</span></span></span></h1><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>玩歸玩，鬧歸鬧，別拿 </span></span></span><span><span><code><span>C 端</span></code></span></span><span><span><span> 開玩笑！ 這裏不推薦大家把 Node 服務作為 C 端服務，畢竟它是</span></span></span><span><span><code><span>單線程多任務</span></code></span></span><span><span><span> 機制。 這一特性是 </span></span></span><span><span><code><span>Javascript</span></code></span></span><span><span><span> 語言設計之初，就決定了它的使命 - Java &gt;&gt;&gt;【Script】，這裏就不多解釋了，大家去看看 JavaScript 的歷史就知道啦～這也就決定了，它不能像後端語言那樣 </span></span></span><span><span><code><span>多線程多任務</span></code></span></span><span><span><span>，用户訪問量小還能承受，一旦承受訪問量大高併發，就得涼涼～</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>那為什麼我們還要去寫 Node 服務？ 主要是方便快捷，對於小項目可以迅速完成建設，開發成本小。 其次，主要通過寫 </span></span></span><span><span><code><span>Nest</span></code></span></span><span><span><span> 完成下面收穫：</span></span></span></p><ul><li><span><span><span><span>學習裝飾器語法，感受其簡潔優美；</span></span></span></span></li><li><span><span><span><span>自己學習一門新的開發框架，感受不同框架的優缺點，為以後開發選型打基礎；</span></span></span></span></li><li><span><span><span><span>感受服務端排查問題的複雜性，找找前端設計的靈感。</span></span></span></span></li></ul><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>本篇文章主要是使用 NestJs + Sequelize + MySQL 完成基礎運行， 帶大家瞭解 Node 服務端的基礎搭建，也可以順便看看 Java SpringBoot 項目的基礎結構，它倆真的非常相似，不信你去問服務端開發同學。 </span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>養成好習慣，看文章先一鍵三連～【點贊，關注，轉發】，評論可以看完再吐槽～繼續完善填坑～</span></span></span></p><span id="OSC_h1_2"></span><h1><span><span><span>第一步、項目跑起來</span></span></span></h1><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>在選擇服務端的時候，我之前使用過 Egg.js ，所以這次就不選它了。其次，Egg 也是繼承了 Koa 的開發基礎，加上 Express 也是基於 Koa 上創新的，兩者應該差不多，就不選擇 Koa 和 Express 。</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>所以，我想嘗試下 Nest.js 看語法跟 Java 是一樣的，加上之前也自己開發過 Java + SpringBoot 的項目，當然更古老的 SSH 2.0 也從無到有搭建過，即：Spring2.0 + Struts2+ Hibernate3.2，想想應該會很容易上手，順便懷舊下寫寫。</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>參考文檔：</span></span></span></p><ul><li><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.geeksforgeeks.org%2Fbest-nodejs-frameworks-for-app-development%2F" target="_blank" rel="nofollow"><span><span><span>https://www.geeksforgeeks.org/best-nodejs-frameworks-for-app-development/</span></span></span></a><span><span><span>﻿</span></span></span></span></li><li><span><span><span><span>﻿</span></span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fanywhere.epam.com%2Fbusiness%2Fbest-node-js-frameworks" target="_blank" rel="nofollow"><span><span><span>https://anywhere.epam.com/business/best-node-js-frameworks</span></span></span></a><span><span><span>﻿</span></span></span></span></li></ul><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>説下我的想法，首先我們剛入門，估計會有一堆不清楚的坑，我們先簡單點，後續我們再繼續加深。既然要搞服務端，要搞就多搞點，我們都去嚐鮮玩玩。我們打算使用 </span></span></span><span><span><code><span>Nest</span></code></span></span><span><span><span> 作為前端框架，</span></span></span><span><span><code><span>Graphql</span></code></span></span><span><span><span> 作為中間處理層。底層數據庫我們用傳統的 </span></span></span><span><span><code><span>MySQL</span></code></span></span><span><span><span>，比較穩定可靠，而且相對比較熟悉，這個就不玩新的了，畢竟數據庫是一切的基石 。</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>説下我們具體實現步驟：</span></span></span></p><div><span>1.</span><span><span><span><strong><span>【必須】</span></strong></span></span><span><span><span>沒有任何數據庫，完成接口請求運行，能夠跑起來；</span></span></span></span></div><div><span>2.</span><span><span><span><strong><span>【必須】</span></strong></span></span><span><span><span>創建基礎數據庫 </span></span></span><span><span><code><span>MySQL</span></code></span></span><span><span><span> ，接入 </span></span></span><span><span><code><span>@nestjs/sequelize</span></code></span></span><span><span><span> 庫，完成 </span></span></span><span><span><code><span>增刪改查</span></code></span></span><span><span><span> 功能即：</span></span></span><span><span><code><span>CRUD</span></code></span></span></span></div><div><span>3.</span><span><span><span><span>【</span></span></span><span><span><strong><span>可選</span></strong></span></span><span><span><span>】打算採取 </span></span></span><span><span><code><span>Graphql</span></code></span></span><span><span><span> 處理 API 查詢，做到精確數據查詢，這個已經火了很多了，但是真正使用的很少，我們打算先感受下，後續可以直接用到業務。</span></span></span></span></div><div><span>4.</span><span><span><span><span>【</span></span></span><span><span><strong><span>可選</span></strong></span></span><span><span><span>】接入 </span></span></span><span><span><code><span>Swagger</span></code></span></span><span><span><span> 自動生成 API 文檔，快捷進行前端與後端服務聯調測試。</span></span></span></span></div><div><span>◦</span><span><span><span><span>Swagger 是一個開源工具，用於設計、構建、記錄和使用 RESTful web 服務。</span></span></span></span></div><div><span>5.</span><span><span><span><strong><span>【可選】</span></strong></span></span><span><span><span>接口請求，數據庫優化處理</span></span></span></span></div><div><span>◦</span><span><span><span><span>請求分流，數據庫寫入加鎖，處理併發流程</span></span></span></span></div><div><span>◦</span><span><span><span><span>增加 </span></span></span><span><span><code><span>middleware</span></code></span></span><span><span><span> 中間件統一處理請求及響應，進行鑑權處理，請求攔截等操作</span></span></span></span></div><div><span>◦</span><span><span><span><span>數據庫分割備份，數據庫融災處理，分為：主、備、災</span></span></span></span></div><div><span>◦</span><span><span><span><span>數據庫讀寫分離，數據雙寫，建立數據庫緩存機制，使用 </span></span></span><span><span><code><span>redis</span></code></span></span><span><span><span> 處理</span></span></span></span></div><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><em><strong><span>也歡迎大家補充更多的優化點，我們一起探討～有興趣可以幫忙補充代碼哈～</span></strong></em></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>確定了大概方向，我們就開始整。先不追求一步到位，否則越多越亂，錦上添花的東西，我們可以後續增加，基礎功能我們要優先保障完成。Nest.js 官網：</span></span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.nestjs.com%2F" target="_blank" rel="nofollow"><span><span><span>https://docs.nestjs.com/ </span></span></span></a><span><span><span>，話不多説，我們直接開整。</span></span></span></p><pre><code><span><span><span style="color:#708090"># 進入文件夾目錄</span></span><span><span></span></span><span><span style="color:#669900">cd</span></span><span><span> full-stack-demo/packages
</span></span><span><span style="color:#708090"># 安裝腳手架</span></span><span><span></span></span><span><span style="color:#dd4a68">npm</span></span><span><span> i -g @nestjs/cli
</span></span><span><span style="color:#708090"># 創建基礎項目</span></span><span><span>
nest new node-server-demo 
</span></span><span><span style="color:#708090"># 進入項目 </span></span><span><span></span></span><span><span style="color:#669900">cd</span></span><span><span> new node-server-demo 
</span></span><span><span style="color:#708090"># 運行項目測試</span></span><span><span></span></span><span><span style="color:#dd4a68">npm</span></span><span><span> run start:dev

</span></span></span></code></pre><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>我們移除一些不需要的東西，先簡單再複雜，別把自己搞暈了。接下來寫一個簡單示例感受下這個框架，之後完整的代碼，我會公佈在後面。廢話不多説，開整！調整後目錄結構：</span></span></span></p><div><span>•</span><span><span><span><code><span>common</span></code></span></span><span><span><span> - 公用方法類</span></span></span></span></div><div><span>•</span><span><span><span><code><span>config</span></code></span></span><span><span><span> - 配置類文件</span></span></span></span></div><div><span>•</span><span><span><span><code><span>controller</span></code></span></span><span><span><span> - 控制器，用於處理前端發起的各類請求</span></span></span></span></div><div><span>•</span><span><span><span><code><span>service</span></code></span></span><span><span><span> - 服務類，用於處理與數據庫交互邏輯</span></span></span></span></div><div><span>•</span><span><span><span><code><span>dto</span></code></span></span><span><span><span> - DTO（Data Transfer Object）可以用於驗證輸入數據、限制傳輸的字段或格式。</span></span></span></span></div><div><span>•</span><span><span><span><code><span>entities</span></code></span></span><span><span><span> - 實體類，用於描述對象相關的屬性信息</span></span></span></span></div><div><span>•</span><span><span><span><code><span>module</span></code></span></span><span><span><span> - 模塊，用於註冊所有的服務類、控制器類，類似 Spring 裏面的 bean</span></span></span></span></div><div><span>◦</span><span><span><span><span>這裏不能完全等同哈，兩個實現機制上就不同，只是幫助大家理解。</span></span></span></span></div><div><span>•</span><span><span><span><code><span>main.ts</span></code></span></span><span><span><span> - nest 啓動入口</span></span></span></span></div><div><span>•</span><span><span><span><code><span>types</span></code></span></span><span><span><span> - typescript 相關聲明類型</span></span></span></span></div><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>﻿</span></span></span></p><div><img alt="" height="652" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-10-07-19-27D10wKQg77UKtvJTL.jpg" width="192" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span>﻿</span></span></span></p><p><span><span><span>只是寫 demo, 搞快點就沒有怎麼寫註釋了，我感覺是一看就懂了，跟 Java SpringBoot 的寫法非常一致，部分代碼展示：</span></span></span></p><ul><li><span><span><span><span>控制器 controller </span></span></span></span></li></ul><pre><code><span><span><span style="color:#708090">// packages/node-server-demo/src/controller/user/index.ts</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> Controller</span></span><span><span style="color:#999999">,</span></span><span><span> Get</span></span><span><span style="color:#999999">,</span></span><span><span> Query </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'@nestjs/common'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span> UserServices </span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'@/service/user'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> GetUserDto</span></span><span><span style="color:#999999">,</span></span><span><span> GetUserInfoDto </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'@/dto/user'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span>@Controller</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#669900">'user'</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#0077aa">export</span></span><span><span></span></span><span><span style="color:#0077aa">class</span></span><span><span></span></span><span><span style="color:#dd4a68">UserController</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#dd4a68">constructor</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#0077aa">private</span></span><span><span></span></span><span><span style="color:#0077aa">readonly</span></span><span><span> userService</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span> UserServices</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#708090">// Get 請求 user/name?name=bricechou</span></span><span><span></span></span><span><span>@Get</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#669900">'name'</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#0077aa">async</span></span><span><span></span></span><span><span style="color:#dd4a68">findByName</span></span><span><span style="color:#999999">(</span></span><span><span>@Query</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span> getUserDto</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span> GetUserDto</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span></span></span><span><span style="color:#0077aa">this</span></span><span><span style="color:#999999">.</span></span><span><span>userService</span></span><span><span style="color:#999999">.</span></span><span><span>read</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">findByName</span></span><span><span style="color:#999999">(</span></span><span><span>getUserDto</span></span><span><span style="color:#999999">.</span></span><span><span>name</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#708090">// Get 請求 user/info?id=123</span></span><span><span></span></span><span><span>@Get</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#669900">'info'</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#0077aa">async</span></span><span><span></span></span><span><span style="color:#dd4a68">findById</span></span><span><span style="color:#999999">(</span></span><span><span>@Query</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span> getUserInfoDto</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span> GetUserInfoDto</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">const</span></span><span><span> user </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span></span></span><span><span style="color:#0077aa">await</span></span><span><span></span></span><span><span style="color:#0077aa">this</span></span><span><span style="color:#999999">.</span></span><span><span>userService</span></span><span><span style="color:#999999">.</span></span><span><span>read</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">findById</span></span><span><span style="color:#999999">(</span></span><span><span>getUserInfoDto</span></span><span><span style="color:#999999">.</span></span><span><span>id</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> gender</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span> user</span></span><span><span style="color:#999999">.</span></span><span><span>gender</span></span><span><span style="color:#999999">,</span></span><span><span> job</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span> user</span></span><span><span style="color:#999999">.</span></span><span><span>job </span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span></span></code></pre><pre><code><span><span><span style="color:#708090">// packages/node-server-demo/src/controller/log/add.ts</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> Controller</span></span><span><span style="color:#999999">,</span></span><span><span> Post</span></span><span><span style="color:#999999">,</span></span><span><span> Body </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'@nestjs/common'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> AddLogDto </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'@/dto/log'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span> LogServices </span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'@/service/log'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span>@Controller</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#669900">'log'</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#0077aa">export</span></span><span><span></span></span><span><span style="color:#0077aa">class</span></span><span><span></span></span><span><span style="color:#dd4a68">CreateLogController</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#dd4a68">constructor</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#0077aa">private</span></span><span><span></span></span><span><span style="color:#0077aa">readonly</span></span><span><span> logServices</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span> LogServices</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#708090">// post('/log/add')</span></span><span><span></span></span><span><span>@Post</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#669900">'add'</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#dd4a68">create</span></span><span><span style="color:#999999">(</span></span><span><span>@Body</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span> createLogDto</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span> AddLogDto</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span></span></span><span><span style="color:#0077aa">this</span></span><span><span style="color:#999999">.</span></span><span><span>logServices</span></span><span><span style="color:#999999">.</span></span><span><span>create</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">create</span></span><span><span style="color:#999999">(</span></span><span><span>createLogDto</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span></span></code></pre><ul><li><span><span><span><span>數據轉換 Data Transfer Object </span></span></span></span></li></ul><pre><code><span><span><span style="color:#708090">// packages/node-server-demo/src/dto/user.ts</span></span><span><span></span></span><span><span style="color:#0077aa">export</span></span><span><span></span></span><span><span style="color:#0077aa">class</span></span><span><span></span></span><span><span style="color:#dd4a68">CreateUserDto</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span>
  name</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">string</span></span><span><span style="color:#999999">;</span></span><span><span>
  age</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">number</span></span><span><span style="color:#999999">;</span></span><span><span>
  gender</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">string</span></span><span><span style="color:#999999">;</span></span><span><span>
  job</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">string</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#708090">// 可以分開寫，也可以合併</span></span><span><span></span></span><span><span style="color:#0077aa">export</span></span><span><span></span></span><span><span style="color:#0077aa">class</span></span><span><span></span></span><span><span style="color:#dd4a68">GetUserDto</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span>
  id</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">?</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">number</span></span><span><span style="color:#999999">;</span></span><span><span>
  name</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">string</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#708090">// 可以分開寫，也可以合併</span></span><span><span></span></span><span><span style="color:#0077aa">export</span></span><span><span></span></span><span><span style="color:#0077aa">class</span></span><span><span></span></span><span><span style="color:#dd4a68">GetUserInfoDto</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span>
  id</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">number</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span></span></code></pre><ul><li><span><span><span><span>service 數據庫交互處理類</span></span></span></span></li></ul><pre><code><span><span><span style="color:#708090">// packages/node-server-demo/src/service/user/read.ts</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> Injectable </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'@nestjs/common'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> User </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'@/entities/User'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span>@Injectable</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#0077aa">export</span></span><span><span></span></span><span><span style="color:#0077aa">class</span></span><span><span></span></span><span><span style="color:#dd4a68">ReadUserService</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#dd4a68">constructor</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">async</span></span><span><span></span></span><span><span style="color:#dd4a68">findByName</span></span><span><span style="color:#999999">(</span></span><span><span>name</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">string</span></span><span><span style="color:#999999">)</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">Promise</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">&lt;</span></span><span><span>User</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">&gt;</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#708090">// 可以處理判空，從數據庫讀取/寫入數據，可能會被多個 controller 進行調用</span></span><span><span></span></span><span><span style="color:#669900">console</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">info</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#669900">'ReadUserService findByName &gt; '</span></span><span><span style="color:#999999">,</span></span><span><span> name</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span></span></span><span><span style="color:#669900">Promise</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">resolve</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">{</span></span><span><span> id</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#990055">1</span></span><span><span style="color:#999999">,</span></span><span><span> name</span></span><span><span style="color:#999999">,</span></span><span><span> job</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">'程序員'</span></span><span><span style="color:#999999">,</span></span><span><span> gender</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#990055">1</span></span><span><span style="color:#999999">,</span></span><span><span> age</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#990055">18</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">async</span></span><span><span></span></span><span><span style="color:#dd4a68">findById</span></span><span><span style="color:#999999">(</span></span><span><span>id</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">number</span></span><span><span style="color:#999999">)</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">Promise</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">&lt;</span></span><span><span>User</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">&gt;</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#669900">console</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">info</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#669900">'ReadUserService findById &gt; '</span></span><span><span style="color:#999999">,</span></span><span><span> id</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span></span></span><span><span style="color:#669900">Promise</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">resolve</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">{</span></span><span><span>
      id</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#990055">1</span></span><span><span style="color:#999999">,</span></span><span><span>
      name</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">'BriceChou'</span></span><span><span style="color:#999999">,</span></span><span><span>
      job</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">'程序員'</span></span><span><span style="color:#999999">,</span></span><span><span>
      gender</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#990055">1</span></span><span><span style="color:#999999">,</span></span><span><span>
      age</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#990055">18</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span></span></code></pre><ul><li><span><span><span><span>module 模塊註冊，服務類/控制類</span></span></span></span></li></ul><pre><code><span><span><span style="color:#708090">// packages/node-server-demo/src/module/user.ts</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> Module </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'@nestjs/common'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span> UserService</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> ReadUserService </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'@/service/user'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> UserController </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'@/controller/user'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span>@Module</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">{</span></span><span><span>
  providers</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#999999">[</span></span><span><span>UserService</span></span><span><span style="color:#999999">,</span></span><span><span> ReadUserService</span></span><span><span style="color:#999999">]</span></span><span><span style="color:#999999">,</span></span><span><span>
  controllers</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#999999">[</span></span><span><span>UserController</span></span><span><span style="color:#999999">]</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#0077aa">export</span></span><span><span></span></span><span><span style="color:#0077aa">class</span></span><span><span></span></span><span><span style="color:#dd4a68">UserModule</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span style="color:#999999">}</span></span><span><span></span></span></span></code></pre><pre><code><span><span><span style="color:#708090">// packages/node-server-demo/src/module/index.ts 根模塊注入</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> Module </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'@nestjs/common'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> UserModule </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'./user'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> LogModule </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'./log'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span>@Module</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">{</span></span><span><span>
  imports</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#999999">[</span></span><span><span>
    UserModule</span></span><span><span style="color:#999999">,</span></span><span><span>
    LogModule</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">]</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#0077aa">export</span></span><span><span></span></span><span><span style="color:#0077aa">class</span></span><span><span></span></span><span><span style="color:#dd4a68">AppModule</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span style="color:#999999">}</span></span><span><span></span></span></span></code></pre><ul><li><span><span><span><span>main.js 啓動註冊的所有類</span></span></span></span></li></ul><pre><code><span><span><span>// packages/node-server-demo/src/main.ts
import { AppModule } from '@/module';
import { NestFactory } from '@nestjs/core';
import { NestExpressApplication } from '@nestjs/platform-express';

async function bootstrap() {
  const app = await NestFactory.create&lt;NestExpressApplication&gt;(AppModule);
  // 監聽端口 3000 
  await app.listen(3000);
}

bootstrap();

</span></span></span></code></pre><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>這樣一個單機的服務器就啓動起來了，我們可以使用 </span></span></span><span><span><code><span>Postwoman</span></code></span></span><span><span><span> [</span></span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhoppscotch.io%2F" target="_blank" rel="nofollow"><span><span><span>https://hoppscotch.io/</span></span></span></a><span><span><span>] 進行請求，瞅瞅看返回效果。</span></span></span></p><div><img alt="" height="411" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-09-22-11-32nFgn22QoRKqZ9oMW.jpg" width="463" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span>﻿</span></span></span></p><div><img alt="" height="297" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-09-22-11-320kQIUM44BtGOUf6I.jpg" width="623" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span>﻿</span></span></span></p><p><span><span><span>控制枱也收到日誌了，後面可以把這些日誌請求保留成 </span></span></span><span><span><code><span>.log</span></code></span></span><span><span><span> 文件，這樣請求日誌也有了，完美！下一步，我們開始連接數據庫，這樣就不用單機玩泥巴了～</span></span></span></p><span id="OSC_h1_3"></span><h1><span><span><span>第二步、配置 MySQL</span></span></span></h1><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>MySQL 安裝其實很簡單，我電腦是 Mac 的，所以下面的截圖都是以 mac 為例，先下載對應的數據庫。</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>下載地址：</span></span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdev.mysql.com%2Fdownloads%2Fmysql%2F" target="_blank" rel="nofollow"><span><span><span>https://dev.mysql.com/downloads/mysql/ </span></span></span></a><span><span><span>至於其他系統的，可以網上找教程，這個應該爛大街了，我就不重複搬運教程了。</span></span></span></p><ul><li><span><span><span><strong><span>注意：</span></strong></span></span><span><span><span>安裝的數據庫，一定要設置密碼，連接數據庫必須要有密碼，否則會導致連接數據庫失敗。</span></span></span></span></li><li><span><span><span><span>MySQL 我們只安裝數據庫就行，熟悉指令的童鞋，就直接命令行操作就行。</span></span></span></span></li><li><span><span><span><span>不熟悉的話，那就下載圖形化管理工具。</span></span></span></span></li></ul><div><span>◦</span><span><span><span><span>Mysql 官方控制枱 </span></span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdev.mysql.com%2Fdownloads%2Fworkbench%2F" target="_blank" rel="nofollow"><span><span><span>https://dev.mysql.com/downloads/workbench/</span></span></span></a><span><span><span>﻿</span></span></span></span></div><div><span>◦</span><span><span><span><span>Windows 也可以使用 </span></span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.heidisql.com%2Fdownload.php%3Fdownload%3Dinstaller" target="_blank" rel="nofollow"><span><span><span>https://www.heidisql.com/download.php?download=installer</span></span></span></a><span><span><span>﻿</span></span></span></span></div><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>PS：安裝 workbench 時發現要求 </span></span></span><span><span><code><span>MacOS 13</span></code></span></span><span><span><span>以上，我的電腦是 </span></span></span><span><span><code><span>MacOS 12</span></code></span></span><span><span><span>。</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>白白下載，所以只能 </span></span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdownloads.mysql.com%2Farchives%2Fworkbench%2F" target="_blank" rel="nofollow"><span><span><span>https://downloads.mysql.com/archives/workbench/ </span></span></span></a><span><span><span>從歸檔裏面找低版本 </span></span></span><span><span><code><span>8.0.31</span></code></span></span><span><span><span>。對於數據庫服務也有版本要求，大家按照自己電腦版本，選擇支持的版本即可。 </span></span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdownloads.mysql.com%2Farchives%2Fcommunity%2F" target="_blank" rel="nofollow"><span><span><code><span>https://downloads.mysql.com/archives/community/</span></code></span></span></a><span><span><span>。我這邊選擇的是默認最新版本：</span></span></span><span><span><code><span>8.0.34</span></code></span></span><span><span><span>，下載好直接安裝，一路 </span></span></span><span><span><code><span>Next</span></code></span></span><span><span><span> 到底，記住自己輸入的 Root 密碼！！！</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>確認好當前數據庫是否已經運行起來了，啓動 Workbench 查看狀態。</span></span></span></p><div><img alt="" height="284" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-09-22-11-3232hBsN9S6ryKq22Kq.jpg" width="641" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span>﻿</span></span></span></p><p><span>1.<span><span><span>創建數據庫</span></span></span></span></p><div><img alt="" height="287" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-09-22-11-32Y6bY8NOU328GGDBA.jpg" width="643" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span>﻿</span></span></span><span><span><span>數據庫存在字符集選擇，不同的字符集和校驗規則，會對存儲數據產生影響，所以大家可以自行查詢，按照自己存儲數據原則選擇，我這裏默認選最廣泛的。確認好，就選擇右下角的應用按鈕。</span></span></span></p><div><span>2.</span><span><span><span><span>創建表和屬性</span></span></span></span></div><div><img alt="" height="373" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-09-22-11-32oDMpwdctNZsX7Yr.jpg" width="770" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span>﻿</span></span></span></p><p><span><span><span>選項解答：</span></span></span></p><div><span>•</span><span><span><span><code><span>PRIMARY KEY</span></code></span></span><span><span><span> 是表中的一個或多個列的組合，它用於唯一標識表中的每一行。</span></span></span></span></div><div><span>•</span><span><span><span><code><span>Not NULL</span></code></span></span><span><span><span> 和 </span></span></span><span><span><code><span>Unique</span></code></span></span><span><span><span> 就不解釋，就是直譯的那個意思。</span></span></span></span></div><div><span>•</span><span><span><span><code><span>GENERATED</span></code></span></span><span><span><span> 生成列是表中的一種特殊類型的列，它的值不是從插入語句中獲取的，而是根據其他列的值通過一個表達式或函數生成的。</span></span></span></span></div><pre><code><span><span><span style="color:#0077aa">CREATE</span></span><span><span></span></span><span><span style="color:#0077aa">TABLE</span></span><span><span> people </span></span><span><span style="color:#999999">(</span></span><span><span>
    first_name </span></span><span><span style="color:#0077aa">VARCHAR</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#990055">100</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">,</span></span><span><span>
    last_name </span></span><span><span style="color:#0077aa">VARCHAR</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#990055">100</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">,</span></span><span><span>
    full_name </span></span><span><span style="color:#0077aa">VARCHAR</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#990055">200</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#0077aa">AS</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span>CONCAT</span></span><span><span style="color:#999999">(</span></span><span><span>first_name</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#669900">' '</span></span><span><span style="color:#999999">,</span></span><span><span> last_name</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span></span></code></pre><ul><li><span><span><span><code><span>UNSIGNED</span></code></span></span><span><span><span> 這個數值類型就只能存儲正數（包括零），不會存儲負數。</span></span></span></span></li><li><span><span><span><code><span>ZEROFILL</span></code></span></span><span><span><span> 將數值類型的字段的前面填充零，他會自動使字段變為 </span></span></span><span><span><code><span>UNSIGNED</span></code></span></span><span><span><span>，直到該字段達到聲明的長度，如：00007</span></span></span></span></li><li><span><span><span><code><span>BINARY</span></code></span></span><span><span><span> 用於存儲二進制字符串，如聲明一個字段為 BINARY(5)，那麼存儲在這個字段中的字符串都將被處理為長度為 5 的二進制字符串。</span></span></span></span></li></ul><div><span>◦</span><span><span><span><span>如嘗試存儲一個長度為 3 的字符串，那麼它將在右側用兩個空字節填充。</span></span></span></span></div><div><span>◦</span><span><span><span><span>如果你嘗試存儲一個長度為 6 的字符串，那麼它將被截斷為長度為 5</span></span></span></span></div><div><span>◦</span><span><span><span><span>主要用途是存儲那些需要按字節進行比較的數據，例如加密哈希值</span></span></span></span></div><ul><li><span><span><span><span>此外也可順手傳創建一個索引，方便快速查找。</span></span></span></span></li></ul><pre><code><span><span><span style="color:#0077aa">CREATE</span></span><span><span></span></span><span><span style="color:#0077aa">TABLE</span></span><span><span></span></span><span><span style="color:#999999">`</span></span><span><span>rrweb</span></span><span><span style="color:#999999">`</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#999999">`</span></span><span><span>test_sys_req_log</span></span><span><span style="color:#999999">`</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span></span></span><span><span style="color:#999999">`</span></span><span><span>id</span></span><span><span style="color:#999999">`</span></span><span><span></span></span><span><span style="color:#0077aa">INT</span></span><span><span></span></span><span><span style="color:#0077aa">UNSIGNED</span></span><span><span></span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">NOT</span></span><span><span></span></span><span><span style="color:#990055">NULL</span></span><span><span></span></span><span><span style="color:#0077aa">AUTO_INCREMENT</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">`</span></span><span><span>content</span></span><span><span style="color:#999999">`</span></span><span><span></span></span><span><span style="color:#0077aa">TEXT</span></span><span><span></span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">NOT</span></span><span><span></span></span><span><span style="color:#990055">NULL</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">`</span></span><span><span>l_level</span></span><span><span style="color:#999999">`</span></span><span><span></span></span><span><span style="color:#0077aa">INT</span></span><span><span></span></span><span><span style="color:#0077aa">UNSIGNED</span></span><span><span></span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">NOT</span></span><span><span></span></span><span><span style="color:#990055">NULL</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">`</span></span><span><span>l_category</span></span><span><span style="color:#999999">`</span></span><span><span></span></span><span><span style="color:#0077aa">VARCHAR</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#990055">255</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">NOT</span></span><span><span></span></span><span><span style="color:#990055">NULL</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">`</span></span><span><span>l_created_at</span></span><span><span style="color:#999999">`</span></span><span><span></span></span><span><span style="color:#0077aa">TIMESTAMP</span></span><span><span></span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">NOT</span></span><span><span></span></span><span><span style="color:#990055">NULL</span></span><span><span></span></span><span><span style="color:#0077aa">DEFAULT</span></span><span><span></span></span><span><span style="color:#0077aa">CURRENT_TIMESTAMP</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">`</span></span><span><span>l_updated_at</span></span><span><span style="color:#999999">`</span></span><span><span></span></span><span><span style="color:#0077aa">TIMESTAMP</span></span><span><span></span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">NOT</span></span><span><span></span></span><span><span style="color:#990055">NULL</span></span><span><span></span></span><span><span style="color:#0077aa">DEFAULT</span></span><span><span></span></span><span><span style="color:#0077aa">CURRENT_TIMESTAMP</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#0077aa">PRIMARY</span></span><span><span></span></span><span><span style="color:#0077aa">KEY</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">`</span></span><span><span>id</span></span><span><span style="color:#999999">`</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#0077aa">UNIQUE</span></span><span><span></span></span><span><span style="color:#0077aa">INDEX</span></span><span><span></span></span><span><span style="color:#999999">`</span></span><span><span>id_UNIQUE</span></span><span><span style="color:#999999">`</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">`</span></span><span><span>id</span></span><span><span style="color:#999999">`</span></span><span><span></span></span><span><span style="color:#0077aa">ASC</span></span><span><span style="color:#999999">)</span></span><span><span> VISIBLE</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#0077aa">INDEX</span></span><span><span></span></span><span><span style="color:#999999">`</span></span><span><span>table_index</span></span><span><span style="color:#999999">`</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">`</span></span><span><span>l_level</span></span><span><span style="color:#999999">`</span></span><span><span></span></span><span><span style="color:#0077aa">ASC</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">`</span></span><span><span>l_category</span></span><span><span style="color:#999999">`</span></span><span><span></span></span><span><span style="color:#0077aa">ASC</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">`</span></span><span><span>l_time</span></span><span><span style="color:#999999">`</span></span><span><span></span></span><span><span style="color:#0077aa">ASC</span></span><span><span style="color:#999999">)</span></span><span><span> VISIBLE</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span></span></code></pre><div><span>3.</span><span><span><span><span>連接數據庫</span></span></span></span></div><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>由於目前 </span></span></span><span><span><code><span>node-oracledb</span></code></span></span><span><span><span> 官方尚未提供針對 Apple Silicon 架構的預編譯二進制文件。導致我們無法在 </span></span></span><span><span><strong><span>Mac M1 芯片</span></strong></span></span><span><span><span>上使用 </span></span></span><span><span><code><span>TypeORM</span></code></span></span><span><span><span> 鏈接數據庫操作，它目前只支持 </span></span></span><span><span><strong><span>Mac x86 芯片</span></strong></span></span><span><span><span>。哎～折騰老半天，查閲各種文檔，居然有這個坑，沒關係我們換個方式打開。</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>我們不得不放棄，從而選用 </span></span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.nestjs.com%2Ftechniques%2Fdatabase%23sequelize-integration" target="_blank" rel="nofollow"><span><span><span>https://docs.nestjs.com/techniques/database#sequelize-integration </span></span></span></a><span><span><span>哐哐哐～一頓操作猛如虎，盤它！</span></span></span></p><ul><li><span><span><span><span>安裝 </span></span></span><span><span><code><span>Sequelize</span></code></span></span></span></li></ul><pre><code><span><span><span># 安裝連接庫
npm install </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">--</span></span><span><span>save </span></span><span><span>@nestjs</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">/</span></span><span><span>sequelize sequelize sequelize</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">-</span></span><span><span>typescript mysql2
# 安裝 </span></span><span><span style="color:#0077aa">type</span></span><span><span></span></span><span><span style="color:#dd4a68">npm</span></span><span><span> install </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">--</span></span><span><span>save</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">-</span></span><span><span>dev </span></span><span><span>@types</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">/</span></span><span><span>sequelize

</span></span></span></code></pre><ul><li><span><span><span><span>配置數據庫基礎信息</span></span></span></span></li></ul><pre><code><span><span><span style="color:#708090">// packages/node-server-demo/src/module/index.ts</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> Module </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'@nestjs/common'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> UserModule </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'./user'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> LogModule </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'./log'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> Log </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'@/entities/Log'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> SequelizeModule </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'@nestjs/sequelize'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span>@Module</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">{</span></span><span><span>
  imports</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#999999">[</span></span><span><span>
    SequelizeModule</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">forRoot</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">{</span></span><span><span>
      dialect</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">'mysql'</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#708090">// 按數據庫實際配置</span></span><span><span>
      host</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">'127.0.0.1'</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#708090">// 按數據庫實際配置</span></span><span><span>
      port</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#990055">3306</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#708090">// 按數據庫實際配置</span></span><span><span>
      username</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">'root'</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#708090">// 按數據庫實際配置</span></span><span><span>
      password</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">'hello'</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#708090">// 按數據庫實際配置</span></span><span><span>
      database</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">'world'</span></span><span><span style="color:#999999">,</span></span><span><span>
      synchronize</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#990055">true</span></span><span><span style="color:#999999">,</span></span><span><span>
      models</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#999999">[</span></span><span><span>Log</span></span><span><span style="color:#999999">]</span></span><span><span style="color:#999999">,</span></span><span><span>
      autoLoadModels</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#990055">true</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">,</span></span><span><span>
    LogModule</span></span><span><span style="color:#999999">,</span></span><span><span>
    UserModule</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">]</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#0077aa">export</span></span><span><span></span></span><span><span style="color:#0077aa">class</span></span><span><span></span></span><span><span style="color:#dd4a68">AppModule</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span style="color:#999999">}</span></span><span><span></span></span></span></code></pre><ul><li><span><span><span><span>實體與數據庫一一映射處理</span></span></span></span></li></ul><pre><code><span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> getNow </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'@/common/date'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span>
  Model</span></span><span><span style="color:#999999">,</span></span><span><span>
  Table</span></span><span><span style="color:#999999">,</span></span><span><span>
  Column</span></span><span><span style="color:#999999">,</span></span><span><span>
  PrimaryKey</span></span><span><span style="color:#999999">,</span></span><span><span>
  DataType</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'sequelize-typescript'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span>@Table</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">{</span></span><span><span> tableName</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">'test_sys_req_log'</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#0077aa">export</span></span><span><span></span></span><span><span style="color:#0077aa">class</span></span><span><span></span></span><span><span style="color:#dd4a68">Log</span></span><span><span></span></span><span><span style="color:#0077aa">extends</span></span><span><span></span></span><span><span style="color:#dd4a68">Model&lt;Log&gt;</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span>@PrimaryKey</span></span><span><span></span></span><span><span>@Column</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">{</span></span><span><span>
    type</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span> DataType</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#990055">INTEGER</span></span><span><span style="color:#999999">,</span></span><span><span>
    autoIncrement</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#990055">true</span></span><span><span style="color:#999999">,</span></span><span><span>
    field</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">'id'</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span>
  id</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">number</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span>@Column</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">{</span></span><span><span> field</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">'content'</span></span><span><span style="color:#999999">,</span></span><span><span> type</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span> DataType</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#990055">TEXT</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span>
  content</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">string</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span>@Column</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">{</span></span><span><span> field</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">'l_level'</span></span><span><span style="color:#999999">,</span></span><span><span> type</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span> DataType</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#990055">INTEGER</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span>
  level</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">number</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#708090">// 3 嚴重，2 危險，1 輕微</span></span><span><span></span></span><span><span>@Column</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">{</span></span><span><span> field</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">'l_category'</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span>
  category</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">string</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#708090">// 模塊分類/來源分類</span></span><span><span></span></span><span><span>@Column</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">{</span></span><span><span>
    field</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">'l_created_at'</span></span><span><span style="color:#999999">,</span></span><span><span>
    type</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span> DataType</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#990055">NOW</span></span><span><span style="color:#999999">,</span></span><span><span>
    defaultValue</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#dd4a68">getNow</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span>
  createdAt</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">number</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span>@Column</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">{</span></span><span><span>
    field</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">'l_updated_at'</span></span><span><span style="color:#999999">,</span></span><span><span>
    type</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span> DataType</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#990055">NOW</span></span><span><span style="color:#999999">,</span></span><span><span>
    defaultValue</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#dd4a68">getNow</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span>
  updatedAt</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">number</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span></span></code></pre><ul><li><span><span><span><span>module 註冊實體</span></span></span></span></li></ul><pre><code><span><span><span style="color:#708090">// packages/node-server-demo/src/module/log.ts</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> Module </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'@nestjs/common'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> SequelizeModule </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'@nestjs/sequelize'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> Log </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'@/entities/Log'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span> LogServices</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span>
  CreateLogService</span></span><span><span style="color:#999999">,</span></span><span><span>
  UpdateLogService</span></span><span><span style="color:#999999">,</span></span><span><span>
  DeleteLogService</span></span><span><span style="color:#999999">,</span></span><span><span>
  ReadLogService</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'@/service/log'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span>
  CreateLogController</span></span><span><span style="color:#999999">,</span></span><span><span>
  RemoveLogController</span></span><span><span style="color:#999999">,</span></span><span><span>
  UpdateLogController</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'@/controller/log'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span>@Module</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">{</span></span><span><span>
  imports</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#999999">[</span></span><span><span>SequelizeModule</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">forFeature</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">[</span></span><span><span>Log</span></span><span><span style="color:#999999">]</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">]</span></span><span><span style="color:#999999">,</span></span><span><span>
  providers</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#999999">[</span></span><span><span>
    LogServices</span></span><span><span style="color:#999999">,</span></span><span><span>
    CreateLogService</span></span><span><span style="color:#999999">,</span></span><span><span>
    UpdateLogService</span></span><span><span style="color:#999999">,</span></span><span><span>
    DeleteLogService</span></span><span><span style="color:#999999">,</span></span><span><span>
    ReadLogService</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">]</span></span><span><span style="color:#999999">,</span></span><span><span>
  controllers</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#999999">[</span></span><span><span>CreateLogController</span></span><span><span style="color:#999999">,</span></span><span><span> RemoveLogController</span></span><span><span style="color:#999999">,</span></span><span><span> UpdateLogController</span></span><span><span style="color:#999999">]</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#0077aa">export</span></span><span><span></span></span><span><span style="color:#0077aa">class</span></span><span><span></span></span><span><span style="color:#dd4a68">LogModule</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span style="color:#999999">}</span></span><span><span></span></span></span></code></pre><ul><li><span><span><span><span>service 操作數據庫處理數據</span></span></span></span></li></ul><pre><code><span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> Log </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'@/entities/Log'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> Injectable </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'@nestjs/common'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> AddLogDto </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'@/dto/log'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> InjectModel </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'@nestjs/sequelize'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> ResponseStatus </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'@/types/BaseResponse'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> getErrRes</span></span><span><span style="color:#999999">,</span></span><span><span> getSucVoidRes </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'@/common/response'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span>@Injectable</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#0077aa">export</span></span><span><span></span></span><span><span style="color:#0077aa">class</span></span><span><span></span></span><span><span style="color:#dd4a68">CreateLogService</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#dd4a68">constructor</span></span><span><span style="color:#999999">(</span></span><span><span></span></span><span><span>@InjectModel</span></span><span><span style="color:#999999">(</span></span><span><span>Log</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#0077aa">private</span></span><span><span> logModel</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#0077aa">typeof</span></span><span><span> Log</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">async</span></span><span><span></span></span><span><span style="color:#dd4a68">create</span></span><span><span style="color:#999999">(</span></span><span><span>createLogDto</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span> AddLogDto</span></span><span><span style="color:#999999">)</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">Promise</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">&lt;</span></span><span><span>ResponseStatus</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">&lt;</span></span><span><span style="color:#0077aa">null</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">&gt;&gt;</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#669900">console</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">info</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#669900">'CreateLogService create &gt; '</span></span><span><span style="color:#999999">,</span></span><span><span> createLogDto</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">const</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> level </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span></span></span><span><span style="color:#990055">1</span></span><span><span style="color:#999999">,</span></span><span><span> content </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span></span></span><span><span style="color:#669900">''</span></span><span><span style="color:#999999">,</span></span><span><span> category </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span></span></span><span><span style="color:#669900">'INFO'</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span> createLogDto </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">||</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">const</span></span><span><span> str </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span> content</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">trim</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">if</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">!</span></span><span><span>str</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span></span></span><span><span style="color:#dd4a68">getErrRes</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#990055">500</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#669900">'日誌內容為空'</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">const</span></span><span><span> item </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span>
      level</span></span><span><span style="color:#999999">,</span></span><span><span>
      category</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#708090">// Tips: 為防止外部數據進行數據注入，我們可以對內容進行 encode 處理。</span></span><span><span></span></span><span><span style="color:#708090">// content: encodeURIComponent(str),</span></span><span><span>
      content</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span> str</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">await</span></span><span><span></span></span><span><span style="color:#0077aa">this</span></span><span><span style="color:#999999">.</span></span><span><span>logModel</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">create</span></span><span><span style="color:#999999">(</span></span><span><span>item</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span></span></span><span><span style="color:#dd4a68">getSucVoidRes</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span></span></code></pre><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>一路操作猛如虎，回頭一看嘿嘿嘿～終於，我們收到了來自外界的第一條數據！</span></span></span><span><span><code><span> hello world！</span></code></span></span></p><div><img alt="" height="455" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-09-22-11-32UjXKHV8myXikTQj.jpg" width="530" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span>﻿</span></span></span><span><span><span>﻿</span></span></span></p><div><img alt="" height="406" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-09-22-11-32Yip7Bh7Tjx23VV9.jpg" width="530" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span>﻿</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><strong><span>連接及創建數據成功！此時已經完成基礎功能啦～</span></strong></span></span></p><span id="OSC_h1_4"></span><h1><span><span><span>第三步、實現 </span></span></span><span><span><code><span>CRUD</span></code></span></span><span><span><span> 基礎功能</span></span></span></h1><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>剩下的內容，其實大家可以自行腦補了，就是調用數據庫的操作邏輯。先説説什麼是 </span></span></span><span><span><code><span>CRUD</span></code></span></span></p><ul><li><span><span><span><code><span>C</span></code></span></span><span><span><span> create 創建</span></span></span></span></li><li><span><span><span><code><span>R</span></code></span></span><span><span><span> read 讀取</span></span></span></span></li><li><span><span><span><code><span>U</span></code></span></span><span><span><span> update 更新</span></span></span></span></li><li><span><span><span><code><span>D</span></code></span></span><span><span><span> delete 刪除</span></span></span></span></li></ul><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>下面給個簡單示例，大家看看，剩下就去找文檔，實現業務邏輯即可：</span></span></span></p><pre><code><span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> Injectable </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'@nestjs/common'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> InjectModel </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'@nestjs/sequelize'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> User </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'./user.model'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span>@Injectable</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#0077aa">export</span></span><span><span></span></span><span><span style="color:#0077aa">class</span></span><span><span></span></span><span><span style="color:#dd4a68">UserService</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#dd4a68">constructor</span></span><span><span style="color:#999999">(</span></span><span><span></span></span><span><span>@InjectModel</span></span><span><span style="color:#999999">(</span></span><span><span>User</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#0077aa">private</span></span><span><span> userModel</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#0077aa">typeof</span></span><span><span> User</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#708090">// 創建新數據</span></span><span><span></span></span><span><span style="color:#0077aa">async</span></span><span><span></span></span><span><span style="color:#dd4a68">create</span></span><span><span style="color:#999999">(</span></span><span><span>user</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span> User</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">const</span></span><span><span> newUser </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span></span></span><span><span style="color:#0077aa">await</span></span><span><span></span></span><span><span style="color:#0077aa">this</span></span><span><span style="color:#999999">.</span></span><span><span>userModel</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">create</span></span><span><span style="color:#999999">(</span></span><span><span>user</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span> newUser</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#708090">// 查找所有數據</span></span><span><span></span></span><span><span style="color:#0077aa">async</span></span><span><span></span></span><span><span style="color:#dd4a68">findAll</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span></span></span><span><span style="color:#0077aa">this</span></span><span><span style="color:#999999">.</span></span><span><span>userModel</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">findAll</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#708090">// 按要求查找單個</span></span><span><span></span></span><span><span style="color:#0077aa">async</span></span><span><span></span></span><span><span style="color:#dd4a68">findOne</span></span><span><span style="color:#999999">(</span></span><span><span>id</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">string</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span></span></span><span><span style="color:#0077aa">this</span></span><span><span style="color:#999999">.</span></span><span><span>userModel</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">findOne</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">{</span></span><span><span> where</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> id </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#708090">// 按要求更新</span></span><span><span></span></span><span><span style="color:#0077aa">async</span></span><span><span></span></span><span><span style="color:#dd4a68">update</span></span><span><span style="color:#999999">(</span></span><span><span>id</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">string</span></span><span><span style="color:#999999">,</span></span><span><span> user</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span> User</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">await</span></span><span><span></span></span><span><span style="color:#0077aa">this</span></span><span><span style="color:#999999">.</span></span><span><span>userModel</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">update</span></span><span><span style="color:#999999">(</span></span><span><span>user</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> where</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> id </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span></span></span><span><span style="color:#0077aa">this</span></span><span><span style="color:#999999">.</span></span><span><span>userModel</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">findOne</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">{</span></span><span><span> where</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> id </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#708090">// 按要求刪除</span></span><span><span></span></span><span><span style="color:#0077aa">async</span></span><span><span></span></span><span><span style="color:#0077aa">delete</span></span><span><span style="color:#999999">(</span></span><span><span>id</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">string</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">const</span></span><span><span> user </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span></span></span><span><span style="color:#0077aa">await</span></span><span><span></span></span><span><span style="color:#0077aa">this</span></span><span><span style="color:#999999">.</span></span><span><span>userModel</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">findOne</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">{</span></span><span><span> where</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> id </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">await</span></span><span><span> user</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">destroy</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#999999">}</span></span></span></code></pre><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><code><span>Tips:</span></code></span></span><span><span><span> 進行刪除的時候，我們可以進行假刪除，兩個數據庫，一個是備份數據庫，一個是主數據庫。主數據庫可以直接刪除或者增加標識表示刪除。備份數據庫，可以不用刪除只寫入和更新操作，這樣可以進行數據還原操作。 </span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>此外，為了防止 SQL 數據庫注入，大家需要對數據來源進行統一校驗處理或者直接進行 encode 處理，對於重要數據可以直接進行 MD5 加密處理，防止數據庫被直接下載泄露。關於 SQL 數據庫的安全處理，網上教程有很多，大家找一找就可以啦～</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>部署就比較簡單了，我們就不需要一一贅述了，數據庫可以用集團提供的雲數據庫，而 Nest 就是普通的 node 部署。</span></span></span></p><blockquote><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>作者：京東零售，周明亮</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>來源：京東雲開發者社區，轉載請註明來源</span></span></span></p></blockquote></div>
                                    ]]>
            </description>
            <pubDate>Wed, 11 Oct 2023 08:44:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/4090830/blog/10116557</guid>
            <link>https://my.oschina.net/u/4090830/blog/10116557</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Gitee 推薦 | 高性能輕量級代理庫 ProxyDispatch]]>
            </title>
            <description>
                <![CDATA[<h1><a id="user-content-proxydispatch" class="anchor" href="https://gitee.com/dotnetchina/ProxyDispatch#proxydispatch"></a>ProxyDispatch</h1><p><a href="https://gitee.com/dotnetchina/ProxyDispatch/blob/master/LICENSE"><img src="https://img.shields.io/badge/license-MIT-orange?cacheSeconds=10800" alt="license" referrerpolicy="no-referrer"></a><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.nuget.org%2Fpackages%2FProxyDispatch"><img src="https://img.shields.io/nuget/v/ProxyDispatch.svg?cacheSeconds=10800" alt="nuget" referrerpolicy="no-referrer"></a><a href="https://gitee.com/dotnetchina"><img src="https://img.shields.io/badge/organization-dotNET%20China-yellow?cacheSeconds=10800" alt="dotNET China" referrerpolicy="no-referrer"></a></p><p>基於 DispatchProxy 和 Roslyn 實現的高性能輕量級代理庫，支持類、接口、同步方法、異步方法攔截。</p><h2><a id="user-content-安裝" class="anchor" href="https://gitee.com/dotnetchina/ProxyDispatch#%E5%AE%89%E8%A3%85"></a>安裝</h2><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="n">dotnet</span><span class="w"></span><span class="nx">add</span><span class="w"></span><span class="nx">package</span><span class="w"></span><span class="nx">ProxyDispatch</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><h2><a id="user-content-快速入門" class="anchor" href="https://gitee.com/dotnetchina/ProxyDispatch#%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8"></a>快速入門</h2><p>我們在<a href="https://gitee.com/link?target=https%3A%2F%2Ffurion.baiqian.ltd%2Fdocs%2Fjob%2F">主頁</a>上有不少例子，這是讓您入門的第一個：</p><ol><li>定義代理攔截器，並實現 <code>AspectDispatchProxy</code> 抽象方法：</li></ol><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="k">public</span><span class="k">class</span><span class="nc">YourClassProxy</span><span class="p">:</span><span class="n">AspectDispatchProxy</span></span><span id="LC2" class="line"><span class="p">{</span></span><span id="LC3" class="line"><span class="c1">// 攔截同步</span></span><span id="LC4" class="line"><span class="k">public</span><span class="k">override</span><span class="kt">object</span><span class="nf">Invoke</span><span class="p">(</span><span class="n">Invocation</span><span class="n">invocation</span><span class="p">)</span></span><span id="LC5" class="line"><span class="p">{</span></span><span id="LC6" class="line"><span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"~~~調用同步方法：</span><span class="p">{</span><span class="n">invocation</span><span class="p">.</span><span class="n">Method</span><span class="p">}</span><span class="s">"</span><span class="p">);</span></span><span id="LC7" class="line"><span class="kt">var</span><span class="n">result</span><span class="p">=</span><span class="n">invocation</span><span class="p">.</span><span class="nf">Proceed</span><span class="p">();</span></span><span id="LC8" class="line"><span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"~~~調用同步方法結束，返回值：</span><span class="p">{</span><span class="n">result</span><span class="p">}</span><span class="s">"</span><span class="p">);</span></span><span id="LC9" class="line"><span class="k">return</span><span class="n">result</span><span class="p">;</span></span><span id="LC10" class="line"><span class="p">}</span></span><span id="LC11" class="line"></span><span id="LC12" class="line"><span class="c1">// 攔截異步</span></span><span id="LC13" class="line"><span class="k">public</span><span class="k">override</span><span class="k">async</span><span class="n">Task</span><span class="nf">InvokeAsync</span><span class="p">(</span><span class="n">Invocation</span><span class="n">invocation</span><span class="p">)</span></span><span id="LC14" class="line"><span class="p">{</span></span><span id="LC15" class="line"><span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"~~~調用異步 Task 方法：</span><span class="p">{</span><span class="n">invocation</span><span class="p">.</span><span class="n">Method</span><span class="p">}</span><span class="s">"</span><span class="p">);</span></span><span id="LC16" class="line"><span class="k">await</span><span class="n">invocation</span><span class="p">.</span><span class="nf">ProceedAsync</span><span class="p">();</span></span><span id="LC17" class="line"><span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"~~~調用異步 Task 方法結束"</span><span class="p">);</span></span><span id="LC18" class="line"><span class="p">}</span></span><span id="LC19" class="line"></span><span id="LC20" class="line"><span class="c1">// 攔截異步帶返回值</span></span><span id="LC21" class="line"><span class="k">public</span><span class="k">override</span><span class="k">async</span><span class="n">Task</span><span class="p">&lt;</span><span class="n">T</span><span class="p">&gt;</span><span class="n">InvokeAsync</span><span class="p">&lt;</span><span class="n">T</span><span class="p">&gt;(</span><span class="n">Invocation</span><span class="n">invocation</span><span class="p">)</span></span><span id="LC22" class="line"><span class="p">{</span></span><span id="LC23" class="line"><span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"~~~調用異步 Task&lt;T&gt; 方法：</span><span class="p">{</span><span class="n">invocation</span><span class="p">.</span><span class="n">Method</span><span class="p">}</span><span class="s">"</span><span class="p">);</span></span><span id="LC24" class="line"><span class="kt">var</span><span class="n">result</span><span class="p">=</span><span class="k">await</span><span class="n">invocation</span><span class="p">.</span><span class="n">ProceedAsync</span><span class="p">&lt;</span><span class="n">T</span><span class="p">&gt;();</span></span><span id="LC25" class="line"><span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"~~~調用異步 Task&lt;T&gt; 方法結束，返回值：</span><span class="p">{</span><span class="n">result</span><span class="p">}</span><span class="s">"</span><span class="p">);</span></span><span id="LC26" class="line"><span class="k">return</span><span class="n">result</span><span class="p">;</span></span><span id="LC27" class="line"><span class="p">}</span></span><span id="LC28" class="line"><span class="p">}</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><ol start="2"><li>定義需要攔截的類和接口：</li></ol><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="k">public</span><span class="k">class</span><span class="nc">YourClass</span><span class="p">:</span><span class="n">IYourClass</span></span><span id="LC2" class="line"><span class="p">{</span></span><span id="LC3" class="line"><span class="c1">// 同步方法</span></span><span id="LC4" class="line"><span class="k">public</span><span class="kt">string</span><span class="nf">SyncMethod</span><span class="p">(</span><span class="kt">string</span><span class="n">str</span><span class="p">)</span></span><span id="LC5" class="line"><span class="p">{</span></span><span id="LC6" class="line"><span class="k">return</span><span class="n">str</span><span class="p">;</span></span><span id="LC7" class="line"><span class="p">}</span></span><span id="LC8" class="line"></span><span id="LC9" class="line"><span class="c1">// 異步方法</span></span><span id="LC10" class="line"><span class="k">public</span><span class="k">async</span><span class="n">Task</span><span class="nf">AsyncMethod</span><span class="p">()</span></span><span id="LC11" class="line"><span class="p">{</span></span><span id="LC12" class="line"><span class="k">await</span><span class="n">Task</span><span class="p">.</span><span class="n">CompletedTask</span><span class="p">;</span></span><span id="LC13" class="line"><span class="p">}</span></span><span id="LC14" class="line"></span><span id="LC15" class="line"><span class="c1">// 異步方法帶返回值</span></span><span id="LC16" class="line"><span class="k">public</span><span class="k">async</span><span class="n">Task</span><span class="p">&lt;</span><span class="kt">int</span><span class="p">&gt;</span><span class="nf">AsyncMethodWithResult</span><span class="p">(</span><span class="kt">int</span><span class="n">num</span><span class="p">)</span></span><span id="LC17" class="line"><span class="p">{</span></span><span id="LC18" class="line"><span class="k">await</span><span class="n">Task</span><span class="p">.</span><span class="nf">Delay</span><span class="p">(</span><span class="m">10</span><span class="p">);</span></span><span id="LC19" class="line"><span class="k">return</span><span class="n">num</span><span class="p">+</span><span class="m">100</span><span class="p">;</span></span><span id="LC20" class="line"><span class="p">}</span></span><span id="LC21" class="line"></span><span id="LC22" class="line"><span class="c1">// 泛型方法</span></span><span id="LC23" class="line"><span class="k">public</span><span class="n">T</span><span class="n">GenericMethod</span><span class="p">&lt;</span><span class="n">T</span><span class="p">&gt;(</span><span class="n">T</span><span class="n">x</span><span class="p">)</span></span><span id="LC24" class="line"><span class="p">{</span></span><span id="LC25" class="line"><span class="k">return</span><span class="n">x</span><span class="p">;</span></span><span id="LC26" class="line"><span class="p">}</span></span><span id="LC27" class="line"><span class="p">}</span></span><span id="LC28" class="line"></span><span id="LC29" class="line"><span class="k">public</span><span class="k">interface</span><span class="nc">IYourClass</span></span><span id="LC30" class="line"><span class="p">{</span></span><span id="LC31" class="line"><span class="c1">// 同步方法</span></span><span id="LC32" class="line"><span class="kt">string</span><span class="nf">SyncMethod</span><span class="p">(</span><span class="kt">string</span><span class="n">str</span><span class="p">);</span></span><span id="LC33" class="line"></span><span id="LC34" class="line"><span class="c1">// 異步方法</span></span><span id="LC35" class="line"><span class="n">Task</span><span class="nf">AsyncMethod</span><span class="p">();</span></span><span id="LC36" class="line"></span><span id="LC37" class="line"><span class="c1">// 異步方法帶返回值</span></span><span id="LC38" class="line"><span class="n">Task</span><span class="p">&lt;</span><span class="kt">int</span><span class="p">&gt;</span><span class="nf">AsyncMethodWithResult</span><span class="p">(</span><span class="kt">int</span><span class="n">num</span><span class="p">);</span></span><span id="LC39" class="line"></span><span id="LC40" class="line"><span class="c1">// 泛型方法</span></span><span id="LC41" class="line"><span class="n">T</span><span class="n">GenericMethod</span><span class="p">&lt;</span><span class="n">T</span><span class="p">&gt;(</span><span class="n">T</span><span class="n">x</span><span class="p">);</span></span><span id="LC42" class="line"><span class="p">}</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><ol start="3"><li>創建攔截代理對象：</li></ol><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="c1">// 創建攔截對象</span></span><span id="LC2" class="line"><span class="kt">var</span><span class="n">yourClass</span><span class="p">=</span><span class="n">AspectDispatchProxy</span><span class="p">.</span><span class="n">Decorate</span><span class="p">&lt;</span><span class="n">IYourClass</span><span class="p">,</span><span class="n">YourClassProxy</span><span class="p">&gt;(</span><span class="k">new</span><span class="nf">YourClass</span><span class="p">());</span></span><span id="LC3" class="line"></span><span id="LC4" class="line"><span class="n">yourClass</span><span class="p">.</span><span class="nf">SyncMethod</span><span class="p">(</span><span class="s">"百小僧"</span><span class="p">);</span></span><span id="LC5" class="line"><span class="k">await</span><span class="n">yourClass</span><span class="p">.</span><span class="nf">AsyncMethod</span><span class="p">();</span></span><span id="LC6" class="line"><span class="k">await</span><span class="n">yourClass</span><span class="p">.</span><span class="nf">AsyncMethodWithResult</span><span class="p">(</span><span class="m">100</span><span class="p">);</span></span><span id="LC7" class="line"><span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"泛型方法 GenericMethod 調用，返回值："</span><span class="p">+</span><span class="n">yourClass</span><span class="p">.</span><span class="nf">GenericMethod</span><span class="p">(</span><span class="s">"Furion"</span><span class="p">));</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><p>輸出如下：</p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line">~~~調用同步方法：System.String SyncMethod<span class="o">(</span>System.String<span class="o">)</span></span><span id="LC2" class="line">~~~調用同步方法結束，返回值：百小僧</span><span id="LC3" class="line">~~~調用異步 Task 方法：System.Threading.Tasks.Task AsyncMethod<span class="o">()</span></span><span id="LC4" class="line">~~~調用異步 Task 方法結束</span><span id="LC5" class="line">~~~調用異步 Task&lt;T&gt; 方法：System.Threading.Tasks.Task<span class="sb">`</span>1[System.Int32] AsyncMethodWithResult<span class="o">(</span>Int32<span class="o">)</span></span><span id="LC6" class="line">~~~調用異步 Task&lt;T&gt; 方法結束，返回值：200</span><span id="LC7" class="line">泛型方法 GenericMethod 調用，返回值：Furion</span></pre><div class="markdown-code-block-copy-btn"></div></div></div><ol start="4"><li>還可以直接代理類，無需接口：</li></ol><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="c1">// 創建攔截對象（無依賴接口）</span></span><span id="LC2" class="line"><span class="kt">var</span><span class="n">yourClassNoInterface</span><span class="p">=</span><span class="n">AspectDispatchProxy</span><span class="p">.</span><span class="n">DecorateClass</span><span class="p">&lt;</span><span class="n">YourClass</span><span class="p">,</span><span class="n">YourClassProxy</span><span class="p">&gt;(</span><span class="k">new</span><span class="nf">YourClass</span><span class="p">());</span></span><span id="LC3" class="line"></span><span id="LC4" class="line"><span class="n">yourClassNoInterface</span><span class="p">.</span><span class="nf">SyncMethod</span><span class="p">(</span><span class="s">"百小僧"</span><span class="p">);</span></span><span id="LC5" class="line"><span class="k">await</span><span class="n">yourClassNoInterface</span><span class="p">.</span><span class="nf">AsyncMethod</span><span class="p">();</span></span><span id="LC6" class="line"><span class="k">await</span><span class="n">yourClassNoInterface</span><span class="p">.</span><span class="nf">AsyncMethodWithResult</span><span class="p">(</span><span class="m">100</span><span class="p">);</span></span><span id="LC7" class="line"><span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"泛型方法 GenericMethod 調用，返回值："</span><span class="p">+</span><span class="n">yourClassNoInterface</span><span class="p">.</span><span class="nf">GenericMethod</span><span class="p">(</span><span class="s">"Furion"</span><span class="p">));</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><p><a href="https://gitee.com/dotnetchina/ProxyDispatch">更多文檔</a></p><h2><a id="user-content-文檔" class="anchor" href="https://gitee.com/dotnetchina/ProxyDispatch#%E6%96%87%E6%A1%A3"></a>文檔</h2><p>您可以在<a href="https://gitee.com/dotnetchina/ProxyDispatch">主頁</a>找到 ProxyDispatch 文檔。</p><h2><a id="user-content-貢獻" class="anchor" href="https://gitee.com/dotnetchina/ProxyDispatch#%E8%B4%A1%E7%8C%AE"></a>貢獻</h2><p>該存儲庫的主要目的是繼續發展 ProxyDispatch 核心，使其更快、更易於使用。ProxyDispatch 的開發在 <a href="https://gitee.com/dotnetchina/ProxyDispatch">Gitee</a> 上公開進行，我們感謝社區貢獻錯誤修復和改進。</p><h2><a id="user-content-許可證" class="anchor" href="https://gitee.com/dotnetchina/ProxyDispatch#%E8%AE%B8%E5%8F%AF%E8%AF%81"></a>許可證</h2><p>ProxyDispatch 採用 <a href="https://gitee.com/dotnetchina/ProxyDispatch/blob/master/LICENSE">MIT</a> 開源許可證。</p>]]>
            </description>
            <pubDate>Wed, 11 Oct 2023 08:03:00 GMT</pubDate>
            <guid isPermaLink="false">https://gitee.com/dotnetchina/ProxyDispatch</guid>
            <link>https://gitee.com/dotnetchina/ProxyDispatch</link>
        </item>
        <item>
            <title>
                <![CDATA[PgHero —— PostgreSQL 性能儀錶板]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="text-align:start">pghero&nbsp;是一個&nbsp;<span><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>Postgres 的性能儀錶板。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:start"><span><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span><a href="https://pghero.dokkuapp.com/">查看實際效果</a></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:start"><span><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span><img alt="" height="294" src="https://static.oschina.net/uploads/space/2023/0912/163042_vtOX_4252687.png" width="500" referrerpolicy="no-referrer"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:start"><span><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>PgHero 可作為 Docker </span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="background-color:#ffffff; color:#1f2328">image</span><span><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>、Linux 軟件包和 Rails 引擎使用。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:start"><span><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>選擇你喜歡的安裝方法即可開始。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><ul><li><a href="https://github.com/ankane/pghero/blob/master/guides/Docker.md">Docker</a></li><li><a href="https://github.com/ankane/pghero/blob/master/guides/Linux.md">Linux</a></li><li><a href="https://github.com/ankane/pghero/blob/master/guides/Rails.md">Rails</a></li></ul></div>
                                                                ]]>
            </description>
            <pubDate>Wed, 11 Oct 2023 08:00:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/p/pghero</guid>
            <link>https://www.oschina.net/p/pghero</link>
        </item>
        <item>
            <title>
                <![CDATA[23 歲博士生修復 Firefox 中的 22 年「幽靈老 Bug」]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>2002 年 6 月 2 日，<strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugzilla.mozilla.org%2Fshow_bug.cgi%3Fid%3D148624" target="_blank">Firefox 用户報告了一個 bug</a></strong>：當鼠標懸浮在工具欄圖標上時會展示相關提示（該項特性名為 '<strong>Tooltips</strong>'）。如果此時將瀏覽器從前台切換到後台，該提示會仍然留在前台——就像幽靈一樣。而擺脱這一惱人提示的唯一方法是再次將瀏覽器從後台切換到前台，然後將鼠標從工具欄上移開。</p><p><img src="https://static.oschina.net/uploads/space/2023/1012/144535_rfv0_2720166.png" referrerpolicy="no-referrer"></p><p>該 bug 的具體復現如下圖所示：</p><blockquote><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-1072dc8473f17b2efeb96b6ea9187bc9c42.png" referrerpolicy="no-referrer"></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-e043a3cb01187401398a4118bd1e5ef854b.png" referrerpolicy="no-referrer"></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-20a34ca97d7a8aa279fbc5404fabcda5e9c.png" referrerpolicy="no-referrer"></p></blockquote><p>22 年後 Mozilla 終於為 Firefox 修復了該 bug，對應的 Bugzilla 報告也終於關閉了。</p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugzilla.mozilla.org%2Fshow_bug.cgi%3Fid%3D148624" target="_blank"><img src="https://static.oschina.net/uploads/space/2023/1012/143953_bmr4_2720166.png" referrerpolicy="no-referrer"></a></p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Farstechnica.com%2Fgadgets%2F2023%2F10%2F22-year-old-firefox-tooltip-bug-fixed-in-a-few-lines-offering-hope-to-us-all%2F" target="_blank">根據科技媒體 arstechnica 的報道</a>，幫助修復該 bug 的是斯坦福大學的一年級電機工程博士生 Yifan Zhu，這也是他第一次向開源項目貢獻補丁。</p><p><img src="https://static.oschina.net/uploads/space/2023/1012/145359_cKbi_2720166.png" referrerpolicy="no-referrer"></p><p><em>▲&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ffanzhuyifan.github.io%2F" target="_blank">https://fanzhuyifan.github.io/</a></em></p><p>Zhu 出生於 1999 年，也就是該 bug 首次報告三年之前。他是在 Linux 上使用郵件客户端 Thunderbird 時首次遭遇該 bug，認為這個 bug 太惱人了。他試着報告該 bug，結果發現它已經存在了 22 年之久，至今還沒有修復，可能是因為它是一個小問題也不會導致崩潰處理的優先度不高。</p><p>畢竟這個 bug 僅僅影響到非常小區域的 UI，用户順手就能臨時處理，而且有很多其他比它更嚴重的 bug 在排隊等待解決，所以這個 bug 就這樣變為了「陳年老 Bug」。</p><p>於是他決定自己來修復。他知道如何編程，也正好處於博士生開始前的暑假，<strong>但此前從未向開源項目貢獻代碼，也從未在 Firefox 之類的複雜項目上工作過</strong>。</p><p>雖然衝勁十足，但 Zhu 剛開始的修 bug 之路算不上順利。他先是在整個代碼庫裏搜索 '<strong>tooltip</strong>'，然後檢查可能存在錯誤的候選內容，並插入調試打印語句跟蹤執行。這樣的工作非常耗費時間。</p><p>不過正是通過這樣的「笨方法」，Zhu 最後定位到了問題所在。當鼠標懸浮在某個元素上時，一個計時器會啓動去顯示 tooltip，在鼠標移出事件後計時器將會取消。但使用快捷鍵切換窗口或虛擬桌面時，Firefox 沒有取消計時器。Zhu 遞交了補丁，<strong>讓 tooltip 的顯示基於 Firefox 失去焦點而不是鼠標離開應用</strong>。</p><p>幾個小時後，Zhu 收到 Mozilla 資深軟件工程師 Emilio Cobos Álvarez 的回覆，他幫助完善了 Zhu 的補丁並提交到代碼庫中，並表示 Zhu 的第一個 Firefox 補丁令人印象深刻。</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 11 Oct 2023 07:07:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261435/22-year-old-firefox-tooltip-bug-fixed</guid>
            <link>https://www.oschina.net/news/261435/22-year-old-firefox-tooltip-bug-fixed</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
    </channel>
</rss>
