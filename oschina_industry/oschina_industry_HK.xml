<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[開源中國-綜合資訊]]>
        </title>
        <link>https://www.oschina.net/news/industry</link>
        <atom:link href="https://rsshub.app/oschina/news/industry" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[開源中國-綜合資訊 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Sun, 04 Feb 2024 04:08:17 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[完蛋！我把 AI 喂吐了！]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><strong>當我們用 RAG 構建一個知識庫問答應用的時候，總是希望知識庫裏面灌的數據越多，問答的效果越好，事實真是如此嗎？這篇文章給大家答案。</strong></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-dfdd57c27b133d44a1db4b25502172f74c3.png" referrerpolicy="no-referrer"></p><p><strong>引言</strong><br> 在人工智能問答系統的發展中，RAG（Retrieval-Augmented Generation）技術以其獨特的檢索增強生成方式，為減少大模型幻覺開闢了新的天地。然而，在實際落地過程中有一個很大的疑問：RAG 系統，數據越多效果越好嗎？本文將深入分析數據量如何影響 RAG 系統的問答效果，並討論如何優化這一系統以適應不斷增長的海量數據。</p><p><strong>什麼是 RAG？</strong><br> 大型語言模型（LLMs）已經展現出了強大的能力，但在實際應用中仍面臨很多挑戰，如模型幻覺、知識更新緩慢以及答案缺乏可信度等。LLM 雖然是在非常龐大的數據集上訓練的，但並不是在您的數據上訓練的。檢索增強生成（RAG）通過將您的數據鏈接到 LLMs 來解決這個問題。</p><p>RAG 是一種將知識檢索與生成模型相結合的技術，可以提高問答系統的準確性和相關性。它通過從外部知識源中動態檢索信息，並將檢索到的數據作為參考來組織答案，從而能有效緩解 LLM 中存在的幻覺問題。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-21528f3b3673b9c485e34ff04483f4fa81d.png" referrerpolicy="no-referrer"></p><p style="text-align:center">RAG 系統</p><p>RAG 的工作流程主要包含三個模塊：</p><ul><li><strong>索引（indexing）</strong>：文本索引的構建包括以下步驟：文檔解析、文本分塊、Embedding 向量化和創建索引。先將不同格式的原始文件解析轉換為純文本，再把文本切分成較小的文本塊。通過 Embedding 為每一個文本塊生成一個向量表示，用於計算文本向量和問題向量之間的相似度。創建索引將原始文本塊和 Embedding 向量以鍵值對的形式存儲，以便將來進行快速和頻繁的搜索。</li><li><strong>檢索（Retrieval）</strong>：使用 Embedding 模型將用户輸入問題轉換為向量，計算問題的 Embedding 向量和語料庫中文本塊 Embedding 向量之間的相似度，選擇相似度最高的前 K 個文檔塊作為當前問題的增強上下文信息。</li><li><strong>生成（Generation）</strong>：將檢索得到的前 K 個文本塊和用户問題一起送進大模型，讓大模型基於給定的文本塊來回答用户的問題。</li></ul><p>有關 RAG 更全面的信息請參閲綜述論文：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Farxiv.org%2Fpdf%2F2312.10997.pdf" target="_blank">Retrieval-Augmented Generation for Large Language Models: A Survey</a>，不想閲讀原始英文論文？<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fread.youdao.com%2F%23%2Fhome" target="_blank">使用「有道速讀」快速瞭解什麼是 RAG？</a></p><p><strong>RAG 系統：數據越多，效果越好嗎？</strong><br> 從宏觀層面來看，RAG 包含兩個核心的要素：數據和系統。RAG 的應用場景非常多，包括文檔助手，智能客服機器人，領域/行業知識庫問答等。不同的應用場景優化的側重點可能有所差異。</p><p>對於文檔助手這類應用來説，數據是已知的，我就上傳幾篇文檔，就針對這些文檔來問問題。我們幾乎不用關注數據側的事情，把精力放在優化系統就可以了。</p><p>而對於領域/行業知識庫問答來説，需要從數據側和系統側同時優化。因為如果用户問題回答不上來，有可能是沒相關數據，也有可能是有數據但 RAG 系統沒找到。</p><p>數據側的優化很「簡單」，就是儘可能多的收集領域內相關的數據，通通灌進知識庫裏面。但是， <strong>請先彆着急！</strong>在開始組織人力收集整理數據之前，我們首先得弄清楚一件事情：RAG 系統，數據越多，效果越好嗎？</p><p><strong>如果</strong>答案是肯定的，意味着：</p><ol><li><strong>海量數據放心灌，</strong>我可以一批一批地往知識庫中加數據，不用擔心數據量太大相互幹擾導致效果不佳。</li><li><strong>快速迭代快速優化，</strong>對於上線之後的 badcase，業務側可以直接通過加相應數據來快速迭代優化。</li><li><strong>降低數據成本</strong>，收集和整理的成本，不用費勁心思去做數據去重和髒數據的處理。</li><li><strong>增加系統的穩定性，</strong>如果我加的數據不相關，問答的效果不一定會變好，但是起碼能保證以前的效果不會變差。</li></ol><p>反之，那工作量可就大了😭</p><p><strong>實驗：數據量對於問答效果的影響</strong><br> 以教育領域的知識庫問答為例，我們基於 RAG 做了一個升學百科問答的應用，專門解答用户關於高考升學規劃和志願填報政策相關的問題。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-3443e76cdb8062538f4fb914470c9aa7298.png" referrerpolicy="no-referrer"></p><p style="text-align:center">升學百科問答</p><p>升學百科問答不是給定數據，給定問題，然後只需要去優化算法或者系統的 Benchmark 任務。它的問題是開放的，數據也是開放的（你可以收集到儘可能多的相關數據來提升問答的效果）。所以優化的變量就多了一個：系統是一部分，數據也是一部分。問答效果的好壞不光取決於好的 RAG 系統，還取決於你的數據量夠不夠，覆蓋的知識全不全？如何優化 RAG 能讓它完全發揮出海量數據的價值是我們研究的重點。</p><p>關於數據量對 RAG 問答質量的影響，我們在升學百科問答項目中做了比較詳細的研究。實驗設置如下：</p><ul><li><strong>用户問題</strong>：收集了 176 個升學百科相關的問題，包括升學路徑、志願填報、選科等相關政策諮詢問題。</li><li><strong>RAG 系統：</strong>一個經典的 RAG 系統，包括文本解析切片，embedding 向量化建庫，檢索相關片段，語言模型總結問答等模塊。</li><li><strong>領域數據：</strong>我們收集了海量升學規劃相關的資料來驗證數據的問題，包括教育領域的互聯網數據，書本資料，FAQ 問答對等。</li></ul><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-519bd951fc8e8da2b60ca1c99438053376c.png" referrerpolicy="no-referrer"></p><p style="text-align:center">RAG 在升學百科問答中的實踐</p><p><strong>結果：檢索退化問題</strong><br> 我們分批往 RAG 知識庫中灌入數據，每加一批數據都做一次評測，觀察隨着數據量變大，問答效果的變化情況：</p><ul><li><strong>baseline：</strong>第一批數據加入後問答正確率有 42.6%，此時有一些問題沒回答上來是因為確實缺少相關資料。我們繼續加數據…</li><li><strong>迎來上漲：</strong>第二批加了更多數據，覆蓋知識範圍更廣。準確率提升到了 60.2%，提升非常明顯，看來加數據確實還是挺有用的。</li><li><strong>壞消息：</strong>當加入第三批數據的時候，我們最擔心的事情還是發生了。正確率急劇下降，跌了將近 8 個百分點。</li></ul><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-9b4ab65b8b57cc9614dab72bf9b3b044189.png" referrerpolicy="no-referrer"></p><p>到這裏，我們的問題有了答案，<strong>不是所的 RAG 系統都能保證：數據越多，效果越好。</strong>海量數據有可能會把 AI 喂吐，隨着數據的增多，數據之間可能會有相互幹擾，導致檢索退化的問題，影響問答的質量。</p><p><strong>具體問題具體分析</strong><br> 先抓一個典型看看，<u>大連醫科大學怎麼樣？</u>這個問題在 v2 版本（加入第三批數據前）是能回答對的，v3 版本（加入第三批數據後）回答錯了。看了一下送到 LLM 的文本片段，居然全部都是<u>大連理工大學</u>相關的信息。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-ec645d0fe9a4be46b204e35260b319c96bc.png" referrerpolicy="no-referrer"></p><p style="text-align:center">問題分析：大連醫科大學的問答結果</p><p>主要原因是第三批加入的某些文檔中恰好有<u>大連理工大學 xxx 怎麼樣</u>？的句子，和 query<u>大連醫科大學怎麼樣？</u>表面上看起來確實非常像，Embedding 給它打了比較高的分。</p><p>而類似大連醫科大學師資介紹這樣的片段相關性就稍微低了些。而 LLM 輸入 token 有限制，前面兩個最相關但是實際並不能回答 query 問題的片段就已經佔滿了 token 的窗口，只能把他倆送進 LLM 裏。結果可想而知，啥都不知道。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-ba46a78fcfeaa165d79b3d32ebff25651fa.png" referrerpolicy="no-referrer"></p><p style="text-align:center">RAG 中的檢索退化問題</p><p><strong>語義檢索：相似≠相關</strong><br> 文本片段與 query 的相似性和文本片段是否包含 query 的答案（相關性）是兩回事。RAG 中一個非常重要的矛盾點在於檢索召回的片段比較多，但是 LLM 輸入 token 是有限制，所以必須把能回答 query 問題的片段（和問題最相關）給 LLM。</p><p><strong>Embedding（Bi-Encoder）</strong><br> Embedding 也可以給出一個得分，但是這個得分描述的更多的是相似性。Embedding 本質上是一個雙編碼器，兩個文本在模型內部沒有任何信息交互。只在最後計算兩個向量的餘弦相似度時才進行唯一一次交互。所以 Embedding 檢索只能把最相似的文本片段給你，沒有能力來判斷候選文本和 query 之間的相關性。但是相似又不等於相關。</p><p>如下圖所示，從某種程度上，Embedding 其實就是在算兩個文本塊中相似字符的個數佔比，它分不清 query 中的重點是大連醫科大學，在它看來每個字符的重要性都是一樣的。感興趣的話可以計算一下下圖中紅字部分的佔比，和最後餘弦相似度的得分基本是吻合的。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-e8edc0b11333a604827f66087e138276730.png" referrerpolicy="no-referrer"></p><p style="text-align:center">Embedding 原理</p><p><strong>Rerank（Cross-Encoder）</strong><br> Rerank 本質是一個 Cross-Encoder 的模型。Cross-Encoder 能讓兩個文本片段一開始就在 BERT 模型各層中通過 self-attention 進行交互。它能夠用 self-attention 判斷出來這個 query 中的重點在於<u>大連醫科大學</u>，而不是<u>怎麼樣？</u>。所以，如下圖所示，<u>大連醫科大學怎麼樣？</u>這個 query 和<u>大連醫科大學創建於 1947 年…</u>更相關。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-8d4d65f826a971d22b34c414fb70162d841.png" referrerpolicy="no-referrer"></p><p style="text-align:center">Rerank 原理</p><p><strong>Cross-Encoder 這麼好，為什麼不直接用？</strong><br> 因為速度慢。這裏説的速度慢不是 cross-encoder 的模型比 bi-encoder 的模型速度慢。關鍵在於 bi-encoder 可以離線計算海量文本塊的向量化表示，把他們暫存在向量數據庫中，在問答檢索的時候只需要計算一個 query 的向量化表示就可以了。拿着 query 的向量表示去庫裏找最相似的文本即可。</p><p>但是 cross-encoder 需要實時計算兩個文本塊的相關度，如果候選文本有幾萬條，每一條都需要和 query 一起送進 BERT 模型中算一遍，需要實時算幾萬次。這個成本是非常巨大的。</p><p>所以，我們可以把檢索過程分為兩個階段：召回（粗排）和重排。</p><ul><li>第一個階段的目標是儘可能多的召回相似的文本片段，這個階段的文本得分排序不是特別靠譜，所以候選的 topK 可以設置大一些，比如 topK=100；</li><li>第二個階段的目標是對 100 個粗排的候選文本片段進行重新排序，用 cross-encoder 計算 100 個候選文本和 query 的相關度得分；</li></ul><p>兩階段檢索結合可以兼顧效果和效率。</p><p><strong>兩階段檢索在 RAG 中的實驗</strong><br> 我們對上面升學百科中的文本片段用 Rerank 模型再做一次排序，重排序後的結果如下圖所示，左右可以對照着看，左邊是 Rerank 之前的文本片段，右邊是 Rerank 重排之後的文本片段。可以明顯看到右邊文本片段的得分和排序更加合理，和人的感受基本上是一致的。重排序之後送進 LLM 窗口內的文本和 query 是最相關的，語言模型也能輕鬆根據相關信息回答出問題，再也不會説不知道了。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-4797d54a8067ea396396171be813ce22a06.png" referrerpolicy="no-referrer"></p><p style="text-align:center">兩階段檢索在 RAG 中的實驗</p><p><strong>QAnything：兩階段檢索問答框架</strong><br><strong>QAnything</strong> (<strong>Q</strong>uestion and <strong>A</strong>nswer based on <strong>Anything</strong>) 是致力於支持任意格式文件或數據庫的本地知識庫問答系統。基於有道自研兩階段檢索框架，能夠做到數據越多，問答效果越好！</p><p>QAnything 具有以下特點：</p><ul><li><strong>數據安全放心用，</strong>完全離線使用；</li><li><strong>跨語種知識隨意問</strong>，中英文問答隨意切換，無所謂文件是什麼語種；</li><li><strong>海量數據放心灌，</strong>兩階段向量排序，解決了大規模數據檢索退化的問題，數據越多，效果越好；</li><li><strong>生產級系統直接裝，</strong>可直接部署企業級應用；</li><li><strong>一鍵安裝輕鬆用</strong>，無需繁瑣的配置，一鍵安裝部署，拿來就用；</li><li><strong>多知識庫隨時切，</strong>支持多個知識庫聯合問答。</li><li><strong>完全開源，完全免費！</strong></li></ul><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-d7ab5597d8e97eed09547979ca0d93b826b.png" referrerpolicy="no-referrer"></p><p style="text-align:center">QAnything 系統架構</p><p>QAnything 使用的有道自研檢索組件<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnetease-youdao%2FBCEmbedding" target="_blank">BCEmbedding</a>有非常強悍的雙語和跨語種能力，能消除語義檢索裏面的中英語言之間的差異。其中包含的 embedding 和 rerank 模型均達到業界 SOTA，詳細評測指標請參考：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnetease-youdao%2FBCEmbedding%2Fblob%2Fmaster%2FDocs%2FEvaluationSummary%2Fembedding_eval_summary.md" target="_blank">有道 BECEmbedding 模型和 Rerank 模型指標彙總</a>，如果需要單獨使用 embedding 和 rerank 組件，點擊下面的鏈接進行下載：</p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnetease-youdao%2FBCEmbedding" target="_blank">https://github.com/netease-youdao/BCEmbedding</a></p><p><strong>最終結果</strong><br> 至此，我們可以在以上兩階段檢索的 QAnything 系統上重新跑前三批數據的實驗了。結果如下：</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-1bb7b39cb3f131a6c5068dc62e72bdcbda2.png" referrerpolicy="no-referrer"></p><p>在數據不變的情況，兩階段檢索問答準確率從 52.8% 提升到 65.9%，這個結果再次證明瞭一階段檢索中存在數據互相干擾的情況。兩階段檢索可以最大化的挖掘出數據的潛力，我們繼續加數據，效果能夠穩定提升。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-d8915eb8807fbceefc14299a7b320e15ae8.png" referrerpolicy="no-referrer"></p><p style="text-align:center">QAnything 實現數據越多效果越好</p><p>QAnything 兩階段檢索最大的意義不是在某一個實驗上面提升了 10 個點。它最大的意義在於讓「數據越多，效果越好」變成了現實。這是在準備開始優化一個 RAG 系統之前要確保的第一件事情。</p><p><strong>QAnything 應用</strong><br> QAnything 和有道領世聯合推出<em><strong>「AI 升學規劃師」</strong></em>。基於 QAnything 強勁的檢索增強生成能力和有道領世多年深耕的海量升學數據資料，可以為每個學生和家長配備一名私人 AI 升學規劃師，提供更加全面、專業、及時的升學規劃服務。</p><p>基於<strong><em>「QAnything」</em></strong>，有道 AI 升學規劃師在升學百科問答中準確率達到 95%，可以解答用户關於高考政策、升學路徑、學習生活以及職業規劃等各種問題。並且隨着不斷地數據補充和更新，這個準確率會一直上漲。</p><div class="ckeditor-html5-video" style="text-align:center"><video autoplay="autoplay" controls="controls" poster="https://oscimg.oschina.net/oscnet/up-072ac9e407286e5b380d0c13eaa3c9454aa.png" src="https://www.bilibili.com/video/BV1MH4y1v7MQ/?vd_source=5b7cd5db06252fb1e0b555e9b076ec34">
   &nbsp; 
 </video></div><p style="text-align:center">有道領世 AI 規劃師（Powered by QAnything）</p><p style="text-align:center">如果視頻無法播放可點擊視頻原始鏈接播放：B 站播放鏈接，可<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1MH4y1v7MQ%2F%3Fvd_source%3D5b7cd5db06252fb1e0b555e9b076ec34" target="_blank">點擊此處播放</a>。</p><p><strong>展望</strong><br> 兩階段檢索是一個大的框架，給 RAG 提供了一個好的基礎。未來可以在兩階段的基礎上做更多細緻的優化。這裏有一些想法，貼出來和大家一起探討：</p><ul><li><strong>切片策略：</strong>切片策略對檢索召回的影響非常大，目前主流的切片策略還比較機械，經常造成一些信息的損失，未來可能會出現更加智能的切片方式。</li><li><strong>多路召回：</strong>可以在 embedding 檢索的基礎上增加 BM25 檢索，或者通過 LLM 改寫 query 的方式生成多個檢索 query 增加召回率。</li><li><strong>意圖分類：</strong>不同的問題走不同的知識庫，或者用不同的處理邏輯。</li><li><strong>Agent：</strong>基於文檔的問答能做的事情非常有限，Agent 和 RAG 結合起來可以做更多事情。</li></ul><p><strong>開源</strong><br> 自從_<strong>「QAnything」</strong>_項目開放源代碼以來，受到了開發社區的熱烈歡迎和廣泛認可。截至 2024 年 2 月 1 日，項目在 GitHub 上已經積累了 3600 多個星標，這反映出了其流行度和用户對其價值的高度評價。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-cf43409261471c344f4df393c2de66133fe.png" referrerpolicy="no-referrer"></p><p>歡迎點擊下面的鏈接下載試用：</p><p>QAnything github: <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnetease-youdao%2FQAnything" target="_blank">https://github.com/netease-youdao/QAnything</a></p><p>QAnything gitee: <a href="https://gitee.com/netease-youdao/QAnything">https://gitee.com/netease-youdao/QAnything</a></p><p>歡迎大家在 GitHub 上為<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnetease-youdao%2FQAnything" target="_blank">「QAnything」</a>加星助力，方便收到新版本更新的通知！</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-bd913c4ea881c00bf7ac16c9184ac1c5d65.gif" referrerpolicy="no-referrer"></p><p><strong>參考信息</strong><br> QAnything: <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnetease-youdao%2FQAnything" target="_blank">https://github.com/netease-youdao/QAnything</a></p><p>BCEmbedding: <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnetease-youdao%2FBCEmbedding" target="_blank">https://github.com/netease-youdao/BCEmbedding</a></p><p>RAG Survery: <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Farxiv.org%2Fpdf%2F2312.10997.pdf" target="_blank">Retrieval-Augmented Generation for Large Language Models: A Survey</a></p><p>LlamaIndex RAG: <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.llamaindex.ai%2Fen%2Fstable%2Fgetting_started%2Fconcepts.html%23retrieval-augmented-generation-rag" target="_blank">https://docs.llamaindex.ai/en/stable/getting_started/concepts.html#retrieval-augmented-generation-rag</a></p><p>Cross-encoder: <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.sbert.net%2Fexamples%2Fapplications%2Fcross-encoder%2FREADME.html" target="_blank">https://www.sbert.net/examples/applications/cross-encoder/README.html</a></p><p>Sentence-BERT: <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Farxiv.org%2Fpdf%2F1908.10084.pdf" target="_blank">https://arxiv.org/pdf/1908.10084.pdf</a></p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 04 Feb 2024 03:21:14 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/youdaotech/blog/11015018</guid>
            <link>https://my.oschina.net/youdaotech/blog/11015018</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Mixtral-8x7B Pytorch 實現]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="rich_media_content js_underline_content
                       autoTypeSetting24psection
            " id="js_content"><span id="OSC_h1_1"></span><h1 data-tool="mdnice 編輯器" style="margin-top: 30px;margin-bottom: 15px;outline: 0px;font-weight: bold;font-size: 24px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;visibility: visible;" data-mpa-powered-by="yiban.io">0.前言</h1><section data-tool="mdnice 編輯器" data-website="https://www.mdnice.com" style="margin-bottom: 0px;padding-right: 10px;padding-left: 10px;outline: 0px;letter-spacing: 0px;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;line-height: 1.6;word-break: break-word;visibility: visible;"><p data-tool="mdnice 編輯器" style="padding-top: 8px;padding-bottom: 8px;outline: 0px;line-height: 26px;visibility: visible;">本文從代碼角度來談下&nbsp;<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;visibility: visible;">Mixtral 8x7B</code>&nbsp;混合專家<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;visibility: visible;">Pytorch</code>的實現</p></section><span id="OSC_h1_2"></span><h1 data-tool="mdnice 編輯器" style="margin-top: 30px;margin-bottom: 15px;outline: 0px;font-weight: bold;font-size: 24px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;visibility: visible;">1.論文概述</h1><figure data-tool="mdnice 編輯器" style="margin-top: 10px;margin-bottom: 10px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;display: flex;flex-direction: column;justify-content: center;align-items: center;visibility: visible;"><img class="rich_pages wxw-img" data-imgfileid="100006729" data-ratio="0.47229551451187335" src="https://oscimg.oschina.net/oscnet/08de9207-ec2d-4fd6-8d38-f450e6e0396e.png" data-type="png" data-w="758" style="margin-right: auto;margin-left: auto;outline: 0px;display: block;visibility: visible !important;width: 656.979px !important;" referrerpolicy="no-referrer"></figure><p data-tool="mdnice 編輯器" style="margin-bottom: 0px;padding-top: 8px;padding-bottom: 8px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;line-height: 26px;visibility: visible;"><code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;visibility: visible;">Mixtral-8x7B&nbsp;</code>引爆了<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;visibility: visible;">MoE</code>的技術方向，更多針對<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;visibility: visible;">MoE</code>優化的<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;visibility: visible;">Trick</code>出現，迴歸模型本身來解析：</p><ol data-tool="mdnice 編輯器" class="list-paddingleft-1" style="margin-top: 8px;margin-bottom: 8px;padding-left: 25px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;visibility: visible;"><li style="outline: 0px;visibility: visible;"><section style="margin-top: 5px;margin-bottom: 5px;outline: 0px;line-height: 26px;color: rgb(1, 1, 1);visibility: visible;"><code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;visibility: visible;">Mixtral 8x7B</code>&nbsp;採用了 
    <code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;visibility: visible;">sMoE</code>模型結構，模型的細節如何？路由負載均衡如何計算？代碼如何實現？ 
   </section></li><li style="outline: 0px;visibility: visible;"><section style="margin-top: 5px;margin-bottom: 5px;outline: 0px;line-height: 26px;color: rgb(1, 1, 1);visibility: visible;"><code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;visibility: visible;">Mixtral 8x7B</code>&nbsp;的訓練流程和推理流程是怎麼樣的，如何提高訓練和推理效率？ 
   </section></li><li style="outline: 0px;visibility: visible;"><section style="margin-top: 5px;margin-bottom: 5px;outline: 0px;line-height: 26px;color: rgb(1, 1, 1);visibility: visible;"><code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;visibility: visible;">Mixtral 8x7B</code>&nbsp;的模型參數是如何計算的？ 
   </section></li><li style="outline: 0px;visibility: visible;"><section style="margin-top: 5px;margin-bottom: 5px;outline: 0px;line-height: 26px;color: rgb(1, 1, 1);visibility: visible;"><code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;visibility: visible;">Mixtral 8x7B</code>&nbsp;性能硬剛 
    <code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;visibility: visible;">LLaMA2-70B</code>和 
    <code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;visibility: visible;">GPT-3.5</code>， 性能一線水準，在 
    <code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;visibility: visible;">MBPP</code>代碼能力超越 
    <code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;visibility: visible;">3.5</code></section></li></ol><figure data-tool="mdnice 編輯器" style="margin-top: 10px;margin-bottom: 10px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;display: flex;flex-direction: column;justify-content: center;align-items: center;visibility: visible;"><img class="rich_pages wxw-img" data-imgfileid="100006735" data-ratio="0.31203703703703706" src="https://oscimg.oschina.net/oscnet/570ae0a1-9cf9-4aec-abc1-eccfee1f7667.png" data-type="png" data-w="1080" style="margin-right: auto;margin-left: auto;outline: 0px;display: block;visibility: visible !important;width: 656.969px !important;" referrerpolicy="no-referrer"></figure><span id="OSC_h2_3"></span><h2 data-tool="mdnice 編輯器" style="margin-top: 30px;margin-bottom: 15px;outline: 0px;font-weight: bold;font-size: 22px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;">2. Mixtral 8x7B 模型架構和計算流程</h2><blockquote data-tool="mdnice 編輯器" style="margin-top: 20px;margin-bottom: 20px;padding: 10px 10px 10px 20px;outline: 0px;border-left-color: rgba(0, 0, 0, 0.4);color: rgb(106, 115, 125);font-size: 0.9em;letter-spacing: normal;text-align: left;text-wrap: wrap;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;border-top: none;border-right: none;border-bottom: none;overflow: auto;background: rgba(0, 0, 0, 0.05);"><p style="padding-top: 8px;padding-bottom: 8px;outline: 0px;font-size: 16px;color: black;line-height: 26px;">Mixtral is based on a&nbsp;<strong style="outline: 0px;">transformer architecture [31]</strong>&nbsp;and uses the same&nbsp;<strong style="outline: 0px;">modifications</strong>&nbsp;<strong style="outline: 0px;">as described in [18]</strong>, with the notable exceptions that Mixtral supports a fully dense context length of 32k tokens, and the&nbsp;<strong style="outline: 0px;">feed forward</strong>&nbsp;<strong style="outline: 0px;">blocks are replaced by Mixture-of-Expert layers</strong>&nbsp;(Section 2.1). The model architecture parameters are summarized in Table 1.</p></blockquote><ul data-tool="mdnice 編輯器" class="list-paddingleft-1" style="margin-top: 8px;margin-bottom: 8px;padding-left: 25px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;"><li style="outline: 0px;"><section style="margin-top: 5px;margin-bottom: 5px;outline: 0px;line-height: 26px;color: rgb(1, 1, 1);"><code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">base</code>的模型結構為 
    <code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">Transformers</code>的改版 
    <code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">Mistral-7B</code></section></li><li style="outline: 0px;"><section style="margin-top: 5px;margin-bottom: 5px;outline: 0px;line-height: 26px;color: rgb(1, 1, 1);"><code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">MoE</code>&nbsp;作用在 
    <code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">Feed Forward Blocks</code>上 
   </section></li></ul><figure data-tool="mdnice 編輯器" style="margin-top: 10px;margin-bottom: 10px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;display: flex;flex-direction: column;justify-content: center;align-items: center;"><img class="rich_pages wxw-img" data-imgfileid="100006730" data-ratio="0.46574074074074073" src="https://oscimg.oschina.net/oscnet/a4575f91-4dfa-4468-95a2-254e1ed3eadd.png" data-type="png" data-w="1080" style="margin-right: auto;margin-left: auto;outline: 0px;display: block;visibility: visible !important;width: 656.99px !important;" referrerpolicy="no-referrer"></figure><span id="OSC_h2_4"></span><h2 data-tool="mdnice 編輯器" style="margin-top: 30px;margin-bottom: 15px;outline: 0px;font-weight: bold;font-size: 22px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;">2.1 Mixtral 模型架構</h2><blockquote data-tool="mdnice 編輯器" style="margin-top: 20px;margin-bottom: 20px;padding: 10px 10px 10px 20px;outline: 0px;border-left-color: rgba(0, 0, 0, 0.4);color: rgb(106, 115, 125);font-size: 0.9em;letter-spacing: normal;text-align: left;text-wrap: wrap;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;border-top: none;border-right: none;border-bottom: none;overflow: auto;background: rgba(0, 0, 0, 0.05);"><p style="padding-top: 8px;padding-bottom: 8px;outline: 0px;font-size: 16px;color: black;line-height: 26px;">In a Transformer model, the MoE layer is applied independently per token and replaces the feed-forward (FFN) sub-block of the transformer block. For Mixtral we use the same SwiGLU architecture as the expert function Ei(x) and set K = 2. This means each token is routed to two SwiGLU sub-blocks with different sets of weights. Taking this all together, the output y for an input token x is computed as:</p></blockquote><section role="presentation" data-formula="y=\sum^{n-1}_{i=0}\text{Softmax}(\text{Top2}(x \cdot W_g))_i \cdot \text{SwiGLU}_i(x) 
" data-formula-type="block-equation" data-tool="mdnice 編輯器" style="margin-bottom: 0px;outline: 0px;letter-spacing: normal;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;text-align: center;overflow: auto;"><embed style="vertical-align: -2.819ex;width: 44.983ex;height: auto;max-width: 300% !important;" src="https://oscimg.oschina.net/oscnet/ce68f4d9-a02c-41e1-a90d-9789dedfa8e7.svg" data-type="svg+xml" data-imgfileid="100006734"></section><ul data-tool="mdnice 編輯器" class="list-paddingleft-1" style="margin-top: 8px;margin-bottom: 8px;padding-left: 25px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;"><li style="outline: 0px;"><section style="margin-top: 5px;margin-bottom: 5px;outline: 0px;line-height: 26px;color: rgb(1, 1, 1);">
     以 
    <code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">LLaMA2</code>或 
    <code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">Mistral-7B</code>來説其 
    <code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">MLP</code>都是 
    <code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">SwiGLU</code>形式 
   </section></li><li style="outline: 0px;"><section style="margin-top: 5px;margin-bottom: 5px;outline: 0px;line-height: 26px;color: rgb(1, 1, 1);">
     在 
    <code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">Mixtral-8x7B</code>中 
    <em style="outline: 0px;color: black;">每層</em>的 
    <code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">Decoder</code>層的 
    <code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">MLP</code>都以 
    <code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">sMoE</code>來替換掉 
   </section></li></ul><figure data-tool="mdnice 編輯器" style="margin-top: 10px;margin-bottom: 10px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;display: flex;flex-direction: column;justify-content: center;align-items: center;"><img class="rich_pages wxw-img" data-imgfileid="100006731" data-ratio="0.5712962962962963" src="https://oscimg.oschina.net/oscnet/81836df0-5cfd-463c-94c9-b71cbdff3faa.png" data-type="png" data-w="1080" style="margin-right: auto;margin-left: auto;outline: 0px;display: block;visibility: visible !important;width: 656.979px !important;" referrerpolicy="no-referrer"></figure><p data-tool="mdnice 編輯器" style="margin-bottom: 0px;padding-top: 8px;padding-bottom: 8px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;line-height: 26px;">Transformers Mixtral-of-Expert</p><p data-tool="mdnice 編輯器" style="margin-bottom: 0px;padding-top: 8px;padding-bottom: 8px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;line-height: 26px;">代碼實現:</p><p data-tool="mdnice 編輯器" style="margin-bottom: 0px;padding-top: 8px;padding-bottom: 8px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;line-height: 26px;">在<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">Huggingface</code>的<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">Transformers</code>框架中,&nbsp;<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">Mixtral</code>主要有兩部分組成</p><ul data-tool="mdnice 編輯器" class="list-paddingleft-1" style="margin-top: 8px;margin-bottom: 8px;padding-left: 25px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;"><li style="outline: 0px;"><section style="margin-top: 5px;margin-bottom: 5px;outline: 0px;line-height: 26px;color: rgb(1, 1, 1);"><code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">MixtralDecoderLayer</code></section></li><li style="outline: 0px;"><section style="margin-top: 5px;margin-bottom: 5px;outline: 0px;line-height: 26px;color: rgb(1, 1, 1);"><code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">MixtralSparseMoeBlock</code>：替換掉原有的 MLP 層 
   </section></li></ul><pre data-tool="mdnice 編輯器" style="margin-top: 10px;margin-bottom: 10px;outline: 0px;letter-spacing: normal;text-align: left;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;border-radius: 5px;box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;"><span style="margin-bottom: -7px;outline: 0px;display: block;background: url(&quot;https://oscimg.oschina.net/oscnet/97137f2e-9f16-422b-aac0-3a34b7643e27.svg&quot;) 10px 10px / 40px no-repeat rgb(40, 44, 52);height: 30px;width: 657px;border-radius: 5px;"></span><code style="padding: 15px 16px 16px;outline: 0px;overflow-x: auto;color: rgb(171, 178, 191);display: -webkit-box;font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;font-size: 12px;background: rgb(40, 44, 52);border-radius: 5px;">MixtralForCausalLM(<br style="outline: 0px;">  (model): MixtralModel(<br style="outline: 0px;">    (embed_tokens): Embedding(<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">32000</span>, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">128</span>)<br style="outline: 0px;">    (layers): ModuleList(<br style="outline: 0px;">      (<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">1</span>): MixtralDecoderLayer(<br style="outline: 0px;">        (self_attn): MixtralAttention(<br style="outline: 0px;">          (q_proj): Linear(in_features=<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">128</span>, out_features=<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">128</span>, bias=<span style="outline: 0px;color: rgb(86, 182, 194);line-height: 26px;">False</span>)<br style="outline: 0px;">          (k_proj): Linear(in_features=<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">128</span>, out_features=<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">128</span>, bias=<span style="outline: 0px;color: rgb(86, 182, 194);line-height: 26px;">False</span>)<br style="outline: 0px;">          (v_proj): Linear(in_features=<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">128</span>, out_features=<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">128</span>, bias=<span style="outline: 0px;color: rgb(86, 182, 194);line-height: 26px;">False</span>)<br style="outline: 0px;">          (o_proj): Linear(in_features=<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">128</span>, out_features=<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">128</span>, bias=<span style="outline: 0px;color: rgb(86, 182, 194);line-height: 26px;">False</span>)<br style="outline: 0px;">          (rotary_emb): MixtralRotaryEmbedding()<br style="outline: 0px;">        )<br style="outline: 0px;">        (block_sparse_moe): MixtralSparseMoeBlock(<br style="outline: 0px;">          (gate): Linear(in_features=<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">128</span>, out_features=<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">8</span>, bias=<span style="outline: 0px;color: rgb(86, 182, 194);line-height: 26px;">False</span>)<br style="outline: 0px;">          (experts): ModuleList(<br style="outline: 0px;">            (<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">0</span><span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">-7</span>): <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">8</span> x MixtralBLockSparseTop2MLP(<br style="outline: 0px;">              (w1): Linear(in_features=<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">128</span>, out_features=<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">256</span>, bias=<span style="outline: 0px;color: rgb(86, 182, 194);line-height: 26px;">False</span>)<br style="outline: 0px;">              (w2): Linear(in_features=<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">256</span>, out_features=<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">128</span>, bias=<span style="outline: 0px;color: rgb(86, 182, 194);line-height: 26px;">False</span>)<br style="outline: 0px;">              (w3): Linear(in_features=<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">128</span>, out_features=<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">256</span>, bias=<span style="outline: 0px;color: rgb(86, 182, 194);line-height: 26px;">False</span>)<br style="outline: 0px;">              (act_fn): SiLU()<br style="outline: 0px;">            )<br style="outline: 0px;">          )<br style="outline: 0px;">        )<br style="outline: 0px;">        (input_layernorm): MixtralRMSNorm()<br style="outline: 0px;">        (post_attention_layernorm): MixtralRMSNorm()<br style="outline: 0px;">      )<br style="outline: 0px;">    )<br style="outline: 0px;">    (norm): MixtralRMSNorm()<br style="outline: 0px;">  )<br style="outline: 0px;"></code></pre><span id="OSC_h2_5"></span><h2 data-tool="mdnice 編輯器" style="margin-top: 30px;margin-bottom: 15px;outline: 0px;font-weight: bold;font-size: 22px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;">2.2 SMoE 層實現</h2><span id="OSC_h3_6"></span><h3 data-tool="mdnice 編輯器" style="margin-top: 30px;margin-bottom: 15px;outline: 0px;font-weight: bold;font-size: 20px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;">2.2.1 單個 Expert 實現</h3><section data-tool="mdnice 編輯器" data-website="https://www.mdnice.com" style="margin-bottom: 0px;padding-right: 10px;padding-left: 10px;outline: 0px;letter-spacing: 0px;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;line-height: 1.6;word-break: break-word;"><pre data-tool="mdnice 編輯器" style="margin-top: 10px;margin-bottom: 10px;outline: 0px;border-radius: 5px;box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;"><span style="margin-bottom: -7px;outline: 0px;display: block;background: url(&quot;https://oscimg.oschina.net/oscnet/97137f2e-9f16-422b-aac0-3a34b7643e27.svg&quot;) 10px 10px / 40px no-repeat rgb(40, 44, 52);height: 30px;width: 637px;border-radius: 5px;"></span><code style="padding: 15px 16px 16px;outline: 0px;overflow-x: auto;color: rgb(171, 178, 191);display: -webkit-box;font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;font-size: 12px;background: rgb(40, 44, 52);border-radius: 5px;"><span style="outline: 0px;color: rgb(198, 120, 221);line-height: 26px;">import</span> torch<br style="outline: 0px;"><span style="outline: 0px;color: rgb(198, 120, 221);line-height: 26px;">from</span> torch <span style="outline: 0px;color: rgb(198, 120, 221);line-height: 26px;">import</span> nn<br style="outline: 0px;"><span style="outline: 0px;color: rgb(198, 120, 221);line-height: 26px;">from</span> transformers <span style="outline: 0px;color: rgb(198, 120, 221);line-height: 26px;">import</span> MixtralConfig<br style="outline: 0px;"><br style="outline: 0px;"><span style="outline: 0px;line-height: 26px;"><span style="outline: 0px;color: rgb(198, 120, 221);line-height: 26px;">class</span><span style="outline: 0px;color: rgb(230, 192, 123);line-height: 26px;">MixtralBLockSparseTop2MLP</span><span style="outline: 0px;line-height: 26px;">(nn.Module)</span>:</span><br style="outline: 0px;"><span style="outline: 0px;line-height: 26px;"><span style="outline: 0px;color: rgb(198, 120, 221);line-height: 26px;">def</span><span style="outline: 0px;color: rgb(97, 174, 238);line-height: 26px;">__init__</span><span style="outline: 0px;line-height: 26px;">(self, config: MixtralConfig)</span>:</span><br style="outline: 0px;">        super().__init__()<br style="outline: 0px;">        self.ffn_dim = config.intermediate_size<br style="outline: 0px;">        self.hidden_dim = config.hidden_size<br style="outline: 0px;"><br style="outline: 0px;">        self.w1 = nn.Linear(self.hidden_dim, self.ffn_dim, bias=<span style="outline: 0px;color: rgb(86, 182, 194);line-height: 26px;">False</span>)<br style="outline: 0px;">        self.w2 = nn.Linear(self.ffn_dim, self.hidden_dim, bias=<span style="outline: 0px;color: rgb(86, 182, 194);line-height: 26px;">False</span>)<br style="outline: 0px;">        self.w3 = nn.Linear(self.hidden_dim, self.ffn_dim, bias=<span style="outline: 0px;color: rgb(86, 182, 194);line-height: 26px;">False</span>)<br style="outline: 0px;"><br style="outline: 0px;">        self.act_fn = nn.SiLU()<br style="outline: 0px;"><br style="outline: 0px;"><span style="outline: 0px;color: rgb(92, 99, 112);font-style: italic;line-height: 26px;"># Forward 是 SwiGLU</span><br style="outline: 0px;"><span style="outline: 0px;line-height: 26px;"><span style="outline: 0px;color: rgb(198, 120, 221);line-height: 26px;">def</span><span style="outline: 0px;color: rgb(97, 174, 238);line-height: 26px;">forward</span><span style="outline: 0px;line-height: 26px;">(self, hidden_states)</span>:</span><br style="outline: 0px;">        y = self.act_fn(self.w1(hidden_states)) * self.w3(hidden_states)<br style="outline: 0px;">        y = self.w2(y)<br style="outline: 0px;"><span style="outline: 0px;color: rgb(198, 120, 221);line-height: 26px;">return</span> y<br style="outline: 0px;"><br style="outline: 0px;">x = torch.randn(<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">1</span>, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">64</span>, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">128</span>)<br style="outline: 0px;">expert = MixtralBLockSparseTop2MLP(config)<br style="outline: 0px;">print(<span style="outline: 0px;color: rgb(152, 195, 121);line-height: 26px;">'單個專家為原 LLaMA 的 MLP 層'</span>)<br style="outline: 0px;">print(expert)<br style="outline: 0px;">g = expert(x)<br style="outline: 0px;">print(<span style="outline: 0px;color: rgb(152, 195, 121);line-height: 26px;">'單個專家輸入:'</span>, x.shape)<br style="outline: 0px;">print(<span style="outline: 0px;color: rgb(152, 195, 121);line-height: 26px;">'單個專家輸出結果：'</span>, g.shape)</code></pre></section><p data-tool="mdnice 編輯器" style="margin-bottom: 0px;padding-top: 8px;padding-bottom: 8px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;line-height: 26px;">結果</p><pre data-tool="mdnice 編輯器" style="margin-top: 10px;margin-bottom: 10px;outline: 0px;letter-spacing: normal;text-align: left;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;border-radius: 5px;box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;"><span style="margin-bottom: -7px;outline: 0px;display: block;background: url(&quot;https://oscimg.oschina.net/oscnet/97137f2e-9f16-422b-aac0-3a34b7643e27.svg&quot;) 10px 10px / 40px no-repeat rgb(40, 44, 52);height: 30px;width: 657px;border-radius: 5px;"></span><code style="padding: 15px 16px 16px;outline: 0px;overflow-x: auto;color: rgb(171, 178, 191);display: -webkit-box;font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;font-size: 12px;background: rgb(40, 44, 52);border-radius: 5px;">單個專家為原 LLaMA 的 MLP 層<br style="outline: 0px;">MixtralBLockSparseTop2MLP(<br style="outline: 0px;">  (w1): Linear(in_features=128, out_features=256, bias=False)<br style="outline: 0px;">  (w2): Linear(in_features=256, out_features=128, bias=False)<br style="outline: 0px;">  (w3): Linear(in_features=128, out_features=256, bias=False)<br style="outline: 0px;">  (act_fn): SiLU()<br style="outline: 0px;">)<br style="outline: 0px;">單個專家輸入:<br style="outline: 0px;">torch.Size([1, 64, 128])<br style="outline: 0px;">單個專家輸出結果：<br style="outline: 0px;">torch.Size([1, 64, 128])<br style="outline: 0px;"></code></pre><span id="OSC_h3_7"></span><h3 data-tool="mdnice 編輯器" style="margin-top: 30px;margin-bottom: 15px;outline: 0px;font-weight: bold;font-size: 20px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;">2.2.2&nbsp;混合 Expert 實現</h3><pre data-tool="mdnice 編輯器" style="margin-top: 10px;margin-bottom: 10px;outline: 0px;letter-spacing: normal;text-align: left;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;border-radius: 5px;box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;"><span style="margin-bottom: -7px;outline: 0px;display: block;background: url(&quot;https://oscimg.oschina.net/oscnet/97137f2e-9f16-422b-aac0-3a34b7643e27.svg&quot;) 10px 10px / 40px no-repeat rgb(40, 44, 52);height: 30px;width: 657px;border-radius: 5px;"></span><code style="padding: 15px 16px 16px;outline: 0px;overflow-x: auto;color: rgb(171, 178, 191);display: -webkit-box;font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;font-size: 12px;background: rgb(40, 44, 52);border-radius: 5px;"><span style="outline: 0px;line-height: 26px;"><span style="outline: 0px;color: rgb(198, 120, 221);line-height: 26px;">class</span><span style="outline: 0px;color: rgb(230, 192, 123);line-height: 26px;">MixtralSparseMoeBlock</span><span style="outline: 0px;line-height: 26px;">(nn.Module)</span>:</span><br style="outline: 0px;"><span style="outline: 0px;line-height: 26px;"><span style="outline: 0px;color: rgb(198, 120, 221);line-height: 26px;">def</span><span style="outline: 0px;color: rgb(97, 174, 238);line-height: 26px;">__init__</span><span style="outline: 0px;line-height: 26px;">(self, config)</span>:</span><br style="outline: 0px;">        super().__init__()<br style="outline: 0px;">        self.hidden_dim = config.hidden_size<br style="outline: 0px;">        self.ffn_dim = config.intermediate_size<br style="outline: 0px;">        self.num_experts = config.num_local_experts<br style="outline: 0px;">        self.top_k = config.num_experts_per_tok<br style="outline: 0px;"><br style="outline: 0px;"><span style="outline: 0px;color: rgb(92, 99, 112);font-style: italic;line-height: 26px;"># gating</span><br style="outline: 0px;">        self.gate = nn.Linear(self.hidden_dim, self.num_experts, bias=<span style="outline: 0px;color: rgb(86, 182, 194);line-height: 26px;">False</span>)<br style="outline: 0px;"><br style="outline: 0px;"><span style="outline: 0px;color: rgb(92, 99, 112);font-style: italic;line-height: 26px;"># 多個 SwiGLU MLP 層組成混合專家</span><br style="outline: 0px;">        self.experts = nn.ModuleList([MixtralBLockSparseTop2MLP(config) \<br style="outline: 0px;"><span style="outline: 0px;color: rgb(198, 120, 221);line-height: 26px;">for</span> _ <span style="outline: 0px;color: rgb(198, 120, 221);line-height: 26px;">in</span> range(self.num_experts)])<br style="outline: 0px;"><br style="outline: 0px;">x = torch.randn(<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">1</span>, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">64</span>, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">128</span>)<br style="outline: 0px;">experts = MixtralSparseMoeBlock(config)<br style="outline: 0px;">print(<span style="outline: 0px;color: rgb(152, 195, 121);line-height: 26px;">'多個專家混合專家'</span>)<br style="outline: 0px;">print(experts)<br style="outline: 0px;"></code></pre><p data-tool="mdnice 編輯器" style="margin-bottom: 0px;padding-top: 8px;padding-bottom: 8px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;line-height: 26px;">在以上我們實現了模型的關鍵結構， 但是這裏的<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">sMoE</code>的<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">Forward</code>並沒有實現</p><span id="OSC_h2_8"></span><h2 data-tool="mdnice 編輯器" style="margin-top: 30px;margin-bottom: 15px;outline: 0px;font-weight: bold;font-size: 22px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;">2.3 SMoE 計算流程</h2><figure data-tool="mdnice 編輯器" style="margin-top: 10px;margin-bottom: 10px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;display: flex;flex-direction: column;justify-content: center;align-items: center;"><img class="rich_pages wxw-img" data-imgfileid="100006740" data-ratio="0.8083333333333333" src="https://oscimg.oschina.net/oscnet/c0a489e5-d07a-48a6-86d2-943afad9c5df.png" data-type="png" data-w="1080" style="margin-right: auto;margin-left: auto;outline: 0px;display: block;visibility: visible !important;width: 656.99px !important;" referrerpolicy="no-referrer"></figure><span id="OSC_h3_9"></span><h3 data-tool="mdnice 編輯器" style="margin-top: 30px;margin-bottom: 15px;outline: 0px;font-weight: bold;font-size: 20px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;">2.3.1 Gating 流程</h3><p data-tool="mdnice 編輯器" style="margin-bottom: 0px;padding-top: 8px;padding-bottom: 8px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;line-height: 26px;">以下表示為多個<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">token</code>的<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">gating</code>計算流程</p><pre data-tool="mdnice 編輯器" style="margin-top: 10px;margin-bottom: 10px;outline: 0px;letter-spacing: normal;text-align: left;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;border-radius: 5px;box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;"><span style="margin-bottom: -7px;outline: 0px;display: block;background: url(&quot;https://oscimg.oschina.net/oscnet/97137f2e-9f16-422b-aac0-3a34b7643e27.svg&quot;) 10px 10px / 40px no-repeat rgb(40, 44, 52);height: 30px;width: 657px;border-radius: 5px;"></span><code style="padding: 15px 16px 16px;outline: 0px;overflow-x: auto;color: rgb(171, 178, 191);display: -webkit-box;font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;font-size: 12px;background: rgb(40, 44, 52);border-radius: 5px;"><span style="outline: 0px;color: rgb(92, 99, 112);font-style: italic;line-height: 26px;"># 階段一</span><br style="outline: 0px;"><span style="outline: 0px;color: rgb(92, 99, 112);font-style: italic;line-height: 26px;"># 計算稀疏 gating 值</span><br style="outline: 0px;">tokens = <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">6</span><br style="outline: 0px;">x = torch.randn(<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">1</span>, tokens, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">128</span>) <span style="outline: 0px;color: rgb(92, 99, 112);font-style: italic;line-height: 26px;"># 6 個 token</span><br style="outline: 0px;">hidden_states = x<br style="outline: 0px;">batch_size, sequence_length, hidden_dim = hidden_states.shape<br style="outline: 0px;">hidden_states = hidden_states.view(<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">-1</span>, hidden_dim)<br style="outline: 0px;"><br style="outline: 0px;"><span style="outline: 0px;color: rgb(92, 99, 112);font-style: italic;line-height: 26px;"># 每層都會產生 router_logits, 將用於最後作 load balance loss</span><br style="outline: 0px;">router_logits = experts.gate(hidden_states)<br style="outline: 0px;">print(<span style="outline: 0px;color: rgb(152, 195, 121);line-height: 26px;">f'experts.gate output router logits : \n <span style="outline: 0px;color: rgb(224, 108, 117);line-height: 26px;">{router_logits}</span>'</span>)<br style="outline: 0px;"><br style="outline: 0px;"><span style="outline: 0px;color: rgb(92, 99, 112);font-style: italic;line-height: 26px;"># 計算 TopK 的，專家 logits 和 Top2 專家的位置</span><br style="outline: 0px;">routing_weights = F.softmax(router_logits, dim=<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">1</span>, dtype=torch.float)<br style="outline: 0px;">print(<span style="outline: 0px;color: rgb(152, 195, 121);line-height: 26px;">f'softmax weight  : \n <span style="outline: 0px;color: rgb(224, 108, 117);line-height: 26px;">{routing_weights}</span>'</span>)<br style="outline: 0px;"><br style="outline: 0px;">routing_weights, selected_experts = torch.topk(routing_weights, \<br style="outline: 0px;">                                               experts.top_k, dim=<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">-1</span>)<br style="outline: 0px;">print(<span style="outline: 0px;color: rgb(152, 195, 121);line-height: 26px;">f'expert select : \n <span style="outline: 0px;color: rgb(224, 108, 117);line-height: 26px;">{selected_experts}</span>'</span>)<br style="outline: 0px;">print(<span style="outline: 0px;color: rgb(152, 195, 121);line-height: 26px;">f'topk : \n <span style="outline: 0px;color: rgb(224, 108, 117);line-height: 26px;">{routing_weights}</span>'</span>)<br style="outline: 0px;"><br style="outline: 0px;">routing_weights /= routing_weights.sum(dim=<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">-1</span>, keepdim=<span style="outline: 0px;color: rgb(86, 182, 194);line-height: 26px;">True</span>)<br style="outline: 0px;">print(<span style="outline: 0px;color: rgb(152, 195, 121);line-height: 26px;">f'topk 歸一化 : \n <span style="outline: 0px;color: rgb(224, 108, 117);line-height: 26px;">{routing_weights}</span>'</span>)<br style="outline: 0px;"><br style="outline: 0px;">routing_weights = routing_weights.to(hidden_states.dtype)<br style="outline: 0px;"><br style="outline: 0px;"><span style="outline: 0px;color: rgb(92, 99, 112);font-style: italic;line-height: 26px;">## One Hot 編碼</span><br style="outline: 0px;">expert_mask = torch.nn.functional.one_hot(selected_experts, \<br style="outline: 0px;">                                          num_classes=experts.num_experts).permute(<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">2</span>, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">1</span>, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">0</span>)<br style="outline: 0px;"><span style="outline: 0px;color: rgb(198, 120, 221);line-height: 26px;">for</span> i <span style="outline: 0px;color: rgb(198, 120, 221);line-height: 26px;">in</span> range(tokens):<br style="outline: 0px;">    print(<span style="outline: 0px;color: rgb(152, 195, 121);line-height: 26px;">f'【token_<span style="outline: 0px;color: rgb(224, 108, 117);line-height: 26px;">{i}</span>】\n'</span>, expert_mask[:,:,i])<br style="outline: 0px;"></code></pre><figure data-tool="mdnice 編輯器" style="margin-top: 10px;margin-bottom: 10px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;display: flex;flex-direction: column;justify-content: center;align-items: center;"><img class="rich_pages wxw-img" data-imgfileid="100006744" data-ratio="0.8296296296296296" src="https://oscimg.oschina.net/oscnet/1c6f9548-60de-41a6-891f-8cc9b3014138.png" data-type="png" data-w="1080" style="margin-right: auto;margin-left: auto;outline: 0px;display: block;visibility: visible !important;width: 656.99px !important;" referrerpolicy="no-referrer"></figure><p data-tool="mdnice 編輯器" style="margin-bottom: 0px;padding-top: 8px;padding-bottom: 8px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;line-height: 26px;">追蹤<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">x3</code>的結果</p><figure data-tool="mdnice 編輯器" style="margin-top: 10px;margin-bottom: 10px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;display: flex;flex-direction: column;justify-content: center;align-items: center;"><img class="rich_pages wxw-img" data-imgfileid="100006742" data-ratio="0.2518518518518518" data-type="png" data-w="1080" src="https://oscimg.oschina.net/oscnet/1b246c20-c0e4-464e-a0cb-5b43546dc042.png" style="margin-right: auto;margin-left: auto;outline: 0px;display: block;visibility: visible !important;width: 656.958px !important;" referrerpolicy="no-referrer"></figure><span id="OSC_h2_10"></span><h2 data-tool="mdnice 編輯器" style="margin-top: 30px;margin-bottom: 15px;outline: 0px;font-weight: bold;font-size: 22px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;">2.3.2 Expert 流程</h2><section role="presentation" data-formula="y = \sum ^{n-1}_{i=0}\text{Softmax}(\text{Top2}(x\cdot W_g))_i \cdot \text{SwiGLU}_i(x)
" data-formula-type="block-equation" data-tool="mdnice 編輯器" style="margin-bottom: 0px;outline: 0px;letter-spacing: normal;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;text-align: center;overflow: auto;"><embed style="vertical-align: -2.819ex;width: 44.983ex;height: auto;max-width: 300% !important;" src="https://oscimg.oschina.net/oscnet/ce68f4d9-a02c-41e1-a90d-9789dedfa8e7.svg" data-type="svg+xml" data-imgfileid="100006732"></section><ul data-tool="mdnice 編輯器" class="list-paddingleft-1" style="margin-top: 8px;margin-bottom: 8px;padding-left: 25px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;"><li style="outline: 0px;"><section style="margin-top: 5px;margin-bottom: 5px;outline: 0px;line-height: 26px;color: rgb(1, 1, 1);"><code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">sMoE</code>中是基於專家來選擇 
    <code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">token</code>來計算的 
   </section></li><li style="outline: 0px;"><section style="margin-top: 5px;margin-bottom: 5px;outline: 0px;line-height: 26px;color: rgb(1, 1, 1);"><code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">token</code>先序：左圖為 
    <code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">token3</code>選擇 
    <code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">expert 2</code>,&nbsp; 
    <code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">expert 3</code>號來計算 
    <code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">sMoE</code>結果 
   </section></li><li style="outline: 0px;"><section style="margin-top: 5px;margin-bottom: 5px;outline: 0px;line-height: 26px;color: rgb(1, 1, 1);"><code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">expert</code>先序：右圖為依次計算 
    <code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">expert2</code>和 
    <code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">expert3</code>才得出 
    <code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">token3</code>&nbsp;的 
    <code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">sMoE</code>結果 
   </section></li></ul><figure data-tool="mdnice 編輯器" style="margin-top: 10px;margin-bottom: 10px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;display: flex;flex-direction: column;justify-content: center;align-items: center;"><img class="rich_pages wxw-img" data-imgfileid="100006743" data-ratio="0.6342592592592593" src="https://oscimg.oschina.net/oscnet/fca3697d-85f8-4851-8bde-773a42c43cca.png" data-type="png" data-w="1080" style="margin-right: auto;margin-left: auto;outline: 0px;display: block;visibility: visible !important;width: 657px !important;" referrerpolicy="no-referrer"></figure><p data-tool="mdnice 編輯器" style="margin-bottom: 0px;padding-top: 8px;padding-bottom: 8px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;line-height: 26px;">代碼實現結果為：</p><pre data-tool="mdnice 編輯器" style="margin-top: 10px;margin-bottom: 10px;outline: 0px;letter-spacing: normal;text-align: left;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;border-radius: 5px;box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;"><span style="margin-bottom: -7px;outline: 0px;display: block;background: url(&quot;https://oscimg.oschina.net/oscnet/97137f2e-9f16-422b-aac0-3a34b7643e27.svg&quot;) 10px 10px / 40px no-repeat rgb(40, 44, 52);height: 30px;width: 657px;border-radius: 5px;"></span><code style="padding: 15px 16px 16px;outline: 0px;overflow-x: auto;color: rgb(171, 178, 191);display: -webkit-box;font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;font-size: 12px;background: rgb(40, 44, 52);border-radius: 5px;"><span style="outline: 0px;color: rgb(92, 99, 112);font-style: italic;line-height: 26px;">## 最終結果</span><br style="outline: 0px;">final_hidden_states = torch.zeros(<br style="outline: 0px;">    (batch_size * sequence_length, hidden_dim), \<br style="outline: 0px;">        dtype=hidden_states.dtype, device=hidden_states.device<br style="outline: 0px;">)<br style="outline: 0px;">print(<span style="outline: 0px;color: rgb(152, 195, 121);line-height: 26px;">f'final moe result shape for each token: <span style="outline: 0px;color: rgb(224, 108, 117);line-height: 26px;">{final_hidden_states.shape}</span>'</span>)<br style="outline: 0px;"><br style="outline: 0px;"><span style="outline: 0px;color: rgb(92, 99, 112);font-style: italic;line-height: 26px;"># 每個專家收集需要計算 token</span><br style="outline: 0px;"><span style="outline: 0px;color: rgb(198, 120, 221);line-height: 26px;">for</span> expert_idx <span style="outline: 0px;color: rgb(198, 120, 221);line-height: 26px;">in</span> range(experts.num_experts):<br style="outline: 0px;"><br style="outline: 0px;">    print(<span style="outline: 0px;color: rgb(152, 195, 121);line-height: 26px;">f'--------expert <span style="outline: 0px;color: rgb(224, 108, 117);line-height: 26px;">{expert_idx}</span> ---------'</span>)<br style="outline: 0px;"><br style="outline: 0px;">    expert_layer = experts.experts[expert_idx]<br style="outline: 0px;">    print(expert_mask[expert_idx])<br style="outline: 0px;">    idx, top_x = torch.where(expert_mask[expert_idx])<br style="outline: 0px;">    print(<span style="outline: 0px;color: rgb(152, 195, 121);line-height: 26px;">f'專家 <span style="outline: 0px;color: rgb(224, 108, 117);line-height: 26px;">{expert_idx}</span> 計算的樣本編號:'</span>,top_x.tolist()) <span style="outline: 0px;color: rgb(92, 99, 112);font-style: italic;line-height: 26px;"># select x_idx for expert top1</span><br style="outline: 0px;">    print(<span style="outline: 0px;color: rgb(152, 195, 121);line-height: 26px;">f'專家 <span style="outline: 0px;color: rgb(224, 108, 117);line-height: 26px;">{expert_idx}</span> top1:0, top2:1 '</span>,idx.tolist()) <span style="outline: 0px;color: rgb(92, 99, 112);font-style: italic;line-height: 26px;"># 0 is top1 ,1 is top2</span><br style="outline: 0px;">    print(<span style="outline: 0px;color: rgb(152, 195, 121);line-height: 26px;">f'有 <span style="outline: 0px;color: rgb(224, 108, 117);line-height: 26px;">{len(top_x)}</span> / <span style="outline: 0px;color: rgb(224, 108, 117);line-height: 26px;">{x.shape[<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">1</span>]}</span> token 選到專家 <span style="outline: 0px;color: rgb(224, 108, 117);line-height: 26px;">{expert_idx}</span>'</span>)<br style="outline: 0px;"><br style="outline: 0px;">    top_x_list = top_x.tolist()<br style="outline: 0px;">    idx_list = idx.tolist()<br style="outline: 0px;"><br style="outline: 0px;">    current_state = hidden_states[<span style="outline: 0px;color: rgb(86, 182, 194);line-height: 26px;">None</span>, top_x_list].reshape(<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">-1</span>, hidden_dim)<br style="outline: 0px;"><br style="outline: 0px;"><span style="outline: 0px;color: rgb(92, 99, 112);font-style: italic;line-height: 26px;"># expert_0(x) * routing_weights</span><br style="outline: 0px;">    current_hidden_states = expert_layer(current_state)  \<br style="outline: 0px;">                            * routing_weights[top_x_list, idx_list, <span style="outline: 0px;color: rgb(86, 182, 194);line-height: 26px;">None</span>]<br style="outline: 0px;"><br style="outline: 0px;"><span style="outline: 0px;color: rgb(92, 99, 112);font-style: italic;line-height: 26px;"># 將計算的單個專家結果填入到結果表裏</span><br style="outline: 0px;">    final_hidden_states.index_add_(<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">0</span>, top_x, current_hidden_states.to(hidden_states.dtype))<br style="outline: 0px;"><br style="outline: 0px;">    print(current_state.shape) <br style="outline: 0px;">    print(routing_weights[top_x_list, idx_list, <span style="outline: 0px;color: rgb(86, 182, 194);line-height: 26px;">None</span>].shape)<br style="outline: 0px;">    print(current_hidden_states.shape)<br style="outline: 0px;">    print(final_hidden_states.shape)<br style="outline: 0px;"></code></pre><p data-tool="mdnice 編輯器" style="margin-bottom: 0px;padding-top: 8px;padding-bottom: 8px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;line-height: 26px;">輸出結果為:</p><figure data-tool="mdnice 編輯器" style="margin-top: 10px;margin-bottom: 10px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;display: flex;flex-direction: column;justify-content: center;align-items: center;"><img class="rich_pages wxw-img" data-imgfileid="100006745" data-ratio="0.8870370370370371" src="https://oscimg.oschina.net/oscnet/4dbff434-6e52-42ad-9e57-99a809a779e2.png" data-type="png" data-w="1080" style="margin-right: auto;margin-left: auto;outline: 0px;display: block;visibility: visible !important;width: 656.99px !important;" referrerpolicy="no-referrer"></figure><span id="OSC_h2_11"></span><h2 data-tool="mdnice 編輯器" style="margin-top: 30px;margin-bottom: 15px;outline: 0px;font-weight: bold;font-size: 22px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;">2.4 Router Load Balence 計算</h2><p data-tool="mdnice 編輯器" style="margin-bottom: 0px;padding-top: 8px;padding-bottom: 8px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;line-height: 26px;">路由負載均衡的實現來自<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">Switch Transformers</code></p><blockquote data-tool="mdnice 編輯器" style="margin-top: 20px;margin-bottom: 20px;padding: 10px 10px 10px 20px;outline: 0px;border-left-color: rgba(0, 0, 0, 0.4);color: rgb(106, 115, 125);font-size: 0.9em;letter-spacing: normal;text-align: left;text-wrap: wrap;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;border-top: none;border-right: none;border-bottom: none;overflow: auto;background: rgba(0, 0, 0, 0.05);"><p style="padding-top: 8px;padding-bottom: 8px;outline: 0px;font-size: 16px;color: black;line-height: 26px;">Computes auxiliary load balancing loss as in Switch Transformer - implemented in Pytorch. See Switch Transformer for more details. This function implements the loss function presented in equations (4) - (6) of the paper. It aims at penalizing cases where the routing between experts is too unbalanced.</p></blockquote><span id="OSC_h3_12"></span><h3 data-tool="mdnice 編輯器" style="margin-top: 30px;margin-bottom: 15px;outline: 0px;font-weight: bold;font-size: 20px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;">2.4.1 Switch Transformers Load Balance Loss</h3><p data-tool="mdnice 編輯器" style="margin-bottom: 0px;padding-top: 8px;padding-bottom: 8px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;line-height: 26px;">該算法為<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">sMoE</code>簡化版<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">load balance&nbsp;</code>, 去除了原版&nbsp;balance loss&nbsp;<span style="outline: 0px;">估計</span></p><section data-tool="mdnice 編輯器" data-website="https://www.mdnice.com" style="margin-bottom: 0px;padding-right: 10px;padding-left: 10px;outline: 0px;letter-spacing: 0px;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;line-height: 1.6;word-break: break-word;"><section role="presentation" data-formula="loss = \alpha\cdot N\cdot \sum ^N_{i=1}f_i\cdot P_i
" data-formula-type="block-equation" data-tool="mdnice 編輯器" style="outline: 0px;text-align: center;overflow: auto;"><svg
                xmlns="http://www.w3.org/2000/svg" role="img" focusable="false" viewBox="0 -1733 10080.5 2978.9" aria-hidden="true" style="-webkit-overflow-scrolling: touch;vertical-align: -2.819ex;width: 22.806ex;height: 6.74ex;max-width: 300% !important;"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="6C" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(298, 0)"><path data-c="6F" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(783, 0)"><path data-c="73" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(1252, 0)"><path data-c="73" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mo" transform="translate(1998.8, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(3054.6, 0)"><path data-c="3B1" d="M34 156Q34 270 120 356T309 442Q379 442 421 402T478 304Q484 275 485 237V208Q534 282 560 374Q564 388 566 390T582 393Q603 393 603 385Q603 376 594 346T558 261T497 161L486 147L487 123Q489 67 495 47T514 26Q528 28 540 37T557 60Q559 67 562 68T577 70Q597 70 597 62Q597 56 591 43Q579 19 556 5T512 -10H505Q438 -10 414 62L411 69L400 61Q390 53 370 41T325 18T267 -2T203 -11Q124 -11 79 39T34 156ZM208 26Q257 26 306 47T379 90L403 112Q401 255 396 290Q382 405 304 405Q235 405 183 332Q156 292 139 224T121 120Q121 71 146 49T208 26Z"></path></g><g data-mml-node="mo" transform="translate(3916.8, 0)"><path data-c="22C5" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"></path></g><g data-mml-node="mi" transform="translate(4417, 0)"><path data-c="4E" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"></path></g><g data-mml-node="mo" transform="translate(5527.2, 0)"><path data-c="22C5" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"></path></g><g data-mml-node="munderover" transform="translate(6027.4, 0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(148.2, -1087.9) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="69" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1123, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="mi" transform="translate(408, 1150) scale(0.707)"><path data-c="4E" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"></path></g></g><g data-mml-node="msub" transform="translate(7638.1, 0)"><g data-mml-node="mi"><path data-c="66" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mi" transform="translate(490, -150) scale(0.707)"><path data-c="69" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mo" transform="translate(8644.3, 0)"><path data-c="22C5" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"></path></g><g data-mml-node="msub" transform="translate(9144.5, 0)"><g data-mml-node="mi"><path data-c="50" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mi" transform="translate(642, -150) scale(0.707)"><path data-c="69" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g></g></g></svg></section><section role="presentation" data-formula="f_i = \frac{1}{T}\sum_{x\in\mathcal{B}}\mathbb{1}\{\text{argmax }p(x)=i\}
" data-formula-type="block-equation" data-tool="mdnice 編輯器" style="outline: 0px;text-align: center;overflow: auto;"><embed style="vertical-align: -2.814ex;width: 30.879ex;height: auto;max-width: 300% !important;" src="https://oscimg.oschina.net/oscnet/a44025fc-3ccf-4c1b-9d1d-5b6c059ec916.svg" data-type="svg+xml" data-imgfileid="100006733"></section><p data-tool="mdnice 編輯器" style="padding-top: 8px;padding-bottom: 8px;outline: 0px;line-height: 26px;"><code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">fi</code>:在一個<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">batch</code>中第<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">i</code>專家分配到<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">token</code>的數量概率</p><section role="presentation" data-formula="P_i=\frac{1}{T}\sum_{x\in \mathcal{B}}p_i(x)
" data-formula-type="block-equation" data-tool="mdnice 編輯器" style="outline: 0px;text-align: center;overflow: auto;"><svg
                xmlns="http://www.w3.org/2000/svg" role="img" focusable="false" viewBox="0 -1342 7337.8 2585.8" aria-hidden="true" style="-webkit-overflow-scrolling: touch;vertical-align: -2.814ex;width: 16.601ex;height: 5.85ex;max-width: 300% !important;"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="50" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mi" transform="translate(642, -150) scale(0.707)"><path data-c="69" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mo" transform="translate(1213.7, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mfrac" transform="translate(2269.5, 0)"><g data-mml-node="mn" transform="translate(322, 676)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mi" transform="translate(220, -686)"><path data-c="54" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"></path></g><rect width="904" height="60" x="120" y="220"></rect></g><g data-mml-node="munder" transform="translate(3580.2, 0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(51.7, -1115.5) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="78" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(572, 0)"><path data-c="2208" d="M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(1239, 0)"><g data-mml-node="mi"><path data-c="42" d="M304 342Q292 342 292 353Q292 372 323 391Q331 396 417 428T533 487Q563 512 563 555V562Q563 575 557 589T530 618T475 636Q429 636 396 613T330 539Q263 446 210 238Q196 183 173 120Q135 31 121 16Q108 1 85 -10T47 -22T32 -10Q32 -5 44 18T77 93T112 206Q135 296 154 395T182 550T191 615Q191 616 190 616Q188 616 179 611T157 601T131 594Q113 594 113 605Q113 623 144 644Q154 650 205 676T267 703Q277 705 279 705Q295 705 295 693Q295 686 288 635T278 575Q278 572 287 582Q336 635 402 669T540 704Q603 704 633 673T664 599Q664 559 638 523T580 462Q553 440 504 413L491 407L504 402Q566 381 596 338T627 244Q627 172 575 110T444 13T284 -22Q208 -22 158 28Q144 42 146 50Q150 67 178 85T230 103Q236 103 246 95T267 75T302 56T357 47Q436 47 486 93Q526 136 526 198V210Q526 228 518 249T491 292T436 330T350 345Q335 345 321 344T304 342Z"></path></g></g></g></g><g data-mml-node="msub" transform="translate(5190.8, 0)"><g data-mml-node="mi"><path data-c="70" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mi" transform="translate(503, -150) scale(0.707)"><path data-c="69" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mo" transform="translate(5987.8, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(6376.8, 0)"><path data-c="78" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(6948.8, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></section><p data-tool="mdnice 編輯器" style="padding-top: 8px;padding-bottom: 8px;outline: 0px;line-height: 26px;"><code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">Pi</code>:在一個<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">batch</code>中<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">T</code>個<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">tokens</code>，各個專家選到<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">tokens</code>的概率和</p></section><p data-tool="mdnice 編輯器" style="margin-bottom: 0px;padding-top: 8px;padding-bottom: 8px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;line-height: 26px;"><img class="rich_pages wxw-img" data-imgfileid="100006748" data-ratio="0.8111111111111111" src="https://oscimg.oschina.net/oscnet/cb976fdf-8c5e-4d05-bc80-1dbabb5f288c.png" data-type="png" data-w="1080" style="margin-right: auto;margin-left: auto;outline: 0px;display: block;visibility: visible !important;width: 657px !important;" referrerpolicy="no-referrer"><span style="outline: 0px;font-size: 20px;font-weight: bold;">2.4.2&nbsp;手撕 Mixtral Load Balance Loss 計算流程</span></p><p data-tool="mdnice 編輯器" style="margin-bottom: 0px;padding-top: 8px;padding-bottom: 8px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;line-height: 26px;">可以想象下<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">layer norm</code>只是在<strong style="outline: 0px;">當前層</strong>裏對所有<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">tokens</code>&nbsp;做，而負載均衡處理範圍更廣，對<strong style="outline: 0px;">所有層</strong>的<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">tokens</code>&nbsp;，在每個<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">expert</code>的縱向計算出單專家負載值，求和便得到整個網絡的負載均衡 loss</p><figure data-tool="mdnice 編輯器" style="margin-top: 10px;margin-bottom: 10px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;display: flex;flex-direction: column;justify-content: center;align-items: center;"><img class="rich_pages wxw-img" data-imgfileid="100006749" data-ratio="1.038888888888889" src="https://oscimg.oschina.net/oscnet/50a571f0-7da0-4439-8d14-de0abd1849fc.png" data-type="png" data-w="1080" style="margin-right: auto;margin-left: auto;outline: 0px;display: block;visibility: visible !important;width: 656.99px !important;" referrerpolicy="no-referrer"></figure><span id="OSC_h3_13"></span><h3 data-tool="mdnice 編輯器" style="margin-top: 30px;margin-bottom: 15px;outline: 0px;font-weight: bold;font-size: 20px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;">2.4.3 手撕 Mixtral Load Balance</h3><pre data-tool="mdnice 編輯器" style="margin-top: 10px;margin-bottom: 10px;outline: 0px;letter-spacing: normal;text-align: left;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;border-radius: 5px;box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;"><code style="padding: 15px 16px 16px;outline: 0px;overflow-x: auto;color: rgb(171, 178, 191);display: -webkit-box;font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;font-size: 12px;background: rgb(40, 44, 52);border-radius: 5px;"><span style="outline: 0px;color: rgb(198, 120, 221);line-height: 26px;">import</span> torch<br style="outline: 0px;"><br style="outline: 0px;">num_experts = <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">8</span><br style="outline: 0px;">batch = <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">10</span><br style="outline: 0px;">seq_length = <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">6</span><br style="outline: 0px;">top_k = <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">2</span><br style="outline: 0px;"><br style="outline: 0px;">print(<span style="outline: 0px;color: rgb(152, 195, 121);line-height: 26px;">f'sMoE num_experts:<span style="outline: 0px;color: rgb(224, 108, 117);line-height: 26px;">{num_experts}</span> top_k:<span style="outline: 0px;color: rgb(224, 108, 117);line-height: 26px;">{top_k}</span> batch:<span style="outline: 0px;color: rgb(224, 108, 117);line-height: 26px;">{batch}</span> seq_length:<span style="outline: 0px;color: rgb(224, 108, 117);line-height: 26px;">{seq_length}</span>'</span>)<br style="outline: 0px;"><br style="outline: 0px;">router_logits_1 = torch.randn(batch, seq_length, num_experts).view(<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">-1</span>,num_experts) <span style="outline: 0px;color: rgb(92, 99, 112);font-style: italic;line-height: 26px;"># layer 1</span><br style="outline: 0px;">router_logits_2 = torch.randn(batch, seq_length, num_experts).view(<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">-1</span>,num_experts) <span style="outline: 0px;color: rgb(92, 99, 112);font-style: italic;line-height: 26px;"># layer 2</span><br style="outline: 0px;">router_logits = [router_logits_1, router_logits_2] <br style="outline: 0px;"><br style="outline: 0px;">concatenated_gate_logits = torch.cat(router_logits, dim = <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">0</span>)<br style="outline: 0px;">print(<span style="outline: 0px;color: rgb(152, 195, 121);line-height: 26px;">'單層 gating 的路由 logits:'</span>, router_logits_1.shape) <br style="outline: 0px;">print(<span style="outline: 0px;color: rgb(152, 195, 121);line-height: 26px;">'兩層 gating 的路由 logits:'</span>, concatenated_gate_logits.shape)<br style="outline: 0px;"><br style="outline: 0px;">print(<span style="outline: 0px;color: rgb(152, 195, 121);line-height: 26px;">'根據 logits top-k 計算熱獨編碼'</span>)<br style="outline: 0px;">routing_weights = torch.nn.functional.softmax(concatenated_gate_logits, dim=<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">-1</span>)<br style="outline: 0px;">_, selected_experts = torch.topk(routing_weights, top_k, dim=<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">-1</span>)<br style="outline: 0px;">expert_mask = torch.nn.functional.one_hot(selected_experts, num_experts)<br style="outline: 0px;">print(expert_mask.shape)<br style="outline: 0px;"><br style="outline: 0px;">tokens_sum_expert = torch.sum(expert_mask.float(), dim=<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">0</span>)<br style="outline: 0px;">tokens_per_expert = torch.mean(expert_mask.float(), dim=<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">0</span>)<br style="outline: 0px;">print(<span style="outline: 0px;color: rgb(152, 195, 121);line-height: 26px;">f'top1 每個專家平均處理的 token   :'</span>, tokens_sum_expert[<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">0</span>])<br style="outline: 0px;">print(<span style="outline: 0px;color: rgb(152, 195, 121);line-height: 26px;">f'top2 每個專家平均處理的 token fi:'</span>, tokens_per_expert[<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">1</span>])<br style="outline: 0px;">print(<span style="outline: 0px;color: rgb(152, 195, 121);line-height: 26px;">f'top1 與 top2 水平合計'</span>, tokens_per_expert.sum(dim=<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">1</span>))<br style="outline: 0px;"><br style="outline: 0px;"><span style="outline: 0px;color: rgb(92, 99, 112);font-style: italic;line-height: 26px;"># Compute the average probability of routing to these experts</span><br style="outline: 0px;">router_prob_per_expert = torch.mean(routing_weights, dim=<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">0</span>)<br style="outline: 0px;">print(<span style="outline: 0px;color: rgb(152, 195, 121);line-height: 26px;">'router_prob_per_expert Pi: '</span> , router_prob_per_expert)<br style="outline: 0px;"><br style="outline: 0px;">print( <span style="outline: 0px;color: rgb(152, 195, 121);line-height: 26px;">'每個專家的負載：'</span>,  tokens_per_expert * router_prob_per_expert.unsqueeze(<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">0</span>))<br style="outline: 0px;">overall_loss = torch.sum(tokens_per_expert * router_prob_per_expert.unsqueeze(<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">0</span>))<br style="outline: 0px;">print(<span style="outline: 0px;color: rgb(152, 195, 121);line-height: 26px;">'final loss:'</span>, overall_loss)<br style="outline: 0px;"><br style="outline: 0px;"></code></pre><p data-tool="mdnice 編輯器" style="margin-bottom: 0px;padding-top: 8px;padding-bottom: 8px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;line-height: 26px;">計算結果</p><pre data-tool="mdnice 編輯器" style="margin-top: 10px;margin-bottom: 10px;outline: 0px;letter-spacing: normal;text-align: left;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;border-radius: 5px;box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;"><span style="margin-bottom: -7px;outline: 0px;display: block;background: url(&quot;https://oscimg.oschina.net/oscnet/97137f2e-9f16-422b-aac0-3a34b7643e27.svg&quot;) 10px 10px / 40px no-repeat rgb(40, 44, 52);height: 30px;width: 657px;border-radius: 5px;"></span><code style="padding: 15px 16px 16px;outline: 0px;overflow-x: auto;color: rgb(171, 178, 191);display: -webkit-box;font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;font-size: 12px;background: rgb(40, 44, 52);border-radius: 5px;">sMoE num_experts:<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">8</span> top_k:<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">2</span> batch:<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">10</span> seq_length:<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">6</span><br style="outline: 0px;">單層 gating 的路由 logits:<br style="outline: 0px;">torch.Size([<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">60</span>, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">8</span>])<br style="outline: 0px;">兩層 gating 的路由 logits:<br style="outline: 0px;">torch.Size([<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">120</span>, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">8</span>])<br style="outline: 0px;">根據 logits top-k 計算熱獨編碼<br style="outline: 0px;">torch.Size([<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">120</span>, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">2</span>, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">8</span>])<br style="outline: 0px;">top1 每個專家平均處理的 token   : tensor([<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">10.</span>, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">14.</span>, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">19.</span>, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">17.</span>, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">14.</span>,  <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">9.</span>, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">17.</span>, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">20.</span>])<br style="outline: 0px;">top2 每個專家平均處理的 token fi: tensor([<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">0.1667</span>, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">0.1333</span>, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">0.1833</span>, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">0.0833</span>, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">0.1167</span>, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">0.1500</span>, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">0.0667</span>, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">0.1000</span>])<br style="outline: 0px;">top1 與 top2 水平合計 tensor([<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">1.</span>, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">1.</span>])<br style="outline: 0px;">router_prob_per_expert Pi:  tensor([<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">0.1236</span>, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">0.1184</span>, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">0.1351</span>, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">0.1168</span>, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">0.1311</span>, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">0.1147</span>, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">0.1156</span>, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">0.1447</span>])<br style="outline: 0px;">每個專家的負載：tensor([[<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">0.0103</span>, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">0.0138</span>, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">0.0214</span>, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">0.0165</span>, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">0.0153</span>, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">0.0086</span>, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">0.0164</span>, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">0.0241</span>],<br style="outline: 0px;">        [<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">0.0206</span>, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">0.0158</span>, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">0.0248</span>, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">0.0097</span>, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">0.0153</span>, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">0.0172</span>, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">0.0077</span>, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">0.0145</span>]])<br style="outline: 0px;">final loss: tensor(<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">0.2520</span>)<br style="outline: 0px;"></code></pre><p data-tool="mdnice 編輯器" style="margin-bottom: 0px;padding-top: 8px;padding-bottom: 8px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;line-height: 26px;">這裏的<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">gating logits</code>&nbsp;是跨<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">batch</code>跨層的，作用在每個<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">token</code>上</p><span id="OSC_h1_14"></span><h1 data-tool="mdnice 編輯器" style="margin-top: 30px;margin-bottom: 15px;outline: 0px;font-weight: bold;font-size: 24px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;">3. Mixtral 8x7B 參數量計算</h1><span id="OSC_h2_15"></span><h2 data-tool="mdnice 編輯器" style="margin-top: 30px;margin-bottom: 15px;outline: 0px;font-weight: bold;font-size: 22px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;">3.1 原論文描述</h2><p data-tool="mdnice 編輯器" style="margin-bottom: 0px;padding-top: 8px;padding-bottom: 8px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;line-height: 26px;">這裏的<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">13B</code>&nbsp;是指單個<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">&nbsp;token</code>涉及的模型參數量，實際推理時每個<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">token</code>都有不同的<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">expert</code>&nbsp;，那麼實際運行還是跑<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">47B&nbsp;</code>參數的, 使用了 sMoE 並不會減少顯存佔用。</p><figure data-tool="mdnice 編輯器" style="margin-top: 10px;margin-bottom: 10px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;display: flex;flex-direction: column;justify-content: center;align-items: center;"><img class="rich_pages wxw-img" data-imgfileid="100006750" data-ratio="0.362962962962963" src="https://oscimg.oschina.net/oscnet/9dedd8c0-fbbd-4ab8-ab42-dd864369be7d.png" data-type="png" data-w="1080" style="margin-right: auto;margin-left: auto;outline: 0px;display: block;visibility: visible !important;width: 656.969px !important;" referrerpolicy="no-referrer"></figure><span id="OSC_h2_16"></span><h2 data-tool="mdnice 編輯器" style="margin-top: 30px;margin-bottom: 15px;outline: 0px;font-weight: bold;font-size: 22px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;">3.2 模型參數量計算</h2><p data-tool="mdnice 編輯器" style="margin-bottom: 0px;padding-top: 8px;padding-bottom: 8px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;line-height: 26px;">忽略<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">GQA</code>計算</p><pre data-tool="mdnice 編輯器" style="margin-top: 10px;margin-bottom: 10px;outline: 0px;letter-spacing: normal;text-align: left;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;border-radius: 5px;box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;"><span style="margin-bottom: -7px;outline: 0px;display: block;background: url(&quot;https://oscimg.oschina.net/oscnet/97137f2e-9f16-422b-aac0-3a34b7643e27.svg&quot;) 10px 10px / 40px no-repeat rgb(40, 44, 52);height: 30px;width: 657px;border-radius: 5px;"></span><code style="padding: 15px 16px 16px;outline: 0px;overflow-x: auto;color: rgb(171, 178, 191);display: -webkit-box;font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;font-size: 12px;background: rgb(40, 44, 52);border-radius: 5px;">dim = <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">4096</span><br style="outline: 0px;">n_layers = <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">32</span><br style="outline: 0px;">head_dim = <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">128</span><br style="outline: 0px;">hidden_dim = <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">14336</span><br style="outline: 0px;">n_heads = <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">32</span><br style="outline: 0px;">n_kv_heads = <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">8</span><span style="outline: 0px;color: rgb(92, 99, 112);font-style: italic;line-height: 26px;"># ignore GQA</span><br style="outline: 0px;">vocab_size = <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">32000</span><br style="outline: 0px;">num_experts = <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">8</span><br style="outline: 0px;">top_k_experts = <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">2</span><br style="outline: 0px;"><br style="outline: 0px;"><span style="outline: 0px;color: rgb(92, 99, 112);font-style: italic;line-height: 26px;"># attention mlp layernorm</span><br style="outline: 0px;">llama_num = n_layers * (dim * dim * <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">4</span> + hidden_dim * dim * <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">3</span> + <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">2</span> * dim ) \<br style="outline: 0px;">        + <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">2</span> * vocab_size * dim <br style="outline: 0px;">print(<span style="outline: 0px;color: rgb(152, 195, 121);line-height: 26px;">'llama:'</span>, llama_num)<br style="outline: 0px;"><br style="outline: 0px;"><span style="outline: 0px;color: rgb(92, 99, 112);font-style: italic;line-height: 26px;"># attention 【mlp*8】 layernorm</span><br style="outline: 0px;">moe_num = n_layers * (dim * dim * <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">4</span> + hidden_dim * dim * <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">3</span> * <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">8</span> + <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">2</span> * dim ) \<br style="outline: 0px;">        + <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">2</span> * vocab_size * dim <br style="outline: 0px;">print(<span style="outline: 0px;color: rgb(152, 195, 121);line-height: 26px;">'moe:'</span>, moe_num)<br style="outline: 0px;"><br style="outline: 0px;"><span style="outline: 0px;color: rgb(92, 99, 112);font-style: italic;line-height: 26px;"># attention 【mlp*2】 layernorm</span><br style="outline: 0px;"><span style="outline: 0px;color: rgb(92, 99, 112);font-style: italic;line-height: 26px;"># ToP2-inference</span><br style="outline: 0px;">moe_num = n_layers * (dim * dim * <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">4</span> + hidden_dim * dim * <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">3</span> * <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">2</span> + <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">2</span> * dim ) \<br style="outline: 0px;">        + <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">2</span> * vocab_size * dim <br style="outline: 0px;">print(<span style="outline: 0px;color: rgb(152, 195, 121);line-height: 26px;">'moe top-2:'</span>, moe_num)<br style="outline: 0px;"></code></pre><p data-tool="mdnice 編輯器" style="margin-bottom: 0px;padding-top: 8px;padding-bottom: 8px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;line-height: 26px;">結果</p><pre data-tool="mdnice 編輯器" style="margin-top: 10px;margin-bottom: 10px;outline: 0px;letter-spacing: normal;text-align: left;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;border-radius: 5px;box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;"><span style="margin-bottom: -7px;outline: 0px;display: block;background: url(&quot;https://oscimg.oschina.net/oscnet/97137f2e-9f16-422b-aac0-3a34b7643e27.svg&quot;) 10px 10px / 40px no-repeat rgb(40, 44, 52);height: 30px;width: 657px;border-radius: 5px;"></span><code style="padding: 15px 16px 16px;outline: 0px;overflow-x: auto;color: rgb(171, 178, 191);display: -webkit-box;font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;font-size: 12px;background: rgb(40, 44, 52);border-radius: 5px;">llama: 8047034368<br style="outline: 0px;">moe: 47507046400<br style="outline: 0px;">moe top-2: 13684178944<br style="outline: 0px;"></code></pre><span id="OSC_h1_17"></span><h1 data-tool="mdnice 編輯器" style="margin-top: 30px;margin-bottom: 15px;outline: 0px;font-weight: bold;font-size: 24px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;">4. MoE 擴展</h1><span id="OSC_h2_18"></span><h2 data-tool="mdnice 編輯器" style="margin-top: 30px;margin-bottom: 15px;outline: 0px;font-weight: bold;font-size: 22px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;">4.1 MegaBlocks</h2><blockquote data-tool="mdnice 編輯器" style="margin-top: 20px;margin-bottom: 20px;padding: 10px 10px 10px 20px;outline: 0px;border-left-color: rgba(0, 0, 0, 0.4);color: rgb(106, 115, 125);font-size: 0.9em;letter-spacing: normal;text-align: left;text-wrap: wrap;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;border-top: none;border-right: none;border-bottom: none;overflow: auto;background: rgba(0, 0, 0, 0.05);"><p style="padding-top: 8px;padding-bottom: 8px;outline: 0px;font-size: 16px;color: black;line-height: 26px;">MoE layers can be run efficiently on single GPUs with high performance specialized kernels. For example,&nbsp;<strong style="outline: 0px;">Megablocks</strong></p></blockquote><p data-tool="mdnice 編輯器" style="margin-bottom: 0px;padding-top: 8px;padding-bottom: 8px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;line-height: 26px;"><code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">MegaBlocks</code>實現稀疏的<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">MoE</code>計算</p><figure data-tool="mdnice 編輯器" style="margin-top: 10px;margin-bottom: 10px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;display: flex;flex-direction: column;justify-content: center;align-items: center;"><img class="rich_pages wxw-img" data-imgfileid="100006753" data-ratio="0.26481481481481484" src="https://oscimg.oschina.net/oscnet/e1bfdd99-c538-4ff0-abdc-f9abb0d217f0.png" data-type="png" data-w="1080" style="margin-right: auto;margin-left: auto;outline: 0px;display: block;visibility: visible !important;width: 656.979px !important;" referrerpolicy="no-referrer"></figure><section data-tool="mdnice 編輯器" data-website="https://www.mdnice.com" style="margin-bottom: 0px;padding-right: 10px;padding-left: 10px;outline: 0px;letter-spacing: 0px;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);font-size: 16px;color: black;line-height: 1.6;word-break: break-word;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;"><p data-tool="mdnice 編輯器" style="padding-top: 8px;padding-bottom: 8px;outline: 0px;line-height: 26px;">題外話：<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">XFormers</code>也實現了類似思想的算子，<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">batch</code>裏的<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">attention</code>通過<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">Mask</code>實現多序列稀疏計算。</p></section><figure data-tool="mdnice 編輯器" style="margin-top: 10px;margin-bottom: 10px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;display: flex;flex-direction: column;justify-content: center;align-items: center;"><img class="rich_pages wxw-img" data-imgfileid="100006755" data-ratio="0.2351851851851852" data-type="png" data-w="1080" src="https://oscimg.oschina.net/oscnet/78f9ff04-18ec-4713-8eab-f99b63be1268.png" style="margin-right: auto;margin-left: auto;outline: 0px;display: block;visibility: visible !important;width: 656.969px !important;" referrerpolicy="no-referrer"></figure><span id="OSC_h2_19"></span><h2 data-tool="mdnice 編輯器" style="margin-top: 30px;margin-bottom: 15px;outline: 0px;font-weight: bold;font-size: 22px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;">4.2 GShard</h2><p data-tool="mdnice 編輯器" style="margin-bottom: 0px;padding-top: 8px;padding-bottom: 8px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;line-height: 26px;"><code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">Mixtral</code>論文裏在<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">load balance</code>裏提了一下<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">GShard</code>, 是首篇將<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">MoE</code>引入到<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">Transformers</code>的工作</p><blockquote data-tool="mdnice 編輯器" style="margin-top: 20px;margin-bottom: 20px;padding: 10px 10px 10px 20px;outline: 0px;border-left-color: rgba(0, 0, 0, 0.4);color: rgb(106, 115, 125);font-size: 0.9em;letter-spacing: normal;text-align: left;text-wrap: wrap;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;border-top: none;border-right: none;border-bottom: none;overflow: auto;background: rgba(0, 0, 0, 0.05);"><p style="padding-top: 8px;padding-bottom: 8px;outline: 0px;font-size: 16px;color: black;line-height: 26px;">This formulation is similar to the GShard architecture [21], with the exceptions that we replace all FFN sub-blocks by MoE layers while GShard replaces every other block, and that GShard uses a more elaborate gating strategy for the second expert assigned to each token.</p></blockquote><p data-tool="mdnice 編輯器" style="margin-bottom: 0px;padding-top: 8px;padding-bottom: 8px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;line-height: 26px;"><code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">GShard</code>在不同<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">GPU</code>上分配不同的專家，其他參數都共享，數據派發到專家，專家結果彙總都由<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">All-to-All</code>算子實現</p><figure data-tool="mdnice 編輯器" style="margin-top: 10px;margin-bottom: 10px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;display: flex;flex-direction: column;justify-content: center;align-items: center;"><img class="rich_pages wxw-img" data-imgfileid="100006754" data-ratio="0.6712962962962963" src="https://oscimg.oschina.net/oscnet/d8a02488-b56d-432d-859d-96169d2a7fa3.png" data-type="png" data-w="1080" style="margin-right: auto;margin-left: auto;outline: 0px;display: block;visibility: visible !important;width: 657px !important;" referrerpolicy="no-referrer"></figure><p data-tool="mdnice 編輯器" style="margin-bottom: 0px;padding-top: 8px;padding-bottom: 8px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;line-height: 26px;">DeepSpeed-MoE 源碼對<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">All-to-All</code>的實現如下</p><pre data-tool="mdnice 編輯器" style="margin-top: 10px;margin-bottom: 10px;outline: 0px;letter-spacing: normal;text-align: left;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;border-radius: 5px;box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;"><span style="margin-bottom: -7px;outline: 0px;display: block;background: url(&quot;https://oscimg.oschina.net/oscnet/97137f2e-9f16-422b-aac0-3a34b7643e27.svg&quot;) 10px 10px / 40px no-repeat rgb(40, 44, 52);height: 30px;width: 657px;border-radius: 5px;"></span><code style="padding: 15px 16px 16px;outline: 0px;overflow-x: auto;color: rgb(171, 178, 191);display: -webkit-box;font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;font-size: 12px;background: rgb(40, 44, 52);border-radius: 5px;"><span style="outline: 0px;line-height: 26px;"><span style="outline: 0px;color: rgb(198, 120, 221);line-height: 26px;">class</span><span style="outline: 0px;color: rgb(230, 192, 123);line-height: 26px;">_AllToAll</span><span style="outline: 0px;line-height: 26px;">(torch.autograd.Function)</span>:</span><br style="outline: 0px;"><br style="outline: 0px;"><span style="outline: 0px;color: rgb(97, 174, 238);line-height: 26px;">    @staticmethod</span><br style="outline: 0px;"><span style="outline: 0px;line-height: 26px;"><span style="outline: 0px;color: rgb(198, 120, 221);line-height: 26px;">def</span><span style="outline: 0px;color: rgb(97, 174, 238);line-height: 26px;">forward</span><span style="outline: 0px;line-height: 26px;">(<br style="outline: 0px;">            ctx: Any,<br style="outline: 0px;"><span style="outline: 0px;color: rgb(92, 99, 112);font-style: italic;line-height: 26px;"># <span style="outline: 0px;color: rgb(198, 120, 221);line-height: 26px;">TODO:</span> replace with DS process group</span><br style="outline: 0px;">            group: torch.distributed.ProcessGroup,<br style="outline: 0px;">            input: Tensor)</span> -&gt; Tensor:</span><span style="outline: 0px;color: rgb(92, 99, 112);font-style: italic;line-height: 26px;"># type: ignore</span><br style="outline: 0px;">        ctx.group = group<br style="outline: 0px;">        input = input.contiguous()<br style="outline: 0px;">        output = torch.empty_like(input)<br style="outline: 0px;">        dist.all_to_all_single(output, input, group=group)<br style="outline: 0px;"><span style="outline: 0px;color: rgb(198, 120, 221);line-height: 26px;">return</span> output<br style="outline: 0px;"><br style="outline: 0px;"><span style="outline: 0px;color: rgb(97, 174, 238);line-height: 26px;">    @staticmethod</span><br style="outline: 0px;"><span style="outline: 0px;line-height: 26px;"><span style="outline: 0px;color: rgb(198, 120, 221);line-height: 26px;">def</span><span style="outline: 0px;color: rgb(97, 174, 238);line-height: 26px;">backward</span><span style="outline: 0px;line-height: 26px;">(ctx: Any, *grad_output: Tensor)</span> -&gt; Tuple[<span style="outline: 0px;color: rgb(198, 120, 221);line-height: 26px;">None</span>, Tensor]:</span><br style="outline: 0px;"><span style="outline: 0px;color: rgb(198, 120, 221);line-height: 26px;">return</span> (<span style="outline: 0px;color: rgb(86, 182, 194);line-height: 26px;">None</span>, _AllToAll.apply(ctx.group, *grad_output))<br style="outline: 0px;"><br style="outline: 0px;"><span style="outline: 0px;line-height: 26px;"><span style="outline: 0px;color: rgb(198, 120, 221);line-height: 26px;">class</span><span style="outline: 0px;color: rgb(230, 192, 123);line-height: 26px;">MOELayer</span><span style="outline: 0px;line-height: 26px;">(Base)</span>:</span><br style="outline: 0px;"><span style="outline: 0px;color: rgb(92, 99, 112);font-style: italic;line-height: 26px;"># ...</span><br style="outline: 0px;"><span style="outline: 0px;line-height: 26px;"><span style="outline: 0px;color: rgb(198, 120, 221);line-height: 26px;">def</span><span style="outline: 0px;color: rgb(97, 174, 238);line-height: 26px;">forward</span><span style="outline: 0px;line-height: 26px;">(self, *input: Tensor, **kwargs: Any)</span> -&gt; Tensor:</span><br style="outline: 0px;"><span style="outline: 0px;color: rgb(92, 99, 112);font-style: italic;line-height: 26px;"># ...</span><br style="outline: 0px;">        dispatched_input = _AllToAll.apply(self.ep_group, dispatched_input)<br style="outline: 0px;"><br style="outline: 0px;"><span style="outline: 0px;color: rgb(92, 99, 112);font-style: italic;line-height: 26px;"># Re-shape after all-to-all: ecm -&gt; gecm</span><br style="outline: 0px;">        dispatched_input = dispatched_input.reshape(self.ep_size, self.num_local_experts, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">-1</span>, d_model)<br style="outline: 0px;"><br style="outline: 0px;">        expert_output = self.experts(dispatched_input)<br style="outline: 0px;"><br style="outline: 0px;"><br style="outline: 0px;">        expert_output = _AllToAll.apply(self.ep_group, expert_output)<br style="outline: 0px;"><br style="outline: 0px;"><span style="outline: 0px;color: rgb(92, 99, 112);font-style: italic;line-height: 26px;">#...</span><br style="outline: 0px;"></code></pre><span id="OSC_h2_20"></span><h2 data-tool="mdnice 編輯器" style="margin-top: 30px;margin-bottom: 15px;outline: 0px;font-weight: bold;font-size: 22px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;">4.3 DeepSpeed-MoE</h2><ul data-tool="mdnice 編輯器" class="list-paddingleft-1" style="margin-top: 8px;margin-bottom: 8px;padding-left: 25px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;"><li style="outline: 0px;"><section style="margin-top: 5px;margin-bottom: 5px;outline: 0px;line-height: 26px;color: rgb(1, 1, 1);">
     更加工程化的實現可以看 
    <code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">DeepSpeed-MoE</code>的開源方案 
   </section></li><li style="outline: 0px;"><section style="margin-top: 5px;margin-bottom: 5px;outline: 0px;line-height: 26px;color: rgb(1, 1, 1);"><code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">MoE</code>層使用 
    <code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">Expert-Paralallelism</code>做並行&nbsp; 
    <code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">AlltoAll</code>實現如上 
   </section></li><li style="outline: 0px;"><section style="margin-top: 5px;margin-bottom: 5px;outline: 0px;line-height: 26px;color: rgb(1, 1, 1);">
     非 
    <code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">MoE</code>層使用 
    <code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">TP+DP</code></section></li></ul><figure data-tool="mdnice 編輯器" style="margin-top: 10px;margin-bottom: 10px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;display: flex;flex-direction: column;justify-content: center;align-items: center;"><img class="rich_pages wxw-img" data-imgfileid="100006758" data-ratio="0.5425925925925926" src="https://oscimg.oschina.net/oscnet/fbcafecf-4739-44ac-94c8-e4c601d87f5f.png" data-type="png" data-w="1080" style="margin-right: auto;margin-left: auto;outline: 0px;display: block;visibility: visible !important;width: 656.99px !important;" referrerpolicy="no-referrer"></figure><span id="OSC_h2_21"></span><h2 data-tool="mdnice 編輯器" style="margin-top: 30px;margin-bottom: 15px;outline: 0px;font-weight: bold;font-size: 22px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;">4.4 LLaMA-MoE</h2><p data-tool="mdnice 編輯器" style="margin-bottom: 0px;padding-top: 8px;padding-bottom: 8px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;line-height: 26px;"><code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">Mixtral 8x7B</code>訓不動？試試將<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">LLaMA</code>原<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">MLP</code>改造成<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">LLaMA-MoE</code></p><figure data-tool="mdnice 編輯器" style="margin-top: 10px;margin-bottom: 10px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;display: flex;flex-direction: column;justify-content: center;align-items: center;"><img class="rich_pages wxw-img" data-imgfileid="100006757" data-ratio="0.5592592592592592" src="https://oscimg.oschina.net/oscnet/39e6e216-e428-4182-b4aa-20a0b6bb3650.png" data-type="png" data-w="1080" style="margin-right: auto;margin-left: auto;outline: 0px;display: block;visibility: visible !important;width: 656.979px !important;" referrerpolicy="no-referrer"></figure><p data-tool="mdnice 編輯器" style="margin-bottom: 0px;padding-top: 8px;padding-bottom: 8px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;line-height: 26px;">LLaMA-MoE 上關鍵代碼是用<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">LinearGLUExperts</code>代替原本<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">LLaMA</code>裏的<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">SwiGLU</code>層</p><pre data-tool="mdnice 編輯器" style="margin-top: 10px;margin-bottom: 10px;outline: 0px;letter-spacing: normal;text-align: left;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;border-radius: 5px;box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;"><span style="margin-bottom: -7px;outline: 0px;display: block;background: url(&quot;https://oscimg.oschina.net/oscnet/97137f2e-9f16-422b-aac0-3a34b7643e27.svg&quot;) 10px 10px / 40px no-repeat rgb(40, 44, 52);height: 30px;width: 657px;border-radius: 5px;"></span><code style="padding: 15px 16px 16px;outline: 0px;overflow-x: auto;color: rgb(171, 178, 191);display: -webkit-box;font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;font-size: 12px;background: rgb(40, 44, 52);border-radius: 5px;"> class LinearGLUExperts(nn.Module):<br style="outline: 0px;">    # ...<br style="outline: 0px;">    def __init__(...):<br style="outline: 0px;">        # ... <br style="outline: 0px;">        # 每個專家都創建 SwiGLU MLP 層<br style="outline: 0px;">        for i in range(num_experts):<br style="outline: 0px;">            # this matrix will be transposed when performing linear forwarding<br style="outline: 0px;">            this_expert_weight_gate = nn.Parameter(<br style="outline: 0px;">                torch.empty((size_experts[i], in_features), **factory_kwargs)<br style="outline: 0px;">            )<br style="outline: 0px;">            # this matrix will be transposed when performing linear forwarding<br style="outline: 0px;">            this_expert_weight_up = nn.Parameter(<br style="outline: 0px;">                torch.empty((size_experts[i], in_features), **factory_kwargs)<br style="outline: 0px;">            )<br style="outline: 0px;">            # this matrix will be transposed when performing linear forwarding<br style="outline: 0px;">            this_expert_weight_down = nn.Parameter(<br style="outline: 0px;">                torch.empty((out_features, size_experts[i]), **factory_kwargs)<br style="outline: 0px;">            )<br style="outline: 0px;">            self.weight_gate.append(this_expert_weight_gate)<br style="outline: 0px;">            self.weight_up.append(this_expert_weight_up)<br style="outline: 0px;">            self.weight_down.append(this_expert_weight_down)<br style="outline: 0px;">        # ...<br style="outline: 0px;"></code></pre><h1 data-tool="mdnice 編輯器" style="margin-top: 30px;margin-bottom: 15px;outline: 0px;font-weight: bold;font-size: 24px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;"></h1><span id="OSC_h1_22"></span><h1 data-tool="mdnice 編輯器" style="margin-top: 30px;margin-bottom: 15px;outline: 0px;font-weight: bold;font-size: 24px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;">5. Mixtral 8x7B 總結 &amp; 進一步閲讀</h1><ul data-tool="mdnice 編輯器" class="list-paddingleft-1" style="margin-top: 8px;margin-bottom: 8px;padding-left: 25px;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);"><li style="outline: 0px;color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;"><section style="margin-top: 5px;margin-bottom: 5px;outline: 0px;line-height: 26px;color: rgb(1, 1, 1);"><code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">Mixtral 8x7B</code>實現並不複雜，其中 
    <code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">load-balance loss</code>是 
    <code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">expert-wise</code>維度計算的 
   </section></li><li style="outline: 0px;color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;"><section style="margin-top: 5px;margin-bottom: 5px;outline: 0px;line-height: 26px;color: rgb(1, 1, 1);">
     當前發佈的模型還是圍繞模型結構展開的， 期待 
    <code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">mistral.AI</code>上線創新的對齊方案 
   </section></li><li style="outline: 0px;color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;"><section style="margin-top: 5px;margin-bottom: 5px;outline: 0px;line-height: 26px;color: rgb(1, 1, 1);">
     涉及到多機多卡的 
    <code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">sMoE</code>分佈式訓練非常需要工程技巧, 不同的模型架構和集羣可以有多種 
    <code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">DP\TP\EP..</code>組合方案， 
   </section></li><li style="outline: 0px;"><section style="margin-top: 5px;margin-bottom: 5px;outline: 0px;line-height: 26px;"><span style="outline: 0px;color: rgb(1, 1, 1);font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;">在·Mixtral·中對於實驗反直覺論點，專家的知識是作用在&nbsp;</span><span style="outline: 0px;color: rgb(30, 107, 184);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;"><span style="outline: 0px;font-size: 14px;background-color: rgba(27, 31, 35, 0.05);">token&nbsp;</span></span><span style="outline: 0px;color: rgb(1, 1, 1);font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;"><span style="outline: 0px;font-size: 16px;">級別，而不是<span style="outline: 0px;color: rgb(30, 107, 184);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;font-size: 14px;background-color: rgba(27, 31, 35, 0.05);">domain</span>級別，對&nbsp;<span style="outline: 0px;color: rgb(30, 107, 184);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;font-size: 14px;background-color: rgba(27, 31, 35, 0.05);">MoE&nbsp;</span>感興趣的話可以進一步開盒分析</span></span></section></li></ul><span id="OSC_h2_23"></span><h2 data-tool="mdnice 編輯器" style="margin-top: 30px;margin-bottom: 15px;outline: 0px;font-weight: bold;font-size: 22px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;">Reference</h2><ol data-tool="mdnice 編輯器" class="list-paddingleft-1" style="margin-top: 8px;margin-bottom: 8px;padding-left: 25px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;"><li style="outline: 0px;"><section style="margin-top: 5px;margin-bottom: 5px;outline: 0px;line-height: 26px;color: rgb(1, 1, 1);">
     Mixture of Experts Explained 
   </section></li><li style="outline: 0px;"><section style="margin-top: 5px;margin-bottom: 5px;outline: 0px;line-height: 26px;color: rgb(1, 1, 1);">
     方佳瑞：MoE 訓練論文解讀之 Megablocks：打破動態路由限制 
   </section></li><li style="outline: 0px;"><section style="margin-top: 5px;margin-bottom: 5px;outline: 0px;line-height: 26px;color: rgb(1, 1, 1);">
     方佳瑞：MoE 訓練系統之 JANUS：參數服務器助力 MoE 訓練 
   </section></li><li style="outline: 0px;"><section style="margin-top: 5px;margin-bottom: 5px;outline: 0px;line-height: 26px;color: rgb(1, 1, 1);">
     方佳瑞：MoE 訓練論文解讀之 Tutel: 動態切換並行策略實現動態路由 
   </section></li><li style="outline: 0px;"><section style="margin-top: 5px;margin-bottom: 5px;outline: 0px;line-height: 26px;color: rgb(1, 1, 1);">
     西門宇少：對 MoE 大模型的訓練和推理做分佈式加速——DeepSpeed-MoE 論文速讀 
   </section></li><li style="outline: 0px;"><section style="margin-top: 5px;margin-bottom: 5px;outline: 0px;line-height: 26px;color: rgb(1, 1, 1);">
     吃果凍不吐果凍皮：大模型分佈式訓練並行技術（八）-MOE 並行 
   </section></li><li style="outline: 0px;"><section style="margin-top: 5px;margin-bottom: 5px;outline: 0px;line-height: 26px;color: rgb(1, 1, 1);">
     孟繁續：Mixtral-8x7B 模型挖坑 
   </section></li><li style="outline: 0px;"><section style="margin-top: 5px;margin-bottom: 5px;outline: 0px;line-height: 26px;color: rgb(1, 1, 1);">
     Mixtral-of-experts 
   </section></li><li style="outline: 0px;"><section style="margin-top: 5px;margin-bottom: 5px;outline: 0px;line-height: 26px;color: rgb(1, 1, 1);">
     Mistral-7B 
   </section></li><li style="outline: 0px;"><section style="margin-top: 5px;margin-bottom: 5px;outline: 0px;line-height: 26px;color: rgb(1, 1, 1);">
     Gshard 
   </section></li><li style="outline: 0px;"><section style="margin-top: 5px;margin-bottom: 5px;outline: 0px;line-height: 26px;color: rgb(1, 1, 1);">
     Switch Transformers 
   </section></li><li style="outline: 0px;"><section style="margin-top: 5px;margin-bottom: 5px;outline: 0px;line-height: 26px;color: rgb(1, 1, 1);">
     sMoE 
   </section></li><li style="outline: 0px;"><section style="margin-top: 5px;margin-bottom: 5px;outline: 0px;line-height: 26px;color: rgb(1, 1, 1);">
     Transformers-Mixtral-of-Experts 
   </section></li><li style="outline: 0px;"><section style="margin-top: 5px;margin-bottom: 5px;outline: 0px;line-height: 26px;color: rgb(1, 1, 1);">
     DeepSpeed-MoE 
   </section></li><li style="outline: 0px;"><section style="margin-top: 5px;margin-bottom: 5px;outline: 0px;line-height: 26px;color: rgb(1, 1, 1);">
     Megablocks 
   </section></li><li style="outline: 0px;"><section style="margin-top: 5px;margin-bottom: 5px;outline: 0px;line-height: 26px;color: rgb(1, 1, 1);">
     LLaMA-MoE 
   </section></li></ol><hr style="border-style: solid;border-width: 1px 0 0;border-color: rgba(0,0,0,0.1);-webkit-transform-origin: 0 0;-webkit-transform: scale(1, 0.5);transform-origin: 0 0;transform: scale(1, 0.5);"><p><span style="outline: 0px;color: rgb(62, 62, 62);font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 14px;letter-spacing: 1px;"><br>本文由 H</span><span style="outline: 0px;color: rgb(62, 62, 62);font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 14px;letter-spacing: 1px;">ugging Face 中文社區內容共建項目提供，稿件由社區成員投稿，經授權發佈於 Hugging Face 公眾號。文章內容不代表官方立場，文中介紹的產品和服務等均不構成投資建議。瞭解更多請關注公眾號:</span><br></p><section class="mp_profile_iframe_wrp"><mp-common-profile class="js_uneditable custom_select_card mp_profile_iframe" data-pluginname="mpprofile" data-id="MzkzNzU4MTU5Nw==" data-headimg="http://mmbiz.qpic.cn/sz_mmbiz_png/kF2wpSFV2cicD6iaT6OicQEZPOnbLvlg4888uRNd3XqaPacRjELDf5EonkxM1eLaautlN2jDcUaClUI0siaH2QlaZA/0?wx_fmt=png" data-nickname="手撕 LLM" data-alias="xiaodonggua_AIGC" data-signature="原創課程 【手撕 LLM+RLHF】" data-from="0" data-is_biz_ban="0"></mp-common-profile></section><p style="outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);"><span style="outline: 0px;color: rgb(62, 62, 62);font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 14px;letter-spacing: 1px;">如果你有與開源 AI、</span><span style="outline: 0px;color: rgb(62, 62, 62);font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 14px;letter-spacing: 1px;">Hugging Face 相關的技術和實踐分享內容，以及最新的開源 AI 項目發佈，希望通過我們分享給更多 AI 從業者和開發者們，請通過下面的鏈接投稿與我們取得聯繫:</span></p><section style="margin: 8px;outline: 0px;text-wrap: wrap;background-color: rgb(255, 255, 255);letter-spacing: 0.578px;line-height: 1.75em;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, Arial, sans-serif;"><span style="outline: 0px;color: rgb(136, 136, 136);font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 14px;letter-spacing: 1px;">https://hf.link/tougao</span></section><p><br></p><p style="display: none;"><mp-style-type data-value="3"></mp-style-type></p></div><p style="color: #858585; font-size: 13px;">本文分享自微信公眾號 - Hugging Face（gh_504339124f0f）。<br>如有侵權，請聯繫 support@oschina.cn 刪除。<br>本文參與「<a href="https://www.oschina.net/sharing-plan" target="_blank">OSC 源創計劃</a>」，歡迎正在閲讀的你也加入，一起分享。</p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 04 Feb 2024 03:01:22 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/HuggingFace/blog/11020073</guid>
            <link>https://my.oschina.net/HuggingFace/blog/11020073</link>
            <author>
                <![CDATA[HuggingFace]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[歐盟 AI 法案已獲得成員國的一致批准]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>歐盟《人工智能法案 ( AI Act)》是一項基於風險的監管人工智能應用的計劃。目前，歐盟成員國已經投票就該法律草案的最終文本達成<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsiliconangle.com%2F2024%2F02%2F02%2Feu-member-states-approve-landmark-ai-regulation%2F" target="_blank">一致</a>，後續將提交歐洲議會表決，這也是新法律正式頒佈的最後一個步驟。</p><p><img height="449" src="https://oscimg.oschina.net/oscnet/up-6bf9f5a6ac55a4844b0cf834eef6c8cbfba.png" width="300" referrerpolicy="no-referrer"></p><p>歐盟行政部門歐盟委員會於 2021 年首次提出該立法。2023 年 12 月，立法者就法律應包括的內容達成了臨時協議。12 月獲得臨時批准的版本要求禁止有害的 AI 能用例，例如工作場所和教育機構中的情緒識別。此外，該草案還包含旨在規範高風險神經網絡（例如保險和銀行部門使用的神經網絡）使用的規則。</p><p>12 月版本的立法將對所謂的 high-impact GPAI（或通用人工智能）模型應用第二套規則。這些附加要求指定開發人員必須檢查其模型是否存在「系統性風險」並緩解他們發現的任何問題。開發人員還必須執行某些其他任務，例如報告神經網絡的能效。</p><p>該法案在 12 月獲得臨時批准後，啓動了長達數週、涉及多個歐盟成員國的談判進程。據 Politico 報道，德國和法國曾暗示，由於擔心該法案對 AI 創新的影響，他們可能會反對該法案。奧地利據説也表達了類似的立場，因為官員們對該法的隱私條款有疑慮。</p><p>為瞭解決這些問題，歐盟委員會針對 AI 領域推出了"一攬子支持創新措施"。還成立了一個名為"Artificial Intelligence Office "的新監管機構，負責實施《人工智能法案》。</p><p>一個由歐盟成員國官員組成的專家組將就實施過程向歐盟委員會提供建議。專家組的工作重點之一將是確保《人工智能法案》與其他法規之間沒有重疊。預計這項工作將特別強調歐盟現有的一些與醫療設備和機械有關的法規。</p><p>該法案將於本月晚些時候在歐洲議會的委員會投票之前進行。如果獲得批准，該法案將進入全體會議投票。大多數參與《人工智能法案》制定的歐洲議會官員預計，該法將在不對當前版本做任何修改的情況下通過。</p><p>一旦獲得通過，該法案將在歐盟官方公報上發佈 20 天后生效。在新規則適用於範圍內的應用程序和人工智能模型之前，將有一個分級實施期——在法規中規定的人工智能禁止使用清單開始適用之前有六個月的寬限期（可能在秋季左右）。</p><p>分階段生效還允許在基礎模型（又稱通用人工智能）適用規則前留出一年時間--因此要等到 2025 年。其餘大部分規則要到法律發佈兩年後才適用。</p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 04 Feb 2024 02:55:22 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/277667/eu-member-states-approve-ai-act</guid>
            <link>https://www.oschina.net/news/277667/eu-member-states-approve-ai-act</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[谷歌已從搜索結果頁面刪除「緩存鏈接」]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>谷歌確認已從搜索結果頁面刪除「緩存鏈接」，並表示將在不久的將來<strong>徹底移除緩存功能</strong>。</p><blockquote><p><img src="https://oscimg.oschina.net/oscnet/up-1db958065a51564516fd6ec5c09f9897ce5.png" referrerpolicy="no-referrer"></p><p><em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftwitter.com%2Fsearchliaison%2Fstatus%2F1753156161509916873" target="_blank">https://twitter.com/searchliaison/status/1753156161509916873</a></u></em></p></blockquote><p>目前谷歌搜索結果頁面不會再出現任何緩存鏈接，不過仍可通過在搜索框中輸入搜索運算符<code>cache:</code>來訪問谷歌緩存的快照—— 會自動跳轉到 "https://webcache.googleusercontent.com/search?q=cache:"，如下：</p><blockquote><p><img height="686" src="https://oscimg.oschina.net/oscnet/up-b852cd9166f6ee8b84f49fc8400ce2c03ea.png" width="1244" referrerpolicy="no-referrer"></p><p><img src="https://oscimg.oschina.net/oscnet/up-452fdcf89c884ae3bf8622fa0dc0b9ac519.png" referrerpolicy="no-referrer"></p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwebcache.googleusercontent.com%2Fsearch%3Fq%3Dcache%3Aoschina.net" target="_blank">https://webcache.googleusercontent.com/search?q=cache:oschina.net</a></p></blockquote><p>谷歌表示，緩存是為了幫助用户訪問頁面加載太慢的網頁，現在這種情況有了很大改善，因此他們決定退役該功能。</p><p>早在 2022 年，百度搜索就下線了同樣的「快照功能」，當時官方的迴應是「由於網頁技術的發展及代際變遷所致」。</p><blockquote><p><img src="https://oscimg.oschina.net/oscnet/up-80d269bfd3fd8c8e81068b9fa3405297dd0.png" referrerpolicy="no-referrer"><em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ffinance.sina.com.cn%2Ftech%2Finternet%2F2022-08-01%2Fdoc-imizmscv4375142.shtml" target="_blank">https://finance.sina.com.cn/tech/internet/2022-08-01/doc-imizmscv4375142.shtml</a></u></em></p></blockquote></div>
                                    ]]>
            </description>
            <pubDate>Sun, 04 Feb 2024 02:52:22 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/277666</guid>
            <link>https://www.oschina.net/news/277666</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[OurBMC 社區入駐開源中國！]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><strong><span style="background-color:#ffffff; color:#343434">近日，OurBMC 社區完成</span>開源中國<span style="background-color:#ffffff; color:#343434">（OSCHINA）企業號註冊，正式入駐開源中國技術社區。OurBMC 將攜手開源中國優秀開發者們，共同推進 BMC 技術快速發展，共建 BMC 繁榮生態。</span></strong></p><p style="text-align:center"><img height="400" src="https://oscimg.oschina.net/oscnet/up-f144f219c0a9452e188438fb29d3ff0243e.jpg" width="940" referrerpolicy="no-referrer"></p><p><span style="color:#343434"><span>作為國內知名的開源技術社區，OSCHINA 聚集了超過 1500 萬開發者，不僅推廣了</span>開源軟件<span>的使用，還在提升本土開源技術能力和優化開源生態環境方面發揮了重要作用。自創建至今，經過十五年深耕與發展，結合對中國本土開源環境的深刻理解，OSCHINA 已成為推動國內開源技術進步的重要力量。</span></span></p><p><span style="color:#343434">OurBMC 社區是飛騰公司攜手崑崙太科、百敖軟件聯合籌建的國內首個 BMC 開源根社區。在多方共同努力下，OurBMC 社區官網已於 2023 年 9 月 21 日正式上線。社區在廣大成員單位齊心協力建設 OurBMC 技術生態的努力之下，已經獲得了不錯的成效，不僅擁有來自芯片、固件、整機、操作系統等多方向的 47 家成員單位，還建立了 4 個 SIG 併發布了 11 個代碼倉。經過社區開發者的共同努力，2023 年 12 月 29 日，OurBMC 首個版本 1.0.0 正式發佈。</span></p><p><span style="color:#343434">OurBMC 入駐開源中國技術社區，將攜手開源中國優秀的 BMC 技術愛好者一起為社區和 BMC 生態貢獻力量，共同取得更加卓越的成就。大家可通過下面兩種方式訪問 OurBMC 相關信息：</span></p><h3><strong>一鍵搜索，技術乾貨貼展現眼前</strong></h3><p><span style="background-color:#ffffff; color:#343434">進入<span>&nbsp;</span></span><strong>開源中國官網首頁</strong><strong>-&gt;</strong><strong>右上角輸入 「OurBMC」 關鍵詞</strong><strong>-&gt;</strong><strong>點擊搜索</strong><span style="background-color:#ffffff; color:#343434">，查看 OurBMC 發佈的技術博客、BMC 技術資訊及 OurBMC 產品資訊等乾貨信息。</span></p><p style="text-align:center"><img height="388" src="https://oscimg.oschina.net/oscnet/up-339ec0f66bbf91e77e8c90d91ec02b5ebaa.png" width="1473" referrerpolicy="no-referrer"></p><h3><strong><span>複製鏈接，更快、更全面地瞭解 OurBMC</span></strong></h3><p><span style="background-color:#ffffff; color:#343434">直接訪問&nbsp;<strong>開源中國 OurBMC 個人中心</strong>（</span><a href="https://my.oschina.net/ourbmc">https://my.oschina.net/ourbmc</a><span style="background-color:#ffffff; color:#343434">），查看 OurBMC 發佈的相關博文、資訊，以及 OurBMC 參與的技術問答情況等。</span></p><p style="text-align:center"><img height="790" src="https://oscimg.oschina.net/oscnet/up-fd758ff0673e642d72a0410f995dac05431.png" width="1441" referrerpolicy="no-referrer"></p><p><span style="color:#343434">未來，OurBMC 將在開源中國技術社區積極回答 BMC 技術問題，同時攜手廣大優秀開發者共同探索 BMC 全棧技術，厚培開源土壤，持續推動 BMC 生態成熟發展。OurBMC 社區誠邀業界廣大同仁積極參與社區建設和交流！</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:8px; margin-right:8px; text-align:center"><strong><span style="color:#343434">歡迎廣大開發者加入 OurBMC 社區</span></strong></p><p style="text-align:center"><strong><span style="color:#343434">開源中國 OurBMC 個人空間更多信息請訪問：</span></strong></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:8px; margin-right:8px; text-align:center"><a href="https://my.oschina.net/ourbmc">https://my.oschina.net/ourbmc</a></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:8px; margin-right:8px; text-align:center"><strong><span style="color:#343434">OurBMC 社區官網更多功能請訪問：</span></strong></p><p style="text-align:center"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.ourbmc.cn%2F" target="_blank">https://www.ourbmc.cn/</a></p><p style="text-align:center"><img alt="動態底部圖片.jpeg" src="https://oss-nc-beijing-2.cecloudcs.com/ourbmc/c257f53322344116b7eea72013ffcbd5/%E5%8A%A8%E6%80%81%E5%BA%95%E9%83%A8%E5%9B%BE%E7%89%87.jpeg" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 04 Feb 2024 02:26:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/277662</guid>
            <link>https://www.oschina.net/news/277662</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[飛致雲開源社區月度動態報告（2024 年 1 月）]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div><div><span><span>自 2023 年 6 月起，中國領先的開源軟件公司 FIT2CLOUD 飛致雲以月度為單位發佈《飛致雲開源社區月度動態報告》，旨在向廣大社區用户同步飛致雲旗下系列開源軟件的發展情況，以及當月主要的產品新版本發佈、社區運營成果等相關信息。</span></span></div></div><div><div><strong><span>飛致雲開源大屏（2024 年 1 月）</span></strong></div><div><img alt="" height="734" src="https://oscimg.oschina.net/oscnet/up-28bfa544042627ebd282c6fc43e3d636c52.png" width="1324" referrerpolicy="no-referrer"></div><div>
   ▲圖 1 飛致雲開源大屏（2024.1.31 12:00） 
 </div></div><div><div><span><span>2024 年 1 月飛致雲開源軟件運營數據概覽（統計時間為 2024.1.1～2024.1.31）</span></span></div><div><img alt="" height="602" src="https://oscimg.oschina.net/oscnet/up-d8824acee812525358db28877275c9cf6af.png" width="1400" referrerpolicy="no-referrer"></div></div><div><div><strong><span>2024 年 1 月產品發佈事件</span></strong></div></div><div><div><strong><span>■</span></strong><span><span><span>&nbsp;</span></span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzkyNTI0OTYwOQ%3D%3D%26mid%3D2247485932%26idx%3D1%26sn%3Da31d07d9ded696e6ffdc86e2bb2a8930%26scene%3D21%23wechat_redirect" target="_blank" rel="nofollow"><strong><span>DataEase 開源數據可視化分析工具</span></strong></a></div></div><div><div><span><span>2024 年 1 月 8 日，DataEase 開源數據可視化分析平台正式發佈 v2.2.0 版本。</span></span></div></div><div><div><span><span>這一版本的功能升級包括：在「模板管理」頁面中，用户可以通過模板管理的批量操作功能，對已有模板進行快速重新分類、刪除等維護操作；數據大屏中，支持多個組件構成的分組中某一組件的快速重新定位；儀錶板中的查詢組件支持了設置查詢條件為必填項。此外，DataEase 開源項目組還對其他一些常用的功能進行了功能優化和問題修復。</span></span></div></div><div><div><strong><span>■</span></strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzIxOTU1ODQ4NQ%3D%3D%26mid%3D2247484330%26idx%3D1%26sn%3Dada95d0a0893b6400946c3ad6915df96%26scene%3D21%23wechat_redirect" target="_blank" rel="nofollow"><strong><span>1Panel 開源面板</span></strong></a></div></div><div><div><span><span>2024 年 1 月 15 日，現代化、開源的 Linux 服務器運維管理面板 1Panel 正式發佈 v1.9.3 版本。</span></span></div></div><div><div><span><span>在這一版本中，1Panel 新增了 PostgreSQL 數據庫管理功能，並且支持設置 PHP 運行環境擴展模版。此外，1Panel 開源項目組還進行了 30 多項功能更新和問題修復。1Panel 應用商店新增了 3 款應用，並且更新了 22 款應用。</span></span></div></div><div><div><strong><span>■<span>&nbsp;</span></span></strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4MzkwMjM5MQ%3D%3D%26mid%3D2247485612%26idx%3D1%26sn%3Dc4f3669a65417a419a80ec9e05656efc%26scene%3D21%23wechat_redirect" target="_blank" rel="nofollow"><strong><span>JumpServer 開源堡壘機</span></strong></a></div></div><div><div><span><span>2024 年 1 月 22 日，JumpServer 開源堡壘機正式發佈 v3.10.2 LTS 版本。JumpServer 開源項目組將對 v3.10 LTS 版本提供長期的支持和維護，並定期迭代發佈小版本。歡迎廣大社區用户升級至 v3.10 LTS 版本，以獲得更佳的使用體驗。</span></span></div></div><div><div><span><span>在 v3.10.2 LTS 版本中，JumpServer 的郵件服務功能新增支持 Exchange 協議。目前 JumpServer 所支持的郵件協議包括 SMTP 協議（即簡單郵件傳輸協議）和 Exchange 協議，為用户提供了更多的選擇。同時，LDAP（即輕量目錄訪問協議）定時同步用户功能支持設置消息收件人，定時同步用户任務完成後，系統會自動發送消息通知給收件人。另外，資產歷史賬號也支持設置保留數量，以滿足用户的更多安全需求</span></span></div></div><div><div><span><span>X-Pack 增強包方面，JumpServer 的 SQL Server 數據庫連接支持命令審計，用户通過 Magnus 代理連接 SQL Server 數據庫時，進行 CURD 操作會進行命令審計記錄。</span></span></div></div><div><div><strong><span>■ MeterSphere 開源持續測試平台</span></strong></div></div><div><div><span><span>2024 年 1 月 25 日，MeterSphere 開源持續測試平台發佈 v2.10.11 LTS 版本。</span></span></div></div><div><div><span><span>在這一版本中，性能測試方面，性能測試的高級配置增加選項，報告採樣支持顯示接口返回數據類型為圖片，下載 zip 文件時支持使用流下載；測試跟蹤方面，修改場景測試轉性能測試時部分 CSV 文件無法解析的問題，採用批量處理的方式自動清理報告數據，增加服務啓動項，對刪除失敗的資源報告進行刪除。此外，MeterSphere 項目組還進行了 14 項漏洞修復工作。</span></span></div></div><div><div><strong><span>其他重要事件</span></strong></div></div><div><div><strong><span>■</span></strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzI4OTA1NzQ1OQ%3D%3D%26mid%3D2649624563%26idx%3D1%26sn%3D1d2576847bce8dccb2a3ffa5123fd231%26scene%3D21%23wechat_redirect" target="_blank" rel="nofollow"><strong><span><span>&nbsp;</span>飛致雲旗下開源項目 GitHub Star 數量突破 100,000 個！</span></strong></a></div></div><div><div><span><span>2024 年 1 月 19 日，中國領先的開源軟件提供商 FIT2CLOUD 飛致雲宣佈，其旗下開源項目在代碼託管平台 GitHub 上所獲得的 Star 數量已經超過 100,000 個。與此同時，飛致雲旗下開源項目的月度新增軟件下載次數也超過 100,000 次。</span></span></div><div><img alt="" height="720" src="https://oscimg.oschina.net/oscnet/up-813fe7e32e429dcf3dd7fbec5c220afa93d.jpg" width="1280" referrerpolicy="no-referrer"></div><div>
   ▲圖 2 飛致雲旗下開源項目 GitHub Star 數量突破 100,000 個 
 </div></div><div><div><span><span>在創新與併購的雙輪驅動下，飛致雲以「為數字經濟時代創造好軟件」為使命的開源生態體系不斷髮展壯大。目前，飛致雲旗下開源項目的貢獻者超過 1,700 位，有超過 7,000 位社區用户提交 Issue，Fork 總數量超過 24,000 次，PR（(Pull Request）數量超過 43,000 次。另據不完全統計，飛致雲開源社區交流總人數已經超過 30,000 人。</span></span></div></div><div><div><strong><span>■</span></strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg5Mjg3NTQ1Ng%3D%3D%26mid%3D2247485254%26idx%3D1%26sn%3Dfe5bba30cc4d9ca1d7009b51e3da70f3%26scene%3D21%23wechat_redirect" target="_blank" rel="nofollow"><strong><span><span>&nbsp;</span>Halo Maintainer 2023 年度榜單發佈</span></strong></a></div></div><div><div><span><span>2024 年 1 月 24 日，Halo 開源項目組為了感謝 245 位開發者的慷慨付出，特別發佈「Halo Maintainer 2023 年度榜單」，以表彰為 Halo 項目做出突出貢獻的開發者們</span></span></div></div><div><div><strong><span>■<span>&nbsp;</span></span></strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzIxOTU1ODQ4NQ%3D%3D%26mid%3D2247484339%26idx%3D1%26sn%3D92241cdb3029010995e575b4bcb94a98%26scene%3D21%23wechat_redirect" target="_blank" rel="nofollow"><strong><span>1Panel 開源面板項目 GitHub Star 數量突破 15,000！</span></strong></a></div></div><div><div><span><span>截至 2024 年 1 月 24 日 14:00，1Panel 開源 Linux 服務器運維管理面板項目 GitHub Star 數超過 15,000 個。</span></span></div></div><div><div><strong><span>■</span></strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzIxOTU1ODQ4NQ%3D%3D%26mid%3D2247484345%26idx%3D1%26sn%3Dc9cbfd07aaca2d077d184b688d53bbcf%26scene%3D21%23wechat_redirect" target="_blank" rel="nofollow"><strong><span><span>&nbsp;</span>1Panel 開源面板項目致敬社區開發者</span></strong></a></div></div><div><div><span><span>2024 年 1 月 26 日，1Panel 開源項目組發佈 61 位社區開發者名單，感謝他們在過去的 10 個月為 1Panel 開源項目所做出的傑出貢獻。</span></span></div></div><div><div><strong><span>關於飛致雲開源大屏</span></strong></div></div><div><div><span><span>飛致雲開源大屏（</span></span><em><span>https://bi.fit2cloud.com/link/6CgpMHrT</span></em><span><span>）是 FIT2CLOUD 飛致雲為展示其旗下開源軟件的社區運營情況製作的數據儀錶板。該大屏使用 DataEase 開源數據可視化分析平台製作，實時呈現飛致雲開源社區近 30 日內的動態信息。<span>&nbsp;</span></span></span></div></div><div><div><span><span>廣大社區用户可以通過該大屏瞭解飛致雲旗下開源項目的 GitHub Star、Fork、Issue、貢獻者等指標的數量信息，以及近 30 日內新增的 Star、Fork、下載、Issue、PR 數量等，同時該大屏還展示了飛致雲旗下開源項目的 Issue 趨勢、Commit 趨勢、PR 趨勢、Issue 生命週期等。</span></span></div></div><div><div><span><span>除了展示所有項目的彙總信息外，該大屏還支持用户分類別查看 JumpServer、DataEase、MeterSphere、Halo、1Panel、CloudExplorer Lite 六個開源項目的獨立運營數據。</span></span></div></div><div>
  &nbsp; 
</div><p>&nbsp;</p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 04 Feb 2024 01:55:37 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/4736111/blog/10997723</guid>
            <link>https://my.oschina.net/u/4736111/blog/10997723</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[OpenAI 推出 Vision Pro 版 ChatGPT]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>OpenAI <u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftwitter.com%2FChatGPTapp%2Fstatus%2F1753480988569866332" target="_blank">宣佈</a></u>推出可在 Vision Pro 上運行的 ChatGPT，現已在&nbsp;<span>visionOS App Store 上架。</span></p><p><img src="https://oscimg.oschina.net/oscnet/up-8a4aed40a73de4363dfa0fca1453aba4efa.png" referrerpolicy="no-referrer"></p><p><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fventurebeat.com%2Fai%2Fopenai-launches-chatgpt-app-for-apple-vision-pro%2F" target="_blank">據 VentureBeat 報道</a></u>，蘋果 Vision Pro 上的 ChatGPT 由 OpenAI 最新的大型語言模型（LLM）GPT 4 Turbo 支持。</p><p>2 月 2 日，蘋果 Vision Pro 頭顯今日正式在美國開售，該產品有 256GB、512GB、1TB 三種存儲容量供選擇。蘋果公司稱，Vision Pro 發佈時將提供 600 個新應用和遊戲，ChatGPT 就是其中之一。這款混合現實頭顯還支持 iPad 上的 100 多萬個應用程序。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-1fffde79e15f258deab1180745435097ce9.png" referrerpolicy="no-referrer"></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-d001be7f7613037ebb5b017f03c1317af73.png" referrerpolicy="no-referrer"></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-bf210a7f1224575a21c9188df7ae0b97e72.png" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 04 Feb 2024 01:48:37 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/277654/chatgpt-app-for-apple-vision-pro</guid>
            <link>https://www.oschina.net/news/277654/chatgpt-app-for-apple-vision-pro</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Zig 編程語言 2024 年全新路線圖發佈]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>在最新的一次專訪中，Zig 編程語言的創始人 Andrew Kelley 詳細介紹了 Zig 即將發佈的版本和未來規劃的精彩亮點。這次更新着眼於解決關鍵的第三方項目問題、修復 bug、提升編譯器性能以及實施增量編譯的戰略。同時，Andrew 還分享了關於為 Zig 軟件基金會（ZSF）籌集資金和實現 1.0 版本目標的寶貴信息。</p><p><strong>即將到來的版本：專注於質量而非時間</strong></p><p>Zig 團隊採取了一種獨特的方法來推進即將發佈的版本，即專注於完成具體任務而不是遵循嚴格的時間表。這一策略允許開發人員專注於交付核心特性，而不是急於發佈。通過 Zig 的 GitHub 頁面上的「Milestones」標籤，社區成員可以跟蹤進展，並將他們的項目添加到重要的第三方項目列表中，確保了廣泛的兼容性和支持。</p><p><strong>提升性能與用户體驗</strong></p><p>隨着發佈後的焦點轉向解決 bug 和提高編譯器性能，Zig 面臨着解決超過 1,200 個已報告 bug 的挑戰。減少編譯時間成為提高效率的關鍵，旨在使開發者能夠更快地測試和編輯代碼。此外，Andrew 強調了增量編譯在 Zig 未來發展中的核心作用，這一特性儘管目前還未實施，但預計將為遊戲開發、終端應用、JavaScript 引擎和數據庫等資源密集型應用帶來顯著的生產力提升。</p><p><strong>解決異步編程與工具支持挑戰</strong></p><p>在討論到 Zig 的異步功能和工具支持時，Andrew 坦承雖然異步編程具有巨大吸引力，但將其融入 Zig 需要克服多項技術障礙，如自定義代碼生成後端和調試工具的開發。他也提到，儘管 Zig 的部分工具，如語言服務器和文檔生成器，已經相當健壯，但仍有其他領域需要進一步發展。團隊對持續改進持開放態度，並鼓勵社區貢獻。</p><p><strong>資助 Zig 軟件基金會（ZSF）</strong></p><p>為了加速 Zig 的發展並實現 1.0 版本目標，Andrew 討論了 ZSF 面臨的資金挑戰，指出個人捐贈目前僅佔總收入的三分之一。增加來自個人和組織的資金支持將極大助力 ZSF 僱傭更多承包商，從而加快開發進程。</p><p><strong>朝向 1.0 版本邁進</strong></p><p>Zig 正致力於幾個關鍵目標以實現 1.0 版本，包括提升編譯器性能、調整語言以適應編譯器優化，以及增強標準庫。Andrew 強調，即使在達到 1.0 版本之前，使用 Zig 也能幫助早期識別和解決問題，他建議在源代碼中引入版本聲明以支持不同版本的平滑過渡。</p><p>通過這一系列措施和計劃，Zig 展現了其對開發者社區的承諾和對編程語言未來的雄心壯志。隨着 Zig 不斷髮展和改進，它有望為編程社區帶來更多的創新和便利。</p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 04 Feb 2024 01:18:37 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/277651/zig-roadmap-2024</guid>
            <link>https://www.oschina.net/news/277651/zig-roadmap-2024</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[10 年前的今天 —— Vue.js 正式問世]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Vue 官方推特賬號的最新動態<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftwitter.com%2Fvuejs%2Fstatus%2F1753678155444101385" target="_blank">寫道</a></u>：</p><blockquote><p>10 年前的今天（2014 年 2 月 3 日），Vue 在 Hacker News 上首次對外亮相：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnews.ycombinator.com%2Fitem%3Fid%3D7169288" target="_blank">news.ycombinator.com/item?id=7169288</a></p><p>10 年後，Vue 已成為使用最廣泛的前端項目之一，在世界各地擁有多元化的社區。</p><p><img src="https://oscimg.oschina.net/oscnet/up-75ad5ac6e8149ffa4d18fee49546a79cd6a.png" referrerpolicy="no-referrer"></p></blockquote><p>Vue.js 是由尤雨溪獨立開發的開源前端框架，目前由他和其他活躍的核心團隊成員維護。</p><p>在谷歌的 Creative Lab 就職期間，尤雨溪接觸到 Google 團隊開發的 Web 前端框架「Angular」，他對 Angular 可通過數據綁定來處理網頁 DOM 的運作方式很感興趣，並想以此為基礎開發出一個功能相似，但更輕量的框架。</p><p>後來，尤雨溪將所開發出的框架命名為「Vue.js」，並在 2014 年 2 月正式對外公佈，宣稱讓「<strong>Java MVVM 變得更簡單</strong>」。</p><p><img src="https://oscimg.oschina.net/oscnet/up-581bff0bf554afab956437fa62cb1777d18.png" referrerpolicy="no-referrer"><em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnews.ycombinator.com%2Fitem%3Fid%3D7169288" target="_blank">https://news.ycombinator.com/item?id=7169288</a></u></em></p><p>在與開發者的互動交流中，尤雨溪認真解答了 Vue.js 和 Angular 在技術架構設計方面的不同之處。為了保證框架儘可能輕量，Vue.js 捨棄了依賴注入、預編譯 JSX 等特性。</p><p><img src="https://oscimg.oschina.net/oscnet/up-fafe1a062037bfc8b7e2738cefe3da01c61.png" referrerpolicy="no-referrer"></p><p>根據尤雨溪在 Vue.js 正式對外發布一週後的<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.evanyou.me%2F2014%2F02%2F11%2Ffirst-week-of-launching-an-oss-project%2F" target="_blank">覆盤數據</a>，他最開始在 Hacke rNews、EchoJS 和 Reddit 子版塊<span>/r/javascript 這三個網站宣佈了 Vue.js。</span>一天之內，Vue.js 火速佔據它們榜首。</p></div>
                                    ]]>
            </description>
            <pubDate>Sat, 03 Feb 2024 08:53:49 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/277597/vuejs-10yr</guid>
            <link>https://www.oschina.net/news/277597/vuejs-10yr</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[開源日報：中國首個腦機接口開源軟件平台；謹慎升級 VS Code]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>歡迎閲讀 OSCHINA 編輯部出品的開源日報，每天更新一期。</p><p><strong># 2024.2.2</strong></p><h2><span><span><span style="color:#000000"><span><span><span style="color:#00b050">今日要點</span></span></span></span></span></span></h2><p style="text-align:justify"><strong>OpenSource Daily</strong></p><h3><u><a href="https://www.oschina.net/news/277399" target="_blank">天津大學發佈中國首個腦機接口開源軟件平台 MetaBCI 研究成果</a></u></h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">近日，天津大學神經工程團隊在數學與計算生物學領域 SCI 一區 TOP 期刊《Computers in Biology and Medicine》上發表論文，介紹了中國首個腦機接口開源軟件平台 MetaBCI 的技術架構與實現方法。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">MetaBCI 由離線分析模塊 Brainda、刺激呈現模塊 Brainstim 和在線數據流模塊 Brainflow 三大部分構成，提供了面向 BCI 軟件層面全鏈條開發的解決方案。</p><ul style="list-style-type:disc; margin-left:0; margin-right:0"><li>面向離線分析需求，Brainda 統一了現有公開數據集接口，優化了腦電數據讀取、處理流程，復現多種主要 BCI 數據分析及解碼算法，以此提高研究者的算法開發效率；</li><li>面向刺激呈現需求，Brainstim 提供了簡潔高效的範式設計模塊，可快速創建腦機接口範式刺激界面；</li><li>面向在線開發需求，Brainflow 利用雙線程、雙進程編程方法實現了實時高速的數據讀取、數據處理、結果反饋等功能，幫助開發者輕鬆搭建腦機接口在線實驗系統。</li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img src="https://oscimg.oschina.net/oscnet/up-8f4d4e3e7fbcc8a74be3635f43436fba05b.png" referrerpolicy="no-referrer"></p><h3><u><a href="https://www.oschina.net/news/277439/vscode-1-86-drops-ubuntu-18-04" target="_blank">VS Code 1.86 會導致遠程開發功能無法使用</a></u></h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">Visual Studio Code 今日發佈的最新版<span>&nbsp;</span><u><a href="https://www.oschina.net/news/277414/vs-code-1-86-released">1.86</a></u><span>&nbsp;引入一項嚴重的破壞性變化，其</span>遠程開發服務器工具鏈<span>最低環境要求的&nbsp;</span>glibc 版本提升為 2.28。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">由於&nbsp;Ubuntu 18.04 LTS 使用 glibc 2.27，因此有開發者發現自己升級到 VS Code 新版本後，使用 Remote SSH 無法連接到遠程機器。</p><blockquote><p style="margin-left:0; margin-right:0"><img src="https://oscimg.oschina.net/oscnet/up-7159057b7f201b731192ad420804af1891b.png" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0"><u><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fv2ex.com%2Ft%2F1013590" target="_blank">https://v2ex.com/t/1013590</a></em></u></p></blockquote><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">對於該問題，目前的解決方案有兩種：</p><ul style="list-style-type:disc; margin-left:0; margin-right:0"><li><strong>根據對應的發行版，升級至 Ubuntu 20.04 LTS、Debian 10 或 RHEL 8</strong></li><li><strong>降級到 VS Code 1.85</strong></li></ul><h3><u><a href="https://www.oschina.net/news/277402/allenai-olmo-truly-open-llm" target="_blank">AI2 開源新 LLM，重新定義 open AI</a></u></h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="color:#000000">艾倫人工智能研究所（Allen Institute for AI，簡稱 AI2）<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.allenai.org%2Fhello-olmo-a-truly-open-llm-43f7e7359222" target="_blank">宣佈</a>推出一個名為 OLMo 7B 的新大語言模型，並開源發佈了預訓練數據和訓練代碼。OLMo 7B 被描述為 「一個真正開放的、最先進的大型語言模型」。</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="color:#000000">AI2 是由已故的微軟公司聯合創始人保羅 - 艾倫（Paul Allen）於 2014 年在西雅圖創辦的一家非營利組織。該組織表示，他們開源 OLMo 模型旨在讓 AI 研究社區充分了解最先進的大語言模型（LLM），從而推動自然語言處理的發展，並以科學的方式正視現有 LLM 存在的問題。</span></p><p><img src="https://oscimg.oschina.net/oscnet/up-5f4ac19f48b404e2adf9eed484a4a22035d.png" referrerpolicy="no-referrer"></p><hr><h2><strong><span><span><span style="color:#000000"><span><span><span style="color:#00b050">今日推薦</span></span></span></span></span></span></strong></h2><p><img src="https://oscimg.oschina.net/oscnet/up-4caec6d25c5413f5ea4275653e65a5444dd.png" referrerpolicy="no-referrer"></p><hr><h2><strong><span><span><span style="color:#000000"><span><span><span style="color:#00b050">媒體觀點</span></span></span></span></span></span></strong></h2><p><img src="https://oscimg.oschina.net/oscnet/up-90cadeca4d271edb7a2ad700c6263fdc51d.png" referrerpolicy="no-referrer"></p><hr><h2><strong><span><span><span style="color:#000000"><span><span><span style="color:#00b050">每日項目榜</span></span></span></span></span></span></strong></h2><p>GitHub 榜單：</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-b98d9200d2d848543db7dae28c134e95c33.png" referrerpolicy="no-referrer"><img alt="" src="https://oscimg.oschina.net/oscnet/up-5292ae0f6e0cd094f67afe814ba672e45a7.png" referrerpolicy="no-referrer"></p><blockquote><h4><span style="background-color:#e67e22">在線閲讀完整日報內容，訪問：</span><u><a href="https://oscimg.oschina.net/public_shard/%E5%BC%80%E6%BA%90%E6%97%A5%E6%8A%A5%E7%AC%AC008%E6%9C%9F%EF%BC%9A%E6%8E%A8%E5%8A%A8%E4%B8%AD%E5%9B%BD%E5%BC%80%E6%BA%90%E8%BD%AF%E7%A1%AC%E4%BB%B6%E5%8F%91%E5%B1%95%E7%9A%84%E7%BB%8F%E9%AA%8C%E4%B8%8E%E5%BB%BA%E8%AE%AE.pdf" target="_blank"><span style="background-color:#e67e22">開源日報第 008 期：推動中國開源軟硬件發展的經驗與建議</span></a></u></h4></blockquote><hr><p><strong>往期回顧</strong></p><ul><li><u><a href="https://oscimg.oschina.net/public_shard/%E5%BC%80%E6%BA%90%E6%97%A5%E6%8A%A5%E7%AC%AC007%E6%9C%9F.pdf">開源日報第 007 期：「Linux 中國」 開源社區宣佈停止運營</a></u></li><li><u><a href="https://oscimg.oschina.net/public_shard/%E5%BC%80%E6%BA%90%E6%97%A5%E6%8A%A5%E7%AC%AC006%E6%9C%9F%EF%BC%9A%E9%80%89%E6%8B%A9%E6%8A%80%E6%9C%AF%E6%A0%88%E4%B8%80%E5%AE%9A%E8%A6%81%E9%80%89%E6%8B%A9%E5%BC%80%E6%BA%90%E7%9A%84.pdf" target="_blank">開源日報第 006 期：選擇技術棧一定要選擇開源的</a></u></li><li><a href="http://www.oschina.net/news/277040"><u>開源日報第 005 期：RISC-V 萬兆開源交換機發售；npm 存在大量武林外傳視頻</u></a></li><li><u><a href="https://www.oschina.net/news/276864" target="news">開源日報第 004 期：百度輸入法在候選詞區域植入廣告；大神用 Excel 構建 CPU</a></u></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Sat, 03 Feb 2024 06:36:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/277585</guid>
            <link>https://www.oschina.net/news/277585</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[FastGateway：一個可以用於代替 Nginx 的網關]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>在我本人研究 Yarp 的時候經常用於公司項目的業務網關代理，這時候就個大佬問我是否可以實現動態加載 HTTPS 證書？那時候我説不太可能實現，然而在某一天我看到</p><p>微軟使用 Yarp 代替了 Nginx 吞吐量提升了百分之八十！</p><p><img height="2340" src="https://oscimg.oschina.net/oscnet/up-9b031c83a55889ff53d2b4981411def100f.png" width="1080" referrerpolicy="no-referrer"></p><p>這個時候我就萌生了自己使用 yarp 造一個 Gateway 的項目，應為我本身也經常使用 nginx 作為網關，但是 nginx 的使用總得寫 conf，然後重啓我的 nginx，並且還需要配置證書重啓，我就在想是否可以實現界面管理，並且完全動態管理？</p><p>然後我們的 FastGateway 項目就誕生了，下面我們介紹一下我們的 FastGateway 的項目簡單案例</p><p>## FastGateway</p><p>我們的 FastGateway 提供了倆個容器，一個是代理服務，一個是前端服務</p><p>一般簡單使用就可以直接使用我們的 docker-compose 構建，非常簡單</p><p>FastGateway 支持哪些功能？</p><ul><li><span>&nbsp;</span>登錄授權&nbsp; 
  <ul><li>通過環境變量簡單設置賬號密碼</li></ul></li><li><span>&nbsp;</span>動態路由管理 
  <ul><li>完全界面操作並且實時更新</li></ul></li><li><span>&nbsp;</span>動態配置證書管理 
  <ul><li>完全界面操作並且實時更新</li></ul></li><li><span>&nbsp;</span>dashboard 監控 
  <ul><li>提供了簡單數據監控，後續還會提供更完善的功能</li></ul></li><li><span>&nbsp;</span>靜態文件服務代理 
  <ul><li>使用中間件簡單實現了靜態文件代理（Yarp 默認是不支持靜態文件代理）</li></ul></li><li><span>&nbsp;</span>穿透隧道功能 
  <ul><li>只需要提供一個公網的 Gateway 服務端，然後下載我們的 Gateway 的客户端就可以將客户端的局域網的服務映射到外網（只支持 http 協議的服務）</li></ul></li><li><span>&nbsp;</span>出入口流量監控 
  <ul><li>基於 Kestrel 實現出入口流量監控，還提供當前服務器的所有網卡的出入流量實時監控</li></ul></li></ul><h2>技術棧</h2><h3>後端技術棧</h3><ul><li>Asp.Net 8.0 用於提供基礎服務</li><li>Yarp 用於提供反向代理服務</li><li>FreeSql 用於提供數據庫服務</li><li>JWT 用於提供登錄授權服務</li><li>MiniApis 提供 WebApi 服務</li></ul><h3>前端技術棧</h3><ul><li>reset-css 用於重置瀏覽器默認樣式</li><li>axios 用於發送 http 請求</li><li>semi 用於提供基礎組件</li><li>react-router-dom 用於路由管理</li></ul><h2>鏡像執行指令</h2><div><div><pre><span><span style="color:#0086b3">mkdir </span>data</span><span>docker run <span style="color:#ffcc55">-d</span><span style="color:#ffcc55">--restart</span> always <span style="color:#ffcc55">--name</span> gateway-api <span style="color:#ffcc55">-p</span> 8000:8000 <span style="color:#ffcc55">-p</span> 8200:8080 <span style="color:#ffcc55">-p</span> 8300:8081 <span style="color:#ffcc55">-v</span><span style="color:orange">$(</span><span style="color:#0086b3">pwd</span><span style="color:orange">)</span>/data:/data/ registry.cn-shenzhen.aliyuncs.com/tokengo/gateway-api</span><span>docker run <span style="color:#ffcc55">-d</span><span style="color:#ffcc55">--restart</span> always <span style="color:#ffcc55">--privileged</span><span style="color:#ffcc55">--name</span> gateway-web <span style="color:#ffcc55">-p</span> 10800:80 <span style="color:#ffcc55">-e</span><span style="color:#ffaa44">api_url</span><span>=</span>http://localhost:8000 registry.cn-shenzhen.aliyuncs.com/tokengo/gateway-web</span></pre><div>
   &nbsp;
  </div></div></div><h2>Docker-Compose 文件</h2><div><div><pre><span><span style="color:#008080">services</span><span>:</span></span><span><span style="color:#008080">gateway-api</span><span>:</span></span><span><span style="color:#008080">image</span><span>:</span><span style="background-color:transparent; color:#00aadd">registry.cn-shenzhen.aliyuncs.com/tokengo/gateway-api</span></span><span><span style="color:#008080">restart</span><span>:</span><span style="background-color:transparent; color:#00aadd">always</span></span><span><span style="color:#008080">container_name</span><span>:</span><span style="background-color:transparent; color:#00aadd">gateway-api</span></span><span><span style="color:#008080">environment</span><span>:</span></span><span><span style="color:#008080">USER</span><span>:</span><span style="background-color:transparent; color:#00aadd">root</span></span><span><span style="color:#008080">PASS</span><span>:</span><span style="background-color:transparent; color:#00aadd">Aa010426.</span></span><span><span style="color:#008080">ports</span><span>:</span></span><span><span>-</span><span style="background-color:transparent; color:#00aadd">8000:8000</span><span style="color:#888888"># 提供給 web 端調用的管理接口</span></span><span><span>-</span><span style="background-color:transparent; color:#00aadd">8200:8080</span><span style="color:#888888"># Http 代理端口</span></span><span><span>-</span><span style="background-color:transparent; color:#00aadd">8300:8081</span><span style="color:#888888"># Https 代理端口</span></span><span><span style="color:#008080">volumes</span><span>:</span></span><span><span>-</span><span style="background-color:transparent; color:#00aadd">./data:/data/</span><span style="color:#888888"># 請注意手動創建 data 目錄，負責在 Linux 下可能出現權限問題導致無法寫入</span></span><span><span style="color:#008080">gateway-web</span><span>:</span></span><span><span style="color:#008080">image</span><span>:</span><span style="background-color:transparent; color:#00aadd">registry.cn-shenzhen.aliyuncs.com/tokengo/gateway-web</span></span><span><span style="color:#008080">restart</span><span>:</span><span style="background-color:transparent; color:#00aadd">always</span></span><span><span style="color:#008080">build</span><span>:</span></span><span><span style="color:#008080">context</span><span>:</span><span style="background-color:transparent; color:#00aadd">../web</span></span><span><span style="color:#008080">dockerfile</span><span>:</span><span style="background-color:transparent; color:#00aadd">Dockerfile</span></span><span><span style="color:#008080">privileged</span><span>:</span><span style="color:turquoise">true</span></span><span><span style="color:#008080">environment</span><span>:</span></span><span><span style="color:#008080">api_url</span><span>:</span><span style="background-color:transparent; color:#00aadd">http://localhost:8000</span></span><span><span style="color:#008080">ports</span><span>:</span></span><span><span>-</span><span style="background-color:transparent; color:#00aadd">10800:80</span></span></pre><div>
   &nbsp;
  </div></div></div><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">如果並沒有提供賬號密碼則默認</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">賬號：root</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">密碼：Aa010426.</p><h2>替換默認的 https 證書</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">由於需要使用 https，為了方便系統默認提供了一個 pfx 證書，如果你需要提供的話可以按照以下操作進行，如果是 Docker 執行的話證書的目錄則是<span>&nbsp;</span><code>/app/certificates/gateway.pfx</code></p><div><div><pre><span><span style="color:#008080">services</span><span>:</span></span><span><span style="color:#008080">gateway-api</span><span>:</span></span><span><span style="color:#008080">image</span><span>:</span><span style="background-color:transparent; color:#00aadd">registry.cn-shenzhen.aliyuncs.com/tokengo/gateway-api</span></span><span><span style="color:#008080">restart</span><span>:</span><span style="background-color:transparent; color:#00aadd">always</span></span><span><span style="color:#008080">container_name</span><span>:</span><span style="background-color:transparent; color:#00aadd">gateway-api</span></span><span><span style="color:#008080">ports</span><span>:</span></span><span><span>-</span><span style="background-color:transparent; color:#00aadd">8000:8000</span><span style="color:#888888"># 提供給 web 端調用的管理接口</span></span><span><span>-</span><span style="background-color:transparent; color:#00aadd">8200:8080</span><span style="color:#888888"># Http 代理端口</span></span><span><span>-</span><span style="background-color:transparent; color:#00aadd">8300:8081</span><span style="color:#888888"># Https 代理端口</span></span><span><span style="color:#008080">environment</span><span>:</span></span><span><span style="color:#008080">USER</span><span>:</span><span style="background-color:transparent; color:#00aadd">root</span></span><span><span style="color:#008080">PASS</span><span>:</span><span style="background-color:transparent; color:#00aadd">Aa010426.</span></span><span><span style="color:#008080">HTTPS_PASSWORD</span><span>:</span><span style="background-color:transparent; color:#00aadd">dd666666</span></span><span><span style="color:#008080">HTTPS_FILE</span><span>:</span><span style="background-color:transparent; color:#00aadd">gateway.pfx</span></span><span><span style="color:#008080">ports</span><span>:</span></span><span><span>-</span><span style="background-color:transparent; color:#00aadd">8200:8080</span></span><span><span style="color:#008080">volumes</span><span>:</span></span><span><span>-</span><span style="background-color:transparent; color:#00aadd">./data:/data/</span></span><span><span>-</span><span style="background-color:transparent; color:#00aadd">./app/certificates:/app/certificates</span></span><span><span style="color:#008080">gateway-web</span><span>:</span></span><span><span style="color:#008080">image</span><span>:</span><span style="background-color:transparent; color:#00aadd">registry.cn-shenzhen.aliyuncs.com/tokengo/gateway-web</span></span><span><span style="color:#008080">restart</span><span>:</span><span style="background-color:transparent; color:#00aadd">always</span></span><span><span style="color:#008080">container_name</span><span>:</span><span style="background-color:transparent; color:#00aadd">gateway-web</span></span><span><span style="color:#008080">privileged</span><span>:</span><span style="color:turquoise">true</span></span><span><span style="color:#008080">environment</span><span>:</span></span><span><span style="color:#008080">api_url</span><span>:</span><span style="background-color:transparent; color:#00aadd">http://localhost:8000</span></span><span><span style="color:#008080">ports</span><span>:</span></span><span><span>-</span><span style="background-color:transparent; color:#00aadd">10800:80</span></span></pre><div>
   &nbsp;
  </div></div></div><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">參考上面的 docker-compose 文件，我們提供了倆個環境變量<code>HTTPS_PASSWORD</code>，<code>HTTPS_FILE</code>，</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><code>HTTPS_FILE</code>：</p><ul><li>在系統中已經指定了容器的<code>/app/certificates</code>目錄，你只想要掛在目錄中的文件名即可</li></ul><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><code>HTTPS_PASSWORD</code>：</p><ul><li>Pfx 證書的密碼，如果修改了證書請填寫證書的密碼。</li></ul><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><code>/app/certificates</code>：</p><ul><li>這個是系統證書默認存放目錄，如果映射了目錄則需要提供自己的證書。</li></ul><h2>使用隧道</h2><div><div><pre><span><span style="color:#008080">services</span><span>:</span></span><span><span style="color:#008080">gateway-api</span><span>:</span></span><span><span style="color:#008080">image</span><span>:</span><span style="background-color:transparent; color:#00aadd">registry.cn-shenzhen.aliyuncs.com/tokengo/gateway-api</span></span><span><span style="color:#008080">restart</span><span>:</span><span style="background-color:transparent; color:#00aadd">always</span></span><span><span style="color:#008080">container_name</span><span>:</span><span style="background-color:transparent; color:#00aadd">gateway-api</span></span><span><span style="color:#008080">environment</span><span>:</span></span><span><span style="color:#008080">USER</span><span>:</span><span style="background-color:transparent; color:#00aadd">root</span></span><span><span style="color:#008080">PASS</span><span>:</span><span style="background-color:transparent; color:#00aadd">Aa010426.</span></span><span><span style="color:#008080">HTTPS_PASSWORD</span><span>:</span><span style="background-color:transparent; color:#00aadd">dd666666</span></span><span><span style="color:#008080">TUNNEL_PASSWORD</span><span>:</span><span style="background-color:transparent; color:#00aadd">dd666666</span></span><span><span style="color:#008080">HTTPS_FILE</span><span>:</span><span style="background-color:transparent; color:#00aadd">gateway.pfx</span></span><span><span style="color:#008080">ports</span><span>:</span></span><span><span>-</span><span style="background-color:transparent; color:#00aadd">8000:8000</span><span style="color:#888888"># 提供給 web 端調用的管理接口</span></span><span><span>-</span><span style="background-color:transparent; color:#00aadd">8200:8080</span><span style="color:#888888"># Http 代理端口</span></span><span><span>-</span><span style="background-color:transparent; color:#00aadd">8300:8081</span><span style="color:#888888"># Https 代理端口</span></span><span><span style="color:#008080">volumes</span><span>:</span></span><span><span>-</span><span style="background-color:transparent; color:#00aadd">./data:/data/</span></span><span><span>-</span><span style="background-color:transparent; color:#00aadd">./app/certificates:/app/certificates</span></span><span><span style="color:#008080">gateway-web</span><span>:</span></span><span><span style="color:#008080">image</span><span>:</span><span style="background-color:transparent; color:#00aadd">registry.cn-shenzhen.aliyuncs.com/tokengo/gateway-web</span></span><span><span style="color:#008080">restart</span><span>:</span><span style="background-color:transparent; color:#00aadd">always</span></span><span><span style="color:#008080">container_name</span><span>:</span><span style="background-color:transparent; color:#00aadd">gateway-web</span></span><span><span style="color:#008080">privileged</span><span>:</span><span style="color:turquoise">true</span></span><span><span style="color:#008080">environment</span><span>:</span></span><span><span style="color:#008080">api_url</span><span>:</span><span style="background-color:transparent; color:#00aadd">http://localhost:8000</span></span><span><span style="color:#008080">ports</span><span>:</span></span><span><span>-</span><span style="background-color:transparent; color:#00aadd">10800:80</span></span></pre><div>
   &nbsp;
  </div></div></div><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">增加<code>TUNNEL_PASSWORD</code>環境變量，默認為空不設置密碼</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">下載隧道客户端<span>&nbsp;</span><a href="https://gitee.com/hejiale010426/Gateway/releases">https://gitee.com/hejiale010426/Gateway/releases</a><span>&nbsp;</span>然後解壓壓縮包，打開 appsettings.json 文件修改 Tunnel 節點的 Url，如果 Gateway 使用了 TUNNEL_PASSWORD，那麼你的 URL 應該是<code>https://localhost:8081/api/gateway/connect-h2?host=backend1.app&amp;password=dd666666</code>，<span>&nbsp;</span><code>host</code>是在集羣中的集羣端點的域名，這個域名就是定義到我們的隧道客户端的<code>host</code>的這個參數，請保證值的唯一性，當綁定集羣的路由匹配成功以後則會訪問圖片定義的端點，如果並沒有存在節點那麼他會直接代理。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="輸入圖片説明" src="https://gitee.com/hejiale010426/FastGateway/raw/master/img/%E9%9B%86%E7%BE%A4-01.png.png" referrerpolicy="no-referrer"></p><h2>出入流量監控</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">使用環境變量控制是否啓用流量監控，使用環境變量<code>ENABLE_FLOW_MONITORING</code>設置我們是否啓用流量監控，如果為空則默認啓動流量監控，然後可以打開我們的控制面板查看流量監控的數據。</p><div><div><pre><span><span style="color:#008080">services</span><span>:</span></span><span><span style="color:#008080">gateway-api</span><span>:</span></span><span><span style="color:#008080">image</span><span>:</span><span style="background-color:transparent; color:#00aadd">registry.cn-shenzhen.aliyuncs.com/tokengo/gateway-api</span></span><span><span style="color:#008080">restart</span><span>:</span><span style="background-color:transparent; color:#00aadd">always</span></span><span><span style="color:#008080">container_name</span><span>:</span><span style="background-color:transparent; color:#00aadd">gateway-api</span></span><span><span style="color:#008080">environment</span><span>:</span></span><span><span style="color:#008080">USER</span><span>:</span><span style="background-color:transparent; color:#00aadd">root</span></span><span><span style="color:#008080">PASS</span><span>:</span><span style="background-color:transparent; color:#00aadd">Aa010426.</span></span><span><span style="color:#008080">HTTPS_PASSWORD</span><span>:</span><span style="background-color:transparent; color:#00aadd">dd666666</span></span><span><span style="color:#008080">HTTPS_FILE</span><span>:</span><span style="background-color:transparent; color:#00aadd">gateway.pfx</span></span><span><span style="color:#008080">ENABLE_FLOW_MONITORING</span><span>:</span><span style="color:turquoise">true</span></span><span><span style="color:#008080">ports</span><span>:</span></span><span><span>-</span><span style="background-color:transparent; color:#00aadd">8000:8000</span><span style="color:#888888"># 提供給 web 端調用的管理接口</span></span><span><span>-</span><span style="background-color:transparent; color:#00aadd">8200:8080</span><span style="color:#888888"># Http 代理端口</span></span><span><span>-</span><span style="background-color:transparent; color:#00aadd">8300:8081</span><span style="color:#888888"># Https 代理端口</span></span><span><span style="color:#008080">volumes</span><span>:</span></span><span><span>-</span><span style="background-color:transparent; color:#00aadd">./data:/data/</span></span><span><span>-</span><span style="background-color:transparent; color:#00aadd">./app/certificates:/app/certificates</span></span><span><span style="color:#008080">gateway-web</span><span>:</span></span><span><span style="color:#008080">image</span><span>:</span><span style="background-color:transparent; color:#00aadd">registry.cn-shenzhen.aliyuncs.com/tokengo/gateway-web</span></span><span><span style="color:#008080">restart</span><span>:</span><span style="background-color:transparent; color:#00aadd">always</span></span><span><span style="color:#008080">container_name</span><span>:</span><span style="background-color:transparent; color:#00aadd">gateway-web</span></span><span><span style="color:#008080">privileged</span><span>:</span><span style="color:turquoise">true</span></span><span><span style="color:#008080">environment</span><span>:</span></span><span><span style="color:#008080">api_url</span><span>:</span><span style="background-color:transparent; color:#00aadd">http://localhost:8000</span></span><span><span style="color:#008080">ports</span><span>:</span></span><span><span>-</span><span style="background-color:transparent; color:#00aadd">10800:80</span></span></pre></div></div><p>&nbsp;</p><p>開源地址：<a href="https://gitee.com/hejiale010426/FastGateway">FastGateway: FastGateway 一個超級簡單方便的網關，基於 Kestrel+Yarp 實現的網關。 支持動態配置路由，支持動態配置集羣，支持動態配置 HTTPS 證書，無需重啓即可使用。 (gitee.com)</a></p><p>&nbsp;</p><p><strong>效果圖</strong></p><p><img height="974" src="https://oscimg.oschina.net/oscnet/up-213cad83fbc8f296333c9970b2dee268483.png" width="1480" referrerpolicy="no-referrer"></p><p>&nbsp;</p><p><img height="979" src="https://oscimg.oschina.net/oscnet/up-64949f2af7f4f1cd4a212c94f185ba0df7d.png" width="1485" referrerpolicy="no-referrer"></p><p><img height="986" src="https://oscimg.oschina.net/oscnet/up-57d5ac2dcda53c11dc8019ca721f9835f84.png" width="1489" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Sat, 03 Feb 2024 03:57:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/277575</guid>
            <link>https://www.oschina.net/news/277575</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[扎克伯格解釋 Meta 為什麼要開源其 AI 技術]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>在今天的 2023 年第四季度財報電話會議中，馬克 - 扎克伯格解釋 Meta 為什麼要開源其 AI 技術。</p><p>Meta 開源其 AI 技術是出於推動技術創新、提升模型質量、建立行業標準、吸引人才、增加透明度和支持其長期戰略的考慮。這不僅有助於 Meta 在競爭激烈的 AI 領域保持領先地位，也有助於推動整個行業的前進。</p><p>1. <strong>促進行業創新</strong>: 通過開源 AI 模型，Meta 可以鼓勵全球的開發者、研究人員和公司利用這些技術進行創新。這種共享精神有助於加速 AI 技術的進步，並推動新應用和服務的開發。</p><p>2. <strong>提高模型質量</strong>: 開源允許更廣泛的社區參與到模型的測試和改進中來。來自全球的貢獻可以幫助發現並修復錯誤，提出改進意見，從而提高模型的性能和可靠性。</p><p>3. <strong>建立行業標準</strong>: 通過將自己的技術開源，Meta 有機會塑造行業標準和最佳實踐。這種影響力可以確保 Meta 在 AI 領域的技術和方法得到廣泛接受和使用，從而加強其市場地位。</p><p>4. <strong>吸引和保留人才</strong>: 開源項目通常對研究人員和開發者具有吸引力。通過貢獻於開放且受尊重的項目，Meta 可以吸引頂尖人才加入，這對於維持其在 AI 領域的競爭優勢至關重要。</p><p>5. <strong>提升安全性和透明度</strong>: 開源 AI 模型可以提高透明度，讓外部研究人員和公眾能夠更好地理解模型的工作原理和潛在影響。這有助於識別和緩解與 AI 應用相關的風險和倫理問題，從而增強公眾對 AI 技術的信任。</p><p>6. <strong>支持長期戰略</strong>: Meta 開源 AI 技術也是其長期戰略的一部分，旨在確保公司在 AI 和機器學習領域的長期領導地位。通過開源，Meta 可以推動整個生態系統的發展，為自己的產品和服務創造更多的創新機會。</p><blockquote><p>本文已獲授權。</p><p>完整內容參考：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fs21.q4cdn.com%2F399680738%2Ffiles%2Fdoc_financials%2F2023%2Fq4%2FMETA-Q4-2023-Earnings-Call-Transcript.pdf" target="_blank">https://s21.q4cdn.com/399680738/files/doc_financials/2023/q4/META-Q4-2023-Earnings-Call-Transcript.pdf</a><br> 譯文：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbaoyu.io%2Ftranslations%2Fmeta%2Fmark-zuckerberg-explains-why-meta-open-sources-its-ai" target="_blank">https://baoyu.io/translations/meta/mark-zuckerberg-explains-why-meta-open-sources-its-ai</a></p></blockquote></div>
                                    ]]>
            </description>
            <pubDate>Sat, 03 Feb 2024 03:01:36 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/277568</guid>
            <link>https://www.oschina.net/news/277568</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[谷歌 Bard 支持文本生成圖像功能]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>谷歌對話式 AI 工具&nbsp;<span style="font-family:-apple-system,BlinkMacSystemFont,&quot;Apple Color Emoji&quot;,&quot;Segoe UI Emoji&quot;,&quot;Segoe UI Symbol&quot;,&quot;Segoe UI&quot;,&quot;PingFang SC&quot;,&quot;Hiragino Sans GB&quot;,&quot;Microsoft YaHei&quot;,&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif">Bard 近日發佈了更新，此次更新後將支持文生圖和擴展雙重檢查功能。</span></p><blockquote><p><img src="https://oscimg.oschina.net/oscnet/up-1a225c71ee0e459f8cfa6a7ac710106c3f6.png" referrerpolicy="no-referrer"><em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbard.google.com%2Fupdates" target="_blank">https://bard.google.com/updates</a></u></em></p></blockquote><p><strong>Bard 此次新增的圖像生成功能將在全球受支持的地區免費提供，由谷歌 Imagen 2 模型提供支持，但需要英語指令</strong>。用户現在可以根據向 Bard 提供的描述生成自定義圖像。谷歌承諾，Bard 可提供「高質量、逼真的圖像輸出」。</p><p><img src="https://oscimg.oschina.net/oscnet/up-4b6453ff6415cb9ad30a9eab1cd5a61b3cb.png" referrerpolicy="no-referrer"></p><p>谷歌表示，Imagen 2 不會生成暴力、攻擊性或包含色情內容的圖片。此外，Imagen 2 還接受了一些「培訓」，可以幫助它避免創建特定人羣的圖像。為將 Bard 生成的 AI 圖片與人類作品區分開來，谷歌將嵌入「像素級別」的數字可識別水印。</p><p>Bard 在此次更新之後，谷歌 Gemini Pro 模型新增了 40 多種語言、230 多個國家和地區的支持。</p><p>谷歌表示，Gemini Pro 增強了 Bard 的理解、總結、推理、創意、協作和規劃方面的能力。谷歌還將 Bard 的「雙重檢查」功能擴展到 40 多種語言，用户可以通過檢查整個互聯網的內容來驗證 AI 所作回答的準確性。在此之前，「雙重檢查」功能僅限於英語。</p><p>詳情查看&nbsp;<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.google%2Ftechnology%2Fai%2Fgoogle-imagen-2%2F" target="_blank">https://blog.google/technology/ai/google-imagen-2/</a></u></p></div>
                                    ]]>
            </description>
            <pubDate>Sat, 03 Feb 2024 02:54:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/277567/bard-ai-image-generation</guid>
            <link>https://www.oschina.net/news/277567/bard-ai-image-generation</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[deepin V23 最後一個測試版本 ——Beta3 來了！]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span>deepin V23 最後一個測試版本——Beta3&nbsp;來了！</span></p><p style="color:#020000; margin-left:0; margin-right:0"><span>deepin V23 Beta3 版本對鏡像預裝包中 1400+ 包進行升級，新增了 250+ 軟件包系統更新，並進一步優化功能體驗，包括：</span></p><ul><li><p style="color:#020000; margin-left:0; margin-right:0"><span>安裝器支持 768P、1080P、2K、4K 屏幕界面自適應；</span></p></li><li><p style="color:#020000; margin-left:0; margin-right:0"><span>支持 Steam 原生應用正常安裝和遊戲運行；</span></p></li><li><p style="color:#020000; margin-left:0; margin-right:0"><span>系統底層依賴的更新升級：GCC、Qt、glibc 等等；</span></p></li><li><p style="color:#020000; margin-left:0; margin-right:0"><span>對啓動器進行了代碼層面重構提升了運行速度；</span></p></li><li><p style="color:#020000; margin-left:0; margin-right:0"><span>控制中心-時間日期-區域-國家地區支持根據用户所在的區域語言，設置本土化時間、日期格式；</span></p><p style="color:#020000; margin-left:0; margin-right:0"><span>......</span></p></li></ul><p style="color:#020000; margin-left:0; margin-right:0"><span>感謝每一位 deepiner 提供想法與建議，讓我們一起為打造美觀易用、安全可靠的開源操作系統而努力！</span></p><p style="margin-left:0px; margin-right:0px; text-align:center"><u><span><strong>&nbsp;</strong></span><span><strong>功能新增</strong></span><span><strong>&nbsp;</strong></span></u></p><p><strong><span style="color:#01a0e7">【系統/安裝】</span></strong></p><ul><li><p><span style="background-color:#ffffff; color:#020000">鏡像安裝時 Grub 頁面 safe 模式後增加了説明提示性文字</span><span style="background-color:#ffffff; color:#020000">，避免用户因不理解而錯誤使用 safe 模式安裝問題；</span></p></li><li><p><span>安裝器支持 768P、1080P、2K、4K 屏幕界面自適應；</span></p></li><li><p><span>對部分 i386 設備驅動進行了支持；</span></p></li><li><p><span>支持了 Steam 原生應用正常安裝和遊戲運行。</span></p></li></ul><p><strong><span style="color:#01a0e7">【系統倉庫】</span></strong></p><ul><li><p><span>大量系統底層庫得到更新，系統倉庫整體約 4000+ 軟件包更新 (包括新增軟件包)&nbsp;添加了 i386、RISC-V64、LoongArch64 架構支持；</span></p></li><li><p><span>GCC 更新到 13.2 版本；</span></p></li><li><p><span>glibc 更新到 2.37；</span></p></li><li><p><span>ICU 更新到 73.2；</span></p></li><li><p><span>Qt6 更新到 6.6.1；</span></p></li><li><p><span>FFmpeg 更新到 6.0；</span></p></li><li><p><span>Mesa 更新到 23.3.3；</span></p></li><li><p><span>Python 默認版本更新到 3.11；</span></p></li><li><p><span>Perl 更新到 5.36；</span></p></li><li><p><span>LLVM 默認版本更新到 16。</span></p></li></ul><p><strong><span style="color:#01a0e7">【桌面環境】</span></strong></p><ul><li><p><span>對啓動器進行了代碼層面重構提升了運行速度；</span></p></li><li><p><span>優化了功能佈局與界面 UI 設計細節，提升了整體視覺效果；</span></p></li><li><p><span>對鍵盤選中狀態與鼠標 hover 狀態進行狀態區分；</span></p></li><li><p><span>新增增加字母表功能，可通過字母表進行應用快速檢索；</span></p></li><li><p><span>對通知圖標和時間日期點擊換出內容進行優化；</span></p></li><li><p><span>通知中心中增加了日曆組件；</span></p></li><li><p><span>優化了通知中心清除通知消息圖標，解決了錯誤圖標給用户帶來的誤導；</span></p></li><li><p><span>優化了控制中心-網絡-VPN-導入操作按鈕圖標樣式；</span></p></li><li><p><span>控制中心-賬户頭像中新增創意插圖分類；</span></p></li><li><p><span>控制中心-賬户頭像-人物頭像中增加了立體風格素材圖片；</span></p></li><li><p><span>控制中心-通用新增啓動動畫設置項；</span></p></li><li><p><span>控制中心-藍牙支持藍牙設備剩餘電量顯示；</span></p></li><li><p><span>控制中心-賬户密碼登錄、鎖屏管理功能進行了統一管理；</span></p></li><li><p><span>控制中心-聲音-音頻增加外設插拔管理中插拔音頻設備是否暫停播放進行管理；</span></p></li><li><p><span>控制中心-聲音-多媒體音頻框架高級設置，可切換音頻框架；</span></p></li><li><p><span>控制中心-時間日期-區域-國家地區支持根據用户所在的區域語言，設置本土化時間、日期格式；</span></p></li><li><p><span>控制中心-網絡設置中 IPV4\IPV6 方法設置項中增加了禁用選項；</span></p></li><li><p><span>控制中心-電源-通用，性能模式功能中增加了説明文字；</span></p></li><li><p><span>控制中心-電源-通用，對 Intel、AMD 內存增加了電源性能管理選項。</span></p></li></ul><p><strong><span style="color:#01a0e7">【UOS AI】</span></strong></p><ul><li><p><span>系統預裝了 UOS AI 插件，用户可使用 UOS AI；</span></p></li><li><p><span>提供了免費的 AI 試用帳號，可在系統中使用 UOS AI 功能；</span></p></li><li><p><span>對了接了主流的 AI 模型接口，用户可使用自有的 AI 帳號進行綁定使用。</span></p></li></ul><p><strong><span style="color:#01a0e7">【日曆】</span></strong></p><ul><li><p><span>日曆應用更新了 2024 年法定休假安排。</span></p></li></ul><p><strong><span style="color:#01a0e7">【應用商店】</span></strong></p><ul><li><p><span>新增 deepin ID 同步應用下載記錄功能；</span></p></li><li><p><span>新增用户提交心願單，反饋所需應用功能；</span></p></li><li><p><span>應用更新頁面，忽略應用更新功能；</span></p></li><li><p><span>應用更新/應用管理頁面支持搜索已安裝應用；</span></p></li><li><p><span>針對應用商店內付費應用添加提示。</span></p></li></ul><p><strong><span style="color:#01a0e7">【文件管理器】</span></strong></p><ul><li><p><span>新增右鍵菜單增加反選選項；</span></p></li><li><p><span>新增右鍵菜單顯示快捷鍵功能；</span></p></li><li><p><span>新增右鍵文件屬性複製信息；</span></p></li><li><p><span>新增窗口主視圖篩選搜索功能；</span></p></li><li><p><span>新增遠程環境是否展示縮略圖預覽設置項；</span></p></li><li><p><span>設置中增加複選項「列表視圖以樹形結構展示」功能設置項；</span></p></li><li><p><span>對文管圖標視圖佈局進行優化，提升空間利用率；</span></p></li><li><p style="color:#020000; margin-left:0; margin-right:0"><span>對側邊欄目錄顯示規則進行優化。</span></p></li></ul><p style="margin-left:0px; margin-right:0px; text-align:center"><u><span><strong>&nbsp;</strong></span><span><strong>用户反饋修復</strong></span><span><strong>&nbsp;</strong></span></u></p><p><strong><span style="color:#01a0e7">【DDE】</span></strong></p><ul><li><p><span>修復在商店中卸載應用後，桌面圖標消失了，但是啓動器中的圖標沒有消失問題；</span></p></li><li><p><span>修復啓動器應用分類中的應用展示順序及位置不正確；</span></p></li><li><p><span>修復打開應用如音樂，將音樂託盤圖片拖動至任務欄，重新打開應用，託盤區域出現兩個音樂圖標問題；</span></p></li><li><p><span>修復開啓託盤駐留應用後，任務欄重複拖動託盤圖標導致託盤區域圖標消失問題；</span></p></li><li><p><span>修復外接顯示器後斷開顯示器連接，快捷面板中亮度調節插件無法恢復問題；</span></p></li><li><p><span>修復了在調整屏幕縮放比例後等待時間過長問題；</span></p></li><li><p><span>修復控制中心-網絡無法連接或斷開時，deepin ID 賬户頭像無法正常顯示異常問題；</span></p></li><li><p><span>修復控制中心-更新設置項玲瓏軟件更新按鈕關閉後,系統重啓後變為開啓狀態,未記住用户設置；</span></p></li><li><p><span>修復切換主題時，主題切換成功但壁紙為上一主題的壁紙問題；</span></p></li><li><p><span>修復任務欄插件面板中屏幕鍵盤圖標展示為白色圖標，導致無法看清圖標問題；</span></p></li><li><p><span>修復在終端安裝 Libreswan 後，控制中心網絡模塊圖標消失問題；</span></p></li><li><p><span>修復鼠標移動至任務欄快捷面板面板邊緣錯誤顯示可調整大小問題；</span></p></li><li><p><span>修復在任務欄快捷面板中，使用鼠標滾輪調整顯示亮度時，亮度值在 28 和 56 時就無法繼續滾動設置問題；</span></p></li><li><p><span>修復設置系統窗口圓角為直角，添加或修改系統時區時世界地圖二級窗口圓角未跟隨系統設置變化問題；</span></p></li><li><p><span>修復部分機型進入桌面後，關閉飛行模式後，無線網絡搜索不到網絡問題；</span></p></li><li><p><span>修復控制中心工作區相關的快捷鍵修改後，快捷鍵沒有響應問題；</span></p></li><li><p><span>修復控制中心聲音模塊中的設備管理-輸入設備和輸出設備開關無實際作用問題。</span></p></li></ul><p><strong><span style="color:#01a0e7">【文件管理器】</span></strong></p><ul><li><p><span>修復深色模式下，重命名文件名稱時右鍵菜單命令前的圖標展示為黑色無法看清問題；</span></p></li><li><p><span>修復在 NTFS 格式磁盤中新建文件夾包含有空格字符結尾的文件夾無法創建成功，提示設備或資源繁忙問題；</span></p></li><li><p><span>修復從回收站複製文件夾到任意位置進行粘貼操作時會提示該文件夾已存在的錯誤提示；</span></p></li><li><p><span>修復在 SMB 上刪除 .gif 格式圖片無法刪除成功，提示刪除失敗文件繁忙問題；</span></p></li><li><p><span>修復從 Ext4 格式分區複製或剪切文件夾名稱中空格結尾的文件夾至 NTFS 格式分區時，無法複製或剪切成功問題；</span></p></li><li><p><span>修復從本機硬盤往 U 盤或移動硬盤複製或剪貼文件時進度和文件夾窗口消失，文件複製中斷問題；</span></p></li><li><p><span>修復文件進行替換操作時，提示信息中展示的文件大小信息與實際文件大小信息不一致問題；</span></p></li><li><p><span>修復 Chrome 谷歌瀏覽器創建桌面應用快捷方式，生成網站 icon 失敗問題。</span></p></li></ul><p><strong><span style="color:#01a0e7">【終端】</span></strong></p><ul><li><p><span>修復在任意目錄右鍵點擊，選擇「在終端中打開」，都會被定位到家目錄的問題；</span></p></li><li><p><span>修復終端分屏分辨率不一致時，雷神窗口寬度可能過小的問題；</span></p></li><li><p><span>修復新建用户登錄系統，打開終端後未展示當前用户名、機器名稱、當前路徑等信息問題；</span></p></li><li><p><span>修復連接 4K 屏幕擴展模式下，在 4K 屏幕按 Alt F2 打開雷神終端，將鼠標移動到另一屏幕按 Alt F2 時，雷神終端顯示異常問題；</span></p></li><li><p><span>雙屏擴展模式下，在主屏 Alt F2 打開雷神終端,點擊屏幕空白處，再將鼠標移動到另一屏幕按 Alt F2 時，出現兩個雷神終端問題；</span></p></li><li><p><span>將主題設置為跟隨系統後，再將鼠標移動到深色時，預覽圖的標題欄沒有同步展示為深色問題；</span></p></li><li><p><span>調換切換前後標籤頁快捷鍵為正確順序；</span></p></li><li><p><span>修復雷神窗口無法設置模糊的問題；</span></p></li><li><p><span>Dirty Fix 改為部分刷新光標後的顯示問題；</span></p></li><li><p><span>修復無法打開未以&nbsp;「 / 」&nbsp;結尾帶端口號鏈接的問題；</span></p></li><li><p><span>修復調整窗口大小時刷新大量 debug 日誌的問題；</span></p></li><li><p><span>修改右鍵菜單打開文件/文件夾時的調用方式。</span></p></li></ul><p><strong><span style="color:#01a0e7">【深度之家】</span></strong></p><ul><li><p><span>修復提交反饋中郵箱文本框中，輸入的文本中&nbsp;@&nbsp;字符不允許以首字符或中間字符輸入問題；</span></p></li><li><p style="margin-left:0; margin-right:0"><span>修復點擊主菜單圖標，無法收起已經展開菜單。</span></p></li></ul><p><strong><span style="color:#01a0e7">【玲瓏】</span></strong></p><ul><li><p><span>修復右鍵 Markdown 文件，以玲瓏 MarkText 軟件打開時可打開軟件未顯示文檔內容問</span><span>題；</span></p></li><li><p><span>修復在啓動器中設置玲瓏為開機自啓動後，玲瓏應用啓動過程中自動閃退問題；</span></p></li><li><p><span>修復了玲瓏環境變量丟失問題；</span></p></li><li><p style="margin-left:0; margin-right:0"><span>修復瀏覽器更新版本後，無法播放網頁視頻問題。</span></p></li></ul><p><strong><span style="color:#01a0e7">【已知待修復問題】</span></strong></p><ul><li><p><span>更新了系統時區庫，可能導致安裝完成後區錯誤需進入控制中心中重新設置；</span></p></li><li><p><span>部分華為終端聲音設備輸出異常，需要刷新 BIOS 或更新內核至 6.6 後才可解決；</span></p></li><li><p><span>部分機型雙屏擴展模式下，啓動器全屏模式時，啓動器會顯示在另一個屏幕上；</span></p></li><li><p><span>雙屏擴展模式下，啓動器偶現在兩個屏幕中間顯示；</span></p></li><li><p><span>啓動器全屏時，點擊任務欄中應用圖標打開應用，啓動器未自動退出；</span></p></li><li><p><span>啓動器全屏模式下未鋪滿整個屏幕；</span></p></li><li><p><span>啓動器開啓按下截圖快捷鍵啓動器被隱藏；</span></p></li><li><p><span>啓動器全屏時按下右鍵菜單並滾動屏幕菜單不會被隱藏。</span></p></li></ul><p><span><span style="background-color:#ffffff; color:#020000">以上就是 deepin V23 Beta3 版本更新的主要內容，歡迎下載體驗，並將所遇到的問題反饋給我們。</span></span></p><p><strong><span style="background-color:#ffffff; color:#020000">鏡像下載地址：</span></strong><span style="background-color:#ffffff; color:#020000">www.deepin.org/download/</span></p><p style="color:#020000; margin-left:0; margin-right:0; text-align:justify"><strong>注意事項：</strong></p><ul><li><p style="color:#020000; margin-left:0; margin-right:0"><span>升級過程中不要鎖屏、待機、關機、重啓等；</span></p></li><li><p style="color:#020000; margin-left:0; margin-right:0"><span>升級前請保證系統根分區擁有足夠的備份空間和更新空間；</span></p></li><li><p style="color:#020000; margin-left:0; margin-right:0"><span>保留用户數據重裝系統，可能會導致安裝完成後無法啓動。</span></p></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Fri, 02 Feb 2024 10:26:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/5046223/blog/11023703</guid>
            <link>https://my.oschina.net/u/5046223/blog/11023703</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Zabbix7.0 beta1 發佈，性能提升、架構優化等新功能搶先看]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="rich_media_content js_underline_content
                       autoTypeSetting24psection
            " id="js_content"><section style="font-size: 16px;"><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section style="line-height: 0;" powered-by="xiumi.us"><section style="vertical-align: middle;display: inline-block;line-height: 0;"><img class="rich_pages wxw-img" data-imgfileid="100020572" data-ratio="0.6055555555555555" data-s="300,640" src="https://oscimg.oschina.net/oscnet/6d5f4663-24d1-4652-acc5-0204d0a20461.png" data-type="png" data-w="1080" style="vertical-align: middle;width: 100%;" referrerpolicy="no-referrer"></section></section><a title="https://www.zabbix.com/cn/download_sources#pre-release" formlinkparm="[{&quot;href&quot;:&quot;https://www.zabbix.com/cn/download_sources#pre-release&quot;}]" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.zabbix.com%2Fcn%2Fdownload_sources%23pre-release" target="_blank" rel="noopener noreferrer" powered-by="xiumi.us" data-linktype="2"><p style="text-align: center;text-wrap: wrap;"><span style="font-size: 15px;font-family: Optima-Regular, PingFangTC-light;">點擊立即試用 Zabbix7.0&nbsp;</span><span style="font-family: Optima-Regular, PingFangTC-light;font-size: 15px;color: inherit;">beta1</span></p></a><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section style="font-size: 15px;line-height: 1.5;letter-spacing: 1px;font-family: Optima-Regular, PingFangTC-light;" powered-by="xiumi.us"><p style="text-wrap: wrap;"><strong><span style="color: rgb(212, 0, 0);">Zabbix7.0 beta 1 於 1 月 30 日發佈！</span></strong><span style="color: rgb(38, 33, 33);">（正式版將於第一季度發佈。）</span></p><p style="text-wrap: wrap;"><strong><span style="color: rgb(212, 0, 0);">7.0 有什麼新功能？本文<span style="font-family: Optima-Regular, PingFangTC-light;font-size: 15px;letter-spacing: 1px;text-wrap: wrap;">一睹為快。</span></span></strong></p><p style="text-wrap: wrap;"><br></p><p style="text-wrap: wrap;">Zabbix7.0 聚焦於幫助用户通過性能優化和功能升級來快速響應業務需求，從而<span style="color: rgb(212, 0, 0);">滿足客户的高期望值，並提升 IT 運維人員的生產力</span>。在可擴展性與性能、穩定性與高可用、可觀測性幾個領域獲得持續提升。</p><p style="text-wrap: wrap;"><br></p></section><section style="text-align: left;justify-content: flex-start;display: flex;flex-flow: row;margin-bottom: 10px;" powered-by="xiumi.us"><section style="display: inline-block;width: auto;vertical-align: top;align-self: flex-start;flex: 100 100 0%;padding: 22px 28px;border-style: solid;border-width: 0px 0px 0px 2px;border-left-color: rgb(230, 15, 11);height: auto;margin-left: 20px;background-color: rgb(255, 249, 241);"><section style="text-align: justify;font-size: 15px;line-height: 1.5;letter-spacing: 1px;font-family: Optima-Regular, PingFangTC-light;" powered-by="xiumi.us"><p style="text-wrap: wrap;">一、性能提升之異步數據採集</p><p style="text-wrap: wrap;">1.各進程配置參數説明</p><p style="text-wrap: wrap;">2.異步數據採集效果</p><p style="text-wrap: wrap;"><br></p><p style="text-wrap: wrap;">二、架構優化之 Zabbix Proxy 高可用和負載均衡</p><p style="text-wrap: wrap;">1.主機如何分配給 Zabbix Proxy group 監控</p><p style="text-wrap: wrap;">2.高可用和負載均衡機制</p><p style="text-wrap: wrap;">3.Zabbix Agent 參數配置</p><p style="text-wrap: wrap;"><br></p><p style="text-wrap: wrap;">三、性能提升之 Zabbix Proxy 內存緩存</p><p style="text-wrap: wrap;">1.緩存模式設置</p><p style="text-wrap: wrap;">2.緩存模式差異</p><p style="text-wrap: wrap;"><br></p><p style="text-wrap: wrap;">四、功能優化之監控項級別 Timeout</p><p style="text-wrap: wrap;">五、性能提升之並行網絡自動發現</p><p style="text-wrap: wrap;">六、功能優化之數據推送</p><p style="text-wrap: wrap;">七、功能優化之前端腳本輸入參數</p><p style="text-wrap: wrap;">八、其它提升</p><p style="text-wrap: wrap;">九、新增模板和集成方案</p></section></section></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section style="color: rgb(173, 25, 25);line-height: 1.75;" powered-by="xiumi.us"><p style="text-wrap: wrap;">一、性能提升之異步數據採集</p></section><section style="" powered-by="xiumi.us"><section style="background-color: rgb(226, 91, 91);height: 3px;"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section style="text-align: unset;font-size: 15px;font-family: Optima-Regular, PingFangTC-light;line-height: 1.5;letter-spacing: 1px;" powered-by="xiumi.us"><p>Zabbix 通過各種功能進程採集數據，例如 Pollers、Trappers 和 Pingers 等，但每個進程每次只能採集單個指標的數據，導致各類進程數量都較多。</p><p><br></p><p>在 Zabbix7.0 中，Poller 進程拆分出了 SNMP Poller、Zabbix Agent Poller 和 HTTP Agent Poller 這些類型進程，它們都支持異步線程處理，極大地提升了處理效率並且減少了進程數量。</p><p><br></p><p>所謂異步處理指線程任務相互獨立，不會阻塞主進程。單個進程最多開啓 1000 個線程。</p><p><br></p><p><span style="color: rgb(212, 0, 0);">1. 各進程配置參數説明</span></p><p><span style="color: rgb(212, 0, 0);"><br></span></p><ul class="list-paddingleft-1" style="padding-left: 40px;list-style-position: outside;"><li><p>SNMP Poller 進程數量控制</p></li></ul></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section style="line-height: 0;" powered-by="xiumi.us"><section style="vertical-align: middle;display: inline-block;line-height: 0;"><img class="rich_pages wxw-img" data-imgfileid="100020570" data-ratio="0.23148148148148148" data-s="300,640" src="https://oscimg.oschina.net/oscnet/2d73c7bf-91e3-4f61-b0a9-309e34709df7.png" data-type="png" data-w="1080" style="vertical-align: middle;width: 100%;" referrerpolicy="no-referrer"></section></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section style="text-align: unset;font-family: Optima-Regular, PingFangTC-light;line-height: 1.5;letter-spacing: 1px;" powered-by="xiumi.us"><ul class="list-paddingleft-1" style="padding-left: 40px;list-style-position: outside;"><li><p>Zabbix Agent Poller 進程數量控制</p></li></ul></section><section style="line-height: 0;" powered-by="xiumi.us"><section style="vertical-align: middle;display: inline-block;line-height: 0;"><img class="rich_pages wxw-img" data-imgfileid="100020573" data-ratio="0.23148148148148148" data-s="300,640" src="https://oscimg.oschina.net/oscnet/da5525f6-040e-498e-8991-eebd68d94d60.png" data-type="png" data-w="1080" style="vertical-align: middle;width: 100%;" referrerpolicy="no-referrer"></section></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section style="text-align: unset;font-family: Optima-Regular, PingFangTC-light;font-size: 15px;line-height: 1.5;letter-spacing: 1px;" powered-by="xiumi.us"><ul class="list-paddingleft-1" style="padding-left: 40px;list-style-position: outside;"><li><p>HTTP Agent Poller 進程數量控制</p></li></ul></section><section style="line-height: 0;" powered-by="xiumi.us"><section style="vertical-align: middle;display: inline-block;line-height: 0;"><img class="rich_pages wxw-img" data-imgfileid="100020571" data-ratio="0.23148148148148148" data-s="300,640" src="https://oscimg.oschina.net/oscnet/e1f6e48c-372f-47ae-860d-759aa1b94935.png" data-type="png" data-w="1080" style="vertical-align: middle;width: 100%;" referrerpolicy="no-referrer"></section></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section style="text-align: unset;font-family: Optima-Regular, PingFangTC-light;font-size: 15px;line-height: 1.5;letter-spacing: 1px;" powered-by="xiumi.us"><ul class="list-paddingleft-1" style="padding-left: 40px;list-style-position: outside;"><li><p>單個進程並行檢查數控制</p></li></ul></section><section style="line-height: 0;" powered-by="xiumi.us"><section style="vertical-align: middle;display: inline-block;line-height: 0;"><img class="rich_pages wxw-img" data-imgfileid="100020575" data-ratio="0.23148148148148148" data-s="300,640" src="https://oscimg.oschina.net/oscnet/9fa44017-75f7-48c7-a4b8-260b7b558bee.png" data-type="png" data-w="1080" style="vertical-align: middle;width: 100%;" referrerpolicy="no-referrer"></section></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section style="text-align: unset;font-family: Optima-Regular, PingFangTC-light;font-size: 15px;line-height: 1.5;letter-spacing: 1px;" powered-by="xiumi.us"><p><span style="color: rgb(212, 0, 0);">2. 異步數據採集效果</span></p><p><span style="color: rgb(212, 0, 0);"><br></span></p><ul class="list-paddingleft-1" style="padding-left: 40px;list-style-position: outside;"><li><p>數據流</p></li></ul></section><section style="line-height: 0;" powered-by="xiumi.us"><section style="vertical-align: middle;display: inline-block;line-height: 0;"><img class="rich_pages wxw-img" data-imgfileid="100020577" data-ratio="0.687962962962963" data-s="300,640" src="https://oscimg.oschina.net/oscnet/e66d7e5d-ae3a-4243-bf78-0cc108745a92.png" data-type="png" data-w="1080" style="vertical-align: middle;width: 100%;" referrerpolicy="no-referrer"></section></section><section style="text-align: unset;" powered-by="xiumi.us"><p><br></p></section><section style="text-align: unset;font-family: Optima-Regular, PingFangTC-light;font-size: 15px;line-height: 1.5;letter-spacing: 1px;" powered-by="xiumi.us"><ul class="list-paddingleft-1" style="padding-left: 40px;list-style-position: outside;"><li><p>採集進程處理效果</p></li></ul></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section style="line-height: 0;" powered-by="xiumi.us"><section style="vertical-align: middle;display: inline-block;line-height: 0;"><img class="rich_pages wxw-img" data-imgfileid="100020579" data-ratio="0.412962962962963" data-s="300,640" src="https://oscimg.oschina.net/oscnet/a30b5031-c40e-4c19-93e3-118466d75b78.png" data-type="png" data-w="1080" style="vertical-align: middle;width: 100%;" referrerpolicy="no-referrer"></section></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section style="line-height: 0;" powered-by="xiumi.us"><section style="vertical-align: middle;display: inline-block;line-height: 0;"><img class="rich_pages wxw-img" data-imgfileid="100020576" data-ratio="0.125" data-s="300,640" src="https://oscimg.oschina.net/oscnet/7c2a686a-6b59-487b-99bb-d5186af7d241.png" data-type="png" data-w="1080" style="vertical-align: middle;width: 100%;" referrerpolicy="no-referrer"></section></section><section style="text-align: unset;" powered-by="xiumi.us"><p><br></p></section><section style="text-align: unset;font-family: Optima-Regular, PingFangTC-light;font-size: 15px;line-height: 1.5;letter-spacing: 1px;color: rgb(212, 0, 0);" powered-by="xiumi.us"><ul class="list-paddingleft-1" style="padding-left: 40px;list-style-position: outside;"><li><p>6.0 和 7.0 性能對比</p></li></ul></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section style="line-height: 0;" powered-by="xiumi.us"><section style="vertical-align: middle;display: inline-block;line-height: 0;"><img class="rich_pages wxw-img" data-imgfileid="100020578" data-ratio="0.5314814814814814" data-s="300,640" src="https://oscimg.oschina.net/oscnet/bd3b0248-996b-4f1d-9646-8689311f2d5a.png" data-type="png" data-w="1080" style="vertical-align: middle;width: 100%;" referrerpolicy="no-referrer"></section></section><section style="color: rgb(173, 25, 25);line-height: 1.75;" powered-by="xiumi.us"><p style="text-wrap: wrap;">二、架構優化之 Zabbix Proxy 高可用和負載均衡</p></section><section style="" powered-by="xiumi.us"><section style="background-color: rgb(226, 91, 91);height: 3px;"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section><section style="text-align: unset;font-family: Optima-Regular, PingFangTC-light;font-size: 15px;line-height: 1.5;letter-spacing: 1px;" powered-by="xiumi.us"><p><br></p></section><section style="text-align: unset;font-family: Optima-Regular, PingFangTC-light;font-size: 15px;line-height: 1.5;letter-spacing: 1px;" powered-by="xiumi.us"><p>Zabbix6.0 實現了 Zabbix Server 的高可用，但是未實現 Zabbix Proxy 高可用，Zabbix7.0 同時實現了 Zabbix Proxy 高可用和負載均衡。</p><p><br></p><p>引入 Zabbix Proxy group 概念，將多台 Zabbix Proxy 合併為一個組，組內的任意 Zabbix Proxy 離線後自動將其監控主機分配給其它 Zabbix Proxy。</p><p><br></p><p><span style="color: rgb(212, 0, 0);">1. 主機如何分配給 Zabbix Proxy group 監控</span></p></section><section style="line-height: 0;" powered-by="xiumi.us"><section style="vertical-align: middle;display: inline-block;line-height: 0;"><img class="rich_pages wxw-img" data-imgfileid="100020580" data-ratio="0.7835648148148148" data-s="300,640" src="https://oscimg.oschina.net/oscnet/4643ba20-0b3b-43c0-b38f-9a9301c5ff33.png" data-type="png" data-w="864" style="vertical-align: middle;width: 100%;" referrerpolicy="no-referrer"></section></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section style="text-align: unset;font-family: Optima-Regular, PingFangTC-light;font-size: 15px;line-height: 1.5;letter-spacing: 1px;" powered-by="xiumi.us"><p><span style="color: rgb(212, 0, 0);">2. 高可用和負載均衡機制</span></p><p><span style="color: rgb(212, 0, 0);"><br></span></p><ul class="list-paddingleft-1" style="padding-left: 40px;list-style-position: outside;"><li><p>Failover period 用於檢測 Proxy 在線還是離線</p></li><li><p>Proxy group 可設置最少在線 Proxy 數量，低於該值則 Proxy group 為離線狀態</p></li><li><p>負載重分配時將排除舊版本 Proxy</p></li><li><p>如果 Proxy group 離線，組內的主機將停止重分配</p></li><li><p>當 Proxy 或者主機狀態發生變化，主機重分配將會觸發</p></li><li><p>根據每台 Proxy 監控的主機數量做負載均衡</p></li><li><p>為避免頻繁的主機重新分配，如果某台 Proxy 上較多主機同時掉線不會立即分配至其它 Proxy，而是等到主機上線後分配至主機數量最少的那台 Proxy</p></li></ul><p><br></p><p><span style="color: rgb(212, 0, 0);">3. Zabbix Agent 參數配置</span></p><p><span style="color: rgb(212, 0, 0);"><br></span></p><ul class="list-paddingleft-1" style="padding-left: 40px;list-style-position: outside;"><li><p>主動類型 Agent，ServerActive 參數至少包含 Proxy group 中一個節點 IP 地址，最好多個</p></li><li><p>被動類型 Agent，Server 參數需要包含 Proxy group 所有節點 IP 地址</p></li></ul></section><section style="text-align: unset;font-family: Optima-Regular, PingFangTC-light;font-size: 15px;line-height: 1.5;letter-spacing: 1px;" powered-by="xiumi.us"><p><br></p></section><section style="color: rgb(173, 25, 25);line-height: 1.75;" powered-by="xiumi.us"><p style="text-wrap: wrap;">三、性能提升之 Zabbix Proxy 內存緩存</p></section><section style="" powered-by="xiumi.us"><section style="background-color: rgb(226, 91, 91);height: 3px;"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section style="text-align: unset;font-family: Optima-Regular, PingFangTC-light;font-size: 15px;line-height: 1.5;letter-spacing: 1px;" powered-by="xiumi.us"><p>Zabbix7.0 支持多種 Proxy 緩存模式，Disk、Memory 和 Hybrid。Disk 即之前版本的磁盤存儲；Memory 為內存存儲，所有數據放在內存中；Hybrid 是 Disk 和 Memory 的混合，內存不夠就磁盤存儲。</p></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section style="text-align: unset;font-family: Optima-Regular, PingFangTC-light;font-size: 15px;line-height: 1.5;letter-spacing: 1px;color: rgb(212, 0, 0);" powered-by="xiumi.us"><p>1. 緩存模式設置</p></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section style="line-height: 0;" powered-by="xiumi.us"><section style="vertical-align: middle;display: inline-block;line-height: 0;"><img class="rich_pages wxw-img" data-imgfileid="100020581" data-ratio="0.2796296296296296" data-s="300,640" src="https://oscimg.oschina.net/oscnet/308aab62-27f3-4ee4-b9a1-687d942d88ff.png" data-type="png" data-w="1080" style="vertical-align: middle;width: 100%;" referrerpolicy="no-referrer"></section></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section style="text-align: unset;font-family: Optima-Regular, PingFangTC-light;font-size: 15px;line-height: 1.5;letter-spacing: 1px;color: rgb(212, 0, 0);" powered-by="xiumi.us"><p>2. 緩存模式差異</p></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section style="line-height: 0;" powered-by="xiumi.us"><section style="vertical-align: middle;display: inline-block;line-height: 0;"><img class="rich_pages wxw-img" data-imgfileid="100020583" data-ratio="0.600925925925926" data-s="300,640" src="https://oscimg.oschina.net/oscnet/268862d9-c1af-4985-af74-0ed474e4010c.png" data-type="png" data-w="1080" style="vertical-align: middle;width: 100%;" referrerpolicy="no-referrer"></section></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section style="color: rgb(173, 25, 25);line-height: 1.75;" powered-by="xiumi.us"><p style="text-wrap: wrap;">四、功能優化之監控項級別 Timeout</p></section><section style="" powered-by="xiumi.us"><section style="background-color: rgb(226, 91, 91);height: 3px;"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section style="text-align: unset;font-family: Optima-Regular, PingFangTC-light;font-size: 15px;line-height: 1.5;letter-spacing: 1px;" powered-by="xiumi.us"><p>Zabbix7.0 為大部分數據檢查引入監控項級別 Timeout，可在前端頁面配置 Timeout 數值，取值範圍 1 秒到 600 秒（10 分鐘）。Timeout 可在多個層級定義，包含 Zabbix Server 全局配置、單個 Zabbix Proxy 級別以及單個監控項。</p><p><br></p></section><section style="line-height: 0;" powered-by="xiumi.us"><section style="vertical-align: middle;display: inline-block;line-height: 0;"><img class="rich_pages wxw-img" data-imgfileid="100020582" data-ratio="0.6648148148148149" data-s="300,640" src="https://oscimg.oschina.net/oscnet/8901f628-25aa-4103-a682-7dc898266da2.png" data-type="png" data-w="1080" style="vertical-align: middle;width: 100%;" referrerpolicy="no-referrer"></section></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section style="color: rgb(173, 25, 25);line-height: 1.75;" powered-by="xiumi.us"><p style="text-wrap: wrap;">五、性能提升之並行網絡自動發現</p></section><section style="" powered-by="xiumi.us"><section style="background-color: rgb(226, 91, 91);height: 3px;"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section style="text-align: unset;font-family: Optima-Regular, PingFangTC-light;font-size: 15px;line-height: 1.5;letter-spacing: 1px;" powered-by="xiumi.us"><p>當網絡自動發現中掃描的 IP 或者網段過多，並且包含多個檢查規則時，完成一次任務將消耗大量時間，這是因為單個任務只能被單個 discoverer 進程處理，並且每個 IP 按順序執行。</p><p>Zabbix7.0 引入新的網絡自動發現進程，包含 Discovery manager 和 Discovery worker(discoverer process)，自監控模板中包含對應進程使用率和隊列延遲指標。</p><p><br></p></section><section style="line-height: 0;" powered-by="xiumi.us"><section style="vertical-align: middle;display: inline-block;line-height: 0;"><img class="rich_pages wxw-img" data-imgfileid="100020584" data-ratio="0.11481481481481481" data-s="300,640" src="https://oscimg.oschina.net/oscnet/8fafad63-6e29-4a2e-9c5d-9eca501f582b.png" data-type="png" data-w="1080" style="vertical-align: middle;width: 100%;" referrerpolicy="no-referrer"></section></section><section style="text-align: unset;" powered-by="xiumi.us"><p><br></p></section><section style="text-align: unset;font-family: Optima-Regular, PingFangTC-light;font-size: 15px;line-height: 1.5;letter-spacing: 1px;" powered-by="xiumi.us"><p>網絡自動發現配置頁面增加最大並行檢查數（Maximum concurrent checks）選項，並行處理檢查。</p></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section style="line-height: 0;" powered-by="xiumi.us"><section style="vertical-align: middle;display: inline-block;line-height: 0;"><img class="rich_pages wxw-img" data-imgfileid="100020589" data-ratio="0.5138888888888888" data-s="300,640" src="https://oscimg.oschina.net/oscnet/17d635ab-58c5-4cd5-8fc1-4b03d17cd412.png" data-type="png" data-w="1080" style="vertical-align: middle;width: 100%;" referrerpolicy="no-referrer"></section></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section style="color: rgb(173, 25, 25);line-height: 1.75;" powered-by="xiumi.us"><p style="text-wrap: wrap;">六、功能優化之數據推送</p></section><section style="" powered-by="xiumi.us"><section style="background-color: rgb(226, 91, 91);height: 3px;"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section style="text-align: unset;font-family: Optima-Regular, PingFangTC-light;font-size: 15px;line-height: 1.5;letter-spacing: 1px;" powered-by="xiumi.us"><p>Zabbix7.0 增加 history.push API 方法，對應監控項類型為 Zabbix Trapper 和 HTTP Agent(Enable trapping)。可在監控項中配置 Allow Server IP 只接收給定 IP 發送的數據，並且 API 方法權限可通過用户角色控制。</p><p>詳細信息參見</p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzI3NTQ1ODEyMQ%3D%3D%26mid%3D2247504188%26idx%3D1%26sn%3Da69905144eb865d356635095315e728e%26scene%3D21%23wechat_redirect" target="_blank" data-linktype="2">《Zabbix7.0 新功能，還可以這樣推送數據！不止 zabbix_sender》</a></p><p><br></p></section><section style="color: rgb(173, 25, 25);line-height: 1.75;" powered-by="xiumi.us"><p style="text-wrap: wrap;">七、功能優化之前端腳本輸入參數</p></section><section style="" powered-by="xiumi.us"><section style="background-color: rgb(226, 91, 91);height: 3px;"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section style="text-align: unset;font-family: Optima-Regular, PingFangTC-light;font-size: 15px;line-height: 1.5;letter-spacing: 1px;" powered-by="xiumi.us"><p>Zabbix7.0 在執行前端腳本時可以輸入參數，這樣就不需要創建多個前端腳本或者頻繁修改某個前端腳本。在腳本中使用{MANUALINPUT}宏引用自定義輸入的數據。</p><p><br></p></section><section style="line-height: 0;" powered-by="xiumi.us"><section style="vertical-align: middle;display: inline-block;line-height: 0;"><img class="rich_pages wxw-img" data-imgfileid="100020588" data-ratio="0.5361111111111111" data-s="300,640" src="https://oscimg.oschina.net/oscnet/bab2a986-2c4a-4d4b-bd67-b5d9a90b7f29.png" data-type="png" data-w="1080" style="vertical-align: middle;width: 100%;" referrerpolicy="no-referrer"></section></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section style="line-height: 0;" powered-by="xiumi.us"><section style="vertical-align: middle;display: inline-block;line-height: 0;"><img class="rich_pages wxw-img" data-imgfileid="100020586" data-ratio="0.600925925925926" data-s="300,640" src="https://oscimg.oschina.net/oscnet/05bf06f1-cdd4-44d7-8cc7-5574e3b48da4.png" data-type="png" data-w="1080" style="vertical-align: middle;width: 100%;" referrerpolicy="no-referrer"></section></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section style="color: rgb(173, 25, 25);line-height: 1.75;" powered-by="xiumi.us"><p style="text-wrap: wrap;">八、其它提升</p></section><section style="" powered-by="xiumi.us"><section style="background-color: rgb(226, 91, 91);height: 3px;"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section style="text-align: unset;font-family: Optima-Regular, PingFangTC-light;font-size: 15px;line-height: 1.5;letter-spacing: 1px;" powered-by="xiumi.us"><ul class="list-paddingleft-1" style="padding-left: 40px;list-style-position: outside;"><li><p>支持監控項和監控項原型名稱中使用用户宏（Zabbix6.0 中取消，7.0 又恢復）</p></li><li><p>提升普通用户前端權限校驗速度</p></li><li><p>支持原生 Kafka topics 的 HTTP connector</p></li><li><p>支持主動檢查（active checks）執行遠程命令</p></li><li><p>提升聚合計算中不支持監控項處理性能</p></li><li><p>支持多頁 PDF 格式定時報表</p></li><li><p>支持主機自動註冊時分配標籤</p></li><li><p>等<br></p></li></ul><p><br></p></section><section style="color: rgb(173, 25, 25);line-height: 1.75;" powered-by="xiumi.us"><p style="text-wrap: wrap;">九、新增模板和集成方案</p></section><section style="" powered-by="xiumi.us"><section style="background-color: rgb(226, 91, 91);height: 3px;"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section style="line-height: 0;" powered-by="xiumi.us"><section style="vertical-align: middle;display: inline-block;line-height: 0;"><img class="rich_pages wxw-img" data-imgfileid="100020587" data-ratio="0.49074074074074076" data-s="300,640" src="https://oscimg.oschina.net/oscnet/fb5140c2-2f4a-444c-810c-1f1d5d47e3ef.png" data-type="png" data-w="1080" style="vertical-align: middle;width: 100%;" referrerpolicy="no-referrer"></section></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section style="text-align: left;justify-content: flex-start;display: flex;flex-flow: row;margin-top: 10px;margin-bottom: 10px;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: bottom;width: auto;min-width: 5%;flex: 0 0 auto;height: auto;align-self: flex-end;margin-right: -11px;"><section style="display: flex;width: 100%;flex-flow: column;" powered-by="xiumi.us"><section style="z-index: 1;" powered-by="xiumi.us"><section style="text-align: center;line-height: 0;"><section style="vertical-align: middle;display: inline-block;line-height: 0;width: 26.8047px;height: auto;"><img class="rich_pages wxw-img" data-imgfileid="100020585" data-ratio="1.556" data-s="300,640" src="https://oscimg.oschina.net/oscnet/7219ef62-241c-4d83-bf02-e4cf6230e624.png" data-type="png" data-w="500" style="vertical-align: middle;width: 100%;" referrerpolicy="no-referrer"></section></section></section></section></section><section style="display: inline-block;vertical-align: bottom;width: auto;align-self: flex-end;flex: 0 0 auto;background-color: rgb(212, 0, 0);min-width: 5%;height: auto;padding: 5px 16px 5px 27px;"><section style="text-align: justify;color: rgb(255, 255, 255);" powered-by="xiumi.us"><p style="text-wrap: wrap;"><strong>立即體驗</strong></p></section></section></section><section style="text-align: left;justify-content: flex-start;display: flex;flex-flow: row;margin-bottom: 10px;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;vertical-align: top;align-self: flex-start;flex: 0 0 auto;background-color: rgb(255, 245, 237);"><section style="justify-content: flex-start;display: flex;flex-flow: row;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;vertical-align: top;align-self: flex-start;flex: 0 0 auto;padding: 29px;"><section style="text-align: justify;line-height: 1.5;letter-spacing: 1px;" powered-by="xiumi.us"><p style="text-wrap: wrap;"><span style="font-family: Optima-Regular, PingFangTC-light;font-size: 15px;">點擊查看&nbsp;<a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.zabbix.com%2Fcn%2Frelease_notes" textvalue="Zabbix7.0 發佈日誌 Release Notes" linktype="text" imgurl="" tab="outerlink" data-linktype="2">Zabbix7.0 發佈日誌 Release Notes</a>，瞭解更多新增和優化特性。立即下載試用，開啓嶄新的 Zabbix 探索之旅。</span></p><p style="text-wrap: wrap;"><span style="font-family: Optima-Regular, PingFangTC-light;font-size: 15px;"><br></span></p><p style="text-wrap: wrap;"><span style="font-family: Optima-Regular, PingFangTC-light;font-size: 15px;">你們期待的 Zabbix7.0LTS 版本將很快與大家見面，敬請期待！</span></p></section></section></section><section style="text-align: right;justify-content: flex-end;display: flex;flex-flow: row;margin-top: -8px;margin-bottom: 10px;transform: translate3d(-10px, 0px, 0px);" powered-by="xiumi.us"><section style="display: inline-block;width: 90%;vertical-align: top;align-self: flex-start;flex: 0 0 auto;border-style: solid;border-width: 0px 0px 1px;border-bottom-color: rgb(178, 0, 19);height: auto;"><section style="justify-content: flex-end;display: flex;flex-flow: row;" powered-by="xiumi.us"><section style="display: inline-block;width: auto;vertical-align: top;align-self: flex-start;flex: 0 0 auto;min-width: 5%;height: auto;line-height: 0;"><section style="transform: rotateZ(90deg);" powered-by="xiumi.us"><section style="text-align: center;"><section style="display: inline-block;width: 33px;height: 1px;vertical-align: top;overflow: hidden;background-color: rgb(178, 0, 19);"><section style="text-align: justify;" powered-by="xiumi.us"><p style="text-wrap: wrap;"><br></p></section></section></section></section></section></section></section></section></section></section><p style="text-align: center;"><img class="rich_pages wxw-img" data-galleryid="" data-imgfileid="100020597" data-ratio="0.5222222222222223" data-s="300,640" src="https://oscimg.oschina.net/oscnet/488e4d86-968c-465e-b703-dccea60e2033.png" data-type="png" data-w="1080" style="" referrerpolicy="no-referrer"></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.huodongxing.com%2F" textvalue="將在南京技術交流現場分享 Zabbix7.0 新功能！掃碼免費報名。" linktype="text" imgurl="" tab="outerlink" data-linktype="2"><span style="font-size: 14px;">將在南京技術交流現場分享 Zabbix7.0 新功能！掃碼免費報名。</span></a><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><strong><span style="color: rgb(217, 33, 66);">延伸閲讀</span></strong><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><ul class="list-paddingleft-1" style="list-style-type: disc;"><li><p style="text-wrap: wrap;" powered-by="xiumi.us"><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzI3NTQ1ODEyMQ%3D%3D%26mid%3D2247504188%26idx%3D1%26sn%3Da69905144eb865d356635095315e728e%26chksm%3Deb06e01adc71690c8994cae676a4b9f942ff2fe0e63a086813426e648bdf8524ef3eb8555dc7%26scene%3D21%23wechat_redirect" textvalue="Zabbix7.0 新功能，還可以這樣推送數據！不止 zabbix_sender" linktype="text" imgurl="" imgdata="null" data-itemshowtype="0" tab="innerlink" style="font-size: 15px;" data-linktype="2"><span style="font-size: 15px;">Zabbix7.0 新功能，還可以這樣推送數據！不止 zabbix_sender</span></a><br></p></li><li><p style="text-wrap: wrap;" powered-by="xiumi.us"><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzI3NTQ1ODEyMQ%3D%3D%26mid%3D2247503844%26idx%3D1%26sn%3D66995b695ba25b4a5d77117138b7864d%26chksm%3Deb06fec2dc7177d4ba32f0c2faedc1856907c87e488b5b510bb75d66ce551d904ea588edc5fb%26scene%3D21%23wechat_redirect" textvalue="手把手教學 Zabbix7.0+麒麟操作系統，兼容認證" linktype="text" imgurl="" imgdata="null" data-itemshowtype="0" tab="innerlink" style="font-size: 15px;" data-linktype="2"><span style="font-size: 15px;">手把手教學 Zabbix7.0+麒麟操作系統，兼容認證</span></a><br></p></li><li><p style="text-wrap: wrap;" powered-by="xiumi.us"><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzI3NTQ1ODEyMQ%3D%3D%26mid%3D2247503204%26idx%3D1%26sn%3D4913c89d2c4b14ff762e2acdd555bebe%26chksm%3Deb06fc42dc717554555e088b350d0995c21100eb7973df940e87cd8a8372ec22c70015ff0840%26scene%3D21%23wechat_redirect" textvalue="Zabbix 創始人提前揭秘 Zabbix7.0 新功能！" linktype="text" imgurl="" imgdata="null" data-itemshowtype="0" tab="innerlink" style="font-size: 15px;" data-linktype="2"><span style="font-size: 15px;">Zabbix 創始人提前揭秘 Zabbix7.0 新功能！</span></a></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p></li></ul><section style="text-align: center;margin-top: 10px;margin-bottom: 10px;line-height: 0;" powered-by="xiumi.us"><section style="vertical-align: middle;display: inline-block;line-height: 0;"><img class="rich_pages wxw-img" data-imgfileid="100020590" data-ratio="0.562962962962963" data-s="300,640" src="https://oscimg.oschina.net/oscnet/2e3728e3-275b-44d9-98c0-e5c5c0566e62.jpg" data-type="jpeg" data-w="1080" style="vertical-align: middle;width: 100%;" referrerpolicy="no-referrer"></section></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p></section><p style="display: none;"><mp-style-type data-value="3"></mp-style-type></p></div><p style="color: #858585; font-size: 13px;">本文分享自微信公眾號 - Zabbix 開源社區（china_zabbix）。<br>如有侵權，請聯繫 support@oschina.cn 刪除。<br>本文參與「<a href="https://www.oschina.net/sharing-plan" target="_blank">OSC 源創計劃</a>」，歡迎正在閲讀的你也加入，一起分享。</p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 02 Feb 2024 10:06:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/3900302/blog/11020075</guid>
            <link>https://my.oschina.net/u/3900302/blog/11020075</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[JetBrain 捆綁 AI 助手引起用户不滿]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>JetBrains 曾於去年宣佈，<span style="background-color:#ffffff; color:#333333">所有基於 IntelliJ 的 IDE 和 .NET 工具都會集成&nbsp;</span><strong style="color:#333333">AI 助手 (AI Assistant) </strong>這一<span style="background-color:#ffffff; color:#333333">新功能；並表示會將它整合到 IDE 的核心工作流中，尤其是 JetBrains IDE 的強項 —— 將代碼理解與 AI 深度集成。</span></p><p>但事情並非一帆風順，無論是出於不兼容的公司政策、還是擔憂安全風險等其他原因，一些 JetBrains 客户對 AI Assistant 有着強烈的牴觸情緒，他們希望在自己的 JetBrains 應用程序中不要出現該插件。然而鑑於插件代碼已經"深度集成"，相關的移除工作非常複雜。</p><p style="text-align:start"><span><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>自 AI 助手插件首次亮相以來，JetBrains 的 YouTrack 問題板上已經發布了十多個帖子，尋求刪除、卸載或以其他方式刪除該插件的方法。在一個名為"提供從系統中完全刪除插件的可能性"的<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fyoutrack.jetbrains.com%2Fissue%2FLLM-1760%2FCan-not-remove-Jetbrains-AI-Assistant-plugin-completely" target="_blank">主題</a>，就詳細説明瞭為什麼大家不希望在公司的開發者工具（如 PyCharm、IntelliJ IDEA 和其他應用程序）中安裝該插件。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:start"><img height="297" src="https://oscimg.oschina.net/oscnet/up-005a432b81b726ee7b9b144093d0d09568d.png" width="500" referrerpolicy="no-referrer"></p><p style="text-align:start"><span><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>開發人員提出了許多擔憂，稱該插件是"臃腫的軟件"、對企業知識產權構成風險、是一個安全問題、令人討厭、且有違信任。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><blockquote><p style="text-align:start"><span style="color:#000000">「我只是想明確表示，我不能在我工作的公司使用這個產品，因為安全性不允許默認的 AI 實施成為產品的一部分。」</span></p><p style="text-align:start"><span style="color:#000000">"這是不可接受的。它不應該在默認情況下捆綁一些可以將整個代碼庫發送到天知道什麼地方的東西。JetBrains 的這一舉動非常糟糕，在此之後我將不再續訂。這是一種無法挽回的失信行為。"</span></p><p style="text-align:start"><span style="color:#000000">"這項服務是基於 AI 的，你不知道它提供給你的代碼的出處，這本身就是一個巨大的問題，因為它造成了可疑的許可/知識產權/法律狀況。但最大的問題不是因為它是 AI，而是因為它將用户公司的知識產權泄露給了誰也不知道的地方，有可能直接泄露給競爭對手。"</span></p></blockquote><p><span style="color:#000000">對此，JetBrains 公司的 Matt Ellis 在給 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.theregister.com%2F2024%2F02%2F01%2Fjetbrains_unremovable_ai_assistant%2F" target="_blank">The Register</a> 的一份聲明中解釋稱：</span></p><blockquote><p><span style="color:#000000">"雖然捆綁了 AI 助手插件，而且插件本身也已啓用，但默認情況下並沒有啓用 AI 功能，並且未經用户的同意也不會將數據發送到外部。你必須登錄、接受數據政策，然後購買訂閲或開始試用。發送到 AI 服務的任何數據都不會用於訓練。我們還提供用於排名和完成的 ML 支持，這是由設備上的模型提供的，沒有數據被髮送到設備之外。"</span></p></blockquote><p><span style="color:#000000">Ellis 聲稱還有許多客户都對捆綁插件很滿意，因此該公司正在研究可以同時滿足捆綁和完全拆卸 AI 助手的方法。他指出，移除捆綁插件的問題在於，可能會破壞應用程序簽名並導致一些更新問題。</span></p><p><span style="color:#000000">當被問及有多少 JetBrains 客户反對 AI 助手時，一位發言人則表示："我們無法確定這些意見是否代表了我們所有客户的立場。我們理解這種情緒的強度，我們正在傾聽來自社區各方面的反饋，包括正在使用 AI 助手的許多快樂的個人和企業。"</span></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 02 Feb 2024 07:59:01 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/277463/jetbrains-unremovable-ai-assistant</guid>
            <link>https://www.oschina.net/news/277463/jetbrains-unremovable-ai-assistant</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[基於 Netty 開發輕量級 RPC 框架]]>
            </title>
            <description>
                <![CDATA[<div class="content"><blockquote><p>筆者在開發基於客户端/服務端模式通信的插件的時候，需要用到輕量級最小包依賴的 RPC 框架，而市面上的 RPC 框架份量過於龐大，最終打包下來都是幾十兆甚至上百兆，而這裏面大多數功能我都用不上，於是思來想去我決定寫一款屬於自己的輕量級 RPC 框架，簡單易用快速接入。</p></blockquote><span id="OSC_h2_1"></span><h2>關於技術選型</h2><span id="OSC_h3_2"></span><h3>協議序列化/反序列化</h3><p>網絡通信基於 TCP/IP 為基礎自定義應用層協議，常見的序列化/反序列化工具有 java 原生序列化，json,kryo,protobuf,fst,hessian 等。</p><p>在不考慮跨語言的情況下，從序列化時長/序列化大小/易用性/擴展性這幾方面考慮，綜合性比較強的是 kryo，但是 kryo 只支持 java 版本不能跨語言 (據説能跨語言但是非常複雜，相當於不能跨語言了)，protobuf 是性能最強的且支持跨語言，但是需要事先基於 proto 生成一個類，這會導致所有序列化和反序列化的時候只能用 proto 定義的類型。</p><p>最終選擇 kryo 和 protobuf 兩種序列化工具，使用的時候可選序列化類型，前者序列化幾乎不受限制，後者支持跨語言，但是必須事先生成 proto 類型的類並使用其作為序列化工具。</p><span id="OSC_h3_3"></span><h3>通信框架使用</h3><p>高性能異步非阻塞框架非 Netty 不可了，客户端和服務端基於 Netty 開發可事半功倍。</p><p>但是基於 Netty 再加上 zk 連接和各種工具打包完都需要 20M 左右，所以除了 client 和 server 端外，再開發一個 client-mini 模塊，這個模塊是 client 端基於 nio 開發的，性能雖然不如 netty 但是沒有任何依賴，打包下來僅 20kb。</p><span id="OSC_h3_4"></span><h3>服務註冊和發現</h3><p>註冊中心選擇 zookeeper 作為服務註冊和服務發現，當然如果只用單點模式的話其實是不需要註冊中心的，所以 zookeeper 是可選組件。</p><span id="OSC_h2_5"></span><h2>開發 RPC 框架</h2><p>好了，有了上述這些技術就可以步入 RPC 框架的開發了，我這裏分為了以下模塊：</p><ul><li>base : 基礎公共模塊</li><li>protocol : 協議層，包含應用層通信協議，以及序列化/反序列化，支持 kryo 和 protobuf</li><li>registry : 註冊模塊，基於 zookeeper 作為註冊中心，包含註冊服務和服務發現</li><li>server : 服務端</li><li>client : 客户端</li><li>client-mini : 不依賴任何包的客户端，基於 NIO</li></ul><span id="OSC_h3_6"></span><h3>應用層協議</h3><p>首先設計通信協議層，一個 rpc 框架通信的每一次請求主要包含服務名 (serviceName)，函數名 (methodName)，參數類型 (paramTypes) 和參數 (params) 等字段，當然再加上請求唯一 id: traceId</p><pre><code class="language-java">@ShadowEntity  
public class ShadowRPCRequest {  

    @ShadowField(1)  
    private String traceId;  

    @ShadowField(2)  
    private String serviceName;  

    @ShadowField(3)  
    private String methodName;  

    @ShadowField(4)  
    private Class&lt;?&gt;[] paramTypes;  

    @ShadowField(5)  
    private Object[] params;
}

</code></pre><p>上述 ShadowRPCRequest 是基於 kryo 序列化方式進行的一個定義，適合於客户端和服務端都是 java，如果要跨語言，則需要使用 protobuf，protobuf 首先定義一個 request.proto</p><pre><code class="language-proto">syntax = "proto3";  
  
  
package com.liubs.shadowrpc.protocol.entity;  
option java_outer_classname="ShadowRPCRequestProto";  
  
message ShadowRPCRequest {  
    string traceId = 1;  
    string serviceName = 2;  
    string methodName = 3;  
    repeated string paramTypes = 4; //參數類名  
    repeated bytes params = 5; //bytes 類型充當參數  
}

</code></pre><p>由於要跨語言，所以參數用 bytes 的集合類型，反序列化時需要二次解壓縮成具體的類型，但是即便是這樣仍然比 kryo 要快。</p><p>同理，與 ShadowRPCRequest 對應的消息體是響應 ShadowRPCResponse</p><pre><code class="language-java">@ShadowEntity  
public class ShadowRPCResponse {  
 
    @ShadowField(1)  
    private String traceId;  

    @ShadowField(2)  
    private int code;  

    @ShadowField(3)  
    private String errorMsg;  

    @ShadowField(4)  
    private Object result;
}

</code></pre><p>然後就是基於 kryo 和 protobuf 的序列化和反序列化了，kryo 有很多種序列化策略，考慮到函數參數需要支持增減字段，所以 kryo 使用 TaggedField 策略，上面的@ShadowField 註解是我進行的一些簡單的封裝，每次新增字段的時候需要加上註解即可，而 protobuf 天生就支持參數增減字段。</p><p>kryo 的序列化和反序列化如下：</p><pre><code class="language-java">public class KryoSerializer implements ISerializer {  
  
    private static ThreadLocal&lt;Kryo&gt; kryoThreadLocal = ThreadLocal.withInitial(() -&gt; {  
        Kryo kryo = new Kryo();  

        kryo.setDefaultSerializer(new KryoFieldSerializerFactory());  

        kryo.setReferences(false);  
        kryo.setRegistrationRequired(false); //不需要提前註冊  

        //註冊一定會用到的，序列化可以省點空間  
        kryo.register(Class.class);  
        kryo.register(Class[].class);  
        kryo.register(Object[].class);  
        kryo.register(ShadowRPCRequest.class);  
        kryo.register(ShadowRPCResponse.class);  

        return kryo;  
    });  
  
  
  
    @Override  
    public byte[] serialize(Object object) {  

        ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();  
        Output output = new Output(byteArrayOutputStream);  
        kryoThreadLocal.get().writeObject(output, object);  
        output.close();  
        return byteArrayOutputStream.toByteArray();  
    }  
  
    @Override  
    public &lt;T&gt; T deserialize(byte[] array, Class&lt;T&gt; clazz) {  

        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(array);  
        Input input = new Input(byteArrayInputStream);  
        T object = kryoThreadLocal.get().readObject(input, clazz);  
        input.close();  
        return object;  
    }  
}

</code></pre><p>protobuf 的序列化和反序列化則是通過調用生成的 proto 類來實現序列化和反序列化的，</p><p>序列化：</p><pre><code class="language-java">@Override  
public byte[] serialize(Object object) {  
    if (object instanceof MessageLite) {  
    return ((MessageLite) object).toByteArray();  
    }  
    if (object instanceof MessageLite.Builder) {  
    return (((MessageLite.Builder) object).build().toByteArray());  
    }  

    return new byte[0];  
}

</code></pre><p>反序列化:</p><pre><code class="language-java">
public &lt;T&gt; T deserialize(MessageLite messageLite,byte[] array, Class&lt;T&gt; clazz) {  
    return messageLite.getDefaultInstanceForType().getParserForType().parseFrom(array, 0, array.length);
}

</code></pre><span id="OSC_h3_7"></span><h3>消息的粘包/拆包和半包處理</h3><p>TCP/IP 是面向流的協議，操作系統底層其實並不關心我們自定義的應用層協議包是否完整，在高併發情況下，我們一次性發送多個包會被寫入到一個流中，就是所謂的「粘包」，而接收方則需要根據收到的流進行拆分得到具體的包，稱為「拆包」，</p><p><img height="183" src="https://oscimg.oschina.net/oscnet/up-f2a9582fee1ea86078a7229ef8328328729.png" width="600" referrerpolicy="no-referrer"></p><p>比如上面的 A,B,C,D,E,F 是一次性發送的包，但是在發送 D 的時候超過了發送緩衝區被拆分成了 D1 和 D2，而接收方從緩衝區讀取到 A,B,C,D1 的時候完全不知所措，我們需要處理每個包的邊界，並且還需要將第一次包中的 D1 和第二次包中的 D2 進行合併成 D 形成一個完整的包 D。</p><p>業界最常用的方案是，發送方在寫入緩衝區字節流的時候，先寫入消息的長度，再寫入消息字節，而接收方則先讀取長度 n，再讀取 n 個字節，如果字節數不到 n，則重製 position，等下一次讀取消息的時候再讀取完整 n 個長度的字節流形成一個消息包。</p><p>寫入字節流代碼：</p><pre><code class="language-java">int dataLength = data.length;  
out.writeInt(dataLength); // 先寫入消息長度  
out.writeBytes(data); // 寫入序列化後的數據

</code></pre><p>而接收方，用 netty 現成的 LengthFieldBasedFrameDecoder 即可</p><pre><code class="language-java">pipeline.addLast(new LengthFieldBasedFrameDecoder(globalConfig.getMaxFrameLength(),  
0, 4, 0, 4));

</code></pre><p>這裏的 4 表示 4 個字節 (int 類型)，它會先讀取 4 個字節，再讀取字節流，根據長度拆分不同的」Frame「，即我們需要的消息包。</p><span id="OSC_h3_8"></span><h3>Netty 構建通信框架</h3><p>針對 Netty 構建通信網絡初始化，最終目標是實現客户端發送一個 ShadowRPCRequest 消息就能調用服務並返回給客户端 ShadowRPCResponse 消息</p><pre><code class="language-java">NioEventLoopGroup bossGroup = new NioEventLoopGroup();  
NioEventLoopGroup workerGroup = new NioEventLoopGroup();
ServerBootstrap bootstrap = new ServerBootstrap();  
bootstrap.group(bossGroup, workerGroup)  
.channel(NioServerSocketChannel.class)  
.childHandler(new ShadowChannelInitializer(serverConfig))  
.option(ChannelOption.SO_BACKLOG, 128)  
.childOption(ChannelOption.SO_KEEPALIVE, true);  
  
channelFuture = bootstrap.bind(port).sync();

</code></pre><p>childHandler 裏面使用 ShadowChannelInitializer 作為每個連接的處理</p><pre><code class="language-java">public class ShadowChannelInitializer extends ChannelInitializer&lt;SocketChannel&gt; {  
  
    private ServerConfig serverConfig;  

    public ShadowChannelInitializer(ServerConfig serverConfig) {  
    this.serverConfig = serverConfig;  
    }  

    @Override  
    protected void initChannel(SocketChannel ch) throws Exception {  
    ChannelPipeline pipeline = ch.pipeline();  

    //qps 請求量統計  
    if(serverConfig.isQpsStat()) {  
    pipeline.addLast(new QpsStatHandler());  
    }  

    //處理幀邊界，解決拆包和粘包問題  
    pipeline.addLast(new LengthFieldBasedFrameDecoder(serverConfig.getMaxFrameLength(),  
    0, 4, 0, 4));  

    //消息序列化和反序列化  
    pipeline.addLast(new MessageHandler());  

    //服務處理  
    pipeline.addLast(new ServerHandler());  
    }  
}

</code></pre><p>緊接着就是對接收到客户端的 ShadowRPCRequest 消息的處理，ShadowRPCRequest 裏麪包含了服務名，函數名以及參數，考慮到也有可能是 protobuf 類型 ShadowRPCRequestProto，這裏統一轉換成抽象層的 model: RequestModel，字段和 ShadowRPCRequest 都差不多，然後找到對應的服務觸發邏輯和響應 ServerHandler</p><pre><code class="language-java">public class ServerHandler extends ChannelInboundHandlerAdapter {  
  
    @Override  
    public void channelRead(ChannelHandlerContext ctx, Object msg) throws Exception {  

    // 打印驗證影響速度，壓測時去掉  
    //logger.info("Server received: " + msg);  

    IModelParser modelParser = serializeModule.getSerializer().getModelParser();  

    RequestModel requestModel = modelParser.fromRequest(msg);  

    executorService.execute(()-&gt;{  
    try {  

        ServiceLookUp serviceLookUp = new ServiceLookUp();  
        serviceLookUp.setServiceName(requestModel.getServiceName());  
        serviceLookUp.setMethodName(requestModel.getMethodName());  
        serviceLookUp.setParamTypes(requestModel.getParamTypes());  
        ServiceTarget targetRPC = serverModule.getRPC(serviceLookUp);  

        Object result = targetRPC.invoke(requestModel.getParams());  

        ResponseModel responseModel = new ResponseModel();  
        responseModel.setTraceId(requestModel.getTraceId());  
        responseModel.setCode(ResponseCode.SUCCESS.getCode());  
        responseModel.setResult(result);  

        // 響應客户端  
        ctx.writeAndFlush(modelParser.toResponse(responseModel));  
        } catch (Exception e) {  
        e.printStackTrace();  
    }  

    });  

    }  
  
}

</code></pre><p>至於根據 RequestModel 是如何找到對應的服務的，就需要在服務端啓動的時候掃描所有的服務緩存到 serverModule 裏面了，這樣就能通過 serverModule 獲取到 targetRPC</p><pre><code class="language-java">@ShadowModule  
public class ServerModule implements IModule {  
    private static final Logger logger = LoggerFactory.getLogger(ServerModule.class);  

    @ModuleInject  
    private SerializeModule serializeModule;  

    private ServerConfig serverConfig;  

    //所有服務  
    private Map&lt;ServiceLookUp,ServiceTarget&gt; allRPC = new ConcurrentHashMap&lt;&gt;();  

    public void init(ServerConfig serverConfig,List&lt;String&gt; packages) {  
        this.serverConfig = serverConfig;  
        //初始化服務  
        List&lt;ShadowServiceHolder&lt;ShadowService&gt;&gt; shadowServices = new ArrayList&lt;&gt;();  

        for(String packageName : packages) {  
        try {  
        shadowServices.addAll(AnnotationScanner.scanAnnotations(packageName, ShadowService.class));  
        } catch (IOException e) {  
        logger.error("scanService err",e);  
        }  
        }  

        for(ShadowServiceHolder&lt;ShadowService&gt; ShadowServiceHolder : shadowServices) {  
        ShadowService serviceAnnotation = ShadowServiceHolder.getAnnotation();  
        Class&lt;?&gt; serviceClass = ShadowServiceHolder.getClassz();  
        try {  
        Object o = serviceClass.newInstance();  


        for(Method method : serviceClass.getMethods()) {  

        if(Modifier.isStatic(method.getModifiers()) || !Modifier.isPublic(method.getModifiers())){  
        continue;  
        }  

        ServiceLookUp serviceLookUp = new ServiceLookUp();  
        serviceLookUp.setServiceName(serviceAnnotation.serviceName());  
        serviceLookUp.setMethodName(method.getName());  
        serviceLookUp.setParamTypes(method.getParameterTypes());  

        ServiceTarget serviceTarget = new ServiceTarget();  
        serviceTarget.setTargetObj(o);  
        serviceTarget.setMethod(method);  
        addRPCInterface(serviceLookUp,serviceTarget);  
        }  

        } catch (InstantiationException | IllegalAccessException e) {  
        throw new RuntimeException(e);  
        }  
        }  
    }  

    public void addRPCInterface(ServiceLookUp lookUp,ServiceTarget obj) {  
        allRPC.put(lookUp,obj);  
    }  

    public ServiceTarget getRPC(ServiceLookUp lookUp) {  
        return allRPC.get(lookUp);  
    }  
  
  
  
}

</code></pre><span id="OSC_h3_9"></span><h3>客户端調用遠程 rpc 服務</h3><p>剛才我們把服務端接收 ShadowRPCRequest 消息並觸發邏輯返回 ShadowRPCResponse 消息實現了，而在客户端，我們只持有服務端的一個接口，要通過這個接口創建一個遠程服務調用，來實現 rpc 調用，我們最終要實現的效果是這樣的</p><pre><code class="language-java">IHello helloService = shadowClient.createRemoteProxy(IHello.class,"shadowrpc://DefaultGroup/helloservice");  
  
System.out.println("發送 hello 消息");  
String helloResponse = helloService.hello("Tom");  
System.out.println("hello 服務端響應:"+helloResponse);

</code></pre><p>IHello 是一個接口，沒有任何實現類，實現類在服務端，而客户端我們通過創建一個遠程代理的方式就能實現調用接口即發送 ShadowRPCRequest 消息到遠程服務器。</p><p>我們這裏使用動態代理，基於接口創建一個遠程對象</p><pre><code class="language-java">public static &lt;T&gt; T create(IConnection connection, Class&lt;T&gt; serviceStub, final String service) {  
  
    String[] serviceArr = service.replace("shadowrpc://","").split("/");  
    if(serviceArr.length &lt; 2) {  
    throw new IllegalArgumentException("service 參數不符合規範");  
    }  
    String group = serviceArr[0];  
    String serviceName = serviceArr[1];  

    return (T)Proxy.newProxyInstance(  
        serviceStub.getClassLoader(),  
        new Class&lt;?&gt;[]{serviceStub},  
        new RemoteHandler(connection,serviceStub,group,serviceName)  
    );  
}

</code></pre><p>RemoteHandler 中實現代理對象的邏輯，發送消息到遠程服務器</p><pre><code class="language-java">public class RemoteHandler implements InvocationHandler {  
private static final Logger logger = LoggerFactory.getLogger(RemoteHandler.class);  
  
/**  
* 如果不使用註冊中心，則必須有 ShadowClient  
*/  
private IConnection clientConnection;  
  
/**  
* 遠程接口 stub  
*/  
private Class&lt;?&gt; serviceStub;  
  
  
/**  
* 集羣  
*/  
private String group;  
  
/**  
* 服務名  
*/  
private String serviceName;  
  
  
private SerializeModule serializeModule = ModulePool.getModule(SerializeModule.class);  
  
public RemoteHandler(IConnection client, Class&lt;?&gt; serviceStub, String group,String serviceName) {  
    this.clientConnection = client;  
    this.serviceStub = serviceStub;  
    this.group = group;  
    this.serviceName = serviceName;  
}  
  
@Override  
public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {  
  
    try{  
        RequestModel requestModel = new RequestModel();  
        String traceId = UUID.randomUUID().toString();  
        requestModel.setTraceId(traceId);  
        requestModel.setServiceName(serviceName);  
        requestModel.setMethodName(method.getName());  
        requestModel.setParamTypes(method.getParameterTypes());  
        requestModel.setParams(args);  

        IModelParser modelParser = serializeModule.getSerializer().getModelParser();  
        Future&lt;?&gt; future = ReceiveHolder.getInstance().initFuture(traceId);  

        Channel channel = clientConnection.getChannel(group);  

        if(!channel.isOpen()) {  
        logger.error("服務器已關閉,發送消息拋棄...");  
        return null;  
        }  

        try{  
        channel.writeAndFlush(modelParser.toRequest(requestModel)).sync();  
        }catch (Exception e) {  
        logger.error("發送請求{}失敗",traceId);  
        return null;  
        }  

        ResponseModel responseModel = (ResponseModel)future.get(3, TimeUnit.SECONDS);  
        if(responseModel != null) {  
        return responseModel.getResult();  
        }else {  
        ReceiveHolder.getInstance().deleteWait(traceId);  
        logger.error("超時請求,拋棄消息{}",traceId);  
        return null;  
        }  

    }catch (Throwable e) {  
    logger.error("invoke err",e);  
    }  

    return null;  
    }  
}

</code></pre><span id="OSC_h3_10"></span><h3>服務註冊與發現</h3><p>上面實現的客户端和服務端是單節點通信的，要實現服務註冊與發現，需要註冊中心 Registry，服務端向註冊中心註冊服務，客户端訂閲服務節點的變化，獲取到服務節點列表後負載均衡 rpc 調用服務節點的機器。</p><p><img height="426" src="https://oscimg.oschina.net/oscnet/up-a708679e97a8b88ed64a0ec96095d73c4aa.png" width="796" referrerpolicy="no-referrer"></p><p>服務端在啓動的時候註冊服務到 zookeeper</p><pre><code class="language-java">serviceRegistry.registerServer(new ServerNode(group,IPUtil.getLocalIp(),port));

public void registerServer(ServerNode serverNode) {  
    try {  
    String path = ServiceRegistryPath.getServerNodePath(serverNode.getGroup(),  
    ServiceRegistryPath.uniqueKey(serverNode.getIp(),serverNode.getPort()));  
    this.zkNodePath = zooKeeperClient.create(path, serverNode.toBytes());  
    } catch (Exception e) {  
    e.printStackTrace();  
    }  
}

</code></pre><p>即在服務啓動的時候創建節點 /shadowrpc/services/group/node1，這個 node1 的值就是 ip+port，而在服務關閉的時候刪除這個節點</p><pre><code class="language-java">zooKeeperClient.delete(zkNodePath);

</code></pre><p>客户端就可以獲取 zk 下/shadowrpc/services/group 目錄下的所有節點，監聽目錄變化，動態維護服務端的列表</p><pre><code class="language-java">ServiceDiscovery serviceDiscovery = new ServiceDiscovery(ZK_URL);

//監聽增量變化事件  
//初始化狀態會同步 SERVER_ADDED 事件，所以不用獲取全量  
serviceDiscovery.watchService(group, (changeType, serverNode) -&gt; {  
    if(changeType == ServerChangeType.SERVER_ADDED) {  
        System.out.println("Child added: " + serverNode);  

        ShadowClient shadowClient = new ShadowClient(serverNode.getIp(),serverNode.getPort(),eventLoopGroup);  
        shadowClient.init();  
        finalShadowClients.add(shadowClient);  
    }else if(changeType == ServerChangeType.SERVER_REMOVED){  
        System.out.println("Child removed: " + serverNode);  

        Iterator&lt;ShadowClient&gt; iterator = finalShadowClients.iterator();  
        while(iterator.hasNext()) {  
            ShadowClient shadowClient1 = iterator.next();  
            if(serverNode.getIp().equals(shadowClient1.getRemoteIp()) &amp;&amp; serverNode.getPort() == shadowClient1.getRemotePort()) {  
                shadowClient1.close();  
                iterator.remove();  
            }  
        }  
    }
});

</code></pre><p>然後維護這個 List&lt;ShadowClient&gt;表示所有服務器列表的連接的增加和刪除，最後負載均衡從這個 List 裏面獲取連接源發送消息到遠程即可。</p><pre><code class="language-java">    int nextBalance = pollingBalance.getNextBalance();  
    shadowClientGroup.getShadowClients(group).get(nextBalance).writeAndFlush(message).sync();

</code></pre><span id="OSC_h3_11"></span><h3>精簡版 Client</h3><p>剛才的 Client 和 Server 都是使用 Netty 作為異步非阻塞框架搭建的，有的時候對性能要求不高但是對最終的包大小有要求的時候 (比如開發 IDEA 插件最好是 kb 級別的)，我們這裏基於 NIO 來的 Reactor 模式來搭建一套簡單版的 rpc client。</p><p>我們還是參考上面的 client，想服務端發送 Request 消息，下面是對 NIO 的一個簡單封裝 NIOClient</p><pre><code class="language-java">public void connect() throws IOException, ConnectTimeoutException {  
    socketChannel = SocketChannel.open();  
    socketChannel.configureBlocking(false);  
    selector = Selector.open();  
    socketChannel.register(selector, SelectionKey.OP_CONNECT);  

    socketChannel.connect(new InetSocketAddress(host, port));  
    isRunning = true;  

    //reactor 模式  
    this.nioReactor = new NIOReactor(this);  
    nioReactor.start();  

    //等待連接完成  
    try{  
    waitConnection.get(nioConfig.getConnectTimeout(), TimeUnit.MILLISECONDS);  
    } catch (InterruptedException | ExecutionException | TimeoutException e) {  
    isRunning = false;  
    throw new ConnectTimeoutException(String.format("連接服務器%s:%d 超時",host,port));  
    }  
}
    
public MessageSendFuture sendMessage(byte[] bytes) {  
    if(null == bytes || bytes.length == 0) {  
    return null;  
    }  

    ByteBuffer writeBuffer = ByteBuffer.allocate(4 + bytes.length); // 4 bytes for length field  
    writeBuffer.putInt(bytes.length); // Write length of the message  
    writeBuffer.put(bytes); // Write message itself  
    writeBuffer.flip();  

    // Add to write queue  
    MessageSendFuture future = new MessageSendFuture(writeBuffer);  
    writeQueue.add(future);  

    // Change interest to OP_WRITE  
    SelectionKey key = socketChannel.keyFor(selector);  
    if(!key.isValid()) {  
    return null;  
    }  
    key.interestOps(SelectionKey.OP_WRITE);  
    selector.wakeup();  

    return future;  
}

</code></pre><p>這裏寫入消息 sendMessage 的時候，也是先寫入長度 4 字節 bytes.length，再寫入 bytes。</p><p>下面是基於 Reactor 模式實現對連接消息，讀寫消息的統一處理</p><pre><code class="language-java">while (nioClient.isRunning()) {  
    try {  
    if (selector.select() &gt; 0) {  
    processSelectedKeys();  
    }  
    } catch (IOException e) {  
    logger.error("selector err",e);  
    }  
}
    
private void processSelectedKeys() throws IOException {  
    Set&lt;SelectionKey&gt; selectedKeys = selector.selectedKeys();  
    Iterator&lt;SelectionKey&gt; iter = selectedKeys.iterator();  

    while (nioClient.isRunning() &amp;&amp; iter.hasNext()) {  
    SelectionKey key = iter.next();  

    if (key.isConnectable()) {  
    handleConnect(key);  
    }  
    if (key.isWritable()) {  
    handleWrite(key);  
    }  
    if (key.isReadable()) {  
    handleRead(key);  
    }  
    iter.remove();  
    }  
}  

</code></pre><p>而對讀消息的拆包和半包處理原理也是和上面一樣的，也是讀取長度 4 字節，再讀取對應長度的字節，如果不夠重置 ByteBuffer 的 position 用於下次讀取,這裏是一個精簡版本</p><pre><code class="language-java">private void handleRead(SelectionKey key) {  
  
    ByteBuffer buffer = readByteBuffer;  

    int numRead = 0;  
    try {  
        numRead = socketChannel.read(buffer);  
    } catch (IOException e) {  
        handleClose(key);  
        return;  
    }  

    if (numRead &gt; 0) {  
        buffer.flip(); // 切換到讀模式  
        // 處理緩衝區中的所有數據  
        while (buffer.remaining() &gt; 4) { // 確保有足夠的數據讀取長度字段  
            buffer.mark();  
            int length = buffer.getInt();  
            //System.out.printf("read length=%d,remain=%d\n",length,buffer.remaining());  

            if (length &lt;= buffer.remaining()) {  
            byte[] data = new byte[length];  
                buffer.get(data);  
                nioClient.getReceiveMessageCallBack().handleMessage(data);  
            } else {  
                // 數據長度不足以構成一個完整的消息，重置並退出循環  
                buffer.reset();  
                break;  
            }  
        }  

        if (buffer.hasRemaining()) {  
            buffer.compact(); // 移動未處理數據到緩衝區開始位置  
        } else {  
            buffer.clear(); // 如果沒有剩餘數據，清空緩衝區  
        }  

        lastActiveTime = System.currentTimeMillis();  

    } else if (numRead &lt; 0) {  
        //接收到-1 表示服務器關閉  
        handleClose(key);  
    }  
}

</code></pre><span id="OSC_h2_12"></span><h2>RPC 框架的使用</h2><p>經過上述酣暢淋漓的 rpc 框架搭建，基本五臟俱全的 rpc 框架 ShadowRPC 就搭建完成了，下面是一些服務例子。</p><span id="OSC_h3_13"></span><h3>定義實體類</h3><pre><code class="language-java">@ShadowEntity
public class MyMessage {
    @ShadowField(1)
    private String content;

    @ShadowField(2)
    private int num;
}

</code></pre><p>如果是 protobuf 方式，可定義描述文件</p><pre><code class="language-proto">message MyMessage {
    string content = 1;
    int32 num = 2;
}

</code></pre><p>然後直接用 maven 插件 protobuf-maven-plugin 生成實體</p><span id="OSC_h3_14"></span><h3>編寫接口和服務類</h3><pre><code class="language-java">@ShadowInterface
public interface IHello {
    String hello(String msg);
    MyMessage say(MyMessage message);
}

</code></pre><p>protobuf 方式的接口需要保證參數和返回類型都是 protobuf 定義的類型</p><pre><code class="language-java">@ShadowInterface
public interface IHelloProto {
    MyMessageProto.MyMessage say(MyMessageProto.MyMessage message);
}

</code></pre><p>然後編寫服務實現類</p><pre><code class="language-java">@ShadowService(serviceName = "helloservice")
public class HelloService implements IHello {
    @Override
    public String hello(String msg) {
        return "Hello,"+msg;
    }
    @Override
    public MyMessage say(MyMessage message) {
        MyMessage message1 = new MyMessage();
        message1.setContent("hello received "+"("+message.getContent()+")");
        message1.setNum(message.getNum()+1);
        return message1;
    }
}

</code></pre><span id="OSC_h3_15"></span><h3>指定序列化類型和端口，啓動服務端</h3><p>單點啓動模式如下:</p><pre><code class="language-java">ServerConfig serverConfig = new ServerConfig();
        serverConfig.setQpsStat(true); //統計 qps
        serverConfig.setPort(2023);

ServerBuilder.newBuilder()
        .serverConfig(serverConfig)
        .addPackage("rpctest.hello")
        .build()
        .start(); 

</code></pre><p>使用 zk 作為集羣模式啓動</p><pre><code class="language-java">String ZK_URL = "localhost:2181";
ServerConfig serverConfig = new ServerConfig();
serverConfig.setGroup("DefaultGroup");
serverConfig.setPort(2023);
serverConfig.setRegistryUrl(ZK_URL);
serverConfig.setQpsStat(true); //統計 qps
serverConfig.setSerializer(SerializerEnum.KRYO.name());
ServerBuilder.newBuilder()
                .serverConfig(serverConfig)
                .addPackage("rpctest.hello")
                .build()
                .start();

</code></pre><span id="OSC_h3_16"></span><h3>客户端調用 rpc 服務</h3><pre><code class="language-java">ModulePool.getModule(ClientModule.class).init(new ClientConfig());

ShadowClient shadowClient = new ShadowClient("127.0.0.1",2023);
shadowClient.init();

IHello helloService = shadowClient.createRemoteProxy(IHello.class,"shadowrpc://DefaultGroup/helloservice");

logger.info("發送 hello 消息");
String helloResponse = helloService.hello("Tom");
logger.info("hello 服務端響應:"+helloResponse);

MyMessage message = new MyMessage();
message.setNum(100);
message.setContent("Hello, Server!");

System.out.printf("發送請求 : %s\n",message);
MyMessage response = helloService.say(message);
System.out.printf("接收服務端消息 : %s\n",response);    

</code></pre><p>使用 zk 作為服務發現負載均衡調用各個服務器</p><pre><code class="language-java">ClientConfig config = new ClientConfig();
config.setSerializer(SerializerStrategy.KRYO.name());
ModulePool.getModule(ClientModule.class).init(config);
String ZK_URL="localhost:2181";
ShadowClientGroup shadowClientGroup = new ShadowClientGroup(ZK_URL);
shadowClientGroup.init();

IHello helloService = shadowClientGroup.createRemoteProxy(IHello.class, "shadowrpc://DefaultGroup/helloservice");
List&lt;ShadowClient&gt; shadowClientList = shadowClientGroup.getShadowClients("DefaultGroup");

System.out.println("所有服務器: "+shadowClientList.stream().map(c-&gt; c.getRemoteIp()+":"+c.getRemotePort()).collect(Collectors.toList()));

for(int i = 0 ;i&lt;shadowClientList.size() * 5; i++) {
    String hello = helloService.hello(i + "");
    System.out.println(hello);
}

</code></pre><span id="OSC_h2_17"></span><h2>性能測試</h2><p>目前 Mac 筆記本 16G 4 核測試的 rpc 調用 hello 邏輯，如果使用 kryo 序列化/反序列化，100w 個請求耗時 27 秒，平均 QPS 為 3.7w，如果使用 protobuf 序列化/反序列化耗時 25 秒, 平均 QPS 為 4w，如果用 M1 芯片的 Mac，平均 QPS 可以達到 7W+，最高 QPS 可以達到 10w+。</p><span id="OSC_h2_18"></span><h2>源碼</h2><p>篇幅有限，介紹的時候不夠完整有些遺漏，所有源碼見: <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FLiubsyy%2FShadowRPC" target="_blank">https://github.com/Liubsyy/ShadowRPC</a><br> 目前僅供學習交流使用，後續我將逐步打磨此 rpc 框架達到企業級水準。</p><blockquote><p>本 RPC 框架使用的方案和技術棧都是業界通用，項目中部分源碼如有雷同純屬巧合。</p></blockquote></div>
                                    ]]>
            </description>
            <pubDate>Fri, 02 Feb 2024 07:10:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/3276866/blog/10993751</guid>
            <link>https://my.oschina.net/u/3276866/blog/10993751</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[CPU vs GPU：不僅僅是一字之差]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>當今科學技術的飛速發展，社會已經邁入了信息時代的智能化階段。人臉識別、智能客服、個性化推薦等應用已經深入到日常生活的各個方面。這些看得見的應用背後，是看不見的算力在默默地支撐着。在滿足這些高算力需求的過程中，CPU 和 GPU 作為計算機的核心組件發揮着重要的承載作用。那麼，CPU 和 GPU 到底是什麼？它們又有什麼區別？</p><p>隨着數據成為五大生產要素之一，算力的作用變得愈發重要。算力即計算能力（Computing Power），更具體來説，<strong>算力是指數據中心的服務器通過對數據進行處理後實現結果輸出的一種能力。</strong></p><p>算力的概念起源於計算機的發明初期。最早的計算機是由機械裝置完成計算任務，而算力指的就是這些機械裝置的計算能力。隨後，半導體技術的出現和發展，集成電路問世，開啓了芯片時代。計算機在芯片的加持下，功能越來越強大，體積也越來越小，最終誕生了個人計算機（PC），成為人類最重要的算力工具。</p><p>而後人工智能和大數據技術的迅猛發展也帶動了算力需求的飛速增長。無論是訓練複雜的神經網絡模型，還是進行大規模數據分析和處理，算力都扮演着至關重要的角色。如今，<strong>芯片已經成為算力的主要載體</strong>。當我們談論算力時，實際上是在討論 CPU 和 GPU 等芯片的計算能力。在計算機科學領域，CPU 和 GPU 作為計算機的核心組件，雖然名字只有「一字之差」，但其結構和功能卻大不相同。</p><span id="OSC_h1_1"></span><h1><strong>1 CPU vs GPU: 概念</strong></h1><p><strong>CPU（Central Processing Unit），即中央處理器</strong>，是電腦、手機等眾多電子產品的「心臟」。在我們日常生活的諸多場景中，如觀看視頻、玩遊戲、聊天互動等，<strong>CPU 發揮着統一指揮和調度的關鍵作用</strong>。它主要負責執行程序指令、進行算術和邏輯運算以及控制和協調計算機各個部件。</p><p>為了滿足處理各種不同數據的強大通用性能，CPU 的內部結構設計非常複雜。CPU 由多個核心組成，每個核心又包含算術邏輯單元、控制單元和高速緩存等組件，並且可以獨立地執行任務。至今為止，所有的 CPU 都遵循馮·諾依曼體系結構的基本工作流程：取指令，指令譯碼，執行指令，數據回寫，然後再取下一個指令、譯碼、執行、回寫，重複進行直到程序結束。通過這種工作流程，CPU 能夠有效地執行程序，並控制整個系統的運行。</p><p style="text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-10e85bcb595265cd760feadac4d6ff9b532.png" referrerpolicy="no-referrer"></p><p style="text-align:center">CPU 工作流程</p><p>然而，隨着計算機的普及，人們對圖形顯示的要求不斷提高，例如在進行復雜的三維建模時，需要處理大量的圖形數據以呈現逼真的效果；在玩大型遊戲時，要求系統能夠處理高分辨率的畫面和複雜的遊戲場景。儘管 CPU 內部採用了各種方法來加速指令執行，但隨着任務的增多，CPU 的性能顯得有些力不從心。</p><p>面對這個問題，能否考慮增加更多的 CPU 來解決呢？這固然是一種思路，但這涉及到相當高的成本，並且堆疊數量也不能保證完全解決計算能力不足的問題。這時候聰明的開發者就提出了一個更巧妙的解決方案：既然 CPU 的計算能力有限，為什麼不將計算單元堆疊在同一塊芯片上，讓它們處理大量運算的任務呢？於是，GPU 誕生了。</p><p><strong>GPU（Graphics Processing Unit），即圖形處理器，</strong> 顧名思義，一種專門用來處理圖形和圖像計算的處理器。<strong>GPU 最初是為圖形渲染和顯示而設計的，用於加速計算機中圖像的處理</strong>，例如在視頻遊戲、電影渲染、圖形設計等方面。它只有少量的控制單元和緩存單元，絕大部分的空間用來堆放運算單元，主要負責完成許多計算密集型任務。</p><span id="OSC_h1_2"></span><h1><strong>2 CPU vs GPU: 「差」在哪裏？</strong></h1><p>通過引入 GPU，計算機系統可以充分利用其強大的並行計算能力，加速圖形和圖像相關的計算任務。CPU 負責邏輯任務，而 GPU 來處理大量簡單重複的計算任務，這種不同類型的任務分配給不同類型的處理器的模式，大大提高了系統性能。那麼，CPU 和 GPU 到底「差」在哪裏呢？</p><p><strong>2.1 架構組成</strong></p><p>CPU 和 GPU 之間存在顯著差異，是因為它們各自針對不同的目標和需求來設計，具體體現在：</p><ul><li><p>CPU 需要有強大的通用性，以處理各種不同類型的數據，同時需要進行邏輯判斷，包括大量的分支跳轉和中斷處理，這導致內部結構異常複雜。</p></li><li><p>GPU 主要面向類型高度統一、相互無依賴的大規模數據，並在純淨的計算環境中執行，因此不需要處理複雜的邏輯操作。</p></li></ul><p>這就導致了 CPU 和 GPU 呈現出非常不同的架構：</p><p style="text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-8aa6a52075b93619752a89167782aee5119.png" referrerpolicy="no-referrer"></p><p style="text-align:center">CPU 基本架構</p><p style="text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-c3ccf2310c31a2e6354388180ec4615ba97.png" referrerpolicy="no-referrer"></p><p style="text-align:center">GPU 基本架構</p><p>CPU 擁有較大的緩存單元以及複雜的邏輯控制單元，相比之下計算能力只是 CPU 很小的一部分。而 GPU 則擁有數量眾多的計算單元和超長的流水線，但只有非常簡單的邏輯控制以及較小的緩存單元。</p><p><strong>2.2 設計理念</strong></p><p>CPU 和 GPU 的設計理念也截然不同。首先，<strong>CPU 是基於低延遲（Low Latency）設計的</strong>：</p><ul><li><p><strong>強大的運算單元：</strong> CPU 擁有數量較少但是單個計算性能更強的運算單元，可以減少操作延時，更快地響應。</p></li><li><p><strong>大容量緩存：</strong> 將一部分數據存儲到高速緩存當中，使得高延遲的內存訪問轉換為低延遲的緩存訪問。</p></li><li><p><strong>複雜的控制單元：</strong> 分支預測（Branch Prediction）機制可以降低分支延時；數據轉發（Data Forwarding）機制降低數據延時。</p></li></ul><p>而&nbsp;<strong>GPU 則是基於高通量（High Throughput）設計的</strong>：</p><ul><li><p><strong>精簡的運算單元：</strong> GPU 擁有大量的運算單元，雖然單個單元的性能比不上 CPU，但可以支持非常多的線程（Thread）從而達到非常大的吞吐量。</p></li><li><p><strong>小容量緩存：</strong> 與 CPU 不同，GPU 緩存的目的並不是用來存儲後面需要訪問的數據，而是為線程提供服務，如果有很多線程需要訪問同一個相同的數據，緩存會合並這些訪問，然後再去訪問內存。</p></li><li><p><strong>簡單的控制單元：</strong> GPU 的控制單元沒有分支預測和數據轉發機制。</p></li></ul><p>總的來説，CPU 擁有數量相對少（一般不超過兩位數）但能力更強的核心，能夠更快地處理單個任務，因而它尤其適合處理串行任務和邏輯控制等類型的工作。相比之下，GPU 擁有成百上千核，雖然每個核心運算能力較低，但可以將複雜任務分解成非常多的子任務再並行處理。</p><p style="text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-9572c4d616cb11ca84427a84df0d2e95c1d.png" referrerpolicy="no-referrer"></p><p style="text-align:center">串行處理過程</p><p style="text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-d325166b8458a82bfd616ed21119309a3aa.png" referrerpolicy="no-referrer"></p><p style="text-align:center">並行處理過程</p><p><strong>2.3 適用場景</strong></p><p>CPU 與 GPU 二者的設計目的並不一樣，因而適用的場景也截然不同。<strong>CPU 更擅長一次處理一項任務，而 GPU 則可以同時處理多項任務。</strong></p><p>用一個形象的比喻來解釋。CPU 就像是一架高速飛機，而 GPU 則相當於一隊貨櫃船。它們的任務是將大量貨物從 A 位置迅速運送到 B 位置。雖然 CPU（飛機）速度非常快，但每次只能攜帶少量的貨物，需要多次往返才能完成任務。相比之下，GPU（貨櫃船）雖然單次執行速度相對較慢，但通過協同工作，每艘都能同時攜帶一部分貨物，最終以集體的力量高效完成運輸任務。</p><p style="text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-b63aae29f97580397fb69a6ed0ae951f0e5.png" referrerpolicy="no-referrer"></p><p style="text-align:center">CPU 與 GPU 處理任務對比</p><p>因此，雖然 CPU 單次執行任務的時間更快，但是在需要大量重複工作負載時，GPU 優勢就越顯著。而當遇到前後計算步驟嚴密關聯的計算場景，這些任務涉及到「流」的問題，必須先計算完第一步，再去計算第二步。或是需要進行大量邏輯判斷和複雜計算的任務，比如運行操作系統、處理日常辦公任務、進行單線程編程等。這種時候，使用 GPU 的效率反而沒有 CPU 高。</p><p>綜上所述，CPU 是個集各種運算能力的大成者。它的優點在於調度、管理、協調能力強，並且可以做複雜的邏輯運算，但由於運算單元和內核較少，只適合做相對少量的運算。GPU 無法單獨工作，它相當於一大羣接受 CPU 調度的流水線員工，適合做大量的簡單運算。<strong>CPU 和 GPU 在功能上各有所長，互補不足，通過相互配合使用，實現最佳的計算性能</strong>。</p><p>因此，雖然 CPU 單次執行任務的時間更快，但是在需要大量重複工作負載時，GPU 優勢就越顯著。而當遇到前後計算步驟嚴密關聯的計算場景，這些任務涉及到「流」的問題，必須先計算完第一步，再去計算第二步。或是需要進行大量邏輯判斷和複雜計算的任務，比如運行操作系統、處理日常辦公任務、進行單線程編程等。這種時候，使用 GPU 的效率反而沒有 CPU 高。</p><p>綜上所述，CPU 是個集各種運算能力的大成者。它的優點在於調度、管理、協調能力強，並且可以做複雜的邏輯運算，但由於運算單元和內核較少，只適合做相對少量的運算。GPU 無法單獨工作，它相當於一大羣接受 CPU 調度的流水線員工，適合做大量的簡單運算。<strong>CPU 和 GPU 在功能上各有所長，互補不足，通過相互配合使用，實現最佳的計算性能</strong>。</p><span id="OSC_h1_3"></span><h1><strong>3 CPU vs GPU: 演進與發展</strong></h1><p>技術的不斷更新推動着計算機領域的快速發展，而在這個不斷演進的過程中，CPU 和 GPU 也在持續發展。在過去的幾十年裏它們在各自的領域取得了顯著的突破，為計算機應用提供了更高的性能和效率。這不僅推動了數字化時代信息技術的發展，也為各個領域帶來了新的可能性。</p><p><strong>3.1 揚長避短，穩步前進</strong></p><p>CPU 擁有強大的指令處理和計算能力（這裏強大的計算能力是指 CPU 可以勝任更復雜的計算任務），通常用於處理計算機的核心工作，包括解釋計算機指令和處理計算機軟件中的數據。例如我們在使用個人計算機時，用户和各種軟件會不斷地產生指令流，CPU 要完成的一個重要工作就是負責處理這些指令，保證它們按照規定的順序執行。此外，CPU 還要負責處理計算機軟件所產生的類型多樣且邏輯複雜的數據。</p><p>距離第一塊 CPU 4004 的誕生已經過去了五十多年，儘管與早期相比，CPU 在物理形態、設計製造和具體任務的執行上有了極大的發展，但是其基本的操作原理一直沒有改變。換句話來説 <strong>，CPU 的功能和使用場景並沒有發生較大的改變，無非是在能耗、性能以及可靠性上面不斷地優化。</strong></p><p><strong>3.2 GPU 加速應用遍地開花</strong></p><p>3.2.1 從 GPU 到 GPGPU</p><p>GPU 的概念在 1999 年 NVIDIA 公司發佈 GeForce 256 時被首次提出， 在早期，GPU 主要用於 3D 圖形渲染。但與 CPU 不同，隨着 GPU 的功能和運算能力越來越強大，開發者開始探索除了圖形處理之外，GPU 還能做什麼？</p><p>在 2003 年，NVIDIA 推出新產品 GeForce 8800 GTX 時，首次提出了 GPGPU（General-purpose computing on Graphics Processing Unit）的概念，即通用圖形處理器，意指利用 GPU 的計算能力，在非圖形處理領域進行更通用、更廣泛的計算。</p><p>到了 2007 年，NVIDIA 進一步提出了名為 CUDA（Compute Unified Device Architecture，計算統一設備架構）的全新技術，利用該技術可以通過 NVIDIA 的 GPU 進行圖像處理之外的計算任務，它揭開了 GPU 計算革命序幕。隨後，蘋果公司也推出了類似的技術：OpenCL（Open Computing Language），<span style="background-color:#ffffff; color:#202122">並在與 AMD</span><span style="background-color:#ffffff; color:#202122">，IBM</span><span style="background-color:#ffffff; color:#202122">，Intel&nbsp;</span><span style="background-color:#ffffff; color:#202122">和 NVIDIA&nbsp;</span><span style="background-color:#ffffff; color:#202122">技術團隊的合作之下初步完善。</span>OpenCL 是一個開放的、跨平台的並行計算框架，允許開發人員在不同的硬件平台（CPU、GPU、FPAG 等）上進行開發。</p><p>自此以後，<strong>GPU 不再以圖形的 3D 加速為唯一目的，而是能夠廣泛應用於各領域的通用計算加速，尤其是科學計算、大數據分析以及人工智能等領域。</strong></p><p>3.2.2 大模型與向量數據庫</p><p>當今互聯網世界所需的計算能力遠遠超出任何人的想象，並且只會隨着人工智能的興起而增加。以如今爆火的生成式 AI ChatGPT 為代表，大小為 175B 的 GPT-3 使用了 1024 張 A100 GPU 訓練了約 34 天，隨着參數數量的增加，往後 AI 需要的算力資源更是天文數字。</p><p>大模型同樣引發了數據庫領域的革命，此前不温不火的向量數據庫搭上了這輛順風車，一舉成為 AI 時代的新寵。在 2023 英偉達 GTC AI 開發者大會中，NVIDIA CEO 黃仁勳首次提及向量數據庫，並強調<strong>對於構建專有大模型的組織而言，向量數據庫至關重要。</strong></p><p>對於 AI 來説，向量是它理解世界的通用數據形式，不管是圖片、視頻、音頻，都可以通過轉換成向量來讓 AI 識別，<strong>向量數據庫作為專門對向量進行檢索和存儲的工具，能為大模型的應用落地解決諸如「沒有長期記憶」、「幻覺」、「知識更新不及時」等問題。</strong></p><p>但是，向量數據庫本身的性能也是一個問題，説到底與大模型的結合只是其應用的一部分，它本質上還是一個數據搜索和分析的工具，如果性能滿足不了用户需求，同樣也會被淘汰。於是乎，開發者們又想起了 GPU。</p><p>在向量數據庫中，最核心的功能在於向量相似性搜索，即在一個海量的數據中找到和某個向量最相似的向量，它的計算量十分龐大，而這恰好是 GPU 所擅長的，<strong>利用 GPU 的並行計算能力可以加速向量相似性搜索，顯著提高查詢速度，降低延遲。</strong></p><span id="OSC_h1_4"></span><h1><strong>4 雲原生向量數據庫 PieCloudVector 支持 GPU 加速</strong></h1><p>拓數派大模型數據計算系統 πDataCS 三大數據計算引擎之一：<a href="https://my.oschina.net/u/5944765/blog/10321799"><em>向量數據庫 PieCloudVector</em></a>，是大模型時代的分析型數據庫升維，目標是助力多模態大模型 AI 應用，進一步實現海量向量數據存儲與高效查詢。PieCloudVector 支持和配合大模型的 Embeddings，幫助基礎模型在場景 AI 的快速適配和二次開發，是大模型必備應用。</p><p><strong>PieCloudVector 充分利用現代化硬件能力，支持 GPU 加速功能。</strong> 這一特性讓 PieCloudVector 能夠利用 GPU 的並行計算能力來加速向量計算和數據處理任務，顯著縮短任務的執行時間，提高計算效率，幫助用户更高效地進行數據計算。特別是在需要處理大規模數據集或進行復雜的數值運算時，GPU 加速可以大幅提升計算性能。</p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 02 Feb 2024 05:48:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/5944765/blog/11020020</guid>
            <link>https://my.oschina.net/u/5944765/blog/11020020</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[社區月報丨 2024 年 1 月，多款應用迎更新，還有 deepin Meetup 的初次相見和久別重逢！]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>內容來源：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.deepin.org%2Fzh%2Fdeepin-community-monthly-report-2024-01%2F" target="_blank">deepin 社區</a></p><hr><h1><strong>deepin（深度）社區 1 月總覽</strong></h1><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">2024 年 1 月，有<strong>975</strong>位小夥伴加入了 deepin 開源社區大家庭，目前共有論壇夥伴<strong>151,007</strong>位；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">在 1 月，2024 年第一場 deepin Meetup 在北京正式舉辦，同時 deepin（深度）社區舉辦的龍年春節壁紙大賽也完美落下帷幕；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">1 月 deepin SIG 組共提交 PR 1116 個 ，提交 Issues 294 個，當前共有 SIG 組 40 個。</p><h1><strong>社區產品</strong></h1><h2><strong>深度之家</strong></h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">2024 年 1 月，深度之家共收到用户需求反饋及 bug166 條：</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">當中 bug 反饋 126 個，需求反饋 40 個，已修復/確認 16 個，包括用户反饋的【玲瓏卸載應用命令，第一次執行會報錯，再執行一次才能卸載成功】、【微信更新後登陸不了】等問題；</p><h2><strong>SIG 組 1 月進展</strong></h2><ol><li><strong>DDE SIG:</strong></li></ol><ul><li>DDE-launchpad 脱離技術預覽階段，DDE-shell、Treeland、DDM 進入技術預覽階段</li></ul><ol><li><strong>dde-port SIG:</strong></li></ol><ul><li>持續推進 DDE 在各個發行版的移植</li><li>BigLinux 發行版下的 DDE v23 初步支持</li></ul><ol><li><strong>deepin-sysdev-team：</strong></li></ol><ul><li>持續進行系統倉庫的打包與維護工作</li></ul><ol><li><strong>deepin-cicd-team:</strong></li></ol><ul><li>持續完善自動化流水線的智能程度</li></ul><ol><li><strong>deepin-ThemeDesign：</strong></li></ol><ul><li>已開始製作 deepin 適用壁紙，並嚮應用商店投遞中</li></ul><h1><strong>應用商店</strong></h1><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><img alt="" src="https://bbs.deepin.org/uploader/f/TQNIvpoxovcuW4fP.png?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJhdWQiOiJhY2Nlc3NfcmVzb3VyY2UiLCJleHAiOjE3MDY3ODA2OTEsImZpbGVHVUlEIjoiOE5rNk13Nk1EV0ZHendxTCIsImlhdCI6MTcwNjc4MDA5MSwidXNlcklkIjoxMDMxM30.ArE7u7SqsjnfBy4BwVNK3_zpcWgZNnqqlvwLaBhFwsI" referrerpolicy="no-referrer">應用上新 100 款 ：上新應用中，99 款應用同步上新至 deepin V23，99 款應用為 Linux 應用，1 款 Wine 應用；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">上新應用中包括中望 3D 2024、OpenTrace 等多款主流應用；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">應用更新 124 款 ：更新應用中，80 款應用同步在 deepin V23 中更新。其中 113 款為 Linux 應用，Android 應用 7 款，Wine 應用 4 款；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">1 月更新的應用當中包括 QQ、墨刀、有道雲筆記等主流應用。</p><h1><strong>deepin 論壇</strong></h1><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">1 月 deepin 論壇共發佈了<strong>8803</strong>帖子；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">共發佈主題帖<strong>1092</strong>個；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">超過 900 + 新朋友加入到 deepin 論壇。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">當中，最受論壇用户歡迎的帖子 top5 為：</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>1.</strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbbs.deepin.org%2Fpost%2F267681" target="_blank">關於 deepin-V23 beta3 新版本的體驗，及個人看法</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>2</strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbbs.deepin.org%2Fpost%2F267289" target="_blank">.大家對文件管理器有什麼不滿嗎？</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>3.</strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbbs.deepin.org%2Fpost%2F267297" target="_blank">V23 任務欄改進建議，集中反饋貼！</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>4.</strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbbs.deepin.org%2Fpost%2F267665" target="_blank">真的不要再高仿了，越來越刷新對國產自主能力的認知！</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>5.</strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbbs.deepin.org%2Fpost%2F267231" target="_blank">揭秘 deepin V23 Beta3！deepin Meetup · 2024 北京，出發！</a></p><h1><strong>社區活動</strong></h1><h2><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.deepin.org%2Fzh%2Fwelcome-to-whlug%2F" target="_blank"><strong>【WHLUG】</strong></a></h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">2024 年 1 月 20 日下午，由 deepin（深度）社區聯合 Linux 中國、龍蜥社區（OpenAnolis）、華中科技大學網絡空間安全學院開源俱樂部一起舉辦的 Linux 愛好者線下沙龍活動（WHLUG）在武漢未來科技城成功舉辦。沙龍邀請了武漢地區的 Linux 愛好者，共同探討玲瓏、容器技術、Linux 內核、開源參與、高性能網絡等話題，現場氣氛熱烈。</p><p style="color:#333333; margin-left:0px; margin-right:0px; text-align:center"><img alt="image.png" src="https://storage.deepin.org/thread/202402010937419026_image.png" referrerpolicy="no-referrer"></p><h2><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.deepin.org%2Fzh%2Fdeepin-meetup%2F" target="_blank"><strong>deepin Meetup（北京站）</strong></a></h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">2024 年 1 月 27 日，deepin Meetup（北京站）成功舉辦，40 餘名用户參與。本次活動帶大家回顧 deepin（深度）社區的發展歷史，展示了社區部分明星產品及技術成果，並提前揭秘了 deepin V23 Beta3 的部分新增功能，如啓動器重構、UOS AI 預裝、新增低電閾值設置功能、支持了 Steam 原生應用的安裝等。各位 deepiner 線下相聚，昔日網友揭開神秘面紗，共同探討最新產品進展、分享使用心得、實操經驗，大家也對 deepin 未來發展提出了諸多寶貴意見，現場氛圍熱烈。</p><p style="color:#333333; margin-left:0px; margin-right:0px; text-align:center"><img alt="image.png" src="https://storage.deepin.org/thread/202402010938049219_image.png" referrerpolicy="no-referrer"></p><h2><strong>deepin（深度）社區春節壁紙大賽</strong></h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">在 2024 年春節來臨之際，國產操作系統「統信 UOS」及 deepin（深度）社區聯合舉辦全新一期壁紙創作大賽，面向所有對電腦操作系統個性美化感興趣的設計師，徵集壁紙作品，展示心中的獨特的「中國龍年」。活動已圓滿結束，總計收到有效作品數 90 份（156 張圖片），通過社區投遞系統上架壁紙作品包共計 75 個，參賽人數 23 人（其中 4 位設計師、2 位老師、8 位學生），大眾評委環節評分 300 次，參與人數 148 人。目前所有成功投稿的作品都已上架應用商店，可在應用商店中搜索【龍年壁紙】，安裝使用。</p><p style="color:#333333; margin-left:0px; margin-right:0px; text-align:center"><img alt="image.png" src="https://storage.deepin.org/thread/202402010938569200_image.png" referrerpolicy="no-referrer"></p><p style="text-align:center">參賽作品：古韻新繹，「龍」光煥發</p><p style="text-align:center">設計師：MC 李狗蛋</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><h1><strong>社區鳴謝</strong></h1><h2><strong>【論壇最活躍小夥伴】</strong></h2><ul><li>阿尼櫻奈奈</li><li>buyike</li><li>晚秋（lateautumn）</li></ul><h2><strong>【內測最活躍小夥伴】</strong></h2><ul><li>煙霞志</li><li>e*t@gmail.c<strong>o</strong>m**</li><li>jiutian123</li></ul><h2><strong>【PR 貢獻最活躍小夥伴】</strong></h2><ul><li>Zeno-sole</li><li>UTsweetyfish</li><li>Decodetalkers</li><li>xzl01</li><li>18202781743</li><li>liyigang1</li><li>tsic404</li></ul><p style="margin-left:0px; margin-right:0px; text-align:start"><strong>每個貢獻者都對深度開源社區的發展產生了巨大的影響，歡迎與我們同心協力，揚起 deepin 的桅杆！</strong></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 02 Feb 2024 05:42:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/277431</guid>
            <link>https://www.oschina.net/news/277431</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[VS Code 1.86 會導致遠程開發功能無法使用]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Visual Studio Code 今日發佈的最新版 <u><a href="https://www.oschina.net/news/277414/vs-code-1-86-released">1.86</a></u><span>&nbsp;引入一項嚴重的破壞性變化，其</span>遠程開發服務器工具鏈<span>最低環境要求的&nbsp;</span>glibc 版本提升為 2.28。</p><p>由於&nbsp;Ubuntu 18.04 LTS 使用 glibc 2.27，因此有開發者發現自己升級到 VS Code 新版本後，使用 Remote SSH 無法連接到遠程機器。</p><blockquote><p><img src="https://oscimg.oschina.net/oscnet/up-7159057b7f201b731192ad420804af1891b.png" referrerpolicy="no-referrer"></p><p><u><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fv2ex.com%2Ft%2F1013590" target="_blank">https://v2ex.com/t/1013590</a></em></u></p></blockquote><p>對於該問題，目前的解決方案有兩種：</p><ul><li><strong>根據對應的發行版，升級至 Ubuntu 20.04 LTS、Debian 10 或 RHEL 8</strong></li><li><strong>降級到 VS Code 1.85</strong></li></ul><blockquote><p><img src="https://oscimg.oschina.net/oscnet/up-cd7781af0c011f485dda9a5d8b8df221d79.png" referrerpolicy="no-referrer"></p></blockquote><p><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fdocs%2Fremote%2Ffaq%23_can-i-run-vs-code-server-on-older-linux-distributions" target="_blank">詳情查看官方 FAQ</a></u>。</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 01 Feb 2024 06:22:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/277439/vscode-1-86-drops-ubuntu-18-04</guid>
            <link>https://www.oschina.net/news/277439/vscode-1-86-drops-ubuntu-18-04</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
    </channel>
</rss>
