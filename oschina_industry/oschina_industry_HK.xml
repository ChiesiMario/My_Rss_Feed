<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[開源中國-綜合資訊]]>
        </title>
        <link>https://www.oschina.net/news/industry</link>
        <atom:link href="https://rsshub.app/oschina/news/industry" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[開源中國-綜合資訊 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Thu, 21 Sep 2023 03:38:00 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[V 語言 (Vlang) 支持 lambdas]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://www.oschina.net/question/4489239_2331019" _blank"="">
尊嘟假嘟，成都程序員也 996 嗎？ 
<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p>V 語言終於有 lambdas 了。</p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftwitter.com%2Fv_language%2Fstatus%2F1704611099100828094" target="_blank"><img src="https://static.oschina.net/uploads/space/2023/0921/105223_t4lO_2720166.png" referrerpolicy="no-referrer"></a></p><blockquote><p>V 是一個集合了 Go 的簡單和 Rust 的安全特性的靜態語言，作者表示 V 與 Go 非常相似，如果你瞭解 Go，那麼就已經瞭解&nbsp;80% 的 V。V 在 Go 的基礎上進行改進之處：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fvlang.io%2Fcompare%23go">https://vlang.io/compare#go</a>。</p><p><strong>V 主要特性</strong></p><ul><li>簡單（作者聲稱可以在不到一小時內學習 V）</li><li>快速編譯（編譯器只有 400kb，而且無第三方依賴）</li><li>易於開發：V 在不到一秒鐘的時間內完成編譯</li><li>安全：沒有 null、沒有全局變量、沒有未定義的值、邊界檢測、默認使用 Immutable 結構體</li><li>支持 C/C++ 轉換</li><li>方便使用的交叉編譯</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fvlang%2Fui">提供跨平台 UI 庫</a></li><li>內置圖形庫</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fvlang%2Fv%2Fblob%2Fmaster%2Fdoc%2Fdocs.md%23orm">內置 ORM</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fvlang%2Fv%2Fblob%2Fmaster%2Fvlib%2Fvweb%2FREADME.md">內置 Web 框架</a></li><li>……</li></ul></blockquote><p>根據 V 語言倉庫的 PR 合併信息，目前已添加對短&nbsp;lambda 表達式的支持，例如：</p><pre><code>a.sorted(|x,y| x &gt; y)</code></pre><p><img height="578" src="https://static.oschina.net/uploads/space/2023/0921/105522_GKcE_2720166.png" width="1845" referrerpolicy="no-referrer"></p><p>▲&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fvlang%2Fv%2Fpull%2F19390" target="_blank">https://github.com/vlang/v/pull/19390</a></p><p>示例代碼</p><ul><li>使用函數/表達式進行回調，從外部源獲取它們的值</li></ul><pre><code>import os

fn f( cb fn() string ) string { return cb() }

dump( f(fn() string { return os.args[0] }) )

// the same, just shorter:
dump( f(||os.args[0]) ) </code></pre><p>打印結果如下：</p><pre><code>[a.v:5] f(anon_fn): /v/vnew/a
[a.v:6] f(|| os.args[0]): /v/vnew/a</code></pre></div>
                                    ]]>
            </description>
            <pubDate>Thu, 21 Sep 2023 02:59:57 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/258897</guid>
            <link>https://www.oschina.net/news/258897</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[國內首個金融行業大模型標準發佈]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://www.oschina.net/question/4489239_2331019" _blank"="">
尊嘟假嘟，成都程序員也 996 嗎？ 
<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p>9 月 19 日，由中國信通院牽頭，聯合騰訊雲、奇富科技、科大訊飛等四十多家企業共同編制的《面向行業的大規模預訓練模型技術和應用評估方法第 1 部分：金融大模型》發佈成為國內首個金融行業大模型標準，為金融行業智能化的高質量發展提供了重要支撐，為全面促進大模型安全合規和可信發展提供了重要保障。</p><p>具體來看，該標準涵蓋了金融大模型的關鍵能力要求，包括場景適配度、能力支持度和應用成熟度三大方面。此外，標準還從金融行業的特性出發，覆蓋了投資研究、投資顧問、風險管理、市場營銷、客户服務等多個金融應用場景，並詳細規定了金融大模型在數據合規性、可追溯性、私有化部署、風險控制等方面的要求。</p><p>「作為數字化和智能化應用的前沿領域，金融等行業擁有豐富的數據資源、廣泛的實踐場景，成為大模型率先落地的垂直領域之一。」騰訊雲有關負責人表示，這一標準的正式發佈，也意味着金融行業大模型技術和應用的評估、驗收等工作有了重要指導和依據。</p><p>不過，金融又是一個對精準性、可控性、安全性要求極高的行業，在實際應用大模型時還面臨着挑戰。對此，工商銀行首席技術官呂仲濤認為，大模型技術目前尚未完全成熟，而金融行業是一個強監管的行業，還面臨着數據、算力、算法、應用等諸多挑戰。</p><p>中國工程院院士、復旦大學金融科技研究院院長柴洪峯也在 2023 年國家網絡安全宣傳週論壇上指出，金融垂直領域的大模型應用目前面臨一些挑戰，一是金融數據的私密性限制了共享和構建大規模數據集的能力；二是金融數據的多模態特性增加了模型處理和建模的複雜性。為了克服這些難題，加強產學研的合作勢在必行，需要共同構建更強大的金融垂直領域基礎模型，以提高大模型對多模態數據的表達能力和安全性。</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 21 Sep 2023 02:50:57 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/258895</guid>
            <link>https://www.oschina.net/news/258895</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[書生·浦語 200 億參數模型 InternLM-20B 開源]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://www.oschina.net/question/4489239_2331019" _blank"="">
尊嘟假嘟，成都程序員也 996 嗎？ 
<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p>9 月 20 日，上海人工智能實驗室（上海 AI 實驗室）與商湯科技聯合香港中文大學和復旦大學正式<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2Fy2THvSr5LqrLVO17BmmUBA" target="_blank">推出</a>書生·浦語大模型（InternLM）200 億參數版本 InternLM-20B，並在阿里雲魔搭社區（ModelScope）開源首發。同時，書生·浦語面向大模型研發與應用的全鏈條工具鏈全線升級，與 InternLM-20B 一同繼續全面開放，向企業和開發者提供免費商用授權。</p><p>根據介紹，中量級參數的 InternLM-20B 大模型性能先進且應用便捷，以不足三分之一的參數量，達到了當前被視為開源模型標杆的 Llama2-70B 的能力水平。</p><blockquote><p>代碼庫鏈接：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FInternLM%2FInternLM" target="_blank">https://github.com/InternLM/InternLM</a></p><p>魔搭社區鏈接：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmodelscope.cn%2Forganization%2FShanghai_AI_Laboratory" target="_blank">https://modelscope.cn/organization/Shanghai_AI_Laboratory</a></p></blockquote><p><img alt="" height="593" src="https://oscimg.oschina.net/oscnet/up-b7759649dff3f210dcf42d8cc0f3c5f5e4c.png" width="500" referrerpolicy="no-referrer"></p><p>相比於國內社區之前陸續開源的 7B 和 13B 規格的模型，20B 量級模型具備更為強大的綜合能力，在複雜推理和反思能力上尤為突出，因此可為實際應用帶來更有力的性能支持；同時，20B 量級模型可在單卡上進行推理，經過低比特量化後，可運行在單塊消費級 GPU 上，因而在實際應用中更為便捷。</p><p>InternLM-20B 是基於 2.3T token 預訓練語料從頭訓練的中量級語言大模型。相較於 InternLM-7B，訓練語料經過了更高水平的多層次清洗，補充了高知識密度和用於強化理解及推理能力的訓練數據。因此，在考驗語言模型技術水平的理解能力、推理能力、數學能力、編程能力等方面，InternLM-20B 都有顯著提升。</p><p>相比於此前的開源模型，InternLM-20B 的能力優勢主要體現在：</p><ul><li><strong>優異的綜合性能。</strong>InternLM-20B 具備優異的綜合性能，不僅全面領先相近量級的開源模型（包括 Llama-33B、Llama2-13B 以及國內主流的 7B、13B 開源模型），並且以不足三分之一的參數量，測評成績達到了 Llama2-70B 的水平。</li><li><strong>強大的工具調用能力。</strong>InternLM-20B 拓展了模型的能力邊界，實現了大模型與現實場景的有效連接。InternLM-20B 支持數十類插件，上萬個 API 功能，在 ToolBench 評測集上獲得了最佳結果，在與 ChatGPT 的競賽中，勝率達到 63.5%。InternLM-20B 還具備代碼解釋和反思修正能力，為智能體（Agent）的構建提供了良好的技術基礎。</li><li><strong>更長的語境。</strong>通過多階段訓練拓展，InternLM-20B 支持 16K 語境長度，從而更有效地支撐長文理解、長文生成和超長對話。 更安全的價值對齊。相比於之前版本，InternLM-20B 在價值對齊上更加安全可靠。在研發訓練的過程中，研究團隊通過基於 SFT（監督微調）和 RLHF（基於人類反饋的強化學習方式）兩階段價值對齊，以及專家紅隊的對抗訓練，大幅提高其安全性。當用户帶着偏見提問時，模型能夠給出正面引導。</li><li><strong>全線升級的開源工具、數據體系。</strong>書生·浦語開源工具鏈全線升級，形成了更為完善的工具體系，其中包括預訓練框架 InternLM-Train、低成本微調框架 XTuner、部署推理框架 LMDeploy、評測框架 OpenCompass 以及面向場景應用的智能體框架 Lagent。書生·浦語工具鏈將和開源數據平台 OpenDataLab 構成強大的開源工具及數據體系，共同為學術界和產業界提供全鏈條的研發與應用支持。</li></ul><p><span style="background-color:#ffffff; color:rgba(0, 0, 0, 0.9)">基於 OpenCompass 大模型評測平台，研究人員在涵蓋語言、知識、理解、推理和學科能力等五大維度的 50 個主流評測集上，對 InternLM-20B 及相近量級的開源模型進行了全面測試比較。評測結果顯示，InternLM-20B 在全維度上領先於開源 13B 量級模型，平均成績不僅明顯超越 Llama-33B，甚至優於被稱為開源模型的標杆 Llama2-70B。</span></p><p><span style="background-color:#ffffff; color:rgba(0, 0, 0, 0.9)"><img alt="" height="428" src="https://oscimg.oschina.net/oscnet/up-31e53adac9f6d53f50a359e1d2e23f16203.png" width="500" referrerpolicy="no-referrer"></span></p><p><span style="background-color:#ffffff; color:rgba(0, 0, 0, 0.9)"><img alt="" height="237" src="https://oscimg.oschina.net/oscnet/up-98e65baee57fd9e3b3785bf54bba664095a.png" width="300" referrerpolicy="no-referrer"></span></p><p><span style="background-color:#ffffff; color:rgba(0, 0, 0, 0.9)"><img alt="" height="550" src="https://oscimg.oschina.net/oscnet/up-de0a30d7d3375416e6f622754745d6a35e0.jpg" width="300" referrerpolicy="no-referrer"></span></p><p><span style="background-color:#ffffff; color:rgba(0, 0, 0, 0.9)">在清華大學等機構聯合發佈的大模型工具調用評測集 ToolBench 中，InternLM-20B 和 ChatGPT 相比,達到了 63.5% 的勝率，在該榜單上取得了最優結果，表現出強大的工具調用能力。</span></p><p><img height="369" src="https://oscimg.oschina.net/oscnet/up-caee1efd2bde156527d8d5d1f8296d946ac.png" width="500" referrerpolicy="no-referrer">&nbsp;</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 20 Sep 2023 10:21:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/258840</guid>
            <link>https://www.oschina.net/news/258840</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[瀏覽器可直接訪問 Dubbo、gRPC 後端微服務，Dubbo-js 首個 alpha 版本來了！]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><div data-traceid="news_comment_top_ad" data-tracepid="news_comment_top" style="text-align: center;"><a style="color:#A00;font-weight:bold;" href="https://www.oschina.net/question/4489239_2331019" target="_blank">尊嘟假嘟，成都程序員也 996 嗎？ <img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div></div><p style="text-align:justify">基於 Dubbo3 定義的 Triple 協議，你可以輕鬆編寫瀏覽器、gRPC 兼容的 RPC 服務，並讓這些服務同時運行在 HTTP/1 和 HTTP/2 上。Dubbo TypeScript SDK<strong>[1]</strong>支持使用 IDL 或編程語言特有的方式定義服務，並提供一套輕量的 APl 來發布或調用這些服務。</p><p style="text-align:justify">Dubbo-js 已於 9 月份發佈支持 Dubbo3 協議的首個 alpha 版本，它的發佈將有機會徹底改變微服務前後端的架構與通信模式，讓你能直接在瀏覽器頁面或 web 服務器中訪問後端 Dubbo、gRPC 服務。</p><p style="text-align:center"><img src="https://pic2.zhimg.com/80/v2-0ca9d9a8797a894e713b1802de9fd6b1_720w.webp" referrerpolicy="no-referrer"></p><span id="OSC_h3_1"></span><h3>瀏覽器 Web 應用示例</h3><p style="text-align:justify">本示例演示瞭如何使用 dubbo-js 開發運行在瀏覽器上的 web 應用程序，web 頁面將調用 dubbo node.js 開發的後端服務並生成頁面內容。<strong>本示例演示基於 IDL 和非 IDL 兩種編碼模式。</strong></p><p style="text-align:center"><img src="https://pic4.zhimg.com/80/v2-a7e252462c1075a00b8df18dd7c2c097_720w.webp" referrerpolicy="no-referrer"></p><span id="OSC_h3_2"></span><h3>IDL 模式</h3><span id="OSC_h4_3"></span><h4>前置條件</h4><p style="text-align:justify">首先，我們將使用 Vite 來生成我們的前端項目模板，它內置了我們稍後需要的所有功能支持。</p><pre><code>npm create vite@latest -- dubbo-web-example --template react-ts
cd dubbo-web-example
npm install</code></pre><p style="text-align:justify">因為使用 Protocol Buffer 的原因，我們首先需要安裝相關的代碼生成工具，這包括 @bufbuild/protoc-gen-es、@bufbuild/protobuf、@apachedubbo/protoc-gen-apache-dubbo-es、@apachedubbo/dubbo。</p><pre><code>npm install @bufbuild/protoc-gen-es @bufbuild/protobuf @apachedubbo/protoc-gen-apache-dubbo-es @apachedubbo/dubbo</code></pre><span id="OSC_h4_4"></span><h4>使用 Proto 定義服務</h4><p style="text-align:justify">現在，使用 Protocol Buffer (IDL) 來定義一個 Dubbo 服務。</p><p style="text-align:justify">src 下創建 util/proto 目錄，並生成文件。</p><pre><code>mkdir -p src/util/proto &amp;&amp; touch src/util/proto/example.proto</code></pre><p style="text-align:justify">寫入內容：</p><pre><code>syntax = "proto3";

package apache.dubbo.demo.example.v1;

message SayRequest {
  string sentence = 1;
}

message SayResponse {
  string sentence = 1;
}

service ExampleService {
  rpc Say(SayRequest) returns (SayResponse) {}
}</code></pre><p style="text-align:justify">這個文件聲明瞭一個叫做 ExampleService 的服務，為這個服務定義了 Say 方法以及它的請求參數 SayRequest 和返回值 SayResponse。</p><span id="OSC_h4_5"></span><h4>生成代碼</h4><p style="text-align:justify">創建 gen 目錄，作為生成文件放置的目標目錄。</p><pre><code>mkdir -p src/util/gen</code></pre><p style="text-align:justify">運行以下命令，利用 protoc-gen-es、protoc-gen-apache-dubbo-es 等插件在 gen 目錄下生成代碼文件：</p><pre><code>PATH=$PATH:$(pwd)/node_modules/.bin \
  protoc -I src/util/proto \
  --es_out src/util/gen \
  --es_opt target=ts \
  --apache-dubbo-es_out src/util/gen \
  --apache-dubbo-es_opt target=ts \
  example.proto</code></pre><p style="text-align:justify">運行命令後，應該可以在目標目錄中看到以下生成的文件:</p><pre><code>├── src
│   ├── util
│   │   ├── gen
│   │   │   ├── example_dubbo.ts
│   │   │   └── example_pb.ts
│   │   └── proto
│   │       └── example.proto</code></pre><span id="OSC_h4_6"></span><h4>創建 App</h4><p style="text-align:justify">需要先下載 @apachedubbo/dubbo-web。</p><pre><code>npm install @apachedubbo/dubbo-web</code></pre><p style="text-align:justify">現在我們可以從包中導入服務並設置一個客户端。在 App.tsx 中添加以下內容：</p><pre><code>import { useState } from "react";
import "./App.css";

import { createPromiseClient } from "@apachedubbo/dubbo";
import { createDubboTransport } from "@apachedubbo/dubbo-web";

// Import service definition that you want to connect to.
import { ExampleService } from "./util/gen/example_dubbo";

// The transport defines what type of endpoint we're hitting.
// In our example we'll be communicating with a Dubbo endpoint.
const transport = createDubboTransport({
  baseUrl: "http://localhost:8080",
});

// Here we make the client itself, combining the service
// definition with the transport.
const client = createPromiseClient(ExampleService, transport, { serviceGroup: 'dubbo', serviceVersion: '1.0.0' });

function App() {
  const [inputValue, setInputValue] = useState("");
  const [messages, setMessages] = useState&lt;
    {
      fromMe: boolean;
      message: string;
    }[]
  &gt;([]);
  return (
    &lt;&gt;
      &lt;ol&gt;
        {messages.map((msg, index) =&gt; (
          &lt;li key={index}&gt;{`${msg.fromMe ? "ME:" : "Dubbo Server:"} ${msg.message}`}&lt;/li&gt;
        ))}
      &lt;/ol&gt;
      &lt;form
        onSubmit={async (e) =&gt; {
          e.preventDefault();
          // Clear inputValue since the user has submitted.
          setInputValue("");
          // Store the inputValue in the chain of messages and
          // mark this message as coming from "me"
          setMessages((prev) =&gt; [
            ...prev,
            {
              fromMe: true,
              message: inputValue,
            },
          ]);
          const response = await client.say({
            sentence: inputValue,
          });
          setMessages((prev) =&gt; [
            ...prev,
            {
              fromMe: false,
              message: response.sentence,
            },
          ]);
        }}
      &gt;
        &lt;input value={inputValue} onChange={(e) =&gt; setInputValue(e.target.value)} /&gt;
        &lt;button type="submit"&gt;Send&lt;/button&gt;
      &lt;/form&gt;
    &lt;/&gt;
  );
}

export default App;</code></pre><p style="text-align:justify">執行以下命令，即可得到樣例頁面。</p><pre><code>npm run dev</code></pre><span id="OSC_h4_7"></span><h4>啓動 Server</h4><p style="text-align:justify">接下來我們需要啓動 Server，可以使用 Java、Go、Node.js 等 Dubbo 支持的任一語言開發 Server。這裏我們採用 Dubbo 服務嵌入的 Node.js 服務器，具體可參考 Node.js 開發 Dubbo 後端服務<strong>[2]</strong>中的操作步驟。</p><p style="text-align:justify">不過需要注意，我們額外需要修改 Node.js 示例：引入 @fastify/cors 來解決前端請求的跨域問題。</p><pre><code>npm install @fastify/cors</code></pre><p style="text-align:justify">需要在 server.ts 文件下修改。</p><pre><code>...
import cors from "@fastify/cors";

...
async function main() {
  const server = fastify();
  ...
  await server.register(cors, {
    origin: true,
  });
  ...
  await server.listen({ host: "localhost", port: 8080 });
  ...
}

void main();</code></pre><p style="text-align:justify">最後，運行代碼啓動服務。</p><pre><code>npx tsx server.ts</code></pre><span id="OSC_h3_8"></span><h3>無 IDL 模式</h3><p style="text-align:justify">在接下來的版本中，我們將繼續提供無 IDL 模式的通信支持，這樣就可以更方便的訪問無 IDL 的後端服務。在這裏，我們先快速的看一下無 IDL 模式的使用方式。</p><p style="text-align:justify">同樣需要先安裝 @apachedubbo/dubbo、@apachedubbo/dubbo-web。</p><pre><code>npm install @apachedubbo/dubbo @apachedubbo/dubbo-web</code></pre><p style="text-align:justify">現在就可以一個啓動一個客户端，併發起調用了。App.tsx 中的代碼與 IDL 模式基本一致，區別點在於以下內容：</p><pre><code>// ...
// set backend server to connect
const transport = createDubboTransport({
  baseUrl: "http://localhost:8080",
});
// init client
const client = createPromiseClient(transport);

function App() {
  // ...
  // call remote Dubbo service
  const response = await client.call(
    "apache.dubbo.demo.example.v1.ExampleService", 
    "say", 
    {
      sentence: inputValue,
    });
}</code></pre><p style="text-align:justify">執行以下命令，即可得到樣例頁面。</p><pre><code>npm run dev</code></pre><span id="OSC_h3_9"></span><h3>總結</h3><p style="text-align:justify">直接在瀏覽器頁面或 web 服務器中訪問後端 Dubbo RPC 服務！Dubbo Triple 協議升級以及 Dubbo javascript sdk 的發佈，對整個微服務體系是一個非常有力的補充，期待看到它能改變未來整個微服務架構以及前後端通信模式。</p><p style="text-align:justify"><strong>相關鏈接：</strong></p><p style="text-align:justify">[1] Dubbo TypeScript SDK</p><p style="text-align:justify"><u><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fgithub.com%2Fapache%2Fdubbo-js%2F%253Fspm%253Da2c6h.13046898.publish-article.9.15696ffaXgyemr" target="_blank">https://github.com/apache/dubbo-js/</a></em></u></p><p style="text-align:justify">[2] Node.js 開發 Dubbo 後端服務</p><p style="text-align:justify"><u><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fgithub.com%2Fapache%2Fdubbo-js%2Ftree%2Fdubbo3%2Fexample%2Fdubbo-node-example%253Fspm%253Da2c6h.13046898.publish-article.10.15696ffaXgyemr" target="_blank">https://github.com/apache/dubbo-js/tree/dubbo3/example/dubbo-node-example</a></em></u></p><p style="text-align:justify"><em>作者：蔡建懌</em></p><blockquote><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fclick.aliyun.com%2Fm%2F1000373503%2F" target="_blank"><span style="color:#ff9900">點擊立即免費試用雲產品，開啓雲上實踐之旅！</span></a></strong></blockquote><p style="text-align:justify"><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fclick.aliyun.com%2Fm%2F1000380504%2F" target="_blank">原文鏈接</a></strong></p><p style="text-align:justify"><strong>本文為阿里雲原創內容，未經允許不得轉載。</strong></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 20 Sep 2023 08:01:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/yunqi/blog/10112234</guid>
            <link>https://my.oschina.net/yunqi/blog/10112234</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Java/JDK 21 正式發佈！15 個特性一覽]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><div data-traceid="news_comment_top_ad" data-tracepid="news_comment_top" style="text-align: center;"><a style="color:#A00;font-weight:bold;" href="https://www.oschina.net/question/4489239_2331019" target="_blank">尊嘟假嘟，成都程序員也 996 嗎？ <img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div></div><p>JDK 21 已經於 2023 年 9 月 19 日正式發佈。本文總結了 JDK 21 發佈的新特性。</p><h2>發佈版本説明</h2><p>根據發佈的規劃，這次發佈的 JDK 21 將是一個長期支持版（LTS 版）。LTS 版每 2 年發佈一個，上一次長期支持版是 21 年 9 月發佈的 JDK 17。</p><p>本版本是 Java SE 平台 21 版的參考實現，由 Java 社區流程中的<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopenjdk.org%2Fprojects%2Fjdk%2F21%2Fspec" target="_blank">JSR 396</a>指定。</p><h2>安裝包下載</h2><p>主要分為 OpenJDK 版本和 Oracle 版本，下載地址如下：</p><ul><li>OpenJDK 版本：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjdk.java.net%2F21%2F" target="_blank">https://jdk.java.net/21/</a></li><li>Oracle 版本：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.oracle.com%2Fjava%2Ftechnologies%2Fdownloads%2F" target="_blank">https://www.oracle.com/java/technologies/downloads/</a></li></ul><p>上述版本，如果是個人學習用途，則差異不大。但如果是用於商業用途，則需要仔細看好相關的授權。Oracle JDK 商用需要遵循 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.oracle.com%2Fdownloads%2Flicenses%2Fjavase-license1.html" target="_blank">Oracle No-Fee Terms and Conditions (NFTC)</a>協議，而 OpenJDK 根據 GPL v2 許可獲得許可。</p><p>更多有關 Java 的基本知識，可以參閲《<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fitem.jd.com%2F12868796.html" target="_blank">Java 核心編程</a>》這本書，描述的非常詳細。</p><h2>JDK 21 新特性説明</h2><h3>正式穩定功能</h3><h4>JEP 431：序列集合</h4><p>序列集合（Sequenced Collections）在 <code>core-libs/java.util:collections</code> 包中。</p><p>該 JEP 提議引入「一個新的接口族，用於表示集合的概念，這些集合的元素按照預定義的序列或順序排列，它們是作為集合的結構屬性。」這一提案的動機是由於集合框架中缺乏預定義的順序和統一的操作集。</p><h4>JEP 439：分代 ZGC</h4><p>分代 ZGC（Generational ZGC）在 <code>hotspot/gc</code> 包中。</p><p>通過擴展 Z 垃圾回收器（ZGC）來維護年輕對象和年老對象的獨立生成，從而提高應用程序性能。這將使 ZGC 能夠更頻繁地收集年輕對象——這些對象往往英年早逝。</p><h4>JEP 440：記錄模式</h4><p>使用記錄模式（Record Patterns）增強 Java 編程語言，以解構記錄值。可以嵌套記錄模式和類型模式，以實現功能強大、聲明性和可組合形式的數據導航和處理。</p><h4>JEP 441：switch 模式匹配</h4><p>通過 switch 表達式和語句的模式匹配來增強 Java 編程語言。通過將模式匹配擴展到 switch，可以針對多個模式測試表達式，每個模式都有一個特定的操作，從而可以簡潔、安全地表達複雜的面向數據的查詢。</p><h4>JEP 444：虛擬線程</h4><p>將虛擬線程（Virtual Threads）引入 Java 平台。虛擬線程是輕量級線程，可以顯著減少編寫、維護和觀察高吞吐量併發應用程序的工作量。</p><p>詳見<a href="https://my.oschina.net/u/853151/blog/5513698">《Java 下一代高併發技術——虛擬線程（Virtual Threads）》</a>。</p><h4>JEP 449：棄用 Windows 32 位 x86 移植</h4><p>棄用 Windows 32 位 x86 移植，並打算在將來的版本中將其刪除。</p><h4>JEP 451：準備禁止動態加載代理</h4><p>將代理動態加載到正在運行的 JVM 中時發出警告。這些警告旨在讓用户為將來的版本做好準備，該版本默認情況下不允許動態加載代理，以提高默認情況下的完整性。在啓動時加載代理的可服務性工具不會導致在任何版本中發出警告。</p><h4>JEP 452：密鑰封裝機制 API</h4><p>介紹一種用於密鑰封裝機制（Key Encapsulation Mechanism，簡稱 KEM）的 API，這是一種使用公鑰加密來保護對稱密鑰的加密技術。</p><h3>預覽階段功能</h3><h4>JEP 430：字符串模板（預覽）</h4><p>使用字符串模板（String Templates）增強 Java 編程語言。字符串模板通過將文本與嵌入的表達式和模板處理器耦合來生成專門的結果，從而補充 Java 現有的字符串文本和文本塊。這是一個預覽語言功能和 API。</p><h4>JEP 442：外部函數和內存 API（第三次預覽）</h4><p>引入 API，Java 程序可以通過該 API 與 Java 運行時之外的代碼和數據進行互操作。通過有效地調用外部函數（即 JVM 外部的代碼），並通過安全地訪問外部內存（即不受 JVM 管理的內存），API 使 Java 程序能夠調用本機庫並處理本機數據，而不會出現 JNI 的脆弱性和危險性。這是一個預覽 API。</p><h4>JEP 443：未命名模式和變量（預覽）</h4><p>使用未命名模式和未命名變量來增強 Java 語言，未命名模式匹配記錄組件而不説明組件的名稱或類型，未命名變量可以初始化但不使用。兩者都用下劃線字符<code>_</code>表示。這是一個預覽語言功能。</p><h4>JEP 445：未命名類和實例主方法（預覽）</h4><p>發展 Java 語言，使學生無需理解為大型程序設計的語言功能即可編寫第一個程序。學生們不用使用單獨的 Java 方言，就可以為單類程序編寫精簡的聲明，然後隨着技能的發展，無縫地擴展程序，使用更高級的功能。這是一個預覽語言功能。</p><h4>JEP 446：作用域值（預覽）</h4><p>引入作用域值，這些值可以在不使用方法參數的情況下安全有效地共享給方法。它們優先於線程化局部變量，尤其是在使用大量虛擬線程時。這是一個預覽 API。</p><p>實際上，作用域值是一個隱式方法參數。這「就好像」一系列調用中的每個方法都有一個額外的、不可見的參數。沒有任何方法聲明此參數，只有能夠訪問作用域值對象的方法才能訪問其值（數據）。通過作用域值，可以通過一系列中間方法將數據從調用者安全地傳遞給遙遠的被調用者，這些中間方法不聲明數據的參數，也無法訪問數據。</p><h4>JEP 453：結構化併發（預覽）</h4><p>通過引入用於結構化併發（Structured Concurrency）的 API 來簡化併發編程。結構化併發將在不同線程中運行的相關任務組視為單個工作單元，從而簡化錯誤處理和消除，提高可靠性，並增強可觀察性。這是一個預覽 API。</p><h3>孵化階段功能</h3><h4>JEP 448：Vector API（孵化器第六階段）</h4><p>引入 API 來表示向量計算，這些向量計算在運行時可靠地編譯為支持的 CPU 架構上的最佳向量指令，從而實現優於等效標量計算的性能。</p><h2>參考引用</h2><ul><li>本文同步至: <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwaylau.com%2Fjdk-21-released%2F" target="_blank">https://waylau.com/jdk-21-released/</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwaylau.com%2Fjdk-17-released%2F" target="_blank">https://waylau.com/jdk-17-released/</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwaylau.com%2Fjdk-16-released%2F" target="_blank">https://waylau.com/jdk-16-released/</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwaylau.com%2Fjdk-15-released%2F" target="_blank">https://waylau.com/jdk-15-released/</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwaylau.com%2Fjdk-14-released%2F" target="_blank">https://waylau.com/jdk-14-released/</a></li><li>《<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fitem.jd.com%2F12868796.html" target="_blank">Java 核心編程</a>》</li><li>開源項目「現代 Java 案例大全」 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fwaylau%2Fmodern-java-demos" target="_blank">https://github.com/waylau/modern-java-demos</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Wed, 20 Sep 2023 07:08:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/waylau/blog/10112170</guid>
            <link>https://my.oschina.net/waylau/blog/10112170</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[英偉達開源內核驅動 Nouveau 維護者 Ben Skeggs 辭職]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://www.oschina.net/question/4489239_2331019" _blank"="">
尊嘟假嘟，成都程序員也 996 嗎？ 
<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p>英偉達 GPU 內核開源驅動 Nouveau 維護者 Ben Skeggs 在郵件列表宣佈已從 Red Hat <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flists.freedesktop.org%2Farchives%2Fnouveau%2F2023-September%2F043241.html" target="_blank">辭職</a>，以及<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flists.freedesktop.org%2Farchives%2Fnouveau%2F2023-September%2F043239.html" target="_blank">退出</a> Nouveau 開發。</p><p><img src="https://static.oschina.net/uploads/space/2023/0920/144359_Q9l6_2720166.png" referrerpolicy="no-referrer"></p><p><img src="https://static.oschina.net/uploads/space/2023/0920/142748_HwYo_2720166.png" referrerpolicy="no-referrer"></p><p>Ben Skeggs 此前一直為 Red Hat 工作，他從 2008 年起就擔任 Nouveau 的維護者。他最後遞交的補丁為內核驅動加入了利用英偉達 GPU 系統處理器 GSP 固件改進 RTX 20/30 系列顯卡的硬件支持，加入對 RTX 40 Ada Lovelace GPU 的初步支持。</p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.phoronix.com%2Fnews%2FNouveau-Maintainer-Resigns" target="_blank">據介紹</a>，Ben Skeggs 在很大程度上主導了內核驅動程序部分，他在 Red Hat 工作期間一直是 Nouveau 內核驅動程序的第一貢獻者。</p><p>Ben Skeggs 表示，選擇辭去維護者職務是他多年來一直在考慮的個人決定。隨着 GSP-RM 極大地簡化了對未來硬件的支持，以及圍繞 NVK 建立的社區，目前一切都掌握在良好的環境中，所以自己時候去探索其他新事物了。</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 20 Sep 2023 06:50:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/258796/nouveau-maintainer-resigns</guid>
            <link>https://www.oschina.net/news/258796/nouveau-maintainer-resigns</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[喜報！CNCF 基金會宣佈 KCL 成為沙盒項目！]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://www.oschina.net/question/4489239_2331019" _blank"="">
尊嘟假嘟，成都程序員也 996 嗎？ 
<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p style="text-align:center"><img height="238" src="https://oscimg.oschina.net/oscnet/up-a41a03375ca9d8dded0e62d6f4d2c1e9398.png" width="424" referrerpolicy="no-referrer"></p><p><strong>2023 年 9 月 20&nbsp;日，KCL 項目通過了全球頂級開源基金會雲原生計算基金會（CNCF）技術監督委員會評定，正式成為 CNCF 沙箱項目。</strong></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">這意味着 KCL 得到了雲原生開源社區的認可，保障了項目的中立性，有利於開發者、合作伙伴等共同參與項目建設，協作共贏，併為雲原生應用交付帶來動態配置管理和自動化能力邁出了重要一步！</p><ul><li><p><em><span style="color:#00c9ff">項目地址：https://github.com/kcl-lang/kcl</span></em></p></li><li><p><span style="color:#00c9ff"><em>項目官網：https://kcl-lang.io</em></span></p></li></ul><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">通過進入 CNCF 沙箱，KCL 社區將更多吸引更多開發者和用户參與共建，進一步推動項目在雲原生業務場景的成熟應用，此外加入 CNCF 將為 KCL 提供一個增強的協作和創新平台。它提供了與處於雲原生技術前沿的多元化開發者、組織和行業專家社區進行交流的機會。我們期待與其他 CNCF 項目進行更多合作，貢獻我們的技術專業知識，並探索更多 CNCF 項目集成的可能性。</p><p style="color:#000000; margin-left:0; margin-right:0; text-align:left">&nbsp;</p><p style="margin-left:0; margin-right:0; text-align:center"><span style="color:#149fe3"><strong><span style="color:#000000"><span style="background-color:#ffffff; color:#149fe3"><strong>｜什麼是 CNCF｜</strong></span></span></strong></span></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">CNCF，全稱 Cloud Native Computing Foundation（雲原生計算基金會），是 Linux 基金會旗下的子基金會。CNCF 致力於為雲原生軟件構建可持續生態系統，涉及領域包括存儲、計算、編排、調度、CI/CD、DevOps、服務治理、服務網關等。</p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify"><em>比如 Kubernetes 便是 CNCF 最具代表性的項目之一。</em></p><p style="color:#000000; margin-left:0px; margin-right:0px; text-align:center"><strong><span style="color:#000000"><span style="color:#149fe3"><strong>｜什麼是 CNCF 沙盒項目｜</strong></span></span></strong></p><p style="margin-left:0; margin-right:0; text-align:center"><img alt="cncf-sandbox-logo" src="https://kcl-lang.io/zh-CN/assets/images/cncf-sandbox-logo-b53944d3e90e9c2789be2eebcbd36e82.png" referrerpolicy="no-referrer"></p><p style="text-align:center"><img height="243" src="https://oscimg.oschina.net/oscnet/up-6af37f09c1071fb9cf6ac833c05da223186.png" width="1080" referrerpolicy="no-referrer"></p><p>&nbsp;</p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">CNCF 社區將項目分為沙箱項目（Sandbox）、孵化項目（Incubating）、畢業項目（Graduated）。著名的畢業項目有：Kubernetes、Prometheus、Istio、ETCD、Containerd、ArgoCD 和 Helm 等。完整的畢業和孵化項目列表查看地址：</p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify"><em><span style="color:#00c9ff">https://www.cncf.io/projects/</span></em></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">Sandbox 是 CNCF 創建的，旨在為開源項目提供一個有益的、中立的家園，以促進開源項目的合作與開發。入選沙箱的項目，是被 CNCF TOC 認可的，並值得進行實驗和開發的潛力項目。</p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">Sandbox 對應的是 CNCF 社區早期項目，列表為：<span style="color:#00c9ff"><em>https://www.cncf.io/sandbox-projects/</em></span>。進入 Sandbox 需要 66% 以上的 TOC（技術委員會）成員贊成，即全部 11 人<span>&nbsp;</span><span style="color:#00c9ff"><em>https://github.com/cncf/toc#members</em></span><span>&nbsp;</span>中的 8 人投贊成票。</p><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="margin-left:0; margin-right:0; text-align:center"><strong>｜什麼是 KCL｜</strong></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify"><span style="background-color:#ffffff; color:#000000">KCL 是一個開源的基於約束的記錄及函數語言，期望通過成熟的編程語言技術和實踐來改進對大量繁雜配置比如雲原生 Kubernetes 配置場景的編寫，致力於圍繞配置的模塊化、擴展性和穩定性，打造更簡單的邏輯編寫體驗，構建更簡單的自動化和生態集成路徑。</span></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">項目主要里程碑如下：</p><ul><li><p>2022 年 5 月，KCL 正式開源</p></li><li><p>2023 年 6 月，KCL 正式成為 CNCF Landscape 項目</p></li><li><p>2023 年 9 月，KCL 由 CNCF 應用交付 TAG 進行審核並通過 TOC 投票，順利成為 CNCF Sandbox 項目 -&nbsp;<span style="color:#00c9ff"><em>https://github.com/cncf/sandbox/issues/48</em></span></p><p style="margin-left:0; margin-right:0">&nbsp;</p></li></ul><p style="text-align:center"><span style="color:#149fe3"><strong>｜為什麼需要 KCL｜</strong></span></p><p><span style="color:#149fe3"><span style="background-color:#ffffff; color:#000000">正如記錄音樂有五線譜，存儲時間序列數據有時序數據庫一樣，在雲原生配置和自動化的特定問題域內，我們使用專用配置和策略語言用於編寫和管理規模化複雜配置及策略。不同於混合編寫範式、混合工程能力的高級通用語言，專用語言的核心邏輯是以收斂的有限的語法、語義集合解決領域問題近乎無限的變化和複雜性，將複雜配置和策略編寫思路和方式沉澱到語言特性中。</span></span></p><p>&nbsp;</p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">此外，KCL 期望通過更現代化的聲明式配置語言和工具，<strong>在輕量級客户端<strong>雲原生</strong>動態配置領域</strong>填補配置語言及工具的空白並解決如下問題：</p><ul><li><p><strong>維度爆炸</strong>: 大多數靜態配置如雲原生領域的 Kubernetes YAML 配置需要為每個環境單獨進行配置；在最糟糕的情況下，它可能引入涉及環境交叉鏈接的難以調試的錯誤，穩定性和擴展性都較差。</p></li><li><p><strong>配置漂移</strong>: 對於不同環境的靜態管理應用程序和基礎設施配置的方式，往往沒有標準的方式去管理這些動態的不同環境的配置，採用非標準化的方法比如腳本和膠水代碼的拼盤，會導致複雜度呈指數增長，並導致配置漂移。</p></li><li><p><strong>認知負擔:&nbsp;</strong><span style="background-color:#ffffff; color:#010101">Kubernetes 等作為構建</span><span style="background-color:#ffffff; color:#010101">平台的平台技術手段在底層統一基礎架構細節方面出色，但是缺乏更上層的應用軟件交付抽象，對於普通開發者認知負擔較高，影響了更上層應用開發者的軟件交付體驗。</span></p><p>&nbsp;</p></li></ul><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">針對如上問題，KCL 期望提供如下能力:</p><ul><li><p>通過<strong>代碼抽象</strong>等手段屏蔽基礎設施和平台的細節和複雜性，降低研發者<strong>認知負擔</strong></p></li><li><p><strong>編輯</strong>和<strong>校驗</strong>已有的存量配置或模版，直接解決雲原生小配置場景問題如 Helm Chart 配置硬編碼問題，但遠不止如此</p></li><li><p>通過配置語言無副作用地<strong>管理跨團隊的大規模配置數據</strong>，提升團隊協作效率</p><p>&nbsp;</p></li></ul><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">具體來説，KCL 可以</p><ul><li><p>在代碼層面提升<strong>配置語義驗證</strong>的能力，比如 Schema 定義、字段可選/必選、類型、範圍等配置檢查校驗能力</p></li><li><p><span style="background-color:#ffffff; color:#010101">提供</span><strong>配置分塊編寫、組合和抽象的能力</strong><span style="background-color:#ffffff; color:#010101">，比如結構定義、結構繼承、約束定義和配置策略合併等能力</span></p></li><li><p>用<strong>現代編程語言的方式</strong>以<strong>編寫代碼</strong>的方式提升配置的靈活度，比如條件語句、循環、函數、包管理等特性提升配置重用的能力</p></li><li><p>提供<strong>完備的工具鏈支持</strong>，豐富的 IDE 插件、語言和生態工具鏈支持用以降低上手門檻，提升使用體驗</p></li><li><p>通過<strong>包管理工具</strong>&nbsp;和&nbsp;<strong>OCI Registry</strong>&nbsp;使得配置以更簡單的方式在不同團隊/角色之間分享，傳播和交付</p></li><li><p>提供<strong>高性能</strong>的編譯器滿足規模化配置場景訴求，比如滿足<span style="color:#000000">由一份基線配置根據部署上下文生成不同環境不同拓撲的配置的渲染性能以及配置自動化修改性能訴求</span></p></li><li><p>通過<strong>多語言 SDK</strong>，<strong>KCL 語言插件</strong>等手段提升其<strong>自動化</strong>集成能力，在發揮配置及策略編寫價值的同時顯著降低 KCL 的學習成本<img src="https://kcl-lang.io/zh-CN/assets/images/kcl-overview-315e5b285928477465eb35cd948465b8.png" referrerpolicy="no-referrer"></p></li></ul><p style="text-align:center"><img height="419" src="https://oscimg.oschina.net/oscnet/up-14f88d56dc509bac9692814321dfe59bc98.png" width="702" referrerpolicy="no-referrer"></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">除了語言自身，KCL 還提供了許多額外的工具如格式化，測試、文檔等工具幫助您使用、理解和檢查編寫的配置或策略；通過 VS Code 等 IDE 插件，包管理工具和 Playground 降低配置編寫和分享的成本；通過 Rust, Go, 和 Python 多語言 SDK 自動化地管理和執行配置。</p><p>&nbsp;</p><p style="color:#000000; margin-left:0; margin-right:0; text-align:center"><strong>｜KCL 能做什麼｜</strong></p><h3>動態配置管理<img alt="standalone-kcl-form" src="https://kcl-lang.io/zh-CN/assets/images/standalone-kcl-form-499fd62a1d02c6c23b7ed8d4914c455b.png" referrerpolicy="no-referrer"></h3><p style="text-align:center"><img height="1194" src="https://oscimg.oschina.net/oscnet/up-aed023a32ce859b08a2a646d966823394de.png" width="2252" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0; text-align:justify">&nbsp;</p><p style="margin-left:0; margin-right:0; text-align:justify"><span style="background-color:#ffffff; color:#000000">作為一種配置語言，KCL 為應用程序和平台開發人員/SRE 提供的最重要的功能是動態配置管理。通過代碼抽象，我們可以構建以應用為中心的模型屏蔽複雜的基礎設施和平台概念，為開發人員提供一個以應用程序為中心且易於理解的界面。此外，KCL 還允許平台人員快速擴展和定義自己的模型，並且這些模型可以通過 OCI 註冊表進行分享和複用。</span></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:center"><img alt="krm-kcl-form" src="https://kcl-lang.io/zh-CN/assets/images/krm-kcl-form-3e0ac516e88e65ac80c211f625bc1f34.png" referrerpolicy="no-referrer"></p><p style="text-align:center"><img height="1076" src="https://oscimg.oschina.net/oscnet/up-b807f87f96d5eaddb0d1e2143b8f6c2ddae.png" width="2166" referrerpolicy="no-referrer"></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:left">&nbsp;</p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify"><span style="background-color:#ffffff; color:#000000">此外，KCL 還支持與 Kubernetes Resource Model (KRM) 規範直接集成，KRM KCL 是一個通用的配置模型規範，用於描述和管理各種雲原生資源，如容器、Pod、服務的配置操作和抽象等。KRM KCL 規範提供了一種統一的方式來定義和管理這些資源，使得它們可以在不同的環境中進行移植和複用。它建立在一個完全開放的 Kubernetes 世界當中，幾乎不與任何編排/引擎工具或者 Kubernetes 控制器綁定，它在關注點分離的基礎上允許平台人員擴展自己的抽象，配置編輯和驗證邏輯，並提供一個開發者友好的配置管理界面。</span></p><h3>GitOps 集成</h3><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify"><img alt="gitops" src="https://kcl-lang.io/zh-CN/assets/images/gitops-bbba7c639b8c999d6cbc87d8f1c2cc15.png" referrerpolicy="no-referrer"></p><p style="text-align:center"><img height="1018" src="https://oscimg.oschina.net/oscnet/up-3d1eee757adb63965049e779673d57f60e2.png" width="2182" referrerpolicy="no-referrer"></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:left">&nbsp;</p><p style="margin-left:0; margin-right:0; text-align:justify"><span style="background-color:#ffffff; color:#000000">無論是使用獨立的 KCL 還是 KRM KCL 配置形式，我們都支持 KCL 與各種以及 CI/CD 和 GitOps 工具的集成，KCL 允許開發人員以聲明式的方式定義應用程序所需的資源，通過將 KCL 和 GitOps 工具相結合可以幫助我們更好地實現基礎設施即代碼（IaC），提高部署效率，簡化應用程序的配置管理。</span></p><p style="margin-left:0; margin-right:0; text-align:justify"><span style="background-color:#ffffff; color:#000000">使用 GitOps，開發人員和運維團隊可以通過分別修改應用和配置代碼來管理應用程序的部署，GitOps 工具鏈可以基於 KCL 的自動化能力實現對配置的自動更改，從而實現持續部署並確保一致性。如果出現問題，可以使用 GitOps 工具鏈快速回滾。</span></p><p style="margin-left:0; margin-right:0; text-align:center"><span style="color:#1c1e21"><strong>｜生態集成｜</strong></span></p><p style="margin-left:0; margin-right:0; text-align:center"><img alt="integration" src="https://kcl-lang.io/zh-CN/assets/images/integration-e4e36aeb48fcc6de8aae0c00e5070723.png" referrerpolicy="no-referrer"></p><p style="text-align:center"><img height="1048" src="https://oscimg.oschina.net/oscnet/up-0fc196549ec403da19cd3616f384311b5c4.png" width="2192" referrerpolicy="no-referrer"></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">除了與 ArgoCD 等 GitOps 自動化工具進行集成，作為 CNCF 的項目，KCL 還與 CNCF 其他眾多生態項目進行了集成，比如<span style="background-color:#ffffff; color:#010101">為現有的 CNCF 生態配置管理工具項目如 Helm、Kustomize、kpt 等提供 KCL 插件，在運行時提供 KCL Kubernetes Operator，以滿足不同場景的配置管理需求等。此外我們還提供如下集成支持：</span></p><ul><li><p><strong>多語言支持</strong>：我們提供了多語言 SDK，幫助用户以不同的語言操作 KCL，並將其集成到自己的應用程序中。</p></li><li><p><strong>包管理支持</strong>：我們提供了 KPM 包管理工具可以將 KCL 配置通過 docker hub, GitHub 容器註冊表進行分發和複用。</p></li><li><p><strong>Schema 生態支持</strong>：我們支持其他生態系統的 Schema 一鍵遷移到 KCL Schema，如 Go/Rust 結構定義、JsonSchema、Protobuf、OpenAPI、Terraform Provider Schema 等。</p><p>&nbsp;</p></li></ul><p style="margin-left:0; margin-right:0; text-align:center"><strong>｜落地實踐｜</strong><img alt="practice-krm-kcl" src="https://kcl-lang.io/zh-CN/assets/images/practice-krm-kcl-1ee09831b8dc50884175002184e44063.png" referrerpolicy="no-referrer"></p><p style="text-align:center"><img height="1040" src="https://oscimg.oschina.net/oscnet/up-7d596c604743a5db35c79b956f46e24de48.png" width="3538" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0; text-align:justify"><span style="background-color:#ffffff; color:#000000">首先，KCL 作為雲原生領域內的一個小語言，它可以直接被用於解決場景中簡單的小問題，如通過 KCL 模型直接為 Kubernetes 資源注入環境變量等配置而不是編寫腳本，通過 KCL 模型和 Helm KCL 插件無侵入處理 Helm Chart 的硬編碼配置而不是 Fork Helm Chart 直接修改等。</span></p><p style="margin-left:0; margin-right:0; text-align:center"><img alt="practice-konfig-gitops" src="https://kcl-lang.io/zh-CN/assets/images/practice-konfig-gitops-32092b98b555d3597ce893c7a74eca5b.png" referrerpolicy="no-referrer"></p><p style="text-align:center"><img height="892" src="https://oscimg.oschina.net/oscnet/up-3d8b4753e0110a53091fd663052e661618c.png" width="1812" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0; text-align:justify"><span style="background-color:#ffffff; color:#000000">其次，KCL 也可以被用於企業內部與各種 CI/CD 和應用配置交付引擎比如 KusionStack 相配合，實現關注點分離、以應用為中心的可編程模型界面和 GitOps 流程，以簡化當今混合多雲環境中規模化應用的部署和運維操作，提升發佈運維效率和開發者體驗。</span></p><p style="margin-left:0; margin-right:0; text-align:justify"><span style="background-color:#ffffff; color:#000000">當然，KCL 能夠解決的問題和實踐的場景遠不止如此，我們會陸續分享社區中採用者的最佳實踐，也歡迎大家加入我們的社區進行進一步交流和討論 ❤️。<em>https://github.com/kcl-lang/community</em></span></p><p style="margin-left:0; margin-right:0; text-align:justify">&nbsp;</p><p style="margin-left:0; margin-right:0; text-align:center"><strong>｜社區動態｜</strong></p><p style="margin-left:0; margin-right:0; text-align:center"><img alt="community" src="https://kcl-lang.io/zh-CN/assets/images/community-07fc26fccb17f189e8cbf91ef011486a.png" referrerpolicy="no-referrer"></p><p style="text-align:center"><img height="1092" src="https://oscimg.oschina.net/oscnet/up-18bb238df61c66725265bdbb393c4b67918.png" width="2166" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="margin-left:0; margin-right:0"><span style="background-color:#ffffff; color:#000000">在 KCL 開源短短的這一年裏，我們發佈了許多版本，並與全世界許多貢獻者和維護者合作構建了 KCL 社區，並得到了一些採用者比如有贊和華為等公司的認可，通過加入 CNCF，我們的目標是提高項目的知名度並促進社區採用和參與，因為強大且知名的基金會組織對於推動語言生態系統的發展至關重要。</span></p><p style="margin-left:0; margin-right:0"><span style="background-color:#ffffff; color:#000000">此外，我們在開源社區也收穫了來自全世界包括北美、歐洲、澳大利亞和台灣各地小夥伴的認可，感謝一路陪伴 KCL 走來的各位用户和社區研發者，同時也歡迎更多的小夥伴加入到我們的社區一起共建 ❤️</span></p><p style="margin-left:0; margin-right:0; text-align:center">&nbsp;</p><p style="text-align:center"><img height="467" src="https://oscimg.oschina.net/oscnet/up-1fc2d01dcb1f21fb82ecdfa27de411b1019.png" width="1080" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0; text-align:center">&nbsp;</p><p style="margin-left:0; margin-right:0; text-align:center"><strong>｜結語｜</strong></p><p style="margin-left:0; margin-right:0; text-align:justify"><span style="background-color:#ffffff; color:#000000">對 KCL 來説，加入 CNCF 並不代表成功，它意味着一個新的開始，我們將和社區的小夥伴們一起努力打造更好的 KCL 語言、工具鏈和 IDE 體驗！最後，也歡迎大家加入我們的社區進行交流和貢獻 👏👏👏</span></p><p style="margin-left:0; margin-right:0; text-align:justify">&nbsp;</p><p style="margin-left:0; margin-right:0; text-align:center"><span style="background-color:#ffffff; color:#000000"><strong>｜其他資源｜</strong></span></p><ul><li><p><span style="color:#149fe3"><em><span>KCL 網站</span></em></span><span style="color:#149fe3"><em><span style="color:#149fe3">:</span></em><em><span style="color:#149fe3">&nbsp;<span style="color:#149fe3">https://kcl-lang.io/</span></span></em></span></p></li><li><p><span style="color:#149fe3"><em><span>KusionStack 網站:&nbsp;</span></em></span><span style="color:#149fe3"><em><span style="color:#149fe3">https://kusionstack.io/</span></em></span></p><p>&nbsp;</p></li><li><p><span style="color:#3498db"><em>KCL 社區: https://github.com/kcl-lang/community</em></span></p></li><li><p><span style="color:#149fe3"><em>KCL 2023 路線規劃: https://kcl-lang.io/docs/community/release-policy/roadmap</em></span></p></li><li><p><span style="color:#149fe3"><em>KCL GitHub Issues: https://github.com/kcl-lang/kcl/issues</em></span></p></li><li><p><span style="color:#149fe3"><em>KCL GitHub Discussion: https://github.com/orgs/kcl-lang/discussions</em></span></p></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Wed, 20 Sep 2023 05:53:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/258784/kcl-cncf-sanbox</guid>
            <link>https://www.oschina.net/news/258784/kcl-cncf-sanbox</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Linux 基金會分叉 Terraform，正式推出 OpenTofu]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://www.oschina.net/question/4489239_2331019" _blank"="">
尊嘟假嘟，成都程序員也 996 嗎？ 
<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p>Linux 基金會宣佈<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.linuxfoundation.org%2Fpress%2Fannouncing-opentofu" target="_blank">推出 OpenTofu</a>，這是一個 Terraform 的開源替代方案，並且分叉自 Terraform。OpenTofu 原名 OpenTF，為所有人提供了一個在中立治理模式下的可靠的開源替代方案。</p><p><img height="946" src="https://static.oschina.net/uploads/space/2023/0920/193044_nQSk_3820517.png" width="1716" referrerpolicy="no-referrer"></p><p>Terraform 是 HashiCorp 開源的一個安全和高效的用來構建、更改和合並基礎設施的工具。Terraform 可管理已有的流行的服務，並提供自定義解決方案。它在簡化雲環境的基礎設施管理方面起到了關鍵作用，但近期 Terraform 將許可證從 MPLv2.0 更改為「非開源許可」 BSLv1.1（商業源許可證），引發了開源社區反彈。這一變化威脅到了過去 9 年圍繞 Terraform 建立的整個社區和生態。</p><p>當時 OpenTF 社區發起宣言，呼籲 HashiCorp 讓 Terraform 重返社區，將開源協議恢復，如果拒絕，社區將分叉 Terraform。這個宣言獲得了 35k+ star。</p><ul><li>詳情可以查看往期報導：<a href="https://www.oschina.net/news/255700/opentf-fork-terraform">https://www.oschina.net/news/255700/opentf-fork-terraform</a></li></ul><p><img height="976" src="https://static.oschina.net/uploads/space/2023/0920/192923_Hhsl_3820517.png" width="1832" referrerpolicy="no-referrer"></p><p>如今正式推出 OpenTofu，並得到了「<span style="color:#000000">Harness、Gruntwork、Spacelift、env0、Scalr、Digger、Terrateam、Massdriver、Terramate 等行業領導者的廣泛支持，OpenTofu 已經收到了來自 140 多個組織和 600 多個個人的正式支持。</span>」</p><p><span style="color:#000000">「我們相信，現代互聯網的基本構建模塊——如 Linux、Kubernetes 和 Terraform 等工具——必須是真正開源的，" Gruntwork 的聯合創始人兼首席執行官，以及 OpenTofu 創始團隊成員 Yevgeniy (Jim) Brikman 説。"這是確保我們的行業建立在堅實且可預測的基礎之上的唯一方式。這就是為什麼我們非常高興 OpenTofu 現在是 Linux Foundation 的一部分：將這個項目交給一個基金會，而不是一家公司，意味着 OpenTofu 將由社區驅動並且始終是真正開源的。」</span></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 19 Sep 2023 11:31:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/258846/linux-foundation-announcing-opentofu</guid>
            <link>https://www.oschina.net/news/258846/linux-foundation-announcing-opentofu</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[程序員空閒時間應該繼續卷技術，還是找其他副業？]]>
            </title>
            <description>
                <![CDATA[<h1 class="header article-title"><a href="https://www.oschina.net/question/2720166_2331049">程序員空閒時間應該繼續卷技術，還是找其他副業？</a></h1><div class="extra ui horizontal list meta-wrap"><div class="item"><a href="https://my.oschina.net/hardbone" class="__user"><span>局</span></a> 發佈於，昨天 15:34
                    </div><div class="item">閲讀 2K+</div><div class="item collect-btn " data-id="2331049" data-user-id="2720166" data-obj-type="2" data-max="99" data-tag-required="" data-current-user-id="" data-recommend-tags=""><i class="star outline icon"></i> 收藏 <span data-collect-count="" data-id="2331049" data-obj-type="2">2</span></div><div class="item comment-count"><a href="https://www.oschina.net/question/2720166_2331049#comments" class="normal"><i class="comment outline icon"></i> 評論 <span data-article-reply-count="">9</span></a></div></div><div class="content" id="articleContent"><p class="ad-wrap"><a data-traceid="question_detail_above_text_link_ad" data-tracepid="question_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://www.oschina.net/question/4489239_2331019" target="_blank">尊嘟假嘟，成都程序員也 996 嗎？&gt;&gt;&gt; <img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></p><p>最近幾年經濟下行，企業數量鋭減，資本保守的情況下，互聯網行業人才飽和，就業難度越來越大。對於普通的程序員來説，應該利用有限時間繼續卷技術還是去找其他可能的副業。</p></div><div class="poll-wrap"></div><div class="additional-remarks"></div><div class="ui basic center aligned segment action"><div class="ui big buttons"><a class="ui basic button collect-btn hover" data-id="2331049" data-user-id="2720166" data-obj-type="2" data-max="99" data-tag-required="" data-current-user-id="" data-recommend-tags=""><i class="star outline icon"></i>收藏 (<span data-collect-count="" data-id="2331049" data-obj-type="2">2</span>)</a><div class="ui basic dropdown share button osc-share dropdown-share" data-tag="share-question"><i class="share icon"></i><span>分享</span><div class="menu"><a class="item" data-platform="weibo" data-value="weibo"><i class="weibo icon"></i>微博</a><a class="item" data-platform="qq" data-value="qq"><i class="qq icon"></i>QQ</a><a class="item" data-platform="wechat" data-value="wechat"><i class="weixin icon"></i>微信</a></div></div></div><div class="ui basic segment"><a class="ban" ban-report="" data-id="2331049" data-obj-type="2" data-url="https://www.oschina.net/question/2720166_2331049"><i class="flag red icon"></i>舉報</a></div></div>
            ]]>
            </description>
            <pubDate>Tue, 19 Sep 2023 07:35:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/question/2720166_2331049</guid>
            <link>https://www.oschina.net/question/2720166_2331049</link>
        </item>
        <item>
            <title>
                <![CDATA[Windows 「畫圖」應用支持圖層和透明度]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://www.oschina.net/question/4489239_2331019" _blank"="">
尊嘟假嘟，成都程序員也 996 嗎？ 
<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p>微軟於 9 月 19 日向 Windows 預覽體驗通道的部分用户 (Dev &amp; Canary) 推送新版畫圖應用，版本號為 v11.2308.18.0。</p><p>該版本畫圖支持圖層功能，用户可以在畫布上添加、刪除和管理圖層，藉助圖層實現形狀、文本和其他圖像元素堆疊，創造出更為複雜的圖像內容。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-8ebce4495505d89a69e4bf953ca061713f3.png" referrerpolicy="no-referrer"></p><p><em>▲ 通過工具欄中的新圖層按鈕打開側面板，給畫布添加圖層，或更改圖層順序</em></p><p>此外新版畫圖應用還引入了圖像透明度支持，允許用户打開、保存透明背景的 PNG 文件，在編輯 PNG 文件時畫布也會讓透明背景突出顯示。</p><p>微軟稱用户可以打開和保存透明 PNG，在畫布上擦除內容將是真的刪除掉內容，而不是塗成白色。透明度支持也可以和圖層功能配合使用。如果有多個圖層，擦除上一個圖層中的內容將會顯示下一個圖層中的內容。</p><p><img height="1403" src="https://static.oschina.net/uploads/space/2023/0920/112535_rsxa_2720166.gif" width="2063" referrerpolicy="no-referrer"></p><p>來源：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblogs.windows.com%2Fwindows-insider%2F2023%2F09%2F18%2Fpaint-app-update-adding-support-for-layers-and-transparency-begins-rolling-out-to-windows-insiders%2F" target="_blank">Windows Blog</a></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 19 Sep 2023 03:28:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/258765/paint-app-adding-support-for-layers-and-transparency</guid>
            <link>https://www.oschina.net/news/258765/paint-app-adding-support-for-layers-and-transparency</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[孟晚舟最新演講：華為將全面智能化]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://www.oschina.net/question/4489239_2331019" _blank"="">
尊嘟假嘟，成都程序員也 996 嗎？ 
<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p>華為副董事長、輪值董事長、CFO 孟晚舟在華為全聯接大會上<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FTJxXTT1gdEICdoGqDb1BYw" target="_blank">發表</a>主題演講時，就算力、人工智能、華為將全面智能化戰略以及技術創新等進行了全面分享。</p><p>孟晚舟在會上提出了全面智能化（All Intelligence）戰略；該戰略的目標旨在速千行萬業的智能化轉型。她表示，全面智能化首先要讓所有的對象可聯接。這不僅僅是物理實體的，也包括邏輯的、虛擬的；這不僅僅包括數字化的設備，也包括傳統的終端和裝置；這不僅僅要使數據上得來，也包括意圖下得去。</p><p>其次，要讓所有應用可模型。通過大模型範式，讓智能應用快速惠及每個人、每個家庭，以及每個組織。第三，要讓所有的決策可計算。以算力的無所不在，加速智能的無所不及，並且讓數據在算力中不斷地釋放潛力。</p><p><img alt="" height="889" src="https://oscimg.oschina.net/oscnet/up-7ff0cc42e3cd78a5b0e9e8eac0a302010db.jpg" width="500" referrerpolicy="no-referrer"></p><p>孟晚舟認為，人工智能的發展，算力是核心動力。華為致力於打造中國堅實的算力底座，為世界構建第二選擇。該公司將充分發揮在計算、存儲、網絡、能源等領域的綜合優勢，改變傳統的服務器堆疊模式，以系統架構的創新思路，着力打造 AI 集羣，實現算力、運力、存力的一體化設計，突破算力瓶頸，提供可持續的澎湃算力。</p><p>大模型方面，華為將持續提升通用大模型的能力，做好工程化工具，讓客户和夥伴可以更便捷、更高效地調用模型。通過算力底座、AI 平台、開發工具的開放，支持每個組織使用自己的數據訓練出自己的大模型，讓每個行業用自己的專業知識發展出自己的行業大模型。</p><p>孟晚舟還宣佈正式發佈行業智能化參考架構。「我想特別強調的是，這不是一個封閉的架構，這也不是華為自己的舞台。華為將聚焦在自己所擅長的產品和技術領域，同時以開放的生態，聚合夥伴和開發者。」</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 19 Sep 2023 02:34:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/258889</guid>
            <link>https://www.oschina.net/news/258889</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[360 智腦大模型面向公眾開放：千億參數規模，十大核心能力]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://www.oschina.net/question/4489239_2331019" _blank"="">
尊嘟假嘟，成都程序員也 996 嗎？ 
<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p>360 公司官方今日宣佈，<strong>360 智腦大模型全面接入 360 全家桶</strong>，正式面向公眾開放。</p><ul><li><strong>360 智腦大模型全景</strong></li></ul><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-c981302081687161440eb3c37057f2072b9.png" referrerpolicy="no-referrer"></p><p>用户可通過&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fai.360.com%2F" target="_blank">ai.360.com</a>&nbsp;一站式登錄體驗 360 智腦 App、360 搜索、360 安全瀏覽器、LoRA360、AI 數字員工等大模型服務。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-bae7814fca442037f4c1b27f7c09a7086f1.png" referrerpolicy="no-referrer"></p><p>據介紹，<strong>360 智腦擁有千億參數規模，預訓練超萬億 tokens，具備生成創作、多輪對話、邏輯推理等十大核心能力、數百項細分功能</strong>，能夠覆蓋大模型應用的所有場景。基於 360 智腦的企業級垂直大模型，已在金融、醫療、教育等近 20 個行業陸續落地。</p><p>360 智腦大模型號稱擁有三大創新體驗：</p><ul><li><p>第一，360 智腦為上網體驗引入更強的智能助手，可一鍵對瀏覽網頁進行總結摘要、翻譯、改寫，結合圖形化效率工具。</p></li><li><p>第二，大模型數字人結合 360 搜索多年積累的垂直知識庫，可智能優化用户輸入 prompt，識別用户意圖，AI 問答生成結果更加專業、優質。</p></li><li><p>第三，多輪問答生成和引導的追問形式，可突破用户知識邊界，最大程度激發用户創造力。</p></li></ul><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-a304df5ec2998a7a83568763304db54bbfc.png" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 19 Sep 2023 02:32:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/258887</guid>
            <link>https://www.oschina.net/news/258887</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[openKylin 社區 UKUI 桌面環境設計與實現推進交流會順利舉行]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://www.oschina.net/question/4489239_2331019" _blank"="">
尊嘟假嘟，成都程序員也 996 嗎？ 
<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p style="color:#222222; margin-left:0px; margin-right:0px; text-align:justify">9 月 18 日，由 openKylin 社區聯合湖南師範大學美術學院舉辦的 UKUI 桌面環境設計與實現推進交流會順利舉行。湖南師範大學美術學院院長李少波教授、黃龍副教授、張泠泠副教授、李子龍助理教授，麒麟軟件終端研發部副總經理彭歡、桌面環境部副經理王霞、項目經理周瓊琳，openKylin 社區技術委員會委員餘傑、劉曉東、李劍峯，UKUIDesign SIG Owner 劉麗華、UKUIDesign SIG Maintainer 歐陽昱、盧軻等相關成員參與會議。</p><div><p style="text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-a44a0332f04bc279f92ac941ca2ec012a8a.jpg" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px">&nbsp;</p></div><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify">會上，首先由 UKUIDesign SIG Owner 劉麗華就 UKUI 桌面環境「尋光/和印/啓典」三套主題在 openKylin 1.0 版本中的實現效果向與會人員進行展示。隨後，各與會人員圍繞 UKUI 桌面環境下一套主題設計語言和圖標設計風格展開了交流討論。基於簡潔、通用、易理解的設計原則，在 openKylin 2.0 版本中，UKUI 新圖標設計方向將更趨向於「沉穩」。</p><p style="color:#222222; margin-left:0px; margin-right:0px; text-align:justify">其中，湖南師範大學美術學院將以品牌定位、美學語言和用户需求為依據，為 openKyin 社區 UKUI 桌面環境設計提供支持。攜手構建一套高穩定、強交互、功能強大的新型操作系統桌面環境。</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 19 Sep 2023 01:32:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/258879</guid>
            <link>https://www.oschina.net/news/258879</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Gitee 推薦 | 仿生六足機器人制作全教程]]>
            </title>
            <description>
                <![CDATA[<h1><a id="user-content-六足機器人" class="anchor" href="https://gitee.com/Brend0/hexapod-robot#%E5%85%AD%E8%B6%B3%E6%9C%BA%E5%99%A8%E4%BA%BA"></a>六足機器人</h1><h4><a id="user-content-介紹" class="anchor" href="https://gitee.com/Brend0/hexapod-robot#%E4%BB%8B%E7%BB%8D"></a>介紹。</h4><p>製作仿生六足機器人的完整製作教程，該教程包含 3D 打印文件和製作全流程。</p><p>歡迎關注 Star <img class="emoji" alt=":kissing_heart:" style="vertical-align: middle" src="https://cn-assets.gitee.com/assets/emoji/kissing_heart-fbb898728891eaf18c3bffa8f1f2f821.png" width="14" height="14" referrerpolicy="no-referrer"><img class="emoji" alt=":kissing_heart:" style="vertical-align: middle" src="https://cn-assets.gitee.com/assets/emoji/kissing_heart-fbb898728891eaf18c3bffa8f1f2f821.png" width="14" height="14" referrerpolicy="no-referrer"><img class="emoji" alt=":kissing_heart:" style="vertical-align: middle" src="https://cn-assets.gitee.com/assets/emoji/kissing_heart-fbb898728891eaf18c3bffa8f1f2f821.png" width="14" height="14" referrerpolicy="no-referrer"></p><p><img src="https://gitee.com/Brend0/hexapod-robot/raw/master/.gitee/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20230709205151.jpg" alt="輸入圖片説明" referrerpolicy="no-referrer"></p><p>B 站視頻：<a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV15x4y1N7id%2F%3Fpop_share%3D1%26vd_source%3D1608f0247af63a025b4aed15bc542838">https://www.bilibili.com/video/BV15x4y1N7id/?pop_share=1&amp;vd_source=1608f0247af63a025b4aed15bc542838</a></p><p>六足機器人是一種用六條腿行走的機械人。由於機器人可以在三條或更多條腿上保持靜態穩定，因此六足機器人機器人在移動方式方面具有很大的靈活性。</p><p>許多六足機器人機器人的生物學靈感來自六足機器人運動。六足機器人可用於測試有關昆蟲運動、運動控制和神經生物學的生物學理論。</p><h4><a id="user-content-硬件架構" class="anchor" href="https://gitee.com/Brend0/hexapod-robot#%E7%A1%AC%E4%BB%B6%E6%9E%B6%E6%9E%84"></a>硬件架構</h4><p>硬件件架構説明</p><p>需要用到的電子元器件 (圖片在電子元器件文件夾）</p><p>1.32 路舵機控制板</p><p>2.mini D1 wifi ESP8266 開發板 ModeMcu</p><p>3.SG90 9g 舵機</p><p>4.HENGE 恆吉 4A UBEC</p><p>5.電源降壓模塊</p><p>6.杜邦線若干+電源</p><h4><a id="user-content-安裝教程" class="anchor" href="https://gitee.com/Brend0/hexapod-robot#%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B"></a>安裝教程</h4><ol><li><p>3D 打印清單 (文件存放於 3D 打印文件夾中）：</p><p>3xcoxa-a.SLDPRT</p><p>3xcoxa-b.SLDPRT</p><p>3xfemur-a.SLDPRT</p><p>3xfemur-b.SLDPRT</p><p>1xhex-body-short.SLDPRT</p><p>1xhex-cover-short.SLDPRT</p><p>6xshield.SLDPRT</p><p>3xtibia-a.SLDPRT</p><p>3xtibia-b.SLDPRT</p></li><li><p>六足機器人的組裝教程</p><p>整體組裝示意圖</p></li></ol><p><img src="https://gitee.com/Brend0/hexapod-robot/raw/master/.gitee/%E6%95%B4%E4%BD%93%E7%BB%84%E8%A3%85%E7%A4%BA%E6%84%8F.jpg" alt="輸入圖片説明" referrerpolicy="no-referrer"></p><p>具體組裝流程:(因涉及圖片較多 <strong>具體流程圖片放在零件到整體文件夾</strong> 裏 <img class="emoji" alt=":blush:" style="vertical-align: middle" src="https://cn-assets.gitee.com/assets/emoji/blush-85d11d8b7459d18f70eab0659c19a266.png" width="14" height="14" referrerpolicy="no-referrer"> ）</p><p>搭建視頻教程：<a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1oY4y1X7rZ%2F%3Fspm_id_from%3D333.1007.top_right_bar_window_dynamic.content.click%26vd_source%3D1608f0247af63a025b4aed15bc542838">https://www.bilibili.com/video/BV1oY4y1X7rZ/?spm_id_from=333.1007.top_right_bar_window_dynamic.content.click&amp;vd_source=1608f0247af63a025b4aed15bc542838</a></p><ol start="3"><li><p>線路組裝教程</p><p>整體線路連接示意圖</p></li></ol><p><img src="https://gitee.com/Brend0/hexapod-robot/raw/master/%E7%BA%BF%E8%B7%AF%E7%BB%84%E8%A3%85%E5%9B%BE/%E9%93%BE%E6%8E%A5%E7%94%B5%E8%B7%AF%E5%9B%BE.jpg" alt="輸入圖片説明" referrerpolicy="no-referrer"></p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line">舵機連接説明</span></pre><div class="markdown-code-block-copy-btn"></div></div></div><p><img src="https://gitee.com/Brend0/hexapod-robot/raw/master/%E7%BA%BF%E8%B7%AF%E7%BB%84%E8%A3%85%E5%9B%BE/%E8%88%B5%E6%9C%BA%E9%93%BE%E6%8E%A5%E7%A4%BA%E6%84%8F%E5%9B%BE.jpg" alt="輸入圖片説明" referrerpolicy="no-referrer"></p><p>1.來自 UBEC 的 5v 電源輸出 （+）</p><p>2.來自 UBEC 和迷你降壓的地面</p><p>3.5V 電源輸出 （+） 從迷你降壓</p><p>4.至 Wemos D1 迷你 G 引腳</p><p>5.至 Wemos D1 迷你 5v 引腳</p><p>6.至 Wemos 迷你 RX 引腳</p><p>7.至 Wemos 迷你 TX 引腳</p><p>關節説明</p><p><img src="https://gitee.com/Brend0/hexapod-robot/raw/master/%E7%BA%BF%E8%B7%AF%E7%BB%84%E8%A3%85%E5%9B%BE/%E5%9B%BE%E7%89%871.png" alt="輸入圖片説明" referrerpolicy="no-referrer"></p><p>8.（將引腳顏色與舵機電纜顏色匹配）到右前腿（引腳 1 到髖關節，引腳 2 到膝關節，引腳 3 踝關節舵機）</p><p>9.（引腳顏色與伺服電纜顏色匹配）到左前腿（引腳 5 到髖關節，引腳 6 到膝關節，引腳 7 踝關節舵機）</p><p>11.（引腳顏色與伺服電纜顏色匹配）到左中腿（引腳 13 連接到髖關節，引腳 14 連接到膝關節，引腳 15 踝關節舵機）</p><p>12.（引腳顏色與伺服電纜顏色匹配）到右中間腿（引腳 17 連接到髖關節，引腳 18 連接到膝關節，引腳 19 踝關節舵機）</p><p>13.（引腳顏色與伺服電纜顏色匹配）到左後腿（引腳 25 連接到髖關節，引腳 26 到膝關節，引腳 27 踝關節舵機）</p><p>14.（引腳顏色與伺服電纜顏色匹配）到右後腿（引腳 29 連接到髖關節，引腳 30 連接到膝關節，引腳 31 踝關節舵機）</p><h4><a id="user-content-使用説明" class="anchor" href="https://gitee.com/Brend0/hexapod-robot#%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E"></a>使用説明</h4><ol><li>mini D1 ESP8266 WiFi 板電路連接示意圖</li></ol><p><img src="https://gitee.com/Brend0/hexapod-robot/raw/master/%E7%BA%BF%E8%B7%AF%E7%BB%84%E8%A3%85%E5%9B%BE/mini%20D1%20%E9%93%BE%E6%8E%A5%E5%9B%BE.jpg" alt="輸入圖片説明" referrerpolicy="no-referrer"></p><p>電路連接説明：</p><p>WeMos D1 mini 是最小的 ESP8266 wifi 板</p><p>使用 wemos D1 mini 作為 WIFI AP，我們可以向 32 路舵機控制器發送串行命令，</p><p>並獨立成為 Web 服務器 AP 來控制機器人。</p><p>引腳連接説明：</p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"> 1.到 32 路舵機控制器 RX 引腳</span><span id="LC2" class="line"></span><span id="LC3" class="line"> 2.到 32 路舵機控制器 TX 引腳 (注意不要把 RX、RT 引腳接反了，在開發板下載程序時，不要連接引腳）</span><span id="LC4" class="line"></span><span id="LC5" class="line"> 3.來自 32 路舵機控制器 G 針</span><span id="LC6" class="line"></span><span id="LC7" class="line"> 4.來自 32 路舵機控制器 5v 引腳</span></pre><div class="markdown-code-block-copy-btn"></div></div></div><ol start="2"><li><p>程序 (文件儲存在程序文件夾)</p></li><li><p>開始使用</p></li></ol><p>我們可以將智能手機連接到 nodeMCU AP，並使用網絡瀏覽器打開<a href="https://gitee.com/link?target=http%3A%2F%2F192.168.4.1%25EF%25BC%258C%25E6%2588%2591%25E4%25BB%25AC%25E5%258F%25AF%25E4%25BB%25A5%25E7%259C%258B%25E5%2588%25B0%25E6%2589%2580%25E6%259C%2589%25E7%259A%2584%25E5%2591%25BD%25E4%25BB%25A4%25E3%2580%2582%28%25E7%25BD%2591%25E5%259D%2580%25E4%25B8%2580%25E5%25AE%259A%25E8%25A6%2581%25E4%25BD%25BF%25E7%2594%25A8%25E6%2589%258B%25E6%259C%25BA%25E6%2589%2593%25E5%25BC%2580%25EF%25BC%2589">http://192.168.4.1，我們可以看到所有的命令。(網址一定要使用手機打開）</a></p><h4><a id="user-content-特別説明" class="anchor" href="https://gitee.com/Brend0/hexapod-robot#%E7%89%B9%E5%88%AB%E8%AF%B4%E6%98%8E"></a>特別説明</h4><ol><li>本項目有參考網上的一些開源項目</li></ol><p><a href="https://gitee.com/link?target=https%3A%2F%2Facktomas.blog.csdn.net%2Farticle%2Fdetails%2F125620291%3Fspm%3D1001.2101.3001.6650.18">https://acktomas.blog.csdn.net/article/details/125620291?spm=1001.2101.3001.6650.18</a></p><p><a href="https://gitee.com/link?target=https%3A%2F%2Fblog.csdn.net%2Fzyc121561%2Farticle%2Fdetails%2F77679278%3Fops_request_misc%3D%25257B%252522request%25255Fid%252522%25253A%252522166873748816782414912961%252522%25252C%252522scm%252522%25253A%25252220140713.130102334..%252522%25257D%26request_id%3D166873748816782414912961%26biz_id%3D0%26spm%3D1018.2226.3001.4187">https://blog.csdn.net/zyc121561/article/details/77679278?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522166873748816782414912961%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=166873748816782414912961&amp;biz_id=0&amp;spm=1018.2226.3001.4187</a></p><ol start="2"><li>編程軟件為 Arduino IDE ，舵機調試軟件為 ServoController。</li></ol><h4><a id="user-content-特技" class="anchor" href="https://gitee.com/Brend0/hexapod-robot#%E7%89%B9%E6%8A%80"></a>特技</h4><ol><li>提供關於六足機器人的電路、3D 打印、程序的一切支持</li></ol>]]>
            </description>
            <pubDate>Mon, 18 Sep 2023 10:41:00 GMT</pubDate>
            <guid isPermaLink="false">https://gitee.com/Brend0/hexapod-robot</guid>
            <link>https://gitee.com/Brend0/hexapod-robot</link>
        </item>
        <item>
            <title>
                <![CDATA[JumpServer 漏洞通知及修復方案（JS-2023.09.15）]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><div data-traceid="news_comment_top_ad" data-tracepid="news_comment_top" style="text-align: center;"><a style="color:#A00;font-weight:bold;" href="https://www.oschina.net/question/4489239_2331019" target="_blank">尊嘟假嘟，成都程序員也 996 嗎？ <img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div></div><p style="margin-left:0; margin-right:0">2023 年 9 月 11 日，有用户反饋發現 JumpServer 開源堡壘機存在安全漏洞，並向 JumpServer 開源項目組進行上報。</p><p style="margin-left:0; margin-right:0">此次發現的漏洞為：</p><p style="margin-left:0; margin-right:0"><span style="color:#28937c">■</span><span>&nbsp;</span>JumpServer 的權限管理存在「未授權情況下可以訪問錄像文件」的漏洞，漏洞編號為 CVE-2023-42442。漏洞詳情請查看：<em>https://github.com/jumpserver/jumpserver/security/advisories/GHSA-633x-3f4f-v9rw</em>。</p><p style="margin-left:0; margin-right:0"><strong><span style="color:#28937c">以上漏洞影響版本為：</span></strong></p><p style="margin-left:0; margin-right:0">JumpServer v3.0.0-v3.5.4 版本</p><p style="margin-left:0; margin-right:0">JumpServer v3.6.0-v3.6.3 版本</p><p style="margin-left:0; margin-right:0"><strong><span style="color:#28937c">安全版本為：</span></strong></p><p style="margin-left:0; margin-right:0">JumpServer 版本= v3.5.5 版本</p><p style="margin-left:0; margin-right:0">JumpServer 版本&gt;= v3.6.4 版本</p><span id="OSC_h2_1"></span><h2>修復方案</h2><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify">升級 JumpServer 軟件至上述安全版本。</p><p>&nbsp;</p><p>&nbsp;</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 18 Sep 2023 10:37:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/4736111/blog/10112298</guid>
            <link>https://my.oschina.net/u/4736111/blog/10112298</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[華為推出全新架構昇騰 AI 計算集羣，可支持超萬億參數大模型訓練]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://www.oschina.net/question/4489239_2331019" _blank"="">
尊嘟假嘟，成都程序員也 996 嗎？ 
<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p>在華為全聯接大會 2023 期間，華為常務董事、ICT 基礎設施業務管理委員會主任、企業 BG 總裁汪濤正式發佈全新架構的昇騰 AI 計算集羣 —— Atlas 900 SuperCluster，可支持超萬億參數的大模型訓練。</p><p>據介紹，新集羣採用全新的華為星河 AI 智算交換機 CloudEngine XH16800，藉助其高密的 800GE 端口能力，兩層交換網絡即可實現 2250 節點（等效於 18000 張卡）超大規模無收斂集羣組網。同時使用了創新的超節點架構，大大提升了大模型訓練能力。並從器件級、節點級、集羣級和業務級全面提升系統可靠性，將大模型訓練穩定性從天級提升到月級。</p><p>與此外，華為還發布了更開放、更易用的 CANN7.0，不僅全面兼容業界的 AI 框架、加速庫和主流大模型，還深度開放底層能力，讓 AI 框架和加速庫可以更直接地調用和管理計算資源，使能開發者自定義高性能算子，讓大模型具備差異化的競爭力。</p><p>以及升級了 Ascend C 編程語言，以更高效的編程方式，簡化算子實現邏輯，大幅縮短融合算子的開發週期，為 AI 模型與應用的快速開發賦能。</p><p>汪濤表示，隨着人工智能進入大模型時代，大算力正在成為人工智能發展的核心引擎。華為改變傳統的服務器堆疊模式，以系統架構創新打造 AI 集羣，實現算力、運力、存力的一體化設計，突破大算力瓶頸。</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 18 Sep 2023 09:08:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/258823</guid>
            <link>https://www.oschina.net/news/258823</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[openKylin 共建會員沙龍（第六期）杭州站成功舉辦]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://www.oschina.net/question/4489239_2331019" _blank"="">
尊嘟假嘟，成都程序員也 996 嗎？ 
<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p style="color:#222222; margin-left:0px; margin-right:0px; text-align:justify"><span><span style="color:#000000">9 月 19 日，由</span><strong><span style="color:#000000">openKylin 社區主辦、平頭哥半導體有限公司承辦</span></strong><span style="color:#000000">的</span><strong><span style="color:#000000">第六期共建會員沙龍</span></strong><span style="color:#000000">在杭州順利舉行。立足新時期，我國數字產業發展根基愈牢，關鍵技術領域自主創新能力持續增強，以開源帶動軟件生產模式創新、補足軟件供應鏈短板的理念已得到業界足夠重視。</span></span></p><p style="margin-left:0px; margin-right:0px; text-align:justify">openKylin 社區共建會員沙龍旨在邀請社區單位會員及致力於開源產業的各界夥伴共同探討數字化轉型期的開源機遇及優勢，搭建開源領域的交流合作平台，推動 Linux 開源技術及其軟硬件生態繁榮發展。</p><div><p style="text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-e144d333729a88d30571c1e703f03b7aa45.jpg" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px">&nbsp;</p></div><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">此次活動中，平頭哥半導體有限公司軟件研發總監李春強、openKylin 社區技術委員會委員王文竹為活動致辭。openKylin 社區生態合作負責人馬發俊，PLCT Lab 項目總監吳偉，平頭哥半導體有限公司生態總監陳煒，杭州瑞成信息技術股份有限公司基礎研發部經理侯海賓，Avalonia 中文社區發起人董彬進行主題分享。最後，各與會代表就開源治理及社區共建等相關問題展開交流討論，openKylin 社區秘書長餘傑作會議總結。</span></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify">&nbsp;</p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><strong><span style="color:#ffffff"><span style="background-color:#fdd105">PART 1</span></span></strong></span><strong><span style="color:#333333">會議致辭</span></strong></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><strong><span style="color:#000000">平頭哥半導體有限公司軟件研發總監李春強為此次沙龍致辭</span></strong><span style="color:#000000">並表示，歡迎大家來到位於杭州的美麗的阿里園區參加由 openKylin 社區主辦，平頭哥承辦的共建會員沙龍，平頭哥作為 openKylin 社區合作伙伴，將共同推動社區 RISC-V 生態繁榮發展。</span></span></p><div><p style="text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-729eb7a4821dd713c77a830bb7832dae0c8.jpg" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px">&nbsp;</p></div><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><strong><span style="color:#000000">openKylin 社區技術委員會委員王文竹為此次沙龍致辭，</span></strong><span style="color:#000000">他表示，各位夥伴的加入為 openKylin 社區的持續發展注入了創新力量。未來，我們將以開源為抓手，與業界同仁共同努力，着力於技術創新和生態共建，共同打造桌面操作系統頂級根社區。</span></span></p><div><p style="text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-343d13afa490031a1b9405374b5643cd636.jpg" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px">&nbsp;</p></div><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><strong><span style="color:#ffffff"><span style="background-color:#fdd105">PART 2</span></span></strong></span><strong><span style="color:#333333">主題分享</span></strong></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><strong><span style="color:#000000">openKylin 社區生態合作負責人馬發俊</span></strong><span style="color:#000000">，向與會夥伴介紹了社區的基本情況、治理模式、開源趨勢及社區取得的相關成果。openKylin 社區將聯合共建會員進行生態協同和技術創新，讓更多夥伴能夠在社區平台共享、共贏，目前，已有 40 多家合作伙伴參與和創建了 30 多個 SIG 組，為社區貢獻技術創新力量，在大家的共同努力下，最終將社區建設成為具有國際影響力的開源社區。未來，openKylin 社區期待有更多夥伴加入、攜手共建下一代操作系統創新生態。</span></span></p><div><p style="text-align:center"><img alt="" height="1280" src="https://oscimg.oschina.net/oscnet/up-bec1a47f714f2a027dd1799709db1b0cb59.jpg" width="1706" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px">&nbsp;</p></div><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><strong><span style="color:#000000">PLCT Lab 項目總監吳偉</span></strong><span style="color:#000000">發表</span><strong><span style="color:#000000">《RISC-V &amp; openKylin: Get ready for the 1 million developers》</span></strong><span style="color:#000000">主題分享。PLCT Lab 致力於成為編譯技術領域的開源領導者，推進工具鏈及運行時系統等軟件基礎設施的技術革新，並致力於培養一萬名編譯領域尖端人才，推動先進編譯技術在國內的普及和發展。PLCT Lab 將攜手 openKylin 社區共同為推動 RISC-V 產業生態獻策、獻力，並協助和加速 openKylin 在 RISC-V 架構上的國際化腳步。</span></span></p><div><p style="text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-3ee4f9b38a6bfc32d0c767024eece285136.jpg" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px">&nbsp;</p></div><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><strong><span style="color:#000000">平頭哥半導體有限公司生態總監陳煒</span></strong><span style="color:#000000">發表</span><strong><span style="color:#000000">《玄鐵軟硬件全棧技術，助力 RISC-V 生態發展》</span></strong><span style="color:#000000">主題分享。平頭哥成立於 2018 年，目前已擁有端雲一體的全棧產品系列，涵蓋了數據中心芯片、IoT 芯片、處理器 IP 等產品及解決方案，實現了芯片端到端設計鏈路全覆蓋。在加入 openKylin 社區後，攜手社區完成了平頭哥 TH1520 與 openKylin 操作系統的適配工作，並在 openKylin 操作系統上實現首個 RV 商業 IM 工具。未來雙方將持續深化合作，共同致力於 RISC-V 生態的發展與探索。</span></span></p><div><p style="text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-6adb25ab0e0bdbf677146ebcaecad090086.jpg" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px">&nbsp;</p></div><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><strong><span style="color:#000000">杭州瑞成信息技術股份有限公司基礎研發部經理侯海賓</span></strong><span style="color:#000000">發表</span><strong><span style="color:#000000">《瑞成科技攜手開放麒麟，共建開放應用生態》</span></strong><span style="color:#000000">主題分享。瑞成科技成立於 2006 年，是一家專注於協同、數據、智能、安全等核心技術，以整合行業軟硬件產業鏈、提供行業整體解決方案的高科技企業。加入 openKylin 社區後，申請成立了 Notification SIG 組和 RPA SIG，持續謀劃並推進 SIG 組工作，為社區貢獻瑞成力量。</span></span></p><div><p style="text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-48e8242675b8659c06e7c9e76fa3c690a5d.jpg" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px">&nbsp;</p></div><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><strong><span style="color:#000000">Avalonia 中文社區發起人董彬</span></strong><span style="color:#000000">發表</span><strong><span style="color:#000000">《Avalonia 與 openKylin 開源社區共建及生態展望》</span></strong><span style="color:#000000">主題分享。在加入 openKylin 社區後，Avalonia 中文社區成立了 Avalonia SIG，致力於推進 Avalonia UI 對 openKylin 生態的支持，及 Avalonia UI 的相關生態建設。未來，雙方也將持續展開合作，將 Avalonia UI 的強大功能與 openKylin 操作系統的優勢相結合，為用户帶來更加出色的使用體驗，促進操作系統桌面軟件生態蓬勃發展。</span></span></p><div><p style="text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-cf39bee522a23ec8d256402d533434e9091.jpg" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px">&nbsp;</p></div><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><strong><span style="color:#ffffff"><span style="background-color:#fdd105">PART 3</span></span></strong></span><strong><span style="color:#333333">交流討論</span></strong></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">在共建根社區建設交流研討中，參與此次沙龍的各企業代表積極參與，圍繞社區各個產品領域的標準制定，操作系統創新生態打造等話題，探討未來夥伴間更多維度、更深層次合作方向。</span></span></p><div><p style="text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-4f1a35ce0272610502f3c8750bd650a0f4b.jpg" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px">&nbsp;</p></div><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">最後，</span><strong><span style="color:#000000">openKylin 秘書長餘傑就本次會議進行總結髮言</span></strong><span style="color:#000000">。他表示，感謝大家參加 openKylin 社區杭州站沙龍，openKylin 社區聯合生態廠商協同創新，通過建立完善社區組織架構和運營機制，建立社區同單位會員間平等、開放的溝通交流機制，讓更多夥伴能夠在社區平台共享、共贏，最終建成具有國際影響力的開源社區。</span></span></p><div><p style="text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-66197ddbcf4ba81c8fd73ac5aa3d341211e.jpg" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px">&nbsp;</p></div><p style="color:#222222; margin-left:0px; margin-right:0px; text-align:justify"><span><span style="color:#000000">openKylin 作為國內桌面操作系統根社區，以聚焦桌面操作系統根技術為核心、以打造創新生態為途徑、以孵化相關領域關鍵項目為目標、以佈道開源文化為抓手、以聚合開源優秀人才為根基，願攜手更多夥伴共同推動，致力於推動 Linux 開源技術及其軟硬件生態繁榮發展。</span></span></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 18 Sep 2023 07:58:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/258810</guid>
            <link>https://www.oschina.net/news/258810</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Jakarta EE 開發者調查 2023：中國社區參與度尤其高]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://www.oschina.net/question/4489239_2331019" _blank"="">
尊嘟假嘟，成都程序員也 996 嗎？ 
<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p><span style="color:#000000">Eclipse 基金會推出了 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnewsroom.eclipse.org%2Fnews%2Fannouncements%2Feclipse-foundation-releases-2023-jakarta-ee-developer-survey-report" target="_blank">2023 年 Jakarta EE 開發人員調查報告</a>。結果表明，Jakarta EE 的使用量顯着增長，並且總體上對雲原生 Java 的興趣日益增長。</span></p><p><span style="color:#000000">Jakarta EE 開發人員調查旨在深入瞭解 Java 生態系統中開發人員的需求、偏好和觀點；幫助 Java 生態系統更好地瞭解雲原生企業 Java 的不斷髮展的前景，以及這對各自的戰略和業務意味着什麼。今年的調查從 2025 年 3 月 14 日到 5 月 23 日，共有 2,203 名參與者，相較去年增加了 53%。</span></p><p><span style="color:#000000">今年的調查還提供中文、日語、西班牙語和葡萄牙語版本。官方表示，今年中國 Jakarta EE 社區的參與度尤其高，有超過 27% 的回覆來自中國。</span></p><p><span style="color:#000000"><img alt="" height="311" src="https://oscimg.oschina.net/oscnet/up-e44a13ee50350f053dc304f7c2e8ac81120.webp" width="500" referrerpolicy="no-referrer"></span></p><p><span style="color:#000000">以下是今年調查的一些主要發現：</span></p><ul><li><span style="color:#000000">融合了 Jakarta EE 元素的 Spring/Spring Boot 仍然是雲原生應用的主要 Java 框架，佔比 66%（高於 2022 年的 57%）。Jakarta EE 使用率穩定在 53%；而 MicroProfile 使用率略有下降，從 2022 年的 30% 下降到 2023 年的 26%。需要注意的是，Spring/SpringBoot 的運行依賴於 Jakarta EE 開發，並不一定與 Jakarta EE 競爭。兩者都是企業 Java 生態系統健康發展的關鍵因素。</span></li><li><span style="color:#000000">28%（2022 年為 25%）的受訪者將開發雲原生應用程序來替換部分或全部現有服務，而 24% 的受訪者將修改現有 Java 應用程序以遷移到雲中（2022 年為 28%）。22% 的受訪者目前在雲中運行 Java 應用程序（2022 年這一比例為 18%）</span></li><li><span style="color:#000000">儘管 2022 年 9 月才發佈，但 Jakarta EE 10 的使用率已增長至 17%。</span></li><li><span style="color:#000000">超過 60% 的受訪者（2022 年為 59%）表示已經或計劃在未來 6-24 個月內遷移到&nbsp;Jakarta EE。</span></li><li><span style="color:#000000">17% 的受訪者在生產中運行 Jakarta EE 9/9.1（高於 2022 年的 14%），28% 的受訪者目前在生產中運行 Jakarta EE 8（2022 年為 24%）</span></li><li><span style="color:#000000">Jakarta EE 社區對於將 Java SE 中實現的創新應用到 Jakarta EE 中非常感興趣 (30%)。報告指出，這是一個很好的跡象，表明 Jakarta EE 11 發佈計劃採用 Java SE 21 新功能的方向是正確的。</span></li><li><span style="color:#000000">受訪者中排名前五的雲平台供應商是 Amazon Web Services、Microsoft Azure、Google Cloud Platform、阿里雲和 IBM Cloud。</span></li><li><span style="color:#000000">Jakarta EE 的五個首要社區優先事項是：</span><ul><li><span style="color:#000000">對 Kubernetes 更好的支持 50%（2022 年為 51%）</span></li><li><span style="color:#000000">更好地支持微服務 (48%)</span></li><li><span style="color:#000000">適應 Java SE 創新（例如記錄和虛擬線程）(30%)</span></li><li><span style="color:#000000">改進對 serverless 的支持 (25%)</span></li><li><span style="color:#000000">現有 Java EE / Jakarta EE 或雲供應商提供更快的支持，改善對測試的支持並加快創新步伐 (23%)</span></li></ul></li></ul><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000">Eclipse 基金會執行董事 Mike Milinkovich 發言稱：「2023 年，雲原生 Java 將持續增長，開源將引領潮流。Jakarta EE 10 的發佈真正為這一轉變打開了大門，當我們將目光投向 Jakarta EE 11 時，我們的社區希望通過提供新的和增強的 API 以及採用 Java 語言和平台。」</span></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 18 Sep 2023 07:40:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/258807/2023-jakarta-ee-developer-survey-report</guid>
            <link>https://www.oschina.net/news/258807/2023-jakarta-ee-developer-survey-report</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Bard 更新：迄今為止最強大的模型、集成谷歌全家桶]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://www.oschina.net/question/4489239_2331019" _blank"="">
尊嘟假嘟，成都程序員也 996 嗎？ 
<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p>谷歌對話式 AI 產品 Bard 近日發佈了<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbard.google.com%2Fupdates" target="_blank">更新</a>。</p><p>從現在開始，Bard 開始提供插件生態。它可以調用豐富的谷歌應用 API，從而執行復雜的操作。你每天使用的谷歌工具，比如 Gmail、Docs、Drive、谷歌地圖、Youtube、谷歌航班等應用，Bard 都能打開，然後從中為你找到需要的信息。</p><p>即使需要的信息分散在多個應用和服務中，有了 Bard 也能快速集成。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-0973ea2474b81e52114278b1be524b91198.png" referrerpolicy="no-referrer"></p><hr><p>下文是更新説明。</p><p><strong>全新推出：Bard 迄今為止最強大的模型</strong></p><ul><li>具體變化：得益於你的反饋，Bard 現在更直觀明瞭、更富於想象力、響應速度更快。無論你是想要讓 Bard 幫你撰寫富有趣味和創意的內容，隨心使用 40 多種語言中的任意一種與 Bard 對話，還是要尋求深度編程協助，或是從不同角度瞭解新主題，Bard 都能以更出色的質量和準確度幫助你探索各種可能性。</li><li>原因：我們秉承快速迭代原則，努力將 Bard 最先進的「黑科技」帶給全世界。你的反饋幫助我們構建出了迄今為止最強大的 Bard 版本，讓用户能夠在世界各地使用多種語言與 Bard 協作。</li></ul><p><img src="https://static.oschina.net/uploads/space/2023/0920/153052_NulT_2720166.gif" referrerpolicy="no-referrer"></p><p><strong>藉助改版後的「用 Google 搜索」功能核查 Bard 的回答</strong></p><ul><li><p>具體變化：利用 Google 搜索的強大功能，[G] 按鈕可幫助你核查 Bard 使用 AI 生成的回答。此功能目前只支持英語。當我們能夠評估某項陳述時，相應陳述會在 Bard 的回答中突出顯示，點擊一下即可瞭解詳情。</p><p>注意：所提供的鏈接是 Google 搜索找到的內容，並不代表 Bard 原來給出的回答是根據這個來源生成的。</p></li><li><p>原因：如今，人們使用 AI 工具以新的方式更輕鬆地瞭解複雜的主題。隨着你在 Bard 的幫助下學習新知，很重要的一點是讓你對 AI 生成的信息更有信心。</p></li></ul><p><strong>接着與你分享的對話繼續聊</strong></p><ul><li>具體變化：有人通過 Bard 的公共鏈接功能與你分享 Bard 對話時，你可以使用自己的賬號接着這些對話繼續聊。</li><li>原因：我們經常從其他人那裏得到靈感啓發，接觸到的想法越多，就越有可能提出真正創新的想法。因此，我們希望你能夠更輕鬆地將他人分享的對話作為切入點，展開自己的創意探索。</li></ul><p><strong>所有支持的語言都可使用更多功能</strong></p><ul><li>具體變化：在所有受支持的語言中，你現在可以使用 Google 智能鏡頭上傳圖片、在回答中看到來自 Google 搜索的圖片，並讓 Bard 將回答修改得更簡單、更詳盡、更簡短、更專業或更隨意一點。</li><li>原因：通過讓 Bard 將回答修改得更符合你的需求，你將能夠更好地控制自己的創意流程。在問題中加入圖片可以激發新的創意，而回答中的圖片將有助於你將創意變為現實。</li></ul></div>
                                    ]]>
            </description>
            <pubDate>Mon, 18 Sep 2023 07:28:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/258800/bard-update-sep-2023</guid>
            <link>https://www.oschina.net/news/258800/bard-update-sep-2023</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[百度發佈國內首個「產業級」醫療大模型靈醫大模型]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://www.oschina.net/question/4489239_2331019" _blank"="">
尊嘟假嘟，成都程序員也 996 嗎？ 
<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p>百度<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FFaCGdrPvxTowa_MojEALkQ" target="_blank">宣佈</a>發佈國內首個「產業級」醫療大模型 —— 靈醫大模型，並面向大健康上下游產業開放靈醫大模型測評、試用，推動醫療行業的數字化和智能化進程。</p><p>根據介紹，靈醫大模型以文心大模型為技術底座；是國內首個「產業級」醫療大模型，也是國內首個實現商業化落地的醫療大模型。其目前已與固生堂、零假設等達成合作，並定向向公立醫院、藥械企業、互聯網醫院平台、連鎖藥房等 200 多家醫療機構開放。</p><p><img height="272" src="https://oscimg.oschina.net/oscnet/up-4964fbe060242e73d7f92ad8915976ad85b.png" width="500" referrerpolicy="no-referrer"></p><p><img height="183" src="https://oscimg.oschina.net/oscnet/up-ba7bce464af89384b6be76746f174685c17.png" width="500" referrerpolicy="no-referrer"></p><p>靈醫大模型能夠結合自由文本秒級生成結構化病歷，根據醫患對話精準分析生成主訴、現病史等內容。此外，靈醫大模型也是業內唯一支持多篇中英文文獻同時解析的大模型，基於文獻解析內容實現智能問答。</p><p>在輔助診療方面，靈醫大模型可實現通過多輪對話瞭解病人病情，實時輔助醫生確診疾病，推薦治療方案，提升就診全流程的效率和體驗，併成為患者的 24 小時「健康管家」，提供智能客服服務。此外，靈醫大模型還能為藥企提供多項賦能，包括專業培訓、醫藥信息支持等等。</p><p>百度大健康事業羣 AI 產業部總經理劉軍偉表示，「模型即服務，靈醫大模型希望打造 AI 原生的多層次產品體系。基於數據預訓練、微調的靈醫大模型具備強大的開放能力，支持生態夥伴進行 API 調用、插件集成，為終端用户提供完整服務。」</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 18 Sep 2023 03:01:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/258761</guid>
            <link>https://www.oschina.net/news/258761</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
    </channel>
</rss>
