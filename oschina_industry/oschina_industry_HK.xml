<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[開源中國-綜合資訊]]>
        </title>
        <link>https://www.oschina.net/news/industry</link>
        <atom:link href="https://rsshub.app/oschina/news/industry" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[開源中國-綜合資訊 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Tue, 21 Nov 2023 00:36:10 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[雲原生週刊：Istio 1.20.0 發佈]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h2>開源項目推薦</h2><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Floft-sh%2Fdevpod" target="_blank">DevPod</a></h3><p>DevPod 是一款純客户端工具，可在任何後端基於 devcontainer.json 創建可重現的開發人員環境。每個開發者環境都在一個容器中運行，並通過 devcontainer.json 進行指定。通過 DevPod 提供商，這些環境可以在任何後端創建，如本地計算機、Kubernetes 集羣、任何可訪問的遠程機器或雲中的虛擬機。</p><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FFairwindsOps%2Fgemini" target="_blank">Gemini</a></h3><p>Gemini 是用於管理卷快照的 Kubernetes CRD 和 operator。可以定期為 PersistentVolumes 上的數據創建快照，清空舊快照，並以最少的停機時間恢復快照。</p><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fr0binak%2FMTKPI" target="_blank">MTKPI</a></h3><p>MTKPI - 多工具 Kubernetes 滲透測試鏡像。該 docker 映像包含 Kubernetes 滲透測試所需的所有最常用工具。</p><h2>文章推薦</h2><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcollabnix.com%2Ftop-5-alert-and-monitoring-tools-for-kubernetes%2F" target="_blank">Kubernetes 的 5 個最佳告警和監控工具</a></h3><p>這篇文章介紹了針對 Kubernetes 的前五個告警和監控工具。文章指出，Kubernetes 作為容器運行應用程序的首選選擇，具有可伸縮性、靈活性和彈性等優勢。然而，管理和監控 Kubernetes 可能會相當困難。因此，對於保證應用程序平穩可靠運行的關鍵是監控和告警。監控和告警是有效運營 Kubernetes 集羣的實踐方法，它們使您能夠收集集羣、節點、Pod、容器、服務和應用程序的指標、日誌和跟蹤數據，並使用儀錶板、圖表和表格對數據進行可視化和分析。通過規則、閾值和通知對異常、錯誤、故障和 SLA 違規進行告警，並通過調查根本原因、解決問題或升級到適當的團隊來採取行動。</p><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcollabnix.com%2Ftop-5-machine-learning-tools-for-kubernetes%2F" target="_blank">Kubernetes 的 5 大機器學習工具</a></h3><p>這篇文章介紹了在 Kubernetes 上進行機器學習的五個頂級工具。文章介紹了每個工具的特點、優勢和使用案例，以及選擇這些工具的標準，如功能性、易用性、流行度和創新性。通過使用這些工具，用户可以更輕鬆地在 Kubernetes 上進行機器學習任務，並提高其工作流程的效率和可靠性。</p><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fspacelift.io%2Fblog%2Fkubernetes-deployment-strategies" target="_blank">8 種不同類型的 Kubernetes 部署策略</a></h3><p>這篇文章介紹了 Kubernetes 的八種不同部署策略，包括 Recreating、Rolling、Blue/Green、Canary、A/B、Ramped Slow Rollout、Best-Effort Controlled Rollout 和 Shadow Deployment。它解釋了每種策略的優點和用途，幫助讀者在應用程序部署和升級時做出明智的選擇。</p><h2>雲原生動態</h2><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fkubescape.io%2Fblog%2F2023%2F09%2F19%2Fintroducing-kubescape-3%2F" target="_blank">Kubescape 3.0 發佈</a></h3><p>Kubescape 是 CNCF Kubernetes 安全姿態管理工具的下一代，日前發佈了 v3.0。</p><p>Kubescape 3.0 新增以下功能：</p><ul><li>將合規性和容器掃描結果存儲為 Kubernetes 集羣內的資源</li><li>通過命令行界面掃描容器鏡像的漏洞</li><li>報告集羣中所有鏡像的漏洞情況</li><li>全新的概覽安全掃描，幫助你為集羣安全設置基線</li><li>突出顯示高風險工作負載：那些如果受到損害可能造成最大危害的工作負載</li><li>改進的顯示輸出</li><li>新的基於能力的 Helm chart</li><li>每個工作負載、命名空間和集羣的 Prometheus 指標</li><li>通過 Prometheus Alertmanager 進行告警</li><li>將數據發送到集羣外的託管服務</li></ul><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.opencost.io%2Fblog%2Faks-cost-analysis" target="_blank">OpenCost 宣佈與 Microsoft AKS 成本分析工具集成</a></h3><p>OpenCost 正在與 Microsoft 的新 Azure Kubernetes Service（AKS）成本分析工具集成，以實現使用度量收集。Microsoft Azure 的客户現在可以根據 Kubernetes 特定的結構，原生地瞭解成本分配的可見性。</p><p>AKS 成本分析是針對標準和高級 AKS 羣集的附加組件，向客户提供免費的服務。它直接在 Azure 門户中提供成本分配報告。AKS 客户現在可以輕鬆地可視化其 Kubernetes 成本分配，作為進一步優化和異常檢測的基礎。</p><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fistio.io%2Flatest%2Fnews%2Freleases%2F1.20.x%2Fannouncing-1.20%2F" target="_blank">Istio 1.20.0 發佈</a></h3><p>Istio 1.20.0 發佈，這是 2023 年最後一個 Istio 版本，以下是該版本主要變化：</p><ul><li>網關 API</li><li>改進的外部名稱服務支持</li><li>一致的 Envoy 過濾器排序</li><li>對網絡 WasmPlugin 的擴展支持</li><li>TCP 元數據交換增強</li><li>插入根證書輪換</li><li>流量鏡像現在支持多個目標</li><li>...</li></ul><blockquote><p>本文由博客一文多發平台 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopenwrite.cn%3Ffrom%3Darticle_bottom" target="_blank">OpenWrite</a> 發佈！</p></blockquote></div>
                                    ]]>
            </description>
            <pubDate>Sun, 19 Nov 2023 10:20:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/4197945/blog/10149219</guid>
            <link>https://my.oschina.net/u/4197945/blog/10149219</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[運營商神操作：後台斷網、停用寬帶賬號，強迫用户更換光貓]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>近日，河南電視台都市頻道節目報道稱，河南周口聯通為了強迫用户更換光貓，<strong>公司在後台停掉用户的寬帶賬號，導致用户無法上網，然後讓工程師上門「維修」，謊稱光貓損壞，需要花 299 元換新</strong>。<strong>更換完後，聯通再在後台恢復用户的網絡</strong>。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-6bca55961849d5db6bafd2b8cf31a04abc6.png" referrerpolicy="no-referrer"></p><p>聯通公司不僅對老用户進行這種強制更換光貓的行為，還會在給新用户裝機的時候，故意使用破舊光貓，也就是之前強迫用户換新留下的，而再過一段時間之後，又會告訴用户使用的是舊光貓無法匹配，必須換新。聯通公司還會故意關掉用户的短信服務，在後台增加增值業務，之後再把短信功能打開，以此牟利。</p><p><img height="826" src="https://static.oschina.net/uploads/space/2023/1120/163843_Utox_2720166.png" width="1518" referrerpolicy="no-referrer"></p><p><img src="https://static.oschina.net/uploads/space/2023/1120/164043_bGMp_2720166.png" referrerpolicy="no-referrer"></p><p>周口聯通迴應稱，全力配合省公司調查組進行調查核實。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-5af067ca7f5336640898e328da5adc6109b.png" referrerpolicy="no-referrer"></p><p>來源：<em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnews.sina.com.cn%2Fs%2F2023-11-20%2Fdoc-imzvfrzw9582625.shtml" target="_blank">https://news.sina.com.cn/s/2023-11-20/doc-imzvfrzw9582625.shtml</a></u></em></p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 19 Nov 2023 08:31:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/267276</guid>
            <link>https://www.oschina.net/news/267276</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[阿里雲開源大數據產品年度發佈]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>本文根據 2023 雲棲大會演講實錄整理而成，演講信息如下：</p><p><strong>演講人</strong>：陳守元 | 阿里雲計算平台事業部開源大數據產品總監</p><p><strong>演講主題</strong>：阿里雲開源大數據產品年度發佈</p><p>隨着雲計算的不斷髮展，未來數據處理和應用的趨勢將圍繞 Cloud Native、Severless 和 Data+AI 展開。其中，雲原生架構已成為主流趨勢，因為它可以提高數據處理和應用程序的可伸縮性和靈活性，支持大規模部署和更快的響應時間。同時，Serverless 作為一種新型計算模式，可以提高處理效率、降低運營成本並減少資源浪費，其獨特的特點使得其成為處理大規模數據的理想選擇。此外，Data 與 AI 融合正在快速發展，不斷提高智能化和自動化程度，同時需要高質量的數據來支撐算法的準確性和有效性。</p><p><img src="https://oscimg.oschina.net/oscnet/up-a48d65a7b7035e480f3276674b7f31f68a3.png" alt="" referrerpolicy="no-referrer"></p><h2>EMR：面向下一代湖倉和全面 Serverless 化</h2><p>下面進入產品發佈環節，我們將圍繞上面三個點&nbsp;做哪些事情、有哪些發佈更好地服務用户上雲&nbsp;來講述我們產品的重點發布。</p><p><img src="https://oscimg.oschina.net/oscnet/up-4026c36c77d94f189e70fb9fe1cb0464515.png" alt="" referrerpolicy="no-referrer"></p><p>首先，我們來看 EMR。EMR 是一個雲原生開源大數據平台系統。對於 EMR 而言，線下 IDC 大量基於開源 Hadoop 生態構建的線下用户搬站上雲第一站就會選擇 EMR，因為改造代價特別地小，幾乎可以無縫平遷上雲。這對用户來説是具有巨大的人力資本和機器資本的節省。&nbsp;我們將阿里雲 EMR 定位為&nbsp;用户搬站上雲的第一站。</p><p>今年我們的產品矩陣做了升級，我們希望在雲上基於更多樣化的 IaaS 提供多樣化的 EMR 產品形態。EMR 通用版，核心解決的用户問題就是幫助用户的大數據系統平遷上雲，這也是和用户線下部署兼容度最高的方案。第二個是 EMR 容器版，即 EMR ACK 版。現在 IT 基礎設施的雲原生容器化基本上都深入人心，我們大量客户在雲上基於 IT 系統的構建都會選擇容器化的平台，例如阿里雲的 ACK。用户自然而然會聯想到如何把 Data 和 AI 的 workload 遷移到 IT 基礎設施的同一個集羣裏，完成 Data&amp;AI 的負載&nbsp;與 IT 設施負載混用，EMR 容器版，或者説 EMR onACK 就是幫用户解決這類問題的產品。</p><p>最後也是我們今天想強調的重點就是 EMR Serverless 版。對於 EMR Serverless 子產品線而言，內部有些 feature 或者功能&nbsp;在之前雲棲中已做了發佈。今天對於 EMR Serverless 產品線是一個更加完整的矩陣呈現，今天會重點講一下 Serverless Spark、Serverless StrarRocks 兩大主流 EMR 計算引擎的 Serverless 化，今天也是我們正式對外提出一個完整的 EMR Serverless 化的產品線矩陣。</p><p>EMR Serverless 版是 EMR 產品線形態中誕生最晚、發佈最新的一代產品和技術，其實 EMR 圍繞 Serverless 的佈局在一年前、兩年前都在緊鑼密鼓地進行。前面 OSS-HDFS、Serverless HDFS 這一塊其實在去年、前年已有發佈，但是今年我們做了更多的嘗試努力，我們希望把 EMR 上面主流的大數據計算引擎、存儲引擎、開發平台、元數據管理全都 Serverless 化，只有這樣方才能夠更好地滿足雲原生用户更好地利用大數據。Serverless Spark，更好地解決了湖倉場景下 Data ETL 的處理能力，Serverless StrarRocks 更好地解決了湖倉場景下 Data analytic 能力，Serverless HDFS 更好解決了湖倉場景下數據存儲能力，最後 EMR Stutio 幫助用户線下可以平遷體驗上雲，讓用户能夠更好使用雲上大數據基礎設施，同時還能免運維。所以 EMR 今年從計算，到存儲，到開發環境&nbsp;幾乎全部實現了 EMR 主力引擎和平台都能夠做到 Serverless 化，我們希望能夠把整個大數據開發運維閉環，從而進一步幫助雲原生上的開發者更好地把大數據用起來。</p><p><img src="https://oscimg.oschina.net/oscnet/up-e0e494088f0e316e87a203fb7a7b147a1c7.png" alt="" referrerpolicy="no-referrer"></p><p>下面仍然回到 EMR 主力場景， EMR 通用版，圍繞湖倉場景做了大量更新。EMR 主力場景仍然圍繞着湖倉處理，圍繞在湖倉計算、存儲、運維、開發做了大量的更新。在計算層面，我們核心還是降本提效，IaaS 層適配了新的倚天 CPU，PaaS 層做了 Native Spark RunTime，這些都是從 IaaS 層和 PaaS 層更好地幫助用户降本提效。存儲部分，Serverless HDFS (同時也稱之為 OSS-HDFS)&nbsp;很早已有發佈，但是在這一年希望讓 Serverless HDFS 和&nbsp;本地 HDFS 在使用層面給用户體驗完全一致，包括&nbsp;在&nbsp;文件性能、數據訪問、源數據獲取等方案&nbsp;做到幾乎完全一致。為上述目標，我們因此做了大量有關係統性能優化&nbsp;以及&nbsp;系統安全性優化。我們的 Open 文件性能的提升、DU 訪問源數據的提升，這些都是今年的成果。</p><p><img src="https://oscimg.oschina.net/oscnet/up-00bfea3732092d7e26b3743ad341b1f080a.png" alt="" referrerpolicy="no-referrer"></p><p>EMR 運維，這主要體現在兩個方面。在雲上來説 EMR 能結合到雲原生上面給用户創造比較大的平台價值就在於彈性，今年我們做到大量的彈性優化。我們大量客户給我們反饋説 EMR 的平台彈性越來越穩定；另外一個運維重點，即 EMR Doctor，我們希望通過 AI 的方式、自動化、智能化的運維平台方式幫助用户去解決開源大數據運維的問題。從社區開源大數據用户反饋來看，開源大數據使用最大的、最痛的點就是系統運維。如何長期有效地保證我們的業務在雲上健康地運行，這是很多用户上雲和雲下使用開源大數據非常大的痛點，EMR Doctor 就是解決這個問題。EMR 開發，即 EMR Studio，我們希望雲原生 Serverless 化託管了我們的開發平台、調度平台，幫助用户從線下的體驗完全平遷到雲上的一套體驗。以上均是 EMR 圍繞湖倉場景的重大更新。</p><p>最後仍然回到 EMR For AI，我們每個產品都在擁抱積極的變化，這裏分為三部分：EMR DataScience、EMR Doctor、EMR+DataWorks 的 Code Pilot。EMR DataScience 是在 EMR 的容器版裏面，我們提供了一個新的集羣叫 EMR DataScience，裏面內置了不少 AI 最流行的組件，包括 Pytorch、TF。我們希望用户在一個平台上既能夠處理大數據，同時還能夠雲原生地處理 AI 的工具，這是 EMR DataScience 幫助用户做的相關工作。EMR Doctor，這個工作前面提到希望用 AI 化、智能化的方式幫助用户實現 AIOps，能夠用自動化的手段定位問題、診斷問題、及早發現問題。EMR+Dataworks，今年 DataWorks 重磅的發佈就是 code pilot 的發佈，但是那上面作為一個平台實際上底下也對接了 EMR 等等，正好實際上 code pilot 也是平台引擎無關的 Feature，可以生成 EMR 裏面的 HIVE 代碼，用户就可以用 DataWorks 上面開發平台能夠通過自然語言生成 MaxCompute 的 SQL，能夠操作業務，這樣能夠極大地減少用户開發代碼的成本，這在 DataWorks 對外提供公測的時候歡迎去試用一下。</p><h2>Flink Streaming Lakehouse：新一代的流式湖倉新方案</h2><p>下面我們看一下 Flink Streaming Lakehouse。Lakehouse 這個概念其實在前幾年很火，原因就是對於一個 Lakehouse 的系統來説，既兼具了 Data Warehouse 的嚴謹，包括 ACID、版本的管理、數據格式的校驗等等；同時它還有 Data Lake 的靈活性，能夠放很多大量非結構化的文本，包括圖片、視頻、音頻、圖像等等。而 Lakehouse 同時能夠承載結構化的數據和非結構化的數據，這對用户來説是非常好的 AI 和大數據融合的底層存儲方案。但是我們看 Lakehouse 的過程中發現 Lakehouse 在時效性方面有非常大的問題，Flink 核心使命和價值就在幫助我們的客户解決大數據實時化轉型和升級。所以 Flink 社區&nbsp;和&nbsp;我們&nbsp;一起發佈了 Streaming Lakehouse 方案。</p><p><img src="https://oscimg.oschina.net/oscnet/up-37eae0cedf4dbaf6356c5188b319f6e8a02.png" alt="" referrerpolicy="no-referrer"></p><p>回到 Streaming Lakehouse 我主要從產品方向&nbsp;講三個場景要點。前面已經提到 Lakehouse 在 AI 時代下 Lakehouse 的方案會越來越重要，因為它既能存儲結構化的數據又能存儲非階段的數據，這個是大數據和 AI 一體化存儲的重要承載點。但是 Lakehouse 在實踐的過程中仍然遇到時效性的問題，整個 Lakehouse 的 Data Pipeline 串聯起來可能達到小時級別的延遲，從最開始的數據進入到數據價值的發揮，比如 BI、AI，能夠看到整個數據鏈路到小時級別，這其實對於用户來説要構建一個實時湖倉面臨很大的延遲。所以 Flink 希望一起幫助用户做到 Lakehouse 的實時化，通過流式、實時幫助用户做很大的提升。</p><p>最後是 Unified，其實 Flink 社區在前幾年一直主打 Unified Batch &amp; Streaming。我們希望在計算層面做到融合，就是流批一體。我們在開源社區推廣流批一體的方案時，發現如果用户只是計算層面的融合對於用户只能解決一半的問題。還有一半問題在於存儲，存儲仍然是兩套的存儲方案，兩套存儲和兩套數據因此會導致的離線和實時的數據不一致性對於用户來説是非常大的問題，所以 Flink 團隊和社區一起構建了 Paimon。Paimon 基於底層的分佈式文件系統，比如説 OSS 會構建一個 Unified 的 storage，既可以做流，也可以做批，我們稱之為批流一體的存儲。所以 Flink+Paimon 構成 Lakehouse 的方案，既具備 Unified 的 process，也可以具備 Unified 的 Storage，這一層合併在一起能夠真正完整地幫助用户實現流批一體的解決方案。這是我們 Streaming Lakehouse 的價值點，最終我們希望幫助用户在 Data+AI 時代下提供實時化、流式化和 Serverless 化的湖倉方案。</p><p>回到 Flink 主線，我們一直以來的使命就是希望幫助用户做到大數據的升級和轉型，所以追求實時場景下的性價比一直是 Flink 團隊一直以來努力的方向。追求實時化的性價比今年有兩個重要的點，一個是 Flink 全面擁抱了倚天，結合到倚天&nbsp;整個實時計算 Flink 綜合的性價比有 50% 的提升，這是 Flink 團隊結合 IaaS 層面做了大量優化。同時在 PaaS 層 Flink 企業級內核&nbsp;我們仍然在做大量優化，這其中包括算子的優化，以及未來我們會公佈 native runtime 的優化。這部分優化相比於開源 Flink 引擎，我們實時計算 Flink 版&nbsp;會有兩倍的提升，特別是在吞吐部分可以解決很多用户高吞吐量或者大流量的實時計算場景。</p><p><img src="https://oscimg.oschina.net/oscnet/up-93711ed92a4488a619f2f0cfa9e51e70d03.png" alt="" referrerpolicy="no-referrer"></p><h2>Elasticsearch:Serverless 和 Search for Data &amp; AI</h2><p>接下來講一下 Elasticsearch，這也是開源大數據很重要的組成部分。説到 Elasticsearch 可能大家更多仍然停留在比較早期 for data 的 search，就是全文的檢索，類似於搜索引擎要做全文的檢索。但今天我想告訴大家這個思想需要刷新一下，Elasticsearch 不僅是 for data 的 search，也是 for AI 的 search。我今天給大家重點會講一下 ES 如何從 Data 轉變成 Data+AI 的 search 系統。</p><p>第一個是我們的 Elasticsearch 的版本發佈。坦白地説，當前產品形態，即 ES on PaaS 的獨立集羣版本已經非常好地滿足我們中國公有云和專有云客户很多的市場需求，不少中大型公司都非常認可阿里雲的 ES 產品形態，產品客户受眾無論在基數以及未來增長都很不錯。但實際上隨着最近這一兩年客户在降本提效上提上了日程之後，發現有一批非常大的潛在客户以及中長尾的客户其實仍然對雲上的獨立集羣版本所帶來的成本仍然認為是比較大的上雲入門門檻。他們非常希望以低門檻甚至零門檻的方式開啓雲上的 ES，這就是我們 ES Serverless 要做的初衷，我們希望以一個零門檻的方式能夠幫助用户開啓雲上 Elasticsearch 的使用。</p><p><img src="https://oscimg.oschina.net/oscnet/up-dda1df3c99a6593d14261aabceb742084c0.png" alt="" referrerpolicy="no-referrer"></p><p>同時 Elasticsearch Serverless 也是我們國內首家支持通用場景的 ES 版本。去年我們也發佈了一個 Elasticsearch Serverless 版本，但更多解決日誌 ELK 場景的需求。但是該版本在數據一致性上會存在問題，所以今年我們進行大量的產品技術架構重構。本次 ES Serverless 的發佈是一個面向通用場景的升級發佈，這裏面不僅支持包括日誌場景，還支持訂單、金融等等場景，這裏面的數據一致性都可以得到很好的保障。這是我們今年發佈相比於去年發佈升級很不一樣的點。針對 ES Serverless 可以真正按量付費、秒級彈性、簡單運維，同時可以完全兼容開源的 ES，這是很多其他的廠商不一定能做到的。</p><p>下面重點強調 ES for AI 和 Data 的部分，標誌着 ES 真正從 Data 面向 Data&amp;AI 的搜索引擎。雲棲會場外面有很大的廣告欄，主打的是 ESRE 的發佈，這是 ES 公司重大的發佈。發佈的核心簡單跟大家説一下，就是支持 AI 相關檢索，包括向量檢索，包括多路並規的查詢優化，這些東西都是在 ES 內核重點打的點，幫助用户做 AI 檢索。阿里雲 ES 圍繞着 ES 最新的 AI 能力進行了大量方案集成，就是右邊的增強方案。我們跟達摩院 AI 方案做聯合，和 PAI—EAS 方案聯合，甚至會和社區一起做更多的聯合方案，這些方案能夠幫助我們的用户更好地在雲上用上阿里雲、達摩院 AI 的技術，和社區的 ES 更好地結合起來。所以我們希望通過 ES8.9 這個版本能夠幫助用户構建下一代面向 Data+AI 的檢索系統。</p><p><img src="https://oscimg.oschina.net/oscnet/up-47305474e3702aae7f01185fc4b3c7a7d65.png" alt="" referrerpolicy="no-referrer"></p><p>圍繞 ES 自研能力的升級，阿里雲 ES 是和 ES 公司一起合作，也是基於開源的 ES 做更多的優化孵化，其實是完全基於開源，也是完全兼容開源的，我們做了大量的增強。而這裏面做了三個升級，包括場景的升級，也就是日誌場景向通用場景的升級和改造。去年 ES 更多是做日誌場景、ELK 場景，今年的 ES Serverless 面向通用場景進行完全開放。另外就是有關搜索內核引擎的優化，包括讀寫分離、存算分離，這些更好地解決集羣穩定性問題、成本流控問題、資源彈性的問題。最後我們在購買鏈路和相關控制枱上做了比較大的體驗升級，我們非常推薦大家去用一用阿里雲 ES Serverless 版本，感受一下完全 Serverless 化的 ES。</p><h2>Milvus：AI 時代的搜索引擎</h2><p>今天最後一個，也是今年完全新的產品。前面全部是我們現有的功能、現有產品線的疊加，Milvus 這部分是我們今年要發佈的 AI 時代新的搜索引擎。目前，在向量檢索部分 Milvus 幾乎是全球最火、最亮眼的技術。我們會在 12 月份開啓向量檢索 Milvus 版本對外測試，相比於開源的 Milvus 來説會做相應產品企業級的增強。同時在兼容開源的 Milvus 之上，我們還會去結合達摩院的技術能夠提供更好的企業級向量檢索能力。同時在雲上肯定會做大量的產品聯合工作，包括和我們的存儲上有大量非結構化的數據可供用户檢索查詢。同時我們會跟 PAI 平台、達摩院 AI 模型做更多的深度集成，做 AI 向量檢索能力、做大模型向量支撐，這些方案未來都會在我們的產品之上構建。所以我們最終是希望能夠幫助雲上使用 Milvus 的用户更快、更方便、更低門檻構建 AI 時代下的搜索系統。</p><p><img src="https://oscimg.oschina.net/oscnet/up-684d85b432854ecd04eafd9cad2a5a50df8.png" alt="" referrerpolicy="no-referrer"></p><p>回顧一下我們講了大數據的三個趨勢。Cloud Native，整個 IT 投資都在往雲上加速轉型。Serverless 化，我們認為未來的 PaaS 平台最終全部都會歸到 Serverless 化，所有 AI 產品、大數據產品和其他 PaaS 產品都會歸到 Serverless 化。最後是 Data+AI，未來 AI 和大數據會做徹底的融合打通，這也是我們整個開源大數據一直以來在積極圍繞這三個點做佈局。</p><p>最後希望大家多多關注阿里雲，關注阿里雲的開源大數據，謝謝大家！</p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 19 Nov 2023 08:00:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/5583868/blog/10149103</guid>
            <link>https://my.oschina.net/u/5583868/blog/10149103</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[OpenAI 前 CEO 和總裁 Sam Altman & Greg Brockman 加入微軟]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>微軟 CEO Satya Nadella 剛剛<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftwitter.com%2Fsatyanadella%2Fstatus%2F1726509045803336122" target="_blank">發佈推特稱</a></u>，OpenAI 前 CEO 和總裁 Sam Altman &amp; Greg Brockman 將加入微軟，他們負責領導新的 AI 研究團隊。</p><p><img height="1176" src="https://static.oschina.net/uploads/space/2023/1120/155839_imd2_2720166.png" width="1264" referrerpolicy="no-referrer"></p><p>Sam Altman 轉發了這條推文，<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftwitter.com%2Fsama%2Fstatus%2F1726510261509779876" target="_blank">並説道</a></u>：不忘使命，砥礪前行。</p><p><img height="678" src="https://static.oschina.net/uploads/space/2023/1120/161424_UZuO_2720166.png" width="1272" referrerpolicy="no-referrer"></p><p>Satya Nadella <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftwitter.com%2Fsatyanadella%2Fstatus%2F1726516824597258569" target="_blank">評論了 Sam 的推文</a>：</p><blockquote><p>Sam，我對你以首席執行官身份加入新團隊感到無比激動，你將為我們的創新工作開闢新的道路。</p><p>多年來，我們學會瞭如何為創始人和創新者提供空間，讓他們在微軟內部發展獨立的身份和文化，這一點從 GitHub、Mojang Studios 到 LinkedIn 的發展中可見一斑。我迫不及待想看到你也能做到。</p></blockquote><p><img height="1372" src="https://static.oschina.net/uploads/space/2023/1120/164746_aILD_2720166.png" width="1286" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 19 Nov 2023 08:00:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/267272</guid>
            <link>https://www.oschina.net/news/267272</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Altman 迴歸失敗，OpenAI 董事會聘請 Twitch 前高管擔任 CEO]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">據</span>&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.theinformation.com%2Farticles%2Fbreaking-sam-altman-will-not-return-as-ceo-of-openai" target="_blank">The Information</a>&nbsp;<span style="color:#000000">和</span>&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bloomberg.com%2Fnews%2Farticles%2F2023-11-20%2Fopenai-s-board-hires-former-twitch-executive-shear-as-ceo" target="_blank">Bloomberg</a>&nbsp;<span style="color:#000000">消息稱，經過一個週末的談判，OpenAI 董事會決定不顧投資者要求 Sam Altman 復職的呼聲，聘請前 Twitch 首席執行官 Emmett Shear 來擔任該公司的臨時首席執行官。</span></p><p><span style="color:#000000">OpenAI 聯合創始人兼董事會董事 Ilya Sutskever 向員工表示，公司高管有嘗試努力挽回 Sam Altman，但沒有成功，Altman</span>&nbsp;<span style="color:#000000">將不會回到 OpenAI。</span></p><p><img alt="" height="300" src="https://static.oschina.net/uploads/space/2023/1120/153143_G4mc_4252687.png" width="300" referrerpolicy="no-referrer"></p><p><span style="color:#000000">Emmett Shear 將從 Mira Murati 手中接過這一職位，這也意味着 OpenAI 在三天內迎來了第三任首席執行官。此前，在 Sam Altman 被突然解僱後，曾有大批 OpenAI 員工開始在社交媒體上表達了對 Altman 的支持，Mira Murati 也在此列。</span></p><p><span style="color:#000000">Shear 在 2006 年幫助推出了遊戲流媒體網站 Twitch，並於 2014 年以近 10 億美元的價格將其出售給亞馬遜。今年早些時候，Shear 辭去了 Twitch 的首席執行官一職。</span></p><p><span style="color:#000000">有知情人士表示，Shear 之所以能贏得 OpenAI 董事會的青睞，是因為他能意識到人工智能所帶來的生存威脅。此外，<span style="background-color:#ffffff">Open AI 的董事會已經至少聯繫了兩名科技行業的知名高管，希望其中一位可以擔任公司董事長的職位。</span></span></p><p><span style="color:#000000">OpenAI 及其最大投資者微軟的發言人目前暫未迴應相關置評請求。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 19 Nov 2023 07:17:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/267256/openai-twitch-ceo-shear</guid>
            <link>https://www.oschina.net/news/267256/openai-twitch-ceo-shear</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Kotlin Multiplatform 公佈 2024 年開發路線圖]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">繼幾周前宣佈推出</span><a href="https://www.oschina.net/news/265360/kotlin-multiplatform-stable">第一個穩定版本</a><span style="color:#000000">後，JetBrains <span style="background-color:#ffffff">發佈了 2024 年 </span>Kotlin Multiplatform&nbsp;<span style="background-color:#ffffff">的<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.jetbrains.com%2Fkotlin%2F2023%2F11%2Fkotlin-multiplatform-development-roadmap-for-2024%2F" target="_blank">開發路線圖</a>。 其</span></span><span style="background-color:#ffffff; color:#19191c">目標是在 2024 年對 Kotlin Multiplatform 核心技術、Compose Multiplatform、KMP 工具和 KMP 庫進行一系列改進。</span></p><p><span style="color:#000000">「我們致力於使 Compose Multiplatform 成為一個框架，允許創建在所有受支持的平台上看起來都同樣美觀且高性能的應用程序。」</span></p><p><span style="color:#000000"><img alt="" height="281" src="https://oscimg.oschina.net/oscnet/up-8af6c9da66280ab985d71d05df036c402a9.png" width="500" referrerpolicy="no-referrer"></span></p><p><span style="color:#000000">目前，該公司對&nbsp;<span style="background-color:#ffffff">Compose Multiplatform 的主要關注點是將 iOS 版 Compose 升級到 Beta 版。同時還計劃：</span></span></p><ul style="margin-left:0; margin-right:0"><li>使所有 Jetpack Compose core API 和組件實現多平台。</li><li>提高 iOS 上的渲染性能。</li><li>使 Compose for iOS 應用程序中的滾動和文本編輯行為與 iOS 原生應用程序中的行為相同。</li><li>實現通用 API 以共享所有類型的資源。</li><li>與 iOS 和&nbsp;Desktop accessibility API 集成。</li><li>提供多平台導航解決方案。</li></ul><p><span style="color:#000000">以及致力於改進 Compose for Web，尤其<span style="background-color:#ffffff">是 Wasm</span>。例如：</span></p><ul><li><span style="color:#000000">允許你移植現有代碼；</span></li><li><span style="color:#000000">支持不同的屏幕尺寸、方向和密度；</span></li><li><span style="color:#000000">支持通過鼠標、觸摸屏、物理鍵盤或屏幕鍵盤進行輸入；</span></li><li><span style="color:#000000">改善性能和 binary size。</span></li></ul><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000"><span style="background-color:#ffffff">JetBrains 還將對 IDE 進行多項改進，</span>包括：增強對 Compose Multiplatform 的支持，包括常見代碼的實時預覽和可視化調試工具；<span style="background-color:#ffffff">項目配置幫助；</span>多平台項目所有部分的統一和增強的調試體驗。</span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="display:none">&nbsp;</span><span style="color:#000000"><span style="background-color:#ffffff">為了支持想要與 iOS target&nbsp;共享代碼的開發人員，項目團隊將致力於直接從 Kotlin 導出到 Swift。「流行的 Kotlin Multiplatform 應用場景之一是與 iOS target&nbsp;共享代碼。我們希望關注在代碼庫中使用 Kotlin Multiplatform 框架的 iOS 開發人員的開發體驗......它將消除 Objective-C 瓶頸，從而提供更廣泛的 Swift 語言支持和更自然的 API 導出。」</span></span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000">還在專門為 Kotlin 庫作者創建工具，旨在提高 Kotlin API 導出到 Swift 時的兼容性和用户友好性。一些其他舉措包括，<span style="background-color:#ffffff">提高 Kotlin/Native 編譯的性能、改進 CocoaPods 集成以及添加對使用 SwiftPM 導出框架的支持。&nbsp;</span></span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000">此外，隨着 Kotlin <span style="background-color:#ffffff">Multiplatform&nbsp;</span>生態系統的快速發展，庫的向後兼容性變得至關重要。<span style="background-color:#ffffff">JetBrains 將重點關注改進 klib 格式，以允許庫創建者利用他們的 JVM 庫構建技能；</span><span style="background-color:#ffffff">在 Kotlin Multiplatform&nbsp;</span><span style="background-color:#ffffff">庫中實現與 JVM 相同的代碼內聯行為；以及提供一個工具來確認庫的公共 API 沒有以不兼容的方式進行了更改。</span></span></p><p style="margin-left:0; margin-right:0; text-align:start">更多詳情可<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.jetbrains.com%2Fkotlin%2F2023%2F11%2Fkotlin-multiplatform-development-roadmap-for-2024%2F" target="_blank">查看官方博客</a>。</p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 19 Nov 2023 04:00:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/267112/kotlin-multiplatform-development-roadmap-2024</guid>
            <link>https://www.oschina.net/news/267112/kotlin-multiplatform-development-roadmap-2024</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[🔥 周熱點 | OpenAI 內訌，奧特曼被驅逐；俄羅斯操作系統 Aurora OS 5.0 全新 UI 亮相；.NET 8 正式 GA.....]]>
            </title>
            <description>
                <![CDATA[回顧一週熱門資訊。2023.11.13-2023.11.19]]>
            </description>
            <pubDate>Sun, 19 Nov 2023 03:50:00 GMT</pubDate>
            <guid isPermaLink="false">https://mp.weixin.qq.com/s?__biz=MzA4OTI5NjUwOA==&#38;mid=2649093971&#38;idx=1&#38;sn=3f2a763dda28e1c46c3aeca3f287766e&#38;chksm=880c4c40bf7bc556325bae39dd086d3b0d3cea17b35ad8c141b34669fc8c632bc161023a587a&#38;token=584579097&#38;lang=zh_CN#rd</guid>
            <link>https://mp.weixin.qq.com/s?__biz=MzA4OTI5NjUwOA==&#38;mid=2649093971&#38;idx=1&#38;sn=3f2a763dda28e1c46c3aeca3f287766e&#38;chksm=880c4c40bf7bc556325bae39dd086d3b0d3cea17b35ad8c141b34669fc8c632bc161023a587a&#38;token=584579097&#38;lang=zh_CN#rd</link>
        </item>
        <item>
            <title>
                <![CDATA[Linux Kernel 6.6 確認成為 LTS 版本]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">Greg Kroah-Hartman 已經宣佈 Linux Kernel 6.6 版本為長期支持 (LTS) 版本；支持期限到 2026 年 12 月。</span></p><p><span style="color:#000000">Linux Kernel 6.6 於 10 月 29 日正式發佈，是一次包含了新功能、硬件支持、安全增強和性能改進的重大更新。具體包括有：引入了 EEVDF scheduler，最終實現了對 Intel Shadow Stack 的支持，為 Nouveau DRM 驅動程序添加了 Mesa NVK Vulkan 驅動程序所需的&nbsp;user-space API，繼續支持即將到來的 Intel 和 AMD 平台，以及大量的其他驅動程序改進和一些不錯的性能優化等。</span></p><p><img height="254" src="https://oscimg.oschina.net/oscnet/up-40bae094eb2126579af39e14031fa92878c.png" width="700" referrerpolicy="no-referrer"></p><p><span style="color:#000000">一般來説，年度 LTS 內核往往是該日曆年的最後一個穩定內核版本。Linux 6.6 於十月底發佈，Linux 6.7 預計可能會在 2023 年的最後幾天或者 2024 年年初達到穩定。但考慮到 6.7 版本規模較大，且年末的假期往往會放慢測試和 bug 修復的速度，導致相關週期拖長，因此 6.7 版本大概率還是可能在 2024 年初登陸。</span></p><p><span style="color:#000000">目前，Kernel.org 已更新相關版本信息。Linux 6.6 生命週期將將截止 2026 年 12 月；與此同時，Linux 6.1、5.15 和 5.10 也將於 2026 年 12 月結束生命週期。因此根據當下的政策，Linux 6.6 LTS 將在未來三年內得到維護，不過也有消息稱內核開發人員一直在討論將 LTS 支持期縮短為 2 年。</span></p><p><span style="color:#000000">更多詳情可查看<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.kernel.org%2Fcategory%2Freleases.html" target="_blank">此處</a>。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 19 Nov 2023 03:36:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/267220/linux-6-6-lts</guid>
            <link>https://www.oschina.net/news/267220/linux-6-6-lts</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Altman 以訪客身份回到 OpenAI，和公司高管會面談判]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>據 The Information 報道，OpenAI 首席戰略官 Jason Kwon 在員工備忘錄中表示，<strong>上週五離職的 Sam Altman 等高管或將會回到公司</strong>。</p><p>而 Altman 本人也在週一<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftwitter.com%2Fsama%2Fstatus%2F1726345564059832609" target="_blank">推文</a></u>寫道「這是我第一次也是最後一次帶這玩意」，配圖是他手持 OpenAI 訪客工牌的自拍，表示他持訪客證明造訪了 OpenAI 總部，與公司董事會討論某事。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-01348c9bedfa830267784f185d7e8e2dbeb.png" referrerpolicy="no-referrer"></p><p>有消息稱，包括微軟在內的投資者正在向 OpenAI 董事會施壓，要求他們同意 Sam Altman 等離職高管迴歸 OpenAI 工作。</p><p>目前尚不能確定 Altman 等人是否會回到 OpenAI 繼續工作。有消息稱，Altman 正計劃同前 OpenAI 總裁 Greg Brockman 一起成立一間新的 AI 公司。</p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 19 Nov 2023 02:11:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/267200</guid>
            <link>https://www.oschina.net/news/267200</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[中國科學院軟件所在分組加密算法差分密碼分析方面取得進展]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">中國科學院軟件研究所可信智能系統研究團隊在分組加密算法的差分密碼分析方面取得<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FbrkeBtNVsRP27RgnXZLnVg" target="_blank">進展</a>。該工作設計了一個面向分組加密算法的領域編程語言 EasyBC，在此基礎上提出了通用、可擴展的差分密碼分析方法，研製了全自動分析工具平台 EasyBC （如圖 1）。</span></p><p><span style="color:#000000">該研究成果以_EasyBC: A Cryptography-Specific Language for Security Analysis of Block Ciphers against Differential Cryptanalysis_為題被編程語言國際頂級會議 POPL 2024 錄用，通訊作者是軟件所計算機科學國家重點實驗室宋富研究員。</span></p><p><span style="color:#000000"><img alt="" height="122" src="https://oscimg.oschina.net/oscnet/up-3680dde4b4183fc67c37f117d71002e2e79.png" width="500" referrerpolicy="no-referrer"></span></p><p><em><span style="color:#000000">圖 1. EasyBC 平台流程圖</span></em></p><p><span style="color:#000000">分組加密算法（block cipher）是將明文分成多個等長的模塊（block），使用對稱密鑰對每組分別加密或解密，廣泛應用於電子郵件加密、銀行交易轉帳等多個領域。作為極其重要的加密協議組成，主流分組加密算法有中國國家密碼管理局頒佈的 SM1、SM4 和 SM7，美國政府核定的標準算法 AES 和 3DES。而差分密碼分析在評估分組加密算法的安全性方面發揮着核心作用，是分組加密算法標準化不可或缺的安全性分析手段。當前已有的差分密碼分析方法在通用性、自動化程度方面存在一定不足，同時建模過程複雜導致用户需要熟悉大量的建模方法及底層分析工具的應用。</span></p><p><span style="color:#000000">為解決上述不足，研究團隊設計了一種分組加密算法的密碼學專用高級編程語言 EasyBC，提供了完整的語法、類型和語義的形式定義，為分組加密算法安全性自動分析奠定了良好基礎；提出了三種不同分析精度和性能的差分密碼分析方法，不僅統一和優化了已有的各類加密操作的建模方法，並提出了多種新的建模方法。</span></p><p><span style="color:#000000">研究團隊實現了 23 個加密原語，包括美國國家標準與技術研究院（National Institute of Standards and Technology，NIST）認證加密方案的底層置換算法以及多種常用分組加密算法（如圖 2）；並對其中的分組密碼原語進行了安全性分析（如圖 3），進而驗證了 EasyBC 語言的表達能力以及 EasyBC 工具平台安全性自動分析的有效性。</span></p><p><span style="color:#000000"><img alt="" height="184" src="https://oscimg.oschina.net/oscnet/up-6c84d792455028442affb5312288fbac624.png" width="500" referrerpolicy="no-referrer"></span></p><p><em><span style="color:#000000">圖 2.EasyBC 語言實現的 23 個加密原語</span></em></p><p><em><span style="color:#000000"><img alt="" height="171" src="https://oscimg.oschina.net/oscnet/up-55a59db5baf9240d59fc4e82c667f38b199.png" width="500" referrerpolicy="no-referrer"></span></em></p><p><em><span style="color:#000000">圖 3.Word-wise 實現的加密原語差分密碼安全性分析結果</span></em></p><p><span style="color:#000000">該研究對分組加密算法的差分密碼分析研究具有重要意義，為後續密碼學相關研究者們進行分組加密算法的安全性全自動分析和各類運算操作建模方法性能評估提供了良好的研究基礎和平台支撐。</span></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:left"><strong>論文信息：</strong></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:left"><em>EasyBC: A Cryptography-Specific Language for Security Analysis of Block Ciphers against Differential Cryptanalysis</em>. Pu Sun (ShanghaiTech University), Fu Song* (Institute of Software Chinese Academy of Sciences, and University of Chinese Academy of Sciences), Yuqi Chen (ShanghaiTech University), Taolue Chen (Birkbeck, University of London). Proc. ACM Program. Lang. 8, POPL, Article 29 (January 2024), 33 pages.<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoi.org%2F10.1145%2F3632871" target="_blank">https://doi.org/10.1145/3632871</a></p></div>
                                    ]]>
            </description>
            <pubDate>Sat, 18 Nov 2023 04:31:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/267024</guid>
            <link>https://www.oschina.net/news/267024</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[GROMACS —— 分子動力學模擬工具包]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>GROMACS（全稱：GROningen MAchine for Chemical Simulations，格羅寧根化學模擬體系），是用於研究生物分子體系的分子動力學模擬工具包，主要用來模擬研究蛋白質、脂質、核酸等生物分子的性質。</p><p>它可以用分子動力學、隨機動力學或者路徑積分方法模擬溶液或晶體中的任意分子，進行分子能量的最小化，分析構象等。</p><p>它的模擬程序包包含 GROMACS 力場 (蛋白質、核苷酸、糖等)，研究的範圍可以包括玻璃和液晶、到聚合物、晶體和生物分子溶液。</p><p>GROMACS 是一個功能強大的分子動力學的模擬軟件，其在模擬大量分子系統的牛頓運動方面具有極大的優勢。</p><blockquote><p>分子動力學模擬是分子模擬中最接近實驗條件的模擬方法。它能夠從原子層面給出體系的微觀演變過程，直觀的展示實驗現象發生的機理與規律。</p><p>因此，分子動力學模擬在生物，藥學，化學以及材料科學的研究中發揮着越來越重要的作用。</p></blockquote><p>GROMACS 起初由荷蘭格羅寧根大學生物化學系開發，目前由來自世界各地的大學和研究機構維護。</p><p><strong>主要功能</strong></p><ul><li><p>支持基本動力學相關算法，包括牛頓力學及隨機動力學積分器、能量最小化、正則模式分析等。</p></li><li><p>支持温度及壓強控制，支持基於 SHAKE 和 P-LINCS 的完全約束算法，支持多種幾何約束。</p></li><li><p>支持 AMBER、CHARMM 及 OPLS 等常見經典力場。</p></li><li><p>支持 QM/MM 混合動力學，可對接 GAMESS、Orca 等量化軟件。</p></li></ul><p>它可以用於上百萬個粒子體系的分子動力學模擬研究，尤其是生物體系，如磷脂雙分子層生物膜、蛋白質、藥物分子等。</p><p><img src="https://static.oschina.net/uploads/space/2023/1102/194131_DK4t_2720166.png" referrerpolicy="no-referrer"></p><p>此外，GROMACS 能夠非常快速地計算非鍵作用，因此也可用於非生物體系，如聚合物、一些有機物、無機物等。</p><p><img src="https://static.oschina.net/uploads/space/2023/1102/194200_MtCm_2720166.png" referrerpolicy="no-referrer"></p><p><strong>核心優勢</strong></p><ul><li><p>開源軟件、可免費使用</p></li><li><p>力場較全面且容易擴充</p></li><li><p>操作方便，相關教程也多</p></li><li><p>算法性能好，計算效率高</p></li></ul><p>GROMACS 最突出的特色和優勢是高效，無論串行還是並行版本。</p><p><img src="https://static.oschina.net/uploads/space/2023/1102/194219_S3QX_2720166.png" referrerpolicy="no-referrer"></p></div>
                                                                ]]>
            </description>
            <pubDate>Sat, 18 Nov 2023 03:38:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/p/gromacs</guid>
            <link>https://www.oschina.net/p/gromacs</link>
        </item>
        <item>
            <title>
                <![CDATA[Gitee 推薦 | 網絡自動化領域解決方案框架 NetAxe]]>
            </title>
            <description>
                <![CDATA[<p align="center"><img src="https://gitee.com/iflytek/NetAxe/raw/master/readme/logo.png" alt="netaxe" referrerpolicy="no-referrer"></p><p align="center"><img src="https://img.shields.io/badge/Python-brightgreen.svg" referrerpolicy="no-referrer"><img src="https://img.shields.io/badge/Django-orange.svg" referrerpolicy="no-referrer"><img src="https://img.shields.io/badge/FastAPI-brightgreen.svg" referrerpolicy="no-referrer"><img src="https://img.shields.io/badge/Vue3-blue.svg" referrerpolicy="no-referrer"><img src="https://img.shields.io/badge/Vite-orange.svg" referrerpolicy="no-referrer"><img src="https://img.shields.io/badge/NaiveUI-blue.svg" referrerpolicy="no-referrer"><img src="https://img.shields.io/badge/license-Apache-green.svg" referrerpolicy="no-referrer"><a href="https://gitee.com/NetAxeClub" target="_blank"><img src="https://img.shields.io/badge/Author-NetAxeClub-orange.svg" referrerpolicy="no-referrer"></a></p><p align="center"><a target="_blank" href="https://gitee.com/link?target=https%3A%2F%2Fnetaxe.github.io">Netaxe 官方文檔</a> |  <a target="_blank" href="https://gitee.com/link?target=http%3A%2F%2F47.99.86.164%3A9980">在線預覽</a></p><h2><a id="user-content-項目介紹" class="anchor" href="https://gitee.com/iflytek/NetAxe#%E9%A1%B9%E7%9B%AE%E4%BB%8B%E7%BB%8D"></a>項目介紹</h2><p><strong>專注網絡自動化領域的整體架構解決方案</strong></p><p>[ NetAxe ]是一個網絡自動化領域解決方案框架，通過微服務和微前端的方式構建的應用集合，主要有資源管理、配置管理、自動化、網絡拓撲、地址定位、地址管理等等功能集合，同時各個微應用支持插件形式的能力集成，方便用户自行擴展。</p><h2><a id="user-content-組織地址" class="anchor" href="https://gitee.com/iflytek/NetAxe#%E7%BB%84%E7%BB%87%E5%9C%B0%E5%9D%80"></a>組織地址</h2><p><a href="https://gitee.com/NetAxeClub">NetAxeClub</a></p><p>致力於網絡自動化工具和平台開發</p><p>聯繫郵箱:<a href="mailto:netaxe@qun.mail.163.com">netaxe@qun.mail.163.com</a></p><h2><a id="user-content-文檔説明" class="anchor" href="https://gitee.com/iflytek/NetAxe#%E6%96%87%E6%A1%A3%E8%AF%B4%E6%98%8E"></a>文檔説明</h2><p>👇👇👇👇👇👇👇👇👇👇👇</p><p>📚 <a href="https://gitee.com/link?target=https%3A%2F%2Fnetaxe.github.io%2F">NetAxe 文檔教程使用説明</a> : <a href="https://gitee.com/link?target=https%3A%2F%2Fnetaxe.github.io%2F">https://netaxe.github.io/</a></p><p>👆👆👆👆👆👆👆👆👆👆👆</p><h2><a id="user-content-項目預覽" class="anchor" href="https://gitee.com/iflytek/NetAxe#%E9%A1%B9%E7%9B%AE%E9%A2%84%E8%A7%88"></a>項目預覽</h2><p>👇👇👇👇👇👇👇👇👇👇👇</p><p><a href="https://gitee.com/link?target=http%3A%2F%2F47.99.86.164%3A9980">體驗環境</a> 賬號密碼：admin/123456</p><p>僅在工作時間開啓 (9:30-18:00)</p><p>👆👆👆👆👆👆👆👆👆👆👆</p><h2><a id="user-content-平台架構圖" class="anchor" href="https://gitee.com/iflytek/NetAxe#%E5%B9%B3%E5%8F%B0%E6%9E%B6%E6%9E%84%E5%9B%BE"></a>平台架構圖</h2><p><img src="https://cdn.staticaly.com/gh/xuehaoweng/netaxe-image@master/%E6%9E%B6%E6%9E%84%E5%9B%BE.3vrmin46me00.webp" alt="平台架構圖" referrerpolicy="no-referrer"></p><h2><a id="user-content-1 平台登錄頁" class="anchor" href="https://gitee.com/iflytek/NetAxe#1%E5%B9%B3%E5%8F%B0%E7%99%BB%E5%BD%95%E9%A1%B5"></a>1.平台登錄頁</h2><p><img src="https://cdn.staticaly.com/gh/xuehaoweng/netaxe-image@master/netaxe-login.78afwmigsc00.webp" alt="登錄頁面" referrerpolicy="no-referrer"></p><h2><a id="user-content-2 資產管理" class="anchor" href="https://gitee.com/iflytek/NetAxe#2%E8%B5%84%E4%BA%A7%E7%AE%A1%E7%90%86"></a>2.資產管理</h2><p><img src="https://cdn.staticaly.com/gh/xuehaoweng/netaxe-image@master/golang.63zo8r1zsjs0.webp" alt="資產管理" referrerpolicy="no-referrer"></p><h2><a id="user-content-3 配置差異比較" class="anchor" href="https://gitee.com/iflytek/NetAxe#3%E9%85%8D%E7%BD%AE%E5%B7%AE%E5%BC%82%E6%AF%94%E8%BE%83"></a>3.配置差異比較</h2><p><img src="https://cdn.staticaly.com/gh/xuehaoweng/netaxe-image@master/netaxe-git-diff.60gnker70dk0.webp" alt="配置差異比較" referrerpolicy="no-referrer"></p><h2><a id="user-content-4webssh" class="anchor" href="https://gitee.com/iflytek/NetAxe#4webssh"></a>4.Webssh</h2><p><img src="https://cdn.staticaly.com/gh/xuehaoweng/netaxe-image@master/netaxe-webssh.3rs5vtioxe80.webp" alt="Webssh" referrerpolicy="no-referrer"></p><h2><a id="user-content-5 接口清單" class="anchor" href="https://gitee.com/iflytek/NetAxe#5%E6%8E%A5%E5%8F%A3%E6%B8%85%E5%8D%95"></a>5.接口清單</h2><p><img src="https://cdn.staticaly.com/gh/xuehaoweng/netaxe-image@master/netaxe-interface.5pje0o1za4w0.webp" alt="接口清單" referrerpolicy="no-referrer"></p><h2><a id="user-content-6 採集方案" class="anchor" href="https://gitee.com/iflytek/NetAxe#6%E9%87%87%E9%9B%86%E6%96%B9%E6%A1%88"></a>6.採集方案</h2><p><img src="https://cdn.staticaly.com/gh/xuehaoweng/netaxe-image@master/netzxe-collect.4yf0qcxemhk0.webp" alt="採集方案" referrerpolicy="no-referrer"></p><h2><a id="user-content-7 任務列表" class="anchor" href="https://gitee.com/iflytek/NetAxe#7%E4%BB%BB%E5%8A%A1%E5%88%97%E8%A1%A8"></a>7.任務列表</h2><p><img src="https://cdn.staticaly.com/gh/xuehaoweng/netaxe-image@master/netaxe-task.58uns0zatss0.webp" alt="任務列表" referrerpolicy="no-referrer"></p><h2><a id="user-content-8 任務調度管理" class="anchor" href="https://gitee.com/iflytek/NetAxe#8%E4%BB%BB%E5%8A%A1%E8%B0%83%E5%BA%A6%E7%AE%A1%E7%90%86"></a>8.任務調度管理</h2><p><img src="https://cdn.staticaly.com/gh/xuehaoweng/netaxe-image@master/netaxe-dispatch.3x68huinuzi0.webp" alt="任務調度管理" referrerpolicy="no-referrer"></p><h2><a id="user-content-9-地址管理" class="anchor" href="https://gitee.com/iflytek/NetAxe#9-%E5%9C%B0%E5%9D%80%E7%AE%A1%E7%90%86"></a>9. 地址管理</h2><p><img src="https://cdn.staticaly.com/gh/xuehaoweng/netaxe-image@master/ipam.3vspimj3jf20.webp" alt="地址管理" referrerpolicy="no-referrer"></p><h2><a id="user-content-10-權限中心" class="anchor" href="https://gitee.com/iflytek/NetAxe#10-%E6%9D%83%E9%99%90%E4%B8%AD%E5%BF%83"></a>10. 權限中心</h2><p><img src="https://cdn.staticaly.com/gh/xuehaoweng/netaxe-image@master/rbac.6k2qnc2yqxk0.webp" alt="權限中心" referrerpolicy="no-referrer"></p><h2><a id="user-content-交流羣" class="anchor" href="https://gitee.com/iflytek/NetAxe#%E4%BA%A4%E6%B5%81%E7%BE%A4"></a>交流羣</h2><blockquote><p>掃碼添加好友，提交入羣申請。</p></blockquote><p><img src="https://cdn.staticaly.com/gh/xuehaoweng/netaxe-image@master/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20230106172200.240x6tqonx9c.webp" alt="NetAxe 開源社區" referrerpolicy="no-referrer"></p><h2><a id="user-content--參與貢獻" class="anchor" href="https://gitee.com/iflytek/NetAxe#-%E5%8F%82%E4%B8%8E%E8%B4%A1%E7%8C%AE"></a>🤝 參與貢獻</h2><p>歡迎你參與到 NetAxe 項目的建設中來！🎉</p><p>我們可以一起：</p><ul><li>🎁 設計和開發功能模塊</li><li>⭐ 討論實際運維場景和自動化的落地實踐</li><li>🎊 結識一羣熱愛學習、熱愛開源的朋友</li></ul><h2><a id="user-content--維護者" class="anchor" href="https://gitee.com/iflytek/NetAxe#-%E7%BB%B4%E6%8A%A4%E8%80%85"></a>✨ 維護者</h2><p>維護者是做出傑出貢獻且在社區長期活躍的 NetAxe 社區成員。</p><ul><li><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FM87NET">jamlee</a></li><li><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fxuehaoweng">xuehaoweng</a></li></ul><h2><a id="user-content--貢獻者" class="anchor" href="https://gitee.com/iflytek/NetAxe#-%E8%B4%A1%E7%8C%AE%E8%80%85"></a>✨ 貢獻者</h2><p>貢獻者是在 NetAxe 社區中合併了 1 個或多個 PR 的社區成員。
虛位以待。。。</p><p><a href="https://gitee.com/link?target=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FsP2dC0txvBhExYxbjq94UA">PR 提交指南</a></p><p>github:&nbsp;<a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fiflytek%2FNetAxe">https://github.com/iflytek/NetAxe</a><br>
gitee:&nbsp;<a href="https://gitee.com/iflytek/NetAxe">https://gitee.com/iflytek/NetAxe</a><br>
NetAxe 官網文檔:<a href="https://gitee.com/link?target=https%3A%2F%2Fnetaxe.github.io%2F">https://netaxe.github.io/</a></p>]]>
            </description>
            <pubDate>Sat, 18 Nov 2023 03:32:00 GMT</pubDate>
            <guid isPermaLink="false">https://gitee.com/iflytek/NetAxe</guid>
            <link>https://gitee.com/iflytek/NetAxe</link>
        </item>
        <item>
            <title>
                <![CDATA[每日一博 | 彩虹橋架構演進之路 - 性能篇]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h1>一、前言</h1><p>一年前的《<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzkxNTE3ODU0NA%3D%3D%26mid%3D2247488943%26idx%3D1%26sn%3D867041a53c801b5f83457fa622bb4909%26scene%3D21%23wechat_redirect" target="_blank">彩虹橋架構演進之路</a>》側重探討了穩定性和功能性兩個方向。在過去一年中，儘管業務需求不斷增長且流量激增了數倍，彩虹橋仍保持着零故障的一個狀態，算是不錯的階段性成果。而這次的架構演進，主要分享一下近期針對性能層面做的一些架構調整和優化。其中最大的調整就是 Proxy-DB 層的線程模式從 BIO 改造成了性能更好的 NIO。下面會詳細介紹一下具體的改造細節以及做了哪些優化。</p><blockquote><p>閲讀本文預計需要 20～30 分鐘，整體內容會有些枯燥難懂，建議閲讀前先看一下上一篇彩虹橋架構演進的文章（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzkxNTE3ODU0NA%3D%3D%26mid%3D2247488943%26idx%3D1%26sn%3D867041a53c801b5f83457fa622bb4909%26scene%3D21%23wechat_redirect" target="_blank">彩虹橋架構演進之路</a>）以及 MySQL 協議相關基礎知識。</p></blockquote><h1>‍<img src="" alt="" referrerpolicy="no-referrer"></h1><h1>二、改造前的架構</h1><p>先來複習一下彩虹橋的全景架構圖： <img src="https://oscimg.oschina.net/oscnet/up-a99befe24a3c3d97eae3a3fd156ae4e23bd.jpg" alt="" referrerpolicy="no-referrer"></p><h2>Proxy 三層模塊</h2><p>針對 Proxy 這一層，可以大致分成 Frontend、Core、Backend 三層：</p><ul><li><strong>Frontend-服務暴露層</strong>：使用 Netty 作為服務器，按照 MySQL 協議對接收&amp;返回的數據進行編解碼。</li><li><strong>Core-功能&amp;內核層</strong>：通過解析、改寫、路由等內核能力實現數據分片、讀寫分離、影子庫路由等核心功能。</li><li><strong>Backend-底層 DB 交互層</strong>：通過 JDBC 實現與數據庫交互、對結果集改列、歸併等操作。</li></ul><h2>BIO 模式下的問題</h2><p>這裏 Core 層為純計算操作，而 Frontend、Backend 都涉及 IO 操作，Frontend 層使用 Netty 暴露服務為 NIO 模式，但是 Backend 使用了數據庫廠商提供的傳統 JDBC 驅動，為 BIO 模式。所以 Proxy 的整體架構還是 BIO 模式。在 BIO 模型中，每個連接都需要一個獨立的線程來處理。這種模型有一些明顯的缺點：</p><ul><li><strong>高資源消耗</strong>：每個請求創建獨立線程，伴隨大量線程開銷。線程切換與調度額外消耗 CPU。</li><li><strong>擴展性受限</strong>：受系統線程上限影響，處理大量併發連接時，性能急劇下降。</li><li><strong>I/O 阻塞</strong>：BIO 模型中，讀/寫操作均為阻塞型，導致線程無法執行其他任務，造成資源浪費。</li><li><strong>複雜的線程管理</strong>：線程管理和同步問題增加開發和維護難度。</li></ul><p>我們看最簡單的一個場景：在 JDBC 在發起請求後，當前線程會一直阻塞直到數據庫返回數據，當出現大量慢查或者數據庫出現故障時，會導致大量線程阻塞，最終雪崩。在上一篇彩虹橋架構演進文章中，我們做了一些改進來避免了 BIO 模型下的一些問題，比如使用線程池隔離來解決單庫阻塞導致全局雪崩的問題。 <img src="https://oscimg.oschina.net/oscnet/up-5dad3dc23bdca9a239bdf3253b4a7f9b319.jpg" alt="" referrerpolicy="no-referrer"></p><p>但是隨着邏輯庫數量的增多，最終導致 Proxy 的線程數膨脹。系統的可伸縮性和吞吐量都受到了挑戰。因此有必要將現有的基於 JDBC 驅動的阻塞式連接升級為採用 NIO（非阻塞 I/O）方式連接數據庫。</p><h1>‍<img src="" alt="" referrerpolicy="no-referrer"></h1><h1>三、改造後的架構</h1><ul><li><strong>BIO-&gt;NIO</strong></li></ul><p>想把 Proxy 整體架構從 BIO-&gt;NIO，最簡單的方式就是把傳統的 BIO 數據庫驅動 JDBC 換成 NIO 的數據庫驅動，但是在調研過後發現開源的 NIO 驅動並不多，而且基本上沒有什麼最佳實踐。最後在參考 ShardingSphere 社區之前做的調研後（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fshardingsphere%2Fissues%2F13957" target="_blank">https://github.com/apache/shardingsphere/issues/13957</a> ） ，決定使用 Vertx 來替換 JDBC。最開始使用 Vert.x 的原因，第一是 Vertx 的異步編碼方式更友好，編碼複雜度相對較低，第二是因為它實現了主流數據庫的驅動。但最終的結果不盡人意，由於 Vertx 相關抽象化的架構，導致鏈路較長時，整個調用棧深非常誇張。最終壓測出來的吞吐量提升只有 5% 不到，而且存在很多兼容性問題。於是推倒重來，決定自研數據庫驅動和連接池。</p><ul><li><strong>跳過不必要的編解碼階段</strong></li></ul><p>由於 JDBC 驅動會自動把 MySQL 的字節數據編解碼成 Java 對象，然後 Proxy 再把這些結果集經過一些加工（元信息修正、結果集歸併）後再進行編碼返回給上游。如果自研驅動的話，就可以把編解碼流程控制的更細緻一些，把 Proxy 不需要加工的數據直接轉發給上游，跳過無意義的編解碼。後面會介紹一下哪些場景是不需要 Proxy 對結果集進行加工的。</p><h2>自研 NIO 數據庫驅動</h2><p>數據庫驅動主要是封裝了與 DB 層交互協議，封裝成高級 API。下面 2 張圖是 java.sql 包中的 Connection 和 Statement 的一些核心接口。 <img src="https://oscimg.oschina.net/oscnet/up-517ee2a0bafe29e2a2e648762ed31d87bb9.jpg" alt="" referrerpolicy="no-referrer"><img src="https://oscimg.oschina.net/oscnet/up-3e947c153f1f81f011a177b66d7b2036cee.jpg" alt="" referrerpolicy="no-referrer"></p><p>所以首先我們需要了解一下，如何與數據庫進行數據交互，以 MySQL 為例，使用 Netty 連接 MySQL，簡單的交互流程如下。 <img src="https://oscimg.oschina.net/oscnet/up-99ac2f8e643ce9a4d7c1db6f7db7a20a81e.jpg" alt="" referrerpolicy="no-referrer"></p><p>使用 Netty 與 MySQL 連接建立後，我們要做的就是按照 MySQL 協議規定的數據格式，先鑑權後再發送具體的命令包即可。下面是 MySQL 官方文檔中鑑權流程和命令執行流程：</p><ul><li><strong>鑑權流程</strong>：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdev.mysql.com%2Fdoc%2Fdev%2Fmysql-server%2Flatest%2Fpage_protocol_connection_phase.html" target="_blank">https://dev.mysql.com/doc/dev/mysql-server/latest/page_protocol_connection_phase.html</a></li><li><strong>執行命令流程</strong>：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdev.mysql.com%2Fdoc%2Fdev%2Fmysql-server%2Flatest%2Fpage_protocol_command_phase.html" target="_blank">https://dev.mysql.com/doc/dev/mysql-server/latest/page_protocol_command_phase.html</a></li></ul><p>下面就是按照 MySQL 的文檔，去實現編解碼 Handle，我們簡單看一下實現的代碼。 <img src="https://oscimg.oschina.net/oscnet/up-93dbe9735b43149a35e21ca060fb870ed92.jpg" alt="" referrerpolicy="no-referrer"></p><ul><li>decode 解碼</li></ul><p>就是針對 MySQL 返回的數據包解碼，根據長度解析出 Palyload 封裝成 MySQLPacketPayload 傳給對應的 Handle 處理。</p><ul><li>encode 編碼</li></ul><p>把具體的命令類轉換成具體的 MySQL 數據包，這裏的 MySQLPacket 有多個實現類，跟 MySQL 的 Command 類型一一對應。</p><p>現在還需要一個類似 java.sql.Connection 的實現類，來組裝 MySQLPacket 並寫入到 Netty 通道中，並且解析編碼後的 MySQLPacketPayload 轉換成 ResultSet。</p><p><img src="https://oscimg.oschina.net/oscnet/up-5cf9d17b87a550d191bd089eef9e41f28fd.jpg" alt="" referrerpolicy="no-referrer"><img src="https://oscimg.oschina.net/oscnet/up-2c4b743cde5a7c667d2a2d04881afaf237a.jpg" alt="" referrerpolicy="no-referrer"> 看起來比較簡單，交互流程和傳統的 JDBC 幾乎一樣，但是由於現在是異步化流程，所有的 Response 都是通過回調返回，所以這裏有 2 個難點：</p><ul><li>由於 MySQL 在上一條命令沒結束前無法接受新的命令，所以如何控制單個連接的命令串行化？</li><li>如何將 MySQL 返回的數據包和發起命令的 Request 一一綁定？</li></ul><p>首先 NettyDbConnection 引入了一個無鎖化非阻塞隊列 ConcurrentLinkedQueue。 <img src="https://oscimg.oschina.net/oscnet/up-95d916682b2dd973e5096a9c7889a398b1c.jpg" alt="" referrerpolicy="no-referrer"></p><p>在發送 Command 時，如何沒有正在進行中的 Command，則直接發送，如果有正在進行中的 Command，直接扔到隊列中，等待上一條 Command 處理完成後推動下一條命令的執行。保證了單個連接命令串行化。</p><p>其次，NettyDbConnection 在執行命令時，傳入一個 Promise，在 MySQL 數據包全部返回後，這個 Promise 將會被設置完成，即可於發起命令的 Request 一一綁定。 <img src="https://oscimg.oschina.net/oscnet/up-fbcb7f0a0133a4cb43712626f4fbfed08a3.jpg" alt="" referrerpolicy="no-referrer"></p><h2>自研 NIO 數據庫連接池</h2><p>前面介紹了 NettyDbConnection 這個類，實現了與 MySQL 的交互，並且提供了執行 SQL 的高級 API，但實際使用過程中，不可能每次都創建一個連接執行完 SQL 就關閉。所以需要對 NettyDbConnection 進行池化，統一管理連接的生命週期。其功能類似於傳統連接池 HikariCP，在完成基本能力的基礎上，做了很多性能優化。</p><ul><li>連接生命週期管控</li><li>連接池動態伸縮</li><li>完善的監控</li><li>連接異步保活</li><li>超時控制</li><li>EventLoop 親和性</li></ul><p>這裏除了 EventLoop 親和性，其他幾個功能只要用過傳統的數據庫連接池應該都比較熟悉，這裏不做過多展開。這裏主要針對 EventLoop 親和性展開介紹一下。</p><p>在文章開頭我們説到 Proxy 的三層模塊，Frontend、Core、Backend，如果現在我們把 Backend 層於數據庫交互的組件換成了我們自研的驅動，那麼 Proxy 就即是 Netty Server，也是 Netty Client，所以 Frontend 和 Backend 可以共用一個 EventLoopGroup。為了降低線程上下文切換，在單個請求從 Frontend 接收、經過 Core 層計算後轉發到 MySQL ，再到接收 MySQL 服務響應，以及最終的回寫給 Client 端，這一些列操作儘量放在一個 EventLoop 線程中處理。 <img src="https://oscimg.oschina.net/oscnet/up-e04581647d274a5cc64fded2d2f26bff551.jpg" alt="" referrerpolicy="no-referrer"></p><p>具體的做法就是 Backend 在選擇與數據庫連接時，優先選擇與當前 EventLoop 綁定的連接。也就是前面提到的 EventLoop 親和性，這樣就能保證大部分場景下一次請求從頭到尾都由同一個 EventLoop 處理，下面我們看一下具體的代碼實現。</p><p>在 NettyDbConnectionPool 類中使用一個 Map 存儲連接池中的空閒連接，Key 為 EventLoop，Value 為當前 EventLoop 綁定的空閒連接隊列。 <img src="https://oscimg.oschina.net/oscnet/up-3099eb3f9c96d39f72551fa8442ebdce261.jpg" alt="" referrerpolicy="no-referrer"></p><p>在獲取時，優先獲取當前 EventLoop 綁定的連接，如果當前 EventLoop 未綁定連接，則會借用其他 EventLoop 的連接。 <img src="https://oscimg.oschina.net/oscnet/up-830d6a25ed63767ae092d9eaa272e7624b5.jpg" alt="" referrerpolicy="no-referrer"></p><p>為了提高&nbsp;EventLoop 命中率，需要注意幾點配置：</p><ul><li>EventLoop 線程數量儘量與 CPU 核心數保持一致。</li><li>連接池最大連接數超過&nbsp;EventLoop 線程數越多，EventLoop 命中率越高。</li></ul><p>下面放一張壓測環境（8C16G、連接池最大連接數 10~30）的命中率監控，大部分保持在 75% 左右。 <img src="https://oscimg.oschina.net/oscnet/up-2164ed7abbf169379e215ff14861f04d876.jpg" alt="" referrerpolicy="no-referrer"></p><h2>跳過不必要的編解碼</h2><p>前面説到，有部分 SQL 的結果集是不需要 Proxy 進行加工的，也就是可以直接把 MySQL 返回的數據流原封不動轉發給上游，直接省去編解碼操作。那什麼 SQL 是不需要 Proxy 進行加工的呢，我們舉個例子説明一下。</p><p>假設邏輯庫 A 裏面有一張表 User 做了分庫，分了 2 個庫 DB1 和 DB2，分片算法是 user_id%2。</p><ul><li>SQL 1</li></ul><blockquote><p>‍SELECT id, name FROM user WHERE user_id in (1, 2)</p></blockquote><ul><li>SQL 2</li></ul><blockquote><p>‍SELECT id, name FROM user WHERE user_id in (1)</p></blockquote><p>很顯然 SQL 1 由於有 2 個分片 Value，最終匹配到了 2 個節點，SQL 2 只會匹配到 1 個節點。 <img src="https://oscimg.oschina.net/oscnet/up-f6637b742c35d1af023f60cf01309006bc9.jpg" alt="" referrerpolicy="no-referrer"></p><p>SQL 1 由於需要對結果集進行歸併，所以無法跳過編解碼，SQL 2 不需要對結果集歸併，只需要把結果集中的列定義數據做修正後，真正的 Row 數據無需處理，這種情況就可以把 Row 數據直接轉發至上游。</p><h2>全鏈路異步化</h2><p>Backend 層用自研連接池+驅動替換原先的 HikariCP+JDBC 後，從 Frontend-Core-Backend 全鏈路涉及到阻塞的操作需要全部替換成異步化編碼，也就是通過 Netty 的 Promise 和 Future 來實現。 <img src="https://oscimg.oschina.net/oscnet/up-3eb5da9b30f76427c3cddf2847919af3b71.jpg" alt="" referrerpolicy="no-referrer"></p><p>由於部分場景拿到 Future 時，可能當前 Future 已經完成了，如果每次都是無腦的加 Listener 會讓調用棧加長，所以我們定義了一個通用的工具類來處理 Future，即 future.isDone() 時直接執行，反之才會 addListener，最大化降低整個調用棧的深度。 <img src="https://oscimg.oschina.net/oscnet/up-d36312a5a58e232274aa174dea7ccd9551a.jpg" alt="" referrerpolicy="no-referrer"></p><h2>兼容性</h2><p>除了以上基本代碼的改造外，還需要做大量的兼容工作：</p><ul><li>特殊數據庫字段類型處理</li><li>JDBC URL 參數兼容</li><li>ThreadLocal 相關數據全部需要遷移至 ChannelHandlerContext 中</li><li>日誌 MDC、TraceContext 相關數據傳遞</li><li>……</li></ul><h1>‍<img src="" alt="" referrerpolicy="no-referrer"></h1><h1>四、性能表現</h1><p>經過幾輪性能壓測後，NIO 架構相較於 BIO 架構性能有較大提升：</p><ul><li>整體最大吞吐量提升 67%</li><li>LOAD 下降 37% 左右</li><li>高負載情況下 BIO 多次出現進程夯住現象，NIO 相對較穩定</li><li>線程數減少 98% 左右</li></ul><h1>‍<img src="" alt="" referrerpolicy="no-referrer"></h1><h1>‍五、總結</h1><p>NIO 架構的改造工作量相當巨大，中間也經歷了一些曲折，但是最終的結果令人滿意。得益於 ShardingShpere 本身內核層面的高性能加上本次 NIO 改造後，彩虹橋在 DAL 中間件性能層面基本上可以算是第一梯隊了。</p><h1>‍<img src="" alt="" referrerpolicy="no-referrer"></h1><p>*文 / 新一</p><p>本文屬得物技術原創，更多精彩文章請看：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftech.dewu.com" target="_blank">得物技術官網</a></p><p>未經得物技術許可嚴禁轉載，否則依法追究法律責任！</p></div>
                                    ]]>
            </description>
            <pubDate>Sat, 18 Nov 2023 03:27:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/5783135/blog/10143389</guid>
            <link>https://my.oschina.net/u/5783135/blog/10143389</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[OpenAI 董事會與 Sam Altman 討論重返 CEO 崗位事宜]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">The Verge 援引多位知情人士消息稱，OpenAI 董事會正在與 Sam Altman 討論重返公司擔任首席執行官的事宜。</span></p><p><span style="color:#000000">其中一位知情人士表示，在經歷了沒有任何通知就突然被董事會解僱的 Altman 對迴歸一事"態度曖昧"，並希望對公司的治理模式進行重大變革。</span></p><p><img height="358" src="https://oscimg.oschina.net/oscnet/up-7c44d0d4980461dc3b0cab2147edf5763c7.png" width="500" referrerpolicy="no-referrer"></p><p><span style="color:#000000">事實上，在 OpenAI 董事會宣佈解僱了 Altman 幾小時後；被免去董事會主席職務的 Greg Brockman 就公開宣佈辭職，後續還有多位 OpenAI 高管也陸續辭職。一些風險投資家也公開聲明表示支持 Altman，紅杉資本普通合夥人 Alfred Lin 在推特上發文稱，期待着 Altman 和 Brockman 建立下一個改變世界的公司。OpenAI 最大的投資者微軟則在 Altman 被解僱後不久發表聲明稱，該公司「將繼續致力於」與 OpenAI 的合作關係。</span></p><p><span style="color:#000000">事件後續的進展是，Altman 和董事會約定了一個時間點 —— 在當地時間下午 5 點之前達成停戰協議，即董事會辭職，他和 Brockman 迴歸。然後董事會的搖擺不定導致他們錯過了這一時間期限。</span></p><p><span style="color:#000000">如果不能儘快達成協議，Altman 和 Brockman 的離開勢必會帶走更多 OpenAI 員工。兩人一直在與朋友和投資者討論創辦另一家公司的事宜，如果 Altman 決定離開並創辦一家新公司，肯定會有大批員工追隨。目前 OpenAI 的發言人仍未迴應有關 Altman 與董事會討論迴歸事宜的置評請求。微軟發言人則拒絕發表評論。</span></p><p><span style="color:#000000">OpenAI 當下的董事會成員包括首席科學家 Ilya Sutskever、Quora 首席執行官 Adam D'Angelo、前 GeoSim Systems 首席執行官 Tasha McCauley 以及喬治城安全與新興技術中心戰略總監 Helen Toner 組成。</span></p><p><span style="color:#000000">多位消息人士透露，Sutskever 也是 OpenAI 的聯合創始人之一併領導着 OpenAI 的研究團隊，他在罷免 Altman 的過程中發揮了重要作用。而他在這次政變中的角色也表明，公司的研發部門和產品部門之間存在權力鬥爭。</span></p><p><strong><span style="color:#000000">相關閲讀：</span></strong></p><ul><li><a href="https://www.oschina.net/news/267006/openai-ceo-sam-altman-fired" target="_blank">OpenAI 董事會內訌，CEO 兼創始人 Sam Altman 被逐出公司</a></li><li><a href="https://www.oschina.net/news/267013/openai-greg-brockman-quit" target="_blank">OpenAI 總裁 Greg Brockman 辭職</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Sat, 18 Nov 2023 03:19:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/267101/openai-board-discussions-with-sam-altman-return-as-ceo</guid>
            <link>https://www.oschina.net/news/267101/openai-board-discussions-with-sam-altman-return-as-ceo</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[OneTable —— Lakehouse 表格式間全方位互操作]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff; color:#1f2328">OneTable 是一種表格式的全方位轉換器，可促進數據處理系統和查詢引擎之間的互操作性</span><span style="color:#000000">。Apache Hudi、Delta Lake 和 Apache Iceberg 之間無縫互操作。</span></p><p>OneTable 不是一種新的或獨立的格式，OneTable 提供了用於轉換 Lakehouse 表格式元數據的抽象和工具</p><p><span><span>OneTable 通過利用表表示的通用模型來簡化數據湖操作。這允許用户以一種格式寫入數據，同時仍然受益於其他格式的集成和功能。例如，OneTable 使現有的 Hudi 用户能夠無縫地使用 Databricks 的 Photon Engine 或使用 Snowflake 查詢 Iceberg 表。創建從一種格式到另一種格式的轉換非常簡單，只需要實現一些接口，項目團隊認為，這將有助於將來支持的源格式和目標格式的擴展。</span></span></p><p style="margin-left:0px; margin-right:0px"><img alt="" height="414" src="https://static.oschina.net/uploads/space/2023/1116/163549_inUl_4252687.png" width="500" referrerpolicy="no-referrer"></p></div>
                                                                ]]>
            </description>
            <pubDate>Sat, 18 Nov 2023 03:13:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/p/onetable</guid>
            <link>https://www.oschina.net/p/onetable</link>
        </item>
        <item>
            <title>
                <![CDATA[Gitee 推薦 | 運行在 Python 虛擬機上的面向對象編程語言 AIL]]>
            </title>
            <description>
                <![CDATA[<h1><a id="user-content-ail-30-alpha-3" class="anchor" href="https://gitee.com/LaomoBK/ail#ail-30-alpha-3"></a>AIL 3.0 alpha 3</h1><p><a href="https://gitee.com/LaomoBK/ail/blob/3.0/docs/whatsnew.md">AIL 3.0 Kirara 版本更新內容</a></p><p><a href="https://gitee.com/LaomoBK/ail/blob/3.0/docs/versions/2_3.md">AIL 2.3 Diona 版本更新內容</a></p><p><a href="https://gitee.com/LaomoBK/ail/blob/3.0/docs/versions/2_2.md">AIL 2.2 Klee 版本更新內容</a></p><p><img src="https://img.shields.io/badge/AIL-Programming%20Language-blue" alt="AIL badge" referrerpolicy="no-referrer"><img src="https://img.shields.io/badge/python-3.8-blue" alt="python badge" referrerpolicy="no-referrer"><img src="https://img.shields.io/badge/version-3.0%20alpha-success" alt="version badge" referrerpolicy="no-referrer"><img src="https://img.shields.io/badge/license-GPL-blue" alt="license badge" referrerpolicy="no-referrer"></p><p>AIL 是一門開源的運行在 Python 虛擬機上的面向對象的編程語言。支持 Python 的大多數特性的同時，還額外增加了如 match 表達式，匿名函數，名稱空間等 AIL 自身的特性。</p><h2><a id="user-content-環境需求" class="anchor" href="https://gitee.com/LaomoBK/ail#%E7%8E%AF%E5%A2%83%E9%9C%80%E6%B1%82"></a>環境需求</h2><p><strong>具有完整標準庫的 Python3.8</strong></p><p>推薦使用 <strong>cpython</strong> 解釋器，其他 Python 解釋器並未進行過測試。</p><h2><a id="user-content-hello-world" class="anchor" href="https://gitee.com/LaomoBK/ail#hello-world"></a>Hello World</h2><h4><a id="user-content-hello-world-with-one-statement" class="anchor" href="https://gitee.com/LaomoBK/ail#hello-world-with-one-statement"></a>Hello World with one statement</h4><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="k">print</span><span class="s">'Hello World'</span><span class="p">;</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><p>..or..</p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="n">console</span><span class="p">.</span><span class="n">writeln</span><span class="p">(</span><span class="s">'Hello World!'</span><span class="p">);</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><h4><a id="user-content-hello-world-in-lambda" class="anchor" href="https://gitee.com/LaomoBK/ail#hello-world-in-lambda"></a>Hello World in lambda</h4><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="p">(()</span><span class="o">-&gt;</span><span class="n">console</span><span class="p">.</span><span class="n">writeln</span><span class="p">(</span><span class="s">'Hello World'</span><span class="p">))();</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><h4><a id="user-content-hello-world-in-function" class="anchor" href="https://gitee.com/LaomoBK/ail#hello-world-in-function"></a>Hello World in function</h4><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="kd">func</span><span class="nf">helloWorld</span><span class="p">()</span><span class="p">{</span></span><span id="LC2" class="line"><span class="n">print</span><span class="s">"Hello World!"</span><span class="p">;</span></span><span id="LC3" class="line"><span class="p">}</span></span><span id="LC4" class="line"></span><span id="LC5" class="line"><span class="nf">helloWorld</span><span class="p">();</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><h4><a id="user-content-hello-world-in-anonymous-function" class="anchor" href="https://gitee.com/LaomoBK/ail#hello-world-in-anonymous-function"></a>Hello World in anonymous function</h4><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="p">(</span><span class="nf">func</span><span class="p">()</span><span class="p">{</span></span><span id="LC2" class="line"><span class="n">print</span><span class="s">"Hello World!"</span><span class="p">;</span></span><span id="LC3" class="line"><span class="p">})();</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><h4><a id="user-content-hello-world-in-class" class="anchor" href="https://gitee.com/LaomoBK/ail#hello-world-in-class"></a>Hello World in class</h4><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="kd">class</span><span class="kt">Hello</span><span class="p">{</span></span><span id="LC2" class="line"><span class="kd">func</span><span class="nf">helloWorld</span><span class="p">(</span><span class="k">self</span><span class="p">)</span><span class="p">{</span></span><span id="LC3" class="line"><span class="n">print</span><span class="s">"Hello World!"</span><span class="p">;</span></span><span id="LC4" class="line"><span class="p">}</span></span><span id="LC5" class="line"><span class="p">}</span></span><span id="LC6" class="line"></span><span id="LC7" class="line"><span class="kt">Hello</span><span class="p">()</span><span class="o">.</span><span class="nf">helloWorld</span><span class="p">();</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><h4><a id="user-content-斐波那契數列" class="anchor" href="https://gitee.com/LaomoBK/ail#%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%95%B0%E5%88%97"></a>斐波那契數列</h4><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="kd">func</span><span class="nf">fib</span><span class="p">(</span><span class="n">n</span><span class="p">)</span><span class="p">{</span></span><span id="LC2" class="line"><span class="k">if</span><span class="n">n</span><span class="o">==</span><span class="mi">1</span><span class="n">or</span><span class="n">n</span><span class="o">==</span><span class="mi">2</span><span class="p">{</span></span><span id="LC3" class="line"><span class="k">return</span><span class="mi">1</span><span class="p">;</span></span><span id="LC4" class="line"><span class="p">}</span><span class="n">elif</span><span class="n">n</span><span class="o">&gt;=</span><span class="mi">2</span><span class="p">{</span></span><span id="LC5" class="line"><span class="k">return</span><span class="nf">fib</span><span class="p">(</span><span class="n">n</span><span class="o">-</span><span class="mi">2</span><span class="p">)</span><span class="o">+</span><span class="nf">fib</span><span class="p">(</span><span class="n">n</span><span class="o">-</span><span class="mi">1</span><span class="p">);</span></span><span id="LC6" class="line"><span class="p">}</span></span><span id="LC7" class="line"><span class="p">}</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><p>以上例子均在 AIL 3.0 alpha 0 版本下測試通過</p><h2><a id="user-content-主要語言特性" class="anchor" href="https://gitee.com/LaomoBK/ail#%E4%B8%BB%E8%A6%81%E8%AF%AD%E8%A8%80%E7%89%B9%E6%80%A7"></a>主要語言特性</h2><p><em>以下例子均已在 AIL 2.3 版本下通過編譯</em></p><h3><a id="user-content-更多的-for-語句" class="anchor" href="https://gitee.com/LaomoBK/ail#%E6%9B%B4%E5%A4%9A%E7%9A%84-for-%E8%AF%AD%E5%8F%A5"></a>更多的 for 語句</h3><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="k">for</span><span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="n">j</span><span class="o">=</span><span class="nf">len</span><span class="p">(</span><span class="n">x</span><span class="p">);</span><span class="n">i</span><span class="o">&lt;</span><span class="nf">len</span><span class="p">(</span><span class="n">x</span><span class="p">);</span><span class="n">i</span><span class="o">+=</span><span class="mi">1</span><span class="p">,</span><span class="n">j</span><span class="o">-=</span><span class="mi">1</span><span class="p">{</span></span><span id="LC2" class="line"><span class="c1">// ...</span></span><span id="LC3" class="line"><span class="p">}</span></span><span id="LC4" class="line"></span><span id="LC5" class="line"><span class="k">for</span><span class="p">{</span></span><span id="LC6" class="line"><span class="c1">// forever...</span></span><span id="LC7" class="line"><span class="p">}</span></span><span id="LC8" class="line"></span><span id="LC9" class="line"><span class="n">foreach</span><span class="n">i</span><span class="k">in</span><span class="nf">range</span><span class="p">(</span><span class="mi">100</span><span class="p">)</span><span class="p">{</span></span><span id="LC10" class="line"><span class="c1">// ...</span></span><span id="LC11" class="line"><span class="p">}</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><h3><a id="user-content-namespace-名稱空間" class="anchor" href="https://gitee.com/LaomoBK/ail#namespace-%E5%90%8D%E7%A7%B0%E7%A9%BA%E9%97%B4"></a>namespace 名稱空間</h3><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="n">namespace</span><span class="n">Vegetables</span><span class="p">{</span></span><span id="LC2" class="line"><span class="n">cabbage</span><span class="o">=</span><span class="s">'cabbage'</span><span class="p">;</span></span><span id="LC3" class="line"><span class="n">leaf_mustard</span><span class="o">=</span><span class="s">'mustard'</span><span class="p">;</span></span><span id="LC4" class="line"><span class="p">}</span></span><span id="LC5" class="line"></span><span id="LC6" class="line"></span><span id="LC7" class="line"><span class="n">namespace</span><span class="n">Fruits</span><span class="p">{</span></span><span id="LC8" class="line"><span class="n">apple</span><span class="o">=</span><span class="s">'apple'</span><span class="p">;</span></span><span id="LC9" class="line"><span class="n">tomato</span><span class="o">=</span><span class="s">'tomato'</span><span class="p">;</span></span><span id="LC10" class="line"><span class="p">}</span></span><span id="LC11" class="line"></span><span id="LC12" class="line"></span><span id="LC13" class="line"><span class="k">print</span><span class="s">'An %s a day keeps the doctor away'</span><span class="o">%</span><span class="n">Fruits</span><span class="p">.</span><span class="n">apple</span><span class="p">;</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><h3><a id="user-content-強大的-match-表達式" class="anchor" href="https://gitee.com/LaomoBK/ail#%E5%BC%BA%E5%A4%A7%E7%9A%84-match-%E8%A1%A8%E8%BE%BE%E5%BC%8F"></a>強大的 match 表達式</h3><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="n">name</span><span class="o">=</span><span class="n">match</span><span class="n">lang_name</span><span class="p">{</span></span><span id="LC2" class="line"><span class="s">'Python'</span><span class="p">:</span><span class="s">'py'</span><span class="p">,</span></span><span id="LC3" class="line"><span class="s">'Java'</span><span class="p">:</span><span class="s">'java'</span><span class="p">,</span></span><span id="LC4" class="line"><span class="s">'AIL'</span><span class="p">:</span><span class="s">'ail'</span><span class="p">,</span></span><span id="LC5" class="line"><span class="p">}</span></span><span id="LC6" class="line"></span><span id="LC7" class="line"><span class="p">(</span><span class="n">match</span><span class="n">point</span><span class="p">{</span></span><span id="LC8" class="line"><span class="n">Point</span><span class="err">!</span><span class="p">{</span><span class="n">x</span><span class="p">:</span><span class="mi">5</span><span class="p">,</span><span class="n">y</span><span class="p">:</span><span class="mi">6</span><span class="p">}:</span><span class="p">()</span><span class="o">-&gt;</span><span class="p">{</span></span><span id="LC9" class="line"><span class="o">//</span><span class="n">handle</span><span class="n">it</span><span class="p">...</span></span><span id="LC10" class="line"><span class="p">},</span></span><span id="LC11" class="line"><span class="k">else</span><span class="p">:</span><span class="p">()</span><span class="o">-&gt;</span><span class="p">{</span></span><span id="LC12" class="line"><span class="o">//</span><span class="n">handle</span><span class="n">it</span><span class="p">...</span></span><span id="LC13" class="line"><span class="p">}</span></span><span id="LC14" class="line"><span class="p">})();</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><h3><a id="user-content-通過引用-global-變量在-local-域中定義同名變量" class="anchor" href="https://gitee.com/LaomoBK/ail#%E9%80%9A%E8%BF%87%E5%BC%95%E7%94%A8-global-%E5%8F%98%E9%87%8F%E5%9C%A8-local-%E5%9F%9F%E4%B8%AD%E5%AE%9A%E4%B9%89%E5%90%8C%E5%90%8D%E5%8F%98%E9%87%8F"></a>通過引用 global 變量在 local 域中定義同名變量</h3><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="n">a</span><span class="o">=</span><span class="m">10</span><span class="p">;</span></span><span id="LC2" class="line"></span><span id="LC3" class="line"><span class="k">func</span><span class="n">f</span><span class="p">()</span><span class="p">{</span></span><span id="LC4" class="line"><span class="n">a</span><span class="o">:=</span><span class="n">a</span><span class="p">;</span></span><span id="LC5" class="line"><span class="p">}</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><h3><a id="user-content-與-python-協作" class="anchor" href="https://gitee.com/LaomoBK/ail#%E4%B8%8E-python-%E5%8D%8F%E4%BD%9C"></a>與 Python 協作</h3><p>在 AIL 中可以直接導入 Python 模塊，使用類似 Python 的 import 語句：</p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="k">import</span><span class="err">!</span><span class="n">os</span><span class="p">.</span><span class="n">path</span><span class="k">as</span><span class="n">ospath</span><span class="p">;</span></span><span id="LC2" class="line"><span class="k">import</span><span class="err">!</span><span class="n">numpy</span><span class="k">as</span><span class="n">np</span><span class="p">;</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="kn">from</span><span class="nn">PIL</span><span class="kn">import</span><span class="n">Image</span><span class="p">;</span></span><span id="LC2" class="line"></span><span id="LC3" class="line"></span><span id="LC4" class="line"><span class="n">Image</span><span class="p">.</span><span class="nb">open</span><span class="p">(</span><span class="s">'klee.jpg'</span><span class="p">).</span><span class="n">show</span><span class="p">();</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><p>亦或是在 AIL 程序中直接插入 Python 代碼：</p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="kd">func</span><span class="nf">gen</span><span class="p">(</span><span class="n">n</span><span class="p">)</span><span class="p">{</span></span><span id="LC2" class="line"><span class="cp">#return [x**n for x in range(n)]</span></span><span id="LC3" class="line"><span class="p">}</span></span><span id="LC4" class="line"></span><span id="LC5" class="line"></span><span id="LC6" class="line"><span class="n">print</span><span class="nf">gen</span><span class="p">(</span><span class="mi">5</span><span class="p">);</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><h2><a id="user-content-安裝-ail" class="anchor" href="https://gitee.com/LaomoBK/ail#%E5%AE%89%E8%A3%85-ail"></a>安裝 AIL</h2><p>運行 AIL 事先準備好的 <strong>setup.py</strong> 可以非常快速地在您的電腦上配置好 AIL。</p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line">python3 setup.py <span class="nb">install</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><p>在終端中輸入:</p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line">ail</span></pre><div class="markdown-code-block-copy-btn"></div></div></div><p>或者</p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line">python3 -m ail</span></pre><div class="markdown-code-block-copy-btn"></div></div></div><p><em><strong>Windows 下應確保 {PYTHON_HOME}/Script/ 已添加到 PATH 中</strong></em><em><strong>Linux/Mac OS 下應確保當前用户的 bin 目錄已添加到 PATH 中</strong></em></p><p>若進入 AIL 的交互環境，則安裝成功。</p><h2><a id="user-content-文檔" class="anchor" href="https://gitee.com/LaomoBK/ail#%E6%96%87%E6%A1%A3"></a>文檔</h2><p>AIL 的文檔仍然在完善中。具體的進度可以在 <code>/docs/</code> 中查看。</p><h2><a id="user-content-ail-語句" class="anchor" href="https://gitee.com/LaomoBK/ail#ail-%E8%AF%AD%E5%8F%A5"></a>AIL 語句</h2><p>文檔 <a href="https://gitee.com/LaomoBK/ail/blob/3.0/docs/reference/statements.md">AIL 語句</a> 簡要地描述了 AIL 的語句</p><h2><a id="user-content-vim-語法高亮支持" class="anchor" href="https://gitee.com/LaomoBK/ail#vim-%E8%AF%AD%E6%B3%95%E9%AB%98%E4%BA%AE%E6%94%AF%E6%8C%81"></a>VIM 語法高亮支持</h2><p>AIL 為 vim 專門編寫了其語法高亮文件，寫代碼的時候媽媽再也不會擔心敲錯關鍵字了！</p><p>提供瞭如下高亮支持：</p><ul><li>關鍵字</li><li>字符串、數字</li><li>基本類型註解</li><li>AIL 與 Python 內置函數、常量</li></ul><p><img src="https://gitee.com/LaomoBK/ail/raw/2.3/misc/vim_highlight.jpg" alt="vim highlight" referrerpolicy="no-referrer"></p><h4><a id="user-content-配置" class="anchor" href="https://gitee.com/LaomoBK/ail#%E9%85%8D%E7%BD%AE"></a>配置</h4><ol><li>將 <strong>plugin/vim/syntax/ail.vim</strong> 與 <strong>plugin/vim/ftdetect/ail.vim</strong> 分別複製到 <strong>{VIM_HOME}/syntax/</strong> 和 <strong>{VIM_HOME}/ftdetect/</strong></li><li>重新啓動 vim 即可</li></ol><h2><a id="user-content-treetxt" class="anchor" href="https://gitee.com/LaomoBK/ail#treetxt"></a>tree.txt</h2><p>這是最早期 AIL 語法分析器生成的語法樹</p><p><em>對應的程序<strong>應該</strong>可以在早期 commit 中找到</em></p>]]>
            </description>
            <pubDate>Sat, 18 Nov 2023 03:06:00 GMT</pubDate>
            <guid isPermaLink="false">https://gitee.com/LaomoBK/ail</guid>
            <link>https://gitee.com/LaomoBK/ail</link>
        </item>
        <item>
            <title>
                <![CDATA[每日一博 | Transformers 中原生支持的量化方案概述]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="rich_media_content js_underline_content
                       autoTypeSetting24psection
            " id="js_content"><section data-tool="mdnice 編輯器" data-website="https://www.mdnice.com" style="font-size: 16px;color: black;padding-right: 10px;padding-left: 10px;line-height: 1.6;letter-spacing: 0px;word-break: break-word;text-align: left;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;" data-mpa-powered-by="yiban.io"><span style="font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: 0px;text-align: left;text-wrap: wrap;color: rgb(58, 58, 58);">本文旨在對 transformers 支持的各種量化方案及其優缺點作一個清晰的概述，以助於讀者進行方案選擇。</span></section><p data-tool="mdnice 編輯器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);">目前，量化模型有兩個主要的用途:</p><ul data-tool="mdnice 編輯器" class="list-paddingleft-1" style="margin-top: 8px;margin-bottom: 8px;padding-left: 25px;width: 557.438px;color: rgb(0, 0, 0);font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;"><li><section style="margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(58, 58, 58);">
     在較小的設備上進行大模型推理 
   </section></li><li><section style="margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(58, 58, 58);">
     對量化模型進行適配器微調 
   </section></li></ul><p data-tool="mdnice 編輯器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);">到目前為止，transformers 已經集成並&nbsp;<strong style="color: black;">原生</strong>&nbsp;支持了&nbsp;<em style="color: black;">bitsandbytes</em>&nbsp;和&nbsp;<em style="color: black;">auto-gptq</em>&nbsp;這兩個量化庫。請注意，🤗 optimum 還支持更多的量化方案，但本文不會涉及這一塊內容。</p><p data-tool="mdnice 編輯器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);">要詳細瞭解每種方案的更多信息，可查看下文列出的相關資源，或者閲讀相應的&nbsp;<code style="margin: 3px;padding: 3px;font-size: 14px;border-radius: 4px;font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;color: rgb(155, 110, 35);background-color: rgb(255, 245, 227);">transformers</code>&nbsp;文檔。</p><p data-tool="mdnice 編輯器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);">另請注意，下文內容僅適用於&nbsp;<code style="margin: 3px;padding: 3px;font-size: 14px;border-radius: 4px;font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;color: rgb(155, 110, 35);background-color: rgb(255, 245, 227);">PyTorch</code>&nbsp;模型，&nbsp;<code style="margin: 3px;padding: 3px;font-size: 14px;border-radius: 4px;font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;color: rgb(155, 110, 35);background-color: rgb(255, 245, 227);">Tensorflow</code>&nbsp;和&nbsp;<code style="margin: 3px;padding: 3px;font-size: 14px;border-radius: 4px;font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;color: rgb(155, 110, 35);background-color: rgb(255, 245, 227);">Flax/JAX</code>&nbsp;模型不在討論範圍之內。</p><span id="OSC_h2_1"></span><h2 data-tool="mdnice 編輯器" style="margin-top: 2em;margin-bottom: 35px;font-weight: bold;font-size: 22px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.2em;color: rgb(255, 157, 0);"><span style="margin-right: 3px;padding: 2px 13px;color: rgb(255, 157, 11);visibility: visible;display: inline-block;border-left: 5px solid rgb(255, 157, 0);height: 30.3958px;font-size: 18px;">目錄</span><span style="padding-left: 10px;font-size: 18px;color: rgb(255, 157, 11);display: inline-block;border-left: 5px solid rgb(255, 157, 11);visibility: visible;"></span></h2><ul data-tool="mdnice 編輯器" class="list-paddingleft-1" style="margin-top: 8px;margin-bottom: 8px;padding-left: 25px;width: 557.438px;color: rgb(0, 0, 0);font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;"><li><section style="margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(58, 58, 58);">
     資源 
   </section></li><li><section style="margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(58, 58, 58);">
     bitsandbytes 與 auto-gptq 之比較 
   </section></li><li><section style="margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(58, 58, 58);">
     深入研究速度基準 
   </section></li><li><section style="margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(58, 58, 58);">
     總結與最後的話 
   </section></li><li><section style="margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(58, 58, 58);">
     致謝 
   </section></li></ul><span id="OSC_h2_2"></span><h2 data-tool="mdnice 編輯器" style="margin-top: 2em;margin-bottom: 35px;font-weight: bold;font-size: 22px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.2em;color: rgb(255, 157, 0);"><span style="margin-right: 3px;padding: 2px 13px;color: rgb(255, 157, 11);visibility: visible;display: inline-block;border-left: 5px solid rgb(255, 157, 0);height: 30.3958px;font-size: 18px;">資源</span><span style="padding-left: 10px;font-size: 18px;color: rgb(255, 157, 11);display: inline-block;border-left: 5px solid rgb(255, 157, 11);visibility: visible;"></span></h2><ul data-tool="mdnice 編輯器" class="list-paddingleft-1" style="margin-top: 8px;margin-bottom: 8px;padding-left: 25px;width: 557.438px;color: rgb(0, 0, 0);font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;"><li><section style="margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(58, 58, 58);">
     GPTQ 博文&nbsp;– 概述什麼是 GPTQ 量化方法以及如何使用它。 
   </section></li><li><section style="margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(58, 58, 58);">
     bistandbytes 4 比特量化博文&nbsp;- 本文介紹了 4 比特量化和 QLoRa，QLoRa 是一種高效的微調方法。 
   </section></li><li><section style="margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(58, 58, 58);">
     bistandbytes 8 比特量化博文&nbsp;- 本文解釋瞭如何與 bitsandbytes 配合使用 8 比特量化。 
   </section></li><li><section style="margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(58, 58, 58);">
     有關 GPTQ 基礎用法的 Google Colab 筆記本&nbsp;- 本筆記本展示瞭如何使用 GPTQ 方法量化你自己的 transformer 模型，如何用量化模型進行推理，以及如何對量化模型進行微調。 
   </section></li><li><section style="margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(58, 58, 58);">
     有關 bitsandbytes 基礎用法的 Google Colab 筆記本&nbsp;- 該筆記本展示瞭如何在推理中使用 4 比特模型及其所有變體，以及如何在免費的 Google Colab 實例上運行 GPT-neo-X (20B 模型)。 
   </section></li><li><section style="margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(58, 58, 58);">
     Merve 撰寫的關於量化的博文&nbsp;- 本文簡要介紹了量化以及 transformers 中原生支持的量化方法。 
   </section></li></ul><span id="OSC_h2_3"></span><h2 data-tool="mdnice 編輯器" style="margin-top: 2em;margin-bottom: 35px;font-weight: bold;font-size: 22px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.2em;color: rgb(255, 157, 0);"><span style="margin-right: 3px;padding: 2px 13px;color: rgb(255, 157, 11);visibility: visible;display: inline-block;border-left: 5px solid rgb(255, 157, 0);height: 30.3958px;font-size: 18px;">bitsandbytes 與 auto-gptq 之比較</span><span style="padding-left: 10px;font-size: 18px;color: rgb(255, 157, 11);display: inline-block;border-left: 5px solid rgb(255, 157, 11);visibility: visible;"></span></h2><p data-tool="mdnice 編輯器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);">本節我們將討論&nbsp;<code style="margin: 3px;padding: 3px;font-size: 14px;border-radius: 4px;font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;color: rgb(155, 110, 35);background-color: rgb(255, 245, 227);">bitsandbytes</code>&nbsp;和&nbsp;<code style="margin: 3px;padding: 3px;font-size: 14px;border-radius: 4px;font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;color: rgb(155, 110, 35);background-color: rgb(255, 245, 227);">gptq</code>&nbsp;量化各自的優缺點。請注意，這些比較主要基於社區的反饋，它們具有一定的時效性，會隨着時間的推移而變化，比如説其中一些功能缺失已被納入相應庫的路線圖中了。</p><span id="OSC_h3_4"></span><h3 data-tool="mdnice 編輯器" style="margin-top: 10px;margin-bottom: 5px;padding-top: 10px;font-weight: bold;font-size: 20px;color: rgb(0, 0, 0);font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.4;"><span style="padding-left: 1em;color: rgb(81, 81, 81);font-size: 17px;border-left: 3px solid rgb(249, 191, 69);">bitsandbytes 有什麼好處？</span></h3><p data-tool="mdnice 編輯器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);"><strong style="color: black;">簡單</strong>: bitsandbytes 依舊是量化任何模型的最簡單方法，因為它不需要量化校準數據及校準過程 (即零樣本量化)。任何模型只要含有&nbsp;<code style="margin: 3px;padding: 3px;font-size: 14px;border-radius: 4px;font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;color: rgb(155, 110, 35);background-color: rgb(255, 245, 227);">torch.nn.Linear</code>&nbsp;模塊，就可以對其進行開箱即用的量化。每當在&nbsp;<code style="margin: 3px;padding: 3px;font-size: 14px;border-radius: 4px;font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;color: rgb(155, 110, 35);background-color: rgb(255, 245, 227);">transformers</code>&nbsp;中添加新架構時，只要其可以用&nbsp;<code style="margin: 3px;padding: 3px;font-size: 14px;border-radius: 4px;font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;color: rgb(155, 110, 35);background-color: rgb(255, 245, 227);">accelerate</code>&nbsp;庫的&nbsp;<code style="margin: 3px;padding: 3px;font-size: 14px;border-radius: 4px;font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;color: rgb(155, 110, 35);background-color: rgb(255, 245, 227);">device_map="auto"</code>&nbsp;加載，用户就可以直接受益於開箱即用的 bitsandbytes 量化，同時該方法對性能的影響也是最小的。量化是在模型加載時執行的，無需運行任何後處理或準備步驟。</p><p data-tool="mdnice 編輯器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);"><strong style="color: black;">跨模態互操作性</strong>: 由於量化模型的唯一條件是包含&nbsp;<code style="margin: 3px;padding: 3px;font-size: 14px;border-radius: 4px;font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;color: rgb(155, 110, 35);background-color: rgb(255, 245, 227);">torch.nn.Linear</code>&nbsp;層，因此量化對於任何模態都可以實現開箱即用。用户可以開箱即用地加載諸如 Whisper、ViT、Blip2 之類的 8 比特或 4 比特模型。</p><p data-tool="mdnice 編輯器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);"><strong style="color: black;">合併適配器 (adapter) 時性能下降為 0</strong>: (如果你對此不熟悉，請參閲&nbsp;此文&nbsp;以獲得有關適配器和 PEFT 的更多信息)。如果你在量化基礎模型之上訓練適配器，則可以將適配器合併在基礎模型之上進行部署，而不會降低推理性能。你甚至還可以在反量化模型之上&nbsp;合併&nbsp;適配器！GPTQ 不支持此功能。</p><span id="OSC_h3_5"></span><h3 data-tool="mdnice 編輯器" style="margin-top: 10px;margin-bottom: 5px;padding-top: 10px;font-weight: bold;font-size: 20px;color: rgb(0, 0, 0);font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.4;"><span style="padding-left: 1em;color: rgb(81, 81, 81);font-size: 17px;border-left: 3px solid rgb(249, 191, 69);">autoGPTQ 有什麼好處？</span></h3><p data-tool="mdnice 編輯器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);"><strong style="color: black;">文本生成速度快</strong>: 對&nbsp;文本生成&nbsp;任務而言，GPTQ 量化模型的速度比 bitsandbytes 量化模型的速度更快，下文我們會詳細比較。</p><p data-tool="mdnice 編輯器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);"><strong style="color: black;">n 比特支持</strong>: GPTQ 算法可以將模型量化至 2 比特！但這可能會導致嚴重的質量下降。我們建議使用 4 比特，這個值對 GPTQ 而言是個很好的折衷。</p><p data-tool="mdnice 編輯器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);"><strong style="color: black;">易於序列化</strong>: GPTQ 模型支持任意比特的序列化。只要安裝了所需的軟件包，就支持開箱即用地從 TheBloke 空間&nbsp;中加載後綴為&nbsp;<code style="margin: 3px;padding: 3px;font-size: 14px;border-radius: 4px;font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;color: rgb(155, 110, 35);background-color: rgb(255, 245, 227);">-GPTQ</code>&nbsp;的模型。bitsandbytes 支持 8 比特序列化，但尚不支持 4 比特序列化。</p><p data-tool="mdnice 編輯器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);"><strong style="color: black;">AMD 支持</strong>: 開箱即用支持 AMD GPU！</p><span id="OSC_h3_6"></span><h3 data-tool="mdnice 編輯器" style="margin-top: 10px;margin-bottom: 5px;padding-top: 10px;font-weight: bold;font-size: 20px;color: rgb(0, 0, 0);font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.4;"><span style="padding-left: 1em;color: rgb(81, 81, 81);font-size: 17px;border-left: 3px solid rgb(249, 191, 69);">bitsandbytes 還有哪些潛在的改進空間？</span></h3><p data-tool="mdnice 編輯器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);"><strong style="color: black;">文本生成速度比 GPTQ 慢</strong>: 使用&nbsp;<code style="margin: 3px;padding: 3px;font-size: 14px;border-radius: 4px;font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;color: rgb(155, 110, 35);background-color: rgb(255, 245, 227);">generate</code>&nbsp;接口時，bitsandbytes 4 比特模型比 GPTQ 慢。</p><p data-tool="mdnice 編輯器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);"><strong style="color: black;">4 比特權重不可序列化</strong>: 目前，4 比特模型無法序列化。社區用户經常提出這樣的請求，我們相信 bitsandbytes 維護者應該很快就能解決這個問題，因為這已經在其路線圖中了！</p><span id="OSC_h3_7"></span><h3 data-tool="mdnice 編輯器" style="margin-top: 10px;margin-bottom: 5px;padding-top: 10px;font-weight: bold;font-size: 20px;color: rgb(0, 0, 0);font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.4;"><span style="padding-left: 1em;color: rgb(81, 81, 81);font-size: 17px;border-left: 3px solid rgb(249, 191, 69);">autoGPTQ 還有哪些潛在的改進空間？</span></h3><p data-tool="mdnice 編輯器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);"><strong style="color: black;">校準數據集</strong>: 對校準數據集的需求可能會讓一些用户難以用上 GPTQ。此外，模型量化可能需要幾個小時 (例如，根據&nbsp;該論文第 2 節，175B 的模型需要 4 個 GPU 時)。</p><p data-tool="mdnice 編輯器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);"><strong style="color: black;">目前僅可用於語言模型</strong>: 截至目前，用 autoGPTQ 對模型進行量化的 API 僅支持語言模型。使用 GPTQ 算法量化非文本 (或多模態) 模型應該是可行的，但原始論文或 auto-gptq 代碼庫中尚未對此有詳細説明。如果社區對這方面很有興趣，將來可能會考慮這一點。</p><span id="OSC_h2_8"></span><h2 data-tool="mdnice 編輯器" style="margin-top: 2em;margin-bottom: 35px;font-weight: bold;font-size: 22px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.2em;color: rgb(255, 157, 0);"><span style="margin-right: 3px;padding: 2px 13px;color: rgb(255, 157, 11);visibility: visible;display: inline-block;border-left: 5px solid rgb(255, 157, 0);height: 30.3958px;font-size: 18px;">深入研究速度基準</span><span style="padding-left: 10px;font-size: 18px;color: rgb(255, 157, 11);display: inline-block;border-left: 5px solid rgb(255, 157, 11);visibility: visible;"></span></h2><p data-tool="mdnice 編輯器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);">我們決定在不同硬件上使用 bitsandbytes 和 auto-gptq 在推理和適配器微調這兩大場景上進行一系列廣泛的基準測試。推理基準測試應該讓用户瞭解不同推理方法之間可能存在的速度差異，而適配器微調基準測試應該讓用户在需要決定選擇 bitsandbytes 還是 GPTQ 基礎模型進行適配器微調時有一個清晰的判斷。</p><p data-tool="mdnice 編輯器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);">基本設置如下:</p><ul data-tool="mdnice 編輯器" class="list-paddingleft-1" style="margin-top: 8px;margin-bottom: 8px;padding-left: 25px;width: 557.438px;color: rgb(0, 0, 0);font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;"><li><section style="margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(58, 58, 58);">
     bitsandbytes: 使用&nbsp; 
    <code style="margin: 3px;padding: 3px;font-size: 14px;border-radius: 4px;font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;color: rgb(155, 110, 35);background-color: rgb(255, 245, 227);">bnb_4bit_compute_dtype=torch.float16</code>&nbsp;進行 4 比特量化。確保使用&nbsp; 
    <code style="margin: 3px;padding: 3px;font-size: 14px;border-radius: 4px;font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;color: rgb(155, 110, 35);background-color: rgb(255, 245, 227);">bitsandbytes&gt;=0.41.1</code>&nbsp;，以用上 4 比特加速核函數。 
   </section></li><li><section style="margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(58, 58, 58);">
     auto-gptq: 確保&nbsp; 
    <code style="margin: 3px;padding: 3px;font-size: 14px;border-radius: 4px;font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;color: rgb(155, 110, 35);background-color: rgb(255, 245, 227);">auto-gptq&gt;=0.4.0</code>&nbsp;以用上&nbsp; 
    <code style="margin: 3px;padding: 3px;font-size: 14px;border-radius: 4px;font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;color: rgb(155, 110, 35);background-color: rgb(255, 245, 227);">exllama</code>&nbsp;加速核函數進行 4 比特量化。 
   </section></li></ul><span id="OSC_h3_9"></span><h3 data-tool="mdnice 編輯器" style="margin-top: 10px;margin-bottom: 5px;padding-top: 10px;font-weight: bold;font-size: 20px;color: rgb(0, 0, 0);font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.4;"><span style="padding-left: 1em;color: rgb(81, 81, 81);font-size: 17px;border-left: 3px solid rgb(249, 191, 69);">推理速度 (僅前向)</span></h3><p data-tool="mdnice 編輯器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);">該基準測試僅測量預填充 (prefill) 步驟，該步驟對應於訓練期間的前向傳遞。測試基於單張英偉達 A100-SXM4-80GB GPU，提示長度為 512，模型為&nbsp;<code style="margin: 3px;padding: 3px;font-size: 14px;border-radius: 4px;font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;color: rgb(155, 110, 35);background-color: rgb(255, 245, 227);">meta-llama/Llama-2-13b-hf</code>&nbsp;。</p><p data-tool="mdnice 編輯器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);">batch size = 1 時:</p><section data-tool="mdnice 編輯器" style="margin-bottom: 0px;color: rgb(0, 0, 0);font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;overflow-x: auto;"><table><thead><tr style="border-width: 1px 0px 0px;border-right-style: initial;border-bottom-style: initial;border-left-style: initial;border-right-color: initial;border-bottom-color: initial;border-left-color: initial;border-top-style: solid;border-top-color: rgb(204, 204, 204);background-color: white;"><th style="border-top-width: 1px;border-color: rgb(204, 204, 204);background-color: rgb(240, 240, 240);text-align: center;min-width: 85px;">量化方法</th><th style="border-top-width: 1px;border-color: rgb(204, 204, 204);background-color: rgb(240, 240, 240);text-align: center;min-width: 85px;">act_order</th><th style="border-top-width: 1px;border-color: rgb(204, 204, 204);background-color: rgb(240, 240, 240);text-align: center;min-width: 85px;">比特數</th><th style="border-top-width: 1px;border-color: rgb(204, 204, 204);background-color: rgb(240, 240, 240);text-align: center;min-width: 85px;">group_size</th><th style="border-top-width: 1px;border-color: rgb(204, 204, 204);background-color: rgb(240, 240, 240);text-align: center;min-width: 85px;">加速核</th><th style="border-top-width: 1px;border-color: rgb(204, 204, 204);background-color: rgb(240, 240, 240);text-align: center;min-width: 85px;">加載時間 (秒)</th><th style="border-top-width: 1px;border-color: rgb(204, 204, 204);background-color: rgb(240, 240, 240);text-align: center;min-width: 85px;">每詞元延遲 (毫秒)</th><th style="border-top-width: 1px;border-color: rgb(204, 204, 204);background-color: rgb(240, 240, 240);text-align: center;min-width: 85px;">吞吐 (詞元/秒)</th><th style="border-top-width: 1px;border-color: rgb(204, 204, 204);background-color: rgb(240, 240, 240);text-align: center;min-width: 85px;">峯值顯存 (MB)</th></tr></thead><tbody style="border-width: 0px;border-style: initial;border-color: initial;"><tr style="border-width: 1px 0px 0px;border-right-style: initial;border-bottom-style: initial;border-left-style: initial;border-right-color: initial;border-bottom-color: initial;border-left-color: initial;border-top-style: solid;border-top-color: rgb(204, 204, 204);background-color: white;"><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">fp16</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">None</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">None</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">None</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">None</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">26.0</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">36.958</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">27.058</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">29152.98</td></tr><tr style="border-width: 1px 0px 0px;border-right-style: initial;border-bottom-style: initial;border-left-style: initial;border-right-color: initial;border-bottom-color: initial;border-left-color: initial;border-top-style: solid;border-top-color: rgb(204, 204, 204);background-color: rgb(248, 248, 248);"><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">gptq</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">False</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">4</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">128</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">exllama</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">36.2</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">33.711</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">29.663</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">10484.34</td></tr><tr style="border-width: 1px 0px 0px;border-right-style: initial;border-bottom-style: initial;border-left-style: initial;border-right-color: initial;border-bottom-color: initial;border-left-color: initial;border-top-style: solid;border-top-color: rgb(204, 204, 204);background-color: white;"><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">bitsandbytes</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">None</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">4</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">None</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">None</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">37.64</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">52.00</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">19.23</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">11018.36</td></tr></tbody></table></section><p data-tool="mdnice 編輯器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);">batch size = 16 時:</p><section data-tool="mdnice 編輯器" style="margin-bottom: 0px;color: rgb(0, 0, 0);font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;overflow-x: auto;"><table><thead><tr style="border-width: 1px 0px 0px;border-right-style: initial;border-bottom-style: initial;border-left-style: initial;border-right-color: initial;border-bottom-color: initial;border-left-color: initial;border-top-style: solid;border-top-color: rgb(204, 204, 204);background-color: white;"><th style="border-top-width: 1px;border-color: rgb(204, 204, 204);background-color: rgb(240, 240, 240);text-align: center;min-width: 85px;">量化方法</th><th style="border-top-width: 1px;border-color: rgb(204, 204, 204);background-color: rgb(240, 240, 240);text-align: center;min-width: 85px;">act_order</th><th style="border-top-width: 1px;border-color: rgb(204, 204, 204);background-color: rgb(240, 240, 240);text-align: center;min-width: 85px;">比特數</th><th style="border-top-width: 1px;border-color: rgb(204, 204, 204);background-color: rgb(240, 240, 240);text-align: center;min-width: 85px;">group_size</th><th style="border-top-width: 1px;border-color: rgb(204, 204, 204);background-color: rgb(240, 240, 240);text-align: center;min-width: 85px;">加速核</th><th style="border-top-width: 1px;border-color: rgb(204, 204, 204);background-color: rgb(240, 240, 240);text-align: center;min-width: 85px;">加載時間 (秒)</th><th style="border-top-width: 1px;border-color: rgb(204, 204, 204);background-color: rgb(240, 240, 240);text-align: center;min-width: 85px;">每詞元延遲 (毫秒)</th><th style="border-top-width: 1px;border-color: rgb(204, 204, 204);background-color: rgb(240, 240, 240);text-align: center;min-width: 85px;">吞吐 (詞元/秒)</th><th style="border-top-width: 1px;border-color: rgb(204, 204, 204);background-color: rgb(240, 240, 240);text-align: center;min-width: 85px;">峯值顯存 (MB)</th></tr></thead><tbody style="border-width: 0px;border-style: initial;border-color: initial;"><tr style="border-width: 1px 0px 0px;border-right-style: initial;border-bottom-style: initial;border-left-style: initial;border-right-color: initial;border-bottom-color: initial;border-left-color: initial;border-top-style: solid;border-top-color: rgb(204, 204, 204);background-color: white;"><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">fp16</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">None</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">None</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">None</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">None</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">26.0</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">69.94</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">228.76</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">53986.51</td></tr><tr style="border-width: 1px 0px 0px;border-right-style: initial;border-bottom-style: initial;border-left-style: initial;border-right-color: initial;border-bottom-color: initial;border-left-color: initial;border-top-style: solid;border-top-color: rgb(204, 204, 204);background-color: rgb(248, 248, 248);"><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">gptq</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">False</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">4</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">128</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">exllama</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">36.2</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">95.41</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">167.68</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">34777.04</td></tr><tr style="border-width: 1px 0px 0px;border-right-style: initial;border-bottom-style: initial;border-left-style: initial;border-right-color: initial;border-bottom-color: initial;border-left-color: initial;border-top-style: solid;border-top-color: rgb(204, 204, 204);background-color: white;"><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">bitsandbytes</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">None</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">4</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">None</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">None</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">37.64</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">113.98</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">140.38</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">35532.37</td></tr></tbody></table></section><p data-tool="mdnice 編輯器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);">我們可以看到，bitsandbyes 和 GPTQ 的預填充速度相當，batch size 比較大時 GPTQ 稍快一些。欲瞭解有關該基準測試的更多詳細信息，請參閲此&nbsp;鏈接。</p><span id="OSC_h3_10"></span><h3 data-tool="mdnice 編輯器" style="margin-top: 10px;margin-bottom: 5px;padding-top: 10px;font-weight: bold;font-size: 20px;color: rgb(0, 0, 0);font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.4;"><span style="padding-left: 1em;color: rgb(81, 81, 81);font-size: 17px;border-left: 3px solid rgb(249, 191, 69);">生成速度</span></h3><p data-tool="mdnice 編輯器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);">下面測試推理過程中模型的生成速度，你可以在&nbsp;此處&nbsp;找到基準測試腳本，用於重現我們的結果。</p><span id="OSC_h4_11"></span><h4 data-tool="mdnice 編輯器" style="margin-top: 30px;margin-bottom: 15px;font-weight: bold;font-size: 18px;color: rgb(0, 0, 0);font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.2em;">use_cache</h4><p data-tool="mdnice 編輯器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);">我們先測試&nbsp;<code style="margin: 3px;padding: 3px;font-size: 14px;border-radius: 4px;font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;color: rgb(155, 110, 35);background-color: rgb(255, 245, 227);">use_cache</code>&nbsp;參數的影響，以更好地瞭解在生成過程中鍵值緩存對速度的影響。</p><p data-tool="mdnice 編輯器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);">該基準測試在 A100 上運行，提示長度為 30，生成詞元數也為 30，模型為&nbsp;<code style="margin: 3px;padding: 3px;font-size: 14px;border-radius: 4px;font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;color: rgb(155, 110, 35);background-color: rgb(255, 245, 227);">meta-llama/Llama-2-7b-hf</code>&nbsp;。</p><p data-tool="mdnice 編輯器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);"><code style="margin: 3px;padding: 3px;font-size: 14px;border-radius: 4px;font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;color: rgb(155, 110, 35);background-color: rgb(255, 245, 227);">use_cache=True</code>&nbsp;時:</p><figure data-tool="mdnice 編輯器" style="margin-top: 10px;margin-bottom: 10px;color: rgb(0, 0, 0);font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;display: flex;flex-direction: column;justify-content: center;align-items: center;"><img class="rich_pages wxw-img" data-ratio="0.7776726584673604" data-type="png" data-w="1057" style="margin-right: auto;margin-bottom: 15px;margin-left: auto;width: 456px;border-radius: 5px;display: block;height: auto !important;" src="https://oscimg.oschina.net/oscnet/89cecb17-53bf-4d9d-a2ba-240693eb1dc1.png" referrerpolicy="no-referrer"><figcaption style="margin-top: 5px;text-align: center;color: rgb(221, 165, 45);font-size: 14px;">
    use_cache=True A100 基準測試結果 
  </figcaption></figure><p data-tool="mdnice 編輯器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);"><code style="margin: 3px;padding: 3px;font-size: 14px;border-radius: 4px;font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;color: rgb(155, 110, 35);background-color: rgb(255, 245, 227);">use_cache=False</code>&nbsp;時:</p><figure data-tool="mdnice 編輯器" style="margin-top: 10px;margin-bottom: 10px;color: rgb(0, 0, 0);font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;display: flex;flex-direction: column;justify-content: center;align-items: center;"><img class="rich_pages wxw-img" data-ratio="0.75" data-type="jpeg" data-w="1080" style="margin-right: auto;margin-bottom: 15px;margin-left: auto;width: 480px;border-radius: 5px;display: block;height: auto !important;" src="https://oscimg.oschina.net/oscnet/022b4baa-5ae6-4f1d-958b-e3310900c08c.jpg" referrerpolicy="no-referrer"><figcaption style="margin-top: 5px;text-align: center;color: rgb(221, 165, 45);font-size: 14px;">
    use_cache=False A100 基準測試結果 
  </figcaption></figure><p data-tool="mdnice 編輯器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);">通過這兩個基準測試，可以得出結論，使用注意力緩存時，生成速度會更快，該結論符合預期。此外，一般來説，GPTQ 比 bitsandbytes 更快。例如，&nbsp;<code style="margin: 3px;padding: 3px;font-size: 14px;border-radius: 4px;font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;color: rgb(155, 110, 35);background-color: rgb(255, 245, 227);">batch_size=4</code>&nbsp;且&nbsp;<code style="margin: 3px;padding: 3px;font-size: 14px;border-radius: 4px;font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;color: rgb(155, 110, 35);background-color: rgb(255, 245, 227);">use_cache=True</code>&nbsp;時，GPTQ 速度快了一倍！因此，我們下一個基準測試中會直接使用&nbsp;<code style="margin: 3px;padding: 3px;font-size: 14px;border-radius: 4px;font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;color: rgb(155, 110, 35);background-color: rgb(255, 245, 227);">use_cache=True</code>&nbsp;。請注意，&nbsp;<code style="margin: 3px;padding: 3px;font-size: 14px;border-radius: 4px;font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;color: rgb(155, 110, 35);background-color: rgb(255, 245, 227);">use_cache=True</code>&nbsp;會消耗更多顯存。</p><span id="OSC_h4_12"></span><h4 data-tool="mdnice 編輯器" style="margin-top: 30px;margin-bottom: 15px;font-weight: bold;font-size: 18px;color: rgb(0, 0, 0);font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.2em;">硬件</h4><p data-tool="mdnice 編輯器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);">下面，我們看看量化模型在不同的硬件上的表現。我們使用的提示長度為 30，生成 30 個詞元，使用的模型是&nbsp;<code style="margin: 3px;padding: 3px;font-size: 14px;border-radius: 4px;font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;color: rgb(155, 110, 35);background-color: rgb(255, 245, 227);">meta-llama/Llama-2-7b-hf</code>&nbsp;。</p><p data-tool="mdnice 編輯器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);">單張 A100:</p><figure data-tool="mdnice 編輯器" style="margin-top: 10px;margin-bottom: 10px;color: rgb(0, 0, 0);font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;display: flex;flex-direction: column;justify-content: center;align-items: center;"><img class="rich_pages wxw-img" data-ratio="0.7776726584673604" data-type="png" data-w="1057" style="margin-right: auto;margin-bottom: 15px;margin-left: auto;width: 475px;border-radius: 5px;display: block;height: auto !important;" src="https://oscimg.oschina.net/oscnet/89cecb17-53bf-4d9d-a2ba-240693eb1dc1.png" referrerpolicy="no-referrer"><figcaption style="margin-top: 5px;text-align: center;color: rgb(221, 165, 45);font-size: 14px;">
    A100 基準測試結果 
  </figcaption></figure><p data-tool="mdnice 編輯器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);">單張 T4:</p><figure data-tool="mdnice 編輯器" style="margin-top: 10px;margin-bottom: 10px;color: rgb(0, 0, 0);font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;display: flex;flex-direction: column;justify-content: center;align-items: center;"><img class="rich_pages wxw-img" data-ratio="0.75" data-type="jpeg" data-w="1080" style="margin-right: auto;margin-bottom: 15px;margin-left: auto;width: 498px;border-radius: 5px;display: block;height: auto !important;" src="https://oscimg.oschina.net/oscnet/cb3e5573-2968-485b-9022-4c5349549b6e.jpg" referrerpolicy="no-referrer"><figcaption style="margin-top: 5px;text-align: center;color: rgb(221, 165, 45);font-size: 14px;">
    T4 基準測試結果 
  </figcaption></figure><p data-tool="mdnice 編輯器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);">單張 Titan RTX:</p><figure data-tool="mdnice 編輯器" style="margin-top: 10px;margin-bottom: 10px;color: rgb(0, 0, 0);font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;display: flex;flex-direction: column;justify-content: center;align-items: center;"><img class="rich_pages wxw-img" data-ratio="0.75" data-type="jpeg" data-w="1080" style="margin-right: auto;margin-bottom: 15px;margin-left: auto;width: 484px;border-radius: 5px;display: block;height: auto !important;" src="https://oscimg.oschina.net/oscnet/7ec27ae0-dce1-41ad-9622-a3f7a6bb6446.jpg" referrerpolicy="no-referrer"><figcaption style="margin-top: 5px;text-align: center;color: rgb(221, 165, 45);font-size: 14px;">
    TITAN RTX 基準測試結果 
  </figcaption></figure><p data-tool="mdnice 編輯器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);">從上面的基準測試中，我們可以得出結論，對於這三款 GPU，GPTQ 都比 bitsandbytes 更快。</p><span id="OSC_h4_13"></span><h4 data-tool="mdnice 編輯器" style="margin-top: 30px;margin-bottom: 15px;font-weight: bold;font-size: 18px;color: rgb(0, 0, 0);font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.2em;">生成長度</h4><p data-tool="mdnice 編輯器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);">在下面的基準測試中，我們將嘗試不同的生成長度，看看它們對量化模型速度的影響。實驗基於 A100，我們使用的提示長度為 30，並改變生成詞元的長度。使用的模型是&nbsp;<code style="margin: 3px;padding: 3px;font-size: 14px;border-radius: 4px;font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;color: rgb(155, 110, 35);background-color: rgb(255, 245, 227);">meta-llama/Llama-2-7b-hf</code>&nbsp;。</p><p data-tool="mdnice 編輯器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);">生成 30 個詞元:</p><figure data-tool="mdnice 編輯器" style="margin-top: 10px;margin-bottom: 10px;color: rgb(0, 0, 0);font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;display: flex;flex-direction: column;justify-content: center;align-items: center;"><img class="rich_pages wxw-img" data-ratio="0.7776726584673604" data-type="png" data-w="1057" style="margin-right: auto;margin-bottom: 15px;margin-left: auto;width: 469px;border-radius: 5px;display: block;height: auto !important;" src="https://oscimg.oschina.net/oscnet/89cecb17-53bf-4d9d-a2ba-240693eb1dc1.png" referrerpolicy="no-referrer"><figcaption style="margin-top: 5px;text-align: center;color: rgb(221, 165, 45);font-size: 14px;">
    A100 基準測試結果 
  </figcaption></figure><p data-tool="mdnice 編輯器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);">生成 512 個詞元:</p><figure data-tool="mdnice 編輯器" style="margin-top: 10px;margin-bottom: 10px;color: rgb(0, 0, 0);font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;display: flex;flex-direction: column;justify-content: center;align-items: center;"><img class="rich_pages wxw-img" data-ratio="0.75" data-type="jpeg" data-w="1080" style="margin-right: auto;margin-bottom: 15px;margin-left: auto;width: 500px;border-radius: 5px;display: block;height: auto !important;" src="https://oscimg.oschina.net/oscnet/60f8c3d1-292c-4d18-aef8-8eedd1161826.jpg" referrerpolicy="no-referrer"><figcaption style="margin-top: 5px;text-align: center;color: rgb(221, 165, 45);font-size: 14px;">
    生成 512 個詞元的 A100 基準測試結果 
  </figcaption></figure><p data-tool="mdnice 編輯器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);">從以上基準測試中，我們可以得出結論，無論生成長度如何，GPTQ 都比 bitsandbytes 更快。</p><span id="OSC_h3_14"></span><h3 data-tool="mdnice 編輯器" style="margin-top: 10px;margin-bottom: 5px;padding-top: 10px;font-weight: bold;font-size: 20px;color: rgb(0, 0, 0);font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.4;"><span style="padding-left: 1em;color: rgb(81, 81, 81);font-size: 17px;border-left: 3px solid rgb(249, 191, 69);">適配器微調 (前向 + 後向)</span></h3><p data-tool="mdnice 編輯器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);">對量化模型進行全模型微調是不可能的。但是，你可以利用參數高效微調 (PEFT) 來微調量化模型，在其之上訓練新的適配器。我們使用一種名為「低秩適配器 (LoRA)」的微調方法: 無需微調整個模型，僅需微調這些適配器並將它們正確加載到模型中。我們來對比一下微調速度吧！</p><p data-tool="mdnice 編輯器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);">該基準測試基於英偉達 A100 GPU，我們使用 Hub 中的&nbsp;<code style="margin: 3px;padding: 3px;font-size: 14px;border-radius: 4px;font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;color: rgb(155, 110, 35);background-color: rgb(255, 245, 227);">meta-llama/Llama-2-7b-hf</code>&nbsp;模型。請注意，對於 GPTQ 模型，我們必須禁用&nbsp;<code style="margin: 3px;padding: 3px;font-size: 14px;border-radius: 4px;font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;color: rgb(155, 110, 35);background-color: rgb(255, 245, 227);">exllama</code>&nbsp;加速核，因為它不支持微調。</p><figure data-tool="mdnice 編輯器" style="margin-top: 10px;margin-bottom: 10px;color: rgb(0, 0, 0);font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;display: flex;flex-direction: column;justify-content: center;align-items: center;"><img class="rich_pages wxw-img" data-ratio="0.75" data-type="png" data-w="640" style="margin-right: auto;margin-bottom: 15px;margin-left: auto;width: 487px;border-radius: 5px;display: block;height: auto !important;" src="https://oscimg.oschina.net/oscnet/13c41f61-4906-4881-8a38-8b3b4e76b862.png" referrerpolicy="no-referrer"><figcaption style="margin-top: 5px;text-align: center;color: rgb(221, 165, 45);font-size: 14px;">
    A100 微調基準測試結果 
  </figcaption></figure><p data-tool="mdnice 編輯器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);">從結果中，我們可以得出結論，bitsandbytes 的微調速度比 GPTQ 更快。</p><span id="OSC_h3_15"></span><h3 data-tool="mdnice 編輯器" style="margin-top: 10px;margin-bottom: 5px;padding-top: 10px;font-weight: bold;font-size: 20px;color: rgb(0, 0, 0);font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.4;"><span style="padding-left: 1em;color: rgb(81, 81, 81);font-size: 17px;border-left: 3px solid rgb(249, 191, 69);">性能退化</span></h3><p data-tool="mdnice 編輯器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);">量化對於減少內存消耗非常有用。然而，它也會帶來性能退化。我們使用 Open-LLM 排行榜&nbsp;來比較性能！</p><p data-tool="mdnice 編輯器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);">對於 7B 模型:</p><section data-tool="mdnice 編輯器" style="margin-bottom: 0px;color: rgb(0, 0, 0);font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;overflow-x: auto;"><table><thead><tr style="border-width: 1px 0px 0px;border-right-style: initial;border-bottom-style: initial;border-left-style: initial;border-right-color: initial;border-bottom-color: initial;border-left-color: initial;border-top-style: solid;border-top-color: rgb(204, 204, 204);background-color: white;"><th style="border-top-width: 1px;border-color: rgb(204, 204, 204);background-color: rgb(240, 240, 240);text-align: center;min-width: 85px;">模型</th><th style="border-top-width: 1px;border-color: rgb(204, 204, 204);background-color: rgb(240, 240, 240);text-align: center;min-width: 85px;">均值</th><th style="border-top-width: 1px;border-color: rgb(204, 204, 204);background-color: rgb(240, 240, 240);text-align: center;min-width: 85px;">ARC</th><th style="border-top-width: 1px;border-color: rgb(204, 204, 204);background-color: rgb(240, 240, 240);text-align: center;min-width: 85px;">Hellaswag</th><th style="border-top-width: 1px;border-color: rgb(204, 204, 204);background-color: rgb(240, 240, 240);text-align: center;min-width: 85px;">MMLU</th><th style="border-top-width: 1px;border-color: rgb(204, 204, 204);background-color: rgb(240, 240, 240);text-align: center;min-width: 85px;">TruthfulQA</th></tr></thead><tbody style="border-width: 0px;border-style: initial;border-color: initial;"><tr style="border-width: 1px 0px 0px;border-right-style: initial;border-bottom-style: initial;border-left-style: initial;border-right-color: initial;border-bottom-color: initial;border-left-color: initial;border-top-style: solid;border-top-color: rgb(204, 204, 204);background-color: white;"><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">meta-llama/llama-2-7b-hf</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;"><strong>54.32</strong></td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">53.07</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">78.59</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">46.87</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">38.76</td></tr><tr style="border-width: 1px 0px 0px;border-right-style: initial;border-bottom-style: initial;border-left-style: initial;border-right-color: initial;border-bottom-color: initial;border-left-color: initial;border-top-style: solid;border-top-color: rgb(204, 204, 204);background-color: rgb(248, 248, 248);"><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">meta-llama/llama-2-7b-hf-bnb-4bit</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;"><strong>53.4</strong></td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">53.07</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">77.74</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">43.8</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">38.98</td></tr><tr style="border-width: 1px 0px 0px;border-right-style: initial;border-bottom-style: initial;border-left-style: initial;border-right-color: initial;border-bottom-color: initial;border-left-color: initial;border-top-style: solid;border-top-color: rgb(204, 204, 204);background-color: white;"><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">TheBloke/Llama-2-7B-GPTQ</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;"><strong>53.23</strong></td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">52.05</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">77.59</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">43.99</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">39.32</td></tr></tbody></table></section><p data-tool="mdnice 編輯器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);">對於 13B 模型:</p><section data-tool="mdnice 編輯器" style="margin-bottom: 0px;color: rgb(0, 0, 0);font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;overflow-x: auto;"><table><thead><tr style="border-width: 1px 0px 0px;border-right-style: initial;border-bottom-style: initial;border-left-style: initial;border-right-color: initial;border-bottom-color: initial;border-left-color: initial;border-top-style: solid;border-top-color: rgb(204, 204, 204);background-color: white;"><th style="border-top-width: 1px;border-color: rgb(204, 204, 204);background-color: rgb(240, 240, 240);text-align: center;min-width: 85px;">模型</th><th style="border-top-width: 1px;border-color: rgb(204, 204, 204);background-color: rgb(240, 240, 240);text-align: center;min-width: 85px;">均值</th><th style="border-top-width: 1px;border-color: rgb(204, 204, 204);background-color: rgb(240, 240, 240);text-align: center;min-width: 85px;">ARC</th><th style="border-top-width: 1px;border-color: rgb(204, 204, 204);background-color: rgb(240, 240, 240);text-align: center;min-width: 85px;">Hellaswag</th><th style="border-top-width: 1px;border-color: rgb(204, 204, 204);background-color: rgb(240, 240, 240);text-align: center;min-width: 85px;">MMLU</th><th style="border-top-width: 1px;border-color: rgb(204, 204, 204);background-color: rgb(240, 240, 240);text-align: center;min-width: 85px;">TruthfulQA</th></tr></thead><tbody style="border-width: 0px;border-style: initial;border-color: initial;"><tr style="border-width: 1px 0px 0px;border-right-style: initial;border-bottom-style: initial;border-left-style: initial;border-right-color: initial;border-bottom-color: initial;border-left-color: initial;border-top-style: solid;border-top-color: rgb(204, 204, 204);background-color: white;"><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">meta-llama/llama-2-13b-hf</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;"><strong>58.66</strong></td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">59.39</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">82.13</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">55.74</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">37.38</td></tr><tr style="border-width: 1px 0px 0px;border-right-style: initial;border-bottom-style: initial;border-left-style: initial;border-right-color: initial;border-bottom-color: initial;border-left-color: initial;border-top-style: solid;border-top-color: rgb(204, 204, 204);background-color: rgb(248, 248, 248);"><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">TheBloke/Llama-2-13B-GPTQ (revision = 'gptq-4bit-128g-actorder_True')</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;"><strong>58.03</strong></td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">59.13</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">81.48</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">54.45</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">37.07</td></tr><tr style="border-width: 1px 0px 0px;border-right-style: initial;border-bottom-style: initial;border-left-style: initial;border-right-color: initial;border-bottom-color: initial;border-left-color: initial;border-top-style: solid;border-top-color: rgb(204, 204, 204);background-color: white;"><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">TheBloke/Llama-2-13B-GPTQ</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;"><strong>57.56</strong></td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">57.25</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">81.66</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">54.81</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">36.56</td></tr><tr style="border-width: 1px 0px 0px;border-right-style: initial;border-bottom-style: initial;border-left-style: initial;border-right-color: initial;border-bottom-color: initial;border-left-color: initial;border-top-style: solid;border-top-color: rgb(204, 204, 204);background-color: rgb(248, 248, 248);"><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">meta-llama/llama-2-13b-hf-bnb-4bit</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;"><strong>56.9</strong></td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">58.11</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">80.97</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">54.34</td><td style="border-color: rgb(204, 204, 204);text-align: center;min-width: 85px;">34.17</td></tr></tbody></table></section><p data-tool="mdnice 編輯器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);">從上面的結果中，我們可以得出結論，模型越大，退化越少。更有意思的是，所有的退化都很小！</p><span id="OSC_h2_16"></span><h2 data-tool="mdnice 編輯器" style="margin-top: 2em;margin-bottom: 35px;font-weight: bold;font-size: 22px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.2em;color: rgb(255, 157, 0);"><span style="margin-right: 3px;padding: 2px 13px;color: rgb(255, 157, 11);visibility: visible;display: inline-block;border-left: 5px solid rgb(255, 157, 0);height: 30.3958px;font-size: 18px;">總結與最後的話</span><span style="padding-left: 10px;font-size: 18px;color: rgb(255, 157, 11);display: inline-block;border-left: 5px solid rgb(255, 157, 11);visibility: visible;"></span></h2><p data-tool="mdnice 編輯器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);">通過本文，我們比較了多種設置下的 bitsandbytes 和 GPTQ 量化。我們發現，bitsandbytes 更適合微調，而 GPTQ 更適合生成。根據這一觀察，獲得最佳合併模型的一種方法是:</p><ul data-tool="mdnice 編輯器" class="list-paddingleft-1" style="margin-top: 8px;margin-bottom: 8px;padding-left: 25px;width: 557.438px;color: rgb(0, 0, 0);font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;"><li><section style="margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(58, 58, 58);">
     (1) 使用 bitsandbytes 量化基礎模型 (零樣本量化) 
   </section></li><li><section style="margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(58, 58, 58);">
     (2) 添加並微調適配器 
   </section></li><li><section style="margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(58, 58, 58);">
     (3) 將訓練後的適配器合併到基礎模型或&nbsp;反量化模型&nbsp;之中！ 
   </section></li><li><section style="margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(58, 58, 58);">
     (4) 使用 GPTQ 量化合並後的模型並將其用於部署 
   </section></li></ul><p data-tool="mdnice 編輯器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);">我們希望這個概述讓每個人都能更輕鬆地將 LLM 應用至各自的應用場景中，我們期待看到大家用它構建自己的有趣應用！</p><span id="OSC_h2_17"></span><h2 data-tool="mdnice 編輯器" style="margin-top: 2em;margin-bottom: 35px;font-weight: bold;font-size: 22px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.2em;color: rgb(255, 157, 0);"><span style="margin-right: 3px;padding: 2px 13px;color: rgb(255, 157, 11);visibility: visible;display: inline-block;border-left: 5px solid rgb(255, 157, 0);height: 30.3958px;font-size: 18px;">致謝</span><span style="padding-left: 10px;font-size: 18px;color: rgb(255, 157, 11);display: inline-block;border-left: 5px solid rgb(255, 157, 11);visibility: visible;"></span></h2><p data-tool="mdnice 編輯器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);">我們要感謝 Ilyas、Clémentine 和 Felix 在基準測試上的幫助。</p><p data-tool="mdnice 編輯器" style="margin-bottom: 20px;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;line-height: 1.8em;color: rgb(58, 58, 58);">我們還要感謝 Pedro Cuenca 對本文撰寫的幫助。</p><blockquote data-tool="mdnice 編輯器" style="margin-top: 20px;margin-bottom: 20px;padding: 10px 10px 10px 20px;border-left-color: rgb(255, 177, 27);color: rgb(106, 115, 125);font-size: 0.9em;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;letter-spacing: normal;text-align: left;text-wrap: wrap;border-top: none;border-right: none;border-bottom: none;overflow: auto;background: rgb(255, 245, 227);"><p style="font-size: 16px;line-height: 26px;color: rgb(89, 89, 89);">🤗 寶子們可以戳&nbsp;<strong style="color: black;">閲讀原文</strong>&nbsp;查看文中所有的外部鏈接喲！</p></blockquote><hr data-tool="mdnice 編輯器" style="margin-top: 20px;margin-bottom: 20px;color: rgb(0, 0, 0);font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;font-size: 16px;letter-spacing: normal;text-align: left;text-wrap: wrap;height: 1px;border-right: none;border-bottom: none;border-left: none;border-top-style: solid;border-top-color: rgb(249, 191, 69);"><blockquote data-tool="mdnice 編輯器" style="margin-top: 0px;margin-bottom: 0px;padding-top: 1px;padding-bottom: 1px;padding-left: 5px;color: rgb(91, 91, 91);font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;letter-spacing: normal;text-align: left;text-wrap: wrap;border-top: none;border-right: none;border-bottom: none;background: rgba(158, 158, 158, 0.1);"><blockquote style="margin-top: 0px;margin-bottom: 0em;padding-top: 0px;padding-left: 0px;border-width: initial;border-style: none;border-color: initial;"><blockquote style="margin-top: 0px;margin-bottom: 0em;padding-top: 0px;padding-left: 0px;border-width: initial;border-style: none;border-color: initial;"><blockquote style="margin-top: 0px;margin-bottom: 0em;padding-top: 0px;padding-left: 0px;border-width: initial;border-style: none;border-color: initial;"><p style="margin: 10px;color: rgb(63, 63, 63);line-height: 1.5;font-size: 14px;">英文原文:&nbsp;<span style="color: rgb(136, 136, 136);letter-spacing: 0px;">https://hf.co/blog/overview-quantization-transformers</span></p><p style="margin: 10px;color: rgb(63, 63, 63);line-height: 1.5;font-size: 14px;">原文作者: Younes Belkada，Marc Sun，Ilyas Moutawwakil，Clémentine Fourrier，Félix Marty</p><p style="margin: 10px;color: rgb(63, 63, 63);line-height: 1.5;font-size: 14px;">譯者: Matrix Yao (姚偉峯)，英特爾深度學習工程師，工作方向為 transformer-family 模型在各模態數據上的應用及大規模模型的訓練推理</p><p style="margin: 10px;color: rgb(63, 63, 63);line-height: 1.5;font-size: 14px;">審校/排版: zhongdongy (阿東)</p></blockquote></blockquote></blockquote></blockquote><p style="display: none;"><mp-style-type data-value="3"></mp-style-type></p></div><p style="color: #858585; font-size: 13px;">本文分享自微信公眾號 - Hugging Face（gh_504339124f0f）。<br>如有侵權，請聯繫 support@oschina.cn 刪除。<br>本文參與「<a href="https://www.oschina.net/sharing-plan" target="_blank">OSC 源創計劃</a>」，歡迎正在閲讀的你也加入，一起分享。</p></div>
                                    ]]>
            </description>
            <pubDate>Sat, 18 Nov 2023 03:00:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/HuggingFace/blog/10142931</guid>
            <link>https://my.oschina.net/HuggingFace/blog/10142931</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[OpenAI 總裁 Greg Brockman 辭職]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">在&nbsp;<span style="background-color:#ffffff">OpenAI 宣佈 CEO 兼聯合創始人薩姆・阿爾特曼（Sam Alt</span>man<span style="background-color:#ffffff">）離職並退出公司董事會數小時後，OpenAI 總裁兼聯合創始人格雷格・布羅克曼（</span>Greg<span style="background-color:#ffffff">&nbsp;</span>Brockman<span style="background-color:#ffffff">）</span>也<span style="background-color:#ffffff">在社交平台發文宣佈離職。</span></span></p><p><img height="482" src="https://oscimg.oschina.net/oscnet/up-2ff8ed4b48e6c2c73a5fb9a87d3030b4b91.png" width="300" referrerpolicy="no-referrer"></p><p><span style="color:#000000"><span style="background-color:#ffffff">布羅克曼表示他向 OpenAI 團隊發送了以下消息：</span></span></p><blockquote><p>大家好，</p><p>自從 8 年前在我的公寓裏開始創業以來，我們一起建立的一切讓我深感自豪。我們一起經歷了 8 個艱難而又美好的時期，取得了如此巨大的成就，儘管有種種原因證明這本應是不可能的。</p><p>但從今天的新聞來看，我不幹了</p><p>我真心祝願你們一切順利。我將一如既往地堅信創建安全 AGl、造福全人類的使命。</p></blockquote><p><strong>相關閲讀：</strong></p><ul><li><a href="https://www.oschina.net/news/267006/openai-ceo-sam-altman-fired" target="_blank">OpenAI 董事會內訌，CEO 兼創始人 Sam Altman 被逐出公司</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Sat, 18 Nov 2023 02:51:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/267013/openai-greg-brockman-quit</guid>
            <link>https://www.oschina.net/news/267013/openai-greg-brockman-quit</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[OpenAI 董事會內訌，CEO 兼創始人 Sam Altman 被逐出公司]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>根據 OpenAI&nbsp;官網今日的<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopenai.com%2Fblog%2Fopenai-announces-leadership-transition" target="_blank">突發公告</a></u>，OpenAI 董事會宣佈 Sam Altman 將辭去首席執行官一職，並離開公司董事會。</p><p><img src="https://static.oschina.net/uploads/space/2023/1118/094343_jFQ6_2720166.png" referrerpolicy="no-referrer"></p><p>OpenAI 表示，首席技術官 Mira Murati 將臨時擔任首席執行官，該任命立即生效。</p><p>公告寫道，Sam Altman&nbsp;離職是在 OpenAI 公司董事會經過深思熟慮的審查程序之後做出的決策。他們表示，<strong>Sam&nbsp;Altman 在與董事會的溝通中未能始終保持坦誠的態度，妨礙了董事會履行職責的能力。董事會不再相信他有能力繼續領導 OpenAI</strong>。</p><p>此外，Greg Brockman 也將卸任董事會主席一職，但他仍將留在 OpenAI。</p><p>Sam Altman 在社交平台<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftwitter.com%2Fsama%2Fstatus%2F1725631621511184771" target="_blank">確認</a></u>了這一消息，並表示自己很喜歡在 OpenAI 工作的時光。之後他會透露自己接下來的計劃。</p><p><img height="1100" src="https://oscimg.oschina.net/oscnet/up-2df524ec069855367416e640876397304d9.png" width="1274" referrerpolicy="no-referrer"></p><p>Sam Altman 宣佈離開 OpenAI 的消息後，Greg Brockman 隨後也轉發了這條推文，並<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftwitter.com%2Fgdb%2Fstatus%2F1725667410387378559" target="_blank">宣佈</a></u>從 OpenAI 離職。</p><p><img height="1674" src="https://static.oschina.net/uploads/space/2023/1118/103001_guWs_2720166.png" width="1276" referrerpolicy="no-referrer"></p><hr><p><strong>OpenAI 董事會背景介紹</strong></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-d25562ede7c2c9cb8ad6b910dc676e921e6.png" referrerpolicy="no-referrer"></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-36af122dcd1cd3ff5d78eed6751de5fcbcb.png" referrerpolicy="no-referrer"></p><hr><p>下面是一些爆料：</p><blockquote><p>OpenAI 的高層將有大批離職，我預計 Altman 今晚會對此作出迴應。據我所知，這起事件源於公司內部追求利潤的一派和堅持非盈利原則的一派之間的「觀念不合」。開發者大會上的一些問題也是導火索。</p><p>消息人士透露，在 Altman 的領導下，公司更傾向於追求盈利，並且開發步伐迅猛，這被一些人認為過於冒險。與此同時，堅持非盈利原則的一派則更注重安全和謹慎，雙方因此產生了分歧。</p><p>Sam 陣營中的一位人士稱這是一次「政變」，而另一位則認為這是正確的決策。 儘管這種説法似乎更有道理，但科技界充斥着形形色色的謠言，其中不乏一些荒誕不經的。顯然，我們還將面臨許多值得質疑的消息。</p><p>還有消息人士指出，這場分歧的主要雙方是 Altman/Brockman 組合與首席科學家 Ilya Sutskever 和董事會成員 Helen Toner，後兩者在這次事件中立場一致。</p><p><img height="538" src="https://static.oschina.net/uploads/space/2023/1118/101316_JdcD_2720166.png" width="1276" referrerpolicy="no-referrer"><br><br> via&nbsp;<u><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftwitter.com%2Fkaraswisher%2Fstatus%2F1725678074333635028" target="_blank">https://twitter.com/karaswisher/status/1725678074333635028</a></em></u></p></blockquote></div>
                                    ]]>
            </description>
            <pubDate>Sat, 18 Nov 2023 01:38:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/267006/openai-ceo-sam-altman-fired</guid>
            <link>https://www.oschina.net/news/267006/openai-ceo-sam-altman-fired</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[鮮衣怒馬少年時｜GreptimeDB 開源一週年回顧]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h2>開源故事</h2><p>也許在進入軟件行業的第一天，我們就已經與開源結緣。</p><p>很難想象沒有開源的世界會是什麼樣子，非要舉個例子的話，就好比菜譜不再公開，那所有人都只能自研，説不好連麻婆豆腐都需要遠赴蜀地才能品上一品。正因為開源，我們得以共享珍貴的的食譜，所以也願意將自研的食譜無私貢獻出去。</p><p>作為一個現代的軟件從業者，怎麼能不在開源的世界裏有些許經驗呢？Greptime 三位創始人從職業早期就融入到了開源社區中，在受益的過程中也不斷反哺開源，各自負責並維護了多個知名項目（如 SOFAJRaft, handlebars-rust, aviatorscript），有些項目本身的關注度和影響力都超過了 GreptimeDB。</p><p>在不斷接觸開源的過程中，一個有趣又大膽的想法在創始人莊曉丹心裏如切如磋，如琢如磨：「打造一款世界級的基礎軟件」。他和另一位創始人馮家純在螞蟻集團實踐 AIOps 智能運維時，因為市面並沒有一款滿足需求的超大規模時序數據平台而選擇了自研，同時來自滴滴的另一位創始人孫寧也看到了時序數據存儲、分析對於車聯網的重要價值。所謂念念不忘，必有回想，三人一拍即合，這個「世界級的基礎軟件」的團隊雛形就這麼誕生了——打造一款面向未來且更貼近市場需求的時序數據庫。</p><p>這種對產品品質高度追求的熱切和渴望，不僅來自於創始人本身，也來自於整個 Greptime 團隊。這裏的每一個小夥伴都身懷絕技，有人放棄高薪埋頭苦幹，也有人從技術轉向市場，更有人身兼技術、市場和運營多職⋯⋯底層的基礎軟件本身就很難做，加上開源更是 buff 疊滿，沒點情懷的人，真的不敢做開源。</p><p>正是這羣少而精專的人，成就了現在的 Greptime（格睿科技），基於開源的 GreptimeDB 不斷衍生和迭代出了商業化版本的時序數據庫 GreptimeCloud 和可觀測的 AI 工具 GreptimeAI 兩款產品。</p><h3>我們還做了一個視頻，和 GreptimeDB 回顧一週年的成長曆程🎥（感興趣的小夥伴請自行尋找視頻 🔍）</h3><h2>開源數據</h2><p><img src="https://oscimg.oschina.net/oscnet/up-f88e430b4ec657a770973ec32c4d8a8bcab.png" alt="" referrerpolicy="no-referrer"></p><h2>開源歷程（版本發佈）</h2><p>GreptimeDB 自去年宣佈開源後歷經 v0.1 到 v0.4，每一個版本的發佈都意味着 GreptimeDB 又一次的成長和完善。從框架構建到分佈式能力的實現，再到新引擎 Mito 的重大革新，GreptimeDB 一直在路上：</p><p><img src="https://oscimg.oschina.net/oscnet/up-44a9791c096b6701e22a6ada7096cbe0d0e.png" alt="" referrerpolicy="no-referrer"></p><ul><li><p>2023.3.8 GreptimeDB v0.1 聚焦單機功能</p></li><li><p>2023.4.19 GreptimeDB v0.2 單機功能強化，雲分佈式開啓</p><ul><li>完善單機功能；</li><li>PromQL 兼容性提升至 50%；</li><li>提出 Procedure 框架；</li><li>為 Cloud 和，分佈式鋪墊基礎。</li></ul></li><li><p>2023.6.7 GreptimeDB v0.3 分佈式初版：查詢性能優化和穩定性增強</p><ul><li>分佈式性能優化；</li><li>查詢能力提升； -穩定性增強。</li></ul></li><li><p>2023.10.10 GreptimeDB v0.4 寫入查詢能力提升，查詢性能提升 5~20 倍</p><ul><li>新版存儲引擎 Mito2；</li><li>穩定性優化；</li><li>體驗優化；</li><li>PromQL 兼容性提升至 70% 以上。</li></ul></li></ul><p>GreptimeDB 還將繼續穩定更新版本，和社區的大家一起不斷向前。</p><p>不僅有 GreptimeDB，我們還有 GreptimeCloud 和 GreptimeAI 正在公測，歡迎到官網體驗並跟我們聊聊您的使用感受。下面具體明晰 Greptime 系列產品，請看 👀</p><blockquote><p>GreptimeCloud 基於開源的 GreptimeDB，為用户提供全託管的 DBaaS，能夠與可觀測性、物聯網等領域結合的應用產品結合。利用雲提供軟件和服務，可以達到快速的自助開通和交付，標準化的運維支持，和更好的資源彈性。</p></blockquote><blockquote><p>GreptimeAI 是為 LLM 應用量身定製的可觀測性解決方案，開發者可以通過該方案全面、深入地瞭解應用的成本、性能、流量和安全情況，在保證低成本和高性能的同時提供高效可靠的分析能力，同時保留了時序數據庫的靈活性。</p></blockquote><h2>開源意義</h2><p>「又是做數據庫的！」這是我們在技術展會聽到的最多的一句話。做數據庫的廠商確實很多，但也説明這個缺口還沒有被補足，大家的產品在性能方面都各有欠缺，那開源的價值也就出現了：巨大的需求激生了市面上層出不窮的解決方案，每一家廠商都力圖在性能賽道上超越對方。</p><p>開源對於 GreptimeDB 來説，意味着與世界各地誌同道合的人共同探索未知，拼湊出技術的全貌。它不僅讓我們的產品在廣泛的用户和開發者中得到錘鍊，而且構建了一個共同維護和持續改進的技術社區。在這裏，每個人的聲音都能被聽見，每行代碼都匯聚着智慧的火花。這正是開源精神閃耀的時刻，因為它不單是關於代碼的開放，更是一種思維的開放。</p><p>我們做開源，也做商業化，回顧這一年，我們的開源產品 GreptimeDB 和商業化產品 GreptimeCloud 始終是共同進步的，都凝聚了社區的智慧和努力。所以在這個特別的日子，我們不單是在慶祝一個時間節點，更是在讚頌一種開放、合作、共贏的開源精神。</p><h2>開源社區</h2><h3>Greptime social 版</h3><p>開源一年的時間裏，我們走進一個個技術聚會去尋找志同道合的夥伴：在全球 AI 開發者先鋒大會上研討前沿；在慶祝 SOFA 五週年時分享開源之路的感悟；在 Qcon 大會中探討軟件的未來；在 WOT 全球技術創新大會裏展望明天；在 Rust 中國大會上討論 Rust 的可能性；在 COSCon'23 和開源人共話開源意義；在 KubeCon + CloudNativeCon 和來自全球的業內人士探討代碼（點擊會議名稱即可跳轉相關的參會詳情哦 🎉）⋯⋯是代碼匯聚了我們，也是開源連接了我們，見證了我們的成長。</p><p><img src="https://oscimg.oschina.net/oscnet/up-be7d81d1c9c46c50bc46397ef9e37474317.png" alt="" referrerpolicy="no-referrer"></p><h3>Greptime 主辦方版</h3><p>除了融入業界，我們還主辦了以自己社區和產品為主的中/英文線上 Meetup，聯合 EMQX/KubeBlocks/Pika 舉辦了線下 Meetup 贏得了業界同行的共鳴與支持，加深了我們與社區的聯繫（Meetup 回顧請看 Greptime 視頻號）。</p><p><img src="https://oscimg.oschina.net/oscnet/up-f8177361887abb20aafb27ca49cffd0b074.png" alt="" referrerpolicy="no-referrer"></p><h3>Greptime 拓展版</h3><p>在 GreptimeDB 披荊斬棘的過程中，源源不斷地加入了近 50 個 Contributors，其中還晉升了 2 個 Committers ——來自英國的 Eugene 和日本的 Niwaka 出於對 TSDB 的關注和熱愛 🫶 源源不斷地為 GreptimeDB 貢獻了極有價值的 PR，讓我們的框架不斷完善，功能也將在未來趨於完備。</p><p>受到地理優勢的助力，我們的 Contributors 主要來源於中國，也有來自英國、新西蘭和荷蘭等其他國家的貢獻者。同國家的技術朋友對我們的支持和認可令人可親，國外友人的支持也讓我們對自己的產品和正在做的事充滿信心。除此之外，印度和日本的 Contributor 也讓我們看到了時序數據庫之於全球基礎軟件的意義。更榮幸的是我們收穫了非洲尼日利亞技術朋友的關注和代碼支持，並在這個過程中交流愉快。</p><p>Greptime 始終歡迎全球對 Rust、TSDB 和 Infra 感興趣的技術客瞭解我們、加入我們，並和我們攜手共建美好開源社區，和好玩的人一起做有意思的事～</p><p>前路漫漫，我們不會止步，Greptime 將繼續參與行業會議，舉辦更多形式的交流活動，與你一同分享我們對產品的思考，堅持我們對技術的追求，鍛鑄更好的產品。在這條不斷開拓的路上，我們誠邀你攜手同行，與 GreptimeDB 共同成長。</p><h1>Greptime 社媒全新板塊和大家 say hi 👋</h1><p><strong>【遇見格睿 💜】</strong> 曾有參與「開源之夏」&amp; Greptime 的同學成功完成了項目試煉，最終選擇加入 Greptime 繼續實習，也有很多關注 Greptime 的人在大大小小的會議中和我們快樂面基，更有來自大洋彼岸和同在華夏的朋友們持續關注 Greptime 的每一次進步······大家都是見證了 Greptime 誕生和成長的摯友，在如此多開源和初創的社區裏面剛好相遇相識，在科技交匯的宇宙裏找到共鳴的瞬間，嗯，怎麼不算有緣呢？</p><p>或許你也聽多了 Greptime 成長史，所以不妨來點新鮮的👂你是如何得知 Greptime 的呢？你為什麼會關注我們呢？你有參與到 Greptime 的社區貢獻中來嗎？或者你對 Greptime 有什麼「驚鴻一瞥」的記憶嗎？</p><p>現在我們誠摯地邀請你聊聊「你與 Greptime」的故事，我們將會把你的故事整理成文稿，分享給更多的人（當然你要是自己動筆敍寫就更棒了👍）。歡迎添加小助手微信（greptime，懶得手動搜索的朋友請滑到文末掃碼添加）講出你的故事，審核通過即可獲得我們的限量版 Greptime 文創大禮包（悄悄説是真的限量版哦🎁）。</p><p>Greptime 開源一週年之際，我們想聽聽你的聲音，誠邀你講述「遇見格睿」的獨家故事。</p><h2>開源未來</h2><p>GreptimeDB 將繼續忠實開源的初心，真誠地歡迎全球的技術人員和開源朋友一起合作。我們深知，開源不僅僅是一個代碼倉庫的開放，更是一個技術、想法和創意交流的平台，歡迎任何一個願意給 GreptimeDB 提意見和貢獻代碼的人，而我們也將在以下幾方面繼續努力：</p><ul><li><p>繼續積極推進 GreptimeDB 的核心功能完善，與社區一起完成更多功能的孵化和落地，增強系統的功能和穩定性，為用户提供更加完備的數據庫工具；</p></li><li><p>和社區的大家真誠合作，增加交流，鼓勵更多的開發者參與到 GreptimeDB 的構建中來；</p></li><li><p>着重構建一個與 GreptimeDB 相關的工具、插件和服務的生態，提供更豐富的整合方案和應用場景，幫助開發者和企業更容易地將 GreptimeDB 應用於實際的業務中；</p></li><li><p>為了更好地反映社區意見和需求，我們將逐步引入開放治理模型，與更多的開發者和社區參與者面對面交流；</p></li></ul><p>開源的道路是一條充滿挑戰與機遇的旅程，我們相信並希望通過持續的努力和不懈的追求與全球的開源同伴們共創開源軟件的美好未來。</p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 17 Nov 2023 10:56:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/6839317/blog/10143939</guid>
            <link>https://my.oschina.net/u/6839317/blog/10143939</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
    </channel>
</rss>
