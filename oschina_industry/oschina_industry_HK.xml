<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[開源中國-綜合資訊]]>
        </title>
        <link>https://www.oschina.net/news/industry</link>
        <atom:link href="https://rsshub.app/oschina/news/industry" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[開源中國-綜合資訊 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Tue, 31 Oct 2023 11:43:06 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[深圳一公司獎勵程序員「黃金鍵帽」，價值近 2 萬元]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>2023 年 10 月 24 日，被眾多科技公司和業內人士稱為「程序員節」。當天，深圳一公司獎勵員工「<strong>黃金鍵帽</strong>」。</p><blockquote><p><img height="1658" src="https://static.oschina.net/uploads/space/2023/1031/185140_pBn0_2720166.png" width="1176" referrerpolicy="no-referrer"></p></blockquote><p><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.weibo.com%2F5558240479%2FNpm9Lffdj%3Fpagetype%3Dprofilefeed" target="_blank">據稱</a></u>這款空格鍵鍵帽是 40g 黃金，價值近 2 萬元。</p><p><img src="https://static.oschina.net/uploads/space/2023/1031/185850_Wq96_2720166.png" referrerpolicy="no-referrer"></p><p><em>△「黃金 C 鍵」是該公司去年的獎勵</em></p><p>獲得獎勵程序員根據代碼行數排名和部門推舉共同選出，最具分量的「黃金空格鍵」獎勵給有效代碼量最多的程序員。</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 31 Oct 2023 10:49:01 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264307</guid>
            <link>https://www.oschina.net/news/264307</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[前三季度互聯網企業利潤總額同比增 18.2%]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>2023 年前三季度互聯網和相關服務業運行情況現已公佈。前三季度，互聯網業務收入增速小幅提升，利潤總額較快增長，研發經費持續下滑。</p><h4 style="margin-left:0px; margin-right:0px"><strong>一，總體運行情況</strong></h4><p><strong>互聯網業務收入增速小幅提升。</strong>前三季度，我國規模以上互聯網和相關服務企業 1（以下簡稱互聯網企業）完成互聯網業務收入 10294 億元，同比增長 3.4%。</p><p><img height="241" src="https://oscimg.oschina.net/oscnet/up-505b65f84338dd716295e76b74112009b70.png" width="500" referrerpolicy="no-referrer"></p><p><strong>利潤總額較快增長。</strong>前三季度，我國規模以上互聯網企業營業成本同比增長 7%，增速較上半年回落 0.4 個百分點。實現利潤總額 959.3 億元，同比增長 18.2%。</p><p><img height="239" src="https://oscimg.oschina.net/oscnet/up-54642fdf1ae20d26f1bc9494e46da1f4440.png" width="500" referrerpolicy="no-referrer"></p><p><strong>研發經費持續下滑。</strong>前三季度，我國規模以上互聯網企業共投入研發經費 495.9 億元，同比下降 6.1%。</p><p><img height="246" src="https://oscimg.oschina.net/oscnet/up-d14b35b6a1179d07e10ffc542ff0150925e.png" width="500" referrerpolicy="no-referrer"></p><h4 style="margin-left:0px; margin-right:0px"><strong>二，分領域運行情況</strong></h4><p style="margin-left:0; margin-right:0"><strong>（一）信息服務領域企業收入小幅回落。</strong>前三季度，以信息服務為主的企業（包括新聞資訊、搜索、社交、遊戲、音樂視頻等）互聯網業務收入同比下降 2.7%。</p><p><strong>（二）生活服務領域企業收入較快增長。</strong>前三季度，以提供生活服務為主的平台企業（包括本地生活、租車約車、旅遊出行、金融服務、汽車、房屋住宅等）互聯網業務收入同比增長 9.8%。</p><p><strong>（三）網絡銷售領域企業收入增速持續提升。</strong>前三季度，主要提供網絡銷售服務的企業（包括大宗商品、農副產品、綜合電商、醫療用品、快遞等）互聯網業務收入同比增長 47.3%。</p><h4 style="margin-left:0px; margin-right:0px"><strong>三，分地區運行情況</strong></h4><p><strong>東部地區互聯網業務收入保持平穩增速。</strong>前三季度，東部地區完成互聯網業務收入 9613 億元，同比增長 4.5%，增速較上半年提升 0.7 個百分點，佔全國互聯網業務收入的比重為 93.4%。中部地區完成互聯網業務收入 329.5 億元，同比下降 9.7%，降幅較上半年擴大 2.2 個百分點。西部地區完成互聯網業務收入 325 億元，同比下降 7.5%，降幅較上半年收窄 3.2 個百分點。東北地區完成互聯網業務收入 26.5 億元，同比下降 33.3%，降幅較上半年收窄 6.4 個百分點。</p><p><img height="239" src="https://oscimg.oschina.net/oscnet/up-7b7896fe852aa2c94820a864e846f80cae2.png" width="500" referrerpolicy="no-referrer"></p><p><strong>長三角地區互聯網業務收入實現較快增長。</strong>前三季度，京津冀地區完成互聯網業務收入 3948 億元，同比增長 2.9%，增速較上半年回落 0.3 個百分點，佔全國互聯網業務收入的比重為 38.4%。長三角地區完成互聯網業務收入 4225 億元，同比增長 13.1%，增速較上半年提升 3.5 個百分點。</p><p><img height="300" src="https://oscimg.oschina.net/oscnet/up-f6cddc5c38e933857b00b43bd049054bd02.png" width="500" referrerpolicy="no-referrer"></p><p><strong>半數地區互聯網業務增速實現正增長。</strong>前三季度，互聯網業務累計收入居前 5 名的北京（增長 0.7%）、上海（增長 17.7%）、浙江（增長 5.1%）、廣東（下降 7.4%）和天津（增長 22.3%）共完成業務收入 9077 億元，同比增長 5.5%，佔全國比重達 88.2%。全國互聯網業務增速實現正增長的省（區、市）有 15 個。</p><p><img height="243" src="https://oscimg.oschina.net/oscnet/up-d691bf5c06989113a27d8f6cf4a88d4ab6e.png" width="500" referrerpolicy="no-referrer"></p><h4 style="margin-left:0px; margin-right:0px"><strong>四，我國移動應用程序（APP）發展情況</strong></h4><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify">根據全國 APP 技術檢測平台統計，截至 9 月底，我國國內市場上監測到活躍的 APP 數量 2 為 261 萬款（包括安卓和蘋果商店）。移動應用開發者數量為 84 萬，其中安卓開發者為 26 萬，蘋果開發者為 58 萬。9 月份，安卓應用商店在架應用累計下載量 542 億次。</p><p><span style="color:#888888">附註：</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span style="color:#888888">1.規模以上互聯網和相關服務企業口徑由上年互聯網和相關服務收入 500 萬元以上調整為 2000 萬元及以上，文中所有同比增速均按可比口徑計算。</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span style="color:#888888">2.活躍的移動應用程序數量是指報告期內我國市場上經過用户主動下載安裝的第三方移動應用的總個數，其中安卓應用數的計算方法是根據智能手機記錄的已安裝移動應用去重後獲得。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 31 Oct 2023 10:09:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264303</guid>
            <link>https://www.oschina.net/news/264303</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[阿里雲人工智能 + 大數據平台升級發佈]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>大模型和 MaaS 概念的出現，定義了以模型為中心的一整套 AI 開發新範式，而這背後日益增長的巨大算力需求，對 AI 工程底座提出了新的挑戰。今天，大模型時代下的人工智能+大數據平台，需要具備計算效率、開發效率、處理效率為一體的高效能力，才能保障服務 AI 時代下的業務創新。10 月 31 日，2023 雲棲大會上，阿里雲副總裁、阿里雲計算平台事業部負責人汪軍華宣佈<strong>阿里雲人工智能+大數據平台升級發佈，以服務大模型時代下各行各業的業務創新</strong>。</p><h2>高性能的 AI 基礎設施，讓計算效率達到極致</h2><p>根據 OpenAI 測算，全球用於頭部 AI 模型訓練的算力需求以每年 10 倍的速度增長，計算需求處於持續爆發中。汪軍華介紹，PAI 靈駿智算集羣在網絡、存儲、調度上做了深度優化，採用 HPN 7.0 新一代 AI 集羣網絡架構，存儲計算分離架構，<strong>支持高達 10 萬卡量級的集羣可擴展規模，讓超大規模集羣像 1 台計算機般運轉</strong>。</p><p>軟硬一體的智算服務 PAI 靈駿，為大規模深度學習訓練場景提供穩定和高效的支撐，大模型訓練任務線性加速比可達到 96%，大模型訓練資源可節省超 50%。在穩定性保障方面，PAI 靈駿智算服務配置了彈性容錯訓練框架 AIMaster 和 EasyCkpt 模型自動保存與恢復能力，可讓千卡規模任務穩定運行 3 周以上。</p><p>面向大模型的推理服務場景，PAI 體系化地整合模型系統聯合優化、運行時優化、LLM 領域優化等能力，可將大語言模型推理吞吐提升 3.5 倍，大幅降低推理時延。單卡推理可支持的最大上下文長度達 280K，超長的上下文推理將進一步推動 LLM 湧現。</p><h2>多形態、更靈活的 AI 開發模式，支撐多樣化需求</h2><p>隨着需求的不斷湧現，AI 開發者和 AI 開發需求越發細分。<strong>人工智能平台 PAI 4.0 發佈，全面降低大模型 AI 開發門檻，提供完善的需求支撐，提升開發效率</strong>。</p><p><img src="https://oscimg.oschina.net/oscnet/up-3b95e15dfa6b87444fc3e282b13714f002c.jpg" alt="" referrerpolicy="no-referrer"></p><p>不論是需要定義模型結構和開發流程的深度學習開發者羣體，還是有海量大規模計算任務的羣體，亦或是需要高效快速串聯起訓練推理任務的業務算法羣體，都可以通過 PAI 來實現研發，包含各類熱門的計算框架、開源模型和開發場景，一站式地完成開發部署。</p><p>PAI 靈積為廣大開發者提供了通過雲上 API 服務，可以用於應用模型開發和開發好的模型調用，允許開發者將大模型能力迅速集成到自己的業務和應用中，在 PAI-靈積平台上，開發者不僅可以找到通義系列大模型（包括通義千問，通義萬相等等），也可以找到來自業界最優秀的頭部大模型，包括 ChatGLM，百川，Stable Diffusion 等。</p><p>汪軍華宣佈，今天這些模型都<strong>通過 PAI 靈積上統一的 API 和 SDK 對廣大開發者開放</strong>，開發者只需要幾行代碼，就能迅速把這些不同類別的大模型的能力，集成到自己的應用中去。</p><h2>高效的數據服務提升大模型效果，大數據和 AI 更深融合</h2><p>在機器學習開發過程中，80% 的研發時間有用於數據準備，數據質量決定着大模型的效果，數據處理分析的重要性更加凸顯。大數據作為 AI 基礎設施的一部分，阿里雲提供了從數據積累、清洗、建模、計算到服務的全套產品化方案，來節省 AI 開發過程中數據準備的時間。</p><p>同時，大數據和 AI 進行了更深度的融合。阿里雲自研大數據處理平台 MaxCompute 全面升級 DataFrame 能力，<strong>發佈分佈式計算框架 MaxFrame，100% 兼容 Pandas 等數據處理接口</strong>，一行代碼即可將原生 Pandas 自動轉為 MaxFrame 分佈式計算，打通數據管理、大規模數據分析、處理到 ML 開發全流程，打破大數據及 AI 開發使用邊界，大大提高開發效率。</p><p><img src="https://oscimg.oschina.net/oscnet/up-1b1ceca672616e6e79a2adf7ef338570215.jpg" alt="" referrerpolicy="no-referrer"></p><p>大模型驅動的 AI 時代，AI 場景對數據時效性的要求也越來越高，Flink+Paimon 新一代實時湖倉方案，為用户提供一站式數據入湖、實時加工和探查分析能力，拓展 Flink 在數據湖場景的實時計算能力，同時加速 AI 應用。</p><p>全託管向量檢索服務 DashVector 正式發佈，基於阿里雲自研 8 年的高性能向量檢索內核 Proxima，提供具備水平拓展能力的雲原生、全託管的向量檢索服務。Hologres、OpenSearch、Elasticsearch 分別升級了向量能力，滿足不同場景下性能的提升。全新發布 DataWorks Copilot，將大數據平台的一站式統一元數據、統一調度、統一數據集成、統一數據建模與 AI 大模型能力全面結合， 將 AI 與業務充分融合，創造新價值。</p><p>在面向大模型時代整體大數據 AI 產品能力升級後，汪軍華宣佈<strong>大數據 AI 產品全面完成 Serverless 化</strong>，致力於給客户提供開箱即用、按需付費的高性價比產品。作為大模型時代 AI 的基礎設施，阿里雲人工智能+大數據平台將堅定、持續的投入研發資源，服務各行各業的業務創新。</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 31 Oct 2023 09:52:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/5583868/blog/10140082</guid>
            <link>https://my.oschina.net/u/5583868/blog/10140082</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[飛致雲開源社區 10 月動態報告]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#000000; text-align:start"><span><span style="color:#000000">自 2023 年 6 月起，中國領先的開源軟件公司 FIT2CLOUD 飛致雲以月度為單位發佈《飛致雲開源社區月度動態報告》，旨在向廣大社區用户同步飛致雲旗下系列開源軟件的發展情況，以及當月主要的產品新版本發佈、社區運營成果等相關信息。</span></span></p><p style="color:#000000; text-align:start"><span><strong><span style="color:#00355d">飛致雲開源大屏（2023 年 10 月）</span></strong></span></p><p style="color:#000000; text-align:start"><img alt="" src="https://oscimg.oschina.net/oscnet/up-a09815ae51a7ff491a27bae6b2bf1cdf0c7.png" referrerpolicy="no-referrer"></p><p style="color:#000000; text-align:start"><span>▲圖 1 飛致雲開源大屏（2023.10.31 12:00）</span></p><p style="color:#000000; text-align:start"><span><span style="color:#000000">2023 年 10 月飛致雲開源軟件運營數據概覽（統計時間為 2023.10.1～2023.10.31）：</span></span></p><p style="color:#000000; text-align:start"><img alt="" height="782" src="https://oscimg.oschina.net/oscnet/up-04d7820369e349de560cad38d0758a8c526.png" width="1388" referrerpolicy="no-referrer"></p><p style="color:#000000"><strong><span style="color:#3370ff">2023 年 10 月產品發佈事件</span></strong></p><p style="color:#000000; text-align:start"><strong><span style="color:#00355d">■ Halo 開源建站工具</span></strong></p><p style="color:#000000; text-align:start">2023 年 10 月 10 日，Halo 開源建站工具正式發佈 v2.10.0 版本。在這個版本中，Halo 主要支持了消息通知、內置應用市場等功能，並且完成了其他 30 多項功能優化和問題修復。</p><p style="color:#000000; text-align:start"><strong><span style="color:#00355d">■ 1Panel 開源面板</span></strong></p><p style="color:#000000; text-align:start">2023 年 10 月 16 日，現代化、開源的 Linux 服務器運維管理面板 1Panel 正式發佈 v1.7.0 版本。</p><p style="color:#000000; text-align:start">在這個版本中，1Panel 新增 Node.js 運行環境；新增系統緩存清理功能；應用安裝時支持選擇遠程數據庫。此外，我們進行了 40 多項功能更新和問題修復。1Panel 應用商店新增了 2 款應用，並且更新了 25 款應用。</p><p style="color:#000000; text-align:start"><strong><span style="color:#00355d">■ JumpServer 開源堡壘機</span></strong></p><p style="color:#000000; text-align:start">2023 年 10 月 23 日，JumpServer 開源堡壘機正式發佈 v3.8.0 版本。</p><p style="color:#000000; text-align:start">在這一版本中，JumpServer 在「用户登錄」和「資產登錄」這兩個權限控制功能中，新增「通知」動作。目前其支持的動作包括拒絕、接受、審批以及通知四種動作，方便了管理員針對不同的用户及資產使用需求進行配置。同時，在使用 KoKo 組件連接字符集類型的資產時，JumpServer 支持持久化主題配置，解決了用户需要經常手動修改主題的問題。</p><p style="color:#000000; text-align:start">作業中心方面，用户執行命令時支持自定義執行目錄，方便用户在合適的上下文環境中執行命令。另外，在使用 Web GUI 方式連接數據庫時，用户可以對查詢集進行保存操作，JumpServer 會對查詢集以「CSV」格式下載後提供給用户。</p><p style="color:#000000; text-align:start">X-Pack 增強包方面，JumpServer v3.8.0 版本支持納管 DB2 數據庫（IBM 旗下關係型數據庫），方便管理員對此類數據庫進行納管，以滿足用户在數據庫納管方面的多樣化需求。在之前的版本中，JumpServer 支持在頁面上簡單對接無認證類型的短信網關。在新版本中，JumpServer 支持用户通過編寫自定義短信文件的方式，與用户的短信網關環境進行交互，從而實現發送短信驗證的功能。</p><p style="color:#000000; text-align:start"><strong><span style="color:#00355d">■ MeterSphere 開源持續測試平台</span></strong></p><p style="color:#000000; text-align:start">2023 年 10 月 30 日，MeterSphere 一站式開源持續測試平台正式發佈 v2.10.8 LTS 版本。自 2023 年 5 月發佈 v2.10 LTS 版本後，MeterSphere 開源項目組堅持發佈小版本，持續進行問題的修復更新，並針對部分功能進行優化。</p><p style="color:#000000; text-align:start">本次發佈的 MeterSphere v2.10.8 LTS 版本在性能測試模塊對壓測報告進行功能增強，同時測試執行機新增運行狀態和 CPU 監控。</p><p style="color:#000000"><strong><span style="color:#3370ff">其他重要事件</span></strong></p><p style="color:#000000; text-align:start"><strong><span style="color:#00355d">■ FIT2CLOUD 飛致雲九週年</span></strong></p><p style="color:#000000; text-align:start">2023 年 10 月 21 日，FIT2CLOUD 飛致雲度過了九週歲生日。新的一年，飛致雲的口號是「只爭朝夕，成為三高」。感謝每一位用户、客户、合作伙伴、員工、股東，我們將加速成長，為數字經濟時代創造好軟件。</p><p style="color:#000000; text-align:start"><strong><span style="color:#00355d">■ 飛致雲及其旗下 1Panel 進入 2023 年第三季度最具成長性開源初創榜單</span></strong></p><p style="color:#000000; text-align:start">2023 年 10 月 26 日，知名風險投資機構 Runa Capital 發佈了 2023 年第三季度 ROSS 指數（Runa Open Source Startup Index）。ROSS 指數按季度彙總並公佈在代碼託管平台 GitHub 上年化增長率（AGR）排名前二十位的開源初創公司和開源項目。</p><p style="color:#000000; text-align:start">在這份名為《Top trending early-stage open-source startups by GitHub star growth in Q3 2023》的榜單中，FIT2CLOUD 飛致雲及其旗下的 1Panel 開源面板項目入選。這也是 FIT2CLOUD 飛致雲及其旗下開源項目連續第二個季度進入 ROSS 指數相關榜單。</p><p style="color:#000000; text-align:start"><img alt="" src="https://oscimg.oschina.net/oscnet/up-4e76c989b3aaeb4b049167ebe4867d1f213.png" referrerpolicy="no-referrer"></p><p style="color:#000000">▲圖 2 《Top trending early-stage open-source startups by GitHub star growth in Q3 2023》榜單</p><p style="color:#000000; text-align:start"><span><strong><span style="color:#00355d">關於飛致雲開源大屏</span></strong></span></p><p style="color:#000000; text-align:start"><span><span style="color:#000000">飛致雲開源大屏（</span></span><em><span><span style="color:#000000">https://bi.fit2cloud.com/link/6CgpMHrT</span></span></em><span><span style="color:#000000">）</span><span style="color:#3e3e3e">是 FIT2CLOUD 飛致雲為展示其旗下開源軟件的社區運營情況製作的數據儀錶板。該大屏使用 DataEase 開源數據可視化分析平台製作，實時呈現飛致雲開源社區近 30 日內的動態信息。</span></span></p><p style="color:#000000; text-align:start"><span><span style="color:#000000">廣大社區用户可以通過該大屏瞭解飛致雲旗下開源項目的 GitHub Star、Fork、Issue、貢獻者等指標的數量信息，以及近 30 日內新增的 Star、Fork、下載、Issue、PR 數量等，同時該大屏還展示了飛致雲旗下開源項目的 Issue 趨勢、Commit 趨勢、PR 趨勢、Issue 生命週期等。</span></span></p><p style="color:#000000; text-align:start"><span><span style="color:#000000">除了展示所有項目的彙總信息外，該大屏還支持用户分類別查看 JumpServer、DataEase、MeterSphere、Halo、1Panel、CloudExplorer Lite 六個開源項目的獨立運營數據。</span></span></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 31 Oct 2023 08:53:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/4736111/blog/10140016</guid>
            <link>https://my.oschina.net/u/4736111/blog/10140016</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[從 0 到 1 入門用户畫像掌握大數據技術]]>
            </title>
            <description>
                <![CDATA[<h1 class="header article-title"><a href="https://www.oschina.net/question/4855753_2331281">高手問答第 308 期 ——從 0 到 1 入門用户畫像掌握大數據技術</a><div class="ui red label horizontal" data-tooltip="置頂">頂</div></h1><div class="extra ui horizontal list meta-wrap"><div class="item"><a href="https://my.oschina.net/u/4855753" class="__user"><span>OSC 噠噠</span></a><span class="org-label org-label--simple primary" data-tooltip="認證官方賬號"><i class="oicon oicon-org"></i></span> 發佈於，今天 12:14
                    </div><div class="item">閲讀 535</div><div class="item collect-btn " data-id="2331281" data-user-id="4855753" data-obj-type="2" data-max="99" data-tag-required="" data-current-user-id="" data-recommend-tags=""><i class="star outline icon"></i> 收藏 <span data-collect-count="" data-id="2331281" data-obj-type="2">1</span></div><div class="item comment-count"><a href="https://www.oschina.net/question/4855753_2331281#comments" class="normal"><i class="comment outline icon"></i> 答案 <span data-article-reply-count="">1</span></a></div></div><div class="tags"><a class="ui horizontal label" href="https://www.oschina.net/question/topic/masteronline" target="_blank"><img src="https://static.oschina.net/uploads/logo/masteronline_9WTeU.png" referrerpolicy="no-referrer">高手問答</a></div><div class="content" id="articleContent"><div><span><span><span><span><span style="background-color:#ffffff"><span><span><span><span style="color:#000000"><span><span>市面上不少公司都在做用户畫像的相關工作，無論是電商行業、金融行業、視頻行業等等，都有這樣的產品。那到底怎麼去定義用户畫像呢？</span></span></span></span></span></span></span></span></span></span></span></div><div>
  &nbsp; 
</div><div><strong>OSCHINA 本期高手問答 (10 月 31 日 - 11 月 6 日) 我們請來</strong><strong>了嘉賓&nbsp;</strong><strong><span style="color:#000000"><a href="https://my.oschina.net/u/4294800" rel="nofollow">諸葛子房</a>老師&nbsp;</span></strong><strong>來和大家一起探討關於從 0 到 1 入門用户畫像掌握大數據技術的問題。</strong></div><div>
  &nbsp; 
</div><div><p><span><span><span><span><span style="background-color:#ffffff"><span><span><span><span style="color:#000000"><span><span>可討論的問題包括但不限於：</span></span></span></span></span></span></span></span></span></span></span></p><ul><li><span><span><span><span><span style="background-color:#ffffff"><span><span><span><span style="color:#000000"><span><span>想入門用户畫像需要掌握哪些技術棧？</span></span></span></span></span></span></span></span></span></span></span></li><li><span><span><span><span><span style="background-color:#ffffff"><span><span><span><span style="color:#000000"><span><span>沒有企業的大量用户或者行為數據，普通用户該如何真實地模擬企業級的畫像項目？</span></span></span></span></span></span></span></span></span></span></span></li><li><span><span><span><span><span style="background-color:#ffffff"><span><span><span><span style="color:#000000"><span><span>程序員如何入門大數據？</span></span></span></span></span></span></span></span></span></span></span></li><li><span><span><span><span><span style="background-color:#ffffff"><span><span><span><span style="color:#000000"><span><span>大數據</span></span></span></span></span></span></span></span><span><span style="background-color:#ffffff"><span><span><span><span style="color:#000000"><span><span>行業都有哪些職位，以及在公司中發揮的作用如何</span></span></span></span></span></span></span></span><span><span style="background-color:#ffffff"><span><span><span><span style="color:#000000"><span><span>？</span></span></span></span></span></span></span></span></span></span></span></li><li><span><span><span><span><span style="background-color:#ffffff"><span><span><span><span style="color:#000000"><span><span>大數據行業未來的發展如何，以 ChatGPT&nbsp;為代表的 AI 浪潮是否會讓大數據行業走向</span></span></span></span></span></span></span></span><span><span style="background-color:#ffffff"><span><span><span><span style="color:#000000"><span><span>沒落</span></span></span></span></span></span></span></span><span><span style="background-color:#ffffff"><span><span><span><span style="color:#000000"><span><span>？</span></span></span></span></span></span></span></span></span></span></span></li></ul><p><span><span><span><span><span style="background-color:#ffffff"><span><span><span><span style="color:#000000"><span><span>有其他相關問題，也歡迎大家積極提問！</span></span></span></span></span></span></span></span></span></span></span></p><hr><h2>嘉賓介紹</h2><p><span><span><span><span><span style="background-color:#ffffff"><span><span><span><span style="color:#000000"><span><span>段小秋，網名：諸葛子房，先後就職於京東和 BAT，在大數據領域有多年工作經驗，也是多個 Apache&nbsp;項目的貢獻者。藍橋杯藍橋雲課《用户畫像案例精講》專欄作者，也是開源項目 DataCompare&nbsp;作者。</span></span></span></span></span></span></span></span><span><span style="background-color:#ffffff"><span><span><span><span style="color:#000000"><span><span>微信</span></span></span></span></span></span></span></span><span><span style="background-color:#ffffff"><span><span><span><span style="color:#000000"><span><span>：zhugezifang001，歡迎交流溝通。</span></span></span></span></span></span></span></span></span></span></span></p><p><span><span><span><span><span style="background-color:#ffffff"><span><span><span><span style="color:#000000"><span><span>個人</span></span></span></span></span></span></span></span><span><span style="background-color:#ffffff"><span><span><span><span style="color:#000000"><span><span>主頁：</span></span></span></span></span></span></span></span><a href="https://gitee.com/ZhuGeZiFang" rel="nofollow"><span><span><span><u><span style="color:#1e6fff"><span><span>https://gitee.com/ZhuGeZiFang</span></span></span></u></span></span></span></a></span></span></span></p><p><img height="639" src="https://oscimg.oschina.net/oscnet/up-5e58f5cf142af8e6ec1a3b8c3dc1cef16ec.png" width="500" referrerpolicy="no-referrer"></p><p><span><span><span><span><span style="background-color:#ffffff"><span><span><span><span style="color:#000000"><span><span>為了鼓勵踴躍提問，會在問答結束後從提問者中抽取&nbsp;5&nbsp;名幸運會員贈予《</span></span></span></span></span></span></span></span><span><span style="background-color:#ffffff"><span><span><span><span style="color:#000000"><span><span>用户畫像案例精講》專欄電子版！</span></span></span></span></span></span></span></span></span></span></span></p><p><img height="516" src="https://oscimg.oschina.net/oscnet/up-71771b786f7cc1bd0161793b6af70daf066.png" width="310" referrerpolicy="no-referrer"></p><p><img height="574" src="https://oscimg.oschina.net/oscnet/up-c2d9d9ce8dd66a412d3ef791ee45548dc45.png" width="311" referrerpolicy="no-referrer"></p></div><div><div><hr><h4><span><span><span><span><span style="background-color:#ffffff"><span><strong><span><span style="color:#000000"><span><span>用户</span></span></span></span></strong></span></span></span><span><span style="background-color:#ffffff"><span><strong><span><span style="color:#000000"><span><span>畫像概念</span></span></span></span></strong></span></span></span></span></span></span></h4><p><span><span><span><span><span style="background-color:#ffffff"><span><span><span><span style="color:#000000"><span><span>用户畫像，即：用標籤的方式去描述一個人或者一台手機、一台電腦，有些公司稱之為」用户畫像「，有一些公司稱之為」用户特徵「，其實是一個意思。</span></span></span></span></span></span></span></span></span></span></span></p><p><span><span><span><span><span style="background-color:#ffffff"><span><span><span><span style="color:#000000"><span><span>舉個簡單的例子：</span></span></span></span></span></span></span></span></span></span></span></p><p><span><span><span><span><span style="background-color:#ffffff"><span><span><span><span style="color:#000000"><span><span>袁小青，性別：女，年齡：22 歲，職業：時尚編輯，愛好：音樂、拍照，居住地：北京，消費情況：年薪 10w，喜歡的 app：抖音</span></span></span></span></span></span></span></span></span></span></span></p><p><img height="310" src="https://oscimg.oschina.net/oscnet/up-d3e2ad6f2150ece5dd0882380562cb797a7.png" width="488" referrerpolicy="no-referrer"></p><p><span><span><span><span><span style="background-color:#ffffff"><span><span><span><span style="color:#000000"><span><span>因此我們概念中描述的用户畫像，其實是用標籤的方式對於一個用户、一個賬號、一部手機進行描述。</span></span></span></span></span></span></span></span></span></span></span></p><p><img height="368" src="https://oscimg.oschina.net/oscnet/up-adc4c1c21829279233af14e8d74631dfab4.png" width="400" referrerpolicy="no-referrer"></p><h4><span><span><span><span><span style="background-color:#ffffff"><span><strong><span><span style="color:#000000"><span><span>用户畫像常見標籤</span></span></span></span></strong></span></span></span></span></span></span></h4><p><span><span><span><span><span style="background-color:#ffffff"><span><span><span><span style="color:#000000"><span><span>既然上面講到了對於用户進行標籤化，那究竟要給用户打哪些標籤呢？如何對標籤進行分類呢？</span></span></span></span></span></span></span></span></span></span></span></p><p><span><span><span><span><span style="background-color:#ffffff"><span><span><span><span style="color:#000000"><span><span>用户</span></span></span></span></span></span></span></span><span><span style="background-color:#ffffff"><span><span><span><span style="color:#000000"><span><span>畫像核心標籤以及其分類：</span></span></span></span></span></span></span></span></span></span></span></p><p><img height="589" src="https://oscimg.oschina.net/oscnet/up-9efa6c4c17cb0bd2647c8d303db9def85cc.png" width="868" referrerpolicy="no-referrer"></p><h4><span><span><span><span><span style="background-color:#ffffff"><span><strong><span><span style="color:#000000"><span><span>用户畫像的作用</span></span></span></span></strong></span></span></span></span></span></span></h4><p><span><span><span><span><span style="background-color:#ffffff"><span><span><span><span style="color:#000000"><span><span>1. 個性化推薦</span></span></span></span></span></span></span></span></span></span></span></p><p><span><span><span><span><span style="background-color:#ffffff"><span><span><span><span style="color:#000000"><span><span>在使用一些社區產品、電商產品、短視頻 app、音樂 app 的時候，經常會遇到推薦的場景，根據不同的人推薦不同的內容或者商品。</span></span></span></span></span></span></span></span></span></span></span></p><p><span><span><span><span><span style="background-color:#ffffff"><span><span><span><span style="color:#000000"><span><span>這其實是用户畫像其中的一個應用，根據用户查詢用户的標籤數據，來進行推薦用户感興趣的內容</span></span></span></span></span></span></span></span></span></span></span></p><p><span><span><span><span><span style="background-color:#ffffff"><span><span><span><span style="color:#000000"><span><span>2. 營銷圈選 (短信營銷、PUSH 營銷)</span></span></span></span></span></span></span></span></span></span></span></p><p><span><span><span><span><span style="background-color:#ffffff"><span><span><span><span style="color:#000000"><span><span>相信不少用户收到過類似的營銷短信，或者一些 app&nbsp;彈窗，這個也是用户畫像常見的應用場景</span></span></span></span></span></span></span></span></span></span></span></p><p><span><span><span><span><span style="background-color:#ffffff"><span><span><span><span style="color:#000000"><span><span>3. 策略引擎</span></span></span></span></span></span></span></span></span></span></span></p><p><span><span><span><span><span style="background-color:#ffffff"><span><span><span><span style="color:#000000"><span><span>根據用户的標籤展示不同頁面，比如説：北京地區的用户能才能領取北京的優惠券，以及只有高消費值的用户才有淘寶上奢侈品 Luxury 入口的界面。</span></span></span></span></span></span></span></span></span></span></span></p><p><span><span><span><span><span style="background-color:#ffffff"><span><span><span><span style="color:#000000"><span><span>4. 算法模型</span></span></span></span></span></span></span></span></span></span></span></p><p><span><span><span><span><span style="background-color:#ffffff"><span><span><span><span style="color:#000000"><span><span>算法模型的訓練，比如説：推薦模型、廣告模型，需要用到畫像數據來優化推薦模型。</span></span></span></span></span></span></span></span></span></span></span></p><p><span><span><span><span><span style="background-color:#ffffff"><span><span><span><span style="color:#000000"><span><span>5. 畫像報告</span></span></span></span></span></span></span></span></span></span></span></p><p><span><span><span><span><span style="background-color:#ffffff"><span><span><span><span style="color:#000000"><span><span>不少商業公司會出一些行業報告，比如説下圖的小紅書、鎖屏 app&nbsp;的行業畫像報告；還有我們經常看到的一些個人年度榜單。</span></span></span></span></span></span></span></span></span></span></span></p><h4><span><span><span><span><span style="background-color:#ffffff"><span><strong><span><span style="color:#000000"><span><span>大數據技術在用户畫像中的實際應用</span></span></span></span></strong></span></span></span></span></span></span></h4><p><span><span><span><span><span style="background-color:#ffffff"><span><span><span><span style="color:#000000"><span><span>由於</span></span></span></span></span></span></span></span><span><span style="background-color:#ffffff"><span><span><span><span style="color:#000000"><span><span>畫像涉及到的一些行為數據，包括用户購物行為、觀影行為，一些較為大型一些的公司數據日均都涉及 PB，因此需要處理的數據量非常大。在其中就會用到一些大數據的處理和存儲技術，比如説：Hadoop、Spark、Hbase&nbsp;等等。</span></span></span></span></span></span></span></span></span></span></span></p><p><span><span><span><span><span style="background-color:#ffffff"><span><span><span><span style="color:#000000"><span><span>同時隨着業務發展，一些廣告和推薦場景對於實時需求也更加明顯，所以實時數據處理領域，Flink、Kafka 等實時相關技術領域也越來越重要了。</span></span></span></span></span></span></span></span></span></span></span></p><hr><div><p><span style="background-color:#ffffff; color:#27ae60">OSChina 高手問答一貫的風格，不歡迎任何與主題無關的討論和噴子。</span></p><p>下面歡迎大家就<span>用户畫像和大數據技術相關</span>問題向&nbsp;<strong><span style="color:#000000"><a href="https://my.oschina.net/u/4294800" rel="nofollow">諸葛子房</a></span></strong><span style="color:#000000">老師</span><strong><span style="color:#000000">&nbsp;</span></strong>提問，直接回帖提問既可。</p></div></div></div></div><div class="poll-wrap"></div><div class="additional-remarks"></div><div class="ui basic center aligned segment action"><div class="ui big buttons"><a class="ui basic button collect-btn hover" data-id="2331281" data-user-id="4855753" data-obj-type="2" data-max="99" data-tag-required="" data-current-user-id="" data-recommend-tags=""><i class="star outline icon"></i>收藏 (<span data-collect-count="" data-id="2331281" data-obj-type="2">1</span>)</a><div class="ui basic dropdown share button osc-share dropdown-share" data-tag="share-question"><i class="share icon"></i><span>分享</span><div class="menu"><a class="item" data-platform="weibo" data-value="weibo"><i class="weibo icon"></i>微博</a><a class="item" data-platform="qq" data-value="qq"><i class="qq icon"></i>QQ</a><a class="item" data-platform="wechat" data-value="wechat"><i class="weixin icon"></i>微信</a></div></div></div><div class="ui basic segment"><a class="ban" ban-report="" data-id="2331281" data-obj-type="2" data-url="https://www.oschina.net/question/4855753_2331281"><i class="flag red icon"></i>舉報</a></div></div>
            ]]>
            </description>
            <pubDate>Tue, 31 Oct 2023 08:50:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/question/4855753_2331281</guid>
            <link>https://www.oschina.net/question/4855753_2331281</link>
        </item>
        <item>
            <title>
                <![CDATA[周熱點 | jQuery 4.0 開發進度已完成 99%；小米澎湃 OS 發佈，底層全部重構；Windows CE 徹底退役]]>
            </title>
            <description>
                <![CDATA[回顧一週熱門資訊。2023.10.23-2023.10.30]]>
            </description>
            <pubDate>Tue, 31 Oct 2023 08:28:00 GMT</pubDate>
            <guid isPermaLink="false">https://mp.weixin.qq.com/s?__biz=MzA4OTI5NjUwOA==&#38;mid=2649093911&#38;idx=1&#38;sn=38b44f9a65152bbed03e505898027c84&#38;chksm=880c4c04bf7bc5125fe5e1f37886dd58c9c3f9f4b518505968df48e895efa0321de097a67ea3&#38;token=1144339677&#38;lang=zh_CN#rd</guid>
            <link>https://mp.weixin.qq.com/s?__biz=MzA4OTI5NjUwOA==&#38;mid=2649093911&#38;idx=1&#38;sn=38b44f9a65152bbed03e505898027c84&#38;chksm=880c4c04bf7bc5125fe5e1f37886dd58c9c3f9f4b518505968df48e895efa0321de097a67ea3&#38;token=1144339677&#38;lang=zh_CN#rd</link>
        </item>
        <item>
            <title>
                <![CDATA[通義千問 APP 上線，通義千問 720 億參數模型下月開源]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff; color:#222222">在 10 月 31 日 2023 雲棲大會現場，作為通義大模型基礎模型的<strong>通義千問 2.0 千億參數模型</strong>正式發佈。</span></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-605363e0734cb16cbc76823df487f560abb.png" referrerpolicy="no-referrer"></p><p><span style="background-color:#ffffff; color:#222222">據介紹，通義千問 2.0 模型參數達到千億級別，不管是在閲讀理解還是邏輯思維、數據等方面，都有大幅度提升，能夠全面達到國際先進水平。</span></p><p><span style="background-color:#ffffff; color:#222222">與此同時，通義千問 App 也隨之發佈（僅 Android 版本）</span><span style="background-color:#ffffff; color:#222222">，用户開始可以下載相關 APP 進行體驗。</span></p><p><img src="https://static.oschina.net/uploads/space/2023/1031/154720_kKia_2720166.png" referrerpolicy="no-referrer"></p><p><span style="background-color:#ffffff; color:#222222">阿里雲 CTO 周靖人宣佈，<strong>將在 11 月開源通義千問 720 億參數模型</strong>，繼續支持全球開發者開展模型和應用創新。</span></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-959b92e9bef8a1dd269d943b3c6d2a9171f.png" referrerpolicy="no-referrer"></p><p><span style="background-color:#ffffff; color:#222222">阿里雲是國內最早開源自研大模型的頭部科技企業，已先後開源通義千問 70 億參數模型 Qwen7B 和 140 億參數模型 Qwen14B，模型累計下載量超過 100 萬。</span></p><ul><li><a href="https://www.oschina.net/news/259447" target="_blank">阿里雲開源通義千問 14B 大模型</a></li><li><a href="https://www.oschina.net/news/252324" target="_blank">阿里雲開源通義千問 7B 大模型：免費、可商用</a></li></ul><p><span style="background-color:#ffffff; color:#222222">據稱通義千問 72B 將成為參數規模最大的中國開源大模型。目前國內外開源社區已經產生 50 多款基於通義千問開源模型訓練的新模型和新應用，涵蓋醫療、法律、機器人等眾多領域。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 31 Oct 2023 07:38:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264277</guid>
            <link>https://www.oschina.net/news/264277</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[夸克「色色」，被罰 50 萬]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><u><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.cac.gov.cn%2F2023-10%2F30%2Fc_1700323940777319.htm" target="_blank">據中國網信網消息</a></u>，近日，針對「夸克」平台和「網易 CC」直播平台破壞網絡生態問題，國家網信辦指導廣東省網信辦依法約談相關平台負責人，對「夸克」平台實施 50 萬元罰款處罰，責令「網易 CC」暫停「舞蹈」版塊信息更新 7 日，同時責令 2 家平台立即全面深入整改，嚴肅處理相關責任人。</p><p><img height="1606" src="https://static.oschina.net/uploads/space/2023/1031/152055_3Pp5_2720166.png" width="2450" referrerpolicy="no-referrer"></p><p>經查，「夸克」平台未遵守相關管理要求，搜索結果呈現大量淫穢色情信息，並向用户推薦色情低俗關鍵詞，違反《網絡安全法》《網絡信息內容生態治理規定》《互聯網信息搜索服務管理規定》等有關規定，在平台信息內容安全審核管理方面存在嚴重漏洞，破壞網絡生態，情節特別嚴重。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-da0eb9315b86d1c0f8e3e8f3bb08dbcc71e.png" referrerpolicy="no-referrer"></p><p><span style="color:#000000">夸克搜索<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ffinance.sina.com.cn%2Ftech%2F2023-10-30%2Fdoc-imzswzyh8439300.shtml" target="_blank">迴應新浪科技表示</a></u>：</span></p><blockquote><p>「對此，我們高度重視、誠懇接受、堅決執行，目前已經嚴格按照要求全面落實整改，封禁相關違規內容。為了進一步加強合規體系建設，我們成立了專項工作小組，升級針對不良信息的識別能力和處理速度，積極開展專項整治行動，通過人工和技術的雙重巡查模式，對有害信息進行嚴厲打擊，絕不姑息。」</p></blockquote><ul><li><em>相關閲讀：<a href="https://www.oschina.net/news/258071">被罰 100 萬，騰訊 QQ 迴應</a></em></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Tue, 31 Oct 2023 07:24:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264273</guid>
            <link>https://www.oschina.net/news/264273</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[「IDE 啓動畫面是如何誕生的？」 | JetBrains AI 圖形發展史]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="rich_media_content js_underline_content
                       autoTypeSetting24psection
            " id="js_content"><section style="font-size: 15px;color: rgb(33, 33, 33);line-height: 1.6;letter-spacing: 0px;font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;" data-mpa-powered-by="yiban.io"><p style="text-align: center;"><img class="rich_pages wxw-img" data-galleryid="" data-ratio="0.1836734693877551" src="https://oscimg.oschina.net/oscnet/5b3e75ef-637e-4138-802f-b70a25faddbf.gif" data-type="gif" data-w="637" style="height: auto !important;" referrerpolicy="no-referrer"></p><section style="font-size: 15px;"><section style="margin-top: 10px;margin-bottom: 10px;" powered-by="xiumi.us"><section style="padding-left: 1em;padding-right: 1em;display: inline-block;text-align: center;"><span style="display: inline-block;padding: 0.3em 0.5em;border-radius: 0.5em;text-shadow: rgb(204, 204, 204) 4px 3px;color: rgb(115, 119, 173);" title="" opera-tn-ra-cell="_$.pages:0.layers:0.comps:0.title1"><p><strong>引入</strong></p></span></section><section style="border-width: 1px;border-style: solid;border-color: rgb(228, 228, 228);margin-top: -1em;padding: 20px 10px 10px;background-color: rgb(255, 255, 255);text-align: center;"><section style="" powered-by="xiumi.us"><section style="text-align: justify;"><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ffeatures%2Fcodespaces" target="_blank" data-linktype="2"></a><span style="font-size: 14px;">上週的<a localeditorid="c26mgf2mlo83sjrzls" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzkwNDI5NzUyMQ%3D%3D%26mid%3D2247504179%26idx%3D1%26sn%3Df1a1d015021163bf11ff593327aa7801%26scene%3D21%23wechat_redirect" textvalue="「1024 特別企劃」" target="_blank" data-linktype="2"><strong>「1024 特別企劃」</strong></a>推送中，我們分享了一套由 JetBrains 使用 AI 生成式技術創作的壁紙屏保。其實，JetBrains 在 AI 藝術方面的探索已經持續多年。大家熟悉的 IDE 啓動畫面正是這部分工作的結晶。今天的文章，我們就從技術層面揭示 JetBrains 團隊是如何使用 AI 技術創造出 IDE 的啓動畫面和其衍生桌面藝術的。</span></p><p><span style="font-size: 14px;"><br></span></p><p><span style="font-size: 14px;">如果你還想探索和下載更多設計作品，不妨去看看我們的&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode2art.jetbrains.com%2F" target="_blank" data-linktype="2"><strong>Code2Art</strong></a>&nbsp;主題頁面！</span></p></section><grazie-editor-wrapper></grazie-editor-wrapper></section></section></section></section><p style="font-size: inherit;color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;"><br></p><section style="font-size: 15px;"><section style="margin-right: 0%;margin-left: 0%;text-align: left;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: top;padding-right: 10px;padding-left: 10px;background-color: rgb(88, 88, 88);"><section style="display: inline-block;vertical-align: middle;"><section style="display: inline-block;vertical-align: middle;color: rgb(255, 255, 255);padding-right: 2px;font-size: 18px;"><p><strong>在 JetBrains 生成圖稿</strong></p></section><grazie-editor-wrapper></grazie-editor-wrapper></section><section style="display: inline-block;vertical-align: middle;width: 0.8em;height: 0.8em;border-top: 0.2em solid rgb(255, 255, 255);border-right: 0.2em solid rgb(255, 255, 255);transform: rotate(45deg);"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section></section></section><p style="font-size: inherit;color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;">JetBrains 不斷完善用作網站元素和發佈圖形的圖稿的創建方式。我們的使命是將平面設計師從日常任務中解放出來，讓他們能夠專注於自己的核心能力 – <strong>創造力</strong>。JetBrains 用於生成圖稿的內部工具的歷史大約開始於十年前。起初，我們主要使用基於 WebGL 的工具，這些工具可以在瀏覽器中實時隨機生成所有內容（<strong style="font-size: inherit;color: inherit;line-height: inherit;"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcai.jetbrains.com%2F" target="_blank" rel="noopener" style="font-size: inherit;line-height: inherit;color: rgb(30, 107, 184);" data-linktype="2">此處</a></strong><span style="font-size: inherit;color: inherit;line-height: inherit;">提供了交互式歸檔）。下面的圖像就是用這種方式創建的。<br></span></p><p style="text-align: center;"><img class="rich_pages wxw-img" data-galleryid="" data-ratio="0.625" data-s="300,640" src="https://oscimg.oschina.net/oscnet/9abf4da9-b96d-4b1d-8cca-d2b2fe7b5200.png" data-type="png" data-w="960" style="height: auto !important;" referrerpolicy="no-referrer"></p><br><figure style="font-size: inherit;color: inherit;line-height: inherit;"><img class="rich_pages wxw-img" data-ratio="0.625" src="https://oscimg.oschina.net/oscnet/15dcfa47-4f1e-4950-8520-099eaf167d2c.png" data-type="png" data-w="1000" style="font-size: inherit;color: inherit;line-height: inherit;display: block;margin-right: auto;margin-left: auto;height: auto !important;" title="PyCharm Professional 2019.3 splash screen" referrerpolicy="no-referrer"><figcaption style="line-height: inherit;margin-top: 10px;text-align: center;color: rgb(153, 153, 153);font-size: 0.7em;">
     使用 WebGL 創建的啓動畫面 
   </figcaption></figure><p style="font-size: inherit;color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;">2020 年，我們發佈了第一款<strong style="font-size: inherit;color: inherit;line-height: inherit;"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.jetbrains.com%2Fblog%2F2020%2F09%2F29%2Fintelligent-code-art%2F" target="_blank" rel="noopener" style="font-size: inherit;line-height: inherit;color: rgb(30, 107, 184);" data-linktype="2">基於深度神經網絡的工具</a></strong><span style="font-size: inherit;color: inherit;line-height: inherit;">。自那時起，所有內容都在 K8s GPU 集羣中使用適用於本地和遠程開發的 PyCharm 和 Datalore 生成。瀏覽器僅用於輸入輸出。通過這種基於神經網絡的方式，我們實現了更高程度的個性化，這讓我們能夠迎合設計師的需求，並且我們一直在努力改進。</span></p><p style="font-size: inherit;color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;"><span style="font-size: inherit;color: inherit;line-height: inherit;">以下圖片使用組合模式生成網絡（CPPN，上圖）和 Stable Diffusion（SD，下圖）製作而成。<strong>本文將介紹這兩種方式的技術細節，以及我們如何結合這兩種方式來創造更精彩的設計。</strong><br></span></p><figure style="font-size: inherit;color: inherit;line-height: inherit;"><img class="rich_pages wxw-img" data-ratio="0.562962962962963" src="https://oscimg.oschina.net/oscnet/92e23890-fbdd-4e0f-aa8c-6dd34aaf01f6.png" data-type="png" data-w="1080" style="font-size: inherit;color: inherit;line-height: inherit;display: block;margin-right: auto;margin-left: auto;height: auto !important;" title="PyCharm desktop art" referrerpolicy="no-referrer"></figure><br><figure style="font-size: inherit;color: inherit;line-height: inherit;"><img class="rich_pages wxw-img" data-ratio="0.562962962962963" src="https://oscimg.oschina.net/oscnet/2be787a6-91d8-47c7-9c9f-f7fdbfe18af3.png" data-type="png" data-w="1080" style="font-size: inherit;color: inherit;line-height: inherit;display: block;margin-right: auto;margin-left: auto;height: auto !important;" title="RubyMine desktop art" referrerpolicy="no-referrer"><figcaption style="line-height: inherit;margin-top: 10px;text-align: center;color: rgb(153, 153, 153);font-size: 0.7em;">
     使用神經網絡生成的啓動畫面 
   </figcaption></figure><figure style="font-size: inherit;color: inherit;line-height: inherit;"><br></figure><figure style="font-size: inherit;color: inherit;line-height: inherit;"><br></figure><section style="font-size: 15px;"><section style="margin-right: 0%;margin-left: 0%;text-align: left;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: top;padding-right: 10px;padding-left: 10px;background-color: rgb(88, 88, 88);"><section style="display: inline-block;vertical-align: middle;"><section style="display: inline-block;vertical-align: middle;color: rgb(255, 255, 255);padding-right: 2px;font-size: 18px;"><p><strong>CPPN：概述</strong></p></section><grazie-editor-wrapper></grazie-editor-wrapper></section><section style="display: inline-block;vertical-align: middle;width: 0.8em;height: 0.8em;border-top: 0.2em solid rgb(255, 255, 255);border-right: 0.2em solid rgb(255, 255, 255);transform: rotate(45deg);"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section></section></section><p style="font-size: inherit;color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;">CPPN（Compositional pattern-producing network 的縮寫）&nbsp;是最簡單的生成網絡之一。它們只是簡單地將像素座標 (x, y) 映射到圖像顏色 (r, g, b)。CPPN 通常使用特定的圖像或圖像集進行訓練。不過，我們發現，當初始化正確執行時，隨機初始化的 CPPN 會生成漂亮的抽象圖案。<br></p><figure style="font-size: inherit;color: inherit;line-height: inherit;"><img class="rich_pages wxw-img" data-ratio="0.20092592592592592" src="https://oscimg.oschina.net/oscnet/669d4106-85b9-43ea-b092-9ee4701beaf9.png" data-type="png" data-w="1080" style="font-size: inherit;color: inherit;line-height: inherit;display: block;margin-right: auto;margin-left: auto;height: auto !important;" title="CPPN 架構" referrerpolicy="no-referrer"><figcaption style="line-height: inherit;margin-top: 10px;text-align: center;color: rgb(153, 153, 153);font-size: 0.7em;">
     CPPN 架構：像素座標為輸入，RGB 值為輸出。 
   </figcaption></figure><p style="font-size: inherit;color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;">利用早期內部版本生成器的使用數據，我們改進了算法以提高視覺質量。除此之外，我們還通過引入多個虛擬參數略微擴展了 CPPN 的經典架構。因此，現在我們的 CPPN 會將 (x, y, a, b, c, f) 映射到 (r, g, b)。這個簡單的更改允許我們引入一種易於使用（但有些不可預測）的方法來更改圖像，如下所示。<br></p><figure style="font-size: inherit;color: inherit;line-height: inherit;"><img class="rich_pages wxw-img" data-ratio="0.8740740740740741" src="https://oscimg.oschina.net/oscnet/ccb31379-5cbe-42a5-913c-6d1445aa4388.png" data-type="png" data-w="1080" style="font-size: inherit;color: inherit;line-height: inherit;display: block;margin-right: auto;margin-left: auto;height: auto !important;" title="CPPN 的虛擬參數" referrerpolicy="no-referrer"><figcaption style="line-height: inherit;margin-top: 10px;text-align: center;color: rgb(153, 153, 153);font-size: 0.7em;">
     通過更新虛擬參數 (a)，我們對圖片進行了略微更改。 
   </figcaption></figure><p style="color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;font-family: sans-serif;font-size: 14px;"><span style="color: inherit;font-size: inherit;font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0px;">這些虛擬參數不一定是常量。</span><span style="color: inherit;font-size: inherit;font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0px;">例如，我們可以將每個像素的虛擬參數 f 的值映射到此像素到圖像</span><span style="color: inherit;font-size: inherit;font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0px;">中心的距離。</span><span style="color: inherit;font-size: inherit;font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0px;">這一技巧使我們能夠確保圖像呈現圓形。</span><span style="color: inherit;font-size: inherit;font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0px;">或者我們可以將 f 映射到像素座標的絕對值之和，這將產生菱形圖案。</span><span style="color: inherit;font-size: inherit;font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0px;">這就是數學與藝術的真正結合！</span></p><figure style="font-size: inherit;color: inherit;line-height: inherit;"><img class="rich_pages wxw-img" data-ratio="0.8194444444444444" src="https://oscimg.oschina.net/oscnet/5b0d9403-e33c-4907-a069-119b14edd26a.png" data-type="png" data-w="1080" style="font-size: inherit;color: inherit;line-height: inherit;display: block;margin-right: auto;margin-left: auto;height: auto !important;" title="CPPN 的虛擬參數，第二個示例" referrerpolicy="no-referrer"><figcaption style="line-height: inherit;margin-top: 10px;text-align: center;color: rgb(153, 153, 153);font-size: 0.7em;">
     不同的函數 f(x,y) 會產生不同的圖像圖案 
   </figcaption></figure><p style="color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;font-family: sans-serif;font-size: 14px;"><span style="color: inherit;font-size: inherit;font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0px;">為了確保我們隨機初始化的 CPPN 始終產生漂亮的設計，我們訓練了一個推薦系統來預測給定的參數集是否會生成具有一定美感的圖像。</span><span style="color: inherit;font-size: inherit;font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0px;">我們根據內部測試期間收到的用户反饋來訓練我們的算法。</span><span style="color: inherit;font-size: inherit;font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0px;">下圖顯示了隨機初始化的 CPPN 創建的兩個圖像示例以及它們對應的「美感」分數。</span></p><p style="text-align: center;"><img class="rich_pages wxw-img" data-galleryid="" data-ratio="0.825" data-s="300,640" src="https://oscimg.oschina.net/oscnet/75019655-6d4c-4c32-90aa-22bf15b1f01d.png" data-type="png" data-w="1080" style="height: auto !important;" referrerpolicy="no-referrer"></p><figure style="font-size: inherit;color: inherit;line-height: inherit;"><figcaption style="line-height: inherit;margin-top: 10px;text-align: center;color: rgb(153, 153, 153);font-size: 0.7em;">
     預測 CPPN 圖像的「美感」分數 
   </figcaption><figcaption style="line-height: inherit;margin-top: 10px;text-align: center;color: rgb(153, 153, 153);font-size: 0.7em;"><br></figcaption><figcaption style="line-height: inherit;margin-top: 10px;text-align: center;color: rgb(153, 153, 153);font-size: 0.7em;"><br></figcaption></figure><section style="font-size: 15px;"><section style="margin-right: 0%;margin-left: 0%;text-align: left;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: top;padding-right: 10px;padding-left: 10px;background-color: rgb(88, 88, 88);"><section style="display: inline-block;vertical-align: middle;"><section style="display: inline-block;vertical-align: middle;color: rgb(255, 255, 255);padding-right: 2px;font-size: 18px;"><p><strong>CPPN：動畫</strong></p></section><grazie-editor-wrapper></grazie-editor-wrapper></section><section style="display: inline-block;vertical-align: middle;width: 0.8em;height: 0.8em;border-top: 0.2em solid rgb(255, 255, 255);border-right: 0.2em solid rgb(255, 255, 255);transform: rotate(45deg);"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section></section></section><p style="font-size: inherit;color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;">當我們的 CPPN 生成的圖稿被轉換成視頻圖形時，它們真正變得栩栩如生。通過將虛擬參數 (a, b, c) 映射到任何閉合的參數曲線（在同一點開始和結束的曲線），我們可以創建任何所需長度的無縫循環動畫！<br></p><figure style="font-size: inherit;color: inherit;line-height: inherit;"><img class="rich_pages wxw-img" data-ratio="0.5731481481481482" src="https://oscimg.oschina.net/oscnet/a692b7b7-aac4-4471-a169-e1dad58339f9.png" data-type="png" data-w="1080" style="font-size: inherit;color: inherit;line-height: inherit;display: block;margin-right: auto;margin-left: auto;height: auto !important;" title="CPPN 動畫視頻的示例幀" referrerpolicy="no-referrer"><figcaption style="line-height: inherit;margin-top: 10px;text-align: center;color: rgb(153, 153, 153);font-size: 0.7em;">
     CPPN 動畫視頻的示例幀 
   </figcaption></figure><p style="font-size: inherit;color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;">曲線函數的選擇至關重要。在平面圓上對虛擬參數添加動畫是最簡單的方式。不過，它有一個缺點：當參數的符號發生變化（例如，從 0.01 變成 -0.01），而它具有較低的一階導數值（在圓形軌跡的情況下為零）時，生成的動畫通常會抖動。為瞭解決這個問題，我們使用<strong style="font-size: inherit;color: inherit;line-height: inherit;"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fen.wikipedia.org%2Fwiki%2FLemniscate_of_Bernoulli" target="_blank" rel="noopener" style="font-size: inherit;line-height: inherit;color: rgb(30, 107, 184);" data-linktype="2">伯努利雙紐線</a></strong><span style="font-size: inherit;color: inherit;line-height: inherit;">來確保虛擬參數的符號永遠不會改變（見下圖）。這解決了動畫抖動的問題，但也帶來了一個新問題。對於大多數動畫幀，其中一個參數僅以增量方式更新，這使動畫看起來過於簡單。我們通過切換到隨機樣條函數解決了這個問題。我們使用的軌跡越複雜，動畫看起來就越豐富！<br></span></p><figure style="font-size: inherit;color: inherit;line-height: inherit;"><img class="rich_pages wxw-img" data-ratio="0.6675925925925926" data-type="png" data-w="1080" style="font-size: inherit;color: inherit;line-height: inherit;display: block;margin-right: auto;margin-left: auto;height: auto !important;" title="Examples of CPPN curve functions" src="https://oscimg.oschina.net/oscnet/a939b9c2-0634-4135-85fd-eac8b32ff401.png" referrerpolicy="no-referrer"><figcaption style="line-height: inherit;margin-top: 10px;text-align: center;color: rgb(153, 153, 153);font-size: 0.7em;">
     CPPN 曲線函數示例 
   </figcaption><figcaption style="line-height: inherit;margin-top: 10px;text-align: center;color: rgb(153, 153, 153);font-size: 0.7em;"><br></figcaption><figcaption style="line-height: inherit;margin-top: 10px;text-align: center;color: rgb(153, 153, 153);font-size: 0.7em;"><br></figcaption></figure><section style="font-size: 15px;"><section style="margin-right: 0%;margin-left: 0%;text-align: left;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: top;padding-right: 10px;padding-left: 10px;background-color: rgb(88, 88, 88);"><section style="display: inline-block;vertical-align: middle;"><section style="display: inline-block;vertical-align: middle;color: rgb(255, 255, 255);padding-right: 2px;font-size: 18px;"><p><strong>CPPN：色彩校正</strong></p></section><grazie-editor-wrapper></grazie-editor-wrapper></section><section style="display: inline-block;vertical-align: middle;width: 0.8em;height: 0.8em;border-top: 0.2em solid rgb(255, 255, 255);border-right: 0.2em solid rgb(255, 255, 255);transform: rotate(45deg);"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section></section></section><p style="font-size: inherit;color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;">還有一個更重要的細節：色彩校正。我們的 CPPN（以及由此產生的圖像）是隨機生成的，但我們需要確保每個圖像都使用我們的品牌顏色。我們嘗試了幾種不同的方式來實現這一目標。第一次迭代（<strong style="font-size: inherit;color: inherit;line-height: inherit;"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.jetbrains.com%2Fblog%2F2020%2F09%2F29%2Fintelligent-code-art%2F" target="_blank" rel="noopener" style="font-size: inherit;line-height: inherit;color: rgb(30, 107, 184);" data-linktype="2">在 2020 版本中使用</a></strong><span style="font-size: inherit;color: inherit;line-height: inherit;">）依賴於瀏覽器中的 SVG 重新着色（使用 feColorMatrix 和 feComponentTransfer）。這種方式速度很快，因為重新着色在瀏覽器中進行，我們可以更新調色板，而無需在服務器端重新呈現圖像。不過，實現起來卻很棘手，因為有些調色板對於 feColorMatrix 和 feComponentTransfer 來説太過複雜，而且通常不可靠。經過大量實驗後，我們發現最終的顏色會因瀏覽器和操作系統而異。以下是我們在 2020 年初進行的實驗的一個示例。左邊是在 macOS 上通過使用 Safari 的設置由早期版本生成器生成的背景的屏幕截圖，右邊是在 Ubuntu Linux 上通過使用 Google Chrome 的設置由生成器生成的相同背景的屏幕截圖。請注意細微的亮度差異。我們應用的後期處理效果越多，亮度差異就越明顯。<br></span></p><figure style="font-size: inherit;color: inherit;line-height: inherit;"><img class="rich_pages wxw-img" data-ratio="0.5165289256198347" data-type="png" data-w="726" style="font-size: inherit;color: inherit;line-height: inherit;display: block;margin-right: auto;margin-left: auto;height: auto !important;" title="An example of brightness discrepancies" src="https://oscimg.oschina.net/oscnet/edbab4b1-2a6d-4f69-b8ec-6bd40136ae39.png" referrerpolicy="no-referrer"><figcaption style="line-height: inherit;margin-top: 10px;text-align: center;color: rgb(153, 153, 153);font-size: 0.7em;">
     亮度差異示例 
   </figcaption></figure><p style="font-size: inherit;color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;">另一個示例是 <strong style="font-size: inherit;color: inherit;line-height: inherit;"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.mozilla.org%2Fen-US%2Fdocs%2FWeb%2FSVG%2FElement%2FfeComponentTransfer" target="_blank" rel="noopener" style="font-size: inherit;line-height: inherit;color: rgb(30, 107, 184);" data-linktype="2">MDN 的 feComponentTransfer 示例</a></strong><span style="font-size: inherit;color: inherit;line-height: inherit;">。這一次，兩個圖像都在同一台機器上使用 Ubuntu Linux 和 Google Chrome 製作，但在左側的屏幕截圖中，硬件加速被禁用。存在明顯的色彩差異，尤其是在表查找示例之間。因此，儘管速度非常快，但這種色彩校正的方式非常不一致。<br></span></p><figure style="font-size: inherit;color: inherit;line-height: inherit;"><img class="rich_pages wxw-img" data-ratio="0.8" data-type="png" data-w="750" style="font-size: inherit;color: inherit;line-height: inherit;display: block;margin-right: auto;margin-left: auto;height: auto !important;" title="An example of color discrepancies" src="https://oscimg.oschina.net/oscnet/e696d864-b3ed-4d90-811c-009334f2319a.png" referrerpolicy="no-referrer"><figcaption style="line-height: inherit;margin-top: 10px;text-align: center;color: rgb(153, 153, 153);font-size: 0.7em;">
     色彩差異的示例 
   </figcaption></figure><p style="font-size: inherit;color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;">我們目前的方式（從 2021 年開始使用）更直接。我們以 32 位灰度來呈現源圖像，這意味着我們的 CPPN 只返回單個明亮度值，而不是 RGB。然後，我們將每個像素映射到具有預計算理想 RGB 值的查找表。這種方式速度較慢，但會產生像素級精確的結果。<br></p><figure style="font-size: inherit;color: inherit;line-height: inherit;"><img class="rich_pages wxw-img" data-ratio="1.1944444444444444" data-type="png" data-w="1080" style="font-size: inherit;color: inherit;line-height: inherit;display: block;margin-right: auto;margin-left: auto;height: auto !important;" title="使用灰度圖像進行色彩校正的示例" src="https://oscimg.oschina.net/oscnet/40ec3320-9630-4424-b88c-dbc273b14278.png" referrerpolicy="no-referrer"><figcaption style="line-height: inherit;margin-top: 10px;text-align: center;color: rgb(153, 153, 153);font-size: 0.7em;">
     使用灰度圖像進行色彩校正的示例 
   </figcaption><figcaption style="line-height: inherit;margin-top: 10px;text-align: center;color: rgb(153, 153, 153);font-size: 0.7em;"><br></figcaption></figure><figure style="font-size: inherit;color: inherit;line-height: inherit;"><img class="rich_pages wxw-img" data-ratio="0.8398148148148148" data-type="png" data-w="1080" style="font-size: inherit;color: inherit;line-height: inherit;display: block;margin-right: auto;margin-left: auto;height: auto !important;" title="2020.1 啓動畫面" src="https://oscimg.oschina.net/oscnet/2c768d79-1c08-4f58-bbfb-f5448e74a775.png" referrerpolicy="no-referrer"><figcaption style="line-height: inherit;margin-top: 10px;text-align: center;color: rgb(153, 153, 153);font-size: 0.7em;">
     使用 SVG 重新着色的 2020.1 啓動畫面 
   </figcaption></figure><p style="font-size: inherit;color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;">將我們目前的色彩校正方式與帶有虛擬參數和樣條動畫的 CPPN 一起使用時，就會得到類似下面的視頻！</p><section><iframe class="video_iframe rich_pages" data-vidtype="2" data-mpvid="wxv_3172052699912110088" data-cover="http%3A%2F%2Fmmbiz.qpic.cn%2Fmmbiz_jpg%2FsGKiaGPagC784HZUFFJWbriaCHrYrLWicAC99RzLeibzv3BaO2udebTZI1n2nxRibB4BkUxmSsMd8cSbWd6WsicpV3Fw%2F0%3Fwx_fmt%3Djpeg" allowfullscreen="" frameborder="0" data-ratio="1.7777777777777777" data-w="1920" style="border-radius: 4px;" data-src="https://mp.weixin.qq.com/mp/readtemplate?t=pages/video_player_tmpl&amp;action=mpvideo&amp;auto=0&amp;vid=wxv_3172052699912110088" referrerpolicy="no-referrer"></iframe></section><p style="font-size: inherit;color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;">CPPN 的另一個顯著特性是，得益於其簡單的架構，可以輕鬆地將其計算圖轉換為 GLSL 代碼。在動畫視頻就緒之後，我們可以將其導出為 WebGL 片段着色器，然後直接在瀏覽器中運行。這種方式的結果的一個示例是 <strong style="font-size: inherit;color: inherit;line-height: inherit;"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.jetbrains.com.cn%2Fqodana%2F" target="_blank" rel="noopener" style="font-size: inherit;line-height: inherit;color: rgb(30, 107, 184);" data-linktype="2">Qodana 的着陸頁</a></strong><span style="font-size: inherit;color: inherit;line-height: inherit;">。</span></p><ul class="list-paddingleft-1" style="list-style-type: disc;"><li><p style="font-size: inherit;color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;">點擊<strong style="font-size: inherit;color: inherit;line-height: inherit;"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgradient-public.labs.jb.gg%2F" target="_blank" rel="noopener" style="font-size: inherit;line-height: inherit;color: rgb(30, 107, 184);" data-linktype="2">此處</a></strong><span style="font-size: inherit;color: inherit;line-height: inherit;">查看我們基於 CPPN 的生成器。</span></p></li><li><p style="font-size: inherit;color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;"><span style="font-size: inherit;color: inherit;line-height: inherit;">要深入瞭解 CPPN，請查看我們包含代碼示例的<a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdatalore.jetbrains.com%2Freport%2Fstatic%2F2jrFAfMBVhUsYW8njXgysC%2F9OuleGiEVhxqGen1GS9cjN" textvalue="公共 Datalore Notebook" linktype="text" imgurl="" tab="outerlink" data-linktype="2"><strong>公共 Datalore Notebook</strong></a>。</span></p></li></ul><p style="font-size: inherit;color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;"><br></p><section style="font-size: 15px;"><section style="margin-right: 0%;margin-left: 0%;text-align: left;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: top;padding-right: 10px;padding-left: 10px;background-color: rgb(88, 88, 88);"><section style="display: inline-block;vertical-align: middle;"><section style="display: inline-block;vertical-align: middle;color: rgb(255, 255, 255);padding-right: 2px;font-size: 18px;"><p><strong>駕馭 Stable Diffusion</strong></p></section><grazie-editor-wrapper></grazie-editor-wrapper></section><section style="display: inline-block;vertical-align: middle;width: 0.8em;height: 0.8em;border-top: 0.2em solid rgb(255, 255, 255);border-right: 0.2em solid rgb(255, 255, 255);transform: rotate(45deg);"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section></section></section><p style="font-size: inherit;color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;">Stable Diffusion 提供了高水平的廣泛應用和視覺保真度，這使其成為我們圖稿生成器的完美支柱。為了使 Stable Diffusion 適合用作發佈圖形源，我們必須遵守以下標準：</p><ul style="font-size: inherit;color: inherit;line-height: inherit;padding-left: 32px;" class="list-paddingleft-1"><li style="font-size: inherit;color: inherit;line-height: inherit;margin-bottom: 0.5em;"><p><span style="font-size: inherit;color: inherit;line-height: inherit;">圖像應遵循品牌調色板。</span></p></li><li style="font-size: inherit;color: inherit;line-height: inherit;margin-bottom: 0.5em;"><p><span style="font-size: inherit;color: inherit;line-height: inherit;">不允許出現偽影或瑕疵（如壞像素）。</span></p></li><li style="font-size: inherit;color: inherit;line-height: inherit;margin-bottom: 0.5em;"><p><span style="font-size: inherit;color: inherit;line-height: inherit;">應該易於使用某種特定風格（抽象平滑線條）。</span></p></li><li style="font-size: inherit;color: inherit;line-height: inherit;margin-bottom: 0.5em;"><p><span style="font-size: inherit;color: inherit;line-height: inherit;">應該需要很少或不需要提示，這意味着它應該提供易於訪問且直觀的控制。</span></p></li></ul><p style="font-size: inherit;color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;">雖然始終存在改進的空間，但我們已經滿足了所有上述要求。最新的圖像已<strong style="font-size: inherit;color: inherit;line-height: inherit;"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode2art.jetbrains.com%2F" target="_blank" rel="noopener" style="font-size: inherit;line-height: inherit;color: rgb(30, 107, 184);" data-linktype="2">公開</a></strong><span style="font-size: inherit;color: inherit;line-height: inherit;">，所有技術細節如下。<br></span></p><figure style="font-size: inherit;color: inherit;line-height: inherit;"><img class="rich_pages wxw-img" data-ratio="0.9824074074074074" data-type="png" data-w="1080" style="font-size: inherit;color: inherit;line-height: inherit;display: block;margin-right: auto;margin-left: auto;height: auto !important;" title="2023.1 splash screens" src="https://oscimg.oschina.net/oscnet/852190b3-f71c-466b-8bec-07665f2b6a37.png" referrerpolicy="no-referrer"><figcaption style="line-height: inherit;margin-top: 10px;text-align: center;color: rgb(153, 153, 153);font-size: 0.7em;">
     使用 Stable Diffusion 創建的 2023.1 啓動畫面 
   </figcaption></figure><p style="font-size: inherit;color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;">為了產生始終符合我們所有標準的結果，我們使用設計師提供的各種參考資料對 Stable Diffusion 進行了微調。下面是一些根據不同風格生成的圖像示例。<br></p><p style="text-align: center;"><img class="rich_pages wxw-img" data-galleryid="" data-ratio="0.46944444444444444" data-s="300,640" data-type="png" data-w="1080" style="height: auto !important;" src="https://oscimg.oschina.net/oscnet/b744869f-22b3-4f5e-9f06-1e4850cdc202.png" referrerpolicy="no-referrer"></p><br><figure style="font-size: inherit;color: inherit;line-height: inherit;"><img class="rich_pages wxw-img" data-ratio="0.4638888888888889" data-type="png" data-w="1080" style="font-size: inherit;color: inherit;line-height: inherit;display: block;margin-right: auto;margin-left: auto;height: auto !important;" title="通過微調 Stable Diffusion 獲得的實驗風格" src="https://oscimg.oschina.net/oscnet/5cdb078f-6c1d-4c8f-86d1-129e40d6a820.png" referrerpolicy="no-referrer"></figure><br><figure style="font-size: inherit;color: inherit;line-height: inherit;"><img class="rich_pages wxw-img" data-ratio="0.3509259259259259" data-type="png" data-w="1080" style="font-size: inherit;color: inherit;line-height: inherit;display: block;margin-right: auto;margin-left: auto;height: auto !important;" title="通過微調 Stable Diffusion 獲得的實驗風格" src="https://oscimg.oschina.net/oscnet/035c9f63-9df7-4751-8e0d-15963ef8614e.png" referrerpolicy="no-referrer"><figcaption style="line-height: inherit;margin-top: 10px;text-align: center;color: rgb(153, 153, 153);font-size: 0.7em;">
     通過微調 Stable Diffusion 獲得的實驗風格 
   </figcaption></figure><p style="font-size: inherit;color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;">在深入研究微調過程的技術細節之前，我們先來看看 Stable Diffusion 的內部原理。它在本質上由三部分組成：CLIP 文本編碼器（用於將文本編碼成多模態嵌入向量空間的微型 Transformer 模型），將圖像壓縮到隱空間以及從隱空間解壓縮的變分自動編碼器，以及降噪 UNet。<br></p><figure style="font-size: inherit;color: inherit;line-height: inherit;"><img class="rich_pages wxw-img" data-ratio="0.6397748592870544" data-type="png" data-w="1066" style="font-size: inherit;color: inherit;line-height: inherit;display: block;margin-right: auto;margin-left: auto;height: auto !important;" title="Stable Diffusion 的架構" src="https://oscimg.oschina.net/oscnet/dfaa53b8-d074-4766-9a9d-3c7f30d75e3a.png" referrerpolicy="no-referrer"><figcaption style="line-height: inherit;margin-top: 10px;text-align: center;color: rgb(153, 153, 153);font-size: 0.7em;">
     Stable Diffusion 的架構（圖像來源： 
    <a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.philschmid.de%2Fstable-diffusion-inference-endpoints" textvalue="‍philschmid.de/stable-diffusion-inference-endpoints" linktype="text" imgurl="" tab="outerlink" data-linktype="2">philschmid.de/stable-diffusion-inference-endpoints</a>） 
   </figcaption></figure><p style="color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;font-family: sans-serif;font-size: 14px;"><span style="color: inherit;font-size: inherit;font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0px;">生成過程大致如下：</span><br></p><ol style="font-size: inherit;color: inherit;line-height: inherit;padding-left: 32px;" class="list-paddingleft-1"><li style="font-size: inherit;color: inherit;line-height: inherit;margin-bottom: 0.5em;"><p><span style="font-size: inherit;color: inherit;line-height: inherit;">我們將提示文本編碼成一個嵌入向量，即一個 77×768 浮點數組。</span></p></li><li style="font-size: inherit;color: inherit;line-height: inherit;margin-bottom: 0.5em;"><p><span style="font-size: inherit;color: inherit;line-height: inherit;">我們隨機生成圖像的隱式表示，它可以是純高斯噪聲或初始圖像的帶噪表示。</span></p></li><li style="font-size: inherit;color: inherit;line-height: inherit;margin-bottom: 0.5em;"><p><span style="font-size: inherit;color: inherit;line-height: inherit;">我們以給定的步數，將編碼的隱圖像和編碼的文本反覆傳遞給降噪 UNet。</span></p></li><li style="font-size: inherit;color: inherit;line-height: inherit;margin-bottom: 0.5em;"><p><span style="font-size: inherit;color: inherit;line-height: inherit;">在對隱圖像降噪後，我們將其傳遞給解碼器，從而將其解壓縮為標準的 RGB 圖像。</span></p></li></ol><figure style="font-size: inherit;color: inherit;line-height: inherit;"><img class="rich_pages wxw-img" data-ratio="0.5231481481481481" data-type="png" data-w="1080" style="font-size: inherit;color: inherit;line-height: inherit;display: block;margin-right: auto;margin-left: auto;height: auto !important;" title="降噪過程" src="https://oscimg.oschina.net/oscnet/01beaca1-6d92-4f4d-95d0-7d44d4c42451.png" referrerpolicy="no-referrer"><figcaption style="line-height: inherit;margin-top: 10px;text-align: center;color: rgb(153, 153, 153);font-size: 0.7em;">
     降噪過程（圖像來源： 
    <a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjalammar.github.io%2Fillustrated-stable-diffusion%2F" textvalue="jalammar.github.io/illustrated-stable-diffusion/" linktype="text" imgurl="" tab="outerlink" data-linktype="2">jalammar.github.io/illustrated-stable-diffusion/</a>） 
   </figcaption></figure><p style="color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;font-family: sans-serif;font-size: 14px;"><span style="color: inherit;font-size: inherit;font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0px;">對我們來説至關重要的是，Stable Diffusion 的好處在於，可以用很少的數據對其進行微調，並獲得很好的結果！</span><span style="color: inherit;font-size: inherit;font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0px;">作為「副作用」，數據高效的微調方法在計算上也是高效的，這使它變得更好。</span></p><p style="font-size: inherit;color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;">最直接的微調方式是文本反轉 (p-tuning)。我們會凍結所有權重，例如 UNet、VAE 和文本編碼器（這意味着我們不會在訓練期間更新它們），並且只為文本編碼器的每個嵌入向量訓練一個新詞。因為我們每個嵌入向量只訓練一個新詞，只有 768 個可訓練參數！<br></p><figure style="font-size: inherit;color: inherit;line-height: inherit;"><img class="rich_pages wxw-img" data-ratio="0.5638888888888889" data-type="png" data-w="1080" style="font-size: inherit;color: inherit;line-height: inherit;display: block;margin-right: auto;margin-left: auto;height: auto !important;" title="文本嵌入和反轉過程概述" src="https://oscimg.oschina.net/oscnet/7251b2c3-39c3-4bde-8ba9-f8f7852433b2.png" referrerpolicy="no-referrer"><figcaption style="line-height: inherit;margin-top: 10px;text-align: center;color: rgb(153, 153, 153);font-size: 0.7em;">
     文本嵌入和反轉過程概述（&nbsp;圖像來源： 
    <a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftextual-inversion.github.io%2F" textvalue="textual-inversion.github.io/" linktype="text" imgurl="" tab="outerlink" data-linktype="2">textual-inversion.github.io/</a>） 
   </figcaption></figure><p style="color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;font-family: sans-serif;font-size: 14px;"><span style="color: inherit;font-size: inherit;font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0px;">這些自定義嵌入向量是可組合的，這意味着我們最多可以在單個提示中使用 77 個嵌入向量。</span><span style="color: inherit;font-size: inherit;font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0px;">最重要的是，它們很容易訓練，在單張 RTX 4090 上需要大約 2 個小時。</span><span style="color: inherit;font-size: inherit;font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0px;">以下是訓練過程的示例。</span><span style="color: inherit;font-size: inherit;font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0px;">用於生成以下兩個圖像的提示均為「digital art in the style of 」，其中「」是我們正在訓練的新詞嵌入向量。</span><span style="color: inherit;font-size: inherit;font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0px;">隨着執行的訓練步驟的增多，圖像會發生演變，新的視覺風格會變得越來越明顯。</span></p><p style="text-align: center;"><img class="rich_pages wxw-img" data-galleryid="" data-ratio="1" data-s="300,640" data-type="png" data-w="1080" style="height: auto !important;" src="https://oscimg.oschina.net/oscnet/2c191bf3-e18e-4db0-bd26-e4082f6c6ba3.png" referrerpolicy="no-referrer"></p><figure style="font-size: inherit;color: inherit;line-height: inherit;"><figcaption style="line-height: inherit;margin-top: 10px;text-align: center;color: rgb(153, 153, 153);font-size: 0.7em;">
     使用文本反轉經過 500 和 3000 個訓練步驟後生成的圖像 
   </figcaption></figure><p style="color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;font-family: sans-serif;font-size: 14px;"><span style="color: inherit;font-size: inherit;font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0px;">另一種熱門且高效的微調方法是低秩自適應（Low-Rank Adaptation，簡稱 LoRA）。LoRA 的關鍵思想類似於文本反轉，只是這次除了凍結權重之外，我們還通過在 UNet 內的注意力層中添加小的適配器層來引入新權重。</span></p><figure style="font-size: inherit;color: inherit;line-height: inherit;"><img class="rich_pages wxw-img" data-ratio="0.7553606237816765" data-type="png" data-w="1026" style="font-size: inherit;color: inherit;line-height: inherit;display: block;margin-right: auto;margin-left: auto;height: auto !important;" title="一個 Transformer 層內的 LoRA 方法示意圖" src="https://oscimg.oschina.net/oscnet/bcb475a0-a79b-4448-9d7a-13b165607f8b.png" referrerpolicy="no-referrer"><figcaption style="line-height: inherit;margin-top: 10px;text-align: center;color: rgb(153, 153, 153);font-size: 0.7em;">
     一個 Transformer 層內的 LoRA 方法示意圖（圖像來源： 
    <a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fadapterhub.ml%2Fblog%2F2022%2F09%2Fupdates-in-adapter-transformers-v3-1%2F" textvalue="adapterhub.ml/blog/2022/09/updates-in-adapter-transformers-v3-1/" linktype="text" imgurl="" tab="outerlink" data-linktype="2">adapterhub.ml/blog/2022/09/updates-in-adapter-transformers-v3-1/</a>） 
   </figcaption></figure><p style="color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;font-family: sans-serif;font-size: 14px;"><span style="color: inherit;font-size: inherit;font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0px;">與文本反轉相比，這種方式可以從微調數據中捕獲更復雜的圖案（例如，「AI 肖像」應用會使用用户的面孔訓練適配器層），但它使用的資</span><span style="color: inherit;font-size: inherit;font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0px;">源略多，最重要的是，多個 LoRA 無法組合。</span><span style="color: inherit;font-size: inherit;font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0px;">在我們的具體用例中，我們發現 LoRA 在使用 Stable Diffusion XL 時最有效。</span><span style="color: inherit;font-size: inherit;font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0px;">相比之下，在早期版本的 Stable Diffusion（1.4、1.5 或 2.1）中，文本反轉可以實現更廣泛的應用。</span></p><figure style="font-size: inherit;color: inherit;line-height: inherit;"><img class="rich_pages wxw-img" data-ratio="1.4083333333333334" data-type="png" data-w="1080" style="font-size: inherit;color: inherit;line-height: inherit;display: block;margin-right: auto;margin-left: auto;height: auto !important;" title="使用 LoRA 經過 200 和 1000 個訓練步驟後生成的圖像" src="https://oscimg.oschina.net/oscnet/da82c791-8e96-45e2-ae64-ab8b4fbc1bfe.png" referrerpolicy="no-referrer"><figcaption style="line-height: inherit;margin-top: 10px;text-align: center;color: rgb(153, 153, 153);font-size: 0.7em;">
     使用 LoRA 經過 200 和 1000 個訓練步驟後生成的圖像 
   </figcaption><figcaption style="line-height: inherit;margin-top: 10px;text-align: center;color: rgb(153, 153, 153);font-size: 0.7em;"><span style="font-size: 18px;"></span><br></figcaption><figcaption style="line-height: inherit;margin-top: 10px;text-align: center;color: rgb(153, 153, 153);font-size: 0.7em;"><br></figcaption></figure><section style="font-size: 15px;"><section style="margin-right: 0%;margin-left: 0%;text-align: left;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: top;padding-right: 10px;padding-left: 10px;background-color: rgb(88, 88, 88);"><section style="display: inline-block;vertical-align: middle;"><section style="display: inline-block;vertical-align: middle;color: rgb(255, 255, 255);padding-right: 2px;font-size: 18px;"><p><strong>結合 Stable Diffusion&nbsp;</strong></p><p><strong>和 CPPN 的優點</strong></p></section><grazie-editor-wrapper></grazie-editor-wrapper></section><section style="display: inline-block;vertical-align: middle;width: 0.8em;height: 0.8em;border-top: 0.2em solid rgb(255, 255, 255);border-right: 0.2em solid rgb(255, 255, 255);transform: rotate(45deg);"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section></section></section><p style="font-size: inherit;color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;">我們使用 Stable Diffusion 的標準之一是需要確保生成的圖像遵循某個特定品牌的調色板，這正是 CPPN 的用武之地！在使用 Stable Diffusion 生成圖像之前，我們使用自己的梯度生成器（如上所述）利用 CPPN 生成圖像，以像素級精度應用所需的顏色，然後使用 VAE 對其進行編碼並使用高斯噪聲進行混合。UNet 使用生成的隱圖像作為其起點，從而保留原始色彩和構圖。<br></p><figure style="font-size: inherit;color: inherit;line-height: inherit;"><img class="rich_pages wxw-img" data-ratio="0.4787037037037037" data-type="png" data-w="1080" style="font-size: inherit;color: inherit;line-height: inherit;display: block;margin-right: auto;margin-left: auto;height: auto !important;" title="CPPN → Stable Diffusion 流水線" src="https://oscimg.oschina.net/oscnet/2d5e74a9-8daf-431f-864a-4a63891961b6.png" referrerpolicy="no-referrer"></figure><br><figure style="font-size: inherit;color: inherit;line-height: inherit;"><img class="rich_pages wxw-img" data-ratio="0.4703703703703704" data-type="png" data-w="1080" style="font-size: inherit;color: inherit;line-height: inherit;display: block;margin-right: auto;margin-left: auto;height: auto !important;" title="CPPN → Stable Diffusion 流水線" src="https://oscimg.oschina.net/oscnet/93e7736b-b1bb-4784-b5d4-6d1036613054.png" referrerpolicy="no-referrer"><figcaption style="line-height: inherit;margin-top: 10px;text-align: center;color: rgb(153, 153, 153);font-size: 0.7em;">
     CPPN → Stable Diffusion 流水線 
   </figcaption></figure><p style="font-size: inherit;color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;">在 CPPN 圖像就緒後，我們也可以直接在瀏覽器中對其進行編輯，以實現我們所能想象的任何形狀和設計！<br></p><figure style="font-size: inherit;color: inherit;line-height: inherit;"><img class="rich_pages wxw-img" data-ratio="0.26851851851851855" data-type="png" data-w="1080" style="font-size: inherit;color: inherit;line-height: inherit;display: block;margin-right: auto;margin-left: auto;height: auto !important;" title="具有手動編輯 CPPN 圖像的 CPPN → Stable Diffusion 流水線" src="https://oscimg.oschina.net/oscnet/3e03e2c5-1894-41c9-b628-feffef64bd97.png" referrerpolicy="no-referrer"><figcaption style="line-height: inherit;margin-top: 10px;text-align: center;color: rgb(153, 153, 153);font-size: 0.7em;">
     具有手動編輯 CPPN 圖像的 CPPN → Stable Diffusion 流水線 
   </figcaption></figure><p style="font-size: inherit;color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;">最後，使用我們的「CPPN → Stable Diffusion」流水線生成多個圖像後，我們就可以用這些圖像來訓練另一個 CPPN，並將它們轉換為動畫，如上面的 <em style="font-size: inherit;color: inherit;line-height: inherit;">CPPN：動畫</em>部分所述！這裏有一些示例 <strong style="font-size: inherit;color: inherit;line-height: inherit;"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.shadertoy.com%2Fview%2FDsBSW3" target="_blank" rel="noopener" style="font-size: inherit;line-height: inherit;color: rgb(30, 107, 184);" data-linktype="2">GLSL 代碼</a>。</strong><span style="font-size: inherit;color: inherit;line-height: inherit;"></span></p><p style="font-size: inherit;color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;">JetBrains 對 AI 賦能圖形的探索和實現是一次冒險。多年來，我們的工具不斷髮展和成熟，從最初使用基於 WebGL 的隨機生成方式，到目前使用 CPPN 和 Stable Diffusion 生成時尚且個性化的設計。展望未來，我們期待更高水平的自定義和廣泛應用，我們對這些技術將在圖形生成領域釋放的潛力感到興奮。</p><p style="font-size: inherit;color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;">我們希望這篇關於我們的 AI 圖稿發展歷程的深入介紹對您有所啓發！我們誠邀您探索我們提供的示例（包括我們的<strong style="font-size: inherit;color: inherit;line-height: inherit;"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcai.jetbrains.com%2F" target="_blank" rel="noopener" style="font-size: inherit;line-height: inherit;color: rgb(30, 107, 184);" data-linktype="2">交互式歸檔</a></strong><span style="font-size: inherit;color: inherit;line-height: inherit;">）並在文章留言區或發送電子郵件至 <a href="https://www.oschina.net/action/GoToLink?url=mailto%3Acai%40jetbrains.com" style="font-size: inherit;line-height: inherit;color: rgb(30, 107, 184);" target="_blank">cai@jetbrains.com</a> 來分享您的反饋。請告訴我們您未來希望從計算藝術團隊看到什麼樣的主題！</span></p></section><section style="font-size: 16px;"><section style="transform: perspective(0px);transform-style: flat;" powered-by="xiumi.us"><section style="margin-top: 10px;text-align: left;justify-content: flex-start;display: flex;flex-flow: row;transform: rotateY(180deg);"><section style="display: inline-block;width: 100%;vertical-align: top;border-left: 3px solid rgb(219, 219, 219);border-bottom-left-radius: 0px;padding-left: 8px;align-self: flex-start;flex: 0 0 auto;"><section style="transform: perspective(0px);transform-style: flat;" powered-by="xiumi.us"><section style="transform: rotateY(180deg);"><section style="color: rgb(125, 125, 125);font-size: 13px;text-align: right;"><p>本博文英文原作者：</p><p>Vladimir Sotnikov, Olga Andreevskikh</p></section><grazie-editor-wrapper></grazie-editor-wrapper></section></section></section></section></section><section style="" powered-by="xiumi.us"><p><br></p><p><br></p><section style="font-size: 15px;"><section style="text-align: left;justify-content: flex-start;display: flex;flex-flow: row;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;vertical-align: top;align-self: flex-start;flex: 0 0 auto;"><section style="justify-content: flex-start;display: flex;flex-flow: row;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;vertical-align: top;align-self: flex-start;flex: 0 0 auto;"><section style="display: flex;flex-flow: row;text-align: center;justify-content: center;margin-right: 0%;margin-left: 0%;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: middle;width: 43%;flex: 0 0 auto;align-self: center;height: auto;"><section style="margin-top: 0.5em;margin-bottom: 0.5em;" powered-by="xiumi.us"><section style="background-color: rgb(0, 0, 0);height: 1px;"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section></section><section style="display: inline-block;vertical-align: middle;width: 14.0003%;flex: 0 0 auto;height: auto;line-height: 0;align-self: center;"><section style="margin-top: 10px;margin-bottom: 10px;line-height: 0;" powered-by="xiumi.us"><section style="vertical-align: middle;display: inline-block;line-height: 0;box-shadow: rgba(255, 255, 255, 0.1) 0px 0px 5px;"><img class="rich_pages wxw-img" data-ratio="1" data-s="300,640" data-type="png" data-w="420" style="vertical-align: middle;width: 100%;height: auto !important;" src="https://oscimg.oschina.net/oscnet/f8105502-1c42-4b88-83a3-ddc47473d4fa.png" referrerpolicy="no-referrer"></section></section></section><section style="display: inline-block;vertical-align: middle;width: 43%;flex: 0 0 auto;align-self: center;height: auto;"><section style="margin-top: 0.5em;margin-bottom: 0.5em;" powered-by="xiumi.us"><section style="background-color: rgb(0, 0, 0);height: 1px;"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section></section></section><section style="justify-content: flex-start;display: flex;flex-flow: row;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;vertical-align: top;align-self: flex-start;flex: 0 0 auto;"><section style="justify-content: flex-start;display: flex;flex-flow: row;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;vertical-align: top;align-self: flex-start;flex: 0 0 auto;"><section style="margin-top: 10px;justify-content: flex-start;display: flex;flex-flow: row;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;vertical-align: top;padding-right: 15px;padding-left: 15px;align-self: flex-start;flex: 0 0 auto;background-color: rgb(88, 88, 88);"><section style="justify-content: flex-start;margin-top: 10px;display: flex;flex-flow: row;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: top;width: auto;min-width: 10%;flex: 0 0 auto;height: auto;align-self: flex-start;"><section style="margin-top: 3px;justify-content: flex-start;display: flex;flex-flow: row;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: bottom;width: 33.33%;align-self: flex-end;flex: 0 0 auto;"><section style="" powered-by="xiumi.us"><section style="display: inline-block;width: 0px;height: 0px;vertical-align: top;overflow: hidden;border-style: solid;border-width: 6px 0px 6px 10px;border-color: rgba(255, 255, 255, 0) rgba(255, 255, 255, 0) rgba(255, 255, 255, 0) rgb(255, 255, 255);"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section></section><section style="display: inline-block;vertical-align: bottom;width: 33.33%;align-self: flex-end;flex: 0 0 auto;"><section style="" powered-by="xiumi.us"><section style="display: inline-block;width: 0px;height: 0px;vertical-align: top;overflow: hidden;border-style: solid;border-width: 6px 0px 6px 10px;border-color: rgba(255, 255, 255, 0) rgba(255, 255, 255, 0) rgba(255, 255, 255, 0) rgb(255, 255, 255);"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section></section><section style="display: inline-block;vertical-align: bottom;width: 33.33%;margin-top: 3px;align-self: flex-end;flex: 0 0 auto;"><section style="" powered-by="xiumi.us"><section style="display: inline-block;width: 0px;height: 0px;vertical-align: top;overflow: hidden;border-style: solid;border-width: 6px 0px 6px 10px;border-color: rgba(255, 255, 255, 0) rgba(255, 255, 255, 0) rgba(255, 255, 255, 0) rgb(255, 255, 255);"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section></section></section></section><section style="display: inline-block;vertical-align: top;width: auto;min-width: 10%;flex: 0 0 auto;height: auto;margin-left: 10px;align-self: flex-start;"><section style="" powered-by="xiumi.us"><section style="color: rgb(255, 255, 255);text-align: justify;"><p><strong>更多閲讀推薦</strong></p></section><grazie-editor-wrapper></grazie-editor-wrapper></section></section></section></section></section><section style="margin-bottom: 10px;justify-content: flex-start;display: flex;flex-flow: row;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;vertical-align: top;border-style: solid;border-width: 1px;border-color: rgb(88, 88, 88);align-self: flex-start;flex: 0 0 auto;padding: 27px 7px;"><section style="" powered-by="xiumi.us"><section style="text-align: center;color: rgb(0, 0, 0);"><p><strong>新發布</strong></p></section><grazie-editor-wrapper></grazie-editor-wrapper></section><section style="" powered-by="xiumi.us"><section style="text-align: center;font-size: 12px;color: rgb(0, 0, 0);"><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzkwNDI5NzUyMQ%3D%3D%26mid%3D2247502861%26idx%3D1%26sn%3D62792d48fecdd57819d1237e73dff1b3%26chksm%3Dc08ba153f7fc28458201afc3ced4c0f11045f731ec8fee1e94961a3708a20e50690942745bb6%26token%3D1396192698%26lang%3Dzh_CN%26scene%3D21%23wechat_redirect" target="_blank" data-linktype="2">JetBrains 全系列 IDE 2023.2 更新概覽</a><br></p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzkwNDI5NzUyMQ%3D%3D%26mid%3D2247503998%26idx%3D1%26sn%3Dc80abda34362d92eb4077c7176fbf9c7%26chksm%3Dc08bbd20f7fc34367671f223323fdcad7d4a69e299793bab51144717a9a3902159a5a51a4227%26token%3D1790117445%26lang%3Dzh_CN%26scene%3D21%23wechat_redirect" target="_blank" data-linktype="2">RustRover: JetBrains 出品的獨立 Rust IDE</a></p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzkwNDI5NzUyMQ%3D%3D%26mid%3D2247492468%26idx%3D1%26sn%3D872a6fc5a40d41828299c69e20f57a56%26scene%3D21%23wechat_redirect" target="_blank" data-linktype="2">JetBrains Aqua: 測試自動化 IDE</a></p><p><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzkwNDI5NzUyMQ%3D%3D%26mid%3D2247489349%26idx%3D1%26sn%3D1dcec5e6b810512a8c23fa52db285c06%26chksm%3Dc0887a1bf7fff30d8221cd92764618ec5262ac9a549c7173340bc754f1abecc83a0dc51e2ec8%26scene%3D21%23wechat_redirect" target="_blank" data-linktype="2">JetBrains Qodana:&nbsp;代碼質量平台</a></p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzkwNDI5NzUyMQ%3D%3D%26mid%3D2247491483%26idx%3D1%26sn%3D7ef92a11da98c89c18feb4d97185a872%26scene%3D21%23wechat_redirect" target="_blank" data-linktype="2">Fleet 公共預覽版</a></p></section><grazie-editor-wrapper></grazie-editor-wrapper></section><section style="" powered-by="xiumi.us"><section style="text-align: justify;"><p><br></p></section><grazie-editor-wrapper></grazie-editor-wrapper></section><section style="" powered-by="xiumi.us"><section style="color: rgb(0, 0, 0);text-align: center;"><p><strong>調研報告</strong></p></section><grazie-editor-wrapper></grazie-editor-wrapper></section><section style="" powered-by="xiumi.us"><section style="text-align: center;font-size: 12px;"><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzkwNDI5NzUyMQ%3D%3D%26mid%3D2247494786%26idx%3D2%26sn%3Ddb281bdfcbcac3be0c040f978f8da428%26chksm%3Dc08b81dcf7fc08cadd185937e84851eb06fefeb712c3fc3d0545623eba2b061fc878f9ea7f30%26token%3D1929533000%26lang%3Dzh_CN%26scene%3D21%23wechat_redirect" target="_blank" data-linktype="2">2022 開發人員生態系統現狀</a></p><p><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzkwNDI5NzUyMQ%3D%3D%26mid%3D2247489234%26idx%3D1%26sn%3Db6b7aaffebc6bdf85dfd2d8bd6dbd3ea%26chksm%3Dc0887b8cf7fff29ab0ca8e0a297f5f66d6ce4e3f11ed1c28c2c2d7853f2966ec36281bee5c60%26scene%3D21%23wechat_redirect" target="_blank" data-linktype="2">Python 開發者年度調查</a></p><p><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzkwNDI5NzUyMQ%3D%3D%26mid%3D2247487607%26idx%3D1%26sn%3Dba4827cc6fa8965420c22a649a39ce83%26chksm%3Dc0887d29f7fff43f55c492ae88e279c77d14a7323f814fcc3a7961b6e4298dfec33494ce0788%26scene%3D21%23wechat_redirect" target="_blank" data-linktype="2">代碼審查工具報告</a></p><p><span style="letter-spacing: 0px;"><br></span></p></section><grazie-editor-wrapper></grazie-editor-wrapper></section><section style="" powered-by="xiumi.us"><section style="text-align: justify;"><p style="text-align: center;text-wrap: wrap;"><strong>IDE 使用技巧</strong><br></p></section><grazie-editor-wrapper></grazie-editor-wrapper></section><section style="" powered-by="xiumi.us"><section style="text-align: center;"><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzkwNDI5NzUyMQ%3D%3D%26mid%3D2247494974%26idx%3D1%26sn%3D3108e1d2c43978d81371296ad91d68d6%26chksm%3Dc08b8060f7fc09768a9b31bdcd1be4418e54f80ff76914524a4cface46e0d981b827db16ac92%26token%3D441435331%26lang%3Dzh_CN%26scene%3D21%23wechat_redirect" target="_blank" data-linktype="2"><span style="font-size: 12px;">10 個熱門 IDE 主題推薦</span></a></p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzkwNDI5NzUyMQ%3D%3D%26mid%3D2247500429%26idx%3D1%26sn%3Da0d1d597f6365c3558f0196f67f923bc%26chksm%3Dc08bafd3f7fc26c51a13b598413bb17cece97c2582b93a2902671a2dc231241cf5acf61d29f1%26token%3D443990964%26lang%3Dzh_CN%26scene%3D21%23wechat_redirect" target="_blank" data-linktype="2"><span style="font-size: 12px;">IDE 中的「快速功能」</span></a></p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzkwNDI5NzUyMQ%3D%3D%26mid%3D2247492832%26idx%3D1%26sn%3Db07d1ac0f9d7fa9b7e5e291991a52acd%26chksm%3Dc08b89bef7fc00a8d9ac8f79bb75c384c7b488efbd03f045b6f198ce72a02aec2e994a202f53%26token%3D1396192698%26lang%3Dzh_CN%26scene%3D21%23wechat_redirect" target="_blank" style="font-size: 12px;" data-linktype="2">最被低估的快捷鍵</a></p></section></section></section></section></section></section></section></section></section></section></section></section></section><grazie-editor-wrapper></grazie-editor-wrapper></section><section style="text-align: left;justify-content: flex-start;display: flex;flex-flow: row;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;vertical-align: top;align-self: flex-start;flex: 0 0 auto;"><section style="text-align: center;margin-top: 10px;margin-bottom: 10px;line-height: 0;" powered-by="xiumi.us"><section style="vertical-align: middle;display: inline-block;line-height: 0;"><img class="rich_pages wxw-img" data-ratio="0.5" data-s="300,640" data-type="png" data-w="1080" style="vertical-align: middle;width: 100%;height: auto !important;" src="https://oscimg.oschina.net/oscnet/4677158d-9778-44bd-b61a-ab3c44c4d071.png" referrerpolicy="no-referrer"></section></section><section style="" powered-by="xiumi.us"><section style="font-size: 13px;color: rgb(125, 125, 125);text-align: justify;"><p><strong>⏬ 戳「閲讀原文」瞭解更多</strong></p></section><grazie-editor-wrapper></grazie-editor-wrapper></section></section></section></section><p style="display: none;"><mp-style-type data-value="3"></mp-style-type></p></div><p style="color: #858585; font-size: 13px;">本文分享自微信公眾號 - JetBrains（JetBrainsChina）。<br>如有侵權，請聯繫 support@oschina.cn 刪除。<br>本文參與「<a href="https://www.oschina.net/sharing-plan" target="_blank">OSC 源創計劃</a>」，歡迎正在閲讀的你也加入，一起分享。</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 31 Oct 2023 06:44:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/5494143/blog/10139905</guid>
            <link>https://my.oschina.net/u/5494143/blog/10139905</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[新款 MacBook Pro「減配」：內存帶寬縮水、14 寸 M3 入門款 2 個 USB-C 接口]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>蘋果今天在「來勢迅猛」發佈會上公佈了<u><a href="https://www.oschina.net/news/264233/apple-m3-silicon" target="_blank">全新的 M3 系列處理器</a></u>，以及全新的&nbsp;MacBook Pro&nbsp;產品。</p><p>其官方網站的機型比較頁顯示，新款&nbsp;MacBook Pro&nbsp;內存帶寬相比老款 M1 Pro / Max 及 M2 Pro / Max&nbsp;機型有所縮水。</p><p>搭載&nbsp;M3 Pro 的新款 14/16 寸&nbsp;MacBook Pro&nbsp;，<strong>內存帶寬為 150 GB/s</strong>。作為對比，<strong>老款 M1 Pro / Max 及 M2 Pro / Max&nbsp;機型為&nbsp;200 GB/s</strong>。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-9591ed9a6e921154d1d929d6f0bccd82dea.png" referrerpolicy="no-referrer"></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-44eb5748b2903fdaa56a59e49ece5119773.png" referrerpolicy="no-referrer"></p><p>此外，<strong>搭載 M3 標準版的入門款&nbsp;14&nbsp;寸 MacBook Pro&nbsp;內存帶寬為 100 GB/s，與 M2&nbsp;款 13 寸&nbsp;MacBook Air / Pro 持平。</strong></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-7ed4e6e4604d9c254e9e028a1fc14cf71e6.png" referrerpolicy="no-referrer"></p><p>蘋果技術規格描述顯示，在蘋果 M3 款 MacBook Pro 中，頂配的 M3 Max 內存帶寬&nbsp;300 GB/s。作為對比，M1 Max / M2 Max 款內存帶寬 400 GB/s。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-780970d8cb141172c9298cb91d85d392fdd.png" referrerpolicy="no-referrer"></p><hr><p>接口方面，<strong>搭載 M3 的入門款 14 寸 MacBook Pro</strong>，相比搭載 M3 Pro / Max 款的機型，<strong>閹割了右側 USB-C 雷靂 4 接口，僅具有左側兩個 USB-C 雷靂 4 接口</strong>。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-ffa1d313e943d5801a493e92c03e0579406.png" referrerpolicy="no-referrer"></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-1a886c2f41980c6fb669cf198c700fb301d.png" referrerpolicy="no-referrer"></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-4f62bc21b2365deef4e269d7386c0231158.png" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 31 Oct 2023 06:25:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264253</guid>
            <link>https://www.oschina.net/news/264253</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[世界首個開源貢獻榜]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">BenchCouncil（國際測試委員會）<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2Frk8RYcJstd7KYmFYFdoPRA" target="_blank">發佈</a>了世界首個開源貢獻榜。並聲稱該榜單隻以貢獻分高下，評選出了 20 世紀 60 年代至今開源計算機系統領域主要成果及其貢獻者。</span></p><p><span style="color:#000000">該組織邀請了多位獨立科學家，從 20 世紀 60 年代至今的開源或對開源產生重要影響的成果中，遴選出了 145 項代表性成果，在確定主要貢獻者的基礎上產生了開源領域五十年人才榜、機構榜、國家榜。</span></p><p><span style="color:#000000">其中，共 264 人進入榜單，上榜華人共 24 位。美國以 96.67 的分數在國家榜上遙遙領先，中國則以 6.0 的分數排名第二；加州大學伯克利分校在機構榜上獲得首位，其次分別是谷歌、Apache 軟件基金會。</span></p><p><span style="color:#000000">具體評估標準如下：</span></p><ul><li><span style="color:#000000">為開源運動或發展奠定基礎的重要里程碑</span></li><li><span style="color:#000000">原創或開創性的開源作品</span></li><li><span style="color:#000000">對軟硬件發展起到重要推動作用的開源作品</span></li><li><span style="color:#000000">被業界或學術界廣泛使用或引用的開源作品</span></li></ul><p><span style="color:#000000">國際測試委員會是一個非營利性國際組織，旨在對最先進的技術和業界實踐進行評測和基準測試。</span></p><p><strong><span style="color:#000000">一、開源系統貢獻榜（1960s-2021）</span></strong></p><p><strong><span style="color:#000000"><img alt="" height="4194" src="https://oscimg.oschina.net/oscnet/up-624e521caa41fcd35e9dff105b3b5a7d062.png" width="300" referrerpolicy="no-referrer"></span></strong></p><p><em><span style="color:#000000">（人員機構以成果發佈時所屬機構為主，若當時所屬機構不清，則列現屬機構。）</span></em></p><p><span style="color:#000000">排名前三位學者貢獻如下：</span></p><ol><li><span style="color:#000000">Richard Stallman 的主要貢獻：發起了 GNU 計劃，創立了自由軟件基金會 FSF，提出了 Copyleft 概念並設計了 GPL 版權協議，是 GNU 工具鏈和 GNU Emacs 文本編輯器的主要創建者之一。</span></li><li><span style="color:#000000">Bruce Perens 的主要貢獻：制定併發布了開源定義 The open source definition，是開放源代碼促進會 OSI 的主要創立者之一，是 Debian 操作系統的主要貢獻者之一。</span></li><li><span style="color:#000000">Krste Asanovic 的主要貢獻：RISC-V 指令集架構的共同創始人之一，負責開發了 RISC-V BOOM、Rocket Chip 等開源項目，RISC-V 基金會和 SiFive 的共同創始人之一。</span></li></ol><p><span style="color:#000000">國內機構中，濤思數據因時序數據庫 TDengine 上榜，百度因深度學習框架 PaddlePaddle 上榜，PingCAP 因 TiDB 數據庫上榜，中國科學院計算所和北京開源芯片研究院因開源 RISC-V 處理器香山系列上榜，阿里巴巴和平頭哥半導體因開源 RISC-V 處理器玄鐵系列上榜，中國科學院軟件所因 OpenBLAS 線性代數庫上榜，上海紐約大學因對深度學習框架 MXNet 的貢獻上榜。</span></p><p><span style="color:#000000"><strong>開源計算機系統成果榜</strong></span></p><p><span style="color:#000000"><strong><img alt="" height="583" src="https://oscimg.oschina.net/oscnet/up-1ccc4d461840ceb4efd4ff1d0f843d735b4.png" width="300" referrerpolicy="no-referrer"></strong></span></p><p><span style="color:#000000"><strong>二、機構榜（1960s-2021）</strong></span></p><p><span style="color:#000000"><strong><img alt="" height="2394" src="https://oscimg.oschina.net/oscnet/up-1b514ad7d52aa35bb651728ca965dcb750d.png" width="300" referrerpolicy="no-referrer"></strong></span></p><p><em>（機構分佈在多個國家的，「國家」一般寫總部所在國家；其中 OpenRISC Community 總部未知，國家一欄空白。）</em></p><p><span style="color:#000000"><strong>三、國家榜（1960s-2021）</strong></span></p><p><span style="color:#000000"><strong><img alt="" height="682" src="https://oscimg.oschina.net/oscnet/up-2a29a9d8b1a8a9ad4dc028771254bb2f566.png" width="300" referrerpolicy="no-referrer"></strong></span></p><p><span style="color:#000000">具體成果及榜單見 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fevaluation.benchcouncil.org%2Fopencs%2F" target="_blank">BenchCouncil Top OpenCS Achievement Evaluation</a> 網站。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 31 Oct 2023 06:13:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264250</guid>
            <link>https://www.oschina.net/news/264250</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[裁員後，SiFive 發文談前路發展]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">在確認<a href="https://www.oschina.net/news/263350/sifive-lays-off-hundreds-of-risc-v-developers">裁員</a><span style="background-color:#ffffff">五分之一（約 140 名員工）後，RISC-V 創業公司 SiFive 的</span><span style="background-color:#ffffff">創始人兼首席執行官&nbsp;</span>Patrick<span style="background-color:#ffffff">&nbsp;Little&nbsp;發佈了一篇名為「</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.sifive.com%2Fblog%2Fthe-road-ahead--" target="_blank">The Road Ahead</a><span style="background-color:#ffffff">」的博文，暢談該公司的發展之路。</span></span></p><blockquote><p><span style="color:#000000">RISC-V 顯然是真實存在的，它發展迅速，並將繼續存在！</span></p><p><span style="color:#000000">在 SiFive，我們正在緊急重新發明 computing。自 RISC-V 誕生以來，我們一直在推動其變革，我們的產品正被全球半導體行業中最有才華的設計師集成到最具創新性的產品中。</span></p></blockquote><p><img height="222" src="https://oscimg.oschina.net/oscnet/up-19d15e0e38b13c8d504e35b2f85ed9c59d6.png" width="500" referrerpolicy="no-referrer"></p><p><span style="color:#000000"><span style="background-color:#ffffff">針對其裁員在社區中引發的大量討論和猜測，</span>Patrick 解釋稱，此舉是根據公司的前瞻性業務目標而做的運營調整。</span></p><p><span style="color:#000000"><span style="background-color:#ffffff">SiFive 自認發展狀況十分良好：資金充足、</span><span style="background-color:#ffffff">投資者積極參與並大力支持，且正在從許多世界領先的半導體公司獲得收入和複利版税。該公司表示，後續將繼續大力投資於先進研發，以擴大技術領先地位。</span></span></p><p>「<span style="color:#000000">聰明、快速發展的企業會定期停下來認真審視自己的優先事項，以確保其戰略、工作流程、能力和人員完全一致......我們發現需要重新將我們的優先事項和資源集中在最有前途的機會上......我們對我們的開放文化和才華橫溢的員工感到非常自豪。進行重組涉及艱難的決策，但從戰略上講，我相信這是我們成長並繼續引領行業前進的必要條件。我們祝願所有同事一切順利。」</span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="background-color:#ffffff"><span style="color:#000000">SiFive 表示其將繼續提供</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.sifive.com%2Frisc-v-core-ip" target="_blank">&nbsp;RISC-V 產品組合。</a>「<span style="color:#000000">我們繼續增加我們的行業第一和我們的產品組合，包括我們本月早些時候發佈的產品——SiFive&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.sifive.com%2Fcores%2Fperformance-p870-p870a" target="_blank">Performance P870</a><span style="color:#000000">和</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.sifive.com%2Fcores%2Fintelligence-x390" target="_blank">SiFive Intelligence X390</a><span style="color:#000000">。</span>」</span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000">同時，對四大產品系列的承諾也保持不變：<span style="background-color:#ffffff">即 Essential、Intelligence、Performance 和 Automotive 解決方案。</span>Patrick 認為，<span style="background-color:#ffffff">「</span></span><span style="background-color:#ffffff; color:#212529">SiFive 的增長從未如此強勁，我們的機遇也從未如此美好，而且我從未如此自信，SiFive 將通過 RISC-V 以我們尚未開始想象的方式徹底改變計算。</span><span style="color:#000000"><span style="background-color:#ffffff">」</span></span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000"><span style="background-color:#ffffff">但大眾對此貌似並不買賬，<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnews.ycombinator.com%2Fitem%3Fid%3D38066588%26ref%3Dupstract.com" target="_blank">Hacker News</a> 上有人嘲諷道：</span></span></p><blockquote><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000">「撇開這篇帖子對被解僱員工的麻木不仁不談（這已經夠糟糕了），它實際上並沒有告訴現有/潛在客户，SiFive 的業務和產品發生了什麼變化。顯然是有一些變化發生了，但其並未提供任何實質性的線索。完全適得其反。不過，一切都好，因為 SiFive 將以我們尚未開始想象的方式徹底改變計算！」</span></p></blockquote><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000"><span style="background-color:#ffffff">更多詳情可<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.sifive.com%2Fblog%2Fthe-road-ahead--" target="_blank">查看官方博客</a>。</span></span></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 31 Oct 2023 04:00:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264245/sifive-the-road-ahead</guid>
            <link>https://www.oschina.net/news/264245/sifive-the-road-ahead</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[小米免費可商用字體 MiSans L3 發佈]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">隨着小米澎湃 OS（Xiaomi HyperOS）的發佈，其設計團隊也對原先提供的可免費商用字體 MiSans&nbsp;進行了更新。本次更新帶來了大量生僻字支持，並符合最新 L3 級別&nbsp;GB18030-2022 國標。</span></p><p><span style="color:#000000">根據介紹，GB18030-2022 強制規範三個實現級別，於 2023 年 8 月 1 日起開始執行。實現級別 1 共 27,584 個漢字；實現級別 2 包含實現級別 1，此外，實現級別 2 還支持《通用規範漢字表》中的沒有包含在實現級別 1 之內的編碼漢字，共計 27,780 個漢字；實現級別 3 包含實現級別 2，此外，實現級別 3 還支持新標準件規定的全部漢字及表 3 中的康熙部首，總計 87,887 個漢字，用於政務服務和公共服務的產品應滿足實現級別 3 的要求。</span></p><p><span style="color:#000000">MiSans 包含級別 1+級別 2，MiSans L3 為級別 3 字庫（該字庫不包含級別 1 和級別 2）。目前，小米提供的多種字體中只有 MiSans L3 滿足新國標要求並增加了大量生僻字支持。</span></p><p><span style="color:#000000"><img height="1081" src="https://oscimg.oschina.net/oscnet/up-9d9e4a6db81c509dd3ee1d3fcdcda093c61.png" width="500" referrerpolicy="no-referrer"></span></p><p><strong><span style="color:#000000">下載地址：</span></strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhyperos.mi.com%2Ffont%2Fdownload" target="_blank">https://hyperos.mi.com/font/download</a></p><p><span style="color:#000000">附字體許可協議：</span></p><blockquote><p><span style="color:#000000">本《MiSans 字體知識產權許可協議》 (以下簡稱「協議」) 是您與小米科技有限責任公司 (以下簡稱「小米」或「許可方」) 之間有關安裝、使用 MiSans 字體 (以下簡稱「MiSans」或「MiSans 字體」) 的法律協議。您在使用 MiSans 的所有或任何部分前，應接受本協議中規定的所有條款和條件安裝、使用 MiSans 的行為表示您同意接受本協議所有條款的約束。否則，請不要安裝或使用 MiSans，並應立即銷燬和刪除所有 MiSans 字體包。</span></p><p><span style="color:#000000">根據本協議的條款和條件，許可方在此授予您一份不可轉讓的、非獨佔的、免版税的、可撤銷的、全球性的版權許可，使您依照本協議約定使用 MiSans 字體，前提是符合下列條件：</span></p><ol><li><span style="color:#000000">您應在軟件中特別註明使用了 MiSans 字體。</span></li><li><span style="color:#000000">您不得對 MiSans 字體或其任何單獨組件進行改編或二次開發。</span></li><li><span style="color:#000000">您不得單獨將 MiSans 字體或其組件對外租賃、再許可、給予、出借或進一步分發字體軟件或其任何副本以及重新分發或售賣。此限制不適用於您使用 MiSans 字體創作的任何其他作品。如您使用 MiSans 字體創作宣傳素材、logo、應用 App 等，您有權分發或出售該作品。</span></li></ol></blockquote></div>
                                    ]]>
            </description>
            <pubDate>Tue, 31 Oct 2023 03:12:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264234</guid>
            <link>https://www.oschina.net/news/264234</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[蘋果發佈 M3 系列芯片，採用 3nm 工藝、支持「動態緩存」技術]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>蘋果今天在「來勢迅猛」發佈會上正式官宣 M3、M3 Pro、M3 Max 芯片，是首款採用 3 納米工藝技術的 PC 芯片。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-71f73fe69b327c0080613e563857425d4b4.png" referrerpolicy="no-referrer"></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-a5ffd09ef952faf193b698712952791bef6.png" referrerpolicy="no-referrer"></p><p>蘋果介紹稱，M3 系列芯片搭載的新一代圖形處理器實現了 Apple 芯片史上最大幅的圖形處理器架構飛躍。這款圖形處理器不僅速度更快、能效更高，還引入一項全新技術 —— <strong>動態緩存</strong>，同時帶來首次登陸 Mac 的硬件加速光線追蹤和網格着色等全新渲染功能。渲染速度與 M1 系列芯片相比最快可達 2.5 倍。中央處理器搭載的高性能核心和高能效核心比 M1 中的相應核心分別快 30% 和 50%，神經網絡引擎也比 M1 系列芯片上的快 60%。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-dc04539ba6a94757f1c3fab246b75cd579a.png" referrerpolicy="no-referrer"></p><blockquote><p>M3 配備 8 核 CPU，10 核 GPU，24GB 統一內存，速度最高比 M2 提升 20%；</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-623eac3535af9db850bfb2d64ea6ab5b3dd.png" referrerpolicy="no-referrer"></p><p>M3 Pro 配備 12 核 CPU，18 核 GPU，36GB 統一內存，速度最高比 M2 Pro 提升 10%；</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-28da4c8dc357151c24fb01ea6b31a70e3e5.png" referrerpolicy="no-referrer"></p><p>M3 Max 配備 16 核 CPU，40 核 GPU，128GB 統一內存，速度最高比 M2 Max 提升 20%。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-25db54ce704b69c46fa5dc54117b8d2ca78.png" referrerpolicy="no-referrer"></p></blockquote><p>據介紹，M3 系列芯片中的新一代圖形處理器實現了 Apple 芯片史上最大幅的圖形處理器架構飛躍。不同於傳統圖形處理器，它具備動態緩存功能，因而可對硬件中本地內存的使用進行實時分配。在動態緩存功能的加持下，每項任務對內存的消耗精準符合所需。</p><p>此項業界首創技術對開發者透明，為打造全新圖形處理器架構提供了基石。它大幅提高了圖形處理器的平均利用率，進而給要求更苛刻的專業級 App 及遊戲的表現帶來顯著提升。</p><p>在 M3 系列芯片的支持下，硬件加速光線追蹤功能首度登陸 Mac。光線追蹤技術能夠模擬光線在場景中的表現，從而幫助 App 創造出栩栩如生、逼真的畫面。通過這一功能和全新圖形處理器架構的加成，專業級 App 的運行速度最高可達到 M1 系列芯片的 2.5 倍。</p><p>此外，全新圖形處理器還給 Mac 帶來硬件加速網格着色功能，實現圖形處理能力和能效的雙重提升，更可支持遊戲和對圖形處理要求高的 App 呈現視覺效果更復雜的場景。官方稱，M3 圖形處理器在功耗減半的情況下，即可達到與 M1 相當的性能，而在峯值功耗下更可實現高達 65% 的性能提升。</p><p>M3 家族中的所有芯片均搭載 Apple 芯片標誌性的統一內存架構。這帶來了高帶寬、低延遲，以及無出其右的高能效。此外，M3 芯片支持的內存容量最高達 128GB，這使過去無法在筆記本電腦上處理的工作流成為可能，例如 AI 開發者現可運行包含數十億個參數的規模更大的 Transformer 模型。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-4b873d2a11a318754f6315c42b0e6c81f6f.png" referrerpolicy="no-referrer"></p><p>M3、M3 Pro 和 M3 Max 芯片還引入增強型神經網絡引擎，用於加速強大的機器學習（ML）模型。與 M1 系列芯片相比，新的神經網絡引擎帶來最高達 60% 的速度提升，在進一步加速 AI / ML 工作流的同時，還可將數據保留在設備上，以保護用户隱私。</p><p>此外，M3、M3 Pro 和 M3 Max 還支持多種編解碼器，例如 H.264、HEVC、ProRes 和 ProRes RAW 以及 AV1。</p><hr><p>除了 M3 系列芯片，蘋果還公佈了新款 MacBook Pro、iMac。</p><ul><li><strong>MacBook Pro：芯片升級，全新黑色亮相</strong></li></ul><p>作為首條搭載 M3 系列芯片的產品線，全新的 14 英寸和 16 英寸 MacBook Pro 在外形方面並沒有任何變化，依然是我們熟悉的「劉海屏」，傳聞中的靈動島並沒有到來。</p><p>不過顏色方面新增了「深空黑色」。深空黑色版 MacBook Pro 不僅有着顏色更深的黑色鋁金屬外殼，外殼還採用了更加先進的化學工藝，外殼表面的陽極氧化層能夠有效減少指紋的產生。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-f4507207761ea7bc0dffbdc2631b18d3bb9.png" referrerpolicy="no-referrer"></p><p>需要注意的是，<strong>深空黑色版 MacBook Pro 僅在搭載 M3 Pro 和 M3 Max 的型號中提供，如果購買 M3 芯片的機型，依然只能選到深空灰色的版本</strong>。</p><p>價格方面，14 英寸版本中 M3 芯片機型起售價格 12999 元起、M3 Pro 芯片機型起售價格 16999 元起、M3 Max 芯片機型起售價格 26999 元起；16 英寸版本中 M3 Pro 芯片機型起售價格 19999 元起，M3 Max 芯片機型起售價格 27999 元起。</p><p><img src="https://static.oschina.net/uploads/space/2023/1031/115309_of9w_2720166.png" referrerpolicy="no-referrer"></p><blockquote><p><em><strong>相關閲讀：<a href="https://www.oschina.net/news/264253" target="news">新款 MacBook Pro「減配」：內存帶寬縮水、14 寸 M3 入門款僅 2 個 USB-C 接口</a></strong></em></p></blockquote><ul><li><strong>iMac：採用 M3 芯片，時隔兩年終更新</strong></li></ul><p>時隔兩年半，24 英寸的 iMac 芯片由 M1 升級最新的 M3 芯片，其芯片運算性能相較上一代 iMac M1 提升了一倍，並且最高可選配 24 GB 統一內存。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-98a671e3f39f136b9795179314aaeb3d2b7.png" referrerpolicy="no-referrer"></p><p>本代 iMac 四個端口的版本依然配有藍、綠、粉、銀、黃、橙和紫七種顏色可選，兩個端口的版本僅有藍、綠、粉、銀可選。</p><p>售價方面，iMac 兩個端口 (2 個雷靂 / USB 4) 的版本起步價為 10999 元、四個端口 (2 個雷靂 / USB 4 + 2 個 USB 3) 的版本起步價為 12499，相比上代均提高了 1000 元。11 月 1 日上午 9 點接受訂購。11 月 7 日發售。</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 31 Oct 2023 03:03:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264233/apple-m3-silicon</guid>
            <link>https://www.oschina.net/news/264233/apple-m3-silicon</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[【直播預告】關於開源創業的 15 件小事]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>只要軟件開源了，就會有人用？</p><p>開源軟件有漏洞，跟作者沒關係？</p><p>開源軟件協議應當選擇最寬鬆的？</p><p style="text-align:left">應該努力地將軟件捐獻給基金會？</p><p>開源後，會有很多人來完善項目？</p><p>開源不是為了錢？</p><p>開源軟件靠服務和捐助就可以賺錢？</p><p><strong>以上七個問題，禪道創始人王春生的回答都是「 NO 」。</strong>他用自己的親身經歷告訴大家，很多我們想當然的事情，其實並非如此。</p><p><span style="color:#e74c3c"><strong>11 月 8 日 19:00，OSCHINA 直播——【開源漫談】第 5 期</strong></span>，邀請了三位大咖，請他們來聊一聊開源創業遇到的一些難題。他們分別是：</p><ul><li><strong>高春輝</strong>，中國第一個人站長，卓越網、手機之家、ECSHOP 軟件、《愛壁紙 HD》應用創始人，全球領先級 ip 庫 http://ipip.net 創始人</li><li><strong>王春生</strong>，禪道軟件公司的創始人，二十年的 IT 老兵，14 年的創業者</li><li><strong>朱峯</strong>，津津樂道播客網絡創始人、主播。連續創業者，商業經驗豐富；有多年社區運營經驗；資深開發者</li></ul><p>這次直播，不講大道理，就講講開源創業實務，話題不設限，怎麼選開源協議，要不要把開源項目捐給基金會，出現了負面輿論怎麼「公關」，公司沒錢了去哪裏找錢，怎麼給員工福利，等等，都拿出來講一講。</p><p><strong>直播主題：</strong>關於開源創業的 15 件小事</p><p style="text-align:left"><strong>直播時間：</strong>11 月 8 日（週三） 19:00-20:30</p><p style="text-align:left"><strong>直播平台：</strong>「OSC 開源社區」 視頻號</p><p><strong>主辦方：</strong>開源中國</p><p><span style="background-color:#ffffff; color:#333333">微信掃碼預約直播，歡迎加入 OSC 直播交流羣，一起嘮嗑～</span></p><p><img height="2542" src="https://oscimg.oschina.net/oscnet/up-03ca295afdbb836119d91252210b3965085.png" width="750" referrerpolicy="no-referrer"></p><p><strong>直播福利</strong></p><ul><li><p style="margin-left:0; margin-right:0">互動抽獎：在直播評論區提問，被直播嘉賓回覆的用户可獲 OSC T 恤 1 件，名額不限。</p></li><li><p style="margin-left:0; margin-right:0">福袋抽獎：直播中將有多輪抽獎，參與就有機會獲得 OSC T 恤、筆記本、馬克杯 、前沿技術書籍等。</p></li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">我們直播間見吧～</p><div><hr></div><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>另外，本次直播得到了諸多社區或組織的大力支持，在此特別表示感謝：</strong></p><p style="margin-left:.0001pt; margin-right:0; text-align:left"><span><span><span><span><span><span><span style="color:#000000"><span><span><strong>渠成開源社區</strong></span></span></span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:left"><span><span><span><span><span><span><span style="color:#000000"><span><span>渠成開源社區由禪道項目管理軟件團隊發起，社區的經營主體為青島渠成開源計算機網絡技術研究中心，是非營利性社會服務活動的社會組織。 渠成開源社區主要面向一線開源軟件生產者、貢獻者、組織者、贊助商和用户，以解決具體實際問題為宗旨，旨在打造以開源軟件為核心紐帶的開源生態系統，真正做到讓每一個優秀的開源軟件都能實現商業化。 </span></span></span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:left"><span><span><span><span><span><span><span style="color:#000000"><span><span>官網：<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.qucheng.cc" target="_blank">www.qucheng.cc</a></span></span></span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:left"><span><span><span><span><span><span><span style="color:#000000"><span><span><strong>禪道</strong></span></span></span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:left"><span><span><span><span><span><span><span style="color:#000000"><span><span>禪道是一款開源的全生命週期項目管理軟件，基於敏捷和 CMMI 管理理念進行設計，集產品管理、項目管理、質量管理、文檔管理、組織管理和事務管理於一體，完整地覆蓋了項目管理的核心流程。 禪道自 2009 年發佈至今，累計為國內數十萬計的公司或團隊提供了專業的項目管理工具。</span></span></span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:left"><span><span><span><span><span><span><span style="color:#000000"><span><span>官網：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.zentao.net%2F" target="_blank">https://www.zentao.net/</a></span></span></span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:left"><span><span><span><span><span><span><span style="color:#000000"><span><span><strong>津津樂道博客</strong></span></span></span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:left"><span><span><span><span><span><span><span style="color:#000000"><span><span>津津樂道播客成立於 2016 年 2 月，是天津猿行天下科技有限公司旗下的播客品牌。津津樂道播客主創團隊由多位行業資深人士組成，本着分享體驗、傳播經驗的原則，團隊在 IT、科技、旅遊、教育等領域，製作了多檔播客節目，並獲得市場好評。 </span></span></span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:left"><span><span><span><span><span><span><span style="color:#000000"><span><span>官網：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdao.fm%2F" target="_blank">https://dao.fm/</a></span></span></span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:left"><strong><span><span><span><span><span><span><span style="color:#000000"><span><span>IPIP.net &nbsp;</span></span></span></span></span></span></span></span></span></strong></p><p style="margin-left:.0001pt; margin-right:0; text-align:left"><span><span><span><span><span><span><span style="color:#000000"><span><span>IPIP 專注 IP 地理位置以及 IP 畫像數據的研究、整理與發行，我們的主力產品 IP 地理位置數據庫主要基於 BGP/ASN 數據以及遍佈全球的網絡監測點進行城市級 IP 地域數據標註，準確度遠高於國內國外同類產品。 &nbsp;</span></span></span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:left"><span><span><span><span><span><span><span style="color:#000000"><span><span>官網：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.ipip.net%2F" target="_blank">https://www.ipip.net/</a></span></span></span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:left"><strong><span><span><span><span><span><span><span style="color:#000000"><span><span>GreatSQL 社區 &nbsp;</span></span></span></span></span></span></span></span></span></strong></p><p style="margin-left:.0001pt; margin-right:0; text-align:left"><span><span><span><span><span><span><span style="color:#000000"><span><span>GreatSQL 社區成立於 2021 年，由萬裏數據庫發起，致力於通過開放的社區合作，構建國內自主開源數據庫版本及開源數據庫技術，推動中國開源數據庫及應用生態繁榮發展。GreatSQL 是適用於金融級應用的國內自主開源數據庫，具備高性能、高可靠、高易用性、高安全等多個核心特性，可以作為 MySQL 或 Percona Server 的可選替換，用於線上生產環境，且完全免費併兼容 MySQL 或 Percona Server。 </span></span></span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:left"><span><span><span><span><span><span><span style="color:#000000"><span><span>官網鏈接：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgreatsql.cn%2F" target="_blank">https://greatsql.cn/ </a></span></span></span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:left"><span><span><span><span><span><span><span style="color:#000000"><span><span>Gitee 倉庫：<a href="https://gitee.com/GreatSQL">https://gitee.com/GreatSQL</a></span></span></span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:left"><span><span><span><span><span><span><span style="color:#000000"><span><span><strong>愛可生開源社區</strong></span></span></span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:left"><span><span><span><span><span><span><span style="color:#000000"><span><span>愛可生開源社區，一個有深度的 MySQL 開源社區。社區成立於 2017 年，以開源高質量的運維工具、日常分享技術乾貨內容、數據庫技術佈道為己任；目前開源的產品有：SQL 審核工具 SQLE、分佈式中間件 DBLE 和數據傳輸組件 DTLE。在這裏，你將收穫：高質量的技術內容，企業級數據庫工具及服務，豐富的社區活動。 </span></span></span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:left"><span><span><span><span><span><span><span style="color:#000000"><span><span>鏈接： <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopensource.actionsky.com%2F" target="_blank">https://opensource.actionsky.com/</a></span></span></span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:left"><span><span><span><span><span><span><span style="color:#000000"><span><span><strong>PG 中文社區</strong></span></span></span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:left"><span><span><span><span><span><span><span style="color:#000000"><span><span>PostgreSQL 中文社區是一個非盈利的民間組織，目前成員都以志願者身份加入，成立的目的在於構建 PG 數據庫技術生態圈子 (內核、用户培訓機構、廠商、服務商、軟件開發商、高校形成 「業務與利益雙向驅動」 的良性發展生態圈)；幫助企業解決人才培養和企業商用數據庫成本問題，社區會在各運營平台發佈 PostgreSQL 最新信息和 PostgreSQL 相關技術文章，推動 PG 技術在中國的發展。 </span></span></span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:left"><span><span><span><span><span><span><span style="color:#000000"><span><span>官網鏈接：<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.postgres.cn%2Findex.php%2Fv2%2Fhome" target="_blank">http://www.postgres.cn/index.php/v2/home</a></span></span></span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:left"><span><span><span><span><span><span><span style="color:#000000"><span><span><strong>凹語言</strong></span></span></span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:left"><span><span><span><span><span><span><span style="color:#000000"><span><span>凹語言是一個面向 WebAssembly 設計的靜態類型編譯型語言，目標是簡化 WASM 應用的開發。目前已經發布 MVP 版本，並提供了在線的純瀏覽器 Playground 和貪吃蛇案例實現。 </span></span></span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:left"><span><span><span><span><span><span><span style="color:#000000"><span><span>主頁： <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwa-lang.org" target="_blank">https://wa-lang.org</a></span></span></span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:left"><strong><span><span><span><span><span><span><span style="color:#000000"><span><span>KCL 社區 &nbsp;</span></span></span></span></span></span></span></span></span></strong></p><p style="margin-left:.0001pt; margin-right:0; text-align:left"><span><span><span><span><span><span><span style="color:#000000"><span><span>KCL&nbsp;是一個開源的基於約束的記錄及函數語言，作為沙盒項目託管在 CNCF 基金會。KCL 通過成熟的編程語言技術和實踐來改進對大量繁雜配置比如雲原生 Kubernetes 配置場景的編寫，致力於構建圍繞配置的更好的模塊化、擴展性和穩定性，更簡單的邏輯編寫，以及更簡單的自動化和生態工具集成。 &nbsp;</span></span></span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:left"><span><span><span><span><span><span><span style="color:#000000"><span><span>官網鏈接：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fkcl-lang.io+GitHub" target="_blank">https://kcl-lang.io GitHub </a></span></span></span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:left"><span><span><span><span><span><span><span style="color:#000000"><span><span>倉庫：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkcl-lang" target="_blank">https://github.com/kcl-lang</a></span></span></span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:left"><span><span><span><span><span><span><span style="color:#000000"><span><span><strong>AllData</strong></span></span></span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:left"><span><span><span><span><span><span><span style="color:#000000"><span><span>AllData 大數據產品是可定義數據中台，以數據平台為底座，以數據中台為橋樑，以機器學習平台，GPT 平台為框架，提供全鏈路數字化解決方案。 </span></span></span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:left"><span><span><span><span><span><span><span style="color:#000000"><span><span>項目地址：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Falldatacenter%2Falldata" target="_blank">https://github.com/alldatacenter/alldata </a></span></span></span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:left"><span><span><span><span><span><span><span style="color:#000000"><span><span>社區官網：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Falldata.readthedocs.io%2Fzh%2Fmaster%2F" target="_blank">https://alldata.readthedocs.io/zh/master/</a></span></span></span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:left"><strong><span><span><span><span><span><span><span style="color:#000000"><span><span>得物技術</span></span></span></span></span></span></span></span></span></strong></p><p style="margin-left:.0001pt; margin-right:0; text-align:left"><span><span><span><span><span><span><span style="color:#000000"><span><span>得物技術一直以"上海最好的技術團隊"為目標，現已建立上海、北京、杭州三地研發協同與管理機制，實現研發過程數據化、自動化；覆蓋供應鏈、業務支撐、算法、前端等領域，是得物業務背後強有力的技術力量支撐。 &nbsp;&nbsp;</span></span></span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:left"><span><span><span><span><span><span><span style="color:#000000"><span><span>官網鏈接： <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftech.dewu.com%2F" target="_blank">https://tech.dewu.com/</a></span></span></span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:left"><strong><span><span><span><span><span><span><span style="color:#000000"><span><span>重慶軟件園 &nbsp;</span></span></span></span></span></span></span></span></span></strong></p><p style="margin-left:.0001pt; margin-right:0; text-align:left"><span><span><span><span><span><span><span style="color:#000000"><span><span>重慶軟件園位於重慶經開區，佔地 110 萬平方米，佈局四大組團，是重慶市首批軟件產業園 (綜合型)、A 區入選重慶市軟件和信息服務業「滿天星」示範樓宇 (首批)，於 2019 年 9 月 16 日正式開園，堅持「做生態=做產業，做人才=做產業，做服務=做產業」的發展理念，建設集科技、人文、生態、智慧為一體的領軍型軟件園區。聚焦「3+2」產業佈局，實現新一代信息技術產業集羣發展。</span></span></span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:left"><span><span><span><span><span><span><span style="color:#000000"><span><span>園區聚集軟件類企業近 2000 家，軟件人才近 3 萬人，已登記 4000 多項軟件著作權，研發投入超 50 億，40 餘項專利將獲得科技獎，營收上億企業近 20 家。立足南岸區、重慶經開區優質產業資源，聚焦軟件信息服務業、智能製造、綠色環保 、汽車軟件汽車電子、大健康等產業，推動軟件產業高質量發展，重慶軟件園將全面貫徹落實「滿天星」計劃，力爭到 2026 年成功建成中國軟件名園。 &nbsp;</span></span></span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:left"><span><span><span><span><span><span><span style="color:#000000"><span><span>園區官網：<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.chongqingpark.com%2F" target="_blank">http://www.chongqingpark.com/</a></span></span></span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:left"><strong><span><span><span><span><span><span><span style="color:#000000"><span><span>東方瑞通 &nbsp;</span></span></span></span></span></span></span></span></span></strong></p><p style="margin-left:.0001pt; margin-right:0; text-align:left"><span><span><span><span><span><span><span style="color:#000000"><span><span>東方瑞通成立於 1998 年，是國內較早的 IT 高級技術培訓企業之一，擁有華為、紅帽、微軟、PMI、VMware、Oracle 等 33 餘家國際廠商授權資質，以培養 it 人才為主，目前覆蓋領域：虛擬化、操作系統、網絡、安全、數據庫、IT 管理、軟件開發等細分領域，提供線上，線下交流培訓課程與活動。 </span></span></span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:left"><span><span><span><span><span><span><span style="color:#000000"><span><span>官網鏈接：<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.easthome.com" target="_blank">www.easthome.com</a></span></span></span></span></span></span></span></span></span></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 31 Oct 2023 02:44:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/3859945/blog/10139755</guid>
            <link>https://my.oschina.net/u/3859945/blog/10139755</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[企業部署 Elasticsearch 因漏洞導致數據泄露，被罰款 5 萬]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#3e3e3e; margin-left:0; margin-right:0; text-align:justify">北京市網信辦依據《中華人民共和國數據安全法》對屬地三家企業<strong>涉嫌存在網絡數據安全違法行為</strong>進行立案調查並作出行政處罰。</p><p style="color:#3e3e3e; margin-left:0; margin-right:0; text-align:justify">據稱，三家企業違反《中華人民共和國數據安全法》第二十七條規定，<strong>未履行數據安全保護義務，<span style="color:#e67e22">部署的 ElasticSearch 數據庫存在未授權訪問漏洞，造成部分數據泄露</span></strong>。</p><p style="color:#3e3e3e; margin-left:0; margin-right:0; text-align:justify"><img src="https://static.oschina.net/uploads/space/2023/1031/104106_Il49_2720166.png" referrerpolicy="no-referrer"></p><p>北京市網信辦依據《中華人民共和國數據安全法》第四十五條第一款規定，對三家企業分別作出責令改正，給予警告，<strong>並處 5 萬元罰款的行政處罰，對直接主管人員和其他責任人員處以 1 萬元罰款處罰</strong>。</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 31 Oct 2023 02:36:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264219</guid>
            <link>https://www.oschina.net/news/264219</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Ollama —— 在本地啓動並運行大語言模型]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">Ollama 是一款命令行工具，可在 macOS 和 Linux 上本地運行 Llama 2、Code Llama 和其他模型。目前適用於 macOS 和 Linux，並計劃支持 Windows。</span></p><p><span style="color:#000000">Ollama 目前支持近二十多個語言模型系列，每個模型系列都有許多可用的"tags"。Tags&nbsp;是模型的變體，這些模型使用不同的微調方法以不同的規模進行訓練，並以不同的級別進行量化，以便在本地良好運行。量化級別越高，模型越精確，但運行速度越慢，所需的內存也越大。</span></p><p><span style="background-color:#ffffff; color:#1f2328">以下是一些可以下載的開源模型示例：</span></p><table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:0px; box-sizing:border-box; color:#1f2328; display:block; font-family:-apple-system,BlinkMacSystemFont,&quot;Segoe UI&quot;,&quot;Noto Sans&quot;,Helvetica,Arial,sans-serif,&quot;Apple Color Emoji&quot;,&quot;Segoe UI Emoji&quot;; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; margin-bottom:16px; margin-top:0px; max-width:100%; orphans:2; overflow:auto; text-align:start; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:max-content; word-spacing:0px"><thead><tr><th>Model</th><th>Parameters</th><th>Size</th><th>Download</th></tr></thead><tbody><tr><td style="border-style:solid; border-width:1px">Mistral</td><td style="border-style:solid; border-width:1px">7B</td><td style="border-style:solid; border-width:1px">4.1GB</td><td style="border-style:solid; border-width:1px"><code>ollama run mistral</code></td></tr><tr><td style="border-style:solid; border-width:1px">Llama 2</td><td style="border-style:solid; border-width:1px">7B</td><td style="border-style:solid; border-width:1px">3.8GB</td><td style="border-style:solid; border-width:1px"><code>ollama run llama2</code></td></tr><tr><td style="border-style:solid; border-width:1px">Code Llama</td><td style="border-style:solid; border-width:1px">7B</td><td style="border-style:solid; border-width:1px">3.8GB</td><td style="border-style:solid; border-width:1px"><code>ollama run codellama</code></td></tr><tr><td style="border-style:solid; border-width:1px">Llama 2 Uncensored</td><td style="border-style:solid; border-width:1px">7B</td><td style="border-style:solid; border-width:1px">3.8GB</td><td style="border-style:solid; border-width:1px"><code>ollama run llama2-uncensored</code></td></tr><tr><td style="border-style:solid; border-width:1px">Llama 2 13B</td><td style="border-style:solid; border-width:1px">13B</td><td style="border-style:solid; border-width:1px">7.3GB</td><td style="border-style:solid; border-width:1px"><code>ollama run llama2:13b</code></td></tr><tr><td style="border-style:solid; border-width:1px">Llama 2 70B</td><td style="border-style:solid; border-width:1px">70B</td><td style="border-style:solid; border-width:1px">39GB</td><td style="border-style:solid; border-width:1px"><code>ollama run llama2:70b</code></td></tr><tr><td style="border-style:solid; border-width:1px">Orca Mini</td><td style="border-style:solid; border-width:1px">3B</td><td style="border-style:solid; border-width:1px">1.9GB</td><td style="border-style:solid; border-width:1px"><code>ollama run orca-mini</code></td></tr><tr><td style="border-style:solid; border-width:1px">Vicuna</td><td style="border-style:solid; border-width:1px">7B</td><td style="border-style:solid; border-width:1px">3.8GB</td><td style="border-style:solid; border-width:1px"><code>ollama run vicuna</code></td></tr></tbody></table><blockquote><p><span style="color:#000000">注意：需要至少有 8 GB 的 RAM 來運行 3B 模型，16 GB 的 RAM 來運行 7B 模型，32 GB 的 RAM 來運行 13B 模型。</span></p></blockquote></div>
                                                                ]]>
            </description>
            <pubDate>Tue, 31 Oct 2023 02:28:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/p/ollama</guid>
            <link>https://www.oschina.net/p/ollama</link>
        </item>
        <item>
            <title>
                <![CDATA[Gitee 推薦 | 工作流引擎 FlowLong]]>
            </title>
            <description>
                <![CDATA[<img src="https://foruda.gitee.com/images/1693470775312764207/27440c57_12260.png" alt="flowlong" width="100px" height="113px" referrerpolicy="no-referrer"><h1><a id="user-content-項目介紹" class="anchor" href="https://gitee.com/aizuda/flowlong#%E9%A1%B9%E7%9B%AE%E4%BB%8B%E7%BB%8D"></a>項目介紹</h1><p>FlowLong🐉飛龍工作流</p><ul><li>項目説明  <code>flowlong</code> 中文名 <code>飛龍</code> 在天美好願景！</li></ul><blockquote><p>⭕本項目採用 <code>AGPL</code> 開源協議（抄襲牟利索賠 100 萬），</p></blockquote><blockquote><p>使用必須遵守國家法律法規，⛔不允許非法項目使用，後果自負❗</p></blockquote><p><a href="https://gitee.com/aizuda/flowlong/issues/I7XGP5">使用源碼登記入口</a></p><p><a href="https://flowlong.gitee.io/" rel="nofollow">打開官方開發文檔</a></p><p><a href="https://flowlong.gitee.io/flowlong-designer" rel="nofollow">點擊設計器在線演示</a></p><p><a href="https://gitee.com/flowlong/flowlong-designer">點擊設計器源碼下載</a></p><p>英文字母 <code>flw</code> 為 <code>flowlong workflow</code> 飛龍工作流的縮寫</p><p>🚩中國特色流程操作概念</p><table><thead><tr><th>支持功能</th><th>功能描述</th><th>完成程度</th></tr></thead><tbody><tr><td>順序會籤</td><td>指同一個審批節點設置多個人，如 A、B、C 三人，三人按順序依次收到待辦，即 A 先審批，A 提交後 B 才能審批，需全部同意之後，審批才可到下一審批節點。</td><td>✅</td></tr><tr><td>並行會籤</td><td>指同一個審批節點設置多個人，如 A、B、C 三人，三人會同時收到待辦任務，需全部同意之後，審批才可到下一審批節點。</td><td>✅</td></tr><tr><td>或籤</td><td>一個流程審批節點裏有多個處理人，任意一個人處理後就能進入下一個節點</td><td>✅</td></tr><tr><td>抄送</td><td>將審批結果通知給抄送列表對應的人</td><td>✅</td></tr><tr><td>駁回</td><td>將審批重置發送給某節點，重新審批。駁回也叫退回，也可以分退回申請人、退回上一步、任意退回等</td><td>✅</td></tr><tr><td>分配</td><td>允許用户自行決定任務轉辦、委派、主辦，及其它</td><td>✅</td></tr><tr><td>轉辦</td><td>A 轉給其 B 審批，B 審批後，進入下一節點</td><td>✅</td></tr><tr><td>委派</td><td>A 轉給其 B 審批，B 審批後，轉給 A，A 審批後進入下一節點</td><td>✅</td></tr><tr><td>跳轉</td><td>可以將當前流程實例跳轉到任意辦理節點</td><td>✅</td></tr><tr><td>拿回</td><td>在當前辦理人尚未處理文件前，允許上一節點提交人員執行拿回</td><td>✅</td></tr><tr><td>撤銷</td><td>流程發起者可以對流程進行撤銷處理</td><td>✅</td></tr><tr><td>加簽</td><td>允許當前辦理人根據需要自行增加當前辦理節點的辦理人員</td><td>✅</td></tr><tr><td>減籤</td><td>在當前辦理人操作之前減少辦理人</td><td>✅</td></tr><tr><td>認領</td><td>公共任務認領</td><td>✅</td></tr><tr><td>已閲</td><td>任務是否查看狀態顯示</td><td>✅</td></tr><tr><td>催辦</td><td>通知當前活動任務處理人辦理任務</td><td>✅</td></tr><tr><td>溝通</td><td>與當前活動任務處理人溝通</td><td>✅</td></tr><tr><td>終止</td><td>在任意節點終止流程實例</td><td>✅</td></tr></tbody></table><h1><a id="user-content-貢獻力量" class="anchor" href="https://gitee.com/aizuda/flowlong#%E8%B4%A1%E7%8C%AE%E5%8A%9B%E9%87%8F"></a>貢獻力量</h1><ul><li><a href="https://gitee.com/aizuda/flowlong/wikis/%E8%BF%90%E8%A1%8C%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95">運行單元測試</a></li><li>PR 請參考現在代碼規範註釋説明</li></ul><h1><a id="user-content-使用文檔" class="anchor" href="https://gitee.com/aizuda/flowlong#%E4%BD%BF%E7%94%A8%E6%96%87%E6%A1%A3"></a>使用文檔</h1><ul><li>設計器源碼 <a href="https://gitee.com/flowlong/flowlong-designer">https://gitee.com/flowlong/flowlong-designer</a></li></ul><img src="https://foruda.gitee.com/images/1683680723972384655/f957e75d_12260.png" alt="flowlong" width="500px" height="262px" referrerpolicy="no-referrer"><h1><a id="user-content-其它説明" class="anchor" href="https://gitee.com/aizuda/flowlong#%E5%85%B6%E5%AE%83%E8%AF%B4%E6%98%8E"></a>其它説明</h1><ul><li>基於 <a href="https://gitee.com/link?target=https%3A%2F%2Fbaomidou.com">MybatisPlus</a> 為 <code>ORM</code> 層實現</li><li>後端設計參考了 <a href="https://gitee.com/yuqs/snakerflow">snakerflow</a> 開源工作流實體劃分</li><li>參考了包括 flowable camunda 等主流工作流的設計思想</li></ul>]]>
            </description>
            <pubDate>Tue, 31 Oct 2023 02:23:00 GMT</pubDate>
            <guid isPermaLink="false">https://gitee.com/aizuda/flowlong</guid>
            <link>https://gitee.com/aizuda/flowlong</link>
        </item>
        <item>
            <title>
                <![CDATA[每日一博 | 淺析 Redis 大 Key]]>
            </title>
            <description>
                <![CDATA[<div class="content"><span id="OSC_h1_1"></span><h1>一、背景</h1><p><span style="color:#393c5a">在京東到家購物車系統中，用户基於門店能夠對商品進行加車操作。用户與門店商品使用 Redis 的 Hash 類型存儲，如下代碼塊所示。不知細心的你有沒有發現，如果單門店加車商品過多，或者門店過多時，此 Key 就會越來越大，從而影響線上業務。</span></p><pre><code>userPin:{
      storeId:{門店下加車的所有商品基本信息},
      storeId:{門店下加車的所有商品基本信息},
      ......
}

</code></pre><span id="OSC_h1_2"></span><h1>二、BigKey 的界定和如何產生</h1><span id="OSC_h3_3"></span><h3>2.1、BigKey 的界定</h3><p><span style="color:#393c5a">BigKey 稱為大 Key，通常以 Key 對應 Value 的存儲大小，或者 Key 對應 Value 的數量來進行綜合判斷。對於大 Key 也沒有嚴格的定義區分，針對 String 與非 String 結構，給出如下定義：</span></p><ul><li><span style="color:#333333">String：String 類型的 Key 對應的 Value 超過 10KB</span></li><li><span style="color:#333333">非 String 結構（Hash</span><span style="color:#777777">，</span>Set<span style="color:#777777">，</span>ZSet<span style="color:#777777">，</span>List）：Value 的數量達到 10000 個，或者 Vaule 的總大小為 100KB</li><li><span style="color:#333333">集羣中 Key 的總數超過 1 億</span></li></ul><span id="OSC_h3_4"></span><h3>2.2、如何產生</h3><p><span style="color:#393c5a">1、數據結構設置不合理，例如集合中元素唯一時，應該使用 Set 替換 List；</span></p><p><span style="color:#393c5a">2、針對業務缺少預估性，沒有預見 Value 動態增長；</span></p><p><span style="color:#393c5a">3、Key 沒有設置過期時間，把緩存當成垃圾桶，一直再往裏面扔，但是從不處理。</span></p><span id="OSC_h1_5"></span><h1>三、BigKey 的危害</h1><span id="OSC_h3_6"></span><h3>3.1、數據傾斜</h3><p><span style="color:#393c5a">redis 數據傾斜分為</span><strong><span style="color:#393c5a">數據訪問傾斜</span></strong><span style="color:#393c5a">和</span><strong><span style="color:#393c5a">數據量傾斜，</span></strong><span style="color:#393c5a">會導致該 Key 所在的數據分片節點 CPU 使用率、帶寬使用率升高，從而影響該分片上所有 Key 的處理。</span></p><p><strong><span style="color:#393c5a">數據訪問傾斜：</span></strong><span style="color:#393c5a">某節點中 key 的 QPS 高於其他節點中的 Key</span></p><p><strong><span style="color:#393c5a">數據量傾斜：</span></strong><span style="color:#393c5a">某節點中 key 的大小高於其他節點中的 Key，如下圖，實例 1 中的 Key1 存儲高於其他實例。</span></p><div><img src="https://mp.toutiao.com/mp/agw/article_material/open_image/get?code=MTY3YzQ1ODcwZjZkOGYzYTc0YzljYjg4ZmVkMTZlNTEsMTY5ODcxODQzNDA3Nw==" referrerpolicy="no-referrer"></div><span id="OSC_h3_7"></span><h3>﻿3.2、網絡阻塞</h3><p><span style="color:#393c5a">Redis 服務器是一個事件驅動程序，有文件事件和時間事件，文件事件和時間事件都是主線程完成。其中文件事件就是服務器對套接字操作的抽象，客户端與服務端的通信會產生相應的文件事件，服務器通過監聽並處理這些事件來完成一系列網絡通信操作。</span></p><p><span style="color:#393c5a">Redis 基於 Reactor 模式開發了自己的網絡事件處理器，即文件事件處理器，該處理器內部使用 I/O 多路複用程序，可同時監聽多個套接字，並根據套接字執行的任務來關聯不同的事件處理器。文件事件處理器以單線程的方式運行，但是通過 I/O 多路複用程序來監聽多個套接字，既實現了高性能網絡通信模型，又保持了內部單線程設計的簡單性。文件事件處理器構成如下圖：</span></p><div><img src="https://mp.toutiao.com/mp/agw/article_material/open_image/get?code=OWJmZjdlMWNjNDIyMmJjMWYwNDU4YjI4NTM0YmQwYmIsMTY5ODcxODQzNDA3Nw==" referrerpolicy="no-referrer"></div><p>﻿﻿<span style="color:#393c5a">文件事件是對套接字操作的抽象，包括連接應答，寫入，讀取，關閉，因為一個服務器會連接多個套接字，所以文件事件可能併發出現，即使文件事件併發的出現，但是</span><strong><span style="color:#f5222d">I/O 多路複用程序會將套接字放入一個隊列，通過隊列有序的，同步的每次一個套接字的方式</span></strong>向文件事件分派器傳送套接字，當讓一個套接字產生的事件被<strong><span style="color:#f5222d">處理完畢</span></strong>後，I/O 多路複用程序才會繼續向文件事件分派器傳送下一個套接字，當有大 key 時，單次操作時間延長，導致網絡阻塞。</p><span id="OSC_h3_8"></span><h3>3.3、慢查詢</h3><p><span style="color:#393c5a">嚴重影響 QPS 、TP99 等指標，對大 Key 進行的慢操作會導致後續的命令被阻塞，從而導致一系列慢查詢。</span></p><span id="OSC_h3_9"></span><h3>3.4、CPU 壓力</h3><p><span style="color:#393c5a">當單 Key 過大時，每一次訪問此 Key 都可能會造成 Redis 阻塞，其他請求只能等待了。如果應用中設置了超時等，那麼上層就會拋出異常信息。最後刪除的時候也會造成 redis 阻塞，到時候內存中數據量過大，就會造成 CPU 負載過高。單個分片 cpu 佔用率過高，其他分片無法擁有 cpu 資源，從而被影響。此外，大 key 對持久化也有些影響。fork 操作會拷貝父進程的頁表項，如果過大，會佔用更多頁表，主線程阻塞拷貝需要一定的時間。</span></p><span id="OSC_h1_10"></span><h1>四、如何檢測 BigKey</h1><span id="OSC_h3_11"></span><h3>4.1、redis-cli --bigkeys</h3><p><span style="color:#393c5a">首先我們從運行結果出發。首先通過腳本插入一些數據到 redis 中，然後執行 redis-cli 的--bigkeys 選項</span></p><pre><code>$ redis-cli --bigkeys

# Scanning the entire keyspace to find biggest keys as well as
# average sizes per key type.  You can use -i 0.01 to sleep 0.01 sec
# per SCAN command (not usually needed).
-------- 第一部分 start -------
[00.00%] Biggest string found so far 'key-419' with 3 bytes
[05.14%] Biggest list   found so far 'mylist' with 100004 items
[35.77%] Biggest string found so far 'counter:__rand_int__' with 6 bytes
[73.91%] Biggest hash   found so far 'myobject' with 3 fields

-------- 第一部分 end -------

-------- summary -------

-------- 第二部分 start -------
Sampled 506 keys in the keyspace!
Total key length in bytes is 3452 (avg len 6.82)

Biggest string found 'counter:__rand_int__' has 6 bytes
Biggest   list found 'mylist' has 100004 items
Biggest   hash found 'myobject' has 3 fields
-------- 第二部分 end -------

-------- 第三部分 start -------
504 strings with 1403 bytes (99.60% of keys, avg size 2.78)
1 lists with 100004 items (00.20% of keys, avg size 100004.00)
0 sets with 0 members (00.00% of keys, avg size 0.00)
1 hashs with 3 fields (00.20% of keys, avg size 3.00)
0 zsets with 0 members (00.00% of keys, avg size 0.00)
-------- 第三部分 end -------

</code></pre><p><span style="color:#393c5a">以下我們分三步對 bigkeys 選項源碼原理進行解析，簡要流程如下圖：</span></p><div><img src="https://mp.toutiao.com/mp/agw/article_material/open_image/get?code=NjgyZWM5MDg1MDBlNDc0MzQwZDc5NDAwMjUxYWJiMGIsMTY5ODcxODQzNDA3Nw==" referrerpolicy="no-referrer"></div><span id="OSC_h4_12"></span><h4>﻿﻿4.1.1、第一部分是如何進行找 key 的呢？</h4><p><span style="color:#393c5a">Redis 找 bigkey 的函數是 static void findBigKeys(int memkeys, unsigned memkeys_samples)，因為--memkeys 選項和--bigkeys 選項是公用同一個函數，所以使用 memkeys 時會有額外兩個參數 memkeys、memkeys_sample，但這和--bigkeys 選項沒關係，所以不用理會。findBigKeys 具體函數框架為：</span></p><p><span style="color:#393c5a">1.申請 6 個變量用以統計 6 種數據類型的信息（每個變量記錄該數據類型的 key 的總數量、bigkey 是哪個等信息）</span></p><pre><code>typedef struct {
    char *name;//數據類型，如 string
    char *sizecmd;//查詢大小命令，如 string 會調用 STRLEN
    char *sizeunit;//單位，string 類型為 bytes，而 hash 為 field
    unsigned long long biggest;//最大 key 信息域，此數據類型最大 key 的大小，如 string 類型是多少 bytes，hash 為多少 field
    unsigned long long count;//統計信息域，此數據類型的 key 的總數
    unsigned long long totalsize;//統計信息域，此數據類型的 key 的總大小，如 string 類型是全部 string 總共多少 bytes，hash 為全部 hash 總共多少 field
    sds biggest_key;//最大 key 信息域，此數據類型最大 key 的鍵名，之所以在數據結構末尾是考慮字節對齊
} typeinfo;

    dict *types_dict = dictCreate(&amp;typeinfoDictType);
    typeinfo_add(types_dict, "string", &amp;type_string);
    typeinfo_add(types_dict, "list", &amp;type_list);
    typeinfo_add(types_dict, "set", &amp;type_set);
    typeinfo_add(types_dict, "hash", &amp;type_hash);
    typeinfo_add(types_dict, "zset", &amp;type_zset);
    typeinfo_add(types_dict, "stream", &amp;type_stream);

</code></pre><p><span style="color:#393c5a">2.調用 scan 命令迭代地獲取一批 key（注意只是 key 的名稱，類型和大小 scan 命令不返回）</span></p><pre><code>/* scan 循環掃描 */
do {
    /* 計算完成的百分比情況 */
    pct = 100 * (double)sampled/total_keys;//這裏記錄下掃描的進度

    /* 獲取一些鍵並指向鍵數組 */
    reply = sendScan(&amp;it);//這裏發送 SCAN 命令，結果保存在 reply 中
    keys  = reply-&gt;element[1];//keys 來保存這次 scan 獲取的所有鍵名，注意只是鍵名，每個鍵的數據類型是不知道的。
    ......

} while(it != 0); 

</code></pre><p><span style="color:#393c5a">3.對每個 key 獲取它的數據類型（type）和 key 的大小（size）</span></p><pre><code>/* 檢索類型，然後檢索大小*/
getKeyTypes(types_dict, keys, types);
getKeySizes(keys, types, sizes, memkeys, memkeys_samples);

</code></pre><p><span style="color:#393c5a">4.如果 key 的大小大於已記錄的最大值的 key，則更新最大 key 的信息</span></p><pre><code>/* Now update our stats */
for(i=0;i&lt;keys-&gt;elements;i++) {
    ......//前面已解析

    //如果遍歷到比記錄值更大的 key 時
    if(type-&gt;biggest&lt;sizes[i]) {
        /* Keep track of biggest key name for this type */
        if (type-&gt;biggest_key)
            sdsfree(type-&gt;biggest_key);
        //更新最大 key 的鍵名
        type-&gt;biggest_key = sdscatrepr(sdsempty(), keys-&gt;element[i]-&gt;str, keys-&gt;element[i]-&gt;len);
        if(!type-&gt;biggest_key) {
            fprintf(stderr, "Failed to allocate memory for key!\n");
            exit(1);
        }

        //每當找到一個更大的 key 時則輸出該 key 信息
        printf(
            "[%05.2f%%] Biggest %-6s found so far '%s' with %llu %s\n",
            pct, type-&gt;name, type-&gt;biggest_key, sizes[i],
            !memkeys? type-&gt;sizeunit: "bytes");

        /* Keep track of the biggest size for this type */
        //更新最大 key 的大小
        type-&gt;biggest = sizes[i];
    }

    ......//前面已解析
}

</code></pre><p><span style="color:#393c5a">5.對每個 key 更新對應數據類型的統計信息</span></p><pre><code>/* 現在更新統計數據 */
for(i=0;i&lt;keys-&gt;elements;i++) {
    typeinfo *type = types[i];
    /* 跳過在 SCAN 和 TYPE 之間消失的鍵 */
    if(!type)
        continue;

    //對每個 key 更新每種數據類型的統計信息
    type-&gt;totalsize += sizes[i];//某數據類型（如 string）的總大小增加
    type-&gt;count++;//某數據類型的 key 數量增加
    totlen += keys-&gt;element[i]-&gt;len;//totlen 不針對某個具體數據類型，將所有 key 的鍵名的長度進行統計，注意只統計鍵名長度。
    sampled++;//已經遍歷的 key 數量

    ......//後續解析

    /* 更新整體進度 */
    if(sampled % 1000000 == 0) {
        printf("[%05.2f%%] Sampled %llu keys so far\n", pct, sampled);
    }
}

</code></pre><span id="OSC_h4_13"></span><h4>4.1.2、第二部分是如何執行的？</h4><p><span style="color:#393c5a">1.輸出統計信息、最大 key 信息</span></p><pre><code>   /* We're done */
    printf("\n-------- summary -------\n\n");
    if (force_cancel_loop) printf("[%05.2f%%] ", pct);
    printf("Sampled %llu keys in the keyspace!\n", sampled);
    printf("Total key length in bytes is %llu (avg len %.2f)\n\n",
       totlen, totlen ? (double)totlen/sampled : 0);

</code></pre><p><span style="color:#393c5a">2.首先輸出總共掃描了多少個 key、所有 key 的總長度是多少。</span></p><pre><code>/* Output the biggest keys we found, for types we did find */
    di = dictGetIterator(types_dict);
    while ((de = dictNext(di))) {
        typeinfo *type = dictGetVal(de);
        if(type-&gt;biggest_key) {
            printf("Biggest %6s found '%s' has %llu %s\n", type-&gt;name, type-&gt;biggest_key,
               type-&gt;biggest, !memkeys? type-&gt;sizeunit: "bytes");
        }
    }
    dictReleaseIterator(di);

</code></pre><span id="OSC_h4_14"></span><h4>4.1.3、第三部分是如何執行的？</h4><p><span style="color:#393c5a">di 為字典迭代器，用以遍歷 types_dict 裏面的所有 dictEntry。de = dictNext(di) 則可以獲取下一個 dictEntry，de 是指向 dictEntry 的指針。又因為 typeinfo 結構體保存在 dictEntry 的 v 域中，所以用 dictGetVal 獲取。然後就是輸出 typeinfo 結構體裏面保存的最大 key 相關的數據，包括最大 key 的鍵名和大小。</span></p><pre><code>  di = dictGetIterator(types_dict);
    while ((de = dictNext(di))) {
        typeinfo *type = dictGetVal(de);
        printf("%llu %ss with %llu %s (%05.2f%% of keys, avg size %.2f)\n",
           type-&gt;count, type-&gt;name, type-&gt;totalsize, !memkeys? type-&gt;sizeunit: "bytes",
           sampled ? 100 * (double)type-&gt;count/sampled : 0,
           type-&gt;count ? (double)type-&gt;totalsize/type-&gt;count : 0);
    }
    dictReleaseIterator(di);

</code></pre><span id="OSC_h3_15"></span><h3>4.2、使用開源工具發現大 Key</h3><p><span style="color:#393c5a">在不影響線上服務的同時得到精確的分析報告。使用 redis-rdb-tools 工具以定製化方式找出大 Key，該工具能夠對 Redis 的 RDB 文件進行定製化的分析，但由於分析 RDB 文件為離線工作，因此對線上服務不會有任何影響，這是它的最大優點但同時也是它的最大缺點：離線分析代表着分析結果的較差時效性。對於一個較大的 RDB 文件，它的分析可能會持續很久很久。</span></p><p><span style="color:#393c5a">redis-rdb-tools 的項目地址為：https://github.com/sripathikrishnan/redis-rdb-tools﻿</span></p><span id="OSC_h1_16"></span><h1>五、如何解決 Bigkey</h1><span id="OSC_h3_17"></span><h3>5.1、提前預防</h3><ul><li><span style="color:#333333">設置過期時間，儘量過期時間分散，防止同一時間過期；</span></li><li><span style="color:#333333">存儲為 String 類型的 JSON，可以刪除不使用的 Filed；</span></li></ul><p><span style="color:#393c5a">例如對象為</span><span style="color:#2ea121">{"userName":"京東到家","ciyt":"北京"}</span>，如果只需要用到 userName 屬性，那就定義新對象，只具有 userName 屬性，精簡緩存中數據</p><ul><li><span style="color:#333333">存儲為 String 類型的 JSON，利用@JsonProperty 註解讓 FiledName 字符集縮小，代碼例子如下。但是存在緩存數據識別性低的缺點；</span></li></ul><pre><code>import org.codehaus.jackson.annotate.JsonProperty;
import org.codehaus.jackson.map.ObjectMapper;
import java.io.IOException;
public class JsonTest {
    @JsonProperty("u")
    private String userName;

    public String getUserName() {
        return userName;
    }
    public void setUserName(String userName) {
        this.userName = userName;
    }
    public static void main(String[] args) throws IOException {
        JsonTest output = new JsonTest();
        output.setUserName("京東到家");
        System.out.println(new ObjectMapper().writeValueAsString(output));

        String json = "{\"u\":\"京東到家\"}";
        JsonTest r1 = new ObjectMapper().readValue(json, JsonTest.class);
        System.out.println(r1.getUserName());
    }
}

{"u":"京東到家"}
京東到家

</code></pre><ul><li><span style="color:#333333">採用壓縮算法，利用時間換空間，進行序列化與反序列化。同時也存在緩存數據識別性低的缺點；</span></li><li><span style="color:#333333">在業務上進行幹預，設置閾值。比如用户購物車的商品數量，或者領券的數量，不能無限的增大；</span></li></ul><span id="OSC_h3_18"></span><h3>5.2、如何優雅刪除 BigKey</h3><span id="OSC_h4_19"></span><h4>5.2.1、DEL</h4><p><span style="color:#393c5a">此命令在 Redis 不同版本中刪除的機制並不相同，以下分別進行分析：</span></p><p><strong><span style="color:#393c5a">redis_version &lt; 4.0 版本</span></strong><span style="color:#393c5a">：在主線程中同步刪除，刪除大 Key 會阻塞主線程，見如下源碼基於 redis 3.0 版本。那針對非 String 結構數據，可以先通過 SCAN 命令讀取部分數據，然後逐步進行刪除，避免一次性刪除大 key 導致 Redis 阻塞。</span></p><pre><code>// 從數據庫中刪除給定的鍵，鍵的值，以及鍵的過期時間。
// 刪除成功返回 1，因為鍵不存在而導致刪除失敗時，返回 0 
int dbDelete(redisDb *db, robj *key) {
    // 刪除鍵的過期時間
    if (dictSize(db-&gt;expires) &gt; 0) dictDelete(db-&gt;expires,key-&gt;ptr);

    // 刪除鍵值對
    if (dictDelete(db-&gt;dict,key-&gt;ptr) == DICT_OK) {
        // 如果開啓了集羣模式，那麼從槽中刪除給定的鍵
        if (server.cluster_enabled) slotToKeyDel(key);
        return 1;
    } else {
        // 鍵不存在
        return 0;
    }
}

</code></pre><p><strong><span style="color:#393c5a">4.0 版本 &lt; redis_version &lt; 6.0 版本</span></strong><span style="color:#393c5a">：引入 lazy-free</span><strong><span style="color:#393c5a">，</span></strong><span style="color:#393c5a">手動開啓 lazy-free 時，有 4 個選項可以控制，分別對應不同場景下，是否開啓異步釋放內存機制：</span></p><ul><li><span style="color:#333333">lazyfree-lazy-expire：key 在過期刪除時嘗試異步釋放內存</span></li><li><span style="color:#333333">lazyfree-lazy-eviction：內存達到 maxmemory 並設置了淘汰策略時嘗試異步釋放內存</span></li><li><span style="color:#333333">lazyfree-lazy-server-del：執行 RENAME/MOVE 等命令或需要覆蓋一個 key 時，刪除舊 key 嘗試異步釋放內存</span></li><li><span style="color:#333333">replica-lazy-flush：主從全量同步，從庫清空數據庫時異步釋放內存</span></li></ul><p><span style="color:#4a4a4a">開啓 lazy-free 後，Redis 在釋放一個 key 的內存時，首先會評估代價，如果釋放內存的代價很小，那麼就直接在主線程中操作了，沒必要放到異步線程中執行</span></p><p><strong><span style="color:#393c5a">redis_version &gt;= 6.0 版本</span></strong><span style="color:#393c5a">：引入 lazyfree-lazy-user-del</span><span style="color:#4a4a4a">，只要開啓了，del 直接可以異步刪除 key，不會阻塞主線程。具體是為什麼呢，現在先賣個關子，在下面進行解析。</span></p><span id="OSC_h4_20"></span><h4>5.2.2、SCAN</h4><p><span style="color:#393c5a">SCAN 命令可以幫助在不阻塞主線程的情況下逐步遍歷大量的鍵，以及避免對數據庫的阻塞。以下代碼是利用 scan 來掃描集羣中的 Key。</span></p><pre><code>public void scanRedis(String cursor,String endCursor) {
        ReloadableJimClientFactory factory = new ReloadableJimClientFactory();
        String jimUrl = "jim://xxx/546";
        factory.setJimUrl(jimUrl);
        Cluster client = factory.getClient();
        ScanOptions.ScanOptionsBuilder scanOptions = ScanOptions.scanOptions();
        scanOptions.count(100);
 
        Boolean end = false;
        int k = 0;
        while (!end) {
            KeyScanResult&lt; String &gt; result = client.scan(cursor, scanOptions.build());
            for (String key :result.getResult()){
                if (client.ttl(key) == -1){
                    logger.info("永久 key 為:{}" , key);
                }
            }
            k++;
            cursor = result.getCursor();
            if (endCursor.equals(cursor)){
                break;
            }
        }
    }

</code></pre><span id="OSC_h4_21"></span><h4>5.2.3、UNLINK</h4><p><span style="color:#393c5a">Redis 4.0 提供了 lazy delete (unlink 命令) ，下面基於源碼（redis_version:7.2 版本）分析下實現原理</span></p><ul><li><span style="color:#333333">del 與 unlink 命令底層都調用了 delGenericCommand() 方法；</span></li></ul><pre><code>void delCommand(client *c) {
    delGenericCommand(c,server.lazyfree_lazy_user_del);
}
void unlinkCommand(client *c) {
    delGenericCommand(c,1);
}

</code></pre><ul><li><span style="color:#333333">lazyfree-lazy-user-del 支持 yes 或者 no。默認是 no；</span></li><li><span style="color:#333333">如果設置為 yes，那麼 del 命令就等價於 unlink，也是異步刪除，這也同時解釋了之前咱們的問題，為什麼設置了 lazyfree-lazy-user-del 後，del 命令就為異步刪除。</span></li></ul><pre><code>void delGenericCommand(client *c, int lazy) {
    int numdel = 0, j;
    // 遍歷所有輸入鍵
    for (j = 1; j &lt; c-&gt;argc; j++) {
        // 先刪除過期的鍵
        expireIfNeeded(c-&gt;db,c-&gt;argv[j],0);
        int deleted  = lazy ? dbAsyncDelete(c-&gt;db,c-&gt;argv[j]) :
                              dbSyncDelete(c-&gt;db,c-&gt;argv[j]);
        // 嘗試刪除鍵
        if (deleted) {
            // 刪除鍵成功，發送通知
            signalModifiedKey(c,c-&gt;db,c-&gt;argv[j]);
            notifyKeyspaceEvent(NOTIFY_GENERIC,"del",c-&gt;argv[j],c-&gt;db-&gt;id);
            server.dirty++;
            // 成功刪除才增加 deleted 計數器的值
            numdel++;
        }
    }
    // 返回被刪除鍵的數量
    addReplyLongLong(c,numdel);
}

</code></pre><p><span style="color:#393c5a">下面分析異步刪除 dbAsyncDelete() 與同步刪除 dbSyncDelete()，底層同時也是調用 dbGenericDelete() 方法</span></p><pre><code>int dbSyncDelete(redisDb *db, robj *key) {
    return dbGenericDelete(db, key, 0, DB_FLAG_KEY_DELETED);
}

int dbAsyncDelete(redisDb *db, robj *key) {
    return dbGenericDelete(db, key, 1, DB_FLAG_KEY_DELETED);
}

int dbGenericDelete(redisDb *db, robj *key, int async, int flags) {
    dictEntry **plink;
    int table;
    dictEntry *de = dictTwoPhaseUnlinkFind(db-&gt;dict,key-&gt;ptr,&amp;plink,&amp;table);
    if (de) {
        robj *val = dictGetVal(de);
        /* RM_StringDMA may call dbUnshareStringValue which may free val, so we need to incr to retain val */
        incrRefCount(val);
        /* Tells the module that the key has been unlinked from the database. */
        moduleNotifyKeyUnlink(key,val,db-&gt;id,flags);
        /* We want to try to unblock any module clients or clients using a blocking XREADGROUP */
        signalDeletedKeyAsReady(db,key,val-&gt;type);
        // 在調用用 freeObjAsync 之前，我們應該先調用 decrRefCount。否則，引用計數可能大於 1，導致 freeObjAsync 無法正常工作。
        decrRefCount(val);
        // 如果是異步刪除，則會調用 freeObjAsync 異步釋放 value 佔用的內存。同時，將 key 對應的 value 設置為 NULL。
        if (async) {
            /* Because of dbUnshareStringValue, the val in de may change. */
            freeObjAsync(key, dictGetVal(de), db-&gt;id);
            dictSetVal(db-&gt;dict, de, NULL);
        }
        // 如果是集羣模式，還會更新對應 slot 的相關信息
        if (server.cluster_enabled) slotToKeyDelEntry(de, db);

        /* Deleting an entry from the expires dict will not free the sds of the key, because it is shared with the main dictionary. */
        if (dictSize(db-&gt;expires) &gt; 0) dictDelete(db-&gt;expires,key-&gt;ptr);
        // 釋放內存
        dictTwoPhaseUnlinkFree(db-&gt;dict,de,plink,table);
        return 1;
    } else {
        return 0;
    }
}

</code></pre><p><span style="color:#393c5a">如果為異步刪除，調用 freeObjAsync() 方法，根據以下代碼分析：</span></p><pre><code>#define LAZYFREE_THRESHOLD 64

/* Free an object, if the object is huge enough, free it in async way. */
void freeObjAsync(robj *key, robj *obj, int dbid) {
    size_t free_effort = lazyfreeGetFreeEffort(key,obj,dbid);
    if (free_effort &gt; LAZYFREE_THRESHOLD &amp;&amp; obj-&gt;refcount == 1) {
        atomicIncr(lazyfree_objects,1);
        bioCreateLazyFreeJob(lazyfreeFreeObject,1,obj);
    } else {
        decrRefCount(obj);
    }
}

size_t lazyfreeGetFreeEffort(robj *key, robj *obj, int dbid) {
    if (obj-&gt;type == OBJ_LIST &amp;&amp; obj-&gt;encoding == OBJ_ENCODING_QUICKLIST) {
        quicklist *ql = obj-&gt;ptr;
        return ql-&gt;len;
    } else if (obj-&gt;type == OBJ_SET &amp;&amp; obj-&gt;encoding == OBJ_ENCODING_HT) {
        dict *ht = obj-&gt;ptr;
        return dictSize(ht);
    } else if (obj-&gt;type == OBJ_ZSET &amp;&amp; obj-&gt;encoding == OBJ_ENCODING_SKIPLIST){
        zset *zs = obj-&gt;ptr;
        return zs-&gt;zsl-&gt;length;
    } else if (obj-&gt;type == OBJ_HASH &amp;&amp; obj-&gt;encoding == OBJ_ENCODING_HT) {
        dict *ht = obj-&gt;ptr;
        return dictSize(ht);
    } else if (obj-&gt;type == OBJ_STREAM) {
        ...
        return effort;
    } else if (obj-&gt;type == OBJ_MODULE) {
        size_t effort = moduleGetFreeEffort(key, obj, dbid);
        /* If the module's free_effort returns 0, we will use asynchronous free
         * memory by default. */
        return effort == 0 ? ULONG_MAX : effort;
    } else {
        return 1; /* Everything else is a single allocation. */
    }
}

</code></pre><p><span style="color:#393c5a">分析後咱們可以得出如下結論：</span></p><ul><li><span style="color:#333333">當 Hash/Set 底層採用哈希表存儲（非 ziplist/int 編碼存儲）時，並且元素數量超過 64 個</span></li><li><span style="color:#333333">當 ZSet 底層採用跳錶存儲（非 ziplist 編碼存儲）時，並且元素數量超過 64 個</span></li><li><span style="color:#333333">當 List 鏈表節點數量超過 64 個（注意，不是元素數量，而是鏈表節點的數量，List 的實現是在每個節點包含了若干個元素的數據，這些元素採用 ziplist 存儲）</span></li><li><span style="color:#333333">refcount == 1 就是在沒有引用這個 Key 時</span></li></ul><p><span style="color:#393c5a">只有以上這些情況，在刪除 key 釋放內存時，才會真正放到異步線程中執行，其他情況一律還是在主線程操作。也就是説 String（不管內存佔用多大）、List（少量元素）、Set（int 編碼存儲）、Hash/ZSet（ziplist 編碼存儲）這些情況下的 key 在釋放內存時，依舊在主線程中操作。</span></p><span id="OSC_h3_22"></span><h3>5.3、分而治之</h3><p><span style="color:#393c5a">採用經典算法「分治法」，將大而化小。針對 String 和集合類型的 Key，可以採用如下方式：</span></p><ul><li><span style="color:#333333">String 類型的大 Key：可以嘗試將對象分拆成幾個 Key-Value， 使用 MGET 或者多個 GET 組成的 pipeline 獲取值，分拆單次操作的壓力，對於集羣來説可以將操作壓力平攤到多個分片上，降低對單個分片的影響。</span></li><li><span style="color:#333333">集合類型的大 Key，並且需要整存整取要在設計上嚴格禁止這種場景的出現，如無法拆分，有效的方法是將該大 Key 從 JIMDB 去除，單獨放到其他存儲介質上。</span></li><li><span style="color:#333333">集合類型的大 Key，每次只需操作部分元素：將集合類型中的元素分拆。以 Hash 類型為例，可以在客户端定義一個分拆 Key 的數量 N，每次對 HGET 和 HSET 操作的 field 計算哈希值並取模 N，確定該 field 落在哪個 Key 上。</span></li></ul><p><span style="color:#393c5a">如果線上服務強依賴 Redis，需要考慮到如何做到「無感」，並保證數據一致性。咱們基本上可以採用三步走策略，如下圖所示。分別是進行雙寫，雙讀校驗，最後讀新 Key。在此基礎上可以設置開關，做到上線後的平穩遷移。</span></p><div><img src="https://mp.toutiao.com/mp/agw/article_material/open_image/get?code=ZGE3YWQ4ZDZiZDE4ZjM5MzU1YTRiMTExOWZjY2UxYmMsMTY5ODcxODQzNDA3Nw==" referrerpolicy="no-referrer"></div><span id="OSC_h1_23"></span><h1>﻿﻿六、總結</h1><p><span style="color:#393c5a">綜上所述，針對文章開頭咱們購物車大 Key 問題，相信你已經有了答案。咱們可以限制門店數，限制門店中的商品數。如果不作限制，咱們也能進行拆分，將大 Key 分散存儲。例如。將 Redis 中 Key 類型改為 List，key 為用户與門店唯一鍵，Value 為用户在此門店下的商品。</span></p><pre><code>存儲結構拆分成兩種：
第一種：
    userPin：storeId 的集合
第二種：
    userPin_storeId1:{門店下加車的所有商品基本信息}；
    userPin_storeId2:{門店下加車的所有商品基本信息}     

</code></pre><p><span style="color:#393c5a">以上介紹了大 key 的產生、識別、處理，以及如何使用合理策略和技術來應對。在使用 Redis 過程中，防範大於治理，在治理過程中也要做到業務無感。</span></p><span id="OSC_h1_24"></span><h1>七、參考</h1><p><span style="color:#393c5a">﻿https://github.com/redis/redis.git﻿</span></p><p><span style="color:#393c5a">﻿http://redisbook.com/﻿</span></p><p><span style="color:#393c5a">﻿https://github.com/huangz1990/redis-3.0-annotated.git﻿</span></p><p><span style="color:#393c5a">﻿https://blog.csdn.net/ldw201510803006/article/details/124790121﻿</span></p><p><span style="color:#393c5a">﻿https://blog.csdn.net/kuangd_1992/article/details/130451679﻿</span></p><p><span style="color:#393c5a">﻿http://sd.jd.com/article/4930?shareId=119428&amp;isHideShareButton=1﻿</span></p><p><span style="color:#393c5a">﻿https://www.liujiajia.me/2023/3/28/redis-bigkeys﻿</span></p><p><span style="color:#393c5a">﻿https://www.51cto.com/article/701990.html﻿</span></p><p><span style="color:#393c5a">﻿https://help.aliyun.com/document_detail/353223.html﻿</span></p><p><span style="color:#393c5a">﻿https://juejin.cn/post/7167015025154981895﻿</span></p><p><span style="color:#393c5a">﻿https://www.jianshu.com/p/9e150d72ffc9﻿</span></p><p><span style="color:#393c5a">﻿https://zhuanlan.zhihu.com/p/449648332</span></p><blockquote><p>作者：京東零售&nbsp;高凱</p><p>來源：京東雲開發者社區，轉載請註明來源</p></blockquote><p>&nbsp;</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 31 Oct 2023 02:21:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/4090830/blog/10139889</guid>
            <link>https://my.oschina.net/u/4090830/blog/10139889</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[基於模式挖掘的可靠性治理探索與實踐]]>
            </title>
            <description>
                <![CDATA[<div class="content"><blockquote><p>本文整理自美團技術沙龍第 77 期《美團億級流量系統的質量風險防控和穩定性治理實踐》。本文介紹了基於模式挖掘的可靠性治理探索，為通過技術手段解決該領域代表性問題開啓了新的思路。文章第一部分介紹可靠性治理的痛點；第二部分引入模式的概念；第三部分討論新基建下的新嘗試；第四部分分享三個典型的實踐案例。</p></blockquote><p><img src="https://oscimg.oschina.net/oscnet/up-df29f8b032fe5944a8d7b649041f72acc43.jpg" alt="" referrerpolicy="no-referrer"></p><h2>1 可靠性治理的痛點</h2><p>對於億級流量的線上系統來説，可靠性是至關重要的。從字面上理解，可靠性要求故障少、可信賴。與安全性一樣，它們都是信息系統的固有屬性之一，也是保障產品質量的關鍵因素。</p><p>對照 Google 的可靠性模型來看，測試同學會投入很多精力在用例設計、測試執行、持續交付等環節上，研發同學則會更多關注監控、應急和故障分析等。但往往由於項目進度和人力因素，在設計和編碼階段對可靠性的投入和關注不足，導致後續需要付出更高的成本發現和解決潛在隱患。有鑑於此，我們希望能找到更低成本且以更有效的方式發現和治理這些隱患，從而提升系統整體的可靠性。</p><p><img src="https://p0.meituan.net/travelcube/d94c2805fc7216f7058b60b25dee9c2d521185.png" alt="" referrerpolicy="no-referrer"></p><p>在研發設計階段，我們需要關注系統彈性，考慮潛在故障風險、適應流量變化等，其中相關治理涉及冪等性、健壯性、一致性、超時、限流、熔斷等場景。與一般功能測試相比，可靠性治理需要面對不同的服務和系統，發現並治理技術問題，在模糊度上有較大的提升和挑戰。就目前而言，質量問題非常明確，但潛在風險策略和解決路徑比較模糊。因此，我們希望能找到辦法識別並解決這些問題。</p><p><img src="https://p0.meituan.net/travelcube/9fde4b0cae296d02895a1d03351043e3159517.png" alt="" referrerpolicy="no-referrer"></p><p>模糊度的提升會帶來兩種最常見的現象：</p><ul><li>一種是過於具體，Case by Case 解決問題，類似算法的過擬合，過擬合的問題在於對更廣泛範圍內的問題缺乏有效性。以冪等性為例，想驗證一個接口是否冪等可以很快完成並很快補充接口冪等相關的測試用例，但是對不同的接口、服務、系統以及不同的冪等性設計，還有哪些問題和風險，我們沒有辦法關注到並控制這些風險。</li><li>另一種是過於泛化，類似算法的欠擬合，欠擬合的問題在於過度虛化導致沒有抓住問題的共性特徵。以主從延遲為例，主從延遲會給系統帶來一致性風險，需要針對性做保護，並進行相關驗證，因此我們可以制定規範、梳理 Check List 和測試模板，雖然這樣可以最大程度在產研各環節提醒大家關注到這類問題，但並沒有找到徹底解決問題的方法。</li></ul><p><img src="https://p0.meituan.net/travelcube/fa0db198a1641d7c6fff31be835b8753341300.png" alt="" referrerpolicy="no-referrer"></p><h2>2 模式的定義</h2><p>類似這些問題如何找到更好的解決辦法？我們重點看一下模式對可靠性治理的啓發。模式在維基百科的定義是：揭示了這個世界上人工設計和抽象思想中的規律。</p><p>例如下圖所示，計算機圖形學中的經典分形圖案柯赫雪花，是 1904 年瑞典數學家科赫提出。可以看到它有明顯的規律，這樣的分形規律在自然界無處不在。</p><p><img src="https://p0.meituan.net/travelcube/650b75a49ab89c3f5c5204c5f712e0f6435079.png" alt="" referrerpolicy="no-referrer"></p><p>技術場景的模式會更加豐富些，這類模式和可靠性治理想找到的模式非常接近。</p><p>舉例緩存設計的兩種常見模式：</p><ul><li>第一種是 Cache-Aside（旁路緩存），也是使用比較廣泛的一種方式，它只有在緩存沒有命中時，才會查詢數據庫並更新緩存。</li><li>另外一種是 Write-throught（只寫模式），這種模式在每次數據庫變更時都會同步更新緩存。</li></ul><p>對比第一種模式，第二種模式的優點是邏輯更清晰、操作簡單、緩存命中率更高；缺點是不常請求的數據會被寫到緩存中，導致緩存更大。</p><p><img src="https://p1.meituan.net/travelcube/fe10478804776789b284dc94e48f97e1215075.png" alt="" referrerpolicy="no-referrer"></p><p>那麼，我們如何找到這些潛在模式並應用到可靠性治理呢？我們現有的業務測試數據、專業知識積累、相關問題分析和覆盤經驗，都可以幫助我們找到治理這些通用技術場景的規律。在這裏，很重要的一部分是真實的業務數據，我們可以從最基礎的數據提取信息，找到解決共性問題的思路。</p><h2>3 大數據下的嘗試</h2><p>隨着 JVM 非侵入式 AOP 解決方案的成熟，現在我們已經可以採集任意環境下的任意協議流量，以及這些流量依賴的數據關係，也可以在測試環境回放這些流量，包括線上真實採集的流量。這裏依賴兩個關鍵點：一是流量採集，這裏涉及很多技術方案，這裏分享主要是作為一個基礎設施；二是有了全鏈路 Mock 能力，我們才能在測試環境進行各種流量的回放和驗證。</p><p><img src="https://p0.meituan.net/travelcube/3df2f4a8531888d62d0b81cc965ebdba289384.png" alt="" referrerpolicy="no-referrer"></p><p>另一個重要基礎設施是環境隔離技術，經過快速發展，它已經具備了泳道級別的數據複製隔離，也支持一站式數據消息和部署環境的即拿即用。從最開始通過泳道降低人工測試相互影響，到現在一站式拉出一套環境，能支持各類專項檢查獨立運行，使用線下數據且不污染主幹環境。</p><p><img src="https://p0.meituan.net/travelcube/2fb9dcf93574ab8e46e16237551501ad496283.png" alt="" referrerpolicy="no-referrer"></p><p>基於流量採集和環境隔離這兩個能力的成熟，給自動化領域帶來了很多新可能。流量採集信息包含了請求參數、返回值和調用鏈路等信息；環境隔離技術支持數據隔離、消息隔離、各種協議以及部署版本隔離。</p><p>在這種情況下，海量的業務流量可以直接轉化成基於規則驗證的接口自動化用例，也可以應用到基於業務模型的場景級用例，模式在這裏更像是兩者之間的「折中」，我們希望通過這種「折中」來解決可靠性治理的難題。</p><h2>4 典型實踐分享</h2><p>接下來，我們重點介紹基於模式的三個可靠性治理的典型實踐，主要包括冪等性治理、依賴治理和越權治理三個方向。</p><h3>4.1 冪等性治理</h3><p>維基百科中，冪等的定義是數學和計算機科學中某些運算的性質，可以被多次應用，而不會改變最初應用之外的結果。在數學中也有相關的定義，就以一元運算為例，當 f(f(x))=f(x) 時，可以認為這個運算符 f 是冪等的；在計算機科學領域，HTTP 規範中也有對冪等的定義，即多個相同請求的副作用與單個請求相同，例如 GET、PUT 和 DELETE 是冪等的。</p><p><img src="https://p1.meituan.net/travelcube/902fbbee65d75ac506adbbf9db8ebb28204176.png" alt="" referrerpolicy="no-referrer"></p><p>在大部分分佈式系統中，請求超時、網絡抖動等在線上環境中隨時可能發生。冪等性設計是保證服務在高併發情況下高可用的關鍵。對於每天產生海量訂單的線上業務，比如庫存、交易、支付和財務等系統都需要通過冪等性避免超賣、重複支付、重複打款等問題的發生；同時冪等性也是消息隊列、定時任務、分佈式事務等技術類場景穩定運行的基礎。</p><p>如下圖舉例，當一次調用部分成功的情況下，系統會觸發重試，而冪等性可以保證在重試時，成功部分不再被重複執行。</p><p><img src="https://p1.meituan.net/travelcube/22c38c3a5234bf04d0059508d0278c17289045.png" alt="" referrerpolicy="no-referrer"></p><p>我們要挖掘通用模式，就需要分析冪等性所有可能的實現方案。</p><p>如下圖是幾種常見的冪等性實現方案：數據庫層面的唯一索引；通過版本或其他狀態、條件來限制操作執行的悲觀鎖和樂觀鎖；通過具體業務屬性參數，構造具有唯一性的 Token 以及分佈式系統中廣泛使用的分佈式鎖等。</p><p><img src="https://p0.meituan.net/travelcube/20c2de394399fddbb90f8348429f4020332786.png" alt="" referrerpolicy="no-referrer"></p><p>儘管冪等性的實現方案有多種，但回到冪等性的本質，我們希望多次調用不會產生新的副作用，而系統中副作用的產生往往是通過「寫」操作發生。</p><p>分析調用鏈路發現，當鏈路上某個節點不冪等而對資源產生副作用後，其後的多個節點都可以檢測到相關變化。例如，前序節點通過數據庫的寫入生成了新的單號，後序節點的參數和返回值很可能會出現這個新單號。這樣，我們就可以構造多次同樣的請求，之後檢查鏈路上的這些變化來驗證冪等性。</p><p><img src="https://p0.meituan.net/travelcube/feded9ba45e7cc6113b8f3c123d5d707559000.png" alt="" referrerpolicy="no-referrer"></p><p>調用鏈路節點的類型包括了 MYBATIS、RPC、HTTP、MAFKA、CRANE 等，不同冪等性方案在不同類型的節點上有相應的表現，例如唯一索引，更多在 MYBATIS 節點上，不同類型節點的檢查策略和優先級也不同。</p><p><img src="https://p0.meituan.net/travelcube/076a87994f48ccad52ebee631b292ba2547874.png" alt="" referrerpolicy="no-referrer"></p><p>如下圖，列舉了部分節點檢查策略和降噪策略。以 MYBATIS 為例，我們會關注到寫 SQL 的內容和返回結果，結合索引衝突、鎖失敗等節點的異常返回進行降噪。比如 THRIFT 節點，我們會關注接口的參數和返回值變化，考慮隨機 ID 的生成、時間戳字段等進行相關降噪，最終針對不同冪等性方案和不同節點類型形成通用整體策略。</p><p><img src="https://p0.meituan.net/travelcube/8c2706b169067b4e53e9fa1d6b362cd0229473.png" alt="" referrerpolicy="no-referrer"></p><p>基於通用檢查能力，我們可以應用在場景用例編寫、流量用例生成和離線流量的自動分析上，通過分析每天線上、線下環境產生的真實流量，我們可以對增量和存量問題進行差異化治理和跟進。</p><p><img src="https://p0.meituan.net/travelcube/2bb82708ca65eccf9942c5515998e20b151408.png" alt="" referrerpolicy="no-referrer"></p><h3>4.2 依賴治理</h3><p>隨着微服務的發展，我們的系統變得越來越複雜，調用鏈路越來越長，例如單接口的下游依賴多達上百個，任何外部依賴的抖動都會成為核心業務的威脅，很多時候系統內部或外部的一些錯誤被激活，沒有得到正確處理，就會在服務內部不斷傳播，導致系統偏離正確的服務狀態，造成服務失敗，最終導致業務失敗，引起用户可以感知的故障。</p><p><img src="https://p0.meituan.net/travelcube/7aa84a6c96587c952494f351b41bd834559746.png" alt="" referrerpolicy="no-referrer"></p><p>在業務上可以通過依賴分級和熔斷策略，保障弱依賴發生故障時，核心流程依然可用。因此我們需要進行依賴治理，而依賴的治理關鍵在於如何自動化完成分級合理性以及熔斷策略有效性的驗證。</p><p>類似前面，我們會採用回放業務流量的方式，但基於依賴治理，我們的策略是修改依賴的 Mock 結構，構造依賴故障場景，進行相關驗證。</p><p>我們的預期是如果命中了弱依賴，我們期望業務主流程不被阻塞，調用鏈路也沒有阻塞，日誌打印和返回信息都符合預期，沒有異常表現；如果命中強依賴，驗證策略則相反。</p><p><img src="https://p0.meituan.net/travelcube/ea65f83998fd281afb61f0210ffc3115679867.png" alt="" referrerpolicy="no-referrer"></p><p>具體的策略是我們依據接口和依賴關係構造指定依賴故障場景，注入異常後，分析這個異常是否被捕獲。如果直接拋到了外層或者接口返回值有相關的異常信息，那當前是強依賴；如果注入依賴後，後續的調用鏈路被阻斷，認為當前依賴是強依賴。反之，則是弱依賴。</p><p>具備這樣閉環依賴分級識別以及熔斷有效性的治理能力後，我們就可以週期性地對核心服務進行下游依賴等級治理和對熔斷策略有效性進行自動驗證。</p><p>運營內容主要包括兩方面：配置檢查和業務驗證。</p><p><img src="https://p1.meituan.net/travelcube/21cacef713e1c515e75ad0be73c48182459214.pngv" alt="" referrerpolicy="no-referrer"></p><ul><li>對於依賴等級正確與否的檢查，每週運行，發現依賴等級與熔斷策略不相符的情況，推動治理。</li><li>對於業務驗證，每天運行，持續產生每天增量報告，針對強依賴業務未被阻斷、弱依賴業務未被處理，對應的異常等問題推動修改。</li></ul><p><img src="https://p0.meituan.net/travelcube/46852b87e0993671f0f3dd3c788ce537337387.png" alt="" referrerpolicy="no-referrer"></p><h3>4.3 越權治理</h3><p>越權訪問是 Web 應用程序中一種常見的漏洞，它存在範圍廣、危害大，被 OWASP 應用程序安全項目列為 Web 應用十大安全隱患第二名。對於這種商户、用户規模大，交易頻繁的線上業務來説，更是存在比較大的安全和合規風險。</p><p>越權就是兩個同等級用户，一個可以操作另一個數據；垂直越權則涉及到不同等級用户，例如普通用户可以操作管理員才有的權限數據。</p><p><img src="https://p0.meituan.net/travelcube/bd1d73c092a90fd955b014315529d5fb435342.png" alt="" referrerpolicy="no-referrer"></p><p>典型的有越權處理接口在收到請求後經歷以下三個階段：</p><ul><li>第一步是身份認證，讓系統明確當前登錄的用户是誰，是後續進行鑑權的基礎條件，每家公司和業務可能會有多套鑑權系統。</li><li>第二步是系統決策判斷，基於當前登錄用户信息，根據身份權限判斷是否可以繼續操作。</li><li>第三步是數據權限驗證，判斷當前數據是否是該用户所屬，即數據歸屬判斷。</li></ul><p>當系統未做角色判斷時，容易發生垂直越權問題；當系統未做數據歸屬判斷時，容易發生水平越權問題。</p><p><img src="https://p0.meituan.net/travelcube/445e4b25c3642b3285bc4c6610720183385165.png" alt="" referrerpolicy="no-referrer"></p><p>我們可以通過回放業務流量構造對應場景，驗證接口是否有做權限控制。</p><p>第一次回放，會結合識別到當前流量鑑權方式，構造一個無權限賬户進行回放，其餘的依賴數據保持不變；第二次回放與第一次類似，只不過需要構造一個有權限賬户信息進行回放；比對兩次回放結果以及調用鏈路，驗證這個接口是否有相關的鑑權邏輯；再結合調用鏈路對比以及原始流量的調用鏈路，比較有效地識別當前的鑑權場景，兼容一些場景通過返回值沒有辦法完全識別到是否有做鑑權的情況。</p><p><img src="https://p1.meituan.net/travelcube/987a046ffe53e98a2b3a372e5e9470a6616863.png" alt="" referrerpolicy="no-referrer"></p><p>在實際應用中，要考慮我們所使用的流量質量、有效性以及鑑權方式等進行篩選。目前越權檢查經過優化和適配不同業務，已經可以自動化、常態化對新增流量進行檢測，並將結果同步到報告中，進行日常運營，也支持問題確認、加白和工單創建等。</p><p><img src="https://p0.meituan.net/travelcube/fc1ad4d32886ca9e572b9289ec7fecaa309813.png" alt="" referrerpolicy="no-referrer"></p><p>以上三個治理能力，已經對美團優選部分核心服務默認開啓，可以低成本自動化實現相關問題的常態治理及運營。目前覆蓋了 500+服務、2 萬+接口和 8000+下游、累計發現並治理問題有 1000+。近期已經開始陸續接入到公司內其他業務線進行應用。</p><p><img src="https://p0.meituan.net/travelcube/1ed53bd18db0f07796de4255709e5406164876.png" alt="" referrerpolicy="no-referrer"></p><p>通過以上 3 個案例，我們可以看到共性能力和解法，因此後續的規劃主要是建設通用基礎設施，包含線上、線下以及不同來源的流量積累、流量分析，在其上進行模式挖掘、結果跟進和運營，在這樣體系基礎上，不斷迭代底層能力，構建更豐富的可靠性治理場景。</p><p><img src="https://p0.meituan.net/travelcube/559a1aaa265cec97745263e1d470c0ef548540.png" alt="" referrerpolicy="no-referrer"></p><h2>5 Q&amp;A</h2><p><strong>Q1：怎樣預防配置異常造成的故障？</strong></p><p><strong>A</strong>：用相關事件舉例，我們的一些配置平台包含一些規則，可以字符串形式或者一些類型形式存儲，系統對這些配置的兼容性或表現，我們可以構造這些配置的異常場景，比如它當前是一個數值類型的配置，那我們可以構造這個配置的異常值、邊界值以及空值，比如它包含分隔符的字符串，我們可以用特殊分隔符以及特殊字符，構造異常配置的獲取，驗證一個配置的兼容性和可靠性的規則是當讀取到這樣的異常配置後，我們本來能正確回放的流量，在返回值、拋出異常、日誌和調用鏈路層面有哪些相應表現。很多線上配置變更，因為人為原因和系統默認規則沒有兜住的情況下，會引入這樣的異常配置健壯性驗證，有比較好的保障。</p><p><strong>Q2：越權場景檢查，鏈路對比是指走過的鏈路對比嗎？還是每個調用點數據對比？</strong></p><p><strong>A</strong>：對於越權場景，我們可以識別到它在哪個環節進行了鑑權相關調用，不同的鑑權體系，有對應的權限相關服務和基礎接口，構造有權限和沒權限的場景後，它會識別沒權限後的鏈路調用變化，比如鏈路節點數量以及哪個節點返回可以發現大部分問題，如果在這層沒有識別到是否做鑑權，我們會關注每個節點的請求和返回，通過其他維度信息增強發現的有效性，降低噪聲。</p><p><strong>Q3：怎麼自動構造接口裏沒有權限的用户？</strong></p><p><strong>A</strong>：在原始流量裏，我們可以識別到它當前的鑑權方式以及它使用了哪些鑑權服務。這樣，我們可以基於這個鑑權方式和服務構造有權限或者沒有權限的用户。</p><p><strong>Q4：可靠性治理系統是自研的，還是開源的，研發工作量多少人月？</strong></p><p><strong>A</strong>：可靠性系統建設的思路，目前是自研，它基於美團的基礎設施和能力，展開上層解決可靠性問題的實踐；研發工作量其實還好，它的點在於我們能找到哪些可以進行治理，快速迭代相關能力，並且在這一過程中不斷補全新能力加進去，因此它是一個持續的過程，整體規劃上，我們會考慮可靠性，從服務和代碼的每一層，從機器、資源、基礎組件到服務自身、上游流量和網關分層，拆分不同節點，構建不同策略，這樣會有一個整體投入。</p><p><strong>Q5：流量限流和服務降級如何實現？</strong></p><p><strong>A</strong>：美團有服務限流和降級能力的基礎設施 Rhino 平台，服務降級是研發根據當前依賴等級，結合具體業務分析它是否是一個可降級的依賴，再配置對應的熔斷策略，當降級時，是繞過當前故障進行降級還是在故障恢復後 Fallback，這樣的相關規則和策略都可以配置化，自動化驗證這些策略是否生效、是否符合預期。</p><p><strong>Q6：在有了這些能力基礎上，基於模式的可靠性治理用例佔比多少？價值怎樣評價？</strong></p><p><strong>A</strong>：我們想基於模式找到一個通用的治理策略和能力，這樣的話，我們就可以將線上、線下海量流量數據都應用到這裏，不需要 QA 同學投入成本，編寫對應的用例，對於研發來説，我們希望直接確認和解決一些已識別到的問題，只需要花費問題確認和修復的成本。對於可識別用例佔比，因為它是基於全量流量，所以隨着時間的積累，歷史場景以及新場景會相應覆蓋到，它的用例有多少，取決於流量池以及流量質量和代表性。</p><p><strong>Q7：流量回放 Mock，使用字節碼，還是沙箱模式？</strong></p><p><strong>A</strong>：這裏用到美團的基礎設施能力，它在採集過程中，基於字節碼增強採集，回放能力也是使用到了同樣的能力。</p><p><strong>|</strong> 在美團公眾號菜單欄對話框回覆【2022 年貨】、【2021 年貨】、【2020 年貨】、【2019 年貨】、【2018 年貨】、【2017 年貨】等關鍵詞，可查看美團技術團隊歷年技術文章合集。</p><p><img src="https://p1.meituan.net/travelcube/b0364d579285ab22aa6235bd100d7c22178175.png" alt="" referrerpolicy="no-referrer"></p><p>| <a href="https://www.oschina.net/action/GoToLink?url=mailto%3A%E6%9C%AC%E6%96%87%E7%B3%BB%E7%BE%8E%E5%9B%A2%E6%8A%80%E6%9C%AF%E5%9B%A2%E9%98%9F%E5%87%BA%E5%93%81%EF%BC%8C%E8%91%97%E4%BD%9C%E6%9D%83%E5%BD%92%E5%B1%9E%E7%BE%8E%E5%9B%A2%E3%80%82%E6%AC%A2%E8%BF%8E%E5%87%BA%E4%BA%8E%E5%88%86%E4%BA%AB%E5%92%8C%E4%BA%A4%E6%B5%81%E7%AD%89%E9%9D%9E%E5%95%86%E4%B8%9A%E7%9B%AE%E7%9A%84%E8%BD%AC%E8%BD%BD%E6%88%96%E4%BD%BF%E7%94%A8%E6%9C%AC%E6%96%87%E5%86%85%E5%AE%B9%EF%BC%8C%E6%95%AC%E8%AF%B7%E6%B3%A8%E6%98%8E%E2%80%9C%E5%86%85%E5%AE%B9%E8%BD%AC%E8%BD%BD%E8%87%AA%E7%BE%8E%E5%9B%A2%E6%8A%80%E6%9C%AF%E5%9B%A2%E9%98%9F%E2%80%9D%E3%80%82%E6%9C%AC%E6%96%87%E6%9C%AA%E7%BB%8F%E8%AE%B8%E5%8F%AF%EF%BC%8C%E4%B8%8D%E5%BE%97%E8%BF%9B%E8%A1%8C%E5%95%86%E4%B8%9A%E6%80%A7%E8%BD%AC%E8%BD%BD%E6%88%96%E8%80%85%E4%BD%BF%E7%94%A8%E3%80%82%E4%BB%BB%E4%BD%95%E5%95%86%E7%94%A8%E8%A1%8C%E4%B8%BA%EF%BC%8C%E8%AF%B7%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6%E8%87%B3tech%40meituan.com%E7%94%B3%E8%AF%B7%E6%8E%88%E6%9D%83%E3%80%82" target="_blank">本文系美團技術團隊出品，著作權歸屬美團。歡迎出於分享和交流等非商業目的轉載或使用本文內容，敬請註明「內容轉載自美團技術團隊」。本文未經許可，不得進行商業性轉載或者使用。任何商用行為，請發送郵件至 tech@meituan.com 申請授權。</a></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 31 Oct 2023 02:14:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/meituantech/blog/10117396</guid>
            <link>https://my.oschina.net/meituantech/blog/10117396</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
    </channel>
</rss>
