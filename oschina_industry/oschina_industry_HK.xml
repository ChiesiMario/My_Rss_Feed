<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[開源中國-綜合資訊]]>
        </title>
        <link>https://www.oschina.net/news/industry</link>
        <atom:link href="https://rsshub.app/oschina/news/industry" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[開源中國-綜合資訊 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Wed, 20 Dec 2023 03:39:15 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[用 600 萬人的數據集訓練出預測人類死亡時間的大模型]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.newscientist.com%2Farticle%2F2408480-ai-trained-on-millions-of-life-stories-can-predict-risk-of-early-death%2F" target="_blank">根據 NewScientist 的報道</a></u>，丹麥科技大學研究團隊近日發佈了一款新的大模型產品，<strong>可以預測人類的死亡幾率</strong>。</p><p><img height="1402" src="https://static.oschina.net/uploads/space/2023/1220/111104_rUMq_2720166.png" width="2500" referrerpolicy="no-referrer"></p><p>該團隊領導人 Sune Lehmann Jørgensen 表示，該模型名為 <strong>Life2vec</strong> ，由一個獨特的豐富數據集進行訓練，而數據集涵蓋了從 2008 年到 2020 年 600 萬人的教育、看病和就醫情況、診斷結果、收入和職業。</p><p>研究團隊表示，在實驗中他們收集了一組年齡在 35 歲至 65 歲之間的人的數據，其中一半人在 2016 年至 2020 年間死亡。研究人員要求 Life2vec&nbsp;預測哪些人活着，哪些人死亡。結果顯示，它比金融行業中用於定價人壽保險保單的現有人工智能模型或精算生命表準確率高出 11%。</p><p>此外，Life2vec 還能比經過專門訓練的人工智能模型更準確地預測人口子集的性格測試結果。</p><p>Sune Lehmann Jørgensen 認為，該模型已使用足夠的數據進行訓練，因此它應該可以揭示普遍的健康和社會主題。這意味着它可以用來預測健康問題並及早發現它們，或者被政府用來消減不平等現象——這或將為未來公共健康科學開闢一種全新的評估模式。</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 20 Dec 2023 03:12:09 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271848/ai-llm-predict-risk-of-early-death</guid>
            <link>https://www.oschina.net/news/271848/ai-llm-predict-risk-of-early-death</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[2023 全球十大工程成就發佈：ChatGPT、鴻蒙操作系統、中國空間站等入選]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>12 月 20 日，由中國工程院院刊《Engineering》評選的 「<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2F8ABT0lPLOHjHGoazMA60FQ" target="_blank">2023 全球十大工程成就</a></u>」正式發佈。</p><p><img src="https://oscimg.oschina.net/oscnet/up-cc3a6043e931597f51ac42d9cd9200fd083.png" referrerpolicy="no-referrer"></p><p>據介紹，本年度入圍的「全球十大工程成就」，主要指過去五年由世界各國工程科技工作者合作或單獨完成且實踐驗證有效的、並且已經產生全球影響的工程科技重大創新成果，既包括重大工程項目或關鍵技術裝備，也涵蓋工程科技關鍵性原始創新與突破。</p><p>本次評選出的成就包括：<strong>ChatGPT、中國空間站、百億億次超級計算機、白鶴灘水電站、雙小行星重定向測試、RTS,S/AS01 瘧疾疫苗、鴻蒙操作系統、Spot &amp; Atlas 機器人、鋰離子動力電池、無人駕駛航空器</strong>。</p><h4><strong>ChatGPT</strong></h4><p>2022 年 11 月 30 日，美國 OpenAI 公司推出聊天機器人產品 ChatGPT。作為一種基於注意力學習機制的自然語言生成神經網絡模型，ChatGPT 通過自監督學習、有監督微調和人在迴路強化學習相互結合，可以實現文本內容合成、機器翻譯、自動文檔摘要、代碼生成等功能。ChatGPT 是迄今為止通過自然語言交互獲得人工智能賦能最成功的產品之一，為人類實現通用人工智能提供了一種範式。</p><p><img src="https://static.oschina.net/uploads/space/2023/1220/104232_xj46_2720166.png" referrerpolicy="no-referrer"></p><h4><strong>中國空間站</strong></h4><p>2022 年 11 月，中國空間站在歷經 11 次發射任務後完成在軌組裝建造。中國空間站本體由 3 艙組成，入軌總質量 67.5 噸，航天員活動空間 122 立方米，可實現長期 3 人、短期 6 人駐留，配備 4 台獨特的 LT-100 型大功率霍爾電推進發動機維持軌道運行，採用先進再生式生命保障技術實現資源閉環利用。中國空間站的建成和運行，將為人類太空探索和開發提供更加廣闊的前景和機會。</p><p><img src="https://static.oschina.net/uploads/space/2023/1220/104313_L46r_2720166.png" referrerpolicy="no-referrer"></p><h4><strong><strong>百億億次超級計算機</strong></strong></h4><p>2022 年 5 月 30 日，美國能源部橡樹嶺國家實驗室與 AMD 合作建造的「FRONTIER」超級計算機系統，以每秒 1.1×1018 次浮點運算，被國際超級計算組織評為世界上運行速度最快的計算機。作為全球首個突破每秒百億億次性能的計算機，「FRONTIER」超級計算機開啓了 E 級計算的新時代，將為解決目前世界上最嚴峻的科學挑戰，如精確的氣候預測、核聚變模擬、新材料和新藥物研發等，提供更加有力的計算工具。</p><p><img src="https://static.oschina.net/uploads/space/2023/1220/104352_40QF_2720166.png" referrerpolicy="no-referrer"></p><h4><strong>白鶴灘水電站</strong></h4><p>2022 年 12 月 20 日，位於中國金沙江下游幹流的白鶴灘水電站全部機組投產發電。電站大壩為 300 米級特高混凝土雙曲拱壩，在國際上首次全壩使用低熱水泥混凝土澆築。電站安裝全球首批 16 台單機容量百萬千瓦的水輪發電機組，引領水力發電進入單機百萬千瓦新時代。白鶴灘水電站與三峽工程、葛洲壩工程、烏東德水電站、溪洛渡水電站、向家壩水電站，構成了中國長江上跨越 1800 千米的全球最大清潔能源走廊。</p><p><img src="https://static.oschina.net/uploads/space/2023/1220/104453_695T_2720166.png" referrerpolicy="no-referrer"></p><h4><strong>雙小行星重定向測試</strong></h4><p>2022 年 9 月 27 日，美國國家航空航天局利用發射總質量 610 千克的「雙小行星重定向測試」航天器，在距離地球 1100 萬千米的太空中，以 6.6 千米 / 秒的相對速度，撞擊一組近地雙小行星系統中較小的一顆小行星，從而將其軌道週期縮短了 32 分鐘。這是人類首次開展的保護地球免受小行星撞擊威脅的測試任務，成功展示了人類有目的地改變天體軌道運動的能力。</p><p><img src="https://static.oschina.net/uploads/space/2023/1220/104521_lFKR_2720166.png" referrerpolicy="no-referrer"></p><h4><strong><strong>RTS,S / AS01 瘧疾疫苗</strong></strong></h4><p>2021 年 10 月 6 日，世界衞生組織首次建議在一些瘧疾傳播風險較高的地區給兒童接種 RTS,S / AS01 瘧疾疫苗。這是全球首款獲批的瘧疾疫苗，由英國葛蘭素史克公司與 PATH MVI 合作開發。該瘧疾疫苗創新性地將惡性瘧原蟲環子孢子蛋白 CSP 的 C-末端序列與乙型肝炎病毒表面抗原融合、組裝成病毒樣顆粒結構的亞單位疫苗，極大提高了免疫原性。瘧疾疫苗的研製成功是人類抗擊瘧疾史上的重要的里程碑事件。</p><p><img src="https://static.oschina.net/uploads/space/2023/1220/104537_KQxl_2720166.png" referrerpolicy="no-referrer"></p><h4><strong><strong><strong>鴻蒙操作系統</strong></strong></strong></h4><p>2019 年 8 月 9 日，華為公司發佈了全新的基於微內核、面向全場景的分佈式操作系統 —— 鴻蒙操作系統。鴻蒙系統首次將分佈式架構用於終端操作系統，實現用户跨終端無縫協同體驗，採用全新的微內核設計重塑終端設備可信安全，通過統一 IDE 支撐一次開發，多端部署，實現跨終端生態共享。鴻蒙操作系統為人、設備、場景的互聯互通提供瞭解決方案，代表了面向全場景智慧時代的技術創新。</p><p><img src="https://static.oschina.net/uploads/space/2023/1220/104552_FA8q_2720166.png" referrerpolicy="no-referrer"></p><h4><strong><strong><strong><strong>Spot &amp; Atlas 機器人</strong></strong></strong></strong></h4><p>近年來，美國波士頓動力發佈的每款新機器人都會給人們帶來了視覺上和認知上的強烈衝擊。升級版的四足機器人 Spot，具有 360 度避障功能，可以在不同地形、環境下行走、跑步、攀爬等；新一代 Atlas 雙足人形機器人，擁有 28 個自由度，可以自然連貫地完成跳躍、翻滾、倒立、跳舞、跑酷等動作。波士頓動力機器人代表了當今機器人研發的最先進水平，呈現出廣闊的產業應用前景。</p><p><img src="https://static.oschina.net/uploads/space/2023/1220/104612_UOF2_2720166.png" referrerpolicy="no-referrer"></p><h4><strong>鋰離子動力電池</strong></h4><p>鋰離子動力電池以鋰離子嵌入化合物為正極材料、以碳素材料為負極材料，具有高能量密度、長壽命、輕量環保等優勢。近年來，鋰離子動力電池關鍵核心技術不斷突破，電池系統能量密度達到 255Wh/kg，循環壽命超過 5000 次，熱擴散時間提高至大於 24 小時，安全性能大大提升。作為一種新型能源存儲技術，鋰離子動力電池已在電動汽車、電動輕型車、電動工具、航空航天等領域得到廣泛應用。</p><p><img src="https://static.oschina.net/uploads/space/2023/1220/104627_RaM8_2720166.png" referrerpolicy="no-referrer"></p><h4><strong><strong>無人駕駛航空器</strong></strong></h4><p>無人駕駛航空器是由人為遠程操作或自主程序控制、可執行多種任務的無人飛行器。近年來，隨着動力技術、懸停技術、導航技術、人機交互、集羣技術、人工智能的不斷突破，無人機快速邁向智能化、小型化、集羣化、體系化。大疆、Parrot、3D Robotics 等公司引領全球無人機技術及產業進步。作為一種具備高度靈活性的運載工具，無人駕駛航空器在軍事及民用等諸多領域表現出極具潛力的應用前景。</p><p><img src="https://static.oschina.net/uploads/space/2023/1220/104641_1sWG_2720166.png" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 20 Dec 2023 02:39:59 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271838</guid>
            <link>https://www.oschina.net/news/271838</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Linux 主線內核支持谷歌 Tensor GS101 芯片 & Pixel 6]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.phoronix.com%2Fnews%2FLinux-6.8-GS101-SoC-Pixel-6" target="_blank">根據 Phoronix 的報道</a></u>，Google Tensor GS101 SoC 於 2021 年推出，搭載在 Google Pixel 6 智能手機上。經過兩年多的時間，主線 Linux 內核終於將在即將到來的 Linux 6.8 內核週期中看到對 GS101 SoC 和 Pixel 6 的支持。這意味着 Linux 內核將提供對這些設備的原生支持，而不再依賴於各種 Android/AOSP 下游內核源。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-af38da392f9a814dc517d6eb77c3e5df165.png" referrerpolicy="no-referrer"></p><p>GS101 「Whitechapel」 SoC 是一款八核處理器，混合了 Cortex X1 / A76 / X55 內核、Mali-G78 MP20 顯卡，基於 5nm LPE 三星工藝構建。</p><p>經過多輪代碼審查後，最初的 Google Tensor GS101 支持補丁以及 Pixel 6 智能手機設備樹已在即將到來的 Linux 6.8 週期之前進入三星 SoC 樹的「for-next」分支。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-4ddc6490c7f6e7ba62340afc154b29adbf2.png" referrerpolicy="no-referrer"></p><p>藉助 Pixel 6 「Oriole」 支持，它已經在這個即將成為主線的代碼上進行了測試，可以使用最小的 Busybox initramfs 啓動併成功訪問 shell。</p><p>在最近針對 Tensor/GS101 SoC 支持和 Pixel 6 主板覆蓋範圍的補丁系列中，可以看到 gs101/Tensor SoC 還用於 Pixel6a（bluejay）和 Pixel 6 Pro（raven）手機。 目前，gs101 SoC 和 Oriole 添加了 DT。<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgit.kernel.org%2Fpub%2Fscm%2Flinux%2Fkernel%2Fgit%2Fkrzk%2Flinux.git%2Flog%2F%3Fh%3Dfor-next" target="_blank"> 正如在補丁中看到的那樣</a></u>，SoC 基於 Samsung Exynos SoC，因此許多底層 Exynos 驅動程序和綁定可以重複使用。</p><p>本系列中添加的支持包括：</p><ul><li>cpus</li><li>pinctrl</li><li>CCF implementation of cmu_top, cmu_misc &amp; cmu_apm</li><li>watchdog</li><li>USI uart</li><li>gpio</li></ul><p>這足以使用上游內核啓動到 busybox initramfs 和 shell，在接下來的幾周和幾個月內，Linux 內核將添加更多平台支持。</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 20 Dec 2023 02:24:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271837/linux-6-8-gs101-soc-pixel-6</guid>
            <link>https://www.oschina.net/news/271837/linux-6-8-gs101-soc-pixel-6</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[工信部：將制定符合國情的 Web3.0 發展戰略文件]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">工信部於 12 月 19 日公佈了<span style="background-color:#ffffff">《<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.miit.gov.cn%2Fzwgk%2Fjytafwgk%2Fart%2F2023%2Fart_7eba1016ef5a4d98979b0167f38e4b35.html" target="_blank">對全國政協十四屆一次會議第 02969 號提案的答覆</a>》（即</span>《關於推進 Web3 產業發展的提案》<span style="background-color:#ffffff">）。</span></span></p><p><img alt="" height="284" src="https://static.oschina.net/uploads/space/2023/1220/095646_yU57_4252687.png" width="700" referrerpolicy="no-referrer"></p><p><span style="color:#000000"><span style="background-color:#ffffff">其中提出，下一步將在已開展工作的基礎上，</span>加強與相關部門的協同互動，推動 Web3.0 技術創新和產業高質量發展。</span></p><p style="color:#070707; margin-left:0; margin-right:0; text-align:left"><span style="color:#000000">一是完善頂層設計。加強 Web3.0 調查研究，制定符合我國國情的 Web3.0 發展戰略文件，明晰 Web3.0 發展路徑、技術重點、應用模式，處理好繼承與創新、發展與安全、政府與市場、供給與需求的關係。聚焦政務、工業等重點領域，鼓勵開展 NFT、分佈式應用（DApp）等新商業模式，加速 Web3.0 的創新應用和數字化生態構建。</span></p><p style="color:#070707; margin-left:0; margin-right:0; text-align:left"><span style="color:#000000">二是加強技術研究和監管。支持企業、高校、研究機構開展 Web3.0 技術體系研究，在跨鏈、隱私計算、智能合約等方面實現關鍵核心技術突破。部署區塊鏈安全監管與治理技術研究，開展聯盟鏈技術收斂和跨鏈互認研究，探索兼顧公有鏈開放特性和聯盟鏈易監管特性的區塊鏈技術體系架構。加大數據安全產品研發支持力度，加強網絡產品安全漏洞管理，提升 Web3.0 發展中的網絡和數據安全保護能力。</span></p><p style="color:#070707; margin-left:0; margin-right:0; text-align:left"><span style="color:#000000">三是開展國際交流合作。緊密跟蹤國際政產學研各界關於 Web3.0 的前沿動態。鼓勵科研院所、高校、企業等參與 Web3.0 相關全球標準化活動，推動參與和主導 Web3.0 相關國際標準、事實標準、國際聯盟標準制定，提升國際話語權和規則制定權。加快複合型人才培養，培育富有創新能力的高端人才，建設高水平人才隊伍。</span></p><p style="color:#070707; margin-left:0; margin-right:0; text-align:left"><span style="color:#000000">四是加大技術宣傳和推廣。建好用好已有科普平台資源，通過科普中國等官方新媒體平台的傳播，持續提高公眾對 Web3.0 技術的理解和認識。推動開展分佈式數字身份（DID）等應用試點，探索機構和個人 Web3.0 數字身份認證和數字資產管理體系，建立數據治理和交易流通機制，形成可複製可推廣的典型示範項目。推動 Web3.0 學術進步和技術成果應用，搭建技術和產業應用交流平台，促進 Web3.0 產業創新發展。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 20 Dec 2023 01:57:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271831</guid>
            <link>https://www.oschina.net/news/271831</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[道客加入 openKylin，攜手探索和推廣雲原生技術！]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span>近日，上海道客網絡技術有限公司（以下簡稱」道客「）簽署了 openKylin 社區 CLA（Contributor License Agreement 貢獻者許可協議），正式加入 openKylin 開源社區。</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:center"><img alt="" height="1079" src="https://oscimg.oschina.net/oscnet/up-ab9bed0a81b0e3a2f642b2497de73ff3756.png" width="829" referrerpolicy="no-referrer"></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span><span>「DaoCloud 道客」，雲原生領域的創新領導者，成立於 2014 年底，擁有自主知識產權的核心技術，致力於打造開放的雲操作系統為企業數字化轉型賦能。產品能力覆蓋雲原生應用的開發、交付、運維全生命週期，並提供公有云、私有云和</span>混合雲<span>等多種交付方式。</span></span></p><p><span>成立迄今，道客已在金融科技、先進製造、智能汽車、零售網點、城市大腦等多個領域深耕，是國家級「專精特新」小巨人企業、上海市高新技術企業、上海市&nbsp;「科技小巨人」&nbsp;企業和上海市&nbsp;「專精特新」&nbsp;企業，併入選了科創板培育企業名單。</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:center"><img alt="" height="410" src="https://oscimg.oschina.net/oscnet/up-30755a6d93b64206b86f9831c2758798f8b.png" width="940" referrerpolicy="no-referrer"></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span>加入 openKylin 社區後，道客將與 openKylin 共同探索和推廣雲原生技術。作為在雲原生領域的領跑企業，道客擁有前沿的創新技術、豐富的雲原生實踐經驗和廣泛的生態連接，這將促進雲原生技術在 openKylin 操作系統上的應用和發展，推動 openKylin 生態圈的進一步擴大。</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span>同時，道客將與 openKylin 共享開源資源。openKylin 開源社區和道客都致力於開源技術的推廣和共享。雙方可以分享各自的開源項目和經驗，互相學習和借鑑，這有助於加速技術的發展和創新，建立互利共贏的良性循環。</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span>此外，雙方可以共同組織技術交流會議、研討會和培訓活動，為雙方成員以及外部其他開源社區成員提供學習和交流的機會。雙方將聯合推動開源項目的合作開發，促進項目之間的互操作性和協同工作。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 20 Dec 2023 01:27:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271824</guid>
            <link>https://www.oschina.net/news/271824</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[開源不掙錢？這個項目上線半年月入超 30w]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>很興奮的告訴大家，Sealos 自從 6 月份上線以來，<strong>僅半年時間註冊用户已經突破 7 萬，月收入超過 30w</strong>，本文來向大家介紹我們是怎麼做開源商業化的。每月平均增速超過 40%，而且這些收入大部分來自用户充值，或者是通過開源社區主動找到我們付費。</p><h2>商業化的重要性</h2><p>作為一家創業公司做開源，我們除了融資那點錢，沒有別的收入來源，不像大廠可以有其它現金流來補開源這塊，我們不考慮商業化那就會死，死了項目就無法維護和加大投入，最終就是用户和我們雙輸。</p><p>而有了能走通的商業模式，我們就能創造營收，有了營收就可以招更多的人，融更多的錢，加大更多的投入，發展更大的市場，客户多了邊際成本就可以下降，每個用户也就能得到價格更便宜，質量更好的產品，是個良性循環，資金像血液一樣驅動整個項目蓬勃向前發展，最終用户和我們都受益，雙贏。</p><p>fake.js 作者因為沒有好的商業模式而關停項目就實屬可惜。</p><p><img src="https://oscimg.oschina.net/oscnet/up-3b6082bb17923dd8037723829e91d0bc16c.webp" alt="" referrerpolicy="no-referrer"></p><p>當然我也非常敬重那些非常有情懷只做免費開源視金錢如糞土的人，不過在我看來錢是工具，是槓桿，有這個可以讓項目幾十上百倍速度發展。</p><h2>那為什麼不閉源</h2><p>既然要收錢幹嘛還要開源？來搞偽開源嘛？</p><p>首先，我自己乃至我們整個團隊都覺得開源是一件很酷的事情，你的代碼是需要給很多人看的，要求自然就高，開源確實是在寫代碼鄙視鏈的頂端，熱愛是內驅因素，<strong>看到 Star 漲就是開心，看到上榜就是歡樂</strong>。</p><table><thead><tr><th><img src="https://oscimg.oschina.net/oscnet/up-d66a25551f2412f7e942ca91d5825bf9505.png" alt="" referrerpolicy="no-referrer"></th><th><img src="https://oscimg.oschina.net/oscnet/up-889096cd75a3e0dc9539bf680434900a7f2.png" alt="" referrerpolicy="no-referrer"></th><th><img src="https://oscimg.oschina.net/oscnet/up-94a70962f6c6633dc013cb73b41d0e2d91d.png" alt="" referrerpolicy="no-referrer"></th></tr></thead></table><p>第二，確實因為開源是非常好的協作模式，你的客户更容易提需求，更容易定製自己需要的東西，更容易給社區貢獻一起共建。我們能發展這麼好社區力量至少佔了 30%。</p><p>第三，本着儘可能對用户負責，我希望<strong>哪怕我這家公司掛了，我們項目還在，用户還能繼續用我們的東西</strong>，而不用提心掉膽一個小公司死了我的業務怎麼辦，最壞情況是自己還可以搭一套。</p><ul><li>Sealos: <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Flabring%2Fsealos" target="_blank">https://github.com/labring/sealos</a></li><li>FastGPT: <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Flabring%2FFastGPT" target="_blank">https://github.com/labring/FastGPT</a></li><li>Laf: <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Flabring%2Flaf" target="_blank">https://github.com/labring/laf</a></li></ul><p>當然，開源確實會帶來更大的客户流量，<strong>我們公司 0 銷售人員，靠的全是客户主動找上我們</strong>，不開源幾乎很難做到。而且開源是一個試金石，你技術不行產品力不行就是做不起來，開發者都挑剔的很，東西不好不管是平台背書還是使勁宣傳都沒啥卵用。</p><h2>開源做太好，大家就不付錢了？</h2><p>其實有些時候確實是這樣，你做差了用户不會用，你做太好了用户不掏錢，所以現在很多開源項目會<strong>區分企業版和開源版</strong>，我是不喜歡這種方式的，因為維護兩個版本是很累的事，每次都需要考慮哪些東西合併企業版，哪些東西不合並，時間一久兩個版本就直接分叉了，後面直接索性開源版不投入了，這種方式很彆扭，不高級。</p><p>還有一種就是<strong>服務收費</strong>，大客户願意掏錢買平安，找最專業的團隊維護他們的系統，官方團隊肯定最專業，是個不錯的方式。但是這種有兩個問題，首先項目團隊得撐到那一天，大客户通常比較認你的市場地位，發展到一定知名度的時候可能才有這個機會，很多人沒到這一天自己就掛了。其次，這種模式也挑項目，通常重要性比較高的東西，像網關，數據庫，安全這些關乎企業生死的東西願意掏錢。</p><p>然後就是雲服務，這是一種很香的商業模式，<strong>用户看了開源確實想用的時候，通過雲服務是最快能用起來的方式。</strong></p><p><img src="https://oscimg.oschina.net/oscnet/up-ee607865098282b09f4016ab81ff0c69b65.jpg" alt="" referrerpolicy="no-referrer"></p><h2>我們的商業模式</h2><p>Sealos 是做<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsealos.run%2Fdocs%2FIntro" target="_blank">雲操作系統</a>的，所以雲服務就是就是我們天生不二之選，所以我們幾乎從創業第一天開始就在做<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcloud.sealos.io" target="_blank">雲服務</a>。</p><p>Sealos 特別有意思，在誕生第一天起就是收費的，最早期時是賣安裝包，代碼開源但是安裝包收費，如果用户自己根據源碼去構建安裝包可能需要一週時間，而拿 168 元就可以立馬下載，所以賣了很多。而對於我而言早就寫好了機器人去做這些事，完全實現了睡後收入，這樣有更多精力來做新功能。</p><p>即便 Sealos 的開源做的非常完美，用户還是有非常大可能性用雲服務，因為雲服務提供了額外的附加值：</p><ul><li><strong>使用上更簡單可以打開瀏覽器直接用。</strong></li><li><strong>我們維護肯定比你自己維護專業。</strong></li><li><strong>用户一多每個用户成本會下降。</strong></li><li><strong>持續升級更新。</strong></li></ul><p>但凡用户是可以用公有云的大概率還是會用，而不會去自己吭哧吭哧搭建。</p><p>這裏有非常需要注意的一點，就是開源提供了核心能力，商業化提供了附加值，而附加價值通常是讓用户更方便了，但是用户通常願意為附加值付出的價格是非常有限的，一旦你太貴就會導致用户拿開源自己搭建。這就造成一個非常尷尬的境地，收少了養不活自己，收多了用户自己搭。</p><p>所以雲服務還有一個非常重要的邏輯，就是成本轉移，<strong>以前用户需要付給別的廠商的錢現在付給你了，這樣用户付給你的錢就多了，用户需要支出的總成本還可能降低了</strong>，你的商業模式中讓用户總成本降低是非常核心關鍵的部分。比如用户自建，還是得買服務器吧，而用我們服務就可以把買服務器的錢花在我們這，享受更便捷成本更低的服務。</p><p><img src="https://oscimg.oschina.net/oscnet/up-39d7662898a5d90f1ea33420409d2401732.jpg" alt="" referrerpolicy="no-referrer"></p><p>私有云情況就不一樣了，用户必須要自己搭建，這個時候我們就延續了 Sealos 一開始的商業模式，但是更牛逼了，而不是收安裝包的下載費用了，我們在 Sealos 內部實現了計量系統，用户可以通過 Licence 充值，即便私有云也是有賬户餘額，按量計費，用完了就得續 Licence，拿着一個加密文件到集羣中 apply 額度就充進去了。這是個絕妙的構想：</p><ul><li>很多私有軟件的授權過程很噁心，需要採集硬件信息什麼的，Sealos 不需要。</li><li>實現了公有云和私有云計費方式的完全統一，順便一起解決了企業內部人員配額問題。</li><li>針對大小不同的客户都有合理的價格，不會出現小客用不起，大客不敢用的情況。</li></ul><p>這樣收費會不會讓用户反感？</p><p>我還是覺得提供價值合理收費天經地義，原則也是儘可能找到<strong>讓客户與項目整體利益最大化的點</strong>，收費貴了傷害了用户利益，收費便宜了我們沒法快速前進，要平衡好這中間的利益關係，是個矛盾統一體。</p><p>私有云技術上也得有很強的實力才行，我們推崇「自助式私有云」，也就是大部分用户是有能力自己完成整個交付過程的，幾乎不用我們幹預，這也是能把價格降低的核心因素，比如 <strong>512 元的私有云集羣你敢想？任何一家企業做這種生意都會虧死吧？</strong> 但是這個價格 Sealos 能做，因為我們可以標準化，自助式，規模化，這樣小的集羣未來我們可以賣 10 萬套。</p><h2>總結</h2><p>開源商業化是個非常有意思的過程，比單純做開源有趣的多，而且能真的把雪球滾起來，形成良性循環，最終固定成本提高，邊際成本極速下降，用户就能享受到優質的便宜的產品，項目方也可以盆滿缽滿。</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 19 Dec 2023 09:36:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/4148359/blog/10322473</guid>
            <link>https://my.oschina.net/u/4148359/blog/10322473</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Arm 裁員 70 多名中國工程師，擬重組中國軟件業務]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">彭博社援引知情人士<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ffortune.com%2Fasia%2F2023%2F12%2F18%2Farm-lays-off-over-70-software-engineers-in-china-and-will-relocate-some-of-the-jobs-outside-the-country-as-u-s-chip-restrictions-take-hold%2F%3Fref%3Dbiztoc.com" target="_blank">消息稱</a>，A<span style="background-color:#fefefe">rm</span> 最近在中國<span style="background-color:#ffffff">解僱了 70 多名軟件工程師，並將一些職位遷移到了亞洲以外的地區。</span></span></p><p><span style="color:#000000"><span style="background-color:#ffffff">在被裁撤職位的員工中，</span><span style="background-color:#ffffff">約有 15 人將被安排從事與中國相關項目的不同崗位上。而這些被</span><span style="background-color:#ffffff">裁掉的職位將暫由合同制軟件工程師頂上，這些人都曾參與涉及 Arm 全球業務的項目。</span></span></p><p><span style="color:#000000"><span style="background-color:#fefefe">Arm 在一份聲明中表示：「為了確保中國軟件生態系統能夠充分發揮 Arm 性能和功能的優勢，Arm 正在重組其中國軟件工程資源，將重點放在對本地開發人員的直接支持上。」&nbsp;</span></span></p><p><img height="335" src="https://oscimg.oschina.net/oscnet/up-0ac353574d344b4b6bfff75e8de619d946c.png" width="500" referrerpolicy="no-referrer"></p><p><span style="color:#000000"><span style="background-color:#ffffff">今年 11 月，由於智能手機銷量下滑，Arm 發佈了令人失望的營收預期。</span><span style="background-color:#fefefe">Arm&nbsp;</span><span style="background-color:#ffffff">首席財務官 Jason Child 在與對分析師的對話中表示，由於世界其他地區的增長速度更快，中國對 Arm 全球銷售額的貢獻率從 25% 下降到 20%。</span></span></p><p><span style="color:#000000">ARM 此次裁員實際上也反映了行業內的一些普遍做法。今年早些時候，由於<span style="background-color:#ffffff">電子產品需求不振而導致半導體行業低迷</span>，包括高通公司在內的主要芯片公司都削減了全球員工水平。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 19 Dec 2023 08:03:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271747/arm-lays-off-over-70-software-engineers-in-china</guid>
            <link>https://www.oschina.net/news/271747/arm-lays-off-over-70-software-engineers-in-china</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[OpenAI 發佈安全指南，董事會有權推翻 CEO 決策]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">OpenAI 正在擴展其內部安全流程，<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopenai.com%2Fsafety%2Fpreparedness" target="_blank">發佈</a>了一個名為 Preparedness Framework (測試版) 的指導方針，旨在幫助跟蹤、評估、預測和防範未來將存在的高級人工智能模型或前沿模型相關的風險。</span></p><p><span style="color:#000000"><span style="background-color:#ffffff">該框架提出：</span></span><span style="color:#000000"><strong>對模型進行評估並開發持續更新的「記分卡」</strong>。</span><span style="color:#000000">評估結果將有助於評估風險並衡量緩解策略的有效性。記分卡</span><span style="color:#000000">可以衡量和跟蹤潛在危害的各種指標，例如模型的功能、漏洞和影響；並在達到某些風險閾值時觸發審查和幹預措施。「我們的目標是探究不安全因素的具體邊緣，以有效降低所揭示的風險。」</span></p><p><span style="color:#000000"><img alt="" height="332" src="https://oscimg.oschina.net/oscnet/up-f76858a5f38d3d5e9ef431929186217caa2.webp" width="300" referrerpolicy="no-referrer"></span></p><p><span style="color:#000000">他們將<span style="background-color:#ffffff">風險劃分為四個類別和四個級別。類別包括網絡安全、CBRN（化學、生物、輻射、核威脅）、説服和模型自主，風險級別分為低、中、高和嚴重。只有緩解後得分在"中"或以下的模型才能部署，得分在"高"或以下的模型才能進一步開發針對高風險或臨界（緩解前）風險級別的模型，則將實施額外的安全措施。</span></span></p><p><span style="color:#000000">此外，OpenAI <span style="background-color:#ffffff">還將創建一個專門的團隊來實施該框架，監督技術工作和安全決策的運作結構。Preparedness 團隊將開展技術工作，檢查前沿模型的侷限性，進行評估並綜合報告；而跨職能的安全</span>諮詢<span style="background-color:#ffffff">小組，則負責審查所有報告並將其提交給領導層和董事會。&nbsp;</span></span></p><p><span style="color:#000000">其中值得關注的一條規則是，<strong>雖然領導層是決策者，但董事會有權推翻決策</strong>。具體來説，Preparedness 團隊每月將向內部安全諮詢小組發送報告，該小組對其進行分析後，向 OpenAI 首席執行官 </span><span style="background-color:#ffffff; color:#333333">Sam Altman&nbsp;</span><span style="color:#000000">和董事會提交建議。</span><span style="background-color:#ffffff; color:#333333">Altman&nbsp;</span><span style="color:#000000">和公司高層可以根據這些報告決定是否發佈新的 AI 系統，但董事會有權撤銷這一決定。</span></p><p><span style="color:#000000">在&nbsp;OpenAI 宣佈這一消息之前，其主要競爭對手 Anthropic 也發佈了幾份關於 AI 安全的重要聲明。譬如最近發佈的</span>&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.anthropic.com%2Findex%2Fanthropics-responsible-scaling-policy" target="_blank">Responsible Scaling Policy</a><span style="color:#000000">，一個定義特定的框架 AI&nbsp;安全級別以及用於開發和部署人工智能模型的相應協議。</span></p><p style="text-align:start"><span style="color:#000000">OpenAI 和 Anthropic 兩個框架在結構和方法上都存在顯着差異。 Anthropic 的政策更為正式和規範，將安全措施與模型能力直接掛鈎，如果無法證明安全性，則暫停開發。 OpenAI 的框架則更加靈活、更具適應性，設置了觸發審查的一般風險閾值，而不是預定義的級別。</span></p><p style="text-align:start"><span style="color:#000000">專家<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fventurebeat.com%2Fai%2Fopenai-announces-preparedness-framework-to-track-and-mitigate-ai-risks%2F" target="_blank">認為</a>，這兩種框架都有各有優缺點，但 Anthropic 的方法可能在激勵和執行安全標準方面具有優勢。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 19 Dec 2023 03:16:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271695/openai-preparedness-framework-ai-risks</guid>
            <link>https://www.oschina.net/news/271695/openai-preparedness-framework-ai-risks</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[有道基於 Amoro Mixed Format 構建準實時湖倉實踐]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h2>作者簡介</h2><p><strong>謝怡</strong>，網易有道高級大數據開發工程師，目前主要參與實時計算和湖倉一體方向的研發</p><p><strong>王濤</strong>，網易資深平台開發工程師，主要從事大數據和湖倉平台建設</p><h2>業務背景</h2><p>有道的數據層架構可分為離線和實時兩部分，離線計算主要採用 Hive、Spark，採用批處理的方式定時調度。實時部分採用 Flink+Doris（版本 0.14.0）構建實時數倉，用於處理實時埋點日誌、業務庫變更數據。ODS 層數據源為 Kafka 埋點日誌、數據庫業務數據，DWD、DWS 層數據通過 Flink 計算引擎加工，寫入 Doris 中。同時將 Doris 數據定時同步至 Hive，用於離線調度計算。該架構存在如下問題：</p><ol><li>開發和運維成本高：Flink SQL 與 Hive/Spark 語法差異大，Hive/Spark 向 Flink 遷移成本高，Flink 大狀態任務運維和優化難度高。</li><li>在全增量流式讀取場景的支持性較弱，難以滿足有道場景下 Flink 全量讀取 Hive 歷史數據及 Kafka 增量數據的需求。</li><li>流批存儲不統一，造成雙倍的數據開發和存儲成本，且容易造成數據口徑不一致。</li><li>Doris 作為數據孤島，採用 SSD 存儲，成本較高，不適合大規模詞典日誌數據存儲，長期兩套存儲方案不利於成本優化。</li><li>需要持續地在 Hive 和 Doris 之間導入導出數據，鏈路過長容易引入不穩定因素，比如大規模數據寫入時，Doris 導出 Hive 偶發數據丟失，並且不支持儲存長 String 類型的字符串。</li></ol><p><img src="https://oscimg.oschina.net/oscnet/up-489a8fdd6efa0a9ee2676073bb304b58d6b.png" alt="" referrerpolicy="no-referrer"> 結合上述問題，有道希望從 Hive 升級為湖倉一體方案，支持流批讀寫，統一數據存儲。並基於 Spark/Trino/Hive ETL 搭建分鐘/小時級近實時數倉，降低開發和運維成本，在絕大多數場景下替換 Doris 的分鐘級數倉場景，減少數據庫數據同步成本，有效降本增效。</p><h2>引入 Amoro Mixed Hive</h2><p>Amoro Mixed Hive 提供了 Hive 讀寫兼容、數據自優化的能力，基於此提供了兩種不同時效性讀取的能力：</p><ol><li>Merge on read 可以達到分鐘級數據新鮮度</li><li>Hive 讀可以達到小時級新鮮度，同時也實現了對 Hive 數據的更新和刪除，下游老 Hive 任務無需作任何修改即可享受數據時效性提升到小時級，對於習慣使用 Hive 的分析師來講可以做到無感，降低了新技術的使用門檻。</li></ol><h3>Hive 表格式兼容</h3><p>Amoro 為了兼容 Hive 設計了 Mixed Hive，Mixed Hive 的存儲結構如圖， BaseStore 是一張獨立的 iceberg 表，Hive 表作為 BaseStore 的一部分，ChangeStore 是一張獨立的 iceberg 表, Mixed Hive 支持：</p><ul><li>schema、partition、types 與 Hive format 保持一致</li><li>使用 Hive connector 將 Mixed Hive 表當成 Hive 表來讀寫</li><li>可以將 Hive 表原地升級為 Mixed Hive 表，升級過程沒有數據重寫和遷移，秒級響應</li><li>具備湖倉一體的特性，包括基於主鍵 upsert，流式讀寫，ACID，time travel 等功能</li></ul><p>Hive 讀寫兼容的特性實現 Hive 表向 Mixed Hive 的無縫遷移， 並且可以做到上下游無感知。 <img src="https://oscimg.oschina.net/oscnet/up-3550dd6d29e576a93536d882286c7556cf4.png" alt="" referrerpolicy="no-referrer"></p><h3>Hive 數據更新</h3><p>Amoro 藉助 Self-optimizing 將實時寫入的變更合併到 Hive， 實現了 Hive 數據更新。Self-optimizing 目標是基於新型數據湖表格式打造像數據庫，傳統數倉一樣開箱即用的流式湖倉服務，Self-optimizing 包含但不限於文件合併，去重，排序。 Amoro 將表中的文件按照大小分為了兩類： <img src="https://oscimg.oschina.net/oscnet/up-8b8dffb1776d5214b68ada646b63f7eb500.png" alt="" referrerpolicy="no-referrer"></p><ul><li>Fragment File：碎片文件，默認配置下小於 16 MB 的文件，此類文件需要及時得合併成更大的文件，以提升讀取性能</li><li>Segment File：默認配置下大於 16MB 的文件，此類文件已經具備一定的大小，但還不到理想的 128MB。</li></ul><p>基於文件分類，Amoro 將文件優化任務分為三類：Minor optimizing、Major optimizing、Full optimizing，應對寫友好、讀友好的場景，在保證寫入性能同時，保證讀性能的平衡。特別地 Full optimizing 會將實時寫入的數據定時合併到 Hive 目錄，實現 Hive 數據視圖的更新，提高 Hive 數據的時效性。 持續的 Self-optimizing 可以有效優化表內文件的大小分佈，降低小文件數，減少 AP 查詢的性能開銷。</p><h2>落地方案</h2><h3>數據鏈路改造</h3><p><img src="https://oscimg.oschina.net/oscnet/up-7b7422983d7cbce206f28492bc676b96301.png" alt="" referrerpolicy="no-referrer"> 基於 Amoro，我們對於傳統鏈路進行了以下改造：</p><ol><li>開發方式上，貼源層的數據導入從 Flink SQL 方式改造成基於實時數據湖平台，業務通過簡單的交互即可完成 Hive 升級和入湖鏈路的構建。</li><li>通過數據傳輸定時同步數據庫到 Hive 的鏈路，改造成實時 Mixed Hive format 表，數據時效性提升的同時，也提前了離線 workflow 基線，數據產出時間大大提前。</li><li>Amoro 替換 Doirs，降低數據鏈路的複雜度，做到存儲的流批統一，提高了穩定性。</li><li>數據查詢端，通過直接查詢 Mixed Hive format 表實現數據時效性的提升,數據報表時效性可以達到分鐘級；原來查詢 Hive 的報表鏈路時效性可以提升到小時級。</li></ol><h3>實時數據湖平台共建</h3><p>為了屏蔽底層存儲變更對於業務開發的學習成本， 網易杭研基於 Amoro 在內部提供了實時數據湖開發平台，封裝了從 Hive 表升級到構建數據入湖全流程，幫助用户一站式完成開發和運維，降低用户的使用門檻和成本。</p><ul><li>Hive 表升級到 Mixed Hive 表，包含主鍵配置、分區鍵配置。</li><li>創建源端到 Mixed Hive 表的入湖任務, 支持數據庫 cdc 入湖、日誌入湖。 
  <ul><li>基於 NDC（網易數據運河） 打通從源端數據庫 binlog 直接輸出到 Mixed Hive 表全增量入湖鏈路。</li><li>支持配置日誌 kakfa 到 Mixed Hive 表的實時入湖鏈路。</li></ul></li></ul><p><img src="https://oscimg.oschina.net/oscnet/up-ad976e460e398b1720879654ad706a5dab6.jpg" alt="" referrerpolicy="no-referrer"> 通過用户調研，相對於引入 Amoro 之前基於 Flink 實時入湖的架構，用户的開發成本下降 65%， 運維成本下降 40%。 通過實時數據湖平台實現 Flink 入湖、用户編寫 Spark/Trino sql 實現 DWD、DWS 層的 ETL 加工，構建分鐘、小時級近實時數倉，極大降低了用户的開發成本。並且該方案存儲流批統一的特點，也降低了用户數據開發和數據修復的成本。同時，Amoro 全量/增量 Flink 流式讀取的特性，也可以滿足對時效性要求更高的流式處理場景。</p><p>在開源 Amoro 和杭研實時數據湖平台之上，有道也深度參與了社區貢獻和平台共建，包括：</p><ul><li>貢獻 Mixed Format 支持 ORC 格式，解決 Amoro 只支持 Parquet 格式 Hive 表的限制，避免 ORC 到 Parquet 表的拷貝才能升級的流程， 預計節省冗餘存儲 20TB 存儲</li><li>搭建 Amoro 平台監控體系、自動運維優化，保障線上表質量、數據時效性、集羣穩定性</li><li>Trino 引擎查詢 Amoro 支持 Hadoop-proxy，基於有道 HDFS ranger 實現權限管理</li><li>多項 Amoro Optimizer 優化以提高 Optimizer 穩定性，如：Flink Optimizer 任務重試上報 AMS</li><li>多項實時數據湖平台優化以提升可靠性和用户體驗，如：實時數據湖平台支持 Amoro 高可用</li></ul><p><img src="https://oscimg.oschina.net/oscnet/up-65a69f60ca3247bcebca2f7e1a06d2b6c24.png" alt="" referrerpolicy="no-referrer"></p><h3>查詢優化</h3><p>目前有道主要使用 MPP 引擎 Trino 對 Mixed Hive 表進行分鐘級時效性的 OLAP 查詢。在大多數場景下，默認的查詢性能符合要求。對於查詢響應要求較高的一些場景，發現 Mixed Hive 查詢性能達不到業務要求，並且比其它業務環境的查詢性能差。Amoro 和有道同學分析 Trino 的查詢 profile 和，底層 HDFS 性能，發現了三個優化點,優化後 Mixed Hive 表的查詢性能提升明顯，查詢耗時下降了 92%，基本接近 Hive 靜態數據查詢，並且已經可以滿足業務的要求。三個優化如下：</p><ol><li>對 Query Plan 階段，Amoro 改寫了原本的 Plan 邏輯，將需要用來判斷數據是否被刪除的 Sequence Number 直接從一次多線程的 Plan 中獲取，減少了之前單獨使用一個額外的單線程 Plan 去獲取該變量的開銷；</li><li>對於數據傾斜的問題，Amoro 對 delete 文件開銷較小但文件數量較多的任務進行了更細粒度的拆分，通過提高並行度，性能提升 50%。</li><li>有道對 HDFS 的優化，在分析過程中發現通過 Router 訪問的 RPC 響應時長 .95 達到 262ms, 遠超正常集羣的 5ms 以內，通過將 HDFS 訪問切到直連 HDFS 集羣，rpc 響應時間降為 .95 耗時 15ms，Mixed Hive 表平均查詢耗時下降 83.3%。 另外，在可以降低時效性要求的場景，直接查詢 Mixed Hive 的 BaseStore 也可達到分鐘級的時效性，查詢性能更好，可以與 Hive 查詢靜態數據相當。</li></ol><h3>應用情況</h3><p>2023 年初，Amoro 在有道開始上線應用，目前線上表數量 500+張、100+ TB 存儲、日存儲增量 200GB/天，Spark/Trino 日均查詢量 6000+，覆蓋有道 10+業務部門，在續報、投放等多個場景落地了分鐘級近實時數倉，並且通過 Amoro 託管的數據自優化功能，有效避免數倉業務中的小文件問題，達到持續降本提效的效果。</p><p>在替換 Doris 的實踐上， 有道詞典已經完成了 Amoro 替換 Doris，下掉了 Doris 集羣的節點。有道精品課也逐步以 Amoro 替代 Doris，預計明年上半年完成替換。</p><p>在構建近實時數倉實踐上，三個業務部門已經完成了基於 Amoro 搭建近實時數倉，整條鏈路的延遲最低可達 3mins。同時，實時增量寫 Mixed Hive 表替代傳統的全量數據傳輸任務，提前了離線 workflow 基線，ADS 表產出時間最快可提前 6 小時。</p><p>業務收益上，數據產出效率由 T+1 提升到小時級/分鐘級， 實現更快更有效的決策分析（投放、銷售策略等），為有道多個部門帶來了成本降低或效率提升，比如詞典社區視頻播放時長提升 10%， 點擊率提升 4.6%。</p><h2>社區貢獻</h2><p>在 Amoro 開源社區，有道已有 13 個 PR 合併，包括：</p><ul><li>Mix Table Format 支持 ORC 文件格式</li><li>Flink DDL 支持計算列和 Watermark</li><li>Trino 引擎支持 hadoop-proxy</li><li>支持 HTTP 請求創建 optimizer group</li><li>刪表操作優化</li><li>Flink Optimizer failover 重試上報 AMS</li></ul><h2>未來規劃</h2><ol><li>在查詢性能方面，目前 Amoro 在查詢響應要求高的絕大部分場景下 AP 查詢性能已基本滿足用户需求。平台層目標是保證 90% 查詢響應耗時響應在 5s 以內，基於 SSD 的 Doris 平均查詢時間為 1.8s，Amoro 優化後的平均查詢時間在 5s ，可以滿足絕大部分查詢場景。未來將持續優化查詢性能，比如 Full optimize 中引入 Z-order 提升 data skiping 的命中率等。</li><li>當前入湖任務是單表單任務，有大量的變更少的數據庫表，入湖任務資源利用率相對較低。杭研實時數據湖平台已上線 Flink Session 入湖，複用 Session 的 JM/TM 資源，優化入湖任務的資源利用率。預計將減少入湖任務的內存、CPU 資源約 30%~50% 左右。</li><li>Paimon 在 Flink partial update 的場景下有較好的可用性，未來計劃通過 Amoro 嘗試落地。我們希望藉助 Amoro 的 Unified Catalog，統一管理 Mixed Hive 表、Paimon 表、Mixed Iceberg 表，像使用 Mixed Hive 一樣使用 Paimon 表，保留用户當前基於 Amoro 的開發體驗。</li></ol><hr><p><strong>End~</strong></p><p>如果你對<strong>數據湖，湖倉一體、table format 或 Amoro 社區</strong>感興趣，歡迎聯繫我們深入交流。</p><p><strong>關於 Amoro 的更多資訊可查看：</strong></p><ul><li><strong>官網</strong>：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Famoro.netease.com%2F" target="_blank">https://amoro.netease.com/</a></li><li><strong>源碼</strong>：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNetEase%2Famoro" target="_blank">https://github.com/NetEase/amoro</a></li></ul><p><strong>社羣交流</strong>：搜索 <em><strong>kllnn999</strong></em>，添加蘆田愛菜小助手微信加入社羣</p><p><img src="https://oscimg.oschina.net/oscnet/up-842de6cc219b0043ce1f88ec898c7c7ec83.jpg" alt="" referrerpolicy="no-referrer"></p><p>作者：謝怡 &amp; 王濤</p><p>編輯：Viridian</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 19 Dec 2023 03:14:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/6895272/blog/10322356</guid>
            <link>https://my.oschina.net/u/6895272/blog/10322356</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Adobe 放棄收購 Figma，需支付 10 億美元補償費]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>12 月 18 日，Figma 聯合創始人兼 CEO <u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.figma.com%2Fblog%2Ffigma-adobe-abandon-proposed-merger%2F" target="_blank">發佈文章</a></u>，宣佈在 15 個月的監管審查程序後，Figma 與 Adobe 認為二者的收購提議已<strong>不會獲得監管批准，決定停止本次收購</strong>。因交易終止，Adobe 需要向 Figma <u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.sec.gov%2FArchives%2Fedgar%2Fdata%2F796343%2F000114036122033413%2Fny20005310x2_8k.htm" target="_blank">支付</a></u>一筆 10 億美元現金的補償費。</p><p>Adobe 在 2022 年 9 月<u><a href="https://www.oschina.net/news/210475/adobe-to-acquire-figma">宣佈</a></u>以 200 億美元收購開發在線設計協作軟件的創業公司 Figma，並表示收購後 Figma 將保持自主運行。</p><p><img src="https://oscimg.oschina.net/oscnet/up-bf6c1fe7a671d0abebcca4cc84a6f1c39da.png" referrerpolicy="no-referrer"></p><p>這是 Adobe 歷史上金額最高的一筆收購案。但這筆收購案引發了監管機構對於大型科技公司收購潛在競爭對手的創業公司會增強其市場力量的擔憂。Adobe 則辯解稱它與 Figma 基本不存在競爭關係。</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 19 Dec 2023 02:34:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271682/figma-adobe-abandon-proposed-merger</guid>
            <link>https://www.oschina.net/news/271682/figma-adobe-abandon-proposed-merger</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Dubbo 3.3.0-beta 版本正式發佈]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="text-align:justify">近日，Apache Dubbo 發佈了 3.3 分支大版本 3.3.0-beta.1，相較於 3.2 系列版本，3.3.0-beta 引入了一些重量級的功能升級，按照社區規劃，3.3 也將是 Dubbo3 非常重要的一個里程碑大版本，在 3.3.0 首個正式版本之後 Dubbo3 將正式進入長期穩定維護態，即標誌着 Dubbo3 作為面向雲原生時代的下一代微服務框架將具備規劃的所有核心功能。</p><p style="text-align:justify">讓我們先快速看一下 3.3.0-beta.1 版本為我們帶來了哪些核心能力升級吧：</p><ul><li><strong>全新升級的 Triple 協議，</strong>Triple 協議可同時運行在 HTTP1/2 之上，與 gRPC 保持 100% 兼容的同時，支持 cURL 和瀏覽器直接訪問。</li><li>新發布一系列<strong>&nbsp;Spring Boot Starter 組件</strong>，包括 Zookeeper, Nacos, Sentinel 等，大幅降低開發過程中的依賴管理負擔。</li><li><strong>Rest 風格的編程註解支持</strong>（涵蓋 Spring MVC、JAX-RS），藉助 Dubbo 的多協議發佈機制，可以輕鬆的將 RPC 服務發佈為標準的 HTTP 端點，簡化前端接入成本。</li><li><strong>Dubbo AOT</strong>（GraalVM Native Image）正式發佈，特定場景下啓動速度提升 10 倍，內存等資源消耗降低 4 倍。</li><li>升級&nbsp;<strong>JDK 21&nbsp;</strong>支持，增加 Project Loom 協程支持。</li><li><strong>可觀測性</strong>進一步提升，進一步提升 metrics 統計指標，簡化 tracing 等使用。</li></ul><p style="text-align:justify">接下來，我們將對其中的一些重點功能進行更深入的講解。</p><span id="OSC_h3_1"></span><h3>Spring Boot Starters</h3><p style="text-align:justify">3.3.0-beta.1 版本發佈的 Starter 組件，可以大幅簡化 Spring Boot 用户的應用開發，以 Zookeeper 註冊中心為例，新版本的開發只需要增加以下一個依賴即可。可以通過&nbsp;<u><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fstart.dubbo.apache.org%2F%253Fspm%253Da2c6h.13046898.publish-article.3.4b9b6ffaLAbqGN" target="_blank">https://start.dubbo.apache.org</a></em></u>&nbsp;生成項目快速體驗。</p><pre><code>&lt;dependency&gt;
    &lt;groupId&gt;org.apache.dubbo&lt;/groupId&gt;
    &lt;artifactId&gt;dubbo-spring-boot-starter&lt;/artifactId&gt;
&lt;/dependency&gt;
&lt;dependency&gt;
    &lt;groupId&gt;org.apache.dubbo&lt;/groupId&gt;
    &lt;artifactId&gt;dubbo-zookeeper-spring-boot-starter&lt;/artifactId&gt;
&lt;/dependency&gt;</code></pre><p style="text-align:justify">同樣的，還有 dubbo-curator5-zookeeper-spring-boot-starter、 dubbo-nacos-spring-boot-starter、 dubbo-sentinel-spring-boot-starter、 dubbo-seata-spring-boot-starter 、 dubbo-observability-spring-boot-starter、 dubbo-tracing-otel-zipkin-spring-boot-starter 等。</p><span id="OSC_h3_2"></span><h3>Dubbo AOT 靜態化（GraalVM Native Image）</h3><p style="text-align:justify">Dubbo AOT 是 Dubbo 3.3.0-beta 版本發佈的靜態化方案支持，它基於 GraalVM Native Image 實現，旨在大幅提升 Dubbo 應用的啓動與運行速度。可以通過&nbsp;<u><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fstart.dubbo.apache.org%2F%253Fspm%253Da2c6h.13046898.publish-article.4.4b9b6ffaLAbqGN" target="_blank">https://start.dubbo.apache.org</a></em></u>&nbsp;快速生成包含 GraalVM 支持的項目，快速體驗，以下是測試環境的一些運行效果總結。</p><p style="text-align:justify">Native 的可視性文件比 Jar 包方式的啓動耗時降低了 12 倍+，在客户端應用，它的啓動耗時降低了 11 倍+。所以在剛剛提到的 Serverless 場景上，它能提供一個非常好的啓動速度。在擴容的時候能夠達到秒級，甚至達到毫秒級。</p><p style="text-align:center"><img src="https://pic3.zhimg.com/80/v2-3afe07303b9f9375b5d15419d3f69376_720w.webp" referrerpolicy="no-referrer"></p><p style="text-align:justify">通過靜態化執行文件執行後，比都為 Jar 包的情況，第一次調用的耗時降低 6 倍。這第一次調用代表的是預熱的時長，以及第一次需要解析的類，包括資源的情況等等。這讓我們在 Serverless 場景下能夠瞬間達到性能峯值。</p><p style="text-align:center"><img src="https://pic3.zhimg.com/80/v2-6171ecb37669792b91c74639635a41ea_720w.webp" referrerpolicy="no-referrer"></p><p style="text-align:justify">在 Dubbo 應用的基礎上，它的內存損耗也降低大概 3.5 倍。Native 靜態化執行文件可以做到 60M 的內存佔比，<strong>在客户端它的內存損耗也大概降低了 4 倍。</strong></p><p style="text-align:center"><img src="https://pic1.zhimg.com/80/v2-dcc129be07bbf1f96721cf97ab260464_720w.webp" referrerpolicy="no-referrer"></p><span id="OSC_h3_3"></span><h3>Triple 協議升級</h3><p style="text-align:justify">Triple 協議是 Dubbo3 設計的基於 HTTP 的 RPC 通信協議規範，它完全兼容 gRPC 協議，支持 Request-Response、Streaming 流式等通信模型，可同時運行在 HTTP/1 和 HTTP/2 之上。</p><p style="text-align:justify">你可以使用 cURL 等標準 HTTP 工具直接訪問發佈的 Triple 服務，大幅降低測試與前端接入成本。</p><pre><code>curl \
 --header 'Content-Type: application/json' \
 --data '{"sentence": "Hello World"}' \
 http://localhost:8080/apache.dubbo.demo.example.v1.ExampleService/Say</code></pre><p style="text-align:justify">Dubbo 框架提供了 Triple 協議的多種語言實現，它們可以幫助你構建瀏覽器、gRPC 兼容的 HTTP API 接口。Dubbo 框架同時支持 Protobuf-first 和 Interface-first 編程模式，即不綁定 IDL 的服務定義與開發模式，比如在 Dubbo Java 中，你可以選擇使用 Java Interface 和 Pojo 類定義 Dubbo 服務，並將其發佈為基於 Triple 協議通信的微服務。</p><p style="text-align:justify">以下是 Triple 協議的多語言實現佈局，目前已經支持了瀏覽器端的 Dubbo-web，後端的 Java、Go、Node.js、Rust 等，未來會提供 Mobile 端以及更多後端語言實現。</p><p style="text-align:center"><img src="https://pic3.zhimg.com/80/v2-c7b948c09210468c65170512dd40e186_720w.webp" referrerpolicy="no-referrer"></p><span id="OSC_h3_4"></span><h3>Rest 協議升級</h3><p style="text-align:justify">基於 Dubbo 的多協議發佈能力，rest 風格的 http 服務發佈可以有非常多的應用場景，它可以讓你在增加少量註解代碼的情況下（當前支持 Spring MVC、JAX-RS 兩套註解模式），將之前的 RPC 服務發佈為標準的 rest 風格 HTTP 服務。這在很多場景將會非常有用，比如以下是一個 Dubbo 與 Spring Cloud 體系互通的用例。</p><p style="text-align:justify">我們要實現以下互通目標，讓左邊的 Spring 應用能夠調用到右側的 Dubbo 應用。我們可以利用 Dubbo 的多協議發佈機制，為一些服務配置多協議（tcp &amp; http）發佈，讓這個 Dubbo 應用同時服務 Dubbo 微服務體系和 Spring Cloud 微服務體系。</p><p style="text-align:center"><img src="https://pic2.zhimg.com/80/v2-f5fa8b4cec37aa6c8038a6e3eb7224c5_720w.webp" referrerpolicy="no-referrer"></p><p style="text-align:justify">為了實現這個效果，我們只需要在配置中增加多協議配置即可：</p><pre><code>dubbo:
  protocols:
    - id: rest
      name: rest
      port: 8090
    - id: dubbo
      name: dubbo
      port: 20880</code></pre><p style="text-align:justify">同時，@DubboService 服務註解中也配置為多協議發佈。</p><pre><code>@DubboService(protocol="rest,dubbo")
public class UserServiceImpl implements UserService {}</code></pre><p style="text-align:justify">這樣，我們就成功的將 UserService 服務以 dubbo 和 rest 兩種協議發佈了出去（多端口多協議的方式），dubbo 協議為 Dubbo 體系服務，rest 協議為 Spring Cloud 體系服務。</p><p style="text-align:justify">為了發佈標準的 rest 風格服務，記得在接口上增加註解，在這裏我們使用 Spring MVC 註解。</p><pre><code>@RestController
@RequestMapping("/users")
public interface UserService {
    @GetMapping(value = "/list")
    List&lt;User&gt; getUsers();
}</code></pre><span id="OSC_h3_5"></span><h3>可觀測性（Metrics &amp; Tracing）</h3><p style="text-align:justify">首先，是大幅提升了 Metrics、Tracing 的易用性，對於 Spring Boot 用户而言，只需要添加一個依賴即可。</p><p style="text-align:justify">開啓 Metrics：</p><pre><code>&lt;dependency&gt;
    &lt;groupId&gt;org.apache.dubbo&lt;/groupId&gt;
    &lt;artifactId&gt;dubbo-observability-spring-boot-starter&lt;/artifactId&gt;
&lt;/dependency&gt;</code></pre><p style="text-align:justify">開啓 Tracing：</p><pre><code>&lt;dependency&gt;
    &lt;groupId&gt;org.apache.dubbo&lt;/groupId&gt;
    &lt;artifactId&gt;dubbo-tracing-otel-zipkin-spring-boot-starter&lt;/artifactId&gt;
&lt;/dependency&gt;</code></pre><p style="text-align:justify">其次，在監控指標的豐富度上進一步提升。</p><p style="text-align:center"><img src="https://pic3.zhimg.com/80/v2-ad54c5f19d7abd1f741f2e0b78e85d3e_720w.webp" referrerpolicy="no-referrer"></p><span id="OSC_h3_6"></span><h3>JDK 21 與協程</h3><p style="text-align:justify">3.3.0-beta 版本可支持平滑升級到 JDK 21 版本，同時，增加了 Project Loom 協程支持，只需要配置 setThreadPool(virtual) 即可實現協程模型開啓。</p><p style="text-align:justify">具體實現上，是我們在新版本增加了以下 Threadpool SPI 實現：</p><pre><code>virtual=org.apache.dubbo.common.threadpool.support.loom.VirtualThreadPool</code></pre><p style="text-align:justify">&nbsp;</p><pre><code>/**
 * Creates a thread pool that use virtual thread
 *
 * @see Executors#newVirtualThreadPerTaskExecutor()
 */
public class VirtualThreadPool implements ThreadPool {
    @Override
    public Executor getExecutor(URL url) {
        String name = url.getParameter(THREAD_NAME_KEY, (String) url.getAttribute(THREAD_NAME_KEY, DEFAULT_THREAD_NAME));
        return Executors.newThreadPerTaskExecutor(
            Thread.ofVirtual()
                .name(name, 1)
                .factory());
    }
}</code></pre><span id="OSC_h3_7"></span><h3>Roadmap</h3><p style="text-align:justify">對於 Dubbo3 而言，當前社區維護有 3.1、3.2、3.3 三個大的版本，其中 3.2 是當前推薦的穩定生產版本，3.3 正處於 beta 階段，在接下來幾個月將取代 3.2 成為最新穩定版本。</p><p style="text-align:justify">截止 3.3.0-beta.1 版本，整個 Dubbo3 規劃的核心功能均已開發完成。從這個版本開始，Dubbo3 將進入長期穩定維護階段，這意味着我們將不會再為任何的 Dubbo3 新版本引入新的功能規劃，社區將專注在已有功能的迭代與穩定性保證上。基於這樣的基調，我們制定未來半年的社區 Roadmap：<u><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fgithub.com%2Fapache%2Fdubbo%2Fissues%2F13065%253Fspm%253Da2c6h.13046898.publish-article.5.4b9b6ffaLAbqGN" target="_blank">https://github.com/apache/dubbo/issues/13065</a></em></u></p><p style="text-align:justify">關於面向未來的新功能，我們將在 Dubbo4 中持續探索，歡迎持續關注社區進展。</p><p style="text-align:justify"><em>作者：Apache Dubbo 社區</em></p><p style="text-align:justify"><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.aliyun.com%2Farticle%2F1393813%3Futm_content%3Dg_1000386180" target="_blank">原文鏈接</a></strong></p><p style="text-align:justify"><strong>本文為阿里雲原創內容，未經允許不得轉載。</strong></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 19 Dec 2023 01:56:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/yunqi/blog/10322295</guid>
            <link>https://my.oschina.net/yunqi/blog/10322295</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[2023 年的 Servo：貢獻者數量增加與新功能亮相，展望未來規劃]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div><div><div><p>2023 年，Servo 在開源瀏覽器引擎領域取得了顯著的進展。今年，Servo 的主要代碼庫<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fservo%2Fservo" target="_blank">servo/servo</a>共收到了 1037 個拉取請求，這是去年的 382%；提交了 2485 次，是去年的 375%。其中，53 名獨立貢獻者參與了項目，比去年增長了 140%。</p><p style="text-align:center"><img height="336" src="https://oscimg.oschina.net/oscnet/up-4d7c9dcb7d605c38fe0af213450ff263005.png" width="433" referrerpolicy="no-referrer"></p><p>在所有的貢獻中，由人類（而非機器人）提交的拉取請求中，有 30% 來自於 Igalia 之外的個人，18% 來自於非審查人員。Servo 在過去一年中在六場國際會議上進行了介紹，包括 RustNL、Web Engines Hackfest、LF Europe Member Summit、Open Source Summit Europe、GOSIM Workshop 和 GOSIM Conference。</p><p>Servo 現在擁有一個可用的「minibrowser」用户界面，支持屏幕外渲染，其實驗性的 WebGPU 支持也得到了更新。此外，Servo 現在再次出現在<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwpt.fyi" target="_blank">wpt.fyi</a>上。Servo 的新佈局引擎在 iframe、浮動、堆疊上下文、內聯佈局、邊距摺疊、‘position: sticky’、‘min-width’和‘min-height’、‘max-width’和‘max-height’、‘align-content’、‘justify-content’、‘white-space’、‘text-indent’、‘text-align: justify’、<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fservo.org%2Fblog%2F2023%2F05%2F31%2Fadding-support-for-outline-properties%2F" target="_blank">‘outline’和‘outline-offset’</a>以及‘filter: drop-shadow()’等方面表現出了其優勢。</p><p style="text-align:center"><img height="336" src="https://oscimg.oschina.net/oscnet/up-d938266a007cc9d1532eb919eb68089a660.png" width="433" referrerpolicy="no-referrer"></p><p>在<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweb-platform-tests.org" target="_blank">Web Platform Tests</a>的部分測試中，Servo 的新佈局引擎顯示出了顯著的進步。例如，在 floats 測試中，新佈局引擎的通過率達到了 82.2%，而在 floats-clear 測試中達到了 73.3%。此外，Servo 在 Acid1 測試中也通過了新佈局引擎，並在 CSS2 abspos、CSS2 定位和 CSS Position 測試套件中取得了優於舊佈局引擎的成績。</p><p>Servo 的下一步計劃包括維護現有項目，發佈 Android 每夜構建版本，完成與 Tauri 的整合（得益於 NLNet 的支持），以及實現對錶格、更好的浮動支持和非拉丁文本的支持（也是得益於 NLNet 的支持）。</p><p>2024 年，Servo 將參加<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ffosdem.org%2F2024%2F" target="_blank">FOSDEM 2024</a>，Rakhi Sharma 將在 2 月 3 日 16:45 當地時間（15:45 UTC）進行關於「在 Rust 項目中嵌入 Servo」的演講。Servo 團隊也在積極尋找贊助商，以支持這個旨在提供可嵌入、獨立、內存安全、模塊化、並行 Web 渲染引擎的開發。有興趣的個人或公司可以訪問<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fservo.org%2Fsponsorship%2F" target="_blank">Servo 的贊助頁面</a>，或通過郵件<a href="https://www.oschina.net/action/GoToLink?url=mailto%3Ajoin%40servo.org" target="_blank">join@servo.org</a>進行諮詢。</p><p>在人們擔憂瀏覽器引擎多樣性陷入低谷的十年裏，Servo 希望能夠幫助改變這一現狀。</p></div></div></div></div>
                                    ]]>
            </description>
            <pubDate>Tue, 19 Dec 2023 01:24:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271660/servo-2023</guid>
            <link>https://www.oschina.net/news/271660/servo-2023</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[No Star, No Fix]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>如下圖所示，開發者向開源項目的 GitHub 倉庫提交 issue 後，該項目的 Bot 機器人回覆稱，<strong>此 issue 將被打上<code>wontfix</code>標籤——意思是項目作者不會對其進行修復</strong>，並且會關閉 issue。原因是提交 issue 的這位開發者沒有 star 該倉庫。</p><blockquote><p><img src="https://oscimg.oschina.net/oscnet/up-0a803bbf0b6dab83e170444f3b1e30e4597.png" referrerpolicy="no-referrer"><br> 來源：<em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdaeuniverse%2Fdae%2Fissues%2F363" target="_blank">https://github.com/daeuniverse/dae/issues/363</a></u></em></p></blockquote><p>因此只要提交 issue 的開發者 star 了該項目（同時用<code>understood</code>作為關鍵字回覆上面的留言），項目作者就會重新打開 issue。</p><p>看到開源作者如此真誠直白地「求 star」，提問者也十分爽快，回覆稱「<em>已關注項目並加星~</em>」。</p><blockquote><p><img src="https://oscimg.oschina.net/oscnet/up-90e1705981d89638361b0fbdf191a3a03a4.png" referrerpolicy="no-referrer"></p></blockquote><p>所以，最後當然是圓滿大結局——提問者的問題得到了解決，開源項目獲得了 star，Win-Win！</p><hr><p>或許大家已經習慣並且默認開源作者就應該是不求回報地為愛發電，所以對於這種不給 star 就不解決問題的「硬要」方式肯定會有人覺得不爽。但細想一下，這位開源作者的做法有什麼問題嗎？</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 19 Dec 2023 00:59:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271658/no-star-no-fix</guid>
            <link>https://www.oschina.net/news/271658/no-star-no-fix</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[國芯科技推出全國產 RAID 卡解決方案 CCUSR8116]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>蘇州國芯科技<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FRYHsS9suYQrzlvlcsCRxjw" target="_blank">官微</a>消息稱，近期，蘇州國芯科技股份有限公司的全資子公司廣州領芯科技有限公司，基於自研 RAID 芯片 CCRD3316 正式推出全國產 RAID 卡解決方案 CCUSR8116。</p><p>全國產 RAID 卡解決方案 CCUSR8116 面向服務器應用場景，可以為客户提供可靠的大容量存儲陣列管理，可根據客户需求定製整體解決方案。方案基於自研 RAID 主控芯片 CCRD3316，有以下特點：主控芯片全自研，全國產 BOM 物料，具有完善的配套驅動和工具，具備全面的 RAID 數據保護機制，支持 RAID0/1/5/6/10/50/60/JBOD 模式。</p><p><img alt="" height="307" src="https://oscimg.oschina.net/oscnet/up-90b8576d519c92abcea375d81931483fc54.png" width="500" referrerpolicy="no-referrer"></p><h4 style="margin-left:0px; margin-right:0px; text-align:justify"><strong><span>CCUSR8116</span></strong><strong><span>技術規格</span></strong><strong><span>：</span></strong></h4><table cellpadding="0" cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; box-sizing:border-box !important; color:rgba(0, 0, 0, 0.9); display:table; font-family:system-ui,-apple-system,BlinkMacSystemFont,&quot;Helvetica Neue&quot;,&quot;PingFang SC&quot;,&quot;Hiragino Sans GB&quot;,&quot;Microsoft YaHei UI&quot;,&quot;Microsoft YaHei&quot;,Arial,sans-serif; font-size:17px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:0.544px; margin:0px 0px 10px; max-width:100%; orphans:2; outline:0px; overflow-wrap:break-word !important; padding:0px; text-align:justify; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:676.991px; word-spacing:0px"><tbody><tr><td style="border-color:black; border-style:solid; border-width:1pt; height:32.55pt"><p style="margin-left:0; margin-right:0; text-align:center"><strong><span>主機接口</span></strong></p></td><td style="border-bottom:1pt solid windowtext; border-image:initial; border-left:none; border-right:1pt solid windowtext; border-top:1pt solid windowtext; height:32.55pt"><p style="margin-left:0; margin-right:0; text-align:center"><span>PCIe Gen &nbsp;3.0 x8 （8Gb/s）</span></p></td><td style="border-bottom:1pt solid windowtext; border-image:initial; border-left:none; border-right:1pt solid windowtext; border-top:1pt solid windowtext; height:32.55pt"><p style="margin-left:0; margin-right:0; text-align:center"><strong><span>硬盤接口</span></strong></p></td><td style="border-bottom:1pt solid windowtext; border-image:initial; border-left:none; border-right:1pt solid windowtext; border-top:1pt solid windowtext; height:32.55pt"><p style="margin-left:0; margin-right:0; text-align:center"><span>x16 &nbsp;SATA3.0（6Gb/s）</span></p></td></tr><tr><td style="border-bottom:1pt solid windowtext; border-image:initial; border-left:1pt solid windowtext; border-right:1pt solid windowtext; border-top:none"><p style="margin-left:0; margin-right:0; text-align:center"><strong><span>接口類型</span></strong></p></td><td style="border-bottom:1pt solid windowtext; border-image:initial; border-left:none; border-right:1pt solid windowtext; border-top:none"><p style="margin-left:0; margin-right:0; text-align:center"><span>x4 SFF-8643 mini-SAS</span></p><p style="margin-left:0; margin-right:0; text-align:center"><span>（水平安裝）</span></p></td><td style="border-bottom:1pt solid windowtext; border-image:initial; border-left:none; border-right:1pt solid windowtext; border-top:none"><p style="margin-left:0; margin-right:0; text-align:center"><strong><span>機櫃管理</span></strong></p></td><td style="border-bottom:1pt solid windowtext; border-image:initial; border-left:none; border-right:1pt solid windowtext; border-top:none"><p style="margin-left:0; margin-right:0; text-align:center"><span>SGPIO</span></p></td></tr><tr><td style="border-bottom:1pt solid windowtext; border-image:initial; border-left:1pt solid windowtext; border-right:1pt solid windowtext; border-top:none"><p style="margin-left:0; margin-right:0; text-align:center"><strong><span>數據緩存</span></strong></p></td><td style="border-bottom:1pt solid windowtext; border-image:initial; border-left:none; border-right:1pt solid windowtext; border-top:none"><p style="margin-left:0; margin-right:0; text-align:center"><span>2 GB DDR3</span></p></td><td style="border-bottom:1pt solid windowtext; border-image:initial; border-left:none; border-right:1pt solid windowtext; border-top:none"><p style="margin-left:0; margin-right:0; text-align:center"><strong><span>緩存保護</span></strong></p></td><td style="border-bottom:1pt solid windowtext; border-image:initial; border-left:none; border-right:1pt solid windowtext; border-top:none"><p style="margin-left:0; margin-right:0; text-align:center"><span>eMMC+超級電容</span></p></td></tr><tr><td style="border-bottom:1pt solid windowtext; border-image:initial; border-left:1pt solid windowtext; border-right:1pt solid windowtext; border-top:none"><p style="margin-left:0; margin-right:0; text-align:center"><strong><span>RAID</span></strong><strong><span>模式</span></strong></p></td><td style="border-bottom:1pt solid windowtext; border-image:initial; border-left:none; border-right:1pt solid windowtext; border-top:none"><p style="margin-left:0; margin-right:0; text-align:center"><span>0/1/5/6/10/50/60/JBOD</span></p></td><td style="border-bottom:1pt solid windowtext; border-image:initial; border-left:none; border-right:1pt solid windowtext; border-top:none"><p style="margin-left:0; margin-right:0; text-align:center"><strong><span>最大功耗</span></strong></p></td><td style="border-bottom:1pt solid windowtext; border-image:initial; border-left:none; border-right:1pt solid windowtext; border-top:none"><p style="margin-left:0; margin-right:0; text-align:center"><span>9 瓦</span></p></td></tr><tr><td style="border-bottom:1pt solid windowtext; border-image:initial; border-left:1pt solid windowtext; border-right:1pt solid windowtext; border-top:none"><p style="margin-left:0; margin-right:0; text-align:center"><strong><span>外形尺寸</span></strong></p></td><td style="border-bottom:1pt solid windowtext; border-image:initial; border-left:none; border-right:1pt solid windowtext; border-top:none"><p style="margin-left:0; margin-right:0; text-align:center"><span>標準半高卡</span></p></td><td style="border-bottom:1pt solid windowtext; border-image:initial; border-left:none; border-right:1pt solid windowtext; border-top:none"><p style="margin-left:0; margin-right:0; text-align:center"><strong><span>工作温度</span></strong></p></td><td style="border-bottom:1pt solid windowtext; border-image:initial; border-left:none; border-right:1pt solid windowtext; border-top:none"><p style="margin-left:0; margin-right:0; text-align:center"><span>-25℃--85℃</span></p></td></tr></tbody></table><h4 style="margin-left:0px; margin-right:0px; text-align:justify"><strong><span>CCUSR8116</span></strong><strong><span>配套軟件</span></strong><strong><span>：</span></strong></h4><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span>管理軟件套件主要包含 BIOS、操作系統、BMC 三個環境下驅動和軟件。</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span><strong><span>BIOS</span></strong><strong><span>：</span></strong><span>BIOS 固件升級工具、BIOS 命令行配置工具、BIOS UEFI 人機界面工具。</span></span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span><strong><span>操作系統：</span></strong><span>驅動軟件、命令行界面陣列管理工具、基於 Web 的圖形化陣列管理工具。</span></span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span><strong><span>BMC</span></strong><strong><span>：</span></strong><span>查詢和配置 API。</span></span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><img alt="" height="211" src="https://oscimg.oschina.net/oscnet/up-d80c654f89929a5968d6e23453490c0ae4d.png" width="500" referrerpolicy="no-referrer"></p><p><span>目前整套方案已經適配測試的國產服務器主機平台有海光、龍芯、飛騰、申威、兆芯等；國產操作系統有麒麟、UOS；國產 BIOS 有崑崙、百敖。</span></p><p><span>公告稱，「公司上述產品方案的推出實現了同類產品的全國產化替代，可廣泛應用於海量數據存儲、AI 計算加速、企業關鍵應用、邊緣計算、視頻流媒體和網絡應用等服務器產品，特別是信創領域相關服務器產品。」</span></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 18 Dec 2023 10:45:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271622</guid>
            <link>https://www.oschina.net/news/271622</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[我們都應該學習 PHP]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff; color:#333333">估計有很多朋友是因為 PHP 這三個字母進來閲讀的。現在開發者社區裏面都在貶低 PHP，唱衰 PHP，已然成了一個梗。但我覺得 PHP 非常值得大家重新認識，PHP 開發者社區也非常值得大家學習。不見得是來學習 PHP 這門編程語言，可以學習 PHP 這門語言的設計思想和 PHP 開發者社區的運作模式。</span><br><br><span style="background-color:#ffffff; color:#333333">PHP 這三個字母官方的含義是這樣的——</span><strong>P</strong><span style="background-color:#ffffff; color:#333333">HP:<span>&nbsp;</span></span><strong>H</strong><span style="background-color:#ffffff; color:#333333">ypertext<span>&nbsp;</span></span><strong>P</strong><span style="background-color:#ffffff; color:#333333">reprocessor。但我想對 PHP 這三個字母做一個新的解讀：</span><span style="background-color:#ffffff; color:#e53333"><strong>P</strong></span><span style="background-color:#ffffff; color:#e53333">ragmatic</span><span style="background-color:#ffffff; color:#e53333"><strong>、H</strong></span><span style="background-color:#ffffff; color:#e53333">umanized、</span><span style="background-color:#ffffff; color:#e53333"><strong>P</strong></span><span style="background-color:#ffffff; color:#e53333">ermanent</span><span style="background-color:#ffffff; color:#333333">。這三個單詞也是我們所熟知的</span><span style="background-color:#ffffff; color:#e53333">注重實效、人性化設計和長期主義</span><span style="background-color:#ffffff; color:#333333">。在我看來，PHP 這門編程語言和它背後的開發者社區非常深刻地體現了這三種思想，而這正是我們現在提倡的迴歸的經營本質。</span><br><br><span style="background-color:#ffffff; color:#333333">這麼説有點太抽象，還是來舉具體的例子吧。我説一個所有做管理軟件的團隊都會遇到的問題，</span><span style="background-color:#ffffff; color:#e53333">如何應對客户的定製化需求</span><span style="background-color:#ffffff; color:#333333">？</span><br><br><strong>可能的解決方案之一是開分支</strong><span style="background-color:#ffffff; color:#333333">。開一個分支，在分支上進行定製開發，然後交付給客户。Git 開分支很快，瞬間就完成了，挺簡單的。但如果有十個客户、幾十個客户、幾百個客户呢？分支的維護就是巨大的成本。比如產生了 Bug，需要在幾十乃至上百個分支裏面進行代碼的合併更新，這個維護工作就要了命了。</span><br><br><strong>另外一種可能的解決方案是在代碼裏面預留各種各樣的配置開關</strong><span style="background-color:#ffffff; color:#333333">。針對不同的客户採用不同的配置或者開關。但這種方式會造成大量的代碼冗餘，程序結構複雜冗長，邏輯結構不清晰。長期積累下來之後，代碼就難以更新維護，成為屎山一樣的代碼。而且也沒有辦法完全解決客户個性化的問題，搞不好還是需要開分支來解決。</span><br><br><strong>到後來低代碼開發平台就開始流行</strong><span style="background-color:#ffffff; color:#333333">。其實這也不是什麼新鮮事。我記得在 2013 年左右的時候去一個客户那兒做培訓，他們團隊內部有一個高手，做了一套快速開發平台，給客户做交付全是在這個平台上進行各種配置。表面上來看是快了，但實際上</span><span style="background-color:#ffffff; color:#e53333">複雜度只會轉移，不會消失</span><span style="background-color:#ffffff; color:#333333">。快速開發平台帶來的問題是抽象不夠、表現能力不強。受限於快速開發平台本身的能力，難以解決更深層次的業務邏輯問題。所以這時候就需要快速開發平台提供更強大的能力，比如邏輯判斷、循環，甚至需要直接開放編程接口，允許用户自己寫代碼來實現。到最後快速開發平台本身就變成了一個開發語言。</span><br><br><span style="background-color:#ffffff; color:#333333">來説説我們禪道項目管理軟件的解決方案吧。</span><strong>我們的解決方案就是給客户提供擴展</strong><span style="background-color:#ffffff; color:#333333">。而我們的這種能力是基於 PHP 的運行機制實現的。眾所周知，PHP 是腳本語言，是動態加載動態執行的。而且它也有很完善的面向對象編程的機制，所以在 PHP 世界裏面，可以做各種好玩的事情。禪道項目管理軟件的代碼分為了大家所熟知的 MVC 三層，即 Model、View、Controller。同時我們又細分了 Configuration、Language、CSS 和 JavaScript 這些概念。在框架層我們還有基礎的 Framework 和核心的 Library。所有的這些不同層次的代碼都是可以擴展的。禪道的所有請求都會經由一個單一入口來加載，框架在加載代碼的時候會優先判斷擴展目錄裏面有沒有符合擴展規則的代碼需要加載。如果有的話，就先加載擴展的代碼。而擴展的代碼在繼承基礎代碼的基礎上又可以做進一步的修改。通過這種方式我們就實現了非常完整的擴展機制，可以根據客户的需要做各種的改動。我們給客户交付的都是擴展代碼，從來不開分支。</span><br><br><span style="background-color:#ffffff; color:#333333">禪道軟件的這種擴展機制，其實是很簡單的一種架構，沒有什麼太複雜高深的技術。無外乎就是定義各種的擴展規則，然後實現動態加載的邏輯就可以了。但恰恰是這種</span><strong>簡單的架構是最有效的</strong><span style="background-color:#ffffff; color:#333333">。可以有效解決個性化定製和主幹代碼更新的問題。而這種能力是在 PHP 語言的動態機制基礎上構建的。這是 PHP 注重實效的非常好的一個體現。</span><br><br><span style="background-color:#ffffff; color:#333333">PHP 社區也非常注重開發者友好。我就不多講，簡單説幾個點。比如 PHP 的手冊，非常成體系，非常翔實，是我見過所有編程語言裏官方文檔維護得最好的。PHP 在語言設計的時候也儘量給到開發者各種的自由，沒有太多強制的地方。同一個問題在 PHP 世界裏面有各種各樣的實現方式。</span><br><br><strong>PHP 開發者社區也非常地穩健，不急不躁，穩步前進</strong><span style="background-color:#ffffff; color:#333333">。PHP 社區在更新迭代的時候採取了漸進式的方式，向下的兼容性做得很好。這樣可以保證老版本 PHP 開發的程序也可以享受新版本 PHP 帶來的性能提升的收益。兩年前 PHP 社區還成立了基金會，</span><span style="background-color:#ffffff; color:#e53333">累計募集了超過 110 萬美金的資金，截止今天賬面上結餘 73 萬美金</span><span style="background-color:#ffffff; color:#333333">。在過去的一年裏，PHP 基金會僱用了 6 位全職或者兼職的 PHP 開發人員。在新的一年裏還會計劃僱用 4 名開發人員。消息發出後，PHP 基金會共得到了 207 份申請。PHP 基金會從中選出了 12 名合格候選人的候選名單，又從中選出了 4 名傑出的開發者。自從成立了基金會之後，PHP 的發版速度也在加快，一切都在朝着更好的方向發展。</span><br><br><span style="background-color:#ffffff; color:#333333">今天是借 PHP 這門編程語言展開討論。但其實在產品研發和企業經營過程中也是一樣的道理。同樣也需要注重實效、人性化設計和長期主義。隨着新經濟週期的到來，我相信會有越來越多的團隊開始注重三者。</span><span style="background-color:#ffffff; color:#e53333">比如我最近就看到了好多從微服務架構重新用單體應用模式重構的案例</span><span style="background-color:#ffffff; color:#333333">。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 18 Dec 2023 09:15:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/easysoft/blog/10322559</guid>
            <link>https://my.oschina.net/easysoft/blog/10322559</link>
            <author>
                <![CDATA[開源春哥]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[騰訊雲捐贈 OpenTenBase 數據庫軟件，共建國產基礎軟件新生態]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="text-align:justify"><span><span><span><span><span style="color:#333333"><span><span><span><span style="color:#000000">12 月 16 日，在 2023 開放原子開發者大會上，騰訊雲宣佈將企業級分佈式數據庫 TDSQL 的社區發行版 OpenTenBase 捐贈給開放原子基金會，通過開源共創的方式，與上下游產業鏈以及開發者共同打造繁榮數據庫技術生態。</span></span></span></span></span></span></span></span></span></p><p style="text-align:justify"><span><span><span><span><span style="color:#333333"><span><span><span><span style="color:#000000">OpenTenBase 目前已在騰訊社交、遊戲、廣告、金融等內部業務及外部商用場景下打磨 10 年以上，可完美適用於擁有海量數據、高併發、高 HTAP，以及分佈式事務能力的應用場景。</span></span></span></span></span></span></span></span></span></p><p style="text-align:justify"><span><span><span><span><span style="color:#333333"><span><span><span><span style="color:#000000">據瞭解，這是繼編譯器軟件 OpenKona JDK，以及全鏈路自主演進的操作系統 OpenCloudOS 之後，騰訊捐贈的又一重磅基礎軟件項目。</span></span></span></span></span></span></span></span></span></p><p style="text-align:center"><img height="227" src="https://oscimg.oschina.net/oscnet/up-6e8f6de3ceea50b20299f7571c2c3e08b52.png" width="600" referrerpolicy="no-referrer"></p><p style="text-align:justify"><span><span><span><span><span style="color:#333333"><span><span><span><span style="color:#000000">開放原子開源基金會秘書長馮冠霖表示：「很高興看到騰訊能夠把多年研發打磨、通過海量業務場景考驗的基礎軟件數據庫項目 OpenTenBase 開源並捐贈到基金會，未來，基金會將秉持中立開放的態度，與業界一起將 OpenTenBase 打造成為具有全球影響力的優秀開源項目。」</span></span></span></span></span></span></span></span></span></p><p style="text-align:justify"><span><span><span><span><span style="color:#333333"><span><span><span><span style="color:#000000">數據庫作為計算機三大基礎軟件之一,向下可充分發揮硬件算力,向上支撐上層的應用需求,是信息系統高效運行的關鍵基礎。騰訊雲數據庫研發總經理潘安羣表示，OpenTenBase 數據庫在技術上填補了業內基於 PostgreSQL 的開源分佈式 OLTP 系統空白，並且集 HTAP 雙引擎、分佈式事務一致性、高 SQL 兼容度、複雜查詢等技術能力於一身，能夠為企業數字化轉型提供強有力支撐。</span></span></span></span></span></span></span></span></span></p><p style="text-align:justify"><span><span><span><span><span style="color:#333333"><span><span><span><span style="color:#000000">比如，在引擎方面，OpenTenBase 同時支持 OLTP（在線交易處理）和 OLAP（在線分析處理）能力，能夠有效降低業務架構複雜度和成本；在事務一致性方面，引入全局事務管理節點來管理分佈式事務，通過分佈式事務一致性技術來保證在全分佈式環境下的事務一致性；在兼容性方面，高度兼容 PostgreSQL 版本和 Oracle 版本；在查詢方面則全新開發分佈式查詢優化器，可將複雜查詢的性能提升十倍以上。</span></span></span></span></span></span></span></span></span></p><p style="text-align:justify"><span><span><span><span><span style="color:#333333"><span><span><span><span style="color:#000000">騰訊雲數據庫 TDSQL 近年來在多個領域取得重要突破，在性能上，今年 3 月刷新 TPC-C 世界記錄，每分鐘事務處理數達到 8.14 億；在最新的 IDC 報告中，位居中國分佈式關係型數據庫「領導者」類別，並在市場份額上取得國內第一的成績。</span></span></span></span></span></span></span></span></span></p><p style="text-align:justify"><span><span><span><span><span style="color:#333333"><span><span><span><span style="color:#000000">騰訊雲數據庫總經理王義成介紹，TDSQL 已涵蓋金融級分佈式、雲原生、分析型等多引擎融合的完整數據庫產品體系，提供業界領先的金融級高可用、存算分離、數據倉庫、企業級安全等能力。未來會持續投入和突破數據庫核心技術，打造更加健康可持續發展的數據庫生態和開源社區，為企業數字化轉型提供長久動力。</span></span></span></span></span></span></span></span></span></p><p style="text-align:justify"><span><span><span><span><span style="color:#333333"><span><span><span><span style="color:#000000">騰訊是開源技術的堅定推進者和建設者，多年來一直不斷推動更底層更重磅的技術對外開放。截至目前，騰訊已經對外開源了 170 餘個項目，在全球企業開源榜位居前十，獲得了超過 47 萬的開發者關注和點贊。在本次峯會上，騰訊獲頒「開放原子校源行傑出合作伙伴」「白金捐贈人」「三年傑出貢獻人」「開源安全委員會年度貢獻單位」等多項大獎，並參與開源人才教育、操作系統創新、AI 數據存儲、木蘭峯會等多個分論壇。</span></span></span></span></span></span></span></span></span></p><p style="text-align:justify"><span><span><span><span><span style="color:#333333"><span><span><span><span style="color:#000000">未來，騰訊雲將秉持開放、開源戰略，持續打磨技術能力，攜手開放原子開源基金會、廣大開發者和各行業合作伙伴，推動我國關鍵數字基礎設施加速突破。</span></span></span></span></span></span></span></span></span></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 18 Dec 2023 08:44:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/3859945/blog/10322307</guid>
            <link>https://my.oschina.net/u/3859945/blog/10322307</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[原生，啓動！米哈遊啓動鴻蒙原生應用開發]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">HarmonyOS 官方微博宣佈，米哈遊將啓動鴻蒙原生應用開發。</span></p><blockquote><p><span style="color:#000000">原生，啓動！</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fs.weibo.com%2Fweibo%3Fq%3D%2523%25E7%25B1%25B3%25E5%2593%2588%25E6%25B8%25B8%25E5%25AE%25A3%25E5%25B8%2583%25E5%2590%25AF%25E5%258A%25A8%25E9%25B8%25BF%25E8%2592%2599%25E5%258E%259F%25E7%2594%259F%25E5%25BA%2594%25E7%2594%25A8%25E5%25BC%2580%25E5%258F%2591%2523" target="_blank"><span style="color:#000000">#米哈遊宣佈啓動鴻蒙原生應用開發#</span></a><span style="color:#000000">，當「技術宅拯救世界」的</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2Fn%2F%25E7%25B1%25B3%25E5%2593%2588%25E6%25B8%25B8miHoYo" target="_blank"><span style="color:#000000">@米哈遊 miHoYo</span></a><span style="color:#000000"></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2Fn%2F%25E5%258E%259F%25E7%25A5%259E" target="_blank"><span style="color:#000000">@原神</span></a><span style="color:#000000"> 遇上 HarmonyOS NEXT，將為跨平台的遊戲玩法和玩家體驗帶來更多可能。</span></p></blockquote><p><span style="color:#000000">米哈遊旗下多款遊戲原神、崩壞星穹鐵道、未定事件簿、崩壞 3、崩壞學園 2 都將推出鴻蒙版本。</span></p><p><img height="303" src="https://oscimg.oschina.net/oscnet/up-b9052b34e967b05a966cf501dda0752b279.png" width="500" referrerpolicy="no-referrer"></p><p><span style="background-color:#ffffff; color:#333333">此前，網易也宣佈啓動鴻蒙原生遊戲開發，包括旗下逆水寒、光遇、第五人格、陰陽師、永劫無間、夢幻西遊等遊戲。</span>&nbsp;</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 18 Dec 2023 07:33:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271740</guid>
            <link>https://www.oschina.net/news/271740</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[淺談 Socket.D 與響應式編程]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h2>一、Socket.D 的主要特性</h2><p style="color:#24292e; text-align:start">首先，<a href="https://gitee.com/noear/socketd">Scoket.D</a><span>&nbsp;</span>是高效一個二進制的網絡通訊協議（官方的講法是：基於事件和語義消息流的網絡應用協議），能夠滿足很多場景下使用。其次，Scoket.D 是温和的響應式（採用回調風格）。</p><h3>1、三種通訊模式</h3><ul><li>send 只是發送（發送後不管了）</li></ul><p style="color:#24292e; text-align:start">發送一個請求，無需為這個請求發送答覆報文。適用於監控埋點，日誌上報等，這種場景下無需回執，丟失幾個請求無傷大雅。</p><ul><li>sendAndRequest（發送並請求，要求一個「答覆」）</li></ul><p style="color:#24292e; text-align:start">發送一條請求消息，響應方收到後發回一個答覆消息。傳統的 HTTP 就是典型的 sendAndRequest。</p><ul><li>sendAndSubscribe（發送並訂閲，可接收 N 個「答覆」）</li></ul><p style="color:#24292e; text-align:start">發送一個訂閲消息，響應方收到後發回 N 個答覆報文。傳統的 MQ 是典型的 sendAndSubscribe。</p><h3>2、雙向監聽雙向會話</h3><p style="color:#24292e; text-align:start">Server 可以監聽 Client 發來的消息；Client 也可以監聽 Server 發來的消息。形成的 Session，更是可以相互對發消息。</p><h3>3、其它</h3><ul><li>二進制協議，緊湊高效</li><li>有語議、有事件</li><li>多路複用</li><li>靈活的傳輸層切換: TCP/UDP/WebSocket 等</li><li>支持自動分等高級特性</li></ul><h3>4、與其它協議對比</h3><p style="color:#24292e; text-align:start">感觀上像是各協議的優點提純。簡單且強大，非常有未來感！</p><table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:0px; box-sizing:border-box; color:#24292e; display:block; font-family:-apple-system,&quot;system-ui&quot;,&quot;Segoe UI&quot;,Helvetica,Arial,sans-serif,&quot;Apple Color Emoji&quot;,&quot;Segoe UI Emoji&quot;,&quot;Segoe UI Symbol&quot;; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; margin-bottom:16px; margin-top:0px; orphans:2; overflow:auto; text-align:start; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:960px; word-spacing:0px"><tbody><tr><th>對比項目</th><th>socket.d</th><th>http</th><th>websocket</th><th>rsocket</th><th>socket.io</th></tr></tbody><tbody><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">發消息（Qos0）</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">有</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">無</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">有</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">有</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">有</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">發送並請求（Qos1）</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">有</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">有</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">無</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">有</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">無</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">發送並訂閲</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">有</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">無</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">無</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">有</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">無</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">答覆或響應</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">有</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">有</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">無</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">有</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">無</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">單連接雙向通訊</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">有</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">無</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">有 (不便)</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">有</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">有 (不便)</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">數據分片</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">有</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">/</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">無</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">有</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">有</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">斷線自動重連</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">有</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">/</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">無</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">有</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">有</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">有元信息</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">有</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">有</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">無</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">有</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">無</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">有事件（或路徑）</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">有</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">有</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">無</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">無</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">有</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">有流（或消息關聯性）</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">有</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">無</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">無</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">有</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">無</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Broker 模式集羣</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">有</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">無</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">無</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">有</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">無</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">異步</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">異步</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">同步</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">異步</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">異步</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">異步</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">接口體驗</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">經典</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">經典</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">經典</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">響應式 (複雜)</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">經典</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">基礎傳輸協議</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">tcp, udp, ws</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">tcp</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">http</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">tcp, udp, ws</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">ws</td></tr></tbody></table><h2>二、Socket.D 的內部實現</h2><h3>1、幀的設計</h3><p style="color:#24292e; text-align:start">socket.d 是以幀為單位進行傳輸。大的幀還會自動分片成小幀進行傳輸（超過 16MB 自動分裂重組，大小可配置），到達接收端後再自動聚合。</p><ul><li>幀的邏輯結構</li></ul><pre><code class="language-css">frame: {flag, message: {sid, event, entity: { metaString, data}}}
</code></pre><p style="color:#24292e; text-align:start">幀的數據邏輯結構：幀裏有標誌和消息；消息裏有流標識、事件、實體；實體裏有元信息字符串和數據。</p><ul><li>完整的標準幀碼</li></ul><pre><code class="language-css"><span style="color:#986801">[len:int]</span><span style="color:#986801">[flag:int]</span><span style="color:#986801">[sid:str(&lt;64)]</span><span style="color:#986801">[\n]</span><span style="color:#986801">[event:str(&lt;512)]</span><span style="color:#986801">[\n]</span><span style="color:#986801">[metaString:str(&lt;4k)]</span><span style="color:#986801">[\n]</span><span style="color:#986801">[data:byte(&lt;16m)]</span></code></pre><table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:0px; box-sizing:border-box; color:#24292e; display:block; font-family:-apple-system,&quot;system-ui&quot;,&quot;Segoe UI&quot;,Helvetica,Arial,sans-serif,&quot;Apple Color Emoji&quot;,&quot;Segoe UI Emoji&quot;,&quot;Segoe UI Symbol&quot;; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; margin-bottom:16px; margin-top:0px; orphans:2; overflow:auto; text-align:start; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:960px; word-spacing:0px"><tbody><tr><th>字段</th><th>類型</th><th>大小</th><th>説明</th></tr></tbody><tbody><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">len</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">int</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">4 字節</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">幀長度（包括它自己的 4 字節佔位）</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">flag</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">int</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">4 字節</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">標誌（相當於協議指令）</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">sid</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">String</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">64 字節以內</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">流標識。<code>格式為： guid</code></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">event</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">String</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">512 字節以內</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">事件。<code>格式為：可見字符 string</code></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">metaString</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">String</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">4Kb 以內</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">元信息字符串。<code>格式為：通用的 uri queryString</code></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">data</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">byte[]</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">16Mb 以內</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">數據。<code>格式為： byte[]</code></td></tr></tbody></table><p style="color:#24292e; text-align:start">注意：當使用 udp 傳輸時，幀長度不能超過 2k （聽説，實際不能超過 1.4k ）</p><ul><li>簡化的輔助幀碼（Ping, Pong, Close），取消了 message 部分</li></ul><pre><code class="language-python">[<span style="color:#c18401">len</span>:<span style="color:#c18401">int</span>][flag:<span style="color:#c18401">int</span>]
</code></pre><h3>2、數據實體——Entity</h3><p style="color:#24292e; text-align:start">基於幀之上，一般開發者接觸到的是 Entity, 它類似一個 HTTP 報文，可以是一個 Request，也可以是一個 Response。由兩個部分組成：</p><ul><li>MetaString 元信息字符串，類似 HTTP 的 header。格式：字符串</li><li>Data 數據，類似 HTTP 的 body。格式：二進制</li></ul><h3>3、玩法</h3><p style="color:#24292e; text-align:start">Socket.D 有很多玩法，傳統的 RPC 自然不在話下，用來做 IM 也未嘗不可，開發 MQ 也很簡單（<a href="https://gitee.com/noear/folkmq">FolkMQ</a><span>&nbsp;</span>就是用它開發的）。某些特性也可以用來做代理或者網絡穿透。 IoT 的場景，比如小明的家裏有個智能空調，小明想在外面通過手機 APP 來控制空調開關，如何優雅地描述這個控制問題？最精煉的解決方案就是"小明調用空調上開關的 API"。</p><p style="color:#24292e; text-align:start">另外最經典的玩法就是 Broker 了，Broker 類似一種「軟路由」的方案，可以讓服務的發佈訪問變得簡單。發佈服務只要連接到 Broker，調用方通過反向請求的方式來讓 Broker 透明轉發即可，摒棄了傳統的註冊中心，端口管理等常見的服務治理手段。</p><h3>4、關於 Socket.D Broker</h3><p style="color:#24292e; text-align:start">Broker 有很多優勢，發佈服務不需要監聽端口，無需 Sidecar，服務註冊變得簡單，無需 zk、etcd 之類，LoadBalance 變得簡單，也更安全，沒監聽端口後很難攻擊。也有很多劣勢，網絡上多了一跳，性能是有一定損耗的，Broker 是中心化設計，類似我們平時全局的 Nginx 一樣，但是 Broker 的優雅啓停顯然更加複雜，受限於整個 Broker 集羣的瓶頸等等。上帝為你關閉了一扇門，就一定會為你打開一扇窗。</p><h2>三、響應式編程，難嗎？</h2><p style="color:#24292e; text-align:start">響應式編程是個老話題了，它早已無處不在，甚至你在 Excel 裏 SUM 求和，本質上也是種響應式的思維。響應式本質上就是響應變化的數據流。Socket.D 這個協議本身就是以響應式之名，將其擴展到網絡層面。</p><p style="color:#24292e; text-align:start">但是，響應式接口對一般程序員，不太友好。Socket.D 是響應式，但採用"經典的回調界面"。</p><h2>四、總結</h2><p style="color:#24292e; text-align:start">Socket.D 是個很有趣的網絡協議，未來應該會普及流行。它解決問題的思路和設計很令人耳目一新。如果大家有興趣，可以去它的官網瞭解下。</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 18 Dec 2023 07:12:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271572</guid>
            <link>https://www.oschina.net/news/271572</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[MongoDB 內部系統遭遇攻擊，部分客户數據被泄露]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>MongoDB 公司近日發佈了<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.mongodb.com%2Falerts" target="_blank">告警通知</a></u>，稱其在上週檢測到的一次網絡攻擊中，發現公司內部系統被攻擊者破壞，導致部分客户數據泄露。</p><p>在與 MongoDB CISO Lena Smart 往來的電子郵件中， MongoDB 聲稱在週三（12 月 13 日）晚上檢測了到其系統遭到攻擊，事件發生後公司內部立刻成立了網絡安全專家組，開始詳細調查這一事件。MongoDB 在郵件中寫道：</p><blockquote><p>MongoDB 目前正在調查一起涉及未經授權訪問某些 MongoDB 公司內部系統的網絡安全事件，該安全事件可能導致部分客户賬户元數據和聯繫信息泄露，<strong>但尚未發現客户存儲在 MongoDB Atlas 中的數據有任何泄露</strong>。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-1120a564c1712e991b0730b26c06d77cad9.png" referrerpolicy="no-referrer"></p></blockquote><p>經過調查分析，MongoDB 公司並不認為威脅攻擊者訪問了存儲在 MongoDB Atlas 中的任何客户數據。不過 MongoDB 同樣承認在安全人員發現數據泄漏事件之前，攻擊者已經訪問其內部系統一段時間了。數據泄露事件通知中還指出，MongoDB 公司目前正在積極進行安全調查分析。</p><p>鑑於部分客户元數據被暴露，MongoDB 建議所有客户在其賬户上啓用多因素身份驗證、輪換密碼，並對潛在的定向網絡釣魚和社交工程攻擊時刻保持警惕。</p><p>最後，MongoDB 公司強調將繼續在 MongoDB Alerts 網頁上發佈有關漏洞的最新信息，也會在該網頁上發佈有關中斷和其他事件的最新信息。</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 18 Dec 2023 02:57:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271688/mongodb-says-customer-data-was-exposed-in-a-cyberattack</guid>
            <link>https://www.oschina.net/news/271688/mongodb-says-customer-data-was-exposed-in-a-cyberattack</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Zadig 深度集成 Apollo 實現跨環境配置的一致性傳遞]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#191b1f; margin-left:0px; margin-right:0px"><img alt="" src="https://oscimg.oschina.net/oscnet/up-f3257d38d2e7887e27e6dec4becb607045c.png" referrerpolicy="no-referrer"></p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">在現代軟件系統中，配置管理是確保軟件質量的關鍵環節。應用程序的配置直接影響到其功能、性能和安全性。通過有效的配置管理，可以確保應用程序在不同環境中的一致性和穩定性，從而避免因配置錯誤而導致的問題和事故。然而，實現配置一致性變更，面臨着諸多挑戰，包括多環境的差異、多組件系統的複雜性、動態性以及安全性等方面，這些因素增加了對系統可維護性和安全保障的難度。</p><div><img src="https://pic4.zhimg.com/80/v2-dd0227ff7ce659b46ab979e63d63cf5b_1440w.webp" width="690" referrerpolicy="no-referrer"></div><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">Zadig 通過深度集成 Apollo，為工程師提供更便捷的途徑，使其能夠在不同環境中傳遞一致性的配置，從而提高系統的穩定性、降低維護成本，為團隊提供更高效的開發和部署體驗。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">接下來我們將結合實際案例，介紹如何通過 Zadig 解決 Apollo 配置管理複雜性和一致性傳遞的難題。</p><span id="OSC_h1_1"></span><h1>&nbsp;</h1><span id="OSC_h1_2"></span><h1><span style="color:#fd2968"><strong>管理員配置</strong></span></h1><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">管理員在 Zadig 中集成 Apollo 配置管理系統，配置工作流 「Apollo 配置變更」任務，即可實現配置的自動化變更、幫助工程師方便的完成配置的一致性傳遞。</p><span id="OSC_h3_3"></span><h3>&nbsp;</h3><span id="OSC_h3_4"></span><h3><span style="color:#fd2968"><strong>第一步：集成 Apollo</strong></span></h3><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">訪問 Zadig 系統設置 &gt; 集成管理 &gt; 配置管理 &gt; 添加 Apollo 配置管理系統。</p><div><img src="https://pic1.zhimg.com/80/v2-3573f965a1175b6605b54d3fe68ac264_1440w.webp" width="690" referrerpolicy="no-referrer"></div><div><img src="https://pic2.zhimg.com/80/v2-ec5aec67c3d0241e35612abda454eea9_1440w.webp" width="690" referrerpolicy="no-referrer"></div><span id="OSC_h3_5"></span><h3>&nbsp;</h3><span id="OSC_h3_6"></span><h3><span style="color:#fd2968"><strong>第二步：配置工作流任務</strong></span></h3><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">將 「Apollo 配置變更」任務編排到工作流中，即可通過 Zadig 工作流一鍵實現自動變更配置。具體操作：編輯工作流 &gt; 添加配置變更任務 &gt; 選擇 Apollo 配置變更 &gt; 填寫相關參數後保存。</p><div><img src="https://pic3.zhimg.com/80/v2-7fd8bee1c7de44a53a09a11a1a7119fe_1440w.webp" width="690" referrerpolicy="no-referrer"></div><div><img src="https://pic3.zhimg.com/80/v2-29a3902b9e3116af90f01140f2fa7246_1440w.webp" width="690" referrerpolicy="no-referrer"></div><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">為了控制多環境使用和變更權限，比如僅允許開發人員對開發環境的配置進行變更，不可修改其他環境的配置。在 Zadig 上可以通過設置 Apollo 配置範圍來實現配置修改權限的控制，從而確保系統環境的穩定性。</p><div><img src="https://pic4.zhimg.com/80/v2-15aa010c9034991101699633e3edab47_1440w.webp" width="690" referrerpolicy="no-referrer"></div><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">配置 3 條工作流，具體配置參考如下：</p><table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; box-sizing:border-box; color:rgba(0, 0, 0, 0.9); display:table; font-family:system-ui,-apple-system,&quot;system-ui&quot;,&quot;Helvetica Neue&quot;,&quot;PingFang SC&quot;,&quot;Hiragino Sans GB&quot;,&quot;Microsoft YaHei UI&quot;,&quot;Microsoft YaHei&quot;,Arial,sans-serif; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:0.544px; margin:0px 0px 10px; max-width:100%; orphans:2; outline:0px; overflow-wrap:break-word !important; padding:0px; text-align:justify; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:657px; word-spacing:0px"><tbody><tr><td style="background-color:#ff7faa; border-color:#3e3e3e #f0f9ff #3e3e3e #3e3e3e; border-image:initial; border-style:none solid none none; border-width:0px 1px 0px 0px"><p style="margin-left:0; margin-right:0"><span style="color:#ffffff"><strong>工作流名稱</strong></span></p></td><td style="background-color:#ff7faa; border-color:#3e3e3e #f0f9ff #3e3e3e #3e3e3e; border-image:initial; border-style:none solid none none; border-width:0px 1px 0px 0px"><p style="margin-left:0; margin-right:0"><span style="color:#ffffff"><strong>工作流用途</strong></span></p></td><td style="background-color:#ff7faa; border-color:#3e3e3e #f0f9ff #3e3e3e #3e3e3e; border-image:initial; border-style:none solid none none; border-width:0px 1px 0px 0px"><p style="margin-left:0; margin-right:0"><span style="color:#ffffff"><strong>工作流步驟配置</strong></span></p></td></tr><tr><td style="background-color:rgba(255, 242, 243, 0.46); border-color:#3e3e3e #7aafe7 #7aafe7 #3e3e3e; border-image:initial; border-style:solid; border-width:0px; vertical-align:top"><p style="margin-left:0; margin-right:0"><span style="color:#ff6699"><strong>demo-workflow-dev</strong></span></p></td><td style="border-color:#3e3e3e #7aafe7 #7aafe7 #3e3e3e; border-image:initial; border-style:solid; border-width:0px; vertical-align:top"><p style="margin-left:0; margin-right:0"><span style="color:#ff6699">開發環境更新</span></p></td><td style="border-color:#3e3e3e #7aafe7 #7aafe7 #3e3e3e; border-image:initial; border-style:solid; border-width:0px; vertical-align:top"><p style="margin-left:0; margin-right:0"><span style="color:#ff6699">構建 &gt;&nbsp; dev 環境配置變更 &gt; 部署 dev 環境</span></p></td></tr><tr><td style="background-color:rgba(255, 242, 243, 0.46); border-color:#3e3e3e #7aafe7 #7aafe7 #3e3e3e; border-image:initial; border-style:solid; border-width:0px; vertical-align:top"><p style="margin-left:0; margin-right:0"><span style="color:#ff6699"><strong>demo-workflow-sit</strong></span></p></td><td style="border-color:#3e3e3e #7aafe7 #7aafe7 #3e3e3e; border-image:initial; border-style:solid; border-width:0px; vertical-align:top"><p style="margin-left:0; margin-right:0"><span style="color:#ff6699">測試環境更新</span></p></td><td style="border-color:#3e3e3e #7aafe7 #7aafe7 #3e3e3e; border-image:initial; border-style:solid; border-width:0px; vertical-align:top"><p style="margin-left:0; margin-right:0"><span style="color:#ff6699">構建 &gt;&nbsp; sit 環境配置變更 &gt; 部署 sit 環境 &gt; 自動化測試 &gt; IM 通知</span></p></td></tr><tr><td style="background-color:rgba(255, 242, 243, 0.46); border-color:#3e3e3e #7aafe7 #7aafe7 #3e3e3e; border-image:initial; border-style:solid; border-width:0px; vertical-align:top"><p style="margin-left:0; margin-right:0"><span style="color:#ff6699"><strong>demo-workflow-prod</strong></span></p></td><td style="border-color:#3e3e3e #7aafe7 #7aafe7 #3e3e3e; border-image:initial; border-style:solid; border-width:0px; vertical-align:top"><p style="margin-left:0; margin-right:0"><span style="color:#ff6699">生產發佈</span></p></td><td style="border-color:#3e3e3e #7aafe7 #7aafe7 #3e3e3e; border-image:initial; border-style:solid; border-width:0px; vertical-align:top"><p style="margin-left:0; margin-right:0"><span style="color:#ff6699">SRE 審批 &gt; prod 環境配置變更 &gt; 部署 prod 環境 &gt; 迴歸測試</span></p></td></tr></tbody></table><div><img src="https://pic3.zhimg.com/80/v2-a241519025a1b9eb9ee5c98468822e3e_1440w.webp" width="690" referrerpolicy="no-referrer"></div><span id="OSC_h3_7"></span><h3>&nbsp;</h3><span id="OSC_h3_8"></span><h3><span style="color:#fd2968"><strong>第三步：配置協作模式[可選]</strong></span></h3><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">配置協作模式，為開發、測試、發佈工程師配置工作流權限，具體配置參考如下：</p><table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; box-sizing:border-box; color:rgba(0, 0, 0, 0.9); display:table; font-family:system-ui,-apple-system,&quot;system-ui&quot;,&quot;Helvetica Neue&quot;,&quot;PingFang SC&quot;,&quot;Hiragino Sans GB&quot;,&quot;Microsoft YaHei UI&quot;,&quot;Microsoft YaHei&quot;,Arial,sans-serif; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:0.544px; margin:0px 0px 10px; max-width:100%; orphans:2; outline:0px; overflow-wrap:break-word !important; padding:0px; text-align:justify; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:657px; word-spacing:0px"><tbody><tr><td style="background-color:#ff7faa; border-color:#3e3e3e #f0f9ff #3e3e3e #3e3e3e; border-image:initial; border-style:none solid none none; border-width:0px 1px 0px 0px"><p style="margin-left:0; margin-right:0"><span style="color:#ffffff"><strong>協作模式名稱</strong></span></p></td><td style="background-color:#ff7faa; border-color:#3e3e3e #f0f9ff #3e3e3e #3e3e3e; border-image:initial; border-style:none solid none none; border-width:0px 1px 0px 0px"><p style="margin-left:0; margin-right:0"><span style="color:#ffffff"><strong>包含協作成員</strong></span></p></td><td style="background-color:#ff7faa; border-color:#3e3e3e #f0f9ff #3e3e3e #3e3e3e; border-image:initial; border-style:none solid none none; border-width:0px 1px 0px 0px"><p style="margin-left:0; margin-right:0"><span style="color:#ffffff"><strong>工作流權限配置</strong></span></p></td></tr><tr><td style="background-color:rgba(255, 242, 243, 0.46); border-color:#3e3e3e #7aafe7 #7aafe7 #3e3e3e; border-image:initial; border-style:solid; border-width:0px; vertical-align:top"><p style="margin-left:0; margin-right:0"><span style="color:#ff6699"><strong>dev-mode</strong></span></p></td><td style="border-color:#3e3e3e #7aafe7 #7aafe7 #3e3e3e; border-image:initial; border-style:solid; border-width:0px; vertical-align:top"><p style="margin-left:0; margin-right:0"><span style="color:#ff6699">開發工程師</span></p></td><td style="border-color:#3e3e3e #7aafe7 #7aafe7 #3e3e3e; border-image:initial; border-style:solid; border-width:0px; vertical-align:top"><p style="margin-left:0; margin-right:0"><span style="color:#ff6699">共享 demo-workflow-dev 工作流</span></p></td></tr><tr><td style="background-color:rgba(255, 242, 243, 0.46); border-color:#3e3e3e #7aafe7 #7aafe7 #3e3e3e; border-image:initial; border-style:solid; border-width:0px; vertical-align:top"><p style="margin-left:0; margin-right:0"><span style="color:#ff6699"><strong>qa-mode</strong></span></p></td><td style="border-color:#3e3e3e #7aafe7 #7aafe7 #3e3e3e; border-image:initial; border-style:solid; border-width:0px; vertical-align:top"><p style="margin-left:0; margin-right:0"><span style="color:#ff6699">測試工程師</span></p></td><td style="border-color:#3e3e3e #7aafe7 #7aafe7 #3e3e3e; border-image:initial; border-style:solid; border-width:0px; vertical-align:top"><p style="margin-left:0; margin-right:0"><span style="color:#ff6699">共享 demo-workflow-qa 工作流</span></p></td></tr><tr><td style="background-color:rgba(255, 242, 243, 0.46); border-color:#3e3e3e #7aafe7 #7aafe7 #3e3e3e; border-image:initial; border-style:solid; border-width:0px; vertical-align:top"><p style="margin-left:0; margin-right:0"><span style="color:#ff6699"><strong>sre-mode</strong></span></p></td><td style="border-color:#3e3e3e #7aafe7 #7aafe7 #3e3e3e; border-image:initial; border-style:solid; border-width:0px; vertical-align:top"><p style="margin-left:0; margin-right:0"><span style="color:#ff6699">發佈工程師</span></p></td><td style="border-color:#3e3e3e #7aafe7 #7aafe7 #3e3e3e; border-image:initial; border-style:solid; border-width:0px; vertical-align:top"><p style="margin-left:0; margin-right:0"><span style="color:#ff6699">共享 demo-workflow-prod 工作流</span></p></td></tr></tbody></table><div><img src="https://pic2.zhimg.com/80/v2-fb94c1df223825d45582b37ec5295309_1440w.webp" width="690" referrerpolicy="no-referrer"></div><span id="OSC_h1_9"></span><h1>&nbsp;</h1><span id="OSC_h1_10"></span><h1><span style="color:#fd2968"><strong>工程師使用</strong></span></h1><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">下面我們將詳細探討開發階段、測試階段和生產發佈階段如何在 Zadig 上實現 Apollo 配置一致性變更。</p><span id="OSC_h3_11"></span><h3>&nbsp;</h3><span id="OSC_h3_12"></span><h3><span style="color:#fd2968"><strong>場景一：開發工程師自測聯調-根據實際業務改動更新配置</strong></span></h3><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">構建 &gt; Apollo 配置變更 &gt; 部署，實現開發環境業務和配置的自動化變更。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">開發工程師代碼實現完畢後需要自測聯調時，執行 demo-workflow-dev 工作流，選擇需要更新的服務，在 Apollo 配置變更任務中選擇配置項並修改配置內容。</p><div><img src="https://pic1.zhimg.com/80/v2-6234f172b23f96cf13a32854c911b9d8_1440w.webp" width="690" referrerpolicy="no-referrer"></div><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">配置變更成功後會自動執行部署任務更新開發環境，實現開發環境中業務代碼和配置的一鍵變更，快速自測聯調。</p><div><img src="https://pic2.zhimg.com/80/v2-b459690e5bedee09939858b1724b03fd_1440w.webp" width="690" referrerpolicy="no-referrer"></div><div><img src="https://pic3.zhimg.com/80/v2-29997ebf9a3ebdc5af9823d1937781b6_1440w.webp" width="690" referrerpolicy="no-referrer"></div><span id="OSC_h3_13"></span><h3>&nbsp;</h3><span id="OSC_h3_14"></span><h3><span style="color:#fd2968"><strong>場景二：測試工程師集成測試-複用開發的配置改動</strong></span></h3><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">構建 &gt; Apollo 配置變更 &gt; 部署 &gt; 自動化測試 &gt; IM 通知，實現測試環境業務和配置的自動化、高效變更。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">測試工程師集成測試時，執行 demo-workflow-sit 工作流，選擇需要更新的服務和對應的配置變更。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">如下圖所示，點擊「同步配置」，選擇開發環境的服務配置，可以獲取開發環境和測試環境之間的配置差異，選擇需要同步的配置。點擊同步按鈕後，通過變更前後的比對，一目瞭然地瞭解變更的內容。最後，點擊執行工作流即可完成對測試環境配置的自動化變更。</p><div><img src="https://pic1.zhimg.com/80/v2-ca03d506877feb247e78bbd363cbe390_1440w.webp" width="690" referrerpolicy="no-referrer"></div><div><img src="https://pic2.zhimg.com/80/v2-6e8dd2d4caa688ac36c9b85e99ab60a1_1440w.webp" width="690" referrerpolicy="no-referrer"></div><div><img src="https://pic3.zhimg.com/80/v2-05074af5fd97bb674d45234417b4008a_1440w.webp" width="690" referrerpolicy="no-referrer"></div><span id="OSC_h3_15"></span><h3>&nbsp;</h3><span id="OSC_h3_16"></span><h3><span style="color:#fd2968"><strong>場景三：發佈工程師生產發佈-審批配置改動</strong></span></h3><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">SRE 審批 &gt; Apollo 配置變更 &gt; 部署 prod 環境 &gt; 自動化測試，實現業務和配置自動化、安全上線。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">發佈工程師執行 demo-workflow-prod 工作流進行生產發佈，選擇要變更的 Apollo 配置並修改內容。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">和測試工程師操作類似，選擇測試環境中的配置，獲得測試環境和生產環境的差異，選擇需要同步的配置後，對生產環境進行改動。</p><div><img src="https://pic2.zhimg.com/80/v2-972183642f2bf0ad731b13c7c5217ca9_1440w.webp" width="690" referrerpolicy="no-referrer"></div><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">另外，鑑於生產發佈的嚴肅性，通常需要相關責任人對發佈內容進行審批。審批人員可以通過 Zadig 工作流任務信息詳細瞭解本次任務的具體改動，來保障發佈內容的正確性和可靠性。</p><div><img src="https://pic1.zhimg.com/80/v2-e989736963def70923f2db929b598214_1440w.webp" width="690" referrerpolicy="no-referrer"></div><div><img src="https://pic3.zhimg.com/80/v2-fb23b293f63ed41e0c53d1af010f05c2_1440w.webp" width="690" referrerpolicy="no-referrer"></div><span id="OSC_h1_17"></span><h1>&nbsp;</h1><span id="OSC_h1_18"></span><h1><span style="color:#fd2968"><strong>小結</strong></span></h1><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">Zadig 工作流支持編排 Apollo 配置變更任務，以實現業務和配置的自動化、高效變更。此外，它還具備多環境配置同步和單環境變更前後對比的能力，有助於確保配置在開發、測試和生產發佈中的一致性傳遞。從而為生產發佈過程提供了穩定、安全和可靠的保障。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:center"><span style="background-color:#ffffff; color:rgba(0, 0, 0, 0.9)">立即體驗 Zadig V2.0 新架構，開啓高效交付之旅！🚀&nbsp;</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:center"><strong><span style="color:#ff2968">Zadig 開放，鏈接，專業</span></strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:center"><strong><span style="color:#ff2968"><img alt="" src="https://oscimg.oschina.net/oscnet/up-ed2906cceb629103785658ca6748d6cd8ea.png" referrerpolicy="no-referrer"></span></strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:center"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4NDY0NTMyNw%3D%3D%26mid%3D2247491329%26idx%3D1%26sn%3D1a729186b2b5ca733c578ee8b288e823%26chksm%3Dcfb453a1f8c3dab74fb1118ac1c95aa898437a8f786385b21e0b0799d6da4eda9101acb626c0%26token%3D1376697300%26lang%3Dzh_CN%23rd" target="_blank">閲讀原文</a>&nbsp;/&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkoderover%2Fzadig" target="_blank">Zadig 在 Github</a>&nbsp;/&nbsp;<a href="https://gitee.com/koderover/zadig">Zadig 在 Gitee</a></p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start"><strong>推薦閲讀 :&nbsp;</strong><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4NDY0NTMyNw%3D%3D%26mid%3D2247490415%26idx%3D1%26sn%3D1914c7fd25aac5d33b98663571bbb744%26chksm%3Dcfb457cff8c3ded9c02809aad88012fa802eac55222eebe70b8c637ca2c86a101045aa81e73a%26scene%3D21%23wechat_redirect" target="_blank">是時候和 Jenkins 説再見了</a><span style="color:#333333">&nbsp;</span><span style="color:#333333">/&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4NDY0NTMyNw%3D%3D%26mid%3D2247491180%26idx%3D1%26sn%3D3320b05425fb5608aa0ddb994376d7ff%26chksm%3Dcfb452ccf8c3dbda46e16a0728daeed32cd172d4753b31bf89dc8471078dc4116404c820426c%26scene%3D21%23wechat_redirect" target="_blank">Jenkins 任務如何遷移到 Zadig 工作流</a><span style="color:#333333">&nbsp;/&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4NDY0NTMyNw%3D%3D%26mid%3D2247491208%26idx%3D1%26sn%3D6d1a8fc08eae6c00c180939da8e213eb%26chksm%3Dcfb45228f8c3db3efac6c9116f0a26cacdb6e8c6dcf71e8756608d3ae908d13a1c6676f80dbf%26scene%3D21%23wechat_redirect" target="_blank">Jenkins 遷移 Zadig，新項目實施上線效率提升&nbsp;6 倍</a><span style="color:#333333">&nbsp;/&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4NDY0NTMyNw%3D%3D%26mid%3D2247491219%26idx%3D1%26sn%3D92463d29d1f6ebd17b382004254852fd%26chksm%3Dcfb45233f8c3db2598088826aa39c323de6c6f6485e42a373c65a6a7d871ea64472802dc4430%26scene%3D21%23wechat_redirect" target="_blank">揭秘 Zadig V2.0.0 新開源架構：效率飆升 50% 背後故事</a><span style="color:#333333">&nbsp;/&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4NDY0NTMyNw%3D%3D%26mid%3D2247491301%26idx%3D1%26sn%3Db6fb856b449dbab1e0959996dd218b4d%26chksm%3Dcfb45245f8c3db53add8e70502f98be8dc237b9f2d3462b48e603f5eb6acef05e5ff7b42b029%26scene%3D21%23wechat_redirect" target="_blank">Zadig 支持 Nacos 跨環境配置變更，自動實現一致性變更</a></p><p>&nbsp;</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 18 Dec 2023 02:27:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/koderover/blog/10322413</guid>
            <link>https://my.oschina.net/koderover/blog/10322413</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
    </channel>
</rss>
