<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[開源中國-綜合資訊]]>
        </title>
        <link>https://www.oschina.net/news/industry</link>
        <atom:link href="https://rsshub.app/oschina/news/industry" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[開源中國-綜合資訊 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Thu, 28 Sep 2023 05:56:37 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[耗時兩年倒貼 1.5 萬美元，Chrome 擴展如何盈利]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">一名開發者 Steve Jones <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmedium.com%2F%40stevemacxcode%2Fi-spent-2-years-building-a-chrome-extension-lost-15k-dollars-in-the-process-and-made-just-over-7b2481c2b394" target="_blank">發文</a>表示，自己在兩年前開始開發一個 Chrome 擴展程序，過程中投入了大量的資金，但卻始終無法實現盈利。目前為止只賺到了 200 美元，而這些錢還都是近一週收到的打賞。</span></p><p><span style="color:#000000">具體來説，這名開發者在兩年前推出了一個名為 Zecento 的 Chrome 擴展程序，其功能是幫助用户在亞馬遜上做出更好的購買決策並節省金錢。主要通過分析產品/賣家的歷史數據，告訴用户是否是購買的好時機，然後在價格下降（或其他商家以更優惠的價格提供相同產品）時給買家發送通知。目前，該擴展只在意大利地區可用，作者計劃後續將在美國和加拿大推出。</span></p><p><img height="282" src="https://oscimg.oschina.net/oscnet/up-fc6ebf5126370f72408ffe6a55cc9672b04.png" width="500" referrerpolicy="no-referrer"></p><p><span style="color:#000000">Zecento 以免費的形式面向大眾提供；但為了盈利，作者還推出了一個功能更完善的付費計劃。但這就是問題所在，只有極少數用户的選擇了付費計劃，從而導致開發者嚴重的入不敷出。</span></p><p><span style="color:#000000">面對這種情況，Steve 也與其他一些開發了 Chrome 擴展的開發者進行了溝通交流，結果發現大差不差：大家都有一個正在被使用的產品，但卻沒有任何賺錢的途徑。</span></p><p><span style="color:#000000">為了改善自己的處境，Steve 在大概一週前新開發了一個庫，提供了一個可以通過 API 向 Chrome 瀏覽器擴展開發者進行打賞的渠道。在此後的一週時間內，Steve 陸陸續續收到了 200 多美元的資助，「我覺得如果能將它開源用於其他 Chrome 瀏覽器擴展也會很酷。」</span></p><p><span style="color:#000000">在文章的最後，Steve 也提出了一個問題：在為你的 Chrome 擴展程序（或者任何其他沒有穩定商業模式的有價值網站）實現盈利方面，你遇到的最大問題是什麼？你認為這個產品可能存在哪些問題？</span></p><p><span style="color:#000000"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.reddit.com%2Fr%2Fprogramming%2Fcomments%2F16sq2jk%2Fi_spent_2_years_building_a_chrome_extension_lost%2F" target="_blank">Reddit </a>上針對這個帖子也進行了熱烈的討論。有網友指出，Zecento 是一個 Chrome 擴展程序，但作者發文所配的主圖上卻是 Firefox，「令人惱火」。「這也就解釋了為什麼他們損失了 1.5 萬美元。」</span></p><p><span style="color:#000000">還有人提出疑問：這 1.5 萬美元是怎麼花的？市場上是否早就已經有同類型產品的存在？以及作者為什麼不通過 affiliate links 促進用户購買來實現盈利？</span></p><p><span style="color:#000000">對此，作者則回覆表示，自己做了很多愚蠢的決定：包括在意大利花了約 6000 美元註冊了一家公司，還花費了 2000 美元的會計費用。並花費了 2000 美元找了一些有影響力的人進行推廣，以及定製品牌 T 恤等推廣消耗。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 28 Sep 2023 03:51:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/259832/spent-2-years-building-a-chrome-extension-lost-15k</guid>
            <link>https://www.oschina.net/news/259832/spent-2-years-building-a-chrome-extension-lost-15k</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[電力行業首個自主可控的大模型發佈]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">南方電網人工智能科技有限公司負責研發的電力行業人工智能創新平台及自主可控電力大模型正式公開<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FWqir8vzxkVkDvwpTXtYKKQ" target="_blank">發佈</a>。</span></p><p><span style="color:#000000">電力行業人工智能創新平台提供模型即服務（MaaS），支持模型快速迭代開發，並支撐電力人工智能資源面向全社會開放共享。百度提供了崑崙芯 AI 芯片、飛槳框架、開發套件等技術產品支持。</span></p><p><span style="color:#000000">電力大模型是電力行業人工智能創新平台首個產品，覆蓋智能創作、設備巡檢、電力調度等七大應用場景，也可應用於特定業務場景。其中，電力調度場景功能通過百度智能雲千帆大模型平台，基於文心大模型打造。</span></p><p><span style="color:#000000">南方電網人工智能公司表示，將深度挖掘電網企業在電力人工智能領域的數據、場景、專業優勢，同時將攜手各方共同推進人工智能與能源電力行業深度融合，為數字時代經濟體系優化升級和滿足人民美好生活的電力需要做出更大貢獻。</span></p><p><span style="color:#000000">發佈會現場演示了「南網調度值班助手」，一個基於百度文心大模型打造的 AI 原生應用。根據介紹，電力調度值班助手遇到問題第一時間就能給出高質量解答，讓員工不再需要投入大量時間去死記硬背常規內容。面對緊急情況，它可以秒級生成處置方案，及時響應 15 分鐘電力市場調節要求。</span></p><p><span style="color:#000000"><img alt="" height="235" src="https://oscimg.oschina.net/oscnet/up-7f687c2312fb31fc129b37f1e57f71bcef3.jpg" width="700" referrerpolicy="no-referrer"></span></p><p><span style="color:#000000">而且，員工只需要説一句話，電力調度值班助手就可以把各種安全預警歸類總結，整理地清清楚楚，自動生成工單和交接班日報，讓管理和調度人員，能快速知曉全局態勢。電力調度值班助手增強了應急響應能力，在應對突發事件的緊急情況時，可以快速響應，制定合理的調度策略，保障電力供應的穩定和安全。</span></p><p><span style="color:#000000">南方電網人工智能科技有限公司研發的電力行業人工智能創新平台，可面向內外部用户提供訓練、微調、部署等服務，是算法模型的訓練工廠，將有效降低電力企業獲取大模型能力的門檻。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 28 Sep 2023 02:31:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/259815</guid>
            <link>https://www.oschina.net/news/259815</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Omnivore —— 稍後閲讀應用程序]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Omnivore 是一款免費、開源、適合認真閲讀的稍後閲讀應用程序。不受幹擾、注重隱私、開源，專為知識工作者和終身學習者而設計。適合喜歡閲讀的人。</p><p>保存文章、新聞通訊和文檔並稍後閲讀，專注且無幹擾。添加註釋和亮點。按照你想要的方式整理你的閲讀列表並在所有設備上同步。</p><p><img alt="" height="333" src="https://static.oschina.net/uploads/space/2023/0927/164637_a7IE_4252687.png" width="500" referrerpolicy="no-referrer"></p><p><strong>特點：</strong></p><ul><li>高亮顯示、備註、搜索和共享</li><li>全鍵盤導航</li><li>在長文章中自動保存你的位置</li><li>通過電子郵件添加通訊文章（支持 substack）</li><li>支持 PDF</li><li>用 Node.js 和 TypeScript 編寫的網絡應用程序</li><li>Native iOS app</li><li>Android app (source)</li><li>面向 Android 用户的漸進式網絡應用程序</li><li>適用於 Chrome、Safari、Firefox 和 Edge 的瀏覽器擴展</li><li>Labels (又稱 tagging)</li><li>離線支持</li><li>文本轉語音（僅限 iOS）</li><li>通過<span>&nbsp;</span><a href="https://github.com/omnivore-app/logseq-omnivore">Logseq Plugin</a>&nbsp;支持&nbsp;<a href="https://logseq.com/">Logseq</a></li><li>通過 <a href="https://github.com/omnivore-app/obsidian-omnivore">Obsidian Plugin</a>&nbsp;支持 <a href="https://obsidian.md/">Obsidian</a></li></ul><p><img height="337" src="https://static.oschina.net/uploads/space/2023/0927/164600_K6T2_4252687.png" width="500" referrerpolicy="no-referrer"></p></div>
                                                                ]]>
            </description>
            <pubDate>Thu, 28 Sep 2023 02:29:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/p/omnivore</guid>
            <link>https://www.oschina.net/p/omnivore</link>
        </item>
        <item>
            <title>
                <![CDATA[Gitee 推薦 | 基於 Vue 的大屏設計器 DataRoom]]>
            </title>
            <description>
                <![CDATA[<div align="center"><h1><a id="user-content-dataroom" class="anchor" href="https://gitee.com/gcpaas/DataRoom#dataroom"></a>DataRoom</h1><strong>簡單、免費的開源大屏設計器</strong></div><p align="center"><img alt="stars" src="https://gitee.com/gcpaas/DataRoom/badge/star.svg?theme=dark" referrerpolicy="no-referrer"><img alt="forks" src="https://gitee.com/gcpaas/DataRoom/badge/fork.svg?theme=dark" referrerpolicy="no-referrer"><img alt="GitHub license" src="https://img.shields.io/badge/license-Apache%20License%202.0-blue.svg" referrerpolicy="no-referrer"><img alt="npm" src="https://img.shields.io/npm/v/@gcpaas/data-room-ui" referrerpolicy="no-referrer"><img alt="Maven Central" src="https://img.shields.io/maven-central/v/com.gccloud/dataroom-core" referrerpolicy="no-referrer"><img alt="Company" src="https://img.shields.io/badge/Author-%E7%A7%91%E5%A4%A7%E5%9B%BD%E5%88%9B%E4%BA%91%E7%BD%91%E7%A7%91%E6%8A%80%E6%9C%89%E9%99%90%E5%85%AC%E5%8F%B8-blue.svg" referrerpolicy="no-referrer"></p><p>🔥DataRoom 是一款基於 SpringBoot、MyBatisPlus、ElementUI、G2Plot、Echarts 等技術棧的大屏設計器，具備大屏設計、預覽能力，支持 MySQL、Oracle、PostgreSQL、MSSQL、JSON、JS、HTTP、Groovy 等數據集接入，使用簡單，完全免費，代碼開源。</p><h2><a id="user-content-效果圖" class="anchor" href="https://gitee.com/gcpaas/DataRoom#%E6%95%88%E6%9E%9C%E5%9B%BE"></a>效果圖</h2><h3><a id="user-content-1-大屏管理" class="anchor" href="https://gitee.com/gcpaas/DataRoom#1-%E5%A4%A7%E5%B1%8F%E7%AE%A1%E7%90%86"></a>1. 大屏管理</h3><p>進行大屏【新增】、【編輯】、【設計】、【預覽】、【複製】、【刪除】操作</p><br><img src="https://gitee.com/gcpaas/DataRoom/raw/master/doc/images/%E5%A4%A7%E5%B1%8F%E7%AE%A1%E7%90%86.png" height="200" referrerpolicy="no-referrer"><h3><a id="user-content-2-設計器" class="anchor" href="https://gitee.com/gcpaas/DataRoom#2-%E8%AE%BE%E8%AE%A1%E5%99%A8"></a>2. 設計器</h3><p>採用拖拉拽可視化設計，支持 20+種圖表組件、15 種邊框組件、10 多種修飾組件</p><br><img src="https://gitee.com/gcpaas/DataRoom/raw/master/doc/images/%E8%AE%BE%E8%AE%A1%E5%99%A8.png" height="200" referrerpolicy="no-referrer"><h3><a id="user-content-3-資源庫" class="anchor" href="https://gitee.com/gcpaas/DataRoom#3-%E8%B5%84%E6%BA%90%E5%BA%93"></a>3. 資源庫</h3><p>支持資源自定義上傳、在大屏設計器中直接引用資源，如：3D 圖片、邊框圖片、裝飾條、背景圖</p><br><img alt="logo" src="https://gitee.com/gcpaas/DataRoom/raw/master/doc/images/%E8%B5%84%E6%BA%90%E5%BA%93.png" height="200" referrerpolicy="no-referrer"><h3><a id="user-content-4-數據源" class="anchor" href="https://gitee.com/gcpaas/DataRoom#4-%E6%95%B0%E6%8D%AE%E6%BA%90"></a>4. 數據源</h3><p>支持 MySQL、PostgreSQL、Oracle 、ClickHouse 數據庫接入</p><br><img alt="logo" src="https://gitee.com/gcpaas/DataRoom/raw/master/doc/images/%E6%95%B0%E6%8D%AE%E6%BA%90.png" height="200" referrerpolicy="no-referrer"><h3><a id="user-content-4-數據集" class="anchor" href="https://gitee.com/gcpaas/DataRoom#4-%E6%95%B0%E6%8D%AE%E9%9B%86"></a>4. 數據集</h3><p>支持原始數據集、自助數據集、存儲過程數據集、JSON 數據集、腳本數據集、JS 腳本數據集、HTTP 數據集多種方式接入數據</p><br><img alt="logo" src="https://gitee.com/gcpaas/DataRoom/raw/master/doc/images/%E6%95%B0%E6%8D%AE%E9%9B%86.png" height="200" referrerpolicy="no-referrer"><br><img alt="logo" src="https://gitee.com/gcpaas/DataRoom/raw/master/doc/images/%E6%95%B0%E6%8D%AE%E9%9B%862.png" height="200" referrerpolicy="no-referrer"><h2><a id="user-content-優勢" class="anchor" href="https://gitee.com/gcpaas/DataRoom#%E4%BC%98%E5%8A%BF"></a>優勢</h2><p>✅ 一站式大屏解決方案，從<span><strong>數據接入</strong></span>-&gt;<span><strong>大屏設計</strong></span>-&gt;<span><strong>大屏預覽</strong></span>-&gt;<span><strong>生產使用</strong></span><br>
✅ 支持<span><strong>多種數據集接入</strong></span>，滿足大多數數據接入需求<br>
✅ 支持大屏🔥<span><strong>獨立部署</strong></span>，不對原有工程產生影響，適用於老項目<br>
✅ 支持大屏🔥<span><strong>嵌入式集成</strong></span>，與項目無縫融合，引入依賴包即可，無其他系統框架依賴，減少運維成本，適用於新項目<br>
✅ 支持🔥<span><strong>組件在線、離線開發</strong></span>，在線開發簡單組件、離線開發複雜組件<br>
✅ 支持自定義接口權限、數據權限，輕鬆對接🔥<span><strong>Shiro、Security</strong></span>等認證框架，保證大屏數據安全<br></p><br><h2><a id="user-content-特性" class="anchor" href="https://gitee.com/gcpaas/DataRoom#%E7%89%B9%E6%80%A7"></a>特性</h2><table><thead><tr><th align="left">特性</th><th>支持</th></tr></thead><tbody><tr><td align="left">支持大屏、設計、預覽、導出圖片、項目集成</td><td>✅</td></tr><tr><td align="left">支持圖層上下調整，支持置於頂層、置於底層</td><td>✅</td></tr><tr><td align="left">支持畫布組件框選、組合、取消組合、鎖定、批量刪除、複製功能</td><td>✅</td></tr><tr><td align="left">支持文本、圖片、輪播表、排名表、翻牌器、基礎表格、倒計時、系統時間、外鏈基礎組件</td><td>✅</td></tr><tr><td align="left">支持折線圖、梯形圖、柱狀圖、面積圖、條形圖、餅圖、環圖、水波圖、儀表盤、進度條、詞雲圖、雷達圖、漏斗圖等圖表組件</td><td>✅</td></tr><tr><td align="left">支持 15 種邊框組件，具備動畫、漸變色設置</td><td>✅</td></tr><tr><td align="left">支持 10 多種修飾組件，具備動畫、漸變色設置</td><td>✅</td></tr><tr><td align="left">支持資源管理，包含 LOGO、3D 圖標、2D 圖標、修飾條、背景圖等上百個大屏設計資源，資源支持自定義上傳</td><td>✅</td></tr><tr><td align="left">支持組件管理，包含系統組件、自定義組件、業務組件，組件支持二次開發</td><td>✅</td></tr><tr><td align="left">支持多種數據源，目前支持 MySQL、PostgreSQL、Oracle、ClickHouse 數據庫</td><td>✅</td></tr><tr><td align="left">支持多種數據集，目前支持原始數據集、自助數據集、存儲過程數據集、JSON 數據集、JS 數據集、腳本數據集、HTTP 數據集，接入不同來源數據</td><td>✅</td></tr><tr><td align="left">支持自定義權限、具備自定義接口權限、數據權限，保證大屏數據安全</td><td>✅</td></tr><tr><td align="left">支持組件自定義規範，按照規範開發自己的大屏組件，滿足特殊需求，如：接入 three.js</td><td>✅</td></tr></tbody></table><br><h2><a id="user-content-快速開始" class="anchor" href="https://gitee.com/gcpaas/DataRoom#%E5%BF%AB%E9%80%9F%E5%BC%80%E5%A7%8B"></a>快速開始</h2><blockquote><p>如果你想源碼啓動，<a href="https://gitee.com/link?target=https%3A%2F%2Fwww.yuque.com%2Fchuinixiongkou%2Fbigscreen%2Fofy1bqhqgua1fu0f">👉 請點擊這裏</a></p></blockquote><blockquote><p>如果你想使用 Docker 啓動 ，<a href="https://gitee.com/link?target=https%3A%2F%2Fwww.yuque.com%2Fchuinixiongkou%2Fbigscreen%2Fahhq3i7zxea46ox2">👉 請點擊這裏</a></p></blockquote><blockquote><p>如果你想將大屏集成到項目中，<a href="https://gitee.com/link?target=https%3A%2F%2Fwww.yuque.com%2Fchuinixiongkou%2Fbigscreen%2Fofy1bqhqgua1fu0f">👉 請點擊這裏</a></p></blockquote><blockquote><p>如果你想設計一個大屏，<a href="https://gitee.com/link?target=https%3A%2F%2Fwww.yuque.com%2Fchuinixiongkou%2Fbigscreen%2Fofy1bqhqgua1fu0f">👉 請點擊這裏</a></p></blockquote><br><h2><a id="user-content-演示環境" class="anchor" href="https://gitee.com/gcpaas/DataRoom#%E6%BC%94%E7%A4%BA%E7%8E%AF%E5%A2%83"></a>演示環境</h2><p>演示環境會不定期進行更新，請不要在演示環境中放入生產數據 <a href="https://gitee.com/link?target=http%3A%2F%2Fgcpaas.gccloud.com%2FbigScreen" target="_blank">立即在線使用</a></p><br><h2><a id="user-content-常見問題" class="anchor" href="https://gitee.com/gcpaas/DataRoom#%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98"></a>常見問題</h2><ul><li><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.yuque.com%2Fchuinixiongkou%2Fbigscreen%2Findex">使用手冊、二次開發、部署手冊、常見問題</a></li><li><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fgcpaas%2FDataRoom">代碼倉庫 (GitHub)</a>、<a href="https://gitee.com/gcpaas/DataRoom">代碼倉庫 (碼雲)</a></li></ul><br><h2><a id="user-content-生態插件" class="anchor" href="https://gitee.com/gcpaas/DataRoom#%E7%94%9F%E6%80%81%E6%8F%92%E4%BB%B6"></a>生態插件</h2><table><thead><tr><th>組件</th><th>地址</th></tr></thead><tbody><tr><td>大屏設計器</td><td><a href="https://gitee.com/gcpaas/DataRoom">碼雲</a>、<a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fgcpaas%2FDataRoom">GitHub</a></td></tr><tr><td>儀表盤設計器</td><td><a href="https://gitee.com/gcpaas/DashBoard">碼雲</a>、<a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fgcpaas%2FDashBoard">GitHub</a></td></tr><tr><td>數據集</td><td><a href="https://gitee.com/gcpaas/dataset">碼雲</a>、<a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fgcpaas%2Fdataset">GitHub</a></td></tr></tbody></table><br><h2><a id="user-content-聯繫我們" class="anchor" href="https://gitee.com/gcpaas/DataRoom#%E8%81%94%E7%B3%BB%E6%88%91%E4%BB%AC"></a>聯繫我們</h2><p><img alt="logo" width="200" src="https://gitee.com/gcpaas/DataRoom/raw/master/doc/images/qq.png" referrerpolicy="no-referrer"></p><h2><a id="user-content-許可證" class="anchor" href="https://gitee.com/gcpaas/DataRoom#%E8%AE%B8%E5%8F%AF%E8%AF%81"></a>許可證</h2><p>Apache License 2.0</p>]]>
            </description>
            <pubDate>Thu, 28 Sep 2023 02:21:00 GMT</pubDate>
            <guid isPermaLink="false">https://gitee.com/gcpaas/DataRoom</guid>
            <link>https://gitee.com/gcpaas/DataRoom</link>
        </item>
        <item>
            <title>
                <![CDATA[每日一博 | 揭秘編碼器與解碼器語言模型]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="rich_media_content js_underline_content
                       defaultNoSetting
            " id="js_content"><section style="margin-left: 8px;margin-right: 8px;"><img class="rich_pages wxw-img" data-backh="461" data-backw="578" data-ratio="0.7972222222222223" src="https://oscimg.oschina.net/oscnet/7052e54b-97a3-4169-b237-d3d5dccd698d.png" data-w="1080" style="letter-spacing: 0.578px;text-wrap: wrap;width: 100%;height: auto;" referrerpolicy="no-referrer"></section><section style="margin-bottom: 0px;text-wrap: wrap;"><section style="outline: 0px;background-color: rgb(25, 25, 25);visibility: visible;"><section data-darkmode-bgcolor-16221004879619="rgb(25, 25, 25)" data-darkmode-original-bgcolor-16221004879619="#fff|rgb(255, 255, 255)" data-style="max-width: 100%; background-color: rgb(255, 255, 255); letter-spacing: 0.544px; font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; visibility: visible; box-sizing: border-box !important; overflow-wrap: break-word !important; color: rgb(163, 163, 163) !important;" class="js_darkmode__0" data-darkmode-bgcolor-16339314364542="rgb(25, 25, 25)" data-darkmode-original-bgcolor-16339314364542="#fff|rgb(255, 255, 255)" data-darkmode-color-16339314364542="rgb(163, 163, 163)" data-darkmode-original-color-16339314364542="#fff|rgb(163, 163, 163)" style="outline: 0px;background-color: rgb(255, 255, 255);visibility: visible;"><section data-darkmode-bgcolor-16221004879619="rgb(25, 25, 25)" data-darkmode-original-bgcolor-16221004879619="#fff|rgb(255, 255, 255)" data-darkmode-bgcolor-16339314364542="rgb(25, 25, 25)" data-darkmode-original-bgcolor-16339314364542="#fff|rgb(255, 255, 255)" data-darkmode-color-16339314364542="rgb(163, 163, 163)" data-darkmode-original-color-16339314364542="#fff|rgb(163, 163, 163)" style="outline: 0px;visibility: visible;"><section data-darkmode-bgcolor-16221004879619="rgb(25, 25, 25)" data-darkmode-original-bgcolor-16221004879619="#fff|rgb(255, 255, 255)" data-darkmode-bgcolor-16339314364542="rgb(25, 25, 25)" data-darkmode-original-bgcolor-16339314364542="#fff|rgb(255, 255, 255)" data-darkmode-color-16339314364542="rgb(163, 163, 163)" data-darkmode-original-color-16339314364542="#fff|rgb(163, 163, 163)" style="outline: 0px;visibility: visible;"><section data-darkmode-bgcolor-16221004879619="rgb(25, 25, 25)" data-darkmode-original-bgcolor-16221004879619="#fff|rgb(255, 255, 255)" data-darkmode-bgcolor-16339314364542="rgb(25, 25, 25)" data-darkmode-original-bgcolor-16339314364542="#fff|rgb(255, 255, 255)" data-darkmode-color-16339314364542="rgb(163, 163, 163)" data-darkmode-original-color-16339314364542="#fff|rgb(163, 163, 163)" style="outline: 0px;visibility: visible;"><section data-darkmode-bgcolor-16221004879619="rgb(25, 25, 25)" data-darkmode-original-bgcolor-16221004879619="#fff|rgb(255, 255, 255)" data-darkmode-bgcolor-16339314364542="rgb(25, 25, 25)" data-darkmode-original-bgcolor-16339314364542="#fff|rgb(255, 255, 255)" data-darkmode-color-16339314364542="rgb(163, 163, 163)" data-darkmode-original-color-16339314364542="#fff|rgb(163, 163, 163)" style="outline: 0px;visibility: visible;"><section data-darkmode-bgcolor-16221004879619="rgb(25, 25, 25)" data-darkmode-original-bgcolor-16221004879619="#fff|rgb(255, 255, 255)" data-darkmode-bgcolor-16339314364542="rgb(25, 25, 25)" data-darkmode-original-bgcolor-16339314364542="#fff|rgb(255, 255, 255)" data-darkmode-color-16339314364542="rgb(163, 163, 163)" data-darkmode-original-color-16339314364542="#fff|rgb(163, 163, 163)" style="outline: 0px;visibility: visible;"><section data-darkmode-bgcolor-16221004879619="rgb(25, 25, 25)" data-darkmode-original-bgcolor-16221004879619="#fff|rgb(255, 255, 255)" data-darkmode-bgcolor-16339314364542="rgb(25, 25, 25)" data-darkmode-original-bgcolor-16339314364542="#fff|rgb(255, 255, 255)" data-darkmode-color-16339314364542="rgb(163, 163, 163)" data-darkmode-original-color-16339314364542="#fff|rgb(163, 163, 163)" style="outline: 0px;visibility: visible;"><section data-darkmode-bgcolor-16221004879619="rgb(25, 25, 25)" data-darkmode-original-bgcolor-16221004879619="#fff|rgb(255, 255, 255)" data-darkmode-bgcolor-16339314364542="rgb(25, 25, 25)" data-darkmode-original-bgcolor-16339314364542="#fff|rgb(255, 255, 255)" data-darkmode-color-16339314364542="rgb(163, 163, 163)" data-darkmode-original-color-16339314364542="#fff|rgb(163, 163, 163)" style="outline: 0px;visibility: visible;"><section style="margin-right: 8px;margin-left: 8px;outline: 0px;visibility: visible;line-height: 1.75em;"><section data-darkmode-bgcolor-16221004879619="rgb(41, 41, 41)" data-darkmode-original-bgcolor-16221004879619="#fff|rgb(255, 255, 255)|rgb(239, 239, 239)" data-darkmode-color-16221004879619="rgb(168, 168, 168)" data-darkmode-original-color-16221004879619="#fff|rgb(62, 62, 62)" data-style="padding: 10px; max-width: 100%; background-color: rgb(239, 239, 239); color: rgb(62, 62, 62); line-height: 25.6px; display: inline-block; width: 670px; border-width: 2px; border-style: dashed; border-color: transparent; visibility: visible; box-sizing: border-box !important; overflow-wrap: break-word !important;" class="js_darkmode__1" data-darkmode-bgcolor-16339314364542="rgb(41, 41, 41)" data-darkmode-original-bgcolor-16339314364542="#fff|rgb(255, 255, 255)|rgb(239, 239, 239)" data-darkmode-color-16339314364542="rgb(168, 168, 168)" data-darkmode-original-color-16339314364542="#fff|rgb(163, 163, 163)|rgb(62, 62, 62)" style="padding: 10px;outline: 0px;background-color: rgb(239, 239, 239);line-height: 25.6px;display: inline-block;width: 670px;border-width: 2px;border-style: dashed;border-color: transparent;visibility: visible;"><section data-darkmode-bgcolor-16221004879619="rgb(41, 41, 41)" data-darkmode-original-bgcolor-16221004879619="#fff|rgb(255, 255, 255)|rgb(239, 239, 239)" data-darkmode-color-16221004879619="rgb(168, 168, 168)" data-darkmode-original-color-16221004879619="#fff|rgb(62, 62, 62)" data-darkmode-bgcolor-16339314364542="rgb(41, 41, 41)" data-darkmode-original-bgcolor-16339314364542="#fff|rgb(255, 255, 255)|rgb(239, 239, 239)" data-darkmode-color-16339314364542="rgb(168, 168, 168)" data-darkmode-original-color-16339314364542="#fff|rgb(163, 163, 163)|rgb(62, 62, 62)" style="outline: 0px;visibility: visible;"><section data-darkmode-bgcolor-16221004879619="rgb(41, 41, 41)" data-darkmode-original-bgcolor-16221004879619="#fff|rgb(255, 255, 255)|rgb(239, 239, 239)" data-darkmode-color-16221004879619="rgb(168, 168, 168)" data-darkmode-original-color-16221004879619="#fff|rgb(62, 62, 62)" data-darkmode-bgcolor-16339314364542="rgb(41, 41, 41)" data-darkmode-original-bgcolor-16339314364542="#fff|rgb(255, 255, 255)|rgb(239, 239, 239)" data-darkmode-color-16339314364542="rgb(168, 168, 168)" data-darkmode-original-color-16339314364542="#fff|rgb(163, 163, 163)|rgb(62, 62, 62)" style="outline: 0px;visibility: visible;"><p style="letter-spacing: 0.578px;"><span style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 16px;letter-spacing: 1px;"><span style="font-size: 16px;letter-spacing: 1px;text-wrap: wrap;background-color: rgb(239, 239, 239);">Transformer 架構的問世</span><span style="font-size: 16px;letter-spacing: 1px;text-wrap: wrap;background-color: rgb(239, 239, 239);">標誌着現代語言大模型時代的開啓。</span><span style="font-size: 16px;letter-spacing: 1px;text-wrap: wrap;background-color: rgb(239, 239, 239);">自 2018 年以來，<a target="_blank" href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzU5ODY2MTk3Nw%3D%3D%26mid%3D2247491825%26idx%3D1%26sn%3D6b7494f1a24520f5e76fbca4b739e199%26chksm%3Dfe426ec7c935e7d10925628ee95207e9cd7e4c61b36c176d1e1dbb89bc1c79f1729dde095301%26scene%3D21%23wechat_redirect" textvalue="各類語言大模型層出不窮" linktype="text" imgurl="" imgdata="null" data-itemshowtype="0" tab="innerlink" data-linktype="2"><strong>各類語言大模型層出不窮</strong></a>。</span></span></p><p style="letter-spacing: 0.578px;"><span style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 16px;letter-spacing: 1px;"><br></span></p><p style="letter-spacing: 0.578px;"><span style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 16px;letter-spacing: 1px;">通過 LLM 進化樹（<span style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 16px;letter-spacing: 1px;color: rgb(136, 136, 136);"><em><span style="font-size: 16px;letter-spacing: 1px;text-wrap: wrap;background-color: rgb(239, 239, 239);">github.com/Mooler0410/LLMsPracticalGuide</span></em></span>）來看<span style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;text-wrap: wrap;background-color: rgb(239, 239, 239);font-size: 16px;letter-spacing: 1px;">，這些語言模型主要分為三類：一是「僅編碼器」，該類語言模型擅長文本理解，因為它們允許信息在文本的兩個方向上流動；二是「僅解碼器」，該類語言模型擅長文本生成，因為信息只能從文本的左側向右側流動，並以自迴歸方式有效生成新詞彙；三「編碼器-解碼器」組，該類語言模型對上述兩種模型進行了結合，用於完成需要理解輸入並生成輸出的任務，例如翻譯。</span></span></p><span style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 16px;letter-spacing: 1px;"></span><p><br></p><p style="letter-spacing: 0.578px;"><span style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 16px;letter-spacing: 1px;">本文作者 Sebastian Raschka 對這三類語言模型的工作原理進行了詳細解讀。他是人工智能平台 Lightning AI 的 LLM 研究員，也是《<span style="font-size: 16px;letter-spacing: 1px;text-wrap: wrap;background-color: rgb(239, 239, 239);">Machine Learning Q an</span><span style="font-size: 16px;letter-spacing: 1px;text-wrap: wrap;background-color: rgb(239, 239, 239);">d AI》的作者。</span></span></p><p style="letter-spacing: 0.578px;"><span style="letter-spacing: 0.578px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: var(--articleFontsize);"><br></span></p><p style="letter-spacing: 0.578px;text-align: left;"><span style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;text-align: justify;font-size: 16px;letter-spacing: 1px;"><span style="text-align: left;">（以下內容由 OneFlow 編譯發佈，轉載請聯繫授權。</span></span><span style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 16px;letter-spacing: 1px;">原文</span><span style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 16px;letter-spacing: 1px;">：https://magazine.sebastianraschka.com/p/understanding-encoder-and-decoder)</span><span style="font-size: 16px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;"></span></p></section></section></section></section></section></section></section></section></section></section></section></section></section></section><p><br></p><p ql-global-para="true" line="7sj5" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><span style="outline: 0px;color: rgb(63, 63, 63);"><strong style="outline: 0px;"><span style="outline: 0px;font-size: 16px;letter-spacing: 2px;">來源 | Ahead of AI</span></strong></span></p><p ql-global-para="true" line="Zq0W" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><span style="outline: 0px;color: rgb(63, 63, 63);"><strong style="outline: 0px;"><span style="outline: 0px;font-size: 16px;letter-spacing: 2px;">OneFlow 編譯</span></strong></span></p><p ql-global-para="true" line="KqmY" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><span style="outline: 0px;color: rgb(63, 63, 63);"><strong style="outline: 0px;"><span style="outline: 0px;font-size: 16px;letter-spacing: 2px;">翻譯｜楊婷、宛子琳</span></strong></span></p><p ql-global-para="true" line="KqmY" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><br></p><p ql-global-para="true" line="KqmY" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><span style="font-size: 16px;letter-spacing: 2px;">有人希望我能深入介紹一下語言大模型（LLM）的相關術語，並解釋我們現在認為理所當然的一些技術性更強的術語，包括「編碼器式」和「解碼器式」LLM 等。這些術語是什麼意思？</span></p><p ql-global-para="true" line="KqmY" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><span style="font-size: 16px;letter-spacing: 2px;"><br></span></p><p ql-global-para="true" line="KqmY" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><span style="font-size: 16px;letter-spacing: 2px;">編碼器和解碼器架構基本上都使用了相同的自注意力層對單詞詞元（token）進行編碼，然而，不同的是：編碼器被設計為學習可以用於各種預測建模任務（如分類）的嵌入；解碼器被設計用於生成新的文本，例如回答用户的查詢等。</span></p><p style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);text-align: center;line-height: 1.6em;"><br></p><span id="OSC_h2_1"></span><h2 style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);text-align: center;line-height: 1.6em;"><p style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);text-align: center;line-height: 1.6em;"><strong style="outline: 0px;"><span style="outline: 0px;letter-spacing: 2px;font-size: 24px;color: rgb(246, 171, 0);">1</span></strong></p><p style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);text-align: center;line-height: 1.6em;"><span style="font-size: 17px;color: rgb(30, 35, 128);"><strong style="outline: 0px;"><span style="outline: 0px;letter-spacing: 2px;">原始 Transformer</span></strong></span></p></h2><p ql-global-para="true" line="gFkG" ql-global="true" style="line-height: 100%;margin-bottom: 0pt;margin-top: 0pt;font-size: 11pt;color: #494949;">&nbsp;</p><p ql-global-para="true" line="V6BC" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><span style="outline: 0px;letter-spacing: 2px;font-size: 16px;">原始 Transformer 架構（"Attention Is All You Need"，2017 年）是為英法和英德語言翻譯而開發的，它同時使用了編碼器和解碼器，如下圖所示。</span></p><p ql-global-para="true" line="V6BC" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><br></p><section style="line-height: 100%;margin: 0pt 8px;font-size: 11pt;color: rgb(73, 73, 73);"><img class="rich_pages wxw-img" data-backh="594" data-backw="578" data-ratio="1.026851851851852" src="https://oscimg.oschina.net/oscnet/30371c43-cd3c-460e-89a2-b8950862e798.png" data-type="png" data-w="1080" height="auto" style="width: 100%;height: auto;" width="1422" referrerpolicy="no-referrer"></section><p ql-global-para="true" line="KqmY" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><br></p><section style="margin-bottom: 0px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;margin-left: 8px;margin-right: 8px;"><span style="outline: 0px;letter-spacing: 2px;font-size: 16px;">上圖中，輸入文本（即要翻譯的句子）首先被分詞為單獨的單詞詞元，然後通過嵌入層對這些詞元進行編碼，完成後進入編碼器部分。接下來，在每個嵌入的單詞上添加位置編碼向量，之後，這些嵌入會通過多頭自注意力層。多頭注意力層之後會進行殘差與層歸一化（Add &amp; normalize），它進行了一層標準化操作，並通過跳躍連接（skip connection，也稱為殘差連接或快捷連接）添加原始嵌入。最後，進入「全連接層」（它是由兩個全連接層（全連接層之間有一個非線性激活函數）組成的小型多層感知器）之後，輸出會被再次"<span style="font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 16px;letter-spacing: 2px;text-wrap: wrap;background-color: rgb(255, 255, 255);">殘差與層歸一化</span>"，然後再將輸出傳遞到解碼器模塊的多頭自注意力層。</span></section><section style="margin-bottom: 0px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;margin-left: 8px;margin-right: 8px;"><span style="font-size: 16px;letter-spacing: 2px;"><br></span></section><section style="margin-bottom: 0px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;margin-left: 8px;margin-right: 8px;"><span style="font-size: 16px;letter-spacing: 2px;">上圖的解碼器部分與編碼器部分的整體結構十分相似，關鍵區別是它們的輸入和輸出內容。編碼器要接收進行翻譯的輸入文本，而解碼器則負責生成翻譯後的文本。</span></section><p ql-global-para="true" line="KqmY" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);text-align: center;line-height: 1.6em;"><br></p><span id="OSC_h2_2"></span><h2 style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);text-align: center;line-height: 1.6em;"><p style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);text-align: center;line-height: 1.6em;"><strong style="outline: 0px;"><span style="outline: 0px;letter-spacing: 2px;font-size: 24px;color: rgb(246, 171, 0);">2</span></strong></p><p style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);text-align: center;line-height: 1.6em;"><span style="color: rgb(30, 35, 128);font-size: 17px;"><strong style="outline: 0px;"><span style="outline: 0px;letter-spacing: 2px;">編碼器</span></strong></span></p></h2><p ql-global-para="true" line="wHxM" ql-global="true" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><span style="outline: 0px;letter-spacing: 2px;color: rgb(30, 35, 128);font-size: 17px;">&nbsp;</span></p><p ql-global-para="true" line="Ih2s" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;text-align: justify;"><span style="outline: 0px;letter-spacing: 2px;font-size: 16px;">上圖展示的原始 Transformer 架構中的編碼器部分負責理解和提取輸入文本中的相關信息，它輸出的是輸入文本的一個連續表示（嵌入），然後將其傳遞給解碼器。最終，解碼器根據從編碼器接收到的連續表示生成翻譯後的文本（目標語言）。</span></p><p ql-global-para="true" line="EiXb" ql-global="true" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;text-align: justify;"><span style="outline: 0px;letter-spacing: 2px;font-size: 16px;">&nbsp;</span></p><p ql-global-para="true" line="WF2B" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;text-align: justify;"><span style="outline: 0px;letter-spacing: 2px;font-size: 16px;">多年來，基於原始 Transformer 模型中的編碼器模塊開發了多種僅編碼器架構。其中兩個最具代表性的例子是 BERT（ </span><span style="outline: 0px;letter-spacing: 2px;font-size: 16px;">用於語言理解的深度雙向 Transformer 預訓練 2018</span><span style="outline: 0px;letter-spacing: 2px;font-size: 16px;">）和 RoBERTa（</span><span style="outline: 0px;letter-spacing: 2px;font-size: 16px;">魯棒優化的 BERT 預訓練方法，2018</span><span style="outline: 0px;letter-spacing: 2px;font-size: 16px;">）。</span></p><p ql-global-para="true" line="7kNX" ql-global="true" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;text-align: justify;"><span style="outline: 0px;letter-spacing: 2px;font-size: 16px;">&nbsp;</span></p><p ql-global-para="true" line="dTUz" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;text-align: left;"><span style="outline: 0px;letter-spacing: 2px;font-size: 16px;">BERT（Bidirectional Encoder Representations from Transformers）是一種基於 Transformer 編碼器模塊的僅編碼器架構，它使用掩碼語言建模（如下圖所示）和下一個句子預測任務，在大型文本語料庫上進行預訓練。</span></p><p ql-global-para="true" line="dTUz" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;text-align: center;"><br></p><section style="line-height: 100%;margin: 0pt 8px;font-size: 11pt;color: rgb(73, 73, 73);text-align: center;"><img class="rich_pages wxw-img" data-backh="340" data-backw="562" data-ratio="0.6046296296296296" src="https://oscimg.oschina.net/oscnet/9181fed3-ebd9-4431-910a-6876353bfdd0.png" data-type="png" data-w="1080" height="auto" style="width: 100%;height: auto;" width="1456" referrerpolicy="no-referrer"><em><span style="font-size: 12px;text-align: center;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.034em;color: rgb(136, 136, 136);">BERT 式 Transformer 中使用的掩碼語言建模預訓練目標圖示。</span></em></section><p ql-global-para="true" line="KqmY" style="line-height: 100%;margin-bottom: 0pt;margin-top: 0pt;font-size: 11pt;color: rgb(73, 73, 73);text-align: center;"><br></p><p ql-global-para="true" line="KqmY" style="line-height: 100%;margin-bottom: 0pt;margin-top: 0pt;font-size: 11pt;color: #494949;"><br></p><p ql-global-para="true" line="v1Tx" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><span style="font-size: 16px;outline: 0px;letter-spacing: 2px;">掩碼語言建模的主要思路是在輸入序列中隨機掩碼（或替換）一些單詞詞元，並訓練模型根據上下文來預測原始的掩碼詞元。</span></p><p ql-global-para="true" line="bVfy" ql-global="true" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><span style="font-size: 16px;outline: 0px;letter-spacing: 2px;">&nbsp;</span></p><p ql-global-para="true" line="WFlZ" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><span style="font-size: 16px;outline: 0px;letter-spacing: 2px;">除上圖所示的掩碼語言建模預訓練任務之外，下一個句子預測任務要求模型去預測兩個隨機排列的句子在原始文檔中的語句順序是否正確。例如，兩個用[SEP]標記分隔開的隨機句子：</span></p><p ql-global-para="true" line="WFlZ" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><span style="font-size: 16px;letter-spacing: 2px;"></span><br></p><ul class="list-paddingleft-1" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><li style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><p style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><span style="outline: 0px;letter-spacing: 2px;">[CLS] Toast is a simple yet delicious food [SEP] It’s often served with butter, jam, or honey.</span></p></li><li style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><p style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><span style="outline: 0px;letter-spacing: 2px;">[CLS] It’s often served with butter, jam, or honey. [SEP] Toast is a simple yet delicious food.</span></p></li></ul><p ql-global-para="true" line="XE3v" ql-global="true" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><span style="outline: 0px;letter-spacing: 2px;">&nbsp;</span></p><p ql-global-para="true" line="YIyR" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><span style="font-size: 16px;outline: 0px;letter-spacing: 2px;">其中，[CLS]詞元是模型的佔位符，提示模型返回一個 True 或 False 標籤，用來表示句子順序是否正確。</span></p><p ql-global-para="true" line="32qe" ql-global="true" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><span style="font-size: 16px;outline: 0px;letter-spacing: 2px;">&nbsp;</span></p><p ql-global-para="true" line="G4mq" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><span style="font-size: 16px;outline: 0px;letter-spacing: 2px;">掩碼語言和下一個句子預訓練目標使得 BERT 可以大量學習輸入文本的上下文表示，然後可以針對各種下游任務（如情感分析、問答和命名實體識別）對這些表示進行微調。</span></p><p ql-global-para="true" line="53Rw" ql-global="true" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><span style="font-size: 16px;outline: 0px;letter-spacing: 2px;">&nbsp;</span></p><p ql-global-para="true" line="qq5c" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><span style="font-size: 16px;outline: 0px;letter-spacing: 2px;">RoBERTa（Robustly optimized BERT approach）是 BERT 的優化版本。它與 BERT 保持了相同的整體架構，但進行了一些訓練和優化改進，例如更大的 batch 尺寸，更多的訓練數據，並去除了下一個句子預測任務。這些改進使得 RoBERTa 擁有更好的性能，相比 BERT，RoBERTa 能更好地處理各種自然語言理解任務。</span></p><p ql-global-para="true" line="KqmY" style="line-height: 100%;margin-bottom: 0pt;margin-top: 0pt;font-size: 11pt;color: #494949;"><br></p><span id="OSC_h2_3"></span><h2 style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);text-align: center;line-height: 1.6em;"><p style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);text-align: center;line-height: 1.6em;"><strong inline-dir="ltr" ql-global="true" style="font-size: 12pt;"><strong style="outline: 0px;"><span style="outline: 0px;letter-spacing: 2px;font-size: 24px;color: rgb(246, 171, 0);">3</span></strong></strong></p><p style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);text-align: center;line-height: 1.6em;"><span style="font-size: 17px;"><strong inline-dir="ltr" ql-global="true" style="font-size: 12pt;"><span style="font-size: 17px;color: rgb(30, 35, 128);"><strong style="outline: 0px;"><span style="font-size: 17px;outline: 0px;letter-spacing: 2px;">解碼器</span></strong></span></strong></span></p></h2><p ql-global-para="true" line="ssPl" ql-global="true" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><strong inline-dir="ltr" ql-global="true" style="font-size: 12pt;"><span style="font-size: 16px;outline: 0px;letter-spacing: 2px;">&nbsp;</span></strong></p><p ql-global-para="true" line="ggKv" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><span style="outline: 0px;letter-spacing: 2px;font-size: 16px;">回到本節開頭的原始 Transformer 架構，解碼器中的多頭自注意機制與編碼器中的類似，但經過掩碼處理，以防模型關注到未來位置，確保對位置 i 的預測僅基於已知的小於 i 的輸出位置。下圖為解碼器逐詞生成輸出的過程。</span></p><p ql-global-para="true" line="ggKv" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><span style="font-size: 16px;letter-spacing: 2px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;"></span><br></p><section style="line-height: 100%;margin: 0pt 8px;font-size: 11pt;color: rgb(73, 73, 73);"><img class="rich_pages wxw-img" data-backh="508" data-backw="578" data-ratio="0.8796296296296297" src="https://oscimg.oschina.net/oscnet/4cb53146-0bdd-4ab8-b165-bf38c2119643.png" data-type="png" data-w="1080" height="auto" style="width: 100%;height: auto;" width="1162" referrerpolicy="no-referrer"></section><p ql-global-para="true" line="ByIX" style="text-align:center;line-height: 100%;margin-bottom: 0pt;margin-top: 0pt;font-size: 11pt;color: #494949;"><span style="color: rgb(136, 136, 136);"><em><span style="font-size: 12px;">原始 Transformer 中的下一個句子預測任務示意圖。</span></em></span><strong inline-dir="ltr" ql-global="true" style="text-align: justify;letter-spacing: 0.034em;font-size: 12pt;"></strong></p><p ql-global-para="true" line="LD42" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><strong inline-dir="ltr" ql-global="true" style="font-size: 12pt;"><br></strong></p><p ql-global-para="true" line="LD42" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><span style="font-size: 16px;outline: 0px;letter-spacing: 2px;">這種掩碼操作（在上圖中可明確看到，但實際上在解碼器的多頭自注意機制內部發生）對於在訓練和推理過程中保持 Transformer 模型的自迴歸特性至關重要。自迴歸特性能確保模型逐個生成輸出詞元，並使用先前生成的詞元作為上下文，以生成下一個詞元。</span></p><p ql-global-para="true" line="6Phy" ql-global="true" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><span style="font-size: 16px;outline: 0px;letter-spacing: 2px;">&nbsp;</span></p><p ql-global-para="true" line="VuCc" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><span style="font-size: 16px;outline: 0px;letter-spacing: 2px;">多年來，研究人員在原始編碼器-解碼器 Transformer 架構的基礎上進行擴展，開發出了幾種僅解碼器模型，這些模型能高效處理各種自然語言任務，其中最著名的是 GPT（Generative Pre-trained Transformer）系列模型。</span></p><p ql-global-para="true" line="KShm" ql-global="true" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><span style="font-size: 16px;outline: 0px;letter-spacing: 2px;">&nbsp;</span></p><p ql-global-para="true" line="mTt2" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><span style="font-size: 16px;outline: 0px;letter-spacing: 2px;">GPT 系列模型為僅解碼器模型，它們在大規模無監督文本數據上進行預訓練，然後針對特定任務進行微調，如文本分類、情感分析、問答和摘要生成等。GPT 模型包括 GPT-2、GPT-3（GPT-3 於 2020 年發佈，具備少樣本學習能力）以及最新的 GPT-4，這些模型在各種基準測試中展現出了卓越性能，是目前最受歡迎的自然語言處理架構。</span></p><p ql-global-para="true" line="mTt2" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><span style="font-size: 16px;letter-spacing: 2px;color: rgba(0, 0, 0, 0.9);"><br></span></p><p ql-global-para="true" line="mTt2" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><span style="font-size: 16px;letter-spacing: 2px;color: rgba(0, 0, 0, 0.9);">GPT 模型最引人注目的特性之一是湧現特性。湧現特性指的是模型在下一個詞預測的預訓練中發展出來的能力和技能。儘管這些模型只是被訓練預測下一個詞，但預訓練後的模型卻能夠執行各種任務，如文本摘要生成、翻譯、問答和分類等。此外，這些模型可通過上下文學習來完成新任務，而無需更新模型參數。</span></p><p ql-global-para="true" line="KqmY" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);text-align: center;line-height: 1.6em;"><br></p><p style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);text-align: center;line-height: 1.6em;"><strong inline-dir="ltr" ql-global="true" style="font-size: 12pt;"><strong style="outline: 0px;"><span style="outline: 0px;letter-spacing: 2px;font-size: 24px;color: rgb(246, 171, 0);">4</span></strong></strong></p><p style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);text-align: center;line-height: 1.6em;"><strong inline-dir="ltr" ql-global="true" style="font-size: 12pt;"><span style="font-size: 17px;color: rgb(30, 35, 128);"><strong style="outline: 0px;"><span style="font-size: 17px;outline: 0px;letter-spacing: 2px;">編碼器-解碼器混合模型</span></strong></span></strong></p><p ql-global-para="true" line="KqmY" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);text-align: center;line-height: 1.6em;"><br></p><ul class="list-paddingleft-1" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><li style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><p style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;text-align: left;"><span style="font-size: 16px;outline: 0px;letter-spacing: 2px;">BART (</span><span style="font-size: 16px;outline: 0px;letter-spacing: 2px;">Denoising Sequence-to-Sequence Pre-training for Natural Language Generation, Translation, and Comprehension, 2019</span><span style="font-size: 16px;outline: 0px;letter-spacing: 2px;">)</span></p></li><li style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><p style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;text-align: left;"><span style="font-size: 16px;outline: 0px;letter-spacing: 2px;">and T5 (</span><span style="font-size: 16px;outline: 0px;letter-spacing: 2px;">Exploring the Limits of Transfer Learning with a Unified Text-to-Text Transformer, 2019</span><span style="font-size: 16px;outline: 0px;letter-spacing: 2px;">).</span></p></li></ul><p ql-global-para="true" line="9kOd" ql-global="true" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><span style="font-size: 16px;outline: 0px;letter-spacing: 2px;">&nbsp;</span></p><p ql-global-para="true" line="o411" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><span style="font-size: 16px;outline: 0px;letter-spacing: 2px;">除傳統的編碼器和解碼器架構之外，新型編碼器-解碼器模型的發展取得了重大突破，充分發揮了編碼器和解碼器模型的優勢。這些模型融合了新穎技術、預訓練目標或架構修改，以提高在各種自然語言處理任務中的性能表現。下面是一些值得關注的新型編碼器-解碼器模型：</span></p><p ql-global-para="true" line="brLj" ql-global="true" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><span style="font-size: 16px;outline: 0px;letter-spacing: 2px;">&nbsp;</span></p><ul class="list-paddingleft-1" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><li style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><p style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><span style="font-size: 16px;outline: 0px;letter-spacing: 2px;">BART（用於自然語言生成、翻譯和理解的去噪序列到序列預訓練模型，2019 年發佈）</span></p></li></ul><p ql-global-para="true" line="uBa7" ql-global="true" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><span style="font-size: 16px;outline: 0px;letter-spacing: 2px;">&nbsp;</span></p><ul class="list-paddingleft-1" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><li style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><p style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><span style="font-size: 16px;outline: 0px;letter-spacing: 2px;">T5（通過統一的文本到文本 Transformer 來探索遷移學習的極限，2019 年發佈）。</span></p></li></ul><p ql-global-para="true" line="3BS0" ql-global="true" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><span style="font-size: 16px;outline: 0px;letter-spacing: 2px;">&nbsp;</span></p><p ql-global-para="true" line="1jaN" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><span style="font-size: 16px;outline: 0px;letter-spacing: 2px;">編碼器-解碼器模型通常用於自然語言處理，這些任務涉及理解輸入序列並生成相應的輸出序列。這些序列往往具有不同的長度和結構。這種模型在需要複雜映射以及捕捉輸入序列和輸出序列之間的元素關係的任務中表現出色。編碼器-解碼器模型常用於文本翻譯和摘要生成等任務。</span></p><p ql-global-para="true" line="1jaN" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><br></p><span id="OSC_h2_4"></span><h2 style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);text-align: center;line-height: 1.6em;"><p style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);text-align: center;line-height: 1.6em;"><strong style="outline: 0px;"><span style="outline: 0px;letter-spacing: 2px;font-size: 24px;color: rgb(246, 171, 0);">5</span></strong></p><p style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);text-align: center;line-height: 1.6em;"><span style="color: rgb(30, 35, 128);font-size: 17px;"><strong style="outline: 0px;"><span style="font-size: 17px;color: rgb(30, 35, 128);outline: 0px;letter-spacing: 2px;">術語和行話</span></strong></span></p><p style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);text-align: center;line-height: 1.6em;"><br><strong style="letter-spacing: 0.544px;font-size: var(--articleFontsize);outline: 0px;"><span style="outline: 0px;letter-spacing: 2px;font-size: 24px;color: rgb(246, 171, 0);"></span></strong></p></h2><p ql-global-para="true" line="xTxg" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><span style="font-size: 16px;outline: 0px;letter-spacing: 2px;">這些模型（包括僅編碼器、僅解碼器和編碼器-解碼器模型）都屬於序列到序列模型（通常簡稱為「seq2seq」）。值得注意的是，雖然我們將 BERT 模型稱為僅編碼器模型，但「僅編碼器」這個描述可能會引起誤解，因為這些模型在預訓練期間也會將嵌入解碼為輸出的詞元或文本。</span></p><p ql-global-para="true" line="ffbc" ql-global="true" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><span style="font-size: 16px;outline: 0px;letter-spacing: 2px;">&nbsp;</span></p><p ql-global-para="true" line="olef" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><span style="font-size: 16px;outline: 0px;letter-spacing: 2px;">換句話説，僅編碼器和僅解碼器架構都在進行「解碼」。然而，與僅解碼器和編碼器-解碼器架構不同，僅編碼器架構不是以自迴歸的方式進行解碼。自迴歸解碼是指逐個詞元地生成輸出序列，其中每個詞元都基於先前生成的詞元。相比之下，僅編碼器模型不會以這種方式生成連貫的輸出序列。相反，它們專注於理解輸入文本並生成特定任務的輸出，如標籤預測或詞元預測。</span></p><p ql-global-para="true" line="olef" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><br></p><span id="OSC_h2_5"></span><h2 style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);text-align: center;line-height: 1.6em;"><p style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);text-align: center;line-height: 1.6em;"><strong style="outline: 0px;"><span style="outline: 0px;letter-spacing: 2px;font-size: 24px;color: rgb(246, 171, 0);">6</span></strong></p><p style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);text-align: center;line-height: 1.6em;"><span style="color: rgb(30, 35, 128);font-size: 17px;"><strong style="outline: 0px;"><span style="font-size: 17px;color: rgb(30, 35, 128);outline: 0px;letter-spacing: 2px;">結論</span></strong></span></p></h2><p ql-global-para="true" line="oXY9" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><span style="font-size: 16px;outline: 0px;letter-spacing: 2px;"><br></span></p><p ql-global-para="true" line="oXY9" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><span style="font-size: 16px;outline: 0px;letter-spacing: 2px;">簡而言之，編碼器模型在學習用於分類任務的嵌入表示方面非常受歡迎，編碼器-解碼器模型用於生成任務，這些任務依賴輸入，以生成輸出（例如翻譯和摘要生成），而僅解碼器模型則用於其他類型的生成任務，包括問答。</span></p><p ql-global-para="true" line="oXY9" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><span style="font-size: 16px;outline: 0px;letter-spacing: 2px;"><br></span></p><p ql-global-para="true" line="oXY9" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><span style="font-size: 16px;outline: 0px;letter-spacing: 2px;">自首個 Transformer 架構問世以來，已經開發出數百種編碼器、解碼器和編碼器-解碼器混合模型，模型概覽如下圖所示：</span></p><p ql-global-para="true" line="oXY9" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><br></p><section style="line-height: 100%;margin: 0pt 8px;font-size: 11pt;color: rgb(73, 73, 73);text-align: center;"><img class="rich_pages wxw-img" data-backh="780" data-backw="578" data-ratio="1.349074074074074" src="https://oscimg.oschina.net/oscnet/b7af6163-1ad1-4fe1-bee9-5e7645230015.png" data-type="png" data-w="1080" height="auto" style="width: 100%;height: auto;" width="1456" referrerpolicy="no-referrer"><span style="color: rgb(136, 136, 136);"><em><span style="color: rgb(136, 136, 136);text-align: center;font-size: 12px;">按架構類型和開發者分類的部分最受歡迎的大型語言 Transformer。</span></em></span></section><p ql-global-para="true" line="PDtt" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><br></p><p ql-global-para="true" line="ddC0" style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><span style="font-size: 16px;outline: 0px;letter-spacing: 2px;">儘管僅編碼器模型逐漸失去了關注度，但 GPT-3、ChatGPT 和 GPT-4 等僅解碼器模型在文本生成方面取得了重大突破，並開始廣泛流行。然而，僅編碼器模型在基於文本嵌入進行預測模型訓練方面仍然非常有用，相較於生成文本，它具備獨特優勢。</span></p><p style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;"><br></p><section style="margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);caret-color: rgba(0, 0, 0, 0.9);text-size-adjust: inherit;line-height: 1.75em;text-align: left;"><span style="outline: 0px;color: rgb(136, 136, 136);font-size: 14px;letter-spacing: 1px;">其他人都在看</span></section><span id="OSC_h3_6"></span><h3 style="letter-spacing: 0.578px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);"><ul class="list-paddingleft-1" style="width: 577.422px;outline: 0px;"><li style="outline: 0px;font-size: 14px;letter-spacing: 1px;"><p style="outline: 0px;"><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzU5ODY2MTk3Nw%3D%3D%26mid%3D2247491825%26idx%3D1%26sn%3D6b7494f1a24520f5e76fbca4b739e199%26chksm%3Dfe426ec7c935e7d10925628ee95207e9cd7e4c61b36c176d1e1dbb89bc1c79f1729dde095301%26scene%3D21%23wechat_redirect" textvalue="語言大模型的進化軌跡" linktype="text" imgurl="" imgdata="null" data-itemshowtype="0" tab="innerlink" data-linktype="2">語言大模型的進化軌跡</a><br style="outline: 0px;"></p></li><li style="outline: 0px;font-size: 14px;letter-spacing: 1px;"><p style="outline: 0px;"><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzU5ODY2MTk3Nw%3D%3D%26mid%3D2247491908%26idx%3D1%26sn%3D208a592f66f2cb2f412f9b58bca87401%26chksm%3Dfe426f72c935e6641a14837bb0a600bcbf28b9b2d427ca01477b492cfff2116aafedfd66c900%26scene%3D21%23wechat_redirect" textvalue="通俗解構語言大模型的工作原理" linktype="text" imgurl="" imgdata="null" data-itemshowtype="0" tab="innerlink" data-linktype="2" hasload="1" style="color: var(--weui-LINK);font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 14px;letter-spacing: 1px;text-wrap: wrap;background-color: rgb(255, 255, 255);outline: 0px;cursor: pointer;">通俗解構語言大模型的工作原理</a><br></p></li><li style="outline: 0px;font-size: 14px;letter-spacing: 1px;"><p style="outline: 0px;"><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzU5ODY2MTk3Nw%3D%3D%26mid%3D2247492001%26idx%3D1%26sn%3D8ee2ef77916c2992f570c294adc1ec19%26chksm%3Dfe426f97c935e6819fbd0cad4ca972da01c1ba40baef933db2a3eadfaed12a7605444ad86132%26scene%3D21%23wechat_redirect" textvalue="PyTorch 創始人：開源成功的方法論" linktype="text" imgurl="" imgdata="null" data-itemshowtype="0" tab="innerlink" data-linktype="2">PyTorch 創始人：開源成功的方法論</a><br style="outline: 0px;"></p></li><li style="outline: 0px;font-size: 14px;letter-spacing: 1px;"><p style="outline: 0px;"><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzU5ODY2MTk3Nw%3D%3D%26mid%3D2247491721%26idx%3D1%26sn%3D71fd215ca3625f276913db5f62d6791e%26chksm%3Dfe426ebfc935e7a96d0437566485a5774b6e3063ba4c768093eaffc25f054730e0f7f836be3f%26scene%3D21%23wechat_redirect" textvalue="GPT 總設計師：大型語言模型的未來" linktype="text" imgurl="" imgdata="null" data-itemshowtype="0" tab="innerlink" data-linktype="2" hasload="1" style="color: var(--weui-LINK);outline: 0px;cursor: pointer;"></a><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzU5ODY2MTk3Nw%3D%3D%26mid%3D2247491882%26idx%3D1%26sn%3D7fabac6b07025d2e4e3a5db652bdab69%26chksm%3Dfe426f1cc935e60a8e203870b2ad09e2f2c9c0a48d1b6b9f826f70270875672d26e3775bf272%26scene%3D21%23wechat_redirect" textvalue="大模型的無限上下文與數據集組合藝術" linktype="text" imgurl="" imgdata="null" data-itemshowtype="0" tab="innerlink" data-linktype="2" hasload="1" style="color: var(--weui-LINK);outline: 0px;cursor: pointer;">大模型的無限上下文與數據集組合藝術</a></p></li><li style="outline: 0px;font-size: 14px;letter-spacing: 1px;"><p style="outline: 0px;"><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzU5ODY2MTk3Nw%3D%3D%26mid%3D2247491926%26idx%3D1%26sn%3Da442e6e93d8fb60106c952a96f37883f%26chksm%3Dfe426f60c935e676e569842cee9e4c60b82471e41dcbb9e6c126d79d3d383ba5e37a8e6b3113%26scene%3D21%23wechat_redirect" textvalue="GPT-4.5 前瞻：代碼解釋器，編程新紀元" linktype="text" imgurl="" imgdata="null" data-itemshowtype="0" tab="innerlink" data-linktype="2" hasload="1" style="color: var(--weui-LINK);outline: 0px;cursor: pointer;">GPT-4.5 前瞻：代碼解釋器，編程新紀元</a></p></li><li style="outline: 0px;font-size: 14px;letter-spacing: 1px;"><p style="outline: 0px;"><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzU5ODY2MTk3Nw%3D%3D%26mid%3D2247491988%26idx%3D1%26sn%3Dc5fcc5f3fa27bb00bf8ef9af05e7ca89%26chksm%3Dfe426fa2c935e6b4ebb279bf19471f39629ccfb6733e6d8a580fdcbb01e80bd59266f3830bac%26scene%3D21%23wechat_redirect" textvalue="OpenAI 首席科學家：通向無監督學習之路" linktype="text" imgurl="" imgdata="null" data-itemshowtype="0" tab="innerlink" data-linktype="2">OpenAI 首席科學家：通向無監督學習之路</a><br style="outline: 0px;"></p></li><li style="outline: 0px;font-size: 14px;letter-spacing: 1px;"><section style="outline: 0px;line-height: 1.75em;"><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzU5ODY2MTk3Nw%3D%3D%26mid%3D2247491935%26idx%3D1%26sn%3D9535636ca06c16345b432a9de5383f1e%26chksm%3Dfe426f69c935e67f717ca8a968b9dd2a3f69b45f330b561b3584ba1b196149c8ba00d3d452eb%26scene%3D21%23wechat_redirect" textvalue="OpenAI 超級對齊負責人：「駕馭」超級智能的四年計劃" linktype="text" imgurl="" imgdata="null" data-itemshowtype="0" tab="innerlink" data-linktype="2" hasload="1" style="color: var(--weui-LINK);outline: 0px;cursor: pointer;">OpenAI 對齊負責人：「駕馭」超級智能四年計劃</a><br style="outline: 0px;"></section></li></ul><section style="outline: 0px;line-height: 1.75em;text-align: left;"><span style="outline: 0px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 1px;font-size: 14px;color: rgb(63, 63, 63);">試用 OneFlow: github.com/Oneflow-Inc/oneflow/</span></section></h3><h2 style="margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);"><hr style="outline: 0px;border-style: solid;border-right-width: 0px;border-bottom-width: 0px;border-left-width: 0px;border-color: rgba(0, 0, 0, 0.1);transform-origin: 0px 0px;transform: scale(1, 0.5);"></h2><p style="margin-bottom: 0px;letter-spacing: 0.578px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);"><img class="rich_pages wxw-img" data-backh="162" data-backw="578" data-galleryid="" data-ratio="0.2802690582959641" data-s="300,640" src="https://oscimg.oschina.net/oscnet/37608b32-0850-4062-ad9e-62704a14d974.png" data-type="png" data-w="892" style="outline: 0px;letter-spacing: 0.578px;text-align: center;font-size: var(--articleFontsize);display: inline;width: 100%;visibility: visible !important;height: auto;" referrerpolicy="no-referrer"></p><p style="display: none;"><mp-style-type data-value="10000"></mp-style-type></p></div><p style="color: #858585; font-size: 13px;">本文分享自微信公眾號 - OneFlow（OneFlowTechnology）。<br>如有侵權，請聯繫 support@oschina.cn 刪除。<br>本文參與「<a href="https://www.oschina.net/sharing-plan" target="_blank">OSC 源創計劃</a>」，歡迎正在閲讀的你也加入，一起分享。</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 28 Sep 2023 02:17:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/oneflow/blog/10109514</guid>
            <link>https://my.oschina.net/oneflow/blog/10109514</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[1-8 月我國軟件業務收入 75178 億元，同比增長 13.5%]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff; color:#333333"><span style="color:#222222">工信部</span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.miit.gov.cn%2Fgxsj%2Ftjfx%2Frjy%2Fart%2F2023%2Fart_6971a3c0ea6c49c19e364c9597a79077.html" target="_blank">發佈</a><span style="background-color:#ffffff; color:#222222">公告指出，</span>1－8 月份，我國軟件和信息技術服務業（以下簡稱「軟件業」）運行態勢平穩，軟件業務收入保持較快增長，利潤總額保持兩位數增長，軟件業務出口小幅回落。</p><h4 style="margin-left:0px; margin-right:0px; text-align:left"><strong>一、總體運行情況</strong></h4><p style="color:#070707; margin-left:0; margin-right:0; text-align:left"><strong>軟件業務收入保持較快增長。</strong>1－8 月份，我國軟件業務收入 75178 億元，同比增長 13.5%。</p><p style="color:#070707; margin-left:0; margin-right:0; text-align:left"><img height="247" src="https://oscimg.oschina.net/oscnet/up-f59dae23160a190f074b176bc35b4b355cc.png" width="500" referrerpolicy="no-referrer"></p><p style="color:#070707; margin-left:0; margin-right:0; text-align:left"><strong>利潤總額保持兩位數增長。</strong>1－8 月份，軟件業利潤總額 8628 億元，同比增長 13.9%。</p><p style="color:#070707; margin-left:0; margin-right:0; text-align:left"><img height="240" src="https://oscimg.oschina.net/oscnet/up-a5be7b7ce2f6094b7ce524cb85d2fbae3ae.png" width="500" referrerpolicy="no-referrer"></p><p style="color:#070707; margin-left:0; margin-right:0; text-align:left"><strong>軟件業務出口小幅回落。</strong>1－8 月份，軟件業務出口 319.3 億美元，同比下降 4.5%，其中，軟件外包服務出口同比增長 3.4%。</p><p style="color:#070707; margin-left:0; margin-right:0; text-align:left"><img height="245" src="https://oscimg.oschina.net/oscnet/up-02c6fcf5f78b3c28e5a1d42f26fd56c8475.png" width="500" referrerpolicy="no-referrer"></p><h4 style="margin-left:0px; margin-right:0px; text-align:left">二、分領域運行情況</h4><p style="color:#070707; margin-left:0; margin-right:0; text-align:left"><strong>軟件產品收入保持兩位數增長。</strong>1－8 月份，軟件產品收入 17437 億元，同比增長 10.8%，佔全行業收入的比重為 23.2%。其中，工業軟件產品收入 1704 億元，同比增長 12.5%。</p><p style="color:#070707; margin-left:0; margin-right:0; text-align:left"><strong>信息技術服務收入較快增長。</strong>1－8 月份，信息技術服務收入 50116 億元，同比增長 14.8%，在全行業收入中佔比為 66.7%。其中，雲計算、大數據服務共實現收入 7532 億元，同比增長 15.7%，佔信息技術服務收入的比重為 15%；集成電路設計收入 1994 億元，同比增長 5%；電子商務平台技術服務收入 6981 億元，同比增長 9%。</p><p style="color:#070707; margin-left:0; margin-right:0; text-align:left"><strong>信息安全收入穩步增長。</strong>1－8 月份，信息安全產品和服務收入 1211 億元，同比增長 10%。</p><p style="color:#070707; margin-left:0; margin-right:0; text-align:left"><strong>嵌入式系統軟件收入平穩增長。</strong>1－8 月份，嵌入式系統軟件收入 6413 億元，同比增長 11.7%。</p><p style="color:#070707; margin-left:0; margin-right:0; text-align:left"><img height="240" src="https://oscimg.oschina.net/oscnet/up-ca04e9482bac3cc3bfa58966553072bb78c.png" width="500" referrerpolicy="no-referrer"></p><h4 style="margin-left:0px; margin-right:0px; text-align:left"><strong>三、分地區運行情況</strong></h4><p style="color:#070707; margin-left:0; margin-right:0; text-align:left"><strong>東北、中、西部地區軟件業務收入小幅回落，東部地區增勢突出。</strong>1－8 月份，東部地區完成軟件業務收入 62244 億元，同比增長 14%，增速較 1－7 月份提高 0.1 個百分點；中部地區完成軟件業務收入 3619 億元，同比增長 13.1%，增速較 1－7 月份回落 1 個百分點；西部地區完成軟件業務收入 7604 億元，同比增長 10.1%，增速較 1－7 月份回落 0.1 個百分點；東北地區完成軟件業務收入 1711 億元，同比增長 13.3%，增速較 1－7 月份回落 1.1 個百分點。四個地區軟件業務收入在全國總收入中的佔比分別為 82.8%、4.8%、10.1% 和 2.3%。</p><p style="color:#070707; margin-left:0; margin-right:0; text-align:left"><img height="411" src="https://oscimg.oschina.net/oscnet/up-014347b37905d0dfbf6bf0c75b012606161.png" width="853" referrerpolicy="no-referrer"></p><p style="color:#070707; margin-left:0; margin-right:0; text-align:left"><strong>主要軟件大省收入佔比持續提升。</strong>1－8 月份，軟件業務收入居前 5 名的省份中,北京市、廣東省、江蘇省、山東省、上海市軟件收入分別為 16277 億元、13224 億元、8820 億元、7813 億元和 6599 億元，分別增長 18%、14%、8%、16.9% 和 19.2%，五省 (市) 合計軟件業務收入 52733 億元，佔全國比重為 70.1%，佔比較去年同期提高 1 個百分點。</p><p style="color:#070707; margin-left:0; margin-right:0; text-align:left"><img height="245" src="https://oscimg.oschina.net/oscnet/up-532e0fecf7e23b162e945c871453a347556.png" width="500" referrerpolicy="no-referrer"></p><p style="color:#070707; margin-left:0; margin-right:0; text-align:left"><strong>中心城市軟件業務收入平穩增長。</strong>1－8 月份，全國 15 個副省級中心城市實現軟件業務收入 36850 億元，同比增長 10.8%，增速較 1－7 月份回落 0.3 個百分點，佔全國軟件業務收入比重為 49%，佔比較去年同期回落 1.2 個百分點。其中，大連、濟南、成都、深圳 、廈門和青島軟件業務收入增速超過全行業整體增速。</p><p style="color:#070707; margin-left:0; margin-right:0; text-align:left"><img height="252" src="https://oscimg.oschina.net/oscnet/up-8dd2fb16da3fed178ef346f447a3e12b3c6.png" width="500" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 27 Sep 2023 09:53:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/259757</guid>
            <link>https://www.oschina.net/news/259757</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[「根本不需要 TypeScript，JS + JSDoc 夠了」，大佬説我想多了]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>本月，Ruby on Rails 作者 DHH 宣佈移除其團隊開源項目 Turbo 8 中的 TypeScript 代碼。</p><p><img height="768" src="https://oscimg.oschina.net/oscnet/up-58c4155f83bbd826f4bb0ec1ab8d1e32ccd.png" width="1080" referrerpolicy="no-referrer"></p><p>他認為，TypeScript 對他來説只是阻礙。不僅因為它需要顯式的編譯步驟，還因為它用類型編程污染了代碼，很影響開發體驗。</p><p>無獨有偶，不久前，知名前端 UI 框架 Svelte 也<span style="color:#245bdb"><a href="https://www.oschina.net/news/240489/svelte-ts-to-jsdoc" rel="nofollow">宣佈從 TypeScript 切換到 JavaScript</a></span>。負責 Svelte 編譯器的開發者説，改用 JSDoc 後，代碼不需要編譯構建即可進行調試 —— 簡化了編譯器的開發工作。</p><p>Svelte 不是第一個放棄 TypeScript 的前端框架。早在 2020 年，Deno 就遷移了一部分內部 TypeScript 代碼到 JavaScript，以減少構建時間。</p><p>Deno 團隊給出的理由，總結一下就是：<strong>減少構建時間</strong>、<strong>降低發佈的代碼體積</strong>、<strong>減少編寫的代碼量</strong>。</p><p>加上今年短期內已經有兩個項目從 TypeScript 切換到 JavaScript 了，這個狀況就很令人迷惑。<strong>難道從</strong><strong> TypeScript 切回 JavaScript</strong><strong> 已經成了當下的新潮流？</strong>在推特和 GitHub 上，討論也是紛紛揚揚。有人贊同，表示欣賞他們的勇氣；有人反對，表示這是開歷史倒車。網友覺得，編譯速度慢，改進編譯器就行了，因噎廢食有點想不通。</p><p>所以，放棄 TypeScript 迴歸 JavaScript 是在追求舒適的 partner，還是在開歷史的倒車？</p><p>對此，開源中國找來了 3 位使用過 TypeScript 和 JavaScript 的前端大佬，聽聽他們的看法。他們分別是：</p><ul><li><p><span style="color:#245bdb">劉勇，社區暱稱天豬，某大廠 Node.js </span><span style="color:#245bdb">Infra</span><span style="color:#245bdb"> 負責人，EggJS / CNPM 核心開發者。</span></p></li><li><p><span style="color:#245bdb">劉易成，社區暱稱 xcatliu（流浪小貓），《</span><span style="color:#245bdb">TypeScript</span><span style="color:#245bdb"> 入門教程》作者，來自騰訊文檔團隊。</span></p></li><li><p><span style="color:#245bdb">李振，社區暱稱 tick，來自騰訊文檔團隊。</span></p></li></ul><p>&nbsp;</p><span id="OSC_h1_1"></span><h1>一、開歷史倒車？談不上</h1><p><span style="color:#245bdb"><strong>Q1：</strong></span><span style="color:#245bdb"><strong>TypeScript</strong></span><span style="color:#245bdb"><strong> 是基於 </strong></span><span style="color:#245bdb"><strong>JavaScript</strong></span><span style="color:#245bdb"><strong> 推出的新語言，理論上應該比 JavaScript 完善的，為什麼大家還會倒回去用舊的 JavaScript 呢？這算不算開歷史的倒車？</strong></span></p><p><strong>劉勇：</strong>不算倒車，這只是一個選擇，在某些場景下，寫 TypeScript 會帶來一些額外成本。譬如我看過一些開源庫的源碼，核心邏輯可能就幾十行，但為了實現準確的類型提示，寫出來的類型體操反而遠遠多於核心源碼，孰是孰非對於不同的開發者有不同的準繩，需要找到其中的平衡點。當然，就目前的情況，在力所能及的情況下，我個人推薦能用 TypeScript 就用 TypeScript ，但是否要玩類型體操則根據開發者自身情況來決策。</p><p><strong>劉易成：</strong>已經使用了 TypeScript 的項目改回使用 JavaScript 是很少見的，更多的項目是從 JavaScript 升級到 TypeScript。TypeScript 完善了 JavaScript 的類型系統，使得代碼的可維護性更高了，但同時也增加了編譯步驟和一些開發成本。對於一些項目而言，JavaScript 已經能夠滿足需求了，就沒必要增加 TypeScript 類型系統的複雜性了，但是對於另一些複雜項目，更需要類型系統來幫助提高代碼可維護性，所以這不算開歷史的倒車，而是根據實際情況做技術選型。</p><p>&nbsp;</p><p><span style="color:#245bdb"><strong>Q2：以上從 </strong></span><span style="color:#245bdb"><strong>TypeScript</strong></span><span style="color:#245bdb"><strong> 切回到 </strong></span><span style="color:#245bdb"><strong>JavaScript</strong></span><span style="color:#245bdb"><strong> 的項目，都是做開發框架的，所以這是不是跟項目類型有關呢？做框架的項目更有可能選擇</strong></span><span style="color:#245bdb"><strong> JavaScript</strong></span><span style="color:#245bdb"><strong> 嗎？</strong></span></p><p><strong>李振：</strong>是的，項目類型可以是影響選擇 JavaScript 還是 TypeScript 的一個因素。在開發框架或庫時，特別是前端框架或庫，選擇使用 JavaScript 的情況較為常見。</p><p>一方面，開發框架需要具備廣泛的兼容性，以便開發者可以在各種項目中使用。由於 JavaScript 是 Web 開發的基礎語言，幾乎所有的瀏覽器和環境都支持 JavaScript。這使得使用 JavaScript 編寫的框架更容易被廣泛採用和集成。</p><p>另一方面，開發框架通常需要提供簡單易用的 API 和靈活的擴展機制，以滿足各種項目的需求。使用 JavaScript 可以更加直接地表達這些概念，而不需要過多的類型註解和編譯步驟。這使得開發者可以更快地理解和使用框架，並且更容易進行自定義和擴展。</p><p><strong>劉勇：</strong>框架和類庫的開發者，往往需要考慮到很多 edge case，在這種情況下，編寫完善的類型是一件很費心力的事，代碼量會多了不少，從而會導致維護成本的增加。其實現在社區還是在探索的階段，需要找到一個平衡點，哪一些是需要完善的，哪一些是可以取捨的。</p><p>&nbsp;</p><p><span style="color:#245bdb"><strong>Q3：基於</strong></span><span style="color:#245bdb"><strong></strong></span><span style="color:#245bdb"><strong>JavaScript</strong></span><span style="color:#245bdb"><strong> 改進的語言卻遭到了開發者的嫌棄，這能説是 </strong></span><span style="color:#245bdb"><strong>TypeScript</strong></span><span style="color:#245bdb"><strong></strong></span><span style="color:#245bdb"><strong>設計的失敗嗎？</strong></span></p><p><strong>李振：</strong>這並不能被視為 TypeScript 設計的失敗。每個項目和開發團隊都有自己的需求和偏好。有些開發者可能認為 TypeScript 增加了額外的複雜性和學習曲線，或者覺得它在某些方面不符合他們的開發風格。這並不意味着 TypeScript 設計的失敗，而是反映了不同開發者對工具和語言的不同看法和需求。</p><p>TypeScript 仍然在許多項目中被廣泛使用，並且持續發展和改進。它提供了許多有價值的功能，如類型安全、代碼智能感知和重構支持等，這些功能對於大型項目和團隊協作非常有益。因此，無論是否有一些項目選擇回到 JavaScript，TypeScript 仍然是一個受歡迎和成功的語言。</p><p><strong>劉易成：</strong>TypeScript 的成功無需質疑，已經有無數的項目證明瞭它的成功。開發者並沒有「嫌棄」 TypeScript，只是認為並不是所有項目都適合使用 TypeScript。不管開發者用的是 JavaScript 還是 TypeScript ，都受益於 TypeScript 的 language service 太多了。TypeScript 已經是前端生態系統中最不可或缺的一環了。</p><p>&nbsp;</p><span id="OSC_h1_2"></span><h1>二、TypeScript 和 JavaScript 並不是簡單地互為替身</h1><p><span style="color:#245bdb"><strong>Q4：有評論認為，</strong></span><span style="color:#245bdb"><strong>TypeScript</strong></span><span style="color:#245bdb"><strong></strong></span><span style="color:#245bdb"><strong>編譯速度慢，改進編譯器就行了，轉回</strong></span><span style="color:#245bdb"><strong></strong></span><span style="color:#245bdb"><strong>JavaScript</strong></span><span style="color:#245bdb"><strong> 是因噎廢食，你怎麼看？</strong></span></p><p><strong>劉勇：</strong>需要提醒的是，目前社區一些轉回 JavaScript 的都是框架和類庫，這些作者的決策點並不是隻因為 TypeScript 編譯速度。</p><p>另外，「改進編譯器」這事其實沒那麼簡單，就像 TypeScript-node 在某個版本更新後，動態解析的速度慢了非常多，但也沒計劃優化。像 esbuild 目前還不支持裝飾器。同時應用側又開始一窩蜂上 monorepo，更加劇了整體耗時。我們只能寄希望於 TypeScript 官方的大神們再出絕招。</p><p><strong>劉易成：</strong>即使是 JavaScript 項目，也有編譯/打包/構建等過程，絕大部分項目都不會因為加入了 TypeScript 編譯就慢很多。是否轉回 JavaScript 還是需要綜合考慮項目複雜度、團隊協作規模等因素。</p><p>另外，改進 TypeScript 編譯速度並不是一個容易的事，TypeScript 的類型系統和語言特性很複雜，這隻能靠 TypeScript 團隊下功夫了。</p><p>&nbsp;</p><p><span style="color:#245bdb"><strong>Q5：我們一開始用 </strong></span><span style="color:#245bdb"><strong>TypeScript</strong></span><span style="color:#245bdb"><strong> 是因為 TypeScript 提供了類型檢查，彌補了 </strong></span><span style="color:#245bdb"><strong>JavaScript</strong></span><span style="color:#245bdb"><strong> 只有邏輯沒有類型的問題，那如果我們用 JavaScript + JSDoc 來解決類型聲明，是不是就不用使用 TypeScript 了？</strong></span></p><p><strong>劉勇：</strong>首先，JSDoc 並不能完全解決類型聲明問題，它也不能在開發期就幫助開發者發現一些問題。</p><p>其次，這兩者並不衝突，我個人在寫 TypeScript 的時候也會寫對應的 JSDoc，因為 TypeScript 的類型沒法有更多的註釋和描述。我更期望看到後續 TypeScript 團隊能優化這塊的體驗。</p><p><strong>劉易成：</strong>JSDoc 只能解決一部分類型的問題，而 TypeScript 是一個完整的類型系統。TypeScript 生態更繁榮，對於普通開發者和普通的項目而言，使用 JSDoc 的開發和維護成本可能會比 TypeScript 更高。</p><p><strong>李振：</strong>理論上也是可行的，但與 TypeScript 相比，它仍然存在一些限制：</p><ul><li><p>靜態類型檢查的完整性：JSDoc 註釋是基於註釋的方式，而不是直接嵌入到語言中，因此它的類型檢查可能不如 TypeScript 的類型系統完整和準確。</p></li><li><p>工具支持的差異：儘管一些工具和編輯器可以利用 JSDoc 註釋進行類型檢查，但與 TypeScript 相比，它們的功能和智能感知可能有所限制。</p></li><li><p>生態系統的差異：TypeScript 有一個獨立的類型系統和類型聲明文件生態系統，這使得與現有的 JavaScript 庫和工具更加無縫集成。而使用 JavaScript + JSDoc 可能需要更多的手動工作來編寫和維護類型註釋。</p></li></ul><p>&nbsp;</p><span id="OSC_h1_3"></span><h1>三、TypeScript 和 JavaScript ，其實各有千秋</h1><p><span style="color:#245bdb"><strong>Q6：你覺得</strong></span><span style="color:#245bdb"><strong></strong></span><span style="color:#245bdb"><strong>TypeScript</strong></span><span style="color:#245bdb"><strong></strong></span><span style="color:#245bdb"><strong>有什麼特別的長處，對開發者來説是</strong></span><span style="color:#245bdb"><strong></strong></span><span style="color:#245bdb"><strong>JavaScript</strong></span><span style="color:#245bdb"><strong> 做不到的？</strong></span></p><p><strong>劉勇：</strong>類型的元數據描述能力，這個是 JavaScript 目前還不具備的，除非 TC39 的 「JavaScript 類型標註」（ Types as Comments）等提案能落地。像我們就很重視 「API 元數據」，通過工程化的方式，可以從代碼中提取出來接口 API 信息，從而可以在 codegen，mock，前後端協作等很多方面來提升研發體驗和研發效能。</p><p><strong>李振：</strong>TypeScript 相對於 JavaScript ，主要是引入了靜態類型系統，並且可以兼容 JavaScript 生態。本質上來看，並沒有哪些功能是 JavaScript 完全無法實現的。但是 TypeScript 經過這麼多年的發展，已經形成自己良好的生態系統。比如 TypeScript 類型聲明文件，提供了豐富的類型定義，與第三方庫的集成更加順暢。JavaScript 要實現類似的功能，需要開發者做更多的工作。</p><p>&nbsp;</p><p><span style="color:#245bdb"><strong>Q7：你覺得對普通項目來説，使用</strong></span><span style="color:#245bdb"><strong></strong></span><span style="color:#245bdb"><strong>TypeScript</strong></span><span style="color:#245bdb"><strong></strong></span><span style="color:#245bdb"><strong>有什麼不方便或者不利的地方嗎？</strong></span></p><p><strong>劉勇：</strong>主要還是工作流的複雜化帶來開發成本的提升，我記得之前在 StackOverflow 看過一個關於 TypeScript 的回答是，我開發一個簡單的功能，但是解決類型問題就花了一整天的時間，在我們公司內部做日常的技術答疑的時候，也經常發現有不少用户對 TypeScript 問題完全不知道從何下手。舉一個 Node.js 項目的例子，很多用户就不理解為什麼 tsconfig.json 裏的 paths 在代碼編譯成 JavaScript 後會不生效，因為這些問題，就會容易導致產生計劃之外的工作量。</p><p><strong>劉易成：</strong>使用 TypeScript 需要增加一個「編譯」的過程，不過現在各種腳手架已經幫你做好了這些步驟，所以成本已經很低了。還有就是 TypeScript 有一些學習成本，如果是新手很容易不注意類型檢查，把 TypeScript 寫成了 AnyScript，失去了使用 TypeScript 的意義，所以建議通過一些約束和培訓，讓項目中的 TypeScript 更加標準。</p><p>&nbsp;</p><span id="OSC_h1_4"></span><h1>四、TypeScript VS JavaScript ，你 Pick 誰？</h1><p style="text-align:left">根據 Stack Overflow <span style="color:#245bdb"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsurvey.stackoverflow.co%2F2023%2F" rel="nofollow">發佈</a></span>的 2023 年開發者調查報告，JavaScript 連續 11 年成為最流行編程語言，使用佔比達 63.61%，TypeScript 則排名第五，使用佔比 38.87%。在人氣方面，JavaScript 的開發者社區仍然是巨大而活躍的，在社區中可以很方便地找到大量成熟的開發項目和可用資源。在框架和工具方面，隨着 TypeScript 的日益受歡迎，已經有了很多支持它的框架和工具。而 JavaScript，由於其歷史的深厚，幾乎所有的前端框架和庫都會優先支持。</p><p>&nbsp;</p><p><span style="color:#245bdb"><strong>Q8：有人認為，</strong></span><span style="color:#245bdb"><strong></strong></span><span style="color:#245bdb"><strong>TypeScript</strong></span><span style="color:#245bdb"><strong></strong></span><span style="color:#245bdb"><strong>的出現是因為一般人駕馭不了</strong></span><span style="color:#245bdb"><strong></strong></span><span style="color:#245bdb"><strong>JavaScript</strong></span><span style="color:#245bdb"><strong> ，有人則覺得「水平越差的人越喜歡自由」，你怎麼看？這兩個語言的選擇跟程序員的水平有關嗎？</strong></span></p><p><strong>李振：</strong>拿愛好來判斷個人水平是挺無聊的事情。寫 JavaScript<strong></strong>和寫 TypeScript 都有大牛。</p><p><strong>劉勇：</strong>笑～ 平時可沒少見有同學吐槽，好好的 TypeScript 項目，被人提交了一堆 Any。也見過很多吐槽接手了一個 TypeScript 倉庫，要硬着頭皮看一大堆類型定義，搞清楚這些奇奇怪怪的類型是如何工作的。我覺得語言的選擇主要看團隊的工程化和規範化程度，過猶不及。如果一個 TypeScript 類庫寫了一大堆類型，但卻連一個單測都沒有，那我覺得它是不合格的。</p><p><strong>劉易成：</strong>TypeScript<strong></strong>的出現確實有一部分原因是 JavaScript<strong></strong>比較難「駕馭」，JavaScript<strong></strong>太靈活了，缺少類型的約束，很容易寫出 bug 代碼，TypeScript 一定程度上解決了這個問題，使得代碼的可維護性更高了。</p><p>JavaScript<strong></strong>和 TypeScript 不能用來衡量程序員的水平。對於簡單的項目或者個人項目而言，JavaScript<strong></strong>可能更加輕量和靈活，但對於需要大團隊協作，複雜的項目而言，TypeScript 的類型系統就可以帶來更好的代碼維護性和可靠性了。</p><p>&nbsp;</p><p><span style="color:#245bdb"><strong>Q9：你認為這兩個語言是不是分別有不同的適用項目？什麼時候該用 </strong></span><span style="color:#245bdb"><strong>TypeScript</strong></span><span style="color:#245bdb"><strong></strong></span><span style="color:#245bdb"><strong>什麼時候該用 </strong></span><span style="color:#245bdb"><strong>JavaScript</strong></span><span style="color:#245bdb"><strong> 呢？對個人和企業開發者來説，應該怎麼選？</strong></span></p><p><strong>劉易成：</strong>對於大型項目、多人協作和需要高可靠性的項目來説，使用 TypeScript 更好；對於小型項目、個人項目，可以使用 JavaScript<strong></strong>更快迭代，當然也建議使用 TypeScript 保持更高的可維護性。</p><p>另外企業也需要根據員工技術能力和項目歷史包袱來靈活選擇技術棧。</p><p><strong>李振：</strong>個人覺得大型項目首選 TypeScript，拿我所在的團隊，騰訊文檔來説，團隊有上百個項目，包括前端項目和一些 node 項目，大家都是首選 TypeScript 作為開發語言，可以降低團隊協作的成本。個人開發者，如果是小型項目，其實無所謂，根據自己的愛好選擇就行了。</p><p>&nbsp;</p><p><span style="color:#245bdb"><strong>Q10：你如何看待 </strong></span><span style="color:#245bdb"><strong>TypeScript</strong></span><span style="color:#245bdb"><strong></strong></span><span style="color:#245bdb"><strong>的未來發展？你覺得它是一時流行還是會終將取代 </strong></span><span style="color:#245bdb"><strong>JavaScript</strong></span><span style="color:#245bdb"><strong> ？你認為誰的技術生態更好一點呢？</strong></span></p><p><strong>劉勇：</strong>TypeScript<strong></strong>的定位是 JavaScript<strong></strong>的一個超集，它的能力是以 TC39 制定的 ECMAScript 規範為基準（即 JavaScript<strong></strong>）。我覺得它也談不上會取代 JavaScript<strong></strong>，畢竟它並不是官方規範，而且 JavaScript<strong></strong>的存量生態實在是太龐大了。</p><p>當然，TypeScript 現在已經某種程度上成為事實的標準，尤其是因為 Node.js 官方對 ESM 和 CJS 何去何從的猶豫，導致社區開發者長時間的割裂，越來越多的人被迫選擇用 TypeScript 來寫類庫，然後同時編譯為 ESM 和 CJS。目前 TypeScript 的生態已經成規模，所以它不會像 CoffeeScript 那樣曇花一現。</p><p><strong>劉易成：</strong>我個人認為 TypeScript 會持續流行並得到更廣泛的應用。但並不會「取代」 JavaScript<strong></strong>。TypeScript 的目標一直都不是「取代」 JavaScript<strong></strong>，而是基於 JavaScript<strong></strong>提供類型系統，作為 JavaScript<strong></strong>的一個補充，在不同的項目和場景中發揮各自的優勢。</p><p>JavaScript<strong></strong>和 TypeScript 的技術生態早已融合在一起了吧，幾乎所有庫都會有 TypeScript 類型文件。</p><p><strong>李振：</strong>我認為 TypeScript 不太可能完全取代 JavaScript，而是作為 JavaScript 的一個補充和增強。兩者暫時不會出現零和博弈，也希望這兩種語言都可以有更好的發展。目前來看 JavaScript 的生態更龐大一些，但是 TypeScript 的地位和影響力不斷增長。作為普通開發者，在兩者並不衝突的當下，最好都能關注其發展。</p><p>&nbsp;</p><p>對此，你怎麼看？你手上用着的是 JavaScript<strong></strong>還是 TypeScript 呢？哪個更順手？評論區見吧~</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 27 Sep 2023 09:31:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/6852546/blog/10114672</guid>
            <link>https://my.oschina.net/u/6852546/blog/10114672</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[OpenAI 尋求出售現有股票，估值高達 900 億美元]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">據《<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.msn.com%2Fen-us%2Fmoney%2Ftechnology%2Fopenai-seeks-new-valuation-of-up-to-90-billion-in-share-sale%2Far-AA1hiJ9W" target="_blank">華爾街日報</a>》援引知情人士消息稱，OpenAI&nbsp;</span><span style="background-color:#ffffff; color:#2b2b2b">正在與投資者討論股票出售事宜</span><span style="color:#000000">。這家&nbsp;</span><span style="background-color:#ffffff; color:#2b2b2b">ChatGPT 背後的人工智能初創公司的估值將在 800 億至 900 億美元之間，大約是今年早些時候水平的三倍。</span></p><p><span style="color:#000000"><span style="background-color:#ffffff">今年 4 月，OpenAI 從紅杉資本、Andreessen Horowitz、Thrive 和 K2 Global 等支持者那裏獲得了略高於 3 億美元的融資，估值為 290 億美元。</span></span></p><p><img height="233" src="https://static.oschina.net/uploads/space/2023/0927/162258_T3Uz_4252687.png" width="600" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0"><span style="color:#000000">知情人士稱，這家由微軟持股 49% 的初創公司已告訴投資者，預計今年的收入將達到 10 億美元，並在 2024 年創造更多數十億美元的收入。<span style="background-color:#ffffff">預計該交易將允許員工出售現有股票，而不是公司發行新股票來籌集額外資金。知情人士稱，OpenAI 代表已開始就該交易向投資者進行推銷，不過條款可能會發生變化。</span></span></p><p style="margin-left:0; margin-right:0; text-align:left"><span style="color:#000000"><span style="background-color:#ffffff">800 億美元或以上的估值將使 OpenAI 成為全球估值最高的初創公司之一，僅次於埃隆·馬斯克 (Elon Musk) 的 SpaceX 和 TikTok 母公司字節跳動 (ByteDance)。該數字突顯了 OpenAI 在多大程度上能夠重塑硅谷的格局，這一數字凸顯了 OpenAI 能夠重塑硅谷格局的程度，並迫使更富有、更成熟的科技巨頭全面調整其產品路線圖，效仿 OpenAI 的做法。</span></span></p><p style="margin-left:0; margin-right:0; text-align:left"><span style="color:#000000"><span style="background-color:#ffffff">OpenAI 的目標是向硅谷投資者出售價值數億美元的現有股票，這筆交易將立即為微軟帶來鉅額賬面利潤。</span></span></p><p style="margin-left:0; margin-right:0; text-align:left"><span style="color:#000000">這次員工持股出售可能會為從外部投資者那裏籌集更多資金設定一個最低價格。人們普遍預計，OpenAI 將通過發行新股來籌集更多資金，以滿足開發和維護其人工智能系統所需的計算成本。</span></p><p><span style="color:#000000"><span style="background-color:#ffffff">知情人士稱</span>，<span style="background-color:#ffffff">該公司</span>已經<span style="background-color:#ffffff">引起了</span>孫正義的軟銀等投資巨頭的濃厚興趣。集資將涉及出售新股，與目前正在進行的要約收購程序分開。並表示，<span style="background-color:#ffffff">OpenAI 有意讓微軟持有該公司少數股權，這意味着這家科技巨頭很可能無法在任何融資中購買股票，從而使自己的持股比例超過 50%。</span></span></p><p><span style="color:#333333">OpenAI<span>&nbsp;暫未迴應置評請求。</span></span></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 27 Sep 2023 08:17:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/259735/openai-seeks-new-valuation-90-billion</guid>
            <link>https://www.oschina.net/news/259735/openai-seeks-new-valuation-90-billion</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[GNU 和自由軟件運動四十週年]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>自由軟件基金會 (FSF) 發表文章<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.fsf.org%2Fnews%2Fforty-years-of-gnu-and-the-free-software-movement" target="_blank">慶祝</a> GNU 和自由軟件運動四十年。</p><blockquote><p><img src="https://static.oschina.net/uploads/space/2023/0927/141138_JLed_2720166.png" referrerpolicy="no-referrer"></p></blockquote><p>1983 年 9 月 27 日，計算機科學家 Richard Matthew Stallman（簡稱 RMS）宣佈開發<strong>類 Unix 自由軟件操作系統</strong>的「<strong>GNU&nbsp;計劃</strong>」，並藉此發起自由軟件運動，GNU 名字代表 <strong>GNU's not Unix</strong>。</p><p><img alt="" height="293" src="https://oscimg.oschina.net/oscnet/up-e77ab9915a29996c9837bf3e3e3b15d4c07.png" width="300" referrerpolicy="no-referrer"></p><p>▲「GNU 計劃」標誌</p><p>四十年後的今天，GNU 和自由軟件比以往任何時候都重要，雖然軟件已經深入到我們的日常生活，但絕大多數用户無法完全控制它。</p><blockquote><p>自由軟件的定義最初由 RMS 本人制定。自由軟件的初衷是尊重用户的自由，並且尊重整個社區。</p><p>粗略來講，一個軟件如果是自由軟件，這意味着用户可以自由地運行、拷貝、分發、學習、修改並改進該軟件。因此，「自由軟件 (Free Software)」中的"free"是關乎自由的問題，與價格無關，軟件如何定價並不影響它是否被歸類為自由軟件。</p><p>具體來説，自由軟件的用户擁有四項基本自由：</p><p>(0) 自由運行軟件<br> (1) 自由學習和修改軟件源代碼<br> (2) 自由發佈軟件拷貝<br> (3) 自由發佈修改後的軟件版本</p></blockquote><p><img src="https://oscimg.oschina.net/oscnet/up-ddccf4eb6af9e5f1ea79edef64ea1b64119.JPEG" referrerpolicy="no-referrer"></p><p>GNU 是唯一專門為捍衞用户自由而開發的操作系統，四十年來始終忠於其創始理念。自 1983 年以來，「GNU 計劃」為私有操作系統提供了合乎道德的完整替代方案。這要歸功於世界各地的 GNU 開發志願者四十年來的不懈努力。</p><p>除了技術，GNU 還開創性地提出了 "<strong>Copyleft</strong>"。Copyleft 是源自自由軟件運動的概念，是一種利用現有著作權體制 (Copyright) 來保護所有用户和二次開發者的自由的授權方式。</p><p>Copyleft 中的 "Left"，不使用英語中「保留」的意思，而是指「Left（左）」，與「版權 (Copyright)」中的「Right（右）」具有鏡像的關係。注意，Copyleft 不是反著作權運動，不主張廢止著作權，也不是公有領域 (Public Domain)。</p><p>二者的區別可總結為："Copyright"指軟件的版權和其它一切權利歸軟件作者所私有，用户只有使用權，沒有其它如複製、重新修改發佈等權利。而"Copyleft"的特點是僅版權歸原作者所有，其他一切權利可以與任何人共享。</p><p><img height="300" src="https://oscimg.oschina.net/oscnet/up-5d41e7a854ad38374f2b19a4d95bfa825c3.png" width="300" referrerpolicy="no-referrer"></p><p>▲ Copyleft 標誌</p><p>FSF 執行董事 Zoë Kooyman 表示，GNU 不僅僅是基於自由軟件的最廣泛使用的操作系統，也是指導自由軟件運動四十年的哲學理念的核心。</p><p>他還説道，我們希望四十週年紀念能夠激勵更多黑客加入 GNU，實現在全世界範圍內創建、改進和共享自由軟件的目標。如今，軟件正在控制我們的世界，而 GNU 是對現狀的批判和解決方案，我們亟需它來避免技術控制人類。</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 27 Sep 2023 06:26:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/259709/forty-years-of-gnu-and-the-free-software-movement</guid>
            <link>https://www.oschina.net/news/259709/forty-years-of-gnu-and-the-free-software-movement</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Google 慶祝成立 25 週年]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Google 今天上線了新的 Doodle <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.google%2Finside-google%2Fcompany-announcements%2Fgoogle-25th-birthday%2F" target="_blank">慶祝</a>成立 25 週年。</p><p><img src="https://static.oschina.net/uploads/space/2023/0927/134213_x9MB_2720166.gif" referrerpolicy="no-referrer"></p><p>Google 於 1998 年 9 月 4 日成立，但是自 2002 年以來，該公司在 9 月的任意一天（<strong>通常是 9 月 27 日）</strong>慶祝其週年紀念日。</p><p><img alt="A screenshot of the Google search homepage in 1998" src="https://storage.googleapis.com/gweb-uniblog-publish-prod/images/Hero_Option-2.width-1200.format-webp.webp" referrerpolicy="no-referrer"></p><p><img src="https://static.oschina.net/uploads/space/2023/0927/140629_bPBa_2720166.png" referrerpolicy="no-referrer"></p><blockquote><p>今天的塗鴉慶祝 Google 的 25 週年。雖然我們在 Google 總是面向未來，但生日也可以是反思的時候。讓我們一起走下記憶的長廊，瞭解我們是如何在 25 年前誕生的...</p><p>無論是命運還是運氣，博士生 Sergey Brin 和 Larry Page 在 90 年代末斯坦福大學計算機科學項目中相遇。他們很快發現他們有着相似的願景：使萬維網更加易於訪問。這對搭檔在宿舍裏不知疲倦地開發出一個更好搜索引擎的原型。隨着他們在項目上取得了實質性進展，他們將操作移至 Google 第一個辦公室——租來的車庫。1998 年 9 月 27 日，谷歌公司正式成立。</p><p>自 1998 年以來已經發生了很多變化——包括今天塗鴉中看到的我們標誌——但使命始終沒有改變：組織世界信息，並使其普遍可接觸和有用。全球數十億人使用 Google 進行搜索、連接、工作、娛樂等等！</p><p>感謝您過去 25 年與我們共同進步。 我們迫不及待想要看到未來會帶領我們走向何方，一起。</p></blockquote><p><em>via&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.google.com%2Fdoodles%2Fgoogles-25th-birthday" target="_blank">https://www.google.com/doodles/googles-25th-birthday</a></em></p><p>在搜索欄輸入「Google's 25th birthday」或「Google 25 週歲生日」能看到彩蛋：</p><p><img src="https://static.oschina.net/uploads/space/2023/0927/132647_6ySe_2720166.png" referrerpolicy="no-referrer"></p><p><img src="https://static.oschina.net/uploads/space/2023/0927/140517_zSMr_2720166.png" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 27 Sep 2023 05:35:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/259698/googles-25th-birthday</guid>
            <link>https://www.oschina.net/news/259698/googles-25th-birthday</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[macOS Containers：在 macOS 用 Docker 運行 macOS 鏡像]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>macOS Containers 是一羣開發者基於 chroot 打造的工具，能讓你在 macOS 用 Docker 運行 macOS 鏡像。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-e8fbfed437c488003bb6d570a3f4afa4b01.png" referrerpolicy="no-referrer"></p><p>macOS Containers 官網<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmacoscontainers.org%2F" target="_blank">寫道</a>：</p><blockquote><p>容器從根本上改變了現代軟件的開發和部署方式。包括 FreeBSD、Solaris、Linux 甚至 Windows 在內的多種操作系統都支持容器，<strong>但 macOS 卻沒有原生支持容器</strong>——直到現在 macOS Containers 誕生。</p><p><img src="https://static.oschina.net/uploads/space/2023/0927/121649_g9Y7_2720166.png" referrerpolicy="no-referrer"></p></blockquote></div>
                                    ]]>
            </description>
            <pubDate>Wed, 27 Sep 2023 04:15:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/259695/macos-containers</guid>
            <link>https://www.oschina.net/news/259695/macos-containers</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[歷史最悠久的 Unity 官方用户組在 13 年後宣佈解散]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">自稱為歷史最悠久的&nbsp;Unity&nbsp;開發者團隊 Boston Unity Group (BUG) <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbostonunitygroup.s3.us-east-1.amazonaws.com%2Findex.html" target="_blank">宣佈</a>將在&nbsp;9 月 27 日晚組織最後一次會議，然後進行解散。根據介紹，BUG 由 Elliott Mitchell 和 Alex Schwartz 於 2010 年夏天創立，是世界上第一個官方 Unity 用户組。</span></p><blockquote><p><span style="color:#000000">「BUG 社區的持續發展催生了波士頓及其他地區遊戲開發的新時代......從第一天起，BUG 就得到了 Unity 和前首席執行官 David Helgason 的熱情認可和支持。Unity 提供了後勤支持、專業許可證贈品、研討會、演講、贊助、在 Unite 大會上發言的機會等等。在早期，David 和 Unity 明白，培養獨立開發者的草根團體對 Unity 的長期發展至關重要，並有助於實現他們為各行各業的人們提供民主化遊戲開發的目標。」</span></p></blockquote><p><img height="261" src="https://static.oschina.net/uploads/space/2023/0927/120517_6aBs_4252687.png" width="700" referrerpolicy="no-referrer"></p><p><span style="color:#000000">BUG 在致社區的公開信中表達了對 David 和所有 Unity 員工的感謝。但他們也指出，過去幾年間 Unity 已將其重點從遊戲行業和支持開發者社區轉移開。IPO 後，該公司似乎將利潤看得比一切都重要，包括進行了多次收購併裁減了核心人員。導致開發者所需的許多關鍵系統仍然處於混亂且通常不完整的狀態，Unity 傳遞的信息是廣告和收入比遊戲開發者關心的功能要更為重要。</span></p><p><span style="color:#000000">尤其是 Unity 本月推出的新定價模式，BUG 將其描述為「令人匪夷所思的敵對服務條款和價格表動」；也正是 Unity 的這一舉措，促使了 BUG 解散的決策。</span></p><blockquote><p><span style="color:#000000">來自遊戲行業的響亮而明確的譴責是前所未有的，Unity 別無選擇，只能撤銷一些最令人震驚的修改。即使有了這些新的讓步，修改後的定價模式還是對我們社區中獨立工作室的成功造成了不成比例的影響。</span></p><p><span style="color:#000000">更重要的是，我們看到了一個由高管主導的商業決策是多麼容易和輕率，就能讓我們辛辛苦苦建立起來的工作室面臨破產的風險，威脅到我們作為專業人士的生計，並對我們行業的長遠發展提出挑戰。今天的 Unity 已經不再是集團成立之初的那個公司了，我們曾經對公司的信任已經徹底被侵蝕了。</span></p></blockquote><p><span style="color:#000000">BUG 的這一感受也在遊戲開發社區的廣大羣體中得到了</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftwitter.com%2FFuckedByUnity" target="_blank">迴應</a><span style="color:#000000">，許多知名開發者表示，Unity 的舉措基本沒有挽回他們對該公司的信任。</span></p><p><span style="color:#000000">《吸血鬼倖存者》遊戲的開發者 Poncle 在 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.reddit.com%2Fr%2Fpcgaming%2Fcomments%2F16rsuh0%2Fvampire_survivors_ama_with_developers_poncle%2F" target="_blank">Reddit AMA</a> 上被問及他們的下一款遊戲/續作是否會再次使用 Unity 引擎時，就簡明扼要地表示了拒絕："不，謝謝......即使 Unity 會完全收回他們的決定，我也不認為在他們目前的領導下信任他們是明智之舉。"</span></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 27 Sep 2023 04:05:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/259693/first-official-unity-user-group-disbands</guid>
            <link>https://www.oschina.net/news/259693/first-official-unity-user-group-disbands</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[GNOME 45 動態三層緩存補丁更新]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>GNOME 45 "Rīga" 上週已正式<a href="https://www.oschina.net/news/259088/gnome-45-r%C4%ABga-released">發佈</a>，此版本雖然有許多針對桌面環境的改進，但上游缺少的一個功能是 Canonical 主導的<strong> Mutter 動態三層緩存</strong>。</p><p>動態三層緩存用於在需要時提升性能，並且已被證明有助於提高桌面渲染性能，例如使用英特爾集成顯卡和 Raspberry Pi 顯卡。此外，Debian 和 Ubuntu 已經合併這個動態三重緩衝補丁有一段時間了，但這項特性仍未能合併到上游。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-311bd78a79409ec737ca4af54e1a17734ef.png" referrerpolicy="no-referrer"></p><p>雖然動態三層緩存未能進入 GNOME 45，但 Canonical 的工程師 Daniel van Vugt <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsalsa.debian.org%2Fgnome-team%2Fmutter%2F-%2Fmerge_requests%2F108" target="_blank">更新了 Debian/Ubuntu 補丁</a>以與 Mutter 45.0 兼容。</p><blockquote><p>動態三層緩存是 Daniel 負責的一項功能，其動機是為了在需要的時候動態地進行三級緩存，以使 GPU 加快其時鐘頻率，否則它的渲染效率就會變慢。讓 GPU 工作得更快並暫時導致額外的幀延遲不是理想的方式，但它似乎確實能在需要的時候讓 GPU 性能得到提升。</p></blockquote><p><img src="https://static.oschina.net/uploads/space/2023/0927/112744_naxT_2720166.png" referrerpolicy="no-referrer"></p><p>目前看來，一切都已準備就緒——使用 GNOME 45 的 Ubuntu 23.10 將提供動態三層緩存，該版本將於 10 月中旬首次亮相。該補丁現在還修復了顯示器拔出插頭時可能導致的潛在內存泄漏，該泄漏可能會導致獨立 GPU 無法進入低功耗狀態。</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 27 Sep 2023 03:30:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/259683/gnome-45-triple-buffering</guid>
            <link>https://www.oschina.net/news/259683/gnome-45-triple-buffering</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Apple 推出全球開發者資源 —— 人人能編程]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>9 月 26 日，Apple 宣佈推出&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.apple.com%2Fexperts%2F" target="_blank">Meet with Apple Experts</a>&nbsp;開發者資源，幫助全球 Apple 開發者社區發現並參與課程、研討會、實驗室、一對一諮詢等體驗。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-03b3fbe6bda95fda8279db7ce8319e77581.png" referrerpolicy="no-referrer"></p><p>Meet with Apple Experts 初期提供超過 50 個課程、研討會和諮詢項目，並將持續提供線上和線下活動，開發者也可藉助該平台和 Apple 專家直接溝通，獲取洞見、支持和反饋；Meet with Apple Experts 同時也為所有開發者提供在各時區、通過各種語言舉行的課程、實驗室、研討會和挑戰賽，開發者即日起可報名參與多種主題的課程，深入探索 iOS 17、iPadOS 17、watchOS 10、visionOS，瞭解如何針對最新發布的硬件產品優化 app 和遊戲。</p><p>註冊 Apple 開發者、Apple Developer Program 和 Apple Developer Enterprise Program 的現成員可訪問&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.apple.com%2Fexperts%2F" target="_blank">developer.apple.com/experts</a>&nbsp;進一步瞭解可參與的最新課程、實驗室和特別活動的信息。</p><p>據瞭解，除了 Meet with Apple Experts，Apple 還為開發者提供了眾多額外的開發工具和資源，包括各種先進工具與端到端支持，協助開發者構建、測試、營銷和發行應用；同時內容豐富的免費工具與框架套件、Apple 開發者學院、企業家培訓營、App 加速器和 Swift Student Challenge 等項目，以及「人人能編程」和 Swift Playgrounds 等開放工具，也確保所有人都能平等、方便地獲取編程技術資源。</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 27 Sep 2023 02:34:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/259667</guid>
            <link>https://www.oschina.net/news/259667</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Appilot —— 面向 DevOps 場景的 AI 助手]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><strong style="color:rgba(0, 0, 0, 0.9)"><span style="color:#006ed5">Appilot 是面向 DevOps 場景的 AI 助手 </span></strong><span style="background-color:#ffffff; color:rgba(0, 0, 0, 0.9)">，這款產品將充分利用 AI 大語言模型的能力為用户提供變革性的部署和應用管理體驗</span><span style="background-color:#ffffff; color:rgba(0, 0, 0, 0.9)">。</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify">Appilot 基於大語言模型進行推理，並且可以運行在本地個人電腦上。用户可以根據自身的需求和使用習慣，將 Appilot 集成到任意平台，進而實現通過輸入自然語言即可調用後端平台的能力。具體特性包括：</p><ul style="list-style-type:disc; margin-left:0; margin-right:0"><li><p style="margin-left:0; margin-right:0"><strong><span style="color:#006ed5">應用管理</span></strong>：藉助 Appilot，您可以通過自然語言交互來輕鬆地部署、升級、回滾和查看應用程序的日誌，無需繁瑣的手動操作。</p></li><li><p style="margin-left:0; margin-right:0"><strong><span style="color:#006ed5">環境管理</span></strong>：無論克隆環境還是查看環境內的依賴關係，均可通過 Appilot 實現，使用簡單的指令即可完成複雜的環境管理任務。</p></li><li><p style="margin-left:0; margin-right:0"><strong><span style="color:#006ed5">診斷排障</span></strong>：如果發現系統異常，Appilot 所擁有的排查和修復功能，可以幫助您快速識別問題並採取措施解決它們。</p></li><li><p style="margin-left:0; margin-right:0"><strong><span style="color:#006ed5">行為護欄</span></strong>：我們深知安全的重要性，因此 Appilot 僅提供領域特定的回答，並要求審批任何可能導致系統變更的操作，有助於確保您的系統不會受到未經授權的訪問。</p></li><li><p style="margin-left:0; margin-right:0"><strong><span style="color:#006ed5">混合基礎設施編排</span></strong>：Appilot 可以輕鬆對接任意基礎設施，無縫集成各種雲服務、容器化平台等，使您能夠在多樣化的環境中運行應用程序。</p></li><li><p style="margin-left:0; margin-right:0"><strong><span style="color:#006ed5">支持多語言</span></strong>：您可以採用包括但不限於中文、英文等語言輸入指令進行交互。</p></li><li><p style="margin-left:0; margin-right:0"><strong><span style="color:#006ed5">可插拔後端</span></strong>：我們秉持着開源開放的理念，避免供應商鎖定。因此您可以根據需要自定義後端，以滿足您的具體需求。</p></li></ul><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-4f085f385caee96aa02b719013b8c3bad6d.png" referrerpolicy="no-referrer"></p></div>
                                                                ]]>
            </description>
            <pubDate>Wed, 27 Sep 2023 02:34:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/p/appilot</guid>
            <link>https://www.oschina.net/p/appilot</link>
        </item>
        <item>
            <title>
                <![CDATA[為承德程序員發聲]]>
            </title>
            <description>
                <![CDATA[<h1 class="header article-title"><a href="https://www.oschina.net/question/2720166_2331095">為承德程序員發聲</a><div class="ui orange label horizontal" data-tooltip="熱門">熱</div></h1><div class="extra ui horizontal list meta-wrap"><div class="item"><a href="https://my.oschina.net/hardbone" class="__user"><span>局</span></a> 發佈於，昨天 10:28
                    </div><div class="item">閲讀 15K+</div><div class="item collect-btn " data-id="2331095" data-user-id="2720166" data-obj-type="2" data-max="99" data-tag-required="" data-current-user-id="" data-recommend-tags=""><i class="star outline icon"></i> 收藏 <span data-collect-count="" data-id="2331095" data-obj-type="2">4</span></div><div class="item comment-count"><a href="https://www.oschina.net/question/2720166_2331095#comments" class="normal"><i class="comment outline icon"></i> 評論 <span data-article-reply-count="">33</span></a></div></div><div class="content" id="articleContent"><blockquote><p>轉載自，唐巧微信公眾號<br><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FdudaNfJJJVUpy2MKiZQAIA" target="_blank" rel="nofollow">https://mp.weixin.qq.com/s/dudaNfJJJVUpy2MKiZQAIA</a></p></blockquote><p><strong>事情起因</strong></p><p>承德一位程序員因為在 GitHub 上接海外的開源項目，因為交流不方便使用了俗話稱作「fan 牆」的軟件以便訪問 Google 等外網服務，被罰款 200 元，沒收 3 年「非法收入」100 多萬元。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-edac4ca38ffde4385c9de44dba968ab1986.png" referrerpolicy="no-referrer"></p><p><strong>行業觀點</strong></p><p>事情發生後，我身邊的所有人都為該處罰表達不滿情緒。部分朋友把這個歸結小地方處罰不規範。</p><p>胡錫進專門發文，希望對這種社會危害性為零的遠程打工掙外匯行為進行寬容。</p><p>但隨後他刪除了微博。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-7c214e7091ef10a031e68380830f004df3c.png" referrerpolicy="no-referrer"></p><p><strong>我的觀點</strong></p><p>1、程序員在國內向境外輸出勞動力，既賺取了外匯，又解決了自己的就業問題，而且向世界展示了中國互聯網行業的全球競爭力。國家非但不應該打擊，而且應該鼓勵。</p><p>這是一種新形態的「出口」。有助於中國建立更大的全球影響力。事實上，這位被罰同行的工作內容，就是從事大量被使用的開源項目的開發。參與開源項目本就是輸出行業影響力的最佳方式。</p><p>2、當前並沒有渠道為這一類人羣的合法訪問外國網絡提供便利。希望相關部門能對合法的使用外網需求，建立合適的申請和監管渠道。</p><p>3、在相關規章制度完善之前，對於工作生活需要，不得已訪問境外網站的。如果沒有對社會產生負面影響，那麼不應該處罰。對於有利於個人就業，有利於行業發展，有利於國家聲譽的事情，國家應該適度鼓勵並組織研究相關法規，幫助規範和健全相關經濟活動。</p><hr><ul><li><a href="https://www.oschina.net/news/259325" target="_blank" rel="nofollow">罰款 200 元，沒收 100 多萬</a></li></ul></div><div class="poll-wrap"></div><div class="additional-remarks"></div><div class="ui basic center aligned segment action"><div class="ui big buttons"><a class="ui basic button collect-btn hover" data-id="2331095" data-user-id="2720166" data-obj-type="2" data-max="99" data-tag-required="" data-current-user-id="" data-recommend-tags=""><i class="star outline icon"></i>收藏 (<span data-collect-count="" data-id="2331095" data-obj-type="2">4</span>)</a><div class="ui basic dropdown share button osc-share dropdown-share" data-tag="share-question"><i class="share icon"></i><span>分享</span><div class="menu"><a class="item" data-platform="weibo" data-value="weibo"><i class="weibo icon"></i>微博</a><a class="item" data-platform="qq" data-value="qq"><i class="qq icon"></i>QQ</a><a class="item" data-platform="wechat" data-value="wechat"><i class="weixin icon"></i>微信</a></div></div></div><div class="ui basic segment"><a class="ban" ban-report="" data-id="2331095" data-obj-type="2" data-url="https://www.oschina.net/question/2720166_2331095"><i class="flag red icon"></i>舉報</a></div></div>
            ]]>
            </description>
            <pubDate>Wed, 27 Sep 2023 02:32:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/question/2720166_2331095</guid>
            <link>https://www.oschina.net/question/2720166_2331095</link>
        </item>
        <item>
            <title>
                <![CDATA[Gitee 推薦 | 用於構建用户界面的 JavaScript 庫 openInula]]>
            </title>
            <description>
                <![CDATA[<h1><a id="user-content-openinula-開源項目" class="anchor" href="https://gitee.com/openInula/inula#openinula-%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE"></a>openInula 開源項目</h1><h2><a id="user-content-項目介紹" class="anchor" href="https://gitee.com/openInula/inula#%E9%A1%B9%E7%9B%AE%E4%BB%8B%E7%BB%8D"></a>項目介紹</h2><p>單詞 Inula（發音為：[ˈɪnjʊlə]），意為一類旋覆花屬菊科的植物。openInula 是一款用於構建用户界面的 JavaScript 庫，提供響應式 API 幫助開發者簡單高效構建 web 頁面，比傳統虛擬 DOM 方式渲染效率提升 30% 以上！同時 InulaJS 提供與 React 保持一致的 API，並且提供 5 大常用功能豐富的核心組件：狀態管理器、路由、國際化、請求組件、應用腳手架，以便開發者高效、高質量的構築基於 InulaJS 的前端產品。</p><h2><a id="user-content-技術架構" class="anchor" href="https://gitee.com/openInula/inula#%E6%8A%80%E6%9C%AF%E6%9E%B6%E6%9E%84"></a>技術架構</h2><p><img src="https://gitee.com/openInula/inula-doc/raw/master/static/img/structure.PNG" alt="輸入圖片説明" referrerpolicy="no-referrer"></p><h3><a id="user-content-核心能力" class="anchor" href="https://gitee.com/openInula/inula#%E6%A0%B8%E5%BF%83%E8%83%BD%E5%8A%9B"></a>核心能力</h3><p><strong>響應式 API</strong></p><ul><li>openInula 通過最小化重新渲染的範圍，從而進行高效的 UI 渲染。這種方式避免了虛擬 DOM 的開銷，使得 openInula 在性能方面表現出色。</li><li>openInula 通過比較變化前後的 JavaScript 對象以細粒度的依賴追蹤機制來實現響應式更新，無需用户過度關注性能優化。</li><li>簡潔 API：
<ol><li>openInula 提供了兩組簡潔直觀的 API--響應式 API 和與 React 一致的傳統 API，使得開發者可以輕鬆地構建複雜的交互式界面。</li><li>openInula 簡潔的 API 極大降低了開發者的學習成本，開發者使用響應式 API 可以快速構建高效的前端界面。</li></ol></li></ul><p><strong>兼容 ReactAPI</strong></p><ul><li>與 React 保持一致 API 的特性、可以無縫支持 React 生態。</li><li>使用傳統 API 可以無縫將 React 項目切換至 openInula，React 應用可零修改切換至 openInula。</li></ul><h3><a id="user-content-openinula-配套組件" class="anchor" href="https://gitee.com/openInula/inula#openinula-%E9%85%8D%E5%A5%97%E7%BB%84%E4%BB%B6"></a>openInula 配套組件</h3><p><strong>狀態管理器/inula-X</strong></p><p>inula-X 是 openInula 默認提供的狀態管理器，無需額外引入三方庫，就可以簡單實現跨組件/頁面共享狀態。
inula-X 與 Redux 比可創建多個 Store，不需要在 Reducer 中返回 state 並且簡化了 Action 和 Reducer 的創建步驟，原生支持異步能力，組件能做到精準重渲染。inula-X 均可使用函數組件、class 組件，能提供 redux 的適配接口及支持響應式的特點。</p><p><strong>路由/inula-router</strong></p><p>inula-router 是 openInula 生態組建的一部分，為 openInula 提供前端路由的能力，是構建大型應用必要組件。
inula-router 涵蓋 react-router、history、connect-react-router 的功能。</p><p><strong>請求/inula-request</strong></p><p>inula-request 是 openInula 生態組件，涵蓋常見的網絡請求方式，並提供動態輪詢鈎子函數給用户更便捷的定製化請求體驗。</p><p><strong>國際化/inula-intl</strong></p><p>inula-intl 是基於 openInula 生態組件，其主要提供了國際化功能，涵蓋了基本的國際化組件和鈎子函數，便於用户在構建國際化能力時方便操作。</p><p><strong>調試工具/inula-dev-tools</strong></p><p>inula-dev-tools 是一個為 openInula 開發者提供的強大工具集，能夠方便地查看和編輯組件樹、管理應用狀態以及進行性能分析，極大提高了開發效率和診斷問題的便捷性。</p><p><strong>腳手架/inula-cli</strong></p><p>inula-cli 是一套針對 openInula 的編譯期插件，它支持代碼優化、JSX 語法轉換以及代碼分割，有助於提高應用的性能、可讀性和可維護性。</p><h2><a id="user-content-openinula-文檔" class="anchor" href="https://gitee.com/openInula/inula#openinula-%E6%96%87%E6%A1%A3"></a>openInula 文檔</h2><p>歡迎訪問 openInula 官網文檔倉庫，參與 openInula 開發者文檔開源項目，與我們一起完善開發者文檔。</p><p><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.openinula.net%2F">訪問官網</a></p><h2><a id="user-content-代碼倉地址" class="anchor" href="https://gitee.com/openInula/inula#%E4%BB%A3%E7%A0%81%E4%BB%93%E5%9C%B0%E5%9D%80"></a>代碼倉地址</h2><p>openInula 倉庫地址：<a href="https://gitee.com/openinula">https://gitee.com/openinula</a></p><h2><a id="user-content-如何參與" class="anchor" href="https://gitee.com/openInula/inula#%E5%A6%82%E4%BD%95%E5%8F%82%E4%B8%8E"></a>如何參與</h2><p><strong>參與貢獻</strong>
歡迎您參與<a href="https://gitee.com/openinula/docs/blob/master/%E8%B4%A1%E7%8C%AE%E6%8C%87%E5%8D%97.md">貢獻</a>，我們鼓勵開發者以各種方式參與文檔反饋和貢獻。</p><p>您可以對現有文檔進行評價、簡單更改、反饋文檔質量問題、貢獻您的原創內容，詳細請參考<a href="https://gitee.com/openinula/docs/blob/master/%E8%B4%A1%E7%8C%AE%E6%8C%87%E5%8D%97.md">貢獻文檔</a>。</p><h2><a id="user-content-許可協議" class="anchor" href="https://gitee.com/openInula/inula#%E8%AE%B8%E5%8F%AF%E5%8D%8F%E8%AE%AE"></a>許可協議</h2><p>openInula 主要遵循 Mulan Permissive Software License v2 協議，詳情請參考各代碼倉 LICENSE 聲明。</p><h2><a id="user-content-聯繫方式" class="anchor" href="https://gitee.com/openInula/inula#%E8%81%94%E7%B3%BB%E6%96%B9%E5%BC%8F"></a>聯繫方式</h2><p><a href="mailto:team@inulajs.org">team@inulajs.org</a></p>]]>
            </description>
            <pubDate>Wed, 27 Sep 2023 02:28:00 GMT</pubDate>
            <guid isPermaLink="false">https://gitee.com/openInula/inula</guid>
            <link>https://gitee.com/openInula/inula</link>
        </item>
        <item>
            <title>
                <![CDATA[每日一博 | 小程序編譯器性能優化之路]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><img src="https://oscimg.oschina.net/oscnet/up-47f7698050b7b5de818c8012cafcc66ac83.png" alt="" referrerpolicy="no-referrer"></p><p>作者 | 馬可</p><blockquote><p>導讀</p><p>小程序編譯器是百度開發者工具中的編譯構建模塊，用來將小程序代碼轉換成運行時代碼。舊版編譯器由於業務發展，存在編譯慢、內存佔用高的問題，我們對編譯器做了一次大規模的重構，採用自研架構，做了多線程、代碼緩存、sourcemap 等多項優化，在性能和內存佔用上都有很大提升。全文介紹了新版編譯器的設計思路和優化方法，以及一些能夠用在通用打包工具裏的技術點。</p></blockquote><blockquote><p><em>全文 6629 字，預計閲讀時間 17 分鐘。</em></p></blockquote><h1><strong>01 前言</strong></h1><p>小程序編譯器在小程序開發、預覽、發佈各個階段都需要使用，因此編譯器性能會直接影響到開發者開發效率，也會影響到開發者工具的使用體驗。</p><p>由於舊版的編譯器（基於 webpack4）在構建大型項目時會很慢，內存佔用也高，一直被開發者吐槽。我們經過大量的調研和開發，最後採用完全自研架構做新編譯，針對小程序項目構建做了大量優化，基本解決了舊編譯存在的問題。</p><p>下圖是部分項目構建時間對比：</p><p><img src="https://oscimg.oschina.net/oscnet/up-af3d75670e77d75bf9f10f93f81c0f04a5a.png" alt="" referrerpolicy="no-referrer"></p><p>新版編譯器相對於舊版實現了 2~7 倍的性能提升，並且支持實時編譯、熱重載等特性，內存佔用更少，構建產物更優。</p><p>下面從，框架選型、新編譯器工作原理、性能和產物優化方法，等方面介紹新版編譯器的成長之路。</p><h1><strong>02 框架選型</strong></h1><p>在進行新版編譯器設計時，需要明確當前的痛點問題：性能，優先解決性能問題。其他新技術和新想法對編譯器有幫助的也一起實施。</p><p><strong>舊版編譯器基於 webpack4 存在如下幾個問題：</strong></p><ul><li><p>大型項目構建速度太慢。</p></li><li><p>dev 啓動慢、增量編譯慢，僅支持 loader 緩存，bundle 無緩存也比較慢。</p></li><li><p>基於 webpack4 做擴展開發，需要 patch 部分模塊才能工作，維護困難。</p></li><li><p>部分 webpack bundle 過程無法針對小程序代碼結構進行優化，存在無效構建。</p></li></ul><p><strong>新編譯的設計目標：</strong></p><ul><li><p>更快的全量編譯速度，消除 webpack 存在的無效構建過程。</p></li><li><p>支持全緩存，加快首次和增量編譯速度。</p></li><li><p>支持實時編譯，減少 dev 啓動和二次編譯時間。</p></li><li><p>支持多線程編譯加速，支持頁面熱重載。</p></li><li><p>優化產物結構，減少產物體積。</p></li></ul><h2><strong>2.1 主流構建工具</strong></h2><p>下面介紹的是我們調研過的主流前端構建工具，每個工具都有適用場景和優缺點。</p><p>在新版本編譯器架構設計時，其他構建工具的設計理念和技術特點都值得參考。</p><p><strong>Webpack 構建過程：</strong></p><p><img src="https://oscimg.oschina.net/oscnet/up-475b788c3ef6ad78df38db53396609efc33.png" alt="" referrerpolicy="no-referrer"></p><p><strong>Webpack 優點</strong>：功能完善、社區活躍、可配置性強、有很強的擴展性。</p><p><strong>Webpack 缺點</strong>：配置複雜、構建速度慢，二次開發困難。</p><p><strong>Parcel 構建過程：</strong></p><p><img src="https://oscimg.oschina.net/oscnet/up-b554482b6f2ef7aed547d2b55f1a4f68183.png" alt="" referrerpolicy="no-referrer"></p><p><strong>Parcel 優點</strong>：無需配置，構建速度快，原生支持多線程和全緩存，多線程之間共享數據通過 lmdb 進行，避免跨線程通信開銷。</p><p><strong>Parcel 缺點</strong>：生態小，自定義性有限，大量採用 Node 插件，兼容性也差一些。</p><p><strong>Vite 構建過程：</strong></p><p><img src="https://oscimg.oschina.net/oscnet/up-38aeaa049d0994119a775d2669a0dbe769c.png" alt="" referrerpolicy="no-referrer"></p><p><strong>Vite 優點</strong>：配置較為簡單，按需編譯，啓動快，dev 時有不錯的體驗。</p><p><strong>Vite 缺點</strong>：生態小，dev 和，發佈走兩套構建流程。</p><p><strong>其他小程序平台：</strong></p><ul><li><p>微信基於 gulp 和 C++ 模塊做小程序構建，並且對 npm 模塊做了預構建，在性能和開發體驗上做的比較好。</p></li><li><p>支付寶基於 webpack 做小程序構建，並且使用了 esbuild 加速代碼壓縮。</p></li><li><p>抖音小程序使用自研編譯器，構建流程比較簡單。</p></li></ul><h2><strong>2.2 新版編譯器</strong></h2><p>在設計新編譯框架時，借鑑了主流打包工具的工作流程，結合小程序代碼特點，決定不做通用打包工具，重點優化小程序打包性能。</p><p>最終選擇了自研編譯器的方案，並做了大量優化工作，新版編譯器優化點有如下幾個方面：</p><p>1.支持多 Compiler 協同工作，將動態庫開發等多類型項目構建解耦。</p><p>2.編譯階段全流程緩存，節省二次構建時間 90% 以上。</p><p>3.dev 開發默認採用按需編譯，提升單頁編譯性能。</p><p>4.支持 babel 和 swc 多線程編譯，提升全量編譯速度 2 ~ 7 倍。</p><p>5.採用新版 sourcemap 協議，移除非必要解析合併，將 bundle 階段耗時大幅縮減。</p><p>6.對 js、css、swan 模板編譯均做了構建時標記優化，減少 bundle 合併耗時。</p><p>7.對於預覽、發佈階段的 js 壓縮和混淆，採用了 terser 和 esbuild 並行方案，esbuild 用於快速打出預覽包，terser 可以保證壓縮率用於發佈包。</p><p>從結果看，新編譯器從速度、資源佔用和可維護性上相對於舊版都有顯著的提升。</p><h1><strong>03 新版編譯器工作原理</strong></h1><p>新編譯器的處理流程和 parcel 比較類似，Compiler 控制處理流程，Processor 進行代碼轉換，基本流程如下：</p><p><img src="https://oscimg.oschina.net/oscnet/up-70518bd0ba131a6e1ec9b169622be792fc3.png" alt="" referrerpolicy="no-referrer"></p><p>其中幾個重要的模塊：</p><ul><li><p>CompileEntry 編譯器為入口模塊，包含 cli 通信、dev server 通信、命令調用等。</p></li><li><p>CompileManager 為編譯管理器，用於依賴資源下載和管理以及多個 Compiler 協同構建。</p></li><li><p>Compiler 為編譯器模塊，用於將項目源碼編譯成運行時代碼，項目構建時 Compiler 可能有多個。</p></li><li><p>Processor 為單元處理器，用於處理，代碼轉換、代碼合併，等單個編譯任務。</p></li></ul><p><strong>注</strong>：小程序 App 項目有 1 個 Compiler，動態庫和動態擴展項目 2 個 Compiler。</p><h2><strong>3.1 Compiler 編譯器</strong></h2><p>用於編譯單個小程序項目，將開發者原始代碼編譯為可運行代碼。</p><p><strong>工作職能：</strong></p><p>1.創建運行上下文，提供 config、fs 文件處理、watcher 監控、logger 等模塊，給 Processor 使用。</p><p>2.全量編譯、文件變更時二次編譯；這裏二次編譯也是走一遍全量編譯流程，不過大部分用的是緩存結果。</p><p>3.管理、調度、運行 Processor 處理單元。</p><p>4.維護 Processor 依賴關係和結果緩存。</p><p><strong>特點：</strong></p><p>1.實現全流程緩存，將每個 Processor 的輸入參數、輸出結果寫入緩存，在有緩存情況下二次編譯時長可減少 90% 。</p><p>2.支持按需編譯，每次按需單頁編譯、增量編譯、全量編譯，都走同樣的 Processor 處理流程。</p><p>3.通過 Proxy 機制自動計算緩存參數依賴，不用手動為每個 Processor 生成緩存 hash，相對於 webpack 或 parcel 減少 bug 產生。</p><p>4.僅維護 Processor 依賴關係，不維護 ModuleGraph，簡化處理流程。</p><p>關於全流程緩存每家打包器都有自己的實現方案，基本原理是根據當前輸入參數和依賴情況為處理單元生成一個唯一 hash，hash 一致則結果一致。</p><p>webpack 和 parcel 由於維護了 ModuleGraph，緩存的計算和重用會複雜一些。小程序編譯器僅根據 Processor 入參和調用依賴進行計算。</p><h2><strong>3.2 Processor 單元處理器</strong></h2><p><strong>Processor 有如下特性：</strong></p><p>1.在輸入參數一致的情況下，保證輸出一致，輸入和輸出都必須可序列化為 json ，實現了 Processor 全緩存。</p><p>2.Processor 中的 uri 為構建 ID，在單次構建過程中 ID 一致則處理結果一致，例如處理 app.js 文件，uri 為：js:app.js，好處是可以統一 Processor 資源處理路徑。</p><p>3.Processor 之間支持互相調用：processWith 調用並繼續執行，processWithResult 調用並等待返回結果。</p><p><strong>注意</strong>：這裏的輸入參數包含 uri、app config, contextFreeData。</p><p><strong>幾種常用的 Processor：</strong></p><p>1.JS Processor 將 es6 代碼轉換成 es5 代碼，這是最耗時的模塊。</p><p>2.Swan Processor 將 swan 模板代碼轉換成 view 層 js 代碼。</p><p>3.Css Processor 使用 postcss 處理 css 中的單位轉換、依賴收集等工作。</p><p>4.Bundle Processor 將前面 transformer 處理結果按照 bundle 算法合併文件並輸出結果。</p><p><strong>Processor 工作流程：</strong></p><p><img src="https://oscimg.oschina.net/oscnet/up-8b070b7436cae7395aa1b3ece2ae58346d8.png" alt="" referrerpolicy="no-referrer"></p><p>Processor 處理流程需要經過 transform -&gt; bundle 的過程，在小程序裏 js, css, swan 模板的 bundle 可以分開並行處理，這裏和 webpack 的處理模式不一樣，和 parcel 的 pipeline 類似。</p><h2><strong>3.3 性能和產物優化方法</strong></h2><h3><strong>3.3.1 多核心編譯優化</strong></h3><p>由於 Node 中多線程模塊初始化速度和通信效率比多進程好一些，新編譯選擇使用，多線程，做多核心優化。</p><p><strong>多線程編譯有 2 種方案選擇：</strong></p><ul><li><p>方案 1：基於 processor 做多線程調度，由於 processor 間支持相互調用，實際處理會很複雜且有通信成本。</p></li><li><p>舊的編譯器做過基於 webpack 的 workerthread-loader，性能提升有限（10%~15%）。</p></li><li><p>parcel 基於 lmdb 公共緩存消除線程間通信，保證讀寫效率，是一個比較好的解決方法。</p></li><li><p>方案 2：僅對 js 轉譯做多線程調度，僅有一來一回 2 次通信成本。</p></li><li><p>使用 jest-worker 和 babel transform 做 js 多線程轉譯或者用 swc 多線程做 js 轉譯。</p></li></ul><p>由於大部分構建時間在 js 轉譯這裏（js 中有大量 node_modules 依賴，均需要轉換），css 和 swan 模塊轉換耗時少。</p><p>最終選擇方案 2 僅做 js 多線程轉譯，處理流程簡單且收益較好，整體提升如下：</p><ul><li><p>使用 jest-worker 多線程 babel 轉譯，4 線程可提升 1 倍以上速度。</p></li><li><p>使用 swc 做 js 轉譯，4 線程提升 4 倍以上速度。</p></li></ul><p><strong>JS Processor 多線程處理：</strong></p><p><img src="https://oscimg.oschina.net/oscnet/up-c3616ceaffc1873c47e87951e92160d998e.png" alt="" referrerpolicy="no-referrer"></p><p>其中：</p><p><strong>uri</strong>： 為處理器構建 ID</p><p><strong>contextFreeData</strong>： 單次構建中不可變數據，例如 app.json 中的配置項</p><p><strong>context args</strong>：全局參數，例如優化實驗開關、多線程開關等</p><p>在 js 轉換處理時規定了 transformer 統一轉換接口，基於接口實現了 babel 單線程、babel 多線程、swc 轉換 3 種處理器，並且可隨時做處理器切換。</p><p>對於不同的編譯環境可以做到靈活設置：</p><p>1.開發者工具中開發者根據機器配置情況可以切換，多線程、swc 編譯模式，提升效率。</p><p>2.雲編譯流水線默認開多線程編譯提高性能。</p><p>3.webIDE 默認開單線程降低資源消耗。</p><h3><strong>3.3.2 SWC 編譯優化</strong></h3><p>新編譯器多線程模式相對於舊編譯提升了 1 倍左右，在 dev 開發時一些大型項目頁面首次編譯還是有些慢，需要 10 秒以上，主要耗時在 js transform 這裏。</p><p>swc 目前在 js 轉譯上基本成熟了，且大部分場景能提升 4 倍以上轉譯速度，因此增加了 swc 多線程轉譯支持，將大型項目頁面首次編譯控制在了 5 秒以內。</p><p>需要編寫 2 個 swc 插件來適配 swc 轉譯：</p><ul><li><p>@swanide/swc-require-rename 將 require/import/export 中的模塊提取路徑信息，以便於後續在 js 中分析模塊依賴關係。</p></li><li><p>@swanide/swc-web-debug 對 js 代碼進行插樁處理，用來支持真機調試中的斷點調試。</p></li></ul><p>swc 編譯帶來的性能提升是巨大的，在使用中也發現了一些問題：</p><p>1.swc 存在內存泄露，在 dev 階段如果全量編譯次數過多，會導致內存佔用很高，需手動重啓編譯器。</p><p>2.swc 插件支持的 api 較少，一部分 babel 容易實現的功能，在 swc 中很難處理。</p><p>3.swc 由於使用 rust 編寫插件，插件在不同 @swc/core 版本間不能通用，需要為不同平台生成 swc 插件，在部署上會麻煩一些。</p><p>在實際使用中，對於一部分 swc 不能很好處理的場景，會降級到 babel 處理。</p><h3><strong>3.3.3 代碼壓縮和運行時緩存</strong></h3><p>在 dev 階段，編譯後的代碼是沒有經過壓縮的，可以在模擬器中運行。在預覽發佈階段由於限制了包體積，需要做代碼壓縮以減少產物體積。</p><p>可選的代碼壓縮工具有如下 3 個：</p><p>1.terser 壓縮率高，產物體積小，速度最慢。</p><p>2.swc 壓縮快，mangle 支持不完善，壓縮率較差。</p><p>3.esbuild 壓縮最快（比 terser 快了 10 倍以上），支持 mangle，代碼壓縮率不如 terser。</p><p>最後經過對比考慮，選擇瞭如下壓縮方案：</p><p>1.預覽階段由於不需要 sourcemap，移除 sourcemap，並使用 esbuild 做代碼壓縮，提高預覽速度（對於自動預覽場景有很大提升）。</p><p>2.發佈階段使用 terser 做多線程壓縮，並保留 sourcemap。</p><p>運行時緩存，指的是構建過程的中間結果都在內存中做了緩存，包括 Processor 處理結果，和 代碼壓縮結果，在二次構建時可以節省大部分重新構建時間。由於緩存中保留的是字符串和 json 對象，相對於基於 webpack 的舊版編譯器有 40% ~ 60% 的內存節省，在內存佔用上處於可接受範圍。</p><h3><strong>3.3.4 Swan 模板處理優化</strong></h3><p>舊的 swan 模板處理使用 swan-loader 進行模板轉換，由於設計時沒有處理好模板 import 作用域，導致 &lt;template&gt; 標籤以及 filter 過濾器函數只能內聯到頁面代碼中，如果模板中大量使用了 template 和 filter，最終生成的代碼體積會非常大。</p><p>新編編譯器糾正了 import 作用域關係，將編譯產物中的 template 、 filter 生成模式由內聯改為 require 引用，然後在 bundle 階段做代碼合併，使相同模塊能夠得到重用，算是填了一個大坑。</p><p><strong>新編譯器 swan 模板處理流程：</strong></p><p><img src="https://oscimg.oschina.net/oscnet/up-41f43a8a82b471e090692098e7e8c0960ce.png" alt="" referrerpolicy="no-referrer"> 單個 swan 文件經過 Processor 處理後可能的產物有：</p><ul><li><p>component 組件模塊，用於生成頁面和自定義組件</p></li><li><p>template 模塊</p></li><li><p>filter 過濾器函數、sjs 過濾器函數</p></li><li><p>transformed document 中間代碼</p></li></ul><p>將 swan 模板轉換成不同類型的 js module，並維護依賴關係，便於後續的代碼合併時更精細化的控制。</p><p>由於歷史原因 import/include 中包含 sjs 或者 template 引用時不能直接生成 template 模塊，需要在最後入口模板中生成。新編譯也提供了 template 靜態編譯選項，將嚴格限制 import 作用域，可直接生成 template 模塊代碼，對於 taro 生成的小程序項目可以節約 30% 左右的產物大小。</p><h3><strong>3.3.5 Sourcemap 優化</strong></h3><p>由於編譯器需要支持 js 代碼調試以及運行時 error 跟蹤，在 dev 和發佈階段都需要生成 sourcemap。</p><p>在 webpack 中生成代碼時需要對 sourcemap 進行合併計算，較大的項目 sourcemap 合併會佔用很長時間，並且每次重新編譯都要重新計算 sourcemap。</p><p>調研時發現瀏覽器 devtools 對 sourcemap 協議，的 index map 支持非常好， 新編譯器基於 index map 協議做了 sourcemap 合併優化，由之前的多文件 sourcemap 合併計算，變成了計算生成 offset map 並拼接內容，這樣 js bundle 耗時就由原來的，幾秒到幾十秒變為了固定 3 秒以內。</p><p><img src="https://oscimg.oschina.net/oscnet/up-7988863ee8de85eae8738399ff63f0d4573.png" alt="" referrerpolicy="no-referrer"></p><p>一個有意思的事情是 vscode 的 js-debugger 直到 22 年 6 月份才支持 index map 調試（index map 2011 年發佈的），微軟的動作稍微慢了一些。</p><h3><strong>3.3.6 後續工作</strong></h3><p>在新編譯器開發完成之後的推廣中，採用了漸進式推廣方式：</p><p><strong>第一階段</strong>，開發者工具新舊編譯器共存，dev、預覽使用新編譯器，發佈使用舊編譯器。</p><p><strong>第二階段</strong>，內部 pipeline 預覽和發佈全量使用新編譯。</p><p><strong>第三階段</strong>，開發者工具全部切換到新編譯器。</p><p>新版編譯實際上線後還存在一些小的兼容性問題，需要儘量提前暴露問題才能做發佈全量替換。</p><p>針對小程序項目，新編譯做了大量的優化工作，部分優化工作還沒有完成開發，包括：</p><p><strong>hmr 熱重載</strong>：開發中，由於，運行時框架、開發者工具均需要做接口適配，需要較長時間調試才能達到預期。</p><p><strong>tree-shaking 代碼消除</strong>：對於 es6 模塊在 transform 階段可以做 tree-shaking 消減代碼。</p><p><strong>scope-hoisting 作用域提升</strong>：理論可行，需要驗證代碼縮減效果。</p><p>新版編譯器由於需要完全兼容舊版編譯器構建結果，在 bundle 打包場景還存在優化空間，我們在後續工作中配合運行時框架可以做更多打包產物優化。</p><h1><strong>04 總結</strong></h1><p>新版編譯器採用自研打包方案，對比基於 webpack 的舊編譯器實現了巨大的性能提升，徹底解決了編譯慢、資源佔用高的問題，相對友商的編譯器也有不錯的性能優勢。</p><p>一些新編譯引入的優化手段如 swc 轉譯、esbuild 壓縮、sourcemap 優化，也能用在其他前端項目構建中，並起到加速效果。</p><p>在新編譯器項目中每個同學都非常努力，貢獻了很多奇妙的點子，遇到的大部分難題都有效解決了。我們會繼續堅持性能和產物優化這兩個方向，不斷提升開發者體驗和運行時效率。</p><p>——END——</p><p><strong>推薦閲讀</strong></p><p><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg5MjU0NTI5OQ%3D%3D%26mid%3D2247571280%26idx%3D1%26sn%3Df52aee0632693276224b4de1ba4fb0ba%26chksm%3Dc03fe72cf7486e3a0795aaabd4af6783b01f1aee769bf8d43d892101c2ca9feb7e9e7521f552%26scene%3D21%23wechat_redirect" target="_blank">百度 APP iOS 端包體積 50M 優化實踐 (六) 無用方法清理</a></p><p><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg5MjU0NTI5OQ%3D%3D%26mid%3D2247570869%26idx%3D1%26sn%3Dce0712fad8ff6386c48a1363892b6a6b%26chksm%3Dc03fe5c9f7486cdfadf587b505c9de45d7bae6578e0ec6159c2f969854e488337d1544d37562%26scene%3D21%23wechat_redirect" target="_blank">基於異常上線場景的實時攔截與問題分發策略</a></p><p><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg5MjU0NTI5OQ%3D%3D%26mid%3D2247570853%26idx%3D1%26sn%3D51afb6a105c191c9bebdf19a1042ac94%26chksm%3Dc03fe5d9f7486ccfdfe33952845e048f506680bbf56be8448ee2be780c0fe90f170c86e3030c%26scene%3D21%23wechat_redirect" target="_blank">極致優化 SSD 並行讀調度</a></p><p><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg5MjU0NTI5OQ%3D%3D%26mid%3D2247570809%26idx%3D1%26sn%3D2e9514a2d5233e0611c39361d29505a3%26chksm%3Dc03fe505f7486c138fab993da98004f431ff399d7a3700edca4cd9bdbab57b78e1098b18f9ac%26scene%3D21%23wechat_redirect" target="_blank">AI 文本創作在百度 App 發文的實踐</a></p><p><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg5MjU0NTI5OQ%3D%3D%26mid%3D2247570754%26idx%3D1%26sn%3Da11c148b57e0fc5b91e600404ce063a0%26chksm%3Dc03fe53ef7486c28ff8980433db6437dad74c6bd3fbaf0fb516e59182dd8d85d7c6af090b665%26scene%3D21%23wechat_redirect" target="_blank">DeeTune：基於 eBPF 的百度網絡框架設計與應用</a></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 27 Sep 2023 02:26:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/4939618/blog/10114374</guid>
            <link>https://my.oschina.net/u/4939618/blog/10114374</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[高效能軟件工程師的 7 個習慣]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>管理學大師史蒂芬·柯維代表作《高效能人士的 7 個習慣》是商業書籍的經典之作，產生了積極而深遠的影響。如果我們把《高效能人士的 7 個習慣》的理念應用到軟件工程師身上，又會怎麼樣呢？</p><p>資深軟件工程師 Luthfur Chowdhury 根據職業生涯中見過的優秀軟件工程師的常見習慣，整理出以下清單——</p><p><strong>7 Habits of Highly Effective Software Engineers（高效能軟件工程師的 7 個習慣）：</strong></p><p><strong>1. 快速將想法打造出原型，進行概念驗證</strong></p><p>許多想法和新技術概念聽起來很棒，但現實往往會有所不同。</p><p>為了更好地瞭解想法的可行性，優秀的工程師會更快地投入原型設計和概念驗證。原型設計是一個很好的學習和探索工具。你會發現自己想到的方法是否可行，是否真正解決了你原來的問題，或者是否存在你之前沒有想到的限制。</p><p><strong>2. 有效評估工作量</strong></p><p>工作量評估會影響產品路線圖、技術方法和交付給終端用户的價值。</p><p>擁有良好評估能力的工程師的團隊會給他們的工作帶來信心。經常延期的團隊會產生壓力和不確定感。優秀的工程師通過跟蹤他們的估計和工作實際花費時間之間的差異來更好地做到這一點。</p><p><strong>3. 快速且及時地 review 代碼</strong></p><p>審查 PR 的速度越快，代碼改進的速度就越快，並且投入生產的速度也就越快。快速的代碼 review 可以向開發者提供反饋，同時代碼和相關概念仍然記憶猶新。</p><p><strong>4. 主動記錄代碼、設計和流程，形成文檔</strong></p><p>優秀的文檔將幫助未來的工程師維護和構建工作。</p><p>放棄現有系統的一個關鍵原因通常是周圍沒有人知道它是如何運行的，或者不瞭解技術決策背後的背景。優秀的工程師通過記錄他們的工作來確保他們留下堅實的基礎和遺產。</p><p><strong>5. 坦誠地參與技術討論</strong></p><p>構建出色的軟件需要一個對技術想法持開放和坦誠態度的團隊。</p><p>每個人都應該坦誠説出自己的想法，並營造一種邀請其他人也這樣做的氛圍。提出一個好主意並繼續重複它以使其變得更好。</p><p>如果看到了想法中的缺陷，就公開地指出來，並解釋你的理由。</p><p><strong>6. 完成「狗屎」工作</strong></p><p>只有完成工作才能取得成果。你需要把事情做好並交付生產。當一個項目接近完成時，我們都有過能量減弱的經歷，當時間不夠，終點線仍然感覺很遙遠的時候。這就是需要集中注意力、縮小功能範圍、保持強度水平並推動項目完成的地方。把事情做好是偉大工程師所體現的一種技能和習慣。</p><p><strong>7. 保持好奇心</strong></p><p>偉大的工程師往往具有天生的好奇心。他們不止對解決長期業務問題的新技術、新技術方法感興趣。因為他們的好奇心不僅限於技術，還會經常進一步瞭解他們所做工作的用户和業務背景，以及他們可以產生的影響。</p><p>原文：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmakingsmallercircles.com%2Farticles%2F7-habits-of-highly-effective-software-engineers%2F" target="_blank">https://makingsmallercircles.com/</a></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 26 Sep 2023 09:42:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/259604/7-habits-of-highly-effective-software-engineers</guid>
            <link>https://www.oschina.net/news/259604/7-habits-of-highly-effective-software-engineers</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[雲原生週刊：K8s 的 13 個最佳開源監控工具]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h2>開源項目推薦</h2><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdevtron-labs%2Fsilver-surfer" target="_blank">Silver Surfer</a></h3><p>該項目旨在檢查 Kubernetes 對象的 API 版本兼容性，併為其提供遷移路徑，以便為集羣升級做好準備。</p><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Factions%2Factions-runner-controller" target="_blank">Actions Runner Controller</a></h3><p>Actions Runner Controller (ARC) 是一個 Kubernetes 操作器，可為 GitHub Actions 編排和擴展自託管運行器。</p><p>使用 ARC，您可以創建運行程序規模集，該規模集可根據存儲庫、組織或企業中運行的工作流數量自動擴展。由於受控運行程序可能是短暫的並且基於容器，因此新的運行程序實例可以快速、乾淨地擴展或縮減。</p><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fhelm%2Fhelm-mapkubeapis" target="_blank">helm-mapkubeapis</a></h3><p>這是一個 Helm 插件，可將版本中廢棄或移除的 Kubernetes API 映射到受支持的 API 中。</p><h2>文章推薦</h2><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmedium.com%2F%40omers1414%2Fmastering-argocd-management-advanced-gitops-techniques-for-flexibility-and-scale-5a1375958482" target="_blank">掌握 ArgoCD 管理：實現靈活性和規模的高級 GitOps 技術</a></h3><p>這篇文章深入探討瞭如何利用 ArgoCD 的潛力進行高級 GitOps 管理，通過 ApplicationSet Helm Chart 實現靈活的部署，以及通過擴展 ArgoCD 實例實現可擴展性和多租户支持的未來發展方向。</p><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flogz.io%2Fblog%2Fopen-source-monitoring-tools-for-kubernetes%2F" target="_blank">Kubernetes 的 13 個最佳開源監控工具</a></h3><p>這篇文章提供了關於 Kubernetes 的 13 個開源監控工具的概述，並介紹了每個工具的優點和缺點，以幫助讀者選擇適合其需求的工具。</p><h2>雲原生動態</h2><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.linuxfoundation.org%2Fpress%2Fannouncing-opentofu" target="_blank">Linux 基金會推出 OpenTofu</a></h3><p>Linux 基金會宣佈成立 OpenTofu，這是一個開源替代方案，用於 Terraform 廣泛使用的基礎設施即代碼工具。OpenTofu 以前被稱為 OpenTF，是對 Terraform 最近宣佈的許可證變更（從 Mozilla Public License v2.0（MPLv2）變更為 Business Source License v1.1）的開放和社區驅動的迴應，為每個人提供了一個可靠的開源替代方案，採用中立的治理模型。</p><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FgTzDuuX3ZdMjPrJ1qka2tw" target="_blank">Fluent Operator 2.5.0 發佈：新增多個插件</a></h3><p>Fluent Operator v2.5.0 新增 11 個 features， 其中 Fluent Bit 新增支持 7 個插件， Fluentd 新增支持 1 個插件。此外，對 Fluent Operator 也進行了增強，調整了默認參數，以便適應更多場景，並對 helm chart 進行了優化，用户可以更方便的進行安裝，並修復了部分 bug。</p><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.infoq.com%2Fnews%2F2023%2F09%2Fhashicorp-vault-kubernetes%2F%3FtopicPageSponsorship%3D6457dc55-9c2d-4b4a-a65a-641549fdbe17" target="_blank">適用於 Kubernetes 的 HashiCorp Vault Secrets Operator 正式推出</a></h3><p>HashiCorp 已將適用於 Kubernetes 的 HashiCorp Vault Secrets Operator 正式投入使用。該 Kubernetes Operator 將 Vault 的 secret 緩存相結合。操作員還處理 Secrets 輪換，並擁有用於各種特定於 Secrets 的自定義資源的控制器。</p><p>Vault Secrets Operators 監視其自定義資源定義 (CRD) 集的更改。每個 CRD 都允許操作員將 Vault Secret 同步到 Kubernetes Secret。該運算符將源 Vault secret 直接寫入目標 Kubernetes secret。這可確保對源所做的所有更改都能正確複製，並使用 Kubernetes 自定義資源來管理服務使用的 secret。應用程序能夠以 Kubernetes 原生方式從目的地使用 secret。</p><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdevclass.com%2F2023%2F09%2F21%2Fharness-introduces-gitness-open-source-git-platform%2F" target="_blank">Harness 推出開源 Git 平台 Gitness</a></h3><p>DevOps 公司 Harness 發佈了 Gitness，這是一個新的開源 Git 平台，據稱這是「近十年來開源 Git 平台的第一個重要版本」。</p><p>Gitness 有兩個主要組件，自託管的 Git 存儲庫和基於 Drone 的管道。</p><p>Harness 提供了所謂的軟件交付平台，該平台可以自託管、安裝在 AWS 上或由 Harness 託管的雲上，提供各種產品，包括持續交付、功能標記、錯誤跟蹤和混沌工程。該公司還提供多種可免費使用的開源或可用源代碼產品，但由於許可限制，並非所有產品都有資格成為真正的開源產品。</p><blockquote><p>本文由博客一文多發平台 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopenwrite.cn%3Ffrom%3Darticle_bottom" target="_blank">OpenWrite</a> 發佈！</p></blockquote></div>
                                    ]]>
            </description>
            <pubDate>Tue, 26 Sep 2023 09:20:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/4197945/blog/10114425</guid>
            <link>https://my.oschina.net/u/4197945/blog/10114425</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
    </channel>
</rss>
