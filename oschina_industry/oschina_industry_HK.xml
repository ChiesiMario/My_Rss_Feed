<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[開源中國-綜合資訊]]>
        </title>
        <link>https://www.oschina.net/news/industry</link>
        <atom:link href="https://rsshub.app/oschina/news/industry" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[開源中國-綜合資訊 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Tue, 09 Jan 2024 13:45:36 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[2023 年中國軟件名城評估結果公佈：深圳、杭州、北京獲得最高三星評級]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>工信部近日印發《工業和信息化部關於 2023 年中國軟件名城評估結果的通告》，<strong>確定了 2023 年中國軟件名城評估結果</strong>。</p><p>1、<strong><span style="background-color:#e67e22">深圳</span></strong>：★★★</p><p>2、<strong><span style="background-color:#e67e22">杭州</span></strong>：★★★</p><p>3、<strong><span style="background-color:#e67e22">北京</span></strong>：★★★</p><p>4、南京：★★</p><p>5、上海：★★</p><p>6、成都：★★</p><p>7、濟南：★★</p><p>8、武漢：★★</p><p>9、廣州：★★</p><p>10、蘇州：★★</p><p>11、青島：★★</p><p>12、廈門：★★</p><p>13、福州：★★</p><p>14、無錫：★★</p><hr><p>工信部 2017 年印發了《中國軟件名城創建管理辦法（試行）》，目前已授牌&nbsp;14 個名城。</p><p>申請創建中國軟件名城的城市需為<strong>地級及以上</strong>。同時需具備以下條件：</p><ul><li><p>一是軟件和信息技術服務業基礎良好、規模較大、發展潛力較強，對國民經濟的貢獻程度較高，擁有若干全國知名度較高的骨幹軟件企業和若干全國市場佔有率較高的軟件產品，創新能力較強，產業特色鮮明、生態較好；</p></li><li><p>二是軟件和信息技術服務業帶動效應明顯，對拉動經濟增長、促進就業、加速傳統行業數字化轉型，以及提升城市管理和社會服務水平具有重要支撐作用，對城市文化塑造及品牌提升具有積極影響；</p></li><li><p>三是產業政策支持力度較大，具有較為豐富的科技、教育、人才等資源條件和良好的城市人文環境，具有較為完善的適合軟件和信息技術服務業集聚發展的物理載體環境，產業基地園區、公共服務平台等建設情況良好。</p></li><li><p>此外，申請城市及所屬省級人民政府要對發展軟件和信息技術服務業高度重視，並積極主動開展名城創建工作。</p></li></ul><p>2022 年 12 月，<strong><u><a href="https://www.oschina.net/news/221868">工信部發布了關於印發中國軟件名城（園）管理辦法的通知</a></u></strong>，進一步規範名城、名園管理工作，新的管理辦法將對中國軟件名城、名園動態管理實行<strong>退出機制</strong>。</p><p>通過每年組織開展評估工作，以星級體現（最高級為三星，星級越高發展質量越好）評估結果，充分調動地方發展軟件和信息技術服務業的積極性。<strong>對評估結果為一星的名城、名園，工業和信息化部給予提醒，責令整改；對連續兩年評估結果為一星的，公告退出</strong>。</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 09 Jan 2024 10:45:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/274956</guid>
            <link>https://www.oschina.net/news/274956</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[工信部：到 2027 年，制定雲計算國家標準和行業標準達 50 項以上]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>工信部<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.miit.gov.cn%2Fgzcy%2Fyjzj%2Fart%2F2024%2Fart_0dba24687491428a8939060c79ee358a.html" target="_blank">徵集</a>對《雲計算綜合標準化體系建設指南》（徵求意見稿）（以下簡稱《指南》）的意見。</p><p><img height="264" src="https://oscimg.oschina.net/oscnet/up-249312eb4a023d062a0a406036a6f3ae7a6.png" width="500" referrerpolicy="no-referrer"></p><p>《指南》明確，到 2025 年，雲計算標準體系更加完善。推進修訂參考架構、術語等基礎標準，優先制定雲計算創新技術產品、新型服務應用和重要缺失領域的關鍵標準。開展雲原生、邊緣雲、混合雲、分佈式雲等重點技術與產品標準研製，制定一批新型雲服務標準，面向製造、軟件和信息技術服務、信息通信、金融、政務等重點行業領域開展應用標準建設。</p><p>到 2027 年，制定雲計算國家標準和行業標準達 50 項以上，基本覆蓋基礎、技術與產品、服務、應用、管理、安全等各類研製方向，有效滿足我國產業標準化新階段需求。結合雲計算產業發展情況及各行業用户上雲用雲需求，推動雲計算國行團標落地實施。提高國際標準參與度與轉化率，協同推進互聯互通與標準開放。</p><p>《指南》指出，立足我國雲計算產業發展及生態系統建設新階段，總結現階段雲計算標準體系建設成效，結合國內外雲計算技術演進趨勢和關鍵挑戰，研究分析各領域方向的標準制定和缺失情況，在《雲計算綜合標準化體系建設指南》（工信廳信軟〔2015〕132 號）基礎上，修訂更新雲計算綜合標準化體系，以指導具體標準的立項與制定。修訂後的雲計算綜合標準化體系結構見圖 1，包括「01 基礎標準」、「02 技術與產品標準」、「03 服務標準」、「04 應用標準」、「05 管理標準」和「06 安全標準」六個部分。</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 09 Jan 2024 10:10:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/274952</guid>
            <link>https://www.oschina.net/news/274952</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[雲原生週刊：K8sGPT 加入 CNCF]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h2>開源項目推薦</h2><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fbackube%2Fvolsync" target="_blank">VolSync</a></h3><p>VolSync 使用 rsync 或 rclone 在集羣之間異步複製 Kubernetes 持久卷。它還支持通過 Restic 創建持久卷的備份。</p><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopenclarity%2Fkubeclarity" target="_blank">KubeClarity</a></h3><p>KubeClarity 是一種用於檢測和管理軟件物料清單 (SBOM) 以及容器映像和文件系統漏洞的工具。它掃描運行時 K8s 集羣和 CI/CD 管道，以增強軟件供應鏈的安全性。</p><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmariadb-operator%2Fmariadb-operator" target="_blank">mariadb-operator</a></h3><p>以雲原生方式運行和操作 MariaDB。使用 Kubernetes CRD 而不是命令式命令以聲明方式管理 MariaDB 。</p><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fpadok-team%2Fburrito" target="_blank">Burrito</a></h3><p>Burrito 是 TACoS（Terraform 自動化協作軟件）Kubernetes 運營商。它解決了管理基礎架構狀態漂移、為 Terraform 編寫 CI/CD 流水線以及提供 Terraform 狀態修改可見性的挑戰。</p><h2>文章推薦</h2><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmedium.com%2F%40kylelzk%2Fkubernetes-theory-understanding-kubernetes-components-a-deep-dive-ac31b7463df2" target="_blank">理解 Kubernetes 組件：深入探討</a></h3><p>這篇文章深入介紹了 Kubernetes 組件，幫助讀者全面瞭解這個強大的容器編排平台。文章首先介紹了 Kubernetes 的架構，包括主要組件和它們的功能，如 kube-apiserver、etcd、kube-scheduler、kube-controller-manager 和 cloud-controller-manager。接下來，文章討論了運行在每個節點上的節點組件，如 kubelet、kube-proxy 和容器運行時。然後，文章介紹了一些附加組件，如 DNS、Web UI（Dashboard）、容器資源監控和集羣級別的日誌記錄。最後，文章討論了網絡組件和存儲組件，包括 CNI、Ingress、Service、Persistent Volumes 和 Storage Classes。通過深入瞭解這些組件的作用和功能，開發人員和管理員可以充分利用 Kubernetes 的功能，有效地管理和擴展他們的應用程序。</p><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcollabnix.com%2Fwhats-new-in-kubernetes-1-29-mandala-the-universe%2F" target="_blank">Kubernetes 1.29 新增功能：PersistentVolume 訪問模式、節點卷擴展、KMS 加密、調度程序優化等</a></h3><p>這篇文章介紹了 Kubernetes 1.29 版本的新功能和改進。其中包括持久卷訪問模式、節點卷擴展、KMS 加密、調度器優化等方面的內容。文章強調了 Kubernetes 社區的協作精神，並概述了各個穩定、測試和實驗性功能的特點和用途。這些新功能提供了更好的持久性、存儲靈活性和加密能力，同時通過優化調度效率和改進節點生命週期管理，提升了集羣的性能和可靠性。全文通過 Mandala 主題來展示 Kubernetes 的發展和創新，鼓勵讀者參考官方發佈説明，全面瞭解 Kubernetes 1.29 版本的變化，並共同探索容器編排的未來。</p><h2>雲原生動態</h2><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fk8sgpt.ai%2Fblog%2Fpost-7%2F" target="_blank">K8sGPT 加入 CNCF</a></h3><p>K8sGPT 是一個用於掃描您的 Kubernetes 集羣、以簡單的英語診斷和處理問題的工具。它將 SRE 經驗編碼到其分析器中，並幫助提取最相關的信息，並結合人工智能來豐富分析結果。</p><p>K8sGPT 項目獲選加入 CNCF，成為第一個被接受的 AI + Kubernetes 工具。</p><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpicluster.ricsanfre.com%2Fblog%2F2024%2F01%2F04%2Fannouncing-release-1.8%2F" target="_blank">Kubernetes Pi Cluster 發佈 v1.8</a></h3><p>Kubernetes Pi Cluster 項目的第八個版本（v1.8）發佈了。該版本的主要特性和改進包括：</p><ul><li>K3S 高可用配置：使用 3 個主節點實現高可用性部署，並採用嵌入式 etcd 數據存儲。為了提供 Kubernetes API 的高可用性，使用網絡負載均衡器 HAProxy。</li><li>遷移 Ingress Controller：從 Traefik 遷移到 NGINX。這個遷移的主要原因是使用標準的 Ingress 資源，簡化 Linkerd 集成配置。</li><li>單點登錄（Single Sign-on）：基於 OAuth2.0/OpenID Connect 標準，部署了一個基於 Keycloak 的單點登錄解決方案。Keycloak 是一個開源的身份訪問管理解決方案，支持集中身份驗證和授權服務。</li><li>新增 Kafka 服務：添加 Kafka 作為事件流平台，實現面向數據驅動的微服務架構。部署 Kafka Schema Registry，用於集中管理 Kafka 生產者和消費者的模式。</li></ul><blockquote><p>本文由博客一文多發平台 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopenwrite.cn%3Ffrom%3Darticle_bottom" target="_blank">OpenWrite</a> 發佈！</p></blockquote></div>
                                    ]]>
            </description>
            <pubDate>Tue, 09 Jan 2024 09:08:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/4197945/blog/10726775</guid>
            <link>https://my.oschina.net/u/4197945/blog/10726775</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[openKylin 2.0 揭秘 | 新一代不可變系統探索]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">openKylin 不可變系統，由社區 UpdateManager &nbsp;SIG 基於 OStree 技術研發，目標是為用户提供更加穩定、安全和高效的不可變系統架構，提高系統的安全性和穩定性，簡化系統管理。目前，大家可通過安裝 openKylin 2.0 Alpha 版本時勾選「不可變系統安裝」進行體驗，完整功能請期待 openKylin 2.0 正式版本上線！</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:center"><img alt="" height="410" src="https://oscimg.oschina.net/oscnet/up-715de6551bd2081ffda9898ef990c804ae4.png" width="940" referrerpolicy="no-referrer"></p><p style="text-align:center"><strong>什麼是不可變系統</strong></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span style="color:#000000">不可變系統，是一種不可更改且只讀的操作系統，即用户或應用程序不能直接修改正在運行的系統的核心文件和目錄，用户通過原子更新實現系統的更新升級，<strong>在更新失敗時能夠迅速回滾，確保系統不會陷入異常狀態</strong>。應用程序通過容器技術與核心操作系統相互隔離，確保一個應用程序所做的更改不會影響核心系統。</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><strong><span style="color:#000000">openKylin 不可變系統，採用 OStree 技術實現對新一代不可變系統的探索</span></strong><span style="color:#000000">。OStree 是一種用於操作系統的版本控制系統，它類似於 Git，用於整個操作系統文件系統樹的版本控制。OStree 允許用户對整個操作系統進行版本控制，包括內核、庫、二進制文件和配置文件等，這使得系統升級、回滾變得更加容易。OStree 技術的另一個重要特點是不可變性。它將整個操作系統視為一個不可變的文件系統樹，每個版本都被視為一個不可變文件系統樹分支版本。</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify">&nbsp;</p><p style="text-align:center"><strong>openKylin 不可變系統技術優勢</strong></p><p><span><strong>強大的穩定性</strong></span></p><p style="margin-left:0px; margin-right:0px">藉助 OStree 技術，openKylin 不可變系統可實現系統架構的不可變性，確保每次系統更新都是無風險、原子級的操作，大大降低系統運行中出現問題的可能性，為用户提供更加強大的穩定性保障。</p><p><span><strong>安全可靠</strong></span></p><p style="margin-left:0px; margin-right:0px">通過 openKylin 不可變系統架構，可有效應對惡意軟件和系統漏洞的威脅，為用户數據和隱私安全提供堅實的保障，極大地提升系統的安全性。</p><p><span><strong>應用隔離</strong></span></p><p>通過容器化技術實現應用程序與核心操作系統隔離，確保應用程序所做的更改不會影響核心系統或其他應用程序。</p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span style="color:#000000">綜上所述，openKylin 基於 OStree 的不可變系統實現，確保系統核心不可變，將為用户帶來更加穩定、安全的體驗。在後續揭秘中，我們也將對 openKylin 不可變系統方案特性進行詳細解讀，敬請期待！</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify">&nbsp;</p><p><strong>關於 UpdateManager&nbsp;SIG</strong></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span style="color:#000000">openKylin 社區 UpdateManager SIG 組致力於開發和維護 openKylin 系統升級機制，並探索和研發新一代不可變系統相關技術，包括系統架構、OStree、系統更新組件等，提供不可變系統相關的技術規劃、設計、開發、維護和系統升級方案。歡迎社區中對系統更新升級、不可變系統等技術領域感興趣的開發者加入我們！</span></p><ul><li><p style="margin-left:0; margin-right:0; text-align:justify"><span style="color:#000000">SIG 主頁：</span></p><p style="margin-left:0; margin-right:0; text-align:justify"><span style="color:#0b43d1">https://gitee.com/openkylin/community/tree/master/sig/UpdateManager</span></p></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Tue, 09 Jan 2024 09:05:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/274942</guid>
            <link>https://www.oschina.net/news/274942</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[GTK 將採用「統一渲染器」取代 OpenGL 和 Vulkan]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>GTK 近日合併了名為「Add new unified renderer」的 PR。</p><blockquote><p style="margin-left:0; margin-right:0">GTK (GIMP Toolkit) 是一套跨多種平台的圖形工具包，最初為 GIMP 而寫，GIMP 是指 GNU 圖像處理程序 (GNU Image Manipulation Program)，GIMP 擁有幾乎所有圖象處理所需的功能，號稱 Linux 下的 Photoshop。GTK 後來發展成為 Linux 下開發圖形界面應用的主流開發工具。</p></blockquote><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-730b58563ec58c49ba1dd57df43a1e3cb9e.png" referrerpolicy="no-referrer"></p><p><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgitlab.gnome.org%2FGNOME%2Fgtk%2F-%2Fmerge_requests%2F6588" target="_blank">根據描述</a></u>，該 PR 添加了新的<strong><span style="background-color:#e67e22">統一渲染器 (unified renderer)</span></strong>，又稱「GPU 渲染器」。它取代了舊的 Vulkan 渲染器，並將最終取代 OpenGL。此舉意味着 GTK 的現代 GPU 加速渲染向前邁出了一大步。</p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.phoronix.com%2Fnews%2FGTK-Unified-Renderer-Progress" target="_blank">據介紹</a>，GTK 統一渲染器的主要補丁集有 24.8k 行新代碼，同時刪除了 9.6k 行現有代碼。</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 09 Jan 2024 07:21:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/274918/gtk-unified-renderer-progress</guid>
            <link>https://www.oschina.net/news/274918/gtk-unified-renderer-progress</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[OpenAI 稱《紐約時報》的版權訴訟毫無根據]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">《紐約時報》曾於去年 12 月起訴 OpenAI 和微軟公司，稱這兩家公司非法使用其受版權保護的材料來訓練 AI 模型。時至今日，OpenAI 公開回擊並發表了一篇<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopenai.com%2Fblog%2Fopenai-and-journalism" target="_blank">博文稱</a>：「我們支持新聞業，與新聞機構合作，並認為《紐約時報》的訴訟毫無根據。」</span></p><p><span style="color:#000000">該公司在博文中重申了以下四點立場：</span></p><ul><li><span style="color:#000000">我們與新聞機構合作並創造新的機會</span></li><li><span style="color:#000000">培訓屬於合理使用，但我們提供選擇退出的機會，因為這是正確的做法</span></li><li><span style="color:#000000">「反芻（Regurgitation）」是一種罕見的錯誤，我們正在努力將其降至為零</span></li><li><span style="color:#000000">《紐約時報》沒有講述完整的事實</span></li></ul><p><img height="312" src="https://oscimg.oschina.net/oscnet/up-2b1881fb593ade980a7bc0e1308304de93c.png" width="700" referrerpolicy="no-referrer"></p><p><span style="color:#000000">OpenAI 方面表示，其目標是支持健康的新聞生態系統、成為良好的合作伙伴、創造互利的機會；考慮到這一點，該公司一直在尋求與新聞機構建立合作伙伴關係。通過與美聯社、Axel Springer、American Journalism Project 和紐約大學的早期合作，他們已經對相關方法有了初步瞭解。</span></p><p><span style="color:#000000">該公司認為，一些已經普遍被接受的先例表明，使用公開可用的互聯網資料訓練 AI 模型是屬於合理使用範疇。「我們認為這一原則對創造者是公平的，對創新者是必要的，對美國的競爭力也是至關重要的。」</span></p><p><span style="color:#000000">而關於「反芻」問題，OpenAI 則解釋道，他們已經採取了措施來限制非故意記憶，並防止大模型輸出中的反芻現象。並指出，如果訓練數據來自單一來源（如《紐約時報》），則反芻的可能性較小；同時也敦促用户"act responsibly"，避免故意促使其模型反芻。「故意操縱我們的模型進行反芻不是對我們技術的適當使用，也違反了我們的使用條款」。「反芻」是指特定內容在大模型的訓練數據中多次出現的一種現象。</span></p><p><span style="color:#000000">OpenAI 透露與《紐約時報》的最後一次溝通是在 2023 年 12 月 19 日，「我們與《紐約時報》的討論似乎取得了建設性進展......我們向《紐約時報》解釋説，與任何單一來源一樣，他們的內容對我們現有模型的訓練沒有任何有意義的貢獻，也不會對未來的訓練產生足夠的影響。但他們於 12 月 27 日提起了訴訟 —— 我們是也通過《紐約時報》才瞭解到的 —— 這令我們感到驚訝和失望。」</span></p><p><span style="color:#000000">值得一提的是，OpenAI 稱《紐約時報》在雙方的溝通過程中已經發現了一些內容的反芻，但卻在 OpenAI 承諾調查和解決任何問題的前提下，一再拒絕分享任何示例。</span></p><blockquote><p><span style="color:#000000">有趣的是，《紐約時報》<span style="background-color:#f8f9f9">提到的反芻</span>似乎來自於多個第三方網站上大量傳播的多年前的文章。為了讓我們的模型進行反芻，他們似乎有意篡改了提示語，通常包括冗長的文章節選。即使在使用此類提示時，我們的模型通常也不會像《紐約時報》影射的那樣，這表明他們要麼是指示模型進行反芻，要麼是從眾多嘗試中精心挑選了一些示例。</span></p><p><span style="color:#000000">儘管他們聲稱，這種誤用並非典型或允許的用户行為，也不能替代《紐約時報》。但無論如何，我們都在不斷提高系統的抗逆向攻擊能力，以避免訓練數據被反芻，並在最近的模型中取得了很大進展。</span></p></blockquote><p><span style="color:#000000">在聲明的最後，OpenAI 表示，儘管他們<span style="background-color:#ffffff">認為《紐約時報》的訴訟毫無根據；但仍然對《紐約時報》保持尊重並希望與其建立建設性的合作伙伴關係。「我們期待與新聞機構繼續合作，通過實現 AI 的變革潛力，幫助他們提高生產高質量新聞的能力。」</span></span></p><p><span style="color:#000000">OpenAI 做出迴應之際，圍繞生成式 AI 的版權爭論正值白熱化。一些數據表明，公眾更傾向於站在媒體出版商這一方。The AI Policy Institute 最近的一項民意調查結果顯示，當得知《紐約時報》起訴 OpenAI 的詳情後，59% 的受訪者同意 AI 公司不應該被允許使用出版商的內容來訓練模型；70% 的受訪則表示，如果這些公司想在模型訓練中使用受版權保護的材料，就應該向出版商提供補償。</span></p><p><strong><span style="color:#000000">延伸閲讀：</span></strong></p><ul><li><a href="https://www.oschina.net/news/274326/openai-offers-publishers-little-1m" target="news">OpenAI 擬每年投入 100-500 萬美元，以獲取新聞使用許可</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Tue, 09 Jan 2024 07:12:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/274916/openai-and-journalism</guid>
            <link>https://www.oschina.net/news/274916/openai-and-journalism</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[開源神器 LSPosed 宣佈停更，作者稱遭受大量惡意攻擊]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Android 平台 Xposed Framework 的替代實現版本 LSPosed 宣佈停止維護，目前 LSPosed 的 GitHub 倉庫已經設置為只讀狀態。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">LSPosed 是一個 Magisk<span>&nbsp;</span><span><span><span>模塊，嘗試提供一個 ART hooking 框架，該框架提供與 OG Xposed 一致的 API，其利用 LSPlant hooking 框架。</span></span></span></p><p><img src="https://oscimg.oschina.net/oscnet/up-75beeed327a7d34771f31dd9958c3920723.png" referrerpolicy="no-referrer"></p><p><u><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FLSPosed%2FLSPosed" target="_blank">https://github.com/LSPosed/LSPosed</a></em></u></p><p>對於停止開發的原因，開發者在其訂閲頻道中表示停止維護的主要原因是出現許多謠言、誹謗、種族主義和咒罵等。同時開發者也受到 Magisk 社區的一些咒罵，因此開發者決定休息，停止開發和維護。</p><p><img src="https://oscimg.oschina.net/oscnet/up-c9dc6d212bdbe837a4322248a364756b5ff.png" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 09 Jan 2024 03:58:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/274877</guid>
            <link>https://www.oschina.net/news/274877</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[渠成開源社區 2023 年工作總結]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span>「道雖邇，不行不至；事雖小，不為不成。」2023 年，對渠成開源社區來説，是不平凡的一年，更是值得回味的一年。</span></p><p><span>這一年，我們從零搭建了渠成開源社區，確定了工作組成員；</span></p><p><span>這一年，我們鏈接了開源作者/開源社區，為他們提供了服務；</span></p><p><span>這一年，我們舉辦了多場活動，為更多用户創建了彼此交流的機會；</span></p><p><span>……</span></p><p><span>回望 2023 年，渠成開源社區所經歷的驚喜與感動，都離不開社區中每位夥伴的陪伴和努力。我們不斷迭代、不斷創新，我們共同走過的每一個瞬間都值得紀念與慶賀。</span></p><p style="text-align:center"><span><strong>一、從 0 到 1 搭建社區</strong></span></p><p><strong><em>1&nbsp;</em>成立社區工作組</strong></p><p><span>2023 年 4 月，我們確定了<strong>渠成開源社區的工作組團隊</strong>，包括顧問專家、市場運營、產品規劃、網站開發、設計以及財務幾大角色。期間完善了社區相關運營機制，包括不限於確定社區 23 年的目標、完善社區的媒體賬號、確定社區對外信息公開機制等。</span></p><p><span>社區的對外信息公開機制，真正讓社區內每一次的會議、每一筆的支出都做到有跡可尋。在官網的「<strong>財務公開</strong>」版塊，現已公開了 2021 年 11 月-2023 年 11 月渠成開源社區的現金流水賬。</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span>2023 年，工作組共開展了<strong>13 場</strong>的會議，工作組成員在會上提出各項社區成員關注的問題，共同探討以提供相應的解決方案。往期會議詳情可在渠成開源社區官網查看：</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.qucheng.cc%2Fmeetings.html" target="_blank" rel="nofollow"><span>https://www.qucheng.cc/meetings.html</span></a></p><p><strong><em>2&nbsp;</em></strong><span><strong>搭建官方媒體矩陣</strong></span></p><p><span>2023 年 4 月，我們上線了<strong>渠成開源社區官網</strong>（</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.qucheng.cc%2F" target="_blank" rel="nofollow"><span>https://www.qucheng.cc/</span></a><span>）</span><span>，詳細介紹了社區的定位、章程、會員入駐機制和會員權益等。同時，為了方便大家從多渠道、多途徑瞭解開源項目，我們還開通渠成開源社區的微信公眾號、視頻號、Bilibili、開源中國、知乎號、GitHub 等社媒賬號。</span></p><ul><li><p><span>微信公眾號：</span><strong>渠成開源社區</strong></p></li><li><p><span>視頻號、Bilibili、開源中國、知乎號：渠成開源社區</span></p></li><li><p><span>GitHub：</span><span>@QuCheng-OpenSource</span></p></li></ul><p style="margin-left:0px; margin-right:0px; text-align:center"><span><span><strong>二</strong><strong>、</strong></span><strong>鏈接開源生態中的各種角色</strong></span></p><p><strong><em>1&nbsp;</em></strong><span><strong>鏈接開源作者/開源社區</strong></span></p><ul><li><p><strong><span>持續邀請開源項目入駐社區</span></strong></p></li></ul><p><span>我們歡迎更多的開源項目可以入駐渠成開源社區，社區會為會員項目<strong>提供項目運營、周邊設計、贊助招募、法律諮詢以及商業化諮詢等多項服務。</strong></span></p><p><span>截至目前，已有<strong>39 個項目</strong>入駐渠成開源社區，成為了渠成開源社區的會員項目。會員項目可享受入駐渠成 Demo 中心的權益，讓所有人都能在線體驗會員項目的 Demo，輕鬆實現高可用。同時，渠成開源社區所接受的捐贈與贊助會根據捐贈方或贊助方的意願使用該資金，用於鼓勵、支持社區會員的開源項目。</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:center"><img alt="" height="383" src="https://oscimg.oschina.net/oscnet/up-0a2fc114545f42267ae6fc4321861ef99e5.jpg" width="600" referrerpolicy="no-referrer"></p><ul><li><p><strong><span>持續設計開源周邊產品</span></strong></p></li></ul><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span>為幫助各個開源項目提高知名度，同時讓更多開源軟件的粉絲獲取相關周邊產品，我們與國內外數十個開源項目聯絡，獲取各大開源項目的授權，使用其 Logo 設計出精美的周邊 T 恤。我們已將 T 恤設計稿開源至 GitHub，供大家下載與使用：</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FQuCheng-OpenSource%2FT-shirt" target="_blank" rel="nofollow"><span>GitHub - QuCheng-OpenSource/T-shirt</span></a></p><ul><li><p><strong><span>打造社區禮品體系</span></strong></p></li></ul><p><span>渠成開源社區官網的「<strong>開源周邊</strong>」板塊已上架了我們為各開源項目設計的周邊 T 恤，用户可以直接在線下單購買。周邊產品的所有銷售利潤，均會公開透明地用於到社區發展中。</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0px; margin-right:0px; text-align:center"><img alt="" height="237" src="https://oscimg.oschina.net/oscnet/up-f3b16af9cf4e22ea243581eeac04c5bd5f0.jpg" width="600" referrerpolicy="no-referrer"></p><ul><li><p><strong><span>持續上線官網新版塊</span></strong></p></li></ul><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span>2023 年，根據用户反饋和日常討論，<strong>我們在官網上線了開源動態和社區活動兩個板塊。</strong>用户可以在官網的「開源動態」板塊進行在線投稿。同時，社區公眾號邀請了眾多優秀開源作者開放白名單，以幫助轉發推廣文章與活動。</span></p><p><strong><em>2&nbsp;</em></strong><span><strong>傳遞社區價值主張</strong></span></p><ul><li><p><span><strong>發起「源來是你」系列欄目</strong></span></p></li></ul><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span>本着為更多開源相關的用户提供更好的服務原則，切實幫助每一個開源軟件實現商業化。我們蒐集了大家關心的各類問題。分別在北京、上海兩地分別<strong>舉辦了</strong><strong>2 場專場沙龍活動，開展了 4 期線上直播，涵蓋了商業溝通、產品定價、法律風險規避等多個主題。線上線下共參與人數達 1218 人。</strong></span></p><ul><li><p><strong><span>出品《開源商業化白皮書》</span></strong></p></li></ul><p><span>開源軟件發揮着越來越重要的作用，但國內沒有建立起一個開源軟件商業化的生態體系。為此，渠成開源社區組織撰寫了白皮書，<strong>探討了國內開源現狀、常見的開源商業模式、如何做開源商業化等多個方面</strong>，希望為開源軟件作者、貢獻者以及創業者提供了實際的商業化落地建議。</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:center"><img alt="" height="385" src="https://oscimg.oschina.net/oscnet/up-376a4a0355e49acb1a584a0eac177637db7.jpg" width="600" referrerpolicy="no-referrer"></p><ul><li><p><strong><span>多次參與國內各項大會活動</span></strong></p></li></ul><p style="text-align:center"><img alt="" height="450" src="https://oscimg.oschina.net/oscnet/up-d2ba2578656efd103183dbb7237b299f6a6.jpg" width="600" referrerpolicy="no-referrer"></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span>渠成開源社區積極投入到國內的開源佈道，陸續參加了 2023 上海人工智能大會開源集市、開源社 2023 開源年會、DevOps 社區廣州峯會等活動，以傳遞社區的價值主張。<strong>為了能夠與眾多開源社區保持友好聯繫，我們創建了社區合作伙伴羣，持續分享有價值的開源信息，積極促成合作，共同推動開源事業的發展。</strong></span></p><p style="margin-left:0px; margin-right:0px; text-align:center"><span><strong>三</strong></span><span><strong>、</strong></span><strong>歡迎入駐社區</strong></p><p><span>如果您正在經營一個開源項目，如果您有開源商業化的訴求，<strong>歡迎攜項目入駐渠成開源社區</strong></span><span>：</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.qucheng.cc%2Fproject.html" target="_blank" rel="nofollow"><strong><span>開源項目—項目入駐</span></strong></a><span>。審核通過後，我們將拉您進入項目作者羣。在這裏，您可以與各位開源創業者共同交流、共同成長。</span></p><p style="text-align:center"><strong>歡迎掃碼查看官網</strong></p><p style="text-align:center"><img alt="" height="300" src="https://oscimg.oschina.net/oscnet/up-ce97b5277dc03f6cb550c89d44660add1b3.png" width="300" referrerpolicy="no-referrer"></p><p><span>很多時候，我們會被星辰大海的征途所鼓動，進而熱血沸騰。可實際上，所有的大事都要從小事做起，從細節着手。渠成開源社區，一直秉承的就是這樣的態度，踏踏實實為中國開源軟件事業做貢獻。正因如此，渠成開源社區在 2023 年的努力得到了國內知名開源技術社區開源中國（OSCHINA）的肯定，榮獲 OSCHINA 2023 年度 「<strong>優秀開源技術團隊</strong>」榮譽稱號。</span></p><p><span>征途漫漫從頭越，奮楫揚帆向未來。2024 年，渠成開源社區將服務更多的開發者，幫助大家解決實實在在的問題。<strong>我們期待有更多的開源項目加入社區，也期待與各開源開發者一起攜手打造適閤中國國情的開源軟件生態。</strong>&nbsp;</span></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 09 Jan 2024 03:53:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/6928219/blog/10712985</guid>
            <link>https://my.oschina.net/u/6928219/blog/10712985</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Unity 將裁員 25%，涉及 1800 人]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff; color:#222222">電子遊戲引擎廠商 Unity 計劃裁員 25%，削減近 1800 個工作崗位。該公司在向</span>美國證券交易委員會<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fd18rn0p25nwr6d.cloudfront.net%2FCIK-0001810806%2Ffa621098-7a4d-4e51-8f59-725dc0210b98.pdf" target="_blank">提交的文件</a>中表示，進行裁員是「為了重組和重新聚焦於核心業務，並<span style="background-color:#ffffff; color:#222222">提高長期盈利能力</span>」。</p><p><img height="260" src="https://oscimg.oschina.net/oscnet/up-aa72d8f006422f94c3ee97fa70136996b11.png" width="700" referrerpolicy="no-referrer"></p><p>Unity 的公關總監 Kelly Ekins 在給 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.theverge.com%2F2024%2F1%2F8%2F24030695%2Funity-layoff-staff-25-percent" target="_blank">The Verge</a> 的一份聲明中表示：</p><p>"今天，作為我們在 2023 年 11 月 9 日《股東信》中概述的公司重組的一部分，我們宣佈 Unity 做出了一個艱難的決定，即實施裁員，目標是裁減我們所有團隊總人數的約 25%。這個決定並不容易，我們向那些受到影響的員工表示最深切的感謝，感謝他們的奉獻和貢獻。"</p><p>事實上，<span style="background-color:#ffffff; color:#222222">Unity </span>在過去一年已經經歷了多次裁員。<span style="color:#000000">最近一次裁員是在去年 11 月，</span><span style="background-color:#ffffff; color:#222222">Unity 終止與《指環王》導演 </span><span style="background-color:#ffffff; color:#333333">Peter Jackson</span>&nbsp;<span style="background-color:#ffffff; color:#222222">創辦的視覺特效公司 Weta FX 所達成協議中的專業服務部分。與該協議有關的 <a href="https://www.oschina.net/news/268858/unity-software-cut-38-staff">265 名員工被解僱</a>，佔公司當時全球員工總數的 3.8%。</span></p><p><span style="background-color:#ffffff; color:#222222">在此之前，</span><span style="background-color:#ffffff; color:#333333">Unity 剛宣佈了新的定價模式。在引起業內人士的強烈不滿之後，Unity 向公眾和業內人士道歉，並調整了收費規則，</span><span style="background-color:#ffffff; color:#222222">但其前首席執行官 John Riccitiello 也因此辭職。</span></p><p><span style="background-color:#ffffff; color:#222222">此外，Unity 還宣佈將關閉德國柏林和新加坡等 14 個地區的辦公室，並大幅縮減包括舊金山和華盛頓貝爾維尤在內的其餘辦公室面積。</span></p><p><strong><span style="background-color:#ffffff; color:#222222">相關閲讀：</span></strong></p><ul><li><u><em><a href="https://www.oschina.net/news/257929/unity-runtime-fee">Unity 引擎明年起根據遊戲安裝量收費 (runtime fee)</a></em></u></li><li><u><em><a href="https://www.oschina.net/news/258513/unity-apologize-for-runtime-fee">Unity 道歉：將修改 "runtime fee" 收費政策</a></em></u></li><li><u><em><a href="https://www.oschina.net/news/258477/wait-is-unity-allowed-to-just-change-its-fee-structure-like-that">走近 「收費門」：互相矛盾的服務條款導致 Unity 面臨被起訴的風險</a></em></u></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Tue, 09 Jan 2024 03:23:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/274868/unity-layoff-staff-25-percent</guid>
            <link>https://www.oschina.net/news/274868/unity-layoff-staff-25-percent</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[女高管開除員工事件後續：公司董事長稱員工「慣犯」並質疑「學歷簡歷造假」]]>
            </title>
            <description>
                <![CDATA[<div class="content"><blockquote><p><em><strong>前情提要：<u><a href="https://www.oschina.net/news/274850" target="news">被女高管違法開除員工發聲，因反對用盜版 EDA 工具設計芯片遭針對</a></u></strong></em></p></blockquote><p><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ffinance.sina.com.cn%2Ftech%2Fshenji%2F2024-01-09%2Fdoc-inaawvsf7734023.shtml" target="_blank">根據新浪科技的獨家報道</a></u>，針對「女高管違法開除員工」一事，涉事公司董事長陳怡然今日在與新浪科技溝通中迴應了此事，並進一步透露稱，<strong>被開除員工可能涉嫌「學歷造假、簡歷造假」，此前一路訛了多家公司，「慣犯了」</strong>。</p><p>近日，一段「公司女高管違法開除員工」的視頻在社交網絡上流傳。網傳視頻內容顯示，一名公司女高管井某與視頻拍攝者孫某因解除勞動合同產生了矛盾。視頻中，拍攝者孫某指出公司存在違法解除勞動合同的行為，井某則迴應稱，「我就違法了，怎麼着？我就是違法解除，你去告我吧！我讓你兩年半找不到工作，我下個月有飯吃，你自己想想吧。」</p><p>據悉，女高管在北京尼歐克斯科技有限公司工作，該公司又名蘋芯科技。此前有消息稱，井某系該公司董事長的大學同學。</p><p>董事長陳怡然向新浪科技澄清，稱「雙方並非大學同班同學」，此外，事發時他並不知情，「也壓根不知道這個人的招聘和離職，直到有人將視頻轉發給我」。同時，他還透露稱員工孫某或系「慣犯」，此前可能「學歷造假、簡歷造假」，曾「一路訛了多家公司，又找到了新苦主了」。</p><p>「我只能説這事上政府查過了，公司程序並無瑕疵。」陳怡然表示。</p><p>此前，北京尼歐克斯科技有限公司也發佈聲明稱：網傳我司人力員工井某與前員工孫某因解除勞動關係出現爭執，井某發表不當言論，已責令其停職反省並嚴肅處理。前員工孫某於 2023 年 6 月 25 日入職，簽訂 3 年勞動合同及保密與競業限制協議，試用期 6 個月。因工作能力不勝任，決定不予通過試用期。經協商一致，12 月 1 日雙方簽署解除勞動關係協議，我司按照協議於 12 月 8 日足額支付了 11 月份工資及離職補償金。以上程序均依法合規處理。</p><p>目前，雙方已就離職補償達成協議。</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 09 Jan 2024 03:00:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/274858</guid>
            <link>https://www.oschina.net/news/274858</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[被女高管違法開除員工發聲，因反對用盜版 EDA 工具設計芯片遭針對]]>
            </title>
            <description>
                <![CDATA[<div class="content"><blockquote><p><em>後續：<strong><u><a href="https://www.oschina.net/news/274858" target="news">女高管開除員工事件後續：公司董事長稱員工「慣犯」並質疑「學歷簡歷造假」</a></u></strong></em></p></blockquote><p>近日「女高管違法開除員工」事件在網上引起爭議。網傳視頻顯示，一位女子與視頻拍攝者疑似就解除勞動合同產生了矛盾。</p><p>視頻中，拍攝者指出公司存在違法解除勞動合同的行為，該女子迴應稱，「我就違法了，怎麼着？我就是違法解除，你去告我吧！我讓你兩年半找不到工作，我下個月有飯吃，你自己想想吧。」</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-599c10f7c4239b1ea57ee669a901a765353.png" referrerpolicy="no-referrer"></p><p>現在，疑似被開除員工在網上發聲，他自稱是被女高管開除的男員工，稱北京尼歐克斯又名蘋芯科技，所謂女高管停職不可能的，女高管井玥是清華 94 級無線電畢業，跟公司大老闆杜克教授陳怡然是清華同班同學，關係鐵的很，敷衍一下過陣子又回去了。</p><p>他談到，自己被開除的原因是他反對蘋芯（尼歐克斯）使用盜版 EDA 工具設計芯片，因為盜版設計出的芯片可能有 Bug，質量無法保證。蘋芯把 IC 核心研發業務外包，開除原因是他反對什麼都外包，打鐵還需自身硬；PimChip 芯片覆蓋率只有 20% 多就拿去投片，「清華幫」趁着國產替代跑去投機蹭芯片風口。</p><p>疑似被開除男員工還表示，他去年 8 月份急着從上一個項目脱身，迅速將 resource 投入下一個項目，當時井玥拍桌子怒吼：「你從小就沒有教養」。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-8020424bc0a40d59a9981ebbcd6e721db4b.png" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 09 Jan 2024 02:34:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/274850</guid>
            <link>https://www.oschina.net/news/274850</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[超 200K Star 的 Dromara 開源社區的年終總結，請查收!]]>
            </title>
            <description>
                <![CDATA[<div class="content"><blockquote><p>過去一年大家見證了 Dromara 開源社區的飛速發展，社區的進步離不開社區成員們的，社區下開源項目貢獻者們的辛勤勞動貢獻和觸達用户們，開源愛好者們的大力支持，對此我們感激不盡。</p></blockquote><p>接下來我們看看社區這 2023 一年的成長吧！</p><h2>新增捐贈孵化 20+ 非常棒的開源項目，目前社區下的總項目數量超 50 個。</h2><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-cd45685d0d58c390c2a602b6fa8b4f993d2.png" referrerpolicy="no-referrer"></p><h2>社區下孵化項目 HertzBeat, Dynamic-Tp, Easy-Es 發展迅速，成功畢業成為社區頂級開源項目。雲原生大數據平台 CloudEon 成為被評為 Gitee GVP (Gitee 最具價值開源), 目前 Dromara 社區下的 GVP 項目數量已達到 16 個。社區下開源實時監控 HertzBeat 被 CNCF 全景圖收錄。</h2><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-57dd1fe6b9e62ba97232f902938e10c0d5e.png" referrerpolicy="no-referrer"></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-c665b706e30849fdccba304c6f3226bd098.png" referrerpolicy="no-referrer"></p><h2>在 Gitee 和 Github 平台上，Dromara 社區項目總共獲得超 200K star 小星星🌟，和，數不清的 Fork Watch 次數 (偷懶了😂)。</h2><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-0e7dd59596493651ef93f0b787bf91d26a7.png" referrerpolicy="no-referrer"></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-e1a07f1f7757b3920a6bce244c954b50320.png" referrerpolicy="no-referrer"></p><p><strong>2023 年這一年社區下開源項目在 Github 平台上新增 2 萬，顆小星星，PR 數量 1000+，Issues 數量 1400+</strong></p><h2>社區下開源項目作為課題項目成功參與中科院的 OSPP 開源之夏和計算機學會的 GLCC 編程夏令營活動，申請的同學們熱情很高，最終中選的同學在導師的指導下順利完成課題項目並結項。祝賀他們㊗️。</h2><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-039817cad68c8914e145aa186c735bc42b9.png" referrerpolicy="no-referrer"></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-c83015dfabd64150f30a6c081082afbeb82.png" referrerpolicy="no-referrer"></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-5252b18b809174ab7ab7264ebb9d1d3c011.png" referrerpolicy="no-referrer"></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-a2d294f2653e0b5fba7efb586b816d5013c.png" referrerpolicy="no-referrer"></p><h2>5 月 Dromara 參展全球開源技術峯會 GOTC，社區小夥伴的在上海線下面基成功，+薅了很多羊毛。</h2><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-00d418cbf39fcd588c3fd257bfd7d9a884e.png" referrerpolicy="no-referrer"></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-72c42499ed92108ce0cbfa33de5f427e87b.png" referrerpolicy="no-referrer"></p><h2>7 月 Dromara 參加華為雲開發者大會，社區小夥伴們又東莞線下面基一波，三位小夥伴做了 Dromara 與華為雲開源主題分享，收穫滿滿。</h2><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-0eee75600e49e8fcf942ecb738bdd651c00.png" referrerpolicy="no-referrer"></p><h2>10 月 Dromara 參加了 COSCon'23 中國開源年會，社區小夥伴們又成都線下面基一波，我們準備的小禮品很受歡迎，社區小夥伴做了關於社區項目的主題分享。</h2><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-0f6ec31ce57910497c6c6ac659c922b419f.png" referrerpolicy="no-referrer"></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-e563f49ea48de821e2f0207c7af025a2545.png" referrerpolicy="no-referrer"></p><h2>12 月 Dromara 參加了 2023 開放原子開發者大會，雖然沒有面基成功 (下次一定)，但是社區大佬明哥在會上給開源同行們分享介紹了我們社區，收穫滿滿+1。</h2><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-9dccc42b3cbf031c94c3e5dda2b80e99d3d.png" referrerpolicy="no-referrer"></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-cb265cd99f93341e99b2f6bde68a2bb05e9.png" referrerpolicy="no-referrer"></p><h2>關於榮譽</h2><blockquote><p>榮獲中國開源創新大賽優秀獎, 2023 年度最受關注喜愛的開源組織和最活躍組織之一, 掘金 2023 年度人氣團隊等。</p></blockquote><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-15a7659a08f3aeb5aa3ccebd13fcaa3c608.png" referrerpolicy="no-referrer"></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-126e2fd2fbfcda5620d434d66220f85ad07.png" referrerpolicy="no-referrer"></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-ec2a4083fc9ffe0899aa0a5e46fa9fd65a6.png" referrerpolicy="no-referrer"></p><h4>還有更多事件在 2023 年的 Dromara 發生。。。就先列舉到這裏了</h4><blockquote><p>社區下項目團隊在 2023 年也發佈了無數個版本，維護者上萬人的開源社羣，回答並幫助解決了數不清的用户問題，安裝量，下載量，被引用量都是以萬的單位計數。這一切此時此刻依然正在發生。</p></blockquote><p><strong>2023 已然結束，期待 2024 更加美好！</strong></p><p><strong>船新官網: <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdromara.org%2F" target="_blank">https://dromara.org/</a></strong><br><strong>Github: <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdromara" target="_blank">https://github.com/dromara</a></strong><br><strong>Gitee: <a href="https://gitee.com/dromara">https://gitee.com/dromara</a></strong></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 09 Jan 2024 02:17:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/274844</guid>
            <link>https://www.oschina.net/news/274844</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[北京司法鑑定所破解 AirDrop 匿名溯源]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>北京市司法局微信公眾號「京司觀瀾」<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2Fhy6zPU2y_lR1cgMnmP1IbQ" target="_blank">發文稱</a></u>，北京網神洞鑑司法鑑定所對手機「隔空投送」傳播不當信息案件的司法鑑定突破了 AirDrop 匿名溯源的技術難題，提升了案件偵破的效率和準確性，防止了不當言論的進一步傳播和潛在的惡劣影響。</p><p>iPhone 的 AirDrop 功能用於在蘋果設備之間「匿名」共享文件，這些設備無需連接同一局域網，且無需接收方為通訊錄聯繫人。</p><p><img alt="" height="509" src="https://oscimg.oschina.net/oscnet/up-c0ec4f267efa1fcbecd3a436f62bb40e799.png" width="300" referrerpolicy="no-referrer"></p><p>司法鑑定所的專家通過分析 iPhone 設備日誌，發現發送者的設備名、郵箱和手機號相關字段，<strong>其中手機號與郵箱相關字段是以哈希值的形式記錄，且哈希值部分字段被隱藏</strong>。</p><p>北京網神洞鑑司法鑑定所的司法鑑定技術專家們通過深度解析 iPhone 設備日誌，明確傳輸原理，找出了與 AirDrop 相關的記錄。經檢驗發現發送者的設備名、郵箱和手機號相關字段，其中手機號與郵箱相關字段是以哈希值的形式記錄，且哈希值部分字段被隱藏。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-83eeeb8a2bc7d373aada3f0f5f141335c92.png" referrerpolicy="no-referrer"></p><p>△AirDrop 哈希值轉換工具</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-ece996136f3eb01c07f94d9ed812b2e8a1d.png" referrerpolicy="no-referrer"></p><p>△隔空投送取證溯源</p><p>為實現快速破解該字段，<strong>技術團隊製作了一張詳盡的手機號與郵箱賬號「彩虹表 」，能夠將密文轉換成原始文本，快速鎖定發送者的手機號與郵箱賬號</strong>。&nbsp;</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 09 Jan 2024 02:11:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/274843</guid>
            <link>https://www.oschina.net/news/274843</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[雖遲但到！MySQL 可以用 JavaScript 寫存儲過程了]]>
            </title>
            <description>
                <![CDATA[<div class="content"><blockquote><p>任何能用 JavaScript 來乾的事情，最終都會用 JavaScript 來幹</p></blockquote><h2>背景</h2><p>不久前，Oracle 在 MySQL 官方博客<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblogs.oracle.com%2Fmysql%2Fpost%2Fintroducing-javascript-support-in-mysql" target="_blank">官宣了</a>在 MySQL 中支持用 JavaScript 來寫存儲過程。</p><p><img src="https://oscimg.oschina.net/oscnet/up-31abaabbc716421cb6516bf32657d2f1527.png" alt="file" referrerpolicy="no-referrer"></p><p>最流行的編程語言 + 最流行的數據庫。程序員不做選擇，當然是全都要。</p><p><img src="https://oscimg.oschina.net/oscnet/up-e39605d191281540f71e825f686f15c7a6f.png" alt="file" referrerpolicy="no-referrer"></p><h2>使用方法</h2><p>用 JavaScript 寫存儲過程的示例</p><p><img src="https://oscimg.oschina.net/oscnet/up-40ae1df9662c4efc0104883c69bc2517326.png" alt="file" referrerpolicy="no-referrer"></p><p>在 SQL 中調用</p><p><img src="https://oscimg.oschina.net/oscnet/up-33872be6f36f152268f4056e7ad7961b89a.png" alt="file" referrerpolicy="no-referrer"></p><p>Debug 依然是 print + throw 大法</p><p><img src="https://oscimg.oschina.net/oscnet/up-19512efc33452b3ae4fb7bf7ba9e1e12342.png" alt="file" referrerpolicy="no-referrer"></p><p>Oracle 通過自家的 GraalVM 來保證在 MySQL 中執行 JavaScript 的安全性和性能。</p><p><img src="https://oscimg.oschina.net/oscnet/up-287e034c12abfa5b480cbb42bfd66100db8.png" alt="file" referrerpolicy="no-referrer"><img src="https://oscimg.oschina.net/oscnet/up-a7976a65fd5cb74e1e3f7287f834443dc58.png" alt="file" referrerpolicy="no-referrer"></p><h2>業界評論</h2><p>雖然這個功能還在預覽階段，並且只在 MySQL 企業版以及 HeatWave 雲服務上提供，但還是引起了巨大反響。Reddit 網友金句頻出</p><p><img src="https://oscimg.oschina.net/oscnet/up-fbba7393022d7517b30dbcd00c7f76ce45d.png" alt="file" referrerpolicy="no-referrer"></p><p>又一大波 JS 框架即將到來</p><p><img src="https://oscimg.oschina.net/oscnet/up-9da6f07f451ece47fccfc858cc062a4cf61.png" alt="file" referrerpolicy="no-referrer"><img src="https://oscimg.oschina.net/oscnet/up-04d3f48d68d405de781a02ba7a948abb52d.png" alt="file" referrerpolicy="no-referrer"></p><p>任何能用 JavaScript 來乾的事情，最終都會用 JavaScript 來幹 - Jeff Atwood (Stack Overflow 聯合創始人)</p><p><img src="https://oscimg.oschina.net/oscnet/up-edb7e08bad7336b2291a826261d86dd2791.png" alt="file" referrerpolicy="no-referrer"></p><p>對呀，幹嘛不直接叫 jQuery 呢？</p><p>另一邊 Hacker News 網友也不甘示弱。</p><p><img src="https://oscimg.oschina.net/oscnet/up-fd369f9f8f9da6ae078c178abb2884e9306.png" alt="file" referrerpolicy="no-referrer"></p><p>「太酷辣，我在 Snowflake 裏都是用 JavaScript 寫存儲過程來生成視圖。缺點是把不同語言揉在一起，會讓代碼變得不可讀。但優點是我的飯碗穩了，因為分析師們無法同時理解 SQL 和 JavaScript，而必須依賴我去幫他們更新。」</p><h2>結束語</h2><ol><li>MySQL 在數據庫圈的話題性很強，但碰上 JavaScript，發現梗完全不夠用呀。</li><li>這次官宣的第一作者，之前也曾在阿里雲數據庫團隊工作過 3 年。</li></ol><p><img src="https://oscimg.oschina.net/oscnet/up-f77257c586e82036c86d393181de11f7bb9.png" alt="file" referrerpolicy="no-referrer"><img src="https://oscimg.oschina.net/oscnet/up-0ed6070e29a07aa8c892fbd246b8a411b82.png" alt="file" referrerpolicy="no-referrer"></p><ol start="3"><li>PostgreSQL 依然「遙遙領先」，畢竟通過 PLV8 寫 JavaScript 都不知道是多久以前的事情了。</li></ol><hr><p>💡 更多資訊，請關注 Bytebase 公號：Bytebase</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 09 Jan 2024 02:11:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/6148470/blog/10712918</guid>
            <link>https://my.oschina.net/u/6148470/blog/10712918</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[DreamTalk —— 音頻驅動型表情包生成框架]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>DreamTalk 是一種基於 diffusion 的音頻驅動型表情包生成框架，可以生成高質量的表情包視頻，涵蓋多種説話風格。DreamTalk 在處理各種輸入（包括歌曲、多語言語音、嘈雜音頻和域外肖像）時表現出強勁的性能。</p><p>具體來説，DreamTalk 由三個關鍵組件組成：去噪網絡、風格感知唇部專家和風格預測器。基於擴散的去噪網絡能夠一致地合成不同表情的高質量音頻驅動的面部運動。為了增強唇部動作的表現力和準確性，項目團隊引入了風格感知型唇部專家，可以指導唇部同步，同時注意説話風格。為了消除對錶情參考視頻或文本的需要，利用額外的基於擴散的風格預測器直接從音頻預測目標表情。通過這種方式，DreamTalk 可以利用強大的擴散模型有效地生成富有表現力的面孔，並減少對昂貴的風格參考的依賴。</p><p>實驗結果表明，DreamTalk 能夠生成具有多種説話風格的逼真説話面孔，並實現準確的嘴唇動作，超越了現有最先進的同類產品。</p><p><img alt="" height="214" src="https://static.oschina.net/uploads/space/2024/0105/161846_cUbY_4252687.gif" width="500" referrerpolicy="no-referrer"></p></div>
                                                                ]]>
            </description>
            <pubDate>Tue, 09 Jan 2024 02:10:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/p/dreamtalk</guid>
            <link>https://www.oschina.net/p/dreamtalk</link>
        </item>
        <item>
            <title>
                <![CDATA[Gitee 推薦 | 使用 TypeScript 開發的可視化庫 VISLite]]>
            </title>
            <description>
                <![CDATA[<ul><li>💘 開源不易，去 <i><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Foi-contrib%2FVISLite">Github 給個 Star</a></i>吧！</li></ul><img src="https://oi-contrib.github.io/VISLite/images/logo.png" height="300px" referrerpolicy="no-referrer"><p><a href="https://gitee.com/link?target=https%3A%2F%2Fzxl20070701.github.io%2Ftoolbox%2F%23%2Fnpm-download%3Fpackages%3Dvislite%26interval%3D7"><img src="https://img.shields.io/npm/dm/vislite.svg" alt="downloads" referrerpolicy="no-referrer"></a><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.npmjs.com%2Fpackage%2Fvislite"><img src="https://img.shields.io/npm/v/vislite.svg" alt="npm" referrerpolicy="no-referrer"></a><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.jsdelivr.com%2Fpackage%2Fnpm%2Fvislite"><img src="https://data.jsdelivr.com/v1/package/npm/vislite/badge" alt="cdn" referrerpolicy="no-referrer"></a><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Foi-contrib%2FVISLite" target="_blank"><img alt="GitHub repo stars" src="https://img.shields.io/github/stars/oi-contrib/VISLite?style=social" referrerpolicy="no-referrer"></a></p><h1><a id="user-content-vislite" class="anchor" href="https://gitee.com/oi-contrib/VISLite#vislite"></a>VISLite</h1><p><code>VISLite</code>是一個使用<code>TypeScript</code>開發的可視化庫。官網地址：<a href="https://gitee.com/link?target=https%3A%2F%2Foi-contrib.github.io%2FVISLite">https://oi-contrib.github.io/VISLite</a></p><p>主要提供了跨端的畫布和計算，開發人員只需要按照文檔的描述就可以非常簡單的完成包括 Web、uni-app、微信小程序等平台的可視化開發，除了必要的初始化差異，主要的業務代碼部分不同端完全一致。</p><h2><a id="user-content-簡介" class="anchor" href="https://gitee.com/oi-contrib/VISLite#%E7%AE%80%E4%BB%8B"></a>簡介</h2><p>這是一個輕量級的數據可視化資源庫，目標是：幫助你更快速、簡單、高效的開發出任意的可視化業務產品。</p><blockquote><p>本項目已在<a href="https://gitee.com/link?target=https%3A%2F%2Fwww.oschina.net%2Fp%2Fvislite">開源中國</a>中開源，歡迎關注和留言。</p></blockquote><h3><a id="user-content-常用的算法" class="anchor" href="https://gitee.com/oi-contrib/VISLite#%E5%B8%B8%E7%94%A8%E7%9A%84%E7%AE%97%E6%B3%95"></a>常用的算法</h3><p>我們通過提供可視化常用的算法來幫助你繪製複雜圖表。比如下面的樹圖，通過簡單的配置就可以把任意格式的數據變成任意繪製的帶座標的數據：</p><img src="https://oi-contrib.github.io/VISLite/images/docs/what_1.png" width="400" height="300" referrerpolicy="no-referrer"><blockquote><p>上述例子的運行地址：<a href="https://gitee.com/link?target=https%3A%2F%2Foi-contrib.github.io%2FVISLite%2F%23%2Fexample%2Fcanvas%2Ftree-layout-lr">從左到右樹狀圖</a>。</p></blockquote><p>除了<a href="https://gitee.com/link?target=https%3A%2F%2Foi-contrib.github.io%2FVISLite%2F%23%2Fapi%2FtreeLayout">樹佈局</a>外，我們還提供了：<a href="https://gitee.com/link?target=https%3A%2F%2Foi-contrib.github.io%2FVISLite%2F%23%2Fapi%2Fruler">刻度尺算法</a>來幫助你計算刻度應該如何確定、<a href="https://gitee.com/link?target=https%3A%2F%2Foi-contrib.github.io%2FVISLite%2F%23%2Fapi%2Feoap">等角斜方位投影</a>和<a href="https://gitee.com/link?target=https%3A%2F%2Foi-contrib.github.io%2FVISLite%2F%23%2Fapi%2Fmercator">墨卡託投影</a>來繪製地圖、<a href="https://gitee.com/link?target=https%3A%2F%2Foi-contrib.github.io%2FVISLite%2F%23%2Fapi%2Fcardinal">插值函數</a>來完成折線變光滑的曲線、<a href="https://gitee.com/link?target=https%3A%2F%2Foi-contrib.github.io%2FVISLite%2F%23%2Fapi%2Fmatrix4">變換矩陣</a>提供各種座標變換等。</p><h3><a id="user-content-畫筆加強" class="anchor" href="https://gitee.com/oi-contrib/VISLite#%E7%94%BB%E7%AC%94%E5%8A%A0%E5%BC%BA"></a>畫筆加強</h3><p>我們對畫筆進行了加強，使得其更簡單好用。比如 canvas、webgl，抽象出區域的概念，使得無論你繪製的圖形多麼的不規則，都可以很輕鬆的實現交互功能：</p><img src="https://oi-contrib.github.io/VISLite/images/docs/what_2.png" width="400" height="300" referrerpolicy="no-referrer"><blockquote><p>上述例子的運行地址：<a href="https://gitee.com/link?target=https%3A%2F%2Foi-contrib.github.io%2FVISLite%2F%23%2Fexample%2Fcanvas%2Fchina">中國地圖</a>。</p></blockquote><p>畫筆除了像上面那樣為了方便交互而補充區域的設計外，還對原來的 API 進行了一次抽象，使得 API 更友好簡單<code>（比如 WebGL，即使不會 3D 的人也可以輕鬆使用，而 SVG 的使用，你無需去記憶那些晦澀難懂的屬性）</code>，同時，我們還抹平了不同版本瀏覽器等之間的差異。</p><h3><a id="user-content-支持跨端開發" class="anchor" href="https://gitee.com/oi-contrib/VISLite#%E6%94%AF%E6%8C%81%E8%B7%A8%E7%AB%AF%E5%BC%80%E5%8F%91"></a>支持跨端開發</h3><p>除了 Web 端外，我們還針對 uni-app、微信小程序等端進行了支持，並且不同端 API 保持一致，大大提高了代碼的複用性：</p><img src="https://oi-contrib.github.io/VISLite/images/docs/what_3.png" width="600" height="300" referrerpolicy="no-referrer"><blockquote><p>上述例子的運行地址：<a href="https://gitee.com/link?target=https%3A%2F%2Foi-contrib.github.io%2FVISLite%2F%23%2Fexample%2Fsvg%2Fmoney-schedule">金額波浪球</a>。</p></blockquote><p>基於實際需要，我們目前對 <code>Canvas</code> 提供了跨端支持，除 <code>Web 端</code> 外，還支持 <code>原生微信小程序</code> 和 <code>uni-app 端</code> （編譯成 H5、微信小程序、支付寶小程序等） ，如果後續有必要，我們會對 Canvas 支持的端或 SVG、WebGL 等畫筆進行更多端擴展。</p><h3><a id="user-content-可視化大屏" class="anchor" href="https://gitee.com/oi-contrib/VISLite#%E5%8F%AF%E8%A7%86%E5%8C%96%E5%A4%A7%E5%B1%8F"></a>可視化大屏</h3><p>當然，按照業務和 UI 設計，快速開發一個大屏也是相對容易的：</p><img src="https://oi-contrib.github.io/VISLite/images/docs/bigview.jpeg" width="500" referrerpolicy="no-referrer"><blockquote><p>上述例子的運行地址：<a href="https://gitee.com/link?target=https%3A%2F%2Foi-contrib.github.io%2FVISLite%2F%23%2Fbigview%3Fpage%3Ddataboard">數據看板大屏</a>。</p></blockquote><h2><a id="user-content-特點" class="anchor" href="https://gitee.com/oi-contrib/VISLite#%E7%89%B9%E7%82%B9"></a>特點</h2><ul><li>靈活的引入方式：包括 npm 安裝後按照<code>ES Module</code>或<code>CommonJS</code>規範引入或直接使用 script 標籤的<code>CDN</code>方式。</li><li>按需引入或全局引入：支持源碼 TS 引入、按需 JS 引入或者全量引入等多種方式。</li><li>簡單與複雜共存：一方面我們提供了可視化需要的基礎功能，你可以按照自己的需要組合使用；另一方面，為了加速開發，我們針對常見的可視化業務場景進行了封裝，可以幫助你快速完成，你可以根據實際情況進行選擇。</li><li>向下兼容：我們向你保證，始終向下兼容<code>（alpha 和 beta 版本為測試版本，不包括）</code>，因此，無論何時，最新版本總是最好的選擇。</li></ul><blockquote><p>版本説明：alpha 為開發階段、beta 為發佈前測試、無後綴的為正式版本。</p></blockquote><h2><a id="user-content-需求牆" class="anchor" href="https://gitee.com/oi-contrib/VISLite#%E9%9C%80%E6%B1%82%E5%A2%99"></a>需求牆</h2><p>我們的目標是不斷完善豐富可視化功能，非常希望獲得你寶貴的建議和批評，無論任何想法，都可以給我們<a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Foi-contrib%2FVISLite%2Fissues">留言</a>告訴我們。</p><p>你所提的任何建議我們都會在最長一週內進行反饋説明。</p><h2><a id="user-content-更新日誌" class="anchor" href="https://gitee.com/oi-contrib/VISLite#%E6%9B%B4%E6%96%B0%E6%97%A5%E5%BF%97"></a>更新日誌</h2><p>詳見<a href="https://gitee.com/oi-contrib/VISLite/blob/master/CHANGELOG">正式版更新日誌</a>，我們會在每次發佈完正式版本後更新其內容。</p><h2><a id="user-content-下一步" class="anchor" href="https://gitee.com/oi-contrib/VISLite#%E4%B8%8B%E4%B8%80%E6%AD%A5"></a>下一步</h2><p>我們會在這裏列出接下來的工作重心：</p><ul><li>Canvas、SVG 和 WebGL 畫筆功能豐富</li><li>為加速開發，提供常用座標系和佈局</li><li>文檔優化（提高可讀性、豐富用例、補充教程）</li></ul><p>給我們<a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Foi-contrib%2FVISLite%2Fissues">留言</a>告訴我們你希望快速擴展的功能，我們會優先你的建議考慮哦～</p><h2><a id="user-content-參與貢獻" class="anchor" href="https://gitee.com/oi-contrib/VISLite#%E5%8F%82%E4%B8%8E%E8%B4%A1%E7%8C%AE"></a>參與貢獻</h2><p>你可以選擇下列一項或多項進行參與：</p><ul><li>代碼維護：由於新功能或一些 BUG 的出現，對代碼進行維護和升級。</li><li>文檔編輯：主要是接口文檔和教程需要編輯，這很重要。</li><li>用例開發和測試：在項目的 test 文件夾下有一些測試，而在 docs 文檔中存在一些例子需要補充。</li><li>參與討論：主要是討論未來如何發展，改造的方向等。</li></ul><p>如果有意向加入我們，你可以通過提 <a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Foi-contrib%2FVISLite%2Fissues">issue</a> 和我們取到聯繫，請簡單説明一下情況，我們會盡快回復。</p><p>你可以查看<a href="https://gitee.com/oi-contrib/VISLite/blob/master/.github/CONTRIBUTING.md">VISLite 貢獻指南</a>文件瞭解更多細節，查看<a href="https://gitee.com/oi-contrib/VISLite/blob/master/AUTHORS.txt">AUTHORS.txt</a>瞭解所有的貢獻者。</p><h2><a id="user-content-版權" class="anchor" href="https://gitee.com/oi-contrib/VISLite#%E7%89%88%E6%9D%83"></a>版權</h2><p>MIT License</p><p>Copyright (c) <a href="https://gitee.com/link?target=https%3A%2F%2Fzxl20070701.github.io%2Fnotebook%2Fhome.html">zxl20070701</a> 走一步，再走一步</p>]]>
            </description>
            <pubDate>Tue, 09 Jan 2024 02:05:00 GMT</pubDate>
            <guid isPermaLink="false">https://gitee.com/oi-contrib/VISLite</guid>
            <link>https://gitee.com/oi-contrib/VISLite</link>
        </item>
        <item>
            <title>
                <![CDATA[每日一博 | Spring 七種事務傳播性介紹]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="rich_media_content js_underline_content
                       autoTypeSetting24psection
            " id="js_content"><section style="font-size: 15px;line-height: 1.6;"><section style="margin: 10px 0% 8px;text-align: left;justify-content: flex-start;display: flex;flex-flow: row;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;vertical-align: top;border-left: 3px solid rgb(219, 219, 219);border-bottom-left-radius: 0px;padding-left: 8px;align-self: flex-start;flex: 0 0 auto;"><section style="color: rgba(0, 0, 0, 0.5);font-size: 14px;text-align: justify;" powered-by="xiumi.us"><p style="text-wrap: wrap;">作者：vivo 互聯網服務器團隊 - Zhou Shaobin</p></section></section></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section style="margin-top: 10px;margin-bottom: 10px;text-align: center;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;border-width: 1px;border-style: solid;border-color: rgb(160, 160, 160);padding: 10px;"><section style="text-align: left;" powered-by="xiumi.us"><section style="font-size: 14px;text-align: justify;line-height: 1.8;padding-right: 5px;padding-left: 5px;color: rgb(160, 160, 160);"><p style="text-wrap: wrap;">本文主要介紹了 Spring 事務傳播性的相關知識。<br><br></p><p style="text-wrap: wrap;">Spring 中定義了 7 種事務傳播性：</p><p style="text-wrap: wrap;"><br></p><ul class="list-paddingleft-1" style="list-style-type: disc;"><li><p style="text-wrap: wrap;"><span style="color: rgb(160, 160, 160);font-size: 14px;letter-spacing: 0.578px;text-wrap: wrap;">PROPAGATION_REQUIRED&nbsp;</span></p></li><li><p style="text-wrap: wrap;"><span style="letter-spacing: 0.034em;">PROPAGATION_SUPPORTS</span></p></li><li><p style="text-wrap: wrap;"><span style="letter-spacing: 0.034em;">PROPAGATION_MANDATORY</span></p></li><li><p style="text-wrap: wrap;"><span style="letter-spacing: 0.034em;">PROPAGATION_REQUIRES_NEW</span></p></li><li><p style="text-wrap: wrap;"><span style="letter-spacing: 0.034em;">PROPAGATION_NOT_SUPPORTED</span></p></li><li><p style="text-wrap: wrap;"><span style="letter-spacing: 0.034em;">PROPAGATION_NEVER</span></p></li><li><p style="text-wrap: wrap;"><span style="letter-spacing: 0.034em;">PROPAGATION_NESTED</span></p></li></ul><p style="text-wrap: wrap;"><br></p><p style="text-wrap: wrap;">在 Spring 環境中，含有事務的方法嵌套調用，事務是如何傳遞的規則，以及每種規則是如何開展工作的。文章還提到每種事務傳播性是如何使用的，方便讀者依據實際的場景，使用不同的事務規則。</p></section></section></section></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section style="margin-top: 10px;margin-bottom: 10px;text-align: center;" powered-by="xiumi.us"><section style="padding: 3px;display: inline-block;border-bottom: 1px solid rgb(65, 94, 255);font-size: 17px;color: rgb(65, 94, 255);"><p>一、什麼是 Spring 事務的傳播性</p></section></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us">Spring 事務傳播性是指， 在 Spring 的環境中，當多個含有事務的方法嵌套調用時，每個事務方法都處於自己事務的上下文中，其提交或者回滾行為應該如何處理。</p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us">通俗講，就是當一個事務方法調用另外一個事務方法時，事務如何跨上下文傳播。</p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" data-imgfileid="100014182" data-ratio="0.4357142857142857" data-s="300,640" src="https://oscimg.oschina.net/oscnet/f25cb074-716b-471d-b42b-34d9ef981030.jpg" data-type="jpeg" data-w="700" style="" referrerpolicy="no-referrer"></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section powered-by="xiumi.us"><p style="text-wrap: wrap;">1）當事務方法 A 調用事務方法 B 時，事務方法 B 是合併到事務方法 A 中，還是開啓新事務？</p><p style="text-wrap: wrap;">2）當事務方法 B 拋出異常時&nbsp; ，在合併事務或者開啓新的事務的場景中，事務的回滾是如何處理的 ？</p><p style="text-wrap: wrap;"><br></p><p style="text-wrap: wrap;">以上事務的處理規則，都取決於事務傳播級別的設置。</p></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section style="margin-top: 10px;margin-bottom: 10px;text-align: center;" powered-by="xiumi.us"><section style="padding: 3px;display: inline-block;border-bottom: 1px solid rgb(65, 94, 255);font-size: 17px;color: rgb(65, 94, 255);"><p>二、事務的傳播性都有哪些行為</p></section></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" data-imgfileid="100014183" data-ratio="0.6296829971181557" data-s="300,640" src="https://oscimg.oschina.net/oscnet/3c651ebf-1386-492f-8623-e4771fafefc0.jpg" data-type="jpeg" data-w="694" style="" referrerpolicy="no-referrer"></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us">事務的傳播行為，主要分為三種類型，分別是：<strong>支持當前事務</strong>、<strong>不支持當前事務</strong>、<strong>嵌套事務</strong>。</p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><span style="font-size: 16px;color: rgb(65, 95, 255);">2.1 支持當前事務</span></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section powered-by="xiumi.us"><p style="text-wrap: wrap;"><strong>REQUIRED</strong>：默認的事務傳播級別，表示如果當前方法已在事務內，該方法就在當前事務中執行，否則，開啓一個新的事務並在其上下文中執行。</p><p style="text-wrap: wrap;"><br></p><p style="text-wrap: wrap;"><strong>SUPPORTED</strong>：當前方法在事務內，則在其上下文中執行該方法，否則，開啓一個新的事務。</p><p style="text-wrap: wrap;"><br></p><p style="text-wrap: wrap;"><strong>MANDATORY</strong>：必須在事務中執行，否則，將拋出異常。</p></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><span style="font-size: 16px;color: rgb(65, 95, 255);">2.2 不支持當前事務</span></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section powered-by="xiumi.us"><p style="text-wrap: wrap;"><strong>REQUIRES_NEW</strong>：無論當前是否有事務上下文，都會開啓一個事務&nbsp; 。如果已經有一個事務在執行 ，則正在執行的事務將被掛起 ，新開啓的事務會被執行。<br></p><p style="text-wrap: wrap;"><br></p><p style="text-wrap: wrap;">事務之間相互獨立，互不幹擾。</p><p style="text-wrap: wrap;"><br></p><p style="text-wrap: wrap;"><strong>NOT_SUPPORTED</strong>：不支持事務，如果當前存在事務上下文，則掛起當前事務，然後以非事務的方式執行。</p><p style="text-wrap: wrap;"><br></p><p style="text-wrap: wrap;"><strong>NEVER</strong>：不能在事務中執行，如果當前存在事務上下文，則拋出異常。</p></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><span style="font-size: 16px;color: rgb(65, 95, 255);">2.3&nbsp;嵌套事務</span></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><strong>NESTED</strong>：嵌套事務，如果當前已存在一個事務的上下文中，則在嵌套事務中執行，如果拋異常，則回滾嵌套事務，而不影響其他事務的操作。</p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section style="margin-top: 10px;margin-bottom: 10px;text-align: center;" powered-by="xiumi.us"><section style="padding: 3px;display: inline-block;border-bottom: 1px solid rgb(65, 94, 255);font-size: 17px;color: rgb(65, 94, 255);"><p>三、每種事務的傳播性如何工作</p></section></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><span style="font-size: 16px;color: rgb(65, 95, 255);">3.1 REQUIRED&nbsp;&nbsp;</span></p><section style="margin-top: 10px;margin-bottom: 10px;text-align: center;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;border-width: 1px;border-style: solid;border-color: rgb(160, 160, 160);padding: 10px;"><section style="text-align: justify;line-height: 1.8;" powered-by="xiumi.us"><p style="text-wrap: wrap;">默認的事務傳播行為，保證多個嵌套的事務方法在同一個事務內執行，並且同時提交，或者出現異常時，同時回滾。</p><p style="text-wrap: wrap;"><br></p><p style="text-wrap: wrap;"><span style="font-size: 15px;letter-spacing: 0.578px;text-wrap: wrap;"></span><span style="font-size: 15px;letter-spacing: 0.578px;text-wrap: wrap;">這個機制可以滿足大多數業務場景。</span></p></section></section></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" data-imgfileid="100014184" data-ratio="0.577490774907749" data-s="300,640" src="https://oscimg.oschina.net/oscnet/2aff859c-0701-434b-8a2b-41e9905f3c02.jpg" data-type="jpeg" data-w="542" style="" referrerpolicy="no-referrer"></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section style="margin: 10px 0% 8px;text-align: left;justify-content: flex-start;display: flex;flex-flow: row;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;vertical-align: top;border-left: 3px solid rgb(219, 219, 219);border-bottom-left-radius: 0px;padding-left: 8px;align-self: flex-start;flex: 0 0 auto;"><section style="color: rgba(0, 0, 0, 0.5);text-align: justify;" powered-by="xiumi.us"><p style="text-wrap: wrap;">&nbsp;例子 ：</p></section></section></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" data-imgfileid="100014185" data-ratio="0.4429447852760736" data-s="300,640" src="https://oscimg.oschina.net/oscnet/45fcfef2-2fd6-4ce0-a377-3336137657e9.jpg" data-type="jpeg" data-w="815" style="" referrerpolicy="no-referrer"></p><section powered-by="xiumi.us"><p style="text-wrap: wrap;"><br></p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" data-imgfileid="100014186" data-ratio="0.3899755501222494" data-s="300,640" src="https://oscimg.oschina.net/oscnet/b792582b-cfe0-4df3-903e-9343f2dd235b.jpg" data-type="jpeg" data-w="818" style="" referrerpolicy="no-referrer"></p><p style="text-wrap: wrap;">1）類 TestAService 的方法通過聲明式事務的方式，加上了事務註解@Transactional ，並設置事務的傳播性為 REQUIRED。</p><p style="text-wrap: wrap;"><br></p><p style="text-wrap: wrap;">2）調用者調用 TestAService 的 A 方法時，如果調用者沒有開啓事務，那麼 A 方法會開啓一個事務。</p><p style="text-wrap: wrap;"><br></p><p style="text-wrap: wrap;">A 方法的具體執行過程如下 ：</p><p style="text-wrap: wrap;">a. 執行 insert，但沒有提交；</p><p style="text-wrap: wrap;">b.調用 TestBServcie 的 B 方法，由於 B 方法也聲明瞭事務，並且傳播性是 REQUIRED，所以方法 B 的事務，合併到方法 A 開啓的事務中。</p><p style="text-wrap: wrap;">c.方法 B 執行 insert 操作，此時也沒有提交。<br><br></p><p style="text-wrap: wrap;">3）由於這兩個方法的操作都在同一個事務中執行，當這兩個方法所有操作執行成功之後，提交事務。</p></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us">嵌套調用鏈路：</p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" data-imgfileid="100014187" data-ratio="0.13892078071182548" data-s="300,640" src="https://oscimg.oschina.net/oscnet/ccbb2e64-6419-4c89-9109-df8c1be5957b.jpg" data-type="jpeg" data-w="871" style="" referrerpolicy="no-referrer"></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section style="margin: 10px 0% 8px;text-align: left;justify-content: flex-start;display: flex;flex-flow: row;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;vertical-align: top;border-left: 3px solid rgb(70, 97, 246);border-bottom-left-radius: 0px;padding-left: 8px;align-self: flex-start;flex: 0 0 auto;"><section style="color: rgb(62, 62, 62);text-align: justify;" powered-by="xiumi.us"><p style="text-wrap: wrap;">當方法 B 執行時拋出了 Exception 異常後，事務是如何處理的 ？</p></section></section></section><p>1）方法 B 聲明瞭事務，insert 操作會回滾</p><p>2）由於方法 A 和方法 B 同屬一個事務，方法 A 也會執行回滾，由此説明該規則保證了事務的原子性。</p><p><br></p><p>嵌套調用，異常後的鏈路：</p><p><br></p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" data-imgfileid="100014188" data-ratio="0.15219842164599776" data-s="300,640" src="https://oscimg.oschina.net/oscnet/077cdda3-e7bc-45b6-8ea9-807b3765adb5.jpg" data-type="jpeg" data-w="887" style="" referrerpolicy="no-referrer"></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section powered-by="xiumi.us" style="margin-top: 10px;margin-bottom: 8px;font-size: 15px;letter-spacing: 0.578px;text-wrap: wrap;text-align: left;justify-content: flex-start;display: flex;flex-flow: row;"><section style="padding-left: 8px;display: inline-block;width: 578px;vertical-align: top;border-left: 3px solid rgb(70, 97, 246);border-bottom-left-radius: 0px;align-self: flex-start;flex: 0 0 auto;"><section powered-by="xiumi.us" style="color: rgb(62, 62, 62);text-align: justify;"><p>如果，方法 B 拋出異常後，方法 A 使用 try-catch 處理了方法 B 的異常（如下代碼），並沒有向外拋出，此時事務又如何處理的 ？</p></section></section></section><p powered-by="xiumi.us" style="margin-bottom: 0px;font-size: 15px;letter-spacing: 0.578px;text-wrap: wrap;"><br></p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" data-imgfileid="100014189" data-ratio="0.33291457286432163" data-s="300,640" src="https://oscimg.oschina.net/oscnet/9fc563a6-9984-4d9d-af11-bcfd49b19b70.jpg" data-type="jpeg" data-w="796" style="" referrerpolicy="no-referrer"></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section powered-by="xiumi.us"><p style="text-wrap: wrap;">方法 A 也會回滾。</p><p style="text-wrap: wrap;"><br></p><p style="text-wrap: wrap;">從事務的特性我們可知，事務具有原子性。方法 A 和方法 B 同屬一個事務，當方法 B 拋出異常，觸發回滾操作後，整個事務的操作都會回滾。</p><p style="text-wrap: wrap;"><br></p><p style="text-wrap: wrap;">因此，Spring 在處理事務過程中，當事務的傳播性設置為 REQUIRED，在整個事務的調用鏈上，任何一個環節拋出的異常都會導致全局回滾。</p></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><span style="font-size: 16px;color: rgb(65, 95, 255);">3.2 REQUIRES_ NEW</span></p><section style="margin-top: 10px;margin-bottom: 10px;text-align: center;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;border-width: 1px;border-style: solid;border-color: rgb(160, 160, 160);padding: 10px;"><section style="text-align: justify;line-height: 1.8;" powered-by="xiumi.us"><p style="text-wrap: wrap;">每次都開啓一，個新的事務。</p></section></section></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" data-imgfileid="100014190" data-ratio="0.4325153374233129" data-s="300,640" src="https://oscimg.oschina.net/oscnet/d0097908-7fd0-42c9-b288-0b49b60534b0.jpg" data-type="jpeg" data-w="652" style="" referrerpolicy="no-referrer"></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section style="margin: 10px 0% 8px;text-align: left;justify-content: flex-start;display: flex;flex-flow: row;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;vertical-align: top;border-left: 3px solid rgb(219, 219, 219);border-bottom-left-radius: 0px;padding-left: 8px;align-self: flex-start;flex: 0 0 auto;"><section style="color: rgba(0, 0, 0, 0.5);text-align: justify;" powered-by="xiumi.us"><p style="text-wrap: wrap;">&nbsp;例子：</p></section></section></section><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" data-imgfileid="100014191" data-ratio="0.20330368487928843" data-s="300,640" src="https://oscimg.oschina.net/oscnet/3f4398b9-1173-4e3b-a0d2-bbca386e67b9.jpg" data-type="jpeg" data-w="787" style="" referrerpolicy="no-referrer"></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us">上面例子中，方法 B 的傳播性設置為 REQUIRES_NEW，方法 A 仍然是 REQUIRED，當 A 調用 B 時，具體調用鏈路如下：</p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" data-imgfileid="100014193" data-ratio="0.2803203661327231" data-s="300,640" src="https://oscimg.oschina.net/oscnet/dd34f32f-ad1d-4cdc-921d-e5fbb11b2bfe.jpg" data-type="jpeg" data-w="874" style="" referrerpolicy="no-referrer"></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us">具體執行過程：</p><section style="margin-top: 10px;margin-bottom: 10px;text-align: right;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;border-width: 1px;border-style: solid;border-color: transparent;padding: 10px;background-color: rgb(239, 239, 239);height: auto;"><section style="text-align: justify;" powered-by="xiumi.us"><ul class="list-paddingleft-1" style="list-style-type: disc;"><li><p style="margin-bottom: 10px;text-wrap: wrap;"><span style="font-size: 15px;letter-spacing: 0.578px;text-wrap: wrap;background-color: rgb(239, 239, 239);">方法 A 被執行前，如果調用者沒有開啓事務，方法 A 開啓一個事務 1，然後執行 insert ，此時沒有提交；</span></p></li><li><p style="margin-bottom: 10px;text-wrap: wrap;"><span style="font-size: 15px;letter-spacing: 0.578px;text-wrap: wrap;background-color: rgb(239, 239, 239);">方法 B 的事務傳播性設置為 REQUIRES_NEW，當被方法 A 調用時，此時方法 A 的事務 1 會被掛起，方法 B 開啓自己的事務 2，然後執行 insert，此時並沒有提交；</span></p></li><li><p style="margin-bottom: 10px;text-wrap: wrap;"><span style="font-size: 15px;letter-spacing: 0.578px;text-wrap: wrap;background-color: rgb(239, 239, 239);">當方法 B 執行完畢後，提交事務 2；</span></p></li><li><p style="margin-bottom: 10px;text-wrap: wrap;"><span style="font-size: 15px;letter-spacing: 0.578px;text-wrap: wrap;background-color: rgb(239, 239, 239);">恢復事務 1，最終提交。</span><span style="letter-spacing: 0.034em;"></span></p></li></ul></section></section></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section style="margin: 10px 0% 8px;text-align: left;justify-content: flex-start;display: flex;flex-flow: row;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;vertical-align: top;border-left: 3px solid rgb(70, 97, 246);border-bottom-left-radius: 0px;padding-left: 8px;align-self: flex-start;flex: 0 0 auto;"><section style="color: rgb(62, 62, 62);text-align: justify;" powered-by="xiumi.us"><p style="text-wrap: wrap;">當，方法 B 執行時拋出了異常，會發生什麼？</p></section></section></section><p style="text-wrap: wrap;" powered-by="xiumi.us">方法 B 的 insert 操作會被回滾掉,方法 A 不受影響。但這裏有個前提，方法 A 需要 try-catch 方法 B 的異常，使其異常不會往上傳遞，從而導致方法 A 接收到異常，導致回滾。</p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" data-imgfileid="100014194" data-ratio="0.2877939529675252" data-s="300,640" src="https://oscimg.oschina.net/oscnet/a9c7c98f-053d-4c12-a5c8-777f32b699e6.jpg" data-type="jpeg" data-w="893" style="" referrerpolicy="no-referrer"></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><span style="font-size: 16px;color: rgb(65, 95, 255);">3.3&nbsp; SUPPORTED</span></p><section style="margin-top: 10px;margin-bottom: 10px;text-align: center;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;border-width: 1px;border-style: solid;border-color: rgb(160, 160, 160);padding: 10px;"><section style="text-align: justify;line-height: 1.8;" powered-by="xiumi.us"><p style="text-wrap: wrap;">當外層方法 A 存在事務，方法 B 加入到當前事務中，以事務的方式執行。</p></section></section></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" data-imgfileid="100014195" data-ratio="0.559748427672956" data-s="300,640" src="https://oscimg.oschina.net/oscnet/ce1639fd-a2c7-407f-8c2e-0c7b4af8a7ff.jpg" data-type="jpeg" data-w="636" style="" referrerpolicy="no-referrer"></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section style="margin-top: 10px;margin-bottom: 10px;text-align: center;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;border-width: 1px;border-style: solid;border-color: rgb(160, 160, 160);padding: 10px;"><section style="text-align: justify;line-height: 1.8;" powered-by="xiumi.us"><p style="text-wrap: wrap;">當外層方法 A 不存在事務，方法 B 不會創建新的事務，以非事務的方式執行。</p></section></section></section><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" data-imgfileid="100014196" data-ratio="0.6865671641791045" data-s="300,640" src="https://oscimg.oschina.net/oscnet/e348a11f-faad-48b0-a6e1-70aeedc01de0.jpg" data-type="jpeg" data-w="536" style="" referrerpolicy="no-referrer"></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section style="margin: 10px 0% 8px;text-align: left;justify-content: flex-start;display: flex;flex-flow: row;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;vertical-align: top;border-left: 3px solid rgb(219, 219, 219);border-bottom-left-radius: 0px;padding-left: 8px;align-self: flex-start;flex: 0 0 auto;"><section style="color: rgba(0, 0, 0, 0.5);text-align: justify;" powered-by="xiumi.us"><p style="text-wrap: wrap;">&nbsp;例子 1：</p></section></section></section><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" data-imgfileid="100014197" data-ratio="0.23020527859237536" data-s="300,640" src="https://oscimg.oschina.net/oscnet/b3fc986f-f0f3-4126-bcf1-1f0a2ce71fbd.jpg" data-type="jpeg" data-w="682" style="" referrerpolicy="no-referrer"></p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" data-imgfileid="100014198" data-ratio="0.1793103448275862" data-s="300,640" src="https://oscimg.oschina.net/oscnet/28c10e68-1769-4b67-86cd-90901a489191.jpg" data-type="jpeg" data-w="725" style="" referrerpolicy="no-referrer"></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us">以上例子，方法 A 沒有加事務註解，方法 B 的加了事務註解，並且傳播為 SUPPORTS。</p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us">具體執行過程：</p><section style="margin-top: 10px;margin-bottom: 10px;text-align: right;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;border-width: 1px;border-style: solid;border-color: transparent;padding: 10px;background-color: rgb(239, 239, 239);height: auto;"><section style="text-align: justify;" powered-by="xiumi.us"><ul class="list-paddingleft-1" style="list-style-type: disc;"><li><p style="margin-bottom: 10px;text-wrap: wrap;"><span style="font-size: 15px;letter-spacing: 0.578px;text-wrap: wrap;background-color: rgb(239, 239, 239);">方法 A 以非事務的方式執行 insert 操作。</span></p></li><li><p style="margin-bottom: 10px;text-wrap: wrap;"><span style="font-size: 15px;letter-spacing: 0.578px;text-wrap: wrap;background-color: rgb(239, 239, 239);">方法 B 被調用，由於其外層事務 A 沒有開啓事務，方法 B 也是以非事務方法執行 insert 操作。</span></p></li></ul></section></section></section><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" data-imgfileid="100014199" data-ratio="0.21016949152542372" data-s="300,640" src="https://oscimg.oschina.net/oscnet/96736113-0a60-4cc9-a14f-49b7a4b68331.jpg" data-type="jpeg" data-w="590" style="" referrerpolicy="no-referrer"></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section style="margin: 10px 0% 8px;text-align: left;justify-content: flex-start;display: flex;flex-flow: row;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;vertical-align: top;border-left: 3px solid rgb(219, 219, 219);border-bottom-left-radius: 0px;padding-left: 8px;align-self: flex-start;flex: 0 0 auto;"><section style="color: rgba(0, 0, 0, 0.5);text-align: justify;" powered-by="xiumi.us"><p style="text-wrap: wrap;">例子 2：</p></section></section></section><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" data-imgfileid="100014200" data-ratio="0.12777777777777777" data-s="300,640" src="https://oscimg.oschina.net/oscnet/a87c1624-cb04-4f02-b57c-99ae40a3de71.jpg" data-type="jpeg" data-w="1080" style="" referrerpolicy="no-referrer"></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us">以上例子，方法 A 和 B 都加上了事務註解，其中方法 A 的傳播性為 REQUIRED，方法 B 的傳播性為 SUPPORTS。</p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us">具體執行過程：</p><section style="margin-top: 10px;margin-bottom: 10px;text-align: right;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;border-width: 1px;border-style: solid;border-color: transparent;padding: 10px;background-color: rgb(239, 239, 239);height: auto;"><section style="text-align: justify;" powered-by="xiumi.us"><ul class="list-paddingleft-1" style="list-style-type: disc;"><li><p style="margin-bottom: 10px;text-wrap: wrap;"><span style="font-size: 15px;letter-spacing: 0.578px;text-wrap: wrap;background-color: rgb(239, 239, 239);">如果方法 A 的調用方沒有開啓事務，則方法 A 開啓事務，並執行 insert 操作，但沒有提交；</span></p></li><li><p style="margin-bottom: 10px;text-wrap: wrap;"><span style="letter-spacing: 0.034em;">方法 B 被調用，由於其外層方法 A 開啓了事務，因此方法 B 加入到方法 A 開啓的事務中，並執行 insert,但沒有提交；</span></p></li><li><p style="margin-bottom: 10px;text-wrap: wrap;"><span style="letter-spacing: 0.034em;">當事務中的所有操作執行成功後，事務提交。</span></p></li></ul></section></section></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" data-imgfileid="100014201" data-ratio="0.13157894736842105" data-s="300,640" src="https://oscimg.oschina.net/oscnet/bca29bf0-2c58-4174-9477-3903aafa4180.jpg" data-type="jpeg" data-w="798" style="" referrerpolicy="no-referrer"></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><span style="font-size: 16px;color: rgb(65, 95, 255);">3.4&nbsp; NOT_SUPPORTED</span></p><section style="margin-top: 10px;margin-bottom: 10px;text-align: center;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;border-width: 1px;border-style: solid;border-color: rgb(160, 160, 160);padding: 10px;"><section style="text-align: justify;line-height: 1.8;" powered-by="xiumi.us"><p style="text-wrap: wrap;">不支持事務。</p></section></section></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us">如果外層方法存在事務，則掛起外層事務，以非事務方式執行，執行完畢後，恢復外層事務。</p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" data-imgfileid="100014202" data-ratio="0.4672131147540984" data-s="300,640" src="https://oscimg.oschina.net/oscnet/6355266c-c5d2-46c2-9add-c5a7a34131d8.jpg" data-type="jpeg" data-w="610" style="" referrerpolicy="no-referrer"></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section style="margin: 10px 0% 8px;text-align: left;justify-content: flex-start;display: flex;flex-flow: row;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;vertical-align: top;border-left: 3px solid rgb(219, 219, 219);border-bottom-left-radius: 0px;padding-left: 8px;align-self: flex-start;flex: 0 0 auto;"><section style="color: rgba(0, 0, 0, 0.5);text-align: justify;" powered-by="xiumi.us"><p style="text-wrap: wrap;">例子：</p></section></section></section><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" data-imgfileid="100014203" data-ratio="0.12407407407407407" data-s="300,640" src="https://oscimg.oschina.net/oscnet/458980db-9a97-4419-975a-121889eafd90.jpg" data-type="jpeg" data-w="1080" style="" referrerpolicy="no-referrer"></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us">以上例子：方法 A 和 B 都加上了事務註解，方法 A 的傳播性為 REQUIRED,方法 B 為 NOT_SUPPORTED。</p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us">具體執行過程：</p><section style="margin-top: 10px;margin-bottom: 10px;text-align: right;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;border-width: 1px;border-style: solid;border-color: transparent;padding: 10px;background-color: rgb(239, 239, 239);height: auto;"><section style="text-align: justify;" powered-by="xiumi.us"><ul class="list-paddingleft-1" style="list-style-type: disc;"><li><p style="margin-bottom: 10px;text-wrap: wrap;"><span style="font-size: 15px;letter-spacing: 0.578px;text-wrap: wrap;background-color: rgb(239, 239, 239);">如 A 的調用方沒有開啓事務，方法 A 開啓事務，並執行 insert，但沒有提交。</span></p></li><li><p style="margin-bottom: 10px;text-wrap: wrap;"><span style="letter-spacing: 0.034em;">方法 A 調用方法 B 時，方法 B 的傳播性為 NOT_SUPPORTED,不支持事務，然後掛起外層方法 A 的事務，方法 B 以非事務的方式執行 insert。</span></p></li><li><p style="margin-bottom: 10px;text-wrap: wrap;"><span style="letter-spacing: 0.034em;">方法 B 執行完畢後，恢復方法 A 的事務，最終提交事務。</span></p></li></ul></section></section></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us">調用鏈路過程：</p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" data-imgfileid="100014204" data-ratio="0.1400208986415883" data-s="300,640" src="https://oscimg.oschina.net/oscnet/b5ec0c68-b769-433a-ab3c-7fe1941627af.jpg" data-type="jpeg" data-w="957" style="" referrerpolicy="no-referrer"></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><span style="font-size: 16px;color: rgb(65, 95, 255);">3.5 NEVER</span></p><section style="margin-top: 10px;margin-bottom: 10px;text-align: center;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;border-width: 1px;border-style: solid;border-color: rgb(160, 160, 160);padding: 10px;"><section style="text-align: justify;line-height: 1.8;" powered-by="xiumi.us"><p style="text-wrap: wrap;">不支持事務</p></section></section></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us">當外層方法 A 開啓了事務，方法 B 拋出異常</p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" data-imgfileid="100014205" data-ratio="0.578" data-s="300,640" src="https://oscimg.oschina.net/oscnet/8567887f-aa12-473c-b4cb-b2e6f6c00360.jpg" data-type="jpeg" data-w="500" style="" referrerpolicy="no-referrer"></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section style="margin: 10px 0% 8px;text-align: left;justify-content: flex-start;display: flex;flex-flow: row;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;vertical-align: top;border-left: 3px solid rgb(219, 219, 219);border-bottom-left-radius: 0px;padding-left: 8px;align-self: flex-start;flex: 0 0 auto;"><section style="color: rgba(0, 0, 0, 0.5);text-align: justify;" powered-by="xiumi.us"><p style="text-wrap: wrap;">例子：</p></section></section></section><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" data-imgfileid="100014206" data-ratio="0.12777777777777777" data-s="300,640" src="https://oscimg.oschina.net/oscnet/65811a67-78a5-49c0-b95f-a277d8537a52.jpg" data-type="jpeg" data-w="1080" style="" referrerpolicy="no-referrer"></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us">以上代碼，兩個方法都打上了事務註解，方法 A 的傳播性是 REQUIRED,方法 B 的傳播性是 NEVER。</p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us">具體執行過程：</p><section style="margin-top: 10px;margin-bottom: 10px;text-align: right;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;border-width: 1px;border-style: solid;border-color: transparent;padding: 10px;background-color: rgb(239, 239, 239);height: auto;"><section style="text-align: justify;" powered-by="xiumi.us"><ul class="list-paddingleft-1" style="list-style-type: disc;"><li><p style="margin-bottom: 10px;text-wrap: wrap;"><span style="font-size: 15px;letter-spacing: 0.578px;text-wrap: wrap;background-color: rgb(239, 239, 239);">方法 A 開啓事務，執行 insert,沒有提交。</span></p></li><li><p style="margin-bottom: 10px;text-wrap: wrap;"><span style="letter-spacing: 0.034em;">含有事務的方法 A 調用方法 B，方法 B 的傳播性是 NEVER,表示不支持事務，因此方法 B 拋出異常。</span></p></li><li><p style="margin-bottom: 10px;text-wrap: wrap;"><span style="letter-spacing: 0.034em;">方法 A 的事務執行回滾。</span></p></li></ul></section></section></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" data-imgfileid="100014207" data-ratio="0.26361867704280156" data-s="300,640" src="https://oscimg.oschina.net/oscnet/b642401a-cde6-4635-b66e-370d0cb534d2.jpg" data-type="jpeg" data-w="1028" style="" referrerpolicy="no-referrer"></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><span style="font-size: 16px;color: rgb(65, 95, 255);">3.6 MANDATORY</span></p><section style="margin-top: 10px;margin-bottom: 10px;text-align: center;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;border-width: 1px;border-style: solid;border-color: rgb(160, 160, 160);padding: 10px;"><section style="text-align: justify;line-height: 1.8;" powered-by="xiumi.us"><p style="text-wrap: wrap;">必須在事務中執行。</p></section></section></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us">如果外層方法 A 沒有開啓事務，方法 B 拋出異常。</p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" data-imgfileid="100014208" data-ratio="0.5640535372848948" data-s="300,640" src="https://oscimg.oschina.net/oscnet/e520ab89-d9b6-4d44-b30d-bf83e5ca9a5e.jpg" data-type="jpeg" data-w="523" style="" referrerpolicy="no-referrer"></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us">如果外層方法 A 開啓了事務，方法 B 加入事務，方法 A&amp;B 在同一事務中執行。</p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" data-imgfileid="100014209" data-ratio="0.6473029045643154" data-s="300,640" src="https://oscimg.oschina.net/oscnet/cec503c3-7c18-4447-8538-cbaa55395d02.jpg" data-type="jpeg" data-w="482" style="" referrerpolicy="no-referrer"></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section style="margin: 10px 0% 8px;text-align: left;justify-content: flex-start;display: flex;flex-flow: row;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;vertical-align: top;border-left: 3px solid rgb(219, 219, 219);border-bottom-left-radius: 0px;padding-left: 8px;align-self: flex-start;flex: 0 0 auto;"><section style="color: rgba(0, 0, 0, 0.5);text-align: justify;" powered-by="xiumi.us"><p style="text-wrap: wrap;">例子：</p></section></section></section><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" data-imgfileid="100014210" data-ratio="0.15" data-s="300,640" src="https://oscimg.oschina.net/oscnet/5946ff56-8e70-42bf-b73b-e4ea86828e1a.jpg" data-type="jpeg" data-w="1080" style="" referrerpolicy="no-referrer"></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us">以上例子，方法 A 沒有加事務註解，方法 B 的傳播性為 MANDATORY。</p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us">具體執行過程：</p><section style="margin-top: 10px;margin-bottom: 10px;text-align: right;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;border-width: 1px;border-style: solid;border-color: transparent;padding: 10px;background-color: rgb(239, 239, 239);height: auto;"><section style="text-align: justify;" powered-by="xiumi.us"><ul class="list-paddingleft-1" style="list-style-type: disc;"><li><p style="margin-bottom: 10px;text-wrap: wrap;"><span style="font-size: 15px;letter-spacing: 0.578px;text-wrap: wrap;background-color: rgb(239, 239, 239);">方法 A 的調用方如果本身沒有開啓事務，方法 A 執行前不會開啓事務。</span></p></li><li><p style="margin-bottom: 10px;text-wrap: wrap;"><span style="letter-spacing: 0.034em;">當非事務方法 A 調用方法 B 時，由於方法 B 的傳播性為 MANDATORY，必須在事務中執行，條件不滿足，拋出異常。</span></p></li></ul></section></section></section><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" data-imgfileid="100014211" data-ratio="0.30708661417322836" data-s="300,640" src="https://oscimg.oschina.net/oscnet/416475ff-f185-4c51-b748-3bd01b71c1d9.jpg" data-type="jpeg" data-w="889" style="" referrerpolicy="no-referrer"></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><span style="font-size: 16px;color: rgb(65, 95, 255);">3.7 NESTED</span></p><section style="margin-top: 10px;margin-bottom: 10px;text-align: center;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;border-width: 1px;border-style: solid;border-color: rgb(160, 160, 160);padding: 10px;"><section style="text-align: justify;line-height: 1.8;" powered-by="xiumi.us"><p style="margin-bottom: 10px;text-wrap: wrap;">嵌套事務</p><ul class="list-paddingleft-1" style="list-style-type: disc;"><li><p style="margin-bottom: 10px;text-wrap: wrap;">如果外層方法 A 不存在事務，內層方法 B 的規則與 REQUIRED 一致。</p></li><li><p style="margin-bottom: 10px;text-wrap: wrap;"><span style="letter-spacing: 0.034em;">如果外層方法 A 存在事務，內層方法 B 做為外層方法 A</span><span style="letter-spacing: 0.034em;">事務的子事務執行，兩個方法是一起提交，但子事務是獨立回滾。</span></p><p style="margin-bottom: 10px;text-wrap: wrap;"><span style="letter-spacing: 0.034em;"></span><span style="letter-spacing: 0.034em;">內層方法 B 拋出異常，則會回滾方法 B 的所有操作，但不影響外層事務方法 A。</span><span style="letter-spacing: 0.034em;">（方法 A 需要 try-catch 子事務，避免異常傳遞到父層事務）</span></p><p style="margin-bottom: 10px;text-wrap: wrap;"><span style="letter-spacing: 0.034em;"></span><span style="letter-spacing: 0.034em;">外層方法 A 回滾，則內層方法 B 也會回滾。</span></p></li><li><p style="margin-bottom: 10px;text-wrap: wrap;"><span style="letter-spacing: 0.034em;">該傳播性的特點是可以保存狀態點，當回滾時，只會回滾到某一個狀態點，保證了子事務之間的獨立性，避免嵌套事務的全局回滾。</span></p></li></ul></section></section></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" data-imgfileid="100014212" data-ratio="0.5464949928469242" data-s="300,640" src="https://oscimg.oschina.net/oscnet/19442a82-a558-40f9-9c12-48c694a7be5b.jpg" data-type="jpeg" data-w="699" style="" referrerpolicy="no-referrer"></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section style="margin: 10px 0% 8px;text-align: left;justify-content: flex-start;display: flex;flex-flow: row;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;vertical-align: top;border-left: 3px solid rgb(219, 219, 219);border-bottom-left-radius: 0px;padding-left: 8px;align-self: flex-start;flex: 0 0 auto;"><section style="color: rgba(0, 0, 0, 0.5);text-align: justify;" powered-by="xiumi.us"><p style="text-wrap: wrap;">例子：</p></section></section></section><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" data-imgfileid="100014213" data-ratio="0.22870370370370371" data-s="300,640" src="https://oscimg.oschina.net/oscnet/1842fc23-33da-437d-aadf-6126ceee7570.jpg" data-type="jpeg" data-w="1080" style="" referrerpolicy="no-referrer"></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us">以上例子，方法 A 的傳播性為 REQUIRED,方法 B 為 NESTED。</p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us">具體執行過程：</p><section style="margin-top: 10px;margin-bottom: 10px;text-align: right;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;border-width: 1px;border-style: solid;border-color: transparent;padding: 10px;background-color: rgb(239, 239, 239);height: auto;"><section style="text-align: justify;" powered-by="xiumi.us"><ul class="list-paddingleft-1" style="list-style-type: disc;"><li><p style="margin-bottom: 10px;text-wrap: wrap;"><span style="font-size: 15px;letter-spacing: 0.578px;text-wrap: wrap;background-color: rgb(239, 239, 239);">方法 A 執行時，如調用方沒有開啓事務，則開啓一個事務。</span></p></li><li><p style="margin-bottom: 10px;">方法 B 被外層方法 A 調用時，因為方法 B 的傳播性為 NESTED，方法 B 在此處建立 savepoint,標記 insert 行為。</p></li><li><p style="margin-bottom: 10px;text-wrap: wrap;"><span style="letter-spacing: 0.034em;">當方法 B 拋出異常，其 insert 操作會回滾，但只會回滾到 savepoint，（前提是方法 A 要 try-catch 方法 B，使方法 B 的異常不會往外傳遞）。</span></p></li><li><p style="margin-bottom: 10px;text-wrap: wrap;"><span style="letter-spacing: 0.034em;">方法 B 回滾後，方法 A 的事務提交。</span></p></li></ul></section></section></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us">調用鏈路：</p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" data-imgfileid="100014214" data-ratio="0.2857142857142857" data-s="300,640" src="https://oscimg.oschina.net/oscnet/76197617-a9ba-44b1-af8b-90ccfeb45afc.jpg" data-type="jpeg" data-w="910" style="" referrerpolicy="no-referrer"></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section style="margin-top: 10px;margin-bottom: 10px;text-align: center;" powered-by="xiumi.us"><section style="padding: 3px;display: inline-block;border-bottom: 1px solid rgb(65, 94, 255);font-size: 17px;color: rgb(65, 94, 255);"><p>四、總結</p></section></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section powered-by="xiumi.us"><p style="text-wrap: wrap;">本文解釋了 Spring 框架中的事務傳播性，即多個業務方法之間調用時事務如何處理的規則。Spring 提供了七種傳播級別，如</p><p style="text-wrap: wrap;">PROPAGATION_REQUIRED、</p><p style="text-wrap: wrap;">PROPAGATION_REQUIRES_NEW 等。</p><p style="text-wrap: wrap;"><br></p><p style="text-wrap: wrap;">每種級別都有適用場景和限制，本文提供了一些示例，介紹了聲明式事務如何使用，每種事務的規則，產生哪種行為，當方法拋出異常時，事務的提交和回滾是如何被處理的。正確處理事務對於任何企業級應用程序都是必要的，瞭解 Spring 事務傳播性是構建高效、可靠和可擴展應用程序的關鍵。</p></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section style="margin-right: 0%;margin-bottom: 20px;margin-left: 0%;justify-content: flex-start;display: flex;flex-flow: row;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: middle;width: 40%;align-self: center;flex: 0 0 auto;"><section style="margin-top: 0.5em;margin-bottom: 0.5em;" powered-by="xiumi.us"><section style="border-top: 1px dotted rgb(90, 98, 114);"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section></section><section style="display: inline-block;vertical-align: middle;width: 20%;align-self: center;flex: 0 0 auto;"><section style="text-align: center;color: rgb(45, 66, 87);font-size: 11px;" powered-by="xiumi.us"><p>END</p></section></section><section style="display: inline-block;vertical-align: middle;width: 40%;align-self: center;flex: 0 0 auto;"><section style="margin-top: 0.5em;margin-bottom: 0.5em;" powered-by="xiumi.us"><section style="border-top: 1px dotted rgb(90, 98, 114);"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section></section></section><section style="margin-top: 10px;margin-bottom: 10px;text-align: left;" powered-by="xiumi.us"><section style="padding-left: 1em;padding-right: 1em;display: inline-block;text-align: center;"><span style="display: inline-block;padding: 0.3em 0.5em;border-radius: 0.5em;background-color: rgb(65, 94, 255);color: rgb(255, 255, 255);" title="" opera-tn-ra-cell="_$.pages:0.layers:0.comps:148.title1"><p>猜你喜歡</p></span></section><section style="border-width: 1px;border-style: solid;border-color: transparent;margin-top: -1em;padding: 20px 10px 10px;background-color: rgb(239, 239, 239);text-align: center;"><section style="font-size: 14px;text-align: left;" powered-by="xiumi.us"><ul class="list-paddingleft-1" style="padding-left: 40px;list-style-position: outside;"><li><p><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzI4NjY4MTU5Nw%3D%3D%26mid%3D2247497989%26idx%3D1%26sn%3Da98e270e4612356756966bd9d90d80ee%26chksm%3Debdb8997dcac0081e35a2c9ba681902e703f8c52406ee49fcedaafbba77b7dc3279f56305782%26scene%3D21%23wechat_redirect" textvalue="vivo 數據庫備份恢復系統演化" linktype="text" imgurl="" imgdata="null" data-itemshowtype="0" tab="innerlink" data-linktype="2">vivo 數據庫備份恢復系統演化</a></p></li><li><p><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzI4NjY4MTU5Nw%3D%3D%26mid%3D2247497821%26idx%3D1%26sn%3D80e04511f5a5d5acfee4a44a8a8b3e31%26chksm%3Debdb88cfdcac01d954242fd24907b69c542e43fcb99ebe6a03d66858194e03ad14105281b62f%26scene%3D21%23wechat_redirect" textvalue="vivo 容器平台資源運營實踐" linktype="text" imgurl="" imgdata="null" data-itemshowtype="0" tab="innerlink" data-linktype="2">vivo 容器平台資源運營實踐</a></p></li><li><p><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzI4NjY4MTU5Nw%3D%3D%26mid%3D2247497821%26idx%3D2%26sn%3Db5d635106e88b9f918f54111f11b3027%26chksm%3Debdb88cfdcac01d952d021c34f90aabe3c193fc1b0bd4d86721f2ec3d696c909cf4503936be9%26scene%3D21%23wechat_redirect" textvalue="前端 JS 安全對抗原理與實踐" linktype="text" imgurl="" imgdata="null" data-itemshowtype="0" tab="innerlink" data-linktype="2">前端 JS 安全對抗原理與實踐</a></p></li></ul></section></section></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section class="mp_profile_iframe_wrp"><mp-common-profile class="js_uneditable custom_select_card mp_profile_iframe" data-pluginname="mpprofile" data-id="MzI4NjY4MTU5Nw==" data-headimg="http://mmbiz.qpic.cn/mmbiz_png/4g5IMGibSxt45QXJZicZ9gaNU2mRSlvqhQd94MJ7oQh4QFj1ibPV66xnUiaKoicSatwaGXepL5sBDSDLEckicX1ttibHg/0?wx_fmt=png" data-nickname="vivo 互聯網技術" data-alias="vivoVMIC" data-signature="分享 vivo 互聯網技術乾貨與沙龍活動，推薦最新行業動態與熱門會議。" data-from="0" data-is_biz_ban="0"></mp-common-profile></section></section><p style="display: none;"><mp-style-type data-value="3"></mp-style-type></p></div><p style="color: #858585; font-size: 13px;">本文分享自微信公眾號 - vivo 互聯網技術（vivoVMIC）。<br>如有侵權，請聯繫 support@oschina.cn 刪除。<br>本文參與「<a href="https://www.oschina.net/sharing-plan" target="_blank">OSC 源創計劃</a>」，歡迎正在閲讀的你也加入，一起分享。</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 09 Jan 2024 02:02:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/vivotech/blog/10583852</guid>
            <link>https://my.oschina.net/vivotech/blog/10583852</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[年度盤點｜深圳工信十件大事]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>「i 深圳」官微<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2F_8-u5N6_fIBUYJZGu1fGYg" target="_blank">發文</a>盤點了 2023 年深圳工信十大事件，具體如下：</p><p><span style="color:#007aaa"><strong>一、企業創新主體地位不斷強化，「深圳製造」爆款迭出</strong></span></p><p><span style="color:#595959">企業研發投入達 1784.6 億元，約佔全社會研發投入比重 94.9%，位居全國第一。華為推出全球首款支持衞星通話和應用星閃技術的 Mate 60 系列手機產品，引發線上線下搶購熱潮；榮耀推出全球最輕薄大內折高端機 Magic V2，引領摺疊屏厚度進入「毫米時代」；仰望 U8、問界 M9 等高端車型先後發佈，搭載業內領先的自研車身控制系統和智能科技配置，代表了全球高端新能源汽車前沿水平。</span></p><p><img height="383" src="https://oscimg.oschina.net/oscnet/up-c427126861041278cce2734057b420f8024.png" width="500" referrerpolicy="no-referrer"></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span style="color:#007aaa"><strong>二、「新一代世界一流汽車城」建設全面提速，比亞迪勇奪全球新能源汽車銷冠</strong></span></p><p><span style="color:#595959">高標準規劃建設「新一代世界一流汽車城」，全市全年新能源汽車產量繼續實現翻倍增長。汽車出口屢創新高，全市新車電動化滲透率、充電基礎設施密度全國領先，新能源汽車保有量超 96 萬輛，入圍國家首批公共領域全面電動化一類試點城市。全力支持深汕特別合作區建設世界級汽車製造城，深汕比亞迪汽車工業園二期建成投產，東風李爾、壁虎科技、佛吉亞等一批新能源汽車產業鏈上下游明星企業集聚深汕。比亞迪累計下線超 600 萬輛新能源汽車，2023 年全年銷售汽車 302.44 萬輛，同比增長 61.9%，一舉奪得全國汽車年度銷冠、全球新能源汽車銷冠，創下中國汽車年銷量最高紀錄，新能源汽車行業邁向規模化、全球化高質量發展之路。</span></p><p><img height="395" src="https://oscimg.oschina.net/oscnet/up-37f0d216108702b10da9071d67a72e94422.png" width="500" referrerpolicy="no-referrer"></p><p><span style="color:#007aaa"><strong>三、優質通用大模型接連推出，人工智能全域全時場景應用加快拓展</strong></span></p><p><span style="color:#595959">印發實施《深圳市加快推動人工智能高質量發展高水平應用行動方案（2023-2024 年）》，構建「一條例、一方案、一清單、一基金羣」的政策體系。華為雲盤古 3.0。騰訊混元、雲天勵飛天書等一批高水平通用大模型陸續推出。昇騰系列芯片成為國內具備全棧技術的最高水平的人工智能算力芯片。累計發佈人工智能清掃等 41 個「城市+AI」場景，舉辦人工智能專場產學研對接系列活動，人工智能全域全時場景應用加快拓展。</span></p><p><img height="323" src="https://oscimg.oschina.net/oscnet/up-09bda6383445c51b8c4c7c3c38d87601298.png" width="500" referrerpolicy="no-referrer"></p><p><span style="color:#007aaa"><strong>四、開源鴻蒙歐拉產業高地建設再上台階，「軟件名城」獲評「三星級」</strong></span></p><p><span style="color:#595959">印發實施《深圳市推動開源鴻蒙歐拉產業創新發展行動計劃（2023—2025 年）》，全體系增強操作系統技術能力，開源鴻蒙裝機量已超過 7 億台，開源歐拉裝機量佔據國內服務器市場份額近 4 成。落地全球智慧物聯網聯盟等國際組織，建設鴻蒙生態創新中心，加快推動我國操作系統技術創新和高水平自立自強。在全國「軟件名城」考核中名列前茅，獲評最高等次「三星級」。</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><img height="275" src="https://oscimg.oschina.net/oscnet/up-45f99849e79a7af19baff203be73c45bcee.png" width="500" referrerpolicy="no-referrer"></p><p><span style="color:#007aaa"><strong>五、75 個「工業上樓」項目開工建設，高標準謀劃共建產業園區</strong></span></p><p><span style="color:#595959">持續加大產業用地用房供應，積極穩妥推進「工業上樓」，為製造業高質量發展提供強有力空間保障。2023 年開工建設 75 個「工業上樓」項目，預計可提供總建築面積超 2000 萬㎡。龍崗寶龍專精特新產業園正式開園，全國首個全裝配式智能產業園坪山區新能源汽車產業園交付使用，推廣實現「上下游就是上下樓，產業園就是產業鏈」。與汕頭、潮州等地加大產業合作力度，高標準謀劃共建產業園區，努力實現優勢互補、合作共贏。</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><img height="351" src="https://oscimg.oschina.net/oscnet/up-0e185217af6add18c0a3dc295242507811b.png" width="500" referrerpolicy="no-referrer"></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span style="color:#007aaa"><strong>六、中小企業發展環境綜合排名全國第一，專精特新「小巨人」增量全國第一</strong></span></p><p><span style="color:#595959">《2022 年度中小企業發展環境評估報告》發佈，深圳中小企業發展環境綜合排名全國第一。「深 i 企」平台用户數突破 300 萬。創新開展「我幫企業找市場」等系列行動，線上打造供需對接平台，線下開展上百場各類主題的「鏈上配對」精準對接服務，幫助企業拿訂單、拓市場，打通上下游合作「最後一公里」。2023 年新增專精特新「小巨人」企業 309 家，新增數量居全國大中城市第一，總數達 742 家、位列全國第二。</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><img height="350" src="https://oscimg.oschina.net/oscnet/up-bb68fd01669b2204acf6e1a401f88b4d831.png" width="500" referrerpolicy="no-referrer"></p><p><span style="color:#007aaa"><strong>七、千兆城市建設水平領跑全國，率先邁入 5G-A 時代</strong></span></p><p><span style="color:#595959">啓動「極速寬帶先鋒城市」建設行動，全年新增 5G 基站超 1 萬個、累計建成超 7.5 萬個，重點場所 5G 網絡通達率 100%，多項千兆城市指標位居全國大中城市首位。啓動數字家庭 3T 躍升行動試點，深圳市公共場所 WIFI 管理平台累計服務近 3 億人次，為市民節省約 1.7 億元流量費，市民生活數字化服務水平得到大幅提升。出台《深圳市算力基礎設施高質量發展行動計劃（2024-2025）》，力爭將算力打造成像水、電「一點接入、即取即用」的基礎設施，夯實數字經濟發展「底座」。全面加速 5G-A 行業應用創新與產業融合發展，成為全球首個邁入 5G-A 時代的城市。</span></p><p><span style="color:#007aaa"><strong>八、一批重大先進製造業項目落地，工業投資實現高速增長</strong></span></p><p><span style="color:#595959">市區協同、部門聯動，赴法國、德國、馬來西亞、沙特等 25 個國家和北京、上海等 30 多個城市精準招商，招引西門子、橢圓星池、京西重工、壁虎科技等一批國內外知名企業重點項目成功落地。推動與中國一汽、中國化學、中汽中心等一批央企簽署合作協議，打造央地產業合作新典範。全年先進製造業領域成功招引落地百億以上項目 8 個，10 億以上項目超 80 個，投資金額合計超 4000 億元。2023 年工業投資規模再創歷史新高，實現增長超 30%。出台《深圳市關於新形勢下加快工業企業技術改造升級的若干措施》，將重大項目支持金額上限提高至 1 億元，推動 1200 餘家企業開展技術改造。</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><img height="318" src="https://oscimg.oschina.net/oscnet/up-d1e0659e29ba6df8968fad30a54240bfb54.png" width="500" referrerpolicy="no-referrer"></p><p><span style="color:#007aaa"><strong>九、國際星閃無線短距通信聯盟落户河套，高水平產業創新平台加快打造</strong></span></p><p><span style="color:#595959">國際星閃無線短距通信聯盟正式落户河套深港科技創新合作區，成為第二個註冊地設立在深圳的國際性產業與標準組織。聯盟已發佈星閃芯片、測試儀表等產品，加快在智能汽車、智能家居、智能終端等領域推進產業化和國際化進程。新增 1 家國家級「雙跨」平台、總數佔全國十分之一，電子元器件和集成電路國際交易中心交易規模突破 500 億元。</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><img height="357" src="https://oscimg.oschina.net/oscnet/up-56ac4a5cdf50607b2958f21ad8d17cac815.png" width="500" referrerpolicy="no-referrer"></p><p><strong><span style="color:#007aaa">十、中國—東盟新興產業論壇成功舉辦，國際產業交流合作成效斐然</span></strong></p><p><span style="color:#595959">成功舉辦中國-東盟新興產業論壇，來自東盟各國的 9 位部長、29 位東盟國家駐華使領館代表以及相關國際組織、商協會、智庫、企業共計 180 餘位外方嘉賓參加盛會，共話新興產業發展。發佈《新興產業合作倡議（深圳倡議）》，舉辦中國-東盟產業對接會（深圳），達成 20 項戰略合作框架協議，意向合作金額超 50 億元。延伸舉辦中國（深圳、香港）-東盟（吉隆坡）新興產業對接會，深港攜手「並船出海」，達成 22 項合作協議，簽約金額超 100 億元。</span></p><p><img height="640" src="https://oscimg.oschina.net/oscnet/up-3b53abdd29e47790a9ca14a4c7ddea89cdd.png" width="936" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 08 Jan 2024 09:57:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/274769</guid>
            <link>https://www.oschina.net/news/274769</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[祝賀！openKylin 社區再次入選「科創中國」開源創新榜]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span style="color:#333333">近日，由中國科協科學技術傳播中心、中國計算機學會、中國通信學會和中國科學院軟件研究所聯合主辦，CSDN 承辦的</span><strong><span style="color:#333333">2023 年開源創新榜專家評審會</span></strong><span style="color:#333333">圓滿落幕。</span><span style="color:#0060e8"><strong><span>openKylin 社區榮獲「2023 開源創新榜」優秀開源社區獎，這也是 openKylin 社區<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg2MDc5MDU1OQ%3D%3D%26mid%3D2247488006%26idx%3D1%26sn%3D9829fb8b7f075f1239b239d4be35d36b%26chksm%3Dce205876f957d160ca609fd7c95b3f6698bd2fddacb2697724ae7a20292e6780bd3b7ba44906%26scene%3D21%23wechat_redirect" target="_blank">連續兩年</a>入選該榜單。</span></strong></span></p><p style="text-align:center"><img alt="" height="1654" src="https://oscimg.oschina.net/oscnet/up-5a2d6ec6c333def9c35daa719508157beef.png" width="2339" referrerpolicy="no-referrer"></p><p><span style="color:#333333">2023 開源創新榜面向中國開源行業領域，評選具有創新性、貢獻度和影響力的開源項目、社區、人物。突出「與時俱進、鼓勵創新」的原則，旨在挖掘和推廣我國在開源技術領域的優秀成果和先進經驗。</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span style="color:#333333">相較於往年，2023 年開源創新榜在</span><strong><span style="color:#333333">權威性、公信力和專業度</span></strong><span style="color:#333333">方面均有顯著提升。</span></p><ul><li><p style="margin-left:0; margin-right:0">權威性。主辦單位新加入中國計算機學會、中國通信學會、中國科學院軟件研究所，四家主辦單位優勢互補，共同推動榜單策劃、徵集申報、專家評審等工作重點。</p></li><li><p style="margin-left:0; margin-right:0">公信力。由王懷民院士擔任評委會主任，指導組建了結構更加科學、領域更加全面的評審專家庫，從中提名形成最終評審專家。</p></li><li><p style="margin-left:0; margin-right:0">專業度。圍繞項目、社區、人物三大類別，四家主辦單位打磨了更加客觀、嚴謹、貼合實際的評審標準和更加開放、公平、科學的評審辦法，在徵集過程中公開標準細節，接受社會的意見反饋，形成良性循環。</p></li></ul><p>&nbsp;</p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span style="color:#333333">作為中國領先的開源操作系統根社區，openKylin 社區自成立以來便積極推動開源生態建設。截至目前，openKylin 社區已累計發佈 6 個社區版本，下載量達 100 萬+；聚合 400+家單位會員，涵蓋操作系統、數據庫、辦公軟件、CPU、GPU、整機、人工智能優勢企業及高等院校；擁有 5700+位開發者，並累計成立 95 個 SIG 組開展技術研究與創新。廣泛的產、學、研、用各領域力量加入社區共建之中，為操作系統根技術創新奠定智囊基礎。</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span style="color:#333333">此次入選科創中國「開源創新榜」是對 openKylin 社區開源創新能力和行業影響力的高度肯定。未來，openKylin 也將保持初心，聚焦開源創新生態建設、為營造良好開源生態持續努力。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 08 Jan 2024 09:30:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/274766</guid>
            <link>https://www.oschina.net/news/274766</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[CodeFuse 開源這半年]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div><p style="margin-left:0px; margin-right:0px; text-align:center"><img alt="hjfgjkf.png" src="https://intranetproxy.alipay.com/skylark/lark/0/2024/png/98756342/1704681398439-ec399b89-4898-4a2c-94e5-3981b90ed95d.png?x-oss-process=image%2Fresize%2Cw_900%2Climit_0" width="900" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0"><span>2023 年可以稱得上是大模型元年，在過去的這一年裏，大模型領域飛速發展，新的大模型紛紛湧現，基於大模型的新產品也吸引着大家的眼球，未來，這個領域又會給大家帶來多少驚喜？</span></p><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="margin-left:0; margin-right:0"><span>螞蟻也推出了自己的百靈代碼大模型 CodeFuse，經歷近半年內部打磨後，在 9 月正式對外開源。下面就讓我們來看一下，在過去的半年裏，CodeFuse 在開源方面取得了哪些進展？</span></p><p style="margin-left:0; margin-right:0">&nbsp;</p><span id="OSC_h2_1"></span><h2><span>一、讓研發變得更簡單</span></h2><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="margin-left:0; margin-right:0"><span>在大模型落地到多個場景的過程中，代碼自動生成，成為技術實現的必要環節。在這一趨勢下，螞蟻集團基於百靈大模型，推出了螞蟻百靈研發助手，幫助開發者自動生成代碼、註釋、測試用例等，提高研發效率。</span></p><p style="margin-left:0; margin-right:0"><br><span>CodeFuse 源於螞蟻自身的開發場景及代碼庫沉澱，基於海量高質量代碼數據和代碼領域特色詞表，和多任務微調技術 MFT，在螞蟻一萬多內部研發人員的日常編碼、測試、運維等場景中，經過反覆驗證與迭代。當前，CodeFuse 從研發效能、DevOps 衍生到了企業 IT 智能化場景智能體的探索。同時，基於 CodeFuse，螞蟻集團打造了代碼大模型的完整工具鏈，包括：模型服務、風險防護、數據質量、平台工程。</span></p><p style="margin-left:0; margin-right:0"><br><span>2023 年中，CodeFuse 及其必要的工具鏈，面向技術社區開源開放，幫助社區開發人員在此之上作研究、評價和二次開發和訓練。</span></p><p style="margin-left:0; margin-right:0"><br><span>目前，CodeFuse 在螞蟻各部門落地支持 40 多種編程語言，10 多個主流 IDE 平台。整體採納率 30%，代碼通過 AI 佔比 20%。比如，CodeFuse 在螞蟻數字科技的 SOFAStack 雲原生應用智能商業產品線全面融合，涵蓋設計、研發、測試、運維等領域，形成從領域建模到智能運維端到端 Copilot 產品解決方案，提升了企業級應用的交付效率和質量，加速行業數字化降本增效。</span></p><p style="margin-left:0; margin-right:0">&nbsp;</p><span id="OSC_h2_2"></span><h2><span>二、豐富的開源內容</span></h2><p style="margin-left:0; margin-right:0"><span>CodeFuse 的使命是開發專門設計用於支持整個軟件開發生命週期的大型代碼語言模型（Code LLMs），當前內容涵蓋代碼、運維、分析、測試、推理、評價六大方向。截止 2023.12.31，CodeFuse 已累計開源了 11 個代碼倉庫、4 個數據集、11 個大模型參數文件，總計關注/點贊數超過 3000、下載量超過 2.4 萬，並有 1 篇論文已被接收，2 篇預影印在 Arxiv 上。</span></p><p style="margin-left:0px; margin-right:0px; text-align:center"><img src="https://intranetproxy.alipay.com/skylark/lark/0/2024/png/276193/1704259197296-b8ea3135-7387-4a92-a84f-d02643811793.png" width="739" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0">&nbsp;</p><span id="OSC_h4_3"></span><h4><strong>1、代碼 - MFTCoder 系列：</strong></h4><p>國際首個高精度、高效率、多任務、多模型支持、多訓練算法，<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcodefuse-ai%2FMFTCoder" target="_blank" rel="nofollow"><span>大模型代碼能力微調框架</span></a><span>；多任務微調的技術細節已在 Arxiv 公佈，可參考</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Farxiv.org%2Fabs%2F2311.02303" target="_blank" rel="nofollow"><span>MFTCoder 論文</span></a><span>，以及</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzkwOTU3NTc3NA%3D%3D%26mid%3D2247484188%26idx%3D1%26sn%3D27c9fe0e849f9f27eac588fda76574be%26chksm%3Dc139d02df64e593b2fcb9101cea55c4b78af5a6b4dd0f6518d7993bc864a36150ae438abc902%26token%3D1529034469%26lang%3Dzh_CN%23rd" target="_blank" rel="nofollow"><span>此前發佈的文章</span></a></p><div><p style="margin-left:0; margin-right:0"><span>預訓練語言模型可以在大量的文本數據上學習通用的語言模式和結構。通過運用無監督學習技術，模型可以基於前面的詞序列來預測句子中的下一個詞。然而，僅僅進行預訓練並不能在特定的自然語言處理任務上取得高性能。因此，需要在特定任務的小型數據集上對預訓練模型進行微調，以學習任務特定的特徵並提高性能。微調過程使用監督學習技術將預訓練模型適應到特定的任務上。將訓練過程分為預訓練和微調兩個階段，可以使自然語言處理模型充分發揮無監督學習和有監督學習的優勢。</span></p><p style="margin-left:0; margin-right:0"><span>但是，需要注意的是，當模型的參數量巨大時，為每一個下游任務獨立進行微調並部署將需要大量的資源。然而，是否存在一種方法可以讓一個模型同時支持所有的下游任務呢？答案是肯定的，多任務微調（multitask fine-tuning，MFT）為解決這個問題提供了一種有效的途徑。</span></p><p style="margin-left:0; margin-right:0"><span>多任務微調不僅能夠節省資源，還能夠帶來其他優勢。通過聯合訓練，模型可以學習到多個任務之間的特徵和規律。相比於針對每一個任務單獨進行微調，多任務微調能夠更好地完成各種任務。同時，由於學習到的特徵和規律是相互聯繫的，模型的泛化能力也會得到提高。這意味着，即使在面對未見過的任務時，模型也能夠表現出色，因為它已經學習到了許多相關任務的特徵和規律。</span></p><p style="margin-left:0; margin-right:0">&nbsp;</p></div><span id="OSC_h4_4"></span><h4>2、運維 - DevOps 系列：</h4><p>業界首個開源的<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcodefuse-ai%2FCodeFuse-DevOps-Model" target="_blank" rel="nofollow"><span>中文開發運維大模型</span></a><span>，能夠幫助工程師回答在 DevOps 生命週期中遇到的問題，並提供通過檢索增強生成、工具學習和沙盒環境來構建軟件開發全生命週期的<span>&nbsp;</span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcodefuse-ai%2Fcodefuse-chatbot" target="_blank" rel="nofollow"><span>AI 智能助手</span></a><span>；詳細介紹可以參看此前文章<span>&nbsp;</span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzkwOTU3NTc3NA%3D%3D%26mid%3D2247484045%26idx%3D1%26sn%3D838d9de49922b0d04bcffb3efbeec4df%26chksm%3Dc139d1bcf64e58aa0c92696d74ccebc64281a9ed287f88333bdd139e34ee5e8d46726ef9cd6e%26token%3D1529034469%26lang%3Dzh_CN%23rd" target="_blank" rel="nofollow"><span>DevOps-Eval</span></a><span>、</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzkwOTU3NTc3NA%3D%3D%26mid%3D2247484350%26idx%3D1%26sn%3Dc9875496ec1b2c75f47db73986007a05%26chksm%3Dc139d08ff64e5999b5c55f727d1b98475cc50a328662b5c84d921fe8c45a477f452effc2c41f%26token%3D1529034469%26lang%3Dzh_CN%23rd" target="_blank" rel="nofollow"><span>DevOps-Model</span></a><span>、</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzkwOTU3NTc3NA%3D%3D%26mid%3D2247484642%26idx%3D1%26sn%3De7dde520532b0868d267cff5ff4bc449%26chksm%3Dc139d7d3f64e5ec53f110495dbefc8e1903c9f09e13c909b2d236b1808bb9683d034b065e007%26token%3D1529034469%26lang%3Dzh_CN%23rd" target="_blank" rel="nofollow"><span>DevOps-Chatbot</span></a></p><div><p style="margin-left:0; margin-right:0"><span>我們希望用户逐漸從各處資料查詢、獨立分散平台操作的傳統開發運維模式轉變到大模型問答的智能化開發運維模式，改變人們的開發運維習慣。</span></p><p style="margin-left:0; margin-right:0"><span>核心差異技術、功能點：</span></p><ul><li><span>智能調度核心： 構建了體系鏈路完善的調度核心，支持多模式一鍵配置，簡化操作流程。</span></li><li><span>代碼整庫分析： 實現了倉庫級的代碼深入理解，以及項目文件級的代碼編寫與生成，提升了開發效率。</span></li><li><span>文檔分析增強： 融合了文檔知識庫與知識圖譜，通過檢索和推理增強，為文檔分析提供了更深層次的支持。</span></li><li><span>垂類專屬知識： 為 DevOps 領域定製的專屬知識庫，支持垂類知識庫的自助一鍵構建，便捷實用。</span></li><li><span>垂類模型兼容： 針對 DevOps 領域的小型模型，保證了與 DevOps 相關平台的兼容性，促進了技術生態的整合。</span></li></ul><p style="margin-left:0; margin-right:0"><span>依託於開源的 LLM 與 Embedding 模型，可實現基於開源模型的離線私有部署，此外，也支持 OpenAI API 的調用。</span></p><p style="margin-left:0; margin-right:0">&nbsp;</p></div><span id="OSC_h4_5"></span><h4><span>3、<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcodefuse-ai%2FCodeFuse-Query" target="_blank" rel="nofollow">分析 - CodeFuse-Query</a></span><span>：</span></h4><p><span style="color:#000000">基於查詢的代碼分析引擎，適合大規模、複雜的代碼庫分析場景。可參考論文<span>&nbsp;</span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Farxiv.org%2Fabs%2F2401.01571" target="_blank" rel="nofollow"><span>https://arxiv.org/abs/2401.01571</span></a><span>；詳細介紹可以參看</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzkwOTU3NTc3NA%3D%3D%26mid%3D2247484536%26idx%3D1%26sn%3D2e985b431ff9bd219c93b97ce4f4f444%26chksm%3Dc139d749f64e5e5f96f248f99d18bc55a5cd75fcb58c7726f52cfd6cd131f640d09e7d0e122a%26token%3D1529034469%26lang%3Dzh_CN%23rd" target="_blank" rel="nofollow"><span>此前文章</span></a></p><div><p style="margin-left:0; margin-right:0"><span>CodeFuse-Query 的特點和優勢可以概括為以下幾點：</span></p><ul><li><span>高度可擴展：CodeQuery 可以處理大規模的代碼庫，且能夠適應不同的分析需求。這種高度的可擴展性使得 CodeQuery 可以在大型組織中發揮重要作用。</span></li><li><span>以數據為中心：CodeQuery 將源代碼和分析結果視作數據，這種以數據為中心的方法使其在處理大數據環境中的代碼分析問題時具有獨特優勢。</span></li><li><span>高度集成：CodeQuery 能夠無縫地融入大型組織的各種系統中，包括數據倉庫、數據計算設施、對象存儲和靈活計算資源等。這種高度的集成性使得 CodeQuery 在大型組織中的使用變得更加方便和高效。</span></li><li><span>支持多元化的需求：CodeQuery 不僅可以處理大規模的代碼庫，還可以應對各種複雜的分析需求，包括服務質量分析需求、跨編程語言分析需求、算法需求和性能需求等。</span><br> &nbsp;</li></ul></div><span id="OSC_h4_6"></span><h4><span>4、<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcodefuse-ai%2FTest-Agent" target="_blank" rel="nofollow">測試 - Test-Agent</a></span><span>：</span></h4><p><span>測試領域的「智能體」，打造創新的測試領域解決方案，構建 24 小時在線的測試助理服務；詳細介紹可以參看</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzkwOTU3NTc3NA%3D%3D%26mid%3D2247483884%26idx%3D3%26sn%3Db92d3cbbe82c9487777f63ad6a38851b%26chksm%3Dc139d2ddf64e5bcb2246335bf6ee327900c789dbfead77bfc3c325a8a4854f5d50bd839eb8ad%26token%3D1529034469%26lang%3Dzh_CN%23rd" target="_blank" rel="nofollow"><span>此前文章</span></a></p><div><p style="margin-left:0; margin-right:0"><span>大模型的號角已經吹響，測試領域大模型也在不斷進化中，通過預訓練過程中積累的豐富世界知識，在複雜交互環境中展現出了非凡的推理與決策能力。</span></p><p style="margin-left:0; margin-right:0"><span>儘管在測試領域中，基礎模型取得了顯著的成果，但仍然存在一些侷限性，特定領域的測試任務通常需要專業化的工具或領域知識來解決。例如，基礎模型可以通過預訓練知識完成單次測試代碼生成和測試文本生成等任務，但處理複雜的集成用例生成、特定領域用例生成和測試流程 pipeline 交互等問題時，需要更專業的工具和領域知識。</span></p><p style="margin-left:0; margin-right:0"><span>因此將專用工具與基礎模型整合在一起，可以充分發揮它們各自的優勢。專用工具可以解決模型時效性不足、增強專業知識、提高可解釋性和魯棒性的問題。而基礎模型則具備類人的推理規劃能力，可以理解複雜的數據和場景，並與現實世界進行交互。</span></p><p style="margin-left:0; margin-right:0">&nbsp;</p></div><span id="OSC_h4_7"></span><h4><span>5、<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcodefuse-ai%2FCodeFuse-ModelCache%2Fblob%2Fmain%2FREADME_CN.md" target="_blank" rel="nofollow">推理 - ModelCache</a></span><span>：</span></h4><p><span>大模型語義緩存系統，通過緩存已生成的模型結果，降低類似請求的響應時間，提升用户體驗；詳細介紹可以參看</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzkwOTU3NTc3NA%3D%3D%26mid%3D2247484139%26idx%3D1%26sn%3Df6b0fbe4d4dc7b47759146de60a1c820%26chksm%3Dc139d1daf64e58ccd522435f3769c2dd5b1953b7974c5efbb53ef0f9247ae3c037428a1770bf%26token%3D1529034469%26lang%3Dzh_CN%23rd" target="_blank" rel="nofollow"><span>此前文章</span></a><span>。</span></p><div><p style="margin-left:0; margin-right:0"><span>當前大模型服務面臨以下三個挑戰：</span></p><ul><li><span>成本高：大模型參數量千億級別，單實例就需要多張 A10 卡，規模化部署成本高昂。因此，當前大模型服務基本按照處理的 token 數量計費，導致用户側使用成本也居高不下。</span></li><li><span>速度慢：大型模型的推理速度也是一個關鍵問題。在許多實時應用中，如對話系統、業務助手，響應時間要求非常高，通常在毫秒級別。然而，大型模型的推理速度往往較慢，在秒級，導致無法實時返回結果，用户體驗下降。</span></li><li><span>穩定性無保障：由於單實例部署成本高昂，當前大模型服務接受到大流量請求時，通過限流的方式，防止服務不可用。</span></li></ul><p style="margin-left:0; margin-right:0"><span>針對上述挑戰，引入大模型緩存可以解決當前問題：通過引入 Cache 機制，緩存已計算的結果，當接收到類似請求，可以直接從緩存獲取結果，避免重複計算，節約計算資源，顯著提升響應時間，提升用户體驗；同時，緩存可以起到分流的作用，降低透傳到後端的請求量，降低後端壓力，提升服務穩定性。因此，Cache 作為一種重要的大模型服務部署解決方案，在資源有限和對實時性要求較高的場景下，可以幫助企業和研究機構更好地應用大型語言模型，提升模型性能和效率。未來，隨着大型模型在各個領域的廣泛應用，Cache 的重要性將不斷凸顯。</span></p><p style="margin-left:0; margin-right:0">&nbsp;</p></div><span id="OSC_h4_8"></span><h4><span>6、<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcodefuse-ai%2Fcodefuse-evaluation%2Fblob%2Fmaster%2FREADME_CN.md" target="_blank" rel="nofollow">評測 - CodeFuse-Evaluation</a></span><span>：</span></h4><p><span>在 HumanEval-x、MBPP 的基準上開發的編程領域多任務的評測基準， 可用於評估大模型在代碼補全，自然語言生成代碼，測試用例生成、跨語言代碼翻譯、中文指令生成代碼等多類任務的性能；詳細介紹可以參看</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzkwOTU3NTc3NA%3D%3D%26mid%3D2247484436%26idx%3D1%26sn%3D55ad2d46c2d6b8e9ef0d3e94201945b0%26chksm%3Dc139d725f64e5e331deb25933742bc70e9b608756059458bfa3700e16974711000ad20a32a86%26token%3D1529034469%26lang%3Dzh_CN%23rd" target="_blank" rel="nofollow"><span>此前文章</span></a><span>。</span></p><div><p style="margin-left:0; margin-right:0"><span>目前對於大語言模型評估的按照生成的結果是否可定量衡量比如數學計算和文章生成分為客觀評測和主觀評測。客觀評測：基於業界影響力較高評測基準對生成內容進行各維度評估；主觀評測：組織多位有專業背景知識的專家進行相關維度評估。</span></p><p style="margin-left:0; margin-right:0"><span>按照評測執行方式可分為自動化評測，人工評測和模型評測三類。</span></p><p style="margin-left:0; margin-right:0"><span>模型訓練完成後，基於評估基準跑出評分，這個過程可以完全工程化的執行因此成為自動化評測。人工評測特別是領域知識需要着急各領域專家進行測評，此種方式評估成本較高但是評估結果更具有説服力。模型（如 PandaLM）評測模型即通過訓練大模型學習到人類對不同生成文本的總體偏好，並作出基於習得的人類偏好的相對評價，這種評價方式相比人工更穩定、高效。</span></p><p style="margin-left:0; margin-right:0">&nbsp;</p></div><span id="OSC_h2_9"></span><h2><span>三、精彩的社區活動</span></h2><p style="margin-left:0; margin-right:0"><span>我們深知，開源不只是開放代碼，還包括在社區的分享與交流。在開源內容上乾貨滿滿，社區活動定也不落下風，讓我們看看都有哪些吧！！</span></p><p style="margin-left:0; margin-right:0"><span>8 月，我們在 AI+ 軟件研發數字峯會上進行了專場分享《基於 AIGC 的測試生成》；</span></p><p style="margin-left:0; margin-right:0"><span>9 月，外灘大會上正式對外宣佈 CodeFuse 開源；</span></p><p style="margin-left:0px; margin-right:0px; text-align:center"><img src="https://intranetproxy.alipay.com/skylark/lark/0/2024/png/217410/1704420417098-5d63a0fa-ef73-4abe-8569-db04857eddef.png" width="540" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0"><span>10 月，在 MLSummit 2023 上，對外分享了 CodeFuse 研發經驗；</span></p><p style="margin-left:0; margin-right:0"><span>11 月初，在雲棲大會上進行 CodeFuse 專題演講；</span></p><p style="margin-left:0; margin-right:0"><span>11 月，和始智 AI 等聯合舉辦了「代碼大模型技術與應用發展」論壇；</span></p><p style="margin-left:0; margin-right:0"><span>12 月初，在 CCF 中國軟件大會上，與參會者現場體驗、互動交流；</span></p><p style="margin-left:0px; margin-right:0px; text-align:center"><img src="https://intranetproxy.alipay.com/skylark/lark/0/2024/png/217410/1704420830670-62d284f9-b89c-4c3f-9f10-1bc174d4154e.png" width="480" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0"><span>12 月末，在全球軟件開發者大會 QCon 上經驗分享《基於 CodeFuse 的下一代研發探索》。</span></p><p style="margin-left:0; margin-right:0">&nbsp;</p><span id="OSC_h2_10"></span><h2><span>四、獲得業界認可</span></h2><p style="margin-left:0; margin-right:0"><span>今年，CodeFuse 還獲得了多個獎項，感謝業界的認可：</span></p><ul><li><span>榮獲開源中國 2023 年度優秀開源技術團隊</span></li></ul><p style="margin-left:0px; margin-right:0px; text-align:center"><img src="https://intranetproxy.alipay.com/skylark/lark/0/2024/png/217410/1704420476632-42355276-1d79-46dd-bcb6-eb0c29a62311.png" width="540" referrerpolicy="no-referrer"></p><ul><li><span>入選極客公園 2023 大模型先鋒案例 TOP10</span></li></ul><p style="margin-left:0px; margin-right:0px; text-align:center"><img src="https://intranetproxy.alipay.com/skylark/lark/0/2024/png/217410/1704420452319-a2eabbe9-21a1-47e2-a54f-84d5fce1b04b.png" width="540" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px; text-align:center">&nbsp;</p><span id="OSC_h2_11"></span><h2><span>五、2024 新的期待</span></h2><p style="margin-left:0; margin-right:0"><br><span>2023 年以來，大模型在代碼領域落地不斷深入。經過一年的實踐，我們對相關的技術也有了更深層次的理解與認識。也看到了很多有趣的方向與落地實踐。在 2024 新的一年裏，我們還會繼續深耕開源：</span></p><ul><li><span>更多創新功能發佈，例如近期 1 月份將發佈支持 MoE 的 MFTCoder v0.2; 2 月份將發佈支持前端設計到代碼的訓練框架和模型；</span></li><li><span>更多的線下活動，會組織多次 CodeFuse 線下 meetup，歡飲感興趣的同行多多參與；也會積極參與國內和國際行業會議/論壇更多分享 CodeFuse 的實踐經驗；</span></li><li><span>更多的社區參與和互動，會社區調研，讓大家能夠參與到項目中來；包括不限於發起社區一起捉蟲、一起貢獻新特性，推動相關體系的標準化，甚至組織相關比賽活動等。</span></li></ul><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="margin-left:0; margin-right:0"><span>非常歡迎大家能夠跟我們一起交流探索，一起來定義下一代基於大模型的全生命週期研發解決方案。歡迎大家參與到我們社區中，一起探討、交流。 2024，一起向未來！</span></p><p style="margin-left:0; margin-right:0"><span style="color:rgba(0, 0, 0, 0.9)">CodeFuse 官網：</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcodefuse.alipay.com" rel="nofollow" target="_blank"><span style="color:#0080ff">https://codefuse.alipay.com</span></a></p></div></div>
                                    ]]>
            </description>
            <pubDate>Mon, 08 Jan 2024 07:55:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/6942768/blog/10678192</guid>
            <link>https://my.oschina.net/u/6942768/blog/10678192</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
    </channel>
</rss>
