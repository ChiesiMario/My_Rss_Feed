<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[開源中國-綜合資訊]]>
        </title>
        <link>https://www.oschina.net/news/industry</link>
        <atom:link href="https://rsshub.app/oschina/news/industry" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[開源中國-綜合資訊 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Tue, 19 Sep 2023 21:01:43 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[任正非：我們即將進入第四次工業革命、蘋果是華為的老師]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>近日，ICPC 基金會主席及教練和世界計算機競賽的金牌獲得者前往華為考察。在此期間，華為創始人任正非表示，華為一直堅持開放和擁抱全球人才的原則，願意與學術界共同培養信息領域的優秀人才。華為希望通過贊助競賽和組織交流活動，促進全球信息產業的發展和各國信息領域人才的培養。</p><p>任正非強調，除了 ICPC 競賽，華為也願意贊助其他學科的競賽，以此推動基礎科學的人才培養。華為歡迎 ICPC 在華為園區舉辦比賽，並將對年輕人開放研發區，讓他們體驗華為的工作環境。同時，華為願意麪向全球優秀青少年開放技術難題和實習機會，幫助他們接觸到華為的前沿技術，從而促進他們的成長和發展。</p><p>任正非表示，未知就叫科學，當今世界，科學和技術的邊界越來越接近，科學轉化為技術的時間越來越短，如果等到大學把理論完全研究明白再去進行技術開發，就已經沒有先發優勢，沒有競爭力了，所以華為每年大約投入 30-50 億美金用於基礎理論研究，與大學一起共同研究看似無用的科學。</p><p>任正非表示，<strong>我們即將進入第四次工業革命，基礎就是大算力</strong>，第四次工業革命波瀾壯闊，其規模之大不可想象，今天的年青人是未來大算力時代的領袖，二三十年之內的人工智能革命，一定會看到年青人星光閃耀。</p><p>他還説道，華為一直堅持開放和擁抱全球人才的原則，願意與學術界共同培養信息領域的優秀人才。華為希望通過贊助競賽和組織交流活動，促進全球信息產業的發展和各國信息領域人才的培養。</p><p>此外，任正非與 ICPC（國際大學生程序設計競賽）基金會及教練和金牌獲得者的學生的談話紀要也已公開。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-a1c508c2ce7831689f3da34cc08ddee6dcb.png" referrerpolicy="no-referrer"></p><p>▲<u><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Ficpc.pku.edu.cn%2Fxwdt%2F152848.htm" target="_blank">http://icpc.pku.edu.cn/xwdt/152848.htm</a></u></p><hr><p>本次談話紀要全文：</p><p>感謝 ICPC 基金會主席及十幾位教練帶了 58 位各國世界計算機競賽的金牌獲得者，來我們公司考察與競賽。我們會繼續支持你們的全球活動，也希望通過你們將全球大學生數學、物理、生物…… 競賽引進來，我們同樣給予贊助與支持。</p><p><strong>一、我們即將進入第四次工業革命，基礎就是大算力，今天的年青人，明天有可能就是第四次工業革命的領袖。我們支持競賽的目的是要為年青人搭建一個綻放生命火花的舞台。</strong></p><p>團隊協作既是競賽致勝的基礎，也是維持生存的基礎，更是人類更加繁榮的需要。我們需要彼此緊密合作，大家互相聚在一起，相互激發和擠壓，就會有新的科學技術爆發出來。這次，來自 25 個國家的精英們歡聚一堂，我們認識了，就有了共同交流的平台。教練與學生、學生與學生、賽隊與賽隊之間可以互相激發，可能就留下了火種，擦出了火花，年青人們把火種帶回祖國，去點燃了自己國家的大火。新的科學技術一定能創造更多的社會財富，消除貧困，使人類的生活能夠改善，走共同富裕的道路。</p><p>第四次工業革命波瀾壯闊，其規模之大不可想象。今天的年青人是未來大算力時代的領袖，人類社會對你們具有很大的期望，二三十年之內的人工智能革命，一定會看到你們星光閃耀。</p><p><strong>二、華為一貫秉持發現、發展人才，但絕不壟斷人才的原則。堅持開放，擁抱全世界人才。</strong></p><p>世界的發展離不開技術的進步與人才的交流，更快的速度和更好的人才是國家繁榮的基礎。華為願意與學術界共同培養信息領域的優秀人才，但絕不壟斷人才。這些人才在華為鍛鍊、學習、成長之後，將來各自迴歸他們的祖國，也有利於各國信息產業的振興。</p><p><strong>三、對於競賽，我們會長期穩定地支持發展，贊助全球和各區域大賽的組織。華為願意贊助 ICPC 教練、參賽人員等來中國交流。華為資助競賽不以華為為目的。我們不僅要堅持，還要加大對這類活動的贊助。</strong></p><p>支持未來 ICPC 全球賽在中國的舉辦，並邀請優秀選手和教練來中國多走走、多看看。比如北京、深圳、杭州、上海、貴州……，也可以去新疆、西藏等邊疆省份感受一下，還有一些小縣城也非常漂亮，值得去看看，瞭解中國的產業發展與城市建設；坐坐高鐵，體會中國的發展速度；喝喝咖啡，吃吃燒烤，感受中國的美食和文化氛圍。</p><p>除了支持或協辦全球軟件大賽，我們也要支持其他學科的競賽，例如信息、數學、物理、化學、生物學、神經網絡…… 等，對這些學科的青少年逐步開始支持，激發對科學研究的興趣，從而促進基礎科學的人才培養。</p><p><strong>四、我們會開放全球的園區，支持 ICPC 在華為園區舉辦的比賽，同時也會對大家開放研發區，邀請年輕人才來體驗華為的工作環境。</strong></p><p>華為願意麪向全球優秀青少年開放信息領域的技術難題、開放實習與研究機會，幫助接觸華為的端邊管雲平台、參與攀登珠峯的基礎和前沿探索；也可以通過多種渠道，比如組織難題挑戰賽事、黃大年茶思屋的開放研討等，讓青少年瞭解產業現實的挑戰，在做題突破中能夠得獎，這樣就節省了勤工儉學的時間用於更好地學習，通過這個過程，也能讓年輕人更好地成長。</p><hr><h3>現場問答環節：</h3><p>俄羅斯 ICPC 教練：我作為 ICPC 冠軍隊教練已經 10 年了。很多公司支持人才發展，但可能因為與業務沒有直接的關係，他們就不太願意支持大規模競賽如 ICPC。自從華為在本地建立起了資源中心，支持競賽，一切都發生了很大變化。我發現華為不僅是為了招聘人才，更多的是幫助本地社區去發展人才。我們獲得了競賽部門的大力支持，我的冠軍團隊也有 25 人加入了華為各個部門。我想問，華為為什麼覺得支持競賽對業務發展這麼重要，或者是必須要做的事情呢？</p><p><strong>任正非：</strong>俄羅斯是一個偉大的國家。葉卡捷琳娜引進了西方的繪畫、音樂、哲學……，同一個時代，中國清朝走的是閉關鎖國的道路，因此俄羅斯早於中國實現了工業化。在此基礎上，基礎理論研究得到前蘇聯的重視，也取得了很大的成就，例如茹可夫斯基、門捷列夫、羅蒙諾索夫、波波夫……。近期比如，前蘇聯六十年代有位科學家彼得・烏菲姆契夫，最先發現鑽石切面有無線電反射功能，但前蘇聯研究了半天覺得這個東西沒用，為什麼？因為做不到，沒有意義，所以批准了數學家的論文公開發表。但美國人看了以後，如獲至寶，花 20 年時間把 F22 隱形飛機做出來了。</p><p>華為公司雖然是一個商業公司，但是並不是唯利是圖的公司。比如説我們資助競賽是真心誠意的，並非是要獲得人才，以後我們還加大競賽活動的贊助。剛才跟 Bill 主席喝咖啡，我們講了希望通過你們把信息、數學、物理、化學、生物學、神經網絡…… 的競賽都可以引到中國來。跟我們有關無關，我們都可以給予支持。就像 Bill 主席講的，科學技術要用於創造更多的社會財富，消除貧困，走共同富裕的道路。</p><p>Sun Teck（新加坡國立大學副教授、IOI 成員，新加坡信息奧賽主席，前 ICPC 賽隊教練）：首先，感謝華為大力支持我們訓練學生並參加競賽。其次我想介紹一下另外兩個競賽組織：一是 IOI（國際信息學奧賽），是 ICPC 的下游合作伙伴，主要是去發現、培養人才。IOI 遇到一些問題，90 多個國家加入，仍有柬埔寨、老撾、文萊、緬甸等很多國家沒有加入，這些國家需要我們的支持，這和華為傳播信息技術、連接世界的願景也是一致的。已經加入 IOI 的國家也面臨一些問題，比如沒有足夠資源去培訓學生因而很少贏得獎項，從而沒有機會參與到 ICPC，希望華為能夠幫助 IOI 的發展。另外一個是 EGOI（歐洲女生信息學奧賽），是專門為女子辦的，這是一個很好的趨勢。今天的 58 人裏只有一位女生，佔不到 2%，關於如何實現競賽中的性別平衡，希望華為能夠支持。</p><p><strong>任正非：</strong>新加坡立國時，李光耀定了兩個最重要的政策，第一確定了國家語言為英文，連接了一個非常大的世界；另一語言是漢語，準確來説説是普通話和簡體字，這樣就把兩個大世界都連起來了。今天我們進行計算機競賽，就要統一計算機的語言，統一大算力時代的標準，通過我們喝咖啡，通過我們交流，消除我們之間的障礙和隔閡。</p><p>這次我們把參加的 25 個國家連接起來了，星星之火可以燎原，點燃你們國家的大火。歡迎教練和年輕人，隨時到中國來，你們已經加了我們很多同事、朋友的通信方式了，可以保持溝通和聯繫。今天你們這些年青人就是我們永久的夥伴。除了 ICPC，我們也要支持 IOI, 以及數學、物理、化學、生物學、神經網絡等學科的競賽，一起促進基礎科學的人才培養。</p><p>Meza（智利聖瑪利亞理工大學計算機科學教授、ICPC 拉美地區主管）：我感到很驕傲，因為一位拉美選手獲得了本次冠軍，當然我們還有很多優秀學生。或許是因為美洲有相關限制，在拉美，華為的工作機會不多，華為是否歡迎拉美人才來實習，比如來中國會不會有一些系統化的支持？</p><p><strong>任正非：</strong>無論是拉美還是其他國家的優秀人才，我們都歡迎到華為來。我們有個網絡平台叫「黃大年茶思屋」，學生可以在上面聯繫相關專家溝通，如果專家覺得你應該到中國來面對面地一起實習，都是可以的。舉一個簡單的例子，美國傾舉國之力打擊的 5G 是誰發明的？其中的 Polar 碼是誰發明的？是土耳其的 Arikan 教授。他十幾年前發表了一篇數學論文，發表兩週以後我們發現了這篇文章，就組織了數千科學家和專家研究解析並工程化，才做出了今天領先世界的 5G。所以，天涯何處無芳草？到處都有優秀人才，當然大概率是在美國。天才從哪個地方冒出來，誰都不知道，歡迎在網絡上和我們的專家溝通。</p><p>北京大學教授、ICPC 亞洲東部區域競賽總監：過去的十幾年中都是美國公司在贊助，但從幾年前華為開始贊助全球性的活動，終於中國公司也能站出來贊助全球的教育活動，我們感到非常自豪。我想請問您對高等教育有什麼樣的期望？</p><p><strong>任正非：</strong>我們不僅要繼續資助活動，而且我認為資助力度還不夠，要繼續加強。</p><p>高等教育應該因材施教，不要老強調統一的教材；中小學教育，「不要輸在起跑線上」這個口號，我認為是不正確的，不能讓優秀的學生等跑。中國教育一定要振興起來，華為公司這些年由 7000 多位高鼻子的外國科學家、專家，13800 多位留學生，大多數是博士，再加上十多萬咱們中國的優秀學生，組成研發隊伍，才扭轉了困難。如果美國將來關閉一些學科，不允許中國留學生去留學的話，那我們就只能從中國大學獲得人才，大學不能同質化。</p><p>法國選手：有一種科學研究叫無用研究，説它無用其實是短期還不知道它應用到哪裏，這種研究可能主要是由大學而不是公司完成，但其實這種研究長期來看是非常重要的。華為對這種這類無用研究的是什麼看法？華為會不會投資這類研究？</p><p><strong>任正非：</strong>什麼叫科學？未知就叫科學。現在大家都知道，美國在科學研究上自由化程度是比較高的。在二戰前，美國基礎研究是很薄弱的，基本上是依賴歐洲的理論來支撐其工業、航空、航天……，如同今天中國對西方的依賴，大量的定理定律、公式、發明…… 都來自歐洲。二戰結束後，美國發現自己是跟在歐洲後面跑，因為美國基本上沒多少基礎理論積澱。美國科學家範內瓦爾・布什，寫了一本書叫《科學：無盡的前沿》，提出美國要研究看起來沒有用的、遙遠的東西，就是研究了很多「無用」的科學，美國在二戰以後基礎科學就蓬勃發展。到 90 年代以後美國普林斯頓大學一個教授叫司托克斯寫了一本書《基礎科學與技術創新: 巴斯德象限》，關於如何通過應用牽引科學的探索，把「無用」的科學聚集起來變成有用的。在這個數字時代，美國稱雄了世界，我們就是搭上了時代的數字列車發展起來的。</p><p>當今時代，科學和技術的邊界越來越接近，科學轉化為技術的時間越來越短，如果等到大學把理論完全研究明白，我們再去進行技術開發，就已經沒有先發優勢，沒有競爭力了。所以我們自己也開始重視基礎理論研究，每年大約投入 30-50 億美金用於基礎理論研究。我們和大學一起並駕齊驅、互相嵌入式地共同研究這些看似無用的科學。</p><p>巴西選手：因為美國製裁，近年華為遇到了不少的困難，我想知道華為是如何應對，是否已經做好了準備，能夠在國際市場上可持續發展？以及是否要恢復和美國的關係，還是説不用跟美國恢復關係仍然能夠持續發展？</p><p><strong>任正非：</strong>美國製裁對我們來説確實是壓力，但是壓力也是動力。打壓之前，我們把基礎平台建在美國。美國打壓以後，我們被迫把平台切換到另一個平台，這是艱難的。經過這四年的攻堅，20 萬員工的拼搏奮鬥，我們基本上建立了自己的平台了，將來和美國的平台不一定在同一個基礎上運行，但互聯互通是一定的。</p><p>孟加拉國選手：這次 ICPC 參賽者有沒有機會加入華為？未來職業發展機會是什麼？</p><p><strong>任正非：</strong>我們的競賽活動完全是學術性的，與加入華為沒有直接關係。如果你有意願加入華為，可以向我們當地的人力資源部門去申請，我們歡迎全世界優秀人才加入華為。孟加拉有將近 2 億人口，西方曾判斷孟加拉會是下一個新興的工業國家。現在孟加拉有你這樣的優秀人才，慢慢地會引導國家走向更快的發展。但更快發展的基礎是什麼？是速度。希望你能夠帶頭，把所學所獲帶回孟加拉，把國家發展提高到一個新的速度。</p><p>ICPC 墨西哥 &amp; 中美地區主管：一些科技公司如甲骨文、思科在墨西哥設置了研發中心。我想請問未來華為是否有計劃在墨西哥或者是在拉美設置研發機構？</p><p><strong>任正非：</strong>海外研發的佈局，需要問我們 2012 實驗室的主任，我們把您的意見帶回去。墨西哥有很燦爛的文明，瑪雅文化現代人到今天也還沒有完全搞明白。墨西哥文明起源很早，我們相信這種文明在世界各國都會有。我們也可能會考慮到那裏，但還是要根據 2012 實驗室的具體部署來。以前我們的部署是以美國為中心、分佈全世界，後來美國打擊我們，我們就以歐洲為中心，逐漸以歐亞為中心，拉美就去的少了。拉美還受美國的管制，我們還要進一步評估一下管制的狀況。</p><p>俄羅斯選手：華為公司有這麼多人，通過怎樣的管理實現高效運作？</p><p><strong>任正非：</strong>在創立公司之初我訪問了美國，以 IBM 為主體去理解他們的管理。第一，IBM 的企業目標管理，就是為客戶服務，一切都要以客戶為中心，這樣企業就有了一個整體方向感，這個方向感把員工凝聚起來了。第二，學習 IBM 推行 IPD，就是在研發中怎麼加入市場、服務代表，IPD 是一個前瞻性的領導組織來引導研發前進。接下來又向 IBM 學習 IFS、ISC 財務和供應鏈管理。這樣，流程體系就清楚了。最重要的是分配問題，我們就研究華為財富在哪兒，財富怎麼分配。我們認為財富在員工的腦袋裏面，把腦袋拿來稱一稱到底有多重，就給你分多少。我們的分配方式，勞動分三，資本分一。</p><p>冰島選手：不知道是真的假的，我之前聽説您本人是果粉？</p><p><strong>任正非：</strong>因為我女兒在美國讀書，如果不用蘋果，她上課就很不方便。我們不要排外，我們也經常探究蘋果的產品為什麼做得好，也能看到我們與蘋果之間的差距。有一個老師是很幸福的，可以有學習機會，有做比較的機會。如果從這些角度來説我是果粉呢，也不為過。</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 19 Sep 2023 10:26:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/258695</guid>
            <link>https://www.oschina.net/news/258695</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[微軟 AI 研究人員意外泄露 38TB 內部數據]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">雲安全初創公司 Wiz 的研究人員<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.wiz.io%2Fblog%2F38-terabytes-of-private-data-accidentally-exposed-by-microsoft-ai-researchers%23security-risks-in-the-ai-pipeline-53" target="_blank">報告</a>了一起發生在微軟 AI GitHub 存儲庫上的數據泄露事件，其中包括 3 萬多條內部 Microsoft Teams 消息的泄露；而這一切都是由一個配置錯誤的 SAS 令牌所引起。</span></p><p><span style="color:#000000">Wiz 指出，<span style="background-color:#ffffff">數據泄露源於微軟人工智能研究小組</span>下的一個名為<code>robust-models-transfer</code>的倉庫<span style="background-color:#ffffff">；該存儲庫包含可用於構建新神經網絡的圖像識別模型和訓練數據集。此次泄露是由其中一個訓練數據文件引起的，該文件託管在 Azure 存儲帳戶中。微軟方面原本打算僅公開共享 AI 訓練數據集，但意外地開放了對包含該數據集的整個 Azure 存儲帳戶的訪問權限。</span></span></p><p><span style="color:#000000">研究人員在掃描後發現，<span style="background-color:#ffffff">配置錯誤的帳戶導致了 38 TB 的微軟內部文件泄露，其中包括兩名員工工作站的</span><span style="background-color:#ffffff">磁盤</span><span style="background-color:#ffffff">備份。</span>這些備份包含敏感的個人數據，涵蓋 Microsoft services 的密碼、密鑰以及來自 359 名微軟員工的 30,000 多條內部 Microsoft Teams 消息。</span></p><p><img height="418" src="https://oscimg.oschina.net/oscnet/up-88f8ade4d873149ff786e4d451232457b72.png" width="500" referrerpolicy="no-referrer"></p><p><img height="367" src="https://oscimg.oschina.net/oscnet/up-149c6bcfd37adc22e051de3892ba542104e.png" width="500" referrerpolicy="no-referrer"></p><p><img height="486" src="https://oscimg.oschina.net/oscnet/up-9d5cc6df05d4c596395a22515834cbc75a1.png" width="500" referrerpolicy="no-referrer"></p><p>且除了過於寬鬆的訪問範圍之外，令牌還被錯誤配置為允許「完全控制」權限而不是隻讀權限。這意味着，攻擊者不僅可以查看存儲帳戶中的所有文件，還可以刪除和覆蓋現有文件。</p><p>不過研究人員指出，此存儲帳戶並未直接向公眾公開，而是一個私有存儲帳戶。「微軟的開發人員使用了一種名為 SAS tokens 的 Azure 機制，該機制允許創建一個可共享的鏈接，授予對 Azure 存儲賬戶數據的訪問權限--而經過檢查，該存儲賬戶看起來仍然是完全私有的。」</p><p><img height="286" src="https://oscimg.oschina.net/oscnet/up-c51fde2b8a33a7092286ee6cf33280d7771.png" width="500" referrerpolicy="no-referrer"></p><p><span style="color:#000000">Wiz 最初於 6 月 22 日發現了該問題，並在不久後向微軟報告。6 月 24 日，微軟宣佈撤銷 SAS 令牌，並於 8 月 16 日完成了潛在影響的內部調查。</span></p><p><span style="color:#000000">報告總結稱，共享人工智能數據集這一簡單步驟卻導致了重大數據泄露，根本原因在於使用了賬戶 SAS 令牌作為共享機制。由於缺乏監控和管理，SAS 令牌存在安全風險，應儘可能限制其使用。「這些令牌很難跟蹤，因為微軟沒有在 Azure 門戶中提供集中管理這些令牌的方法。此外，這些令牌可以配置為永久有效，沒有過期時間上限。因此，將賬戶 SAS 令牌用於外部共享是不安全的，應避免使用。」</span></p><p><span style="color:#000000">並建議組織提高人工智能開發過程的相關安全風險意識，確保安全團隊與數據科學和研究團隊密切合作，以確保定義適當的防護欄。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 19 Sep 2023 09:24:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/258688/microsoft-38tb-internal-data</guid>
            <link>https://www.oschina.net/news/258688/microsoft-38tb-internal-data</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[議題徵集｜Flink Forward Asia 2023 正式啓動]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="margin-left:0px; margin-right:0px; text-align:start"><span><span><span><span><span style="color:#24292e"><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span><img alt="1" src="https://oscimg.oschina.net/oscnet/up-4db90028a890acd5c61100f4f31eae97aca.png" referrerpolicy="no-referrer"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="margin-left:0; margin-right:0; text-align:center"><span><span><span><span><span style="color:#24292e"><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span><span style="color:FF6a00"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsurvey.aliyun.com%2Fapps%2Fzhiliao%2F081fLSOu4" rel="nofollow" target="_blank">點擊投遞議題</a></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="margin-left:0; margin-right:0; text-align:start"><span><span><span><span><span style="color:#24292e"><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>作為最受 Apache Flink 社區開發者期盼的年度峯會之一，<strong>Flink Forward Asia 2023</strong>&nbsp;已正式啓動！本屆 Flink Forward Asia（以下簡稱 FFA ） 重新迴歸線下，預計將於 12 月 8 - 9 日在北京舉辦。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="margin-left:0; margin-right:0; text-align:start"><span><span><span><span><span style="color:#24292e"><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>延續 FFA 慣例，峯會所有議題均為開放徵集而來，並由專業的議題評選委員會評分篩選，確保內容代表行業領先水平。今年，議題組委會將持續集結全球多行業一線廠商，圍繞 Flink 核心技術、行業實踐、平台建設、實時湖倉、數據集成等多個熱門方向，以及 Flink 社區孵化出的 Flink CDC、Apache Paimon、Flink ML 等優質項目，為開發者奉上實時計算領域的技術盛宴。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="margin-left:0; margin-right:0; text-align:start"><span><span><span><span><span style="color:#24292e"><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>FFA 2023 官網：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fflink-forward.org.cn%2F" rel="nofollow" target="_blank">https://flink-forward.org.cn/</a></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><span id="OSC_h2_1"></span><h2><span><span><span><span><span style="color:#181818 !important"><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>議題投遞方式</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></h2><span id="OSC_h3_2"></span><h3><span><span><span><span><span style="color:#181818 !important"><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>PC 端：</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></h3><p style="margin-left:0; margin-right:0; text-align:start"><span><span><span><span><span style="color:#24292e"><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>打開 FFA 2023 官網，點擊<strong>「議題投遞」</strong></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="margin-left:0; margin-right:0; text-align:start"><span><span><span><span><span style="color:#24292e"><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>FFA 2023 官網：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fflink-forward.org.cn%2F" rel="nofollow" target="_blank">https://flink-forward.org.cn/</a></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="margin-left:0; margin-right:0; text-align:start"><span><span><span><span><span style="color:#24292e"><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span><img alt="" src="https://ucc.alicdn.com/gfbp4bwpctdbo_20230912_8481bebde87041b8ab38bb125e5e3929.png" referrerpolicy="no-referrer"><img alt="" src="https://oscimg.oschina.net/oscnet/up-811e1576263083b10a09316dc51017ade6a.png" referrerpolicy="no-referrer"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><span id="OSC_h3_3"></span><h3><span><span><span><span><span style="color:#181818 !important"><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>移動端：</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></h3><p style="margin-left:0; margin-right:0; text-align:start"><span><span><span><span><span style="color:#24292e"><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>掃描下方二維碼 ⬇️</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="margin-left:0; margin-right:0; text-align:start"><span><span><span><span><span style="color:#24292e"><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span><img alt="" src="https://ucc.alicdn.com/gfbp4bwpctdbo_20230912_63220172f6924aeca6a4b16a23560323.png" referrerpolicy="no-referrer"><img alt="" height="383" src="https://oscimg.oschina.net/oscnet/up-4feeffa69a2698c22802f8adb90cbfed232.png" width="685" referrerpolicy="no-referrer"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><span id="OSC_h2_4"></span><h2><span><span><span><span><span style="color:#181818 !important"><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>議題方向</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></h2><p style="margin-left:0; margin-right:0; text-align:start"><span><span><span><span><span style="color:#24292e"><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>Flink Forward Asia 2023 將採用議題標籤的形式呈現所有大會精彩內容，圍繞 Flink 橫跨多行業，新場景。每個議題最多選擇 3 個標籤。主要標籤劃分如下：</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><ul><li>Keynote</li><li>核心技術</li><li>平台建設</li><li>行業案例</li><li>流批一體</li><li>實時數倉</li><li>Lakehouse</li><li>數據集成</li><li>OLAP</li><li>AI &amp; 特徵工程</li><li>其他</li></ul><p style="margin-left:0; margin-right:0; text-align:start"><span><span><span><span><span style="color:#24292e"><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>作為國內規模最大的開源頂級項目技術峯會之一，Flink Forward Asia 致力於集結領先的行業實踐與技術動態，參與者多為業界資深從業者。參與 Flink Forward Asia 議題分享，不僅可以同各技術領域頂級專家面對面交流，探索數字化技術下的未來趨勢，同時還能結交到一批志同道合的朋友，學習業內最富價值的一線內容，不容錯過。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="margin-left:0; margin-right:0; text-align:start"><span><span><span><span><span style="color:#24292e"><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span><strong>如果您對以上任意技術方向有積累與洞察，歡迎投遞議題！</strong>每位嘉賓最多可以投遞三個 Topic，投遞日期截止至 10 月 14 日。過程中如有問題，可以添加下方微信溝通諮詢。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="margin-left:0; margin-right:0; text-align:center"><span><span><span><span><span style="color:#24292e"><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span><span style="color:FF6a00"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsurvey.aliyun.com%2Fapps%2Fzhiliao%2F081fLSOu4" rel="nofollow" target="_blank">點擊投遞議題</a></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="margin-left:0; margin-right:0; text-align:center"><img height="816" src="https://oscimg.oschina.net/oscnet/up-02e8e2191265ae6a5f0ccc455b7643eae79.png" width="799" referrerpolicy="no-referrer"></p><span id="OSC_h2_5"></span><h2><span><span><span><span><span style="color:#181818 !important"><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>贊助與合作</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></h2><p style="margin-left:0; margin-right:0; text-align:start"><span><span><span><span><span style="color:#24292e"><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>本屆會議贊助商與合作伙伴招募中，如有合作意向可添加工作人員微信詳詢👇</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="margin-left:0; margin-right:0; text-align:center"><img height="816" src="https://oscimg.oschina.net/oscnet/up-f1dd4ea0ea65232857cc461e6e212498bff.png" width="799" referrerpolicy="no-referrer"></p><span id="OSC_h2_6"></span><h2><span><span><span><span><span style="color:#181818 !important"><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>更多推薦：</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></h2><p style="margin-left:0; margin-right:0; text-align:start"><span><span><span><span><span style="color:#24292e"><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzU3Mzg4OTMyNQ%3D%3D%26mid%3D2247501266%26idx%3D2%26sn%3De6b05a7e43a6dbaaa7cb71a4a8b5a7cc%26chksm%3Dfd384b90ca4fc286f4a02877adad726e13a201f76b8dabe7f27e98acb71c252e3fcdf3d88441%26scene%3D21%23wechat_redirect" rel="nofollow" target="_blank">投入上百人、經歷多次雙 11，Flink 已經足夠強大了嗎？</a></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="margin-left:0; margin-right:0; text-align:start"><span><span><span><span><span style="color:#24292e"><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzU3Mzg4OTMyNQ%3D%3D%26mid%3D2247500740%26idx%3D1%26sn%3De902b00fc01bec346012d50ab86c2b33%26chksm%3Dfd384d86ca4fc490db02dd2464fa6d778811bfd5af63d88645bc3f8a1c32ca4491c75e808fd9%26cur_album_id%3D1929705819747467266%26scene%3D189%23wechat_redirect" rel="nofollow" target="_blank">FFA 議程上線！實時化浪潮下，Apache Flink 還將在大數據領域掀起怎樣的變革？</a></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="margin-left:0; margin-right:0; text-align:start"><span><span><span><span><span style="color:#24292e"><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzU3Mzg4OTMyNQ%3D%3D%26mid%3D2247494243%26idx%3D1%26sn%3D6c254c281c247b21275fdab043d449f0%26chksm%3Dfd386421ca4fed37a8fef4ca1b6776e1c5f15de32596f692b23f770240a371d48731633dfba6%26cur_album_id%3D1929705819747467266%26scene%3D189%23wechat_redirect" rel="nofollow" target="_blank">實時即未來！Flink Forward Asia 2021 議程正式上線！</a></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="margin-left:0; margin-right:0; text-align:start"><span><span><span><span><span style="color:#24292e"><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzU3Mzg4OTMyNQ%3D%3D%26mid%3D2247489706%26idx%3D1%26sn%3D65afb0e5b1f46743c2b8792553a9f9c4%26chksm%3Dfd3b96e8ca4c1ffe1485276efaa24344232c249904e52c241d7e6b252ef1214a150c16c15509%26cur_album_id%3D1929705819747467266%26scene%3D189%23wechat_redirect" rel="nofollow" target="_blank">重磅發佈！Flink Forward Asia 2020 在線峯會預約開啓！</a></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><hr><span id="OSC_h2_7"></span><h2><span><span><span><span><span style="color:#181818 !important"><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>更多內容</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></h2><p style="margin-left:0; margin-right:0; text-align:start"><img height="692" src="https://oscimg.oschina.net/oscnet/up-932b84d0cda4d97e3a606851bb6ff2da0b0.png" width="1992" referrerpolicy="no-referrer"></p><span id="OSC_h3_8"></span><h3><span><span><span><span><span style="color:#181818 !important"><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>活動推薦</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></h3><p style="margin-left:0; margin-right:0; text-align:start"><span><span><span><span><span style="color:#24292e"><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>阿里雲基於 Apache Flink 構建的企業級產品-實時計算 Flink 版現開啓活動：<br> 首購 99 元包月試用，有機會贏取定製周邊禮品！<br> 產品官網：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.aliyun.com%2Fproduct%2Fbigdata%2Fsc" rel="nofollow" target="_blank">https://www.aliyun.com/product/bigdata/sc</a></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="margin-left:0px; margin-right:0px; text-align:start"><img height="1096" src="https://oscimg.oschina.net/oscnet/up-1584ed402396b0e870a64f15854ee703619.png" width="1990" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 19 Sep 2023 07:22:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/2828172/blog/10109980</guid>
            <link>https://my.oschina.net/u/2828172/blog/10109980</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[馬斯克考慮向所有推特用戶收費]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fvariety.com%2F2023%2Fdigital%2Fnews%2Felon-musk-charge-all-x-twitter-users-fee-1235726693%2F" target="_blank">據外媒報道</a>，當地時間週一，在與以色列總理本雅明·內塔尼亞胡（Benjamin Netanyahu）就人工智能展開的廣泛對話中，<strong>馬斯克提出了向 X/Twitter 的所有用戶收費的想法，以解決社交媒體機器人的問題</strong>。</p><blockquote><p><img src="https://static.oschina.net/uploads/space/2023/0919/125604_Xwg2_2720166.png" referrerpolicy="no-referrer"></p></blockquote><p>馬斯克表示，將開始每月向 X/Twitter 用戶收取少量費用。他提到 X 有 5.5 億月活躍用戶，每天在該社交網絡上發佈 1 億至 2 億條帖子。</p><p>馬斯克沒有提到向 X/Twitter 用戶收費的時間，也沒有説費用是多少。他聲稱，這是消除機器人問題的唯一方法。</p><p>馬斯克去年 10 月 27 日以 440 億美元的價格收購 Twitter。收購推特後，一些廣告客戶因對馬斯克的內容審核計劃感到擔憂紛紛撤出，導致推特的廣告收入大幅下降。</p><p>自 2022 年 10 月收購 Twitter 以來，馬斯克一直在對該平台進行改革，比如，將員工人數縮減約 80%，推出三層 API 收費制度以及每月 8 美元的 Twitter Blue 付費認證服務。</p><p>此外，馬斯克還為該公司任命了新的首席執行官琳達·亞卡里諾（Linda Yaccarino），試圖贏回廣告商。</p><p>今年 7 月 1 日，馬斯克宣佈將對用戶每天可以瀏覽的推文數量進行臨時限制。他聲稱，這是為瞭解決極端的數據抓取和系統操縱問題，這些問題可能被用來傳播錯誤信息和操縱公眾輿論。</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 19 Sep 2023 04:56:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/258652/elon-musk-charge-all-x-twitter-users-fee</guid>
            <link>https://www.oschina.net/news/258652/elon-musk-charge-all-x-twitter-users-fee</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[工信部：優先開展「元宇宙+工業製造」等行業應用標準研製]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">工信部科技司就《<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.miit.gov.cn%2Fjgsj%2Fkjs%2Fjscx%2Fbzgf%2Fart%2F2023%2Fart_115c3d913ff44ca2976df4894374f348.html" target="_blank">工業和信息化部元宇宙標準化工作組籌建方案（徵求意見稿）</a>》公開徵求意見，截止日期 2023 年 10 月 18 日。</span></p><p><span style="color:#000000">工信部表示，加快開展元宇宙領域標準化工作，統籌推進元宇宙行業標準需求研究和重點標準研製，是深入貫徹落實《國家標準化發展綱要》《新產業標準化領航工程實施方案 (2023－2035 年)》《元宇宙產業創新發展三年行動計劃 (2023－2025 年)》的重要舉措。</span></p><p><span style="color:#000000">當前，元宇宙正處於快速發展階段，面臨認識不統一、應用不規範、倫理問題突出等挑戰，亟須通過標準規範和引導元宇宙行業健康有序發展。而國內企業近期緊跟元宇宙國際發展形勢，紛紛加大研發投入，積極佈局元宇宙應用，已具備開展標準化工作的基礎條件。我國需儘快組織國內重點企業、科研院所等優勢資源，加強元宇宙行業標準化工作，並推動我國優秀實踐方案成為國際標準，提升產業綜合競爭力。</span></p><p><img height="245" src="https://oscimg.oschina.net/oscnet/up-9b6ff160913aa37ee2a89f09ee20ab45c06.png" width="500" referrerpolicy="no-referrer"></p><p><span style="color:#000000">根據《徵求意見稿》，工信部元宇宙標準化工作組工作範圍包括：</span></p><p><span style="color:#000000">（一）研究分析元宇宙領域標準化需求方向，建設和維護元宇宙行業標準體系，提出元宇宙領域行業標準制修訂項目建議；</span></p><p><span style="color:#000000">（二）開展元宇宙領域行業標準的制修訂工作；</span></p><p><span style="color:#000000">（三）預研元宇宙在工業製造、通信等領域應用標準，以及數字身份、虛擬數字人等相關領域關鍵技術標準；</span></p><p><span style="color:#000000">（四）開展元宇宙領域的標準宣貫、應用推廣以及人才培訓等工作；</span></p><p><span style="color:#000000">（五）積極對接元宇宙國際標準化組織，適時提出、參與元宇宙國際標準的制修訂工作。</span></p><p><span style="color:#000000"><img height="238" src="https://oscimg.oschina.net/oscnet/up-98b0f959e9024bd923f9f071adde962e028.png" width="500" referrerpolicy="no-referrer"></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span style="color:#000000">成立後工作計劃包括：</span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span style="color:#000000"><strong><strong>（一）</strong></strong><strong><strong>加強標準頂層設計，</strong></strong><strong><strong>梳理標準化路線圖</strong></strong><strong><strong>。</strong></strong>結合前期研究基礎，組織國內元宇宙產學研用各方，加強體現元宇宙典型特徵的標準體系研究和完善，編制元宇宙標準化路線圖，明確標準化重點方向和研製順序，成套成體系開展元宇宙標準制定。</span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span style="color:#000000"><strong><strong>（二</strong></strong><strong><strong>）</strong></strong><strong><strong>聚焦</strong></strong><strong><strong>行業</strong></strong><strong><strong>發展需求，加快重點標準研製。</strong></strong>按照急用先行的原則，重點加快研製元宇宙術語、參考架構等基礎通用標準，元宇宙身份體系、數字內容生成、跨域互操作等關鍵技術標準，優先開展「元宇宙+工業製造」等行業應用標準研製。</span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span style="color:#000000"><strong><strong>（三</strong></strong><strong><strong>）</strong></strong><strong><strong>強化前沿技術融合</strong></strong><strong><strong>，</strong></strong><strong><strong>推動行業標準預研。</strong></strong>面向隱私保護、內容監管、數據安全等元宇宙領域中新技術、新產品、新業態、新模式，加快開展關鍵技術和產業發展研究，加強與腦機接口、生成式人工智能、量子信息等領域技術融合創新。</span></p><p style="margin-left:.0001pt; margin-right:0; text-align:left"><span style="color:#000000"><strong><strong>（四</strong></strong><strong><strong>）</strong></strong><strong><strong>開展</strong></strong><strong><strong>標準</strong></strong><strong><strong>貫標推廣</strong></strong><strong><strong>，</strong></strong><strong><strong>促進</strong></strong><strong><strong>標準應用實施。</strong></strong>開展工業元宇宙、城市元宇宙、虛擬數字人等應用標準研究，指導行業協會、標準化專業機構和技術組織，面向元宇宙產業的生產方、使用方開展標準宣貫，引導企業在研發、生產、管理等環節對標達標，提升標準應用的有效性。</span></p><p style="text-align:justify"><span style="color:#000000"><strong><strong>（五</strong></strong><strong><strong>）</strong></strong><strong><strong>加快</strong></strong><strong><strong>國際標準</strong></strong><strong><strong>佈局</strong></strong><strong><strong>，提升</strong></strong><strong><strong>未來</strong></strong><strong><strong>產業競爭。</strong></strong>鼓勵國內企事業單位深度參與國際標準化活動，基於我國優勢技術和豐富的應用場景，適時提出國際標準提案。依託國內元宇宙行業標準化工作基礎，積極推動在 ISO、IEC、ITU 等國際標準化組織成立元宇宙標準化相關組織，提升我國元宇宙產業綜合競爭力。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 19 Sep 2023 03:33:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/258645</guid>
            <link>https://www.oschina.net/news/258645</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Google 上線網頁版 Emoji Kitchen —— Emoji 表情合成]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Google 上線了網頁版「Emoji Kitchen」。該功能允許用戶選取兩個 emoji，由此生成一個新 emoji。</p><p>Emoji Kitchen 此前只在 Gboard Android 版提供。目前可以在 Google 搜索欄搜索 Emoji Kitchen 開始使用。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-e37339a80b692e4416f0ec2ddafed13766d.png" referrerpolicy="no-referrer"></p><p>Emoji Kitchen 是谷歌 Gboard 鍵盤於 2020 年新增加的一個表情創意功能。該功能允許 Android 用戶將兩個 emoji 表情符號合成製作出表情包後，發送出去。</p><p>現在無論是 Google Chrome 或者 Safari，移動端還是桌面端，只要在 Google 搜索欄輸入「Emoji Kitchen」即可體驗這款合成 emoji 的產品。</p><p><img height="851" src="https://static.oschina.net/uploads/space/2023/0919/104120_pPak_2720166.png" width="1096" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 19 Sep 2023 02:40:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/258637</guid>
            <link>https://www.oschina.net/news/258637</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Gitee 推薦 | 基於 HBase Client API 設計的 SQL 查詢器 HydraQL]]>
            </title>
            <description>
                <![CDATA[<p align="center"><a href="https://gitee.com/link?target=https%3A%2F%2Fhydraql.com"><img src="http://leo-jie-pic.oss-cn-beijing.aliyuncs.com/blog/4imexl.png" width="45%" referrerpolicy="no-referrer"></a></p><p align="center"><strong>🍬 HydraQL [ˈhaɪdrəQL]，是基於 HBase 原生客戶端 API 設計的一款 SQL 查詢器，專為簡化 HBase 的使用而打造。</strong></p><p align="center">
👉 <a href="https://gitee.com/link?target=https%3A%2F%2Fhydraql.com">https://hydraql.com/</a> 👈
</p><p align="center"><a target="_blank" href="https://gitee.com/link?target=https%3A%2F%2Fsearch.maven.org%2Fartifact%2Fcom.hydraql%2Fhydraql"><img src="https://img.shields.io/:maven3+-maven-blue.svg" referrerpolicy="no-referrer"></a><a target="_blank" href="https://gitee.com/link?target=https%3A%2F%2Fopensource.org%2Flicense%2Fmit%2F"><img src="https://img.shields.io/:license-mit-blue.svg" referrerpolicy="no-referrer"></a><a target="_blank" href="https://gitee.com/link?target=https%3A%2F%2Fwww.oracle.com%2Fjava%2Ftechnologies%2Fjavase%2Fjavase-jdk8-downloads.html"><img src="https://img.shields.io/badge/JDK-8+-green.svg" referrerpolicy="no-referrer"></a></p><hr><p><a href="https://gitee.com/weixiaotome/hydra-ql/blob/master/README-EN.md"><strong>🌎English Documentation</strong></a></p><hr><h2><a id="user-content-簡介" class="anchor" href="https://gitee.com/weixiaotome/hydra-ql#%E7%AE%80%E4%BB%8B"></a>📚簡介</h2><p><code>HydraQL</code> 是基於 <code>hbase-clinet</code> API 設計的一款 SQL 查詢器，專為簡化 HBase 的使用而打造。</p><p><code>HydraQL</code>旨在提供一種更直觀和易用的方式來查詢和操作 HBase 數據庫。通過使用 SQL 語法或更精簡的 API，
用戶就可以輕鬆讀寫 HBase 表中的數據，而無需深入瞭解和編寫複雜的方法調用。</p><p>與 Phoenix 相比，<code>HydraQL</code>中的 SQL 語法更輕量，無需引入額外的組件和配置即可使用，但目前還不支持二級索引。</p><h3><a id="user-content-hydraql 的名稱由來" class="anchor" href="https://gitee.com/weixiaotome/hydra-ql#hydraql%E7%9A%84%E5%90%8D%E7%A7%B0%E7%94%B1%E6%9D%A5"></a>🎁HydraQL 的名稱由來</h3><p><code>HydraQL</code>由 Hydra + SQL 拼接而來，其名稱<strong>Hydra</strong>引用了「九頭蛇」，象徵着在處理 HBase 數據時的靈活性和多功能性。
<strong>hql</strong> 是其簡稱，一種類 SQL 的語言，其在執行時，會被翻譯成<code>hbase-client</code>的原生 API 來讀寫 HBase 表中的數據。</p><h3><a id="user-content-hydraql 的理念" class="anchor" href="https://gitee.com/weixiaotome/hydra-ql#hydraql%E7%9A%84%E7%90%86%E5%BF%B5"></a>🍺HydraQL 的理念</h3><p><code>HydraQL</code> 是 HBase 的衍生工具集，它融合了 hql、HBatis、hbase-shell、hbase-thrift 等 API 的功能，你可以按需引用，也可以<strong>拷貝</strong>和修改源碼使用，
這並不會有什麼限制，只希望能及時反饋 bug，或提供更好的建議。</p><hr><h2><a id="user-content-️模塊信息" class="anchor" href="https://gitee.com/weixiaotome/hydra-ql#%EF%B8%8F%E6%A8%A1%E5%9D%97%E4%BF%A1%E6%81%AF"></a>⚙️模塊信息</h2><p>項目結構：</p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line">├── LICENSE</span><span id="LC2" class="line">├── README.md</span><span id="LC3" class="line">├── antlr</span><span id="LC4" class="line">├── bin</span><span id="LC5" class="line">├── build</span><span id="LC6" class="line">├── hydraql-adapter</span><span id="LC7" class="line">│&nbsp;&nbsp; ├── hydraql-adapter-common</span><span id="LC8" class="line">│&nbsp;&nbsp; ├── hydraql-adapter_1.2</span><span id="LC9" class="line">│&nbsp;&nbsp; ├── hydraql-adapter_1.4</span><span id="LC10" class="line">│&nbsp;&nbsp; ├── hydraql-adapter_2.2</span><span id="LC11" class="line">├── hydraql-common</span><span id="LC12" class="line">├── hydraql-console</span><span id="LC13" class="line">├── hydraql-dsl</span><span id="LC14" class="line">├── hydraql-examples</span><span id="LC15" class="line">├── hydraql-tests</span><span id="LC16" class="line">│&nbsp;&nbsp; ├── hydraql-example</span><span id="LC17" class="line">│&nbsp;&nbsp; ├── hydraql-shell-example</span><span id="LC18" class="line">│&nbsp;&nbsp; └── spring-boot-starter-hydraql-example</span><span id="LC19" class="line">├── hydraql-shell</span><span id="LC20" class="line">│&nbsp;&nbsp; ├── hydraql-shell-core</span><span id="LC21" class="line">│&nbsp;&nbsp; ├── hydraql-shell_1.2</span><span id="LC22" class="line">│&nbsp;&nbsp; ├── hydraql-shell_1.4</span><span id="LC23" class="line">│&nbsp;&nbsp; ├── hydraql-shell_2.2</span><span id="LC24" class="line">├── hydraql-template</span><span id="LC25" class="line">├── hydraql-thrift</span><span id="LC26" class="line">└── spring-boot-starter-hydraql</span></pre><div class="markdown-code-block-copy-btn"></div></div></div><p>核心模塊介紹：</p><table><thead><tr><th>模塊</th><th>介紹</th></tr></thead><tbody><tr><td>hydraql-common</td><td>對一些公共方法的封裝</td></tr><tr><td>hydraql-dsl</td><td>hql 的定義，以及使用 antr4 解析 hql，並轉換 hbase-client 的調用</td></tr><tr><td>hydraql-adapter</td><td>統一 HBase 數據讀寫的接口，並針對不同版本的<code>hbase-client</code> api 進行適配和增強，屏蔽了多版本下 hbase-client api 不兼容</td></tr><tr><td>hydraql-template</td><td>依賴 hydraql-adapter，對外統一暴露為模版類和模版方法</td></tr><tr><td>hydraql-tests</td><td>利用 HBaseMiniCluster 來做單元測試</td></tr><tr><td>spring-boot-starter-hydraql</td><td>可以利用 spring-boot-starter-hydraql 與 Spring Boot 輕鬆集成</td></tr><tr><td>hydraql-thrift</td><td>對 HBase thrift API 的池化和封裝</td></tr><tr><td>hydraql-shell</td><td>對 HBase Shell 的封裝，支持直接在 java 進程中執行 hbase-shell 的 JRuby 環境，可以利用該模塊，封裝 web-hbase-shell</td></tr><tr><td>hydraql-console</td><td>hql 的命令行交互程序</td></tr></tbody></table><h2><a id="user-content-️功能特性" class="anchor" href="https://gitee.com/weixiaotome/hydra-ql#%EF%B8%8F%E5%8A%9F%E8%83%BD%E7%89%B9%E6%80%A7"></a>🛠️功能特性</h2><p>對<code>hbase-client</code>原生 API 進行了統一的接口定義，屏蔽了底層 API 的複雜調用方式，消除了跨版本升級過程中 API 不兼容的問題。
在保障原有功能的同時，額外擴展了其他優秀特性，列舉如下：</p><ul class="task-list"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" checked="" disabled=""> 定義了統一的接口規範，消除了不同版本<code>hbase-client</code>API 之間的差異</li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" checked="" disabled=""> HQL，以類 SQL 的形式讀寫 HBase 的表中數據</li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" checked="" disabled=""> HBatis, 類似 MyBatis，提供<strong>ORM</strong>的特性，支持以註解的方式快速定義表、列簇、字段的數據模型，在保存和查詢數據時，底層自動做數據類型轉換</li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" checked="" disabled=""> 對 HBase 的原生 thrift API 進行池化封裝，提供了 HBaseThriftPool 的功能</li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" checked="" disabled=""> 利用 spring-boot-starter-hydraql 可與 SpringBoot 無縫集成</li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" checked="" disabled=""> 支持 kerberos 認證，支持 kerberos 認證的超級用戶代理普通用戶</li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" checked="" disabled=""> 支持類似 hdfs 的 hbase.client.hedged.read 功能，在讀主集羣達到超時閾值或異常時，自動降級讀備集羣數據，此功能要求 HBase 主備集羣互相 Replication</li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" checked="" disabled=""> hydraql-shell，把 hbase-shell 封裝到一個 jar 包中，可被其他項目通過 maven 等方式依賴，這在你想開發 hbase-web-shell 的功能時非常有用</li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" checked="" disabled=""> hydraql-console，命令行交互工具，可以同時執行 hql 和 hbase-shell 的指令，可完全替代 hbase-shell 來使用</li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled=""> HBatis，類似於 myBatis，提供配置文件管理 HQL 的功能（規劃中）</li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled=""> thrift 連接池中連接數的動態擴所容能力（規劃中）</li></ul><hr><h2><a id="user-content-文檔" class="anchor" href="https://gitee.com/weixiaotome/hydra-ql#%E6%96%87%E6%A1%A3"></a>📝文檔</h2><p><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.docs.hydraql.com">📘中文文檔</a></p><p><a href="https://apidoc.gitee.com/weixiaotome/HydraQL/" rel="nofollow">📙參考 API</a></p><p><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FB">🎬視頻介紹</a></p><hr><h2><a id="user-content-支持 hydraql" class="anchor" href="https://gitee.com/weixiaotome/hydra-ql#%E6%94%AF%E6%8C%81hydraql"></a>🪙支持 HydraQL</h2><h3><a id="user-content-捐贈" class="anchor" href="https://gitee.com/weixiaotome/hydra-ql#%E6%8D%90%E8%B5%A0"></a>💳捐贈</h3><p>如果你覺得 HydraQL 不錯，可以請維護者吃包辣條~，在此表示感謝^_^。</p><p align="center"><a target="_blank"><img alt="贊助" src="http://leo-jie-pic.oss-cn-beijing.aliyuncs.com/blog/9zbk1v.png?raw=true" referrerpolicy="no-referrer"></a></p><hr><h2><a id="user-content-使用指南" class="anchor" href="https://gitee.com/weixiaotome/hydra-ql#%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97"></a>📦使用指南</h2><h3><a id="user-content-maven" class="anchor" href="https://gitee.com/weixiaotome/hydra-ql#maven"></a>🍊Maven</h3><p>在普通 maven 項目中使用，在項目的 pom.xml 的 dependencies 中加入以下內容:</p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="nt">&lt;properties&gt;</span></span><span id="LC2" class="line"><span class="nt">&lt;hydraql.hbase.adapter.version&gt;</span>1.2<span class="nt">&lt;/hydraql.hbase.adapter.version&gt;</span></span><span id="LC3" class="line"><span class="c">&lt;!--    &lt;hydraql.hbase.adapter.version&gt;1.4&lt;/hydraql.hbase.adapter.version&gt;--&gt;</span></span><span id="LC4" class="line"><span class="c">&lt;!--    &lt;hydraql.hbase.adapter.version&gt;2.2&lt;/hydraql.hbase.adapter.version&gt;--&gt;</span></span><span id="LC5" class="line"><span class="nt">&lt;/properties&gt;</span></span><span id="LC6" class="line"></span><span id="LC7" class="line"><span class="nt">&lt;dependency&gt;</span></span><span id="LC8" class="line"><span class="nt">&lt;groupId&gt;</span>com.hydraql<span class="nt">&lt;/groupId&gt;</span></span><span id="LC9" class="line"><span class="nt">&lt;artifactId&gt;</span>hydraql-template_${hydraql.hbase.adapter.version}<span class="nt">&lt;/artifactId&gt;</span></span><span id="LC10" class="line"><span class="nt">&lt;version&gt;</span>1.0.0<span class="nt">&lt;/version&gt;</span></span><span id="LC11" class="line"><span class="nt">&lt;/dependency&gt;</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><p>在 Spring Boot 項目中使用，在項目的 pom.xml 的 dependencies 中加入以下內容:</p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="nt">&lt;properties&gt;</span></span><span id="LC2" class="line"><span class="nt">&lt;hydraql.hbase.adapter.version&gt;</span>1.2<span class="nt">&lt;/hydraql.hbase.adapter.version&gt;</span></span><span id="LC3" class="line"><span class="c">&lt;!--    &lt;hydraql.hbase.adapter.version&gt;1.4&lt;/hydraql.hbase.adapter.version&gt;--&gt;</span></span><span id="LC4" class="line"><span class="c">&lt;!--    &lt;hydraql.hbase.adapter.version&gt;2.2&lt;/hydraql.hbase.adapter.version&gt;--&gt;</span></span><span id="LC5" class="line"><span class="nt">&lt;/properties&gt;</span></span><span id="LC6" class="line"></span><span id="LC7" class="line"><span class="nt">&lt;dependency&gt;</span></span><span id="LC8" class="line"><span class="nt">&lt;groupId&gt;</span>com.hydraql<span class="nt">&lt;/groupId&gt;</span></span><span id="LC9" class="line"><span class="nt">&lt;artifactId&gt;</span>spring-boot-starter-hydraql_${hydraql.hbase.adapter.version}<span class="nt">&lt;/artifactId&gt;</span></span><span id="LC10" class="line"><span class="nt">&lt;version&gt;</span>1.0.0<span class="nt">&lt;/version&gt;</span></span><span id="LC11" class="line"><span class="nt">&lt;/dependency&gt;</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><p>根據所需 hbase 的版本來指定不同的<code>hydraql.hbase.adapter.version</code>，目前支持的 hbase 版本有：1.2.x，1.4.x，2.0.x ~ 2.2.x，</p><p>更多 HBase 版本的支持還在持續構建中 ～</p><ul><li><a href="https://gitee.com/link?target=https%3A%2F%2Frepo1.maven.org%2Fmaven2%2Fcom%2Fhydraql%2Fhydraql%2F1.0.0%2F">Maven 中央庫</a></li></ul><blockquote><p>🔔️注意
最新版本的發行包可能更新不及時，同時，hydraql 在構建發行包時，默認把 hbase--shaded-client 的依賴一起打包。
如果對 hbase 的版本要求強一致，可以選擇修改 hbase-client 的版本後，自行編譯安裝，再在項目中引入</p></blockquote><h3><a id="user-content-gradle" class="anchor" href="https://gitee.com/weixiaotome/hydra-ql#gradle"></a>🍐Gradle</h3><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line">implementation 'com.hydraql:hydraql-template_1.2:1.0.0'</span><span id="LC2" class="line">implementation 'com.hydraql:hydraql-template_1.4:1.0.0'</span><span id="LC3" class="line">implementation 'com.hydraql:hydraql-template_2.2:1.0.0'</span></pre><div class="markdown-code-block-copy-btn"></div></div></div><h3><a id="user-content-編譯安裝" class="anchor" href="https://gitee.com/weixiaotome/hydra-ql#%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85"></a>🚽編譯安裝</h3><p>訪問<code>HydraQL</code>的 GItHub 主頁：<a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FCCweixiao%2FHydraQL">https://github.com/CCweixiao/HydraQL</a> 下載整個項目源碼（master 分支）然後進入 HydraQL 項目的根目錄下執行：</p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line">sh bin/build.sh 1.2/1.4/2.2</span></pre><div class="markdown-code-block-copy-btn"></div></div></div><p>或</p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="c"># 默認 1.2</span></span><span id="LC2" class="line">mvn clean <span class="nb">install</span><span class="nt">-Dmaven</span>.test.skip<span class="o">=</span><span class="nb">true</span></span><span id="LC3" class="line"></span><span id="LC4" class="line"><span class="c"># 1.4</span></span><span id="LC5" class="line">mvn clean <span class="nb">install</span><span class="nt">-Dmaven</span>.test.skip<span class="o">=</span><span class="nb">true</span><span class="nt">-Dhbase</span>.profile<span class="o">=</span>1.4</span><span id="LC6" class="line"></span><span id="LC7" class="line"><span class="c"># 2.2 </span></span><span id="LC8" class="line">mvn clean <span class="nb">install</span><span class="nt">-Dmaven</span>.test.skip<span class="o">=</span><span class="nb">true</span><span class="nt">-Dhbase</span>.profile<span class="o">=</span>2.2</span></pre><div class="markdown-code-block-copy-btn"></div></div></div><p>如果你想在本地進行開發，擴展額外的功能，請確保已經安裝了 Java8 和 maven3.6+，同時建議在本地部署一個可連通的 HBase 開發環境。
建議使用 docker 來快速搭建一個 HBase 的單機環境，可以參考博客：<a href="https://gitee.com/link?target=https%3A%2F%2Fblog.csdn.net%2Ffeinifi%2Farticle%2Fdetails%2F121174846">https://blog.csdn.net/feinifi/article/details/121174846</a></p><h3><a id="user-content-快速入門" class="anchor" href="https://gitee.com/weixiaotome/hydra-ql#%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8"></a>快速入門</h3><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="nd">@Test</span></span><span id="LC2" class="line"><span class="kd">public</span><span class="kt">void</span><span class="nf">testSaveAndGet</span><span class="o">(){</span></span><span id="LC3" class="line"><span class="nc">Configuration</span><span class="n">conf</span><span class="o">=</span><span class="nc">HBaseConfiguration</span><span class="o">.</span><span class="na">create</span><span class="o">();</span></span><span id="LC4" class="line"><span class="nc">HBaseTableTemplate</span><span class="n">tableTemplate</span><span class="o">=</span><span class="nc">HBaseTableTemplate</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="n">conf</span><span class="o">);</span></span><span id="LC5" class="line"></span><span id="LC6" class="line"><span class="nc">Map</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span><span class="nc">Object</span><span class="o">&gt;</span><span class="n">data</span><span class="o">=</span><span class="k">new</span><span class="nc">HashMap</span><span class="o">&lt;&gt;(</span><span class="mi">2</span><span class="o">);</span></span><span id="LC7" class="line"><span class="n">data</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">"f1:name"</span><span class="o">,</span><span class="s">"leo"</span><span class="o">);</span></span><span id="LC8" class="line"><span class="n">data</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">"f1:age"</span><span class="o">,</span><span class="mi">18</span><span class="o">);</span></span><span id="LC9" class="line"><span class="n">tableTemplate</span><span class="o">.</span><span class="na">save</span><span class="o">(</span><span class="s">"test_table"</span><span class="o">,</span><span class="s">"1001"</span><span class="o">,</span><span class="n">data</span><span class="o">);</span></span><span id="LC10" class="line"><span class="nc">HBaseRowData</span><span class="n">rowData</span><span class="o">=</span><span class="n">tableTemplate</span><span class="o">.</span><span class="na">getRow</span><span class="o">(</span><span class="s">"test_table"</span><span class="o">,</span><span class="nc">GetRowParam</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="s">"1001"</span><span class="o">).</span><span class="na">build</span><span class="o">());</span></span><span id="LC11" class="line"><span class="o">}</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><p>更多測試用例請參考：<a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FCCweixiao%2FHydraQL%2Fblob%2Fmaster%2Fhydraql-tests%2Fhydraql-template-test%2Fsrc%2Ftest%2Fjava%2Fcom%2Fhydraql%2Ftemplate%2FHBaseTableTestTemplateTest.java">更多測試用例</a></p><h2><a id="user-content-使用手冊" class="anchor" href="https://gitee.com/weixiaotome/hydra-ql#%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C"></a>使用手冊</h2><h3><a id="user-content-連接配置" class="anchor" href="https://gitee.com/weixiaotome/hydra-ql#%E8%BF%9E%E6%8E%A5%E9%85%8D%E7%BD%AE"></a>連接配置</h3><p><strong>普通 Java 項目</strong></p><p><strong>普通認證</strong></p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="c1">// 普通認證</span></span><span id="LC2" class="line"><span class="nc">Configuration</span><span class="n">conf</span><span class="o">=</span><span class="nc">HBaseConfiguration</span><span class="o">.</span><span class="na">create</span><span class="o">();</span></span><span id="LC3" class="line"><span class="n">conf</span><span class="o">.</span><span class="na">set</span><span class="o">(</span><span class="s">"hbase.zookeeper.quorum"</span><span class="o">,</span><span class="s">"myhbase"</span><span class="o">);</span></span><span id="LC4" class="line"><span class="n">conf</span><span class="o">.</span><span class="na">set</span><span class="o">(</span><span class="s">"hbase.zookeeper.property.clientPort"</span><span class="o">,</span><span class="s">"2181"</span><span class="o">);</span></span><span id="LC5" class="line"><span class="c1">// 請按需引入一些額外所需的客戶端配置</span></span><span id="LC6" class="line"><span class="n">conf</span><span class="o">.</span><span class="na">set</span><span class="o">(</span><span class="s">"hbase.client.retries.number"</span><span class="o">,</span><span class="s">"3"</span><span class="o">);</span></span><span id="LC7" class="line"><span class="nc">HBaseTableTemplate</span><span class="n">tableTemplate</span><span class="o">=</span><span class="nc">HBaseTableTemplate</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="n">conf</span><span class="o">);</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><p>或者在項目的 src/main/resources 目錄下放入<code>hbase-site.xml</code>配置文件</p><p><strong>Kerberos 認證</strong></p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="nc">Configuration</span><span class="n">conf</span><span class="o">=</span><span class="nc">HBaseConfiguration</span><span class="o">.</span><span class="na">create</span><span class="o">();</span></span><span id="LC2" class="line"><span class="n">conf</span><span class="o">.</span><span class="na">set</span><span class="o">(</span><span class="s">"hbase.zookeeper.quorum"</span><span class="o">,</span><span class="s">"zk1,zk2,zk3"</span><span class="o">);</span></span><span id="LC3" class="line"><span class="n">conf</span><span class="o">.</span><span class="na">set</span><span class="o">(</span><span class="s">"hbase.zookeeper.property.clientPort"</span><span class="o">,</span><span class="s">"2181"</span><span class="o">);</span></span><span id="LC4" class="line"><span class="n">conf</span><span class="o">.</span><span class="na">set</span><span class="o">(</span><span class="s">"hbase.security.authentication"</span><span class="o">,</span><span class="s">"kerberos"</span><span class="o">);</span></span><span id="LC5" class="line"></span><span id="LC6" class="line"><span class="c1">// 下面配置是 kerberos 認證方式所需</span></span><span id="LC7" class="line"><span class="n">conf</span><span class="o">.</span><span class="na">set</span><span class="o">(</span><span class="s">"kerberos.principal"</span><span class="o">,</span><span class="s">"hbase@HADOOP.LEO.COM"</span><span class="o">);</span></span><span id="LC8" class="line"><span class="n">conf</span><span class="o">.</span><span class="na">set</span><span class="o">(</span><span class="s">"keytab.file"</span><span class="o">,</span><span class="s">"/etc/hbase/conf/hbase.keytab"</span><span class="o">);</span></span><span id="LC9" class="line"><span class="c1">// 設置 kerberos 代理用戶，默認為空即不進行設置，需保證 hbase 有代理其他用戶的權限</span></span><span id="LC10" class="line"><span class="n">conf</span><span class="o">.</span><span class="na">set</span><span class="o">(</span><span class="s">"kerberos.proxy.user"</span><span class="o">,</span><span class="s">"leojie"</span><span class="o">);</span></span><span id="LC11" class="line"><span class="n">conf</span><span class="o">.</span><span class="na">set</span><span class="o">(</span><span class="s">"hbase.regionserver.kerberos.principal"</span><span class="o">,</span><span class="s">"hbase/_HOST@HADOOP.LEO.COM"</span><span class="o">);</span></span><span id="LC12" class="line"><span class="n">conf</span><span class="o">.</span><span class="na">set</span><span class="o">(</span><span class="s">"hbase.master.kerberos.principal"</span><span class="o">,</span><span class="s">"hbase/_HOST@HADOOP.LEO.COM"</span><span class="o">);</span></span><span id="LC13" class="line"><span class="c1">// 指定 kdc 服務相關的配置方式有如下兩種：</span></span><span id="LC14" class="line"><span class="c1">// 方式一：指定 krb5.conf 路徑</span></span><span id="LC15" class="line"><span class="n">conf</span><span class="o">.</span><span class="na">set</span><span class="o">(</span><span class="s">"java.security.krb5.conf"</span><span class="o">,</span><span class="s">"/etc/krb5.conf"</span><span class="o">);</span></span><span id="LC16" class="line"><span class="c1">// 方式二：指定 java.security.krb5.realm 和 java.security.krb5.kdc</span></span><span id="LC17" class="line"><span class="c1">// conf.set("java.security.krb5.realm", "HADOOP.LEO.COM");</span></span><span id="LC18" class="line"><span class="c1">// conf.set("java.security.krb5.kdc", "你自己的 kdc 服務地址");</span></span><span id="LC19" class="line"><span class="c1">// 一些額外的客戶端參數</span></span><span id="LC20" class="line"><span class="n">conf</span><span class="o">.</span><span class="na">set</span><span class="o">(</span><span class="s">"hbase.client.retries.number"</span><span class="o">,</span><span class="s">"3"</span><span class="o">);</span></span><span id="LC21" class="line"><span class="nc">HBaseTableTemplate</span><span class="n">tableTemplate</span><span class="o">=</span><span class="nc">HBaseTableTemplate</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="n">conf</span><span class="o">);</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><p><strong>Spring Boot 項目</strong></p><p><strong>普通認證</strong></p><p>application.yaml</p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="na">spring</span><span class="pi">:</span></span><span id="LC2" class="line"><span class="na">datasource</span><span class="pi">:</span></span><span id="LC3" class="line"><span class="na">hbase</span><span class="pi">:</span></span><span id="LC4" class="line"><span class="na">zk-quorum</span><span class="pi">:</span><span class="s">zk_host1,zk_host2,zk_host3</span></span><span id="LC5" class="line"><span class="na">zk-client-port</span><span class="pi">:</span><span class="m">2181</span><span class="c1"># (可選，默認 2181)</span></span><span id="LC6" class="line"><span class="na">dfs-root-dir</span><span class="pi">:</span><span class="s">/hbase</span><span class="c1"># (可選，默認/hbase)</span></span><span id="LC7" class="line"><span class="na">zk-node-parent</span><span class="pi">:</span><span class="s">/hbase</span><span class="c1"># (可選，默認/hbase)</span></span><span id="LC8" class="line"><span class="na">security-auth-way</span><span class="pi">:</span><span class="s">simple</span><span class="c1"># (可選，默認 simple)</span></span><span id="LC9" class="line"><span class="na">client-properties</span><span class="pi">:</span><span class="s">hbase.client.retries.number=3;key1=value2</span></span><span id="LC10" class="line"><span class="na">server</span><span class="pi">:</span></span><span id="LC11" class="line"><span class="na">port</span><span class="pi">:</span><span class="m">8088</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><p><strong>Kerberos 認證</strong></p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="na">spring</span><span class="pi">:</span></span><span id="LC2" class="line"><span class="na">datasource</span><span class="pi">:</span></span><span id="LC3" class="line"><span class="na">hbase</span><span class="pi">:</span></span><span id="LC4" class="line"><span class="na">zk-quorum</span><span class="pi">:</span><span class="s">myhbase</span></span><span id="LC5" class="line"><span class="na">zk-client-port</span><span class="pi">:</span><span class="m">2181</span></span><span id="LC6" class="line"><span class="na">dfs-root-dir</span><span class="pi">:</span><span class="s">/hbase</span></span><span id="LC7" class="line"><span class="na">zk-node-parent</span><span class="pi">:</span><span class="s">/hbase</span></span><span id="LC8" class="line"><span class="na">security-auth-way</span><span class="pi">:</span><span class="s">kerberos</span></span><span id="LC9" class="line"><span class="na">kerberos-principal</span><span class="pi">:</span><span class="s">hbase@HADOOP.LEO.COM</span></span><span id="LC10" class="line"><span class="na">keytab-file-path</span><span class="pi">:</span><span class="s">/etc/hbase/conf/hbase.keytab</span></span><span id="LC11" class="line"><span class="na">kerberos-proxy-user</span><span class="pi">:</span><span class="s">test</span></span><span id="LC12" class="line"><span class="na">rs-kerberos-principal</span><span class="pi">:</span><span class="s">hbase/_HOST@HADOOP.LEO.COM</span></span><span id="LC13" class="line"><span class="na">master-kerberos-principal</span><span class="pi">:</span><span class="s">hbase/_HOST@HADOOP.LEO.COM</span></span><span id="LC14" class="line"><span class="na">krb5-conf-path</span><span class="pi">:</span><span class="s">/etc/krb5.conf</span></span><span id="LC15" class="line"><span class="na">krb5-realm</span><span class="pi">:</span></span><span id="LC16" class="line"><span class="na">krb5-kdc-server-addr</span><span class="pi">:</span></span><span id="LC17" class="line"><span class="na">client-properties</span><span class="pi">:</span><span class="s">hbase.client.retries.number=3</span></span><span id="LC18" class="line"><span class="na">server</span><span class="pi">:</span></span><span id="LC19" class="line"><span class="na">port</span><span class="pi">:</span><span class="m">8088</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="nd">@Service</span></span><span id="LC2" class="line"><span class="kd">public</span><span class="kd">class</span><span class="nc">HBaseAdminService</span><span class="o">{</span></span><span id="LC3" class="line"><span class="nd">@Autowired</span></span><span id="LC4" class="line"><span class="kd">private</span><span class="nc">BaseHBaseAdminTemplate</span><span class="n">adminTemplate</span><span class="o">;</span></span><span id="LC5" class="line"></span><span id="LC6" class="line"><span class="kd">public</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span><span class="nf">allTables</span><span class="o">()</span><span class="o">{</span></span><span id="LC7" class="line"><span class="k">return</span><span class="n">adminTemplate</span><span class="o">.</span><span class="na">listTableNames</span><span class="o">();</span></span><span id="LC8" class="line"><span class="o">}</span></span><span id="LC9" class="line"><span class="o">}</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><h3><a id="user-content-hydraql-template 模塊介紹" class="anchor" href="https://gitee.com/weixiaotome/hydra-ql#hydraql-template%E6%A8%A1%E5%9D%97%E4%BB%8B%E7%BB%8D"></a>hydraql-template 模塊介紹</h3><p><code>hydraql-template</code>模塊中封裝了三類模版操作類，分別是：</p><ul><li>HBaseAdminTemplate: 對 Admin 中方法的封裝，比如：創建表，創建 namespace，list 表等</li><li>HBaseTableTemplate: 對 Table 中方法的封裝，比如：put，get，scan，delete 等</li><li>HBaseSqlTemplate: 提供 hql 的功能</li></ul><p><img src="http://leo-jie-pic.oss-cn-beijing.aliyuncs.com/blog/r8hxhq.png" alt="UML" referrerpolicy="no-referrer"></p><p><strong>普通項目</strong></p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="c1">// 數據讀寫 API 的操作模版類</span></span><span id="LC2" class="line"><span class="nc">Configuration</span><span class="n">conf</span><span class="o">=</span><span class="nc">HBaseConfiguration</span><span class="o">.</span><span class="na">create</span><span class="o">();</span></span><span id="LC3" class="line"><span class="nc">BaseHBaseTableTemplate</span><span class="n">tableTemplate</span><span class="o">=</span><span class="nc">HBaseTableTemplate</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="n">conf</span><span class="o">);</span></span><span id="LC4" class="line"></span><span id="LC5" class="line"><span class="c1">// Admin 操作模版類</span></span><span id="LC6" class="line"><span class="nc">BaseHBaseAdminTemplate</span><span class="n">adminTemplate</span><span class="o">=</span><span class="nc">HBaseAdminTemplate</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="n">conf</span><span class="o">);</span></span><span id="LC7" class="line"></span><span id="LC8" class="line"><span class="c1">// HQL 操作模版類</span></span><span id="LC9" class="line"><span class="nc">BaseHBaseSqlTemplate</span><span class="n">sqlTemplate</span><span class="o">=</span><span class="nc">HBaseSqlTemplate</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="n">conf</span><span class="o">);</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><p><strong>SpringBoot 項目</strong></p><p>@Autowired 依賴注入</p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="nd">@Service</span></span><span id="LC2" class="line"><span class="kd">public</span><span class="kd">class</span><span class="nc">UserService</span><span class="o">{</span></span><span id="LC3" class="line"><span class="nd">@Autowired</span></span><span id="LC4" class="line"><span class="kd">private</span><span class="nc">BaseHBaseTableTemplate</span><span class="n">tableTemplate</span><span class="o">;</span></span><span id="LC5" class="line"><span class="nd">@Autowired</span></span><span id="LC6" class="line"><span class="kd">private</span><span class="nc">BaseHBaseAdminTemplate</span><span class="n">adminTemplate</span><span class="o">;</span></span><span id="LC7" class="line"><span class="nd">@Autowired</span></span><span id="LC8" class="line"><span class="kd">private</span><span class="nc">BaseHBaseSqlTemplate</span><span class="n">sqlTemplate</span><span class="o">;</span></span><span id="LC9" class="line"><span class="o">}</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><h3><a id="user-content-basehbaseadmintemplate 使用" class="anchor" href="https://gitee.com/weixiaotome/hydra-ql#basehbaseadmintemplate%E4%BD%BF%E7%94%A8"></a>BaseHBaseAdminTemplate 使用</h3><p><code>BaseHBaseAdminTemplate</code>封裝了<code>hbase-client</code>中 Admin 的常用操作，比如 namespace 的創建和刪除、表的創建和刪除、以及快照管理等等，後續這些 API 將會更加完整。</p><p><img src="https://leo-jie-pic.oss-cn-beijing.aliyuncs.com/leo_blog/2020-11-29-120523.jpg" alt="admin-api" referrerpolicy="no-referrer"></p><p><strong>創建 namespace</strong></p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="nd">@Test</span></span><span id="LC2" class="line"><span class="kd">public</span><span class="kt">void</span><span class="nf">createNameSpace</span><span class="o">()</span><span class="o">{</span></span><span id="LC3" class="line"><span class="nc">NamespaceDesc</span><span class="n">namespaceDesc</span><span class="o">=</span><span class="k">new</span><span class="nc">NamespaceDesc</span><span class="o">();</span></span><span id="LC4" class="line"><span class="n">namespaceDesc</span><span class="o">.</span><span class="na">setNamespaceName</span><span class="o">(</span><span class="s">"test_nn"</span><span class="o">);</span></span><span id="LC5" class="line"><span class="n">namespaceDesc</span><span class="o">.</span><span class="na">addNamespaceProp</span><span class="o">(</span><span class="s">"createdBy"</span><span class="o">,</span><span class="s">"leojie"</span><span class="o">);</span></span><span id="LC6" class="line"><span class="n">adminTemplate</span><span class="o">.</span><span class="na">createNamespaceAsync</span><span class="o">(</span><span class="n">namespaceDesc</span><span class="o">);</span></span><span id="LC7" class="line"><span class="o">}</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><p><strong>創建表</strong></p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="nd">@Test</span></span><span id="LC2" class="line"><span class="kd">public</span><span class="kt">void</span><span class="nf">testCreateTable</span><span class="o">()</span><span class="o">{</span></span><span id="LC3" class="line"><span class="nc">ColumnFamilyDesc</span><span class="n">f1</span><span class="o">=</span><span class="nc">ColumnFamilyDesc</span><span class="o">.</span><span class="na">newBuilder</span><span class="o">()</span></span><span id="LC4" class="line"><span class="o">.</span><span class="na">name</span><span class="o">(</span><span class="s">"f1"</span><span class="o">)</span></span><span id="LC5" class="line"><span class="o">.</span><span class="na">build</span><span class="o">();</span></span><span id="LC6" class="line"><span class="nc">ColumnFamilyDesc</span><span class="n">f2</span><span class="o">=</span><span class="nc">ColumnFamilyDesc</span><span class="o">.</span><span class="na">newBuilder</span><span class="o">()</span></span><span id="LC7" class="line"><span class="o">.</span><span class="na">name</span><span class="o">(</span><span class="s">"f2"</span><span class="o">)</span></span><span id="LC8" class="line"><span class="o">.</span><span class="na">timeToLive</span><span class="o">(</span><span class="mi">3600</span><span class="o">)</span></span><span id="LC9" class="line"><span class="o">.</span><span class="na">maxVersions</span><span class="o">(</span><span class="mi">3</span><span class="o">)</span></span><span id="LC10" class="line"><span class="o">.</span><span class="na">build</span><span class="o">();</span></span><span id="LC11" class="line"><span class="nc">HTableDesc</span><span class="n">tableDesc</span><span class="o">=</span><span class="nc">HTableDesc</span><span class="o">.</span><span class="na">newBuilder</span><span class="o">()</span></span><span id="LC12" class="line"><span class="o">.</span><span class="na">name</span><span class="o">(</span><span class="s">"leo_test_22222"</span><span class="o">)</span></span><span id="LC13" class="line"><span class="o">.</span><span class="na">addFamilyDesc</span><span class="o">(</span><span class="n">f1</span><span class="o">)</span></span><span id="LC14" class="line"><span class="o">.</span><span class="na">addFamilyDesc</span><span class="o">(</span><span class="n">f2</span><span class="o">)</span></span><span id="LC15" class="line"><span class="o">.</span><span class="na">build</span><span class="o">();</span></span><span id="LC16" class="line"><span class="n">adminTemplate</span><span class="o">.</span><span class="na">createTable</span><span class="o">(</span><span class="n">tableDesc</span><span class="o">);</span></span><span id="LC17" class="line"><span class="o">}</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><p>更多測試用例請參考 <code>hydraql-tests</code>模塊</p><h3><a id="user-content-basehbasetabletemplate 使用" class="anchor" href="https://gitee.com/weixiaotome/hydra-ql#basehbasetabletemplate%E4%BD%BF%E7%94%A8"></a>BaseHBaseTableTemplate 使用</h3><p><code>BaseHBaseTableTemplate</code>中封裝了對 HBase 表數據的讀、寫、刪除等操作。</p><p><strong>普通方式讀寫</strong></p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="nd">@Test</span></span><span id="LC2" class="line"><span class="kd">public</span><span class="kt">void</span><span class="nf">testSaveMap</span><span class="o">()</span><span class="o">{</span></span><span id="LC3" class="line"><span class="nc">Map</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span><span class="nc">Object</span><span class="o">&gt;</span><span class="n">data</span><span class="o">=</span><span class="k">new</span><span class="nc">HashMap</span><span class="o">&lt;&gt;(</span><span class="mi">2</span><span class="o">);</span></span><span id="LC4" class="line"><span class="n">data</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">"f1:name"</span><span class="o">,</span><span class="s">"leo"</span><span class="o">);</span></span><span id="LC5" class="line"><span class="n">data</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">"f1:age"</span><span class="o">,</span><span class="mi">18</span><span class="o">);</span></span><span id="LC6" class="line"><span class="n">tableTemplate</span><span class="o">.</span><span class="na">save</span><span class="o">(</span><span class="no">TEST_TABLE</span><span class="o">,</span><span class="s">"1001"</span><span class="o">,</span><span class="n">data</span><span class="o">);</span></span><span id="LC7" class="line"><span class="nc">HBaseRowData</span><span class="n">rowData</span><span class="o">=</span><span class="n">tableTemplate</span><span class="o">.</span><span class="na">getRow</span><span class="o">(</span><span class="no">TEST_TABLE</span><span class="o">,</span><span class="nc">GetRowParam</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="s">"1001"</span><span class="o">).</span><span class="na">build</span><span class="o">());</span></span><span id="LC8" class="line"><span class="nc">Assert</span><span class="o">.</span><span class="na">assertEquals</span><span class="o">(</span><span class="mi">2</span><span class="o">,</span><span class="n">rowData</span><span class="o">.</span><span class="na">getColDataContainer</span><span class="o">().</span><span class="na">size</span><span class="o">());</span></span><span id="LC9" class="line"><span class="o">}</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><p><strong>ORM 特性</strong></p><ol><li>創建數據模型類</li></ol><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="kd">public</span><span class="kd">class</span><span class="nc">CityTag</span><span class="o">{</span></span><span id="LC2" class="line"><span class="kd">private</span><span class="nc">String</span><span class="n">tagName</span><span class="o">;</span></span><span id="LC3" class="line"></span><span id="LC4" class="line"><span class="kd">public</span><span class="nf">CityTag</span><span class="o">(</span><span class="nc">String</span><span class="n">tagName</span><span class="o">)</span><span class="o">{</span></span><span id="LC5" class="line"><span class="k">this</span><span class="o">.</span><span class="na">tagName</span><span class="o">=</span><span class="n">tagName</span><span class="o">;</span></span><span id="LC6" class="line"><span class="o">}</span></span><span id="LC7" class="line"><span class="c1">// 省略 Getter/Setter/toString</span></span><span id="LC8" class="line"><span class="o">}</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="nd">@HBaseTable</span><span class="o">(</span><span class="n">namespaceName</span><span class="o">=</span><span class="s">"default"</span><span class="o">,</span><span class="n">tableName</span><span class="o">=</span><span class="s">"test_table"</span><span class="o">,</span><span class="n">defaultFamilyName</span><span class="o">=</span><span class="s">"f1"</span><span class="o">)</span></span><span id="LC2" class="line"><span class="kd">public</span><span class="kd">class</span><span class="nc">CityModel</span><span class="o">{</span></span><span id="LC3" class="line"><span class="nd">@HBaseRowKey</span></span><span id="LC4" class="line"><span class="kd">private</span><span class="nc">String</span><span class="n">cityId</span><span class="o">;</span></span><span id="LC5" class="line"><span class="kd">private</span><span class="nc">String</span><span class="n">cityName</span><span class="o">;</span></span><span id="LC6" class="line"><span class="kd">private</span><span class="nc">String</span><span class="n">cityAddress</span><span class="o">;</span></span><span id="LC7" class="line"><span class="nd">@HBaseColumn</span><span class="o">(</span><span class="n">familyName</span><span class="o">=</span><span class="s">"detail"</span><span class="o">)</span></span><span id="LC8" class="line"><span class="kd">private</span><span class="nc">Integer</span><span class="n">cityArea</span><span class="o">;</span></span><span id="LC9" class="line"><span class="nd">@HBaseColumn</span><span class="o">(</span><span class="n">familyName</span><span class="o">=</span><span class="s">"detail"</span><span class="o">,</span><span class="n">toUpperCase</span><span class="o">=</span><span class="kc">true</span><span class="o">)</span></span><span id="LC10" class="line"><span class="kd">private</span><span class="nc">Integer</span><span class="n">totalPopulation</span><span class="o">;</span></span><span id="LC11" class="line"><span class="nd">@HBaseColumn</span><span class="o">(</span><span class="n">familyName</span><span class="o">=</span><span class="s">"detail"</span><span class="o">,</span><span class="n">columnName</span><span class="o">=</span><span class="s">"cityTagList"</span><span class="o">)</span></span><span id="LC12" class="line"><span class="kd">private</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">CityTag</span><span class="o">&gt;</span><span class="n">cityTagList</span><span class="o">;</span></span><span id="LC13" class="line"><span class="c1">// 省略 Getter/Setter/toString</span></span><span id="LC14" class="line"><span class="o">}</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><p><code>@HBaseTable</code>註解用於定義 HBase 的表信息</p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="nd">@HBaseTable</span><span class="o">(</span><span class="n">namespaceName</span><span class="o">=</span><span class="s">"default"</span><span class="o">,</span><span class="n">tableName</span><span class="o">=</span><span class="s">"t2"</span><span class="o">,</span><span class="n">defaultFamilyName</span><span class="o">=</span><span class="s">"info"</span><span class="o">)</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><p>1）namespaceName：用於指定該表的命名空間，默認：default
2）tableName：用於指定該表的表名，如果不指定，表名則為類名的組合單詞拆分轉小寫加'_'拼接，如：CityModel 對應的表名為：city_model。
3）defaultFamilyName：用於定義如果有字段不特配置（@HBaseRowKey 註解中的 familyName）列簇名，則使用此處配置的列簇名。</p><p><code>@HBaseRowKey</code>註解用於定義某一個屬性字段是用作存儲 rowKey 數據的，是必須要設置的，如：</p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="nd">@HBaseRowKey</span></span><span id="LC2" class="line"><span class="kd">private</span><span class="nc">String</span><span class="n">cityId</span><span class="o">;</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><p>該註解表示 cityId 字段為 rowKey，每一個模型類必須，也只能有一個字段被標識為 rowKey。</p><p><code>@HBaseColumn</code>註解用於定義 HBase 的列簇和列名信息，如：</p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="nd">@HBaseColumn</span><span class="o">(</span><span class="n">familyName</span><span class="o">=</span><span class="s">"detail"</span><span class="o">,</span><span class="n">columnName</span><span class="o">=</span><span class="s">"TOTAL_POPULATION"</span><span class="o">,</span><span class="n">toUpperCase</span><span class="o">=</span><span class="kc">true</span><span class="o">)</span></span><span id="LC2" class="line"><span class="kd">private</span><span class="nc">Integer</span><span class="n">totalPopulation</span><span class="o">;</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><p>1）familyName：指定列簇名，不指定，則使用 defaultFamilyName 配置的列簇名。
2）columnName：指定列名，不指定則默認使用字段名的組合單詞拆分轉小寫加'_'拼接，如：isVip，對應的字段名是：is_vip
3）toUpperCase：定義字段名是否轉大寫，如：isVip -&gt; IS_VIP，默認值：false，不做轉換。</p><ol start="2"><li>存取數據</li></ol><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="nd">@Test</span></span><span id="LC2" class="line"><span class="kd">public</span><span class="kt">void</span><span class="nf">testSave</span><span class="o">()</span><span class="o">{</span></span><span id="LC3" class="line"><span class="nc">CityModel</span><span class="n">cityModel</span><span class="o">=</span><span class="nc">CityModelUtil</span><span class="o">.</span><span class="na">createDefaultCityModel</span><span class="o">();</span></span><span id="LC4" class="line"><span class="n">tableTemplate</span><span class="o">.</span><span class="na">save</span><span class="o">(</span><span class="n">cityModel</span><span class="o">);</span></span><span id="LC5" class="line"><span class="nc">GetRowParam</span><span class="n">getRowParam</span><span class="o">=</span><span class="nc">GetRowParam</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="n">cityModel</span><span class="o">.</span><span class="na">getCityId</span><span class="o">()).</span><span class="na">build</span><span class="o">();</span></span><span id="LC6" class="line"><span class="nc">Optional</span><span class="o">&lt;</span><span class="nc">CityModel</span><span class="o">&gt;</span><span class="n">cityModelRes</span><span class="o">=</span><span class="n">tableTemplate</span><span class="o">.</span><span class="na">getRow</span><span class="o">(</span><span class="n">getRowParam</span><span class="o">,</span><span class="nc">CityModel</span><span class="o">.</span><span class="na">class</span><span class="o">);</span></span><span id="LC7" class="line"><span class="nc">Assert</span><span class="o">.</span><span class="na">assertNotNull</span><span class="o">(</span><span class="n">cityModelRes</span><span class="o">);</span></span><span id="LC8" class="line"><span class="o">}</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><ol start="3"><li>批量存取數據</li></ol><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="nd">@Test</span></span><span id="LC2" class="line"><span class="kd">public</span><span class="kt">void</span><span class="nf">testSaveBatch</span><span class="o">()</span><span class="o">{</span></span><span id="LC3" class="line"><span class="nc">List</span><span class="o">&lt;</span><span class="nc">CityModel</span><span class="o">&gt;</span><span class="n">cityModelList</span><span class="o">=</span><span class="nc">CityModelUtil</span><span class="o">.</span><span class="na">createDefaultCityModelList</span><span class="o">();</span></span><span id="LC4" class="line"><span class="n">tableTemplate</span><span class="o">.</span><span class="na">saveBatch</span><span class="o">(</span><span class="n">cityModelList</span><span class="o">);</span></span><span id="LC5" class="line"><span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span><span class="n">rowKeys</span><span class="o">=</span><span class="n">cityModelList</span><span class="o">.</span><span class="na">stream</span><span class="o">().</span><span class="na">map</span><span class="o">(</span><span class="nl">CityModel:</span><span class="o">:</span><span class="n">getCityId</span><span class="o">).</span><span class="na">collect</span><span class="o">(</span><span class="nc">Collectors</span><span class="o">.</span><span class="na">toList</span><span class="o">());</span></span><span id="LC6" class="line"><span class="nc">GetRowsParam</span><span class="n">getRowsParam</span><span class="o">=</span><span class="nc">GetRowsParam</span><span class="o">.</span><span class="na">of</span><span class="o">().</span><span class="na">rowKeyList</span><span class="o">(</span><span class="n">rowKeys</span><span class="o">).</span><span class="na">build</span><span class="o">();</span></span><span id="LC7" class="line"><span class="nc">List</span><span class="o">&lt;</span><span class="nc">CityModel</span><span class="o">&gt;</span><span class="n">rows</span><span class="o">=</span><span class="n">tableTemplate</span><span class="o">.</span><span class="na">getRows</span><span class="o">(</span><span class="n">getRowsParam</span><span class="o">,</span><span class="nc">CityModel</span><span class="o">.</span><span class="na">class</span><span class="o">);</span></span><span id="LC8" class="line"><span class="nc">Assert</span><span class="o">.</span><span class="na">assertEquals</span><span class="o">(</span><span class="n">rowKeys</span><span class="o">.</span><span class="na">size</span><span class="o">(),</span><span class="n">rows</span><span class="o">.</span><span class="na">size</span><span class="o">());</span></span><span id="LC9" class="line"><span class="o">}</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><ol start="4"><li>查詢數據使用自定義的 RowMapper 解析字段</li></ol><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="nd">@Test</span></span><span id="LC2" class="line"><span class="kd">public</span><span class="kt">void</span><span class="nf">testGetByRowMapper</span><span class="o">()</span><span class="o">{</span></span><span id="LC3" class="line"><span class="nc">GetRowParam</span><span class="n">getRowParam</span><span class="o">=</span><span class="nc">GetRowParam</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="s">"a10001"</span><span class="o">).</span><span class="na">build</span><span class="o">();</span></span><span id="LC4" class="line"><span class="nc">Map</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span><span class="nc">String</span><span class="o">&gt;</span><span class="n">data</span><span class="o">=</span><span class="n">tableTemplate</span><span class="o">.</span><span class="na">getRow</span><span class="o">(</span><span class="no">TEST_TABLE</span><span class="o">,</span><span class="n">getRowParam</span><span class="o">,</span><span class="k">new</span><span class="nc">RowMapper</span><span class="o">&lt;</span><span class="nc">Map</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span><span class="nc">String</span><span class="o">&gt;&gt;()</span><span class="o">{</span></span><span id="LC5" class="line"><span class="nd">@Override</span></span><span id="LC6" class="line"><span class="kd">public</span><span class="o">&lt;</span><span class="no">R</span><span class="o">&gt;</span><span class="nc">Map</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span><span class="nc">String</span><span class="o">&gt;</span><span class="nf">mapRow</span><span class="o">(</span><span class="no">R</span><span class="n">r</span><span class="o">,</span><span class="kt">int</span><span class="n">rowNum</span><span class="o">)</span><span class="kd">throws</span><span class="nc">Exception</span><span class="o">{</span></span><span id="LC7" class="line"><span class="nc">Result</span><span class="n">result</span><span class="o">=</span><span class="o">(</span><span class="nc">Result</span><span class="o">)</span><span class="n">r</span><span class="o">;</span></span><span id="LC8" class="line"><span class="k">if</span><span class="o">(</span><span class="n">result</span><span class="o">==</span><span class="kc">null</span><span class="o">)</span><span class="o">{</span></span><span id="LC9" class="line"><span class="k">return</span><span class="k">new</span><span class="nc">HashMap</span><span class="o">&lt;&gt;(</span><span class="mi">0</span><span class="o">);</span></span><span id="LC10" class="line"><span class="o">}</span></span><span id="LC11" class="line"><span class="nc">Map</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span><span class="nc">String</span><span class="o">&gt;</span><span class="n">data</span><span class="o">=</span><span class="k">new</span><span class="nc">HashMap</span><span class="o">&lt;&gt;(</span><span class="mi">2</span><span class="o">);</span></span><span id="LC12" class="line"><span class="k">for</span><span class="o">(</span><span class="nc">Cell</span><span class="n">cell</span><span class="o">:</span><span class="n">result</span><span class="o">.</span><span class="na">listCells</span><span class="o">())</span><span class="o">{</span></span><span id="LC13" class="line"><span class="n">data</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="nc">Bytes</span><span class="o">.</span><span class="na">toString</span><span class="o">(</span><span class="nc">CellUtil</span><span class="o">.</span><span class="na">cloneFamily</span><span class="o">(</span><span class="n">cell</span><span class="o">))</span><span class="o">+</span><span class="s">":"</span><span class="o">+</span><span class="nc">Bytes</span><span class="o">.</span><span class="na">toString</span><span class="o">(</span><span class="nc">CellUtil</span><span class="o">.</span><span class="na">cloneQualifier</span><span class="o">(</span><span class="n">cell</span><span class="o">)),</span></span><span id="LC14" class="line"><span class="nc">Bytes</span><span class="o">.</span><span class="na">toString</span><span class="o">(</span><span class="nc">CellUtil</span><span class="o">.</span><span class="na">cloneValue</span><span class="o">(</span><span class="n">cell</span><span class="o">)));</span></span><span id="LC15" class="line"><span class="o">}</span></span><span id="LC16" class="line"><span class="k">return</span><span class="n">data</span><span class="o">;</span></span><span id="LC17" class="line"><span class="o">}</span></span><span id="LC18" class="line"><span class="o">}).</span><span class="na">orElse</span><span class="o">(</span><span class="k">new</span><span class="nc">HashMap</span><span class="o">&lt;&gt;(</span><span class="mi">0</span><span class="o">));</span></span><span id="LC19" class="line"><span class="nc">Assert</span><span class="o">.</span><span class="na">assertEquals</span><span class="o">(</span><span class="mi">5</span><span class="o">,</span><span class="n">data</span><span class="o">.</span><span class="na">size</span><span class="o">());</span></span><span id="LC20" class="line"><span class="o">}</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><ol start="5"><li>scan 查詢，自定義 Filter</li></ol><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="nd">@Test</span></span><span id="LC2" class="line"><span class="kd">public</span><span class="kt">void</span><span class="nf">testScanWithCustomFilter</span><span class="o">()</span><span class="o">{</span></span><span id="LC3" class="line"><span class="n">testSaveBatch</span><span class="o">();</span></span><span id="LC4" class="line"><span class="nc">ScanParams</span><span class="n">scanParams</span><span class="o">=</span><span class="nc">ScanParams</span><span class="o">.</span><span class="na">of</span><span class="o">()</span></span><span id="LC5" class="line"><span class="o">.</span><span class="na">filter</span><span class="o">(</span><span class="k">new</span><span class="nc">IHBaseFilter</span><span class="o">&lt;</span><span class="nc">Filter</span><span class="o">&gt;()</span><span class="o">{</span></span><span id="LC6" class="line"><span class="nd">@Override</span></span><span id="LC7" class="line"><span class="kd">public</span><span class="nc">Filter</span><span class="nf">customFilter</span><span class="o">()</span><span class="o">{</span></span><span id="LC8" class="line"><span class="nc">List</span><span class="o">&lt;</span><span class="nc">Filter</span><span class="o">&gt;</span><span class="n">filters</span><span class="o">=</span><span class="k">new</span><span class="nc">ArrayList</span><span class="o">&lt;&gt;(</span><span class="mi">2</span><span class="o">);</span></span><span id="LC9" class="line"><span class="c1">// 篩選 row key 大於 b20001 的數據</span></span><span id="LC10" class="line"><span class="nc">Filter</span><span class="n">rowFilter</span><span class="o">=</span><span class="k">new</span><span class="nc">RowFilter</span><span class="o">(</span><span class="nc">CompareFilter</span><span class="o">.</span><span class="na">CompareOp</span><span class="o">.</span><span class="na">GREATER</span><span class="o">,</span></span><span id="LC11" class="line"><span class="k">new</span><span class="nf">BinaryComparator</span><span class="o">(</span><span class="s">"b20001"</span><span class="o">.</span><span class="na">getBytes</span><span class="o">()));</span></span><span id="LC12" class="line"><span class="c1">// 篩選列前綴 city_address 的數據</span></span><span id="LC13" class="line"><span class="nc">ColumnPrefixFilter</span><span class="n">columnPrefixFilter</span><span class="o">=</span><span class="k">new</span><span class="nc">ColumnPrefixFilter</span><span class="o">(</span><span class="nc">Bytes</span><span class="o">.</span><span class="na">toBytes</span><span class="o">(</span><span class="s">"city_address"</span><span class="o">));</span></span><span id="LC14" class="line"><span class="c1">// 篩選列值與深圳市相等的數據</span></span><span id="LC15" class="line"><span class="nc">ValueFilter</span><span class="n">valueFilter</span><span class="o">=</span><span class="k">new</span><span class="nc">ValueFilter</span><span class="o">(</span><span class="nc">CompareFilter</span><span class="o">.</span><span class="na">CompareOp</span><span class="o">.</span><span class="na">EQUAL</span><span class="o">,</span><span class="k">new</span><span class="nc">BinaryComparator</span><span class="o">(</span><span class="nc">Bytes</span><span class="o">.</span><span class="na">toBytes</span><span class="o">(</span><span class="s">"深圳市"</span><span class="o">)));</span></span><span id="LC16" class="line"><span class="c1">// 多過濾器，注意順序</span></span><span id="LC17" class="line"><span class="n">filters</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">rowFilter</span><span class="o">);</span></span><span id="LC18" class="line"><span class="n">filters</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">columnPrefixFilter</span><span class="o">);</span></span><span id="LC19" class="line"><span class="n">filters</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">valueFilter</span><span class="o">);</span></span><span id="LC20" class="line"><span class="c1">// 需所有條件全部通過</span></span><span id="LC21" class="line"><span class="nc">FilterList</span><span class="n">andFilterList</span><span class="o">=</span><span class="k">new</span><span class="nc">FilterList</span><span class="o">(</span><span class="nc">FilterList</span><span class="o">.</span><span class="na">Operator</span><span class="o">.</span><span class="na">MUST_PASS_ALL</span><span class="o">,</span><span class="n">filters</span><span class="o">);</span></span><span id="LC22" class="line"><span class="c1">// 滿足其中一個條件即可</span></span><span id="LC23" class="line"><span class="nc">FilterList</span><span class="n">orFilterList</span><span class="o">=</span><span class="k">new</span><span class="nc">FilterList</span><span class="o">(</span><span class="nc">FilterList</span><span class="o">.</span><span class="na">Operator</span><span class="o">.</span><span class="na">MUST_PASS_ONE</span><span class="o">,</span><span class="n">filters</span><span class="o">);</span></span><span id="LC24" class="line"><span class="k">return</span><span class="n">andFilterList</span><span class="o">;</span></span><span id="LC25" class="line"><span class="o">}</span></span><span id="LC26" class="line"><span class="o">})</span></span><span id="LC27" class="line"><span class="o">.</span><span class="na">build</span><span class="o">();</span></span><span id="LC28" class="line"><span class="nc">List</span><span class="o">&lt;</span><span class="nc">CityModel</span><span class="o">&gt;</span><span class="n">cityModels</span><span class="o">=</span><span class="n">tableTemplate</span><span class="o">.</span><span class="na">scan</span><span class="o">(</span><span class="n">scanParams</span><span class="o">,</span><span class="nc">CityModel</span><span class="o">.</span><span class="na">class</span><span class="o">);</span></span><span id="LC29" class="line"><span class="nc">Assert</span><span class="o">.</span><span class="na">assertEquals</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span><span class="n">cityModels</span><span class="o">.</span><span class="na">size</span><span class="o">());</span></span><span id="LC30" class="line"><span class="o">}</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><ol start="6"><li>多版本查詢</li></ol><p>使用 HBaseRowDataWithMultiVersions 結構來接收多版本數據</p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="nd">@Test</span></span><span id="LC2" class="line"><span class="kd">public</span><span class="kt">void</span><span class="nf">testGetMultiVersions</span><span class="o">()</span><span class="kd">throws</span><span class="nc">InterruptedException</span><span class="o">{</span></span><span id="LC3" class="line"><span class="nc">Map</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span><span class="nc">Object</span><span class="o">&gt;</span><span class="n">data1</span><span class="o">=</span><span class="k">new</span><span class="nc">HashMap</span><span class="o">&lt;&gt;(</span><span class="mi">3</span><span class="o">);</span></span><span id="LC4" class="line"><span class="n">tableTemplate</span><span class="o">.</span><span class="na">save</span><span class="o">(</span><span class="no">TEST_TABLE</span><span class="o">,</span><span class="s">"b1"</span><span class="o">,</span><span class="n">data1</span><span class="o">);</span></span><span id="LC5" class="line"><span class="nc">Map</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span><span class="nc">Object</span><span class="o">&gt;</span><span class="n">data2</span><span class="o">=</span><span class="k">new</span><span class="nc">HashMap</span><span class="o">&lt;&gt;(</span><span class="mi">3</span><span class="o">);</span></span><span id="LC6" class="line"><span class="n">tableTemplate</span><span class="o">.</span><span class="na">save</span><span class="o">(</span><span class="no">TEST_TABLE</span><span class="o">,</span><span class="s">"b1"</span><span class="o">,</span><span class="n">data2</span><span class="o">);</span></span><span id="LC7" class="line"><span class="nc">Map</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span><span class="nc">Object</span><span class="o">&gt;</span><span class="n">data3</span><span class="o">=</span><span class="k">new</span><span class="nc">HashMap</span><span class="o">&lt;&gt;(</span><span class="mi">3</span><span class="o">);</span></span><span id="LC8" class="line"><span class="n">tableTemplate</span><span class="o">.</span><span class="na">save</span><span class="o">(</span><span class="no">TEST_TABLE</span><span class="o">,</span><span class="s">"b1"</span><span class="o">,</span><span class="n">data3</span><span class="o">);</span></span><span id="LC9" class="line"><span class="nc">Map</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span><span class="nc">Object</span><span class="o">&gt;</span><span class="n">data4</span><span class="o">=</span><span class="k">new</span><span class="nc">HashMap</span><span class="o">&lt;&gt;(</span><span class="mi">3</span><span class="o">);</span></span><span id="LC10" class="line"><span class="n">tableTemplate</span><span class="o">.</span><span class="na">save</span><span class="o">(</span><span class="no">TEST_TABLE</span><span class="o">,</span><span class="s">"b1"</span><span class="o">,</span><span class="n">data4</span><span class="o">);</span></span><span id="LC11" class="line"><span class="nc">Map</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span><span class="nc">Object</span><span class="o">&gt;</span><span class="n">data5</span><span class="o">=</span><span class="k">new</span><span class="nc">HashMap</span><span class="o">&lt;&gt;(</span><span class="mi">3</span><span class="o">);</span></span><span id="LC12" class="line"><span class="n">tableTemplate</span><span class="o">.</span><span class="na">save</span><span class="o">(</span><span class="no">TEST_TABLE</span><span class="o">,</span><span class="s">"b1"</span><span class="o">,</span><span class="n">data5</span><span class="o">);</span></span><span id="LC13" class="line"><span class="c1">// 省略數據構造過程</span></span><span id="LC14" class="line"><span class="nc">GetRowParam</span><span class="n">getRowParam</span><span class="o">=</span><span class="nc">GetRowParam</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="s">"b1"</span><span class="o">).</span><span class="na">versions</span><span class="o">(</span><span class="mi">5</span><span class="o">).</span><span class="na">build</span><span class="o">();</span></span><span id="LC15" class="line"><span class="nc">HBaseRowDataWithMultiVersions</span><span class="n">rowData</span><span class="o">=</span><span class="n">tableTemplate</span><span class="o">.</span><span class="na">getWithMultiVersions</span><span class="o">(</span><span class="no">TEST_TABLE</span><span class="o">,</span><span class="n">getRowParam</span><span class="o">);</span></span><span id="LC16" class="line"><span class="nc">Assert</span><span class="o">.</span><span class="na">assertEquals</span><span class="o">(</span><span class="mi">3</span><span class="o">,</span><span class="n">rowData</span><span class="o">.</span><span class="na">getColDataWithMultiVersions</span><span class="o">().</span><span class="na">size</span><span class="o">());</span></span><span id="LC17" class="line"><span class="nc">Assert</span><span class="o">.</span><span class="na">assertEquals</span><span class="o">(</span><span class="mi">4</span><span class="o">,</span><span class="n">rowData</span><span class="o">.</span><span class="na">getColDataWithMultiVersions</span><span class="o">().</span><span class="na">get</span><span class="o">(</span><span class="s">"info:name"</span><span class="o">).</span><span class="na">size</span><span class="o">());</span></span><span id="LC18" class="line"><span class="o">}</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><h3><a id="user-content-hql" class="anchor" href="https://gitee.com/weixiaotome/hydra-ql#hql"></a>HQL</h3><p>使用前首先構造<code>BaseHBaseSqlTemplate</code></p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="nc">Configuration</span><span class="n">conf</span><span class="o">=</span><span class="nc">HBaseConfiguration</span><span class="o">.</span><span class="na">create</span><span class="o">();</span></span><span id="LC2" class="line"><span class="nc">BaseHBaseSqlTemplate</span><span class="n">sqlTemplate</span><span class="o">=</span><span class="nc">HBaseSqlTemplate</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="n">conf</span><span class="o">);</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><p><strong>1. 創建表 schema</strong></p><p>使用<code>create virtual table</code>語句來創建表的 schema，如果 HBase 集羣中沒有表<code>HQL.META_DATA</code>，會先創建，然後把表解析出來的
表模型 HBaseTableSchema 對象，以 json 的格式存儲在這張元數據表中，之後每次 select 或 insert 時，加載出表 schema 的元數據。</p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="nd">@Test</span></span><span id="LC2" class="line"><span class="kd">public</span><span class="kt">void</span><span class="n">testCreateVirtualTable</span><span class="o">)</span><span class="o">{</span></span><span id="LC3" class="line"><span class="nc">String</span><span class="n">hql</span><span class="o">=</span><span class="s">"create virtual table test:test_sql (\n"</span><span class="o">+</span></span><span id="LC4" class="line"><span class="s">" row_key string isrowkey,\n"</span><span class="o">+</span></span><span id="LC5" class="line"><span class="s">" f1:id string nullable,\n"</span><span class="o">+</span></span><span id="LC6" class="line"><span class="s">" f1:name string nullable,\n"</span><span class="o">+</span></span><span id="LC7" class="line"><span class="s">" f1:age int nullable,\n"</span><span class="o">+</span></span><span id="LC8" class="line"><span class="s">" f1:job string nullable,\n"</span><span class="o">+</span></span><span id="LC9" class="line"><span class="s">" f1:pay double nullable,\n"</span><span class="o">+</span></span><span id="LC10" class="line"><span class="s">" f2:address string nullable,\n"</span><span class="o">+</span></span><span id="LC11" class="line"><span class="s">" f2:commuter string nullable\n"</span><span class="o">+</span></span><span id="LC12" class="line"><span class="s">" );"</span><span class="o">;</span></span><span id="LC13" class="line"><span class="n">sqlTemplate</span><span class="o">.</span><span class="na">createVirtualTable</span><span class="o">(</span><span class="n">hql1</span><span class="o">);</span><span class="err">`</span></span><span id="LC14" class="line"><span class="o">}</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><p>virtualTable 的名稱要與 hbase 的實際表名一致，且只能存在一個。
也可以選擇在執行 HQL 前調用 sqlTemplate.registerTableSchema 方法來手動註冊某張表的 Schema，只有註冊成功表的 Schema 之後，才能使用 hql。</p><p>打印 schema</p><p><img src="http://leo-jie-pic.oss-cn-beijing.aliyuncs.com/blog/ela83.png" alt="printSchema" referrerpolicy="no-referrer"></p><p><strong>2. 刪除表的 schema</strong></p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="nc">String</span><span class="n">hql</span><span class="o">=</span><span class="s">"drop virtual table test:test_sql;"</span><span class="o">;</span></span><span id="LC2" class="line"><span class="n">sqlTemplate</span><span class="o">.</span><span class="na">dropVirtualTable</span><span class="o">(</span><span class="n">hql2</span><span class="o">);</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><p>刪除虛擬表的操作，不會對 HBase 的原表產生任何影響。</p><p><strong>3. Insert</strong></p><p>插入一條數據</p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="k">insert</span><span class="k">into</span><span class="n">test</span><span class="p">:</span><span class="n">test_sql</span><span class="p">(</span><span class="n">row_key</span><span class="p">,</span><span class="n">f1</span><span class="p">:</span><span class="n">id</span><span class="p">,</span><span class="n">f1</span><span class="p">:</span><span class="n">name</span><span class="p">,</span><span class="n">f1</span><span class="p">:</span><span class="n">age</span><span class="p">)</span><span class="k">values</span><span class="p">(</span><span class="s1">'r1'</span><span class="p">,</span><span class="s1">'id1_v1'</span><span class="p">,</span><span class="s1">'leo1_v1'</span><span class="p">,</span><span class="mi">11</span><span class="p">)</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><p>插入多條數據</p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="k">insert</span><span class="k">into</span><span class="n">test</span><span class="p">:</span><span class="n">test_sql</span><span class="p">(</span><span class="n">row_key</span><span class="p">,</span><span class="n">f1</span><span class="p">:</span><span class="n">id</span><span class="p">,</span><span class="n">f1</span><span class="p">:</span><span class="n">name</span><span class="p">,</span><span class="n">f1</span><span class="p">:</span><span class="n">age</span><span class="p">)</span></span><span id="LC2" class="line"><span class="k">values</span><span class="p">(</span><span class="s1">'r1'</span><span class="p">,</span><span class="s1">'id1_v1'</span><span class="p">,</span><span class="s1">'leo1_v1'</span><span class="p">,</span><span class="mi">11</span><span class="p">),</span></span><span id="LC3" class="line"><span class="p">(</span><span class="s1">'r2'</span><span class="p">,</span><span class="s1">'id2_v1'</span><span class="p">,</span><span class="s1">'leo2_v1'</span><span class="p">,</span><span class="mi">21</span><span class="p">),</span></span><span id="LC4" class="line"><span class="p">(</span><span class="s1">'r3'</span><span class="p">,</span><span class="s1">'id3_v1'</span><span class="p">,</span><span class="s1">'leo3_v1'</span><span class="p">,</span><span class="mi">31</span><span class="p">)</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><p>插入數據時，使用內置的 rowKey 自定義函數</p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="k">insert</span><span class="k">into</span><span class="n">test</span><span class="p">:</span><span class="k">table</span><span class="p">(</span><span class="n">f</span><span class="p">:</span><span class="n">id</span><span class="p">,</span><span class="n">f</span><span class="p">:</span><span class="n">name</span><span class="p">,</span></span><span id="LC2" class="line"><span class="n">f</span><span class="p">:</span><span class="n">age</span><span class="p">,</span><span class="n">f2</span><span class="p">:</span><span class="n">pay</span><span class="p">,</span><span class="n">f3</span><span class="p">:</span><span class="n">detail</span><span class="p">)</span><span class="k">VALUES</span><span class="p">(</span><span class="n">md5</span><span class="p">(</span><span class="s1">'1001'</span><span class="p">),</span><span class="s1">'張三'</span><span class="p">,</span><span class="mi">23</span><span class="p">.</span><span class="mi">32</span><span class="p">,</span><span class="k">null</span><span class="p">)</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><p><strong>4. Select</strong></p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="k">select</span><span class="o">*</span><span class="k">from</span><span class="n">test</span><span class="p">:</span><span class="n">test_sql</span><span class="k">where</span><span class="n">rowKey</span><span class="o">=</span><span class="s1">'a10001'</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><p><img src="http://leo-jie-pic.oss-cn-beijing.aliyuncs.com/blog/jz8pd.png" alt="select_by_row" referrerpolicy="no-referrer"></p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="k">select</span><span class="o">*</span><span class="k">from</span><span class="n">test</span><span class="p">:</span><span class="n">test_sql</span><span class="k">where</span><span class="n">rowKey</span><span class="k">in</span><span class="p">(</span><span class="s1">'a10001'</span><span class="p">,</span><span class="s1">'a10002'</span><span class="p">,</span><span class="s1">'a10003'</span><span class="p">)</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><p><img src="http://leo-jie-pic.oss-cn-beijing.aliyuncs.com/blog/7cnqd.png" alt="in_row_keys" referrerpolicy="no-referrer"></p><p><strong>4. Delete</strong></p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="k">delete</span><span class="o">*</span><span class="k">from</span><span class="n">test</span><span class="p">:</span><span class="n">test_sql</span><span class="k">where</span><span class="n">rowKey</span><span class="o">=</span><span class="s1">'b20004'</span><span class="p">;</span></span><span id="LC2" class="line"><span class="k">delete</span><span class="n">f1</span><span class="p">:</span><span class="n">age</span><span class="k">from</span><span class="n">test</span><span class="p">:</span><span class="n">test_sql</span><span class="k">where</span><span class="n">rowKey</span><span class="o">=</span><span class="s1">'b20004'</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><hr><h2><a id="user-content-️添磚加瓦" class="anchor" href="https://gitee.com/weixiaotome/hydra-ql#%EF%B8%8F%E6%B7%BB%E7%A0%96%E5%8A%A0%E7%93%A6"></a>🏗️添磚加瓦</h2><h3><a id="user-content-分支説明" class="anchor" href="https://gitee.com/weixiaotome/hydra-ql#%E5%88%86%E6%94%AF%E8%AF%B4%E6%98%8E"></a>🎋分支説明</h3><p>HydraQL 的源碼分為兩個分支，功能如下：</p><table><thead><tr><th>分支</th><th>作用</th></tr></thead><tbody><tr><td>master</td><td>主分支，release 版本使用的分支，與中央庫提交的 jar 一致，不接收任何 pr 或修改</td></tr><tr><td>dev</td><td>開發分支，默認為下個版本的 SNAPSHOT 版本，接受修改或 pr</td></tr></tbody></table><h3><a id="user-content-提供 bug 反饋或建議" class="anchor" href="https://gitee.com/weixiaotome/hydra-ql#%E6%8F%90%E4%BE%9Bbug%E5%8F%8D%E9%A6%88%E6%88%96%E5%BB%BA%E8%AE%AE"></a>🐞提供 bug 反饋或建議</h3><p>提交問題反饋時請説明正在使用的 JDK 版本、HydraQL 版本和相關依賴庫的版本。</p><ul><li><a href="https://gitee.com/weixiaotome/hydra-ql/issues">Gitee issue</a></li><li><a href="https://gitee.com/weixiaotome/hydra-ql/issues">Github issue</a></li></ul><h3><a id="user-content-貢獻代碼的步驟" class="anchor" href="https://gitee.com/weixiaotome/hydra-ql#%E8%B4%A1%E7%8C%AE%E4%BB%A3%E7%A0%81%E7%9A%84%E6%AD%A5%E9%AA%A4"></a>🧬貢獻代碼的步驟</h3><ol><li>在 Gitee 或者 Github 上 fork 項目到自己的 repo</li><li>把 fork 過去的項目也就是你的項目 clone 到你的本地</li><li>修改代碼（記得一定要修改 dev 分支）</li><li>commit 後 push 到自己的庫（dev 分支）</li><li>登錄 Gitee 或 Github 在你首頁可以看到一個 pull request 按鈕，點擊它，填寫一些説明信息，然後提交即可。</li><li>等待維護者合併</li></ol><h3><a id="user-content-pr 遵照的原則" class="anchor" href="https://gitee.com/weixiaotome/hydra-ql#pr%E9%81%B5%E7%85%A7%E7%9A%84%E5%8E%9F%E5%88%99"></a>📐PR 遵照的原則</h3><hr><h2><a id="user-content-star-hydraql" class="anchor" href="https://gitee.com/weixiaotome/hydra-ql#star-hydraql"></a>⭐Star HydraQL</h2><h2><a id="user-content--知識星球" class="anchor" href="https://gitee.com/weixiaotome/hydra-ql#-%E7%9F%A5%E8%AF%86%E6%98%9F%E7%90%83"></a>📌 知識星球</h2>]]>
            </description>
            <pubDate>Tue, 19 Sep 2023 02:30:00 GMT</pubDate>
            <guid isPermaLink="false">https://gitee.com/weixiaotome/hydra-ql</guid>
            <link>https://gitee.com/weixiaotome/hydra-ql</link>
        </item>
        <item>
            <title>
                <![CDATA[中國這麼多 Java 開發者，應該誕生出生態級應用開發框架]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h3>1、必須要有，不然就永遠不會有</h3><p style="color:#24292e; text-align:start">應用開發框架，雖然沒有芯片、操作系統、數據庫、編程語言這些重要。但是最終呈現在用戶面前的，總是有軟件部分。而軟件系統開發，一般都需要應用開發框架，它是軟件系統的基礎性部件之一。</p><p style="color:#24292e; text-align:start">很多很多軟件系統都會有 Java 開發的部分，尤其是<strong>政府部門的軟件系統</strong>大量的使用了 Java。市場非常的大，我們有很多的 Java 程序員，更有很多技術大能，也為很多全球級的項目供獻過力量。理所應該當也要有自己的「生態級」應用開發框架，不是説卡不卡脖子的問題，而是不好意思沒有啊！外面可是隔三差五的出語言。</p><p style="color:#24292e; text-align:start">國內現在有很多好的「功能性能開發框架」，也有很多好的「快速開發框架」，還有很多好的「後台腳手架」。但是沒有像 Spring 這樣生態級的框架出現。個人覺得，這應該是有問題的、是可惜的、是遺憾的。</p><p style="color:#24292e; text-align:start">想要搞個 Java 生態級的應用開發框架。一般是以年為開發時間單位的（需要漫長的時間打磨），一般是不賺錢的。還有 Spring 生態這個巨人存在。但，真的有很多人是期待的：一個輕量的，更現代感的，最好還是國產的。</p><p style="color:#24292e; text-align:start">剛開始的確會很難；剛開始可能不如人家的完善；剛開始會有很多人質疑和漫罵。再難能有芯片難？？？不是説非要替換代別人，<span style="background-color:#f1c40f">而是必須要有，不然就永遠不會有</span>。</p><h3>2、一個美好的「生態級」應用開發框架</h3><p style="color:#24292e; text-align:start">應該是所有「功能型」框架的好朋友，就像水、土、空氣一樣<span style="background-color:#f1c40f">串起萬物生長</span>；應該是<span style="background-color:#f1c40f">接地氣</span>些，方便所有技術員快速學習和使用。比如：</p><ul><li>應該能自動裝配擴展能力（方便做第三方擴展）</li><li>應該有很多的第三方合作與便利適配（生態嘛）</li><li>應該有 IOC 和 AOP（確實更便利）</li><li>應該啓動很快（必須要遠超它的前輩）</li><li>應該內存更少，尤其是在啓動時和靜默時的內存（休息時，不該吃那麼多內存）</li><li>應該很少量的代碼（不然學習太幸苦了）</li><li>應該有自己的思考方式和性格特性（抄過來的不好）</li></ul><p style="color:#24292e; text-align:start">其實要求也不高，只要道心穩，慢慢打怪升級。最近有位技術大牛説：國外有 spring 和 apache，<strong>國內有 solon 和 dromara</strong>。</p><h3>3、論 Solon 框架的意義</h3><p style="color:#24292e; text-align:start">是一個國產的生態級 Java 應用開發框架（已發具備全球第二級別的生態）。開玩笑，兩三百個生態擴展呢。</p><ul><li>國內第一個</li></ul><p style="color:#24292e; text-align:start">從零開始構建，有自己的標準規範與開放生態。尤其沒有使用 javaee 的接口規範（它改包名了，可麻煩）。會借鑑與善用前人的成果，但絕對是原創。</p><ul><li>為什麼説是生態呢</li></ul><p style="color:#24292e; text-align:start">沒有功能，沒有集成。都是基於標準與規範的擴展與適配。同一個需求，可以有很多不同的方案選擇。這是架構的美感。當然別人家的生態框架也會是這樣。</p><ul><li>提供不同的選擇</li></ul><p style="color:#24292e; text-align:start">以前只有包子，沒得選，不管什麼場景只有包子吃。而且很多人都習慣了這樣。<span style="background-color:#f1c40f">現在是還有面條和米飯，你可以按需選擇</span>。</p><ul><li>助力信創國產化</li></ul><p style="color:#24292e; text-align:start">信創，講國產可控。但是很多軟件系統用了 spring 開發。之前是沒得選。現在可以用 solon 了。</p><ul><li>助力國產語言的成長</li></ul><p style="color:#24292e; text-align:start">當有適合的國產語言出現時，可以快速實現副本遷移。因為 solon 是原創，有自己的標準規範與開放生態，遷移起來很方便。開發語言，有好的生態框架，能優化用戶體驗，加速成長。</p><ul><li>助力部訓機構使用國產框架進行 Java 教學</li></ul><p style="color:#24292e; text-align:start">一個生態級的應用開發框架。無形之中，會有很多模式，有很多術語。應用於教學，對國產開發環境是好事。</p><ul><li>助力高校使用國產框架進行 Java 教學</li></ul><p style="color:#24292e; text-align:start">Solon 的願景裏，會有很多相關書出現。以 Solon 的視角去展現 Java。 以前是沒得選，以後可以選 Solon 相關的書，進行教學。</p><ul><li>助力 Java 開源項目成長</li></ul><p style="color:#24292e; text-align:start">以前嘛，我們的 Java 開源項目很多是「面向 Spring 編程的」。現在可以迴歸本源，「面向 Java 編程」（同時也適配下 Solon）。Java 的世界很大，有很多的不同的生態框架。</p><ul><li>助力 Java 程序員的成長</li></ul><p style="color:#24292e; text-align:start">有些 Java 程序員，如果沒有 Spring 是不能編程的。其實 Java 的世界很大，Java 之外的世界更大。見識不同的生態應用開發框架，見識不同的編程語言，可以看見更大的世界。</p><h3>4、Solon 生態框架是應運而生的</h3><p style="color:#24292e; text-align:start">這不是吹牛，之前真的是沒有，<span style="background-color:#f1c40f">這是第一個生態級的</span>。打磨五六年了。暫時，它還真是中國人的 Java 生態框架（沒別的啦）。</p><p style="color:#24292e; text-align:start">特性：</p><ul><li>啓動快 5 ～ 10 倍。<span>&nbsp;</span><strong>（更快）</strong></li><li>qps 高 2～ 3 倍。<span>&nbsp;</span><strong>（更高）</strong></li><li>運行時內存節省 1/3 ~ 1/2。<span>&nbsp;</span><strong>（更少）</strong></li><li>打包可以縮小到 1/2 ~ 1/10；比如，300Mb 的變成了 23Mb。<span>&nbsp;</span><strong>（更小）</strong></li><li>同時支持 jdk8, jdk11, jdk17, jdk21,<span>&nbsp;</span><strong>graalvm native image</strong></li></ul><p style="color:#24292e; text-align:start">簡介：</p><ul><li><strong>剋制、簡潔、高效、開放、生態</strong></li><li>支持 JDK8、JDK11、JDK17、JDK20（是同時支持）</li><li>Http、WebSocket、Socket 三種信號統一的開發體驗（俗稱：三源合一）</li><li>支持「註解」與「手動」兩種模式，按需自由操控</li><li>Not Servlet，可以適配任何基礎通訊框架（最小 0.3m 運行 rpc 架構）</li><li>獨特的 IOC/AOP 容器設計。不會因為插件變多而啓動變很慢</li><li>支持 Web、Data、Job、Remoting、Cloud 等任何開發場景</li><li>兼顧 Handler + Context 和 Listener + Message 兩種架構模式</li><li>強調插件式擴展，可擴展可切換；適應不同的應用場景</li><li>支持 GraalVm Native Image 打包</li><li>允許業務插件「熱插」、「熱拔」、「熱管理」</li></ul><p style="color:#24292e; text-align:start">預覽：</p><pre><code class="language-java"><span style="color:#4078f2">@Controller</span><span style="color:#a626a4">public</span><span style="color:#a626a4">class</span><span style="color:#c18401">App</span> {
    <span style="color:#a626a4">public</span><span style="color:#a626a4">static</span><span style="color:#a626a4">void</span><span style="color:#4078f2">main</span><span>(String[] args)</span> {
        Solon.start(App.class, args, app -&gt; {
            <em>//手寫模式</em>
            app.get(<span style="color:#50a14f">"/hello1"</span>, ctx -&gt; ctx.output(<span style="color:#50a14f">"Hello world!"</span>));
        });
    }

    <em>//註解模式</em><span style="color:#4078f2">@Get</span><span style="color:#4078f2">@Socket</span><span style="color:#4078f2">@Mapping("/hello2")</span><span style="color:#a626a4">public</span> String <span style="color:#4078f2">hello2</span><span>(String name)</span> {
        <span style="color:#a626a4">return</span> String.format(<span style="color:#50a14f">"Hello %s!"</span>, name);
    }
}
</code></pre><h3>5、什麼樣的 Java 項目用 Solon 好</h3><p style="color:#24292e; text-align:start">就像華為講的，不要因為愛國而特意買華為手機。Solon 也是，有需要就用不需要就跳過（<span style="background-color:#f1c40f">按正常的需求選擇</span>）：</p><ul><li>信創需要國產化，應該用 Solon 或者 Solon Cloud（有案例）</li><li>軍工項目要國產化，應該用 Solon 或者 Solon Cloud（有案例）</li><li>嵌入式設備，內存有限，算力差，可以用 Solon 或者 Solon Native（有案例）</li><li>客戶的希望你內存更少，可以用 Solon （有案例）</li><li>別的框架用膩了，可以用 Solon （有案例）</li><li>有新系統開發想嘗新的框架，可以用 Solon （有案例）</li><li>老系統要輕量化改造，可以用 Solon（有案例）</li></ul><p style="color:#24292e; text-align:start">作為後來者，大家的疑或是會多一些。有問題，可以去交流羣裏多交流。</p><h3>6、Solon 的代碼倉庫</h3><p style="color:#24292e; text-align:start">喜歡 Solon 的，可以幫助宣傳。喜歡但覺得不夠好的，可以助其成長。不方便切換框架的，也可支持：</p><ul><li><a href="https://gitee.com/noear/solon">https://gitee.com/noear/solon</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnoear%2Fsolon" target="_blank">https://github.com/noear/solon</a></li></ul><p style="color:#24292e; text-align:start">「<span style="background-color:#f1c40f">眾人拾柴火焰高</span>」，支持它、使用它、傳播它、一起供獻代碼：）</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 19 Sep 2023 02:28:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/258633</guid>
            <link>https://www.oschina.net/news/258633</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[微調語言模型前，需要考慮這三個關鍵方面]]>
            </title>
            <description>
                <![CDATA[<div class="content"><blockquote><p>編者按：隨着大語言模型 (LLM) 的迅速發展，越來越多團隊希望針對特定領域進行模型微調。但是實踐運用中總是存在一些困難，直接應用並不總是能達到理想效果。</p><p>本文着重探討了三個關鍵問題:</p><ul><li>利用強大模型 (如 ChatGPT) 的輸出結果來微調較弱模型是否有效？</li><li>如何選擇是採用低成本的上下文學習還是對模型進行微調？</li><li>如何處理超過模型上下文限制的長文本，讓模型理解並回答關於長文本的複雜問題？</li></ul><p>此篇文章探討了構建特定垂直領域語言模型時需要考慮的關鍵因素，能夠幫助讀者在微調大語言模型時做出明智的決策。我們衷心期望本次內容分享能幫助更多團隊高效地獲得所需的垂直領域大模型。</p><p>以下是譯文，enjoy！</p></blockquote><p><strong>🚢🚢🚢歡迎小夥伴們加入<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbaihai-idp.yuque.com%2Fmwvla8%2Fdoc%3F%23" target="_blank">AI 技術軟件及技術交流羣</a>，追蹤前沿熱點，共探技術難題~</strong></p><p><strong>作者 | Sean Smith</strong></p><p><strong>編譯 | 嶽揚</strong></p><p><img src="https://oscimg.oschina.net/oscnet/up-1f811a62864704138c6ffe1633ea11b66e6.png" alt="" referrerpolicy="no-referrer"></p><p><em>Photo by Brett Jordan on Unsplash</em></p><p>目前，市場正處於 LLMs（大語言模型）和生成式人工智能的風口上。IBM 的一項數據顯示，將近三分之二的企業高管感受到了來自投資者的壓力——要求他們加快使用生成式人工智能。自然而然，這種壓力也傳導到了數據科學和機器學習團隊，他們肩負着抓住機遇、成功應用生成式 AI 的重任。</p><p>隨着形勢的發展，LLMs 的生態系統迅速分化為開源和商業化兩種模式，「護城河」正被迅速填平。這一前所未有的局面促使許多團隊思考一個問題：我們如何使 LLM 更貼近我們的具體需求？</p><p>在本文中，我們細緻探討了構建一款特定垂直領域的 LLM 所需考慮的一些關鍵因素，包括投入時間和工程週期等，這些因素我們應該牢記在心。在這一過程中，必須瞭解最新的相關研究，特別是針對微調大語言模型的潛在侷限性和最佳實踐方面的研究。閲讀完本文後，您將掌握更多的決策思路，從而引導公司做出正確的決定：訓練還是不訓練，以及如何訓練。</p><h1>01 <strong>可能無法通過開源模型來模仿 GPT</strong></h1><p>眾所周知，OpenAI 憑藉其最新版本的 GPT 在 LLM 領域處於領先地位。因此，出於各種原因（速率限制、數據隱私、成本等），許多利益相關方可能會要求開發團隊開發部署比 GPT 效果更好的模型。這自然而然地使開發人員產生疑問：我們能否從 GPT 中生成輸出結果，並利用它們對模型進行微調？</p><p>對於這個問題的答案仍不確定，因為其似乎取決於多個因素。這項特殊的任務被稱為模仿學習（imitation learning），其涉及到使用來自更高級模型（如 GPT）的響應結果來微調、訓練一個全新的語言模型。雖然這看起來是一種從下游模型（downstream model）中提取良好性能的好方法，但這種方法也存在一些不明顯的問題。</p><p><img src="https://oscimg.oschina.net/oscnet/up-d8980c9e83809a46c9e9162febbceda9048.png" alt="" referrerpolicy="no-referrer"><em>圖表摘自參考文獻 [1]，Gudibande 等人</em></p><p>最近一篇題為《The False Promise of Imitating Proprietary LLMs》[1] 的論文揭示了使用這種方法可能會存在的一些隱患。作者通過進行實驗證明，增加許多「模仿」數據可能會導致模型性能下降。觀察上圖，我們可以在中間的圖表中發現：隨着 tokens 數量的增加，基準任務的準確性確實在下降。但是，為什麼會出現這種情況呢？</p><p>作者認為這是因為模仿模型（imitation models）學習的是其所模仿的模型的內容風格，而不是學習和理解模型輸出的內容。從上圖左側的圖表可以看出，人類評審員更喜歡模仿模型的輸出結果，而非 ChatGPT。經過探討可以發現，評審員明顯更喜歡模仿模型（imitation models）的內容風格，但並沒有仔細審查輸出內容。值得注意的是，模仿模型產生的內容往往缺乏事實依據，導致作者總結道： <strong>「模仿模型實際上體現的是 AI 助手最糟糕的一些方面：它們的回答聽起來很自信，但比 ChatGPT 的回答更缺乏事實依據。」</strong></p><p>值得注意的是，在某些情況下，模仿模型（imitation models）可以取得出色的表現。作者指出，在本地任務或者複製教師模型（teacher model）的特定行為的任務上，模仿模型可以取得良好的性能。在一項名為 "NQ-Synthetic "的研究任務中，作者要求大語言模型根據給定的語境生成 10 個相關問題和答案。令人驚訝的是，模仿模型的得分接近於 GPT 的得分。這表明，在嘗試模仿教師模型的行為時，更加專注於特定領域的模型可能會取得更好的表現。</p><p>文章中提到的一個有趣的推論，使用教師模型對模型進行微調實際上有助於降低模仿模型的 toxic（內容毒性）分數。這對於那些希望快速推出一款開源 LLM（大語言模型），而不想費力圍繞輸出構建內容過濾器的公司來説非常有用。相較於手動構建內容過濾器，公司可以選擇使用經過精心處理的數據集，通過從教師模型獲取的輸出進行訓練，以獲得一個可靠的基座。</p><p>值得一提的是微軟研究院最近發佈的 Orca 模型，它將來自 GPT 的信息或指導（signals）作為訓練數據的一部分。兩者的區別在於模型所使用的訓練數據的大小。Orca 模型在 500 萬個示例的基礎上進行微調，而全面的模仿模型僅在大約 15.1 萬個可觀測數據上進行了調優。由於我推測大多數讀者不會花費 16000 美元來進行一個隨意的 LLM 實驗，所以我更傾向於參考構建模仿模型相關的論文而非 Orca 模型進行陳述。然而，我們仍需等待更多研究結果，以明確確定模仿學習作為用於更全面任務的可行方案所需的最少示例數量。</p><p><strong>總結：由於任務的複雜程度不一，嘗試用一個性能較弱的模型去模仿 GPT 或其他高級模型的輸出可能導致模型性能不佳。</strong></p><h1>02 <strong>僅憑上下文學習就足夠了嗎?</strong></h1><p>上下文學習 (In-context learning)，也稱為少樣本學習，是一種在 prompt 中加入需要完成的特定任務示例的過程。這種方法主要適用於複雜的大語言模型，因為大部分小型開源模型尚未具備所需的靈活性（flexibility）來完成上下文學習。通常情況下，通過這種方法可以取得很好的效果，但是你是否曾想過為什麼會這樣呢？</p><p>Dai 等人[3]的論文探討了這個問題的答案，他們在論文中研究了在 prompt 中加載示例和使用相同示例對大模型進行微調之間的數學聯繫。作者證明，prompt 示例會產生元梯度（meta-gradients），這些元梯度會在推理時的前向傳播過程（forward propagation）中得到反映。而在微調時，這些示例產生了用於更新權重的真實梯度（real gradients）。因此，似乎上下文學習可以實現與微調類似的效果。如果想要更深入地瞭解這些內容，我建議閲讀這篇論文，其中詳細介紹了這些數學聯繫的具體細節。</p><p>雖然上下文學習的方法很好，但確實存在微調所不具備的侷限性。在我們擁有大量訓練數據時，微調後的模型會在訓練過程中使用真實梯度更新模型，從而利用所有數據。而在上下文學習過程中，我們只能提供有限數量的可觀測數據。於是，一個新問題便出現了：在給定大量訓練數據的情況下，我們如何才能利用與我們的輸入最相關的示例來獲得最佳模型響應？</p><p>解決該問題的一種有效方法是使用啓發式算法來選擇示例，目前 LangChain 提供了對此算法的支持。LangChain 是一個 Python 模塊，基本上包含了預構建的提示（pre-built prompts），可以簡化語言模型的工作。我們現在需要重點關注的 LangChain 工具是 ExampleSelector（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpython.langchain.com%2Fdocs%2Fmodules%2Fmodel_io%2Fprompts%2Fexample_selectors%2F%EF%BC%89%E3%80%82" target="_blank">https://python.langchain.com/docs/modules/model_io/prompts/example_selectors/）。</a></p><pre><code class="language-python">def get_similarity(seq_a: str, seq_b: str) -&gt; Union[float, int]:
 """ 
    Make a similarity heuristic,
    here we use Jaccard similarity or IOU
 
    seq_a: First sequence to compare
    seq_b: Second sequence to compare
 
    Returns:
    Similarity score (float or int)
    """
 # Tokenize
    set_a = set(seq_a.split(' '))
    set_b = set(seq_b.split(' ')) 
 
 # Calculate IOU/Jaccard similarity
 return len(set_a.intersection(set_b)) / len(set_a.union(set_b))

def example_selector(examples: List[str], input: str, examples2use: int) -&gt; List[str]:
 """ 
    Pseudo code for an example selector
 
    examples: List of training corpus
    input: Target sequence to translate
    examples2use: Number of examples to use
 
    Returns:
    List of selected examples
    """
    scores = [get_similarity(example, input) for example in examples]
    sorted_idx = [i for i, _ in sorted(enumerate(scores), key=lambda x: x[1], reverse=True)]
 return examples[sorted_idx[:examples2use]]
</code></pre><p>ExampleSelectors 是一種 prompt 操作器，該工具允許我們在推理時動態地改變使用的示例。有許多啓發式算法可以使用。上面我給出了一些偽代碼，是想要告訴大家 LangChain 的選擇器本質上是如何工作的。我在輸入序列和示例序列之間使用了 Jaccard 相似度。（譯者注：Jaccard 相似度是衡量兩個集合的相似度一種指標，本質上是集合的交集與集合的並集的比例）</p><p>採用該種方法有兩個主要優點。首先，可以根據給定的輸入，有選擇性地選擇最相關的示例，從而使 LLM 更高效的利用數據。這有別於為所有可觀測結果（observations）靜態加載幾個示例的做法。如果通過託管服務進行調整，另二個優點是可以節約成本。截至目前，使用經過微調的 Davinci 模型的成本為每 1000 個 token 0.12 美元。相比之下，使用 instruct Davinci 的價格為 0.02 美元，前者價格為後者的 500%！還不包括模型訓練費用。</p><p>需要注意的是，正如一篇現已刪除的博文[5]所透露的那樣，由於 OpenAI 尚未使用 LoRa 或 Adapters，這些價格後續可能會發生變化。儘管如此，由於必須為每個用戶維護自定義的權重，微調模型的價格可能仍然會更高。此外，這還沒有考慮到上下文中示例的成本。您的團隊需要從成本和準確性等角度，去評估是上下文學習（ICL）還是微調（fine-tuning）對完成目標任務更有意義。</p><p><strong>Takeaway：使用動態示例加載的上下文學習在某些場景下可以達到與微調相同的效果，相對成本會更低。</strong></p><h1>03 <strong>在進行最終的推理步驟之前，執行目標任務是否需要一個或多箇中間步驟？</strong></h1><p>比方説，要求模型嘗試回答關於長文檔的複雜問題。這種任務一般都要求大語言模型具備良好的語言掌握能力和理解能力。這樣又會引出一個問題：<strong>如果我們幫助語言模型將推理過程分解為多個子任務執行，類似於人類分析文檔並按順序執行任務，會怎麼樣呢？</strong><img src="https://oscimg.oschina.net/oscnet/up-6c47120688c52ada730c45b129476e8ae9e.png" alt="" referrerpolicy="no-referrer"><em>圖摘自 Sun 等人的文章[4]</em></p><p>這正是微軟公司的研究人員想要實現的目標，他們解決這一問題的方案是 PEARL[4]。PEARL 是 Planning and Executing Actions for Reasoning over Long documents 的縮寫，意為 "長文檔推理的規劃和操作執行"。這個通用框架主要分為三個步驟：</p><ul><li><strong>行為挖掘（Action Mining）</strong> ：首先，通過 prompt 讓語言模型閲讀文檔，並提取可用於回答特定領域問題的可行行為。為了提取這些行為，語言模型通常會給出一些示例的行為方式。後續我將給出關於「行為 action」的示例。</li><li><strong>規劃生成（Plan Generation）</strong> ：在生成一組用於目標任務的操作方案之後，需要要求 LLM 根據問題和上下文生成一系列需要按順序執行的操作流程。LLM 會提供一些其他目標任務的規劃樣例，以幫助構建高質量的操作流程規劃。更多技術細節可以在論文中找到。</li><li><strong>執行規劃（Plan Execution）</strong> ：模型有了操作流程規劃之後，將用戶輸入提供給模型並執行操作流程規劃。</li></ul><p><img src="https://oscimg.oschina.net/oscnet/up-aabd017db2791fdb2c2e927ff693c01c8e3.png" alt="" referrerpolicy="no-referrer"><em>行為示例，摘自 Sun 等人的文章[4]</em></p><p>在上述各個階段之間，還有一些中間步驟被用來確保目標任務的執行效果質量。作者們設置了一個自糾正步驟（self-correction step），確保計劃符合所需的格式。還有一個自完善步驟（self-refinement），用於確定此操作流程規劃是否可以作為後續用於【規劃生成】流程的小樣本示例使用。</p><p><img src="https://oscimg.oschina.net/oscnet/up-cfdea2ed47fc6e79d42be2a08ac03431893.png" alt="" referrerpolicy="no-referrer"><em>摘自 Sun 等人的文章[4]的表格</em></p><p>在進行評估時，發現 PEARL 相較於其他 GPT 模型擁有明顯的性能改進。於是可以得出結論，在某些情況下，將目標任務的解決方案劃分為多個步驟可以較明顯地幫助模型提升性能。</p><p>還有另一個情況，<strong>當上下文中的文檔數量超過語言模型所支持的數量時，設置一些中間步驟也被證明是有利的。</strong> 目前，OpenAI 使用的注意力機制的計算複雜度為 O(n²)，暫時還沒有解決這一問題的具體方案[5]。因此，大家都對如何將上下文減少到儘可能最小的形式十分感興趣。</p><p>對於不同的目標任務，有不同的處理方法。例如，如果目標任務完全圍繞實體展開，就有機會提取相關實體及其相關屬性。（譯者注：在處理文本時，可以識別出文本中的特定實體（如人名、地點、組織等），並提取這些實體的相關屬性（如年齡、地址、職位等）。通過這種方式，可以將文本中的信息轉化為結構化的形式，使得對實體和屬性的理解更加明確和系統化。這樣可以為後續的任務提供更準確和有用的信息。）可以將這種方法看作是一種有損壓縮，這種方法允許用戶將更多上下文輸入到 LLM 中。這一中間步驟的另一個好處是，可以將非結構化數據轉換為結構化格式，這使得用戶可以在不使用 LLM 的情況下也能進行明智的決策。下面是 Fei 等人的論文中展示的一個示例任務圖表[6]。 <img src="https://oscimg.oschina.net/oscnet/up-314fc02a50eaadda5d463d83c4626b8dc31.png" alt="" referrerpolicy="no-referrer"><em>圖摘自 Fei 等人發表的論文[6]</em></p><p><strong>Takeaway：將目標任務分解成較小的子任務，有助於將較複雜的問題簡化為更易管理的部分，還可以利用這些較小的任務來解決與模型限制相關的性能瓶頸問題。</strong></p><h1>04 <strong>結束語</strong></h1><p>以上是研究人員在 LLM 性能和效率這一新領域探索的一些總體思路。這並非微調模型時需要考慮的所有事項，卻是一個很好的起點，可以給我們提供一些參考。</p><p>如需進一步瞭解，Hugging Face 發表的這篇有關 LLM 訓練的文章[7]非常有趣，對於在特定領域的問題上探索模仿模型來説是一個很好的開始。</p><p>再次概括本文要點：</p><ul><li>由於任務的複雜程度不一，嘗試用一個性能較弱的模型去模仿 GPT 或其他高級模型的輸出可能導致模型性能不佳。</li><li>使用動態示例加載的上下文學習在某些場景下可以達到與微調相同的效果，且成本較低。</li><li>將目標任務分解成較小的子任務，有助於將較複雜的問題簡化為更易管理的部分，還可以利用這些較小的任務來解決與模型 Token 限制相關的性能瓶頸問題。</li></ul><p><strong>END</strong></p><h1><strong>參考資料</strong></h1><p>[1] Arnav Gudibande, Eric Wallace, Charlie Snell, Xinyang Geng, Hao Liu, Pieter Abbeel, Sergey Levine, &amp; Dawn Song. (2023). The False Promise of Imitating Proprietary LLMs.</p><p>[2] Mukherjee, S., Mitra, A., Jawahar, G., Agarwal, S., Palangi, H., &amp; Awadallah, A. (2023). Orca: Progressive Learning from Complex Explanation Traces of GPT-4. arXiv: Computation and Language.</p><p>[3] Damai Dai, Yutao Sun, Li Dong, Yaru Hao, Shuming Ma, Zhifang Sui, &amp; Furu Wei. (2023). Why Can GPT Learn In-Context? Language Models Implicitly Perform Gradient Descent as Meta-Optimizers.</p><p>[4]Simeng Sun, Yang Liu, Shuohang Wang, Chenguang Zhu, &amp; Mohit Iyyer. (2023). PEARL: Prompting Large Language Models to Plan and Execute Actions Over Long Documents.</p><p>[5] Habib, R.. (2023). OpenAI’s plans according to Sam Altman.</p><p>[6] Hao Fei , Fei Li , Chenliang Li , Shengqiong Wu , Jingye Li and Donghong Ji, (2022). Inheriting the Wisdom of Predecessors: A Multiplex Cascade Framework for Unifed Aspect-based Sentiment Analysis</p><p>[7] Fine-tuning 20B LLMs with RLHF on a 24GB consumer GPU (huggingface.co)</p><p><strong>本文經原作者授權，由 Baihai IDP 編譯。如需轉載譯文，請聯繫獲取授權。</strong></p><p><strong>原文鏈接</strong>：</p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftowardsdatascience.com%2Fthinking-about-fine-tuning-an-llm-heres-3-considerations-before-you-get-started-c1f483f293" target="_blank">https://towardsdatascience.com/thinking-about-fine-tuning-an-llm-heres-3-considerations-before-you-get-started-c1f483f293</a></p><p><strong>🚢🚢🚢歡迎小夥伴們加入<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbaihai-idp.yuque.com%2Fmwvla8%2Fdoc%3F%23" target="_blank">AI 技術軟件及技術交流羣</a>，追蹤前沿熱點，共探技術難題~</strong></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 19 Sep 2023 02:26:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/IDP/blog/10111244</guid>
            <link>https://my.oschina.net/IDP/blog/10111244</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Rust 團隊前成員深感後悔，要求取消掛名，昨日完成移除]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>這事還要從 2023 年 9 月 8 日説起。</p><p>這一天，Rust 發佈團隊（Release Team）的成員 Jonas Schievink 在 Github 的 Rust 語言管理項目提了個 Pull Request，要求<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frust-lang%2Fteam%2Fpull%2F1071" target="_blank">把自己的名字從各項目中刪除</a>，還在正文中要求把自己的名字從 Rust 語言官網撤下，明確表示自己退出 Rust 團隊後不該繼續掛名。</p><p>在這個 Pull Request 當中，Jonas Schievink 表示後悔自己參與了 Rust 項目。</p><p>翻譯如下：</p><blockquote><p>我在今年稍早的時候就已經離開了 Rust 團隊。這個 Pull Request 用來進一步地把我從「校友錄」中移除，與我有關聯的文件一併刪除。</p><p>我也想請求 Rust 團從 rust-lang 組織各項目中，刪掉我各個 commit 中的所有作者信息。</p><p>我不再希望以任何方式與 Rust 項目有關聯，對曾經參與其中深感後悔。</p><p>Rust 項目一再辜負了自己的志願者，破壞了社區項目，壓制了公開討論，而其領導層卻總是在「關切」的虛名掩護下逃避責任。</p><p>最近 RustConf 主題演講事件的懦夫式處理手法只是其中最新的例子，並且不太可能會是最後一個，即使領導架構改成了新的領導委員會。永久解決這些問題的唯一辦法是，把那些需要對此負責的人，或者為之辯護的人，徹底驅逐出 Rust 項目。</p><p>我強烈建議 Rust 團隊的所有志願者重新認真考慮，你們是否值得自願為這個組織付出。</p><p>此外，我敦促所有了解 Rust 項目的失敗細節、但未公開表達的人問問自己：難道你們不覺得，對於那些想要置身參與 Rust 的人，應該告訴他們接下來會遇到什麼事，免得他們陷入其中並把相同的經歷重新體驗一次？</p></blockquote><p>值得注意的是，這條 Pull Request 有 6 條討論被刪。</p><p>昨天（2023 年 9 月 18 日），也就是在 Pull Request 提交後的十天，Merge 操作終於完成，移除了這位前成員的名字。</p><p>根據「網站時光機」的存檔對比，5 月份時 Jonas Schievink 的名字仍在列表上，現在已經從<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.rust-lang.org%2Fgovernance%2Fteams%2Falumni" target="_blank">Rust 語言官網的「校友錄」</a>的名單中消失。</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 18 Sep 2023 17:14:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/258618</guid>
            <link>https://www.oschina.net/news/258618</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[BoringDB —— 基於 SQLite 的高性能鍵值數據庫]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>BoringDB 是基於 SQLite 採用 Rust 編寫的高性能鍵值數據庫。</p><p>BoringDB 有一個相當奇特的設計——它是功能非常齊全的 SQLite，提供了一個簡單的鍵值 API。處理索引、ACID 事務等所有繁重工作。</p><p>SQLite 具有極高的可靠性，BoringDB 添加了一個緩存層和寫入批處理，使得每秒操作數較高的鍵值任務（例如處理稀疏 Merkle 樹分支）相當快。</p></div>
                                                                ]]>
            </description>
            <pubDate>Mon, 18 Sep 2023 10:50:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/p/boringdb</guid>
            <link>https://www.oschina.net/p/boringdb</link>
        </item>
        <item>
            <title>
                <![CDATA[谷歌以 9300 萬美元和解加州 Android 追蹤訴訟案]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000"><span style="background-color:#ffffff">美國加利福尼亞州總檢察長<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftwitter.com%2FAGRobBonta%2Fstatus%2F1702460406713946115" target="_blank">宣佈</a>，谷歌將支付 9300 萬美元，以了結一項指控其違反美國消費者保護法的隱私訴訟。</span></span></p><blockquote><p><span style="color:#000000">「谷歌告訴用戶，一旦他們選擇退出，谷歌就不會追蹤他們的位置；但它卻陽奉陰違，繼續使用位置數據追蹤、存儲和銷售廣告。這是不可接受的。我們要求他們承擔 9,300 萬美元的責任。」</span></p></blockquote><p style="margin-left:0; margin-right:0; text-align:start"><img alt="" height="375" src="https://oscimg.oschina.net/oscnet/up-b863c625adb303970bf98289230190288f8.webp" width="300" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000"><span style="background-color:#ffffff">具體表現為，加州司法部的一項調查<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bleepingcomputer.com%2Fnews%2Fgoogle%2Fgoogle-pays-93m-to-settle-android-tracking-lawsuit-in-california%2F" target="_blank">發現</a>，谷歌在收集、保留和利用 Android 用戶的位置數據用於消費者分析和廣告等目的方面存在欺騙行為。該公司所有這些數據收集行為，都是在沒有獲得用戶知情同意的情況下進行的。</span></span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000"><span style="background-color:#ffffff">指控的重點內容在於谷歌對用戶位置的跟蹤。在用戶所瞭解的角度，在設備設置中關閉"位置歷史記錄"意味着可以完全禁用位置跟蹤。但事實卻是，存在一個名為"Web &amp; App Activity"的賬戶設置被默認啓用，允許谷歌收集、保留和使用客戶的個人身份位置數據。</span></span></p><p><span style="color:#000000">根據此項和解協議，谷歌同意將實施<span style="background-color:#ffffff">更加用戶友好的帳戶控制</span>，同時限制特定位置數據類別的使用和保留。還必須提高其位置數據跟蹤和收集行為的透明度，在啓用與位置相關的賬戶設置時向用戶提供更多信息；且必須就其收集的數據類型和使用方式提供更詳細的信息。</span></p><p><span style="color:#000000">值得一提的是，谷歌已經因為此類訴訟被處以多次罰款，包括：</span></p><ul><li><span><span><span style="color:#070707"><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>2021 年 11 月因激進的數據收集行為而被意大利機構處以 1130 萬美元的罰款。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></li><li><span><span><span style="color:#070707"><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>2022 年 1 月被法國國家信息學和自由委員會 (CNIL) 處以 1.7 億美元的罰款，理由是谷歌侵犯了互聯網用戶的同意權，這使得選擇退出隱藏在多次點擊背後的網站跟蹤 cookie 變得困難。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></li><li><span><span><span style="color:#070707"><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>2022 年 8 月，澳大利亞競爭與消費者委員會 (ACCC) 對谷歌處以 6000 萬美元罰款，原因是谷歌在近兩年內欺騙和收集澳大利亞 Android 用戶的位置數據。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></li><li><span><span><span style="color:#070707"><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>2022 年 11 月，谷歌還支付了 3.915 億美元，以了結美國 40 個州總檢察長聯盟針對同樣侵犯隱私行為提起的隱私訴訟。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></li></ul><p><span style="color:#000000">有關此次訴訟的更多信息可</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Foag.ca.gov%2Fsystem%2Ffiles%2Fattachments%2Fpress-docs%2FGoogle%2520Proposed%2520Order%2520FINAL%2520%25283%2529.pdf" target="_blank">查看官方文件</a>。&nbsp;</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 18 Sep 2023 09:32:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/258591/google-93m-settle-android-tracking-lawsuit-california</guid>
            <link>https://www.oschina.net/news/258591/google-93m-settle-android-tracking-lawsuit-california</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[中國計算產業規模達 2.6 萬億元]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>根據工信微報的公眾號消息，2022 年，我國計算產業規模達 2.6 萬億元，近六年累計出貨超過 2091 萬台通用服務器、82 萬台 AI 服務器。</p><p>下一步，相關部門將加強技術創新，聚焦計算產業鏈，設立專項任務，支持新形態、新產品研發。深入實施各類計算產業政策，加大對計算重點領域和薄弱環節支持力度，增強核心競爭力。</p><p>工信部總工程師趙志國當天表示，以異構計算、智能計算、量子計算等為代表的先進計算已演進到質變的關鍵階段，計算產業展現出強大的活力和不可估量的潛力。</p><p>據中國信通院發佈的《中國算力發展指數白皮書（2023 年）》顯示，算力多元化發展持續推進。以 AIGC 為代表的人工智能應用、大模型訓練等新應用、新需求快速崛起都對算力提出更高要求。預計到 2025 年全球算力規模超過 3ZFlops（ZFlops：每秒十萬億億次浮點數運算），至 2030 年超過 20ZFlops。</p><p>面對技術和產業發展的新趨勢，工信部將圍繞加強技術創新、加快企業培育、深化行業應用、強化政策保障等方面，持續推動我國計算產業高質量發展。</p><p>趙志國表示，將聚焦計算產業鏈，設立專項任務，支持智能服務器、集羣服務器、存算一體服務器等新形態、新產品研發。圍繞重點需求場景，加強產品生態建設和軟硬生態適配，培育一批計算產業鏈優質企業，促進各地區計算產業集聚化發展，形成區域佈局合理、輻射帶動效能大的計算產業體系。</p><p>他同時表示，將進一步推動計算產業與實體經濟深度融合，加速向製造、交通、金融、教育、醫療等行業滲透，推進先進計算規模化應用，帶動產業數字化轉型升級，促進生產和服務效率提升。深化全方位部省合作，深入實施各類計算產業政策，加大對計算重點領域和薄弱環節支持力度，建設完善計算標準和測評體系，加強知識產權佈局，增強核心競爭力。</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 18 Sep 2023 09:14:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/258585</guid>
            <link>https://www.oschina.net/news/258585</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[龍芯國產化全固態桌面存儲一體機正式發佈]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>龍芯國產化全固態桌面存儲一體機正式<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2Fd2EGcDvhxEQ9LF6r_uDQAQ" target="_blank">發佈</a>。該產品由龍芯中科 (武漢) 技術有限公司牽頭，聯合龍眾創芯、嘉合勁威、熊貓電子、可道雲等多家國產存儲廠商共同推出。產品主要針對個人、家庭、團體和小微企業市場，提供國產化的桌面網絡存儲方案。目前預訂活動已正式開啓。</p><p><img alt="" height="225" src="https://oscimg.oschina.net/oscnet/up-7329bc5e0d17b2a9823a2a3266be4f11d79.jpg" width="500" referrerpolicy="no-referrer"></p><p><span style="background-color:#ffffff; color:#9f9fa0">龍芯國產化全固態桌面存儲一體機（8 盤位）</span></p><p><span style="background-color:#ffffff; color:#9f9fa0"><img alt="" height="313" src="https://oscimg.oschina.net/oscnet/up-cabe84089afd95264d8a165b221917cf243.jpg" width="500" referrerpolicy="no-referrer"></span></p><p><span style="background-color:#ffffff; color:#9f9fa0">一體機在線演示中心</span></p><p><span style="background-color:#ffffff; color:#9f9fa0"><img alt="" height="313" src="https://oscimg.oschina.net/oscnet/up-9b04c234092306db284338e23f1fef3b46c.jpg" width="500" referrerpolicy="no-referrer"></span></p><p><span style="background-color:#ffffff; color:#9f9fa0">插件擴展</span></p><p><span style="background-color:#ffffff; color:#9f9fa0"><img alt="" height="313" src="https://oscimg.oschina.net/oscnet/up-ddeb9d2c2bee1998a3a4fd2df9c8afc2f75.jpg" width="500" referrerpolicy="no-referrer"></span></p><p><span style="background-color:#ffffff; color:#9f9fa0">在線 PS</span></p><p><span style="background-color:#ffffff; color:#9f9fa0"><img alt="" height="313" src="https://oscimg.oschina.net/oscnet/up-023ca83835e58b3301e2cf1f88c83a434de.jpg" width="500" referrerpolicy="no-referrer"></span></p><p><span style="background-color:#ffffff; color:#9f9fa0">網盤界面</span></p><h4 style="margin-left:0px; margin-right:0px"><strong>產品 | 配置</strong></h4><p style="margin-left:0; margin-right:0"><strong>處理器</strong></p><p style="margin-left:0; margin-right:0">該產品採用龍芯 3A5000 處理器，主頻 2.5G。主流桌面 8 盤位 NAS 產品採用的處理器多為 4 核 2.2G，因此該產品可完全滿足桌面網絡存儲應用的需求。</p><p style="margin-left:0; margin-right:0"><strong>內存</strong></p><p style="margin-left:0; margin-right:0">產品採用長鑫顆粒的嘉合勁威（神可）、力積存儲（力存）、紫光等國產品牌產品，企業版方案專門配備帶 ECC 的服務器內存型號，可靠性更高。</p><p style="margin-left:0; margin-right:0"><strong>硬盤配置</strong></p><p style="margin-left:0; margin-right:0">產品與大唐存儲、嘉合勁威和澤石等國產存儲品牌廠商合作，為本產品定製硬盤，默認系統盤和存儲盤採用全固態方案，主控芯片採用國產主控，存儲顆粒採用長江存儲顆粒，有效防止數據遠程泄密和人為竊取硬件可能。</p><p style="margin-left:0; margin-right:0"><strong>機箱外觀</strong></p><p style="margin-left:0; margin-right:0">產品提供標準和定製機箱，包括迷你主機、NAS 主機等方案，以及入門型、社區型、門鎖型、企業型等多種款式，滿足各類用戶的需求。</p><p style="margin-left:0; margin-right:0"><strong>操作系統</strong></p><p style="margin-left:0; margin-right:0">產品支持 loongnix、統信 UOS、銀河麒麟、龍蜥 Anolis、openEuler 等國產操作系統，本次採用最新發布的 Anolis OS8.8。該版本新增了龍芯 3D5000 處理器、龍芯 2K0500 BMC 驅動，以及虛擬化二進制翻譯支持，功能完善，運行穩定，滿足用戶企業級需求。</p><p style="margin-left:0; margin-right:0"><strong>存儲管理軟件</strong></p><p style="margin-left:0; margin-right:0">上海七朵信息基於 loongnixserver 8.4、可道雲基於 Anolis OS 8.8 分別移植了 NAS 系統和私有云網盤系統，可為個人、團體、企業提供專業的網絡存儲應用服務。基於 Anolis OS 的可道雲企業私有云存儲操作系統 8.8 LoongArch64（龍芯定製版）是專門支持龍芯的 Anolis OS 商業發行版，將在龍芯俱樂部社區和龍蜥社區推廣。</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 18 Sep 2023 08:59:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/258583</guid>
            <link>https://www.oschina.net/news/258583</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[🔥 周熱點 | JetBrains 發佈獨立 Rust IDE；PHP 市場份額超 7 成.....]]>
            </title>
            <description>
                <![CDATA[回顧一週熱門資訊。2023.09.11-2023.09.17]]>
            </description>
            <pubDate>Mon, 18 Sep 2023 06:59:00 GMT</pubDate>
            <guid isPermaLink="false">https://mp.weixin.qq.com/s?__biz=MzA4OTI5NjUwOA==&#38;mid=2649093858&#38;idx=1&#38;sn=4c65dae56e5b41c3d5863cd74a70aa7d&#38;chksm=880c4df1bf7bc4e78d0d90ab8ed8b4ddfb3d4064b4f52cca7a2f8e44adee410c044f15e32024&#38;token=938160620&#38;lang=zh_CN#rd</guid>
            <link>https://mp.weixin.qq.com/s?__biz=MzA4OTI5NjUwOA==&#38;mid=2649093858&#38;idx=1&#38;sn=4c65dae56e5b41c3d5863cd74a70aa7d&#38;chksm=880c4df1bf7bc4e78d0d90ab8ed8b4ddfb3d4064b4f52cca7a2f8e44adee410c044f15e32024&#38;token=938160620&#38;lang=zh_CN#rd</link>
        </item>
        <item>
            <title>
                <![CDATA[阿里雲 PAI - 靈駿大模型訓練工具 Pai-Megatron-Patch 正式開源！]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><strong>作者：</strong> 李鵬，王明，施晨，黃俊</p><h2>導讀</h2><p>隨着深度學習大語言模型的不斷髮展，其模型結構和量級在快速演化，依託大模型技術的應用更是層出不窮。對於廣大開發者來説不僅要考慮如何在複雜多變的場景下有效的將大模型消耗的算力發揮出來，還要應對大模型的持續迭代。開發簡單易用的大模型訓練工具就成了應對以上問題廣受關注的技術方向，讓開發者專注於大模型解決方案的開發，降低大模型訓練加速性能優化和訓練/推理全流程搭建的人力開發成本。阿里雲機器學習平台 PAI 開源了業內較早投入業務應用的大模型訓練工具 Pai-Megatron-Patch，本文將詳解 Pai-Megatron-Patch 的設計原理和應用。</p><h2><strong>Pai-Megatron-Patch 是什麼</strong></h2><p>Pai-Megatron-Patch 工具是阿里雲機器學習平台 PAI 算法團隊研發，基於阿里雲智算服務 PAI-靈駿平台的大模型最佳實踐解決方案配套工具，旨在幫助大模型開發者快速上手靈駿產品，完成大語言模型（LLM）的高效分佈式訓練，有監督指令微調，模型離線推理驗證等完整大模型開發鏈路。該項目提供了業界主流開源大模型基於 Megatron-LM 的訓練&amp;離線推理驗證流程，方便用戶快速上手大模型訓練。</p><h3>主要特性</h3><ul><li>多款熱門大模型支持：llama，llama-2，codellama, 百川，通義千問，Falcon，GLM，Starcoder，Bloom，chatglm 等</li><li>支持模型權重互轉轉換：在 Huggingface，Megatron 和 Transformer Engine 之間進行算子命名空間映射</li><li>支持 Flash Attention 2.0 和 Transformer Engine 模式下的 FP8 訓練加速且確保收斂</li><li>豐富且簡單易用的使用示例，支持大模型預訓練，微調，評估和推理，強化學習全流程最佳實踐</li></ul><h3>開源地址</h3><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fgithub.com%2Falibaba%2FPai-Megatron-Patch" target="_blank">https://github.com/alibaba/Pai-Megatron-Patch</a></p><h3><strong>技術架構</strong></h3><p>Pai-Megatron-Patch 的設計理念是不對 Megatron-LM 的源碼進行侵入式修改，即不在 Megatron-LM 裏面添加新的功能特性，將需要擴充完善的部分以 patch 補丁的方式呈現。在 patch 中構建 LLM 訓練鏈路通過依賴 Megatron-LM 核心庫的方法實現和 Megatron-LM 的解耦合。這樣解耦合的好處就是 Megatron-LM 的升級不會影響用戶的 LLM 最佳實踐體驗。</p><p>Pai-Megatron-Patch 中包含模型庫，分詞器，模型轉換，強化學習，離線文本生成以及使用示例和工具集等用於構建 LLM 訓練的關鍵要素。在模型庫中包含熱門大模型的 Megatron 版本實現，例如 baichuan，bloom，chatglm，falcon，galactica，glm，llama，qwen 和 starcoder，後續還會根據需要及時添加新的 Megatron 版大模型實現。同時 patch 還提供了 huggingface 模型權重和 Megatron 模型權重之間的雙向轉換。一方面是方便用戶加載 huggingface 的權重在 Megatron 中繼續預訓練或者微調，另一方面是方便用戶對訓練好的 Megatron 模型使用 huggingface 的評估/推理流程對模型質量進行客觀評估。在強化學習部分，patch 提供了 PPO 訓練流程等，方便用戶使用 SFT 模型和 RM 模型進行強化學習。最後 patch 提供了大量的使用示例幫助用戶快速開始大模型訓練&amp;離線推理。具體請參考阿里雲靈駿產品的使用流程: 智算服務 PAI 靈駿大模型分佈式訓練方案。</p><p><img src="https://oscimg.oschina.net/oscnet/up-ab36e41130c172c6004c2a2f2d7bbef90cd.png" alt="" referrerpolicy="no-referrer"></p><h3>關鍵技術</h3><p><strong>1. 模型權重轉換</strong></p><p>研發 Megatron-Patch 的初衷之一就是能將世界各地研發機構在 Huggingface 上放出的熱門大模型使用 Megatron 引擎進行繼續預訓練或者繼續微調。這就需要首先將 Huggingface 模型格式的 ckpt 轉換成 Megatron 模型格式，才能正確加載進來，否則會出現 pytorch 加載模型失敗。Megatron-Patch 的一個核心可靠性保障特徵就是在採用算子拆分，流水並行，序列並行，Zero 顯存優化，BF16 混合精度，梯度檢查點等訓練加速技術確保模型訓練吞吐速度平均提升 1.5 倍以上的同時，在評估任務模式下的單一樣本前向 loss 值，預訓練/微調任務模式下的 loss 曲線，離線文本生成任務模式下的生成效果這三個方面和 Huggingface 是對齊的，從而確保 Megatron 版模型的可靠性。</p><p>另一方面，Megatron 版的 transformer 實現方式提供了一種讓用戶僅僅通過設置開關就能實現不同種類 GPT 模式的能力。比如 llama 模型打開如下開關即可</p><pre><code> --swiglu \
 --use-rotary-position-embeddings \
 --no-position-embedding \
 --untie-embeddings-and-output-weights \
 --disable-bias-linear
</code></pre><p>如果想將 llama 模式變成 baichuan 模型，那麼僅僅需要添加採用--use-alibi-mask 開關，同時關閉 Rotary Embeeding 開關即可，具體配置如下所示：</p><pre><code> --swiglu \
  --use-alibi-mask \
  --position-embedding-type none \
  --untie-embeddings-and-output-weights \
  --disable-bias-linear
</code></pre><p>下面我們以 llama-2 為例，詳解從 huggingface 到 megatron 的模型權重轉換技術。下表總結了兩者在不同 module 上的命名對應關係。在 patch 實現過程中，我們首先將 HF 格式的 ckpt 轉換到一種內部格式，然後再把這種內部格式轉換成對應的外部格式。這樣做可以最大程度複用已有的轉換邏輯來處理新模型。在轉換為內部格式的過程中，q_proj, k_proj, v_proj 需要沿着第 0 維拼接在一起後賦值給內部變量 query_key_value。</p><p><img src="https://oscimg.oschina.net/oscnet/up-d673e56a66d863151ffbdef09e6bbe815df.png" alt="" referrerpolicy="no-referrer"></p><p>當用戶在資源受限情況下需要按照 TP&gt;1 來拆分權重的時候，這裏需要注意的是針對 MLP 層的 gate_proj 和 up_proj 的操作。不能像 qkv 那樣在轉換成內部格式的時候進行 merge 再執行算子拆分。需要在拆分前加入如下針對 MLP 層的權重合並的代碼邏輯才能確保正確收斂。</p><pre><code>for i in range(tp_size):
    params_dict = get_element_from_dict_by_path(output_state_dict[i],
                                                "model.language_model.encoder")

    dense_h_to_4h_1_name = 'mlp.dense_h_to_4h_1.weight'
    dense_h_to_4h_1_layer_name = f"layers.{layer}.{dense_h_to_4h_1_name}"
    dense_h_to_4h_1_weight = params_dict[dense_h_to_4h_1_layer_name]

    dense_h_to_4h_2_name = 'mlp.dense_h_to_4h_2.weight'
    dense_h_to_4h_2_layer_name = f"layers.{layer}.{dense_h_to_4h_2_name}"
    dense_h_to_4h_2_weight = params_dict[dense_h_to_4h_2_layer_name]

    dense_h_to_4h_name = 'mlp.dense_h_to_4h.weight'
    dense_h_to_4h_layer_name = f"layers.{layer}.{dense_h_to_4h_name}"

    params_dict[dense_h_to_4h_layer_name] = torch.cat(
    [dense_h_to_4h_1_weight, dense_h_to_4h_2_weight], dim=0)
</code></pre><p><strong>2. 基於 TE 的 FP8 訓練收斂</strong></p><p>Transformer Engine(TE) 是一個在英偉達 GPUS 上運行的針對 Transformer 模型的加速庫，其中包括針對 Hopper GPU 的 FP8 混合精度，該精度可以在較低的顯存利用率下提供更好的訓練&amp;推理速度。在 TE 內部封裝了 Flash Attention 實現，同時 TE 還提供了一組高度優化後的算子用來構建 Transformer 模型。比如 LayerNormLinear 就是將 LayerNorm 和 QKV-Proojection 進行算子融合，LayerNormMLP 就是將 layernorm 和 mlp 進行算子融合。如下圖所示：</p><p><img src="https://oscimg.oschina.net/oscnet/up-53a950508a61f0ccc5924b654c44bc1da4b.png" alt="" referrerpolicy="no-referrer"></p><p>從 Huggingface 到 TE 模型的權重轉換技術和之前是類似的，也需要事先找到兩者之間的映射關係。從下表可以看出，TE 中多了_extra_state 是用來存 fp8 訓練的 scale 和 history 的，這些在加載的時候會出現衝突，這時只要將 load_state_dict 函數的 strict 設置成 False 就可以了，比如 load_state_dict(state_dict_, strict=False)。</p><p><img src="https://oscimg.oschina.net/oscnet/up-4b5da490d5168d58505bf16cedf157a6560.png" alt="" referrerpolicy="no-referrer"></p><p>在 Megatron-Patch 中使用示例中打開 FP8 混合精度訓練開關也很容易，如下所示：</p><pre><code>if [ $PR = fp16 ]; then
    pr_options=" \
        --fp16"
elif [ $PR = bf16 ]; then
    pr_options=" \
        --bf16"
elif [ $PR = fp8 ]; then
    pr_options=" \
        --bf16
        --fp8-hybrid \
        --fp8-amax-compute-algo max \
        --fp8-amax-history-len 1024 \
        --transformer-impl transformer_engine"
fi
</code></pre><p>我們可以使用如下訓練腳本 run_pretrain_megatron_llama_enwiki.sh 來測試打開 FP8 開關後的預訓練收斂性。下圖展示了 llama-7B 和 llama-2-70B 模型在打開和關閉 FP8 時的 loss 曲線對比，可以看出基本是重合的。</p><p>LLama-7B</p><p><img src="https://oscimg.oschina.net/oscnet/up-c749406c18a5e391c380313b99dabd8d83f.png" alt="" referrerpolicy="no-referrer"></p><p>LLama2-70B</p><p><img src="https://oscimg.oschina.net/oscnet/up-62bdf429cd9619a79272dec35d3a737c4ff.png" alt="" referrerpolicy="no-referrer"></p><p><strong>3. 大模型訓練&amp;推理</strong></p><p>從 github 上獲取 Megatron 模型訓練工具 PAI-Megatron-Patch（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fgithub.com%2Falibaba%2FPai-Megatron-Patch" target="_blank">https://github.com/alibaba/Pai-Megatron-Patch</a>）源代碼並拷貝到工作目錄/mnt/workspace/下。</p><p><strong>1）模型格式轉換</strong></p><p>使用我們提供的模型轉換腳本，將 huggingface 格式的模型文件轉換為 megatron 格式：</p><pre><code>cd /mnt/workspace/
mkdir llama2-ckpts
cd llama2-ckpts
wget https://atp-modelzoo-wlcb-pai.oss-cn-wulanchabu.aliyuncs.com/release/models/pai-megatron-patch/llama2-ckpts/Llama-2-7b-hf.tgz
tar -zxf Llama-2-7b-hf.tgz
mv Llama-2-7b-hf llama2-7b-hf

cd /mnt/workspace/PAI-Megatron-Patch/toolkits/model_checkpoints_convertor/llama
sh model_convertor.sh \
/root/Megatron-LM-23.04        \
/mnt/workspace/llama2-ckpts/llama2-7b-hf         \
/mnt/workspace/llama2-ckpts/llama2-7b-hf-to-megatron-tp1-pp1  \
1  \
1  \
llama-7b \
0 \
false
</code></pre><p><strong>2）繼續預訓練</strong></p><p>中文繼續預訓練漢化指引</p><p>Step1: 獲取需要擴充詞表的模型（如 llama-13b-hf）</p><p>Step2: 獲取需要擴充的詞表</p><ul><li>使用 sentence-piece 代碼庫從自有文本語料中學習詞表，得到 randeng-sp.model 文件</li></ul><p>Step3: 詞表擴充</p><ul><li>擴充模型 tokenizer：將 randeng-sp.model 中的詞表添加到 llama-13b-hf 文件夾下 tokenizer.model 中</li><li>擴充模型詞表對應的參數矩陣</li></ul><ol><li>word_embedding、lm_head</li><li>新詞向量可以使用原詞向量均值作為初始化，比如「天氣」=mean([「天」，「氣」])</li></ol><ul><li>修改與詞表大小相關的文件並保存，如 config.json</li></ul><p>運行繼續預訓練腳本 run_pretrain_megatron_llama.sh，需要傳入的參數列表如下：</p><pre><code>ENV=$1                          # 運行環境: dlc, dsw
MEGATRON_PATH=$2                # 設置開源 Megatron 的代碼路徑
MEGATRON_PATCH_PATH=$3          # 設置 Megatron Patch 的代碼路徑
MODEL_SIZE=$4                   # 模型結構參數量級：7B, 13B
BATCH_SIZE=$5                   # 每卡訓練一次迭代樣本數: 4, 8
GLOBAL_BATCH_SIZE=$6            # 全局 batch size
LR=$7                           # 學習率: 1e-5, 5e-5
MIN_LR=$8                       # 最小學習率: 1e-6, 5e-6
SEQ_LEN=$9                      # 序列長度
PAD_LEN=${10}                   # Padding 長度：100
EXTRA_VOCAB_SIZE=${11}          # 詞表擴充大小
PR=${12}                        # 訓練精度: fp16, bf16
TP=${13}                        # 模型並行度
PP=${14}                        # 流水並行度
AC=${15}                        # 激活檢查點模式: sel, full
DO=${16}                        # 是否使用 Megatron 版 Zero-1 降顯存優化器: true, false
FL=${17}                        # 是否使用 Flash Attention: true, false
SP=${18}                        # 是否使用序列並行: true, false
SAVE_INTERVAL=${19}             # 保存 ckpt 的間隔
DATASET_PATH=${20}              # 訓練數據集路徑
PRETRAIN_CHECKPOINT_PATH=${21}  # 預訓練模型路徑
TRAIN_TOKENS=${22}              # 訓練 token 數
WARMUP_TOKENS=${23}             # 預熱 token 數
OUTPUT_BASEPATH=${24}           # 訓練輸出文件路徑
</code></pre><p>注意設置正確的數據集<strong>掛載路徑 WORK_DIR</strong>以及<strong>運行環境 ENV</strong>，運行示例如下所示：</p><pre><code>export WORK_DIR=/mnt/workspace
cd ${WORK_DIR}/PAI-Megatron-Patch/examples/llama2
bash run_pretrain_megatron_llama.sh \
dlc \
/root/Megatron-LM-23.04   \
${WORK_DIR}/PAI-Megatron-Patch  \
7B   \
1    \
16 \
1e-5   \
1e-6   \
2048  \
80  \
0   \
fp16  \
1   \
1  \
sel  \
true   \
false  \
false   \
100000  \
${WORK_DIR}/llama2-datasets/wudao/wudao_llamabpe_text_document   \
${WORK_DIR}/llama2-ckpts/llama2-7b-hf-to-megatron-tp1-pp1   \
100000000   \
10000   \
${WORK_DIR}/output_megatron_llama2/ 
</code></pre><p><strong>3）有監督微調</strong></p><p>在微調開始之前，請先進入</p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fgithub.com%2Falibaba%2FPai-Megatron-Patch%2Fblob%2Fmain%2Ftoolkits%2Fpretrain_data_preprocessing%2FREADME.md" target="_blank">https://github.com/alibaba/Pai-Megatron-Patch/blob/main/toolkits/pretrain_data_preprocessing/README.md</a></p><p>獲取 json 文件。運行 run_finetune_megatron_llama.sh 腳本，需要傳入的參數列表如下：</p><pre><code>ENV=$1                          # 運行環境: dlc, dsw
MEGATRON_PATH=$2                # 設置開源 Megatron 的代碼路徑
MEGATRON_PATCH_PATH=$3          # 設置 Megatron Patch 的代碼路徑
MODEL_SIZE=$4                   # 模型結構參數量級: 7B, 13B
BATCH_SIZE=$5                   # 每卡訓練一次迭代樣本數: 4, 8
LR=$6                           # 學習率: 1e-5, 5e-5
MIN_LR=$7                       # 最小學習率: 1e-6, 5e-6
SEQ_LEN=$8                      # 序列長度
PAD_LEN=$9                      # Padding 長度：100
EXTRA_VOCAB_SIZE=${10}          # 詞表擴充大小
PR=${11}                        # 訓練精度: fp16, bf16
TP=${12}                        # 模型並行度
PP=${13}                        # 流水並行度
AC=${14}                        # 激活檢查點模式: sel, full
DO=${15}                        # 是否使用 Megatron 版 Zero-1 降顯存優化器: true, false
FL=${16}                        # 是否使用 Flash Attention: true, false
SP=${17}                        # 是否使用序列並行: true, false
TRAIN_DATASET_PATH=${18}        # 訓練數據集路徑
VALID_DATASET_PATH=${19}        # 驗證數據集路徑
PRETRAIN_CHECKPOINT_PATH=${20}  # 預訓練模型路徑
EPOCH=${21}                     # 訓練迭代輪次
OUTPUT_BASEPATH=${22}           # 訓練輸出文件路徑
</code></pre><p>多節點運行示例如下所示：</p><pre><code>export WORK_DIR=/mnt/workspace
cd ${WORK_DIR}/PAI-Megatron-Patch/examples/llama2
sh run_finetune_megatron_llama.sh  \
dlc    \
/root/Megatron-LM-23.04   \
${WORK_DIR}/PAI-Megatron-Patch  \
7B     \
1      \
1e-5   \
1e-6   \
2048   \
80     \
0      \
fp16   \
1      \
1      \
sel    \
true   \
false  \
false  \
${WORK_DIR}/llama2-datasets/wudao_train.json   \
${WORK_DIR}/llama2-datasets/wudao_valid.json   \
${WORK_DIR}/llama2-ckpts/llama2-7b-hf-to-megatron-tp1-pp1   \
2   \
${WORK_DIR}/output_megatron_llama2/   
</code></pre><p><strong>4）離線推理</strong></p><p>模型訓練完成後，可以進行離線推理，評估模型效果。根據上面的訓練流程不同，我們提供了 Megatron 格式的推理鏈路。對於 Megatron 訓練的模型，可以直接用 Megatron 框架進行推理。</p><pre><code>ENV=$1                          # 運行環境: dlc, dsw
MEGATRON_PATH=$2                # 設置開源 Megatron 的代碼路徑
MEGATRON_PATCH_PATH=$3          # 設置 Megatron Patch 的代碼路徑
CHECKPOINT_PATH=$4              # 模型微調階段的模型保存路徑
MODEL_SIZE=$5                   # 模型結構參數量級: 1.1B, 1.7B, 7.1B
TP=$6                           # 模型並行度
BS=$7                           # 每卡推理一次迭代樣本數: 1, 4, 8
SEQ_LEN=$8                      # 序列長度: 256, 512, 1024
PAD_LEN=$9                      # PAD 長度：需要將文本拼接到的長度
EXTRA_VOCAB_SIZE=${10}          # 模型轉換時增加的 token 數量
PR=${11}                        # 推理採用的精度: fp16, bf16
TOP_K=${12}                     # 採樣策略中選擇排在前面的候選詞數量 (0-n): 0, 5, 10, 20
INPUT_SEQ_LEN=${13}             # 輸入序列長度: 512
OUTPUT_SEQ_LEN=${14}            # 輸出序列長度: 256
INPUT_FILE=${15}                # 需要推理的文本文件: input.txt, 每行為一個樣本
OUTPUT_FILE=${16}               # 推理輸出的文件: output.txt
# TOP_K 和 TOP_P 必須有一個為 0
TOP_P=${17}                     # 採樣策略中選擇排在前面的候選詞百分比 (0-1): 0, 0.85, 0.95
TEMPERATURE=${18}               # 採樣策略中溫度懲罰: 1-n
REPETITION_PENALTY=${19}        # 避免生成是產生大量重複，可以設置為 (1-2) 默認為 1.2
</code></pre><ul><li>此處提供一個離線推理輸出的文件，推理的數據組織形式需要與微調時的保持一致。</li></ul><ol><li>測試樣本：</li></ol><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fatp-modelzoo-wlcb-pai.oss-cn-wulanchabu.aliyuncs.com%2Frelease%2Fmodels%2Fpai-megatron-patch%2Fllama2-datasets%2Fpred_input.jsonl" target="_blank">https://atp-modelzoo-wlcb-pai.oss-cn-wulanchabu.aliyuncs.com/release/models/pai-megatron-patch/llama2-datasets/pred_input.jsonl</a></p><ul><li>注意：</li></ul><ol><li>模型保存的路徑下缺少 tokenizer 依賴的文件，需要將微調前模型路徑下所有 json 文件及 tokenizer.model 拷貝至保存模型的路徑下（位於{OUTPUT_BASEPATH }/checkpoint），與 latest_checkpointed_iteration.txt 同級。</li></ol><p>以下有監督微調過程保存模型的推理代碼，需要將 run_text_generation_megatron_llama.sh 腳本中 CUDA_VISIBLE_DEVICES 參數設置為 0；GPUS_PER_NODE 參數設置為 1；同時使用下列代碼進行推理。此時使用單卡進行推理。<strong>注意：此處模型 tp 為 1，可使用單卡推理；如果 tp&gt;1，則需使用相應卡數進行推理</strong>。</p><pre><code>export WORK_DIR=/mnt/workspace
cd ${WORK_DIR}/PAI-Megatron-Patch/examples/llama2
bash run_text_generation_megatron_llama.sh \
dsw \
/root/Megatron-LM-23.04 \
${WORK_DIR}/PAI-Megatron-Patch \
../../../llama2-train \
7B \
1 \
1 \
1024 \
1024 \
0 \
fp16 \
10 \
512 \
512 \
${WORK_DIR}/pred_input.jsonl \
${WORK_DIR}/llama2_pred.txt \
0 \
1.0 \
1.2
</code></pre><p><strong>4. 大模型強化學習</strong></p><p>一般來説，SFT 微調過的模型在對話場景已經會有不錯的表現了。如果想進一步提升模型效果，可以再加上 RLHF 訓練。包括獎勵模型（Reward Model）的訓練和強化學習（PPO）的訓練。這裏展示瞭如何使用當前最常用的 RLHF 開源代碼框架，DeepSpeed-Chat 和 trlx，來進行獎勵函數訓練（RM），以及強化學習優化（PPO）。</p><p><strong>1）模型格式轉換</strong></p><p>如果基於 huggingface 格式的模型直接進行獎勵模型訓練（RM）和強化學習優化（PPO），可以跳過此步驟。如果基於 Megatron 格式的模型，如 PAI-Megatron-Patch 訓練好的 SFT 模型，進行 RM 和 PPO 訓練，需要使用我們提供的模型轉換腳本，先將 Megatron 格式的模型文件轉換為 huggingface 格式。</p><p>LLaMA2 模型轉換：</p><pre><code>cd PAI-Megatron-Patch/toolkits/model_checkpoints_convertor/gpt3_llama
bash model_convertor.sh \
/path/to/Megatron-LM \
/path/to/megatron_llama2_ckpt \
/path/to/hf_llama2_ckpt \
1 \
1 \
llama-7b \
0 \
true
</code></pre><p>BLOOM 模型轉換：</p><pre><code>cd PAI-Megatron-Patch/toolkits/model_checkpoints_convertor/bloom
bash model_convertor_huggingface_megatron.sh \
/path/to/Megatron-LM \
/path/to/megatron_bloom_ckpt \
/path/to/hf_bloom_ckpt \
1 \
1 \
true
</code></pre><p><strong>2）DeepSpeed-Chat</strong></p><p>下載安裝開源社區 DeepSpeed-Chat 源代碼：</p><pre><code>cd PAI-Megatron-Patch/rlhf/deepspeed-chat
git clone https://github.com/microsoft/DeepSpeedExamples.git
cp -f rm_main.py DeepSpeedExamples/applications/DeepSpeed-Chat/training/step2_reward_model_finetuning/main.py
cp -f utils.py DeepSpeedExamples/applications/DeepSpeed-Chat/training/utils/utils.py
cd DeepSpeedExamples/applications/DeepSpeed-Chat/
pip install -r requirements.txt
</code></pre><p>基於 LLaMA2 模型訓練獎勵模型（RM）：</p><pre><code>cd training/step2_reward_model_finetuning/ &amp;&amp; bash training_scripts/llama2/run_llama2_7b.sh
</code></pre><p>基於 LLaMA2 進行強化學習優化訓練（PPO）：</p><pre><code>cd training/step3_rlhf_finetuning/ &amp;&amp; bash training_scripts/llama2/run_llama2_7b_lora.sh
</code></pre><p><strong>3）trlx</strong></p><p>下載安裝開源社區 trlx 源代碼：</p><pre><code>cd PAI-Megatron-Patch/rlhf/trlx
git clone https://github.com/CarperAI/trlx.git
cp trlx_bloom_rlhf.py trlx_bloom_rlhf_test.py trlx/examples/summarize_rlhf/
cp train_reward_model_bloom.py reward_model_bloom.py ds_config_bloom.json trlx/examples/summarize_rlhf/reward_model/
cp -f ds_config_trlx_gptj_summarize.json trlx/examples/summarize_rlhf/configs/
cd trlx
pip install -e .
</code></pre><p>基於 BLOOM 模型訓練獎勵模型（RM）：</p><pre><code>cd examples/summarize_rlhf/reward_model/ &amp;&amp; deepspeed train_reward_model_bloom.py
</code></pre><p>基於 GPT-J 模型訓練獎勵模型（RM）：</p><pre><code>cd examples/summarize_rlhf/reward_model/ &amp;&amp; deepspeed train_reward_model_gptj.py
</code></pre><p>基於 BLOOM 模型進行強化學習優化訓練（PPO）：</p><pre><code>cd examples/summarize_rlhf/ &amp;&amp; accelerate launch --config_file configs/default_accelerate_config.yaml trlx_bloom_rlhf.py
</code></pre><p>基於 GPT-J 模型進行強化學習優化訓練（PPO）：</p><pre><code>cd examples/summarize_rlhf/ &amp;&amp; accelerate launch --config_file configs/default_accelerate_config.yaml trlx_gptj_text_summarization.py
</code></pre><p>PPO 單測</p><p>如果您想跳過，有監督微調（SFT）與，獎勵模型訓練（RM）兩個步驟，只單獨測試 PPO 模塊的性能，可以運行如下指令單測 PPO：</p><pre><code>cd examples/summarize_rlhf/ &amp;&amp; accelerate launch --config_file configs/default_accelerate_config.yaml trlx_bloom_rlhf_test.py
</code></pre><h2><strong>開源生態——構想和未來</strong></h2><p>在 PAI-Megatron-Patch 的開發過程中，我們圍繞中文大模型訓練加速落地沉澱了以下幾個方面的內容：</p><p>在 PAI-Megatron-Patch 的開發過程中，我們圍繞中文大模型訓練加速落地沉澱了以下幾個方面的內容：</p><ul><li>Huggingface 的模型權重無損轉換成 Megatron 或者 Transformer Engine 可讀的模型權重。</li><li>H800 集羣開啓 FP8 混合精度訓練確保收斂。</li><li>LLM 大模型在 PAI 靈駿智算平台上的最佳實踐。</li><li>強化學習技術在 PAI 靈駿智算平台上的最佳實踐。</li></ul><p>後續在 PAI-Megatron-Patch 中還會陸續放出更多高質量的大模型和最佳實踐。此外，在中長期，我們在 Megatron 版的 Lora 流程以及 Transformer Engine 方向上會持續投入精力，也歡迎各種維度的反饋和改進建議以及技術討論，同時我們十分歡迎和期待對開源社區建設感興趣的同行一起參與共建，<strong>釘釘羣號是 29605038042</strong>。</p><p><strong>參考文獻</strong></p><p>[1]. Attention Is All You Need</p><p>[2]. Megatron-LM: Training Multi-Billion Parameter Language Models Using Model Parallelism</p><p>[3]. Reducing Activation Recomputation in Large Transformer Models</p><p>[4]. FP8 Formats for Deep Learning</p><p>[5]. ZeRO: Memory Optimizations Toward Training Trillion Parameter Models</p><p>[6]. LLaMA: Open and Efficient Foundation Language Models</p><p>[7]. Llama 2: Open Foundation and Fine-Tuned Chat Models</p><p>[8]. Benchmarking Large Language Models on NVIDIA H100 GPUs with CoreWeave</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 18 Sep 2023 06:56:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/5583868/blog/10110020</guid>
            <link>https://my.oschina.net/u/5583868/blog/10110020</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[前端新輪子 Nue JS，作者稱要打造全新的 Web 生態]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Nue JS 是最近開源的 Web 前端項目，用於構建用戶界面，體積非常小（壓縮後 2.3kb）。Nue JS 支持服務器端渲染 (SSR)、反應式組件和「同構」組合 ("isomorphic" combinations)。</p><p>作者表示，它就像 Vue.js、React.js 或 Svelte，但沒有 hooks, effects, props, portals, watchers, provides, injects, suspension 這些抽象概念，<strong>開發者只需掌握 HTML、CSS 和 JavaScript 的基礎知識，就能輕鬆上手</strong>。</p><p><img src="https://static.oschina.net/uploads/space/2023/0918/120647_3IjB_2720166.png" referrerpolicy="no-referrer"></p><p>他還説道，Nue 最大的好處是能夠用更少的代碼來完成同樣的事情——與使用 React 相比，Nue JS 實現同樣的功能代碼量只有前者的 1/10。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-e8386b068aeae9430ed951780a94d1a9bee.png" referrerpolicy="no-referrer"></p><p>作者稱 Nue 消除了 TCP 慢啓動算法和漸進增強帶來的「地獄」：</p><p><img alt="" src="https://static.oschina.net/uploads/space/2023/0918/114329_NA5Q_2720166.png" referrerpolicy="no-referrer"></p><p><strong>示例代碼</strong></p><p>Nue 使用基於 HTML 的模板語法：</p><pre><code class="language-html">&lt;div @name="media-object" class="{ type }"&gt;
  &lt;img src="{ img }"&gt;
  &lt;aside&gt;
    &lt;h3&gt;{ title }&lt;/h3&gt;
    &lt;p :if="desc"&gt;{ desc }&lt;/h3&gt;
    &lt;slot/&gt;
  &lt;/aside&gt;
&lt;/div&gt;
</code></pre><p>Nue JS 的作者曾開源過一款頗有名氣的項目——<a href="https://www.oschina.net/p/riotjs" target="_blank">Riot.js</a>，這是一個 JavaScript 的 MVP 框架。</p><p>對於這個新輪子，Nue JS 作者稱他對當前的 Web 開發生態並不滿意，所以想從頭開始編寫一個全新的生態。在過去的 12 個月裏，他一直在投入到 Nue 的開發中，最近全職參與。</p><p>當然他也使用了一些「舊」的創新概念，例如漸進增強、關注點分離 (Separation of concerns) 和語義化 Web 設計。</p><p><img src="https://static.oschina.net/uploads/space/2023/0918/120355_pfQe_2720166.png" referrerpolicy="no-referrer"></p><p>Nue JS 是這個生態的核心組件，其他部分還沒完成：</p><ul><li><strong>Nue JS：</strong>使用減少 10 倍的代碼構建用戶界面</li><li><strong>Nue CSS：</strong>恢復級聯​​樣式的力量</li><li><strong>Nue MVC：</strong>構建可擴展的直觀單頁應用程序</li><li><strong>Nue UI：</strong>用於快速 UI 開發的可複用組件</li><li><strong>Nuemark：</strong>提供豐富互動內容的 Markdown 風味版本</li><li><strong>Nuekit：</strong>使用減少 10 倍的代碼構建網站和 Web 應用程序</li></ul><p>作者表示，一旦所有子項目完成，Nue 將成為 Vite、Next.js 和 Astro 等項目的重要替代品。</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 18 Sep 2023 03:50:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/258529/nue-ecosystem</guid>
            <link>https://www.oschina.net/news/258529/nue-ecosystem</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Unity 道歉：將修改]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>對於上週引發激烈爭議的 <a href="https://www.oschina.net/news/257929/unity-runtime-fee" target="_blank">"runtime fee" 收費政策</a>，Unity 官方今日終於正式進行了迴應。他們表示對收費政策帶來的混亂和焦慮深表歉意，目前正在與團隊成員、社區、客戶和合作夥伴交流，聽取各方意見，以及修改政策——過幾天會公佈。</p><p><img src="https://static.oschina.net/uploads/space/2023/0918/103856_LA5P_2720166.png" referrerpolicy="no-referrer"></p><p>前幾天 Unity 高管 Marc Whitten 已針對這一爭議事件<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.axios.com%2F2023%2F09%2F13%2Funity-runtime-fee-policy-marc-whitten">向外媒 Axios 進行了回覆：</a></p><blockquote><p>Unity 公司實際上只會對第一次安裝進行收費，但另一方面如果同一位用戶在另一台不同的設備上安裝遊戲（例如在 PC 上安裝後再在 Steam Deck 上安裝），則依然會被計入收費。</p><p><img alt="" src="https://static.oschina.net/uploads/space/2023/0915/180359_xxCE_2720166.png" referrerpolicy="no-referrer"></p></blockquote><p>Marc Whitten 還澄清了其他幾點，包括遊戲試玩 Demo 下載不會被計入收取 「運行費」，除非 「Demo 是包含在完整遊戲下載中的一部分」，以及搶先體驗遊戲將被收費，而為慈善事業提供或納入慈善的遊戲將被免費除費用。</p><p>延伸閲讀：</p><ul><li><a href="https://www.oschina.net/news/257929/unity-runtime-fee">Unity 引擎明年起根據遊戲安裝量收費 (runtime fee)</a></li><li><a href="https://www.oschina.net/news/258280/unity-closes-offices-following-death-threats">遊戲引擎開發商 Unity 收到死亡威脅</a></li><li><a href="https://www.oschina.net/news/258477/wait-is-unity-allowed-to-just-change-its-fee-structure-like-that">走近 「收費門」：互相矛盾的服務條款導致 Unity 面臨被起訴的風險</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Mon, 18 Sep 2023 03:02:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/258513/unity-apologize-for-runtime-fee</guid>
            <link>https://www.oschina.net/news/258513/unity-apologize-for-runtime-fee</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[崑崙萬維天工大模型推理能力大幅超過 GPT-3.5 和 LLaMA2]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>9 月 16 日，在權威推理榜單 Benchmark GSM8K 測試中，崑崙萬維完全自研的天工大模型以 80% 的正確率脫穎而出，大幅領先 GPT-3.5（57.1%）和 LLaMA2-70B（56.8%），「這標誌着天工的推理能力達到全球領先，接近 GPT-4」。</p><p>與此同時，<span style="background-color:#ffffff; color:rgba(0, 0, 0, 0.9)">在 MMLU 數據集測試中，天工以 65% 準確率超越了 LLaMA-65B 的 63.4%；</span><span style="background-color:#ffffff; color:rgba(0, 0, 0, 0.9)">在 C-EVAL 數據集測試中，天工以 65% 準確率超越了 GPT3.5 的 54.4%。</span><span style="background-color:#ffffff; color:rgba(0, 0, 0, 0.9)">在 HumanEval 數據集測試中，天工以 37.2% 的準確率超過了 PaLM-540B（26.2%）、LLaMA-65B（23.7%）、LLaMa2 -70B（30.5%）。</span></p><p><img height="229" src="https://oscimg.oschina.net/oscnet/up-2106808c877e4262f7093741a3ddbe71025.png" width="500" referrerpolicy="no-referrer"></p><p>「<span>推理能力對於判斷一個基座大模型是否「聰明」至關重要。在 GSM8K、MMLU、C-EVAL、HumanEval 四項數據集測試中，天工大模型均獲得較高的正確率，表明天工大模型的通用能力很強，核心性能均達到了國際領先水準。</span>」</p><p style="color:rgba(0, 0, 0, 0.9); margin-left:5px; margin-right:5px; text-align:justify"><span>GSM8K 英文數據集測試<span>是<span>目前</span><span>全球公認的</span>評判基座大</span><span>模型推理能力的權威標準。</span>GSM8K 包含 8500 個高質量的數學問題。這些問題被分為 7500 個訓練問題和 1000 個測試問題，一般需要 2 到 8 個步驟來解決。這些問題的解決主要涉及算術運算。GSM8K 數據集的目的是用來測試推理多步數學問題的能力。研究人員通常使用 GSM8K 來評估大型語言模型在解決英文數學問題時的性能表現。</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:5px; margin-right:5px; text-align:justify"><span>除了英文數據集，天工大模型在小米的中文開源數據集 CMATH 測試中也表現良好。CMATH 數據集包括 1700 個小學水平的數學應用題和詳細的註釋，旨在提供一個基準工具，評估當前流行的大模型的數學能力對應小學數學哪一年級的水平，在這份測試集中天工大模型的平均準確率為 76.4% 高於 ChatGPT 的平均準確率 74.8%。</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:5px; margin-right:5px; text-align:justify"><strong><span style="background-color:#ffffff; color:rgba(0, 0, 0, 0.9)">天工和 GPT-3.5 在 GSM8K 測試中的具體表現，示例：</span></strong></p><blockquote><p style="color:#333333; margin-left:5px; margin-right:5px; text-align:justify"><span>E<span>very day, Wendi feeds each of her chickens three cups of mixed chicken feed, containing seeds, mealworms and vegetables to help keep them healthy.&nbsp; She gives the chickens their feed in three separate meals. In the morning, she gives her flock of chickens 15 cups of feed.&nbsp; In the afternoon, she gives her chickens another 25 cups of feed.&nbsp; How many cups of feed does she need to give her chickens in the final meal of the day if the size of Wendi's flock is 20 chickens?</span></span></p><p style="color:#333333; margin-left:5px; margin-right:5px; text-align:left"><span>案例為英文。註釋：每天，Wendi 給每隻雞喂三杯混合雞飼料，其中包括種子、黃粉蟲和蔬菜，以幫助它們保持健康。她分三餐給雞餵食。上午，她給雞羣喂 15 杯飼料。下午，她再給雞喂 25 杯飼料。如果 Wendi 的雞羣有 20 只雞，那麼一天的最後一餐她需要給雞喂多少杯飼料？</span></p></blockquote><p style="color:rgba(0, 0, 0, 0.9); margin-left:5px; margin-right:5px; text-align:justify"><strong>天工<span>給出的解題思路</span>：</strong></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:5px; margin-right:5px; text-align:justify"><img alt="" height="419" src="https://oscimg.oschina.net/oscnet/up-7eb47dfe04b852b49d438f0f1f15ad1f1fa.png" width="500" referrerpolicy="no-referrer"></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:5px; margin-right:5px; text-align:justify"><span><span>最後天工大模型給出的答案是：</span><span>Wendi<span>&nbsp;</span></span>需要在一天的最後一餐中給雞喂<span><span>&nbsp;</span>20<span>&nbsp;</span></span>杯飼料，以確保它們一天都吃飽。</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:5px; margin-right:5px; text-align:justify"><strong><span>GPT-3.5 給出的解題思路：</span></strong></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:5px; margin-right:5px; text-align:justify"><span><img alt="" height="688" src="https://oscimg.oschina.net/oscnet/up-26ce32130080aba37dafd59dbb3078fbf69.png" width="500" referrerpolicy="no-referrer"></span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:5px; margin-right:5px; text-align:justify"><span><span>GPT-3.5</span><span>給出的答案為：</span><span>Wendi<span>&nbsp;</span></span><span>需要在一天的最後一餐中給雞喂</span><span><span>&nbsp;</span>21<span>&nbsp;</span></span><span>杯飼料，為錯誤的答案。</span></span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:5px; margin-right:5px; text-align:justify">目前天工大模型仍屬於內測階段，以上評測暫未整合到天工 AI 搜索和天工 AI 助手，官方<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%2F1UkXNOZRoInoLf8SvtTWRg" target="_blank">表示</a>後續會將最好的基座部署上線，供用戶體驗。</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 18 Sep 2023 02:46:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/258509</guid>
            <link>https://www.oschina.net/news/258509</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[走近「收費門」：互相矛盾的服務條款導致 Unity 面臨被起訴的風險]]>
            </title>
            <description>
                <![CDATA[<div class="content"><blockquote><p><em>混淆不清、相互矛盾的服務條款為訴訟留下了隱患</em></p></blockquote><p>如果你在週一開發了一款 Unity 引擎遊戲，你一般會認為除了訂購 Unity 編輯器軟件本身之外，你不會被收取額外的版稅或其他費用。</p><p>如果你在週二開發了同一款遊戲，你就會突然受到令人震驚的新條款的限制，在達到一定的單個遊戲收入和安裝閾值後，每次安裝將收取高達 0.20 美元的費用（從明年開始）。</p><p>這一變化在遊戲開發社區引發了可以理解的憤怒和指責。但也有人不禁要問，如此巨大的變化在法律上是如何實現的？Unity 是否可以單方面改變其開發者所依賴的收費結構，即使是在完全不同的法律條款下啓動（甚至完成）的開發項目？</p><p>答案似乎取決於你如何理解近年來出現在各種 Unity 服務條款中的一些看似矛盾的條款。</p><h3><strong>Unity：我們想做什麼就做什麼</strong></h3><p>Unity 明確表示，新的收費結構不適用於在 1 月 1 日新公佈的收費結構生效之前安裝的任何遊戲。但在常見問題解答中，<strong>該公司表示，2024 年之前發佈的遊戲在新規則生效後的後續安裝都需要付費。</strong></p><p>"常見問題解答中寫道："假設遊戲符合條件併發布了 Unity 運行時，那麼將收取 Runtime 費用。"我們會查看遊戲的終生安裝次數，以確定是否符合收取運行時費用的條件。然後，我們會根據 2024 年 1 月 1 日之後的所有新安裝情況收取運行時費用。"</p><p>這可能會讓在 2015 年發佈 Unity 遊戲的開發者感到驚訝，當時 Unity 首席執行官約翰-裏奇蒂耶洛（John Riccitiello）還在公開吹捧 Unity 的 "無版稅、不亂搞 "訂閲計劃。現在，即使是當年為 Unity 的 "永久授權 "支付了 1500 美元的開發者，理論上也可能從明年開始需要支付額外的按安裝次數收費的費用（前提是他們的遊戲仍有足夠的收入和安裝次數）。</p><p>Unity 尚未迴應 Ars Technica 的置評請求，但該公司發言人在 "尋找律師 "之後，在論壇上概述了該公司的法律論據：</p><blockquote><p>我們的服務條款規定，Unity 可隨時增加或更改費用。在 Unity Runtime 費用生效前，我們會提前三個多月通知您。額外費用的生效無需徵得同意，而且<strong>我們條款的唯一版本是最新版本</strong>；您不能選擇遵守之前的版本。此外，我們的條款受加利福尼亞州法律管轄，與客戶所在國無關。</p></blockquote><h3><strong>與我一起閲讀舊的法律文件</strong></h3><p>從廣義上講，所有 Unity 開發者簽署的一般法律協議都支持這一立場。至少早在 2013 年，Unity EULA 就包含了一個寬泛的條款，規定公司 "可以隨時修改或終止訂閲期限或其他軟件許可產品"。</p><p>但是，這種 "我們想怎麼改就怎麼改 "的直白語言在 2019 年初變得有些複雜。當時，Unity 陷入了另一場服務條款（ToS）變更的爭議中，這次涉及的新條款似乎禁止了流行的基於雲的多人遊戲開發工具包 SpatialOS。</p><p>雖然 Unity 最終與 SpatialOS 製造商 Improbable 解決了問題，但開發社區擔心未來的 ToS 變更會影響他們的項目是有道理的。為了平息事態，Unity 宣佈了一項新的 "開放平台承諾"，其中包括一項重要的保護措施，防止進一步突然更改 ToS。該公司在<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.unity.com%2Fcommunity%2Fupdated-terms-of-service-and-commitment-to-being-an-open-platform" target="_blank">公告博文</a>中寫道"當你獲得了一個版本的 Unity，但沒有升級你的項目時，我們認為你應該能夠堅持使用那個版本的 ToS"。</p><p>在 Unity 為跟蹤此類 ToS 變動而設立的 GitHub&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweb.archive.org%2Fweb%2F20201111183311%2Fhttps%3A%2F%2Fgithub.com%2FUnity-Technologies%2FTermsOfService%2Fblob%2Fmaster%2FUnity%2520Software%2520Additional%2520Terms.md" target="_blank">頁面</a>上，該承諾被翻譯成了法律術語：</p><blockquote><p>Unity 可以隨時以任何理由更新這些 Unity 軟件附加條款，恕不另行通知（以下簡稱 "更新條款"），更新條款將適用於 Unity 軟件的最新當年版本，但<strong>如果更新條款對您的權利產生不利影響，您可以選擇按照更新條款之前適用的條款（以下簡稱 "之前條款"）繼續使用 Unity 軟件的任何當年版本（例如 2018.x 和 2018.y 以及該當年版本的任何長期支持 (LTS) 版本）。</strong></p></blockquote><p>從表面上看，該條款似乎表明，在 Unity 新條款生效之前發佈的遊戲可以堅持使用遊戲發佈時存在的舊版免安裝費 ToS。唯一可能出現的問題是，如果您想將項目更新到 Unity 的後續版本；在這種情況下，正如 ToS 所述，"您對軟件任何新版本或發行版的使用將受適用於該發行版或版本的更新條款的約束"。</p><p>更重要的是，2019 版的軟件使用條款明確規定了 "非獨佔、不可轉讓、免版稅 "的權利，即在某些寬泛的條件下，"將 Unity Runtime 作為項目的集成部分進行發佈"。這似乎不允許該公司很快計劃對 Unity 遊戲安裝收取 "Unity Runtime 費用"--至少對於決定堅持使用舊版 ToS 的未更新舊項目來説是如此。</p><p>通過 2022 年 10 月 23 日的更新，「保留舊 ToS」和「免版稅運行時間」條款繼續出現在 Unity 的「編輯器軟件服務條款」中，這表明在 Unity 2022.x 和 Unity 2021.x LTS（或更早版本）上製作的未更新項目可能能夠保留構建它們的免費法律結構。但隨後，幾乎沒有通知，2023 年 4 月的編輯器軟件 ToS 更新完全刪除了該安全閥。</p><p>4 月版本頂部的註釋提到，新版本包括對「條款修改」部分的更新。實際上，該「更新」意味着 2019 年引入的「保留舊 ToS」條款只是被批量刪除，而不是替換。此外，更新了「免版稅運行時分發」條款，表明此類分發「需要支付適用的費用」，為本週的安裝費公告悄悄奠定了法律基礎。</p><p>Unity 似乎也在不遺餘力地消除至少一些現存的跡象，表明其以前的「軟件服務條款」有任何不同。承諾的 GitHub 頁面跟蹤 ToS 更改不再有效，儘管 GitHub 的相同分支仍然捕獲舊語言（互聯網檔案館快照表明 GitHub 刪除發生在 2022 年 7 月之後的某個時間）。截至撰寫本文時，Unity 網站上仍有一份較舊的「軟件附加條款」文檔，其中包含「保持舊 ToS」條款不變，日期為 2022 年 3 月。</p><h3><strong>第二個服務條款？</strong></h3><p>對於開發人員來説，4 月份的更新是個壞消息，他們從那時起在不知不覺中使用了最新版本的 Unity 編輯器，似乎在此過程中受制於新規則。但是在舊版本的編輯器（和服務條款）下創建的項目可能仍然受到舊的「保留您的 ToS」條款的保護，對嗎？</p><p>不幸的是，事情並沒有那麼簡單。這是因為 Unity 編輯器軟件 ToS（在 Reddit 和其他地方引起了很多關注）是對更廣泛的 Unity 服務條款文檔的補充，該文檔適用於 Unity 產品和服務的所有用戶。</p><p>這些取代條款對於 Unity 「隨時修改協議且無需事先通知」的權利要寬鬆得多。這裏也沒有「保留舊的 ToS」條款的跡象：</p><blockquote><p>在我們向您提供修改通知後繼續訪問或使用服務，即表示您同意受修改後的條款的約束。<strong>如果您不接受修改後的條款，您唯一的辦法是停止使用服務。</strong></p></blockquote><p>換句話説，如果您不想受新規則的約束，這些總體 Unity 條款表明您唯一的出路是完全停止使用 Unity 的服務（這似乎包括分發安裝和玩遊戲所需的 Unity Runtime）。此外，這些總體條款明確允許 Unity 「通過在網站或服務面板中發佈此類更改，不時增加、修改或添加新的費用和收費」，並至少提前 30 天通知。</p><p>「您在任何此類更改生效日期後繼續使用此類軟件和/或開發人員服務意味着您接受並同意此類更改（如適用）」，更新的 ToS 寫道。</p><p>我能夠找到這個通用 Unity ToS 的最舊版本，存檔日期到 2022 年 1 月，因此尚不完全清楚這種取代語言的有效期。但 2013 年 EULA 中的類似語言表明，這並不是對 Unity 的全新法律保護。</p><p>有趣的是，一月份版本的總體 ToS 還包括一個句子，特別指出了允許您忽略軟件 ToS 更改的不同條款。目前的通用 ToS 刪除了這句話，並明確表示**「為免生疑問」，其修改規則也適用於「附加條款」（即軟件 ToS）**。</p><h3><strong>我們會在法庭上見到你嗎？</strong></h3><p>那麼，所有這些不斷變化且看似矛盾的 ToS 條款在實踐中對於工作的 Unity 開發人員意味着什麼？答案並不完全清楚。</p><p>「當然，在今天的合同中，[Unity]似乎被覆蓋了」，遊戲行業律師理查德·霍格（Richard Hoeg）在 YouTube 直播中分析了這裏的法律問題。「但是存在時間和舊版本的問題，特別是對於不久前已經製作並最終確定的遊戲，遠在做出此更改之前。</p><p>Hoeg 説，Unity 可能會遇到一些法律風險的地方是整體 ToS（Unity 表示只要您使用其服務，您就會受到其約束）和軟件 ToS（直到最近還表示，如果您不更新遊戲，您可以繼續使用舊版本）之間的明顯衝突。「這是一種模稜兩可的感覺...當我們在合法土地上寫合同時，我們首先要避免，「Hoeg 説。</p><p><strong>通常，這種歧義通常會通過更通用的 ToS 覆蓋「附加」編輯器軟件條款來解決</strong>，這些條款在法律術語中被視為輔助條款。與此同時，Hoeg 表示，開發人員可以爭辯説，他們已經合理地依賴了軟件條款中的輔助語言，包括可以想象允許他們保留這些條款的條款，即使在將來發生變化的情況下也是如此。</p><p>Hoeg 説：「有人本可以看着它説，'是的，我將投入我的時間和精力'，通過在不公開的情況下改變這一點，然後在 2023 年 9 月改變這裏的費用結構，你可能會提出索賠。</p><p>想要在法庭上提出這種索賠的開發商可以使用允諾禁止反言的概念進行辯論，或者像 Hoeg 所説的那樣「如果其他人依賴它，你就不能改變交易的概念」。「你向一方承諾，你將給他們 Unity 工具，他們不必付錢，他們花了四年的時間進行投資，教育，學習 Unity 工具集並準備構建遊戲，然後你最後改變了定價，「霍格用假設論證的方式説道。</p><p>雖然霍格説他個人可能接受這種類型的論點，但<strong>在實際法庭上提出這可能是一個艱難的技術主張</strong>。正如霍格所説，在這種論點中，你基本上「把自己投入到正義的概念上，並希望事情對你來説一切都好」。</p><p>不過，這可能是一些 Unity 開發人員準備提出的法律論點。獨立開發者 Xalavier Nelson， Jr.告訴 Axios，「該領域一些使用該引擎的最重要的開發者」正在考慮對這些變化提起集體訴訟，此前週二的社交媒體<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftwitter.com%2FWritNelson%2Fstatus%2F1701720278189937099" target="_blank">帖子</a>也暗示了這一點。</p><p>「我看不出這是合法的」，Cult of the Lamb 開發商 Massive Monster&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.gamesradar.com%2Fgame-devs-say-unitys-new-install-fee-is-a-threat-to-everyone-including-gamers-and-theres-no-going-back-i-dont-want-to-sell-my-house-because-my-game-was-too-popular%2F" target="_blank">告訴</a>&nbsp;PC Gamer。「他們絕對有訴訟要打」。</p><p>然而，最終，<strong>這種潛在的法律糾紛只有在商業夥伴關係的通常慣例完全崩潰時才是必要的</strong>。「很多時候，這些合同將以這樣一種方式編寫，即公司擁有廣泛的權力來做他們將要做的事情，而你最終將處於信任的位置」，Hoeg 説。「作為律師，我們不從事'相信我'的業務。你，作為一個商人，<strong>作為客戶，必須確定你是否與你的商業夥伴有足夠的信任或親密關係，相信他們會持有相對相同的東西</strong>......」</p><p>原文：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Farstechnica.com%2Fgaming%2F2023%2F09%2Fwait-is-unity-allowed-to-just-change-its-fee-structure-like-that%2F" target="_blank">https://arstechnica.com/</a></p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 17 Sep 2023 15:50:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/258477/wait-is-unity-allowed-to-just-change-its-fee-structure-like-that</guid>
            <link>https://www.oschina.net/news/258477/wait-is-unity-allowed-to-just-change-its-fee-structure-like-that</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
    </channel>
</rss>
