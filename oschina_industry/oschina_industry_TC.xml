<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[開源中國-綜合資訊]]>
        </title>
        <link>https://www.oschina.net/news/industry</link>
        <atom:link href="http://rsshub.app/oschina/news/industry" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[開源中國-綜合資訊 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Wed, 13 Mar 2024 12:23:05 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[官宣正式成為 PostgreSQL Contributor，Richard 有何祕訣？]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">作為世界上最受歡迎的開源數據庫之一，PostgreSQL&nbsp;國際社區於 3 月 3 日正式公佈了新加入的 PostgreSQL&nbsp;Contributor&nbsp;名單，以認可為&nbsp;PostgreSQL&nbsp;開源項目做出實質性、長期貢獻的人員。本次公佈的名單中包括&nbsp;3&nbsp;名&nbsp;Contributor&nbsp;和&nbsp;6&nbsp;名&nbsp;Major&nbsp;Contributor。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">拓數派技術專家 Richard&nbsp;Guo&nbsp;本次榮獲 PostgreSQL 官方認可，正式成為一名&nbsp;PostgreSQL&nbsp;Contributor。據統計，Richard&nbsp;是目前&nbsp;PostgreSQL&nbsp;Contributor&nbsp;名單中唯二的中國人。</p><p style="text-align:center"><img src="https://oscimg.oschina.net/oscnet/up-25ee98ae6a7e0a55a085185dd10524643f4.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">眾所周知，PostgreSQL 全球的 Committer 人數長期維持在較少的人數（約 30 人），Contributor&nbsp;名單中也罕見中國人身影。本次，Richard&nbsp;被官方認可為正式的&nbsp;Contributor，這一榮譽既歸功於他所在的拓數派公司開放創新企業文化和強大的技術能力，也得益於&nbsp;Richard&nbsp;對開源技術的喜愛與堅持不懈的努力。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">接下來，拓數派的吉祥物 「派派」 將對話&nbsp;Richard，為大家揭開成為 PostgreSQL&nbsp;Contributor 的祕訣。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>派派：</strong><span>&nbsp;</span><strong>您是如何開始參與開源代碼貢獻的？有什麼特別的經歷或項目激發了您對開源貢獻的興趣？</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>Richard：</strong><span>&nbsp;</span>我參與的第一個開源項目是早在 2012 年，當時由於工作原因，我參與了 Linux&nbsp;Kernel 的開發工作，開始對開源代碼貢獻產生了興趣。2016 年，由於機緣巧合，我加入了&nbsp;Pivotal&nbsp;的開源數據庫產品 Greenplum&nbsp;團隊，進行 Greenplum 開源產品的開發工作。由於 Greenplum 是基於 PostgreSQL 內核研發的，於是當時也開始了對 PostgreSQL 開源社區的關注，並開始了對 PostgreSQL 的貢獻。如今，加入拓數派之後，由於工作需求，也很幸運公司具有擁抱開源的文化，我也在繼續參與 PostgreSQL 社區的開源工作。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>派派：</strong><span>&nbsp;</span><strong>您認為自己主要在哪些方面對 PostgreSQL 做出了貢獻或改進？這些改進對於整個 PostgreSQL 社區有何影響？</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>Richard：</strong><span>&nbsp;</span>在 PostgreSQL 的代碼貢獻中，我主要專注於&nbsp;PostgreSQL&nbsp;優化器和執行器模塊，這也為我後續打造拓數派產品&nbsp;PieCloudDB&nbsp;的優化器奠定了基礎。在&nbsp;PostgreSQL&nbsp;社區，我對代碼優化和性能調優花費了不少時間進行研究，參與了一些&nbsp;Bug&nbsp;Fix&nbsp;和&nbsp;Patch&nbsp;&nbsp;Review 工作，為用戶提供更好的體驗。我還努力推動新功能的實現，提交過一些新&nbsp;Feature。曾經提交的新&nbsp;Feature&nbsp;包括 "Support&nbsp;Right&nbsp;Anti&nbsp;Join"、"Support&nbsp;Memoize&nbsp;for&nbsp;UNION&nbsp;ALL&nbsp;Queries" 等。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>派派：</strong><span>&nbsp;</span><strong>您平時通過什麼來提高的自己技術能力？有哪些技術或領域是您特別關注和學習的？</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>Richard：</strong><span>&nbsp;</span>我一直堅信 「實踐出真知」，通過多閲讀優秀的代碼，多思考其中的邏輯和原理，然後在工作中提高對自己代碼的質量要求是我認為最快打磨技術能力的一種方式。此外，所謂 「三人行，必有我師」，通過多和資深的人交流、討論，往往能學習到很多意想不到的知識。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">除了數據庫的優化器和執行模塊相關的領域，我對&nbsp;AI&nbsp;也非常感興趣，包括數據庫與 AI 的結合，以及 Chatgpt，Sora 等前沿生成式&nbsp;AI&nbsp;應用，我都非常關注。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>派派：</strong><span>&nbsp;</span><strong>對於那些希望成為開源代碼貢獻者的人來説，您有什麼建議或指導？</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>Richard：</strong><span>&nbsp;</span>在參與開源代碼貢獻前，對源碼的熟悉和了解是前提條件。此外，我意識到專注是非常重要的，因此我付出了許多努力來保持專注。舉例來説，我儘量減少手機使用時間，關閉聊天工具等，目前我已成功將每天使用手機的時間控制在&nbsp;1&nbsp;小時以內。同時，也建議大家注重思考和討論，以不斷迭代自己的思維和邏輯，我相信這也是非常重要的。通過積極思考和與他人交流，才能不斷提升自己。</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 13 Mar 2024 09:35:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/282927</guid>
            <link>https://www.oschina.net/news/282927</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[信通院發佈報告，研究中國綜合算力]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#060607; margin-left:0; margin-right:0; text-align:start">《中國綜合算力評價白皮書（2023 年）》由中國信息通信研究院發佈，主要內容包括：</p><ol><li><p style="margin-left:0; margin-right:0"><strong>背景介紹</strong>：隨着科技革命和產業變革的加速，算力成為數字化轉型的新動能。中國在算力、存力、運力方面的基礎設施投入不斷加大，形成了支撐數字經濟發展的重要力量。</p></li><li><p style="margin-left:0; margin-right:0"><strong>算力發展現狀</strong>：截至 2022 年底，中國算力核心產業規模達到 1.8 萬億元，算力總規模達到 180EFLOPS，年增長率近 30%。存力總規模超過 1000EB，網絡單向時延降低到 20 毫秒以內。</p></li><li><p style="margin-left:0; margin-right:0"><strong>綜合算力評價體系</strong>：白皮書構建了一個涵蓋算力、存力、運力、環境等關鍵因素的綜合算力評價指標體系，對我國綜合算力的發展情況進行了多維度的客觀分析，並給出了發展建議。</p></li><li><p style="margin-left:0; margin-right:0"><strong>評價結果</strong>：綜合算力評價結果顯示，廣東省、江蘇省、上海市等東部省份在算力、存力、運力方面整體處於較高水平，而內蒙古自治區、貴州省等西部省份在存力、環境等方面也展現出優勢。</p></li><li><p style="margin-left:0; margin-right:0"><strong>發展建議</strong>：白皮書提出了系統佈局新型基礎設施、加速推動核心技術創新、加快政策標準體系建設、持續構建全產業鏈生態、激發算力產業創新動力等建議，以推動綜合算力的技術創新與基礎設施建設。</p></li><li><p style="margin-left:0; margin-right:0"><strong>數據來源和計算方法</strong>：報告的數據來源於工信部、中國信通院等官方機構和公開資料，採用極差標準化法進行指標標準化，並利用層次分析法（AHP）確定指標權重，最後形成各區域的評價結果。</p></li><li><p style="margin-left:0; margin-right:0"><strong>聯繫方式</strong>：文件最後提供了中國信息通信研究院的地址、郵編、電話、傳真和網址信息。</p></li></ol><p style="color:#060607; margin-left:0; margin-right:0; text-align:start">整體而言，這份白皮書全面闡述了中國綜合算力的發展現狀、評價體系、評價結果，並對未來的發展提出了建議，旨在為我國綜合算力的技術創新與基礎設施建設提供參考。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">報告詳情可至<strong><span style="color:#333333"><span style="background-color:#f39c12">「開源中國 APP - 報告模塊」</span></span></strong>查看。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">APP 下載地址：</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="300" src="https://oscimg.oschina.net/oscnet/up-8ab7bb9f45ecaae87f7a862ea446ae1dacf.png" width="300" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>（<em>目前僅提供 Android 版本）</em></strong></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 13 Mar 2024 07:56:18 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/282905</guid>
            <link>https://www.oschina.net/news/282905</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[美國政府軟件要求提供安全軟件開發認證表]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000">作為改善網絡安全持續努力的一部分，拜登-哈里斯政府宣佈已批准了一份</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.cisa.gov%2Fresources-tools%2Fresources%2Fsecure-software-development-attestation-form" target="_blank">安全軟件開發認證表</a>。</p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000">該表格由 CISA 和管理和預算辦公室 (OMB) 於 2024 年 3 月 11 聯合發佈，任何提供政府將使用的軟件的公司都需要填寫該表格。它將有助於確保該軟件是由優先考慮安全性的公司開發的。&nbsp;</span></p><p style="margin-left:0; margin-right:0; text-align:start"><img height="250" src="https://oscimg.oschina.net/oscnet/up-5f101db1d80c4331864091d96dc415eac6e.png" width="500" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000">Endor Labs 首席安全顧問兼 CISA 網絡創新研究員 Chris Hughes 表示：「表格中的要求代表了一些基本的安全開發實踐，希望向聯邦政府出售軟件的供應商如果想參與聯邦監管的生態系統，就應該能夠滿足這些要求。」&nbsp;</span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000">表格中的要求之一是軟件必須在安全的環境中開發。這包括分離生產和開發環境，最大限度地減少代碼中不安全產品的使用，跨環境強制執行多因素身份驗證，加密敏感數據，實施持續監控和警報等防禦實踐，以及定期記錄、監控和審核信任關係。&nbsp;</span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000">「分離開發和生產環境、實施日誌記錄和 MFA 等做法是任何現代安全軟件開發環境中都應該存在的關鍵安全控制措施。」</span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000">另一個要求是通過使用自動化工具監控第三方代碼並維護內部代碼和第三方組件的來源，真誠地努力維護可信的供應鏈。它還需要定期使用自動化工具來檢查安全漏洞，包括制定披露和解決已知漏洞的策略。</span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000">然而 Hughes 認為，這種形式缺少一些元素。例如，它不需要使用威脅建模或內存安全，而這正是 CISA 一直在推動的事情。他表示，它還允許首席執行官指定其他人在證明上簽字，以便在出現問題或證明造假時作為潛在的替罪羊。&nbsp;</span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000">「一方面，我們聽説網絡安全需要成為董事會的議題，CISA 甚至呼籲高管層參與其有關安全設計/默認的出版物；但另一方面，這種形式允許將這一關鍵認證活動委託給某人組織中的其他人，並可能使其無法被最高管理層/首席執行官和執行領導團隊看到。」</span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000">Hughes 認為，最難滿足認證要求的軟件生產商是那些尚未實施安全軟件開發實踐的軟件生產商。&nbsp;</span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000">「他們需要評估當前的開發實踐，找出缺陷並實施糾正計劃。這當然需要時間和資源，而規模較小的初創公司和不成熟的組織獲得這些時間和資源的機會有限，尤其是面對對上市速度、收入、投資者回報、功能速度等方面的競爭需求。」</span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000">CISA 的在線表單提交存儲庫 (</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsoftwaresecurity.cisa.gov%2F" target="_blank">https://softwaresecurity.cisa.gov</a><span style="color:#000000">) 預計將於 2024 年 3 月下旬提供。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 13 Mar 2024 07:13:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/282896/secure-software-development-attestation-form</guid>
            <link>https://www.oschina.net/news/282896/secure-software-development-attestation-form</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[全球首位 AI 軟件工程師 Devin：能自學新語言、開發迭代 App、自動 Debug]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>初創公司 Cognition 近日<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftwitter.com%2Fcognition_labs%2Fstatus%2F1767548763134964000" target="_blank">發佈公告</a></u>，宣佈推出全球首個 AI 軟件工程師 Devin，並號稱會徹底改變人類構建軟件的方式。</p><p><img height="1758" src="https://oscimg.oschina.net/oscnet/up-63fe0533116cdf85964e331427c9d8b851b.png" width="1282" referrerpolicy="no-referrer"></p><p>官方對其的描述如下：Devin 是一位不知疲倦、技術嫺熟的隊友，隨時準備與您並肩作戰，或獨立完成任務供您審查。有了 Devin，工程師可以專注於更有趣的問題，工程團隊可以努力實現更遠大的目標。</p><p>Devin 所具備的技能如下：</p><ul><li>快速掌握新技術：只需閲讀文檔，Devin 就能快速掌握不熟悉的工具和框架；</li><li>開發端到端應用：構建並部署功能齊全的網絡應用程序，根據用戶反饋逐步增加功能；</li><li>自動化查找 BUG：Devin 擅長識別、調試和修復代碼問題，同時為開源和生產級軟件倉庫作出貢獻；</li><li>AI 培訓：從研究資料庫中獲取指令，建立並微調大型語言模型。</li></ul><p>Devin 在 SWE-bench 編碼基準測試中取得了突破性的成功，展示了其執行復雜任務的能力，甚至超越了頂尖的人類工程師。</p><p>Devin 擅長長期推理能力，可以自主規劃和完成軟件項目，並在此過程中做出數以千計的準確決策。</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 13 Mar 2024 07:12:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/282895/cognition-labs-devin</guid>
            <link>https://www.oschina.net/news/282895/cognition-labs-devin</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[蘋果放寬歐盟 App Store 軟件分發規則]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">蘋果公司<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.apple.com%2Fnews%2F%3Fid%3D8c1m8hqt" target="_blank">宣佈</a>計劃放寬歐盟 App Store 的部分軟件分發規則。「我們為在歐盟 (EU) 分發應用程序的開發者提供了更大的靈活性，包括引入一種直接從開發者網站分發應用程序的新方法。」</span></p><p><img height="189" src="https://oscimg.oschina.net/oscnet/up-aeff8c07ddcf1ab5d5c5b257662843ab247.png" width="500" referrerpolicy="no-referrer"></p><p><span style="color:#000000">據悉，此舉將使該公司更容易遵守歐盟立法者於 2022 年通過的《數字服務法》和《數字市場法》這兩部反壟斷法，分別於上個月和上週生效。</span></p><p><span style="color:#000000">公告指出，已同意歐盟應用程序替代條款附錄的開發者可以為其在歐盟的應用程序提供新選項：</span></p><ul><li><span style="color:#000000">備選應用市場（Alternative app marketplaces）。市場可以選擇僅提供來自市場開發商的應用程序目錄。</span></li><li><span style="color:#000000">Linking out to purchase。修訂後的應用商店規則允許歐盟的開發者自定義指向外部網站的應用內鏈接。軟件團隊現在可以「選擇如何設計促銷、折扣和其他交易」。此前，應用程序僅限於使用 Apple 提供的一組界面模板，更新後這些模板將繼續作為可選的開發人員資源提供。</span></li></ul><p><span style="color:#000000">預計今年春季晚些時候還將會推出 Web Distribution 功能，授權開發者可以直接通過開發者擁有的網站向歐盟用戶分發 iOS 應用程序。Apple 將為授權開發者提供 API 訪問權限，以方便他們通過網絡發佈應用程序、集成系統功能、備份和恢復用戶的應用程序等。</span></p><p><span style="color:#000000">更多相關詳情可查看&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.apple.com%2Fsupport%2Fweb-distribution-eu%2F" target="_blank">Getting ready for Web Distribution in&nbsp;the&nbsp;EU</a><span style="color:#1d1d1f">。</span></p><p><strong><span style="color:#1d1d1f">相關閲讀：</span></strong></p><ul><li style="margin-left: 0px; margin-right: 0px; text-align: start;"><a href="https://www.oschina.net/news/276674" target="_blank">蘋果在歐盟地區放開對瀏覽器和應用商店的限制</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Wed, 13 Mar 2024 06:04:30 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/282888/apple-app-store-software-distribution-rules-eu</guid>
            <link>https://www.oschina.net/news/282888/apple-app-store-software-distribution-rules-eu</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Tremor —— 模塊化組件 React 庫]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div><p>Tremor 是一個快速構建儀錶板的 React 庫，完全開源，由數據科學家和軟件工程師打造。</p></div><p><img height="1000" src="https://static.oschina.net/uploads/space/2023/0609/161343_Wiyn_4937141.png" width="3000" referrerpolicy="no-referrer"></p><h2>入門</h2><p>對於新項目，官方建議使用 Next.js 13.4+，要使用該庫，還需要在項目中設置 Tailwind CSS。</p><h2>使用 NextJS</h2><p>在終端中，我們會創建一個新的 Next 項目，當提示 <code>Would you like to use Tailwind CSS with this project?</code>時，選擇 <code>Yes</code>.</p><div><pre>npx create-next-app@latest my-project
cd my-project</pre></div><h3>使用 Tremor CLI 安裝</h3><p>建議使用我們的 CLI 安裝 Tremor。 為此，請運行此命令並選擇 Next 作為你的框架。</p><div><pre>npx @tremor/cli@latest init</pre></div><p>現在你已經設置好了，就可以啓動開發服務器了。</p><div><pre>npm run dev</pre></div><p>&nbsp;</p></div>
                                                                ]]>
            </description>
            <pubDate>Wed, 13 Mar 2024 03:14:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/p/tremor</guid>
            <link>https://www.oschina.net/p/tremor</link>
        </item>
        <item>
            <title>
                <![CDATA[Gitee 推薦 | 自動化測試基礎框架，有趣（YouQu）]]>
            </title>
            <description>
                <![CDATA[<p align="center"><a href="https://gitee.com/link?target=https%3A%2F%2Flinuxdeepin.github.io%2Fdeepin-autotest-framework%2F"><img src="https://gitee.com/deepin-community/deepin-autotest-framework/raw/master/docs/logo.png" width="520" alt="YouQu" referrerpolicy="no-referrer"></a></p><p align="center"><em>有趣，一個使用簡單且功能強大的自動化測試基礎框架。</em></p><p><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Flinuxdeepin%2Fdeepin-autotest-framework%2Fissues"><img src="https://img.shields.io/github/issues/linuxdeepin/deepin-autotest-framework?color=%23F79431" alt="GitHub issues" referrerpolicy="no-referrer"></a><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Flinuxdeepin%2Fdeepin-autotest-framework%2Fpulls"><img src="https://img.shields.io/github/issues-pr/linuxdeepin/deepin-autotest-framework?color=%23F79431" alt="GitHub pull requests" referrerpolicy="no-referrer"></a><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Flinuxdeepin%2Fdeepin-autotest-framework%2Fdiscussions"><img src="https://img.shields.io/github/discussions/linuxdeepin/deepin-autotest-framework?color=%23F79431" alt="GitHub Discussions" referrerpolicy="no-referrer"></a></p><p><a href="https://gitee.com/link?target=https%3A%2F%2Fpypi.org%2Fproject%2Fyouqu%2F"><img src="https://img.shields.io/pypi/v/youqu?style=flat&amp;logo=github&amp;link=https%3A%2F%2Fpypi.org%2Fproject%2Fyouqu%2F&amp;color=%23F79431" alt="PyPI" referrerpolicy="no-referrer"></a><img src="https://img.shields.io/pypi/l/youqu?color=%23F79431" alt="PyPI - License" referrerpolicy="no-referrer"><img src="https://img.shields.io/pypi/pyversions/youqu?color=%23F79431" alt="PyPI - Python Version" referrerpolicy="no-referrer"><img src="https://img.shields.io/badge/UOS%2FDeepin/Ubuntu/Debian-Platform?style=flat&amp;label=OS&amp;color=%23F79431" alt="Static Badge" referrerpolicy="no-referrer"><img src="https://img.shields.io/badge/Linux-Platform?style=flat&amp;label=Platform&amp;color=%23F79431" alt="Static Badge" referrerpolicy="no-referrer"><img src="https://img.shields.io/badge/Material_for_MkDocs-526CFE?style=flat&amp;logo=MaterialForMkDocs&amp;logoColor=white&amp;color=%23F79431" alt="Built with Material for MkDocs" referrerpolicy="no-referrer"></p><p><a href="https://gitee.com/link?target=https%3A%2F%2Fpepy.tech%2Fproject%2Fyouqu"><img src="https://static.pepy.tech/badge/youqu/week" alt="Downloads" referrerpolicy="no-referrer"></a><a href="https://gitee.com/link?target=https%3A%2F%2Fpepy.tech%2Fproject%2Fyouqu"><img src="https://static.pepy.tech/badge/youqu/month" alt="Downloads" referrerpolicy="no-referrer"></a><a href="https://gitee.com/link?target=https%3A%2F%2Fpepy.tech%2Fproject%2Fyouqu"><img src="https://static.pepy.tech/badge/youqu" alt="Downloads" referrerpolicy="no-referrer"></a></p><p><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Flinuxdeepin%2Fdeepin-autotest-framework"><img src="https://hits.sh/github.com/linuxdeepin/deepin-autotest-framework.svg?style=flat&amp;label=Github_Hits&amp;color=blue" alt="Hits" referrerpolicy="no-referrer"></a><a href="https://gitee.com/link?target=https%3A%2F%2Flinuxdeepin.github.io%2Fdeepin-autotest-framework"><img src="https://hits.sh/linuxdeepin.github.io/deepin-autotest-framework.svg?style=flat&amp;label=YouQu_Hits&amp;color=blue" alt="Hits" referrerpolicy="no-referrer"></a><a href="https://gitee.com/link?target=http%3A%2F%2Fyouqu.uniontech.com%2F"><img src="https://hits.sh/youqu.uniontech.com.svg?style=flat&amp;label=YouQu%E5%86%85%E7%BD%91_Hits&amp;color=blue" alt="Hits" referrerpolicy="no-referrer"></a><a href="https://gitee.com/link?target=https%3A%2F%2Fpypi.org%2Fproject%2Fyouqu%2F"><img src="https://hits.sh/pypi.org/project/youqu.svg?style=flat&amp;label=PyPI_Hits&amp;color=blue" alt="Hits" referrerpolicy="no-referrer"></a></p><hr><p><strong>文檔</strong>: <a href="https://gitee.com/link?target=https%3A%2F%2Flinuxdeepin.github.io%2Fdeepin-autotest-framework" target="_blank"></a><a href="https://gitee.com/link?target=https%3A%2F%2Flinuxdeepin.github.io%2Fdeepin-autotest-framework">https://linuxdeepin.github.io/deepin-autotest-framework</a></p><p><strong>源碼</strong>: <a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Flinuxdeepin%2Fdeepin-autotest-framework" target="_blank"></a><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Flinuxdeepin%2Fdeepin-autotest-framework">https://github.com/linuxdeepin/deepin-autotest-framework</a></p><hr><p>有趣（YouQu）是深度科技開源的一個用於 <code>Deepin/UOS</code> 操作系統（Linux）的自動化測試框架，採用結構分層的設計理念，支持多元化元素定位和斷言、用例標籤化管理和執行、強大的日誌和報告輸出等特色功能，同時完美兼容 X11、Wayland 顯示協議，環境部署簡單，操作易上手。</p><h3><a id="user-content-愛上-有趣-的-18-個理由" class="anchor" href="https://gitee.com/deepin-community/deepin-autotest-framework#%E7%88%B1%E4%B8%8A-%E6%9C%89%E8%B6%A3-%E7%9A%84-18-%E4%B8%AA%E7%90%86%E7%94%B1"></a>愛上 「有趣」 的 18 個理由</h3><ol><li>核心庫提供了統一的接口，編寫方法時只需要導入一個包就可以使用到核心庫提供的所有功能；</li><li>公共庫封裝了很多常用模塊的相關方法，比如：任務欄的操作、桌面的操作、右鍵菜單的操作等等；</li><li>除了常用的屬性定位、圖像識別以外，我們還提供基於 <code>UI</code> 的元素定位方案，其使用簡單且高效，效果一定能驚訝到你；</li><li>對屬性定位的方法進行了二次封裝，將編寫屬性定位的方法變得簡單而優雅；</li><li>對圖像識別定位技術進行功能升級，除了支持單個座標返回，還支持同一界面下多個相同元素返回多個座標的功能；</li><li>提供用例標籤化管理、批量跳過和批量條件跳過的功能，你想不到一個 <code>csv</code> 文件原來能幹這麼多事情；</li><li>提供了功能強大的執行器入口，讓你可以方便的在本地執行任何用例集的用例，其豐富的自定義配置項，滿足你對執行器所有的幻想；</li><li>提供遠程執行的功能，可以控制多台機器並行跑，或者分佈式跑，這種付費功能現在免費給你用；</li><li>提供自動輸出日誌的功能，你再也不用為每個方法單獨寫輸出日誌的代碼，一切我們給你搞定了，日誌輸出不僅內容豐富，顏值也絕對在線，我們還自己設計了一款終端輸出主題叫《五彩斑斕的黑》；</li><li>提供一鍵部署自動化測試環境的功能，讓你再也不用為環境部署而煩惱；</li><li>提供自動生成多種報告的功能，你想輸出什麼報告形式都行，而且我們在報告中還加入了失敗錄屏和失敗截圖的功能；</li><li>對斷言進行了二次封裝，提供更友好化的錯誤提示，讓定位問題精準高效；</li><li>不僅支持單條用例超時控制，而且還支持動態控制用例批量執行的總時間，確保 <code>CI</code> 環境下能順暢運行；</li><li>支持本地文件測試套執行、<code>PMS</code> 測試套執行、標籤化執行方案，滿足你各種場景下的執行需求；</li><li>支持基於深度學習的 <code>OCR</code> 功能，可定位可斷言，中文識別的天花板；</li><li>完美兼容 <code>Wayland</code>  和 <code>X11</code>，真正做到一套代碼，隨處執行；</li><li>支持多種方式的數據回填功能，其中異步回填的方案，完美解決了數據回填的耗時問題；</li><li>支持重啓交互場景用例的執行，使用方法優雅簡潔；</li></ol><hr><p>統信公司內網還可以訪問【<a href="https://gitee.com/link?target=http%3A%2F%2Fyouqu.uniontech.com%2F">內網文檔</a>】，文檔內容一樣，訪問速度更快哦~~</p><h2><a id="user-content-安裝使用" class="anchor" href="https://gitee.com/deepin-community/deepin-autotest-framework#%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8"></a>安裝使用</h2><p>從 PyPI 安裝:</p><div><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="gp">$</span><span class="w"></span><span class="nb">sudo </span>pip3 <span class="nb">install </span>youqu</span><span id="LC2" class="line"><span class="gp">---&gt;</span><span class="w"></span>100%</span></pre><div class="markdown-code-block-copy-btn"></div></div></div></div><p>創建項目:</p><div><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="gp">$</span><span class="w"></span>youqu-startproject my_project</span><span id="LC2" class="line"><span class="gp">---&gt;</span><span class="w"></span>100%</span><span id="LC3" class="line"><span class="go">The project: [my_project],has been created by youqu-x.x.x</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div></div><p>如果 <code>youqu-startproject</code> 後面不加參數，默認的項目名稱為：<code>youqu</code> ；</p><p>安裝依賴:</p><div><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="go">// 如果你的測試機密碼不是 `1` ，那你需要在全局配置文件 `globalconfig.ini` 裏面將 `PASSWORD` 配置項修改為當前測試機的密碼。</span></span><span id="LC2" class="line"><span class="gp">$</span><span class="w"></span><span class="nb">cd </span>my_project</span><span id="LC3" class="line"><span class="gp">$</span><span class="w"></span>bash env.sh</span><span id="LC4" class="line"><span class="gp">---&gt;</span><span class="w"></span>100%</span></pre><div class="markdown-code-block-copy-btn"></div></div></div></div><hr><p><strong>【APP 工程】</strong></p><p>如果您已經有一個可用的 <code>APP</code> 工程，將應用庫放到基礎框架下 <code>apps</code> 目錄下，像這樣：</p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line">my_project</span><span id="LC2" class="line">├── apps</span><span id="LC3" class="line">│   ├── autotest_deepin_music  <span class="c"># 應用庫</span></span><span id="LC4" class="line">...</span></pre><div class="markdown-code-block-copy-btn"></div></div></div><p>如果您還沒有 <code>APP</code> 工程，建議使用框架提供的腳手架功能創建一個全新的 <code>APP</code> 工程。</p><h2><a id="user-content-創建工程" class="anchor" href="https://gitee.com/deepin-community/deepin-autotest-framework#%E5%88%9B%E5%BB%BA%E5%B7%A5%E7%A8%8B"></a>創建工程</h2><p>創建一個 APP 工程：</p><div><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="gp">$</span><span class="w"></span>youqu manage.py startapp autotest_deepin_some</span><span id="LC2" class="line"><span class="gp">---&gt;</span><span class="w"></span>100%</span></pre><div class="markdown-code-block-copy-btn"></div></div></div></div><p>這樣在 <code>apps</code> 目錄下會創建一個子項目工程 <code>autotest_deepin_some</code>，同時新建好工程模板目錄和模板文件：</p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line">apps</span><span id="LC2" class="line">└── autotest_deepin_some</span><span id="LC3" class="line"> &nbsp;&nbsp; ├── <span class="k">case</span></span><span id="LC4" class="line"> &nbsp;&nbsp; │&nbsp;&nbsp; ├── assert_res</span><span id="LC5" class="line"> &nbsp;&nbsp; │&nbsp;&nbsp; │&nbsp;&nbsp; └── readme</span><span id="LC6" class="line"> &nbsp;&nbsp; │&nbsp;&nbsp; ├── base_case.py</span><span id="LC7" class="line"> &nbsp;&nbsp; │&nbsp;&nbsp; └── __init__.py</span><span id="LC8" class="line"> &nbsp;&nbsp; ├── config.ini</span><span id="LC9" class="line"> &nbsp;&nbsp; ├── config.py</span><span id="LC10" class="line"> &nbsp;&nbsp; ├── conftest.py</span><span id="LC11" class="line"> &nbsp;&nbsp; ├── control</span><span id="LC12" class="line"> &nbsp;&nbsp; ├── deepin_some_assert.py</span><span id="LC13" class="line"> &nbsp;&nbsp; ├── deepin_some.csv</span><span id="LC14" class="line"> &nbsp;&nbsp; ├── __init__.py</span><span id="LC15" class="line"> &nbsp;&nbsp; └── widget</span><span id="LC16" class="line"> &nbsp;&nbsp;     ├── base_widget.py</span><span id="LC17" class="line"> &nbsp;&nbsp;     ├── case_res</span><span id="LC18" class="line"> &nbsp;&nbsp;     │&nbsp;&nbsp; └── readme</span><span id="LC19" class="line"> &nbsp;&nbsp;     ├── deepin_some_widget.py</span><span id="LC20" class="line"> &nbsp;&nbsp;     ├── __init__.py</span><span id="LC21" class="line"> &nbsp;&nbsp;     ├── other.ini</span><span id="LC22" class="line"> &nbsp;&nbsp;     ├── other_widget.py</span><span id="LC23" class="line"> &nbsp;&nbsp;     ├── pic_res</span><span id="LC24" class="line"> &nbsp;&nbsp;     │&nbsp;&nbsp; └── readme</span><span id="LC25" class="line"> &nbsp;&nbsp;     └── ui.ini</span></pre><div class="markdown-code-block-copy-btn"></div></div></div><p><code>autotest_deepin_some</code> 是你的工程名稱，比如：<code>autotest_deepin_music</code> ；</p><p>在此基礎上，你可以快速的開始你的 AT 項目，更重要的是確保創建工程的規範性。</p><h2><a id="user-content-運行" class="anchor" href="https://gitee.com/deepin-community/deepin-autotest-framework#%E8%BF%90%E8%A1%8C"></a>運行</h2><h3><a id="user-content-1-工作空間" class="anchor" href="https://gitee.com/deepin-community/deepin-autotest-framework#1-%E5%B7%A5%E4%BD%9C%E7%A9%BA%E9%97%B4"></a>1. 工作空間</h3><p>在項目根目錄下有一個 <code>manage.py</code> ，它是一個執行器入口，提供了本地執行、遠程執行等的功能。</p><h3><a id="user-content-2-本地執行" class="anchor" href="https://gitee.com/deepin-community/deepin-autotest-framework#2-%E6%9C%AC%E5%9C%B0%E6%89%A7%E8%A1%8C"></a>2. 本地執行</h3><div><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="gp">$</span><span class="w"></span>youqu manage.py run</span></pre><div class="markdown-code-block-copy-btn"></div></div></div></div><h4><a id="user-content-21-命令行參數" class="anchor" href="https://gitee.com/deepin-community/deepin-autotest-framework#21-%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%8F%82%E6%95%B0"></a>2.1. 命令行參數</h4><p>通過命令行參數配置參數，使用 <code>-h</code> 或 <code>--help</code> 可以查看所有支持的命令行參數：</p><div><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="gp">$</span><span class="w"></span>youqu manage.py run <span class="nt">-h</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div></div><p>在一些 CI 環境下使用命令行參數會更加方便：</p><div><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="gp">$</span><span class="w"></span>youqu manage.py run <span class="nt">--app</span> apps/autotest_deepin_music <span class="nt">--keywords</span><span class="s2">"xxx"</span><span class="nt">--tags</span><span class="s2">"xxx"</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div></div><p>更多參數請查看【<a href="https://gitee.com/link?target=https%3A%2F%2Flinuxdeepin.github.io%2Fdeepin-autotest-framework%2F%25E6%25A1%2586%25E6%259E%25B6%25E5%258A%259F%25E8%2583%25BD%25E4%25BB%258B%25E7%25BB%258D%2F%25E6%2589%25A7%25E8%25A1%258C%25E7%25AE%25A1%25E7%2590%2586%25E5%2599%25A8%2F%2321">命令行參數</a>】</p><h4><a id="user-content-22-配置文件" class="anchor" href="https://gitee.com/deepin-community/deepin-autotest-framework#22-%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6"></a>2.2. 配置文件</h4><p>通過配置文件配置參數</p><p>在配置文件 <code>setting/globalconfig.ini</code> 裏面支持配置對執行的一些參數進行配置，配置完成之後，直接在命令行執行 <code>manage.py</code> 就好了。</p><p>詳細配置項請查看【<a href="https://gitee.com/link?target=https%3A%2F%2Flinuxdeepin.github.io%2Fdeepin-autotest-framework%2F%25E6%25A1%2586%25E6%259E%25B6%25E5%258A%259F%25E8%2583%25BD%25E4%25BB%258B%25E7%25BB%258D%2F%25E6%2589%25A7%25E8%25A1%258C%25E7%25AE%25A1%25E7%2590%2586%25E5%2599%25A8%2F%2322">配置項</a>】</p><h3><a id="user-content-3-遠程執行" class="anchor" href="https://gitee.com/deepin-community/deepin-autotest-framework#3-%E8%BF%9C%E7%A8%8B%E6%89%A7%E8%A1%8C"></a>3. 遠程執行</h3><p>遠程執行就是用本地作為服務端控制遠程機器執行，遠程機器執行的用例相同；</p><p>使用 <code>remote</code> 命令：</p><div><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="gp">$</span><span class="w"></span>youqu manage.py remote</span></pre><div class="markdown-code-block-copy-btn"></div></div></div></div><h4><a id="user-content-31-遠程多機器分佈式異步執行" class="anchor" href="https://gitee.com/deepin-community/deepin-autotest-framework#31-%E8%BF%9C%E7%A8%8B%E5%A4%9A%E6%9C%BA%E5%99%A8%E5%88%86%E5%B8%83%E5%BC%8F%E5%BC%82%E6%AD%A5%E6%89%A7%E8%A1%8C"></a>3.1. 遠程多機器分佈式異步執行</h4><p><img src="https://pic.imgdb.cn/item/64f6d3c0661c6c8e549f8ca5.png" alt="" referrerpolicy="no-referrer"></p><p>多機器分佈式異步執行就是由本地 YouQu 作為服務端，控制遠程 N 台機器執行相同的用例，執行完之後所有測試機的測試結果會返回給服務端 report 目錄下；</p><p>遠程執行同樣通過配置文件 <code>setting/globalconfig.ini</code> 進行用例相關配置；</p><p>需要重點説一下遠程執行時的測試機信息配置，在配置文件 <code>setting/remote.ini</code>  裏面配置測試機的用戶名、IP、密碼。</p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="c">;=============================== CLIENT LIST =====================================</span></span><span id="LC2" class="line"><span class="c">; 測試機配置列表</span></span><span id="LC3" class="line"><span class="c">;[client{number}]     ;測試機別名，有多少台測試機就寫多少個 client，別名必須包含 client 字符，且不能重複。</span></span><span id="LC4" class="line"><span class="c">;user =               ;測試機 user</span></span><span id="LC5" class="line"><span class="c">;ip =                 ;測試機 ip</span></span><span id="LC6" class="line"><span class="c">;password = 1         ;測試機的密碼, 可以不配置此項，默認取 CLIENT_PASSWORD 的值；</span></span><span id="LC7" class="line"><span class="c">;如果你所有測試機密碼都相同，那麼只需要配置 CLIENT_PASSWORD 就可以了</span></span><span id="LC8" class="line"><span class="c">;=================================================================================</span></span><span id="LC9" class="line"></span><span id="LC10" class="line"><span class="nn">[client1]</span></span><span id="LC11" class="line"><span class="py">user</span><span class="p">=</span><span class="s">uos</span></span><span id="LC12" class="line"><span class="py">ip</span><span class="p">=</span><span class="s">10.8.15.xx</span></span><span id="LC13" class="line"></span><span id="LC14" class="line"><span class="nn">[client2]</span></span><span id="LC15" class="line"><span class="py">user</span><span class="p">=</span><span class="s">uos</span></span><span id="LC16" class="line"><span class="py">ip</span><span class="p">=</span><span class="s">10.8.15.xx</span></span><span id="LC17" class="line"></span><span id="LC18" class="line"><span class="nn">[client3]</span></span><span id="LC19" class="line"><span class="py">user</span><span class="p">=</span><span class="s">uos</span></span><span id="LC20" class="line"><span class="py">ip</span><span class="p">=</span><span class="s">10.8.11.xx</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><p>有多少台機器就像這樣參考上面的格式寫就行了。</p><p>然後在命令行：</p><div><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="gp">$</span><span class="w"></span>youqu manage.py remote</span></pre><div class="markdown-code-block-copy-btn"></div></div></div></div><p>這樣運行是從配置文件去讀取相關配置。</p><p>如果你不想通過配置文件，你仍然通過命令行參數進行傳參，</p><p>以下為 <code>python3 manage.py remote</code> 提供的一些參數選項：</p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="o">-</span><span class="nx">h</span><span class="p">,</span><span class="o">--</span><span class="nx">help</span><span class="nx">show</span><span class="k">this</span><span class="nx">help</span><span class="nx">message</span><span class="o">and</span><span class="nx">exit</span></span><span id="LC2" class="line"><span class="o">-</span><span class="nx">c</span><span class="nx">CLIENTS</span><span class="p">,</span><span class="o">--</span><span class="nx">clients</span><span class="nx">CLIENTS</span></span><span id="LC3" class="line"><span class="err">遠程機器的</span><span class="nx">user</span><span class="vi">@</span><span class="na">ip</span><span class="o">:</span><span class="nx">password</span><span class="p">,</span><span class="err">多個機器用</span><span class="s">'/'</span><span class="err">連接</span><span class="p">,</span><span class="err">如果</span><span class="nx">password</span><span class="err">不傳入</span><span class="p">,</span><span class="err">默認取</span><span class="nx">sett</span></span><span id="LC4" class="line"><span class="nx">ing</span><span class="o">/</span><span class="nx">remote</span><span class="p">.</span><span class="na">ini</span><span class="err">中</span><span class="nx">CLIENT_PASSWORD</span><span class="err">的值</span><span class="p">,</span><span class="err">比如</span><span class="o">:</span><span class="nx">uos</span><span class="err">@</span><span class="mf">10.8</span><span class="p">.</span><span class="mi">13</span><span class="p">.</span><span class="na">xx</span><span class="o">:</span><span class="mi">1</span></span><span id="LC5" class="line"><span class="err">或</span><span class="nx">uos</span><span class="err">@</span><span class="mf">10.8</span><span class="p">.</span><span class="mi">13</span><span class="p">.</span><span class="na">xx</span></span><span id="LC6" class="line"><span class="o">-</span><span class="nx">s</span><span class="p">,</span><span class="o">--</span><span class="nx">send_code</span><span class="err">發送代碼到測試機（不含</span><span class="nx">report</span><span class="err">目錄）</span></span><span id="LC7" class="line"><span class="o">-</span><span class="nx">e</span><span class="p">,</span><span class="o">--</span><span class="nx">build_env</span><span class="err">搭建測試環境</span><span class="p">,</span><span class="err">如果為</span><span class="no">yes</span><span class="err">，不管</span><span class="nx">send_code</span><span class="err">是否為</span><span class="no">yes</span><span class="err">都會發送代碼到測試機</span><span class="p">.</span></span><span id="LC8" class="line"><span class="o">-</span><span class="nx">p</span><span class="nx">CLIENT_PASSWORD</span><span class="p">,</span><span class="o">--</span><span class="nx">client_password</span><span class="nx">CLIENT_PASSWORD</span></span><span id="LC9" class="line"><span class="err">測試機密碼（全局）</span></span><span id="LC10" class="line"><span class="o">-</span><span class="nx">y</span><span class="nx">PARALLEL</span><span class="p">,</span><span class="o">--</span><span class="nx">parallel</span><span class="nx">PARALLEL</span></span><span id="LC11" class="line"><span class="na">yes</span><span class="o">:</span><span class="err">表示所有測試機並行跑，執行相同的測試用例</span><span class="p">;</span><span class="na">no</span><span class="o">:</span><span class="err">表示測試機分佈式執行，服務端會根據收集到的測試用例自</span></span><span id="LC12" class="line"><span class="err">動分配給各個測試機執行。</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><p>==除了這些特有參數以外，它同樣支持本地執行的所有參數；==</p><p>在命令行這樣運行：</p><div><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="gp">$</span><span class="w"></span>youqu manage.py remote <span class="nt">-a</span> apps/autotest_deepin_music <span class="nt">-c</span> uos@10.8.13.x3/uos@10.8.13.x4 <span class="nt">-k</span><span class="s2">"xxx"</span><span class="nt">-t</span><span class="s2">"xxx"</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div></div><p>所有用例執行完之後會在 <code>report</code> 目錄下回收各個測試機執行的測試報告。</p><p>注意：如果遠程機器沒有搭建自動化測試環境，記得加上參數 <code>-e</code> ：</p><div><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="gp">$</span><span class="w"></span>youqu manage.py remote <span class="nt">-a</span> ... <span class="nt">-e</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div></div><p>執行前確保遠程機器已經開啓了 ssh 服務，否則會提示無法連接，如果沒有開啓，請手動開啓：</p><div><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="gp">$</span><span class="w"></span><span class="nb">sudo </span>systemctl restart ssh</span><span id="LC2" class="line"><span class="gp">$</span><span class="w"></span><span class="nb">sudo </span>systemctl <span class="nb">enable </span>ssh</span></pre><div class="markdown-code-block-copy-btn"></div></div></div></div><p>配置文件其他相關配置項詳細説明，請查看配置文件中的註釋內容。</p><h4><a id="user-content-32-遠程多機器分佈式異步負載均衡執行" class="anchor" href="https://gitee.com/deepin-community/deepin-autotest-framework#32-%E8%BF%9C%E7%A8%8B%E5%A4%9A%E6%9C%BA%E5%99%A8%E5%88%86%E5%B8%83%E5%BC%8F%E5%BC%82%E6%AD%A5%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E6%89%A7%E8%A1%8C"></a>3.2. 遠程多機器分佈式異步負載均衡執行</h4><p>多機器分佈式異步負載均衡執行也是用本地作為服務端控制遠程機器執行，但遠程機器執行的用例不同，而是所有遠程機器執行的用例之和，為你想要執行的用例集；</p><p>似乎有點難以理解，我用大白話舉例描述下：</p><p>服務端想要執行 10 條用例，現在遠程機器有 5 台，然後服務端就先拿着第 1 條用例給遠程 1 號機執行，拿第 2 條用例給遠程 2 號機執行...，如此循環直到所有用例執行完，這就是負載均衡執行。</p><p><img src="https://pic.imgdb.cn/item/64f6d694661c6c8e54a1025b.png" alt="" referrerpolicy="no-referrer"></p><p>使用方法和前面一樣，只是需要增加一個參數 <code>--parallel</code>：</p><div><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="gp">$</span><span class="w"></span>youqu manage.py remote <span class="nt">-a</span> ... <span class="nt">--parallel</span> no</span></pre><div class="markdown-code-block-copy-btn"></div></div></div></div><h2><a id="user-content-貢獻者" class="anchor" href="https://gitee.com/deepin-community/deepin-autotest-framework#%E8%B4%A1%E7%8C%AE%E8%80%85"></a>貢獻者</h2><p><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Flinuxdeepin%2Fdeepin-autotest-framework%2Fblob%2Fmaster%2FCONTRIBUTING.md">貢獻文檔</a></p><p>--8&lt;-- "docs/contributors.html"</p><h2><a id="user-content-開源許可證" class="anchor" href="https://gitee.com/deepin-community/deepin-autotest-framework#%E5%BC%80%E6%BA%90%E8%AE%B8%E5%8F%AF%E8%AF%81"></a>開源許可證</h2><p>有趣，在 <a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Flinuxdeepin%2Fdeepin-autotest-framework%2Fblob%2Fmaster%2FLICENSE">GPL-2.0-only</a> 下發布。</p><hr><p><a href=""><strong>Star History</strong></a></p><p><a href="https://gitee.com/link?target=https%3A%2F%2Fstarchart.cc%2Flinuxdeepin%2Fdeepin-autotest-framework"><img src="https://starchart.cc/linuxdeepin/deepin-autotest-framework.svg" alt="Stargazers over time" referrerpolicy="no-referrer"></a></p>]]>
            </description>
            <pubDate>Wed, 13 Mar 2024 03:10:00 GMT</pubDate>
            <guid isPermaLink="false">https://gitee.com/deepin-community/deepin-autotest-framework</guid>
            <link>https://gitee.com/deepin-community/deepin-autotest-framework</link>
        </item>
        <item>
            <title>
                <![CDATA[開源日報 | AI 接連翻車的 Google 要變天了；中國互聯網大廠 50 款大模型及應用，能否全面超越 GPT-4？]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>歡迎閲讀 OSCHINA 編輯部出品的開源日報，每天更新一期。</p><h3><span style="color:#e67e22"><strong># 2024.3.12</strong></span></h3><h2><strong><span style="color:#16a085">今日要點</span></strong></h2><p><strong>OpenSource Daily</strong></p><h3><a href="https://www.oschina.net/news/282590/the-apple-curl-security-incident-12604" target="_blank">蘋果在 macOS 中 「魔改」 cURL，作者無端背鍋很生氣</a></h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">cURL&nbsp;<span>創始人兼首席開發者 Daniel Stenberg 又對蘋果 「開炮」 了，上週他發表文章</span><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdaniel.haxx.se%2Fblog%2F2024%2F03%2F08%2Fthe-apple-curl-security-incident-12604%2F" target="_blank">指責</a></u><span>蘋果修改了<span>&nbsp;</span></span>cURL&nbsp;<span>在 macOS 中使用某參數時的默認行為，此舉會有可能引發安全問題。</span></p><blockquote><p style="margin-left:0; margin-right:0"><img src="https://oscimg.oschina.net/oscnet/up-4f823e8378ab656ee3eb62a8499221fd1a1.png" referrerpolicy="no-referrer"></p></blockquote><h3><a href="https://www.oschina.net/news/282668/linux-6-9-dropping-old-ntfs" target="_blank">Linux 6.9 將移除舊版 NTFS 文件系統驅動程序，可減少近 3 萬行代碼</a></h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">兩年前，Linux 5.15 與 Paragon 軟件公司開發的 "NTFS3" 驅動程序合併，該驅動程序支持讀寫操作，並對微軟的 NTFS 文件系統驅動程序進行了其他改進。與主線內核中的原始 NTFS 只讀驅動程序相比，該驅動程序有了很大改進，而且比使用 NTFS-3G FUSE 文件系統驅動程序更快。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">現在，隨着時間的推移和 NTFS3 驅動程序的良好運行，舊版 NTFS 驅動程序將被移除。移除後，Linux 源代碼樹的行數將減少 29303 行。</p><hr><h2><strong><span style="color:#16a085">今日觀察</span></strong></h2><p><img src="https://oscimg.oschina.net/oscnet/up-2ec5959cc7e12be258b495b83e169db84a1.png" referrerpolicy="no-referrer"></p><p><span style="background-color:#ffffff; color:#333333">- 微博&nbsp;&nbsp;</span><u><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F5872251960%2FO4IP15kbB" target="_blank">老 talk</a></em></u></p><p><img src="https://oscimg.oschina.net/oscnet/up-e7e097a5bc9d0da217e6b474d77b6eb0a32.png" referrerpolicy="no-referrer"></p><p><span style="background-color:#ffffff; color:#333333">-&nbsp;&nbsp;</span><u><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1988800805%2FO4E27leQr" target="_blank">字母榜</a></em></u></p><p><img src="https://oscimg.oschina.net/oscnet/up-deab83bc7969ebe937685bca416cdd94028.png" referrerpolicy="no-referrer"></p><p><span style="background-color:#ffffff; color:#333333">-&nbsp;&nbsp;</span><u><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.tmtpost.com%2F6975495.html" target="_blank">鈦媒體</a></em></u></p><p><img src="https://oscimg.oschina.net/oscnet/up-735756a4f1cc258bf03fa620abaf90bc010.png" referrerpolicy="no-referrer"></p><p><span style="background-color:#ffffff; color:#333333">-&nbsp;&nbsp;</span><u><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2F36kr.com%2Fp%2F2685230938725762" target="_blank">愛範兒</a></em></u></p><hr><h2><span style="color:#16a085"><strong>今日推薦</strong></span></h2><p><img src="https://oscimg.oschina.net/oscnet/up-c1a21f80e8418ea5f32effa068149542d59.png" referrerpolicy="no-referrer"></p><p><em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fowncast%2Fowncast" target="_blank">https://github.com/owncast/owncast</a></u></em></p><hr><h2><span style="color:#16a085"><strong>事件點評</strong></span></h2><p><img src="https://oscimg.oschina.net/oscnet/up-98c444cd0aad24468cf26a026f899de5918.png" referrerpolicy="no-referrer"></p><hr><h2><span style="color:#16a085"><strong>每日項目榜</strong></span></h2><p><strong><span style="background-color:#e67e22">每日 GitHub 精選</span></strong></p><p><img src="https://oscimg.oschina.net/oscnet/up-2c23bbee2e8540138741c4373396a65427e.png" referrerpolicy="no-referrer"></p><blockquote><h4><strong><span style="background-color:#e67e22">在線閲讀完整日報內容，訪問：</span></strong><br><em><u><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/hh291xp9mxksc9i/27_ai_google_50_gpt_4_KfagjDXXfZ.pdf" target="_blank">開源日報第 027 期：AI 接連翻車的 Google 要變天了；互聯網大廠 50 款大模型及應用，能否全面超越 GPT-4？</a></u></em></h4></blockquote><hr><p><strong>往期回顧</strong></p><ul><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/uwsizmmsnhq8zdk/26_git_hub_22_web_os_22_vue_rolldown_FpVykoR7rJ.pdf" target="_blank">開源日報第 026 期：大模型替代程序員根本就是一個偽命題；GitHub 頂流"Web OS"</a></li><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/6ho57sxydzsh9jh/25_ai_5_ax1LWz5GP5.pdf" target="_blank">開源日報第 025 期：買手機送大模型；「釣魚式維權」須遏制；「AI 原生」騙局江湖</a></li><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/7xd6teyhekcvamw/24_risc_v_x86_arm_5LsjoStPUn.pdf" target="_blank">開源日報第 024 期：RISC-V 能否和 x86、Arm 一起成為三大主流架構；給閻王開發地府管理系統</a></li><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/svxac61bjmbmmw5/23_google_microsoft_cM5zZacKru.pdf" target="_blank">開源日報第 023 期：Google=開源，好評；Microsoft=閉源收入還低，差評</a></li><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/3vmzfjvp7mpvv26/22_sora_cuda_Syy7OJyUvc.pdf" target="_blank">開源日報第 022 期：輕鬆復現 Sora 模型；事關 CUDA 兼容，英偉達禁止了；百度還差一個「遙遙領先」</a></li><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/z3rhs3qkyeqwoax/21_open_ai_JROaEZat3b.pdf" target="_blank">開源日報第 021 期：閉源模型就是比開源安全；起訴 OpenAI 不能更贊同</a></li><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/lv84pwvd03it00i/20_open_ai_pingora_yaml_mE5RuB20Vl.pdf" target="_blank">開源日報第 020 期：為什麼王炸都來自 OpenAI；Pingora 最好不要用 YAML 當配置文件</a></li><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/mx86z1dhywrw71p/19_ai_c_llm_IgpNOVZtCz.pdf" target="_blank">開源日報第 019 期：我讓 AI 用 C 語言寫一個算法；微軟三進制 LLM</a></li><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/qdljicvqiqsshd6/187ZiLwG48lc_CngfQJ1Qxs.pdf" target="_blank">開源日報第 018 期：蘋果十年造車夢碎；這個開源項目有點...「大膽」</a></li><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/7r8dkz3232v4e7a/17_maria_db_v_linux_GoyNoM85IZ.pdf">開源日報第 017 期：MariaDB 消亡史；寫代碼我有三不沾；V 神建議馬斯克用 Linux</a></li><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/6typ9w3u98f5mxn/16_1_8_2efTeNfFjN.pdf">開源日報第 016 期：鴻蒙程序員平均月薪超 1 萬 8；中美 AI 差距有多大？</a></li><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/92n4c9ryegpcq1z/015_sora_KcAkRNX93Y.pdf">開源日報第 015 期：為什麼擋不住英偉達；Sora 不靠蠻力</a></li><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/s7n800w84o6guyv/014_kyezhNxOGD.pdf">開源日報第 014 期：目前的人工智能技術連貓的智能水平都沒達到</a></li><li><a href="https://oscimg.oschina.net/public_shard/%E5%BC%80%E6%BA%90%E6%97%A5%E6%8A%A5%E7%AC%AC013%E6%9C%9F%EF%BC%9A%E7%AD%89%E5%88%B0%20Sora%20%E5%BC%80%E6%BA%90%E4%BA%86%E7%AB%8B%E5%88%BB%E6%8E%A8%E5%87%BA%E5%B1%9E%E4%BA%8E%E6%88%91%E4%BB%AC%E8%87%AA%E5%B7%B1%E7%9A%84%E5%A4%A7%E6%A8%A1%E5%9E%8B.pdf">開源日報第 013 期：等到 Sora 開源了立刻推出屬於我們自己的大模型</a></li><li><a href="https://oscimg.oschina.net/public_shard/%E5%BC%80%E6%BA%90%E6%97%A5%E6%8A%A5%E7%AC%AC012%E6%9C%9F%EF%BC%9ASora%20%E7%BB%99%E4%B8%AD%E5%9B%BD%20AI%20%E5%B8%A6%E6%9D%A5%E7%9A%84%E7%9C%9F%E5%AE%9E%E5%8F%98%E5%8C%96%EF%BC%9BDart%203.3%20%E5%8F%91%E5%B8%83.pdf">開源日報第 012 期：Sora 給中國 AI 帶來的真實變化；Dart 3.3 發佈</a></li><li><a href="https://oscimg.oschina.net/public_shard/%E5%BC%80%E6%BA%90%E6%97%A5%E6%8A%A5%E7%AC%AC11%E6%9C%9F%EF%BC%9A%E7%9B%AE%E5%89%8D%E8%BF%98%E6%B2%A1%E6%9C%89%E2%80%9C%E5%A4%A7%E6%A8%A1%E5%9E%8B%E7%89%88Linux%E2%80%9D.pdf">開源日報第 011 期：目前還沒有「大模型版 Linux」</a></li><li><a href="https://oscimg.oschina.net/public_shard/%E5%BC%80%E6%BA%90%E6%97%A5%E6%8A%A5%E7%AC%AC010%E6%9C%9F%EF%BC%9ATauri%20v2%20%E6%94%AF%E6%8C%81%20Android%20%E5%92%8C%20iOS%EF%BC%8C%E8%B7%A8%E5%B9%B3%E5%8F%B0%E5%BC%80%E5%8F%91%E6%96%B0%E9%80%89%E6%8B%A9.pdf">開源日報第 010 期：Tauri v2 支持 Android 和 iOS，跨平台開發新選擇</a></li><li><a href="https://oscimg.oschina.net/public_shard/%E5%BC%80%E6%BA%90%E6%97%A5%E6%8A%A5009%E6%9C%9F%EF%BC%9AVue.js%E8%AF%9E%E7%94%9F10%E5%91%A8%E5%B9%B4%EF%BC%9B%E6%89%8E%E5%85%8B%E4%BC%AF%E6%A0%BC%E8%A7%A3%E9%87%8AMeta%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E5%BC%80%E6%BA%90%E5%85%B6AI%E6%8A%80%E6%9C%AF.pdf">開源日報第 009 期：Vue.js 誕生 10 週年；扎克伯格解釋 Meta 為什麼要開源其 AI 技術</a></li><li><a href="https://www.oschina.net/news/277585">開源日報第 008 期：推動中國開源軟硬件發展的經驗與建議</a></li><li><a href="https://www.oschina.net/news/277415">開源日報第 007 期：「Linux 中國」 開源社區宣佈停止運營</a></li><li><a href="https://www.oschina.net/news/277214">開源日報第 006 期：選擇技術棧一定要選擇開源的</a></li><li><a href="http://www.oschina.net/news/277040">開源日報第 005 期：RISC-V 萬兆開源交換機發售；npm 存在大量武林外傳視頻</a></li><li><a href="https://www.oschina.net/news/276864">開源日報第 004 期：百度輸入法在候選詞區域植入廣告；大神用 Excel 構建 CPU</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Wed, 13 Mar 2024 03:09:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/282857</guid>
            <link>https://www.oschina.net/news/282857</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[每日一博 | vivo 在離線混部探索與實踐]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="rich_media_content js_underline_content
                       autoTypeSetting24psection
            " id="js_content"><section style="font-size: 15px;line-height: 1.6;"><section style="margin: 10px 0% 8px;text-align: left;justify-content: flex-start;display: flex;flex-flow: row;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;vertical-align: top;border-left: 3px solid rgb(219, 219, 219);border-bottom-left-radius: 0px;padding-left: 8px;align-self: flex-start;flex: 0 0 auto;"><section style="color: rgba(0, 0, 0, 0.5);font-size: 14px;text-align: justify;" powered-by="xiumi.us"><p style="text-wrap: wrap;">作者：來自 vivo 互聯網服務器團隊</p></section></section></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section style="text-align: left;justify-content: flex-start;display: flex;flex-flow: row;margin-bottom: 10px;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;vertical-align: top;align-self: flex-start;flex: 0 0 auto;background-color: rgb(234, 241, 255);border-style: solid;border-width: 0px 0px 0px 4px;border-color: rgb(48, 97, 207) rgb(48, 97, 207) rgb(48, 97, 207) rgb(21, 151, 239);padding: 10px;"><section style="text-align: justify;" powered-by="xiumi.us"><p style="text-wrap: wrap;">本文根據甘青、黃榮傑老師在「2023 vivo 開發者大會"現場演講內容整理而成。公眾號回覆【2023 VDC】獲取互聯網技術分會場議題相關資料。</p></section></section></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section style="margin-top: 10px;margin-bottom: 10px;text-align: center;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;border-width: 1px;border-style: solid;border-color: rgb(160, 160, 160);padding: 10px;"><section style="text-align: left;" powered-by="xiumi.us"><section style="text-align: justify;line-height: 1.8;padding-right: 5px;padding-left: 5px;color: rgb(160, 160, 160);"><p style="text-wrap: wrap;">伴隨 vivo 互聯網業務的高速發展，數據中心的規模不斷擴大，成本問題日益突出。在離線混部技術可以在保證服務質量的同時，極大的提升數據中心資源利用率，降低成本。混部技術涉及任務調度、資源隔離、運維觀測等一系列技術難題，本文將介紹 vivo 在混部技術方面的實踐和探索，為讀者提供借鑑和參考。</p></section></section><section style="margin-right: 0%;margin-bottom: -5px;margin-left: 0%;text-align: right;line-height: 1;font-size: 5px;transform: translate3d(5px, 0px, 0px);" powered-by="xiumi.us"><section style="width: 0px;display: inline-block;vertical-align: top;border-bottom: 0.6em solid rgb(160, 160, 160);border-right: 0.6em solid rgb(160, 160, 160);border-top: 0.6em solid transparent !important;border-left: 0.6em solid transparent !important;"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section></section></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section style="margin-top: 10px;margin-bottom: 10px;text-align: center;" powered-by="xiumi.us"><section style="padding: 3px;display: inline-block;border-bottom: 1px solid rgb(65, 94, 255);font-size: 17px;color: rgb(65, 94, 255);"><p>一、在離線混部技術背景</p></section></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><span style="font-size: 16px;color: rgb(65, 95, 255);">1.1 為什麼混部</span></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section powered-by="xiumi.us"><p style="text-align: center;"><img class="rich_pages wxw-img" data-galleryid="" data-imgfileid="100014216" data-ratio="0.562962962962963" data-s="300,640" src="https://oscimg.oschina.net/oscnet/90584c50-ab1b-4c96-a93d-1a51552af9c2.png" data-type="png" data-w="1080" style="" referrerpolicy="no-referrer"></p><p style="text-wrap: wrap;"><br></p><p style="text-wrap: wrap;">數據中心運行的服務可以分為在線服務和離線任務兩大類，它們具有不同的資源使用特徵。</p><p style="text-wrap: wrap;"><br></p><p style="text-wrap: wrap;">在線服務是指那些長時間運行、對時延非常敏感的服務，如電商、遊戲等，在線服務的資源利用率存在明顯的波峯波谷現象，平均利用率較低。離線任務是指那些運行週期短，有容錯性，對實時性要求低的服務，如數據轉換、模型訓練等，離線任務在執行過程中資源利用率很高。</p><p style="text-wrap: wrap;"><br></p><p style="text-wrap: wrap;">在混部之前，在線和離線都是分開獨立部署，機器不共享，無法形成有效的資源互補，這導致數據中心整體資源利用率不高，卻要不斷購買新機器，造成了資源浪費。</p></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><span style="font-size: 16px;color: rgb(65, 95, 255);">1.2 混部技術定義</span></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section powered-by="xiumi.us"><p style="text-align: center;"><img class="rich_pages wxw-img" data-galleryid="" data-imgfileid="100014217" data-ratio="0.562962962962963" data-s="300,640" src="https://oscimg.oschina.net/oscnet/d95f327e-4b95-4e53-873a-cec47b2b9123.png" data-type="png" data-w="1080" style="" referrerpolicy="no-referrer"></p><p style="text-wrap: wrap;"><br></p><p style="text-wrap: wrap;">通過混部技術，我們可以將在線和離線部署到同一台物理機上，形成資源互補，提升物理機的資源利用率，降低成本。混部技術最早由谷歌在 2015 年提出，經過多年的發展，混部技術已經趨於成熟，目前業內利用混部技術可以將數據中心的 CPU 利用率提升至 40% 左右 。</p><p style="text-wrap: wrap;"><br>vivo 在 2020 年開始調研混部技術，2023 年混部平台投入生產，目前我們已經將部分混部集羣的 CPU 利用率提升至 25%（最新已達 30%）左右。相較業界標杆這還有一定的差距，但隨着混部規模的擴大，我們將挑戰更高的目標。</p></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section style="margin-top: 10px;margin-bottom: 10px;text-align: center;" powered-by="xiumi.us"><section style="padding: 3px;display: inline-block;border-bottom: 1px solid rgb(65, 94, 255);font-size: 17px;color: rgb(65, 94, 255);"><p>二、在離線混部平台實踐</p></section></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><span style="font-size: 16px;color: rgb(65, 95, 255);">2.1 混部平台產品能力</span></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-align: center;"><img class="rich_pages wxw-img" data-galleryid="" data-imgfileid="100014218" data-ratio="0.562962962962963" data-s="300,640" src="https://oscimg.oschina.net/oscnet/68d72481-c187-452c-82a9-2dffd5f14199.png" data-type="png" data-w="1080" style="" referrerpolicy="no-referrer"></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us">混部平台必須具備兩個產品能力：</p><section style="margin-top: 10px;margin-bottom: 10px;" powered-by="xiumi.us"><section style="margin-bottom: -2.25em;margin-right: 5px;background-color: rgb(247, 247, 247);"><section style="padding: 10px;margin-bottom: 5px;" powered-by="xiumi.us"><section style="text-align: left;"><ul class="list-paddingleft-1" style="list-style-type: disc;"><li><p style="margin-bottom: 10px;"><span style="font-size: 15px;letter-spacing: 0.578px;text-align: left;text-wrap: wrap;background-color: rgb(247, 247, 247);">第一、強大的調度、隔離能力</span></p></li><li><p style="margin-bottom: 10px;"><span style="letter-spacing: 0.034em;">第二、完善的監控、運維能力</span></p></li></ul></section></section></section><section style="margin-left: auto;width: 2.25em;height: 2.25em;border-right: 5px solid transparent;border-bottom: 5px solid transparent;"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us">強大的調度能力解決了，我們如何將離線任務高效、合理的調度到在線服務所在的物理機上。而強大的隔離能力保障了在線服務的質量不受離線任務幹擾。完善的監控和運維能力則可以讓我們洞悉整個混部平台的運行情況，及時發現潛在風險，幫助運維人員更高效的完成系統和業務的運維工作，保障集羣的高穩定性。</p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section style="font-size: 16px;color: rgb(65, 95, 255);" powered-by="xiumi.us"><p style="text-wrap: wrap;">2.2 混部差異化資源視圖</p></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-align: center;"><img class="rich_pages wxw-img" data-galleryid="" data-imgfileid="100014219" data-ratio="0.562962962962963" data-s="300,640" src="https://oscimg.oschina.net/oscnet/57e41ac2-cf24-44d9-938a-fa7e2ba4fd5a.png" data-type="png" data-w="1080" style="" referrerpolicy="no-referrer"></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us">混部首先要解決的一個問題是離線使用哪一部分資源。</p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us">在 vivo 混部系統中在線和離線看到的資源視圖是不同的：</p><section style="margin-top: 10px;margin-bottom: 10px;" powered-by="xiumi.us"><section style="margin-bottom: -2.25em;margin-right: 5px;background-color: rgb(247, 247, 247);"><section style="padding: 10px;margin-bottom: 5px;" powered-by="xiumi.us"><section style="text-align: left;"><ul class="list-paddingleft-1" style="list-style-type: disc;"><li><p style="margin-bottom: 10px;"><span style="font-size: 15px;letter-spacing: 0.578px;text-align: left;text-wrap: wrap;background-color: rgb(247, 247, 247);">在線可用資源為，整機資源</span></p></li><li><p style="margin-bottom: 10px;"><span style="letter-spacing: 0.034em;">離線可用資源為，整機資源減去，在線實際使用的資源</span></p></li></ul></section></section></section><section style="margin-left: auto;width: 2.25em;height: 2.25em;border-right: 5px solid transparent;border-bottom: 5px solid transparent;"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us">同時為了避免整機負載太高影響系統的穩定性，我們設置一個安全水位線，用於調節離線可用資源大小。</p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><span style="font-size: 16px;color: rgb(65, 95, 255);">2.3 混部 QoS 等級</span></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-align: center;"><img class="rich_pages wxw-img" data-galleryid="" data-imgfileid="100014220" data-ratio="0.562962962962963" data-s="300,640" src="https://oscimg.oschina.net/oscnet/19c209cc-56e1-496e-99b3-5f97f6afcb35.png" data-type="png" data-w="1080" style="" referrerpolicy="no-referrer"></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section powered-by="xiumi.us"><p style="text-wrap: wrap;">為了保障混部系統的 slo，我們將服務分為三個等級：<strong>高、中，低</strong>。</p><p style="text-wrap: wrap;"><br></p><p style="text-wrap: wrap;">不同等級的服務對物理資源如：CPU、內存，使用時有不同的優先級。高優先級服務支持綁定 CPU 模式，適用對延時非常敏感的在線服務。一般的在線服務可設置為中優先級。離線任務設置為低優先級，通過這樣的等級劃分，我們很好的實現在線對離線的資源壓制和隔離，保障了在線服務質量。<span style="letter-spacing: 0.034em;"></span><span style="color: rgba(0, 0, 0, 0.5);letter-spacing: 0.034em;"></span></p></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><span style="font-size: 16px;color: rgb(65, 95, 255);">2.4 混部核心組件架構</span></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-align: center;"><img class="rich_pages wxw-img" data-galleryid="" data-imgfileid="100014221" data-ratio="0.562962962962963" data-s="300,640" src="https://oscimg.oschina.net/oscnet/b1afd7a5-c2cd-4147-bf9c-1608efeab996.png" data-type="png" data-w="1080" style="" referrerpolicy="no-referrer"></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section powered-by="xiumi.us"><p style="text-wrap: wrap;">我們所有的混部組件都是以插件方式獨立運行，對原生 K8s 無侵入。我們實現了一個混部調度器，在線和離線統一使用這個調度器，避免了多調度器資源賬本衝突的問題。</p><p style="text-wrap: wrap;"><br></p><p style="text-wrap: wrap;">每台物理機上都會部署一個混部 agent，它可以實時採集容器資源使用數據，並根據安全水位線對離線任務進行壓制、驅逐等操作。</p><p style="text-wrap: wrap;"><br></p><p style="text-wrap: wrap;">內核層面我們使用了龍蜥 OS，它具備強大的資源隔離能力，可以幫助我們更好的隔離在線、離線資源使用，保障在線服務質量。</p></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><span style="font-size: 16px;color: rgb(65, 95, 255);">2.5 混部組件功能</span></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section powered-by="xiumi.us"><p style="text-align: center;"><img class="rich_pages wxw-img" data-galleryid="" data-imgfileid="100014222" data-ratio="0.562962962962963" data-s="300,640" src="https://oscimg.oschina.net/oscnet/713e94c0-293b-4843-8d8c-55417c3e25fa.png" data-type="png" data-w="1080" style="" referrerpolicy="no-referrer"></p><p style="text-wrap: wrap;"><br></p><p style="text-wrap: wrap;">我們把混部組件分為管控組件和單機組件兩大類。</p><p style="text-wrap: wrap;"><br></p></section><section powered-by="xiumi.us"><p style="text-wrap: wrap;"><strong>管控組件</strong>主要負責調度和控制，根據 vivo 業務使用場景，我們對調度器做了一些增強，提供了 numa 感知、負載感知，熱點打散，批量調度等能力。</p><p style="text-wrap: wrap;"><br></p><p style="text-wrap: wrap;">混部控制器主要提供了一些配置管理能力：如資源畫像統計、node slo 配置、node 擴展資源變更等。</p></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><span style="font-size: 16px;color: rgb(65, 95, 255);">2.6 混部可視化監控</span></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-align: center;"><img class="rich_pages wxw-img" data-galleryid="" data-imgfileid="100014223" data-ratio="0.562962962962963" data-s="300,640" src="https://oscimg.oschina.net/oscnet/bc9d9741-bd4c-4fd6-b91f-621a91d97fdb.png" data-type="png" data-w="1080" style="" referrerpolicy="no-referrer"></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section powered-by="xiumi.us"><p style="text-wrap: wrap;">我們為混部建立一套完整的可視化監控體系。</p><p style="text-wrap: wrap;"><br></p><p style="text-wrap: wrap;">針對在線服務我們提供了：容器資源使用指標，受離線幹擾指標、業務混部收益指標等監控能力。</p><p style="text-wrap: wrap;"><br></p><p style="text-wrap: wrap;">針對離線任務，我們提供了離線可用資源、任務異常狀態等監控能力。</p><p style="text-wrap: wrap;"><br></p><p style="text-wrap: wrap;">在平台層面上我們提供了節點、內核，核心組件的監控，通過這些監控可及時發現平台潛在的風險。</p></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><span style="font-size: 16px;color: rgb(65, 95, 255);">2.7 混部平台運維</span></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section powered-by="xiumi.us"><p style="text-align: center;"><img class="rich_pages wxw-img" data-galleryid="" data-imgfileid="100014224" data-ratio="0.562962962962963" data-s="300,640" src="https://oscimg.oschina.net/oscnet/caade6d0-4d75-473e-9927-322fa0fb4c1b.png" data-type="png" data-w="1080" style="" referrerpolicy="no-referrer"></p><p style="text-wrap: wrap;"><br></p><p style="text-wrap: wrap;">為了簡化運維操作，提升運維效率，我們對混部集羣搭建和節點擴縮容操作進行了白屏化改造，開發了資源池管理功能，簡化了物理機接入流程，運維效率大幅提升。</p><p style="text-wrap: wrap;"><br></p><p style="text-wrap: wrap;">在運維平台上運維人員可以快速調整混部隔離、水位線等參數，如果發現在線服務受到幹擾，運維人員可以一鍵關閉混部，驅逐離線任務，保障在線服務質量。</p></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><span style="font-size: 16px;color: rgb(65, 95, 255);">2.8 問題與挑戰</span></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><strong>2.8.1 apiServer 拆分</strong></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-align: center;"><img class="rich_pages wxw-img" data-galleryid="" data-imgfileid="100014225" data-ratio="0.562962962962963" data-s="300,640" src="https://oscimg.oschina.net/oscnet/62a20de0-2b72-4f82-8240-53b688884216.png" data-type="png" data-w="1080" style="" referrerpolicy="no-referrer"></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section powered-by="xiumi.us"><p style="text-wrap: wrap;">通過混部產品能力的建設，我們很好的實現了容器混部能力，但是在實踐中我們還是遇到一些新的挑戰：相對於普通 K8s 集羣，混部集羣中運行着更多的容器，而且離線任務由於生命週期短，容器創建銷燬更為頻繁，這對 K8s apiServer 產生了很大的壓力。</p><p style="text-wrap: wrap;"><br></p><p style="text-wrap: wrap;">所以我們拆分了 apiServer ，離線任務使用獨立的 apiServer ，保障了集羣 apiServer 負載一直處於一個安全水平。</p></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><strong>2.8.2 監控架構優化</strong></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-align: center;"><img class="rich_pages wxw-img" data-galleryid="" data-imgfileid="100014226" data-ratio="0.562962962962963" data-s="300,640" src="https://oscimg.oschina.net/oscnet/a141c014-152a-4858-887b-9992c38212c3.png" data-type="png" data-w="1080" style="" referrerpolicy="no-referrer"></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us">同樣混部之後由於採集了更多的監控指標，導致 Prometheus 內存消耗過多，無法滿足平台指標，採集需求。針對這個問題，我們優化了監控架構，將在線和離線監控組件分開部署，離線改用性能更好的 vmagent，通過這個優化，監控組件內存消耗減少到原來的十分之一。</p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><span style="font-size: 16px;color: rgb(65, 95, 255);">2.9 利用率提升</span></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-align: center;"><img class="rich_pages wxw-img" data-galleryid="" data-imgfileid="100014227" data-ratio="0.562962962962963" data-s="300,640" src="https://oscimg.oschina.net/oscnet/a78f6e6d-75d8-4552-838d-29ab9517de07.png" data-type="png" data-w="1080" style="" referrerpolicy="no-referrer"></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us">混部初期雖然集羣 CPU 利用率有所提升，但是還是沒有達到我們的預期，主要<strong>原因</strong>有：</p><section powered-by="xiumi.us" style="margin-top: 10px;margin-bottom: 10px;font-size: 15px;letter-spacing: 0.578px;text-wrap: wrap;"><section style="margin-right: 5px;margin-bottom: -2.25em;background-color: rgb(247, 247, 247);"><section powered-by="xiumi.us" style="margin-bottom: 5px;padding: 10px;"><section style="text-align: left;"><ul class="list-paddingleft-1" style="width: 552.438px;"><li><p style="margin-bottom: 10px;"><span style="letter-spacing: 0.578px;"><span style="font-size: 15px;letter-spacing: 0.578px;text-wrap: wrap;">一、部分低配置機器資源本身較少。</span></span></p></li><li><p style="margin-bottom: 10px;"><span style="letter-spacing: 0.034em;"><span style="font-size: 15px;letter-spacing: 0.578px;text-wrap: wrap;">二、J</span><span style="font-size: 15px;letter-spacing: 0.578px;text-wrap: wrap;">ava 類應用堆會固定佔用大量內存，導致可提供給離線使用內存資源不足。</span></span></p></li></ul></section></section></section><section style="margin-left: auto;width: 2.25em;height: 2.25em;border-right: 5px solid transparent;border-bottom: 5px solid transparent;"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section><p powered-by="xiumi.us" style="margin-bottom: 0px;font-size: 15px;letter-spacing: 0.578px;text-wrap: wrap;"><span style="letter-spacing: 0.034em;"></span><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us">針對這些問題，我們開發了定時調整安全水位線功能，在業務低峯期上調安全水位線，釋放更多的資源給離線使用。通過一系列的優化手段，我們將其中一個混部集羣的 CPU 利用率由 13% 提升到了 25% 左右，幾乎翻倍，混部效果得到了有效的驗證。</p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section style="margin-top: 10px;margin-bottom: 10px;text-align: center;" powered-by="xiumi.us"><section style="padding: 3px;display: inline-block;border-bottom: 1px solid rgb(65, 94, 255);font-size: 17px;color: rgb(65, 94, 255);"><p>三、Spark on K8s 彈性調度實踐</p></section></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><span style="font-size: 16px;color: rgb(65, 95, 255);">3.1 方案選型</span></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section powered-by="xiumi.us"><p style="text-align: center;"><img class="rich_pages wxw-img" data-galleryid="" data-imgfileid="100014228" data-ratio="0.562962962962963" data-s="300,640" src="https://oscimg.oschina.net/oscnet/d3e8ac4a-32d1-4b0f-8abf-fab2aa42f043.png" data-type="png" data-w="1080" style="" referrerpolicy="no-referrer"></p><p style="text-wrap: wrap;"><br></p><p style="text-wrap: wrap;">在大方向的技術選型上，我們選擇了 Spark on K<span style="letter-spacing: 0.034em;">8s，在業內，也有一些公司採用了 YARN on K8s 的方案。</span><span style="letter-spacing: 0.034em;">我們也對這兩種方案進行過對比。</span></p><p style="text-wrap: wrap;"><br></p><p style="text-wrap: wrap;">從業務適用性來説，YARN on K8s 是通用的，可以兼容 Hive、Spark、Flink 這些引擎，它不需要頻繁創建 Nodemanager pod，對 K8s 的壓力比較小。這些都是它的優點，但另一方面，Nodemanager ESS 服務是對磁盤有容量和讀寫性能要求的，混部機器磁盤一般難以滿足。所以我們要支持不同引擎的 remote shuffle service。</p><p style="text-wrap: wrap;"><br></p><p style="text-wrap: wrap;">如果計算引擎有不同的版本，那麼 RSS 也要支持不同版本，比如 Spark2，Spark3。如果你有不同的引擎，不同的版本，很可能一種 RSS 還滿足不了需求。另外 Nodemanager 需要根據 K8s 混部節點的剩餘資源，動態調整可用的 vcore 和內存，所以還需要一個額外的組件來做這個事情，這需要較高的改造成本。在資源利用上，NM 的資源粒度相對大，自身也會佔用一些資源，存在一定的浪費。在資源緊張的情況下，Nodemanager 作為整體被驅逐，會影響多個任務。<span style="letter-spacing: 0.034em;">這些是 YARN on K8s 的劣勢。</span></p><p style="text-wrap: wrap;"><br></p><p style="text-wrap: wrap;"><strong>作為對比，Spark on K8s 劣勢有哪些？</strong></p><p style="text-wrap: wrap;"><br></p><p style="text-wrap: wrap;">首先這個特性在 Spark 3.1 以上版本才正式可用。Spark on K8s 由於會頻繁的創建、查詢、銷燬大量的 executor pod，對 K8s 的調度能力以及 master 節點會造成比較大的壓力。另一方面，它的優勢在於只需要能支持 spark3.X 的 RSS，這有較多的開源產品可選擇。而且改造成本比較低，不需要額外的組件。資源粒度小，更有利於充分利用集羣資源。在資源緊張時，會逐個 pod 進行驅逐，任務的穩定性會更高。</p><p style="text-wrap: wrap;"><br></p><p style="text-wrap: wrap;">兩方案各有優劣勢，為什麼我們選擇了 Spark on K8s？一方面因為 Spark3.X 是 vivo 當前及未來 2~3 年的主流離線引擎，另一方面 vivo 內部對 K8s 研發比較深入，能有力支持我們。基於以上原因，我們最終決定使用 spark on K8s</p></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><span style="font-size: 16px;color: rgb(65, 95, 255);">3.2 三步走戰略</span></p><p style="text-align: center;"><br></p><p style="text-align: center;"><img class="rich_pages wxw-img" data-galleryid="" data-imgfileid="100014229" data-ratio="0.562962962962963" data-s="300,640" src="https://oscimg.oschina.net/oscnet/eb89e8e2-ea5e-4740-9a12-fb80622fbf88.png" data-type="png" data-w="1080" style="" referrerpolicy="no-referrer"></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us">確定了方案選型，那在 vivo 我們是如何推進 spark on K8s 大規模的應用落地呢？回顧總結我們走過的路，可以大致歸納為三步走的戰略。<span style="text-align: left;background-color: rgb(247, 247, 247);letter-spacing: 0.034em;"></span></p><section style="margin-top: 10px;margin-bottom: 10px;" powered-by="xiumi.us"><section style="margin-bottom: -2.25em;margin-right: 5px;background-color: rgb(247, 247, 247);"><section style="padding: 10px;margin-bottom: 5px;" powered-by="xiumi.us"><section style="text-align: left;"><ul class="list-paddingleft-1" style="list-style-type: disc;"><li><p style="margin-bottom: 10px;"><span style="font-size: 15px;letter-spacing: 0.578px;text-align: left;text-wrap: wrap;background-color: rgb(247, 247, 247);">第一，是任務跑通跑順的初期階段</span></p></li><li><p style="margin-bottom: 10px;"><span style="letter-spacing: 0.034em;">第二，是任務跑穩、跑穩的中期階段</span></p></li><li><p style="margin-bottom: 10px;"><span style="letter-spacing: 0.034em;">最後，是任務跑得智能的成熟階段</span></p></li></ul></section></section></section><section style="margin-left: auto;width: 2.25em;height: 2.25em;border-right: 5px solid transparent;border-bottom: 5px solid transparent;"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us">接下來的內容，我們將對每個階段展開細説。</p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><strong>3.2.1 任務跑通跑順</strong></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section powered-by="xiumi.us"><p style="text-align: center;"><img class="rich_pages wxw-img" data-galleryid="" data-imgfileid="100014230" data-ratio="0.562962962962963" data-s="300,640" src="https://oscimg.oschina.net/oscnet/60083a6d-7464-47e5-acfe-80be28bd38b1.png" data-type="png" data-w="1080" style="" referrerpolicy="no-referrer"></p><p style="text-wrap: wrap;"><br></p><p style="text-wrap: wrap;">在任務跑通、跑順的第一階段，我們要解決的是怎麼將任務提交 K8s 集羣，同時要求易用性、便利性方面能夠達到與 on YARN 一致的用戶體驗。將我們最後採用的方案架構簡化一下，就如同這張圖所示。</p><p style="text-wrap: wrap;"><br></p><p style="text-wrap: wrap;">首先，為了降低任務提交的複雜性、避免用戶改造任務的成本。我們在任務調度管理平台做到了對原有 Spark 任務的兼容，通過 vivo 內部的容器開放 API-這個代理層，我們不需要維護額外的 K8s client 環境，就可以輕鬆實現任務提交，提交後也能近實時獲取任務的狀態和日誌信息。</p><p style="text-wrap: wrap;"><br></p><p style="text-wrap: wrap;">另外一個關鍵點是，我們選用了 Spark Operator 作為 Spark 任務容器化的方案。Spark Operator 是谷歌基於 K8s Operator 模式開發的一款的工具，用於通過聲明式的方式向 K8s 集羣提交 Spark 作業。</p><p style="text-wrap: wrap;"><br></p><p style="text-wrap: wrap;">Spark Operator 的方式還有其他優點：</p></section><section style="margin-top: 10px;margin-bottom: 10px;" powered-by="xiumi.us"><section style="margin-bottom: -2.25em;margin-right: 5px;background-color: rgb(247, 247, 247);"><section style="padding: 10px;margin-bottom: 5px;" powered-by="xiumi.us"><section style="text-align: left;"><ul class="list-paddingleft-1" style="list-style-type: disc;"><li><p style="margin-bottom: 10px;"><span style="font-size: 15px;letter-spacing: 0.578px;text-align: left;text-wrap: wrap;background-color: rgb(247, 247, 247);">Operator 方式對 K8s 更友好，支持更靈活、更全面的配置項</span></p></li><li><p style="margin-bottom: 10px;"><span style="font-size: 15px;letter-spacing: 0.578px;text-align: left;text-wrap: wrap;background-color: rgb(247, 247, 247);">使用上更簡單易用</span><br></p></li><li><p style="margin-bottom: 10px;"><span style="letter-spacing: 0.034em;">內置 Metrics,有利於我們做集中管理</span></p></li></ul></section></section></section><section style="margin-left: auto;width: 2.25em;height: 2.25em;border-right: 5px solid transparent;border-bottom: 5px solid transparent;"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us">要達到階段一的目標，讓任務跑通、跑順。我們主要克服了哪些<strong>關鍵問題和挑戰</strong>？</p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-align: center;"><img class="rich_pages wxw-img" data-galleryid="" data-imgfileid="100014231" data-ratio="0.562962962962963" data-s="300,640" src="https://oscimg.oschina.net/oscnet/870b19d4-186a-4594-904f-b362f3544128.png" data-type="png" data-w="1080" style="" referrerpolicy="no-referrer"></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section powered-by="xiumi.us"><p style="text-wrap: wrap;">第一個是日誌查看，因為 Spark Operator 方式並沒有提供已結束作業的日誌查看方式，包括 driver 和 executor 日誌。在 Driver 側，我們通過定期請求容器開放 API，能準實時地獲取 Driver Pod 狀態與日誌。在 Executor 側，我們參考了 on yarn 的方式，Executor Pod 結束後，日誌上傳 HDFS，與 YARN 日誌聚合類似。</p><p style="text-wrap: wrap;"><br></p><p style="text-wrap: wrap;">另一方面，我們也在 Spark HistoryServer 做了二次開發工作，增加了 on K8s 方式的日誌查看接口。用戶查看已完成的 Executor 日誌時，不再請求 JobHistory Server，而是請求 Spark HistoryServer 接口。在體驗上做到了基本與 yarn 一致。</p><p style="text-wrap: wrap;"><br></p><p style="text-wrap: wrap;">在混部 K8s 集羣，我們也做了三方面能力的<strong>加強</strong>。</p><section powered-by="xiumi.us" style="margin-top: 10px;margin-bottom: 10px;font-size: 15px;letter-spacing: 0.578px;text-wrap: wrap;"><section style="margin-right: 5px;margin-bottom: -2.25em;background-color: rgb(247, 247, 247);"><section powered-by="xiumi.us" style="margin-bottom: 5px;padding: 10px;"><section style="text-align: left;"><ul class="list-paddingleft-1" style="width: 552.438px;"><li><p style="margin-bottom: 10px;"><span style="letter-spacing: 0.578px;"><span style="font-size: 15px;letter-spacing: 0.578px;text-wrap: wrap;">一是，確保分配能力能支持離線任務頻繁建刪 pod 的需求，在優化後我們離線 Pod 分配能力達到數百 pod/秒。</span></span></p></li><li><p style="margin-bottom: 10px;"><span style="letter-spacing: 0.578px;"><span style="font-size: 15px;letter-spacing: 0.578px;text-wrap: wrap;">二是，在 K8s 側提升了 spark 內部的 Driver 優先級，確保了在驅逐時 Driver 穩定性高於 Executor。</span></span><br></p></li><li><p style="margin-bottom: 10px;"><span style="letter-spacing: 0.034em;"><span style="font-size: 15px;letter-spacing: 0.578px;text-wrap: wrap;">最後一個是，發現並修復了 spark-operator 的一個 bug，這個 bu 是 Operator 在多副本部署時，slave 副本 webhook 處理有一點概率出現 pod 找不到的問題。</span></span></p></li></ul></section></section></section><section style="margin-left: auto;width: 2.25em;height: 2.25em;border-right: 5px solid transparent;border-bottom: 5px solid transparent;"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section><p powered-by="xiumi.us" style="margin-bottom: 0px;font-size: 15px;letter-spacing: 0.578px;text-wrap: wrap;"><span style="letter-spacing: 0.034em;"></span></p></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><strong>3.2.2 任務跑穩跑準</strong></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-align: center;"><img class="rich_pages wxw-img" data-galleryid="" data-imgfileid="100014232" data-ratio="0.562962962962963" data-s="300,640" src="https://oscimg.oschina.net/oscnet/be9e7c1f-0784-4af4-9430-927194cc675d.png" data-type="png" data-w="1080" style="" referrerpolicy="no-referrer"></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us">在第二階段，我們要保障的是任務跑穩，數據跑準,因此，我們有兩個<strong>關鍵的舉措</strong>：</p><section style="margin-top: 10px;margin-bottom: 10px;" powered-by="xiumi.us"><section style="margin-bottom: -2.25em;margin-right: 5px;background-color: rgb(247, 247, 247);"><section style="padding: 10px;margin-bottom: 5px;" powered-by="xiumi.us"><section style="text-align: left;"><ul class="list-paddingleft-1" style="list-style-type: disc;"><li><p><span style="font-size: 15px;letter-spacing: 0.578px;text-align: left;text-wrap: wrap;background-color: rgb(247, 247, 247);">大規模雙跑，目的是確保 Spark 任務遷移到 K8s 集羣後是兼容的，任務成功率有保障；</span><span style="font-size: 15px;letter-spacing: 0.578px;text-align: left;text-wrap: wrap;background-color: rgb(247, 247, 247);">任務執行時長是穩定的，不會明顯變慢；</span><span style="font-size: 15px;letter-spacing: 0.578px;text-align: left;text-wrap: wrap;background-color: rgb(247, 247, 247);">數據是準確的,跟 on YARN 保持一致性。</span><span style="font-size: 15px;letter-spacing: 0.578px;text-align: left;text-wrap: wrap;background-color: rgb(247, 247, 247);">為此，我們需要對任務進行 on YARN 和 on K8s 兩種模式下的雙跑測試，我們分批次總共進行了 7 輪雙跑，覆蓋了 2 萬+的線上正式任務。</span><span style="font-size: 15px;letter-spacing: 0.578px;text-align: left;text-wrap: wrap;background-color: rgb(247, 247, 247);">最終也取得了我們想要的結果：</span><span style="font-size: 15px;letter-spacing: 0.578px;text-align: left;text-wrap: wrap;background-color: rgb(247, 247, 247);">我們雙跑最終達成的任務成功率超過了 99.5%，絕大部分的任務在兩種模式下的時長波動在 25% 以內，數據一致性是 100%。</span></p><p><span style="font-size: 15px;letter-spacing: 0.578px;text-align: left;text-wrap: wrap;background-color: rgb(247, 247, 247);"></span></p></li><li><p><span style="letter-spacing: 0.034em;">混部集羣的壓力聯調，目的是確保混部集羣的承載容量能夠支撐大規模的離線任務調度，通過模擬未來 1 年的任務量來給混部集羣做壓力測試，充分發現和檢測 K8s 集羣可能存在的性能問題。</span><span style="letter-spacing: 0.034em;">最終，通過我們多輪壓測和問題解決，我們在單個 K8s 集羣能夠支撐 150+同時運行的 Spark 任務，1 萬+同時在運行的 Pod 數量。</span></p></li></ul></section></section></section><section style="margin-left: auto;width: 2.25em;height: 2.25em;border-right: 5px solid transparent;border-bottom: 5px solid transparent;"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-align: center;"><img class="rich_pages wxw-img" data-galleryid="" data-imgfileid="100014233" data-ratio="0.562962962962963" data-s="300,640" src="https://oscimg.oschina.net/oscnet/aa02646f-2993-4e8c-87df-a610f4dbc1a7.png" data-type="png" data-w="1080" style="" referrerpolicy="no-referrer"></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us">在<strong>第二階段</strong>，我們主要面臨三個方面的<strong>問題和挑戰</strong>。</p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us">首先是我們需要為 Spark 選擇一個外部的 shuffle 服務，經過技術選型和比較，我們最終選擇開源的 celeborn 作為我們的 remote shuffle service 組件。我們通過對機型和參數的測試調優，使 celeborn 的性能達到我們的預期需求。在大規模的應用場景中，我們還發現了會存在大任務會阻塞小任務，導致 shufle read 變慢的問題，我們對這種情況做了參數和代碼上的優化，當前社區也針對 shuffle read 的問題有一些待優化的改進。另外 celeborn 進行了容器化部署，在提升自動化運維能力的同時，也可以為混部集羣提供額外的計算資源。</p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us">其次，在任務穩定性方面，我們也解決了一系列的問題。</p><section style="font-size: 15px;letter-spacing: 5px;"><section style="margin-top: 10px;margin-bottom: 10px;text-align: center;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;border-width: 1px;border-style: solid;border-color: rgb(160, 160, 160);padding: 10px;"><section style="text-align: justify;letter-spacing: 0px;" powered-by="xiumi.us"><ol class="list-paddingleft-1" style="list-style-type: decimal;"><li><p style="margin-bottom: 10px;text-wrap: wrap;"><span style="letter-spacing: 0px;"><span style="font-size: 15px;letter-spacing: normal;text-wrap: wrap;">在雙跑的時候，我們發現有不少任務在 on K8s 模式下很容易 OOM，這是因為在 on YARN 模式下申請的 container 內存大小，不止是由 Spark 任務本身的內存參數決定，還會被 YARN 的資源粒度參數所影響。所以這塊要做一些適配對標工作。</span></span></p></li><li><p style="margin-bottom: 10px;text-wrap: wrap;"><span style="font-size: 15px;letter-spacing: normal;text-wrap: wrap;">在任務量比較大的情況下，Spark operator 的吞吐能力會遇到瓶頸，需要我們將併發 worker 數量、隊列的相關參數調大。</span></p></li><li><p style="margin-bottom: 10px;text-wrap: wrap;"><span style="font-size: 15px;letter-spacing: normal;text-wrap: wrap;">CoreDNS 因為 Spark 任務頻繁的域名解釋請求，導致壓力增大，甚至可能影響在線服務。這個可以通過訪問 ip 而不是域名的方式來規避，比如 namenode 節點、driver 和 executor。</span></p></li><li><p style="margin-bottom: 10px;text-wrap: wrap;"><span style="font-size: 15px;letter-spacing: normal;text-wrap: wrap;">橫向擴展 namespace，這樣可以避免單 namespace 的瓶頸，也防止 etcd 出現問題。</span></p></li><li><p style="margin-bottom: 10px;text-wrap: wrap;"><span style="font-size: 15px;letter-spacing: normal;text-wrap: wrap;">我們 K8s apiserver 的壓力隨着任務量增長壓力也會逐漸增大，這會影響整個集羣的穩定性。我們主要通過優化 Spark driver list pod 接口、使用 hostnetwork 方式兩個優化手段，有效降低了 apiserver 的壓力。</span><span style="letter-spacing: 0px;"></span></p></li></ol></section></section></section></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><span style="letter-spacing: 0.034em;"></span><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us">最後要説的是數據一致性，關鍵點是要做到行級記錄的 MD5 校驗，發現有不一致的 Case，我們做到 100% 的分析覆蓋。排除了因為時間戳隨機函數等一些預期內的不一致，我們發現並修復兩種 case 會偶發導致不一致的問題：<span style="text-align: left;background-color: rgb(247, 247, 247);letter-spacing: 0.034em;"></span></p><section style="margin-top: 10px;margin-bottom: 10px;" powered-by="xiumi.us"><section style="margin-bottom: -2.25em;margin-right: 5px;background-color: rgb(247, 247, 247);"><section style="padding: 10px;margin-bottom: 5px;" powered-by="xiumi.us"><section style="text-align: left;"><ul class="list-paddingleft-1" style="list-style-type: disc;"><li><p style="margin-bottom: 10px;"><span style="font-size: 15px;letter-spacing: 0.578px;text-align: left;text-wrap: wrap;background-color: rgb(247, 247, 247);"></span>celeborn Bug 導致不一致，具體可參考 CELEBORN-383 解決<span style="font-size: 15px;letter-spacing: 0.578px;text-align: left;text-wrap: wrap;background-color: rgb(247, 247, 247);"></span></p></li><li><p style="margin-bottom: 10px;"><span style="font-size: 15px;letter-spacing: 0.51px;text-align: left;text-wrap: wrap;background-color: rgb(247, 247, 247);">Java 版本不一致導致的問題</span><span style="letter-spacing: 0.034em;"></span></p></li></ul></section></section></section><section style="margin-left: auto;width: 2.25em;height: 2.25em;border-right: 5px solid transparent;border-bottom: 5px solid transparent;"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><strong>3.2.3 任務跑得智能</strong></p><p style="text-align: center;"><img class="rich_pages wxw-img" data-galleryid="" data-imgfileid="100014234" data-ratio="0.562962962962963" data-s="300,640" src="https://oscimg.oschina.net/oscnet/cd569e4c-b965-4131-8030-d92568dac94d.png" data-type="png" data-w="1080" style="" referrerpolicy="no-referrer"></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us">在<strong>第三階段，我們需要解決的問題是讓任務跑得智能，怎麼定義智能</strong>，我想用三個詞來概括彈性、健壯、業務需求。這是我們彈性調度的架構圖，細節我就不講了，這裏我介紹下我們的調度系統重點支持的功能。</p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-align: center;"><img class="rich_pages wxw-img" data-galleryid="" data-imgfileid="100014235" data-ratio="0.562962962962963" data-s="300,640" src="https://oscimg.oschina.net/oscnet/66a9c86a-4364-4adf-83af-94239689cfbb.png" data-type="png" data-w="1080" style="" referrerpolicy="no-referrer"></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section powered-by="xiumi.us"><p style="text-wrap: wrap;">在彈性方面，我們需要做到實時根據混部集羣資源閒忙，智能提交至混部集羣或者 Hadoop 集羣。在前期我們 K8s 集羣的資源相對 Hadoop 是小頭，通過合理的水位線控制，防止大量任務同時調度到 K8s 導致餓死。</p><p style="text-wrap: wrap;"><br></p><p style="text-wrap: wrap;">健壯，就是要保證任務的高可用。</p><p style="text-wrap: wrap;"><br></p><p style="text-wrap: wrap;">我們建設的能力包括：</p></section><section style="margin-top: 10px;margin-bottom: 10px;" powered-by="xiumi.us"><section style="margin-bottom: -2.25em;margin-right: 5px;background-color: rgb(247, 247, 247);"><section style="padding: 10px;margin-bottom: 5px;" powered-by="xiumi.us"><section style="text-align: left;"><ul class="list-paddingleft-1" style="list-style-type: disc;"><li><p style="margin-bottom: 10px;"><span style="letter-spacing: 0.034em;"><span style="font-size: 15px;letter-spacing: 0.578px;text-align: left;text-wrap: wrap;background-color: rgb(247, 247, 247);">任務雙跑成功後再混部</span></span></p></li><li><p style="margin-bottom: 10px;"><span style="font-size: 15px;letter-spacing: 0.51px;text-align: left;text-wrap: wrap;background-color: rgb(247, 247, 247);">支持離線任務失敗自動回滾到 Hadoop 集羣執行</span><br></p></li><li><p style="margin-bottom: 10px;"><span style="letter-spacing: 0.034em;">支持用戶自主決定任務是否可調度至 K8s 集羣</span></p></li><li><p style="margin-bottom: 10px;"><span style="letter-spacing: 0.034em;">初期剔除重要核心任務、剔除不可重試任務</span></p></li></ul></section></section></section><section style="margin-left: auto;width: 2.25em;height: 2.25em;border-right: 5px solid transparent;border-bottom: 5px solid transparent;"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section><section powered-by="xiumi.us"><p style="text-wrap: wrap;"><br></p><p style="text-wrap: wrap;">目的是在用戶任務遷移時做到讓用戶無感。</p><p style="text-wrap: wrap;"><br></p><p style="text-wrap: wrap;">在滿足業務需求方面，我們支持優先調度本業務的離線任務， 優先滿足業務部門的離線任務資源需求；支持只在指定時間段裏調度離線任務，支持在出現異常情況下一鍵終止調度 K8s。這些是為了確保在線服務的高可用性，免除在線業務的後顧之憂。</p></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><span style="font-size: 16px;color: rgb(65, 95, 255);">3.3 混部效果</span></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-align: center;"><img class="rich_pages wxw-img" data-galleryid="" data-imgfileid="100014236" data-ratio="0.562962962962963" data-s="300,640" src="https://oscimg.oschina.net/oscnet/afab0f50-7f07-454b-bd55-61893c100c47.png" data-type="png" data-w="1080" style="" referrerpolicy="no-referrer"></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us">克服了三步走過程中的磕磕碰碰，我們終於可以將離線任務大規模混布到 K8s 混部集羣了。但是我們很快發現，混部集羣的整體利用率並沒有達到我們的預期，主要有三方面的<strong>原因</strong>。</p><section style="margin-top: 10px;margin-bottom: 10px;" powered-by="xiumi.us"><section style="margin-bottom: -2.25em;margin-right: 5px;background-color: rgb(247, 247, 247);"><section style="padding: 10px;margin-bottom: 5px;" powered-by="xiumi.us"><section style="text-align: left;"><ol class="list-paddingleft-1" style="list-style-type: decimal;"><li><p><span style="font-size: 15px;letter-spacing: 0.578px;text-align: left;text-wrap: wrap;background-color: rgb(247, 247, 247);">初期的 Spark 任務不足，這個我們通過加快雙跑，遷移低版本的 Spark 任務，遷移 Hive SQL 任務來解決。</span><span style="font-size: 15px;letter-spacing: 0.578px;text-align: left;text-wrap: wrap;background-color: rgb(247, 247, 247);"></span></p><p><span style="font-size: 15px;letter-spacing: 0.578px;text-align: left;text-wrap: wrap;background-color: rgb(247, 247, 247);"></span></p></li><li><p><span style="font-size: 15px;letter-spacing: 0.578px;text-align: left;text-wrap: wrap;background-color: rgb(247, 247, 247);"><span style="font-size: 15px;letter-spacing: 0.578px;text-align: left;text-wrap: wrap;background-color: rgb(247, 247, 247);">在混部的時候，我們也觀察到，離線任務的 pod cpu 利用率其實沒那麼高。</span><span style="font-size: 15px;letter-spacing: 0.578px;text-align: left;text-wrap: wrap;background-color: rgb(247, 247, 247);">比如我們申請一個核，通常只能利用 0.6 個核，存在浪費的情況。</span><span style="font-size: 15px;letter-spacing: 0.578px;text-align: left;text-wrap: wrap;background-color: rgb(247, 247, 247);">我們上線了 CPU 資源超分的能力，目前是靜態的固定比例超分，通過這個措施，我們能將 pod 的實際 cpu 利用率打到 80% 以上。</span></span></p><p><span style="font-size: 15px;letter-spacing: 0.578px;text-align: left;text-wrap: wrap;background-color: rgb(247, 247, 247);"></span></p></li><li><p><span style="letter-spacing: 0.034em;">另外就是混部集羣中的機器配置不均，部分機器 cpu 資源充足，但是內存不夠。</span><span style="letter-spacing: 0.034em;">我們通過在調度側控制可調度任務的資源粒度，儘量調度對內存資源需求較小的任務。</span></p></li></ol></section></section></section><section style="margin-left: auto;width: 2.25em;height: 2.25em;border-right: 5px solid transparent;border-bottom: 5px solid transparent;"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section><p style="text-wrap: wrap;" powered-by="xiumi.us">通過我們在任務調度側，以及之前甘青提到過的其他措施。混部集羣利用率得到了進一步的提升。</p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-align: center;"><img class="rich_pages wxw-img" data-galleryid="" data-imgfileid="100014237" data-ratio="0.562962962962963" data-s="300,640" src="https://oscimg.oschina.net/oscnet/30c40274-3532-4eeb-ba12-14839209981d.png" data-type="png" data-w="1080" style="" referrerpolicy="no-referrer"></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section powered-by="xiumi.us"><p style="text-wrap: wrap;">最後，我向大家同步下，當前我們達成的<strong>混部效果</strong>。</p></section><section style="margin-top: 10px;margin-bottom: 10px;" powered-by="xiumi.us"><section style="margin-bottom: -2.25em;margin-right: 5px;background-color: rgb(247, 247, 247);"><section style="padding: 10px;margin-bottom: 5px;" powered-by="xiumi.us"><section style="text-align: left;"><p>我們目前可供調度的任務接近 2 萬個，這些任務每天調度的次數已經超過了 4 萬次。在凌晨的高峯期，我們通過混部，能為離線任務額外增加 2 萬核、50TB 內存的計算資源。這個收益是相當可觀的，我們也希望在未來的 2 到 3 年，將可調度的任務規模提升到 6 萬個，彈性資源能夠為離線計算總資源貢獻 20% 的份額。</p><p><br></p><p>通過繼續深度推進在離線混部技術，我們期望能夠為 vivo 增效降本工作持續地貢獻力量。</p></section></section></section><section style="margin-left: auto;width: 2.25em;height: 2.25em;border-right: 5px solid transparent;border-bottom: 5px solid transparent;"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us">以上就是本次分享的全部內容。</p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section style="margin-right: 0%;margin-bottom: 20px;margin-left: 0%;justify-content: flex-start;display: flex;flex-flow: row;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: middle;width: 40%;align-self: center;flex: 0 0 auto;"><section style="margin-top: 0.5em;margin-bottom: 0.5em;" powered-by="xiumi.us"><section style="border-top: 1px dotted rgb(90, 98, 114);"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section></section><section style="display: inline-block;vertical-align: middle;width: 20%;align-self: center;flex: 0 0 auto;"><section style="text-align: center;color: rgb(45, 66, 87);font-size: 11px;" powered-by="xiumi.us"><p>END</p></section></section><section style="display: inline-block;vertical-align: middle;width: 40%;align-self: center;flex: 0 0 auto;"><section style="margin-top: 0.5em;margin-bottom: 0.5em;" powered-by="xiumi.us"><section style="border-top: 1px dotted rgb(90, 98, 114);"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section></section></section><section style="margin-top: 10px;margin-bottom: 10px;text-align: left;" powered-by="xiumi.us"><section style="padding-left: 1em;padding-right: 1em;display: inline-block;text-align: center;"><span style="display: inline-block;padding: 0.3em 0.5em;border-radius: 0.5em;background-color: rgb(65, 94, 255);color: rgb(255, 255, 255);" title="" opera-tn-ra-cell="_$.pages:0.layers:0.comps:148.title1"><p>猜你喜歡<span style="font-size: 14px;text-align: left;background-color: rgb(239, 239, 239);color: rgba(0, 0, 0, 0.9);letter-spacing: 0.034em;"></span></p></span></section><section style="border-width: 1px;border-style: solid;border-color: transparent;margin-top: -1em;padding: 20px 10px 10px;background-color: rgb(239, 239, 239);text-align: center;"><section style="font-size: 14px;text-align: left;" powered-by="xiumi.us"><ul class="list-paddingleft-1" style="list-style-type: disc;"><li><p><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzI4NjY4MTU5Nw%3D%3D%26mid%3D2247498152%26idx%3D1%26sn%3Dedd66643831717629aad7aff83408d7b%26chksm%3Debdb893adcac002c6e3e83ce965f42a145933e65e0b6cda36b4dba5ca74b695d24c75ab1d8fb%26scene%3D21%23wechat_redirect" textvalue="vivo 海量微服務架構最新實踐" linktype="text" imgurl="" imgdata="null" data-itemshowtype="0" tab="innerlink" data-linktype="2"><span style="font-size: 14px;letter-spacing: 0.578px;text-align: left;text-wrap: wrap;background-color: rgb(239, 239, 239);">v</span><span style="font-size: 14px;letter-spacing: 0.578px;text-align: left;text-wrap: wrap;background-color: rgb(239, 239, 239);">ivo 海量微服務架構最新實踐</span></a><span style="font-size: 14px;letter-spacing: 0.578px;text-align: left;text-wrap: wrap;background-color: rgb(239, 239, 239);"></span><br></p></li><li><p><span style="font-size: 14px;letter-spacing: 0.578px;text-align: left;text-wrap: wrap;background-color: rgb(239, 239, 239);"><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzI4NjY4MTU5Nw%3D%3D%26mid%3D2247498156%26idx%3D1%26sn%3D38a4f19cd0dd7ee722058fb93d24d9cd%26chksm%3Debdb893edcac00281d3dbdaaff9bf97849bc8c474718cc3a4897f8bc6591ac1d048d6fca32f0%26scene%3D21%23wechat_redirect" textvalue="vivo 智能活動中台-悟空系統建設之路" linktype="text" imgurl="" imgdata="null" data-itemshowtype="0" tab="innerlink" data-linktype="2">vivo 智能活動中台-悟空系統建設之路</a></span><br></p></li><li><p><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzI4NjY4MTU5Nw%3D%3D%26mid%3D2247498161%26idx%3D1%26sn%3De2b373cf68dacf452f9a72914ff5d572%26chksm%3Debdb8923dcac00350b0fc183811faca38b835da3770032ff5aac641e3c43903fb520feb2415a%26scene%3D21%23wechat_redirect" textvalue="vivo 海量基礎數據計算架構應用實踐" linktype="text" imgurl="" imgdata="null" data-itemshowtype="0" tab="innerlink" data-linktype="2">vivo 海量基礎數據計算架構應用實踐</a></p></li><li><p><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzI4NjY4MTU5Nw%3D%3D%26mid%3D2247498246%26idx%3D1%26sn%3D4de0ce8c53c4f19d8f84908a3159f449%26chksm%3Debdb8a94dcac03825ee53323d4d48266526ffc24d9bfe572d673de47e4a34aabb26125900330%26scene%3D21%23wechat_redirect" textvalue="vivo 短視頻體驗與成本優化實踐" linktype="text" imgurl="" imgdata="null" data-itemshowtype="0" tab="innerlink" data-linktype="2">vivo 短視頻體驗與成本優化實踐</a></p></li></ul></section></section></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section class="mp_profile_iframe_wrp"><mp-common-profile class="js_uneditable custom_select_card mp_profile_iframe" data-pluginname="mpprofile" data-id="MzI4NjY4MTU5Nw==" data-headimg="http://mmbiz.qpic.cn/mmbiz_png/4g5IMGibSxt45QXJZicZ9gaNU2mRSlvqhQd94MJ7oQh4QFj1ibPV66xnUiaKoicSatwaGXepL5sBDSDLEckicX1ttibHg/0?wx_fmt=png" data-nickname="vivo 互聯網技術" data-alias="vivoVMIC" data-signature="分享 vivo 互聯網技術乾貨與沙龍活動，推薦最新行業動態與熱門會議。" data-from="0" data-is_biz_ban="0"></mp-common-profile></section></section><p style="display: none;"><mp-style-type data-value="3"></mp-style-type></p></div><p style="color: #858585; font-size: 13px;">本文分享自微信公眾號 - vivo 互聯網技術（vivoVMIC）。<br>如有侵權，請聯繫 support@oschina.cn 刪除。<br>本文參與「<a href="https://www.oschina.net/sharing-plan" target="_blank">OSC 源創計劃</a>」，歡迎正在閲讀的你也加入，一起分享。</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 13 Mar 2024 03:04:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/vivotech/blog/11045485</guid>
            <link>https://my.oschina.net/vivotech/blog/11045485</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[OpenAI 新模型 GPT-4.5 Turbo 意外曝光]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>OpenAI 的最新力作 GPT-4.5 Turbo 已經在網絡上意外曝光。首批發現此信息的是 Bing 和 DuckDuck Go 等搜索引擎，它們在官方發佈之前就索引了這款產品的頁面。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-ceb1f311186a7da1ba5bb081bfbb308b554.png" referrerpolicy="no-referrer"></p><p>不過，點擊這些搜索結果卻會出現 404 錯誤頁面。儘管如此，搜索引擎中的預覽文本透露了一個激動人心的消息：GPT-4.5 Turbo 是 OpenAI 至今為止開發的速度最快、最準確、擴展性最強的模型，能處理高達 256,000 個 Token，是之前 GPT-4 Turbo 128K 處理能力的兩倍，大約相當於 200,000 個詞。</p><p>此外，預覽信息還提到，GPT-4.5 Turbo 將包含直至 2024 年 6 月的最新信息，這意味着新模型預計將在 6 月份發佈。這與 OpenAI 以往發佈新模型後立即提供使用的做法不同，這可能是為了與近期推出的競爭對手模型，如 Anthropic 的 Claude 3 競爭，後者在多個領域的表現已經達到或超過了 GPT-4。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-0fdbafcd29014f47112bb4a071d7995270b.png" referrerpolicy="no-referrer"></p><p>自去年 12 月以來，就有傳聞稱 GPT-4.5 Turbo 將很快推出。這些傳聞中提到的新特性包括文本和圖像處理之外，可能還包括視頻或 3D 功能。不過，這次泄露的信息中並沒有提及到這方面的能力。</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 13 Mar 2024 02:11:54 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/282842/openais-gpt-4-5-turbo-leaked-on-search-engines</guid>
            <link>https://www.oschina.net/news/282842/openais-gpt-4-5-turbo-leaked-on-search-engines</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[中央國家機關政府採購中心：應當將 CPU、操作系統符合安全可靠測評要求納入採購需求]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">中央國家機關政府採購中心 3 月 11 日發佈《關於更新中央國家機關台式計算機、便攜式計算機批量集中採購配置標準的通知》。</span></p><p><span style="color:#000000">其中提到，明確要求，鄉鎮以上黨政機關，以及鄉鎮以上黨委和政府直屬事業單位及部門所屬為機關提供支持保障的事業單位在採購台式計算機、便攜式計算機時，應當將 CPU、操作系統符合安全可靠測評要求納入採購需求。</span></p><p><span style="color:#000000"><img height="306" src="https://oscimg.oschina.net/oscnet/up-86f7c27e9f31f3a2d12c5cfa9e70800d2fd.png" width="500" referrerpolicy="no-referrer"></span></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 13 Mar 2024 02:05:54 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/282840</guid>
            <link>https://www.oschina.net/news/282840</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Midjourney 禁止 Stability AI 員工使用其服務]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>據 The Verge 報道，Midjourney 宣佈禁止 Stability AI 的員工使用其服務。</p><p>MidJourney 同時指責競爭對手生成式 AI 公司的員工在本月早些時候<strong>試圖竊取 Midjourney 的數據時造成了系統中斷</strong>。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-19fb636932e992d63ecd495889536c09fbe.png" referrerpolicy="no-referrer"></p><p>Midjourney 於 3 月 2 日在其 Discord 服務器上發佈了一條更新，承認服務器長時間中斷導致生成的圖片無法出現在用戶圖庫中。</p><p>在 3 月 6 日的業務更新電話會議摘要中，Midjourney 聲稱 "來自付費賬戶的殭屍網絡式活動"（該公司特別將其與 Stability AI 員工聯繫起來）是此次故障的幕後黑手。<span style="background-color:#ffffff; color:#474747">它監測到懷疑是 Stability AI 僱員試圖批量抓取提示和圖像的類殭屍網絡活動。</span></p><p>Stability AI CEO Emad Mostaque <u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftwitter.com%2FEMostaque%2Fstatus%2F1765496173572346182" target="_blank">迴應了這一報道</a></u>，表示發生的任何事情都絕非故意。他稱他們的調查發現沒有人在抓取圖像，但一名團隊成員運行了一個機器人程序，為個人項目收集提示。如果是這一行為導致了 Midjourne 宕機，他們對此表示道歉。</p><blockquote><p><img src="https://oscimg.oschina.net/oscnet/up-18dbc114ac9f5e8bc411d1dc54f16b09afe.png" referrerpolicy="no-referrer"></p></blockquote><p>Mostaque 稱 Stability AI 不需要 Midjourney 的數據，該公司最新的 Stable Diffusion 3 模型優於 Midjourne 等競爭對手的模型。</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 13 Mar 2024 01:56:54 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/282835/midjourney-bans-stability-ai-employees</guid>
            <link>https://www.oschina.net/news/282835/midjourney-bans-stability-ai-employees</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[2026 年，雲計算市場規模預計突破萬億美元]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff; color:#060607">《雲計算白皮書（2023 年）》由</span><span style="background-color:#ffffff; color:#060607">中國信息通信研究院發佈，以下是主要內容：</span></p><ol><li><p style="margin-left:0; margin-right:0"><strong>全球雲計算發展概述</strong>：</p><ul><li><strong>戰略價值提升</strong>：美國、歐洲、亞洲等國家和地區紛紛出台雲計算戰略，以確保在全球經濟、科技和軍事等領域的領先地位。</li><li><strong>市場增長</strong>：2022 年全球雲計算市場規模達到 4910 億美元，預計到 2026 年將突破萬億美元。</li><li><strong>競爭升級</strong>：全球雲計算巨頭調整發展重心，聚焦熱點區域和領域，競爭日益激烈。</li><li><strong>技術創新</strong>：雲計算技術不斷進步，如應用現代化、一雲多芯、平台工程等，以滿足用戶多樣性場景需求。</li></ul></li><li><p style="margin-left:0; margin-right:0"><strong>中國雲計算發展概述</strong>：</p><ul><li><strong>政策指引</strong>：國家政策推動雲計算與實體經濟深度融合，促進雲計算應用創新。</li><li><strong>市場快速增長</strong>：2022 年中國雲計算市場規模達到 4550 億元人民幣，增速 40.91%，預計 2025 年市場規模將超萬億元。</li><li><strong>技術革新</strong>：雲計算技術持續更新，如雲原生安全、系統穩定性等，助力產業數字化升級。</li><li><strong>行業應用</strong>：雲計算在政務、金融、電信等行業應用成熟，而在工業、交通、醫療等行業處於成長期。</li></ul></li><li><p style="margin-left:0; margin-right:0"><strong>雲計算向數字世界操作系統轉變</strong>：</p><ul><li><strong>數字應用與算力變革</strong>：雲計算整合海量算力資源，加速數字應用的感知、判斷和執行。</li><li><strong>管理方式革新</strong>：雲計算定義了算力資源使用的新方式，如納管、編排、部署等。</li><li><strong>創新孵化效用</strong>：雲計算提供了統一的數字應用創新基座，推動應用從單點創新到體系化創新。</li></ul></li><li><p style="margin-left:0; margin-right:0"><strong>雲計算加速催生算力服務新範式</strong>：</p><ul><li><strong>架構變革</strong>：雲計算支持以數據為中心的計算體系，推動算力服務架構的創新。</li><li><strong>功能創新</strong>：雲計算推動算力服務在感知接入、路由轉發和融合調度等方面的創新發展。</li><li><strong>模式重構</strong>：雲計算重構算力服務的供需模式，從資源交易到結果交付，實現更高效的資源利用。</li></ul></li><li><p style="margin-left:0; margin-right:0"><strong>總結與展望</strong>：</p><ul><li><strong>戰略深化</strong>：全球主要國家將雲計算視為提升國家綜合實力的關鍵技術，未來將更加註重雲計算的戰略佈局。</li><li><strong>實際賦能</strong>：中國雲計算發展將更加關注實際賦能水平，提升雲計算的兼容能力和 SaaS 服務生態。</li><li><strong>社會發展作用</strong>：雲計算作為數字經濟的技術底座，將對社會發展發揮更強的作用，特別是在算力服務和數字經濟高質量發展方面。</li><li><strong>算力服務融合</strong>：雲計算將與算力服務深度融合，推動數字經濟乘數效應的放大。</li></ul></li></ol><p style="color:#060607; margin-left:0; margin-right:0; text-align:start">這份白皮書全面分析了雲計算的全球趨勢、中國市場特點、技術進步、行業應用以及未來發展方向，突出了雲計算在推動數字化轉型和經濟發展中的核心作用。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">報告詳情可至<strong><span style="color:#333333"><span style="background-color:#f39c12">「開源中國 APP - 報告模塊」</span></span></strong>查看。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">APP 下載地址：</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="300" src="https://oscimg.oschina.net/oscnet/up-8ab7bb9f45ecaae87f7a862ea446ae1dacf.png" width="300" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>（<em>目前僅提供 Android 版本）</em></strong></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 12 Mar 2024 10:38:18 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/282766</guid>
            <link>https://www.oschina.net/news/282766</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[像素數據加入 openKylin，攜手打造圖像智能分析產品解決方案]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span>近日，廣州像素數據技術股份有限公司（以下簡稱「像素數據」）簽署了 openKylin 社區 CLA(Contributor License Agreement 貢獻者許可協議)，正式加入 openKylin 開源社區。</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:center"><img alt="" height="1079" src="https://oscimg.oschina.net/oscnet/up-e691cef8cdc3d6bcef1b3dffc17c61f5961.png" width="829" referrerpolicy="no-referrer"></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span>像素數據創立於 1998 年，是一家專注於將先進的人工智能技術與教育行業應用相融合，構建人像採集、處理、檢測、驗證、識別、監控完整的產品生態鏈的高新技術企業。經過二十幾年的探索實踐，像素數據形成了系統化的教育考試和公共安全解決方案及服務模式，圍繞人臉識別、人像採集與檢測、物體檢測和視頻分析等核心人工智能技術開發產品和提供服務。</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span>像素數據專注於智慧教育、智慧安防及圖像採集三大板塊業務市場，優勢產品有身份驗證系列產品、理化生實驗操作考試系列產品和人像檢測處理系列產品等。</span></p><p style="text-align:center"><img alt="" height="410" src="https://oscimg.oschina.net/oscnet/up-910ca663dfc388599b63ac6eaa45cba540f.png" width="940" referrerpolicy="no-referrer"></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span>加入 openKylin 社區後，像素數據將積極運用自身在智慧教育、智慧安防以及圖像採集領域的專業技術和資源積澱，推動社區內資源的互補與高效融合。並通過深入交流與緊密合作，共同發掘新技術、新應用與新模式的無限潛力，匯聚社區力量，在智慧教育、智慧安防及圖像採集等領域形成強大合力，為行業的創新與發展貢獻源源不斷的智慧與動能，共同構建一個互利共贏、共同發展的生態圈。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 12 Mar 2024 09:29:11 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/282746</guid>
            <link>https://www.oschina.net/news/282746</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[經濟日報：謹防人工智能「風控」成風險]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>近年來，人工智能技術快速滲透各行各業，金融業也不例外。不少金融機構開始嘗試將人工智能技術應用於風險防控領域，用科技創新來防範金融風險。</p><p>當前，我國在「人工智能+風控」領域進行了積極的嘗試與探索，與國際金融業同行相比，具有一定的先發優勢。在 2023 年 7 月的世界人工智能大會上，騰訊對外發布了金融風控大模型。同年 11 月，騰訊與中國信息通信研究院、中國科學技術大學、新加坡南洋理工大學、中原消費金融、微眾銀行等科研院校及金融機構聯合制定了全球範圍內首個金融風控領域的大模型國際標準。</p><p>人工智能技術會為金融風控帶來什麼？理論上，人工智能賦能風控，減少了人為失誤和幹擾，可以提升風險識別的效率和準確性。然而，考慮到人工智能技術是尚在發展的新事物，仍不成熟，在金融風控領域貿然推廣可能帶來新的風險。</p><p>最令人擔憂的是數據泄露的風險。目前，許多金融機構會選擇與具有人工智能技術的科技公司在風控領域展開合作，這些合作往往會涉及數據共享。人工智能大模型依靠大量的樣本數據進行訓練，數據的規模和質量對風控的準確性有着至關重要的影響。理論上，數據越豐富，大模型精準用戶畫像的能力越強，在信貸審批等方面識別風險的準確度就越高。然而，隨着越來越多的數據被共享，隱私能否被有效保護就成了新的風險挑戰。值得強調的是，金融數據不僅具備數據的一般特性，更包含了國民賬戶信息、企業資金流轉等重要內容，這意味着金融數據一旦泄露，可能會帶來比一般數據泄露更大的風險。</p><p>除了數據泄露外，法律風險同樣不容忽視。從歷史上看，法律法規的修訂往往滯後於新技術的應用。目前，人工智能技術還存在因數據和算法失誤生成虛假內容的可能，並在一定程度上造成用戶歧視。一旦大模型生成不準確的金融風控報告，將很難分清是科技公司提供的技術不可靠，還是金融機構提供的數據不可信，這使得法律層面的責任難以被界定，容易出現金融機構和科技公司相互推諉扯皮的現象。在扯皮過程中，客戶貸款審批等合理訴求就可能受到拖延，風險最終由客戶買單。</p><p>中央金融工作會議提出，要全面加強金融監管，有效防範化解金融風險。針對人工智能技術在金融業應用可能帶來的新風險，一方面，要完善法律法規，保障人對人工智能技術生成結果合理質疑的權利，確保人工智能技術受到責任追究機制和透明、公平、安全等原則的制約；另一方面，要有效管理金融數據信息，穩健、謹慎地推動人工智能技術應用，不斷提高風控技術，對風險管理和預測模型改進優化，讓技術向好向善，預防人工智能技術在金融領域應用帶來的潛在風險。</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 12 Mar 2024 08:38:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/282738</guid>
            <link>https://www.oschina.net/news/282738</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[AI 推理框架軟件 ONNX Runtime 正式支持龍架構]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>近日，知名 AI 推理框架開源社區 ONNX Runtime 正式發佈支持龍架構的版本 1.17.0。</p><blockquote><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-315cece2b949221ece5f43ff29b6d272deb.png" referrerpolicy="no-referrer"></p></blockquote><p>今後，用戶可以直接使用 ONNX Runtime 開源社區發佈的版本在龍芯平台完成 AI 推理類應用的開發和部署，標誌着龍架構軟件生態得到進一步完善。</p><p>ONNX Runtime（ORT）是近年來興起的 AI 推理框架軟件，被大量 AI 應用作為基礎 AI 推理引擎。ORT 可支持 PyTorch、Tensorflow、TFLite 等多種格式的模型輸入，以及 CPU、GPU、IoT、NPU、FPGA 等多樣化算力後端。</p><p>在 ONNX Runtime 社區 1.17.0 版本的研製過程中，龍芯中科技術團隊與社區保持緊密合作，期間向 ONNX Runtime 社區代碼倉庫提交了 7697 行代碼，對矩陣乘法、卷積、轉置等核心算子進行深度向量優化。</p><p>在社區支持下，龍架構優化代碼通過了檢視、測試驗證等質量保證流程，ONNX Runtime 社區自 1.17.0 版本起正式實現對龍架構的原生支持。</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 12 Mar 2024 08:16:02 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/282732</guid>
            <link>https://www.oschina.net/news/282732</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Google 在 MySQL 中推進矢量搜索，在 LLM 支持方面超越 Oracle]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>谷歌已將向量搜索引入其 MySQL 數據庫服務，這一步領先了 MySQL 的所屬公司 Oracle，迄今為止，Oracle 尚未給 MySQL 添加任何大型語言模型（LLM）方面的功能。</p><p>谷歌雲數據庫副總裁安迪·古特曼斯 (Andi Gutmans) 表示，在過去 12 年裏，谷歌在向量方面的創新速度相當快。目前，在多個 Google Cloud 數據庫中提供向量搜索預覽版，包括 Cloud SQL for MySQL、Memorystore for Redis 以及 Google 的分佈式數據庫管理和存儲服務 Spanner。</p><p>向量是 LLM 的基本元素，自 2022 年 ChatGPT 推出以來，LLM 已成為大型科技公司、政府和媒體的關注焦點。LLM 依賴於單詞或語言的其他組成部分，根據其與其他語言的統計相似性將其表示為向量嵌入。Google 支持 Word2Vec，這是一種 2013 年推出的自然語言處理技術，儘管它已被法學碩士採用的轉換器架構所取代。</p><p>開源數據庫服務公司 Percona 的技術傳播者 Dave Stokes 表示，Oracle 工程部門近期沒有計劃向 MySQL 支持向量類的功能。</p><p>「可悲的是，Oracle 似乎將所有資源投入到 HeatWave 中，同時為社區版做了絕對最低限度的資源」，他説。「這將使得 MySQL 進一步落後於 PostgreSQL 和新的向量數據庫等。社區版普遍缺乏新特性和功能，而將 JavaScript 和向量嵌入到商業版本中，這將使社區客戶尋求其他替代方案，例如 Google 提供的產品」。</p><p>不過，谷歌並不是唯一一家將向量搜索添加到 MySQL 服務的供應商。PlanetScale 是基於 MySQL/Vitesse 的分佈式事務系統，於去年 10 月宣佈了這一新功能。</p><p>Redis 是一種流行的內存數據庫，通常用作緩存和系統代理，也已經在發佈的版本中支持向量搜索。</p><p>分佈式文檔數據庫 Couchbase 在 DBaaS Capella 和 Couchbase Enterprise Edition 中引入了向量搜索作為新功能。Couchbase 產品管理和業務運營高級副總裁 Scott Anderson 表示，向平台添加向量搜索是「使我們的客戶能夠構建新一波自適應應用程序」的下一步。</p><p>去年，Oracle 數據庫、Cassandra、MongoDB、PostgreSQL 和 SingleStore 在其數據庫系統中增加了對向量搜索的支持，而像 Pinecone 這樣的專業向量數據庫也如雨後春筍般湧現，以支持計算趨勢。</p><p>Forrester Research 副總裁兼首席分析師 Noel Yuhanna 表示，向量搜索現在或多或少已經成為任何專業企業數據庫的標準。</p><p>「那些沒有它的企業可能會看到對其增長的影響。根據我們的研究，大約 35% 的企業正在考慮向量數據庫，預計在未來 18 個月內將增長到 50%」，他説。</p><p>他表示，向量搜索對於生成式人工智能應用程序變得至關重要，可以幫助尋找類似的數據、圖像和文檔，以及客戶智能、欺詐檢測、聊天機器人和內容個性化等新興應用程序。</p><p>Yuhanna 説，雖然專業向量數據庫有其優勢，但集成數據庫為組織提供了更多背景和更豐富的數據體驗。「沒有哪家供應商能脫穎而出，因為向量功能仍在不斷髮展，而且許多供應商尚未展現出高端規模。」</p><p>然而，目前只有約 22% 的組織正在為其數據庫考慮 LLM/GenAI 戰略，儘管 Forrester 預計這一數字在未來兩到三年內會翻一番。Yuhanna 表示：「我們看到的大部分需求是希望利用向量進行新部署的新 GenAI 應用程序；要使現有數據庫轉向向量，我們至少需要幾年時間。」</p><p>谷歌還試圖讓自己的 GenAI 模型更接近其分析環境。谷歌表示，它正在通過 Vertex AI 為 BigQuery（其數據倉庫系統）的用戶提供 Gemini。與 AI 和 ML 平台的新集成旨在幫助數據工程師和分析師使用 Gemini 模型為其 BigQuery 數據提供多模式和高級推理功能。</p><p>Yuhanna 表示，將 Vertex AI、BigQuery 和 BigLake 更緊密地結合在一起不僅可以幫助組織避免數據移動，還可以幫助提供見解、改善數據治理和安全性、刪除冗餘數據，並通過最大限度地減少管理要求來降低成本。</p><p>他表示，企業將非結構化數據與結構化 BI 風格數據合併為所謂的 Lakehouse 概念是趨勢的一部分，目前約有四分之一的企業採用這種概念，以降低成本並運行 BI、數據科學、AI/ML、運營單一平台上的見解和 SQL 分析。</p><p>更多技術文章，請訪問：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopensource.actionsky.com%2F" target="_blank">https://opensource.actionsky.com/</a></p><h2>關於 SQLE</h2><p>SQLE 是一款全方位的 SQL 質量管理平台，覆蓋開發至生產環境的 SQL 審核和管理。支持主流的開源、商業、國產數據庫，為開發和運維提供流程自動化能力，提升上線效率，提高數據質量。</p><h2>SQLE 獲取</h2><table><thead><tr><th>類型</th><th>地址</th></tr></thead><tbody><tr><td>版本庫</td><td><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Factiontech%2Fsqle" target="_blank">https://github.com/actiontech/sqle</a></td></tr><tr><td>文檔</td><td><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Factiontech.github.io%2Fsqle-docs%2F" target="_blank">https://actiontech.github.io/sqle-docs/</a></td></tr><tr><td>發佈信息</td><td><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Factiontech%2Fsqle%2Freleases" target="_blank">https://github.com/actiontech/sqle/releases</a></td></tr><tr><td>數據審核插件開發文檔</td><td><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Factiontech.github.io%2Fsqle-docs%2Fdocs%2Fdev-manual%2Fplugins%2Fhowtouse" target="_blank">https://actiontech.github.io/sqle-docs/docs/dev-manual/plugins/howtouse</a></td></tr></tbody></table></div>
                                    ]]>
            </description>
            <pubDate>Tue, 12 Mar 2024 08:10:02 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/actiontechoss/blog/11046991</guid>
            <link>https://my.oschina.net/actiontechoss/blog/11046991</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[OpenAI 開源 Transformer Debugger]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">OpenAI 超級對齊負責人 Jan Leike <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftwitter.com%2Fjanleike%2Fstatus%2F1767347608065106387" target="_blank">宣佈</a>，推出了一個該公司內部使用的分析 Transformer 內部結構的工具 -- Transformer Debugger (TDB) 。它結合了自動可解釋性和稀疏自動編碼器，無需編寫代碼即可快速探索模型。</span></p><p><img height="477" src="https://static.oschina.net/uploads/space/2024/0312/151543_JCIR_4252687.jpg" width="300" referrerpolicy="no-referrer"></p><p><span style="color:#000000">目前，該項目<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopenai%2Ftransformer-debugger" target="_blank">倉庫</a>已在 MIT 協議下開放。Jan Leike 表示，TDB 目前仍然是一個處於早期階段的研究工具，他們希望通過開源的方式讓更多人使用，並在此基礎上加以改進。</span></p><p><span style="color:#000000">根據介紹，Transformer Debugger 是 OpenAI 的 Superalignment 團隊開發的一款工具，旨在支持對小語言模型的特定行為進行研究。</span></p><p><span style="color:#000000">TDB 可以在編寫代碼之前進行快速探索，能夠幹預前向傳遞並查看它對特定行為的影響。它可以用來回答諸如"為什麼模型會輸出 token A 而不是 token B"或"為什麼 attention head H 會關注 token T"之類的問題。它通過識別對行為有貢獻的特定組件（neurons、attention heads、autoencoder latents），顯示自動生成的關於導致這些組件激活最強烈的原因的解釋，以及追蹤組件之間的連接以幫助發現聯繫。</span></p><p><span style="color:#000000">本次開源發佈的內容包括：</span></p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopenai%2Ftransformer-debugger%2Fblob%2Fmain%2Fneuron_viewer%2FREADME.md" target="_blank">Neuron viewer</a>：一個 React 應用程序，託管 TDB 以及包含有關各個模型組件（<span style="color:#1f2328">MLP&nbsp;</span>neurons、attention heads and autoencoder latents for both）信息的頁面。</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopenai%2Ftransformer-debugger%2Fblob%2Fmain%2Fneuron_explainer%2Factivation_server%2FREADME.md" target="_blank">Activation server</a>：對主題模型進行推理，為 TDB 提供數據的後端服務器。它還從公共 Azure 存儲桶讀取數據並提供數據。</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopenai%2Ftransformer-debugger%2Fblob%2Fmain%2Fneuron_explainer%2Fmodels%2FREADME.md" target="_blank">Models</a>：一個用於 GPT-2 模型及其自動編碼器的簡單推理庫，帶有用於<span style="color:#333333">捕獲激活的 hook</span>。</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopenai%2Ftransformer-debugger%2Fblob%2Fmain%2Fdatasets.md" target="_blank">Collated activation datasets</a>：MLP neurons、attention heads 和 autoencoder latents 的頂級激活數據集示例。</li></ul><p>此外， OpenAI 方面還放出了幾個概述 TDB 能力的視頻，<span style="color:#333333">並展示瞭如何使用它來研究論文「</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Farxiv.org%2Fabs%2F2211.00593" target="_blank">Interpretability in the Wild: a Circuit for Indirect Object Identification in GPT-2 small</a><span style="color:#333333">」。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 12 Mar 2024 07:10:04 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/282711/openai-transformer-debugger</guid>
            <link>https://www.oschina.net/news/282711/openai-transformer-debugger</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[deepin Meetup·成都站全程回顧，乾貨滿滿，感動多多 | 附 PPT 下載]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#000000">內容來源：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.deepin.org%2Fzh%2Fdeepin-meetup-2024-chengdu%2F" target="_blank">deepin 社區</a></p><p style="color:#000000; text-align:center"><img alt="" height="383" src="https://storage.deepin.org/thread/202403110832526053_deepinmeetup%E6%B4%BB%E5%8A%A8%E5%9B%9E%E9%A1%BE900x383.jpg" width="900" referrerpolicy="no-referrer"></p><p style="color:#000000; text-align:start">2024 年 3 月 9 日，<strong>「deepin Meetup · 成都站」</strong>順利舉辦！此次活動，我們聚集了業界專家與優秀的開發者，吸引了來自成都及周邊地區 50 餘名用戶的積極參與。大家共同探討 deepin-IDE 成長曆程、Flutter 跨平台應用程序開發等熱門話題，同時，更有社區資深貢獻者從社區參與的角度與大家分享回顧了 deepin 發展的三個歷史時期。</p><p style="color:#000000; text-align:start">接下來，就讓我們一起回到精彩現場，看看此次都有哪些觀點洞察和技術乾貨叭！</p><p style="color:#000000; text-align:start">本次活動依然由 deepin（深度）社區主辦，感謝 freeCodeCamp 成都社區提供支持。</p><p style="color:#000000; text-align:center"><img alt="" height="880" src="https://storage.deepin.org/thread/202403110838247420_0.png" width="1180" referrerpolicy="no-referrer"></p><p style="color:#000000; text-align:center">&nbsp;</p><h2><strong>deepin-IDE 的成長腳步與未來道路</strong></h2><p style="color:#000000; text-align:center"><img alt="" height="879" src="https://storage.deepin.org/thread/202403110838378676_1.png" width="1179" referrerpolicy="no-referrer"></p><p style="color:#000000; text-align:center"><span style="color:#757575">盧楨（deepin-mozart） / 中國發明協會成員，系統架構師</span></p><p style="color:#000000; text-align:start">2023 年 9 月，deepin-IDE 橫空出世，受到了大家的廣泛關注，來自 deepin-IDE 研發團隊的盧楨為大家詳細講述了 deepin-IDE 從誕生以來打怪升級的故事，以及背後所用到的調試、遷移等核心技術，並歲 deepin-IDE 的智能插件所提供的自動編碼、代碼註釋及翻譯等 AI 能力進行了現場演示。</p><p style="color:#000000; text-align:start">值得一提的是，deepin-IDE 中的智能插件現已實現了智能問答、代碼翻譯、添加註釋、代碼生成等功能。目前，deepin-IDE 已經上架 deepin 應用商店，歡迎大家可以安裝體驗。</p><p style="color:#000000; text-align:start"><em>倉庫地址：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Flinuxdeepin%2Fdeepin-unioncode" target="_blank">https://github.com/linuxdeepin/deepin-unioncode</a></em></p><p style="color:#000000; text-align:start"><em>開發者文檔：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fusdn.uniontech.com%2F%23document" target="_blank">https://usdn.uniontech.com/#document</a></em></p><p style="color:#000000; text-align:start">&nbsp;</p><h2><strong>Flutter：桌面應用程序開發的新選擇</strong></h2><div><img alt="" height="876" src="https://storage.deepin.org/thread/202403110839288916_2.png" width="1182" referrerpolicy="no-referrer"></div><p style="color:#000000; text-align:center"><span style="color:#757575">徐寶林 / Google Flutter 開源項目 Member、OPPO 軟件工程師</span></p><p style="color:#000000; text-align:start">説起跨平台桌面應用開發的主流框架，Flutter 絕對是一個不可忽視的選擇，作為 Google 開源的跨平台應用開發框架，Flutter 具有高性能、可移植性強、開發時間短、成本低、UI 控件豐富等優勢。</p><p style="color:#000000; text-align:start">據 Google Flutter 開源項目 Member 徐寶林介紹，正是因為 Flutter 具有更低的開發成本和更短的開發週期，所以 Flutter 非常適合做原型設計開發、初創企業快速開發，開發者們可以快速上手並構建漂亮且高性能的跨平台移動應用。</p><p style="color:#000000; text-align:start">&nbsp;</p><h2><strong>我與 deepin 相伴 17 年</strong></h2><div><img alt="" height="888" src="https://storage.deepin.org/thread/202403110839399773_3.png" width="1184" referrerpolicy="no-referrer"></div><p style="color:#000000; text-align:center"><span style="color:#757575">水歌 / Web 全棧開發者、freeCodeCamp 成都社區主理人</span></p><p style="color:#000000; text-align:start">從社區參與者的角度來看，deepin 的發展經歷了許多獨特的變化。作為 deepin 社區的資深貢獻者之一，水歌結合自己與 deepin 一同走過的 17 年歲月，帶領大家一起回顧了 deepin 社區是如何從一個「草根社區」逐步發展成如今完善繁榮的模樣，並分享了自己從「封裝系統盤、折騰 Linux 發行版無數」到「擁抱開源生態、深入開源社區」的成長故事。</p><p style="color:#000000; text-align:center"><img alt="" height="874" src="https://storage.deepin.org/thread/202403110839481885_4.png" width="1182" referrerpolicy="no-referrer"></p><p style="color:#000000; text-align:start">除了主題演講之外，現場 Linux 愛好者的閃電演講也贏得了滿堂喝彩。雲原生開發工程師@chaunceyjiang 與大家分析了當前集羣管理現狀與痛點，並介紹了多集羣生命週期管理工具 Kubean，及其所帶來新的解決方案。</p><h2>下一站，西安</h2><p style="color:#000000; text-align:start">本次 deepin Meetup · 成都站活動圓滿結束！感謝大家不辭遠路來到現場參加活動，甚至有的同學從外地專程趕來相聚，同時感謝所有參與分享和討論的 deepiner！</p><p style="color:#000000; text-align:start">deepin Meetup 的創辦希望幫助社區當中的每一個人都可以充分的交流經驗和心得，所<strong>以我們也將本次活動的演示文稿開放出來，供大家查看，大家<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.deepin.org%2Fzh%2Fdeepin-meetup-2024-chengdu%2F" target="_blank"><span style="color:#0e52d4">可點擊【此處】跳轉下載</span>。</a></strong></p><p style="color:#000000; text-align:start">那麼，讓我們準備開啓下一次的 deepin Meetup 吧！月底，西安見！</p><p style="color:#000000; text-align:start">如果你感興趣做分享，或是有更多的建議給到我們，可以掃描下方二維碼，申報議題或提交建議。無論是標準的主題演講 ，還是 5 分鐘簡短的閃電演講，都期待你的報名～</p><p style="color:#000000; text-align:center"><img alt="" height="150" src="https://storage.deepin.org/thread/202403110844536352_%E8%AE%AE%E9%A2%98%E5%BE%81%E9%9B%86&amp;%E5%BB%BA%E8%AE%AE%E5%8F%8D%E9%A6%88.jpg" width="150" referrerpolicy="no-referrer"></p><hr><p><strong>內容來源：<strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.deepin.org%2Fzh%2Fdeepin-meetup-2024-chengdu%2F" target="_blank">deepin 社區</a></strong></strong></p><p><strong>瞭解 deepin ：<strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.deepin.org%2Findex%2Fzh" target="_blank">deepin - 基於 Linux 的開源國產操作系統</a></strong></strong></p><p><strong>瞭解 deepin Meetup：<strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.deepin.org%2Fzh%2Fdeepin-meetup%2F" target="_blank">deepin Meetup – 深度科技社區</a></strong></strong></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 12 Mar 2024 06:11:54 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/282699</guid>
            <link>https://www.oschina.net/news/282699</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[30k Stars、代碼每天更新 —— RSSHub 作者卻稱項目正在面臨崩潰]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>RSSHub 是一個開源、簡單易用、易於擴展的 RSS 生成器，可以給任何奇奇怪怪的內容生成 RSS 訂閲源。RSSHub 藉助於開源社區的力量快速發展中，目前已適配數百家網站的上千項內容。</p><p><img src="https://oscimg.oschina.net/oscnet/up-07bcaa58b6beb554c005c8bf4b60d220b89.png" referrerpolicy="no-referrer"></p><p><em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FDIYgod%2FRSSHub" target="_blank">https://github.com/DIYgod/RSSHub</a></u></em></p><p>RSSHub 作者今日發帖稱項目正在面臨崩潰：</p><blockquote><p>我有一個維護了六年的開源項目 —— RSSHub ，它正在面臨崩潰</p><p>表面上，它有接近 30k Stars 、900 多 Contributors 、每月 3 億多次請求和數不清的用戶、每月幾十刀的贊助、有源源不斷的 issue 和 pr 、代碼幾乎每天更新，非常健康和充滿活力，但在不可見的地方，持續數年高昂的維護時間成本、每月一千多刀的服務器費用、每天重複繁瑣且逐漸積累的維護工作，都讓它在崩潰的邊緣反覆橫跳</p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdiygod.cc%2F6-year-of-rsshub" target="_blank">https://diygod.cc/6-year-of-rsshub</a></p></blockquote></div>
                                    ]]>
            </description>
            <pubDate>Tue, 12 Mar 2024 04:26:13 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/282685/6-year-of-rsshub</guid>
            <link>https://www.oschina.net/news/282685/6-year-of-rsshub</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
    </channel>
</rss>
