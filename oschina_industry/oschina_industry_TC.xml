<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[開源中國-綜合資訊]]>
        </title>
        <link>https://www.oschina.net/news/industry</link>
        <atom:link href="https://rsshub.app/oschina/news/industry" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[開源中國-綜合資訊 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Tue, 30 Jan 2024 09:42:28 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[AI 版權第一案：我用 AI 做的圖，版權歸我嗎？]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>最近，一個跟 AI 相關的案子引起了全國同行的圍觀，原因是一個百家號作者在網上寫文章時，用了一張網上的 AI 圖片當配圖，結果被圖片的生產者告侵權。這不禁讓人緊張：以後 AI 產的圖片，還能隨便用嗎？會不會侵權？</p><p>事情是這樣的——</p><p style="text-align:left">2023 年 2 月，李昀鍇使用 Stable Diffusion 模型，通過在模型上輸入數十個提示詞，設置相關迭代步數、圖片高度、提示詞引導係數以及隨機數種子等，生成了數張人像圖片。隨後，李昀鍇以 「春風送來了溫柔」 為名發佈在社交平台小紅書上。2023 年 3 月 2 日，百家號一自媒體賬號發佈的名為《三月的愛情，在桃花裏》的文章使用了李昀鍇製作的圖片。</p><p style="text-align:center"><img height="768" src="https://oscimg.oschina.net/oscnet/up-f6cf6dc908fcf7b1c685805400c6c984609.png" width="512" referrerpolicy="no-referrer"></p><p style="text-align:center"><span style="color:#999999"><em>李昀鍇用 Stable Diffusion 模型生成的圖片</em></span></p><p style="text-align:left">李昀鍇認為，對方未獲得他的許可就截掉了他在小紅書平台的署名水印進行發佈，侵犯了署名權及信息網絡傳播權，應當承擔法律責任。</p><p style="text-align:left">2023 年 5 月，李昀鍇起訴被告劉某侵害作品署名權、信息網絡傳播權糾紛一案在北京互聯網法院立案。</p><p><strong>這裏最關鍵的爭議在於，李昀鍇基於自己設定的提示詞和參數，使用 Stable Diffusion 模型製作的圖片 「春風送來了溫柔」 是否構成作品？以及構成哪一種類型的作品？</strong></p><p style="text-align:left"><strong>法院認為，原告李昀鍇使用</strong><strong>開源軟件</strong><strong> Stable Diffusion 創作的圖片由其獨立完成，體現了他的個性化表達，因此涉案圖片具備 「獨創性」 要件。涉案圖片符合作品的定義，屬於美術作品，受到著作權法的保護。最終判決李昀鍇勝訴，被告需在百家號平台公開道歉，並向原告賠償 500 元</strong>。</p><p style="text-align:left">這個案件，也成為了 AI 生成圖片相關領域著作權第一案，讓 AI 領域的從業者和使用者都提高了警惕：</p><p>原來 AI 創作的圖片也是有著作權的，那以後使用 AI 圖片還得注意授權問題了？</p><p>AI 圖片很多都是用別人的圖片「溶」出來的，相當於「二創」。這種做法放在文藝領域早被當成抄襲了，為啥它還能享有著作權呢？這是不是合理的？</p><p>我用 AI 創作的圖，總共有哪些權利和風險？權責如何劃分？</p><p>對此，我們邀請了知識產權領域的專業律師鄧超進行對談，一起聊聊究竟怎麼回事。</p><p>&nbsp;</p><span id="OSC_h1_1"></span><h1>01 AI 作品，版權並不明晰</h1><p><span style="color:#245bdb">開源中國：首先我們捋清一下概念，版權和著作權是一回事嗎？</span></p><p>&nbsp;</p><p>鄧超：是的，著作權和版權沒有區別。根據相關法律規定，著作權是指作品的作者等相關人員，依法對其已經完成的作品所享有的發表權、署名權、複製權、保護作品完整性權等。<strong>且著作權即版權。</strong></p><p>&nbsp;</p><p><span style="color:#245bdb">開源中國：OK，那在現行法律當中，個人或單位使用 </span><span style="color:#245bdb">AI</span><span style="color:#245bdb"> 生產的圖片，擁有版權嗎？</span></p><p>&nbsp;</p><p>鄧超：<strong>在現行法律當中，這塊還沒有明確規定，行業意見也不統一，需要進行個案分析。</strong></p><p>前年北京互聯網法院有一個「菲林訴百度案」，當時法院認為，機器生成的內容是沒有版權的。</p><p style="text-align:center"><img height="625" src="https://oscimg.oschina.net/oscnet/up-d4964bffd09758af1e3dbb525b78e0b065e.png" width="1421" referrerpolicy="no-referrer"></p><p>但是在深圳的「騰訊新聞案」，法院則認為，機器生成的內容有版權。</p><p style="text-align:center"><img height="687" src="https://oscimg.oschina.net/oscnet/up-9672009ee8539049d0417268a64ca6f9a30.png" width="1437" referrerpolicy="no-referrer"></p><p>一南一北，對這個問題給出了不同的答案，但是這些案子都沒有上訴，所以説現在還沒有一個統一的意見。今天這個案子裏，北京互聯網法院就認為，AI 生成的圖片是有版權的。但是，北京互聯網法院它是個基層法院，判決的效力有限，不好説能不能全國推廣。</p><p>&nbsp;</p><p><span style="color:#245bdb">開源中國：那 </span><span style="color:#245bdb">AI</span><span style="color:#245bdb"> 生成的圖片所擁有的權利很模糊啊？</span></p><p>&nbsp;</p><p>鄧超：也不能説很模糊，它有一個判斷的過程。判決也強調了，<strong>利用人工智能生成的內容是否構成作品，需要視個案情況而定，不能一概而論。</strong>在這個案子裏，這張圖片的生成涉及了上百個提示詞和參數的調整，在這種情況下，法院會認可這個創作者是付出了一定的創造性勞動的。相反，假設只是跟 AI 説「畫一幅秋天的風景畫」，那這個在我看來就不能有版權了，因為沒付出什麼符合著作權法要求的創作。</p><p>&nbsp;</p><p><span style="color:#245bdb">開源中國：可是，這些為創作而輸出的參數和設定，多少算多，又多少算少呢？</span></p><p>&nbsp;</p><p>鄧超：是的，這裏恰恰就是判斷的難點，可能在每個案子裏，每個法官的判斷都會不一樣。</p><p>&nbsp;</p><p><span style="color:#245bdb">開源中國：有律師認為，</span><span style="color:#245bdb">AI</span><span style="color:#245bdb"> 作圖跟傳統的美術創作有很大的區別，原告只輸出了提示詞，並沒有動筆去畫具體的線條，也沒有百分之百地告知 Stable Diffusion 模型怎樣去畫出具體的線條和色彩，就通過人工智能生成了圖片。</span><span style="color:#245bdb"><strong>根據《著作權法》的傳統理論，人創作的作品才受版權保護，原告李昀鍇的行為並不構成創作。</strong></span><span style="color:#245bdb">你怎麼看？</span></p><p>&nbsp;</p><p>鄧超：是的，這種反對的觀點還挺普遍。做個類比，我讓一位畫家畫一幅秋天的風景畫，但我不能在畫家畫完了之後説「我是這幅畫的作者」。這是不合理的。</p><p>還有一種反對觀點，它的邏輯是：即使我説了「畫一幅秋天的風景畫」這句話，不同的人他會畫出不一樣的東西，不能因為我説了這句指令，我就擁有了畫的著作權，這是很奇怪的。像秋天的風景這種東西，本來就是一千個人一千種畫法，即使是 AI ，不同的 AI 畫出來的也不一樣。甚至相同的 AI ，你讓它再畫一遍，都不一定畫得出來。</p><p>&nbsp;</p><p><span style="color:#245bdb">開源中國：即使是相同的參數，它也不一定會生成同樣的圖。</span></p><p>&nbsp;</p><p>鄧超：是的，沒錯。但是這個類比，只能放在人身上，放在 AI 身上就不太一樣，因為 AI 它是一個機器，不是具體的人，是沒有權利的。如果這幅圖是我讓一個人來畫的話，那著作權肯定就屬於畫畫的那個人了。但 AI 它不是人，它沒法成為作者。<strong>現階段，生成式人工智能模型不具備自由意志，無論是國內還是國外，都不支持 AI 成為法律上的主體。</strong></p><p>這也是法院在這個判決中做出的考量。目前來講，無論是認為 AI 作品應該有版權還是不應該有版權，其實都能解釋得通，因為 AI 這東西是新興的，法律比較落後，現在還沒有達成一致説這種情況應該怎麼辦？所以，法院現在判決的時候，更多是從產業或者立法目的的角度，去解釋説：這 AI 是把它保護起來比較好，還是不保護更好？</p><p>在這個案子裏面，原告為了生成這張圖片，輸入了大量的指令，調整了上百個參數，如此正向反向的一系列約束下來，才得到這張圖。這個過程，在法院看來，是有一定的獨創性的。咱們國家法律規定的獨創性很低。比如説攝影作品，攝影師等了一天安排了特定角度拍出來的圖，大家會認為有獨創性；但咱們普通人隨便拍的圖，一般來講也是有獨創性的，即使你沒調參數，也沒啥構思。所以説，<strong>獨創性，這東西的門檻就很低，不需要達到什麼專業高度就能擁有。</strong></p><p>&nbsp;</p><p><span style="color:#245bdb">開源中國：可是拍照這事兒是我們自己動手拍的，不是別人告訴我怎麼拍的。</span><span style="color:#245bdb"><strong>而且用 </strong></span><span style="color:#245bdb"><strong>AI</strong></span><span style="color:#245bdb"><strong> 的話，即使描述得再具體，它也只是文字創作，不是美術創作，</strong></span><span style="color:#245bdb">它對於創作結果是不能預見也無法控制的，這與人們之前使用畫筆、繪圖軟件去作圖有很大的不同。</span><span style="color:#245bdb"><strong>它是「文生圖」，不是「手作圖」。</strong></span></p><p>&nbsp;</p><p>鄧超：所以説，這裏其實是一個價值取向的問題，給不給版權保護都説得通。</p><p>有一種反對觀點認為，比如説「畫一幅秋天的風景」這個指令，可以擁有文字性的版權，但這個文字性的版權，不能延伸到它生成的圖片，不然以後所有的秋天風景畫都侵犯了我的版權了，因為我最先説了這句指令。</p><p><strong>不過，從歷史的角度來看，各種形式的創作，要獲得版權保護都是一個時間問題。</strong>比如説攝影技術剛誕生的時候，大家覺得攝影也不應該給版權，因為攝影出現之前，大家都是用油畫，可能得花幾十年學習，才能把風景畫得很像。結果攝影技術出來之後，不需要任何繪畫功底、也不用學幾十年，只需按一下快門，就能得到一幅比你學了十幾年畫畫還要接近真實的畫，所以大家都認為它不是藝術，不應該給版權。可是後來你看，隨着技術的發展，攝影慢慢地也成為一門藝術了。</p><p>從歷史的視角來看，每當有新的事物出現，它總會面臨一些爭議，比方説要不要給版權？但是我們可以想辦法把版權保護做得更好，在保障權利的同時適應新事物的出現。</p><p>&nbsp;</p><span id="OSC_h1_2"></span><h1>02 新情況可以參照現有法律嗎？</h1><p><span style="color:#245bdb">開源中國：現在有一種想法是將 </span><span style="color:#245bdb">AI</span><span style="color:#245bdb"> 創作類比成互聯網產品。比方説程序員在後台輸入代碼，通過計算機生成了一個 APP，生成了它的各種功能。但是代碼不屬於美術作品，誰來寫都一樣，能實現就行，同一個功能背後的代碼可能是一模一樣的。在 AI 創作中，提示詞就相當於創作的「代碼」，生成的圖片就類似於前台的 APP，那這個提示詞是不是也是誰來寫都一樣呢？還應該有版權嗎？</span></p><p>&nbsp;</p><p>鄧超：在智力創作這一塊，法律要求的門檻很低，畢加索的畫有版權，小學生的畫也一樣有，並不以智力貢獻的高低來衡量，只要是你寫的就能有版權。</p><p>所以，代碼也是可以享有版權的，像軟件著作權登記，它登記的就是這個代碼。如果你寫了一個代碼，別人抄襲你的代碼，那也是構成著作權侵權的。只不過代碼的著作權僅限於這個文字代碼本身。</p><p>最開始，把代碼當成文學小説來保護，也是有爭議的。畢竟文字它沒有任何實用的功能，但是代碼，它唯一的目的就是實現功能。但是版權法不保護功能，要想保護功能可以用專利。所以最開始把代碼視為文學小説就有這麼一個不自洽的地方。那麼法律後來就規定了，<strong>實現某個功能的唯一或者非常有限的代碼，它是不能受版權保護的。</strong>比如説，單獨寫一個「彈出提示框」，僅僅這麼一點東西，是沒法被版權保護的。<strong>但要是整個程序，比如像微信，作為一個整體來講，它就受到版權保護。</strong></p><p>要是拿音樂來類比的話，單個音節，像 do、rei、mi、fa、so 本身是沒法保護的，但是你把它編成一首曲子，那這首曲子就能受到版權保護。</p><p>&nbsp;</p><p><span style="color:#245bdb">開源中國：意思就是它得作為整體的一個作品來呈現才能算。</span></p><p>&nbsp;</p><p>鄧超：對。但是要説得呈現到啥程度，這其實並沒有一個清晰的線。比方説一首歌算，那其中一段算不算呢？這就得到具體案件裏面，進行具體分析了。</p><p>&nbsp;</p><p><span style="color:#245bdb">開源中國：人工智能的軟件是可以大規模複製的，只要</span><span style="color:#245bdb">算力</span><span style="color:#245bdb">足夠，短時間生成海量的圖片完全沒有問題。如果這都可以獲得著作權保護，對整個社會而言，會不會起不到鼓勵創新的效果？</span></p><p>&nbsp;</p><p>鄧超：是這樣，現在從實踐來講，很多圖片沒法判斷是不是 AI 生成的，除了那些手畫不好的之外，其實很難分辨。在這種情況下，<strong>咱們默認所有圖片都是有版權的就行了，不要在意它是不是 AI 生產的，這跟 AI 沒關係。</strong>咱們在用圖的時候，就兩個原則：你獨創的，或者是合法購買許可的，那就用；如果不是，那就別隨便用。不能在網上看到一個圖片就隨手拿過來，這無論是不是 AI 生產的，風險都很大。</p><p>如果説我用 AI 大模型生成的圖，跟別人生成的一樣，比方説一樣的提示詞下 AI 給我們都出了一樣的圖，那也沒關係，因為這是你獨立創作的，就可以避免法律風險，哪怕對方來起訴也不怕。</p><p>&nbsp;</p><p><span style="color:#245bdb">開源中國：就是説</span><span style="color:#245bdb"><strong>我們用同一個 </strong></span><span style="color:#245bdb"><strong>AI</strong></span><span style="color:#245bdb"><strong> 同一套提示詞生成的兩張圖，我們各自分別都有著作權，哪怕這兩張圖一模一樣？</strong></span></p><p>&nbsp;</p><p>鄧超：是的，因為咱們講的是獨創性，只要這是你獨立完成的，那就沒有問題。比如説，兩個人同時拍天安門廣場升旗的圖片，可能倆人的角度非常像，拍出來的圖片幾乎一樣，在這種情況下，各自都有著作權，沒有任何人侵權。但如果真到了法庭那個階段，你就得拿出證據證明這圖確實是我拍的，不是我扒的。像這個案子裏，被告把原告圖片水印都截掉了，那肯定是在網絡上扒的，肯定侵權。但如果被告的時候，能把原圖或提示詞都拿出來，證明確實能生成這圖，那被告侵權就不成立了。</p><p>&nbsp;</p><p><span style="color:#245bdb">開源中國：但如果要重現的話，萬一輸入同樣的提示詞，</span><span style="color:#245bdb">AI</span><span style="color:#245bdb"> 生成的圖不一樣，那不就沒法自證了？</span></p><p>&nbsp;</p><p>鄧超：理論上是這樣，但另一方面來看，這些圖片侵權的案子，判賠額都很低，這個案子判賠 500，其他案子更少，一般就幾十塊錢，風險很小。如果是自創圖片的話，雖然不一定保留有創作過程，但肯定會留痕，實在不行還能找證人出庭作證，總之肯定能查清，所以對現狀不會有什麼顛覆性的影響。</p><p>&nbsp;</p><span id="OSC_h1_3"></span><h1>03 AI 創作，風險大大的有</h1><p><span style="color:#245bdb">開源中國：説到獨創性，</span><span style="color:#245bdb"><strong>目前很多的 </strong></span><span style="color:#245bdb"><strong>AI</strong></span><span style="color:#245bdb"><strong> 圖片，都是用別人現有的圖片「溶」出來的，這樣也能算獨創性嗎？這不算抄襲嗎？</strong></span></p><p>&nbsp;</p><p>鄧超：當前剛好有一個案子：2023 年 12 月 27 日，《紐約時報》起訴微軟和 OpenAI，宣稱報社數百萬篇文章被用作 AI 的訓練數據，這些數據的投餵到底是屬於合理使用還是版權侵權，現在也沒有定論，可以密切關注一下。</p><blockquote><p>「合理使用原則」是指，雖然你的行為嚴格來説算侵權，但你的行為是一種可以接受的借用，用來促進創造性的表達。例如，學者可以在自己的作品中引用摘錄他人內容；作者可以出版改編圖書；普通人可以截取電影片段做影評。換句話説，如果對版權限制過死，文明的創造力將可能停滯。</p><p>科技公司長期利用這一原則來規避版權爭議。2013 年，谷歌因為複製數百萬冊圖書並在線上傳書裏的片段，遭到作家協會的起訴，法官基於合理使用原則，裁決谷歌這一行為合法，因為它為公眾創建了可搜索的索引，創造了公共價值。在大模型時代，合理使用原則仍可能發揮關鍵作用。支持 AI 不侵權的人認為，<strong>大模型生成內容的過程，跟人類創作相差無幾——當你嘗試畫一幅畫或拍一支視頻，你的腦海裏也會有你看過的畫或電影。人類的創作在前人的基礎上進步，大模型也是如此。</strong></p></blockquote><p><strong>現實總是領先法律一步：現實裏出現問題了，法律再進行迴應，現在剛好卡在了沒達成一致意見的時候。</strong></p><p><strong>從本質上來講，著作權法、</strong><strong>知識產權</strong><strong>法的目的都是為了促進社會的繁榮。</strong>像遠古時代，沒有什麼知識產品，宋代印刷術出現之前，大家都是用手抄本，但大家都認為這是好事，可以防止文獻失傳。印刷術出現之後，才慢慢有了著作權。立法者認為，對作品作者給予一定保護，可以激發其他人創作出更多的作品來。現實也的確是這樣，發達國家都有着非常完善的知識沉澱。所以本質來講，還是看怎麼選擇更能促進產業和整個社會的發展。</p><p>&nbsp;</p><p><span style="color:#245bdb">開源中國：説到促進創作，這裏我要講一下，</span><span style="color:#245bdb"><strong>在美術界，相似度達到 10% 就屬於抄襲了，但是 </strong></span><span style="color:#245bdb"><strong>AI</strong></span><span style="color:#245bdb"><strong> 現在是在不聲明的情況下抄襲，並且不以任何代價使用，這不就跟促進創作的初衷剛好相反了？</strong></span><span style="color:#245bdb">如果一做出來就會被抄襲，那不正好打擊了人們創作的積極性，擠壓人的創作空間嗎？</span></p><p>&nbsp;</p><p>鄧超：對，是這樣。<strong>任何一個東西，政策的影響都是兩方面的，</strong>你説的是負面的一方。但從正面來講，以前創作圖片，需要美工先學十年美術，美工畫一幅圖要畫一天。但現在，任何一個沒有學過美術的人，也可以創作出一幅畫了。從這方面來講，生產力肯定是大大提高了，AI 一天生成的圖就能頂 100 個美工的創作。當然，最後肯定還需要微調，但這生產率已經翻倍了。</p><p>假設現在一個公司需要 100 張圖，如果找美工，成本是十萬塊錢；但找一個 AI 的話，可能就 1000 塊錢，加上後期人工修改可能只需一萬。從公司的角度來講，它的成本就降低了，變得更有競爭力了，但背後可能就有十個美工失業了。可是從另外一個角度來講，可能又會有十個 AI 相關的就業崗位增加。</p><p>所以 AI 這個東西，它就像蝴蝶效應一樣，一個因素改變帶來的社會變化非常複雜，有人受益，就會有人受損，所以這裏很難預測，也不是我一個人能想明白的事。</p><p>&nbsp;</p><p><span style="color:#245bdb">開源中國：在風險這塊，舉個例子：假設我用 </span><span style="color:#245bdb">AI</span><span style="color:#245bdb"> 做圖的時候，只輸了文字</span><span style="color:#245bdb">指令</span><span style="color:#245bdb">，但 AI 在訓練的時候被餵了有版權的圖片，所以</span><span style="color:#245bdb"><strong>產出給我的圖片也侵權了，那是我負責還是 AI 公司負責？</strong></span></p><p>&nbsp;</p><p>鄧超：按照咱們討論的這個案子來講，肯定是你負責，因為 <strong>AI</strong><strong> 它只是一個工具，就跟畫筆或者照相機一樣，最後出問題可能還是得人來負責。</strong>除了我們剛才説的「紐約時報訴 OpenAI 案」，因為 OpenAI 是在訓練的時候使用了紐約時報的內容，所以要 OpenAI 負責。但是現在 OpenAI 已經把產品軟件提供出來了，你用這個 AI 軟件生成的圖片，如果侵權的話，（雖然現在還沒有案例），AI 工具它大概率是沒有責任的，責任在你。</p><p>&nbsp;</p><p><span style="color:#245bdb">開源中國：可是我本意沒有想要侵權任何人，也不是我讓這個 </span><span style="color:#245bdb">AI</span><span style="color:#245bdb"> 去抄襲別人的，甚至我都不知道別人作品的存在，是 AI 公司訓練的時候餵了有版權的圖導致的生成作品侵權，這種情況我是沒法控制的，也需要我來負責嗎？</span></p><p>&nbsp;</p><p>鄧超：確實，你問的這三個問題，是 AI 時代最棘手的三個問題，現在都沒有人有答案：</p><p><strong>第一，</strong><strong>大模型</strong><strong>使用海量數據來進行訓練，這種行為到底是侵權還是合理使用？</strong></p><p><strong>第二，</strong><strong>AI</strong><strong> 生成的作品到底有沒有版權？（今天討論的這個案子裏北京互聯網法院已經初步給出了意見）</strong></p><p><strong>第三，用 </strong><strong>AI</strong><strong> 生成的作品侵權了究竟誰來承擔責任？</strong></p><p>這三個問題現在沒人能有答案，我剛才説的，只是我個人的觀點。</p><p>&nbsp;</p><p><span style="color:#245bdb">開源中國：那意思就是説，有好處的話，是使用者獲得，如果是風險的話，也是使用者承擔。那 </span><span style="color:#245bdb">AI</span><span style="color:#245bdb"> 公司它豈不是隻負責賺錢不承擔風險？</span></p><p>&nbsp;</p><p>鄧超：簡單來説是這樣，但具體的還得結合具體案情來講。</p><p>企業的風險就是我們説的第一個問題：用別人的內容來訓練 AI 模型，屬不屬於合理使用？這時候的政策是很敏感的。假設這算合理使用，企業風險很小，那一定程度上會促進 AI 產業的發展，因為企業沒啥後顧之憂了；但如果讓企業承擔很大的責任，那一些剛發展起來的小公司搞不好會因為法律訴訟破產，這樣就阻礙了行業發展。法律也好，判決也好，肯定都是要考慮產業發展的。</p><p>&nbsp;</p><p><span style="color:#245bdb">開源中國：但是也不能光攬好處，把風險甩給用戶去跟原作者扯皮吧？</span></p><p>&nbsp;</p><p>鄧超：對，但是有人受益，肯定就有人受損，這個不太可能雙贏，就看你價值取向更偏向誰。比如產業早期的時候，可能傾向於促進產業發展；等產業發展成熟了，公司壯大了，還一點責任都不承擔就不太好了。不同階段，產業政策不一樣，法律方面的話，至少在我看來，裁判者也好，立法者也好，都是需要平衡的。</p><p>&nbsp;</p><p><span style="color:#245bdb">開源中國：伴隨着人工智能、大語言模型的發展，</span><span style="color:#245bdb">AI</span><span style="color:#245bdb"> 創作這種生產方式，還可能會觸及哪些法律問題？</span></p><p>&nbsp;</p><p>鄧超：除了上面講到的三點，還有就是<strong>可能會侵犯別人的肖像權</strong>，比方説生成的人像跟別人長得一樣，可能就會侵犯肖像權，這也屬於第三點中侵權的一種形式吧。</p><p>&nbsp;</p><p><span style="color:#245bdb">開源中國：法律屆是怎麼看待 </span><span style="color:#245bdb">AI</span><span style="color:#245bdb"> 創作這一新的生產模式的？接下來會不會出台相關的法律法規呢？</span></p><p>&nbsp;</p><p>鄧超：按照過往的歷史經驗來看，不會這麼早出台法律。以往像互聯網之類的新事物，法律界都會先讓子彈飛一會兒，先觀察一陣，等到時機成熟了，再出台相關法律法規。另外，咱們現在的知識產權法的框架，足以解決目前跟 AI 相關的一些問題，還沒有必要單獨針對 AI 立一個法。可能等時機成熟了，會完善法律下面的一些解釋或規定吧。</p><hr><p>對此，各位怎麼看？你認為 AI 作品應該有版權嗎？我們評論區見吧~</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>本期嘉賓：</strong>鄧超 | 律師（微信號：dengchao）</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="560" src="https://oscimg.oschina.net/oscnet/up-0fa35e5b407c4ce45828bd4c6e0c8078989.png" width="400" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">具有理學學士和法學博士學位，有着深厚的法學理論基礎；在知識產權行業從業十餘年，有着豐富的實踐經驗。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">長期專注於科技和媒體領域的知識產權前沿問題的研究和實踐，代表客戶處理相關的訴訟和非訴法律事務。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">在進入律師事務所之前，曾就職於世界 500 強公司的法務部以及國內頂尖的知識產權事務所，為眾多跨國公司、國內上市公司等提供知識產權法律服務。</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 30 Jan 2024 08:00:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/6852546/blog/10992795</guid>
            <link>https://my.oschina.net/u/6852546/blog/10992795</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[重磅！AutoMQ 品牌全新升級]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>2024 年伊始，</p><p>AutoMQ 作為一家專業的消息隊列和流存儲軟件服務供應商，</p><p>正式發佈全新的 logo 和官網與大家見面！</p><p>一直以來，</p><p>我們致力於引領消息和流存儲走向雲原生時代！</p><p>希望通過這次品牌升級，</p><p>不斷創新，為大家提供更先進的產品和服務！</p><p><strong>LOGO 升級</strong></p><p><img alt="" src="https://image.automq.com/%E5%AE%98%E7%BD%91/20231214-171408.png" referrerpolicy="no-referrer"></p><p>新 logo 以"M"字母為核心設計元素，融合"A"字母，不僅象徵着 AutoMQ 的名字，更代表了我們對核心業務和理念的堅持。AutoMQ 正是以雲原生技術理念，對消息隊列和流存儲領域進行深刻創新，致力於通過自動伸縮、自動運維和自動優化的技術，為客戶兌現雲的普惠價值。</p><p>我們的品牌形象以流暢的線條和波浪效果為特徵，象徵着 AutoMQ 助力企業駕馭規模日益龐大的數據流，確保數據傳輸的高效和穩定。在視覺上，全新品牌選擇了充滿未來感的科技紫作為主題色彩，它不僅代表了我們追求技術卓越的決心，也反映了我們以產品為驅動，不斷前行的發展理念。</p><p><strong>官網升級</strong></p><p><img alt="" src="https://image.automq.com/%E5%AE%98%E7%BD%91/%E5%AE%98%E7%BD%91%E6%88%AA%E5%9B%BE.jpeg" referrerpolicy="no-referrer"></p><p>新官網鏈接：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.automq.com" target="_blank">https://www.automq.com</a></p><p>新官網堅持技術開發者友好的設計理念，以可量化的數字結論，從<strong>成本、穩定性、彈性和兼容性</strong>等方面闡述了 AutoMQ 帶來的技術優勢和客戶價值。<br> 新官網全新設計了<strong>博客、文檔中心、產品、定價詳情頁面</strong>，幫助開發者快速瞭解 AutoMQ 的產品功能和參考資料。<br> 最後，值得一提的是官網的構建過程也使用了 Webflow 低代碼設計開發平台。整個開發過程無需前端工程師介入，由設計師直接完成設計上線，並且可以做到隨時快速迭代。</p><p>歡迎關注我們，學習更多技術乾貨！同時，也誠邀各位開源愛好者持續關注我們社區，點亮小星星🌟，跟我們一起構建雲原生消息中間件！</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 30 Jan 2024 07:06:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276906</guid>
            <link>https://www.oschina.net/news/276906</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Wok-Server —— 輕量級 Nodejs 後端框架]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="margin-left:0px; margin-right:0px; text-align:left">Wok-Server 是一個簡潔易用的 Nodejs 後端框架，使用 Typescript 開發，有完整的類型約束和定義，註釋詳細，文檔齊全，支持國際化。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">主要功能：配置，日誌，國際化，校驗，緩存，MVC，mysql，mongodb ，週期任務 。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/tai/wok-server/blob/master/documentation/zh-cn/index.md">查看文檔</a></p><h2 style="margin-left:0; margin-right:0; text-align:left">優點</h2><ul><li>學習成本較低，函數式為主，少量面向對象，未使用代理和裝飾器等增強技術</li><li>功能簡單，使用方便，保持克制，不引入太多特性</li><li>輕量封裝，最大限度兼容已有生態，支持集成第三方 http 相關的庫來處理請求</li><li>支持國際化，自帶多種語言的支持，國際化內容支持擴展</li><li>有完整的類型約束和定義，結合 IDE 的代碼補全功能，開發效率高</li><li>註釋詳細，文檔就在代碼中，方法和參數都有詳細説明，可在 IDE 的輔助下方便查看</li></ul><h2 style="margin-left:0; margin-right:0; text-align:left">Hello world</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">安裝：</p><div style="text-align:left"><div><pre><span>npm i wok-server --save</span></pre><div style="text-align:center">&nbsp;</div></div></div><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">入口文件：</p><div style="text-align:left"><div><pre><span><strong style="color:#000000">import</strong><span>{</span><span>startWebServer</span><span>}</span><strong style="color:#000000">from</strong><span>'</span><span style="color:#dd1144">wok-server</span><span>'</span></span><span><span>startWebServer</span><span>({</span></span><span><span style="color:#008080">routers</span><span>:</span><span>{</span></span><span><span>'</span><span style="color:#dd1144">/</span><span>'</span><span>:</span><strong style="color:#000000">async</strong><span>exchange</span><span>=&gt;</span><span>exchange</span><span>.</span><span>respondText</span><span>(</span><span>'</span><span style="color:#dd1144">Hello world !</span><span>'</span><span>)</span></span><span><span>}</span></span><span><span>}).</span><strong style="color:#000000">catch</strong><span>(</span><span>e</span><span>=&gt;</span><span>{</span></span><span><span>console</span><span>.</span><span>error</span><span>(</span><span>'</span><span style="color:#dd1144">Start server failed</span><span>'</span><span>,</span><span>e</span><span>)</span></span><span><span>})</span></span></pre><div style="text-align:center">&nbsp;</div></div></div><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">上面的代碼啓動了 web 服務，訪問路徑<span>&nbsp;</span><code>http://localhost:8080</code><span>&nbsp;</span>將輸出文本 「Hello world !」。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">相關的設置可以通過環境變量來修改，查看<a href="https://gitee.com/tai/wok-server/blob/master/documentation/zh-cn/index.md">完整文檔</a>瞭解細節。</p></div>
                                                                ]]>
            </description>
            <pubDate>Tue, 30 Jan 2024 06:37:29 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/p/wok-server</guid>
            <link>https://www.oschina.net/p/wok-server</link>
        </item>
        <item>
            <title>
                <![CDATA[Jina AI 開源中英和英德雙語 8K 向量模型]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">在 Jina Embeddings 英語向量模型突破百萬下載後，Jina AI <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FT-2EB1LfZKhueidIGW1x0w" target="_blank">宣佈</a>又正式開源了兩款雙語向量模型：中英雙語（Chinese-English）和英德雙語（English-German）向量模型，這也是全球首次推出支持 8K 雙語文本的開源向量模型。</span></p><h4><span style="color:#000000"><strong>技術亮點</strong></span></h4><p><span style="color:#000000"><strong>8K 輸入：長文本處理更得心應手</strong></span></p><p><span style="color:#000000">在 RAG 應用裏，文本就像被切成了多個塊，通過 Embedding 模型變成向量，然後存進數據庫。當你搜索時，系統會把這些文本塊的向量和你的搜索詞比對，找到最匹配的文本。</span></p><p><span style="color:#000000">傳統模型最多隻能處理 512 Token 的文本，面對更長文本時，就力不從心，尤其是預測的時候。</span></p><p><span style="color:#000000">但 Jina Embeddings v2 能處理高達 8k 的輸入，能夠實現從實體、句子、段落到整個篇章的多粒度向量表示。實際應用的時候，可以將這些不同層次的向量結合起來，實現更為精準的匹配。此外，也支持按語義切割，獲得更佳的搜索效果。</span></p><blockquote><p><span style="color:#000000">8K token，也就是説一整版人民日報的內容可以壓縮成一個向量！</span></p></blockquote><p><span style="color:#000000"><strong>技術創新：JinaBert 架構</strong></span></p><p><span style="color:#000000">Jina Embeddings 系列模型均基於 Jina AI 自研的 JinaBert 架構，這是首次將 ALiBi 應用到編碼器上，該架構專為長文本任務優化，直接在 Attention 層處理位置信息，讓模型更準確地捕捉詞語間的關係。就算是超長文本，也能輕鬆應對。</span></p><p><span style="color:#000000">這一技術創新讓模型在處理長文本時更加強大，也為 RAG 應用帶來了更多可能性。無論是解讀法律文件、研究醫學文獻、還是文學分析，Jina Embeddings 系列模型都表現出色，任務的準確率和效率都大大提升。</span></p><p><span style="color:#000000"><strong>雙語支持：無縫跨語言交互</strong></span></p><p><span style="color:#000000">雙語模型能把中文（或德文）和英文映射到同一個向量空間。即使是不同語言，只要含義相近，它們在向量空間裏就很接近。</span></p><p><span style="color:#000000">儘管很多模型也聲稱支持多種語言，但由於英語在互聯網上的主導地位，以及訓練階段大量使用機器翻譯文本，這些模型往往對某些人羣、主題或話題存在偏見，其影響會在下游任務中進一步放大。Jina AI 則專注於優化 2 種語言的向量表徵，嚴格把關訓練數據，力求把偏見降到最低，並確保性能超越那些支持多語言的大型模型。</span></p><p><span style="color:#000000">用 Jina Embeddings，不管是在 RAG 聊天機器人裏，還是給文本分類、做摘要、分析情感，都能把不同語言的文本當作同一種語言來處理，讓多語言應用的構建變得無比絲滑。用中文搜中文資料，或者中文搜英文、英文搜中文，都能得到又準又順的結果。Jina Embeddings 助力您打造和全球用戶無障礙溝通的新時代！</span></p><p><span style="color:#000000"><strong>MTEB 排行榜：性能領先</strong></span></p><p><span style="color:#000000">Jina Embeddings v2 系列模型在 MTEB 排行榜上，在文本分類、檢索、重排、摘要等任務上均有優勢。並且輸出和 OpenAI 完全一致，是 OpenAI ada 002 模型的理想替代開源解決方案。</span></p><p><span style="color:#000000">jina-embeddings-v2 的雙語模型以 322MB 的輕巧體積（包含 1.61 億參數），輸出維度為 768，能夠在普通計算機硬件上高效運行，無需依賴 GPU，極大地提升了其實用性和便捷性。</span></p><p><span style="color:#000000">最近，在 Standford HAI 發佈的 LoCo 性能測試中，Jina Embeddings 同樣名列前茅。</span></p><p><img height="221" src="https://oscimg.oschina.net/oscnet/up-5db7acf49ccda5e5a0aba0d4098ee18b6b6.png" width="500" referrerpolicy="no-referrer"></p><p><img height="135" src="https://oscimg.oschina.net/oscnet/up-789c9393a0fb12fa9b322e8af83f1b0e6c0.png" width="500" referrerpolicy="no-referrer"></p><p><span style="color:#000000"><span style="background-color:#ffffff">Jina</span> AI 方面表示，未來將持續擴展多語言 8k 向量模型家族，支持更多語言。</span></p><ul><li><span style="color:#000000">中英雙語向量模型：</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhuggingface.co%2Fjinaai%2Fchinese-english-embeddings" target="_blank">https://huggingface.co/jinaai/chinese-english-embeddings</a></li><li><span style="color:#000000">英德雙語向量模型：</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhuggingface.co%2Fjinaai%2Fenglish-german-embeddings" target="_blank">https://huggingface.co/jinaai/english-german-embeddings</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Tue, 30 Jan 2024 06:27:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276902</guid>
            <link>https://www.oschina.net/news/276902</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Milk-V Vega: 全球首款 RISC-V 萬兆開源交換機正式發售]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>MilkV 於去年 8 月亮相了「全球首款開源萬兆 RISC-V 網絡交換機 Milk-V Vega」。時隔數月，該產品現已上架官方淘寶店開售，定價 799 元。</p><p><img src="https://oscimg.oschina.net/oscnet/up-dc8f8d1b6ca91d1342e4484e8e267513a9c.jpg" referrerpolicy="no-referrer"></p><p>據介紹，Milk-V Vega 是 Milk-V 面向新一代網絡架構開發的一款小體積、高密度盒式開源萬兆網絡交換機，為用戶提供寬帶、語音、視頻、監控等多業務統一承載平台，多網融合覆蓋全業務；搭載國產 RISC-V 高可靠網絡交換芯片，幫助企業與用戶大幅簡化網絡架構，降低能耗成本與運維成本；可廣泛應用於數據中心、園區、大中型企業網絡、酒店、科研教學等場景。 &nbsp;</p><p>Milk-V Vega 支持完備的二層網絡協議處理功能，包括 L2 橋接，L2 組播和風暴抑制等；支持基於流、端口、協議、子網的 VLAN 功能；支持 STP，RSTP 和 QinQ 功能；支持防 DOS 攻擊，黑白名單和協議包濾除功能；支持濾鏡，鏈路聚合，OAM 報文發送和端口保護功能；支持入口及出口的 ACL 功能，還支持同步以太網，1588 功能。</p><p>同時 Milk-V Vega 作為全球首款 RISC-V 開源萬兆交換機，為開發者提供了以下特性：</p><ul><li>基於開源 Linux 系統，方便二次開發及 DIY</li><li>開放 openSBI，u-boot，Linux kernel 源碼，提供交叉編譯工具鏈</li><li>提供 JTAG 接口，方便底層開發</li><li>提供 RS232 及 I2C 接口，方便外接其他傳感器</li><li>支持 1U 標準機櫃，每一層機櫃可安裝 2 台 Milk-V Vega</li><li>雙萬兆光口 + 4 千兆光口 + 8 千兆電口，滿足家用 Homelab 需求</li><li>支持遠程配置，提供 WEB 和 SSH 訪問</li><li>提供命令行業務配置，實現 VLAN 配置，端口鏡像，MAC 地址學習，流量控制等功能</li><li>提供接口 SDK 和 API，靈活實現業務配置</li></ul><p><img height="1922" src="https://oscimg.oschina.net/oscnet/up-18941523fbbd18a8e49875ecd1672e1a1a8.jpg" width="1080" referrerpolicy="no-referrer"></p><p><img src="https://oscimg.oschina.net/oscnet/up-553d000aeabc9e13f63432542706d102e13.jpg" referrerpolicy="no-referrer"></p><p><img src="https://oscimg.oschina.net/oscnet/up-c56ea9be1224ad7658d518aedd13b7c0dea.jpg" referrerpolicy="no-referrer"></p><p><img src="https://oscimg.oschina.net/oscnet/up-dd5e9f39bbba69c1b283082faf3484443da.jpg" referrerpolicy="no-referrer"></p><p><strong><em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FsFzKJKkRKq3q9DYPtpm2_Q" target="_blank">https://mp.weixin.qq.com/s/sFzKJKkRKq3q9DYPtpm2_Q</a></u></em></strong></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 30 Jan 2024 06:19:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276901</guid>
            <link>https://www.oschina.net/news/276901</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[npm 被濫用 —— 有人上傳了 700 多個武林外傳切片視頻]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Sonatype 安全研究團隊近日<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.sonatype.com%2Fnpm-flooded-with-748-packages-that-store-movies" target="_blank">介紹</a></u>了一起濫用 npm 的案例——他們發現託管在 npm 的 748 個軟件包實際上是視頻文件。</p><p>據介紹，這些軟件包每個大小約為 54.5MB，包名以 「wlwz」 作為前綴，並附帶了應該是代表日期的數字。時間戳顯示，這些包至少自 2023 年 12 月 4 日起就一直存在於 npm，但 GitHub 上週已經開始刪除。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-4206ec7f1e46a5d3841a266e37293bd8f7b.png" referrerpolicy="no-referrer"><img alt="" src="https://oscimg.oschina.net/oscnet/up-bccdf9a35b4ae1bd8a8920c57f87e5ceeb7.png" referrerpolicy="no-referrer"></p><p>每個包中都有以「.ts」擴展名結尾的視頻剪輯，這表明這些視頻剪輯是從 DVD 和藍光光盤中翻錄的。</p><blockquote><p>這裏的 ts 不是 TypeScript 文件，而是 transport stream 的縮寫，全稱為 「MPEG2-TS」：</p><p>MPEG2-TS 傳輸流（MPEG-2 Transport Stream；又稱 MPEG-TS、MTS、TS）是一種標準數字封裝格式,用來傳輸和存儲視頻、音頻與頻道、節目信息，應用於數字電視廣播系統，如 DVB、ATSC、ISDB[3]:118、IPTV 等。</p></blockquote><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-dd32d5c3ad016f5c5ba20f9ec67e9f04a3f.png" referrerpolicy="no-referrer"><img alt="" src="https://oscimg.oschina.net/oscnet/up-85ee088f5f36f3c27c4bb43e72b3c6271ec.png" referrerpolicy="no-referrer"></p><p>此外，某些包（例如「wlwz-2312」）在 JSON 文件中包含普通話字幕。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-37361519bbcf2b7a95d47a0a2451c0e42aa.png" referrerpolicy="no-referrer"></p><p>雖然這些視頻不會像挖礦程序、垃圾郵件包和依賴性惡意軟件那樣毒害社區，但這種把開源基礎設施當 CDN 的操作無疑是破壞了規則，也違反了供應商的服務條款，各位耗子尾汁吧。</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 30 Jan 2024 03:51:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276893/npm-flooded-with-748-packages-wlwz</guid>
            <link>https://www.oschina.net/news/276893/npm-flooded-with-748-packages-wlwz</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[開源小談，贈現代臥龍、鳳雛；創造三贏的方案！]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h3><span>前言</span></h3><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>在 </span><span><a href="https://www.oschina.net/comment/news/276508"><span>ioGame17 文檔或將強制收費</span></a></span><span>文中引起了一些討論，這些討論更多的是理念上的分歧。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start">&nbsp;</p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>文中內容簡要如下</span></p><blockquote><p style="margin-left:.8em; margin-right:0"><span>近期 ioGame 將要升級到 21 版本，提醒開發者保存好 ioGame17 的文檔。</span></p><p style="margin-left:.8em; margin-right:.8em">&nbsp;</p><p style="margin-left:0; margin-right:.8em"><span>開發者如果不打算升級到 ioGame21 的，請提前私下保存好 ioGame17 相關文檔。ioGame21 發佈後，在線文檔的內容則與新版本對應。而舊的文檔（ioGame17）將從自願付費模式轉為強制付費文檔。如果不打算支付這部分文檔費用，請私下保存一份自留使用，但不得以任何形式傳播及公開。</span></p></blockquote><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start">&nbsp;</p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>整體內容並不多，意外的是在討論區中驚現各種現代化的臥龍、鳳雛、五星評論員、如果哥、指點江山哥、慷他人之慨...等，之流。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>由於精力有限，將不對之前的文檔、舊的版本進行維護。舊的文檔如有需要，可付費獲取；如不想付費，請私下保存一份自留使用，但不得以任何形式傳播及公開。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>之所以不提供舊文檔的閲讀及舊版本的維護，是因為 ioGame 開源作者將精力放到了最新的 ioGame 版本上，並提供了與之對應版本的在線文檔閲讀（不需要登錄，沒有辣眼的廣告，可閲讀所有文檔）。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>但似乎現代化的臥龍、鳳雛、五星評論員、如果哥、指點江山哥、慷他人之慨...等，之流，想讓開源作者繼續免費提供舊文檔，並無條件的維護舊版本。（不知道讓 spring 團隊維護 1.x 版本的，會得到什麼樣的回覆）</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start">&nbsp;</p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>ioGame 開源作者在閲讀 </span><span><a href="https://www.oschina.net/comment/news/276508"><span>ioGame17 文檔或將強制收費</span></a></span><span>討論區相關的內容後，找到了能夠完美的解決這些矛盾的三贏方案。本篇內容不多，大體如下</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span>理念衝突（不同）</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>可持續性發展</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>當前開源環境</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>開源策略</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>用戶流失？不，這是三贏！</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>比較優勢</span></p></li></ul><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start">&nbsp;</p><h3><span>理念不同</span></h3><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><img height="398" src="https://oscimg.oschina.net/oscnet/up-336b076ff70f355b497e0040cf1b8a333cb.png" width="700" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start">&nbsp;</p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>當今，在制度理念上可大致分為兩種，GC 主義和資本主義。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>ioGame 源碼使用的是 AGPL 協議，之所以選擇該協議是因為，就目前來説其更符合 GC 主義；GC 主義的經濟制度類型為</span><span><strong><span>生產資料公有制</span></strong></span><span>，而資本主義則是</span><span><strong><span>生產資料私有制</span></strong></span><span>。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>使用 ioGame 是免費的，前提是要認同</span><span><strong><span>生產資料公有制</span></strong></span><span>，就是把你的產品也完全的開源出來；同時，ioGame 是允許私有的，前提是支付閉源授權費。所以，</span><span><strong><span>付費不是必須的，也不是強制性的</span></strong></span><span>，選擇權在使用者手上。</span></p><blockquote><p style="margin-left:0; margin-right:0"><span>ioGame 使用的開源策略是：兩開一免一自主。即源碼完全開放、最新文檔閲讀完全開放、使用完全免費、開發者可自主選擇按需付費。</span></p></blockquote><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start">&nbsp;</p><h3><span>為什麼需要閉源授權費</span></h3><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>注意，這裏僅指閉源授權，也就是你的產品不需要對外開源（可將生產資料私有制）；除此之外，並不會提供更多的其他服務。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>之所以需要授權費，是因為我們為產品附加了價值。《資本論》中著名的公式：商品價值 = c+v+m，即商品價值 = 不變資本+可變資本+剩餘價值。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>c+v+m 可以表示社會總產值，也可以表示某個商品的價值，或某一單位時間內生產的商品的總價值。簡單的説 c 表示的是生產資料價值，v 表示的是勞動力的價值，m 表示的是剩餘價值</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>為了易懂，這裏舉個不恰當，但意思差不多的公式。商品價值 = 你為產品迭代的勞動力 + 你的日常開銷（自身教育及小孩教育的支出、維持動者本人及家屬生存所必需的生活資料、房租房貸...等）。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>現在，關於閉源授權費這部分也説清楚了；之所以有閉源授權費，是因為我們為產品附加了價值。這裏再重複一次，使用 ioGame 是免費的，前提是要認同</span><span><strong><span>生產資料公有制</span></strong></span><span>，就是把你的產品也完全的開源出來；同時，ioGame 是允許私有的，前提是支付閉源授權費。所以，</span><span><strong><span>付費不是必須的，也不是強制性的</span></strong></span><span>，選擇權在使用者手上。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>資本主義理念的小算盤是，即希望免費使用你的產品，又希望你免費維護，同時又不想將自身的產品成果公開出來（只想生產資料私有制）。換句話説就是，又想馬兒跑，又不給馬吃草，因為這一行為很符合資本主義。這裏稱其為</span><span><strong><span>自以為聰明的資本家</span></strong></span><span>。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start">&nbsp;</p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span><strong><span>自以為聰明的資本家</span></strong></span><span>的基本特徵是：你這產品不錯、你這框架不錯、你這項目不錯，應該免費；同時，這羣傢伙還擅長慷他人之慨，真讓他們參與付出時，結局是</span><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcn.bing.com%2Fsearch%3Fq%3D%25E7%259C%259F%25E6%259C%2589%25E4%25B8%2580%25E5%25A4%25B4%25E7%2589%259B%26qs%3Dn%26form%3DQBRE%26sp%3D-1%26lq%3D0%26pq%3D%26sc%3D0-0%26sk%3D%26cvid%3D9BE3D9C25BDF45FA8341F1641F100333%26ghsh%3D0%26ghacc%3D0%26ghpl%3D" target="_blank"><span>真有一頭牛</span></a></span><span>。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start">&nbsp;</p><h3><span>可持續性發展</span></h3><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>經濟基礎是一切可持續性發展的前提，開源亦是如此。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>如大家所熟悉的 apache 組織、srping 等...各開源巨頭，都是有基金會或其他經濟支持的；也有一些半開源的產品會尋求一些資本的注入，其目的也是為了得到經濟支持。所以，經濟基礎是一切可持續發展的前提。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>大部分開發者認為開源軟件是完全免費的，也應當完全免費。造成這些錯覺是因為常年使用開源巨頭所提供的軟件，但又忽略了背後基金或類似基金的支持。注意，這裏説的類似基金指的是間接或直接所獲得的收入。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>資本家是恐怖的，國外的資本家們取得收益後，或多或少的會向基金會捐贈，以保持相互的良性循環。而</span><span><strong><span>自以為聰明的資本家</span></strong></span><span>們可不這麼想，因為他們並懂可持續性發展的重要性。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>這羣</span><span><strong><span>自以為聰明的資本家們</span></strong></span><span>秉持着希望免費使用你的產品，又希望你免費維護，同時又不想將自身的成果公開出來（只想生產資料私有制）。現在，我們知道使用 ioGame 是免費的了，前提是要認同</span><span><strong><span>生產資料公有制</span></strong></span><span>，就是把你的產品也完全的開源出來；當</span><span><strong><span>自以為聰明的資本家們</span></strong></span><span>知道要他們把私有資料公開時，他們就會給你上演</span><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcn.bing.com%2Fsearch%3Fq%3D%25E7%259C%259F%25E6%259C%2589%25E4%25B8%2580%25E5%25A4%25B4%25E7%2589%259B%26qs%3Dn%26form%3DQBRE%26sp%3D-1%26lq%3D0%26pq%3D%26sc%3D0-0%26sk%3D%26cvid%3D9BE3D9C25BDF45FA8341F1641F100333%26ghsh%3D0%26ghacc%3D0%26ghpl%3D" target="_blank"><span>真有一頭牛</span></a></span><span>的故事。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>到這，已經説清楚了經濟基礎是一切可持續發展的前提。同時，也區分了真正的資本家與</span><span><strong><span>自以為聰明的資本家</span></strong></span><span>。真正的資本家是恐怖的，他們懂得可持續性發展的重要性，並壯大着這些開源組織；而</span><span><strong><span>自以為聰明的資本家們</span></strong></span><span>並不懂得這些，</span><span><strong><span>滑稽</span></strong></span><span>的是他們還喜歡充當所謂的網絡俠客（並不具備事物分析能力的人，大部分的發言是臆測主觀性的）；</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start">&nbsp;</p><h3><span>開源環境</span></h3><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>經濟是發展的核心，任何強大的開源組織（開源巨頭）都離不開經濟基礎。注意，這裏説的開源組織並不是指你在 github 隨意創建一個 organization 後，放入幾個項目的那種組織。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>現在，國內有很多人想要往這方面發力，建立國產開源組織；但目前在國內很難實現，具體原因這裏就不細説了，因為這部分沒有十數萬字也講不清楚，而且大部開發者對這部分也沒啥興趣。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>目前國產開源組織也有一些，但大部分都是幾個項目勉強湊合到一起所形成的組織。若想要建立一個可持續性發展的開源組織，就目前的環境來説是不可能的。建立一個可持續性發展的開源組織的基本條件，是需要有基金會或類似基金會的支持。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>在沒有得到外部資金的支持時，任何一個開源框架想要有長遠的發展，首先需要考慮的是如何盈利。如果沒有持續資金的支持，通常很難堅持下去。你可以在 GitHub 上找到很多長時間未更新的開源項目，通常是因為最初的熱情慢慢消退，導致不再維護。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>國產項目的開源策略大部分都是採用社區版本和商業版本的方式，其本質目的也只有一個，即維持自身的可持續性發展。同時，這也是開源維護者與開源使用者的矛盾點之一，但這些是符合馬克思主義哲學三大規律的。（將來，如非洲、東南亞、西亞、中東 ...等地區的多數國家也會經歷這一階段的發展過程，但還需要數十年。）</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>現階段，國內開源土壤與環境並不理想，並且還有一羣擅長慷他人之慨的網絡俠客在添堵。但並無大礙，因為這些小卡拉並不能阻礙，也阻礙不了國產開源的發展。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start">&nbsp;</p><h3><span>ioGame 的開源策略</span></h3><blockquote><p style="margin-left:0; margin-right:0"><span>ioGame 使用的開源策略是：兩開一免一自主。即源碼完全開放、最新文檔閲讀完全開放、使用完全免費、開發者可自主選擇按需付費。</span></p></blockquote><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>源碼：源碼完全開放，沒有社區版、商業版本之説。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>文檔：最新文檔閲讀完全開放，並採用自願付費原則（不強制付費）。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>使用 ioGame 是免費的，前提是要認同</span><span><strong><span>生產資料公有制</span></strong></span><span>，就是把你的產品也完全的開源出來；同時，ioGame 是允許私有的，前提是支付閉源授權費；所以，</span><span><strong><span>付費不是必須的，也不是強制性的</span></strong></span><span>，選擇權在使用者手上。費用採用年付費制，且費用低（不會超過當年全國最低工資標準的 2 倍，並且可申請盈利後支付）。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>或許有開發者會問，國產開源項目大部分都是社區版本（免費）和商業版本（強制收費）的策略。但 ioGame 為什麼會採用源碼完全開放、文檔完全開放、使用完全免費的策略呢？</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start">&nbsp;</p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span><strong><span>源碼完全開放的原因</span></strong></span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>ioGame 推崇</span><span><strong><span>生產資料公有制。</span></strong></span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>源碼完全開放可以讓更好地服務使用者，讓使用者更快、更好地完成業務並出產品；同時，這對使用者學習框架源碼也比較友好。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>通常（中、小、新）這類公司、團隊、獨立開發者，在前期是比較缺資金的。我們知道，只有讓遊戲開發者先盈利，之後想支付費用時才無壓力（閉源自身的遊戲產品）。（注意，使用 ioGame 是完全免費的，前提是要認同</span><span><strong><span>生產資料公有制</span></strong></span><span>，就是把你的產品也完全的開源出來）</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start">&nbsp;</p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span><strong><span>最新文檔閲讀完全開放，並採用自願付費的原因</span></strong></span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>在你閲讀 ioGame 的在線文檔時，不會有辣眼的廣告，沒有登錄限制。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>ioGame 致力於提供高質量的使用文檔，在 ioGame21 中，大概有三十多萬字（不要認為文檔內容多，學習框架成本是困難的，這兩者不是對等關係；如果文檔只保留一個字，你會認為這是簡單的嗎？）。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>不誇張的説，文檔的編寫比代碼還要困難。如果文檔只服務於少部分人，那就有點可惜了。只有完全開放了文檔，才能幫助更多的遊戲團隊、獨立開發者及想進入遊戲行業的開發者。因為我們知道，只有讓開發者先盈利了，他們才更願意支付費用。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>另一個文檔閲讀完全開放的原因是，ioGame 推崇</span><span><strong><span>生產資料公有制</span></strong></span><span>（不要理解為版權免費贈送）。需要注意的是，ioGame 的文檔不是開源的，以後也不會開源。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>或許有開發者會問到，如果以後你的文檔不公開了，又或者説強制收費了怎麼辦。首先，我們的目標很明確，幫助開發者提升、快速地學習整體框架、加快遊戲產品的研發並上線盈利。其次，對基礎使用文檔收費並無興趣。再次，我們推崇</span><span><strong><span>生產資料公有制</span></strong></span><span>。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>此時開發者又會説到，xxx 一開始文檔也是公開的，等開發者開始用了，就開始收費割韭菜了，大家都被假開源騙怕了...等之類的話。這裏借用鳳凰傳奇曾毅的一句玩笑話，歌土跟我有什麼關係，我才幾個詞；同樣的，你被騙跟我有什麼關係，又不是我騙的你。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start">&nbsp;</p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>另外，要是 ioGame 對基礎使用文檔有收費的興趣，也就不會請提前讓開發者私下保存一份自留使用了。所以與其他案例是有本質區別的。</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span>首先，已經發文提前通知了。</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>其次，允許開發者私下保存一份自留使用，但不得以任何形式傳播及公開（ioGame 的文檔沒有開源，以後也不會開源，著作權歸作者所有）。</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>再次，在 ioGame21 發佈後，在線文檔對應的是當前最新版本；新的在線文檔依舊採用自願付費模式策略，與之前一樣，文檔是完全開放的（開發者可閲讀所有文檔，沒有任何限制）。</span></p></li></ul><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start">&nbsp;</p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span><strong><span>使用 ioGame 免費的原因</span></strong></span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>ioGame 推崇</span><span><strong><span>生產資料公有制。</span></strong></span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>使用 ioGame 是完全免費的，前提是要認同</span><span><strong><span>生產資料公有制</span></strong></span><span>，就是把你的產品也完全的開源出來；同時，ioGame 是允許私有的，前提是支付閉源授權費（</span><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fgd5l3b0y0h027kcv" target="_blank"><span>為什麼採用授權許可申請？</span></a></span><span>）；所以，</span><span><strong><span>付費不是必須的，也不是強制性的</span></strong></span><span>，選擇權在使用者手上</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start">&nbsp;</p><h3><span>用戶流失？不，這是三贏！</span></h3><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>或許會有開發者問，為什麼使用閉源授權的方式，這樣不是會流失用戶嗎？</span></p><blockquote><p style="margin-left:0; margin-right:0"><span>提示：開源 != 免費。即使是做慈善的組織，組織內工作的人也得吃飯。</span></p></blockquote><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start">&nbsp;</p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>純白嫖的用戶流失是一定的，但同時也會吸引更多的新用戶，因為 ioGame 有了更長遠的規劃。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>ioGama 是海納百川的，在文檔中我們推薦了很多同行業的遊戲服務器框架。因為我們知道，流失的用戶與 ioGame 的矛盾點是必然存在的，但 ioGame 對待流失用戶是友好的，我們會積極的把這部分流失的用戶推薦給競品框架。這樣</span><span><strong><span>既解決了矛盾，又創造了三贏的局面，真是太棒了</span></strong></span><span>！</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>對於用戶羣體，ioGame 自身有明確的規劃，而且也沒打算説服所有的開發者來使用 ioGame；所以，我們首先要做的就是排除對自身不適合或者説理念不相同的開發者，只有這樣才能抽出更多的時間來服務真實有效使用者；</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>注意，這裏的真實有效使用者指的是在項目中使用了 ioGame 的團隊、個人、公司...等，並不是特指購買了閉源授權的；因為使用 ioGame 是完全免費的，</span><span><strong><span>付費不是必須的，也不是強制性的</span></strong></span><span>，選擇權在使用者手上。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>最後，閉源授權的目的是為了社區的長期發展建設，通過閉源授權來營收，後將營收繼續投入到社區中，將社區壯大。規劃長久的發展，可使雙方互利，ioGame 就像一台水果採摘機器，你可以使用這台機器來採摘任何水果，在你取得收穫時，希望你能為這台機器加些能量。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start">&nbsp;</p><h3><span>完全開源不怕被參考嗎</span></h3><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>ioGame 完全開源，就不怕其他開發者參考嗎？</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start">&nbsp;</p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>不怕的，在</span><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fgd5l3b0y0h027kcv%23le5sm" target="_blank"><span>自研框架的成本分析及面臨的問題</span></a></span><span>這一小節中，已經列舉了很多案例了，這些案例都是與成本相關的。這些問題大致如下</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span>如果負責研發框架的開發人員離職後，公司如何安排？</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>如果負責研發框架的開發人員，或其他開發人員離職後，將框架帶到下個公司使用，是否等於用公司的資源幫其他公司做嫁衣？</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>或將現有公司的框架帶到下個公司去使用，會給新公司帶來風險嗎？</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>如果員工的框架是上個公司的，你如何確定沒有法律風險？</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>有完整的使用文檔嗎？如果將你當前使用的框架給到其他團隊，在沒有你的幫助下，該團隊能順利完成開發嗎？</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>打算新招一個編寫業務邏輯的人員，可以做到零學習成本嗎？</span></p></li></ul><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start">&nbsp;</p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>參考者在製作自己的框架時，也只敢參考部分，而且後續的維護成本也是恐怖的（需要付出巨大的勞動力）。看似參考的策略可以節省成本，但實際上的成本更高了。實際當中，也有很多開發者在開展這一策略，即參考 ioGame 來製作自己的框架，但其生命週期都是短暫的，最終是不了了之；</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start">&nbsp;</p><h4><span>有趣的小故事</span></h4><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>這裏説個有趣的小故事。現在，有兩個開發者分別想要研發一款遊戲，遊戲類型也大致相同，這裏將開發者稱為 A、B。 A 和 B 的目標很明確，就是快速的將遊戲開發出來並上線。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>技術選型的過程中，他們知道了 ioGame；A 、B 知道 ioGame 的源碼完全開放、最新文檔閲讀完全開放、使用完全免費；只是想將遊戲產品閉源時，則需要支付閉源授權費，但可以申請盈利後支付閉源授權費。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>現在，A 直接開始使用 ioGame 來研發遊戲產品了；而 B 則是在想，如何規避這部分閉源授權費。於是 B 就開始閲讀、參考 ioGame 相關源碼，並開始自制框架。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>數月後，B 依然把勞動力分配在自制的框架上；而 A 則早已將遊戲開發了出來。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>或許 B 早已忘記了最開始的主要目標了，這也是大多數開發者存在的行為；為了達成次要目標，而放棄或拖延主要目標。這種行為的危害是巨大的，從而導致主要目標無法完成，甚至到最後有可能自制框架都沒能完成。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>這種真實的案例每天都在上演，你會發現很多想接觸遊戲行業的開發者，即使過了數年也沒有研發出一個遊戲。因為他們忘記了最初的主要目標，如果最開始就把勞動力分配在遊戲產品上，或許早已經完成主要目標了。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>而 A 的目標與執行力更加的明確，直接使用 ioGame 來研發產品。這樣就能把所有的勞動力分配到自身遊戲產品的業務上，從而能快速的開發出遊戲。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>在這個小故事中，B 最開始只是為了規避閉源授權費，導致自身付出了更多的成本。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start">&nbsp;</p><h4><span>比較優勢</span></h4><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>上面講了一個有趣的小故事，這裏還有一些</span><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fgd5l3b0y0h027kcv%23aSk5x" target="_blank"><span>關於成本分析的其他案例</span></a></span><span>（點擊我）。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>大衞·李嘉圖在其代表作《政治經濟學及賦稅原理》中提出了比較成本貿易理論（後人稱為「</span><span><strong><span>比較優勢</span></strong></span><span>貿易理論」）。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>比較優勢可以表述為：在兩國之間，勞動生產率的差距並不是在任何產品上都是相等的。每個國家都應集中生產並出口具有比較優勢的產品，進口具有比較劣勢的產品（即「兩優相權取其重，兩劣相衡取其輕」），雙方均可節省勞動力，獲得專業化分工提高勞動生產率的好處。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>在小故事及</span><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fgd5l3b0y0h027kcv%23aSk5x" target="_blank"><span>關於成本分析的其他案例</span></a></span><span>中，本質上也是在描述成本的比較優勢。即兩個個體、兩個團隊、兩個公司 ... 等，之間的比較。兩者之間的分配策略，基本決定了後續的誰的生存幾率更大；把有趣小故事中的 A、B 替換成兩個公司、團隊之間的博弈亦是如此。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>在有趣小故事中，之所以 A 比 B 更有幾率出遊戲產品，是因為 A 把勞動力放在遊戲產品的研發上，而 B 除了需要研發產品外，還需要兼顧自研框架。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start">&nbsp;</p><h3><span>小結</span></h3><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>現在我們知道了，ioGame 源碼完全開放，沒有社區版、商業版本之説，讓使用者用得開心，用得放心。ioGame 新版在線文檔閲讀完全開放，與之前一樣，依舊採用自願付費原則的策略（不強制付費）。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>使用 ioGame 是免費的，前提是要認同</span><span><strong><span>生產資料公有制</span></strong></span><span>，就是把你的產品也完全的開源出來；同時，ioGame 是允許私有的，前提是支付閉源授權費；所以，</span><span><strong><span>付費不是必須的，也不是強制性的</span></strong></span><span>，選擇權在使用者手上。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start">&nbsp;</p><blockquote><p style="margin-left:0; margin-right:0"><span>ioGame 使用的開源策略是：兩開一免一自主。即源碼完全開放、最新文檔閲讀完全開放、使用完全免費、開發者可自主選擇按需付費。</span></p></blockquote><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start">&nbsp;</p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>當其他開發者、團隊還有糾結及時，我們的真實有效用戶早已將產品上線並運營了。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>ioGame 是無私的，能容得下所有競品框架；甚至我們還在文檔中介紹了其他的競品框架。如果 ioGame 不能很好的滿足你的需要，請別擔心，這裏還有</span><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fwwvg7z%23EH8Oc" target="_blank"><span>更多的 java 遊戲服務器框架推薦</span></a></span><span>給你。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start">&nbsp;</p><h3><span>為什麼不在之前的討論區迴應</span></h3><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>因為討論區大部分是各種現代化的臥龍、鳳雛。滑稽的是他們還喜歡充當所謂的網絡俠客（一些不具備事物分析能力的人，大部分的發言是臆測主觀性的）；</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>注意，這裏不是指討論區內的所有人，只是部分人符合我心中現代化臥龍、鳳雛的形象。所以，個人並不會把時間浪費在現代化臥龍、鳳雛身上；因為他們的目的不是辯，而是擺弄。不信？後續在其他版塊中，你還會看見這羣傢伙在不同的討論區中，週而復始的操弄着帶有臆測主觀性的庸俗觀點來發言。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span><strong><span>現代化的臥龍、鳳雛，或者説自以為聰明的資本家</span></strong></span><span>的基本特徵是：你這產品不錯、你這框架不錯、你這項目不錯，應該免費；同時，這羣傢伙還擅長慷他人之慨，真讓他們參與付出時，結局是</span><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcn.bing.com%2Fsearch%3Fq%3D%25E7%259C%259F%25E6%259C%2589%25E4%25B8%2580%25E5%25A4%25B4%25E7%2589%259B%26qs%3Dn%26form%3DQBRE%26sp%3D-1%26lq%3D0%26pq%3D%26sc%3D0-0%26sk%3D%26cvid%3D9BE3D9C25BDF45FA8341F1641F100333%26ghsh%3D0%26ghacc%3D0%26ghpl%3D" target="_blank"><span>真有一頭牛</span></a></span><span>。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>我們只會把時間投入到真實有效使用者的身上，加強文檔的質量，耐心回答與 ioGame 相關的 </span><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgame-town%2FioGame%2Fissues" target="_blank"><span>issues</span></a></span><span> 。注意，這裏的真實有效使用者指的是在項目中使用了 ioGame 的團隊、個人、公司...等，並不是特指購買了閉源授權的；因為使用 ioGame 是完全免費的，</span><span><strong><span>付費不是必須的，也不是強制性的</span></strong></span><span>，選擇權在使用者手上。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start">&nbsp;</p><h3><span>規避與防範 ioGame</span></h3><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fgd5l3b0y0h027kcv%23a7jj5" target="_blank"><span>如何規避閉源授權費用？</span></a></span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>通常來講你要防範的並不是 ioGame，因為 ioGame 每年需要支付的閉源授權的費用很少，而且可以申請盈利後支付。在成本分析中已經説明，如果你選擇自研框架，自研一個月的成本夠使用 ioGame 幾十年了（而且需要自己編寫、維護文檔）。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>更多的時候，取得授權是為了保護自身產品源代碼泄露時可以得到法律的保護，所以如果你不擔心這點，我想你應該知道如何做了。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start">&nbsp;</p><h3><span>ioGame 的使命</span></h3><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>改變行業現狀，降低使用難度。讓遊戲開發領域的</span><span><strong><span>生產資料公有制</span></strong></span><span>。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start">&nbsp;</p><h3><span>ioGame 是什麼？</span></h3><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>ioGame 學習成本非常低，可以説是</span><span><strong><span>零學習成本</span></strong></span><span>，即使沒有遊戲編程（網絡編程）經驗，也能輕鬆上手。開發者只需掌握普通的 java 方法或 webMVC 相關知識，就能用框架開發業務，通常在 10 分鐘內就能掌握。框架不要求開發者改變編碼習慣，而是自身適應開發者的需求。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>同時，ioGame 也</span><span><strong><span>適用於網絡遊戲服務器、物聯網、內部系統及各種需要長連接的場景</span></strong></span><span>；框架採用無鎖異步化、事件驅動的架構設計；輕量級，無需依賴任何第三方中間件或數據庫就能支持集羣、分佈式。通過 ioGame 可以很容易的搭建出一個集羣無中心節點、集羣自動化、多進程的分佈式遊戲服務器。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>ioGame 是一個非常適合網絡遊戲開發的框架。可以讓你輕鬆地創建高性能、低延遲、易擴展的遊戲服務器，並且節省時間和資源。如果你想要快速地開發出令人驚豔的網絡遊戲，請不要猶豫，立即選擇 ioGame 吧！框架屏蔽了很多複雜且重複性的工作，並可為項目中的功能模塊結構、開發流程等進行</span><span><strong><span>清晰的組織定義</span></strong></span><span>，減少了後續的項目維護成本。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start">&nbsp;</p><h3><span>ioGame 的使用趨勢</span></h3><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>關注 ioGame 的遊戲服務器開發者持續增多，</span><span><strong><span>2022-09 ~ 至今</span></strong></span><span>各月的統計數據；</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>這裏的統計信息是關於開發者關注 ioGame 框架相關的，從統計數據中可以看出，由於 ioGame 上手簡單，功能強大等優點，得到了眾多開發者的關注。如果你想知道 ioGame 有沒有人在使用，可以先到這裏看下統計數據、開發者的評價與討論。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start">&nbsp;</p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fgpxk93%23TwVa8" target="_blank">https://www.yuque.com/iohao/game/gpxk93#TwVa8</a></span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start">&nbsp;</p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>這裏展示了每月的統計數據，統計數據來源於語雀後台，這些數據都是</span><span><strong><span>真實的、客觀存在的、活的</span></strong></span><span>。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span><strong><span>因為成本的原因，某寶某多還沒有出現能提供這種服務的商家，所以這樣的統計數據也更具真實性。</span></strong></span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>通過統計數據，我們可以看到每天會有很多開發者在訪問 ioGame 的在線文檔，並且這些統計數據不是來源於口嗨的，也不是主觀創造的。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>所以，還在猶豫要不要使用 ioGame 的開發者們，更應該討論的是「為什麼這些開發者會選擇使用 ioGame」，而不是 ioGame 有沒有人在使用的問題。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao" target="_blank"><span>點擊我，到語雀後台查看 ioGame 的數據</span></a></span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start">&nbsp;</p><h3><span>ioGame 版本命名規則</span></h3><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>從發佈到中央倉庫開始，ioGame 就有定義了自身的</span><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fwsgmba%23zagb5" target="_blank"><span>版本規則</span></a></span><span>。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start">&nbsp;</p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span><strong><span>ioGame17 版本命名規則 x.y.z</span></strong></span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span>x 表示當前使用的 JDK 版本</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>y 表示 ioGame API 變更版本 （但基本上不會變動，常規下是變動 x 才會變動 API）</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>z 表示 ioGame 新特性、新功能、新模塊、bugfix 相關</span></p></li></ul><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start">&nbsp;</p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>ioGame 的 x 會跟着最新的 JDK LTS 版本來走的，目的是確保 ioGame 的 API 不會發生很大的變化。為了保持新活力與接受新鮮事物， ioGame 基本會用上最新的 JDK LTS; 也就是説，下一個 x 將會是 21;</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>x 一般延後 1~2 個季度，給開發者一個緩衝。即下一個 JDK LTS 出來後，那麼 ioGame 的 x 會在 1~2 個季度後跟上。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start">&nbsp;</p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>從 ioGame21 開始，版本命名規則將使用 x.y 的格式，其他照舊</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span>x 表示當前使用的 JDK LTS 版本</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>y 表示 ioGame 新特性、新功能、新模塊、bugfix 相關</span></p></li></ul><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start">&nbsp;</p><h3><span>最後</span></h3><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>由於整篇內容較長，閲讀到最後難免會忘記前面的。所以，在最後這裏，來個二次小結與介紹。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>ioGame 推崇</span><span><strong><span>生產資料公有制。</span></strong></span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>ioGame 使用的開源策略是：兩開一免一自主。即源碼完全開放、最新文檔閲讀完全開放、使用完全免費、開發者可自主選擇按需付費。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>使用 ioGame 是完全免費的，前提是要認同</span><span><strong><span>生產資料公有制</span></strong></span><span>，就是把你的產品也完全的開源出來；同時，ioGame 是允許私有的，前提是支付閉源授權費（</span><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fgd5l3b0y0h027kcv" target="_blank"><span>為什麼採用授權許可申請？</span></a></span><span>）；所以，</span><span><strong><span>付費不是必須的，也不是強制性的</span></strong></span><span>，選擇權在使用者手上。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start">&nbsp;</p><div><hr></div><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>或許會有開發者問，為什麼使用閉源授權的方式，這樣不是會流失用戶嗎？</span></p><blockquote><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>提示：開源 != 免費。即使是做慈善的組織，組織內工作的人也得吃飯。</span></p></blockquote><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start">&nbsp;</p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>純白嫖的用戶流失是一定的，但同時也會吸引更多的新用戶，因為 ioGame 有了更長遠的規劃。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>ioGama 是海納百川的，在文檔中我們推薦了很多同行業的遊戲服務器框架。因為我們知道，流失的用戶與 ioGame 的矛盾點是必然存在的，但 ioGame 對待流失用戶是友好的，我們會積極的把這部分流失的用戶推薦給競品框架。這樣</span><span><strong><span>既解決了矛盾，又創造了三贏的局面，真是太棒了</span></strong></span><span>！</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>對於用戶羣體，ioGame 自身有明確的規劃，而且也沒打算説服所有的開發者來使用 ioGame；所以，我們首先要做的就是排除對自身不適合或者説理念不相同的開發者，只有這樣才能抽出更多的時間來服務真實有效使用者；</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>注意，這裏的真實有效使用者指的是在項目中使用了 ioGame 的團隊、個人、公司...等，並不是特指購買了閉源授權的；因為使用 ioGame 是完全免費的，</span><span><strong><span>付費不是必須的，也不是強制性的</span></strong></span><span>，選擇權在使用者手上。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start">&nbsp;</p><div><hr></div><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>真正的資本家是恐怖的，國外的資本家們取得收益後，或多或少的會向基金會捐贈，以保持相互的良性循環。而</span><span><strong><span>自以為聰明的資本家</span></strong></span><span>們可不這麼想，因為他們並懂可持續性發展的重要性。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>這羣</span><span><strong><span>自以為聰明的資本家們</span></strong></span><span>秉持着希望免費使用你的產品，又希望你免費維護，同時又不想將自身的成果公開出來（只想生產資料私有制）。現在，我們知道使用 ioGame 是免費的了，前提是要認同</span><span><strong><span>生產資料公有制</span></strong></span><span>，就是把你的產品也完全的開源出來；當</span><span><strong><span>自以為聰明的資本家們</span></strong></span><span>知道要他們把私有資料公開時，他們就會給你上演</span><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcn.bing.com%2Fsearch%3Fq%3D%25E7%259C%259F%25E6%259C%2589%25E4%25B8%2580%25E5%25A4%25B4%25E7%2589%259B%26qs%3Dn%26form%3DQBRE%26sp%3D-1%26lq%3D0%26pq%3D%26sc%3D0-0%26sk%3D%26cvid%3D9BE3D9C25BDF45FA8341F1641F100333%26ghsh%3D0%26ghacc%3D0%26ghpl%3D" target="_blank"><span>真有一頭牛</span></a></span><span>的故事。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span><strong><span>現代化的臥龍、鳳雛，或者説自以為聰明的資本家</span></strong></span><span>的基本特徵是：你這產品不錯、你這框架不錯、你這項目不錯，應該免費；同時，這羣傢伙還擅長慷他人之慨，真讓他們參與付出時，結局是</span><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcn.bing.com%2Fsearch%3Fq%3D%25E7%259C%259F%25E6%259C%2589%25E4%25B8%2580%25E5%25A4%25B4%25E7%2589%259B%26qs%3Dn%26form%3DQBRE%26sp%3D-1%26lq%3D0%26pq%3D%26sc%3D0-0%26sk%3D%26cvid%3D9BE3D9C25BDF45FA8341F1641F100333%26ghsh%3D0%26ghacc%3D0%26ghpl%3D" target="_blank"><span>真有一頭牛</span></a></span><span>。</span></p><p>&nbsp;</p><div><hr></div><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>最後，我們的目的是為了幫助（中、小、新）這類公司、團隊、獨立開發者，通過雙方的比較優勢來互補。我們知道，只有讓遊戲開發者先盈利，之後想支付費用時才無壓力（閉源自身的遊戲產品）。（注意，使用 ioGame 是完全免費的，前提是要認同</span><span><strong><span>生產資料公有制</span></strong></span><span>，就是把你的產品也完全的開源出來）</span></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 30 Jan 2024 03:37:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276890</guid>
            <link>https://www.oschina.net/news/276890</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[RHEL 源碼訪問限制影響 CentOS SIG]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">去年 6 月，紅帽發佈公告<a href="https://www.oschina.net/news/246331/red-hat-centos-stream-sources">宣佈</a>了一個限制 Red Hat Enterprise Linux (RHEL)&nbsp; 源代碼訪問性的政策。時至今日，這一變更似乎無意中給 CentOS Integration&nbsp;Special&nbsp;Interest&nbsp;Group (&nbsp;(SIG) 小組帶來了一些麻煩。</span></p><p><span style="color:#000000">Kmods SIG 旨在為 CentOS Stream 和 Red Hat Enterprise Linux 維護額外內核模塊。CentOS 博客上週<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.centos.org%2F2024%2F01%2Fjanuary-2024-news%2F" target="_blank">發佈</a>了 Kmods SIG 的最新狀態，其中一項值得注意的內容是：</span></p><blockquote><p>由於 Red Hat 發佈 Red Hat Enterprise Linux 源代碼的方式發生了變化，Kmods SIG 目前由於法律原因無法為 Red Hat Enterprise Linux 製作軟件包。我們正與 Red Hat 合作解決這一問題，並希望能儘快再次為企業 Linux 提供軟件包。</p></blockquote><p><img height="304" src="https://oscimg.oschina.net/oscnet/up-05fcfbc3e8c1312848b6f99d2e074ce2339.png" width="500" referrerpolicy="no-referrer"></p><p>此外，CentOS Hyperscale SIG 在 2023 年第四季度報告中<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.centos.org%2F2024%2F01%2Fcentos-hyperscale-sig-quarterly-report-for-2023q4%2F" target="_blank">表示</a>：</p><blockquote><p><span style="color:#020008">Hyperscale SIG 的最新版本是 CentOS Stream 9 的內核 6.7.1-0.hs1。這個新內核現在基於上游 Fedora 版本內核，而不是 CentOS/RHEL 內核樹。在可預見的未來，Hyperscale SIG 將跟蹤 Fedora 內核以構建併發布到 CentOS 中。內核仍然採用類似 RHEL 的配置構建，專門針對 CentOS Hyperscale 進行 modulo 更改。</span></p><p><span style="color:#020008">隨着&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.centos.org%2F2023%2F04%2Fend-dates-are-coming-for-centos-stream-8-and-centos-linux-7%2F" target="_blank">EOL</a>&nbsp;<span style="color:#020008">的臨近，CentOS Stream 8 的內核已停止使用，並且沒有計劃圍繞 CentOS Stream 8 進行進一步的工作。</span></p></blockquote><p><span style="background-color:#ffffff; color:#333333">Hyperscalers SIG 由 Facebook 和 Twitter 等科技公司倡議<a href="https://www.oschina.net/news/126467/centos-hyperscale-sig">成立</a>，致力於在大型基礎架構上（如 Facebook、Twitter 和雲服務提供商等其他 "hyperscaler" 組織）啓用 CentOS Stream 部署，並促進軟件包和工具上的協作。&nbsp;</span>&nbsp;</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 30 Jan 2024 03:24:39 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276886/centos-rhel-kmods-sig</guid>
            <link>https://www.oschina.net/news/276886/centos-rhel-kmods-sig</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[工信部等七部門聯合發文：發展下一代操作系統、推廣開源技術、構建開源生態體系]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>工業和信息化部、教育部、科技部、交通運輸部、文化和旅遊部、國務院國資委、中國科學院等七部門近日聯合印發<em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.gov.cn%2Fzhengce%2Fzhengceku%2F202401%2Fcontent_6929021.htm" target="_blank">《<u>關於推動未來產業創新發展的實施意見</u>》</a></em>。</p><p><img src="https://oscimg.oschina.net/oscnet/up-77dbe7b14ccd70bf436e9b444bcb994dcdd.png" referrerpolicy="no-referrer"></p><p>其中提到的重點任務包括：</p><ul><li><strong>（一）全面佈局未來產業</strong></li><li><strong>（二）加快技術創新和產業化</strong></li><li><strong>（三）打造標誌性產品</strong></li><li><strong>（四）壯大產業主體</strong></li><li><strong>（五）豐富應用場景</strong></li><li><strong>（六）優化產業支撐體系</strong></li></ul><p>在「打造標誌性產品」章節，意見提出要<strong>做優信息服務產品</strong>：</p><p><strong>發展下一代操作系統，構築安全可靠的數字底座。推廣開源技術，建設開源社區，構建開源生態體系</strong>。探索以區塊鏈為核心技術、以數據為關鍵要素，構建下一代互聯網創新應用和數字化生態。面向新一代移動信息網絡、類腦智能等加快軟件產品研發，鼓勵新產品示範應用，激發信息服務潛能。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-d3c823b6016f70ba58bb95c2ae81c353cce.png" referrerpolicy="no-referrer"></p><p>原文：<em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FN9YYFWtcrNfAX1TYqY7G1A" target="_blank">https://mp.weixin.qq.com/s/N9YYFWtcrNfAX1TYqY7G1A</a></u></em></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 30 Jan 2024 03:01:50 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276882</guid>
            <link>https://www.oschina.net/news/276882</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[CodeIgniter 社區 2023 年終總結]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>隨着我們步入 2024 年，我想借此機會總結過去一年 CodeIgniter 社區所取得的成果，並對所有貢獻者的努力表示感謝。CodeIgniter 作為一個社區驅動的項目，每一位貢獻者都在促進着我們的發展。</p><p>因為所有工作都是由志願者完成的，所以貢獻者的參與度會因他們的空餘時間、工作以及其他生活瑣事而有所變動。今年，<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fforum.codeigniter.com%2Fmember.php%3Faction%3Dprofile%26uid%3D90" target="_blank">@kenjis</a> 的突出貢獻讓人印象深刻，他們在主要的代碼倉庫和論壇上的辛勤耕耘讓整個項目有了質的飛躍。</p><p>以下是一些數據，以側面展示了我們在 2023 年的活躍程度：</p><ul><li>我們發佈了 15 個核心框架版本</li><li>我們的身份驗證系統 Shield 發佈了 6 個測試版，並在年底前推出了 1.0 的正式版</li><li>推出了兩個新的庫 - Tasks 和 Queue，雖然還處於 Alpha 階段，但正朝着第一個正式版穩步前進。他們本身是 CodeIgniter 構建出色軟件所需的最後幾個關鍵模塊，所以我對他們極其期待。</li><li>我們為 Settings、Shield、Tasks 和 Queue 庫新建了文檔站點</li></ul><p>如果只看我們的核心框架，我們在過去一年內取得的成果包括：</p><ul><li>每月平均新增兩名貢獻者</li><li>全年共新增了 26 名新貢獻者</li><li>每月平均有 11 名活躍的貢獻者</li><li>新貢獻者佔提交者的 18%</li><li>每月平均有 203 次代碼提交</li><li>平均每名提交者每月提交代碼 18.45 次</li><li>提交者總數增加了 26 人（從 350 增加到 376）</li><li>平均每月合併 54 個 PR 請求</li></ul><p>這是一份令人印象深刻的成績單。除此之外，我們還在進行持續的翻譯工作，修復了一些嚴重的安全漏洞，以及將代碼質量管理工作做得更加精細，確保無論貢獻者數量如何增長，我們都能保持高質量的代碼輸出。</p><p>我要向今年所有做出貢獻的人表示感謝，無論是貢獻代碼、編寫文檔還是在論壇上幫助他人。正是你們讓這個項目保持了活力。</p><p><strong>那麼，CodeIgniter 未來會有什麼新變化呢？</strong></p><p>我們正在開發一款全新的<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Flonnieezell%2Fforum-example" target="_blank">論壇軟件</a>，這款軟件完全基於 CodeIgniter 構建。這款軟件的目標是提供一種符合現代審美，而又為這個社區定製的論壇體驗，展示 CodeIgniter 的可能性。它將使用 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftailwindcss.com%2F" target="_blank">TailwindCSS</a>、<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Falpinejs.dev%2F" target="_blank">AlpineJS</a> 和 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhtmx.org%2F" target="_blank">HTMX</a>，以提供快速、現代的用戶體驗。目前我們的團隊還在積極開發階段，如果你願意加入，我們會很歡迎。</p><p>雖然我不能代表所有團隊成員的觀點，但是在我看來，我想嘗試讓 CodeIgniter 的使用更加簡化。這是一個宏大主題，但我相信我們很快能就此取得一些進展。</p><p>首先，我們打算簡化代碼庫的貢獻過程，讓任何有意願的人都能從自己的電腦開始更便捷地參與進來。雖然現在還沒有確定的消息可以公佈，但我們希望這樣，更多的開發者會願意加入我們。</p><p>接下來，我們關注用戶指南。我們在嘗試不丟失任何內容的情況下，將其<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcodeigniter4%2Fdocs-update" target="_blank">轉換為 Markdown 格式</a>，並取得了非常好的進展。我們希望 Markdown 語言的易用性，能讓更多的貢獻者參與其中。這樣，我們的文檔就能保持統一的格式和風格，讓項目頁面顯得更加整齊一致。實際上，我們的庫已經實現了這一點，核心框架是最後一個待處理的問題。</p><p>我還有其它的一些想法，比如關於 API 和本地化的問題，但是這需要在我完成其它項目後，看我能投入多少時間來做。</p><p>所以，我要再次感謝我們的核心團隊、論壇的版主和所有為這個社區做出貢獻的你們。期待今年我們能有更好的發展！</p><hr><p>原文作者: kilishan<br> 原文鏈接: <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fforum.codeigniter.com%2Fshowthread.php%3Ftid%3D89075" target="_blank">https://forum.codeigniter.com/showthread.php?tid=89075</a></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 30 Jan 2024 02:44:50 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276880/codeigniter-2023</guid>
            <link>https://www.oschina.net/news/276880/codeigniter-2023</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[上海 AI 實驗室發佈新一代書生·視覺大模型]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>上海人工智能實驗室（上海 AI 實驗室）<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FbdfAJRqOF9tUk8Vy9KC_XQ" target="_blank">宣佈</a>聯合清華大學、香港中文大學、商湯科技等機構開源新一代書生·視覺大模型（InternVL）。</p><p>新一代「書生·視覺基礎」模型的視覺編碼器參數量達 60 億 (InternVL-6B)，首次提出了對比-生成融合的漸進式對齊技術，實現了在互聯網級別數據上視覺大模型與語言大模型的精細對齊。</p><p>InternVL-6B 不僅能處理複雜圖片中細微的視覺信息並完成圖生文任務，還可以識別和解讀複雜頁面中的信息，甚至解決其中的數理問題。</p><p>目前，InternVL 全系列模型、代碼均已開源，並提供 Demo 試用。</p><ul><li>開源鏈接：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenGVLab%2FInternVL" target="_blank">https://github.com/OpenGVLab/InternVL</a></li><li>論文鏈接：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Farxiv.org%2Fabs%2F2312.14238" target="_blank">https://arxiv.org/abs/2312.14238</a></li><li>試用 Demo：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Finternvl.opengvlab.com" target="_blank">https://internvl.opengvlab.com</a></li></ul><p>InternVL-6B 具備純視覺感知、圖文檢索、圖文生成、圖文多模態生成和對話等關鍵能力。谷歌 ViT-22B 是目前被公認為最強大的專注視覺的基礎模型（非開源）。InternVL 開源模型以不到 1/3 的參數量，在純視覺任務（如 ImageNet、ADE20K 等）和圖生文任務（如 NoCaps、MS COCO 等）上逼近或超過谷歌 ViT-22B。</p><p><img alt="" height="435" src="https://oscimg.oschina.net/oscnet/up-f94fea8f6165e351f12396a1f5f9a393f7c.png" width="500" referrerpolicy="no-referrer"></p><p>在視覺感知、圖文檢索、圖文多模態生成和對話等 30 餘個視覺基準測試上，InternVL-6B 取得了開源社區的最優性能，超過了 Meta、谷歌、微軟、LAION 等機構的同類開源模型。</p><p><img alt="" height="669" src="https://oscimg.oschina.net/oscnet/up-5d454993d286bc955eddcb7f961048b6440.png" width="300" referrerpolicy="no-referrer"></p><p>在 TinyLVLM 、MMBench 等多模態大模型評測上，InternVL-6B 取得了優秀的性能。其中，在 MMBench-dev 上，InternVL-6B 達到 76.6，雖然綜合能力仍有待提高，但個別性能超越了 GPT-4V（75.1）和 Gemini（75.2）。</p><p>InternVL-6B 具備強大的視覺表徵和理解能力，尤其表現在面對信息複雜的圖片時，模型仍可對細節進行精準捕捉，不僅可在圖片或實際場景的複雜畫面中捕捉細微的視覺信息，還可從複雜排版的圖文頁面中整合、解讀信息，或辨別偽裝外觀的物體。</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 30 Jan 2024 02:35:50 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276879</guid>
            <link>https://www.oschina.net/news/276879</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[🔥🔥 mac 中使用 rz sz 新姿勢 🔥🔥]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h2>macOS 使用 zmodem ( rz / sz ) 的新方法，支持 iTerm2 等任意有本地 shell 的終端</h2><h3><strong>1、本地安裝<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ftrzsz%2Ftrzsz-ssh" target="_blank">trzsz-ssh ( tssh )</a></strong></h3><ul><li>開源地址：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ftrzsz%2Ftrzsz-ssh" target="_blank">https://<span>github.com/trzsz/trzsz-ssh</span></a></li><li><span>Gitee 地址：</span><a href="https://gitee.com/trzsz/tssh">https://gitee.com/trzsz/tssh</a></li></ul><div><pre><code class="language-text">brew install trzsz-ssh</code></pre></div><h3>2、本地安裝 lrzsz</h3><div><pre><code class="language-text">brew install lrzsz</code></pre></div><h3>3、配置 ~/.ssh/config</h3><div><pre><code class="language-text">Host *
    #!! EnableZmodem Yes</code></pre></div><h3>4、使用<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ftrzsz%2Ftrzsz-ssh" target="_blank">trzsz-ssh ( tssh )</a><span>&nbsp;</span>登錄服務器，用法與 ssh 完全一致：</h3><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ftrzsz%2Ftrzsz-ssh" target="_blank">trzsz-ssh ( tssh )</a><span>&nbsp;</span>額外支持的功能詳見文檔：<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftrzsz.github.io%2Fcn%2Fssh" target="_blank">https://<span>trzsz.github.io/cn/ssh</span></a></li></ul><div><pre><code class="language-text">tssh xxx</code></pre></div><h3>5、服務器上安裝有 lrzsz ，就可以正常使用 rz / sz 了，不再贅述：</h3><div><pre><code class="language-text">rz # 上傳文件
sz xxx # 下載文件</code></pre></div><h3>6、如果服務器可以安裝 trzsz ( trz / tsz )，則可以解鎖更多功能：</h3><ul><li>詳見文檔：<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftrzsz.github.io%2Fcn%2F" target="_blank">https://<span>trzsz.github.io/cn/</span></a></li></ul><div><pre><code class="language-text">trz # 等價於 rz
tsz xxx # 等價於 sz xxx</code></pre></div></div>
                                    ]]>
            </description>
            <pubDate>Tue, 30 Jan 2024 02:32:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276878</guid>
            <link>https://www.oschina.net/news/276878</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Meta 發佈全新代碼生成大模型 Code Llama 70B]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Meta 今天發佈了全新的代碼生成大模型 Code Llama 70B。據稱其 HumanEval 評分達到 67.8，達到 GPT-4 水準，是目前評分最高的開源大模型。</p><blockquote><p><img src="https://oscimg.oschina.net/oscnet/up-aa28c3b26f59dc762db43f6ffcd3091ca27.png" referrerpolicy="no-referrer"><em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftwitter.com%2FAIatMeta%2Fstatus%2F1752013879532782075" target="_blank">https://twitter.com/AIatMeta/status/1752013879532782075</a></u></em></p></blockquote><p>Code Llama 70B 是此前 <strong><u><a href="https://www.oschina.net/news/255350/meta-code-llama">Code Llama </a></u></strong>的升級版本，包括三個模型：</p><ul><li>CodeLlama-70B</li><li>CodeLlama-70B-Python</li><li>CodeLlama-70B-Instruct</li></ul><p><strong>開源地址：<em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhuggingface.co%2Fcodellama%2FCodeLlama-70b-hf" target="_blank">https://huggingface.co/codellama/CodeLlama-70b-hf</a></u></em></strong></p><p>Code Llama 以 Llama 2 為基礎，可以幫助開發者根據提示創建代碼，並調試人工編寫的代碼。</p><p>Meta 表示，Code Llama 70B 性能更高，可以處理更多的內容，更好地幫助開發者處理編程時遇到的問題。此外，Code Llama 70B 採用了與 Llama 2 和 Code Llama 相同的 License，可用於研究和商業用途。</p><p>扎克伯格<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.facebook.com%2Fzuck%2Fposts%2Fpfbid0KccyDFLszKeHkWVssrcSJYnigb1VYfsLuExTjxVPKWzDpXgmd9FYMfZ1hcWpyf3Zl" target="_blank">表示</a></u>：「編寫代碼能力對於 AI 模型更嚴謹、更合理地處理其他領域的信息也非常重要。我為這裏取得的進展感到自豪，並期待着將這些進展納入 Llama 3 和未來的模型中。」</p><blockquote><p><img src="https://oscimg.oschina.net/oscnet/up-02e72478e15d47689552ffc6fd15bb220af.png" referrerpolicy="no-referrer"></p></blockquote></div>
                                    ]]>
            </description>
            <pubDate>Tue, 30 Jan 2024 02:27:50 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276877/meta-code-llama-70b</guid>
            <link>https://www.oschina.net/news/276877/meta-code-llama-70b</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[RWKV-5-World 7B 模型開源——最環保、最節能的 AI 模型]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>2024 年 1 月 28 日，RWKV 開源基金會<strong><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2F4hTFA2CMcInhGLZTqa_H4g" target="_blank">宣佈</a></u></strong>開源 RWKV-5-World 7B 模型。</p><p>據介紹，「RWKV-5-World 7B」是 RWKV 第五代架構 7B 參數大模型，也是 RWKV 迄今為止多語言性能最強的開源大模型。根據性能評測數據顯示，在 100% attention-free 和只訓練 1.1T tokens 的前提下，RWKV-5 7B 模型的多語言性能超過 Mistral，英文性能看齊 LlaMa2。</p><h3><strong>RWKV 模型介紹</strong></h3><p>RWKV 是一種創新的深度學習網絡架構，它將 Transformer 與 RNN 各自的優點相結合，同時實現高度並行化訓練與高效推理，時間複雜度為線性複雜度，在長序列推理場景下具有優於 Transformer 的性能潛力。</p><p>RWKV-v5 架構模型能力指標接近 Llama2，但推理成本降低 2~10 倍，訓練成本降低 2~3 倍。</p><p><img src="https://oscimg.oschina.net/oscnet/up-8b124ce111f66fc29349dc3550fae0e963d.png" referrerpolicy="no-referrer"></p><p>如上圖所示，對比 RWKV-v4 架構，在使用相同訓練數據集的情況下，RWKV-v5 的多語言能力大幅提升，整體提升約 4%。而對比其他同為 7B 參數的模型，RWKV-5 7B 的多語言表現亦處於領先地位。</p><p><img src="https://oscimg.oschina.net/oscnet/up-b4a1c53e39044930c57fdeb0099eda5ea3d.png" referrerpolicy="no-referrer"></p><p>官方介紹稱，在相同參數大小（7B）的模型獨立基準測試中，RWKV 是世界上最環保、最節能的人工智能模型/架構（以每個 token 輸出為基礎）：</p><p><img src="https://oscimg.oschina.net/oscnet/up-3d734a934d678a080b7392fed400e7c9c3a.png" referrerpolicy="no-referrer"><br> 測試地址：<em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fml.energy%2Fleaderboard%2F" target="_blank">https://ml.energy/leaderboard/</a></u></em></p><p>RWKV 架構的能源效率源自線性 Transformer 架構的 2~10 倍計算效率與 Transformer 架構的二次縮放。隨着模型規模的擴大，RWKV 架構的節能特性會越發明顯。</p><p><img src="https://oscimg.oschina.net/oscnet/up-38b5e2a74f34b88918058aa8e911bf3c62b.png" referrerpolicy="no-referrer"></p><h3><strong>下載&amp;試玩 RWKV-5-World 7B</strong></h3><p><strong>RWKV-5-World 7B 模型在線 Demo：</strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhuggingface.co%2Fspaces%2FBlinkDL%2FRWKV-Gradio-2" target="_blank">https://huggingface.co/spaces/BlinkDL/RWKV-Gradio-2</a></p><p><strong>RWKV-5-World 7B 模型下載地址：</strong></p><ul><li><p><strong>Hugging Face</strong>:<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhuggingface.co%2FBlinkDL%2Frwkv-5-world%2Fblob%2Fmain%2FRWKV-5-World-7B-v2-20240128-ctx4096.pth" target="_blank">https://huggingface.co/BlinkDL/rwkv-5-world/blob/main/RWKV-5-World-7B-v2-20240128-ctx4096.pth</a></p></li><li><p><strong>wisemodel</strong>:<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwisemodel.cn%2Fmodels%2Frwkv4fun%2FRWKV-5-World-7B-v2%2Ffile" target="_blank">https://wisemodel.cn/models/rwkv4fun/RWKV-5-World-7B-v2/file</a></p></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Tue, 30 Jan 2024 02:08:50 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276876/rwkv-5-world-7b-opensource</guid>
            <link>https://www.oschina.net/news/276876/rwkv-5-world-7b-opensource</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[騰訊 APIJSON 插件 apijson-mongodb 開源，支持文檔數據庫 MongoDB]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><img height="1570" src="https://oscimg.oschina.net/oscnet/up-bdaf900bde612e78f2a7ac5ec7f7dda180c.png" width="2202" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">騰訊 APIJSON 是一種專為 API 而生的 JSON 網絡傳輸協議，以及，基於這套協議實現的 ORM 庫。<br><strong>為各種增刪改查提供了完全自動化的萬能 API，零代碼實時滿足千變萬化的各種新增和變更需求。</strong><br> 能大幅降低開發和溝通成本，簡化開發流程，縮短開發週期。適閤中小型前後端分離的項目。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>自 2016 年開源 7 年來發展迅速，目前 16K+ Star 位居 400W Java 開源項目前 100。</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>國內，騰訊、華為、阿里巴巴、字節跳動、美團、拼多多、百度、京東、網易、快手、圓通，等 和<br> 國外 Google, Apple, Microsoft, Amazon, Tesla, Meta(FB), Paypal 等數百個知名大廠員工 Star，<br> 也有，騰訊、華為、字節跳動、Microsoft、Zoom、知乎，等 工程師/專家/架構師，提了 PR/Issue，<br> 還被，騰訊、華為、百度、SHEIN、快手、中興、傳音、圓通、美圖，等各大知名廠商用於各類項目。</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="1352" src="https://oscimg.oschina.net/oscnet/up-05507add1ab73979181e2a721832b2ef017.png" width="1850" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="1344" src="https://oscimg.oschina.net/oscnet/up-b0118180bc641918130cef0f4dee2bf1ca1.png" width="1634" referrerpolicy="no-referrer"></p><p>&nbsp;</p><h1>apijson-mongodb<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjitpack.io%2F%23APIJSON%2Fapijson-mongodb" target="_blank"><img alt="" src="https://camo.githubusercontent.com/f9608d575b9afc54743bb783cab0dd73e97b3b37a696f11e0494caa137b72f24/68747470733a2f2f6a69747061636b2e696f2f762f4150494a534f4e2f6170696a736f6e2d6d6f6e676f64622e737667" referrerpolicy="no-referrer"></a></h1><p style="color:#1f2328; text-align:start">騰訊<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FTencent%2FAPIJSON" target="_blank">APIJSON</a><span>&nbsp;</span>的 MongoDB 數據庫插件，可通過 Maven, Gradle 等遠程依賴。</p><p style="color:#1f2328; text-align:start"><img height="709" src="https://oscimg.oschina.net/oscnet/up-7e4aaaf91ea988480d31e94d5def25b75de.png" width="1280" referrerpolicy="no-referrer"></p><h2>添加依賴</h2><h4>1. 在 pom.xml 中添加 JitPack 倉庫</h4><div><pre>&lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">repositories</span>&gt;
&lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">repository</span>&gt;
    &lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">id</span>&gt;jitpack.io&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">id</span>&gt;
    &lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">url</span>&gt;https://jitpack.io&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">url</span>&gt;
&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">repository</span>&gt;
&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">repositories</span>&gt;
</pre></div><h4>2. 在 pom.xml 中添加 apijson-mongodb 依賴</h4><div><pre>&lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">dependency</span>&gt;
    &lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">groupId</span>&gt;com.github.APIJSON&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">groupId</span>&gt;
    &lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">artifactId</span>&gt;apijson-mongodb&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">artifactId</span>&gt;
    &lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">version</span>&gt;LATEST&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">version</span>&gt;
&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">dependency</span>&gt;

</pre></div><h3>使用</h3><p style="color:#1f2328; text-align:start">在你項目繼承 AbstractSQLExecutor 的子類重寫方法 getValue<br> Override getValue in your SQLExecutor extends AbstractSQLExecutor</p><div><pre><span style="color:var(--color-prettylights-syntax-constant)">@</span><span style="color:var(--color-prettylights-syntax-constant)">Override</span><span style="color:var(--color-prettylights-syntax-keyword)">protected</span><span style="color:var(--color-prettylights-syntax-storage-modifier-import)">Object</span><span>getValue</span>(<span style="color:var(--color-prettylights-syntax-storage-modifier-import)">SQLConfig</span>&lt;<span style="color:var(--color-prettylights-syntax-storage-modifier-import)">Long</span>&gt; <span>config</span>, <span style="color:var(--color-prettylights-syntax-storage-modifier-import)">ResultSet</span><span>rs</span>, <span style="color:var(--color-prettylights-syntax-storage-modifier-import)">ResultSetMetaData</span><span>rsmd</span>, <span style="color:var(--color-prettylights-syntax-storage-modifier-import)">int</span><span>tablePosition</span>, <span style="color:var(--color-prettylights-syntax-storage-modifier-import)">JSONObject</span><span>table</span>, <span style="color:var(--color-prettylights-syntax-storage-modifier-import)">int</span><span>columnIndex</span>, <span style="color:var(--color-prettylights-syntax-storage-modifier-import)">String</span><span>lable</span>, <span style="color:var(--color-prettylights-syntax-storage-modifier-import)">Map</span>&lt;<span style="color:var(--color-prettylights-syntax-storage-modifier-import)">String</span>, <span style="color:var(--color-prettylights-syntax-storage-modifier-import)">JSONObject</span>&gt; <span>childMap</span>) <span style="color:var(--color-prettylights-syntax-keyword)">throws</span><span>Exception</span> {
            <span style="color:var(--color-prettylights-syntax-storage-modifier-import)">Object</span><span>v</span> = <span style="color:var(--color-prettylights-syntax-entity)">super</span>.<span style="color:var(--color-prettylights-syntax-entity)">getValue</span>(<span>config</span>, <span>rs</span>, <span>rsmd</span>, <span>tablePosition</span>, <span>table</span>, <span>columnIndex</span>, <span>lable</span>, <span>childMap</span>);
            <span style="color:var(--color-prettylights-syntax-keyword)">return</span><span style="color:var(--color-prettylights-syntax-storage-modifier-import)">MongoUtil</span>.<span style="color:var(--color-prettylights-syntax-entity)">getValue</span>(<span>v</span>);
        }</pre><div><br> &nbsp;
 </div></div><p style="color:#1f2328; text-align:start">有問題可以去 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FTencent%2FAPIJSON" target="_blank">Tencent/APIJSON</a> 提 issue<br> &nbsp;</p><h4>創作不易，右上角點亮 ⭐Star 支持/收藏下吧，謝謝 ^_^</h4><p style="color:#1f2328; text-align:start"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FAPIJSON%2Fapijson-mongodb" target="_blank">https://github.com/APIJSON/apijson-mongodb</a></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 30 Jan 2024 01:54:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276875</guid>
            <link>https://www.oschina.net/news/276875</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[openKylin 2.0 揭祕 | 新一代不可變系統的設計與實現]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span style="background-color:#ffffff">在<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg2MDc5MDU1OQ%3D%3D%26mid%3D2247494992%26idx%3D1%26sn%3D996588c684d59a85aea52eb371570323%26chksm%3Dce23a720f9542e36dbaba5c747475834862a800a0843c5ab55f562b1ff15f8d0364ad4690f5b%26scene%3D21%23wechat_redirect" target="_blank">之前文章</a>中，我們向大家揭祕了什麼是不可變系統以及不可變系統相較於傳統操作系統具有哪些優勢。今天我們繼續向大家深入揭祕 openKylin 不可變系統的特性具體是如何設計和實現的！</span></p><p style="text-align:center"><img alt="" height="410" src="https://oscimg.oschina.net/oscnet/up-ba9965c58fe2a7a291437acb42d33cd74c1.png" width="940" referrerpolicy="no-referrer"></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span style="background-color:#ffffff"><span>UpdateManager SIG 基於 OSTree 技術為原生 openKylin 操作系統設計並實現了不可變操作系統特性，同時，為儘可能保障在安裝、啓動、UI 界面和用戶操作等方面與傳統操作系統保持一致，還在</span>文件系統結構<span>、安裝方式、啓動流程、版本控制方式和版本存儲庫等特性方面進行了針對 OSTree 技術特點的設計改造。具體如下：</span></span></p><p>&nbsp;</p><p>0<span>1</span><strong>文件系統結構</strong></p><p style="margin-left:0; margin-right:0; text-align:justify"><span style="background-color:#ffffff">openKylin 不可變系統的目錄結構與傳統 Linux 發行版相比有一些不同，主要體現在採用 OSTree 管理文件系統版本、強調不可變系統的特性以及將用戶程序和數據都視為不可變的。這些設計使得其在系統穩定性和可靠性方面有所提升。具體實現如下：</span></p><p style="margin-left:0; margin-right:0; text-align:justify"><strong><span style="background-color:#ffffff">➢&nbsp;/usr</span></strong></p><p style="margin-left:0; margin-right:0; text-align:justify"><span style="background-color:#ffffff">&nbsp;/usr 及其下面的所有內容都是隻讀的。</span></p><ul><li><p style="margin-left:0; margin-right:0; text-align:justify"><span style="background-color:#ffffff">/usr</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span style="background-color:#ffffff">/bin&nbsp;→&nbsp;/usr/bin</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span style="background-color:#ffffff">/lib&nbsp;→&nbsp;/usr/lib</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span style="background-color:#ffffff">/lib64&nbsp;→&nbsp;/usr/lib64</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span style="background-color:#ffffff">/sbin&nbsp;→&nbsp;/usr/sbin</span></p></li></ul><p style="margin-left:0; margin-right:0; text-align:justify"><strong><span style="background-color:#ffffff">➢&nbsp;/var</span></strong></p><p style="margin-left:0; margin-right:0; text-align:justify"><span style="background-color:#ffffff"><span>系統運行時狀態的存儲位置。/var 目錄是用於存儲</span>可變數據<span>的位置，包括各種應用程序的文件、日誌、緩存和運行時數據。同時將/home 和/root 目錄，存放至 data 分區 /media -&gt; var/run/media。</span></span></p><ul><li><p style="margin-left:0; margin-right:0; text-align:justify"><span style="background-color:#ffffff">/mnt&nbsp;-&gt;&nbsp;var/mnt</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span style="background-color:#ffffff">/opt&nbsp;-&gt;&nbsp;var/opt</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span style="background-color:#ffffff">/root&nbsp;-&gt;&nbsp;data/root&nbsp;</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span style="background-color:#ffffff">/home-&gt;data/home</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span style="background-color:#ffffff">/srv&nbsp;-&gt;&nbsp;var/srv</span></p></li></ul><p style="margin-left:0; margin-right:0; text-align:justify"><strong><span style="background-color:#ffffff">➢&nbsp;/sysroot</span></strong></p><p style="margin-left:0; margin-right:0; text-align:justify"><span style="background-color:#ffffff">文件系統根目錄，類似於傳統 Linux 中的/目錄，使用/sysroot 作為其文件系統的根目錄，與傳統 Linux 發行版中的/目錄有所不同。</span></p><p style="margin-left:0; margin-right:0; text-align:justify"><strong><span style="background-color:#ffffff">➢&nbsp;/ostree</span></strong></p><p><span style="background-color:#ffffff">sysroot/ostree 目錄是基於 OSTree 技術的系統根文件系統的存儲位置，其中的 repo 目錄存儲了 OSTree 的版本控制數據庫，deploy 目錄存儲了不同版本的系統根文件系統部署。這種機制使得系統可以進行整體的不可變性管理和更新。</span></p><p>&nbsp;</p><p>0<span>2</span><strong>系統安裝</strong></p><p><span style="background-color:#ffffff">openKylin 不可變系統的安裝過程與傳統操作系統相似，在安裝時，用戶可在安裝界面勾選不可變系統安裝，即可實現不可變系統的安裝。在安裝完成後，安裝器調用 OStree CLI 實現不可變系統的初始化、&nbsp;倉庫創建、分支提交等動作。</span></p><p>&nbsp;</p><p>0<span>3</span><strong>系統啓動</strong></p><p style="margin-left:0; margin-right:0; text-align:justify"><span style="background-color:#ffffff"><span>OSTree 在/ostree 目錄下安裝部署，但最終還是要控制系統的/boot 目錄。這種方式是通過</span>Boot Loader<span>來實現的。當部署一個分支時，會生成/boot/loader/entries/ostree-1-</span></span></p><p><span style="background-color:#ffffff"><span>openkylin.conf 的配置文件，該配置文件中將包含一個內核參數和一個</span><span>initrd</span><span><span>參數，允許 initramfs 找到指定的部署。最後 OStree 會更新/boot/grub/grub.</span>cfg 文件<span>，引導系統啓動。</span></span></span></p><p>&nbsp;</p><p>0<span>4</span><strong>版本控制</strong></p><p><span style="background-color:#ffffff">OSTree 使用版本控制技術來管理系統的文件系統。它將文件系統的每個版本都存儲為一個只讀快照（snapshot），並通過分支（branch）的方式跟蹤和管理不同的版本。這樣，系統的每個更新都是事務性的，可以輕鬆進行回滾操作。</span></p><p>&nbsp;</p><p>0<span>5</span><strong>存儲庫管理</strong></p><p style="margin-left:0; margin-right:0; text-align:justify"><span style="background-color:#ffffff">OSTree 使用存儲庫來存儲系統的版本控制數據，存儲庫中包含了系統的不同分支和快照，以及與版本控制相關的元數據。通過存儲庫，系統管理員可以方便地管理和維護系統的版本。</span></p><p><span style="background-color:#ffffff">通過上述改造和設計，OSTree 實現了不可變系統的特性，提供了一種可靠、穩定的系統更新和管理機制。它改變了傳統系統的文件系統結構、啓動、版本管理和更新方式，為系統提供了更好的可信度、可靠性和維護性。</span></p><p>&nbsp;</p><p>0<span>6</span><strong>關於 UpdateManager SIG</strong></p><p style="margin-left:0; margin-right:0; text-align:justify"><span style="background-color:#ffffff">openKylin 社區 UpdateManager SIG 小組，致力於新一代操作系統不可變系統相關技術研發，包括系統架構、OStree、系統更新組件等，提供不可變系統相關的技術規劃、設計、開發、維護和系統升級等服務。openKylin 基於 OStree 的不可變系統將成為數字化未來的重要引領者，為用戶帶來更加穩定、安全和高效的數字化體驗。</span></p><ul><li><p style="margin-left:0; margin-right:0; text-align:justify"><span style="color:#000000">SIG 主頁：</span></p><p style="margin-left:0; margin-right:0; text-align:justify"><span style="color:#0b43d1">https://gitee.com/openkylin/community/tree/master/sig/UpdateManager</span></p></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Tue, 30 Jan 2024 01:33:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276872</guid>
            <link>https://www.oschina.net/news/276872</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[開源日報：百度輸入法在候選詞區域植入廣告；大神用 Excel 構建 CPU]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>歡迎閲讀 OSCHINA 編輯部出品的開源日報，每天更新一期。</p><p><strong># 2024.1.29&nbsp;</strong></p><h2><span><span><span style="color:#000000"><span><span><span style="color:#00b050">今日要點</span></span></span></span></span></span></h2><p style="text-align:justify"><strong>OpenSource Daily</strong></p><h3><u><a href="https://www.oschina.net/news/276738/search-with-lepton-opensource" target="news">賈揚清最新開源項目 —— 500 行代碼構建的 AI 搜索工具</a></u></h3><p style="margin-left:.0001pt; margin-right:0; text-align:left"><span><span><span><span><span style="color:#595959">賈揚清前幾天在社交平台介紹了自己開發的 AI 應用 Lepton Search —— 一個用 500 行 Python 代碼構建的對話式 AI 搜索工具</span></span></span><span><span><span style="color:#595959">。</span></span></span><span><span><span style="color:#595959">Lepton Search 的後端是 Mixtral-8x7b 模型，託管在 LeptonAI，輸出速度能達到每秒大約 200 個 token，搜索引擎採用了 Bing 的搜索 API。</span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span style="color:#595959">目前 Lepton Search 已正式開源，包含完整前後端源代碼，採用 Apache License，可商用。</span></span></span></span></span></p><p><img src="https://oscimg.oschina.net/oscnet/up-653f2a2bd37324fb0d75d8ceb45ba2c5187.png" referrerpolicy="no-referrer"></p><h3><u><a href="https://www.oschina.net/news/276824/16-bit-cpu-built-and-runs-in-excel" target="news">大神只用 Excel 就構建了一顆 CPU：具有 128kb RAM、配備彙編語言</a></u></h3><p style="margin-left:.0001pt; margin-right:0; text-align:left"><span><span><span><span><span style="color:#595959">YouTube 科技博主「Inkbox」近日發佈視頻介紹如何在 Microsoft Excel 的限制下構建功能齊全 CPU。Inkbox 稱沒有使用任何 Visual Basic 腳本或插件 —— 完全用 Excel 實現。</span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:left"><span><span><span><span><span style="color:#595959">據介紹，這是一顆 16 位 CPU，在 Excel 中構建並以 3Hz 時鐘頻率運行，具有 128KB RAM、16 色 128x128 像素顯示屏和自定義彙編語言，所有這些都在 Excel 中運行</span></span></span><span><span><span style="color:#595959">。</span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:left"><img src="https://oscimg.oschina.net/oscnet/up-05bafb20ee50b854fae8d35fd3dd39d81d6.png" referrerpolicy="no-referrer"></p><p><span><span><span><span><span style="color:#595959">這個 Excel CPU 項目最令人印象深刻的壯舉之一是 Inkbox 為其創建了功能完整的彙編語言 Excel-ASM16，它包含 23 種不同的指令，並支持變量、標籤，甚至二進制文件。雖然這些是彙編語言的基本功能，但對於在 Microsoft Excel 下運行的 16 位 CPU 的限制來説已經足夠了。</span></span></span></span></span></p><h3><u><a href="https://www.oschina.net/news/276779/ubuntu-24-04-will-use-linux-6-8" target="_blank">Ubuntu 24.04 LTS 默認內核將採用 Linux 6.8</a></u></h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">Canonical 公佈了 Ubuntu 24.04 LTS 的內核計劃，並表示將正在開發的 Linux 6.8 作為下一個長期支持 Ubuntu 桌面 / 服務器發行版的默認內核。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">此前許多人在討論&nbsp;Ubuntu 24.04 LTS 會採用哪個內核版本，有人覺得是 Linux 6.6 LTS，因為它在 2023 年成為了長期支持版本。也有人認為是最新的穩定內核 Linux 6.7，該版本有很多有用的新特性。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">現在 Canonical 工程師 Andrea Righi 宣佈了在 Ubuntu 24.04 中採用 Linux 6.8 作為默認內核的暫定計劃。目前實驗性內核構建已經可以通過 PPA 獲得。</p><hr><h2><strong><span><span><span style="color:#000000"><span><span><span style="color:#00b050">用戶觀點</span></span></span></span></span></span></strong></h2><p><img src="https://oscimg.oschina.net/oscnet/up-9f8ec1ffe5a4c0214de25d655fcee74a996.png" referrerpolicy="no-referrer"></p><hr><h2><strong><span><span><span style="color:#000000"><span><span><span style="color:#00b050">媒體觀點</span></span></span></span></span></span></strong></h2><p><img src="https://oscimg.oschina.net/oscnet/up-dabde0b7612b466a0720487e9cba9a008de.png" referrerpolicy="no-referrer"></p><hr><h2><strong><span><span><span style="color:#000000"><span><span><span style="color:#00b050">每日項目榜</span></span></span></span></span></span></strong></h2><p>GitHub 榜單：</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-9c14f4f693a1964be35334f161b0b67f9eb.png" referrerpolicy="no-referrer"><img alt="" src="https://oscimg.oschina.net/oscnet/up-6ca82877deafa256f357e48b095ec561b11.png" referrerpolicy="no-referrer"></p><p>在線閲讀完整日報內容，訪問：<strong><em><u><a href="https://oscimg.oschina.net/public_shard/%E5%BC%80%E6%BA%90%E6%97%A5%E6%8A%A5%E7%AC%AC004%E6%9C%9F%EF%BC%9A%E5%A4%A7%E7%A5%9E%E5%8F%AA%E7%94%A8%20Excel%20%E5%B0%B1%E6%9E%84%E5%BB%BA%E4%BA%86%E4%B8%80%E9%A2%97%20CPU.pdf" target="_blank">開源日報第 004 期：大神只用 Excel 就構建了一顆 CPU</a></u></em></strong></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 29 Jan 2024 14:16:03 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276864</guid>
            <link>https://www.oschina.net/news/276864</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[百度搜索結果被 Microsoft Edge 瀏覽器封禁，搜索結果頁「全紅」警示]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>1 月 29 日下午消息，今日，# Edge#話題登上熱搜，據多位網友反饋，瀏覽器提示百度搜索結果不安全， Edge 瀏覽器將百度的搜索結果顯示為「此網站已被人舉報不安全」的警告語，需要展開詳細，然後選擇「繼續訪問此不安全站點（不推薦）」才能訪問相關頁面。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-fdd5e488d1f44785059f7a586d3696390e8.png" referrerpolicy="no-referrer"></p><p>截至目前，相關問題仍未修復，在 Microsoft Edge 瀏覽器上點擊百度相關鏈接，全部頁面顯示「紅色」警示。</p><p><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ffinance.sina.cn%2Fchanjing%2Fgsxw%2F2024-01-29%2Fdetail-inafeqqm7979703.d.html" target="_blank">新浪科技稱</a></u>已向百度以及微軟中國方面進行求證，但雙方均迴應稱暫不清楚情況，正向業務問詢瞭解情況。</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 29 Jan 2024 09:40:28 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276851</guid>
            <link>https://www.oschina.net/news/276851</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Linus 發飆，批評谷歌內核貢獻者的代碼是垃圾]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Linus Torvalds 前兩天在內核郵件列表發表了多年來措辭最激烈的一篇帖子——直接爆粗批評了一名谷歌內核貢獻者關於文件系統的建議。</p><p>過去幾周，「inode」一直是 Linux 內核郵件列表上爭論的話題（inode 是給定文件系統中特定元數據的<strong>唯一標識符</strong>），谷歌員工 Steven Rostedt 和 Linus 就此事進行了激烈的討論。</p><p>在標題為<em>"Have the inodes all for files and directories all be the same"</em>的郵件中，發佈者指出，在使用 tar 歸檔文件時，inode 可能仍然發揮作用，Torvalds 則反駁稱 inode 已經過時了。他認為 inode 已經不再是唯一的描述符。他表示，我們不是生活在 20 世紀 70 年代，文件系統已經發生了變化。</p><p>而 Rostedt 則建議索引節點都應該有唯一的編號。</p><p>為了迴應 Rostedt 關於唯一 inode 編號的建議，Linus 指出 inode 曾經是特殊的，但現在應該儘量擺脫這種破碎的歷史，<strong>不應該再讓事情變得比必要的更加複雜</strong>。</p><p>不過&nbsp;Rostedt 好像沒聽進去 Linus 的話，提交的 PR 遭到了 Linus 的激烈批評：「你複製了一段不理解為何執行此操作的函數，這就是垃圾代碼！」</p><blockquote><p><img src="https://oscimg.oschina.net/oscnet/up-4232a4279600f5411d32e0758d98c05e345.png" referrerpolicy="no-referrer"><img src="https://oscimg.oschina.net/oscnet/up-2e9db3475e20188cc78d0693167b4e0ad0c.png" referrerpolicy="no-referrer"><u><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flkml.iu.edu%2Fhypermail%2Flinux%2Fkernel%2F2401.3%2F04208.html" target="_blank">https://lkml.iu.edu/hypermail/linux/kernel/2401.3/04208.html</a></em></u></p></blockquote></div>
                                    ]]>
            </description>
            <pubDate>Mon, 29 Jan 2024 08:36:38 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276848</guid>
            <link>https://www.oschina.net/news/276848</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[🔥 周熱點 | Star 數超 3 萬的開源倉庫被清空；27 萬行 Rust 代碼編寫的 Zed 編輯器開源；FreeBSD 「鏽化」 .....]]>
            </title>
            <description>
                <![CDATA[回顧一週熱門資訊。2024.01.22-2024.01.28]]>
            </description>
            <pubDate>Mon, 29 Jan 2024 07:31:00 GMT</pubDate>
            <guid isPermaLink="false">https://mp.weixin.qq.com/s?__biz=MzA4OTI5NjUwOA==&#38;mid=2649094138&#38;idx=1&#38;sn=105efbbdf5bf4d0cfac0dc8ce15489b3&#38;chksm=880c4ce9bf7bc5ffb58ede3e8ea4fb28451e251396b481b6bf3e71bd7be8f174507f312d8bd5&#38;token=316000186&#38;lang=zh_CN#rd</guid>
            <link>https://mp.weixin.qq.com/s?__biz=MzA4OTI5NjUwOA==&#38;mid=2649094138&#38;idx=1&#38;sn=105efbbdf5bf4d0cfac0dc8ce15489b3&#38;chksm=880c4ce9bf7bc5ffb58ede3e8ea4fb28451e251396b481b6bf3e71bd7be8f174507f312d8bd5&#38;token=316000186&#38;lang=zh_CN#rd</link>
        </item>
    </channel>
</rss>
