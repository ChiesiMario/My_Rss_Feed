<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[開源中國-綜合資訊]]>
        </title>
        <link>https://www.oschina.net/news/industry</link>
        <atom:link href="https://rsshub.app/oschina/news/industry" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[開源中國-綜合資訊 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Wed, 21 Feb 2024 05:39:39 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[2023 年度 Rust 調查報告]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">2023 年度 Rust 調查報告現已<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.rust-lang.org%2F2024%2F02%2F19%2F2023-Rust-Annual-Survey-2023-results.html" target="_blank">出爐</a>，基於 2023 年 12 月 18 日至 2024 年 1 月 15 日期間進行的調查結果。此次調查問卷共收到 11950 份回覆，其中 9710 份完成了所有問題。</span></p><p><span style="color:#000000"><strong>參與情況</strong></span></p><p><span style="color:#000000">參與調查的開發者來自世界各地，最多的是美國（22%），其次是德國（12%）、中國（6%）、英國 (6%)、法國 (6) %）、加拿大（3%）、俄羅斯（3%）、荷蘭（3%）、日本（3%）和波蘭（3%）。92.7% 的受訪者更趨向於採用英語交流技術主題，相較 2022 年的 93% 略有下降；中文是第二選擇，佔比為 6.1%（ 2022 年為 7%）。</span></p><p><span style="color:#000000"><strong>Rust 使用情況</strong></span></p><p><span style="color:#000000">有 93% 的受訪者稱自己是 Rust 用戶，其中 49% 的人每天（或幾乎每天）都會使用 Rust，相較上一年小幅增加 2 個百分點。在沒有使用 Rust 的用戶中，31% 的人表示主要原因時使用 Rust 有難度；67% 的人表示他們還沒有機會優先學習 Rust，這也是最常見的原因。</span></p><p><span style="color:#000000">46% 的受訪者表示其不再使用 Rust 的原因在於「無法控制的因素」（比 2022 年減少了 1 個百分點），31% 的人是因為更喜歡另一種語言（比 2022 年增加了 9 個百分點），還有 24% 是因為難度（比 2022 年減少了 6 個百分點）。</span></p><p><span style="color:#000000"><img alt="" height="429" src="https://oscimg.oschina.net/oscnet/up-335afef97d65f03d34d0f08eb8831153557.png" width="500" referrerpolicy="no-referrer"></span></p><p><span style="color:#000000">操作系統的選擇方面，Linux 是最受 Rust 用戶歡迎的選擇，其次是 macOS 和 Windows，兩者份額相近。IDE 的選擇上，Visual Studio Code 仍然是最受歡迎的選擇，RustRover（去年發佈）也獲得了一些關注。</span></p><p><span style="color:#000000"><strong>Rust 在工作中的使用情況</strong></span></p><p><span style="color:#000000">34% 的受訪者表示他們在工作中的大部分編碼業務都使用 Rust，相較 2022 年增加了 5 個百分點。86% 的受訪者僱主投資 Rust 的首要原因是能夠構建相對正確且無 bug 的軟件，第二個原因是 Rust 的優秀性能（83%）。77% 的受訪者表示，他們的組織可能會在未來再次使用 Rust。</span></p><p><span style="color:#000000">就技術領域而言，Rust 似乎在創建服務器後端、Web 和網絡服務以及雲技術方面特別受歡迎。</span></p><p><span style="color:#000000"><img alt="" height="429" src="https://oscimg.oschina.net/oscnet/up-956fdb129c803494d840f04071cceb0996b.png" width="500" referrerpolicy="no-referrer"></span></p><p><span style="color:#000000"><strong>對 Rust 未來的擔憂和期待</strong></span></p><p><span style="color:#000000">共有 9374 名受訪者分享了他們對 Rust 未來的主要擔憂，其中 43% 的受訪者擔心 Rust 變得過於複雜，相較 2022 年增加了 5 個百分點。42% 的受訪者擔心 Rust 在科技行業的使用率過低。32% 的受訪者最擔心 Rust 開發人員和維護人員得不到適當的支持，相較 2022 年增加了 6 個百分點。</span></p><p><span style="color:#000000">另一方面，完全不關心 Rust 未來的受訪者明顯減少，2023 年為 18%，2022 年為 30%。</span></p><p><span style="color:#000000">就 Rust 用戶希望實現、穩定或改進的功能而言，最需要的改進是 traits（trait aliases、associated type defaults 等）、const execution（generic const expressions、const trait methodsconst 等）以及 async（async closures、coroutines）。</span></p><p><span style="color:#000000"><img alt="" height="429" src="https://oscimg.oschina.net/oscnet/up-bcaf516c155cafe4eb2d721dc6e86434a9e.png" width="500" referrerpolicy="no-referrer"></span></p><p><span style="color:#000000">可能是出於對複雜度的擔憂，還有 20% 的受訪者希望 Rust 放慢新功能的開發速度。此外，Rust 中最令用戶頭疼的似乎是 asynchronous Rust、traits、generics system 以及 borrow checker。</span></p><p><span style="color:#000000"><img alt="" height="429" src="https://oscimg.oschina.net/oscnet/up-de1d95566f02a3dccfae6db246605f3684a.png" width="500" referrerpolicy="no-referrer"></span></p><p><span style="color:#000000">受訪者希望 Rust 維護者主要優先考慮修復編譯器錯誤 (68%)、提高 Rust 程序的運行時性能 (57%) 以及縮短編譯時間 (45%)。受訪者指出，編譯時間是需要改進的最重要領域之一；但有趣的是，受訪者似乎也認為運行時性能比編譯時間更重要。</span></p><p><span style="color:#000000"><img alt="" height="571" src="https://oscimg.oschina.net/oscnet/up-b59d67be36c91976d230c9e2d43ae22ac9e.png" width="500" referrerpolicy="no-referrer"></span></p><p><span style="color:#000000">更多詳情可查看</span>完整的<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fraw.githubusercontent.com%2Frust-lang%2Fsurveys%2Fmain%2Fsurveys%2F2023-annual-survey%2Freport%2Fannual-survey-2023-report.pdf" target="_blank">調查報告</a>。</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 21 Feb 2024 04:03:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/279563/rust-survey-2023-results</guid>
            <link>https://www.oschina.net/news/279563/rust-survey-2023-results</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[2024，RISC-V 可期]]>
            </title>
            <description>
                <![CDATA[<div class="content"><blockquote><p>轉載自：<em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2F6WLBNUfHyfLCq7AR9Ortuw" target="_blank">中國電子報（ID：cena1984）</a></u></em></p></blockquote><p>2023 年，長期被冠以「低端」帽子的 RISC-V 架構，終於實現了高端化過程中的兩個「小目標」：一個是單核性能走高，可與 ARM Cortex-A7 對標；另一個是應用場景拓展到 PC 領域，首台搭載 RISC-V 架構的筆記本電腦<u><a href="https://www.oschina.net/news/234292">面世</a></u>。</p><p>如此勢頭下， 2024 年 RISC-V 的發展似乎「一片坦途」。</p><p><strong>在數據中心市場「掘金」</strong></p><p>為了實現「高端化」轉型，RISC-V 架構設計企業在持續嘗試將市場拓展到對算力、穩定性等指標要求更高的領域。2023 年，業界推出多個面向數據中心的 RISC-V 產品，其中包括算能科技流片業內首顆 RISC-V 服務器芯片 SG2042、賽昉科技推出的超大規模總線 IP「昉·星鏈-700」及 256 核 RISC-V 眾核 IP 子系統平台。</p><p>在數據中心領域，當前湧現了多家劍指服務器 CPU 的 RISC-V 初創公司。賽昉科技董事長兼 CEO 徐滔認為，不只是服務器 CPU，「數據中心」市場可謂遍地是黃金，BMC 芯片、存儲芯片、AI 加速器、DPU 等都可以用 RISC-V 來做。「我認為， 2024 年將有多款不同類型的 RISC-V 芯片在數據中心場景中量產落地。」徐滔向《中國電子報》表示。</p><p>此外，還有多家 RISC-V 廠商設計的 「大芯片」有流片可能，其中包括 Ventana 的 192 核、4nm 的 RISC-V 服務器 CPU——Veyron V2，Tenstorrent 的 3nm AI &amp; CPU Chiplets——Grendel 等，它們都有機會在 2024 年流片。</p><p><strong>趕上「AI 特快」</strong></p><p>「人工智能是目前正在開發的新興技術中最重要的類別，該類應用需要新型的編程模型、新型的 SoC 以及新型的系統，我們看到 RISC-V 在其中扮演着非常重要的角色。」 SiFive 企業營銷與業務開發資深副總裁剛至堅在接受《中國電子報》記者採訪時表示。</p><p>剛至堅認為，RISC-V 提供了一個奇妙的、共享的生態系統， 一個 AI 編程環境以及開發新軟件的環境，隨着性能、可定製化能力不斷提升，RISC-V 將越來越多地進入人工智能主導的新興市場中，其應用場景包括數據中心、汽車以及消費電子等領域。</p><p><strong>高端 SoC 可商用</strong></p><p>在深度數智總裁卜祥敏看來，2024 年最關鍵的是 SoC 可商用產品的落地。</p><p>「2023 年我們做了一年基於 RISC-V 的整體解決方案，我深刻地感受到，現在 SoC 芯片與真正的可商業化落地之間還有不少距離。」卜祥敏告訴《中國電子報》記者，「2023 年深度數智推出了基於 RISC-V 架構的筆記本電腦。2024 年，我們計劃和生態圈的合作伙伴一同推出搭載新一代基於 RISC-V 架構設計的 SoC 筆記本電腦和服務器。」</p><p>2023 年，谷歌與安卓宣佈支持 RISC-V 生態。卜祥敏表示，這將推動 RISC-V 的生態系統走向完善。更加完備的生態系統，將有助於提升 RISC-V 在桌面、智能終端等領域的可用性。</p><p>徐滔認為，垂直整合是 RISC-V 處理器在高端市場落地的有效方式。「垂直整合，即通過應用定義芯片。RISC-V 在商業上標準開放、技術上架構靈活，廠商可以更好地根據應用需求設計芯片。高端應用定義芯片，更能釋放垂直整合的價值，這也是 RISC-V 最大的機會。」徐滔表示。</p><p><strong>軟件生態加速建設</strong></p><p>2023 年 6 月，全球 RISC-V 軟件生態計劃 RISE（RISC-V Software Ecosystem）組織成立。該計劃由谷歌、英特爾、高通、聯發科、Andes、平頭哥、Rivos、SiFive、Ventana、三星、英偉達、Imagination 等共 13 家產業巨頭共同發起的，旨在協助 RISC-V 國際基金會共同加速 RISC-V 商用軟件生態建設。它的成立，標誌着 RISC-V 軟件生態從純開源主導、基金會主導進入商業化主導、全球大規模共建的時代。</p><p>中國科學院軟件研究所副所長、總工程師武延軍在接受《中國電子報》記者採訪時表示，由於 RISC-V 得到 Debian 和 OpenEuler 兩大開源操作系統社區的官方主線支持，加之 RISE 組織成立，頭部軟硬件企業正式加入 RISC-V 生態，2024 年 RISC-V 軟件生態將加速建設。</p><p>武延軍認為，2024 年，市面上將會在 2023 年已有產品的基礎上，再次出現 RISC-V 標誌性高性能處理器，服務器軟件生態規模化適配正式開啓。開源開放和全球協作理念，使得 RISC-V 開發者的規模持續快速增長。</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 21 Feb 2024 03:24:42 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/279556</guid>
            <link>https://www.oschina.net/news/279556</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Java 21 虛擬線程如何限流控制吞吐量]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>虛擬線程（Virtual Threads）是 Java 21 所有新特性中最為吸引人的內容，它可以大大來簡化和增強 Java 應用的併發性。但是，隨着這些變化而來的是如何最好地管理此吞吐量的問題。本文，就讓我們看一下開發人員在使用虛擬線程時，應該如何管理吞吐量。</p><p>在大多數情況下，開發人員不需要自己創建虛擬線程。例如，對於 Web 應用程序，Tomcat 或 Jetty 等底層框架將為每個傳入請求自動生成一個虛擬線程。</p><p>如果在應用程序內部需要自行調用來提供業務併發能力時，我們可以使用<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.didispace.com%2Fjava-features%2Fjava21%2Fjep444-virtual-threads.html" target="_blank">Java 21 新特性：虛擬線程（Virtual Threads）</a>中介紹的方法去創建和使用，比如較為常用的就是<code>Executors.newVirtualThreadPerTaskExecutor()</code>。</p><pre><code class="language-java">Runnable runnable = () -&gt; {
    System.out.println("Hello, www.didispace.com");
};

try (ExecutorService executorService = Executors.newVirtualThreadPerTaskExecutor()) {
    for (int i = 0; i &lt; 100; i++) {
        executorService.submit(runnable);
    }
}
</code></pre><p>我們可以像上面開啓 100 個虛擬線程來執行任務。那麼問題來了，我們要如何對虛擬線程限流控制吞吐量呢？</p><h2>虛擬線程的限流</h2><p>對於虛擬線程併發控制的答案是：信號量！**劃重點：不要池化虛擬線程，因為它們不是稀缺資源。**所以，對於虛擬線程併發控制的最佳方案是使用<code>java.util.concurrent.Semaphore</code>。</p><p>下面的代碼示例演示瞭如何實現<code>java.util.concurrent.Semaphore</code>來控制虛擬線程的併發數量：</p><pre><code class="language-java">public class SemaphoreExample {

    // 定義限流併發的信號量，這裏設置為：10
private static final Semaphore POOL = new Semaphore(10); 

public void callOldService(...) {
try{
POOL.acquire(); // 嘗試通過信號量獲取執行許可
} catch(InterruptedException e){
            // 執行許可獲取失敗的異常處理
}

try {
// 獲取到執行許可，這裏是使用虛擬線程執行任務的邏輯
} finally {
            // 釋放信號量
POOL.release(); 
}
}
}
</code></pre><p>是不是很簡單呢？今天的分享就到這裏，希望對你有所幫助，更多關於 Java 新特性的學習可以關注我的免費專欄<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.didispace.com%2Fjava-features%2F" target="_blank">Java 新特性</a>。</p><h2>擴展閲讀</h2><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.didispace.com%2Farticle%2Fjava-21-virtaul-threads.html" target="_blank">啓動 1000 萬個虛擬線程需要多少時間？需要多少平台線程？</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.didispace.com%2Farticle%2Fspring-boot%2Fspring-boot-virtual-threads-vs-webflux.html" target="_blank">Spring Boot 虛擬線程與 Webflux 在 JWT 驗證和 MySQL 查詢上的性能比較</a></li></ul><blockquote><p>歡迎關注我的公眾號：程序猿 DD。第一時間瞭解前沿行業消息、分享深度技術乾貨、獲取優質學習資源</p></blockquote></div>
                                    ]]>
            </description>
            <pubDate>Wed, 21 Feb 2024 03:02:42 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/didispace/blog/11044187</guid>
            <link>https://my.oschina.net/didispace/blog/11044187</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[芯片架構師 Jim Keller：英偉達的 CUDA 不是護城河，是沼澤]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>曾從事 x86、Arm、MISC 和 RISC-V 處理器研究的芯片架構師 Jim Keller 批評了英偉達的 CUDA 架構和軟件技術棧，他認為 CUDA 是英偉達的沼澤而非護城河。</p><blockquote><p><strong>「CUDA 是沼澤，而不是護城河。x86 也是一片沼澤。[…] CUDA 並不美好，它是通過一次堆積一件東西來構建的。」</strong></p><p><img src="https://oscimg.oschina.net/oscnet/up-bb29c91be732d8384401f752fab63b43fa2.png" referrerpolicy="no-referrer"><em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftwitter.com%2Fjimkxa%2Fstatus%2F1758943525662769498" target="_blank">https://twitter.com/jimkxa/status/1758943525662769498</a></u></em></p></blockquote><p>他指出，就連英偉達本身也有多個專用軟件包，出於性能原因，這些軟件包依賴於開源框架。</p><p>就像 x86 一樣，CUDA 在保持軟件和硬件向後兼容性的同時逐漸增加了功能。這確保英偉達的平台完整且向後兼容，但它影響了性能並使程序開發變得更加困難。同時，很多開源軟件開發框架可以比 CUDA 更高效地使用。</p><p>Jim Keller 寫道：「<strong><em>基本上沒有人編寫 CUDA，如果你確實編寫 CUDA，它可能不會很快。[...] Triton、Tensor RT、Neon 和 Mojo 的存在是有充分理由的。</em></strong>」</p><p>甚至英偉達本身也有不完全依賴 CUDA 的工具。例如，Triton Inference Server 是英偉達的一款開源工具，可簡化 AI 模型的大規模部署，支持 TensorFlow、PyTorch 和 ONNX 等框架。Triton 還提供模型版本控制、多模型服務和併發模型執行等功能，以優化 GPU 和 CPU 資源的利用率。</p><p>英偉達的 TensorRT 是一種高性能深度學習推理優化器和運行時庫，可加速英偉達 GPU 上的深度學習推理。TensorRT 從各種框架（例如 TensorFlow 和 PyTorch）中獲取經過訓練的模型，並對其進行優化以進行部署，從而減少延遲並提高圖像分類、對象檢測和自然語言處理等實時應用程序的吞吐量。</p><p>儘管像 Arm、CUDA 和 x86 這樣的架構可能會被認為是沼澤，因為它們的演進速度相對較慢、必須向後兼容並且體積龐大，但這些平台也不像 GPGPU 這樣分散，這可能根本不是一件壞事。</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 21 Feb 2024 03:01:42 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/279549</guid>
            <link>https://www.oschina.net/news/279549</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[MariaDB 可能會以 3700 萬美元被私有化]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">MariaDB 董事會<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.businesswire.com%2Fnews%2Fhome%2F20240219857559%2Fen%2FAnnouncement-Regarding-Possible-Offer" target="_blank">確認</a>，已於 2024 年 2 月 15 日收到了來自加利福尼亞 K1 投資管理公司的臨時收購要約。K1 於 2024 年 2 月 16 日<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fk1.com%2Fmeridian%2F" target="_blank">公開</a>宣佈了這一要約。MariaDB 董事會正在審查可能要約並聽取建議。</span></p><p><span style="color:#000000">這是一份非約束性的探索性提議，可能會根據未來幾周的談判進展而發生變化。該提議包括以每股 0.55 美元的價格購買所有 MariaDB 股票，按照該公司 2 月 5 日的收盤估值計算，約合 3700 萬美元。</span></p><p><span style="color:#000000">擬定交易將通過愛爾蘭法律安排計劃進行，K1 或其附屬公司將收購該公司 100% 的已發行股份。然而，K1 保留以合同要約的方式實施該提議的權利。尚未確定該提議將採取何種形式。</span></p><p><span style="color:#000000">值得一提的是，這一消息的發佈正值該公司發生重大變化和動盪之際，新任首席執行官上任後，該公司進行了大規模裁員，並剝離了數據庫即服務和地理空間業務。</span></p><p><img height="223" src="https://oscimg.oschina.net/oscnet/up-1da31f278849ce4cdcc7e6d0a823d84c4f4.png" width="500" referrerpolicy="no-referrer"></p><p><span style="color:#000000">2009 年，甲骨文公司斥資數十億美元對 MySQL 進行了一系列收購，使 MySQL 實際上成為甲骨文公司的資產，MySQL 項目的創建者因此對 MySQL 的獨立性產生了擔憂，於是 MariaD B 在 15 年前作為 MySQL 的一個分支而出現。對於那些尋求完全開源的 MySQL 替代品的人來説，MariaDB 被認為是一個"drop-in"的替代品，並已被一些大公司用於在其應用程序中存儲和處理數據。</span></p><p><span style="color:#000000">多年來，MariaDB 背後的商業實體籌集了大約 2.3 億美元的風險資金，最終於 2022 年 12 月通過 SPAC 上市。但正如 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftechcrunch.com%2F2024%2F02%2F19%2Fstruggling-database-company-mariadb-could-be-taken-private-in-a-37m-deal%2F" target="_blank">TechCrunch</a> 所指出，MariaDB 的上市遠未取得巨大成功，從 2022 年底上市首日 4.45 億美元的市值（與之前 D 輪融資時 6.72 億美元的私有企業價值相比，市值本身已大幅下降）跌入常年低谷，自今年年初以來一直徘徊在 1 千萬美元關口附近。</span></p><p><span style="color:#000000">紐約證券交易所曾在 9 月份警告 MariaDB，稱其不符合上市規則 —— 該規則規定公司的全球平均市值在連續 30 天的交易期內不得低於 5000 萬美元。在隨後的幾個月裏，MariaDB 收到了第一份收購要約，來自其現有投資者 Runa Capital，初步報價為每股 0.56 美元現金。三週後，Runa 表示最終不會收購 MariaDB，而是由一家名為 RP Ventures 的公司提供 2650 萬美元的貸款。</span></p><p><span style="color:#000000">今年二月初，MariaDB 宣佈與債權人達成臨時暫緩協議，即在尋求替代融資方案期間，債權人將不行使貸款協議中規定的任何補救措施。這一消息導致 MariaDB 的股價在幾天內上漲了一倍多，這也是為什麼 K1 的出價與宣佈任何暫緩協議前 MariaDB 的收盤價相對應。</span></p><p><span style="color:#000000">事實上，K1 表示，它的報價比 MariaDB 2 月 5 日的收盤價（0.19 美元）高出 189%，相當於市值約為 1290 萬美元。雖然不能保證 K1 會正式競購 MariaDB，但與更像傳統風險投資公司的 Runa Capital 不同，K1 在其 12 年的歷史中擁有後期投資記錄，這使其更接近私募股權投資領域。且 K1 已經進行了多次收購，包括在 2022 年斥資 3.19 億美元收購澳大利亞 ELMO 軟件公司，並在收購過程中將其私有化。</span></p><p><span style="color:#000000">因此，從很多方面來説，K1 可能比 Runa 更適合接管 MariaDB。根據愛爾蘭收購規則第 2.6 條，K1 必須在 2024 年 3 月 29 日下午 5:00（紐約時間）（即 K1 公告後的第 42 天）之前，正式確定其收購要約或完全放棄該計劃。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 21 Feb 2024 02:36:17 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/279540/mariadb-could-be-taken-private-37m-k1</guid>
            <link>https://www.oschina.net/news/279540/mariadb-could-be-taken-private-37m-k1</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[紅帽改變發佈 RHEL Beta 測試版本的更新策略]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>紅帽<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.redhat.com%2Fen%2Fblog%2Fupcoming-improvements-red-hat-enterprise-linux-minor-release-betas" target="_blank">宣佈</a></u>對 RHEL Beta 測試版本的更新策略進行改進。</p><p><img src="https://oscimg.oschina.net/oscnet/up-1c1f35a138e6545bd30f1e3fb14505f82f2.png" referrerpolicy="no-referrer"></p><p>目前 RHEL 新版本正式發佈之前，紅帽大致提供了一個月的測試期。但紅帽及其客戶發現，長達一個月的 RHEL 測試期通常太短，意義不大。</p><p>從 RHEL 9.5 開始，<strong>紅帽將開始更早且持續地發佈"beta"軟件包</strong>。在即將發佈的次要版本完成初始測試後，這些軟件包將開始推送到其測試版渠道。<strong>因此，它的測試期長達 4 個月，而不僅僅是 1 個月的週期</strong>。</p><p>但隨着測試期的延長以及每週發佈測​​試包更新，RHEL 次要版本測試版的安裝介質（例如預構建的 ISO 和雲/VM 鏡像）將不再存在。</p><p>此更改僅影響 RHEL 9.5 及更高版本，並將持續到從 RHEL 10.1 開始的點版本。RHEL 8 或更早版本中的點版本更新都不會發生變化。</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 21 Feb 2024 02:28:17 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/279538/red-hat-changes-beta-timing</guid>
            <link>https://www.oschina.net/news/279538/red-hat-changes-beta-timing</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[中國大模型賽道最大單筆融資，月之暗面獲超 10 億美金融資]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>AI 初創公司月之暗面（Moonshot AI）最近完成了一輪超過 10 億美金的融資，投資方包括紅杉中國、小紅書、美團和阿里，老股東也進行了跟投。這一輪融資使月之暗面的估值達到了約 25 億美金，成為國內大模型領域的頭部企業之一。這是自從 ChatGPT 引發全球熱潮以來國內 AI 大模型公司獲得的單輪最大金額融資。</p><p>月之暗面的上一輪融資為 2023 年獲得的超 2 億美金融資，投資方包括紅杉中國、真格基金等。</p><p>月之暗面成立於 2023 年 3 月，迅速成為大模型領域的重要參與者。其核心團隊成員曾參與 Google Gemini、Google Bard、盤古 NLP 和悟道等多個大模型項目的研發工作，擁有多年大模型研究和開發經驗。目前，公司團隊規模已超過 80 人。</p><p>根據官方介紹，Moonshot AI 是下一代跨模態大模型研發商，致力於研發下一代跨模態大模型。目前發明瞭 RoPE 相對位置編碼，是 Meta LLaMa 和 Google PALM 等大多數主流模型的重要組成部分；發明瞭 group normalization，是 Stable Diffusion 等 AI 模型成功的關鍵組件。</p><p>公司創始人楊植麟是 90 後學霸，畢業於清華大學計算機系，師從唐傑教授，之後獲得卡內基梅隆大學計算機博士學位，師從蘋果公司現任 AI 負責人、深度學習奠基人之一 Ruslan Salakhutdinov，曾在 Facebook AI Research， Google Brain 從事自然語言處理研究，獲 DREAM9 全球癌症預測大賽第一名，阿里巴巴天池大數據競賽全球第二名，2017 Nvidia 先鋒研究獎。於 ICLR、NIPS、ICML、KDD、ACL 等頂級 AI 會議發表論文二十餘篇；在所有六個主流語言建模數據集保持世界第一名（State-of-the-art）。</p><p>2023 年 6 月，科技媒體 The Information 將楊植麟列為 「中國 OpenAI」 的五大候選人之一，表明了他在業界得到了高度認可，其餘四位為 MiniMax、智譜 AI、光年之外以及瀾舟科技。</p><p>自成立以來，月之暗面在短短不到一年的時間裏，已經完成了從通用大模型到上層應用的全面佈局。公司已經訓練了千億級別的自研通用大模型，並在 2023 年 10 月推出了面向 C 端的 Kimi 智能助手，這是公司首次嘗試 To C 超級應用。</p><p>Kimi 智能助手支持 20 萬漢字的長文本輸入，主打無損記憶。「長文本（Long Context）」 是月之暗面當前主打的技術之一，這來源於團隊希望突破大模型的落地瓶頸 —— 大模型的智慧之所以能 「湧現」，主要是因為通過擴大參數規模，突破到了千億級別。</p><p>11 月，公司宣佈其 Kimi Chat 聊天機器人面向全社會開放服務，用戶可通過官網體驗。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fkimi.moonshot.cn%2F" target="_blank">https://kimi.moonshot.cn/</a></p><p><img height="261" src="https://oscimg.oschina.net/oscnet/up-e5902a7ff6a62c3a72f9c3ed663ad23e4ed.png" width="500" referrerpolicy="no-referrer"></p><p>楊植麟認為，在 B2C 領域，AI Native 將開闢新的流量渠道，它們有望成為 AI 時代的 Super App，帶來巨大的商機。</p><p>據悉，月之暗面正在研發通用多模態模型，並預計在今年內推出，多模態模型是近期大模型創業公司的核心競爭點。</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 20 Feb 2024 10:31:27 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/279462</guid>
            <link>https://www.oschina.net/news/279462</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[周鴻禕迴應 2024 年 AI 行業十大預言，現已實現四個]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>中國企業家雜誌獨家對話了知名企業家、360 集團董事長周鴻禕，<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1193725273%2FO1t4r21L4" target="_blank">共同探討</a></u>了近期備受矚目的 AI 技術 Sora 所帶來的重大影響。在被問及如何看待年初提出的 AI 十大預言時，周鴻禕興奮地表示，目前已經有四個預言得以實現，分別是<strong>開源大模型爆發、大模型運行在終端、文生圖和文生視頻取得突破性進展、多模態成為大模型標配</strong>。周鴻禕認為，特別是 Sora 的出現讓他感到很意外，發展得很快。</p><p>附周鴻禕此前提出的 AI 十大預言：</p><ol><li>大模型無處不在，成為數字系統標配；</li><li><strong>開源大模型爆發；</strong></li><li><strong>"小模型"湧現，運行在更多終端；</strong></li><li>大模型企業級市場崛起，向產業化、垂直化方向發展；</li><li>Agent 智能體激發大模型潛能，成為超級生產力工具；</li><li>2024 年是大模型應用場景之年，To C 出現殺手級應用；</li><li><strong>多模態成為大模型標配；</strong></li><li><strong>文生圖、文生視頻等 AIGC 功能突破性增長；</strong></li><li>具身智能賦能人形機器人產業蓬勃發展；</li><li>大模型推動基礎科學取得突破。</li></ol><hr><p>周鴻禕前幾天在微博<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1708942053%2FO0Sivblel" target="_blank">發表</a></u>了對 Sora 的看法，他認為 Sora 的誕生意味着 AGI（通用人工智能）實現可能從 10 年縮短至一兩年。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-9cbd9c40a32b414d55590e86ad84c498a87.png" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 20 Feb 2024 08:16:08 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/279421</guid>
            <link>https://www.oschina.net/news/279421</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[字節跳動推出中文版「Sora」？迴應來了]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">近日，市場有消息稱，在 Sora 引爆文生視頻賽道之前，國內的字節跳動也推出了一款新型視頻模型 Boximator，與 Gen-2、Pink1.0 等既有模型相比，Boximator 的獨特之處在於，它能夠通過文本輸入精確地控制視頻中人物或物體的運動。</span></p><p><span style="color:#000000">2 月 20 日，字節跳動相關人士迴應稱，Boximator 是視頻生成領域控制對象運動的技術方法研究項目，目前還無法作為完善的產品落地，距離國外領先的視頻生成模型在畫面質量、保真率、視頻時長等方面還有很大差距。</span></p><p><span style="color:#333333">Sora 是 OpenAI 於日前發佈的首個視頻生成模型。可根據文本描述生成長達 60 秒的視頻，其中包含精細複雜的場景、生動的角色表情以及複雜的鏡頭運動。OpenAI 在技術報告介紹道，</span><strong style="color:#333333">他們將 Sora 視頻生成模型視作世界模擬器</strong><span style="color:#333333">。具體來説就是通過跨越不同持續時間、寬高比和分辨率的視頻和圖像，從而生成最高可達一分鐘的高清視頻。</span></p><p><img height="274" src="https://oscimg.oschina.net/oscnet/up-80cdbef18c0af0f443e5c577f0b8b7d9f0d.png" width="500" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">Sora 使用了一種特殊的深度學習模型（即 Transformer）來處理視頻和圖像數據。這種處理方式首先將視頻和圖像編碼成潛在代碼，然後將這些代碼分解成包含時間和空間信息的小塊（即時空補丁），最後利用 Transformer 模型在這些補丁上進行操作。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">這樣的處理方法能夠有效地捕捉和生成視頻和圖像數據中的複雜時空動態，為生成高質量的視頻和圖像提供了一種強大的方法。</p><p><strong>相關閲讀：</strong></p><ul><li><a href="https://www.oschina.net/news/278821/openai-text-to-video-sora" target="_blank">OpenAI 發佈文本生成視頻模型 Sora</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Tue, 20 Feb 2024 08:00:14 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/279411</guid>
            <link>https://www.oschina.net/news/279411</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[開源日報：目前還沒有「大模型版 Linux」；nginx 核心開發者創建新分支]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>歡迎閲讀 OSCHINA 編輯部出品的開源日報，每天更新一期。</p><h3><span style="color:#e67e22"><strong># 2024.2.19</strong></span></h3><h2><span><span><span style="color:#000000"><span><span><span style="color:#00b050">今日要點</span></span></span></span></span></span></h2><p style="text-align:justify"><strong>OpenSource Daily</strong></p><h3><u><a href="https://www.oschina.net/news/278819/nginx-forked-freenginx" target="_blank">核心 Nginx 開發者創建新分支 Freenginx</a></u></h3><p>作為 Nginx Web 服務器的長期核心開發人員之一，Maxim Dounin 宣佈創建該項目的一個新分支，名為 Freenginx。</p><p>Maxim Dounin 決定分叉 Nginx 是因為與 F5 發生了分歧，F5 於 2019 年收購了 Nginx 公司。Dounin 在宣佈 Freenginx 時表示將不再參與由 F5 負責的 nginx 開發。取而代之的是啓動另一個項目，由開發人員而非公司實體來運營。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-3488ed2ae05fcc308c3b208aa3bfbebd210.png" referrerpolicy="no-referrer"></p><h3><u><a href="https://www.oschina.net/news/279147/magika-ai-powered-type-identification" target="_blank">谷歌開源 Magika —— AI 驅動的文件類型檢測工具</a></u></h3><p>谷歌開源了由 AI 驅動的文件內容類型識別工具，聲稱能夠在毫秒級內精確識別超過 100 種不同文件類型，無論是二進制文件還是文本文件。Magika 是基於深度學習技術的文件類型識別系統，用於準確檢測二進制和文本文件類型。在底層，Magika 採用定製的、高度優化的深度學習模型，即使在 CPU 上運行，也能在幾毫秒內實現精確的文件識別。</p><p>在谷歌內部，Magika 被用於提升用戶安全，幫助對 Gmail、Drive 和安全瀏覽中的文件進行安全檢查和內容策略掃描。</p><p><img src="https://oscimg.oschina.net/oscnet/up-5f0a4182522f53b7a69907f3cff050925ff.png" referrerpolicy="no-referrer"></p><hr><h2><strong><span><span><span style="color:#000000"><span><span><span style="color:#00b050">今日觀察</span></span></span></span></span></span></strong></h2><p><img src="https://oscimg.oschina.net/oscnet/up-c204357960927dcfcfa94bea7bede0ce869.png" referrerpolicy="no-referrer"></p><blockquote><p>很多人看着各種大模型開源了之後就覺着下個開源時代來了，我認為目前的大模型跟開源社區的最終發展結果是相悖的。早期開源運動興起時，個人主機和廉價冗餘服務器逐漸普及，軟件的核心是代碼，開放代碼之後，所有人都可以在此基礎上進行修改、部署和分發；而目前的大模型則依賴於數據和算力，集市模式的開源社區很難具備兩個條件。</p><p>因此，目前的大模型開源運動更像是幾個巨型公司找了社區這麼個的外包組織，雖然大家乾的都很紅火，但能提供模型本身的依然只有幾個公司，能提供模型服務的，也都是商業公司，而不是開發者或者終端用戶。最終當大模型的生態平穩之後，社區很難直接擁有大模型的關鍵技術。<br><br> - 微博 <em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1809500942%2FO14ohCDQJ" target="_blank">&nbsp;axb 的自我修養</a></u></em></p></blockquote><blockquote><p>「套殼」只是中國大模型產業現狀的冰山一角，這背後折射出產業發展的五個問題，它們之間互為因果，每個問題都無法獨立解決。</p><ul><li>模型：原創、拼裝還是套殼？</li><li>算力：卡脖子還是不想買？</li><li>數據：低質數據怎麼解決？</li><li>資本：只有資本短視嗎？</li><li>商業化：誰是合適的買單人。</li></ul><p>- 財經十一人 <em>《<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2Fttarticle%2Fp%2Fshow%3Fid%3D2309405002841407488086" target="_blank"><strong>中國大模型產業的五個真問題</strong></a></u>》</em></p></blockquote><hr><h2><strong><span><span><span style="color:#000000"><span><span><span style="color:#00b050">今日推薦</span></span></span></span></span></span></strong></h2><p><img src="https://oscimg.oschina.net/oscnet/up-5064f005dfe68164213affe8f74aeffb692.png" referrerpolicy="no-referrer"></p><hr><h2><strong><span><span><span style="color:#000000"><span><span><span style="color:#00b050">開源之聲</span></span></span></span></span></span></strong></h2><p><img src="https://oscimg.oschina.net/oscnet/up-b13ece2ded33000fc7c2b96deef4a7c0df2.png" referrerpolicy="no-referrer"></p><hr><h2><strong><span><span><span style="color:#000000"><span><span><span style="color:#00b050">每日項目榜</span></span></span></span></span></span></strong></h2><p>Gitee 榜單：</p><p><img src="https://oscimg.oschina.net/oscnet/up-e5c538c2846376405aef6d023e59a916f2f.png" referrerpolicy="no-referrer"></p><blockquote><h4><span style="background-color:#e67e22">在線閲讀完整日報內容，訪問：</span><br><em><u><a href="https://oscimg.oschina.net/public_shard/%E5%BC%80%E6%BA%90%E6%97%A5%E6%8A%A5%E7%AC%AC011%E6%9C%9F%EF%BC%9A%E7%9B%AE%E5%89%8D%E8%BF%98%E6%B2%A1%E6%9C%89%E2%80%9C%E5%A4%A7%E6%A8%A1%E5%9E%8B%E7%89%88Linux%E2%80%9D.pdf">開源日報第 011 期：目前還沒有「大模型版 Linux」</a></u></em></h4></blockquote><hr><p><strong>往期回顧</strong></p><ul><li><u><a href="https://oscimg.oschina.net/public_shard/%E5%BC%80%E6%BA%90%E6%97%A5%E6%8A%A5%E7%AC%AC010%E6%9C%9F%EF%BC%9ATauri%20v2%20%E6%94%AF%E6%8C%81%20Android%20%E5%92%8C%20iOS%EF%BC%8C%E8%B7%A8%E5%B9%B3%E5%8F%B0%E5%BC%80%E5%8F%91%E6%96%B0%E9%80%89%E6%8B%A9.pdf">開源日報第 010 期：Tauri v2 支持 Android 和 iOS，跨平台開發新選擇</a></u></li><li><u><a href="https://oscimg.oschina.net/public_shard/%E5%BC%80%E6%BA%90%E6%97%A5%E6%8A%A5009%E6%9C%9F%EF%BC%9AVue.js%E8%AF%9E%E7%94%9F10%E5%91%A8%E5%B9%B4%EF%BC%9B%E6%89%8E%E5%85%8B%E4%BC%AF%E6%A0%BC%E8%A7%A3%E9%87%8AMeta%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E5%BC%80%E6%BA%90%E5%85%B6AI%E6%8A%80%E6%9C%AF.pdf" target="_blank">開源日報第 009 期：Vue.js 誕生 10 週年；扎克伯格解釋 Meta 為什麼要開源其 AI 技術</a></u></li><li><u><a href="https://www.oschina.net/news/277585" target="_blank">開源日報第 008 期：推動中國開源軟硬件發展的經驗與建議</a></u></li><li><u><a href="https://www.oschina.net/news/277415">開源日報第 007 期：「Linux 中國」 開源社區宣佈停止運營</a></u></li><li><u><a href="https://www.oschina.net/news/277214" target="_blank">開源日報第 006 期：選擇技術棧一定要選擇開源的</a></u></li><li><a href="http://www.oschina.net/news/277040"><u>開源日報第 005 期：RISC-V 萬兆開源交換機發售；npm 存在大量武林外傳視頻</u></a></li><li><u><a href="https://www.oschina.net/news/276864" target="news">開源日報第 004 期：百度輸入法在候選詞區域植入廣告；大神用 Excel 構建 CPU</a></u></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Tue, 20 Feb 2024 03:44:19 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/279351</guid>
            <link>https://www.oschina.net/news/279351</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Steam Audio SDK 完整源代碼現已開源]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">Steam 社區<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsteamcommunity.com%2Fgames%2F596420%2Fannouncements%2Fdetail%2F7745698166044243233" target="_blank">公告稱</a>，隨着 Steam Audio 最新版本（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FValveSoftware%2Fsteam-audio%2Freleases%2Ftag%2Fv4.5.2" target="_blank">v4.5.2</a>）的發佈，Steam Audio SDK 的完整源代碼現已開源。這是 Steam Audio SDK 源代碼的第一個開源版本。</span></p><p><span style="color:#000000">「通過此版本，我們的目標是為開發人員提供更多的控制權，從而為用戶帶來更好的體驗，並希望為使用 Steam Audio 的更廣泛的開發者社區做出有價值的貢獻。」</span></p><p><span style="color:#000000">整個 Steam Audio 代碼庫，包括 SDK 和所有插件，現已在 Apache 2.0 許可證下發布。開發人員可以在商業產品中使用 Steam Audio，並根據自己的許可條款修改或重新分發它，而無需包含源代碼。</span></p><p><span style="color:#000000"><img alt="" height="270" src="https://oscimg.oschina.net/oscnet/up-05ddfd635cb1684b81ccf53468f07d2f90f.png" width="500" referrerpolicy="no-referrer"></span></p><p><span style="color:#000000">官方表示，在獲取了大量來自社區提供的對開源插件（Unity、Unreal 和 FMOD Studio）的有價值的反饋和貢獻之後，他們決定做出這一開源舉措，以希望將同樣的優勢帶到核心 SDK 中。此舉將使得開發人員能夠根據自己的需求定製 SDK，併為使用該技術的每個人提供更好的體驗。</span></p><blockquote><p><span style="color:#000000">我們所從事的功能的選擇通常是由內部項目的需求驅動的。例如，在開發 Half-Life 期間，我們花了大量時間開發混合混響和路徑功能，並將其作為 Steam Audio 4.0.0 的一部分發布。</span></p><p><span style="color:#000000">但這些優先事項可能並不總是與合作伙伴的優先事項一致，因此我們希望消除阻礙合作伙伴實施需要訪問核心 Steam Audio SDK 的空間音頻功能的障礙。例如，我們可能正在修復 Steam Audio 中影響內部項目的性能問題，但合作伙伴可能需要將 Steam Audio 移植到控制枱平台。</span></p><p><span style="color:#000000">將整個 SDK 作為開源提供給合作伙伴，可以讓他們自己管理移植工作，並根據自己的需要進行優化，同時還允許他們在需要時將自己的修改意見反饋回來。</span></p></blockquote><p><span style="color:#000000">接下來，項目團隊還將繼續對 Steam Audio 進行持續改進，包括髮布錯誤修復和新功能。&nbsp;</span></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 20 Feb 2024 03:19:34 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/279335/steam-audio-sdk-opensource</guid>
            <link>https://www.oschina.net/news/279335/steam-audio-sdk-opensource</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Linux 內核成為 CVE 編號機構 (CNA)]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Linux 內核已被接受為 CVE 編號機構 (CNA)，這意味着他們將直接管理內核的 CVE。Linus Torvalds 近日在郵件列表<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flore.kernel.org%2Flkml%2FCAHk-%3Dwi8vZD7EXZfob-yhfDERyfzWxzMOzG9FsOuaKU-v6%2BPHA%40mail.gmail.com%2FT%2F%23u" target="_blank">發佈</a></u>了 Linux 6.8-rc5，並介紹稱文檔添加了 CVE 漏洞處理相關的指南。</p><blockquote><p><img src="https://oscimg.oschina.net/oscnet/up-7db09f50c2a2dac5a652d9899693a817661.png" referrerpolicy="no-referrer"></p><p><em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgit.kernel.org%2Fpub%2Fscm%2Flinux%2Fkernel%2Fgit%2Ftorvalds%2Flinux.git%2Fdiff%2FDocumentation%2Fprocess%2Fcve.rst%3Fid%3D5928d411557ec5d53832cdd39fc443704a3e5b77" target="_blank">CVE 文檔頁面</a></u></em></p></blockquote><p>文檔寫道，Linux 內核開發團隊有能力為潛在的內核安全問題分配 CVE，而分配的 CVE 編號將在 linux-cve-announce 郵件列表上公佈，<strong>修復的安全漏洞才會分配 CVE 編號，未修復的不會自動分配編號</strong>。</p><blockquote><p><img height="1156" src="https://oscimg.oschina.net/oscnet/up-2da79e81f6f9140a562eeb928a92757fe7e.png" width="1400" referrerpolicy="no-referrer"></p><p><em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flore.kernel.org%2Flinux-cve-announce%2F" target="_blank">https://lore.kernel.org/linux-cve-announce/</a></u></em></p></blockquote><p>CVE 是通用漏洞披露 (Common Vulnerabilities and Exposures) 的英文縮寫，列出了已公開披露的各種計算機安全缺陷。CVE 識別號由 CVE 編號管理機構&nbsp;(CNA) 分配。</p><p>任何人都可以從任何地方進行 CVE 報告。無論是供應商、研究人員或是個人用戶，都有可能發現缺陷，並促使他人予以關注。很多供應商都會提供錯誤報告獎勵，以鼓勵相關人員負責任地披露各種安全問題。</p><p>在 Linux 內核成為 CNA 之前，它無法自行管理內核的 CVE 漏洞編號分配。由於內核是系統的底層，幾乎任何錯誤都可能被用於危害內核安全，但當錯誤被修復時，被利用的可能性通常不明顯。過去 CNA 過於謹慎，幾乎為發現或收到的任何安全漏洞分配了 CVE 編號，導致 Linux 內核團隊需要花費大量時間處理許多未造成重大影響的漏洞。</p><p>因此接下來 Linux 內核中未修復的安全漏洞不會提前分配 CVE 編號，只有在漏洞被修復後才會分配 CVE 編號，這樣可以通過正確的方式來追蹤原始修復的 git commit ID。</p><p>延伸閲讀：<u><em><a href="https://www.oschina.net/news/276167/curl-is-a-cna" target="news">curl 項目已被接受為 CVE 編號機構 (CNA)</a></em></u></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 20 Feb 2024 02:59:34 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/279326/linux-kernel-is-a-cna</guid>
            <link>https://www.oschina.net/news/279326/linux-kernel-is-a-cna</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[2026 年傳統搜索引擎流量將下降 25%]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">市場分析公司 Gartner <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.gartner.com%2Fen%2Fnewsroom%2Fpress-releases%2F2024-02-19-gartner-predicts-search-engine-volume-will-drop-25-percent-by-2026-due-to-ai-chatbots-and-other-virtual-agents" target="_blank">指出</a>，生成式 AI 已嚴重威脅傳統搜索引擎。預測到 2026 年，傳統搜索引擎的流量將下降 25%，搜索營銷的市場份額將被人工智能聊天機器人和其他虛擬代理所取代。</span></p><p><img height="261" src="https://oscimg.oschina.net/oscnet/up-a7078c146496ef4a1ec0a21edf9088d52e3.png" width="700" referrerpolicy="no-referrer"></p><p><span style="color:#000000">Gartner 副總裁分析師 Alan Antin 稱，有機搜索和付費搜索是科技營銷人員實現認知和需求生成目標的重要渠道。GenAI 解決方案正在成為替代答案引擎，取代以前可能在傳統搜索引擎中執行的用戶查詢。隨着 GenAI 越來越深入企業的方方面面，這將迫使企業重新思考其營銷渠道戰略。</span></p><blockquote><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000">隨着 GenAI 推動降低內容製作成本，包括關鍵字策略和網站域名權威評分在內的各項活動都將受到影響。搜索引擎算法將進一步重視內容的質量，以抵消人工智能生成內容的數量，因為內容的實用性和質量仍然是有機搜索結果成功的關鍵。</span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000">此外，還將更加重視水印和其他驗證高價值內容的手段。全球各地的政府法規已經開始要求公司對人工智能創建的營銷內容資產承擔責任。這很可能會對搜索引擎如何顯示此類數字內容產生影響。</span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000">公司需要專注於製作對客戶和潛在客戶有用的獨特內容。內容應繼續展示搜索質量評估者的要素，例如專業知識、經驗、權威性和可信度。</span></p></blockquote></div>
                                    ]]>
            </description>
            <pubDate>Tue, 20 Feb 2024 02:26:52 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/279308/gartner-search-engine-2026-ai</guid>
            <link>https://www.oschina.net/news/279308/gartner-search-engine-2026-ai</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Zilliz Cloud 再發新版本：性能提升超 10 倍，AI 應用開發流程再簡化！]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Zilliz Cloud 再發新版本！</p><p>本次新版本的主要內容包括：大幅提升的向量搜索性能（性能提升 10 倍以上）、企業級數據安全和無縫數據集成。新版本發佈後，用戶無需自定義代碼，便可快速順暢地完成非結構化數據處理和索引。此外，Zilliz Cloud 將有效幫助用戶節省成本，簡化支付和採購流程。</p><p>以下為本次發佈的新特性一覽：</p><ul><li><p>Cardinal 搜索引擎</p></li><li><p>Zilliz Cloud 正式升級至 Milvus 2.3 版本</p></li><li><p>基於角色的訪問控制和權限管理（RBAC）</p></li><li><p>Databricks Connector</p></li><li><p>支持 Google Cloud Marketplace 訂閲</p></li><li><p>其他數據安全方面更新</p></li></ul><p><img src="https://assets.zilliz.com/cms-cn/640_2024_02_19_T165818_906_45850c7576.png" alt="" referrerpolicy="no-referrer"></p><h2>01. Cardinal 搜索引擎：搜索速度提升 10 倍，數據容量提升 50%</h2><p>Cardinal 是用現代 C++ 語言和實用的近似最近鄰搜索（ANNS）算法構建的多線程、高效率向量搜索引擎。它同時能夠處理暴搜請求和 ANNS 索引修改請求；處理各種數據格式，包括 FP32、FP16 和 BF16。Cardinal 搜索引擎強調速度和效率，能夠在有限的資源內處理更多用戶請求。</p><p>在推動 Cardinal 引擎創新的過程中，我們始終堅持推動異構計算的原則。團隊對算法進行調優，採用了針對計算密集型操作優化的 low-level 內核，並確保支持多種硬件，包括 x86 和 ARM。Cardinal 利用 x86 的 AVX-512 擴展和 ARM 的 NEON 及 SVE 指令集等尖端技術，提供針對高效計算優化的代碼。這些改進保證了 Cardinal 能夠時刻全力運行，是行業內最快的向量搜索引擎。</p><p>有了 Cardinal 搜索引擎的加持，Zilliz Cloud 實現了 10 倍性能提升（與開源 Milvus 相比），能夠實現超快的查詢速度外加高召回率。無論是處理大型數據集還是對快速響應有高要求，Cardinal 都能為此保駕護航，提升用戶體驗，提升 AI 應用的競爭力。</p><p>「Zilliz Cloud 的性能給我們留下了深刻的印象，它在數據負載大的情況下尤為出色！」Picdmo 的 CEO 兼創始人 Alex Alexander 稱讚道，「採用 Cardinal 搜索引擎後，Zilliz Cloud 性能比上一個版本提升了 2 倍，搜索查詢的速度和效率更驚人！此外，Zilliz Cloud 還提供增強數據安全保障。得益於 Zilliz Cloud，我們搭建的以圖搜圖應用功能變得更強大了。」</p><h2>02. 開箱即用的 Milvus 2.3：生產就緒的高級向量搜索功能</h2><p>經過為期 4 個月的 Beta 階段後，Zilliz Cloud 正式上線了和 Milvus 2.3 相同的功能。目前，Zilliz Cloud 用戶可以在生產環境中使用全新的高級向量搜索和數據管理功能。新版本功能包括：</p><ul><li><p>Cosine 相似度類型： 無需向量歸一化，簡化數據搜索流程。</p></li><li><p>Upsert 數據：提升更新和刪除數據的管理流程效率，適用於頻繁更新數據且追求數據一致性和原子性的場景。</p></li><li><p>範圍搜索（Range Search）: 通過限制查詢向量與其他向量之間的距離，範圍搜索能夠實現對搜索結果的有效細化，適用於搭建推薦引擎的場景。</p></li><li><p>支持 Parquet 文件：提升數據處理能力，支持 Parquet 文件，通過其高效的列式存儲格式，提供更好的查詢性能，適用於具有複雜數據集的場景。</p></li><li><p>支持 Array 數據類型：支持在搜索過程中基於多個屬性進行精確的元數據過濾。在電商領域中，該功能支持根據不同產品標籤進行搜索，為用戶返回相關的搜索結果。</p></li></ul><h2>03. RBAC: 對數據訪問進行細粒度的控制</h2><p>Zilliz Cloud 的 RBAC（角色權限訪問控制）功能提供了一種結構化和可擴展的方法來管理數據訪問權限，保障數據安全。在過去的幾個月中，我們新增了多項相關功能，進一步打磨了 Zilliz Cloud 的 RBAC 系統，使其比市面上所有向量數據庫都更加細緻和全面。</p><p>RBAC 分為兩層：控制層和數據層。在控制層，角色管理集羣、項目、用戶和計費等資源的操作權限。Zilliz Cloud 在控制層設有 4 種角色，其中組織管理員、項目所有者和項目成員是 3 種常用角色：</p><ul><li><p>組織管理員：擁有組織管理權限，包括管理組織設置、支付方式、賬單、組織 API 密鑰等。此外組織管理員還具備所有組織下資源（如：項目）的管理權限。</p></li><li><p>項目管理員：擁有項目管理權限，包括項目設置、項目內所有集羣、項目 API 密鑰等資源。</p></li><li><p>項目成員：擁有項目讀寫權限，包括讀寫項目下所有集羣、查看項目下所有集羣詳情、管理 Collection 和索引等。</p></li></ul><p>在數據層面，角色權限是指在集羣中添加、刪除、修改和訪問數據的能力。Zilliz Cloud 在數據層級提供了 3 種內置角色：管理員（Admin）、只讀（Read-Only）和讀寫（Read-Write），不同角色對集羣數據的讀寫和管理權限不同。此外，Zilliz Cloud 允許用戶創建自定義角色，針對特定 Collection、Partition 或操作分配相應權限，確保數據安全。</p><p>通過 RBAC 功能，企業用戶可以實現對數據訪問進行細粒度的控制，提高數據安全性和合規性，同時促進團隊間的協作，並確保用戶根據其角色和職責擁有對應的訪問權限和級別。</p><h2>04. Databricks Connector：簡化 AI 應用的開發過程</h2><p>Zilliz 一直致力於為用戶提供開箱即用的數據集成解決方案，近期，我們便通過引入 Confluent 和 Airbyte Connector，擴展了 Zilliz Cloud 數據對接和轉換能力。本次版本更新，Zilliz Cloud 再次放大招，集成 Databricks Connector，為 Zilliz 向非結構化數據平台的發展打下了堅實的基礎。</p><p>具體來看，Databricks Connector 提供了一套簡單的數據遷移和轉換解決方案，簡化了 AI 應用的開發過程。無論是你的團隊在研究 ML 並希望更新 Embedding 模型，還是作為個人用戶希望直接將 data frame 記錄從 Spark 上傳至 Milvus，靈活的 Databricks Connector 都能一一滿足。</p><p><img src="https://assets.zilliz.com/cms-cn/640_2024_02_19_T165827_910_2d9e7b4d3d.png" alt="" referrerpolicy="no-referrer"></p><p>此外，通過 Databricks Connector，用戶就可以通過兩種方式將數據導入到 Zilliz Cloud：流式處理（適用於實時更新）或批處理（適用於大型數據集）。訪問鏈接 （<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fzilliz.com%2Fdatabricks_zilliz_demos" target="_blank">https://zilliz.com/databricks_zilliz_demos</a>）瞭解更多細節。</p><h2>05. 支持 GCP Marketplace 訂閲: 簡化支付和採購流程</h2><p>Zilliz Cloud 現已集成 GCP Marketplace，為開發者提供無縫的體驗。用戶可以直接用 Google Cloud 賬號在 Marketplace 中購買 Zilliz Cloud，並根據自己的項目進展情況，按需擴展自己的集羣並支付費用。此外，大家可以在 Zilliz Cloud 的操作界面中設置 GCP Marketplace 作為支付方式，或直接通過 GCP Marketplace 訂閲。</p><h2>06. 其他數據安全方面更新</h2><p>Zilliz Cloud 已經通過了 SOC 2 Type II 和 ISO 27001 數據合規認證。我們始終致力於維持最高數據安全標準，為用戶在 Zilliz Cloud 的體驗保駕護航。</p><p>立即註冊 Zilliz Cloud（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcloud.zilliz.com.cn%2Fsignup" target="_blank">https://cloud.zilliz.com.cn/signup</a>）即可享受 30 天免費試用。如果在使用過程中遇到任何問題，歡迎通過 Zilliz Cloud 支持中心（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsupport.zilliz.com.cn%2Fhc%2Fzh-cn" target="_blank">https://support.zilliz.com.cn/hc/zh-cn</a>）聯繫我們。</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 20 Feb 2024 01:53:27 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/4209276/blog/11044004</guid>
            <link>https://my.oschina.net/u/4209276/blog/11044004</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[「我第一次用 GitHub，別 TM 給我代碼，我只要安裝包」]]>
            </title>
            <description>
                <![CDATA[<div class="content"><blockquote><p><img src="https://oscimg.oschina.net/oscnet/up-f7d84901951a7547060708d4c054cada7b0.png" referrerpolicy="no-referrer"><em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.reddit.com%2Fr%2Fgithub%2Fcomments%2F1at9br4%2Fi_am_new_to_github_and_i_have_lots_to_say%2F" target="_blank">https://www.reddit.com/r/github/comments/1at9br4/i_am_new_to_github_and_i_have_lots_to_say/</a></u></em></p></blockquote><p>上面的截圖來自 reddit 的 GitHub 子版塊。一名自稱是 GitHub 新手的用戶因沒有在倉庫找到安裝包而破口大罵：</p><blockquote><p>我 TM 不需要什麼狗屁代碼，我只想下載這個煞筆應用程序。</p><p>為什麼要提供代碼？這些蠢貨以為每個人都是開發者，都懂代碼。我不是，我也不懂，我只會下載和安裝應用程序。所以這 TM 為什麼要提供代碼？臭煞筆程序員！</p></blockquote><p>根據帖子的內容，這名用戶需要使用的是名為&nbsp;Sherlock 的 Python 命令行工具，該工具可根據輸入的用戶名爬取對應的社交帳號。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-e12784c1a46366dfa33002c85069752e7f1.png" referrerpolicy="no-referrer"></p><p>由於 Sherlock 沒有提供可直接安裝使用的二進制文件，需要用戶安裝 Python 並在命令行環境中使用 —— 這對於新手來説確實有門檻。但複雜的社會你給我去學習！</p><p><img src="https://oscimg.oschina.net/oscnet/up-6c559086d781033dcdc406e44d1536672f5.png" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 19 Feb 2024 03:28:09 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/279155/new-to-github</guid>
            <link>https://www.oschina.net/news/279155/new-to-github</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[谷歌開源 Magika —— AI 驅動的文件類型檢測工具]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>谷歌開源了由 AI 驅動的文件內容類型識別工具，聲稱能夠在毫秒級內精確識別超過 100 種不同文件類型，無論是二進制文件還是文本文件。</p><p>在谷歌內部，Magika 被用於提升用戶安全，幫助對 Gmail、Drive 和安全瀏覽中的文件進行安全檢查和內容策略掃描。</p><p>Magika 是基於深度學習技術的文件類型識別系統，用於準確檢測二進制和文本文件類型。在底層，Magika 採用定製的、高度優化的深度學習模型，即使在 CPU 上運行，也能在幾毫秒內實現精確的文件識別。</p><p><strong>主要特性</strong></p><ul><li>AI 驅動的準確識別：Magika 使用了一個自定義的、高度優化的深度學習模型，使得它能夠在幾毫秒內準確識別出二進制和文本文件的類型，即便是在 CPU 上運行也能快速完成。</li><li>支持多種文件類型：它能夠識別超過 100 種不同的文件類型，包括常見的文檔、圖片、代碼文件和配置文件等。</li><li>高效性能：在包含 100 萬文件的基準測試中，Magika 的識別性能比其他現有工具高出約 20%，尤其在處理文本文件（包括代碼文件和配置文件）時，展現出更大的性能優勢。</li><li>廣泛應用：Magika 在 Google 內部被廣泛用於提高用戶安全，如通過改進的文件類型識別準確性，幫助路由 Gmail、Drive 和安全瀏覽文件到適當的安全和內容政策掃描器。</li><li>簡單易用的安裝和使用：Magika 可以作為 Python 庫和獨立的命令行工具安裝，用戶可以通過簡單的命令行指令 pip install magika 進行安裝，無需 GPU。</li><li>開源和易於集成：Magika 的代碼和模型在 GitHub 上免費提供，並且採用 Apache2 許可證，便於其他軟件改進其文件識別準確性和為研究人員提供大規模識別文件類型的可靠方法。</li><li>即將與 VirusTotal 集成：Magika 將與 VirusTotal 集成，提高平台分析和檢測惡意代碼的效率和準確性，有助於全球網絡安全生態系統的建設。</li></ul><p><strong style="color:#1f2328">Magika 命令行輸出示例</strong></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-5f0a4182522f53b7a69907f3cff050925ff.png" referrerpolicy="no-referrer"></p><p><strong>Magika 性能表現</strong></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-a000ebca68cba1bd5474364a310062139b7.png" referrerpolicy="no-referrer"></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-f6613706bdb006061e8d8b1f16111cd4e17.png" referrerpolicy="no-referrer"></p><p>開源地址：<em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgoogle%2Fmagika" target="_blank">https://github.com/google/magika</a></u></em></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 19 Feb 2024 02:56:37 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/279147/magika-ai-powered-type-identification</guid>
            <link>https://www.oschina.net/news/279147/magika-ai-powered-type-identification</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[資深架構師解讀工行基於 Spring Boot 的專利]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><a href="https://www.oschina.net/news/279004">據國家知識產權局公告</a>，中國工商銀行股份有限公司近日取得一項名為 「基於 SpringBoot 的 web 系統後端實現方法及裝置 「的專利，授權公告號 CN112905176B，申請日期為 2021 年 2 月。</p><p><img src="https://oscimg.oschina.net/oscnet/up-c517204b09e40c8390e687c6f85f1da3004.png" alt="" referrerpolicy="no-referrer"></p><p>這項專利很多程序員表示看不懂，或者直接認為是一個 CRUD 專利。我作為一個架構師，嘗試從<strong>深到淺的解讀一下這個專利</strong>，以及專利背後，工行架構師面臨的架構困境。</p><p>從架構觀點來看，此專利本質上「配置驅動的業務開發專利」，用於解決系統架構中易修改性，可觀測的難題。</p><h2>架構師困境</h2><p>我們知道，架構主要目標是對軟件系統分解成較小更容易實現的元素，如模塊或者子系統，並能讓這些元素協同完成業務需求，對於通常的程序員視角來説，架構貌似就是畫幾個框，然後連上線即可。</p><p>如下是一個分佈式系統最簡單的架構。看着很簡單的倆框一線，但架構師卻需要考慮的非常多，這也是架構師和普通程序員區別</p><p><img src="https://oscimg.oschina.net/oscnet/up-cc49cf84d4b55abce840f054f572acfdf4c.jpg" alt="" referrerpolicy="no-referrer"></p><p>A 服務的架構師需要考慮</p><ul><li>如果服務 B 不可用，服務 A 如何保證高可用.比如宕機，故障，虛機漂移，網絡故障</li><li>如果服務 B 出現阻塞，性能下降，服務 A 如何保性能不受影響</li><li>服務 A 調用服務 B，是否一定需要等待服務 B 的響應，能否解耦 A 和 B 調用，避免前面 2 個問題</li><li>服務 A 如果是通過其尋址服務到 B，如果尋址服務不可用，如何調用服務 B</li></ul><p>B 服務作為服務提供者，架構師需要考慮的更多</p><ul><li>如何保證服務 B 支持大併發的操作</li><li>如何保證服務 B 支持大流量操作，甚至是不正常突發高流量下仍然可用，比如斷網恢復後的高流量</li><li>如果服務 B 的下游不可用，如何給服務 A 提供可用接口</li><li>服務 B 的更新重啓，會對服務 A 產生什麼樣的影響</li><li>如何可觀測服務 B 的調用</li><li>如果服務 B 是公網服務，如何保證安全，數據被授權用戶調用</li></ul><p>B 服務架構師還需要考慮意外情況，如服務 A 的 Bug</p><ul><li>服務 A 應該只調用服務 B 一次，但實際服務 A 調用了多次</li><li>服務 A 調用頻率應該是 1 分鐘一次，但實際 1 秒一次</li><li>服務 A 應該先後順序調用 B 倆次不同接口，但調用順序相反。這種可能是 A 的 Bug，或者是事件驅動架構裏順序問題。</li></ul><p>對這種「倆框一線」如此簡單的架構，可以看到架構師相比於初級程序員，需要考慮較多，需要考慮 13+種情況。這種考慮其實也不是架構師撓禿頭髮想到的，而是基於技術架構的架構質量考慮的，有種説法，説是架構質量驅動了架構設計。</p><p>我認為現在的大部分系統都受到如下架構質量的驅動</p><ul><li>架構的高可用：是系統能夠正常運行的時間比例。可用性 999，即 99.9% ,一年出故障時間為 8.76 小時。</li><li>架構的高性能：系統的響應時間. 相比單體系統，微服務架構，實現一個功能需要調用若干微服務，每個微服務性能影響了系統響應速度。 一個衡量性能的指標 TP95 TODO 和吞吐量。本書涉及單機，分佈式性能優化的戰術實現</li><li>架構的可觀測：通常架構的可觀測指的是能觀測到系統運行情況，粗到監控服務的主機指標，或者每個服務調用次數，細到監測和統計某個關鍵邏輯調用次數，時長等等。</li><li>架構的可修改，比如通過可配置實現系統的可修改，其他還包括使用 EventBus，使用代理（如 API 網關），使用 DSL 語言（最著名的 DSL 應該是 SQL 了,屏蔽了不同數據庫差異)，使用腳本引擎，使用 classloader，dcevm 等熱加載技術。</li></ul><p>其他架構質量還有可部署，可配置，可升級，跨平台，易用性等。可參考<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbbs.huaweicloud.com%2Fblogs%2F261499%3Futm_source%3Dzhihu%26utm_medium%3Dbbs-ex%26utm_campaign%3Dother%26utm_content%3Dcontent" target="_blank"> 自動源代碼質量度量（ISO/IEC 5055）</a>,每個質量屬性都對應了大量的軟件技術戰術和實現，但因為篇幅有限，且不是此的重點內容，在這裏不再像詳細敍述。</p><p>針對工行的專利，之所以前面要這麼囉嗦的提到架構的質量，是因為我認為工行的專利背後，是其工行架構師是解決工行業務系統的架構的倆個質量屬性</p><ul><li>可修改性：當業務需求變化，系統如何能快速調整上線。不需要開發，甚至不需要重啓系統，業務變動也能通過灰度上線，或者能回滾。</li><li>可觀測，這裏的可觀測，指的是業務變動的可觀測，系統經歷了多少次業務變動，每次變動，系統做了什麼調整</li></ul><h2>專利解讀</h2><p>在文章開頭·，提到了專利的本質是「配置驅動的業務開發」，可以從專利摘要中解讀出來</p><p><em>本發明公開了一種基於 SpringBoot 的 web 系統後端實現方法及裝置，其中該方法包括：接收頁面顯示層上送的操作數據；從操作數據中提取操作數據對應的業務 ID 和維護對象 ID；從<strong>數據訪問層</strong>存儲的業務參數表中，獲取與業務 ID 對應的配置信息，所述配置信息包括不同數據字段各自對應的業務處理邏輯、每個數據字段所在的數據表，以及每個數據字段與數據表中表字段的<strong>映射關係</strong>；將維護對象 ID 和業務處理邏輯組合為條件表達式；利用所述條件表達式處理所述操作數據。本發明可以減少後端業務層在開發過程中的變動，降低開發成本，同時提升系統的穩定性。</em></p><p>注意到專利提到了<strong>維護對象 ID</strong>和<strong>業務 ID</strong>，維護對象就是 CRUD 的目標對象，業務 ID 則告訴瞭如何 CRUD，業務 ID 最終將生成多個 SQL 語句 (專利中提到的條件表達式)。這種生成是自動的，基於業務 ID 相關配置，這也是我説的專利本質是<strong>配置驅動開發</strong>。以專利中的例子做説明，業務提交如下數據</p><pre><code class="language-JSON">{
sys_busi_id:"31000",
data_inf:{
    stu_name:"張三",
    stu_sex:"男",
    address:"xxxxx"
}
}
</code></pre><p>工行的系統，通過 sys_busi_id，可以將頁面提交的對象映射成倆個 sql 語句並執行，這樣，不需要後台程序員開發任何代碼</p><pre><code class="language-SQL">insert into stu ("id","name","sex") values (?,?,?);
insert into stu_address ("address","stu_id") values (?,?)
</code></pre><p>講到這裏，你可能比較疑惑，如何生成 SQL 語句和相應的參數呢，這專利中並沒有提到。這可能是在其他專利中，或者是此部分實現已經基於某個開源實現。 或者我解讀這是系統更核心部分，過於強大，不方便對外公佈。我這裏列出供參考的開源實現，如</p><ul><li>APIJSON, 騰訊公司開源的工具，零代碼、全功能、強安全 ORM 庫 ，後端接口和文檔零代碼，前端 (客戶端) 定製返回 JSON 的數據和結構</li><li>低代碼平台，如 JEECG 等低代碼開源平台，無需編碼即可實現全棧業務功能。</li></ul><p>回到業務 ID，上面説了專利並沒有講清楚業務 ID 是如何維護。但跟普通的對象 ID 一樣，也是需要增刪改查，保持歷史版本以支持可觀察，以及可回滾。業務 ID 的數據結構是一個配置，類似如下 JSON ( 注意：以下 JSON 是我的想象，並非專利一部分「）</p><pre><code class="language-JSON">{
    sys_busi_id:"31000",
    mapping_table:{
        stu:["stu_name","stu_sex"],
        stu_address :["address"]
    },
    validate:{
        "stu_sex":{"in":["男"，"女"]}
        "address":"@adressExpression(?)"
    }
}
</code></pre><p>上面的 json 格式中，mapping_table 指示瞭如何字段映射到數據庫表中，validate 則指示了入庫前，服務端如何校驗數據。這推測這裏的 validate 有可能複用了 Spring Boot 的 validation starter。</p><p>如果你還能耐心讀到這裏，你可能更加疑惑，維護業務 ID 豈不是非常麻煩。答案：是的。 想來工行的架構師設計出來的這套系統，程序員都需要了解這一套新的這種 DSL 而不是用 Java 做 CRUD（上面的 JSON，我在架構的可修改裏提到過 DSL），學過 SQL 都知道 SQL 還是比較難學， 學習一套處理業務的專用 DSL 更難，其他難點還有</p><ul><li>是否有可視化界面管理這些配置對象」業務 ID「，比如可視化界面建立業務對象和數據庫表的映射</li><li>如何驗業務 ID 的正確性，比如上面寫的"@adressExpression(?)"，程序員少寫了個」d「</li><li>即使有可視化界面，最終也要導出成 DSL，在驗收或者生產環境上執行生效，DSL 語言可能非常難學</li><li>這種 DSL 需要有版本概念，這在專利中沒有看到提到，但想來應該為了能回滾，應該支持版本概念。</li><li>業務 ID 的修改和上線，應該有一個完整的流程，涉及了產品，QA，項目經理等人審批，發佈上線。可能還需要跟工行已有的 DevOp 系統結合起來。</li></ul><h2>結論</h2><p>儘管維護<strong>業務 ID</strong>非常麻煩，甚至程序員覺得得不償失，但架構的可修改性和可觀測得到了滿足。對於工行這樣一個大體量的公司和它的大體量系統，這個投入還是很划算的，這也是為什麼此基於配置驅動開發的系統能在工行應用並申請為專利的原因。相比起其他低代碼平台，可能功能弱一點，但基於工行特定應用，應該是能滿足的架構可修改性和可觀測</p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 18 Feb 2024 12:04:27 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/xiandafu/blog/11043929</guid>
            <link>https://my.oschina.net/xiandafu/blog/11043929</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[這份判決給軟件開發者吃了定心丸]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="text-align:center">這份判決給軟件開發者吃了定心丸&nbsp;</p><p style="text-align:center">——最高法知產法庭平衡保護軟件開源社區建設和軟件開發者權益受好評</p><p style="text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-bb51b7fb3d2d3dce3dc1df70b6d8a034349.png" referrerpolicy="no-referrer"></p><p>「最高人民法院對本案的妥善處理，合理地界定了 GPLv2（開源協議——記者注）此類開源許可證軟件二次開發者的權利邊界，為我國正在建設有中國特色的開源社區樹立了標杆，是我國軟件開發行業的重要里程碑，意義非凡。」</p><p>2023 年 11 月 22 日，蘇州某網絡科技有限公司總經理劉繼明專程來到最高人民法院知識產權法庭，向合議庭團隊贈送了錦旗與上述感謝信（節選）。</p><p>「你們的判決，提振了軟件研發企業信心，我真正在自己的身上感受到了人民法院‘努力讓人民羣眾在每一個司法案件中感受到公平正義’。」劉繼明握着法官的手激動地表達着感謝。</p><p><span style="color:#2980b9"><strong>是誰泄露了研發祕密？</strong></span></p><p>蘇州某網絡科技有限公司是一家國家重點高新技術企業，自 2009 年起，該公司陸續投入研發經費約 2589 萬元，完成了一款名稱為「OfficeTen」的網關產品系統軟件，並於 2013 年取得國家版權局「OfficeTen1800 系統軟件（V1.8)」的著作權登記證書。該軟件面向的客戶多為中國移動、中國電信等國內大型通信運營商，有廣闊的市場前景。</p><p>直到有一天，他們發現，市場上出現了假李逵。</p><p>2016 年 1 月，蘇州某網絡科技有限公司從浙江某通信科技有限公司的經銷商處購得浙江某通信科技有限公司生產的企業網關一台，經比對，該設備軟件運行結果中存在蘇州某網絡科技有限公司軟件源代碼特殊標記，且兩軟件運行結果存在其他相同的指標。</p><p>是誰泄露了研發祕密？蘇州某網絡科技有限公司深入調查發現，浙江某通信科技有限公司在劉某、吳某從蘇州某網絡科技有限公司離職後，就與二人接觸並將二人聘為其員工。</p><p>劉某、吳某均曾是蘇州某網絡科技有限公司員工，曾分別在蘇州某網絡科技有限公司擔任硬件工程師、嵌入式工程師。二人在職期間是涉案軟件開發項目組的重要成員，均能夠正常接觸到該軟件開發所涉及的技術信息。</p><p>蘇州某網絡科技有限公司深入調查發現，浙江某通信科技有限公司間接設立了關聯網絡公司作為「防火牆」，劉某、吳某名義上受聘於關聯網絡公司，實質上直接為浙江某通信科技有限公司開發網關用軟件。他們非法登錄蘇州某網絡科技有限公司的服務器，下載了涉案軟件的源代碼，使關聯網絡公司在數月時間內完成了與涉案軟件高度相似的被訴軟件；而被訴軟件系專門用於浙江某通信科技有限公司生產的網關產品的嵌入式軟件，浙江某通信科技有限公司在市場上公開銷售相應的網關產品，並直接在各類招標中與蘇州某網絡科技有限公司發生競爭關係，搶奪原本與蘇州某網絡科技有限公司合作的客戶，獲利不菲。</p><p>蘇州某網絡科技有限公司於 2016 年 7 月以吳某、浙江某通信科技有限公司涉嫌侵犯著作權罪向蘇州市公安機關報案。經公安機關委託鑑定機構進行鑑定，被訴軟件與涉案軟件的 1800-c 版本非開源源代碼相同率高達 90.2%，二者實質相似。</p><p>隨後，蘇州某網絡科技有限公司又以浙江某通信科技有限公司等未經許可擅自複製、修改、發行蘇州某網絡科技有限公司享有著作權的涉案軟件為由向江蘇省蘇州市中級人民法院提起訴訟。</p><p>浙江某通信科技有限公司與關聯網絡公司基於 GPLv2 協議提出了不侵權抗辯。蘇州中院認為，該不侵權抗辯不能成立。蘇州中院最終認定侵權成立，據此判令浙江某通信科技有限公司等停止侵權，並賠償蘇州某網絡科技有限公司經濟損失及合理費用。</p><p>浙江某通信科技有限公司和關聯網絡公司不服這份判決，向最高人民法院提起上訴。</p><p><span style="color:#2980b9"><strong>不侵權抗辯是否成立？</strong></span></p><p>浙江某通信科技有限公司等被訴侵權人基於 GPLv2 協議提出的不侵權抗辯是否成立？軟件開發者自身存在一定程度上的違反 GPLv2 協議，是否就一定不享有新研發軟件著作權？二審中，這個問題是主要爭議點。</p><p>據介紹，在軟件行業的普遍操作模式中，軟件開發一般都會涉及開源協議的問題，程序員研發軟件時想達到什麼功能，就去尋找相關的模塊來實現。而這個模塊代碼，很多就是開源代碼，受開源協議約束。</p><p>而開源協議是什麼呢？</p><p>本案涉及的開源協議是 General Public License version 2 （簡稱 GPLv2 協議）。GPLv2 協議的發佈者為自由軟件基金會，該協議是國外一些元老級的程序員撰寫的一種關於軟件使用的許可證，根據其條款，在受到 GPLv2 協議約束的軟件基礎上開發出的其他衍生軟件同樣受到該協議的約束。因此，雖然開發者可以免費下載、複製、修改受該協議約束的程序代碼，但由此開發出的新代碼也要根據該協議的約定保持開源狀態。</p><p>本案的承辦法官孔立明在查找這個協議的過程中，發現它的官方有效文本只有英文版，雖然互聯網上有不同版本的中文翻譯，但部分關鍵條款的譯文並不準確。這個協議的真實含義是什麼？他決定自己翻譯。協議是按照英美合同文件起草方式寫的，裏面充滿着算法和邏輯關係。</p><p>幸虧孔立明法官有過涉外項目英文合同撰寫與談判經歷，也是國際法專業科班出身，才最終把這份雲山霧罩的英文版自己翻譯成了中文。他還在協議官網上把問答板塊的上百個問與答全部梳理了一遍。一番艱苦的努力過後，孔立明對於開源協議的真正內涵以及開源組織對各類法律問題所持觀點、美國及歐洲相關案件情況有了深度瞭解。他在專業法官會議上作了分享。</p><p>該案審判長原曉爽法官告訴記者，專業法官會議討論後認為，開源協議是全球軟件行業高度關注的法律與技術深度交織的複雜疑難問題，需審慎妥善處理此類糾紛，建議合議庭召集行業、學界及有關部門專家召開專項研討會，對涉開源軟件著作權司法保護問題進行深入研討。</p><p>知產法庭副庭長周翔告訴記者，對於今後法院如何審理涉開源軟件知識產權案件，通過專家研討和廣泛聽取各方面意見，思路更加明晰了。辦理此類案件要在加強著作權保護、尊重開發者意思自治、支持鼓勵開源社區建設三者間尋求利益平衡，堅持政治效果、社會效果、法律效果的有機統一。</p><p>結合上述調研成果，最後合議庭達成了一致的觀點。</p><p><span style="color:#2980b9"><strong>涉案軟件著作權是否獲保護？</strong></span></p><p>具體到本案，蘇州某網絡科技有限公司研發的「OfficeTen」軟件是以 OpenWRT 系統軟件（OpenWRT 系統軟件是開源軟件，適用的許可證協議為 GPLv2 協議）為基礎經二次開發形成的衍生軟件，具體可分為兩個部分：<strong>一部分是對 OpenWRT 系統軟件所對應源代碼進行增刪、修改、調整而形成的涉案軟件底層系統（以下簡稱底層系統軟件），另一部分則是與涉案軟件具體功能相對應的新增源代碼形成的上層功能軟件（以下簡稱上層功能軟件）</strong>。</p><p><strong>蘇州某網絡科技有限公司聲稱其在底層系統軟件與上層功能軟件之間採用套接字（socket）與命令行（command line）等技術手段建立了隔離層，且二者之間通信內容不涉及內部數據結構信息，由此使得上層功能軟件構成 GPLv2 協議項下「獨立且分離的」的程序</strong>。</p><p>最高法院知產法庭在二審判決中認定，蘇州某網絡科技有限公司投資研發的名稱為「OfficeTen」的網關產品系統軟件，投入了大量成本，涉案軟件具有獨創性且可以複製，構成著作權法項下的作品，依法應當獲得保護。他人未經蘇州某網絡科技有限公司許可，不得擅自複製、修改、發行涉案軟件，否則將構成侵害涉案軟件著作權的違法行為。</p><p>合議庭依在案證據認定關聯網絡公司在開發被訴軟件過程中複製並修改了蘇州某網絡科技有限公司涉案軟件的源代碼；認定浙江某通信科技有限公司實施了銷售被訴軟件的行為。認定該複製、修改、發行行為均未經蘇州某網絡科技有限公司許可，侵害了其享有的涉案軟件著作權。</p><p>二審判決對雙方爭議的、也是軟件開發者普遍關心的開源軟件與軟件開發者著作權權利邊界問題、違反開源軟件協議與侵害軟件著作權之間法律關係問題等予以旗幟鮮明的正面迴應：「<strong>在軟件尚未被開源、該軟件著作權人認為其軟件不受 GPLv2 協議約束、被訴侵權人則依據 GPLv2 協議提出不侵權抗辯的侵權糾紛中，軟件開發者自身是否違反 GPLv2 協議和是否享有軟件著作權，是相對獨立的兩個法律問題，二者不宜混為一談，以免不合理地剝奪或限制軟件開發者基於其獨創性貢獻依法享有的著作權。</strong>」「但需指出，本案最終認定被訴行為構成侵權並支持涉案軟件權利人部分訴請，並不表明該權利人將來在潛在的違約和/或侵權之訴中可免予承擔其依法應當承擔的違約和/或侵權責任。」</p><p>蘇州某網絡科技有限公司代理人、北京德恆（蘇州）律師事務所合夥人呂成偉律師告訴記者，二審判決後，被訴侵權人在執行階段履行了全部賠償並刊登致歉聲明，權利人的合法利益得到了充分保障。權利人由衷感謝最高人民法院的公正判決，並對最高人民法院知產法庭法官的專業程度與敬業態度致以崇高敬意。</p><p><span style="color:#2980b9"><strong>二審判決價值何在？</strong></span></p><p>「本案作為疑難複雜案件，最大的爭議在於原告要求保護的涉案計算機軟件是根據開源軟件開發而來的。涉及原告的計算機軟件是否應當根據開源許可協議開源，原告未按開源協議開源是否違反了協議，以及被告未經原告許可使用該軟件的行為是否侵權的複雜問題。」華東政法大學教授王遷在接受本報記者專訪時表示，本案判決書對於原告的行為是否違反開源協議甚至構成侵權和被告的行為是否侵犯原告的著作權，進行了合理的區分。尤其可貴之處在於，沒有受到「開源協議」這一看似複雜的因素的幹擾，而是透過現象看本質，牢牢把握著作權法的基本原理，從而作出了符合著作權法規定和立法精神的正確判決。</p><p>開源軟件和以開源軟件為基礎獨立開發的新軟件之間的關係，類似於小説和以小説為基礎拍攝的電影之間的關係，也就是原作品與演繹作品之間的關係。即使演繹作品的創作與後續利用未經原作品著作權人的許可或者超越了許可範圍，從而構成違約和對原作品著作權的侵權，也不影響該演繹作品（侵權演繹作品）受到著作權法的保護，他人未經許可利用該演繹作品仍然構成對該演繹作品著作權的侵權。「本案的判決遵循了基本法理，對今後涉及開源軟件著作權侵權案件的審理闡明瞭基本規則，具有很強的指導意義，值得稱道。」</p><p>「開源協議是全世界計算機軟件開發行業普遍關注的法律問題。最高人民法院在該案中確立的裁判規則為我國計算機行業的健康穩定發展創造了相對寬鬆的法律環境。特別是對於一些中小型軟件開發企業來説，他們可以根據其二次開發過程中作出的獨創性貢獻，依照我國著作權法享有相應的計算機軟件著作權。」全國人大代表、南京外國語學校副校長李鴻彬表示，本案給這些中小企業吃了一顆定心丸，有助於增強企業經營信心，進一步加大研發成本投入。「另一方面，本案也確認了 GPLv2 這一國際法律文本的法律效力，並未否認有關當事人的意思自治。該司法理唸完全符合我國鼓勵計算機軟件開源社區建設的政策導向，很好地平衡了軟件開源社區建設和保護軟件開發者權益這兩方面的利益。」</p><p>來源：<u><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FBReS5aKDPnhNARWofAqUzg" target="_blank">人民法院報</a></em></u></p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 18 Feb 2024 05:53:17 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/279035</guid>
            <link>https://www.oschina.net/news/279035</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[工商銀行取得「基於 SpringBoot 的 web 系統後端實現方法及裝置」專利]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><u><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fepub.cnipa.gov.cn%2FDxb%2FPatentDetail" target="_blank">據國家知識產權局公告</a></u>，中國工商銀行股份有限公司近日取得一項名為「<strong>基於 SpringBoot 的 web 系統後端實現方法及裝置</strong>「的專利，授權公告號 CN112905176B，申請日期為 2021 年 2 月。</p><p><img src="https://oscimg.oschina.net/oscnet/up-c517204b09e40c8390e687c6f85f1da3004.png" referrerpolicy="no-referrer"></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-4c319310d0c88d46dbaeaae98ddfda13249.png" referrerpolicy="no-referrer"></p><p><strong>專利摘要：</strong></p><p>本發明公開了一種基於 SpringBoot 的 web 系統後端實現方法及裝置，其中該方法包括：接收頁面顯示層上送的操作數據；從操作數據中提取操作數據對應的業務 ID 和維護對象 ID；從數據訪問層存儲的業務參數表中，獲取與業務 ID 對應的配置信息，所述配置信息包括不同數據字段各自對應的業務處理邏輯、每個數據字段所在的數據表，以及每個數據字段與數據表中表字段的映射關係；將維護對象 ID 和業務處理邏輯組合為條件表達式；利用所述條件表達式處理所述操作數據。本發明可以減少後端業務層在開發過程中的變動，降低開發成本，同時提升系統的穩定性。</p><p><strong>專利摘要附圖：</strong></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-d9c35128bcaa487fc775e62a18eb221ab15.png" referrerpolicy="no-referrer"></p><p><strong>專利説明書：</strong></p><p><img height="1684" src="https://oscimg.oschina.net/oscnet/up-1a9c96dfe9ae983ccc365fc338d875fa1c7.png" width="1236" referrerpolicy="no-referrer"></p><p><img src="https://oscimg.oschina.net/oscnet/up-74400e9352156515f96f943d3d1b0d38f31.png" referrerpolicy="no-referrer"></p><p><img src="https://oscimg.oschina.net/oscnet/up-506b932cba593703d4451b426dc264fa754.png" referrerpolicy="no-referrer"></p><p><img src="https://oscimg.oschina.net/oscnet/up-e294d82482d7164d48096679a54a8c91976.png" referrerpolicy="no-referrer"></p><p><img src="https://oscimg.oschina.net/oscnet/up-e8fa61af87d64ab4c42e04b7fb8441af90b.png" referrerpolicy="no-referrer"></p><p><img src="https://oscimg.oschina.net/oscnet/up-cc869c2cfdfd6e8dd8cf31c892a48280317.png" referrerpolicy="no-referrer"></p><p><img src="https://oscimg.oschina.net/oscnet/up-5f8ebf82699b938e3a3bacba8adb460b928.png" referrerpolicy="no-referrer"></p><hr><p>Spring Boot 是一個用於開發 Java 應用程序的開源框架，它基於 Spring 框架，旨在簡化 Spring 應用程序的開發和部署過程。Spring Boot 提供了一種快速、便捷的方式來構建獨立的、生產級別的 Spring 應用程序。</p><p><img src="https://oscimg.oschina.net/oscnet/up-2f4fd85fe6e77ccca851eede3e41f6b3aaf.png" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 18 Feb 2024 03:32:09 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/279004</guid>
            <link>https://www.oschina.net/news/279004</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[開放籤電子簽章 2024 年第一季度目標]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="margin-left:0.0001pt; margin-right:0px; text-align:center"><strong><span style="color:#e74c3c">龍年伊始，開放籤祝大家開工大吉，龍年大吉。</span></strong></p><p style="margin-left:0.0001pt; margin-right:0px"><span><span><span><span><span><span><span>開放籤開源工具版將在 24 年第一季度更新驗籤、騎縫簽署、國密簽署等功能，同時開放籤企業版也將上線 PC 端、移動端、API 集成三方面的完整能力。屆時開放籤電子簽章能力將更加完善，從業務至技術層面滿足更多場景，第一季度目標如下：</span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><strong><span><span><span><strong>一、開源工具版更新迭代目標：</strong></span></span></span></strong></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span><span>1、解決商業版權風險，提供基於 PDFBox 的驗籤功能；</span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span><span>2、提升電子簽章用戶體驗，在開源工具版 DEMO 中添加騎縫簽署功能；</span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span><span>3、增加基於國密算法的電子簽名能力；</span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><strong><span><span><span><strong>二、開放籤企業版更新迭代目標：</strong></span></span></span></strong></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span><span>1、上線移動端（H5）簽署功能：</span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span><span>（1）個人用戶可通過手機短信鏈接快速完成簽署；</span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span><span>（2）支持手機端登錄、註冊；</span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span><span>（3）支持手機端查詢簽署文件列表；</span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span><span>（4）支持手機端簽署、填寫、拒籤、拒填文檔。</span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span><span>2、上線 API 接口功能：</span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span><span>（1）支持用戶信息同步；</span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span><span>（2）支持通過接口發起簽署；</span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span><span>（3）支持通過接口簽署、填寫、拒籤、拒填文檔。</span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span><span>3、功能體驗升級：</span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span><span>（1）優化系統已知 bug；</span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span><span>（2）優化用戶體驗流程；</span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span><span>（3）優化系統提示語，提升系統引導能力；</span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span><span>（4）優化產品相關文檔，提升用戶自助應用能力。</span></span></span></span></span></span></span></p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 18 Feb 2024 03:18:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/279002</guid>
            <link>https://www.oschina.net/news/279002</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
    </channel>
</rss>
