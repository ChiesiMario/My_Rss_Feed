<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[開源中國-軟件更新資訊]]>
        </title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="https://rsshub.app/oschina/news/project" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[開源中國-軟件更新資訊 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Fri, 24 Nov 2023 20:57:28 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[CLup 軟件開源版迎來全新版本 5.0.3：技術升級，功能全面優化]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:black; margin-left:0; margin-right:0">各位讀者朋友們，您期待已久的 CLup 軟件開源版全新版本 5.0.3 終於上線啦！這一次，我們帶來了一系列激動人心的更新和改進，旨在為您提供更加高效、穩定的技術支持。讓我們一起看看這次更新都有哪些亮點吧！</p><p style="color:black; margin-left:0; margin-right:0">🌟 <strong>增加創建基於共享存儲的 PolarDB 單庫實例的功能</strong> 在這個版本中，我們新增了創建基於共享存儲的 PolarDB 單庫實例功能。這項功能的加入，將大大提升數據存儲的靈活性和效率，為您的數據庫管理帶來更多可能性。</p><p style="color:black; margin-left:0; margin-right:0">🔧 <strong>新增 pfs 一鍵擴容功能</strong> 為了應對數據量不斷增長的挑戰，我們增加了 pfs 一鍵擴容功能。現在，您可以更加輕鬆快捷地擴大存儲空間，滿足不斷增長的數據需求。</p><p style="color:black; margin-left:0; margin-right:0">🛠️ <strong>修復 PolarDB 加回集羣的問題</strong> 針對用戶反饋的 PolarDB 加回集羣時存在的問題，我們進行了深入的排查和修復。現在，即使沒有選擇重搭，也不會再出現報錯的情況，保證了操作的順暢性。</p><p style="color:black; margin-left:0; margin-right:0">📊 <strong>搭建 PolarDB 數據庫的過程代碼優化</strong> 為了提升用戶體驗，我們對搭建 PolarDB 數據庫的過程代碼進行了全面優化。經過這次升級，您將享受到更加流暢和穩定的數據庫構建過程。</p><p style="color:black; margin-left:0; margin-right:0">⚙️ <strong>數據庫用戶環境變量新增 export</strong> 此外，我們還在數據庫用戶環境中增加了 export 變量，使得環境配置更加高效和便捷。</p><p style="color:black; margin-left:0; margin-right:0">這次更新，我們聚焦於提升軟件的整體性能和用戶體驗。我們始終相信，不斷的技術創新和優化，是我們贏得用戶信賴的關鍵。感謝大家對 CLup 軟件的持續關注和支持。現在就去體驗全新版本的強大功能吧！</p><p style="color:black; margin-left:0; margin-right:0">期待您的反饋，讓我們一起見證 CLup 軟件的不斷成長和進步！</p><p style="color:black; margin-left:0; margin-right:0">產品官網：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.csudata.com%2Fclup">https://www.csudata.com/clup</a></p><p style="color:black; margin-left:0; margin-right:0">官方文檔：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.csudata.com%2Fclup%2Fmanual">https://www.csudata.com/clup/manual</a></p><p style="color:black; margin-left:0; margin-right:0">開源版 Gitee 地址：</p><ul><li><p>server: https://gitee.com/csudata/clup</p></li><li><p>agent: https://gitee.com/csudata/clup-agent</p></li></ul><p style="color:black; margin-left:0; margin-right:0">開源版 Github 地址</p><ul><li><p>server：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcsudata%2Fclup">https://github.com/csudata/clup</a></p></li><li><p>agent：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcsudata%2Fclup-agent">https://github.com/csudata/clup-agent</a></p></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Thu, 23 Nov 2023 10:22:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/268013/clup-5-0-3-released</guid>
            <link>https://www.oschina.net/news/268013/clup-5-0-3-released</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[🎉 Furion 通過 ⌈中國電子技術標準化研究院⌋ 成熟度評估，v4.9.1.7 發佈]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Ffurion.baiqian.ltd%2F" target="_blank"><img height="386" src="https://oscimg.oschina.net/oscnet/up-5121c0c34bdb98e479b05913048ca480f0b.png" width="500" referrerpolicy="no-referrer"></a></p><h2>成熟度評估</h2><p>2023 年 11 月 17 日，Furion v4.8.8 版本獲得，中國電子技術標準化研究院，開源項目成熟度評估證書。</p><p><img height="708" src="https://oscimg.oschina.net/oscnet/up-7a52dd173b0d29da38b0a327adfdb23461a.png" width="500" referrerpolicy="no-referrer"></p><h2>項目信息</h2><ul><li>Gitee：<strong><a href="https://gitee.com/dotnetchina/Furion">https://gitee.com/dotnetchina/Furion</a></strong></li><li>Github：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FMonkSoul%2FFurion" target="_blank">https://github.com/MonkSoul/Furion</a></li><li>文檔：<strong><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Ffurion.baiqian.ltd%2F" target="_blank">http://furion.baiqian.ltd/</a></strong></li></ul><h2>本期更新</h2><blockquote><p style="margin-left:12px; margin-right:0">更新日誌：<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Ffurion.baiqian.ltd%2Fdocs%2Fupgrade%2F" target="_blank">http://furion.baiqian.ltd/docs/upgrade/</a></p></blockquote><ul><li><p style="margin-left:0; margin-right:0"><strong>新特性</strong></p><ul><li>[新增] 規範化處理自動過濾<span>&nbsp;</span><code>SSE</code><span>&nbsp;</span>請求、文件請求、圖片請求<span>&nbsp;</span>4.9.1.6<span>&nbsp;</span>⏱️2023.11.22<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/issues/I8IP6D">#I8IP6D</a></li><li>[新增]<span>&nbsp;</span><code>[AppDbContext]</code><span>&nbsp;</span>特性支持<span>&nbsp;</span><code>UseSnakeCaseNaming</code><span>&nbsp;</span>屬性配置表名使用蛇形命名<span>&nbsp;</span>4.9.1.5<span>&nbsp;</span>⏱️2023.11.20<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/issues/I8HGR2">#I8HGR2</a><span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/pulls/863">!863</a></li><li>[新增] 時間戳模型綁定器將時間戳轉換為<span>&nbsp;</span><code>DateTime/DateTimeOffset</code><span>&nbsp;</span>類型<span>&nbsp;</span>4.9.1.5<span>&nbsp;</span>⏱️2023.11.20<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/df3053cf081d5e4d8eb63d567ed95c45267e0969">df3053c</a></li><li>[新增]<span>&nbsp;</span><code>Newtonsoft.Json</code><span>&nbsp;</span>自動將時間戳轉換為<span>&nbsp;</span><code>DateTime/DateTimeOffset</code><span>&nbsp;</span>類型<span>&nbsp;</span>4.9.1.3<span>&nbsp;</span>⏱️2023.11.17<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/78a589d99eb5985b576e4c96acd6e4890391d6ff">78a589d</a></li><li>[新增]<span>&nbsp;</span><code>System.Text.Json</code><span>&nbsp;</span>自動將時間戳轉換為<span>&nbsp;</span><code>DateTime/DateTimeOffset</code><span>&nbsp;</span>類型<span>&nbsp;</span>4.9.1.2<span>&nbsp;</span>⏱️2023.11.17<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/abd5196f5c5160a5df96dad80c7c5aa51b96d5b9">abd5196</a></li><li>[新增]<span>&nbsp;</span><code>IRepositoryFactory&lt;TEntity, TDbContextLocator&gt;</code><span>&nbsp;</span>倉儲功能，解決在<span>&nbsp;</span><code>Blazor</code><span>&nbsp;</span>中使用<span>&nbsp;</span><code>EFCore</code><span>&nbsp;</span>問題<span>&nbsp;</span>4.9.1.1<span>&nbsp;</span>⏱️2023.11.16<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/4285ec0b8debc2d71c7f978126cb3dc394a8ad30">4285ec0</a><span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flearn.microsoft.com%2Fzh-cn%2Faspnet%2Fcore%2Fblazor%2Fblazor-ef-core%3Fview%3Daspnetcore-7.0" target="_blank">文檔説明</a></li><li>[新增] 補償策略模塊功能<span>&nbsp;</span>4.9.1<span>&nbsp;</span>⏱️2023.11.15<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/tree/v4/framework/Furion/RescuePolicy">【源碼地址】</a><span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/dfc63e7f0ffd2e03653f11a3e49a21646902ddc4">dfc63e7</a></li></ul></li><li><p style="margin-left:0; margin-right:0"><strong>突破性變化</strong></p><ul><li>[升級]<span>&nbsp;</span><code>Serilog</code><span>&nbsp;</span>拓展包依賴至<span>&nbsp;</span><code>8.0.0</code><span>&nbsp;</span>版本，<strong>移除<span>&nbsp;</span><code>.NET8.0</code><span>&nbsp;</span>的<span>&nbsp;</span><code>IWebHostBuilder.UseSerilogDefault</code><span>&nbsp;</span>拓展方法</strong><span>&nbsp;</span>4.9.1.1<span>&nbsp;</span>⏱️2023.11.16<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/5ab3e43722a298db56a86792dde301adf1f3fe7f">5ab3e43</a></li><li>[升級]<span>&nbsp;</span><strong>框架底層適配<span>&nbsp;</span><code>.NET8.0</code><span>&nbsp;</span>正式版</strong><span>&nbsp;</span>4.9.1<span>&nbsp;</span>⏱️2023.11.15</li><li>[升級]<span>&nbsp;</span><strong>框架腳手架適配<span>&nbsp;</span><code>.NET8.0</code><span>&nbsp;</span>正式版</strong><span>&nbsp;</span>4.9.1<span>&nbsp;</span>⏱️2023.11.15</li></ul></li><li><p style="margin-left:0; margin-right:0"><strong>問題修復</strong></p><ul><li>[修復] 定時任務設置觸發器<span>&nbsp;</span><code>Result</code><span>&nbsp;</span>後作業執行異常不能重置問題<span>&nbsp;</span>4.9.1.7<span>&nbsp;</span>⏱️2023.11.24<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/147215f1631f58fca900f17cca5695f9431555e5">147215f</a></li><li>[修復]<span>&nbsp;</span><code>JWTEncryption.GetJWTSettings()</code><span>&nbsp;</span>獨立使用時無法獲取自定義配置<span>&nbsp;</span>4.9.1.4<span>&nbsp;</span>⏱️2023.11.18<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/c045e084670a98f71d5ea5ed55ca5cbbfc981e0b">c045e08</a></li></ul></li><li><p style="margin-left:0; margin-right:0"><strong>文檔</strong></p><ul><li>[更新] 倉儲文檔、<code>Db</code><span>&nbsp;</span>靜態類文檔、腳手架文檔、<code>.NET7</code><span>&nbsp;</span>升級<span>&nbsp;</span><code>.NET8</code><span>&nbsp;</span>文檔、<code>JSON</code><span>&nbsp;</span>序列化文檔、<code>Docker</code><span>&nbsp;</span>部署文檔、數據庫上下文文檔</li></ul></li><li><p style="margin-left:0; margin-right:0"><strong>貢獻者</strong></p><ul><li>zuohuaijun (<a href="https://gitee.com/zuohuaijun">@zuohuaijun</a>)<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/pulls/865">!865</a></li><li>anliuty (<a href="https://gitee.com/www.fengyunmy.com">@anliuty</a>)<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/pulls/863">!863</a></li><li>風雲明月 (<a href="https://gitee.com/www.fengyunmy.com">@www.fengyunmy.com</a>)<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/pulls/862">!862</a></li></ul></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Thu, 23 Nov 2023 07:49:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/267981/furion-4-9-1-7-released</guid>
            <link>https://www.oschina.net/news/267981/furion-4-9-1-7-released</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[AutoMQ for RocketMQ v0.0.3-alpha 版本發佈]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:var(--text-primary); margin-left:0px; margin-right:0px">這個發佈版本主要集中在穩定性改進方面：</p><ol><li>改進持續集成（CI）流程併為每個拉取請求（PR）實施端到端（E2E）測試。</li><li>引入追蹤和性能分析，並收集更多的指標數據。</li><li>提升 s3stream 的性能。</li><li>修復一些 bug。</li></ol><h2>關於我們</h2><p>AutoMQ 是一家專業的消息隊列和流存儲軟件服務供應商。AutoMQ 開源的 AutoMQ Kafka 和 AutoMQ RocketMQ 基於雲對 Apache Kafka、Apache RocketMQ 消息引擎進行重新設計與實現，在充分利用雲上的競價實例、對象存儲等服務的基礎上，兌現了雲設施的規模化紅利，帶來了下一代更穩定、高效的消息引擎。此外，AutoMQ 推出的 RocketMQ Copilot 專家系統也重新定義了 RocketMQ 消息運維的新範式，賦能消息運維人員更好的管理消息集羣。</p><p>🌟 GitHub 地址：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FAutoMQ" target="_blank">https://github.com/AutoMQ</a><br> 💻 官網：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.automq.com" target="_blank">https://www.automq.com</a><br> 👀 B 站：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fspace.bilibili.com%2F3546572478482870" target="_blank">AutoMQ 官方賬號</a><br> 🔍 視頻號：AutoMQ</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 23 Nov 2023 07:26:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/267975/automq-for-rocketmq-0-0-3-alpha</guid>
            <link>https://www.oschina.net/news/267975/automq-for-rocketmq-0-0-3-alpha</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[pgAdmin 4 v8.0 發佈，PostgreSQL 開源圖形化管理工具]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">pgAdmin 是 PostgreSQL 領先的開源圖形化管理工具。pgAdmin 4 旨在滿足新手和有經驗的 Postgres 用戶的需求，提供強大的圖形界面，簡化了數據庫對象的創建、維護和使用。</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="color:#000000">pgAdmin 開發團隊日前<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.postgresql.org%2Fabout%2Fnews%2Fpgadmin-4-v80-released-2754%2F" target="_blank">發佈</a>了 pgAdmin 4 v8.0 版本，包括 29 個錯誤修復和新功能。</span><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span><span><span>該版本合併了對 Flask、Werkzeug 和各種其他模塊等基本組件的更新。值得注意的是，Windows 操作系統的默認安裝路徑已更改，並且版本文件夾已被刪除。因此，建議用戶手動卸載以前的版本，以便無縫過渡到新版本。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span><span><span>此版本中的顯着變化包括：</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:left"><span style="color:#000000"><strong>Feature</strong></span></p><ul><li><span style="color:#000000">將當前佈局庫 wcDocker 替換為基於 ReactJS 的 rc-dock。</span></li><li><span style="color:#000000">更改面板選項卡的上下文菜單 - 添加關閉、關閉全部和關閉其他菜單項。</span></li><li><span style="color:#000000">允許關閉所有選項卡，包括 SQL 和屬性。</span></li><li><span style="color:#000000">在各個面板選項卡上設置關閉按鈕，而不是通用按鈕。</span></li></ul><p><span style="color:#000000"><strong style="color:#333333">Bugs/Housekeeping</strong></span></p><ul><li><span style="color:#000000">升級 Flask、Werkzeug 和其他依賴於最新版本 Flask 的模塊。</span></li><li><span style="color:#000000">使用 WITH DROP 選項時，為 ERD 生成的 SQL 中的外鍵添加 DROP SQL。</span></li><li><span style="color:#000000">修復了 psql 未採用服務器屬性中用於連接的角色的問題。</span></li><li><span style="color:#000000">修復了嘗試查看 3D 或非 4326 SRID 幾何圖形後，Geometry Viewer 無法正確渲染幾何圖形的問題。</span></li><li><span style="color:#000000">修復瞭如果 load-server json&nbsp;文件不包含服務器，則默認&nbsp;server-group 被刪除的問題。</span></li><li><span style="color:#000000">修復了當用戶語言在偏好設置中設置為英語以外的任何語言時 Schema Diff&nbsp;不起作用的問題。</span></li><li><span style="color:#000000">修復了 OAUTH_ADDITIONAL_CLAIMS 無法識別包含超過 150 個組的 AzureAD 的問題。</span></li><li><span style="color:#000000">修復導入/導出數據不適用於共享服務器的問題。</span></li><li><span style="color:#000000">修復了在將 pgAdmin 與外部配置數據庫結合使用時調試帶有參數的函數時發生的崩潰問題。</span></li><li><span style="color:#000000">修復了更改服務器密碼在桌面模式下不起作用的問題。</span></li></ul><div style="text-align:start"><div><div style="text-align:left"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="background-color:#ffffff; color:#000000">適用於 Windows 和 macOS 的構建版本現已推出，還提供 Python Wheel、Docker 容器、RPM、DEB 包以及來自&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.pgadmin.org%2Fdownload%2F" target="_blank">tarball 區域</a><span style="background-color:#ffffff; color:#000000">源代碼 tarball。</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="color:#000000">詳情</span>可<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.postgresql.org%2Fabout%2Fnews%2Fpgadmin-4-v78-released-2738%2F" target="_blank">查看更新公告</a>。</p></div></div></div></div>
                                    ]]>
            </description>
            <pubDate>Thu, 23 Nov 2023 07:05:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/267967/pgadmin-4-v80-released</guid>
            <link>https://www.oschina.net/news/267967/pgadmin-4-v80-released</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[是時候拋棄 mybaits 了，國產 sqltoy-orm 5.2.82 發版]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">還在 mybatis？mybatis-plus、plus、plus？不下 20 個了吧？mybaits-plus，mybatis-fluent、mybatis-flex、 mybatis-mp 多少開發者因此不眠？</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">且所有的發力點集中於：為 mybatis 實現 jpa 功能，用 java lambda 模式擬合 sql，建議大家可以深度瞭解一下 sqltoy，相信你真的理解 sqltoy 之後你的世界將「無」ORM，將有限的精力聚焦於更高價值的領域</p><p><strong>開源地址：</strong></p><ul><li>github:&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fchenrenfei%2Fsagacity-sqltoy" target="_blank">https://github.com/sagframe/sagacity-sqltoy</a></li><li>gitee:&nbsp;<a href="https://gitee.com/sagacity/sagacity-sqltoy">https://gitee.com/sagacity/sagacity-sqltoy</a></li><li>idea 插件 (可直接在 idea 中檢索安裝):&nbsp;&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fthreefish%2Fsqltoy-idea-plugins" target="_blank">https://github.com/threefish/sqltoy-idea-plugins</a></li><li>sqltoy 腳手架項目：https://gitee.com/momoljw/sss-rbac-admin</li><li>sqltoy lambda 項目:&nbsp;https://gitee.com/gzghde/sqltoy-plus</li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>更新內容</strong></p><p style="color:#40485b; margin-left:0em; margin-right:0em; text-align:start">1、MapperUtil 增加 copyProperties 對單個對象和對象集合屬性值複製賦值<br> 2、增加 spring.sqltoy.dialectMap&lt;String,String&gt;屬性,提供將特定數據庫方言映射為其它數據庫方言執行<br> 如:OSCAR（神通）映射為 gaussdb</p><div><pre><code><span style="color:#008080">spring</span>:
    <span style="color:#008080">sqltoy</span>:
       <span style="color:#008080">dialectMap</span>:
              <span style="color:#008080">oscar</span>: gaussdb
</code></pre><div>
  &nbsp;
 </div></div><p style="color:#40485b; margin-left:0; margin-right:0; text-align:start">3、強化 in (:inArg) 當 inArg 值是一個字符串時的校驗，比如值為："'a','b'" 則是合法的 (防止 sql 注入)，可以拼接進 sql,否則當一個動態條件參數值 pst.setString(index,inArg)</p><p><strong>s</strong><strong>qltoy-orm 是 JPA 和超強查詢的融合體</strong></p><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsagframe%2Fsagacity-sqltoy%23jpa%25E9%2583%25A8%25E5%2588%2586" target="_blank">JPA 部分</a></h3><ul><li>類似 JPA 的對象化 CRUD、對象級聯加載和新增、更新</li><li>強化 update 操作，提供彈性字段修改能力，不同於 hibernate 先 load 後修改，而是一次數據庫交互完成修改，確保了高併發場景下數據的準確性</li><li>改進了級聯修改，提供了先刪除或者先置無效，再覆蓋的操作選項</li><li>增加了 updateFetch、updateSaveFetch 功能，強化針對強事務高併發場景的處理，類似庫存台賬、資金台賬，實現一次數據庫交互，完成鎖查詢、不存在則插入、存在則修改，並返回修改後的結果</li><li>增加了樹結構封裝，便於統一不同數據庫樹型結構數據的遞歸查詢</li><li>支持分庫分表、支持多種主鍵策略 (額外支持基於 redis 的產生特定規則的業務主鍵)、加密存儲、數據版本校驗</li><li>提供了公共屬性賦值 (創建人、修改人、創建時間、修改時間、租戶)、擴展類型處理等</li><li>提供了多租戶統一過濾和賦值、提供了數據權限參數帶入和越權校驗</li></ul><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsagframe%2Fsagacity-sqltoy%23%25E6%259F%25A5%25E8%25AF%25A2%25E9%2583%25A8%25E5%2588%2586" target="_blank">查詢部分</a></h3><ul><li>極為直觀的 sql 編寫方式，便於從客戶端 &lt;--&gt; 代碼，雙向快速遷移，便於後期變更維護</li><li>支持緩存翻譯、反向緩存匹配 key 代替 like 模糊查詢</li><li>提供了跨數據庫支持能力：不同數據庫的函數自動轉換適配，多方言 sql 根據實際環境自動匹配、多數據庫同步測試，大幅提升了產品化能力</li><li>提供了取 top 記錄、隨機記錄等特殊場景的查詢功能</li><li>提供了最強大的分頁查詢機制：1) 自動優化 count 語句；2) 提供基於緩存的分頁優化，避免每次都執行 count 查詢；3) 提供了獨具特色的快速分頁；4) 提供了並行分頁</li><li>提供了分庫分表能力</li><li>提供了在管理類項目中極為價值的：分組彙總計算、行列轉換 (行轉列、列轉行)、同比環比、樹形排序、樹形彙總，相關算法自然集成</li><li>提供了基於查詢的層次化數據結構封裝</li><li>提供了大量輔助功能：數據脫敏、格式化、條件參數預處理等</li></ul><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsagframe%2Fsagacity-sqltoy%23%25E6%2594%25AF%25E6%258C%2581%25E5%25A4%259A%25E7%25A7%258D%25E6%2595%25B0%25E6%258D%25AE%25E5%25BA%2593" target="_blank">支持多種數據庫</a></h3><ul><li>常規的 mysql、oracle、db2、postgresql、 sqlserver、dm、kingbase、sqlite、h2、 oceanBase、polardb、guassdb、tidb</li><li>支持分佈式 olap 數據庫: clickhouse、StarRocks、greenplum、impala (kudu)</li><li>支持 elasticsearch、mongodb</li><li>所有基於 sql 和 jdbc 各類數據庫查詢</li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>sqltoy 特點介紹：</strong></p><ul><li><strong>sqltoy 的核心構建思想</strong></li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><img alt="" height="868" src="https://oscimg.oschina.net/oscnet/up-a385d72ceb030d705e8e5803ca3cd4c09a1.png" width="1136" referrerpolicy="no-referrer"></p><ul><li><strong>sqltoy 的對比 mybatis (plus) 的核心點：查詢語句編寫、可閲讀性、可維護性</strong></li></ul><p><img alt="" height="923" src="https://oscimg.oschina.net/oscnet/up-05295a7a1813978134a5e49a7cff0f0e1ab.png" width="1873" referrerpolicy="no-referrer"></p><ul><li><strong>對象化 crud 是基礎，但 sqltoy 有針對性的改進：update、updateSaveFetch、updateFetch 等</strong></li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><img alt="" height="845" src="https://oscimg.oschina.net/oscnet/up-6b8e8204061eec3d2096a50e9899548351e.png" width="1745" referrerpolicy="no-referrer"></p><ul><li><strong>sqltoy 的緩存翻譯，大幅減少表關聯簡化 sql，讓你的查詢性能成幾何級提升</strong></li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="闡述 sqltoy 為什麼秒殺 mybatis(plus)" src="https://p3-tt.byteimg.com/origin/pgc-image/85287e14aa3e428fbabe297472596455?from=pc" referrerpolicy="no-referrer"></p><ul><li><strong>極致的分頁，同樣幫助你實現查詢的性能大幅提升</strong></li></ul><ol><li>快速分頁:@fast () 實現先取單頁數據然後再關聯查詢，極大提升速度</li><li>分頁優化器:page-optimize 讓分頁查詢由兩次變成 1.3~1.5 次 (用緩存實現相同查詢條件的總記錄數量在一定週期內無需重複查詢</li><li>sqltoy 的分頁取總記錄的過程不是簡單的 select count (1) from (原始 sql)；而是智能判斷是否變成:select count (1) from 'from 後語句 '， 並自動剔除最外層的 order by</li><li>sqltoy 支持並行查詢：parallel="true"，同時查詢總記錄數和單頁數據，大幅提升性能</li></ol><div><img alt="闡述 sqltoy 為什麼秒殺 mybatis(plus)" src="https://p6-tt.byteimg.com/origin/pgc-image/3d5f7094da154671985dd390f56f6302?from=pc" referrerpolicy="no-referrer"></div><div>
 &nbsp;
</div><ul><li><strong>便利的跨數據庫統計計算：數據旋轉</strong></li></ul><div><img alt="闡述 sqltoy 為什麼秒殺 mybatis(plus)" src="https://p1-tt.byteimg.com/origin/pgc-image/949bc75b5c53441c98284dae2bed11fe?from=pc" referrerpolicy="no-referrer"></div><ul><li><strong>便利的跨數據庫統計計算：無限極分組統計 (含彙總求平均)</strong></li></ul><div><img alt="闡述 sqltoy 為什麼秒殺 mybatis(plus)" src="https://p1-tt.byteimg.com/origin/pgc-image/f5edc52adbbe4a1ca327d9a9b0c5d64c?from=pc" referrerpolicy="no-referrer"></div><ul><li><strong>便利的跨數據庫統計計算：同比環比</strong></li></ul><div><img alt="闡述 sqltoy 為什麼秒殺 mybatis(plus)" src="https://p3-tt.byteimg.com/origin/pgc-image/b9d435e2852644c9a4c9e062cc3d46d7?from=pc" referrerpolicy="no-referrer"></div><div>
 5、樹形表排序彙總
</div><div><p style="margin-left:0; margin-right:0"><img height="274" src="https://oscimg.oschina.net/oscnet/up-1773cce82b98a943d42caaa62f60d80f3d0.png" width="1002" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0"><img height="403" src="https://oscimg.oschina.net/oscnet/up-8717f1c442767b08f2406019ae9b63721cb.png" width="409" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0">6、擴展集成</p><p style="margin-left:0; margin-right:0"><img height="961" src="https://oscimg.oschina.net/oscnet/up-6603ed15ec936dea45c4f6fb7318f4a062b.png" width="1965" referrerpolicy="no-referrer"></p></div></div>
                                    ]]>
            </description>
            <pubDate>Thu, 23 Nov 2023 05:03:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/267947/sqltoy-orm-5-2-82-released</guid>
            <link>https://www.oschina.net/news/267947/sqltoy-orm-5-2-82-released</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[凌鯊 0.6.3 版本更新]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h1>凌鯊 0.6.3 版本更新</h1><ul><li>新增: 新增 swarm 連接功能&nbsp;</li><li>修復: 修復 k8s 終端都是第一次按鍵的問題&nbsp;</li><li>修復: 修復無法調整 k8s statefulset 大小的問題</li></ul><h1>相關截圖</h1><p><img height="750" src="https://oscimg.oschina.net/oscnet/up-416cc5badebd64bb483afb19ed4008bbf0b.png" width="1300" referrerpolicy="no-referrer"></p><p><img height="750" src="https://oscimg.oschina.net/oscnet/up-74f6eb5150615b49d347ebe16d4c2ace727.png" width="1300" referrerpolicy="no-referrer"></p><p><img height="750" src="https://oscimg.oschina.net/oscnet/up-48a75410978ea91b206e48be21d6d8a1e4c.png" width="1300" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 23 Nov 2023 04:35:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/267942/linksaas-0-6-3-released</guid>
            <link>https://www.oschina.net/news/267942/linksaas-0-6-3-released</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Bun 1.0.14 版本發佈：快速文件匹配、改進的依賴安裝與錯誤消息處理]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Bun 的最新版本 1.0.14 帶來了對這個 JavaScript 運行環境的重大改進和新功能。一個重要的新增功能是<code>Bun.Glob</code>，這是一個用於匹配文件和字符串的快速 API，使用 glob 模式。這個功能比流行的 Node.js 庫（如<code>fast-glob</code>或<code>micromatch</code>）的類似功能快三倍​。</p><p>此更新還解決了在執行<code>bun install</code>時遇到的關鍵競爭條件問題。這個問題源於創建用於安裝依賴項的臨時文件名時的一個錯誤，偶爾會導致在同時提取多個版本的同一包時安裝依賴失敗​​。</p><p>此外，新版本改進了<code>node_modules</code>中的 TypeScript 模塊解析。雖然 Bun 通常先加載 TypeScript 文件，再加載 JavaScript 文件，以模仿<code>tsc</code>的行為，但更新確保了當兩者都存在時，<code>node_modules</code>中會優先選擇 JavaScript 文件。這一更改解決了某些 npm 包傳送無法由轉譯器轉譯的 TypeScript 源文件的問題​​。</p><p>此外，Bun 1.0.14 增強了構建失敗時錯誤消息的可讀性。它修復了一個之前只高亮顯示錯誤的第一個字符的錯誤，減少了錯誤消息中不必要的換行，並使構建錯誤的樣式與運行時錯誤的樣式一致​​。</p><p>最後，更新改進了對不支持的 ECMAScript 模塊（ESM）和 CommonJS 特性的錯誤檢測和消息。在早期版本中，Bun 依賴於 JavaScriptCore 的運行時錯誤消息，這有點令人困惑。新版本在構建時檢測這些錯誤，提供更清晰、更有幫助的錯誤消息​​。</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 23 Nov 2023 04:30:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/267941/bun-1-0-14-released</guid>
            <link>https://www.oschina.net/news/267941/bun-1-0-14-released</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Spring Boot 3.2.0 正式發佈]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff; color:#000000">Spring Boot 3.2.0 現已<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fspring.io%2Fblog%2F2023%2F11%2F23%2Fspring-boot-3-2-0-available-now" target="_blank">發佈</a>，此版本添加了大量新功能和改進。</span></p><p><span style="background-color:#ffffff; color:#000000">3.2 版本的一些<strong>亮點</strong>包括：</span></p><ul><li>支持虛擬線程</li><li>對 <span style="background-color:#ffffff; color:#333333">JVM Checkpoint Restore<span>&nbsp;</span></span>的初步支持（項目 CRaC）</li><li>SSL 捆綁包重新加載</li><li>大量可觀察性改進</li><li>支持 RestClient</li><li>支持 JdbcClient</li><li>支持 Jetty 12</li><li>Apache Pulsar 對 Spring 的支持</li><li>對 Kafka 和 RabbitMQ 的 SSL 捆綁支持</li><li>重新設計的嵌套 Jar 處理</li><li>Docker 鏡像構建改進</li></ul><p><strong>依賴升級</strong></p><p><span><span>Spring Boot 3.2 升級到了多個 Spring 項目的新版本，並且還儘可能升級到了其他第三方庫的最新穩定版本。有關詳細信息，可參閲<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fspring-projects%2Fspring-boot%2Fwiki%2FSpring-Boot-3.2.0-Release-Notes%23dependency-upgrades" target="_blank">發行説明</a>。</span></span></p><hr><p><span><span>一些</span></span><span style="background-color:#ffffff; color:#000000">其他更改和改進內容可查看&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fspring-projects%2Fspring-boot%2Fwiki%2FSpring-Boot-3.2.0-Release-Notes" target="_blank">release notes</a>。</p><p><strong>介紹視頻：</strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DdMhpDdR6nHw" target="_blank">https://www.youtube.com/watch?v=dMhpDdR6nHw</a></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 23 Nov 2023 03:47:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/267934/spring-boot-3-2-0-released</guid>
            <link>https://www.oschina.net/news/267934/spring-boot-3-2-0-released</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Xline v0.6.0 發佈，用於元數據管理的分佈式 KV 存儲]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Xline v0.6.0 現已<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxline-kv%2FXline%2Freleases%2Ftag%2Fv0.6.0" target="_blank">發佈</a>。Xline 是一個基於 Curp 協議的，用於管理元數據的分佈式 KV 存儲；旨在實現高性能的數據訪問和跨數據中心場景下的強一致性。</p><p>v0.6.0&nbsp;新版本功能、修復問題以及重構如下：</p><p><strong>新功能</strong></p><ul><li>為 CUPR 共識協議添加成員變更機制（詳情閲讀設計文檔 #<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxline-kv%2FXline%2Fissues%2F306" target="_blank">306</a>）</li><li>實現 cluster server 和&nbsp;client <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxline-kv%2FXline%2Fpull%2F464" target="_blank">#464</a><span style="background-color:#ffffff; color:#1f2328">,<span>&nbsp;</span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxline-kv%2FXline%2Fpull%2F465" target="_blank">#465</a></li><li>實現優雅關機功能。</li><li>實現 xlinctl 與 xline 集羣通信。目前，xlinectl 包括以下功能： 
  <ul><li>Compaction 和 member 命令：已在 pr <span style="background-color:#ffffff; color:#1f2328">#</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxline-kv%2FXline%2Fpull%2F484" target="_blank">484</a> 中實施</li><li>Txn、watch 和 lock 命令：在 pr <span style="background-color:#ffffff; color:#1f2328">#</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxline-kv%2FXline%2Fpull%2F484" target="_blank">428</a>&nbsp;中實現</li><li>Role 命令：在 pr <span style="background-color:#ffffff; color:#1f2328">#</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxline-kv%2FXline%2Fpull%2F427" target="_blank">427</a> 中實現</li><li>User 命令 ：在 pr <span style="background-color:#ffffff; color:#1f2328">#</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxline-kv%2FXline%2Fpull%2F426" target="_blank">426</a> 中實施</li><li>Snapshot 和 auth 命令：在 pr #<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxline-kv%2FXline%2Fpull%2F425" target="_blank">425</a> 中實施</li><li>Delete 和 lease 命令：在 pr #<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxline-kv%2FXline%2Fpull%2F424" target="_blank">424</a> 中實施</li></ul></li></ul><p><strong>Bug 修復</strong></p><ul><li>benchmark client 無法連接服務器 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxline-kv%2FXline%2Fpull%2F462" target="_blank">#462</a></li><li>刪除模擬測試中的停止 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxline-kv%2FXline%2Fpull%2F458" target="_blank">#458</a></li><li>執行順序錯誤 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxline-kv%2FXline%2Fpull%2F454" target="_blank">#454</a></li><li>檢查領導者的密碼 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxline-kv%2FXline%2Fpull%2F435" target="_blank">#435</a></li><li>移除 uncommitted pool 的恢復邏輯 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxline-kv%2FXline%2Fpull%2F419" target="_blank">#419</a></li><li>CURP TLA+ 法定人數大小計算和屬性檢查 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxline-kv%2FXline%2Fpull%2F418" target="_blank">#418</a></li><li>修復 propose 不處理同步錯誤 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxline-kv%2FXline%2Fpull%2F407" target="_blank">#407</a></li></ul><p><strong>重構</strong></p><ul><li>減少代碼重複 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxline-kv%2FXline%2Fpull%2F407" target="_blank">#407</a></li><li>考慮 TLA+ 中請求廣播的交錯狀態 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxline-kv%2FXline%2Fpull%2F429" target="_blank">#429</a></li><li>完善 bench client 的實現 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxline-kv%2FXline%2Fpull%2F496" target="_blank">#496</a></li><li>簡化錯誤處理邏輯 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxline-kv%2FXline%2Fpull%2F480" target="_blank">#480</a></li><li>提高啓動錯誤的可讀性 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxline-kv%2FXline%2Fpull%2F432" target="_blank">#432</a></li><li>在執行和同步後引入命令序列化 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxline-kv%2FXline%2Fpull%2F421" target="_blank">#421</a><span style="background-color:#ffffff; color:#1f2328">,<span>&nbsp;</span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxline-kv%2FXline%2Fpull%2F422" target="_blank">#422</a></li></ul><p><span style="color:#000000"><strong style="color:rgba(0, 0, 0, 0.9)">已知問題</strong>：如果在添加成員後立即關閉羣集，領導節點可能無法正常關閉，會不斷嘗試向關閉的新節點發送條目。詳情可查看&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxline-kv%2FXline%2Fissues%2F526" target="_blank">#526</a><span style="color:#000000">。&nbsp;</span></p><p><span style="color:#000000">更新説明：</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxline-kv%2FXline%2Freleases%2Ftag%2Fv0.6.0" target="_blank">https://github.com/xline-kv/Xline/releases/tag/v0.6.0</a></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 23 Nov 2023 03:20:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/267926/xline-0-6-0-released</guid>
            <link>https://www.oschina.net/news/267926/xline-0-6-0-released</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Qt Creator 12 發佈]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Qt Creator 12 現已發佈，一些亮點更新內容如下：</p><h4><strong>新功能</strong></h4><p><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.qt.io%2Fqtcreator%2Fcreator-how-to-explore-compiler-code.html" target="_blank">集成 Compiler Explorer</a></strong></p><p><strong><img alt="" height="337" src="https://oscimg.oschina.net/oscnet/up-f4c52d1dd0998cbb8758b94fa724765e17a.webp" width="500" referrerpolicy="no-referrer"></strong></p><p>使用&nbsp;Tools &gt; Compiler Explorer &gt; Open Compiler Explorer&nbsp;打開集成了 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgodbolt.org%2F" target="_blank">https://godbolt.org</a> 的 Compiler Explorer 的編輯器。當你編寫代碼時，Qt Creator 會要求 Compiler Explorer 對代碼進行編譯、生成彙編，並選擇性地執行代碼，然後向你顯示結果，<span style="background-color:#ffffff; color:#09102b">就像在其網站上一樣。</span>你可以打開多個編輯器並配置不同的編譯器。將包括設置在內的文檔保存為 .qtce 文件，以便以後共享或繼續實驗。</p><p>該插件默認為禁用，因此首先要在 Help &gt; About Plugins &gt; CompilerExplorer (or Qt Creator &gt; About Plugins &gt; CompilerExplorer on macOS) 中啓用該插件。</p><p><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.qt.io%2Fqtcreator%2Fcreator-how-to-debug-cmake-files.html" target="_blank">CMake Debugging</a>&nbsp;和&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.qt.io%2Fqtcreator%2Fcreator-how-to-profile-cmake-code.html" target="_blank">Profiling</a></strong></p><p style="margin-left:0; margin-right:0; text-align:start"><span><span><span><span><span><span style="color:#09102b"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>CMake 3.27 及更高版本包含通過 Debug Adapter Protocol (DAP) 進行調試的功能。Qt Creator 12 通過 Debug mode &gt; DAP 中的 DAP 實現了調試，這意味着你現在可以在項目的 CMake 文件中設置斷點並調試 CMake 的配置過程。還可以使用 Debug &gt; Start Debugging &gt; Start CMake Debugging 更直接地觸發 CMake 調試，而不是通過「Debug」模式。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="margin-left:0; margin-right:0; text-align:start"><span><span><span><span><span><span style="color:#09102b"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>此外，新的 Analyze &gt; CMake Profiler 可在 profiling 模式下啓動 CMake（自 CMake 3.18 起可用），並在 Qt Creator 的跟蹤文件查看器中打開結果。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.qt.io%2Fqtcreator%2Fcreator-how-to-record-screens.html" target="_blank">Screen recording</a></strong></p><p style="margin-left:0; margin-right:0; text-align:start"><span><span><span><span><span><span style="color:#09102b"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>通過 ScreenRecorder 插件以實現輕鬆創建屏幕（部分）錄音，用於錯誤報告、共享、博客文章等。該插件默認處於禁用狀態，可在&nbsp;Help &gt; About Plugins &gt; ScreenRecorder (or Qt Creator &gt; About Plugins &gt; ScreenRecorder on macOS)&nbsp;<span><span><span><span>中</span></span></span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.qt.io%2Fqtcreator%2Fcreator-how-to-enable-plugins.html" target="_blank">啓用該插件</a>。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="margin-left:0; margin-right:0; text-align:start"><span><span><span><span><span><span style="color:#09102b"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>更多詳情可<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.qt.io%2Fblog%2Fqt-creator-12-released" target="_blank">查看官方公告</a>。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 23 Nov 2023 02:57:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/267922/qt-creator-12-released</guid>
            <link>https://www.oschina.net/news/267922/qt-creator-12-released</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[egui 0.24 發佈，面向 Web 和原生應用的 Rust GUI 庫]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>egui 是易於使用、可移植的即時模式 (immediate mode) GUI 庫，採用 Rust 編寫，提供了一種簡單而直觀的方式來創建圖形用戶界面，並且可運行在 Web 和原生應用中。</p><p><img src="https://oscimg.oschina.net/oscnet/up-051b7caef2c757433d4cec01c2d77678d2d.gif" referrerpolicy="no-referrer"></p><p>在線體驗：<em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.egui.rs%2F" target="_blank">https://www.egui.rs/</a></u></em></p><p>最新發布的&nbsp;egui 0.24 新增了許多新功能和改進，包括：</p><ul><li><strong>添加<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.rs%2Fegui%2Flatest%2Fegui%2Fviewport%2Findex.html" target="_blank"><code>viewport</code>API</a>&nbsp;(<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Femilk%2Fegui%2Fpull%2F3172" target="_blank">#3172</a>)</strong>，為受支持的後端（如<code>eframe</code>）生成多個原生窗口</li><li>支持使用類似於瀏覽器中的快捷鍵（Cmd+Plus, Cmd+Minus 或 Cmd+0）輕鬆縮放任何 egui 應用程序</li><li>默認隱藏滾動條，直到將鼠標懸停在滾動區域 (<code>ScrollArea</code>) 上</li></ul><p><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Femilk%2Fegui%2Freleases%2Ftag%2F0.24.0" target="_blank">詳情查看 Release Notes</a></u>。</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 23 Nov 2023 02:47:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/267921/egui-0-24-released</guid>
            <link>https://www.oschina.net/news/267921/egui-0-24-released</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Wow 2.8.1 發佈，讓領域驅動設計變得觸手可得]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>基於 DDD、EventSourcing 的現代響應式 CQRS 架構微服務開發框架</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FAhoo-Wang%2FWow%2Fblob%2Fmvp%2FLICENSE"><img alt="License" src="https://img.shields.io/badge/license-Apache%202-4EB1BA.svg" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FAhoo-Wang%2FWow%2Freleases"><img alt="GitHub release" src="https://img.shields.io/github/release/Ahoo-Wang/Wow.svg" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fapp.codacy.com%2Fgh%2FAhoo-Wang%2FWow%2Fdashboard%3Futm_source%3Dgh%26utm_medium%3Dreferral%26utm_content%3D%26utm_campaign%3DBadge_grade"><img alt="Codacy Badge" src="https://app.codacy.com/project/badge/Grade/cfc724df22db4f9387525258c8a59609" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fcodecov.io%2Fgh%2FAhoo-Wang%2FWow"><img alt="codecov" src="https://codecov.io/gh/Ahoo-Wang/Wow/branch/main/graph/badge.svg?token=uloJrLoQir" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FAhoo-Wang%2FWow"><img alt="Integration Test Status" src="https://github.com/Ahoo-Wang/Wow/actions/workflows/integration-test.yml/badge.svg" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FKotlinBy%2Fawesome-kotlin"><img alt="Awesome Kotlin Badge" src="https://kotlin.link/awesome-kotlin.svg" referrerpolicy="no-referrer"></a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><strong>領域驅動&nbsp;</strong><span>&nbsp;</span>|&nbsp;<span>&nbsp;</span><strong>事件驅動</strong><span>&nbsp;&nbsp;</span>|<span>&nbsp;&nbsp;</span><strong>測試驅動</strong><span>&nbsp;&nbsp;</span>|<span>&nbsp;&nbsp;</span><strong>聲明式設計</strong><span>&nbsp;</span>｜<span>&nbsp;</span><strong>響應式編程</strong><span>&nbsp;</span>｜<span>&nbsp;</span><strong>命令查詢職責分離</strong><span>&nbsp;</span>｜<span>&nbsp;</span><strong>事件溯源</strong></p><h2>更新內容 🎉 🎉 🎉</h2><ul><li>特新: 提升代碼覆蓋率</li><li>案例: 新增鎖定金額（<code>LockAmount</code>）命令 (經典 DDD 銀行轉賬案例（JAVA))</li><li>依賴: 更新<span>&nbsp;</span><code>org.springframework.boot:spring-boot-dependencies</code><span>&nbsp;</span>版本<span>&nbsp;</span><code>v3.1.6</code></li><li>依賴: 更新<span>&nbsp;</span><code>kotlin</code><span>&nbsp;</span>版本<span>&nbsp;</span><code>v1.9.21</code></li><li>依賴: 更新<span>&nbsp;</span><code>org.testcontainers:testcontainers-bom</code><span>&nbsp;</span>版本<span>&nbsp;</span><code>v1.19.3</code></li></ul><h2>架構圖</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-Architecture" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Architecture.svg" referrerpolicy="no-referrer"></p><h2>性能測試 (Example)</h2><ul><li>測試代碼：<a href="https://gitee.com/AhooWang/Wow/blob/main/example">Example</a></li><li>測試場景：加入購物車、下單</li><li>命令發送等待模式（<code>WaitStrategy</code>）：<code>SENT</code>、<code>PROCESSED</code></li></ul><h3>部署</h3><ul><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/perf/redis.yaml">Redis</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/perf/mongo.yaml">MongoDB</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/perf/kafka.yaml">Kafka</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/perf/config/mongo_kafka_redis.yaml">Application-Config</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/perf/deployment.yaml">Application-Deployment</a></li></ul><h3>測試報告</h3><h4>加入購物車</h4><ul><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/request/AddCartItem.http">請求</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/document/example/perf/Example.Cart.Add@SENT.pdf">詳細報告 (PDF)-SENT</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/document/example/perf/Example.Cart.Add@PROCESSED.pdf">詳細報告 (PDF)-PROCESSED</a></li></ul><blockquote><p style="margin-left:0; margin-right:0"><code>WaitStrategy</code>:<span>&nbsp;</span><code>SENT</code></p></blockquote><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="SENT" src="https://gitee.com/AhooWang/Wow/raw/main/document/example/perf/Example.Cart.Add@SENT.png" referrerpolicy="no-referrer"></p><blockquote><p style="margin-left:0; margin-right:0"><code>WaitStrategy</code>:<span>&nbsp;</span><code>PROCESSED</code></p></blockquote><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="PROCESSED" src="https://gitee.com/AhooWang/Wow/raw/main/document/example/perf/Example.Cart.Add@PROCESSED.png" referrerpolicy="no-referrer"></p><h4>下單</h4><ul><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/request/CreateOrder.http">請求</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/document/example/perf/Example.Order.Create@SENT.pdf">詳細報告 (PDF)-SENT</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/document/example/perf/Example.Order.Create@PROCESSED.pdf">詳細報告 (PDF)-PROCESSED</a></li></ul><blockquote><p style="margin-left:0; margin-right:0"><code>WaitStrategy</code>:<span>&nbsp;</span><code>SENT</code></p></blockquote><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="SENT" src="https://gitee.com/AhooWang/Wow/raw/main/document/example/perf/Example.Order.Create@SENT.png" referrerpolicy="no-referrer"></p><blockquote><p style="margin-left:0; margin-right:0"><code>WaitStrategy</code>:<span>&nbsp;</span><code>PROCESSED</code></p></blockquote><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="PROCESSED" src="https://gitee.com/AhooWang/Wow/raw/main/document/example/perf/Example.Order.Create@PROCESSED.png" referrerpolicy="no-referrer"></p><h2>事件源</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-EventSourcing" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/EventSourcing.svg" referrerpolicy="no-referrer"></p><h2>可觀測性</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-Observability" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/OpenTelemetry.png" referrerpolicy="no-referrer"></p><h2>OpenAPI (Spring WebFlux 集成)</h2><blockquote><p style="margin-left:0; margin-right:0">自動註冊<span>&nbsp;</span><strong>命令</strong><span>&nbsp;</span>路由處理函數 (<code>HandlerFunction</code>) ，開發人員僅需編寫領域模型，即可完成服務開發。</p></blockquote><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-Spring-WebFlux-Integration" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/OpenAPI-Swagger.png" referrerpolicy="no-referrer"></p><h2>測試套件：80%+ 的測試覆蓋率輕而易舉</h2><blockquote><p style="margin-left:0; margin-right:0">Given -&gt; When -&gt; Expect .</p></blockquote><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-CI-Flow" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/CI-Flow.png" referrerpolicy="no-referrer"></p><h2>前置條件</h2><ul><li>理解<span>&nbsp;</span><strong>領域驅動設計</strong>：《實現領域驅動設計》、《領域驅動設計：軟件核心複雜性應對之道》</li><li>理解<span>&nbsp;</span><strong>命令查詢職責分離</strong>（CQRS）</li><li>理解<span>&nbsp;</span><strong>事件源架構</strong></li><li>理解<span>&nbsp;</span><strong>響應式編程</strong></li></ul><h2>特性</h2><ul><li><span>&nbsp;</span>Aggregate Modeling 
  <ul><li><span>&nbsp;</span>Single Class</li><li><span>&nbsp;</span>Inheritance Pattern</li><li><span>&nbsp;</span>Aggregation Pattern</li></ul></li><li><span>&nbsp;</span>Saga Modeling 
  <ul><li><span>&nbsp;</span><code>StatelessSaga</code></li></ul></li><li><span>&nbsp;</span>Test Suite 
  <ul><li><span>&nbsp;</span>兼容性測試規範（TCK）</li><li><span>&nbsp;</span><code>AggregateVerifier</code></li><li><span>&nbsp;</span><code>SagaVerifier</code></li></ul></li><li><span>&nbsp;</span>EventSourcing 
  <ul><li>EventStore 
    <ul><li><span>&nbsp;</span>MongoDB (Recommend)</li><li><span>&nbsp;</span>R2dbc 
      <ul><li><span>&nbsp;</span>Database Sharding</li><li><span>&nbsp;</span>Table Sharding</li></ul></li><li><span>&nbsp;</span>Redis</li></ul></li><li>Snapshot 
    <ul><li><span>&nbsp;</span>MongoDB</li><li><span>&nbsp;</span>R2dbc 
      <ul><li><span>&nbsp;</span>Database Sharding</li><li><span>&nbsp;</span>Table Sharding</li></ul></li><li><span>&nbsp;</span>ElasticSearch</li><li><span>&nbsp;</span>Redis (Recommend)</li></ul></li></ul></li><li><span>&nbsp;</span>命令等待策略（<code>WaitStrategy</code>） 
  <ul><li><span>&nbsp;</span><code>SENT</code><span>&nbsp;</span>: 命令發送成功後發送完成信號</li><li><span>&nbsp;</span><code>PROCESSED</code><span>&nbsp;</span>: 命令處理完成後發送完成信號</li><li><span>&nbsp;</span><code>SNAPSHOT</code><span>&nbsp;</span>: 快照生成完成後發送完成信號</li><li><span>&nbsp;</span><code>PROJECTED</code><span>&nbsp;</span>: 命令產生的事件被投影后發送完成信號</li></ul></li><li><span>&nbsp;</span>CommandBus 
  <ul><li><span>&nbsp;</span><code>InMemoryCommandBus</code></li><li><span>&nbsp;</span><code>KafkaCommandBus</code><span>&nbsp;</span>(Recommend)</li><li><span>&nbsp;</span><code>RedisCommandBus</code></li><li><span>&nbsp;</span><code>LocalFirstCommandBus</code></li></ul></li><li><span>&nbsp;</span>DomainEventBus 
  <ul><li><span>&nbsp;</span><code>InMemoryDomainEventBus</code></li><li><span>&nbsp;</span><code>KafkaDomainEventBus</code><span>&nbsp;</span>(Recommend)</li><li><span>&nbsp;</span><code>RedisDomainEventBus</code></li><li><span>&nbsp;</span><code>LocalFirstDomainEventBus</code></li></ul></li><li><span>&nbsp;</span>StateEventBus 
  <ul><li><span>&nbsp;</span><code>InMemoryStateEventBus</code></li><li><span>&nbsp;</span><code>KafkaStateEventBus</code><span>&nbsp;</span>(Recommend)</li><li><span>&nbsp;</span><code>RedisStateEventBus</code></li><li><span>&nbsp;</span><code>LocalFirstStateEventBus</code></li></ul></li><li><span>&nbsp;</span>Spring 集成 
  <ul><li><span>&nbsp;</span>Spring Boot Auto Configuration</li><li><span>&nbsp;</span>Automatically register<span>&nbsp;</span><code>CommandAggregate</code><span>&nbsp;</span>to<span>&nbsp;</span><code>RouterFunction</code></li></ul></li><li><span>&nbsp;</span>可觀測性 
  <ul><li><span>&nbsp;</span>OpenTelemetry</li></ul></li><li><span>&nbsp;</span>OpenAPI</li><li><span>&nbsp;</span><code>WowMetadata</code><span>&nbsp;</span>Generator 
  <ul><li><span>&nbsp;</span><code>wow-compiler</code></li></ul></li></ul><h2>Example</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/AhooWang/Wow/blob/main/example">Example</a></p><h2>單元測試套件</h2><h3>80%+ 的測試覆蓋率輕而易舉。</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Test Coverage" src="https://gitee.com/AhooWang/Wow/raw/main/document/example/example-domain-jococo.png" referrerpolicy="no-referrer"></p><blockquote><p style="margin-left:0; margin-right:0">Given -&gt; When -&gt; Expect .</p></blockquote><h3>Aggregate Unit Test (<code>AggregateVerifier</code>)</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/AhooWang/Wow/blob/main/example/example-domain/src/test/kotlin/me/ahoo/wow/example/domain/order/OrderTest.kt">Aggregate Test</a></p><pre><code><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">internal</span></span></span></span></span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">class</span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span></span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">OrderTest</span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span></span></span></span></span></span></span>{

    <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">private</span></span></span></span></span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span></span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">mockCreateOrder</span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span><span><span><span>()</span></span></span></span></span></span></span></span></span></span></span></span>: VerifiedStage&lt;OrderState&gt; {
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span></span> tenantId = GlobalIdGenerator.generateAsString()
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span></span> customerId = GlobalIdGenerator.generateAsString()

        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span></span> orderItem = OrderItem(
            GlobalIdGenerator.generateAsString(),
            GlobalIdGenerator.generateAsString(),
            BigDecimal.valueOf(<span><span><span><span><span><span>10</span></span></span></span></span></span>),
            <span><span><span><span><span><span>10</span></span></span></span></span></span>,
        )
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span></span> orderItems = listOf(orderItem)
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span></span> inventoryService = <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">object</span></span></span></span></span></span> : InventoryService {
            <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">override</span></span></span></span></span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span></span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">getInventory</span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span><span><span><span>(productId: </span></span></span></span></span></span></span></span></span></span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49">String</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span><span><span>)</span></span></span></span></span></span></span></span></span></span></span></span>: Mono&lt;<span><span><span><span><span><span>Int</span></span></span></span></span></span>&gt; {
                <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">return</span></span></span></span></span></span> orderItems.filter { it.productId == productId }.map { it.quantity }.first().toMono()
            }
        }
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span></span> pricingService = <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">object</span></span></span></span></span></span> : PricingService {
            <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">override</span></span></span></span></span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span></span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">getProductPrice</span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span><span><span><span>(productId: </span></span></span></span></span></span></span></span></span></span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49">String</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span><span><span>)</span></span></span></span></span></span></span></span></span></span></span></span>: Mono&lt;BigDecimal&gt; {
                <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">return</span></span></span></span></span></span> orderItems.filter { it.productId == productId }.map { it.price }.first().toMono()
            }
        }
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">return</span></span></span></span></span></span> aggregateVerifier&lt;Order, OrderState&gt;(tenantId = tenantId)
            .inject(DefaultCreateOrderSpec(inventoryService, pricingService))
            .given()
            .`<span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">when</span></span></span></span></span></span>`(CreateOrder(customerId, orderItems, SHIPPING_ADDRESS, <span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5">false</span></span></span></span></span></span>))
            .expectEventCount(<span><span><span><span><span><span>1</span></span></span></span></span></span>)
            .expectEventType(OrderCreated::<span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">class</span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span>.</span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">java</span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span>)</span></span></span></span></span></span>
            .expectStateAggregate {
                assertThat(it.aggregateId.tenantId, equalTo(tenantId))
            }
            .expectState {
                assertThat(it.id, notNullValue())
                assertThat(it.customerId, equalTo(customerId))
                assertThat(it.address, equalTo(SHIPPING_ADDRESS))
                assertThat(it.items, equalTo(orderItems))
                assertThat(it.status, equalTo(OrderStatus.CREATED))
            }
            .verify()
    }

    <span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">/** * 創建訂單 */</span></span></span></span></span></span><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">@Test</span></span></span></span></span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span></span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">createOrder</span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span><span><span><span>()</span></span></span></span></span></span></span></span></span></span></span></span> {
        mockCreateOrder()
    }

    <span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">@Test</span></span></span></span></span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span></span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">createOrderGivenEmptyItems</span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span><span><span><span>()</span></span></span></span></span></span></span></span></span></span></span></span> {
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span></span> customerId = GlobalIdGenerator.generateAsString()
        aggregateVerifier&lt;Order, OrderState&gt;()
            .inject(mockk&lt;CreateOrderSpec&gt;(), <span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62">"createOrderSpec"</span></span></span></span></span></span>)
            .given()
            .`<span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">when</span></span></span></span></span></span>`(CreateOrder(customerId, listOf(), SHIPPING_ADDRESS, <span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5">false</span></span></span></span></span></span>))
            .expectErrorType(IllegalArgumentException::<span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">class</span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span>.</span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">java</span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span>)</span></span></span></span></span></span>
            .expectStateAggregate {
                <span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">/* * 該聚合對象處於未初始化狀態，即該聚合未創建成功. */</span></span></span></span></span></span>
                assertThat(it.initialized, equalTo(<span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5">false</span></span></span></span></span></span>))
            }.verify()
    }

    <span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">/** * 創建訂單-庫存不足 */</span></span></span></span></span></span><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">@Test</span></span></span></span></span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span></span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">createOrderWhenInventoryShortage</span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span><span><span><span>()</span></span></span></span></span></span></span></span></span></span></span></span> {
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span></span> customerId = GlobalIdGenerator.generateAsString()
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span></span> orderItem = OrderItem(
            GlobalIdGenerator.generateAsString(),
            GlobalIdGenerator.generateAsString(),
            BigDecimal.valueOf(<span><span><span><span><span><span>10</span></span></span></span></span></span>),
            <span><span><span><span><span><span>10</span></span></span></span></span></span>,
        )
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span></span> orderItems = listOf(orderItem)
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span></span> inventoryService = <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">object</span></span></span></span></span></span> : InventoryService {
            <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">override</span></span></span></span></span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span></span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">getInventory</span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span><span><span><span>(productId: </span></span></span></span></span></span></span></span></span></span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49">String</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span><span><span>)</span></span></span></span></span></span></span></span></span></span></span></span>: Mono&lt;<span><span><span><span><span><span>Int</span></span></span></span></span></span>&gt; {
                <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">return</span></span></span></span></span></span> orderItems.filter { it.productId == productId }
                    <span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">/* * 模擬庫存不足 */</span></span></span></span></span></span>
                    .map { it.quantity - <span><span><span><span><span><span>1</span></span></span></span></span></span> }.first().toMono()
            }
        }
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span></span> pricingService = <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">object</span></span></span></span></span></span> : PricingService {
            <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">override</span></span></span></span></span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span></span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">getProductPrice</span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span><span><span><span>(productId: </span></span></span></span></span></span></span></span></span></span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49">String</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span><span><span>)</span></span></span></span></span></span></span></span></span></span></span></span>: Mono&lt;BigDecimal&gt; {
                <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">return</span></span></span></span></span></span> orderItems.filter { it.productId == productId }.map { it.price }.first().toMono()
            }
        }

        aggregateVerifier&lt;Order, OrderState&gt;()
            .inject(DefaultCreateOrderSpec(inventoryService, pricingService))
            .given()
            .`<span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">when</span></span></span></span></span></span>`(CreateOrder(customerId, orderItems, SHIPPING_ADDRESS, <span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5">false</span></span></span></span></span></span>))
            <span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">/* * 期望：庫存不足異常. */</span></span></span></span></span></span>
            .expectErrorType(InventoryShortageException::<span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">class</span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span>.</span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">java</span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span>)</span></span></span></span></span></span>
            .expectStateAggregate {
                <span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">/* * 該聚合對象處於未初始化狀態，即該聚合未創建成功. */</span></span></span></span></span></span>
                assertThat(it.initialized, equalTo(<span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5">false</span></span></span></span></span></span>))
            }.verify()
    }

    <span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">/** * 創建訂單-下單價格與當前價格不一致 */</span></span></span></span></span></span><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">@Test</span></span></span></span></span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span></span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">createOrderWhenPriceInconsistency</span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span><span><span><span>()</span></span></span></span></span></span></span></span></span></span></span></span> {
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span></span> customerId = GlobalIdGenerator.generateAsString()
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span></span> orderItem = OrderItem(
            GlobalIdGenerator.generateAsString(),
            GlobalIdGenerator.generateAsString(),
            BigDecimal.valueOf(<span><span><span><span><span><span>10</span></span></span></span></span></span>),
            <span><span><span><span><span><span>10</span></span></span></span></span></span>,
        )
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span></span> orderItems = listOf(orderItem)
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span></span> inventoryService = <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">object</span></span></span></span></span></span> : InventoryService {
            <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">override</span></span></span></span></span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span></span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">getInventory</span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span><span><span><span>(productId: </span></span></span></span></span></span></span></span></span></span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49">String</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span><span><span>)</span></span></span></span></span></span></span></span></span></span></span></span>: Mono&lt;<span><span><span><span><span><span>Int</span></span></span></span></span></span>&gt; {
                <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">return</span></span></span></span></span></span> orderItems.filter { it.productId == productId }.map { it.quantity }.first().toMono()
            }
        }
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span></span> pricingService = <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">object</span></span></span></span></span></span> : PricingService {
            <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">override</span></span></span></span></span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span></span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">getProductPrice</span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span><span><span><span>(productId: </span></span></span></span></span></span></span></span></span></span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49">String</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span><span><span>)</span></span></span></span></span></span></span></span></span></span></span></span>: Mono&lt;BigDecimal&gt; {
                <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">return</span></span></span></span></span></span> orderItems.filter { it.productId == productId }
                    <span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">/* * 模擬下單價格、商品定價不一致 */</span></span></span></span></span></span>
                    .map { it.price.plus(BigDecimal.valueOf(<span><span><span><span><span><span>1</span></span></span></span></span></span>)) }.first().toMono()
            }
        }
        aggregateVerifier&lt;Order, OrderState&gt;()
            .inject(DefaultCreateOrderSpec(inventoryService, pricingService))
            .given()
            .`<span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">when</span></span></span></span></span></span>`(CreateOrder(customerId, orderItems, SHIPPING_ADDRESS, <span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5">false</span></span></span></span></span></span>))
            <span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">/* * 期望：價格不一致異常. */</span></span></span></span></span></span>
            .expectErrorType(PriceInconsistencyException::<span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">class</span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span>.</span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">java</span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span>).</span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">verify</span></span></span></span></span></span></span></span></span></span></span></span>()
    }
}</code></pre><h3>Saga Unit Test (<code>SagaVerifier</code>)</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/AhooWang/Wow/blob/main/example/example-domain/src/test/kotlin/me/ahoo/wow/example/domain/cart/CartSagaTest.kt">Saga Test</a></p><pre><code><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">class</span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span></span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">CartSagaTest</span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span></span></span></span></span></span></span>{

    <span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">@Test</span></span></span></span></span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span></span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">onOrderCreated</span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span><span><span><span>()</span></span></span></span></span></span></span></span></span></span></span></span> {
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span></span> orderItem = OrderItem(
            GlobalIdGenerator.generateAsString(),
            GlobalIdGenerator.generateAsString(),
            BigDecimal.valueOf(<span><span><span><span><span><span>10</span></span></span></span></span></span>),
            <span><span><span><span><span><span>10</span></span></span></span></span></span>,
        )
        sagaVerifier&lt;CartSaga&gt;()
            .`<span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">when</span></span></span></span></span></span>`(
                mockk&lt;OrderCreated&gt; {
                    every {
                        customerId
                    } returns <span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62">"customerId"</span></span></span></span></span></span>
                    every {
                        items
                    } returns listOf(orderItem)
                    every {
                        fromCart
                    } returns <span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5">true</span></span></span></span></span></span>
                },
            )
            .expectCommandBody&lt;RemoveCartItem&gt; {
                assertThat(it.id, equalTo(<span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62">"customerId"</span></span></span></span></span></span>))
                assertThat(it.productIds, hasSize(<span><span><span><span><span><span>1</span></span></span></span></span></span>))
                assertThat(it.productIds.first(), equalTo(orderItem.productId))
            }
            .verify()
    }
}</code></pre><h2>設計</h2><h3>聚合建模</h3><table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:0px; border:none; box-sizing:border-box; color:#40485b; display:block; font-family:-apple-system,&quot;system-ui&quot;,&quot;Segoe UI&quot;,Helvetica,Arial,&quot;Apple Color Emoji&quot;,&quot;Segoe UI Emoji&quot;,&quot;Segoe UI Symbol&quot;,&quot;Liberation Sans&quot;,&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,&quot;Hiragino Sans GB&quot;,&quot;Wenquanyi Micro Hei&quot;,&quot;WenQuanYi Zen Hei&quot;,&quot;ST Heiti&quot;,SimHei,SimSun,&quot;WenQuanYi Zen Hei Sharp&quot;,sans-serif; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; line-height:inherit; margin:0px 0px 16px; max-width:100%; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; word-break:initial; word-spacing:0px"><tbody><tr><th><strong>Single Class</strong></th><th><strong>Inheritance Pattern</strong></th><th><strong>Aggregation Pattern</strong></th></tr></tbody><tbody><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px; text-align:center"><img alt="Single Class - Modeling" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Modeling-Single-Class-Pattern.svg" referrerpolicy="no-referrer"></td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px; text-align:center"><img alt="Inheritance Pattern- Modeling" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Modeling-Inheritance-Pattern.svg" referrerpolicy="no-referrer"></td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px; text-align:center"><img alt="Aggregation Pattern- Modeling" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Modeling-Aggregation-Pattern.svg" referrerpolicy="no-referrer"></td></tr></tbody></table><h3>加載聚合</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Load Aggregate" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Load-Aggregate.svg" referrerpolicy="no-referrer"></p><h3>聚合狀態流</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Aggregate State Flow" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Aggregate-State-Flow.svg" referrerpolicy="no-referrer"></p><h3>發送命令</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Send Command" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Send-Command.svg" referrerpolicy="no-referrer"></p><h3>命令與事件流</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Command And Event Flow" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Command-Event-Flow.svg" referrerpolicy="no-referrer"></p><h3>Saga - OrderProcessManager (Demo)</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="OrderProcessManager" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Saga-Order.svg" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 23 Nov 2023 02:34:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/267917/wow-2-8-1-released</guid>
            <link>https://www.oschina.net/news/267917/wow-2-8-1-released</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[OpenSSL 3.2.0 正式 GA]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>OpenSSL 開發團隊<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.openssl.org%2Fblog%2Fblog%2F2023%2F11%2F23%2FOpenSSL32%2F" target="_blank">宣佈</a></u>，OpenSSL 3.2 系列的第一個版本 —— OpenSSL 3.2.0 正式 GA。</p><p><img src="https://oscimg.oschina.net/oscnet/up-e27b90f1a62566b0d27660a44b9e943fb7f.png" referrerpolicy="no-referrer"></p><p>OpenSSL 3.2 實現了針對 QUIC 的初版客戶端，QUIC 是 Google 開發的通用傳輸層網絡協議，後來被 IETF 採用。 對於 OpenSSL 3.3 和明年的 OpenSSL 3.4，他們的目標是進一步完成此實現。</p><p>此外還增加了對 TLS 1.3 中 Brainpool 曲線的支持、原始公鑰 (RFC7250) 支持、使用 Brotli 和 Zstd 進行證書壓縮的支持、SM4-XTS 支持、確定性 ECDSA 簽名、AES-GCM-SIV、混合公鑰加密 (HPKE) ），以及其他特性。</p><p>OpenSSL 3.2 還將默認的 SSL/TLS 安全級別從 1 更改為 2。</p><p><strong>OpenSSL 3.2.0 主要變化</strong></p><ol><li>客戶端 QUIC 支持，包括對多個流的支持（RFC 9000）</li><li>在 TLS 中支持證書壓縮（RFC 8879），包括對 zlib、zstd 和 Brotli 的支持</li><li>Deterministic ECDSA（RFC 6979）</li><li>除了對 Ed25519 和 Ed448 的現有支持外，還支持 Ed25519ctx、Ed25519ph 和 Ed448ph（RFC 8032）</li><li>AES-GCM-SIV（RFC 8452）</li><li>Argon2（RFC 9106）和支持線程池功能</li><li>HPKE（RFC 9180）</li><li>在 TLS 中使用原始公鑰的能力（RFC 7250）</li><li>如果操作系統允許，支持 TCP Fast Open（RFC 7413）</li><li>在 TLS 中支持基於提供者的可插拔簽名方案，使第三方 post-quantum 和其他算法提供者能夠在 TLS 中使用這些算法</li><li>在 TLS 1.3 中支持 Brainpool 曲線</li><li>SM4-XTS</li><li>支持使用 Windows 系統證書存儲作為受信任根證書的來源。該功能尚未默認啓用，需要使用環境變量進行激活。預計在未來的功能版本中，這將成為默認啓用的功能</li></ol><p>詳情查看&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopenssl%2Fopenssl%2Fblob%2Fopenssl-3.2.0%2FNEWS.md" target="_blank">NEWS 文件</a>和&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopenssl%2Fopenssl%2Fblob%2Fopenssl-3.2.0%2FCHANGES.md" target="_blank">CHANGES 文件</a>。</p><p>對新的 QUIC 功能感興趣的用戶，<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopenssl%2Fopenssl%2Fblob%2Fopenssl-3.2%2FREADME-QUIC.md" target="_blank">建議閲讀 QUIC 的 README 文件</a></u>，其中提供了相關文檔和示例代碼的鏈接。</p><p>OpenSSL 3.3 將是 OpenSSL 3.2 之後的下一個功能性更新，最遲將於 2024 年 4 月 30 日發佈。預計該版本將包括 QUIC 服務器支持。</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 23 Nov 2023 02:31:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/267915/openssl-3-2-0-final</guid>
            <link>https://www.oschina.net/news/267915/openssl-3-2-0-final</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[AI 名片小程序更新 3.4.1]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">AI 名片小程序已經升級至 3.4.1 版本啦 ，具體詳情請查看碼雲項目主頁更新：</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">本次更新功能如下：</p><p>1、上傳文件接口升級；</p><p>2、增加彈出登陸框；</p><p>3、登陸方式調整；</p><p>4、fixed:綁定手機號碼，需要點擊二次才綁定成功；</p><p>5、圖片更新；</p><p>6、微信登陸授權機制調整；</p><p>7、增加小程序端編輯名片內容功能；</p><p>8、修復了自己無法查看自己名片的 bug；</p><p>9、優化了名片二維碼的生成效率，減少圖片空間存儲；</p><p>10、增加用戶授權登錄功能；</p><p>11、增加原生版本 2.0.0，優化小程序登錄流程；</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 23 Nov 2023 02:22:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/267914/visitingcard-3-4-1-released</guid>
            <link>https://www.oschina.net/news/267914/visitingcard-3-4-1-released</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[LibreOffice 24.2 Alpha 1 發佈，已啓用新的版本號命名規則]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><u><a href="https://www.oschina.net/news/255048/libreoffice-version-yy-m">此前曾報道過</a></u>，從 2024 年開始，文檔基金會 (TDF) 將為 LibreOffice 採用基於日曆的版本號。因此下一個大版本是 2024 年 2 月發佈的&nbsp;<strong>LibreOffice 24.2</strong>。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-c5b76281fefb613d45058573cae8890f54c.png" referrerpolicy="no-referrer"></p><p>LibreOffice 24.2 昨天發佈了首個 alpha，主要變化如下：</p><ol><li>在 LibreOffice Writer 中改進了多頁浮動表格的功能。</li><li>在 LibreOffice Calc 電子表格的函數側邊欄中添加了一個新的搜索字段。</li><li>在 LibreOffice Impress 中實現了小型大寫字母 (Small Caps) 功能。</li><li>默認啓用「保存自動恢復信息」，以及「始終創建備份副本」，以提高 LibreOffice 在崩潰或其他問題發生時的穩定性。還有許多自動恢復修復。</li><li>在 LibreOffice 選項區域添加了搜索功能。</li><li>當使用來自桌面設置的暗色主題時，自動切換到深色應用程序顏色和深色圖標主題現在適用於基於 Qt 的 UI 變體，如 KDE Plasma。</li><li>LibreOffice 的「使用密碼保存」對話框添加了密碼強度指示器。</li></ol><p>更多關於 LibreOffice 24.2 正在進行的工作的詳細信息可以在<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwiki.documentfoundation.org%2FReleaseNotes%2F24.2" target="_blank">Document Foundation Wiki</a></u>上找到。</p><p><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwiki.documentfoundation.org%2FReleasePlan%2F24.2" target="_blank">發佈計劃顯示</a></u>，alpha 版本已按時發佈。LibreOffice 24.2 的功能凍結和代碼分支將在 12 月初進行，然後是 beta 版本。預計在 12 月和 1 月之間發佈至少三個候選版本，然後 LibreOffice 24.2 應該在 2 月初發布。</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 23 Nov 2023 02:11:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/267911/libreoffice-24-2-alpha1</guid>
            <link>https://www.oschina.net/news/267911/libreoffice-24-2-alpha1</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[【店滴雲】接口驗證更新，可以方便快捷的配置規則進行驗證]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="text-align:center">【店滴雲】接口驗證更新，可以方便快捷的配置規則進行驗證</p><p><span style="background-color:#ffffff; color:#40485b">&nbsp; &nbsp; &nbsp; &nbsp;店滴雲，讓經營場所，更智能。圍繞茶室、酒店、健身房、公寓、出租房等經營性場所進行物聯網改造。同時支持多種物聯網通信協議，開放智能門鎖，智能開關，智能手環的 sdk 供開發者使用。</span></p><p><img alt="" height="540" src="https://oscimg.oschina.net/oscnet/up-31124b62d21457dee59e3d38a15e9678cb0.png" width="1024" referrerpolicy="no-referrer"></p><div><pre><span style="color:#ed864a"># </span><span>接口
</span><span style="color:#ed864a">## </span><span>用戶端接口
</span><span style="color:#ed864a">### </span><span>接口入口
</span><span style="color:#ed864a">```
</span><span style="color:#54b33e">    frontend\api\index.php
</span><span style="color:#ed864a">```
</span><span style="color:#ed864a">### </span><span>系統基礎接口
</span><span style="color:#ed864a">```
</span><span style="color:#54b33e">    api\controllers
</span><span style="color:#ed864a">``` 
</span><span style="color:#ed864a">### </span><span>請求地址
</span><span></span><span style="color:#54b33e">    www.example.com/api/user/login
</span><span style="color:#ed864a">### </span><span>系統擴展接口
</span><span style="color:#ed864a">```
</span><span style="color:#54b33e"> api\modules\officialaccount\controllers
</span><span style="color:#ed864a">```
</span><span style="color:#ed864a">### </span><span>接口請求地址
</span><span style="color:#54b33e">    www.example.com/api/officialaccount/qrcode/getqrcode
</span><span style="color:#ed864a">## </span><span>管理端接口
</span><span style="color:#ed864a">### </span><span>接口入口
</span><span style="color:#ed864a">```
</span><span style="color:#54b33e">    frontend\admin\index.php
</span><span style="color:#ed864a">```
</span><span style="color:#ed864a">### </span><span>系統基礎接口
</span><span style="color:#ed864a">```
</span><span style="color:#54b33e">    admin\controllers
</span><span style="color:#ed864a">``` 
</span><span style="color:#ed864a">### </span><span>接口請求地址
</span><span style="color:#54b33e">    www.example.com/admin/</span><span style="color:#54b33e">模塊名稱</span><span style="color:#54b33e">/</span><span style="color:#54b33e">控制器命名空間</span><span style="color:#54b33e">/</span><span style="color:#54b33e">方法名稱</span><span style="color:#54b33e">?data=1
</span><span style="color:#ed864a">## </span><span>應用接口
</span><span>以下説明以 </span><span style="color:#ed864a">`</span>diandi_website<span style="color:#ed864a">` </span><span>內容維護應用為例進行説明。 
</span><span style="color:#ed864a">### </span><span>應用目錄
</span><span style="color:#ed864a">```
</span><span style="color:#54b33e">    addons\diandi_website
</span><span style="color:#ed864a">``` 
</span><span style="color:#ed864a">### </span><span>應用用戶端接口
</span><span style="color:#ed864a">### </span><span>所在目錄 
</span><span style="color:#ed864a">```
</span><span style="color:#54b33e">addons\diandi_website\api
</span><span style="color:#ed864a">```
</span><span style="color:#ed864a">### </span><span>接口請求地址
</span><span style="color:#54b33e">    www.example.com/api/diandi_website/</span><span style="color:#54b33e">控制器命名空間</span><span style="color:#54b33e">/</span><span style="color:#54b33e">方法名稱</span><span style="color:#54b33e">?data=1
</span><span style="color:#ed864a">### </span><span>應用管理端接口
</span><span style="color:#ed864a">### </span><span>所在目錄 
</span><span style="color:#ed864a">```
</span><span style="color:#54b33e">addons\diandi_website\admin
</span><span style="color:#ed864a">```
</span><span style="color:#ed864a">### </span><span>接口請求地址
</span><span style="color:#54b33e">    www.example.com/admin/diandi_website/</span><span style="color:#54b33e">控制器命名空間</span><span style="color:#54b33e">/</span><span style="color:#54b33e">方法名稱</span><span style="color:#54b33e">?data=1
</span><span style="color:#ed864a">## </span><span>接口快速驗證參數
</span><em></em><span style="color:#ed864a"></span></pre><pre><code class="language-php">    // 定義需要驗證的參數規則
    $rules = [
        [['pageSize', 'goods_price', 'sales_initial'], 'required'],
        [['goods_price', 'sales_initial'], 'in', 'range' =&gt; ['desc', 'asc']],
        [['pageSize'], 'integer', 'min' =&gt; 0, 'max' =&gt; 50],
        [['category_pid', 'category_id'], 'integer']
    ];
    
    $this-&gt;validateParams($rules);</code></pre><p>&nbsp;</p></div><p>&nbsp;</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 23 Nov 2023 00:16:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/267889</guid>
            <link>https://www.oschina.net/news/267889</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Rust Web 框架 Rocket 發佈 v0.5：支持異步、SSE、WebSockets 等]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>歷經四年多，四個 RC 版本、一千次 commit、一千多個 issue、討論和 PR 之後，<strong><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frocket.rs%2Fv0.5%2Fnews%2F2023-11-17-version-0.5%2F" target="_blank">Rocket v0.5 正式發佈了</a></u></strong>。</p><blockquote><p>Rocket 是支持異步的後端 Rust Web 框架，專注於可用性、安全性、可擴展性和性能。它使編寫安全的 Web 應用程序變得簡單，而不會犧牲生產力或性能。</p></blockquote><p><img src="https://oscimg.oschina.net/oscnet/up-749db50b650e7b26e57cb9b7f418e05b004.png" referrerpolicy="no-referrer"></p><p>Rocket v0.5 部分重要新功能包括：</p><ol><li><p><strong>支持穩定的 Rust 編譯器</strong>：Rocket v0.5 基於 Rust 穩定版本進行編譯和構建，開發者現在可以使用穩定發佈通道中的<code>rustc</code>編譯和構建 Rocket 應用程序，不再需要使用<code>#![feature(..)]</code>crate<strong>&nbsp;</strong>屬性。<br> &nbsp;</p><pre><code>#[macro_use] extern crate rocket;

#[get("/&lt;name&gt;/&lt;age&gt;")]
fn hello(name: &amp;str, age: u8) -&gt; String {
    format!("Hello, {} year old named {}!", age, name)
}

#[launch]
fn rocket() -&gt; _ {
    rocket::build().mount("/hello", routes![hello])
}</code></pre><p>&nbsp;</p></li><li><p><strong>支持異步 I/O</strong>：Rocket v0.5 重新構建了核心請求處理部分，利用了 Rust 中最新的異步網絡功能。Rocket 現在可以自動在機器上的所有可用核心上多路複用請求處理，使路由處理程序可以聲明為異步並使用 await 語法。<br> &nbsp;</p><pre><code>use rocket::tokio;
use rocket::data::{Data, ToByteUnit};

#[post("/debug", data = "&lt;data&gt;")]
async fn debug(data: Data&lt;'_&gt;) -&gt; std::io::Result&lt;()&gt; {
    // Stream at most 512KiB all of the body data to stdout.
    data.open(512.kibibytes())
        .stream_to(tokio::io::stdout())
        .await?;

    Ok(())
}</code></pre><p>&nbsp;</p></li><li><p><strong>支持 Sentinels</strong>：Rocket v0.5 引入了 Sentinels，這是 Rocket 框架獨有的功能。Sentinels 提供了一種自動的最後防線，可以在出現無效條件時中止應用程序的啓動。Sentinels 可以在 Rocket 之外實現，並且應該儘可能地使用它們。<br> &nbsp;</p><pre><code>use rocket::{Rocket, Ignite, Sentinel};

impl Sentinel for MyResponder {
    fn abort(r: &amp;Rocket&lt;Ignite&gt;) -&gt; bool {
        r.state::&lt;T&gt;().is_none() || !r.catchers().any(|c| c.code == Some(400))
    }
}</code></pre><p>&nbsp;</p></li><li><p><strong>支持流和 SSE</strong>：Rocket v0.5 引入了實時的、類型化的異步流。Rocket 的新異步流部分包含了更多詳細信息，我們鼓勵所有感興趣的人查看新的實時、多房間聊天示例。</p></li><li><p><strong>支持 WebSockets</strong>：Rocket v0.5 通過新的升級 API 引入了對 HTTP 連接升級的支持。這個 API 允許響應器在現有的 HTTP 連接中控制與客戶端的原始 I/O，從而允許將 HTTP 連接升級到任何協議，包括 WebSockets。</p></li><li><p><strong>全面的表單功能支持</strong>：Rocket v0.5 完全改進了表單支持，支持多部分上傳、任意嵌套的集合、即時驗證等。Rocket 的新表單協議允許應用程序表達任何結構，任意嵌套和集合，無需任何自定義代碼。</p></li></ol><p>除了上述功能之外，Rocket v0.5 還引入了其他 40 多個新功能和重大改進，包括安全和隱私頭、優雅的關閉、靈活的配置系統、類型系統強制的數據限制等。</p><p>Rocket v0.5 的發佈是一個重要的里程碑，為 Rust 開發者提供了一個強大而易用的 Web 框架。我們鼓勵所有用戶升級到 Rocket v0.5，並<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frwf2%2FRocket%2Fblob%2Fv0.5.0%2FCHANGELOG.md" target="_blank">查看完整的 CHANGELOG</a></u>以瞭解所有新功能和改進。</p><p>請注意，Rocket v0.4 仍然會得到支持和安全更新，直到 Rocket v0.6 發佈為止。</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 22 Nov 2023 11:04:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/267838/rocketrs-0-5-released</guid>
            <link>https://www.oschina.net/news/267838/rocketrs-0-5-released</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Git 2.43 值得關注的新特性]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Git 發佈了最新版本 2.43，新增了許多改進和新功能。</p><p>以下是 Git 2.43 的部分亮點：</p><ol><li><p><strong><code>git repack</code>的新功能</strong>：在 Git 2.43 中，git repack 學會了一些新技巧。git repack 用於重新組織倉庫中的 pack 文件。在這個版本中，git repack 支持使用多個 cruft pack，並且可以通過對象過濾器將倉庫的內容拆分為多個部分。</p></li><li><p><strong>多 cruft pack</strong>：在過去，Git 將無法訪問的對象存儲在單個 cruft pack 中。但是，這樣做會導致在每次重新打包操作時都需要重寫整個 cruft pack，從而浪費大量的 I/O 時間。在 Git 2.43 中，引入了對多個 cruft pack 的本地支持，可以將無法訪問的對象拆分為多個 pack，從而提高性能。</p></li><li><p><strong>使用對象過濾器拆分倉庫</strong>：Git 的「partial clone」機制允許在包含有限對象子集的倉庫中進行交互。在 Git 2.43 中，git repack 學會了使用對象過濾器規範重新打包倉庫，並可以選擇將過濾後的對象移動到其他位置。這使得可以根據需要輕鬆地過濾和移除不需要的對象。</p></li><li><p><strong>針對 revert 多次回滾的改進</strong>：在過去的 Git 版本中，當多次回滾時，每次回滾都會在提交消息中添加"Revert"，導致提交消息變得冗長。在 Git 2.43 中，Git 意識到進行多次回滾時，會生成更簡潔的提交消息。</p></li></ol><p>詳情查看&nbsp;<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.blog%2F2023-11-20-highlights-from-git-2-43%2F" target="_blank">https://github.blog/2023-11-20-highlights-from-git-2-43/</a></u></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 22 Nov 2023 10:51:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/267835/git-2-43-highlights</guid>
            <link>https://www.oschina.net/news/267835/git-2-43-highlights</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[雲安全之盾：ZStack 雲主機安全防護解決方案全方位保護雲環境]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="margin-left:0.0001pt; margin-right:0px"><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span><span style="color:#000000">隨着雲計算的蓬勃發展，網絡威脅愈發複雜，涵蓋了從勒索病毒到 APT 攻擊的各種威脅類型。在這一風雲變幻的網絡安全環境下，雲主機安全不再僅僅是一個選項，它是信息系統安全的核心要素。</span></span></span><span><span><span style="color:#000000">雲軸科技</span></span></span><span><span><span style="color:#000000">ZStack&nbsp;雲主機安全</span></span></span><span><span><span style="color:#000000">防護</span></span></span><span><span><span style="color:#000000">解決方案是為了滿足這一需求而生的，與 ZStack</span></span></span><span><span><span style="color:#000000">&nbsp;Cloud</span></span></span><span><span><span style="color:#000000">雲</span></span></span><span><span><span style="color:#000000">平台</span></span></span><span><span><span style="color:#000000">全面</span></span></span><span><span><span style="color:#000000">兼容、殺毒性能卓越、具備全面的安全特性，同時支持多部署模式和多操作系統。該方案不僅僅是一個安全防護措施，更是一種安全保障的完整體系，保護</span></span></span><span><span><span style="color:#000000">企業級客戶</span></span></span><span><span><span style="color:#000000">的數據和應用安全。<img alt="" height="597" src="https://oscimg.oschina.net/oscnet/up-f056bf758422a99c12e7e04c28f227e5b3a.png" width="1031" referrerpolicy="no-referrer"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="margin-left:0.0001pt; margin-right:0px"><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span><span style="color:#000000">在雲計算環境下，雲主機承載着關鍵數據和核心業務系統，一旦遭受攻擊，最重要的部分可能會被盜取或破壞。而傳統的殺毒模式資源佔用過多，影響生產系統的性能。因此，一個與底層雲計算平台兼容、功能全面且同時具備穩定性和高性能的雲主機安全解決方案至關重要。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><ul><li><strong><span><span><span style="color:#000000">ZStack&nbsp;雲主機安全防護解決方案</span></span></span></strong><strong><span><span><span style="color:#000000">亮點</span></span></span></strong></li><li><span><span><span style="color:#000000">雲主機安全</span></span></span><span><span><span style="color:#000000">防護解決方案</span></span></span><span><span><span style="color:#000000">與</span></span></span><span><span><span style="color:#000000">ZStack Cloud</span></span></span><span><span><span style="color:#000000">雲</span></span></span><span><span><span style="color:#000000">平台深度融合，確保雲計算環境的穩定運行。</span></span></span></li><li><span><span><span style="color:#000000">支持無代理模式，通過虛擬化層直接進行病毒查殺，降低性能損耗。</span></span></span></li><li><span><span><span style="color:#000000">支持 0day 漏洞在線補丁修復，保證業務連續性。</span></span></span></li><li><span><span><span style="color:#000000">具備全生命週期的安全能力，包括事前預防、事中防禦和事後溯源。</span></span></span></li><li><span><span><span style="color:#000000">多部署模式支持，兼容多類型操作系統，靈活方案選擇，降低管理成本。</span></span></span></li></ul><p><span><span><span style="color:#000000"><img alt="" height="573" src="https://oscimg.oschina.net/oscnet/up-e5916906c1b1392e81c3895d25fe7c3a429.png" width="1255" referrerpolicy="no-referrer"></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:start"><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span><span style="color:#000000">ZStack 雲主機安全</span></span></span><span><span><span style="color:#000000">防護</span></span></span><span><span><span style="color:#000000">解決方案適用於不停機補丁修復、雲主機無代理殺毒、宿主機加固防護以及雲主機安全綜合防護等多個應用場景。能夠降低黑客攻擊帶來的損失，提高運維效率，構建閉環安全系統，為</span></span></span><span><span><span style="color:#000000">雲主機提供全面保護。為數據中心雲平台提供事前防禦措施，事中威脅處理和事後攻擊溯源能力，應對網絡威脅升級帶來的安全挑戰。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:start"><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span><span style="color:#000000">ZStack 將繼續改進和創新，以提供更完整的產品和解決方案，支撐和</span></span></span><span><span><span style="color:#000000">保護客戶的數據</span></span></span><span><span><span style="color:#000000">和業務，迎接未來的業務和安全挑戰</span></span></span><span><span><span style="color:#000000">。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p>&nbsp;</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 22 Nov 2023 10:43:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/267832</guid>
            <link>https://www.oschina.net/news/267832</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[feilong 4.0.3 發佈了，讓 Java 開發更簡便的工具庫]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#1f2328; text-align:start">feilong 4.0.3 發佈了，讓 Java 開發更簡便的工具庫</p><ol><li>讓你從大量重複的底層代碼中脫身,提高開發效率;</li><li>讓你的代碼<code>更簡煉</code>，<code>易寫</code>、<code>易讀</code>、<code>易於維護</code>;</li></ol><p style="color:#1f2328; text-align:start">文檔地址:<span>&nbsp;</span><a href="http://feilong-core.mydoc.io/">http://feilong-core.mydoc.io/</a></p><p style="color:#1f2328; text-align:start">maven 依賴配置:</p><div><pre>&lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">dependency</span>&gt;
     &lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">groupId</span>&gt;com.github.ifeilong&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">groupId</span>&gt;
     &lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">artifactId</span>&gt;feilong&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">artifactId</span>&gt;
     &lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">version</span>&gt;4.0.3&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">version</span>&gt;
&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">dependency</span>&gt;</pre><div>
  &nbsp;
 </div></div><p style="color:#1f2328; text-align:start">Gradle 依賴配置:</p><div><pre><span style="color:var(--color-prettylights-syntax-storage-modifier-import)">com</span>.<span style="color:var(--color-prettylights-syntax-storage-modifier-import)">github</span>.<span style="color:var(--color-prettylights-syntax-storage-modifier-import)">ifeilong</span>:<span>feilong</span>:<span style="color:var(--color-prettylights-syntax-constant)">4.0</span><span style="color:var(--color-prettylights-syntax-constant)">.3</span></pre><div>
  &nbsp;
 </div></div><p style="color:#1f2328; text-align:start">本次升級共有<span>&nbsp;</span><code>12</code><span>&nbsp;</span>處變更, 具體參見<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fifeilong%2Ffeilong%2Fmilestone%2F37%3Fclosed%3D1" target="_blank">4.0.3 milestone</a></p><h2>🐛<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fifeilong%2Ffeilong%2Fissues%3Fq%3Dis%253Aissue%2Blabel%253Abug%2Bmilestone%253A4.0.3%2Bis%253Aclosed" target="_blank">bug</a></h2><p style="color:#1f2328; text-align:start"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fifeilong%2Ffeilong%2Fissues%2F626" target="_blank">#626</a><span>&nbsp;</span>log 動態參數，最後一個 e 沒有生效 [<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fifeilong%2Ffeilong%2Fissues%3Fq%3Dis%253Aissue%2Blabel%253Afeilong-net-bot%2Bmilestone%253A4.0.3%2Bis%253Aclosed" target="_blank">feilong-net-bot</a>]</p><h2>🍑<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fifeilong%2Ffeilong%2Fissues%3Fq%3Dis%253Aissue%2Blabel%253Afeilong-core%2Bmilestone%253A4.0.3%2Bis%253Aclosed" target="_blank">feilong-core</a></h2><p style="color:#1f2328; text-align:start"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fifeilong%2Ffeilong%2Fissues%2F624" target="_blank">#624</a><span>&nbsp;</span>✨ 新建 com.feilong.core.lang.ThreadUtil.execute(List, Map&lt;String, ?&gt;, PartitionPerHandler) [<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fifeilong%2Ffeilong%2Fissues%3Fq%3Dis%253Aissue%2Blabel%253Aenhancement%2Bmilestone%253A4.0.3%2Bis%253Aclosed" target="_blank">enhancement</a>]</p><p style="color:#1f2328; text-align:start"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fifeilong%2Ffeilong%2Fissues%2F635" target="_blank">#635</a><span>&nbsp;</span>PartitionEachSizeThreadConfigBuilder 新增 javadoc [<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fifeilong%2Ffeilong%2Fissues%3Fq%3Dis%253Aissue%2Blabel%253Ajavadoc%2Bmilestone%253A4.0.3%2Bis%253Aclosed" target="_blank">javadoc</a>]<br><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fifeilong%2Ffeilong%2Fissues%2F636" target="_blank">#636</a><span>&nbsp;</span>✨ 新建 com.feilong.core.lang.ThreadUtil.execute(List, PartitionPerHandler) [<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fifeilong%2Ffeilong%2Fissues%3Fq%3Dis%253Aissue%2Blabel%253Aenhancement%2Bmilestone%253A4.0.3%2Bis%253Aclosed" target="_blank">enhancement</a>]<br><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fifeilong%2Ffeilong%2Fissues%2F630" target="_blank">#630</a><span>&nbsp;</span>✨ 新建 com.feilong.core.net.URLUtil.transformHttpsToHttp(String) [<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fifeilong%2Ffeilong%2Fissues%3Fq%3Dis%253Aissue%2Blabel%253Aenhancement%2Bmilestone%253A4.0.3%2Bis%253Aclosed" target="_blank">enhancement</a>]<br><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fifeilong%2Ffeilong%2Fissues%2F631" target="_blank">#631</a><span>&nbsp;</span>✨ 新建 com.feilong.core.net.URLUtil.transformProtocol(String, String, String) [<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fifeilong%2Ffeilong%2Fissues%3Fq%3Dis%253Aissue%2Blabel%253Aenhancement%2Bmilestone%253A4.0.3%2Bis%253Aclosed" target="_blank">enhancement</a>]<br><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fifeilong%2Ffeilong%2Fissues%2F627" target="_blank">#627</a><span>&nbsp;</span>✨ 新建 com.feilong.core.net.URLUtil.transformHttpToHttps(String) [<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fifeilong%2Ffeilong%2Fissues%3Fq%3Dis%253Aissue%2Blabel%253Aenhancement%2Bmilestone%253A4.0.3%2Bis%253Aclosed" target="_blank">enhancement</a>]<br><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fifeilong%2Ffeilong%2Fissues%2F632" target="_blank">#632</a><span>&nbsp;</span>標識 PartitionEachSizeBuilder<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FFunctionalInterface" target="_blank">@FunctionalInterface</a><br><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fifeilong%2Ffeilong%2Fissues%2F633" target="_blank">#633</a><span>&nbsp;</span>標識 PartitionPerHandler<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FFunctionalInterface" target="_blank">@FunctionalInterface</a><br><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fifeilong%2Ffeilong%2Fissues%2F634" target="_blank">#634</a><span>&nbsp;</span>標識 PartitionRunnableBuilder<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FFunctionalInterface" target="_blank">@FunctionalInterface</a></p><h2>🍷<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fifeilong%2Ffeilong%2Fissues%3Fq%3Dis%253Aissue%2Blabel%253Afeilong-net%2Bmilestone%253A4.0.3%2Bis%253Aclosed" target="_blank">feilong-net</a></h2><p style="color:#1f2328; text-align:start"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fifeilong%2Ffeilong%2Fissues%2F629" target="_blank">#629</a><span>&nbsp;</span>✨ RequestByteArrayBody 支持字符串格式的 MimeType [<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fifeilong%2Ffeilong%2Fissues%3Fq%3Dis%253Aissue%2Blabel%253Aenhancement%2Bmilestone%253A4.0.3%2Bis%253Aclosed" target="_blank">enhancement</a>]</p><h2><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fifeilong%2Ffeilong%2Fissues%3Fq%3Dis%253Aissue%2Blabel%253Afeilong-net-bot%2Bmilestone%253A4.0.3%2Bis%253Aclosed" target="_blank">feilong-net-bot</a></h2><p style="color:#1f2328; text-align:start"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fifeilong%2Ffeilong%2Fissues%2F625" target="_blank">#625</a><span>&nbsp;</span>✨ 新建個帶簽名類似於短信 [<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fifeilong%2Ffeilong%2Fissues%3Fq%3Dis%253Aissue%2Blabel%253Aenhancement%2Bmilestone%253A4.0.3%2Bis%253Aclosed" target="_blank">enhancement</a>]</p><p>&nbsp;</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 22 Nov 2023 08:27:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/267802/feilong-4-0-3</guid>
            <link>https://www.oschina.net/news/267802/feilong-4-0-3</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
    </channel>
</rss>
