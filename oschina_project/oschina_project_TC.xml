<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[開源中國-軟件更新資訊]]>
        </title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="https://rsshub.app/oschina/news/project" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[開源中國-軟件更新資訊 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Tue, 26 Dec 2023 07:02:09 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[Xmake v2.8.6 發佈，新的打包插件：XPack]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxmake-io%2Fxmake" target="_blank">Xmake</a><span>&nbsp;</span>是一個基於 Lua 的輕量級跨平台構建工具。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">它非常的輕量，沒有任何依賴，因為它內置了 Lua 運行時。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">它使用 xmake.lua 維護項目構建，相比 makefile/CMakeLists.txt，配置語法更加簡潔直觀，對新手非常友好，短時間內就能快速入門，能夠讓用戶把更多的精力集中在實際的項目開發上。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">我們能夠使用它像 Make/Ninja 那樣可以直接編譯項目，也可以像 CMake/Meson 那樣生成工程文件，另外它還有內置的包管理系統來幫助用戶解決 C/C++ 依賴庫的集成使用問題。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">目前，Xmake 主要用於 C/C++ 項目的構建，但是同時也支持其他 native 語言的構建，可以實現跟 C/C++ 進行混合編譯，同時編譯速度也是非常的快，可以跟 Ninja 持平。</p><div><pre><code>Xmake = Build backend + Project Generator + Package Manager + [Remote|Distributed] Build + Cache
</code></pre></div><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">儘管不是很準確，但我們還是可以把 Xmake 按下面的方式來理解：</p><div><pre><code>Xmake ≈ Make/Ninja + CMake/Meson + Vcpkg/Conan + distcc + ccache/sccache
</code></pre></div><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxmake-io%2Fxmake" target="_blank">項目源碼</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fxmake.io%2F%23%2Fzh-cn%2F" target="_blank">官方文檔</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fxmake.io%2F%23%2Fzh-cn%2Fabout%2Fcourse" target="_blank">入門課程</a></li></ul><h2>新特性介紹</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">在介紹新特性之前，還有個好消息告訴大家，上個版本 Xmake 被收入到了 debian 倉庫，而最近 Xmake 又進入了 Fedora 官方倉庫，大家可以在 Fedora 39 上，直接通過下面的命令安裝 Xmake。</p><div><pre><code><span style="color:#8f5902">$ </span>sudo dnf install xmake
</code></pre></div><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">非常感謝 @topazus @mochaaP 對 Xmake 的貢獻，相關信息見：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxmake-io%2Fxmake%2Fissues%2F941" target="_blank">#941</a>。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">接下來，我們來介紹下，新版本帶來的重量級特性：XPack。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">它類似於 CMake 的 CPack 命令，可以將用戶工程快速打包生成各種格式的安裝包。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">目前 Xmake 的 XPack 已經支持以下格式的打包：</p><ul><li>nsis: Windows 下的可執行安裝包</li><li>runself: shell 自編譯安裝包</li><li>targz: 二進制文件 tar.gz 包（綠色版）</li><li>zip: 二進制文件 zip 包（綠色版）</li><li>srctargz：源文件 tar.gz 包</li><li>srczip: 源文件 zip 包</li><li>srpm: rpm 源碼安裝包</li><li>rpm: rpm 二進制安裝包</li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">除了上述已經支持的打包格式，還有 deb 等包格式也在陸續支持中，並且用戶也可以配置生成自定義的包格式文件。</p><h3>XPack 打包</h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">下面是一個完整例子，我們可以先簡單看下：</p><div><pre><code><span style="color:#000000">set_version</span><strong>(</strong><span style="color:#ff00ff">"1.0.0"</span><strong>)</strong><span style="color:#000000">add_rules</span><strong>(</strong><span style="color:#ff00ff">"mode.debug"</span><strong>,</strong><span style="color:#ff00ff">"mode.release"</span><strong>)</strong><span style="color:#000000">includes</span><strong>(</strong><span style="color:#ff00ff">"@builtin/xpack"</span><strong>)</strong><span style="color:#000000">target</span><strong>(</strong><span style="color:#ff00ff">"test"</span><strong>)</strong><span style="color:#000000">set_kind</span><strong>(</strong><span style="color:#ff00ff">"binary"</span><strong>)</strong><span style="color:#000000">add_files</span><strong>(</strong><span style="color:#ff00ff">"src/*.cpp"</span><strong>)</strong><span style="color:#000000">xpack</span><strong>(</strong><span style="color:#ff00ff">"test"</span><strong>)</strong><span style="color:#000000">set_formats</span><strong>(</strong><span style="color:#ff00ff">"nsis"</span><strong>,</strong><span style="color:#ff00ff">"zip"</span><strong>,</strong><span style="color:#ff00ff">"targz"</span><strong>,</strong><span style="color:#ff00ff">"runself"</span><strong>)</strong><span style="color:#000000">set_title</span><strong>(</strong><span style="color:#ff00ff">"hello"</span><strong>)</strong><span style="color:#000000">set_author</span><strong>(</strong><span style="color:#ff00ff">"ruki"</span><strong>)</strong><span style="color:#000000">set_description</span><strong>(</strong><span style="color:#ff00ff">"A test installer."</span><strong>)</strong><span style="color:#000000">set_homepage</span><strong>(</strong><span style="color:#ff00ff">"https://xmake.io"</span><strong>)</strong><span style="color:#000000">set_licensefile</span><strong>(</strong><span style="color:#ff00ff">"LICENSE.md"</span><strong>)</strong><span style="color:#000000">add_targets</span><strong>(</strong><span style="color:#ff00ff">"test"</span><strong>)</strong><span style="color:#000000">add_installfiles</span><strong>(</strong><span style="color:#ff00ff">"src/(assets/*.png)"</span><strong>,</strong><strong>{</strong><span style="color:#000000">prefixdir</span><strong>=</strong><span style="color:#ff00ff">"images"</span><strong>})</strong><span style="color:#000000">add_sourcefiles</span><strong>(</strong><span style="color:#ff00ff">"(src/**)"</span><strong>)</strong><span style="color:#000000">set_iconfile</span><strong>(</strong><span style="color:#ff00ff">"src/assets/xmake.ico"</span><strong>)</strong><span style="color:#000000">after_installcmd</span><strong>(</strong><span style="color:blue">function</span><strong>(</strong><span style="color:#000000">package</span><strong>,</strong><span style="color:#000000">batchcmds</span><strong>)</strong><span style="color:#000000">batchcmds</span><strong>:</strong><span style="color:#000000">mkdir</span><strong>(</strong><span style="color:#000000">package</span><strong>:</strong><span style="color:#000000">installdir</span><strong>(</strong><span style="color:#ff00ff">"resources"</span><strong>))</strong><span style="color:#000000">batchcmds</span><strong>:</strong><span style="color:#000000">cp</span><strong>(</strong><span style="color:#ff00ff">"src/assets/*.txt"</span><strong>,</strong><span style="color:#000000">package</span><strong>:</strong><span style="color:#000000">installdir</span><strong>(</strong><span style="color:#ff00ff">"resources"</span><strong>),</strong><strong>{</strong><span style="color:#000000">rootdir</span><strong>=</strong><span style="color:#ff00ff">"src"</span><strong>})</strong><span style="color:#000000">batchcmds</span><strong>:</strong><span style="color:#000000">mkdir</span><strong>(</strong><span style="color:#000000">package</span><strong>:</strong><span style="color:#000000">installdir</span><strong>(</strong><span style="color:#ff00ff">"stub"</span><strong>))</strong><span style="color:blue">end</span><strong>)</strong><span style="color:#000000">after_uninstallcmd</span><strong>(</strong><span style="color:blue">function</span><strong>(</strong><span style="color:#000000">package</span><strong>,</strong><span style="color:#000000">batchcmds</span><strong>)</strong><span style="color:#000000">batchcmds</span><strong>:</strong><span style="color:#000000">rmdir</span><strong>(</strong><span style="color:#000000">package</span><strong>:</strong><span style="color:#000000">installdir</span><strong>(</strong><span style="color:#ff00ff">"resources"</span><strong>))</strong><span style="color:#000000">batchcmds</span><strong>:</strong><span style="color:#000000">rmdir</span><strong>(</strong><span style="color:#000000">package</span><strong>:</strong><span style="color:#000000">installdir</span><strong>(</strong><span style="color:#ff00ff">"stub"</span><strong>))</strong><span style="color:blue">end</span><strong>)</strong></code></pre></div><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">我們通過<span>&nbsp;</span><code>includes("@builtin/xpack")</code><span>&nbsp;</span>引入 xpack 的所有配置接口，包括 xpack 配置域，以及它的所有域接口。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">然後我們執行：</p><div><pre><code><span style="color:#8f5902">$ </span>xmake pack
</code></pre></div><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">即可生成所有安裝包。</p><h3>生成 NSIS 安裝包</h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">只要配置了<span>&nbsp;</span><code>set_formats("nsis")</code><span>&nbsp;</span>格式，然後執行<span>&nbsp;</span><code>xmake pack</code><span>&nbsp;</span>命令，就能生成 NSIS 格式的安裝包。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">另外，xmake 還會自動安裝生成 NSIS 包所需的工具，實現真正的一鍵打包。</p><div><pre><code><span style="color:#8f5902">$ </span>xmake pack
note: install or modify <strong>(</strong>m<strong>)</strong> these packages <strong>(</strong>pass -y to skip confirm<strong>)</strong>?
<span style="color:blue">in </span>xmake-repo:
  -&gt; nsis 3.09
please input: y <strong>(</strong>y/n/m<strong>)</strong><strong>=</strong>&gt; install nsis 3.09 .. ok

<strong>[</strong> 25%]: compiling.release src<span style="color:#ff00ff">\m</span>ain.cpp
<strong>[</strong> 37%]: compiling.release src<span style="color:#ff00ff">\m</span>ain.cpp
<strong>[</strong> 50%]: linking.release foo.dll
<strong>[</strong> 62%]: linking.release test.exe
packing build<span style="color:#ff00ff">\x</span>pack<span style="color:#ff00ff">\t</span>est<span style="color:#ff00ff">\t</span>est-windows-x64-v1.0.0.exe
pack ok
</code></pre></div><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><code>test-windows-x64-v1.0.0.exe</code><span>&nbsp;</span>就是我們生成的安裝包，雙擊運行它，就能安裝我們的二進制文件到指定目錄。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><img alt="" src="https://xmake.io/assets/img/manual/nsis_1.png" referrerpolicy="no-referrer"><span>&nbsp;</span><img alt="" src="https://xmake.io/assets/img/manual/nsis_2.png" referrerpolicy="no-referrer"><span>&nbsp;</span><img alt="" src="https://xmake.io/assets/img/manual/nsis_3.png" referrerpolicy="no-referrer"></p><h4>增加組件安裝</h4><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">我們還可以給 NSIS 增加組件安裝命令，只有當用戶選擇指定組件的時候，它的安裝命令才會被執行。</p><div><pre><code><span style="color:#000000">xpack</span><strong>(</strong><span style="color:#ff00ff">"test"</span><strong>)</strong><span style="color:#000000">add_components</span><strong>(</strong><span style="color:#ff00ff">"LongPath"</span><strong>)</strong><span style="color:#000000">xpack_component</span><strong>(</strong><span style="color:#ff00ff">"LongPath"</span><strong>)</strong><span style="color:#000000">set_default</span><strong>(</strong><strong>false</strong><strong>)</strong><span style="color:#000000">set_title</span><strong>(</strong><span style="color:#ff00ff">"Enable Long Path"</span><strong>)</strong><span style="color:#000000">set_description</span><strong>(</strong><span style="color:#ff00ff">"Increases the maximum path length limit, up to 32,767 characters (before 256)."</span><strong>)</strong><span style="color:#000000">on_installcmd</span><strong>(</strong><span style="color:blue">function</span><strong>(</strong><span style="color:#000000">component</span><strong>,</strong><span style="color:#000000">batchcmds</span><strong>)</strong><span style="color:#000000">batchcmds</span><strong>:</strong><span style="color:#000000">rawcmd</span><strong>(</strong><span style="color:#ff00ff">"nsis"</span><strong>,</strong><span style="color:#ff00ff">[[
  ${If} $NoAdmin == "false"
    ; Enable long path
    WriteRegDWORD ${HKLM} "SYSTEM\CurrentControlSet\Control\FileSystem" "LongPathsEnabled" 1
  ${EndIf}]]</span><strong>)</strong><span style="color:blue">end</span><strong>)</strong></code></pre></div><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">這個例子中，我們在裏面添加了一個 NSIS 特有的自定義命令，去實現對長路徑的支持。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><img alt="" src="https://xmake.io/assets/img/manual/nsis_4.png" referrerpolicy="no-referrer"></p><h3>生成自安裝包</h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">我們也可以生成基於 shell 腳本的自編譯安裝包。我們需要配置 runself 打包格式，然後通過<span>&nbsp;</span><code>add_sourcefiles</code><span>&nbsp;</span>添加需要參與編譯安裝的源文件。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">接着，我們需要自定義 on_installcmd 安裝腳本，裏面去配置如果編譯源碼包，我們可以簡單的調用一個內置的編譯安裝腳本文件，也可以直接配置<span>&nbsp;</span><code>make install</code><span>&nbsp;</span>等編譯安裝命令。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">例如：</p><div><pre><code><span style="color:#000000">xpack</span><strong>(</strong><span style="color:#ff00ff">"test"</span><strong>)</strong><span style="color:#000000">set_formats</span><strong>(</strong><span style="color:#ff00ff">"runself"</span><strong>)</strong><span style="color:#000000">add_sourcefiles</span><strong>(</strong><span style="color:#ff00ff">"(src/**)"</span><strong>)</strong><span style="color:#000000">on_installcmd</span><strong>(</strong><span style="color:blue">function</span><strong>(</strong><span style="color:#000000">package</span><strong>,</strong><span style="color:#000000">batchcmds</span><strong>)</strong><span style="color:#000000">batchcmds</span><strong>:</strong><span style="color:#000000">runv</span><strong>(</strong><span style="color:#ff00ff">"make"</span><strong>,</strong><strong>{</strong><span style="color:#ff00ff">"install"</span><strong>})</strong><span style="color:blue">end</span><strong>)</strong></code></pre></div><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">然後，我們執行<span>&nbsp;</span><code>xmake pack</code><span>&nbsp;</span>命令，就可以生成一個自安裝的 xxx.gz.run 包，默認採用 gzip 壓縮。</p><div><pre><code><span style="color:#8f5902">$ </span>xmake pack
packing build/xpack/test/test-macosx-src-v1.0.0.gz.run
pack ok
</code></pre></div><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">我們可以使用 sh 去加載運行它來安裝我們的程序。</p><div><pre><code><span style="color:#8f5902">$ </span>sh ./build/xpack/test/test-macosx-src-v1.0.0.gz.run
</code></pre></div><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">我們也可以看一個比較完整的例子：</p><div><pre><code><span style="color:#000000">xpack</span><strong>(</strong><span style="color:#ff00ff">"xmakesrc"</span><strong>)</strong><span style="color:#000000">set_formats</span><strong>(</strong><span style="color:#ff00ff">"runself"</span><strong>)</strong><span style="color:#000000">set_basename</span><strong>(</strong><span style="color:#ff00ff">"xmake-v$(version)"</span><strong>)</strong><span style="color:#000000">set_prefixdir</span><strong>(</strong><span style="color:#ff00ff">"xmake-$(version)"</span><strong>)</strong><span style="color:#000000">before_package</span><strong>(</strong><span style="color:blue">function</span><strong>(</strong><span style="color:#000000">package</span><strong>)</strong><span style="color:#000000">import</span><strong>(</strong><span style="color:#ff00ff">"devel.git"</span><strong>)</strong><span style="color:blue">local</span><span style="color:#000000">rootdir</span><strong>=</strong><span style="color:#000000">path</span><strong>.</strong><span style="color:#000000">join</span><strong>(</strong><span style="color:#000000">os</span><strong>.</strong><span style="color:#000000">tmpfile</span><strong>(</strong><span style="color:#000000">package</span><strong>:</strong><span style="color:#000000">basename</span><strong>())</strong><strong>..</strong><span style="color:#ff00ff">".dir"</span><strong>,</strong><span style="color:#ff00ff">"repo"</span><strong>)</strong><span style="color:blue">if</span><strong>not</strong><span style="color:#000000">os</span><strong>.</strong><span style="color:#000000">isdir</span><strong>(</strong><span style="color:#000000">rootdir</span><strong>)</strong><span style="color:blue">then</span><span style="color:#000000">os</span><strong>.</strong><span style="color:#000000">tryrm</span><strong>(</strong><span style="color:#000000">rootdir</span><strong>)</strong><span style="color:#000000">os</span><strong>.</strong><span style="color:#000000">cp</span><strong>(</strong><span style="color:#000000">path</span><strong>.</strong><span style="color:#000000">directory</span><strong>(</strong><span style="color:#000000">os</span><strong>.</strong><span style="color:#000000">projectdir</span><strong>()),</strong><span style="color:#000000">rootdir</span><strong>)</strong><span style="color:#000000">git</span><strong>.</strong><span style="color:#000000">clean</span><strong>({</strong><span style="color:#000000">repodir</span><strong>=</strong><span style="color:#000000">rootdir</span><strong>,</strong><span style="color:#000000">force</span><strong>=</strong><strong>true</strong><strong>,</strong><span style="color:#000000">all</span><strong>=</strong><strong>true</strong><strong>})</strong><span style="color:#000000">git</span><strong>.</strong><span style="color:#000000">reset</span><strong>({</strong><span style="color:#000000">repodir</span><strong>=</strong><span style="color:#000000">rootdir</span><strong>,</strong><span style="color:#000000">hard</span><strong>=</strong><strong>true</strong><strong>})</strong><span style="color:blue">if</span><span style="color:#000000">os</span><strong>.</strong><span style="color:#000000">isfile</span><strong>(</strong><span style="color:#000000">path</span><strong>.</strong><span style="color:#000000">join</span><strong>(</strong><span style="color:#000000">rootdir</span><strong>,</strong><span style="color:#ff00ff">".gitmodules"</span><strong>))</strong><span style="color:blue">then</span><span style="color:#000000">git</span><strong>.</strong><span style="color:#000000">submodule</span><strong>.</strong><span style="color:#000000">clean</span><strong>({</strong><span style="color:#000000">repodir</span><strong>=</strong><span style="color:#000000">rootdir</span><strong>,</strong><span style="color:#000000">force</span><strong>=</strong><strong>true</strong><strong>,</strong><span style="color:#000000">all</span><strong>=</strong><strong>true</strong><strong>})</strong><span style="color:#000000">git</span><strong>.</strong><span style="color:#000000">submodule</span><strong>.</strong><span style="color:#000000">reset</span><strong>({</strong><span style="color:#000000">repodir</span><strong>=</strong><span style="color:#000000">rootdir</span><strong>,</strong><span style="color:#000000">hard</span><strong>=</strong><strong>true</strong><strong>})</strong><span style="color:blue">end</span><span style="color:blue">end</span><span style="color:blue">local</span><span style="color:#000000">extraconf</span><strong>=</strong><strong>{</strong><span style="color:#000000">rootdir</span><strong>=</strong><span style="color:#000000">rootdir</span><strong>}</strong><span style="color:#000000">package</span><strong>:</strong><span style="color:#000000">add</span><strong>(</strong><span style="color:#ff00ff">"sourcefiles"</span><strong>,</strong><span style="color:#000000">path</span><strong>.</strong><span style="color:#000000">join</span><strong>(</strong><span style="color:#000000">rootdir</span><strong>,</strong><span style="color:#ff00ff">"core/**|src/pdcurses/**|src/luajit/**|src/tbox/tbox/src/demo/**"</span><strong>),</strong><span style="color:#000000">extraconf</span><strong>)</strong><span style="color:#000000">package</span><strong>:</strong><span style="color:#000000">add</span><strong>(</strong><span style="color:#ff00ff">"sourcefiles"</span><strong>,</strong><span style="color:#000000">path</span><strong>.</strong><span style="color:#000000">join</span><strong>(</strong><span style="color:#000000">rootdir</span><strong>,</strong><span style="color:#ff00ff">"xmake/**"</span><strong>),</strong><span style="color:#000000">extraconf</span><strong>)</strong><span style="color:#000000">package</span><strong>:</strong><span style="color:#000000">add</span><strong>(</strong><span style="color:#ff00ff">"sourcefiles"</span><strong>,</strong><span style="color:#000000">path</span><strong>.</strong><span style="color:#000000">join</span><strong>(</strong><span style="color:#000000">rootdir</span><strong>,</strong><span style="color:#ff00ff">"*.md"</span><strong>),</strong><span style="color:#000000">extraconf</span><strong>)</strong><span style="color:#000000">package</span><strong>:</strong><span style="color:#000000">add</span><strong>(</strong><span style="color:#ff00ff">"sourcefiles"</span><strong>,</strong><span style="color:#000000">path</span><strong>.</strong><span style="color:#000000">join</span><strong>(</strong><span style="color:#000000">rootdir</span><strong>,</strong><span style="color:#ff00ff">"configure"</span><strong>),</strong><span style="color:#000000">extraconf</span><strong>)</strong><span style="color:#000000">package</span><strong>:</strong><span style="color:#000000">add</span><strong>(</strong><span style="color:#ff00ff">"sourcefiles"</span><strong>,</strong><span style="color:#000000">path</span><strong>.</strong><span style="color:#000000">join</span><strong>(</strong><span style="color:#000000">rootdir</span><strong>,</strong><span style="color:#ff00ff">"scripts/*.sh"</span><strong>),</strong><span style="color:#000000">extraconf</span><strong>)</strong><span style="color:#000000">package</span><strong>:</strong><span style="color:#000000">add</span><strong>(</strong><span style="color:#ff00ff">"sourcefiles"</span><strong>,</strong><span style="color:#000000">path</span><strong>.</strong><span style="color:#000000">join</span><strong>(</strong><span style="color:#000000">rootdir</span><strong>,</strong><span style="color:#ff00ff">"scripts/man/**"</span><strong>),</strong><span style="color:#000000">extraconf</span><strong>)</strong><span style="color:#000000">package</span><strong>:</strong><span style="color:#000000">add</span><strong>(</strong><span style="color:#ff00ff">"sourcefiles"</span><strong>,</strong><span style="color:#000000">path</span><strong>.</strong><span style="color:#000000">join</span><strong>(</strong><span style="color:#000000">rootdir</span><strong>,</strong><span style="color:#ff00ff">"scripts/debian/**"</span><strong>),</strong><span style="color:#000000">extraconf</span><strong>)</strong><span style="color:#000000">package</span><strong>:</strong><span style="color:#000000">add</span><strong>(</strong><span style="color:#ff00ff">"sourcefiles"</span><strong>,</strong><span style="color:#000000">path</span><strong>.</strong><span style="color:#000000">join</span><strong>(</strong><span style="color:#000000">rootdir</span><strong>,</strong><span style="color:#ff00ff">"scripts/msys/**"</span><strong>),</strong><span style="color:#000000">extraconf</span><strong>)</strong><span style="color:blue">end</span><strong>)</strong><span style="color:#000000">on_installcmd</span><strong>(</strong><span style="color:blue">function</span><strong>(</strong><span style="color:#000000">package</span><strong>,</strong><span style="color:#000000">batchcmds</span><strong>)</strong><span style="color:#000000">batchcmds</span><strong>:</strong><span style="color:#000000">runv</span><strong>(</strong><span style="color:#ff00ff">"./scripts/get.sh"</span><strong>,</strong><strong>{</strong><span style="color:#ff00ff">"__local__"</span><strong>})</strong><span style="color:blue">end</span><strong>)</strong></code></pre></div><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">它是 xmake 自身源碼的安裝包配置腳本，更完整的配置可以參考：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxmake-io%2Fxmake%2Fblob%2Fmaster%2Fcore%2Fxpack.lua" target="_blank">xpack.lua</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">這裏，它通過調用源碼包內置的<span>&nbsp;</span><code>./scripts/get.sh</code><span>&nbsp;</span>安裝腳本去執行編譯安裝。</p><h3>生成源碼歸檔包</h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">另外，我們也可以配置<span>&nbsp;</span><code>srczip</code><span>&nbsp;</span>和<span>&nbsp;</span><code>srctargz</code><span>&nbsp;</span>格式，來生成源碼壓縮包，它不是完整的安裝包，也沒有安裝命令，僅僅用於源碼包分發。</p><div><pre><code><span style="color:#000000">xpack</span><strong>(</strong><span style="color:#ff00ff">"test"</span><strong>)</strong><span style="color:#000000">set_formats</span><strong>(</strong><span style="color:#ff00ff">"srczip"</span><strong>,</strong><span style="color:#ff00ff">"srctargz"</span><strong>)</strong><span style="color:#000000">add_sourcefiles</span><strong>(</strong><span style="color:#ff00ff">"(src/**)"</span><strong>)</strong></code></pre></div><div><pre><code><span style="color:#8f5902">$ </span>xmake pack
packing build/xpack/test/test-macosx-src-v1.0.0.zip ..
packing build/xpack/test/test-macosx-src-v1.0.0.tar.gz ..
pack ok
</code></pre></div><h3>生成二進制歸檔包</h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">我們也可以配置<span>&nbsp;</span><code>zip</code><span>&nbsp;</span>和<span>&nbsp;</span><code>targz</code><span>&nbsp;</span>來生成二進制的壓縮包，它會先自動編譯所有綁定的 target 目標程序，將所有需要的二進製程序，庫文件打包到 zip/tar.gz 格式。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">這通常用於製作綠色版的安裝包，內部不太任何自動安裝腳本，用戶需要自己設置 PATH 等環境變量。</p><div><pre><code><span style="color:#000000">xpack</span><strong>(</strong><span style="color:#ff00ff">"test"</span><strong>)</strong><span style="color:#000000">set_formats</span><strong>(</strong><span style="color:#ff00ff">"zip"</span><strong>,</strong><span style="color:#ff00ff">"targz"</span><strong>)</strong><span style="color:#000000">add_installfiles</span><strong>(</strong><span style="color:#ff00ff">"(src/**)"</span><strong>)</strong></code></pre></div><div><pre><code><span style="color:#8f5902">$ </span>xmake pack
packing build/xpack/test/test-macosx-v1.0.0.zip ..
packing build/xpack/test/test-macosx-v1.0.0.tar.gz ..
pack ok
</code></pre></div><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">!&gt; 需要注意的是，打二進制文件到包裏，使用的是<span>&nbsp;</span><code>add_installfiles</code><span>&nbsp;</span>而不是<span>&nbsp;</span><code>add_sourcefiles</code>。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">我們也可以通過<span>&nbsp;</span><code>add_targets</code><span>&nbsp;</span>去綁定需要安裝的 target 目標程序和庫。更多詳情見下面關於<span>&nbsp;</span><code>add_targets</code><span>&nbsp;</span>的接口描述。</p><h3>生成 SRPM 源碼安裝包</h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">它可以生成<span>&nbsp;</span><code>.src.rpm</code><span>&nbsp;</span>格式的源碼安裝包。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">我們可以通過配置 add_targets 關聯需要構建的目標，在生成的 srpm 包中，它會自動調用<span>&nbsp;</span><code>xmake build</code><span>&nbsp;</span>和<span>&nbsp;</span><code>xmake install</code><span>&nbsp;</span>去構建和安裝包。</p><div><pre><code><span style="color:#000000">xpack</span><strong>(</strong><span style="color:#ff00ff">"test"</span><strong>)</strong><span style="color:#000000">set_homepage</span><strong>(</strong><span style="color:#ff00ff">"https://xmake.io"</span><strong>)</strong><span style="color:#000000">set_license</span><strong>(</strong><span style="color:#ff00ff">"Apache-2.0"</span><strong>)</strong><span style="color:#000000">set_description</span><strong>(</strong><span style="color:#ff00ff">"A cross-platform build utility based on Lua."</span><strong>)</strong><span style="color:#000000">set_formats</span><strong>(</strong><span style="color:#ff00ff">"srpm"</span><strong>)</strong><span style="color:#000000">add_sourcefiles</span><strong>(</strong><span style="color:#ff00ff">"(src/**)"</span><strong>)</strong><span style="color:#000000">add_sourcefiles</span><strong>(</strong><span style="color:#ff00ff">"./xmake.lua"</span><strong>)</strong><span style="color:#000000">add_targets</span><strong>(</strong><span style="color:#ff00ff">"demo"</span><strong>)</strong></code></pre></div><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">它會生成類似下面的 spec 文件，然後自動調用 rpmbuild 去生成<span>&nbsp;</span><code>.src.rpm</code><span>&nbsp;</span>包。</p><div><pre><code>Name:       test
Version:    1.0.0
Release:    1%{?dist}
Summary:    hello

License:    Apache-2.0
URL:        https://xmake.io
Source0:    test-linux-src-v1.0.0.tar.gz

BuildRequires: xmake
BuildRequires: gcc
BuildRequires: gcc-c++

%description
A test installer.

%prep
%autosetup -n test-1.0.0 -p1

%build
xmake build -y test

%install
xmake install -o %{buildroot}/%{_exec_prefix} test
cd %{buildroot}
find . -type f | sed 's!^\./!/!' &gt; %{_builddir}/_installedfiles.txt

%check

%files -f %{_builddir}/_installedfiles.txt

%changelog
* Fri Dec 22 2023 ruki - 1.0.0-1
- Update to 1.0.0
</code></pre></div><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">我們也可以通過<span>&nbsp;</span><code>on_buildcmd</code><span>&nbsp;</span>和<span>&nbsp;</span><code>on_installcmd</code><span>&nbsp;</span>自定義構建和安裝腳本。</p><div><pre><code><span style="color:#000000">xpack</span><strong>(</strong><span style="color:#ff00ff">"test"</span><strong>)</strong><span style="color:#000000">set_homepage</span><strong>(</strong><span style="color:#ff00ff">"https://xmake.io"</span><strong>)</strong><span style="color:#000000">set_license</span><strong>(</strong><span style="color:#ff00ff">"Apache-2.0"</span><strong>)</strong><span style="color:#000000">set_description</span><strong>(</strong><span style="color:#ff00ff">"A cross-platform build utility based on Lua."</span><strong>)</strong><span style="color:#000000">set_formats</span><strong>(</strong><span style="color:#ff00ff">"srpm"</span><strong>)</strong><span style="color:#000000">add_sourcefiles</span><strong>(</strong><span style="color:#ff00ff">"(src/**)"</span><strong>)</strong><span style="color:#000000">add_sourcefiles</span><strong>(</strong><span style="color:#ff00ff">"./configure"</span><strong>)</strong><span style="color:#000000">on_buildcmd</span><strong>(</strong><span style="color:blue">function</span><strong>(</strong><span style="color:#000000">package</span><strong>,</strong><span style="color:#000000">batchcmds</span><strong>)</strong><span style="color:#000000">batchcmds</span><strong>:</strong><span style="color:#000000">runv</span><strong>(</strong><span style="color:#ff00ff">"./configure"</span><strong>)</strong><span style="color:#000000">batchcmds</span><strong>:</strong><span style="color:#000000">runv</span><strong>(</strong><span style="color:#ff00ff">"make"</span><strong>)</strong><span style="color:blue">end</span><strong>)</strong><span style="color:#000000">on_installcmd</span><strong>(</strong><span style="color:blue">function</span><strong>(</strong><span style="color:#000000">package</span><strong>,</strong><span style="color:#000000">batchcmds</span><strong>)</strong><span style="color:#000000">batchcmds</span><strong>:</strong><span style="color:#000000">runv</span><strong>(</strong><span style="color:#ff00ff">"make"</span><strong>,</strong><strong>{</strong><span style="color:#ff00ff">"install"</span><strong>,</strong><span style="color:#ff00ff">"PREFIX=%{buildroot}"</span><strong>})</strong><span style="color:blue">end</span><strong>)</strong></code></pre></div><h3>生成 RPM 二進制安裝包</h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">RPM 包將會直接生成編譯好的二進制安裝包。xmake 會自動調用<span>&nbsp;</span><code>rpmbuild --rebuild</code><span>&nbsp;</span>命令去構建 SRPM 包生成它。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">而在 XPack 中，我們僅僅只需要配置<span>&nbsp;</span><code>set_formats("rpm")</code><span>&nbsp;</span>即可支持 rpm 包生成，其他配置與 srpm 包完全一致。</p><div><pre><code><span style="color:#000000">xpack</span><strong>(</strong><span style="color:#ff00ff">"test"</span><strong>)</strong><span style="color:#000000">set_formats</span><strong>(</strong><span style="color:#ff00ff">"rpm"</span><strong>)</strong><em>-- TODO</em></code></pre></div><h3>打包命令參數</h3><h4>指定打包格式</h4><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">如果我們在配置文件中已經使用<span>&nbsp;</span><code>set_formats</code><span>&nbsp;</span>配置了多個打包格式，那麼默認情況下，<code>xmake pack</code><span>&nbsp;</span>會自動生成所有這些格式的包。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">當然，我們也可以通過<span>&nbsp;</span><code>xmake pack --formats=nsis,targz</code><span>&nbsp;</span>來選擇性指定當前需要打哪些格式的包。</p><h4>修改打包文件名</h4><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">我們可以在配置文件中，通過<span>&nbsp;</span><code>set_basename()</code><span>&nbsp;</span>來修改包名，也可以通過命令行去修改它。</p><div><pre><code><span style="color:#8f5902">$ </span>xmake pack --basename<strong>=</strong><span style="color:#ff00ff">"foo"</span>
packing build/xpack/test/foo.zip ..
pack ok
</code></pre></div><h4>指定輸出目錄</h4><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">默認的輸出目錄是在 build 目錄下，但我們也可以修改輸出的路徑。</p><div><pre><code><span style="color:#8f5902">$ </span>xmake pack -o /tmp/output
</code></pre></div><h4>禁用自動構建</h4><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">如果是打 NSIS 等二進制包，<code>xmake pack</code><span>&nbsp;</span>會先自動編譯所有被綁定的 target 目標文件，然後再去執行打包邏輯。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">但是如果我們已經編譯過了，不想每次都去編譯它，而是直接去打包，可以通過下面的參數禁用自動構建。</p><div><pre><code><span style="color:#8f5902">$ </span>xmake pack --autobuild<strong>=</strong>n
</code></pre></div><h3>接口描述</h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">更多 XPack 打包接口描述見：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fxmake.io%2F%23%2Fzh-cn%2Fmanual%2Fxpack" target="_blank">XPack 打包接口文檔</a>。</p><h3>安裝包到本地</h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">默認情況先，通過<span>&nbsp;</span><code>add_requires("xxx")</code><span>&nbsp;</span>配置的包都會被安裝到全局目錄，不同項目共用這些包。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">而新版本中，我們新增了一個<span>&nbsp;</span><code>package.install_locally</code><span>&nbsp;</span>策略，可以配置讓 xmake 將包安裝到當前本地項目目錄。</p><div><pre><code><span style="color:#000000">set_policy</span><strong>(</strong><span style="color:#ff00ff">"package.install_locally"</span><strong>,</strong><strong>true</strong><strong>)</strong></code></pre></div><h2>更新日誌</h2><h3>新特性</h3><ul><li>添加<span>&nbsp;</span><code>network.mode</code><span>&nbsp;</span>策略</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxmake-io%2Fxmake%2Fissues%2F1433" target="_blank">#1433</a>: 添加<span>&nbsp;</span><code>xmake pack</code><span>&nbsp;</span>命令去生成 NSIS/zip/tar.gz/srpm/rpm/runself 安裝包</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxmake-io%2Fxmake%2Fissues%2F4435" target="_blank">#4435</a>: 為 UnityBuild 的組模式增加 batchsize 支持</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxmake-io%2Fxmake%2Fpull%2F4485" target="_blank">#4485</a>: 新增 package.install_locally 策略支持</li><li>新增 NetBSD 支持</li></ul><h3>Changes</h3><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxmake-io%2Fxmake%2Fpull%2F4484" target="_blank">#4484</a>: 改進 swig 規則</li><li>改進 Haiku 支持</li></ul><h3>Bugs 修復</h3><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxmake-io%2Fxmake%2Fissues%2F4372" target="_blank">#4372</a>: 修復 protobuf 規則</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxmake-io%2Fxmake%2Fissues%2F4439" target="_blank">#4439</a>: 修復 asn1c 規則</li></ul></div>
                                    ]]>
            </description>
            <pubDate>Tue, 26 Dec 2023 03:29:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272755/xmake-2-8-6-released</guid>
            <link>https://www.oschina.net/news/272755/xmake-2-8-6-released</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[DBCart 多語言跨境商城系統 V3.1 Release 231225 發佈]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">DBCart 企業級開源 (多語言) 商城系統，使用 PHP 語言基於 Laminas + Doctrine 2 組合框架開發完成。可定製、多終端、多場景、多支付、多語言、多貨幣等特性。</p><ul><li>嚴謹的安全機制，可靠穩定；</li><li>方便的操作管理，節約時間；</li><li>清晰的權限分配，責任分明；</li><li>便捷的更新處理，一鍵搞定；</li><li>豐富的插件市場，擴展無限。</li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">默認支持：簡體中文、繁體中文、英文、日文、韓文。<br><strong>後台配置好智能翻譯，可以方便的在後台輸入框翻譯成對應語言內容，再優化修改。省時省力。</strong><br> 前台可任意切換不同語言內容。</p><h2>系統框架</h2><ul><li>Laminas （Zendframework 3）</li><li>Doctrine 2</li></ul><h2>環境要求</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>服務器系統</strong>&nbsp;Linux、Unix、Mac、Windows、其他</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>web 服務器</strong>&nbsp;Apache、Nginx、IIS、其他</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>MySQL 版本</strong>&nbsp;&gt;= 5.6</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>PHP 版本</strong>&nbsp;&gt;= 7.4</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>PHP 擴展 | 庫</strong></p><ul><li>PDO</li><li>SSL（openssl）</li><li>Fileinfo</li><li>intl</li><li>Curl</li><li>GD2</li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>系統空間</strong>&nbsp;&gt;= 500M</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>更新日誌：</strong><br> 優化，插件功能<br> 優化，優惠碼，加入百分比優惠<br> 優化，優惠碼和充值碼的生成，去掉容易混淆的字母<br> 優化，商品添加與編輯，加入規格商品的不啓用選擇</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><span style="background-color:#ffffff; color:#e74c3c">瓏大官方全新發布&nbsp;</span><strong>語言包個性化定製擴展平台&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.loongdom.com.cn%2Fcloud%2Ftrans.html" target="_blank">https://docs.loongdom.com.cn/cloud/trans.htm</a></strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>在線文檔地址：</strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs-dbcart.loongdom.com.cn%2F" target="_blank">https://docs-dbcart.loongdom.com.cn/</a></p><p style="color:#2c3e50; text-align:start"><strong>前台測試：</strong><span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fceshi.dbcart.loongdom.cn%2F" target="_blank">https://ceshi.dbcart.loongdom.cn/</a></p><p style="color:#2c3e50; text-align:start"><strong>後台測試：</strong><span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fceshi.dbcart.loongdom.cn%2Fadmin" target="_blank">https://ceshi.dbcart.loongdom.cn/admin</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://oscimg.oschina.net/oscnet/up-603635b2b3ee3c73e4aa09c7e9b76d3b126.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://oscimg.oschina.net/oscnet/up-b30e9e5073a8a315dd568014b192271bfbf.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://oscimg.oschina.net/oscnet/up-13a80c9b0c368adb47c0f9f3dc7560755b7.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://oscimg.oschina.net/oscnet/up-0b29bbfbe78d73a836170a11699f464d2c5.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://oscimg.oschina.net/oscnet/up-34f0b327045cf071393fee0bbc229275c28.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://oscimg.oschina.net/oscnet/up-eaac27f476cbb575773f4bb45111268fb5c.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">&nbsp;</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>下載地址：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdownload.loongdom.com.cn%2Fdbcart%2FV3.1%2FDBCartV3.1_Release231225.tar.gz" target="_blank">https://download.loongdom.com.cn/dbcart/V3.1/DBCartV3.1_Release231225.tar.gz</a></strong></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 26 Dec 2023 03:18:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272752/dbcart-3-1-231225</guid>
            <link>https://www.oschina.net/news/272752/dbcart-3-1-231225</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[DBShop 商城系統 V3.3 Release 231225 發佈]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">DBShop 企業級商城系統，使用 PHP 語言基於 Laminas（Zendframework 3） + Doctrine 2 組合框架開發完成。可定製、多終端、多場景、多支付、多貨幣；嚴謹的安全機制，可靠穩定；方便的操作管理，節約時間；清晰的權限分配，責任分明；便捷的更新處理，一鍵搞定；豐富的插件市場，擴展無限。</p><h2>系統框架</h2><ul><li>Laminas （Zendframework 3）</li><li>Doctrine 2</li></ul><h2>環境要求</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>服務器系統</strong>&nbsp;Linux、Unix、Mac、Windows、其他</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>web 服務器</strong>&nbsp;Apache、Nginx、IIS、其他</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>MySQL 版本</strong>&nbsp;&gt;= 5.6</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>PHP 版本</strong>&nbsp;&gt;= 7.4</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>PHP 擴展 | 庫</strong></p><ul><li>PDO</li><li>SSL（openssl）</li><li>Fileinfo</li><li>intl</li><li>Curl</li><li>GD2</li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>系統空間</strong>&nbsp;&gt;= 500M</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>更新日誌：</strong><br> 新增，公安備案顯示設置功能<br> 優化，插件擴展<br> 優化，優惠碼加入百分比優惠<br> 優化，優惠碼和充值碼的生成，去掉容易混淆的字母<br> 優化，商品添加與編輯，加入對規格商品的不啓用選擇<br> 優化，語言包</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="color:#e74c3c">瓏大官方全新發布&nbsp;<strong>語言包個性化定製擴展平台&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.loongdom.com.cn%2Fcloud%2Ftrans.html" target="_blank">https://docs.loongdom.com.cn/cloud/trans.html</a></strong></span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>在線文檔地址：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.loongdom.com.cn" target="_blank">https://docs.loongdom.com.cn/</a></strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>前台演示地址：</strong><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fv3.dbshop.net%2F" target="_blank">http://v3.dbshop.net</a><br><strong>後台演示地址：</strong><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fv3.dbshop.net%2Fadmin" target="_blank">http://v3.dbshop.net/admin</a><br><strong>後台登錄賬號：</strong>dbshop<br><strong>後台登錄密碼：</strong>123456</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><img alt="" height="318" src="https://oscimg.oschina.net/oscnet/up-935399731889136addb4890704783bb91b2.png" width="700" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><img alt="" height="438" src="https://oscimg.oschina.net/oscnet/up-2a10d87169518ff3590a641b918e95a2814.png" width="700" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><img alt="" height="306" src="https://oscimg.oschina.net/oscnet/up-4c99aa3bc36cd815ba6585a6c400b726bb7.png" width="700" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><img alt="" height="404" src="https://oscimg.oschina.net/oscnet/up-21a7773040bd4fab00897a97c87e3d9c188.png" width="700" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><img alt="" height="396" src="https://oscimg.oschina.net/oscnet/up-4bc8e4e8bc97e0f0855e8337dce22da947c.png" width="700" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><img alt="" height="410" src="https://oscimg.oschina.net/oscnet/up-fdec0119a9a8bdc28c9cf30e11f42cafd3b.png" width="700" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>下載地址：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdownload.loongdom.com.cn/dbshop/V3.3/DBShopV3.3_Release231225.tar.gz" target="_blank">&nbsp;https://download.loongdom.com.cn/dbshop/V3.3/DBShopV3.3_Release231225.tar.gz</a></strong></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 26 Dec 2023 02:59:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272748/dbshop-3-3-231225</guid>
            <link>https://www.oschina.net/news/272748/dbshop-3-3-231225</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Electron v28.1.0 發佈，跨平台桌面應用開發工具]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Electron 是一個使用 JavaScript、HTML 和 CSS 構建跨平台的桌面應用程序。它基於 Node.js 和 Chromium，被 Atom 編輯器和許多其他應用程序使用。Electron 兼容 Mac、Windows 和 Linux，可以構建出三個平台的應用程序。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">Electron<span>&nbsp;v28.1.0<span>&nbsp;</span></span><span style="color:#333333">更新內容如下：</span></p><p style="text-align:start"><strong>Features</strong></p><ul><li>在<code>protocol.registerSchemesAsPrivileged</code>中添加了一個選項，允許在自定義方案中使用 V8 代碼緩存。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Felectron%2Felectron%2Fpull%2F40709" target="_blank">#40709</a></li></ul><p style="text-align:start"><strong><span><span><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>Fixes</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></p><ul><li>修復了默認<code>--inspect</code>port 的文檔。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Felectron%2Felectron%2Fpull%2F40743" target="_blank">#40743</a></li><li>防止 macOS 上的其他應用程序將 node 模式用作腳本運行程序。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Felectron%2Felectron%2Fpull%2F40710" target="_blank">#&nbsp;</a><span><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Felectron%2Felectron%2Fpull%2F40737" target="_blank">40710</a></span></span></li></ul><p style="text-align:start"><strong><span><span><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>Other Changes</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></p><ul><li>安全性：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fadvisories%2FGHSA-7c6v-f3h8-2x89" target="_blank">CVE-2023-7024</a>&nbsp;的向後移植修復。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Felectron%2Felectron%2Fpull%2F40806" target="_blank">#40806</a></li><li>將 Chromium 更新為 120.0.6099.71。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Felectron%2Felectron%2Fpull%2F40722" target="_blank">#40722</a></li></ul><p>更新説明：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Felectron%2Felectron%2Freleases%2Ftag%2Fv28.1.0" target="_blank">https://github.com/electron/electron/releases/tag/v28.1.0</a></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 26 Dec 2023 02:24:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272725/electron-28-1-0-released</guid>
            <link>https://www.oschina.net/news/272725/electron-28-1-0-released</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[⚡ 比 rz / sz 更好用的文件傳輸工具發佈 v1.1.7]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>trzsz ( trz / tsz ) 是支持 tmux 的 rz / sz，支持目錄傳輸，支持拖動上傳，支持進度條，支持各種終端……</p><p>Go 版 trzsz 發佈 v1.1.7，支持文件權限保持，支持原生的 rz / sz 服務端。</p><hr><h2>安裝方法</h2><ul><li><p style="margin-left:0; margin-right:0">Ubuntu 可用 apt 安裝</p><code>sudo apt install trzsz</code><div><div><pre><code><span style="color:#0086b3">sudo </span>apt <span style="color:#d73a49">update</span><strong>&amp;&amp;</strong><span style="color:#0086b3">sudo </span>apt <span style="color:#0086b3"><span style="color:#d73a49">install</span></span>software-properties-common
<span style="color:#0086b3">sudo </span><span style="color:#d73a49">add</span>-apt-repository ppa:trzsz/ppa <strong>&amp;&amp;</strong><span style="color:#0086b3">sudo </span>apt <span style="color:#d73a49">update</span><span style="color:#0086b3">sudo </span>apt <span style="color:#0086b3"><span style="color:#d73a49">install</span></span>trzsz
</code></pre></div></div></li><li><p style="margin-left:0; margin-right:0">Debian 可用 apt 安裝</p><code>sudo apt install trzsz</code><div><div><pre><code><span style="color:#0086b3"><span style="color:#6f42c1">sudo</span></span><span style="color:#032f62">apt </span><span style="color:#0086b3"><span style="color:#032f62">install </span></span><span style="color:#032f62">curl gpg</span><span style="color:#6f42c1">curl</span><span style="color:#000080"><span style="color:#032f62">-s</span></span><span style="color:#032f62"></span><span style="color:#dd1144"><span style="color:#032f62">'https://keyserver.ubuntu.com/pks/lookup?op=get&amp;search=0x7074ce75da7cc691c1ae1a7c7e51d1ad956055ca'</span></span><span style="color:#032f62"></span><span style="color:#dd1144"><span style="color:#032f62">\</span></span><span style="color:#032f62">
    | gpg </span><span style="color:#000080"><span style="color:#032f62">--dearmor</span></span><span style="color:#032f62"></span><span style="color:#000080"><span style="color:#032f62">-o</span></span><span style="color:#032f62"> /usr/share/keyrings/trzsz.gpg</span><span style="color:#0086b3"><span style="color:#6f42c1">echo</span></span><span style="color:#dd1144"><span style="color:#032f62">'deb [signed-by=/usr/share/keyrings/trzsz.gpg] https://ppa.launchpadcontent.net/trzsz/ppa/ubuntu jammy main'</span></span><span style="color:#032f62"></span><span style="color:#dd1144"><span style="color:#032f62">\</span></span><span style="color:#032f62">
    | </span><span style="color:#0086b3"><span style="color:#032f62">sudo tee</span></span><span style="color:#032f62"> /etc/apt/sources.list.d/trzsz.list</span><span style="color:#0086b3"><span style="color:#6f42c1">sudo</span></span><span style="color:#032f62">apt update</span><span style="color:#0086b3"><span style="color:#6f42c1">sudo</span></span><span style="color:#032f62">apt </span><span style="color:#0086b3"><span style="color:#032f62">install </span></span><span style="color:#032f62">trzsz</span></code></pre></div></div></li><li><p style="margin-left:0; margin-right:0">Linux 可用 yum 安裝</p><code>sudo yum install trzsz</code><ul><li><p style="margin-left:0; margin-right:0">國內推薦使用<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.wlnmp.com%2Finstall" target="_blank">wlnmp</a><span>&nbsp;</span>源，安裝 trzsz 只需要添加 wlnmp 源（ 配置 epel 源不是必須的 ）：</p><div><div><pre><code><span style="color:#0086b3"><span style="color:#6f42c1">curl</span><span style="color:#032f62">-fsSL "https://sh.wlnmp.com/wlnmp.sh" | bash</span></span><span style="color:#0086b3"><span style="color:#6f42c1">sudo</span></span><span style="color:#032f62">yum </span><span style="color:#0086b3"><span style="color:#032f62">install </span></span><span style="color:#032f62">trzsz</span></code></pre></div></div></li><li><p style="margin-left:0; margin-right:0">也可使用<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgemfury.com%2F" target="_blank">gemfury</a><span>&nbsp;</span>源（ 只要網絡通，所有操作系統通用 ）</p><div><div><pre><code><span style="color:#0086b3">echo</span><span style="color:#dd1144">'[trzsz]
name=Trzsz Repo
baseurl=https://yum.fury.io/trzsz/
enabled=1
gpgcheck=0'</span> | <span style="color:#0086b3">sudo tee</span> /etc/yum.repos.d/trzsz.repo

<span style="color:#0086b3">sudo </span>yum <span style="color:#0086b3">install </span>trzsz
</code></pre></div></div></li></ul></li><li><p style="margin-left:0; margin-right:0">ArchLinux 可用<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FJguer%2Fyay" target="_blank">yay</a><span>&nbsp;</span>安裝</p><code>yay -S trzsz</code><div><div><pre><code><span style="color:#6f42c1">yay</span><span style="color:#000080"><span style="color:#032f62">-Syu</span></span><span style="color:#6f42c1">yay</span><span style="color:#000080"><span style="color:#032f62">-S</span></span><span style="color:#032f62"> trzsz</span></code></pre></div></div></li><li><p style="margin-left:0; margin-right:0">MacOS 可用<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbrew.sh%2F" target="_blank">homebrew</a><span>&nbsp;</span>安裝</p><code>brew install trzsz-go</code><div><div><pre><code>brew <span style="color:#d73a49">update</span>
brew <span style="color:#0086b3"><span style="color:#d73a49">install</span></span>trzsz-<span style="color:#d73a49">go</span></code></pre></div></div></li><li><p style="margin-left:0; margin-right:0">Windows 可用<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fscoop.sh%2F" target="_blank">scoop</a><span>&nbsp;</span>/<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flearn.microsoft.com%2Fzh-cn%2Fwindows%2Fpackage-manager%2Fwinget%2F" target="_blank">winget</a><span>&nbsp;</span>/<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcommunity.chocolatey.org%2F" target="_blank">choco</a><span>&nbsp;</span>安裝</p><code>scoop install trzsz</code><span>&nbsp;</span>/<span>&nbsp;</span><code>winget install trzsz</code><span>&nbsp;</span>/<span>&nbsp;</span><code>choco install trzsz</code><div><div><pre><code><span style="color:#6f42c1">scoop</span><span style="color:#0086b3"><span style="color:#032f62">install </span></span><span style="color:#032f62">trzsz</span></code></pre></div></div><div><div><pre><code><span style="color:#6f42c1">winget</span><span style="color:#0086b3"><span style="color:#032f62">install </span></span><span style="color:#032f62">trzsz</span></code></pre></div></div><div><div><pre><code><span style="color:#6f42c1">choco</span><span style="color:#0086b3"><span style="color:#032f62">install </span></span><span style="color:#032f62">trzsz</span></code></pre></div></div></li><li><p style="margin-left:0; margin-right:0">用 Go 直接安裝（ 要求 go 1.20 以上 ）</p><code>go install github.com/trzsz/trzsz-go/cmd/...@latest</code><div><div><pre><code>go <span style="color:#0086b3"><span style="color:#d73a49">install</span></span>github.com/trzsz/trzsz-<span style="color:#d73a49">go</span>/cmd/trz@latest
<span style="color:#d73a49">go</span><span style="color:#0086b3"><span style="color:#d73a49">install</span></span>github.com/trzsz/trzsz-<span style="color:#d73a49">go</span>/cmd/tsz@latest
<span style="color:#d73a49">go</span><span style="color:#0086b3"><span style="color:#d73a49">install</span></span>github.com/trzsz/trzsz-<span style="color:#d73a49">go</span>/cmd/trzsz@latest
</code></pre></div></div><p style="margin-left:0; margin-right:0">安裝後，<code>trzsz</code><span>&nbsp;</span>程序一般位於<span>&nbsp;</span><code>~/go/bin/</code><span>&nbsp;</span>目錄下（ Windows 一般在<span>&nbsp;</span><code>C:\Users\your_name\go\bin\</code><span>&nbsp;</span>）。</p></li><li><p style="margin-left:0; margin-right:0">可從<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ftrzsz%2Ftrzsz-go%2Freleases" target="_blank">Releases</a><span>&nbsp;</span>中直接下載適用的版本</p><code>或者用 Go 編譯（ 要求 go 1.20 以上 ）</code><div><div><pre><code>git clone https:<span style="color:#6a737d">//github.com/trzsz/trzsz-go.git</span><span style="color:#0086b3">cd </span>trzsz-<span style="color:#d73a49">go</span><span>make</span><span style="color:#0086b3">sudo </span><span>make</span><span style="color:#0086b3">install</span></code></pre></div></div></li></ul><h2>使用方法</h2><h3>在本地電腦使用</h3><ul><li><p style="margin-left:0; margin-right:0">在命令前添加<span>&nbsp;</span><code>trzsz</code>，就可以支持 trzsz (trz /tsz) 上傳和下載了，如：</p><div><div><pre><code><span style="color:#6f42c1">trzsz</span><span style="color:#032f62">bash</span><span style="color:#6f42c1">trzsz</span><span style="color:#032f62">PowerShell</span><span style="color:#6f42c1">trzsz</span><span style="color:#032f62">ssh x.x.x.x</span></code></pre></div></div></li><li><p style="margin-left:0; margin-right:0">在命令前添加<span>&nbsp;</span><code>trzsz --dragfile</code>，就可以啓用拖拽上傳功能，如：</p><div><div><pre><code><span style="color:#d73a49">trzsz</span><span style="color:#000080"><span style="color:#d73a49">-d</span></span><span style="color:#d73a49">ssh</span><span style="color:#d73a49">x</span><span style="color:#6f42c1">.x</span><span style="color:#6f42c1">.x</span><span style="color:#6f42c1">.x</span><span style="color:#d73a49">trzsz</span><span style="color:#000080"><span style="color:#d73a49">--dragfile</span></span><span style="color:#d73a49">ssh</span><span style="color:#d73a49">x</span><span style="color:#6f42c1">.x</span><span style="color:#6f42c1">.x</span><span style="color:#6f42c1">.x</span></code></pre></div></div></li></ul><h3>在跳板機上使用</h3><ul><li><p style="margin-left:0; margin-right:0">如果在跳板機上使用<span>&nbsp;</span><code>tmux</code>，則需要再使用<span>&nbsp;</span><code>trzsz --relay ssh</code><span>&nbsp;</span>登錄遠程服務器，如：</p><div><div><pre><code><span style="color:#6f42c1">trzsz</span><span style="color:#032f62">ssh jump_server</span><span style="color:#6f42c1">tmux</span><span style="color:#6f42c1">trzsz</span><span style="color:#000080"><span style="color:#032f62">--relay</span></span><span style="color:#032f62"> ssh remote_server</span></code></pre></div></div></li></ul><h3>在服務器上使用</h3><ul><li><p style="margin-left:0; margin-right:0">與 lrzsz (rz /sz) 類似，使用<span>&nbsp;</span><code>trz</code><span>&nbsp;</span>命令上傳文件，使用<span>&nbsp;</span><code>tsz /path/to/file</code><span>&nbsp;</span>命令下載文件。</p></li><li><p style="margin-left:0; margin-right:0">有關<span>&nbsp;</span><code>trzsz</code><span>&nbsp;</span>更詳細的文檔，請查看<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftrzsz.github.io%2Fcn%2F" target="_blank">https://trzsz.github.io/cn/</a>。</p></li></ul><h2>使用建議</h2><ul><li><p style="margin-left:0; margin-right:0">為了使用方便，可以設置<span>&nbsp;</span><code>alias</code><span>&nbsp;</span>，例如<span>&nbsp;</span><code>alias ssh="trzsz ssh"</code>，又或者<span>&nbsp;</span><code>alias ssh="trzsz -d ssh"</code><span>&nbsp;</span>支持拖文件上傳。</p></li><li><p style="margin-left:0; margin-right:0">如果在本地電腦使用<span>&nbsp;</span><code>tmux</code>，先不帶<span>&nbsp;</span><code>trzsz</code><span>&nbsp;</span>運行<span>&nbsp;</span><code>tmux</code>，然後再使用<span>&nbsp;</span><code>trzsz ssh</code><span>&nbsp;</span>登錄遠程服務器。</p></li></ul><h2>可配置項</h2><p style="color:#606c71; margin-left:0; margin-right:0; text-align:start"><code>trzsz</code><span>&nbsp;</span>使用的配置文件是<span>&nbsp;</span><code>~/.trzsz.conf</code>（ Windows 是<span>&nbsp;</span><code>C:\Users\your_name\.trzsz.conf</code><span>&nbsp;</span>）。注意路徑必須包含<span>&nbsp;</span><code>/</code><span>&nbsp;</span>結尾，如：</p><pre><code>DefaultUploadPath =
DefaultDownloadPath = /Users/username/Downloads/
</code></pre><ul><li><p style="margin-left:0; margin-right:0">如果<span>&nbsp;</span><code>DefaultUploadPath</code><span>&nbsp;</span>不為空，上傳選擇文件時會默認打開此目錄。</p></li><li><p style="margin-left:0; margin-right:0">如果<span>&nbsp;</span><code>DefaultDownloadPath</code><span>&nbsp;</span>不為空，下載文件時會自動下載到此目錄（ 不需要再彈窗選擇路徑 ）。</p></li></ul><h2>支持 Zmodem</h2><ul><li><p style="margin-left:0; margin-right:0">使用<span>&nbsp;</span><code>-z</code><span>&nbsp;</span>或<span>&nbsp;</span><code>--zmodem</code><span>&nbsp;</span>啓用<span>&nbsp;</span><code>rz / sz</code><span>&nbsp;</span>功能，例如<span>&nbsp;</span><code>trzsz -z ssh remote_server</code>。</p></li><li><p style="margin-left:0; margin-right:0">需要在客戶端（ 本地電腦 ）上安裝<span>&nbsp;</span><code>lrzsz</code>，例如<span>&nbsp;</span><code>brew install lrzsz</code>、<code>apt install lrzsz</code><span>&nbsp;</span>等。</p></li><li><p style="margin-left:0; margin-right:0"><code>trzsz --zmodem ssh xxx</code><span>&nbsp;</span>不兼容 Windows，你可以使用<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftrzsz.github.io%2Fcn%2Fssh" target="_blank">trzsz-ssh ( tssh )</a><span>&nbsp;</span>代替，如<span>&nbsp;</span><code>tssh --zmodem xxx</code>。</p></li><li><p style="margin-left:0; margin-right:0">關於進度條，己傳文件大小和傳輸速度不是精確值，會有一些偏差，它的主要作用只是指示傳輸正在進行中。</p></li></ul><h2>常見問題</h2><ul><li><p style="margin-left:0; margin-right:0">如果<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.msys2.org%2F" target="_blank">MSYS2</a><span>&nbsp;</span>或<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.atlassian.com%2Fgit%2Ftutorials%2Fgit-bash" target="_blank">Git Bash</a><span>&nbsp;</span>遇到錯誤<span>&nbsp;</span><code>The handle is invalid</code>。</p><ul><li>在<span>&nbsp;</span><code>trzsz</code><span>&nbsp;</span>前面加上<span>&nbsp;</span><code>winpty</code><span>&nbsp;</span>即可，如<span>&nbsp;</span><code>winpty trzsz ssh x.x.x.x</code><span>&nbsp;</span>這樣登錄服務器。</li><li><code>Git Bash</code><span>&nbsp;</span>已默認安裝有<span>&nbsp;</span><code>winpty</code>，<code>MSYS2</code><span>&nbsp;</span>需要手工安裝<span>&nbsp;</span><code>pacman -S winpty</code>。</li></ul></li><li><p style="margin-left:0; margin-right:0">在<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.msys2.org%2F" target="_blank">MSYS2</a><span>&nbsp;</span>和<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.cygwin.com%2F" target="_blank">Cygwin</a><span>&nbsp;</span>等，不支持直接使用<span>&nbsp;</span><code>/usr/bin/ssh</code><span>&nbsp;</span>那個<span>&nbsp;</span><code>ssh</code>，可能會傳輸失敗。需要使用 Windows 自帶的<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.microsoft.com%2Fen-us%2Fwindows-server%2Fadministration%2Fopenssh%2Fopenssh_install_firstuse" target="_blank">OpenSSH</a>。</p><ul><li><code>MSYS2</code><span>&nbsp;</span>中用法<span>&nbsp;</span><code>winpty trzsz /c/Windows/System32/OpenSSH/ssh.exe x.x.x.x</code>。</li><li><code>Cygwin</code><span>&nbsp;</span>中用法<span>&nbsp;</span><code>trzsz "C:\Windows\System32\OpenSSH\ssh.exe" x.x.x.x</code>。</li><li>⭐ 推薦使用<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftrzsz.github.io%2Fcn%2Fssh" target="_blank">trzsz-ssh</a><span>&nbsp;</span>( tssh )，<code>tssh</code><span>&nbsp;</span>等同於<span>&nbsp;</span><code>trzsz ssh</code>。</li></ul></li><li><p style="margin-left:0; margin-right:0">拖文件或目錄到終端後，沒有自動上傳？</p><ul><li>檢查<span>&nbsp;</span><code>ssh</code><span>&nbsp;</span>登錄時有沒有加上<span>&nbsp;</span><code>--dragfile</code><span>&nbsp;</span>選項，如<span>&nbsp;</span><code>trzsz --dragfile ssh x.x.x.x</code><span>&nbsp;</span>。</li><li>檢查服務器上有沒有安裝<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftrzsz.github.io%2F" target="_blank">trzsz</a>，<code>trz</code><span>&nbsp;</span>應在某個<span>&nbsp;</span><code>PATH</code><span>&nbsp;</span>路徑下。</li><li>在 Windows 中，檢查標題有沒有<code>管理員</code>三個字，<code>以管理員運行</code><span>&nbsp;</span>時可能會由於 UAC 設置的原因導致拖不了文件。</li><li>在 Windows Terminal 中，需要將文件或目錄拖到左上角，顯示<code>粘貼文件路徑</code><span>&nbsp;</span>時再放開。</li><li>在 Windows 的<span>&nbsp;</span><code>cmd</code><span>&nbsp;</span>和<span>&nbsp;</span><code>PowerShell</code><span>&nbsp;</span>中，一次只能拖一個文件或目錄，拖多個也只有鼠標正對着的那個是生效的。</li></ul></li></ul><h2>開發指引</h2><p style="color:#606c71; margin-left:0; margin-right:0; text-align:start">想要讓你自己開發的 ssh 客戶端支持 trzsz ？請參考<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ftrzsz%2Ftrzsz-go%2Fblob%2Fmain%2Fexamples%2Fssh_client.go" target="_blank">go ssh client example</a>。</p><h2>錄屏演示</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">在 windows 的 cmd 使用示例：</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="500" src="https://oscimg.oschina.net/oscnet/up-a89db2d8017d9dc13594649a3ee31d756fb.gif" width="800" referrerpolicy="no-referrer"></p><hr><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">在 Ubuntu 原生終端使用示例：</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="500" src="https://oscimg.oschina.net/oscnet/up-0cfc7533b2690d884e6464ae804a074a206.gif" width="800" referrerpolicy="no-referrer"></p><hr><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">在 Mac 原生終端拖文件上傳的示例：</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="500" src="https://oscimg.oschina.net/oscnet/up-1272a927e74f74368f43bfc310739b5e6b4.gif" width="800" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 26 Dec 2023 02:17:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272724/trzsz-go-1-1-7-released</guid>
            <link>https://www.oschina.net/news/272724/trzsz-go-1-1-7-released</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[開放籤開源電子簽章 1.0 版本上線一週的總結]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#4272ef"><strong><span>上線後的反饋</span></strong></span>&nbsp; &nbsp; &nbsp; &nbsp;</p><p style="color:#2c3e50; margin-left:0; margin-right:0; text-align:left">&nbsp; &nbsp; &nbsp; &nbsp; 開放籤 1.0 版本於 12 月 15 日上線發佈後，給我們帶來了很多驚喜，也矯正了我們很多錯誤的觀點。</p><p style="color:#2c3e50; margin-left:0; margin-right:0; text-align:left">&nbsp; &nbsp; &nbsp; &nbsp; 好的地方是我們開源工具版、企業版共有數百個用戶在使用。在開源社區獲取了 40 多個 start（感謝肯定），官網每天都有六七十的訪問量。這些小成績更加堅定了我們之前的判斷。</p><p style="color:#2c3e50; margin-left:0; margin-right:0; text-align:left">&nbsp; &nbsp; &nbsp; &nbsp; 不太好的是我們沒有想明白企業版的收費邏輯，很多用戶諮詢企業版的收費方式，我們目前也沒啥標準，可能會給早期客戶帶來不好的感受。不瞞大家説，其實企業版的收費邏輯我們也沒有想好，因為我們產品出來前也沒有真實付費的用戶，所以收費這方面我們先跑跑再説。在沒有明確的收費邏輯前，我們先讓早期用戶免費用起來也是挺好的方式，最起碼能證明產品能力對用戶來説是有價值的，怎麼收費慢慢來吧。</p><p style="color:#2c3e50; margin-left:0; margin-right:0; text-align:left">&nbsp; &nbsp; &nbsp; &nbsp; 兩個版本用戶反饋最多的問題主要有：</p><p style="color:#2c3e50; margin-left:0; margin-right:0; text-align:left">&nbsp; &nbsp; &nbsp; &nbsp;<span>&nbsp;</span><strong>開源工具版：</strong>支持 SM2 算法、OFD 文件簽署、分辨率兼容等；</p><p style="color:#2c3e50; margin-left:0; margin-right:0; text-align:left">&nbsp; &nbsp; &nbsp; &nbsp;<span>&nbsp;</span><strong>企業版：</strong>標準收費邏輯是什麼？（希望大家可以提供些建議）</p><h1><span style="color:#4272ef"><strong><span>下一步工作計劃</span></strong></span></h1><p style="color:#2c3e50; margin-left:0; margin-right:0; text-align:left">&nbsp; &nbsp; &nbsp; &nbsp;<span>&nbsp;</span><strong>開源工具版：</strong></p><p style="color:#2c3e50; margin-left:0; margin-right:0; text-align:left">&nbsp; &nbsp; &nbsp; （1）支持 SM2 算法、OFD 文件簽署、分辨率兼容等；</p><p style="color:#2c3e50; margin-left:0; margin-right:0; text-align:left">&nbsp; &nbsp; &nbsp; （2）前端頁面支持移動端的相關操作；</p><p style="color:#2c3e50; margin-left:0; margin-right:0; text-align:left">&nbsp; &nbsp; &nbsp; &nbsp;<span>&nbsp;</span><strong>企業版：</strong></p><p style="color:#2c3e50; margin-left:0; margin-right:0; text-align:left">&nbsp; &nbsp; &nbsp; （1）增加 CA 機構數字證書，支持具有法律效力的電子簽名；</p><p style="color:#2c3e50; margin-left:0; margin-right:0; text-align:left">&nbsp; &nbsp; &nbsp; （2）增加業務線功能模塊，滿足各種簽署場景的靈活配置；</p><p style="color:#2c3e50; margin-left:0; margin-right:0; text-align:left">&nbsp; &nbsp; &nbsp; （3）增加文件模板功能，滿足在線編輯文件模板；</p><p style="color:#2c3e50; margin-left:0; margin-right:0; text-align:left">&nbsp; &nbsp; &nbsp; （4）梳理企業版收費標準；</p><h1><strong><span style="color:#4272ef">總結</span></strong></h1><p style="color:#2c3e50; margin-left:0; margin-right:0; text-align:left">&nbsp; &nbsp; &nbsp; &nbsp; 開放籤 1.0 版本上線後確實給我們帶來了很多驚喜，也快速的驗證了我們很多的想法。接下來還需要以更快的速度迭代出更多好用的功能帶給用戶，儘快打通與用戶的真實互動，讓用戶早日應用在真實業務環境中。</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 26 Dec 2023 02:12:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272720</guid>
            <link>https://www.oschina.net/news/272720</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[web 通訊平台 webtim 第二版發佈]]>
            </title>
            <description>
                <![CDATA[<div class="content"><blockquote><span>這是 webtim 版本 v0.0.2 版本，該版本有比較大的界面調整，優化和功能新增</span><br><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftlnet.top%2Fwebtim" target="_blank"><span>webtim 官網</span></a></blockquote><p style="color:#212529; text-align:start"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftim.tlnet.top%2F" target="_blank"><span><strong>webtim 在線訪問地址</strong></span></a></p><p style="color:#212529; text-align:start"><strong>以下是更新説明：</strong></p><p><strong>一.解決問題：</strong><br> 解決 webtim 頁面聊天記錄部分亂序的問題。<br> 引起亂序的原因有兩個：</p><ul><li>&nbsp;&nbsp;&nbsp; 數據異步加載導致</li><li>&nbsp;&nbsp;&nbsp; 離線數據比拉取數據先到達後被先加載</li></ul><p>以上兩個問題導致的亂序都屬於頁面處理邏輯問題。<br> 解決方法：去掉同一批有序數據的異步加載.<br><strong>二. 功能優化：</strong><br> 優化視頻加載閃爍問題，為瞭解決該問題，作者寫了一個 js 視頻組件 <a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fgithub.com%2Fdonnie4w%2Fvideojoin" target="_blank">videojoin </a>，支持視頻流，無縫連續的播放。<br><strong>三. 功能更新：</strong></p><ol><li>增加直播間功能</li><li>增加消息撤回功能</li></ol><p><strong>四.&nbsp; webtim 説明：</strong></p><blockquote><span><strong>webtim 是 Web 通訊平台。服務器是<span>&nbsp;</span></strong></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftlnet.top%2Ftim" target="_blank"><span><strong>Tim</strong></span></a><span><strong>。前端使用 tim 的 js 客戶端<span>&nbsp;</span></strong></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdonnie4w%2Ftimjs" target="_blank"><span><strong>timjs</strong></span></a><span><strong><span>&nbsp;</span>調用 tim 服務器接口渲染頁面。webtim 開發目的是通過界面來顯示錶達 tim 接口功能。tim 是去中心化的分佈式 IM 引擎。支持基礎通訊模式，對端到端的數據流傳輸支持非常全面，幾乎涵蓋了所有端到端的通訊需求，所以 webtim 可以非常流暢的實現任意通訊需求。但 tim 的強大並非其通訊模式，而是去中心化的集羣功能，tim 的水平擴展能力非常強，可以支持成千上萬的節點集羣，沒有中心依賴和限制，支持數據分佈式存儲，數據庫節點動態擴容。</strong></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftim.tlnet.top%2F" target="_blank"><span><strong>webtim 在線訪問地址</strong></span></a></blockquote><p style="color:#212529; text-align:start">webtim 的 im 功能：用戶註冊，登錄，修改資料，用戶關係功能系列操作，羣功能系列操作，用戶狀態傳輸，通信數據傳輸。</p><p style="color:#212529; text-align:start">webtim 的流實現：實時視頻電話，個人直播，視頻播放直播，多人視頻會議等</p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftlnet.top%2Ftimdoc" target="_blank"><span>TIM 開發使用文檔</span></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftlnet.top%2Ftim" target="_blank"><span>TIM 即時通訊引擎</span></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdonnie4w%2Fwebtim" target="_blank"><span>webtim 源碼地址</span></a><span><span>&nbsp;</span>&nbsp;</span></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdonnie4w%2Ftimjs" target="_blank"><span>timjs 源碼地址</span></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftlnet.top%2Ftldb" target="_blank">Tldb 分佈式數據庫</a></li></ul><p style="color:#212529; text-align:start"><strong>説明：</strong></p><ol><li>webtim 的 im 通訊邏輯功能是在 tim 服務端處理完成的，webtim 用 js 處理 tim 返回的處理結果，並將數據渲染到頁面展示。所以，使用 tim 進行 IM 通訊是跨平台的，web 端，安卓，蘋果等終端可以通過調用 tim 接口，進行業務上的數據通訊或業務處理。</li><li>webtim 不是專門的直播平台，只對視頻進行簡單採集。有時卡頓現象主要是採集數據出現錯誤或數據解析錯誤導致，更好的視頻體驗需要對採集數據做更細緻的處理</li><li>註冊 webtim 的賬號是信息安全的。tim 不會記錄註冊者的賬號，tim 是內置賬號系統，使用內置賬號通訊。而且通訊信息加密，用戶資料加密，所以，用戶不必擔心資料泄密，即使是 tim 作者本人，也沒法反向獲取用戶的賬號密碼等信息。這一點在開源代碼中可以體現 
  <hr><p>&nbsp;</p></li></ol><h4><strong>webtim 功能截圖：</strong></h4><p><img alt="" height="860" src="https://oscimg.oschina.net/oscnet/up-be20db0ace2613170d9cdc2a6e81556edd2.jpg" width="1907" referrerpolicy="no-referrer"></p><p><img alt="" height="899" src="https://oscimg.oschina.net/oscnet/up-e1c61d319ef7d2328fa697dd410fdb54b8a.jpg" width="1908" referrerpolicy="no-referrer"></p><p>&nbsp;</p><hr><p><strong>視頻直播功能截圖：</strong></p><p><strong><img alt="" height="820" src="https://oscimg.oschina.net/oscnet/up-4d9658741c5b0c256e136d122271e9a48e7.jpg" width="1900" referrerpolicy="no-referrer"></strong></p><p><img alt="" height="818" src="https://oscimg.oschina.net/oscnet/up-91c5c5c38b3eccb04e6ecd684637fd42cc4.jpg" width="1897" referrerpolicy="no-referrer"></p><p><img alt="" height="814" src="https://oscimg.oschina.net/oscnet/up-2f92a5d19edd6b5130d35c6d60474b458d3.jpg" width="1901" referrerpolicy="no-referrer"></p><p><img alt="" height="818" src="https://oscimg.oschina.net/oscnet/up-4f12b078a22a95528c5a5ed2381730b63e1.jpg" width="1903" referrerpolicy="no-referrer"></p><hr><p><strong>tim 開發使用</strong></p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftlnet.top%2Ftim" target="_blank">tim 官網</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftlnet.top%2Ftimdoc" target="_blank">tim 使用文檔</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdonnie4w%2FTim-Practical-Article" target="_blank">Github 持續更新 tim 系列文章</a></li></ul><hr><p style="color:#212529; text-align:start"><strong>有興趣跟進 webtim 或 tim 項目可以加作者微信或 tim 微信交流羣，或關注作者<span>&nbsp;</span></strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdonnie4w" target="_blank"><strong>github</strong></a></p><hr><hr><p style="color:#212529; text-align:start">&nbsp;</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 26 Dec 2023 01:38:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272710/webtim-0-0-2-released</guid>
            <link>https://www.oschina.net/news/272710/webtim-0-0-2-released</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[魔豆文庫 moredoc v2.2.0 發佈，實現廣告支持和富文本編輯器增強]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bookstack.cn%2Fprojects%2Fmoredoc%2F25025565fbb0a50a52bcb76e9586ac42.png" target="_blank"><img alt="魔豆文庫" src="https://static.sitestack.cn/projects/moredoc/25025565fbb0a50a52bcb76e9586ac42.png" referrerpolicy="no-referrer"></a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">魔豆文庫 MOREDOC，使用 Go 語言開發實現的文庫解決方案，<a href="https://gitee.com/truthhun/DocHub">dochub</a>文庫的重構版本，支持 office (全部類型)、PDF、TXT、EPUB、MOBI 等多種文檔格式的在線閲讀瀏覽，支持<code>無限級分類</code>、<code>文檔批量上傳</code>、<code>文檔批量轉換</code>、<code>全文搜索</code>、<code>雲存儲</code>、<code>網絡爬蟲</code>、<code>VIP</code>、<code>手機號登錄註冊</code>以及<code>支付寶</code>和<code>微信支付</code>等功能，擁有簡潔美觀的用戶視覺和功能體驗，以及配套的<a href="https://gitee.com/mnt-ltd/moredoc-app">微信小程序</a>。</p><h2>技術棧</h2><ul><li>Golang ：gin + gRPC + GORM</li><li>Vue.js : nuxt2 + element-ui</li><li>Database : MySQL 5.7+</li></ul><h2>升級日誌</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>社區版 (開源版) 升級日誌</strong></p><ul><li>文檔默認預覽格式調整為<code>webp</code>，以提升預覽加載速度和減少存儲空間佔用</li><li>更換文章富文本編輯器，由<code>wangEditor</code>更換為<code>tinyMCE</code></li><li>優化圖片驗證碼的獲取，以節省服務器資源</li><li>增加廣告位功能，可以在網站首頁、列表頁、搜索頁、文檔預覽頁等頁面投放廣告</li><li>支持按百分比設置最大預覽頁（在<code>系統設置</code>-&gt;<code>轉換配置</code>中設置）</li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>專業版升級日誌</strong></p><blockquote><p style="margin-left:0; margin-right:0">專業版升級內容包含社區版升級內容</p></blockquote><ul><li>集成 Google Oauth2 登錄</li><li>支持關閉訂單功能 (在<code>系統設置</code>-&gt;<code>展示配置</code>設置。適用於非營利機構網站)</li><li>支持微信小程序激勵視頻廣告，用戶可以在小程序通過觀看激勵視頻廣告獲得積分獎勵和文檔下載（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bookstack.cn%2Fread%2Fmoredoc%2Frewarded-ad.md" target="_blank">微信小程序激勵視頻廣告配置</a>）</li></ul><h2>演示站點</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">程序新功能體驗，一睹為快！</p><ul><li>網址：<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmoredoc.mnt.ltd%2F" target="_blank">https://moredoc.mnt.ltd</a></li><li>管理員賬號： admin</li><li>管理員密碼： mnt.ltd</li></ul><blockquote><p style="margin-left:0; margin-right:0">演示站點，每天凌晨 1:00 ~ 6:00，每隔一小時重置一次全部數據</p></blockquote><h2>開源地址</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>魔豆文庫 MOREDOC</strong></p><ul><li>Gitee -<span>&nbsp;</span><a href="https://gitee.com/mnt-ltd/moredoc">https://gitee.com/mnt-ltd/moredoc</a></li><li>Github -<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmnt-ltd%2Fmoredoc" target="_blank">https://github.com/mnt-ltd/moredoc</a></li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>配套小程序 ONEDOC</strong></p><ul><li>Gitee -<span>&nbsp;</span><a href="https://gitee.com/mnt-ltd/onedoc">https://gitee.com/mnt-ltd/onedoc</a></li><li>Github -<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmnt-ltd%2Fonedoc" target="_blank">https://github.com/mnt-ltd/onedoc</a></li></ul><h2>使用手冊</h2><p style="color:#333333; margin-left:0px; margin-right:0px; text-align:left">關於魔豆文庫安裝部署、二次開發等更詳細的教程，詳見書棧網<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bookstack.cn%2Fbooks%2Fmoredoc" target="_blank">《魔豆文庫使用手冊》</a></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 26 Dec 2023 01:16:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272709/moredoc-2-2-0-released</guid>
            <link>https://www.oschina.net/news/272709/moredoc-2-2-0-released</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[CLup 5.0.5 新版本發佈：為您的 PostgreSQL/PolarDB 管控平台注入更強動能]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>🎉 CLup 開源倉庫已經發布了令人矚目的 5.0.5 版本。這個全新的版本不僅延續了我們對高可用、監控告警、備份和恢復等功能的極致追求，更引入了兩項重大更新，旨在提升您的 PostgreSQL/PolarDB 管控體驗。</p><p>👉 首先，我們新增了 VIP 池的特性，可以讓您更加靈活、高效地管理您的虛擬 IP 資源，確保服務的穩定性和可靠性達到全新高度。無論是 IP 資源的初次分配，還是回收再利用，VIP 池管理都能為您提供強大的支持，讓您在面對複雜環境時遊刃有餘。</p><p>🌍 其次，我們在創建數據庫或集羣的過程中，新增了選擇 WAL 段文件大小的支持。（友情提示：此功能僅適用於 PG11 及以上版本以及 PolarDB。）這意味着您現在可以根據實際業務需求，精細化調整 WAL 段文件的大小，從而優化存儲效率，提高系統性能。這一改進將進一步提升您的數據庫環境的自定義能力和適應性。</p><p>🚀 CLup 5.0.5 版本是我們持續創新和精益求精的成果，我們堅信它將為您的 PostgreSQL/PolarDB 管控工作帶來前所未有的便利和效率。無論您是數據庫管理員、開發者還是運維工程師，CLup 都將成為您不可或缺的得力助手。</p><p>📣 我們誠邀您立即升級到 CLup 5.0.5 版本，親自體驗這些強大新功能帶來的改變。同時，我們也期待您的反饋和建議，共同推動 CLup 的發展。如果您覺得 CLup 對您有幫助，請給倉庫點一顆星星，讓更多的人可以看到這個項目，十分感謝！</p><p style="color:black; margin-left:0; margin-right:0; text-align:left">期待您的反饋，讓我們一起見證 CLup 軟件的不斷成長和進步！</p><p style="color:black; margin-left:0; margin-right:0; text-align:left">產品官網：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.csudata.com%2Fclup">https://www.csudata.com/clup</a></p><p style="color:black; margin-left:0; margin-right:0; text-align:left">官方文檔：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.csudata.com%2Fclup%2Fmanual">https://www.csudata.com/clup/manual</a></p><p style="color:black; margin-left:0; margin-right:0; text-align:left">開源版 Gitee 地址：</p><ul><li><p style="margin-left:0; margin-right:0">server: https://gitee.com/csudata/clup</p></li><li><p style="margin-left:0; margin-right:0">agent: https://gitee.com/csudata/clup-agent</p></li></ul><p style="color:black; margin-left:0; margin-right:0; text-align:left">開源版 Github 地址</p><ul><li><p style="margin-left:0; margin-right:0">server：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcsudata%2Fclup">https://github.com/csudata/clup</a></p></li><li><p style="margin-left:0; margin-right:0">agent：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcsudata%2Fclup-agent">https://github.com/csudata/clup-agent</a></p></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Tue, 26 Dec 2023 00:03:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272705/clup-5-0-5-released</guid>
            <link>https://www.oschina.net/news/272705/clup-5-0-5-released</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[DDNS 動態域名工具更新：支持 IPv6]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">DDNS 動態域名工具更新，具體更新內容如下：</p><ul><li>支持 IPv6</li><li>解決 mybatis 代碼生成器在 windows 下亂碼問題</li><li><p>優化 docker.groovy，使用容器編譯，添加 version 參數</p></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Mon, 25 Dec 2023 14:58:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272684/ddns-updated</guid>
            <link>https://www.oschina.net/news/272684/ddns-updated</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Wine runner 3.6.1 已經發布，小白友好型 Wine 運行器]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Wine runner 3.6.1 已經發布，小白友好型 Wine 運行器</p><p>此版本更新內容包括：</p><blockquote><p>注：spark-deepin-wine-runner 是普通包，spark-deepin-wine-runner-ace 是使用 ace 兼容環境運行的運行器</p></blockquote><h1>3.6.1 更新內容</h1><p><strong>※1、修復應用無法打開的問題</strong></p><h1>3.6.0 更新內容</h1><p><strong>※1、修復高級打包器選擇軟件適配腳本後無法打包的問題 <a href="https://gitee.com/gfdgd-xi/deep-wine-runner/issues/I8I110" target="_blank">https://gitee.com/gfdgd-xi/deep-wine-runner/issues/I8I110</a></strong><br><strong>※2、支持調用 Deepin Wine8 Stable</strong><br><strong>※3、移除過時的 Wine 安裝程序入口</strong><br><strong>※4、Wine 安裝器支持根據地區自動選擇國內源以及國際源</strong><br><strong>※5、Wine 安裝器新增 Sourceforge 源</strong><br><strong>※6、新增 Wine 運行報告生成功能</strong><br><strong>※7、初步英語翻譯</strong><br><strong>※8、新增離線安裝包（只支持 amd64）</strong><br><strong>※9、支持識別 /opt 文件夾下的 Wine</strong><br> 10、新增 Wine 運行器視頻教程的 Youtube 入口</p><p><img alt="圖片.png" src="https://storage.deepin.org/thread/202312241003211288_%E5%9B%BE%E7%89%87.png" referrerpolicy="no-referrer"></p><h1>離線版本下載鏈接</h1><p>123pan：<a href="https://gitee.com/link?target=https%3A%2F%2Fwww.123pan.com%2Fs%2FpDSKVv-pAJWv.html" target="_blank">https://www.123pan.com/s/pDSKVv-pAJWv.html</a> 百度網盤：<a href="https://gitee.com/link?target=https%3A%2F%2Fpan.baidu.com%2Fs%2F1klBw63tw2_ZQLzmi11dDBw%3Fpwd%3D7bu5" target="_blank">https://pan.baidu.com/s/1klBw63tw2_ZQLzmi11dDBw?pwd=7bu5</a> 提取碼: 7bu5 誠通網盤：<a href="https://gitee.com/link?target=http%3A%2F%2Fctfile.gfdgdxi.top%2Fd%2F31540479-59254792-909739%3Fp%3D2061" target="_blank">http://ctfile.gfdgdxi.top/d/31540479-59254792-909739?p=2061</a> (訪問密碼: 2061) Github：<a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fgfdgd-xi%2Fdeep-wine-runner%2Freleases%2F" target="_blank">https://github.com/gfdgd-xi/deep-wine-runner/releases/</a> Sourceforge：<a href="https://gitee.com/link?target=https%3A%2F%2Fsourceforge.net%2Fprojects%2Fdeep-wine-runner%2Ffiles%2F" target="_blank">https://sourceforge.net/projects/deep-wine-runner/files/</a></p><p>詳情查看：<a href="https://gitee.com/gfdgd-xi/deep-wine-runner/releases/3.6.1">https://gitee.com/gfdgd-xi/deep-wine-runner/releases/3.6.1</a></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 25 Dec 2023 14:20:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272682/wine-runner-3-6-1-released</guid>
            <link>https://www.oschina.net/news/272682/wine-runner-3-6-1-released</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Java 工具集 Hutool-5.8.24 發佈，一起發發牢騷]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img src="https://static.oschina.net/uploads/img/201803/21114512_tLDC.jpg" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhutool.cn%2F" target="_blank">https://hutool.cn/</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="background-color:#f6f6f6">Hutool</span><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span>是一個功能豐富且易用的</span><strong><span>&nbsp;</span>Java 工具庫</strong><span style="background-color:#ffffff; color:#40485b">，通過諸多實用工具類的使用，旨在幫助開發者快速、便捷地完成各類開發任務。 這些封裝的工具涵蓋了字符串、數字、集合、編碼、日期、文件、IO、加密、數據庫 JDBC、JSON、HTTP 客戶端等一系列操作， 可以滿足各種不同的開發需求。</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">----------------------------------------------------------------------------</p><p>&nbsp; &nbsp; &nbsp; &nbsp; 此次更新為常規 bug 修復，整體來説 5.x 已經進入一個穩定期，之後的版本主要集中在 bug 修復上，最近的所謂 bug，其實是對 jdk9+的兼容性修復，還有針對 graalvm 的兼容性修復。</p><p>&nbsp; &nbsp; &nbsp; &nbsp; 這裏略微發發牢騷，隨着 Hutool 使用的廣泛，用戶羣也逐漸擴展開來，甚至到了一些我的知識盲區，沒辦法，只能是一邊修復 bug，一邊學習，很多兼容性 bug 有的是用戶抽出大量時間幫忙測試，有的是用戶 debug 代碼直接指明錯誤位置，甚至提交 PR 直接修復，還熱心給出修復的原因以及參考的資料，在此為廣大熱心的用戶表示感謝，你們的負重前行，會讓後續的用戶少走彎路。</p><p>&nbsp; &nbsp; &nbsp; &nbsp;第二個發牢騷的點就是 JDK 本身了，説實話，可能在大部分人心目中 JDK 是完美的存在的，一出問題不是框架庫的問題，就是自己知識太淺薄，事實上根據用戶提出的一些 issue，發現是 JDK 本身設計的不合理和 bug，我們需要總是需要通過一些「非常規」手段去繞過那些 bug（比如通過反射修改 JDK 某些參數屬性），當然這些蜜汁操作，在升級 JDK9+後會成為用戶的噩夢，換來的當然是對工具庫和框架的強力吐槽。最後總結是：JDK 有 bug，可以當面試題啊 Spring 有 bug，你擺脫不掉還得繼續用啊。其實國內開源環境的優點是溝通渠道順暢，這也是一把雙刃劍，優點是可以將用戶的訴求及時反饋和處理，缺點也很明顯，用戶的情緒傳遞也很快，也會影響開發者的情緒。</p><p>&nbsp; &nbsp; &nbsp; 「沒有銀彈」，沒有無 bug 的程序和代碼，也沒有完美的用戶，我們也不是考試滿分的神童，我們也是普通的開發者和學習者，開源的意義在於「分享」和"溝通"，好的開源項目不只是提供便利的工具，而是傳遞一種開源精神，一種協作方式和默契精神，從而更快的完成需求和團隊協作。</p><p>----------------------------------------------------------------------------</p><p>主要更新如下：</p><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhutool.cn%2Fdocs%2F%23%2FCHANGELOG%3Fid%3D%25f0%259f%2590%25a3%25e6%2596%25b0%25e7%2589%25b9%25e6%2580%25a7" target="_blank"><span style="color:var(--textColor)">🐣新特性</span></a></h3><ul><li>【cache 】 Cache 增加 get 重載，可自定義超時時間（issue#I8G0DL@Gitee）</li><li>【cache 】 JWT#sign 增加重載，可選是否增加默認的 typ 參數（issue#3386@Github）</li><li>【db 】 增加識別 OpenGauss 的驅動類（issue#I8K6C0@Gitee）</li><li>【core 】 修復 CharSequenceUtil 註釋和引用，避免循環引用</li><li>【extra 】 SpringUtil 增加 getProperty 重載（pr#1122@Gitee）</li><li>【core 】 FileTypeUtil 增加 null 判斷（issue#3419@Github）</li><li>【core 】 DateUtil.parse 支持毫秒時間戳（issue#I8NMP7@Gitee）</li><li>【extra 】 優化 TokenizerEngine 使用 IK 分詞器支持併發（pr#3427@Github）</li><li>【core 】 Opt.ofEmptyAble 支持更多類型（issue#I8OOSY@Gitee）</li><li>【http 】 HTMLFilter 保留 p 標籤（issue#3433@Gitee）</li></ul><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhutool.cn%2Fdocs%2F%23%2FCHANGELOG%3Fid%3D%25f0%259f%2590%259ebug%25e4%25bf%25ae%25e5%25a4%258d" target="_blank"><span style="color:var(--textColor)">🐞Bug 修復</span></a></h3><ul><li>【core 】 修復 LocalDateTime#parseDate 未判斷空問題問題（issue#I8FN7F@Gitee）</li><li>【http 】 修復 RootAction send404 拋異常問題（pr#1107@Gitee）</li><li>【extra 】 修復 Archiver 最後一個 Entry 為空文件夾時未關閉 Entry 問題（pr#1123@Gitee）</li><li>【core 】 修復 ImgUtil.convert png 轉 jpg 在 jdk9+中失敗問題（issue#I8L8UA@Gitee）</li><li>【cache 】 修復 StampedCache 的 get 方法非原子問題（issue#I8MEIX@Gitee）</li><li>【core 】 修復 StrSplitter.splitByRegex 使用空參數導致的 OOM 問題（issue#3421@Github）</li><li>【db 】 修復嵌套 SQL 中 order by 子句錯誤截斷問題（issue#I89RXV@Gitee）</li><li>【http 】 修復 graalvm 編譯後，未讀取 Content-Length 可能導致的讀取時間過長問題（issue#I6Q30X@Gitee）</li><li>【core 】 修復 JavaSourceCompiler.addSource 目錄處理錯誤問題（issue#3425@Github）</li><li>【core 】 修復時間戳轉 Bean 時異常問題（issue#I8NMP7@Gitee）</li><li>【core 】 修復 PostgreSQL 使用 upsert 字段大小寫問題問題（issue#I8PB4X@Gitee）</li><li>【extra 】 修復 TinyPinyinEngine 可能的空指針問題（issue#3437@Github）</li><li>【core 】 修復 graalvm 原生打包使用 http 工具被轉為 file 協議問題（issue#I8PY3Y@Gitee）</li><li>【poi 】 修復 cloneSheet 參數錯誤導致非 XSSFWorkbook 錯誤命名問題（issue#I8QIBB@Gitee）</li></ul></div>
                                    ]]>
            </description>
            <pubDate>Mon, 25 Dec 2023 10:49:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272641/hutool-5-8-24-released</guid>
            <link>https://www.oschina.net/news/272641/hutool-5-8-24-released</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Angular v17 正式發佈！]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">原文：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fblog.angular.io%2Fintroducing-angular-v17-4d7033312e4b" target="_blank">Introducing Angular v17</a></p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">上個月是 Angular 紅色盾牌誕生 13 週年。 AngularJS（注意是 AngularJS 不是 Angular，也就是 1.x 版本） 是新一波 JavaScript 框架的起點，旨在支持對豐富 Web 體驗日益增長的需求。今天，我們憑藉新的外觀和一系列前瞻性功能，通過 v17 帶領大家走向未來，為性能和開發體驗奠定了新的基礎。</p><div><img alt="" height="405" src="https://img2023.cnblogs.com/blog/999445/202312/999445-20231225182432043-179844286.webp" width="720" referrerpolicy="no-referrer"></div><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start"><strong>在 v17 中，我們很高興地介紹：</strong></p><ul><li><strong>Deferrable views 可延遲視圖將性能和開發體驗提升到一個新的水平，從開發預覽版正式穩定</strong></li><li><strong>在</strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fkrausest.github.io%2Fjs-framework-benchmark%2Fcurrent.html" target="_blank">公共基準測試</a><strong>中，通過內置控制流的循環，運行時間提高了 90%</strong></li><li><strong>混合渲染的構建速度提高了 87%，客戶端渲染的構建速度提高了 67%</strong></li><li><strong>全新的外觀，代表了 Angular 面向未來的特徵</strong></li><li><strong>全新的互動學習教程，從簡單到深入，包括在線 Playground</strong></li><li><strong>以及許多其他功能和改進！</strong></li></ul><h2>面向未來的身份</h2><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">在過去的幾個版本中，Angular 的復興一直在全力進行。我們一直在通過基於信號（signal-based）的反應性（reactivity）、hydration（水合作用）、獨立組件、組合指令和許多其他功能等改進來加快勢頭。儘管 Angular 發展迅速，但它的品牌卻未能跟上 —— 從 AngularJS 早期以來，它幾乎一模一樣。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start"><br><strong>今天，你喜愛的、經過數百萬開發者考驗的框架煥然一新，反映了其面向未來的開發體驗和性能！</strong></p><div><div><img alt="" src="https://img2023.cnblogs.com/blog/999445/202312/999445-20231225182439272-1046899011.gif" referrerpolicy="no-referrer"></div></div><h2>面向未來的文檔</h2><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">與新品牌一起，我們還為 Angular 文檔開發了一個新家 — angular.dev。對於新的文檔網站，我們採用了新的結構、新的指南、改進的內容，並構建了一個交互式學習之旅平台，讓你可以直接在瀏覽器中按照自己的節奏學習 Angular 和 Angular CLI。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start"><br> 新的交互式學習體驗由<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fwebcontainers.io%2F" target="_blank">WebContainers</a><span>&nbsp;</span>提供支持，讓你可以在任何現代 Web 瀏覽器中使用 Angular CLI 的強大功能！</p><div><div><img alt="" src="https://img2023.cnblogs.com/blog/999445/202312/999445-20231225182816361-167791283.gif" referrerpolicy="no-referrer"><div>
   &nbsp;
  </div></div></div><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">今天，我們將推出 angular.dev 的 Beta 預覽版，並計劃在 v18 將其設為 Angular 的默認網站。你可以在<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fzhuanlan.zhihu.com%2Fp%2F665420129" target="_blank">Angular.dev 它來了</a>（原文<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fblog.angular.io%2Fannouncing-angular-dev-1e1205fa3039" target="_blank">Announcing angular.dev</a>）中瞭解有關 Angular 新外觀和 angular.dev 的更多信息。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start"><br> 現在讓我深入瞭解 v17 的功能，我們迫不及待地想告訴你！</p><h2>內置控制流</h2><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">為了改善開發體驗，我們發佈了新的塊模板語法，通過簡單的聲明性 API 為你提供強大的功能。在底層，Angular 編譯器將語法轉換為高效的 JavaScript 指令，可以執行控制流、延遲加載等等。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">我們使用新的塊語法來實現一個被優化的內置控制流。在進行用戶研究後，我們發現許多開發人員都在使用<span>&nbsp;</span><code>*ngIf</code><span>&nbsp;</span>、<span>&nbsp;</span><code>*ngSwitch</code><span>&nbsp;</span>和<span>&nbsp;</span><code>*ngFor</code><span>&nbsp;</span>時遇到了一些困難。自 2016 年開始使用 Angular 並在過去 5 年裏成為 Angular 團隊的一員，我個人仍然需要查找<span>&nbsp;</span><code>*ngFor</code><span>&nbsp;</span>和<span>&nbsp;</span><code>trackBy</code><span>&nbsp;</span>的語法。在收集了社區、合作伙伴的反饋並進行用戶體驗研究後，我們為 Angular 開發了一個新的內置控制流！</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">內置控制流程可以：</p><ul><li>更舒適的語法，更接近 JavaScript，因此更直觀，需要更少的文檔查找</li><li>得益於優化的類型收窄（type narrowing），可以進行更好的類型檢查</li><li>這是一個主要存在於構建時的概念，它可以減少運行時佔用空間（使其「消失」），從而可以將你的包大小減少多達 30 KB，並進一步提高你的 Core Web Vital 分數</li><li>它會自動在你的模板中可用，無需額外導入，過去的結構型指令需要在 common 模塊導入 NgIf、NgFor 等</li><li>稍後會介紹顯著的性能提升</li></ul><h2>條件語句</h2><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">讓我們看一下與<code>*ngIf</code>的比較：</p><div><pre><code class="language-html"><span>&lt;</span><span style="color:#093e8b">div</span><span style="color:#d95350">*</span><span style="color:#1772f6">ngIf</span><span>=</span><span style="color:#d95350">"loggedIn; else anonymousUser"</span><span>&gt;</span>
  The user is logged in
<span>&lt;/</span><span style="color:#093e8b">div</span><span>&gt;</span><span>&lt;</span><span style="color:#093e8b">ng-template</span><span style="color:#d95350">#</span><span style="color:#1772f6">anonymousUser</span><span>&gt;</span>
  The user is not logged in
<span>&lt;/</span><span style="color:#093e8b">ng-template</span><span>&gt;</span></code></pre></div><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">使用內置 if 語句，此條件將如下所示：</p><div><pre><code class="language-js"><span style="color:#d95350">@</span><span>if</span><span>(</span><span>loggedIn</span><span>)</span><span>{</span><span>The</span><span>user</span><span>is</span><span>logged</span><span>in</span><span>}</span><span style="color:#d95350">@</span><span>else</span><span>{</span><span>The</span><span>user</span><span>is</span><span>not</span><span>logged</span><span>in</span><span>}</span></code></pre></div><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">與舊版<span>&nbsp;</span><code>*ngIf</code><span>&nbsp;</span>替代方案的 else 子句相比，能夠直接在<code>@else</code>中填寫模板內容是一項重大簡化。當前的控制流也使得<span>&nbsp;</span><code>@else if</code><span>&nbsp;</span>變得可能，過去的結構性指令是不可能做到的。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start"><code>*ngSwitch</code><span>&nbsp;</span>改進的效果更加明顯：</p><div><pre><code class="language-js"><span>&lt;</span><span>div</span><span>[</span><span>ngSwitch</span><span>]</span><span>=</span><span style="color:#d95350">"accessLevel"</span><span>&gt;</span><span>&lt;</span><span>admin</span><span>-</span><span>dashboard</span><span>*</span><span>ngSwitchCase</span><span>=</span><span style="color:#d95350">"admin"</span><span>/&gt;</span><span>&lt;</span><span>moderator</span><span>-</span><span>dashboard</span><span>*</span><span>ngSwitchCase</span><span>=</span><span style="color:#d95350">"moderator"</span><span>/&gt;</span><span>&lt;</span><span>user</span><span>-</span><span>dashboard</span><span>*</span><span>ngSwitchDefault</span><span>/&gt;</span><span>&lt;</span><span style="color:#d95350">/div&gt;</span></code></pre></div><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">通過內置控制流，它變成：</p><div><pre><code class="language-js"><span style="color:#d95350">@</span><span>switch</span><span>(</span><span>accessLevel</span><span>)</span><span>{</span><span style="color:#d95350">@</span><span>case</span><span>(</span><span style="color:#d95350">'admin'</span><span>)</span><span>{</span><span>&lt;</span><span>admin</span><span>-</span><span>dashboard</span><span>/&gt;</span><span>}</span><span style="color:#d95350">@</span><span>case</span><span>(</span><span style="color:#d95350">'moderator'</span><span>)</span><span>{</span><span>&lt;</span><span>moderator</span><span>-</span><span>dashboard</span><span>/&gt;</span><span>}</span><span style="color:#d95350">@</span><span>default</span><span>{</span><span>&lt;</span><span>user</span><span>-</span><span>dashboard</span><span>/&gt;</span><span>}</span><span>}</span></code></pre></div><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">新的控制流可以在<span>&nbsp;</span><code>@switch</code><span>&nbsp;</span>中的各個分支中實現更好的類型收窄，這在<span>&nbsp;</span><code>*ngSwitch</code><span>&nbsp;</span>結構型指令中是不可能做到的。</p><h2>內置 for 循環</h2><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">我最喜歡的更新之一是我們引入的內置 for 循環，它除了開發體驗改進之外，還將 Angular 的渲染速度推向了另一個水平！</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">其基本語法是：</p><div><pre><code class="language-js"><span style="color:#d95350">@</span><span>for</span><span>(</span><span>user</span><span>of</span><span>users</span><span>;</span><span>track</span><span>user</span><span>.</span><span>id</span><span>)</span><span>{</span><span>{{</span><span>user</span><span>.</span><span>name</span><span>}}</span><span>}</span><span style="color:#d95350">@</span><span>empty</span><span>{</span><span>Empty</span><span>list</span><span>of</span><span>users</span><span>}</span></code></pre></div><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">我們經常會在應用程序中看到由於<code>*ngFor</code>中缺少<code>trackBy</code>功能而導致的性能問題。<span>&nbsp;</span><code>@for</code>中的一些區別是 track 是強制性的，以確保快速比較性能。此外，它更容易使用，因為它只是一個表達式而不是組件類中的方法。內置的<code>@for</code>循環還具有通過可選的<span>&nbsp;</span><code>@empty</code><span>&nbsp;</span>塊進行零項集合的快捷方式。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start"><code>@for</code><span>&nbsp;</span>語句使用了新的比較算法，並且與<span>&nbsp;</span><code>*ngFor</code><span>&nbsp;</span>相比具有更優化的實現，這使得社區框架基準測試的運行時間提高了 90%！</p><div><img alt="" height="1456" src="https://img2023.cnblogs.com/blog/999445/202312/999445-20231225182921204-1508718499.webp" width="720" referrerpolicy="no-referrer"></div><h2>試一試！</h2><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start"><strong>內置控制流現已在 v17 開發者預覽版中發佈！</strong></p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">內置控制流的設計目標之一是實現完全自動化的遷移。要在現有項目中嘗試它，請使用以下 Schematics 一鍵遷移：</p><div><pre><code class="language-text">ng generate @angular/core:control-flow</code></pre></div><h2>下一步是什麼？</h2><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">你已經可以使用帶有最新語言服務的內置控制流，我們與 JetBrains 密切合作，以便在他們的產品中提供更好的支持。我們還與 Prettier 的<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fgithub.com%2Fsosukesuzuki" target="_blank">Sosuke Suzuki<span>&nbsp;</span></a>聯繫，以確保 Angular 模板可以正確格式化。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">與<code>*ngIf</code>、<code>*ngFor</code>和<code>*ngSwitch</code>相比，內置控制流處理內容投影（content projection）的方式仍然存在一些差異，我們將在接下來的幾個月裏努力解決這些問題。除此之外，我們對內置控制流的實現和穩定性充滿信心，所以你今天就可以嘗試一下！我們希望將其保留在開發者預覽版中，直到下一個主要版本，以便我們可以為潛在的向後不兼容問題進行修復，以防我們找到進一步增強開發體驗的機會。</p><h2>延遲視圖（Deferrable views）</h2><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">現在讓我們談談懶加載的未來！利用新的塊語法，我們開發了一種新的強大機制，你可以使用它來使你的應用程序更快。在博客文章的開頭，我説過可延遲視圖將性能和開發體驗提升到了一個新的水平，因為它們通過前所未有的舒適的實現了聲明性和強大的延遲加載。</p><div><img alt="" height="603" src="https://img2023.cnblogs.com/blog/999445/202312/999445-20231225182938849-2097420811.webp" width="720" referrerpolicy="no-referrer"></div><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">假設你有一個博客，並且你想延遲加載用戶評論列表。目前，你必須使用<span>&nbsp;</span><code>ViewContainerRef</code><span>&nbsp;</span>，同時還要管理清理、管理加載錯誤、顯示佔位符等一系列複雜的問題。處理各種極端情況可能會產生一些複雜代碼，這將很難測試和調試。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">新的可延遲視圖允許你使用一行聲明性代碼延遲加載評論列表及其所有的依賴項：</p><div><pre><code class="language-js"><span style="color:#d95350">@</span><span>defer</span><span>{</span><span>&lt;</span><span>comment</span><span>-</span><span>list</span><span>/&gt;</span><span>}</span></code></pre></div><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">最令人難以置信的部分是，這一切都是通過編譯時轉換髮生的：Angular 通過查找<span>&nbsp;</span><code>@defer</code><span>&nbsp;</span>塊內部使用的組件、指令和管道、生成動態導入並管理加載過程來抽象所有複雜性以及狀態之間的切換。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">當某個 DOM 元素進入視口時開始延遲加載組件涉及許多更重要的邏輯和<code>IntersectionObserver</code><span>&nbsp;</span>API。<span>&nbsp;</span><strong>Angular 使使用<code>IntersectionObservers</code>就像添加可延遲視圖觸發器一樣簡單！</strong></p><div><pre><code class="language-js"><span style="color:#d95350">@</span><span>defer</span><span>(</span><span>on</span><span>viewport</span><span>)</span><span>{</span><span>&lt;</span><span>comment</span><span>-</span><span>list</span><span>/&gt;</span><span>}</span><span style="color:#d95350">@</span><span>placeholder</span><span>{</span><em>&lt;!--</em><span>A</span><span>placeholder</span><span>content</span><span>to</span><span>show</span><span>until</span><span>the</span><span>comments</span><span>load</span><span>--&gt;</span><span>&lt;</span><span>img</span><span>src</span><span>=</span><span style="color:#d95350">"comments-placeholder.png"</span><span>&gt;</span><span>}</span></code></pre></div><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">在上面的示例中，Angular 首先渲染佔位符塊的內容。當它在可視窗（viewport）中可見時，<span>&nbsp;</span><code>&lt;comment-list/&gt;</code><span>&nbsp;</span>組件就會開始加載。加載完成後，Angular 會刪除佔位符並渲染組件。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">還有用於加載和錯誤狀態的塊：</p><div><pre><code class="language-js"><span style="color:#d95350">@</span><span>defer</span><span>(</span><span>on</span><span>viewport</span><span>)</span><span>{</span><span>&lt;</span><span>comment</span><span>-</span><span>list</span><span>/&gt;</span><span>}</span><span style="color:#d95350">@</span><span>loading</span><span>{</span><span>Loading</span><span style="color:#d95350">…</span><span>}</span><span style="color:#d95350">@</span><span>error</span><span>{</span><span>Loading</span><span>failed</span><span>:</span><span>(</span><span>}</span><span style="color:#d95350">@</span><span>placeholder</span><span>{</span><span>&lt;</span><span>img</span><span>src</span><span>=</span><span style="color:#d95350">"comments-placeholder.png"</span><span>&gt;</span><span>}</span></code></pre></div><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">就是這樣！ Angular 為你管理了大量的複雜邏輯。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">可延遲視圖提供了更多觸發器：</p><ul><li><code>on idle</code><span>&nbsp;</span>- 當瀏覽器不做任何繁重的工作時延遲加載塊</li><li><code>on immediate</code><span>&nbsp;</span>— 自動開始延遲加載，不阻塞瀏覽器</li><li><code>on timer(&lt;time&gt;)</code><span>&nbsp;</span>— 使用計時器延遲加載</li><li><code>on viewport</code><span>&nbsp;</span>和<span>&nbsp;</span><code>on viewport(&lt;ref&gt;)</code><span>&nbsp;</span>- 可視窗還允許指定錨元素的引用。當錨元素可見時，Angular 將延遲加載組件並渲染它</li><li><code>on interaction</code><span>&nbsp;</span>和<span>&nbsp;</span><code>on interaction(&lt;ref&gt;)</code><span>&nbsp;</span>— 使你能夠在用戶與特定元素交互時啓動延遲加載</li><li><code>on hover</code><span>&nbsp;</span>和<span>&nbsp;</span><code>on hover(&lt;ref&gt;)</code><span>&nbsp;</span>- 當用戶懸停元素時觸發延遲加載</li><li><code>when &lt;expr&gt;</code><span>&nbsp;</span>— 使你能夠通過返回承諾的表達式指定你自己的條件</li></ul><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">可延遲視圖還提供了在渲染依賴項之前預取依賴項的能力。添加預取就像向 defer 塊添加<span>&nbsp;</span><code>prefetch</code><span>&nbsp;</span>語句一樣簡單，並且支持所有相同的觸發器。</p><div><pre><code class="language-text">@defer (on viewport; prefetch on idle) {
  &lt;comment-list /&gt;
}</code></pre></div><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start"><strong>今天，可延遲視圖在 v17 的開發者預覽版中可用！瞭解有關</strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fangular.io%2Fguide%2Fdefer" target="_blank">本指南</a><strong>中該功能的更多信息。</strong></p><h2>下一步是什麼？</h2><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">可延遲視圖已準備好使用，我們強烈鼓勵你嘗試一下！我們將它們保留在開發人員預覽中的原因是這樣我們可以收集更多反饋並在 API 中引入更改，直到我們將它們鎖定為像框架的其餘部分一樣遵循語義版本控制。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">目前，服務器端渲染將渲染指定的佔位符。一旦框架加載應用程序並對其進行水合，可延遲視圖將按照我們上面描述的方式工作。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">下一步，我們將探索在服務器上渲染延遲塊內的內容，並在客戶端上啓用部分水合。在這種情況下，客戶端不會下載延遲視圖的代碼，直到觸發器請求它。此時，Angular 將下載相關的 JavaScript 並僅對視圖的這一部分進行水合。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">還將有許多令人興奮的信號互操作性，敬請期待！</p><h2>改進的混合渲染體驗</h2><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">今天，我們通過<code>ng new</code>中的提示，使服務器端渲染 (SSR) 和靜態站點生成（SSG 或預渲染）更接近開發人員：</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">這是我們長期以來一直想要做出的改變，但首先我們希望 Angular 的 SSR 開發體驗充滿信心。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">要不，你可以通過以下方式在新項目中啓用 SSR：</p><div><pre><code class="language-text">ng new my-app --ssr</code></pre></div><div><img alt="" src="https://img2023.cnblogs.com/blog/999445/202312/999445-20231225183105094-1291642340.gif" referrerpolicy="no-referrer"></div><h2>Hydration 從開發者預覽版正式穩定</h2><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">在過去的 6 個月裏，我們看到數千個應用程序採用了水合作用 (hydration)。<strong>今天，我們很高興地宣佈，水合作用已不再是開發者預覽版，並且在所有使用服務器端渲染的新應用程序中默認啓用！</strong></p><h2>新的 @angular/ssr 包</h2><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">我們將 Angular Universal 倉儲移至 Angular CLI 倉儲庫，並使服務器端渲染成為我們工具中更加不可或缺的一部分！</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">從今天開始，要向現有應用程序添加 Hybrid 渲染支持直接運行：</p><div><pre><code class="language-text">ng add @angular/ssr</code></pre></div><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">此命令將生成服務入口點，添加 SSR 和 SSG 構建功能，並默認啓用水合。<span>&nbsp;</span><code>@angular/ssr</code><span>&nbsp;</span>提供與當前處於維護模式的<span>&nbsp;</span><code>@nguniversal/express-engine</code><span>&nbsp;</span>等效的功能。如果你使用的是 express-engine，Angular CLI 會自動將您的代碼更新為<code>@angular/ssr</code><span>&nbsp;</span>。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start"><strong>從舊平台遷移到最新的 Angular 混合渲染解決方案後，Virgin Media O2 的銷售額增長了 112%。</strong>通過將<span>&nbsp;</span><code>NgOptimizedImage</code><span>&nbsp;</span>與帶有 DOM Hydration 的 Angular SSR 結合使用，累積佈局偏移平均減少了 99.4%。</p><h2>使用 SSR 部署你的應用程序</h2><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">為了進一步增強開發體驗，我們與雲提供商密切合作，以實現順利部署到他們的平台。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">Firebase 現在將自動識別並以接近零配置部署你的 Angular 應用程序，並提供<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Ffirebase.google.com%2Fdocs%2Fhosting%2Fframeworks%2Fangular" target="_blank">新的框架感知 CLI 提前預覽</a>。</p><div><pre><code class="language-text">firebase experiments:enable webframeworks
firebase init hosting
firebase deploy</code></pre></div><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">framework-aware CLI 可識別 SSR、i18n、圖像優化等的使用，使你能夠在經濟高效的無服務器基礎設施上提供高性能的 Web 應用程序。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">對於那些擁有複雜 Angular monorepos 或只是喜歡本機工具的人，AngularFire 允許使用<span>&nbsp;</span><code>ng deploy</code><span>&nbsp;</span>部署到 Firebase：</p><div><pre><code class="language-text">ng add @angular/fire
ng deploy</code></pre></div><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">為了能夠普通開發人員也可以部署，我們在 Angular 的服務器端渲染中啓用了 ECMAScript 模塊支持，<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fgithub.com%2Fangular%2Fangular%2Fpull%2F50247" target="_blank">引入</a>了<span>&nbsp;</span><code>HttpClient</code><span>&nbsp;</span>的獲取後端，並與 CloudFlare 合作<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fdevelopers.cloudflare.com%2Fpages%2Fframework-guides%2Fdeploy-an-angular-site%2F" target="_blank">簡化</a>了流程。</p><h2>新的生命週期鈎子</h2><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">為了提高 Angular 的 SSR 和 SSG 的性能，從長遠來看，我們希望擺脫 DOM 模擬和直接 DOM 操作。同時，在大多數應用程序的生命週期中，它們需要與元素交互以實例化第三方庫、測量元素大小等。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">為了實現這一點，我們開發了一組新的生命週期掛鈎：</p><ul><li><code>afterRender</code><span>&nbsp;</span>— 註冊一個回調函數，每次應用程序完成渲染時調用</li><li><code>afterNextRender</code><span>&nbsp;</span>— 註冊一個回調函數，在下次應用程序完成渲染時調用，注意 Next 一個詞表示下一次，也就是隻會執行一次</li></ul><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">只有瀏覽器相關邏輯才會調用這些鈎子，這使你能夠將自定義 DOM 邏輯安全地直接插入組件中。例如，如果你想實例化圖表庫，可以使用<span>&nbsp;</span><code>afterNextRender</code><span>&nbsp;</span>：</p><div><pre><code class="language-js"><span style="color:#d95350">@</span><span>Component</span><span>({</span><span>selector</span><span>:</span><span style="color:#d95350">'my-chart-cmp'</span><span>,</span><span>template</span><span>:</span><span style="color:#d95350">`&lt;div #chart&gt;{{ ... }}&lt;/div&gt;`</span><span>,</span><span>})</span><span>export</span><span>class</span><span>MyChartCmp</span><span>{</span><span style="color:#d95350">@</span><span>ViewChild</span><span>(</span><span style="color:#d95350">'chart'</span><span>)</span><span>chartRef</span><span>:</span><span>ElementRef</span><span>;</span><span>chart</span><span>:</span><span>MyChart</span><span>|</span><span>null</span><span>;</span><span>constructor</span><span>()</span><span>{</span><span>afterNextRender</span><span>(()</span><span>=&gt;</span><span>{</span><span>this</span><span>.</span><span>chart</span><span>=</span><span>new</span><span>MyChart</span><span>(</span><span>this</span><span>.</span><span>chartRef</span><span>.</span><span>nativeElement</span><span>);</span><span>},</span><span>{</span><span>phase</span><span>:</span><span>AfterRenderPhase</span><span>.</span><span>Write</span><span>});</span><span>}</span><span>}</span></code></pre></div><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">每個鈎子都支持一個階段值（例如讀取、寫入），Angular 將使用該階段值來安排回調以減少佈局抖動並提高性能。</p><h2>新項目默認使用 Vite 和 esbuild</h2><div><img alt="" src="https://img2023.cnblogs.com/blog/999445/202312/999445-20231225183618741-2002323503.webp" referrerpolicy="no-referrer"></div><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">如果沒有對 Angular CLI 的構建管道進行底層的改變，我們從一開始就無法在 Angular 中啓用 SSR！</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">在 v16 中，我們引入了 esbuild 和 Vite 構建的開發者預覽版。從那時起，許多開發人員和一些企業合作伙伴都對其進行了試驗，<strong>使他們的一些應用程序的構建時間縮短了 67%！</strong>今天，我們很高興地宣佈，新的應用程序構建器已從開發者預覽版中正式穩定，並且默認為所有新應用程序啓用！</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">此外，我們還更新了使用混合渲染時的構建管道。通過 SSR 和 SSG，您可以觀察到<span>&nbsp;</span><strong><code>ng build</code></strong><span>&nbsp;</span>的速度提高了 87%，<span>&nbsp;</span><strong><code>ng serve</code></strong><span>&nbsp;</span>的編輯刷新循環速度提高了 80%。</p><div><img alt="" height="445" src="https://img2023.cnblogs.com/blog/999445/202312/999445-20231225183719596-1185793546.webp" width="720" referrerpolicy="no-referrer"></div><p>原圖是 bin 文件的動畫，當前平台不支持，如果想查看進原文</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">在未來的次要版本中，我們將提供原理圖，以使用混合渲染（​​使用 SSG 或 SSR 進行客戶端渲染）自動遷移現有項目。如果你今天想測試新的應用程序構建器，請查看我們<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fangular.io%2Fguide%2Fesbuild" target="_blank">文檔</a>中的本指南。</p><h2>DevTools 中的依賴注入調試</h2><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">去年，我們展示了 Angular DevTools 中依賴注入調試功能的預覽。在過去的幾個月裏，我們實現了全新的調試 API，使我們能夠插入框架的運行時並檢查注入器樹。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">Based on these APIs we built an inspection user interface that allows you to preview the:<br> 基於這些 API，我們構建了一個檢查用戶界面，允許您預覽：</p><ul><li>Dependencies of your components in the component inspector<br> 組件 Inspector 中查看組件的依賴關係</li><li>Injector tree and dependency resolution path<br> 注入器樹和依賴解析路徑</li><li>Providers declared within the individual injectors<br> 在各個注入器中聲明的提供程序</li></ul><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">You can find a quick preview of the features in the animation below. Learn more about<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fangular.io%2Fguide%2Fdevtools" target="_blank">Angular DevTools on angular.io</a>.<br> 你可以在下面的動畫中快速預覽這些功能。在<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttp%253A%2F%2Fangular.io" target="_blank"><span style="color:#3498db"><span style="background-color:transparent">http://</span></span><span>angular.io</span></a><span>&nbsp;</span>上了解有關<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fangular.io%2Fguide%2Fdevtools" target="_blank">Angular DevTools</a><span>&nbsp;</span>的更多信息。</p><div><div><img alt="" src="https://img2023.cnblogs.com/blog/999445/202312/999445-20231225183907781-1326515808.gif" referrerpolicy="no-referrer"><div>
   &nbsp;
  </div></div></div><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start"><br> 下一步，我們將完善 UI 並致力於更好地可視化注入器層次結構、提供程序及其分辨率。</p><h2>從一開始就提供獨立 API</h2><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">在過去一年半的時間裏收集了獨立組件、指令和管道的反饋並完善了它們的開發體驗後，我們有信心從一開始就在所有新應用程序中啓用它們。所有<code>ng generate</code>命令現在都將構建獨立組件、指令和管道。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">與此同時，我們還重新審視了<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttp%253A%2F%2FAngular.io" target="_blank"><span style="background-color:transparent; color:transparent">http://</span><span>Angular.io</span></a><span>&nbsp;</span>和 Angular.dev 的整個文檔，以確保一致的學習體驗、開發實踐和建議。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">在可預見的未來，我們將保留 NgModules，但看到新的獨立 API 的好處，我們強烈建議你逐步將項目遷移到它們。我們還提供了一個示意圖，可以為您自動完成大部分工作：</p><div><pre><code class="language-text">ng generate @angular/core:standalone</code></pre></div><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">有關更多信息，請查看我們的<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fangular.io%2Fguide%2Fstandalone-migration" target="_blank">遷移指南</a>。</p><h2>Reactivity 的下一步</h2><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">Angular 新的基於信號的響應式系統是我們在該框架中所做的最大轉變之一。為了確保與基於 Zone.js 的變更檢測的向後兼容性和互操作性，我們一直在努力製作原型並設計前進的道路。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start"><strong>今天，我們很高興地宣佈 Angular Signals 從開發者預覽版正式穩定</strong>。目前，我們將把<span>&nbsp;</span><code>effect</code><span>&nbsp;</span>函數保留在開發者預覽中，以便我們可以進一步迭代它的語義。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">在接下來的幾個月中，我們將開始推出基於信號的輸入、視圖查詢等功能。到明年 5 月，在 Angular v18 中，我們將提供許多功能來進一步改善開發人員使用 Signals 的體驗。</p><h2>測試的下一步</h2><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">我們正在繼續試驗 Jest，並確保我們構建一個高性能、靈活且直觀的解決方案，滿足開發人員的需求。我們還開始嘗試 Web Test Runner，併為初始實施提供了一個<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fgithub.com%2Fangular%2Fangular-cli%2Fpull%2F25860" target="_blank">PR</a>。在不久的將來，我們可能會首先關注 Web Test Runner，以解鎖那些渴望擺脫 Karma 的項目。</p><h2>Material 3 的下一步</h2><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">我們一直在與 Google 的 Material Design 團隊努力合作，重構 Angular Material 的內部結構，以納入<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fm3.material.io%2Ffoundations%2Fdesign-tokens%2Foverview" target="_blank">design tokens</a>，該系統將為組件提供更多的自定義選項並啓用<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fm3.material.io%2F" target="_blank">Material 3</a><span>&nbsp;</span>支持。雖然我們還沒有準備好為 v17 提供 design token 和 M3 支持，但我們預計很快會在 v17 小版本中提供這些功能。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">在 2022 年第四季度，我們宣佈推出基於 MDC 的新 Angular Material 組件，並棄用具有相同功能但 DOM 結構和樣式不同的舊組件。我們在 v15 中棄用了舊組件，並將在 v17 中刪除。即使它們不屬於 Angular Material v17 包的一部分，你仍然可以將應用程序更新到 Angular v17 並使用 v16 Angular Material 包。在 v18 之前，這將是一個選項，之後 Angular Material v16 將不再與較新版本的 Angular 兼容。我們還與<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fwww.herodevs.com%2Fsupport" target="_blank">HeroDevs</a><span>&nbsp;</span>的合作伙伴合作，他們將提供無休止的付費支持，以防你暫時無法執行遷移。</p><h2>生活質量提升</h2><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">除了所有這些面向未來的功能之外，我們還從待辦事項中提供了一系列較小的開發人員體驗增強功能！</p><h2>實驗性視圖轉換支持</h2><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fdeveloper.chrome.com%2Fdocs%2Fweb-platform%2Fview-transitions%2F" target="_blank">View Transitions API</a><span>&nbsp;</span>可在更改 DOM 時實現平滑轉換。在 Angular 路由器中，我們現在通過<span>&nbsp;</span><code>withViewTransitions</code><span>&nbsp;</span>功能提供對此 API 的直接支持。使用此功能，不可以使用瀏覽器的本機功能在路線之間創建動畫過渡。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">你現在可以通過在應用啓動時通過路由器的提供程序聲明配置此功能來將此特性添加到你的應用程序中：</p><div><pre><code class="language-js"><span>bootstrapApplication</span><span>(</span><span>App</span><span>,</span><span>{</span><span>providers</span><span>:</span><span>[</span><span>provideRouter</span><span>(</span><span>routes</span><span>,</span><span>withViewTransitions</span><span>()),</span><span>]</span><span>});</span></code></pre></div><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start"><code>withViewTransitions</code><span>&nbsp;</span>接受帶有屬性<span>&nbsp;</span><code>onViewTransitionCreated</code><span>&nbsp;</span>的可選配置對象，這是一個為你提供一些額外控制的回調：</p><ul><li>決定是否要跳過特定動畫</li><li>向 Document 添加 Class 以自定義動畫並在動畫完成時刪除這些 Class</li><li>等等。</li></ul><h2>圖像指令中的自動預連接</h2><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">Angular 圖像指令現在會自動為你作為參數提供給圖像加載器的域生成預連接鏈接。如果圖像指令無法自動識別源並且未檢測到 LCP 圖像的預連接鏈接，它將在開發過程中發出警告。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">在<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fangular.io%2Fguide%2Fimage-directive" target="_blank">圖像指令指南中</a>瞭解有關此功能的更多信息。</p><h2>延遲加載動畫模塊</h2><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">此功能可以使你的初始捆綁包（壓縮後的 16KB）減少 60KB。社區貢獻者<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fgithub.com%2FJeanMeche" target="_blank">Matthieu Riegler</a><span>&nbsp;</span>提出並實現了一項功能，允許你通過異步提供程序函數延遲加載動畫模塊：</p><div><pre><code class="language-js"><span>import</span><span>{</span><span>provideAnimationsAsync</span><span>}</span><span>from</span><span style="color:#d95350">'@angular/platform-browser/animations-async'</span><span>;</span><span>bootstrapApplication</span><span>(</span><span>RootCmp</span><span>,</span><span>{</span><span>providers</span><span>:</span><span>[</span><span>provideAnimationsAsync</span><span>()]</span><span>});</span></code></pre></div><h2>輸入值變換</h2><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">常見的模式是具有接收布爾輸入的組件。然而，這對如何將值傳遞給此類組件設置了限制。例如，如果我們對 Expander 組件有以下定義：</p><div><pre><code class="language-js"><span style="color:#d95350">@</span><span>Component</span><span>({</span><span>standalone</span><span>:</span><span>true</span><span>,</span><span>selector</span><span>:</span><span style="color:#d95350">'my-expander'</span><span>,</span><span>template</span><span>:</span><span style="color:#d95350">`…`</span><span>})</span><span>export</span><span>class</span><span>Expander</span><span>{</span><span style="color:#d95350">@</span><span>Input</span><span>()</span><span>expanded</span><span>:</span><span>boolean</span><span>=</span><span>false</span><span>;</span><span>}</span></code></pre></div><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">...我們嘗試將其用作：</p><div><pre><code class="language-js"><span>&lt;</span><span>my</span><span>-</span><span>expander</span><span>expanded</span><span>/&gt;</span></code></pre></div><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">你會得到一個錯誤「字符串不能分配給布爾值」。輸入值轉換允許你通過配置輸入裝飾器來解決此問題：</p><div><pre><code class="language-js"><span style="color:#d95350">@</span><span>Component</span><span>({</span><span>standalone</span><span>:</span><span>true</span><span>,</span><span>selector</span><span>:</span><span style="color:#d95350">'my-expander'</span><span>,</span><span>template</span><span>:</span><span style="color:#d95350">`…`</span><span>})</span><span>export</span><span>class</span><span>Expander</span><span>{</span><span style="color:#d95350">@</span><span>Input</span><span>({</span><span>transform</span><span>:</span><span>booleanAttribute</span><span>})</span><span>expanded</span><span>:</span><span>boolean</span><span>=</span><span>false</span><span>;</span><span>}</span></code></pre></div><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">可以在 GitHub 上找到原始功能請求 - 作為 HTML<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fgithub.com%2Fangular%2Fangular%2Fissues%2F14761" target="_blank">二進制屬性的布爾屬性</a>和<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fgithub.com%2Fangular%2Fangular%2Fissues%2F14761" target="_blank">作為 HTML 二進制屬性的布爾屬性。</a></p><h2>作為字符串的 styles 和 styleUrls</h2><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">Angular 組件支持每個組件多個樣式表。然而，絕大多數情況下，當我想要設置組件的樣式時，我會創建一個數組，其中包含指向內聯樣式或引用外部樣式表的單個元素。一項新功能使你你可以切換</p><div><pre><code class="language-js"><span style="color:#d95350">@</span><span>Component</span><span>({</span><span>styles</span><span>:</span><span>[</span><span style="color:#d95350">`
</span><span style="color:#d95350">    ...
</span><span style="color:#d95350">  `</span><span>]</span><span>})</span><span>...</span><span style="color:#d95350">@</span><span>Component</span><span>({</span><span>styleUrls</span><span>:</span><span>[</span><span style="color:#d95350">'styles.css'</span><span>]</span><span>})...</span></code></pre></div><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">到更簡單、更符合邏輯：</p><div><pre><code class="language-js"><span style="color:#d95350">@</span><span>Component</span><span>({</span><span>styles</span><span>:</span><span style="color:#d95350">`
</span><span style="color:#d95350">    ...
</span><span style="color:#d95350">  `</span><span>})</span><span>...</span><span style="color:#d95350">@</span><span>Component</span><span>({</span><span>styleUrl</span><span>:</span><span style="color:#d95350">'styles.css'</span><span>})</span><span>...</span></code></pre></div><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">當你使用數組時，我們仍然支持多個樣式表。這更簡單，更直觀，並且與自動格式化工具配合使用效果更好。</p><h2>社區原理圖 Schematics</h2><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">為了支持社區原理圖的開發，我們提供了一些實用方法作為<span>&nbsp;</span><code>@schematics/angular/utility</code><span>&nbsp;</span>的一部分。現在，你可以將表達式直接導入到 Angular 應用程序的根目錄中，並將提供程序添加到 Angular 應用程序的根目錄中，以及向<span>&nbsp;</span><code>package.json</code><span>&nbsp;</span>添加依賴項的現有功能。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">你可以在<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fangular.io%2Fguide%2Fschematics-for-libraries" target="_blank">文檔中的原理圖指南</a>中瞭解更多信息。</p><h2>Angular 開發者培訓</h2><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">我們與交互式 EdTech 平台 SoloLearn 合作，基於我們最近開發的「<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fwww.youtube.com%2Fwatch%253Fv%253DxAT0lHYhHMY%2526list%253DPL1w1q3fL4pmj9k1FrJ3Pe91EPub2_h4jF" target="_blank">Angular 介紹</a>」課程開發了新的 Angular 培訓。他們創建了一個互動學習之旅，在過去兩個月內覆蓋了超過 7 萬人！</p><div><img alt="" height="405" src="https://img2023.cnblogs.com/blog/999445/202312/999445-20231225183954852-1286944851.webp" width="720" referrerpolicy="no-referrer"></div><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">請在我們<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fblog.angular.io%2Fnew-free-interactive-angular-course-for-beginners-on-sololearn-7a4c4f91810a" target="_blank">最近的公告中</a>瞭解更多信息。</p><h2>社區亮點</h2><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start"><strong>我們要感謝 346 位貢獻者，是他們讓 Angular v17 變得如此特別！</strong>我們想列出的一些亮點：</p><ul><li><code>HttpClient</code><span>&nbsp;</span>now can<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fgithub.com%2Fangular%2Fangular%2Fpull%2F50247" target="_blank">use fetch as a backend</a><span>&nbsp;</span>which is one of the features enabling Angular to run in an edge worker. We’d like to thank to<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fgithub.com%2FJeanMeche" target="_blank">Matthieu Riegler</a><span>&nbsp;</span>for the help<br><code>HttpClient</code><span>&nbsp;</span>現在可以<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fgithub.com%2Fangular%2Fangular%2Fpull%2F50247" target="_blank">使用 fetch 作為後端</a>，這是使 Angular 能夠在 edge 工作線程中運行的功能之一。我們要感謝 Matthieu Riegler 的幫助</li><li>Matthieu 還啓用了<span>&nbsp;</span><code>HttpTransferCache</code><span>&nbsp;</span>的<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fgithub.com%2Fangular%2Fangular%2Fpull%2F52029" target="_blank">自定義</a>，它允許為 post 請求指定標頭、過濾器和緩存</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fgithub.com%2Fcexbrayat" target="_blank">Cédric Exbrayat</a><span>&nbsp;</span>在新的應用程序構建器中引入了對<span>&nbsp;</span><code>namedChunks</code><span>&nbsp;</span>的<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fgithub.com%2Fangular%2Fangular-cli%2Fpull%2F25913" target="_blank">支持</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fgithub.com%2Ftomalaforge" target="_blank">Thomas Laforge</a><span>&nbsp;</span>的<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fangular-challenges.vercel.app%2F" target="_blank">Angular Challenges</a><span>&nbsp;</span>是一個優秀的資源，一直在幫助 Angular 開發人員更上一層樓</li><li>AnalogJS 一直在穩步發展並接近 1.0。祝賀<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fgithub.com%2Fbrandonroberts" target="_blank">Brandon Roberts</a><span>&nbsp;</span>所做的出色工作！</li><li>祝賀<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fgithub.com%2Fsantoshyadavdev" target="_blank">Santosh Yadav</a><span>&nbsp;</span>的<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fwww.youtube.com%2Fwatch%253Fv%253D3qBXWUpoPHo" target="_blank"><span>&nbsp;</span>Angular 初學者課程</a>瀏覽量達到 100 萬次</li></ul><h2>用 Angular 構建未來</h2><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">在過去的六個月裏，我們一直在繼續 Angular 的復興，發佈了一些功能，以提供更好的開發體驗和性能。今天，我們很高興在 Angular 的全新品牌和<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttp%253A%2F%2Fangular.dev%2F" target="_blank">angular.dev</a>.學習體驗中體現出這一勢頭。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">在下一個發佈週期中，預計 Angular 基於信號的響應式、Hybrid 渲染和學習之旅將發生大量演變。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">我們很榮幸能夠成為你使用 Angular 構建未來的旅程的一部分！謝謝你！</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 25 Dec 2023 10:40:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272640/angular-17-released</guid>
            <link>https://www.oschina.net/news/272640/angular-17-released</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[開源 AI 聊天、繪圖軟件 AIdea 1.0.10 支持 Gemini、GPT-4V 等]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>AIdea 最新版本的 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmylxsw%2Faidea%2Freleases%2Ftag%2F1.0.10" target="_blank">1.0.10</a> 發佈啦，大家快來體驗體驗！</p><blockquote><p>如果你還不知道這款 APP，那麼可以簡單看看這篇文章 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzA3NTU1NDk4Mg%3D%3D%26mid%3D2454663369%26idx%3D1%26sn%3Dfc5ae7e09e5da885fecbe90747900bc9%26chksm%3D88d55900bfa2d016578008ec30550acbab49cf9ed5cd0b454c3ce8d308ff7cc1ab9416637f19%23rd" target="_blank">花了小半年開發了一個 AI 套殼 APP，然而大勢已過，直接開源了</a>。</p></blockquote><p>下載體驗地址：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Faidea.aicode.cc" target="_blank">https://aidea.aicode.cc</a> 。</p><p><img alt="" src="https://ssl.aicode.cc/mweb/20231225/17034940908941.jpg" referrerpolicy="no-referrer"></p><p>本次更新內容如下</p><ul><li>新增了幾個視覺模型的支持 
  <ul><li>GPT-4V</li><li>Google Gemini Pro Vision</li><li>通義千問 VL</li></ul></li><li>新增了幾個大模型 
  <ul><li>Google Gemini Pro</li><li>通義千問 Max</li><li>天工 MegaVerse</li><li>零一萬物的 Yi 34B</li></ul></li><li>創作島增加藝術字、藝術二維碼生成</li><li>羣聊默認由所有成員同時回答（之前是隨機選擇一個）</li><li>朗讀採用 OpenAI 的 TSS 模型輸出（目前響應速度很慢）</li></ul><p>AIdea 是一款集成了主流大語言模型以及繪圖模型的 APP，採用 Flutter + Golang 開發，代碼完全開源，目前已經支持以下大語言模型</p><p><img alt="" src="https://ssl.aicode.cc/mweb/20231225/17034908007422.jpg" referrerpolicy="no-referrer"></p><p>整體技術棧如下圖</p><p><img alt="" src="https://ssl.aicode.cc/mweb/20231225/17034970421740.jpg" referrerpolicy="no-referrer"></p><p>如果你對 AIdea 項目感興趣，以下是 Github 地址，趕緊去 Star 一下吧！</p><ul><li>客戶端（ Flutter ）： <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmylxsw%2Faidea" target="_blank">https://github.com/mylxsw/aidea</a></li><li>服務端（ Golang ）： <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmylxsw%2Faidea-server" target="_blank">https://github.com/mylxsw/aidea-server</a></li><li>Docker 一鍵部署安裝包：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmylxsw%2Faidea-docker" target="_blank">https://github.com/mylxsw/aidea-docker</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Mon, 25 Dec 2023 09:58:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272634/aidea-1-0-10-released</guid>
            <link>https://www.oschina.net/news/272634/aidea-1-0-10-released</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Ruby 3.3.0 正式發佈]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">Ruby 3.3.0 現已正式<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.ruby-lang.org%2Fen%2Fnews%2F2023%2F12%2F25%2Fruby-3-3-0-released%2F" target="_blank">發佈</a>。新版本<span style="background-color:#ffffff">添加了一個名為 Prism 的新解析器，使用 Lrama 作為解析器生成器，添加了一個名為 RJIT 的新純 Ruby JIT 編譯器，以及許多性能改進，尤其是 YJIT。</span></span></p><p><span style="background-color:#ffffff; color:#333333">具體更新內容如下：</span></p><h4 style="margin-left:0px; margin-right:0px; text-align:left"><strong><span style="color:#000000"><span style="background-color:#ffffff">Prism</span></span></strong></h4><ul style="margin-left:0; margin-right:0"><li>引入&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fruby%2Fprism" target="_blank">Prism 解析器</a>作為默認 gem 
  <ul style="margin-left:0; margin-right:0"><li>Prism 是一個可移植、容錯且可維護的 Ruby 語言遞歸下降解析器</li></ul></li><li>Prism 已做好生產準備並積極維護，用戶可以使用它代替 Ripper 
  <ul style="margin-left:0; margin-right:0"><li>具體介紹可查看&nbsp;Prism 的<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fruby.github.io%2Fprism%2F" target="_blank">文檔</a>。</li><li>Prism 既是一個由 CRuby 內部使用的 C 庫，又是一個可供任何需要解析 Ruby 代碼的工具使用的 Ruby gem</li><li>Prism API 中值得注意的方法有： 
    <ul style="margin-left:0; margin-right:0"><li><code class="language-plaintext">Prism.parse(source)</code>返回 AST 作為解析結果對象的一部分</li><li><code class="language-plaintext">Prism.parse_comments(source)</code>返回&nbsp;comments</li><li><code class="language-plaintext">Prism.parse_success?(source)</code>如果沒有錯誤，則返回 true</li></ul></li></ul></li><li>現在可以使用<code class="language-plaintext">ruby --parser=prism</code>或<code class="language-plaintext">RUBYOPT="--parser=prism"</code>嘗試使用&nbsp; Prism 編譯器。值得注意的是，該 flag 僅用於調試。</li></ul><h4 style="margin-left:0px; margin-right:0px; text-align:left"><strong><span style="color:#000000"><span style="background-color:#ffffff">使用 Lrama 代替 Bison</span></span></strong></h4><ul style="margin-left:0; margin-right:0"><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fruby%2Flrama" target="_blank">用 Lrama LALR 解析器生成器</a>替換 Bison&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugs.ruby-lang.org%2Fissues%2F19637" target="_blank">[Feature #19637]</a><ul style="margin-left:0; margin-right:0"><li>更多詳情可參閲<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frubykaigi.org%2F2023%2Fpresentations%2Fspikeolaf.html" target="_blank">Ruby Parser 的未來願景</a></li><li>為了便於維護，Lrama 內部解析器被替換為 Racc 生成的 LR 解析器</li><li>支持參數化規則<code class="language-plaintext">(?, *, +)</code>，將在 Ruby parse.y 中使用</li></ul></li></ul><h4 style="margin-left:0px; margin-right:0px; text-align:left"><span style="color:#000000"><strong><span style="background-color:#ffffff">YJIT</span></strong></span></h4><ul style="margin-left:0; margin-right:0"><li>相對 Ruby 3.2 的主要性能改進 
  <ul style="margin-left:0; margin-right:0"><li>對 splat 和 rest 參數的支持已得到改進。</li><li>為虛擬機的堆棧操作分配了寄存器。</li><li>編譯更多帶有可選參數的調用。異常處理程序也被編譯。</li><li>不支持的調用類型和<span style="background-color:#ffffff; color:#333333">復態調用點</span>不再退出到解釋器。</li><li>Rails <code class="language-plaintext">#blank?</code>和 specialized<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frails%2Frails%2Fpull%2F49909" target="_blank"><code class="language-plaintext">#present?</code></a>等基本方法都是內聯的。</li><li>對<code class="language-plaintext">Integer#*</code>、<code class="language-plaintext">Integer#!=</code>、<code class="language-plaintext">String#!=</code>、<code class="language-plaintext">String#getbyte</code>、&nbsp;<code class="language-plaintext">Kernel#block_given?</code>、<code class="language-plaintext">Kernel#is_a?</code>、<code class="language-plaintext">Kernel#instance_of?</code>和<code class="language-plaintext">Module#===</code>進行了特別優化。</li><li>編譯速度現在比 Ruby 3.2 稍快。</li><li>現在比 Optcarrot 上的解釋器快 3 倍以上</li></ul></li><li>與 Ruby 3.2 相比顯着提高了內存使用率 
  <ul style="margin-left:0; margin-right:0"><li>編譯代碼的元數據佔用內存更少。</li><li>當應用程序的 ISEQ 超過 40,000 個時，<code class="language-plaintext">--yjit-call-threshold</code>會自動從 30 提高到 120。</li><li>添加<code class="language-plaintext">--yjit-cold-threshold</code>以跳過編譯 cold&nbsp;ISEQ。</li><li>在 Arm64 上生成更緊湊的代碼。</li></ul></li><li>Code GC 現在默認禁用 
  <ul style="margin-left:0; margin-right:0"><li><code class="language-plaintext">--yjit-exec-mem-size</code>被視為新代碼編譯停止的硬限制。</li><li>不會因 Code GC&nbsp;導致性能突然下降。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fshopify%2Fpitchfork" target="_blank">使用 Pitchfork</a>&nbsp;重新分叉的服務器上有更好的 copy-on-write&nbsp;行為&nbsp;。</li><li>如果需要，仍然可以使用<code class="language-plaintext">--yjit-code-gc</code>啓用&nbsp;code GC</li></ul></li><li>添加<code class="language-plaintext">RubyVM::YJIT.enable</code>以便在運行時啓用 YJIT 
  <ul style="margin-left:0; margin-right:0"><li>無需修改​​命令行參數或環境變量即可啓動 YJIT。Rails 7.2 將使用此方法<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frails%2Frails%2Fpull%2F49947" target="_blank">默認啓用 YJIT</a>&nbsp;。</li><li>這也可用於僅在應用程序完成啓動後啓用 YJIT。如果想在啓動時禁用 YJIT 的同時使用其他 YJIT 選項，可以使用<code class="language-plaintext">--yjit-disable</code>。</li></ul></li><li>默認情況下提供更多 YJIT stats 
  <ul style="margin-left:0; margin-right:0"><li>現在默認情況下還提供了<code class="language-plaintext">yjit_alloc_size</code>和更多與元數據相關的統計信息。</li><li>由<code class="language-plaintext">--yjit-stats</code>生成的 <code class="language-plaintext">ratio_in_yjit</code>stat 現在可在發行版中使用，不再需要特殊的 stats 或 dev 版本才能訪問大多數統計信息。</li></ul></li><li>添加更多 profiling 功能 
  <ul style="margin-left:0; margin-right:0"><li>添加<code class="language-plaintext">--yjit-perf</code>以方便使用 Linux perf 進行分析。</li><li><code class="language-plaintext">--yjit-trace-exits</code>現在支持使用<code class="language-plaintext">--yjit-trace-exits-sample-rate=N</code>進行採樣</li></ul></li><li>更全面的測試和多個錯誤修復</li></ul><h4 style="margin-left:0px; margin-right:0px; text-align:left"><strong><span style="color:#000000"><span style="background-color:#ffffff">RJIT</span></span></strong></h4><ul style="margin-left:0; margin-right:0"><li>引入了純 Ruby JIT 編譯器 RJIT 並取代了 MJIT。 
  <ul style="margin-left:0; margin-right:0"><li>RJIT 僅支持 Unix 平台上的 x86-64 架構。</li><li>與 MJIT 不同，它在運行時不需要 C 編譯器。</li></ul></li><li>RJIT 的存在僅用於實驗目的。 
  <ul style="margin-left:0; margin-right:0"><li>建議用戶在生產環境中繼續使用 YJIT。</li></ul></li><li>如果對為開發 JIT for Ruby 感興趣，可查看&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frubykaigi.org%2F2023%2Fpresentations%2Fk0kubun.html%23day3" target="_blank">k0kubun 在 RubyKaigi 第 3 天的演示</a>。</li></ul><h4 style="margin-left:0px; margin-right:0px; text-align:left"><span style="color:#000000"><strong><span style="background-color:#ffffff">M:N 線程調度器</span></strong></span></h4><ul style="margin-left:0; margin-right:0"><li>引入了 M:N 線程調度程序。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugs.ruby-lang.org%2Fissues%2F19842" target="_blank">[Feature#19842]</a><ul style="margin-left:0; margin-right:0"><li>M 個 Ruby 線程由 N 個本機線程（操作系統線程）管理，因此減少了線程創建和管理成本。</li><li>它可能會破壞 C 擴展兼容性，因此默認情況下會在主 Ractor 上禁用 M:N 線程調度程序。 
    <ul style="margin-left:0; margin-right:0"><li><code class="language-plaintext">RUBY_MN_THREADS=1</code>環境變量可在主 Ractor 上啓用 M:N 線程。</li><li>M:N 線程始終在非主 Ractor 上啓用。</li></ul></li><li><code class="language-plaintext">RUBY_MAX_CPU=n</code>環境變量用於設置<code class="language-plaintext">N</code>（本地線程的最大數量）的最大值。默認值為 8。 
    <ul style="margin-left:0; margin-right:0"><li>由於每個 Ractor 只能同時運行一個 Ruby 線程，因此將使用的本地線程數是<code class="language-plaintext">RUBY_MAX_CPU</code>中指定的線程數和正在運行的 Ractor 數量中較小的一個。因此，單 Ractor 應用程序（大多數應用程序）將只使用 1 個本地線程。</li><li>為了支持阻塞操作，可以使用<code class="language-plaintext">N</code>個以上的本地線程。</li></ul></li></ul></li></ul><p>更多詳情可<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.ruby-lang.org%2Fen%2Fnews%2F2023%2F12%2F25%2Fruby-3-3-0-released%2F" target="_blank">查看官方公告</a>。</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 25 Dec 2023 08:34:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272610/ruby-3-3-0-released</guid>
            <link>https://www.oschina.net/news/272610/ruby-3-3-0-released</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[fastjson 2.0.44 發佈]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#e6edf3; text-align:start"><span style="color:#000000">這又是例行的 BUG 修復小版本，大家按需升級。</span></p><h1>Issues</h1><ol><li>反序列化跳過非 String Key 的報錯<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Falibaba%2Ffastjson2%2Fissues%2F2102" target="_blank">#2102</a></li><li>兼容 fastjson 1.x new Date 格式<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Falibaba%2Ffastjson2%2Fissues%2F2086" target="_blank">#2086</a></li><li>修復缺省序列化 springboot ResolvableType 類型 StackOverflowError 的問題<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Falibaba%2Ffastjson2%2Fissues%2F2103" target="_blank">#2103</a></li><li>修復序列化 BigDecimal 某些場景下會報 ArrayIndexOutOfBoundsException 的問題<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Falibaba%2Ffastjson2%2Fissues%2F2076" target="_blank">#2076</a></li><li>修復某些場景反序列化解析引用不成功的問題<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Falibaba%2Ffastjson2%2Fissues%2F2072" target="_blank">#2072</a></li><li>修復 List 字段的@JSONField#format 不起作用的問題<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Falibaba%2Ffastjson2%2Fissues%2F2073" target="_blank">#2073</a></li><li>修復 Kotlin 數據類 is 開頭非 boolean 類型字段序列化丟失的問題<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Falibaba%2Ffastjson2%2Fissues%2F2069" target="_blank">#2069</a></li></ol><h1>MAVEN 依賴配置</h1><div><pre>&lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">dependency</span>&gt;
    &lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">groupId</span>&gt;com.alibaba.fastjson2&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">groupId</span>&gt;
    &lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">artifactId</span>&gt;fastjson2&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">artifactId</span>&gt;
    &lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">version</span>&gt;2.0.44&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">version</span>&gt;
&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">dependency</span>&gt;
</pre></div><ul><li>android4 兼容版本</li></ul><div><pre>&lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">dependency</span>&gt;
    &lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">groupId</span>&gt;com.alibaba.fastjson2&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">groupId</span>&gt;
    &lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">artifactId</span>&gt;fastjson2&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">artifactId</span>&gt;
    &lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">version</span>&gt;2.0.44.android4&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">version</span>&gt;
&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">dependency</span>&gt;
</pre></div><ul><li>1.x 兼容版本</li></ul><div><pre>&lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">dependency</span>&gt;
    &lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">groupId</span>&gt;com.alibaba&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">groupId</span>&gt;
    &lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">artifactId</span>&gt;fastjson&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">artifactId</span>&gt;
    &lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">version</span>&gt;2.0.44&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">version</span>&gt;
&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">dependency</span>&gt;
</pre></div><ul><li>Spring 5 extension 配置</li></ul><div><pre>&lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">dependency</span>&gt;
    &lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">groupId</span>&gt;com.alibaba.fastjson2&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">groupId</span>&gt;
    &lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">artifactId</span>&gt;fastjson2-extension-spring5&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">artifactId</span>&gt;
    &lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">version</span>&gt;2.0.44&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">version</span>&gt;
&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">dependency</span>&gt;
</pre></div><ul><li>Spring 6 extension 配置</li></ul><div><pre>&lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">dependency</span>&gt;
    &lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">groupId</span>&gt;com.alibaba.fastjson2&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">groupId</span>&gt;
    &lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">artifactId</span>&gt;fastjson2-extension-spring6&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">artifactId</span>&gt;
    &lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">version</span>&gt;2.0.44&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">version</span>&gt;
&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">dependency</span>&gt;
</pre></div><h1>相關鏈接</h1><ul><li>FASTJSON 1.x 用戶升級指南<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Falibaba%2Ffastjson2%2Fwiki%2Ffastjson_1_upgrade_cn" target="_blank">https://github.com/alibaba/fastjson2/wiki/fastjson_1_upgrade_cn</a></li><li>相關 issues<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Falibaba%2Ffastjson2%2Fmilestone%2F44" target="_blank">https://github.com/alibaba/fastjson2/milestone/44</a></li><li>代碼 tag<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Falibaba%2Ffastjson2%2Ftree%2F2.0.44" target="_blank">https://github.com/alibaba/fastjson2/tree/2.0.44</a></li><li>Maven 下載<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frepo1.maven.org%2Fmaven2%2Fcom%2Falibaba%2Ffastjson2%2Ffastjson2%2F2.0.44%2F" target="_blank">https://repo1.maven.org/maven2/com/alibaba/fastjson2/fastjson2/2.0.44/</a></li><li>Android4 兼容版本<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frepo1.maven.org%2Fmaven2%2Fcom%2Falibaba%2Ffastjson2%2Ffastjson2%2F2.0.44.android4%2F" target="_blank">https://repo1.maven.org/maven2/com/alibaba/fastjson2/fastjson2/2.0.44.android4/</a></li><li>1.x 兼容版本<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frepo1.maven.org%2Fmaven2%2Fcom%2Falibaba%2Ffastjson%2F2.0.44%2F" target="_blank">https://repo1.maven.org/maven2/com/alibaba/fastjson/2.0.44/</a></li><li>性能測試報告<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Falibaba%2Ffastjson2%2Fblob%2Fmain%2Fdocs%2Fbenchmark%2Fbenchmark_2.0.44.md" target="_blank">https://github.com/alibaba/fastjson2/blob/main/docs/benchmark/benchmark_2.0.44.md</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Mon, 25 Dec 2023 08:25:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272608/fastjson-2-0-44-released</guid>
            <link>https://www.oschina.net/news/272608/fastjson-2-0-44-released</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[國內第一個開源免費電子簽章系統發佈了]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="text-align:left"><span><span><span><span><strong><span>一、前言 &nbsp;&nbsp;</span></strong><br> &nbsp;&nbsp;&nbsp;&nbsp;<span><span>如約而至，歷經一年的奮戰，開放籤電子簽章系統於 2023 年 12 月 15 日上線發佈了。</span></span><br> &nbsp;&nbsp;&nbsp;&nbsp;<span><span>開放籤是國內第一個開源免費的電子簽章系統，為企業構建安全、可信、可控、靈活的一站式電子簽章全服務體系產品鏈，我們相信將電子簽章技術、產品開源開放，能夠為產品與用戶之間帶來更多信任，讓電子簽署更加可信、簡單。</span></span><br><strong><span><span><strong>二、產品理念 &nbsp;&nbsp;</strong></span></span></strong><br> &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<strong><span><span><strong>產品的核心價值理念：讓電子簽署更簡單。</strong></span></span></strong></span></span></span></span></p><p style="margin-left:0; margin-right:0; text-align:left"><span><span><span><span><span><span>&nbsp; &nbsp; &nbsp; &nbsp;讓電子簽章技術更加簡單：目前，市場上掌握電子簽署完整技術的開發工程師比例相對較低，同時網上相關的技術資料和工具也比較分散，很難系統性的學習和應用。所以，我們希望開放籤可以將電子簽章技術和工具完整的、開源的提供出來，讓有技術能力的個人或團隊學習或自建電子簽章系統；</span></span><br><span><span>讓電子簽章應用更加簡單：在應用層面，我們希望可以降低企業應用電子簽章產品的門檻，免費下載，零採購成本使用；</span></span><br><strong><span><span><strong>三、產品矩陣和功能</strong></span></span></strong><br> &nbsp;&nbsp;&nbsp;&nbsp;<strong>&nbsp; &nbsp;&nbsp;</strong><strong><span><span><strong>基於產品理念，開放籤的產品矩陣和功能如下：</strong></span></span></strong></span></span></span></span></p><p style="margin-left:0; margin-right:0; text-align:left"><span><span><span><span><span><span>&nbsp; &nbsp; &nbsp; &nbsp;開源工具版：將電子簽章的核心技術代碼和工具進行開源，開源版採用更加寬鬆的 MIT 開源協議，且不受商業限制。產品功能包括：電子印章製作，手寫簽名生成，數字證書生成，PDF 文件轉圖片，電子簽章（關鍵字簽署、指定位置簽署），文件驗籤等。</span></span><br> &nbsp; &nbsp; &nbsp; &nbsp;<span><span>企業版：提供免費版本的電子簽章應用系統，用戶可以一鍵下載、部署安裝，部署完成後，用戶即可擁有電子簽章的基本功能。支持私有化部署、多租戶、SaaS 化等多種服務模式，提供在線簽署、電子簽章、電子印章管控、審批流程管理、數字證書服務等功能，滿足電子合同、電子保單、電子報告單、招投標文件、電子成績單、電子證明、金融憑證、會計憑證、電子處方等多種電子文件簽署場景。</span></span><br> &nbsp; &nbsp; &nbsp; &nbsp;<span><span>定製版：對於比較複雜的、定製的場景需求，開放籤提供本地化、深度定製化、專屬技術服務，為您提供專屬電子簽章平台。</span></span><br><strong><span><span><strong>四、開放籤產品地址</strong></span></span></strong><br><span><span>開源工具版下載地址：</span></span></span></span></span></span></p><p><a href="https://gitee.com/kaifangqian">gitee 倉庫地址</a>：https://gitee.com/kaifangqian</p><p><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.kaifangqian.com" target="_blank">產品官網地址</a>：www.kaifangqian.com</p><p><span style="background-color:#ffffff; color:#4d4d4d">開放籤將始終以開源、開放的價值觀持續更新系統，為用戶提供更加開放、好用的電子簽章系統。</span></p><p>&nbsp;</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 25 Dec 2023 07:42:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272595</guid>
            <link>https://www.oschina.net/news/272595</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Furion 商業化探索：輕舟已過萬重山，v4.9.1.15]]>
            </title>
            <description>
                <![CDATA[<div class="content"><blockquote><p><strong>兩岸猿聲啼不住，輕舟已過萬重山。</strong></p><p><strong>所有人的看法和評價都是暫時的，只有自己的經歷和成績是伴隨一生的。</strong>幾乎所有的擔憂和畏懼，都是來源於自己的想象，只有你真的去做了，才會發現有多快樂。</p></blockquote><p>經過為期一個月的商業化探索，Furion 收穫了 1.4 萬個付費用戶，其中開通年付費 VIP 服務的有 519 位，同時獲得了國內兩家和國外一家企業超過 10 萬人民幣的友情贊助。NuGet 總下載量也達到了 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.nuget.org%2Fprofiles%2Fmonk.soul" target="_blank">1200 萬</a>。</p><hr><p><strong>盡人事，聽天命，事在人為。</strong></p><p>經過一個月對開源文檔商業化的深入探索，我們已成功建立了一套全面且規範的流程，並在此過程中積累了豐富的經驗。這些經驗涵蓋了流程設計、財務收款、防盜版措施、客戶投訴處理、安全合規以及輿論公關等多個方面。</p><p>面對新事物和改變，人們往往會產生恐懼和不安。然而，<strong>作為互聯網行業的從業者，我們不僅需要思考如何改變，更要勇於接受、擁抱並實現這些改變。</strong></p><p><strong>不論未來人們如何評價我們的這一嘗試，至少在目前，我們已經為開源商業化領域開闢了一條新的道路。</strong></p><h2>本期更新</h2><ul><li><p style="margin-left:0; margin-right:0"><strong>新特性</strong></p><ul><li>[新增]<span>&nbsp;</span><code>EFCore</code><span>&nbsp;</span>數據庫操作<span>&nbsp;</span><code>EntityNotTenant</code><span>&nbsp;</span>和<span>&nbsp;</span><code>EntityBaseNotTenant</code><span>&nbsp;</span>實體基類<span>&nbsp;</span>4.9.1.11<span>&nbsp;</span>⏱️2023.12.04<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/b62bfb1a18d57f7fe3dd9548aa02372025dfed85">b62bfb1</a></li><li>[新增] 控制枱日誌支持啓動時同步<span>&nbsp;</span><code>ConsoleFormatterExtendOptions</code><span>&nbsp;</span>配置<span>&nbsp;</span>4.9.1.10<span>&nbsp;</span>⏱️2023.12.04<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/a96fe08336dbf99b7cf5cc5e6ec304adf7413a4b">a96fe08</a></li><li>[新增] 定時任務支持取消正在運行的作業程序<span>&nbsp;</span>4.9.1.9<span>&nbsp;</span>⏱️2023.12.03<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/3cc9be0da1eabc0f3baaa7801b115bb2909bb085">3cc9be0</a></li><li>[新增]<span>&nbsp;</span><code>JSON.IsValid(jsonString)</code><span>&nbsp;</span>判斷<span>&nbsp;</span><code>JSON</code><span>&nbsp;</span>字符串有效性<span>&nbsp;</span>4.9.1.8<span>&nbsp;</span>⏱️2023.11.30<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/22bc69bd4a445f81833c082da7c99f4a5c518012">22bc69b</a></li><li>[新增]<span>&nbsp;</span><code>axios-utils.ts</code><span>&nbsp;</span>解析<span>&nbsp;</span><code>token</code><span>&nbsp;</span>信息導出方法<span>&nbsp;</span>4.9.1.7<span>&nbsp;</span>⏱️2023.11.29<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/ae8c3e8c47494fa3ba37d2b076d54f9f2c016252">ae8c3e8</a></li><li>[新增] 規範化處理自動過濾<span>&nbsp;</span><code>SSE</code><span>&nbsp;</span>請求、文件請求、圖片請求<span>&nbsp;</span>4.9.1.6<span>&nbsp;</span>⏱️2023.11.22<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/issues/I8IP6D">#I8IP6D</a></li><li>[新增]<span>&nbsp;</span><code>[AppDbContext]</code><span>&nbsp;</span>特性支持<span>&nbsp;</span><code>UseSnakeCaseNaming</code><span>&nbsp;</span>屬性配置表名使用蛇形命名<span>&nbsp;</span>4.9.1.5<span>&nbsp;</span>⏱️2023.11.20<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/issues/I8HGR2">#I8HGR2</a><span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/pulls/863">!863</a></li><li>[新增] 時間戳模型綁定器將時間戳轉換為<span>&nbsp;</span><code>DateTime/DateTimeOffset</code><span>&nbsp;</span>類型<span>&nbsp;</span>4.9.1.5<span>&nbsp;</span>⏱️2023.11.20<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/df3053cf081d5e4d8eb63d567ed95c45267e0969">df3053c</a></li><li>[新增]<span>&nbsp;</span><code>Newtonsoft.Json</code><span>&nbsp;</span>自動將時間戳轉換為<span>&nbsp;</span><code>DateTime/DateTimeOffset</code><span>&nbsp;</span>類型<span>&nbsp;</span>4.9.1.3<span>&nbsp;</span>⏱️2023.11.17<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/78a589d99eb5985b576e4c96acd6e4890391d6ff">78a589d</a></li><li>[新增]<span>&nbsp;</span><code>System.Text.Json</code><span>&nbsp;</span>自動將時間戳轉換為<span>&nbsp;</span><code>DateTime/DateTimeOffset</code><span>&nbsp;</span>類型<span>&nbsp;</span>4.9.1.2<span>&nbsp;</span>⏱️2023.11.17<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/abd5196f5c5160a5df96dad80c7c5aa51b96d5b9">abd5196</a></li><li>[新增]<span>&nbsp;</span><code>IRepositoryFactory&lt;TEntity, TDbContextLocator&gt;</code><span>&nbsp;</span>倉儲功能，解決在<span>&nbsp;</span><code>Blazor</code><span>&nbsp;</span>中使用<span>&nbsp;</span><code>EFCore</code><span>&nbsp;</span>問題<span>&nbsp;</span>4.9.1.1<span>&nbsp;</span>⏱️2023.11.16<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/4285ec0b8debc2d71c7f978126cb3dc394a8ad30">4285ec0</a><span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flearn.microsoft.com%2Fzh-cn%2Faspnet%2Fcore%2Fblazor%2Fblazor-ef-core%3Fview%3Daspnetcore-7.0" target="_blank">文檔説明</a></li><li>[新增] 補償策略模塊功能<span>&nbsp;</span>4.9.1<span>&nbsp;</span>⏱️2023.11.15<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/tree/v4/framework/Furion/RescuePolicy">【源碼地址】</a><span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/dfc63e7f0ffd2e03653f11a3e49a21646902ddc4">dfc63e7</a></li></ul></li><li><p style="margin-left:0; margin-right:0"><strong>突破性變化</strong></p><ul><li>[調整]<span>&nbsp;</span><strong>動態<span>&nbsp;</span><code>WebAPI</code><span>&nbsp;</span>生成版本控制路由規則，版本分隔符默認由<span>&nbsp;</span><code>@</code><span>&nbsp;</span>調整為<span>&nbsp;</span><code>v</code></strong><span>&nbsp;</span>4.9.1.14<span>&nbsp;</span>⏱️2023.12.14<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/7677d0fa615d3ccdf784542b5702cd1d6165e78f">7677d0f</a></li><li>[升級]<span>&nbsp;</span><code>Serilog</code><span>&nbsp;</span>拓展包依賴至<span>&nbsp;</span><code>8.0.0</code><span>&nbsp;</span>版本，<strong>移除<span>&nbsp;</span><code>.NET8.0</code><span>&nbsp;</span>的<span>&nbsp;</span><code>IWebHostBuilder.UseSerilogDefault</code><span>&nbsp;</span>拓展方法</strong><span>&nbsp;</span>4.9.1.1<span>&nbsp;</span>⏱️2023.11.16<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/5ab3e43722a298db56a86792dde301adf1f3fe7f">5ab3e43</a></li><li>[升級]<span>&nbsp;</span><strong>框架底層適配<span>&nbsp;</span><code>.NET8.0</code><span>&nbsp;</span>正式版</strong><span>&nbsp;</span>4.9.1<span>&nbsp;</span>⏱️2023.11.15</li><li>[升級]<span>&nbsp;</span><strong>框架腳手架適配<span>&nbsp;</span><code>.NET8.0</code><span>&nbsp;</span>正式版</strong><span>&nbsp;</span>4.9.1<span>&nbsp;</span>⏱️2023.11.15</li></ul></li><li><p style="margin-left:0; margin-right:0"><strong>問題修復</strong></p><ul><li>[修復] 動態<span>&nbsp;</span><code>WebAPI</code><span>&nbsp;</span>因<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/d9810bece0a1d1108e134cfdae2fdd868554f769">1dc7ea7</a><span>&nbsp;</span>提交導致<span>&nbsp;</span><code>AsLowerCamelCase</code><span>&nbsp;</span>配置失效問題<span>&nbsp;</span>4.9.1.15<span>&nbsp;</span>⏱️2023.12.20<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/d9810bece0a1d1108e134cfdae2fdd868554f769">d9810be</a></li><li>[修復] 粘土對象轉換成<span>&nbsp;</span><code>Dictionary</code><span>&nbsp;</span>對象不支持遞歸問題<span>&nbsp;</span>4.9.1.13<span>&nbsp;</span>⏱️2023.12.11<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/issues/I8NFT4">#I8NFT4</a></li><li>[修復]<span>&nbsp;</span><code>Scoped.CreateAsync</code><span>&nbsp;</span>內部異常上層應用不能捕獲問題<span>&nbsp;</span>4.9.1.12<span>&nbsp;</span>⏱️2023.12.08<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/0a89a434223c45d84b8908f6aff1bf1d7528193a">0a89a43</a></li><li>[修復]<span>&nbsp;</span><code>Scoped.CreateUowAsync</code><span>&nbsp;</span>內部異常上層應用不能捕獲問題<span>&nbsp;</span>4.9.1.8<span>&nbsp;</span>⏱️2023.11.30<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/3c859e83c0ed6f07fcf191973fe465599a823224">3c859e8</a></li><li>[修復] 定時任務設置觸發器<span>&nbsp;</span><code>Result</code><span>&nbsp;</span>後作業執行異常不能重置問題<span>&nbsp;</span>4.9.1.7<span>&nbsp;</span>⏱️2023.11.24<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/147215f1631f58fca900f17cca5695f9431555e5">147215f</a></li><li>[修復]<span>&nbsp;</span><code>JWTEncryption.GetJWTSettings()</code><span>&nbsp;</span>獨立使用時無法獲取自定義配置<span>&nbsp;</span>4.9.1.4<span>&nbsp;</span>⏱️2023.11.18<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/c045e084670a98f71d5ea5ed55ca5cbbfc981e0b">c045e08</a></li></ul></li><li><p style="margin-left:0; margin-right:0"><strong>文檔</strong></p><ul><li>[更新] 倉儲文檔、<code>Db</code><span>&nbsp;</span>靜態類文檔、腳手架文檔、<code>.NET7</code><span>&nbsp;</span>升級<span>&nbsp;</span><code>.NET8</code><span>&nbsp;</span>文檔、<code>JSON</code><span>&nbsp;</span>序列化文檔、<code>Docker</code><span>&nbsp;</span>部署文檔、數據庫上下文文檔、虛擬文件文檔、遠程請求文檔、<code>HttpContext</code><span>&nbsp;</span>文檔、<code>JSON</code><span>&nbsp;</span>靜態類文檔、定時任務文檔、數據庫倉儲拓展文檔、數據庫實體文檔、規範化文檔</li></ul></li><li><p style="margin-left:0; margin-right:0"><strong>貢獻者</strong></p><ul><li>zuohuaijun (<a href="https://gitee.com/zuohuaijun">@zuohuaijun</a>)<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/pulls/865">!865</a></li><li>anliuty (<a href="https://gitee.com/www.fengyunmy.com">@anliuty</a>)<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/pulls/863">!863</a></li><li>風雲明月 (<a href="https://gitee.com/www.fengyunmy.com">@www.fengyunmy.com</a>)<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/pulls/862">!862</a></li></ul></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Mon, 25 Dec 2023 06:34:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272578/furion-4-9-1-15-released</guid>
            <link>https://www.oschina.net/news/272578/furion-4-9-1-15-released</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Stellarium 23.4 發佈，開源 3D 天象模擬軟件]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Stellarium 23.4 已發佈。從 v23.1 開始，發佈的版本號將顯示 year.release scheme。對於 Windows，所使用的 Qt 框架版本作為包名稱的一部分可見。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">Stellarium 是一款免費開源 GPL（自由軟件基金會 GNU 通用公共許可證）軟件，它使用 OpenGL 圖形接口對星空進行實時渲染。軟件可以模擬肉眼、雙筒望遠鏡和小型天文等觀察天空，根據觀測者所處時間和位置，計算出天空中太陽、月球、行星等天體位置，並將其精確地顯示出來。還可以繪製星座、演示天文現象，如流星雨、日食和月食等。</p><p style="color:#000000; margin-left:0; margin-right:0; text-align:start">Stellarium 還被應用於天文館中作為教學展示軟件，作為天文愛好者星空望遠鏡觀測輔助軟件。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" height="374" src="https://oscimg.oschina.net/oscnet/up-0aa6143a3e2a1325d21d488ecfd731d4a83.png" width="500" referrerpolicy="no-referrer"></p><p><span style="background-color:#ffffff; color:#333333">此版本的主要變化內容如下：</span></p><ul><li>新插件：Lens Distortion Estimator（實驗性）</li><li>新天空文化：Tibetan Lunar Mansions</li><li>更改了 GUI：能夠通過 normalStyle.css 更改外觀</li><li>為 Windows 軟件包添加了新的 MESA</li><li>添加了對 Windows/ARM64 軟件包的支持</li><li>添加了對 nomenclature names 起源的支持</li><li>插件和 AstroCalc 工具的改進</li><li>macOS/ARM64 上的性能改進</li><li>以及許多小問題的修復</li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>TELESCOPE USERS</strong></p><ul style="list-style-type:disc; margin-left:0; margin-right:0"><li><span style="color:#000000">已經發現並修復了基於 Qt6 版本的 TelescopeControl 插件中的一些錯誤。</span></li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="color:#000000">Telescope users 可檢查一下問題是否已經解決。如果沒有解決的話，</span>Stellarium 團隊正在尋求有能力解決該問題的開發者的協助，可能會有獎勵。</p><p><span style="background-color:#ffffff; color:#000000">詳情可</span><span style="background-color:#ffffff; color:#333333">參閲</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fstellarium.org%2Frelease%2F2023%2F12%2F23%2Fstellarium-23.4.html" target="_blank">完整的更改列表</a><span style="background-color:#ffffff; color:#333333">。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 25 Dec 2023 06:07:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272572/stellarium-23-4-released</guid>
            <link>https://www.oschina.net/news/272572/stellarium-23-4-released</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[RuleGo v0.18.0 發佈：Go 輕量級、高性能、嵌入式、可編排組件式規則引擎]]>
            </title>
            <description>
                <![CDATA[<div class="content"><ul></ul><p><code>RuleGo</code> 是一個基於 <code>Go</code> 語言的輕量級、高性能、嵌入式、可編排組件式的規則引擎。也一個靈活配置和高度定製化的事件處理框架。支持異構系統數據集成，可以對輸入消息進行聚合、分發、過濾、轉換、豐富和執行各種動作。</p><h4>典型使用場景</h4><ul><li><strong>邊緣計算：</strong> 可以在邊緣服務器部署 <code>RuleGo</code>，對數據進行預處理，篩選、聚合或者計算後再上報到雲端。數據的處理規則和分發規則可以通過規則鏈動態配置和修改，而不需要重啓系統。</li><li><strong>物聯網：</strong> 收集設備數據上報，經過規則鏈的規則判斷，觸發一個或者多個動作，例如：發郵件、發告警、和其他設備或者系統聯動。</li><li><strong>數據分發：</strong> 可以根據不同的消息類型，調用 HTTP、MQTT 或者 gRPC 把數據分發到不同系統。</li><li><strong>應用集成：</strong> 把 <code>RuleGo</code> 當做膠水連接各種系統或者協議，例如：ssh、webhook、kafka、消息隊列、數據庫、chatGPT、第三方應用系統。</li><li><strong>異構系統數據集中處理：</strong> 從不同的數據源（如 MQTT、HTTP、WS、TCP/UDP 等）接收數據，然後對數據進行過濾、格式轉換、然後分發到數據庫、業務系統或者儀錶板。</li><li><strong>高度定製化業務：</strong> 把高度定製化或者經常變化的業務解耦出來，交給 <code>RuleGo</code> 規則鏈進行管理。業務需求變化而不需要重啓主程序。</li><li><strong>複雜業務編排：</strong> 把業務封裝成自定義組件，通過 <code>RuleGo</code> 編排和驅動這些自定義的組件，業務邏輯並支持動態調整和替換。</li><li><strong>微服務編排：</strong> 通過 <code>RuleGo</code> 編排和驅動微服務，或者動態調用第三方服務處理業務，並返回結果。</li><li><strong>業務代碼和業務邏輯解耦：</strong> 例如：用戶積分計算系統、風控系統。</li><li><strong>自動化：</strong> 例如：流程自動化系統、營銷自動化系統、對接<code>大模型</code>提取用戶意圖，然後觸發規則鏈與其他系統進行聯動或者進行業務處理。</li><li><strong>靈活配置和高度定製化的事件處理框架：</strong> 對不同的消息類型，進行異步或者同步的處理。</li></ul><h3>架構圖</h3><p><img alt="" height="1536" src="https://oscimg.oschina.net/oscnet/up-e549bd3e4e005f5ac2031927b4ab00e516b.png" width="2149" referrerpolicy="no-referrer"></p><h3><strong>本次更新</strong></h3><p>築牢底座，迎接 2024，本次主要增加了：</p><p>1.增加<strong>AOP</strong>(面向切面編程，Aspect Oriented Programming) 機制，它類似攔截器或者 hook 機制，但是功能更加強大和靈活。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frulego.cc%2Fpages%2Fa1ed6c%2F" target="_blank">文檔</a></p><ul><li>它允許在不修改規則鏈或節點的原有邏輯的情況下，對規則鏈的執行添加額外的行為，或者直接替換原規則鏈或者節點邏輯。</li><li>它允許把一些公共的行為（例如：日誌、安全、規則鏈執行情況跟蹤、組件降級、組件重試、組件緩存）從業務邏輯中分離出來。</li><li>它允許你更好地控制和擴展 RuleGo 框架。</li></ul><p>2.另外增加生產環境的可靠性驗證，增加了大量的單元測試（覆蓋率 92%）和性能測試測試用例（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frulego.cc%2Fpages%2Ff60381%2F" target="_blank">鏈接</a>）。</p><p><strong>詳細更新：</strong></p><h2>[v0.18.0] 2023/12/27</h2><ul><li>feat:增加 AOP 模塊，它允許在不修改規則鏈或節點的原有邏輯的情況下，對規則鏈的執行添加額外的行為，或者直接替換原規則鏈或者節點邏輯。 提供以下增強點：Before Advice、After Advice、Around Advice、Start Advice、End Advice、Completed Advice、OnCreated Advice、OnReload Advice、OnDestroy Advice。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frulego.cc%2Fpages%2Fa1ed6c%2F" target="_blank">文檔</a></li><li>feat:restApiCall 節點組件，增加 SSE(Server-Sent Events) 流式請求模式，支持對接大模型接口。</li><li>feat:增加 CI 自動化測試流程。</li><li>feat:增加大量單元測試，覆蓋率達到 92%。</li><li>feat:增加性能<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frulego.cc%2Fpages%2Ff60381%2F" target="_blank">測試用例</a><span>&nbsp;</span>。</li><li>feat:sendEmail 節點組件，增加 ConnectTimeout 配置。</li><li>feat:/examples/server 示例工程，增加 -js -plugins -chain_id flags，支持啓動加載 js 原生文件、插件和指定 mqtt 訂閲處理規則鏈 ID。</li><li>fix:/examples/server 示例工程，規則鏈文件夾多層路徑無法正常解析。</li><li>fix:/examples/server 示例工程，保存規則鏈，可能會出現舊規則鏈文件數據無法正確覆蓋。</li><li>fix:metadata 可能會出現併發讀寫問題。</li><li>fix:規則引擎同步處理數據，有幾率無法正確調用 onCompleted 回調函數。</li><li>fix:RuleChainPool nil 問題。</li><li>fix:mqtt endpoint，無法通過 header 得到主題。</li><li>refactor:onEnd 回調函數允許得到 relationType。</li><li>refactor:刪除函數 Configuration.GetToString。</li><li>opt:部分組件，增強 nil 檢查。</li><li>opt:dsl AdditionalInfo 字段，增加 omitempty json tag。</li><li>opt:run go fmt。</li></ul><h3>其他信息</h3><ul><li>歡迎在<span>&nbsp;</span><a href="https://gitee.com/rulego/rulego" target="_blank">Gitee</a><span>&nbsp;</span>或者<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frulego%2Frulego" target="_blank">Github</a><span>&nbsp;</span>上提交反饋或建議</li><li>如果喜歡這個項目，請給我們點個 Star</li><li>文檔官網：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frulego.cc%2F" target="_blank">rulego.cc</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Mon, 25 Dec 2023 03:54:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272552/rulego-0-18-0-released</guid>
            <link>https://www.oschina.net/news/272552/rulego-0-18-0-released</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
    </channel>
</rss>
