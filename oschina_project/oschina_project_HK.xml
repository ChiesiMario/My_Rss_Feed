<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[開源中國-軟件更新資訊]]>
        </title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="http://rsshub.app/oschina/news/project" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[開源中國-軟件更新資訊 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Fri, 08 Mar 2024 14:07:22 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[重磅發佈｜AutoMQ 1.0.0 GA 版本官宣：已驗證生產環境可用性]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div><div><strong>AutoMQ 是基於雲構建的無服務、極速彈性、極具成本效益的下一代 Kafka。100% 兼容 Apache Kafka，無分區數據複製。在無副作用的前提下解決了 Kafka 彈性、運維上的諸多痛點並且帶來了數量級的成本降低。</strong></div><div>
  &nbsp;
 </div><div>
  AutoMQ 1.0.0 GA 版本現已在 Github 倉庫 (https://github.com/AutoMQ/automq-for-kafka) 正式發佈，歡迎大家關注與下載使用。
 </div><div>
  &nbsp;
 </div><div>
  我們自信地認為 1.0.0 可以作為 GA 版本，用於生產環境主要是基於以下事實：
 </div><ul><li><div>
    通過我們自研 Long Running 自動化測試框架長時間穩定運行，對 GA 版本兼容性、穩定性、性能有全面的長時間可靠驗證。
   </div></li><li><div>
    通過自研 Long Running Chaos 自動化測試長時間穩定運行，對各故障注入場景注入網絡問題、磁盤 hang 等都可以正常及時恢復。
   </div></li><li><div>
    長時間穩定運行 E2E 測試，覆蓋 Apache Kafka 所有測試用例 (Kraft 相關部分) 合計 387 個測試用例。
   </div></li><li><div>
    支持統一完整的指標透出，可用於全面監控 AutoMQ，滿足投產標準。
   </div></li><li><div>
    內核大量優化與改進，保證 AutoMQ 在各種功能、性能上滿足我們的 GA 標準。性能白皮書可以從官網 (https://www.automq.com) 下載。
   </div></li></ul><div>
  版本更新細節包括：
 </div><ul><li><div>
    在 AutoMQ 多個早期用户真實場景經過打磨與驗證。
   </div></li><li><div>
    ci: Bump version to 1.0.0-rc8 by 
    <u><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmooc9988" target="_blank">@mooc9988</a></strong></u> in 
    <u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FAutoMQ%2Fautomq-for-kafka%2Fpull%2F785" target="_blank">#785</a></u></div></li><li><div>
    build(s3stream): switch back to dev mode by 
    <u><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FSCNieh" target="_blank">@SCNieh</a></strong></u> in 
    <u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FAutoMQ%2Fautomq-for-kafka%2Fpull%2F786" target="_blank">#786</a></u></div></li><li><div>
    fix(e2e): wait for more time for broker hard bounce by 
    <u><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmooc9988" target="_blank">@mooc9988</a></strong></u> in 
    <u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FAutoMQ%2Fautomq-for-kafka%2Fpull%2F787" target="_blank">#787</a></u></div></li><li><div>
    feat(issues791): change s3.stream.object.compaction.max.size.bytes default 1GB by 
    <u><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsuperhx" target="_blank">@superhx</a></strong></u> in 
    <u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FAutoMQ%2Fautomq-for-kafka%2Fpull%2F792" target="_blank">#792</a></u></div></li><li><div>
    fix(auth): throw an exception when failed to create a credential from env by 
    <u><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FChillax-0v0" target="_blank">@Chillax-0v0</a></strong></u> in 
    <u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FAutoMQ%2Fautomq-for-kafka%2Fpull%2F793" target="_blank">#793</a></u></div></li><li><div>
    fix(e2e): fix transaction timeout; merge streams tests by 
    <u><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmooc9988" target="_blank">@mooc9988</a></strong></u> in 
    <u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FAutoMQ%2Fautomq-for-kafka%2Fpull%2F795" target="_blank">#795</a></u></div></li><li><div>
    feat(core): verify stream epoch for stream object commit by 
    <u><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FSCNieh" target="_blank">@SCNieh</a></strong></u> in 
    <u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FAutoMQ%2Fautomq-for-kafka%2Fpull%2F796" target="_blank">#796</a></u></div></li><li><div>
    fix(core): prevent generate stream object record for noop object id by 
    <u><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FSCNieh" target="_blank">@SCNieh</a></strong></u> in 
    <u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FAutoMQ%2Fautomq-for-kafka%2Fpull%2F797" target="_blank">#797</a></u></div></li><li><div>
    fix(issues798): checkpoint NPE by 
    <u><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsuperhx" target="_blank">@superhx</a></strong></u> in 
    <u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FAutoMQ%2Fautomq-for-kafka%2Fpull%2F800" target="_blank">#800</a></u></div></li><li><div>
    fix(e2e): add consumer api timeout to 90s in hard bounce tests by 
    <u><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmooc9988" target="_blank">@mooc9988</a></strong></u> in 
    <u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FAutoMQ%2Fautomq-for-kafka%2Fpull%2F803" target="_blank">#803</a></u></div></li><li><div>
    feat(issues801): stream trim only update stream metadata by 
    <u><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsuperhx" target="_blank">@superhx</a></strong></u> in 
    <u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FAutoMQ%2Fautomq-for-kafka%2Fpull%2F805" target="_blank">#805</a></u></div></li><li><div>
    feat(core): add metrics to monitor auto balancer metrics delay by 
    <u><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FSCNieh" target="_blank">@SCNieh</a></strong></u> in 
    <u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FAutoMQ%2Fautomq-for-kafka%2Fpull%2F807" target="_blank">#807</a></u></div></li><li><div>
    fix(issues806): stream object leak by 
    <u><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsuperhx" target="_blank">@superhx</a></strong></u> in 
    <u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FAutoMQ%2Fautomq-for-kafka%2Fpull%2F808" target="_blank">#808</a></u></div></li><li><div>
    fix: range end offset isn't revertable by 
    <u><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsuperhx" target="_blank">@superhx</a></strong></u> in 
    <u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FAutoMQ%2Fautomq-for-kafka%2Fpull%2F809" target="_blank">#809</a></u></div></li><li><div>
    chore: rename s3ObjectRetention* to s3ObjectDeleteRetention for a more precise description by 
    <u><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdaniel-y" target="_blank">@daniel-y</a></strong></u> in 
    <u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FAutoMQ%2Fautomq-for-kafka%2Fpull%2F810" target="_blank">#810</a></u></div></li><li><div>
    fix: set destroyed object size by 
    <u><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsuperhx" target="_blank">@superhx</a></strong></u> in 
    <u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FAutoMQ%2Fautomq-for-kafka%2Fpull%2F811" target="_blank">#811</a></u></div></li><li><div>
    chore: suppress out of order error by 
    <u><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsuperhx" target="_blank">@superhx</a></strong></u> in 
    <u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FAutoMQ%2Fautomq-for-kafka%2Fpull%2F812" target="_blank">#812</a></u></div></li><li><div>
    fix(metrics): present metrics from active controller only by 
    <u><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FSCNieh" target="_blank">@SCNieh</a></strong></u> in 
    <u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FAutoMQ%2Fautomq-for-kafka%2Fpull%2F815" target="_blank">#815</a></u></div></li><li><div>
    fix(core): prevent anomaly detect exit on inactive controller by 
    <u><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FSCNieh" target="_blank">@SCNieh</a></strong></u> in 
    <u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FAutoMQ%2Fautomq-for-kafka%2Fpull%2F816" target="_blank">#816</a></u></div></li><li><div>
    fix(issues817): txn index fetch out of bound by 
    <u><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsuperhx" target="_blank">@superhx</a></strong></u> in 
    <u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FAutoMQ%2Fautomq-for-kafka%2Fpull%2F818" target="_blank">#818</a></u></div></li><li><div>
    feat(shell): add metadata summary to metadata shell by 
    <u><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FSCNieh" target="_blank">@SCNieh</a></strong></u> in 
    <u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FAutoMQ%2Fautomq-for-kafka%2Fpull%2F813" target="_blank">#813</a></u></div></li><li><div>
    fix(ReplicaManager): fix memory leak caused by uncaught exception by 
    <u><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FChillax-0v0" target="_blank">@Chillax-0v0</a></strong></u> in 
    <u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FAutoMQ%2Fautomq-for-kafka%2Fpull%2F821" target="_blank">#821</a></u></div></li><li><div>
    fix(core): remove topic partition metrics on partition offline by 
    <u><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FSCNieh" target="_blank">@SCNieh</a></strong></u> in 
    <u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FAutoMQ%2Fautomq-for-kafka%2Fpull%2F820" target="_blank">#820</a></u></div></li><li><div>
    feat(core): add metrics to monitor s3 objects by 
    <u><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FSCNieh" target="_blank">@SCNieh</a></strong></u> in 
    <u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FAutoMQ%2Fautomq-for-kafka%2Fpull%2F823" target="_blank">#823</a></u></div></li><li><div>
    fix(core): record s3 object metrics on active controller only by 
    <u><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FSCNieh" target="_blank">@SCNieh</a></strong></u> in 
    <u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FAutoMQ%2Fautomq-for-kafka%2Fpull%2F824" target="_blank">#824</a></u></div></li><li><div>
    feat: add object ttl reach log by 
    <u><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsuperhx" target="_blank">@superhx</a></strong></u> in 
    <u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FAutoMQ%2Fautomq-for-kafka%2Fpull%2F825" target="_blank">#825</a></u></div></li><li><div>
    fix(issues826): fix consume records leak in closing channel by 
    <u><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsuperhx" target="_blank">@superhx</a></strong></u> in 
    <u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FAutoMQ%2Fautomq-for-kafka%2Fpull%2F827" target="_blank">#827</a></u></div></li><li><div>
    fix(pr-827): fix release 
    <code>PooledMemoryRecords</code> twice by 
    <u><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FChillax-0v0" target="_blank">@Chillax-0v0</a></strong></u> in 
    <u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FAutoMQ%2Fautomq-for-kafka%2Fpull%2F828" target="_blank">#828</a></u></div></li><li><div>
    chore: support release tgz file in workflow by 
    <u><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FKaimingWan" target="_blank">@KaimingWan</a></strong></u> in 
    <u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FAutoMQ%2Fautomq-for-kafka%2Fpull%2F832" target="_blank">#832</a></u></div></li><li><div>
    fix(core): catch exceptions on replaying records by 
    <u><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FSCNieh" target="_blank">@SCNieh</a></strong></u> in 
    <u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FAutoMQ%2Fautomq-for-kafka%2Fpull%2F836" target="_blank">#836</a></u></div></li><li><div>
    feat(core): refine grafana dashboards by 
    <u><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FSCNieh" target="_blank">@SCNieh</a></strong></u> in 
    <u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FAutoMQ%2Fautomq-for-kafka%2Fpull%2F837" target="_blank">#837</a></u></div></li><li><div>
    fix(core): fix auto balancer metrics delay time calculation by 
    <u><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FSCNieh" target="_blank">@SCNieh</a></strong></u> in 
    <u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FAutoMQ%2Fautomq-for-kafka%2Fpull%2F838" target="_blank">#838</a></u></div></li><li><div>
    fix(ReplicaManager): release permits after sending responses by 
    <u><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FChillax-0v0" target="_blank">@Chillax-0v0</a></strong></u> in 
    <u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FAutoMQ%2Fautomq-for-kafka%2Fpull%2F831" target="_blank">#831</a></u></div></li><li><div>
    fix: log permanet fail by 
    <u><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsuperhx" target="_blank">@superhx</a></strong></u> in 
    <u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FAutoMQ%2Fautomq-for-kafka%2Fpull%2F839" target="_blank">#839</a></u></div></li><li><div>
    feat(core): redirect JUL log to sl4j and remove unused logging exporter by 
    <u><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FSCNieh" target="_blank">@SCNieh</a></strong></u> in 
    <u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FAutoMQ%2Fautomq-for-kafka%2Fpull%2F843" target="_blank">#843</a></u></div></li><li><div>
    perf(DelayedFetch): only try to fast read on complete a delayed fetch by 
    <u><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FChillax-0v0" target="_blank">@Chillax-0v0</a></strong></u> in 
    <u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FAutoMQ%2Fautomq-for-kafka%2Fpull%2F844" target="_blank">#844</a></u></div></li><li><div>
    perf(ReplicaManager): return fast if slow fetch timeout by 
    <u><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FChillax-0v0" target="_blank">@Chillax-0v0</a></strong></u> in 
    <u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FAutoMQ%2Fautomq-for-kafka%2Fpull%2F845" target="_blank">#845</a></u></div></li><li><div>
    fix(core): fix node id regex in broker dashboard by 
    <u><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FSCNieh" target="_blank">@SCNieh</a></strong></u> in 
    <u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FAutoMQ%2Fautomq-for-kafka%2Fpull%2F841" target="_blank">#841</a></u></div></li><li><div>
    feat: record pooled record memory usage by 
    <u><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsuperhx" target="_blank">@superhx</a></strong></u> in 
    <u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FAutoMQ%2Fautomq-for-kafka%2Fpull%2F846" target="_blank">#846</a></u></div></li><li><div>
    ci: skip nightly schedule on forks by 
    <u><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ftisonkun" target="_blank">@tisonkun</a></strong></u> in 
    <u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FAutoMQ%2Fautomq-for-kafka%2Fpull%2F842" target="_blank">#842</a></u></div></li><li><div>
    fix(metrics): add label 'version' to kafka.request.count by 
    <u><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FSCNieh" target="_blank">@SCNieh</a></strong></u> in 
    <u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FAutoMQ%2Fautomq-for-kafka%2Fpull%2F847" target="_blank">#847</a></u></div></li><li><div>
    feat(telemetry): add host name to OTel resource by 
    <u><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FSCNieh" target="_blank">@SCNieh</a></strong></u> in 
    <u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FAutoMQ%2Fautomq-for-kafka%2Fpull%2F849" target="_blank">#849</a></u></div></li><li><div>
    feat(metrics): metrics on fetch limiters and executors by 
    <u><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FChillax-0v0" target="_blank">@Chillax-0v0</a></strong></u> in 
    <u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FAutoMQ%2Fautomq-for-kafka%2Fpull%2F848" target="_blank">#848</a></u></div></li><li><div>
    feat(metrics): add buffer and thread metrics by 
    <u><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FShadowySpirits" target="_blank">@ShadowySpirits</a></strong></u> in 
    <u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FAutoMQ%2Fautomq-for-kafka%2Fpull%2F851" target="_blank">#851</a></u></div></li><li><div>
    feat(telemetry): add direct memory panels by 
    <u><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FSCNieh" target="_blank">@SCNieh</a></strong></u> in 
    <u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FAutoMQ%2Fautomq-for-kafka%2Fpull%2F853" target="_blank">#853</a></u></div></li><li><div>
    fix(telemetry): fix read ahead throughput panel unit by 
    <u><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FSCNieh" target="_blank">@SCNieh</a></strong></u> in 
    <u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FAutoMQ%2Fautomq-for-kafka%2Fpull%2F854" target="_blank">#854</a></u></div></li><li><div>
    feat(metrics): rename DirectByteBufAlloc to ByteBufAlloc by 
    <u><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FShadowySpirits" target="_blank">@ShadowySpirits</a></strong></u> in 
    <u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FAutoMQ%2Fautomq-for-kafka%2Fpull%2F855" target="_blank">#855</a></u></div></li><li><div>
    fix(telemetry): fix memory allocation metrics name by 
    <u><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FSCNieh" target="_blank">@SCNieh</a></strong></u> in 
    <u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FAutoMQ%2Fautomq-for-kafka%2Fpull%2F856" target="_blank">#856</a></u></div></li><li><div>
    feat(metrics): enable buffer pools metrics by 
    <u><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FShadowySpirits" target="_blank">@ShadowySpirits</a></strong></u> in 
    <u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FAutoMQ%2Fautomq-for-kafka%2Fpull%2F857" target="_blank">#857</a></u></div></li><li><div>
    fix: remove special char from issue template file name by 
    <u><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsuperhx" target="_blank">@superhx</a></strong></u> in 
    <u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FAutoMQ%2Fautomq-for-kafka%2Fpull%2F858" target="_blank">#858</a></u></div></li><li><div>
    fix(telemetry): fix jvm metrics by 
    <u><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FSCNieh" target="_blank">@SCNieh</a></strong></u> in 
    <u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FAutoMQ%2Fautomq-for-kafka%2Fpull%2F859" target="_blank">#859</a></u></div></li><li><div>
    fix(telemetry): refine grafana dashboard by 
    <u><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FSCNieh" target="_blank">@SCNieh</a></strong></u> in 
    <u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FAutoMQ%2Fautomq-for-kafka%2Fpull%2F860" target="_blank">#860</a></u></div></li><li><div>
    feat: release automq 1.0.0 by 
    <u><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsuperhx" target="_blank">@superhx</a></strong></u> in 
    <u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FAutoMQ%2Fautomq-for-kafka%2Fpull%2F861" target="_blank">#861</a></u></div></li><li><div>
    ci: Bump version to 1.0.0 by 
    <u><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsuperhx" target="_blank">@superhx</a></strong></u> in 
    <u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FAutoMQ%2Fautomq-for-kafka%2Fpull%2F862" target="_blank">#862</a></u></div></li><li><div>
    ci: fix regex on release by 
    <u><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FChillax-0v0" target="_blank">@Chillax-0v0</a></strong></u> in 
    <u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FAutoMQ%2Fautomq-for-kafka%2Fpull%2F863" target="_blank">#863</a></u></div></li></ul><div><strong>END</strong></div><h3>關於我們</h3><div>
  AutoMQ 是來自 Apache RocketMQ 和 Linux LVS 項目的核心團隊，曾經見證並應對過消息隊列基礎設施在大型互聯網公司和雲計算公司的挑戰。現在我們基於對象存儲優先、存算分離、多雲原生等技術理念，重新設計並實現了 Apache Kafka 和 Apache RocketMQ，帶來高達 10 倍的成本優勢和百倍的彈性效率提升。
 </div><div>
  🌟 GitHub 地址：
  <span style="color:#245bdb"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FAutoMQ">https://github.com/AutoMQ</a></span></div><div>
  💻 官網：
  <span style="color:#245bdb"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.automq.com">https://www.automq.com</a></span></div><div>
  👀 B 站：
  <span style="color:#245bdb"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fspace.bilibili.com%2F3546572478482870">AutoMQ 官方賬號</a></span></div><div>
  🔍 視頻號：AutoMQ
 </div></div></div>
                                    ]]>
            </description>
            <pubDate>Fri, 08 Mar 2024 10:47:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/282187/automq-1-0-0-ga</guid>
            <link>https://www.oschina.net/news/282187/automq-1-0-0-ga</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[ShopWind v4.7 更新，多語言外貿商城系統]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="background-color:#ffffff; color:#353535">ShopWind 多商户商城系統</span><span style="background-color:#ffffff; color:#353535"><span>&nbsp;</span>v4.7 發佈更新，PHP+MySQL，服務端 Yii2 框架，移動端 uniapp。使用 vue3/vite、Element Plus UI、 axios 數據請求、頁面異步加載。 本次更新新增虛擬</span>商品，服務類型商品，虛擬商品，支持線下到店二維碼核銷，無需發貨，修復優化了 webIM 客服系統等多項。</p><h4>演示體驗</h4><ul><li><p style="margin-left:0; margin-right:0">後台體驗：<a href="https://gitee.com/link?target=https%3A%2F%2Fv4.shopwind.net%2Fadmin" target="_blank">&nbsp;</a><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fv4.shopwind%E2%80%8D.net%2Fadmin" target="_blank">https://v4.shopwind‍.net/admin</a>&nbsp;平台管理員賬號：admin 密碼：111111</p></li><li><p style="margin-left:0; margin-right:0">前台體驗：<a href="https://gitee.com/link?target=https%3A%2F%2Fv4.shopwind.net" target="_blank">&nbsp;</a><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fv4.shopwi%E2%80%8Dn%E2%80%8Dd.net" target="_blank">https://v4.shopwi‍n‍d.net</a>&nbsp;自行微信登錄、QQ、支付寶登錄</p></li><li><p style="margin-left:0; margin-right:0">商家體驗：<a href="https://gitee.com/link?target=https%3A%2F%2Fv4.shopwind.net%2Fseller%2Flogin%2Findex" target="_blank">&nbsp;</a><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fv4.shopwind.n%E2%80%8Det%2Fseller%2Flogin" target="_blank">https://v4.shopwind.n‍et/seller/login</a>&nbsp;商家測試賬號：18978189171 密碼：111111</p></li></ul><h4><strong>掃碼體驗其他端</strong></h4><p style="color:#333333; margin-left:0; margin-right:0; text-align:justify"><img alt="" height="325" src="https://oscimg.oschina.net/oscnet/up-654636914825b60991e96bf693f37fdf421.png" width="900" referrerpolicy="no-referrer"></p><h4><strong><span style="background-color:#ffffff; color:#353535">移動端預覽：</span></strong></h4><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="background-color:#ffffff; color:#353535"><img alt="" height="721" src="https://oscimg.oschina.net/oscnet/up-ad4c897cac6d22df44d65b50003da818761.jpg" width="1000" referrerpolicy="no-referrer"></span></p><h4>平台後台預覽</h4><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" height="615" src="https://oscimg.oschina.net/oscnet/up-38308bb8c073ef01a0b40623283c9312119.png" width="1000" referrerpolicy="no-referrer"></p><h4><strong>PC 端預覽</strong></h4><p style="color:#333333; margin-left:0; margin-right:0; text-align:justify"><img alt="" height="1507" src="https://oscimg.oschina.net/oscnet/up-c8a4483db8b755c7e99d53d6601285fbf93.png" width="1000" referrerpolicy="no-referrer"></p><h4><strong>商家管理預覽</strong></h4><p style="color:#353535; margin-left:0; margin-right:0; text-align:left"><img alt="" height="559" src="https://oscimg.oschina.net/oscnet/up-b31dffba2932f4a1e1a4e0ee8786143fd0d.png" width="1000" referrerpolicy="no-referrer"></p><h4><strong>自定義頁面裝修預覽</strong></h4><p style="color:#353535; margin-left:0; margin-right:0; text-align:left"><img alt="" height="463" src="https://oscimg.oschina.net/oscnet/up-31a72c1f4619e18eae6b48ad5fad33cd9e6.png" width="1000" referrerpolicy="no-referrer"></p><p style="color:#353535; margin-left:0; margin-right:0; text-align:left">&nbsp;</p><h4>更新內容如下：</h4><ul><li>新增電腦端用户中心首頁修改暱稱入口</li><li>新增用户表字段【用户註冊來源：regtype】，取值有：MP = 小程序用户，WAP=H5 用户，APP=APP 端用户</li><li>新增提現手續費設置</li><li>新增電腦端商家中心導出訂單 EXCEl 文件</li><li>優化資產提現表【deposit_withdraw】增加字段【 手續費：fee】</li><li>優化資產交易表【deposit_trade】取消字段【交易分類：tradeCat】業務邏輯</li><li>優化資產交易表【deposit_trade】增加字段【支付用户標識：openid】，為後續業務邏輯處理需要該參數</li><li>優化移動端賣家中心添加 / 編輯商品詳情字段邏輯</li><li>優化門店自提訂單提貨人數據初始化</li><li>修復商品詳情頁不顯示商品詳情問題</li><li>修復地區數據保存後顯示錯誤問題</li><li>修復訂單頁使用優惠券數據有誤問題</li><li>修復我的訂單列表，訂單狀態【取消訂單】按鈕顯示場景有誤的問題</li><li>修復電腦端添加後編輯我的收貨地址數據顯示有誤的問題</li><li>修復電腦端店鋪 - 店鋪分類 - 編輯分類時，父級分類顯示錯誤的問題</li></ul></div>
                                    ]]>
            </description>
            <pubDate>Fri, 08 Mar 2024 08:40:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/282154</guid>
            <link>https://www.oschina.net/news/282154</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Visual Studio 2022 v17.9：面向 C++ 開發人員的全面更新]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#333333">Visual Studio 2022 版本 17.9 為 C++ 開發人員引入了許多新功能和改進。</span></p><p><span style="color:#333333"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdevblogs.microsoft.com%2Fvisualstudio%2Fvisual-studio-2022-version-17-9-a-comprehensive-update-for-c-developers%2F" target="_blank">公告</a>指出，用户現在可以使用&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdevblogs.microsoft.com%2Fvisualstudio%2Fsize-alignment-and-memory-layout-insights-for-c-classes-structs-and-unions%2F" target="_blank"><strong>Memory Layout</strong></a>&nbsp;<span style="color:#333333">功能直接在編輯器中可視化類、結構和聯合的內存佈局。此外，</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdevblogs.microsoft.com%2Fcppblog%2Finclude-diagnostics-in-visual-studio%2F" target="_blank"><strong>#include Diagnostics&nbsp;</strong></a><span style="color:#333333">功能還可以深入瞭解包含文件中的元素使用頻率，以及每個 #include 指令對當前正在編輯的文件的構建時間的影響。這些信息會方便地顯示在編輯器中，便於參考。</span></p><p><span style="color:#333333">對於 Unreal Engine 開發人員，IntelliSense 的一致性和準確性得到了提高，UE Blueprint 引用也得到了簡化。對於 C++ 跨平台開發人員，現在可以直接從 Visual Studio 在遠程 Linux 機器上運行單元測試，併為自己的項目指定自定義 CMake 可執行文件。</span></p><p><span style="color:#333333">且新版 Visual Studio 2022 17.9 為包括 C++ 用户在內的所有 Visual Studio 用户帶來了多項增強功能。譬如：</span></p><ul><li><span style="color:#333333">現在可以利用 AI 生成的 Git commit 信息，它有助於創建清晰、相關的提交描述。</span></li></ul><p><span style="color:#333333"><img alt="" height="322" src="https://oscimg.oschina.net/oscnet/up-20df20c246618c8c70f75818e54617dd782.png" width="300" referrerpolicy="no-referrer">​​​​​​​</span></p><ul><li><span style="color:#333333">還引入了一個 secondary link，讓你不僅能在 Visual Studio 中打開拉取請求，還能在網頁瀏覽器中打開拉取請求。</span></li><li><span style="color:#333333">Git 倉庫窗口現在採用了響應式 Git Ref 標籤，可根據可用空間調整內容，從而簡化了倉庫導航。</span></li><li><span style="color:#333333">新的"Multi Project Configuration"功能可以為多項目解決方案中的特定項目設置配置文件。</span></li></ul><p><span style="color:#333333">有關 Visual Studio 版本 17.9 中最新 C++ 功能的詳細概述，可參閲</span><strong style="color:#333333"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdevblogs.microsoft.com%2Fcppblog%2Fwhats-new-for-cpp-developers-in-visual-studio-2022-17-9%2F" target="_blank">公告博客文章</a></strong><span style="color:#333333">。</span>&nbsp;</p><p>下載地址：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fvisualstudio.microsoft.com%2Fzh-hans%2Fdownloads%2F" target="_blank">https://visualstudio.microsoft.com/zh-hans/downloads/</a></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 08 Mar 2024 03:02:02 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/282097/visual-studio-2022-version-17-9-update-for-c-developers</guid>
            <link>https://www.oschina.net/news/282097/visual-studio-2022-version-17-9-update-for-c-developers</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Socket.D v2.4.6 發佈]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h3>Socket.D 協議</h3><p style="color:#24292e; text-align:start">是基於"事件"和"語義消息""流"的網絡應用層傳輸協議。有用户説，「Socket.D 之於 Socket，尤如 Vue 之於 Js、Mvc 之於 Http」。<span style="background-color:#f1c40f">支持 tcp, udp, ws, kcp 傳輸</span>。協議特點可參考<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsocketd.noear.org%2Farticle%2F748" target="_blank">《官網介紹》</a>。</p><p style="color:#24292e; text-align:start">pyton 已開發完成，再在測試中；go, rust, c++ 正在開發中。</p><h3>for Java 更新</h3><ul><li>添加 ClientConnectHandler 接口，提供連接時的攔截處理</li><li>添加，連接時 Handshake 元信息交互機制</li><li>添加 BrokerListener 異常轉發支持</li><li>添加 Entity:delMeta 刪除元信息接口</li><li>添加 BrokerListenerBase:getPlayerAny(name) 接口</li><li>優化，流異常傳導性</li><li>優化 EntityDefault:metaPut 當 val=null 時，視為刪除</li><li>優化 ClientChannel:heartbeatHandle 添加 isClosing 的判斷</li><li>優化 ClientChannel:heartbeatHandle 處理，增加內部會話關閉時，同步到外層</li><li>優化 ChannelDefault 內部的通道關閉改為延時 100ms 關，避免 sendClose 時通道壞掉</li><li>調整 BrokerListener 的能力方法，都改為公有</li><li>調整，心跳日誌級別改為 debug</li><li>smart-socket 升為 1.5.42</li></ul><h3>for JavaScript 更新</h3><ul><li>新增 BrokerListener 實現（node.js 可以開發 broker 服務了）</li><li>添加 Entity:delMeta 刪除元信息接口</li><li>添加，連接時 Handshake 元信息交互機制</li><li>添加 ClientConnectHandler 接口，提供連接時的攔截處理</li><li>優化 EntityDefault:metaPut 當 val=null 時，視為刪除</li><li>優化 ClientChannel:heartbeatHandle 添加 isClosing 的判斷</li><li>優化 ClientChannel:heartbeatHandle 處理，增加內部會話關閉時，同步到外層</li><li>優化 ChannelDefault 內部的通道關閉改為延時 100ms 關，避免 sendClose 時通道壞掉</li><li>優化 isClosedAndEnd 的判斷條件，去掉 CLOSE1000_PROTOCOL_CLOSE_STARTING</li></ul><h3>視頻演示效果：</h3><ul><li>for H5 
  <ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1ck4y197BV%2F" target="_blank">https://www.bilibili.com/video/BV1ck4y197BV/</a></li><li><a href="https://gitee.com/noear/socket.d/tree/main/javascript/socketd-examples/demo01-js-ws">演示源碼</a></li></ul></li><li>for UniAPP 
  <ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1T94y1T7sp%2F" target="_blank">https://www.bilibili.com/video/BV1T94y1T7sp/</a></li><li><a href="https://gitee.com/noear/socket.d/tree/main/javascript/socketd-examples/demo03-uniapp-ws">演示源碼</a></li></ul></li></ul><h3>代碼倉庫：</h3><ul><li><a href="https://gitee.com/noear/socketd">https://gitee.com/noear/socketd</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnoear%2Fsocketd" target="_blank">https://github.com/noear/socketd</a></li></ul><h3>官網：</h3><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsocketd.noear.org%2F" target="_blank">https://socketd.noear.org</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Fri, 08 Mar 2024 02:49:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/282093/socketd-2-4-6-released</guid>
            <link>https://www.oschina.net/news/282093/socketd-2-4-6-released</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[開源 OA 辦公系統 — 勾股 OA 4.97.38 發佈]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#40485b; margin-left:0em; margin-right:0em; text-align:start">勾股 OA 辦公系統是一款簡單實用的開源的企業辦公系統。系統集成了系統設置、附件管理、人事管理、行政管理、消息管理、企業公告、知識庫、審批流程設置、辦公審批、日常辦公、財務管理、客户管理、合同管理、項目管理、任務管理等功能模塊。系統簡約，易於功能擴展，方便二次開發，可以用來做日常 OA，CRM，ERP，業務管理等系統。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:start">勾股 OAv4.97.38 發佈啦，本次主要更新瞭如下功能：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:start">🔴更新日誌：</p><p style="color:#40485b; margin-left:0em; margin-right:0em; text-align:start">1、優化：項目任務完成度，當沒任務的時候調整為 0%；<br> 2、修復：修復不能越權刪除他人的知識文章；<br> 3、修復：項目刪除最後一條評論信息後不刷新問題修復；<br> 4、優化：新增員工姓名至少是兩個漢字判斷；<br> 5、優化：數據庫 text 類型字段統一修改為比較長的 mediumtext 類型；<br> 6、修復：修復客户詳情跟進記錄、聯，系 人、銷售機會新增和編輯時，列表不更新問題；<br> 7、優化：table2excel 導出 excel 插件，新增表格行高，新增表格背景色，新增表格居左中右排版；<br> 8、升級：layui 更新到 2.9.7 版本；<br> 9、修復：菜單展開模式下，右側頁面打開滾動展現不完整問題修復；<br> 10、優化：優化客户列表的搜索條件，修復：下屬客户中出現自己的客户信息的 bug；<br> 11、完善部分已知的問題或者細節調整。</p><h3>內置模塊</h3><ul><li>配置管理：對系統的常規配置信息進行維護，網站配置管理功能統一維護。</li><li>用户管理：維護管理系統的用户，常規信息的維護與賬號設置。</li><li>菜單管理：配置系統菜單，操作權限，按鈕權限標識等。</li><li>權限角色：角色菜單管理與權限分配、設置角色所擁有的菜單權限。</li><li>部門管理：管理系統組織架構，對組織架構進行統一管理維護。</li><li>崗位管理：管理用户擔任的崗位。</li><li>操作日誌：系統正常操作日誌記錄和查詢；系統異常信息日誌記錄和查詢。</li><li>基礎數據：對系統中常用的較為固定的數據進行統一維護管理。</li><li>消息通知：系統通知私信、消息等管理。</li><li>企業公告：企業公告信息發佈維護。</li><li><span style="background-color:#ffffff; color:#40485b">辦公審批：</span>支持人事、財務、行政、業務等多審批流程。</li><li><span style="background-color:#ffffff; color:#40485b">日常辦公：</span>日程、計劃、週報、日報等信息化辦公工具。</li><li><span style="background-color:#ffffff; color:#40485b">財務管理：</span>財務報銷、開票、到賬，財務數據規範化管理。</li><li><span style="background-color:#ffffff; color:#40485b">客户管理：</span>統一管理客户，沉澱客户資產，避免客户流失。</li><li><span style="background-color:#ffffff; color:#40485b">合同管理：</span>合同維護、審批、執行、變更、關閉全流程管理。</li><li><span style="background-color:#ffffff; color:#40485b">項目管理：</span>項目操作記錄全覆蓋跟蹤，項目進度一目瞭然，任務分派，工時記錄。</li><li><span style="background-color:#ffffff; color:#40485b">知，識 庫：公司制度，工作經驗、行業知識歸類管理。</span></li></ul><h3>軟件信息</h3><ul><li>軟件名稱：勾股 OA</li><li>開源地址：<a href="https://gitee.com/gouguopen/office">https://gitee.com/gouguopen/office</a></li><li>官網網址：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.gougucms.com%2Fhome%2Fpages%2Fdetail%2Fs%2Fgouguoa.html" target="_blank">https://www.gougucms.com/home/pages/detail/s/gouguoa.html</a></li><li>文檔網址：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.gougucms.com%2Fhome%2Fbook%2Fdetail%2Fbid%2F3.html" target="_blank">https://blog.gougucms.com/home/book/detail/bid/3.html</a></li></ul><h3>系統預覽</h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" height="688" src="https://oscimg.oschina.net/oscnet/up-114ac577175174bd2d0e57babceb6711d72.jpg" width="700" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 08 Mar 2024 02:48:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/282092/gougu-oa-4-97-38-released</guid>
            <link>https://www.oschina.net/news/282092/gougu-oa-4-97-38-released</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[IntelliJ IDEA 2024.1 Beta 發佈，解綁 AI 助手]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>IntelliJ IDEA 2024.1 Beta 版本現已<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.jetbrains.com%2Fidea%2F2024%2F03%2Fintellij-idea-2024-1-beta%2F" target="_blank">發佈</a>。最新版本集成了 IntelliJ IDEA 2024.1 早期訪問計劃期間引入的所有重要更新，以下是旨在增強開發工作流程各個方面的新功能的簡短回顧：</p><ul><li>支持 Java 22 功能</li><li>全行代碼自動補全</li><li>改進的終端工具窗口</li><li>條件語句覆蓋範圍</li><li>編輯器中的 Sticky lines</li><li>項目索引期間 IDE 功能的早期可用性</li><li>編輯器內代碼審查</li><li>豐富的 GitHub Actions 支持</li><li>改進了日誌的工作流程</li><li>多個語句的內聯斷點</li><li>Maven 項目的打開速度提升</li><li>支持 OpenRewrite</li><li>WireMock 服務器支持，等等</li></ul><p>與此同時，項目團隊正在進一步完善 v2024.1 中所包含的功能：</p><h4><span>Java</span></h4><p><strong>改進的「Detected Conflicts」對話框</strong></p><p>在 v2024.1 中改進了「Detected Conflicts」對話框，以改善用户體驗和可讀性。現在，代碼上下文反映了編輯器，使用户可以更清楚地瞭解 conflicts。優化了文本顯示，IDE 現在會自動保存窗口大小調整以供將來使用。還更新了按鈕及其行為以簡化重構工作流程。現在可以通過鍵盤完全訪問該對話框，這意味着用户可以使用快捷鍵和箭頭鍵進行無縫交互。</p><p><img height="282" src="https://oscimg.oschina.net/oscnet/up-fb3e830774429c43d2c93a5c1fd5b61456b.png" width="500" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px; text-align:start"><strong><span><span><span><span><span><span style="color:#19191c"><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span><span><span><span>重命名&nbsp;refactoring inlay hint</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></p><p style="margin-left:0px; margin-right:0px; text-align:start"><span><span><span><span><span><span style="color:#19191c"><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span><span><span><span>為了讓重命名過程更簡單、更直觀，項目團隊在已更改的代碼元素上添加了一個新的 inlay hint。要更新代碼庫中對新版本的所有引用，只需點擊提示並確認更改即可。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="margin-left:0px; margin-right:0px; text-align:start"><span><span><span><span><span><span style="color:#19191c"><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span><span><span><span><img alt="" height="200" src="https://oscimg.oschina.net/oscnet/up-4028277552a55f988d2beadf612b4715a3a.gif" width="500" referrerpolicy="no-referrer"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><h4 style="margin-left:0px; margin-right:0px; text-align:start">&nbsp;</h4><div style="text-align:start"><h4 style="margin-left:0px; margin-right:0px"><strong><span><span><span><span style="color:#19191c"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span><span><span><span><span><span><span style="color:#19191c"><span><span><span><span>Kotlin</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></h4><p style="margin-left:0px; margin-right:0px"><strong><span><span><span><span style="color:#19191c"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span><span><span><span><span><span><span style="color:#19191c"><span><span><span><span>在所有項目上傳播官方 Kotlin 代碼風格</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></p></div><p style="margin-left:0; margin-right:0; text-align:start"><span><span><span><span style="color:#19191c"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>從 2024.1 版本開始，除非另有明確指定，IDE 統一應用官方 Kotlin 樣式指南作為所有項目的默認選項。如果你的現有項目使用較舊的代碼風格而沒有顯式配置，IDE 將自動切換到 Kotlin 編碼約定代碼風格，並提供通知以提醒用户此更改。為了防止任何不需要的格式更改，官方建議用户熟悉此<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fkotlinlang.org%2Fdocs%2Fcode-style-migration-guide.html%23migration-to-a-new-code-style-discussion" target="_blank">代碼樣式遷移指南</a>。&nbsp;</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="margin-left:0; margin-right:0; text-align:start"><img height="200" src="https://oscimg.oschina.net/oscnet/up-9aeaee456e34a161f4cfce3aebd0fe591eb.png" width="500" referrerpolicy="no-referrer"></p><div style="text-align:start"><p style="margin-left:0px; margin-right:0px"><strong><span><span><span><span style="color:#19191c"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span><span><span><span><span><span><span style="color:#19191c"><span><span><span><span>複製粘貼時保留的&nbsp;Static imports</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></p></div><p style="margin-left:0; margin-right:0; text-align:start"><span><span><span><span style="color:#19191c"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>在版本 2024.1 中對複製和粘貼功能進行了一項期待已久的改進，在處理嵌套對象、枚舉和 Java static imports 時特別有價值。IDE 現在可以準確保留 static imports，確保它們的傳輸方式與源代碼中顯示的方式完全相同。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="margin-left:0; margin-right:0; text-align:start"><span><span><span><span style="color:#19191c"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span><img alt="" height="200" src="https://oscimg.oschina.net/oscnet/up-857afb8e728fb28d75776d69f08cb63fb1b.gif" width="500" referrerpolicy="no-referrer"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><h4 style="margin-left:0px; margin-right:0px; text-align:start"><strong>AI 助手</strong></h4><p style="margin-left:0; margin-right:0; text-align:start">從 IntelliJ IDEA 2024.1 Beta 版本開始，AI Assistant 已解綁，現在作為單獨的<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fplugins.jetbrains.com%2Fplugin%2F22282-ai-assistant" target="_blank">插件</a>提供。公告稱，「這一變化的原因是，我們需要為您的各種偏好和要求提供更大的靈活性和控制力，使您能夠選擇是否以及何時在工作環境中使用人工智能驅動的技術。」</p><p style="margin-left:0; margin-right:0; text-align:start"><strong>延伸閲讀：</strong><a href="https://www.oschina.net/news/277463/jetbrains-unremovable-ai-assistant" target="news">JetBrains 捆綁 AI 助手引起用户不滿</a></p><p style="margin-left:0; margin-right:0; text-align:start">更多詳情可<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.jetbrains.com%2Fidea%2F2024%2F03%2Fintellij-idea-2024-1-beta%2F" target="_blank">查看官方博客</a>。</p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 08 Mar 2024 02:43:02 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/282088/intellij-idea-2024-1-beta</guid>
            <link>https://www.oschina.net/news/282088/intellij-idea-2024-1-beta</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[go-carbon v2.3.10 發佈，輕量級、語義化、對開發者友好的 golang 時間處理庫]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">carbon 是一個輕量級、語義化、對開發者友好的 Golang 時間處理庫，支持鏈式調用、農曆和 gorm、xorm 等主流 orm。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">目前已被<span><span>&nbsp;</span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fyinggaozhen%2Fawesome-go-cn%23%25E6%2597%25A5%25E6%259C%259F%25E5%2592%258C%25E6%2597%25B6%25E9%2597%25B4" target="_blank">awesome-go-cn</a><span><span>&nbsp;</span></span>收錄，如果您覺得不錯，請給個 star 吧</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgolang-module%2Fcarbon" target="_blank">github.com/golang-module/carbon</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/golang-module/carbon" target="_blank">gitee.com/golang-module/carbon</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>更新日誌</strong></p><ol><li><span style="background-color:rgba(175, 184, 193, 0.2); color:#1f2328">json.Unmarshaler&nbsp;&nbsp;</span>增加對包含 <span style="background-color:rgba(175, 184, 193, 0.2); color:#1f2328">null</span> 值的 <span style="background-color:rgba(175, 184, 193, 0.2); color:#1f2328">json</span> 字符串的解碼支持</li><li>新增<span>&nbsp;</span><code>ISO8601ZuluLayout</code>,<code>ISO8601ZuluMilliLayout</code>,<code>ISO8601ZuluMicroLayout</code>,<code>ISO8601ZuluNanoLayout</code><span>&nbsp;常量</span></li><li>新增&nbsp;<code>FormattedDateLayout</code>,<code>FormattedDayDateLayout</code><span>&nbsp;</span>常量</li><li>新增&nbsp;<code>ISO8601ZuluFormat</code>,<code>ISO8601ZuluMilliFormat</code>,<code>ISO8601ZuluMicroFormat</code>,<code>ISO8601ZuluNanoFormat</code><span>&nbsp;</span>常量</li><li>新增<span>&nbsp;</span><code>FormattedDateFormat</code>,<code>FormattedDayDateFormat</code><span>&nbsp;</span>常量</li><li>新增<span>&nbsp;</span><code>ToIso8601ZuluString</code>,<code>ToIso8601ZuluMilliString</code>,<code>ToIso8601ZuluMicroString</code>,<code>ToIso8601ZuluNanoString</code><span>&nbsp;</span>方法</li><li>新增<span>&nbsp;</span><code>ToFormattedDateString</code>,<code>ToFormattedDayDateString</code><span>&nbsp;</span>方法</li><li>新增<span>&nbsp;</span><code>GoString</code><span>&nbsp;</span>方法</li><li>移除<code>ToFormatString</code><span>&nbsp;</span>方法, 用<span>&nbsp;</span><code>Format</code><span>&nbsp;</span>方法替代</li><li><p>移除<code>ToLayoutString</code><span>&nbsp;</span>方法, 用<span>&nbsp;</span><code>Layout</code><span>&nbsp;</span>方法替代</p></li></ol></div>
                                    ]]>
            </description>
            <pubDate>Fri, 08 Mar 2024 02:43:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/282089/go-carbon-2-3-10-released</guid>
            <link>https://www.oschina.net/news/282089/go-carbon-2-3-10-released</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[🔥 突破 700 萬/秒，這個 MQTT 有點快]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h2><span style="background-color:#e7642b; color:white">1、smart-mqtt 簡介</span></h2><p style="color:black; margin-left:0; margin-right:0; text-align:left"><strong>smart-mqtt，是 smartboot 組織下面向物聯網的首款解決方案，它使用 Java 語言開發，提供高效、可靠的 MQTT Broker 服務。</strong></p><p style="color:black; margin-left:0; margin-right:0; text-align:left">smart-mqtt 的獨特優勢在於大量設備接入的情況下，仍能保持低延遲和高吞吐量，滿足物聯網領域嚴苛的實時性需求。同時，smart-mqtt 為了最大限度地節省硬件成本，採用了高度優化的資源管理策略，降低了系統運行時的 CPU 和內存佔用，使企業在保持高性能的同時，大幅降低運維成本。</p><p style="color:black; margin-left:0; margin-right:0; text-align:left"><strong>另外，mqtt 協議天然適合 IM 場景，需要打造企業級 IM 應用，smart-mqtt 同樣是一個非常好的選擇。</strong></p><p style="color:black; margin-left:0; margin-right:0; text-align:left"><img src="https://smartboot.tech/assets/img/framework.87b57b29.svg" referrerpolicy="no-referrer"></p><blockquote><p style="color:#424b5d; margin-left:0; margin-right:0">smartboot 開源組織，一個容易被誤認為是在 「重複造輪子」 的低調組織。曾獲得<span>&nbsp;</span><strong>2020 年度 OSC 中國開源項目「優秀 Gitee 組織 」</strong>榮譽。</p><p style="color:#424b5d; margin-left:0; margin-right:0">該組織內的明星項目包括：</p><ul><li><p style="margin-left:0; margin-right:0">smart-socket<br> 歷時 5 年精煉出 2 千多行代碼，輕鬆實現百萬級長連接的 AIO 通信框架。</p></li><li><p style="margin-left:0; margin-right:0">smart-http<br> 基於 smart-socket 實現的 HTTP/1.1 web 服務。</p></li><li><p style="margin-left:0; margin-right:0">smart-servlet<br> 基於 smart-http 實現的 Servlet 4.0 容器服務。</p></li><li><p style="margin-left:0; margin-right:0">smart-mqtt<br> 基於 smart-socket 實現的 MQTT 3.1.1/5.0 Broker&amp;Client 服務。</p></li><li><p style="margin-left:0; margin-right:0">smart-flow<br> 一款具備可觀測性的輕量級業務編排框架。</p></li></ul><p style="color:#424b5d; margin-left:0; margin-right:0">組織地址：<span>?</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsmartboot.tech%2F" target="_blank">https://smartboot.tech/</a><br> 代碼倉庫：<span>?</span><a href="https://gitee.com/smartboot">https://gitee.com/smartboot</a></p></blockquote><h3>快速啓動</h3><pre><code class="language-bash"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1">docker</span></span></span><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62">run --name smart-mqtt \
  -p 18083:18083 \
  -p 1883:1883  \
  -d smartboot/smart-mqtt:latest</span></span></span></code></pre><ul><li><p style="margin-left:0; margin-right:0">18083：Web 管理後台服務端口</p></li><li><p style="margin-left:0; margin-right:0">1883：mqtt 端口</p><p style="margin-left:0; margin-right:0"><img height="619" src="https://oscimg.oschina.net/oscnet/up-848a14fa3a1b6e76dfc3831d3d4316bc4bb.png" width="1080" referrerpolicy="no-referrer"></p></li></ul><h2><span style="background-color:#e7642b; color:white">2、 版本更新</span></h2><p style="color:black; margin-left:0; margin-right:0; text-align:left"><strong>在功能方面</strong>，smart-mqtt 的最新版本引入了<strong>共享訂閲</strong>的新特性。該特性的主要優勢在於它提供了訂閲端的負載均衡功能，以一種更靈活、可擴展的消息分發機制，改善大規模消息系統中的性能問題。</p><p style="color:black; margin-left:0; margin-right:0; text-align:left">在傳統的 MQTT 訂閲模式中，每個訂閲了特定主題的客户端都會收到該主題下所有發佈的消息，這可能導致消費能力較弱的客户端無法及時處理大量消息，從而成為系統的性能瓶頸。<strong>共享訂閲通過允許一個主題的消息被多個訂閲者共同消費，可以有效地分散這種壓力，提高系統的整體效率和可靠性。</strong></p><p style="color:black; margin-left:0; margin-right:0; text-align:left">雖然共享訂閲是 MQTT 5.0 規範的一部分，但 smart-mqtt 將此特性適配至低版本的 MQTT 協議，所以 MQTT 3.1/3.1.1 的客户端也能從中受益。</p><hr><p style="color:black; margin-left:0; margin-right:0; text-align:left"><strong>而在性能方面</strong>，smart-mqtt 再一次突破算力極限，TPS 峯值達到<span>&nbsp;</span><strong>738W/s</strong>。這樣的表現，背後所依託的是與 smart-http 中相同原理的黑科技算法：字節樹。</p><p><img height="476" src="https://oscimg.oschina.net/oscnet/up-4ff105977cb7ce3e4f68fbcc8368c974982.png" width="1080" referrerpolicy="no-referrer"></p><hr><p style="color:black; margin-left:0; margin-right:0; text-align:left"><strong>至於穩定性</strong>，有一組數據足以體現。smart-mqtt 於 2024-02-01 啓動了一個 15000 個客户端的壓測任務。然後，這個壓測任務就被遺忘了，服務器足足被持續壓了一個多月。最終連接狀態、吞吐量、CPU、內存皆表現穩定。</p><p><img height="433" src="https://oscimg.oschina.net/oscnet/up-c82cea71362211b545f48b9b46cc80e2ef5.png" width="1080" referrerpolicy="no-referrer"></p><p style="color:black; margin-left:0; margin-right:0; text-align:left"><strong>本次更新內容</strong>：</p><ol><li><p>降低控制枱指標監控打印頻次。</p></li><li><p>新增共享訂閲特性。</p></li><li><p>調整 Topic 編解碼算法。</p></li></ol><h2><span style="background-color:#e7642b; color:white">3、性能測試報告</span></h2><ul><li><p style="margin-left:0; margin-right:0">場景一：<br> 10 個 publisher 每隔 1 毫秒發送 payload 為 128 字節的消息，這些消息分佈在 128 種 topic 下，有 2000 個 subscriber 訂閲這些 topic 的消息。</p></li></ul><table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:1px; border:none; box-sizing:border-box !important; color:#000000; display:table; font-family:Optima-Regular,Optima,PingFangSC-light,PingFangTC-light,&quot;PingFang SC&quot;,Cambria,Cochin,Georgia,Times,&quot;Times New Roman&quot;,serif; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; line-height:inherit; margin:0px 0px 10px; max-width:100%; orphans:2; outline:0px; overflow-wrap:break-word !important; overflow:auto; padding:0px; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:657px; word-break:keep-all; word-spacing:0px"><tbody><tr><th style="text-align:left">&nbsp;</th><th style="text-align:left"><strong>v0.34</strong></th><th style="text-align:left"><strong>v0.35</strong></th><th style="text-align:left">v0.36</th></tr></tbody><tbody><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">QoS0</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">600W/s</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">670W/s</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left"><span style="background-color:#ffffff; color:#000000">738W/s</span></td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">QoS1</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">280W/s</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">320W/s</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left"><span style="background-color:#f8f8f8; color:#000000">310W/s</span></td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">QoS2</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">150w/s</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">180W/s</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left"><span style="background-color:#ffffff; color:#000000">185W/s</span></td></tr></tbody></table><ul><li><p style="margin-left:0; margin-right:0">場景二：</p></li></ul><p style="color:black; margin-left:0; margin-right:0; text-align:left">2000 個 publisher 每隔 1 毫秒發送 10 個 payload 為 128 字節的消息，這些消息分佈在 128 種 topic 下。</p><table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:1px; border:none; box-sizing:border-box !important; color:#000000; display:table; font-family:Optima-Regular,Optima,PingFangSC-light,PingFangTC-light,&quot;PingFang SC&quot;,Cambria,Cochin,Georgia,Times,&quot;Times New Roman&quot;,serif; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; line-height:inherit; margin:0px 0px 10px; max-width:100%; orphans:2; outline:0px; overflow-wrap:break-word !important; overflow:auto; padding:0px; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:657px; word-break:keep-all; word-spacing:0px"><tbody><tr><th style="text-align:left">&nbsp;</th><th style="text-align:left">smart-mqtt 企業版</th></tr></tbody><tbody><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">QoS0</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">97W/s</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">QoS1</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">63W/s</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">QoS2</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">53W/s</td></tr></tbody></table><h2><span style="background-color:#e7642b; color:white">4、如何獲取 smart-mqtt</span></h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>源碼</strong></p><ul><li><p style="margin-left:0; margin-right:0">主倉庫：<a href="https://gitee.com/smartboot/smart-mqtt">https://gitee.com/smartboot/smart-mqtt</a></p></li><li><p style="margin-left:0; margin-right:0">鏡像同步：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsmartboot%2Fsmart-mqtt" target="_blank">https://github.com/smartboot/smart-mqtt</a></p></li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>產品手冊</strong>：<a href="https://smartboot.gitee.io/smart-mqtt/enterprise.html">https://smartboot.gitee.io/smart-mqtt/enterprise.html</a></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 08 Mar 2024 01:49:03 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/282075</guid>
            <link>https://www.oschina.net/news/282075</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[【店滴雲】1.4.8 發佈，優化微信生態能力接入，擴展微信第三方平台]]>
            </title>
            <description>
                <![CDATA[<div class="content"><ul><li>公眾號與小程序初始化兼容 admin 接口</li><li>增加對微信第三方平台的全局擴展 <p><img height="919" src="https://oscimg.oschina.net/oscnet/up-dbbbc2697244f09f476a3dfc5d60c7fb91c.png" width="1920" referrerpolicy="no-referrer"></p></li></ul><p><img height="919" src="https://oscimg.oschina.net/oscnet/up-1a949a464e48a651986b2f8bfcb950d9a32.png" width="1920" referrerpolicy="no-referrer"></p><p>&nbsp;</p><p><img height="919" src="https://oscimg.oschina.net/oscnet/up-9c8fd9da392903f828fecfe54e5e426527d.png" width="1920" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 08 Mar 2024 00:25:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/282070</guid>
            <link>https://www.oschina.net/news/282070</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[DDIOT 1.4.8 已經發布，圍繞經營性場所進行物聯網改造]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>DDIOT 1.4.8 已經發布，圍繞經營性場所進行物聯網改造</p><p>此版本更新內容包括：</p><h2>更新內容</h2><ul><li>公眾號與小程序初始化兼容 admin 接口</li></ul><p><strong>完整的更新日誌</strong>: <a href="https://gitee.com/wayfirer/ddiot/compare/1.4.7...1.4.8" target="_blank">https://gitee.com/wayfirer/ddiot/compare/1.4.7...1.4.8</a></p><p>詳情查看：<a href="https://gitee.com/wayfirer/ddiot/releases/1.4.8">https://gitee.com/wayfirer/ddiot/releases/1.4.8</a></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 08 Mar 2024 00:21:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/282069/ddiot-1-4-8-released</guid>
            <link>https://www.oschina.net/news/282069/ddiot-1-4-8-released</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[凹語言 v0.9.2 發佈, 完善 p5 支持]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div><div><span style="color:#000000">凹語言是國內 Gopher 發起的純社區構建的開源國產編程語言項目（沒有公司背景、沒有任何贊助）。同時凹語言也是國內第一個實現純瀏覽器內編譯、執行全鏈路的自研靜態類型的編譯型通用編程語言。</span>凹語言 v0.9.2 發佈, 完善 p5 支持：
 </div></div><ul><li>完善<span>&nbsp;</span><code>js/p5</code><span>&nbsp;</span>包, 增加鍵盤事件處理, 改用凹語言原生繪圖</li><li><code>wa init</code><span>&nbsp;</span>增加<span>&nbsp;</span><code>-p5</code><span>&nbsp;</span>參數</li></ul><p>更多信息請訪問凹語言官網：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwa-lang.org%2F" target="_blank">https://wa-lang.org/</a></p><p><img height="1800" src="https://oscimg.oschina.net/oscnet/up-ac34bd5dfae5cc210de9f6110efa46a37c3.png" width="2880" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 07 Mar 2024 13:39:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/282043</guid>
            <link>https://www.oschina.net/news/282043</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[野火 IM 1.2.3 已經發布，即時通訊系統]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>野火 IM 1.2.3 已經發布，即時通訊系統</p><p>此版本更新內容包括：</p><p>Release note 1.2.3:</p><ol><li>同步專業版 IM 服務 server SDK。</li><li>添加對鴻蒙平台的支持。</li><li>解決 server 端音視頻 SDK 信令支持問題。</li><li>升級部分依賴，解決漏洞問題</li></ol><blockquote><p>附件的版本有 3 種格式，分別是 Java 通用版本、Deb 格式安裝包和 Rpm 格式安裝包包，可以根據平台或者自己的習慣下載其中一種軟件包。另外在<a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fwildfirechat%2Fim-server%2Freleases" target="_blank">Github</a>也可以下載。也可以下載我們網站上的最新版本，<a href="https://gitee.com/link?target=http%3A%2F%2Fstatic.wildfirechat.cn%2Fdistribution-latest-bundle-tar.tar.gz" target="_blank">通用 Java 包</a>，<a href="https://gitee.com/link?target=http%3A%2F%2Fstatic.wildfirechat.cn%2Fim-server-latest.deb" target="_blank">deb 格式安裝包</a>和<a href="https://gitee.com/link?target=http%3A%2F%2Fstatic.wildfirechat.cn%2Fim-server-latest.rpm" target="_blank">rpm 格式安裝包</a>。 *** 0.42 版本增加了羣成員數限制，默認為 2000。如果您想修改默認值，可以在升級版本之後，修改 t_setting 表，把默認的大小改為您期望的。另外修改 t_group 表，把已經存在的羣組 max_member_count 改成您期望的，然後重啓。*** *** 0.46 和 0.47 版本升級到 0.48 及以後版本時，可能會提示 flyway migrate 38 錯誤，請執行 <a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fwildfirechat%2Fserver%2Fblob%2Fwildfirechat%2Fflyway_repaire_migrate_38.sql" target="_blank">修復腳本</a> 進行修復。0.46 和 0.47 版本之外的版本不會出現此問題。*** *** 0.50 版本添加了是否允許客户端發送羣操作通知的配置。如果您在客户端自定義羣通知，需要在服務器端配置允許，沒有使用自定義羣操作通知的不受影響。*** *** 從 0.54 之前版本升級到 0.54 及以後版本時，會提示 flyway migrate 錯誤。因為 0.54 版本刪除了 sql 腳本中默認敏感詞的內容，flyway checksum 失敗。請執行<code>update flyway_schema_history set checksum = 0 where script = 'V17__add_default_sensitive_word.sql';</code>來修復。*** *** 從 0.59 之前的版本升級到之後的版本執行數據庫升級時間比較長，請耐心等待提示運行成功，避免中途中斷。 *** *** 0.62/0.63 版本有嚴重的問題，請使用 0.64 及以後版本，或者 0.61 版。 *** *** 從 0.68 版本起添加了 pc 在線是否默認手機接收推送的開關，默認為開，與以前版本作用相反，請注意兼容（可以關掉與之前保持一致或者升級客户端） *** *** 從 0.78 版本起把 MySQL 數據庫中關鍵字都改為大小寫敏感，另外生成 id 的方法也做了改變，只生成小寫的 id，避免出現 id 重複的問題，建議所有客户都升級 *** *** 從 0.79 版本起把 log4j 升級到 log4j2，因為 log4j 已經不再維護而且還有已知的漏洞，建議所有客户都升級，升級時注意更新 log4j2 的配置文件 *** *** 0.97 版本更改了啓動腳本<code>wildfirechat.sh</code>，如果是升級服務，請注意更新啓動腳本。***</p></blockquote><h1>歷史更新記錄</h1><p>請參考附件的 release_note.md</p><p>詳情查看：<a href="https://gitee.com/wfchat/im-server/releases/1.2.3">https://gitee.com/wfchat/im-server/releases/1.2.3</a></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 07 Mar 2024 08:39:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/281997/wildfirechat-1-2-3-released</guid>
            <link>https://www.oschina.net/news/281997/wildfirechat-1-2-3-released</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[一個使用 Java 開發的 LLM 應用開發框架，Agents-Flex alpha.2 發佈]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="text-align:center"><img height="235" src="https://oscimg.oschina.net/oscnet/up-28f28677527d13113c29a56916625bb1b3d.png" width="300" referrerpolicy="no-referrer"></p><h1>Agents-Flex： 一個使用 Java 開發的 LLM（大語言模型） 應用開發框架</h1><h2>基本能力</h2><ul><li>LLM 的訪問能力</li><li>Prompt、Prompt Template 定義加載的能力</li><li>Function Calling 定義、調用和執行等能力</li><li>記憶的能力（Memory）</li><li>Embedding</li><li>Vector Storage</li><li>文檔處理 
  <ul><li>加載器（Loader） 
    <ul><li>Http</li><li>FileSystem</li></ul></li><li>分割器（Splitter）</li><li>解析器（Parser） 
    <ul><li>PoiParser</li><li>PdfBoxParser</li></ul></li></ul></li><li>LLM Chain</li><li>Agents Chain</li></ul><h2>功能列表</h2><p><img src="https://oscimg.oschina.net/oscnet/up-5335d770976c07c928c526ed75372a2d6b8.png" referrerpolicy="no-referrer"></p><h2>簡單對話示例</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">使用 OpenAi 大語言模型:</p><div><div><pre><span><strong><span><span style="color:#d73a49">public</span></span></strong><span></span><strong><span><span style="color:#d73a49">static</span></span></strong><span></span><strong><span><span style="color:#d73a49">void</span></span></strong><span></span><strong><span><span style="color:#6f42c1">main</span></span></strong><span><span><span>(</span></span></span><strong><span><span>String</span></span></strong><span><span><span>[]</span></span></span><span><span></span></span><span><span><span>args</span></span></span><span><span><span>)</span></span></span><span></span><strong><span><span style="color:#d73a49">throws</span></span></strong><span></span><strong><span>InterruptedException</span></strong><span></span><span>{</span></span><span><strong>OpenAiConfig</strong><span>config</span><span>=</span><strong><span style="color:#d73a49">new</span></strong><strong>OpenAiConfig</strong><span>();</span></span><span><span>config</span><span>.</span><span style="color:#008080">setApiKey</span><span>(</span><span style="color:#dd2200"><span style="color:#032f62">"sk-rts5NF6n*******"</span></span><span>);</span></span><span><strong>Llm</strong><span>llm</span><span>=</span><strong><span style="color:#d73a49">new</span></strong><strong>OpenAiLlm</strong><span>(</span><span>config</span><span>);</span></span><span><strong>Prompt</strong><span>prompt</span><span>=</span><strong><span style="color:#d73a49">new</span></strong><strong>SimplePrompt</strong><span>(</span><span style="color:#dd2200"><span style="color:#032f62">"請寫一個關於小兔子戰勝大灰狼的故事。"</span></span><span>);</span></span><span><span>llm</span><span>.</span><span style="color:#008080">chat</span><span>(</span><span>prompt</span><span>,</span><span>(</span><span>llmInstance</span><span>,</span><span>message</span><span>)</span><span>-&gt;</span><span>{</span></span><span><strong>System</strong><span>.</span><span style="color:#008080">out</span><span>.</span><span style="color:#008080">println</span><span>(</span><span style="color:#dd2200"><span style="color:#032f62">"---&gt;"</span></span><span>+</span><span>message</span><span>.</span><span style="color:#008080">getContent</span><span>());</span></span><span><span>});</span></span><span><strong>Thread</strong><span>.</span><span style="color:#008080">sleep</span><span>(</span><span style="color:#009999"><span>10000</span></span><span>);</span></span><span><span>}</span></span></pre><div>
   &nbsp;
  </div></div></div><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">使用 「通義千問」 大語言模型:</p><div><div><pre><span><strong><span><span style="color:#d73a49">public</span></span></strong><span></span><strong><span><span style="color:#d73a49">static</span></span></strong><span></span><strong><span><span style="color:#d73a49">void</span></span></strong><span></span><strong><span><span style="color:#6f42c1">main</span></span></strong><span><span><span>(</span></span></span><strong><span><span>String</span></span></strong><span><span><span>[]</span></span></span><span><span></span></span><span><span><span>args</span></span></span><span><span><span>)</span></span></span><span></span><strong><span><span style="color:#d73a49">throws</span></span></strong><span></span><strong><span>InterruptedException</span></strong><span></span><span>{</span></span><span><strong>QwenLlmConfig</strong><span>config</span><span>=</span><strong><span style="color:#d73a49">new</span></strong><strong>QwenLlmConfig</strong><span>();</span></span><span><span>config</span><span>.</span><span style="color:#008080">setApiKey</span><span>(</span><span style="color:#dd2200"><span style="color:#032f62">"sk-28a6be3236****"</span></span><span>);</span></span><span><span>config</span><span>.</span><span style="color:#008080">setModel</span><span>(</span><span style="color:#dd2200"><span style="color:#032f62">"qwen-turbo"</span></span><span>);</span></span><span><strong>Llm</strong><span>llm</span><span>=</span><strong><span style="color:#d73a49">new</span></strong><strong>QwenLlm</strong><span>(</span><span>config</span><span>);</span></span><span><strong>Prompt</strong><span>prompt</span><span>=</span><strong><span style="color:#d73a49">new</span></strong><strong>SimplePrompt</strong><span>(</span><span style="color:#dd2200"><span style="color:#032f62">"請寫一個關於小兔子戰勝大灰狼的故事。"</span></span><span>);</span></span><span><span>llm</span><span>.</span><span style="color:#008080">chat</span><span>(</span><span>prompt</span><span>,</span><span>(</span><span>llmInstance</span><span>,</span><span>message</span><span>)</span><span>-&gt;</span><span>{</span></span><span><strong>System</strong><span>.</span><span style="color:#008080">out</span><span>.</span><span style="color:#008080">println</span><span>(</span><span style="color:#dd2200"><span style="color:#032f62">"---&gt;"</span></span><span>+</span><span>message</span><span>.</span><span style="color:#008080">getContent</span><span>());</span></span><span><span>});</span></span><span><strong>Thread</strong><span>.</span><span style="color:#008080">sleep</span><span>(</span><span style="color:#009999"><span>10000</span></span><span>);</span></span><span><span>}</span></span></pre><div>
   &nbsp;
  </div></div></div><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">使用 「訊飛星火」 大語言模型:</p><div><div><pre><span><strong><span><span style="color:#d73a49">public</span></span></strong><span></span><strong><span><span style="color:#d73a49">static</span></span></strong><span></span><strong><span><span style="color:#d73a49">void</span></span></strong><span></span><strong><span><span style="color:#6f42c1">main</span></span></strong><span><span><span>(</span></span></span><strong><span><span>String</span></span></strong><span><span><span>[]</span></span></span><span><span></span></span><span><span><span>args</span></span></span><span><span><span>)</span></span></span><span></span><strong><span><span style="color:#d73a49">throws</span></span></strong><span></span><strong><span>InterruptedException</span></strong><span></span><span>{</span></span><span><strong>SparkLlmConfig</strong><span>config</span><span>=</span><strong><span style="color:#d73a49">new</span></strong><strong>SparkLlmConfig</strong><span>();</span></span><span><span>config</span><span>.</span><span style="color:#008080">setAppId</span><span>(</span><span style="color:#dd2200"><span style="color:#032f62">"****"</span></span><span>);</span></span><span><span>config</span><span>.</span><span style="color:#008080">setApiKey</span><span>(</span><span style="color:#dd2200"><span style="color:#032f62">"****"</span></span><span>);</span></span><span><span>config</span><span>.</span><span style="color:#008080">setApiSecret</span><span>(</span><span style="color:#dd2200"><span style="color:#032f62">"****"</span></span><span>);</span></span><span><strong>Llm</strong><span>llm</span><span>=</span><strong><span style="color:#d73a49">new</span></strong><strong>SparkLlm</strong><span>(</span><span>config</span><span>);</span></span><span><strong>Prompt</strong><span>prompt</span><span>=</span><strong><span style="color:#d73a49">new</span></strong><strong>SimplePrompt</strong><span>(</span><span style="color:#dd2200"><span style="color:#032f62">"請寫一個關於小兔子戰勝大灰狼的故事。"</span></span><span>);</span></span><span><span>llm</span><span>.</span><span style="color:#008080">chat</span><span>(</span><span>prompt</span><span>,</span><span>(</span><span>llmInstance</span><span>,</span><span>message</span><span>)</span><span>-&gt;</span><span>{</span></span><span><strong>System</strong><span>.</span><span style="color:#008080">out</span><span>.</span><span style="color:#008080">println</span><span>(</span><span style="color:#dd2200"><span style="color:#032f62">"---&gt;"</span></span><span>+</span><span>message</span><span>.</span><span style="color:#008080">getContent</span><span>());</span></span><span><span>});</span></span><span><strong>Thread</strong><span>.</span><span style="color:#008080">sleep</span><span>(</span><span style="color:#009999"><span>10000</span></span><span>);</span></span><span><span>}</span></span></pre><div>
   &nbsp;
  </div></div></div><h2>歷史對話示例</h2><div><div><pre><span><strong><span><span style="color:#d73a49">public</span></span></strong><span></span><strong><span><span style="color:#d73a49">static</span></span></strong><span></span><strong><span><span style="color:#d73a49">void</span></span></strong><span></span><strong><span><span style="color:#6f42c1">main</span></span></strong><span><span>(</span></span><strong><span><span>String</span></span></strong><span><span><span>[]</span></span></span><span><span></span></span><span><span><span>args</span></span></span><span><span>)</span></span><span></span><strong><span>throws</span></strong><span></span><strong><span>InterruptedException</span></strong><span>{</span></span><span><strong>SparkLlmConfig</strong><span>config</span><span>=</span><strong><span style="color:#d73a49">new</span></strong><strong>SparkLlmConfig</strong><span>();</span></span><span><span>config</span><span>.</span><span style="color:#008080">setAppId</span><span>(</span><span style="color:#dd2200"><span style="color:#032f62">"****"</span></span><span>);</span></span><span><span>config</span><span>.</span><span style="color:#008080">setApiKey</span><span>(</span><span style="color:#dd2200"><span style="color:#032f62">"****"</span></span><span>);</span></span><span><span>config</span><span>.</span><span style="color:#008080">setApiSecret</span><span>(</span><span style="color:#dd2200"><span style="color:#032f62">"****"</span></span><span>);</span></span><span><span style="color:#888888"><span style="color:#6a737d">// 創建一個大模型</span></span></span><span><strong>Llm</strong><span>llm</span><span>=</span><strong><span style="color:#d73a49">new</span></strong><strong>SparkLlm</strong><span>(</span><span>config</span><span>);</span></span><span><span style="color:#888888"><span style="color:#6a737d">//創建一個歷史對話的 prompt</span></span></span><span><strong>HistoriesPrompt</strong><span>prompt</span><span>=</span><strong><span style="color:#d73a49">new</span></strong><strong>HistoriesPrompt</strong><span>();</span></span><span><strong>System</strong><span>.</span><span style="color:#008080"><span style="color:#d73a49">out</span></span><span>.</span><span style="color:#008080">println</span><span>(</span><span style="color:#dd2200"><span style="color:#032f62">"您想問什麼？"</span></span><span>);</span></span><span><strong>Scanner</strong><span>scanner</span><span>=</span><strong><span style="color:#d73a49">new</span></strong><strong>Scanner</strong><span>(</span><strong>System</strong><span>.</span><span style="color:#008080"><span style="color:#d73a49">in</span></span><span>);</span></span><span><span style="color:#888888"><span style="color:#6a737d">//等待用户從控制枱輸入問題</span></span></span><span><strong>String</strong><span>userInput</span><span>=</span><span>scanner</span><span>.</span><span style="color:#008080">nextLine</span><span>();</span></span><span><strong><span style="color:#d73a49">while</span></strong><span>(</span><span>userInput</span><span>!=</span><strong><span style="color:#005cc5">null</span></strong><span>){</span></span><span><span>prompt</span><span>.</span><span style="color:#008080">addMessage</span><span>(</span><strong><span style="color:#d73a49">new</span></strong><strong>HumanMessage</strong><span>(</span><span>userInput</span><span>));</span></span><span><span style="color:#888888"><span style="color:#6a737d">//向大模型提問</span></span></span><span><span>llm</span><span>.</span><span style="color:#008080">chat</span><span>(</span><span>prompt</span><span>,</span><span>(</span><span>instance</span><span>,</span><span>message</span><span>)</span><span>-&gt;</span><span>{</span></span><span><strong>System</strong><span>.</span><span style="color:#008080"><span style="color:#d73a49">out</span></span><span>.</span><span style="color:#008080">println</span><span>(</span><span style="color:#dd2200"><span style="color:#032f62">"&gt;&gt;&gt;&gt; "</span></span><span>+</span><span>message</span><span>.</span><span style="color:#008080">getContent</span><span>());</span></span><span><span>});</span></span><span><span style="color:#888888"><span style="color:#6a737d">//繼續等待用户從控制枱輸入內容</span></span></span><span><span>userInput</span><span>=</span><span>scanner</span><span>.</span><span style="color:#008080">nextLine</span><span>();</span></span><span><span>}</span></span><span><span>}</span></span></pre><div>
   &nbsp;
  </div></div></div><h2>Function Calling&nbsp;示例</h2><ul><li>第一步：通過註解定義本地方法</li></ul><div><div><pre><span><strong><span style="color:#d73a49">public</span></strong><strong><span><span style="color:#d73a49">class</span></span></strong><span></span><strong><span><span style="color:#6f42c1">WeatherUtil</span></span></strong><span></span><span>{</span></span><span><span><span style="color:#6a737d">@FunctionDef</span></span><span><span style="color:#6a737d">(</span></span><span><span style="color:#6a737d">name</span></span><span style="color:#6a737d"></span><span><span style="color:#6a737d">=</span></span><span style="color:#6a737d"></span><span style="color:#dd2200"><span style="color:#6a737d"><span>"get_the_weather_info"</span></span></span><span><span style="color:#6a737d">,</span></span><span style="color:#6a737d"></span><span><span style="color:#6a737d">description</span></span><span style="color:#6a737d"></span><span><span style="color:#6a737d">=</span></span><span style="color:#6a737d"></span><span style="color:#dd2200"><span style="color:#6a737d"><span>"get the weather info"</span></span></span><span><span style="color:#6a737d">)</span></span></span><span><strong><span style="color:#d73a49">public</span></strong><strong>static</strong><strong>String</strong><strong>getWeatherInfo</strong><span>(</span></span><span><span><span style="color:#6a737d">@FunctionParam</span></span><span><span style="color:#6a737d">(</span></span><span><span style="color:#6a737d">name</span></span><span style="color:#6a737d"></span><span><span style="color:#6a737d">=</span></span><span style="color:#6a737d"></span><span style="color:#dd2200"><span style="color:#6a737d"><span>"city"</span></span></span><span><span style="color:#6a737d">,</span></span><span style="color:#6a737d"></span><span><span style="color:#6a737d">description</span></span><span style="color:#6a737d"></span><span><span style="color:#6a737d">=</span></span><span style="color:#6a737d"></span><span style="color:#dd2200"><span style="color:#6a737d"><span>"the city name"</span></span></span><span><span style="color:#6a737d">)</span></span><strong>String</strong><span>name</span></span><span><span>)</span><span>{
&nbsp;       <span style="color:#6a737d">//這裏應該是通過接口去調用獲得天氣信息</span></span></span><span><strong><span style="color:#d73a49">return</span></strong><span>name</span><span>+</span><span style="color:#dd2200"><span style="color:#032f62">"的天氣是陰轉多雲。 "</span></span><span>;</span></span><span><span>}</span></span><span><span>}</span></span></pre><div>
   &nbsp;
  </div></div></div><ul><li>第二步：通過 Prompt、Functions 傳入給大模型，然後得到結果</li></ul><div><div><pre><span><strong><span><span style="color:#d73a49">public</span></span></strong><span></span><strong><span><span style="color:#d73a49">static</span></span></strong><span></span><strong><span><span style="color:#d73a49">void</span></span></strong><span></span><strong><span><span style="color:#6f42c1">main</span></span></strong><span><span><span>(</span></span></span><strong><span><span>String</span></span></strong><span><span><span>[]</span></span></span><span><span></span></span><span><span><span>args</span></span></span><span><span><span>)</span></span></span><span></span><strong><span><span style="color:#d73a49">throws</span></span></strong><span></span><strong><span>InterruptedException</span></strong><span></span><span>{</span></span><span><strong>OpenAiLlmConfig</strong><span>config</span><span>=</span><strong><span style="color:#d73a49">new</span></strong><strong>OpenAiLlmConfig</strong><span>();</span></span><span><span>config</span><span>.</span><span style="color:#008080">setApiKey</span><span>(</span><span style="color:#dd2200"><span style="color:#032f62">"sk-rts5NF6n*******"</span></span><span>);</span></span><span><strong>OpenAiLlm</strong><span>llm</span><span>=</span><strong><span style="color:#d73a49">new</span></strong><strong>OpenAiLlm</strong><span>(</span><span>config</span><span>);</span></span><span><strong>Functions</strong><span>&lt;</span><strong>String</strong><span>&gt;</span><span>functions</span><span>=</span><strong>Functions</strong><span>.</span><span style="color:#008080">from</span><span>(</span><strong>WeatherUtil</strong><span><span>.</span></span><span style="color:#008080"><span><span style="color:#d73a49">class</span></span></span><span><span>,</span></span><span></span><strong><span><span style="color:#6f42c1">String</span></span></strong><span><span>.</span></span><span style="color:#008080"><span><span style="color:#6f42c1">class</span></span></span><span><span>)</span>;</span></span><span><strong>String</strong><span>result</span><span>=</span><span>llm</span><span>.</span><span style="color:#008080">call</span><span>(</span><strong><span style="color:#d73a49">new</span></strong><strong>SimplePrompt</strong><span>(</span><span style="color:#dd2200"><span style="color:#032f62">"今天的天氣如何"</span></span><span>),</span><span>functions</span><span>);</span></span><span><strong>System</strong><span>.</span><span style="color:#008080">out</span><span>.</span><span style="color:#008080">println</span><span>(</span><span>result</span><span>);</span></span><span><span style="color:#888888"><span style="color:#6a737d">// "北京的天氣是陰轉多雲。 ";</span></span></span><span><strong>Thread</strong><span>.</span><span style="color:#008080">sleep</span><span>(</span><span style="color:#009999"><span>10000</span></span><span>);</span></span><span><span>}</span></span></pre></div></div><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">&nbsp;</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">注意：當前版本為 v1.0.0-alpha.2 ，還在開發中，請暫時勿使用於正式的商業產品中。</p><h2>開源地址​：</h2><ul><li>Gitee:&nbsp;<a href="https://gitee.com/agents-flex/agents-flex">https://gitee.com/agents-flex/agents-flex</a></li><li>Github:&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fagents-flex%2Fagents-flex" target="_blank">https://github.com/agents-flex/agents-flex</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Thu, 07 Mar 2024 08:26:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/281991/agents-flex-alpha2</guid>
            <link>https://www.oschina.net/news/281991/agents-flex-alpha2</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[EmbedXrpc V5.0.0 已經發布，用於單片機場景的「gRPC」]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>EmbedXrpc V5.0.0 已經發布，用於單片機場景的「gRPC」</p><p>此版本更新內容包括大版本，重大變更：</p><p>1.移植 Free RTOS 的 message buffer/queue 到 WIN32 和裸機</p><p>2.重構 RunTime 配置，減小很多無用內存</p><p>詳情查看：<a href="https://gitee.com/snikeguo/EmbedXrpc/releases/V5.0.0">https://gitee.com/snikeguo/EmbedXrpc/releases/V5.0.0</a></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 07 Mar 2024 08:16:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/281985/embedxrpc-5-0-0-released</guid>
            <link>https://www.oschina.net/news/281985/embedxrpc-5-0-0-released</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[KCL v0.8.0 重磅發佈 - 融匯社區生態，助力配置體驗!]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h2><span>簡介</span></h2><p><img height="1254" src="https://oscimg.oschina.net/oscnet/up-6dd01390dcc57caa46f5a95963603bef6f6.png" width="1819" referrerpolicy="no-referrer"></p><p>KCL 團隊很高興地宣佈&nbsp;<strong>KCL v0.8.0 新版本現在已經可用</strong>！本次發佈為大家帶來了三方面的重點更新：<strong>語言</strong>、<strong>工具鏈</strong>、<strong>社區集成 &amp; 擴展支持</strong>。</p><ul><li><p><em>使用功能更完善錯誤更少的 KCL 語言、工具鏈和 IDE 提升代碼編寫體驗和效率</em></p></li><li><p><em>更加全面豐富的社區生態集成，改善運維體驗</em></p></li><li><p><em>更加豐富的 KCL 三方庫模型，更加輕鬆的與雲原生生態集成</em></p></li></ul><p>進一步您可以在&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkcl-lang%2Fkcl%2Freleases%2Ftag%2Fv0.8.0" target="_blank">KCL v0.8.0 發佈頁面</a>&nbsp;或者&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fkcl-lang.io%2F" target="_blank">KCL 官方網站</a>&nbsp;獲得下載安裝指南和詳細發佈信息。</p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkcl-lang%2Fkcl" target="_blank">KCL</a>&nbsp;是一個 CNCF 基金會託管的面向雲原生領域開源的基於約束的記錄及函數編程語言，期望通過成熟的編程語言技術和實踐來改進對大量繁雜配置比如雲原生 Kubernetes 配置場景的編寫，致力於圍繞配置的模塊化、擴展性和穩定性，打造更簡單的邏輯編寫體驗，構建更簡單的自動化和生態集成路徑。</p><h2><span>語言更新</span></h2><h3><span>🚗 語法語義更新</span></h3><h4><span>支持&nbsp;<code>show-hidden</code></span></h4><p>通過&nbsp;<code>--show-hidden</code>&nbsp;參數顯示私有變量。</p><p>KCL 程序如下</p><pre><code>a&nbsp;=&nbsp;{_b&nbsp;=&nbsp;<span>1</span>}
</code></pre><p>通過命令&nbsp;<code>kcl run main.k --show-hidden</code>&nbsp;編譯結果如下</p><pre><code><span>a:</span>
&nbsp;&nbsp;<span>_b:</span>&nbsp;<span>1</span></code></pre><h4><span>支持參數和關鍵字參數的合併</span></h4><p>KCL v0.8.0 版本中新增了參數和關鍵字參數的合併功能。帶參數的 schema 實例在合併操作時參數也會合並。</p><pre><code>schema&nbsp;Person[separator]:
&nbsp;&nbsp;&nbsp;&nbsp;firstName:&nbsp;str&nbsp;=&nbsp;<span>"John"</span>
&nbsp;&nbsp;&nbsp;&nbsp;lastName:&nbsp;str
&nbsp;&nbsp;&nbsp;&nbsp;fullName:&nbsp;str&nbsp;=&nbsp;firstName&nbsp;+&nbsp;separator&nbsp;+&nbsp;lastName

x&nbsp;=&nbsp;Person(<span>"&nbsp;"</span>)&nbsp;{lastName&nbsp;=&nbsp;<span>"Doe"</span>}

y&nbsp;=&nbsp;Person(<span>"-"</span>)&nbsp;{lastName&nbsp;=&nbsp;<span>"Doe1"</span>}

z&nbsp;=&nbsp;x&nbsp;|&nbsp;y
</code></pre><p>對應編譯結果</p><pre><code><span>x:</span>
&nbsp;&nbsp;<span>firstName:</span>&nbsp;<span>John</span>
&nbsp;&nbsp;<span>lastName:</span>&nbsp;<span>Doe</span>
&nbsp;&nbsp;<span>fullName:</span>&nbsp;<span>John</span>&nbsp;<span>Doe</span><span>y:</span>
&nbsp;&nbsp;<span>firstName:</span>&nbsp;<span>John</span>
&nbsp;&nbsp;<span>lastName:</span>&nbsp;<span>Doe1</span>
&nbsp;&nbsp;<span>fullName:</span>&nbsp;<span>John-Doe1</span><span>z:</span>
&nbsp;&nbsp;<span>firstName:</span>&nbsp;<span>John</span>
&nbsp;&nbsp;<span>lastName:</span>&nbsp;<span>Doe1</span>
&nbsp;&nbsp;<span>fullName:</span>&nbsp;<span>John-Doe1</span></code></pre><h4><span>支持字面值的 yaml stream 格式輸出</span></h4><p>通過&nbsp;<code>yaml_stream</code>&nbsp;方法，可以支持輸出 yaml 字面值的結果。</p><pre><code><span>import</span>&nbsp;manifests

x0&nbsp;=&nbsp;<span>1</span>
x1&nbsp;=&nbsp;<span>2</span>
manifests.yaml_stream([x0,&nbsp;x1])
</code></pre><p>對應編譯結果</p><pre><code><span>1</span><span>---</span><span>2</span></code></pre><h4><span>修復了在循環表達式中的類型檢查錯誤</span></h4><pre><code>name&nbsp;=&nbsp;<span>"volume"</span>
configMapVolumes1:&nbsp;{str:{str:}}&nbsp;=&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;name&nbsp;=&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name&nbsp;=&nbsp;name&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<span>for</span>&nbsp;_&nbsp;<span>in</span>&nbsp;range(<span>1</span>)
}

configMapVolumes2:&nbsp;[{str:}]&nbsp;=&nbsp;[
&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name&nbsp;=&nbsp;name
&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<span>for</span>&nbsp;_&nbsp;<span>in</span>&nbsp;range(<span>1</span>)
]
</code></pre><p>在 v0.8.0 之前，上述程序編譯會出現類型錯誤。</p><pre><code>error[E2G22]:&nbsp;TypeError
&nbsp;--&gt;&nbsp;main.k:4:9
&nbsp;&nbsp;|
4&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name&nbsp;=&nbsp;name
&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;^&nbsp;expected&nbsp;{str:any},&nbsp;got&nbsp;str
&nbsp;&nbsp;|

&nbsp;--&gt;&nbsp;main.k:2:1
&nbsp;&nbsp;|
2&nbsp;|&nbsp;configMapVolumes1:&nbsp;{str:{str:}}&nbsp;=&nbsp;{
&nbsp;&nbsp;|&nbsp;^&nbsp;variable&nbsp;is&nbsp;defined&nbsp;here,&nbsp;its&nbsp;<span>type</span>&nbsp;is&nbsp;{str:any},&nbsp;but&nbsp;got&nbsp;str
&nbsp;&nbsp;|
</code></pre><p>在 v0.8.0 版本中, 將會成功編譯出如下結果：</p><pre><code><span>name:</span>&nbsp;<span>volume</span><span>configMapVolumes1:</span>
&nbsp;&nbsp;<span>volume:</span>
&nbsp;&nbsp;&nbsp;&nbsp;<span>name:</span>&nbsp;<span>volume</span></code></pre><h4><span>修復了 Schema 對象必選屬性遞歸檢查錯誤</span></h4><p>在 Schema 內部定義了一個對象，對象內部的屬性是必選的，但是在實例化時使用不存在的屬性。</p><pre><code>schema&nbsp;Name:
&nbsp;&nbsp;&nbsp;&nbsp;name:&nbsp;str

schema&nbsp;Config:
&nbsp;&nbsp;&nbsp;&nbsp;n:&nbsp;{str:Name}

Config&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;n&nbsp;=&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n.n&nbsp;=&nbsp;<span>"n"</span>
&nbsp;&nbsp;&nbsp;&nbsp;}
}
</code></pre><p>在 v0.8.0 之後，上述程序編譯會出現類型錯誤。</p><pre><code>error[E2L23]:&nbsp;CompileError
&nbsp;--&gt;&nbsp;main.k:9:11
&nbsp;&nbsp;|
9&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n.n&nbsp;=&nbsp;<span>"n"</span>
&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;^&nbsp;Cannot&nbsp;add&nbsp;member&nbsp;<span>'n'</span>&nbsp;to&nbsp;schema&nbsp;<span>'Name'</span>
&nbsp;&nbsp;|
</code></pre><h4><span>在編譯輸出結果中去掉&nbsp;<code>__settings__</code>&nbsp;屬性</span></h4><p>在 v0.8.0 版本中，編譯輸出結果中去掉了&nbsp;<code>__settings__</code>&nbsp;屬性。</p><pre><code>schema&nbsp;Person:
&nbsp;&nbsp;&nbsp;&nbsp;__settings__:&nbsp;{str:str}&nbsp;=&nbsp;{<span>"output_type"</span>:&nbsp;<span>"STANDALONE"</span>}
&nbsp;&nbsp;&nbsp;&nbsp;name?:&nbsp;str
&nbsp;&nbsp;&nbsp;&nbsp;age?:&nbsp;int
&nbsp;&nbsp;&nbsp;&nbsp;school?:&nbsp;str

a&nbsp;=&nbsp;Person{
&nbsp;&nbsp;&nbsp;&nbsp;name:&nbsp;<span>"a"</span>,
}
</code></pre><p>在編譯結果中去掉了&nbsp;<code>__settings__</code>&nbsp;屬性。</p><pre><code><span>a:</span>
&nbsp;&nbsp;<span>name:</span>&nbsp;<span>a</span></code></pre><h4><span>支持在 config 表達式中計算 key 和 value 的值</span></h4><p>在 v0.8.0 版本中，支持在 config 表達式中計算 key 和 value 的值。</p><pre><code>_data&nbsp;=&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;<span>"a"</span>:&nbsp;<span>'foo'</span>
&nbsp;&nbsp;&nbsp;&nbsp;<span>"b"</span>:&nbsp;<span>'bar'</span>
}

r0&nbsp;=&nbsp;[{v&nbsp;=&nbsp;k}&nbsp;<span>for</span>&nbsp;k,&nbsp;v&nbsp;<span>in</span>&nbsp;_data]
r1&nbsp;=&nbsp;[{k&nbsp;=&nbsp;v}&nbsp;<span>for</span>&nbsp;k,&nbsp;v&nbsp;<span>in</span>&nbsp;_data]
r2&nbsp;=&nbsp;[{k.foo&nbsp;=&nbsp;v}&nbsp;<span>for</span>&nbsp;k,&nbsp;v&nbsp;<span>in</span>&nbsp;_data]
r3&nbsp;=&nbsp;[[k]&nbsp;<span>for</span>&nbsp;k,&nbsp;v&nbsp;<span>in</span>&nbsp;_data]
r4&nbsp;=&nbsp;[[k,&nbsp;v]&nbsp;<span>for</span>&nbsp;k,&nbsp;v&nbsp;<span>in</span>&nbsp;_data]
</code></pre><p>編譯結果如下：</p><pre><code><span>r0:</span><span>-</span>&nbsp;<span>foo:</span>&nbsp;<span>a</span><span>-</span>&nbsp;<span>bar:</span>&nbsp;<span>b</span><span>r1:</span><span>-</span>&nbsp;<span>a:</span>&nbsp;<span>foo</span><span>-</span>&nbsp;<span>b:</span>&nbsp;<span>bar</span><span>r2:</span><span>-</span>&nbsp;<span>a:</span>
&nbsp;&nbsp;&nbsp;&nbsp;<span>foo:</span>&nbsp;<span>foo</span><span>-</span>&nbsp;<span>b:</span>
&nbsp;&nbsp;&nbsp;&nbsp;<span>foo:</span>&nbsp;<span>bar</span><span>r3:</span><span>-</span>&nbsp;<span>-</span>&nbsp;<span>a</span><span>-</span>&nbsp;<span>-</span>&nbsp;<span>b</span><span>r4:</span><span>-</span>&nbsp;<span>-</span>&nbsp;<span>a</span>
&nbsp;&nbsp;<span>-</span>&nbsp;<span>foo</span><span>-</span>&nbsp;<span>-</span>&nbsp;<span>b</span>
&nbsp;&nbsp;<span>-</span>&nbsp;<span>bar</span></code></pre><h3><span>🔧 診斷信息的優化</span></h3><p>KCL 語法在 if 塊中使用的是&nbsp;<code>elif</code>&nbsp;關鍵字，而不是&nbsp;<code>else if</code>。</p><p>編譯以下 KCL 程序：</p><pre><code><span>if</span>&nbsp;<span>True</span>:&nbsp;a&nbsp;=&nbsp;<span>1</span><span>else</span>&nbsp;<span>if</span>&nbsp;<span>False</span>:&nbsp;b&nbsp;=&nbsp;<span>1</span></code></pre><p>KCL 在診斷信息中增加了錯誤修正的建議：</p><pre><code>error[E1001]:&nbsp;InvalidSyntax
&nbsp;--&gt;&nbsp;main.k:2:6
&nbsp;&nbsp;|
2&nbsp;|&nbsp;<span>else</span>&nbsp;<span>if</span>&nbsp;False:&nbsp;b&nbsp;=&nbsp;1
&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;^&nbsp;<span>'else&nbsp;if'</span>&nbsp;here&nbsp;is&nbsp;invalid&nbsp;<span>in</span>&nbsp;KCL,&nbsp;consider&nbsp;using&nbsp;the&nbsp;<span>'elif'</span>&nbsp;keyword
&nbsp;&nbsp;|
</code></pre><h3><span>🚀 語言編寫體驗優化</span></h3><h4><span>KCL 標準庫新增文件系統訪問方法</span></h4><p>KCL 增加了訪問文件系統的方法。在 v0.8.0 版本中支持了包括&nbsp;<code>read</code>,&nbsp;<code>glob</code>&nbsp;等訪問文件系統的方法。</p><p>通過&nbsp;<code>read</code>&nbsp;方法，可以讀取一個文件內容為字符串。</p><pre><code><span>import</span>&nbsp;file

a&nbsp;=&nbsp;file.read(<span>"hello.txt"</span>)
</code></pre><p>在文件&nbsp;<code>hello.txt</code>&nbsp;中添加如下內容：</p><pre><code>Hello World !
</code></pre><p>編譯結果</p><pre><code><span>a:</span>&nbsp;<span>Hello</span>&nbsp;<span>World</span>&nbsp;<span>!</span></code></pre><p>通過結合&nbsp;<code>json.decode</code>&nbsp;方法，可以輕鬆的實現將 json 文件反序列化。</p><p>在&nbsp;<code>hello.json</code>&nbsp;文件中增加如下內容</p><pre><code>{
&nbsp;&nbsp;<span>"name"</span>:&nbsp;<span>"John"</span>,
&nbsp;&nbsp;<span>"age"</span>:&nbsp;<span>10</span>
}
</code></pre><p>KCL 程序如下所示：</p><pre><code><span>import</span>&nbsp;file
<span>import</span>&nbsp;json

_a&nbsp;=&nbsp;json.decode(file.read(<span>"hello.json"</span>))

name&nbsp;=&nbsp;_a.name
age&nbsp;=&nbsp;_a.age
</code></pre><p>編譯結果如下所示：</p><pre><code><span>name:</span>&nbsp;<span>John</span><span>age:</span>&nbsp;<span>10</span></code></pre><p>更多內容 -&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fkcl-lang.io%2Fzh-CN%2Fdocs%2Freference%2Fmodel%2Ffile%2F" target="_blank">https://kcl-lang.io/zh-CN/docs/reference/model/file/</a></p><h4><span>KCL 編譯緩存路徑支持使用環境變量 KCL_CACHE_PATH 指定</span></h4><p>KCL 編譯器會將緩存生成到環境變量<code>KCL_CACHE_PATH</code>指定的目錄當中，如果沒指定，將會生成到項目根目錄中。</p><h4><span>插件系統支持使用 golang 編寫 KCL 插件</span></h4><p>使用 golang 定義 hello 插件。</p><pre><code><span>package</span>&nbsp;hello_plugin

<span>import</span>&nbsp;(
&nbsp;&nbsp;&nbsp;&nbsp;<span>"kcl-lang.io/kcl-go/pkg/plugin"</span>
)

<span><span>func</span>&nbsp;<span>init</span><span>()</span></span>&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;plugin.RegisterPlugin(plugin.Plugin{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Name:&nbsp;<span>"hello"</span>,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MethodMap:&nbsp;<span>map</span>[<span>string</span>]plugin.MethodSpec{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>"add"</span>:&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Body:&nbsp;<span><span>func</span><span>(args&nbsp;*plugin.MethodArgs)</span>&nbsp;<span>(*plugin.MethodResult,&nbsp;error)</span></span>&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v&nbsp;:=&nbsp;args.IntArg(<span>0</span>)&nbsp;+&nbsp;args.IntArg(<span>1</span>)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>return</span>&nbsp;&amp;plugin.MethodResult{V:&nbsp;v},&nbsp;<span>nil</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},
&nbsp;&nbsp;&nbsp;&nbsp;})
}
</code></pre><p>藉助 KCL Go SDK 開發，擴展 KCL 編譯器使用插件。</p><pre><code><span>package</span>&nbsp;main

<span>import</span>&nbsp;(
&nbsp;&nbsp;&nbsp;&nbsp;<span>"fmt"</span>

&nbsp;&nbsp;&nbsp;&nbsp;<span>"kcl-lang.io/kcl-go/pkg/kcl"</span>
&nbsp;&nbsp;&nbsp;&nbsp;<span>"kcl-lang.io/kcl-go/pkg/native"</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>//&nbsp;Import&nbsp;the&nbsp;native&nbsp;API</span>
&nbsp;&nbsp;&nbsp;&nbsp;_&nbsp;<span>"kcl-lang.io/kcl-go/pkg/plugin/hello_plugin"</span>&nbsp;<span>//&nbsp;Import&nbsp;the&nbsp;hello&nbsp;plugin</span>
)

<span><span>func</span>&nbsp;<span>main</span><span>()</span></span>&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;<span>//&nbsp;Note&nbsp;we&nbsp;use&nbsp;`native.MustRun`&nbsp;here&nbsp;instead&nbsp;of&nbsp;`kcl.MustRun`,&nbsp;because&nbsp;it&nbsp;needs&nbsp;the&nbsp;cgo&nbsp;feature.</span>
&nbsp;&nbsp;&nbsp;&nbsp;yaml&nbsp;:=&nbsp;native.MustRun(<span>"main.k"</span>,&nbsp;kcl.WithCode(code)).GetRawYamlResult()
&nbsp;&nbsp;&nbsp;&nbsp;fmt.Println(yaml)
}

<span>const</span>&nbsp;code&nbsp;=&nbsp;<span>`
import&nbsp;kcl_plugin.hello

name&nbsp;=&nbsp;"kcl"
three&nbsp;=&nbsp;hello.add(1,2)&nbsp;#&nbsp;3
`</span></code></pre><h3><span>😸 新增 Linux arm64 版本</span></h3><p>KCL 的 Release 產物中新增了對 Linux arm64 平台的支持。</p><p>可以在&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkcl-lang%2Fkcl%2Freleases" target="_blank">KCL Release Page</a>&nbsp;中找到後綴為&nbsp;<code>linux-arm64</code>&nbsp;的壓縮包。</p><h3><span>🏄 SDK &amp; API 更新</span></h3><h4><span>Rust SDK</span></h4><p>KCL Rust SDK 提供了一系列的 API，可以用於 KCL 文件的編譯、校驗、測試和格式化代碼等操作。</p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkcl-lang%2Flib" target="_blank">KCL Rust SDK: https://github.com/kcl-lang/lib</a></p><h4><span>Java SDK</span></h4><p>KCL Java SDK 新增語法樹、作用域、符號等語法語義結構定義及相關查詢 API。</p><h4><span>Go SDK 更新</span></h4><ul><li><p>KCL Doc 工具支持輸出為 OpenAPI 格式。</p></li><li><p>增加 Parse 過程相關 API。</p></li></ul><h4><span>API 更新</span></h4><ul><li><p>新增 json/yaml 驗證 API 用來驗證 json 和 yaml 文件。</p></li><li><p>新增語法和語義分析 API 用於對 KCL 代碼進行分析。</p></li><li><p>新增構建二進制產物 API 用於緩存編譯結果。</p></li><li><p>新增運行二進制產物 API 用於直接運行編譯結果，避免重複編譯並提升性能。</p></li><li><p>新增代碼生成 API 以編程方式實現 KCL 代碼生成而不是編寫複雜的模版。</p></li></ul><p>更多的更新可以查看&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fkcl-lang.io%2Fdocs%2Freference%2Fxlang-api%2Fgo-api" target="_blank">KCL v0.8 API 文檔</a></p><h3><span>🐞 其他更新及錯誤修復</span></h3><ul><li><p>修復了 KCL CLI 使用編譯參數 -S 可能會導致的編譯錯誤</p></li><li><p>修復了 kcl fmt 工具對 lambda 表達式進行格式化時，結尾增加一個空行的錯誤。</p></li><li><p>修復 Schema Doc 補全代碼片段錯誤</p></li><li><p>修復 Schema 對象必選屬性遞歸檢查錯誤</p></li><li><p>提升 Schema 索引簽名類型檢查健壯性</p></li><li><p>修復 Schema 內部諸如 "$if" 的字符串標識符定義找不到的錯誤</p></li><li><p>優化非預期 token 的語法錯誤提示</p></li><li><p>修復非預期的字典生成表達式中的 key 與循環變量相同時的變量計算</p></li></ul><h2><span>IDE &amp; 工具鏈更新</span></h2><h3><span>IDE 更新</span></h3><h4><span>IDE 語義級別的高亮增強</span></h4><p>KCL IDE 高亮之前僅支持 KCL 語法高亮，今年逐步啓用了新的 KCL 語義架構模型，在新語義架構的支撐下，KCL IDE 支持語義級別的高亮，在語義上有關聯的代碼會顯示相同的高亮。</p><p><img height="664" src="https://oscimg.oschina.net/oscnet/up-ca71cb381178754a79d3e6bab643331ccc8.png" width="560" referrerpolicy="no-referrer"></p><p>更多關於 KCL 語義架構模型的內容，參考：&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fkcl-lang.io%2Fzh-CN%2Fblog%2F2023-12-09-kcl-new-semantic-model" target="_blank">KCL 高效語義模型技術揭秘：實現快速編譯與增強 IDE 支持</a></p><h4><span>新增 builtin 方法的補全</span></h4><p>KCL IDE 支持 builtin 方法的補全，如下圖所示：</p><p><img height="456" src="https://oscimg.oschina.net/oscnet/up-148aa113dc1c90e129c43dba3d796502f3e.gif" width="1218" referrerpolicy="no-referrer"></p><p><img alt="" src="https://files.mdnice.com/user/44450/f7e1a184-22b8-4d3c-9362-6e523650e1aa.gif" referrerpolicy="no-referrer"></p><h4><span>增加變量引用錯誤時的快速修復功能</span></h4><p>KCL IDE 支持變量引用錯誤時的快速修復功能，如下圖所示：<img alt="" src="https://files.mdnice.com/user/44450/de4f89fe-bced-4a95-8888-7c2b9de6d28e.gif" referrerpolicy="no-referrer"></p><p><img height="496" src="https://oscimg.oschina.net/oscnet/up-b4fd597987857f9db1aec93a500f8fbd4f3.gif" width="1218" referrerpolicy="no-referrer"></p><h4><span>IDE 支持增量解析和異步編譯功能</span></h4><p>IDE 通過 KCL 新語義模型支持增量解析和異步編譯功能，提升了編譯速度和編寫體驗。</p><p>更多內容詳見&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fkcl-lang.io%2Fzh-CN%2Fblog%2F2023-12-09-kcl-new-semantic-model" target="_blank">https://kcl-lang.io/zh-CN/blog/2023-12-09-kcl-new-semantic-model</a></p><h4><span>IDE LSP 問題修復</span></h4><ul><li><p>修復 assert 語句中字符串插值變量不能跳轉的異常</p></li><li><p>修復了字符串中異常觸發函數補全的異常</p></li><li><p>修復了字符串後跟註釋中補全錯誤的問題</p></li><li><p>修復了 schema 內部屬性符號不能跳轉的問題</p></li><li><p>修復 import 語句別名語義檢查和補全的異常</p></li><li><p>修復了 schema 中 check 表達式補全的異常</p></li><li><p>修復了嵌套 schema 定義中補全錯誤的問題</p></li><li><p>修復了部分懸停信息缺失的問題</p></li><li><p>修復不同語法補全符號類型不統一的問題</p></li><li><p>區分 Schema 類型和實例補全符號</p></li><li><p>統一 Schema 註釋文檔補全的格式</p></li><li><p>修復了配置塊內部 if 語句符號不能跳轉和補全的問題</p></li></ul><h3><span>驗證工具更新</span></h3><p>本次更新中，我們對 KCL 驗證工具的報錯信息進行了優化，在使用 KCL 驗證工具對 json/yaml 文件進行驗證的工作中，將會準確定位到 json 文件的異常位置。</p><p>以 json 文件為例，我們將要對以下 hello.json 文件進行驗證</p><pre><code>{
&nbsp;&nbsp;&nbsp;&nbsp;<span>"name"</span>:&nbsp;<span>10</span>,
&nbsp;&nbsp;&nbsp;&nbsp;<span>"age"</span>:&nbsp;<span>18</span>,
&nbsp;&nbsp;&nbsp;&nbsp;<span>"message"</span>:&nbsp;<span>"This&nbsp;is&nbsp;Alice"</span>
}
</code></pre><p>定義如下 main.k 文件來對 json 文件中的內容進行驗證</p><pre><code>schema&nbsp;User:
&nbsp;&nbsp;&nbsp;&nbsp;name:&nbsp;str
&nbsp;&nbsp;&nbsp;&nbsp;age:&nbsp;int
&nbsp;&nbsp;&nbsp;&nbsp;message?:&nbsp;str
</code></pre><p>通過以下命令對 json 文件內容進行驗證</p><pre><code>kcl&nbsp;vet&nbsp;hello.json&nbsp;main.k
</code></pre><p>可以看到在 json 文件中的錯誤位置：</p><pre><code>error[E2G22]:&nbsp;TypeError
&nbsp;--&gt;&nbsp;test.json:2:5
&nbsp;&nbsp;|
2&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>"name"</span>:&nbsp;10,
&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;^&nbsp;expected&nbsp;str,&nbsp;got&nbsp;int(10)
&nbsp;&nbsp;|

&nbsp;--&gt;&nbsp;main.k:2:5
&nbsp;&nbsp;|
2&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name:&nbsp;str
&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;^&nbsp;variable&nbsp;is&nbsp;defined&nbsp;here,&nbsp;its&nbsp;<span>type</span>&nbsp;is&nbsp;str,&nbsp;but&nbsp;got&nbsp;int(10)
&nbsp;&nbsp;|
</code></pre><h4><span>KCL cli 新增 git 倉庫作為編譯入口</span></h4><p>通過以下命令，可以將 KCL 的 git 倉庫作為編譯入口</p><pre><code>kcl&nbsp;run&nbsp;&lt;git&nbsp;url&gt;
</code></pre><h4><span>kcl mod graph 支持輸出 KCL 包依賴圖</span></h4><p>通過命令&nbsp;<code>kcl mod graph</code>&nbsp;輸出 KCL 包的依賴圖。</p><h3><span>KCL 包管理工具</span></h3><h4><span>KCL 包管理支持通過 commit 添加 git 依賴</span></h4><p>KCL 包管理工具增加了通過 commit 來添加 git 三方庫依賴的功能。以&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FKusionStack%2Fcatalog" target="_blank">https://github.com/KusionStack/catalog</a>&nbsp;為例，添加 commit 為 a29e3db 的版本作為依賴。可以通過編輯 kcl.mod 文件中的依賴或者命令行直接添加。</p><p>編輯 kcl.mod 文件內容如下：</p><pre><code>[dependencies]
catalog = { git = "https://github.com/KusionStack/catalog.git", commit = "a29e3db" }
</code></pre><p>或者通過命令行添加：</p><pre><code>kcl&nbsp;mod&nbsp;add&nbsp;-git&nbsp;https://github.com/KusionStack/catalog.git&nbsp;-commit&nbsp;a29e3db
</code></pre><h4><span>KCL 包管理工具支持三方庫名稱帶有「-」</span></h4><p>KCL 包管理工具支持三方庫名稱中帶有「-」，KCL 包管理工具會自動將 「-」 替換為 「_」。</p><p>以三方庫&nbsp;<code>set-annotation</code>&nbsp;為例，通過以下命令添加&nbsp;<code>set-annotation</code>&nbsp;為依賴：</p><pre><code>kcl&nbsp;mod&nbsp;add&nbsp;set-annotation
</code></pre><p>在 KCL 程序中，通過&nbsp;<code>set_annotation</code>&nbsp;引用：</p><pre><code>import&nbsp;set_annotation&nbsp;
</code></pre><h3><span>KCL 導入工具更新，支持更多特性</span></h3><ul><li><p>支持 OpenAPI multiplyOf 規範映射到 KCL multiplyof 函數進行校驗</p></li><li><p>支持 YAML Stream 格式的 Kubernetes CRD 文件輸出為多個 KCL 文件</p></li><li><p>支持 OpenAPI allOf 關鍵字校驗表達式生成</p></li><li><p>支持 KCL 數組和字典類型的 all/any 校驗表達式生成</p></li></ul><h2><span>社區集成 &amp; 擴展更新</span></h2><h3><span>Flux KCL Controller 發佈</span></h3><p>我們開發了&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkcl-lang%2Fflux-kcl-controller" target="_blank">Flux KCL Controller</a>&nbsp;支持 KCL 與 Flux 集成。在集羣中安裝 Flux KCL Controller 後，通過以下資源就可以實現 KCL git 倉庫通過 FluxCD 進行持續集成。</p><pre><code>apiVersion:&nbsp;source.toolkit.fluxcd.io/v1
kind:&nbsp;GitRepository
metadata:
&nbsp;&nbsp;name:&nbsp;kcl-deployment
&nbsp;&nbsp;namespace:&nbsp;<span>source</span>-system
spec:
&nbsp;&nbsp;interval:&nbsp;30s
&nbsp;&nbsp;<span>#&nbsp;需要持續集成的&nbsp;github&nbsp;倉庫</span>
&nbsp;&nbsp;url:&nbsp;https://github.com/awesome-kusion/kcl-deployment.git
&nbsp;&nbsp;ref:
&nbsp;&nbsp;&nbsp;&nbsp;branch:&nbsp;main
---
apiVersion:&nbsp;krm.kcl.dev.fluxcd/v1alpha1
kind:&nbsp;KCLRun
metadata:
&nbsp;&nbsp;name:&nbsp;kcl-deployment
&nbsp;&nbsp;namespace:&nbsp;<span>source</span>-system
spec:
&nbsp;&nbsp;sourceRef:
&nbsp;&nbsp;&nbsp;&nbsp;kind:&nbsp;GitRepository
&nbsp;&nbsp;&nbsp;&nbsp;name:&nbsp;kcl-deployment
</code></pre><p>更多內容詳見:&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fkcl-lang.io%2Fzh-CN%2Fblog%2F2024-02-01-biweekly-newsletter%2F" target="_blank">https://kcl-lang.io/zh-CN/blog/2024-02-01-biweekly-newsletter/</a></p><h3><span>CodeQL KCL 工具</span></h3><p>初步支持 CodeQL KCL dbschema 定義以及對 KCL 語法語義進行數據提取，並可通過 CodeQL 進行數據查詢對 KCL 代碼進行靜態分析和掃描，提升代碼安全。</p><p>更多內容詳見:&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkcl-lang%2Fcodeql-kcl" target="_blank">https://github.com/kcl-lang/codeql-kcl</a></p><h2><span>模型更新</span></h2><p>KCL 模型數量新增至 303 個，主要新增與 Crossplane Provider 相關的模型和與 JSON 合併操作相關的庫</p><ul><li><p>KCL JSON Patch 庫：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fartifacthub.io%2Fpackages%2Fkcl%2Fkcl-module%2Fjsonpatch" target="_blank">https://artifacthub.io/packages/kcl/kcl-module/jsonpatch</a></p></li><li><p>KCL JSON Merge Patch 庫：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fartifacthub.io%2Fpackages%2Fkcl%2Fkcl-module%2Fjson_merge_patch" target="_blank">https://artifacthub.io/packages/kcl/kcl-module/json_merge_patch</a></p></li><li><p>KCL Kubernetes Strategy Merge Patch 庫：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fartifacthub.io%2Fpackages%2Fkcl%2Fkcl-module%2Fstrategic_merge_patch" target="_blank">https://artifacthub.io/packages/kcl/kcl-module/strategic_merge_patch</a></p></li><li><p>KCL Crossplane 及 Crossplane Provider 系列模型：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fartifacthub.io%2Fpackages%2Fsearch%3Forg%3Dkcl%26sort%3Drelevance%26page%3D1%26ts_query_web%3Dcrossplane" target="_blank">https://artifacthub.io/packages/search?org=kcl&amp;sort=relevance&amp;page=1&amp;ts_query_web=crossplane</a></p></li><li><p>Kubenetes 1.29 版本:&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fartifacthub.io%2Fpackages%2Fkcl%2Fkcl-module%2Fk8s%2F1.29.0" target="_blank">https://artifacthub.io/packages/kcl/kcl-module/k8s/1.29.0</a></p></li><li><p>新增 Podinfo 應用配置模型，支持設置外部動態參數如 replicas 等，可以直接通過一條命令渲染 Kubernetes 資源配置，並且可以在此模型的基礎上修改並自定義資源模版</p></li></ul><pre><code>kcl&nbsp;run&nbsp;oci://ghcr.io/kcl-lang/podinfo&nbsp;-D&nbsp;replicas=2
</code></pre><ul><li><p>JSON Schema 庫發佈 0.0.4 版本，修復類型定義錯誤, 可以執行如下命令更新或添加依賴</p></li></ul><pre><code>kcl&nbsp;mod&nbsp;add&nbsp;jsonschema:0.0.4
</code></pre><h2><span>其他更新</span></h2><p>完整更新和錯誤修復列表詳見:&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkcl-lang%2Fkcl%2Fcompare%2Fv0.7.0...v0.8.0" target="_blank">https://github.com/kcl-lang/kcl/compare/v0.7.0...v0.8.0</a></p><h2><span>文檔更新</span></h2><p>KCL 網站新增 KCL v0.7.0 文檔內容並支持版本化語義選項，目前支持 v0.4.x, v0.5.x, v0.6.x, v0.7.0 和 v0.8.0 版本選擇，同時歡迎社區同學進行文檔共建。</p><h2><span>社區動態</span></h2><h3><span>KCL LFX 項目啓動</span></h3><p>恭喜 @AkashKumar7902, @octonawish-akcodes, @shashank-iitbhu 入選 CNCF KCL LFX 項目，同時感謝 @Vanshikav123, @Amit Pandey 的積極參與。</p><h3><span>KCL 登陸 Crossplane 官方函數市場</span></h3><p>自 Crossplane v1.14 中的組合函數 Beta 版發佈以來，使用 Crossplane 構建雲原生平台的可能體驗範圍一直在迅速擴大。KCL 團隊在第一時間進行跟進並主動構建了一個可重用的函數，整個 Crossplane 生態系統現在可以利用 KCL 提供的高水平經驗和能力來構建自己的雲原生平台。</p><p>更多內容詳見:&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.crossplane.io%2Ffunction-kcl%2F" target="_blank">https://blog.crossplane.io/function-kcl/</a></p><h3><span>特別鳴謝</span></h3><p>感謝社區的小夥伴在 KCL v0.8.0 版本中的貢獻，以下排名不分先後</p><ul><li><p>感謝 @professorabhay 支持 KCL 測試 Diff 功能 🙌</p></li><li><p>感謝 @jakezhu9 同學對 kcl import 工具的持續貢獻 🤝</p></li><li><p>感謝 @octonawish-akcodes 對 KCL 代碼清理和 FAQ 文檔的持續貢獻 🙌</p></li><li><p>感謝 @satyazzz123 對 KRM KCL 支持讀取環境變量功能的貢獻 🙌</p></li><li><p>感謝 @AkashKumar7902 對 KCL 包管理工具功能的貢獻 🙌</p></li><li><p>感謝 @UtkarshUmre 對 KCL linux-arm64 構建 CI 的貢獻 🙌</p></li><li><p>感謝 @octonawish-akcodes 和 @d4v1d03 對 KCL FAQ 文檔和 KCL IDE 功能的持續貢獻 🙌</p></li><li><p>感謝 @octonawish-akcodes 對 Ansible KCL Module 的貢獻</p></li><li><p>感謝 @AkashKumar7902 和 @Vanshikav123 對 KCL 包管理工具功能的貢獻 🙌</p></li><li><p>感謝 @StevenLeiZhang 對 KCL 文檔和 KCL 插件的貢獻 🙌</p></li><li><p>感謝 @patrycju, @Callum Lyall, @Matt Gowie, @ShiroDN, @FLAGLORD, @YiuTerran, @flyinox, @steeling, @Anoop, @Even Solberg，@Phillip Neumann，@Naxe, @rozaliev, @CloudZero357, @martingreber, @az, @Art3mK, @Erick, @TheChinBot, @Evgeny Shepelyuk, @yonas, @vtomilov, @Fdall, @bozaro, @starkers, 和 @MrGuoRanDuo 等在 KCL v0.8 版本迭代過程中使用 KCL 提供的寶貴建議與反饋 🙌</p></li></ul><h2><span>下一步計劃</span></h2><p>感謝所有 KCL 用户和社區小夥伴在此次版本更新過程中提出的寶貴反饋與建議。預計 2024 年 5 月，我們將發佈 KCL v0.9.0 版本，更多詳情請參考 KCL 2024 路線規劃，和 KCL v0.9.0 Milestone，如果您有更多的想法和需求，歡迎在 KCL Github 倉庫發起 Issues 或討論，也歡迎加入我們的社區進行交流 🙌 🙌 🙌</p><p>更多其他資源請參考：</p><ul><li><p>KCL 網站:&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fkcl-lang.io%2F" target="_blank">https://kcl-lang.io/</a></p></li><li><p>KusionStack 網站:&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fkusionstack.io%2F" target="_blank">https://kusionstack.io/</a></p></li><li><p>KCL GitHub 倉庫:&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkcl-lang" target="_blank">https://github.com/kcl-lang</a></p></li><li><p>KusionStack GitHub 倉庫:&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FKusionStack" target="_blank">https://github.com/KusionStack</a></p></li><li><p>KCL v0.9.0 Milestone:&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkcl-lang%2Fkcl%2Fmilestone%2F9" target="_blank">https://github.com/kcl-lang/kcl/milestone/9</a></p></li><li><p>KCL 2024 路線規劃:&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkcl-lang%2Fkcl%2Fissues%2F882" target="_blank">https://github.com/kcl-lang/kcl/issues/882</a></p></li><li><p>KCL 社區:&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkcl-lang%2Fcommunity" target="_blank">https://github.com/kcl-lang/community</a></p></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Thu, 07 Mar 2024 07:29:17 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/281971/kcl-0-8-0-released</guid>
            <link>https://www.oschina.net/news/281971/kcl-0-8-0-released</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[WFS 文件存儲系統 v1.0.1 發佈]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h4>WFS 文件存儲系統，主要解決海量小文件的存儲問題</h4><p>wfs 有非常高效的讀寫效率，在高併發壓力下，wfs 存儲引擎讀寫響應時間可以達到微秒級別.</p><p>海量小文件可能帶來的許多問題：</p><p style="text-align:left"><span>&nbsp; &nbsp;<span>&nbsp;</span></span><span>海量小文件存儲在不同的硬件環境和系統架構下，都會帶來一系列顯著的問題。無論是採用傳統的機械硬盤（HDD）還是現代的固態硬盤（SSD），這些問題都可能影響系統的性能、效率、擴展性和成本：</span></p><ol><li><span>存儲效率低下：對於任何類型的硬盤，小文件通常會導致物理存儲空間的低效使用。由於硬盤有其最小存儲單元（扇區或頁），小文件可能會佔用超過其實際內容大小的空間，尤其是在每個文件還需額外存儲元數據的情況下，如 inode（在 Unix-like 系統中）或其他形式的元數據記錄，這會進一步加大空間浪費。inode 耗盡：每個文件和目錄至少佔用一個 inode，而 inode 的數量是在格式化磁盤並創建文件系統時預先設定的。當系統中有大量小文件時，即使硬盤空間還很充足，也可能因為 inode 用完而導致無法繼續創建新文件，儘管剩餘磁盤空間足以存放更多數據。性能影響：隨着 inode 數量增多，查找和管理這些 inode 所對應的元數據會變得更復雜和耗時，尤其是對於不支持高效索引機制的傳統文件系統，這會影響文件系統的整體性能。擴展性受限：文件系統設計時通常有一個固定的 inode 總數，除非通過特殊手段（如調整文件系統或重新格式化時指定更多 inode），否則無法動態增加 inode 數量來適應小文件增長的需求。</span></li><li><span>I/O 性能瓶頸與資源消耗：在 HDD 環境中，隨機讀寫大量小文件會引發頻繁的磁盤尋道操作，從而降低整體 I/O 性能。而在 SSD 中，儘管尋道時間幾乎可以忽略，但過於密集的小文件訪問仍可能導致控制器壓力增大、寫入放大效應以及垃圾回收機制負擔加重。</span></li><li><span>索引與查詢效率問題：海量小文件對文件系統的索引結構形成挑戰，隨着文件數量的增長，查找、更新和刪除小文件時所需的元數據操作會變得非常耗時。尤其在需要快速檢索和分析場景下，傳統索引方法難以提供高效的查詢服務。</span></li><li><span>備份恢復複雜性與效率：備份海量小文件是一個繁瑣且耗時的過程，同時在恢復過程中，尤其是按需恢復單個文件時，需要從大量備份數據中定位目標文件，這將極大地影響恢復速度和效率。</span></li><li><span>擴展性與可用性挑戰：存儲系統在處理海量小文件時，可能面臨擴展性難題。隨着文件數量的增長，如何有效分配和管理資源以維持良好的性能和穩定性是一大考驗。在分佈式存儲系統中，還可能出現熱點問題，導致部分節點負載過高，影響整個系統的穩定性和可用性。</span></li></ol><p style="text-align:left"><strong>&nbsp; &nbsp;wfs 作用在於將海量提交存儲的小文件進行高效的壓縮歸檔。並提供簡潔的數據獲取方式，以及後台文件管理，文件碎片整理等。</strong></p><hr><p><strong>wfs 相關程序</strong></p><ul><li>wfs 源碼地址 &nbsp; &nbsp; &nbsp;<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdonnie4w%2Fwfs" target="_blank">https://github.com/donnie4w/wfs</a></li><li>go 客户端 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdonnie4w%2Fwfs-goclient" target="_blank">https://github.com/donnie4w/wfs-goclient</a></li><li>java 客户端 &nbsp; &nbsp; &nbsp; &nbsp;<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdonnie4w%2Fwfs-jclient" target="_blank">https://github.com/donnie4w/wfs-jclient</a></li><li>python 客户端 &nbsp; &nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdonnie4w%2Fwfs-pyclient" target="_blank">https://github.com/donnie4w/wfs-pyclient</a></li><li>wfs 在線體驗 &nbsp; &nbsp; &nbsp;<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Ftestwfs.tlnet.top%2F" target="_blank">http://testwfs.tlnet.top</a><span>&nbsp;</span>&nbsp; &nbsp; 用户名 admin &nbsp; &nbsp;密碼 123</li><li>wfs 使用文檔 &nbsp; &nbsp; &nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftlnet.top%2Fwfsdoc" target="_blank">https://tlnet.top/wfsdoc</a></li></ul><hr><p><strong>wfs 的特點</strong></p><ul><li>高效性</li><li>簡易性</li><li>零依賴</li><li>管理平台</li><li>圖片處理</li></ul><hr><p><strong>應用場景</strong></p><ul><li>媒體存儲：適用於存儲和訪問海量的小文件，如圖片、文本等。憑藉高性能存儲引擎，WFS 可實現高速存取，並提供豐富的圖片資源處理功能。</li></ul><hr><p><strong>技術特點</strong></p><ul><li>高吞吐量低延遲<span>：保證在高併發場景下的數據存取速度。</span></li><li>支持多級別數據壓縮存儲<span>：節省存儲空間，提高存儲效率。</span></li><li>支持 http(https) 協議存取文件</li><li>支持 thrift 協議長連接存取文件</li><li>支持圖片基本處理<span>：內置圖片處理功能，滿足多媒體存儲需求。</span></li></ul><hr><p><strong>WFS 的壓力測試與性能評估</strong></p><p><span>請注意，以下基準測試數據主要針對 WFS 數據存儲引擎，未考慮網絡因素的影響。在理想條件下，基於基準測試數據得出估算數據</span></p><p><strong>以下為部分壓測數據截圖</strong></p><p><img alt="" src="https://tlnet.top/f/1709371893_7752.jpg" width="1264" referrerpolicy="no-referrer"></p><p><img alt="" src="https://tlnet.top/f/1709371933_7249.jpg" width="1264" referrerpolicy="no-referrer"></p><p><img alt="" src="https://tlnet.top/f/1709373380_17625.jpg" width="1264" referrerpolicy="no-referrer"></p><p><img alt="" src="https://tlnet.top/f/1709373414_15548.jpg" width="1264" referrerpolicy="no-referrer"></p><p><strong>測試數據説明：</strong></p><ul><li><strong>第一列為測試方法，寫 Append, 讀 Get ， *-4 四核，*-8 八核</strong></li><li><strong>第二列為本輪測試</strong><span><strong>執行總次</strong></span><strong>數</strong></li><li><strong>ns/op: 每執行一次消耗的時間</strong></li><li><strong>B/op：每執行一次消耗的內存</strong></li><li><strong>allocs/op：每執行一次分配內存次數</strong></li></ul><p style="text-align:start">&nbsp;</p><p><strong>根據基準測試數據，可以估算出 wfs 存儲引擎的性能</strong></p><ul><li><strong>存儲數據性能估算</strong></li></ul><ol><li><span>Benchmark_Append-4 平均每秒執行的操作次數約為：1 / (36489 ns/operation) ≈ 27405 次/s</span></li><li><span>Benchmark_Append-8 平均每秒執行的操作次數約為：1 / (31303 ns/operation) ≈ 31945 次/s</span></li><li><span>Benchmark_Append-4 平均每秒執行的操作次數約為：1 / (29300 ns/operation) ≈ 34129 次/s</span></li><li><span>Benchmark_Append-8 平均每秒執行的操作次數約為：1 / (24042 ns/operation) ≈ 41593 次/s</span></li><li><span>Benchmark_Append-4 平均每秒執行的操作次數約為：1 / (30784 ns/operation) ≈ 32484 次/s</span></li><li><span>Benchmark_Append-8 平均每秒執行的操作次數約為：1 / (30966 ns/operation) ≈ 32293 次/s</span></li><li><span>Benchmark_Append-4 平均每秒執行的操作次數約為：1 / (35859 ns/operation) ≈ 27920 次/s</span></li><li><span>Benchmark_Append-8 平均每秒執行的操作次數約為：1 / (33821 ns/operation) ≈ 29550 次/s</span></li></ol><ul><li><strong>獲取數據性能估算</strong></li></ul><ol><li><span>Benchmark_Get-4 平均每秒執行的操作次數約為：1 / (921 ns/operation) ≈ &nbsp;1085776 次/s</span></li><li><span>Benchmark_Get-8 平均每秒執行的操作次數約為：1 / (636 ns/operation) ≈ &nbsp;1572327 次/s</span></li><li><span>Benchmark_Get-4 平均每秒執行的操作次數約為：1 / (1558 ns/operation) ≈ 641848 次/s</span></li><li><span>Benchmark_Get-8 平均每秒執行的操作次數約為：1 / (1296 ns/operation) ≈ 771604 次/s</span></li><li><span>Benchmark_Get-4 平均每秒執行的操作次數約為：1 / (1695 ns/operation) ≈ 589970 次/s</span></li><li><span>Benchmark_Get-8 平均每秒執行的操作次數約為：1 / (1402ns/operation) ≈ &nbsp;713266 次/s</span></li><li><span>Benchmark_Get-4 平均每秒執行的操作次數約為：1 / (1865 ns/operation) ≈ 536000 次/s</span></li><li><span>Benchmark_Get-8 平均每秒執行的操作次數約為：1 / (1730 ns/operation) ≈ 578034 次/s</span></li></ol><p style="text-align:start">&nbsp;</p><p style="text-align:start"><strong>寫入數據性能</strong></p><ul><li>在不同併發條件下，WFS 存儲引擎的寫入操作平均每秒執行次數介於約 3 萬次/s 至 4 萬次/s 之間。</li></ul><p style="text-align:start"><strong>讀取數據性能</strong></p><ul><li>WFS 存儲引擎讀數據操作的性能更為出色，平均每秒執行次數在<span>&nbsp;</span><span>53 萬</span>次/s 至<span>&nbsp;</span><span>150 萬</span>次/s 之間。</li></ul><p style="text-align:start">&nbsp;</p><p style="text-align:start"><strong>&nbsp; &nbsp;請注意：測試結果與環境有很大關係。</strong><span><strong>實際應用中的性能可能會受到多種因素的影響，如系統負載、網絡狀況、磁盤 I/O 性能等，實際部署時需要根據具體環境進行驗證和調優。</strong></span></p><hr><p><strong>wfs 內置圖片基礎處理</strong></p><p style="text-align:left"><strong>原圖: &nbsp;<span>&nbsp;</span></strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftlnet.top%2Fstatics%2Ftest%2Fwfs_test.jpg" target="_blank">https://tlnet.top/statics/test/wfs_test.jpg</a></p><p style="text-align:left"><img alt="" src="https://tlnet.top/statics/test/wfs_test.jpg" referrerpolicy="no-referrer"></p><p style="text-align:left">&nbsp;</p><ul><li><span>裁剪正中部分，等比縮小生成 200x200 縮略圖 &nbsp;<span>&nbsp;</span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftlnet.top%2Fstatics%2Ftest%2Fwfs_test.jpg%3FimageView2%2F1%2Fw%2F200%2Fh%2F200" target="_blank">https://tlnet.top/statics/test/wfs_test.jpg?imageView2/1/w/200/h/200</a></li></ul><p style="text-align:left"><img alt="" src="https://tlnet.top/statics/test/wfs_test.jpg?imageView2/1/w/200/h/200" referrerpolicy="no-referrer"></p><p style="text-align:left">&nbsp;</p><ul><li><span>寬度固定為 200px，高度等比縮小，生成寬 200 縮略圖 &nbsp; &nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftlnet.top%2Fstatics%2Ftest%2Fwfs_test.jpg%3FimageView2%2F2%2Fw%2F200" target="_blank">https://tlnet.top/statics/test/wfs_test.jpg?imageView2/2/w/200</a></li></ul><p style="text-align:left"><img alt="" src="https://tlnet.top/statics/test/wfs_test.jpg?imageView2/2/w/200" referrerpolicy="no-referrer"></p><p style="text-align:left">&nbsp;</p><ul><li><span>高度固定為 200px，寬度等比縮小，生成高 200 縮略圖 &nbsp; &nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftlnet.top%2Fstatics%2Ftest%2Fwfs_test.jpg%3FimageView2%2F2%2Fh%2F200" target="_blank">https://tlnet.top/statics/test/wfs_test.jpg?imageView2/2/h/200</a></li></ul><p style="text-align:left"><img alt="" src="https://tlnet.top/statics/test/wfs_test.jpg?imageView2/2/h/200" referrerpolicy="no-referrer"></p><p style="text-align:left">&nbsp;</p><ul><li>高斯模糊，生成模糊程度<span>Sigma 為 5，寬 200 的圖片 &nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftlnet.top%2Fstatics%2Ftest%2Fwfs_test.jpg%3FimageView2%2F2%2Fw%2F200%2Fblur%2F5" target="_blank">https://tlnet.top/statics/test/wfs_test.jpg?imageView2/2/w/200/blur/5</a></li></ul><p style="text-align:left"><img alt="" src="https://tlnet.top/statics/test/wfs_test.jpg?imageView2/2/w/200/blur/5" referrerpolicy="no-referrer"></p><p style="text-align:left">&nbsp;</p><ul><li>灰色圖片，生成灰色，<span>寬 200 的</span>圖片 &nbsp;<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftlnet.top%2Fstatics%2Ftest%2Fwfs_test.jpg%3FimageView2%2F2%2Fw%2F200%2Fgrey%2F1" target="_blank">https://tlnet.top/statics/test/wfs_test.jpg?imageView2/2/w/200/grey/1</a></li></ul><p style="text-align:left"><img alt="" src="https://tlnet.top/statics/test/wfs_test.jpg?imageView2/2/w/200/grey/1" referrerpolicy="no-referrer"></p><p style="text-align:left">&nbsp;</p><ul><li>顏色反轉，生成顏色相反，寬 200 的圖片 &nbsp;<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftlnet.top%2Fstatics%2Ftest%2Fwfs_test.jpg%3FimageView2%2F2%2Fw%2F200%2Finvert%2F1" target="_blank">https://tlnet.top/statics/test/wfs_test.jpg?imageView2/2/w/200/invert/1</a></li></ul><p style="text-align:left"><img alt="" src="https://tlnet.top/statics/test/wfs_test.jpg?imageView2/2/w/200/invert/1" referrerpolicy="no-referrer"></p><p style="text-align:left">&nbsp;</p><ul><li>水平反轉 ，生成水平反轉，寬 200 的圖片 &nbsp;<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftlnet.top%2Fstatics%2Ftest%2Fwfs_test.jpg%3FimageView2%2F2%2Fw%2F200%2Ffliph%2F1" target="_blank">https://tlnet.top/statics/test/wfs_test.jpg?imageView2/2/w/200/fliph/1</a></li></ul><p style="text-align:left"><img alt="" src="https://tlnet.top/statics/test/wfs_test.jpg?imageView2/2/w/200/fliph/1" referrerpolicy="no-referrer"></p><p style="text-align:left">&nbsp;</p><ul><li>垂直反轉 ，生成垂直反轉，寬 200 的圖片 &nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftlnet.top%2Fstatics%2Ftest%2Fwfs_test.jpg%3FimageView2%2F2%2Fw%2F200%2Fflipv%2F1" target="_blank"><span>&nbsp;</span>https://tlnet.top/statics/test/wfs_test.jpg?imageView2/2/w/200/flipv/1</a></li></ul><p style="text-align:left"><img alt="" src="https://tlnet.top/statics/test/wfs_test.jpg?imageView2/2/w/200/flipv/1" referrerpolicy="no-referrer"></p><p style="text-align:left">&nbsp;</p><ul><li>圖片旋轉 ，生成向左旋轉 45 度，寬 200 的圖片 &nbsp;<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftlnet.top%2Fstatics%2Ftest%2Fwfs_test.jpg%3FimageView2%2F2%2Fw%2F200%2Frotate%2F45" target="_blank">https://tlnet.top/statics/test/wfs_test.jpg?imageView2/2/w/200/rotate/45</a></li></ul><p style="text-align:left"><img alt="" src="https://tlnet.top/statics/test/wfs_test.jpg?imageView2/2/w/200/rotate/45" referrerpolicy="no-referrer"></p><p style="text-align:left">&nbsp;</p><ul><li>格式轉換 ，生成向左旋轉 45，寬 200 的 png 圖片 &nbsp;<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftlnet.top%2Fstatics%2Ftest%2Fwfs_test.jpg%3FimageView2%2F2%2Fw%2F200%2Frotate%2F45%2Fformat%2Fpng" target="_blank">https://tlnet.top/statics/test/wfs_test.jpg?imageView2/2/w/200/rotate/45/format/png</a></li></ul><p style="text-align:left"><img alt="" src="https://tlnet.top/statics/test/wfs_test.jpg?imageView2/2/w/200/rotate/45/format/png" referrerpolicy="no-referrer"></p><p><strong>圖片處理方式見<span>&nbsp;</span></strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftlnet.top%2Fwfsdoc" target="_blank"><strong>wfs 使用文檔</strong></a></p><hr><p><strong>WFS 的使用簡單説明</strong></p><ol><li>執行文件下載地址：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftlnet.top%2Fdownload" target="_blank">https://tlnet.top/download</a></li><li>啓動：</li></ol><p style="text-align:left">&nbsp; &nbsp; &nbsp; &nbsp;<span>&nbsp;</span><strong>./linux101_wfs &nbsp; &nbsp; -c &nbsp; &nbsp;wfs.json</strong></p><p style="text-align:left">3. &nbsp; wfs.json 配置説明</p><pre><code>{
    "listen": 4660,     
    "opaddr": ":6802",
    "webaddr": ":6801",
    "memLimit": 128,
    "data.maxsize": 10000,
    "filesize": 100,
}</code></pre><p style="text-align:left"><strong>屬性説明：</strong></p><ul><li><span>listen &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;http/https 資源獲取服務監聽端口</span></li><li><span>opaddr &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; thrift 後端資源操作地址</span></li><li><span>webaddr &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;管理後台服務地址</span></li><li><span>memLimit &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;wfs 內存最大分配 (單位：MB)</span></li><li><span>data.maxsize &nbsp; &nbsp; &nbsp;wfs 上傳圖片大小上限 (單位：KB)</span></li><li><span>filesize &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;wfs 後端歸檔文件大小上限 (單位：MB)</span></li></ul><p><strong>wfs 使用詳細説明請參考<span>&nbsp;</span></strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftlnet.top%2Fwfsdoc" target="_blank"><strong>wfs 使用文檔</strong></a></p><hr><p><strong>WFS 如何存儲，刪除數據</strong></p><p><strong>1. http/https</strong></p><p>curl -F "file=@1.jpg" &nbsp;"http://127.0.0.1:6801/append/test/1.jpg" -H "username:admin" -H "password:123"</p><p>curl -X DELETE "http://127.0.0.1:6801/delete/test/1.jpg" -H "username:admin" -H "password:123"</p><p><strong>2. 使用客户端</strong></p><p>&nbsp; &nbsp; 以下是 java 客户端，示例</p><pre><code>    public void append() throws WfsException, IOException {
        String dir = System.getProperty("user.dir") + "/src/test/java/io/github/donnie4w/wfs/test/";
        WfsClient wc = newClient();
        WfsFile wf = new WfsFile();
        wf.setName("test/java/1.jpeg");
        wf.setData(Files.readAllBytes(Paths.get(dir + "1.jpeg")));
        wc.append(wf);
    }</code></pre><p style="text-align:left"><strong>3. 通過管理後台上傳/刪除文件</strong></p><h4>&nbsp;</h4><hr><h4><strong>WFS 管理後台</strong></h4><p><strong>默認搜索</strong></p><p><img alt="" src="https://tlnet.top/f/1709440477_578.jpg" width="1264" referrerpolicy="no-referrer"></p><p>&nbsp;</p><p><strong>前綴搜索</strong></p><p><img alt="" src="https://tlnet.top/f/1709440507_7665.jpg" width="1264" referrerpolicy="no-referrer"></p><p>&nbsp;</p><p><strong>碎片整理</strong></p><p><img alt="" src="https://tlnet.top/f/1709440627_3436.jpg" width="1264" referrerpolicy="no-referrer"></p><p>&nbsp;</p><p>&nbsp;</p><hr><h4>WFS 的分佈式部署方案</h4><p><span>wfs0.x 版本到 wfs1.x 版本的設計變更説明：</span>wfs0.x 版本實現了分佈式存儲，這使得系統能夠跨多個服務器分散存儲和處理數據，具備水平擴展能力和數據備份冗餘能力，但是在實際應用中也暴露出一些問題，如元數據重複存儲導致空間利用率不高。對於小文件的處理效率低，因為在節點間頻繁轉發傳輸，造成系統資源消耗增加。</p><p style="text-align:start">wfs1.x 版本的目標在於通過精簡架構、聚焦性能提升來滿足特定應用場景的需求，而在分佈式部署方面的考量則交由用户藉助第三方工具和服務來實現。</p><ol><li>wfs1.x 不直接支持分佈式存儲，但為了應對大規模部署和高可用需求，推薦採用如 Nginx 這樣的負載均衡服務，通過合理的資源配置和定位策略，可以在邏輯上模擬出類似分佈式的效果。也就是説，雖然每個 wfs 實例都是單機存儲，但可以通過外部服務實現多個 wfs 實例之間的請求分發，從而達到業務層面的「分佈式部署」。如何實現 wfs 的「分佈式部署」可以參考文章《<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftlnet.top%2Farticle%2F22425158" target="_blank">WFS 的分佈式部署方案</a>》</li><li>必須説明的是，超大規模數據存儲業務中，分佈式系統確實具有顯著優勢，包括動態資源調配、數據分塊存儲、多節點備份等高級功能。然而，分佈式採用負載均衡策略的 wfs1.x，則需要用户自行採取措施保證數據安全性和高可用性，例如定期備份數據、搭建負載均衡集羣，並且在應用程序中配置並設計路由規則，確保數據能正確地路由到目標節點。</li><li>wfs 的優勢在於其簡潔性和高效性。實際上，並非任何文件存儲業務都需要複雜的分佈式文件系統，相反，大部分業務尚未達到超大規模的量級，而使用複雜的分佈式文件系統可能會帶來與之不相匹配的過多<span>額外成本和運維難度</span>。<span>目前的 wfs 及其相應的分佈式部署策略已經能夠較好地滿足各種業務需求</span>。</li></ol></div>
                                    ]]>
            </description>
            <pubDate>Thu, 07 Mar 2024 03:58:52 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/281930/wfs-go-1-0-1-released</guid>
            <link>https://www.oschina.net/news/281930/wfs-go-1-0-1-released</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Syncthing 1.27.4 發佈，連續文件同步工具]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff; color:#333333">Syncthing&nbsp;是一個免費開源的工具，它能在你的各個網絡計算機間同步文件 / 文件夾，它的同步數據是直接從一個系統中直接傳輸到另一個系統的，並且它是安全且私密的。</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="background-color:#ffffff; color:#333333">Syncthing 1.27.4 現已發佈，具體更新內容如下：</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>Bug 修復</strong></p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsyncthing%2Fsyncthing%2Fissues%2F9369" target="_blank">#9369</a>：filesystem watcher 忽略無效 UTF-8 匹配時的&nbsp;<span style="background-color:#ffffff; color:#1f2328">Panic</span></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsyncthing%2Fsyncthing%2Fissues%2F9435" target="_blank">＃9435</a>：syncthing 應能&nbsp;cgroup aware</li></ul><p style="text-align:start"><strong style="color:#333333"><span style="background-color:#ffffff; color:#1f2328">Enhancements</span></strong></p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsyncthing%2Fsyncthing%2Fissues%2F9339" target="_blank">＃9339</a>：File system watcher 應該在更多情況下跳過忽略的目錄</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsyncthing%2Fsyncthing%2Fissues%2F9357" target="_blank">#9357</a>：在 Linux 容器中設置<code>GOMAXPROCS</code>配額感知</li></ul><p style="text-align:start"><strong style="color:#333333"><span style="background-color:#ffffff; color:#1f2328">Other issues</span></strong></p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsyncthing%2Fsyncthing%2Fissues%2F9386" target="_blank">#9386</a>：folder_sendrecv.go 中的拼寫錯誤引用了不存在的<code>dbUpdateShourtcutFile</code>類型</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsyncthing%2Fsyncthing%2Fissues%2F9389" target="_blank">#9389</a>：typo：<code>Complection</code><span style="background-color:#ffffff; color:#1f2328"><span>&nbsp;</span>→<span>&nbsp;</span></span><code>Completion</code><span style="background-color:#ffffff; color:#1f2328"><span>&nbsp;</span>?</span></li></ul><p>更新説明：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsyncthing%2Fsyncthing%2Freleases%2Ftag%2Fv1.27.4" target="_blank">https://github.com/syncthing/syncthing/releases/tag/v1.27.4</a></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 07 Mar 2024 03:13:52 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/281915/syncthing-1-27-4-released</guid>
            <link>https://www.oschina.net/news/281915/syncthing-1-27-4-released</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[【比較 ORM 操作數據】總結]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h4>寫在最後</h4><p>經過將近一週時間的框架收集、學習、實驗、編碼、測試市面上常見的 ORM 框架，過程中拜讀了很多作者的博文、樣例，學習很多收穫很多。 重新梳理下整理的框架：mybatis-plus、lazy、sqltoy、mybatis-flex、easy-query、mybatis-mp、jpa、dbvisitor、beetlsql</p><p>下面從一下幾點出發作出總結</p><ul><li>文檔方面：學習過程中 mybatis-plus、jpa 提供的文檔資料是比較全和晚上，經得住市場的考驗</li><li>技術方面：beetlsql、easy-query、mybatis 系列，三類框架都已經支持 spring 和 solon 生態，其技術架構設計可以推薦大家學習</li><li>併發方面：jpa、db_visitor 還需要開發時候深度優化處理</li><li>大數據存儲方面： Lazy 具有一定優勢，大數據查詢方面：sqltoy 反射處理的比較優秀</li></ul><p>以上是個人整理的觀點，如果大家有不同的想法和意見可以在<a href="https://gitee.com/wujiawei1207537021">gitee</a>或者個人博客留言<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.csdn.net%2Fqq_22903677%3Ftype%3Dblog" target="_blank">CSDN</a></p><p>細節數據對比（一萬以內基本相差不大）</p><ul><li>細節數據對比，數據屬於併發行測試數據，如果測試總數是一百，那麼會執行一百次 batchStory，一百次 findPage 每次執行的條數在之前數據的基礎上+1</li></ul><p>從形成的折線圖看（具體趨勢看排名與測試結果）</p><ul><li>存儲性能對比: lazy、mybatis-flex、mybatis-mp、mybatis、easy-query、sqltoy、beetlSql 更適合併發性數據存儲。jpa、db_visitor 處理耗時較長</li><li>分頁查詢性能對比: lazy、mybatis-flex、mybatis-mp、mybatis、easy-query、sqltoy、db_visitor、beetlSql 都比較穩定。jpa 處理時間明顯起伏</li></ul><p><img height="679" src="https://oscimg.oschina.net/oscnet/up-108d2b6dbb2cbdc219a75ca4040c5d2ab0a.png" width="1406" referrerpolicy="no-referrer"></p><p><img height="698" src="https://oscimg.oschina.net/oscnet/up-0738f46c7c49b88bb0b6c58ca71c33372cd.png" width="1402" referrerpolicy="no-referrer"></p><p>批量保存：</p><ul><li>一萬條數據以內 lazy、mybatis-flex、mybatis-mp、mybatis、easy-query、sqltoy、beetlSql、jpa、db_visitor 性能趨於一致</li><li>十萬數據時，處理時間由快到慢依次是: lazy、mybatis-flex、mybatis-mp、mybatis、easy-query、sqltoy、beetlSql、db_visitor、jpa，其中 db_visitor、jpa 處理時間明顯起伏</li></ul><p>分頁查詢：</p><ul><li>一萬條數據以內，幾款 ORM 均保持在 200 毫秒內</li><li>十萬數據時，處理時間由快到慢依次是: sqltoy、db_visitor、easy-query、lazy、beetlSql、mybatis、mybatis-mp、jpa、mybatis-flex</li><li>&nbsp;</li></ul><h3>快速數據對比 (大數據曲線圖)</h3><p><img height="674" src="https://oscimg.oschina.net/oscnet/up-b50ab90449379aba424545ef66277f5b0ce.png" width="1391" referrerpolicy="no-referrer"></p><p><img height="691" src="https://oscimg.oschina.net/oscnet/up-15d9a6ed061150752d3225078a5b7199560.png" width="1402" referrerpolicy="no-referrer"></p><h4><a href="https://gitee.com/wujiawei1207537021/wu-compare-orm-demo">當前項目地址</a></h4><h4><a href="https://gitee.com/wujiawei1207537021/wu-framework-parent/tree/master/wu-inner-integration/wu-database-parent">lazy-orm 地址</a></h4><h4><a href="https://gitee.com/baomidou/mybatis-plus">mybatis 地址</a></h4><h4><a href="https://gitee.com/sagacity/sagacity-sqltoy">sqltoy 地址</a></h4><h4><a href="https://gitee.com/mybatis-flex/mybatis-flex">mybatis-flex 地址</a></h4><h4><a href="https://gitee.com/xuejm/easy-query">easy-query 地址</a></h4><h4><a href="https://gitee.com/mybatis-mp/mybatis-mp">mybatis-mp 地址</a></h4><h4><a href="https://gitee.com/zycgit/dbvisitor">dbvisitor 地址</a></h4><h4><a href="https://gitee.com/xiandafu/beetlsql">beetlsql 地址</a></h4></div>
                                    ]]>
            </description>
            <pubDate>Thu, 07 Mar 2024 03:04:52 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/281908</guid>
            <link>https://www.oschina.net/news/281908</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[🎉 領域模型即服務 | Wow 2.16.16 發佈]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><a href="https://ahoowang.gitee.io/wow/"><img alt="Wow:基於 DDD、EventSourcing 的現代響應式 CQRS 架構微服務開發框架" src="https://static.oschina.net/uploads/img/202312/13135012_Zb9v.svg" width="150" referrerpolicy="no-referrer"></a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FAhoo-Wang%2FWow%2Fblob%2Fmvp%2FLICENSE"><img alt="License" src="https://img.shields.io/badge/license-Apache%202-4EB1BA.svg" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FAhoo-Wang%2FWow%2Freleases"><img alt="GitHub release" src="https://img.shields.io/github/release/Ahoo-Wang/Wow.svg" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fmaven-badges.herokuapp.com%2Fmaven-central%2Fme.ahoo.wow%2Fwow-core"><img alt="Maven Central" src="https://maven-badges.herokuapp.com/maven-central/me.ahoo.wow/wow-core/badge.svg" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fapp.codacy.com%2Fgh%2FAhoo-Wang%2FWow%2Fdashboard%3Futm_source%3Dgh%26utm_medium%3Dreferral%26utm_content%3D%26utm_campaign%3DBadge_grade"><img alt="Codacy Badge" src="https://app.codacy.com/project/badge/Grade/cfc724df22db4f9387525258c8a59609" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fcodecov.io%2Fgh%2FAhoo-Wang%2FWow"><img alt="codecov" src="https://codecov.io/gh/Ahoo-Wang/Wow/branch/main/graph/badge.svg?token=uloJrLoQir" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FAhoo-Wang%2FWow"><img alt="Integration Test Status" src="https://github.com/Ahoo-Wang/Wow/actions/workflows/integration-test.yml/badge.svg" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FKotlinBy%2Fawesome-kotlin"><img alt="Awesome Kotlin Badge" src="https://kotlin.link/awesome-kotlin.svg" referrerpolicy="no-referrer"></a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><strong>領域驅動</strong><span>&nbsp;</span>|<span>&nbsp;</span><strong>事件驅動</strong><span>&nbsp;</span>|<span>&nbsp;</span><strong>測試驅動</strong><span>&nbsp;</span>|<span>&nbsp;</span><strong>聲明式設計</strong><span>&nbsp;</span>|<span>&nbsp;</span><strong>響應式編程</strong><span>&nbsp;</span>|<span>&nbsp;</span><strong>命令查詢職責分離</strong><span>&nbsp;</span>|<span>&nbsp;</span><strong>事件溯源</strong></p><blockquote><p style="margin-left:0; margin-right:0"><strong>官方文檔：</strong><img alt="👉" height="14" src="https://cn-assets.gitee.com/assets/emoji/point_right-8d392cf32998e3bca12bb7b4ee10dae0.png" width="14" referrerpolicy="no-referrer"><span>&nbsp;</span><a href="https://ahoowang.gitee.io/wow/" target="_blank">https://ahoowang.gitee.io/wow/</a><span>&nbsp;</span><img alt="👈" height="14" src="https://cn-assets.gitee.com/assets/emoji/point_left-4570b6929b8880ab2e8b8031007fef18.png" width="14" referrerpolicy="no-referrer"></p></blockquote><h2>更新內容</h2><blockquote><p style="margin-left:0; margin-right:0"><a href="https://ahoowang.gitee.io/wow/guide/query.html" target="_blank">https://ahoowang.gitee.io/wow/guide/query.html</a></p></blockquote><blockquote><p style="margin-left:0; margin-right:0"><strong>Wow</strong><span>&nbsp;</span>除了為命令 (<code>Command</code>) 自動生成了<span>&nbsp;</span><em>OpenAPI</em><span>&nbsp;</span>端點，另外還提供了查詢 (<code>Query</code>)<span>&nbsp;</span><em>OpenAPI</em><span>&nbsp;</span>端點。 這意味着開發人員通常只需專注於編寫領域模型，即可完成服務開發，而無需費心處理查詢邏輯的實現，極大提升了開發效率。</p></blockquote><ul><li>特性 (query): 新增<span>&nbsp;</span><code>SnapshotQueryServiceRegistrar</code><span>&nbsp;</span>以支持自動將所有本地聚合根查詢服務註冊到<span>&nbsp;</span><code>Spring</code><span>&nbsp;</span>容器中。</li><li>特性 (query): 為<span>&nbsp;</span><code>SnapshotQueryService</code><span>&nbsp;</span>API 添加屬性<span>&nbsp;</span><code>NamedAggregate</code></li><li>重構 (compensation): 使用<span>&nbsp;</span><code>QueryDSL</code><span>&nbsp;</span>替換<span>&nbsp;</span><code>MongoExecutionFailedQuery</code></li><li>依賴 (build): 升級<span>&nbsp;</span><code>org.testcontainers:testcontainers-bom</code><span>&nbsp;</span>版本，到<span>&nbsp;</span><code>v1.19.7</code></li></ul><h3>查詢服務註冊器</h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><code>SnapshotQueryServiceRegistrar</code><span>&nbsp;</span>用於自動將所有本地聚合根查詢服務註冊到<span>&nbsp;</span><code>Spring</code><span>&nbsp;</span>容器中。 開發者可以通過指定的<span>&nbsp;</span><code>Bean Name</code><span>&nbsp;</span>從<span>&nbsp;</span><code>BeanFactory</code><span>&nbsp;</span>中獲取相應的<span>&nbsp;</span><code>SnapshotQueryService</code>。</p><blockquote><p style="margin-left:0; margin-right:0"><code>Bean Name</code><span>&nbsp;</span>命名規則：<code>聚合根名稱 + ".SnapshotQueryService"</code>。</p></blockquote><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">使用案例：</p><blockquote><p style="margin-left:0; margin-right:0">構造函數注入</p></blockquote><div><pre><code>class OrderService(
    @Qualifier("example.order.SnapshotQueryService")
    private val queryService: SnapshotQueryService&lt;OrderState&gt;
) {
    fun getById(id: String): Mono&lt;OrderState&gt; {
        return condition {
            id(id)
        }.single(queryService).toState()
    }
}
</code></pre></div><blockquote><p style="margin-left:0; margin-right:0">字段注入</p></blockquote><div><pre><code>@Qualifier("example.order.SnapshotQueryService")
@Autowired
private lateinit var queryService: SnapshotQueryService&lt;OrderState&gt;
</code></pre></div><h3>操作符</h3><table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:1px; border:none; box-sizing:border-box; color:#444444; display:block; font-family:-apple-system,&quot;system-ui&quot;,&quot;Apple Color Emoji&quot;,&quot;Segoe UI Emoji&quot;,&quot;Segoe UI Symbol&quot;,&quot;Segoe UI&quot;,&quot;PingFang SC&quot;,&quot;Hiragino Sans GB&quot;,&quot;Microsoft YaHei&quot;,&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:14px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; line-height:inherit; margin:0px 0px 20px; max-width:100%; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:816.25px; word-break:keep-all; word-spacing:0px"><tbody><tr><th>操作符</th><th>描述</th></tr></tbody><tbody><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">AND</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">對提供的條件列表執行邏輯與</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">OR</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">對提供的條件列表執行邏輯或</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">ID</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">匹配<code>id</code>字段值等於指定值的所有文檔</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">IDS</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">匹配<code>id</code>字段值等於指定值列表中的任何值的所有文檔</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">TENANT_ID</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">匹配<code>tenantId</code>字段值等於指定值的所有文檔</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">DELETED</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">匹配<code>deleted</code>字段值等於指定值的所有文檔</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">ALL</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">匹配所有文檔</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">EQ</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">匹配字段名稱值等於指定值的所有文檔</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">NE</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">匹配字段名稱值不等於指定值的所有文檔</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">GT</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">匹配給定字段的值大於指定值的所有文檔</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">LT</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">匹配給定字段的值小於指定值的所有文檔</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">GTE</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">匹配給定字段的值大於或等於指定值的所有文檔</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">LTE</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">匹配給定字段的值小於或等於指定值的所有文檔</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">CONTAINS</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">匹配給定字段的值包含指定值的所有文檔</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">IN</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">匹配字段值等於指定值列表中的任何值的所有文檔</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">NOT_IN</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">匹配字段值不等於任何指定值或不存在的所有文檔</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">BETWEEN</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">匹配字段值在指定值範圍區間的所有文檔</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">ALL_IN</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">匹配所有文檔，其中字段值是包含所有指定值的數組</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">STARTS_WITH</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">匹配字段值以指定字符串開頭的文檔</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">ENDS_WITH</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">匹配字段值以指定字符串結尾的文檔</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">ELEM_MATCH</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">條件與包含數組字段的所有文檔相匹配，其中數組中至少有一個成員與給定的條件匹配。</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">NULL</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">匹配字段值在指定值為<code>null</code>的所有文檔</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">NOT_NULL</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">匹配字段值在指定值不為<code>null</code>的所有文檔</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">TRUE</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">匹配字段值在指定值為<code>true</code>的所有文檔</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">FALSE</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">匹配字段值在指定值為<code>false</code>的所有文檔</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">RAW</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">原始操作符，將條件值直接作為原始的數據庫查詢條件</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">TODAY</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">匹配<em>數值類型時間戳</em>字段在今天範圍區間的所有文檔。比如：<code>today</code><span>&nbsp;</span>為<span>&nbsp;</span><code>2024-06-06</code>，匹配範圍<span>&nbsp;</span><code>2024-06-06 00:00:00.000</code><span>&nbsp;</span>~<span>&nbsp;</span><code>2024-06-06 23:59:59.999</code><span>&nbsp;</span>的所有文檔</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">TOMORROW</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">匹配<em>數值類型時間戳</em>字段在昨天範圍區間的所有文檔。比如：<code>today</code><span>&nbsp;</span>為<span>&nbsp;</span><code>2024-06-06</code>，匹配範圍<span>&nbsp;</span><code>2024-06-05 00:00:00.000</code><span>&nbsp;</span>~<span>&nbsp;</span><code>2024-06-05 23:59:59.999</code><span>&nbsp;</span>的所有文檔</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">THIS_WEEK</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">匹配<em>數值類型時間戳</em>字段在本週範圍區間的所有文檔</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">NEXT_WEEK</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">匹配<em>數值類型時間戳</em>字段在下週範圍區間的所有文檔</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">LAST_WEEK</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">匹配<em>數值類型時間戳</em>字段在上週範圍區間的所有文檔</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">THIS_MONTH</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">匹配<em>數值類型時間戳</em>字段在本月範圍區間的所有文檔。比如：<code>today</code><span>&nbsp;</span>:<span>&nbsp;</span><code>2024-06-06</code>，匹配範圍 :<span>&nbsp;</span><code>2024-06-01 00:00:00.000</code><span>&nbsp;</span>~<span>&nbsp;</span><code>2024-06-30 23:59:59.999</code><span>&nbsp;</span>的所有文檔</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">LAST_MONTH</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">匹配<em>數值類型時間戳</em>字段在上月範圍區間的所有文檔。比如：<code>today</code><span>&nbsp;</span>:<span>&nbsp;</span><code>2024-06-06</code>，匹配範圍 :<span>&nbsp;</span><code>2024-05-01 00:00:00.000</code><span>&nbsp;</span>~<span>&nbsp;</span><code>2024-05-31 23:59:59.999</code><span>&nbsp;</span>的所有文檔</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">RECENT_DAYS</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">匹配<em>數值類型時間戳</em>字段在指定值最近天數範圍區間的所有文檔。比如：<code>today</code><span>&nbsp;</span>:<span>&nbsp;</span><code>2024-06-06</code>，近三天，匹配範圍 :<span>&nbsp;</span><code>2024-06-04 00:00:00.000</code><span>&nbsp;</span>~<span>&nbsp;</span><code>2024-06-06 23:59:59.999</code><span>&nbsp;</span>的所有文檔。即 : 今天、昨天、前天</td></tr></tbody></table><h3>QueryDsl</h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">通過<span>&nbsp;</span><code>QueryDsl</code>，您可以輕鬆構建複雜的查詢條件，例如：</p><div><pre><code>pagedQuery {
    pagination {
        index(1)
        size(10)
    }
    sort {
        "field1".asc()
    }
    condition {
        all()
        not {
           "field1" eq "value1"
           "field2" ne "value2"
        }
        "filed3" gt 1
        "field4" lt 1
        "field5" gte 1
        "field6" lte 1
        "field7" like "value7"
        "field8" isIn listOf("value8")
        "field9" notIn listOf("value9")
        "field10" between (1 to 2)
        "field11" all listOf("value11")
        "field12" startsWith "value12"
        "field13" elemMatch {
            "field14" eq "value14"
        }
        "field15".isNull()
        "field16".notNull()
        "field17".isTrue()
        "field18".isFalse()
        and {
            "field3" eq "value3"
            "field4" eq "value4"
        }
        or {
            "field3" eq "value3"
            "field4" eq "value4"
        }
    }
}
</code></pre></div><h3>OpenAPI</h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">以下是一個示例<span>&nbsp;</span><code>curl</code><span>&nbsp;</span>命令，用於執行查詢：</p><div><pre><code>  curl -X 'POST' \
  'http://localhost:8080/execution_failed/snapshot/pagination' \
  -H 'accept: application/json' \
  -H 'Content-Type: application/json' \
  -d '{
  "sort": [
    {
      "field": "_id",
      "direction": "DESC"
    }
  ],
  "pagination": {
    "index": 1,
    "size": 10
  },
  "condition": {
    "field": "",
    "operator": "AND",
    "value": "",
    "children": [
      {
        "field": "state.recoverable",
        "operator": "NE",
        "value": "UNRECOVERABLE",
        "children": []
      },
      {
        "field": "state.status",
        "operator": "NE",
        "value": "SUCCEEDED",
        "children": []
      },
      {
        "field": "state.isBelowRetryThreshold",
        "operator": "EQ",
        "value": false,
        "children": []
      }
    ]
  }
}'
</code></pre></div><h3>TypeScript</h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">在<span>&nbsp;</span><em>TypeScript</em><span>&nbsp;</span>中，您可以使用<span>&nbsp;</span><code>Conditions</code><span>&nbsp;</span>類來構建複雜的查詢條件，例如：</p><div><pre><code>Conditions.and(
    [
        Conditions.ne(RECOVERABLE, UNRECOVERABLE),
        Conditions.ne(STATUS, SUCCEEDED),
        Conditions.eq(IS_BELOW_RETRY_THRESHOLD, false)
    ]
)
</code></pre></div><div>
 &nbsp;
</div><h2>簡介</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><em>Wow</em><span>&nbsp;</span>是一個基於領域驅動設計和事件溯源的現代響應式<span>&nbsp;</span><em>CQRS</em><span>&nbsp;</span>微服務開發框架，歷經多年生產環境驗證。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">旨在幫助開發者構建現代化的、高性能且易於維護的微服務應用程序，充分發揮領域驅動設計和事件溯源等模式優勢的同時降低應用的複雜性以及實踐成本。</p><blockquote><p style="margin-left:0; margin-right:0">值得一提的是，領域驅動設計和事件溯源並非微服務架構的專屬，<em>Wow</em><span>&nbsp;</span>框架不僅適用於微服務開發，同樣也可用於構建基於領域驅動設計的單體應用程序。</p></blockquote><h2>快速開始</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://ahoowang.gitee.io/wow/guide/getting-started.html">使用 Wow 項目模板快速創建基於 Wow 框架的 DDD 項目</a></p><h2>特性概覽</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-Features" src="https://gitee.com/AhooWang/Wow/raw/main/documentation/docs/public/images/Features.png" referrerpolicy="no-referrer"></p><h2>架構圖</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-Architecture" src="https://gitee.com/AhooWang/Wow/raw/main/documentation/docs/public/images/Architecture.svg" referrerpolicy="no-referrer"></p><h2>背景</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">隨着業務的發展和複雜性的增加，傳統的架構和開發方式逐漸顯露出瓶頸。<em>領域驅動設計</em>和<em>事件溯源</em>等理念在提高系統設計的靈活性和可維護性方面表現出色，但在實踐中常常需要面對複雜性和學習曲線的挑戰。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><em>Wow</em><span>&nbsp;</span>框架的目標是以簡單易用的方式將領域驅動設計和事件溯源等理念融入到微服務應用開發中，降低開發者的學習成本，提高開發效率。 通過提供現代響應式的<span>&nbsp;</span><em>CQRS</em><span>&nbsp;</span>架構和相關組件，<em>Wow</em><span>&nbsp;</span>框架旨在讓開發者更專注於業務邏輯的實現，而不必過多關心底層技術細節。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">經過多年的實踐和不斷的演進，<em>Wow</em><span>&nbsp;</span>框架在生產環境中得到了驗證，積累了豐富的經驗。這些經驗和反饋不僅豐富了框架的功能和性能，也為持續的改進和優化提供了寶貴的指導。</p><h2>對於開發者而言，<em>Wow</em><span>&nbsp;</span>框架意味着什麼？</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">我曾告誡我的團隊：如果我們過於依賴<em>數據驅動設計</em>而忽視<em>領域驅動設計</em>，我們最終將淪為<span>&nbsp;</span><em>CRUD</em><span>&nbsp;</span>工程師。</p><blockquote><p style="margin-left:0; margin-right:0"><em>CRUD</em><span>&nbsp;</span>工程師的競爭力和可替代性可想而知，這或許是為何會有<span>&nbsp;</span><em>35</em><span>&nbsp;</span>歲效應，企業顯然更傾向於招募沒有太多生活羈絆、更加廉價的<span>&nbsp;</span><em>25</em><span>&nbsp;</span>歲<span>&nbsp;</span><em>CRUD</em><span>&nbsp;</span>工程師。</p></blockquote><h3>業務價值</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">軟件系統的核心價值體現在業務價值上，研發人員不應只關注技術實現上，而是應該更多地關注業務價值的實現。 這其中的好處顯而易見，當你開發完一個業務系統之後，你將變成一個業務專家，甚至比跟你合作的領域專家還要專業，因為你需要洞察業務細節。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">使用<span>&nbsp;</span><em>Wow</em><span>&nbsp;</span>框架，意味着你將關注點放在圍繞領域模型設計上，與業務專家一起探索業務領域，而不是關注於技術實現上。 你僅需編寫領域模型，即可完成服務開發，<em>Wow</em><span>&nbsp;</span>框架自動為你準備好<span>&nbsp;</span><em>OpenAPI</em><span>&nbsp;</span>接口。</p><blockquote><p style="margin-left:0; margin-right:0">在《實現領域驅動設計》一書中，作者 Vaughn Vernon 提到：核心域才值得投入精力進行領域驅動設計， 但如果你使用<span>&nbsp;</span><em>Wow</em><span>&nbsp;</span>框架，你將發現，因為低廉開發成本、快速的開發效率，即使是次要的支撐子域也值得<span>&nbsp;</span><em>DDD</em>。</p></blockquote><h3>性能與伸縮性</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">隨着業務的發展，你需要開始思考系統的性能和伸縮性問題。 在傳統架構中，這牽扯到數據庫關係模式、分片規則等複雜問題，同時你還需要處理因數據庫分片導致的跨分片事務問題。 這時，你不得不修改你的業務代碼，以適應水平拆分後的數據庫架構。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">然而，如果你選擇使用<span>&nbsp;</span><em>Wow</em><span>&nbsp;</span>框架，你將不再需要過多關注數據庫關係模式、分片規則等問題。你的業務代碼無需變更，系統能夠輕鬆實現水平伸縮。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">你可以在這裏瞭解更多關於<span>&nbsp;</span><a href="https://ahoowang.gitee.io/wow/guide/perf-test.html">Wow 框架的性能</a>。</p><h3>讀寫分離與同步延遲</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">讀寫分離是一種極為普遍的性能優化架構模式。 然而，同步延遲問題常伴隨而來，事務執行成功後寫庫落庫成功，但讀庫同步延遲，用户刷新頁面後無法獲取最新數據，從而對用户的體驗產生影響。例如：</p><ul><li>用户發起下單事務，寫庫執行成功，但由於某種原因，讀庫同步延遲，用户刷新頁面後發現訂單未成功創建。</li><li>商家編輯完商品後，同步到<span>&nbsp;</span><em>Elasticsearch</em><span>&nbsp;</span>索引庫，但由於某種原因，同步延遲，導致商家刷新頁面後搜索不到該商品。</li></ul><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">通常，大家採用最簡便的方法，等待 1 秒後刷新頁面。 雖然這種方式能解決大多數數據同步延遲的問題，但效率不夠高。 因為大多數情況下，同步在 100 毫秒內就已完成，剩餘的 900 毫秒成了<em>浪費</em>。 然而，有時 1 秒無法完成同步，這就導致用户獲取的數據變得<strong>無效</strong>。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">使用<span>&nbsp;</span><em>Wow</em><span>&nbsp;</span>框架，你可以通過等待<span>&nbsp;</span><em>PROJECTED</em><span>&nbsp;</span>信號完成，然後再將結果返回給用户，以更為優雅和高效的方式處理數據同步延遲的問題。</p><h3>工程質量</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><em>單元測試</em>是確保代碼質量且符合預期業務需求的重要手段，但在傳統架構中，單元測試往往是一項相當困難的任務，因為你需要考慮數據庫連接、事務管理、數據清理等問題。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">使用<span>&nbsp;</span><em>Wow</em><span>&nbsp;</span>框架，你將會發現基於<span>&nbsp;</span><em>Given-&gt;When-&gt;Expect</em><span>&nbsp;</span>模式的測試套件，使得單元測試變得異常簡單。 你只需關注領域模型是否符合預期，而無需為數據庫連接等問題煩惱。</p><blockquote><p style="margin-left:0; margin-right:0">在實際應用中，我們將領域模型的單元測試覆蓋率下限閾值設置為<span>&nbsp;</span><strong>85%</strong>，也是可以輕鬆實現的。</p><p style="margin-left:0; margin-right:0">在沒有刻意要求的情況下，開發人員甚至自覺地將覆蓋率提升至<span>&nbsp;</span><strong>95%</strong>。</p><p style="margin-left:0; margin-right:0">因此，每次提交代碼都變得輕鬆自在，因為你確信你的代碼經過了充分的測試，並且真正意義上從單元測試中獲得了收益。</p></blockquote><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">在研發同級別的項目中，我們的測試團隊在系統<span>&nbsp;</span><em>API</em><span>&nbsp;</span>測試中發現，基於 Wow 框架的項目，其<span>&nbsp;</span><em>BUG</em><span>&nbsp;</span>數僅為傳統架構項目的<span>&nbsp;</span><strong>1/3</strong>。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">你可以在這裏瞭解更多關於<span>&nbsp;</span><a href="https://ahoowang.gitee.io/wow/guide/test-suite.html">Wow 單元測試套件</a>。</p><h2>對於企業而言，<em>Wow</em><span>&nbsp;</span>框架意味着什麼？</h2><h3>商業智能</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="傳統架構 VS 事件溯源" src="https://foruda.gitee.com/images/1704878807657006766/300ee974_384561.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="ETL 同步流程" src="https://foruda.gitee.com/images/1704878793697689592/5fda25c1_384561.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><em>商業智能</em>是企業決策的關鍵支持，而數據則是商業智能的分析原料。業務數據越為豐富有價值，商業智能的分析結果越準確，決策也就更加可靠。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">與傳統架構有着顯著差異，<em>Wow</em><span>&nbsp;</span>提供了實時聚合根狀態事件（<code>StateEvent</code>）和聚合命令（<code>Command</code>）作為數據分析的數據源，同時極大降低了實時<span>&nbsp;</span><em>ETL</em>（<code>Extract</code>,<span>&nbsp;</span><code>Transform</code>,<span>&nbsp;</span><code>Load</code>）的難度。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">在傳統架構中，實現實時<span>&nbsp;</span><em>ETL</em><span>&nbsp;</span>通常需要經過繁瑣的流程，包括<span>&nbsp;</span><code>DB-&gt;CDC-&gt;Process-&gt;DB</code>，而在<span>&nbsp;</span><em>Wow</em><span>&nbsp;</span>框架中，僅需一段簡單的<span>&nbsp;</span><em>SQL</em><span>&nbsp;</span>腳本即可完成這一過程。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">另外，在傳統架構中，使用<span>&nbsp;</span><em>CDC</em>（<code>MySql Binlog</code>）數據僅記錄數據的變化，缺乏明確的業務語義。進行業務分析時，需要基於數據狀態的變化推斷出業務語義，這往往需要進行大量的數據處理。 相較之下，<em>Wow</em><span>&nbsp;</span>框架直接提供了聚合根狀態事件和聚合命令作為數據分析的數據源，極大降低了數據處理的難度。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><em>Wow</em><span>&nbsp;</span>提供的實時同步機制將數據實時同步至數據倉庫（<em>ClickHouse</em>），為實時數據分析提供了極大的便利。這種方法為商業智能提供了強有力的支持，構建了一個實時數據分析系統，使決策制定能夠基於及時而準確的信息。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">你可以在這裏瞭解更多關於<span>&nbsp;</span><a href="https://ahoowang.gitee.io/wow/guide/bi.html">Wow 商業智能</a>。</p><h3>操作審計</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><em>操作審計</em>是企業中保障安全性和合規性的重要組成部分，同時也是對系統操作進行監控和追蹤的關鍵手段。<em>Wow</em><span>&nbsp;</span>框架在這方面為企業帶來了顯著的優勢。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">通過記錄聚合命令（<code>Command</code>）作為操作審計的數據源，<em>Wow</em><span>&nbsp;</span>框架能夠詳細追蹤系統中的各種操作。 這些記錄不僅包含了操作本身的內容，還涵蓋了操作觸發的副作用（<em>領域事件</em>），為審計提供了更為全面和準確的數據基礎。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">相較於傳統審計方法，<em>Wow</em><span>&nbsp;</span>框架的操作審計的數據源具備更加明確的業務語義，以及操作後產生的明確領域事件。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">此外，Wow 框架提供的實時數據同步機制也為操作審計帶來了便利，確保了審計數據的及時性和一致性。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">瞭解更多關於<span>&nbsp;</span><a href="https://ahoowang.gitee.io/wow/guide/bi.html#%E8%81%9A%E5%90%88%E5%91%BD%E4%BB%A4">Wow 操作審計</a>。</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 07 Mar 2024 01:49:57 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/281886/wow-2-16-16-released</guid>
            <link>https://www.oschina.net/news/281886/wow-2-16-16-released</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[FolkMQ 增加 Node.js 客户端，v1.3.1 發佈]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#24292e; text-align:start">FolkMQ，作一個最簡單的消息中間件（單機版，約 180K TPS）。面向簡單，面向未來！</p><h3>功能簡介</h3><table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:0px; box-sizing:border-box; color:#24292e; display:block; font-family:-apple-system,&quot;system-ui&quot;,&quot;Segoe UI&quot;,Helvetica,Arial,sans-serif,&quot;Apple Color Emoji&quot;,&quot;Segoe UI Emoji&quot;,&quot;Segoe UI Symbol&quot;; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; margin-bottom:16px; margin-top:0px; orphans:2; overflow:auto; text-align:start; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:960px; word-spacing:0px"><tbody><tr><th>角色</th><th>功能</th></tr></tbody><tbody><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">生產端（或發起端）</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">發佈消息、定時消息（或叫延時）、順序消息、可過期消息、事務消息。發送消息（rpc）<br> 支持 Qos0、Qos1</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">&nbsp;</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">&nbsp;</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">消費端（或接收端）</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">訂閲、取消訂閲。消費-ACK（自動、手動）。監聽（rpc）</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">&nbsp;</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">&nbsp;</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">服務端</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">發佈-Confirm、訂閲-Confirm、取消訂閲-Confirm、派發-Retry、派發-Delayed</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">服務端</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">單線程、內存運行、快照持久化（自動、停機、手動）、Broker 模式集羣、集羣熱擴展</td></tr></tbody></table><h3>中間件特點</h3><ul><li>高吞吐量、低延遲</li></ul><p style="color:#24292e; text-align:start">集羣模式每秒能處理百萬消息，最低延遲不到 1 毫秒。</p><ul><li>可擴展性</li></ul><p style="color:#24292e; text-align:start">集羣模式支持服務節點熱擴展。流量高時隨時加，流量低時可減。視頻：</p><ul><li><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1vG411a7Q7%2F" target="_blank">《FolkMQ - "多中心" 集羣模式部署視頻》</a></p></li><li><p>持久性、可靠性</p></li></ul><p style="color:#24292e; text-align:start">消息被快照持久化（類似於 redis）到本地磁盤，並且支持數據備份防止數據丟失</p><ul><li>可集羣、高可用</li></ul><p style="color:#24292e; text-align:start">可單機，可集羣。集羣內任何節點壞掉只要還有「一個」同類節點，仍可提供服務。視頻：</p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1Ha4y1R73b%2F" target="_blank">《FolkMQ - 集羣"高可用性"測試視頻》</a></li></ul><h3>本次更新</h3><ul><li>新增 javascript 語言客户端實現（瀏覽器, uniapp[h5, android, ios], weixin, node.js）</li><li>調整 docker 基礎鏡像改為：adoptopenjdk/openjdk11-openj9 （內存可省一半）</li><li>調整 folkmq-broker 更名為：folkmq-server-broker （相互兼容，體驗不變）</li><li>添加 folkmq-server 對 ws 輸傳協議的支持</li><li>添加 rpc 異常傳導機制</li><li>完善，順序消息的消費邏輯（改為串行消費），更適合數據庫有序同步之類的場景</li><li>完善，許可證本地處理機制（基於 rsa 簽名機制）</li></ul><p style="color:#24292e; text-align:start">啓動服務：</p><pre><code class="language-css">docker run -<span style="color:#e45649">p</span><span style="color:#986801">18602</span>:<span style="color:#986801">18602</span> -p <span style="color:#986801">8602</span>:<span style="color:#986801">8602</span> -e folkmq.schema=<span style="color:#50a14f">'ws'</span> noearorg/folkmq-server:<span style="color:#986801">1.3</span>.<span style="color:#986801">1</span></code></pre><p style="color:#24292e; text-align:start">新功能示例（for Js or Node.js Demo）：</p><pre><code class="language-java">const {FolkMQ} = require(<span style="color:#50a14f">"@noear/folkmq"</span>);

async function <span style="color:#4078f2">main</span><span>()</span> {
    <em>//創建客户端，並連接</em><span style="color:#986801">const</span><span style="color:#986801">client</span><span>=</span> await FolkMQ.createClient(<span style="color:#50a14f">"folkmq🇼🇸//127.0.0.1:18602"</span>)
                            .nameAs(<span style="color:#50a14f">"demoapp"</span>)
                            .connect();

    <em>//訂閲主題</em>
    client.subscribe(<span style="color:#50a14f">"demo"</span>, <span style="color:#0184bb">null</span>, <span style="color:#0184bb">true</span>, message =&gt; {
        console.log(message);
    });

    <em>//發佈消息</em>
    client.publish(<span style="color:#50a14f">"demo"</span>, FolkMQ.newMqMessage(<span style="color:#50a14f">"helloworld!"</span>));
}

main();
</code></pre><h3>代碼倉庫</h3><ul><li><a href="https://gitee.com/noear/folkmq">https://gitee.com/noear/folkmq</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnoear%2Ffolkmq" target="_blank">https://github.com/noear/folkmq</a></li></ul><h3>官網</h3><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ffolkmq.noear.org%2F" target="_blank">https://folkmq.noear.org</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Thu, 07 Mar 2024 00:33:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/281876/folkmq-1-3-1-released</guid>
            <link>https://www.oschina.net/news/281876/folkmq-1-3-1-released</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
    </channel>
</rss>
