<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[開源中國-軟件更新資訊]]>
        </title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="http://rsshub.app/oschina/news/project" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[開源中國-軟件更新資訊 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Thu, 07 Mar 2024 10:47:01 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[野火 IM 1.2.3 已經發布，即時通訊系統]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>野火 IM 1.2.3 已經發布，即時通訊系統</p><p>此版本更新內容包括：</p><p>Release note 1.2.3:</p><ol><li>同步專業版 IM 服務 server SDK。</li><li>添加對鴻蒙平台的支持。</li><li>解決 server 端音視頻 SDK 信令支持問題。</li><li>升級部分依賴，解決漏洞問題</li></ol><blockquote><p>附件的版本有 3 種格式，分別是 Java 通用版本、Deb 格式安裝包和 Rpm 格式安裝包包，可以根據平台或者自己的習慣下載其中一種軟件包。另外在<a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fwildfirechat%2Fim-server%2Freleases" target="_blank">Github</a>也可以下載。也可以下載我們網站上的最新版本，<a href="https://gitee.com/link?target=http%3A%2F%2Fstatic.wildfirechat.cn%2Fdistribution-latest-bundle-tar.tar.gz" target="_blank">通用 Java 包</a>，<a href="https://gitee.com/link?target=http%3A%2F%2Fstatic.wildfirechat.cn%2Fim-server-latest.deb" target="_blank">deb 格式安裝包</a>和<a href="https://gitee.com/link?target=http%3A%2F%2Fstatic.wildfirechat.cn%2Fim-server-latest.rpm" target="_blank">rpm 格式安裝包</a>。 *** 0.42 版本增加了羣成員數限制，默認為 2000。如果您想修改默認值，可以在升級版本之後，修改 t_setting 表，把默認的大小改為您期望的。另外修改 t_group 表，把已經存在的羣組 max_member_count 改成您期望的，然後重啓。*** *** 0.46 和 0.47 版本升級到 0.48 及以後版本時，可能會提示 flyway migrate 38 錯誤，請執行 <a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fwildfirechat%2Fserver%2Fblob%2Fwildfirechat%2Fflyway_repaire_migrate_38.sql" target="_blank">修復腳本</a> 進行修復。0.46 和 0.47 版本之外的版本不會出現此問題。*** *** 0.50 版本添加了是否允許客户端發送羣操作通知的配置。如果您在客户端自定義羣通知，需要在服務器端配置允許，沒有使用自定義羣操作通知的不受影響。*** *** 從 0.54 之前版本升級到 0.54 及以後版本時，會提示 flyway migrate 錯誤。因為 0.54 版本刪除了 sql 腳本中默認敏感詞的內容，flyway checksum 失敗。請執行<code>update flyway_schema_history set checksum = 0 where script = 'V17__add_default_sensitive_word.sql';</code>來修復。*** *** 從 0.59 之前的版本升級到之後的版本執行數據庫升級時間比較長，請耐心等待提示運行成功，避免中途中斷。 *** *** 0.62/0.63 版本有嚴重的問題，請使用 0.64 及以後版本，或者 0.61 版。 *** *** 從 0.68 版本起添加了 pc 在線是否默認手機接收推送的開關，默認為開，與以前版本作用相反，請注意兼容（可以關掉與之前保持一致或者升級客户端） *** *** 從 0.78 版本起把 MySQL 數據庫中關鍵字都改為大小寫敏感，另外生成 id 的方法也做了改變，只生成小寫的 id，避免出現 id 重複的問題，建議所有客户都升級 *** *** 從 0.79 版本起把 log4j 升級到 log4j2，因為 log4j 已經不再維護而且還有已知的漏洞，建議所有客户都升級，升級時注意更新 log4j2 的配置文件 *** *** 0.97 版本更改了啓動腳本<code>wildfirechat.sh</code>，如果是升級服務，請注意更新啓動腳本。***</p></blockquote><h1>歷史更新記錄</h1><p>請參考附件的 release_note.md</p><p>詳情查看：<a href="https://gitee.com/wfchat/im-server/releases/1.2.3">https://gitee.com/wfchat/im-server/releases/1.2.3</a></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 07 Mar 2024 08:39:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/281997/wildfirechat-1-2-3-released</guid>
            <link>https://www.oschina.net/news/281997/wildfirechat-1-2-3-released</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[一個使用 Java 開發的 LLM 應用開發框架，Agents-Flex alpha.2 發佈]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="text-align:center"><img height="235" src="https://oscimg.oschina.net/oscnet/up-28f28677527d13113c29a56916625bb1b3d.png" width="300" referrerpolicy="no-referrer"></p><h1>Agents-Flex： 一個使用 Java 開發的 LLM（大語言模型） 應用開發框架</h1><h2>基本能力</h2><ul><li>LLM 的訪問能力</li><li>Prompt、Prompt Template 定義加載的能力</li><li>Function Calling 定義、調用和執行等能力</li><li>記憶的能力（Memory）</li><li>Embedding</li><li>Vector Storage</li><li>文檔處理 
  <ul><li>加載器（Loader） 
    <ul><li>Http</li><li>FileSystem</li></ul></li><li>分割器（Splitter）</li><li>解析器（Parser） 
    <ul><li>PoiParser</li><li>PdfBoxParser</li></ul></li></ul></li><li>LLM Chain</li><li>Agents Chain</li></ul><h2>功能列表</h2><p><img src="https://oscimg.oschina.net/oscnet/up-5335d770976c07c928c526ed75372a2d6b8.png" referrerpolicy="no-referrer"></p><h2>簡單對話示例</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">使用 OpenAi 大語言模型:</p><div><div><pre><span><strong><span><span style="color:#d73a49">public</span></span></strong><span></span><strong><span><span style="color:#d73a49">static</span></span></strong><span></span><strong><span><span style="color:#d73a49">void</span></span></strong><span></span><strong><span><span style="color:#6f42c1">main</span></span></strong><span><span><span>(</span></span></span><strong><span><span>String</span></span></strong><span><span><span>[]</span></span></span><span><span></span></span><span><span><span>args</span></span></span><span><span><span>)</span></span></span><span></span><strong><span><span style="color:#d73a49">throws</span></span></strong><span></span><strong><span>InterruptedException</span></strong><span></span><span>{</span></span><span><strong>OpenAiConfig</strong><span>config</span><span>=</span><strong><span style="color:#d73a49">new</span></strong><strong>OpenAiConfig</strong><span>();</span></span><span><span>config</span><span>.</span><span style="color:#008080">setApiKey</span><span>(</span><span style="color:#dd2200"><span style="color:#032f62">"sk-rts5NF6n*******"</span></span><span>);</span></span><span><strong>Llm</strong><span>llm</span><span>=</span><strong><span style="color:#d73a49">new</span></strong><strong>OpenAiLlm</strong><span>(</span><span>config</span><span>);</span></span><span><strong>Prompt</strong><span>prompt</span><span>=</span><strong><span style="color:#d73a49">new</span></strong><strong>SimplePrompt</strong><span>(</span><span style="color:#dd2200"><span style="color:#032f62">"請寫一個關於小兔子戰勝大灰狼的故事。"</span></span><span>);</span></span><span><span>llm</span><span>.</span><span style="color:#008080">chat</span><span>(</span><span>prompt</span><span>,</span><span>(</span><span>llmInstance</span><span>,</span><span>message</span><span>)</span><span>-&gt;</span><span>{</span></span><span><strong>System</strong><span>.</span><span style="color:#008080">out</span><span>.</span><span style="color:#008080">println</span><span>(</span><span style="color:#dd2200"><span style="color:#032f62">"---&gt;"</span></span><span>+</span><span>message</span><span>.</span><span style="color:#008080">getContent</span><span>());</span></span><span><span>});</span></span><span><strong>Thread</strong><span>.</span><span style="color:#008080">sleep</span><span>(</span><span style="color:#009999"><span>10000</span></span><span>);</span></span><span><span>}</span></span></pre><div>
   &nbsp;
  </div></div></div><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">使用 「通義千問」 大語言模型:</p><div><div><pre><span><strong><span><span style="color:#d73a49">public</span></span></strong><span></span><strong><span><span style="color:#d73a49">static</span></span></strong><span></span><strong><span><span style="color:#d73a49">void</span></span></strong><span></span><strong><span><span style="color:#6f42c1">main</span></span></strong><span><span><span>(</span></span></span><strong><span><span>String</span></span></strong><span><span><span>[]</span></span></span><span><span></span></span><span><span><span>args</span></span></span><span><span><span>)</span></span></span><span></span><strong><span><span style="color:#d73a49">throws</span></span></strong><span></span><strong><span>InterruptedException</span></strong><span></span><span>{</span></span><span><strong>QwenLlmConfig</strong><span>config</span><span>=</span><strong><span style="color:#d73a49">new</span></strong><strong>QwenLlmConfig</strong><span>();</span></span><span><span>config</span><span>.</span><span style="color:#008080">setApiKey</span><span>(</span><span style="color:#dd2200"><span style="color:#032f62">"sk-28a6be3236****"</span></span><span>);</span></span><span><span>config</span><span>.</span><span style="color:#008080">setModel</span><span>(</span><span style="color:#dd2200"><span style="color:#032f62">"qwen-turbo"</span></span><span>);</span></span><span><strong>Llm</strong><span>llm</span><span>=</span><strong><span style="color:#d73a49">new</span></strong><strong>QwenLlm</strong><span>(</span><span>config</span><span>);</span></span><span><strong>Prompt</strong><span>prompt</span><span>=</span><strong><span style="color:#d73a49">new</span></strong><strong>SimplePrompt</strong><span>(</span><span style="color:#dd2200"><span style="color:#032f62">"請寫一個關於小兔子戰勝大灰狼的故事。"</span></span><span>);</span></span><span><span>llm</span><span>.</span><span style="color:#008080">chat</span><span>(</span><span>prompt</span><span>,</span><span>(</span><span>llmInstance</span><span>,</span><span>message</span><span>)</span><span>-&gt;</span><span>{</span></span><span><strong>System</strong><span>.</span><span style="color:#008080">out</span><span>.</span><span style="color:#008080">println</span><span>(</span><span style="color:#dd2200"><span style="color:#032f62">"---&gt;"</span></span><span>+</span><span>message</span><span>.</span><span style="color:#008080">getContent</span><span>());</span></span><span><span>});</span></span><span><strong>Thread</strong><span>.</span><span style="color:#008080">sleep</span><span>(</span><span style="color:#009999"><span>10000</span></span><span>);</span></span><span><span>}</span></span></pre><div>
   &nbsp;
  </div></div></div><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">使用 「訊飛星火」 大語言模型:</p><div><div><pre><span><strong><span><span style="color:#d73a49">public</span></span></strong><span></span><strong><span><span style="color:#d73a49">static</span></span></strong><span></span><strong><span><span style="color:#d73a49">void</span></span></strong><span></span><strong><span><span style="color:#6f42c1">main</span></span></strong><span><span><span>(</span></span></span><strong><span><span>String</span></span></strong><span><span><span>[]</span></span></span><span><span></span></span><span><span><span>args</span></span></span><span><span><span>)</span></span></span><span></span><strong><span><span style="color:#d73a49">throws</span></span></strong><span></span><strong><span>InterruptedException</span></strong><span></span><span>{</span></span><span><strong>SparkLlmConfig</strong><span>config</span><span>=</span><strong><span style="color:#d73a49">new</span></strong><strong>SparkLlmConfig</strong><span>();</span></span><span><span>config</span><span>.</span><span style="color:#008080">setAppId</span><span>(</span><span style="color:#dd2200"><span style="color:#032f62">"****"</span></span><span>);</span></span><span><span>config</span><span>.</span><span style="color:#008080">setApiKey</span><span>(</span><span style="color:#dd2200"><span style="color:#032f62">"****"</span></span><span>);</span></span><span><span>config</span><span>.</span><span style="color:#008080">setApiSecret</span><span>(</span><span style="color:#dd2200"><span style="color:#032f62">"****"</span></span><span>);</span></span><span><strong>Llm</strong><span>llm</span><span>=</span><strong><span style="color:#d73a49">new</span></strong><strong>SparkLlm</strong><span>(</span><span>config</span><span>);</span></span><span><strong>Prompt</strong><span>prompt</span><span>=</span><strong><span style="color:#d73a49">new</span></strong><strong>SimplePrompt</strong><span>(</span><span style="color:#dd2200"><span style="color:#032f62">"請寫一個關於小兔子戰勝大灰狼的故事。"</span></span><span>);</span></span><span><span>llm</span><span>.</span><span style="color:#008080">chat</span><span>(</span><span>prompt</span><span>,</span><span>(</span><span>llmInstance</span><span>,</span><span>message</span><span>)</span><span>-&gt;</span><span>{</span></span><span><strong>System</strong><span>.</span><span style="color:#008080">out</span><span>.</span><span style="color:#008080">println</span><span>(</span><span style="color:#dd2200"><span style="color:#032f62">"---&gt;"</span></span><span>+</span><span>message</span><span>.</span><span style="color:#008080">getContent</span><span>());</span></span><span><span>});</span></span><span><strong>Thread</strong><span>.</span><span style="color:#008080">sleep</span><span>(</span><span style="color:#009999"><span>10000</span></span><span>);</span></span><span><span>}</span></span></pre><div>
   &nbsp;
  </div></div></div><h2>歷史對話示例</h2><div><div><pre><span><strong><span><span style="color:#d73a49">public</span></span></strong><span></span><strong><span><span style="color:#d73a49">static</span></span></strong><span></span><strong><span><span style="color:#d73a49">void</span></span></strong><span></span><strong><span><span style="color:#6f42c1">main</span></span></strong><span><span>(</span></span><strong><span><span>String</span></span></strong><span><span><span>[]</span></span></span><span><span></span></span><span><span><span>args</span></span></span><span><span>)</span></span><span></span><strong><span>throws</span></strong><span></span><strong><span>InterruptedException</span></strong><span>{</span></span><span><strong>SparkLlmConfig</strong><span>config</span><span>=</span><strong><span style="color:#d73a49">new</span></strong><strong>SparkLlmConfig</strong><span>();</span></span><span><span>config</span><span>.</span><span style="color:#008080">setAppId</span><span>(</span><span style="color:#dd2200"><span style="color:#032f62">"****"</span></span><span>);</span></span><span><span>config</span><span>.</span><span style="color:#008080">setApiKey</span><span>(</span><span style="color:#dd2200"><span style="color:#032f62">"****"</span></span><span>);</span></span><span><span>config</span><span>.</span><span style="color:#008080">setApiSecret</span><span>(</span><span style="color:#dd2200"><span style="color:#032f62">"****"</span></span><span>);</span></span><span><span style="color:#888888"><span style="color:#6a737d">// 創建一個大模型</span></span></span><span><strong>Llm</strong><span>llm</span><span>=</span><strong><span style="color:#d73a49">new</span></strong><strong>SparkLlm</strong><span>(</span><span>config</span><span>);</span></span><span><span style="color:#888888"><span style="color:#6a737d">//創建一個歷史對話的 prompt</span></span></span><span><strong>HistoriesPrompt</strong><span>prompt</span><span>=</span><strong><span style="color:#d73a49">new</span></strong><strong>HistoriesPrompt</strong><span>();</span></span><span><strong>System</strong><span>.</span><span style="color:#008080"><span style="color:#d73a49">out</span></span><span>.</span><span style="color:#008080">println</span><span>(</span><span style="color:#dd2200"><span style="color:#032f62">"您想問什麼？"</span></span><span>);</span></span><span><strong>Scanner</strong><span>scanner</span><span>=</span><strong><span style="color:#d73a49">new</span></strong><strong>Scanner</strong><span>(</span><strong>System</strong><span>.</span><span style="color:#008080"><span style="color:#d73a49">in</span></span><span>);</span></span><span><span style="color:#888888"><span style="color:#6a737d">//等待用户從控制枱輸入問題</span></span></span><span><strong>String</strong><span>userInput</span><span>=</span><span>scanner</span><span>.</span><span style="color:#008080">nextLine</span><span>();</span></span><span><strong><span style="color:#d73a49">while</span></strong><span>(</span><span>userInput</span><span>!=</span><strong><span style="color:#005cc5">null</span></strong><span>){</span></span><span><span>prompt</span><span>.</span><span style="color:#008080">addMessage</span><span>(</span><strong><span style="color:#d73a49">new</span></strong><strong>HumanMessage</strong><span>(</span><span>userInput</span><span>));</span></span><span><span style="color:#888888"><span style="color:#6a737d">//向大模型提問</span></span></span><span><span>llm</span><span>.</span><span style="color:#008080">chat</span><span>(</span><span>prompt</span><span>,</span><span>(</span><span>instance</span><span>,</span><span>message</span><span>)</span><span>-&gt;</span><span>{</span></span><span><strong>System</strong><span>.</span><span style="color:#008080"><span style="color:#d73a49">out</span></span><span>.</span><span style="color:#008080">println</span><span>(</span><span style="color:#dd2200"><span style="color:#032f62">"&gt;&gt;&gt;&gt; "</span></span><span>+</span><span>message</span><span>.</span><span style="color:#008080">getContent</span><span>());</span></span><span><span>});</span></span><span><span style="color:#888888"><span style="color:#6a737d">//繼續等待用户從控制枱輸入內容</span></span></span><span><span>userInput</span><span>=</span><span>scanner</span><span>.</span><span style="color:#008080">nextLine</span><span>();</span></span><span><span>}</span></span><span><span>}</span></span></pre><div>
   &nbsp;
  </div></div></div><h2>Function Calling&nbsp;示例</h2><ul><li>第一步：通過註解定義本地方法</li></ul><div><div><pre><span><strong><span style="color:#d73a49">public</span></strong><strong><span><span style="color:#d73a49">class</span></span></strong><span></span><strong><span><span style="color:#6f42c1">WeatherUtil</span></span></strong><span></span><span>{</span></span><span><span><span style="color:#6a737d">@FunctionDef</span></span><span><span style="color:#6a737d">(</span></span><span><span style="color:#6a737d">name</span></span><span style="color:#6a737d"></span><span><span style="color:#6a737d">=</span></span><span style="color:#6a737d"></span><span style="color:#dd2200"><span style="color:#6a737d"><span>"get_the_weather_info"</span></span></span><span><span style="color:#6a737d">,</span></span><span style="color:#6a737d"></span><span><span style="color:#6a737d">description</span></span><span style="color:#6a737d"></span><span><span style="color:#6a737d">=</span></span><span style="color:#6a737d"></span><span style="color:#dd2200"><span style="color:#6a737d"><span>"get the weather info"</span></span></span><span><span style="color:#6a737d">)</span></span></span><span><strong><span style="color:#d73a49">public</span></strong><strong>static</strong><strong>String</strong><strong>getWeatherInfo</strong><span>(</span></span><span><span><span style="color:#6a737d">@FunctionParam</span></span><span><span style="color:#6a737d">(</span></span><span><span style="color:#6a737d">name</span></span><span style="color:#6a737d"></span><span><span style="color:#6a737d">=</span></span><span style="color:#6a737d"></span><span style="color:#dd2200"><span style="color:#6a737d"><span>"city"</span></span></span><span><span style="color:#6a737d">,</span></span><span style="color:#6a737d"></span><span><span style="color:#6a737d">description</span></span><span style="color:#6a737d"></span><span><span style="color:#6a737d">=</span></span><span style="color:#6a737d"></span><span style="color:#dd2200"><span style="color:#6a737d"><span>"the city name"</span></span></span><span><span style="color:#6a737d">)</span></span><strong>String</strong><span>name</span></span><span><span>)</span><span>{
&nbsp;       <span style="color:#6a737d">//這裏應該是通過接口去調用獲得天氣信息</span></span></span><span><strong><span style="color:#d73a49">return</span></strong><span>name</span><span>+</span><span style="color:#dd2200"><span style="color:#032f62">"的天氣是陰轉多雲。 "</span></span><span>;</span></span><span><span>}</span></span><span><span>}</span></span></pre><div>
   &nbsp;
  </div></div></div><ul><li>第二步：通過 Prompt、Functions 傳入給大模型，然後得到結果</li></ul><div><div><pre><span><strong><span><span style="color:#d73a49">public</span></span></strong><span></span><strong><span><span style="color:#d73a49">static</span></span></strong><span></span><strong><span><span style="color:#d73a49">void</span></span></strong><span></span><strong><span><span style="color:#6f42c1">main</span></span></strong><span><span><span>(</span></span></span><strong><span><span>String</span></span></strong><span><span><span>[]</span></span></span><span><span></span></span><span><span><span>args</span></span></span><span><span><span>)</span></span></span><span></span><strong><span><span style="color:#d73a49">throws</span></span></strong><span></span><strong><span>InterruptedException</span></strong><span></span><span>{</span></span><span><strong>OpenAiLlmConfig</strong><span>config</span><span>=</span><strong><span style="color:#d73a49">new</span></strong><strong>OpenAiLlmConfig</strong><span>();</span></span><span><span>config</span><span>.</span><span style="color:#008080">setApiKey</span><span>(</span><span style="color:#dd2200"><span style="color:#032f62">"sk-rts5NF6n*******"</span></span><span>);</span></span><span><strong>OpenAiLlm</strong><span>llm</span><span>=</span><strong><span style="color:#d73a49">new</span></strong><strong>OpenAiLlm</strong><span>(</span><span>config</span><span>);</span></span><span><strong>Functions</strong><span>&lt;</span><strong>String</strong><span>&gt;</span><span>functions</span><span>=</span><strong>Functions</strong><span>.</span><span style="color:#008080">from</span><span>(</span><strong>WeatherUtil</strong><span><span>.</span></span><span style="color:#008080"><span><span style="color:#d73a49">class</span></span></span><span><span>,</span></span><span></span><strong><span><span style="color:#6f42c1">String</span></span></strong><span><span>.</span></span><span style="color:#008080"><span><span style="color:#6f42c1">class</span></span></span><span><span>)</span>;</span></span><span><strong>String</strong><span>result</span><span>=</span><span>llm</span><span>.</span><span style="color:#008080">call</span><span>(</span><strong><span style="color:#d73a49">new</span></strong><strong>SimplePrompt</strong><span>(</span><span style="color:#dd2200"><span style="color:#032f62">"今天的天氣如何"</span></span><span>),</span><span>functions</span><span>);</span></span><span><strong>System</strong><span>.</span><span style="color:#008080">out</span><span>.</span><span style="color:#008080">println</span><span>(</span><span>result</span><span>);</span></span><span><span style="color:#888888"><span style="color:#6a737d">// "北京的天氣是陰轉多雲。 ";</span></span></span><span><strong>Thread</strong><span>.</span><span style="color:#008080">sleep</span><span>(</span><span style="color:#009999"><span>10000</span></span><span>);</span></span><span><span>}</span></span></pre></div></div><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">&nbsp;</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">注意：當前版本為 v1.0.0-alpha.2 ，還在開發中，請暫時勿使用於正式的商業產品中。</p><h2>開源地址​：</h2><ul><li>Gitee:&nbsp;<a href="https://gitee.com/agents-flex/agents-flex">https://gitee.com/agents-flex/agents-flex</a></li><li>Github:&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fagents-flex%2Fagents-flex" target="_blank">https://github.com/agents-flex/agents-flex</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Thu, 07 Mar 2024 08:26:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/281991/agents-flex-alpha2</guid>
            <link>https://www.oschina.net/news/281991/agents-flex-alpha2</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[EmbedXrpc V5.0.0 已經發布，用於單片機場景的「gRPC」]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>EmbedXrpc V5.0.0 已經發布，用於單片機場景的「gRPC」</p><p>此版本更新內容包括大版本，重大變更：</p><p>1.移植 Free RTOS 的 message buffer/queue 到 WIN32 和裸機</p><p>2.重構 RunTime 配置，減小很多無用內存</p><p>詳情查看：<a href="https://gitee.com/snikeguo/EmbedXrpc/releases/V5.0.0">https://gitee.com/snikeguo/EmbedXrpc/releases/V5.0.0</a></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 07 Mar 2024 08:16:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/281985/embedxrpc-5-0-0-released</guid>
            <link>https://www.oschina.net/news/281985/embedxrpc-5-0-0-released</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[KCL v0.8.0 重磅發佈 - 融匯社區生態，助力配置體驗!]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h2><span>簡介</span></h2><p><img height="1254" src="https://oscimg.oschina.net/oscnet/up-6dd01390dcc57caa46f5a95963603bef6f6.png" width="1819" referrerpolicy="no-referrer"></p><p>KCL 團隊很高興地宣佈&nbsp;<strong>KCL v0.8.0 新版本現在已經可用</strong>！本次發佈為大家帶來了三方面的重點更新：<strong>語言</strong>、<strong>工具鏈</strong>、<strong>社區集成 &amp; 擴展支持</strong>。</p><ul><li><p><em>使用功能更完善錯誤更少的 KCL 語言、工具鏈和 IDE 提升代碼編寫體驗和效率</em></p></li><li><p><em>更加全面豐富的社區生態集成，改善運維體驗</em></p></li><li><p><em>更加豐富的 KCL 三方庫模型，更加輕鬆的與雲原生生態集成</em></p></li></ul><p>進一步您可以在&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkcl-lang%2Fkcl%2Freleases%2Ftag%2Fv0.8.0" target="_blank">KCL v0.8.0 發佈頁面</a>&nbsp;或者&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fkcl-lang.io%2F" target="_blank">KCL 官方網站</a>&nbsp;獲得下載安裝指南和詳細發佈信息。</p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkcl-lang%2Fkcl" target="_blank">KCL</a>&nbsp;是一個 CNCF 基金會託管的面向雲原生領域開源的基於約束的記錄及函數編程語言，期望通過成熟的編程語言技術和實踐來改進對大量繁雜配置比如雲原生 Kubernetes 配置場景的編寫，致力於圍繞配置的模塊化、擴展性和穩定性，打造更簡單的邏輯編寫體驗，構建更簡單的自動化和生態集成路徑。</p><h2><span>語言更新</span></h2><h3><span>🚗 語法語義更新</span></h3><h4><span>支持&nbsp;<code>show-hidden</code></span></h4><p>通過&nbsp;<code>--show-hidden</code>&nbsp;參數顯示私有變量。</p><p>KCL 程序如下</p><pre><code>a&nbsp;=&nbsp;{_b&nbsp;=&nbsp;<span>1</span>}
</code></pre><p>通過命令&nbsp;<code>kcl run main.k --show-hidden</code>&nbsp;編譯結果如下</p><pre><code><span>a:</span>
&nbsp;&nbsp;<span>_b:</span>&nbsp;<span>1</span></code></pre><h4><span>支持參數和關鍵字參數的合併</span></h4><p>KCL v0.8.0 版本中新增了參數和關鍵字參數的合併功能。帶參數的 schema 實例在合併操作時參數也會合並。</p><pre><code>schema&nbsp;Person[separator]:
&nbsp;&nbsp;&nbsp;&nbsp;firstName:&nbsp;str&nbsp;=&nbsp;<span>"John"</span>
&nbsp;&nbsp;&nbsp;&nbsp;lastName:&nbsp;str
&nbsp;&nbsp;&nbsp;&nbsp;fullName:&nbsp;str&nbsp;=&nbsp;firstName&nbsp;+&nbsp;separator&nbsp;+&nbsp;lastName

x&nbsp;=&nbsp;Person(<span>"&nbsp;"</span>)&nbsp;{lastName&nbsp;=&nbsp;<span>"Doe"</span>}

y&nbsp;=&nbsp;Person(<span>"-"</span>)&nbsp;{lastName&nbsp;=&nbsp;<span>"Doe1"</span>}

z&nbsp;=&nbsp;x&nbsp;|&nbsp;y
</code></pre><p>對應編譯結果</p><pre><code><span>x:</span>
&nbsp;&nbsp;<span>firstName:</span>&nbsp;<span>John</span>
&nbsp;&nbsp;<span>lastName:</span>&nbsp;<span>Doe</span>
&nbsp;&nbsp;<span>fullName:</span>&nbsp;<span>John</span>&nbsp;<span>Doe</span><span>y:</span>
&nbsp;&nbsp;<span>firstName:</span>&nbsp;<span>John</span>
&nbsp;&nbsp;<span>lastName:</span>&nbsp;<span>Doe1</span>
&nbsp;&nbsp;<span>fullName:</span>&nbsp;<span>John-Doe1</span><span>z:</span>
&nbsp;&nbsp;<span>firstName:</span>&nbsp;<span>John</span>
&nbsp;&nbsp;<span>lastName:</span>&nbsp;<span>Doe1</span>
&nbsp;&nbsp;<span>fullName:</span>&nbsp;<span>John-Doe1</span></code></pre><h4><span>支持字面值的 yaml stream 格式輸出</span></h4><p>通過&nbsp;<code>yaml_stream</code>&nbsp;方法，可以支持輸出 yaml 字面值的結果。</p><pre><code><span>import</span>&nbsp;manifests

x0&nbsp;=&nbsp;<span>1</span>
x1&nbsp;=&nbsp;<span>2</span>
manifests.yaml_stream([x0,&nbsp;x1])
</code></pre><p>對應編譯結果</p><pre><code><span>1</span><span>---</span><span>2</span></code></pre><h4><span>修復了在循環表達式中的類型檢查錯誤</span></h4><pre><code>name&nbsp;=&nbsp;<span>"volume"</span>
configMapVolumes1:&nbsp;{str:{str:}}&nbsp;=&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;name&nbsp;=&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name&nbsp;=&nbsp;name&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<span>for</span>&nbsp;_&nbsp;<span>in</span>&nbsp;range(<span>1</span>)
}

configMapVolumes2:&nbsp;[{str:}]&nbsp;=&nbsp;[
&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name&nbsp;=&nbsp;name
&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<span>for</span>&nbsp;_&nbsp;<span>in</span>&nbsp;range(<span>1</span>)
]
</code></pre><p>在 v0.8.0 之前，上述程序編譯會出現類型錯誤。</p><pre><code>error[E2G22]:&nbsp;TypeError
&nbsp;--&gt;&nbsp;main.k:4:9
&nbsp;&nbsp;|
4&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name&nbsp;=&nbsp;name
&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;^&nbsp;expected&nbsp;{str:any},&nbsp;got&nbsp;str
&nbsp;&nbsp;|

&nbsp;--&gt;&nbsp;main.k:2:1
&nbsp;&nbsp;|
2&nbsp;|&nbsp;configMapVolumes1:&nbsp;{str:{str:}}&nbsp;=&nbsp;{
&nbsp;&nbsp;|&nbsp;^&nbsp;variable&nbsp;is&nbsp;defined&nbsp;here,&nbsp;its&nbsp;<span>type</span>&nbsp;is&nbsp;{str:any},&nbsp;but&nbsp;got&nbsp;str
&nbsp;&nbsp;|
</code></pre><p>在 v0.8.0 版本中, 將會成功編譯出如下結果：</p><pre><code><span>name:</span>&nbsp;<span>volume</span><span>configMapVolumes1:</span>
&nbsp;&nbsp;<span>volume:</span>
&nbsp;&nbsp;&nbsp;&nbsp;<span>name:</span>&nbsp;<span>volume</span></code></pre><h4><span>修復了 Schema 對象必選屬性遞歸檢查錯誤</span></h4><p>在 Schema 內部定義了一個對象，對象內部的屬性是必選的，但是在實例化時使用不存在的屬性。</p><pre><code>schema&nbsp;Name:
&nbsp;&nbsp;&nbsp;&nbsp;name:&nbsp;str

schema&nbsp;Config:
&nbsp;&nbsp;&nbsp;&nbsp;n:&nbsp;{str:Name}

Config&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;n&nbsp;=&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n.n&nbsp;=&nbsp;<span>"n"</span>
&nbsp;&nbsp;&nbsp;&nbsp;}
}
</code></pre><p>在 v0.8.0 之後，上述程序編譯會出現類型錯誤。</p><pre><code>error[E2L23]:&nbsp;CompileError
&nbsp;--&gt;&nbsp;main.k:9:11
&nbsp;&nbsp;|
9&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n.n&nbsp;=&nbsp;<span>"n"</span>
&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;^&nbsp;Cannot&nbsp;add&nbsp;member&nbsp;<span>'n'</span>&nbsp;to&nbsp;schema&nbsp;<span>'Name'</span>
&nbsp;&nbsp;|
</code></pre><h4><span>在編譯輸出結果中去掉&nbsp;<code>__settings__</code>&nbsp;屬性</span></h4><p>在 v0.8.0 版本中，編譯輸出結果中去掉了&nbsp;<code>__settings__</code>&nbsp;屬性。</p><pre><code>schema&nbsp;Person:
&nbsp;&nbsp;&nbsp;&nbsp;__settings__:&nbsp;{str:str}&nbsp;=&nbsp;{<span>"output_type"</span>:&nbsp;<span>"STANDALONE"</span>}
&nbsp;&nbsp;&nbsp;&nbsp;name?:&nbsp;str
&nbsp;&nbsp;&nbsp;&nbsp;age?:&nbsp;int
&nbsp;&nbsp;&nbsp;&nbsp;school?:&nbsp;str

a&nbsp;=&nbsp;Person{
&nbsp;&nbsp;&nbsp;&nbsp;name:&nbsp;<span>"a"</span>,
}
</code></pre><p>在編譯結果中去掉了&nbsp;<code>__settings__</code>&nbsp;屬性。</p><pre><code><span>a:</span>
&nbsp;&nbsp;<span>name:</span>&nbsp;<span>a</span></code></pre><h4><span>支持在 config 表達式中計算 key 和 value 的值</span></h4><p>在 v0.8.0 版本中，支持在 config 表達式中計算 key 和 value 的值。</p><pre><code>_data&nbsp;=&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;<span>"a"</span>:&nbsp;<span>'foo'</span>
&nbsp;&nbsp;&nbsp;&nbsp;<span>"b"</span>:&nbsp;<span>'bar'</span>
}

r0&nbsp;=&nbsp;[{v&nbsp;=&nbsp;k}&nbsp;<span>for</span>&nbsp;k,&nbsp;v&nbsp;<span>in</span>&nbsp;_data]
r1&nbsp;=&nbsp;[{k&nbsp;=&nbsp;v}&nbsp;<span>for</span>&nbsp;k,&nbsp;v&nbsp;<span>in</span>&nbsp;_data]
r2&nbsp;=&nbsp;[{k.foo&nbsp;=&nbsp;v}&nbsp;<span>for</span>&nbsp;k,&nbsp;v&nbsp;<span>in</span>&nbsp;_data]
r3&nbsp;=&nbsp;[[k]&nbsp;<span>for</span>&nbsp;k,&nbsp;v&nbsp;<span>in</span>&nbsp;_data]
r4&nbsp;=&nbsp;[[k,&nbsp;v]&nbsp;<span>for</span>&nbsp;k,&nbsp;v&nbsp;<span>in</span>&nbsp;_data]
</code></pre><p>編譯結果如下：</p><pre><code><span>r0:</span><span>-</span>&nbsp;<span>foo:</span>&nbsp;<span>a</span><span>-</span>&nbsp;<span>bar:</span>&nbsp;<span>b</span><span>r1:</span><span>-</span>&nbsp;<span>a:</span>&nbsp;<span>foo</span><span>-</span>&nbsp;<span>b:</span>&nbsp;<span>bar</span><span>r2:</span><span>-</span>&nbsp;<span>a:</span>
&nbsp;&nbsp;&nbsp;&nbsp;<span>foo:</span>&nbsp;<span>foo</span><span>-</span>&nbsp;<span>b:</span>
&nbsp;&nbsp;&nbsp;&nbsp;<span>foo:</span>&nbsp;<span>bar</span><span>r3:</span><span>-</span>&nbsp;<span>-</span>&nbsp;<span>a</span><span>-</span>&nbsp;<span>-</span>&nbsp;<span>b</span><span>r4:</span><span>-</span>&nbsp;<span>-</span>&nbsp;<span>a</span>
&nbsp;&nbsp;<span>-</span>&nbsp;<span>foo</span><span>-</span>&nbsp;<span>-</span>&nbsp;<span>b</span>
&nbsp;&nbsp;<span>-</span>&nbsp;<span>bar</span></code></pre><h3><span>🔧 診斷信息的優化</span></h3><p>KCL 語法在 if 塊中使用的是&nbsp;<code>elif</code>&nbsp;關鍵字，而不是&nbsp;<code>else if</code>。</p><p>編譯以下 KCL 程序：</p><pre><code><span>if</span>&nbsp;<span>True</span>:&nbsp;a&nbsp;=&nbsp;<span>1</span><span>else</span>&nbsp;<span>if</span>&nbsp;<span>False</span>:&nbsp;b&nbsp;=&nbsp;<span>1</span></code></pre><p>KCL 在診斷信息中增加了錯誤修正的建議：</p><pre><code>error[E1001]:&nbsp;InvalidSyntax
&nbsp;--&gt;&nbsp;main.k:2:6
&nbsp;&nbsp;|
2&nbsp;|&nbsp;<span>else</span>&nbsp;<span>if</span>&nbsp;False:&nbsp;b&nbsp;=&nbsp;1
&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;^&nbsp;<span>'else&nbsp;if'</span>&nbsp;here&nbsp;is&nbsp;invalid&nbsp;<span>in</span>&nbsp;KCL,&nbsp;consider&nbsp;using&nbsp;the&nbsp;<span>'elif'</span>&nbsp;keyword
&nbsp;&nbsp;|
</code></pre><h3><span>🚀 語言編寫體驗優化</span></h3><h4><span>KCL 標準庫新增文件系統訪問方法</span></h4><p>KCL 增加了訪問文件系統的方法。在 v0.8.0 版本中支持了包括&nbsp;<code>read</code>,&nbsp;<code>glob</code>&nbsp;等訪問文件系統的方法。</p><p>通過&nbsp;<code>read</code>&nbsp;方法，可以讀取一個文件內容為字符串。</p><pre><code><span>import</span>&nbsp;file

a&nbsp;=&nbsp;file.read(<span>"hello.txt"</span>)
</code></pre><p>在文件&nbsp;<code>hello.txt</code>&nbsp;中添加如下內容：</p><pre><code>Hello World !
</code></pre><p>編譯結果</p><pre><code><span>a:</span>&nbsp;<span>Hello</span>&nbsp;<span>World</span>&nbsp;<span>!</span></code></pre><p>通過結合&nbsp;<code>json.decode</code>&nbsp;方法，可以輕鬆的實現將 json 文件反序列化。</p><p>在&nbsp;<code>hello.json</code>&nbsp;文件中增加如下內容</p><pre><code>{
&nbsp;&nbsp;<span>"name"</span>:&nbsp;<span>"John"</span>,
&nbsp;&nbsp;<span>"age"</span>:&nbsp;<span>10</span>
}
</code></pre><p>KCL 程序如下所示：</p><pre><code><span>import</span>&nbsp;file
<span>import</span>&nbsp;json

_a&nbsp;=&nbsp;json.decode(file.read(<span>"hello.json"</span>))

name&nbsp;=&nbsp;_a.name
age&nbsp;=&nbsp;_a.age
</code></pre><p>編譯結果如下所示：</p><pre><code><span>name:</span>&nbsp;<span>John</span><span>age:</span>&nbsp;<span>10</span></code></pre><p>更多內容 -&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fkcl-lang.io%2Fzh-CN%2Fdocs%2Freference%2Fmodel%2Ffile%2F" target="_blank">https://kcl-lang.io/zh-CN/docs/reference/model/file/</a></p><h4><span>KCL 編譯緩存路徑支持使用環境變量 KCL_CACHE_PATH 指定</span></h4><p>KCL 編譯器會將緩存生成到環境變量<code>KCL_CACHE_PATH</code>指定的目錄當中，如果沒指定，將會生成到項目根目錄中。</p><h4><span>插件系統支持使用 golang 編寫 KCL 插件</span></h4><p>使用 golang 定義 hello 插件。</p><pre><code><span>package</span>&nbsp;hello_plugin

<span>import</span>&nbsp;(
&nbsp;&nbsp;&nbsp;&nbsp;<span>"kcl-lang.io/kcl-go/pkg/plugin"</span>
)

<span><span>func</span>&nbsp;<span>init</span><span>()</span></span>&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;plugin.RegisterPlugin(plugin.Plugin{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Name:&nbsp;<span>"hello"</span>,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MethodMap:&nbsp;<span>map</span>[<span>string</span>]plugin.MethodSpec{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>"add"</span>:&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Body:&nbsp;<span><span>func</span><span>(args&nbsp;*plugin.MethodArgs)</span>&nbsp;<span>(*plugin.MethodResult,&nbsp;error)</span></span>&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v&nbsp;:=&nbsp;args.IntArg(<span>0</span>)&nbsp;+&nbsp;args.IntArg(<span>1</span>)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>return</span>&nbsp;&amp;plugin.MethodResult{V:&nbsp;v},&nbsp;<span>nil</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},
&nbsp;&nbsp;&nbsp;&nbsp;})
}
</code></pre><p>藉助 KCL Go SDK 開發，擴展 KCL 編譯器使用插件。</p><pre><code><span>package</span>&nbsp;main

<span>import</span>&nbsp;(
&nbsp;&nbsp;&nbsp;&nbsp;<span>"fmt"</span>

&nbsp;&nbsp;&nbsp;&nbsp;<span>"kcl-lang.io/kcl-go/pkg/kcl"</span>
&nbsp;&nbsp;&nbsp;&nbsp;<span>"kcl-lang.io/kcl-go/pkg/native"</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>//&nbsp;Import&nbsp;the&nbsp;native&nbsp;API</span>
&nbsp;&nbsp;&nbsp;&nbsp;_&nbsp;<span>"kcl-lang.io/kcl-go/pkg/plugin/hello_plugin"</span>&nbsp;<span>//&nbsp;Import&nbsp;the&nbsp;hello&nbsp;plugin</span>
)

<span><span>func</span>&nbsp;<span>main</span><span>()</span></span>&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;<span>//&nbsp;Note&nbsp;we&nbsp;use&nbsp;`native.MustRun`&nbsp;here&nbsp;instead&nbsp;of&nbsp;`kcl.MustRun`,&nbsp;because&nbsp;it&nbsp;needs&nbsp;the&nbsp;cgo&nbsp;feature.</span>
&nbsp;&nbsp;&nbsp;&nbsp;yaml&nbsp;:=&nbsp;native.MustRun(<span>"main.k"</span>,&nbsp;kcl.WithCode(code)).GetRawYamlResult()
&nbsp;&nbsp;&nbsp;&nbsp;fmt.Println(yaml)
}

<span>const</span>&nbsp;code&nbsp;=&nbsp;<span>`
import&nbsp;kcl_plugin.hello

name&nbsp;=&nbsp;"kcl"
three&nbsp;=&nbsp;hello.add(1,2)&nbsp;#&nbsp;3
`</span></code></pre><h3><span>😸 新增 Linux arm64 版本</span></h3><p>KCL 的 Release 產物中新增了對 Linux arm64 平台的支持。</p><p>可以在&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkcl-lang%2Fkcl%2Freleases" target="_blank">KCL Release Page</a>&nbsp;中找到後綴為&nbsp;<code>linux-arm64</code>&nbsp;的壓縮包。</p><h3><span>🏄 SDK &amp; API 更新</span></h3><h4><span>Rust SDK</span></h4><p>KCL Rust SDK 提供了一系列的 API，可以用於 KCL 文件的編譯、校驗、測試和格式化代碼等操作。</p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkcl-lang%2Flib" target="_blank">KCL Rust SDK: https://github.com/kcl-lang/lib</a></p><h4><span>Java SDK</span></h4><p>KCL Java SDK 新增語法樹、作用域、符號等語法語義結構定義及相關查詢 API。</p><h4><span>Go SDK 更新</span></h4><ul><li><p>KCL Doc 工具支持輸出為 OpenAPI 格式。</p></li><li><p>增加 Parse 過程相關 API。</p></li></ul><h4><span>API 更新</span></h4><ul><li><p>新增 json/yaml 驗證 API 用來驗證 json 和 yaml 文件。</p></li><li><p>新增語法和語義分析 API 用於對 KCL 代碼進行分析。</p></li><li><p>新增構建二進制產物 API 用於緩存編譯結果。</p></li><li><p>新增運行二進制產物 API 用於直接運行編譯結果，避免重複編譯並提升性能。</p></li><li><p>新增代碼生成 API 以編程方式實現 KCL 代碼生成而不是編寫複雜的模版。</p></li></ul><p>更多的更新可以查看&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fkcl-lang.io%2Fdocs%2Freference%2Fxlang-api%2Fgo-api" target="_blank">KCL v0.8 API 文檔</a></p><h3><span>🐞 其他更新及錯誤修復</span></h3><ul><li><p>修復了 KCL CLI 使用編譯參數 -S 可能會導致的編譯錯誤</p></li><li><p>修復了 kcl fmt 工具對 lambda 表達式進行格式化時，結尾增加一個空行的錯誤。</p></li><li><p>修復 Schema Doc 補全代碼片段錯誤</p></li><li><p>修復 Schema 對象必選屬性遞歸檢查錯誤</p></li><li><p>提升 Schema 索引簽名類型檢查健壯性</p></li><li><p>修復 Schema 內部諸如 "$if" 的字符串標識符定義找不到的錯誤</p></li><li><p>優化非預期 token 的語法錯誤提示</p></li><li><p>修復非預期的字典生成表達式中的 key 與循環變量相同時的變量計算</p></li></ul><h2><span>IDE &amp; 工具鏈更新</span></h2><h3><span>IDE 更新</span></h3><h4><span>IDE 語義級別的高亮增強</span></h4><p>KCL IDE 高亮之前僅支持 KCL 語法高亮，今年逐步啓用了新的 KCL 語義架構模型，在新語義架構的支撐下，KCL IDE 支持語義級別的高亮，在語義上有關聯的代碼會顯示相同的高亮。</p><p><img height="664" src="https://oscimg.oschina.net/oscnet/up-ca71cb381178754a79d3e6bab643331ccc8.png" width="560" referrerpolicy="no-referrer"></p><p>更多關於 KCL 語義架構模型的內容，參考：&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fkcl-lang.io%2Fzh-CN%2Fblog%2F2023-12-09-kcl-new-semantic-model" target="_blank">KCL 高效語義模型技術揭秘：實現快速編譯與增強 IDE 支持</a></p><h4><span>新增 builtin 方法的補全</span></h4><p>KCL IDE 支持 builtin 方法的補全，如下圖所示：</p><p><img height="456" src="https://oscimg.oschina.net/oscnet/up-148aa113dc1c90e129c43dba3d796502f3e.gif" width="1218" referrerpolicy="no-referrer"></p><p><img alt="" src="https://files.mdnice.com/user/44450/f7e1a184-22b8-4d3c-9362-6e523650e1aa.gif" referrerpolicy="no-referrer"></p><h4><span>增加變量引用錯誤時的快速修復功能</span></h4><p>KCL IDE 支持變量引用錯誤時的快速修復功能，如下圖所示：<img alt="" src="https://files.mdnice.com/user/44450/de4f89fe-bced-4a95-8888-7c2b9de6d28e.gif" referrerpolicy="no-referrer"></p><p><img height="496" src="https://oscimg.oschina.net/oscnet/up-b4fd597987857f9db1aec93a500f8fbd4f3.gif" width="1218" referrerpolicy="no-referrer"></p><h4><span>IDE 支持增量解析和異步編譯功能</span></h4><p>IDE 通過 KCL 新語義模型支持增量解析和異步編譯功能，提升了編譯速度和編寫體驗。</p><p>更多內容詳見&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fkcl-lang.io%2Fzh-CN%2Fblog%2F2023-12-09-kcl-new-semantic-model" target="_blank">https://kcl-lang.io/zh-CN/blog/2023-12-09-kcl-new-semantic-model</a></p><h4><span>IDE LSP 問題修復</span></h4><ul><li><p>修復 assert 語句中字符串插值變量不能跳轉的異常</p></li><li><p>修復了字符串中異常觸發函數補全的異常</p></li><li><p>修復了字符串後跟註釋中補全錯誤的問題</p></li><li><p>修復了 schema 內部屬性符號不能跳轉的問題</p></li><li><p>修復 import 語句別名語義檢查和補全的異常</p></li><li><p>修復了 schema 中 check 表達式補全的異常</p></li><li><p>修復了嵌套 schema 定義中補全錯誤的問題</p></li><li><p>修復了部分懸停信息缺失的問題</p></li><li><p>修復不同語法補全符號類型不統一的問題</p></li><li><p>區分 Schema 類型和實例補全符號</p></li><li><p>統一 Schema 註釋文檔補全的格式</p></li><li><p>修復了配置塊內部 if 語句符號不能跳轉和補全的問題</p></li></ul><h3><span>驗證工具更新</span></h3><p>本次更新中，我們對 KCL 驗證工具的報錯信息進行了優化，在使用 KCL 驗證工具對 json/yaml 文件進行驗證的工作中，將會準確定位到 json 文件的異常位置。</p><p>以 json 文件為例，我們將要對以下 hello.json 文件進行驗證</p><pre><code>{
&nbsp;&nbsp;&nbsp;&nbsp;<span>"name"</span>:&nbsp;<span>10</span>,
&nbsp;&nbsp;&nbsp;&nbsp;<span>"age"</span>:&nbsp;<span>18</span>,
&nbsp;&nbsp;&nbsp;&nbsp;<span>"message"</span>:&nbsp;<span>"This&nbsp;is&nbsp;Alice"</span>
}
</code></pre><p>定義如下 main.k 文件來對 json 文件中的內容進行驗證</p><pre><code>schema&nbsp;User:
&nbsp;&nbsp;&nbsp;&nbsp;name:&nbsp;str
&nbsp;&nbsp;&nbsp;&nbsp;age:&nbsp;int
&nbsp;&nbsp;&nbsp;&nbsp;message?:&nbsp;str
</code></pre><p>通過以下命令對 json 文件內容進行驗證</p><pre><code>kcl&nbsp;vet&nbsp;hello.json&nbsp;main.k
</code></pre><p>可以看到在 json 文件中的錯誤位置：</p><pre><code>error[E2G22]:&nbsp;TypeError
&nbsp;--&gt;&nbsp;test.json:2:5
&nbsp;&nbsp;|
2&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>"name"</span>:&nbsp;10,
&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;^&nbsp;expected&nbsp;str,&nbsp;got&nbsp;int(10)
&nbsp;&nbsp;|

&nbsp;--&gt;&nbsp;main.k:2:5
&nbsp;&nbsp;|
2&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name:&nbsp;str
&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;^&nbsp;variable&nbsp;is&nbsp;defined&nbsp;here,&nbsp;its&nbsp;<span>type</span>&nbsp;is&nbsp;str,&nbsp;but&nbsp;got&nbsp;int(10)
&nbsp;&nbsp;|
</code></pre><h4><span>KCL cli 新增 git 倉庫作為編譯入口</span></h4><p>通過以下命令，可以將 KCL 的 git 倉庫作為編譯入口</p><pre><code>kcl&nbsp;run&nbsp;&lt;git&nbsp;url&gt;
</code></pre><h4><span>kcl mod graph 支持輸出 KCL 包依賴圖</span></h4><p>通過命令&nbsp;<code>kcl mod graph</code>&nbsp;輸出 KCL 包的依賴圖。</p><h3><span>KCL 包管理工具</span></h3><h4><span>KCL 包管理支持通過 commit 添加 git 依賴</span></h4><p>KCL 包管理工具增加了通過 commit 來添加 git 三方庫依賴的功能。以&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FKusionStack%2Fcatalog" target="_blank">https://github.com/KusionStack/catalog</a>&nbsp;為例，添加 commit 為 a29e3db 的版本作為依賴。可以通過編輯 kcl.mod 文件中的依賴或者命令行直接添加。</p><p>編輯 kcl.mod 文件內容如下：</p><pre><code>[dependencies]
catalog = { git = "https://github.com/KusionStack/catalog.git", commit = "a29e3db" }
</code></pre><p>或者通過命令行添加：</p><pre><code>kcl&nbsp;mod&nbsp;add&nbsp;-git&nbsp;https://github.com/KusionStack/catalog.git&nbsp;-commit&nbsp;a29e3db
</code></pre><h4><span>KCL 包管理工具支持三方庫名稱帶有「-」</span></h4><p>KCL 包管理工具支持三方庫名稱中帶有「-」，KCL 包管理工具會自動將 「-」 替換為 「_」。</p><p>以三方庫&nbsp;<code>set-annotation</code>&nbsp;為例，通過以下命令添加&nbsp;<code>set-annotation</code>&nbsp;為依賴：</p><pre><code>kcl&nbsp;mod&nbsp;add&nbsp;set-annotation
</code></pre><p>在 KCL 程序中，通過&nbsp;<code>set_annotation</code>&nbsp;引用：</p><pre><code>import&nbsp;set_annotation&nbsp;
</code></pre><h3><span>KCL 導入工具更新，支持更多特性</span></h3><ul><li><p>支持 OpenAPI multiplyOf 規範映射到 KCL multiplyof 函數進行校驗</p></li><li><p>支持 YAML Stream 格式的 Kubernetes CRD 文件輸出為多個 KCL 文件</p></li><li><p>支持 OpenAPI allOf 關鍵字校驗表達式生成</p></li><li><p>支持 KCL 數組和字典類型的 all/any 校驗表達式生成</p></li></ul><h2><span>社區集成 &amp; 擴展更新</span></h2><h3><span>Flux KCL Controller 發佈</span></h3><p>我們開發了&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkcl-lang%2Fflux-kcl-controller" target="_blank">Flux KCL Controller</a>&nbsp;支持 KCL 與 Flux 集成。在集羣中安裝 Flux KCL Controller 後，通過以下資源就可以實現 KCL git 倉庫通過 FluxCD 進行持續集成。</p><pre><code>apiVersion:&nbsp;source.toolkit.fluxcd.io/v1
kind:&nbsp;GitRepository
metadata:
&nbsp;&nbsp;name:&nbsp;kcl-deployment
&nbsp;&nbsp;namespace:&nbsp;<span>source</span>-system
spec:
&nbsp;&nbsp;interval:&nbsp;30s
&nbsp;&nbsp;<span>#&nbsp;需要持續集成的&nbsp;github&nbsp;倉庫</span>
&nbsp;&nbsp;url:&nbsp;https://github.com/awesome-kusion/kcl-deployment.git
&nbsp;&nbsp;ref:
&nbsp;&nbsp;&nbsp;&nbsp;branch:&nbsp;main
---
apiVersion:&nbsp;krm.kcl.dev.fluxcd/v1alpha1
kind:&nbsp;KCLRun
metadata:
&nbsp;&nbsp;name:&nbsp;kcl-deployment
&nbsp;&nbsp;namespace:&nbsp;<span>source</span>-system
spec:
&nbsp;&nbsp;sourceRef:
&nbsp;&nbsp;&nbsp;&nbsp;kind:&nbsp;GitRepository
&nbsp;&nbsp;&nbsp;&nbsp;name:&nbsp;kcl-deployment
</code></pre><p>更多內容詳見:&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fkcl-lang.io%2Fzh-CN%2Fblog%2F2024-02-01-biweekly-newsletter%2F" target="_blank">https://kcl-lang.io/zh-CN/blog/2024-02-01-biweekly-newsletter/</a></p><h3><span>CodeQL KCL 工具</span></h3><p>初步支持 CodeQL KCL dbschema 定義以及對 KCL 語法語義進行數據提取，並可通過 CodeQL 進行數據查詢對 KCL 代碼進行靜態分析和掃描，提升代碼安全。</p><p>更多內容詳見:&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkcl-lang%2Fcodeql-kcl" target="_blank">https://github.com/kcl-lang/codeql-kcl</a></p><h2><span>模型更新</span></h2><p>KCL 模型數量新增至 303 個，主要新增與 Crossplane Provider 相關的模型和與 JSON 合併操作相關的庫</p><ul><li><p>KCL JSON Patch 庫：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fartifacthub.io%2Fpackages%2Fkcl%2Fkcl-module%2Fjsonpatch" target="_blank">https://artifacthub.io/packages/kcl/kcl-module/jsonpatch</a></p></li><li><p>KCL JSON Merge Patch 庫：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fartifacthub.io%2Fpackages%2Fkcl%2Fkcl-module%2Fjson_merge_patch" target="_blank">https://artifacthub.io/packages/kcl/kcl-module/json_merge_patch</a></p></li><li><p>KCL Kubernetes Strategy Merge Patch 庫：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fartifacthub.io%2Fpackages%2Fkcl%2Fkcl-module%2Fstrategic_merge_patch" target="_blank">https://artifacthub.io/packages/kcl/kcl-module/strategic_merge_patch</a></p></li><li><p>KCL Crossplane 及 Crossplane Provider 系列模型：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fartifacthub.io%2Fpackages%2Fsearch%3Forg%3Dkcl%26sort%3Drelevance%26page%3D1%26ts_query_web%3Dcrossplane" target="_blank">https://artifacthub.io/packages/search?org=kcl&amp;sort=relevance&amp;page=1&amp;ts_query_web=crossplane</a></p></li><li><p>Kubenetes 1.29 版本:&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fartifacthub.io%2Fpackages%2Fkcl%2Fkcl-module%2Fk8s%2F1.29.0" target="_blank">https://artifacthub.io/packages/kcl/kcl-module/k8s/1.29.0</a></p></li><li><p>新增 Podinfo 應用配置模型，支持設置外部動態參數如 replicas 等，可以直接通過一條命令渲染 Kubernetes 資源配置，並且可以在此模型的基礎上修改並自定義資源模版</p></li></ul><pre><code>kcl&nbsp;run&nbsp;oci://ghcr.io/kcl-lang/podinfo&nbsp;-D&nbsp;replicas=2
</code></pre><ul><li><p>JSON Schema 庫發佈 0.0.4 版本，修復類型定義錯誤, 可以執行如下命令更新或添加依賴</p></li></ul><pre><code>kcl&nbsp;mod&nbsp;add&nbsp;jsonschema:0.0.4
</code></pre><h2><span>其他更新</span></h2><p>完整更新和錯誤修復列表詳見:&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkcl-lang%2Fkcl%2Fcompare%2Fv0.7.0...v0.8.0" target="_blank">https://github.com/kcl-lang/kcl/compare/v0.7.0...v0.8.0</a></p><h2><span>文檔更新</span></h2><p>KCL 網站新增 KCL v0.7.0 文檔內容並支持版本化語義選項，目前支持 v0.4.x, v0.5.x, v0.6.x, v0.7.0 和 v0.8.0 版本選擇，同時歡迎社區同學進行文檔共建。</p><h2><span>社區動態</span></h2><h3><span>KCL LFX 項目啓動</span></h3><p>恭喜 @AkashKumar7902, @octonawish-akcodes, @shashank-iitbhu 入選 CNCF KCL LFX 項目，同時感謝 @Vanshikav123, @Amit Pandey 的積極參與。</p><h3><span>KCL 登陸 Crossplane 官方函數市場</span></h3><p>自 Crossplane v1.14 中的組合函數 Beta 版發佈以來，使用 Crossplane 構建雲原生平台的可能體驗範圍一直在迅速擴大。KCL 團隊在第一時間進行跟進並主動構建了一個可重用的函數，整個 Crossplane 生態系統現在可以利用 KCL 提供的高水平經驗和能力來構建自己的雲原生平台。</p><p>更多內容詳見:&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.crossplane.io%2Ffunction-kcl%2F" target="_blank">https://blog.crossplane.io/function-kcl/</a></p><h3><span>特別鳴謝</span></h3><p>感謝社區的小夥伴在 KCL v0.8.0 版本中的貢獻，以下排名不分先後</p><ul><li><p>感謝 @professorabhay 支持 KCL 測試 Diff 功能 🙌</p></li><li><p>感謝 @jakezhu9 同學對 kcl import 工具的持續貢獻 🤝</p></li><li><p>感謝 @octonawish-akcodes 對 KCL 代碼清理和 FAQ 文檔的持續貢獻 🙌</p></li><li><p>感謝 @satyazzz123 對 KRM KCL 支持讀取環境變量功能的貢獻 🙌</p></li><li><p>感謝 @AkashKumar7902 對 KCL 包管理工具功能的貢獻 🙌</p></li><li><p>感謝 @UtkarshUmre 對 KCL linux-arm64 構建 CI 的貢獻 🙌</p></li><li><p>感謝 @octonawish-akcodes 和 @d4v1d03 對 KCL FAQ 文檔和 KCL IDE 功能的持續貢獻 🙌</p></li><li><p>感謝 @octonawish-akcodes 對 Ansible KCL Module 的貢獻</p></li><li><p>感謝 @AkashKumar7902 和 @Vanshikav123 對 KCL 包管理工具功能的貢獻 🙌</p></li><li><p>感謝 @StevenLeiZhang 對 KCL 文檔和 KCL 插件的貢獻 🙌</p></li><li><p>感謝 @patrycju, @Callum Lyall, @Matt Gowie, @ShiroDN, @FLAGLORD, @YiuTerran, @flyinox, @steeling, @Anoop, @Even Solberg，@Phillip Neumann，@Naxe, @rozaliev, @CloudZero357, @martingreber, @az, @Art3mK, @Erick, @TheChinBot, @Evgeny Shepelyuk, @yonas, @vtomilov, @Fdall, @bozaro, @starkers, 和 @MrGuoRanDuo 等在 KCL v0.8 版本迭代過程中使用 KCL 提供的寶貴建議與反饋 🙌</p></li></ul><h2><span>下一步計劃</span></h2><p>感謝所有 KCL 用户和社區小夥伴在此次版本更新過程中提出的寶貴反饋與建議。預計 2024 年 5 月，我們將發佈 KCL v0.9.0 版本，更多詳情請參考 KCL 2024 路線規劃，和 KCL v0.9.0 Milestone，如果您有更多的想法和需求，歡迎在 KCL Github 倉庫發起 Issues 或討論，也歡迎加入我們的社區進行交流 🙌 🙌 🙌</p><p>更多其他資源請參考：</p><ul><li><p>KCL 網站:&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fkcl-lang.io%2F" target="_blank">https://kcl-lang.io/</a></p></li><li><p>KusionStack 網站:&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fkusionstack.io%2F" target="_blank">https://kusionstack.io/</a></p></li><li><p>KCL GitHub 倉庫:&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkcl-lang" target="_blank">https://github.com/kcl-lang</a></p></li><li><p>KusionStack GitHub 倉庫:&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FKusionStack" target="_blank">https://github.com/KusionStack</a></p></li><li><p>KCL v0.9.0 Milestone:&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkcl-lang%2Fkcl%2Fmilestone%2F9" target="_blank">https://github.com/kcl-lang/kcl/milestone/9</a></p></li><li><p>KCL 2024 路線規劃:&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkcl-lang%2Fkcl%2Fissues%2F882" target="_blank">https://github.com/kcl-lang/kcl/issues/882</a></p></li><li><p>KCL 社區:&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkcl-lang%2Fcommunity" target="_blank">https://github.com/kcl-lang/community</a></p></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Thu, 07 Mar 2024 07:29:17 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/281971/kcl-0-8-0-released</guid>
            <link>https://www.oschina.net/news/281971/kcl-0-8-0-released</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[WFS 文件存儲系統 v1.0.1 發佈]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h4>WFS 文件存儲系統，主要解決海量小文件的存儲問題</h4><p>wfs 有非常高效的讀寫效率，在高併發壓力下，wfs 存儲引擎讀寫響應時間可以達到微秒級別.</p><p>海量小文件可能帶來的許多問題：</p><p style="text-align:left"><span>&nbsp; &nbsp;<span>&nbsp;</span></span><span>海量小文件存儲在不同的硬件環境和系統架構下，都會帶來一系列顯著的問題。無論是採用傳統的機械硬盤（HDD）還是現代的固態硬盤（SSD），這些問題都可能影響系統的性能、效率、擴展性和成本：</span></p><ol><li><span>存儲效率低下：對於任何類型的硬盤，小文件通常會導致物理存儲空間的低效使用。由於硬盤有其最小存儲單元（扇區或頁），小文件可能會佔用超過其實際內容大小的空間，尤其是在每個文件還需額外存儲元數據的情況下，如 inode（在 Unix-like 系統中）或其他形式的元數據記錄，這會進一步加大空間浪費。inode 耗盡：每個文件和目錄至少佔用一個 inode，而 inode 的數量是在格式化磁盤並創建文件系統時預先設定的。當系統中有大量小文件時，即使硬盤空間還很充足，也可能因為 inode 用完而導致無法繼續創建新文件，儘管剩餘磁盤空間足以存放更多數據。性能影響：隨着 inode 數量增多，查找和管理這些 inode 所對應的元數據會變得更復雜和耗時，尤其是對於不支持高效索引機制的傳統文件系統，這會影響文件系統的整體性能。擴展性受限：文件系統設計時通常有一個固定的 inode 總數，除非通過特殊手段（如調整文件系統或重新格式化時指定更多 inode），否則無法動態增加 inode 數量來適應小文件增長的需求。</span></li><li><span>I/O 性能瓶頸與資源消耗：在 HDD 環境中，隨機讀寫大量小文件會引發頻繁的磁盤尋道操作，從而降低整體 I/O 性能。而在 SSD 中，儘管尋道時間幾乎可以忽略，但過於密集的小文件訪問仍可能導致控制器壓力增大、寫入放大效應以及垃圾回收機制負擔加重。</span></li><li><span>索引與查詢效率問題：海量小文件對文件系統的索引結構形成挑戰，隨着文件數量的增長，查找、更新和刪除小文件時所需的元數據操作會變得非常耗時。尤其在需要快速檢索和分析場景下，傳統索引方法難以提供高效的查詢服務。</span></li><li><span>備份恢復複雜性與效率：備份海量小文件是一個繁瑣且耗時的過程，同時在恢復過程中，尤其是按需恢復單個文件時，需要從大量備份數據中定位目標文件，這將極大地影響恢復速度和效率。</span></li><li><span>擴展性與可用性挑戰：存儲系統在處理海量小文件時，可能面臨擴展性難題。隨着文件數量的增長，如何有效分配和管理資源以維持良好的性能和穩定性是一大考驗。在分佈式存儲系統中，還可能出現熱點問題，導致部分節點負載過高，影響整個系統的穩定性和可用性。</span></li></ol><p style="text-align:left"><strong>&nbsp; &nbsp;wfs 作用在於將海量提交存儲的小文件進行高效的壓縮歸檔。並提供簡潔的數據獲取方式，以及後台文件管理，文件碎片整理等。</strong></p><hr><p><strong>wfs 相關程序</strong></p><ul><li>wfs 源碼地址 &nbsp; &nbsp; &nbsp;<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdonnie4w%2Fwfs" target="_blank">https://github.com/donnie4w/wfs</a></li><li>go 客户端 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdonnie4w%2Fwfs-goclient" target="_blank">https://github.com/donnie4w/wfs-goclient</a></li><li>java 客户端 &nbsp; &nbsp; &nbsp; &nbsp;<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdonnie4w%2Fwfs-jclient" target="_blank">https://github.com/donnie4w/wfs-jclient</a></li><li>python 客户端 &nbsp; &nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdonnie4w%2Fwfs-pyclient" target="_blank">https://github.com/donnie4w/wfs-pyclient</a></li><li>wfs 在線體驗 &nbsp; &nbsp; &nbsp;<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Ftestwfs.tlnet.top%2F" target="_blank">http://testwfs.tlnet.top</a><span>&nbsp;</span>&nbsp; &nbsp; 用户名 admin &nbsp; &nbsp;密碼 123</li><li>wfs 使用文檔 &nbsp; &nbsp; &nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftlnet.top%2Fwfsdoc" target="_blank">https://tlnet.top/wfsdoc</a></li></ul><hr><p><strong>wfs 的特點</strong></p><ul><li>高效性</li><li>簡易性</li><li>零依賴</li><li>管理平台</li><li>圖片處理</li></ul><hr><p><strong>應用場景</strong></p><ul><li>媒體存儲：適用於存儲和訪問海量的小文件，如圖片、文本等。憑藉高性能存儲引擎，WFS 可實現高速存取，並提供豐富的圖片資源處理功能。</li></ul><hr><p><strong>技術特點</strong></p><ul><li>高吞吐量低延遲<span>：保證在高併發場景下的數據存取速度。</span></li><li>支持多級別數據壓縮存儲<span>：節省存儲空間，提高存儲效率。</span></li><li>支持 http(https) 協議存取文件</li><li>支持 thrift 協議長連接存取文件</li><li>支持圖片基本處理<span>：內置圖片處理功能，滿足多媒體存儲需求。</span></li></ul><hr><p><strong>WFS 的壓力測試與性能評估</strong></p><p><span>請注意，以下基準測試數據主要針對 WFS 數據存儲引擎，未考慮網絡因素的影響。在理想條件下，基於基準測試數據得出估算數據</span></p><p><strong>以下為部分壓測數據截圖</strong></p><p><img alt="" src="https://tlnet.top/f/1709371893_7752.jpg" width="1264" referrerpolicy="no-referrer"></p><p><img alt="" src="https://tlnet.top/f/1709371933_7249.jpg" width="1264" referrerpolicy="no-referrer"></p><p><img alt="" src="https://tlnet.top/f/1709373380_17625.jpg" width="1264" referrerpolicy="no-referrer"></p><p><img alt="" src="https://tlnet.top/f/1709373414_15548.jpg" width="1264" referrerpolicy="no-referrer"></p><p><strong>測試數據説明：</strong></p><ul><li><strong>第一列為測試方法，寫 Append, 讀 Get ， *-4 四核，*-8 八核</strong></li><li><strong>第二列為本輪測試</strong><span><strong>執行總次</strong></span><strong>數</strong></li><li><strong>ns/op: 每執行一次消耗的時間</strong></li><li><strong>B/op：每執行一次消耗的內存</strong></li><li><strong>allocs/op：每執行一次分配內存次數</strong></li></ul><p style="text-align:start">&nbsp;</p><p><strong>根據基準測試數據，可以估算出 wfs 存儲引擎的性能</strong></p><ul><li><strong>存儲數據性能估算</strong></li></ul><ol><li><span>Benchmark_Append-4 平均每秒執行的操作次數約為：1 / (36489 ns/operation) ≈ 27405 次/s</span></li><li><span>Benchmark_Append-8 平均每秒執行的操作次數約為：1 / (31303 ns/operation) ≈ 31945 次/s</span></li><li><span>Benchmark_Append-4 平均每秒執行的操作次數約為：1 / (29300 ns/operation) ≈ 34129 次/s</span></li><li><span>Benchmark_Append-8 平均每秒執行的操作次數約為：1 / (24042 ns/operation) ≈ 41593 次/s</span></li><li><span>Benchmark_Append-4 平均每秒執行的操作次數約為：1 / (30784 ns/operation) ≈ 32484 次/s</span></li><li><span>Benchmark_Append-8 平均每秒執行的操作次數約為：1 / (30966 ns/operation) ≈ 32293 次/s</span></li><li><span>Benchmark_Append-4 平均每秒執行的操作次數約為：1 / (35859 ns/operation) ≈ 27920 次/s</span></li><li><span>Benchmark_Append-8 平均每秒執行的操作次數約為：1 / (33821 ns/operation) ≈ 29550 次/s</span></li></ol><ul><li><strong>獲取數據性能估算</strong></li></ul><ol><li><span>Benchmark_Get-4 平均每秒執行的操作次數約為：1 / (921 ns/operation) ≈ &nbsp;1085776 次/s</span></li><li><span>Benchmark_Get-8 平均每秒執行的操作次數約為：1 / (636 ns/operation) ≈ &nbsp;1572327 次/s</span></li><li><span>Benchmark_Get-4 平均每秒執行的操作次數約為：1 / (1558 ns/operation) ≈ 641848 次/s</span></li><li><span>Benchmark_Get-8 平均每秒執行的操作次數約為：1 / (1296 ns/operation) ≈ 771604 次/s</span></li><li><span>Benchmark_Get-4 平均每秒執行的操作次數約為：1 / (1695 ns/operation) ≈ 589970 次/s</span></li><li><span>Benchmark_Get-8 平均每秒執行的操作次數約為：1 / (1402ns/operation) ≈ &nbsp;713266 次/s</span></li><li><span>Benchmark_Get-4 平均每秒執行的操作次數約為：1 / (1865 ns/operation) ≈ 536000 次/s</span></li><li><span>Benchmark_Get-8 平均每秒執行的操作次數約為：1 / (1730 ns/operation) ≈ 578034 次/s</span></li></ol><p style="text-align:start">&nbsp;</p><p style="text-align:start"><strong>寫入數據性能</strong></p><ul><li>在不同併發條件下，WFS 存儲引擎的寫入操作平均每秒執行次數介於約 3 萬次/s 至 4 萬次/s 之間。</li></ul><p style="text-align:start"><strong>讀取數據性能</strong></p><ul><li>WFS 存儲引擎讀數據操作的性能更為出色，平均每秒執行次數在<span>&nbsp;</span><span>53 萬</span>次/s 至<span>&nbsp;</span><span>150 萬</span>次/s 之間。</li></ul><p style="text-align:start">&nbsp;</p><p style="text-align:start"><strong>&nbsp; &nbsp;請注意：測試結果與環境有很大關係。</strong><span><strong>實際應用中的性能可能會受到多種因素的影響，如系統負載、網絡狀況、磁盤 I/O 性能等，實際部署時需要根據具體環境進行驗證和調優。</strong></span></p><hr><p><strong>wfs 內置圖片基礎處理</strong></p><p style="text-align:left"><strong>原圖: &nbsp;<span>&nbsp;</span></strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftlnet.top%2Fstatics%2Ftest%2Fwfs_test.jpg" target="_blank">https://tlnet.top/statics/test/wfs_test.jpg</a></p><p style="text-align:left"><img alt="" src="https://tlnet.top/statics/test/wfs_test.jpg" referrerpolicy="no-referrer"></p><p style="text-align:left">&nbsp;</p><ul><li><span>裁剪正中部分，等比縮小生成 200x200 縮略圖 &nbsp;<span>&nbsp;</span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftlnet.top%2Fstatics%2Ftest%2Fwfs_test.jpg%3FimageView2%2F1%2Fw%2F200%2Fh%2F200" target="_blank">https://tlnet.top/statics/test/wfs_test.jpg?imageView2/1/w/200/h/200</a></li></ul><p style="text-align:left"><img alt="" src="https://tlnet.top/statics/test/wfs_test.jpg?imageView2/1/w/200/h/200" referrerpolicy="no-referrer"></p><p style="text-align:left">&nbsp;</p><ul><li><span>寬度固定為 200px，高度等比縮小，生成寬 200 縮略圖 &nbsp; &nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftlnet.top%2Fstatics%2Ftest%2Fwfs_test.jpg%3FimageView2%2F2%2Fw%2F200" target="_blank">https://tlnet.top/statics/test/wfs_test.jpg?imageView2/2/w/200</a></li></ul><p style="text-align:left"><img alt="" src="https://tlnet.top/statics/test/wfs_test.jpg?imageView2/2/w/200" referrerpolicy="no-referrer"></p><p style="text-align:left">&nbsp;</p><ul><li><span>高度固定為 200px，寬度等比縮小，生成高 200 縮略圖 &nbsp; &nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftlnet.top%2Fstatics%2Ftest%2Fwfs_test.jpg%3FimageView2%2F2%2Fh%2F200" target="_blank">https://tlnet.top/statics/test/wfs_test.jpg?imageView2/2/h/200</a></li></ul><p style="text-align:left"><img alt="" src="https://tlnet.top/statics/test/wfs_test.jpg?imageView2/2/h/200" referrerpolicy="no-referrer"></p><p style="text-align:left">&nbsp;</p><ul><li>高斯模糊，生成模糊程度<span>Sigma 為 5，寬 200 的圖片 &nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftlnet.top%2Fstatics%2Ftest%2Fwfs_test.jpg%3FimageView2%2F2%2Fw%2F200%2Fblur%2F5" target="_blank">https://tlnet.top/statics/test/wfs_test.jpg?imageView2/2/w/200/blur/5</a></li></ul><p style="text-align:left"><img alt="" src="https://tlnet.top/statics/test/wfs_test.jpg?imageView2/2/w/200/blur/5" referrerpolicy="no-referrer"></p><p style="text-align:left">&nbsp;</p><ul><li>灰色圖片，生成灰色，<span>寬 200 的</span>圖片 &nbsp;<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftlnet.top%2Fstatics%2Ftest%2Fwfs_test.jpg%3FimageView2%2F2%2Fw%2F200%2Fgrey%2F1" target="_blank">https://tlnet.top/statics/test/wfs_test.jpg?imageView2/2/w/200/grey/1</a></li></ul><p style="text-align:left"><img alt="" src="https://tlnet.top/statics/test/wfs_test.jpg?imageView2/2/w/200/grey/1" referrerpolicy="no-referrer"></p><p style="text-align:left">&nbsp;</p><ul><li>顏色反轉，生成顏色相反，寬 200 的圖片 &nbsp;<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftlnet.top%2Fstatics%2Ftest%2Fwfs_test.jpg%3FimageView2%2F2%2Fw%2F200%2Finvert%2F1" target="_blank">https://tlnet.top/statics/test/wfs_test.jpg?imageView2/2/w/200/invert/1</a></li></ul><p style="text-align:left"><img alt="" src="https://tlnet.top/statics/test/wfs_test.jpg?imageView2/2/w/200/invert/1" referrerpolicy="no-referrer"></p><p style="text-align:left">&nbsp;</p><ul><li>水平反轉 ，生成水平反轉，寬 200 的圖片 &nbsp;<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftlnet.top%2Fstatics%2Ftest%2Fwfs_test.jpg%3FimageView2%2F2%2Fw%2F200%2Ffliph%2F1" target="_blank">https://tlnet.top/statics/test/wfs_test.jpg?imageView2/2/w/200/fliph/1</a></li></ul><p style="text-align:left"><img alt="" src="https://tlnet.top/statics/test/wfs_test.jpg?imageView2/2/w/200/fliph/1" referrerpolicy="no-referrer"></p><p style="text-align:left">&nbsp;</p><ul><li>垂直反轉 ，生成垂直反轉，寬 200 的圖片 &nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftlnet.top%2Fstatics%2Ftest%2Fwfs_test.jpg%3FimageView2%2F2%2Fw%2F200%2Fflipv%2F1" target="_blank"><span>&nbsp;</span>https://tlnet.top/statics/test/wfs_test.jpg?imageView2/2/w/200/flipv/1</a></li></ul><p style="text-align:left"><img alt="" src="https://tlnet.top/statics/test/wfs_test.jpg?imageView2/2/w/200/flipv/1" referrerpolicy="no-referrer"></p><p style="text-align:left">&nbsp;</p><ul><li>圖片旋轉 ，生成向左旋轉 45 度，寬 200 的圖片 &nbsp;<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftlnet.top%2Fstatics%2Ftest%2Fwfs_test.jpg%3FimageView2%2F2%2Fw%2F200%2Frotate%2F45" target="_blank">https://tlnet.top/statics/test/wfs_test.jpg?imageView2/2/w/200/rotate/45</a></li></ul><p style="text-align:left"><img alt="" src="https://tlnet.top/statics/test/wfs_test.jpg?imageView2/2/w/200/rotate/45" referrerpolicy="no-referrer"></p><p style="text-align:left">&nbsp;</p><ul><li>格式轉換 ，生成向左旋轉 45，寬 200 的 png 圖片 &nbsp;<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftlnet.top%2Fstatics%2Ftest%2Fwfs_test.jpg%3FimageView2%2F2%2Fw%2F200%2Frotate%2F45%2Fformat%2Fpng" target="_blank">https://tlnet.top/statics/test/wfs_test.jpg?imageView2/2/w/200/rotate/45/format/png</a></li></ul><p style="text-align:left"><img alt="" src="https://tlnet.top/statics/test/wfs_test.jpg?imageView2/2/w/200/rotate/45/format/png" referrerpolicy="no-referrer"></p><p><strong>圖片處理方式見<span>&nbsp;</span></strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftlnet.top%2Fwfsdoc" target="_blank"><strong>wfs 使用文檔</strong></a></p><hr><p><strong>WFS 的使用簡單説明</strong></p><ol><li>執行文件下載地址：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftlnet.top%2Fdownload" target="_blank">https://tlnet.top/download</a></li><li>啓動：</li></ol><p style="text-align:left">&nbsp; &nbsp; &nbsp; &nbsp;<span>&nbsp;</span><strong>./linux101_wfs &nbsp; &nbsp; -c &nbsp; &nbsp;wfs.json</strong></p><p style="text-align:left">3. &nbsp; wfs.json 配置説明</p><pre><code>{
    "listen": 4660,     
    "opaddr": ":6802",
    "webaddr": ":6801",
    "memLimit": 128,
    "data.maxsize": 10000,
    "filesize": 100,
}</code></pre><p style="text-align:left"><strong>屬性説明：</strong></p><ul><li><span>listen &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;http/https 資源獲取服務監聽端口</span></li><li><span>opaddr &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; thrift 後端資源操作地址</span></li><li><span>webaddr &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;管理後台服務地址</span></li><li><span>memLimit &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;wfs 內存最大分配 (單位：MB)</span></li><li><span>data.maxsize &nbsp; &nbsp; &nbsp;wfs 上傳圖片大小上限 (單位：KB)</span></li><li><span>filesize &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;wfs 後端歸檔文件大小上限 (單位：MB)</span></li></ul><p><strong>wfs 使用詳細説明請參考<span>&nbsp;</span></strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftlnet.top%2Fwfsdoc" target="_blank"><strong>wfs 使用文檔</strong></a></p><hr><p><strong>WFS 如何存儲，刪除數據</strong></p><p><strong>1. http/https</strong></p><p>curl -F "file=@1.jpg" &nbsp;"http://127.0.0.1:6801/append/test/1.jpg" -H "username:admin" -H "password:123"</p><p>curl -X DELETE "http://127.0.0.1:6801/delete/test/1.jpg" -H "username:admin" -H "password:123"</p><p><strong>2. 使用客户端</strong></p><p>&nbsp; &nbsp; 以下是 java 客户端，示例</p><pre><code>    public void append() throws WfsException, IOException {
        String dir = System.getProperty("user.dir") + "/src/test/java/io/github/donnie4w/wfs/test/";
        WfsClient wc = newClient();
        WfsFile wf = new WfsFile();
        wf.setName("test/java/1.jpeg");
        wf.setData(Files.readAllBytes(Paths.get(dir + "1.jpeg")));
        wc.append(wf);
    }</code></pre><p style="text-align:left"><strong>3. 通過管理後台上傳/刪除文件</strong></p><h4>&nbsp;</h4><hr><h4><strong>WFS 管理後台</strong></h4><p><strong>默認搜索</strong></p><p><img alt="" src="https://tlnet.top/f/1709440477_578.jpg" width="1264" referrerpolicy="no-referrer"></p><p>&nbsp;</p><p><strong>前綴搜索</strong></p><p><img alt="" src="https://tlnet.top/f/1709440507_7665.jpg" width="1264" referrerpolicy="no-referrer"></p><p>&nbsp;</p><p><strong>碎片整理</strong></p><p><img alt="" src="https://tlnet.top/f/1709440627_3436.jpg" width="1264" referrerpolicy="no-referrer"></p><p>&nbsp;</p><p>&nbsp;</p><hr><h4>WFS 的分佈式部署方案</h4><p><span>wfs0.x 版本到 wfs1.x 版本的設計變更説明：</span>wfs0.x 版本實現了分佈式存儲，這使得系統能夠跨多個服務器分散存儲和處理數據，具備水平擴展能力和數據備份冗餘能力，但是在實際應用中也暴露出一些問題，如元數據重複存儲導致空間利用率不高。對於小文件的處理效率低，因為在節點間頻繁轉發傳輸，造成系統資源消耗增加。</p><p style="text-align:start">wfs1.x 版本的目標在於通過精簡架構、聚焦性能提升來滿足特定應用場景的需求，而在分佈式部署方面的考量則交由用户藉助第三方工具和服務來實現。</p><ol><li>wfs1.x 不直接支持分佈式存儲，但為了應對大規模部署和高可用需求，推薦採用如 Nginx 這樣的負載均衡服務，通過合理的資源配置和定位策略，可以在邏輯上模擬出類似分佈式的效果。也就是説，雖然每個 wfs 實例都是單機存儲，但可以通過外部服務實現多個 wfs 實例之間的請求分發，從而達到業務層面的「分佈式部署」。如何實現 wfs 的「分佈式部署」可以參考文章《<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftlnet.top%2Farticle%2F22425158" target="_blank">WFS 的分佈式部署方案</a>》</li><li>必須説明的是，超大規模數據存儲業務中，分佈式系統確實具有顯著優勢，包括動態資源調配、數據分塊存儲、多節點備份等高級功能。然而，分佈式採用負載均衡策略的 wfs1.x，則需要用户自行採取措施保證數據安全性和高可用性，例如定期備份數據、搭建負載均衡集羣，並且在應用程序中配置並設計路由規則，確保數據能正確地路由到目標節點。</li><li>wfs 的優勢在於其簡潔性和高效性。實際上，並非任何文件存儲業務都需要複雜的分佈式文件系統，相反，大部分業務尚未達到超大規模的量級，而使用複雜的分佈式文件系統可能會帶來與之不相匹配的過多<span>額外成本和運維難度</span>。<span>目前的 wfs 及其相應的分佈式部署策略已經能夠較好地滿足各種業務需求</span>。</li></ol></div>
                                    ]]>
            </description>
            <pubDate>Thu, 07 Mar 2024 03:58:52 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/281930/wfs-go-1-0-1-released</guid>
            <link>https://www.oschina.net/news/281930/wfs-go-1-0-1-released</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Syncthing 1.27.4 發佈，連續文件同步工具]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff; color:#333333">Syncthing&nbsp;是一個免費開源的工具，它能在你的各個網絡計算機間同步文件 / 文件夾，它的同步數據是直接從一個系統中直接傳輸到另一個系統的，並且它是安全且私密的。</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="background-color:#ffffff; color:#333333">Syncthing 1.27.4 現已發佈，具體更新內容如下：</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>Bug 修復</strong></p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsyncthing%2Fsyncthing%2Fissues%2F9369" target="_blank">#9369</a>：filesystem watcher 忽略無效 UTF-8 匹配時的&nbsp;<span style="background-color:#ffffff; color:#1f2328">Panic</span></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsyncthing%2Fsyncthing%2Fissues%2F9435" target="_blank">＃9435</a>：syncthing 應能&nbsp;cgroup aware</li></ul><p style="text-align:start"><strong style="color:#333333"><span style="background-color:#ffffff; color:#1f2328">Enhancements</span></strong></p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsyncthing%2Fsyncthing%2Fissues%2F9339" target="_blank">＃9339</a>：File system watcher 應該在更多情況下跳過忽略的目錄</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsyncthing%2Fsyncthing%2Fissues%2F9357" target="_blank">#9357</a>：在 Linux 容器中設置<code>GOMAXPROCS</code>配額感知</li></ul><p style="text-align:start"><strong style="color:#333333"><span style="background-color:#ffffff; color:#1f2328">Other issues</span></strong></p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsyncthing%2Fsyncthing%2Fissues%2F9386" target="_blank">#9386</a>：folder_sendrecv.go 中的拼寫錯誤引用了不存在的<code>dbUpdateShourtcutFile</code>類型</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsyncthing%2Fsyncthing%2Fissues%2F9389" target="_blank">#9389</a>：typo：<code>Complection</code><span style="background-color:#ffffff; color:#1f2328"><span>&nbsp;</span>→<span>&nbsp;</span></span><code>Completion</code><span style="background-color:#ffffff; color:#1f2328"><span>&nbsp;</span>?</span></li></ul><p>更新説明：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsyncthing%2Fsyncthing%2Freleases%2Ftag%2Fv1.27.4" target="_blank">https://github.com/syncthing/syncthing/releases/tag/v1.27.4</a></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 07 Mar 2024 03:13:52 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/281915/syncthing-1-27-4-released</guid>
            <link>https://www.oschina.net/news/281915/syncthing-1-27-4-released</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[【比較 ORM 操作數據】總結]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h4>寫在最後</h4><p>經過將近一週時間的框架收集、學習、實驗、編碼、測試市面上常見的 ORM 框架，過程中拜讀了很多作者的博文、樣例，學習很多收穫很多。 重新梳理下整理的框架：mybatis-plus、lazy、sqltoy、mybatis-flex、easy-query、mybatis-mp、jpa、dbvisitor、beetlsql</p><p>下面從一下幾點出發作出總結</p><ul><li>文檔方面：學習過程中 mybatis-plus、jpa 提供的文檔資料是比較全和晚上，經得住市場的考驗</li><li>技術方面：beetlsql、easy-query、mybatis 系列，三類框架都已經支持 spring 和 solon 生態，其技術架構設計可以推薦大家學習</li><li>併發方面：jpa、db_visitor 還需要開發時候深度優化處理</li><li>大數據存儲方面： Lazy 具有一定優勢，大數據查詢方面：sqltoy 反射處理的比較優秀</li></ul><p>以上是個人整理的觀點，如果大家有不同的想法和意見可以在<a href="https://gitee.com/wujiawei1207537021">gitee</a>或者個人博客留言<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.csdn.net%2Fqq_22903677%3Ftype%3Dblog" target="_blank">CSDN</a></p><p>細節數據對比（一萬以內基本相差不大）</p><ul><li>細節數據對比，數據屬於併發行測試數據，如果測試總數是一百，那麼會執行一百次 batchStory，一百次 findPage 每次執行的條數在之前數據的基礎上+1</li></ul><p>從形成的折線圖看（具體趨勢看排名與測試結果）</p><ul><li>存儲性能對比: lazy、mybatis-flex、mybatis-mp、mybatis、easy-query、sqltoy、beetlSql 更適合併發性數據存儲。jpa、db_visitor 處理耗時較長</li><li>分頁查詢性能對比: lazy、mybatis-flex、mybatis-mp、mybatis、easy-query、sqltoy、db_visitor、beetlSql 都比較穩定。jpa 處理時間明顯起伏</li></ul><p><img height="679" src="https://oscimg.oschina.net/oscnet/up-108d2b6dbb2cbdc219a75ca4040c5d2ab0a.png" width="1406" referrerpolicy="no-referrer"></p><p><img height="698" src="https://oscimg.oschina.net/oscnet/up-0738f46c7c49b88bb0b6c58ca71c33372cd.png" width="1402" referrerpolicy="no-referrer"></p><p>批量保存：</p><ul><li>一萬條數據以內 lazy、mybatis-flex、mybatis-mp、mybatis、easy-query、sqltoy、beetlSql、jpa、db_visitor 性能趨於一致</li><li>十萬數據時，處理時間由快到慢依次是: lazy、mybatis-flex、mybatis-mp、mybatis、easy-query、sqltoy、beetlSql、db_visitor、jpa，其中 db_visitor、jpa 處理時間明顯起伏</li></ul><p>分頁查詢：</p><ul><li>一萬條數據以內，幾款 ORM 均保持在 200 毫秒內</li><li>十萬數據時，處理時間由快到慢依次是: sqltoy、db_visitor、easy-query、lazy、beetlSql、mybatis、mybatis-mp、jpa、mybatis-flex</li><li>&nbsp;</li></ul><h3>快速數據對比 (大數據曲線圖)</h3><p><img height="674" src="https://oscimg.oschina.net/oscnet/up-b50ab90449379aba424545ef66277f5b0ce.png" width="1391" referrerpolicy="no-referrer"></p><p><img height="691" src="https://oscimg.oschina.net/oscnet/up-15d9a6ed061150752d3225078a5b7199560.png" width="1402" referrerpolicy="no-referrer"></p><h4><a href="https://gitee.com/wujiawei1207537021/wu-compare-orm-demo">當前項目地址</a></h4><h4><a href="https://gitee.com/wujiawei1207537021/wu-framework-parent/tree/master/wu-inner-integration/wu-database-parent">lazy-orm 地址</a></h4><h4><a href="https://gitee.com/baomidou/mybatis-plus">mybatis 地址</a></h4><h4><a href="https://gitee.com/sagacity/sagacity-sqltoy">sqltoy 地址</a></h4><h4><a href="https://gitee.com/mybatis-flex/mybatis-flex">mybatis-flex 地址</a></h4><h4><a href="https://gitee.com/xuejm/easy-query">easy-query 地址</a></h4><h4><a href="https://gitee.com/mybatis-mp/mybatis-mp">mybatis-mp 地址</a></h4><h4><a href="https://gitee.com/zycgit/dbvisitor">dbvisitor 地址</a></h4><h4><a href="https://gitee.com/xiandafu/beetlsql">beetlsql 地址</a></h4></div>
                                    ]]>
            </description>
            <pubDate>Thu, 07 Mar 2024 03:04:52 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/281908</guid>
            <link>https://www.oschina.net/news/281908</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[🎉 領域模型即服務 | Wow 2.16.16 發佈]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><a href="https://ahoowang.gitee.io/wow/"><img alt="Wow:基於 DDD、EventSourcing 的現代響應式 CQRS 架構微服務開發框架" src="https://static.oschina.net/uploads/img/202312/13135012_Zb9v.svg" width="150" referrerpolicy="no-referrer"></a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FAhoo-Wang%2FWow%2Fblob%2Fmvp%2FLICENSE"><img alt="License" src="https://img.shields.io/badge/license-Apache%202-4EB1BA.svg" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FAhoo-Wang%2FWow%2Freleases"><img alt="GitHub release" src="https://img.shields.io/github/release/Ahoo-Wang/Wow.svg" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fmaven-badges.herokuapp.com%2Fmaven-central%2Fme.ahoo.wow%2Fwow-core"><img alt="Maven Central" src="https://maven-badges.herokuapp.com/maven-central/me.ahoo.wow/wow-core/badge.svg" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fapp.codacy.com%2Fgh%2FAhoo-Wang%2FWow%2Fdashboard%3Futm_source%3Dgh%26utm_medium%3Dreferral%26utm_content%3D%26utm_campaign%3DBadge_grade"><img alt="Codacy Badge" src="https://app.codacy.com/project/badge/Grade/cfc724df22db4f9387525258c8a59609" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fcodecov.io%2Fgh%2FAhoo-Wang%2FWow"><img alt="codecov" src="https://codecov.io/gh/Ahoo-Wang/Wow/branch/main/graph/badge.svg?token=uloJrLoQir" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FAhoo-Wang%2FWow"><img alt="Integration Test Status" src="https://github.com/Ahoo-Wang/Wow/actions/workflows/integration-test.yml/badge.svg" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FKotlinBy%2Fawesome-kotlin"><img alt="Awesome Kotlin Badge" src="https://kotlin.link/awesome-kotlin.svg" referrerpolicy="no-referrer"></a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><strong>領域驅動</strong><span>&nbsp;</span>|<span>&nbsp;</span><strong>事件驅動</strong><span>&nbsp;</span>|<span>&nbsp;</span><strong>測試驅動</strong><span>&nbsp;</span>|<span>&nbsp;</span><strong>聲明式設計</strong><span>&nbsp;</span>|<span>&nbsp;</span><strong>響應式編程</strong><span>&nbsp;</span>|<span>&nbsp;</span><strong>命令查詢職責分離</strong><span>&nbsp;</span>|<span>&nbsp;</span><strong>事件溯源</strong></p><blockquote><p style="margin-left:0; margin-right:0"><strong>官方文檔：</strong><img alt="👉" height="14" src="https://cn-assets.gitee.com/assets/emoji/point_right-8d392cf32998e3bca12bb7b4ee10dae0.png" width="14" referrerpolicy="no-referrer"><span>&nbsp;</span><a href="https://ahoowang.gitee.io/wow/" target="_blank">https://ahoowang.gitee.io/wow/</a><span>&nbsp;</span><img alt="👈" height="14" src="https://cn-assets.gitee.com/assets/emoji/point_left-4570b6929b8880ab2e8b8031007fef18.png" width="14" referrerpolicy="no-referrer"></p></blockquote><h2>更新內容</h2><blockquote><p style="margin-left:0; margin-right:0"><a href="https://ahoowang.gitee.io/wow/guide/query.html" target="_blank">https://ahoowang.gitee.io/wow/guide/query.html</a></p></blockquote><blockquote><p style="margin-left:0; margin-right:0"><strong>Wow</strong><span>&nbsp;</span>除了為命令 (<code>Command</code>) 自動生成了<span>&nbsp;</span><em>OpenAPI</em><span>&nbsp;</span>端點，另外還提供了查詢 (<code>Query</code>)<span>&nbsp;</span><em>OpenAPI</em><span>&nbsp;</span>端點。 這意味着開發人員通常只需專注於編寫領域模型，即可完成服務開發，而無需費心處理查詢邏輯的實現，極大提升了開發效率。</p></blockquote><ul><li>特性 (query): 新增<span>&nbsp;</span><code>SnapshotQueryServiceRegistrar</code><span>&nbsp;</span>以支持自動將所有本地聚合根查詢服務註冊到<span>&nbsp;</span><code>Spring</code><span>&nbsp;</span>容器中。</li><li>特性 (query): 為<span>&nbsp;</span><code>SnapshotQueryService</code><span>&nbsp;</span>API 添加屬性<span>&nbsp;</span><code>NamedAggregate</code></li><li>重構 (compensation): 使用<span>&nbsp;</span><code>QueryDSL</code><span>&nbsp;</span>替換<span>&nbsp;</span><code>MongoExecutionFailedQuery</code></li><li>依賴 (build): 升級<span>&nbsp;</span><code>org.testcontainers:testcontainers-bom</code><span>&nbsp;</span>版本，到<span>&nbsp;</span><code>v1.19.7</code></li></ul><h3>查詢服務註冊器</h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><code>SnapshotQueryServiceRegistrar</code><span>&nbsp;</span>用於自動將所有本地聚合根查詢服務註冊到<span>&nbsp;</span><code>Spring</code><span>&nbsp;</span>容器中。 開發者可以通過指定的<span>&nbsp;</span><code>Bean Name</code><span>&nbsp;</span>從<span>&nbsp;</span><code>BeanFactory</code><span>&nbsp;</span>中獲取相應的<span>&nbsp;</span><code>SnapshotQueryService</code>。</p><blockquote><p style="margin-left:0; margin-right:0"><code>Bean Name</code><span>&nbsp;</span>命名規則：<code>聚合根名稱 + ".SnapshotQueryService"</code>。</p></blockquote><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">使用案例：</p><blockquote><p style="margin-left:0; margin-right:0">構造函數注入</p></blockquote><div><pre><code>class OrderService(
    @Qualifier("example.order.SnapshotQueryService")
    private val queryService: SnapshotQueryService&lt;OrderState&gt;
) {
    fun getById(id: String): Mono&lt;OrderState&gt; {
        return condition {
            id(id)
        }.single(queryService).toState()
    }
}
</code></pre></div><blockquote><p style="margin-left:0; margin-right:0">字段注入</p></blockquote><div><pre><code>@Qualifier("example.order.SnapshotQueryService")
@Autowired
private lateinit var queryService: SnapshotQueryService&lt;OrderState&gt;
</code></pre></div><h3>操作符</h3><table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:1px; border:none; box-sizing:border-box; color:#444444; display:block; font-family:-apple-system,&quot;system-ui&quot;,&quot;Apple Color Emoji&quot;,&quot;Segoe UI Emoji&quot;,&quot;Segoe UI Symbol&quot;,&quot;Segoe UI&quot;,&quot;PingFang SC&quot;,&quot;Hiragino Sans GB&quot;,&quot;Microsoft YaHei&quot;,&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:14px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; line-height:inherit; margin:0px 0px 20px; max-width:100%; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:816.25px; word-break:keep-all; word-spacing:0px"><tbody><tr><th>操作符</th><th>描述</th></tr></tbody><tbody><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">AND</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">對提供的條件列表執行邏輯與</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">OR</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">對提供的條件列表執行邏輯或</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">ID</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">匹配<code>id</code>字段值等於指定值的所有文檔</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">IDS</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">匹配<code>id</code>字段值等於指定值列表中的任何值的所有文檔</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">TENANT_ID</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">匹配<code>tenantId</code>字段值等於指定值的所有文檔</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">DELETED</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">匹配<code>deleted</code>字段值等於指定值的所有文檔</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">ALL</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">匹配所有文檔</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">EQ</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">匹配字段名稱值等於指定值的所有文檔</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">NE</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">匹配字段名稱值不等於指定值的所有文檔</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">GT</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">匹配給定字段的值大於指定值的所有文檔</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">LT</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">匹配給定字段的值小於指定值的所有文檔</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">GTE</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">匹配給定字段的值大於或等於指定值的所有文檔</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">LTE</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">匹配給定字段的值小於或等於指定值的所有文檔</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">CONTAINS</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">匹配給定字段的值包含指定值的所有文檔</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">IN</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">匹配字段值等於指定值列表中的任何值的所有文檔</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">NOT_IN</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">匹配字段值不等於任何指定值或不存在的所有文檔</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">BETWEEN</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">匹配字段值在指定值範圍區間的所有文檔</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">ALL_IN</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">匹配所有文檔，其中字段值是包含所有指定值的數組</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">STARTS_WITH</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">匹配字段值以指定字符串開頭的文檔</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">ENDS_WITH</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">匹配字段值以指定字符串結尾的文檔</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">ELEM_MATCH</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">條件與包含數組字段的所有文檔相匹配，其中數組中至少有一個成員與給定的條件匹配。</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">NULL</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">匹配字段值在指定值為<code>null</code>的所有文檔</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">NOT_NULL</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">匹配字段值在指定值不為<code>null</code>的所有文檔</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">TRUE</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">匹配字段值在指定值為<code>true</code>的所有文檔</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">FALSE</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">匹配字段值在指定值為<code>false</code>的所有文檔</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">RAW</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">原始操作符，將條件值直接作為原始的數據庫查詢條件</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">TODAY</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">匹配<em>數值類型時間戳</em>字段在今天範圍區間的所有文檔。比如：<code>today</code><span>&nbsp;</span>為<span>&nbsp;</span><code>2024-06-06</code>，匹配範圍<span>&nbsp;</span><code>2024-06-06 00:00:00.000</code><span>&nbsp;</span>~<span>&nbsp;</span><code>2024-06-06 23:59:59.999</code><span>&nbsp;</span>的所有文檔</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">TOMORROW</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">匹配<em>數值類型時間戳</em>字段在昨天範圍區間的所有文檔。比如：<code>today</code><span>&nbsp;</span>為<span>&nbsp;</span><code>2024-06-06</code>，匹配範圍<span>&nbsp;</span><code>2024-06-05 00:00:00.000</code><span>&nbsp;</span>~<span>&nbsp;</span><code>2024-06-05 23:59:59.999</code><span>&nbsp;</span>的所有文檔</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">THIS_WEEK</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">匹配<em>數值類型時間戳</em>字段在本週範圍區間的所有文檔</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">NEXT_WEEK</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">匹配<em>數值類型時間戳</em>字段在下週範圍區間的所有文檔</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">LAST_WEEK</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">匹配<em>數值類型時間戳</em>字段在上週範圍區間的所有文檔</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">THIS_MONTH</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">匹配<em>數值類型時間戳</em>字段在本月範圍區間的所有文檔。比如：<code>today</code><span>&nbsp;</span>:<span>&nbsp;</span><code>2024-06-06</code>，匹配範圍 :<span>&nbsp;</span><code>2024-06-01 00:00:00.000</code><span>&nbsp;</span>~<span>&nbsp;</span><code>2024-06-30 23:59:59.999</code><span>&nbsp;</span>的所有文檔</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">LAST_MONTH</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">匹配<em>數值類型時間戳</em>字段在上月範圍區間的所有文檔。比如：<code>today</code><span>&nbsp;</span>:<span>&nbsp;</span><code>2024-06-06</code>，匹配範圍 :<span>&nbsp;</span><code>2024-05-01 00:00:00.000</code><span>&nbsp;</span>~<span>&nbsp;</span><code>2024-05-31 23:59:59.999</code><span>&nbsp;</span>的所有文檔</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">RECENT_DAYS</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">匹配<em>數值類型時間戳</em>字段在指定值最近天數範圍區間的所有文檔。比如：<code>today</code><span>&nbsp;</span>:<span>&nbsp;</span><code>2024-06-06</code>，近三天，匹配範圍 :<span>&nbsp;</span><code>2024-06-04 00:00:00.000</code><span>&nbsp;</span>~<span>&nbsp;</span><code>2024-06-06 23:59:59.999</code><span>&nbsp;</span>的所有文檔。即 : 今天、昨天、前天</td></tr></tbody></table><h3>QueryDsl</h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">通過<span>&nbsp;</span><code>QueryDsl</code>，您可以輕鬆構建複雜的查詢條件，例如：</p><div><pre><code>pagedQuery {
    pagination {
        index(1)
        size(10)
    }
    sort {
        "field1".asc()
    }
    condition {
        all()
        not {
           "field1" eq "value1"
           "field2" ne "value2"
        }
        "filed3" gt 1
        "field4" lt 1
        "field5" gte 1
        "field6" lte 1
        "field7" like "value7"
        "field8" isIn listOf("value8")
        "field9" notIn listOf("value9")
        "field10" between (1 to 2)
        "field11" all listOf("value11")
        "field12" startsWith "value12"
        "field13" elemMatch {
            "field14" eq "value14"
        }
        "field15".isNull()
        "field16".notNull()
        "field17".isTrue()
        "field18".isFalse()
        and {
            "field3" eq "value3"
            "field4" eq "value4"
        }
        or {
            "field3" eq "value3"
            "field4" eq "value4"
        }
    }
}
</code></pre></div><h3>OpenAPI</h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">以下是一個示例<span>&nbsp;</span><code>curl</code><span>&nbsp;</span>命令，用於執行查詢：</p><div><pre><code>  curl -X 'POST' \
  'http://localhost:8080/execution_failed/snapshot/pagination' \
  -H 'accept: application/json' \
  -H 'Content-Type: application/json' \
  -d '{
  "sort": [
    {
      "field": "_id",
      "direction": "DESC"
    }
  ],
  "pagination": {
    "index": 1,
    "size": 10
  },
  "condition": {
    "field": "",
    "operator": "AND",
    "value": "",
    "children": [
      {
        "field": "state.recoverable",
        "operator": "NE",
        "value": "UNRECOVERABLE",
        "children": []
      },
      {
        "field": "state.status",
        "operator": "NE",
        "value": "SUCCEEDED",
        "children": []
      },
      {
        "field": "state.isBelowRetryThreshold",
        "operator": "EQ",
        "value": false,
        "children": []
      }
    ]
  }
}'
</code></pre></div><h3>TypeScript</h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">在<span>&nbsp;</span><em>TypeScript</em><span>&nbsp;</span>中，您可以使用<span>&nbsp;</span><code>Conditions</code><span>&nbsp;</span>類來構建複雜的查詢條件，例如：</p><div><pre><code>Conditions.and(
    [
        Conditions.ne(RECOVERABLE, UNRECOVERABLE),
        Conditions.ne(STATUS, SUCCEEDED),
        Conditions.eq(IS_BELOW_RETRY_THRESHOLD, false)
    ]
)
</code></pre></div><div>
 &nbsp;
</div><h2>簡介</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><em>Wow</em><span>&nbsp;</span>是一個基於領域驅動設計和事件溯源的現代響應式<span>&nbsp;</span><em>CQRS</em><span>&nbsp;</span>微服務開發框架，歷經多年生產環境驗證。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">旨在幫助開發者構建現代化的、高性能且易於維護的微服務應用程序，充分發揮領域驅動設計和事件溯源等模式優勢的同時降低應用的複雜性以及實踐成本。</p><blockquote><p style="margin-left:0; margin-right:0">值得一提的是，領域驅動設計和事件溯源並非微服務架構的專屬，<em>Wow</em><span>&nbsp;</span>框架不僅適用於微服務開發，同樣也可用於構建基於領域驅動設計的單體應用程序。</p></blockquote><h2>快速開始</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://ahoowang.gitee.io/wow/guide/getting-started.html">使用 Wow 項目模板快速創建基於 Wow 框架的 DDD 項目</a></p><h2>特性概覽</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-Features" src="https://gitee.com/AhooWang/Wow/raw/main/documentation/docs/public/images/Features.png" referrerpolicy="no-referrer"></p><h2>架構圖</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-Architecture" src="https://gitee.com/AhooWang/Wow/raw/main/documentation/docs/public/images/Architecture.svg" referrerpolicy="no-referrer"></p><h2>背景</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">隨着業務的發展和複雜性的增加，傳統的架構和開發方式逐漸顯露出瓶頸。<em>領域驅動設計</em>和<em>事件溯源</em>等理念在提高系統設計的靈活性和可維護性方面表現出色，但在實踐中常常需要面對複雜性和學習曲線的挑戰。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><em>Wow</em><span>&nbsp;</span>框架的目標是以簡單易用的方式將領域驅動設計和事件溯源等理念融入到微服務應用開發中，降低開發者的學習成本，提高開發效率。 通過提供現代響應式的<span>&nbsp;</span><em>CQRS</em><span>&nbsp;</span>架構和相關組件，<em>Wow</em><span>&nbsp;</span>框架旨在讓開發者更專注於業務邏輯的實現，而不必過多關心底層技術細節。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">經過多年的實踐和不斷的演進，<em>Wow</em><span>&nbsp;</span>框架在生產環境中得到了驗證，積累了豐富的經驗。這些經驗和反饋不僅豐富了框架的功能和性能，也為持續的改進和優化提供了寶貴的指導。</p><h2>對於開發者而言，<em>Wow</em><span>&nbsp;</span>框架意味着什麼？</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">我曾告誡我的團隊：如果我們過於依賴<em>數據驅動設計</em>而忽視<em>領域驅動設計</em>，我們最終將淪為<span>&nbsp;</span><em>CRUD</em><span>&nbsp;</span>工程師。</p><blockquote><p style="margin-left:0; margin-right:0"><em>CRUD</em><span>&nbsp;</span>工程師的競爭力和可替代性可想而知，這或許是為何會有<span>&nbsp;</span><em>35</em><span>&nbsp;</span>歲效應，企業顯然更傾向於招募沒有太多生活羈絆、更加廉價的<span>&nbsp;</span><em>25</em><span>&nbsp;</span>歲<span>&nbsp;</span><em>CRUD</em><span>&nbsp;</span>工程師。</p></blockquote><h3>業務價值</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">軟件系統的核心價值體現在業務價值上，研發人員不應只關注技術實現上，而是應該更多地關注業務價值的實現。 這其中的好處顯而易見，當你開發完一個業務系統之後，你將變成一個業務專家，甚至比跟你合作的領域專家還要專業，因為你需要洞察業務細節。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">使用<span>&nbsp;</span><em>Wow</em><span>&nbsp;</span>框架，意味着你將關注點放在圍繞領域模型設計上，與業務專家一起探索業務領域，而不是關注於技術實現上。 你僅需編寫領域模型，即可完成服務開發，<em>Wow</em><span>&nbsp;</span>框架自動為你準備好<span>&nbsp;</span><em>OpenAPI</em><span>&nbsp;</span>接口。</p><blockquote><p style="margin-left:0; margin-right:0">在《實現領域驅動設計》一書中，作者 Vaughn Vernon 提到：核心域才值得投入精力進行領域驅動設計， 但如果你使用<span>&nbsp;</span><em>Wow</em><span>&nbsp;</span>框架，你將發現，因為低廉開發成本、快速的開發效率，即使是次要的支撐子域也值得<span>&nbsp;</span><em>DDD</em>。</p></blockquote><h3>性能與伸縮性</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">隨着業務的發展，你需要開始思考系統的性能和伸縮性問題。 在傳統架構中，這牽扯到數據庫關係模式、分片規則等複雜問題，同時你還需要處理因數據庫分片導致的跨分片事務問題。 這時，你不得不修改你的業務代碼，以適應水平拆分後的數據庫架構。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">然而，如果你選擇使用<span>&nbsp;</span><em>Wow</em><span>&nbsp;</span>框架，你將不再需要過多關注數據庫關係模式、分片規則等問題。你的業務代碼無需變更，系統能夠輕鬆實現水平伸縮。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">你可以在這裏瞭解更多關於<span>&nbsp;</span><a href="https://ahoowang.gitee.io/wow/guide/perf-test.html">Wow 框架的性能</a>。</p><h3>讀寫分離與同步延遲</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">讀寫分離是一種極為普遍的性能優化架構模式。 然而，同步延遲問題常伴隨而來，事務執行成功後寫庫落庫成功，但讀庫同步延遲，用户刷新頁面後無法獲取最新數據，從而對用户的體驗產生影響。例如：</p><ul><li>用户發起下單事務，寫庫執行成功，但由於某種原因，讀庫同步延遲，用户刷新頁面後發現訂單未成功創建。</li><li>商家編輯完商品後，同步到<span>&nbsp;</span><em>Elasticsearch</em><span>&nbsp;</span>索引庫，但由於某種原因，同步延遲，導致商家刷新頁面後搜索不到該商品。</li></ul><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">通常，大家採用最簡便的方法，等待 1 秒後刷新頁面。 雖然這種方式能解決大多數數據同步延遲的問題，但效率不夠高。 因為大多數情況下，同步在 100 毫秒內就已完成，剩餘的 900 毫秒成了<em>浪費</em>。 然而，有時 1 秒無法完成同步，這就導致用户獲取的數據變得<strong>無效</strong>。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">使用<span>&nbsp;</span><em>Wow</em><span>&nbsp;</span>框架，你可以通過等待<span>&nbsp;</span><em>PROJECTED</em><span>&nbsp;</span>信號完成，然後再將結果返回給用户，以更為優雅和高效的方式處理數據同步延遲的問題。</p><h3>工程質量</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><em>單元測試</em>是確保代碼質量且符合預期業務需求的重要手段，但在傳統架構中，單元測試往往是一項相當困難的任務，因為你需要考慮數據庫連接、事務管理、數據清理等問題。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">使用<span>&nbsp;</span><em>Wow</em><span>&nbsp;</span>框架，你將會發現基於<span>&nbsp;</span><em>Given-&gt;When-&gt;Expect</em><span>&nbsp;</span>模式的測試套件，使得單元測試變得異常簡單。 你只需關注領域模型是否符合預期，而無需為數據庫連接等問題煩惱。</p><blockquote><p style="margin-left:0; margin-right:0">在實際應用中，我們將領域模型的單元測試覆蓋率下限閾值設置為<span>&nbsp;</span><strong>85%</strong>，也是可以輕鬆實現的。</p><p style="margin-left:0; margin-right:0">在沒有刻意要求的情況下，開發人員甚至自覺地將覆蓋率提升至<span>&nbsp;</span><strong>95%</strong>。</p><p style="margin-left:0; margin-right:0">因此，每次提交代碼都變得輕鬆自在，因為你確信你的代碼經過了充分的測試，並且真正意義上從單元測試中獲得了收益。</p></blockquote><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">在研發同級別的項目中，我們的測試團隊在系統<span>&nbsp;</span><em>API</em><span>&nbsp;</span>測試中發現，基於 Wow 框架的項目，其<span>&nbsp;</span><em>BUG</em><span>&nbsp;</span>數僅為傳統架構項目的<span>&nbsp;</span><strong>1/3</strong>。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">你可以在這裏瞭解更多關於<span>&nbsp;</span><a href="https://ahoowang.gitee.io/wow/guide/test-suite.html">Wow 單元測試套件</a>。</p><h2>對於企業而言，<em>Wow</em><span>&nbsp;</span>框架意味着什麼？</h2><h3>商業智能</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="傳統架構 VS 事件溯源" src="https://foruda.gitee.com/images/1704878807657006766/300ee974_384561.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="ETL 同步流程" src="https://foruda.gitee.com/images/1704878793697689592/5fda25c1_384561.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><em>商業智能</em>是企業決策的關鍵支持，而數據則是商業智能的分析原料。業務數據越為豐富有價值，商業智能的分析結果越準確，決策也就更加可靠。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">與傳統架構有着顯著差異，<em>Wow</em><span>&nbsp;</span>提供了實時聚合根狀態事件（<code>StateEvent</code>）和聚合命令（<code>Command</code>）作為數據分析的數據源，同時極大降低了實時<span>&nbsp;</span><em>ETL</em>（<code>Extract</code>,<span>&nbsp;</span><code>Transform</code>,<span>&nbsp;</span><code>Load</code>）的難度。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">在傳統架構中，實現實時<span>&nbsp;</span><em>ETL</em><span>&nbsp;</span>通常需要經過繁瑣的流程，包括<span>&nbsp;</span><code>DB-&gt;CDC-&gt;Process-&gt;DB</code>，而在<span>&nbsp;</span><em>Wow</em><span>&nbsp;</span>框架中，僅需一段簡單的<span>&nbsp;</span><em>SQL</em><span>&nbsp;</span>腳本即可完成這一過程。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">另外，在傳統架構中，使用<span>&nbsp;</span><em>CDC</em>（<code>MySql Binlog</code>）數據僅記錄數據的變化，缺乏明確的業務語義。進行業務分析時，需要基於數據狀態的變化推斷出業務語義，這往往需要進行大量的數據處理。 相較之下，<em>Wow</em><span>&nbsp;</span>框架直接提供了聚合根狀態事件和聚合命令作為數據分析的數據源，極大降低了數據處理的難度。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><em>Wow</em><span>&nbsp;</span>提供的實時同步機制將數據實時同步至數據倉庫（<em>ClickHouse</em>），為實時數據分析提供了極大的便利。這種方法為商業智能提供了強有力的支持，構建了一個實時數據分析系統，使決策制定能夠基於及時而準確的信息。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">你可以在這裏瞭解更多關於<span>&nbsp;</span><a href="https://ahoowang.gitee.io/wow/guide/bi.html">Wow 商業智能</a>。</p><h3>操作審計</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><em>操作審計</em>是企業中保障安全性和合規性的重要組成部分，同時也是對系統操作進行監控和追蹤的關鍵手段。<em>Wow</em><span>&nbsp;</span>框架在這方面為企業帶來了顯著的優勢。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">通過記錄聚合命令（<code>Command</code>）作為操作審計的數據源，<em>Wow</em><span>&nbsp;</span>框架能夠詳細追蹤系統中的各種操作。 這些記錄不僅包含了操作本身的內容，還涵蓋了操作觸發的副作用（<em>領域事件</em>），為審計提供了更為全面和準確的數據基礎。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">相較於傳統審計方法，<em>Wow</em><span>&nbsp;</span>框架的操作審計的數據源具備更加明確的業務語義，以及操作後產生的明確領域事件。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">此外，Wow 框架提供的實時數據同步機制也為操作審計帶來了便利，確保了審計數據的及時性和一致性。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">瞭解更多關於<span>&nbsp;</span><a href="https://ahoowang.gitee.io/wow/guide/bi.html#%E8%81%9A%E5%90%88%E5%91%BD%E4%BB%A4">Wow 操作審計</a>。</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 07 Mar 2024 01:49:57 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/281886/wow-2-16-16-released</guid>
            <link>https://www.oschina.net/news/281886/wow-2-16-16-released</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[FolkMQ 增加 Node.js 客户端，v1.3.1 發佈]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#24292e; text-align:start">FolkMQ，作一個最簡單的消息中間件（單機版，約 180K TPS）。面向簡單，面向未來！</p><h3>功能簡介</h3><table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:0px; box-sizing:border-box; color:#24292e; display:block; font-family:-apple-system,&quot;system-ui&quot;,&quot;Segoe UI&quot;,Helvetica,Arial,sans-serif,&quot;Apple Color Emoji&quot;,&quot;Segoe UI Emoji&quot;,&quot;Segoe UI Symbol&quot;; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; margin-bottom:16px; margin-top:0px; orphans:2; overflow:auto; text-align:start; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:960px; word-spacing:0px"><tbody><tr><th>角色</th><th>功能</th></tr></tbody><tbody><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">生產端（或發起端）</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">發佈消息、定時消息（或叫延時）、順序消息、可過期消息、事務消息。發送消息（rpc）<br> 支持 Qos0、Qos1</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">&nbsp;</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">&nbsp;</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">消費端（或接收端）</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">訂閲、取消訂閲。消費-ACK（自動、手動）。監聽（rpc）</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">&nbsp;</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">&nbsp;</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">服務端</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">發佈-Confirm、訂閲-Confirm、取消訂閲-Confirm、派發-Retry、派發-Delayed</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">服務端</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">單線程、內存運行、快照持久化（自動、停機、手動）、Broker 模式集羣、集羣熱擴展</td></tr></tbody></table><h3>中間件特點</h3><ul><li>高吞吐量、低延遲</li></ul><p style="color:#24292e; text-align:start">集羣模式每秒能處理百萬消息，最低延遲不到 1 毫秒。</p><ul><li>可擴展性</li></ul><p style="color:#24292e; text-align:start">集羣模式支持服務節點熱擴展。流量高時隨時加，流量低時可減。視頻：</p><ul><li><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1vG411a7Q7%2F" target="_blank">《FolkMQ - "多中心" 集羣模式部署視頻》</a></p></li><li><p>持久性、可靠性</p></li></ul><p style="color:#24292e; text-align:start">消息被快照持久化（類似於 redis）到本地磁盤，並且支持數據備份防止數據丟失</p><ul><li>可集羣、高可用</li></ul><p style="color:#24292e; text-align:start">可單機，可集羣。集羣內任何節點壞掉只要還有「一個」同類節點，仍可提供服務。視頻：</p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1Ha4y1R73b%2F" target="_blank">《FolkMQ - 集羣"高可用性"測試視頻》</a></li></ul><h3>本次更新</h3><ul><li>新增 javascript 語言客户端實現（瀏覽器, uniapp[h5, android, ios], weixin, node.js）</li><li>調整 docker 基礎鏡像改為：adoptopenjdk/openjdk11-openj9 （內存可省一半）</li><li>調整 folkmq-broker 更名為：folkmq-server-broker （相互兼容，體驗不變）</li><li>添加 folkmq-server 對 ws 輸傳協議的支持</li><li>添加 rpc 異常傳導機制</li><li>完善，順序消息的消費邏輯（改為串行消費），更適合數據庫有序同步之類的場景</li><li>完善，許可證本地處理機制（基於 rsa 簽名機制）</li></ul><p style="color:#24292e; text-align:start">啓動服務：</p><pre><code class="language-css">docker run -<span style="color:#e45649">p</span><span style="color:#986801">18602</span>:<span style="color:#986801">18602</span> -p <span style="color:#986801">8602</span>:<span style="color:#986801">8602</span> -e folkmq.schema=<span style="color:#50a14f">'ws'</span> noearorg/folkmq-server:<span style="color:#986801">1.3</span>.<span style="color:#986801">1</span></code></pre><p style="color:#24292e; text-align:start">新功能示例（for Js or Node.js Demo）：</p><pre><code class="language-java">const {FolkMQ} = require(<span style="color:#50a14f">"@noear/folkmq"</span>);

async function <span style="color:#4078f2">main</span><span>()</span> {
    <em>//創建客户端，並連接</em><span style="color:#986801">const</span><span style="color:#986801">client</span><span>=</span> await FolkMQ.createClient(<span style="color:#50a14f">"folkmq🇼🇸//127.0.0.1:18602"</span>)
                            .nameAs(<span style="color:#50a14f">"demoapp"</span>)
                            .connect();

    <em>//訂閲主題</em>
    client.subscribe(<span style="color:#50a14f">"demo"</span>, <span style="color:#0184bb">null</span>, <span style="color:#0184bb">true</span>, message =&gt; {
        console.log(message);
    });

    <em>//發佈消息</em>
    client.publish(<span style="color:#50a14f">"demo"</span>, FolkMQ.newMqMessage(<span style="color:#50a14f">"helloworld!"</span>));
}

main();
</code></pre><h3>代碼倉庫</h3><ul><li><a href="https://gitee.com/noear/folkmq">https://gitee.com/noear/folkmq</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnoear%2Ffolkmq" target="_blank">https://github.com/noear/folkmq</a></li></ul><h3>官網</h3><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ffolkmq.noear.org%2F" target="_blank">https://folkmq.noear.org</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Thu, 07 Mar 2024 00:33:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/281876/folkmq-1-3-1-released</guid>
            <link>https://www.oschina.net/news/281876/folkmq-1-3-1-released</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[冰盾·主動防禦系統 4.0 更新説明]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>冰盾·主動防禦系統是一款基於場景模式的終端、主機主動防禦系統。使用冰盾可以幫助您攔截漏洞攻擊、對抗流氓軟件、保護電腦安全、提高工作效率。</span></p><h3><span>冰盾跟其他 HIPS 軟件的差異</span></h3><blockquote><p style="margin-left:0; margin-right:0"><span>經常有人問，冰盾跟其他的 HIPS 軟件有什麼差異，為什麼選擇冰盾，而不是其他安全軟件。</span></p></blockquote><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>冰盾打破傳統基於對象操作的防護模型（比如文件的增、刪、改、讀等操作防禦），採用基於場景模式的創新規則模型（比如禁止進程啓動、文檔保護、隱私保護），而且設計了基於模板+參數的規則引擎，大大降低了防禦規則的編輯難度，同時還提供規則市場，讓規則的分享和獲取變得觸手可及。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>在性能上，冰盾規則引擎採用雙緩存模式，匹配的效率提升到了極致，在不錯誤設置規則的情況，對系統幾乎沒有任何性能消耗。長期運行也不會有任何內存增長或者性能累計消耗，不僅適應於個人電腦，也非常適用於雲服務器。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>冰盾完全採用微軟推薦的標準內核 API 實現功能，兼容性好，可以跟其他的安全軟件很好並存。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span><img alt="" height="659" src="https://oscimg.oschina.net/oscnet/up-8cb7dc6bc1a19ecd0e51cdc5f09ba05b859.png" width="1292" referrerpolicy="no-referrer"></span></p><h2><span>版本更新説明（4.0.0）</span></h2><ul><li><p style="margin-left:.5rem; margin-right:0"><span>iMonitorSDK 更新到 4.0</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span>添加內核規則引擎</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>添加文件隱藏支持</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>添加沙箱支持</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>添加 RPC 調用進程溯源</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>優化部分性能</span></p></li></ul></li><li><p style="margin-left:.5rem; margin-right:0"><span>模板</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span><strong><span>添加內置規則模板</span></strong></span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span><strong><span>添加高級模板（內核模式）支持</span></strong></span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span><strong><span>添加文件隱藏模板</span></strong></span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span><strong><span>添加輕量級沙箱模板</span></strong></span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span><strong><span>添加域名查詢模板</span></strong></span></p></li></ul></li><li><p style="margin-left:.5rem; margin-right:0"><span>增強防禦</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span>添加模擬鼠標鍵盤監控</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>添加訪問剪切板監控</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>添加修改系統時間監控</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>添加關鍵事件監控</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>添加修改桌面背景監控</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>添加磁盤控制監控</span></p></li></ul></li><li><p style="margin-left:.5rem; margin-right:0"><span>詢問彈框</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span>添加簽名信息顯示</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>添加事件自定義</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span><strong><span>彈框響應記錄支持緩存（默認 1 分鐘相同事件不提醒，可以設置裏面修改）</span></strong></span></p></li></ul></li><li><p style="margin-left:.5rem; margin-right:0"><span>攔截記錄</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span>添加分頁支持</span></p></li></ul></li><li><p style="margin-left:.5rem; margin-right:0"><span>信任列表</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span>支持參數組</span></p></li></ul></li><li><p style="margin-left:.5rem; margin-right:0"><span>優化</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span>優化規則參數設置</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>廢棄部分過期的模板</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>優化內核進程列表性能</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>添加 Image 挾持保護</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>增強自保護邏輯</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span><strong><span>添加遠程調用溯源（服務創建、驅動加載、任務計劃、用户創建、DNS 查詢等可以定位到來源）</span></strong></span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>添加內核級別的規則設置</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>添加 WMI 進程創建監控</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>規則組支持剪切板導入</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>參數支持拖曳移動位置</span></p></li></ul></li><li><p style="margin-left:.5rem; margin-right:0"><span>修復</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span>添加網絡過濾驅動的兼容性</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>優化 HKEY_CLASSES_ROOT 重定向問題</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>修復端口防火牆彈框信任錯誤</span></p></li></ul></li></ul><p><img alt="" height="474" src="https://oscimg.oschina.net/oscnet/up-bcac92e03041cc32c65c9061a0838870136.png" width="668" referrerpolicy="no-referrer"></p><p><img alt="" height="486" src="https://oscimg.oschina.net/oscnet/up-cd947567df7f756bf5dbbcbe1b068228f7e.png" width="664" referrerpolicy="no-referrer"></p><p><img alt="" height="412" src="https://oscimg.oschina.net/oscnet/up-46e1a1e16b5d86d6738ce4fd27a8da42c4c.png" width="647" referrerpolicy="no-referrer"></p><p><img alt="" height="446" src="https://oscimg.oschina.net/oscnet/up-9bbe646c78de8c81565458c2e340dba1d07.png" width="660" referrerpolicy="no-referrer"></p><p><img alt="" height="448" src="https://oscimg.oschina.net/oscnet/up-d2316bc803892382fa769d1715436b9f9ab.png" width="660" referrerpolicy="no-referrer"></p><p>&nbsp;</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 06 Mar 2024 14:58:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/281851</guid>
            <link>https://www.oschina.net/news/281851</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Claude 3 系列模型來啦 - 開源 AI 聊天、繪圖軟件 AIdea 已更新]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>近期，OpenAI 的主要競爭者 Anthropic 推出了他們的新一代大型語言模型 Claude 3，該系列涵蓋了三個不同規模的模型：Opus、Sonnet 和 Haiku。</p><p><img alt="Claude 3 模型比較圖" src="https://ssl.aicode.cc/mweb/20240306/17097175055447.jpg" referrerpolicy="no-referrer"></p><p>AIdea 已經更新，加入了對最新的 Claude 3 模型的支持（儘管 Haiku 模型目前還未對外開放）。歡迎大家嘗試體驗！下載體驗地址：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Faidea.aicode.cc" target="_blank">https://aidea.aicode.cc</a> 。</p><p><img alt="數字人對話" src="https://ssl.aicode.cc/mweb/20240306/17097177358067.jpg" referrerpolicy="no-referrer"></p><p><img alt="羣聊對話" src="https://ssl.aicode.cc/mweb/20240306/17097177424575.jpg" referrerpolicy="no-referrer"></p><p><img alt="常用模型設置" src="https://ssl.aicode.cc/mweb/20240306/17097177476476.jpg" referrerpolicy="no-referrer"></p><p>AIdea 是一款集成了主流大語言模型以及繪圖模型的 APP，採用 Flutter + Golang 開發，代碼完全開源，目前已經支持以下大語言模型</p><p><img alt="" src="https://ssl.aicode.cc/mweb/20240220/17084183450421.jpg" referrerpolicy="no-referrer"></p><p>整體技術棧如下圖</p><p><img alt="" src="https://ssl.aicode.cc/mweb/20231225/17034970421740.jpg" referrerpolicy="no-referrer"></p><p>如果你對 AIdea 項目感興趣，以下是 Github 地址，趕緊去 Star 一下吧！</p><ul><li>客户端（ Flutter ）： <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmylxsw%2Faidea" target="_blank">https://github.com/mylxsw/aidea</a></li><li>服務端（ Golang ）： <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmylxsw%2Faidea-server" target="_blank">https://github.com/mylxsw/aidea-server</a></li><li>Docker 一鍵部署安裝包：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmylxsw%2Faidea-docker" target="_blank">https://github.com/mylxsw/aidea-docker</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Wed, 06 Mar 2024 09:44:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/281805/aidea-claude3</guid>
            <link>https://www.oschina.net/news/281805/aidea-claude3</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[【Java 比較 ORM 框架操作數據】操作批量新增、分頁查詢（七）]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h3>orm 框架使用性能比較</h3><h4>比較 mybatis、lazy、sqltoy、mybatis-flex、easy-query、mybatis-mp、jpa、dbvisitor、beetlsql 操作數據</h4><h4>環境：</h4><pre><code>idea 
jdk17
spring boot 3.0.7
mysql 8.0
</code></pre><h3>測試條件常規對象</h3><table><tbody><tr><th>orm 框架</th><th>是否支持 xml</th><th>是否支持 Lambda</th><th>對比版本</th><th>編碼方式</th></tr></tbody><tbody><tr><td>mybatis</td><td>☑️</td><td>☑️</td><td>3.5.4</td><td>lambda +xml 優化</td></tr><tr><td>sqltoy</td><td>☑️</td><td>☑️</td><td>5.2.98</td><td>lambda</td></tr><tr><td>lazy</td><td>✖️</td><td>☑️</td><td>1.2.4-JDK17-SNAPSHOT</td><td>lambda</td></tr><tr><td>mybatis-flex</td><td>☑️</td><td>☑️</td><td>1.8.0</td><td>lambda +xml 優化</td></tr><tr><td>easy-query</td><td>✖️</td><td>☑️</td><td>1.10.31</td><td>lambda</td></tr><tr><td>mybatis-mp</td><td>☑️</td><td>☑️</td><td>1.4.1</td><td>xml 優化</td></tr><tr><td>jpa</td><td>☑️</td><td>☑️</td><td>3.0.7</td><td>----------------------</td></tr><tr><td>dbvisitor</td><td>☑️</td><td>☑️</td><td>5.4.1</td><td>xml 優化</td></tr><tr><td>beetlsql</td><td>支持 md</td><td>☑️</td><td>3.26.0-RELEASE</td><td>insert ignore into 優化</td></tr></tbody></table><h3>數據庫表 (含有唯一性索引 s_u)</h3><pre><code class="language-sql">CREATE TABLE `sys_user`
(
    `column_name` varchar(255) COLLATE utf8mb4_general_ci DEFAULT NULL COMMENT '額外字段',
    `create_time` datetime                                DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '創建時間',
    `id`          bigint NOT NULL AUTO_INCREMENT COMMENT '用户 ID',
    `is_deleted`  tinyint(1) DEFAULT NULL COMMENT 'null',
    `password`    varchar(255) COLLATE utf8mb4_general_ci DEFAULT NULL COMMENT '密碼',
    `scope`       varchar(255) COLLATE utf8mb4_general_ci DEFAULT NULL COMMENT 'null',
    `status`      tinyint(1) DEFAULT NULL COMMENT '狀態',
    `update_time` datetime                                DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新時間',
    `username`    varchar(255) COLLATE utf8mb4_general_ci DEFAULT NULL COMMENT '用户名',
    PRIMARY KEY (`id`) USING BTREE,
    UNIQUE KEY `s_u` (`scope`,`username`)
) ENGINE=InnoDB AUTO_INCREMENT=9223371632070323791 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;
</code></pre><h3>比較方法:增加、修改、刪除、分頁查詢（當前項目暫時只比較批量新增和分頁）</h3><h4>項目設計</h4><ul><li><p>聲明 ORMRepository 接口提供對應增刪改查方法&nbsp;</p></li><li><p>聲明 ORMComparisonRepository 接口，繼承 ORMRepository 下游由不同 ORM 實現</p></li><li><p>聲明 SysUserRepository 接口，繼承 ORMRepository 用於循環調用不同 orm 實現方法執行方法測試產生測試結果</p></li><li><p>聲明抽象類 SysUserRepositoryAbstractRecord 繼承 ORMComparisonRepository 並且提供對應的框架執行結果存儲&nbsp;</p></li><li><p>不同 ORM 框架創建 ORMComparisonRepository 的實現</p></li><li><p>不同 ORM 操作數據的實現</p></li></ul><h3>測試條件，批量插入數據 10、100、1000、10000、100000 ，分頁查詢數據 10、100、1000、10000、100000</h3><pre><code>項目啓動後使用瀏覽器打開 http://localhost:1003/sys/user/run-compare
</code></pre><h3>測試條件（細節比較） 批量插入數據 1～10000，分頁查詢數據 1～10000</h3><pre><code>項目啓動後使用瀏覽器打開 http://localhost:1003/sys/user/run-particulars-compare
</code></pre><h3>測試執行過程</h3><pre><code>清空需要插入表中所有數據
通過三種 ORM 框架進行數據批量新增、而後進行分頁查詢，記錄消耗時間，輸出 md 文檔
</code></pre><h3><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Flocalhost%3A1003%2F" target="_blank">查看結果曲線圖</a></h3><p><img height="757" src="https://oscimg.oschina.net/oscnet/up-61371d910485615d211e20a380e8457b728.png" width="1401" referrerpolicy="no-referrer"></p><h3>測試結果（結果只提供參考）</h3><table><tbody><tr><th>MYBATIS_FLEX(batchStory)</th><th>影響行數:10</th><th>影響行數:100</th><th>影響行數:1000</th><th>影響行數:10000</th><th>影響行數:100000</th></tr></tbody><tbody><tr><td>執行時間:</td><td><strong>25 毫秒</strong></td><td><strong>18 毫秒</strong></td><td><strong>73 毫秒</strong></td><td><strong>671 毫秒</strong></td><td><strong>6653 毫秒</strong></td></tr></tbody></table><table><tbody><tr><th>MYBATIS(batchStory)</th><th>影響行數:10</th><th>影響行數:100</th><th>影響行數:1000</th><th>影響行數:10000</th><th>影響行數:100000</th></tr></tbody><tbody><tr><td>執行時間:</td><td><strong>51 毫秒</strong></td><td><strong>28 毫秒</strong></td><td><strong>84 毫秒</strong></td><td><strong>601 毫秒</strong></td><td><strong>5963 毫秒</strong></td></tr></tbody></table><table><tbody><tr><th>LAZY(batchStory)</th><th>影響行數:10</th><th>影響行數:100</th><th>影響行數:1000</th><th>影響行數:10000</th><th>影響行數:100000</th></tr></tbody><tbody><tr><td>執行時間:</td><td><strong>4 毫秒</strong></td><td><strong>12 毫秒</strong></td><td><strong>48 毫秒</strong></td><td><strong>353 毫秒</strong></td><td><strong>3512 毫秒</strong></td></tr></tbody></table><table><tbody><tr><th>MYBATIS_MP(batchStory)</th><th>影響行數:10</th><th>影響行數:100</th><th>影響行數:1000</th><th>影響行數:10000</th><th>影響行數:100000</th></tr></tbody><tbody><tr><td>執行時間:</td><td><strong>8 毫秒</strong></td><td><strong>16 毫秒</strong></td><td><strong>66 毫秒</strong></td><td><strong>589 毫秒</strong></td><td><strong>6060 毫秒</strong></td></tr></tbody></table><table><tbody><tr><th>DB_VISITOR(batchStory)</th><th>影響行數:10</th><th>影響行數:100</th><th>影響行數:1000</th><th>影響行數:10000</th><th>影響行數:100000</th></tr></tbody><tbody><tr><td>執行時間:</td><td><strong>67 毫秒</strong></td><td><strong>155 毫秒</strong></td><td><strong>897 毫秒</strong></td><td><strong>8368 毫秒</strong></td><td><strong>82348 毫秒</strong></td></tr></tbody></table><table><tbody><tr><th>JPA(batchStory)</th><th>影響行數:10</th><th>影響行數:100</th><th>影響行數:1000</th><th>影響行數:10000</th><th>影響行數:100000</th></tr></tbody><tbody><tr><td>執行時間:</td><td><strong>67 毫秒</strong></td><td><strong>64 毫秒</strong></td><td><strong>952 毫秒</strong></td><td><strong>8608 毫秒</strong></td><td><strong>95946 毫秒</strong></td></tr></tbody></table><table><tbody><tr><th>EASY_QUERY(batchStory)</th><th>影響行數:10</th><th>影響行數:100</th><th>影響行數:1000</th><th>影響行數:10000</th><th>影響行數:100000</th></tr></tbody><tbody><tr><td>執行時間:</td><td><strong>58 毫秒</strong></td><td><strong>91 毫秒</strong></td><td><strong>395 毫秒</strong></td><td><strong>1608 毫秒</strong></td><td><strong>15802 毫秒</strong></td></tr></tbody></table><table><tbody><tr><th>SQLTOY(batchStory)</th><th>影響行數:10</th><th>影響行數:100</th><th>影響行數:1000</th><th>影響行數:10000</th><th>影響行數:100000</th></tr></tbody><tbody><tr><td>執行時間:</td><td><strong>35 毫秒</strong></td><td><strong>36 毫秒</strong></td><td><strong>173 毫秒</strong></td><td><strong>1540 毫秒</strong></td><td><strong>15167 毫秒</strong></td></tr></tbody></table><table><tbody><tr><th>BEETL_SQL(batchStory)</th><th>影響行數:10</th><th>影響行數:100</th><th>影響行數:1000</th><th>影響行數:10000</th><th>影響行數:100000</th></tr></tbody><tbody><tr><td>執行時間:</td><td><strong>187 毫秒</strong></td><td><strong>106 毫秒</strong></td><td><strong>260 毫秒</strong></td><td><strong>1713 毫秒</strong></td><td><strong>16778 毫秒</strong></td></tr></tbody></table><table><tbody><tr><th>MYBATIS_FLEX(findPage)</th><th>影響行數:10</th><th>影響行數:100</th><th>影響行數:1000</th><th>影響行數:10000</th><th>影響行數:100000</th></tr></tbody><tbody><tr><td>執行時間:</td><td><strong>28 毫秒</strong></td><td><strong>8 毫秒</strong></td><td><strong>19 毫秒</strong></td><td><strong>113 毫秒</strong></td><td><strong>865 毫秒</strong></td></tr></tbody></table><table><tbody><tr><th>MYBATIS(findPage)</th><th>影響行數:10</th><th>影響行數:100</th><th>影響行數:1000</th><th>影響行數:10000</th><th>影響行數:100000</th></tr></tbody><tbody><tr><td>執行時間:</td><td><strong>26 毫秒</strong></td><td><strong>7 毫秒</strong></td><td><strong>20 毫秒</strong></td><td><strong>98 毫秒</strong></td><td><strong>732 毫秒</strong></td></tr></tbody></table><table><tbody><tr><th>LAZY(findPage)</th><th>影響行數:10</th><th>影響行數:100</th><th>影響行數:1000</th><th>影響行數:10000</th><th>影響行數:100000</th></tr></tbody><tbody><tr><td>執行時間:</td><td><strong>5 毫秒</strong></td><td><strong>5 毫秒</strong></td><td><strong>9 毫秒</strong></td><td><strong>71 毫秒</strong></td><td><strong>474 毫秒</strong></td></tr></tbody></table><table><tbody><tr><th>MYBATIS_MP(findPage)</th><th>影響行數:10</th><th>影響行數:100</th><th>影響行數:1000</th><th>影響行數:10000</th><th>影響行數:100000</th></tr></tbody><tbody><tr><td>執行時間:</td><td><strong>28 毫秒</strong></td><td><strong>5 毫秒</strong></td><td><strong>16 毫秒</strong></td><td><strong>89 毫秒</strong></td><td><strong>752 毫秒</strong></td></tr></tbody></table><table><tbody><tr><th>DB_VISITOR(findPage)</th><th>影響行數:10</th><th>影響行數:100</th><th>影響行數:1000</th><th>影響行數:10000</th><th>影響行數:100000</th></tr></tbody><tbody><tr><td>執行時間:</td><td><strong>14 毫秒</strong></td><td><strong>4 毫秒</strong></td><td><strong>9 毫秒</strong></td><td><strong>50 毫秒</strong></td><td><strong>424 毫秒</strong></td></tr></tbody></table><table><tbody><tr><th>JPA(findPage)</th><th>影響行數:10</th><th>影響行數:100</th><th>影響行數:1000</th><th>影響行數:10000</th><th>影響行數:100000</th></tr></tbody><tbody><tr><td>執行時間:</td><td><strong>85 毫秒</strong></td><td><strong>11 毫秒</strong></td><td><strong>49 毫秒</strong></td><td><strong>117 毫秒</strong></td><td><strong>805 毫秒</strong></td></tr></tbody></table><table><tbody><tr><th>EASY_QUERY(findPage)</th><th>影響行數:10</th><th>影響行數:100</th><th>影響行數:1000</th><th>影響行數:10000</th><th>影響行數:100000</th></tr></tbody><tbody><tr><td>執行時間:</td><td><strong>39 毫秒</strong></td><td><strong>9 毫秒</strong></td><td><strong>22 毫秒</strong></td><td><strong>60 毫秒</strong></td><td><strong>474 毫秒</strong></td></tr></tbody></table><table><tbody><tr><th>SQLTOY(findPage)</th><th>影響行數:10</th><th>影響行數:100</th><th>影響行數:1000</th><th>影響行數:10000</th><th>影響行數:100000</th></tr></tbody><tbody><tr><td>執行時間:</td><td><strong>23 毫秒</strong></td><td><strong>4 毫秒</strong></td><td><strong>10 毫秒</strong></td><td><strong>45 毫秒</strong></td><td><strong>249 毫秒</strong></td></tr></tbody></table><table><tbody><tr><th>BEETL_SQL(findPage)</th><th>影響行數:10</th><th>影響行數:100</th><th>影響行數:1000</th><th>影響行數:10000</th><th>影響行數:100000</th></tr></tbody><tbody><tr><td>執行時間:</td><td><strong>43 毫秒</strong></td><td><strong>13 毫秒</strong></td><td><strong>21 毫秒</strong></td><td><strong>76 毫秒</strong></td><td><strong>633 毫秒</strong></td></tr></tbody></table><h4>寫在最後</h4><p>細節數據對比（一萬以內基本相差不大）</p><ul><li>細節數據對比，數據屬於併發行測試數據，如果測試總數是一百，那麼會執行一百次 batchStory，一百次 findPage 每次執行的條數在之前數據的基礎上+1</li></ul><p>從形成的折線圖看（具體趨勢看排名與測試結果）</p><ul><li>存儲性能對比: lazy、mybatis-flex、mybatis-mp、mybatis、easy-query、sqltoy、beetlSql 更適合併發性數據存儲。jpa、db_visitor 處理耗時較長</li><li>分頁查詢性能對比: lazy、mybatis-flex、mybatis-mp、mybatis、easy-query、sqltoy、db_visitor、beetlSql 都比較穩定。jpa 處理時間明顯起伏</li></ul><p><img height="679" src="https://oscimg.oschina.net/oscnet/up-f09e3ee8efef84baba88890fb63e6d31a3b.png" width="1406" referrerpolicy="no-referrer"></p><p><img height="698" src="https://oscimg.oschina.net/oscnet/up-928ba767617bad09b2b47481d399c812a70.png" width="1402" referrerpolicy="no-referrer"></p><p>批量保存：</p><ul><li>一萬條數據以內 lazy、mybatis-flex、mybatis-mp、mybatis、easy-query、sqltoy、beetlSql、jpa、db_visitor 性能趨於一致</li><li>十萬數據時，處理時間由快到慢依次是: lazy、mybatis-flex、mybatis-mp、mybatis、easy-query、sqltoy、beetlSql、db_visitor、jpa，其中 db_visitor、jpa 處理時間明顯起伏</li></ul><p>分頁查詢：</p><ul><li>一萬條數據以內，幾款 ORM 均保持在 200 毫秒內</li><li>十萬數據時，處理時間由快到慢依次是: sqltoy、db_visitor、easy-query、lazy、beetlSql、mybatis、mybatis-mp、jpa、mybatis-flex</li><li>&nbsp;</li></ul><h3>快速數據對比 (大數據曲線圖)</h3><p><img height="674" src="https://oscimg.oschina.net/oscnet/up-6a71c9a1e912b97ed59450e7362b127b8cf.png" width="1407" referrerpolicy="no-referrer"></p><p><img height="686" src="https://oscimg.oschina.net/oscnet/up-f5898a01682ab16289012b658c8c02e3c2c.png" width="1389" referrerpolicy="no-referrer"></p><h4><a href="https://gitee.com/wujiawei1207537021/wu-compare-orm-demo">當前項目地址</a></h4><h4><a href="https://gitee.com/wujiawei1207537021/wu-framework-parent/tree/master/wu-database-parent">lazy-orm 地址</a></h4><h4><a href="https://gitee.com/baomidou/mybatis-plus">mybatis 地址</a></h4><h4><a href="https://gitee.com/sagacity/sagacity-sqltoy">sqltoy 地址</a></h4><h4><a href="https://gitee.com/mybatis-flex/mybatis-flex">mybatis-flex 地址</a></h4><h4><a href="https://gitee.com/xuejm/easy-query">easy-query 地址</a></h4><h4><a href="https://gitee.com/mybatis-mp/mybatis-mp">mybatis-mp 地址</a></h4><h4><a href="https://gitee.com/zycgit/dbvisitor">dbvisitor 地址</a></h4><h4><a href="https://gitee.com/xiandafu/beetlsql">beetlsql 地址</a></h4></div>
                                    ]]>
            </description>
            <pubDate>Wed, 06 Mar 2024 09:24:40 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/281792</guid>
            <link>https://www.oschina.net/news/281792</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[前端開源項目 Fes-design 版本更新]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h3><span style="background-color:#ffffff; color:#24292f">v0.8.32</span></h3><h3>Bug Fixes</h3><ul><li>修復 ExtractPublicPropTypes 推導組件 Props 類型問題 (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FWeBankFinTech%2Ffes-design%2Fissues%2F644" target="_blank">#644</a>) (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FWeBankFinTech%2Ffes-design%2Fcommit%2Fc48fc19bc8f721113ee9ba091c39d1f8b10f8778" target="_blank">c48fc19</a>)</li><li>修復因 vue 版本升級引起的類型報錯 (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FWeBankFinTech%2Ffes-design%2Fissues%2F654" target="_blank">#654</a>) (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FWeBankFinTech%2Ffes-design%2Fcommit%2Fc8a4424e3fac4d76c88576d026965bdb968a7c46" target="_blank">c8a4424</a>)</li><li><strong>Input:</strong><span>&nbsp;</span>word limit 樣式優化 (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FWeBankFinTech%2Ffes-design%2Fissues%2F638" target="_blank">#638</a>) (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FWeBankFinTech%2Ffes-design%2Fcommit%2F7052bc9a2e2a7cf7029bfbc84f889dc92f4f18cb" target="_blank">7052bc9</a>)</li><li><strong>Tabs:</strong><span>&nbsp;</span>移除 props 中的 key 配置項，由於是 vue 的保留字段 (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FWeBankFinTech%2Ffes-design%2Fissues%2F646" target="_blank">#646</a>) (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FWeBankFinTech%2Ffes-design%2Fcommit%2F525e822de34bdf1d0596b25d1bcd8d53736e6a46" target="_blank">525e822</a>)</li></ul><h3>Features</h3><ul><li>日期選擇器 minDate,maxDate 傳時間戳 (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FWeBankFinTech%2Ffes-design%2Fissues%2F634" target="_blank">#634</a>) (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FWeBankFinTech%2Ffes-design%2Fcommit%2Fcc3624b54a7a15cd7faf931a08958eef9497d452" target="_blank">cc3624b</a>)</li><li><strong>Avatar:</strong><span>&nbsp;</span>新增頭像，頭像組組件 (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FWeBankFinTech%2Ffes-design%2Fissues%2F633" target="_blank">#633</a>) (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FWeBankFinTech%2Ffes-design%2Fcommit%2F676dfec6c465cda5320a632f4ccbbfc195b3978c" target="_blank">676dfec</a>)</li><li><strong>Popper:</strong><span>&nbsp;</span>新增 popperStyle prop (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FWeBankFinTech%2Ffes-design%2Fissues%2F652" target="_blank">#652</a>) (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FWeBankFinTech%2Ffes-design%2Fcommit%2F287dab8a1572ff8e500646999037c3fa98b9628c" target="_blank">287dab8</a>)</li></ul></div>
                                    ]]>
            </description>
            <pubDate>Wed, 06 Mar 2024 08:54:47 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/281779/fes-design-0-8-32-released</guid>
            <link>https://www.oschina.net/news/281779/fes-design-0-8-32-released</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[新篇章，穩步向前，.NET 流行框架 Furion v4.9.1.37 發佈]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>自上次版本發佈以來，已過去十餘日。經過四年的持續精進與迭代，Furion v4 已變得極為成熟與穩定，吸引了越來越多的企業與個人用户。去年，我們推行了 Furion 部分文檔付費政策，這一決策在當時引發了用户的各種反饋。然而，令人欣慰的是，今年我們獲得了大多數用户的理解與支持，這使得我們的整體運營逐漸迴歸正軌。同時，選擇並信賴 Furion 的用户數量也在持續增長。</p><p><strong>截止至 2024 年 3 月 6 日，Furion 在 Gitee 平台上的 Star 數量已突破 11K，並持續以每日 8-10 個 Star 的速度穩健增長。</strong></p><p><img height="1322" src="https://oscimg.oschina.net/oscnet/up-ea663fb55b7fd69dd53fd165b018e850fc3.png" width="1695" referrerpolicy="no-referrer"></p><p><img height="1322" src="https://oscimg.oschina.net/oscnet/up-e76a64ebf417abdc8cb218cde143339b45c.png" width="1695" referrerpolicy="no-referrer"></p><p><img height="1322" src="https://oscimg.oschina.net/oscnet/up-edb97edcc5227472feb2008a1633583f41f.png" width="1695" referrerpolicy="no-referrer"></p><h2>項目信息</h2><ul><li>Gitee：<strong><a href="https://gitee.com/dotnetchina/Furion">https://gitee.com/dotnetchina/Furion</a></strong></li><li>Github：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FMonkSoul%2FFurion" target="_blank">https://github.com/MonkSoul/Furion</a></li><li>文檔：<strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ffurion.net" target="_blank">https://furion.net</a></strong></li></ul><h2>本期亮點</h2><h3>1. 完善了診斷日誌輸出，打印更多信息</h3><p><img src="https://foruda.gitee.com/images/1709356730243808553/6c65cb08_974299.png" referrerpolicy="no-referrer"></p><h3>2. Docker 部署文檔添加 Harbor 漏洞 Trivy 組件掃描文檔</h3><p><img height="1328" src="https://oscimg.oschina.net/oscnet/up-7cd33f157453f581208d9de5e0381a0145f.png" width="1718" referrerpolicy="no-referrer"></p><h2>本期更新</h2><ul><li><p style="margin-left:0; margin-right:0"><strong>新特性</strong></p><ul><li>[新增] 監聽日誌<span>&nbsp;</span><code>Monitor</code><span>&nbsp;</span>支持顯示服務端端口號<span>&nbsp;</span>4.9.1.36<span>&nbsp;</span>⏱️2024.03.02<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/9280b6d02fa14cc2a22248d8dd9f82c9d3679d63">9280b6d</a></li><li>[新增] 監聽日誌<span>&nbsp;</span><code>Monitor</code><span>&nbsp;</span>支持顯示客户端（遠程）<code>NAT</code><span>&nbsp;</span>端口號<span>&nbsp;</span>4.9.1.36<span>&nbsp;</span>⏱️2024.03.02<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/issues/I957SE">#I957SE</a></li><li>[新增] 監聽日誌<span>&nbsp;</span><code>Monitor</code><span>&nbsp;</span>支持顯示<span>&nbsp;</span><code>Web</code><span>&nbsp;</span>主機啓動或監聽的地址<span>&nbsp;</span>4.9.1.36<span>&nbsp;</span>⏱️2024.03.02<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/issues/I94XR1">#I94XR1</a><span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/0e3417285f3a9fb1ccc8ae10e9a1155717bf9a58">0e34172</a></li></ul></li><li><p style="margin-left:0; margin-right:0"><strong>問題修復</strong></p><ul><li>[修復]<span>&nbsp;</span><code>Web</code><span>&nbsp;</span>主機未啓動但泛型主機已啓動時使用<span>&nbsp;</span><code>App.GetService</code><span>&nbsp;</span>出現<span>&nbsp;</span><code>RootServices</code><span>&nbsp;</span>為<span>&nbsp;</span><code>null</code><span>&nbsp;</span>問題<span>&nbsp;</span>4.9.1.37<span>&nbsp;</span>⏱️2024.03.03<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/ee70ab9bdf5b38683b6c3f9aeef12a2bf64f787a">ee70ab9</a></li><li>[修復] 任務隊列訂閲任務執行結果處理程序中出現異常後重復觸發問題<span>&nbsp;</span>4.9.1.35<span>&nbsp;</span>⏱️2024.02.28<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/fa81c548f02c0e6d8c90eb9abddb658cf50aa6c9">fa81c54</a></li><li>[修復] 事件總線因<span>&nbsp;</span><code>4.9.1.33</code>（<a href="https://gitee.com/dotnetchina/Furion/commit/0bbeb49b97e186d1719b106637e131f6333417e3">0bbeb49</a>） 版本導致自定義事件存儲器無法消費動態訂閲器問題<span>&nbsp;</span>4.9.1.34<span>&nbsp;</span>⏱️2024.02.27<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/d66175c9a3b84f0dc626ed6dc44a64673432e830">d66175c</a></li></ul></li><li><p style="margin-left:0; margin-right:0"><strong>其他更改</strong></p><ul><li>[優化] 事件總線在超高頻事件中內存佔用（約<span>&nbsp;</span><code>9%</code>）<span>&nbsp;</span>4.9.1.33<span>&nbsp;</span>⏱️2024.02.25<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/0bbeb49b97e186d1719b106637e131f6333417e3">0bbeb49</a></li></ul></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Wed, 06 Mar 2024 08:12:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/281763/furion-4-9-1-37-released</guid>
            <link>https://www.oschina.net/news/281763/furion-4-9-1-37-released</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Swift 5.10 發佈]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Swift 5.10 現已<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.swift.org%2Fblog%2Fswift-5.10-released%2F" target="_blank">發佈</a>，此版本<span style="color:#000000"><strong>在併發語言模型中實現了完全的數據隔離。</strong>公告稱，「這一重要的里程碑經過了多年的積極開發，歷經多個版本。」</span></p><p><span style="color:#000000">併發模型是在 Swift 5.5 中引入的，包括</span><code class="language-plaintext">async</code><span style="color:#000000">/</span><code class="language-plaintext">await</code><span style="color:#000000">、actors 和結構化併發 (structured concurrency)。Swift 5.7 引入了<code class="language-plaintext">Sendable</code>線程安全類型的基本概念，其值可以在任意併發上下文之間共享，而不會引入數據競爭的風險。現在，在 Swift 5.10 中，當啓用完整的併發檢查選項時，語言的所有區域都會在編譯時強制執行完全數據隔離。</span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000">Swift 5.10 中的完全數據隔離為下一個主要版本 Swift 6 奠定了基礎。Swift 6.0 編譯器將提供新的、可選的 Swift 6 語言模式，該模式將默認強制執行完全數據隔離，項目團隊將着手進行過渡消除所有用 Swift 編寫的軟件之間的數據競爭。</span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000">Swift 5.10 會在某些情況下產生數據競爭警告，而在這些情況下，通過額外的編譯器分析可以證明代碼是安全的。Swift 6 版本的語言開發的一個主要重點是通過減少已證明安全的常見代碼模式中的誤報併發錯誤，來提高嚴格併發檢查的可用性。</span></p><p style="margin-left:0; margin-right:0; text-align:start"><strong><span style="color:#000000">完全數據隔離</span></strong></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000">Swift 5.10 完善了語言各個角落的數據競爭安全語義，並修復了<code class="language-plaintext">Sendable</code>和 actor isolation checking 中的大量錯誤，以加強完整併發檢查的保證。使用編譯器 flag<code class="language-plaintext">-strict-concurrency=complete</code>構建代碼時，Swift 5.10 將在編譯時診斷數據競爭的可能性，除非使用 explicit unsafe opt-out（例如<code class="language-plaintext">nonisolated(unsafe)</code>或<code class="language-plaintext">@unchecked Sendable</code>）。</span></p><pre><code> warning: expression is 'async' but is not marked with 'await'
    let model = MyModel.shared
                ^~~~~~~~~~~~~~
                await</code></pre><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000">解決數據競爭的可能修復方法有：</span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000">1)&nbsp;</span><span style="color:#000000">access&nbsp;</span><code class="language-plaintext">MyModel.shared</code><span style="color:#000000">&nbsp;asynchronously using&nbsp;</span><code class="language-plaintext">await</code></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000">2) 使<code class="language-plaintext">MyModel.init</code>和<code class="language-plaintext">MyModel.shared</code>兩者都<code class="language-plaintext">nonisolated</code>，並將需要 main actor 的代碼移到單獨的隔離方法中，或 </span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000">3) 將<code class="language-plaintext">useShared()</code>隔離到<code class="language-plaintext">@MainActor</code>。</span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapple%2Fswift%2Fblob%2Frelease%2F5.10%2FCHANGELOG.md" target="_blank">可以在 Swift 5.10 發行説明</a>中查看更多詳細信息。</span></p><p><strong>Unsafe opt-outs</strong></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000">Swift 5.10 引入了一個新<code class="language-plaintext">nonisolated(unsafe)</code>keyword，用於 opt out 對存儲的屬性和變量的 actor isolation checking。<code class="language-plaintext">nonisolated(unsafe)</code>可用於任何形式的存儲，包括存儲屬性、局部變量和全局/靜態變量。</span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000"><code class="language-plaintext">nonisolated(unsafe)</code>還消除了對<code class="language-plaintext">@unchecked Sendable</code>wrapper types 的需要，</span>這些類型僅用於在不存在併發訪問可能性時跨隔離邊界傳遞非<span style="color:#000000"><code class="language-plaintext">Sendable</code></span>值的特定實例：</p><pre><code>// 'MutableData' is not 'Sendable'
class MutableData { ... }

func processData(_: MutableData) async { ... }

@MainActor func send() async {
  nonisolated(unsafe) let data = MutableData()
  await processData(data)
}</code></pre><h4><strong>Swift 6 之前的語言演變</strong></h4><p>Swift 的下一個版本將是 Swift 6。鑑於 Swift 5.10 中的完整併發模型限制過多，團隊目前正在積極開發幾項 Swift Evolution 提議，以通過消除誤報數據競爭錯誤來提高完整數據隔離的可用性。</p><p>這項工作包括：當編譯器確定沒有併發訪問的可能性時，取消對跨隔離邊界傳遞 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapple%2Fswift-evolution%2Fblob%2Fmain%2Fproposals%2F0414-region-based-isolation.md" target="_blank">non-<code class="language-plaintext">Sendable</code></a>值的限制；為&nbsp;functions 和 key-paths&nbsp;提供更有效的<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapple%2Fswift-evolution%2Fblob%2Fmain%2Fproposals%2F0418-inferring-sendable-for-methods.md" target="_blank"><code class="language-plaintext">Sendable</code>&nbsp;inference</a>&nbsp;等。可以在 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.swift.org%2Fswift-evolution%2F%23%3Fversion%3D6.0" target="_blank">Swift.org/swift-evolution</a>&nbsp;上找到將完善 Swift 6 的提案集。</p><p>更多詳情可<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.swift.org%2Fblog%2Fswift-5.10-released%2F" target="_blank">查看官方博客</a>。</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 06 Mar 2024 07:07:30 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/281751/swift-5-10-released</guid>
            <link>https://www.oschina.net/news/281751/swift-5-10-released</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Steam++ 3.0.0-rc.4 已經發布，Steam 工具箱]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Steam++ 3.0.0-rc.4 已經發布，Steam 工具箱</p><p>此版本更新內容包括：</p><h3>更新説明</h3><ol><li>新增與迅遊合作推出的遊戲加速功能</li><li>修復令牌確認交易時某些狀況下導致程序閃退和錯誤</li><li>新增令牌搜索</li><li>修復掛卡某些用户無法正常獲取卡片數據導致無法啓動掛卡</li><li>修復腳本在某些情況下失效問題</li><li>賬號切換數據加載性能優化</li><li>修復賬號切換 <a href="https://gitee.com/link?target=https%3A%2F%2Fwww.riotgames.com%2Fen" target="_blank">Riot Games</a>、<a href="https://gitee.com/link?target=https%3A%2F%2Fwww.rockstargames.com%2F" target="_blank">Rockstar Games</a> 等平台出現問題</li><li>修復開機啓動任務計劃請求的操作需要提升</li><li>此版本開始將恢復微軟商店版本更新</li><li>修復開啓最小化啓動情況下解鎖成就、雲存檔管理也被錯誤的最小化導致無法使用問題</li></ol><h3>注意事項</h3><p>macos 版本文件過大 gitee 無法上傳請去 github 下載，為避免意外丟失數據，跨大版本覆蓋升級時注意備份舊版本重要數據（比如令牌）。</p><h2>文件校驗</h2><table><tbody><tr><th>File</th><th>Checksum (SHA256)</th></tr></tbody><tbody><tr><td>Steam++_v3.0.0-rc.4_win_x64.7z</td><td>7D0F44DC472CB40899FAE6805374AEDFF3FB15EFA7B72E581A9D712890D4CAD8</td></tr><tr><td>Steam++_v3.0.0-rc.4_win_x64.exe</td><td>8C09B94D3B673A5202DF4F374E6B8A5159454206C13D118DF6141FA29C0A0260</td></tr><tr><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>Steam++_v3.0.0-rc.4_linux_x64.tgz</td><td>53C76CF3FFF3F793487233125F41C9AF478C8987FDD9FDE029AA6C30C1914101</td></tr><tr><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>Steam++_v3.0.0-rc.4_macos.dmg</td><td>7440091C2BA1E8AF52BB0E3FB695E8F8946EA8E64E21211244CE9208CA2FF4DB</td></tr></tbody></table><p><a href="https://gitee.com/link?target=https%3A%2F%2Fsteampp.net" target="_blank"><img alt="Official steampp.net" src="https://img.shields.io/badge/Official-steampp.net-brightgreen.svg?style=flat-square&amp;color=61dafb" referrerpolicy="no-referrer"></a><img alt="Steam++ v3.0.0-rc3" src="https://img.shields.io/badge/Steam++-v3.0.0-brightgreen.svg?style=flat-square&amp;color=512bd4" referrerpolicy="no-referrer"></p><p><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FBeyondDimension%2FSteamTools%2Fblob%2Fdevelop%2Fdownload-guide.md" target="_blank">不知道該下載哪個文件?</a></p><p>詳情查看：<a href="https://gitee.com/rmbgame/SteamTools/releases/3.0.0-rc.4">https://gitee.com/rmbgame/SteamTools/releases/3.0.0-rc.4</a></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 06 Mar 2024 06:14:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/281740/steampp-3-0-0-rc-4-released</guid>
            <link>https://www.oschina.net/news/281740/steampp-3-0-0-rc-4-released</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[outline.js 3.32.1 已經發布，自動生成文章導讀導航]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>outline.js 3.32.1 已經發布，自動生成文章導讀導航</p><p>此版本更新內容包括：</p><h3>Bug Fixes</h3><ul><li>修復 Anchors 模塊初始化 attrs 屬性直接複製等於 Anchors.DEFAULTS 在創建多個實例時出現的共用一個配置的問題；</li></ul><p>詳情查看：<a href="https://gitee.com/yaohaixiao/outline.js/releases/3.32.1">https://gitee.com/yaohaixiao/outline.js/releases/3.32.1</a></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 06 Mar 2024 05:23:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/281724/outline-js-3-32-1-released</guid>
            <link>https://www.oschina.net/news/281724/outline-js-3-32-1-released</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[JimuReport 積木報表 v1.7.1 版本發佈，低代碼報表工具]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h3>項目介紹</h3><blockquote><p style="margin-left:0; margin-right:0">一款免費的數據可視化報表，含報表和大屏設計，像搭建積木一樣在線設計報表！功能涵蓋，數據報表、打印設計、圖表報表、大屏設計等！</p><ul><li>Web 版報表設計器，類似於 excel 操作風格，通過拖拽完成報表設計。</li><li>秉承 「簡單、易用、專業」 的產品理念，極大的降低報表開發難度、縮短開發週期、節省成本、解決各類報表難題。</li><li>領先的企業級 Web 報件，採用純 Web 在線技術，專注於解決企業報錶快速製作難題。</li></ul></blockquote><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>當前版本</strong>：v1.7.1 | 2024-03-06</p><h4>集成依賴</h4><ul><li>springboot2 依賴</li></ul><pre><code><span style="color:#333333">&lt;<span style="color:#22863a">dependency</span>&gt;</span><span style="color:#333333">&lt;<span style="color:#22863a">groupId</span>&gt;</span>org.jeecgframework.jimureport<span style="color:#333333">&lt;/<span style="color:#22863a">groupId</span>&gt;</span><span style="color:#333333">&lt;<span style="color:#22863a">artifactId</span>&gt;</span>jimureport-spring-boot-starter<span style="color:#333333">&lt;/<span style="color:#22863a">artifactId</span>&gt;</span><span style="color:#333333">&lt;<span style="color:#22863a">version</span>&gt;</span>1.7.1<span style="color:#333333">&lt;/<span style="color:#22863a">version</span>&gt;</span><span style="color:#333333">&lt;/<span style="color:#22863a">dependency</span>&gt;</span></code></pre><ul><li>springboot3 依賴</li></ul><pre><code><span style="color:#333333">&lt;<span style="color:#22863a">dependency</span>&gt;</span><span style="color:#333333">&lt;<span style="color:#22863a">groupId</span>&gt;</span>org.jeecgframework.jimureport<span style="color:#333333">&lt;/<span style="color:#22863a">groupId</span>&gt;</span><span style="color:#333333">&lt;<span style="color:#22863a">artifactId</span>&gt;</span>jimureport-spring-boot3-starter-fastjson2<span style="color:#333333">&lt;/<span style="color:#22863a">artifactId</span>&gt;</span><span style="color:#333333">&lt;<span style="color:#22863a">version</span>&gt;</span>1.7.1<span style="color:#333333">&lt;/<span style="color:#22863a">version</span>&gt;</span><span style="color:#333333">&lt;/<span style="color:#22863a">dependency</span>&gt;</span></code></pre><h4>升級日誌</h4><ul><li>新增凍結功能（支持鎖定列行）</li><li>導出 pdf 行距錯亂，變得不可控<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjeecgboot%2FJimuReport%2Fissues%2F2431" target="_blank"><span>&nbsp;</span>#2431</a></li><li>點擊打印預覽時會多出兩個空白頁 [#2415](點擊打印預覽時會多出兩個空白頁 #2415 "#2415")</li><li>springboot3， 積木報表，聚合分組查詢失敗<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjeecgboot%2FJimuReport%2Fissues%2F2398" target="_blank">#2398</a></li><li>支持 base64 格式圖片</li><li>圖表顏色配置，按照順序給系列賦顏色並支持調整順序</li><li>壓縮靜態資源，提升加載性能</li><li>橫向動態合併，支持前邊合計</li><li>pdf 導出兩邊默認有空格，需要減去兩邊的空格</li><li>pgsql 為數據源的情況下，數值類型變量莫名其妙被轉成字符類型比較</li></ul><h4>代碼下載</h4><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjeecgboot%2FJimuReport" target="_blank">https://github.com/jeecgboot/JimuReport</a></li><li><a href="https://gitee.com/jeecg/JimuReport">https://gitee.com/jeecg/JimuReport</a></li></ul><h4>技術文檔</h4><ul><li>體驗官網：<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fjimureport.com%2F" target="_blank">http://jimureport.com</a></li><li>快速集成文檔 ：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhelp.jeecg.com%2Fjimureport%2Fquick.html" target="_blank">https://help.jeecg.com/jimureport/quick.html</a></li><li>技術文檔：<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhelp.jeecg.com%2Fjimureport" target="_blank">https://help.jeecg.com/jimureport</a></li></ul><h4>為什麼選擇 JimuReport?</h4><blockquote><p style="margin-left:0; margin-right:0">永久免費，支持各種複雜報表，並且傻瓜式在線設計，非常的智能，低代碼時代，這個是你的首選！</p></blockquote><ul><li>採用 SpringBoot 的腳手架項目，都可以快速集成</li><li>Web 版設計器，類似於 excel 操作風格，通過拖拽完成報表設計</li><li>通過 SQL、API 等方式，將數據源與模板綁定。同時支持表達式，自動計算合計等功能，使計算工作量降低</li><li>開發效率很高，傻瓜式在線報表設計，一分鐘設計一個報表，又簡單又強大</li><li>支持 ECharts，目前支持 28 種圖表，在線拖拽設計，支持 SQL 和 API 兩種數據源</li><li>支持分組、交叉，合計、表達式等複雜報表</li><li>支持打印設計（支持套打、背景打印等）可設置打印邊距、方向、頁眉頁腳等參數，一鍵快速打印，同時可實現套打，不動產證等精準、無縫打印</li><li>大屏設計器支持幾十種圖表樣式，可自由拼接、組合，設計炫酷大屏</li><li>可設計各種類型的單據、大屏，如出入庫單、銷售單、財務報表、合同、監控大屏、旅遊數據大屏等</li></ul><h4>報表設計效果</h4><ul><li>報表設計器（專業一流，數據可視化，解決各類報表難題）<span>&nbsp;</span><img alt="" src="https://oscimg.oschina.net/oscnet/up-a2a8557722593e6c5a5e8f015a0df2b70e9.png" referrerpolicy="no-referrer"></li><li>報表設計器（完全在線設計，簡單易用）</li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://oscimg.oschina.net/oscnet/up-752b454f64ed87c798b3e8a083fbd6622d4.gif" referrerpolicy="no-referrer"></p><ul><li>打印設計（支持套打、背景打印）</li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://oscimg.oschina.net/oscnet/up-9b6cd73719de68e0e45e1cf95cd6104a103.png" referrerpolicy="no-referrer"><span>&nbsp;</span><img alt="" src="https://oscimg.oschina.net/oscnet/up-8863ea4e67c02dbd844bb8022652f1be651.png" referrerpolicy="no-referrer"></p><ul><li>數據報表（支持分組、交叉，合計等複雜報表）</li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://oscimg.oschina.net/oscnet/up-fe2ac0dfc3933734961924de0538b3049d2.png" referrerpolicy="no-referrer"><span>&nbsp;</span><img alt="" src="https://oscimg.oschina.net/oscnet/up-be956cbc19287e4df9cc46c9d15e96da99d.png" referrerpolicy="no-referrer"></p><ul><li>圖形報表（目前支持 28 種圖表）<span>&nbsp;</span><img alt="" src="https://oscimg.oschina.net/oscnet/up-3eda428ef182cb64a1a8e132e4bfeb87718.png" referrerpolicy="no-referrer"><span>&nbsp;</span><img alt="" src="https://oscimg.oschina.net/oscnet/up-22096123c5b6a10a801967c33cc33a7af11.png" referrerpolicy="no-referrer"></li><li>數據報表斑馬線</li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://oscimg.oschina.net/oscnet/up-e77ba28f6fb56d1147c13388e7e5d19d1bc.png" referrerpolicy="no-referrer"></p><p>儀表盤設計器</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://oscimg.oschina.net/oscnet/up-9c9d41288c31398d76b390bdd400f13a582.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://oscimg.oschina.net/oscnet/up-8ebff9357b6a22161f668586af28be31488.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://oscimg.oschina.net/oscnet/up-fad98d42b2cf92f92a903c9cff7579f18ec.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://oscimg.oschina.net/oscnet/up-4be5b44bf771d8c55aba2adf9ae074eac18.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://oscimg.oschina.net/oscnet/up-57676eb5dcf4726933e0f6e429a4b2e31a9.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://oscimg.oschina.net/oscnet/up-7938331a342ba363a9691d76a53f34298fc.png" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 06 Mar 2024 04:49:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/281720/jimureport-1-7-1-released</guid>
            <link>https://www.oschina.net/news/281720/jimureport-1-7-1-released</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[BuildAdmin-v2.0.5 發佈，Vite、Element plus 等依賴升級到最新版本]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h3>新增</h3><ul><li>更新所有前端依賴<code>Vite5+ElementPlus2.4</code></li><li>模塊更新<code>composer.json</code>中的<code>config</code>字段實現</li></ul><h3>重構/優化/修復</h3><ul><li>優化前台頁腳樣式</li><li>優化路由動態註冊</li><li>優化獲取第一個菜單的函數</li><li>優化通用搜索按鈕樣式 !142</li><li>優化系統配置數據模型</li><li>優化可視化<code>CRUD</code>設計器的樣式</li><li>後台會員管理中的會員分組設為必填</li><li>默認不再內置<code>easywechat</code>依賴，添加<code>guzzlehttp</code>依賴（受益於模塊可以調整<code>composer.json</code>的<code>config</code>）</li><li>系統配置中的快捷配置入口使用路由<code>name</code>而不再是路由<code>path</code></li><li>語言包按需加載映射表中的後台入口路徑由字面量改為變量</li><li>管理員登錄接口返回的路由路徑使用的字面量改為變量</li><li><code>eslint</code>和<code>prettier</code>與<code>ESM</code>的兼容</li><li>修復系統配置變量值為<code>0</code>時可能無法回顯的問題</li><li>修復可視化<code>CRUD</code>富文本字段默認值為<code>null</code>時表單打不開的問題</li><li>修復設置瀏覽器標題的函數可能失敗的問題</li><li>修復初次打開前端時頁面標題不完整的問題</li><li>修復雙欄模式子級菜單跳轉異常的問題 close #I7ZECR</li><li>其他細節</li></ul></div>
                                    ]]>
            </description>
            <pubDate>Wed, 06 Mar 2024 04:02:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/281718</guid>
            <link>https://www.oschina.net/news/281718</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Dromara DaxPay 支付網關 v2.0.1 發佈: 增加支付對賬功能]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h2><span>背景</span></h2><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>在平時對接三方支付時，尤其需要對接多家支付的時候，是不是有以下痛點：</span></p><blockquote><ol><li><p style="margin-left:.5rem; margin-right:0"><span>各家支付系統的調用方式、返回參數、數據簽名、回調格式等都不盡相同，對接時互相之間無法複用</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>各家支付系統提供的支付能力不盡相同，有時候業務系統為了對客户展現的功能一致，需要寫大量的適配代碼才能實現</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>支付訂單、退款訂單、回調記錄、訂單關閉、對賬分賬等必要功能都需要進行實現，需要考慮各種場景才能保證不出問題</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>有時候業務上需要支持一些擴展的支付類型，如要支持錢包支付、支持多種支付方式進行組合支付、支持聚合支付實現一碼通掃等</span></p></li></ol></blockquote><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>如果你遇到這些問題，</span><span><strong><span>Dromara DaxPay</span></strong></span><span>（開源支付網關）或許能幫助到你：</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>它是</span><span><code>Dromara 開源社區</code></span><span>旗下新晉的一款開源支付網關係統，將各種支付通道（如支付寶、微信、雲閃付等）的調用方式進行抽象統一，隱藏開發者不需要關注的細節，只需要一份代碼就可以與多家支付通道對接。</span><span><code>DaxPay</code></span><span>獨立部署，提供獨立的管理界面，不侵入業務系統也不需要業務系統進行改造，只需要通過</span><span><code>http</code></span><span>進行調用就擁有相應的支付能力。除了對各類三方支付系統進行了對接，還對常用的支付方式進行了擴展，支持聚合支付、組合支付、錢包支付等功能。</span></p><h2>🧭 特色功能</h2><ol><li><p style="margin-left:.5rem; margin-right:0"><span>基於</span><span><code>Spring Boot</code></span><span>、</span><span><code>Vue3</code></span><span>主流技術棧，方便對系統進行擴展和改造</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>已對接</span><span><code>微信支付</code></span><span>和</span><span><code>支付寶</code></span><span>支付的接口，後續版本將支持</span><span><code>V3</code></span><span>版本支付接口，以及</span><span><code>雲閃付</code></span><span>、</span><span><code>PayPal</code></span><span>等更多類型的支付通道</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>對接各類支付通道對外提供統一的接口，簡化支付對接的複雜度，也方便後期快速替換或增加新的支付通道</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>提供</span><span><code>錢包支付</code></span><span>、</span><span><code>現金支付</code></span><span>、</span><span><code>儲值卡支付</code></span><span>等擴展支付方式，同時支持組合支付，滿足業務系統多樣的支付場景</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>提供</span><span><code>Java</code></span><span>版本的</span><span><code>SDK</code></span><span>工具包，簡化業務系統對接流程，同時也可以使用</span><span><code>HTTP</code></span><span>方式進行接口調用，保證了更低的耦合性和通用性</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>請求、響應、回調數據都支持啓用簽名機制，可根據實際需要進行開關，保證交易的安全可靠</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>提供管理平台，可以對各類訂單、記錄、配置進行便捷的操作，方便運營人員進行支付業務的管理</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>提供</span><span><code>聚合支付</code></span><span>、</span><span><code>電腦收銀台</code></span><span>和</span><span><code>手機收銀台</code></span><span>的演示模塊，供開發者參考其實現支付功能的邏輯</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>系統源碼為商業友好的</span><span><code>Apache-2.0</code></span><span>協議，文檔為更加寬鬆的</span><span><code>MIT</code></span><span>協議，不需要擔心後續代碼和文檔會突然進行收費</span></p></li></ol><h2>🥞&nbsp;本次更新內容</h2><ul><li>增加微信支付對賬功能</li><li>增加支付寶支付對賬功能</li><li>優化: 修復策略對訂單時間和狀態字段的變更優化</li><li>fix: 前端支付訂單查詢條件中"支付 ID"條件不生效</li></ul><h2>🍒 文檔和源碼地址</h2><h3>文檔地址</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">在<span>&nbsp;</span><a href="https://bootx.gitee.io/">Bootx 開源文檔站</a><span>&nbsp;</span>下的支付網關 (DaxPay) 模塊下可以進行查閲相關文檔，具體鏈接地址如下：<span>&nbsp;</span><a href="https://bootx.gitee.io/daxpay/guides/overview/%E9%A1%B9%E7%9B%AE%E4%BB%8B%E7%BB%8D.html">快速指南</a>、<span>&nbsp;</span><a href="https://bootx.gitee.io/daxpay/gateway/overview/%E6%8E%A5%E5%8F%A3%E6%B8%85%E5%8D%95.html">支付對接</a>、<span>&nbsp;</span><a href="https://bootx.gitee.io/daxpay/admin/config/%E5%B9%B3%E5%8F%B0%E9%85%8D%E7%BD%AE.html">操作手冊</a></p><h2>🏬 <span>項目和演示地址</span></h2><h3><span>源碼地址</span></h3><table cellspacing="0" style="border-collapse:collapse; border-spacing:0px; box-sizing:border-box; break-inside:auto; cursor:text; margin:0px; overflow:auto; padding:0px; text-align:left; white-space:pre-wrap; width:964px; word-break:initial"><tbody><tr><th><span><span>項目</span></span></th><th><span><span>GITEE</span></span></th><th><span><span>GITHUB</span></span></th></tr></tbody><tbody><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><span><span>後端地址</span></span></td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><span><span><a href="https://gitee.com/dromara/dax-pay">https://gitee.com/dromara/dax-pay</a></span></span></td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><span><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdromara%2Fdax-pay" target="_blank">https://github.com/dromara/dax-pay</a></span></span></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><span><span>Web 前端地址</span></span></td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><span><span><a href="https://gitee.com/bootx/dax-pay-ui">https://gitee.com/bootx/dax-pay-ui</a></span></span></td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><span><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxxm1995%2Fdax-pay-ui" target="_blank">https://github.com/xxm1995/dax-pay-ui</a></span></span></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><span><span>H5 前端地址</span></span></td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><span><span><a href="https://gitee.com/bootx/dax-pay-h5">https://gitee.com/bootx/dax-pay-h5</a></span></span></td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><span><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxxm1995%2Fdax-pay-h5" target="_blank">https://github.com/xxm1995/dax-pay-h5</a></span></span></td></tr></tbody></table><h3><span>管理平台:</span></h3><blockquote><p style="margin-left:0; margin-right:0"><span>注：演示賬號部分功能修改刪除權限未開放。</span></p></blockquote><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>地址：</span><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdaxpay.demo.bootx.cn" target="_blank">https://daxpay.demo.bootx.cn</a></span><span> 賬號：daxpay 密碼：123456</span></p><h3><span>網關接口</span></h3><blockquote><p style="margin-left:0; margin-right:0"><span>注：接口平台只開放支付網關相關的接口，不開放系統其他接口。</span></p></blockquote><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>地址: </span><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdaxpay.server.bootx.cn%2Fdoc.html" target="_blank">https://daxpay.server.bootx.cn/doc.html</a></span><span> 賬號: daxpay 密碼: 123456</span></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">&nbsp;</p><h3><span>收銀台</span></h3><blockquote><p style="margin-left:0; margin-right:0"><span>請勿大額支付，可以通過後台管理平台進行退款</span></p></blockquote><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>電腦收銀台地址: </span><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdaxpay.demo.bootx.cn%2F%23%2Fcashier" target="_blank">https://daxpay.demo.bootx.cn/#/cashier</a></span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>手機收銀台地址: </span><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdaxpay.demo.bootx.cn%2Fh5%2F%23%2Fcashier%2FuniCashier" target="_blank">https://daxpay.demo.bootx.cn/h5/#/cashier/uniCashier</a></span></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">&nbsp;</p><h2>🥞 核心技術棧</h2><table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:0px; box-sizing:border-box; color:#40485b; display:block; font-family:-apple-system,BlinkMacSystemFont,&quot;Segoe UI&quot;,Helvetica,Arial,&quot;Apple Color Emoji&quot;,&quot;Segoe UI Emoji&quot;,&quot;Segoe UI Symbol&quot;,&quot;Liberation Sans&quot;,&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,&quot;Hiragino Sans GB&quot;,&quot;Wenquanyi Micro Hei&quot;,&quot;WenQuanYi Zen Hei&quot;,&quot;ST Heiti&quot;,SimHei,SimSun,&quot;WenQuanYi Zen Hei Sharp&quot;,sans-serif; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; margin-bottom:16px; margin-top:0px; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:635.286px; word-break:initial; word-spacing:0px"><tbody><tr><th>名稱</th><th>描述</th><th>版本要求</th></tr></tbody><tbody><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Jdk</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Java 環境</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">1.8+，11 版本可以正常使用，但 17+版本暫不支持</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Spring Boot</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">開發框架</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">2.7.x</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Redis</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">分佈式緩存</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">5.x 版本及以上</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">MySQL</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">數據庫</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">基於 5.7.X 版本開發，基本支持 8.x 版本</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Vue</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">前端框架</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">3.x</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">IJpay</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">支付 SDK 開發包</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">項目自動管理，不需要額外處理</td></tr></tbody></table><h2>🍎 系統截圖</h2><h3>H5 收銀台演示</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://jsd.cdn.zzko.cn/gh/xxm1995/bootx-img@master/daxpay/3.3e0781my8tc0.webp" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">&nbsp;</p><h3>收銀台演示</h3><p><img alt="" height="1825" src="https://oscimg.oschina.net/oscnet/up-d6ae2e823c5910947b6d01679bbbfb08317.jpg" width="2140" referrerpolicy="no-referrer"></p><h3>支付通道配置</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://jsd.cdn.zzko.cn/gh/xxm1995/bootx-img@master/daxpay/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20240215020450.3abki92bc6w0.webp" referrerpolicy="no-referrer"><img alt="" src="https://oscimg.oschina.net/oscnet/up-fc3b1c709335b70c619272af5f572be1389.jpg" referrerpolicy="no-referrer"></p><h2>🍻 鳴謝</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">感謝 JetBrains 提供的免費開源 License：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.jetbrains.com%2F%3Ffrom%3Dbootx"><img alt="JetBrains" src="https://gitee.com/bootx/dax-pay/raw/gateway/_doc/images/jetbrains.png" referrerpolicy="no-referrer"></a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">感謝其他提供靈感和思路的開源項目</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/bootx/dax-pay/blob/gateway/_license/LICENSE.md">部分參考的開源項目和開源許可列表</a></p><h2>🍷License</h2><p style="color:#40485b; margin-left:0em; margin-right:0em; text-align:left">Apache License Version 2.0</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 06 Mar 2024 03:49:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/281715/daxpay-updated</guid>
            <link>https://www.oschina.net/news/281715/daxpay-updated</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
    </channel>
</rss>
