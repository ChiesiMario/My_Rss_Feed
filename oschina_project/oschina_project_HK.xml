<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[開源中國-軟件更新資訊]]>
        </title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="https://rsshub.app/oschina/news/project" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[開源中國-軟件更新資訊 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Fri, 17 Nov 2023 06:55:43 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[Eclipse Vert.x 4.5.0 發佈，虛擬線程支持]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff; color:#333333">Eclipse Vert.x 是一個微服務開發框架，基於事件和異步，依託於全異步 Java 服務器 Netty，並擴展了很多其他特性，以其輕量、高性能、支持多語言開發而備受開發者青睞。</span></p><p><span style="background-color:#ffffff; color:#333333">Eclipse Vert.x 4.5.0 現已<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fvertx.io%2Fblog%2Feclipse-vert-x-4-5-0%2F" target="_blank">發佈</a>，此版本帶來了一些新功能，包括虛擬線程支持。亮點更新如下：</span></p><h4><strong>虛擬線程</strong></h4><p>虛擬線程 verticle 可以等待 Vert.x futures 並同步獲取結果。</p><pre style="margin-left:0; margin-right:0; text-align:start"><code class="language-java"><span style="color:#f0a46c">Verticle</span><span style="color:#c9e5f9">verticle</span><span>=</span><span style="color:#d2a8e0">new</span><span style="color:#f0a46c">AbstractVerticle</span>() {
  <span style="color:#adb5bd">@Override</span><span style="color:#d2a8e0">public</span><span style="color:#d2a8e0">void</span><span style="color:#f0a46c">start</span><span>()</span> {
    <span style="color:#f0a46c">HttpClient</span><span style="color:#c9e5f9">client</span><span>=</span> vertx.createHttpClient();
    <span style="color:#f0a46c">HttpClientRequest</span><span style="color:#c9e5f9">req</span><span>=</span> Future.await(client.request(
      HttpMethod.GET,
      <span style="color:#6cb9f0">8080</span>,
      <span style="color:#6cb9f0">"localhost"</span>,
      <span style="color:#6cb9f0">"/"</span>));
    <span style="color:#f0a46c">HttpClientResponse</span><span style="color:#c9e5f9">resp</span><span>=</span> Future.await(req.send());
    <span style="color:#f0a46c">int</span><span style="color:#c9e5f9">status</span><span>=</span> resp.statusCode();
    <span style="color:#f0a46c">Buffer</span><span style="color:#c9e5f9">body</span><span>=</span> Future.await(resp.body());
  }
};

<span style="color:#adb5bd">// Run the verticle a on virtual thread</span>
vertx.deployVerticle(verticle, <span style="color:#d2a8e0">new</span><span style="color:#f0a46c">DeploymentOptions</span>().setThreadingModel(ThreadingModel.VIRTUAL_THREAD));</code></pre><p style="text-align:start"><span><span><span><span style="color:#3c3c3b"><span><span><span><span><span><span><span><span><span><span><span><span><span><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fvertx.io%2Fdocs%2Fvertx-core%2Fjava%2F%23virtual_threads" target="_blank">Vert.x 虛擬線程</a>可以使用<code>await</code>來 block 任何 Vert.x future&nbsp;：</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span><span style="background-color:#3a2840"><span><span><span><span><span style="color:#ffffff"><span><span><span><span><span><span><span><span><span><span><span><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><pre style="margin-left:0; margin-right:0; text-align:start"><code class="language-java"><span style="color:#adb5bd">// create a test table</span>
await(pool.query(<span style="color:#6cb9f0">"create table test(id int primary key, name varchar(255))"</span>).execute());
<span style="color:#adb5bd">// insert some test data</span>
await(pool.query(<span style="color:#6cb9f0">"insert into test values (1, 'Hello'), (2, 'World')"</span>).execute());
<span style="color:#adb5bd">// query some data</span>
RowSet&lt;Row&gt; rows = await(pool.query(<span style="color:#6cb9f0">"select * from test"</span>).execute());
<span style="color:#d2a8e0">for</span> (Row row : rows) {
  System.out.println(<span style="color:#6cb9f0">"row = "</span> + row.toJson());
}
</code></pre><p style="color:#3c3c3b; text-align:start">可以在<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fvert-x3%2Fvertx-examples%2Ftree%2F4.x%2Fvirtual-threads-examples" target="_blank">ex­am­ple repo</a>&nbsp;查看更多信息。</p><h4 style="text-align:start"><strong><span><span><span><span><span style="color:#3c3c3b"><span><span><span><span><span><span><span><span><span><span><span><span><span>動態 SQL 連接創建</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></h4><p style="text-align:start"><span><span><span><span style="color:#3c3c3b"><span><span><span><span><span><span><span><span><span><span><span><span><span><span>默認情況下，連接池始終連接到同一主機，換句話説，數據庫配置是靜態<em>的</em>。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span><span><span><span style="color:#3c3c3b"><span><span><span><span><span><span><span><span><span><span><span><span><span><span>有時數據庫配置需要是動態的，例如連接到數據庫陣列，或者數據庫配置可能會改變。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:start"><span><span><span><span style="color:#3c3c3b"><span><span><span><span><span><span><span><span><span><span><span><span><span><span>通過<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fvertx.io%2Fdocs%2Fvertx-pg-client%2Fjava%2F%23_dynamic_connection_configuration" target="_blank">動態連接配置，</a>你可以在 Vert.x 中輕鬆實現這一點：</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><pre style="margin-left:0; margin-right:0; text-align:start"><code class="language-java"><span style="color:#f0a46c">Pool</span><span style="color:#c9e5f9">pool</span><span>=</span> PgBuilder.pool()
  .with(poolOptions)
  .connectingTo(() -&gt; {
    Future&lt;SqlConnectOptions&gt; connectOptions = retrieveOptions();
    <span style="color:#d2a8e0">return</span> connectOptions;
  })
  .using(vertx)
  .build();
</code></pre><p style="color:#3c3c3b; text-align:start"><span style="color:#3c3c3b">每次 pool 需要創建連接時，都會調用 options supplier 並使用返回的選項來創建連接。</span></p><h4 style="text-align:start">PG bouncer transaction pooling mode</h4><p style="text-align:start"><span><span><span><span style="color:#3c3c3b"><span><span><span><span><span><span><span><span><span><span><span><span><span><span>7 級代理可以在與實際數據庫的多個連接上平衡查詢負載。當發生這種情況時，客户端可能會因缺乏 session affinity&nbsp;而感到 confused，並且可能會出現不必要的錯誤，例如 ERROR: unnamed preded statements does not exit (26000)。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:start"><span><span><span><span style="color:#3c3c3b"><span><span><span><span><span><span><span><span><span><span><span><span><span><span>Vert.x SQL 客户端現在<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fvertx.io%2Fdocs%2Fvertx-pg-client%2Fjava%2F%23_using_a_level_7_proxy" target="_blank">支持 </a>7 級代理，例如&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.pgbouncer.org%2F" target="_blank">PgBouncer&nbsp;</a>。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><h4 style="text-align:start"><span><span><span><span><span style="color:#3c3c3b"><span><span><span><span><span><span><span><span><span><span><span><span><span>TCP SSL 選項更新</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></h4><p style="text-align:start"><span><span><span><span style="color:#3c3c3b"><span><span><span><span><span><span><span><span><span><span><span><span><span><span>現在可以<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fvertx.io%2Fdocs%2Fvertx-core%2Fjava%2F%23_updating_ssltls_configuration" target="_blank">在運行時更新 TCP client/server SSL 選項</a>&nbsp;，這對於證書輪換非常有用。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><pre style="margin-left:0; margin-right:0; text-align:start"><code class="language-java">Future&lt;Boolean&gt; fut = server.updateSSLOptions(
  <span style="color:#d2a8e0">new</span><span style="color:#f0a46c">SSLOptions</span>()
    .setKeyCertOptions(<span style="color:#d2a8e0">new</span><span style="color:#f0a46c">JksOptions</span>()
      .setPath(<span style="color:#6cb9f0">"/path/to/your/server-keystore.jks"</span>)
      .setPassword(<span style="color:#6cb9f0">"password-of-your-keystore"</span>)));
</code></pre><p style="color:#3c3c3b; text-align:start"><span style="color:#3c3c3b">新連接將使用更新的配置。</span></p><h4 style="text-align:start"><strong>WebSocket client</strong></h4><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fvertx.io%2Fdocs%2Fvertx-core%2Fjava%2F%23_websockets_on_the_client" target="_blank">在新的 WebSocket client</a>&nbsp;中從 Vert.x HTTP client 捕獲了 WebSocket client API&nbsp;。</p><pre style="margin-left:0; margin-right:0; text-align:start"><code class="language-java"><span style="color:#f0a46c">WebSocketClient</span><span style="color:#c9e5f9">wsClient</span><span>=</span> vertx.createWebSocketClient();

Future&lt;WebSocket&gt; f = wsClient.connect(connectOptions);
</code></pre><p style="color:#3c3c3b; text-align:start">這一改動的目的是讓<code>HttpClient</code>接口專注於 HTTP 交互，並清理接口。</p><h4 style="text-align:start"><strong>Client builders</strong></h4><p style="text-align:start"><span><span><span><span style="color:#3c3c3b"><span><span><span><span><span><span><span><span><span><span><span><span><span><span>在 4.5 中開始引入用於高級客户端創建的 builder pattern。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:start"><span><span><span><span style="color:#3c3c3b"><span><span><span><span><span><span><span><span><span><span><span><span><span><span>當 Vert.x 客户端需要進行超出選項的配置時，builder pattern 有助於配置和創建 Vert.x 客户端。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:start"><span><span><span><span style="color:#3c3c3b"><span><span><span><span><span><span><span><span><span><span><span><span><span><span>更多詳情可<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fvertx.io%2Fblog%2Fwhats-new-in-vert-x-4-5%2F" target="_blank">查看官方博客</a>。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 17 Nov 2023 06:53:09 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266908/eclipse-vert-x-4-5-0-released</guid>
            <link>https://www.oschina.net/news/266908/eclipse-vert-x-4-5-0-released</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Bun v1.0.12 版本發佈：功能升級與錯誤修復]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Bun 技術團隊近期推出了其 JavaScript 運行時、包管理器、打包器和測試運行器的升級版本——Bun v1.0.12。該版本在修復了 24 個安全漏洞的基礎上，引入了多項創新功能和重大改進，以增強用户體驗並提高與 Node.js 的兼容性。</p><p>Bun v1.0.12 的一個顯著新特性是<code>bun -e</code>命令的加入，允許開發者在不創建文件的情況下直接運行腳本。這極大提升了編寫和測試小型腳本的便利性和靈活性。此外，此版本通過<code>bun --env-file</code>命令的引入，使得用户可以指定不同的環境變量文件，這對於多環境測試尤為重要。</p><p>新版 Bun 還增加了對<code>server.url</code>的支持，它允許返回定義 HTTP 服務器位置的 URL 對象，這對於需要在測試中獲取服務器實際 URL 的用户非常有用。同時，<code>import.meta.env</code>的引入使得在 Bun 環境中訪問環境變量變得更為簡便。</p><p>在代碼健壯性方面，Bun v1.0.12 引入了<code>expect.unreachable()</code>，它用於在代碼路徑不應被執行時拋出錯誤。同時，該版本對 Bun 的 CLI 幫助進行了改進，使其更易於閲讀和理解。</p><p><span>在打包功能方面，Bun v1.0.12 引入了一項重要改進：現在可以在打包時使用宏來導入內置模塊。例如，開發者可以在打包階段使用宏來調用</span><code>readFileSync</code><span>和</span><code>spawnSync</code><span>等內置模塊的功能。這一改進為開發者在構建過程中提供了更多的靈活性和便利，使得例如在打包時讀取文件內容或啓動進程等操作變得可行。</span>此外，對<code>mock.module</code>的支持也得到了改進，解決了覆蓋默認導出和重新導出時的問題，增強了在測試環境中模擬模塊的功能。</p><p>在解決 bug 方面，Bun 團隊修復了多項問題，包括<code>bun install</code>在處理特殊情況時的錯誤，HTTP 客户端響應頭缺失情況的改進，以及其他潛在的穩定性問題。</p><p>綜合來看，Bun v1.0.12 的發佈是該項目在打造更加強大、易用工具方面的一大步。這些更新和改進預期將使 Bun 在 JavaScript 開發社區中的作用更為重要，為開發者提供更高效、更可靠的編程體驗。</p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 17 Nov 2023 06:14:09 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266904/bun-1-0-12-released</guid>
            <link>https://www.oschina.net/news/266904/bun-1-0-12-released</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[新一代國產 ORM 框架，sqltoy-orm 5.2.81 發版，強化枚舉類型支持]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>開源地址：</strong></p><ul><li>github:&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fchenrenfei%2Fsagacity-sqltoy" target="_blank">https://github.com/sagframe/sagacity-sqltoy</a></li><li>gitee:&nbsp;<a href="https://gitee.com/sagacity/sagacity-sqltoy">https://gitee.com/sagacity/sagacity-sqltoy</a></li><li>idea 插件 (可直接在 idea 中檢索安裝):&nbsp;&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fthreefish%2Fsqltoy-idea-plugins" target="_blank">https://github.com/threefish/sqltoy-idea-plugins</a></li><li>sqltoy 腳手架項目：https://gitee.com/momoljw/sss-rbac-admin</li><li>sqltoy lambda 項目:&nbsp;https://gitee.com/gzghde/sqltoy-plus</li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>更新內容</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="background-color:#ffffff; color:#40485b">1、條件參數 filter 處理過程支持枚舉類型</span><br><span style="background-color:#ffffff; color:#40485b">2、宏裏面的參數支持枚舉類型，如@ loop</span><br><span style="background-color:#ffffff; color:#40485b">3、sql 日誌輸出支持枚舉類型</span></p><p><strong>s</strong><strong>qltoy-orm 是 JPA 和超強查詢的融合體</strong></p><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsagframe%2Fsagacity-sqltoy%23jpa%25E9%2583%25A8%25E5%2588%2586" target="_blank">JPA 部分</a></h3><ul><li>類似 JPA 的對象化 CRUD、對象級聯加載和新增、更新</li><li>強化 update 操作，提供彈性字段修改能力，不同於 hibernate 先 load 後修改，而是一次數據庫交互完成修改，確保了高併發場景下數據的準確性</li><li>改進了級聯修改，提供了先刪除或者先置無效，再覆蓋的操作選項</li><li>增加了 updateFetch、updateSaveFetch 功能，強化針對強事務高併發場景的處理，類似庫存台賬、資金台賬，實現一次數據庫交互，完成鎖查詢、不存在則插入、存在則修改，並返回修改後的結果</li><li>增加了樹結構封裝，便於統一不同數據庫樹型結構數據的遞歸查詢</li><li>支持分庫分表、支持多種主鍵策略 (額外支持基於 redis 的產生特定規則的業務主鍵)、加密存儲、數據版本校驗</li><li>提供了公共屬性賦值 (創建人、修改人、創建時間、修改時間、租户)、擴展類型處理等</li><li>提供了多租户統一過濾和賦值、提供了數據權限參數帶入和越權校驗</li></ul><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsagframe%2Fsagacity-sqltoy%23%25E6%259F%25A5%25E8%25AF%25A2%25E9%2583%25A8%25E5%2588%2586" target="_blank">查詢部分</a></h3><ul><li>極為直觀的 sql 編寫方式，便於從客户端 &lt;--&gt; 代碼，雙向快速遷移，便於後期變更維護</li><li>支持緩存翻譯、反向緩存匹配 key 代替 like 模糊查詢</li><li>提供了跨數據庫支持能力：不同數據庫的函數自動轉換適配，多方言 sql 根據實際環境自動匹配、多數據庫同步測試，大幅提升了產品化能力</li><li>提供了取 top 記錄、隨機記錄等特殊場景的查詢功能</li><li>提供了最強大的分頁查詢機制：1) 自動優化 count 語句；2) 提供基於緩存的分頁優化，避免每次都執行 count 查詢；3) 提供了獨具特色的快速分頁；4) 提供了並行分頁</li><li>提供了分庫分表能力</li><li>提供了在管理類項目中極為價值的：分組彙總計算、行列轉換 (行轉列、列轉行)、同比環比、樹形排序、樹形彙總，相關算法自然集成</li><li>提供了基於查詢的層次化數據結構封裝</li><li>提供了大量輔助功能：數據脱敏、格式化、條件參數預處理等</li></ul><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsagframe%2Fsagacity-sqltoy%23%25E6%2594%25AF%25E6%258C%2581%25E5%25A4%259A%25E7%25A7%258D%25E6%2595%25B0%25E6%258D%25AE%25E5%25BA%2593" target="_blank">支持多種數據庫</a></h3><ul><li>常規的 mysql、oracle、db2、postgresql、 sqlserver、dm、kingbase、sqlite、h2、 oceanBase、polardb、guassdb、tidb</li><li>支持分佈式 olap 數據庫: clickhouse、StarRocks、greenplum、impala (kudu)</li><li>支持 elasticsearch、mongodb</li><li>所有基於 sql 和 jdbc 各類數據庫查詢</li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>sqltoy 特點介紹：</strong></p><ul><li><strong>sqltoy 的核心構建思想</strong></li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><img alt="" height="868" src="https://oscimg.oschina.net/oscnet/up-a385d72ceb030d705e8e5803ca3cd4c09a1.png" width="1136" referrerpolicy="no-referrer"></p><ul><li><strong>sqltoy 的對比 mybatis (plus) 的核心點：查詢語句編寫、可閲讀性、可維護性</strong></li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong><img alt="" height="988" src="https://oscimg.oschina.net/oscnet/up-93bc88150c80aed200b6ff7d95c9c7bd7df.png" width="1797" referrerpolicy="no-referrer"></strong></p><ul><li><strong>對象化 crud 是基礎，但 sqltoy 有針對性的改進：update、updateSaveFetch、updateFetch 等</strong></li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><img alt="" height="845" src="https://oscimg.oschina.net/oscnet/up-6b8e8204061eec3d2096a50e9899548351e.png" width="1745" referrerpolicy="no-referrer"></p><ul><li><strong>sqltoy 的緩存翻譯，大幅減少表關聯簡化 sql，讓你的查詢性能成幾何級提升</strong></li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="闡述 sqltoy 為什麼秒殺 mybatis(plus)" src="https://p3-tt.byteimg.com/origin/pgc-image/85287e14aa3e428fbabe297472596455?from=pc" referrerpolicy="no-referrer"></p><ul><li><strong>極致的分頁，同樣幫助你實現查詢的性能大幅提升</strong></li></ul><ol><li>快速分頁:@fast () 實現先取單頁數據然後再關聯查詢，極大提升速度</li><li>分頁優化器:page-optimize 讓分頁查詢由兩次變成 1.3~1.5 次 (用緩存實現相同查詢條件的總記錄數量在一定週期內無需重複查詢</li><li>sqltoy 的分頁取總記錄的過程不是簡單的 select count (1) from (原始 sql)；而是智能判斷是否變成:select count (1) from 'from 後語句 '， 並自動剔除最外層的 order by</li><li>sqltoy 支持並行查詢：parallel="true"，同時查詢總記錄數和單頁數據，大幅提升性能</li></ol><div><img alt="闡述 sqltoy 為什麼秒殺 mybatis(plus)" src="https://p6-tt.byteimg.com/origin/pgc-image/3d5f7094da154671985dd390f56f6302?from=pc" referrerpolicy="no-referrer"></div><div>
 &nbsp;
</div><ul><li><strong>便利的跨數據庫統計計算：數據旋轉</strong></li></ul><div><img alt="闡述 sqltoy 為什麼秒殺 mybatis(plus)" src="https://p1-tt.byteimg.com/origin/pgc-image/949bc75b5c53441c98284dae2bed11fe?from=pc" referrerpolicy="no-referrer"></div><ul><li><strong>便利的跨數據庫統計計算：無限極分組統計 (含彙總求平均)</strong></li></ul><div><img alt="闡述 sqltoy 為什麼秒殺 mybatis(plus)" src="https://p1-tt.byteimg.com/origin/pgc-image/f5edc52adbbe4a1ca327d9a9b0c5d64c?from=pc" referrerpolicy="no-referrer"></div><ul><li><strong>便利的跨數據庫統計計算：同比環比</strong></li></ul><div><img alt="闡述 sqltoy 為什麼秒殺 mybatis(plus)" src="https://p3-tt.byteimg.com/origin/pgc-image/b9d435e2852644c9a4c9e062cc3d46d7?from=pc" referrerpolicy="no-referrer"></div><div>
 5、樹形表排序彙總
</div><div><p style="margin-left:0; margin-right:0"><img height="274" src="https://oscimg.oschina.net/oscnet/up-1773cce82b98a943d42caaa62f60d80f3d0.png" width="1002" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0"><img height="403" src="https://oscimg.oschina.net/oscnet/up-8717f1c442767b08f2406019ae9b63721cb.png" width="409" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0">6、擴展集成</p><p style="margin-left:0; margin-right:0"><img height="961" src="https://oscimg.oschina.net/oscnet/up-6603ed15ec936dea45c4f6fb7318f4a062b.png" width="1965" referrerpolicy="no-referrer"></p></div></div>
                                    ]]>
            </description>
            <pubDate>Thu, 16 Nov 2023 04:52:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266891/sqltoy-orm-5-2-851-released</guid>
            <link>https://www.oschina.net/news/266891/sqltoy-orm-5-2-851-released</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[JavaWeb 敏捷開發框架 Layui 版本 v3.0.0 發佈]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>v3.0.0 更新如下：<br> 1、重新設計登錄背景頁，重寫登錄整體功能；<br> 2、升級字典管理功能，數據表分別改成 sys_dict(字典分類)、sys_dict_data(字典數據)；<br> 3、升級配置管理模塊，數據表分別改成 sys_config(系統配置)、sys_config_data(配置數據)；<br> 4、重構代碼生成器，解決原因生成模塊時因為存在相同的表導致生成重複內容的問題；<br> 5、升級系統主頁菜單展示問題，支持三級菜單展示，案例在系統工具中；<br> 6、系統 Vo 統一根據模塊目錄進行劃分，同模塊的 Vo 文件統一放入當前的模塊的文件夾中；<br> 7、重構上傳文件組件，編寫上傳文件案例，目前上傳文件已集成到用户信息編輯頁中；<br> 8、新增下拉多選組件，已編寫案例於用户管理模塊的編輯表單中；<br> 9、重構系統主頁的歡迎頁，將原先的內容換成了統計報表等等相關內容；<br> 10、系統架構新增多環境發佈配置文件，分別為本地環境 (local)、開發環境 (dev)、測試環境 (test)、線上環境 (prod);<br> 11、數據庫名有原先的 javaweb 變更為 javaweb.layui,為了更現象的標識每個版本的差異性；<br> 12、更新配置數據列表頁 tab 切換樣式，體驗更簡潔，更友好；<br> 13、核心基類服務做了結構調整，基類所有模塊統一調整至 common 核心模塊中；<br> 14、重構代碼生成生成菜單權限的邏輯；<br> 15、重寫菜單編輯時創建菜單權限節點的功能，採用全部刪除現有節點，重新創建新節點；<br> 16、完善會員管理模塊，新增註冊來源、設備類型等表單控件；<br> 17、新增 javaweb-api 模塊，根據客户反饋有時需要開發客户端等程序，可以放入這個模塊，具體業務文件可以直接放入此模塊；</p><p><span style="background-color:#ffffff; color:#40485b">一款 Java 語言基於 SpringBoot2、Layui、Thymeleaf、MybatisPlus、Shiro、MySQL 等框架精心打造的一款模塊化、插件化、高性能的前後端分離架構敏捷開發框架，可用於快速搭建後台管理系統，本着簡化開發、提升開發效率的初衷，框架自研了一套個性化的組件，實現了可插拔的組件式開發方式：單圖上傳、多圖上傳、下拉選擇、開關按鈕、單選按鈕、多選按鈕、圖片裁剪、富文本編輯器等等一系列個性化、輕量級的組件，是一款真正意義上實現組件化開發的敏捷開發框架，框架已集成了完整的 RBAC 權限架構和常規基礎模塊，同時支持多主題切換，可以根據自己喜歡的風格選擇想一個的主題，實現了個性化呈現的需求；</span></p><p>&nbsp;</p><h2>開發者信息</h2><ul><li>軟件名稱：JavaWeb 敏捷開發框架單體 Layui 版本</li><li>官網網址：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.javaweb.vip" target="_blank">https://www.javaweb.vip</a></li><li>文檔網址：<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fdocs.layui.javaweb.vip" target="_blank">http://docs.layui.javaweb.vip</a></li><li>演示地址：<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmanage.layui.javaweb.vip" target="_blank">http://manage.layui.javaweb.vip</a></li></ul><h2>版本説明</h2><table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:0px; box-sizing:border-box; color:#40485b; display:block; font-family:-apple-system,BlinkMacSystemFont,&quot;Segoe UI&quot;,Helvetica,Arial,&quot;Apple Color Emoji&quot;,&quot;Segoe UI Emoji&quot;,&quot;Segoe UI Symbol&quot;,&quot;Liberation Sans&quot;,&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,&quot;Hiragino Sans GB&quot;,&quot;Wenquanyi Micro Hei&quot;,&quot;WenQuanYi Zen Hei&quot;,&quot;ST Heiti&quot;,SimHei,SimSun,&quot;WenQuanYi Zen Hei Sharp&quot;,sans-serif; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; margin-bottom:16px; margin-top:0px; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:635px; word-break:initial; word-spacing:0px"><tbody><tr><th>版本名稱</th><th>説明</th><th>地址</th></tr></tbody><tbody><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">JavaWeb_Layui 單體混編專業版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">採用 SpringBoot2、Thymeleaf、layui、MySQL</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/javaweb520/JavaWeb_Layui">https://gitee.com/javaweb520/JavaWeb_Layui</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">avaWeb_Layui 單體混編旗艦版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">採用 SpringBoot2、Thymeleaf、layui、MySQL</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/javaweb520/JavaWeb_Layui_Pro">https://gitee.com/javaweb520/JavaWeb_Layui_Pro</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">JavaWeb_EleVue 單體前後端分離版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">採用 SpringBoot2、Vue2.x、ElementUI、MySQL</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/javaweb520/JavaWeb_EleVue">https://gitee.com/javaweb520/JavaWeb_EleVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">JavaWeb_AntdVue 單體前後端分離版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">採用 SpringBoot2、Vue3.x、AntDesign、MySQL</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/javaweb520/JavaWeb_AntdVue">https://gitee.com/javaweb520/JavaWeb_AntdVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">JavaWeb_Cloud_Eureka_EleVue 微服務前後端分離版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">採用 SpringCloud、Eureka、OAuth2、Vue2.x、ElementUI、MySQL</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/javaweb520/JavaWeb_Cloud_Eureka_EleVue">https://gitee.com/javaweb520/JavaWeb_Cloud_Eureka_EleVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">JavaWeb_Cloud_Eureka_AntdVue 微服務前後端分離版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">採用 SpringCloud、Eureka、OAuth2、Vue3.x、AntDesign、MySQL</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/javaweb520/JavaWeb_Cloud_Eureka_AntdVue">https://gitee.com/javaweb520/JavaWeb_Cloud_Eureka_AntdVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">JavaWeb_Cloud_Consul_EleVue 微服務前後端分離版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">採用 SpringCloud、Consul、OAuth2、Vue2.x、ElementUI、MySQL</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/javaweb520/JavaWeb_Cloud_Consul_EleVue">https://gitee.com/javaweb520/JavaWeb_Cloud_Consul_EleVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">JavaWeb_Cloud_Consul_AntdVue 微服務前後端分離版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">採用 SpringCloud、Consul、OAuth2、Vue3.x、AntDesign、MySQL</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/javaweb520/JavaWeb_Cloud_Consul_AntdVue">https://gitee.com/javaweb520/JavaWeb_Cloud_Consul_AntdVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">JavaWeb_Cloud_Nacos_EleVue 微服務前後端分離版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">採用 SpringCloud、Nacos、OAuth2、Vue2.x、ElementUI、MySQL</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/javaweb520/JavaWeb_Cloud_Nacos_EleVue">https://gitee.com/javaweb520/JavaWeb_Cloud_Nacos_EleVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">JavaWeb_Cloud_Nacos_AntdVue 微服務前後端分離版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">採用 SpringCloud、Nacos、OAuth2、Vue3.x、AntDesign、MySQL</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/javaweb520/JavaWeb_Cloud_Nacos_AntdVue">https://gitee.com/javaweb520/JavaWeb_Cloud_Nacos_AntdVue</a></td></tr></tbody></table><h2>模塊展示</h2><p><img alt="" height="1080" src="https://oscimg.oschina.net/oscnet/up-d8264a2e0b66b80f8831d67b55e7b9e96eb.png" width="1920" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 16 Nov 2023 04:49:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266890/javaweb-layui-3-0-0-released</guid>
            <link>https://www.oschina.net/news/266890/javaweb-layui-3-0-0-released</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[企業微信 Java 開發包 WECOM-SDK 1.2.3 發佈]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#363c42; text-align:start"><span><a href="https://gitee.com/felord/wecom-sdk"><span><strong><span>WECOM-SDK</span></strong></span></a></span><span> 是開源的企業微信開放 API 的 Java 實現，是目前最完整的 Java 實現。目前已經實現了企業微信通訊錄管理、客户管理、上下游、微信客服、素材管理、消息推送、企微機器人、身份驗證、應用管理、彙報、收集表、考勤等相關接口，開發人員不需要很高的學習成本就能快速優雅地接入企業微信。</span></p><p style="color:#363c42; text-align:start"><span>現在你可以通過 wecom-sdk 提供的 api 來自定義企微應用工作台樣式了，具體參見</span><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ffelord.cn%2Fwecom%2Fchangelog.html%231-2-x" target="_blank"><span>更新説明</span></a></span><span>。</span></p><p style="color:#363c42; text-align:start"><span><strong><span>倉庫地址</span></strong></span></p><p style="color:#363c42; text-align:start"><span>gitee: </span><span><a href="https://gitee.com/felord/wecom-sdk"><span><strong><span>https://gitee.com/felord/wecom-sdk</span></strong></span></a></span></p><p style="color:#363c42; text-align:start"><span>github: </span><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNotFound403%2Fwecom-sdk" target="_blank"><span><strong><span>https://github.com/NotFound403/wecom-sdk</span></strong></span></a></span></p><p style="color:#363c42; text-align:start"><span><strong><span>開發文檔</span></strong></span></p><p style="color:#363c42; text-align:start"><span>文檔：</span><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ffelord.cn%2Fwecom%2Foverview.html" target="_blank"><span>https://felord.cn/wecom/overview.html</span></a></span></p><p style="color:#363c42; text-align:start"><span><strong><span>特性</span></strong></span></p><ul><li><p style="color:var(--text-color); margin-left:.5rem; margin-right:0"><span>支持多企業微信同時配置作業</span></p></li><li><p style="color:var(--text-color); margin-left:.5rem; margin-right:0"><span>支持響應式，高性能</span></p></li><li><p style="color:var(--text-color); margin-left:.5rem; margin-right:0"><span>集成方便，適用於各種 Java 生態</span></p></li><li><p style="color:var(--text-color); margin-left:.5rem; margin-right:0"><span>學習成本低</span></p></li><li><p style="color:var(--text-color); margin-left:.5rem; margin-right:0"><span>目前實現企業微信接口</span><span><strong><span>200</span></strong></span><span>多個，能滿足大部分企業微信業務場景的需求</span></p></li><li><p style="color:var(--text-color); margin-left:.5rem; margin-right:0"><span>全參數封裝，入參、出參高度語義化封裝，再也不擔心組織參數、解析參數的問題</span></p></li><li><p style="color:var(--text-color); margin-left:.5rem; margin-right:0"><span>實現統一回調，所有回調事件可集中異步處理，開發者只需要關心業務邏輯的開發</span></p></li><li><p style="color:var(--text-color); margin-left:.5rem; margin-right:0"><span>由 SDK 接管 AccessToken 生命週期，開發者無需關心 AccessToken 的管理。</span></p></li></ul><p style="color:#363c42; text-align:start"><span><strong><span>Maven 中央倉庫座標</span></strong></span></p><ul><li><p style="color:var(--text-color); margin-left:.5rem; margin-right:0"><span>普通版本</span></p></li></ul><pre><span><span style="color:#80cbc4">&lt;</span><span style="color:#80cbc4">dependency</span><span style="color:#80cbc4">&gt;</span></span><span> &nbsp;<span style="color:#80cbc4">&lt;</span><span style="color:#80cbc4">groupId</span><span style="color:#80cbc4">&gt;</span>cn.felord<span style="color:#80cbc4">&lt;/</span><span style="color:#80cbc4">groupId</span><span style="color:#80cbc4">&gt;</span></span><span> &nbsp;<span style="color:#80cbc4">&lt;</span><span style="color:#80cbc4">artifactId</span><span style="color:#80cbc4">&gt;</span>wecom-sdk<span style="color:#80cbc4">&lt;/</span><span style="color:#80cbc4">artifactId</span><span style="color:#80cbc4">&gt;</span></span><span> &nbsp;<span style="color:#80cbc4">&lt;</span><span style="color:#80cbc4">version</span><span style="color:#80cbc4">&gt;</span>1.2.3<span style="color:#80cbc4">&lt;/</span><span style="color:#80cbc4">version</span><span style="color:#80cbc4">&gt;</span></span><span><span style="color:#80cbc4">&lt;/</span><span style="color:#80cbc4">dependency</span><span style="color:#80cbc4">&gt;</span></span></pre><ul><li><p style="color:var(--text-color); margin-left:.5rem; margin-right:0"><span>響應式版本</span></p></li></ul><pre><span><span style="color:#80cbc4">&lt;</span><span style="color:#80cbc4">dependency</span><span style="color:#80cbc4">&gt;</span></span><span> &nbsp;<span style="color:#80cbc4">&lt;</span><span style="color:#80cbc4">groupId</span><span style="color:#80cbc4">&gt;</span>cn.felord<span style="color:#80cbc4">&lt;/</span><span style="color:#80cbc4">groupId</span><span style="color:#80cbc4">&gt;</span></span><span> &nbsp;<span style="color:#80cbc4">&lt;</span><span style="color:#80cbc4">artifactId</span><span style="color:#80cbc4">&gt;</span>rx-wecom-sdk<span style="color:#80cbc4">&lt;/</span><span style="color:#80cbc4">artifactId</span><span style="color:#80cbc4">&gt;</span></span><span> &nbsp;<span style="color:#80cbc4">&lt;</span><span style="color:#80cbc4">version</span><span style="color:#80cbc4">&gt;</span>1.2.3<span style="color:#80cbc4">&lt;/</span><span style="color:#80cbc4">version</span><span style="color:#80cbc4">&gt;</span></span><span><span style="color:#80cbc4">&lt;/</span><span style="color:#80cbc4">dependency</span><span style="color:#80cbc4">&gt;</span></span></pre><p style="color:#363c42; text-align:start"><span><strong><span>採用技術棧</span></strong></span></p><ul><li><p style="color:var(--text-color); margin-left:.5rem; margin-right:0"><span>Retrofit2</span></p></li><li><p style="color:var(--text-color); margin-left:.5rem; margin-right:0"><span>Rxjava3</span></p></li><li><p style="color:var(--text-color); margin-left:.5rem; margin-right:0"><span>Okhttp4</span></p></li><li><p style="color:var(--text-color); margin-left:.5rem; margin-right:0"><span>Jackson2</span></p></li><li><p style="color:var(--text-color); margin-left:.5rem; margin-right:0"><span>XStream</span></p></li></ul><p style="color:#363c42; text-align:start"><span><strong><span>🚀1.2.3 更新</span></strong></span></p><ul><li><p style="color:var(--text-color); margin-left:.5rem; margin-right:0"><span>應用菜單和工作台相關 API 實現，現在你可以通過接口自定義你的應用菜單和應用工作台</span></p></li><li><p style="color:var(--text-color); margin-left:.5rem; margin-right:0"><span>修復通訊錄標籤列表 API 返回值錯誤的問題</span></p></li><li><p style="color:var(--text-color); margin-left:.5rem; margin-right:0"><span>Okhttp 版本升級到 4.12.0</span></p></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Thu, 16 Nov 2023 03:50:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266886/wecom-sdk-1-2-3-released</guid>
            <link>https://www.oschina.net/news/266886/wecom-sdk-1-2-3-released</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[【店滴雲】可命令行生成 uniapp 接口文件，結合官方 sdk 快速開發]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="text-align:center">【店滴雲】可命令行生成 uniapp 接口文件，結合官方 sdk 快速開發</p><p>命令行：</p><div><pre><span style="background-color:#153811; color:#54b33e">php ./yii addons/createapi --addons=diandi_hotel</span></pre></div><p>生成的 api 文件示例：</p><pre><code>import sendHttp from "@/uni_modules/ddiot-ui/js_sdk/http/index.js"

export function hotelCommentList(hotel_id, room_id, page, pageSize) {
return sendHttp('/diandi_hotel/comment/list', "POST", {
hotel_id,
room_id,
page,
pageSize
}, true)
}</code></pre></div>
                                    ]]>
            </description>
            <pubDate>Thu, 16 Nov 2023 03:28:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266881/ddiot-updated</guid>
            <link>https://www.oschina.net/news/266881/ddiot-updated</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[FydeOS v17.1 發佈，集中修復 Linux 子系統，增加本土化優化]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#121212; margin-left:0; margin-right:0; text-align:start"><img alt="" height="720" src="https://oscimg.oschina.net/oscnet/up-9957e1513ae48366915d9d57f2b638760ae.png" width="1440" referrerpolicy="no-referrer"></p><p style="color:#121212; margin-left:0; margin-right:0; text-align:start">FydeOS v17.1 是對 FydeOS v17 Nostalgic Reflections 的一個集合功能修復及維護版本。在此次的發佈裏，值得一提的修改的有：</p><ul><li>集中修復了 Linux 子系統存在的一些問題： 
  <ul><li>修復了某些 Linux 程序無法展現 GUI 的問題</li><li>修復了某些 Linux 程序在系統休眠喚醒後崩潰的問題</li><li>修復了某些常用 Linux 程序（比如 WPS Linux）無法通過雙擊 .deb 軟件包安裝的依賴缺失</li><li>優化了 Linux 鏡像內的源地址；默認指向部署在中國大陸的阿里雲鏡像</li><li>其它本土化優化，包括中文字體和系統語言等</li><li><strong>如果你是從早期版本的 FydeOS 通過 OTA 升級到此 v17.1 版本，以上 Linux 子系統的優化並不會通過升級系統而生效；你需要刪除 Linux 環境並重新開啓才能獲得。</strong></li></ul></li></ul><div><img alt="" height="1824" src="https://oscimg.oschina.net/oscnet/up-bcbf3ddcf921f81e98aa29ac7468275d9f6.png" width="2736" referrerpolicy="no-referrer"></div><ul><li>修復了攝像頭無法在某些安卓應用中開啓的問題</li><li>修復了在系統內添加打印機可能會報錯的問題</li><li>優化了「提交反饋」的功能</li><li>為多啓動安裝的 FydeOS 增加了「<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ffydeos.com%2Ffaq%2Fdisable-media-files-scan" target="_blank">禁用多分區下的媒體文件自動掃描以獲得更長的電池續航時間</a></u>」的功能</li><li>在<span>&nbsp;</span><code>hwtuner</code><span>&nbsp;</span>中添加了更新 rEFInd 二進制文件以及新設計的深色主題的入口</li><li>添加了針對常見 USB wifi 適配器芯片的支持：MT7612U、RTL8192EU、RTL8188GU 以及 RTL8188CUS</li></ul><p style="color:#121212; margin-left:0; margin-right:0; text-align:start">希望你喜歡本次更新的新功能，有什麼想對我們説的，歡迎隨時到<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcommunity.fydeos.com%2F" target="_blank">FydeOS 社區</a>來告訴我們。</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 16 Nov 2023 03:24:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266880/fydeos-17-1-released</guid>
            <link>https://www.oschina.net/news/266880/fydeos-17-1-released</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Rust 1.74.0 發佈]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff"><span style="color:#333333">Rust 1.74.0 穩定版已正式</span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.rust-lang.org%2F2023%2F11%2F16%2FRust-1.74.0.html" target="_blank">發佈</a><span style="background-color:#ffffff"><span style="color:#333333">，主要帶來以下變化：</span></span></p><h4 style="text-align:start"><strong><span style="color:#000000"><span style="background-color:#ffffff">通過 Cargo 進行 Lint 配置</span></span></strong></h4><p style="text-align:start"><span style="color:#000000"><span style="background-color:#ffffff">正如&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frust-lang.github.io%2Frfcs%2F3389-manifest-lint.html" target="_blank">RFC 3389</a>&nbsp;所提議，<code>Cargo.toml</code>manifest&nbsp;現在支持一個<code>[lints]</code>表來配置來自編譯器和其他工具的 lints 的報告級別（禁止、拒絕、警告、允許）。因此，不要使用</span></span><code>-F</code><span style="background-color:#ffffff"><span style="color:#000000">/</span></span><code>-D</code><span style="background-color:#ffffff"><span style="color:#000000">/</span></span><code>-W</code><span style="background-color:#ffffff"><span style="color:#000000">/</span></span><code>-A</code><span style="color:#000000"><span style="background-color:#ffffff">設置 RUSTFLAGS（這會影響整個構建過程），或者使用 crate-level 的屬性，例如：</span></span></p><pre style="text-align:start"><code class="language-rust"><span style="color:#b65611">#![forbid(unsafe_code)]</span><span style="color:#b65611">#![deny(clippy::enum_glob_use)]</span></code></pre><p style="text-align:start"><span style="color:#000000"><span style="background-color:#ffffff">現在可以將這些寫入 </span></span><span style="color:#000000"><span style="background-color:#ffffff">package manifest&nbsp;</span></span><span style="color:#000000"><span style="background-color:#ffffff">中以供 Cargo 處理：</span></span></p><pre style="text-align:start"><code class="language-toml"><span style="color:#6684e1">[lints.rust]</span>
unsafe_code = <span style="color:#60ac39">"forbid"</span><span style="color:#6684e1">
[lints.clippy]</span>
enum_glob_use = <span style="color:#60ac39">"deny"</span></code></pre><p style="text-align:start"><span style="color:#000000"><span style="background-color:#ffffff">這些也可以在<code>[workspace.lints]</code>表中配置，然後像許多其他工作區設置一樣由<code>[lints] workspace = true</code>繼承。在決定哪些&nbsp;crates&nbsp;需要重建時，Cargo 還將跟蹤這些設置的更改。</span></span></p><p style="text-align:start"><span style="color:#000000"><span style="background-color:#ffffff">有關詳細信息，可參閲 Cargo 參考手冊中的<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fcargo%2Freference%2Fmanifest.html%23the-lints-section" target="_blank"><code>lints</code></a>和<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fcargo%2Freference%2Fworkspaces.html%23the-lints-table" target="_blank"><code>workspace.lints</code></a>部分。</span></span></p><h4 style="text-align:start"><strong><span style="color:#000000"><span style="background-color:#ffffff">Cargo Registry Authentication</span></span></strong></h4><p style="text-align:start"><span style="color:#000000"><span style="background-color:#ffffff">此版本中還包含兩個相關的 Cargo 功能：credential providers 和 authenticated private registries。</span></span></p><p style="text-align:start"><span style="color:#000000"><span style="background-color:#ffffff">Credential providers&nbsp;允許配置 Cargo 如何獲取註冊表的憑證。Built-in providers&nbsp;用於 Linux、macOS 和 Windows 上特定於操作系統的安全秘密存儲。此外，可以編寫自定義 providers 來支持存儲或生成令牌的任意方法。使用安全的 credential provider&nbsp;可以降低註冊表令牌泄漏的風險。</span></span></p><p style="text-align:start"><span style="color:#000000"><span style="background-color:#ffffff">Registries 現在可以選擇要求對所有操作進行身份驗證，而不僅僅是發佈。這使得 private Cargo registries 能夠提供更安全的 crates 託管。使用 private registries&nbsp;需要配置 credential provider。</span></span></p><p style="text-align:start"><span style="color:#000000"><span style="background-color:#ffffff">有關更多信息，可參閲&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fbeta%2Fcargo%2Freference%2Fregistry-authentication.html" target="_blank">Cargo 文檔</a>。</span></span></p><h4 style="text-align:start"><strong><span style="color:#000000"><span style="background-color:#ffffff">Projections in opaque return types</span></span></strong></h4><p style="text-align:start"><span style="color:#000000"><span style="background-color:#ffffff">有關返回「return type cannot contain a projection or Self that references lifetimes from a parent scope」錯誤信息的問題現在已經解決。編譯器現在允許在 opaque return types 中提及<code>Self</code>和關聯類型，例如<code>async fn</code>和<code>-&gt; impl Trait</code>。即使你對"projection"之類的術語一無所知，這種功能也能讓 Rust 更接近你所期望的工作方式。</span></span></p><p style="text-align:start"><span style="color:#000000"><span style="background-color:#ffffff">不過該功能目前有一個不穩定的 feature gate，因為它的實現最初沒有正確處理 captured lifetimes。有關更多技術細節，可參閲</span></span>&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frust-lang%2Frust%2Fpull%2F115659" target="_blank">stabilization pull request</a><span style="color:#000000"><span style="background-color:#ffffff">。示例：</span></span></p><pre style="text-align:start"><code class="language-rust"><span style="color:#b854d4">struct</span><span style="color:#6684e1">Wrapper</span>&lt;<span style="color:#60ac39">'a</span>, T&gt;(&amp;<span style="color:#60ac39">'a</span> T);

<span style="color:#aaaaaa">// Opaque return types that mention `Self`:</span><span style="color:#b854d4">impl</span> Wrapper&lt;<span style="color:#60ac39">'_</span>, ()&gt; {
    <span style="color:#b854d4">async</span><span style="color:#b854d4">fn</span><span style="color:#6684e1">async_fn</span>() -&gt; <span style="color:#b854d4">Self</span> { <span style="color:#aaaaaa">/* ... */</span> }
    <span style="color:#b854d4">fn</span><span style="color:#6684e1">impl_trait</span>() -&gt; <span style="color:#b854d4">impl</span><span style="color:#b65611">Iterator</span>&lt;Item = <span style="color:#b854d4">Self</span>&gt; { <span style="color:#aaaaaa">/* ... */</span> }
}

<span style="color:#b854d4">trait</span><span style="color:#6684e1">Trait</span>&lt;<span style="color:#60ac39">'a</span>&gt; {
    <span style="color:#b854d4">type</span><span style="color:#6684e1">Assoc</span>;
    <span style="color:#b854d4">fn</span><span style="color:#6684e1">new</span>() -&gt; Self::Assoc;
}
<span style="color:#b854d4">impl</span> Trait&lt;<span style="color:#60ac39">'_</span>&gt; <span style="color:#b854d4">for</span> () {
    <span style="color:#b854d4">type</span><span style="color:#6684e1">Assoc</span> = ();
    <span style="color:#b854d4">fn</span><span style="color:#6684e1">new</span>() {}
}

<span style="color:#aaaaaa">// Opaque return types that mention an associated type:</span><span style="color:#b854d4">impl</span>&lt;<span style="color:#60ac39">'a</span>, T: Trait&lt;<span style="color:#60ac39">'a</span>&gt;&gt; Wrapper&lt;<span style="color:#60ac39">'a</span>, T&gt; {
    <span style="color:#b854d4">async</span><span style="color:#b854d4">fn</span><span style="color:#6684e1">mk_assoc</span>() -&gt; T::Assoc { <span style="color:#aaaaaa">/* ... */</span> }
    <span style="color:#b854d4">fn</span><span style="color:#6684e1">a_few_assocs</span>() -&gt; <span style="color:#b854d4">impl</span><span style="color:#b65611">Iterator</span>&lt;Item = T::Assoc&gt; { <span style="color:#aaaaaa">/* ... */</span> }
}
</code></pre><h4 style="text-align:start"><strong>Stabilized APIs</strong></h4><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fstd%2Fnum%2Fstruct.Saturating.html" target="_blank"><code>core::num::Saturating</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fstd%2Fprocess%2Fstruct.Stdio.html%23impl-From%253CStdout%253E-for-Stdio" target="_blank"><code>impl From&lt;io::Stdout&gt; for std::process::Stdio</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fstd%2Fprocess%2Fstruct.Stdio.html%23impl-From%253CStderr%253E-for-Stdio" target="_blank"><code>impl From&lt;io::Stderr&gt; for std::process::Stdio</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fstd%2Fprocess%2Fstruct.Stdio.html%23impl-From%253CStderr%253E-for-Stdio" target="_blank"><code>impl From&lt;OwnedHandle&gt; for std::process::Child{Stdin, Stdout, Stderr}</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fstd%2Fprocess%2Fstruct.Stdio.html%23impl-From%253CStderr%253E-for-Stdio" target="_blank"><code>impl From&lt;OwnedFd&gt; for std::process::Child{Stdin, Stdout, Stderr}</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fstd%2Fffi%2Fstruct.OsString.html%23method.from_encoded_bytes_unchecked" target="_blank"><code>std::ffi::OsString::from_encoded_bytes_unchecked</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fstd%2Fffi%2Fstruct.OsString.html%23method.into_encoded_bytes" target="_blank"><code>std::ffi::OsString::into_encoded_bytes</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fstd%2Fffi%2Fstruct.OsStr.html%23method.from_encoded_bytes_unchecked" target="_blank"><code>std::ffi::OsStr::from_encoded_bytes_unchecked</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fstd%2Fffi%2Fstruct.OsStr.html%23method.as_encoded_bytes" target="_blank"><code>std::ffi::OsStr::as_encoded_bytes</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fstd%2Fio%2Fstruct.Error.html%23method.other" target="_blank"><code>std::io::Error::other</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fstd%2Fprimitive.u16.html%23impl-TryFrom%253Cchar%253E-for-u16" target="_blank"><code>impl TryFrom&lt;char&gt; for u16</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fstd%2Fvec%2Fstruct.Vec.html%23impl-From%253C%2526%255BT%3B%2BN%255D%253E-for-Vec%253CT%2C%2BGlobal%253E" target="_blank"><code>impl&lt;T: Clone, const N: usize&gt; From&lt;&amp;[T; N]&gt; for Vec&lt;T&gt;</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fstd%2Fvec%2Fstruct.Vec.html%23impl-From%253C%2526mut%2B%255BT%3B%2BN%255D%253E-for-Vec%253CT%2C%2BGlobal%253E" target="_blank"><code>impl&lt;T: Clone, const N: usize&gt; From&lt;&amp;mut [T; N]&gt; for Vec&lt;T&gt;</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fstd%2Fsync%2Fstruct.Arc.html%23impl-From%253C%255BT%3B%2BN%255D%253E-for-Arc%253C%255BT%255D%2C%2BGlobal%253E" target="_blank"><code>impl&lt;T, const N: usize&gt; From&lt;[T; N]&gt; for Arc&lt;[T]&gt;</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fstd%2Frc%2Fstruct.Rc.html%23impl-From%253C%255BT%3B%2BN%255D%253E-for-Rc%253C%255BT%255D%2C%2BGlobal%253E" target="_blank"><code>impl&lt;T, const N: usize&gt; From&lt;[T; N]&gt; for Rc&lt;[T]&gt;</code></a></li></ul><p style="text-align:start"><span style="color:#000000"><span style="background-color:#ffffff"><span style="color:#000000">這些 API 現在在 const contexts 中是穩定的：</span></span></span></p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fstd%2Fmem%2Ffn.transmute_copy.html" target="_blank"><code>core::mem::transmute_copy</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fstd%2Fprimitive.str.html%23method.is_ascii" target="_blank"><code>str::is_ascii</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fstd%2Fprimitive.slice.html%23method.is_ascii" target="_blank"><code>[u8]::is_ascii</code></a></li></ul><h4 style="text-align:start"><strong><span style="color:#000000"><span style="background-color:#ffffff">兼容性説明</span></span></strong></h4><ul><li>正如<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.rust-lang.org%2F2023%2F09%2F25%2FIncreasing-Apple-Version-Requirements.html" target="_blank">之前所宣佈的</a>，Rust 1.74 提高了對 Apple 平台的要求。現在最低版本是： 
  <ul><li>macOS：10.12 Sierra（2016 年首次發佈）</li><li>iOS：10（2016 年首次發佈）、</li><li>tvOS：10（2016 年首次發佈）</li></ul></li></ul><h4 style="text-align:start"><strong><span style="color:#000000"><span style="background-color:#ffffff">其他變化</span></span></strong></h4><p style="text-align:start"><span style="color:#000000"><span style="background-color:#ffffff">查看&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frust-lang%2Frust%2Freleases%2Ftag%2F1.74.0" target="_blank">Rust</a>、<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frust-lang%2Fcargo%2Fblob%2Fmaster%2FCHANGELOG.md%23cargo-174-2023-11-16" target="_blank">Cargo</a>&nbsp;和&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frust-lang%2Frust-clippy%2Fblob%2Fmaster%2FCHANGELOG.md%23rust-174" target="_blank">Clippy</a>&nbsp;中發生的所有變化。</span></span></p><p><span style="background-color:#ffffff"><span style="color:#333333">詳情可</span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.rust-lang.org%2F2023%2F11%2F16%2FRust-1.74.0.html" target="_blank">查看官方公告</a><span style="background-color:#ffffff"><span style="color:#333333">。</span></span></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 16 Nov 2023 03:03:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266875/rust-1-74-0-released</guid>
            <link>https://www.oschina.net/news/266875/rust-1-74-0-released</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Spring Framework 6.1 正式 GA]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Spring Framework 6.1<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fspring.io%2Fblog%2F2023%2F11%2F16%2Fspring-framework-6-1-goes-ga" target="_blank"> 已正式發佈</a></u>。</p><p><strong>主要變化</strong></p><ul><li>支持 JDK 21 LTS</li><li>支持虛擬線程</li><li>支持恢復 JVM Checkpoint</li><li>引入「資源生命週期管理」</li><li>引入「數據綁定和驗證」</li><li>新增&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.spring.io%2Fspring-framework%2Fdocs%2F6.1.x%2Fjavadoc-api%2Forg%2Fspringframework%2Fweb%2Fclient%2FRestClient.html" target="_blank">RestClient</a>&nbsp;和&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.spring.io%2Fspring-framework%2Fdocs%2F6.1.x%2Fjavadoc-api%2Forg%2Fspringframework%2Fjdbc%2Fcore%2Fsimple%2FJdbcClient.html" target="_blank">JdbcClient</a>&nbsp;API</li></ul><p>公告寫道，就 HotSpot JVM 上的高效部署選項而言，Spring Framework 6.1 與 Project CRaC 緊密集成以實現 JVM checkpoint 部署：查看&nbsp;<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.spring.io%2Fspring-framework%2Freference%2F6.1%2Fintegration%2Fcheckpoint-restore.html" target="_blank">JVM Checkpoint Restore</a></u>。此外，Spring 用户還可以採用 JDK 21 中最新的 AppCDS 功能，與 OpenJDK 的 Project Leyden 預先保持一致。</p><p>此外，Spring Framework 6.1 在運行時方面針對 JDK 21 和 Jakarta EE 10 上提供了一級支持，同時保留了 JDK 17 和 Jakarta EE 9 基線。Spring 還通過精細的元數據推理跟蹤 GraalVM for JDK 21 的演變，同時暫時保持與 GraalVM 22.3 的兼容性。</p><hr><p>文檔<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fspring-projects%2Fspring-framework%2Fwiki%2FWhat%2527s-New-in-Spring-Framework-6.x">顯示</a>，Spring 6.1 已全面兼容虛擬線程 (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fspring-projects%2Fspring-framework%2Fissues%2F23443">Virtual Threads</a>) 和 JDK 21。</p><p><img alt="" src="https://static.oschina.net/uploads/space/2023/0817/140919_ppSy_2720166.png" referrerpolicy="no-referrer"></p><p>虛擬線程配置選項：專用的&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.spring.io%2Fspring-framework%2Fdocs%2F6.1.0-SNAPSHOT%2Fjavadoc-api%2Forg%2Fspringframework%2Fcore%2Ftask%2FVirtualThreadTaskExecutor.html">VirtualThreadTaskExecutor</a>&nbsp;和&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.spring.io%2Fspring-framework%2Fdocs%2F6.1.0-SNAPSHOT%2Fjavadoc-api%2Forg%2Fspringframework%2Fcore%2Ftask%2FSimpleAsyncTaskExecutor.html%23setVirtualThreads%28boolean%29">SimpleAsyncTaskExecutor 上的虛擬線程模式</a>，以及類似的具有 new-thread-per-task strategy 和虛擬線程模式的&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.spring.io%2Fspring-framework%2Fdocs%2F6.1.0-SNAPSHOT%2Fjavadoc-api%2Forg%2Fspringframework%2Fscheduling%2Fconcurrent%2FSimpleAsyncTaskScheduler.html">SimpleAsyncTaskScheduler</a>。</p><p>詳情查看&nbsp;<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fspring-projects%2Fspring-framework%2Fwiki%2FWhat%27s-New-in-Spring-Framework-6.x" target="_blank">What's New 頁面</a></u>。</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 16 Nov 2023 02:12:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266858/spring-framework-6-1-ga</guid>
            <link>https://www.oschina.net/news/266858/spring-framework-6-1-ga</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[🎉Solon v2.6 榮耀發佈]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h2>先吹牛！</h2><p style="color:#24292e; text-align:start">在 v2.6 這個新的里程碑節點，Solon 又完成了幾件驚天大事（每一件，都是經歷了漫長時間打磨與積累）：</p><h4>（1）Solon Native，有了第一個開源案例：<a href="https://gitee.com/dromara/neutrino-proxy">dromara/neutrino-proxy</a><span>&nbsp;</span>（它是 2021 年起頭的二級項目）</h4><p style="color:#24292e; text-align:start">Solon 估計是國內唯搞 AOT 和 Java 原生編譯的。或許，這塊的友商只能是 Micronaut、Quarkus 和 Spring Native。</p><h4>（2）99% 換血重構了：<span>&nbsp;</span><a href="https://gitee.com/noear/socketd">Socket.D 通訊應用協議</a><span>&nbsp;</span>（它是 Solon 的二級項目，已孵化兩年）</h4><p style="color:#24292e; text-align:start">它是一種通訊應用協議，也是一個網絡開發框架。未來， 必會成為各種網絡開發場景的優選。開發 Mq, Im, Rpc 就跟玩似的。</p><h4>（3）重新設計了 Solon 的 WebSocket 接口標準</h4><p style="color:#24292e; text-align:start">這次的設計很專業、很純血。未來 10 年，估計都不用再動了。動它，是下了很大決心的</p><h4>（4）封裝了微 FaaS 引擎：<a href="https://gitee.com/noear/luffy">Luffy FaaS 引擎</a>（它也是 Solon 的二級項目，已孵化三年）</h4><p style="color:#24292e; text-align:start">隨時可能更新代碼，又不想重啓的場景。可以考慮用它了<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsolon.noear.org%2Farticle%2F664" target="_blank">luffy-solon-plugin</a>。<span style="background-color:#f1c40f">官網將推出全新的學習頻道：Solon Faas 開發</span>。</p><h4>（5）設定 Smart-Http 為 solon-api 的默認 http-server（它也打磨幾年了）</h4><p style="color:#24292e; text-align:start">smart-http ？它可能是國內唯一完整支持 http 1.1 協議的原創 http-server。換它，國產純血度大升級！</p><h2>Solon 是什麼框架？</h2><p style="color:#24292e; text-align:start"><strong>Java 新的"生態級"應用開發框架</strong>。<span style="background-color:#f1c40f">從零開始構建，有自己的標準規範與開放生態</span>（歷時五年，具備全球第二級別的生態規模）。Solon 生態的友商是 Spring 生態。Solon 的友商很強，所以很有意思。未來也將會在國際上照面。</p><h2>相對於 Spring，有什麼特點？</h2><ul><li>啓動快 5 ～ 10 倍。<span>&nbsp;</span><strong>（更快）</strong></li><li>qps 高 2～ 3 倍。<span>&nbsp;</span><strong>（更高）</strong></li><li>低流量內存節省 1/3 ~ 1/2。<span>&nbsp;</span><strong>（更少）</strong></li><li>打包可以縮小到 1/2 ~ 1/10；比如，300Mb 的變成了 23Mb。<span>&nbsp;</span><strong>（更小）</strong></li><li>同時支持 jdk8, jdk11, jdk17, jdk21,<span>&nbsp;</span><strong>graalvm native image</strong></li></ul><h2>入門探索視頻（用户錄製）：</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><iframe frameborder="0" height="400" scrolling="no" src="https://player.bilibili.com/player.html?aid=938467339&amp;bvid=BV1RT4y1a7U5&amp;cid=583394292&amp;page=1" style="box-sizing: border-box; font-size: 16px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; color: rgb(36, 41, 46); font-family: -apple-system, system-ui, &quot;Segoe UI&quot;, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; text-align: start; background-color: rgb(255, 255, 255);" width="700" referrerpolicy="no-referrer"></iframe></p><h2>最近更新了什麼？</h2><ul><li><span style="background-color:#f1c40f">設定 smart-http 為 solon-api 快捷組合包的默認 http-server</span></li><li>重構 socketd 適配，升為 v2.0</li><li>重構 websocket 適配，升為 v2.0</li><li>新增 solon.net 模塊用於定義網絡接口，分離 websocket 與 socketd 的接口（分開後，用户層面更清爽）</li><li>新增 solon.boot.socketd 插件</li><li>新增 sa-token-dao-redisson-jackson 插件</li><li>添加 SolonApp::filterIfAbsent,routerInterceptorIfAbsent 接口</li><li>添加 AppContext::getBeansMapOfType 接口</li><li>添加 websocket context-path 過濾處理機制</li><li>添加<span>&nbsp;</span><code>@Cache</code><span>&nbsp;</span>緩存註解處理對動態開關的支持（之前，只能在啓動時決定）</li><li>添加<span>&nbsp;</span><code>@Tran</code><span>&nbsp;</span>事務註解處理對動態開關的支持（之前，只能在啓動時決定）</li><li>添加 solon.boot.smarthttp 外部優先級處理（成為默認後，要方便外部替換它）</li><li>調整 smart-http,jetty,undertow 統一使用 server.http.idleTimeout 配置</li><li>調整<span>&nbsp;</span><code>@ProxyComponent</code><span>&nbsp;</span>棄用提示為直接提示（之前為 debug 模式下）</li><li>移除 AopContext（完成更名 AppContext 的第二步動作）</li><li>移除 PathLimiter （已無用，留着有誤導性）</li><li>移除 SolonApp::enableWebSocketD,enableWebSocketMvc,enableSocketMvc（已無用，留着有誤導性）</li><li>優化 http context-path 過濾器處理機制</li><li>優化 solon.test 的<span>&nbsp;</span><code>@Rollback</code><span>&nbsp;</span>註解處理，支持 web 的事務控制</li><li>優化 solon.scheduling.simple 保持與 jdk 調度服務的策略一致</li><li>刪除 socketd v1.0 相關的 10 多個插件（v2.0 獨立倉庫）</li><li>jackson 升為 2.15.2</li><li>pagehelper 升為 5.3.3</li><li>liteflow 升為 2.11.3</li><li>activemq 升為 5.16.7</li><li>redisx 升為 1.6.2</li><li>minio8 升為 8.5.3</li><li>sqltoy 升為 5.2.81</li><li>fastjson2 升為 2.0.42</li><li>luffy 升為 1.6.9</li><li>water 升為 2.12.0</li></ul><h2>項目倉庫地址？</h2><ul><li>gitee：<a href="https://gitee.com/noear/solon">https://gitee.com/noear/solon</a></li><li>github：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnoear%2Fsolon" target="_blank">https://github.com/noear/solon</a></li></ul><p>&nbsp;</p><p>&nbsp;</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 16 Nov 2023 00:56:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266845/solon-2-6-released</guid>
            <link>https://www.oschina.net/news/266845/solon-2-6-released</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[RXThinkCMF 敏捷開發框架 ThinkPhp8+AntdVue 版本 v2.0.0 發佈]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff; color:#333333">v2.0.0 更新內容：</span><br><span style="background-color:#ffffff; color:#333333">1、新增日誌操作日誌功能；</span><br><span style="background-color:#ffffff; color:#333333">2、新增網站配置管理功能；</span><br><span style="background-color:#ffffff; color:#333333">3、新增生成器模板引擎；</span><br><span style="background-color:#ffffff; color:#333333">4、新增生成器一鍵生成功能；</span><br><span style="background-color:#ffffff; color:#333333">5、新增廣告富文本圖片存儲功能；</span><br><span style="background-color:#ffffff; color:#333333">6、新增通知公告富文本圖片存儲功能；</span><br><span style="background-color:#ffffff; color:#333333">7、修復近期用户反饋的問題；</span></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">一款 PHP 語言基於 ThinkPhp8.x、Vue3、AntDesign、MySQL 等框架精心打造的一款模塊化、插件化、高性能的前後端分離架構敏捷開發框架，可用於快速搭建前後端分離後台管理系統，本着簡化開發、提升開發效率的初衷，框架自研了一套個性化的組件，實現了可插拔的組件式開發方式：單圖上傳、多圖上傳、下拉選擇、開關按鈕、單選按鈕、多選按鈕、圖片裁剪等等一系列個性化、輕量級的組件，是一款真正意義上實現組件化開發的敏捷開發框架，框架已集成了完整的 RBAC 權限架構和常規基礎模塊，同時支持多主題切換，可以根據自己喜歡的風格選擇想一個的主題，實現了個性化呈現的需求；為了敏捷快速開發，提升研發效率，框架內置了一鍵 CRUD 代碼生成器，自定義了模塊生成模板，可以根據已建好的表結構 (字段註釋需規範) 快速的一鍵生成整個模塊的所有代碼和增刪改查等等功能業務，真正實現了低代碼開發，極大的節省了人力成本的同時提高了開發效率，縮短了研發週期，是一款真正意義上實現組件化、低代碼敏捷開發框架。</p><h2>內置模塊</h2><ul><li>用户管理：用於維護管理系統的用户，常規信息的維護與賬號設置。</li><li>角色管理：角色菜單管理與權限分配、設置角色所擁有的菜單權限。</li><li>菜單管理：配置系統菜單，操作權限，按鈕權限標識等。</li><li>職級管理：主要管理用户擔任的職級。</li><li>崗位管理：主要管理用户擔任的崗位。</li><li>部門管理：主要管理系統組織架構，對組織架構進行統一管理維護。</li><li>操作日誌：系統正常操作日誌記錄和查詢；系統異常信息日誌記錄和查詢。</li><li>登錄日誌：系統登錄日誌記錄查詢包含登錄異常。</li><li>字典管理：對系統中常用的較為固定的數據進行統一維護。</li><li>配置管理：對系統的常規配置信息進行維護，網站配置管理功能進行統一維護。</li><li>城市管理：統一對全國行政區劃進行維護，對其他模塊提供行政區劃數據支撐。</li><li>友鏈管理：對系統友情鏈接、合作伙伴等相關外鏈進行集成維護管理的模塊。</li><li>個人中心：主要是對當前登錄用户的個人信息進行便捷修改的功能。</li><li>廣告管理：主要對各終端的廣告數據進行管理維護。</li><li>站點欄目：主要對大型系統網站等欄目進行劃分和維護的模塊。</li><li>會員管理：對各終端註冊的會員進行統一的查詢與管理的模塊。</li><li>網站配置：對配置管理模塊的數據源動態解析與統一維護管理的模塊。</li><li>通知公告：系統通知公告信息發佈維護。</li><li>代碼生成：一鍵生成模塊 CRUD 的功能，包括後端和前端等相關代碼。</li><li>案例演示：常規代碼生成器一鍵生成後的演示案例。</li></ul><h2>軟件信息</h2><ul><li>軟件名稱：RXThinkCMF 敏捷開發框架 ThinkPhp8.x+AntdVue 版本</li><li>官網網址：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.rxthink.cn" target="_blank">https://www.rxthink.cn</a></li><li>文檔網址：<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fdocs.thinkphp8.antdvue.rxthink.cn" target="_blank">http://docs.thinkphp8.antdvue.rxthink.cn</a></li><li>演示地址：<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmanage.thinkphp8.antdvue.rxthink.cn" target="_blank">http://manage.thinkphp8.antdvue.rxthink.cn</a></li></ul><h2>版本説明</h2><table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:0px; box-sizing:border-box; color:#40485b; display:block; font-family:-apple-system,BlinkMacSystemFont,&quot;Segoe UI&quot;,Helvetica,Arial,&quot;Apple Color Emoji&quot;,&quot;Segoe UI Emoji&quot;,&quot;Segoe UI Symbol&quot;,&quot;Liberation Sans&quot;,&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,&quot;Hiragino Sans GB&quot;,&quot;Wenquanyi Micro Hei&quot;,&quot;WenQuanYi Zen Hei&quot;,&quot;ST Heiti&quot;,SimHei,SimSun,&quot;WenQuanYi Zen Hei Sharp&quot;,sans-serif; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; margin-bottom:16px; margin-top:0px; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:635px; word-break:initial; word-spacing:0px"><tbody><tr><th>版本名稱</th><th>版本説明</th><th>版本地址</th></tr></tbody><tbody><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">ThinkPhp3.2+Layui 混編版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">採用 ThinkPhp3.2、Layui、MySQL 等框架研發的混編專業版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp3.2_Layui">https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp3.2_Layui</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">ThinkPhp5.1+Layui 混編版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">採用 ThinkPhp5.1、Layui、MySQL 等框架研發的混編專業版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp5.1_Layui">https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp5.1_Layui</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">ThinkPhp6.x+Layui 混編版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">採用 ThinkPhp6、Layui、MySQL 等框架研發的混編專業版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp6_Layui">https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp6_Layui</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">ThinkPhp8.x+Layui 混編版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">採用 ThinkPhp8、Layui、MySQL 等框架研發的混編專業版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp8_Layui">https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp8_Layui</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Laravel8.x+Layui 混編版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">採用 Laravel8、Layui、MySQL 等框架研發的混編專業版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/rxthinkcmf/RXThinkCMF_laravel8_Layui">https://gitee.com/rxthinkcmf/RXThinkCMF_laravel8_Layui</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Laravel9.x+Layui 混編版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">採用 Laravel9、Layui、MySQL 等框架研發的混編專業版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/rxthinkcmf/RXThinkCMF_Laravel9_Layui">https://gitee.com/rxthinkcmf/RXThinkCMF_Laravel9_Layui</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Laravel10.x+Layui 混編版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">採用 Laravel10、Layui、MySQL 等框架研發的混編專業版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/rxthinkcmf/RXThinkCMF_Laravel10_Layui">https://gitee.com/rxthinkcmf/RXThinkCMF_Laravel10_Layui</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">ThinkPhp3.2+EleVue 前後端分離版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">採用 ThinkPhp3.2、Vue2.x、ElementUI 等框架研發前後端分離版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp3.2_EleVue">https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp3.2_EleVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">ThinkPhp3.2+AntdVue 前後端分離版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">採用 ThinkPhp3.2、Vue3.x、AntDesign 等框架研發前後端分離版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp3.2_AntdVue">https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp3.2_AntdVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">ThinkPhp5.1+EleVue 前後端分離版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">採用 ThinkPhp5.1、Vue2.x、ElementUI 等框架研發前後端分離版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp5.1_EleVue">https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp5.1_EleVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">ThinkPhp5.1+AntdVue 前後端分離版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">採用 ThinkPhp5.1、Vue2.x、AntDesign 等框架研發前後端分離版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp5.1_AntdVue">https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp5.1_AntdVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">ThinkPhp6.x+EleVue 前後端分離版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">採用 ThinkPhp6、Vue2.x、ElementUI 等框架研發前後端分離版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp6_EleVue">https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp6_EleVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">ThinkPhp6.x+AntdVue 前後端分離版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">採用 ThinkPhp6、Vue3.x、AntDesign 等框架研發前後端分離版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp6_AntdVue">https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp6_AntdVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">ThinkPhp8.x+EleVue 前後端分離版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">採用 ThinkPhp8、Vue2.x、ElementUI 等框架研發前後端分離版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp8_EleVue">https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp8_EleVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">ThinkPhp8.x+AntdVue 前後端分離版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">採用 ThinkPhp8、Vue3.x、AntDesign 等框架研發前後端分離版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp8_AntdVue">https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp8_AntdVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Laravel8.x+EleVue 前後端分離版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">採用 Laravel8、Vue2.x、ElementUI 等框架研發前後端分離版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/rxthinkcmf/RXThinkCMF_Laravel8_EleVue">https://gitee.com/rxthinkcmf/RXThinkCMF_Laravel8_EleVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Laravel8.x+AntdVue 前後端分離版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">採用 Laravel8、Vue3.x、AntDesign 等框架研發前後端分離版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/rxthinkcmf/RXThinkCMF_Laravel8_AntdVue">https://gitee.com/rxthinkcmf/RXThinkCMF_Laravel8_AntdVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Laravel9.x+EleVue 前後端分離版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">採用 Laravel9、Vue2.x、ElementUI 等框架研發前後端分離版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/rxthinkcmf/RXThinkCMF_Laravel9_EleVue">https://gitee.com/rxthinkcmf/RXThinkCMF_Laravel9_EleVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Laravel9.x+AntdVue 前後端分離版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">採用 Laravel9、Vue3.x、AntDesign 等框架研發前後端分離版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/rxthinkcmf/RXThinkCMF_Laravel9_AntdVue">https://gitee.com/rxthinkcmf/RXThinkCMF_Laravel9_AntdVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Laravel10.x+EleVue 前後端分離版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">採用 Laravel10、Vue2.x、ElementUI 等框架研發前後端分離版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/rxthinkcmf/RXThinkCMF_Laravel10_EleVue">https://gitee.com/rxthinkcmf/RXThinkCMF_Laravel10_EleVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Laravel10.x+AntdVue 前後端分離版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">採用 Laravel10、Vue3.x、AntDesign 等框架研發前後端分離版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/rxthinkcmf/RXThinkCMF_Laravel10_AntdVue">https://gitee.com/rxthinkcmf/RXThinkCMF_Laravel10_AntdVue</a></td></tr></tbody></table><h2>模塊展示</h2><p><img alt="" height="1080" src="https://oscimg.oschina.net/oscnet/up-7ecd65f6bc08a0f001503fdf427e89cbf6e.png" width="1920" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 16 Nov 2023 00:52:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266844</guid>
            <link>https://www.oschina.net/news/266844</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[MT-AUTH v1.18.0 發佈，多租户權限系統]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h1>更新日誌</h1><h2>mt-ui</h2><ul><li>重新設計 Permission</li><li>重新設計 Role</li></ul><h1><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fpublicdevop2019%2Fmt-auth%2Fprojects%2F19" target="_blank">更多詳情</a></h1><p style="color:#e6edf3; margin-left:0; margin-right:0; text-align:left">&nbsp;</p><p style="color:#e6edf3; margin-left:0; margin-right:0; text-align:left"><span style="color:#000000"><strong>MT-AUTH 是一款多租户權限管理系統，包含用户管理與 API 路由、共享、鑑權、緩存、跨域、安全防護等功能</strong></span></p><h1><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fpublicdevop2019%2Fmt-auth%2Ftree%2Fmain%23%25E5%25BA%2594%25E7%2594%25A8%25E5%259C%25BA%25E6%2599%25AF" target="_blank"><span style="color:#000000">應用場景</span></a></h1><p style="color:#e6edf3; margin-left:0; margin-right:0; text-align:start"><span style="color:#000000">對於個人開發者，您可以：</span></p><ul><li><span style="color:#000000">無需從零構建用户相關功能，例如：用户註冊，忘記密碼找回等</span></li><li><span style="color:#000000">輕鬆使用現成的權限管理模式（RBAC），更加專注於業務需求</span></li><li><span style="color:#000000">快速與您的應用集成單點登錄（SSO）</span></li><li><span style="color:#000000">一站式管理應用，API，用户</span></li><li><span style="color:#000000">享受 API 級別的鑑權，緩存，跨域，限流，安全控制</span></li><li><span style="color:#000000">通過 API 市場分享或訂閲其它 API</span></li></ul><p style="color:#e6edf3; margin-left:0; margin-right:0; text-align:start"><span style="color:#000000">對於企業，如果您：</span></p><ul><li><span style="color:#000000">項目之間用户通用，需要統一管理</span></li><li><span style="color:#000000">項目由不同的團隊管理，團隊相對獨立</span></li><li><span style="color:#000000">用户在不同項目中有不同權限</span></li><li><span style="color:#000000">統一管理項目、應用與 API</span></li><li><span style="color:#000000">項目之間需要共享 API</span></li></ul><h1><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fpublicdevop2019%2Fmt-auth%2Ftree%2Fmain%23%25E4%25BA%2591%25E7%2589%2588%25E6%259C%25AC" target="_blank"><span style="color:#000000">雲版本</span></a></h1><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.letsauth.cloud%2Flogin" target="_blank">官方地址 (www.letsauth.cloud)</a></li><li><span style="color:#000000">演示賬號：</span><a href="https://www.oschina.net/action/GoToLink?url=mailto%3Ademo%40sample.com" target="_blank"><span style="color:#000000">demo@sample.com</span></a><span style="color:#000000">&nbsp;密：Password1!</span></li><li><span style="color:#000000">演示賬號：</span><a href="https://www.oschina.net/action/GoToLink?url=mailto%3Aadmin%40sample.com" target="_blank"><span style="color:#000000">admin@sample.com</span></a><span style="color:#000000">&nbsp;密：Password1!</span></li><li><span style="color:#000000">演示賬號：</span><a href="https://www.oschina.net/action/GoToLink?url=mailto%3Auser1%40sample.com" target="_blank"><span style="color:#000000">user1@sample.com</span></a><span style="color:#000000">&nbsp;密：Password1!</span></li><li><span style="color:#000000"><strong>注：當前版本為 beta 版，不保證數據安全並且隨時回滾</strong></span></li></ul><h1><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fpublicdevop2019%2Fmt-auth%2Ftree%2Fmain%23%25E7%25A4%25BA%25E6%2584%258F%25E5%259B%25BE" target="_blank"><span style="color:#000000">示意圖</span></a></h1><p style="color:#e6edf3; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><h1><img alt="" height="440" src="https://oscimg.oschina.net/oscnet/up-340644b27fece1bd183c7978e86bc25af6a.jpg" width="500" referrerpolicy="no-referrer"></h1><p style="color:#e6edf3; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><h1><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fpublicdevop2019%2Fmt-auth%2Ftree%2Fmain%23%25E9%25A1%25B9%25E7%259B%25AE%25E7%2589%25B9%25E7%2582%25B9" target="_blank"><span style="color:#000000">項目特點</span></a></h1><ul><li><span style="color:#000000">事件驅動</span></li><li><span style="color:#000000">基於角色的權限控制 (RBAC)</span></li><li><span style="color:#000000">多租户</span></li><li><span style="color:#000000">不對稱密匙</span></li><li><span style="color:#000000">OAuth2</span></li><li><span style="color:#000000">站內信，短信，郵件通知</span></li><li><span style="color:#000000">用户密碼重置，註冊碼註冊</span></li><li><span style="color:#000000">已簽發 JWT 回收</span></li><li><span style="color:#000000">API 路由、緩存、跨域 CORS、CSRF 防護、壓縮、隱藏系統錯誤信息</span></li><li><span style="color:#000000">API 記錄與分析</span></li><li><span style="color:#000000">多因素認證 (MFA)</span></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Wed, 15 Nov 2023 13:55:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266819</guid>
            <link>https://www.oschina.net/news/266819</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[BootstrapBlazor v8.0.0 已經發布，Bootstrap 樣式的 Blazor UI 組件庫]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>BootstrapBlazor v8.0.0 已經發布，Bootstrap 樣式的 Blazor UI 組件庫</p><p>此版本更新內容包括：</p><h2>Release 2023-11-16 V8.0.0</h2><h3>What's Changed</h3><ul><li>fix(Table): 修復單元格內溢出文本 <code>Tooltip</code> 未居中問題 by @ArgoZhang in <a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F2307" target="_blank">https://github.com/dotnetcore/BootstrapBlazor/pull/2307</a></li><li>fix(ValidateForm): 修復 <code>OnValidSubmit</code> 在 <code>ValidateAsync</code> 前執行問題 by @ArgoZhang in <a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F2311" target="_blank">https://github.com/dotnetcore/BootstrapBlazor/pull/2311</a></li><li>fix(Markdown): 修復缺失中文包問題 by @ArgoZhang in <a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F2332" target="_blank">https://github.com/dotnetcore/BootstrapBlazor/pull/2332</a></li><li>fix(Table): 修復鼠標調整列寬時未觸發 <code>OnResizeColumnAsync</code> 回調問題 by @ArgoZhang in <a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F2351" target="_blank">https://github.com/dotnetcore/BootstrapBlazor/pull/2351</a></li><li>fix(ValidateForm): 修復異步驗證未等待問題 by @ArgoZhang in <a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F2355" target="_blank">https://github.com/dotnetcore/BootstrapBlazor/pull/2355</a></li><li>fix(Table): 修復使用動態數據類型作為數據源時無法調整列寬問題 by @ArgoZhang in <a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F2367" target="_blank">https://github.com/dotnetcore/BootstrapBlazor/pull/2367</a></li><li>feat(Select): 增加參數 <code>ClearSearchText</code> 用於自定義清空提示字 by @ArgoZhang in <a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F2306" target="_blank">https://github.com/dotnetcore/BootstrapBlazor/pull/2306</a></li><li>feat(Table): 增加 <code>GetAdvancedSearchFilterCallback</code> 回調方法 by @ArgoZhang in <a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F2309" target="_blank">https://github.com/dotnetcore/BootstrapBlazor/pull/2309</a></li><li>chore(NET8): 更新框架支持 <code>net8.0</code> by @ArgoZhang in <a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F2371" target="_blank">https://github.com/dotnetcore/BootstrapBlazor/pull/2371</a></li></ul><p><strong>Full Changelog</strong>: <a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fcompare%2Fv7.12.0...v8.0.0" target="_blank">https://github.com/dotnetcore/BootstrapBlazor/compare/v7.12.0...v8.0.0</a></p><p>詳情查看：<a href="https://gitee.com/LongbowEnterprise/BootstrapBlazor/releases/v8.0.0">https://gitee.com/LongbowEnterprise/BootstrapBlazor/releases/v8.0.0</a></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 15 Nov 2023 09:02:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266774/bootstrapblazor-8-0-0-released</guid>
            <link>https://www.oschina.net/news/266774/bootstrapblazor-8-0-0-released</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[MCMS 5.3.5 已經發布，銘飛內容管理系統]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>MCMS 5.3.5 已經發布，銘飛內容管理系統</p><p>此版本更新內容包括：</p><ul><li>【新增】自定義業務數據 ID 增加雪花 ID 支持</li><li>【新增】自定義模型增加代碼生成器結構</li><li>【新增】XSS 支持地址參數的配置方式</li><li>【優化】搜索功能優化</li><li>【優化】默認模板優化</li><li>【優化】標籤功能優化</li><li>【修復】具體參考開源中國與 GitHub 的 ISSUES <a href="https://gitee.com/mingSoft/MCMS/issues" target="_blank">https://gitee.com/mingSoft/MCMS/issues</a></li></ul><p>詳情查看：<a href="https://gitee.com/mingSoft/MCMS/releases/5.3.5">https://gitee.com/mingSoft/MCMS/releases/5.3.5</a></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 15 Nov 2023 07:50:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266754/ms-cms-5-3-5-released</guid>
            <link>https://www.oschina.net/news/266754/ms-cms-5-3-5-released</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Rust 通用代碼生成器蓮花發佈深度修復版紅蓮嚐鮮版十七介紹視頻]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Rust 通用代碼生成器蓮花發佈深度修復版紅蓮嚐鮮版十七介紹視頻</p><p>Rust 通用代碼生成器蓮花已發佈深度修復版紅蓮嚐鮮版十七介紹視頻。歡迎使用。視頻請見：<br><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1rQ4y1t7qJ%2F" target="_blank">https://www.bilibili.com/video/BV1rQ4y1t7qJ/</a></p><p>Rust 通用代碼生成器蓮花發佈深度修復版紅蓮嚐鮮版十七。修復規範了下拉列表的空值，並修復了高級定製功能羣，自動生成差異版本功能羣，動詞否定功能羣和字段否定功能羣裏的一系列缺陷，並有其他缺陷修復。此版本支持 MariaDB，MySQL，PostgreSQL 和 Oracle 四種數據庫。此版本支持枚舉和 datadummy 模式。請部署在 Tomcat9 的 webapps 目錄下。</p><p>老一點的參考視頻：</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1Mw411x7FP%2F" target="_blank">https://www.bilibili.com/video/BV1Mw411x7FP/</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1Pw411X7h5%2F" target="_blank">https://www.bilibili.com/video/BV1Pw411X7h5/</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1VC4y1Z7KF%2F" target="_blank">https://www.bilibili.com/video/BV1VC4y1Z7KF/</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1Fz4y1F7jf%2F" target="_blank">https://www.bilibili.com/video/BV1Fz4y1F7jf/</a></p><p>紅蓮嚐鮮版十七支持枚舉，即常量表，不可以修改，通過初始化數據構建，內存數據模式。用枚舉，只需將其頁籤設置為 Enum 起頭即可，其他設置和 Domain 完全相同，生成的枚舉只包含讀取功能。注意，登錄模塊的 User,Role 和 Privilege 都不可以設置為枚舉。紅蓮嚐鮮版十六優化了模塊結構，main.rs 只包含入口點和最低限度的其他程序，其他模塊都放在 lib.rs 裏，前端代碼生成器的默認圖片位置改到 static 目錄下，方便 vue 前端的構建。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">代碼生成器的項目地址：<a href="https://gitee.com/jerryshensjf/Lotus">https://gitee.com/jerryshensjf/Lotus</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">二進制 war 包的下載地址:<span>&nbsp;</span><a href="https://gitee.com/jerryshensjf/Lotus/attach_files">https://gitee.com/jerryshensjf/Lotus/attach_files</a></p><h1>Rust 通用代碼生成器：蓮花</h1><h3>介紹</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Rust 通用代碼生成器：蓮花</p><h3>軟件架構説明</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">軟件使用 Java 寫成，部署在 Tomcat 9 的 webapps 目錄中。目前的版本採用 openjdk 17 編譯。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">本軟件是從 Go 語言通用代碼生成器：仙童改寫而來。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">代碼生成物是 rust 1.69 環境。採用 Axum 0.6.20, tokio 1.32.0 , sqlx 0.7.1 數據庫訪問層和 MariaDB, MySQL 8，PostgreSQL 數據庫。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Rust 通用代碼生成器蓮花嚐鮮版十七。此版本是深度修復版，修復規範了下拉列表的空值。前端項目和後端項目經過了更嚴密的測試。此版本支持 MariaDB，MySQL，PostgreSQL 和 Oracle 四種數據庫。此版本支持枚舉和 datadummy 模式。請部署在 Tomcat9 的 webapps 目錄下。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Rust 通用代碼生成器蓮花嚐鮮版十六。此版本是深度修復版，修復了高級定製功能羣，自動生成差異版本功能羣，動詞否定功能羣和字段否定功能羣裏的一系列缺陷，並有其他缺陷修復。此版本支持 MariaDB，MySQL，PostgreSQL 和 Oracle 四種數據庫。此版本支持枚舉和 datadummy 模式。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Rust 通用代碼生成器蓮花嚐鮮版十五。此版本是測試修復版，沒有新功能，修復了嚐鮮版十四的 DataDummy 功能。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Rust 通用代碼生成器蓮花嚐鮮版十四。此版本是測試修復版，沒有新功能，都是嚐鮮版十二的功能，但有錯誤修復。修復 Oracle 數據庫，datadummy 模式和枚舉。此版本支持 MariaDB，MySQL，PostgreSQL 和 Oracle 四種數據庫。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Rust 通用代碼生成器蓮花嚐鮮版十二。此版本支持 Oracle 數據庫。此版本支持 MariaDB，MySQL，PostgreSQL 和 Oracle 四種數據庫。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Rust 通用代碼生成器蓮花嚐鮮版十一。此版本是一個修復增強版本，此版本完善了 DataDummy 模式，並完善了枚舉的使用。並修復了數據庫模式的腳本缺陷。暫不支持 Oracle 數據庫。歡迎使用純內存數據模式的原型功能，此功能為售前和產品經理開發，歡迎使用。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Rust 通用代碼生成器蓮花嚐鮮版十。此版本支持 DataDummy 模式，即純內存數據模式的原型功能，為售前和產品經理開發。支持枚舉，優化了模塊結構，main.rs 只包含入口點和最低限度的其他程序，其他模塊都放在 lib.rs 裏，前端代碼生成器的默認圖片位置改到 static 目錄下，方便 vue 前端的構建。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Rust 通用代碼生成器蓮花嚐鮮版九。此版本更新 Axum 至最新版 0.6.20,改進了前端登錄失敗的錯誤提示，去除了後端運行時在控制枱上輸出的調試信息。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Rust 通用代碼生成器蓮花嚐鮮版八已發佈。此版本更新 JQuery EasyUI 至最新版 1.10.17。此版本解決了編譯警告問題。支持日期與日期時間的空值。修復了嚐鮮版七過度更新引起的後端編輯不支持更新圖片的缺陷。和其他一些缺陷。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Rust 通用代碼生成器蓮花已發佈紅蓮嚐鮮版七，這是迄今為止最重要的里程碑。最重要的更新是數據庫訪問框架從 0.3.5 大幅更新至 0.7.1 最新版。這是一個重大的更新，嘗試了幾次才順利完成了這個規劃了很久的更新。第二個更新是消除了代碼生成物上 90% 的編譯警告，大幅改善了代碼生成物的代碼質量。而後通過更多的測試，修復了一系列缺陷。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Rust 通用代碼生成器蓮花嚐鮮版六。此版本支持日期與日期時間，支持三大部分生成功能羣。支持自動登錄模塊，支持修改自己的資料和登陸密碼。修復了嚐鮮版五的克隆和批克隆出錯問題，修復了嚐鮮版五編輯用户會導緻密碼失效問題。和其他一些缺陷。暫不支持 Oracle 數據庫，暫不支持空值。功能對標 java 通用代碼生成器光電音之王版本。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Rust 通用代碼生成器蓮花嚐鮮版 5。此版本是第一個功能完整的可用版本，支持自動登錄模塊，支持 Axum 最新版 0.6.18,徹底改進了數據庫訪問層，解決了每次查詢新建一個數據庫鏈接，以致只能查詢 10 餘次的重大缺陷，經過更多測試，此版本支持 MariaDB,MySQL 和 PostgreSQL 數據庫。支持所附全部非 Oracle 示例。本版本的功能和質量均達到可用水平。 嚐鮮版 4。通過編程和測試，終於徹底修復了蓮花生成的 Vue 前端。現在，前端和後端可以順暢的工作，沒有任何障礙了。蓮花嚐鮮版 4 除了彈性登錄模塊和 Oracle 數據庫的功能外，其他功能都已完備。大家已經可以試用了。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">蓮花嚐鮮版 3 升級 Axum 至 0.6.6,並消除 2/3 的編譯警告。後續版本有可能將 Axum 重新降級至 0.4。Axum0.6 的粉絲請使用此版本。您可以使用所附非 Oracle 示例測試系統，可以得到可以運行的代碼生成物。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">此版本支持 Go 語言兼容性，即 Go 語言通用代碼生成器仙童的模板直接生成 Rust 代碼生成物。也支持 Java 兼容性，即支持 java 通用代碼生成器光，和平之翼代碼生成器，無垠式代碼生成器的 Excel 模板直接生成 Rust 代碼生成物。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">嚐鮮版 4 支持 Excel,PDF 數據導出。支持 Vue，ElementUI 的獨立前端。支持 MySQL，MariaDB 和 PostgreSQL 數據庫。支持圖片功能。支持所附全部非 Oracle 示例。歡迎試用。</p><h3>百度話題</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">＃通用代碼生成器＃</p><h3>介紹視頻</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">嚐鮮版十七的視頻請見：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1rQ4y1t7qJ%2F">https://www.bilibili.com/video/BV1rQ4y1t7qJ/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">嚐鮮版十六的視頻請見：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1Mw411x7FP%2F">https://www.bilibili.com/video/BV1Mw411x7FP/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">嚐鮮版十五的視頻請見：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1Pw411X7h5%2F">https://www.bilibili.com/video/BV1Pw411X7h5/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1VC4y1Z7KF%2F">https://www.bilibili.com/video/BV1VC4y1Z7KF/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">嚐鮮版十四的視頻請見：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1Fz4y1F7jf%2F">https://www.bilibili.com/video/BV1Fz4y1F7jf/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">嚐鮮版十二的介紹視頻請見：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1MH4y1U7A1%2F">https://www.bilibili.com/video/BV1MH4y1U7A1/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">嚐鮮版十一的介紹視頻請見：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1Qm4y1V77Q%2F">https://www.bilibili.com/video/BV1Qm4y1V77Q/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1Ez4y157k2%2F">https://www.bilibili.com/video/BV1Ez4y157k2/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">嚐鮮版十的介紹視頻請見：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1Fh4y1P7xF%2F">https://www.bilibili.com/video/BV1Fh4y1P7xF/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">嚐鮮版九的介紹視頻請見：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1Hp4y1E7T2%2F">https://www.bilibili.com/video/BV1Hp4y1E7T2/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">嚐鮮版八介紹視頻請見：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1qG411f7io%2F">https://www.bilibili.com/video/BV1qG411f7io/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1yV4y1Y7pM%2F">https://www.bilibili.com/video/BV1yV4y1Y7pM/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">嚐鮮版七介紹視頻請見：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1Kz4y1W7eH%2F">https://www.bilibili.com/video/BV1Kz4y1W7eH/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">嚐鮮版六介紹視頻請見：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1Cj41197nY%2F">https://www.bilibili.com/video/BV1Cj41197nY/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">嚐鮮版五介紹視頻請見：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1Cg4y1574C%2F">https://www.bilibili.com/video/BV1Cg4y1574C/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Rust 通用代碼生成器蓮花嚐鮮版 4 發佈介紹視頻，從源碼開始構建 Rust 通用代碼生成器蓮花。並生成一個例程的前後端並演示運行。 視頻請見：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV11N411c7H6%2F">https://www.bilibili.com/video/BV11N411c7H6/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">嚐鮮版 3</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1co4y1a7Ca%2F">https://www.bilibili.com/video/BV1co4y1a7Ca/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">嚐鮮版 2</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1aj411N7YB%2F">https://www.bilibili.com/video/BV1aj411N7YB/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">冒煙測試版 4</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1jy4y1R79h%2F">https://www.bilibili.com/video/BV1jy4y1R79h/</a></p><h3>嚐鮮版十七下載</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/jerryshensjf/Lotus/attach_files">https://gitee.com/jerryshensjf/Lotus/attach_files</a></p><h3>項目圖片</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="輸入圖片説明" src="https://gitee.com/jerryshensjf/Lotus/raw/master/RedLotus.jpg" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="輸入圖片説明" src="https://gitee.com/jerryshensjf/Lotus/raw/master/pl_3.jpeg" referrerpolicy="no-referrer"></p><h3>軟件截屏</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="輸入圖片説明" src="https://gitee.com/jerryshensjf/Lotus/raw/master/lotus_excelg.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="輸入圖片説明" src="https://gitee.com/jerryshensjf/Lotus/raw/master/lotus_wizard.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="輸入圖片説明" src="https://gitee.com/jerryshensjf/Lotus/raw/master/Lotus_compare2.png" referrerpolicy="no-referrer"></p><h3>代碼生成物截屏</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">日期時間對話框<span>&nbsp;</span><img alt="輸入圖片説明" src="https://gitee.com/jerryshensjf/Lotus/raw/master/datetime.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">單表操作</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="輸入圖片説明" src="https://gitee.com/jerryshensjf/Lotus/raw/master/lotus_grid.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">多對多</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="輸入圖片説明" src="https://gitee.com/jerryshensjf/Lotus/raw/master/rust_mtm.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">複雜版面，樹表</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="輸入圖片説明" src="https://gitee.com/jerryshensjf/Lotus/raw/master/lotus_treegrid.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">圖形報表</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="輸入圖片説明" src="https://gitee.com/jerryshensjf/Lotus/raw/master/lotus_echarts.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">圖片功能</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="輸入圖片説明" src="https://gitee.com/jerryshensjf/Lotus/raw/master/lotus_pic.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Excel 數據導出</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="輸入圖片説明" src="https://gitee.com/jerryshensjf/Lotus/raw/master/Lotus_excel_export.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">PDF 數據導出</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="輸入圖片説明" src="https://gitee.com/jerryshensjf/Lotus/raw/master/Lotus_pdf_export.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Vue 前端日期對話框</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="輸入圖片説明" src="https://gitee.com/jerryshensjf/Lotus/raw/master/front_date.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Vue 獨立前端，登錄界面</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="輸入圖片説明" src="https://gitee.com/jerryshensjf/Lotus/raw/master/Lotus_frontend_login.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Vue 獨立前端，內頁</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="輸入圖片説明" src="https://gitee.com/jerryshensjf/Lotus/raw/master/Lotus_frontend_inner.png" referrerpolicy="no-referrer"></p><h3>源碼編譯用户指南</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">通用代碼生成器已經支持自己編譯源碼，我已把原來缺的前端代碼生成器的 jar 包上傳。支持大家自行編譯源碼。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">需要注意的是，現在我的開發平台是 Fedora 37 上的 openjdk 17。所以大家編譯源碼最好使用 openjdk17。編譯好的 war 包運行在 apache tomcat 9.0 上。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">已有 jdk8 的用户報告默認下載的代碼生成器 war 包在他的平台上無法運行。您如果遇到類似問題請報告。我的電子郵件是：<a href="https://www.oschina.net/action/GoToLink?url=mailto%3Ajerry_shen_sjf%40qq.com" target="_blank">jerry_shen_sjf@qq.com</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">附 openjdk 17 下載地址：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fjdk.java.net%2Fjava-se-ri%2F17">https://jdk.java.net/java-se-ri/17</a></p><h3>源碼研讀者注意事項</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">無垠式代碼生成器第一個完整版本源碼，有興趣可以抄寫一下：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/jerryshensjf/InfinityGPGenerator_0_6_5">https://gitee.com/jerryshensjf/InfinityGPGenerator_0_6_5</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">相關技術視頻：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1fX4y1u7Bn%2F">https://www.bilibili.com/video/BV1fX4y1u7Bn/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1rv41187qY%2F">https://www.bilibili.com/video/BV1rv41187qY/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1xv41187cA%2F">https://www.bilibili.com/video/BV1xv41187cA/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1t64y1v7WA%2F">https://www.bilibili.com/video/BV1t64y1v7WA/</a></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 15 Nov 2023 07:30:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266749</guid>
            <link>https://www.oschina.net/news/266749</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[前端開源項目 Fes- Design Release v0.8.16 & v0.8.15 發佈]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">FES-Design 是由微眾銀行前端技術團隊聯合用户體驗設計團隊共同打造的一款服務於中後台系統的組件庫，其初衷是為了給中後台系統開發者提供一個好用的前端應用解決方案，前端技術團隊始終以 「快速、簡單、穩定」 為核心理念，推動 FES-Design 的成長，FES-Design 的設計體系目前還在不斷的探索中，希望今後能夠通過更多的積累為用户提供一款更優秀更專業的企業級產品設計體系。</p><p>v0.8.16 更新內容如下：</p><h4><strong>Features</strong></h4><ul><li>新增日曆組件 (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FWeBankFinTech%2Ffes-design%2Fissues%2F509" target="_blank">#509</a>) (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FWeBankFinTech%2Ffes-design%2Fcommit%2Ff890b05993e99ffedfb4063bf896320b02f3c2d9" target="_blank">f890b05</a>)</li><li><strong>Cascader:</strong><span>&nbsp;</span>支持本地數據項搜索 (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FWeBankFinTech%2Ffes-design%2Fissues%2F511" target="_blank">#511</a>) (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FWeBankFinTech%2Ffes-design%2Fcommit%2F4993058c8a89fe15abff11a66b0bfe48f9654965" target="_blank">4993058</a>)</li></ul><p>v0.8.15 更新內容如下：</p><h4 style="margin-left:0px; margin-right:0px; text-align:start"><strong>Bug Fixes</strong></h4><ul style="list-style-type:disc; margin-left:0; margin-right:0"><li>checkbox 和 radio 支持 option 為 null &amp; option 類型修復 (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FWeBankFinTech%2Ffes-design%2Fissues%2F510" target="_blank">#510</a>) (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FWeBankFinTech%2Ffes-design%2Fcommit%2F463ac71015de05b09a1eeceabed3d4d742a91971" target="_blank">463ac71</a>)</li><li><strong>select:</strong><span>&nbsp;</span>Option 組件沒有配置 value 默認為      &amp; Foption 無需處理 valueField 和 labelField (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FWeBankFinTech%2Ffes-design%2Fissues%2F512" target="_blank">#512</a>) (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FWeBankFinTech%2Ffes-design%2Fcommit%2F5e803f45c0a122409e2ce28bfb7c2817371edc4b" target="_blank">5e803f4</a>)</li></ul></div>
                                    ]]>
            </description>
            <pubDate>Wed, 15 Nov 2023 06:53:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266739/fes-design-0-8-16-released</guid>
            <link>https://www.oschina.net/news/266739/fes-design-0-8-16-released</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Node.js 21.2.0 發佈]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">Node.js 是能夠在服務器端運行 JavaScript 的開放源代碼、跨平台 JavaScript 運行環境，採用 Google 開發的 V8 運行代碼，使用事件驅動、非阻塞和異步輸入輸出模型等技術來提高性能。</span></p><p>Node.js 21.2.0 現已發佈，具體更新內容如下：</p><p style="color:#000000; margin-left:0; margin-right:0; text-align:start"><strong>顯著變化</strong></p><ul><li>[&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnodejs%2Fnode%2Fcommit%2Fe25c65ee2f" target="_blank"><code>e25c65ee2f</code></a>] -&nbsp;<strong>doc</strong>&nbsp;: 將 MrJithil 添加到&nbsp;<span style="background-color:#ffffff; color:#333333">collaborators</span>&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnodejs%2Fnode%2Fpull%2F50666" target="_blank">#50666</a></li><li>[&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnodejs%2Fnode%2Fcommit%2Ff2366573f9" target="_blank"><code>f2366573f9</code></a>] -&nbsp;<strong>doc</strong>：添加 Ethan-Arrowood 作為&nbsp;<span style="background-color:#ffffff; color:#333333">collaborator</span>&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnodejs%2Fnode%2Fpull%2F50393" target="_blank">#50393</a></li><li>[&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnodejs%2Fnode%2Fcommit%2Feac9cc5fcb" target="_blank"><code>eac9cc5fcb</code></a>] -&nbsp;<strong>(SEMVER-MINOR)&nbsp;</strong><strong>esm</strong>&nbsp;: 添加 import.meta.dirname 和 import.meta.filename (James Sumners)&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnodejs%2Fnode%2Fpull%2F48740" target="_blank">#48740</a></li><li>[&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnodejs%2Fnode%2Fcommit%2F7e151114b1" target="_blank"><code>7e151114b1</code></a>] -&nbsp;<strong>fs</strong>&nbsp;: 將 stacktrace 添加到 fs/promises&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnodejs%2Fnode%2Fpull%2F49849" target="_blank">#49849</a></li><li>[&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnodejs%2Fnode%2Fcommit%2F6dbb280733" target="_blank"><code>6dbb280733</code></a>] -&nbsp;<strong>(SEMVER-MINOR)&nbsp;</strong><strong>lib</strong>&nbsp;: 添加<code>--no-experimental-global-navigator</code>CLI flag&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnodejs%2Fnode%2Fpull%2F50562" target="_blank">#50562</a></li><li>[&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnodejs%2Fnode%2Fcommit%2F03c730b931" target="_blank"><code>03c730b931</code></a>] -&nbsp;<strong>(SEMVER-MINOR)&nbsp;</strong><strong>lib</strong>&nbsp;: 添加 navigator.language 和 navigator.languages&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnodejs%2Fnode%2Fpull%2F50303" target="_blank">#50303</a></li><li>[&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnodejs%2Fnode%2Fcommit%2Ff932f4c518" target="_blank"><code>f932f4c518</code></a>] -&nbsp;<strong>(SEMVER-MINOR)&nbsp;</strong><strong>lib</strong>&nbsp;: 添加 navigator.platform&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnodejs%2Fnode%2Fpull%2F50385" target="_blank">#50385</a></li><li>[&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnodejs%2Fnode%2Fcommit%2F91f37d1dc3" target="_blank"><code>91f37d1dc3</code></a>] -&nbsp;<strong>(SEMVER-MINOR) stream</strong>：為 webstreams 壓縮添加<code>deflate-raw</code>格式支持&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnodejs%2Fnode%2Fpull%2F50097" target="_blank">#50097</a></li><li>[&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnodejs%2Fnode%2Fcommit%2F65850a67c7" target="_blank"><code>65850a67c7</code></a>] -<strong></strong><strong>stream</strong>：為可讀緩衝區使用數組&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnodejs%2Fnode%2Fpull%2F50341" target="_blank">#50341</a></li><li>[&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnodejs%2Fnode%2Fcommit%2Fe433fa54b7" target="_blank"><code>e433fa54b7</code></a>] -<strong>stream</strong>：優化創建&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnodejs%2Fnode%2Fpull%2F50337" target="_blank">#50337</a></li><li>[&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnodejs%2Fnode%2Fcommit%2Fc9b92bba58" target="_blank"><code>c9b92bba58</code></a>] -&nbsp;<strong>(SEMVER-MINOR)&nbsp;</strong><strong>test_runner</strong>&nbsp;: 添加內置 lcov 報告器&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnodejs%2Fnode%2Fpull%2F50018" target="_blank">#50018</a></li><li>[&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnodejs%2Fnode%2Fcommit%2Ff6c496563e" target="_blank"><code>f6c496563e</code></a>] -&nbsp;<strong>(SEMVER-MINOR)&nbsp;</strong><strong>test_runner</strong>：將&nbsp;Date 添加到支持的模擬 API (Lucas Santos)&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnodejs%2Fnode%2Fpull%2F48638" target="_blank">#48638</a></li><li>[&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnodejs%2Fnode%2Fcommit%2F05e8b6ef20" target="_blank"><code>05e8b6ef20</code></a>] -&nbsp;<strong>(SEMVER-MINOR)&nbsp;</strong><strong>test_runner, cli</strong>&nbsp;: 添加 --test-timeout flag&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnodejs%2Fnode%2Fpull%2F50443" target="_blank">#50443</a></li></ul><p>更多詳情可<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnodejs.org%2Fen%2Fblog%2Frelease%2Fv21.2.0" target="_blank">查看發佈公告</a><span style="background-color:#ffffff; color:#333333">。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 15 Nov 2023 06:03:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266722/nodejs-21-2-0-released</guid>
            <link>https://www.oschina.net/news/266722/nodejs-21-2-0-released</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[BifroMQ-v2.0.0 版本重磅發佈：支持標準集羣模式（StandardCluster）]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="margin-left:0px; margin-right:0px">2023 年 7 月，百度天工 AIoT 團隊正式開源高性能分佈式 MQTT 物聯網消息中間件，並將其全新命名為 BifroMQ。自 BifroMQ 首個版本發佈以來，獲得海量社區的廣泛關注，其中，BifroMQ 的集羣能力一直備受期待。</p><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="margin-left:0; margin-right:0">通過近三個月的不懈努力，如今正式推出 BifroMQ-v2.0.0 版本，新版本首次支持集羣模式，我們將其稱為標準集羣 StandardCluster（以下簡稱 StandardCluster）。新版本主要有以下特性：</p><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="margin-left:0; margin-right:0">🌍 集羣模式全面支持 MQTT 協議：在集羣模式下，每個節點均具備完整的 MQTT 協議功能，提供更高的可用性和擴展性。</p><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="margin-left:0; margin-right:0">🌍&nbsp;新增 HTTP API 支持：除 MQTT 外，本版本新增對 HTTP API 的支持，更加靈活多變。</p><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="margin-left:0; margin-right:0">🚀 高性能不減：專注於在大規模負載環境下的高性能 MQTT 協議。</p><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="margin-left:0; margin-right:0">🛠️ 模塊化架構進一步優化：適應各種業務需求的分佈式集羣管理。</p><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="margin-left:0; margin-right:0">📊 強力可擴展性：目標支持大規模多租户的 Serverless 雲服務。</p><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="margin-left:0; margin-right:0">詳情介紹，繼續閲讀</p><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="margin-left:0; margin-right:0"><span><strong>BifroMQ 的集羣架構解析</strong></span></p><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="margin-left:0; margin-right:0"><span style="color:#3498db"><strong>▌StandardCluster 的整體結構</strong></span></p><p style="margin-left:0; margin-right:0">在過往介紹 BifroMQ 整體架構的文章（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbifromq.io%2Fzh-Hans%2Fblog%2Fbifromq-tech-architecture%2F" target="_blank">https://bifromq.io/zh-Hans/blog/bifromq-tech-architecture/</a>）中，曾提到 BifroMQ 將邏輯上的 MQTT 功能從負載的角度分解為若干子服務，每個子服務對應一類關鍵負載：</p><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="margin-left:0; margin-right:0"><span style="color:#3e3e3e">·bifromq-mqtt：負責 MQTT 協議連接負載</span></p><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="margin-left:0; margin-right:0"><span style="color:#3e3e3e">·bifromq-dist：負責訂閲和消息路由分發負載</span></p><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="margin-left:0; margin-right:0"><span style="color:#3e3e3e">·bifromq-inbox：負責持久會話中的離線消息隊列負載</span></p><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="margin-left:0; margin-right:0"><span style="color:#3e3e3e">·bifromq-retain：負責 Retain 消息存取負載</span></p><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="margin-left:0; margin-right:0">從部署的角度出發，BifroMQ StandardCluster 是將這些獨立負載的服務模塊"封裝"到一個節點服務進程的集羣模式，從邏輯上來説，此為 Standalone 運行模式的抽象（BifroMQ Standalone 可以看作是單個節點的 BifroMQ StandardCluster）。與其他支持集羣的 MQTT Broker 不同，BifroMQ 內置分佈式持久化功能，因此單個 BifroMQ 節點是"有狀態的"（Stateful）。</p><p style="margin-left:0px; margin-right:0px; text-align:center"><img alt="" height="400" src="https://oscimg.oschina.net/oscnet/up-6d871c8ad8353d28f90b010ef0e2e4b0a09.png" width="792" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px; text-align:center">▲ 標準集羣的整體結構</p><p style="margin-left:0; margin-right:0; text-align:justify">注：本文所有插圖中括號內的﻿bifromq-xxx﻿，即為代碼中對應的模塊名稱</p><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="margin-left:0; margin-right:0"><span style="color:#3498db"><strong>▌消息分發能力的水平擴展</strong></span></p><p style="margin-left:0; margin-right:0">在 StandardCluster 集羣模式下，每個節點進程內的分發負載模塊（ 以下簡稱 Dist Service ）構成邏輯上的負載子集羣（Dist-SubCluster）。Dist Service 將訂閲信息存儲在內置的持久化引擎中，並通過持久化引擎的分佈式功能在節點之間同步路由信息。在 StandardCluster 模式下，通過增加節點的方式，即可以實現消息分發能力的水平擴展，特別是在 CleanSession 為 True 的情況下，這一點非常明顯，詳見官網測試報告。</p><p style="margin-left:0px; margin-right:0px; text-align:center"><img alt="" height="400" src="https://oscimg.oschina.net/oscnet/up-42840b4de22478548ca6934ee24df62ec21.png" width="792" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px; text-align:center">▲ bifromq-dist 結構</p><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="margin-left:0; margin-right:0"><span style="color:#3498db"><strong>▌離線消息隊列的持久化、擴展性及高可靠性</strong></span></p><p style="margin-left:0; margin-right:0">與 Dist Service 模塊類似，節點進程內負責 MQTT 持久會話中離線消息隊列的 Inbox Service 模塊構成了另一個邏輯上的負載子集羣（以下簡稱 Inbox-SubCluster）。Inbox Service 將離線隊列消息持久化到內置的存儲引擎中，可以極大程度地減少因節點故障導致的數據丟失。在存儲方面，Inbox Service 利用內置存儲引擎的分片功能，在實現存儲規模和處理能力水平擴展的同時，通過靜態配置或運行時策略動態增加分片的副本數，可以進一步提高離線消息數據的可靠性，這對某些對數據可靠性要求更高的應用場景尤為重要。</p><p style="margin-left:0px; margin-right:0px; text-align:center"><img alt="" height="400" src="https://oscimg.oschina.net/oscnet/up-a071612e0fe715b733bad98bb4ca1353b8d.png" width="792" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px; text-align:center">▲ bifromq-inbox 結構</p><p style="margin-left:0; margin-right:0; text-align:justify">注 1：由於增加分片副本數對 MQTT CleanSession 為 False 的消息負載有不可忽視的影響，需要根據實際需求確定資源投入以達到預期效果。因此，默認副本數為 1，該設置可以通過 JVM 啓動參數&nbsp;﻿inbox_store_range_voter_count﻿&nbsp;進行調整</p><p style="margin-left:0; margin-right:0; text-align:justify">注 2：Inbox Service 提供了離線消息隊列的全局訪問能力，因此 MQTT 客户端重新連接到任何集羣節點時都可以訪問所屬隊列中的離線消息，無需引入在其他 MQTT Broker 集羣實現中常見的 sticky session 或 session migration 方案</p><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="margin-left:0; margin-right:0"><span style="color:#3498db"><strong>▌</strong><strong>Inbox 服務的基於負載的拆分策略</strong></span></p><p style="margin-left:0; margin-right:0">如前文所述，在 StandardCluster 部署下，單個節點進程內的 Inbox Service 利用了內置存儲引擎的分片功能來實現存儲規模和處理能力的水平擴展。然而，分片策略對實際運行效果有着決定性的影響。在 BifroMQ StandardCluster 版本中，已內置開箱即用的基於負載的拆分策略（以下簡稱 Load-based Splitting）。該策略通過統計最近一段時間內的負載情況來決定對 KV Range 的劃分，可以視為一種"後驗"拆分策略。當使用場景已經對離線消息負載的分佈有提前規劃和了解時，提前劃分 Range 往往能在負載到來時帶來更穩定的性能表現，而對於深度使用 BifroMQ 的用户，可以通過 SPI 機制實現此類"先驗"拆分策略。</p><p style="margin-left:0px; margin-right:0px; text-align:center"><img alt="" height="600" src="https://oscimg.oschina.net/oscnet/up-46576e818cdeb9a1b9aafe883169c0428aa.png" width="400" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px; text-align:center">▲inbox 服務拆分策略</p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify">&nbsp;</p><p style="margin-left:0; margin-right:0"><span style="color:#3498db"><strong>▌</strong><strong>HTTP API 模塊</strong></span></p><p style="margin-left:0; margin-right:0">BifroMQ StandardCluster 版本同時引入了 HTTP API 功能，每個集羣節點均可通過配置開放 API 訪問端口。BifroMQ HTTP API 作為無狀態的全局接口，旨在支持業務層面的管理控制邏輯集成，訪問任何一個節點的 API 都可以實現對整個集羣的操作，詳見官網 API 使用指南</p><p style="margin-left:0; margin-right:0; text-align:center"><img alt="" height="400" src="https://oscimg.oschina.net/oscnet/up-d65f5da4462a78d93bd53c50c1b80d118c8.png" width="792" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px; text-align:center">▲HTTP API 模塊結構</p><p style="margin-left:0px; margin-right:0px; text-align:center">&nbsp;</p><p style="margin-left:0; margin-right:0"><span><strong>混合負載對性能的影響</strong></span></p><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="margin-left:0; margin-right:0; text-align:justify"><span style="color:#3e3e3e">在 StandardCluster 部署下，單個節點具備完整的 MQTT 協議功能，承擔各種類型的負載。因此，這種模式非常適用於以下兩類企業級應用場景：</span></p><p style="margin-left:0; margin-right:0; text-align:justify">&nbsp;</p><p style="margin-left:0; margin-right:0; text-align:justify"><span style="color:#3e3e3e">·業務產生的負載類型相對單一</span></p><p style="margin-left:0; margin-right:0; text-align:justify">&nbsp;</p><p style="margin-left:0; margin-right:0; text-align:justify"><span style="color:#3e3e3e">·</span><span style="color:#3e3e3e">業務產生的負載類型多元化，但產生時間相對分散。對於負載形式複雜且在時間維度上有集中產生的情況，我們建議用户通過模擬負載測試來獲得單個 BifroMQ StandardCluster 集羣下的最佳資源配置和參數設置，或者考慮使用多個 BifroMQ StandardCluster 來承載不同類型的業務負載。另外，您還可以與我們聯繫，獲取 BifroMQ 商業版本的獨立負載集羣支持。</span></p><p style="margin-left:0; margin-right:0; text-align:justify">&nbsp;</p><p style="margin-left:0; margin-right:0"><span><strong>簡單部署和簡化運維</strong></span></p><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="margin-left:0; margin-right:0">在以往 BifroMQ 技術架構文章中，曾提及 BifroMQ 集羣建立在一套內置的去中心化技術之上（base-cluster），無需依賴外部節點註冊和發現服務。因此，構建 BifroMQ StandardCluster 的部署過程非常簡單，只需指定任何一個集羣中的節點作為種子節點，即可完成新節點的加入。此外，BifroMQ 還內置了集羣分裂後的自愈能力，可以極大地簡化出現網絡分區（Network Partition）等故障時的運維操作。</p><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="margin-left:0; margin-right:0"><span><strong>相關鏈接</strong></span></p><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="margin-left:0; margin-right:0">·BifroMQ 官網（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbifromq.io%2F" target="_blank">https://bifromq.io/</a>）</p><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="margin-left:0; margin-right:0">·安裝包地址（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fbaidu%2Fbifromq%2Freleases%2Ftag%2Fv2.0.0" target="_blank">https://github.com/baidu/bifromq/releases/tag/v2.0.0</a>）</p><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="margin-left:0; margin-right:0">·部署指南（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbifromq.io%2Fzh-Hans%2Fdocs%2F2.0.0%2Fdeploy%2Fcluster%2F" target="_blank">https://bifromq.io/zh-Hans/docs/2.0.0/deploy/cluster/</a>）</p><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="margin-left:0; margin-right:0"><span><strong>未來展望</strong></span></p><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="margin-left:0; margin-right:0">BifroMQ 團隊一直秉持技術中立理念，致力於大規模實現 MQTT 協議，從而提高可靠性和可維護性。我們期待更多社區參與和深入使用反饋，共同推動這一技術的成熟。此外，您還可以通過掃描下方二維碼加入開發者交流社區，與廣大同行進行交流學習。</p><p style="margin-left:0px; margin-right:0px; text-align:center"><img alt="" height="250" src="https://oscimg.oschina.net/oscnet/up-87a63b79b2a9bc4215a5e13869541f206e1.png" width="450" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 15 Nov 2023 04:57:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266713</guid>
            <link>https://www.oschina.net/news/266713</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[IntelliJ IDEA 2023.3 Beta 2]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>IntelliJ IDEA 2023.3 <u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.jetbrains.com%2Fidea%2F2023%2F11%2Fintellij-idea-2023-3-beta-2%2F" target="_blank">發佈</a></u>了第 2 個 Beta 版本。本次發佈公告主要介紹了針對 Web 開發的改進。</p><ul><li><strong>改進 TypeScript 開發體驗</strong></li></ul><p>IntelliJ IDEA 2023.3 Beta 2 通過添加導入類型語句解決了部分不一致問題。團隊稱他們添加了選項來配置導入類型時 TypeScript 導入類型語句或類型説明符的使用。此外還改進了 TypeScript 文件的 package.json 導出字段的行為。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-0ca4c2afce7c0bbe1e04f429f35765fa855.png" referrerpolicy="no-referrer"></p><ul><li><strong>面向 Vue 3 的優化</strong></li></ul><p>支持 DefineSlots，提供針對 slot 名稱的補全和導航，以及命名重構。此外還通過 DefineExpose 引入了對屬性的補全支持。在 IntelliJ IDEA Ultimate 2023.3 中，將根據 DefineOptions 函數指定的名稱添加所需的組件導入。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-d2a11470b9b9f3df6a7490a3f31191ffa45.png" referrerpolicy="no-referrer"></p><ul><li><strong>改進對 Angular 的支持</strong></li></ul><p>改進了對 Angular 模板中<em>嚴格模板類型 (strict template type) </em>檢查的支持，支持 v17 和 Signals 的新控制流語法。</p><p><img src="https://static.oschina.net/uploads/space/2023/1116/112148_bJsn_2720166.gif" referrerpolicy="no-referrer"></p><p><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.jetbrains.com%2Fidea%2F2023%2F11%2Fintellij-idea-2023-3-beta-2%2F" target="_blank">詳情</a></u>。</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 15 Nov 2023 03:28:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266699/intellij-idea-2023-3-beta-2</guid>
            <link>https://www.oschina.net/news/266699/intellij-idea-2023-3-beta-2</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Spug v3.3.0 已經發布，運維管理系統]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Spug v3.3.0 已經發布，運維管理系統</p><p>此版本更新內容包括：</p><h3>新增功能及改進</h3><ul><li>集成了推送助手，提供監控和任務的短信、電話告警支持 <a href="https://gitee.com/link?target=https%3A%2F%2Fpush.spug.cc%2Fguide%2Fspug" target="_blank">參考文檔</a></li><li>修復主機列表彈框某些情況下未顯示主機信息的問題 by @allwaysLove</li></ul><p>詳情查看：<a href="https://gitee.com/openspug/spug/releases/v3.3.0">https://gitee.com/openspug/spug/releases/v3.3.0</a></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 15 Nov 2023 03:03:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266693/spug-3-3-0-released</guid>
            <link>https://www.oschina.net/news/266693/spug-3-3-0-released</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
    </channel>
</rss>
