<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[開源中國-軟件更新資訊]]>
        </title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="https://rsshub.app/oschina/news/project" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[開源中國-軟件更新資訊 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Sat, 04 Nov 2023 14:50:38 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[遊戲引擎 Godot 4.1.3 發佈]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">Godot 4.1.3 現已<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgodotengine.org%2Farticle%2Fmaintenance-release-godot-4-1-3%2F" target="_blank">發佈</a>，共有 76 位貢獻者提出了 128 項 pull-request（或 133 次 commits）。Godot 是一個非營利性的開源遊戲引擎，由數百名貢獻者利用業餘時間開發，也有少數兼職或全職開發人員受僱於 Godot 社區的捐助。</span></p><p><span style="color:#000000"><img alt="" height="281" src="https://oscimg.oschina.net/oscnet/up-e95b46d9d794618d76ef3887eeade7270b9.webp" width="500" referrerpolicy="no-referrer"></span></p><p><span style="color:#000000">v4.1.3 是&nbsp;Godot 4.1 的第三個維護版本，包含了許多針對渲染系統的修復，解決了所有渲染後端、光照貼圖和體素全局照明系統以及 GPU 粒子中的問題。編輯器 UI 和引擎 GUI 系統中的各種問題已得到解決，輸入團隊改進了控制器支持並解決了 Android 平台特有的幾個問題。</span></p><p><span style="color:#000000">此外還添加了一個重要的修復程序，以改進對 Android 14 的支持，並修復了其他目標平台上的各種錯誤。以及糾正了一些文檔錯誤，並且為<code class="language-plaintext">RenderingDevice</code>class 提供了新的文檔。</span></p><p>截至目前，與之前的 Godot 4.1.x 版本沒有已知的不兼容性。官方鼓勵所有用户升級到 4.1.3。</p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgodotengine.org%2Fdownload%2F" target="_blank"><strong>立即下載 Godot 4.1.3</strong></a>或嘗試<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Feditor.godotengine.org%2F4.1.3.stable%2F" target="_blank">在線版本的 Godot 編輯器</a>。</p><p>更多詳情可查看官方公告。</p><p><strong>相關閲讀：</strong></p><ul><li><a href="https://www.oschina.net/news/258085/godot-developer-fund" target="_blank">遊戲引擎項目 Godot 成立開發基金</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Sat, 04 Nov 2023 02:09:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264867/godot-4-1-3-released</guid>
            <link>https://www.oschina.net/news/264867/godot-4-1-3-released</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Bun 1.0.8 版本發佈：優化內存使用，增強測試功能，修復眾多 bug]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#374151; margin-left:0; margin-right:0; text-align:start"><span style="background-color:#f9fafb; color:#374151">集成了 JavaScript 運行時、打包器、轉譯器和包管理器於一身</span>的 Bun 發佈了 1.0.8 版本。在這次更新中，Bun 團隊修復了 138 個錯誤，並獲得了 257 個來自社區的👍。這不僅體現了 Bun 團隊對社區需求的重視，也展示了 Bun 作為一個開源項目的活躍和健康發展態勢。</p><p style="color:#374151; margin-left:0; margin-right:0; text-align:start">值得一提的是，Bun 1.0.8 版本在<code>require()</code>函數的內存使用上做出了顯著優化，減少了高達 30% 的內存佔用。這一改進源於 Bun 內置模塊從 ESM 轉為 CommonJS 時引入的內存泄漏問題的解決，以及對大文件 JavaScript 解析器的性能優化。通過這樣的技術調整，Bun 不僅提升了性能，也減輕了開發者在構建大型應用時的內存壓力。</p><p style="color:#374151; margin-left:0; margin-right:0; text-align:start">此外，<code>bun test</code>新增了模塊模擬功能，這使得開發者可以在運行時（而非構建時）更新現有導入，進而模擬 ESM 和 CJS 模塊。這一特性的加入，無疑增強了 Bun 在單元測試方面的能力，為開發者提供了更多的靈活性和控制力。</p><p style="color:#374151; margin-left:0; margin-right:0; text-align:start">在包管理方面，<code>bun install</code>的 bug 修復同樣值得關注。之前版本中，即使一個 peer 依賴已經安裝，<code>bun install</code>也會解析到最新版本，這可能會導致安裝重複版本的包，增加<code>node_modules</code>的大小，並可能引起衝突。Bun 1.0.8 版本優雅地解決了這一問題，減少了冗餘和潛在的版本衝突。</p><p style="color:#374151; margin-left:0; margin-right:0; text-align:start">除此之外，Bun 1.0.8 還修復了一系列的運行時錯誤和兼容性問題，如<code>Bun.spawn</code>在 Google Cloud、Vercel 和舊版 Linux 內核上的問題，以及 macOS 上<code>Bun.spawn</code>偶爾無法檢測到進程退出的問題。這些修復不僅提升了 Bun 的穩定性，也擴展了其在不同環境下的適用性。</p><p style="color:#374151; margin-left:0; margin-right:0; text-align:start">在細節上，Bun 團隊也展示了對質量的嚴格把控，例如修復了<code>process.stdin</code>未發送<code>close</code>事件的問題，調整了<code>setTimeout(cb, 0)</code>的行為以符合 Node.js 和瀏覽器的標準，以及修復了<code>server.requestIP</code>偶爾返回錯誤 IP 地址的問題。</p><p style="color:#374151; margin-left:0; margin-right:0; text-align:start">總的來説，Bun 1.0.8 版本的發佈，不僅是對已有功能的增強和錯誤的修復，更是對開發者體驗的一次全面提升。隨着 Bun 的不斷進化，我們有理由相信，它將繼續在開發者工具的領域中扮演着越來越重要的角色。</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 02 Nov 2023 05:49:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264889/bun-1-0-8-released</guid>
            <link>https://www.oschina.net/news/264889/bun-1-0-8-released</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[【店滴雲】完全開放茶室棋牌室代碼，不加密]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>開放茶室棋牌室所有代碼</p><p><strong>不加密</strong></p><p><strong>不加密</strong></p><p><strong>不加密</strong></p><p>插件路徑：addons/diandi_tea</p><p>uniapp 代碼路徑：addons/diandi_tea/uni-app</p><p>系統安裝後，就可以使用，uniapp 需要在 hbuilder 裏面運行到小程序</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 02 Nov 2023 04:37:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264885/ddiot-updated</guid>
            <link>https://www.oschina.net/news/264885/ddiot-updated</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[TypeScript 5.3 RC 發佈]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>TypeScript 5.3 RC 版本現已發佈。可以通過 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.nuget.org%2Fpackages%2FMicrosoft.TypeScript.MSBuild" target="_blank">NuGet</a> 獲取，或通過 npm 使用以下命令獲取：</p><pre><code>npm install -D typescript@rc
</code></pre><p><strong>TypeScript 5.3 中的新特性包括：</strong></p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdevblogs.microsoft.com%2Ftypescript%2Fannouncing-typescript-5-3-rc%2F%23import-attributes" target="_blank">Import Attributes</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdevblogs.microsoft.com%2Ftypescript%2Fannouncing-typescript-5-3-rc%2F%23stable-support-resolution-mode-in-import-types" target="_blank">在 Import Types 中穩定支持<code>resolution-mode</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdevblogs.microsoft.com%2Ftypescript%2Fannouncing-typescript-5-3-rc%2F%23resolution-mode-supported-in-all-module-modes" target="_blank"><code>resolution-mode</code>在所有模塊模式均受支持</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdevblogs.microsoft.com%2Ftypescript%2Fannouncing-typescript-5-3-rc%2F%23switch-true-narrowing" target="_blank"><code>switch (true)</code>Narrowing</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdevblogs.microsoft.com%2Ftypescript%2Fannouncing-typescript-5-3-rc%2F%23narrowing-on-comparisons-to-booleans" target="_blank">Narrowing On Comparisons to Booleans</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdevblogs.microsoft.com%2Ftypescript%2Fannouncing-typescript-5-3-rc%2F%23instanceof-narrowing-through-symbolhasinstance" target="_blank"><code>instanceof</code><span>&nbsp;</span>Narrowing Through<span>&nbsp;</span><code>Symbol.hasInstance</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdevblogs.microsoft.com%2Ftypescript%2Fannouncing-typescript-5-3-rc%2F%23checks-for-super-property-accesses-on-instance-fields" target="_blank">檢查對實例字段的 super 屬性訪問</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdevblogs.microsoft.com%2Ftypescript%2Fannouncing-typescript-5-3-rc%2F%23interactive-inlay-hints-for-types" target="_blank">針對類型的交互式嵌套提示 (Interactive Inlay Hints)</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdevblogs.microsoft.com%2Ftypescript%2Fannouncing-typescript-5-3-rc%2F%23settings-to-prefer-type-auto-imports" target="_blank">Prefer<code>type</code>Auto-Imports 的設置</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdevblogs.microsoft.com%2Ftypescript%2Fannouncing-typescript-5-3-rc%2F%23optimizations-by-skipping-jsdoc-parsing" target="_blank">通過跳過 JSDoc 解析進行優化</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdevblogs.microsoft.com%2Ftypescript%2Fannouncing-typescript-5-3-rc%2F%23optimizations-by-comparing-non-normalized-intersections" target="_blank">通過 Comparing Non-Normalized Intersections 進行優化</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdevblogs.microsoft.com%2Ftypescript%2Fannouncing-typescript-5-3-rc%2F%23consolidation-between-tsserverlibraryjs-and-typescriptjs" target="_blank">合併<code>tsserverlibrary.js</code>和<code>typescript.js</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdevblogs.microsoft.com%2Ftypescript%2Fannouncing-typescript-5-3-rc%2F%23breaking-changes-and-correctness-improvements" target="_blank">Breaking Changes 和 Correctness Improvements</a></li></ul><p><strong>自&nbsp;Beta&nbsp;<span><span><span><span><span style="color:#333333"><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>版以來的新變化有：</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></p><p style="text-align:left">Beta&nbsp;<span><span><span><span><span style="color:#333333"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>版<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdevblogs.microsoft.com%2Ftypescript%2Fannouncing-typescript-5-3-rc%2F%23resolution-mode-supported-in-all-module-modes" target="_blank">允許<code>resolution-mode</code>跨模塊分辨率設置使用</a>，但並未對此進行記錄。自 </span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>Beta&nbsp;<span><span><span><span><span style="color:#333333"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>版發佈以來，項目團隊添加了<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdevblogs.microsoft.com%2Ftypescript%2Fannouncing-typescript-5-3-rc%2F%23settings-to-prefer-type-auto-imports" target="_blank">一個選項，在可能的情況下首選</a></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdevblogs.microsoft.com%2Ftypescript%2Fannouncing-typescript-5-3-rc%2F%23settings-to-prefer-type-auto-imports" target="_blank"><code>type</code>-only auto-imports</a><span><span><span><span><span style="color:#333333"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ftc39%2Fproposal-import-attributes" target="_blank">import attributes</a></u></strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">import attributes 的一個用例是向運行時提供有關模塊預期格式的信息。</p><pre style="margin-left:0; margin-right:0; text-align:left"><code class="language-javascript"><span style="color:#6a737d">// We only want this to be interpreted as JSON,</span><span style="color:#6a737d">// not a runnable/malicious JavaScript file with a `.json` extension.</span><span style="color:#d73a49">import</span> obj <span style="color:#d73a49">from</span><span style="color:#032f62">"./something.json"</span><span style="color:#d73a49">with</span> { <span style="color:#d73a49">type</span>: <span style="color:#032f62">"json"</span> };</code></pre><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">TypeScript 不會檢查這些屬性的內容，因為它們是特定於主機的，因此不會對它們進行檢查，只是讓瀏覽器和運行時處理它們（可能會出錯）。</p><pre style="margin-left:0; margin-right:0; text-align:left"><code class="language-javascript"><span style="color:#6a737d">// TypeScript is fine with this.</span><span style="color:#6a737d">// But your browser? Probably not.</span><span style="color:#d73a49">import</span> * <span style="color:#d73a49">as</span> foo <span style="color:#d73a49">from</span><span style="color:#032f62">"./foo.js"</span><span style="color:#d73a49">with</span> { <span style="color:#d73a49">type</span>: <span style="color:#032f62">"fluffy bunny"</span> };</code></pre><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">動態 import () 調用也可以通過第二個參數使用 import 屬性。</p><pre style="margin-left:0; margin-right:0; text-align:left"><code class="language-javascript"><span style="color:#d73a49">const</span> obj = <span style="color:#d73a49">await</span><span style="color:#d73a49">import</span>(<span style="color:#032f62">"./something.json"</span>, {
    <span style="color:#d73a49">with</span>: { <span style="color:#d73a49">type</span>: <span style="color:#032f62">"json"</span> }
});</code></pre><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">第二個參數的預期類型由一個名為<span>&nbsp;</span><code>ImportCallOptions</code><span>&nbsp;</span>的類型定義，默認情況下，該類型只期望調用一個屬性<span>&nbsp;</span><code>with</code>。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">請注意，導入屬性是從早期的 "導入斷言"（import assertions）提案演變而來的，該提案已在 TypeScript 4.5 中實現。最明顯的區別是使用了<span>&nbsp;</span><code>with</code><span>&nbsp;</span>關鍵字而非<span>&nbsp;</span><code>assert</code><span>&nbsp;</span>關鍵字。但不太明顯的區別是，運行時現在可以自由使用屬性來指導導入路徑的解析和解釋，而導入斷言只能在加載模塊後斷言某些特性。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">隨着時間的推移，TypeScript 將淘汰舊的導入斷言語法，轉而使用建議的導入屬性語法。使用 assert 的現有代碼應遷移到 with 關鍵字。需要導入屬性的新代碼應只使用<span>&nbsp;</span><code>with</code><span>&nbsp;</span>關鍵字。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong><code>switch (true)</code>Narrowing</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">TypeScript 5.3 可以根據<span>&nbsp;</span><code>switch (true)</code><span>&nbsp;</span>中每個<span>&nbsp;</span><code>case</code><span>&nbsp;</span>子句的條件執行 narrowing。</p><pre style="margin-left:0; margin-right:0; text-align:left"><code class="language-javascript"><span><span style="color:#d73a49">function</span><span style="color:#6f42c1">f</span>(<span>x: unknown</span>) </span>{
    <span style="color:#d73a49">switch</span> (<span style="color:#005cc5">true</span>) {
        <span style="color:#d73a49">case</span><span style="color:#d73a49">typeof</span> x === <span style="color:#032f62">"string"</span>:
            <span style="color:#6a737d">// 'x' is a 'string' here</span><span>console</span>.log(x.toUpperCase());
            <span style="color:#6a737d">// falls through...</span><span style="color:#d73a49">case</span><span>Array</span>.isArray(x):
            <span style="color:#6a737d">// 'x' is a 'string | any[]' here.</span><span>console</span>.log(x.length);
            <span style="color:#6a737d">// falls through...</span><span style="color:#d73a49">default</span>:
          <span style="color:#6a737d">// 'x' is 'unknown' here.</span><span style="color:#6a737d">// ...</span>
    }
}</code></pre><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">更多詳情可<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdevblogs.microsoft.com%2Ftypescript%2Fannouncing-typescript-5-3-rc%2F" target="_blank">查看發佈公告</a>。</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 02 Nov 2023 02:26:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264869/typescript-5-3-rc</guid>
            <link>https://www.oschina.net/news/264869/typescript-5-3-rc</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Light Chaser v0.0.6 已經發布，大屏數據可視化設計器]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Light Chaser v0.0.6 已經發布，大屏數據可視化設計器</p><p>此版本更新內容包括：</p><ol><li>新增 json schema ui 解析器</li><li>新增藍圖事件交互功能</li></ol><p>詳情查看：<a href="https://gitee.com/xiaopujun/light-chaser/releases/v0.0.6">https://gitee.com/xiaopujun/light-chaser/releases/v0.0.6</a></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 01 Nov 2023 23:52:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264864/light-chaser-0-0-6-released</guid>
            <link>https://www.oschina.net/news/264864/light-chaser-0-0-6-released</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[MT-AUTH v1.17.0 發佈，多租户權限系統]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h1><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fpublicdevop2019%2Fmt-auth%2Fblob%2Fmain%2Fdoc%2Frelease-note%2Fv1.17.0.md%23%25E6%259B%25B4%25E6%2596%25B0%25E6%2597%25A5%25E5%25BF%2597" target="_blank">更新日誌</a></h1><h2><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fpublicdevop2019%2Fmt-auth%2Fblob%2Fmain%2Fdoc%2Frelease-note%2Fv1.17.0.md%23%25E9%2580%259A%25E7%2594%25A8" target="_blank">通用</a></h2><ul><li>重新設計創建 API 流程</li></ul><h2><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fpublicdevop2019%2Fmt-auth%2Fblob%2Fmain%2Fdoc%2Frelease-note%2Fv1.17.0.md%23mt-ui" target="_blank">mt-ui</a></h2><ul><li>API 界面簡化</li><li>API 詳情頁重新設計</li><li>整體設計優化</li><li>bugfix</li></ul><h1><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fpublicdevop2019%2Fmt-auth%2Fprojects%2F18" target="_blank">更多詳情</a></h1><p style="color:#e6edf3; margin-left:0; margin-right:0; text-align:left"><span style="color:#000000"><strong>MT-AUTH 是一款多租户權限管理系統，包含用户管理與 API 路由、共享、鑑權、緩存、跨域、安全防護等功能</strong></span></p><h1><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fpublicdevop2019%2Fmt-auth%2Ftree%2Fmain%23%25E5%25BA%2594%25E7%2594%25A8%25E5%259C%25BA%25E6%2599%25AF" target="_blank"><span style="color:#000000">應用場景</span></a></h1><p style="color:#e6edf3; margin-left:0; margin-right:0; text-align:start"><span style="color:#000000">對於個人開發者，您可以：</span></p><ul><li><span style="color:#000000">無需從零構建用户相關功能，例如：用户註冊，忘記密碼找回等</span></li><li><span style="color:#000000">輕鬆使用現成的權限管理模式（RBAC），更加專注於業務需求</span></li><li><span style="color:#000000">快速與您的應用集成單點登錄（SSO）</span></li><li><span style="color:#000000">一站式管理應用，API，用户</span></li><li><span style="color:#000000">享受 API 級別的鑑權，緩存，跨域，限流，安全控制</span></li><li><span style="color:#000000">通過 API 市場分享或訂閲其它 API</span></li></ul><p style="color:#e6edf3; margin-left:0; margin-right:0; text-align:start"><span style="color:#000000">對於企業，如果您：</span></p><ul><li><span style="color:#000000">項目之間用户通用，需要統一管理</span></li><li><span style="color:#000000">項目由不同的團隊管理，團隊相對獨立</span></li><li><span style="color:#000000">用户在不同項目中有不同權限</span></li><li><span style="color:#000000">統一管理項目、應用與 API</span></li><li><span style="color:#000000">項目之間需要共享 API</span></li></ul><h1><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fpublicdevop2019%2Fmt-auth%2Ftree%2Fmain%23%25E4%25BA%2591%25E7%2589%2588%25E6%259C%25AC" target="_blank"><span style="color:#000000">雲版本</span></a></h1><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.letsauth.cloud%2Flogin" target="_blank">官方地址 (www.letsauth.cloud)</a></li><li><span style="color:#000000">演示賬號：</span><a href="https://www.oschina.net/action/GoToLink?url=mailto%3Ademo%40sample.com" target="_blank"><span style="color:#000000">demo@sample.com</span></a><span style="color:#000000">&nbsp;密：Password1!</span></li><li><span style="color:#000000">演示賬號：</span><a href="https://www.oschina.net/action/GoToLink?url=mailto%3Aadmin%40sample.com" target="_blank"><span style="color:#000000">admin@sample.com</span></a><span style="color:#000000">&nbsp;密：Password1!</span></li><li><span style="color:#000000">演示賬號：</span><a href="https://www.oschina.net/action/GoToLink?url=mailto%3Auser1%40sample.com" target="_blank"><span style="color:#000000">user1@sample.com</span></a><span style="color:#000000">&nbsp;密：Password1!</span></li><li><span style="color:#000000"><strong>注：當前版本為 beta 版，不保證數據安全並且隨時回滾</strong></span></li></ul><h1><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fpublicdevop2019%2Fmt-auth%2Ftree%2Fmain%23%25E7%25A4%25BA%25E6%2584%258F%25E5%259B%25BE" target="_blank"><span style="color:#000000">示意圖</span></a></h1><p style="color:#e6edf3; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><h1><img alt="" height="440" src="https://oscimg.oschina.net/oscnet/up-340644b27fece1bd183c7978e86bc25af6a.jpg" width="500" referrerpolicy="no-referrer"></h1><p style="color:#e6edf3; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><h1><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fpublicdevop2019%2Fmt-auth%2Ftree%2Fmain%23%25E9%25A1%25B9%25E7%259B%25AE%25E7%2589%25B9%25E7%2582%25B9" target="_blank"><span style="color:#000000">項目特點</span></a></h1><ul><li><span style="color:#000000">事件驅動</span></li><li><span style="color:#000000">基於角色的權限控制 (RBAC)</span></li><li><span style="color:#000000">多租户</span></li><li><span style="color:#000000">不對稱密匙</span></li><li><span style="color:#000000">OAuth2</span></li><li><span style="color:#000000">站內信，短信，郵件通知</span></li><li><span style="color:#000000">用户密碼重置，註冊碼註冊</span></li><li><span style="color:#000000">已簽發 JWT 回收</span></li><li><span style="color:#000000">API 路由、緩存、跨域 CORS、CSRF 防護、壓縮、隱藏系統錯誤信息</span></li><li><span style="color:#000000">API 記錄與分析</span></li><li><span style="color:#000000">多因素認證 (MFA)</span></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Wed, 01 Nov 2023 12:45:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264845/mt-auth-1-17-0-released</guid>
            <link>https://www.oschina.net/news/264845/mt-auth-1-17-0-released</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Semi Design v2.46.0 發佈，抖音企業級 UI 庫]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">Semi Design 是現代、全面、靈活的設計系統和 UI 庫，由字節跳動抖音前端與 UED 團隊設計、開發並維護，是一款包含設計語言、React 組件、主題等開箱即用的中後台解決方案，可用於快速搭建美觀的 React 應用。</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="color:#000000"><span style="background-color:#ffffff">Semi Design v2.46.0 現已發佈，</span>此版本帶來如下更新內容：</span></p><ul><li>【Fix】 
  <ul><li>修復高度不足以容納一個事件時，更新事件後不展示 「還有 x 項」問題</li><li>修復 AutoComplete 中 onBlur 和 onSelect 的調用順序不一致問題<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FDouyinFE%2Fsemi-design%2Fissues%2F1880" target="_blank">#1880</a></li><li>修復 Select 使用 JSX 傳入 Option 時，Option 傳入的 key 未在渲染時生效的問題</li></ul></li></ul><p>更新説明：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FDouyinFE%2Fsemi-design%2Freleases%2Ftag%2Fv2.46.0" target="_blank">https://github.com/DouyinFE/semi-design/releases/tag/v2.46.0</a></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 01 Nov 2023 09:19:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264816/semi-design-2-46-0-released</guid>
            <link>https://www.oschina.net/news/264816/semi-design-2-46-0-released</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[SQL 質量管理 | SQLE 2.2310.0 來啦！]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="margin-left:0; margin-right:0; text-align:center"><strong><span style="color:#000000">📢</span></strong><strong>SQLE 3.0 版本已經發布</strong></p><p style="margin-left:0; margin-right:0; text-align:center"><strong><strong><span style="color:#000000">🤗&nbsp;</span></strong></strong><strong>全新的界面設計</strong></p><p style="margin-left:0; margin-right:0; text-align:center"><strong><strong><strong><span style="color:#000000">✨ 歡</span></strong></strong>迎體驗</strong></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:center"><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzU2NzgwMTg0MA%3D%3D%26mid%3D2247511821%26idx%3D1%26sn%3D81daa00d15667105404e471c93088773%26chksm%3Dfc954d92cbe2c484444e7790ebbd63c74a96dae5f76631da293c9da470c4da725223fd2aae48%26scene%3D21%23wechat_redirect" target="_blank">SQLE 3.0 正式發佈！SQL 質量提升官持續招募中</a></p><p style="color:black; margin-left:0; margin-right:0; text-align:left"><span style="background-color:#ff6827; color:#ffffff"><strong><span>本期發佈的是 SQLE 2.x 版本的最終正式版。接下來，我們將全力投入到 SQLE 3.x 版本的功能開發和產品支持中。為了獲得最新的功能和持續的產品支持，我們強烈建議您儘快升級到 SQLE 3.x 版本。感謝您一直以來的支持和配合！</span></strong></span></p><p style="margin-left:0; margin-right:0">&nbsp;</p><h1><span style="background-color:#2584b5">1</span><span style="color:#2584b5">什麼是 SQLE？</span></h1><p style="color:black; margin-left:0; margin-right:0"><span>SQLE 是一款全方位的 SQL 質量管理平台，覆蓋開發至生產環境的 SQL 審核和管理。支持主流的開源、商業、國產數據庫，為開發和運維提供流程自動化能力，提升上線效率，提高數據質量。</span></p><p style="color:black; margin-left:0; margin-right:0"><img alt="" height="654" src="https://oscimg.oschina.net/oscnet/up-6a34966059442f5f6fc3c5b4c82449177e8.jpg" width="1475" referrerpolicy="no-referrer"></p><p style="color:black; margin-left:0; margin-right:0"><span>更多功能特性及使用場景：《</span><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzU2NzgwMTg0MA%3D%3D%26mid%3D2247511712%26idx%3D1%26sn%3D6919bd72d338367b49af6eabcf8f30cb%26chksm%3Dfc954c3fcbe2c529696cc3a779e8baf74646830ad9ef6a83a78d8664f5e2b8ec2d2d7b450a61%26scene%3D21%23wechat_redirect" target="_blank"><span>讓所有人不再為 SQL 問題頭疼</span></a><span>》</span></p><p style="color:black; margin-left:0; margin-right:0"><span>以下是 SQLE 2.2310.0 版本的主要功能介紹和 Release Notes。</span></p><h1><span style="background-color:#2584b5">2</span><span style="color:#2584b5">主要功能介紹</span></h1><h2><span style="color:#2584b5">社區版</span></h2><h3><span style="color:#2584b5">1、CloudBeaver 支持自主審核</span></h3><p style="margin-left:0; margin-right:0; text-align:left"><span>使用 CloudBeaver 客户端執行 SQL 前，您可以便捷地進行審核操作，快速獲取審核結果。通過審核結果，您可以優化 SQL 語句，也可以查閲相關規則的知識庫，獲取處理經驗。CloudBeaver 還會根據數據源上配置的 SQL 執行等級來限制風險 SQL 執行，以增強數據安全性。以下是 CloudBeaver 審核功能的簡單效果示例：</span></p><p style="margin-left:0; margin-right:0; text-align:left"><span>1. 輸入 SQL 後，點擊&nbsp;<strong>SQL 審核&nbsp;</strong>圖標，對編寫的 SQL 進行規則審核，獲取優化建議；</span></p><p style="margin-left:0; margin-right:0; text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-feaf50976b191ca7872f78e2862afd5a3db.png" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0; text-align:center"><span>SQL 審核</span></p><p style="margin-left:0; margin-right:0; text-align:center">&nbsp;</p><p style="margin-left:0; margin-right:0; text-align:left"><span>2. 點擊&nbsp;<strong>執行 SQL</strong>，CloudBeaver 將根據數據源上配置的 SQL 執行等級攔截問題 SQL；</span></p><p style="margin-left:0; margin-right:0; text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-111c06485c326879ebeeaf6cd3ec768a817.png" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0; text-align:center"><span>SQL 攔截</span></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:left">&nbsp;</p><h3><span style="color:#2584b5">2、支持從 Git 倉庫內的 Java 代碼文件中提取 SQL</span></h3><p style="margin-left:0; margin-right:0; text-align:left"><span>本次發版豐富了 SQL 來源的支持度——從 Java 代碼中提取 SQL。</span></p><p style="margin-left:0; margin-right:0; text-align:left"><span>在使用&nbsp;<strong>SQL 審核</strong>&nbsp;時，如果使用的 SQL 來源是 Git 倉庫，則 SQLE 會從 Git 倉庫裏的 Java 代碼中提取 SQL 並進行審核。以下是簡單的試用：</span></p><p style="margin-left:0; margin-right:0; text-align:left"><span>本例中，Git 倉庫中存在一個 Java 代碼文件，文件有如下內容：</span></p><p style="margin-left:0; margin-right:0; text-align:center"><img alt="" height="1042" src="https://oscimg.oschina.net/oscnet/up-af464f0c661ed8b77af0df66f3048485887.png" width="2072" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0; text-align:center"><span>Java 代碼抓取</span></p><p style="margin-left:0; margin-right:0; text-align:center">&nbsp;</p><p style="margin-left:0; margin-right:0; text-align:left"><span>進入&nbsp;<strong>SQL 審核</strong>，選擇 SQL 來源。</span></p><p style="margin-left:0; margin-right:0; text-align:center"><img alt="" height="491" src="https://oscimg.oschina.net/oscnet/up-1d23b4f4d18f67751b14ebca4687deb1dcf.png" width="1143" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0; text-align:center"><span>SQL 來源選擇</span></p><p style="margin-left:0; margin-right:0; text-align:center">&nbsp;</p><p style="margin-left:0; margin-right:0; text-align:left"><span>點擊&nbsp;<strong>審核</strong>，審核結果中可以查看到代碼中的 SQL。</span></p><p style="margin-left:0; margin-right:0; text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-829613d5bb6a8ca16be1b50b4768502e4f8.png" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0; text-align:center"><span>查看代碼中的 SQL</span></p><p style="margin-left:0; margin-right:0; text-align:left">&nbsp;</p><h2><span style="color:#2584b5">企業版</span></h2><h3><span style="color:#2584b5">1、Jetbrains 插件支持查看規則知識庫</span></h3><p style="margin-left:0; margin-right:0; text-align:left"><span>為了幫助開發人員提高效率，我們提供的 Jetbrains 插件新增查看規則知識庫的功能。</span></p><p style="margin-left:0; margin-right:0; text-align:left"><span>在使用 IDEA 開發的過程中，不需要打開 SQLE 頁面，在 IDE 中就可以查看相關規則的知識庫內容，快速獲取更詳細的優化建議。一起來看一下吧：</span></p><p style="margin-left:0; margin-right:0; text-align:left"><span>使用 SQLE 插件審核 SQL，在審核結果中點擊新增的「<strong>點擊查看知識庫</strong>」。</span></p><p style="margin-left:0; margin-right:0; text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-7f7aaaa9270b4b06b620987f26ee79b0e91.png" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0; text-align:center"><span>點擊查看知識庫</span></p><p style="margin-left:0; margin-right:0; text-align:center">&nbsp;</p><p style="margin-left:0; margin-right:0; text-align:left"><span>即可查看對應審核規則的知識庫。</span></p><p style="margin-left:0; margin-right:0; text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-baeebfa20338ffac31c7fa154dce7f6d75e.png" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0; text-align:center"><span>知識庫效果</span></p><h3><span style="color:#2584b5">2、為 MySQL&amp;TDSQL 填充默認的規則知識庫</span></h3><p style="margin-left:0; margin-right:0; text-align:left"><span>通過提供預定義的規則最佳實踐示例，我們旨在豐富用户對規則的理解，並幫助私有云用户進行規則理解沉澱，從而更好地管理和優化數據庫性能。</span></p><p style="margin-left:0; margin-right:0; text-align:left">&nbsp;</p><h1><span style="background-color:#2584b5">3&nbsp;</span><span style="color:#2584b5">2.2310.0 Release 信息</span></h1><h2><span style="color:#2584b5">社區版</span></h2><h3><span style="color:#2584b5">新特性：</span></h3><ul><li><p><span>[#1893] SQL 工作台支持直接審核 SQL</span></p></li><li><p><span>[#1905] 支持從 Java 代碼中提取 SQL</span></p></li></ul><h3><span style="color:#2584b5">優化：</span></h3><ul><li><p><span>[#1947] 延長插件啓動超時時間</span></p></li><li><p><span>[#1921][#1918] 優化審核規則規則：增加適用場景及性能優化</span></p></li><li><p><span>[#1884] 支持 CloudBeaver 23.2.1 版本</span></p></li><li><p><span>[#1889] 防止「SQL 審核」頁面重複誤點擊審核的情況</span></p></li></ul><h3><span style="color:#2584b5">Bug 修復：</span></h3><ul><li><p><span>[#1936] 修復規則「不建議創建冗餘索引」誤報的問題</span></p></li><li><p><span>[#1925] 修復審核規則在部分場景下發生 panic 的問題</span></p></li><li><p><span>[#1924] 解析器優化，支持 MySQL 所有字符集的解析</span></p></li><li><p><span>[#1923] 修復審核包含特殊字符的 SQL 時發生程序卡住的問題</span></p></li><li><p><span>[#1917][#1913] 修復審核規則未觸發的問題</span></p></li><li><p><span>[#1903] 修復審核中會出現「affectRowNum error」報錯的問題</span></p></li><li><p><span>[#1899] 修復審核結果展示的規則信息錯誤的問題</span></p></li><li><p><span>[#1888] 修復 MySQL 規則缺陷</span></p></li><li><p><span>[#1886] 修復「SQL 審核」記錄中審核結果展示錯誤的問題</span></p></li><li><p><span>[#1075] 修復掃描任務中指紋聚合問題</span></p></li><li><p><span>[#1965][#1926] 修復白名單在某些情況下不生效的問題</span></p></li></ul><h2><span style="color:#2584b5">企業版</span></h2><h3><span style="color:#2584b5">新特性：</span></h3><ul><li><p><span>[actiontech/sqle-ee/issues/1059] 提供默認的規則知識庫&nbsp;</span></p></li><li><p><span>[actiontech/sqle-ee/issues/1114] Jetbrains 插件支持根據審核結果查看規則知識庫</span></p></li></ul><h3><span style="color:#2584b5">優化：</span></h3><ul><li><p><span>[actiontech/sqle-ee/issues/1131] SQL 管控只同步帶標籤的 SQL 審核記錄</span></p></li><li><p><span>[actiontech/sqle-ee/issues/1119] SQL 上傳接口支持通過關鍵字過濾 SQL</span></p></li><li><p><span>[actiontech/sqle-ee/issues/1080] 允許所有登錄用户查看規則知識庫</span></p></li><li><p><span>[actiontech/sqle-ee/issues/1052] 支持自定規則使用知識庫</span></p></li><li><p><span>[actiontech/sqle-ee/issues/1013] SQL 管控優化</span></p></li><li><p><span>[actiontech/sqle-ee/issues/1080] 允許所有登錄用户查看規則知識庫</span></p></li></ul><h3><span style="color:#2584b5">Bug 修復：</span></h3><ul><li><p><span>[actiontech/sqle-ee/issues/1148] 修復規則「不建議創建冗餘索引」誤報的問題</span></p></li><li><p><span>[actiontech/sqle-ee/issues/1140] 修復非 admin 用户無法導出 SQL 管控記錄的問題</span></p></li><li><p><span>[actiontech/sqle-ee/issues/1091] 解決 scannerd 上傳的慢查詢語句存在冗餘信息的問題</span></p></li></ul><h1><span style="background-color:#2584b5">4</span><span style="color:#2584b5">體驗環境</span></h1><p style="color:black; margin-left:0; margin-right:0"><span>我們同時提供了 SQLE 社區版和企業版的線上 DEMO 環境，可以通過訪問社區官網獲取入口，<strong>目前已更新為 SQLE 3.0 版本。</strong></span></p><p style="color:black; margin-left:0; margin-right:0"><img alt="" height="1277" src="https://oscimg.oschina.net/oscnet/up-ab8b1bf3e8efad9e39002b5877d8c092e3a.png" width="2113" referrerpolicy="no-referrer"></p><p style="color:black; margin-left:0; margin-right:0"><span>社區版：http://demo.sqle.actionsky.com/</span></p><p style="color:black; margin-left:0; margin-right:0"><span>企業版：http://demo.sqle.actionsky.com:8889/</span></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:left"><span>登錄信息：用户名 admin 密碼 admin。登錄後您可以輕鬆體驗 SQLE 的豐富功能。</span></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:left"><span>部署文檔：https://actiontech.github.io/sqle-docs/docs/deploy-manual/intro</span></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:left"><span>🤗 請將任何 SQLE 的 Bug、問題和需求提交到 SQLE GitHub Issue。</span></p><h1><span style="background-color:#2584b5">5&nbsp;</span><span style="color:#2584b5">SQL&nbsp;質量提升官招募</span></h1><p style="color:black; margin-left:0; margin-right:0; text-align:left"><span>為了感謝廣大社區成員對 SQLE 的關注、使用和貢獻，社區特別企劃<span>&nbsp;</span><strong>1024 特別企劃 | SQL 質量提升官招募活動</strong>，快來留下您的使用體驗！</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:left"><span style="background-color:#2584b5"><img alt="" height="2531" src="https://oscimg.oschina.net/oscnet/up-12c8a040cbcc85b67b0d606a57b49bbfb02.png" width="500" referrerpolicy="no-referrer"></span></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 01 Nov 2023 08:52:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264804/sqle-2-2310-0</guid>
            <link>https://www.oschina.net/news/264804/sqle-2-2310-0</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Libreboot 20231101 發佈]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">Libreboot 是一個自由開源的 BIOS/UEFI 替代品，基於 Coreboot，適用於 x86 和 ARM 機器。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><span><span><span style="color:#404040"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>隨着開發人員努力改進硬件支持，</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span><span><span style="color:#404040"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>Libreboot 20231101 現已作為更新發布，引入了對筆記本電腦和台式機新主板的支持：</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><ul><li>ThinkPad X201 支持</li><li>修正 Dell Latitude E6400/E6430 GRUB 鍵盤初始化相關問題。</li><li>修正 Dell Latitude E6400 冷啓動相關問題，啓動更穩定。</li><li>修正 Sandybridge, Ivybridge 和 Haswell 的 S3 掛起/恢復相關問題 (ThinkPad X220, X230, T440p)。</li><li>修正在使用某些鍵盤時 GRUB"Unknown key"錯誤信息刷屏問題。</li></ul><p>有關更改的完整列表，請查看&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flibreboot.org%2Fnews%2Flibreboot20231101.html" target="_blank">發佈公告頁面</a>。</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 01 Nov 2023 07:54:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264792/libreboot-20231101</guid>
            <link>https://www.oschina.net/news/264792/libreboot-20231101</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[wmproxy 0.2.0 發佈,支持反向代理 / 正向代理 / 內網穿透等功能,]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">0.2.0 功能:</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">1. 實現內存緩衝區, 防止內存增長過多</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">2. 實現流量控制, 可限制某一請求佔用過多流量</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">&nbsp;</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>已實現初步的反向代理支持，包含主動式健康檢查，四層代理，七層代理，及配置的熱加載等功能</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><code>wmproxy</code><span>&nbsp;</span>將用<span>&nbsp;</span><code>Rust</code><span>&nbsp;</span>實現<span>&nbsp;</span><code>http/https</code><span>&nbsp;</span>代理，<code>socks5</code><span>&nbsp;</span>代理，反向代理，靜態文件服務器，後續將實現<span>&nbsp;</span><code>websocket</code><span>&nbsp;</span>代理，內外網穿透等，會將實現過程分享出來，感興趣的可以一起造個輪子</p><h2>📦 安裝 &amp; 🏃 使用</h2><h3>安裝</h3><div><div><pre><span><span style="color:#6f42c1">cargo</span><span><span style="color:#032f62">install </span></span><span style="color:#032f62">wmproxy</span></span></pre></div></div><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">OR</p><div><div><pre><span><span style="color:#6f42c1">git</span><span style="color:#032f62">clone https://github.com/tickbh/wmproxy</span></span><span><span><span style="color:#6f42c1">cd</span></span><span style="color:#032f62">wmproxy</span></span><span><span style="color:#6f42c1">cargo</span><span><span style="color:#032f62">install</span></span><span style="color:#032f62"></span><span><span style="color:#032f62">--path</span></span><span style="color:#032f62"></span><span><span style="color:#032f62">.</span></span></span></pre></div></div><h3>使用</h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">默認端口為 8090 端口，默認監聽地址為 127.0.0.1</p><div><div><pre><span><span><span style="color:#6a737d"># 直接通用默認參數</span></span></span><span><span style="color:#6f42c1">wmproxy</span></span><span style="color:#6a737d"></span><span><span><span style="color:#6a737d"># 設置賬號密碼</span></span></span><span><span style="color:#6f42c1">wmproxy</span><span><span style="color:#032f62">-b</span></span><span style="color:#032f62"> 0.0.0.0:8090 </span><span><span style="color:#032f62">--user</span></span><span style="color:#032f62"> wmproxy </span><span><span style="color:#032f62">--pass</span></span><span style="color:#032f62"> wmproxy</span></span><span style="color:#6a737d"></span><span><span><span style="color:#6a737d"># 其它指令</span></span></span><span><span style="color:#6f42c1">wmproxy</span><span><span style="color:#032f62">--help</span></span></span><span style="color:#6a737d"></span><span><span><span style="color:#6a737d">#配置文件版啓動</span></span></span><span><span style="color:#6f42c1">wmproxy</span><span><span style="color:#032f62">-c</span></span><span style="color:#032f62"> config/client.yaml</span></span></pre></div></div><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">啓動二級代理</p><ol><li>在本地啓動代理</li></ol><div><div><pre><span><span style="color:#d73a49">wmproxy</span><span><span style="color:#d73a49">-b</span></span> 127<span style="color:#6f42c1">.0</span><span style="color:#6f42c1">.0</span><span style="color:#6f42c1">.1</span><span><span style="color:#d73a49">-p</span></span> 8090 <span><span style="color:#d73a49">-S</span></span> 127<span style="color:#6f42c1">.0</span><span style="color:#6f42c1">.0</span><span style="color:#6f42c1">.1</span><span style="color:#6f42c1">:8091</span><span><span style="color:#d73a49">--ts</span></span></span></pre></div></div><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">或者</p><div><div><pre><span><span style="color:#6f42c1">wmproxy</span><span><span style="color:#032f62">-c</span></span><span style="color:#032f62"> config/client.yaml</span></span></pre></div></div><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">配置文件如下:</p><div><div><pre><span><span><span style="color:#6f42c1">proxy</span></span><span><span style="color:#6f42c1">:</span></span></span><span><span><span style="color:#6a737d"># 連接服務端地址</span></span></span><span><span><span style="color:#6f42c1">server</span></span><span><span style="color:#6f42c1">:</span></span><span><span>127.0</span><span>.0</span><span>.1</span><span style="color:#032f62">:8091</span></span></span><span><span><span style="color:#6a737d"># 連接服務端是否加密</span></span></span><span><span><span style="color:#6f42c1">ts</span></span><span><span style="color:#6f42c1">:</span></span><span><span style="color:#005cc5">true</span></span></span><span><span><span style="color:#6a737d"># 內網映射配置的數組</span></span></span><span><span><span style="color:#6f42c1">mappings</span></span><span><span style="color:#6f42c1">:</span></span></span><span><span><span style="color:#6a737d">#將 localhost 的域名轉發到本地的 127.0.0.1:8080</span></span></span><span><span><span style="color:#005cc5">-</span></span><span><span style="color:#6f42c1">name</span></span><span><span style="color:#6f42c1">:</span></span><span><span style="color:#032f62">web</span></span></span><span><span><span style="color:#6f42c1">mode</span></span><span><span style="color:#6f42c1">:</span></span><span><span style="color:#032f62">http</span></span></span><span><span><span style="color:#6f42c1">local_addr</span></span><span><span style="color:#6f42c1">:</span></span><span><span>127.0</span><span>.0</span><span>.1</span><span style="color:#032f62">:8080</span></span></span><span><span><span style="color:#6f42c1">domain</span></span><span><span style="color:#6f42c1">:</span></span><span><span style="color:#032f62">localhost</span></span></span><span><span><span style="color:#6f42c1">headers</span></span><span><span style="color:#6f42c1">:</span></span></span><span><span><span style="color:#005cc5">-</span></span><span><span style="color:#032f62">[</span></span><span><span style="color:#032f62">proxy</span></span><span><span style="color:#032f62">,</span></span><span><span style="color:#032f62">+</span></span><span><span style="color:#032f62">,</span></span><span><span style="color:#032f62">x-forward-for</span></span><span><span style="color:#032f62">,</span></span><span><span style="color:#032f62">$client_ip</span></span><span><span style="color:#032f62">]</span></span></span><span><span><span style="color:#005cc5">-</span></span><span><span style="color:#032f62">[</span></span><span><span style="color:#032f62">proxy</span></span><span><span style="color:#032f62">,</span></span><span><span style="color:#032f62">+</span></span><span><span style="color:#032f62">,</span></span><span><span style="color:#032f62">from</span></span><span><span style="color:#032f62">,</span></span><span><span style="color:#032f62">$url</span></span><span><span style="color:#032f62">]</span></span></span><span><span><span style="color:#005cc5">-</span></span><span><span style="color:#032f62">[</span></span><span><span style="color:#032f62">+</span></span><span><span style="color:#032f62">,</span></span><span><span style="color:#032f62">key</span></span><span><span style="color:#032f62">,</span></span><span><span style="color:#032f62">value</span></span><span><span style="color:#032f62">]</span></span></span><span><span><span style="color:#005cc5">-</span></span><span><span style="color:#032f62">[</span></span><span><span style="color:#032f62">-</span></span><span><span style="color:#032f62">,</span></span><span><span style="color:#032f62">etag</span></span><span><span style="color:#032f62">]</span></span></span><span><span><span style="color:#005cc5">-</span></span><span><span style="color:#032f62">[</span></span><span><span style="color:#032f62">+</span></span><span><span style="color:#032f62">,</span></span><span><span style="color:#032f62">last-modified</span></span><span><span style="color:#032f62">,</span></span><span><span style="color:#032f62">aaaa</span></span><span><span style="color:#032f62">]</span></span></span><span><span><span style="color:#6a737d">#將 tcp 的流量無條件轉到 127.0.0.1:8080</span></span></span><span><span><span style="color:#005cc5">-</span></span><span><span style="color:#6f42c1">name</span></span><span><span style="color:#6f42c1">:</span></span><span><span style="color:#032f62">tcp</span></span></span><span><span><span style="color:#6f42c1">mode</span></span><span><span style="color:#6f42c1">:</span></span><span><span style="color:#032f62">tcp</span></span></span><span><span><span style="color:#6f42c1">local_addr</span></span><span><span style="color:#6f42c1">:</span></span><span><span>127.0</span><span>.0</span><span>.1</span><span style="color:#032f62">:8080</span></span></span><span><span><span style="color:#6f42c1">domain</span></span><span><span style="color:#6f42c1">:</span></span></span></pre></div></div><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">因為純轉發，所以在當前節點設置賬號密碼沒有意義<span>&nbsp;</span><code>-S</code><span>&nbsp;</span>表示連接到的二級代理地址，<strong>有該參數則表示是中轉代理，否則是末端代理。</strong><code>--ts</code><span>&nbsp;</span>表示連接父級代理的時候需要用加密的方式鏈接</p><ol><li>在遠程啓動代理</li></ol><div><div><pre><span><span style="color:#032f62">wmproxy</span><span><span style="color:#032f62">--user</span></span><span style="color:#032f62">proxy</span><span><span style="color:#032f62">--pass</span></span><span style="color:#032f62">proxy</span><span><span style="color:#032f62">-b</span></span><span>0.0</span><span>.0</span><span>.0</span><span><span style="color:#032f62">-p</span></span><span>8091</span><span><span style="color:#032f62">--tc</span></span></span></pre></div></div><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">或者</p><div><div><pre><span><span style="color:#6f42c1">wmproxy</span><span><span style="color:#032f62">-c</span></span><span style="color:#032f62"> config/server.yaml</span></span></pre></div></div><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">配置文件如下:</p><div><div><pre><span><span><span style="color:#6f42c1">proxy</span></span><span><span style="color:#6f42c1">:</span></span></span><span><span><span style="color:#6a737d">#綁定的 ip 地址</span></span></span><span><span><span style="color:#6f42c1">bind_addr</span></span><span><span style="color:#6f42c1">:</span></span><span><span>127.0</span><span>.0</span><span>.1</span><span style="color:#032f62">:8091</span></span></span><span><span><span style="color:#6a737d">#代理支持的功能，1 為 http，2 為 https，4 為 socks5</span></span></span><span><span><span style="color:#6f42c1">flag</span></span><span><span style="color:#6f42c1">:</span></span><span><span>7</span></span></span><span><span><span style="color:#6a737d">#內網映射 http 綁定地址</span></span></span><span><span><span style="color:#6f42c1">map_http_bind</span></span><span><span style="color:#6f42c1">:</span></span><span><span>127.0</span><span>.0</span><span>.1</span><span style="color:#032f62">:8001</span></span></span><span><span><span style="color:#6a737d">#內網映射 tcp 綁定地址</span></span></span><span><span><span style="color:#6f42c1">map_tcp_bind</span></span><span><span style="color:#6f42c1">:</span></span><span><span>127.0</span><span>.0</span><span>.1</span><span style="color:#032f62">:8002</span></span></span><span><span><span style="color:#6a737d">#內網映射 https 綁定地址</span></span></span><span><span><span style="color:#6f42c1">map_https_bind</span></span><span><span style="color:#6f42c1">:</span></span><span><span>127.0</span><span>.0</span><span>.1</span><span style="color:#032f62">:8003</span></span></span><span><span><span style="color:#6a737d">#內網映射的公鑰證書，為空則是默認證書</span></span></span><span><span><span style="color:#6f42c1">map_cert</span></span><span><span style="color:#6f42c1">:</span></span></span><span><span><span style="color:#6a737d">#內網映射的私鑰證書，為空則是默認證書</span></span></span><span><span><span style="color:#6f42c1">map_key</span></span><span><span style="color:#6f42c1">:</span></span></span><span><span><span style="color:#6a737d">#接收客户端是為是加密客户端</span></span></span><span><span><span style="color:#6f42c1">tc</span></span><span><span style="color:#6f42c1">:</span></span><span><span style="color:#005cc5">true</span></span></span><span><span><span style="color:#6a737d">#當前服務模式，server 為服務端，client 為客户端</span></span></span><span><span><span style="color:#6f42c1">mode</span></span><span><span style="color:#6f42c1">:</span></span><span><span style="color:#032f62">server</span></span></span></pre></div></div><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><code>--tc</code><span>&nbsp;</span>表示接收子級代理的時候需要用加密的方式鏈接，可以<span>&nbsp;</span><code>--cert</code><span>&nbsp;</span>指定證書的公鑰，<code>--key</code><span>&nbsp;</span>指定證書的私鑰，<code>--domain</code><span>&nbsp;</span>指定證書的域名，如果不指定，則默認用自帶的證書參數</p><blockquote><p style="margin-left:0; margin-right:0">至此通過代理訪問的，我們已經沒有辦法得到真正的請求地址，只能得到代理發起的請求</p></blockquote><h3>代理間的認證</h3><blockquote><p style="margin-left:0; margin-right:0">目前提供了兩種認證雙式，<code>two_way_tls</code><span>&nbsp;</span>開啓客户端的證書認證信息，另一種服務端配置了<span>&nbsp;</span><code>username</code><span>&nbsp;</span>和<span>&nbsp;</span><code>password</code><span>&nbsp;</span>即需要客户端配置相同的用户密碼才能啓用認證信息，兩種方式可疊加使用或者單獨使用。 配置添加如下:</p></blockquote><div><div><pre><span><span><span style="color:#6f42c1">proxy</span></span><span><span style="color:#6f42c1">:</span></span></span><span><span><span style="color:#6f42c1">two_way_tls</span></span><span><span style="color:#6f42c1">:</span></span><span><span style="color:#005cc5">true</span></span></span><span><span><span style="color:#6f42c1">username</span></span><span><span style="color:#6f42c1">:</span></span><span><span style="color:#032f62">wmproxy</span></span></span><span><span><span style="color:#6f42c1">password</span></span><span><span style="color:#6f42c1">:</span></span><span><span style="color:#032f62">wmproxy</span></span></span></pre></div></div><h1>🚥 路線圖</h1><h3>socks5</h3><ul><li>IPV6 支持</li><li><code>SOCKS5</code><span>&nbsp;</span>驗證方式 
  <ul><li><code>NOAUTH</code></li><li><code>USERPASS</code></li></ul></li><li><code>SOCKS5</code><span>&nbsp;</span>Commands 
  <ul><li><code>CONNECT</code></li><li><code>UDP ASSOCIATE</code></li></ul></li></ul><h3>http/https</h3><ul><li>IPV6 支持</li></ul><h3>內網穿透</h3><ul><li>Http 支持</li><li>Https 支持</li><li>Tcp 支持</li></ul><h3>反向代理</h3><ul><li>靜態文件服務器</li><li>被動健康檢查</li><li>主動健康檢查</li><li>配置熱加載</li><li>負載均衡</li></ul><h4>支持功能</h4><ul><li>修改 HTTP 請求 Header</li><li>支持 HTTP2 的內網穿透</li></ul></div>
                                    ]]>
            </description>
            <pubDate>Wed, 01 Nov 2023 06:02:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264760/wmproxy-0-2-0-released</guid>
            <link>https://www.oschina.net/news/264760/wmproxy-0-2-0-released</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[NativeScript 8.6.1 發佈，跨平台原生應用框架]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>NativeScript 8.6.1&nbsp;<span style="background-color:#ffffff; color:#333333">現已發佈。NativeScript 使用户能夠直接從 JavaScript 訪問&nbsp;native API。目前，該框架為豐富的移動開發提供了 iOS 和 Android 運行時，並可用於多種不同的用例。</span></p><h4 style="margin-left:0; margin-right:0; text-align:left"><strong>Bug Fixes</strong></h4><ul><li><strong>android：</strong>防止被破壞的對話框 rehydration（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNativeScript%2FNativeScript%2Fissues%2F10414" target="_blank">#10414</a>）（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNativeScript%2FNativeScript%2Fcommit%2F756354952c88c00794e586cbb316928b7f9dbbff" target="_blank">7563549</a>）</li><li><strong>core：</strong>&nbsp;box-shadow「none」處理（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNativeScript%2FNativeScript%2Fissues%2F10405" target="_blank">#10405</a>）（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNativeScript%2FNativeScript%2Fcommit%2Fc23695c477dc1363e4f30fb45d3666c5b8101e4f" target="_blank">c23695c</a>）</li><li><strong>core：</strong>字體變化設置解析器無效軸 (&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNativeScript%2FNativeScript%2Fissues%2F10427" target="_blank">#10427</a>&nbsp;) (&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNativeScript%2FNativeScript%2Fcommit%2F08478556a9e39af9b1524c12e9e330d0a8aae9c7" target="_blank">0847855</a>&nbsp;)</li><li><strong>core：</strong>頁面框架引用未在本機視圖處理中取消設置（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNativeScript%2FNativeScript%2Fissues%2F10417" target="_blank">#10417</a>）（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNativeScript%2FNativeScript%2Fcommit%2F22c21b7e062b851a635d96aede9c936fb8e9749a" target="_blank">22c21b7</a>）</li><li><strong>css：</strong>防止「unset」和「inset」上的速記解析錯誤（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNativeScript%2FNativeScript%2Fissues%2F10424" target="_blank">#10424</a>）（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNativeScript%2FNativeScript%2Fcommit%2Fd70b48bbe9c42044204e6887b18f95f628656d69" target="_blank">d70b48b</a>）</li><li><strong>ios：</strong>添加/刪除可重用視圖的陰影（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNativeScript%2FNativeScript%2Fissues%2F10409" target="_blank">#10409</a>）（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNativeScript%2FNativeScript%2Fcommit%2Fee87b52ac323e220b7b154d27a55cbf4cdbd59c4" target="_blank">ee87b52</a>）</li><li><strong>ios：</strong>視圖處理期間「    」的屬性掩碼（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNativeScript%2FNativeScript%2Fissues%2F10404" target="_blank">#10404</a>）（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNativeScript%2FNativeScript%2Fcommit%2F212d086676a3246fd225f346af2ab920634a7643" target="_blank">212d086</a>）</li><li><strong>ios：</strong>平移變換後的陰影位置（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNativeScript%2FNativeScript%2Fissues%2F10413" target="_blank">#10413</a>）（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNativeScript%2FNativeScript%2Fcommit%2Fc78ea79f0f63f49506120aeef3bc603426c155b2" target="_blank">c78ea79</a>）</li></ul><h4 style="text-align:start"><strong><span><span><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>Features</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></h4><ul><li><strong>android：</strong>允許 shared element&nbsp;轉換與 ListView/CollectionView/Pager 一起使用（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNativeScript%2FNativeScript%2Fissues%2F10411" target="_blank">#10411</a>）（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNativeScript%2FNativeScript%2Fcommit%2Fe8c093d7a2ca94edd2f5d35ca3725c7a27e74b74" target="_blank">e8c093d</a>）</li></ul><p>更新説明：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNativeScript%2FNativeScript%2Freleases%2Ftag%2F8.6.1-core" target="_blank">https://github.com/NativeScript/NativeScript/releases/tag/8.6.1-core</a></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 01 Nov 2023 05:52:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264759/nativescript-8-6-1-released</guid>
            <link>https://www.oschina.net/news/264759/nativescript-8-6-1-released</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Deno 1.38：新增 HTML 文檔生成器、支持 HMR]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Deno 1.38 已正式<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeno.com%2Fblog%2Fv1.38" target="_blank">發佈</a></u>。</p><p>公告寫道，此版本為<code>deno doc</code>命令引入了重大改進，其中包括使用<code>deno doc --html</code>生成靜態站點文檔的能力。另外改進了 Node.js 兼容性、支持 HMR（模塊熱更新）。</p><p><strong>主要變化</strong></p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeno.com%2Fblog%2Fv1.38%23deno-doc-updates" target="_blank">改進<code>deno doc</code></a>：新的&nbsp;<code>deno doc --html</code>&nbsp;命令可生成包含項目文檔的靜態站點。</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeno.com%2Fblog%2Fv1.38%23hot-module-replacement" target="_blank">模塊熱更新</a>：新的&nbsp;<code>--unstable-hmr</code>&nbsp;flag 將檢測變更，重新加載服務器，同時保留狀態。</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeno.com%2Fblog%2Fv1.38%23nodejs-compatibility-improvements" target="_blank">改進 Node.js 兼容性</a>：現在從 Node 遷移時，使用 Deno 會更加容易。因為可以使用所選擇的 npm 包管理器。通過&nbsp;<code>npm</code>&nbsp;安裝 npm 模塊並使用 Deno 運行它。</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeno.com%2Fblog%2Fv1.38%23fastest-jsx-transform" target="_blank">快速的 JSX 轉換</a>：通過字符串連接而不是對象分配將 JSX 轉換速度提高約 7-20 倍</li><li><code>deno run --env</code>&nbsp;：對&nbsp;<code>.env</code>&nbsp;文件的內置支持</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeno.com%2Fblog%2Fv1.38%23websockets-improvements" target="_blank">改進 WebSockets</a>：支持 HTTP/2 上的 RFC8841 Websocket 以及修復錯誤</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeno.com%2Fblog%2Fv1.38%23deno-task-supports-head-command" target="_blank"><code>deno task</code>&nbsp;支持&nbsp;<code>head</code>&nbsp;命令</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeno.com%2Fblog%2Fv1.38%23vscode-extension-and-language-server" target="_blank">針對 VSCode 擴展和語言服務器的穩定性改進</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fdeno.com%2Fblog%2Fv1.38%23denotest-support-in-the-repl" target="_blank">REPL 中的&nbsp;<code>Deno.test</code>&nbsp;支持</a>：與 Jupyter 運行良好</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeno.com%2Fblog%2Fv1.38%23jupyter-notebook-updates" target="_blank">Jupyter Notebook 更新</a>：支持富文本 HTML 輸出</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeno.com%2Fblog%2Fv1.38%23deno-api-changes" target="_blank"><code>Deno</code>&nbsp;API 變更</a>：&nbsp;<code>Deno.serve</code>&nbsp;現在支持 unix 套接字</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeno.com%2Fblog%2Fv1.38%23web-api-changes" target="_blank">Web API 變更</a>：添加了&nbsp;<code>window.name</code>&nbsp;和&nbsp;<code>EventSource</code>&nbsp;</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeno.com%2Fblog%2Fv1.38%23standard-library-updates" target="_blank">標準庫更新</a>：棄用<code>std/http/server.ts</code></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeno.com%2Fblog%2Fv1.38%23granular---unstable--flags" target="_blank">細粒度&nbsp;<code>--unstable-*</code>&nbsp;flags</a>：更好地對內部功能進行標記</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeno.com%2Fblog%2Fv1.38%23performance-improvements" target="_blank">改進性能</a>：當不使用可轉移項時，&nbsp;<code>structuredClone</code>&nbsp;現在速度要快得多</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeno.com%2Fblog%2Fv1.38%23v8-120" target="_blank">V8 升級到 12.0</a>：引入&nbsp;<code>Array.fromAsync</code>&nbsp;和&nbsp;<code>Promise.withResolvers</code>&nbsp;</li></ul><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeno.com%2Fblog%2Fv1.38" target="_blank">詳情</a>。</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 01 Nov 2023 03:18:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264739/deno-1-38</guid>
            <link>https://www.oschina.net/news/264739/deno-1-38</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Visual Studio Code 1.84 發佈]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff; color:#333333">Visual Studio Code 1.84 現已發佈，具體更新內容如下：</span></p><ul><li><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_84%23_accessibility" target="_blank">更多音頻提示</a>&nbsp;</strong>- 新的音頻提示可指示清除、保存和格式化活動。</li><li><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_84%23_workbench" target="_blank">自定義活動欄位置</a>&nbsp;</strong>- 將活動欄移至頂部以緊湊顯示。</li></ul><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-a02489be8fd5595d8dc82350d192b5472a2.gif" width="400" referrerpolicy="no-referrer"></p><ul><li><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_84%23_hide-editor-tabs" target="_blank">隱藏編輯器選項卡</a>&nbsp;</strong>- 顯示多個、單個或不顯示編輯器選項卡。</li></ul><p><img alt="" height="207" src="https://oscimg.oschina.net/oscnet/up-398420c769b24caa7db39e15dfc6428ae6b.gif" width="500" referrerpolicy="no-referrer"></p><ul><li><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_84%23_maximize-editor-group" target="_blank">最大化 Editor Groups</a>&nbsp;</strong>- 快速展開活動的 Editor Group。</li></ul><p><img alt="" height="318" src="https://oscimg.oschina.net/oscnet/up-f7316c4fd42416ea0211da2c2149213e46f.gif" width="500" referrerpolicy="no-referrer"></p><ul><li><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_84%23_python" target="_blank">Python 改進</a>&nbsp;</strong>- 更好地在終端中運行代碼，更輕鬆地創建虛擬環境。</li><li><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_84%23_fastapi-tutorial" target="_blank">FastAPI 教程</a>&nbsp;</strong>- 瞭解如何使用 VS Code 開發 Python FastAPI 應用程序。</li><li><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_84%23_gradle-for-java" target="_blank">Gradle for Java</a></strong>&nbsp;- 改進了對 Java Gradle 項目的支持。</li></ul><p><img height="104" src="https://oscimg.oschina.net/oscnet/up-239bfee4e76f665ff20e9fda7fc279bbaea.png" width="500" referrerpolicy="no-referrer"></p><ul><li><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_84%23_github-copilot" target="_blank">Preview：GitHub Copilot</a></strong>&nbsp;- 聊天「代理」，生成 commit 消息，終端支持。</li></ul><p>更多詳情可<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_84" target="_blank">查看官方公告</a>。&nbsp;</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 01 Nov 2023 02:48:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264731/vs-code-1-84-released</guid>
            <link>https://www.oschina.net/news/264731/vs-code-1-84-released</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[go-carbon v2.2.12 發佈，輕量級、語義化、對開發者友好的 Golang 時間處理庫]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">carbon 是一個輕量級、語義化、零依賴、對開發者友好的 Golang 時間處理庫，支持鏈式調用、農曆和 gorm、xorm 等主流 orm</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">目前已被<span><span>&nbsp;</span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fyinggaozhen%2Fawesome-go-cn%23%25E6%2597%25A5%25E6%259C%259F%25E5%2592%258C%25E6%2597%25B6%25E9%2597%25B4" target="_blank">awesome-go-cn</a><span><span>&nbsp;</span></span>收錄，如果您覺得不錯，請給個 star 吧</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgolang-module%2Fcarbon" target="_blank">github.com/golang-module/carbon</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/golang-module/carbon" target="_blank">gitee.com/golang-module/carbon</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>更新日誌</strong></p><ul><li>增加對荷蘭語的支持</li><li>測試文件裏測試用例增加索引數字</li><li>去掉<span>&nbsp;</span><code>comparer.go</code><span>&nbsp;</span>文件裏<span>&nbsp;</span><code>IsNow</code><span>&nbsp;</span>方法中的打印調試信息</li></ul></div>
                                    ]]>
            </description>
            <pubDate>Wed, 01 Nov 2023 02:24:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264729/go-carbon-2-2-12-released</guid>
            <link>https://www.oschina.net/news/264729/go-carbon-2-2-12-released</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[OpenNJet 版本更新到 V1.2.3]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span>☘️ </span><span style="background-color:#ffffff; color:#333333">OpenNJet 版本 1.2.3 現已發佈，</span><span>該版本修復了一個 stream 流量劫持功能相關的 bug：</span></p><ul><li><span>關於配置 njtmesh_dest 指令，可能導致 stream 代理不能正常通信的問題</span></li></ul><div><div><span style="background-color:rgba(0, 0, 0, 0.04); color:#000000">👉</span><span>瞭解詳情：<a href="https://gitee.com/njet-rd/njet/releases%EF%BB%BF">https://gitee.com/njet-rd/njet/releases﻿</a></span></div></div><p>&nbsp;</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 01 Nov 2023 02:11:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264727/opennjet-1-2-3-released</guid>
            <link>https://www.oschina.net/news/264727/opennjet-1-2-3-released</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[商城系統平台端更新登錄、經營狀況、平台管理模塊]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div><div><div><div><p style="margin-left:0; margin-right:0"><strong>登錄功能模塊</strong></p></div><div><ul><li><span>密碼登錄：輸入框提示語調整為【請輸入手機號，或 賬號】</span></li><li><strong><span style="color:#df2a3f">賬號、密碼</span></strong><span> 位數：限定為 11 位</span></li><li><span>在線時長：token 有效期 30 天 ，避免頻繁登錄</span></li><li><span>重複登錄：處於登錄狀態打開後直接進入系統即可，目前操作用户名和密碼沒有錯誤但登錄提示【用户名或密碼錯誤】需要清緩存才行</span></li><li><span>店鋪名稱：需將店鋪名稱顯示全</span></li><li><span>重置：</span><strong><span style="color:#df2a3f">所有搜索功能模塊中都加上【重置】功能</span></strong></li></ul><p style="margin-left:0; margin-right:0"><strong><span>修改密碼</span></strong></p><ul><li><span>將待修改用户的手機號顯示出來，取消脱敏展示樣式</span></li><li><span>驗證碼：改為與登錄操作一致滑動圖片將驗證碼填入框內</span></li></ul></div><p><strong>經營概況模塊</strong></p><div><span>日註冊用户數：將【今日訪客數】改為【今日註冊用户數】，即今日註冊成功的總用户數</span></div><p>&nbsp;</p><p><strong>平台管理模塊</strong></p></div><div><ul><li><span>菜單順序：店鋪管理、供應商管理、門店管理</span></li><li><span>刪除：當刪除【店鋪、供應商】時，需同步將【簽約類目、自己的商品】一併刪除</span></li></ul><p style="margin-left:0; margin-right:0"><strong><span>店鋪管理</span></strong></p><ul><li><span>店鋪評分：將【商品評分】改為【店鋪評分】，店鋪評分是指本店已售評價商品的平均分</span></li><li><span>店鋪 ID：將【ID】改為【店鋪 ID】</span></li><li><span>添加類目：添加類目中需增加百分比符號顯示</span></li></ul></div></div></div></div>
                                    ]]>
            </description>
            <pubDate>Wed, 01 Nov 2023 01:46:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264722</guid>
            <link>https://www.oschina.net/news/264722</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Wow 2.7.1 發佈，讓領域驅動設計變得觸手可得]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>基於 DDD、EventSourcing 的現代響應式 CQRS 架構微服務開發框架</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FAhoo-Wang%2FWow%2Fblob%2Fmvp%2FLICENSE"><img alt="License" src="https://img.shields.io/badge/license-Apache%202-4EB1BA.svg" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FAhoo-Wang%2FWow%2Freleases"><img alt="GitHub release" src="https://img.shields.io/github/release/Ahoo-Wang/Wow.svg" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fapp.codacy.com%2Fgh%2FAhoo-Wang%2FWow%2Fdashboard%3Futm_source%3Dgh%26utm_medium%3Dreferral%26utm_content%3D%26utm_campaign%3DBadge_grade"><img alt="Codacy Badge" src="https://app.codacy.com/project/badge/Grade/cfc724df22db4f9387525258c8a59609" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fcodecov.io%2Fgh%2FAhoo-Wang%2FWow"><img alt="codecov" src="https://codecov.io/gh/Ahoo-Wang/Wow/branch/main/graph/badge.svg?token=uloJrLoQir" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FAhoo-Wang%2FWow"><img alt="Integration Test Status" src="https://github.com/Ahoo-Wang/Wow/actions/workflows/integration-test.yml/badge.svg" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FKotlinBy%2Fawesome-kotlin"><img alt="Awesome Kotlin Badge" src="https://kotlin.link/awesome-kotlin.svg" referrerpolicy="no-referrer"></a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><strong>領域驅動&nbsp;</strong><span>&nbsp;</span>|&nbsp;<span>&nbsp;</span><strong>事件驅動</strong><span>&nbsp;&nbsp;</span>|<span>&nbsp;&nbsp;</span><strong>測試驅動</strong><span>&nbsp;&nbsp;</span>|<span>&nbsp;&nbsp;</span><strong>聲明式設計</strong><span>&nbsp;</span>｜<span>&nbsp;</span><strong>響應式編程</strong><span>&nbsp;</span>｜<span>&nbsp;</span><strong>命令查詢職責分離</strong><span>&nbsp;</span>｜<span>&nbsp;</span><strong>事件溯源</strong></p><h2>更新內容 🎉 🎉 🎉</h2><ul><li>依賴: 更新<span>&nbsp;</span><code>CosId</code><span>&nbsp;</span>版本<span>&nbsp;</span><code>v2.5.6</code></li><li>依賴: 更新<span>&nbsp;</span><code>kotlin</code><span>&nbsp;</span>版本<span>&nbsp;</span><code>v1.9.20</code></li><li>依賴: 更新<span>&nbsp;</span><code>ksp</code><span>&nbsp;</span>版本<span>&nbsp;</span><code>v1.9.20-1.0.13</code></li><li>依賴: 更新<span>&nbsp;</span><code>detekt</code><span>&nbsp;</span>版本<span>&nbsp;</span><code>v1.23.3</code></li><li>重構: 移除重複的<span>&nbsp;</span><code>BatchResult</code><span>&nbsp;</span>類定義</li></ul><h2>架構圖</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-Architecture" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Architecture.svg" referrerpolicy="no-referrer"></p><h2>性能測試 (Example)</h2><ul><li>測試代碼：<a href="https://gitee.com/AhooWang/Wow/blob/main/example">Example</a></li><li>測試場景：加入購物車、下單</li><li>命令發送等待模式（<code>WaitStrategy</code>）：<code>SENT</code>、<code>PROCESSED</code></li></ul><h3>部署</h3><ul><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/perf/redis.yaml">Redis</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/perf/mongo.yaml">MongoDB</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/perf/kafka.yaml">Kafka</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/perf/config/mongo_kafka_redis.yaml">Application-Config</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/perf/deployment.yaml">Application-Deployment</a></li></ul><h3>測試報告</h3><h4>加入購物車</h4><ul><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/request/AddCartItem.http">請求</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/document/example/perf/Example.Cart.Add@SENT.pdf">詳細報告 (PDF)-SENT</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/document/example/perf/Example.Cart.Add@PROCESSED.pdf">詳細報告 (PDF)-PROCESSED</a></li></ul><blockquote><p style="margin-left:0; margin-right:0"><code>WaitStrategy</code>:<span>&nbsp;</span><code>SENT</code></p></blockquote><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="SENT" src="https://gitee.com/AhooWang/Wow/raw/main/document/example/perf/Example.Cart.Add@SENT.png" referrerpolicy="no-referrer"></p><blockquote><p style="margin-left:0; margin-right:0"><code>WaitStrategy</code>:<span>&nbsp;</span><code>PROCESSED</code></p></blockquote><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="PROCESSED" src="https://gitee.com/AhooWang/Wow/raw/main/document/example/perf/Example.Cart.Add@PROCESSED.png" referrerpolicy="no-referrer"></p><h4>下單</h4><ul><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/request/CreateOrder.http">請求</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/document/example/perf/Example.Order.Create@SENT.pdf">詳細報告 (PDF)-SENT</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/document/example/perf/Example.Order.Create@PROCESSED.pdf">詳細報告 (PDF)-PROCESSED</a></li></ul><blockquote><p style="margin-left:0; margin-right:0"><code>WaitStrategy</code>:<span>&nbsp;</span><code>SENT</code></p></blockquote><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="SENT" src="https://gitee.com/AhooWang/Wow/raw/main/document/example/perf/Example.Order.Create@SENT.png" referrerpolicy="no-referrer"></p><blockquote><p style="margin-left:0; margin-right:0"><code>WaitStrategy</code>:<span>&nbsp;</span><code>PROCESSED</code></p></blockquote><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="PROCESSED" src="https://gitee.com/AhooWang/Wow/raw/main/document/example/perf/Example.Order.Create@PROCESSED.png" referrerpolicy="no-referrer"></p><h2>事件源</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-EventSourcing" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/EventSourcing.svg" referrerpolicy="no-referrer"></p><h2>可觀測性</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-Observability" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/OpenTelemetry.png" referrerpolicy="no-referrer"></p><h2>OpenAPI (Spring WebFlux 集成)</h2><blockquote><p style="margin-left:0; margin-right:0">自動註冊<span>&nbsp;</span><strong>命令</strong><span>&nbsp;</span>路由處理函數 (<code>HandlerFunction</code>) ，開發人員僅需編寫領域模型，即可完成服務開發。</p></blockquote><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-Spring-WebFlux-Integration" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/OpenAPI-Swagger.png" referrerpolicy="no-referrer"></p><h2>測試套件：80%+ 的測試覆蓋率輕而易舉</h2><blockquote><p style="margin-left:0; margin-right:0">Given -&gt; When -&gt; Expect .</p></blockquote><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-CI-Flow" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/CI-Flow.png" referrerpolicy="no-referrer"></p><h2>前置條件</h2><ul><li>理解<span>&nbsp;</span><strong>領域驅動設計</strong>：《實現領域驅動設計》、《領域驅動設計：軟件核心複雜性應對之道》</li><li>理解<span>&nbsp;</span><strong>命令查詢職責分離</strong>（CQRS）</li><li>理解<span>&nbsp;</span><strong>事件源架構</strong></li><li>理解<span>&nbsp;</span><strong>響應式編程</strong></li></ul><h2>特性</h2><ul><li><span>&nbsp;</span>Aggregate Modeling 
  <ul><li><span>&nbsp;</span>Single Class</li><li><span>&nbsp;</span>Inheritance Pattern</li><li><span>&nbsp;</span>Aggregation Pattern</li></ul></li><li><span>&nbsp;</span>Saga Modeling 
  <ul><li><span>&nbsp;</span><code>StatelessSaga</code></li></ul></li><li><span>&nbsp;</span>Test Suite 
  <ul><li><span>&nbsp;</span>兼容性測試規範（TCK）</li><li><span>&nbsp;</span><code>AggregateVerifier</code></li><li><span>&nbsp;</span><code>SagaVerifier</code></li></ul></li><li><span>&nbsp;</span>EventSourcing 
  <ul><li>EventStore 
    <ul><li><span>&nbsp;</span>MongoDB (Recommend)</li><li><span>&nbsp;</span>R2dbc 
      <ul><li><span>&nbsp;</span>Database Sharding</li><li><span>&nbsp;</span>Table Sharding</li></ul></li><li><span>&nbsp;</span>Redis</li></ul></li><li>Snapshot 
    <ul><li><span>&nbsp;</span>MongoDB</li><li><span>&nbsp;</span>R2dbc 
      <ul><li><span>&nbsp;</span>Database Sharding</li><li><span>&nbsp;</span>Table Sharding</li></ul></li><li><span>&nbsp;</span>ElasticSearch</li><li><span>&nbsp;</span>Redis (Recommend)</li></ul></li></ul></li><li><span>&nbsp;</span>命令等待策略（<code>WaitStrategy</code>） 
  <ul><li><span>&nbsp;</span><code>SENT</code><span>&nbsp;</span>: 命令發送成功後發送完成信號</li><li><span>&nbsp;</span><code>PROCESSED</code><span>&nbsp;</span>: 命令處理完成後發送完成信號</li><li><span>&nbsp;</span><code>SNAPSHOT</code><span>&nbsp;</span>: 快照生成完成後發送完成信號</li><li><span>&nbsp;</span><code>PROJECTED</code><span>&nbsp;</span>: 命令產生的事件被投影后發送完成信號</li></ul></li><li><span>&nbsp;</span>CommandBus 
  <ul><li><span>&nbsp;</span><code>InMemoryCommandBus</code></li><li><span>&nbsp;</span><code>KafkaCommandBus</code><span>&nbsp;</span>(Recommend)</li><li><span>&nbsp;</span><code>RedisCommandBus</code></li><li><span>&nbsp;</span><code>LocalFirstCommandBus</code></li></ul></li><li><span>&nbsp;</span>DomainEventBus 
  <ul><li><span>&nbsp;</span><code>InMemoryDomainEventBus</code></li><li><span>&nbsp;</span><code>KafkaDomainEventBus</code><span>&nbsp;</span>(Recommend)</li><li><span>&nbsp;</span><code>RedisDomainEventBus</code></li><li><span>&nbsp;</span><code>LocalFirstDomainEventBus</code></li></ul></li><li><span>&nbsp;</span>StateEventBus 
  <ul><li><span>&nbsp;</span><code>InMemoryStateEventBus</code></li><li><span>&nbsp;</span><code>KafkaStateEventBus</code><span>&nbsp;</span>(Recommend)</li><li><span>&nbsp;</span><code>RedisStateEventBus</code></li><li><span>&nbsp;</span><code>LocalFirstStateEventBus</code></li></ul></li><li><span>&nbsp;</span>Spring 集成 
  <ul><li><span>&nbsp;</span>Spring Boot Auto Configuration</li><li><span>&nbsp;</span>Automatically register<span>&nbsp;</span><code>CommandAggregate</code><span>&nbsp;</span>to<span>&nbsp;</span><code>RouterFunction</code></li></ul></li><li><span>&nbsp;</span>可觀測性 
  <ul><li><span>&nbsp;</span>OpenTelemetry</li></ul></li><li><span>&nbsp;</span>OpenAPI</li><li><span>&nbsp;</span><code>WowMetadata</code><span>&nbsp;</span>Generator 
  <ul><li><span>&nbsp;</span><code>wow-compiler</code></li></ul></li></ul><h2>Example</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/AhooWang/Wow/blob/main/example">Example</a></p><h2>單元測試套件</h2><h3>80%+ 的測試覆蓋率輕而易舉。</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Test Coverage" src="https://gitee.com/AhooWang/Wow/raw/main/document/example/example-domain-jococo.png" referrerpolicy="no-referrer"></p><blockquote><p style="margin-left:0; margin-right:0">Given -&gt; When -&gt; Expect .</p></blockquote><h3>Aggregate Unit Test (<code>AggregateVerifier</code>)</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/AhooWang/Wow/blob/main/example/example-domain/src/test/kotlin/me/ahoo/wow/example/domain/order/OrderTest.kt">Aggregate Test</a></p><pre><code><span style="color:#d73a49"><span style="color:#d73a49">internal</span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49">class</span></span></span><span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1">OrderTest</span></span></span><span></span></span>{

    <span style="color:#d73a49"><span style="color:#d73a49">private</span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span><span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1">mockCreateOrder</span></span></span><span><span><span>()</span></span></span></span>: VerifiedStage&lt;OrderState&gt; {
        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> tenantId = GlobalIdGenerator.generateAsString()
        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> customerId = GlobalIdGenerator.generateAsString()

        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> orderItem = OrderItem(
            GlobalIdGenerator.generateAsString(),
            GlobalIdGenerator.generateAsString(),
            BigDecimal.valueOf(<span><span>10</span></span>),
            <span><span>10</span></span>,
        )
        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> orderItems = listOf(orderItem)
        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> inventoryService = <span style="color:#d73a49"><span style="color:#d73a49">object</span></span> : InventoryService {
            <span style="color:#d73a49"><span style="color:#d73a49">override</span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span><span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1">getInventory</span></span></span><span><span><span>(productId: </span></span><span style="color:#d73a49"><span><span><span style="color:#d73a49">String</span></span></span></span><span><span>)</span></span></span></span>: Mono&lt;<span><span>Int</span></span>&gt; {
                <span style="color:#d73a49"><span style="color:#d73a49">return</span></span> orderItems.filter { it.productId == productId }.map { it.quantity }.first().toMono()
            }
        }
        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> pricingService = <span style="color:#d73a49"><span style="color:#d73a49">object</span></span> : PricingService {
            <span style="color:#d73a49"><span style="color:#d73a49">override</span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span><span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1">getProductPrice</span></span></span><span><span><span>(productId: </span></span><span style="color:#d73a49"><span><span><span style="color:#d73a49">String</span></span></span></span><span><span>)</span></span></span></span>: Mono&lt;BigDecimal&gt; {
                <span style="color:#d73a49"><span style="color:#d73a49">return</span></span> orderItems.filter { it.productId == productId }.map { it.price }.first().toMono()
            }
        }
        <span style="color:#d73a49"><span style="color:#d73a49">return</span></span> aggregateVerifier&lt;Order, OrderState&gt;(tenantId = tenantId)
            .inject(DefaultCreateOrderSpec(inventoryService, pricingService))
            .given()
            .`<span style="color:#d73a49"><span style="color:#d73a49">when</span></span>`(CreateOrder(customerId, orderItems, SHIPPING_ADDRESS, <span style="color:#005cc5"><span style="color:#005cc5">false</span></span>))
            .expectEventCount(<span><span>1</span></span>)
            .expectEventType(OrderCreated::<span><span style="color:#d73a49"><span><span style="color:#d73a49">class</span></span></span><span>.</span><span style="color:#6f42c1"><span><span style="color:#6f42c1">java</span></span></span><span>)</span></span>
            .expectStateAggregate {
                assertThat(it.aggregateId.tenantId, equalTo(tenantId))
            }
            .expectState {
                assertThat(it.id, notNullValue())
                assertThat(it.customerId, equalTo(customerId))
                assertThat(it.address, equalTo(SHIPPING_ADDRESS))
                assertThat(it.items, equalTo(orderItems))
                assertThat(it.status, equalTo(OrderStatus.CREATED))
            }
            .verify()
    }

    <span style="color:#6a737d"><span style="color:#6a737d">/**
     * 創建訂單
     */</span></span><span style="color:#6a737d"><span style="color:#6a737d">@Test</span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span><span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1">createOrder</span></span></span><span><span><span>()</span></span></span></span> {
        mockCreateOrder()
    }

    <span style="color:#6a737d"><span style="color:#6a737d">@Test</span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span><span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1">createOrderGivenEmptyItems</span></span></span><span><span><span>()</span></span></span></span> {
        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> customerId = GlobalIdGenerator.generateAsString()
        aggregateVerifier&lt;Order, OrderState&gt;()
            .inject(mockk&lt;CreateOrderSpec&gt;(), <span style="color:#032f62"><span style="color:#032f62">"createOrderSpec"</span></span>)
            .given()
            .`<span style="color:#d73a49"><span style="color:#d73a49">when</span></span>`(CreateOrder(customerId, listOf(), SHIPPING_ADDRESS, <span style="color:#005cc5"><span style="color:#005cc5">false</span></span>))
            .expectErrorType(IllegalArgumentException::<span><span style="color:#d73a49"><span><span style="color:#d73a49">class</span></span></span><span>.</span><span style="color:#6f42c1"><span><span style="color:#6f42c1">java</span></span></span><span>)</span></span>
            .expectStateAggregate {
                <span style="color:#6a737d"><span style="color:#6a737d">/*
                 * 該聚合對象處於未初始化狀態，即該聚合未創建成功.
                 */</span></span>
                assertThat(it.initialized, equalTo(<span style="color:#005cc5"><span style="color:#005cc5">false</span></span>))
            }.verify()
    }

    <span style="color:#6a737d"><span style="color:#6a737d">/**
     * 創建訂單-庫存不足
     */</span></span><span style="color:#6a737d"><span style="color:#6a737d">@Test</span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span><span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1">createOrderWhenInventoryShortage</span></span></span><span><span><span>()</span></span></span></span> {
        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> customerId = GlobalIdGenerator.generateAsString()
        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> orderItem = OrderItem(
            GlobalIdGenerator.generateAsString(),
            GlobalIdGenerator.generateAsString(),
            BigDecimal.valueOf(<span><span>10</span></span>),
            <span><span>10</span></span>,
        )
        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> orderItems = listOf(orderItem)
        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> inventoryService = <span style="color:#d73a49"><span style="color:#d73a49">object</span></span> : InventoryService {
            <span style="color:#d73a49"><span style="color:#d73a49">override</span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span><span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1">getInventory</span></span></span><span><span><span>(productId: </span></span><span style="color:#d73a49"><span><span><span style="color:#d73a49">String</span></span></span></span><span><span>)</span></span></span></span>: Mono&lt;<span><span>Int</span></span>&gt; {
                <span style="color:#d73a49"><span style="color:#d73a49">return</span></span> orderItems.filter { it.productId == productId }
                    <span style="color:#6a737d"><span style="color:#6a737d">/*
                     * 模擬庫存不足
                     */</span></span>
                    .map { it.quantity - <span><span>1</span></span> }.first().toMono()
            }
        }
        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> pricingService = <span style="color:#d73a49"><span style="color:#d73a49">object</span></span> : PricingService {
            <span style="color:#d73a49"><span style="color:#d73a49">override</span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span><span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1">getProductPrice</span></span></span><span><span><span>(productId: </span></span><span style="color:#d73a49"><span><span><span style="color:#d73a49">String</span></span></span></span><span><span>)</span></span></span></span>: Mono&lt;BigDecimal&gt; {
                <span style="color:#d73a49"><span style="color:#d73a49">return</span></span> orderItems.filter { it.productId == productId }.map { it.price }.first().toMono()
            }
        }

        aggregateVerifier&lt;Order, OrderState&gt;()
            .inject(DefaultCreateOrderSpec(inventoryService, pricingService))
            .given()
            .`<span style="color:#d73a49"><span style="color:#d73a49">when</span></span>`(CreateOrder(customerId, orderItems, SHIPPING_ADDRESS, <span style="color:#005cc5"><span style="color:#005cc5">false</span></span>))
            <span style="color:#6a737d"><span style="color:#6a737d">/*
             * 期望：庫存不足異常.
             */</span></span>
            .expectErrorType(InventoryShortageException::<span><span style="color:#d73a49"><span><span style="color:#d73a49">class</span></span></span><span>.</span><span style="color:#6f42c1"><span><span style="color:#6f42c1">java</span></span></span><span>)</span></span>
            .expectStateAggregate {
                <span style="color:#6a737d"><span style="color:#6a737d">/*
                 * 該聚合對象處於未初始化狀態，即該聚合未創建成功.
                 */</span></span>
                assertThat(it.initialized, equalTo(<span style="color:#005cc5"><span style="color:#005cc5">false</span></span>))
            }.verify()
    }

    <span style="color:#6a737d"><span style="color:#6a737d">/**
     * 創建訂單-下單價格與當前價格不一致
     */</span></span><span style="color:#6a737d"><span style="color:#6a737d">@Test</span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span><span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1">createOrderWhenPriceInconsistency</span></span></span><span><span><span>()</span></span></span></span> {
        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> customerId = GlobalIdGenerator.generateAsString()
        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> orderItem = OrderItem(
            GlobalIdGenerator.generateAsString(),
            GlobalIdGenerator.generateAsString(),
            BigDecimal.valueOf(<span><span>10</span></span>),
            <span><span>10</span></span>,
        )
        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> orderItems = listOf(orderItem)
        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> inventoryService = <span style="color:#d73a49"><span style="color:#d73a49">object</span></span> : InventoryService {
            <span style="color:#d73a49"><span style="color:#d73a49">override</span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span><span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1">getInventory</span></span></span><span><span><span>(productId: </span></span><span style="color:#d73a49"><span><span><span style="color:#d73a49">String</span></span></span></span><span><span>)</span></span></span></span>: Mono&lt;<span><span>Int</span></span>&gt; {
                <span style="color:#d73a49"><span style="color:#d73a49">return</span></span> orderItems.filter { it.productId == productId }.map { it.quantity }.first().toMono()
            }
        }
        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> pricingService = <span style="color:#d73a49"><span style="color:#d73a49">object</span></span> : PricingService {
            <span style="color:#d73a49"><span style="color:#d73a49">override</span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span><span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1">getProductPrice</span></span></span><span><span><span>(productId: </span></span><span style="color:#d73a49"><span><span><span style="color:#d73a49">String</span></span></span></span><span><span>)</span></span></span></span>: Mono&lt;BigDecimal&gt; {
                <span style="color:#d73a49"><span style="color:#d73a49">return</span></span> orderItems.filter { it.productId == productId }
                    <span style="color:#6a737d"><span style="color:#6a737d">/*
                     * 模擬下單價格、商品定價不一致
                     */</span></span>
                    .map { it.price.plus(BigDecimal.valueOf(<span><span>1</span></span>)) }.first().toMono()
            }
        }
        aggregateVerifier&lt;Order, OrderState&gt;()
            .inject(DefaultCreateOrderSpec(inventoryService, pricingService))
            .given()
            .`<span style="color:#d73a49"><span style="color:#d73a49">when</span></span>`(CreateOrder(customerId, orderItems, SHIPPING_ADDRESS, <span style="color:#005cc5"><span style="color:#005cc5">false</span></span>))
            <span style="color:#6a737d"><span style="color:#6a737d">/*
             * 期望：價格不一致異常.
             */</span></span>
            .expectErrorType(PriceInconsistencyException::<span><span style="color:#d73a49"><span><span style="color:#d73a49">class</span></span></span><span>.</span><span style="color:#6f42c1"><span><span style="color:#6f42c1">java</span></span></span><span>).</span><span style="color:#6f42c1"><span><span style="color:#6f42c1">verify</span></span></span></span>()
    }
}</code></pre><h3>Saga Unit Test (<code>SagaVerifier</code>)</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/AhooWang/Wow/blob/main/example/example-domain/src/test/kotlin/me/ahoo/wow/example/domain/cart/CartSagaTest.kt">Saga Test</a></p><pre><code><span><span style="color:#d73a49"><span><span style="color:#d73a49">class</span></span></span><span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1">CartSagaTest</span></span></span><span></span></span>{

    <span style="color:#6a737d"><span style="color:#6a737d">@Test</span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span><span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1">onOrderCreated</span></span></span><span><span><span>()</span></span></span></span> {
        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> orderItem = OrderItem(
            GlobalIdGenerator.generateAsString(),
            GlobalIdGenerator.generateAsString(),
            BigDecimal.valueOf(<span><span>10</span></span>),
            <span><span>10</span></span>,
        )
        sagaVerifier&lt;CartSaga&gt;()
            .`<span style="color:#d73a49"><span style="color:#d73a49">when</span></span>`(
                mockk&lt;OrderCreated&gt; {
                    every {
                        customerId
                    } returns <span style="color:#032f62"><span style="color:#032f62">"customerId"</span></span>
                    every {
                        items
                    } returns listOf(orderItem)
                    every {
                        fromCart
                    } returns <span style="color:#005cc5"><span style="color:#005cc5">true</span></span>
                },
            )
            .expectCommandBody&lt;RemoveCartItem&gt; {
                assertThat(it.id, equalTo(<span style="color:#032f62"><span style="color:#032f62">"customerId"</span></span>))
                assertThat(it.productIds, hasSize(<span><span>1</span></span>))
                assertThat(it.productIds.first(), equalTo(orderItem.productId))
            }
            .verify()
    }
}</code></pre><h2>設計</h2><h3>聚合建模</h3><table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:0px; border:none; box-sizing:border-box; color:#40485b; display:block; font-family:-apple-system,&quot;system-ui&quot;,&quot;Segoe UI&quot;,Helvetica,Arial,&quot;Apple Color Emoji&quot;,&quot;Segoe UI Emoji&quot;,&quot;Segoe UI Symbol&quot;,&quot;Liberation Sans&quot;,&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,&quot;Hiragino Sans GB&quot;,&quot;Wenquanyi Micro Hei&quot;,&quot;WenQuanYi Zen Hei&quot;,&quot;ST Heiti&quot;,SimHei,SimSun,&quot;WenQuanYi Zen Hei Sharp&quot;,sans-serif; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; line-height:inherit; margin:0px 0px 16px; max-width:100%; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; word-break:initial; word-spacing:0px"><tbody><tr><th><strong>Single Class</strong></th><th><strong>Inheritance Pattern</strong></th><th><strong>Aggregation Pattern</strong></th></tr></tbody><tbody><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px; text-align:center"><img alt="Single Class - Modeling" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Modeling-Single-Class-Pattern.svg" referrerpolicy="no-referrer"></td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px; text-align:center"><img alt="Inheritance Pattern- Modeling" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Modeling-Inheritance-Pattern.svg" referrerpolicy="no-referrer"></td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px; text-align:center"><img alt="Aggregation Pattern- Modeling" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Modeling-Aggregation-Pattern.svg" referrerpolicy="no-referrer"></td></tr></tbody></table><h3>加載聚合</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Load Aggregate" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Load-Aggregate.svg" referrerpolicy="no-referrer"></p><h3>聚合狀態流</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Aggregate State Flow" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Aggregate-State-Flow.svg" referrerpolicy="no-referrer"></p><h3>發送命令</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Send Command" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Send-Command.svg" referrerpolicy="no-referrer"></p><h3>命令與事件流</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Command And Event Flow" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Command-Event-Flow.svg" referrerpolicy="no-referrer"></p><h3>Saga - OrderProcessManager (Demo)</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="OrderProcessManager" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Saga-Order.svg" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 01 Nov 2023 01:24:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264719/wow-2-7-1-released</guid>
            <link>https://www.oschina.net/news/264719/wow-2-7-1-released</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Zino 0.14 發佈：基於 Rust 語言的新一代組裝式應用開發框架]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#222222; text-align:start"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fphotino%2Fzino" target="_blank">Zino 開發框架</a>已發佈 0.14 版本！這兩個月的改進，主要集中在以下方面：</p><ul><li>支持通過配置定義本地目錄；</li><li>服務器端口註冊路由支持分組；</li><li>靜態頁面支持多頁模式；</li><li>Response 動態內容添加 ETag 進行緩存控制；</li><li>全面支持國密算法 SM3、SM4；</li><li>進一步完善和優化 ORM，為 DefaultController 添加更多方法；</li><li>新增 zino-extra 庫，提供非核心的功能 feature；</li><li>新增 zino-dioxus 庫，提供 Dioxus 組件封裝；</li><li>新增 zino-cli 庫，提供腳手架工具。</li></ul><p><img height="417" src="https://oscimg.oschina.net/oscnet/up-046df710ba7c1cef26ed75fd48df97bfd74.png" width="700" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 31 Oct 2023 15:33:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264702/zino-0-14-released</guid>
            <link>https://www.oschina.net/news/264702/zino-0-14-released</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Northstar v6.2.2.Final 已經發布，盈富量化平台]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Northstar v6.2.2.Final 已經發布，盈富量化平台。</p><p>此版本更新內容包括：</p><h1>對比 v6.1.x 的累計更新</h1><h3>新增</h3><ul><li>#I7ZIRJ</li><li>#I87Q0T</li><li>#I87Q1O</li></ul><h3>優化</h3><ul><li>增加套利策略專用的模組上下文，優化多空同時發單的操作</li><li>增加了模擬合約，使得模擬盤能測試套利模組</li><li>優化了歷史數據緩存機制，使回測時減少網絡 IO</li><li>優化了模組加載等待機制，加快了程序初始化啓動時間</li><li>優化了模組對平今平昨倉的處理</li><li>優化自定義參數處理</li><li>優化了模組狀態界面，記住用户的合約選擇與自動刷新選項</li><li>優化了移動端頁面適配</li><li>套利模組增加兼容蝶式價差率</li><li>增加合約字段兼容幣安場景</li><li>優化消息過濾，避免接收冗餘消息</li><li>優化歷史回放網關代碼</li></ul><h3>修復</h3><ul><li>#I82E1G</li><li>#I83TXC</li><li>#I87PYI</li><li>#I8BPGJ</li><li>#I89Z5Q</li></ul><p>詳情查看：<a href="https://gitee.com/dromara/northstar/releases/v6.2.2.Final">https://gitee.com/dromara/northstar/releases/v6.2.2.Final</a></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 31 Oct 2023 14:43:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264698/northstar-6-2-2-final</guid>
            <link>https://www.oschina.net/news/264698/northstar-6-2-2-final</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Bee V2.1.10 支持 OceanBase 數據庫的 ORM]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><strong>分久必合!&nbsp; ORM,分片,PC 版,安卓版,鴻蒙版, GraphQL,&nbsp; 不如只用一個 Bee!&nbsp; 入門只需要 10 分鐘!</strong></p><p><strong>Hibernate? MyBatis? JPA? 試下 Bee, 簡單易用又功能強大，面向對象，自定義 sql 都支持良好，還支持 Sharding 分庫分表.</strong></p><p><strong><span style="color:#3498db">Hibernate/MyBatis+ plus +Sharding JDBC + Jpa+ Spring data+ GraphQL+ App ORM (Android, 鴻蒙)</span><span style="color:#9b59b6">=</span><span style="color:#2980b9"><span>&nbsp;</span></span><span style="color:#e67e22">Bee</span><br> 要整合一堆的工具，還不如只用一個小巧又功能強大的工具。猶如 JAVA 界的數據源連接池 Hikari， 文件雖小，功能卻不賴！</strong></p><h3><strong>V2.1.10(2023.10.30)</strong></h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><strong>1.支持 SQL 取反運算 NOT("!")</strong><br><strong>2.支持 OceanBase 數據庫</strong><br> 3.doBeforeReturn 使用 finally<br><strong>4.多數據源配置,dbs 支持多環境覆蓋配置</strong><br> 5.fixed bug:有兩個配置項 (notSupportUnionQuery,executorSize) 沒有加前綴 sharding_</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">&nbsp;</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong><span style="background-color:#fafafb">自動生成 Spring Boot 後端微服務代碼，幾秒鐘即可完成，秒殺 GPT.</span></strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/automvc/gencode">https://gitee.com/automvc/gencode</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>Bee</strong><span style="background-color:#ffffff; color:#333333">&nbsp;是一個簡單，易用，功能強大，開發速度快，編碼少的 JAVA ORM 框架。連接，事務都可以由 Bee 框架負責管理.<span>&nbsp;</span></span><strong>Bee 簡化了與 DB 交互的編碼工作量，是&nbsp;</strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbaike.baidu.com%2Fitem%2F%25E7%25BC%2596%25E7%25A0%2581%25E5%25A4%258D%25E6%259D%2582%25E5%25BA%25A6%2F23229411%3Ffr%3Daladdin" target="_blank">編碼複雜度</a>&nbsp;為<span>&nbsp;</span><strong><span style="color:#c0392b">O(1)</span><span>&nbsp;</span></strong>的 Java 框架！(技術交流羣:扣 992650213 )</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="background-color:#ffffff; color:#333333">Bee 簡單易用：單表操作、多表關聯操作，可以不用寫 sql, 極少語句就可以完成 SQL 操作；</span><strong>概念簡單</strong><span style="background-color:#ffffff; color:#333333"><span>&nbsp;</span>,10 分鐘即可入門。</span><br><span style="background-color:#ffffff; color:#333333">Bee 功能強大：<strong>複雜查詢也支持向對象方式，分頁查詢性能更高</strong>，一級緩存即可支持個性化優化；具有分佈式特性。</span><strong><span style="background-color:#ffffff">高級要求，還可以方便自定義 SQL 語句</span></strong><span style="background-color:#ffffff">。</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>下期功能預告:</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">你還想添加什麼功能，請到評論區告訴我們.</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">項目首頁:</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/automvc/bee" target="_blank">https://gitee.com/automvc/bee</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fautomvc%2Fbee" target="_blank">https://github.com/automvc/bee</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/automvc/bee-springboot">https://gitee.com/automvc/bee-springboot</a></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 31 Oct 2023 13:12:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264688/bee-2-1-10-released</guid>
            <link>https://www.oschina.net/news/264688/bee-2-1-10-released</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
    </channel>
</rss>
