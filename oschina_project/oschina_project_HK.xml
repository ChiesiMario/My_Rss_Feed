<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[開源中國-軟件更新資訊]]>
        </title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="https://rsshub.app/oschina/news/project" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[開源中國-軟件更新資訊 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Wed, 08 Nov 2023 03:04:25 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[Fedora 39 正式發佈]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Fedora 39 已正式發佈。此版本採用 Linux 6.5 內核，更新的版本將作為穩定版更新發布。</p><p><strong>下載地址</strong></p><ul style="list-style-type:disc; margin-left:0; margin-right:0"><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ffedoraproject.org%2Fworkstation%2Fdownload%2F" target="_blank">Fedora Workstation 39</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ffedoraproject.org%2Fserver%2Fdownload%2F" target="_blank">Fedora Server 39</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ffedoraproject.org%2Fiot%2Fdownload%2F" target="_blank">Fedora IoT 39</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ffedoraproject.org%2Fcloud%2Fdownload%2F" target="_blank">Fedora Cloud 39</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ffedoraproject.org%2Fcoreos%2Fdownload%3Fstream%3Dnext" target="_blank">Fedora CoreOS 「next」 stream</a></li></ul><p>Fedora Workstation 39 搭載 GNOME 45 桌面環境、LibreOffice 7.6 辦公套件、LLVM 17 編譯器棧以及許多其他可用的更新軟件包。</p><p>Fedora 39 還有各種工具鏈升級，如 GCC 13.2 和 GNU Binutils 2.40、Glibc 2.38 以及其他更新，如 Python 3.12 和 RPM 4.19。Fedora Onyx 也將作為 Fedora 不可變變體與 Budgie 桌面正式亮相。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-d3bc4d25724768ddc84dd034104a3f7e4e9.png" referrerpolicy="no-referrer"></p><p><strong>以下是官方介紹譯文：</strong></p><p>2003 年 11 月 6 日，Fedora 項目發佈了 Fedora Core 1。二十年後的今天 Fedora Linux 39 正式發佈，這是為台式機、筆記本電腦、服務器、雲、邊緣設備以及您能想到的任何其他設備打造的完整的社區操作系統。</p><p>Fedora 工作站現在採用 GNOME 45，它帶來了更好的性能和許多可用性增強功能，包括一個新的工作區切換器和一個大為改進的圖片查看器。</p><p>如果您正在尋找不同的桌面體驗，Budgie 特別興趣小組已經創建了 Fedora Onyx，這是一個基於 Budgie 的"原子"桌面，與 Fedora Silverblue 的精神一脈相承。</p><p>當然，這還不是全部，系統還提供了 KDE Plasma 桌面、Xfce、Cinnamon 等桌面。</p><p>Fedora 雲鏡像將在 Microsoft Azure（除了 Google Cloud 和 AWS 之外）正式可用。此外，我們的雲鏡像現在已配置為 cloud-init（由您選擇）安裝更新，並在首次調配時重啓，這樣您就可以知道您正在運行的是最新的安全更新。</p><p>一如既往，Fedora 39 更新了很多很多其他軟件包，包含 gcc 13.2、binutils 2.40、glibc 2.38、gdb 13.2 和 rpm 4.19。它還更新了流行的編程語言棧，包括 Python 3.12 和 Rust 1.73。</p><p>特別值得一提的是，系統包含了 Inkscape 的最新版本，這是一款流行的矢量圖形插圖和繪圖工具。Inkscape 昨天也滿 20 週歲了。</p><p>原文：<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ffedoramagazine.org%2Fannouncing-fedora-linux-39%2F" target="_blank">https://fedoramagazine.org/announcing-fedora-linux-39/</a></u></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 08 Nov 2023 02:48:21 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/265540/fedora-linux-39</guid>
            <link>https://www.oschina.net/news/265540/fedora-linux-39</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Firefox 119.0.1 發佈]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Firefox 119.0.1 現已發佈<span style="background-color:#ffffff; color:#333333">，此版本進行了一些 bug 修復。具體更新內容如下：</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong style="color:#333333">Fixed</strong></p><ul><li><p style="margin-left:0; margin-right:0"><span>修復了導致<code>&lt;select&gt;</code>HTML 元素中的顏色不適用於下拉菜單箭頭的錯誤。（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugzilla.mozilla.org%2Fshow_bug.cgi%3Fid%3D1861253" target="_blank">bug 1861253</a>）</span></p></li><li><p style="margin-left:0; margin-right:0"><span>修復了動態更新 ancestor&nbsp;<code>&lt;fieldset&gt;</code>上的<code>disabled</code>屬性時，<code>&lt;input&gt;</code>HTML 元素狀態未更改的錯誤。（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugzilla.mozilla.org%2Fshow_bug.cgi%3Fid%3D1861027" target="_blank">bug 1861027</a>）</span></p></li><li><p style="margin-left:0; margin-right:0"><span>修復了導致單選組中帶有<code>indeterminate</code>CSS 選擇器的元素不更新的錯誤。（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugzilla.mozilla.org%2Fshow_bug.cgi%3Fid%3D1861346" target="_blank">bug 1861346</a>）</span></p></li></ul><p>更新説明：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.mozilla.org%2Fen-US%2Ffirefox%2F119.0.1%2Freleasenotes%2F" target="_blank">https://www.mozilla.org/en-US/firefox/119.0.1/releasenotes/</a></p><p>下載地址：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fftp.mozilla.org%2Fpub%2Ffirefox%2Freleases%2F119.0.1%2F" target="_blank">https://ftp.mozilla.org/pub/firefox/releases/119.0.1/</a></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 08 Nov 2023 02:33:21 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/265533/firefox-119-0-1-released</guid>
            <link>https://www.oschina.net/news/265533/firefox-119-0-1-released</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[DBCart 多語言跨境商城系統 V3.1 Release 231106 發佈]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">DBCart 企業級開源 (多語言) 商城系統，使用 PHP 語言基於 Laminas + Doctrine 2 組合框架開發完成。可定製、多終端、多場景、多支付、多語言、多貨幣等特性。</p><ul><li>嚴謹的安全機制，可靠穩定；</li><li>方便的操作管理，節約時間；</li><li>清晰的權限分配，責任分明；</li><li>便捷的更新處理，一鍵搞定；</li><li>豐富的插件市場，擴展無限。</li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">默認支持：簡體中文、繁體中文、英文、日文、韓文。<br><strong>後台配置好智能翻譯，可以方便的在後台輸入框翻譯成對應語言內容，再優化修改。省時省力。</strong><br> 前台可任意切換不同語言內容。</p><h2>系統框架</h2><ul><li>Laminas （Zendframework 3）</li><li>Doctrine 2</li></ul><h2>環境要求</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>服務器系統</strong>&nbsp;Linux、Unix、Mac、Windows、其他</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>web 服務器</strong>&nbsp;Apache、Nginx、IIS、其他</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>MySQL 版本</strong>&nbsp;&gt;= 5.6</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>PHP 版本</strong>&nbsp;&gt;= 7.4</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>PHP 擴展 | 庫</strong></p><ul><li>PDO</li><li>SSL（openssl）</li><li>Fileinfo</li><li>intl</li><li>Curl</li><li>GD2</li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>系統空間</strong>&nbsp;&gt;= 500M</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>更新日誌：</strong><br> 新增，語言包個性化定製支持<br> 新增，在線客服微信顯示<br> 新增，貨幣設置加入貨幣單位<br> 優化，默認模板和健康綠模板去掉底部服務承諾<br> 優化，底層代碼<br> 優化，後台單頁文章標籤顯示<br> 優化快遞 100 接口<br> 優化，更新列表頁面提供系統更新日誌鏈接<br> 優化，翻譯接口<br> 優化，提示信息的語言包修改<br> 優化，前台訂單金額顯示優化<br> 優化，貨幣設置可以設置小數位數</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><span style="background-color:#ffffff; color:#e74c3c">瓏大官方全新發布&nbsp;</span><strong>語言包個性化定製擴展平台&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.loongdom.com.cn%2Fcloud%2Ftrans.html" target="_blank">https://docs.loongdom.com.cn/cloud/trans.htm</a></strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>在線文檔地址：</strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs-dbcart.loongdom.com.cn%2F" target="_blank">https://docs-dbcart.loongdom.com.cn/</a><br><strong>前台演示地址：</strong><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fdemo.dbcart.loongdom.cn%2F" target="_blank">http://demo.dbcart.loongdom.cn/</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://oscimg.oschina.net/oscnet/up-603635b2b3ee3c73e4aa09c7e9b76d3b126.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://oscimg.oschina.net/oscnet/up-b30e9e5073a8a315dd568014b192271bfbf.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://oscimg.oschina.net/oscnet/up-13a80c9b0c368adb47c0f9f3dc7560755b7.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://oscimg.oschina.net/oscnet/up-0b29bbfbe78d73a836170a11699f464d2c5.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://oscimg.oschina.net/oscnet/up-34f0b327045cf071393fee0bbc229275c28.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://oscimg.oschina.net/oscnet/up-eaac27f476cbb575773f4bb45111268fb5c.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">&nbsp;</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>下載地址：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdownload.loongdom.com.cn%2Fdbcart%2FV3.1%2FDBCartV3.1_Release231106.tar.gz" target="_blank">https://download.loongdom.com.cn/dbcart/V3.1/DBCartV3.1_Release231106.tar.gz</a></strong></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 08 Nov 2023 02:32:21 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/265532</guid>
            <link>https://www.oschina.net/news/265532</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[DBErp 進銷存系統 V1.2 Release 231106 發佈]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><span style="background-color:#ffffff; color:#333333"><strong>DBErp</strong><span>&nbsp;</span>基於 Laminas</span><span style="background-color:#ffffff; color:#333333">&nbsp;+ doctrine</span><span style="background-color:#ffffff; color:#333333">&nbsp;2 開發的一套進銷存系統。</span></p><h2>系統框架</h2><ul><li>Laminas （Zendframework 3）</li><li>Doctrine 2</li></ul><h2>環境要求</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>服務器系統</strong>&nbsp;Linux、Unix、Mac、Windows、其他</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>web 服務器</strong>&nbsp;Apache、Nginx、IIS、其他</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>MySQL 版本</strong>&nbsp;&gt;= 5.6</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>PHP 版本</strong>&nbsp;&gt;= 7.4</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>PHP 擴展 | 庫</strong></p><ul><li>PDO</li><li>SSL（openssl）</li><li>Fileinfo</li><li>intl</li><li>Curl</li><li>GD2</li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>系統空間</strong>&nbsp;&gt;= 500M</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>更新日誌：</strong><br> 新增，語言包的個性化定製支持<br> 優化，銷售訂單加入序列號顯示<br> 優化，後台商品 ajax 檢索加入序列號產品標識<br> 優化，採購價格趨勢圖表<br> 優化，提示信息語言包<br> 優化，説明文件更新</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><span style="background-color:#ffffff; color:#e74c3c">瓏大官方全新發布&nbsp;</span><strong>語言包個性化定製擴展平台&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.loongdom.com.cn%2Fcloud%2Ftrans.html" target="_blank">https://docs.loongdom.com.cn/cloud/trans.html</a></strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>在線文檔地址：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.dberp.net%2F" target="_blank">https://docs.dberp.net/</a></strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>演示地址：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdemo.dberp.com.cn%2F" target="_blank">https://demo.dberp.com.cn/</a></strong><br><strong>後台登錄賬號：</strong>dberp<br><strong>後台登錄密碼：</strong>123456</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><img alt="dashboard" src="https://static.oschina.net/uploads/img/201906/30075605_OW5Q.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>下載地址：<span>&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdownload.loongdom.com.cn/dberp/V1.2/DBErpV1.2_Release231106.tar.gz" target="_blank">https://download.loongdom.com.cn/dberp/V1.2/DBErpV1.2_Release231106.tar.gz</a></span></strong></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 08 Nov 2023 02:29:21 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/265531</guid>
            <link>https://www.oschina.net/news/265531</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[go-carbon v2.2.13 發佈，輕量級、語義化、對開發者友好的 Golang 時間處理庫]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">carbon 是一個輕量級、零依賴、語義化、對開發者友好的 Golang 時間處理庫，支持鏈式調用、農曆和 gorm、xorm 等主流 orm</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">目前已被<span><span>&nbsp;</span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fyinggaozhen%2Fawesome-go-cn%23%25E6%2597%25A5%25E6%259C%259F%25E5%2592%258C%25E6%2597%25B6%25E9%2597%25B4" target="_blank">awesome-go-cn</a><span><span>&nbsp;</span></span>收錄，如果您覺得不錯，請給個 star 吧</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgolang-module%2Fcarbon" target="_blank">github.com/golang-module/carbon</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/golang-module/carbon" target="_blank">gitee.com/golang-module/carbon</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>更新日誌</strong></p><ul><li>修復<span>&nbsp;</span><code>lang/fr.json</code><span>&nbsp;</span>和<span>&nbsp;</span><code>lang/jp.json</code><span>&nbsp;</span>文件翻譯錯誤</li><li>修復<span>&nbsp;</span><code>IsZero</code><span>&nbsp;</span>方法的 bug&nbsp;</li><li>新增<span>&nbsp;</span><code>IsDST</code><span>&nbsp;</span>方法，判斷是否是夏令時</li><li>新增<span>&nbsp;</span><code>Closest</code><span>&nbsp;</span>方法，獲取距離指定 Carbon 對象最近的 Carbon 對象</li><li>新增<span>&nbsp;</span><code>Farthest</code><span>&nbsp;</span>方法，獲取距離指定 Carbon 對象最遠的 Carbon 對象</li><li>將<span>&nbsp;</span><code>modifier.go</code><span>&nbsp;</span>更名為<span>&nbsp;</span><code>boundary.go</code>,<span>&nbsp;</span><code>modifier_test.go</code><span>&nbsp;</span>更名為<span>&nbsp;</span><code>boundary_test.go</code></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Tue, 07 Nov 2023 01:33:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/265516/go-carbon-2-2-13-released</guid>
            <link>https://www.oschina.net/news/265516/go-carbon-2-2-13-released</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Simple Admin - Go 語言分佈式後台管理系統 v1.2.2 發佈]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h2>Simple Admin Go 語言分佈式後台管理系統 v1.2.2 更新</h2><h3>項目介紹</h3><p>Simple Admin 是一個開箱即用的分佈式微服務後端管理系統，基於 go-zero 開發，為開發中大型後台提供了豐富的功能，支持三端代碼生成。 官方自帶多種擴展，助力中小企業快速上雲，快速迭代。適合用於微服務學習和商用，開源免費。</p><h3>Simple Admin Core/Job/MCMS/FMS v1.2.2 更新</h3><h4>介紹</h4><p>核心模塊 Core, 定時任務模塊 Job, 消息中心模塊 MCMS, 以及文件管理模塊 FMS 均已升級至 v1.2.2</p><h4>本次更新</h4><ul><li>修復：mysql all in one 配置錯誤</li><li>新增：強制重置超級管理員權限功能</li><li>新增：新增數據庫初始化開關配置，用於關閉初始化接口</li><li>新增：禁用用户後拉黑所有 token</li><li>修復：更新角色時出現的空指針錯誤</li><li>優化：優化菜單 i18n 翻譯</li><li>新增（Common）：系統繁忙的 common 信息字段</li><li>修復（Common）：修復依賴版本導致的漏洞</li><li>修復（FMS）：修復空標籤導致的前端顯示錯誤</li><li>修復（FMS）：後台設置標籤為空導致的不更新問題</li><li>更新： 更新依賴</li></ul><h3>Simple Admin Backend UI v1.2.2 更新</h3><h4>介紹</h4><p>Simple Admin UI 是基於 vue-vben-admin 二次開發的為 Simple Admin 專門開發的後台管理界面，基於 Vue3 和 TypeScript 開發， 提供後台錯誤統一處理，國際化等功能，本項目完全免費，可用於學習和商用.</p><h4>本次更新</h4><ul><li>修復：錯誤的目錄類型值</li><li>修復：file API 提示信息改為 notice</li><li>修復：tree select 自動刷新失敗的 bug</li><li>優化：優化 i18n 翻譯信息</li><li>更新：更新依賴</li></ul><h3>Goctls v1.6.11 更新</h3><h4>介紹</h4><p>Goctls 是一個基於 Go Zero 官方生成工具 Goctl 開發的針對 Simple Admin 適配優化的生成工具。提供強大的代碼生成功能，同時集成了許多定製工具，實現快速開發微服務接入後台和前台​。三端代碼生成可以大大提升開發效率，歡迎體驗​。</p><h4>特性</h4><ul><li>go-swagger : 基於 go-swagger 而不是官方的@doc 註解</li><li>多國語言支持</li><li>優化錯誤信息處理,支持多語言錯誤</li><li>簡單易用的校驗器</li><li>支持代碼生成，生成 API,RPC 和 web 端的 CRUD 代碼</li><li>支持多種額外插件如 GORM, RocketMQ</li><li>對 Simple Admin 的針對性優化</li><li>rpc logic group 分組</li><li>全面支持 Ent 代碼生成</li><li>額外工具如本地日誌查看，環境變量查看</li></ul><h4>本次更新</h4><ul><li>更新： 更新項目升級版本</li><li>更新： 更新依賴</li></ul><h3>更新預覽</h3><blockquote><p>後台 Tree Select 修復點擊加載</p></blockquote><p><img height="909" src="https://oscimg.oschina.net/oscnet/up-3363d8623829bd8408512ae8245285668b0.jpg" width="1062" referrerpolicy="no-referrer"></p><blockquote><p>Core 新增初始化配置</p></blockquote><p><img height="311" src="https://oscimg.oschina.net/oscnet/up-296a416b1e7dba1c8ecaa1786b254d6ff07.jpg" width="1050" referrerpolicy="no-referrer"></p><blockquote><p>優化菜單翻譯</p></blockquote><p><img height="905" src="https://oscimg.oschina.net/oscnet/up-36009b7045d1fd5d3f0457faa16a8bcc552.jpg" width="945" referrerpolicy="no-referrer"><img height="913" src="https://oscimg.oschina.net/oscnet/up-5f23f89e6e59944302f051bce8b7f3e726b.jpg" width="639" referrerpolicy="no-referrer"></p><p>&nbsp;</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">項目文檔地址:&nbsp;&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.ryansu.tech%2Fzh%2F" target="_blank">https://doc.ryansu.tech/zh/</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">Gitee:&nbsp;&nbsp;<a href="https://gitee.com/hopefire/simple-admin-core">https://gitee.com/hopefire/simple-admin-core</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">Github:&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsuyuan32%2Fsimple-admin-core" target="_blank">https://github.com/suyuan32/simple-admin-core</a></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 07 Nov 2023 01:08:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/265509</guid>
            <link>https://www.oschina.net/news/265509</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[iSulad v2.1.4 發佈，雲原生輕量級容器解決方案]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>iSulad v2.1.4 已經發布，雲原生輕量級容器解決方案</p><p>此版本更新內容包括：</p><h2>依賴組件版本</h2><table><tbody><tr><th>組件</th><th>版本</th><th>commit</th></tr></tbody><tbody><tr><td>lcr</td><td>v2.1.3</td><td>0075890d5</td></tr></tbody></table><h2>當前 release 版本合入 PR 列表</h2><div><pre><code>2023-11-07 xuepengxu release 2.1.4
    - !2238 modify the default value of EANBLE_IMAGE_LIBARAY to off * modify the default value of EANBLE_IMAGE_LIBARAY to off
    - !2237 delete the disabled reload configuration in isulad.service
    - !2235 [CI] change base ci test image to fedora
    - !2234 network:update dnsname verison * network:update dnsname verison
    - !2229 Fix critest fail for symlink volume * Fix critest fail for symlink
    - !2227 doc:update the cni plugins version * doc:update the cni plugins version
    - !2228 bugfix:'for' loop initial declarations are only allowed in C99 mode * bugfix:'for' loop initial declarations are only allowed in C99 mode
    - !2225 bugfix:fix typos and header file reference * bugfix:fix typos and header file reference
    - !2208 network:libcni upgrades v1.0.0
    - !2224 still use lxc 4.0.3 in CI tests * still use lxc 4.0.3 in CI tests
    - !2223 [Sandbox API]: update doc of shim controller design * [Sandbox API]: update doc of controller design
    - !2221 add create gpu container manual * add create gpu container manual
    - !2222 [Sandbox API]: update pod stats in cri_api_v1 * [Sandbox API]: Update pod stats in cri_api_v1
    - !2206 [Sandbox API]: add shim controller for cri-api-v1
    - !2217 [Sandbox API]: Fix sandbox dir not existed issue in SetupSandboxNetwork * [Sandbox API]: Fix sandbox dir not existed issue
    - !2218 install meson in CI * install meson in CI
    - !2216 use lxc master branch * use lxc master branch
    - !2210 document optimization:libcni upgrades v1.0.0 * document optimization:libcni upgrades v1.0.0
    - !2207 [refactor] update possible changed resources for oci spec
    - !2215 network:bugfix memory leak * network:bugfix memory leak
    - !2211 network:auto free for libcni * network:auto free for libcni
    - !2212 bugfix for rt_isula_exec_resize * bugfix for rt_isula_exec_resize
    - !2209 add runc listpid implement
    - !2205 bugfix for add --root option Merge pull request !2205 from zhongtao/fix
    - !2204 [refactor] eliminate duplicate code * [refactor] use common utils from libisula to eliminate duplicate code
    - !2203 add --root option when calling runc
    - !2067 add podsanbox cri interface design doc * add podsanbox cri interface design doc
    - !2200 remove same code and replace to isula-libutils
    - !2202 use __isula_auto_prw_unlock to improve code * use __isula_auto_prw_unlock to improve code
    - !2201 Add m_calls mutex in controller monitor * Add m_calls mutex in controller monitor
    - !2066 add sandbox module design doc * add sandbox module design doc
    - !2199 Add retry function for bigdata_stream_runc * !2195 Add retry function for bigdata_stream_runc
    - !2198 allow tls_mode not set * Allow tls_mode not set in grpc context from client
    - !2197 add config for enable cri v1
    - !2196 find libisulad_shim_libutils.a from libisula.pc * find libisulad_shim_libutils.a from libisula.pc
    - !2194 [CI] do not use tty to run docker run
    - !2193 [CI] fix relative path of file
    - !2192 【CI】new docker container do not need change resolv
    - !2191 [CI] support build isulad on many linux distros
    - !2190 [refactor] adapt new library for libisulad-shim utils
    - !2189 Limit the response size of ExecSync * !2129 Limit the response size of ExecSync
    - !2187 update docs/design/detailed/Image/remote_ro_design.md. * update docs/design/detailed/Image/remote_ro_design.md.
    - !2186 update docs/design/detailed/Image/image_storage_driver_design_zh.md. * update docs/design/detailed/Image/image_storage_driver_design_zh.md.
    - !2184 update docs/build_docs/guide/build_guide_riscv_zh.md. * update docs/build_docs/guide/build_guide_riscv_zh.md.
    - !2188 Support both C++11 and C++17 * Support both C++11 and C++17
    - !2185 sync from stable branch Merge pull request !2185 from haozi007/fixbug
    - !2183 Fix code inspection and add macro isolation
    - !2180 fix execlp not enough args * fix execlp not enough args
    - !2182 Add mutex for container list in sandbox * Add mutex for container list in sandbox
    - !2173 remove unneccessary strerror
    - !2176 [Sandbox API]Add vsock support for exec
    - !2171 Fix nullptr in src/daemon/entry * !2160 Fix nullptr in src/daemon/entry
    - !2168 fix code bug * fix code bug
    - !2163 add bind mount file lock * add bind mount file lock
    - !2162 Fix rename issue for id manager Merge pull request !2162 from xuxuepeng/master
    - !2158 Use crictl v1.22.0 for ci * Use crictl v1.22.0 for ci
    - !2156 Fix sandbox error logging * Fix sandbox error logging
    - !2155 Use reference in loop in listpodsandbox * Use reference in loop in listpodsandbox

    dev stats:
      - 325 files changed, 7714 insertions(+), 3264 deletions(-)
      - contributors: haozi007, zhongtao, liuxu, xuxuepeng, zhangxiaoyu, jake, wangyu, jikai
</code></pre><div>
  &nbsp;
 </div></div><p>詳情查看：<a href="https://gitee.com/openeuler/iSulad/releases/v2.1.4">https://gitee.com/openeuler/iSulad/releases/v2.1.4</a></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 07 Nov 2023 01:06:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/265508</guid>
            <link>https://www.oschina.net/news/265508</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Xmake v2.8.5 發佈，支持鏈接排序和單元測試]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxmake-io%2Fxmake" target="_blank">Xmake</a><span>&nbsp;</span>是一個基於 Lua 的輕量級跨平台構建工具。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">它非常的輕量，沒有任何依賴，因為它內置了 Lua 運行時。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">它使用 xmake.lua 維護項目構建，相比 makefile/CMakeLists.txt，配置語法更加簡潔直觀，對新手非常友好，短時間內就能快速入門，能夠讓用户把更多的精力集中在實際的項目開發上。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">我們能夠使用它像 Make/Ninja 那樣可以直接編譯項目，也可以像 CMake/Meson 那樣生成工程文件，另外它還有內置的包管理系統來幫助用户解決 C/C++ 依賴庫的集成使用問題。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">目前，Xmake 主要用於 C/C++ 項目的構建，但是同時也支持其他 native 語言的構建，可以實現跟 C/C++ 進行混合編譯，同時編譯速度也是非常的快，可以跟 Ninja 持平。</p><div><pre><code>Xmake = Build backend + Project Generator + Package Manager + [Remote|Distributed] Build + Cache
</code></pre></div><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">儘管不是很準確，但我們還是可以把 Xmake 按下面的方式來理解：</p><div><pre><code>Xmake ≈ Make/Ninja + CMake/Meson + Vcpkg/Conan + distcc + ccache/sccache
</code></pre></div><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxmake-io%2Fxmake" target="_blank">項目源碼</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fxmake.io%2F%23%2Fzh-cn%2F" target="_blank">官方文檔</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fxmake.io%2F%23%2Fzh-cn%2Fabout%2Fcourse" target="_blank">入門課程</a></li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><img src="https://github.com/xmake-io/xmake-docs/raw/master/assets/img/index/package.gif" width="650px" referrerpolicy="no-referrer"></p><h2>新特性介紹</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">在介紹新特性之前，我們有一個好消息要告訴大家，Xmake 最近進入了 Debian 的官方倉庫：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpackages.debian.org%2Fsid%2Fxmake" target="_blank">https://packages.debian.org/sid/xmake</a>， 等到明年 4 月份 Ubuntu 24.04 發佈，我們應該就能直接通過<span>&nbsp;</span><code>apt install xmake</code><span>&nbsp;</span>命令去快速安裝 Xmake 了。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">同時也感謝 @Lance Lin 的幫助，他全程幫助我們維護並上傳 Xmake 包到 Debian 倉庫，真的非常感謝！</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">接下來，我們來介紹下 2.8.5 版本引入的一些改動，這個版本帶來了很多的新特性，尤其是對鏈接排序，鏈接組的支持，還有對<span>&nbsp;</span><code>xmake test</code><span>&nbsp;</span>內置單元測試的支持。 另外，我們還新增了 Apple XROS 平台的構建支持，可以用於構建蘋果新的 VisionOS 上的程序，還有我們還提供了更加靈活通用的<span>&nbsp;</span><code>check_sizeof</code><span>&nbsp;</span>檢測接口，用於快速檢測類型的大小。</p><h3>鏈接重排序支持</h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">這是一個存在了兩年多的需求，主要用於調整 target 內部的鏈接順序。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">由於 xmake 提供了<span>&nbsp;</span><code>add_links</code>,<span>&nbsp;</span><code>add_deps</code>,<span>&nbsp;</span><code>add_packages</code>,<span>&nbsp;</span><code>add_options</code><span>&nbsp;</span>接口，可以配置目標、依賴，包和選項中的鏈接，儘管<span>&nbsp;</span><code>add_links</code><span>&nbsp;</span>本身的鏈接順序可以根據添加順序來調整。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">但是 links，deps 和 packages 之間的鏈接順序，只能按固定順序生成，無法靈活調整，這對於一些複雜的項目，就有點顯得力不從心了。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">而我們在這個版本，徹底解決了這個問題，新增了<span>&nbsp;</span><code>add_linkorders</code><span>&nbsp;</span>接口，可用於配置目標、依賴、包、選項、鏈接組引入的各種鏈接順序。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">更多詳情和背景，請見：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxmake-io%2Fxmake%2Fissues%2F1452" target="_blank">#1452</a></p><h4>排序鏈接</h4><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">為了更加靈活的調整 target 內部的各種鏈接順序，我們可以通過<span>&nbsp;</span><code>add_linkorders</code><span>&nbsp;</span>這個新接口來實現，例如：</p><div><pre><code><span style="color:#000000">add_links</span><strong>(</strong><span style="color:#ff00ff">"a"</span><strong>,</strong><span style="color:#ff00ff">"b"</span><strong>,</strong><span style="color:#ff00ff">"c"</span><strong>,</strong><span style="color:#ff00ff">"d"</span><strong>,</strong><span style="color:#ff00ff">"e"</span><strong>)</strong><em>-- e -&gt; b -&gt; a</em><span style="color:#000000">add_linkorders</span><strong>(</strong><span style="color:#ff00ff">"e"</span><strong>,</strong><span style="color:#ff00ff">"b"</span><strong>,</strong><span style="color:#ff00ff">"a"</span><strong>)</strong><em>-- e -&gt; d</em><span style="color:#000000">add_linkorders</span><strong>(</strong><span style="color:#ff00ff">"e"</span><strong>,</strong><span style="color:#ff00ff">"d"</span><strong>)</strong></code></pre></div><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">add_links 是配置的初始鏈接順序，然後我們通過 add_linkorders 配置了兩個局部鏈接依賴<span>&nbsp;</span><code>e -&gt; b -&gt; a</code><span>&nbsp;</span>和<span>&nbsp;</span><code>e -&gt; d</code><span>&nbsp;</span>後。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">xmake 內部就會根據這些配置，生成 DAG 圖，通過拓撲排序的方式，生成最終的鏈接順序，提供給鏈接器。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">當然，如果存在循環依賴，產生了環，它也會提供警告信息。</p><h4>排序鏈接和鏈接組</h4><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">另外，對於循環依賴，我們也可以通過<span>&nbsp;</span><code>add_linkgroups</code><span>&nbsp;</span>配置鏈接組的方式也解決。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">並且<span>&nbsp;</span><code>add_linkorders</code><span>&nbsp;</span>也能夠對鏈接組進行排序。</p><div><pre><code><span style="color:#000000">add_links</span><strong>(</strong><span style="color:#ff00ff">"a"</span><strong>,</strong><span style="color:#ff00ff">"b"</span><strong>,</strong><span style="color:#ff00ff">"c"</span><strong>,</strong><span style="color:#ff00ff">"d"</span><strong>,</strong><span style="color:#ff00ff">"e"</span><strong>)</strong><span style="color:#000000">add_linkgroups</span><strong>(</strong><span style="color:#ff00ff">"c"</span><strong>,</strong><span style="color:#ff00ff">"d"</span><strong>,</strong><strong>{</strong><span style="color:#000000">name</span><strong>=</strong><span style="color:#ff00ff">"foo"</span><strong>,</strong><span style="color:#000000">group</span><strong>=</strong><strong>true</strong><strong>})</strong><span style="color:#000000">add_linkorders</span><strong>(</strong><span style="color:#ff00ff">"e"</span><strong>,</strong><span style="color:#ff00ff">"linkgroup::foo"</span><strong>)</strong></code></pre></div><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">如果要排序鏈接組，我們需要對每個鏈接組取個名，<code><span>{</span><span>name</span><span><span>&nbsp;</span></span><span>=</span><span><span>&nbsp;</span></span><span>"foo"</span><span>}</span></code><span>&nbsp;</span>，然後就能在<span>&nbsp;</span><code>add_linkorders</code><span>&nbsp;</span>裏面通過<span>&nbsp;</span><code>linkgroup::foo</code><span>&nbsp;</span>去引用配置了。</p><h4>排序鏈接和 frameworks</h4><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">我們也可以排序鏈接和 macOS/iPhoneOS 的 frameworks。</p><div><pre><code><span style="color:#000000">add_links</span><strong>(</strong><span style="color:#ff00ff">"a"</span><strong>,</strong><span style="color:#ff00ff">"b"</span><strong>,</strong><span style="color:#ff00ff">"c"</span><strong>,</strong><span style="color:#ff00ff">"d"</span><strong>,</strong><span style="color:#ff00ff">"e"</span><strong>)</strong><span style="color:#000000">add_frameworks</span><strong>(</strong><span style="color:#ff00ff">"Foundation"</span><strong>,</strong><span style="color:#ff00ff">"CoreFoundation"</span><strong>)</strong><span style="color:#000000">add_linkorders</span><strong>(</strong><span style="color:#ff00ff">"e"</span><strong>,</strong><span style="color:#ff00ff">"framework::CoreFoundation"</span><strong>)</strong></code></pre></div><h4>完整例子</h4><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">相關的完整例子，我們可以看下：</p><div><pre><code><span style="color:#000000">add_rules</span><strong>(</strong><span style="color:#ff00ff">"mode.debug"</span><strong>,</strong><span style="color:#ff00ff">"mode.release"</span><strong>)</strong><span style="color:#000000">add_requires</span><strong>(</strong><span style="color:#ff00ff">"libpng"</span><strong>)</strong><span style="color:#000000">target</span><strong>(</strong><span style="color:#ff00ff">"bar"</span><strong>)</strong><span style="color:#000000">set_kind</span><strong>(</strong><span style="color:#ff00ff">"shared"</span><strong>)</strong><span style="color:#000000">add_files</span><strong>(</strong><span style="color:#ff00ff">"src/foo.cpp"</span><strong>)</strong><span style="color:#000000">add_linkgroups</span><strong>(</strong><span style="color:#ff00ff">"m"</span><strong>,</strong><span style="color:#ff00ff">"pthread"</span><strong>,</strong><strong>{</strong><span style="color:#000000">whole</span><strong>=</strong><strong>true</strong><strong>})</strong><span style="color:#000000">target</span><strong>(</strong><span style="color:#ff00ff">"foo"</span><strong>)</strong><span style="color:#000000">set_kind</span><strong>(</strong><span style="color:#ff00ff">"static"</span><strong>)</strong><span style="color:#000000">add_files</span><strong>(</strong><span style="color:#ff00ff">"src/foo.cpp"</span><strong>)</strong><span style="color:#000000">add_packages</span><strong>(</strong><span style="color:#ff00ff">"libpng"</span><strong>,</strong><strong>{</strong><span style="color:#000000">public</span><strong>=</strong><strong>true</strong><strong>})</strong><span style="color:#000000">target</span><strong>(</strong><span style="color:#ff00ff">"demo"</span><strong>)</strong><span style="color:#000000">set_kind</span><strong>(</strong><span style="color:#ff00ff">"binary"</span><strong>)</strong><span style="color:#000000">add_deps</span><strong>(</strong><span style="color:#ff00ff">"foo"</span><strong>)</strong><span style="color:#000000">add_files</span><strong>(</strong><span style="color:#ff00ff">"src/main.cpp"</span><strong>)</strong><span style="color:blue">if</span><span style="color:#000000">is_plat</span><strong>(</strong><span style="color:#ff00ff">"linux"</span><strong>,</strong><span style="color:#ff00ff">"macosx"</span><strong>)</strong><span style="color:blue">then</span><span style="color:#000000">add_syslinks</span><strong>(</strong><span style="color:#ff00ff">"pthread"</span><strong>,</strong><span style="color:#ff00ff">"m"</span><strong>,</strong><span style="color:#ff00ff">"dl"</span><strong>)</strong><span style="color:blue">end</span><span style="color:blue">if</span><span style="color:#000000">is_plat</span><strong>(</strong><span style="color:#ff00ff">"macosx"</span><strong>)</strong><span style="color:blue">then</span><span style="color:#000000">add_frameworks</span><strong>(</strong><span style="color:#ff00ff">"Foundation"</span><strong>,</strong><span style="color:#ff00ff">"CoreFoundation"</span><strong>)</strong><span style="color:blue">end</span><span style="color:#000000">add_linkorders</span><strong>(</strong><span style="color:#ff00ff">"framework::Foundation"</span><strong>,</strong><span style="color:#ff00ff">"png16"</span><strong>,</strong><span style="color:#ff00ff">"foo"</span><strong>)</strong><span style="color:#000000">add_linkorders</span><strong>(</strong><span style="color:#ff00ff">"dl"</span><strong>,</strong><span style="color:#ff00ff">"linkgroup::syslib"</span><strong>)</strong><span style="color:#000000">add_linkgroups</span><strong>(</strong><span style="color:#ff00ff">"m"</span><strong>,</strong><span style="color:#ff00ff">"pthread"</span><strong>,</strong><strong>{</strong><span style="color:#000000">name</span><strong>=</strong><span style="color:#ff00ff">"syslib"</span><strong>,</strong><span style="color:#000000">group</span><strong>=</strong><strong>true</strong><strong>})</strong></code></pre></div><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">完整工程在：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxmake-io%2Fxmake%2Fblob%2Fmaster%2Ftests%2Fprojects%2Fc%252B%252B%2Flinkorders%2Fxmake.lua" target="_blank">linkorders example</a></p><h3>鏈接組支持</h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">另外，這個版本，我們還新增了鏈接組的原生支持，它目前主要用於 linux 平台的編譯，僅支持 gcc/clang 編譯器。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">需要注意的是 gcc/clang 裏面的鏈接組概念主要特指：<code>-Wl,--start-group</code></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">而 Xmake 對齊進行了封裝，做了進一步抽象，並且不僅僅用於處理<span>&nbsp;</span><code>-Wl,--start-group</code>，還可以處理<span>&nbsp;</span><code>-Wl,--whole-archive</code><span>&nbsp;</span>和<span>&nbsp;</span><code>-Wl,-Bstatic</code>。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">下面我們會一一對其進行講解。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">更多詳情見：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxmake-io%2Fxmake%2Fissues%2F1452" target="_blank">#1452</a></p><h4>–start-group 支持</h4><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><code>-Wl,--start-group</code><span>&nbsp;</span>和<span>&nbsp;</span><code>-Wl,--end-group</code><span>&nbsp;</span>是用於處理複雜庫依賴關係的鏈接器選項，確保鏈接器可以解決符號依賴併成功連接多個庫。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">在 xmake 中，我們可以通過下面的方式實現：</p><div><pre><code><span style="color:#000000">add_linkgroups</span><strong>(</strong><span style="color:#ff00ff">"a"</span><strong>,</strong><span style="color:#ff00ff">"b"</span><strong>,</strong><strong>{</strong><span style="color:#000000">group</span><strong>=</strong><strong>true</strong><strong>})</strong></code></pre></div><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">它會對應生成<span>&nbsp;</span><code>-Wl,--start-group -la -lb -Wl,--end-group</code><span>&nbsp;</span>鏈接選項。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">如果 a 和 b 庫之間有符號的循環依賴，也不會報鏈接錯誤，能夠正常鏈接成功。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">對於不支持的平台和編譯，會退化成<span>&nbsp;</span><code>-la -lb</code></p><h4>–whole-archive 支持</h4><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><code>--whole-archive</code><span>&nbsp;</span>是一個鏈接器選項，通常用於處理靜態庫。 它的作用是告訴鏈接器將指定的靜態庫中的所有目標文件都包含到最終可執行文件中，而不僅僅是滿足當前符號依賴的目標文件。 這可以用於確保某些庫的所有代碼都被鏈接，即使它們在當前的符號依賴關係中沒有直接引用。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">更多信息，可以參考 gcc/clang 的文檔。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">在 xmake 中，我們可以通過下面的方式實現：</p><div><pre><code><span style="color:#000000">add_linkgroups</span><strong>(</strong><span style="color:#ff00ff">"a"</span><strong>,</strong><span style="color:#ff00ff">"b"</span><strong>,</strong><strong>{</strong><span style="color:#000000">whole</span><strong>=</strong><strong>true</strong><strong>})</strong></code></pre></div><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">它會對應生成<span>&nbsp;</span><code>-Wl,--whole-archive -la -lb -Wl,--no-whole-archive</code><span>&nbsp;</span>鏈接選項。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">對於不支持的平台和編譯，會退化成<span>&nbsp;</span><code>-la -lb</code></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">另外，我們可以同時配置 group/whole：</p><div><pre><code><span style="color:#000000">add_linkgroups</span><strong>(</strong><span style="color:#ff00ff">"a"</span><strong>,</strong><span style="color:#ff00ff">"b"</span><strong>,</strong><strong>{</strong><span style="color:#000000">whole</span><strong>=</strong><strong>true</strong><strong>,</strong><span style="color:#000000">group</span><strong>=</strong><strong>true</strong><strong>})</strong></code></pre></div><h4>-Bstatic 支持</h4><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><code>-Bstatic</code><span>&nbsp;</span>也是用於編譯器（如 gcc）的選項，用於指示編譯器在鏈接時只使用靜態庫而不使用共享庫。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">更多信息，可以參考 gcc/clang 的文檔。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">在 xmake 中，我們可以通過下面的方式實現：</p><div><pre><code><span style="color:#000000">add_linkgroups</span><strong>(</strong><span style="color:#ff00ff">"a"</span><strong>,</strong><span style="color:#ff00ff">"b"</span><strong>,</strong><strong>{</strong><span style="color:#000000">static</span><strong>=</strong><strong>true</strong><strong>})</strong></code></pre></div><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">它會對應生成<span>&nbsp;</span><code>-Wl,-Bstatic -la -lb -Wl,-Bdynamic</code><span>&nbsp;</span>鏈接選項。</p><h3>單元測試支持</h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">新版本中，我們還增加了一個內置的測試命令：<code>xmake test</code>，我們只需要在需要測試的 target 上通過 add_tests 配置一些測試用例，就可以自動執行測試。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">即使當前 target 被設置成了<span>&nbsp;</span><code>set_default(false)</code>，在執行測試的時候，xmake 也還是會先自動編譯它們，然後自動運行所有的測試。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">我們可以先看個整體的例子，大概知道下它是怎麼樣子的。</p><div><pre><code><span style="color:#000000">add_rules</span><strong>(</strong><span style="color:#ff00ff">"mode.debug"</span><strong>,</strong><span style="color:#ff00ff">"mode.release"</span><strong>)</strong><span style="color:blue">for</span><span style="color:#000000">_</span><strong>,</strong><span style="color:#000000">file</span><span style="color:blue">in</span><span style="color:black">ipairs</span><strong>(</strong><span style="color:#000000">os</span><strong>.</strong><span style="color:#000000">files</span><strong>(</strong><span style="color:#ff00ff">"src/test_*.cpp"</span><strong>))</strong><span style="color:blue">do</span><span style="color:blue">local</span><span style="color:#000000">name</span><strong>=</strong><span style="color:#000000">path</span><strong>.</strong><span style="color:#000000">basename</span><strong>(</strong><span style="color:#000000">file</span><strong>)</strong><span style="color:#000000">target</span><strong>(</strong><span style="color:#000000">name</span><strong>)</strong><span style="color:#000000">set_kind</span><strong>(</strong><span style="color:#ff00ff">"binary"</span><strong>)</strong><span style="color:#000000">set_default</span><strong>(</strong><strong>false</strong><strong>)</strong><span style="color:#000000">add_files</span><strong>(</strong><span style="color:#ff00ff">"src/"</span><strong>..</strong><span style="color:#000000">name</span><strong>..</strong><span style="color:#ff00ff">".cpp"</span><strong>)</strong><span style="color:#000000">add_tests</span><strong>(</strong><span style="color:#ff00ff">"default"</span><strong>)</strong><span style="color:#000000">add_tests</span><strong>(</strong><span style="color:#ff00ff">"args"</span><strong>,</strong><strong>{</strong><span style="color:#000000">runargs</span><strong>=</strong><strong>{</strong><span style="color:#ff00ff">"foo"</span><strong>,</strong><span style="color:#ff00ff">"bar"</span><strong>}})</strong><span style="color:#000000">add_tests</span><strong>(</strong><span style="color:#ff00ff">"pass_output"</span><strong>,</strong><strong>{</strong><span style="color:#000000">trim_output</span><strong>=</strong><strong>true</strong><strong>,</strong><span style="color:#000000">runargs</span><strong>=</strong><span style="color:#ff00ff">"foo"</span><strong>,</strong><span style="color:#000000">pass_outputs</span><strong>=</strong><span style="color:#ff00ff">"hello foo"</span><strong>})</strong><span style="color:#000000">add_tests</span><strong>(</strong><span style="color:#ff00ff">"fail_output"</span><strong>,</strong><strong>{</strong><span style="color:#000000">fail_outputs</span><strong>=</strong><strong>{</strong><span style="color:#ff00ff">"hello2 .*"</span><strong>,</strong><span style="color:#ff00ff">"hello xmake"</span><strong>}})</strong><span style="color:blue">end</span></code></pre></div><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">這個例子，自動掃描源碼目錄下的<span>&nbsp;</span><code>test_*.cpp</code><span>&nbsp;</span>源文件，然後每個文件自動創建一個測試目標，它被設置成了<span>&nbsp;</span><code>set_default(false)</code>，也就是正常情況下，默認不會編譯它們。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">但是，如果執行<span>&nbsp;</span><code>xmake test</code><span>&nbsp;</span>進行測試，它們就會被自動編譯，然後測試運行，運行效果如下：</p><div><pre><code>ruki-2:test ruki<span style="color:black">$ </span>xmake <span style="color:black">test
</span>running tests ...
<strong>[</strong>  2%]: test_1/args        .................................... passed 7.000s
<strong>[</strong>  5%]: test_1/default     .................................... passed 5.000s
<strong>[</strong>  8%]: test_1/fail_output .................................... passed 5.000s
<strong>[</strong> 11%]: test_1/pass_output .................................... passed 6.000s
<strong>[</strong> 13%]: test_2/args        .................................... passed 7.000s
<strong>[</strong> 16%]: test_2/default     .................................... passed 6.000s
<strong>[</strong> 19%]: test_2/fail_output .................................... passed 6.000s
<strong>[</strong> 22%]: test_2/pass_output .................................... passed 6.000s
<strong>[</strong> 25%]: test_3/args        .................................... passed 7.000s
<strong>[</strong> 27%]: test_3/default     .................................... passed 7.000s
<strong>[</strong> 30%]: test_3/fail_output .................................... passed 6.000s
<strong>[</strong> 33%]: test_3/pass_output .................................... passed 6.000s
<strong>[</strong> 36%]: test_4/args        .................................... passed 6.000s
<strong>[</strong> 38%]: test_4/default     .................................... passed 6.000s
<strong>[</strong> 41%]: test_4/fail_output .................................... passed 5.000s
<strong>[</strong> 44%]: test_4/pass_output .................................... passed 6.000s
<strong>[</strong> 47%]: test_5/args        .................................... passed 5.000s
<strong>[</strong> 50%]: test_5/default     .................................... passed 6.000s
<strong>[</strong> 52%]: test_5/fail_output .................................... failed 6.000s
<strong>[</strong> 55%]: test_5/pass_output .................................... failed 5.000s
<strong>[</strong> 58%]: test_6/args        .................................... passed 7.000s
<strong>[</strong> 61%]: test_6/default     .................................... passed 6.000s
<strong>[</strong> 63%]: test_6/fail_output .................................... passed 6.000s
<strong>[</strong> 66%]: test_6/pass_output .................................... passed 6.000s
<strong>[</strong> 69%]: test_7/args        .................................... failed 6.000s
<strong>[</strong> 72%]: test_7/default     .................................... failed 7.000s
<strong>[</strong> 75%]: test_7/fail_output .................................... failed 6.000s
<strong>[</strong> 77%]: test_7/pass_output .................................... failed 5.000s
<strong>[</strong> 80%]: test_8/args        .................................... passed 7.000s
<strong>[</strong> 83%]: test_8/default     .................................... passed 6.000s
<strong>[</strong> 86%]: test_8/fail_output .................................... passed 6.000s
<strong>[</strong> 88%]: test_8/pass_output .................................... failed 5.000s
<strong>[</strong> 91%]: test_9/args        .................................... passed 6.000s
<strong>[</strong> 94%]: test_9/default     .................................... passed 6.000s
<strong>[</strong> 97%]: test_9/fail_output .................................... passed 6.000s
<strong>[</strong>100%]: test_9/pass_output .................................... passed 6.000s

<span style="color:#8f5902">80% </span>tests passed, 7 tests failed out of 36, spent 0.242s
</code></pre></div><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><img alt="" src="https://tboox.org/assets/img/manual/xmake-test1.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">我們也可以執行<span>&nbsp;</span><code>xmake test -vD</code><span>&nbsp;</span>查看詳細的測試失敗的錯誤信息：</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><img alt="" src="https://tboox.org/assets/img/manual/xmake-test2.png" referrerpolicy="no-referrer"></p><h4>運行指定測試目標</h4><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">我們也可以指定運行指定 target 的某個測試：</p><div><pre><code><span style="color:#8f5902">$ </span>xmake <span style="color:black">test </span>targetname/testname
</code></pre></div><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">或者按模式匹配的方式，運行一個 target 的所有測試，或者一批測試：</p><div><pre><code><span style="color:#8f5902">$ </span>xmake <span style="color:black">test </span>targetname/<span style="color:blue">*</span><span style="color:#8f5902">$ </span>xmake <span style="color:black">test </span>targetname/foo<span style="color:blue">*</span></code></pre></div><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">也可以運行所有 target 的同名測試：</p><div><pre><code><span style="color:#8f5902">$ </span>xmake <span style="color:black">test</span><span style="color:blue">*</span>/testname
</code></pre></div><h4>並行化運行測試</h4><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">其實，默認就是並行化運行的，但是我們可以通過<span>&nbsp;</span><code>-jN</code><span>&nbsp;</span>調整運行的並行度。</p><div><pre><code><span style="color:#8f5902">$ </span>xmake <span style="color:black">test</span> -jN
</code></pre></div><h4>分組運行測試</h4><div><pre><code><span style="color:#8f5902">$ </span>xmake <span style="color:black">test</span> -g <span style="color:#ff00ff">"foo"</span><span style="color:#8f5902">$ </span>xmake <span style="color:black">test</span> -g <span style="color:#ff00ff">"foo*"</span></code></pre></div><h4>添加測試到目標（無參數）</h4><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">如果沒有配置任何參數，僅僅配置了測試名到<span>&nbsp;</span><code>add_tests</code>，那麼僅僅測試這個目標程序的是否會運行失敗，根據退出代碼來判斷是否通過測試。</p><div><pre><code>target("test")
    add_tests("testname")
</code></pre></div><h4>配置運行參數</h4><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">我們也可以通過<span>&nbsp;</span><code><span>{</span><span>runargs</span><span><span>&nbsp;</span></span><span>=</span><span><span>&nbsp;</span></span><span>{</span><span>"arg1"</span><span>,</span><span><span>&nbsp;</span></span><span>"arg2"</span><span>}}</span></code><span>&nbsp;</span>的方式，給<span>&nbsp;</span><code>add_tests</code><span>&nbsp;</span>配置指定測試需要運行的參數。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">另外，一個 target 可以同時配置多個測試用例，每個測試用例可獨立運行，互不衝突。</p><div><pre><code><span style="color:#000000">target</span><strong>(</strong><span style="color:#ff00ff">"test"</span><strong>)</strong><span style="color:#000000">add_tests</span><strong>(</strong><span style="color:#ff00ff">"testname"</span><strong>,</strong><strong>{</strong><span style="color:#000000">runargs</span><strong>=</strong><span style="color:#ff00ff">"arg1"</span><strong>})</strong><span style="color:#000000">add_tests</span><strong>(</strong><span style="color:#ff00ff">"testname"</span><strong>,</strong><strong>{</strong><span style="color:#000000">runargs</span><strong>=</strong><strong>{</strong><span style="color:#ff00ff">"arg1"</span><strong>,</strong><span style="color:#ff00ff">"arg2"</span><strong>}})</strong></code></pre></div><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">如果我們沒有配置 runargs 到<span>&nbsp;</span><code>add_tests</code>，那麼我們也會嘗試從被綁定的 target 中，獲取<span>&nbsp;</span><code>set_runargs</code><span>&nbsp;</span>設置的運行參數。</p><div><pre><code><span style="color:#000000">target</span><strong>(</strong><span style="color:#ff00ff">"test"</span><strong>)</strong><span style="color:#000000">add_tests</span><strong>(</strong><span style="color:#ff00ff">"testname"</span><strong>)</strong><span style="color:#000000">set_runargs</span><strong>(</strong><span style="color:#ff00ff">"arg1"</span><strong>,</strong><span style="color:#ff00ff">"arg2"</span><strong>)</strong></code></pre></div><h4>配置運行目錄</h4><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">我們也可以通過 rundir 設置測試運行的當前工作目錄，例如：</p><div><pre><code><span style="color:#000000">target</span><strong>(</strong><span style="color:#ff00ff">"test"</span><strong>)</strong><span style="color:#000000">add_tests</span><strong>(</strong><span style="color:#ff00ff">"testname"</span><strong>,</strong><strong>{</strong><span style="color:#000000">rundir</span><strong>=</strong><span style="color:#000000">os</span><strong>.</strong><span style="color:#000000">projectdir</span><strong>()})</strong></code></pre></div><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">如果我們沒有配置 rundir 到<span>&nbsp;</span><code>add_tests</code>，那麼我們也會嘗試從被綁定的 target 中，獲取<span>&nbsp;</span><code>set_rundir</code><span>&nbsp;</span>設置的運行目錄。</p><div><pre><code><span style="color:#000000">target</span><strong>(</strong><span style="color:#ff00ff">"test"</span><strong>)</strong><span style="color:#000000">add_tests</span><strong>(</strong><span style="color:#ff00ff">"testname"</span><strong>)</strong><span style="color:#000000">set_rundir</span><strong>(</strong><span style="color:#ff00ff">"$(projectdir)"</span><strong>)</strong></code></pre></div><h4>配置運行環境</h4><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">我們也可以通過 runenvs 設置一些運行時候的環境變量，例如：</p><div><pre><code><span style="color:#000000">target</span><strong>(</strong><span style="color:#ff00ff">"test"</span><strong>)</strong><span style="color:#000000">add_tests</span><strong>(</strong><span style="color:#ff00ff">"testname"</span><strong>,</strong><strong>{</strong><span style="color:#000000">runenvs</span><strong>=</strong><strong>{</strong><span style="color:#000000">LD_LIBRARY_PATH</span><strong>=</strong><span style="color:#ff00ff">"/lib"</span><strong>}})</strong></code></pre></div><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">如果我們沒有配置 runenvs 到<span>&nbsp;</span><code>add_tests</code>，那麼我們也會嘗試從被綁定的 target 中，獲取<span>&nbsp;</span><code>add_runenvs</code><span>&nbsp;</span>設置的運行環境。</p><div><pre><code><span style="color:#000000">target</span><strong>(</strong><span style="color:#ff00ff">"test"</span><strong>)</strong><span style="color:#000000">add_tests</span><strong>(</strong><span style="color:#ff00ff">"testname"</span><strong>)</strong><span style="color:#000000">add_runenvs</span><strong>(</strong><span style="color:#ff00ff">"LD_LIBRARY_PATH"</span><strong>,</strong><span style="color:#ff00ff">"/lib"</span><strong>)</strong></code></pre></div><h4>匹配輸出結果</h4><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">默認情況下，<code>xmake test</code><span>&nbsp;</span>會根據測試運行的退出代碼是否為 0，來判斷是否測試通過。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">當然，我們也可以通過配置測試運行的輸出結果是否滿足我們的指定的匹配模式，來判斷是否測試通過。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">主要通過這兩個參數控制：</p><table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#f8f8fd; border-bottom:2px solid #777777; border-collapse:collapse; border-top:2px solid #777777; color:#333333; font-family:&quot;Helvetica Neue&quot;,Helvetica,Arial,&quot;Microsoft YaHei&quot;,sans-serif; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; margin:8px 0px; orphans:2; text-align:start; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; word-spacing:0px"><tbody><tr><th style="text-align:left">參數</th><th style="text-align:left">説明</th></tr></tbody><tbody><tr><td>pass_outputs</td><td>如果輸出匹配，則測試通過</td></tr><tr><td>fail_outputs</td><td>如果輸出匹配，則測試失敗</td></tr></tbody></table><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">傳入<span>&nbsp;</span><code>pass_outputs</code><span>&nbsp;</span>和<span>&nbsp;</span><code>fail_outputs</code><span>&nbsp;</span>的是一個 lua 匹配模式的列表，但模式稍微做了一些簡化，比如對<span>&nbsp;</span><code>*</code><span>&nbsp;</span>的處理。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">如果要匹配成功，則測試通過，可以這麼配置：</p><div><pre><code><span style="color:#000000">target</span><strong>(</strong><span style="color:#ff00ff">"test"</span><strong>)</strong><span style="color:#000000">add_tests</span><strong>(</strong><span style="color:#ff00ff">"testname1"</span><strong>,</strong><strong>{</strong><span style="color:#000000">pass_outputs</span><strong>=</strong><span style="color:#ff00ff">"hello"</span><strong>})</strong><span style="color:#000000">add_tests</span><strong>(</strong><span style="color:#ff00ff">"testname2"</span><strong>,</strong><strong>{</strong><span style="color:#000000">pass_outputs</span><strong>=</strong><span style="color:#ff00ff">"hello *"</span><strong>})</strong><span style="color:#000000">add_tests</span><strong>(</strong><span style="color:#ff00ff">"testname3"</span><strong>,</strong><strong>{</strong><span style="color:#000000">pass_outputs</span><strong>=</strong><strong>{</strong><span style="color:#ff00ff">"hello"</span><strong>,</strong><span style="color:#ff00ff">"hello *"</span><strong>}})</strong></code></pre></div><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">如果要匹配成功，則測試失敗，可以這麼配置：</p><div><pre><code><span style="color:#000000">target</span><strong>(</strong><span style="color:#ff00ff">"test"</span><strong>)</strong><span style="color:#000000">add_tests</span><strong>(</strong><span style="color:#ff00ff">"testname1"</span><strong>,</strong><strong>{</strong><span style="color:#000000">fail_outputs</span><strong>=</strong><span style="color:#ff00ff">"hello"</span><strong>})</strong><span style="color:#000000">add_tests</span><strong>(</strong><span style="color:#ff00ff">"testname2"</span><strong>,</strong><strong>{</strong><span style="color:#000000">fail_outputs</span><strong>=</strong><span style="color:#ff00ff">"hello *"</span><strong>})</strong><span style="color:#000000">add_tests</span><strong>(</strong><span style="color:#ff00ff">"testname3"</span><strong>,</strong><strong>{</strong><span style="color:#000000">fail_outputs</span><strong>=</strong><strong>{</strong><span style="color:#ff00ff">"hello"</span><strong>,</strong><span style="color:#ff00ff">"hello *"</span><strong>}})</strong></code></pre></div><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">我們也可以同時配置它們：</p><div><pre><code><span style="color:#000000">target</span><strong>(</strong><span style="color:#ff00ff">"test"</span><strong>)</strong><span style="color:#000000">add_tests</span><strong>(</strong><span style="color:#ff00ff">"testname"</span><strong>,</strong><strong>{</strong><span style="color:#000000">pass_outputs</span><strong>=</strong><span style="color:#ff00ff">"foo"</span><strong>,</strong><span style="color:#000000">fail_outputs</span><strong>=</strong><span style="color:#ff00ff">"hello"</span><strong>})</strong></code></pre></div><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">由於一些測試輸出的結果，尾部會有一些換行什麼的空白字符，幹擾匹配模式，我們可以再配置<span>&nbsp;</span><code>trim_output = true</code>，先截斷空白字符後，再做匹配。</p><div><pre><code><span style="color:#000000">target</span><strong>(</strong><span style="color:#ff00ff">"test"</span><strong>)</strong><span style="color:#000000">add_tests</span><strong>(</strong><span style="color:#ff00ff">"testname"</span><strong>,</strong><strong>{</strong><span style="color:#000000">trim_output</span><strong>=</strong><strong>true</strong><strong>,</strong><span style="color:#000000">pass_outputs</span><strong>=</strong><span style="color:#ff00ff">"foo"</span><strong>,</strong><span style="color:#000000">fail_outputs</span><strong>=</strong><span style="color:#ff00ff">"hello"</span><strong>})</strong></code></pre></div><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">我們還可以配置<span>&nbsp;</span><code><span>{</span><span>plain</span><span><span>&nbsp;</span></span><span>=</span><span><span>&nbsp;</span></span><span>true</span><span>}</span></code><span>&nbsp;</span>是禁用 lua 模式匹配，僅僅做最基礎的平坦文本匹配。</p><div><pre><code><span style="color:#000000">target</span><strong>(</strong><span style="color:#ff00ff">"test"</span><strong>)</strong><span style="color:#000000">add_tests</span><strong>(</strong><span style="color:#ff00ff">"testname"</span><strong>,</strong><strong>{</strong><span style="color:#000000">plain</span><strong>=</strong><strong>true</strong><strong>,</strong><span style="color:#000000">pass_outputs</span><strong>=</strong><span style="color:#ff00ff">"foo"</span><strong>,</strong><span style="color:#000000">fail_outputs</span><strong>=</strong><span style="color:#ff00ff">"hello"</span><strong>})</strong></code></pre></div><h4>配置測試組</h4><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">我們也可以通過<span>&nbsp;</span><code>group = "foo"</code><span>&nbsp;</span>來配置一個測試組，進行分組測試：</p><div><pre><code><span style="color:#000000">target</span><strong>(</strong><span style="color:#ff00ff">"test"</span><strong>)</strong><span style="color:#000000">add_tests</span><strong>(</strong><span style="color:#ff00ff">"testname1"</span><strong>,</strong><strong>{</strong><span style="color:#000000">group</span><strong>=</strong><span style="color:#ff00ff">"foo"</span><strong>})</strong><span style="color:#000000">add_tests</span><strong>(</strong><span style="color:#ff00ff">"testname2"</span><strong>,</strong><strong>{</strong><span style="color:#000000">group</span><strong>=</strong><span style="color:#ff00ff">"foo"</span><strong>})</strong><span style="color:#000000">add_tests</span><strong>(</strong><span style="color:#ff00ff">"testname3"</span><strong>,</strong><strong>{</strong><span style="color:#000000">group</span><strong>=</strong><span style="color:#ff00ff">"bar"</span><strong>})</strong><span style="color:#000000">add_tests</span><strong>(</strong><span style="color:#ff00ff">"testname4"</span><strong>,</strong><strong>{</strong><span style="color:#000000">group</span><strong>=</strong><span style="color:#ff00ff">"bae"</span><strong>})</strong></code></pre></div><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">其中 testname1/testname2 是一個組 foo，另外兩個是在另外一個組。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">然後，我們就可以使用<span>&nbsp;</span><code>xmake test -g groupname</code><span>&nbsp;</span>來進行分組測試了。</p><div><pre><code><span style="color:#8f5902">$ </span>xmake <span style="color:black">test</span> -g <span style="color:#ff00ff">"foo"</span><span style="color:#8f5902">$ </span>xmake <span style="color:black">test</span> -g <span style="color:#ff00ff">"foo*"</span></code></pre></div><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">!&gt; 運行分組，也是支持模式匹配的。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">另外，如果沒有設置<span>&nbsp;</span><code>group</code><span>&nbsp;</span>參數給<span>&nbsp;</span><code>add_tests</code>，我們也可以默認獲取綁定到 target 的組名。</p><div><pre><code><span style="color:#000000">target</span><strong>(</strong><span style="color:#ff00ff">"test"</span><strong>)</strong><span style="color:#000000">add_tests</span><strong>(</strong><span style="color:#ff00ff">"testname"</span><strong>)</strong><span style="color:#000000">set_group</span><strong>(</strong><span style="color:#ff00ff">"foo"</span><strong>)</strong></code></pre></div><h4>自定義測試腳本</h4><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">我們還新增了<span>&nbsp;</span><code>before_test</code>,<span>&nbsp;</span><code>on_test</code><span>&nbsp;</span>和<span>&nbsp;</span><code>after_test</code><span>&nbsp;</span>配置腳本，用户可以在 rule 和 target 域，自定義配置它們實現定製化的測試執行。</p><div><pre><code><span style="color:#000000">target</span><strong>(</strong><span style="color:#ff00ff">"test"</span><strong>)</strong><span style="color:#000000">on_test</span><strong>(</strong><span style="color:blue">function</span><strong>(</strong><span style="color:#000000">target</span><strong>,</strong><span style="color:#000000">opt</span><strong>)</strong><span style="color:black">print</span><strong>(</strong><span style="color:#000000">opt</span><strong>.</strong><span style="color:#000000">name</span><strong>,</strong><span style="color:#000000">opt</span><strong>.</strong><span style="color:#000000">runenvs</span><strong>,</strong><span style="color:#000000">opt</span><strong>.</strong><span style="color:#000000">runargs</span><strong>,</strong><span style="color:#000000">opt</span><strong>.</strong><span style="color:#000000">pass_outputs</span><strong>)</strong><em>-- do test</em><em>-- ...</em><em>-- passed</em><span style="color:blue">return</span><strong>true</strong><em>-- failied</em><span style="color:blue">return</span><strong>false</strong><strong>,</strong><span style="color:#000000">errors</span><span style="color:blue">end</span><strong>)</strong></code></pre></div><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">其中，opt 裏面可以獲取到所有傳入<span>&nbsp;</span><code>add_tests</code><span>&nbsp;</span>的參數，我們在 on_test 裏面自定義測試邏輯，然後返回 true 就是測試通過，返回 false 就是測試失敗，然後繼續返回測試失敗的錯誤信息。</p><h4>自動化構建</h4><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">由於測試目標在正常開發構建階段，通常是不需要被構建的，因此我們會設置<span>&nbsp;</span><code>set_default(false)</code>。</p><div><pre><code><span style="color:#000000">target</span><strong>(</strong><span style="color:#ff00ff">"test"</span><strong>)</strong><span style="color:#000000">add_tests</span><strong>(</strong><span style="color:#ff00ff">"testname"</span><strong>)</strong><span style="color:#000000">set_default</span><strong>(</strong><strong>false</strong><strong>)</strong></code></pre></div><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">但是運行<span>&nbsp;</span><code>xmake test</code><span>&nbsp;</span>進行測試時候，這些測試對應的 target 還是會被自動構建，確保能夠被運行。</p><div><pre><code><span style="color:#8f5902">$ </span>xmake <span style="color:black">test</span><strong>[</strong> 25%]: cache compiling.release src/main.cpp
<strong>[</strong> 50%]: linking.release <span style="color:black">test
</span>running tests ...
<strong>[</strong>100%]: <span style="color:black">test</span>/testname .................................... passed 6.000s

<span style="color:#8f5902">100% </span>tests passed, 0 tests failed out of 1, spent 0.006s
</code></pre></div><h4>首次測試失敗就終止</h4><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">默認情況下，<code>xmake test</code><span>&nbsp;</span>會等到所有測試都運行完，不管裏面有多少是沒通過的。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">而有時候，我們想在第一個測試沒通過，就直接中斷測試，那麼我們可以通過下面的配置啓用：</p><div><pre><code><span style="color:#000000">set_policy</span><strong>(</strong><span style="color:#ff00ff">"test.return_zero_on_failure"</span><strong>,</strong><strong>true</strong><strong>)</strong></code></pre></div><h4>測試失敗返回 0</h4><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">默認情況下，只要有一個測試沒通過，等到<span>&nbsp;</span><code>xmake test</code><span>&nbsp;</span>運行完成，它都會返回非 0 退出代碼，這對於一些 CI 環境非常有用，可以中斷 CI 的其他腳本繼續運行。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">然後觸發信號告訴 CI，我們需要生成測試報告和告警了。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">然後，如果我們想要壓制這種行為，可以強制將<span>&nbsp;</span><code>xmake test</code><span>&nbsp;</span>的退出代碼總是設置成 0。</p><div><pre><code><span style="color:#000000">set_policy</span><strong>(</strong><span style="color:#ff00ff">"test.return_zero_on_failure"</span><strong>,</strong><strong>true</strong><strong>)</strong></code></pre></div><h4>僅僅測試編譯</h4><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">有時候，我們僅僅想要測試代碼是否通過編譯，或者沒有通過編譯，不需要運行它們，那麼可以通過配置<span>&nbsp;</span><code>build_should_pass</code><span>&nbsp;</span>和<span>&nbsp;</span><code>build_should_fail</code><span>&nbsp;</span>來實現。</p><div><pre><code><span style="color:#000000">target</span><strong>(</strong><span style="color:#ff00ff">"test_10"</span><strong>)</strong><span style="color:#000000">set_kind</span><strong>(</strong><span style="color:#ff00ff">"binary"</span><strong>)</strong><span style="color:#000000">set_default</span><strong>(</strong><strong>false</strong><strong>)</strong><span style="color:#000000">add_files</span><strong>(</strong><span style="color:#ff00ff">"src/compile.cpp"</span><strong>)</strong><span style="color:#000000">add_tests</span><strong>(</strong><span style="color:#ff00ff">"compile_fail"</span><strong>,</strong><strong>{</strong><span style="color:#000000">build_should_fail</span><strong>=</strong><strong>true</strong><strong>})</strong><span style="color:#000000">target</span><strong>(</strong><span style="color:#ff00ff">"test_11"</span><strong>)</strong><span style="color:#000000">set_kind</span><strong>(</strong><span style="color:#ff00ff">"binary"</span><strong>)</strong><span style="color:#000000">set_default</span><strong>(</strong><strong>false</strong><strong>)</strong><span style="color:#000000">add_files</span><strong>(</strong><span style="color:#ff00ff">"src/compile.cpp"</span><strong>)</strong><span style="color:#000000">add_tests</span><strong>(</strong><span style="color:#ff00ff">"compile_pass"</span><strong>,</strong><strong>{</strong><span style="color:#000000">build_should_pass</span><strong>=</strong><strong>true</strong><strong>})</strong></code></pre></div><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">這通常用於一些測試代碼中帶有<span>&nbsp;</span><code>static_assert</code><span>&nbsp;</span>的場景，例如：</p><div><pre><code><span style="color:blue">template</span><strong>&lt;</strong><span style="color:blue">typename</span><span style="color:#000000">T</span><strong>&gt;</strong><span style="color:blue">bool</span><span style="color:#000000">foo</span><strong>(</strong><span style="color:#000000">T</span><span style="color:#000000">val</span><strong>)</strong><strong>{</strong><span style="color:blue">if</span><span style="color:blue">constexpr</span><strong>(</strong><span style="color:#000000">std</span><strong>::</strong><span style="color:#000000">is_same_v</span><strong>&lt;</strong><span style="color:#000000">T</span><strong>,</strong><span style="color:blue">int</span><strong>&gt;</strong><strong>)</strong><strong>{</strong><span style="color:#000000">printf</span><strong>(</strong><span style="color:#ff00ff">"int!</span><span style="color:#ff00ff">\n</span><span style="color:#ff00ff">"</span><strong>);</strong><strong>}</strong><span style="color:blue">else</span><span style="color:blue">if</span><span style="color:blue">constexpr</span><strong>(</strong><span style="color:#000000">std</span><strong>::</strong><span style="color:#000000">is_same_v</span><strong>&lt;</strong><span style="color:#000000">T</span><strong>,</strong><span style="color:blue">float</span><strong>&gt;</strong><strong>)</strong><strong>{</strong><span style="color:#000000">printf</span><strong>(</strong><span style="color:#ff00ff">"float!</span><span style="color:#ff00ff">\n</span><span style="color:#ff00ff">"</span><strong>);</strong><strong>}</strong><span style="color:blue">else</span><strong>{</strong><span style="color:blue">static_assert</span><strong>(</strong><span style="color:black">false</span><strong>,</strong><span style="color:#ff00ff">"unsupported type"</span><strong>);</strong><strong>}</strong><strong>}</strong><span style="color:blue">int</span><span style="color:#000000">main</span><strong>(</strong><span style="color:blue">int</span><strong>,</strong><span style="color:blue">char</span><strong>**</strong><strong>)</strong><strong>{</strong><span style="color:#000000">foo</span><strong>(</strong><span style="color:#ff00ff">"BAD"</span><strong>);</strong><span style="color:blue">return</span><strong>0</strong><strong>;</strong><strong>}</strong></code></pre></div><h4>配置額外的代碼編譯</h4><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">我們還可以在配置測試用例的時候，對每個測試配置額外需要編譯的代碼，以及一些宏定義，實現內聯測試。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">xmake 會為每個測試單獨編譯一個獨立的可執行程序去運行它，但這並不會影響到 target 在生產環境的編譯結果。</p><div><pre><code><span style="color:#000000">target</span><strong>(</strong><span style="color:#ff00ff">"test_13"</span><strong>)</strong><span style="color:#000000">set_kind</span><strong>(</strong><span style="color:#ff00ff">"binary"</span><strong>)</strong><span style="color:#000000">set_default</span><strong>(</strong><strong>false</strong><strong>)</strong><span style="color:#000000">add_files</span><strong>(</strong><span style="color:#ff00ff">"src/test_1.cpp"</span><strong>)</strong><span style="color:#000000">add_tests</span><strong>(</strong><span style="color:#ff00ff">"stub_1"</span><strong>,</strong><strong>{</strong><span style="color:#000000">files</span><strong>=</strong><span style="color:#ff00ff">"tests/stub_1.cpp"</span><strong>,</strong><span style="color:#000000">defines</span><strong>=</strong><span style="color:#ff00ff">"STUB_1"</span><strong>})</strong><span style="color:#000000">target</span><strong>(</strong><span style="color:#ff00ff">"test_14"</span><strong>)</strong><span style="color:#000000">set_kind</span><strong>(</strong><span style="color:#ff00ff">"binary"</span><strong>)</strong><span style="color:#000000">set_default</span><strong>(</strong><strong>false</strong><strong>)</strong><span style="color:#000000">add_files</span><strong>(</strong><span style="color:#ff00ff">"src/test_2.cpp"</span><strong>)</strong><span style="color:#000000">add_tests</span><strong>(</strong><span style="color:#ff00ff">"stub_2"</span><strong>,</strong><strong>{</strong><span style="color:#000000">files</span><strong>=</strong><span style="color:#ff00ff">"tests/stub_2.cpp"</span><strong>,</strong><span style="color:#000000">defines</span><strong>=</strong><span style="color:#ff00ff">"STUB_2"</span><strong>})</strong><span style="color:#000000">target</span><strong>(</strong><span style="color:#ff00ff">"test_15"</span><strong>)</strong><span style="color:#000000">set_kind</span><strong>(</strong><span style="color:#ff00ff">"binary"</span><strong>)</strong><span style="color:#000000">set_default</span><strong>(</strong><strong>false</strong><strong>)</strong><span style="color:#000000">add_files</span><strong>(</strong><span style="color:#ff00ff">"src/test_1.cpp"</span><strong>)</strong><span style="color:#000000">add_tests</span><strong>(</strong><span style="color:#ff00ff">"stub_n"</span><strong>,</strong><strong>{</strong><span style="color:#000000">files</span><strong>=</strong><span style="color:#ff00ff">"tests/stub_n*.cpp"</span><strong>,</strong><span style="color:#000000">defines</span><strong>=</strong><span style="color:#ff00ff">"STUB_N"</span><strong>})</strong></code></pre></div><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">以 doctest 為例，我們可以在不修改任何 main.cpp 的情況下，外置單元測試：</p><div><pre><code><span style="color:#000000">add_rules</span><strong>(</strong><span style="color:#ff00ff">"mode.debug"</span><strong>,</strong><span style="color:#ff00ff">"mode.release"</span><strong>)</strong><span style="color:#000000">add_requires</span><strong>(</strong><span style="color:#ff00ff">"doctest"</span><strong>)</strong><span style="color:#000000">target</span><strong>(</strong><span style="color:#ff00ff">"doctest"</span><strong>)</strong><span style="color:#000000">set_kind</span><strong>(</strong><span style="color:#ff00ff">"binary"</span><strong>)</strong><span style="color:#000000">add_files</span><strong>(</strong><span style="color:#ff00ff">"src/*.cpp"</span><strong>)</strong><span style="color:blue">for</span><span style="color:#000000">_</span><strong>,</strong><span style="color:#000000">testfile</span><span style="color:blue">in</span><span style="color:black">ipairs</span><strong>(</strong><span style="color:#000000">os</span><strong>.</strong><span style="color:#000000">files</span><strong>(</strong><span style="color:#ff00ff">"tests/*.cpp"</span><strong>))</strong><span style="color:blue">do</span><span style="color:#000000">add_tests</span><strong>(</strong><span style="color:#000000">path</span><strong>.</strong><span style="color:#000000">basename</span><strong>(</strong><span style="color:#000000">testfile</span><strong>),</strong><strong>{</strong><span style="color:#000000">files</span><strong>=</strong><span style="color:#000000">testfile</span><strong>,</strong><span style="color:#000000">remove_files</span><strong>=</strong><span style="color:#ff00ff">"src/main.cpp"</span><strong>,</strong><span style="color:#000000">languages</span><strong>=</strong><span style="color:#ff00ff">"c++11"</span><strong>,</strong><span style="color:#000000">packages</span><strong>=</strong><span style="color:#ff00ff">"doctest"</span><strong>,</strong><span style="color:#000000">defines</span><strong>=</strong><span style="color:#ff00ff">"DOCTEST_CONFIG_IMPLEMENT_WITH_MAIN"</span><strong>})</strong><span style="color:blue">end</span></code></pre></div><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">定義 DOCTEST_CONFIG_IMPLEMENT_WITH_MAIN 會引入額外的 main 入口函數，因此我們需要配置 remove_files 去移除已有的 main.cpp 文件。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">運行效果如下：</p><div><pre><code>ruki-2:doctest ruki<span style="color:black">$ </span>xmake <span style="color:black">test
</span>running tests ...
<strong>[</strong> 50%]: doctest/test_1 .................................... failed 0.009s
<strong>[</strong>100%]: doctest/test_2 .................................... passed 0.009s

<span style="color:#8f5902">50% </span>tests passed, 1 tests failed out of 2, spent 0.019s
ruki-2:doctest ruki<span style="color:black">$ </span>xmake <span style="color:black">test</span> -v
running tests ...
<strong>[</strong> 50%]: doctest/test_1 .................................... failed 0.026s
<strong>[</strong>doctest] doctest version is <span style="color:#ff00ff">"2.4.11"</span><strong>[</strong>doctest] run with <span style="color:#ff00ff">"--help"</span><span style="color:blue">for </span>options
<strong>===============================================================================</strong>
tests/test_1.cpp:7:
TEST CASE:  testing the factorial <span style="color:blue">function

</span>tests/test_1.cpp:8: ERROR: CHECK<strong>(</strong> factorial<strong>(</strong>1<strong>)</strong><strong>==</strong> 10 <strong>)</strong> is NOT correct!
  values: CHECK<strong>(</strong> 1 <strong>==</strong> 10 <strong>)</strong><strong>===============================================================================</strong><strong>[</strong>doctest] <span style="color:black">test </span>cases: 1 | 0 passed | 1 failed | 0 skipped
<strong>[</strong>doctest] assertions: 4 | 3 passed | 1 failed |
<strong>[</strong>doctest] Status: FAILURE!

run failed, <span style="color:black">exit </span>code: 1
<strong>[</strong>100%]: doctest/test_2 .................................... passed 0.010s

<span style="color:#8f5902">50% </span>tests passed, 1 tests failed out of 2, spent 0.038s
</code></pre></div><h4>測試動態庫</h4><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">通常，<code>add_tests</code><span>&nbsp;</span>僅用於對可執行程序進行運行測試，運行動態庫需要有一個額外的 main 主入口，因此我們需要額外配置一個可執行程序去加載它，例如：</p><div><pre><code><span style="color:#000000">target</span><strong>(</strong><span style="color:#ff00ff">"doctest_shared"</span><strong>)</strong><span style="color:#000000">set_kind</span><strong>(</strong><span style="color:#ff00ff">"shared"</span><strong>)</strong><span style="color:#000000">add_files</span><strong>(</strong><span style="color:#ff00ff">"src/foo.cpp"</span><strong>)</strong><span style="color:blue">for</span><span style="color:#000000">_</span><strong>,</strong><span style="color:#000000">testfile</span><span style="color:blue">in</span><span style="color:black">ipairs</span><strong>(</strong><span style="color:#000000">os</span><strong>.</strong><span style="color:#000000">files</span><strong>(</strong><span style="color:#ff00ff">"tests/*.cpp"</span><strong>))</strong><span style="color:blue">do</span><span style="color:#000000">add_tests</span><strong>(</strong><span style="color:#000000">path</span><strong>.</strong><span style="color:#000000">basename</span><strong>(</strong><span style="color:#000000">testfile</span><strong>),</strong><strong>{</strong><span style="color:#000000">kind</span><strong>=</strong><span style="color:#ff00ff">"binary"</span><strong>,</strong><span style="color:#000000">files</span><strong>=</strong><span style="color:#000000">testfile</span><strong>,</strong><span style="color:#000000">languages</span><strong>=</strong><span style="color:#ff00ff">"c++11"</span><strong>,</strong><span style="color:#000000">packages</span><strong>=</strong><span style="color:#ff00ff">"doctest"</span><strong>,</strong><span style="color:#000000">defines</span><strong>=</strong><span style="color:#ff00ff">"DOCTEST_CONFIG_IMPLEMENT_WITH_MAIN"</span><strong>})</strong><span style="color:blue">end</span></code></pre></div><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">通過<span>&nbsp;</span><code>kind = "binary"</code><span>&nbsp;</span>可以將每個單元測試改為 binary 可執行程序，並通過<span>&nbsp;</span><code>DOCTEST_CONFIG_IMPLEMENT_WITH_MAIN</code><span>&nbsp;</span>引入 main 入口函數。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">這樣就能實現動態庫目標中外置可運行的單元測試。</p><h3>新增類型大小檢測</h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">在先前的版本中，我們可以通過<span>&nbsp;</span><code>check_csnippets</code><span>&nbsp;</span>和<span>&nbsp;</span><code>output = true</code><span>&nbsp;</span>的方式，來實現類型檢測。</p><div><pre><code><span style="color:#000000">check_csnippets</span><strong>(</strong><span style="color:#ff00ff">"INT_SIZE"</span><strong>,</strong><span style="color:#ff00ff">'printf("%d", sizeof(int)); return 0;'</span><strong>,</strong><strong>{</strong><span style="color:#000000">output</span><strong>=</strong><strong>true</strong><strong>,</strong><span style="color:#000000">number</span><strong>=</strong><strong>true</strong><strong>})</strong></code></pre></div><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">但是這種方式，是通過嘗試運行測試代碼，然後獲取運行輸出結果，提取類型大小信息。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">這對於交叉編譯，就不適用了。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">在 2.8.5 版本中，我們新增了<span>&nbsp;</span><code>check_sizeof</code><span>&nbsp;</span>輔助接口，可以通過直接解析測試程序的二進制文件，提取類型大小信息。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">由於不需要運行測試，這種方式不僅可以支持交叉編譯，而且對檢測效率也有極大的提升，使用也更加的簡單。</p><div><pre><code><span style="color:#000000">includes</span><strong>(</strong><span style="color:#ff00ff">"@builtin/check"</span><strong>)</strong><span style="color:#000000">target</span><strong>(</strong><span style="color:#ff00ff">"test"</span><strong>)</strong><span style="color:#000000">set_kind</span><strong>(</strong><span style="color:#ff00ff">"static"</span><strong>)</strong><span style="color:#000000">add_files</span><strong>(</strong><span style="color:#ff00ff">"*.cpp"</span><strong>)</strong><span style="color:#000000">check_sizeof</span><strong>(</strong><span style="color:#ff00ff">"LONG_SIZE"</span><strong>,</strong><span style="color:#ff00ff">"long"</span><strong>)</strong><span style="color:#000000">check_sizeof</span><strong>(</strong><span style="color:#ff00ff">"STRING_SIZE"</span><strong>,</strong><span style="color:#ff00ff">"std::string"</span><strong>,</strong><strong>{</strong><span style="color:#000000">includes</span><strong>=</strong><span style="color:#ff00ff">"string"</span><strong>})</strong></code></pre></div><div><pre><code><span style="color:#8f5902">$ </span>xmake f -c
checking <span style="color:blue">for </span>LONG_SIZE ... 8
checking <span style="color:blue">for </span>STRING_SIZE ... 24
</code></pre></div><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">另外，我也可以通過<span>&nbsp;</span><code>target:check_sizeof</code><span>&nbsp;</span>在腳本域進行檢測。</p><h3>新增 Apple XROS 平台</h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">蘋果在 Xcode15 中新增了 visionOS 設備的構建支持，因此我們也在第一時間對其進行了支持，只需要執行：</p><div><pre><code><span style="color:#8f5902">$ </span>xmake f -p applexros
<span style="color:#8f5902">$ </span>xmake
</code></pre></div><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">就可以完成 visionOS/XROS 平台的構建。</p><h3>支持代碼合併</h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">最後，我們還提供了一個小工具模塊，它可以用於快速合併指定 target 裏面的所有 c/c++ 和，頭文件源碼到單個源文件。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">會生成類似 sqlite3.c 的這種單源碼文件，用户可以根據自己的實際需求來決定是否使用這個功能。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">而在做合併的時候，Xmake 會將內部 includes 頭文件全部展開，並生成 DAG，通過拓撲排序引入。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">默認它會處理所有 target 的合併，例如：</p><div><pre><code><span style="color:#8f5902">$ </span>xmake l cli.amalgamate
build/tbox.c generated!
build/tbox.h generated!
</code></pre></div><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">我們也可以指定合併需要的目標：</p><div><pre><code><span style="color:#8f5902">$ </span>xmake l cli.amalgamate tbox
build/tbox.c generated!
build/tbox.h generated!
</code></pre></div><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">也可以在合併每個源文件時候，指定一個自定義的 unique ID 的宏定義，來處理符號衝突問題。</p><div><pre><code><span style="color:#8f5902">$ </span>xmake l cli.amalgamate -u MY_UNIQUEU_ID
build/tbox.c generated!
build/tbox.h generated!
</code></pre></div><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">如果多個源文件內部有重名符號，就可以判斷這個<span>&nbsp;</span><code>MY_UNIQUEU_ID</code><span>&nbsp;</span>宏是否被定義，如果定義了，説明是在單文件中，就自己在源碼中處理下重名符號。</p><div><pre><code><em>#ifdef MY_UNIQUEU_ID
</em><em>// do some thing
</em><em>#endif
</em></code></pre></div><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">我們也可以指定輸出位置：</p><div><pre><code><span style="color:#8f5902">$ </span>xmake l cli.amalgamate -o /xxx
/xxx/tbox.c generated!
/xxx/tbox.h generated!
</code></pre></div><h3>新增 windows.manifest.uac 策略</h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">通過這個策略，我們可以快速方便的設置並啓用 Windows UAC。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">它支持以下幾個 Level：</p><ul><li>invoker: asInvoker</li><li>admin: requireAdministrator</li><li>highest: highestAvailable</li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">例如：</p><div><pre><code><span style="color:#000000">set_policy</span><strong>(</strong><span style="color:#ff00ff">"windows.manifest.uac"</span><strong>,</strong><span style="color:#ff00ff">"admin"</span><strong>)</strong></code></pre></div><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">它等價於設置</p><div><pre><code><span style="color:blue">if</span><span style="color:#000000">is_plat</span><strong>(</strong><span style="color:#ff00ff">"windows"</span><strong>)</strong><span style="color:blue">then</span><span style="color:#000000">add_ldflags</span><strong>(</strong><span style="color:#ff00ff">"/manifest:embed"</span><strong>,</strong><strong>{</strong><span style="color:#ff00ff">"/manifestuac:level='requireAdministrator' uiAccess='false'"</span><strong>},</strong><strong>{</strong><span style="color:#000000">force</span><strong>=</strong><strong>true</strong><strong>,</strong><span style="color:#000000">expand</span><strong>=</strong><strong>false</strong><strong>})</strong><span style="color:blue">end</span></code></pre></div><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">但是更加方便簡潔，並且不需要判斷平台，其他平台自動忽略。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">我們也可以通過<span>&nbsp;</span><code>windows.manifest.uac.ui</code><span>&nbsp;</span>策略，設置 Windows UAC 的 uiAccess，如果沒有設置它，默認是 false。</p><div><pre><code><span style="color:#000000">set_policy</span><strong>(</strong><span style="color:#ff00ff">"windows.manifest.uac.ui"</span><strong>,</strong><strong>true</strong><strong>)</strong></code></pre></div><h2>更新日誌</h2><h3>新特性</h3><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxmake-io%2Fxmake%2Fissues%2F1452" target="_blank">#1452</a>: 支持鏈接順序調整，鏈接組</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxmake-io%2Fxmake%2Fissues%2F1438" target="_blank">#1438</a>: 支持代碼 amalgamation</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxmake-io%2Fxmake%2Fissues%2F3381" target="_blank">#3381</a>: 添加<span>&nbsp;</span><code>xmake test</code><span>&nbsp;</span>支持</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxmake-io%2Fxmake%2Fissues%2F4276" target="_blank">#4276</a>: 支持自定義域 API</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxmake-io%2Fxmake%2Fpull%2F4286" target="_blank">#4286</a>: 添加 Apple XROS 支持</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxmake-io%2Fxmake%2Fissues%2F4345" target="_blank">#4345</a>: 支持檢測類型大小 sizeof</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxmake-io%2Fxmake%2Fpull%2F4369" target="_blank">#4369</a>: 添加 windows.manifest.uac 策略</li></ul><h3>改進</h3><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxmake-io%2Fxmake%2Fissues%2F4284" target="_blank">#4284</a>: 改進內置 includes 模塊</li></ul><h3>Bugs 修復</h3><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxmake-io%2Fxmake%2Fissues%2F4256" target="_blank">#4256</a>: 為 vsxmake 生成器修復 c++ modules intellisense</li></ul></div>
                                    ]]>
            </description>
            <pubDate>Tue, 07 Nov 2023 01:00:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/265506/xmake-v2-8-5</guid>
            <link>https://www.oschina.net/news/265506/xmake-v2-8-5</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[前端開源項目 Fes- Design Release v0.8.13]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h2><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FWeBankFinTech%2Ffes-design%2Fcompare%2Fv0.8.12...v0.8.13" target="_blank">0.8.13</a><span>&nbsp;</span>(2023-11-06)</h2><h3>Bug Fixes</h3><ul><li><strong>Draggable:</strong><span>&nbsp;</span>修復可同時拖拽多個元素、和不可放置時跨容器拖拽報錯的問題 (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FWeBankFinTech%2Ffes-design%2Fissues%2F494" target="_blank">#494</a>) (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FWeBankFinTech%2Ffes-design%2Fcommit%2F18839e5d9e33f39d50ad8ce70bd99b07fd794fa6" target="_blank">18839e5</a>)</li><li><strong>Form:</strong><span>&nbsp;</span>修復表單嵌套時必填項樣式設置的問題 (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FWeBankFinTech%2Ffes-design%2Fissues%2F499" target="_blank">#499</a>) (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FWeBankFinTech%2Ffes-design%2Fcommit%2F7827186a739fd3ff31efd2f27290bc68c9ae2a70" target="_blank">7827186</a>)</li><li><strong>Form:</strong><span>&nbsp;</span>異步表單校驗支持 (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FWeBankFinTech%2Ffes-design%2Fissues%2F496" target="_blank">#496</a>) (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FWeBankFinTech%2Ffes-design%2Fcommit%2F42798f253aa2229f6c8ac3255e20891c1ff93034" target="_blank">42798f2</a>)</li><li><strong>Modal:</strong><span>&nbsp;</span>解決無標題情況下，關閉按鈕不可點擊的問題 (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FWeBankFinTech%2Ffes-design%2Fissues%2F504" target="_blank">#504</a>) (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FWeBankFinTech%2Ffes-design%2Fcommit%2F359471783feda0475249e19950dfbb51193d2f33" target="_blank">3594717</a>)</li></ul><h3>Features</h3><ul><li>上傳組件 Upload 禁用樣式優化，表單項組件 FormItem 支持 align 配置項，及 支持多行文本展示 (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FWeBankFinTech%2Ffes-design%2Fissues%2F493" target="_blank">#493</a>) (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FWeBankFinTech%2Ffes-design%2Fcommit%2F896ac1761334b04b56d184c50edaaea3ff730ceb" target="_blank">896ac17</a>)</li><li><strong>Table:</strong><span>&nbsp;</span>增加 hover 行樣式、斑馬線條紋，配置項 (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FWeBankFinTech%2Ffes-design%2Fissues%2F502" target="_blank">#502</a>) (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FWeBankFinTech%2Ffes-design%2Fcommit%2F732dc5d74dc5aeb954f35e1589659c26b0f2129a" target="_blank">732dc5d</a>)</li><li><strong>Table:</strong><span>&nbsp;</span>展開行圖標，修改及增加 hover 態交互 (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FWeBankFinTech%2Ffes-design%2Fissues%2F501" target="_blank">#501</a>) (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FWeBankFinTech%2Ffes-design%2Fcommit%2Fe90d68300c2fd8be847f441445e1c15fc789438d" target="_blank">e90d683</a>)</li></ul></div>
                                    ]]>
            </description>
            <pubDate>Mon, 06 Nov 2023 09:53:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/265430/fes-design-0-8-13-released</guid>
            <link>https://www.oschina.net/news/265430/fes-design-0-8-13-released</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[DALL·E 3 繪圖來啦，開源 AI 聊天、繪圖軟件 AIdea 現已支持 DALL·E 3]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div><p style="color:inherit; margin-left:0; margin-right:0">昨晚 OpenAI 的開發者大會後開放了 DALL·E 3 的 API，今天花了一點時間在 AIdea 中增加了對 DALL·E 3 的支持。</p><blockquote><p style="color:inherit; margin-left:0; margin-right:0">簡單來説，AIdea 類似於 POE，它是一款集成了主流大語言模型以及繪圖模型的開源 APP。如果你還不知道它，那麼可以簡單看看這篇文章 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzA3NTU1NDk4Mg%3D%3D%26mid%3D2454663369%26idx%3D1%26sn%3Dfc5ae7e09e5da885fecbe90747900bc9%26chksm%3D88d55900bfa2d016578008ec30550acbab49cf9ed5cd0b454c3ce8d308ff7cc1ab9416637f19%23rd" target="_blank">花了小半年開發了一個 AI 套殼 APP，然而大勢已過，直接開源了</a>。</p><p style="color:inherit; margin-left:0; margin-right:0">AIdea 項目前後端所有代碼均採用 MIT 協議開源。</p></blockquote><img alt="operate-note" src="https://ssl.aicode.cc/ai-server/assets/broadcast/dalle-preview.jpg" referrerpolicy="no-referrer"><p>operate-note</p><img alt="image" src="https://ssl.aicode.cc/ai-server/assets/broadcast/dalle-preview-result.png" referrerpolicy="no-referrer"><p>image</p><p style="color:inherit; margin-left:0; margin-right:0">下載體驗地址</p><p style="color:inherit; margin-left:0; margin-right:0">https://aidea.aicode.cc/</p><blockquote><p style="color:inherit; margin-left:0; margin-right:0">注意：AIdea 項目前後端所有代碼均採用 MIT 協議開源，但是在線體驗服務並不免費（PS. 很多大語言模型每日都有免費使用次數）。</p></blockquote><p style="color:inherit; margin-left:0; margin-right:0">AIdea 是一款集成了主流大語言模型以及繪圖模型的 APP ， 採用 Flutter + Golang 開發，代碼完全開源，支持以下功能：</p><ul><li><span style="color:inherit">OpenAI 的 GPT-3.5 ，GPT-4 大語言模型</span></li><li><span style="color:inherit">Anthropic 的 Claude instant ，Claude 2.0 大語言模型</span></li><li><span style="color:inherit">國產模型：通義千問，文心一言，訊飛星火，商湯日日新，騰訊混元，百川 53B ，360 智腦</span></li><li><span style="color:inherit">開源模型：Llama2 ，ChatGLM2 ，AquilaChat 7B ，Bloomz 7B 等，後續還將開放更多</span></li><li><span style="color:inherit">文生圖、圖生圖、超分辨率、黑白圖片上色等功能，集成 Stable Diffusion 模型，支持 SDXL 1.0</span></li></ul><p style="color:inherit; margin-left:0; margin-right:0">Github 地址：</p><ul><li><span style="color:inherit">客户端（ Flutter ）： https://github.com/mylxsw/aidea</span></li><li><span style="color:inherit">服務端（ Golang ）： https://github.com/mylxsw/aidea-server</span></li></ul></div></div>
                                    ]]>
            </description>
            <pubDate>Mon, 06 Nov 2023 09:00:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/265412</guid>
            <link>https://www.oschina.net/news/265412</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[BackupSerenity V2.0 發佈 - 開源數據庫備份思路整合工具]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><strong><span style="color:#e74c3c">本次實現了在 Docker 中運行，將原有的底層相關環境捨去，直接在容器內運行，將原有 30min-1h 的部署過程，提升至 3min 內完成，大幅提升部署效率！</span></strong></p><p><span style="color:#e74c3c"><strong>只需要一條命令即可解決：具體參考</strong></span><a href="https://gitee.com/heike07code/Backup-tools/blob/V2.0/Doc/QuickStart.md"><span style="color:#e74c3c"><strong>Quick start 文檔</strong></span></a><span style="color:#e74c3c"><strong>：</strong></span></p><pre><span>docker pull heike07/backupserenit</span></pre><p>此版本更新如下：</p><h3>V2.0 版本發佈説明</h3><p><strong>新增功能：</strong></p><ol><li>新增判斷當前環境是否為 docker 的邏輯和函數</li><li>新增 backupserenity 控制主程序</li><li>實現 docker 容器化封裝，運行</li></ol><p><strong>修復錯誤功能：</strong></p><ol><li>去除容器內 crontab 定期任務邏輯</li><li>修復 docker exec 無法調度，提示 exit 1 的問題</li><li>解決 systemd 無法在容器中執行</li></ol><p>Gitee 詳情見項目 Readme :&nbsp;<a href="https://gitee.com/heike07code/Backup-tools/tree/V2.0">https://gitee.com/heike07code/Backup-tools/tree/V2.0</a></p><p>Github 詳情見項目 Readme :&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fheike-07%2FBackup-tools%2Ftree%2FV2.0" target="_blank">https://github.com/heike-07/Backup-tools/tree/V2.0</a></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 06 Nov 2023 06:59:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/265377</guid>
            <link>https://www.oschina.net/news/265377</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[HeidiSQL 12.6 發佈]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>HeidiSQL 12.6 現已<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.heidisql.com%2Fforum.php%3Ft%3D41419%26cookie_consent%3D1" target="_blank">發佈</a>。HeidiSQL 是一個功能非常強大的數據庫客户端軟件，採用 Delphi 開發，支持 Windows 操作系統。支持 MySQL、MariaDB、Percona Server 和微軟的 SQL Server。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">此版本具體更新內容如下：</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span><strong>3rd party updates：</strong></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmadshi.net%2F" target="_blank">將 madExcept</a>&nbsp;異常處理程序更新至 v5.1.3</li><li>升級到&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.embarcadero.com%2Fpress-releases%2Frad-studio-11-3-released" target="_blank">Delphi 編譯器版本 11.3</a></li><li>更新&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FJAM-Software%2FVirtual-TreeView" target="_blank">VirtualTrees</a>&nbsp;組件代碼至 v7.6.5a</li><li>從當前主分支更新&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FRRUZ%2Fvcl-styles-utils" target="_blank">vcl-styles-utils</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsqlite.org%2F" target="_blank">將 SQLite 庫</a>更新到 v3.44.0</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FHeidiSQL%2FHeidiSQL%2Fissues%2F1841" target="_blank">Issue #1841</a>：將 libpq-15.dll 使用的&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.openssl.org%2F" target="_blank">OpenSSL 庫更新到 v3.1.3</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.chiark.greenend.org.uk%2F%7Esgtatham%2Fputty%2F" target="_blank">將 plink</a>&nbsp;可執行文件更新到 v0.79</li></ul><p style="text-align:start"><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span><strong>新的東西：</strong></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FHeidiSQL%2FHeidiSQL%2Fissues%2F861" target="_blank">Issue #861</a>：所有結果網格中新的靜態行 id 列。使用會話背景顏色，並且可以隱藏。（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.heidisql.com%2Fscreenshots.php%3Fwhich%3Ddata" target="_blank">見截圖</a>）</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FHeidiSQL%2FHeidiSQL%2Fissues%2F750" target="_blank">Issue #750</a>：現在使用 2 個新的在線格式化程序進行 SQL 格式化：（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.heidisql.com%2Fscreenshots.php%3Fwhich%3Dreformat-sql" target="_blank">見截圖</a>） 
  <ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdoctrine%2Fsql-formatter" target="_blank">https://github.com/doctrine/sql-formatter</a>&nbsp;- 託管在 heidisql.com</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsqlformat.org%2F" target="_blank">https://sqlformat.org/</a></li></ul></li><li>在數據網格標題上添加上下文菜單，其中包含「Query exact row count」項，可在底層表中查詢<code><span><span style="color:royalblue"><strong>SELECT</strong></span></span>&nbsp;<span><span style="color:teal">COUNT</span></span>(*)...</code></li><li>支持單行主選項卡，並支持每個鼠標滾輪選項卡滾動</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FHeidiSQL%2FHeidiSQL%2Fissues%2F940" target="_blank">Issue #940</a>：支持刪除首選項中每個按鈕的快捷方式。（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.heidisql.com%2Fscreenshots.php%3Fwhich%3Dshortcut-customizer" target="_blank">見截圖</a>）</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FHeidiSQL%2FHeidiSQL%2Fissues%2F1619" target="_blank">Issue #1619</a>：使用與保存查詢文件相同的熱鍵 (&nbsp;<code>Ctrl+S</code>) 來保存 table/trigger/...</li></ul><p style="text-align:start"><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span><strong>錯誤修復和增強功能：</strong></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FHeidiSQL%2FHeidiSQL%2Fissues%2F1863" target="_blank">Issue #1863</a>：&nbsp;再次修復了與 Wine v8.18 的兼容性，並可能與更多版本兼容</li><li>非活動選項卡上的灰度圖標，以獲得更清晰的用户界面（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.heidisql.com%2Fscreenshots.php%3Fwhich%3Ddata" target="_blank">見屏幕截圖</a>）</li><li>用於關閉選項卡的 double-click 和 middle-click 選項（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.heidisql.com%2Fscreenshots.php%3Fwhich%3Dfiles-and-tabs-preferences" target="_blank">見屏幕截圖</a>）</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FHeidiSQL%2FHeidiSQL%2Fissues%2F1854" target="_blank">Issue＃1854</a>：修復當存在具有有效查詢的註釋時網格更新中使用的不正確的表名稱</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FHeidiSQL%2FHeidiSQL%2Fissues%2F279" target="_blank">Issue#279</a>：PosgreSQL 中支持串行列，這與 MySQL 上的 auto_increment 不同</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FHeidiSQL%2FHeidiSQL%2Fissues%2F872" target="_blank">Issue #872</a>：修復打開列定義為<code>INVISIBLE</code>的表時發生崩潰的問題，並確保選擇此類列並在數據網格中可見</li><li>翻譯修復：刪除各種未使用的字符串，修復一些拼寫錯誤的字符串，添加一些缺失的字符串</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FHeidiSQL%2FHeidiSQL%2Fissues%2F1850" target="_blank">Issue #1850</a>：當字段包含高位 UTF-8 字符（如表情符號）時，彈出文本編輯器中的文本太短</li><li>添加缺失的<code>PMYSQL_LENGTHS</code>類型，並將其用於<code><span><span style="color:teal">mysql_fetch_lengths</span></span>()</code>的結果。修復了一個自 2009 年起就已出現的問題</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FHeidiSQL%2FHeidiSQL%2Fissues%2F1640" target="_blank">Issue＃1640</a>：通過計時器事件關閉/釋放選項卡和按鈕，修復查詢選項卡關閉按鈕的 MouseUp 事件中的崩潰</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FHeidiSQL%2FHeidiSQL%2Fissues%2F752" target="_blank">Issue #752</a>：修復在 MySQL 8 上導出 SQL 時覆蓋視圖輔助表導致 "xyz is not view"的問題</li><li>鍵盤快捷鍵：允許用户接受每個 ignore button 的重複分配。（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.heidisql.com%2Fscreenshots.php%3Fwhich%3Dshortcut-customizer" target="_blank">見截圖</a>）</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FHeidiSQL%2FHeidiSQL%2Fissues%2F1826" target="_blank">Issue #1826</a>：修復 MySQL 8 上<code><span><span style="color:royalblue"><strong>DEFAULT</strong></span></span></code>子句中沒有括號的<code><span><span style="color:royalblue"><strong>ON</strong></span></span>&nbsp;<span><span style="color:royalblue"><strong>UPDATE</strong></span></span></code>部分，僅初始<code><span><span style="color:royalblue"><strong>DEFAULT</strong></span></span></code>值需要括號。</li><li>修復了在上傳的崩潰報告中發現的許多不同的崩潰： 
  <ul><li>修復遵循外鍵值後的崩潰問題</li><li>修復搜索/替換對話框中偶發的崩潰「Cannot make a visible window modal」</li><li>修復了在嘗試獲取當前剪貼板文本時出現的崩潰問題</li><li>CSV scanner：修復無法打開所選文件名時的崩潰問題</li><li>使用新的&nbsp;class helper .TrySetFocus 修復對 [TWinControl].SetFocus 的各種調用中的偶發崩潰</li><li>修復 highlighter customizer 中的崩潰（只要未選擇任何屬性）</li><li>修復 TMainForm.DBtreeFocusChanged:124 中的 EAccessViolation 問題</li><li>修復了嘗試停止當前查詢且 helper connection 由於某種原因無法連接時崩潰的問題。</li><li>修復 TDBObject.GetImageIndex:6 中的 EAccessViolation</li><li>修復 TMainForm.DBtreeGetText:12 中的 EAccessViolation</li><li>捕獲在 ForceDirectories() 的罕見情況下發生的不同 EInOutError 異常</li><li>修復 TMainForm.AnyGridGetText 中的 EAccessViolation:5</li><li>修復了用户在非 MySQL 會話中單擊維護對話框上的「Help」按鈕時崩潰的問題</li><li>在 RunQueryFile 中捕獲額外的 EReadError 崩潰</li><li>MSSQL：當無法列出 provider names 時捕獲 OLE 異常</li><li>修復通過 SSH 隧道連接時 TMainForm.DBtreeGetText 發生的崩潰</li><li>修復連接到另一個會話時使用 focused Host tab 發生的偶發崩潰</li><li>警告用户在加載編碼設置為「auto-detect」的 (csv) 文件時可能會丟失數據。</li></ul></li></ul><p><span style="background-color:#ffffff; color:#333333">詳情可</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.heidisql.com%2Fforum.php%3Ft%3D41419%26cookie_consent%3D1" target="_blank">查看發佈公告</a><span style="background-color:#ffffff; color:#333333">。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 06 Nov 2023 06:12:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/265361/heidisql-12-6-released</guid>
            <link>https://www.oschina.net/news/265361/heidisql-12-6-released</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Kotlin Multiplatform 已穩定，可用於生產環境]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Kotlin Multiplatform (KMP) 是一項由 JetBrains 構建的開源技術，使開發者能夠在跨平台共享代碼的同時保留原生編程的優勢。</p><p>現在，這項技術取得了備受期待的進展，<strong><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.jetbrains.com%2Fzh-hans%2Fkotlin%2F2023%2F11%2Fkotlin-multiplatform-stable%2F" target="_blank">已經穩定</a></u>並完全做好了投入生產環境的準備</strong>。</p><p>根據介紹，Kotlin Multiplatform (KMP) 以靈活性和適應性為設計核心，模糊了跨平台與原生開發之間的界限。它使開發者可以重用盡可能多的代碼，根據需要編寫原生代碼，並將共享的 Kotlin 代碼無縫集成到任何項目中。</p><p>Kotlin Multiplatform 技術的核心由許多部分組成，例如編譯器支持、語言功能、庫 API、IDE、構建工具等。 這些部分覆蓋了最熱門的代碼共享用例，並且在 Kotlin 1.9.20 中得到穩定。&nbsp;</p><p>除了核心之外，KMP 還有一些仍在繼續開發的更高級部分。 expect/actual 類就是此類功能的一個示例（請勿與 expect/actual_函數_混淆，它們在 Kotlin 1.9.20 中已完全穩定）。 此類功能被明確標記為非穩定，Kotlin 會在您使用它們時發出通知。 請注意實驗性警告和相應文檔，以便明智地決定是否要在項目中使用此類功能。</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 06 Nov 2023 06:12:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/265360/kotlin-multiplatform-stable</guid>
            <link>https://www.oschina.net/news/265360/kotlin-multiplatform-stable</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[新一代國產 ORM 框架，sqltoy-orm 5.2.77 發版，優化同比環比計算！]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>開源地址：</strong></p><ul><li>github:&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fchenrenfei%2Fsagacity-sqltoy" target="_blank">https://github.com/sagframe/sagacity-sqltoy</a></li><li>gitee:&nbsp;<a href="https://gitee.com/sagacity/sagacity-sqltoy">https://gitee.com/sagacity/sagacity-sqltoy</a></li><li>idea 插件 (可直接在 idea 中檢索安裝):&nbsp;&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fthreefish%2Fsqltoy-idea-plugins" target="_blank">https://github.com/threefish/sqltoy-idea-plugins</a></li><li>sqltoy 腳手架項目：https://gitee.com/momoljw/sss-rbac-admin</li><li>sqltoy lambda 項目:&nbsp;https://gitee.com/gzghde/sqltoy-plus</li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>更新內容</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="background-color:#ffffff; color:#1f2328">1、優化環比計算默認值設置</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">2、優化分頁總記錄數的邏輯 (5.2.75 版本)</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>s</strong><strong>qltoy-orm 是 JPA 和超強查詢的融合體</strong></p><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsagframe%2Fsagacity-sqltoy%23jpa%25E9%2583%25A8%25E5%2588%2586" target="_blank">JPA 部分</a></h3><ul><li>類似 JPA 的對象化 CRUD、對象級聯加載和新增、更新</li><li>強化 update 操作，提供彈性字段修改能力，不同於 hibernate 先 load 後修改，而是一次數據庫交互完成修改，確保了高併發場景下數據的準確性</li><li>改進了級聯修改，提供了先刪除或者先置無效，再覆蓋的操作選項</li><li>增加了 updateFetch、updateSaveFetch 功能，強化針對強事務高併發場景的處理，類似庫存台賬、資金台賬，實現一次數據庫交互，完成鎖查詢、不存在則插入、存在則修改，並返回修改後的結果</li><li>增加了樹結構封裝，便於統一不同數據庫樹型結構數據的遞歸查詢</li><li>支持分庫分表、支持多種主鍵策略 (額外支持基於 redis 的產生特定規則的業務主鍵)、加密存儲、數據版本校驗</li><li>提供了公共屬性賦值 (創建人、修改人、創建時間、修改時間、租户)、擴展類型處理等</li><li>提供了多租户統一過濾和賦值、提供了數據權限參數帶入和越權校驗</li></ul><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsagframe%2Fsagacity-sqltoy%23%25E6%259F%25A5%25E8%25AF%25A2%25E9%2583%25A8%25E5%2588%2586" target="_blank">查詢部分</a></h3><ul><li>極為直觀的 sql 編寫方式，便於從客户端 &lt;--&gt; 代碼，雙向快速遷移，便於後期變更維護</li><li>支持緩存翻譯、反向緩存匹配 key 代替 like 模糊查詢</li><li>提供了跨數據庫支持能力：不同數據庫的函數自動轉換適配，多方言 sql 根據實際環境自動匹配、多數據庫同步測試，大幅提升了產品化能力</li><li>提供了取 top 記錄、隨機記錄等特殊場景的查詢功能</li><li>提供了最強大的分頁查詢機制：1) 自動優化 count 語句；2) 提供基於緩存的分頁優化，避免每次都執行 count 查詢；3) 提供了獨具特色的快速分頁；4) 提供了並行分頁</li><li>提供了分庫分表能力</li><li>提供了在管理類項目中極為價值的：分組彙總計算、行列轉換 (行轉列、列轉行)、同比環比、樹形排序、樹形彙總，相關算法自然集成</li><li>提供了基於查詢的層次化數據結構封裝</li><li>提供了大量輔助功能：數據脱敏、格式化、條件參數預處理等</li></ul><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsagframe%2Fsagacity-sqltoy%23%25E6%2594%25AF%25E6%258C%2581%25E5%25A4%259A%25E7%25A7%258D%25E6%2595%25B0%25E6%258D%25AE%25E5%25BA%2593" target="_blank">支持多種數據庫</a></h3><ul><li>常規的 mysql、oracle、db2、postgresql、 sqlserver、dm、kingbase、sqlite、h2、 oceanBase、polardb、guassdb、tidb</li><li>支持分佈式 olap 數據庫: clickhouse、StarRocks、greenplum、impala (kudu)</li><li>支持 elasticsearch、mongodb</li><li>所有基於 sql 和 jdbc 各類數據庫查詢</li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>sqltoy 特點介紹：</strong></p><ul><li><strong>sqltoy 的核心構建思想</strong></li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><img alt="" height="868" src="https://oscimg.oschina.net/oscnet/up-a385d72ceb030d705e8e5803ca3cd4c09a1.png" width="1136" referrerpolicy="no-referrer"></p><ul><li><strong>sqltoy 的對比 mybatis (plus) 的核心點：查詢語句編寫、可閲讀性、可維護性</strong></li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong><img alt="" height="988" src="https://oscimg.oschina.net/oscnet/up-93bc88150c80aed200b6ff7d95c9c7bd7df.png" width="1797" referrerpolicy="no-referrer"></strong></p><ul><li><strong>對象化 crud 是基礎，但 sqltoy 有針對性的改進：update、updateSaveFetch、updateFetch 等</strong></li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><img alt="" height="845" src="https://oscimg.oschina.net/oscnet/up-6b8e8204061eec3d2096a50e9899548351e.png" width="1745" referrerpolicy="no-referrer"></p><ul><li><strong>sqltoy 的緩存翻譯，大幅減少表關聯簡化 sql，讓你的查詢性能成幾何級提升</strong></li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="闡述 sqltoy 為什麼秒殺 mybatis(plus)" src="https://p3-tt.byteimg.com/origin/pgc-image/85287e14aa3e428fbabe297472596455?from=pc" referrerpolicy="no-referrer"></p><ul><li><strong>極致的分頁，同樣幫助你實現查詢的性能大幅提升</strong></li></ul><ol><li>快速分頁:@fast () 實現先取單頁數據然後再關聯查詢，極大提升速度</li><li>分頁優化器:page-optimize 讓分頁查詢由兩次變成 1.3~1.5 次 (用緩存實現相同查詢條件的總記錄數量在一定週期內無需重複查詢</li><li>sqltoy 的分頁取總記錄的過程不是簡單的 select count (1) from (原始 sql)；而是智能判斷是否變成:select count (1) from 'from 後語句 '， 並自動剔除最外層的 order by</li><li>sqltoy 支持並行查詢：parallel="true"，同時查詢總記錄數和單頁數據，大幅提升性能</li></ol><div><img alt="闡述 sqltoy 為什麼秒殺 mybatis(plus)" src="https://p6-tt.byteimg.com/origin/pgc-image/3d5f7094da154671985dd390f56f6302?from=pc" referrerpolicy="no-referrer"></div><div>
 &nbsp;
</div><ul><li><strong>便利的跨數據庫統計計算：數據旋轉</strong></li></ul><div><img alt="闡述 sqltoy 為什麼秒殺 mybatis(plus)" src="https://p1-tt.byteimg.com/origin/pgc-image/949bc75b5c53441c98284dae2bed11fe?from=pc" referrerpolicy="no-referrer"></div><ul><li><strong>便利的跨數據庫統計計算：無限極分組統計 (含彙總求平均)</strong></li></ul><div><img alt="闡述 sqltoy 為什麼秒殺 mybatis(plus)" src="https://p1-tt.byteimg.com/origin/pgc-image/f5edc52adbbe4a1ca327d9a9b0c5d64c?from=pc" referrerpolicy="no-referrer"></div><ul><li><strong>便利的跨數據庫統計計算：同比環比</strong></li></ul><div><img alt="闡述 sqltoy 為什麼秒殺 mybatis(plus)" src="https://p3-tt.byteimg.com/origin/pgc-image/b9d435e2852644c9a4c9e062cc3d46d7?from=pc" referrerpolicy="no-referrer"></div><div>
 5、樹形表排序彙總
</div><div><p style="margin-left:0; margin-right:0"><img height="274" src="https://oscimg.oschina.net/oscnet/up-1773cce82b98a943d42caaa62f60d80f3d0.png" width="1002" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0"><img height="403" src="https://oscimg.oschina.net/oscnet/up-8717f1c442767b08f2406019ae9b63721cb.png" width="409" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0">6、擴展集成</p><p style="margin-left:0; margin-right:0"><img height="961" src="https://oscimg.oschina.net/oscnet/up-6603ed15ec936dea45c4f6fb7318f4a062b.png" width="1965" referrerpolicy="no-referrer"></p></div></div>
                                    ]]>
            </description>
            <pubDate>Mon, 06 Nov 2023 05:01:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/265349/sqltoy-orm-5-2-77-released</guid>
            <link>https://www.oschina.net/news/265349/sqltoy-orm-5-2-77-released</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Hikyuu 1.3.0 發佈，高性能量化交易研究框架]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>Hikyuu 是一款基於 C++/Python 的高性能開源量化交易研究框架</strong>，用於快速策略分析及回測。與其他量化平台或回測軟件相比，具備：</p><ol><li>超快的回測速度；</li><li>對完整的系統交易理念進行抽象，並分解為不同的組件，通過重用不同的方面策略，最大化的減輕編寫策略的負擔。</li></ol><p>更多信息，參見項目主頁:<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhikyuu.org" target="_blank">https://hikyuu.org</a><span>&nbsp;</span>或<span>&nbsp;</span><a href="http://fasiondog.gitee.io/hikyuu">http://fasiondog.gitee.io/hikyuu</a></p><p><strong><span style="background-color:#fdfdfe; color:#05073b">在 Hikyuu 1.2.9 版本中，我們進行了一系列重要的修復和功能增強，該版本更新如下：</span></strong></p><p><strong>1.&nbsp; 指標融合優化，複雜指標計算速度提升了 8~10 倍左右</strong>。</p><p>從網上找了一段通達信百變一陽指選股器，計算公式如下：</p><pre><code class="language-python">from hikyuu.interactive import *

VAR1=LLV(L,13)
VAR2=HHV(H,13)
VAR3=SMA((C-VAR1)/(VAR2-VAR1)*100,5,1)
VAR4=SMA((VAR2-C)/(VAR2-VAR1)*100,5,1)
AA=VAR3
BB=VAR4
VAR5=SMA(MAX(C-REF(C,1),0),5,1)/SMA(ABS(C-REF(C,1)),5,1)*100
CC=EMA(VAR5,3)
XG = CROSS(CC,BB) &amp; (CC&gt;=REF(CC,1)) &amp; (BB&lt;=REF(BB,3)) &amp; (CC&gt;=49.5) &amp; (MA(C,3)&gt;=REF(MA(C,3),1)) &amp; (MA(C,7)&gt;=REF(MA(C,7),1)) &amp; (MA(C,60)&gt;REF(MA(C,60),3))

%time select(XG)</code></pre><p>1.2.9 版本計算耗時 10.5 秒</p><p><img alt="" height="391" src="https://oscimg.oschina.net/oscnet/up-2c2dddfd4bed910b8bb23a64e9d0efc4b0d.png" width="649" referrerpolicy="no-referrer"></p><p>1.3.0 版本計算耗時 1.3 秒</p><p><img alt="" height="400" src="https://oscimg.oschina.net/oscnet/up-597dbebad0ae5d6a4260a60cdc89f8756bc.png" width="604" referrerpolicy="no-referrer"></p><p><strong>2. 功能增強</strong></p><p>&nbsp;&nbsp;&nbsp; - hikyuu_hub 支持指標部件<br> &nbsp;&nbsp;&nbsp; - TradeManager 引出買空/買空操作至 python<br> &nbsp;&nbsp;&nbsp; - Stock 引出 get_index_range 方法至 python<br> &nbsp;&nbsp;&nbsp; - 編譯選項增加 stacktrace 選項，方便異常時打印 C++ 堆棧<br> &nbsp;&nbsp;&nbsp; - 優化 TimerManager、線程池、數據驅動等基礎設施<br> &nbsp;&nbsp;&nbsp; - MySQL/SQLite 數據引擎支持綁定 datetime<br> &nbsp;&nbsp;&nbsp; - 優化指標默認名稱<br> &nbsp;&nbsp;&nbsp; - 升級 flatbuffers 版本至 23.5.6<br> &nbsp;&nbsp;&nbsp; - 優化 Stock 的相等比較<br> &nbsp;&nbsp;&nbsp; - KQuery/KRecord/KData 相等/不等比較完善並引出至 python<br> &nbsp;&nbsp;&nbsp; - 完善 Performance<br> &nbsp;&nbsp;&nbsp; - 支持指標組合測試</p><p><strong>3. 其他錯誤修復</strong><br> &nbsp;&nbsp;&nbsp; - 更新 SG 信號指示器系列方法，去除移除 OP 後的一些遺留問題<br> &nbsp;&nbsp;&nbsp; - 修復 TradeList 轉 np 時使用了已廢棄的方法<br> &nbsp;&nbsp;&nbsp; - 修復 SUM 存在訪問越界的問題<br> &nbsp;&nbsp;&nbsp; - 修復 IniParser 不支持 windows 中文路徑的問題<br> &nbsp;&nbsp;&nbsp; - 修復 RSI 存在 NaN 值時計算錯誤<br> &nbsp;&nbsp;&nbsp; - 修復 Ubuntu 23.10 下編譯失敗的問題</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 06 Nov 2023 03:42:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/265342/hikyuu-1-3-0</guid>
            <link>https://www.oschina.net/news/265342/hikyuu-1-3-0</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[DBShop 商城系統 V3.3 Release 231106 發佈]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">DBShop 企業級商城系統，使用 PHP 語言基於 Laminas（Zendframework 3） + Doctrine 2 組合框架開發完成。可定製、多終端、多場景、多支付、多貨幣；嚴謹的安全機制，可靠穩定；方便的操作管理，節約時間；清晰的權限分配，責任分明；便捷的更新處理，一鍵搞定；豐富的插件市場，擴展無限。</p><h2>系統框架</h2><ul><li>Laminas （Zendframework 3）</li><li>Doctrine 2</li></ul><h2>環境要求</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>服務器系統</strong>&nbsp;Linux、Unix、Mac、Windows、其他</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>web 服務器</strong>&nbsp;Apache、Nginx、IIS、其他</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>MySQL 版本</strong>&nbsp;&gt;= 5.6</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>PHP 版本</strong>&nbsp;&gt;= 7.4</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>PHP 擴展 | 庫</strong></p><ul><li>PDO</li><li>SSL（openssl）</li><li>Fileinfo</li><li>intl</li><li>Curl</li><li>GD2</li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>系統空間</strong>&nbsp;&gt;= 500M</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>更新日誌：</strong><br> 新增，語言包個性化定製支持<br> 優化，後台單頁文章標籤顯示<br> 優化，快遞 100 返回信息<br> 優化，快遞 100 查詢順豐快遞<br> 優化，後台更新列表加入系統更新日誌詳情鏈接地址<br> 優化，説明文件</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="color:#e74c3c">瓏大官方全新發布&nbsp;<strong>語言包個性化定製擴展平台&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.loongdom.com.cn%2Fcloud%2Ftrans.html" target="_blank">https://docs.loongdom.com.cn/cloud/trans.html</a></strong></span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>在線文檔地址：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.loongdom.com.cn" target="_blank">https://docs.loongdom.com.cn/</a></strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>前台演示地址：</strong><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fv3.dbshop.net%2F" target="_blank">http://v3.dbshop.net</a><br><strong>後台演示地址：</strong><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fv3.dbshop.net%2Fadmin" target="_blank">http://v3.dbshop.net/admin</a><br><strong>後台登錄賬號：</strong>dbshop<br><strong>後台登錄密碼：</strong>123456</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><img alt="" height="318" src="https://oscimg.oschina.net/oscnet/up-935399731889136addb4890704783bb91b2.png" width="700" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><img alt="" height="438" src="https://oscimg.oschina.net/oscnet/up-2a10d87169518ff3590a641b918e95a2814.png" width="700" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><img alt="" height="306" src="https://oscimg.oschina.net/oscnet/up-4c99aa3bc36cd815ba6585a6c400b726bb7.png" width="700" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><img alt="" height="404" src="https://oscimg.oschina.net/oscnet/up-21a7773040bd4fab00897a97c87e3d9c188.png" width="700" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><img alt="" height="396" src="https://oscimg.oschina.net/oscnet/up-4bc8e4e8bc97e0f0855e8337dce22da947c.png" width="700" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><img alt="" height="410" src="https://oscimg.oschina.net/oscnet/up-fdec0119a9a8bdc28c9cf30e11f42cafd3b.png" width="700" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>下載地址：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdownload.loongdom.com.cn/dbshop/V3.3/DBShopV3.3_Release231106.tar.gz" target="_blank">&nbsp;https://download.loongdom.com.cn/dbshop/V3.3/DBShopV3.3_Release231106.tar.gz</a></strong></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 06 Nov 2023 02:48:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/265325</guid>
            <link>https://www.oschina.net/news/265325</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Libreboot 20231106 發佈]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">Libreboot 是一個自由開源的 BIOS/UEFI 替代品，基於 Coreboot，適用於 x86 和 ARM 機器。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><span><span><span style="color:#404040"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>隨着開發人員努力改進，</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span><span><span style="color:#404040"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>Libreboot 20231106 現已作為錯誤修正更新發布：</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><ul><li>Dell E6400 支持及 DDR2 修正移到單獨的代碼樹 coreboot/dell，而不是 coreboot/default。DDR2 修正補丁導致在 DDR3 內存出現穩定性問題，可能影響 X200/T400 等硬件。</li><li>去除 GRUB prefix 錯誤信息 (仍在 grub_errno 中處理)。模塊相關錯誤信息相同 (Libreboot 的 GRUB 為了適配 flash 閃存裁剪了一些模塊)</li><li>重新制作了 GM45 和 i915 的 coreboot 配置。</li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">有關更改的完整列表，請查看&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flibreboot.org%2Fnews%2Flibreboot20231106.html" target="_blank">發佈公告頁面</a>。</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 06 Nov 2023 02:39:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/265320</guid>
            <link>https://www.oschina.net/news/265320</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[凌鯊 0.5.8 版本更新]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>凌鯊 0.5.8 版本更新</p><ul><li>新增信息面板功能</li></ul><p><img height="750" src="https://oscimg.oschina.net/oscnet/up-c82f32fbb68c2c162923c2538a5f5c9face.png" width="1300" referrerpolicy="no-referrer"></p><p><img height="750" src="https://oscimg.oschina.net/oscnet/up-fed6f6250a11216b9959648e6571508f79a.png" width="1300" referrerpolicy="no-referrer"></p><p><img height="750" src="https://oscimg.oschina.net/oscnet/up-d8450c0f78955b63dd0f9d86633b7b1e05e.png" width="1300" referrerpolicy="no-referrer"></p><p><img height="750" src="https://oscimg.oschina.net/oscnet/up-ef3569c057864dda18efe9bba57f7658d74.png" width="1300" referrerpolicy="no-referrer"></p><p><img height="750" src="https://oscimg.oschina.net/oscnet/up-b49fc6942c50053ed61426c113916c3e5d2.png" width="1300" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 06 Nov 2023 02:39:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/265319</guid>
            <link>https://www.oschina.net/news/265319</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[開源即時通訊應用 Tailchat v1.9.4 發佈，插件化分佈式 noIM 應用]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div><h1>介紹</h1></div><div><div><div><div><p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"><code>Tailchat</code><span>&nbsp;</span>是一款插件化易拓展的開源 IM 應用。可拓展架構賦予<span>&nbsp;</span><code>Tailchat</code><span>&nbsp;</span>無限可能性。</p><p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start">前端微內核架構 + 後端微服務架構，使得<span>&nbsp;</span><code>Tailchat</code><span>&nbsp;</span>能夠駕馭任何定製化 / 私有化的場景</p><p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start">面向企業與私域用户打造，高度自由的羣組管理與定製化的面板展示可以讓私域主能夠更好的展示自己的作品，管理用户，打造自己的品牌與圈子。</p><p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start">官方網站:&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftailchat.msgbyte.com%2F" target="_blank">https://tailchat.msgbyte.com/</a></p><h2>v1.9.4 更新內容</h2></div></div></div></div><h3>特性更新<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftailchat.msgbyte.com%2Fzh-Hans%2Fblog%2Frelease-1.9.4%23%25E7%2589%25B9%25E6%2580%25A7%25E6%259B%25B4%25E6%2596%25B0" target="_blank">​</a></h3><h4>增加消息搜索功能<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftailchat.msgbyte.com%2Fzh-Hans%2Fblog%2Frelease-1.9.4%23%25E5%25A2%259E%25E5%258A%25A0%25E6%25B6%2588%25E6%2581%25AF%25E6%2590%259C%25E7%25B4%25A2%25E5%258A%259F%25E8%2583%25BD" target="_blank">​</a></h4><p><img height="401" src="https://oscimg.oschina.net/oscnet/up-1f3c567b8b3806052052e02b536e5322171.png" width="517" referrerpolicy="no-referrer"></p><p><img height="862" src="https://oscimg.oschina.net/oscnet/up-f303866703fd1f1f5f2f44e90d2ed512512.png" width="536" referrerpolicy="no-referrer"></p><p style="color:#1c1e21; text-align:start">現在支持在會話中對聊天信息進行搜索，因為是直接在數據庫中搜索，考慮到性能原因會有一個超時時間，即 5s 內數據庫沒有返回搜索結果即視為超時。</p><h3>其他更新<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftailchat.msgbyte.com%2Fzh-Hans%2Fblog%2Frelease-1.9.4%23%25E5%2585%25B6%25E4%25BB%2596%25E6%259B%25B4%25E6%2596%25B0" target="_blank">​</a></h3><ul><li>http 請求對對象存儲與公共文件增加靜態緩存</li><li>增加環境變量<span>&nbsp;</span><code>REQUEST_TIMEOUT</code><span>&nbsp;</span>用於自定義 rpc 請求超時時間，默認<strong>10 * 1000</strong>, 單位毫秒</li><li>AI 助手增加更多提示</li><li>增加遙測信息收集 (可以通過環境變量關閉)</li><li>修復 iam 插件不適合登錄視圖中的淺色主題的問題</li><li>為 tianji 腳本增加 defer 標記</li></ul></div>
                                    ]]>
            </description>
            <pubDate>Mon, 06 Nov 2023 02:38:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/265318/tailchat-1-9-4-released</guid>
            <link>https://www.oschina.net/news/265318/tailchat-1-9-4-released</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[PyCharm 2023.2.4 發佈]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>PyCharm 2023.2.4 現已<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.jetbrains.com%2Fpycharm%2F2023%2F11%2F2023-2-4%2F" target="_blank">發佈</a>，這是&nbsp;<span style="background-color:#ffffff; color:#19191c">v2023.2 的又一個小版本更新。</span></p><p><span><span><span><span><span style="color:#19191c"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>該版本帶來了以下改進：&nbsp;</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><ul style="margin-left:0; margin-right:0"><li>&nbsp;「Commit」工具窗口中的絕對目錄路徑不再因冗餘複製父路徑佔用太多空間。[&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fyoutrack.jetbrains.com%2Fissue%2FIDEA-326271%2FCommit-window-shows-full-path-irregularly" target="_blank">IDEA-326271</a>&nbsp;]</li><li>已經解決了無法從本地計算機的編輯器複製文本並將其粘貼到 Windows 遠程桌面上的編輯器的問題。[&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fyoutrack.jetbrains.com%2Fissue%2FIDEA-313776%2FCan-not-paste-the-text-data-on-the-windows-remote-desktop-copied-from-IDEA-editor" target="_blank">IDEA-313776</a>&nbsp;]。如果你使用的是舊版本的 Windows Server，可以轉到&nbsp;「File | Settings | Advanced Settings<span style="background-color:#ffffff; color:#19191c">&nbsp;and select the&nbsp;</span>Paste at the caret position」&nbsp;選項，而不是「When pasting a line copied with no selection」。此解決方法將解決剪貼板同步問題。或者，你可以使用&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flearn.microsoft.com%2Fen-us%2Fazure%2Fvirtual-desktop%2Fwhats-new-client-microsoft-store" target="_blank">最新的 Windows 遠程桌面客户端</a>&nbsp;作為解決方案。</li></ul><p>&nbsp;要查看此版本中解決的問題的完整列表，可參閲&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fyoutrack.jetbrains.com%2Farticles%2FPY-A-233538141%2FPyCharm-2023.2.4-232.10203.26-build-Release-Notes%2522" target="_blank">發行説明</a>。&nbsp;</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 06 Nov 2023 02:38:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/265317/pycharm-2023-2-4-released</guid>
            <link>https://www.oschina.net/news/265317/pycharm-2023-2-4-released</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
    </channel>
</rss>
