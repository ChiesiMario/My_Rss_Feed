<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[开源中国-软件更新资讯]]>
        </title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="https://rsshub.app/oschina/news/project" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[开源中国-软件更新资讯 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Wed, 22 Nov 2023 11:34:13 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[Jeepay v2.2.2 正式发布：计全支付-让支付接入更简单]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="background-color:#ffffff; color:#333333">Jeepay 是一套适合互联网企业使用的开源支付系统，支持多渠道服务商和普通商户模式。已对接</span><code>微信支付</code><span style="background-color:#ffffff; color:#333333">，</span><code>支付宝</code><span style="background-color:#ffffff; color:#333333">，</span><code>云闪付</code><span style="background-color:#ffffff; color:#333333">官方接口，支持聚合码支付。<br><br> v2.2.2 版本升级内容：</span></p><div><ol><li>优化微信 V3 接口 APP 支付返回参数</li><li>优化 PayPal 支付接口参数名、关单方法名大小写</li><li>优化 Docker 部署</li><li>优化分账页面描述</li></ol></div><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">更多升级日志：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.jeequan.com%2Fdev%2Fupdate%2Fcategory_1016.html" target="_blank">https://www.jeequan.com/dev/update/category_1016.html</a><br><br> 项目特点</p><ul><li>支持多渠道对接，支付网关自动路由</li><li>已对接<code>微信</code>服务商和普通商户接口，支持<span>&nbsp;</span><code>V2</code><span>&nbsp;</span>和<span>&nbsp;</span><code>V3</code><span>&nbsp;</span>接口</li><li>已对接<code>支付宝</code>服务商和普通商户接口，支持 RSA 和 RSA2 签名</li><li>已对接<code>云闪付</code>服务商接口，可选择多家支付机构</li><li>提供 http 形式接口，提供各语言的<span>&nbsp;</span><code>sdk</code><span>&nbsp;</span>实现，方便对接</li><li>接口请求和响应数据采用签名机制，保证交易安全可靠</li><li>系统安全，支持<code>分布式</code>部署，<code>高并发</code></li><li>管理端包括<code>运营平台</code>和<code>商户系统</code></li><li>管理平台操作界面简洁、易用</li><li>支付平台到商户系统的订单通知使用 MQ 实现，保证了高可用，消息可达</li><li>支付渠道的接口参数配置界面自动化生成</li><li>使用<span>&nbsp;</span><code>spring security</code><span>&nbsp;</span>实现权限管理</li><li>前后端分离架构，方便二次开发</li><li>由原<span>&nbsp;</span><code>XxPay</code><span>&nbsp;</span>团队开发，有着多年支付系统开发经验</li></ul><blockquote><p style="margin-left:0; margin-right:0">Jeepay 运营平台功能</p></blockquote><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="Jeepay 运营平台功能" src="https://static.oschina.net/uploads/img/202207/08190720_WljY.png" referrerpolicy="no-referrer"></p><blockquote><p style="margin-left:0; margin-right:0">Jeepay 商户系统功能</p></blockquote><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="Jeepay 商户系统功能" src="https://static.oschina.net/uploads/img/202207/08190720_luZt.png" referrerpolicy="no-referrer"></p><h2>🍯 系统截图</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><code>以下截图是从实际已完成功能界面截取,截图时间为：2021-07-06 08:59</code></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="Jeepay 演示界面" src="https://static.oschina.net/uploads/img/202207/08190720_qjBV.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="Jeepay 演示界面" src="https://static.oschina.net/uploads/img/202207/08190721_IaeV.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="Jeepay 演示界面" src="https://static.oschina.net/uploads/img/202207/08190721_jxZD.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="Jeepay 演示界面" src="https://static.oschina.net/uploads/img/202207/08190721_AAZk.png" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 22 Nov 2023 10:37:04 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/267638/jeepay-2-2-2-released</guid>
            <link>https://www.oschina.net/news/267638/jeepay-2-2-2-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[数据可视化引擎 G2 v5.1.9 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff; color:#333333">数据可视化引擎&nbsp;G2 v5.1.9 版本现已发布，具体更新内容包括：</span></p><ul><li>docs：翻译 getting-started、what-is-g2、why-g2&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fantvis%2FG2%2Fpull%2F5778" target="_blank">#5778</a></li><li>fix(docs)：g2 的介绍&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fantvis%2FG2%2Fpull%2F5797" target="_blank">#5797</a></li><li>docs：添加&nbsp;example stocks dark&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fantvis%2FG2%2Fpull%2F5798" target="_blank">#5798</a></li><li>fix(tooltip)：overflow&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fantvis%2FG2%2Fpull%2F5802" target="_blank">#5802</a></li><li>docs：将 eco 添加到 README 中&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fantvis%2FG2%2Fpull%2F5804" target="_blank">#5804</a></li><li>docs：ecosystem 和 plugin&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fantvis%2FG2%2Fpull%2F5805" target="_blank">#5805</a></li><li>docs：添加智能 autovis demo&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fantvis%2FG2%2Fpull%2F5806" target="_blank">#5806</a></li><li>chore：添加 3D 曲面图的文档和示例&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fantvis%2FG2%2Fpull%2F5799" target="_blank">#5799</a></li><li>chore：更新 dumi-theme-antv&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fantvis%2FG2%2Fpull%2F5812" target="_blank">#5812</a></li><li>修复：dumi-theme-antv footerTheme light&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fantvis%2FG2%2Fpull%2F5813" target="_blank">#5813</a></li><li>feat(mark)：添加&nbsp;chord mark&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fantvis%2FG2%2Fpull%2F5810" target="_blank">#5810</a></li><li>docs：添加&nbsp;insight mark demos&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fantvis%2FG2%2Fpull%2F5811" target="_blank">#5811</a></li><li>docs：添加更多自动标记的&nbsp;demo&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fantvis%2FG2%2Fpull%2F5820" target="_blank">#5820</a></li><li>docs(demo)：使用 chart.mark&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fantvis%2FG2%2Fpull%2F5822" target="_blank">#5822</a></li><li>docs：图像位置变化&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fantvis%2FG2%2Fpull%2F5827" target="_blank">#5827</a></li><li>chore：更新至 5.1.9&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fantvis%2FG2%2Fpull%2F5831" target="_blank">#5831</a></li></ul><p><span style="background-color:#ffffff; color:#333333">详情可查看更新说明：</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fantvis%2FG2%2Freleases%2Ftag%2F5.1.9" target="_blank">https://github.com/antvis/G2/releases/tag/5.1.9</a></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 22 Nov 2023 06:07:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/267587/g2-5-1-9-released</guid>
            <link>https://www.oschina.net/news/267587/g2-5-1-9-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[FastCFS V5.0 发布，原生支持 RDMA]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div><div><span><span>经过 4 个多月的预研、开发和测试，FastCFS 5.0 终于和大家见面了。FastCFS 5.0 使用 ibverbs 原生方式适配了 RDMA 网络，可以充分发挥 RDMA 网络的低延迟和高吞吐特性。在此特别感谢 @Frank 提供 IB 环境的高端服务器供我们预研；非常感谢 @yunqi 在 ibverbs 编程方面耐心的答疑；十分感谢 @AI 墨墨，公众号提供了非常好用的 chatGPT 问答服务，帮助我解答了不少疑惑。</span></span></div><div>
  &nbsp;
 </div></div><div><div><span><span>我们租用阿里云 g8 类型的 ECS，使用其 eRDMA 特性，4KB 随机读在 fuse 场景性能下相比 socket 方式提升了 50%；我们直接调用 API（纯用户态模式）的 fcfs_beachmark，非 busy polling 模式下性能相比 socket 方式提升 80%，而 busy polling 模式下性能提升了 110%。后续我们将找机会在 IB 网络环境下进行性能对比测试，预计性能提升会更加明显。</span></span></div><div>
  &nbsp;
 </div></div><div><div><span><span>是否开启 busy polling，我们 server 端默认配置为智能模式。当一个连接的 QPS 连续 N 秒（如 3 秒）超过阈值（如 10240），则启用 busy polling 模式；连续 N 秒低于阈值，则退回非 busy polling 模式。</span></span></div></div><div><div><span><span>友情提示：配置示例及说明参见源码 conf/full/ 子目录下的配置文件。</span></span></div><div>
  &nbsp;
 </div></div><div><div><span><span>V5.0 修复的 bug 如下：</span></span></div></div><div><div><span><span>[fdir] bugfixed: dentry_create set loaded_flags correctly</span></span></div></div><div><div><span><span>[fdir] bugfixed: must use lock for db skiplist</span></span></div></div><div><div><span><span>[libfdirstorage] bugfixed: set variable normal_update correctly</span></span></div></div><div><div><span><span>[libfsstorage] segment reclaim more robustly</span></span></div><div>
  &nbsp;
 </div></div><div><div><span><span>FastCFS 5.0 通过了比较充分的测试，欢迎有 RDMA 网络环境的朋友进行性能测试。建议使用 FastCFS 老版本的用户，尽快升级到最新版本。有任何问题和建议，欢迎在 gitee 上提交 issue，当然也可以加群交流。</span></span></div></div></div>
                                    ]]>
            </description>
            <pubDate>Wed, 22 Nov 2023 02:44:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/267561/fastcfs-5-0-released</guid>
            <link>https://www.oschina.net/news/267561/fastcfs-5-0-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Firefox 120.0 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Firefox 120.0 现已发布，具体更新内容如下：</p><p><strong>New</strong></p><ul><li>Firefox 在上下文菜单中支持新的"复制链接不带网站跟踪"功能，确保复制的链接不再包含跟踪信息。</li></ul><p><img alt="" height="361" src="https://oscimg.oschina.net/oscnet/up-e7e4d23ecc050ac3f60820b1fa1946c0f75.png" width="300" referrerpolicy="no-referrer"></p><ul><li>Firefox 现在支持启用"全局隐私控制"的设置（在 Preferences → Privacy &amp; Security 中）。有了这项 opt-in&nbsp;功能，Firefox&nbsp;就会通知网站，用户不希望自己的数据被共享或出售。</li></ul><p><img alt="" height="139" src="https://oscimg.oschina.net/oscnet/up-e2c7de7e40d5068002d7503fbe8daf5795e.png" width="500" referrerpolicy="no-referrer"></p><ul><li>现在，Firefox 的隐私窗口和 ETP-Strict 隐私配置通过指纹保护功能增强了 Canvas API，从而继续保护用户的在线隐私。</li><li>Firefox 已在德国所有用户的隐私窗口中默认启用 Cookie <span style="background-color:#ffffff"><span style="color:#42425a">Banner Blocker</span></span>。对于支持的网站，Firefox 现在会自动拒绝 Cookie 并屏蔽恼人的&nbsp;cookie banners。</li><li><p>Firefox 已在德国所有用户的隐私窗口中默认启用 URL 跟踪保护功能。Firefox 将删除非必要的 URL 查询参数，这些参数通常用于在网络上跟踪用户。</p></li><li><p>Firefox 现在可以从操作系统根存储导入 TLS 信任锚（如证书）。这将在 Windows、macOS 和 Android 上默认启用，如有需要，可在设置（Preferences → Privacy &amp; Security → Certificates）中关闭。</p></li><li><p>现在已添加键盘快捷键，用于在 about:logins 上编辑和删除所选证书。editing - Alt + enter (Option + return on macOS)&nbsp;，deleting - Alt + Backspace (Option + Delete on macOS)。</p></li><li><p>Ubuntu Linux 用户现在可以从作为 Snap 软件包安装的 Chromium 中导入。</p></li><li><p>画中画现在支持 Windows 和 Linux 上的 corner snapping，只需在移动画中画窗口时按住 Ctrl 键即可。</p></li></ul><p><strong>Fixed</strong></p><ul><li><span style="color:#42425a">各种</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.mozilla.org%2Fsecurity%2Fadvisories%2Fmfsa2023-49%2F" target="_blank">安全</a>修复<span style="background-color:#ffffff"><span style="color:#42425a">。</span></span></li></ul><p><strong>Developer</strong></p><ul><li>现在已添加 User Activation API，允许 JavaScript 使用 navigator.userActivation 检查用户当前是否或曾否激活页面（点击等）。</li><li>Early Hints Preconnect（信息状态代码 103）现已启用。这允许服务器在最终 HTTP 响应之前发送 resource Link headers，并提高了使用此功能的服务器的性能。(<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.cloudflare.com%2Fearly-hints%2F" target="_blank">更多信息</a>）</li><li>用户现在可以使用新增的 devtools 功能模拟浏览器标签脱机。</li><li>Style Editor 面板的页脚新增了一个"Pretty Print"按钮，类似于调试器面板中的 Pretty Print 按钮。该按钮可用于格式化样式表（如已精简的样式表）。以前的功能是自动格式化最小化文件，现在已被删除。</li><li>Inspector&nbsp;面板中的"Rules"面板不再以新的 CSS Color 4 格式（如 OKLCH）显示十六进制/命名颜色。这样可以确保与使用的原始值相匹配。</li></ul><p><strong>Web Platform</strong></p><ul><li>lh 和 rlh 单位现在可以作为长度正确解析和计算。这样，作者就可以根据 element's（或 root element's）的行高来指定长度。</li><li>WebAssembly GC 现在已默认启用，这允许新语言（如 Dart 或 Kotlin）在 Firefox 上运行。以便收集 guest language 和 host browser 之间的 reference cycles&nbsp;。</li></ul><p><span style="background-color:#ffffff"><span style="color:#333333">详情可<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.mozilla.org%2Fen-US%2Ffirefox%2F120.0%2Freleasenotes%2F" target="_blank">查看更新说明</a>。</span></span></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 22 Nov 2023 02:35:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/267557/firefox-120-0-released</guid>
            <link>https://www.oschina.net/news/267557/firefox-120-0-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[FreeBSD 14.0 正式发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>FreeBSD 14.0 <u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.freebsd.org%2Freleases%2F14.0R%2Fannounce%2F" target="_blank">已正式发布</a></u>，这是&nbsp;<span style="background-color:#ffffff; color:#000000"><span>&nbsp;</span>stable/14 分支的首个版本，</span>支持 amd64, aarch64, i386, powerpc, powerpc64, powerpc64le, powerpcspe, armv7, 和 riscv64 架构。</p><p>主要变化：</p><ul><li>OpenSSH 升级至 v9.5p1</li><li>OpenSSL 升级至 v3.0.12<br> FreeBSD 13.2-RELEASE 使用 OpenSSL 1.1.1t，所以这是重大升级</li><li>bhyve 虚拟机管理程序支持 TPM 和 GPU 透传</li><li>FreeBSD 在 amd64 和 arm64 平台支持最多 1024 个内核</li><li>ZFS 升级至 OpenZFS v2.2，显著改进性能</li><li>实验性 ZFS 镜像可用于 AWS 和 Azure</li><li>支持对运行日志软更新的 UFS 文件系统执行后台文件系统检查</li><li>TCP 默认拥塞控制机制为<strong> CUBIC</strong></li><li>……</li></ul><p><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.freebsd.org%2Freleases%2F14.0R%2Frelnotes%2F" target="_blank">FreeBSD 14.0-RELEASE Release Notes</a></u></p><hr><p>负责 FreeBSD 发版工作的主管在其个人博客介绍了一些 FreeBSD 14 的破坏性变化，详情查看&nbsp;<em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.daemonology.net%2Fblog%2F2023-11-21-late-breaking-FreeBSD-14-breakage.html" target="_blank">https://www.daemonology.net/blog/2023-11-21-late-breaking-FreeBSD-14-breakage.html</a></u></em>。</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 22 Nov 2023 02:26:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/267555/freebsd-14-0</guid>
            <link>https://www.oschina.net/news/267555/freebsd-14-0</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[支持 .NET 8，SunnyUI V3.6.0 发布啦，C# WinForm 开源控件库]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div><h1><img alt="SunnyUI" src="https://images.gitee.com/uploads/images/2021/0324/213615_54240ba9_416720.png" referrerpolicy="no-referrer"></h1></div><div><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/yhuse/SunnyUI/stargazers"><img alt="star" src="https://gitee.com/yhuse/SunnyUI/badge/star.svg?theme=gvp" referrerpolicy="no-referrer"></a><span>&nbsp;</span><a href="https://gitee.com/yhuse/SunnyUI/members"><img alt="fork" src="https://gitee.com/yhuse/SunnyUI/badge/fork.svg?theme=gvp" referrerpolicy="no-referrer"></a></p><ul><li>帮助文档:<span>&nbsp;</span><a href="https://gitee.com/yhuse/SunnyUI/wikis/pages">https://gitee.com/yhuse/SunnyUI/wikis/pages</a></li><li>Gitee:<span>&nbsp;</span><a href="https://gitee.com/yhuse/SunnyUI">https://gitee.com/yhuse/SunnyUI</a></li><li>GitHub:<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fyhuse%2FSunnyUI">https://github.com/yhuse/SunnyUI</a></li><li>Nuget:<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.nuget.org%2Fpackages%2FSunnyUI%2F">https://www.nuget.org/packages/SunnyUI/</a></li><li>Blog:<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.cnblogs.com%2Fyhuse">https://www.cnblogs.com/yhuse</a></li></ul><p style="margin-left:0; margin-right:0"><span style="background-color:#ffffff; color:#40485b">SunnyUI.Net 是基于.Net Framework 4.0~4.8、.Net 6 框架的 C# WinForm 开源控件库、工具类库、扩展类库、多页面开发框架。</span></p><p style="margin-left:0; margin-right:0"><img height="768" src="https://oscimg.oschina.net/oscnet/up-1c3c587dbd99a478ed62523f94ad0d7ccbf.png" width="1100" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0"><span style="background-color:#ffffff; color:#333333">此版本更新内容为：</span></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">+ 增加 * 修改 - 删除</p></div><h4>2023-11-21 V3.6.0</h4><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><strong>注意：大版本更新，重构主题</strong><br> 建议新项目使用此版本，如果 3.6.0 以下版本需要升级参照文档比较差异：<br><a href="https://gitee.com/yhuse/SunnyUI/wikis/%E5%8D%87%E7%BA%A7%E6%8C%87%E5%8D%97/3.5.2--%3E3.6.0">升级指南/3.5.2--&gt;3.6.0</a><br> + 增加.Net8 支持<br> * 重构主题<br> * 修改点阵字体数字显示<br> * UIForm: 修改默认 ShowShadow 边框阴影打开，ShowRadius 显示圆角关闭<br> * UIRadioButtonGroup: 重写 UIRadioButtonGroup<br> * UICheckBoxGroup: 重写 UICheckBoxGroup<br> * UIRadioButton: 增加修改图标大小<br> * UIEditForm: 代码生成增加 ComboDataGridView 类型<br> * 修改几个进度弹窗的关闭标志<br> * 重构 GDI 一些方法</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 22 Nov 2023 02:02:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/267552</guid>
            <link>https://www.oschina.net/news/267552</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[凌鲨 0.6.1 版本更新]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>凌鲨 0.6.1 版本更新</p><ul><li>新增: 新增 k8s 连接功能&nbsp;</li><li>改进: 自动隐藏目录列表&nbsp;</li><li>改进: 改进任务/缺陷状态文案&nbsp;</li><li>修复: 修复打开便签时报错</li></ul><p><img height="556" src="https://oscimg.oschina.net/oscnet/up-6147f1a9c41feabedc2cb33ddb6a4c20d27.png" width="887" referrerpolicy="no-referrer"></p><p><img height="750" src="https://oscimg.oschina.net/oscnet/up-099254f7365fe8a7b24c518037a7fc1c019.png" width="1300" referrerpolicy="no-referrer"></p><p><img height="750" src="https://oscimg.oschina.net/oscnet/up-291670843b05f188a9cedb9656abc3971a8.png" width="1300" referrerpolicy="no-referrer"></p><p><img height="750" src="https://oscimg.oschina.net/oscnet/up-b8970adc3358e12b608144cea861260d163.png" width="1300" referrerpolicy="no-referrer"></p><p><img height="750" src="https://oscimg.oschina.net/oscnet/up-5f32ee7ca820122e840de246b9aa0de5671.png" width="1300" referrerpolicy="no-referrer"></p><p><img height="750" src="https://oscimg.oschina.net/oscnet/up-43b9236e0700ad68fc78b24f039b464bb8e.png" width="1300" referrerpolicy="no-referrer"></p><p><img height="750" src="https://oscimg.oschina.net/oscnet/up-e1c1548a2bbe432c3e54e11b5f50ca69b62.png" width="1300" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 22 Nov 2023 01:49:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/267547/linksaas-0-6-1</guid>
            <link>https://www.oschina.net/news/267547/linksaas-0-6-1</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Simple Admin Go 语言分布式后台管理系统 v1.2.3 更新, 大幅优化生成工具]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h2>Simple Admin Go 语言分布式后台管理系统 v1.2.3 更新</h2><h3>项目介绍</h3><p>Simple Admin 是一个开箱即用的分布式微服务后端管理系统，基于 go-zero 开发，为开发中大型后台提供了丰富的功能，支持三端代码生成。 官方自带多种扩展，助力中小企业快速上云，快速迭代。适合用于微服务学习和商用，开源免费。</p><h3>Simple Admin Core/Job/MCMS/FMS v1.2.3 更新</h3><h4>介绍</h4><p>核心模块 Core, 定时任务模块 Job, 消息中心模块 MCMS, 以及文件管理模块 FMS 均已升级至 v1.2.3</p><h4>本次更新</h4><ul><li>更新： 更新 <code>Ent</code> 至 <code>0.12.5</code></li><li>优化（FMS）：新增 <code>init_api_data</code> 文件</li><li>重构： 重新生成 Ent 相关文件</li></ul><h3>Simple Admin Backend UI v1.2.3 更新</h3><h4>介绍</h4><p>Simple Admin UI 是基于 vue-vben-admin 二次开发的为 Simple Admin 专门开发的后台管理界面，基于 Vue3 和 TypeScript 开发， 提供后台错误统一处理，国际化等功能，本项目完全免费，可用于学习和商用.</p><h4>本次更新</h4><ul><li>新增 (menu): 新增 <code>path</code> 的校验规则</li><li>修复 (icon): 修复 <code>icon</code> 组件的循环依赖问题</li><li>升级 (tinymce): 升级 <code>Tinymce</code> 至最新，优化夜间模式下的样式</li><li>优化 (i18n): 优化 <code>i18n</code> 翻译</li><li>新增 (ImageUpload)：新增 <code>ImageUpload</code> 组件</li><li>优化: 优化全局颜色配置</li><li>优化 (ImageUpload): 支持单个图片地址</li><li>同步： 同步 <code>vben</code> 最新代码</li><li>移除： 旧的夜间模式无用的配置文件及代码</li><li>优化 (login page)： 优化登录页样式</li><li>优化 (pinia persist): 新增 <code>pinia-plugin-persistedstate</code> 插件， 优化 <code>store</code> 代码，使用插件</li><li>修复： <code>form</code> 配置 <code>default value</code> 导致的覆盖问题</li><li>优化 (search)：搜索栏样式</li><li>移除 (qrcode)：移除 <code>QRCode</code> 组件，改为使用 <code>antdv</code> 自带的 <code>QRCode</code></li><li>修复 (menu): 修复菜单列表重复的参数</li><li>更新： 更新依赖</li></ul><h3>Goctls v1.6.13 更新</h3><h4>介绍</h4><p>Goctls 是一个基于 Go Zero 官方生成工具 Goctl 开发的针对 Simple Admin 适配优化的生成工具。提供强大的代码生成功能，同时集成了许多定制工具，实现快速开发微服务接入后台和前台​。三端代码生成可以大大提升开发效率，欢迎体验​。</p><h4>特性</h4><ul><li>go-swagger : 基于 go-swagger 而不是官方的@doc 注解</li><li>多国语言支持</li><li>优化错误信息处理,支持多语言错误</li><li>简单易用的校验器</li><li>支持代码生成，生成 API,RPC 和 web 端的 CRUD 代码</li><li>支持多种额外插件如 GORM, RocketMQ</li><li>对 Simple Admin 的针对性优化</li><li>rpc logic group 分组</li><li>全面支持 Ent 代码生成</li><li>额外工具如本地日志查看，环境变量查看</li></ul><h4>本次更新</h4><ul><li>修复： 修复 <code>Ent</code> 代码生成的 <code>Unix</code> 时间错误</li><li>优化： 优化 <code>extra init_code</code> 命令，现已支持直接输出至 <code>init_api_data.go</code> 文件</li><li>新增： <code>api new</code> 命令新增 <code>--use_core_rpc</code> 参数，可在创建新项目时直接生成 <code>CoreRpc</code> 配置</li><li>修复： <code>rpc ent</code>代码生成时出现的 <code>pointy</code> 多余导入</li><li>修复： <code>api ent</code>代码生成时出现的<code>i18n</code>多余引用</li><li>修复： <code>rpc ent</code>生成所有 <code>schema</code> 的逻辑代码时出现的错误</li><li>修复： <code>api ent</code>生成所有 <code>schema</code> 的逻辑代码时出现的错误</li><li>新增： <code>api new</code>和<code>rpc new</code>如果使用<code>Ent</code>均支持自动生成 Ent 初始化代码</li><li>新增： <code>api ent</code>和<code>rpc ent</code>命令新增<code>--api_data</code>参数，用于直接生成<code>Core API</code>初始化代码</li><li>修复： 修复<code>api proto</code> 错误的提示信息</li><li>优化： 删除<code>api proto</code> 无用的 <code>--search_key_num</code> 参数</li><li>优化： <code>extra makefile</code>模板新增<code>AUTO_API_INIT_DATA</code>用于自动生成<code>API</code>初始化代码</li><li>更新： 升级依赖</li></ul><h3>更新预览</h3><blockquote><p>优化后台登录页</p></blockquote><p><img height="924" src="https://oscimg.oschina.net/oscnet/up-003533e2e6a94b15b888904cd0f192d9222.jpg" width="1920" referrerpolicy="no-referrer"><img height="924" src="https://oscimg.oschina.net/oscnet/up-408608ff3befba336a9f8c70578614deda7.jpg" width="1920" referrerpolicy="no-referrer"><img height="924" src="https://oscimg.oschina.net/oscnet/up-fbeca4ca9e8b0d6dac5f6b9c42bc52a8aac.jpg" width="1920" referrerpolicy="no-referrer"></p><p>&nbsp;</p><blockquote><p>移除菜单重复参数，新增路由地址校验</p></blockquote><p><img height="924" src="https://oscimg.oschina.net/oscnet/up-55f5cd44f7e6c56d2bf128cf7f01cfea227.jpg" width="1920" referrerpolicy="no-referrer"></p><blockquote><p>优化富文本组件</p></blockquote><p><img height="1315" src="https://oscimg.oschina.net/oscnet/up-947cbd688d7e75157d1cc4b6bd6af8b0587.jpg" width="2560" referrerpolicy="no-referrer"><img height="1315" src="https://oscimg.oschina.net/oscnet/up-e9ee1e261d3b81143e54a84f7840646a2c0.jpg" width="2560" referrerpolicy="no-referrer"></p><blockquote><p>大幅优化 goctls 批量生成效率</p></blockquote><p><img height="400" src="https://oscimg.oschina.net/oscnet/up-caa9e012bc649e986fe63728f76feec722b.jpg" width="1248" referrerpolicy="no-referrer"></p><p>&nbsp;</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">项目文档地址:&nbsp;&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.ryansu.tech%2Fzh%2F" target="_blank">https://doc.ryansu.tech/zh/</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">Gitee:&nbsp;&nbsp;<a href="https://gitee.com/hopefire/simple-admin-core">https://gitee.com/hopefire/simple-admin-core</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">Github:&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsuyuan32%2Fsimple-admin-core" target="_blank">https://github.com/suyuan32/simple-admin-core</a></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 22 Nov 2023 01:41:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/267543</guid>
            <link>https://www.oschina.net/news/267543</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Torna 1.24.0 发布，接口文档解决方案]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Torna 1.24.0 发布，本次发布内容如下：</p><p style="color:#40485b; margin-left:0em; margin-right:0em; text-align:start">【新增】</p><ul><li>支持查看文档变更记录，精确到字段级别，Markdown、富文本文档支持内容对比</li><li>新增前置脚本、后置脚本，可在请求前动态处理参数信息</li><li>新增文档状态字段（未开始、进行中、已完成），改状态支持钉钉推送</li><li>文档内容变更支持推送到钉钉群，支持@某人</li><li>支持自定义参数类型（下拉框可编辑）</li></ul><p style="color:#40485b; margin-left:0; margin-right:0; text-align:start">【修复】</p><ul><li>未读消息只能显示 10 条问题</li></ul><p>本次升级重点是<strong>查看文档变更记录，</strong>在文档预览界面右上角点击查看</p><p><img height="598" src="https://oscimg.oschina.net/oscnet/up-477cb8c6eede9be9fe26bc695711e9f73f9.png" width="750" referrerpolicy="no-referrer"></p><p>弹出变更历史：</p><p><img height="859" src="https://oscimg.oschina.net/oscnet/up-95fd0830b1b0cd9c3b35011c864619a17a5.png" width="957" referrerpolicy="no-referrer"></p><p>除此之外，富文本文档和 Markdown 文档支持内容对比</p><p><img height="286" src="https://oscimg.oschina.net/oscnet/up-9b21b738ad08ff0b9a8fa750928e5708353.png" width="1353" referrerpolicy="no-referrer"></p><p>文档内容变更后支持推送到钉钉群</p><p>1.24.0 版本新增请求预处理，可动态修改请求参数等信息，比如请求接口前获取一下 token、参数加密</p><p><img height="783" src="https://oscimg.oschina.net/oscnet/up-1ff3c2d1e632ff33af62b5c5041e80430b9.png" width="831" referrerpolicy="no-referrer"></p><p>具体使用可以部署 Torna 进行体验~</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>关于 Torna</strong></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">接口文档解决方案，目标是让接口文档管理变得更加方便、快捷。Torna 采用团队协作的方式管理和维护接口文档，将不同形式的文档纳入进来统一维护。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Torna 弥补了传统文档生成工具（如 swagger）的不如之处，在保持原有功能的前提下丰富并增强了一些实用的功能。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">&nbsp;</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://oscimg.oschina.net/oscnet/up-47d91305f6b4e40f648ded1c23a50e3515c.png" referrerpolicy="no-referrer"></p><h2>解决文档管理痛点</h2><ul><li>不满足 swagger 文档预览页面和调试页面的展现方式</li><li>不喜欢 swagger 这种侵入式注解</li><li>希望使用 javadoc 注释生成文档，并进行接口调试</li><li>希望把公司所有项目接口文档进行统一管理</li><li>希望把项目中的若干文档提供给第三方调用者查看</li><li>希望可以统一管理项目中的字典枚举</li></ul><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">如果您有以上几个需求和痛点，或许可以尝试一下使用 Torna</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftorna.cn%2Ftutorial%2Fstart.html" target="_blank">快速开始</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>推荐组合</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>smart-doc + Torna 实现文档全流程自动化</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">如果您使用 Java 语言，推荐使用<span></span><code>smart-doc + Torna</code></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/smart-doc-team/smart-doc">smart-doc</a> + Torna 组成行业领先的文档生成和管理解决方案，使用 smart-doc 无侵入完成 Java 源代码和注释提取生成 API 文档，自动将文档推送到 Torna 企业级接口文档管理平台。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">通过这套组合您可以实现：只需要写完 Java 注释就能把接口信息推送到 Torna 平台，从而实现接口预览、接口调试。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">推送的内容有：<code>接口名称/author/Path 参数/Header/请求参数/返回参数/字典列表/公共错误码</code></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">如果您是非 Java 语言，可以使用表单页面编辑以上内容，完成后同样可以进行接口预览、调试。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Ftorna.cn%2Fdev%2Fsmart-doc.html" target="_blank">smart-doc 整合 Torna 图文教程</a></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 22 Nov 2023 01:24:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/267541/torna-1-24-0-released</guid>
            <link>https://www.oschina.net/news/267541/torna-1-24-0-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[魔豆文库 moredoc v2.1.0 发布，增强文档预览与集成 Oauth 登录]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bookstack.cn%2Fprojects%2Fmoredoc%2F25025565fbb0a50a52bcb76e9586ac42.png" target="_blank"><img alt="魔豆文库" src="https://static.sitestack.cn/projects/moredoc/25025565fbb0a50a52bcb76e9586ac42.png" referrerpolicy="no-referrer"></a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">魔豆文库 MOREDOC，使用 Go 语言开发实现的文库解决方案，<a href="https://gitee.com/truthhun/DocHub">dochub</a>文库的重构版本，支持 office (全部类型)、PDF、TXT、EPUB、MOBI 等多种文档格式的在线阅读浏览，支持<code>无限级分类</code>、<code>文档批量上传</code>、<code>文档批量转换</code>、<code>全文搜索</code>、<code>云存储</code>、<code>网络爬虫</code>、<code>VIP</code>、<code>手机号登录注册</code>以及<code>支付宝</code>和<code>微信支付</code>等功能，拥有简洁美观的用户视觉和功能体验，以及配套的<a href="https://gitee.com/mnt-ltd/moredoc-app">微信小程序</a>。</p><h2>技术栈</h2><ul><li>Golang ：gin + gRPC + GORM</li><li>Vue.js : nuxt2 + element-ui</li><li>Database : MySQL 5.7+</li></ul><h2>升级日志</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>社区版 (开源版) 升级日志</strong></p><ul><li>增加用户注册时邮箱验证控制（在<span>&nbsp;</span><code>后台-&gt;系统设置-&gt;安全配置-&gt;是否开启注册邮箱验证</code>）</li><li>增加多种文档预览格式，除支持<code>svg</code>外，额外支持<code>png</code>、<code>jpeg</code>和<code>webp</code>等格式预览（在<span>&nbsp;</span><code>后台-&gt;系统设置-&gt;转换配置-&gt;预览格式</code><span>&nbsp;</span>配置）</li><li>增加<code>reconvert</code>指令，支持将以前的<code>svg</code>转为其他预览格式，以减少存储空间的占用和提升预览加载速度</li><li>变更程序指令提示，使用中文以便更清晰呈现指令的使用</li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>专业版升级日志</strong></p><blockquote><p style="margin-left:0; margin-right:0">专业版升级内容包含社区版升级内容</p></blockquote><ul><li>集成<code>Oauth</code>登录，支持微信、QQ、Gitee、Github 等第三方登录（在<code>后台-&gt;系统设置-&gt;Oauth 配置</code>进行配置）</li><li>支持微信小程序登录（在<code>后台-&gt;系统设置-&gt;小程序配置-&gt;启用微信登录</code>配置）</li><li>修复关闭网站后登录框消失的问题</li><li>修复 VIP 购买失败的问题</li><li>修复文档小程序码不显示问题</li><li>优化全文索引，使用队列减小索引更新阻塞时间</li><li>优化重复文档检测</li><li>优化 minio 对 https 的支持</li></ul><h2>演示站点</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">程序新功能体验，一睹为快！</p><ul><li>网址：<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmoredoc.mnt.ltd%2F" target="_blank">https://moredoc.mnt.ltd</a></li><li>管理员账号： admin</li><li>管理员密码： mnt.ltd</li></ul><blockquote><p style="margin-left:0; margin-right:0">演示站点，每天凌晨 1:00 ~ 6:00，每隔一小时重置一次全部数据</p></blockquote><h2>开源地址</h2><ul><li>Gitee -<span>&nbsp;</span><a href="https://gitee.com/mnt-ltd/moredoc">https://gitee.com/mnt-ltd/moredoc</a></li><li>Github -<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmnt-ltd%2Fmoredoc" target="_blank">https://github.com/mnt-ltd/moredoc</a></li><li>MNT.Ltd -<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgit.mnt.ltd%2Fmnt-ltd%2Fmoredoc" target="_blank">https://git.mnt.ltd/mnt-ltd/moredoc</a></li></ul><h2>使用手册</h2><p style="color:#333333; margin-left:0px; margin-right:0px; text-align:left">关于魔豆文库安装部署、二次开发等更详细的教程，详见书栈网<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bookstack.cn%2Fbooks%2Fmoredoc" target="_blank">《魔豆文库使用手册》</a></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 22 Nov 2023 00:34:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/267517</guid>
            <link>https://www.oschina.net/news/267517</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[JeeSite V5.5.2 发布，Java 快速开发平台]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h4>升级内容</h4><ul><li><p style="margin-left:0; margin-right:0">新增，文件上传支持自定义存储表，业务上可独立 file_upload 表，与系统文件上传表分离存储</p></li><li><p style="margin-left:0; margin-right:0">新增 sqlMap.column.toSqlNoAlias() 方法，可以在 mapper 中调用，返回不包含别名的列数据</p></li><li><p style="margin-left:0; margin-right:0">新增 Web 服务脚本，可方便进行 run、start、restart、stop 管理服务</p></li><li><p style="margin-left:0; margin-right:0">新增，富文本中的文件和图片、用户头像的对象存储调用</p></li><li><p style="margin-left:0; margin-right:0">新增 Vue 的 ListSelect 选择框代码生成模板</p></li><li><p style="margin-left:0; margin-right:0">新增 Quartz、Flowable 表 ER 图和注释</p></li><li><p style="margin-left:0; margin-right:0">新增 jdbc.connectTimeout 和 jdbc.socketTimeout 连接池参数</p></li><li><p style="margin-left:0; margin-right:0">新增，一个日志清理接口 logService.deleteLogBefore() 可根据需要创建 job 调用</p></li><li><p style="margin-left:0; margin-right:0">调整，工具 Byte 字节格式化默认显示两位小数</p></li><li><p style="margin-left:0; margin-right:0">优化，服务启动脚本，支持在任意目录运行，无需切换到具体目录下</p></li><li><p style="margin-left:0; margin-right:0">优化，数据库设计模型完善，并生成 Excel 表格和 PNG 模型图</p></li><li><p style="margin-left:0; margin-right:0">优化，查询和重置按钮增加图标、搜索框布局优化改进</p></li></ul><p style="color:#002127; text-align:start"><strong>Spring Boot 3 版本升级</strong></p><ul><li><p style="margin-left:0; margin-right:0">升级 flowable 7.0.0 release</p></li><li><p style="margin-left:0; margin-right:0">新增，微小服务 Web Mini 支持只连接业务库，不使用自带 sys 表的支持</p></li><li><p style="margin-left:0; margin-right:0">修正 ExceptionUtils 包名取不到 jakarta 异常类，导致前端异常信息不能正确显示</p></li><li><p style="margin-left:0; margin-right:0">修正，代码生成模板，中的错误 javax 没有修改为 jakarta 的问题</p></li><li><p style="margin-left:0; margin-right:0">修正，接口调用时 context-type 重复问题，导致接口调用 400 错误</p></li></ul><p style="color:#002127; text-align:start"><strong>Vue 分离端</strong></p><ul><li><p style="margin-left:0; margin-right:0">新增 Upload 组件支持后端服务地址属性自定义设置</p></li><li><p style="margin-left:0; margin-right:0">新增，单元格变色和行变色的例子 testData/list.vue</p></li><li><p style="margin-left:0; margin-right:0">新增，路由表单保存后刷新列表数据例子</p></li><li><p style="margin-left:0; margin-right:0">优化，表格上的 tabs 美化、标题配色优化</p></li><li><p style="margin-left:0; margin-right:0">优化，布局调整，将表格的搜索表单，调整到页面标题的下面</p></li><li><p style="margin-left:0; margin-right:0">优化 ListSelect 细节样式、美化树标题样式、美化布局等</p></li><li><p style="margin-left:0; margin-right:0">优化，标题配色、表格上页签、黑暗主题、主题设置抽屉的遮罩透明等</p></li><li><p style="margin-left:0; margin-right:0">修正，编辑 table 的 change 事件调用 2 次的问题 #I8F3O7</p></li><li><p style="margin-left:0; margin-right:0">修正，文件管理目录树，窗口改变大小的时候刷新目录树的问题</p></li><li><p style="margin-left:0; margin-right:0">修正，表单组件 labelValue 可能为空时的异常</p></li><li><p style="margin-left:0; margin-right:0">更新 package.json 依赖库</p></li></ul><h4>升级<span>​</span>方法</h4><ul><li><p style="margin-left:0; margin-right:0">修改&nbsp;<code>pom.xml</code>&nbsp;文件中的&nbsp;<code>jeesite-parent</code>&nbsp;版本号为&nbsp;<code>5.5.2-SNAPSHOT</code></p></li><li><p style="margin-left:0; margin-right:0">如果您修改了&nbsp;<code>parent</code>、<code>common</code>、<code>modules</code>&nbsp;等项目源码，请与&nbsp;<code>git</code>&nbsp;上的代码进行同步</p></li><li><p style="margin-left:0; margin-right:0">如果您是跨版本升级，请注意每一个版本的升级方法，业务上有调整的地方进行修改</p></li><li><p style="margin-left:0; margin-right:0">执行&nbsp;<code>root/package.bat(sh)</code>&nbsp;打包脚本，强制更新依赖。</p></li></ul><p style="color:#002127; text-align:start"><strong>Spring Boot 3 版本升级</strong></p><ul><li><p style="margin-left:0; margin-right:0">修改&nbsp;<code>pom.xml</code>&nbsp;文件中的&nbsp;<code>jeesite-parent</code>&nbsp;版本号为&nbsp;<code>5.5.2.springboot3-SNAPSHOT</code></p></li><li><p style="margin-left:0; margin-right:0">如果您修改了&nbsp;<code>parent</code>、<code>common</code>、<code>modules</code>&nbsp;等项目源码，请与&nbsp;<code>git</code>&nbsp;上的代码进行同步</p></li><li><p style="margin-left:0; margin-right:0">如果您是跨版本升级，请注意每一个版本的升级方法，业务上有调整的地方进行修改</p></li><li><p style="margin-left:0; margin-right:0">执行&nbsp;<code>root/package.bat(sh)</code>&nbsp;打包脚本，强制更新依赖。</p></li></ul><p style="color:#002127; text-align:start"><strong>Vue 分离端升级</strong></p><ul><li><p style="margin-left:0; margin-right:0">请与&nbsp;<code>jeesite-vue</code>&nbsp;代码仓库源码进行同步，合并代码，手动解决冲突代码。</p></li><li><p style="margin-left:0; margin-right:0">匹配后端版本为&nbsp;<code>JeeSite v5.5.2</code></p></li></ul><h2>了解更多</h2><ul><li><p style="margin-left:0; margin-right:0">JeeSite 官网地址：<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fjeesite.com" target="_blank">http://jeesite.com</a></p></li><li><p style="margin-left:0; margin-right:0">JeeSite 在线文档：<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fdocs.jeesite.com" target="_blank">http://docs.jeesite.com</a></p></li><li><p style="margin-left:0; margin-right:0">JeeSite 演示地址：<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fdemo.jeesite.com" target="_blank">http://demo.jeesite.com</a></p></li><li><p style="margin-left:0; margin-right:0">JeeSite Vue 演示地址：<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fvue.jeesite.com" target="_blank">http://vue.jeesite.com</a></p></li><li><p style="margin-left:0; margin-right:0">JeeSite 源码仓库：<a href="https://gitee.com/thinkgem/jeesite4" target="_blank">https://gitee.com/thinkgem/jeesite4</a></p></li><li><p style="margin-left:0; margin-right:0">JeeSite Vue 前端源码：<a href="https://gitee.com/thinkgem/jeesite-vue" target="_blank">https://gitee.com/thinkgem/jeesite-vue</a></p></li><li><p style="margin-left:0; margin-right:0">JeeSite 跨平台手机端：<a href="https://gitee.com/thinkgem/jeesite-uniapp" target="_blank">https://gitee.com/thinkgem/jeesite-uniapp</a></p></li><li><p style="margin-left:0; margin-right:0">JeeSite Cloud 微服务：<a href="https://gitee.com/thinkgem/jeesite-cloud" target="_blank">https://gitee.com/thinkgem/jeesite-cloud</a></p></li><li><p style="margin-left:0; margin-right:0">JeeSite 客户端安装程序：<a href="https://gitee.com/thinkgem/jeesite-client" target="_blank">https://gitee.com/thinkgem/jeesite-client</a></p></li></ul><h2>JeeSite 生态系统</h2><ul><li><p style="margin-left:0; margin-right:0">分布式微服务（Spring Cloud）：<a href="https://gitee.com/thinkgem/jeesite-cloud">https://gitee.com/thinkgem/jeesite-cloud</a></p></li><li><p style="margin-left:0; margin-right:0">Flowable 业务流程引擎（BPM）：<a href="https://gitee.com/link?target=http%3A%2F%2Fjeesite.com%2Fdocs%2Fbpm%2F">http://jeesite.com/docs/bpm/</a></p></li><li><p style="margin-left:0; margin-right:0">JFlow 工作流引擎：<a href="https://gitee.com/thinkgem/jeesite-jflow">https://gitee.com/thinkgem/jeesite-jflow</a></p></li><li><p style="margin-left:0; margin-right:0">多站点内容管理模块（CMS）：<a href="https://gitee.com/link?target=https%3A%2F%2Fjeesite.com%2Fdocs%2Fcms%2F">https://jeesite.com/docs/cms/</a></p></li><li><p style="margin-left:0; margin-right:0">手机端移动端：<a href="https://gitee.com/thinkgem/jeesite-uniapp">https://gitee.com/thinkgem/jeesite-uniapp</a></p></li><li><p style="margin-left:0; margin-right:0">PC 客户端程序：<a href="https://gitee.com/thinkgem/jeesite-client">https://gitee.com/thinkgem/jeesite-client</a></p></li><li><p style="margin-left:0; margin-right:0">Vue3 分离版本：<a href="https://gitee.com/thinkgem/jeesite-vue">https://gitee.com/thinkgem/jeesite-vue</a></p></li><li><p style="margin-left:0; margin-right:0">JeeSite 统一认证：<a href="https://gitee.com/link?target=https%3A%2F%2Fjeesite.com%2Fdocs%2Foauth2-server">https://jeesite.com/docs/oauth2-server</a></p></li><li><p style="margin-left:0; margin-right:0">TopIAM 统一认证：<a href="https://gitee.com/thinkgem/jeesite-topiam">https://gitee.com/thinkgem/jeesite-topiam</a></p></li><li><p style="margin-left:0; margin-right:0">MaxKey 统一认证：<a href="https://gitee.com/thinkgem/jeesite-maxkey">https://gitee.com/thinkgem/jeesite-maxkey</a></p></li><li><p style="margin-left:0; margin-right:0">MybatisPlus:<span>&nbsp;</span><a href="https://gitee.com/thinkgem/jeesite-mybatisplus">https://gitee.com/thinkgem/jeesite-mybatisplus</a></p></li><li><p style="margin-left:0; margin-right:0">Magic 接口快速开发：<a href="https://gitee.com/thinkgem/jeesite-magic-api">https://gitee.com/thinkgem/jeesite-magic-api</a></p></li><li><p style="margin-left:0; margin-right:0">内外网中间件：<a href="https://gitee.com/link?target=https%3A%2F%2Fmy.oschina.net%2Fthinkgem%2Fblog%2F4624519">https://my.oschina.net/thinkgem/blog/4624519</a></p></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Wed, 22 Nov 2023 00:30:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/267516</guid>
            <link>https://www.oschina.net/news/267516</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Wow 2.8.0 发布，让领域驱动设计变得触手可得]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>基于 DDD、EventSourcing 的现代响应式 CQRS 架构微服务开发框架</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FAhoo-Wang%2FWow%2Fblob%2Fmvp%2FLICENSE"><img alt="License" src="https://img.shields.io/badge/license-Apache%202-4EB1BA.svg" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FAhoo-Wang%2FWow%2Freleases"><img alt="GitHub release" src="https://img.shields.io/github/release/Ahoo-Wang/Wow.svg" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fapp.codacy.com%2Fgh%2FAhoo-Wang%2FWow%2Fdashboard%3Futm_source%3Dgh%26utm_medium%3Dreferral%26utm_content%3D%26utm_campaign%3DBadge_grade"><img alt="Codacy Badge" src="https://app.codacy.com/project/badge/Grade/cfc724df22db4f9387525258c8a59609" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fcodecov.io%2Fgh%2FAhoo-Wang%2FWow"><img alt="codecov" src="https://codecov.io/gh/Ahoo-Wang/Wow/branch/main/graph/badge.svg?token=uloJrLoQir" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FAhoo-Wang%2FWow"><img alt="Integration Test Status" src="https://github.com/Ahoo-Wang/Wow/actions/workflows/integration-test.yml/badge.svg" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FKotlinBy%2Fawesome-kotlin"><img alt="Awesome Kotlin Badge" src="https://kotlin.link/awesome-kotlin.svg" referrerpolicy="no-referrer"></a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><strong>领域驱动&nbsp;</strong><span>&nbsp;</span>|&nbsp;<span>&nbsp;</span><strong>事件驱动</strong><span>&nbsp;&nbsp;</span>|<span>&nbsp;&nbsp;</span><strong>测试驱动</strong><span>&nbsp;&nbsp;</span>|<span>&nbsp;&nbsp;</span><strong>声明式设计</strong><span>&nbsp;</span>｜<span>&nbsp;</span><strong>响应式编程</strong><span>&nbsp;</span>｜<span>&nbsp;</span><strong>命令查询职责分离</strong><span>&nbsp;</span>｜<span>&nbsp;</span><strong>事件溯源</strong></p><h2>更新内容 🎉 🎉 🎉</h2><ul><li>特新: 增强<span>&nbsp;</span><em>JAVA</em><span>&nbsp;</span>兼容性与使用体验</li><li>CI: 新增<span>&nbsp;</span><em>JAVA</em><span>&nbsp;</span>兼容性测试</li><li>案例: 新增经典 DDD 银行转账案例（JAVA）<a href="https://gitee.com/AhooWang/Wow/tree/main/example/transfer" target="_blank">https://gitee.com/AhooWang/Wow/tree/main/example/transfer</a></li></ul><p style="color:#40485b; margin-left:0em; margin-right:0em; text-align:center"><img alt="转账流程" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Saga-Transfer.svg" referrerpolicy="no-referrer"></p><h2>架构图</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-Architecture" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Architecture.svg" referrerpolicy="no-referrer"></p><h2>性能测试 (Example)</h2><ul><li>测试代码：<a href="https://gitee.com/AhooWang/Wow/blob/main/example">Example</a></li><li>测试场景：加入购物车、下单</li><li>命令发送等待模式（<code>WaitStrategy</code>）：<code>SENT</code>、<code>PROCESSED</code></li></ul><h3>部署</h3><ul><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/perf/redis.yaml">Redis</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/perf/mongo.yaml">MongoDB</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/perf/kafka.yaml">Kafka</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/perf/config/mongo_kafka_redis.yaml">Application-Config</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/perf/deployment.yaml">Application-Deployment</a></li></ul><h3>测试报告</h3><h4>加入购物车</h4><ul><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/request/AddCartItem.http">请求</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/document/example/perf/Example.Cart.Add@SENT.pdf">详细报告 (PDF)-SENT</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/document/example/perf/Example.Cart.Add@PROCESSED.pdf">详细报告 (PDF)-PROCESSED</a></li></ul><blockquote><p style="margin-left:0; margin-right:0"><code>WaitStrategy</code>:<span>&nbsp;</span><code>SENT</code></p></blockquote><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="SENT" src="https://gitee.com/AhooWang/Wow/raw/main/document/example/perf/Example.Cart.Add@SENT.png" referrerpolicy="no-referrer"></p><blockquote><p style="margin-left:0; margin-right:0"><code>WaitStrategy</code>:<span>&nbsp;</span><code>PROCESSED</code></p></blockquote><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="PROCESSED" src="https://gitee.com/AhooWang/Wow/raw/main/document/example/perf/Example.Cart.Add@PROCESSED.png" referrerpolicy="no-referrer"></p><h4>下单</h4><ul><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/request/CreateOrder.http">请求</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/document/example/perf/Example.Order.Create@SENT.pdf">详细报告 (PDF)-SENT</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/document/example/perf/Example.Order.Create@PROCESSED.pdf">详细报告 (PDF)-PROCESSED</a></li></ul><blockquote><p style="margin-left:0; margin-right:0"><code>WaitStrategy</code>:<span>&nbsp;</span><code>SENT</code></p></blockquote><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="SENT" src="https://gitee.com/AhooWang/Wow/raw/main/document/example/perf/Example.Order.Create@SENT.png" referrerpolicy="no-referrer"></p><blockquote><p style="margin-left:0; margin-right:0"><code>WaitStrategy</code>:<span>&nbsp;</span><code>PROCESSED</code></p></blockquote><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="PROCESSED" src="https://gitee.com/AhooWang/Wow/raw/main/document/example/perf/Example.Order.Create@PROCESSED.png" referrerpolicy="no-referrer"></p><h2>事件源</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-EventSourcing" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/EventSourcing.svg" referrerpolicy="no-referrer"></p><h2>可观测性</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-Observability" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/OpenTelemetry.png" referrerpolicy="no-referrer"></p><h2>OpenAPI (Spring WebFlux 集成)</h2><blockquote><p style="margin-left:0; margin-right:0">自动注册<span>&nbsp;</span><strong>命令</strong><span>&nbsp;</span>路由处理函数 (<code>HandlerFunction</code>) ，开发人员仅需编写领域模型，即可完成服务开发。</p></blockquote><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-Spring-WebFlux-Integration" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/OpenAPI-Swagger.png" referrerpolicy="no-referrer"></p><h2>测试套件：80%+ 的测试覆盖率轻而易举</h2><blockquote><p style="margin-left:0; margin-right:0">Given -&gt; When -&gt; Expect .</p></blockquote><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-CI-Flow" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/CI-Flow.png" referrerpolicy="no-referrer"></p><h2>前置条件</h2><ul><li>理解<span>&nbsp;</span><strong>领域驱动设计</strong>：《实现领域驱动设计》、《领域驱动设计：软件核心复杂性应对之道》</li><li>理解<span>&nbsp;</span><strong>命令查询职责分离</strong>（CQRS）</li><li>理解<span>&nbsp;</span><strong>事件源架构</strong></li><li>理解<span>&nbsp;</span><strong>响应式编程</strong></li></ul><h2>特性</h2><ul><li><span>&nbsp;</span>Aggregate Modeling 
  <ul><li><span>&nbsp;</span>Single Class</li><li><span>&nbsp;</span>Inheritance Pattern</li><li><span>&nbsp;</span>Aggregation Pattern</li></ul></li><li><span>&nbsp;</span>Saga Modeling 
  <ul><li><span>&nbsp;</span><code>StatelessSaga</code></li></ul></li><li><span>&nbsp;</span>Test Suite 
  <ul><li><span>&nbsp;</span>兼容性测试规范（TCK）</li><li><span>&nbsp;</span><code>AggregateVerifier</code></li><li><span>&nbsp;</span><code>SagaVerifier</code></li></ul></li><li><span>&nbsp;</span>EventSourcing 
  <ul><li>EventStore 
    <ul><li><span>&nbsp;</span>MongoDB (Recommend)</li><li><span>&nbsp;</span>R2dbc 
      <ul><li><span>&nbsp;</span>Database Sharding</li><li><span>&nbsp;</span>Table Sharding</li></ul></li><li><span>&nbsp;</span>Redis</li></ul></li><li>Snapshot 
    <ul><li><span>&nbsp;</span>MongoDB</li><li><span>&nbsp;</span>R2dbc 
      <ul><li><span>&nbsp;</span>Database Sharding</li><li><span>&nbsp;</span>Table Sharding</li></ul></li><li><span>&nbsp;</span>ElasticSearch</li><li><span>&nbsp;</span>Redis (Recommend)</li></ul></li></ul></li><li><span>&nbsp;</span>命令等待策略（<code>WaitStrategy</code>） 
  <ul><li><span>&nbsp;</span><code>SENT</code><span>&nbsp;</span>: 命令发送成功后发送完成信号</li><li><span>&nbsp;</span><code>PROCESSED</code><span>&nbsp;</span>: 命令处理完成后发送完成信号</li><li><span>&nbsp;</span><code>SNAPSHOT</code><span>&nbsp;</span>: 快照生成完成后发送完成信号</li><li><span>&nbsp;</span><code>PROJECTED</code><span>&nbsp;</span>: 命令产生的事件被投影后发送完成信号</li></ul></li><li><span>&nbsp;</span>CommandBus 
  <ul><li><span>&nbsp;</span><code>InMemoryCommandBus</code></li><li><span>&nbsp;</span><code>KafkaCommandBus</code><span>&nbsp;</span>(Recommend)</li><li><span>&nbsp;</span><code>RedisCommandBus</code></li><li><span>&nbsp;</span><code>LocalFirstCommandBus</code></li></ul></li><li><span>&nbsp;</span>DomainEventBus 
  <ul><li><span>&nbsp;</span><code>InMemoryDomainEventBus</code></li><li><span>&nbsp;</span><code>KafkaDomainEventBus</code><span>&nbsp;</span>(Recommend)</li><li><span>&nbsp;</span><code>RedisDomainEventBus</code></li><li><span>&nbsp;</span><code>LocalFirstDomainEventBus</code></li></ul></li><li><span>&nbsp;</span>StateEventBus 
  <ul><li><span>&nbsp;</span><code>InMemoryStateEventBus</code></li><li><span>&nbsp;</span><code>KafkaStateEventBus</code><span>&nbsp;</span>(Recommend)</li><li><span>&nbsp;</span><code>RedisStateEventBus</code></li><li><span>&nbsp;</span><code>LocalFirstStateEventBus</code></li></ul></li><li><span>&nbsp;</span>Spring 集成 
  <ul><li><span>&nbsp;</span>Spring Boot Auto Configuration</li><li><span>&nbsp;</span>Automatically register<span>&nbsp;</span><code>CommandAggregate</code><span>&nbsp;</span>to<span>&nbsp;</span><code>RouterFunction</code></li></ul></li><li><span>&nbsp;</span>可观测性 
  <ul><li><span>&nbsp;</span>OpenTelemetry</li></ul></li><li><span>&nbsp;</span>OpenAPI</li><li><span>&nbsp;</span><code>WowMetadata</code><span>&nbsp;</span>Generator 
  <ul><li><span>&nbsp;</span><code>wow-compiler</code></li></ul></li></ul><h2>Example</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/AhooWang/Wow/blob/main/example">Example</a></p><h2>单元测试套件</h2><h3>80%+ 的测试覆盖率轻而易举。</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Test Coverage" src="https://gitee.com/AhooWang/Wow/raw/main/document/example/example-domain-jococo.png" referrerpolicy="no-referrer"></p><blockquote><p style="margin-left:0; margin-right:0">Given -&gt; When -&gt; Expect .</p></blockquote><h3>Aggregate Unit Test (<code>AggregateVerifier</code>)</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/AhooWang/Wow/blob/main/example/example-domain/src/test/kotlin/me/ahoo/wow/example/domain/order/OrderTest.kt">Aggregate Test</a></p><pre><code><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">internal</span></span></span></span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">class</span></span></span></span></span></span></span></span></span><span><span><span><span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">OrderTest</span></span></span></span></span></span></span></span></span><span><span><span><span></span></span></span></span></span>{

    <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">private</span></span></span></span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span></span></span></span></span></span></span><span><span><span><span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">mockCreateOrder</span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span><span>()</span></span></span></span></span></span></span></span></span></span>: VerifiedStage&lt;OrderState&gt; {
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span> tenantId = GlobalIdGenerator.generateAsString()
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span> customerId = GlobalIdGenerator.generateAsString()

        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span> orderItem = OrderItem(
            GlobalIdGenerator.generateAsString(),
            GlobalIdGenerator.generateAsString(),
            BigDecimal.valueOf(<span><span><span><span><span>10</span></span></span></span></span>),
            <span><span><span><span><span>10</span></span></span></span></span>,
        )
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span> orderItems = listOf(orderItem)
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span> inventoryService = <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">object</span></span></span></span></span> : InventoryService {
            <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">override</span></span></span></span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span></span></span></span></span></span></span><span><span><span><span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">getInventory</span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span><span>(productId: </span></span></span></span></span></span></span></span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49">String</span></span></span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span>)</span></span></span></span></span></span></span></span></span></span>: Mono&lt;<span><span><span><span><span>Int</span></span></span></span></span>&gt; {
                <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">return</span></span></span></span></span> orderItems.filter { it.productId == productId }.map { it.quantity }.first().toMono()
            }
        }
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span> pricingService = <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">object</span></span></span></span></span> : PricingService {
            <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">override</span></span></span></span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span></span></span></span></span></span></span><span><span><span><span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">getProductPrice</span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span><span>(productId: </span></span></span></span></span></span></span></span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49">String</span></span></span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span>)</span></span></span></span></span></span></span></span></span></span>: Mono&lt;BigDecimal&gt; {
                <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">return</span></span></span></span></span> orderItems.filter { it.productId == productId }.map { it.price }.first().toMono()
            }
        }
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">return</span></span></span></span></span> aggregateVerifier&lt;Order, OrderState&gt;(tenantId = tenantId)
            .inject(DefaultCreateOrderSpec(inventoryService, pricingService))
            .given()
            .`<span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">when</span></span></span></span></span>`(CreateOrder(customerId, orderItems, SHIPPING_ADDRESS, <span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5">false</span></span></span></span></span>))
            .expectEventCount(<span><span><span><span><span>1</span></span></span></span></span>)
            .expectEventType(OrderCreated::<span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">class</span></span></span></span></span></span></span></span></span><span><span><span><span>.</span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">java</span></span></span></span></span></span></span></span></span><span><span><span><span>)</span></span></span></span></span>
            .expectStateAggregate {
                assertThat(it.aggregateId.tenantId, equalTo(tenantId))
            }
            .expectState {
                assertThat(it.id, notNullValue())
                assertThat(it.customerId, equalTo(customerId))
                assertThat(it.address, equalTo(SHIPPING_ADDRESS))
                assertThat(it.items, equalTo(orderItems))
                assertThat(it.status, equalTo(OrderStatus.CREATED))
            }
            .verify()
    }

    <span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">/** * 创建订单 */</span></span></span></span></span><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">@Test</span></span></span></span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span></span></span></span></span></span></span><span><span><span><span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">createOrder</span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span><span>()</span></span></span></span></span></span></span></span></span></span> {
        mockCreateOrder()
    }

    <span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">@Test</span></span></span></span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span></span></span></span></span></span></span><span><span><span><span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">createOrderGivenEmptyItems</span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span><span>()</span></span></span></span></span></span></span></span></span></span> {
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span> customerId = GlobalIdGenerator.generateAsString()
        aggregateVerifier&lt;Order, OrderState&gt;()
            .inject(mockk&lt;CreateOrderSpec&gt;(), <span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62">"createOrderSpec"</span></span></span></span></span>)
            .given()
            .`<span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">when</span></span></span></span></span>`(CreateOrder(customerId, listOf(), SHIPPING_ADDRESS, <span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5">false</span></span></span></span></span>))
            .expectErrorType(IllegalArgumentException::<span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">class</span></span></span></span></span></span></span></span></span><span><span><span><span>.</span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">java</span></span></span></span></span></span></span></span></span><span><span><span><span>)</span></span></span></span></span>
            .expectStateAggregate {
                <span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">/* * 该聚合对象处于未初始化状态，即该聚合未创建成功. */</span></span></span></span></span>
                assertThat(it.initialized, equalTo(<span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5">false</span></span></span></span></span>))
            }.verify()
    }

    <span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">/** * 创建订单-库存不足 */</span></span></span></span></span><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">@Test</span></span></span></span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span></span></span></span></span></span></span><span><span><span><span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">createOrderWhenInventoryShortage</span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span><span>()</span></span></span></span></span></span></span></span></span></span> {
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span> customerId = GlobalIdGenerator.generateAsString()
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span> orderItem = OrderItem(
            GlobalIdGenerator.generateAsString(),
            GlobalIdGenerator.generateAsString(),
            BigDecimal.valueOf(<span><span><span><span><span>10</span></span></span></span></span>),
            <span><span><span><span><span>10</span></span></span></span></span>,
        )
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span> orderItems = listOf(orderItem)
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span> inventoryService = <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">object</span></span></span></span></span> : InventoryService {
            <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">override</span></span></span></span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span></span></span></span></span></span></span><span><span><span><span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">getInventory</span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span><span>(productId: </span></span></span></span></span></span></span></span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49">String</span></span></span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span>)</span></span></span></span></span></span></span></span></span></span>: Mono&lt;<span><span><span><span><span>Int</span></span></span></span></span>&gt; {
                <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">return</span></span></span></span></span> orderItems.filter { it.productId == productId }
                    <span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">/* * 模拟库存不足 */</span></span></span></span></span>
                    .map { it.quantity - <span><span><span><span><span>1</span></span></span></span></span> }.first().toMono()
            }
        }
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span> pricingService = <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">object</span></span></span></span></span> : PricingService {
            <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">override</span></span></span></span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span></span></span></span></span></span></span><span><span><span><span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">getProductPrice</span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span><span>(productId: </span></span></span></span></span></span></span></span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49">String</span></span></span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span>)</span></span></span></span></span></span></span></span></span></span>: Mono&lt;BigDecimal&gt; {
                <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">return</span></span></span></span></span> orderItems.filter { it.productId == productId }.map { it.price }.first().toMono()
            }
        }

        aggregateVerifier&lt;Order, OrderState&gt;()
            .inject(DefaultCreateOrderSpec(inventoryService, pricingService))
            .given()
            .`<span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">when</span></span></span></span></span>`(CreateOrder(customerId, orderItems, SHIPPING_ADDRESS, <span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5">false</span></span></span></span></span>))
            <span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">/* * 期望：库存不足异常. */</span></span></span></span></span>
            .expectErrorType(InventoryShortageException::<span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">class</span></span></span></span></span></span></span></span></span><span><span><span><span>.</span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">java</span></span></span></span></span></span></span></span></span><span><span><span><span>)</span></span></span></span></span>
            .expectStateAggregate {
                <span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">/* * 该聚合对象处于未初始化状态，即该聚合未创建成功. */</span></span></span></span></span>
                assertThat(it.initialized, equalTo(<span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5">false</span></span></span></span></span>))
            }.verify()
    }

    <span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">/** * 创建订单-下单价格与当前价格不一致 */</span></span></span></span></span><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">@Test</span></span></span></span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span></span></span></span></span></span></span><span><span><span><span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">createOrderWhenPriceInconsistency</span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span><span>()</span></span></span></span></span></span></span></span></span></span> {
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span> customerId = GlobalIdGenerator.generateAsString()
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span> orderItem = OrderItem(
            GlobalIdGenerator.generateAsString(),
            GlobalIdGenerator.generateAsString(),
            BigDecimal.valueOf(<span><span><span><span><span>10</span></span></span></span></span>),
            <span><span><span><span><span>10</span></span></span></span></span>,
        )
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span> orderItems = listOf(orderItem)
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span> inventoryService = <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">object</span></span></span></span></span> : InventoryService {
            <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">override</span></span></span></span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span></span></span></span></span></span></span><span><span><span><span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">getInventory</span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span><span>(productId: </span></span></span></span></span></span></span></span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49">String</span></span></span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span>)</span></span></span></span></span></span></span></span></span></span>: Mono&lt;<span><span><span><span><span>Int</span></span></span></span></span>&gt; {
                <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">return</span></span></span></span></span> orderItems.filter { it.productId == productId }.map { it.quantity }.first().toMono()
            }
        }
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span> pricingService = <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">object</span></span></span></span></span> : PricingService {
            <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">override</span></span></span></span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span></span></span></span></span></span></span><span><span><span><span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">getProductPrice</span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span><span>(productId: </span></span></span></span></span></span></span></span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49">String</span></span></span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span>)</span></span></span></span></span></span></span></span></span></span>: Mono&lt;BigDecimal&gt; {
                <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">return</span></span></span></span></span> orderItems.filter { it.productId == productId }
                    <span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">/* * 模拟下单价格、商品定价不一致 */</span></span></span></span></span>
                    .map { it.price.plus(BigDecimal.valueOf(<span><span><span><span><span>1</span></span></span></span></span>)) }.first().toMono()
            }
        }
        aggregateVerifier&lt;Order, OrderState&gt;()
            .inject(DefaultCreateOrderSpec(inventoryService, pricingService))
            .given()
            .`<span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">when</span></span></span></span></span>`(CreateOrder(customerId, orderItems, SHIPPING_ADDRESS, <span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5">false</span></span></span></span></span>))
            <span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">/* * 期望：价格不一致异常. */</span></span></span></span></span>
            .expectErrorType(PriceInconsistencyException::<span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">class</span></span></span></span></span></span></span></span></span><span><span><span><span>.</span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">java</span></span></span></span></span></span></span></span></span><span><span><span><span>).</span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">verify</span></span></span></span></span></span></span></span></span></span>()
    }
}</code></pre><h3>Saga Unit Test (<code>SagaVerifier</code>)</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/AhooWang/Wow/blob/main/example/example-domain/src/test/kotlin/me/ahoo/wow/example/domain/cart/CartSagaTest.kt">Saga Test</a></p><pre><code><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">class</span></span></span></span></span></span></span></span></span><span><span><span><span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">CartSagaTest</span></span></span></span></span></span></span></span></span><span><span><span><span></span></span></span></span></span>{

    <span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">@Test</span></span></span></span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span></span></span></span></span></span></span><span><span><span><span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">onOrderCreated</span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span><span>()</span></span></span></span></span></span></span></span></span></span> {
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span> orderItem = OrderItem(
            GlobalIdGenerator.generateAsString(),
            GlobalIdGenerator.generateAsString(),
            BigDecimal.valueOf(<span><span><span><span><span>10</span></span></span></span></span>),
            <span><span><span><span><span>10</span></span></span></span></span>,
        )
        sagaVerifier&lt;CartSaga&gt;()
            .`<span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">when</span></span></span></span></span>`(
                mockk&lt;OrderCreated&gt; {
                    every {
                        customerId
                    } returns <span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62">"customerId"</span></span></span></span></span>
                    every {
                        items
                    } returns listOf(orderItem)
                    every {
                        fromCart
                    } returns <span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5">true</span></span></span></span></span>
                },
            )
            .expectCommandBody&lt;RemoveCartItem&gt; {
                assertThat(it.id, equalTo(<span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62">"customerId"</span></span></span></span></span>))
                assertThat(it.productIds, hasSize(<span><span><span><span><span>1</span></span></span></span></span>))
                assertThat(it.productIds.first(), equalTo(orderItem.productId))
            }
            .verify()
    }
}</code></pre><h2>设计</h2><h3>聚合建模</h3><table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:0px; border:none; box-sizing:border-box; color:#40485b; display:block; font-family:-apple-system,&quot;system-ui&quot;,&quot;Segoe UI&quot;,Helvetica,Arial,&quot;Apple Color Emoji&quot;,&quot;Segoe UI Emoji&quot;,&quot;Segoe UI Symbol&quot;,&quot;Liberation Sans&quot;,&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,&quot;Hiragino Sans GB&quot;,&quot;Wenquanyi Micro Hei&quot;,&quot;WenQuanYi Zen Hei&quot;,&quot;ST Heiti&quot;,SimHei,SimSun,&quot;WenQuanYi Zen Hei Sharp&quot;,sans-serif; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; line-height:inherit; margin:0px 0px 16px; max-width:100%; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; word-break:initial; word-spacing:0px"><tbody><tr><th><strong>Single Class</strong></th><th><strong>Inheritance Pattern</strong></th><th><strong>Aggregation Pattern</strong></th></tr></tbody><tbody><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px; text-align:center"><img alt="Single Class - Modeling" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Modeling-Single-Class-Pattern.svg" referrerpolicy="no-referrer"></td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px; text-align:center"><img alt="Inheritance Pattern- Modeling" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Modeling-Inheritance-Pattern.svg" referrerpolicy="no-referrer"></td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px; text-align:center"><img alt="Aggregation Pattern- Modeling" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Modeling-Aggregation-Pattern.svg" referrerpolicy="no-referrer"></td></tr></tbody></table><h3>加载聚合</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Load Aggregate" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Load-Aggregate.svg" referrerpolicy="no-referrer"></p><h3>聚合状态流</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Aggregate State Flow" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Aggregate-State-Flow.svg" referrerpolicy="no-referrer"></p><h3>发送命令</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Send Command" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Send-Command.svg" referrerpolicy="no-referrer"></p><h3>命令与事件流</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Command And Event Flow" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Command-Event-Flow.svg" referrerpolicy="no-referrer"></p><h3>Saga - OrderProcessManager (Demo)</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="OrderProcessManager" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Saga-Order.svg" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 21 Nov 2023 06:47:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/267407</guid>
            <link>https://www.oschina.net/news/267407</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[HandBrake 1.7.0 发布，多功能视频转码工具]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">HandBrake 1.7.0 现已发布。HandBrake 是一款适用于 Linux、Mac 和 Windows 的开源视频转码器。</p><h4 style="margin-left:0; margin-right:0; text-align:left"><strong>Upgrade Notice</strong></h4><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><span><span><span style="color:#24292f"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>在更新 HandBrake 之前，请确保队列中没有待处理的编码，并确保备份你拥有的任何自定义预设和应用首选项，因为它们可能与新版本不兼容。Windows 用户，请确保安装&nbsp;</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdotnet.microsoft.com%2Fen-us%2Fdownload%2Fdotnet%2F6.0" target="_blank">Microsoft .NET Desktop Runtime version 6.0.x</a><span><span><span style="color:#24292f"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>。Read carefully：你需要&nbsp;<strong>DESKTOP&nbsp;</strong>runtime。即使你已经安装了 .NET 7，也必须安装 .NET 6。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><h4 style="margin-left:0px; margin-right:0px; text-align:start"><strong>HandBrake 1.7.0</strong></h4><p style="color:#333333; margin-left:0px; margin-right:0px; text-align:start"><strong>General</strong></p><ul><li>添加了 Apple VideoToolbox hardware presets</li><li>更新了 Creator presets 
  <ul><li>禁用隔行检测和删除；假设创作者默认使用&nbsp;progressive sources</li></ul></li><li>更新了&nbsp;Social preset 
  <ul><li>在更短的时间内实现更高的质量和帧速率，无需隔行检测和删除</li><li>更适合实时社交短片和屏幕/游戏捕获的现代社交共享</li></ul></li><li>删除了 Email presets，以支持修订后的 Social presets 
  <ul><li>停止通过电子邮件发送视频或使用新的 Social presets</li></ul></li><li>各种错误修复和改进</li></ul><p><strong>Video</strong></p><ul><li>添加 AMD VCN AV1 编码器</li><li>添加了 NVIDIA NVENC AV1 编码器</li><li>添加了对 SVT-AV1 multi-pass ABR 模式的支持</li><li>添加了 QSV Rotate 和 Format filters</li><li>改进了 arm64 / aarch64 / Apple Silicon 架构的性能 
  <ul><li>最新的 FFmpeg 提供更快的 HEVC 解码，bwdif 过滤器速度提高 30%</li><li>新的 SVT-AV1 assembly&nbsp;优化可将性能提高 4 倍</li></ul></li><li>通过删除不需要的 frame copies 以提高内存效率来提高视频转换速度</li><li>改进的杜比视界动态范围元数据传递 
  <ul><li>支持的编码器：x265 10 位</li><li>支持的配置文件和交叉兼容性 ID：8.4、8.1、7.6（仅限 base layer，转换为 8.1）、5.0</li></ul></li><li>改进的 HDR10+ 动态范围元数据传递 
  <ul><li>支持的编码器：x265 10 位、SVT-AV1</li></ul></li><li>改进了 Linux 上的 QSV 支持 (&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FHandBrake%2FHandBrake%2Fpull%2F4958" target="_blank">#4958</a>&nbsp;)</li><li>更新了 NVENC，默认情况下不使用 multi-pass；用户可配置的高级选项</li><li>将 2-pass 编码选项重命名为 multi-pass (&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FHandBrake%2FHandBrake%2Fpull%2F5019" target="_blank">#5019</a>&nbsp;)</li><li>修复了英特尔 QSV 编码器在某些情况下输出 green video 的问题（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FHandBrake%2FHandBrake%2Fissues%2F4842" target="_blank">#4842</a>、<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FHandBrake%2FHandBrake%2Fpull%2F4876" target="_blank">#4876</a>）</li><li>修复了使用 10 位硬件编码器时像素格式转换会稍微改变颜色的问题 (&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FHandBrake%2FHandBrake%2Fissues%2F5011" target="_blank">#5011</a>&nbsp;)</li><li>修复了当源分辨率不是 mod 2 时使用 swscale 而不是 zscale 的扫描失败问题</li><li>修复了从变形 AV1 视频轨道读取时 PAR 不正确的问题</li><li>删除了 VP9 CQ 模式的人为比特率限制</li></ul><p>更多详情可查看：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FHandBrake%2FHandBrake%2Freleases%2Ftag%2F1.7.0" target="_blank">https://github.com/HandBrake/HandBrake/releases/tag/1.7.0</a></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 21 Nov 2023 06:42:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/267405/handbrake-1-7-0-released</guid>
            <link>https://www.oschina.net/news/267405/handbrake-1-7-0-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Gitee 推荐 | 物联网边缘计算网关 FreeIOE]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>FreeIOE 是用于快速构建工业物联网边缘计算网关的开源框架。</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 21 Nov 2023 06:39:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/267402</guid>
            <link>https://www.oschina.net/news/267402</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Git for Windows 2.43.0 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Git for Windows v2.43.0 现已发布，具体更新内容包括：</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong style="color:#333333">New Features</strong></p><ul><li>附带&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgit%2Fgit%2Fblob%2Fv2.43.0%2FDocumentation%2FRelNotes%2F2.43.0.txt" target="_blank">Git v2.43.0</a>。</li><li>附带&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcygwin%2Fcygwin%2Freleases%2Ftag%2Fcygwin-3.4.9" target="_blank">MSYS2 runtime v3.4.9</a>。</li><li>附带&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flists.gnupg.org%2Fpipermail%2Fgnutls-help%2F2023-August%2F004834.html" target="_blank">GNU TLS v3.8.1</a>。</li><li>当安装到启用了 Mandatory Address Space Layout Randomization (ASLR) 的 Windows 设置时（该功能与支持 Git Bash、SSH 和一些其他随 Git for Windows 分发的程序的 MSYS2 运行时不兼容），Git for Windows 安装程序现在提供添加例外<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgit-for-windows%2Fbuild-extra%2Fpull%2F513" target="_blank">情况</a>：将允许这些程序按预期工作。</li><li>附带&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopenssh%2Fopenssh-portable%2Freleases%2Ftag%2FV_9_5_P1" target="_blank">OpenSSH v9.5.P1</a>。</li><li>附带&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcurl%2Fcurl%2Freleases%2Ftag%2Fcurl-8_4_0" target="_blank">cURL v8.4.0</a>。</li><li>附带&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopenssl%2Fopenssl%2Freleases%2Ftag%2Fopenssl-3.1.4" target="_blank">OpenSSL v3.1.4</a>。</li><li>附带&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgit-ecosystem%2Fgit-credential-manager%2Freleases%2Ftag%2Fv2.4.1" target="_blank">Git Credential Manager v2.4.1</a>。</li><li>附带&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgit.savannah.gnu.org%2Fcgit%2Fbash.git%2Fcommit%2F%3Fid%3D2bb3cbefdb8fd019765b1a9cc42ecf37ff22fec6" target="_blank">Bash v5.2.21</a>。</li><li>附带&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmintty%2Fmintty%2Freleases%2Ftag%2F3.7.0" target="_blank">MinTTY v3.7.0</a>。</li></ul><p style="text-align:start"><strong><span><span><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>Bug 修复</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></p><ul><li>target&nbsp;为不带驱动器前缀的绝对路径的<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgit-for-windows%2Fgit%2Fissues%2F4586" target="_blank">符号链接在 checked out 时意外添加了驱动器前缀</a>，导致其「eternally modified」。此错误<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgit-for-windows%2Fgit%2Fpull%2F4592" target="_blank">已得到修复</a>。</li><li>Git for Windows 的安装程序<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgit-for-windows%2Fbuild-extra%2Fpull%2F529" target="_blank">不再被全局<code>GIT_*</code>环境变量</a>所困扰。</li><li>安装程序<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgit-for-windows%2Fbuild-extra%2Fpull%2F498" target="_blank">不再声称「fast-forward or merge」是默认的<code>git pull</code>行为</a>：Git 中的默认行为不久前已更改为「fast-forward only」。</li></ul><table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:0px; box-sizing:border-box; color:#1f2328; display:block; font-family:-apple-system,BlinkMacSystemFont,&quot;Segoe UI&quot;,&quot;Noto Sans&quot;,Helvetica,Arial,sans-serif,&quot;Apple Color Emoji&quot;,&quot;Segoe UI Emoji&quot;; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; margin-bottom:0px !important; margin-top:0px; max-width:100%; orphans:2; overflow:auto; text-align:start; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:max-content; word-spacing:0px"><thead><tr><th>Filename</th><th>SHA-256</th></tr></thead><tbody><tr><td style="border-style:solid; border-width:1px">Git-2.43.0-64-bit.exe</td><td style="border-style:solid; border-width:1px">a6058d7c4c16bfa5bcd6fde051a92de8c68535fd7ebade55fc0ab1c41be3c8d5</td></tr><tr><td style="border-style:solid; border-width:1px">Git-2.43.0-32-bit.exe</td><td style="border-style:solid; border-width:1px">aee1587a4004c6a57b614c81fdc2ae1fa33de0daaf6b650cf6467e4253e024a9</td></tr><tr><td style="border-style:solid; border-width:1px">PortableGit-2.43.0-64-bit.7z.exe</td><td style="border-style:solid; border-width:1px">c76216d032685fa972d129eca30f8c9fb957eb9f46ccbce954e70e07d6211961</td></tr><tr><td style="border-style:solid; border-width:1px">PortableGit-2.43.0-32-bit.7z.exe</td><td style="border-style:solid; border-width:1px">c33f9aa7bf9c59e24db71b65e9d75b1e8532562175afef380119aa1eee90afd1</td></tr><tr><td style="border-style:solid; border-width:1px">MinGit-2.43.0-64-bit.zip</td><td style="border-style:solid; border-width:1px">1905d93068e986258fafc69517df8fddff829bb2a289c1fa4dcc6cdf720ddf36</td></tr><tr><td style="border-style:solid; border-width:1px">MinGit-2.43.0-32-bit.zip</td><td style="border-style:solid; border-width:1px">d46fac9c17b55627f714aefa36c3b00d81651d2bb4076a12b4455b5f841f1a9e</td></tr><tr><td style="border-style:solid; border-width:1px">MinGit-2.43.0-busybox-64-bit.zip</td><td style="border-style:solid; border-width:1px">2bd705f2c378ccbbf25a9095432aada3ac9dd2d963eff51421944beaccdc3e0c</td></tr><tr><td style="border-style:solid; border-width:1px">MinGit-2.43.0-busybox-32-bit.zip</td><td style="border-style:solid; border-width:1px">70799d1f5b9d2469f44299ff33461efd7814531dd9bfb7ae912d1cbf83478162</td></tr><tr><td style="border-style:solid; border-width:1px">Git-2.43.0-64-bit.tar.bz2</td><td style="border-style:solid; border-width:1px">4c19cc73003e55ec71d6f1ce4a961ab32ca22f9c57217d224982535161123f79</td></tr><tr><td style="border-style:solid; border-width:1px">Git-2.43.0-32-bit.tar.bz2</td><td style="border-style:solid; border-width:1px">192f58080247f1eea2845fb61e37e91c05a89b44260c7e045b936ca3e45ac7f6</td></tr></tbody></table><p><span style="background-color:#ffffff; color:#333333">详情可</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgit-for-windows%2Fgit%2Freleases%2Ftag%2Fv2.43.0.windows.1" target="_blank">查看更新说明</a><span style="background-color:#ffffff; color:#333333">。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 21 Nov 2023 06:18:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/267400/git-for-windows-2-43-0-released</guid>
            <link>https://www.oschina.net/news/267400/git-for-windows-2-43-0-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[企业级快速开发框架 nbsaas-boot 1.1.3-2023 发布了]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div><div><pre><code><span><span><span>&lt;</span></span><span><span><span><span><span>parent</span></span></span></span></span><span><span>&gt;</span></span></span><span><span><span>&lt;</span></span><span><span><span><span><span>groupId</span></span></span></span></span><span><span>&gt;</span></span></span>com.nbsaas.boot<span><span><span>&lt;/</span></span><span><span><span><span><span>groupId</span></span></span></span></span><span><span>&gt;</span></span></span><span><span><span>&lt;</span></span><span><span><span><span><span>artifactId</span></span></span></span></span><span><span>&gt;</span></span></span>nbsaas-boot<span><span><span>&lt;/</span></span><span><span><span><span><span>artifactId</span></span></span></span></span><span><span>&gt;</span></span></span><span><span><span>&lt;</span></span><span><span><span><span><span>version</span></span></span></span></span><span><span>&gt;</span></span></span>1.1.3-2023<span><span><span>&lt;/</span></span><span><span><span><span><span>version</span></span></span></span></span><span><span>&gt;</span></span></span><span><span><span>&lt;/</span></span><span><span><span><span><span>parent</span></span></span></span></span><span><span>&gt;</span></span></span></code></pre><p><img alt="" src="https://foruda.gitee.com/images/1692714554881768744/cdda40bc_1029.png" referrerpolicy="no-referrer"></p><p><strong>本次更新内容</strong></p><p>1. 升级 spring-boot 版本，升级 shiro 版本 1.13.0</p><p>2. 增加 SearchData 注解，方便在搜索的适合通过 aop 进行数据拦截</p><p>3. 增加控制操作区域是否显示属性</p><p>4. 新增<span><span>ExtResourceCommand</span> ，处理生成代码的时候生成扩展模块文件夹。</span></p><p>5. 搜索模块支持 or 条件搜索。</p><p>6. 修改通过注解提取模型数据。</p><p><strong>nbsaas-boot 具有以下特点：</strong></p><p>自动建表：nbsaas-boot 提供了自动建表功能，根据用户定义的数据模型自动生成数据库表结构，减少手动操作，提高开发效率。</p><p>开发规范：nbsaas-boot 提供一套开发规范，包括代码风格、命名规范、注释规范等，使团队开发更加规范化和高效化。</p><p>代码生成器：nbsaas-boot 提供代码生成器，根据数据模型自动生成前端和后端代码，提高开发效率和代码质量。</p><p>多租户支持：nbsaas-boot 支持多租户，为不同客户提供独立的数据存储空间和访问权限，保证数据安全性和隔离性</p><p><strong>通过 Command 处理复杂的业务</strong></p><pre><code>InputRequestObject context = <span><span><span><span>new</span></span></span></span> InputRequestObject();
context.setConfig(config);
context.setFormBean(formBean);

 

    <span><span><span><span>new</span></span></span></span> DomainCommand()
        .after(<span><span><span><span>new</span></span></span></span> ApiCommand())
        .after(<span><span><span><span>new</span></span></span></span> ConvertCommand())
        .after(<span><span><span><span>new</span></span></span></span> ControllerFrontCommand())
        .after(<span><span><span><span>new</span></span></span></span> RestCommand())
        .after(<span><span><span><span>new</span></span></span></span> ExtApiCommand())
        .after(<span><span><span><span>new</span></span></span></span> RepositoryCommand())
        .after(<span><span><span><span>new</span></span></span></span> FieldCommand())
        .after(<span><span><span><span>new</span></span></span></span> FinishCommand()).execute(context);</code></pre><p><strong>模型构建</strong></p><pre><code><span><span><span><span>@CatalogClass</span></span></span></span><span><span><span><span>@FormAnnotation</span></span></span></span>(title = <span><span><span><span>"组织架构管理"</span></span></span></span>, model = <span><span><span><span>"组织架构"</span></span></span></span>, menu = <span><span><span><span>"1,27,88"</span></span></span></span>)
<span><span><span><span>@Data</span></span></span></span><span><span><span><span>@Entity</span></span></span></span><span><span><span><span>@Table</span></span></span></span>(name = <span><span><span><span>"sys_structure"</span></span></span></span>)
public class Structure extends CatalogEntity {

    <span><span><span><span>@FormField</span></span></span></span>(title = <span><span><span><span>"父分类名称"</span></span></span></span>)
    <span><span><span><span>@Comment</span></span></span></span>(<span><span><span><span>"父分 id"</span></span></span></span>)
    <span><span><span><span>@FieldName</span></span></span></span><span><span><span><span>@FieldConvert</span></span></span></span>(classType = <span><span><span><span>"Integer"</span></span></span></span>)
    <span><span><span><span>@ManyToOne</span></span></span></span>(fetch = FetchType.LAZY)
    private Structure parent;

    <span><span><span><span>@OneToMany</span></span></span></span>(fetch = FetchType.LAZY, mappedBy = <span><span><span><span>"parent"</span></span></span></span>)
    private List&lt;Structure&gt; children;

}</code></pre><p>通过模型数据提取，然后通过代码生成器生成后端代码 + vue3 后端管理代码</p><p>基础功能项目 https://gitee.com/cng1985/nbsaas-boot-starter<br> 项目脚手架 https://gitee.com/cng1985/nbsaas-admin<br> vue3 后台管理脚手架 https://gitee.com/cng1985/nbsaas-admin-vue3</p></div></div></div>
                                    ]]>
            </description>
            <pubDate>Tue, 21 Nov 2023 05:40:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/267394/nbsaas-boot-1-1-3-2023</guid>
            <link>https://www.oschina.net/news/267394/nbsaas-boot-1-1-3-2023</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[wechat-app-mall 14.14.2 发布，微信小程序商城]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">微信小程序商城 wechat-app-mall 已经升级至 version 14.14.2 ，具体详情请查看码云项目主页更新</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">本次更新功能如下：</p><ol><li>保存小程序码到手机相册，用户拒绝后给你提示并引导用户打开设置去开启权限；</li><li>上传文件接口升级；</li><li>关于我们，帮助中心页面，增加转发及分享朋友圈；</li><li>客服支持配置成企业微信；</li><li>提现后台控制开关；</li><li>增加 IoT 控制；</li><li>按天定价、时段定价页面示例；</li><li>vant，apifm-sdk 升级到最新版；</li><li>核销开关系统参数可控制，核销码改为小程序码，支持直接用微信扫一扫进行核销；</li><li>申请发票增加订阅消息；</li><li>好评率计算方式调整；</li><li>增加设置暱称头像弹框，引导用户完善资料;三级分销抢客支持在 config.js 配置；</li><li>系统设置增加调试开关，以及打开小程序设置;</li><li>秒杀样式美化;</li><li>增加转发朋友圈功能;</li><li>vant 升级到最新版;</li><li>增加动态会员码功能;</li><li>编辑资料页面优化;</li><li>提现超过 2000 增加填写真实姓名;</li></ol></div>
                                    ]]>
            </description>
            <pubDate>Tue, 21 Nov 2023 03:41:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/267383/wechat-app-mall-14-14-2-released</guid>
            <link>https://www.oschina.net/news/267383/wechat-app-mall-14-14-2-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[TypeScript 5.3 正式发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>TypeScript 5.3 已正式发布。</p><p><strong>主要变化</strong></p><ul><li><p>支持&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ftc39%2Fproposal-import-attributes">import attributes</a>&nbsp;提案的最近更新</p></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdevblogs.microsoft.com%2Ftypescript%2Fannouncing-typescript-5-3%2F%23stable-support-resolution-mode-in-import-types" target="_blank">在 Import Types</a>&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdevblogs.microsoft.com%2Ftypescript%2Fannouncing-typescript-5-3%2F%23stable-support-resolution-mode-in-import-types" target="_blank">中提供对<code>resolution-mode</code>的稳定支持</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdevblogs.microsoft.com%2Ftypescript%2Fannouncing-typescript-5-3%2F%23resolution-mode-supported-in-all-module-modes" target="_blank">为所有 Module Modes</a>&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdevblogs.microsoft.com%2Ftypescript%2Fannouncing-typescript-5-3%2F%23resolution-mode-supported-in-all-module-modes" target="_blank">提供</a><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdevblogs.microsoft.com%2Ftypescript%2Fannouncing-typescript-5-3%2F%23resolution-mode-supported-in-all-module-modes" target="_blank"><code>resolution-mode</code>支持</a></li><li><p><code>switch (true)</code>Narrowing</p></li><li><p>Narrowing On Comparisons to Booleans</p></li><li><p>检查对实例字段的<code>super</code>属性访问</p></li><li><p>针对类型的交互式嵌套提示 (Interactive Inlay Hints)</p></li><li><p>跳过 JSDoc 解析以进行优化</p></li><li><p>合并<code>tsserverlibrary.js</code>和<code>typescript.js</code></p></li></ul><hr><p><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ftc39%2Fproposal-import-attributes">import attributes</a></strong></p><p>import attributes 的一个用例是向运行时提供有关模块预期格式的信息。</p><pre><code class="language-javascript">// We only want this to be interpreted as JSON,
// not a runnable/malicious JavaScript file with a `.json` extension.
import obj from "./something.json" with { type: "json" };
</code></pre><p>TypeScript 不会检查这些属性的内容，因为它们是特定于主机的，因此不会对它们进行检查，只是让浏览器和运行时处理它们（可能会出错）。</p><pre><code class="language-javascript">// TypeScript is fine with this.
// But your browser? Probably not.
import * as foo from "./foo.js" with { type: "fluffy bunny" };
</code></pre><p>动态 import () 调用也可以通过第二个参数使用 import 属性。</p><pre><code class="language-javascript">const obj = await import("./something.json", {
    with: { type: "json" }
});
</code></pre><p>第二个参数的预期类型由一个名为<code>ImportCallOptions</code>的类型定义，默认情况下，该类型只期望调用一个属性<code>with</code>。</p><p>请注意，导入属性是从早期的 "导入断言"（import assertions）提案演变而来的，该提案已在 TypeScript 4.5 中实现。最明显的区别是使用了<code>with</code>关键字而非<code>assert</code>关键字。但不太明显的区别是，运行时现在可以自由使用属性来指导导入路径的解析和解释，而导入断言只能在加载模块后断言某些特性。</p><p>随着时间的推移，TypeScript 将淘汰旧的导入断言语法，转而使用建议的导入属性语法。使用 assert 的现有代码应迁移到 with 关键字。需要导入属性的新代码应只使用<code>with</code>关键字。</p><p><strong><code>switch (true)</code>Narrowing</strong></p><p>TypeScript 5.3 可以根据<code>switch (true)</code>中每个<code>case</code>子句的条件执行 narrowing。</p><pre><code class="language-javascript">function f(x: unknown) {
    switch (true) {
        case typeof x === "string":
            // 'x' is a 'string' here
            console.log(x.toUpperCase());
            // falls through...

        case Array.isArray(x):
            // 'x' is a 'string | any[]' here.
            console.log(x.length);
            // falls through...

        default:
          // 'x' is 'unknown' here.
          // ...
    }
}
</code></pre><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdevblogs.microsoft.com%2Ftypescript%2Fannouncing-typescript-5-3%2F" target="_blank">详情查看发布公告</a>。</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 21 Nov 2023 03:39:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/267382/typescript-5-3-ga</guid>
            <link>https://www.oschina.net/news/267382/typescript-5-3-ga</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Spring Security 6.2 GA]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Spring Security 6.2&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fspring.io%2Fblog%2F2023%2F11%2F20%2Fspring-security-6-2-goes-ga" target="_blank">已正式 GA</a>。</p><p>Spring Security 是一个能够为基于 Spring 的企业应用系统提供声明式的安全访问控制解决方案的安全框架。它提供了一组可以在 Spring 应用上下文中配置的 Bean，充分利用了 Spring IoC，DI（控制反转 Inversion of Control ,DI:Dependency Injection 依赖注入）和 AOP（面向切面编程）功能，为应用系统提供声明式的安全访问控制功能，减少了为企业系统安全控制编写大量重复代码的工作。</p><p>Spring Security 6.2 将 Spring Framework baseline&nbsp;与 Project Reactor 2023.0.0 和 Micrometer 1.12.0 一起升级到了 6.1，同时要求将 Java 17 作为最低平台版本，并支持高达 Java 21 的虚拟线程支持。该版本将包含在即将发布的 Spring Boot 3.2 GA 版本中。</p><p>一些版本更新亮点内容如下：</p><p><strong>Configuration</strong></p><ul><li><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fspring-projects%2Fspring-security%2Fissues%2F5011" target="_blank">gh-5011 - (docs)</a>&nbsp;如果存在<code>CorsConfigurationSource</code> bean ，则自动启用<code>.cors()</code></p></li><li><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fspring-projects%2Fspring-security%2Fissues%2F13204" target="_blank">gh-13204 - (docs)</a>&nbsp;添加<code>AbstractConfiguredSecurityBuilder.with(…​)</code>方法以应用返回构建器的配置器</p></li><li><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fspring-projects%2Fspring-security%2Fpull%2F13587" target="_blank">gh-13587 - blog post</a>&nbsp;简化 OAuth2 客户端组件模型的配置</p></li><li><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fspring-projects%2Fspring-security%2Fpull%2F13857" target="_blank">gh-13857 - docs</a>&nbsp;将 servlet 模式支持添加到 AuthorizeHttpRequests</p></li></ul><p><strong>OAuth 2.0/OIDC</strong></p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fspring-projects%2Fspring-security%2Fissues%2F7845" target="_blank">gh-7845 - docs</a>&nbsp;添加 OIDC Back-channel Logout&nbsp;支持</li></ul><p><strong>Messaging</strong></p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fspring-projects%2Fspring-security%2Fpull%2F12532" target="_blank">gh-12532</a>&nbsp;- 添加安全上下文传播支持</li></ul><p><strong>Web</strong></p><ul><li><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fspring-projects%2Fspring-security%2Fpull%2F12817" target="_blank">gh-12817</a>&nbsp;- 使 RedirectStrategy status code 可配置</p></li><li><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fspring-projects%2Fspring-security%2Fissues%2F13988" target="_blank">gh-13988</a>&nbsp;- 可配置 HTTP Basic 请求解析</p></li></ul><p><strong>Documentation</strong></p><ul><li><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fspring-projects%2Fspring-security%2Fissues%2F13784" target="_blank">gh-13784 - docs</a>- 使用示例更新 OAuth2 文档登录页面</p></li><li><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fspring-projects%2Fspring-security%2Fissues%2F11926" target="_blank">gh-11926 - docs</a>&nbsp;记录如何在没有<code>WebSecurityConfigurerAdapter</code>的情况下发布<code>AuthenticationManager</code>&nbsp;<code>@Bean</code></p></li></ul><p>详情可<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fspring.io%2Fblog%2F2023%2F11%2F20%2Fspring-security-6-2-goes-ga" target="_blank">查看官方公告</a>。</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 21 Nov 2023 02:32:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/267367/spring-security-6-2-ga</guid>
            <link>https://www.oschina.net/news/267367/spring-security-6-2-ga</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[XL-LightHouse 1.1.4 发布，零门槛轻松实现大数据实时统计]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h4><strong>升级内容：</strong></h4><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="background-color:#ffffff; color:#1f2328">1、优化系统统计工程管理模块；</span><br><span style="background-color:#ffffff; color:#1f2328">2、insights 模块功能初始化；</span><br><span style="background-color:#ffffff; color:#1f2328">3、项目文档优化；</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong><em>一键部署，一行代码接入，无需大数据研发运维经验，轻松实现海量数据实时统计，使用 XL-LightHouse 后：</em></strong></p><ul><li><span style="color:#0033b3">&nbsp;1、</span>再也不需要用 Flink、Spark、ClickHouse 或者基于 Redis 这种臃肿笨重的方案跑数了；</li><li><span style="color:#0033b3">&nbsp;</span>2、再也不需要疲于应付对个人价值提升没有多大益处的数据统计需求了，能够帮助您从琐碎反复的数据统计需求中抽身出来，从而专注于对个人提升、对企业发展更有价值的事情；</li><li><span style="color:#0033b3">&nbsp;</span>3、轻松帮您实现任意细粒度的监控指标，是您监控服务运行状况，排查各类业务数据波动、指标异常类问题的好帮手；</li><li><span style="color:#0033b3">&nbsp;</span>4、培养数据思维，辅助您将所从事的工作建立数据指标体系，量化工作产出，做专业严谨的职场人，创造更大的个人价值；</li></ul><h4><em><strong>概述</strong></em></h4><ul><li>XL-LightHouse 是针对互联网领域繁杂的流式数据统计需求而开发的一套集成了数据写入、数据运算、数据存储和数据可视化等一系列功能，支持超大数据量，支持超高并发的【通用型流式大数据统计平台】。</li><li>XL-LightHouse 目前已基本涵盖了常见的流式数据统计场景，包括 count、sum、max、min、avg、distinct、topN/lastN 等多种运算，支持多维度计算，支持分钟级、小时级、天级多个时间粒度的统计，支持自定义统计周期的配置。</li><li>XL-LightHouse 内置丰富的转化类函数、支持表达式解析，可以满足各种复杂的条件筛选和逻辑判断。</li><li>XL-LightHouse 是一套功能完备的流式大数据统计领域的数据治理解决方案，它提供了比较友好和完善的可视化查询功能，并对外提供 API 查询接口，此外还包括数据指标管理、权限管理、统计限流等多种功能。</li><li>XL-LightHouse 支持时序性数据的存储和查询。</li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong><em>产品优势</em></strong></p><ul><li>XL-LightHouse 面向企业繁杂的流式数据统计需求，可以帮助企业在极短时间内快速实现数以万计、数十万计的数据指标，而这是 Flink、ClickHouse 之类技术所远不能比拟的，XL-LightHouse 帮助企业低成本实现数据化运营，数据指标体系可遍布企业运转的方方面面；</li><li>对单个流式统计场景的数据量无限制，可以非常庞大，也可以非常稀少，您既可以使用它完成十亿级用户量 APP 的 DAU 统计、十几万台服务器的运维监控、一线互联网大厂数据量级的日志统计、也可以用它来统计一天只有零星几次的接口调用量、耗时状况；</li><li>支持高并发查询统计结果；</li><li>一键部署、一行代码接入，无需专业的大数据研发人员，普通工程人员就可以轻松驾驭；</li><li>有完善的数据指标可视化以及数据指标管理维护等功能；</li></ul><h4><strong><em>收益</em></strong></h4><ul><li>XL-LightHouse 可以帮助企业更快速的搭建起一套较为完善的、稳定可靠的数据化运营体系，节省企业在数据化运营方面的投入，主要体现在以下几个方面：</li><li>减少企业在流式大数据统计方面的研发成本和数据维护成本。</li><li>帮助企业节省时间成本，辅助互联网产品的快速迭代。</li><li>为企业节省较为可观的服务器运算资源。</li><li>便于数据在企业内部的共享和互通。</li><li>此外，XL-LightHouse 对中小企业友好，它大大降低了中小企业使用流式大数据统计的技术门槛，通过简单的页面配置和数据接入即可应对繁杂的流式数据统计需求。&nbsp;</li></ul><h4><strong><em>项目地址</em></strong></h4><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxl-xueling%2Fxl-lighthouse.git" target="_blank">https://github.com/xl-xueling/xl-lighthouse.git</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/xl-xueling/xl-lighthouse.git">https://gitee.com/xl-xueling/xl-lighthouse.git</a></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 21 Nov 2023 01:46:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/267354/xl-lighthouse-1-1-4</guid>
            <link>https://www.oschina.net/news/267354/xl-lighthouse-1-1-4</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
    </channel>
</rss>
