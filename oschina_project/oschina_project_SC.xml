<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[开源中国-软件更新资讯]]>
        </title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="http://rsshub.app/oschina/news/project" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[开源中国-软件更新资讯 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Tue, 12 Mar 2024 13:40:00 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[酷瓜云课堂（内网版）v1.1.2 发布，局域网在线教育平台]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><img alt="酷瓜云课堂-局域网学习平台" src="https://portal-1255691183.file.myqcloud.com/img/content/624528cd8be23.png" referrerpolicy="no-referrer"></p><h3>更新内容</h3><ul><li>增加弹幕管理</li><li>增加图文背景水印</li><li>增加内容审核开关</li><li>单元测评增加题型过滤</li><li>增加 post 方式传递 csrf_token</li><li>Response 增加 unauthorized() 返回</li><li>删除 chapter 中 resource_count,consult_count 属性</li><li>删除 resource 表 chapter_id 属性</li><li>删除 Article 中多余的 settings 属性</li><li>重新统计 course 中 resource_count</li><li>修正 home 模块编辑器图片上传</li><li>修正直播回放获取播放地址参数问题</li><li>图文和文章增加 markdown 支持</li><li>精简 CsrfToken 白名单</li><li>拆解优化创建表脚本</li><li>优化 Storage.php</li></ul><h3>系统介绍</h3><p>酷瓜云课堂内网版，采用 C 扩展框架 Phalcon 开发，使用本地基础服务，无营销相关功能，主要适用于公司、集团、机关、学校等内部网络环境使用。</p><h3>系统功能</h3><p>实现了点播、直播、专栏、问答、积分等。</p><p>友情提示：</p><ul><li>演示系统配置低，带宽有限，切莫压测</li><li>课程数据来源于网络（无实质内容）</li><li>管理后台已禁止数据提交，私密配置已过滤</li></ul><p>系统演示：</p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flan-edu.koogua.com" target="_blank">前台演示</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flan-edu.koogua.com%2Fadmin" target="_blank">后台演示</a></li></ul><p>演示账号：100015@163.com / 123456 （前后台通用）</p><h3>项目组件</h3><ul><li>后台框架：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fphalcon.io" target="_blank">phalcon 3.4.5</a></li><li>前端框架：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flayui.dev" target="_blank">layui 2.9.3</a></li><li>全文检索：<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.xunsearch.com" target="_blank">xunsearch 1.4.9</a></li><li>基础依赖：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fphp.net" target="_blank">php7.3</a>， <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmysql.com" target="_blank">mysql5.7</a>， <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fredis.io" target="_blank">redis5.0</a></li></ul><h3>项目文档</h3><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.koogua.com%2Fpage%2Fwiki" target="_blank">运行环境搭建</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.koogua.com%2Fpage%2Fwiki" target="_blank">系统服务配置</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.koogua.com%2Fpage%2Fwiki" target="_blank">客户终端配置</a></li></ul><h3>产品试用</h3><p>申请地址：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.koogua.com%2Fpage%2Ftrial" target="_blank">点击申请</a></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 12 Mar 2024 11:25:43 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/282772</guid>
            <link>https://www.oschina.net/news/282772</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[PDManer [元数建模]-v4.9.2 发布：一款简单好用的数据库建模平台]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h1>特别说明</h1><hr><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.pdmaas.cn" target="_blank"><strong>平台公云版及企业私云版已经发布，增加多人团队协作支持，点击这里了解</strong></a></p><hr><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>[PDManer 元数建模 - v4]</strong>，历时五年，持续升级，工匠精神，做一款简单好用的数据库建模平台。</p><blockquote><p style="margin-left:0; margin-right:0">元数建模平台，使用 React+Electron+Java 技术体系构建。</p></blockquote><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">[PDMan-v2] --&gt; [CHINER-v3] --&gt; [PDManer-v4]，连续五年，一直保持很好的传承和延续。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">PDManer 元数建模软件 (v4 版本）介绍：<a href="https://my.oschina.net/skymozn/blog/5515012">PDManer [元数建模]-v4.0.0 发布：一款简单好用的数据库建模平台</a></p><h1>4.9.2 版本升级内容清单</h1><hr><ul><li>1.[新增功能] 新增数据库设计规范检查功能</li><li>2.[缺陷修复] 修复关系图某些场景下无法搜索的问题</li><li>3.[缺陷修复] 修复修改数据域后数据类型没有更新的问题</li><li>4.[缺陷修复] 修复创建视图时选择数据表时搜索失效的问题</li></ul><h2>此前 4.9.1 升级内容</h2><ul><li><ol><li>[新增功能] 物理表设计扩展字段增加多种格式支持，如下拉框，数字框，单选等</li></ol></li><li><ol><li>[缺陷修复] 修正 ORACLE 数据库通过 all_tables 读取数据库元数据信息</li></ol></li><li><ol><li>[新增功能] DM (达梦）数据库通过 all_tables 读取数据库元数据信息</li></ol></li><li><ol><li>[新增功能] DB2 数据库通过 sysibm.systables 读取数据库元数据信息</li></ol></li><li><ol><li>[新增功能] 瀚高数据库支持，增加 DDL 以及通过 pg_tables 读取元数据</li></ol></li><li><ol><li>[缺陷修复] 修正 MySQL，Oracle，SQLServer，PosgreSQL，DB2，达梦，瀚高等数据库的自增数据类型模板</li></ol></li></ul><hr><h1>新功能说明</h1><h2>1. 数据库设计规范检查</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">规范配置：<br><img alt="" src="https://oscimg.oschina.net/oscnet/up-dec7b1efb26e135d58e7bb409a95cff7506.png" referrerpolicy="no-referrer"><br> 规范检查:<br><img alt="" src="https://oscimg.oschina.net/oscnet/up-4fd7d3924d0edb640d57543acbe3e89fbd5.png" referrerpolicy="no-referrer"></p><h1>源代码 &amp; 下载</h1><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">我们将长期持续维护 PDManer 元数建模的升级，并及时采纳合理的用户建议。</p><ul><li>开源免费客户端版本，下载安装:<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.pdmaner.com%2Fdownload%2Fv4.9.2" target="_blank">安装文件下载</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.pdmaas.cn" target="_blank">平台公云版及企业私云版，点击这里了解</a></li><li>软件下载链接：<a href="https://gitee.com/robergroup/pdmaner/releases">Gitee 发行版</a></li><li>[源代码 - 客户端] 托管于码云 Gitee，(<a href="https://gitee.com/robergroup/pdmaner">https://gitee.com/robergroup/pdmaner</a>)</li><li>[源代码 - Java 端] 托管于码云 Gitee，(<a href="https://gitee.com/robergroup/chiner-java">https://gitee.com/robergroup/chiner-java</a>)</li></ul><h1>社区用户 - 特别价值贡献 (语雀文档)</h1><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fpdmaner%2Fdocs%2Fpdmaner-manual" target="_blank">PDManer 元数建模 - v4 - 操作手册</a></li></ul><h1>历史版本发布日志</h1><h2>v4.9 版本 (2024 年)</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">01-27，<a href="https://www.oschina.net/news/276757">PDManer [元数建模]-v4.9.0 发布：一款简单好用的数据库建模平台</a></p><h2>v4.8 版 (2024 年):</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">01-17，<a href="https://www.oschina.net/news/275971">PDManer [元数建模]-v4.8.0 发布：一款简单好用的数据库建模平台</a></p><h2>v4.7 版 (2023 年):</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">11-26，<a href="https://my.oschina.net/skymozn/blog/10260837">PDManer [元数建模]-v4.7.0 发布：一款简单好用的数据库建模平台</a></p><h2>v4.6 版 (2023 年):</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">08-20，<a href="https://www.oschina.net/news/254560/pdmaner-4-6-3-released">PDManer [元数建模]-v4.6.3 发布：一款简单好用的数据库建模平台</a><br> 07-23，<a href="https://www.oschina.net/news/250521/pdmaner-4-6-2-release">PDManer [元数建模]-v4.6.1 发布：一款简单好用的数据库建模平台</a><br> 07-17，<span>&nbsp;</span><a href="https://gitee.com/robergroup/pdmaner/releases/tag/v4.6.1">PDManer [元数建模]-v4.6.1 发布：一款简单好用的数据库建模平台</a><br> 06-05，<a href="https://my.oschina.net/skymozn/blog/9868228">PDManer [元数建模]-v4.6.0 发布：一款简单好用的数据库建模平台</a></p><h2>v4.5 版 (2023 年):</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">03-27，<a href="https://my.oschina.net/skymozn/blog/8590982">PDManer [元数建模]-v4.5.1 发布：一款简单好用的数据库建模平台</a><span>&nbsp;</span>03-19，<span>&nbsp;</span><a href="https://my.oschina.net/skymozn/blog/8582726">PDManer [元数建模]-v4.5.0 发布：一款简单好用的数据库建模平台</a></p><h2>v4.3 版 (2023 年):</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">02-25，<span>&nbsp;</span><a href="https://my.oschina.net/skymozn/blog/8240850">PDManer [元数建模]-v4.4.0 发布：一款简单好用的数据库建模平台</a><br> 01-07，<span>&nbsp;</span><a href="https://my.oschina.net/skymozn/blog/5930631">PDManer [元数建模]-v4.3.0 发布：一款简单好用的数据库建模平台</a></p><h2>v4.0 版 (2022 年):</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">11-27，<span>&nbsp;</span><a href="https://my.oschina.net/skymozn/blog/5599770">PDManer [元数建模]-v4.2.2 发布：一款简单好用的数据库建模平台</a><br> 10-15，<span>&nbsp;</span><a href="https://www.oschina.net/news/213704/pdmaner-4-2-0-released">PDManer [元数建模]-v4.2.0 发布：一款简单好用的数据库建模平台</a><br> 09-17，<span>&nbsp;</span><a href="https://my.oschina.net/skymozn/blog/5578581">PDManer [元数建模]-v4.1.5 发布：一款简单好用的数据库建模平台</a><br> 08-16，<span>&nbsp;</span><a href="https://my.oschina.net/skymozn/blog/5565965">PDManer [元数建模]-v4.1.4 发布：一款简单好用的数据库建模平台</a><br> 08-16，<span>&nbsp;</span><a href="https://my.oschina.net/skymozn/blog/5565965">PDManer [元数建模]-v4.1.4 发布：一款简单好用的数据库建模平台</a><br> 07-17，<span>&nbsp;</span><a href="https://my.oschina.net/skymozn/blog/5555061">PDManer [元数建模]-v4.1.3 发布：一款简单好用的数据库建模平台</a><br> 05-17，<span>&nbsp;</span><a href="https://my.oschina.net/skymozn/blog/5526958">PDManer [元数建模]-v4.1.1 发布：一款简单好用的数据库建模平台</a><br> 05-09，<span>&nbsp;</span><a href="https://my.oschina.net/skymozn/blog/5523590">PDManer [元数建模]-v4.1.0 发布：一款简单好用的数据库建模平台</a><br> 04-17，<span>&nbsp;</span><a href="https://my.oschina.net/skymozn/blog/5515012">PDManer [元数建模]-v4.0.0 发布：一款简单好用的数据库建模平台</a></p><h2>v3.5 版 (2021 年):</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">12-12，<span>&nbsp;</span><a href="https://my.oschina.net/skymozn/blog/5358921">CHINER [元数建模]-v3.5.7 发布：最好用的国产开源数据库建模平台</a><br> 11-27，<span>&nbsp;</span><a href="https://my.oschina.net/skymozn/blog/5329462">CHINER [元数建模]-v3.5.6 发布：最好用的国产开源数据库建模平台</a><br> 11-07，<span>&nbsp;</span><a href="https://my.oschina.net/skymozn/blog/5300548">CHINER [元数建模]-v3.5.5 发布：最好用的国产开源数据库建模平台</a><br> 10-31，<a href="https://my.oschina.net/skymozn/blog/5292026">CHINER [元数建模]-v3.5.4 发布：最好用的国产开源数据库建模平台</a><br> 10-24，<a href="https://my.oschina.net/skymozn/blog/5286281">CHINER [元数建模]-v3.5.3 发布：最好用的国产开源数据库建模平台</a><br> 10-17，<a href="https://my.oschina.net/skymozn/blog/5281261">CHINER [元数建模]-v3.5.2 发布：最好用的国产开源数据库建模平台</a><br> 10-06，<a href="https://my.oschina.net/skymozn/blog/5274141">CHINER [元数建模]- 国庆版 - 补丁修正版 v3.5.1：最好用的国产开源数据库建模平台</a><br> 09-30，<a href="https://my.oschina.net/skymozn/blog/5272352">CHINER [元数建模]- 国庆版发布 - 升级至 v3.5.0：最好用的国产开源数据库建模平台</a></p><h2>v3.3 版 (2021 年):</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">9 月 15 日，<a href="https://my.oschina.net/skymozn/blog/5262033">CHINER [元数建模] 升级至 v3.3.0：最好用的国产开源数据库建模平台</a></p><h2>v3.2 版 (2021 年):</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">8 月 22 日，<a href="https://my.oschina.net/skymozn/blog/5196704">PDMan 的最新版 - CHINER [元数建模] 升级至 v3.2：最好用的国产开源数据库建模平台</a><br> 9 月 07 日，<a href="https://my.oschina.net/skymozn/blog/5236977">PDMan 的最新版 - CHINER [元数建模] 升级至 v3.2.1：最好用的国产开源数据库建模平台</a></p><h2>v3.1 版 (2021 年):</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">8 月 8 日，<a href="https://my.oschina.net/skymozn/blog/5170023">PDMan 的最新版 - CHINER [元数建模] 升级至 v3.1：最好用的国产开源数据库建模平台</a></p><h2>v3.0 版 (2021 年)：</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">7 月 17 日，<a href="https://my.oschina.net/skymozn/blog/5134881">PDMan 升级换代至 -&gt;CHINER [元数建模] v3.0：最好用的国产开源数据库建模平台</a></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 12 Mar 2024 09:41:23 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/282753/pdmaner-4-9-2-released</guid>
            <link>https://www.oschina.net/news/282753/pdmaner-4-9-2-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Redisson 3.27.2 发布，官方推荐的 Redis 客户端]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Redisson 3.27.2&nbsp;现已发布，这是一个 Java 编写的 Redis 客户端，具备驻内存数据网格（In-Memory Data Grid）功能，并获得了 Redis 的官方推荐。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">此版本更新内容如下：</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong style="color:#333333"><span style="background-color:#ffffff; color:#1f2328">Feature</span></strong></p><ul><li style="text-align:left"><span style="background-color:#ffffff; color:#1f2328">实现了 RShardedTopic.countSubscribers() 方法</span></li><li style="text-align:left"><span style="background-color:#ffffff; color:#1f2328">RedissonMultiLock 实现了 isHeldByThread() 和 isHeldByCurrentThread() 方法</span></li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong style="color:#333333"><span style="background-color:#ffffff; color:#1f2328">Fixed</span></strong></p><ul><li style="text-align:left"><span style="background-color:#ffffff; color:#1f2328">多次锁定 RLock 会将 remainTimeToLive 重置为配置默认值</span></li><li style="text-align:left"><span style="background-color:#ffffff; color:#1f2328">日志中未显示 natMapper 引发的异常</span></li><li style="text-align:left"><span style="background-color:#ffffff; color:#1f2328">OSGi jdk.net 包导入应为可选项</span></li><li style="text-align:left"><span style="background-color:#ffffff; color:#1f2328">ServiceManager.resolveAll() 方法抛出 NPE</span></li><li style="text-align:left"><span style="background-color:#ffffff; color:#1f2328">RObject.addListenerAsync() 方法引发 UnsupportedOperationException</span></li><li style="text-align:left"><span style="background-color:#ffffff; color:#1f2328">StatusListener 无法与 RShardedTopic 一起工作</span></li><li style="text-align:left"><span style="background-color:#ffffff; color:#1f2328">如果添加了从节点，在集群模式下会抛出 NPE</span></li><li style="text-align:left"><span style="background-color:#ffffff; color:#1f2328">在集群模式下持续重新连接已移除的从节点</span></li><li style="text-align:left"><span style="background-color:#ffffff; color:#1f2328">删除 TrackingListener 时的错误处理</span></li><li style="text-align:left"><span style="background-color:#ffffff; color:#1f2328">FlushListener 接收重复事件</span></li><li style="text-align:left"><span style="background-color:#ffffff; color:#1f2328">SlotsDecoder 在结果为空时抛出 NPE</span></li><li style="text-align:left"><span style="background-color:#ffffff; color:#1f2328">RedissonCache 与 Spring (6.1+) 缓存接口方法之间的冲突</span></li><li style="text-align:left"><span style="background-color:#ffffff; color:#1f2328">RedissonClient.shutdown() 方法在调用 serviceManager.getShutdownLatch() 时挂起</span></li><li style="text-align:left"><span style="background-color:#ffffff; color:#1f2328">PingConnectionHandler 导致的「Failed to submit a listener notification task. Event loop shut down?」</span></li><li style="text-align:left"><span style="background-color:#ffffff; color:#1f2328">JsonCodecWrapper 未正确缓存</span></li></ul><p>更新说明：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fredisson%2Fredisson%2Freleases%2Ftag%2Fredisson-3.27.2" target="_blank">https://github.com/redisson/redisson/releases/tag/redisson-3.27.2</a></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 12 Mar 2024 08:01:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/282729/redisson-3-27-2-released</guid>
            <link>https://www.oschina.net/news/282729/redisson-3-27-2-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[【店滴云】增加关注公众号登录后台管理系统]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="text-align:center">【店滴云】增加关注公众号登录后台管理系统</p><p><span style="background-color:#ffffff; color:#40485b">店滴云，让经营场所，更智能。围绕茶室、酒店、健身房、公寓、出租房等经营性场所进行物联网改造。同时支持多种物联网通信协议，开放智能门锁，智能开关，智能手环的 sdk 供开发者使用。</span></p><p>1、增加微信公众号通过第三方平台生成二维码，包括临时和永久二维码</p><p>2、增加扫码绑定账号和扫码关注公众号登录系统功能</p><p>3、增加为微信公众号中直接通过网页授权登录系统的功能</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 12 Mar 2024 07:51:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/282726</guid>
            <link>https://www.oschina.net/news/282726</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[outline.js 3.33.0 已经发布，自动生成文章导读导航]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>outline.js 3.33.0 已经发布，自动生成文章导读导航</p><p>此版本更新内容包括：</p><h3>Features</h3><ul><li>文章大纲导航的滚动条会随文章正文滚动位置同步滚动，使大纲导航的当前章节始终可见；</li></ul><p>详情查看：<a href="https://gitee.com/yaohaixiao/outline.js/releases/3.33.0">https://gitee.com/yaohaixiao/outline.js/releases/3.33.0</a></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 12 Mar 2024 06:09:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/282698/outline-js-3-33-0-released</guid>
            <link>https://www.oschina.net/news/282698/outline-js-3-33-0-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[GNU Linux-libre 6.8 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>在 <a href="https://www.oschina.net/news/282502/linux-kernel-6-8">Linux Kernel 6.8</a> 版本发布后，自由软件基金会的拉美团队（FSFLA）照例跟进<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.fsfla.org%2Fikiwiki%2Fselibre%2Flinux-libre%2F%23news" target="_blank">发布</a>了 GNU Linux-libre 6.8 内核。值得一提的是，上个月&nbsp;GNU Linux-libre 刚庆祝了项目诞生 16 周年。</p><p><img alt="" height="278" src="https://oscimg.oschina.net/oscnet/up-01f8bd4d6be86f550135c5e017c512d202c.png" width="500" referrerpolicy="no-referrer"></p><p>一些更新内容包括：</p><p><strong>Cleaning up changes</strong></p><ul><li>删除了对 atmel、hermes、orinoco_usb、libertas_cs 和 zd1201 驱动程序的清理，因为它们已经在上游被移除。</li><li>清理了 Intel qat_420xx、Imagination PowerVR、Intel Xe、Chips and Media Wave5、Intel VSC、Aquantia PHY 和 Realtek rtw8922a 的新驱动程序。</li><li>coda 驱动程序移到了上游"source"树中，因此对其清理工作进行了调整。</li><li>清理了 ARM 和 AArch64 devicetree 文件中的新 blob 名称。</li><li>上游修改了 .deb 打包脚本，基于此修改进行了调整，并借此机会改进了 wording。</li></ul><p><span style="color:#000000">此外，项目团队还在尝试修复 Intel i915 驱动程序的问题。</span></p><blockquote><p><span style="color:#000000">去年，我们了解到在某些 i915 硬件变体上出现了无限循环，因为它们试图回退到我们已清理为难以区分的名称的早期 blob 变体。</span></p><p><span style="color:#000000">我们修复了这一问题，甚至向上游提供了补丁。 但我们的补丁并没有被采纳，而是针对我们的补丁做了其他修改，导致驱动程序在我们的情况下噪音更大。</span></p><p><span style="color:#000000">我们已经解决了额外噪音的问题，但这些上游更改并不是导致驱动程序再次损坏的原因。 我们仍然不知道是什么原因造成的，但症状与之前的故障类似：一些装有英特尔显卡的系统出现 freeze。</span></p><p><span style="color:#000000">使用 i915.enable_guc=0 启动将避免受此问题影响的系统出现明显的 freeze 现象。</span></p></blockquote><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.fsfla.org%2Fikiwiki%2Fselibre%2Flinux-libre%2F" target="_blank">GNU Linux-libre</a>&nbsp;<span style="color:#000000">项目致力于为那些遵循自由软件基金会的《GNU 自由操作系统发行版指南》（GNU Free System Distribution Guidelines）的人们提供上游 Linux 内核的 100% 自由版本。</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="color:#000000">GNU Linux-libre 从 Linux 内核中删除了那些不含源代码、源代码被混淆或遮蔽、使用非自由软件许可证、不允许用户修改软件使其达到用户要求、诱导或要求用户安装额外的非自由软件的软件。</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">更多详情可查看<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.fsfla.org%2Fpipermail%2Flinux-libre%2F2024-March%2F003538.html" target="_blank">此处</a>。</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 12 Mar 2024 06:07:54 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/282696/gnu-linux-libre-6-8-released</guid>
            <link>https://www.oschina.net/news/282696/gnu-linux-libre-6-8-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[OpenAPI Generator v7.4.0 发布，OpenAPI 规范自动生成代码]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#333333"><span style="background-color:#ffffff"><span style="color:#333333"><span style="color:#0f1419"><span style="background-color:#ffffff">OpenAPI Generator v6.6.0 现已发布，此</span></span></span></span><span style="background-color:#ffffff"><span style="color:#1f2328">版本包含了 90 多项增强功能和错误修复，以及 1 个</span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAPITools%2Fopenapi-generator%2Fpulls%3Fq%3Dis%253Apr%2Bmilestone%253A7.4.0%2Bis%253Aclosed%2Blabel%253A%2522Breaking%2Bchange%2B%2528with%2Bfallback%2529%2522" target="_blank">&nbsp;breaking change (with fallback)</a>&nbsp;<span style="background-color:#ffffff"><span style="color:#333333"><span style="color:#0f1419"><span style="background-color:#ffffff">。</span></span></span></span><span style="background-color:#ffffff"><span style="color:#000000">OpenAPI Generator 可用于在给定 OpenAPI 规范（v2, v3）的情况下自动生成 API 客户端库、server stubs、文档以及配置。</span></span></span></p><p style="margin-left:0px; margin-right:0px; text-align:start"><span style="color:#1f2328">一些更新亮点如下：</span></p><p style="text-align:start"><strong><span style="color:#1f2328"><span style="background-color:#ffffff">General</span></span></strong></p><ul><li>当设置 inputSpecRootDirectory 时，inputSpec 不应该是强制性的&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAPITools%2Fopenapi-generator%2Fpull%2F18000" target="_blank">#18000</a></li><li>修复 ClassCastException in OpenAPINormalizer on composed schemas&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAPITools%2Fopenapi-generator%2Fpull%2F17912" target="_blank">#17912</a></li><li>将 FILTER 添加到 openapi normalizer&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAPITools%2Fopenapi-generator%2Fpull%2F17859" target="_blank">#17859</a></li><li>修复 allOf 和 $ref 中的属性&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAPITools%2Fopenapi-generator%2Fpull%2F17836" target="_blank">#17836</a></li></ul><p style="text-align:start"><strong><span style="color:#1f2328"><span style="background-color:#ffffff">C</span></span></strong></p><ul><li>[C][Client] 修复默认枚举值为 -1&nbsp;的问题&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAPITools%2Fopenapi-generator%2Fpull%2F18040" target="_blank">#18040</a></li></ul><p style="text-align:start"><strong><span style="color:#1f2328"><span style="background-color:#ffffff">C#</span></span></strong></p><ul><li>[C#] 修复 anyof、oneof mixed primitive object 解析错误&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAPITools%2Fopenapi-generator%2Fpull%2F17986" target="_blank">#17986</a></li></ul><p style="text-align:start"><strong><span style="color:#1f2328"><span style="background-color:#ffffff">C++</span></span></strong></p><ul><li>[cpp-qt-client] 允许参数为空&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAPITools%2Fopenapi-generator%2Fpull%2F17805" target="_blank">#17805</a></li><li>防止枚举项名称成为保留关键字<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAPITools%2Fopenapi-generator%2Fpull%2F17804" target="_blank">#17804</a></li></ul><p style="text-align:start"><strong><span style="color:#1f2328"><span style="background-color:#ffffff">Dart</span></span></strong></p><ul><li>[Dart] 减少对 intl 包的依赖&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAPITools%2Fopenapi-generator%2Fpull%2F17862" target="_blank">#17862</a></li></ul><p style="text-align:start"><strong>Go</strong></p><ul><li>[Go] 修复 isNil 检查&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAPITools%2Fopenapi-generator%2Fpull%2F17870" target="_blank">#17870</a></li><li>Generate API 文件作为 go-gin 服务器的接口&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAPITools%2Fopenapi-generator%2Fpull%2F17784" target="_blank">#17784</a></li></ul><p style="text-align:start"><strong><span style="color:#1f2328"><span style="background-color:#ffffff">Java</span></span></strong></p><ul><li>[java] 在提供的情况下用 modelNameMappings&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAPITools%2Fopenapi-generator%2Fpull%2F18025" target="_blank">#18025</a></li><li>[Java][apache-httpclient] 使用 EntityUtils#toString 代替 Scanner 进行反序列化<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAPITools%2Fopenapi-generator%2Fpull%2F17998" target="_blank">#17998</a></li></ul><p style="text-align:start"><strong><span style="color:#1f2328"><span style="background-color:#ffffff">Jetbrains HTTP Client</span></span></strong></p><ul><li>Jetbrains HTTP Client 重大升级。移至测试版&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAPITools%2Fopenapi-generator%2Fpull%2F15779" target="_blank">#15779</a></li></ul><p style="text-align:start"><strong><span style="color:#1f2328"><span style="background-color:#ffffff">Kotlin</span></span></strong></p><ul><li>[kotlin] 枚举应该匹配规范&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAPITools%2Fopenapi-generator%2Fpull%2F18062" target="_blank">#18062</a>&nbsp;- Breaking change (with fallback)</li><li>[kotlin-spring] 修复 API 中的 cookie 参数代码生成&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAPITools%2Fopenapi-generator%2Fpull%2F17959" target="_blank">#17959</a></li><li>[kotlin-spring] 修复 BigDecimal 默认值编译失败的问题&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAPITools%2Fopenapi-generator%2Fpull%2F17956" target="_blank">#17956</a></li></ul><p style="text-align:start"><strong><span style="color:#1f2328"><span style="background-color:#ffffff">PHP</span></span></strong></p><ul><li>fix(php)：更新 toString 方法中的类型提示<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAPITools%2Fopenapi-generator%2Fpull%2F17838" target="_blank">#17838</a></li><li>fix(php)：在 psr-18 实现中正确调用 selectHeaders&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAPITools%2Fopenapi-generator%2Fpull%2F17832" target="_blank">#17832</a></li></ul><p style="text-align:start"><strong><span style="color:#1f2328"><span style="background-color:#ffffff">Python</span></span></strong></p><ul><li>[python] 修复 inherited discriminators 上的&nbsp;Circular imports&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAPITools%2Fopenapi-generator%2Fpull%2F17886" target="_blank">#17886</a></li><li>将 python-fastapi 依赖项更新为新版本&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAPITools%2Fopenapi-generator%2Fpull%2F17871" target="_blank">#17871</a></li></ul><p style="text-align:start"><strong><span style="color:#1f2328"><span style="background-color:#ffffff">Ruby</span></span></strong></p><ul><li>fix(ruby)：使用 faraday 检测表单数据文件上传中的内容类型（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAPITools%2Fopenapi-generator%2Fissues%2F17851" target="_blank">＃17851</a>）<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAPITools%2Fopenapi-generator%2Fpull%2F17853" target="_blank">＃17853</a></li></ul><p style="text-align:start"><strong><span style="color:#1f2328"><span style="background-color:#ffffff">Rust</span></span></strong></p><ul><li>[Rust] [Axum] 修复 clippy warning：to_string_trait_impl&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAPITools%2Fopenapi-generator%2Fpull%2F17995" target="_blank">#17995</a></li><li>fix(rust)：用作 api 参数的模型路径错误<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAPITools%2Fopenapi-generator%2Fpull%2F17968" target="_blank">#17968</a></li><li>feat(rust)：支持在客户端中禁用 boxed models 的能力&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAPITools%2Fopenapi-generator%2Fpull%2F17931" target="_blank">#17931</a></li><li>fix(rust)：客户端的 oneOf generation&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAPITools%2Fopenapi-generator%2Fpull%2F17915" target="_blank">#17915</a></li></ul><p style="text-align:start"><strong><span style="color:#1f2328"><span style="background-color:#ffffff">TypeScript</span></span></strong></p><ul><li>[typescript-fetch] 使用 == 检查属性是否为 null 或未定义<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAPITools%2Fopenapi-generator%2Fpull%2F17972" target="_blank">#17972</a></li><li>使用 exists() 检查属性<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAPITools%2Fopenapi-generator%2Fpull%2F17798" target="_blank">#17798</a></li></ul><p>详情可查看更新说明：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAPITools%2Fopenapi-generator%2Freleases%2Ftag%2Fv7.4.0" target="_blank">https://github.com/OpenAPITools/openapi-generator/releases/tag/v7.4.0</a></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 12 Mar 2024 02:16:09 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/282666/openapi-generator-7-4-0-released</guid>
            <link>https://www.oschina.net/news/282666/openapi-generator-7-4-0-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[抛弃 mybatis 无限 plus 系列的内卷，国产 ORM 框架 sqltoy-orm 5.6.0 发版]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>开源地址：</strong></p><ul><li>github:&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fchenrenfei%2Fsagacity-sqltoy" target="_blank">https://github.com/sagframe/sagacity-sqltoy</a></li><li>gitee:&nbsp;<a href="https://gitee.com/sagacity/sagacity-sqltoy">https://gitee.com/sagacity/sagacity-sqltoy</a></li><li>idea 插件 (可直接在 idea 中检索安装):&nbsp;&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fthreefish%2Fsqltoy-idea-plugins" target="_blank">https://github.com/threefish/sqltoy-idea-plugins</a></li><li>sqltoy 脚手架项目：https://gitee.com/momoljw/sss-rbac-admin</li><li>sqltoy lambda 项目:&nbsp;https://gitee.com/gzghde/sqltoy-plus</li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>更新内容</strong></p><p>1、拆分 sqltoy-orm-core\sqltoy-orm-spring\sqltoy-orm-spring-starter 三个子项目，剥离对 spring 的依赖<br> 2、分 5.6.x 和 5.6.x.jre8 两个分支版本，5.6.x 以 jdk17、springboot3.x 为起点</p><pre><code class="language-xml">&lt;!-- 其他非 spring 框架可以基于 sagacity-sqltoy 进行扩展 --&gt;
&lt;dependency&gt;
&nbsp;&nbsp; &nbsp;&lt;groupId&gt;com.sagframe&lt;/groupId&gt;
&nbsp;&nbsp; &nbsp;&lt;artifactId&gt;sagacity-sqltoy&lt;/artifactId&gt;
&nbsp; &nbsp; &nbsp; &nbsp; &lt;!-- jdk8 对应的版本号为：5.6.0.jre8 --&gt;
&nbsp;&nbsp; &nbsp;&lt;version&gt;5.6.0&lt;/version&gt;
&lt;/dependency&gt;

&lt;!-- 纯粹 springboot 项目只需引入 sagacity-sqltoy-spring-starter 依赖即可 &nbsp;--&gt;
&lt;dependency&gt;
&nbsp;&nbsp; &nbsp;&lt;groupId&gt;com.sagframe&lt;/groupId&gt;
&nbsp;&nbsp; &nbsp;&lt;artifactId&gt;sagacity-sqltoy-spring-starter&lt;/artifactId&gt;
&nbsp; &nbsp; &nbsp; &nbsp; &lt;!-- jdk8 对应的版本号为：5.6.0.jre8 --&gt;
&nbsp;&nbsp; &nbsp;&lt;version&gt;5.6.0&lt;/version&gt;
&lt;/dependency&gt;
</code></pre><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>sqltoy-orm 是 JPA 和超强查询的融合体</strong></p><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsagframe%2Fsagacity-sqltoy%23jpa%25E9%2583%25A8%25E5%2588%2586" target="_blank">JPA 部分</a></h3><ul><li>类似 JPA 的对象化 CRUD、对象级联加载和新增、更新</li><li>强化 update 操作，提供弹性字段修改能力，不同于 hibernate 先 load 后修改，而是一次数据库交互完成修改，确保了高并发场景下数据的准确性</li><li>改进了级联修改，提供了先删除或者先置无效，再覆盖的操作选项</li><li>增加了 updateFetch、updateSaveFetch 功能，强化针对强事务高并发场景的处理，类似库存台账、资金台账，实现一次数据库交互，完成锁查询、不存在则插入、存在则修改，并返回修改后的结果</li><li>增加了树结构封装，便于统一不同数据库树型结构数据的递归查询</li><li>支持分库分表、支持多种主键策略 (额外支持基于 redis 的产生特定规则的业务主键)、加密存储、数据版本校验</li><li>提供了公共属性赋值 (创建人、修改人、创建时间、修改时间、租户)、扩展类型处理等</li><li>提供了多租户统一过滤和赋值、提供了数据权限参数带入和越权校验</li></ul><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsagframe%2Fsagacity-sqltoy%23%25E6%259F%25A5%25E8%25AF%25A2%25E9%2583%25A8%25E5%2588%2586" target="_blank">查询部分</a></h3><ul><li>极为直观的 sql 编写方式，便于从客户端 &lt;--&gt; 代码，双向快速迁移，便于后期变更维护</li><li>支持缓存翻译、反向缓存匹配 key 代替 like 模糊查询</li><li>提供了跨数据库支持能力：不同数据库的函数自动转换适配，多方言 sql 根据实际环境自动匹配、多数据库同步测试，大幅提升了产品化能力</li><li>提供了取 top 记录、随机记录等特殊场景的查询功能</li><li>提供了最强大的分页查询机制：1) 自动优化 count 语句；2) 提供基于缓存的分页优化，避免每次都执行 count 查询；3) 提供了独具特色的快速分页；4) 提供了并行分页</li><li>提供了分库分表能力</li><li>提供了在管理类项目中极为价值的：分组汇总计算、行列转换 (行转列、列转行)、同比环比、树形排序、树形汇总，相关算法自然集成</li><li>提供了基于查询的层次化数据结构封装</li><li>提供了大量辅助功能：数据脱敏、格式化、条件参数预处理等</li></ul><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsagframe%2Fsagacity-sqltoy%23%25E6%2594%25AF%25E6%258C%2581%25E5%25A4%259A%25E7%25A7%258D%25E6%2595%25B0%25E6%258D%25AE%25E5%25BA%2593" target="_blank">支持多种数据库</a></h3><ul><li>常规的 mysql、oracle、db2、postgresql、 sqlserver、dm、kingbase、sqlite、h2、 oceanBase、polardb、guassdb、tidb</li><li>支持分布式 olap 数据库: clickhouse、StarRocks、greenplum、impala (kudu)</li><li>支持 elasticsearch、mongodb</li><li>所有基于 sql 和 jdbc 各类数据库查询</li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>sqltoy 特点介绍：</strong></p><ul><li><strong>sqltoy 的核心构建思想</strong></li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><img alt="" height="868" src="https://oscimg.oschina.net/oscnet/up-a385d72ceb030d705e8e5803ca3cd4c09a1.png" width="1136" referrerpolicy="no-referrer"></p><ul><li><strong>sqltoy 的对比 mybatis (plus) 的核心点：查询语句编写、可阅读性、可维护性</strong></li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" height="923" src="https://oscimg.oschina.net/oscnet/up-05295a7a1813978134a5e49a7cff0f0e1ab.png" width="1873" referrerpolicy="no-referrer"></p><ul><li><strong>对象化 crud 是基础，但 sqltoy 有针对性的改进：update、updateSaveFetch、updateFetch 等</strong></li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><img alt="" height="845" src="https://oscimg.oschina.net/oscnet/up-6b8e8204061eec3d2096a50e9899548351e.png" width="1745" referrerpolicy="no-referrer"></p><ul><li><strong>sqltoy 的缓存翻译，大幅减少表关联简化 sql，让你的查询性能成几何级提升</strong></li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="阐述 sqltoy 为什么秒杀 mybatis(plus)" src="https://p3-tt.byteimg.com/origin/pgc-image/85287e14aa3e428fbabe297472596455?from=pc" referrerpolicy="no-referrer"></p><ul><li><strong>极致的分页，同样帮助你实现查询的性能大幅提升</strong></li></ul><ol><li>快速分页:@fast () 实现先取单页数据然后再关联查询，极大提升速度</li><li>分页优化器:page-optimize 让分页查询由两次变成 1.3~1.5 次 (用缓存实现相同查询条件的总记录数量在一定周期内无需重复查询</li><li>sqltoy 的分页取总记录的过程不是简单的 select count (1) from (原始 sql)；而是智能判断是否变成:select count (1) from 'from 后语句 '， 并自动剔除最外层的 order by</li><li>sqltoy 支持并行查询：parallel="true"，同时查询总记录数和单页数据，大幅提升性能</li></ol><div><img alt="阐述 sqltoy 为什么秒杀 mybatis(plus)" src="https://p6-tt.byteimg.com/origin/pgc-image/3d5f7094da154671985dd390f56f6302?from=pc" referrerpolicy="no-referrer"></div><div>
 &nbsp;
</div><ul><li><strong>便利的跨数据库统计计算：数据旋转</strong></li></ul><div><img alt="阐述 sqltoy 为什么秒杀 mybatis(plus)" src="https://p1-tt.byteimg.com/origin/pgc-image/949bc75b5c53441c98284dae2bed11fe?from=pc" referrerpolicy="no-referrer"></div><ul><li><strong>便利的跨数据库统计计算：无限极分组统计 (含汇总求平均)</strong></li></ul><div><img alt="阐述 sqltoy 为什么秒杀 mybatis(plus)" src="https://p1-tt.byteimg.com/origin/pgc-image/f5edc52adbbe4a1ca327d9a9b0c5d64c?from=pc" referrerpolicy="no-referrer"></div><ul><li><strong>便利的跨数据库统计计算：同比环比</strong></li></ul><div><img alt="阐述 sqltoy 为什么秒杀 mybatis(plus)" src="https://p3-tt.byteimg.com/origin/pgc-image/b9d435e2852644c9a4c9e062cc3d46d7?from=pc" referrerpolicy="no-referrer"></div><div>
 5、树形表排序汇总
</div><div><p style="margin-left:0; margin-right:0"><img height="274" src="https://oscimg.oschina.net/oscnet/up-1773cce82b98a943d42caaa62f60d80f3d0.png" width="1002" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0"><img height="403" src="https://oscimg.oschina.net/oscnet/up-8717f1c442767b08f2406019ae9b63721cb.png" width="409" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0">6、扩展集成</p><p style="margin-left:0; margin-right:0"><img height="961" src="https://oscimg.oschina.net/oscnet/up-6603ed15ec936dea45c4f6fb7318f4a062b.png" width="1965" referrerpolicy="no-referrer"></p></div></div>
                                    ]]>
            </description>
            <pubDate>Tue, 12 Mar 2024 01:37:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/282659/sqltoy-orm-5-6-0-released</guid>
            <link>https://www.oschina.net/news/282659/sqltoy-orm-5-6-0-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[vxe-table 4.5.21 已经发布，vue 表格解决方案]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>vxe-table 4.5.21 已经发布，vue 表格解决方案</p><p>此版本更新内容包括：</p><ul><li>table 
  <ul><li>修复插入临时数据位置错误问题题</li><li>增加参数 sort-config.iconLayout</li></ul></li><li>column 
  <ul><li>增加参数 titleSuffix</li></ul></li><li>icon 
  <ul><li>增加图标 asc、sort-desc</li></ul></li></ul><p>详情查看：<a href="https://gitee.com/xuliangzhan_admin/vxe-table/releases/4.5.21">https://gitee.com/xuliangzhan_admin/vxe-table/releases/4.5.21</a></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 12 Mar 2024 00:19:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/282652/vxe-table-4-5-21-released</guid>
            <link>https://www.oschina.net/news/282652/vxe-table-4-5-21-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[JDBC 连接池 BeeCP-4.0.0 从新出发]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><strong><span><span><span><span><span>&nbsp;</span>一：基本介绍&nbsp; </span></span></span></span></strong></p><p><span><span><span><span><strong><span>BeeCP</span></strong>是一款简单易用的</span></span></span></span><span><span><span><span>JDBC 连接池，具有性能高，代码轻，稳定性好特点，已获得不少用户的青睐，因此推荐它给更多企业和个人使用。时至今日，它已在默默无闻中悄然走过了 7 个年头，为了在未来更好的服务于全球用户，本次新版（BeeCP-4.0.0）发布中，我们做了两处大的调整：更换了项目 LICENSE（<span style="background-color:#16a085">LGPL2.1---&gt;Apache LICENSE 2.0</span>）；调整项目源码顶级目录 (<span style="background-color:#16a085">cn ---&gt; org.stone</span>)；此外并将 BeeCP 项目源码整合进 stone 项目中（注：stone 是一个 J2EE 工具包项目，目前它收集了四款彼此独立的 Java 工具，分别为：JDBC 连接池，Java 对象池，任务处理池，同步等待池，其中连接池与对象池已经历多个版本迭代，且有多年的实用经历，另外两款处于孵化中，未来也许会整合更多小型组件工具，项目地址：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FChris2018998%2Fstone" target="_blank">https://github.com/Chris2018998/stone</a>，项目寓意：以<strong>晶钻般</strong>的品质服务于全人类，如果此话让您感觉到不适，那就请忽略此句吧^-^），用户可以根据自身需求下载单一包或整合包。</span></span></span></span></p><p><strong><span><span><span><span>二：相关截图</span></span></span></span></strong></p><p><img height="467" src="https://oscimg.oschina.net/oscnet/up-91db3099a359411061d963e75d188792935.png" width="1036" referrerpolicy="no-referrer"></p><p><em>图 1：性能对比图（<span style="color:#333333">CPU:&nbsp; I3-7100，内存: 8G，操作系统：Win7_64&nbsp;</span>）</em></p><p><img alt="图片" src="https://user-images.githubusercontent.com/32663325/163173015-2ce906f3-1b83-419d-82aa-a42b5c8d92b8.png" referrerpolicy="no-referrer"></p><p><em>图 2：项目代码质量图</em></p><p><img height="244" src="https://oscimg.oschina.net/oscnet/up-318214b6655357935988da6864d041fd0cd.png" width="1050" referrerpolicy="no-referrer"></p><p><em>图 3：数据源监控界面（Springboot2)</em></p><p><strong>三：软件包下载</strong></p><p>Maven 座标（Java7 及以上）</p><pre><code class="language-xml">&lt;dependency&gt;
   &lt;groupId&gt;com.github.chris2018998&lt;/groupId&gt;
   &lt;artifactId&gt;beecp&lt;/artifactId&gt;
   &lt;version&gt;4.0.0&lt;/version&gt;
&lt;/dependency&gt;</code></pre><pre><code class="language-xml">&lt;dependency&gt;
   &lt;groupId&gt;com.github.chris2018998&lt;/groupId&gt;
   &lt;artifactId&gt;beecp-spring-boot-starter&lt;/artifactId&gt;
   &lt;version&gt;1.8.0&lt;/version&gt;
&lt;/dependency&gt;</code></pre><p>beecp-spring-boot-starter 为 beecp 数据源管理工具，它支持以配置的方式维护一个或多个数据源（无代码开发），并提供 Web 监控界面（上图 3）<em>，参考例子：</em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FChris2018998%2Fbeecp-starter%2Ftree%2Fmaster%2Fdoc%2Fdemo" target="_blank">https://github.com/Chris2018998/beecp-starter/tree/master/doc/demo</a></p><p><strong>四：修改内容</strong></p><ul><li><em>增加用于自定义判定驱逐接口 ( 其他两种方式：errorCode 和 SQLState 的配置）</em></li></ul><ul><li><em>增加创建线程的中断阻塞的处理方法（外部调用触发）</em></li></ul><ul><li><em>配置项改名：createTimeout ---&gt; connctTimeout</em></li></ul><p>&nbsp;&nbsp;&nbsp; 关于细节，请到项目站点查看介绍资料</p><p><strong>五：项目地址</strong></p><ul><li>gitee：&nbsp;&nbsp; <a href="https://gitee.com/Chris2018998/BeeCP">https://gitee.com/Chris2018998/BeeCP</a></li><li>github：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FChris2018998%2FBeeCP" target="_blank">&nbsp;https://github.com/Chris2018998/BeeCP</a></li><li>github：<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fgithub.com%2FChris2018998%2Fstone" target="_blank">&nbsp;https://github.com/Chris2018998/stone</a></li></ul><p><strong>六：作品承若</strong></p><p><strong>我们庄重承若：在不破坏版权的前提下，已经开源的相关作品可永久免费使用，无论您是商用还是个人使用（不包括违法用途），因为这是我们多年开源的初衷，因此请大家放心使用。</strong><strong>您的支持，便是我们前进的动力，让我们一起来加油！谢谢！</strong></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 11 Mar 2024 16:18:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/282643/beecp-4-0-0-released</guid>
            <link>https://www.oschina.net/news/282643/beecp-4-0-0-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[新增移动端支持，嵌入式能力优化，DataEase 开源数据可视化分析平台 v2.4.0 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#000000; text-align:start">2024 年 3 月 11 日，DataEase 开源数据可视化分析平台正式发布 v2.4.0 版本。</p><p style="color:#000000; text-align:start">这一版本的功能升级包括：新增<strong><span style="color:#0a7be0">移动端</span></strong>支持，方便用户在移动端查看收藏的仪表板等可视化数据，随时随地掌握业务的动态变化；新增<strong><span style="color:#0a7be0">引擎设置</span></strong>模块，用户可以修改默认引擎，将 API 数据和 Excel 数据存放在指定数据库中；新增<strong><span style="color:#0a7be0">扫码登录</span></strong>功能，企业微信、飞书、钉钉的用户可通过此功能扫码登录至 DataEase 平台；新增<strong><span style="color:#0a7be0">外观配置</span></strong>模块，用户可以在此模块中设置平台主题、Logo、背景图、Slogan、页脚等信息。</p><p style="color:#000000; text-align:start">需要说明的是，在 v2.4.0 版本中，DataEase 的<strong><span style="color:#0a7be0">嵌入式能力</span></strong>得到了进一步优化，同时对表格、富文本、嵌入式、数据大屏、同步管理等功能进行了增强。</p><h1>新增功能</h1><p style="color:#000000; text-align:start"><strong><span style="color:#0a7be0">■ 移动端：增加适配移动端功能，方便用户在移动端查看仪表板等</span></strong></p><p style="color:#000000; text-align:start">在 v2.4.0 版本中，DataEase 新增了对移动端的支持。用户通过移动设备访问 DataEase 平台时，DataEase 后端服务会判断访问设备的类型，自动跳转至访问设备对应的展示界面。在 DataEase 移动端中，用户可以方便地查看收藏的仪表板等可视化数据，随时随地掌握业务的动态变化。</p><p style="color:#000000; text-align:start"><img alt="" height="886" src="https://oscimg.oschina.net/oscnet/up-b302aa6ec51110f18d0806983a639cdbbcf.png" width="792" referrerpolicy="no-referrer"></p><p><span>▲ 图 1 移动端总体概览以及移动端仪表板展示</span></p><p style="color:#000000; text-align:start"><strong><span style="color:#0a7be0">■ 系统设置：支持引擎设置</span></strong></p><p style="color:#000000; text-align:start">DataEase v2.4.0 版本新增了「引擎设置」功能模块，用户可以修改默认引擎，将 DataEase 中的 API 数据和 Excel 数据存放在其中。</p><p style="color:#000000; text-align:start">在以往版本中，DataEase 默认将 API 数据源的数据和 Excel 数据源的数据都存放在 DataEase 运行数据库中。支持了引擎设置后，用户可以将这部分业务数据单独指定存放到自己的数据仓库里，不仅可以做到平台数据与业务数据的分离，也能进一步保证数据的安全性。</p><p style="color:#000000; text-align:start"><img alt="" height="1028" src="https://oscimg.oschina.net/oscnet/up-7652690be9d36225aec14d0d31d9c7d553b.png" width="1955" referrerpolicy="no-referrer"></p><p><span>▲ 图 2 DataEase 新增「引擎配置」功能界面</span></p><p style="color:#000000; text-align:start"><strong><span style="color:#0a7be0">■ 嵌入式：嵌入式能力优化</span></strong></p><p style="color:#000000; text-align:start">DataEase 支持以 iframe 的方式将所有模块以及仪表板、数据大屏、图表、编辑器等嵌入到其他系统中。DataEase 支持用户按需嵌入多个视图，并且可以方便地调整视图大小，同时大幅优化了嵌入式模式下的前端加载速度。</p><p style="color:#000000; text-align:start">此外，DataEase 官方已经推出嵌入式 BI 演示系统（<em>https://embedded-bi.dataease.cn/</em>），便于 ISV（独立软件开发商）、SI（系统集成商）体验 DataEase 的嵌入式 BI 能力。</p><p style="color:#000000; text-align:start"><img alt="" src="https://oscimg.oschina.net/oscnet/up-3dcc830ab59f7ac9b4031b8075e77ad0264.png" referrerpolicy="no-referrer"></p><p style="color:#000000; text-align:start"><span>▲ 图 3 DataEase 嵌入式版演示环境主界面</span></p><p style="color:#000000; text-align:start"><strong><span style="color:#0a7be0">■ X-Pack 增强包：新增扫码登录功能（支持企业微信、飞书和钉钉）</span></strong></p><p style="color:#000000; text-align:start">DataEase v2.4.0 版本新增扫码登录功能，支持用户以企业微信、飞书、钉钉扫码的方式登录到 DataEase，满足了更多企业用户的访问登录需求。</p><p style="color:#000000; text-align:start"><img alt="" height="1028" src="https://oscimg.oschina.net/oscnet/up-4b33ec83e27c2d4ed3172a55cc9427b51ae.jpg" width="1955" referrerpolicy="no-referrer"></p><p><span>▲ 图 4 DataEase 扫码登录页面</span></p><p><img alt="" height="1028" src="https://oscimg.oschina.net/oscnet/up-133c9fda18863886baad3799ca1c2c76ea9.png" width="1955" referrerpolicy="no-referrer"></p><p><span>▲ 图 5 DataEase「平台对接」管理页面</span></p><p style="color:#000000; text-align:start"><strong><span style="color:#0a7be0">■ X-Pack 增强包：支持外观配置</span></strong></p><p style="color:#000000; text-align:start">DataEase v2.4.0 版本新增「外观配置」功能模块，用户可以根据自己的需要，自定义平台主题、Logo、Slogan、名称、背景图、导航、页脚等信息，进一步满足了用户操作界面定制化的相关需求。</p><p style="color:#000000; text-align:start"><img alt="" height="1027" src="https://oscimg.oschina.net/oscnet/up-a4363b442b7f1d7dfeb45081dcb32921611.png" width="1955" referrerpolicy="no-referrer"></p><p><span>▲ 图 6 DataEase「外观配置」功能界面</span></p><p style="color:#000000; text-align:start">除了上述新增功能外，DataEase v2.4.0 版本还包含了很多其他的功能更新和优化，欢迎进入 DataEase 的官方文档及 GitHub 仓库的 Release 页面查看更加详细的更新日志。</p><h1>功能优化</h1><p style="color:#000000; text-align:start"><span style="color:#0a7be0">■</span><span>&nbsp;</span>refactor（数据大屏）：「保存」按钮新增防止重复提交的设置；</p><p style="color:#000000; text-align:start"><span style="color:#0a7be0">■</span><span>&nbsp;</span>refactor（数据大屏）：图形组件新增 SVG 矢量图形；</p><p style="color:#000000; text-align:start"><span style="color:#0a7be0">■</span><span>&nbsp;</span>refactor（数据大屏）：图形组件默认样式变更；</p><p style="color:#000000; text-align:start"><span style="color:#0a7be0">■</span><span>&nbsp;</span>refactor（数据大屏）：富文本组件新增支持撤销操作；</p><p style="color:#000000; text-align:start"><span style="color:#0a7be0">■</span><span>&nbsp;</span>refactor（数据大屏）：在调整位置属性的页面中可以手动设置图表宽高逻辑，适配保持宽高比例；</p><p style="color:#000000; text-align:start"><span style="color:#0a7be0">■</span><span>&nbsp;</span>refactor（系统设置）：更新 Flyway 水印管理权限；</p><p style="color:#000000; text-align:start"><span style="color:#0a7be0">■</span><span>&nbsp;</span>refactor（图表）：优化图表的默认标签配置；</p><p style="color:#000000; text-align:start"><span style="color:#0a7be0">■</span><span>&nbsp;</span>refactor（图表）：优化图表的默认图例配置；</p><p style="color:#000000; text-align:start"><span style="color:#0a7be0">■</span><span>&nbsp;</span>refactor：Calcite SQL 新增适配自定义函数；</p><p style="color:#000000; text-align:start"><span style="color:#0a7be0">■</span><span>&nbsp;</span>refactor：优化 Calcite 自定义函数的性能；</p><p style="color:#000000; text-align:start"><span style="color:#0a7be0">■</span><span>&nbsp;</span>refactor：优化 uninstall.sh 卸载脚本的提示（#7955）；</p><p style="color:#000000; text-align:start"><span style="color:#0a7be0">■</span><span>&nbsp;</span>refactor：优化<em>dectl</em>脚本逻辑；</p><p style="color:#000000; text-align:start"><span style="color:#0a7be0">■</span><span>&nbsp;</span>chore（X-Pack）：将 TinyMCE 依赖切换到 Core；</p><p style="color:#000000; text-align:start"><span style="color:#0a7be0">■</span><span>&nbsp;</span>perf（X-Pack）：优化 Flyway 中声明的字符集以及排序相关语句；</p><p style="color:#000000; text-align:start"><span style="color:#0a7be0">■</span><span>&nbsp;</span>style（同步管理）：优化更新任务执行中状态图标的样式；</p><p style="color:#000000; text-align:start"><span style="color:#0a7be0">■</span><span>&nbsp;</span>style：优化大屏制作时右侧抽屉页面（编辑表单、过滤条件所属页面）底部的样式；</p><p style="color:#000000; text-align:start"><span style="color:#0a7be0">■</span><span>&nbsp;</span>style：优化登录页面页脚的样式。</p><h1>Bug 修复</h1><p style="color:#000000; text-align:start"><span><span style="color:#0a7be0">■</span><span>&nbsp;</span>fix（仪表板）：修复 Icon 的背景圆角与下方列表圆角不一致的问题；</span></p><p style="color:#000000; text-align:start"><span><span style="color:#0a7be0">■</span><span>&nbsp;</span>fix（仪表板）：修复富文本组件因与 X-Pack 功能冲突而导致不可用的问题；</span></p><p style="color:#000000; text-align:start"><span><span style="color:#0a7be0">■</span><span>&nbsp;</span>fix（仪表板）：修复富文本组件中华文仿宋等部分字体无法加粗的问题（#8174）；</span></p><p style="color:#000000; text-align:start"><span><span style="color:#0a7be0">■</span><span>&nbsp;</span>fix（仪表板）：修复了在 DataEase 社区版中，因仪表板不支持水印设置而导致的控制枱报错问题；</span></p><p style="color:#000000; text-align:start"><span><span style="color:#0a7be0">■</span><span>&nbsp;</span>fix（仪表板）：修改颜色选择弹出窗口内置的默认颜色；</span></p><p style="color:#000000; text-align:start"><span><span style="color:#0a7be0">■</span><span>&nbsp;</span>fix（工作台）：将模板中心错误的大屏展示间距更正为 16px；</span></p><p style="color:#000000; text-align:start"><span><span style="color:#0a7be0">■</span><span>&nbsp;</span>fix（工作台）：新增点击 Logo 即可返回工作台的设置；</span></p><p style="color:#000000; text-align:start"><span><span style="color:#0a7be0">■</span><span>&nbsp;</span>fix（数据大屏）：修复保持宽高比时，部分图表的拖拽点被拖拽的同时出现异常位移的问题；</span></p><p style="color:#000000; text-align:start"><span><span style="color:#0a7be0">■</span><span>&nbsp;</span>fix（数据大屏）：修复保持宽高比时，图表大幅度移动会出现比例改变的问题；</span></p><p style="color:#000000; text-align:start"><span><span style="color:#0a7be0">■</span><span>&nbsp;</span>fix（数据大屏）：修复对标线未显示的问题；</span></p><p style="color:#000000; text-align:start"><span><span style="color:#0a7be0">■</span><span>&nbsp;</span>fix（数据大屏）：修复组件角落处的移动点，在保持宽高比时被拖动会出现闪动的问题；</span></p><p style="color:#000000; text-align:start"><span><span style="color:#0a7be0">■</span><span>&nbsp;</span>fix（图表）：修复明细表分页状态下只能导出当前页数据的问题（#7972）；</span></p><p style="color:#000000; text-align:start"><span><span style="color:#0a7be0">■</span><span>&nbsp;</span>fix（图表）：修复指标卡名称修改不生效的问题（#8122）；</span></p><p style="color:#000000; text-align:start"><span><span style="color:#0a7be0">■</span><span>&nbsp;</span>fix（图表）：修复横向柱状图的横轴在图表格式化后不显示的问题；</span></p><p style="color:#000000; text-align:start"><span><span style="color:#0a7be0">■</span><span>&nbsp;</span>fix（图表）：修复表格添加序号列后，拖拽表格会导致设置的序号列列宽无法保存的问题；</span></p><p style="color:#000000; text-align:start"><span><span style="color:#0a7be0">■</span><span>&nbsp;</span>fix：修复了从其他页面切换至导航主菜单时，闪现其他空状态图片的问题；</span></p><p style="color:#000000; text-align:start"><span><span style="color:#0a7be0">■</span><span>&nbsp;</span>fix：修复</span><em><span>dectl</span></em><span>脚本在停止服务时，无法停止同步管理服务的问题；</span></p><p style="color:#000000; text-align:start"><span><span style="color:#0a7be0">■</span><span>&nbsp;</span>fix：升级 Calcite 版本，修复日期格式错乱的问题（#8032）。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 11 Mar 2024 16:06:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/282640/dataease-2-4-0-released</guid>
            <link>https://www.oschina.net/news/282640/dataease-2-4-0-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[🔥🔥🔥 Sigma v1.2.0 发布 - 一个极容易部署和维护的镜像仓库]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Sigma 是一个极容易部署和维护的镜像仓库，并且自主完整实现了&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopencontainers%2Fdistribution-spec%2Ftree%2Fv1.1.0" target="_blank">OCI Distribution Specification 1.1</a> 的协议，除了支持 docker 客户端以外，还支持其他类型的各种客户端，例如 oras，apptainer，helm，nerdctl 等。在部署层面上完全可以做到 all-in-one 的部署，启动单个容器即可将整体的镜像仓库的所有服务启动起来，在搞可用层面也可以将各个模块分别单独灵活部署。</p><pre><code class="language-bash">docker run -d --name sigma -p 3000:3000 tosone/sigma:nightly-alpine</code></pre><h2>架构图</h2><p><img height="2246" src="https://oscimg.oschina.net/oscnet/up-7e22efc5daa649c84774a539ee9b0367b36.png" width="5881" referrerpolicy="no-referrer"></p><h2>更新日志</h2><ul><li>增加 webhook 的功能，支持在 namespace 创建的时候触发 webhook，支持在 gc 过程中触发 webhook。</li><li>修复 gc 过程中对 artifact 的清理逻辑。</li><li>暴露 sigma 中的一些 metric，在线的 metric 可以看这里：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgrafana.sigma.tosone.cn%2Fpublic-dashboards%2Febf12be7e7f44b59bfe4096f0f51ab88" target="_blank">https://grafana.sigma.tosone.cn/public-dashboards/ebf12be7e7f44b59bfe4096f0f51ab88</a></li><li>对于静态资源发挥 etag。</li><li>修改 namespace 中角色权限校验部分的逻辑。</li></ul><h2>项目地址</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">gitee:&nbsp;<a href="https://gitee.com/xtosone/sigma">https://gitee.com/xtosone/sigma</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">github:&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgo-sigma%2Fsigma" target="_blank">https://github.com/go-sigma/sigma</a></p><h2><strong>Sigma 详细介绍</strong></h2><p style="color:#000000; margin-left:0; margin-right:0; text-align:left">在云原生的时代，绝大多数 DevOps 的系统中，软件交付的制品已经从软件本身转换到了 OCI-Native 的镜像，且其已经是必不可少的一个重要组件，它的最大优势是帮助减少制品交付的复杂度，那么就需要 OCI-Native 的镜像仓库从角色权限的角度维护制品版本，注重制品交付的安全性，保证容器部署的速度。</p><p style="color:#000000; margin-left:0; margin-right:0; text-align:left">开发<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgo-sigma%2Fsigma" target="_blank">sigma</a><span>&nbsp;</span>的最初的想法是是降低<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgoharbor%2Fharbor" target="_blank">Harbor</a><span>&nbsp;</span>组件部署的复杂度，并且在高可用的角度又不失其架构优势。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgo-sigma%2Fsigma" target="_blank">sigma</a><span>&nbsp;</span>希望在制品元数据管理、权限管理、制品分发、部署和维护容易程度这四个方面作出最大努力，并且在一开始设计<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgo-sigma%2Fsigma" target="_blank">sigma</a><span>&nbsp;</span>的时候就对这几方面做出思考。</p><p style="color:#000000; margin-left:0; margin-right:0; text-align:left">在个人开发者的使用场景里需要制品元数据管理友好、UI 易用、部署和维护简单的镜像仓库，并且在镜像仓库中能够加入类似<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhub.docker.com%2F" target="_blank">docker hub</a><span>&nbsp;</span>的镜像构建功能将会是一个很受大家期待的功能。在企业团队中，会对镜像仓库的稳定性和兼容性提出更高要求，<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgo-sigma%2Fsigma" target="_blank">sigma</a><span>&nbsp;</span>希望可以更深入的参与到整个 DevOps 流程，接入已有的 DevOps 系统，而不单单是一个仓库存储的角色。</p><h3><strong>sigma 的优势</strong></h3><h4><strong>部署架构</strong></h4><p style="color:#000000; margin-left:0; margin-right:0; text-align:left"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgo-sigma%2Fsigma" target="_blank">sigma</a><span>&nbsp;</span>在部署层面上最简化可以做到单文件单个启动命令，将前端、镜像清理和镜像构建等异步任务服务以及镜像元数据管理等服务启动起来，并且仅依赖文件系统即可。 在高可用部署的情况下，可以将前端、镜像元数据管理、镜像清理和镜像构建等异步任务服务等分别作为单独的服务运行，api-server 与镜像元数据管理服务分别单独部署，主要在于镜像元数据管理服务会参与到镜像的拉取和推送服务中，涉及到的流量较大，这样便不会影响到 api-server 的稳定性，依赖的中间件将会有对象存储、Redis、PostgreSQL/MySQL。具体部署细节可以参考<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgo-sigma%2Fsigma" target="_blank">sigma</a><span>&nbsp;</span>chart 中的实现：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgo-sigma%2Fsigma%2Ftree%2Fmain%2Fdeploy%2Fsigma" target="_blank">https://github.com/go-sigma/sigma/tree/main/deploy/sigma</a>。</p><h4><strong>镜像元数据管理</strong></h4><p style="color:#000000; margin-left:0; margin-right:0; text-align:left">镜像元数据管理这里采用和<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhub.docker.com%2F" target="_blank">docker hub</a><span>&nbsp;</span>比较类似的展示方式，在 repository 层级之下展示 tag，而不是像<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgoharbor%2Fharbor" target="_blank">Harbor</a><span>&nbsp;</span>和 ghcr 一样展示 artifact，用户其实对于 artifact hash 值的展示不是那么理解，而 tag 是用户自己定义的东西，更容易理解一些，在对架构镜像的展示方式和 docker hub 保持一致。 在多架构镜像这里，会有类似 sbom 的 artifact 的内容推送到 artifact list 内，<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgo-sigma%2Fsigma" target="_blank">sigma</a><span>&nbsp;</span>的前端将会仅展示 image、imageIndex、chart 等类型的 artifact，但是在<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopencontainers%2Fdistribution-spec" target="_blank">distribution-spec</a><span>&nbsp;</span>标准接口上，<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgo-sigma%2Fsigma" target="_blank">sigma</a><span>&nbsp;</span>还是会返回所有的 artifact。</p><p><img alt="" src="https://fs.tosone.cn/sigma/20231225/tags.jpg" referrerpolicy="no-referrer"></p><h4><strong>路由匹配</strong></h4><p style="color:#000000; margin-left:0; margin-right:0; text-align:left"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopencontainers%2Fdistribution-spec" target="_blank">distribution-spec</a><span>&nbsp;</span>定义的镜像仓库实现的 API 上，在 repository 层级这里是允许有斜线存在的（例如：/v2/library/alpine/manifests/latest），在<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdistribution%2Fdistribution" target="_blank">distribution</a><span>&nbsp;</span>的实现上是利用正则来匹配路由的，在绝大多数的 web 框架都是将斜线当作是资源层级分隔符，导致这里比较难以实现，或者说不利用正则很难有好的实现方式。在<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgo-sigma%2Fsigma" target="_blank">sigma</a><span>&nbsp;</span>中首先使得<span>&nbsp;</span><code>/v2/</code><span>&nbsp;</span>的请求进入到统一的一个路由，再使用字符串匹配切割的方式检测路由的匹配情况。例如 manifests 相关的路由实现代码如下：</p><pre><code><span><span style="color:#c678dd">func</span>&nbsp;<span>(f&nbsp;factory)</span>&nbsp;<span style="color:#61aeee">Initialize</span><span>(c&nbsp;echo.Context)</span>&nbsp;<span style="color:#61aeee">error</span></span>&nbsp;{
&nbsp;&nbsp;method&nbsp;:=&nbsp;c.Request().Method
&nbsp;&nbsp;uri&nbsp;:=&nbsp;c.Request().RequestURI
&nbsp;&nbsp;urix&nbsp;:=&nbsp;uri[:strings.LastIndex(uri,&nbsp;<span style="color:#98c379">"/"</span>)]
&nbsp;&nbsp;manifestHandler&nbsp;:=&nbsp;handlerNew()
&nbsp;&nbsp;<span style="color:#c678dd">if</span>&nbsp;strings.HasSuffix(urix,&nbsp;<span style="color:#98c379">"/manifests"</span>)&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#c678dd">switch</span>&nbsp;method&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#c678dd">case</span>&nbsp;http.MethodGet:
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#c678dd">return</span>&nbsp;manifestHandler.GetManifest(c)
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#c678dd">case</span>&nbsp;http.MethodHead:
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#c678dd">return</span>&nbsp;manifestHandler.HeadManifest(c)
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#c678dd">case</span>&nbsp;http.MethodPut:
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#c678dd">return</span>&nbsp;manifestHandler.PutManifest(c)
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#c678dd">case</span>&nbsp;http.MethodDelete:
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#c678dd">return</span>&nbsp;manifestHandler.DeleteManifest(c)
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#c678dd">default</span>:
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#c678dd">return</span>&nbsp;c.String(http.StatusMethodNotAllowed,&nbsp;<span style="color:#98c379">"Method&nbsp;Not&nbsp;Allowed"</span>)
&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;}&nbsp;<span style="color:#c678dd">else</span>&nbsp;<span style="color:#c678dd">if</span>&nbsp;strings.HasSuffix(urix,&nbsp;<span style="color:#98c379">"/referrers"</span>)&nbsp;&amp;&amp;&nbsp;method&nbsp;==&nbsp;http.MethodGet&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#c678dd">return</span>&nbsp;manifestHandler.GetReferrer(c)
&nbsp;&nbsp;}
&nbsp;&nbsp;<span style="color:#c678dd">return</span>&nbsp;distribution.Next&nbsp;<em>//&nbsp;进入到下一个路由匹配规则中</em>
}
</code></pre><h4><strong>镜像存储</strong></h4><p style="color:#000000; margin-left:0; margin-right:0; text-align:left">与<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdistribution%2Fdistribution" target="_blank">distribution</a><span>&nbsp;</span>项目不相同的是在镜像的 manifest 和 blob 文件存储上是完全不同的，<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdistribution%2Fdistribution" target="_blank">distribution</a><span>&nbsp;</span>在镜像的存储上主要依赖存储上的结构，将 tag 与 artifact 组成关联关系，artifact 与 blob 组成关联关系，这样就可以让<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdistribution%2Fdistribution" target="_blank">distribution</a><span>&nbsp;</span>不依赖任何的数据库就可以达到管理镜像元数据和镜像 blob 的目的，从这一点上来看是很不错的。但是在镜像 gc 的时候会产生很大的麻烦，因为镜像清理要涉及到 blob 的清理，但是反向的关联在文件系统上比较难实现，这也是导致<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgoharbor%2Fharbor" target="_blank">Harbor</a><span>&nbsp;</span>在很早之前的版本上只能做到在镜像清理的时候停止镜像仓库的推送功能，这是完全不能接受的。</p><p style="color:#000000; margin-left:0; margin-right:0; text-align:left"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgo-sigma%2Fsigma" target="_blank">sigma</a><span>&nbsp;</span>在存储这些关联关系的时候不再使用文件系统来实现，而是直接使用数据库，文件系统层级将仅仅存储 blob 数据，存储 blob 的目录结构与<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdistribution%2Fdistribution" target="_blank">distribution</a><span>&nbsp;</span>上保持一致，artifact 与 tag 直接存储在数据库内。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgo-sigma%2Fsigma" target="_blank">sigma</a><span>&nbsp;</span>的镜像清理在实现层面上是多线程的，将没有关联关系的 blob 直接从文件系统层级上删除，并且不会影响到前端的镜像推送功能（需要说明的是，在删除和新的 blob 推送上在相同的 blob 这里是有一个毫秒级的锁在的，用户对此无法感知），具体实现可以看这里：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgo-sigma%2Fsigma%2Fblob%2Fmain%2Fpkg%2Fdaemon%2Fgc%2Fgc_blob.go" target="_blank">https://github.com/go-sigma/sigma/blob/main/pkg/daemon/gc/gc_blob.go</a>。</p><h4><strong>镜像构建</strong></h4><p style="color:#000000; margin-left:0; margin-right:0; text-align:left">镜像构建主要依赖 Dockerfile，但是 Dockerfile 构建的时候大多数需要依赖代码仓库，所以<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgo-sigma%2Fsigma" target="_blank">sigma</a><span>&nbsp;</span>目前对接了 GitHub 和 GitLab，可以将其中的代码仓库列表获取到让用户选择代码仓库填写相关参数进行构建。</p><p><img alt="" src="https://fs.tosone.cn/sigma/20231225/build-conf.jpg" referrerpolicy="no-referrer"></p><p><img alt="" src="https://fs.tosone.cn/sigma/20231225/build-log.jpg" referrerpolicy="no-referrer"></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:left">用户可以选择指定的代码仓库和代码仓库的分支，填写 Dockerfile 相关的构建参数，例如：构建架构，build args 等。 其中也支持定时任务的构建，也支持代码仓库的 hook event 触发构建，例如：push event，tag event 等。 sigma 在构建的时候随时可以对任务进行停止操作，在构建过程中会有实时的日志展示到前端。在<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgo-sigma%2Fsigma" target="_blank">sigma</a><span>&nbsp;</span>构建完成的时候会将构建过程中得到的缓存文件打包缓存到<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgo-sigma%2Fsigma" target="_blank">sigma</a><span>&nbsp;</span>对接的文件系统或对象存储中，到下次构建前会将缓存加载进来再做构建，构建任务完成之前还会对镜像使用<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsigstore%2Fcosign" target="_blank">cosign</a><span>&nbsp;</span>进行签名，签名使用的私钥为<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgo-sigma%2Fsigma" target="_blank">sigma</a><span>&nbsp;</span>启动时生成的私钥，存储在数据库中。</p><h4><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopencontainers%2Fdistribution-spec" target="_blank">distribution-spec</a><span>&nbsp;</span>1.1 的支持</strong></h4><p style="color:#000000; margin-left:0; margin-right:0; text-align:left"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdistribution%2Fdistribution" target="_blank">distribution</a><span>&nbsp;</span>目前尚未支持<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopencontainers%2Fdistribution-spec" target="_blank">distribution-spec</a><span>&nbsp;</span>1.1 定义的内容，目前<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgoharbor%2Fharbor" target="_blank">Harbor</a><span>&nbsp;</span>和<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fproject-zot%2Fzot" target="_blank">zot</a><span>&nbsp;</span>都是实现了的，<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgo-sigma%2Fsigma" target="_blank">sigma</a><span>&nbsp;</span>也对<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopencontainers%2Fdistribution-spec" target="_blank">distribution-spec</a><span>&nbsp;</span>1.1 做了实现，并且在镜像清理中会检查 referrer 的内容，当 artifact 被删除的时候会连同之前其 artifact 的其他 artifact 全部删除。</p><h4><strong>quota</strong></h4><p style="color:#000000; margin-left:0; margin-right:0; text-align:left"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgo-sigma%2Fsigma" target="_blank">sigma</a><span>&nbsp;</span>支持在 namespace 和 repository 设置 size 和 tag 上限，但其中遵循 namespace 和 repository 的从属容量限制关系。 在 namespace 页面上可以方便查看当前的容量使用情况，未来会支持当存储容量接近上限的时候发出对应的 hook event。如下图：</p><p><img alt="" src="https://fs.tosone.cn/sigma/20231225/quota.jpg" referrerpolicy="no-referrer"></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:left">目前<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgo-sigma%2Fsigma" target="_blank">sigma</a><span>&nbsp;</span>支持在镜像推送达到存储容量或者 tag 容量上限的时候，在客户端给出相应的提示信息。</p><p><img alt="" src="https://fs.tosone.cn/sigma/20231225/quota-push.jpg" referrerpolicy="no-referrer"></p><h4><strong>镜像扫描</strong></h4><p style="color:#000000; margin-left:0; margin-right:0; text-align:left">目前在镜像类型的制品在推送完成之后就会在后端异步的执行<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Faquasecurity%2Ftrivy" target="_blank">trivy</a><span>&nbsp;</span>镜像扫描的任务，并且镜像扫描的任务将会和<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Faquasecurity%2Ftrivy" target="_blank">trivy</a><span>&nbsp;</span>的漏洞库做关联，当漏洞库有更新时，用户可以选择是否重新进行进行镜像扫描，后续 sigma 会支持当镜像有严重漏洞的时候禁止镜像的拉取操作。</p><p><img alt="" src="https://fs.tosone.cn/sigma/20231225/vuln.png" referrerpolicy="no-referrer"></p><h3><strong>未来规划</strong></h3><ul><li><p>在存储层将会支持更多的对象存储的 driver，目前仅支持 filesystem，s3，cos，如果对应的对象存储支持 s3 协议则可以无缝对接。</p></li><li><p>在镜像分发的可分发性上做出一些开关，当镜像被发现一些严重的漏洞的时候将不允许被分发，当镜像没有做签名的时候不允许被分发。</p></li><li><p>完善更多的镜像 Proxy 策略，对接更多的镜像仓库，可以缓存 ghcr.io 的镜像等等。完善更多的镜像复制策略，在做 proxy 的时候可以在 repository 层级上做更多的设置。</p></li><li><p>实现多地域 sigma 实例镜像同步的功能。</p></li><li><p>实现事件触发的 hook event，例如镜像构建完成，镜像 tag 推送完成等事件。</p></li><li><p>未来在镜像分发方面将会做更多努力，将会支持 P2P 和 lazy pull 特性。</p></li><li><p>对接更多的第三方登录的方式，优化权限管理，在权限粒度上设置的更精细一些，支持多租户的管理。</p></li></ul><h3><strong>最后</strong></h3><p style="color:#000000; margin-left:0; margin-right:0; text-align:left">在 2023 年 12 月底发布 v1.0.0 正式开源，欢迎各位开发者体验试用，更欢迎大家一起建设<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgo-sigma%2Fsigma" target="_blank">sigma</a><span>&nbsp;</span>的未来，参与到项目中来。</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 11 Mar 2024 14:48:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/282630/go-sigma-1-2-0-released</guid>
            <link>https://www.oschina.net/news/282630/go-sigma-1-2-0-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Jeepay v2.3.0 正式发布：支付系统支持一键部署]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="background-color:#ffffff; color:#333333">Jeepay 是一套适合互联网企业使用的开源支付系统，支持多渠道服务商和普通商户模式。已对接</span><code>微信支付</code><span style="background-color:#ffffff; color:#333333">，</span><code>支付宝</code><span style="background-color:#ffffff; color:#333333">，</span><code>云闪付</code><span style="background-color:#ffffff; color:#333333">官方接口，支持聚合码支付。<br><br> v2.3.0 版本升级内容：</span></p><div><ol><li>优化：升级 wxjava/hutool 到最新版本， 适配最新版本微信支付接口</li><li>新增：添加项目下的 Dockerfile 文件</li><li>新增：一键部署安装、卸载脚本</li><li>修复： FastJSON 开启安全模式，解决安全检测漏洞</li></ol></div><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">更多升级日志：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.jeequan.com%2Fdev%2Fupdate%2Fcategory_1016.html" target="_blank">https://www.jeequan.com/dev/update/category_1016.html</a><br><br> 项目特点</p><ul><li>支持多渠道对接，支付网关自动路由</li><li>已对接<code>微信</code>服务商和普通商户接口，支持<span>&nbsp;</span><code>V2</code><span>&nbsp;</span>和<span>&nbsp;</span><code>V3</code><span>&nbsp;</span>接口</li><li>已对接<code>支付宝</code>服务商和普通商户接口，支持 RSA 和 RSA2 签名</li><li>已对接<code>云闪付</code>服务商接口，可选择多家支付机构</li><li>提供 http 形式接口，提供各语言的<span>&nbsp;</span><code>sdk</code><span>&nbsp;</span>实现，方便对接</li><li>接口请求和响应数据采用签名机制，保证交易安全可靠</li><li>系统安全，支持<code>分布式</code>部署，<code>高并发</code></li><li>管理端包括<code>运营平台</code>和<code>商户系统</code></li><li>管理平台操作界面简洁、易用</li><li>支付平台到商户系统的订单通知使用 MQ 实现，保证了高可用，消息可达</li><li>支付渠道的接口参数配置界面自动化生成</li><li>使用<span>&nbsp;</span><code>spring security</code><span>&nbsp;</span>实现权限管理</li><li>前后端分离架构，方便二次开发</li><li>由原<span>&nbsp;</span><code>XxPay</code><span>&nbsp;</span>团队开发，有着多年支付系统开发经验</li></ul><blockquote><p style="margin-left:0; margin-right:0">Jeepay 运营平台功能</p></blockquote><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="Jeepay 运营平台功能" src="https://static.oschina.net/uploads/img/202207/08190720_WljY.png" referrerpolicy="no-referrer"></p><blockquote><p style="margin-left:0; margin-right:0">Jeepay 商户系统功能</p></blockquote><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="Jeepay 商户系统功能" src="https://static.oschina.net/uploads/img/202207/08190720_luZt.png" referrerpolicy="no-referrer"></p><h2>🍯 系统截图</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><code>以下截图是从实际已完成功能界面截取,截图时间为：2021-07-06 08:59</code></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="Jeepay 演示界面" src="https://static.oschina.net/uploads/img/202207/08190720_qjBV.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="Jeepay 演示界面" src="https://static.oschina.net/uploads/img/202207/08190721_IaeV.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="Jeepay 演示界面" src="https://static.oschina.net/uploads/img/202207/08190721_jxZD.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="Jeepay 演示界面" src="https://static.oschina.net/uploads/img/202207/08190721_AAZk.png" referrerpolicy="no-referrer"></p><p>&nbsp;</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 11 Mar 2024 11:53:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/282607/jeepay-2-3-0-released</guid>
            <link>https://www.oschina.net/news/282607/jeepay-2-3-0-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Apache Doris 2.1.0 版本发布：开箱盲测性能大幅优化，复杂查询性能提升 100%]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>亲爱的社区小伙伴们，我们很高兴地向大家宣布，在 3 月 8 日我们引来了 </span><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Freleases" target="_blank"><span>Apache Doris 2.1.0 版本</span></a></span><span>的正式发布，欢迎大家下载使用。</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span>在查询性能方面， 2.1 系列版本我们着重提升了开箱盲测性能，力争不做调优的情况下取得较好的性能表现，包含了对复杂 SQL 查询性能的进一步提升，在 TPC-DS 1TB 测试数据集上获得超过 100% 的性能提升，查询性能居于业界领先地位。</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>在数据湖分析场景，我们进行了大量性能方面的改进、相对于 Trino 和 Spark 分别有 4-6 倍的性能提升，并引入了多 SQL 方言兼容、便于用户可以从原有系统无缝切换至 Apache Doris。在面向数据科学以及其他形式的大规模数据读取场景，我们引入了基于 Arrow Flight 的高速读取接口，数据传输效率提升 100 倍。</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>在半结构化数据分析场景，我们引入了全新的 Variant 和 IP 数据类型，完善了一系列分析函数，面向复杂半结构化数据的存储和分析处理更加得心应手。</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>在 2.1.0 版本中我们也引入了基于多表的异步物化视图以提升查询性能，支持透明改写加速、自动刷新、外表到内表的物化视图以及物化视图直查，基于这一能力物化视图也可用于数据仓库分层建模、作业调度和数据加工。</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>在存储方面，我们引入了自增列、自动分区、MemTable 前移以及服务端攒批的能力，使得大规模数据实时写入的效率更高。</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>在负载管理方面，我们进一步完善了 Workload Group 资源组的隔离能力，并增加了运行时查看 SQL 资源用量的能力，进一步提升了多负载场景下的稳定性。</span></p></li></ul><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>在 2.1.0 版本的研发过程中，</span><span><strong><span>有 237 位贡献者为 Apache Doris 带来了接近 6000 个 Commits。</span></strong></span><span> 同时 2.1.0 版本也同样经过了近百家社区用户的大规模打磨，在测试过程中向我们反馈了许多有价值的优化项，在此向所有参与版本研发、测试和需求反馈的贡献者们表示最衷心的感谢。后续我们将会持续敏捷发版来响应所有用户对功能和稳定性的更高追求，欢迎大家在使用过程中给予我们更多反馈。</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span>GitHub 下载：</span><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Freleases" target="_blank"><span>https://github.com/apache/doris/releases</span></a></span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>官网下载：</span><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Freleases" target="_blank"><span>https://doris.apache.org/download</span></a></span></p></li></ul><h2><span>复杂查询性能提升 100%，TPC-DS 业界领先</span></h2><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>在 Apache Doris 2.1 版本中，我们着重优化了面向海量数据和复杂数据分析场景下的分析性能，使得 Apache Doris 在真实业务场景中拥有更加优异的性能表现。在此我们以 TPC-DS 1TB 作为性能测试对比的基准，重点对比最新 2.1.0 版本与 2.0.5 版本的性能提升。集群规模均为 1FE、3BE，其中 BE 节点的服务器配置为 48C 192G。从以下测试结果中可以看到：</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span>2.1.0 版本的总查询耗时为 245.7 秒，相较于 2.0.5 版本的 489.6 秒，</span><span><strong><span>性能提升达到 100 %；</span></strong></span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>在全部 99 个 SQL 中，有近三分之一的 SQL 查询性能提升达到 2 倍以上，超过 80 个 SQL 都获得显著性能提升；</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>不论是基础的过滤、排序、聚合，或者复杂的多表关联查询、子查询以及窗口函数计算，2.1.0 版本都有更为明显的性能优势；</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>2.0.5 版本或 2.1.0 版本，都可以完整执行 TPC-DS 的 99 个查询。</span></p></li></ul><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span><img alt="复杂查询性能提升 100%，TPC-DS 业界领先" src="https://cdn.selectdb.com/static/2_1_Doris_TPC_DS_best_performance_915521542b.png" referrerpolicy="no-referrer"></span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>以上详细测试结果我们将在后续提交到 Apache Doris 官网文档中，也欢迎所有用户在完成最新版本的部署后进行测试复现。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>与此同时，我们也对业内多个 OLAP 系统在同等硬件资源和多个测试数据规模下进行了性能测试，不论大宽表场景或多表关联场景，Apache Doris 都具备着极为明显的性能优势。毫无疑问，</span><span><strong><span>Apache Doris 已在业界同类产品中性能居于最领先地位</span></strong></span><span>！</span></p><h3><span>优化器更智能</span></h3><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>在 Apache Doris 2.0 版本中我们引入了全新查询优化器，在绝大多数场景无需任何调优即可实现极致的查询性能。而在最新发布的 Apache Doris 2.1 版本中，查询优化器在整体代际更新的基础上，进行了优化规则的扩展和枚举框架的完善，面向复杂分析场景更加得心应手：</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span><strong><span>优化器基础设施完善</span></strong></span><span>：在多种优化器基础设施方面进行了补充和增强，例如对统计信息推导和代价模型方面的持续改进，使之能够收集更多的特征信息为复杂优化提供基础；</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span><strong><span>优化规则持续扩展</span></strong></span><span>：得益于丰富的实际场景反馈，新版本中查询优化器增强了包括算子下压在内的许多经典规则，结合上述基础设施扩充而引入的新优化规则，使得新版本的查询优化器能覆盖更广泛的使用场景；</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span><strong><span>枚举框架进一步优化</span></strong></span><span>：在查询优化器 Cascades 和 DPhyper 两大融合框架的基础上，继续深耕框架能力、优化框架性能，确立了更为清晰的枚举策略，兼顾计划质量和枚举效率，为高性能引擎提供坚实基础。例如将 Cascades 默认枚举表上限从 5 提升到了 8、有效扩大了高质量计划的覆盖范围，同时进一步优化 DPhyper 枚举效率、使之能够枚举出更优计划。</span></p></li></ul><h3><span>无统计信息优化</span></h3><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>针对海量数据规模以及数据湖分析场景下，针对统计信息收集难度高、收集时间久的问题，在 2.1 版本中查询优化器利用多种启发式技术，大大提升了</span><span><strong><span>无统计信息场景下</span></strong></span><span>的计划质量，使得在没有统计信息的场景下也可获得较好的查询计划。同时扩展了 Runtime Filter 的下压场景和自适应能力，在执行过程中能够自适应地动态调整部分表达式谓词，使得 Apache Doris 在不依赖统计信息的情况下也具有优异的性能表现。</span></p><h3><span>Parallel Adaptive Scan 并行自适应扫描</span></h3><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>在复杂数据分析场景下，每次查询都需要扫描大量的数据进行计算，因此 IO 瓶颈很大程度上决定了查询性能的上限。为了提升 Scan IO 的性能，Apache Doris 采取了并行读取的技术，每个扫描线程读取 1 个或者多个 Tablet（即用户建表时指定的 Bucket），但如若用户建表时指定的 Bucket 数目不合理、那么磁盘扫描线程就无法并行工作，直接影响查询性能。 为此，在 2.1 版本中我们引入了 Tablet 内的并行扫描技术，可以将多个 Tablet 进行池化，在磁盘扫描端可以根据行数来拆分多个线程并行扫描（最多支持 48 个线程），从而有效避免分桶数不合理导致的查询性能问题。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span><img alt="Parallel Adaptive Scan 并行自适应扫描" src="https://cdn.selectdb.com/static/2_1_doris_parallel_adaptive_scan_8a203d3d9b.png" referrerpolicy="no-referrer"></span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>因此在 2.1 版本以后，我们建议用户</span><span><strong><span>在建表时设置的分桶数=整个集群磁盘的数量</span></strong></span><span>，在 IO 层面能将整个集群所有的 IO 资源全部利用起来。</span></p><blockquote><p style="margin-left:0; margin-right:0"><span>注：当前 2.1.0 版本的 Parallel Adaptive Scan 只能针对 Unqiue Key 模型的 Merge-on-Write 表以及 Duplicate Key 模型生效， 预计在 2.1.1 版本中会增加对 Unique Key 模型 Merge-on-Read 表和 Aggregate Key 模型的支持。</span></p></blockquote><h3><span>Local Shuffle</span></h3><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>在部分场景下，数据分布不均会导致多个 Instance 的查询执行出现长尾。而为了解决单个 BE 节点上多个 Instance 之间的数据倾斜问题，在 Apache Doris 2.1 版本中我们引入了 Local Shuffle 技术，尽可能将数据打散从而加速查询。例如在某一典型的聚合查询中，数据在经过聚合之前将会通过一个 Local Shuffle 节点被均匀分布在不同的 Pipeline Task 中，如下图所示：</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span><img alt="Local Shuffle" src="https://cdn.selectdb.com/static/2_1_doris_local_shuffle_7d9b986fe6.png" referrerpolicy="no-referrer"></span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>在具备了 Parallel Adaptive Scan 和 Local Shuffle 能力之后，Apache Doris 能够规避由于分桶数不合理、数据分布不均带来的性能问题。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>在此我们分别使用 Clickbench（大宽表场景）和 TPC-H（多表 Join 的复杂分析场景） 数据集模拟建表分桶不合理的情况，在 Clickbench 数据集中我们建表 Bucket 数量分别设为 1 和 16 ，在 TPC-H 100G 数据集下我们建表时每个 Partition 的 Bucket 数目分别设为 1 和 16。在开启 Parallel Adaptive Scan 和 Local Shuffle 之后，整体查询性能表现比较平稳，即使不合理的数据分布也能取得优异的性能表现。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span><img alt="2.1-doris-clickbench-tpch" src="https://cdn.selectdb.com/static/2_1_doris_clickbench_tpch_de608f0f92.png" referrerpolicy="no-referrer"></span></p><blockquote><p style="margin-left:0; margin-right:0"><span>参考文档：</span><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoris.apache.org%2Fzh-CN%2Fdocs%2Fquery-acceleration%2Fpipeline-x-execution-engine" target="_blank"><span>https://doris.apache.org/zh-CN/docs/query-acceleration/pipeline-x-execution-engine</span></a></span></p></blockquote><h2><span>ARM 架构深度适配，性能提升 230% </span></h2><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>在 Apache Doris 2.1 版本中我们针对 ARM 架构进行了深度的适配和指令集优化，可以在 ARM 架构上充分发挥 Apache Doris 的性能优势。相较于 2.0 版本，2.1 版本在 ClickBench、SSB 100G、TPC-H 100G 以及 TPC-DS 1TB 等多个测试数据集中取得了超过 100% 的性能提升。在此我们以大宽表场景的 ClickBench 以及多表关联场景的 TPC-H 为例，集群配置均为 1FE 3BE、BE 节点的服务器配置为 16C 64G 的 ARM 服务器，测试结论如下：</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span>在大宽表场景中， ClickBench 测试数据集 43 个 SQL 的总查询耗时从 102.36 秒降低至 30.73 秒，性能提升超过 230%；</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>在多表关联场景中， TPC-H 22 个 SQL 的总查询耗时从 174.8 秒降低至 90.4 秒，性能提升 93%；</span></p></li></ul><h2><span>数据湖分析</span></h2><h3><span>性能提升 </span></h3><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>在 2.1 版本中，我们对数据湖分析方面做了大量改进，包括对 HDFS 和对象存储的 IO 优化、Parquet/ORC 文件格式的读取反序列优化、浮点类型解压优化、谓词下推执行优化、缓存策略以及扫描任务调度策略的优化，以及针对不同数据源的统计信息准确性的提升及更精准的优化器代价模型。基于以上优化，Apache Doris 在数据湖分析场景下的性能得到大幅度提升。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span><img alt="Doris 数据湖分析-性能提升" src="https://cdn.selectdb.com/static/2_1_doris_TPC_DS_2a1a2327a3.png" referrerpolicy="no-referrer"></span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>在此我们以 TPC-DS 1TB 场景下进行测试，Apache Doris 2.1 版本和 Trino 435 版本的性能测试结果如下：</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span>在无缓存情况下，Apache Doris 的总体运行耗时间为 717s、Trino 为 1296s，查询耗时降低了 45%，全部 99 条 SQL 中有 80% 比 Trino 更快 ；</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>在开启文件缓存功能并命中的情况下，Apache Doris 的总体性能可以进一步提升 2.2 倍以上，</span><span><strong><span>较 Trino 有 4 倍以上的性能提升，全部 99 条 SQL 性能均优于 Trino</span></strong></span><span>。</span></p></li></ul><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>与此同时也在 TPC-DS 10TB 场景下对 Apache Doris 2.1 版本与 Spark 3.5.0 以及 3.3.1 版本进行了性能测试，查询性能分别提升 4.2 倍和 6.1 倍。</span></p><h3><span>多 SQL 方言兼容</span></h3><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>当用户从原有 OLAP 系统（如 Clickhouse、Trino、Presto、Hive 等）迁移至 Apache Doris 时，一方面因为 SQL 方言存在差异，需要同步修改大量的业务查询逻辑进行适配，无法进行平滑迁移。另一方面，当使用 Apache Doris 作为统一数据分析网关时，需要对接原先的 Hive、Spark 等系统、以满足不同数据源的查询需求。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>因此在 Apache Doris 2.1 版本中我们引入了多 SQL 方言转换功能，用户可以直接使用原先系统的 SQL 方言在 Doris 中进行数据查询而无需修改业务逻辑。在部署好 SQL 转换服务后，用户只需通过会话变量 </span><span><code>sql_dialect</code></span><span>设置当前会话的 SQL 方言类型，即可使用对应的 SQL 方言进行查询。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>该功能目前为实验性质功能，当前已经支持 ClickHouse、Presto、Trino、Hive、Spark。在此我们以 Trino 为例，部署完 SQL 转换服务后，在会话变量中设置 </span><span><code>set sql_dialect = trino</code></span><span> ，即可直接采取 Trino SQL 语法执行查询。在某些社区用户的实际线上业务 SQL 兼容性测试中，在全部 3w 多条查询语句中与 Trino SQL 兼容度高达 99% 以上。也欢迎所有用户在使用过程中向我们反馈不兼容的 Case，帮助 Apache Doris 更加完善。</span></p><blockquote><p style="margin-left:.8em; margin-right:0"><span>演示 Demo: </span><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1cS421A7kA%2F%3Fspm_id_from%3D333.999.0.0" target="_blank"><span>https://www.bilibili.com/video/BV1cS421A7kA/?spm_id_from=333.999.0.0</span></a></span></p><p style="margin-left:0; margin-right:.8em"><span>参考文档: </span><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoris.apache.org%2Fzh-CN%2Fdocs%2Flakehouse%2Fsql-dialect" target="_blank"><span>https://doris.apache.org/zh-CN/docs/lakehouse/sql-dialect</span></a></span></p></blockquote><h3><span>高速数据读取，数据传输效率提升 100 倍</span></h3><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>如今许多大数据系统都采取列式内存数据格式，以 MySQL/JDBC/ODBC 作为与数据库系统交互的主流协议与标准。在数据输出至外部系统的过程中，需要将数据从系统特定的列存格式序列化为 MySQL/JDBC/ODBC 协议的行存格式，再反序列化回客户端的列存格式，这会使数据传输速度大幅降低，在面向数据科学或其他形式的大规模数据读写时，数据传输的效率缺陷愈发明显。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>作为用于大规模数据处理的列式内存格式，Apache Arrow 提供了高效的数据结构、允许不同系统间更快共享数据。如果源数据库和目标客户端都支持 Apache Arrow 作为列式内存格式，使用 Arrow Flight SQL 协议传输将无需序列化和反序列化数据，消除数据传输中的开销。同时 Arrow Flight 还可以利用多节点和多核架构，通过完全并行化优化吞吐能力。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span><img alt="高速数据读取，数据传输效率提升 100 倍" src="https://cdn.selectdb.com/static/2_1_doris_arrow_flight_312b92e568.png" referrerpolicy="no-referrer"></span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>在过去如果需要采取 Python 读取 Apache Doris 中的数据，需要将 Apache Doris 中列存的 Block 序列化为 MySQL 协议的行存 Bytes，然后在 Python 客户端再反序列化到 Pandas 中，传输过程带来的性能损耗非常大。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>在 Apache Doris 2.1 版本中，我们提供了基于 Arrow Flight 的 HTTP Data API 高吞吐数据读写接口。相比于过去的 MySQL 协议，使用 Arrow Flight SQL 后，我们在 Apache Doris 中先将列存的 Block 转为同样列存的 Arrow RecordBatch，这一步转换效率非常高、且传输过程中无需再次序列化和反序列化，而后在 Python 客户端再将 Arrow RecordBatch 转到同样列存的 Pandas DataFrame 中，这一步转换同样非常快。通过 Arrow Flight 提供的 Python 客户端 Pandas/Numpy 等数据科学工具，可以快速从 Apache Doris 中读取数据并在本地进行分析。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>基于此， Apache Doris 可以与整个 AI 和数据科学生态进行良好的整合，这也是未来的重要发展方向。</span></p><pre><span><span style="color:#000000">conn</span><span style="color:#981a1a">=</span><span style="color:#000000">flight_sql</span>.<span style="color:#000000">connect</span>(<span style="color:#000000">uri</span><span style="color:#981a1a">=</span><span style="color:#aa1111">"grpc://127.0.0.1:9090"</span>, <span style="color:#000000">db_kwargs</span><span style="color:#981a1a">=</span>{</span><span><span style="color:#000000">adbc_driver_manager</span>.<span style="color:#000000">DatabaseOptions</span>.<span style="color:#000000">USERNAME</span>.<span style="color:#000000">value</span>: <span style="color:#aa1111">"user"</span>,</span><span><span style="color:#000000">adbc_driver_manager</span>.<span style="color:#000000">DatabaseOptions</span>.<span style="color:#000000">PASSWORD</span>.<span style="color:#000000">value</span>: <span style="color:#aa1111">"pass"</span>,</span><span>        })</span><span><span style="color:#000000">cursor</span><span style="color:#981a1a">=</span><span style="color:#000000">conn</span>.<span style="color:#000000">cursor</span>()</span><span><span style="color:#000000">cursor</span>.<span style="color:#000000">execute</span>(<span style="color:#aa1111">"select * from arrow_flight_sql_test order by k0;"</span>)</span><span><span style="color:#000000">print</span>(<span style="color:#000000">cursor</span>.<span style="color:#000000">fetchallarrow</span>().<span style="color:#000000">to_pandas</span>())</span></pre><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>针对常见的数据类型，我们通过不同的 MySQL 客户端进行了对比测试，基于 Arrow Flight SQL 数据传输性能相较于 MySQL 协议提升了近百倍。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span><img alt="Arrow Flight SQL" src="https://cdn.selectdb.com/static/2_1_doris_arrow_flight_sql_228daad843.png" referrerpolicy="no-referrer"></span></p><blockquote><p style="margin-left:0; margin-right:0"><span>演示 Demo：</span><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1mj421Z7b7%2F%3Fspm_id_from%3D333.999.0.0" target="_blank"><span>https://www.bilibili.com/video/BV1mj421Z7b7/?spm_id_from=333.999.0.0</span></a></span></p></blockquote><h3><span>其他</span></h3><ul><li><p style="margin-left:.5rem; margin-right:0"><span>Paimon Catalog：Paimon 版本升级至 0.6.0，优化了 Read Optimized 表的读取，在 Paimon 数据充分合并的场景下，可以有 10 倍的性能提升；</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>Iceberg Catalog：Iceberg 版本升级至 1.4.3，同时解决了 AWS S3 认证的若干兼容性问题；</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>Hudi Catalog：Hudi 版本升级至 0.14.1，同时解决了 Hudi Flink Catalog 的若干兼容性问题。</span></p></li></ul><h2><span>多表物化视图</span></h2><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>作为一种典型的「空间换时间」策略，物化视图通过预先计算和存储 SQL 查询结果，当执行相同查询时可以直接从物化视图表中获取结果，在大幅提升查询性能的同时、更是减少重复计算带来的系统资源消耗。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>在过去版本中 Apache Doris 提供了强一致的单表物化视图、保证基表和物化视图表的原子性，并支持了查询语句在物化视图上的智能路由。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span><strong><span>在 Apache Doris 2.1 版本中，我们引入了全新的异步物化视图，可以基于多表来构建。</span></strong></span><span> 异步物化视图可以全量或者分区增量构建，也可以手动或者周期性地构建刷新数据。在多表关联查询且表数据量较大的场景下，优化器会根据代价模型进行透明改写、并自动寻找最优物化视图来响应查询，</span><span><strong><span>以大幅提升查询性能</span></strong></span><span>。与此同时，也提供了从外表到内表的物化视图以及直查物化视图的能力，基于此特性，</span><span><strong><span>异步物化视图也可用于数据仓库分层建模、作业调度和数据加工</span></strong></span><span>。异步物化视图使用方式如下：</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span><strong><span>表定义：</span></strong></span></p><pre><span><span style="color:#770088">use</span> tpch<span>;</span></span><span><span>​</span></span><span><span style="color:#770088">CREATE</span><span style="color:#770088">TABLE</span><span style="color:#770088">IF</span><span style="color:#770088">NOT</span><span style="color:#770088">EXISTS</span> orders  <span style="color:#999977">(</span></span><span>    o_orderkey       <span>integer</span><span style="color:#770088">not</span><span style="color:#221199">null</span><span>,</span></span><span>    o_custkey        <span>integer</span><span style="color:#770088">not</span><span style="color:#221199">null</span><span>,</span></span><span>    o_orderstatus    <span>char</span><span style="color:#999977">(</span><span style="color:#116644">1</span><span style="color:#999977">)</span><span style="color:#770088">not</span><span style="color:#221199">null</span><span>,</span></span><span>    o_totalprice     decimalv3<span style="color:#999977">(</span><span style="color:#116644">15</span><span>,</span><span style="color:#116644">2</span><span style="color:#999977">)</span><span style="color:#770088">not</span><span style="color:#221199">null</span><span>,</span></span><span>    o_orderdate      <span>date</span><span style="color:#770088">not</span><span style="color:#221199">null</span><span>,</span></span><span>    o_orderpriority  <span>char</span><span style="color:#999977">(</span><span style="color:#116644">15</span><span style="color:#999977">)</span><span style="color:#770088">not</span><span style="color:#221199">null</span><span>,</span></span><span>    o_clerk          <span>char</span><span style="color:#999977">(</span><span style="color:#116644">15</span><span style="color:#999977">)</span><span style="color:#770088">not</span><span style="color:#221199">null</span><span>,</span></span><span>    o_shippriority   <span>integer</span><span style="color:#770088">not</span><span style="color:#221199">null</span><span>,</span></span><span>    o_comment        <span>varchar</span><span style="color:#999977">(</span><span style="color:#116644">79</span><span style="color:#999977">)</span><span style="color:#770088">not</span><span style="color:#221199">null</span></span><span><span style="color:#999977">)</span></span><span>    DUPLICATE <span style="color:#770088">KEY</span><span style="color:#999977">(</span>o_orderkey<span>,</span> o_custkey<span style="color:#999977">)</span></span><span><span style="color:#770088">PARTITION</span><span style="color:#770088">BY</span><span style="color:#770088">RANGE</span><span style="color:#999977">(</span>o_orderdate<span style="color:#999977">)(</span></span><span><span style="color:#770088">FROM</span><span style="color:#999977">(</span><span style="color:#aa1111">'2023-10-17'</span><span style="color:#999977">)</span><span style="color:#770088">TO</span><span style="color:#999977">(</span><span style="color:#aa1111">'2023-10-20'</span><span style="color:#999977">)</span><span style="color:#770088">INTERVAL</span><span style="color:#116644">1</span> DAY<span style="color:#999977">)</span></span><span>    DISTRIBUTED <span style="color:#770088">BY</span><span style="color:#770088">HASH</span><span style="color:#999977">(</span>o_orderkey<span style="color:#999977">)</span> BUCKETS <span style="color:#116644">3</span></span><span>    PROPERTIES <span style="color:#999977">(</span><span style="color:#aa1111">"replication_num"</span><span style="color:#981a1a">=</span><span style="color:#aa1111">"1"</span><span style="color:#999977">)</span><span>;</span></span><span><span>​</span></span><span><span style="color:#770088">insert</span><span style="color:#770088">into</span> orders <span style="color:#770088">values</span></span><span><span style="color:#999977">(</span><span style="color:#116644">1</span><span>,</span><span style="color:#116644">1</span><span>,</span><span style="color:#aa1111">'ok'</span><span>,</span><span style="color:#116644">99.5</span><span>,</span><span style="color:#aa1111">'2023-10-17'</span><span>,</span><span style="color:#aa1111">'a'</span><span>,</span><span style="color:#aa1111">'b'</span><span>,</span><span style="color:#116644">1</span><span>,</span><span style="color:#aa1111">'yy'</span><span style="color:#999977">)</span><span>,</span></span><span><span style="color:#999977">(</span><span style="color:#116644">2</span><span>,</span><span style="color:#116644">2</span><span>,</span><span style="color:#aa1111">'ok'</span><span>,</span><span style="color:#116644">109.2</span><span>,</span><span style="color:#aa1111">'2023-10-18'</span><span>,</span><span style="color:#aa1111">'c'</span><span>,</span><span style="color:#aa1111">'d'</span><span>,</span><span style="color:#116644">2</span><span>,</span><span style="color:#aa1111">'mm'</span><span style="color:#999977">)</span><span>,</span></span><span><span style="color:#999977">(</span><span style="color:#116644">3</span><span>,</span><span style="color:#116644">3</span><span>,</span><span style="color:#aa1111">'ok'</span><span>,</span><span style="color:#116644">99.5</span><span>,</span><span style="color:#aa1111">'2023-10-19'</span><span>,</span><span style="color:#aa1111">'a'</span><span>,</span><span style="color:#aa1111">'b'</span><span>,</span><span style="color:#116644">1</span><span>,</span><span style="color:#aa1111">'yy'</span><span style="color:#999977">)</span><span>;</span></span><span><span>​</span></span><span><span style="color:#770088">CREATE</span><span style="color:#770088">TABLE</span><span style="color:#770088">IF</span><span style="color:#770088">NOT</span><span style="color:#770088">EXISTS</span> lineitem <span style="color:#999977">(</span></span><span>    l_orderkey    <span>integer</span><span style="color:#770088">not</span><span style="color:#221199">null</span><span>,</span></span><span>    l_partkey     <span>integer</span><span style="color:#770088">not</span><span style="color:#221199">null</span><span>,</span></span><span>    l_suppkey     <span>integer</span><span style="color:#770088">not</span><span style="color:#221199">null</span><span>,</span></span><span>    l_linenumber  <span>integer</span><span style="color:#770088">not</span><span style="color:#221199">null</span><span>,</span></span><span>    l_quantity    decimalv3<span style="color:#999977">(</span><span style="color:#116644">15</span><span>,</span><span style="color:#116644">2</span><span style="color:#999977">)</span><span style="color:#770088">not</span><span style="color:#221199">null</span><span>,</span></span><span>    l_extendedprice  decimalv3<span style="color:#999977">(</span><span style="color:#116644">15</span><span>,</span><span style="color:#116644">2</span><span style="color:#999977">)</span><span style="color:#770088">not</span><span style="color:#221199">null</span><span>,</span></span><span>    l_discount    decimalv3<span style="color:#999977">(</span><span style="color:#116644">15</span><span>,</span><span style="color:#116644">2</span><span style="color:#999977">)</span><span style="color:#770088">not</span><span style="color:#221199">null</span><span>,</span></span><span>    l_tax         decimalv3<span style="color:#999977">(</span><span style="color:#116644">15</span><span>,</span><span style="color:#116644">2</span><span style="color:#999977">)</span><span style="color:#770088">not</span><span style="color:#221199">null</span><span>,</span></span><span>    l_returnflag  <span>char</span><span style="color:#999977">(</span><span style="color:#116644">1</span><span style="color:#999977">)</span><span style="color:#770088">not</span><span style="color:#221199">null</span><span>,</span></span><span>    l_linestatus  <span>char</span><span style="color:#999977">(</span><span style="color:#116644">1</span><span style="color:#999977">)</span><span style="color:#770088">not</span><span style="color:#221199">null</span><span>,</span></span><span>    l_shipdate    <span>date</span><span style="color:#770088">not</span><span style="color:#221199">null</span><span>,</span></span><span>    l_commitdate  <span>date</span><span style="color:#770088">not</span><span style="color:#221199">null</span><span>,</span></span><span>    l_receiptdate <span>date</span><span style="color:#770088">not</span><span style="color:#221199">null</span><span>,</span></span><span>    l_shipinstruct <span>char</span><span style="color:#999977">(</span><span style="color:#116644">25</span><span style="color:#999977">)</span><span style="color:#770088">not</span><span style="color:#221199">null</span><span>,</span></span><span>    l_shipmode     <span>char</span><span style="color:#999977">(</span><span style="color:#116644">10</span><span style="color:#999977">)</span><span style="color:#770088">not</span><span style="color:#221199">null</span><span>,</span></span><span>    l_comment      <span>varchar</span><span style="color:#999977">(</span><span style="color:#116644">44</span><span style="color:#999977">)</span><span style="color:#770088">not</span><span style="color:#221199">null</span></span><span><span style="color:#999977">)</span></span><span>    DUPLICATE <span style="color:#770088">KEY</span><span style="color:#999977">(</span>l_orderkey<span>,</span> l_partkey<span>,</span> l_suppkey<span>,</span> l_linenumber<span style="color:#999977">)</span></span><span><span style="color:#770088">PARTITION</span><span style="color:#770088">BY</span><span style="color:#770088">RANGE</span><span style="color:#999977">(</span>l_shipdate<span style="color:#999977">)</span></span><span><span style="color:#999977">(</span><span style="color:#770088">FROM</span><span style="color:#999977">(</span><span style="color:#aa1111">'2023-10-17'</span><span style="color:#999977">)</span><span style="color:#770088">TO</span><span style="color:#999977">(</span><span style="color:#aa1111">'2023-10-20'</span><span style="color:#999977">)</span><span style="color:#770088">INTERVAL</span><span style="color:#116644">1</span> DAY<span style="color:#999977">)</span></span><span>    DISTRIBUTED <span style="color:#770088">BY</span><span style="color:#770088">HASH</span><span style="color:#999977">(</span>l_orderkey<span style="color:#999977">)</span> BUCKETS <span style="color:#116644">3</span></span><span>    PROPERTIES <span style="color:#999977">(</span><span style="color:#aa1111">"replication_num"</span><span style="color:#981a1a">=</span><span style="color:#aa1111">"1"</span><span style="color:#999977">)</span><span>;</span></span><span><span>​</span></span><span><span style="color:#770088">insert</span><span style="color:#770088">into</span> lineitem <span style="color:#770088">values</span></span><span><span style="color:#999977">(</span><span style="color:#116644">1</span><span>,</span><span style="color:#116644">2</span><span>,</span><span style="color:#116644">3</span><span>,</span><span style="color:#116644">4</span><span>,</span><span style="color:#116644">5.5</span><span>,</span><span style="color:#116644">6.5</span><span>,</span><span style="color:#116644">7.5</span><span>,</span><span style="color:#116644">8.5</span><span>,</span><span style="color:#aa1111">'o'</span><span>,</span><span style="color:#aa1111">'k'</span><span>,</span><span style="color:#aa1111">'2023-10-17'</span><span>,</span><span style="color:#aa1111">'2023-10-17'</span><span>,</span><span style="color:#aa1111">'2023-10-17'</span><span>,</span><span style="color:#aa1111">'a'</span><span>,</span><span style="color:#aa1111">'b'</span><span>,</span><span style="color:#aa1111">'yyyyyyyyy'</span><span style="color:#999977">)</span><span>,</span></span><span><span style="color:#999977">(</span><span style="color:#116644">2</span><span>,</span><span style="color:#116644">2</span><span>,</span><span style="color:#116644">3</span><span>,</span><span style="color:#116644">4</span><span>,</span><span style="color:#116644">5.5</span><span>,</span><span style="color:#116644">6.5</span><span>,</span><span style="color:#116644">7.5</span><span>,</span><span style="color:#116644">8.5</span><span>,</span><span style="color:#aa1111">'o'</span><span>,</span><span style="color:#aa1111">'k'</span><span>,</span><span style="color:#aa1111">'2023-10-18'</span><span>,</span><span style="color:#aa1111">'2023-10-18'</span><span>,</span><span style="color:#aa1111">'2023-10-18'</span><span>,</span><span style="color:#aa1111">'a'</span><span>,</span><span style="color:#aa1111">'b'</span><span>,</span><span style="color:#aa1111">'yyyyyyyyy'</span><span style="color:#999977">)</span><span>,</span></span><span><span style="color:#999977">(</span><span style="color:#116644">3</span><span>,</span><span style="color:#116644">2</span><span>,</span><span style="color:#116644">3</span><span>,</span><span style="color:#116644">6</span><span>,</span><span style="color:#116644">7.5</span><span>,</span><span style="color:#116644">8.5</span><span>,</span><span style="color:#116644">9.5</span><span>,</span><span style="color:#116644">10.5</span><span>,</span><span style="color:#aa1111">'k'</span><span>,</span><span style="color:#aa1111">'o'</span><span>,</span><span style="color:#aa1111">'2023-10-19'</span><span>,</span><span style="color:#aa1111">'2023-10-19'</span><span>,</span><span style="color:#aa1111">'2023-10-19'</span><span>,</span><span style="color:#aa1111">'c'</span><span>,</span><span style="color:#aa1111">'d'</span><span>,</span><span style="color:#aa1111">'xxxxxxxxx'</span><span style="color:#999977">)</span><span>;</span></span><span></span><span></span><span><span style="color:#770088">CREATE</span><span style="color:#770088">TABLE</span><span style="color:#770088">IF</span><span style="color:#770088">NOT</span><span style="color:#770088">EXISTS</span> partsupp <span style="color:#999977">(</span></span><span>  ps_partkey     <span>INTEGER</span><span style="color:#770088">NOT</span><span style="color:#221199">NULL</span><span>,</span></span><span>  ps_suppkey     <span>INTEGER</span><span style="color:#770088">NOT</span><span style="color:#221199">NULL</span><span>,</span></span><span>  ps_availqty    <span>INTEGER</span><span style="color:#770088">NOT</span><span style="color:#221199">NULL</span><span>,</span></span><span>  ps_supplycost  DECIMALV3<span style="color:#999977">(</span><span style="color:#116644">15</span><span>,</span><span style="color:#116644">2</span><span style="color:#999977">)</span><span style="color:#770088">NOT</span><span style="color:#221199">NULL</span><span>,</span></span><span>  ps_comment     <span>VARCHAR</span><span style="color:#999977">(</span><span style="color:#116644">199</span><span style="color:#999977">)</span><span style="color:#770088">NOT</span><span style="color:#221199">NULL</span></span><span><span style="color:#999977">)</span></span><span>DUPLICATE <span style="color:#770088">KEY</span><span style="color:#999977">(</span>ps_partkey<span>,</span> ps_suppkey<span style="color:#999977">)</span></span><span>DISTRIBUTED <span style="color:#770088">BY</span><span style="color:#770088">HASH</span><span style="color:#999977">(</span>ps_partkey<span style="color:#999977">)</span> BUCKETS <span style="color:#116644">3</span></span><span>PROPERTIES <span style="color:#999977">(</span></span><span><span style="color:#aa1111">"replication_num"</span><span style="color:#981a1a">=</span><span style="color:#aa1111">"1"</span></span><span><span style="color:#999977">)</span></span></pre><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span><strong><span>创建物化视图:</span></strong></span></p><pre><span><span style="color:#770088">CREATE</span> MATERIALIZED <span style="color:#770088">VIEW</span> mv1 </span><span>        BUILD DEFERRED REFRESH AUTO <span style="color:#770088">ON</span> MANUAL</span><span><span style="color:#770088">partition</span><span style="color:#770088">by</span><span style="color:#999977">(</span>l_shipdate<span style="color:#999977">)</span></span><span>        DISTRIBUTED <span style="color:#770088">BY</span> RANDOM BUCKETS <span style="color:#116644">2</span></span><span>        PROPERTIES <span style="color:#999977">(</span><span style="color:#aa1111">'replication_num'</span><span style="color:#981a1a">=</span><span style="color:#aa1111">'1'</span><span style="color:#999977">)</span></span><span><span style="color:#770088">AS</span></span><span><span style="color:#770088">select</span> l_shipdate<span>,</span> o_orderdate<span>,</span> l_partkey<span>,</span></span><span>            l_suppkey<span>,</span><span style="color:#770088">sum</span><span style="color:#999977">(</span>o_totalprice<span style="color:#999977">)</span><span style="color:#770088">as</span> sum_total</span><span><span style="color:#770088">from</span> lineitem</span><span><span style="color:#770088">left</span><span style="color:#770088">join</span> orders <span style="color:#770088">on</span> lineitem<span style="color:#0055aa">.l_orderkey</span><span style="color:#981a1a">=</span> orders<span style="color:#0055aa">.o_orderkey</span></span><span><span style="color:#770088">and</span> l_shipdate <span style="color:#981a1a">=</span> o_orderdate</span><span><span style="color:#770088">group</span><span style="color:#770088">by</span></span><span>            l_shipdate<span>,</span></span><span>            o_orderdate<span>,</span></span><span>            l_partkey<span>,</span></span><span>            l_suppkey<span>;</span></span></pre><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span><strong><span>目前异步物化视图已经具备以下功能：</span></strong></span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span><strong><span>透明改写加速：</span></strong></span><span> 支持常见算子的透明改写，如 Select、Where、Join、Group by、Aggregation 等，可以直接通过建立物化视图，对现有的查询进行加速。例如在 BI 报表场景，某些报表查询延时比较高，就可以通过建立合适的物化视图进行加速。</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span><strong><span>自动刷新：</span></strong></span><span> 物化视图支持不同刷新策略，如定时刷新和手动刷新，也支持不同的刷新粒度，如全量刷新、分区粒度的增量刷新等。</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span><strong><span>外表到内表的物化视图：</span></strong></span><span> 可以对存放在 Hive、Hudi、Iceberg 等数据湖系统上的数据建立物化视图，加速对数据湖的访问，也可以通过物化视图的方式将数据湖中的数据同步到 Apache Doris 内表中。</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span><strong><span>物化视图直查：</span></strong></span><span> 用户也可以将物化视图的构建看做 ETL 的过程，把物化视图看做是 ETL 加工后的结果数据，由于物化视图本身也是一个表，所以用户可以直接查询物化视图。</span></p></li></ul><blockquote><p style="margin-left:.8em; margin-right:0"><span>演示 Demo: </span><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1s2421T71z%2F%3Fspm_id_from%3D333.999.0.0" target="_blank"><span>https://www.bilibili.com/video/BV1s2421T71z/?spm_id_from=333.999.0.0</span></a></span></p><p style="margin-left:0; margin-right:.8em"><span>参考文档：</span><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoris.apache.org%2Fzh-CN%2Fdocs%2Fquery-acceleration%2Fasync-materialized-view%2F" target="_blank"><span>https://doris.apache.org/zh-CN/docs/query-acceleration/async-materialized-view/</span></a></span></p></blockquote><h2><span>存储能力增强</span></h2><h3><span>自增列 AUTO_INCREMENT </span></h3><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>自增列 AUTO_INCREMENT 是 OLTP 数据库中常见的一项功能，提供了一种方便高效的方式来为新插入的数据行自动分配唯一标识符。由于自增列的可用值分配涉及到全局事务，因此在分布式 OLAP 数据库中并不常见。在 Apache Doris 2.1 版本中，我们通过创新性的自增序列预分配策略，提供了高效的自增列实现。基于自增列的唯一性保证，用户可以利用自增列实现高效的字典编码和查询分页。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span><strong><span>字典编码：</span></strong></span><span> 在进行 PV/UV 统计或人群圈选等需要精确去重的查询时，可以使用自增列对 UserID 或订单 ID 等字符串值创建字典表，将用户数据批量或者实时写入字典表即可生成字典，根据各种维度的条件对对应的 Bitmap 进行聚合运算；</span></p><pre><span><span style="color:#770088">CREATE</span><span style="color:#770088">TABLE</span><span style="color:#0055aa">`demo`</span>.<span style="color:#0055aa">`dictionary_tbl`</span><span style="color:#999977">(</span></span><span><span style="color:#0055aa">`user_id`</span><span>varchar</span><span style="color:#999977">(</span><span style="color:#116644">50</span><span style="color:#999977">)</span><span style="color:#770088">NOT</span><span style="color:#221199">NULL</span><span>,</span></span><span><span style="color:#0055aa">`aid`</span><span>BIGINT</span><span style="color:#770088">NOT</span><span style="color:#221199">NULL</span><span style="color:#770088">AUTO_INCREMENT</span></span><span><span style="color:#999977">)</span><span style="color:#770088">ENGINE</span><span style="color:#981a1a">=</span>OLAP</span><span><span style="color:#770088">UNIQUE</span><span style="color:#770088">KEY</span><span style="color:#999977">(</span><span style="color:#0055aa">`user_id`</span><span style="color:#999977">)</span></span><span>DISTRIBUTED <span style="color:#770088">BY</span><span style="color:#770088">HASH</span><span style="color:#999977">(</span><span style="color:#0055aa">`user_id`</span><span style="color:#999977">)</span> BUCKETS <span style="color:#116644">32</span></span><span>PROPERTIES <span style="color:#999977">(</span></span><span><span style="color:#aa1111">"replication_allocation"</span><span style="color:#981a1a">=</span><span style="color:#aa1111">"tag.location.default: 3"</span><span>,</span></span><span><span style="color:#aa1111">"enable_unique_key_merge_on_write"</span><span style="color:#981a1a">=</span><span style="color:#aa1111">"true"</span></span><span><span style="color:#999977">)</span><span>;</span></span></pre><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span><strong><span>查询分页</span></strong></span><span>：在页面展示数据时，往往需要做分页展示。传统的分页通常使用 SQL 中的 </span><span><code>limit</code></span><span>, </span><span><code>offset</code></span><span> + </span><span><code>order by</code></span><span> 进行查询。在进行深分页查询时，即使查询数据量较少、数据库仍需将全部数据读取至内存进行全量排序，查询效率比较低下。采取自增列可以为每一行生成唯一标识、查询时记住上一页最大唯一标识并用于下一页的查询条件，实现更高效的分页查询。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>以下表为例，unique_value 是一个唯一值：</span></p><pre><span><span style="color:#770088">CREATE</span><span style="color:#770088">TABLE</span><span style="color:#0055aa">`demo`</span>.<span style="color:#0055aa">`records_tbl2`</span><span style="color:#999977">(</span></span><span><span style="color:#0055aa">`key`</span><span>int</span><span style="color:#999977">(</span><span style="color:#116644">11</span><span style="color:#999977">)</span><span style="color:#770088">NOT</span><span style="color:#221199">NULL</span><span style="color:#770088">COMMENT</span><span style="color:#aa1111">""</span><span>,</span></span><span><span style="color:#0055aa">`name`</span><span>varchar</span><span style="color:#999977">(</span><span style="color:#116644">26</span><span style="color:#999977">)</span><span style="color:#770088">NOT</span><span style="color:#221199">NULL</span><span style="color:#770088">COMMENT</span><span style="color:#aa1111">""</span><span>,</span></span><span><span style="color:#0055aa">`address`</span><span>varchar</span><span style="color:#999977">(</span><span style="color:#116644">41</span><span style="color:#999977">)</span><span style="color:#770088">NOT</span><span style="color:#221199">NULL</span><span style="color:#770088">COMMENT</span><span style="color:#aa1111">""</span><span>,</span></span><span><span style="color:#0055aa">`city`</span><span>varchar</span><span style="color:#999977">(</span><span style="color:#116644">11</span><span style="color:#999977">)</span><span style="color:#770088">NOT</span><span style="color:#221199">NULL</span><span style="color:#770088">COMMENT</span><span style="color:#aa1111">""</span><span>,</span></span><span><span style="color:#0055aa">`nation`</span><span>varchar</span><span style="color:#999977">(</span><span style="color:#116644">16</span><span style="color:#999977">)</span><span style="color:#770088">NOT</span><span style="color:#221199">NULL</span><span style="color:#770088">COMMENT</span><span style="color:#aa1111">""</span><span>,</span></span><span><span style="color:#0055aa">`region`</span><span>varchar</span><span style="color:#999977">(</span><span style="color:#116644">13</span><span style="color:#999977">)</span><span style="color:#770088">NOT</span><span style="color:#221199">NULL</span><span style="color:#770088">COMMENT</span><span style="color:#aa1111">""</span><span>,</span></span><span><span style="color:#0055aa">`phone`</span><span>varchar</span><span style="color:#999977">(</span><span style="color:#116644">16</span><span style="color:#999977">)</span><span style="color:#770088">NOT</span><span style="color:#221199">NULL</span><span style="color:#770088">COMMENT</span><span style="color:#aa1111">""</span><span>,</span></span><span><span style="color:#0055aa">`mktsegment`</span><span>varchar</span><span style="color:#999977">(</span><span style="color:#116644">11</span><span style="color:#999977">)</span><span style="color:#770088">NOT</span><span style="color:#221199">NULL</span><span style="color:#770088">COMMENT</span><span style="color:#aa1111">""</span><span>,</span></span><span><span style="color:#0055aa">`unique_value`</span><span>BIGINT</span><span style="color:#770088">NOT</span><span style="color:#221199">NULL</span><span style="color:#770088">AUTO_INCREMENT</span></span><span><span style="color:#999977">)</span> DUPLICATE <span style="color:#770088">KEY</span><span style="color:#999977">(</span><span style="color:#0055aa">`key`</span><span>,</span><span style="color:#0055aa">`name`</span><span style="color:#999977">)</span><span style="color:#770088">CREATE</span><span style="color:#770088">TABLE</span> ipv4_test <span style="color:#999977">(</span></span><span><span style="color:#0055aa">`id`</span><span>int</span><span>,</span></span><span><span style="color:#0055aa">`ip_v4`</span> ipv4</span><span><span style="color:#999977">)</span><span style="color:#770088">ENGINE</span><span style="color:#981a1a">=</span>OLAP</span><span>DISTRIBUTED <span style="color:#770088">BY</span><span style="color:#770088">HASH</span><span style="color:#999977">(</span><span style="color:#0055aa">`id`</span><span style="color:#999977">)</span> BUCKETS <span style="color:#116644">4</span></span><span>PROPERTIES <span style="color:#999977">(</span></span><span><span style="color:#aa1111">"replication_allocation"</span><span style="color:#981a1a">=</span><span style="color:#aa1111">"tag.location.default: 1"</span></span><span><span style="color:#999977">)</span><span>;</span></span><span>DISTRIBUTED <span style="color:#770088">BY</span><span style="color:#770088">HASH</span><span style="color:#999977">(</span><span style="color:#0055aa">`key`</span><span style="color:#999977">)</span> BUCKETS <span style="color:#116644">10</span></span><span>PROPERTIES <span style="color:#999977">(</span></span><span><span style="color:#aa1111">"replication_num"</span><span style="color:#981a1a">=</span><span style="color:#aa1111">"3"</span></span><span><span style="color:#999977">)</span><span>;</span></span></pre><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>在分页展示中，每页展示 100 条数据，使用如下方式获取第一页的数据：</span></p><pre><span><span style="color:#770088">select</span><span style="color:#981a1a">*</span><span style="color:#770088">from</span> records_tbl2 <span style="color:#770088">order</span><span style="color:#770088">by</span> unique_value <span style="color:#770088">limit</span><span style="color:#116644">100</span><span>;</span></span></pre><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>通过程序记录下返回结果中</span><span><code>unique_value</code></span><span>中的最大值，假设为 99，则可用如下方式查询第二页的数据：</span></p><pre><span><span style="color:#770088">select</span><span style="color:#981a1a">*</span><span style="color:#770088">from</span> records_tbl2 <span style="color:#770088">where</span> unique_value <span style="color:#981a1a">&gt;</span><span style="color:#116644">99</span><span style="color:#770088">order</span><span style="color:#770088">by</span> unique_value <span style="color:#770088">limit</span><span style="color:#116644">100</span><span>;</span></span></pre><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>如果要直接查询一个靠后页面的内容，此时不方便直接获取之前页面数据中</span><span><code>unique_value</code></span><span>的最大值时，例如要直接获取第 101 页的内容，则可以使用如下方式进行查询</span></p><pre><span><span style="color:#770088">select</span><span style="color:#770088">key</span><span>,</span> name<span>,</span> address<span>,</span> city<span>,</span> nation<span>,</span> region<span>,</span> phone<span>,</span> mktsegment</span><span><span style="color:#770088">from</span> records_tbl2<span>,</span><span style="color:#999977">(</span><span style="color:#770088">select</span> unique_value <span style="color:#770088">as</span> max_value <span style="color:#770088">from</span> records_tbl2 <span style="color:#770088">order</span><span style="color:#770088">by</span> uniuqe_value <span style="color:#770088">limit</span><span style="color:#116644">1</span><span style="color:#770088">offset</span><span style="color:#116644">9999</span><span style="color:#999977">)</span><span style="color:#770088">as</span> previous_data</span><span><span style="color:#770088">where</span> records_tbl2<span style="color:#0055aa">.uniuqe_value</span><span style="color:#981a1a">&gt;</span> previous_data<span style="color:#0055aa">.max_value</span></span><span><span style="color:#770088">order</span><span style="color:#770088">by</span> unique_value <span style="color:#770088">limit</span><span style="color:#116644">100</span><span>;</span></span></pre><blockquote><p style="margin-left:.8em; margin-right:0"><span>演示 Demo：</span><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1VC411h7Gr%2F%3Fspm_id_from%3D333.999.0.0" target="_blank"><span>https://www.bilibili.com/video/BV1VC411h7Gr/?spm_id_from=333.999.0.0</span></a></span></p><p style="margin-left:0; margin-right:.8em"><span>参考文档：</span><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoris.apache.org%2Fzh-CN%2Fdocs%2Fadvanced%2Fauto-increment" target="_blank"><span>https://doris.apache.org/zh-CN/docs/advanced/auto-increment</span></a></span></p></blockquote><h3><span>自动分区 Auto Partition</span></h3><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>在 Apache Doris 2.1 版本之前一直采取手动分区的形式，用户需要提前把分区建立好，否则在导入数据过程中会因为找不到对应分区而出错。而自动分区功能支持了在导入数据过程中自动检测分区列的数据对应的分区是否存在。如果不存在，则会自动创建分区并正常进行导入。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>自动分区功能使用方式如下：</span></p><pre><span><span style="color:#770088">CREATE</span><span style="color:#770088">TABLE</span><span style="color:#0055aa">`DAILY_TRADE_VALUE`</span></span><span><span style="color:#999977">(</span></span><span><span style="color:#0055aa">`TRADE_DATE`</span>              datev2 <span style="color:#221199">NULL</span><span style="color:#770088">COMMENT</span><span style="color:#aa1111">'交易日期'</span><span>,</span></span><span><span style="color:#0055aa">`TRADE_ID`</span><span>varchar</span><span style="color:#999977">(</span><span style="color:#116644">40</span><span style="color:#999977">)</span><span style="color:#221199">NULL</span><span style="color:#770088">COMMENT</span><span style="color:#aa1111">'交易编号'</span><span>,</span></span><span>    ......</span><span><span style="color:#999977">)</span></span><span><span style="color:#770088">UNIQUE</span><span style="color:#770088">KEY</span><span style="color:#999977">(</span><span style="color:#0055aa">`TRADE_DATE`</span><span>,</span><span style="color:#0055aa">`TRADE_ID`</span><span style="color:#999977">)</span></span><span>AUTO <span style="color:#770088">PARTITION</span><span style="color:#770088">BY</span><span style="color:#770088">RANGE</span> date_trunc<span style="color:#999977">(</span><span style="color:#0055aa">`TRADE_DATE`</span><span>,</span><span style="color:#aa1111">'year'</span><span style="color:#999977">)</span></span><span><span style="color:#999977">(</span></span><span><span style="color:#999977">)</span></span><span>DISTRIBUTED <span style="color:#770088">BY</span><span style="color:#770088">HASH</span><span style="color:#999977">(</span><span style="color:#0055aa">`TRADE_DATE`</span><span style="color:#999977">)</span> BUCKETS <span style="color:#116644">10</span></span><span>PROPERTIES <span style="color:#999977">(</span></span><span><span style="color:#aa1111">"replication_num"</span><span style="color:#981a1a">=</span><span style="color:#aa1111">"1"</span></span><span><span style="color:#999977">)</span><span>;</span></span></pre><blockquote><p style="margin-left:.8em; margin-right:0"><span>注意事项</span></p><ol><li><p style="margin-left:.5rem; margin-right:0"><span>当前自动分区功能仅支持一个分区列，并且分区列必须为 NOT NULL 列；</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>自动分区当前已支持 Range 分区和 List 分区，其中 Range 分区函数仅支持 </span><span><code>date_trunc</code></span><span>、分区列仅支持 </span><span><code>DATE</code></span><span> 或者 </span><span><code>DATETIME</code></span><span> 格式；List 分区不支持函数调用，分区列支持 </span><span><code>BOOLEAN、TINYINT、SMALLINT、INT、BIGINT、LARGEINT、DATE、DATETIME、CHAR、VARCHAR</code></span><span> 数据类型，分区值为枚举值；</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>使用 List 分区时，一旦分区列的值当前不存在，自动分区功能都会为其创建一个独立的新分区。</span></p></li></ol></blockquote><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start">&nbsp;</p><blockquote><p style="margin-left:0; margin-right:0"><span>参考文档：</span><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoris.apache.org%2Fzh-CN%2Fdocs%2Fadvanced%2Fpartition%2Fauto-partition%2F" target="_blank"><span>https://doris.apache.org/zh-CN/docs/advanced/partition/auto-partition/</span></a></span></p></blockquote><h3><span>INSERT INTO SELECT 导入性能提升 100%</span></h3><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span><code>INSERT INTO…SELECT</code></span><span> 语句是 ETL 中最高频使用的操作之一，可以快速完成数据在库表之间的迁移、转换以及清洗合并，提升 </span><span><code>INSERT INTO…SELECT</code></span><span> 性能可以更好满足用户对数据快速提取和分析的需求。在 Apache Doris 2.0 版本中，我们引入了单副本导入功能（Single Replica Load）来减少多副本的重复写入和 Compaction 工作，但是导入性能还存在优化的空间。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>在 Apache Doris 2.1 版本中，为了进一步提升</span><span><code>INSERT INTO…SELECT</code></span><span> 性能，我们实现了 MemTable 前移以进一步减少导入过程中的开销，能在大多数场景中能在 2.0 版本的基础上取得 100% 的导入性能提升。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span><img alt="INSERT INTO SELECT 导入性能提升 100%" src="https://cdn.selectdb.com/static/2_1_doris_INSERT_INTO_SELECT_023366bc04.png" referrerpolicy="no-referrer"></span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>MemTable 前移和非前移的流程对比如上图所示，Sink 节点不再发送编码后的 Block，而是在本地处理完 MemTable 将生成的 Segment 数据发给下游节点，减少了数据多次编码的开销，同时使内存反压更准确和及时。此外，我们使用了 Streaming RPC 来替代了 Ping-pong RPC ，减少了数据传输过程中的等待。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>在此我们对 2.1 版本开启 MemTable 前移后的导入性能进行了测试，测试环境如下：1 FE+3 BE、每个节点 16C 64G、3 块高性能云盘（保证磁盘 I/O 不成为瓶颈）</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>可以看到在单副本场景下，2.1 版本开启 MemTable 前移后、导入耗时降低至 2.0 版本的 36%，三副本场景下导入耗时降低至 2.0 版本的 54%，整体导入性能提升超过 100%。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span><img alt="2.1-insert-into-table.png" src="https://cdn.selectdb.com/static/2_1_insert_into_table_68699e4d2c.png" referrerpolicy="no-referrer"></span></p><blockquote><p style="margin-left:0; margin-right:0"><span>备注：MemTable 前移在 2.1 版本中默认开启，用户无需修改原有的导入命令即可获得大幅性能提升。如果在使用过程中遇到问题、希望回退到原有的导入方式，可以在 MySQL 连接中设置环境变量 </span><span><code>enable_memtable_on_sink_node=false</code></span><span> 来关闭 MemTable 前移。</span></p></blockquote><h3><span>高频实时导入/服务端攒批 Group Commit</span></h3><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>在数据导入过程中，不同批次导入的数据都会写入内存表中，随后在磁盘中上形成一个个 RowSet 文件，每个 Rowset 文件对应一次数据导入版本。后台 Compacttion 进程会自动对多个版本的 RowSet 文件进行合并，将多个 RowSet 小文件合并成 RowSet 大文件以优化查询性能以及存储空间，而每一次的 Compaction 进程都会产生对 CPU、内存以及磁盘 IO 资源的消耗。在实际数据写入场景中，写入越实时高频、生成 RowSet 版本数越高、Compaction 所消耗的资源就越大。为了避免高频写入带来的过多资源消耗甚至 OOM，Apache Doris 引入了反压机制，即在版本过多的情况下会返回 -235 ，并对数据的版本数量进行控制。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span><img alt="高频实时导入/服务端攒批 Group Commit" src="https://cdn.selectdb.com/static/2_1_doris_group_commit_6aef2c3146.png" referrerpolicy="no-referrer"></span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>从 Apache Doris 2.1 版本开始，我们引入了服务端攒批 Group Commit，大幅强化了高并发、高频实时写入的能力。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>顾名思义， Group Commit 会把用户侧的多次写入在 BE 端进行积攒后批量提交。对于用户而言，无需控制写入程序的频率，Doris 会自动把用户提交的多次写入在内部合并为一个版本，从而可以大幅提升用户侧的写入频次。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span><img alt="高频实时导入/服务端攒批 Group Commit" src="https://cdn.selectdb.com/static/2_1_doris_group_commit_2_fb66f95a0f.png" referrerpolicy="no-referrer"></span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>当前 Group Commit 已经支持同步模式 </span><span><code>sync_mode</code></span><span> 和异步模式 </span><span><code>async_mode</code></span><span>。同步模式下会将多个导入在一个事务提交，事务提交后导入返回，在导入完成后数据立即可见。异步模式下数据会先写入 WAL，Apache Doris 会根据负载和表的</span><span><code>group_commit_interval</code></span><span>属性异步提交数据，提交之后数据可见。为了防止 WAL 占用较大的磁盘空间，单次导入数据量较大时，会自动切换为</span><span><code>sync_mode</code></span><span>。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>我们分别采取 JDBC 和 Stream Load 两种方式对高并发写入场景下 Group Commit（异步模式 </span><span><code>async_mode</code></span><span>）的写入性能进行了测试，测试报告如下：</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span><strong><span>JDBC 写入</span></strong></span><span>：</span></p><pre><code>&lt;ul style="margin-left:0; margin-right:0"&gt;
	&lt;li&gt;
	&lt;p style="margin-left:.5rem; margin-right:0"&gt;&lt;span&gt;集群配置为 1FE 1BE，数据集为 TPC-H SF10 Lineitem 表，总共约 22GB、1.8 亿行；&lt;/span&gt;
	&lt;/li&gt;
	&lt;li&gt;
	&lt;p style="margin-left:.5rem; margin-right:0"&gt;&lt;span&gt;经测试，在并发数 20、单次 Insert 数据行数 100 行下，导入效率达到 10.69w 行/秒、导入吞吐达 11.46 MB/秒， BE 节点的 CPU 使用率稳定保持在 10%-20%；&lt;/span&gt;
	&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p style="margin-left:.5rem; margin-right:0"&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;Stream Load 写入&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;：&lt;/span&gt;

&lt;ul style="margin-left:0; margin-right:0"&gt;
	&lt;li&gt;
	&lt;p style="margin-left:.5rem; margin-right:0"&gt;&lt;span&gt;集群配置为 1FE 3BE，数据集为 httplogs、总共 31GB、2.47 亿行。在未开启 Group Commit 和，开启 Group Commit 的异步模式时，通过设置不同的单并发数据量和并发数，对比数据的写入性能。&lt;/span&gt;
	&lt;/li&gt;
	&lt;li&gt;
	&lt;p style="margin-left:.5rem; margin-right:0"&gt;&lt;span&gt;经测试，在并发数 10、单次导入数据量 1 MB 下，未开启 Group Commit 时会提示 -235 错误，开启后可稳定运行且导入效率达 81w 行/秒、导入吞吐达 104 MB/秒；在并发数 10、单次导入数据量 10MB 下，开启 Group Commit 后耗时降低至原先的 55%、导入吞吐提升 79%；&lt;/span&gt;
	&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
</code></pre></li></ul><blockquote><p style="margin-left:.8em; margin-right:0"><span>演示 Demo：</span><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1um411o7Ha%2F%3Fspm_id_from%3D333.999.0.0" target="_blank"><span>https://www.bilibili.com/video/BV1um411o7Ha/?spm_id_from=333.999.0.0</span></a></span></p><p style="margin-left:0; margin-right:.8em"><span>参考文档和完整测试报告：</span><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoris.apache.org%2Fzh-CN%2Fdocs%2Fdata-operate%2Fimport%2Fimport-way%2Fgroup-commit-manual%2F" target="_blank"><span>https://doris.apache.org/zh-CN/docs/data-operate/import/import-way/group-commit-manual/</span></a></span></p></blockquote><h2><span>半结构化数据分析</span></h2><h3><span>Variant 数据类型</span></h3><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>过去 Apache Doris 在应对复杂半结构化数据的存储和分析处理时，一般有两种方式：</span></p><ol><li><p style="margin-left:.5rem; margin-right:0"><span>一种方式是用户提前预定好表结构，加工成宽表，在数据进入前将数据解析好，这种方案的优点是写入性能好，查询也不需要解析，但是使用不够灵活、对表结构发起变更增加运维、研发的成本。</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>使用 Doris 中的 JSON 类型、或是存成 JSON String，将原始 JSON 数据不经过加工直接入库， 查询的时候，用解析函数处理。优点是不需要额外的数据加工、预定义表结构拍平嵌套结构，运维、研发方便，但存在解析性能以及数据读取效率低下的问题。</span></p></li></ol><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>为了解决上述半结构化数据的挑战，在 Apache Doris 2.1 版本中我们引入全新的数据类型</span><span><code>VARIANT</code></span><span>，支持存储半结构化数据、允许存储包含不同数据类型（如整数、字符串、布尔值等）的复杂数据结构，无需在表结构中提前定义具体的列，其存储和查询与传统的 String、JSONB 等行存类型发生了本质的改变，期望其作为半结构化数据首选数据类型，给用户带来更加高效的数据处理机制。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>Variant 类型特别适用于处理结构可能随时会发生变化的复杂嵌套结构。在写入过程中，Variant 类型可以自动根据列的结构和类型推断列信息，并将其合并到现有表的 Schema 中，将 JSON 键及其对应的值灵活存储为动态子列。同时，一个表可以同时包含灵活的 Variant 对象列和预先定义类型的更严格的静态列，从而在数据存储、查询上提供了更大的灵活性。除此之外，Variant 类型能够与 Doris 核心特性融合，利用列式存储、向量化引擎、优化器等技术，为用户带来极高性价比的查询性能及存储性能。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span><strong><span>使用方式如下：</span></strong></span></p><pre><span><span style="color:#aa5500">-- 无索引</span></span><span><span style="color:#770088">CREATE</span><span style="color:#770088">TABLE</span><span style="color:#770088">IF</span><span style="color:#770088">NOT</span><span style="color:#770088">EXISTS</span> $<span style="color:#999977">{</span><span style="color:#770088">table_name</span><span style="color:#999977">}</span><span style="color:#999977">(</span></span><span>    k <span>BIGINT</span><span>,</span></span><span>    v VARIANT</span><span><span style="color:#999977">)</span></span><span>table_properties<span>;</span></span><span><span>​</span></span><span><span style="color:#aa5500">-- 在 v 列创建索引，可选指定分词方式，默认不分词</span></span><span><span style="color:#770088">CREATE</span><span style="color:#770088">TABLE</span><span style="color:#770088">IF</span><span style="color:#770088">NOT</span><span style="color:#770088">EXISTS</span> $<span style="color:#999977">{</span><span style="color:#770088">table_name</span><span style="color:#999977">}</span><span style="color:#999977">(</span></span><span>    k <span>BIGINT</span><span>,</span></span><span>    v VARIANT<span>,</span></span><span><span style="color:#770088">INDEX</span> idx_var<span style="color:#999977">(</span>v<span style="color:#999977">)</span><span style="color:#770088">USING</span> INVERTED <span style="color:#999977">[</span>PROPERTIES<span style="color:#999977">(</span><span style="color:#aa1111">"parser"</span><span style="color:#981a1a">=</span><span style="color:#aa1111">"english|unicode|chinese"</span><span style="color:#999977">)]</span><span style="color:#999977">[</span><span style="color:#770088">COMMENT</span><span style="color:#aa1111">'your comment'</span><span style="color:#999977">]</span></span><span><span style="color:#999977">)</span></span><span>table_properties<span>;</span></span><span><span>​</span></span><span><span style="color:#aa5500">-- 查询，使用`[]`形式访问子列</span></span><span><span style="color:#770088">SELECT</span> v<span style="color:#999977">[</span><span style="color:#aa1111">"properties"</span><span style="color:#999977">][</span><span style="color:#aa1111">"title"</span><span style="color:#999977">]</span><span style="color:#770088">from</span> $<span style="color:#999977">{</span><span style="color:#770088">table_name</span><span style="color:#999977">}</span></span></pre><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span><strong><span>相比 JSON 类型的优势</span></strong></span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>在 Apache Doris 中 JSON 类型是以二进制 JSONB 格式进行存储，整行 JSON 以行存的形式存储到 Segment 文件中。而 VARIANT 类型在写入的时候进行类型推断，将写入的 JSON 列存化，查询不需要进行解析。此外 Variant 类型针对稀疏场景的 JSON 进行优化，只提取频繁出现的列，稀疏的列会以单独的格式进行存储。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>为了验证引入 Variant 数据类型后在存储以及查询上所带来的优势，我们基于 ClickBench 测试数据集进行了存储空间和查询性能的测试。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>在存储空间方面，相同数据采取 Variant 类型，所占用的存储空间跟预定义的静态列的存储空间持平，相比于 JSON 类型则减少了约 65%。在一些低基数场景，由于列存的优势，存储资源的成本效应会更加明显。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span><img alt="2.1-comparied-to-Json.png" src="https://cdn.selectdb.com/static/2_1_comparied_to_Json_de6f7612dc.png" referrerpolicy="no-referrer"></span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>在查询性能方面，如下表可知，Variant 类型与预定义静态列的查询性能差异在 10% 左右；</span><span><strong><span>而对于 JSON 类型来说，Variant 类型的热查询速度相比于 JSON 类型提升了 8 倍以上，冷查询有着数量级的提升。</span></strong></span><span>（由于 I/O 原因，JSONB 类型的冷查询大部分超时）。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span><img alt="2.1-comparied-to-Json-2.png" src="https://cdn.selectdb.com/static/2_1_comparied_to_Json_2_edcac40ac1.png" referrerpolicy="no-referrer"></span></p><blockquote><p style="margin-left:.8em; margin-right:0"><span><strong><span>注意事项：</span></strong></span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span>目前 Variant 暂不支持 Aggregate 模型，也不支持将 Variant 类型作为 Unique 或 Duplicate 模型的主键及排序键；</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>推荐使用 RANDOM 模式或者开启 Group Commit 导入，写入性能更高效；</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>日期、Decimal 等非标准 JSON 类型尽可能提取出来作为静态字段，性能更好；</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>二维及其以上的数组以及数组嵌套对象，列存化会被存成 JSONB 编码，性能不如原生数组；</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>查询过滤、聚合需要带 Cast，存储层会根据存储类型和 Cast 目标类型来提示（hint）存储引擎谓词下推，加速查询。</span></p></li></ul></blockquote><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start">&nbsp;</p><blockquote><p style="margin-left:.8em; margin-right:0"><span>演示 Demo: </span><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV13u4m1g7ra%2F%3Fspm_id_from%3D333.999.0.0" target="_blank"><span>https://www.bilibili.com/video/BV13u4m1g7ra/?spm_id_from=333.999.0.0</span></a></span></p><p style="margin-left:0; margin-right:.8em"><span>参考文档：</span><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoris.apache.org%2Fzh-CN%2Fdocs%2Fsql-manual%2Fsql-reference%2FData-Types%2FVARIANT" target="_blank"><span>https://doris.apache.org/zh-CN/docs/sql-manual/sql-reference/Data-Types/VARIANT</span></a></span></p></blockquote><h3><span>IP 数据类型 </span></h3><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>在网络流量监控的场景中，IP 地址是一个常见的字段，大量的统计分析基于 IP 地址进行。在 Apache Doris 2.1 版本中，将原生支持 IPv4 和 IPv6 数据类型，用高效的二进制形式存储 IP 数据。相比于使用明文的 IP String，内存和存储空间可节省 60% 左右。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>同时基于 IP 类型，我们增加了常用的 20 多个 IP 处理函数，如：</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span>IPV4_NUM_TO_STRING：将类型为 Int16、Int32、Int64 且大端表示的 IPv4 的地址，返回相应 IPv4 的字符串表现形式；</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>IPV4_CIDR_TO_RANGE：接收一个 IPv4 和一个包含 CIDR 的 Int16 值，返回一个结构体，其中包含两个 IPv4 字段分别表示子网的较低范围（min）和较高范围（max）；</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>INET_ATON：获取包含 IPv4 地址的字符串，格式为 A.B.C.D（点分隔的十进制数字）</span></p></li></ul><blockquote><p style="margin-left:0; margin-right:0"><span>参考文档： </span><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoris.apache.org%2Fzh-CN%2Fdocs%2Fsql-manual%2Fsql-reference%2FData-Types%2FIPV6" target="_blank"><span>https://doris.apache.org/zh-CN/docs/sql-manual/sql-reference/Data-Types/IPV6</span></a></span></p></blockquote><h3><span>复杂数据类型分析函数完善</span></h3><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>在 Apache Doris 2.1 版本中我们丰富了行转列和 IN 能支持的数据类型。如：</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span><code>explode_map</code></span><span>：支持 MAP 类型数据行转列（仅在新优化器中实现）</span></p></li></ul><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>支持 Map 类型 Explode 行转列，将 Map 字段的 N 个 Key Value 对展开成 N 行，每行的 Map 字段替换成 Key 和 Value 两个字段。</span><span><code>explode_map</code></span><span> 需要和 Lateral View 一起使用，可以接多个 Lateral View, 结果则是每个 </span><span><code>explode_map</code></span><span> 之后的行数以笛卡尔积的形式展示。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>具体使用如下:</span></p><pre><span><span style="color:#aa5500">-- 建表语句</span></span><span><span style="color:#770088">CREATE</span><span style="color:#770088">TABLE</span><span style="color:#0055aa">`sdu`</span><span style="color:#999977">(</span></span><span><span style="color:#0055aa">`id`</span><span>INT</span><span style="color:#221199">NULL</span><span>,</span></span><span><span style="color:#0055aa">`name`</span><span>TEXT</span><span style="color:#221199">NULL</span><span>,</span></span><span><span style="color:#0055aa">`score`</span> MAP<span style="color:#981a1a">&lt;</span><span>TEXT</span><span>,</span><span>INT</span><span style="color:#981a1a">&gt;</span><span style="color:#221199">NULL</span></span><span><span style="color:#999977">)</span><span style="color:#770088">ENGINE</span><span style="color:#981a1a">=</span>OLAP</span><span>DUPLICATE <span style="color:#770088">KEY</span><span style="color:#999977">(</span><span style="color:#0055aa">`id`</span><span style="color:#999977">)</span></span><span><span style="color:#770088">COMMENT</span><span style="color:#aa1111">'OLAP'</span></span><span>DISTRIBUTED <span style="color:#770088">BY</span><span style="color:#770088">HASH</span><span style="color:#999977">(</span><span style="color:#0055aa">`id`</span><span style="color:#999977">)</span> BUCKETS <span style="color:#116644">1</span></span><span>PROPERTIES <span style="color:#999977">(</span></span><span><span style="color:#aa1111">"replication_allocation"</span><span style="color:#981a1a">=</span><span style="color:#aa1111">"tag.location.default: 1"</span></span><span><span style="color:#999977">)</span><span>;</span></span><span><span>​</span></span><span><span style="color:#aa5500">-- insert 数据</span></span><span><span style="color:#770088">insert</span><span style="color:#770088">into</span> sdu <span style="color:#770088">values</span><span style="color:#999977">(</span><span style="color:#116644">0</span><span>,</span><span style="color:#aa1111">"zhangsan"</span><span>,</span><span style="color:#999977">{</span><span style="color:#aa1111">"Chinese"</span><span>:</span><span style="color:#aa1111">"80"</span><span>,</span><span style="color:#aa1111">"Math"</span><span>:</span><span style="color:#aa1111">"60"</span><span>,</span><span style="color:#aa1111">"English"</span><span>:</span><span style="color:#aa1111">"90"</span><span style="color:#999977">})</span><span>;</span></span><span><span style="color:#770088">insert</span><span style="color:#770088">into</span> sdu <span style="color:#770088">values</span><span style="color:#999977">(</span><span style="color:#116644">1</span><span>,</span><span style="color:#aa1111">"lisi"</span><span>,</span><span style="color:#999977">{</span><span style="color:#aa1111">"null"</span><span>:</span><span style="color:#221199">null</span><span style="color:#999977">})</span><span>;</span></span><span><span style="color:#770088">insert</span><span style="color:#770088">into</span> sdu <span style="color:#770088">values</span><span style="color:#999977">(</span><span style="color:#116644">2</span><span>,</span><span style="color:#aa1111">"wangwu"</span><span>,</span><span style="color:#999977">{</span><span style="color:#aa1111">"Chinese"</span><span>:</span><span style="color:#aa1111">"88"</span><span>,</span><span style="color:#aa1111">"Math"</span><span>:</span><span style="color:#aa1111">"90"</span><span>,</span><span style="color:#aa1111">"English"</span><span>:</span><span style="color:#aa1111">"96"</span><span style="color:#999977">})</span><span>;</span></span><span><span style="color:#770088">insert</span><span style="color:#770088">into</span> sdu <span style="color:#770088">values</span><span style="color:#999977">(</span><span style="color:#116644">3</span><span>,</span><span style="color:#aa1111">"lisi2"</span><span>,</span><span style="color:#999977">{</span><span style="color:#221199">null</span><span>:</span><span style="color:#221199">null</span><span style="color:#999977">})</span><span>;</span></span><span><span style="color:#770088">insert</span><span style="color:#770088">into</span> sdu <span style="color:#770088">values</span><span style="color:#999977">(</span><span style="color:#116644">4</span><span>,</span><span style="color:#aa1111">"amory"</span><span>,</span><span style="color:#221199">NULL</span><span style="color:#999977">)</span><span>;</span></span><span><span>​</span></span><span>mysql<span style="color:#981a1a">&gt;</span><span style="color:#770088">select</span> name<span>,</span> course_0<span>,</span> score_0 <span style="color:#770088">from</span> sdu lateral <span style="color:#770088">view</span> explode_map<span style="color:#999977">(</span>score<span style="color:#999977">)</span> tmp <span style="color:#770088">as</span> course_0<span>,</span>score_0<span>;</span></span><span><span style="color:#981a1a">+----------+----------+---------+</span></span><span><span style="color:#981a1a">|</span> name     <span style="color:#981a1a">|</span> course_0 <span style="color:#981a1a">|</span> score_0 <span style="color:#981a1a">|</span></span><span><span style="color:#981a1a">+----------+----------+---------+</span></span><span><span style="color:#981a1a">|</span> zhangsan <span style="color:#981a1a">|</span> Chinese  <span style="color:#981a1a">|</span><span style="color:#116644">80</span><span style="color:#981a1a">|</span></span><span><span style="color:#981a1a">|</span> zhangsan <span style="color:#981a1a">|</span> Math     <span style="color:#981a1a">|</span><span style="color:#116644">60</span><span style="color:#981a1a">|</span></span><span><span style="color:#981a1a">|</span> zhangsan <span style="color:#981a1a">|</span> English  <span style="color:#981a1a">|</span><span style="color:#116644">90</span><span style="color:#981a1a">|</span></span><span><span style="color:#981a1a">|</span> lisi     <span style="color:#981a1a">|</span><span style="color:#221199">null</span><span style="color:#981a1a">|</span><span style="color:#221199">NULL</span><span style="color:#981a1a">|</span></span><span><span style="color:#981a1a">|</span> wangwu   <span style="color:#981a1a">|</span> Chinese  <span style="color:#981a1a">|</span><span style="color:#116644">88</span><span style="color:#981a1a">|</span></span><span><span style="color:#981a1a">|</span> wangwu   <span style="color:#981a1a">|</span> Math     <span style="color:#981a1a">|</span><span style="color:#116644">90</span><span style="color:#981a1a">|</span></span><span><span style="color:#981a1a">|</span> wangwu   <span style="color:#981a1a">|</span> English  <span style="color:#981a1a">|</span><span style="color:#116644">96</span><span style="color:#981a1a">|</span></span><span><span style="color:#981a1a">|</span> lisi2    <span style="color:#981a1a">|</span><span style="color:#221199">NULL</span><span style="color:#981a1a">|</span><span style="color:#221199">NULL</span><span style="color:#981a1a">|</span></span><span><span style="color:#981a1a">+----------+----------+---------+</span></span><span><span>​</span></span><span>mysql<span style="color:#981a1a">&gt;</span><span style="color:#770088">select</span> name<span>,</span> course_0<span>,</span> score_0<span>,</span> course_1<span>,</span> score_1 <span style="color:#770088">from</span> sdu lateral <span style="color:#770088">view</span> explode_map<span style="color:#999977">(</span>score<span style="color:#999977">)</span> tmp <span style="color:#770088">as</span> course_0<span>,</span>score_0 lateral <span style="color:#770088">view</span> explode_map<span style="color:#999977">(</span>score<span style="color:#999977">)</span> tmp1 <span style="color:#770088">as</span> course_1<span>,</span>score_1<span>;</span></span><span><span style="color:#981a1a">+----------+----------+---------+----------+---------+</span></span><span><span style="color:#981a1a">|</span> name     <span style="color:#981a1a">|</span> course_0 <span style="color:#981a1a">|</span> score_0 <span style="color:#981a1a">|</span> course_1 <span style="color:#981a1a">|</span> score_1 <span style="color:#981a1a">|</span></span><span><span style="color:#981a1a">+----------+----------+---------+----------+---------+</span></span><span><span style="color:#981a1a">|</span> zhangsan <span style="color:#981a1a">|</span> Chinese  <span style="color:#981a1a">|</span><span style="color:#116644">80</span><span style="color:#981a1a">|</span> Chinese  <span style="color:#981a1a">|</span><span style="color:#116644">80</span><span style="color:#981a1a">|</span></span><span><span style="color:#981a1a">|</span> zhangsan <span style="color:#981a1a">|</span> Chinese  <span style="color:#981a1a">|</span><span style="color:#116644">80</span><span style="color:#981a1a">|</span> Math     <span style="color:#981a1a">|</span><span style="color:#116644">60</span><span style="color:#981a1a">|</span></span><span><span style="color:#981a1a">|</span> zhangsan <span style="color:#981a1a">|</span> Chinese  <span style="color:#981a1a">|</span><span style="color:#116644">80</span><span style="color:#981a1a">|</span> English  <span style="color:#981a1a">|</span><span style="color:#116644">90</span><span style="color:#981a1a">|</span></span><span><span style="color:#981a1a">|</span> zhangsan <span style="color:#981a1a">|</span> Math     <span style="color:#981a1a">|</span><span style="color:#116644">60</span><span style="color:#981a1a">|</span> Chinese  <span style="color:#981a1a">|</span><span style="color:#116644">80</span><span style="color:#981a1a">|</span></span><span><span style="color:#981a1a">|</span> zhangsan <span style="color:#981a1a">|</span> Math     <span style="color:#981a1a">|</span><span style="color:#116644">60</span><span style="color:#981a1a">|</span> Math     <span style="color:#981a1a">|</span><span style="color:#116644">60</span><span style="color:#981a1a">|</span></span><span><span style="color:#981a1a">|</span> zhangsan <span style="color:#981a1a">|</span> Math     <span style="color:#981a1a">|</span><span style="color:#116644">60</span><span style="color:#981a1a">|</span> English  <span style="color:#981a1a">|</span><span style="color:#116644">90</span><span style="color:#981a1a">|</span></span><span><span style="color:#981a1a">|</span> zhangsan <span style="color:#981a1a">|</span> English  <span style="color:#981a1a">|</span><span style="color:#116644">90</span><span style="color:#981a1a">|</span> Chinese  <span style="color:#981a1a">|</span><span style="color:#116644">80</span><span style="color:#981a1a">|</span></span><span><span style="color:#981a1a">|</span> zhangsan <span style="color:#981a1a">|</span> English  <span style="color:#981a1a">|</span><span style="color:#116644">90</span><span style="color:#981a1a">|</span> Math     <span style="color:#981a1a">|</span><span style="color:#116644">60</span><span style="color:#981a1a">|</span></span><span><span style="color:#981a1a">|</span> zhangsan <span style="color:#981a1a">|</span> English  <span style="color:#981a1a">|</span><span style="color:#116644">90</span><span style="color:#981a1a">|</span> English  <span style="color:#981a1a">|</span><span style="color:#116644">90</span><span style="color:#981a1a">|</span></span><span><span style="color:#981a1a">|</span> lisi     <span style="color:#981a1a">|</span><span style="color:#221199">null</span><span style="color:#981a1a">|</span><span style="color:#221199">NULL</span><span style="color:#981a1a">|</span><span style="color:#221199">null</span><span style="color:#981a1a">|</span><span style="color:#221199">NULL</span><span style="color:#981a1a">|</span></span><span><span style="color:#981a1a">|</span> wangwu   <span style="color:#981a1a">|</span> Chinese  <span style="color:#981a1a">|</span><span style="color:#116644">88</span><span style="color:#981a1a">|</span> Chinese  <span style="color:#981a1a">|</span><span style="color:#116644">88</span><span style="color:#981a1a">|</span></span><span><span style="color:#981a1a">|</span> wangwu   <span style="color:#981a1a">|</span> Chinese  <span style="color:#981a1a">|</span><span style="color:#116644">88</span><span style="color:#981a1a">|</span> Math     <span style="color:#981a1a">|</span><span style="color:#116644">90</span><span style="color:#981a1a">|</span></span><span><span style="color:#981a1a">|</span> wangwu   <span style="color:#981a1a">|</span> Chinese  <span style="color:#981a1a">|</span><span style="color:#116644">88</span><span style="color:#981a1a">|</span> English  <span style="color:#981a1a">|</span><span style="color:#116644">96</span><span style="color:#981a1a">|</span></span><span><span style="color:#981a1a">|</span> wangwu   <span style="color:#981a1a">|</span> Math     <span style="color:#981a1a">|</span><span style="color:#116644">90</span><span style="color:#981a1a">|</span> Chinese  <span style="color:#981a1a">|</span><span style="color:#116644">88</span><span style="color:#981a1a">|</span></span><span><span style="color:#981a1a">|</span> wangwu   <span style="color:#981a1a">|</span> Math     <span style="color:#981a1a">|</span><span style="color:#116644">90</span><span style="color:#981a1a">|</span> Math     <span style="color:#981a1a">|</span><span style="color:#116644">90</span><span style="color:#981a1a">|</span></span><span><span style="color:#981a1a">|</span> wangwu   <span style="color:#981a1a">|</span> Math     <span style="color:#981a1a">|</span><span style="color:#116644">90</span><span style="color:#981a1a">|</span> English  <span style="color:#981a1a">|</span><span style="color:#116644">96</span><span style="color:#981a1a">|</span></span><span><span style="color:#981a1a">|</span> wangwu   <span style="color:#981a1a">|</span> English  <span style="color:#981a1a">|</span><span style="color:#116644">96</span><span style="color:#981a1a">|</span> Chinese  <span style="color:#981a1a">|</span><span style="color:#116644">88</span><span style="color:#981a1a">|</span></span><span><span style="color:#981a1a">|</span> wangwu   <span style="color:#981a1a">|</span> English  <span style="color:#981a1a">|</span><span style="color:#116644">96</span><span style="color:#981a1a">|</span> Math     <span style="color:#981a1a">|</span><span style="color:#116644">90</span><span style="color:#981a1a">|</span></span><span><span style="color:#981a1a">|</span> wangwu   <span style="color:#981a1a">|</span> English  <span style="color:#981a1a">|</span><span style="color:#116644">96</span><span style="color:#981a1a">|</span> English  <span style="color:#981a1a">|</span><span style="color:#116644">96</span><span style="color:#981a1a">|</span></span><span><span style="color:#981a1a">|</span> lisi2    <span style="color:#981a1a">|</span><span style="color:#221199">NULL</span><span style="color:#981a1a">|</span><span style="color:#221199">NULL</span><span style="color:#981a1a">|</span><span style="color:#221199">NULL</span><span style="color:#981a1a">|</span><span style="color:#221199">NULL</span><span style="color:#981a1a">|</span></span><span><span style="color:#981a1a">+----------+----------+---------+----------+---------+</span></span></pre><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span><code>explode_map_outer</code></span><span> 和 </span><span><code>explode_outer</code></span><span> 的目的一致，可以将当前 MAP 类型的列中是 NULL 的数据行展示出来。</span></p><pre><span>mysql<span style="color:#981a1a">&gt;</span><span style="color:#770088">select</span> name<span>,</span> course_0<span>,</span> score_0 <span style="color:#770088">from</span> sdu lateral <span style="color:#770088">view</span> explode_map_outer<span style="color:#999977">(</span>score<span style="color:#999977">)</span> tmp <span style="color:#770088">as</span> course_0<span>,</span>score_0<span>;</span></span><span><span style="color:#981a1a">+----------+----------+---------+</span></span><span><span style="color:#981a1a">|</span> name     <span style="color:#981a1a">|</span> course_0 <span style="color:#981a1a">|</span> score_0 <span style="color:#981a1a">|</span></span><span><span style="color:#981a1a">+----------+----------+---------+</span></span><span><span style="color:#981a1a">|</span> zhangsan <span style="color:#981a1a">|</span> Chinese  <span style="color:#981a1a">|</span><span style="color:#116644">80</span><span style="color:#981a1a">|</span></span><span><span style="color:#981a1a">|</span> zhangsan <span style="color:#981a1a">|</span> Math     <span style="color:#981a1a">|</span><span style="color:#116644">60</span><span style="color:#981a1a">|</span></span><span><span style="color:#981a1a">|</span> zhangsan <span style="color:#981a1a">|</span> English  <span style="color:#981a1a">|</span><span style="color:#116644">90</span><span style="color:#981a1a">|</span></span><span><span style="color:#981a1a">|</span> lisi     <span style="color:#981a1a">|</span><span style="color:#221199">null</span><span style="color:#981a1a">|</span><span style="color:#221199">NULL</span><span style="color:#981a1a">|</span></span><span><span style="color:#981a1a">|</span> wangwu   <span style="color:#981a1a">|</span> Chinese  <span style="color:#981a1a">|</span><span style="color:#116644">88</span><span style="color:#981a1a">|</span></span><span><span style="color:#981a1a">|</span> wangwu   <span style="color:#981a1a">|</span> Math     <span style="color:#981a1a">|</span><span style="color:#116644">90</span><span style="color:#981a1a">|</span></span><span><span style="color:#981a1a">|</span> wangwu   <span style="color:#981a1a">|</span> English  <span style="color:#981a1a">|</span><span style="color:#116644">96</span><span style="color:#981a1a">|</span></span><span><span style="color:#981a1a">|</span> lisi2    <span style="color:#981a1a">|</span><span style="color:#221199">NULL</span><span style="color:#981a1a">|</span><span style="color:#221199">NULL</span><span style="color:#981a1a">|</span></span><span><span style="color:#981a1a">|</span> amory    <span style="color:#981a1a">|</span><span style="color:#221199">NULL</span><span style="color:#981a1a">|</span><span style="color:#221199">NULL</span><span style="color:#981a1a">|</span></span><span><span style="color:#981a1a">+----------+----------+---------+</span></span></pre><ul><li><p style="margin-left:.5rem; margin-right:0"><span>增加 IN 谓词支持 Struct 类型数据的能力（仅在新优化器中实现）</span></p></li></ul><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>IN 谓词的左参数支持 </span><span><code>struct() function</code></span><span> 构建的 Struct 类型的数据，也支持 Select 某表中某一列是 Struct 类型的数据，右边的参数支持一个由 </span><span><code>struct() function</code></span><span> 构建的 Struct 类型的数据的数组。IN 谓词支持 Struct 类型可以有效替换 Where 条件中如果需要大量的 or 连词连接的表达式，如： </span><span><code>(a = 1 and b = '2') or (a = 1 and b = '3') or (...)</code></span><span> 可以通过 IN 实现为 </span><span><code>struct(a,b) in (struct(1, '2'), struct(1, '3'), ...)</code></span></p><pre><span>mysql<span style="color:#981a1a">&gt;</span><span style="color:#770088">select</span> struct<span style="color:#999977">(</span><span style="color:#116644">1</span><span>,</span><span style="color:#aa1111">"2"</span><span style="color:#999977">)</span><span style="color:#770088">in</span><span style="color:#999977">(</span>struct<span style="color:#999977">(</span><span style="color:#116644">1</span><span>,</span><span style="color:#116644">3</span><span style="color:#999977">)</span><span>,</span> struct<span style="color:#999977">(</span><span style="color:#116644">1</span><span>,</span><span style="color:#aa1111">"2"</span><span style="color:#999977">)</span><span>,</span> struct<span style="color:#999977">(</span><span style="color:#116644">1</span><span>,</span><span style="color:#116644">1</span><span style="color:#999977">)</span><span>,</span><span style="color:#221199">null</span><span style="color:#999977">)</span><span>;</span></span><span><span style="color:#981a1a">+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+</span></span><span><span style="color:#981a1a">|</span> cast<span style="color:#999977">(</span>struct<span style="color:#999977">(</span><span style="color:#116644">1</span><span>,</span><span style="color:#aa1111">'2'</span><span style="color:#999977">)</span><span style="color:#770088">as</span> STRUCT<span style="color:#981a1a">&lt;</span>col1<span>:</span><span>TINYINT</span><span>,</span>col2<span>:</span><span>TEXT</span><span style="color:#981a1a">&gt;</span><span style="color:#999977">)</span><span style="color:#770088">IN</span><span style="color:#999977">(</span><span style="color:#221199">NULL</span><span>,</span> cast<span style="color:#999977">(</span>struct<span style="color:#999977">(</span><span style="color:#116644">1</span><span>,</span><span style="color:#aa1111">'2'</span><span style="color:#999977">)</span><span style="color:#770088">as</span> STRUCT<span style="color:#981a1a">&lt;</span>col1<span>:</span><span>TINYINT</span><span>,</span>col2<span>:</span><span>TEXT</span><span style="color:#981a1a">&gt;</span><span style="color:#999977">)</span><span>,</span> cast<span style="color:#999977">(</span>struct<span style="color:#999977">(</span><span style="color:#116644">1</span><span>,</span><span style="color:#116644">1</span><span style="color:#999977">)</span><span style="color:#770088">as</span> STRUCT<span style="color:#981a1a">&lt;</span>col1<span>:</span><span>TINYINT</span><span>,</span>col2<span>:</span><span>TEXT</span><span style="color:#981a1a">&gt;</span><span style="color:#999977">)</span><span>,</span> cast<span style="color:#999977">(</span>struct<span style="color:#999977">(</span><span style="color:#116644">1</span><span>,</span><span style="color:#116644">3</span><span style="color:#999977">)</span><span style="color:#770088">as</span> STRUCT<span style="color:#981a1a">&lt;</span>col1<span>:</span><span>TINYINT</span><span>,</span>col2<span>:</span><span>TEXT</span><span style="color:#981a1a">&gt;</span><span style="color:#999977">))</span><span style="color:#981a1a">|</span></span><span><span style="color:#981a1a">+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+</span></span><span><span style="color:#981a1a">|</span><span style="color:#116644">1</span><span style="color:#981a1a">|</span></span><span><span style="color:#981a1a">+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+</span></span><span>mysql<span style="color:#981a1a">&gt;</span><span style="color:#770088">select</span> struct<span style="color:#999977">(</span><span style="color:#116644">1</span><span>,</span><span style="color:#aa1111">"2"</span><span style="color:#999977">)</span><span style="color:#770088">not</span><span style="color:#770088">in</span><span style="color:#999977">(</span>struct<span style="color:#999977">(</span><span style="color:#116644">1</span><span>,</span><span style="color:#116644">3</span><span style="color:#999977">)</span><span>,</span> struct<span style="color:#999977">(</span><span style="color:#116644">1</span><span>,</span><span style="color:#aa1111">"2"</span><span style="color:#999977">)</span><span>,</span> struct<span style="color:#999977">(</span><span style="color:#116644">1</span><span>,</span><span style="color:#116644">1</span><span style="color:#999977">)</span><span>,</span><span style="color:#221199">null</span><span style="color:#999977">)</span><span>;</span></span><span><span style="color:#981a1a">+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+</span></span><span><span style="color:#981a1a">|</span><span style="color:#999977">(</span><span style="color:#770088">not</span> cast<span style="color:#999977">(</span>struct<span style="color:#999977">(</span><span style="color:#116644">1</span><span>,</span><span style="color:#aa1111">'2'</span><span style="color:#999977">)</span><span style="color:#770088">as</span> STRUCT<span style="color:#981a1a">&lt;</span>col1<span>:</span><span>TINYINT</span><span>,</span>col2<span>:</span><span>TEXT</span><span style="color:#981a1a">&gt;</span><span style="color:#999977">)</span><span style="color:#770088">IN</span><span style="color:#999977">(</span><span style="color:#221199">NULL</span><span>,</span> cast<span style="color:#999977">(</span>struct<span style="color:#999977">(</span><span style="color:#116644">1</span><span>,</span><span style="color:#aa1111">'2'</span><span style="color:#999977">)</span><span style="color:#770088">as</span> STRUCT<span style="color:#981a1a">&lt;</span>col1<span>:</span><span>TINYINT</span><span>,</span>col2<span>:</span><span>TEXT</span><span style="color:#981a1a">&gt;</span><span style="color:#999977">)</span><span>,</span> cast<span style="color:#999977">(</span>struct<span style="color:#999977">(</span><span style="color:#116644">1</span><span>,</span><span style="color:#116644">1</span><span style="color:#999977">)</span><span style="color:#770088">as</span> STRUCT<span style="color:#981a1a">&lt;</span>col1<span>:</span><span>TINYINT</span><span>,</span>col2<span>:</span><span>TEXT</span><span style="color:#981a1a">&gt;</span><span style="color:#999977">)</span><span>,</span> cast<span style="color:#999977">(</span>struct<span style="color:#999977">(</span><span style="color:#116644">1</span><span>,</span><span style="color:#116644">3</span><span style="color:#999977">)</span><span style="color:#770088">as</span> STRUCT<span style="color:#981a1a">&lt;</span>col1<span>:</span><span>TINYINT</span><span>,</span>col2<span>:</span><span>TEXT</span><span style="color:#981a1a">&gt;</span><span style="color:#999977">)))</span><span style="color:#981a1a">|</span></span><span><span style="color:#981a1a">+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+</span></span><span><span style="color:#981a1a">|</span><span style="color:#116644">0</span><span style="color:#981a1a">|</span></span><span><span style="color:#981a1a">+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+</span></span></pre><ul><li><p style="margin-left:.5rem; margin-right:0"><span><code>MAP_AGG</code></span><span>： 接收 expr1 作为键，expr2 作为对应的值，返回一个 MAP </span></p></li></ul><blockquote><p style="margin-left:0; margin-right:0"><span>参考文档：</span><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoris.apache.org%2Fzh-CN%2Fdocs%2Fsql-manual%2Fsql-functions%2Faggregate-functions%2Fmap-agg%2F" target="_blank"><span>https://doris.apache.org/zh-CN/docs/sql-manual/sql-functions/aggregate-functions/map-agg/</span></a></span></p></blockquote><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start">&nbsp;</p><h2><span>负载管理</span></h2><h3><span>资源硬隔离</span></h3><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>在 Apache Doris 2.0 版本我们引入了 Workload Group，可以实现对 CPU 资源的软限制。Workload Group 软限的优点是可以提升资源的利用率，但同时也会带来查询延迟的不确定性，这对那些期望查询性能稳定性的用户来说是难以接受的。因此在 Apache Doris 2.1 版本中我们对 Workload Group 实现了 CPU 硬限，即无论当前物理机的整体 CPU 是否空闲，配置了硬限的 Group 最大 CPU 用量不能超过配置的值。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>这意味着不管单机的资源是否充足，该 Workload Group 的最大可用 CPU 资源都是固定的，只要用户的查询负载不发生大的变化，那么查询性能就会相对稳定。由于影响一个查询性能稳定性的因素很多，除了 CPU 之外，内存、IO 以及软件层面的资源竞争也都会产生影响，因此当集群的负载在空闲和满载之间切换时，即使配置了 CPU 的硬限，查询性能的稳定性也会产生波动，但是预期的表现应该是优于软限制。</span></p><blockquote><p style="margin-left:.8em; margin-right:0"><span><strong><span>注意事项</span></strong></span></p><ol><li><p style="margin-left:.5rem; margin-right:0"><span>Doris 2.0 版本的 CPU 隔离是基于优先级队列实现的，而在 2.1 版本中 Apache Doris 是基于 CGroup 实现了 CPU 资源的隔离，因此从 2.0 版本升级到 2.1 版本时，需要在使用前完成 CGroup 的配置，详细注意事项参考官网文档。</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>目前 Workload Group 支持的工作负载类型包括查询间的隔离以及导入与查询之间的隔离，需要注意的是如果期望对导入负载进行彻底的限制，那么需要开启 MemTable 前移。</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>用户需要通过开关指定当前集群的 CPU 限制模式是软限还是硬限，暂不支持两种模式同时运行，两种模式的切换可以参考官网文档，后续我们也会根据用户的实际需求决定是否要同时支持这两种模式。</span></p></li></ol></blockquote><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start">&nbsp;</p><blockquote><p style="margin-left:.8em; margin-right:0"><span>演示 Demo：</span><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1Fz421X7XE%2F%3Fspm_id_from%3D333.999.0.0" target="_blank"><span>https://www.bilibili.com/video/BV1Fz421X7XE/?spm_id_from=333.999.0.0</span></a></span></p><p style="margin-left:0; margin-right:.8em"><span>参考文档：</span><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoris.apache.org%2Fzh-CN%2Fdocs%2Fadmin-manual%2Fworkload-group%2F" target="_blank"><span>https://doris.apache.org/zh-CN/docs/admin-manual/workload-group/</span></a></span></p></blockquote><h3><span>TopSQL</span></h3><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>当集群出现预期外的大查询导致集群整体负载上升、查询可用性下降时，用户难以快速找到这些大查询并进行相应的降级操作。因此在 Apache Doris 2.1 版本中我们支持了运行时查看 SQL 资源用量的功能，具体指标如下：</span></p><pre><span>mysql <span style="color:#999977">[(</span>none<span style="color:#999977">)]</span><span style="color:#981a1a">&gt;</span><span style="color:#770088">desc</span><span style="color:#770088">function</span> active_queries<span style="color:#999977">()</span><span>;</span></span><span><span style="color:#981a1a">+------------------------+--------+------+-------+---------+-------+</span></span><span><span style="color:#981a1a">|</span><span style="color:#770088">Field</span><span style="color:#981a1a">|</span> Type   <span style="color:#981a1a">|</span><span style="color:#221199">Null</span><span style="color:#981a1a">|</span><span style="color:#770088">Key</span><span style="color:#981a1a">|</span><span style="color:#770088">Default</span><span style="color:#981a1a">|</span> Extra <span style="color:#981a1a">|</span></span><span><span style="color:#981a1a">+------------------------+--------+------+-------+---------+-------+</span></span><span><span style="color:#981a1a">|</span> BeHost                 <span style="color:#981a1a">|</span><span>TEXT</span><span style="color:#981a1a">|</span><span style="color:#770088">No</span><span style="color:#981a1a">|</span><span style="color:#221199">false</span><span style="color:#981a1a">|</span><span style="color:#221199">NULL</span><span style="color:#981a1a">|</span> NONE  <span style="color:#981a1a">|</span></span><span><span style="color:#981a1a">|</span> BePort                 <span style="color:#981a1a">|</span><span>BIGINT</span><span style="color:#981a1a">|</span><span style="color:#770088">No</span><span style="color:#981a1a">|</span><span style="color:#221199">false</span><span style="color:#981a1a">|</span><span style="color:#221199">NULL</span><span style="color:#981a1a">|</span> NONE  <span style="color:#981a1a">|</span></span><span><span style="color:#981a1a">|</span> QueryId                <span style="color:#981a1a">|</span><span>TEXT</span><span style="color:#981a1a">|</span><span style="color:#770088">No</span><span style="color:#981a1a">|</span><span style="color:#221199">false</span><span style="color:#981a1a">|</span><span style="color:#221199">NULL</span><span style="color:#981a1a">|</span> NONE  <span style="color:#981a1a">|</span></span><span><span style="color:#981a1a">|</span> StartTime              <span style="color:#981a1a">|</span><span>TEXT</span><span style="color:#981a1a">|</span><span style="color:#770088">No</span><span style="color:#981a1a">|</span><span style="color:#221199">false</span><span style="color:#981a1a">|</span><span style="color:#221199">NULL</span><span style="color:#981a1a">|</span> NONE  <span style="color:#981a1a">|</span></span><span><span style="color:#981a1a">|</span> QueryTimeMs            <span style="color:#981a1a">|</span><span>BIGINT</span><span style="color:#981a1a">|</span><span style="color:#770088">No</span><span style="color:#981a1a">|</span><span style="color:#221199">false</span><span style="color:#981a1a">|</span><span style="color:#221199">NULL</span><span style="color:#981a1a">|</span> NONE  <span style="color:#981a1a">|</span></span><span><span style="color:#981a1a">|</span> WorkloadGroupId        <span style="color:#981a1a">|</span><span>BIGINT</span><span style="color:#981a1a">|</span><span style="color:#770088">No</span><span style="color:#981a1a">|</span><span style="color:#221199">false</span><span style="color:#981a1a">|</span><span style="color:#221199">NULL</span><span style="color:#981a1a">|</span> NONE  <span style="color:#981a1a">|</span></span><span><span style="color:#981a1a">|</span> QueryCpuTimeMs         <span style="color:#981a1a">|</span><span>BIGINT</span><span style="color:#981a1a">|</span><span style="color:#770088">No</span><span style="color:#981a1a">|</span><span style="color:#221199">false</span><span style="color:#981a1a">|</span><span style="color:#221199">NULL</span><span style="color:#981a1a">|</span> NONE  <span style="color:#981a1a">|</span></span><span><span style="color:#981a1a">|</span> ScanRows               <span style="color:#981a1a">|</span><span>BIGINT</span><span style="color:#981a1a">|</span><span style="color:#770088">No</span><span style="color:#981a1a">|</span><span style="color:#221199">false</span><span style="color:#981a1a">|</span><span style="color:#221199">NULL</span><span style="color:#981a1a">|</span> NONE  <span style="color:#981a1a">|</span></span><span><span style="color:#981a1a">|</span> ScanBytes              <span style="color:#981a1a">|</span><span>BIGINT</span><span style="color:#981a1a">|</span><span style="color:#770088">No</span><span style="color:#981a1a">|</span><span style="color:#221199">false</span><span style="color:#981a1a">|</span><span style="color:#221199">NULL</span><span style="color:#981a1a">|</span> NONE  <span style="color:#981a1a">|</span></span><span><span style="color:#981a1a">|</span> BePeakMemoryBytes      <span style="color:#981a1a">|</span><span>BIGINT</span><span style="color:#981a1a">|</span><span style="color:#770088">No</span><span style="color:#981a1a">|</span><span style="color:#221199">false</span><span style="color:#981a1a">|</span><span style="color:#221199">NULL</span><span style="color:#981a1a">|</span> NONE  <span style="color:#981a1a">|</span></span><span><span style="color:#981a1a">|</span> CurrentUsedMemoryBytes <span style="color:#981a1a">|</span><span>BIGINT</span><span style="color:#981a1a">|</span><span style="color:#770088">No</span><span style="color:#981a1a">|</span><span style="color:#221199">false</span><span style="color:#981a1a">|</span><span style="color:#221199">NULL</span><span style="color:#981a1a">|</span> NONE  <span style="color:#981a1a">|</span></span><span><span style="color:#981a1a">|</span> ShuffleSendBytes       <span style="color:#981a1a">|</span><span>BIGINT</span><span style="color:#981a1a">|</span><span style="color:#770088">No</span><span style="color:#981a1a">|</span><span style="color:#221199">false</span><span style="color:#981a1a">|</span><span style="color:#221199">NULL</span><span style="color:#981a1a">|</span> NONE  <span style="color:#981a1a">|</span></span><span><span style="color:#981a1a">|</span> ShuffleSendRows        <span style="color:#981a1a">|</span><span>BIGINT</span><span style="color:#981a1a">|</span><span style="color:#770088">No</span><span style="color:#981a1a">|</span><span style="color:#221199">false</span><span style="color:#981a1a">|</span><span style="color:#221199">NULL</span><span style="color:#981a1a">|</span> NONE  <span style="color:#981a1a">|</span></span><span><span style="color:#981a1a">|</span><span style="color:#770088">Database</span><span style="color:#981a1a">|</span><span>TEXT</span><span style="color:#981a1a">|</span><span style="color:#770088">No</span><span style="color:#981a1a">|</span><span style="color:#221199">false</span><span style="color:#981a1a">|</span><span style="color:#221199">NULL</span><span style="color:#981a1a">|</span> NONE  <span style="color:#981a1a">|</span></span><span><span style="color:#981a1a">|</span> FrontendInstance       <span style="color:#981a1a">|</span><span>TEXT</span><span style="color:#981a1a">|</span><span style="color:#770088">No</span><span style="color:#981a1a">|</span><span style="color:#221199">false</span><span style="color:#981a1a">|</span><span style="color:#221199">NULL</span><span style="color:#981a1a">|</span> NONE  <span style="color:#981a1a">|</span></span><span><span style="color:#981a1a">|</span><span style="color:#770088">Sql</span><span style="color:#981a1a">|</span><span>TEXT</span><span style="color:#981a1a">|</span><span style="color:#770088">No</span><span style="color:#981a1a">|</span><span style="color:#221199">false</span><span style="color:#981a1a">|</span><span style="color:#221199">NULL</span><span style="color:#981a1a">|</span> NONE  <span style="color:#981a1a">|</span></span><span><span style="color:#981a1a">+------------------------+--------+------+-------+---------+-------+</span></span></pre><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span><code>active_queries()</code></span><span> 函数记录了查询在各个 BE 上运行时的审计信息，该函数可以当做普通的 Doris 表来看待，支持查询、谓词过滤、排序和 Join 等操作。常用的指标包括 SQL 的运行时间、CPU 时间、单 BE 的峰值内存、Scan 的数据量以及 Shuffle 的数据量，也可以从 BE 的粒度做上卷，查看 SQL 全局的资源用量。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>需要注意的是这里只显示运行时的 SQL，查询结束的 SQL 不会在这里显示，而是写入审计日志中（目前主要是 fe.audit.log）。常用的 SQL 如下：</span></p><pre><span>查看集群中目前运行时间最久的 n 个 sql</span><span><span style="color:#770088">select</span> QueryId<span>,</span><span style="color:#770088">max</span><span style="color:#999977">(</span>QueryTimeMs<span style="color:#999977">)</span><span style="color:#770088">as</span> query_time <span style="color:#770088">from</span> active_queries<span style="color:#999977">()</span><span style="color:#770088">group</span><span style="color:#770088">by</span> QueryId <span style="color:#770088">order</span><span style="color:#770088">by</span> query_time <span style="color:#770088">desc</span><span style="color:#770088">limit</span><span style="color:#116644">10</span><span>;</span></span><span><span>​</span></span><span>查看目前集群中 CPU 耗时最长的 n 个 sql</span><span><span style="color:#770088">select</span> QueryId<span>,</span><span style="color:#770088">sum</span><span style="color:#999977">(</span>QueryCpuTimeMs<span style="color:#999977">)</span><span style="color:#770088">as</span> cpu_time <span style="color:#770088">from</span> active_queries<span style="color:#999977">()</span><span style="color:#770088">group</span><span style="color:#770088">by</span> QueryId <span style="color:#770088">order</span><span style="color:#770088">by</span> cpu_time <span style="color:#770088">desc</span><span style="color:#770088">limit</span><span style="color:#116644">10</span></span><span><span>​</span></span><span>查看目前集群中 scan 行数最多的 n 个 sql 以及他们的运行时间</span><span><span style="color:#770088">select</span> t1<span style="color:#0055aa">.QueryId</span><span>,</span>t1<span style="color:#0055aa">.scan_rows</span><span>,</span> t2<span style="color:#0055aa">.query_time</span><span style="color:#770088">from</span></span><span><span style="color:#999977">(</span><span style="color:#770088">select</span> QueryId<span>,</span><span style="color:#770088">sum</span><span style="color:#999977">(</span>ScanRows<span style="color:#999977">)</span><span style="color:#770088">as</span> scan_rows <span style="color:#770088">from</span> active_queries<span style="color:#999977">()</span><span style="color:#770088">group</span><span style="color:#770088">by</span> QueryId <span style="color:#770088">order</span><span style="color:#770088">by</span> scan_rows <span style="color:#770088">desc</span><span style="color:#770088">limit</span><span style="color:#116644">10</span><span style="color:#999977">)</span> t1 </span><span><span style="color:#770088">left</span><span style="color:#770088">join</span><span style="color:#999977">(</span><span style="color:#770088">select</span> QueryId<span>,</span><span style="color:#770088">max</span><span style="color:#999977">(</span>QueryTimeMs<span style="color:#999977">)</span><span style="color:#770088">as</span> query_time <span style="color:#770088">from</span> active_queries<span style="color:#999977">()</span><span style="color:#770088">group</span><span style="color:#770088">by</span> QueryId<span style="color:#999977">)</span> t2 <span style="color:#770088">on</span> t1<span style="color:#0055aa">.QueryId</span><span style="color:#981a1a">=</span> t2<span style="color:#0055aa">.QueryId</span></span><span></span><span>查看目前各个 BE 的负载情况，按照 CPU 时间/scan 行数/shuffle 字节数降序排列</span><span><span style="color:#770088">select</span> BeHost<span>,</span><span style="color:#770088">sum</span><span style="color:#999977">(</span>QueryCpuTimeMs<span style="color:#999977">)</span><span style="color:#770088">as</span> query_cpu_time<span>,</span><span style="color:#770088">sum</span><span style="color:#999977">(</span>ScanRows<span style="color:#999977">)</span><span style="color:#770088">as</span> scan_rows<span>,</span><span style="color:#770088">sum</span><span style="color:#999977">(</span>ShuffleSendBytes<span style="color:#999977">)</span><span style="color:#770088">as</span> shuffle_bytes <span style="color:#770088">from</span> active_queries<span style="color:#999977">()</span><span style="color:#770088">group</span><span style="color:#770088">by</span> BeHost <span style="color:#770088">order</span><span style="color:#770088">by</span> query_cpu_time <span style="color:#770088">desc</span><span>,</span>scan_rows <span style="color:#770088">desc</span><span>,</span>shuffle_bytes <span style="color:#770088">desc</span><span style="color:#770088">limit</span><span style="color:#116644">10</span></span><span><span>​</span></span><span>查看单 BE 峰值内存最高的 N 个 sql</span><span><span style="color:#770088">select</span> QueryId<span>,</span><span style="color:#770088">max</span><span style="color:#999977">(</span>BePeakMemoryBytes<span style="color:#999977">)</span><span style="color:#770088">as</span> be_peak_mem <span style="color:#770088">from</span> active_queries<span style="color:#999977">()</span><span style="color:#770088">group</span><span style="color:#770088">by</span> QueryId <span style="color:#770088">order</span><span style="color:#770088">by</span> be_peak_mem <span style="color:#770088">desc</span><span style="color:#770088">limit</span><span style="color:#116644">10</span><span>;</span></span></pre><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>目前主要展示的负载类型包括 Select 和</span><span><code>Insert Into……Select</code></span><span>，预计在 2.1 版本之上的三位迭代版本中会支持 Stream Load 和 Broker Load 的资源用量展示。</span></p><blockquote><p style="margin-left:0; margin-right:0"><span>参考文档：</span><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoris.apache.org%2Fzh-CN%2Fdocs%2Fsql-manual%2Fsql-functions%2Ftable-functions%2Factive_queries%2F" target="_blank"><span>https://doris.apache.org/zh-CN/docs/sql-manual/sql-functions/table-functions/active_queries/</span></a></span></p></blockquote><h2><span>其他</span></h2><h3><span>Decimal256 </span></h3><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>为了更好的满足金融类或者财务类客户以及一些高端制造业客户对于数字类型进行精确计算的需求，2.1 新版本中提供了更高精度的 Decimal 数据类型，最高支持 76 位有效数字（该类型处于 Experimental 状态，需要手工开启配置项 set enable_decimal256=true 才能使用）。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>示例：</span></p><pre><span><span style="color:#770088">CREATE</span><span style="color:#770088">TABLE</span><span style="color:#0055aa">`test_arithmetic_expressions_256`</span><span style="color:#999977">(</span></span><span>      k1 <span>decimal</span><span style="color:#999977">(</span><span style="color:#116644">76</span><span>,</span><span style="color:#116644">30</span><span style="color:#999977">)</span><span>,</span></span><span>      k2 <span>decimal</span><span style="color:#999977">(</span><span style="color:#116644">76</span><span>,</span><span style="color:#116644">30</span><span style="color:#999977">)</span></span><span><span style="color:#999977">)</span></span><span>    DISTRIBUTED <span style="color:#770088">BY</span><span style="color:#770088">HASH</span><span style="color:#999977">(</span>k1<span style="color:#999977">)</span></span><span>    PROPERTIES <span style="color:#999977">(</span></span><span><span style="color:#aa1111">"replication_num"</span><span style="color:#981a1a">=</span><span style="color:#aa1111">"1"</span></span><span><span style="color:#999977">)</span><span>;</span></span><span><span>​</span></span><span><span style="color:#770088">insert</span><span style="color:#770088">into</span> test_arithmetic_expressions_256 <span style="color:#770088">values</span></span><span><span style="color:#999977">(</span><span style="color:#116644">1.000000000000000000000000000001</span><span>,</span><span style="color:#116644">9999999999999999999999999999999999999999999998.999999999999999999999999999998</span><span style="color:#999977">)</span><span>,</span></span><span><span style="color:#999977">(</span><span style="color:#116644">2.100000000000000000000000000001</span><span>,</span><span style="color:#116644">4999999999999999999999999999999999999999999999.899999999999999999999999999998</span><span style="color:#999977">)</span><span>,</span></span><span><span style="color:#999977">(</span><span style="color:#116644">3.666666666666666666666666666666</span><span>,</span><span style="color:#116644">3333333333333333333333333333333333333333333333.333333333333333333333333333333</span><span style="color:#999977">)</span><span>;</span></span></pre><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>查询语句及结果：</span></p><pre><span><span style="color:#770088">select</span> k1<span>,</span> k2<span>,</span> k1 <span style="color:#981a1a">+</span> k2 a <span style="color:#770088">from</span> test_arithmetic_expressions_256 <span style="color:#770088">order</span><span style="color:#770088">by</span><span style="color:#116644">1</span><span>,</span><span style="color:#116644">2</span><span>;</span></span><span><span style="color:#981a1a">+----------------------------------+-------------------------------------------------------------------------------+-------------------------------------------------------------------------------+</span></span><span><span style="color:#981a1a">|</span> k1                               <span style="color:#981a1a">|</span> k2                                                                            <span style="color:#981a1a">|</span> a                                                                             <span style="color:#981a1a">|</span></span><span><span style="color:#981a1a">+----------------------------------+-------------------------------------------------------------------------------+-------------------------------------------------------------------------------+</span></span><span><span style="color:#981a1a">|</span><span style="color:#116644">1.000000000000000000000000000001</span><span style="color:#981a1a">|</span><span style="color:#116644">9999999999999999999999999999999999999999999998.999999999999999999999999999998</span><span style="color:#981a1a">|</span><span style="color:#116644">9999999999999999999999999999999999999999999999.999999999999999999999999999999</span><span style="color:#981a1a">|</span></span><span><span style="color:#981a1a">|</span><span style="color:#116644">2.100000000000000000000000000001</span><span style="color:#981a1a">|</span><span style="color:#116644">4999999999999999999999999999999999999999999999.899999999999999999999999999998</span><span style="color:#981a1a">|</span><span style="color:#116644">5000000000000000000000000000000000000000000001.999999999999999999999999999999</span><span style="color:#981a1a">|</span></span><span><span style="color:#981a1a">|</span><span style="color:#116644">3.666666666666666666666666666666</span><span style="color:#981a1a">|</span><span style="color:#116644">3333333333333333333333333333333333333333333333.333333333333333333333333333333</span><span style="color:#981a1a">|</span><span style="color:#116644">3333333333333333333333333333333333333333333336.999999999999999999999999999999</span><span style="color:#981a1a">|</span></span><span><span style="color:#981a1a">+----------------------------------+-------------------------------------------------------------------------------+-------------------------------------------------------------------------------+</span></span><span><span style="color:#116644">3</span> rows <span style="color:#770088">in</span><span style="color:#770088">set</span><span style="color:#999977">(</span><span style="color:#116644">0.09</span> sec<span style="color:#999977">)</span></span></pre><blockquote><p style="margin-left:0; margin-right:0"><span><strong><span>注意事项</span></strong></span><span> :Decimal256 类型对于计算 CPU 的消耗更高，因此在性能上会有一些损耗。</span></p></blockquote><h3><span>任务调度 Job Scheduler</span></h3><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>同社区用户多次交流中，我们发现许多场景下用户使用 Apache Doris 时都存在定时调度的需求，例如：</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span>周期性的 Backup；</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>过期数据定时清理；</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>周期性的导入任务，如定时通过 Catalog 的方式去进行增量或全量数据同步；</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>定期 ETL，如部分用户定期从宽表中 Load 数据至指定表、从明细表中定时拉取数据存至聚合表、ODS 层表定时打宽并写入原有宽表更新；</span></p></li></ul><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>尽管诸如 Airflow、DolphinScheduler 等可供选择的外部调度系统非常多，但仍面临一致性的问题——在极端情况下，外部调度系统触发 Doris 导入任务并执行成功，因意外情况忽然宕机时，外部调度系统无法正确获取执行结果，会认为此次调度失败，导致触发调度系统的容错机制，通常是重试或者直接失败。而无论采用哪种策略，最终都会导致以下几个情况发生：</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span><strong><span>资源浪费</span></strong></span><span>：由于调度系统误认为任务失败，可能会重新调度执行已经成功的任务，导致不必要的资源消耗。</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span><strong><span>数据重复或丢失</span></strong></span><span>：如果调度系统选择重试导入任务，可能导致数据重复导入，造成数据冗余和不一致。另一方面，如果调度系统直接标记任务为失败，可能导致实际已成功导入的数据被忽略或丢失。</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span><strong><span>时间延误</span></strong></span><span>：由于调度系统的容错机制被触发，可能需要进行额外的任务调度和重试，导致整体数据处理时间延长，影响业务效率和响应速度。</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span><strong><span>系统稳定性下降</span></strong></span><span>：频繁的重试或直接失败可能导致调度系统和 Doris 的负载增加，进而影响系统的稳定性和性能。</span></p></li></ul><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>因此我们在 Apache Doris 2.1 版本中引入了 Job Scheduler 功能并具备了自行任务调度的能力。Doris Job Scheduler 是根据既定计划运行的任务，用于在特定时间或指定时间间隔触发预定义的操作，从而帮助我们自动执行一些任务。从功能上来讲，它类似于操作系统上的定时任务（如：Linux 中的 cron、Windows 中的计划任务），但 Doris 的 Job 调度可以精确到秒级。对于导入场景，我们能够做到完全的一致性保障。除此之外，Doris 内置的 Jon Scheduler 还具有以下特点：</span></p><ol><li><p style="margin-left:.5rem; margin-right:0"><span><strong><span>高效调度</span></strong></span><span>：Job Scheduler 可以在指定的时间间隔内安排任务和事件，确保数据处理的高效性。采用时间轮算法保证事件能够精准做到秒级触发。</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span><strong><span>灵活调度</span></strong></span><span>：Job Scheduler 提供了多种调度选项，如按，分、小时、天或周的间隔进行调度，同时支持一次性调度以及循环（周期）事件调度，并且周期调度也可以指定开始时间、结束时间。</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span><strong><span>事件池和高性能处理队列</span></strong></span><span>：Job Scheduler 采用 Disruptor 实现高性能的生产消费者模型，最大可能的避免任务执行过载。</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span><strong><span>调度记录可追溯</span></strong></span><span>：Job Scheduler 会存储最新的 Task 执行记录（可配置），通过简单的命令即可查看任务执行记录，确保过程可追溯。</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span><strong><span>高可用</span></strong></span><span>：依托于 Doris 自身的高可用机制，Job 可以很轻松的做到自恢复，高可用。</span></p></li></ol><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>在此我们创建一个定时调度任务作为示例：</span></p><pre><span>// 从  <span style="color:#116644">2023</span><span style="color:#981a1a">-</span><span style="color:#116644">11</span><span style="color:#981a1a">-</span><span style="color:#116644">17</span> 起每天定时执行 <span style="color:#770088">insert</span>语句直到 <span style="color:#116644">2038</span> 年结束</span><span><span style="color:#770088">CREATE</span></span><span>JOB e_daily</span><span><span style="color:#770088">ON</span><span style="color:#770088">SCHEDULE</span></span><span><span style="color:#770088">EVERY</span><span style="color:#116644">1</span> DAY </span><span><span style="color:#770088">STARTS</span><span style="color:#aa1111">'2023-11-17 23:59:00'</span></span><span><span style="color:#770088">ENDS</span><span style="color:#aa1111">'2038-01-19 03:14:07'</span></span><span><span style="color:#770088">COMMENT</span><span style="color:#aa1111">'Saves total number of sessions'</span></span><span><span style="color:#770088">DO</span></span><span><span style="color:#770088">INSERT</span><span style="color:#770088">INTO</span> site_activity<span style="color:#0055aa">.totals</span><span style="color:#999977">(</span><span>time</span><span>,</span> total<span style="color:#999977">)</span></span><span><span style="color:#770088">SELECT</span><span style="color:#770088">CURRENT_TIMESTAMP</span><span>,</span><span style="color:#770088">COUNT</span><span style="color:#999977">(</span><span style="color:#981a1a">*</span><span style="color:#999977">)</span></span><span><span style="color:#770088">FROM</span> site_activity<span style="color:#0055aa">.sessions</span><span style="color:#770088">where</span> create_time <span style="color:#981a1a">&gt;=</span>  days_add<span style="color:#999977">(</span>now<span style="color:#999977">()</span><span>,</span><span style="color:#981a1a">-</span><span style="color:#116644">1</span><span style="color:#999977">)</span><span>;</span></span></pre><blockquote><p style="margin-left:0; margin-right:0"><span>注意：当前 Job Scheduler 仅支持 Insert 内表，参考文档：</span><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoris.apache.org%2Fzh-CN%2Fdocs%2Fsql-manual%2Fsql-reference%2FData-Definition-" target="_blank"><span>https://doris.apache.org/zh-CN/docs/sql-manual/sql-reference/Data-Definition-Statements/Create/CREATE-JOB</span></a></span></p></blockquote><h2><span>Behavior Changed</span></h2><ul><li><p style="margin-left:.5rem; margin-right:0"><span>Unique Key 模型默认开启 Merge On Write 写时合并，新创建的 Unique Key 模型的表将自动设置 </span><span><code>enable_unique_key_merge_on_write=true</code></span><span>。</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>倒排索引 Invert Index 经过一年多时间的打磨，已实现了对原本的位图索引 Bitmap Index 功能和场景的全覆盖，且功能上和性能上都大幅优于原本的位图索引 Bitmap Index，因此从 Apache Doris 2.1 版本起，我们将默认停止对位图索引 Bitmap Index 的支持，已经创建的位图索引保持不变将继续生效，不允许创建新的位图索引，在未来我们将会移除位图索引的相关代码。</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span><code>cpu_resource_limit</code></span><span>不再支持，其本身是限制 BE 上 Scanner 线程数目的功能，而 Workload Group 也能支持设置 BE Scanner 线程数目，所以已设置的 </span><span><code>cpu_resource_limit</code></span><span>将失效。</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>Segment Compaction 主要应对单批次大数据量的导入，可以在同一批次数据中进行多个 Segment 的 Compaction 操作，在 2.1 版本开始 Segment Compaction 将默认开启，</span><span><code>enable_segcompaction</code></span><span> 默认值设置为 True。</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>Audit Log 插件</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span>从 2.1 版本开始，Apache Doris 开始内置 Audit Log 审计日志插件，用户只需通过设置全局变量 </span><span><code>enable_audit_plugin</code></span><span> 开启或关闭审计日志功能。</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>对于之前已经安装过审计日志插件的用户，升级后可以继续使用原有插件，也可以通过 uninstall 命令卸载原有插件后，使用新的插件。但注意，切换插件后，审计日志表也将切换到新的表中。</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>具体可参阅：</span><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoris.apache.org%2Fdocs%2Fecosystem%2Faudit-plugin%2F" target="_blank"><span>https://doris.apache.org/docs/ecosystem/audit-plugin/</span></a></span></p></li></ul></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Mon, 11 Mar 2024 09:54:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/282597/apache-doris-2-1-0-released</guid>
            <link>https://www.oschina.net/news/282597/apache-doris-2-1-0-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[无鱼 1.2.1 已经发布，项目工时系统]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>无鱼 1.2.1 已经发布，项目工时系统</p><p>此版本更新内容包括：</p><p>工时系统标准版 v1.2.1 已经发布， 此版本更新内容包括：</p><h2>变更内容</h2><p>1、修复了请假/倒休的 bug （1.2.0） 修改了请假/倒休后，再进行取消后的错误问题。</p><p>2、修复项目管理的路径访问问题</p><p>3、修改了某些情况下填报记录无法打开的问题（群友反馈）</p><h2>使用方法</h2><p>建议使用 compose 方式部署。 <a href="https://gitee.com/link?target=https%3A%2F%2Fdoc.wuyusoft.com%2Fcost%2F5.install.html" target="_blank">部署方式</a></p><p>详情查看：<a href="https://gitee.com/wy-soft/wyproject/releases/1.2.1">https://gitee.com/wy-soft/wyproject/releases/1.2.1</a></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 11 Mar 2024 08:50:37 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/282585</guid>
            <link>https://www.oschina.net/news/282585</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[KeePassXC 2.7.7 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">KeePassXC&nbsp;&nbsp;是由 KeePass 密码管理器的一个分支发展而来的，相比原版 KeePass，KeePassXC 除了适配 Windows，还适配了 Linux 和 macOS。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">通过&nbsp;KeePassXC&nbsp;可以存储和管理个人的敏感信息。保存在 KeePassXC 上的信息全部都会进行离线加密，借助于云存储服务可以实现跨平台同步。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">KeePassXC 2.7.7 现已发布，本次更新内容如下：</p><p style="text-align:start"><strong>Changes</strong></p><ul><li>支持&nbsp;USB Hotplug for Hardware Key interface&nbsp; [&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkeepassxreboot%2Fkeepassxc%2Fpull%2F10092" target="_blank">#10092</a>&nbsp;]</li><li>支持 1PUX 和 Bitwarden 导入 [&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkeepassxreboot%2Fkeepassxc%2Fpull%2F9815" target="_blank">#9815</a>&nbsp;]</li><li>Browser：添加对 PassKeys 的支持 [&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkeepassxreboot%2Fkeepassxc%2Fpull%2F8825" target="_blank">#8825</a>、<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkeepassxreboot%2Fkeepassxc%2Fpull%2F9987" target="_blank">#9987</a>、<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkeepassxreboot%2Fkeepassxc%2Fpull%2F10318" target="_blank">#10318</a>&nbsp;]</li><li>Build System：移至 vcpkg 清单模式 [&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkeepassxreboot%2Fkeepassxc%2Fpull%2F10088" target="_blank">#10088</a>&nbsp;]</li></ul><p style="text-align:start"><strong>Fixes</strong></p><ul><li>修复多个 TOTP 问题 [&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkeepassxreboot%2Fkeepassxc%2Fpull%2F9874" target="_blank">#9874</a>&nbsp;]</li><li>修复编辑器不再可见时保存时 focus loss 的问题 [&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkeepassxreboot%2Fkeepassxc%2Fpull%2F10075" target="_blank">#10075</a>&nbsp;]</li><li>修复从历史记录中删除条目时的视觉效果 [&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkeepassxreboot%2Fkeepassxc%2Fpull%2F9947" target="_blank">#9947</a>&nbsp;]</li><li>修复执行搜索时未选择第一个条目的问题 [&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkeepassxreboot%2Fkeepassxc%2Fpull%2F9868" target="_blank">#9868</a>&nbsp;]</li><li>防止条目拖放时出现滚动条[&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkeepassxreboot%2Fkeepassxc%2Fpull%2F9747" target="_blank">#9747</a>&nbsp;]</li><li>防止密码生成器的「Also choose from」字段中出现重复字符 [&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkeepassxreboot%2Fkeepassxc%2Fpull%2F9803" target="_blank">#9803</a>&nbsp;]</li><li>安全性：防止逐字节和附件推断侧信道攻击[&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkeepassxreboot%2Fkeepassxc%2Fpull%2F10266" target="_blank">#10266</a>&nbsp;]</li><li>Browser：修复返回凭据时的错误[&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkeepassxreboot%2Fkeepassxc%2Fpull%2F9136" target="_blank">#9136</a>&nbsp;]</li><li>Browser：修复从浏览器打开数据库时的崩溃问题[&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkeepassxreboot%2Fkeepassxc%2Fpull%2F9939" target="_blank">#9939</a>&nbsp;]</li><li>Browser：修复对引用 URL 字段的支持 [&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkeepassxreboot%2Fkeepassxc%2Fpull%2F8788" target="_blank">#8788</a>&nbsp;]</li><li>MacOS：修复更改 highlight/accent color 时的崩溃[&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkeepassxreboot%2Fkeepassxc%2Fpull%2F10348" target="_blank">#10348</a>&nbsp;]</li><li>MacOS：修复 TouchID 外观取决于 lid open/closed 的问题 [&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkeepassxreboot%2Fkeepassxc%2Fpull%2F10092" target="_blank">#10092</a>&nbsp;]</li><li>Windows：修复使用 MSI 安装程序终止 KeePassXC 进程的问题 [&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkeepassxreboot%2Fkeepassxc%2Fpull%2F9822" target="_blank">#9822</a>&nbsp;]</li><li>FdoSecrets：修复启用时数据库合并崩溃的问题 [&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkeepassxreboot%2Fkeepassxc%2Fpull%2F10136" target="_blank">#10136</a>&nbsp;]</li></ul><p>更新说明：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkeepassxreboot%2Fkeepassxc%2Freleases%2Ftag%2F2.7.7" target="_blank">https://github.com/keepassxreboot/keepassxc/releases/tag/2.7.7</a></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 11 Mar 2024 08:19:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/282576/keepassxc-2-7-7-released</guid>
            <link>https://www.oschina.net/news/282576/keepassxc-2-7-7-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[凌夕文件管理系统 v1.0.0-beta 发布 - 音视频、文档在线转码服务]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div><h4>软件简介</h4></div><div><div><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">凌夕文件管理系统（lfs）是基于 SpringBoot3.x+Mybatis+Mybatis-Plus+VUE3+Element Plus 开发的文件管理系统， 支持单文件上传、分片上传，视频上传完成后，可以根据视频转码配置转成对应的视频格式（mp4、m3u8），文档上传完成后，会转成 pdf 文件， 支持 word、excel、ppt、wps、text、rtf 文件转成 pdf。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">支持音视频、图片、文档在线预览、下载、重命名、移动文件夹、删除等操作，支持文件分类查看。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">后端 git 地址：<a href="https://gitee.com/lxinet/lfs">https://gitee.com/lxinet/lfs</a></p><p style="margin-left:0; margin-right:0">前端 git 地址：<a href="https://gitee.com/lxinet/lfs-vue">https://gitee.com/lxinet/lfs-vue</a></p><h3>用户手册</h3><h4><span><span><span><strong><strong><span><span><strong>新建文件夹</strong></span></span></strong></strong></span></span></span></h4><p style="margin-left:0.0000pt; text-align:left"><span><span>在文件管理页面，点击【新建文件夹】，就可以在当前文件夹下新建一个文件夹了，默认文件夹名称为「新建文件夹」，默认会全选，可以重新修改名称，按回车后，就完成文件夹创建。</span></span></p><p><img height="410" src="https://oscimg.oschina.net/oscnet/up-c2b3f32933b2aee1f5a2a41530b72072688.png" width="1000" referrerpolicy="no-referrer"></p><h4><span><span><span><strong><strong><span><span><strong>移动文件</strong></span></span></strong></strong></span></span></span></h4><p style="margin-left:0.0000pt; text-align:left"><span><span>在文件管理页面，可以选择文件移动到其他文件夹下。</span></span></p><p><img height="296" src="https://oscimg.oschina.net/oscnet/up-763e729a202a6f69ed4bd39fbb417fccc12.png" width="1000" referrerpolicy="no-referrer"></p><p><img height="557" src="https://oscimg.oschina.net/oscnet/up-95bc25ea9a93be68472d24ae15914aad4e8.png" width="800" referrerpolicy="no-referrer"></p><p><span><span><span><strong><strong><span><span><strong>上传文件</strong></span></span></strong></strong></span></span></span></p><p style="margin-left:0.0000pt; text-align:left"><span><span>文件可以在线上传，上传使用分片上传方式，如果上传重复文件，可以直接秒传，秒传是根据文件 md5 进行判断。</span></span></p><p style="margin-left:0.0000pt; text-align:left"><span><span>在文件管理页面，点击【上传文件】按钮，就会弹出上传文件的弹窗。</span></span></p><p><img height="392" src="https://oscimg.oschina.net/oscnet/up-b1b95439cb7e590d099a5626dd333b55ed8.png" width="1000" referrerpolicy="no-referrer"></p><p style="margin-left:0.0000pt; text-align:left"><span><span>可以拖拽文件到窗口或者点击窗口选择文件进行文件上传，上传过程中可以实时查看上传进度。</span></span></p><p><img height="328" src="https://oscimg.oschina.net/oscnet/up-4d03637e43333c483745a6bda7949f31e9c.png" width="800" referrerpolicy="no-referrer"></p><p style="margin-left:0.0000pt; text-align:left"><span><span>上传完成后，可以点击右边的【查看】按钮，查看上传文件的详情页。</span></span></p><p><img height="408" src="https://oscimg.oschina.net/oscnet/up-e5f7f164b6693ea630dd10025281d5d884a.png" width="800" referrerpolicy="no-referrer"></p><p style="margin-left:0.0000pt; text-align:left"><span><span>文件上传完成后，会自动发起转码，文档会转成 pdf 文件，视频会根据转码配置进行转码。</span></span></p><p><img height="548" src="https://oscimg.oschina.net/oscnet/up-d3670b909e8bf7cb300fb92d2adbe75113e.png" width="800" referrerpolicy="no-referrer"></p><h4><span><span><span><strong><strong><span><span><strong>文档预览</strong></span></span></strong></strong></span></span></span></h4><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span>文档上传后，会自动转成 pdf 文件，可以在线预览，可以在文件详情页面，点击【转码预览】按钮，就可以在线查看 pdf 文件内容。</span></span></span></span></p><p><img height="408" src="https://oscimg.oschina.net/oscnet/up-6663a4d8ea70bb3e50b9226e10cb3e7ce1b.png" width="800" referrerpolicy="no-referrer"></p><p><img height="544" src="https://oscimg.oschina.net/oscnet/up-b77710abd5259fb82d771d86967baadb584.png" width="800" referrerpolicy="no-referrer"></p><h4><span><span><span><strong><strong><span><span><strong>视频预览</strong></span></span></strong></strong></span></span></span></h4><p style="margin-left:0.0000pt; text-align:left"><span><span>视频上传完成后，会根据转码配置自动转码，在视频详情页面，可以查看原文件和转码文件。</span></span></p><p style="margin-left:0.0000pt; text-align:left"><span><span>点击【原文件预览】按钮，就可以预览原文件。</span></span></p><p><img height="550" src="https://oscimg.oschina.net/oscnet/up-1eff3c6f2c87c03f6bc4450d924c56f92af.png" width="800" referrerpolicy="no-referrer"></p><p><img height="459" src="https://oscimg.oschina.net/oscnet/up-b98261e3eae1c1dd2c45a63405e468ff7fb.png" width="800" referrerpolicy="no-referrer"></p><p style="margin-left:0.0000pt; text-align:left"><span><span>点击底下的转码列表右边的预览，就可以查看当前转码后的文件的视频。</span></span></p><p><img height="550" src="https://oscimg.oschina.net/oscnet/up-99363b6fa8481c02cce2d5fe09746dfa04f.png" width="800" referrerpolicy="no-referrer"></p><p><img height="458" src="https://oscimg.oschina.net/oscnet/up-1f84b96d6f44b3d7888a9c29653e46ea724.png" width="800" referrerpolicy="no-referrer"></p><h4><span><span><span><strong><strong><span><span><strong>转码配置</strong></span></span></strong></strong></span></span></span></h4><p style="margin-left:0.0000pt; text-align:left"><span><span>转码配置是针对视频文件转码进行配置的，视频上传后会根据开启的转码配置进行转码，可以在转码配置页面进行添加、修改、删除、开启/关闭转码。</span></span></p><p><img height="276" src="https://oscimg.oschina.net/oscnet/up-18eb5e1ff93eeb21af5d29681f50c9a3617.png" width="1000" referrerpolicy="no-referrer"></p><h4><span><span><span><strong><strong><span><span><strong>新增转码配置</strong></span></span></strong></strong></span></span></span></h4><p style="margin-left:0.0000pt; text-align:left"><span><span>点击【新增】按钮，系统会弹出新增转码配置界面，填写信息后点击【保存】按钮，即可添加新的转码配置。</span></span></p><p><img height="427" src="https://oscimg.oschina.net/oscnet/up-198b9db6daa3e4fefbf83f6ead771593cef.png" width="1000" referrerpolicy="no-referrer"></p><h4><span><span><span><strong><strong><span><span><strong>修改转码</strong></span></span></strong></strong></span></span></span></h4><p style="margin-left:0.0000pt; text-align:left"><span><span>在转码配置管理页面，点击每个转码配置右边的编辑，即可进入编辑页面，修改内容完成后，点击【保存】按钮，即可完成修改。</span></span></p><p><img height="395" src="https://oscimg.oschina.net/oscnet/up-7c98b434dc65e950917e3cd72c21f9d874f.png" width="1000" referrerpolicy="no-referrer"></p><h4><span><span><span><strong><strong><span><span><strong>删除转码配置</strong></span></span></strong></strong></span></span></span></h4><p style="margin-left:0.0000pt; text-align:left"><span><span>在转码配置管理页面，点击每个转码配置右边的删除，点击确定后，就可以删除指定的转码配置。</span></span></p><p><img height="409" src="https://oscimg.oschina.net/oscnet/up-9e208823da14305cba5884021bef4c361c3.png" width="1000" referrerpolicy="no-referrer"></p><h4><span><span><span><strong><strong><span><span><strong>开启转码配置</strong></span></span></strong></strong></span></span></span></h4><p style="margin-left:0.0000pt; text-align:left"><span><span>在转码配置管理页面，点击每个转码配置状态，就可以切换开启</span></span><span><span>/</span></span><span><span>关闭转码配置。</span></span></p><p><img height="250" src="https://oscimg.oschina.net/oscnet/up-1d66d57bbe66c967a8a048e85ddab0faf35.png" width="1000" referrerpolicy="no-referrer"></p><h4><span><span><span><strong><strong><span><span><strong>转码进度</strong></span></span></strong></strong></span></span></span></h4><p style="margin-left:0.0000pt; text-align:left"><span><span>在转码进度页面可以实时查看转码进度，也可以对文件进行重新转码。</span></span></p><p><img height="283" src="https://oscimg.oschina.net/oscnet/up-3a41b586d0e603478b03372628a91b3477e.png" width="1000" referrerpolicy="no-referrer"></p><p style="margin-left:0.0000pt; text-align:left"><span><span>点击右边的【重新转码】按钮，就可以对文件重新转码。</span></span></p><p><img height="295" src="https://oscimg.oschina.net/oscnet/up-9879f4bfa8661840df0f33f7a28d679595f.png" width="1000" referrerpolicy="no-referrer"></p><h1>环境支持</h1><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">数据库：mysql</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">缓存：redis</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">文件服务器：nginx</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">部署前需修改 application.yml 文件中的 mysql 和 redis 信息，需要部署 nginx 服务作为文件服务器，nginx 配置可查看 「本地存储」 章节内容</p><h1>开发框架</h1><h2>后端</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">springboot3.x+mybatis+mybatis-plus</p><h2>前端</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">vue3+element-plus+vite</p><h1>系统配置</h1><h2>文件大小限制</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">默认支持 2G 文件上传，如果需要调整，修改 application.yml 中的以下 2 个参数：</p><div><pre><span><span style="color:#93a1a1"><span style="color:#6f42c1">spring</span></span><span><span style="color:#6f42c1">:</span></span></span><span><span style="color:#93a1a1"><span style="color:#6f42c1">servlet</span></span><span><span style="color:#6f42c1">:</span></span></span><span><span style="color:#93a1a1"><span style="color:#6f42c1">multipart</span></span><span><span style="color:#6f42c1">:</span></span></span><span><span style="color:#586e75"><span style="color:#6a737d">#单个文件最大限制</span></span></span><span><span style="color:#93a1a1"><span style="color:#6f42c1">max-file-size</span></span><span><span style="color:#6f42c1">:</span></span><span style="color:#2aa198"><span style="color:#032f62">2048MB</span></span></span><span><span style="color:#586e75"><span style="color:#6a737d">#总上传文件总大小</span></span></span><span><span style="color:#93a1a1"><span style="color:#6f42c1">max-request-size</span></span><span><span style="color:#6f42c1">:</span></span><span style="color:#2aa198"><span style="color:#032f62">2048MB</span></span></span></pre><div><h2>视频水印</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">视频水印只支持图片水印，要开启视频水印，需要先将视频水印图片放在项目目录下。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">水印文件固定路径：/resources/static/watermark.png</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">可以开启、关闭水印，可以设置水印位置，具体可以看以下水印的配置信息。</p><div><pre><span><span style="color:#93a1a1"><span style="color:#6f42c1">config</span></span><span><span style="color:#6f42c1">:</span></span></span><span><span style="color:#93a1a1"><span style="color:#6f42c1">video</span></span><span><span style="color:#6f42c1">:</span></span></span><span><span style="color:#586e75"><span style="color:#6a737d">#视频水印，水印图片固定在位置：/resources/static/watermark.png</span></span></span><span><span style="color:#93a1a1"><span style="color:#6f42c1">watermark</span></span><span><span style="color:#6f42c1">:</span></span></span><span><span style="color:#586e75"><span style="color:#6a737d">#开启/关闭水印，true 开启，false 关闭</span></span></span><span><span style="color:#93a1a1"><span style="color:#6f42c1">enable</span></span><span><span style="color:#6f42c1">:</span></span><span style="color:#cb4b16"><span style="color:#005cc5">true</span></span></span><span><span style="color:#586e75"><span style="color:#6a737d">#水印位置 TOP_LEFT 左上角，TOP_RIGHT 右上角，BOTTOM_LEFT 左下角，BOTTOM_RIGHT 右下角</span></span></span><span><span style="color:#93a1a1"><span style="color:#6f42c1">location</span></span><span><span style="color:#6f42c1">:</span></span><span style="color:#2aa198"><span style="color:#032f62">TOP_LEFT</span></span></span><span><span style="color:#586e75"><span style="color:#6a737d">#x、y 为对应 4 个角的距离，不能为负数，负数可能会报错</span></span></span><span><span style="color:#93a1a1"><span style="color:#6f42c1">offset-x</span></span><span><span style="color:#6f42c1">:</span></span><span style="color:#2aa198"><span>100</span></span></span><span><span style="color:#93a1a1"><span style="color:#6f42c1">offset-y</span></span><span><span style="color:#6f42c1">:</span></span><span style="color:#2aa198"><span>100</span></span></span></pre><div><h2>文档水印</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">文档水印只有在转成 pdf 后才可以添加水印，文档只能添加文字水印，可以配置当前时间。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">可以开启、关闭水印，可以设置水印位置，具体可以看以下水印的配置信息。</p><div><pre><span><span style="color:#93a1a1"><span style="color:#6f42c1">config</span></span><span><span style="color:#6f42c1">:</span></span></span><span><span style="color:#93a1a1"><span style="color:#6f42c1">document</span></span><span><span style="color:#6f42c1">:</span></span></span><span><span style="color:#93a1a1"><span style="color:#6f42c1">watermark</span></span><span><span style="color:#6f42c1">:</span></span></span><span><span style="color:#586e75"><span style="color:#6a737d">#开启/关闭水印，true 开启，false 关闭</span></span></span><span><span style="color:#93a1a1"><span style="color:#6f42c1">enable</span></span><span><span style="color:#6f42c1">:</span></span><span style="color:#cb4b16"><span style="color:#005cc5">true</span></span></span><span><span style="color:#586e75"><span style="color:#6a737d">#开启水印加上当前时间</span></span></span><span><span style="color:#93a1a1"><span style="color:#6f42c1">time-enable</span></span><span><span style="color:#6f42c1">:</span></span><span style="color:#cb4b16"><span style="color:#005cc5">true</span></span></span><span><span style="color:#586e75"><span style="color:#6a737d">#时间格式，yyyy 年、MM 月、dd 日、HH 小时、mm 分钟、ss 秒</span></span></span><span><span style="color:#93a1a1"><span style="color:#6f42c1">time-format</span></span><span><span style="color:#6f42c1">:</span></span><span style="color:#2aa198"><span style="color:#032f62">yyyy-MM-dd</span><span style="color:#032f62">HH🇲🇲ss</span></span></span><span><span style="color:#586e75"><span style="color:#6a737d">#水印内容，如果开启时间，会在内容后面加上时间</span></span></span><span><span style="color:#93a1a1"><span style="color:#6f42c1">content</span></span><span><span style="color:#6f42c1">:</span></span><span style="color:#2aa198"><span style="color:#032f62">凌夕文件管理系统</span></span></span><span><span style="color:#586e75"><span style="color:#6a737d">#文字大小</span></span></span><span><span style="color:#93a1a1"><span style="color:#6f42c1">font-size</span></span><span><span style="color:#6f42c1">:</span></span><span style="color:#2aa198"><span>12</span></span></span><span><span style="color:#586e75"><span style="color:#6a737d">#行距</span></span></span><span><span style="color:#93a1a1"><span style="color:#6f42c1">row-space</span></span><span><span style="color:#6f42c1">:</span></span><span style="color:#2aa198"><span>100</span></span></span><span><span style="color:#586e75"><span style="color:#6a737d">#列距</span></span></span><span><span style="color:#93a1a1"><span style="color:#6f42c1">col-space</span></span><span><span style="color:#6f42c1">:</span></span><span style="color:#2aa198"><span>150</span></span></span><span><span style="color:#586e75"><span style="color:#6a737d">#透明度</span></span></span><span><span style="color:#93a1a1"><span style="color:#6f42c1">alpha</span></span><span><span style="color:#6f42c1">:</span></span><span style="color:#2aa198"><span>0.1</span></span></span></pre><div><h2>文件存储</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">文件存储支持本地文件存储和 minio 存储（还未完善，如果有需要，可以继续完善该功能），在 application.yml 中可以设置存储类型</p><div><pre><span><span style="color:#93a1a1"><span>config</span></span><span>:</span></span><span><span style="color:#93a1a1">file-server</span><span>:</span></span><span><span style="color:#586e75">#文件服务，<span style="color:#d73a49">local</span>/minio，<span style="color:#d73a49">local</span>本地文件服务，minio minio 服务</span></span><span><span style="color:#93a1a1"><span>type</span></span><span>:</span><span style="color:#2aa198"><span style="color:#d73a49">local</span></span></span></pre><div><h3>本地存储</h3><h4>存储目录和访问配置</h4><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">本地存储需要配置本地存储文件路径（绝对路径）和本地文件预览地址，需要使用 nginx 配置 file-dir 的访问服务，preview-url 为 nginx 配置的域名和端口。</p><div><pre><span><span style="color:#93a1a1"><span style="color:#005cc5">config</span></span><span>:</span></span><span><span style="color:#93a1a1"><span style="color:#005cc5">file-server</span></span><span>:</span></span><span><span style="color:#93a1a1"><span style="color:#005cc5">local</span></span><span>:</span></span><span><span style="color:#586e75">#本地文件上传路径</span></span><span><span style="color:#93a1a1"><span style="color:#005cc5">file-dir</span></span><span>:</span><span style="color:#2aa198">/Users/zcx/develop/lfs/uploadFile</span></span><span><span style="color:#586e75">#本地文件预览地址</span></span><span><span style="color:#93a1a1"><span style="color:#005cc5">preview-url</span></span><span>:</span><span style="color:#2aa198"><span style="color:#005cc5">http</span>:<span style="color:#6a737d">//127.0.0.1:8918</span></span></span></pre><div><h4>nginx 配置</h4><div><pre><span><span style="color:#859900"><span style="color:#22863a">server</span></span><span style="color:#93a1a1">{</span></span><span><span style="color:#859900"><span style="color:#005cc5">listen</span></span><span style="color:#2aa198"><span>8918</span></span><span style="color:#93a1a1">;</span></span><span><span style="color:#859900"><span style="color:#005cc5">server_name</span></span><span style="color:#2aa198">localhost</span><span style="color:#93a1a1">;</span></span><span><span style="color:#859900"><span style="color:#005cc5">location</span></span><span style="color:#93a1a1"><span>~</span></span><span></span><span style="color:#dc322f"><span>.*\\.ts</span></span><span style="color:#93a1a1">{</span></span><span><span style="color:#859900"><span style="color:#005cc5">root</span></span><span style="color:#93a1a1">/Users/zcx/develop/lfs/uploadFile</span><span style="color:#93a1a1">;</span></span><span><span style="color:#93a1a1">}</span></span><span><span style="color:#859900"><span style="color:#005cc5">location</span></span><span style="color:#93a1a1"><span>~</span></span><span></span><span style="color:#dc322f"><span>.*/thum/.*</span></span><span style="color:#93a1a1">{</span></span><span><span style="color:#859900"><span style="color:#005cc5">root</span></span><span style="color:#93a1a1">/Users/zcx/develop/lfs/uploadFile</span><span style="color:#93a1a1">;</span></span><span><span style="color:#93a1a1">}</span></span><span><span style="color:#859900"><span style="color:#005cc5">location</span></span><span style="color:#93a1a1">/</span><span style="color:#93a1a1">{</span></span><span><span style="color:#859900"><span style="color:#005cc5">root</span></span><span style="color:#93a1a1">/Users/zcx/develop/lfs/uploadFile</span><span style="color:#93a1a1">;</span></span><span><span style="color:#859900"><span style="color:#005cc5">index</span></span><span style="color:#2aa198">index.html</span><span style="color:#2aa198">index.htm</span><span style="color:#93a1a1">;</span></span><span></span><span><span style="color:#859900"><span style="color:#005cc5">if</span></span><span style="color:#2aa198">(</span><span style="color:#268bd2"><span style="color:#032f62">$arg_oper</span></span><span style="color:#93a1a1">=</span><span style="color:#2aa198"><span style="color:#032f62">"down"</span>)</span><span style="color:#93a1a1">{</span></span><span><span style="color:#859900"><span style="color:#005cc5">add_header</span></span><span style="color:#2aa198">Content-Disposition</span><span style="color:#2aa198"><span style="color:#032f62">"attachment</span></span><span style="color:#93a1a1"><span style="color:#032f62">;</span></span><span style="color:#859900"><span style="color:#032f62">filename=</span></span><span style="color:#268bd2"><span style="color:#032f62"><span style="color:#032f62">$arg_filename</span></span></span><span style="color:#2aa198"><span style="color:#032f62">"</span></span><span style="color:#93a1a1">;</span></span><span><span style="color:#93a1a1">}</span></span><span><span style="color:#859900"><span style="color:#005cc5">secure_link</span></span><span style="color:#268bd2"><span style="color:#032f62">$arg_secret</span></span><span style="color:#2aa198">,</span><span style="color:#268bd2"><span style="color:#032f62">$arg_expire</span></span><span style="color:#93a1a1">;</span></span><span><span style="color:#859900"><span style="color:#005cc5">secure_link_md5</span></span><span style="color:#2aa198">e9eaa184ac1b4068829edb4f3ea978f4</span><span style="color:#268bd2"><span style="color:#032f62">$uri</span><span style="color:#032f62">$arg_expire</span></span><span style="color:#93a1a1">;</span></span><span><span style="color:#859900"><span style="color:#005cc5">if</span></span><span style="color:#2aa198">(</span><span style="color:#268bd2"><span style="color:#032f62">$secure_link</span></span><span style="color:#93a1a1">=</span><span style="color:#2aa198"><span style="color:#032f62">""</span>)</span><span style="color:#93a1a1">{</span></span><span><span style="color:#859900"><span style="color:#005cc5">return</span></span><span style="color:#2aa198"><span>403</span></span><span style="color:#93a1a1">;</span></span><span><span style="color:#93a1a1">}</span></span><span><span style="color:#859900"><span style="color:#005cc5">if</span></span><span style="color:#2aa198">(</span><span style="color:#268bd2"><span style="color:#032f62">$secure_link</span></span><span style="color:#93a1a1">=</span><span style="color:#2aa198"><span style="color:#032f62">"0"</span>)</span><span style="color:#93a1a1">{</span></span><span><span style="color:#859900"><span style="color:#005cc5">return</span></span><span style="color:#2aa198"><span>403</span></span><span style="color:#93a1a1">;</span></span><span><span style="color:#93a1a1">}</span></span><span><span style="color:#93a1a1">}</span></span><span><span style="color:#93a1a1">}</span></span></pre><div><h4>防盗链配置</h4><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">防盗链需要配置密钥和有效期时间，需要 nginx 配置配合，nginx 配置可以查看上节 nginx 配置，配置的密钥需要和 nginx 中的密钥一致。</p><div><pre><span><span style="color:#93a1a1"><span style="color:#6f42c1">config</span></span><span><span style="color:#6f42c1">:</span></span></span><span><span style="color:#93a1a1"><span style="color:#6f42c1">file-server</span></span><span><span style="color:#6f42c1">:</span></span></span><span><span style="color:#93a1a1"><span style="color:#6f42c1">local</span></span><span><span style="color:#6f42c1">:</span></span></span><span><span style="color:#586e75"><span style="color:#6a737d">#密钥</span></span></span><span><span style="color:#93a1a1"><span style="color:#6f42c1">secret</span></span><span><span style="color:#6f42c1">:</span></span><span style="color:#2aa198"><span style="color:#032f62">e9eaa184ac1b4068829edb4f3ea978f4</span></span></span><span><span style="color:#586e75"><span style="color:#6a737d"># 防盗链 st 有效时长（秒）</span></span></span><span><span style="color:#93a1a1"><span style="color:#6f42c1">st-effective-time</span></span><span><span style="color:#6f42c1">:</span></span><span style="color:#2aa198"><span>86400</span></span></span></pre><div><h3>minio 存储（未完善）</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">需要配置 minio 服务相关信息，如下：</p><div><pre><span><span style="color:#93a1a1"><span style="color:#005cc5">config</span></span><span>:</span></span><span><span style="color:#93a1a1"><span style="color:#005cc5">file-server</span></span><span>:</span></span><span><span style="color:#93a1a1"><span style="color:#005cc5">minio</span></span><span>:</span></span><span><span style="color:#93a1a1"><span style="color:#005cc5">access-key</span></span><span>:</span><span style="color:#2aa198">HgiCBQslp8LDfNyWuTOj</span></span><span><span style="color:#93a1a1"><span style="color:#005cc5">secret-key</span></span><span>:</span><span style="color:#2aa198"><span>65</span>Quqe4SR881xrs9je9A4vjRNtoWmkYvtT78mL9b</span></span><span><span style="color:#93a1a1"><span style="color:#005cc5">url</span></span><span>:</span><span style="color:#2aa198"><span style="color:#005cc5">http</span>:<span style="color:#6a737d">//127.0.0.1:9000</span></span></span><span><span style="color:#93a1a1"><span style="color:#005cc5">bucket-name</span></span><span>:</span><span style="color:#2aa198">test</span></span></pre><div><h1>文件上传</h1><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">目前未限制文件上传格式，如果有需要，可以增加限制。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">每个上传 ID 只能上传一个文件，如果上传多个文件用同一个上传 ID，会导致上传失败。</p><h2>本地文件存储</h2><ul><li>原文件：{config.file-server.local.file-dir}/files/{uuid + 后缀}</li></ul><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">如：/Users/zcx/develop/lfs/uploadFile/files/0cc01a75-399a-446c-8b26-902e95178856.mp4</p><ul><li>视频转码文件：{config.file-server.local.file-dir}/trans/video/{uuid + 后缀}</li></ul><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">如：/Users/zcx/develop/lfs/uploadFile/trans/video/8ab4b994-a4a8-42f6-8b1d-55e6abbb123c.mp4</p><ul><li>文档转码文件：{config.file-server.local.file-dir}/trans/document/{uuid + 后缀}</li></ul><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">如：/Users/zcx/develop/lfs/uploadFile/trans/document/8ab4b994-a4a8-42f6-8b1d-55e6abbb123c.mp4</p><ul><li>视频 hls 文件：</li></ul><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">{config.file-server.local.file-dir}/trans/hls/uuid/video.m3u8</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">{config.file-server.local.file-dir}/trans/hls/uuid/video_{分片编号}.ts</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">如：/Users/zcx/develop/lfs/uploadFile/trans/hls/65498aa0-5b0e-4959-9127-fc1f57cc98d4/video.m3u8</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">/Users/zcx/develop/lfs/uploadFile/trans/hls/65498aa0-5b0e-4959-9127-fc1f57cc98d4/video_0.ts</p><blockquote><p style="margin-left:0; margin-right:0; text-align:left">注：一个视频 hls 文件会有 m3u8 和 ts 两种文件格式，m3u8 文件一个，ts 文件若干个，每个 ts 文件有 10 秒视频，ts 文件编号从 0 开始</p></blockquote><ul><li>视频封面文件：{config.file-server.local.file-dir}/thum/ 原文件 md5 值 / 截取图片所在秒数.jpg</li></ul><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">如：/Users/zcx/develop/lfs/uploadFile/thum/db94fba515e9c0dc7cb20dbf06bc410c/1.jpg</p><h2>文件分片上传流程</h2><h3>正常流程</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://gitee.com/lxinet/lfs/raw/master/imgs/upload_file_flow.jpeg" referrerpolicy="no-referrer"></p><h3>秒传</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://gitee.com/lxinet/lfs/raw/master/imgs/fast_upload_file_flow.jpeg" referrerpolicy="no-referrer"></p><h1>接口</h1><h2>获取 token</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">地址：/getToken</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">请求方式：POST</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">请求参数：</p><ul><li>appId：YbcKSAlou6UREvkwJmTx</li><li>appSecret：95NmdotNX939f4gk7vTd3cHkMd8LhBcSzPn50G8c</li></ul><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">响应数据：</p><div><pre><span><span style="color:#93a1a1">{</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"code"</span></span><span style="color:#93a1a1">:</span><span style="color:#2aa198"><span>0</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"msg"</span></span><span style="color:#93a1a1">:</span><span style="color:#2aa198"><span style="color:#032f62">"操作成功"</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"data"</span></span><span style="color:#93a1a1">:</span><span style="color:#2aa198"><span style="color:#032f62">"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiIiLCJpYXQiOjE3MDY1MDgwOTYsImV4cCI6MTcwNjUyMjQ5NiwiYXBwSWQiOiJMZ2lDQlFzbHA4TERmTnlXdWpNbyJ9.2sAq09kEpV7teYwqIa6CxRwzAQSVrv2TeMYy5A9NS_8"</span></span></span><span><span style="color:#93a1a1">}</span></span></pre><div><h2>上传初始化（秒传）</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">地址：/file/uploadInit</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">请求方式：POST</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">header 参数：token</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">请求参数：</p><ul><li>dirId：文件夹 id</li><li>fileName：文件名</li><li>md5：文件 md5</li></ul><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">响应数据：</p><ul><li>正常上传：</li></ul><div><pre><span><span style="color:#93a1a1">{</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"code"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span>0</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"data"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#93a1a1">{</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"upload"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#93a1a1">{</span></span><span><span style="color:#93a1a1"></span><span><span style="color:#6a737d">//上传 id，秒传时，不返回上传 id</span></span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"uploadId"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span style="color:#032f62">"a0dacab1-7a04-4c5c-b751-46cea30ee974"</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span><span style="color:#6a737d">//是否跳过上传，如果为</span></span><span style="color:#cb4b16"><span style="color:#6a737d">true</span></span><span><span style="color:#6a737d">，说明秒传，不需要再调用上传文件接口，并且会返回文件 id（fileId），如果为</span></span><span style="color:#cb4b16"><span style="color:#6a737d">false</span></span><span><span style="color:#6a737d">，走正常上传流程</span></span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"skip"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#cb4b16"><span style="color:#005cc5">false</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span><span style="color:#6a737d">//文件 id</span></span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"fileId"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span>0</span></span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1">},</span></span><span><span style="color:#93a1a1"></span><span><span style="color:#6a737d">//服务当前使用的上传服务，local 本地文件服务，minio</span></span><span style="color:#93a1a1"><span style="color:#6a737d"></span></span><span><span style="color:#6a737d">minio 服务</span></span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"fileServerType"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span style="color:#032f62">"local"</span></span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1">}</span></span><span><span style="color:#93a1a1">}</span></span></pre><div><ul><li>秒传：</li></ul><div><pre><span><span style="color:#93a1a1">{</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"code"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span>0</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"data"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#93a1a1">{</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"upload"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#93a1a1">{</span></span><span><span style="color:#93a1a1"></span><span><span style="color:#6a737d">//上传 id，秒传时，不返回上传 id</span></span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"uploadId"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span style="color:#032f62">""</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span><span style="color:#6a737d">//是否跳过上传，如果为</span></span><span style="color:#cb4b16"><span style="color:#6a737d">true</span></span><span><span style="color:#6a737d">，说明秒传，不需要再调用上传文件接口，并且会返回文件 id（fileId），如果为</span></span><span style="color:#cb4b16"><span style="color:#6a737d">false</span></span><span><span style="color:#6a737d">，走正常上传流程</span></span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"skip"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#cb4b16"><span style="color:#005cc5">true</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span><span style="color:#6a737d">//文件 id</span></span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"fileId"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span>1747524994864275458</span></span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1">},</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"fileServerType"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span style="color:#032f62">"local"</span></span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1">}</span></span><span><span style="color:#93a1a1">}</span></span></pre><div><h2>上传文件 / 分片</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">地址：/file/upload</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">请求方式：POST</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">header 参数：token</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">请求参数：</p><ul><li>file: 文件</li><li>chunkNumber: 当前分片编号</li><li>chunkTotal: 总分片数</li><li>fileName: 文件名</li><li>uploadId: 上传 id，初始化接口获取到的上传 id</li><li>dirId：文件夹 id</li></ul><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">响应数据：</p><ul><li>上传分片</li></ul><div><pre><span><span style="color:#93a1a1">{</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"code"</span></span><span style="color:#93a1a1">:</span><span style="color:#2aa198"><span>0</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"msg"</span></span><span style="color:#93a1a1">:</span><span style="color:#2aa198"><span style="color:#032f62">"分片上传完成"</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"data"</span></span><span style="color:#93a1a1">:</span><span style="color:#2aa198"><span>0</span></span></span><span><span style="color:#93a1a1">}</span></span></pre><div><ul><li>合并完成</li></ul><div><pre><span><span style="color:#93a1a1">{</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"code"</span></span><span style="color:#93a1a1">:</span><span style="color:#2aa198"><span>0</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"msg"</span></span><span style="color:#93a1a1">:</span><span style="color:#2aa198"><span style="color:#032f62">"合并完成"</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"data"</span></span><span style="color:#93a1a1">:</span><span style="color:#2aa198"><span style="color:#032f62">"1745604715384700930"</span></span></span><span><span style="color:#93a1a1">}</span></span></pre><div><h2>创建文件夹</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">地址：/file/dirAdd</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">请求方式：POST</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">header 参数：token</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">请求参数：</p><ul><li>dirId：上级文件夹 id</li><li>name：文件夹名称</li></ul><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">响应数据：</p><div><pre><span><span style="color:#93a1a1">{</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"code"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span>0</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"msg"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span style="color:#032f62">"操作成功"</span></span></span><span><span style="color:#93a1a1">}</span></span></pre><div><h2>文件 / 文件夹重命名</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">地址：/file/rename</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">请求方式：POST</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">header 参数：token</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">请求参数：</p><ul><li>id：文件 id</li><li>name：文件 / 文件夹新名字</li></ul><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">响应数据：</p><div><pre><span><span style="color:#93a1a1">{</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"code"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span>0</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"msg"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span style="color:#032f62">"操作成功"</span></span></span><span><span style="color:#93a1a1">}</span></span></pre><div><h2>获取文件列表（分页）</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">地址：/file/list</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">请求方式：GET</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">header 参数：token</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">请求参数：</p><ul><li>dirId：所在文件夹 id</li><li>pageNo：当前第几页，默认 1</li><li>pageSize：每页数量，默认 10</li></ul><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">响应数据：</p><div><pre><span><span style="color:#93a1a1">{</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"code"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span>0</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"msg"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span style="color:#032f62">"操作成功"</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"data"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#93a1a1">{</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"records"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#93a1a1">[</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1">{</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"id"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span style="color:#032f62">"1750762969215533058"</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"name"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span style="color:#032f62">"新建文件夹"</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"isDir"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span>1</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"dirId"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span style="color:#032f62">"0"</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"fileSize"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span style="color:#032f62">"0"</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"duration"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span style="color:#032f62">"0"</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"transStatus"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span>0</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"createTime"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span style="color:#032f62">"2024-01-26 06:09:54"</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"thumUrl"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span style="color:#032f62">""</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"fileType"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span>0</span></span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1">},</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1">{</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"id"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span style="color:#032f62">"1747889182539296769"</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"name"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span style="color:#032f62">"6c26d76632e5b05779e3f2bc91e8aedf.m4v"</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"isDir"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span>0</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"dirId"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span style="color:#032f62">"0"</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"fileSize"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span style="color:#032f62">"60221473"</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"suffix"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span style="color:#032f62">".m4v"</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"md5"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span style="color:#032f62">"a67c7577e464acf66a802a2dddf2ee39"</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"duration"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span style="color:#032f62">"31"</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"transStatus"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span>1</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"createTime"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span style="color:#032f62">"2024-01-18 07:50:29"</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"fileUrl"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span style="color:#032f62">"http://127.0.0.1:8918/files/515f4fa8-0f1e-47b3-9f04-b922c9ab0371.m4v"</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"fileTransUrls"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#93a1a1">[</span></span><span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span style="color:#032f62">"http://127.0.0.1:8918/trans/hls/a62aaf96-07d4-42fd-b5e2-bc86cc61e73d/video.m3u8"</span></span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1">],</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"thumUrl"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span style="color:#032f62">"http://127.0.0.1:8918/thum/a67c7577e464acf66a802a2dddf2ee39/1.jpg"</span></span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1">}</span></span><span><span style="color:#93a1a1"></span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1">],</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"total"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span style="color:#032f62">"32"</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"size"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span style="color:#032f62">"10"</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"current"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span style="color:#032f62">"1"</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"pages"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span style="color:#032f62">"4"</span></span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1">}</span></span><span><span style="color:#93a1a1">}</span></span></pre><div><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">参数说明：</p><ul><li>id：文件 ID</li><li>name：文件名</li><li>isDir：是否文件名，0 是文件，1 是文件夹</li><li>dirId：所在文件夹 id</li><li>fileSize：文件大小（B）</li><li>suffix：文件后缀</li><li>md5：文件 md5</li><li>duration：视频为时长（秒），文档为转 pdf 后的页数，其他文件为 0</li><li>transStatus：转码状态，0 正在转码，1 转码成功，2 部分转码成功，3 转码失败，4 不需要转码，5 不支持转码，6 取消转码</li><li>createTime：上传时间，格式：yyyy-MM-dd HH🇲🇲ss</li><li>fileUrl：原文件地址</li><li>fileTransUrls：转码后的文件列表（根据开启的转码模板数量而定）</li><li>thumUrl：文件封面地址</li></ul><h2>获取文件详情</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">地址：/file/detail/</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">请求方式：GET</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">header 参数：token</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">响应数据：</p><div><pre><span><span style="color:#93a1a1">{</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"code"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span>0</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"msg"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span style="color:#032f62">"操作成功"</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"data"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#93a1a1">{</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"id"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span style="color:#032f62">"1759776044321124353"</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"name"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span style="color:#032f62">"文件管理系统.pptx"</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"isDir"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span>0</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"dirId"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span style="color:#032f62">"0"</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"fileSize"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span style="color:#032f62">"2659028"</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"suffix"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span style="color:#032f62">".pptx"</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"md5"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span style="color:#032f62">"269059d792de04d14ce3354d76b9d617"</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"duration"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span style="color:#032f62">"25"</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"transStatus"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span>1</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"createTime"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span style="color:#032f62">"2024-02-20 03:04:38"</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"previewUrl"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span style="color:#032f62">"http://127.0.0.1:8918/trans/document/39f8d3fa-fcea-4a1b-aefc-f916eca0d559.pdf?st=gy7dPuGlh2Io4mIQ-eCPQQ&amp;e=1709703848"</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"progressList"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#93a1a1">[</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1">{</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"id"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span style="color:#032f62">"1759776044639891458"</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"fileTransId"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span style="color:#032f62">"1759776224541978625"</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"progress"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span>100.0</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"format"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span style="color:#032f62">"pdf"</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"transStatus"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span>1</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"startTime"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span style="color:#032f62">"1708398278757"</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"endTime"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span style="color:#032f62">"1708398321706"</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"previewUrl"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span style="color:#032f62">"http://127.0.0.1:8918/trans/document/39f8d3fa-fcea-4a1b-aefc-f916eca0d559.pdf?st=gy7dPuGlh2Io4mIQ-eCPQQ&amp;e=1709703848"</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"fileSize"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span style="color:#032f62">"34518359"</span></span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1">}</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1">],</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"thumUrl"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span style="color:#032f62">"http://127.0.0.1:8918/thum/269059d792de04d14ce3354d76b9d617/1.jpg?st=esCMdzh-HZeqA29W1fFUIA&amp;e=1709703848"</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"fileType"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span>3</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"pdfWatermark"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span style="color:#032f62">"凌夕文件管理系统 2024-03-06 13:39:08"</span></span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1">}</span></span><span><span style="color:#93a1a1">}</span></span></pre><div><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">参数说明：</p><ul><li>id：文件 ID</li><li>name：文件名</li><li>isDir：是否文件夹，0 不是，1 是文件夹</li><li>dirId：文件所在文件夹 id，最上层目录，为 0</li><li>fileSize：文件大小（B）</li><li>suffix：文件后缀</li><li>md5：文件 md5</li><li>duration：视频为时长（秒），文档为转 pdf 后的页数，其他文件为 0</li><li>transStatus：转码状态，0 正在转码，1 转码成功，2 部分转码成功，3 转码失败，4 不需要转码，5 不支持转码，6 取消转码</li><li>createTime：上传时间，格式：yyyy-MM-dd HH🇲🇲ss</li><li>thumUrl：文件封面地址</li><li>fileType：文件大的类型，1 为视频，2 为文档</li><li>previewUrl：文件预览地址</li><li>pdfWatermark：pdf 文件预览的水印内容，用 element-plus 实现页面水印</li><li>progressList：转码进度列表，转码中和部分转码成功才会有该值，其他情况不会有该值，如果是视频，可能会多个进度，文档就一个进度，如果多个进度，当前转码进度需要取平均值 
                                      <ul><li>id：转码进度 id</li><li>fileTransId：转码后文件 id</li><li>progress：转码进度</li><li>format：转码格式</li><li>transStatus：转码状态，0 正在转码，1 转码成功，2 部分转码成功，3 转码失败，4 不需要转码，5 不支持转码，6 取消转码</li><li>startTime：开始转码时间（时间戳，毫秒）</li><li>endTime：结束转码时间（时间戳，毫秒）</li><li>previewUrl：转码后的文件预览地址</li><li>fileSize：转码后的文件大小（B）</li></ul></li></ul><h2>删除文件 / 文件夹</h2><blockquote><p style="margin-left:0; margin-right:0; text-align:left">如果删除文件夹，文件夹下的文件和文件夹都会被删除</p></blockquote><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">地址：/file/delete</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">请求方式：GET</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">header 参数：token</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">请求参数：</p><ul><li>id：文件 / 文件夹 id</li></ul><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">响应数据：</p><div><pre><span><span style="color:#93a1a1">{</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"code"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span>0</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"msg"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span style="color:#032f62">"操作成功"</span></span></span><span><span style="color:#93a1a1">}</span></span></pre><div><h2>获取转码模板列表</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">地址：/transTemplate/list</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">请求方式：GET</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">header 参数：token</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">请求参数：无</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">响应数据：</p><div><pre><span><span style="color:#93a1a1">{</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"code"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span>0</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"msg"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span style="color:#032f62">"操作成功"</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"data"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#93a1a1">[</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1">{</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"id"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span>1746778020070301697</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"name"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span style="color:#032f62">"普清"</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"status"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span>0</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"width"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span>0</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"height"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span>1080</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"format"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span style="color:#032f62">"m3u8"</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"frameRate"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span>20</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"bitRate"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span>2000</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"codec"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span style="color:#032f62">"h264"</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"audioCodec"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span style="color:#032f62">"aac"</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"audioChannel"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span>2</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"audioBitRate"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span>112</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"audioSampleRate"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span>8000</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"createTime"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span style="color:#032f62">"2024-01-15 06:15:08"</span></span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1">}</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1">]</span></span><span><span style="color:#93a1a1">}</span></span></pre><div><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">参数说明：</p><ul><li>id：模板 ID</li><li>name：模板名称</li><li>status：状态，是否开启转码，0 关闭，1 开启</li><li>width：分辨率（宽）</li><li>height：分辨率（高）</li><li>format：转码输出格式</li><li>frameRate：视频帧率</li><li>codec：视频编解码器</li><li>bitRate：视频比特率（码率）</li><li>audioBitRate：音频比特率（码率）</li><li>audioSampleRate：音频采样率</li><li>audioChannel：音频声道</li><li>audioCodec：音频编解码器</li></ul><h2>新增 / 更新转码模板</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">地址：/transTemplate/save</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">请求方式：POST</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">header 参数：token</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">请求参数：</p><ul><li>id：模板 ID，新增时不要传该参数，是否有 id 参数是区分新增、更新操作</li><li>name：模板名称</li><li>width：分辨率（宽），如：1920</li><li>height：分辨率（高），如：1080</li><li>format：转码输出格式，可选：mp4、m3u8</li><li>frameRate：视频帧率，可选：15、20、25、30、40、50、60</li><li>codec：视频编解码器，可选：H264</li><li>bitRate：视频比特率（码率），可选：500、800、1200、2000、3000、5000、8000</li><li>audioBitRate：音频比特率（码率），可选：16、32、48、64、80、96、112、128、160、192、224、256、320、384、448、512</li><li>audioSampleRate：音频采样率，可选：8000、11025、12000、16000、22050、24000、32000、44100、48000、64000、88200、96000</li><li>audioChannel：音频声道，可选：1、2</li><li>audioCodec：音频编解码器，可选：aac</li><li>waterMarkId：水印模板 id</li></ul><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">响应数据：</p><div><pre><span><span style="color:#93a1a1">{</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"code"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span>0</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"msg"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span style="color:#032f62">"操作成功"</span></span></span><span><span style="color:#93a1a1">}</span></span></pre><div><h2>关闭 / 开启转码模板</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">地址：/transTemplate/updateStatus</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">请求方式：POST</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">header 参数：token</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">请求参数：</p><ul><li>id：模板 ID，新增时不要传该参数，是否有 id 参数是区分新增、更新操作</li><li>status：状态，是否开启转码，0 关闭，1 开启</li></ul><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">响应数据：</p><ul><li>成功</li></ul><div><pre><span><span style="color:#93a1a1">{</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"code"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span>0</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"msg"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span style="color:#032f62">"操作成功"</span></span></span><span><span style="color:#93a1a1">}</span></span></pre><div><ul><li>失败</li></ul><div><pre><span><span style="color:#93a1a1">{</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"code"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span>1007</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"msg"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span style="color:#032f62">"视频转码模板不存在"</span></span></span><span><span style="color:#93a1a1">}</span></span></pre><div><h2>删除转码模板</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">地址：/transTemplate/delete</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">请求方式：POST</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">header 参数：token</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">请求参数：</p><ul><li>id：模板 ID</li></ul><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">响应数据：</p><ul><li>成功</li></ul><div><pre><span><span style="color:#93a1a1">{</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"code"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span>0</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"msg"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span style="color:#032f62">"操作成功"</span></span></span><span><span style="color:#93a1a1">}</span></span></pre><div><h2>文件上传成功后缩略图列表</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">文件上传后，如果马上调用该接口，可能返回的列表是空的，因为生成缩略图需要时间，可能需要几秒钟，所以在显示缩略图列表选择页面，如果获取到的数据是空的，最好重试几次，直到获取到数据、或者超时给用户提示。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">地址：/file/thumList</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">请求方式：GET</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">header 参数：token</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">请求参数：</p><ul><li>md5：文件 md5</li></ul><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">响应数据：</p><ul><li>成功</li></ul><div><pre><span><span style="color:#93a1a1">{</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"code"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span>0</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"msg"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span style="color:#032f62">"操作成功"</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"data"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#93a1a1">[</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1">{</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"id"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span>1747079912013021186</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"fileUrl"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span style="color:#032f62">"http://127.0.0.1:8918/thum/db94fba515e9c0dc7cb20dbf06bc410c/1.jpg"</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"duration"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span>1</span></span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1">}</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1">]</span></span><span><span style="color:#93a1a1">}</span></span></pre><div><h2>更新文件缩略图</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">地址：/file/updateFileThum</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">请求方式：POST</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">header 参数：token</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">请求参数：</p><ul><li>fileId：文件 id</li><li>thumId：缩略图 id</li></ul><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">响应数据：</p><div><pre><span><span style="color:#93a1a1">{</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"code"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span>0</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"msg"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span style="color:#032f62">"操作成功"</span></span></span><span><span style="color:#93a1a1">}</span></span></pre><div><h2>手动转码</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">地址：/file/manualTranscode</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">请求方式：POST</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">header 参数：token</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">请求参数：</p><ul><li>fileId：文件 id</li></ul><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">响应数据：</p><ul><li>成功</li></ul><div><pre><span><span style="color:#93a1a1">{</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"code"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span>0</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"msg"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span style="color:#032f62">"操作成功"</span></span></span><span><span style="color:#93a1a1">}</span></span></pre><div><ul><li>失败</li></ul><div><pre><span><span style="color:#93a1a1">{</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"code"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span>1012</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"msg"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span style="color:#032f62">"该文件不支持转码"</span></span></span><span><span style="color:#93a1a1">}</span></span></pre><div><h2>转码列表</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">地址：/transProgress/list</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">请求方式：GET</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">header 参数：token</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">请求参数：</p><ul><li>pageNo：当前第几页，默认 1</li><li>pageSize：每页数量，默认 10</li></ul><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">响应数据：</p><div><pre><span><span style="color:#93a1a1">{</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"code"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span>0</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"msg"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span style="color:#032f62">"操作成功"</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"data"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#93a1a1">{</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"records"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#93a1a1">[</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1">{</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"id"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span style="color:#032f62">"1749360770384216065"</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"fileId"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span style="color:#032f62">"1749360770249998339"</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"fileTransId"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span style="color:#032f62">"1749360775123779586"</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"progress"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span>100.0</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"format"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span style="color:#032f62">"pdf"</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"transStatus"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span>1</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"startTime"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span style="color:#032f62">"1705915083869"</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"endTime"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span style="color:#032f62">"1705915085036"</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"fileName"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span style="color:#032f62">"常用软件.xlsx"</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"createTime"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span style="color:#032f62">"2024-01-22 09:18:03"</span></span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1">}</span></span><span><span style="color:#93a1a1"></span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1">],</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"total"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span style="color:#032f62">"26"</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"size"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span style="color:#032f62">"10"</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"current"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span style="color:#032f62">"1"</span></span><span style="color:#93a1a1">,</span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1"><span style="color:#6f42c1">"pages"</span></span><span style="color:#93a1a1">:</span><span style="color:#93a1a1"></span><span style="color:#2aa198"><span style="color:#032f62">"3"</span></span></span><span><span style="color:#93a1a1"></span><span style="color:#93a1a1">}</span></span><span><span style="color:#93a1a1">}</span></span></pre><div><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">参数说明：</p><ul><li>id：转码 ID</li><li>fileId：文件 id</li><li>fileName：文件名</li><li>fileTransId：转码后的文件 id</li><li>progress：转码进度，0-100</li><li>format：转码输出格式</li><li>transStatus：转码状态，0 正在转码，1 转码成功，3 转码失败</li><li>startTime：开始转码时间（时间戳）</li><li>endTime：完成转码时间（时间戳），进行中为 0，如要计算进行中转码时长，使用当前时间进行计算</li><li>createTime：创建转码时间，创建转码时，不一定马上开始转码了，开始转码时间要看 startTime</li></ul><h1>转码配置</h1><h2>模板名称</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">设置模板名称 name</p><h2>视频</h2><h3>分辨率</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">分辨率可以设置宽和高，宽和高至少设置 1 个，另一个可以设置，也可以设置为 0，如果设置为 0，自动根据原视频宽高计算。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">分辨率设置的是 PAR（图像纵横比），默认未指定 sar 或者 dar 时，dar 不会变，sar 会被设置为跟 par 比例一样，所以转码的视频比例也不会变，宽度根据高度自动计算，即指定的宽度无效。</p><ul><li>PAR 图像纵横比：PAR=（每行像素数）/（每列像素数）= 分辨率</li><li>SAR 样点纵横比：SAR=（像素的宽）/（像素的高）。像素不一定都是正方形的。</li><li>DAR 显示纵横比：一般说的 16:9 和 4:3 指的是 DAR。DAR=（每行像素数像素的宽）/（每列像素数像素的高），即 DAR=PAR*SAR</li></ul><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">480p = 标清 = 640x480</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">720p = 高清 = 1280×720p</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">1080p = 蓝光 = 1920x1080p</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">2K=1440P=2560x1440</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">4K=2160P=3840x2160</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">8K=4320P= 7680×4320</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">高度默认：1080</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">宽度默认：0（自动计算）</p><h3>转码格式</h3><ul><li>选项：mp4、m3u8</li><li>默认：mp4</li></ul><h3>视频帧率</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">视频帧率是用于测量显示帧数的量度。所谓的测量单位为每秒显示帧数 (Frames per Second, 简：FPS) 或 "赫兹"(Hz)</p><ul><li>选项：15、20、25、30、40、50、60</li><li>默认：30</li></ul><h3>视频比特率（码率 kbps）</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">通常也叫码率是指单位时间内传送的比特 (bit) 数，单位为 bps (bit per second）</p><ul><li>选项：500、800、1200、2000、3000、5000、8000</li><li>默认：1200</li></ul><h3>编解码器</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">H264 通常也被称之为 H264/AVC（或者 H.264/MPEG-4 AVC 或 MPEG-4/H.264 AVC），H264 有高效的视频压缩算法来压缩视频的占用空间，提高存储和传输的效率，在获得有效的压缩效果的同时，使得压缩过程引起的失真最小。H264 是目前较为主流的编码标准。</p><ul><li>选项：h264</li><li>默认：h264</li></ul><h3>封面截图</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">每个 md5 的视频文件，会截取 10 张封面用来选择，截图规则是分别取第 1、3、5、7 秒、视频时长 / 2 秒、视频时长 / 2 + 2 秒、倒数第 7、5、3、1 秒的画面。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">截图格式为 jpg 图片。</p><h2>音频</h2><h3>编解码器</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">目前音频基本都用 AAC 编码，因为这个编码目前来说压缩率高，而且音质损失极底。</p><ul><li>选项：aac</li><li>默认：aac</li></ul><h3>声道</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">单声道：是指一个声音的通道，把来自不同方位的音频信号混合后统一由录音器材把它记录下来，再由一个扬声器进行重放（没有左右声道之分）。早期的收音机都是单声道的，耳机就一个耳朵。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">双声道：是指有两个声音的通道，双声道是在空间放置两个互成一定角度的扬声器，每个扬声器单独由一个声道提供信号。双声道是二路输入，二路输出，但不一定是立体声。（左右声道都只有一路的信号输入），也称为双声道混和声。</p><ul><li>选项：1、2</li><li>默认：2</li></ul><h3>音频码率（音频比特率）</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">一般普通音质码率大致在 80164kbps 左右，HQ 高音质 192320kbps 左右，SQ 无损 800~1500kbps 左右，CD 及其它无压缩音质数值过万甚至更高。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">普通音质转成无损音质，并不是成了无损音乐，反而体积增大了，这就是所谓假无损。</p><ul><li>选项：16、32、48、64、80、96、112、128、160、192、224、256、320、384、448、512</li><li>默认：128</li></ul><h3>音频采样率</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">音频采样率是指录音设备在一秒钟内对声音信号的采样次数，它决定了数字音频信号的分辨率。采样率的单位通常是赫兹（Hz）。采样率越高，理论上能够捕捉到的声音细节越多，从而产生的声音质量也更高。</p><ul><li>选项：8000、11025、12000、16000、22050、24000、32000、44100、48000、64000、88200、96000</li><li>默认：48000</li><li>部分说明：</li></ul><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">8000 Hz：电话所用采样率，对于人的说话已经足够</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">11025 Hz：电话所用采样率</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">22050 Hz：无线电广播所用采样率</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">32000 Hz：miniDV 数码视频 camcoRDer、DAT (LP mode) 所用采样率</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">44100 Hz：音频 CD, 也常用于 MPEG-1 音频（VCD, SVCD, MP3）所用采样率</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">48000 Hz：miniDV、数字电视、DVD、DAT、电影和专业音频所用的数字声音所用采样率</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">96000 Hz：DVD-Audio、一些 LPCM DVD 音轨、BD-ROM（蓝光盘）音轨、和 HD-DVD （高清晰度 DVD）音轨所用所用采样率</p><h1>转码</h1><h2>转码流程</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="" height="693" src="https://gitee.com/lxinet/lfs/raw/master/imgs/trans_flow.jpeg" width="500" referrerpolicy="no-referrer"></p></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div>
                                    ]]>
            </description>
            <pubDate>Mon, 11 Mar 2024 06:11:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/282536</guid>
            <link>https://www.oschina.net/news/282536</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Docker 25.0.4 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#333333">Docker 25.0.4 现已发布，具体更新内容如下：</span></p><p style="text-align:start"><strong>Bug fixes and enhancements</strong></p><ul><li>恢复 Windows 上默认「nat」网络中容器的 DNS 名称。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmoby%2Fmoby%2Fpull%2F47490" target="_blank">moby/moby#47490</a></li><li>修复使用<code>--checkpoint</code>时​​​​​​​<code>docker start</code>失败的问题。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmoby%2Fmoby%2Fpull%2F47466" target="_blank">moby/moby#47466</a></li><li>不要对现有的 swarm networks 强制执行新的验证规则。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmoby%2Fmoby%2Fpull%2F47482" target="_blank">moby/moby#47482</a></li><li>恢复内部桥接网络上主机和容器之间的 IP 连接。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmoby%2Fmoby%2Fpull%2F47481" target="_blank">moby/moby#47481</a></li><li>修复 v25.0 中引入的回归，该回归阻止 classic builder 添加在非 Linux 操作系统上创建的带有 xattrs 的 tar 压缩包。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmoby%2Fmoby%2Fpull%2F47483" target="_blank">moby/moby#47483</a></li><li>containerd <span style="background-color:#ffffff; color:#1f2328">image store</span>：修复镜像拉取不发出<code>Pulling fs layer</code>状态的问题。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmoby%2Fmoby%2Fpull%2F47484" target="_blank">moby/moby#47484</a></li></ul><p style="text-align:start"><strong>API</strong></p><p style="text-align:start">&nbsp;</p><ul><li>为了保持向后兼容性，在使用较旧的客户端（API 版本 &lt; v1.44）时，默认情况下使只读挂载不递归。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmoby%2Fmoby%2Fpull%2F47393" target="_blank">moby/moby#47393</a></li><li>如果图像配置中缺少<code>Created</code>字段，<code>GET /images/{id}/json</code>会忽略该<code>Created</code>字段（以前是<code>0001-01-01T00:00:00Z</code>） 。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmoby%2Fmoby%2Fpull%2F47451" target="_blank">moby/moby#47451</a></li><li>对于 API 版本 &lt;= 1.43，在<code>GET /images/{id}/json</code>中使用填充<code>0001-01-01T00:00:00Z</code>缺失的<code>Created</code>字段。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmoby%2Fmoby%2Fpull%2F47387" target="_blank">moby/moby#47387</a></li><li>修复了导致 API 套接字连接失败时报告 API 版本协商失败的回归。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmoby%2Fmoby%2Fpull%2F47470" target="_blank">moby/moby#47470</a></li><li>当指定了容器范围的 MAC 地址，但<code>NetworkMode</code><span style="background-color:#ffffff; color:#1f2328">name-or-id</span> 与<code>NetworkSettings.Networks</code>中使用的&nbsp;<span style="background-color:#ffffff; color:#1f2328">name-or-id&nbsp;不一致时，保留&nbsp;container-create API 请求中提供的端点配置。</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmoby%2Fmoby%2Fpull%2F47510" target="_blank">moby/moby#47510</a></li></ul><p style="text-align:start"><strong>Packaging updates</strong></p><ul><li>将 Go 运行时升级到&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgo.dev%2Fdoc%2Fdevel%2Frelease%23go1.21.8" target="_blank">1.21.8</a>。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmoby%2Fmoby%2Fpull%2F47503" target="_blank">&nbsp;moby/moby#47503</a></li><li>将 RootlessKit 升级到&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frootless-containers%2Frootlesskit%2Freleases%2Ftag%2Fv2.0.2" target="_blank">v2.0.2</a>。&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmoby%2Fmoby%2Fpull%2F47508" target="_blank">&nbsp;moby/moby#47508</a></li><li>将 Compose 升级到&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdocker%2Fcompose%2Freleases%2Ftag%2Fv2.24.7" target="_blank">v2.24.7</a>。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdocker%2Fdocker-ce-packaging%2Fpull%2F998" target="_blank">docker/docker-ce-packaging#998</a></li><li>将 Buildx 升级到&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdocker%2Fbuildx%2Freleases%2Ftag%2Fv0.13.0" target="_blank">v0.13.0</a>。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdocker%2Fdocker-ce-packaging%2Fpull%2F997" target="_blank">docker/docker-ce-packaging#997</a></li></ul><p>更新说明：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmoby%2Fmoby%2Freleases%2Ftag%2Fv25.0.4" target="_blank">https://github.com/moby/moby/releases/tag/v25.0.4</a></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 11 Mar 2024 05:49:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/282533/docker-25-0-4-released</guid>
            <link>https://www.oschina.net/news/282533/docker-25-0-4-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[基于 mybatis 的 orm：mybatis-mp 1.4.2 发布 - 多数据源支持]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>1.4.2 更新：</strong><br><span style="background-color:#ffffff; color:#808080">1：增加 forUpdate no Wait 功能</span><br><span style="background-color:#ffffff; color:#808080">2：增加 Pager 静态方法</span><br><span style="background-color:#ffffff; color:#808080">3：优化 sql 拼接</span><br><span style="background-color:#ffffff; color:#808080">4：增加动态/多数据源支持（可分组）</span></p><p>&nbsp;</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>mybatis-mp 包含丰富的 api：</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">1：基于注解，映射数据库；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">2：支持多表 join 和返回；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">3：api 采用 lambda 和 stream 流式设计；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">4：select 自动化以及结果 1 对 1,1 对多，超级方便快捷；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">5：内置分页以及超强的 sql 优化功能；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">6：稳定且性能极优；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">7：轻量级封装 mybatis，几乎没有侵入；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">8：api 丰富，支持数据库函数、多表、乐观锁、多租户、逻辑删除、默认值（可动态值） 等众多功能；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">9：零学习成本，和写 sql 一样方便。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">10：支持复杂的返回关系映射：例如一对一 ，一对多，多对多；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">11：支持自定义 sql 模板，再也不用担心框架支持不足；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">12：内置代码生成器，通过配置，可定制自身规范；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">13：全新的框架，全新的设计理念，新的就是好！</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 11 Mar 2024 05:19:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/282527</guid>
            <link>https://www.oschina.net/news/282527</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[🔥🔥🔥 EasyRetry 3.1.0 发布，Spring Boot3.x 时代已经开启🎉🎉]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h3><strong>🔥🔥🔥 灵活，可靠和快速的分布式任务重试和分布式任务调度平台</strong></h3><p><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Ffendouxiaowoniu%2Fnuka7u%2Fue1btbpkosdn16c4" target="_blank"><span style="color:#e74c3c">一文读懂 AizuDa/EasyRetr</span></a></strong></p><pre><span style="color:#cf8e6d"><span style="color:#6a737d"><span style="color:#6a737d">&gt;</span></span><span><span></span></span></span><span><span><span>✅️ </span></span></span><span><span><span>可重放，可管控、为提高分布式业务系统一致性的分布式任务重试平台 </span></span></span><span style="color:#6a737d"><span style="color:#6a737d"></span></span><span style="color:#cf8e6d"><span style="color:#6a737d"><span style="color:#6a737d">&gt;</span></span><span><span></span></span></span><span><span><span>✅️ </span></span></span><span><span><span>支持秒级、可中断、可编排的高性能分布式任务调度平台</span></span></span></pre><ul><li><strong>易用性</strong><span><span>&nbsp;</span></span>业务接入成本小。避免依赖研发人员的技术水平，保障稳定性</li><li><strong>灵活性</strong><span><span>&nbsp;</span></span>能够动态调整配置，启动 / 停止任务，以及终止运行中的任务</li><li><strong>操作简单</strong><span><span>&nbsp;</span></span>分钟上手，支持 WEB 页面对任务数据 CRUD 操作。</li><li><strong>数据大盘</strong><span><span>&nbsp;</span></span>实时管控系统任务数据</li><li><strong>分布式重试任务</strong><span><span>&nbsp;</span></span>支持多样化退避策略、多样化重试类型、流量管控等</li><li><strong>分布式调度任务</strong><span><span>&nbsp;</span></span>提供丰富的任务触发策略、任务编排、任务分片、停止恢复、失败重试等</li><li><strong>任务数据管理</strong><span><span>&nbsp;</span></span>可以做到数据不丢失、数据一键回放</li><li><strong>容器化部署</strong><span><span>&nbsp;</span></span>服务端支持 docker 容器部署</li><li><strong>高性能调度平台</strong><span><span>&nbsp;</span></span>支持服务端节点动态扩容和缩容</li><li><strong>支持多样化的告警方式</strong><span><span>&nbsp;</span></span>邮箱、企业微信、钉钉、飞书</li></ul><h2>设计思想</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img src="https://www.easyretry.com/img/%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84%E5%9B%BE-v2.4.0.png" referrerpolicy="no-referrer"><span>&nbsp;</span><img height="1353" src="https://oscimg.oschina.net/oscnet/up-0a0e46da4b4a4b74f5d89f2d9da4661a349.png" width="1852" referrerpolicy="no-referrer"><span>&nbsp;</span><img src="https://www.easyretry.com/img/%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%8A%9F%E8%83%BD%E6%A8%A1%E5%9D%97-2.0.png" referrerpolicy="no-referrer"></p><h2>开源组件对比</h2><table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:1px; border:none; box-sizing:border-box; color:#00323c; display:inline-table; font-family:-apple-system,BlinkMacSystemFont,&quot;Apple Color Emoji&quot;,&quot;Segoe UI Emoji&quot;,&quot;Segoe UI Symbol&quot;,&quot;Segoe UI&quot;,&quot;PingFang SC&quot;,&quot;Hiragino Sans GB&quot;,&quot;Microsoft YaHei&quot;,&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:14px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; line-height:inherit; margin:0px 0px 20px; max-width:100%; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:776px; word-break:keep-all; word-spacing:0px"><tbody><tr><th style="text-align:inherit"><strong>项目</strong></th><th style="text-align:inherit"><strong>Quartz</strong></th><th style="text-align:inherit"><strong>Elastic-Job</strong></th><th style="text-align:inherit"><strong>XXL-JOB</strong></th><th style="text-align:inherit"><strong>Easy Retry</strong></th></tr></tbody><tbody><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">定时调度</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">Cron</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">Cron</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">Cron</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">1. 定时任务 2. 秒级任务 (无需依赖外部中间件) 3. 固定频率</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">重试任务</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">不支持</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">不支持</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">不支持</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">1. 支持本地 &amp; 远程重试模式 2. 支持各种常用组件的重试，比如 dubbo/feign 3. 支持多种退避策略 4. 丰富的重试风暴管控手段 ......</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">任务编排</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">不支持</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">不支持</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">不支持</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">可视化任务编排</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">分布式计算</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">不支持</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">静态分片</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">广播</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">1. 广播执行 2. 集群执行 3. 静态分片</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">多语言</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">Java</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">1. Java 2. 脚本任务</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">1. Java 2. 脚本任务</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">1. Java 2. 脚本任务 3. HTTP 任务 4. Kettle</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">可视化</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">无</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">弱</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">1. 历史记录 2. 运行日志（不支持存储）3. 监控大盘</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">1. 历史记录 2. 运行日志 (支持持久化) 3. 监控大盘 4. 操作记录 5. 查看日志堆栈</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">可运维</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">无</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">启用、禁用任务</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">1. 启用、禁用任务 2. 手动运行任务 3. 停止任务</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">1. 启用、禁用任务 2. 手动运行任务 3. 停止任务</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">报警监控</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">无</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">邮件</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">邮件</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">1. 邮件 2. 钉钉 3. 企微 4. 飞书</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">性能</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">每次调度通过 DB 抢锁，对 DB 压力大</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">ZooKeeper 是性能瓶颈</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">采用 Master 节点调度，Master 节点压力大</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">系统采用多 bucket 模式，借助负载均衡算法，确保每个节点能够均衡处理任务，同时支持无限水平扩展，轻松应对海量任务调度</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">接入成本</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">只依赖 DB 接入成本低</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">需引入 Zookeeper 增加系统复杂性和维护成本</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">只依赖 DB 接入成本低</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">只依赖 DB 接入成本低</td></tr></tbody></table><h2><strong>更新日志</strong></h2><ol><li>SpringBoot 版本升级至【3.2.2】【<strong>新增</strong>】</li><li>工作流支持任务节点手动停止能力【<strong>新增</strong>】<a href="https://gitee.com/aizuda/easy-retry/issues/I93NJG" target="_blank">issues</a></li><li>工作流支持任务节点手动重试能力【<strong>新增</strong>】<a href="https://gitee.com/aizuda/easy-retry/issues/I93NJ8" target="_blank">issues</a></li><li>支持两个同级方法重试【<strong>新增</strong>】<a href="https://gitee.com/aizuda/easy-retry/issues/I93NDG" target="_blank">issues</a></li><li>重试支持传播机制【<strong>新增</strong>】<a href="https://gitee.com/aizuda/easy-retry/issues/I93N8O" target="_blank">issues</a></li><li>管理后台，所有清空按钮无效，无法删除历史数据【<strong>BUG</strong>】<a href="https://gitee.com/aizuda/easy-retry/issues/I917H0" target="_blank">issues</a></li></ol><h2>项目地址</h2><p><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Ffendouxiaowoniu%2Fnuka7u%2Fue1btbpkosdn16c4" target="_blank"><span style="color:#e74c3c">一文读懂 AizuDa/EasyRetry</span></a></strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">官网:&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.easyretry.com%2F" target="_blank">https://www.easyretry.com/</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">gitee:<a href="https://gitee.com/aizuda/easy-retry.git">https://gitee.com/aizuda/easy-retry.git</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">github：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Faizuda%2Feasy-retry.git" target="_blank">https://github.com/aizuda/easy-retry.git</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><u><strong>方便的话给项目一个 star，你的支持是我们前进的动力！</strong></u></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="892" src="https://oscimg.oschina.net/oscnet/up-3a60153289977dbd60779cf10b9f71b4f01.png" width="1911" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="906" src="https://oscimg.oschina.net/oscnet/up-825456c64ad5e79eae06b6b61b421e79dda.png" width="1916" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="907" src="https://oscimg.oschina.net/oscnet/up-db255ba2623b42461a5f328341a2bc89eb8.png" width="1917" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="893" src="https://oscimg.oschina.net/oscnet/up-f10e56f97a6e5417f61bd2bc7a7d2a3a0ae.png" width="1909" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="888" src="https://oscimg.oschina.net/oscnet/up-def7290cfd656e5daa06991c7cdf06ac219.png" width="1678" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="851" src="https://oscimg.oschina.net/oscnet/up-9374238abd0e610a7c92f1f96bd6b03bc2a.png" width="1648" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="635" src="https://oscimg.oschina.net/oscnet/up-8782a31675acf0753f76906b8e8c5727a74.png" width="1622" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="899" src="https://oscimg.oschina.net/oscnet/up-37039ba0a34543ccb305b9f63ebbe3e7ddf.png" width="1908" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 11 Mar 2024 04:38:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/282522/easy-retry-3-1-0-released</guid>
            <link>https://www.oschina.net/news/282522/easy-retry-3-1-0-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
    </channel>
</rss>
