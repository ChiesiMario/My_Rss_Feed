<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[开源中国-软件更新资讯]]>
        </title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="http://rsshub.app/oschina/news/project" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[开源中国-软件更新资讯 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Mon, 04 Mar 2024 13:51:49 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[功能强大的开源数据中台系统 DataCap 2024.02.1 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>&nbsp;</p><blockquote><p>推荐一套基于 SpringBoot 开发的简单、易用的开源权限管理平台，建议下载使用: <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdevlive-community%2Fauthx" target="_blank">https://github.com/devlive-community/authx</a></p></blockquote><blockquote><p>推荐一套为 Java 开发人员提供方便易用的 SDK 来与目前提供服务的的 Open AI 进行交互组件：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdevlive-community%2Fopenai-java-sdk" target="_blank">https://github.com/devlive-community/openai-java-sdk</a></p></blockquote><p><strong>DataCap 发布!</strong></p><table><tbody><tr><th>发布版本</th><th>发布时间</th></tr></tbody><tbody><tr><td><code>2024.02.1</code></td><td><code>2024-03-01</code></td></tr></tbody></table><h4>Plugin</h4><hr><ul><li>支持 ParadeDB (https://github.com/devlive-community/datacap/issues/589)</li><li>支持 TimescaleDB (https://github.com/devlive-community/datacap/issues/593)</li></ul><h4>DataSet</h4><hr><ul><li>[图表] 添加面积图 (https://github.com/devlive-community/datacap/issues/611)</li><li>[图表] 添加多面积图 (https://github.com/devlive-community/datacap/issues/610)</li><li>[图表] 添加饼图 (https://github.com/devlive-community/datacap/issues/613)</li><li>[图表] 支持折线图断点处理</li><li>[图表] 支持分组直方图 (https://github.com/devlive-community/datacap/issues/612)</li><li>[图表] 支持词云图 (https://github.com/devlive-community/datacap/issues/614)</li><li>支持添加主键 (https://github.com/devlive-community/datacap/issues/624)</li><li>添加<code>总行数</code>和<code>总大小</code> (https://github.com/devlive-community/datacap/pull/676)</li><li>支持自定义别名的即席查询 (https://github.com/devlive-community/datacap/issues/615)</li><li>支持维度排序</li><li>支持指标排序</li><li>支持数据采样列 (https://github.com/devlive-community/datacap/issues/605)</li><li>添加有符号号码类型</li><li>修复了小屏幕上列表中的显示问题</li><li>支持即席查询自定义函数 (https://github.com/devlive-community/datacap/issues/603)</li><li>添加筛选器分组</li><li>合并查询列</li><li>修复复制数据导致重复请求的问题</li><li>修复编辑报表分组异常问题</li><li>修复无限循环查询问题</li><li>支持过滤器 <code>IS NULL</code>， <code>IS NOT NULL</code></li><li>修复了多列查询导致 expres 混淆的问题</li><li>支持过滤器 <code>LIKE</code>， <code>NOT LIKE</code></li><li>支持过滤器 <code>=</code>， <code>&lt;&gt;</code></li><li>支持过滤器 <code>&gt;</code>， <code>&gt;=</code></li><li>支持过滤器 <code>&lt;</code>， <code>&lt;=</code></li><li>支持历史错误信息同步</li><li>支持清空数据 (https://github.com/devlive-community/datacap/issues/622)</li><li>支持动态添加列 (https://github.com/devlive-community/datacap/issues/623)</li><li>重构数据集详细信息页面</li><li>添加日期时间类型</li><li>支持自定义生命周期 (https://github.com/devlive-community/datacap/issues/616)</li><li>禁用 <code>BOOLEAN</code>、<code>DATETIME</code> 类型分配</li><li>支持虚拟列 (https://github.com/devlive-community/datacap/issues/602)</li><li>支持 docker compose (https://github.com/devlive-community/datacap/issues/648)</li><li>支持七牛云存储 (https://github.com/devlive-community/datacap/issues/618)</li></ul><h4>Dependencies</h4><hr><ul><li>更新 io.crate:crate-jdbc <code>2.6.0</code> 到 <code>2.7.0</code></li><li>更新 Impala:ImpalaJDBC42 <code>2.6.29.1035</code> 到 <code>2.6.32.1041</code></li><li>更新 org.yaml:snakeyaml <code>2.0</code> 到 <code>2.2</code></li><li>更新 org.apache.hive:hive-jdbc <code>3.1.2</code> 到 <code>3.1.3</code></li><li>更新 org.elasticsearch.plugin:x-pack-sql-jdbc <code>8.11.3</code> 到 <code>8.12.0</code></li><li>更新 jackson.version <code>2.16.0</code> 到 <code>2.16.1</code></li><li>更新 org.apache.maven.plugins:maven-javadoc-plugin <code>3.6.0</code> 到 <code>3.6.3</code></li><li>更新 com.microsoft.sqlserver:mssql-jdbc <code>11.2.1.jre8</code> 到 <code>12.6.0.jre8</code></li><li>更新 postgresql.version <code>42.6.0</code> 到 <code>42.7.2</code></li></ul><blockquote><p>推荐一套全平台数据库管理工具，建议下载使用: <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdevlive-community%2Fdbm" target="_blank">https://github.com/devlive-community/dbm</a></p></blockquote><blockquote><p>我们即将推出一套开源新系统。InfoSphere 是一款面向企业和个人的开源 Wiki 系统，旨在提供简单而强大的知识管理解决方案。建议尝试使用: <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdevlive-community%2Fincubator-infosphere" target="_blank">https://github.com/devlive-community/incubator-infosphere</a></p></blockquote><h4>下载地址</h4><hr><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdatacap.edurt.io%2Fdownload.html" target="_blank">https://datacap.edurt.io/download.html</a></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 04 Mar 2024 09:57:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/281447</guid>
            <link>https://www.oschina.net/news/281447</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[「外部参数」功能已上线，爷们儿速来体验！！]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span>「Devops 流水线」内置最新上线了「外部参数」功能！</span><span>！</span><span>！</span><span>！</span><span>！</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span style="color:#b2b2b2">(点击下方图片查看)</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><img alt="" height="1463" src="https://oscimg.oschina.net/oscnet/up-68d2e509b8f3d4cdf2a0bd794bf50455034.png" width="2980" referrerpolicy="no-referrer"></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><img alt="" height="1414" src="https://oscimg.oschina.net/oscnet/up-885221c5995024bd6738199b11d2ee320b1.png" width="2880" referrerpolicy="no-referrer"></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify">为了在流水线中实现动态参数配置，我们可以使用外部参数引用。这些参数可以是字符串、数字或布尔类型，满足各种不同的需求。在图形流水线中，节点可以轻松地引用这些外部参数，从而实现更加灵活和高效的流水线操作。</p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><img alt="" height="1710" src="https://oscimg.oschina.net/oscnet/up-191cc1a4ad3d3f0d7500bc10882c52e04a8.png" width="3016" referrerpolicy="no-referrer"></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span>复制链接：<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdevops.jianmuhub.com" target="_blank">https://devops.jianmuhub.com</a></u>，快来体验吧！！！！</span></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 04 Mar 2024 07:37:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/281417</guid>
            <link>https://www.oschina.net/news/281417</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Apache SeaTunnel 2.3.4 版本发布：功能升级，性能提升]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>​Apache SeaTunnel 团队自豪地宣布 2.3.4 版本正式发布！本次更新聚焦于增强核心功能，改善用户体验，并进一步优化文档质量。</p><p><img alt="file" src="https://oscimg.oschina.net/oscnet/up-71886576d2b1f8ec906f5bbfcaa3a0505ae.png" referrerpolicy="no-referrer"></p><p>此次版本发布带来了多项重要更新和功能增强，包括核心与 API 的修复、文档的全面优化、<code>Catalog</code>支持的引入，以及多表同步的实现等，旨在为开发者提供更加强大和便捷的数据处理能力。</p><h1>核心功能一览</h1><h2>文档</h2><ul><li><strong>文档结构统一</strong>：我们对文档结构进行了全面优化，使结构更加清晰，便于开发者查找和阅读。</li><li><strong>增加示例</strong>：每个关键特性现在都附带了相应的示例，帮助开发者更好地理解和应用。</li><li><strong>JDBC 连接器文档拆分</strong>：针对不同数据库的特殊参数，我们对 JDBC 连接器文档进行了拆分，每个数据库都有专门的文档。</li><li><strong>设计文档同步到 Wiki</strong>：为了方便开发者阅读和进行二次开发，我们将设计文档同步到了<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcwiki.apache.org%2Fconfluence%2Fdisplay%2FSEATUNNEL%2FHome" target="_blank">Wiki</a>。</li></ul><h2>Catalog 支持</h2><p>重构代码添加了 Catalog 接口，设计文档： <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcwiki.apache.org%2Fconfluence%2Fdisplay%2FSEATUNNEL%2FSTIP5-Refactor%2BCatalog%2Band%2BCatalogTable" target="_blank">https://cwiki.apache.org/confluence/display/SEATUNNEL/STIP5-Refactor+Catalog+and+CatalogTable</a></p><ul><li>获取到的表结构更精确，表结构的自动迁移、转换成为可能。</li><li>统一 CatalogTable 的应用，模型推演贯穿整个数据流。</li><li>多表同步有了实现的构架基础。</li></ul><h2>多表同步——多表读取</h2><p>支持在一个 Source 中配置读取多张表</p><p>设计文档：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcwiki.apache.org%2Fconfluence%2Fdisplay%2FSEATUNNEL%2FSTIP4-JDBC%2Bsource%2Bsupports%2Bmulti-table%2Breading%2Bin%2Bone%2Btask" target="_blank">https://cwiki.apache.org/confluence/display/SEATUNNEL/STIP4-JDBC+source+supports+multi-table+reading+in+one+task</a></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-319598340429349372268c1a222af608f00.png" referrerpolicy="no-referrer"></p><h2>多表同步——多表写入</h2><p>支持在一个 Sink 多表写入：更省资源（无网络 IO 开销，JDBC 连接数可控）</p><p>设计文档：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcwiki.apache.org%2Fconfluence%2Fdisplay%2FSEATUNNEL%2FSTIP3-Sink%2Bsupports%2Bmulti-table%2Bin%2Bone%2Btask" target="_blank">https://cwiki.apache.org/confluence/display/SEATUNNEL/STIP3-Sink+supports+multi-table+in+one+task</a></p><ul><li>支持多个表之间 JDBC 连接共享</li><li>CDC 同步场景下，Sink 支持单表多线程处理，提升写入性能。</li><li>支持指定线程数，线程资源更可控</li></ul><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-c0994e4dd074ba18c77ce44cdcfaf5e9291.png" referrerpolicy="no-referrer"></p><h2>SaveMode</h2><p><strong>设计文档</strong>： <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcwiki.apache.org%2Fconfluence%2Fpages%2Fviewpage.action%3FpageId%3D263427916" target="_blank">https://cwiki.apache.org/confluence/pages/viewpage.action?pageId=263427916</a></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-8d6649e009cfd7f0074d34b7ffd2bea4b00.png" referrerpolicy="no-referrer"></p><ul><li>已有表结构处理，支持目标表不存在时自动创建。真正的解放两手。</li><li>已有数据处理，支持删除数据，追加写入</li><li>自定义 SQL(相当于 presql 功能)</li></ul><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-dd98643fd59e6f106d1d8707f6187db259a.png" referrerpolicy="no-referrer"></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-0273f2e41cfd64fdfbb97245ba66144f684.png" referrerpolicy="no-referrer"></p><h2>离线同步</h2><p>基于主键和唯一索引的自动分片，降低使用门槛：无论是离线同步还是 CDC 同步的历史同步阶段，SeaTunnel 都会自动通过 catalog 获取表结构信息查询表中的主键和唯一索引字段。SeaTunnel 会优先使用主键字段进行分片，没有主键字段时使用唯一索引字段进行分片。如果有联合主键或联合唯一索引，默认使用第一个字段进行分片。</p><p>更多的分片算法支持，之前的版本中当表中的数据分布不均匀时（分布因子与 1 的差异较大）会通过 SQL 在源表进行抽样的方式进行分片，这种方式需要用到源数据库的计划资源，经过测试 8c16g 的 mysql 数据库中一张有 5 亿行记录的表抽样的 SQL 需要几个小时才能计算出结果，为了解决这个问题 SeaTunnel 放弃了使用 SQL 在源表进行抽样的算法，改为直接查询分片字段的所有值，并在 SeaTunnel 中进行抽样，可以将抽样的时间缩短到 20 分钟以内。</p><p>支持关闭 checkpoint，再也不会 checkpoint 超时了：2.3.3 版本及以前的版本，SeaTunnel 离线同步任务也默认开启了 checkpoint，由于 checkpoint 机制依赖合理的分片设置，在抽取的表无法进行分片或者由于设置不当导致单个分片过大时，就会导致 checkpoint 超时，影响同步任务稳定性。2.3.4 版本中默认关闭了离线同步的 checkpoint 功能，不再会出现 checkpoint 超时的问题。如果用户希望离线同步能够断点续传，可以通过参数设置手工开始 checkpoint 功能。</p><p>支持任务级别的 checkpoint 超时设置。可以给每个任务设置不同的 checkpoint 超时时长。</p><h2>CDC 同步</h2><ul><li>更多的数据库支持</li></ul><p>PostgreSQL CDC</p><p>Oracle CDC</p><ul><li>Flink 引擎支持运行 CDC 任务</li></ul><h1>2.3.4 版本更新说明</h1><h2>Bug 修复</h2><h3>Core</h3><ul><li><code>[Core] [API]</code> 修复了列表中泛型类丢失的问题 (#4421)</li><li><code>[Starter]</code> 修复了在 [] 中 "," 被分隔的问题 (#5401)</li><li><code>[Core] [API]</code> 修复了 ReadonlyConfig 键丢失错误 (#5565)</li><li><code>[Core] [API]</code> 修复了从 LinkHashMap 获取字节的问题 (#5622)</li><li><code>[Core] [API]</code> 修复了多表接收器关闭时的日志错误 (#5683)</li><li><code>[Core] [API]</code> 修复了 MultiTableSink 返回提交器但接收器不支持的问题 (#5710)</li><li><code>[Core] [API]</code> 修复了解析不支持类型的模式时的错误消息 (#5790)</li><li><code>[Core] [API]</code> 修复了 <code>OptionUtilTest.test</code> 的不稳定测试 (#5894)</li><li><code>[Core] [API]</code> 修复了 SaveModeHandler 未关闭的问题 (#5843)</li><li><code>[Core] [API]</code> 修复了 MultiTableSinkWriter 线程索引始终为 1 的问题 (#5832)</li><li><code>[Core] [API]</code> 修复了 <code>SeaTunnelRow::getBytesSize</code> 不支持映射接口的问题 (#5990)</li><li><code>[Core] [Common]</code> 修复了 <code>FileUtils::createNewFile</code> 未创建新文件的问题 (#5943)</li><li><code>[Core] [API]</code> 修复了 Debezium 格式无法解析日期/时间/时间戳的问题 (#5887)</li><li><code>[Starter]</code> 当在双引号内时，',' 被视为普通字符而不是分隔符 (#6042)</li><li><code>[Core] [Common]</code> 替换 CommonErrorCodeDeprecated.JSON_OPERATION_FAILED (#5978)</li><li><code>[Core] [API]</code> 修复 <code>Object.class</code> 选项值无法返回正常值的问题 (#6247)</li></ul><h3>转换器-V2</h3><ul><li><code>[All]</code> 修复转换中的 PrimaryKey 问题 (#5704)</li><li><code>[All]</code> 修复转换为时间戳、日期、时间的 bug (#5812)</li></ul><h3>格式</h3><ul><li><code>[Text]</code> 允许映射中的条目为 null 并允许条目中的键为 null (#5277)</li></ul><h3>连接器-V2</h3><ul><li><code>[Connector-V2] [Clickhouse]</code> 修复了 Clickhouse 旧版本兼容性问题 (#5326)</li><li><code>[Connector-V2] [Clickhouse]</code> 修复了 http 头覆盖问题 (#5446)</li><li><code>[Connector-V2] [StarRocks]</code> 修复了 starrocks 模板 sql 解析器问题 (#5332)</li><li><code>[Connector-V2] [Hive]</code> 修复了 hive-site.xml 无法注入 HiveConf 的问题 (#5261)</li><li><code>[Connector-V2] [Clickhouse]</code> 修复了 clickhouse 接收器刷新 bug (#5448)</li><li><code>[Connector-V2] [Hive]</code> 修复了读取空目录时发生的错误 (#5427)</li><li><code>[Connector-V2] [Oss jindo]</code> 修复了 jindo 驱动下载失败的问题 (#5511)</li><li><code>[Connector-V2] [Oss jindo]</code> 移除无用代码 (#5540)</li><li><code>[Connector-V2] [File]</code> 修复了 WriteStrategy 并行写入线程不安全问题 (#5546)</li><li><code>[Connector-V2] [CDC]</code> 修复了原始表删除字段时 CDC 出现的 NPE bug (#5579)</li><li><code>[Connector-V2] [Jdbc]</code> 修复了 oracle catalog 创建表重复和 oracle pg 空指针问题 (#5517)</li><li><code>[Connector-V2] [CDC]</code> 修复了 cdc 枚举器中线程不安全的集合容器问题 (#5614)</li><li><code>[Connector-V2] [Mongodb]</code> 修复了由 bsonNull 引起的不支持异常 (#5659)</li><li><code>[Connector-V2] [File]</code> 修复了文件接收器 <code>isPartitionFieldWriteInFile</code> 在未给出列时出现的异常 (#5508)</li><li><code>[Connector-V2] [Doris]</code> 修复了 RestService 报空指针异常 (#5319)</li><li><code>[Connector-V2] [MaxCompute]</code> 修复了 MaxCompute 使用不存在的 SCHEMA 选项 (#5708)</li><li><code>[Connector-V2] [Doris]</code> 使用 try-with-resources 简化代码 (#4995)</li><li><code>[Connector-V2] [Clickhouse]</code> 修复了 clickhouse-sink 输出数据字段顺序错乱的 BUG (#5346)</li><li><code>[Connector-V2] [Jdbc]</code> 支持 postgresql xml 类型 (#5724)</li><li><code>[Connector-V2] [Jdbc]</code> 可空列源数据中的 null 数据可能导致意外结果 (#5560)</li><li><code>[Connector-V2] [Iceberg]</code> Iceberg 源在并行度选项下数据丢失 (#5732)</li><li><code>[Connector-V2] [Jdbc]</code> 修复 PG 使用自动创建表时不会创建索引 (#5721)</li><li><code>[Connector-V2] [Jdbc]</code> 修复数据库标识符 (#5756)</li><li><code>[Connector-V2] [CDC]</code> 修复添加新表时 MultiTableSink 恢复失败 (#5746)</li><li><code>[Connector-V2] [CDC]</code> 修复 Postgres 创建表测试用例失败 (#5778)</li><li><code>[Connector-V2] [CDC]</code> 清理未使用的代码 (#5785)</li><li><code>[Connector-V2] [CDC]</code> 修复从单表切换到多表时状态恢复错误 (#5784)</li><li><code>[Connector-V2] [ElasticSearch]</code> 修复 elasticsearch 数组格式的转换异常 (#5825)</li><li><code>[Connector-V2] [Jdbc]</code> 修复从 Oracle 读取日期类型值时丢失时间 (#5814)</li><li><code>[Connector-V2] [Pulsar]</code> 修复：更新 IDENTIFIER = Pulsar，对于 pulsar-datasource 在项目：seatunnel-web (#5852)</li><li><code>[Connector-V2] [Jdbc]</code> 修复 Hive-Jdbc 使用 krb5 时覆盖 kerberosKeytabPath (#5891)</li><li><code>[Connector-V2] [InfluxDB]</code> 解决在 initColumnsIndex 方法中直接使用 'tz' 函数附加 QUERY_LIMIT 导致的无效 SQL (#4829)</li><li><code>[Connector-V2] [Jdbc]</code> 修复 cdc 更新时未过滤相同主键 (#5923)</li><li><code>[Connector-V2] [File]</code> Parquet 读取器解析数组类型异常 (#4457)</li><li><code>[Connector-V2] [Http]</code> 修复 http 配置无 schema 选项的 bug 并改进 e2e 测试添加案例 (#5939)</li><li><code>[Connector-V2] [Doris]</code> 修复 DorisCatalog 未实现 <code>name</code> 方法 (#5988)</li><li><code>[Connector-V2] [TDengine]</code> 修复多个并行度影响驱动加载的程度 (#6020)</li><li><code>[Connector-V2] [Jdbc]</code> 修复 jdbc setFetchSize 错误 (#6005)</li><li><code>[Connector-V2] [CDC]</code> 修复 CDC 作业恢复运行后无法消费增量数据 (#625) (#6094)</li><li><code>[Connector-V2] [File]</code> 修复从 Excel 文件读取异常数据的问题 (#5932)</li><li><code>[Connector-V2] [CDC]</code> 修复为恢复作业添加表时导致的 NPE (#6145)</li><li><code>[Connector-V2] [Jdbc]</code> 修复 dameng catalog 查询表 sql (#6141)</li><li><code>[Connector-V2] [Jdbc]</code> 更新 pgsql catalog 以支持保存模式 (#6080)</li><li><code>[Connector-V2] [Jdbc]</code> 修复在大量重复数据情况下的 Spliter 错误 (#6026)</li><li><code>[Connector-V2] [CDC]</code> 修复作业恢复后添加的列无法解析 (#6118)</li><li><code>[Connector-V2] [CDC]</code> 修复 CDCRecordEmitDelay 指标中的负值 (#6259)</li><li><code>[Connector-V2] [CDC]</code> 修复没有主键时无效的拆分键 (#6251)</li></ul><h3>Zeta(ST-引擎)</h3><ul><li><code>[Zeta]</code> 修复 NotifyTaskRestoreOperation npe (#5362)</li><li><code>[Zeta]</code> 修复 Zeta 会关闭任务两次的错误 (#5422)</li><li><code>[Zeta]</code> 禁用 CheckpointTimeOutTest (#5438)</li><li><code>[Zeta]</code> 修复 CDC 任务恢复抛出 NPE (#5507)</li><li><code>[Zeta]</code> 同一类型的多个接收器动作具有相同名称 (#5499)</li><li><code>[Zeta]</code> Checkpoint 异常状态消息不包括状态数据 (#5547)</li><li><code>[Zeta]</code> 修复与检查点相关的内存泄漏问题 (#5539)</li><li><code>[Zeta]</code> 修复检查点被长时间阻塞的问题 (#5695)</li><li><code>[Zeta]</code> 修复作业状态不稳定的问题 (#5450)</li><li><code>[Zeta]</code> 修复提交作业 API (#5702)</li><li><code>[Zeta]</code> 将默认 DeployMode 设置为 DeployMode.CLIENT (#5783)</li><li><code>[Zeta]</code> 使用中文名称提交作业时，rest api 返回乱码名称 (#5870)</li><li><code>[Zeta]</code> 修复 CheckpointCoordinator 在未存在待处理检查点时报告 NPE (#5909)</li><li><code>[Zeta]</code> 修复提交作业时存在相同作业名称的错误 (#6041)</li><li><code>[Zeta]</code> 修复由于没有状态参数而导致返回列表为空的问题 (#6040)</li><li><code>[Zeta]</code> 修复 zeta 调度器 bug (#6050)</li><li><code>[Zeta]</code> 修复作业在最后一个检查点失败时无法恢复的问题 (#6193)</li><li><code>[Zeta]</code> [Rest-API] 从非活动主节点提交或停止作业 (#6217)</li></ul><h3>E2E</h3><ul><li><code>[E2E] [Common]</code> 更新 seatunnel 引擎的测试容器版本 (#5323)</li><li><code>[E2E] [Jdbc]</code> 修复 jdbc 套件测试完成后未移除 docker 镜像的问题 (#5586)</li><li><code>[E2E] [ClickHouse]</code> 增强 ClickHouse E2E 测试以触发多个检查点 (#5476)</li><li><code>[E2E]</code> 修复 jdbc 套件测试完成后未移除 docker 镜像的问题 (#5586)</li><li><code>[E2E]</code> 修复 <code>ConnectorPackageServiceContainer</code> 未实现 getSavePointCommand/getRestoreCommand 的问题 (#5780)</li><li><code>[E2E]</code> 修复因 <code>JdbcHiveIT</code> 和 <code>SparkSinkTest</code> 导致的构建失败 (#5798)</li><li><code>[E2E]</code> 修复提交作业案例错误 (#6059)</li><li><code>[E2E]</code> 修复与动作相关的错误 (#6264)</li><li><code>[E2E]</code> 将 mysql 容器版本锁定为 8.0 (#6263)</li></ul><h3>CI</h3><ul><li><code>[CI]</code> 修复 jindo oss 连接器名称问题 (#5385)</li><li><code>[Build]</code> 修复 fork 仓库不是最新时的错误消息 (#5497)</li><li><code>[CI]</code> 修复 CI 在 fork 仓库中运行时未检查文件更改的问题 (#5515)</li><li><code>[CI]</code> 移除 jindo 依赖 (#5528)</li><li><code>[CI]</code> 修复 phoenix ci 错误 (#5530)</li><li><code>[Build]</code> 更新构建版本为 2.3.4-SNAPSHOT (#5619)</li><li><code>[Build]</code> 确保 <a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Finstall-plugin.sh" target="_blank">install-plugin.sh</a> 脚本与 Debian 上的 sh 兼容 #5630 (#5631)</li><li><code>[CI] [Chore]</code> 移除无用的 sonar 检查脚本 (#5665)</li><li><code>[Chore]</code> 移除 DISCLAIMER 文件 (#5673)</li><li><code>[CI]</code> 修复 CI 不稳定问题 (#5896)</li><li><code>[Build]</code> 修复 config/plugin_config 中的空行导致的构建失败 (#5921)</li><li><code>[CI]</code> 修复 CI 未在更改 api 时运行 Kudu/AmazonSQS IT 的问题 (#5955)</li><li><code>[CI]</code> 将 doris e2e 分成单独的模块 (#5999)</li><li><code>[CI]</code> 修复死链接检查器失败 (#6016)</li><li><code>[CI]</code> 修复 e2e 错误 (#6018)</li><li><code>[Build]</code> 更新 pom.xml (#6113)</li><li><code>[Build]</code> 解决示例运行失败的问题 (#6173)</li><li><code>[Build]</code> 修复构建错误 (#6196)</li><li><code>[CI]</code> 修复引擎客户端未关闭的问题 (#6241)</li></ul><h3>示例</h3><ul><li><code>[Examples]</code> 修改转换 URL 链接 (#5298)</li></ul><h2>改进</h2><ul><li><code>[Improve][CheckStyle]</code> 移除 checkstyle 中无用的 'SuppressWarnings' 注解 (#5260)</li><li><code>[Improve][CheckStyle]</code> 调整 spotless 插件的阶段以适用于发布插件 (#5607)</li></ul><h3>Core</h3><ul><li><code>[Core] [API]</code> 移除 CatalogTableUtil 中的 CatalogTable 字段 (#5521)</li><li><code>[Core] [API]</code> 将获取模式逻辑从 Config 移动到 ReadonlyConfig (#5534)</li><li><code>[Starter]</code> 当发现一个 pluginIdentifier 对应多个连接器 jar 时抛出 IllegalArgumentException (#5551)</li><li><code>[Core] [API]</code> 重构 CatalogTable 并添加 <code>SeaTunnelSource::getProducedCatalogTables</code> (#5562)</li><li><code>[Core] [API]</code> 在模式中支持配置列/主键/约束键 (#5564)</li><li><code>[Core] [API]</code> 移除 ReadonlyConfig 扁平化特性的无用功能 (#5612)</li><li><code>[Core] [Flink &amp; Spark]</code> 重构 Spark/Flink 执行处理器 (#5595)</li><li><code>[Core] [API]</code> 标记 <code>SeaTunnelPluginLifeCycle</code> 为废弃 (#5625)</li><li><code>[Core] [API]</code> 支持为模式配置 tableIdentifier (#5628)</li><li><code>[Core] [Pom]</code> 在根 pom 中添加 junit4 (#5611)</li><li><code>[Core] [API]</code> 移除配置文件中的 catalog 标签 (#5645)</li><li><code>[Core] [API]</code> 移除来自 <code>setTypeInfo</code> 的无用转换代码 (#5647)</li><li><code>[Core] [API]</code> 确保 CatalogTable 选项和 partitionKeys 是可变的 (#5681)</li><li><code>[Core] [API]</code> 为 <code>SeaTunnelSource::getProducedType</code> 添加默认实现 (#5670)</li><li><code>[Core] [API]</code> 为 <code>SeaTunnelSink::setTypeInfo</code> 添加默认实现 (#5682)</li><li><code>[Core] [API]</code> 添加使用后备键的警告 (#5753)</li><li><code>[Core] [API]</code> 调整 flink 和 spark 引擎的睡眠模式与 zeta 一致 (#5698)</li><li><code>[Core] [API]</code> 移除 <code>Factory</code> 选项以避免无用信息 (#5754)</li><li><code>[Core] [API]</code> 将字段名称添加到 <code>DataTypeConvertor</code> 以改善错误消息 (#5782)</li><li><code>[Core] [API]</code> 移除使用 <code>SeaTunnelSink::getConsumedType</code> 方法并将其标记为废弃 (#5755)</li><li><code>[Core] [Common]</code> 移除 assert 关键字 (#5915)</li><li><code>[Core] [Common]</code> 清理流量控制代码 (#5991)</li><li><code>[Core] [Common]</code> 将 <code>FILE_OPERATION_FAILED</code> 适配为 <code>CommonError</code> (#5928)</li><li><code>[Core] [API]</code> 为 Column 添加 <code>serialVersionUID</code></li><li><code>[Core] [Common]</code> 将 <code>SupportResourceShare</code> 扩展到 spark/flink (#5847)</li><li><code>[Core] [API]</code> 如果禁用检查点，则移除检查点超时检查 (#6231)</li></ul><h3>格式</h3><ul><li><code>[Json]</code> 使用静态对象映射器代替每次创建它 (#5460)</li><li><code>[Json]</code> 移除 assert 关键字 (#5919)</li><li><code>[Formats]</code> 替换 CommonErrorCodeDeprecated.JSON_OPERATION_FAILED (#5948)</li><li><code>[Formats]</code> 重构 <code>ignoreParseErrors</code> 的异常捕获 (#6065)</li><li><code>[Formats]</code> 在 <code>seatunnel-format-compatible-debezium-json</code> 中使用数字格式解析 Decimal 类型 (#5803)</li><li><code>[Text]</code> 添加 dateTimeFormatter 以解析 ISO8601 (#5974)</li><li><code>[Formats]</code> 替换 <code>CommonErrorCodeDeprecated.JSON_OPERATION_FAILED</code> (#5948)</li></ul><h3>连接器-V2</h3><ul><li><code>[Connector-V2] [IoTDB]</code> 移除 IoTDB 接收器中的调度器 (#5270)</li><li><code>[Connector-V2] [InfluxDB]</code> 移除 InfluxDB 接收器中的调度器 (#5271)</li><li><code>[Connector-V2] [Dynamodb]</code> 移除 Dynamodb 接收器中的调度器 (#5248)</li><li><code>[Connector-V2] [StarRocks]</code> 移除 StarRocks 接收器中的调度器 (#5269)</li><li><code>[Connector-V2] [CDC]</code> 避免在不必要的数据库下列出表 (#5365)</li><li><code>[Connector-V2] [Jdbc]</code> 重构 AbstractJdbcCatalog (#5096)</li><li><code>[Connector-V2] [CDC]</code> 支持在 flink 上运行 cdc 作业 (#4918)</li><li><code>[Connector-V2] [Assert]</code> 支持 'DECIMAL' 类型并修复 'Number' 类型精度问题 (#5479)</li><li><code>[Connector-v2] [Redis]</code> Redis 支持选择数据库 (#5570)</li><li><code>[Connector-v2] [CDC]</code> 使用 Source 输出 CatalogTable (#5626)</li><li><code>[Connector-v2] [CDC]</code> 添加 dataType datetimeoffset (#5548)</li><li><code>[Connector-v2] [Jdbc]</code> 支持读取多个表 (#5581)</li><li><code>[Connector-v2] [CDC]</code> 统一 sqlserver TypeUtils 类型转换模式 (#5668)</li><li><code>[Connector-v2] [Http]</code> 改进 http e2e 测试 (#5655)</li><li><code>[Connector-v2] [AmazonDynamicDB]</code> 添加 amazondynamicdb 源拆分 (#5275)</li><li><code>[Connector-v2] [File]</code> parquet 使用系统时区 (#5605)</li><li><code>[Connector-v2] [Amazonsqs]</code> 更改 <code>amazonsqs</code> 为 <code>AmazonSqs</code> 作为连接器标识符 (#5742)</li><li><code>[Connector-v2] [File]</code> 统一文件源/接收器选项并更新文档 (#5680)</li><li><code>[Connector-v2] [AmazonDynamicDB]</code> 代码清理 AmazonDynamoDB 连接器 (#5791)</li><li><code>[Connector-v2] [MongoDB]</code> 实现 TableSourceFactory 以创建 mongodb 源</li><li><code>[Connector-v2] [Jdbc]</code> 优化 catalog-table 元数据合并逻辑 (#5828)</li><li><code>[Connector-v2] [Jdbc]</code> 将 <code>getCountSql</code> 重命名为 <code>getExistDataSql</code> (#5838)</li><li><code>[Connector-v2] [ClickHouse]</code> 加速 ClickhouseFile Local 生成 mmap 对象 (#5822)</li><li><code>[Connector-v2] [Jdbc]</code> 改进 Jdbc 连接器在数据类型不支持时的错误消息 (#5864)</li><li><code>[Connector-v2] [Jdbc]</code> 减少 getCatalogTable 在 jdbc 中的时间消耗 (#5908)</li><li><code>[Connector-v2] [StarRocks]</code> StarRocks 支持创建 varchar 字段类型 (#5911)</li><li><code>[Connector-v2] [StarRocks]</code> 添加 http socket 超时 (#5918)</li><li><code>[Connector-v2] [File]</code> 清理 <code>JsonWriteStrategy</code> 和 <code>ExcelWriteStrategy</code> 的内存缓冲 (#5925)</li><li><code>[Connector-v2] [StarRocks]</code> StarRocks 支持创建带唯一键的表模板 (#5905)</li><li><code>[Connector-v2] [CDC]</code> 当 <code>exactly_once</code> 关闭时禁用内存缓冲以提高稳定性 (#6017)</li><li><code>[Connector-v2] [Doris]</code> 在 doris 接收器中添加批量刷新 (#6024)</li><li><code>[Connector-v2] [Paimon]</code> 适配 Paimon 0.6 版本 (#6061)</li><li><code>[Connector-v2] [File]</code> 使 Oss 实现源工厂和接收器工厂 (#6062)</li><li><code>[Connector-v2] [File]</code> 禁用 HDFSFileSystem 缓存 (#6039)</li><li><code>[Connector-v2] [Jdbc]</code> 在 jdbc 连接器中遮蔽 hikari (#6116)</li><li><code>[Connector-v2] [Jdbc]</code> 支持 Sqlserver 小众数据类型 (#6122)</li><li><code>[Connector-v2] [Kafka]</code> 移除 kafka 连接器的无用代码 (#6157)</li><li><code>[Connector-v2] [Doris]</code> 改进 doris 接收器以随机使用 be (#6132)</li><li><code>[Connector-v2] [Http]</code> 增加自定义配置超时 (#6223)</li><li><code>[Connector-v2] [Pulsar]</code> 提高 pulsar 吞吐性能 (#6234)</li><li><code>[Connector-v2] [CDC]</code> 支持 <code>int identity</code> 类型在 sql server 中 (#6186)</li><li><code>[Connector-v2] [CDC]</code> Doris 流加载使用 FE 而不是 BE (#6235)</li><li><code>[Connector-v2] [CDC]</code> 修正名称错误 (#6248)</li><li><code>[Connector-v2] [Tdengine]</code> 支持从 tdengine 读取 bool 列 (#6025)</li><li><code>[Connector-v2] [Jdbc]</code> 使用 PreparedStatement 从列中采样数据 (#6242)</li></ul><h3>CI</h3><ul><li><code>[CI]</code> 更新 sql-udf 文档 (#5197)</li><li><code>[CI][E2E][Zeta]</code> 增加 Zeta 检查点超时以避免 connector-file-sftp-e2e 频繁失败 (#5339)</li><li><code>[CI]</code> 修复 phoenix ci 错误</li><li><code>[Build]</code> 将 <code>seatunnel-hadoop3-3.1.4-uber.jar</code> 放入发布二进制包 (#5743)</li><li><code>[Test]</code> 确保在 spark 中的值不会被重用 (#5767)</li><li><code>[Test]</code> 移动 MaxCompute 测试用例文件 (#5786)</li><li><code>[CI]</code> 始终运行所有模块的单元测试 (#5800)</li><li><code>[Test]</code> 将 System.out.println 更改为日志输出 (#5912)</li><li><code>[Test]</code> 为命令使用添加一些测试用例</li><li><code>[Test]</code> 修复 sql server catalog 测试用例失败 (#6128)</li><li><code>[Test]</code> 修复 JobMetricsTest 不稳定 (#6152)</li><li><code>[Test]</code> 修复 ConnectorSpecificationCheckTest 无效 (#5820)</li></ul><h3>E2E</h3><ul><li><code>[E2E]</code> 移除不必要的代码以减少磁盘压力 (#5613)</li><li><code>[E2E]</code> 启用 Oceanbase Mysql 模式的 IT 案例 (#5697)</li><li><code>[E2E]</code> 按需从 url 加载驱动类 (#5712)</li><li><code>[E2E]</code> Jdbc 测试检查数据一致性 (#5734)</li><li><code>[E2E]</code> 启用 e2e 日志输出并禁用控制枱接收器日志 (#5879)</li><li><code>[E2E]</code> 改进所有引擎的 e2e 日志 (#5936)</li><li><code>[E2E]</code> 增强 Kudu E2E 的稳定性 (#6258)</li></ul><h3>Zeta(ST-引擎)</h3><ul><li><code>[Zeta]</code> 优化测试用例 <code>CheckpointTimeOutTest.testJobLevelCheckpointTimeOut</code> (#5403)</li><li><code>[Zeta]</code> 改进依赖包 (#5624)</li><li><code>[Zeta]</code> 将硬编码配置键更改为引用 (#5618)</li><li><code>[Zeta]</code> 更改 <code>RestJobExecutionEnvironment</code> 实现的类名 (#5671)</li><li><code>[Zeta]</code> 更改默认 Zeta 客户端 JVM 堆值 (#5674)</li><li><code>[Zeta]</code> 将 generate_client_protocol.sh 移动到引擎模块 (#5667)</li><li><code>[Zeta]</code> 优化 SeaTunnel Zeta 引擎 Jar 包上传逻辑 (#5542)</li><li><code>[Zeta]</code> 将 <code>RestJobExecutionEnvironment</code> 移动到 rest 包 (#5764)</li><li><code>[Zeta]</code> 从动作名称（检查点状态键）中移除 <code>result_table_name</code> (#5779)</li><li><code>[Zeta]</code> 重构 jar 包服务模块 (#5763)</li><li><code>[Zeta]</code> 将客户端 cluster-connect-timeout-millis 暴露给 yaml (#5868)</li><li><code>[Zeta]</code> 减少检查点完成日志 (#5916)</li><li><code>[Zeta]</code> 移除 assert 关键字 (#5947)</li><li><code>[Zeta]</code> 调整工厂验证实现的日志级别 (#6153)</li><li><code>[Zeta]</code> 忽略无用的错误目标槽错误 (#6135)</li><li><code>[Zeta]</code> 添加在提交失败时恢复的功能 (#6101)</li></ul><h3>Transformer-V2</h3><ul><li><code>[All]</code> 为 SeaTunnel 转换添加 JsonPath 转换 (#5632)</li><li><code>[All]</code> 支持 SqlTransform Not Like 表达式 (#5768)</li><li><code>[All]</code> 添加 from_unixtime 函数 (#5462)</li><li><code>[All]</code> 支持 case when 表达式 (#6123)</li></ul><h2>特性</h2><h3>核心</h3><ul><li><code>[Core] [API]</code> 为检查点超时添加作业级配置 (#5222)</li><li><code>[Core] [API]</code> 目录添加大小写转换定义 (#5328)</li><li><code>[Core] [API]</code> 为测试添加 InMemoryCatalog 并添加新的 getCatalogTableFromConfig 方法 (#5485)</li><li><code>[Core] [Flink]</code> 支持可配置精度和规模的 Decimal 类型 (#5419)</li><li><code>[Core] [API]</code> 在 <code>SinkAggregatedCommitter</code> 中添加 <code>init</code> 和 <code>restoreCommit</code> 方法 (#5598)</li><li><code>[Core] [Flink]</code> 在 Flink 中支持流量控制 (#5509)</li><li><code>[Core] [Spark]</code> 支持 SeaTunnel 时间类型 (#5188)</li><li><code>[Core] [Flink]</code> 移除无用的 stageType (#5650)</li><li><code>[Core] [API]</code> 支持多表接收器 (#5620)</li><li><code>[Core] [Spark]</code> 在 Spark 中支持流量控制 (#5510)</li><li><code>[Core] [Flink]</code> 添加外部配置参数 (#5480)</li><li><code>[Core] [API]</code> 移除所有无用的 <code>prepare</code>、<code>getProducedType</code> 方法 (#5741)</li><li><code>[Core] [Common]</code> 引入新的错误定义规则 (#5793)</li><li><code>[Core] [Common]</code> 移除无用的 DeserializationFormatFactory 及其实现 (#5880)</li><li><code>[Core] [API]</code> 用 TableSchema 替换 SeaTunnelRowType 在 JdbcRowConverter 中</li><li><code>[Core] [Flink]</code> 升级 flink 源翻译 (#5100)</li><li><code>[Core] [API]</code> 为所有目录添加不支持的数据类型检查 (#5890)</li><li><code>[Core] [Flink]</code> 在 flink 引擎中支持记录指标 (#6035)</li></ul><h3>连接器-V2</h3><ul><li><code>[Connector-V2] [CDC] [SQLServer]</code> 支持多表读取 (#4377)</li><li><code>[Connector-V2] [Jdbc]</code> Jdbc 数据库支持标识符 (#5089)</li><li><code>[Connector-V2] [Jdbc]</code> jdbc 连接器支持 Kingbase 数据库 (#4803)</li><li><code>[Connector-V2] [Jdbc]</code> 添加 tidb 数据类型转换器 (#5440)</li><li><code>[Connector-V2] [Jdbc]</code> 添加 Dameng 目录 (#5451)</li><li><code>[Connector-V2] [File]</code> 支持在输出类型为文件 (CSV) 时写入列名 (#5459)</li><li><code>[Connector-V2] [File]</code> 当 FILE_FORMAT_TYPE 为 text/csv 时，添加参数 BaseSinkConfig.ENABLE_HEADER_WRITE: #5566 (#5567)</li><li><code>[Connector-V2] [CDC]</code> 支持优先使用数字字段作为分割键 (#5384)</li><li><code>[Connector-V2] [File]</code> 支持读取空目录 (#5591)</li><li><code>[Connector-V2] [Fake&amp;Assert]</code> 从 FakeSource/Assert 添加 <code>table-names</code> 以产生/断言多表 (#5604)</li><li><code>[Connector-V2] [Jdbc]</code> 添加 OceanBase 目录 (#5439)</li><li><code>[Connector-V2] [File]</code> 支持 <code>LZO</code> 压缩在文件读取上 (#5083)</li><li><code>[Connector-V2] [CDC]</code> 支持在 flink 上运行 MongoDB CDC (#5644)</li><li><code>[Connector-V2] [Jdbc]</code> 支持更多配置连接参数的方式 (#5388)</li><li><code>[Connector-V2] [Kafka]</code> KafkaSource 使用 Factory 创建源 (#5635)</li><li><code>[Connector-V2] [Jdbc]</code> 添加连接器 amazonsqs (#5367)</li><li><code>[Connector-V2] [Jdbc]</code> 在 MaxCompute Source 中支持目录 (#5283)</li><li><code>[Connector-V2] [Kudu]</code> 重构 Kudu 功能并支持 CDC 数据的接收器 (#5437)</li><li><code>[Connector-V2] [CDC]</code> 优化 mysql server-id 的默认值范围以减少冲突 (#5550)</li><li><code>[Connector-V2] [Http]</code> HTTP 支持页面增加 #5477 (#5561)</li><li><code>[Connector-V2] [Jdbc]</code> 添加 Save Mode 功能和 Connector-JDBC (MySQL) 连接器已实现 (#5663)</li><li><code>[Connector-V2] [Jdbc]</code> 支持 XMLTYPE 数据集成 #5716 (#5723)</li><li><code>[Connector-V2] [Jdbc]</code> 支持 Hive JDBC Source 连接器 (#5424)</li><li><code>[Connector-V2] [Http]</code> Http 参数支持自定义加密 (#5727)</li><li><code>[Connector-V2] [Kudu]</code> 在 kudu 上支持 TableSourceFactory/TableSinkFactory (#5789)</li><li><code>[Connector-V2] [File]</code> LocalFileSource 支持多表</li><li><code>[Connector-V2] [Fake]</code> FakeSource 支持为 MultipleTable 生成不同的 CatalogTable (#5766)</li><li><code>[Connector-V2] [Kudu]</code> 支持 kudu 多表源读取 (#5878)</li><li><code>[Connector-V2] [Http]</code> 在 http 上支持 TableSourceFactory/TableSinkFactory (#5816)</li><li><code>[Connector-V2] [Redis]</code> 在 redis 上支持 TableSourceFactory/TableSinkFactory (#5901)</li><li><code>[Connector-V2] [Jdbc]</code> 修复 split 键不支持 BigInteger 类型</li><li><code>[Connector-V2] [File]</code> LocalFile 接收器支持多表 (#5931)</li><li><code>[Connector-V2] [Doris]</code> Doris 目录 (#5175)</li><li><code>[Connector-V2] [Kudu]</code> 支持 kudu 多表接收器特性 (#5951)</li><li><code>[Connector-V2] [File]</code> 支持使用多个 hadoop 账户 (#5903)</li><li><code>[Connector-V2] [File]</code> 将多表文件 API 放到文件基础模块 (#6033)</li><li><code>[Connector-V2] [Paimon]</code> Flink 表存储在准备提交时失败 (#6057)</li><li><code>[Connector-V2] [File]</code> 添加多表文件接收器到基础模块 (#6049)</li><li><code>[Connector-V2] [Jdbc]</code> jdbc 源支持将字符串类型作为分区键 (#6079)</li><li><code>[Connector-V2] [File]</code> 支持读取 .xls excel 文件 (#6066)</li><li><code>[Connector-V2] [CDC]</code> 支持读取没有主键的表 (#6098)</li><li><code>[Connector-V2] [Assert]</code> 支持检查 Decimal 类型的精度和规模 (#6110)</li><li><code>[Connector-V2] [Hbase]</code> 支持数组数据 (#6100)</li><li><code>[Connector-V2] [File]</code> FTP 源/接收器添加 ftp 连接模式 (#6077) (#6099)</li><li><code>[Connector-V2] [Jdbc]</code> 更新 sqlserver 目录以支持保存模式 (#6086)</li><li><code>[Connector-V2] [CDC]</code> 支持自定义表主键 (#6106)</li><li><code>[Connector-V2] [Doris]</code> 在 Doris 上支持 SaveMode (#6085)</li><li><code>[Connector-V2] [Jdbc]</code> 更新 oracle 目录以支持保存模式 (#6092)</li><li><code>[Connector-V2] [ElasticSearch]</code> 添加 elasticsearch save_mode (#6046) (#6092)</li><li><code>[Connector-V2] [Jdbc]</code> 改进查询列 sql 的兼容性 (#5664)</li><li><code>[Connector-V2] [Jdbc]</code> 改进查询列 sql 的兼容性 (#5664)</li><li><code>[Connector-V2] [Pulsar]</code> 添加 Pulsar 接收器连接器 (#4382)</li><li><code>[Connector-V2] [StarRocks]</code> 添加 starrocks save_mode (#6029)</li><li><code>[Connector-V2] [CDC]</code> 支持 oracle cdc (#5196)</li><li><code>[Connector-V2] [Doris]</code> 添加 Doris ConnectorV2 源 (#6161)</li><li><code>[Connector-V2] [Jdbc]</code> 支持 postgres jdbc 中的 <code>uuid</code> (#6185)</li><li><code>[Connector-V2] [CDC]</code> 支持读取没有主键的表 (#6209)</li><li><code>[Connector-V2] [CDC]</code> 修复 jdbc setFetchSize 错误 (#6210)</li><li><code>[Connector-V2] [CDC]</code> 修复从单表切换到多表时状态恢复错误 (#6211)</li><li><code>[Connector-V2] [CDC]</code> 清理未使用的代码 (#6212)</li><li><code>[Connector-V2] [File]</code> 添加 s3file save mode 功能 (#6131)</li><li><code>[Connector-V2] [CDC]</code> 支持自定义表主键 (#6216)</li><li><code>[Connector-V2] [CDC]</code> 为拆分支持添加日期类型和浮点类型列 (#6160)</li><li><code>[Connector-V2] [CDC]</code> 支持 Postgres cdc (#5986)</li><li><code>[Connector-V2] [CDC]</code> 更新 jdbc fetchsize (#6245)</li><li><code>[Connector-V2] [CDC]</code> 默认禁用 exactly_once 以提高稳定性 (#6244)</li><li><code>[Connector-V2] [CDC]</code> 支持在拆分器中的 Short 和 Byte 类型 (#6027)</li><li><code>[Connector-V2] [Jdbc]</code> 改进查询表的大致总行数的 SQL 兼容性 (#5972)</li></ul><h3>Zeta(ST-引擎)</h3><ul><li><code>[Zeta]</code> 添加 UNKNOWABLE 作业状态 (#5303)</li><li><code>[Zeta]</code> 在 zeta 中支持流量控制 (#5502)</li><li><code>[Zeta] [REST-API]</code> 停止运行中的作业 (#5512)</li><li><code>[Zeta]</code> 在 Kubernetes 上支持 Zeta 引擎 (#5594)</li><li><code>[Zeta]</code> 在批处理模式中，可以禁用检查点 (#5914)</li><li><code>[Zeta]</code> 将跳过触发检查点的日志级别更改为调试 (#5954)</li><li><code>[Zeta]</code> 添加新作业状态 <code>DOING_SAVEPOINT</code> 和 <code>SAVEPOINT_DONE</code> (#5917)</li><li><code>[Zeta]</code> 添加 waitForJobCompleteV2 api (#5965)</li><li><code>[Zeta]</code> 可以使用 rest api 自动向 Zeta 主节点提交作业 (#5950)</li><li><code>[Zeta] [REST-API]</code> 获取已完成作业的信息 (#5949)</li><li><code>[Zeta]</code> 修复转换动作返回相同名称 (#6034)</li><li><code>[Zeta]</code> 统一作业环境参数 (#6003)</li><li><code>[Zeta]</code> 将 TaskGroupLocation 添加到 TaskExecutionService 的线程名称中 (#6095)</li><li><code>[Zeta]</code> 在 zeta 中使用 G1 作为默认垃圾收集器 (#6114)</li><li><code>[Zeta]</code> 修复带有无检查点文件的保存点启动时的错误 (#6215)</li><li><code>[Zeta]</code> 支持在泛型类型中用 hocon 风格声明行类型 (#6187)</li></ul><h3>CI</h3><ul><li><code>[Bin]</code> 为所有脚本添加 .bat 脚本 (#5445)</li><li><code>[INFRA]</code> 将 CI 移至在 fork 仓库容器上运行 (#5495)</li><li><code>[Build]</code> 移除 <code>connector/seatunnel</code> 目录 (#5489)</li><li><code>[INFRA]</code> 更新 PR 模板以添加测试和用户更改问题 (#5486)</li><li><code>[INFRA]</code> 为 notify_test_workflow.yml 添加日志以追踪错误原因</li><li><code>[INFRA]</code> 修复 notify_test_workflow.yml 不稳定</li><li><code>[Test]</code> 测试完成后在 jdbc 套件上移除 docker 镜像 (#5568)</li><li><code>[Test]</code> 为 ResourceManager 添加测试以确保任务将在不同节点上部署 (#5518)</li><li><code>[Chore]</code> 移除无用的 <code>.scalafmt.conf</code> 文件 (#5616)</li><li><code>[LICENSE]</code> 添加 hadoop 许可 (#6067)</li><li><code>[Build]</code> 将 seatunnel-spark-3-starter.jar 放入发布包 (#6044)</li><li><code>[Test]</code> 减少重复目录测试次数 (#6207)</li><li><code>[CI]</code> 确保 notify_test_workflow.yml 错误将被抛出 (#6226)</li></ul><h3>格式</h3><ul><li><code>[Ogg]</code> 支持读取 ogg 格式消息 #4201 (#4225)</li><li><code>[Json]</code> 移除 assert 关键字 (#5919)</li><li><code>[Avro]</code> 支持 avro 格式 (#5084)</li><li><code>[Formats]</code> 重构 <code>ignoreParseErrors</code> 的异常捕获 (#6065)</li><li><code>[Avro]</code> 改进 avro 格式转换 (#6082)</li></ul><h3>转换器-V2</h3><ul><li><code>[All]</code> 添加 JsonPath 转换 (#5632)</li><li><code>[All]</code> 支持 SqlTransform Not Like 表达式 (#5768)</li><li><code>[All]</code> 添加 from_unixtime 函数 (#5462)</li><li><code>[All]</code> 支持 case when 表达式 (#6123)</li></ul><h2>文档优化详情</h2><ul><li><code>[Docs]</code> 使用统一格式 Feishu 重构 connector-v2 文档 (#5343)</li><li><code>[Docs]</code> 重构 IoTDB 接收器文档 (#5306)</li><li><code>[Docs]</code> 更正单词错误 (#5360)</li><li><code>[Docs]</code> 改进 iceberg 文档 (#5335)</li><li><code>[Docs]</code> 使用短链接 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fs.apache.org%2Fseatunnel-slack" target="_blank">https://s.apache.org/seatunnel-slack</a> 替换长 URL (#5363)</li><li><code>[Docs]</code> 改进 http 文档参数体描述 (#5368)</li><li><code>[Docs]</code> 使用统一格式 Slack 重构 connector-v2 文档 (#5344)</li><li><code>[Docs]</code> 更新 sql-udf 文档 (#5197)</li><li><code>[Docs]</code> 重构 MySQL-CDC 文档 (#5302)</li><li><code>[Docs]</code> 在 FtpFile 的选项描述中将 username 由 user 替换 (#5421)</li><li><code>[Docs]</code> 更新 iotdb 文档 (#5404)</li><li><code>[Docs]</code> 添加 mysql Connector 文档版本标题示例 pr (#5249)</li><li><code>[Docs]</code> 添加并行度 (#5310)</li><li><code>[Docs]</code> Http 源选项键 poll_interval_ms 在源代码中不同 (#5430)</li><li><code>[Docs]</code> 改进 kafka 接收器文档中的错误示例 (#5527)</li><li><code>[Docs]</code> 改进控制枱接收器文档 (#5230)</li><li><code>[Docs]</code> 添加如何更改 e2e 测试的日志配置 (#5589)</li><li><code>[Docs]</code> 添加 RocketMq 连接器 (#5361)</li><li><code>[Docs]</code> 在 <a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2FREADME.md" target="_blank">README.md</a> 中修复构建状态未更新 (#5574)</li><li><code>[Docs]</code> hdfsFile 的 file_format 更改为 file_format_type (#5653)</li><li><code>[Docs]</code> 改进 <a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2FREADME.md" target="_blank">README.md</a> (#5662)</li><li><code>[Docs]</code> 添加 FakeSource 连接器文档 (#5255)</li><li><code>[Docs]</code> 在 <a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2FREADME.md" target="_blank">README.md</a> 中介绍 SeaTunnel web 项目 (#5634)</li><li><code>[Docs]</code> 向 README 添加目录和常见问题解答 (#5693)</li><li><code>[Docs]</code> 更新 <a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fquick-start-spark.md" target="_blank">quick-start-spark.md</a> (#5795)</li><li><code>[Docs]</code> 添加 Socket 连接器文档 #5255 (#5287)</li><li><code>[Docs]</code> 改进文件接收器文档 (#5799)</li><li><code>[Docs]</code> 添加 SqlServer 连接器文档 (#5498)</li><li><code>[Docs]</code> 更新 (#5808)</li><li><code>[Docs]</code> 添加 hive jdbc 参考值 (#5882)</li><li><code>[Docs]</code> 修正 Checkpoint-Storage 描述不正确 (#5883)</li><li><code>[Docs]</code> 重构 OssFile 连接器文档 (#5233)</li><li><code>[Docs]</code> 修复 oss 连接器无法运行的 bug (#6010)</li><li><code>[Docs]</code> 为 jdbc-connector 更新文档 (#5765)</li><li><code>[Docs]</code> 添加 V2 连接器 jdbc 文档参数可以加速数据导入 PR (#6176)</li><li><code>[Docs]</code> 修改一些文档标题规范 (#6237)</li><li><code>[Docs]</code> 重构 Socket Source 和 SftpFile 连接器文档 (#5386)</li><li><code>[Docs]</code> 改进驱动放置路径的文档</li><li><code>[Docs]</code> 更正数组元素类型和映射键类型的介绍 (#6261)</li></ul><h2>致谢名单</h2><p>感谢所有为 2.3.4 版本做出贡献的社区成员，包括代码贡献者、文档撰写者和测试人员。Apache SeaTunnel 的成功离不开每一个人的努力！</p><table><tbody><tr><th>用户名 1</th><th>用户名 2</th><th>用户名 3</th></tr></tbody><tbody><tr><td>Carl-Zhou-CN</td><td>halo.kim</td><td>Nick Young</td></tr><tr><td>Adarsh Jha</td><td>Hao Xu</td><td>Pritham Sriram Govindaraj</td></tr><tr><td>Alex Ting</td><td>haolinkong</td><td>pstrasser</td></tr><tr><td>Anirudh Hegde</td><td>happyboy1024</td><td>seckiller</td></tr><tr><td>asia-zengtao</td><td>He Wang</td><td>sunjane</td></tr><tr><td>bingquanzhao</td><td>Huan Liang</td><td>Tung Bui (Leo)</td></tr><tr><td>Carl-Zhou-CN</td><td>ic4y</td><td>Tyrantlucifer</td></tr><tr><td>chaos</td><td>Jarvis</td><td>Volodymyr</td></tr><tr><td>chen0623-bak</td><td>Jia Fan</td><td>wachoo</td></tr><tr><td>Chengyu Yan</td><td>john</td><td>wei zhao</td></tr><tr><td>chenyunde</td><td>kk</td><td>Wenjun Ruan</td></tr><tr><td>David Zollo</td><td>Kunni</td><td>wow_zx</td></tr><tr><td>Dennis</td><td>lightzhao</td><td>xiami</td></tr><tr><td>dependabot[bot]</td><td>lizhenglei</td><td>xiaofan2012</td></tr><tr><td>dian</td><td>luo</td><td>XiaoJiang521</td></tr><tr><td>Eric</td><td>michalrys</td><td>Yan Xiaole</td></tr><tr><td>fang</td><td>mingbei.xu</td><td>zhengyuan</td></tr><tr><td>FlechazoW</td><td>Morssssy</td><td>ZhilinLi</td></tr><tr><td>FuYouJ</td><td>MoSence</td><td>丑西蒙</td></tr><tr><td>gitfortian</td><td>muzhongjiang</td><td>老王</td></tr><tr><td>gnehil</td><td>Nick</td><td>王渔</td></tr><tr><td>Guangdong Liu</td><td>hailin0</td><td>&nbsp;</td></tr></tbody></table><blockquote><p>本文由 <a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.whaleops.com" target="_blank">白鲸开源科技</a> 提供发布支持！</p></blockquote></div>
                                    ]]>
            </description>
            <pubDate>Mon, 04 Mar 2024 06:19:19 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/281400/seatunnel-2-3-4</guid>
            <link>https://www.oschina.net/news/281400/seatunnel-2-3-4</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[easyAI v1.1.7 新版本发布，Java 原生 AI 算法开发引擎]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h1>easyAI-v1.1.7 版本发布</h1><h2>简介</h2><pre><code>  easyAI 是一款 java 纯原生 AI 算法开发引擎，内置多种机器学习，强化学习，演化学习和各种线代微积分算法工具。同时也提供封装好的，自然语言，图像识别，游戏策略机器人等多种可直接调用 api 实现自身功能的封装类。
  easyAI 对多种主流算法做了优化创新，使得它即便是 cpu 部署，低训练样本的情况下，依然能满足业务性能要求，表现要求。追求轻而快，小而美，开箱即用，让广大中小企业，也能低成本的轻松部署为自己系统服务的内嵌 AI 模块。

</code></pre><ul><li><p style="margin-left:0; margin-right:0">easyAI 下载链接:<a href="https://gitee.com/dromara/easyAi">https://gitee.com/dromara/easyAi</a></p></li><li><p style="margin-left:0; margin-right:0">easyAI 主要 API 详情文档：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwlhlwl.com%2Fgw%2FeasyAi.html" target="_blank">https://wlhlwl.com/gw/easyAi.html</a></p></li><li><p style="margin-left:0; margin-right:0">easyAI 详细视频教程：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2Fav89134035" target="_blank">https://www.bilibili.com/video/av89134035</a></p></li></ul><h3>v1.1.7 更新内容</h3><ul><li>对支持应用服务 「SayOrder」 的用户语义判定模型性能优化大幅度提升，训练速度提升达 50 倍！</li><li>对支持应用服务 「SayOrder」 的用户问答模型聊天稳定性提升！</li><li>去除冗余代码，并增加 elu,relu6,selu 等多种激活函数，与若干种矩阵求偏导 api。</li><li>「SayOrder」 是一款基于 easyAI 引擎可自主智能与用户聊天，捕捉用户需求，完成用户答疑解惑及引导消费的自动生成订单的系统，并可自由内嵌服务于开发者内部系统平台，并做到最高性价比的性能表现。</li></ul><h3>SayOrder 自主生成订单及客服问答基本流程演示</h3><ul><li>用户第一次进行输入表达自己的想法<span>&nbsp;</span><img alt="用户输入 1" src="https://admin.wlhlwl.com/share/peng/picture/a1.png" referrerpolicy="no-referrer"></li><li>SayOrder 发现用户的描述缺少订单必要信息，则进行反问。用户接收到 SayOrder 的反问，进一步补充的自己的想法<span>&nbsp;</span><img alt="用户输入 2" src="https://admin.wlhlwl.com/share/peng/picture/a2.png" referrerpolicy="no-referrer"></li><li>用户第二次输入信息依然不满足后台 14 分类法律咨询的订单关键信息要求，继续补充信息，最终完成订单信息补充生成订单。<span>&nbsp;</span><img alt="用户输入 3" src="https://admin.wlhlwl.com/share/peng/picture/a3.png" referrerpolicy="no-referrer"></li><li>用户输入想要咨询的问题，SayOrder 对用户咨询的问题进行自主解答<span>&nbsp;</span><img alt="用户输入 4" src="https://admin.wlhlwl.com/share/peng/picture/b1.png" referrerpolicy="no-referrer"></li></ul><h3>以上是 SayOrder 自定义业务接口的简单案例演示，具体安装部署及细节详情请到其主页下载:<a href="https://gitee.com/dromara/sayOrder">https://gitee.com/dromara/sayOrder</a></h3><h3>架构设计</h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>常用底层算法模块</strong></p><ul><li><p style="margin-left:0; margin-right:0">基础矩阵及线代计算模块：</p><p style="margin-left:0; margin-right:0">1. 内置矩阵类，矩阵计算类，可以完成常用矩阵四则运算，奇偶性，多元线性回归，逻辑斯蒂回归，欧式距离，余弦相似性，im2col，逆 im2col，求代数余子式，求逆，求伴随矩阵，内积等，微分等一系列 api。</p><p style="margin-left:0; margin-right:0">2.RGB 三通道矩阵，可进行图像转化，剪切，分块，生成图像矩阵等操作方便后续计算。</p></li><li><p style="margin-left:0; margin-right:0">机器学习 - 聚类：</p><p style="margin-left:0; margin-right:0">k 聚类，混合高斯聚类，密度聚类，学习向量量化聚类等</p></li><li><p style="margin-left:0; margin-right:0">机器学习 - 分类及拟合： 多层前馈神经网络，多层循环神经网络，残差网络，多层残差循环神经网络，卷积神经网络，决策树，随机森林，k 最近邻等</p></li><li><p style="margin-left:0; margin-right:0">启发式算法： 粒子群，蚁群，模拟退火</p></li><li><p style="margin-left:0; margin-right:0">强化学习，动态规划，蒙特卡洛分析，马尔可夫，时序差分</p></li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>常用上层算法模块</strong></p><ul><li><p style="margin-left:0; margin-right:0">视觉图像： 图像识别，图片摘要，目标检测</p></li><li><p style="margin-left:0; margin-right:0">自然语言： 语义理解，拆词分词，推理敏感及关键词，语句补全，语言交流</p></li><li><p style="margin-left:0; margin-right:0">游戏机器人： 自主策略，自主行动</p></li></ul><h3>使用</h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">1. 将项目下载后打包进本地 maven 库</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">2. 将 easyAi pom 文件引入地址引入项目</p><h3>关注项目</h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">对项目有什么想法或者建议，可以加我 qq 交流群 (222475213) 或 vx:thenk008，或者创建<span>&nbsp;</span><a href="https://gitee.com/dromara/easyAi/issues">issues</a>，一起完善项目。</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 04 Mar 2024 05:04:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/281392</guid>
            <link>https://www.oschina.net/news/281392</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[🐒 WuKongIM - Go 多场景即时通讯 1.2.1 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><ul><li>解决黑名单无效的问题</li><li>增加 ignoreMissingConfig 配置</li><li>个人白名单默认设置成关闭</li><li>修复解除好友关系后还能聊天的问题</li><li>如果指定了配置文件的路径，如果配置文件不存在则程序应该崩溃</li><li>升级 WuKongIM 协议</li><li>slave 设备如果 deviceID 相同则应该踢出</li><li>修复 cmd 消息 messageSeq 错误问题</li><li>更新 README 文档</li><li>解决大群未读数错误问题</li><li>解决 Conn SetMaxIdle 内空指针问题</li><li>通过 deviceId 获取连接对象</li></ul><p>WuKongIM 介绍：</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">8 年积累，沉淀出来的高性能通用通讯服务悟空 IM，支持即时通讯，消息推送，物联网通讯，音视频信令，直播弹幕，客服系统，AI 通讯，即时社区等场景。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>特点</strong></p><ul><li>📚 完全自研：自研消息数据库，消息分区永久存储，自研二进制协议 (支持自定义)，重写 Go 底层网络库，无缝支持 TCP 和 websocket。</li><li>🚀 性能强劲：单机支持百万用户同时在线，单机 16w / 秒消息（包括 DB 操作）吞吐量，一个频道支持万人同时订阅。</li><li>🔔 零依赖：没有依赖任何第三方组件，部署简单，一条命令即可启动</li><li>🔐 安全：消息通道和消息内容全程加密，防中间人攻击和窜改消息内容。</li><li>🧱 扩展性强：采用频道设计理念，目前支持群组频道，点对点频道，后续可以根据自己业务自定义频道可实现机器人频道，客服频道等等。</li></ul></div>
                                    ]]>
            </description>
            <pubDate>Mon, 04 Mar 2024 04:04:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/281385</guid>
            <link>https://www.oschina.net/news/281385</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[基于 mybatis 的 orm：mybatis-mp 1.4.1 发布 - 超丰富的 api！]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>1.3.9 更新：</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="background-color:#ffffff; color:#000000">1. 增加对枚举的 CRUD 支持，让枚举和普通参数一样</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><br><span style="background-color:#ffffff; color:#000000">2. 增加</span>ModelEntityField 注解，支持 Model 字段与实体类字段不一样的问题</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>mybatis-mp 包含丰富的 api：</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">1：基于注解，映射数据库；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">2：支持多表 join 和返回；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">3：api 采用 lambda 和 stream 流式设计；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">4：select 自动化以及结果 1 对 1,1 对多，超级方便快捷；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">5：内置分页以及超强的 sql 优化功能；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">6：稳定且性能极优；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">7：轻量级封装 mybatis，几乎没有侵入；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">8：api 丰富，支持数据库函数、多表、乐观锁、多租户、逻辑删除、默认值（可动态值） 等众多功能；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">9：零学习成本，和写 sql 一样方便。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">10：支持复杂的返回关系映射：例如一对一 ，一对多，多对多；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">11：支持自定义 sql 模板，再也不用担心框架支持不足；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">12：内置代码生成器，通过配置，可定制自身规范；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">13：全新的框架，全新的设计理念，新的就是好！</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 04 Mar 2024 02:19:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/281362</guid>
            <link>https://www.oschina.net/news/281362</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[WoTerm v9.30.2~9.30.4 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>很久没有更新了，但鄙人一直都很努力，即使在春节期间，也在加班，尽量回应和满足用户的需求。</p><p>现在将最近的工作成果，总结如下：<br> 一、<span style="background-color:#ffffff; color:#4b4f58">输入补全功能，通过多种模式自动实现命令及其参数的提示，甚至补全，减少了错误的机会并</span><span style="background-color:#ffffff; color:#4b4f58">提高了工作效率。</span></p><p><img height="626" src="https://oscimg.oschina.net/oscnet/up-58c29b2112a7fb1e3ca00881139254701bb.gif" width="796" referrerpolicy="no-referrer"></p><p>二、<span style="background-color:#ffffff; color:#4b4f58">脚本录制和回放允许用户将一系列复杂的终端操作记录下来并形成脚本，之后通过回放脚本来自动执行这些操作，从而避免了重复的手动操作，提高了工作效率，也减少人为错误。</span></p><p><img height="709" src="https://oscimg.oschina.net/oscnet/up-0fc7bfce77baf2cf484525b5125f6b6ba96.gif" width="797" referrerpolicy="no-referrer"></p><p>三、增加语法高亮功能，<span style="background-color:#ffffff; color:#4b4f58">通过不同的颜色，将终端上的不同元素如关键字、符号、数字、IP 等区分开来，相比传统终端配色，具有更强的阅读性和可理解性。此外，还兼容 VSCode 的主题。</span></p><p><img height="711" src="https://oscimg.oschina.net/oscnet/up-99457e2ac5029a9164f1fe2732f86071458.gif" width="798" referrerpolicy="no-referrer"></p><p>四、重新设计终端主题模块，<span style="background-color:#ffffff; color:#4b4f58">预设丰富的终端主题并直观的展示效果图，让用户轻松了解主题效果，此外还满足自定义主题的需求。</span><img height="592" src="https://oscimg.oschina.net/oscnet/up-0e4399264e1d83571d73cdb78afb90a8e19.gif" width="710" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 04 Mar 2024 02:06:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/281358</guid>
            <link>https://www.oschina.net/news/281358</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[YunGouOS 2.0.33 版本发布，微信、支付宝个人全渠道支付接口]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="background-color:#ffffff; color:#333333">YunGouOS 是一款开源的基于微信和支付宝的官方服务商模式开发的支付 SDK，YunGouOS 负责帮您在微信、支付宝官方进行签约开户，同时也支持自己在微信签约后接入 YunGouOS 使用，资金由微信 / 支付宝官方结算，不经过任何第三方平台。主要集成微信官方扫码支付、JSAPI 支付、小程序支付、订单查询、退款；支付宝扫码、wap、H5 支付、APP 支付、查询订单、订单退款等相关支付接口，开发者只需要一个架包即可完成微信 / 支付宝支付对接，无论您是<strong>个人、个体户、亦或企业</strong>都可以通过 YunGouOS 一键集成微信支付 / 支付宝支付。我们致力于提供简单的官方支付接口，一行代码快速接入，码出高效！</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">在线体验：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yungouos.com%2F%23%2Fdemo" target="_blank">https://www.yungouos.com/#/demo</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">支付后可自行在页面退款</p><h4><strong>更新内容：</strong></h4><p style="color:#666666; text-align:left">为提高线下收银设备接入效率，本次我们开放了一码收接口，应用于收银软件、扫码设备等</p><p style="color:#666666; text-align:left">通过扫描用户出示的付款码接口自动识别是微信、还是支付宝，并完成扣款，支持异步通知回调。</p><p style="color:#666666; text-align:left">如何使用：</p><p style="color:#666666; text-align:left">（1）聚合支付-》商户管理-》添加聚合商户绑定您的微信、支付宝商户号；</p><p style="color:#666666; text-align:left">（2）确保微信、支付宝商户号开通了【付款码支付】产品；</p><p style="color:#666666; text-align:left">（3）应用管理-》绑定门店-》生成门店 APPID；</p><p style="color:#666666; text-align:left">（4）对接【一码收】接口<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopen.pay.yungouos.com%2F%23%2Fapi%2Fapi%2Fpay%2Fmerge%2FcodePay" target="_blank">https://open.pay.yungouos.com/#/api/api/pay/merge/codePay</a></p><p style="color:#666666; text-align:left">目前该产品免费面向所有符合条件的商户开放使用，使用费率按照原商户号签约的费率，如有问题请与我们联系。</p><p style="color:#666666; text-align:left">针对微信、支付宝收款接口，本次更新新增支持控制信用卡渠道、订单有效期功能，支持的接口如下：</p><h4><strong>微信 API 更新</strong></h4><p style="color:#666666; text-align:left">【条码支付】<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopen.pay.yungouos.com%2F%23%2Fapi%2Fapi%2Fpay%2Fwxpay%2FcodePay" target="_blank">https://open.pay.yungouos.com/#/api/api/pay/wxpay/codePay</a></p><p style="color:#666666; text-align:left">【扫码支付】<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopen.pay.yungouos.com%2F%23%2Fapi%2Fapi%2Fpay%2Fwxpay%2FnativePay" target="_blank">https://open.pay.yungouos.com/#/api/api/pay/wxpay/nativePay</a></p><p style="color:#666666; text-align:left">【小程序支付（原生）】<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopen.pay.yungouos.com%2F%23%2Fapi%2Fapi%2Fpay%2Fwxpay%2FminAppPay" target="_blank">https://open.pay.yungouos.com/#/api/api/pay/wxpay/minAppPay</a></p><p style="color:#666666; text-align:left">【小程序支付（跳转）】<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopen.pay.yungouos.com%2F%23%2Fapi%2Fapi%2Fpay%2Fwxpay%2FminPay" target="_blank">https://open.pay.yungouos.com/#/api/api/pay/wxpay/minPay</a></p><p style="color:#666666; text-align:left">【公众号支付】<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopen.pay.yungouos.com%2F%23%2Fapi%2Fapi%2Fpay%2Fwxpay%2Fjsapi" target="_blank">https://open.pay.yungouos.com/#/api/api/pay/wxpay/jsapi</a></p><p style="color:#666666; text-align:left">【收银台支付】<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopen.pay.yungouos.com%2F%23%2Fapi%2Fapi%2Fpay%2Fwxpay%2FcashierPay" target="_blank">https://open.pay.yungouos.com/#/api/api/pay/wxpay/cashierPay</a></p><p style="color:#666666; text-align:left">【H5 支付】<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopen.pay.yungouos.com%2F%23%2Fapi%2Fapi%2Fpay%2Fwxpay%2FwapPay" target="_blank">https://open.pay.yungouos.com/#/api/api/pay/wxpay/wapPay</a></p><p style="color:#666666; text-align:left">【APP 支付】<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopen.pay.yungouos.com%2F%23%2Fapi%2Fapi%2Fpay%2Fwxpay%2FappPay" target="_blank">https://open.pay.yungouos.com/#/api/api/pay/wxpay/appPay</a></p><p style="color:#666666; text-align:left">【QQ 小程序支付】<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopen.pay.yungouos.com%2F%23%2Fapi%2Fapi%2Fpay%2Fwxpay%2FqqPay" target="_blank">https://open.pay.yungouos.com/#/api/api/pay/wxpay/qqPay</a></p><p style="color:#666666; text-align:left">【刷脸支付】<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopen.pay.yungouos.com%2F%23%2Fapi%2Fapi%2Fpay%2Fwxpay%2FfacePay" target="_blank">https://open.pay.yungouos.com/#/api/api/pay/wxpay/facePay</a></p><h4><strong>支付宝 API 更新</strong></h4><p style="color:#666666; text-align:left">【条码支付】<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopen.pay.yungouos.com%2F%23%2Fapi%2Fapi%2Fpay%2Falipay%2FcodePay" target="_blank">https://open.pay.yungouos.com/#/api/api/pay/alipay/codePay</a></p><p style="color:#666666; text-align:left">【扫码支付】<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopen.pay.yungouos.com%2F%23%2Fapi%2Fapi%2Fpay%2Falipay%2FnativePay" target="_blank">https://open.pay.yungouos.com/#/api/api/pay/alipay/nativePay</a></p><p style="color:#666666; text-align:left">【WAP 支付】<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopen.pay.yungouos.com%2F%23%2Fapi%2Fapi%2Fpay%2Falipay%2FwapPay" target="_blank">https://open.pay.yungouos.com/#/api/api/pay/alipay/wapPay</a></p><p style="color:#666666; text-align:left">【JS 支付】<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopen.pay.yungouos.com%2F%23%2Fapi%2Fapi%2Fpay%2Falipay%2FjsPay" target="_blank">https://open.pay.yungouos.com/#/api/api/pay/alipay/jsPay</a></p><p style="color:#666666; text-align:left">【H5 支付】<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopen.pay.yungouos.com%2F%23%2Fapi%2Fapi%2Fpay%2Falipay%2FmobilePay" target="_blank">https://open.pay.yungouos.com/#/api/api/pay/alipay/mobilePay</a></p><p style="color:#666666; text-align:left">【APP 支付】<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopen.pay.yungouos.com%2F%23%2Fapi%2Fapi%2Fpay%2Falipay%2FappPay" target="_blank">https://open.pay.yungouos.com/#/api/api/pay/alipay/appPay</a></p><p style="color:#666666; text-align:left">【电脑网站支付】<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopen.pay.yungouos.com%2F%23%2Fapi%2Fapi%2Fpay%2Falipay%2FwebPay" target="_blank">https://open.pay.yungouos.com/#/api/api/pay/alipay/webPay</a></p><p style="color:#666666; text-align:left">各语言配套 SDK 已更新，如有需要请自行前往各大平台下载。</p><h4><strong>官方文档：</strong></h4><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopen.pay.yungouos.com%2F" target="_blank">https://open.pay.yungouos.com</a></p><h4><strong>示例代码</strong>：</h4><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/YunGouOS/YunGouOS-PAY-SDK/tree/master/YunGouOS-SpringBoot-Demo">JAVA 版本 SpringBoot 示例</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/YunGouOS/YunGouOS-PAY-SDK/tree/master/YunGouOS-UniApp-Demo">UniApp 版本示例</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/YunGouOS/YunGouOS-PAY-SDK/tree/master/YunGouOS-PHP-SDK">PHP 版本示例</a></p><h4><strong>下载地址</strong>&nbsp;：</h4><ul><li><a href="https://gitee.com/YunGouOS/YunGouOS-PAY-SDK/tree/master/YunGouOS-JAVA-SDK">JAVA 版本下载</a></li><li><a href="https://gitee.com/YunGouOS/YunGouOS-PAY-SDK/tree/master/YunGouOS-PHP-SDK">PHP 版本下载</a></li><li><a href="https://gitee.com/YunGouOS/YunGouOS-PAY-SDK/tree/master/YunGouOS-WxApp-SDK">小程序版本下载</a></li><li><a href="https://gitee.com/YunGouOS/YunGouOS-PAY-SDK/tree/master/YunGouOS-JS-SDK">JS 版本下载</a></li><li><a href="https://gitee.com/YunGouOS/YunGouOS-PAY-SDK/tree/master/YunGouOS-Node-SDK">Node 版本下载</a></li><li><a href="https://gitee.com/YunGouOS/YunGouOS-PAY-SDK/tree/master/YunGouOS-UniApp-SDK">UniApp 版本下载</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Mon, 04 Mar 2024 01:54:21 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/281354</guid>
            <link>https://www.oschina.net/news/281354</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[开放签电子签章企业版 V1.6（紧急更新）]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span>开放签持续迭代多个版本后，陆陆续续已经有客户在使用，但是在使用过程中发现很多用户体验问题，导致用户不能顺畅、友好的使用系统。因此，本次版本升级主要解决若干用户体验问题，使用户能够更加顺畅的使用开放签。本次升级内容主要包括一下内容：</span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><strong><span><span><strong>1、签署相关：</strong></span></span></strong></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span>（1）优化手机端签署流程，简化签名步骤；</span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span>（2）优化手机端签署提示信息，使用户更加清楚当前签署状态；</span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span>（3）优化手机端签名交互体验；</span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span>（4）优化签署短信跳转，通过短信直接进入对应身份的待签署文档；</span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span>（5）优化签署流程，根据签署状态检测当前用户是否还有待签署文件，如存在待签署文件，提示用户可以快捷办理；</span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span>（6）优化签署时日期控件需要点击两次的问题。</span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><strong><span><span><strong>2、填写相关：</strong></span></span></strong></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span>（1）优化手机端模板填写功能，提升用户体验；</span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span>（2）优化填写短信跳转，通过短信直接进入对应身份的待填写文档。</span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><strong><span><span><strong>3、文件列表：</strong></span></span></strong></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span>（1）优化手机端文件展示列表，根据代办自动切换列表信息。</span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><strong><span><span><strong>4、文字样式：</strong></span></span></strong></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span>（1）将手机端页面文字放大，提升用户阅读体验。</span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><strong><span><span><strong>5、实名认证：</strong></span></span></strong></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span>（1）优化签署过程中的实名认证步骤；</span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span>（2）优化用户注册过程中的实名认证步骤。</span></span></span></span></span></span></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 04 Mar 2024 01:18:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/281349</guid>
            <link>https://www.oschina.net/news/281349</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[《灯灯》多租户快速开发平台 4.17.0 版本发布，多租户解决方案]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h1><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftangyh.top%2Fupgrade%2F4.x%25E7%2589%2588%25E6%259C%25AC%25E5%258D%2587%25E7%25BA%25A7%25E6%2597%25A5%25E5%25BF%2597" target="_blank">4.17.0 更新简介:</a></h1><ul><li><p style="margin-left:0; margin-right:0">refactor: 登录后获取系统路由和资源的接口合并</p></li><li><p style="margin-left:0; margin-right:0">refactor: 路由接口同时支持 vben-admin 和 soybean-admin</p></li><li><p style="margin-left:0; margin-right:0">fix(lamp-base-biz): 阿里云文件上传后浏览器访问 url 文件名乱码</p></li><li><p style="margin-left:0; margin-right:0">fix(lamp-base-biz): 保存角色资源时，清理缓存忽略 applicationId</p></li><li><p style="margin-left:0; margin-right:0">fix(lamp-base-biz): 删除角色时，清理缓存忽略 applicationId</p></li><li><p style="margin-left:0; margin-right:0">fix(lamp-web-pro): 顶部菜单混合模式不校验应用权限</p></li><li><p style="margin-left:0; margin-right:0">fix(lamp-web-pro): 修复 tab 标签重新加载按钮无法传递参数导致页面 404 的问题</p></li><li><p style="margin-left:0; margin-right:0">fix(lamp-web-pro): 应用授权页面，无法获取租户数据</p></li><li><p style="margin-left:0; margin-right:0">fix(lamp-web-pro): 代码生成页面， 无法导入表</p></li><li><p style="margin-left:0; margin-right:0">fix(lamp-web-pro): 固定某些组件的版本号，防止版本不一致导致的冲突</p></li><li><p style="margin-left:0; margin-right:0">fix(lamp-web-pro): 个人中心修改密码时，表单校验异常</p></li><li><p style="margin-left:0; margin-right:0">fix(lamp-web-pro): getFieldsValue 方法必须配合 await 使用，否则无法获取正确值。</p></li><li><p style="margin-left:0; margin-right:0">refactor(lamp-web-pro): 简化 prettier.config.js 减少 ide 警告</p></li></ul><p>&nbsp;</p><p>&nbsp;</p><h1>《灯灯》中后台快速开发平台</h1><h2>lamp 项目组成</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>1） 工具集 （ lamp-util 项目必备，其他 2 个可选）</strong></p><table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:1px; border:none; box-sizing:border-box; color:#444444; display:block; font-family:-apple-system,BlinkMacSystemFont,&quot;Apple Color Emoji&quot;,&quot;Segoe UI Emoji&quot;,&quot;Segoe UI Symbol&quot;,&quot;Segoe UI&quot;,&quot;PingFang SC&quot;,&quot;Hiragino Sans GB&quot;,&quot;Microsoft YaHei&quot;,&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:14px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; line-height:inherit; margin:0px 0px 20px; max-width:100%; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:776px; word-break:keep-all; word-spacing:0px"><tbody><tr><th>项目</th><th>gitee</th><th>github</th><th>备注</th></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">工具集</td><td style="border-color:#dddddd; border-style:solid; border-width:1px"><a href="https://gitee.com/zuihou111/lamp-util">lamp-util</a></td><td style="border-color:#dddddd; border-style:solid; border-width:1px"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fzuihou%2Flamp-util" target="_blank">lamp-util</a></td><td style="border-color:#dddddd; border-style:solid; border-width:1px">业务无关的工具集，cloud 和 boot 项目都依赖它</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">定时调度器</td><td style="border-color:#dddddd; border-style:solid; border-width:1px"><a href="https://gitee.com/zuihou111/lamp-job">lamp-job</a></td><td style="border-color:#dddddd; border-style:solid; border-width:1px"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fzuihou%2Flamp-job" target="_blank">lamp-job</a></td><td style="border-color:#dddddd; border-style:solid; border-width:1px">&nbsp;</td></tr></tbody></table><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>2） 后端 （下面 2 个项目功能一致，任选其一即可）</strong></p><table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:1px; border:none; box-sizing:border-box; color:#444444; display:block; font-family:-apple-system,BlinkMacSystemFont,&quot;Apple Color Emoji&quot;,&quot;Segoe UI Emoji&quot;,&quot;Segoe UI Symbol&quot;,&quot;Segoe UI&quot;,&quot;PingFang SC&quot;,&quot;Hiragino Sans GB&quot;,&quot;Microsoft YaHei&quot;,&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:14px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; line-height:inherit; margin:0px 0px 20px; max-width:100%; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:776px; word-break:keep-all; word-spacing:0px"><tbody><tr><th>项目</th><th>gitee</th><th>github</th><th>备注</th></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">微服务版</td><td style="border-color:#dddddd; border-style:solid; border-width:1px"><a href="https://gitee.com/zuihou111/lamp-cloud">lamp-cloud</a></td><td style="border-color:#dddddd; border-style:solid; border-width:1px">l<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fzuihou%2Flamp-cloud" target="_blank">amp-cloud</a></td><td style="border-color:#dddddd; border-style:solid; border-width:1px">SpringCloud 版</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">单体版</td><td style="border-color:#dddddd; border-style:solid; border-width:1px"><a href="https://gitee.com/zuihou111/lamp-boot">lamp-boot</a></td><td style="border-color:#dddddd; border-style:solid; border-width:1px"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fzuihou%2Flamp-boot" target="_blank">lamp-boot</a></td><td style="border-color:#dddddd; border-style:solid; border-width:1px">SpringBoot 版 (和 lamp-cloud 功能基本一致)</td></tr></tbody></table><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>3） 前端 （下面 3 个项目功能一致，任选其一即可）</strong></p><table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:1px; border:none; box-sizing:border-box; color:#444444; display:block; font-family:-apple-system,BlinkMacSystemFont,&quot;Apple Color Emoji&quot;,&quot;Segoe UI Emoji&quot;,&quot;Segoe UI Symbol&quot;,&quot;Segoe UI&quot;,&quot;PingFang SC&quot;,&quot;Hiragino Sans GB&quot;,&quot;Microsoft YaHei&quot;,&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:14px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; line-height:inherit; margin:0px 0px 20px; max-width:100%; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:776px; word-break:keep-all; word-spacing:0px"><tbody><tr><th>项目</th><th>gitee</th><th>github</th><th>备注</th></tr></tbody><tbody><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">租户后台</td><td style="border-color:#dddddd; border-style:solid; border-width:1px"><a href="https://gitee.com/zuihou111/lamp-web">lamp-web</a></td><td style="border-color:#dddddd; border-style:solid; border-width:1px"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fzuihou%2Flamp-web" target="_blank">lamp-web</a></td><td style="border-color:#dddddd; border-style:solid; border-width:1px"><p style="margin-left:0; margin-right:0">master 基于 vue-admin-element 开发 （vue2.x）</p><p style="margin-left:0; margin-right:0">4.x_java17 基于 vue3</p></td></tr></tbody></table><blockquote><p style="margin-left:0; margin-right:0">lamp 和 php 没有什么关系，如果你非要说 lamp 是 Linux+Apache+MySQL+PHP，那就算是吧，毕竟 PHP 是世界上最好的语言，我也希望此项目成为世界上最好的后台框架！😈😈😈</p></blockquote><h1>lamp-cloud 简介</h1><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><code>lamp-cloud</code><span>&nbsp;</span>基于 java +<span>&nbsp;</span><code>SpringCloud</code><span>&nbsp;</span>+ SpringCloudAlibaba+<span>&nbsp;</span><code>SpringBoot</code><span>&nbsp;</span>的微服务快速开发平台，其中的可配置的 SaaS 功能尤其闪耀， 具备 RBAC 功能、网关统一鉴权、Xss 防跨站攻击、自动代码生成、多种存储系统、分布式事务、分布式定时任务等多个模块，支持多业务系统并行开发， 支持多服务并行开发，可以作为后端服务的开发脚手架。代码简洁，注释齐全，架构清晰，非常适合学习和企业作为基础框架使用。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">核心技术采用 Spring Cloud Alibaba、SpringBoot、Mybatis、Seata、Sentinel、RabbitMQ、FastDFS/MinIO、SkyWalking 等主要框架和中间件。 希望能努力打造一套从<span>&nbsp;</span><code>JavaWeb 基础框架</code><span>&nbsp;</span>-<span>&nbsp;</span><code>分布式微服务架构</code><span>&nbsp;</span>-<span>&nbsp;</span><code>持续集成</code><span>&nbsp;</span>-<span>&nbsp;</span><code>系统监测</code><span>&nbsp;</span>的解决方案。<code>本项目旨在实现基础能力，不涉及具体业务。</code></p><h2>lamp 租户模式介绍</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">本项目可以通过配置，轻松切换项目的<span>&nbsp;</span><strong>多租户实现方式</strong>。</p><table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:1px; border:none; box-sizing:border-box; color:#444444; display:block; font-family:-apple-system,BlinkMacSystemFont,&quot;Apple Color Emoji&quot;,&quot;Segoe UI Emoji&quot;,&quot;Segoe UI Symbol&quot;,&quot;Segoe UI&quot;,&quot;PingFang SC&quot;,&quot;Hiragino Sans GB&quot;,&quot;Microsoft YaHei&quot;,&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:14px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; line-height:inherit; margin:0px 0px 20px; max-width:100%; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:776px; word-break:keep-all; word-spacing:0px"><tbody><tr><th>租户模式</th><th>描述</th><th>优点</th><th>缺点</th></tr></tbody><tbody><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">NONE (非租户模式)</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">没有租户</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">简单、适合独立系统</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">缺少租户系统的优点</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">COLUMN (字段模式)</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">租户共用一个数据库，在业务表中增加字段来区分</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">简单、不复杂、开发无感知</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">数据隔离性差、安全性差、数据备份和恢复困难、</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">DATASOURCE (独立数据源)</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">每个租户独立一个数据源，执行代码时，动态切换数据源</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">可独立部署数据库，数据隔离性好、扩展性高、故障影响小</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">相对复杂、开发需要注意切换数据源时的事务问题、需要较多的数据库</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">DATASOURCE_COLUMN (独立数据源 + 字段模式)</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">每个租户独立一个，数据库 (数据源)，执行代码时，动态切换数据源，在动态拼接，子租户 id 二次隔离</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">可独立部署数据库，数据隔离性好、扩展性高、故障影响小、支持大租户小门店形式</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">相对复杂、开发需要注意切换数据源时的事务问题、需要较多的数据库</td></tr></tbody></table><h2>lamp 项目演示地址</h2><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftangyh.top" target="_blank">https://tangyh.top</a></li></ul><blockquote><p style="margin-left:0; margin-right:0">ps：演示环境中内置租户没有写入权限，若要在演示环境测试增删改，请新增租户账号后，登录新租户测试</p><p style="margin-left:0; margin-right:0">ps：登录账号在登录页左边</p></blockquote><h2>lamp-cloud 技术栈 / 版本介绍：</h2><ul><li>所涉及的相关的技术有： 
  <ul><li>JSON 序列化：Jackson</li><li>消息队列：RabbitMQ</li><li>缓存：Redis</li><li>数据库： MySQL 8</li><li>定时器：采用 xxl-jobs 项目进行二次改造</li><li>前端：vue3 + ant design vue</li><li>持久层框架： Mybatis-plus</li><li>代码生成器：基于 Mybatis-plus-generator 自定义</li><li>API 网关：Gateway</li><li>服务注册 &amp; 发现和配置中心: Nacos</li><li>服务消费：OpenFeign</li><li>负载均衡：loadbalancer</li><li>服务熔断：sentinel</li><li>项目构建：Maven</li><li>分布式事务： seata</li><li>分布式系统的流量防衞兵： Sentinel</li><li>监控： spring-boot-admin</li><li>链路调用跟踪：SkyWalking</li><li>文件服务器：FastDFS 5.0.5 / 阿里云 OSS / 本地存储 / MinIO / 华为云 OBS</li><li>Nginx</li></ul></li><li>部署方面： 
  <ul><li>服务器：CentOS</li><li>Jenkins</li><li>Docker</li><li>Kubernetes</li></ul></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Mon, 04 Mar 2024 01:08:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/281346</guid>
            <link>https://www.oschina.net/news/281346</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[🔥🔥🔥 httpsok-v1.8.0 SSL 证书自动续签就应该这么简单]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h1>🔥🔥🔥httpsok-v1.8.0 SSL 证书自动续签就应该这么简单</h1><h2>简介</h2><p><strong>🔥🔥🔥一行命令，一分钟轻松搞定 SSL 证书自动续期</strong></p><p><strong>httpsok</strong> 是一个便捷的 HTTPS 证书自动续签工具，专为 Nginx 服务器设计。已服务众多中小企业，<strong>稳定</strong>、<strong>安全</strong>、<strong>可靠</strong>。</p><h2>文档</h2><ul><li>帮助文档：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ffposter.cn%2Fdoc%2F" target="_blank">https://fposter.cn/doc/</a></li></ul><h2>特性</h2><ul><li><strong>⚡️ 简单高效</strong> 一行命令，一分钟轻松搞定 SSL 证书自动续签</li><li><strong>✅ 无侵入</strong> 不会修改系统现有的 <code>nginx</code> 配置</li><li><strong>✅ 自动检测</strong> 对于<strong>老旧系统</strong>、<strong>复杂配置</strong>的生产环境，轻松检测，无缝支持</li><li><strong>✅ 多服务器</strong> 支持多台服务器多个域名</li><li><strong>✅ 泛解析、多级域名</strong> 域名泛解析、多级域名也不在话下</li><li><strong>✅ 证书监控</strong> 对于即将失效的证书，提供公众号推送提醒</li><li><strong>✅ 兼容性好</strong> 能够兼容主流的 Linux 系统，<code>CentOS</code><code>TencentOS</code></li><li><strong>✅ 适配面板</strong> 适配主流的 Linux 操作面板，如<code>宝塔</code>、<code>AMH</code>、<code>cPanel</code>等</li></ul><p>别看新特性了， <strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ffposter.cn%2Fdoc%2Fguide%2Fquickstart.html" target="_blank">快来试试吧😄😄</a></strong></p><h1>快速开始</h1><p>忘掉繁琐的证书续签操作，让证书续签回归应有的简单。</p><h2>安装 httpsok</h2><pre><code class="language-bash">curl -s https://fposter.cn/httpsok.sh | bash -s 'your token'
</code></pre><blockquote><p>登陆控制枱 👉 👉 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ffposter.cn%2Fconsole%2F" target="_blank">获取 token</a></p></blockquote><p>安装成功后，会自动检测一次系统中的<code>nginx</code>证书。</p><pre><code class="language-bash">2024-03-04 04:54:23 os-name: TencentOS Server 2.4
2024-03-04 04:54:23 version: nginx/1.20.1
2024-03-04 04:54:23 nginx-config: /etc/nginx/nginx.conf
2024-03-04 04:54:23 nginx-config-home: /etc/nginx

Httpsok make SSL easy.     https://fposter.cn/ 
version: 1.8.0
TraceID: 92592593890e8a442be7f50c7ddc5d2d
home: /root/.httpsok

2024-03-04 04:54:24 DNS check pass
2024-03-04 04:54:24 71e1bbd5f2e5415e /etc/nginx/certs/api.fastposter.net_nginx/api.fastposter.net_bundle.crt Cert valid
2024-03-04 04:54:24 ee262ecba47d4173 /etc/nginx/certs/fposter.cn_nginx/fposter.cn_bundle.crt Cert valid

2024-03-04 04:54:24 Nginx reload needless.
</code></pre><h2>DNS 解析配置</h2><p>出现如下提示</p><p>请添对应的 DNS-CNAME 解析记录，参考<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ffposter.cn%2Fdoc%2Fguide%2Fdns.html" target="_blank">DNS 解析配置</a>，<strong>只需配置一次即可</strong>。</p><p><strong>添加成功后请稍等 1 分钟左右</strong>（DNS 生效需要一小会儿），再次运行安装脚本即可。</p><pre><code class="language-bash">DNS-CNAME 解析无效，参考：https://fposter.cn/doc/guide/dns.html
请添以下 DNS-CNAME 解析记录（只需配置一次即可）: 

_acme-challenge.yourdomain.com &gt;&gt; 043a438043a438d40c.httpsok.com

</code></pre><h2>完成</h2><p>没错，已经结束了，<strong>SSL 证书自动续签就应该这么简单</strong>。</p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 03 Mar 2024 23:05:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/281341</guid>
            <link>https://www.oschina.net/news/281341</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[EasyGoAdmin 敏捷开发框架 Beego+EleVue 版本 v2.5.0 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff; color:#333333">v2.5.0 更新内容：</span><br><span style="background-color:#ffffff; color:#333333">1、go.mod 依赖管理导入 Excel 操作类依赖；</span><br><span style="background-color:#ffffff; color:#333333">2、新增职级管理导出 Excel 数据的功能；</span><br><span style="background-color:#ffffff; color:#333333">3、新增职级管理导入 Excel 模板文件；</span><br><span style="background-color:#ffffff; color:#333333">4、新增职级管理导入 Excel 数据的功能；</span><br><span style="background-color:#ffffff; color:#333333">5、新增职级管理导入、导出和下载模板的路由；</span><br><span style="background-color:#ffffff; color:#333333">6、修复近期用户使用过程中反馈的 BUG；</span></p><div><div><div><p style="margin-left:0; margin-right:0"><span style="background-color:#ffffff; color:#40485b">一款 Go 语言基于 Beego、Vue、ElementUI、MySQL 等框架精心打造的一款模块化、插件化、高性能的前后端分离架构敏捷开发框架，可快速搭建前后端分离后台管理系统，本着简化开发、提升开发效率的初衷，框架自研了一套个性化的组件，实现了可插拔的组件式开发方式，同时为了敏捷快速开发，框架特地集成了代码生成器，完全自主研发了自定义 GO 后端服务模板和前端 Vue 自定义模板，可以根据已建好的表结构，可以快速的一键生成整个模块的所有代码和增删改查等等功能业务，真正实现了低代码开发方式，极大的节省了人力成本的同时提高了开发效率，缩短了研发周期，是一款真正意义上实现组件化、可插拔式的敏捷开发框架。</span></p><h2>软件信息</h2><ul><li>软件名称：EasyGoAdmin 敏捷开发框架 Beego+EleVue 版本</li><li>官网网址：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.easygoadmin.vip" target="_blank">https://www.easygoadmin.vip</a></li><li>文档网址：<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fdocs.beego.elevue.easygoadmin.vip" target="_blank">http://docs.beego.elevue.easygoadmin.vip</a></li><li>演示地址：<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmanage.beego.elevue.easygoadmin.vip" target="_blank">http://manage.beego.elevue.easygoadmin.vip</a></li></ul><h2>版本说明</h2><table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:0px; border:none; box-sizing:border-box; color:#40485b; display:block; font-family:-apple-system,BlinkMacSystemFont,&quot;Segoe UI&quot;,Helvetica,Arial,&quot;Apple Color Emoji&quot;,&quot;Segoe UI Emoji&quot;,&quot;Segoe UI Symbol&quot;,&quot;Liberation Sans&quot;,&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,&quot;Hiragino Sans GB&quot;,&quot;Wenquanyi Micro Hei&quot;,&quot;WenQuanYi Zen Hei&quot;,&quot;ST Heiti&quot;,SimHei,SimSun,&quot;WenQuanYi Zen Hei Sharp&quot;,sans-serif; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; line-height:inherit; margin:0px 0px 16px; max-width:100%; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:635px; word-break:initial; word-spacing:0px"><tbody><tr><th>版本名称</th><th>版本说明</th><th>版本地址</th></tr></tbody><tbody><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">GoFrame+Layui 混编版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 GoFrame、Layui 等框架研发</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/easygoadmin/EasyGoAdmin_GoFrame_Layui">https://gitee.com/easygoadmin/EasyGoAdmin_GoFrame_Layui</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Beego+Layui 混编版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 Beego、Layui 等框架研发</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/easygoadmin/EasyGoAdmin_Beego_Layui">https://gitee.com/easygoadmin/EasyGoAdmin_Beego_Layui</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Gin+Layui 混编版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 Gin、Layui 等框架研发</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/easygoadmin/EasyGoAdmin_Gin_Layui">https://gitee.com/easygoadmin/EasyGoAdmin_Gin_Layui</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Iris+Layui 混编版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 Iris、Layui 等框架研发</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/easygoadmin/EasyGoAdmin_Iris_Layui">https://gitee.com/easygoadmin/EasyGoAdmin_Iris_Layui</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Echo+Layui 混编版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 Echo、Layui 等框架研发</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/easygoadmin/EasyGoAdmin_Echo_Layui">https://gitee.com/easygoadmin/EasyGoAdmin_Echo_Layui</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Revel+Layui 混编版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 Revel、Layui 等框架研发</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/easygoadmin/EasyGoAdmin_Revel_Layui">https://gitee.com/easygoadmin/EasyGoAdmin_Revel_Layui</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">GoFrame+EleVue 前后端分离版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 GoFrame、Vue、ElementUI 等框架研发前后端分离版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/easygoadmin/EasyGoAdmin_GoFrame_EleVue">https://gitee.com/easygoadmin/EasyGoAdmin_GoFrame_EleVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Beego+EleVue 前后端分离版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 Beego、Vue、ElementUI 等框架研发前后端分离版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/easygoadmin/EasyGoAdmin_Beego_EleVue">https://gitee.com/easygoadmin/EasyGoAdmin_Beego_EleVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Gin+EleVue 前后端分离版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 Gin、Vue、ElementUI 等框架研发前后端分离版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/easygoadmin/EasyGoAdmin_Gin_EleVue">https://gitee.com/easygoadmin/EasyGoAdmin_Gin_EleVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Iris+EleVue 前后端分离版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 Iris、Vue、ElementUI 等框架研发前后端分离版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/easygoadmin/EasyGoAdmin_Iris_EleVue">https://gitee.com/easygoadmin/EasyGoAdmin_Iris_EleVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Echo+EleVue 前后端分离版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 Echo、Vue、ElementUI 等框架研发前后端分离版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/easygoadmin/EasyGoAdmin_Echo_EleVue">https://gitee.com/easygoadmin/EasyGoAdmin_Echo_EleVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Revel+EleVue 前后端分离版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 Revel、Vue、ElementUI 等框架研发前后端分离版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/easygoadmin/EasyGoAdmin_Revel_EleVue">https://gitee.com/easygoadmin/EasyGoAdmin_Revel_EleVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">GoFrame+AntdVue 前后端分离版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 GoFrame、Vue、AntDesign 等框架研发前后端分离版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/easygoadmin/EasyGoAdmin_GoFrame_AntdVue">https://gitee.com/easygoadmin/EasyGoAdmin_GoFrame_AntdVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Beego+AntdVue 前后端分离版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 Beego、Vue、AntDesign 等框架研发前后端分离版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/easygoadmin/EasyGoAdmin_Beego_AntdVue">https://gitee.com/easygoadmin/EasyGoAdmin_Beego_AntdVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Gin+AntdVue 前后端分离版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 Gin、Vue、AntDesign 等框架研发前后端分离版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/easygoadmin/EasyGoAdmin_Gin_AntdVue">https://gitee.com/easygoadmin/EasyGoAdmin_Gin_AntdVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Iris+AntdVue 前后端分离版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 Iris、Vue、AntDesign 等框架研发前后端分离版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/easygoadmin/EasyGoAdmin_Iris_AntdVue">https://gitee.com/easygoadmin/EasyGoAdmin_Iris_AntdVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Echo+AntdVue 前后端分离版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 Echo、Vue、AntDesign 等框架研发前后端分离版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/easygoadmin/EasyGoAdmin_Echo_AntdVue">https://gitee.com/easygoadmin/EasyGoAdmin_Echo_AntdVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Revel+AntdVue 前后端分离版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 Revel、Vue、AntDesign 等框架研发前后端分离版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/easygoadmin/EasyGoAdmin_Revel_AntdVue">https://gitee.com/easygoadmin/EasyGoAdmin_Revel_AntdVue</a></td></tr></tbody></table><h2>模块展示<br><img alt="" height="1080" src="https://oscimg.oschina.net/oscnet/up-617e549078819275035b5007c7a6649f210.png" width="1920" referrerpolicy="no-referrer"></h2></div></div></div></div>
                                    ]]>
            </description>
            <pubDate>Sun, 03 Mar 2024 22:56:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/281340</guid>
            <link>https://www.oschina.net/news/281340</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[web-spring-boot 高度扩展组件 2.0.0 版本发布 Java web boot 工具]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h4>介绍</h4><h3>web Spring Boot 低耦合集成的高度扩展组件</h3><ul><li>cors（跨域配置）、crypto（参数以及加解密）、csrf（csrf 攻击）、dict(字典转义)、exception(通用异常)、i18n、 jdk8time 、</li><li>log(应用日志)、response(通用结果返回)、sensitive(数据脱敏) 、event 消息推送 、 sqlInjection(SQL 注入)</li><li>apiversion（api 版本) 、threadpool(通用线程配置) 、validation(参数验证)、 xss(xss 过滤) rest(调用)、 envencrypt（配置文件加密）</li><li>tree（注解树构造）、strategy（策略模式）、logbackandlog4j2-sensitive sensitive（日志脱敏） 、 通用工具</li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">spring boot 座标</p><pre><span>&lt;dependency&gt;</span><span> &lt;groupId&gt;cn.xphsc.boot&lt;/groupId&gt;</span><span>    &lt;artifactId&gt;web-spring-boot-starter&lt;/artifactId&gt;</span><span>    &lt;version&gt;2.0.0&lt;/version&gt;</span><span> &lt;/dependency&gt;</span></pre></div>
                                    ]]>
            </description>
            <pubDate>Sun, 03 Mar 2024 10:17:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/281304/web-spring-boot-2-0-0</guid>
            <link>https://www.oschina.net/news/281304/web-spring-boot-2-0-0</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Ant Design 5.15.0 发布，企业级 UI 设计语言和 React 实现]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>An Design 5.15.0 现已发布，主要变化如下：</p><ul><li>ConfigProvider 
  <ul><li>ConfigProvider 支持 Input.TextArea 组件<span>&nbsp;</span><code>allowClear</code>、<code>autoComplete</code>、<code>className</code>、<code>style</code>、<code>classNames</code>、<code>styles</code><span>&nbsp;</span>属性。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design%2Fpull%2F47589" target="_blank">#47589</a></li><li>ConfigProvider 支持 Input 组件<span>&nbsp;</span><code>allowClear</code><span>&nbsp;</span>属性。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design%2Fpull%2F47602" target="_blank">#47602</a></li><li>ConfigProvider 支持 Menu 组件<span>&nbsp;</span><code>expandIcon</code><span>&nbsp;</span>属性。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design%2Fpull%2F47561" target="_blank">#47561</a></li><li>ConfigProvider 支持 Collapse 组件<span>&nbsp;</span><code>expandIcon</code><span>&nbsp;</span>属性。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design%2Fpull%2F47473" target="_blank">#47473</a></li><li>ConfigProvider 支持 Tabs<span>&nbsp;</span><code>removeIcon</code><span>&nbsp;</span>属性, 在设置<span>&nbsp;</span><code>type="editable-card"</code><span>&nbsp;</span>时有效。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design%2Fpull%2F47334" target="_blank">#47334</a></li><li>CSS 变量的前缀默认跟随 ConfigProvider 的<span>&nbsp;</span><code>prefixCls</code><span>&nbsp;</span>属性。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design%2Fpull%2F47481" target="_blank">#47481</a></li><li>ConfigProvider 中 CardProps<span>&nbsp;</span><code>styles</code><span>&nbsp;</span>设为可选。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design%2Fpull%2F47601" target="_blank">#47601</a></li></ul></li><li>Select、Checkbox、Radio、DatePicker、TreeSelect、Cascader 支持<span>&nbsp;</span><code>focus</code><span>&nbsp;</span>功能支持传递<span>&nbsp;</span><code>options</code>。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design%2Fpull%2F47664" target="_blank">#47664</a></li><li>Modal 支持在<span>&nbsp;</span><code>closable</code><span>&nbsp;</span>中配置<span>&nbsp;</span><code>aria-*</code>。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design%2Fpull%2F47650" target="_blank">#47650</a></li><li>Alert 支持在<span>&nbsp;</span><code>closable</code><span>&nbsp;</span>中配置<span>&nbsp;</span><code>aria-*</code>。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design%2Fpull%2F47474" target="_blank">#47474</a></li><li>Tabs 组件支持<span>&nbsp;</span><code>removeIcon</code><span>&nbsp;</span>属性，在设置<span>&nbsp;</span><code>type="editable-card"</code><span>&nbsp;</span>时有效。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design%2Fpull%2F47334" target="_blank">#47334</a></li><li>Drawer 
  <ul><li>Drawer 支持在<span>&nbsp;</span><code>closable</code><span>&nbsp;</span>中配置<span>&nbsp;</span><code>aria-*</code>。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design%2Fpull%2F47543" target="_blank">#47543</a></li><li>Drawer 支持传递<span>&nbsp;</span><code>aria-*</code><span>&nbsp;</span>属性给 panel 节点。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design%2Fpull%2F47387" target="_blank">#47387</a></li></ul></li><li>Table 
  <ul><li>Table 新增<span>&nbsp;</span><code>filterOnClose</code><span>&nbsp;</span>用于指定是否在筛选菜单关闭时触发筛选。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design%2Fpull%2F47451" target="_blank">#47451</a></li><li>Table 新增<span>&nbsp;</span><code>components.header.table</code><span>&nbsp;</span>以自定义滚动列时的标题组件。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design%2Fpull%2F47382" target="_blank">#47382</a></li><li>修复 Table<span>&nbsp;</span><code>sticky</code><span>&nbsp;</span>下，初次渲染不会显示滚动条的问题。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design%2Fpull%2F47382" target="_blank">#47382</a></li><li>修复 Table<span>&nbsp;</span><code>column.title</code><span>&nbsp;</span>为空时列头没有使用<span>&nbsp;</span><code>th</code><span>&nbsp;</span>元素的问题。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design%2Fpull%2F47382" target="_blank">#47382</a></li><li>修复 Table 使用虚拟列表时<span>&nbsp;</span><code>prefixCls</code><span>&nbsp;</span>无效的问题。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design%2Fpull%2F47639" target="_blank">#47639</a></li><li>修复 Table 固定列时阴影展示异常的问题。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design%2Fpull%2F47518" target="_blank">#47518</a></li></ul></li><li>修复 Tree 使用 DirectoryTree 时，按住 shift 连续多选报错的问题。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design%2Fpull%2F47567" target="_blank">#47567</a></li><li>修复 Form 存在 Form.List 时，<code>isFieldsTouched(true)</code><span>&nbsp;</span>始终会返回<span>&nbsp;</span><code>false</code><span>&nbsp;</span>的问题。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design%2Fpull%2F47629" target="_blank">#47629</a></li><li>修复 Button 不兼容 v4<span>&nbsp;</span><code>type=''</code><span>&nbsp;</span>的问题。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design%2Fpull%2F47612" target="_blank">#47612</a></li><li>重构 Typography 省略测量逻辑以支持动态行高的场景。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design%2Fpull%2F47597" target="_blank">#47597</a></li><li>移除 Tag 组件多余的 margin 样式。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design%2Fpull%2F47504" target="_blank">#47504</a></li><li>杂项：修复不能在 pnpm 配置<span>&nbsp;</span><code>hoist: false</code><span>&nbsp;</span>下编译的问题。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design%2Fpull%2F47587" target="_blank">#47587</a></li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">更新说明：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design%2Freleases%2Ftag%2F5.15.0" target="_blank">https://github.com/ant-design/ant-design/releases/tag/5.15.0</a></p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 03 Mar 2024 02:32:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/281247/ant-design-5-15-0-released</guid>
            <link>https://www.oschina.net/news/281247/ant-design-5-15-0-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[CudaText 1.210.0 发布，跨平台的文本编辑器]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>CudaText 是一个跨平台的文本编辑器，用 Object Pascal 编写。它是开源项目，启动速度相当快，它可以通过 Python 插件进行扩展，借助 EControl 引擎还带来了功能丰富的语法分析器。</p><p>CudaText 1.210.0 正式发布，更新内容如下：</p><ul><li>添加：使用新版本的 fcl-json lib 更快地加载具有大更改文件文本的 40Mb 大小的大会话文件</li><li>添加：可以通过新选项「find_ctrl_enter」在查找对话框中禁用 Ctrl+Enter 热键</li><li>添加：可以通过新选项「find_hi_max_line_len」禁用查找对话框的「Highlight all」功能</li><li>修复：插件 Insert_Pics 无法为分割视图编辑器设置「scroll last line on top」属性</li><li>修复：Windows：修复通过 Alt-Tab 从 _non-modal_ plugin 对话框聚焦主应用程序窗口的问题（尚不存在此类 major plugins）</li><li>修复：Qt5 版本：热键显示为 `、Ctrl+`、Minus、Shift+Minus、Shift+=</li><li>修复：Qt5 版本：按「Find&nbsp;」后 FindInFiles 插件输入字段为空</li></ul><p><span style="background-color:#ffffff; color:#333333">更多详情可查看：</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcudatext.github.io%2Fhistory.txt" target="_blank">https://cudatext.github.io/history.txt</a></p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 03 Mar 2024 02:23:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/281246/cudatext-1-210-0-released</guid>
            <link>https://www.oschina.net/news/281246/cudatext-1-210-0-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[简单易用的 Open Ai Java SDK 2024.01.1 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><blockquote><p>推荐一套基于 SpringBoot 开发的简单、易用的开源权限管理平台，建议下载使用: <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdevlive-community%2Fauthx" target="_blank">https://github.com/devlive-community/authx</a></p></blockquote><blockquote><p>推荐一套功能强大的开源数据中台系统：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdevlive-community%2Fdatacap" target="_blank">https://github.com/devlive-community/datacap</a></p></blockquote><blockquote><p>推荐一套全平台数据库管理工具，建议下载使用: <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdevlive-community%2Fdbm" target="_blank">https://github.com/devlive-community/dbm</a></p></blockquote><p>OpenAI Java SDK 主要为 Java 开发人员提供方便易用的 SDK 来与开放 AI 模型的 API 进行交互依赖库。</p><h3>创建助手</h3><hr><pre><code>AssistantsEntity entity = AssistantsEntity.builder()
        .name(<span>"Math Tutor"</span>)
        .model(CompletionModel.GPT_35_TURBO)
        .instructions(<span>"You are a personal math tutor. When asked a question, write and run Python code to answer the question."</span>)
        .build();
client.createAssistants(entity);
</code></pre><h3>创建助手文件</h3><hr><pre><code>client.createAssistantsFile(<span>"file-jNuKdx61rNQ0FUhuPFpMNmGZ"</span>,<span>"asst_xv9N9dNXstuV8OVLElLqgV7U"</span>)
</code></pre><h3>列出助手</h3><hr><pre><code>client.listAssistants(<span>null</span>);

<span>// With query params</span>
QueryEntity configure = QueryEntity.builder()
        .limit(<span>2</span>)
        .build();
client.assistants(configure);
</code></pre><h3>列出助手文件</h3><hr><pre><code>client.assistantsFiles(<span>"asst_xv9N9dNXstuV8OVLElLqgV7U"</span>));
</code></pre><h3>检索助手</h3><hr><pre><code>client.retrieveAssistant(<span>"asst_xv9N9dNXstuV8OVLElLqgV7U"</span>);
</code></pre><h3>检索助手文件</h3><hr><pre><code>client.retrieveAssistantFile(<span>"asst_xv9N9dNXstuV8OVLElLqgV7U"</span>,<span>"file-jNuKdx61rNQ0FUhuPFpMNmGZ"</span>);
</code></pre><h3>修改助手</h3><hr><pre><code>AssistantsEntity entity = AssistantsEntity.builder()
        .name(<span>"Math Tutor 1"</span>)
        .model(CompletionModel.GPT_35_TURBO)
        .instructions(<span>"You are a personal math tutor. When asked a question, write and run Python code to answer the question."</span>)
        .build();
client.updateAssistant(<span>"asst_xv9N9dNXstuV8OVLElLqgV7U"</span>,entity);
</code></pre><h3>删除助手</h3><hr><pre><code>client.deleteAssistant(<span>"asst_xv9N9dNXstuV8OVLElLqgV7U"</span>);
</code></pre><h3>删除助手文件</h3><hr><pre><code>client.deleteAssistantFile(<span>"asst_xv9N9dNXstuV8OVLElLqgV7U"</span>,<span>"file-jNuKdx61rNQ0FUhuPFpMNmGZ"</span>);
</code></pre><p>如果您对我们的项目感兴趣，欢迎贡献源码或 fork 源码。</p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdevlive-community%2Fopenai-java-sdk" target="_blank">GitHub</a></p><p><a href="https://gitee.com/devlive-community/openai-java-sdk">Gitee</a></p><p>感谢大家支持。</p><p><img height="224" src="https://oscimg.oschina.net/oscnet/up-c907066fec5d17b77416af5f041f48e043f.jpg" width="646" referrerpolicy="no-referrer"></p><p>欢迎大家关注我们的公众号，我们会每周推送优秀的开源软件给大家以供参考使用。</p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 03 Mar 2024 02:10:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/281244/devlive-openai-java-sdk-2-23-01-1</guid>
            <link>https://www.oschina.net/news/281244/devlive-openai-java-sdk-2-23-01-1</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[PowerJob v4.3.8 已经发布，分布式任务调度中间件]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>PowerJob v4.3.8 已经发布，分布式任务调度中间件</p><p>此版本更新内容包括：</p><h1>PowerJob 主框架</h1><p>PowerJob 全体成员祝大家龙年腾飞，新的一年身体健康，万事如意，阖家欢乐，幸福安康！</p><h2>Features</h2><ul><li>Map/MapReduce 增强 
  <ul><li>性能优化：底层执行架构升级，通过 SWAP 置换支持千万/亿级子任务</li><li>策略优化：支持 TaskTracker 行为配置（任务配置-高级设置-TaskTracker 行为），新增主节点 PADDLING（划水）模式。启用后主节点只负责管理，不参与计算，稳定性最优。适用于节点数量非常多的大规模计算场景，少一个计算节点来换取稳定性提升。</li></ul></li><li>运维增强：Map/MapReduce 类任务开放子任务查询功能，清晰追踪集群计算动态</li><li>调度策略增强：新增指定主节点（SPECIFY）模式。常用于 Map/MapReduce 等场景，大规模计算时，主节点部署/重启会导致任务完全失败，因此可为主节点搭建一个隔离环境，通过该参数指定主节点到该隔离环境运行，使其摆脱普通 worker 节点部署带来的影响。指定语法等同于「执行机器地址」的语法，填写 IP 或者 TAG。</li></ul><h2>Bugfix</h2><ul><li>fix: 跨版本的 http 协议序列化兼容性问题（低版本可通过单独升级 <code>powerjob-remote-impl-http</code> 依赖到最新版本解决）</li></ul><h2>Compatibility</h2><ul><li>powerjob-server 在前序版本的基础上，数据库 job_info 表新增 <code>dispatch_strategy_config</code>、<code>advanced_runtime_config</code> 字段</li><li>与上个版本完全兼容，即整体与 4.2.x、4.3.x 版本兼容（使用了 HTTP 协议需要升级 <code>powerjob-remote-impl-http</code> 以修复序列化 BUG）</li></ul><p>详情查看：<a href="https://gitee.com/KFCFans/PowerJob/releases/v4.3.8">https://gitee.com/KFCFans/PowerJob/releases/v4.3.8</a></p></div>
                                    ]]>
            </description>
            <pubDate>Sat, 02 Mar 2024 11:50:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/281197/powerjob-4-3-8-released</guid>
            <link>https://www.oschina.net/news/281197/powerjob-4-3-8-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Dlink 1.0.0 已经发布，交互式的 FlinkSQL Studio]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Dlink 1.0.0 已经发布，交互式的 FlinkSQL Studio</p><p>此版本更新内容包括：</p><h3>升级说明</h3><ul><li>Dinky 1.0 是一个重构版本，对已有的功能进行重构，并新增了若干企业级功能，修复了 0.7 的一些局限性问题。 目前无法直接从 0.7 升级到 1.0。建议重新部署 1.0 版本。</li><li>自 Dinky 1.0 版本起，Dinky 社区将不再维护 1.0 之前的所有版本。</li><li>自 Dinky 1.0 版本起，Dinky 社区将对 Flink 1.14.x 及以上版本提供支持，不再维护 Flink 1.14 以下的版本。同时 Flink 新增一些特性，Dinky 也会逐步支持。</li><li>Dinky 1.0 及以后版本, Flink 每新增一个大版本，Dinky 也会新增一个大版本，同时会视情况剔除一个 Dinky-Client 版本。剔除版本可能会进行投票，投票结果决定剔除的版本。</li><li>在重构过程中陆续发布了 4 个 RC 版本,RC 版本可以进行升级,但是仍建议重新部署 1.0-RELEASE 版本。避免出现一些位置问题。</li><li>Dinky 0.7 版本的用户可以继续使用 0.7 版本，但是不再提供任何维护和支持。建议尽快安装 1.0 版本。</li></ul><h3>不兼容变更</h3><ul><li>CDCSOURCE 动态变量定义由<code>${}</code>改为<code>#{}</code></li><li><code>_CURRENT_DATE_</code> 等全局变量移除，使用表达式变量代替</li><li>Flink Jar 任务定义由表单改为 EXECUTE JAR 语法</li><li>Application 模式的 dinky-app-xxxx.jar 的定义移到集群配置中</li><li>数据库 DDL 部分不兼容升级</li><li>Dinky 内置 Catalog 的类型属性由 <code>dlink_catalog</code> 变更为 <code>dinky_catalog</code></li></ul><h3>重构</h3><ul><li>重构数据开发</li><li>重构运维中心</li><li>重构注册中心</li><li>重构 Flink 任务提交流程</li><li>重构 Flink Jar 任务提交方式</li><li>重构 CDCSOURCE 整库同步代码架构</li><li>重构 Flink 任务监控与告警</li><li>重构权限管理</li><li>重构系统配置为在线配置</li><li>重构推送 DolphinScheduler</li><li>重构打包方式</li></ul><h3>新功能</h3><ul><li>数据开发支持代码片段提示</li><li>支持实时打印 Flink 表数据</li><li>控制枱实时打印任务提交 log</li><li>支持 Flink CDC 3.0 整库同步</li><li>支持自定义告警规则和自定义告警模板</li><li>支持 Flink k8s operator 提交</li><li>支持代理 Flink webui 访问</li><li>新增 Flink 任务 Metrics 监控自定义图表</li><li>支持 Dinky jvm 监控</li><li>新增资源中心功能（local,hdfs,oss）并扩展 rs 协议</li><li>新增 Git UDF/JAR 项目托管及整体构建流程</li><li>支持全模式 Flink jar 任务提交</li><li>新增 ADD CUSTOMJAR 语法动态加载依赖</li><li>新增 ADD FILE 语法动态加载文件</li><li>openapi 支持自定义参数提交</li><li>权限系统升级，支持租户，角色，token，菜单权限</li><li>支持 LDAP</li><li>数据开发页面新增小工具功能</li><li>支持推送依赖任务至 DolphinScheduler</li><li>实现 Flink 实例停止功能</li><li>实现 CDCSOURCE 整库同步多并行度下数据有序</li><li>实现可配置方式的告警防重发功能</li><li>实现普通 SQL 可被 DolphinScheduler 调度执行</li><li>新增获取系统内加载的依赖 JAR，并进行分组， 便于排查 JAR 相关问题</li><li>实现集群配置测试连接功能</li><li>支持 H2、Mysql、Postgre 部署,默认为 H2</li></ul><h3>新语法</h3><ul><li>CREATE TEMPORAL FUNCTION 用于定义临时表函数</li><li>ADD FILE 用于动态加载类/配置等文件</li><li>ADD CUSTOMJAR 用于动态加载 JAR 依赖</li><li>PRINT TABLE 用于实时预览表数据</li><li>EXECUTE JAR 用于定义 Flink Jar 任务</li><li>EXECUTE PIPELINE 用于定义 Flink CDC 3.x 整库同步任务</li></ul><h3>修复</h3><ul><li>修复 auto.sh 的 CLASS_PATH 中缺少 extends 路径的问题</li><li>修复发布/下线后作业列表生命周期状态值没有重新渲染的问题</li><li>修复 Flink 1.18 set 语法不工作并产生 null 错误</li><li>修复提交历史的保存点机制问题</li><li>修复 Dinky Catalog 中创建视图的问题</li><li>修复 Flink application 不会抛出异常</li><li>修复告警选项渲染不正确</li><li>修复作业生命周期的问题</li><li>修复集群配置中 k8s 的 YAML 无法显示</li><li>修复运维中心作业列表耗时格式化错误</li><li>修复 Flink dag 提示框问题</li><li>修复 checkpoint 的路径未找到</li><li>修复向海豚调度推送作业时节点位置错误</li><li>修复当 set 配置中包含单引号时作业参数未生效的问题</li><li>升级 jmx_prometheus_javaagent 到 0.20.0 来解决一些 CVE</li><li>修复 checkpoint 展示问题</li><li>修复作业实例始终处于运行中状态</li><li>修复 Yarn Application 提交任务失败后缺少日志打印</li><li>修复作业配置不能渲染 yarn prejob 集群</li><li>修复 URL 拼错导致请求失败</li><li>修复多用户登录时出现相同令牌值插入错误的问题</li><li>修复告警实例表单渲染问题</li><li>修复 FlinkSQLEnv 无法检查的问题</li><li>修复 set 语句无法生效的问题</li><li>修复 yarn 集群配置自定义 Flink，hadoop 配置无效问题</li><li>修复运维中心检查点信息获取不到问题</li><li>修复 Yarn Application 作业结束后状态无法检测问题</li><li>修复 yarn 作业提交失败控制枱日志无打印问题</li><li>修复从集群配置启动的 Flink 实例无法在作业配置中选择的问题</li><li>修复 RECONNECT 状态作业状态识别错误</li><li>修复 FlinkJar 任务在提交到 PreJob 模式的问题</li><li>修复 Dinky 启动检测 pid 问题</li><li>修复内置 Paimon 与用户集成版本不一致时,导致冲突的问题 (使用 shade 实现)</li><li>修复 FlinkJar 任务在 Application 模式下 CheckPoint 参数不生效问题</li><li>修复修改 Task 作业时名称和备注信息更新错误的问题</li><li>修复注册数据源时密码为必填的问题</li><li>修复集群实例心跳检测不正确的问题</li><li>修复 Jar 任务提交不能使用 set 语法的问题</li><li>修复数据开发-&gt; 作业列表部分情况下无法折叠的问题</li><li>修复多线程下告警信息重复发送的问题</li><li>修复数据开发-&gt; 打开作业的 tag 高度问题</li><li>修复运维中心作业详情的 jobmanager 日志部分情况下无法正常展示的问题</li><li>修复 Catalog NPE 的问题</li><li>修复 prejob 任务状态错误的问题</li><li>修复 add customjar 语法问题</li><li>修复 jar 任务无法监控的问题</li><li>修复 Token 无效异常</li><li>修复语句分隔符导致的一系列问题, 并移除系统内配置</li><li>修复运维中心任务状态渲染问题</li><li>修复作业实例不存在时删除任务失败的问题</li><li>修复重复异常告警</li><li>修复 PythonFlink 提交的一些问题</li><li>修复 Application Mode 无法使用全局变量的问题</li><li>修复 K8s 任务由于未初始化资源类型导致无法启动问题</li><li>修复 Jar 任务的 pipeline 获取错误导致前端无法正常使用</li><li>修复 SqlServer 时间戳转换为字符串</li><li>修复带有 UDF 的任务发布时 NPE 问题</li><li>修复 Jar 任务无法获取执行历史问题</li><li>修复 Doris 数据源获取 DDL 以及查询时 NPE 导致前端崩溃问题</li></ul><h3>优化</h3><ul><li>添加作业配置项的键宽度</li><li>优化查询作业目录树</li><li>优化 Flink on yarn 的 app 提交</li><li>优化 Explainer 类使用建造者模式来构建结果</li><li>优化文档管理</li><li>通过 SPI 来实现 operator</li><li>优化文档表单弹出层</li><li>优化 Flink 实例的类型渲染</li><li>优化数据源详情搜索框</li><li>获取版本方式优化为后端接口返回</li><li>优化 CANCEL 作业逻辑，对于失联作业可强制停止</li><li>优化注册中心部分删除时的检测引用逻辑</li><li>优化作业创建时可指定作业模版</li><li>优化 Task 删除逻辑</li><li>优化部分前端国际化</li><li>优化执行预览时控制枱与结果 Tag 自动切换</li><li>优化 K8S 的 UDF 下载逻辑</li><li>优化整库同步之分库分表</li><li>优化注册中心-&gt;数据源列表跳转到详情页的逻辑</li><li>作业配置逻辑优化 (作业已发布状态下作业配置不可编辑)</li><li>优化数据开发中作业配置的集群实例渲染逻辑</li><li>优化 Flink 集群的心跳检测</li><li>优化数据源获取数据异常未反馈前端问题</li><li>优化程序停机策略为优雅停机</li><li>CDCSOURCE 支持最早偏移和时间戳 scanStartupMode</li><li>取消任务表保存点路径唯一性限制</li><li>优化 CDCSOURCE 从 Mysql 到 Doris 的 light_schema_change</li><li>优化启动脚本类路径添加 FLINK_HOME</li><li>优化一些前端的绝对路径为相对路径</li><li>修改默认的 admin 账户的密码为强密码</li></ul><h3>文档</h3><ul><li>完善注册中心的集群实例列表文档</li><li>完善注册中心的告警文档</li><li>完善注册中心的 Git 项目文档</li><li>修改域名</li><li>完善注册中心和认证中心的文档</li><li>完善贡献者开发文档</li><li>在 CDCSOURCE 添加参数描述 debezium.*</li><li>修改官网文档结构</li><li>添加部分数据开发相关文档</li><li>删除一些弃用/错误的文档</li><li>添加快速开始文档</li><li>添加部署文档</li><li>优化分库分表的文档</li><li>优化常规部署文档</li><li>添加告警防重发相关文档</li><li>优化 openapi 文档</li><li>添加 HDFS HA 配置文档</li><li>优化 LDAP 相关文档</li><li>修复一些文档单词错误问题</li><li>修复集成 DolphinScheduler 文档中版本错误问题</li></ul><h3>安全</h3><ul><li>CVE-2023-2976</li><li>CVE-2020-8908</li></ul><h3>其他</h3><ul><li>增加一些自动化 Action</li></ul><p>详情查看：<a href="https://gitee.com/DataLinkDC/Dinky/releases/1.0.0">https://gitee.com/DataLinkDC/Dinky/releases/1.0.0</a></p></div>
                                    ]]>
            </description>
            <pubDate>Sat, 02 Mar 2024 11:29:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/281195/dlink-1-0-0-released</guid>
            <link>https://www.oschina.net/news/281195/dlink-1-0-0-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[京墨 1.7.0 发布，开源的诗文（名句）、成语等的阅读 APP]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><img alt="" height="667" src="https://oscimg.oschina.net/oscnet/up-61bbe1e6790482c4ccb29ed313d16897ee1.jpg" width="300" referrerpolicy="no-referrer"><img alt="" height="667" src="https://oscimg.oschina.net/oscnet/up-a5a23d813a1a818053aef9c03c7ad0a0ce7.jpg" width="300" referrerpolicy="no-referrer"><img alt="" height="667" src="https://oscimg.oschina.net/oscnet/up-007754d821ff3874d24bbefda10e53b5d7c.jpg" width="300" referrerpolicy="no-referrer"><img alt="" height="667" src="https://oscimg.oschina.net/oscnet/up-a42126ab3610513aaa5203fad0e908d9495.jpg" width="300" referrerpolicy="no-referrer"></p><h2>1.7.0 更新日志</h2><ol><li>优化 UI 显示；</li><li>优化数据同步，尤其是诗文同步；</li><li>【诗文名句】【成语】【歇后语】模块添加收藏功能；</li><li>添加「滑动翻页」功能。</li></ol><h2>介绍</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">『京墨』开源的古诗词文（名句）、歇后语、成语、传统节日、绕口令等的阅读 APP</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">献给喜欢中华文字、文学、文化的人。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">目前的内容有：</p><ol><li><p style="margin-left:0; margin-right:0">诗文 110 万篇,包含诗、词、辞赋、残句、联、文等；</p></li><li><p style="margin-left:0; margin-right:0">诗文名句 10000 句；</p></li><li><p style="margin-left:0; margin-right:0">歇后语 14026 条；</p></li><li><p style="margin-left:0; margin-right:0">成语 30895 条；</p></li><li><p style="margin-left:0; margin-right:0">中国传统色 161 种；</p></li><li><p style="margin-left:0; margin-right:0">中国传统节日 19 个；</p></li><li><p style="margin-left:0; margin-right:0">二十四节气；</p></li><li><p style="margin-left:0; margin-right:0">绕口令 45 段；</p></li><li><p style="margin-left:0; margin-right:0">知识卡片 464 组；</p></li></ol><h2>平台支持</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Android 8.0 及以上</p></div>
                                    ]]>
            </description>
            <pubDate>Sat, 02 Mar 2024 04:48:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/281147/jingmo-1-7-0-released</guid>
            <link>https://www.oschina.net/news/281147/jingmo-1-7-0-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[🎉 领域模型即服务 | Wow 2.16.6 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><a href="https://ahoowang.gitee.io/wow/"><img alt="Wow:基于 DDD、EventSourcing 的现代响应式 CQRS 架构微服务开发框架" src="https://static.oschina.net/uploads/img/202312/13135012_Zb9v.svg" width="150" referrerpolicy="no-referrer"></a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FAhoo-Wang%2FWow%2Fblob%2Fmvp%2FLICENSE"><img alt="License" src="https://img.shields.io/badge/license-Apache%202-4EB1BA.svg" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FAhoo-Wang%2FWow%2Freleases"><img alt="GitHub release" src="https://img.shields.io/github/release/Ahoo-Wang/Wow.svg" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fmaven-badges.herokuapp.com%2Fmaven-central%2Fme.ahoo.wow%2Fwow-core"><img alt="Maven Central" src="https://maven-badges.herokuapp.com/maven-central/me.ahoo.wow/wow-core/badge.svg" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fapp.codacy.com%2Fgh%2FAhoo-Wang%2FWow%2Fdashboard%3Futm_source%3Dgh%26utm_medium%3Dreferral%26utm_content%3D%26utm_campaign%3DBadge_grade"><img alt="Codacy Badge" src="https://app.codacy.com/project/badge/Grade/cfc724df22db4f9387525258c8a59609" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fcodecov.io%2Fgh%2FAhoo-Wang%2FWow"><img alt="codecov" src="https://codecov.io/gh/Ahoo-Wang/Wow/branch/main/graph/badge.svg?token=uloJrLoQir" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FAhoo-Wang%2FWow"><img alt="Integration Test Status" src="https://github.com/Ahoo-Wang/Wow/actions/workflows/integration-test.yml/badge.svg" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FKotlinBy%2Fawesome-kotlin"><img alt="Awesome Kotlin Badge" src="https://kotlin.link/awesome-kotlin.svg" referrerpolicy="no-referrer"></a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><strong>领域驱动</strong><span>&nbsp;</span>|<span>&nbsp;</span><strong>事件驱动</strong><span>&nbsp;</span>|<span>&nbsp;</span><strong>测试驱动</strong><span>&nbsp;</span>|<span>&nbsp;</span><strong>声明式设计</strong><span>&nbsp;</span>|<span>&nbsp;</span><strong>响应式编程</strong><span>&nbsp;</span>|<span>&nbsp;</span><strong>命令查询职责分离</strong><span>&nbsp;</span>|<span>&nbsp;</span><strong>事件溯源</strong></p><blockquote><p style="margin-left:0; margin-right:0"><strong>官方文档：</strong><img alt="👉" height="14" src="https://cn-assets.gitee.com/assets/emoji/point_right-8d392cf32998e3bca12bb7b4ee10dae0.png" width="14" referrerpolicy="no-referrer"><span>&nbsp;</span><a href="https://ahoowang.gitee.io/wow/" target="_blank">https://ahoowang.gitee.io/wow/</a><span>&nbsp;</span><img alt="👈" height="14" src="https://cn-assets.gitee.com/assets/emoji/point_left-4570b6929b8880ab2e8b8031007fef18.png" width="14" referrerpolicy="no-referrer"></p></blockquote><h2>更新内容</h2><blockquote><p style="margin-left:0; margin-right:0"><strong>Make Easy Again</strong><span>&nbsp;</span>：再一次提升<span>&nbsp;</span><strong>Wow</strong><span>&nbsp;</span>框架开发效率。</p></blockquote><blockquote><p style="margin-left:0; margin-right:0">Wow 除了为命令 (Command) 自动生成了 OpenAPI 端点，另外还提供了查询 (Query) OpenAPI 端点。 这意味着开发人员通常只需专注于编写领域模型，即可完成服务开发，而无需费心处理查询逻辑的实现，极大提升了开发效率。</p></blockquote><ul><li>特性 (query): 支持<span>&nbsp;</span><code>Query DSL</code>，使得构建查询变得更加简单和直观</li><li>特性 (query): 支持<span>&nbsp;</span><code>SnapshotQueryService</code><span>&nbsp;</span>API</li><li>特性 (openapi): 支持<span>&nbsp;</span><code>QuerySnapshotRouteSpec</code><span>&nbsp;</span>API</li><li>特性 (openapi): 支持<span>&nbsp;</span><code>QuerySnapshotStateRouteSpec</code><span>&nbsp;</span>API</li><li>特性 (openapi): 支持<span>&nbsp;</span><code>PagedQuerySnapshotRouteSpec</code><span>&nbsp;</span>API</li><li>特性 (openapi): 支持<span>&nbsp;</span><code>PagedQuerySnapshotStateRouteSpec</code><span>&nbsp;</span>API</li><li>特性 (openapi): 支持<span>&nbsp;</span><code>SingleSnapshotRouteSpec</code><span>&nbsp;</span>API</li><li>特性 (openapi): 支持<span>&nbsp;</span><code>SingleSnapshotStateRouteSpec</code><span>&nbsp;</span>API</li><li>特性 (openapi): 支持<span>&nbsp;</span><code>CountSnapshotRouteSpec</code><span>&nbsp;</span>API</li><li>重构 (dashboard): 使用查询服务 (<code>QueryService</code>) 替换特定 API，提高了代码的可维护性</li><li>依赖 (dashboard): 升级<span>&nbsp;</span><code>karma</code><span>&nbsp;</span>版本，到<span>&nbsp;</span><code>v6.4.3</code></li><li>依赖 (dashboard): 升级<span>&nbsp;</span><code>monorepo</code><span>&nbsp;</span>版本，到<span>&nbsp;</span><code>v17.2.3</code></li><li>依赖 (test): 升级<span>&nbsp;</span><code>io.mockk:mockk</code><span>&nbsp;</span>版本，到<span>&nbsp;</span><code>v1.13.10</code></li><li>依赖 (opentelemetry): 升级<span>&nbsp;</span><code>io.opentelemetry.instrumentation:opentelemetry-instrumentation-bom</code><span>&nbsp;</span>版本，到<span>&nbsp;</span><code>v1.33.0</code></li><li>依赖 (build): 升级<span>&nbsp;</span><code>ksp</code><span>&nbsp;</span>版本，到<span>&nbsp;</span><code>v1.9.22-1.0.18</code></li></ul><h3>QueryDsl</h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">通过<span>&nbsp;</span><code>QueryDsl</code>，您可以轻松构建复杂的查询条件，例如：</p><div><pre><code>pagedQuery {
    pagination {
        index(1)
        size(10)
    }
    sort {
        "field1".asc()
    }
    condition {
        "field1" eq "value1"
        "field2" ne "value2"
        "filed3" gt 1
        "field4" lt 1
        "field5" gte 1
        "field6" lte 1
        "field7" like "value7"
        "field8" isIn listOf("value8")
        "field9" notIn listOf("value9")
        "field10" between (1 to 2)
        "field11" all listOf("value11")
        "field12" startsWith "value12"
        "field13" elemMatch {
            "field14" eq "value14"
        }
        "field15".isNull()
        "field16".notNull()
        and {
            "field3" eq "value3"
            "field4" eq "value4"
        }
        or {
            "field3" eq "value3"
            "field4" eq "value4"
        }
    }
}
</code></pre></div><h3>OpenAPI</h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">以下是一个示例<span>&nbsp;</span><code>curl</code><span>&nbsp;</span>命令，用于执行查询：</p><div><pre><code>  curl -X 'POST' \
  'http://localhost:8080/execution_failed/snapshot/pagination' \
  -H 'accept: application/json' \
  -H 'Content-Type: application/json' \
  -d '{
  "sort": [
    {
      "field": "_id",
      "direction": "DESC"
    }
  ],
  "pagination": {
    "index": 1,
    "size": 10
  },
  "condition": {
    "field": "",
    "operator": "AND",
    "value": "",
    "children": [
      {
        "field": "state.recoverable",
        "operator": "NE",
        "value": "UNRECOVERABLE",
        "children": []
      },
      {
        "field": "state.status",
        "operator": "NE",
        "value": "SUCCEEDED",
        "children": []
      },
      {
        "field": "state.isBelowRetryThreshold",
        "operator": "EQ",
        "value": false,
        "children": []
      }
    ]
  }
}'
</code></pre></div><h3>TypeScript</h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">在<span>&nbsp;</span><em>TypeScript</em><span>&nbsp;</span>中，您可以使用<span>&nbsp;</span><code>Conditions</code><span>&nbsp;</span>类来构建复杂的查询条件，例如：</p><div><pre><code>Conditions.and(
    [
        Conditions.ne(ExecutionFailedFields.RECOVERABLE, RecoverableType.UNRECOVERABLE),
        Conditions.ne(ExecutionFailedFields.STATUS, ExecutionFailedStatus.SUCCEEDED),
        Conditions.eq(ExecutionFailedFields.IS_BELOW_RETRY_THRESHOLD, false)
    ]
)</code></pre></div><h2>简介</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><em>Wow</em><span>&nbsp;</span>是一个基于领域驱动设计和事件溯源的现代响应式<span>&nbsp;</span><em>CQRS</em><span>&nbsp;</span>微服务开发框架，历经多年生产环境验证。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">旨在帮助开发者构建现代化的、高性能且易于维护的微服务应用程序，充分发挥领域驱动设计和事件溯源等模式优势的同时降低应用的复杂性以及实践成本。</p><blockquote><p style="margin-left:0; margin-right:0">值得一提的是，领域驱动设计和事件溯源并非微服务架构的专属，<em>Wow</em><span>&nbsp;</span>框架不仅适用于微服务开发，同样也可用于构建基于领域驱动设计的单体应用程序。</p></blockquote><h2>快速开始</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://ahoowang.gitee.io/wow/guide/getting-started.html">使用 Wow 项目模板快速创建基于 Wow 框架的 DDD 项目</a></p><h2>特性概览</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-Features" src="https://gitee.com/AhooWang/Wow/raw/main/documentation/docs/public/images/Features.png" referrerpolicy="no-referrer"></p><h2>架构图</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-Architecture" src="https://gitee.com/AhooWang/Wow/raw/main/documentation/docs/public/images/Architecture.svg" referrerpolicy="no-referrer"></p><h2>背景</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">随着业务的发展和复杂性的增加，传统的架构和开发方式逐渐显露出瓶颈。<em>领域驱动设计</em>和<em>事件溯源</em>等理念在提高系统设计的灵活性和可维护性方面表现出色，但在实践中常常需要面对复杂性和学习曲线的挑战。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><em>Wow</em><span>&nbsp;</span>框架的目标是以简单易用的方式将领域驱动设计和事件溯源等理念融入到微服务应用开发中，降低开发者的学习成本，提高开发效率。 通过提供现代响应式的<span>&nbsp;</span><em>CQRS</em><span>&nbsp;</span>架构和相关组件，<em>Wow</em><span>&nbsp;</span>框架旨在让开发者更专注于业务逻辑的实现，而不必过多关心底层技术细节。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">经过多年的实践和不断的演进，<em>Wow</em><span>&nbsp;</span>框架在生产环境中得到了验证，积累了丰富的经验。这些经验和反馈不仅丰富了框架的功能和性能，也为持续的改进和优化提供了宝贵的指导。</p><h2>对于开发者而言，<em>Wow</em><span>&nbsp;</span>框架意味着什么？</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">我曾告诫我的团队：如果我们过于依赖<em>数据驱动设计</em>而忽视<em>领域驱动设计</em>，我们最终将沦为<span>&nbsp;</span><em>CRUD</em><span>&nbsp;</span>工程师。</p><blockquote><p style="margin-left:0; margin-right:0"><em>CRUD</em><span>&nbsp;</span>工程师的竞争力和可替代性可想而知，这或许是为何会有<span>&nbsp;</span><em>35</em><span>&nbsp;</span>岁效应，企业显然更倾向于招募没有太多生活羁绊、更加廉价的<span>&nbsp;</span><em>25</em><span>&nbsp;</span>岁<span>&nbsp;</span><em>CRUD</em><span>&nbsp;</span>工程师。</p></blockquote><h3>业务价值</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">软件系统的核心价值体现在业务价值上，研发人员不应只关注技术实现上，而是应该更多地关注业务价值的实现。 这其中的好处显而易见，当你开发完一个业务系统之后，你将变成一个业务专家，甚至比跟你合作的领域专家还要专业，因为你需要洞察业务细节。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">使用<span>&nbsp;</span><em>Wow</em><span>&nbsp;</span>框架，意味着你将关注点放在围绕领域模型设计上，与业务专家一起探索业务领域，而不是关注于技术实现上。 你仅需编写领域模型，即可完成服务开发，<em>Wow</em><span>&nbsp;</span>框架自动为你准备好<span>&nbsp;</span><em>OpenAPI</em><span>&nbsp;</span>接口。</p><blockquote><p style="margin-left:0; margin-right:0">在《实现领域驱动设计》一书中，作者 Vaughn Vernon 提到：核心域才值得投入精力进行领域驱动设计， 但如果你使用<span>&nbsp;</span><em>Wow</em><span>&nbsp;</span>框架，你将发现，因为低廉开发成本、快速的开发效率，即使是次要的支撑子域也值得<span>&nbsp;</span><em>DDD</em>。</p></blockquote><h3>性能与伸缩性</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">随着业务的发展，你需要开始思考系统的性能和伸缩性问题。 在传统架构中，这牵扯到数据库关系模式、分片规则等复杂问题，同时你还需要处理因数据库分片导致的跨分片事务问题。 这时，你不得不修改你的业务代码，以适应水平拆分后的数据库架构。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">然而，如果你选择使用<span>&nbsp;</span><em>Wow</em><span>&nbsp;</span>框架，你将不再需要过多关注数据库关系模式、分片规则等问题。你的业务代码无需变更，系统能够轻松实现水平伸缩。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">你可以在这里了解更多关于<span>&nbsp;</span><a href="https://ahoowang.gitee.io/wow/guide/perf-test.html">Wow 框架的性能</a>。</p><h3>读写分离与同步延迟</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">读写分离是一种极为普遍的性能优化架构模式。 然而，同步延迟问题常伴随而来，事务执行成功后写库落库成功，但读库同步延迟，用户刷新页面后无法获取最新数据，从而对用户的体验产生影响。例如：</p><ul><li>用户发起下单事务，写库执行成功，但由于某种原因，读库同步延迟，用户刷新页面后发现订单未成功创建。</li><li>商家编辑完商品后，同步到<span>&nbsp;</span><em>Elasticsearch</em><span>&nbsp;</span>索引库，但由于某种原因，同步延迟，导致商家刷新页面后搜索不到该商品。</li></ul><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">通常，大家采用最简便的方法，等待 1 秒后刷新页面。 虽然这种方式能解决大多数数据同步延迟的问题，但效率不够高。 因为大多数情况下，同步在 100 毫秒内就已完成，剩余的 900 毫秒成了<em>浪费</em>。 然而，有时 1 秒无法完成同步，这就导致用户获取的数据变得<strong>无效</strong>。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">使用<span>&nbsp;</span><em>Wow</em><span>&nbsp;</span>框架，你可以通过等待<span>&nbsp;</span><em>PROJECTED</em><span>&nbsp;</span>信号完成，然后再将结果返回给用户，以更为优雅和高效的方式处理数据同步延迟的问题。</p><h3>工程质量</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><em>单元测试</em>是确保代码质量且符合预期业务需求的重要手段，但在传统架构中，单元测试往往是一项相当困难的任务，因为你需要考虑数据库连接、事务管理、数据清理等问题。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">使用<span>&nbsp;</span><em>Wow</em><span>&nbsp;</span>框架，你将会发现基于<span>&nbsp;</span><em>Given-&gt;When-&gt;Expect</em><span>&nbsp;</span>模式的测试套件，使得单元测试变得异常简单。 你只需关注领域模型是否符合预期，而无需为数据库连接等问题烦恼。</p><blockquote><p style="margin-left:0; margin-right:0">在实际应用中，我们将领域模型的单元测试覆盖率下限阈值设置为<span>&nbsp;</span><strong>85%</strong>，也是可以轻松实现的。</p><p style="margin-left:0; margin-right:0">在没有刻意要求的情况下，开发人员甚至自觉地将覆盖率提升至<span>&nbsp;</span><strong>95%</strong>。</p><p style="margin-left:0; margin-right:0">因此，每次提交代码都变得轻松自在，因为你确信你的代码经过了充分的测试，并且真正意义上从单元测试中获得了收益。</p></blockquote><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">在研发同级别的项目中，我们的测试团队在系统<span>&nbsp;</span><em>API</em><span>&nbsp;</span>测试中发现，基于 Wow 框架的项目，其<span>&nbsp;</span><em>BUG</em><span>&nbsp;</span>数仅为传统架构项目的<span>&nbsp;</span><strong>1/3</strong>。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">你可以在这里了解更多关于<span>&nbsp;</span><a href="https://ahoowang.gitee.io/wow/guide/test-suite.html">Wow 单元测试套件</a>。</p><h2>对于企业而言，<em>Wow</em><span>&nbsp;</span>框架意味着什么？</h2><h3>商业智能</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="传统架构 VS 事件溯源" src="https://foruda.gitee.com/images/1704878807657006766/300ee974_384561.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="ETL 同步流程" src="https://foruda.gitee.com/images/1704878793697689592/5fda25c1_384561.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><em>商业智能</em>是企业决策的关键支持，而数据则是商业智能的分析原料。业务数据越为丰富有价值，商业智能的分析结果越准确，决策也就更加可靠。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">与传统架构有着显著差异，<em>Wow</em><span>&nbsp;</span>提供了实时聚合根状态事件（<code>StateEvent</code>）和聚合命令（<code>Command</code>）作为数据分析的数据源，同时极大降低了实时<span>&nbsp;</span><em>ETL</em>（<code>Extract</code>,<span>&nbsp;</span><code>Transform</code>,<span>&nbsp;</span><code>Load</code>）的难度。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">在传统架构中，实现实时<span>&nbsp;</span><em>ETL</em><span>&nbsp;</span>通常需要经过繁琐的流程，包括<span>&nbsp;</span><code>DB-&gt;CDC-&gt;Process-&gt;DB</code>，而在<span>&nbsp;</span><em>Wow</em><span>&nbsp;</span>框架中，仅需一段简单的<span>&nbsp;</span><em>SQL</em><span>&nbsp;</span>脚本即可完成这一过程。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">另外，在传统架构中，使用<span>&nbsp;</span><em>CDC</em>（<code>MySql Binlog</code>）数据仅记录数据的变化，缺乏明确的业务语义。进行业务分析时，需要基于数据状态的变化推断出业务语义，这往往需要进行大量的数据处理。 相较之下，<em>Wow</em><span>&nbsp;</span>框架直接提供了聚合根状态事件和聚合命令作为数据分析的数据源，极大降低了数据处理的难度。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><em>Wow</em><span>&nbsp;</span>提供的实时同步机制将数据实时同步至数据仓库（<em>ClickHouse</em>），为实时数据分析提供了极大的便利。这种方法为商业智能提供了强有力的支持，构建了一个实时数据分析系统，使决策制定能够基于及时而准确的信息。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">你可以在这里了解更多关于<span>&nbsp;</span><a href="https://ahoowang.gitee.io/wow/guide/bi.html">Wow 商业智能</a>。</p><h3>操作审计</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><em>操作审计</em>是企业中保障安全性和合规性的重要组成部分，同时也是对系统操作进行监控和追踪的关键手段。<em>Wow</em><span>&nbsp;</span>框架在这方面为企业带来了显著的优势。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">通过记录聚合命令（<code>Command</code>）作为操作审计的数据源，<em>Wow</em><span>&nbsp;</span>框架能够详细追踪系统中的各种操作。 这些记录不仅包含了操作本身的内容，还涵盖了操作触发的副作用（<em>领域事件</em>），为审计提供了更为全面和准确的数据基础。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">相较于传统审计方法，<em>Wow</em><span>&nbsp;</span>框架的操作审计的数据源具备更加明确的业务语义，以及操作后产生的明确领域事件。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">此外，Wow 框架提供的实时数据同步机制也为操作审计带来了便利，确保了审计数据的及时性和一致性。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">了解更多关于<span>&nbsp;</span><a href="https://ahoowang.gitee.io/wow/guide/bi.html#%E8%81%9A%E5%90%88%E5%91%BD%E4%BB%A4">Wow 操作审计</a>。</p></div>
                                    ]]>
            </description>
            <pubDate>Sat, 02 Mar 2024 03:39:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/281137/wow-2-16-6-released</guid>
            <link>https://www.oschina.net/news/281137/wow-2-16-6-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
    </channel>
</rss>
