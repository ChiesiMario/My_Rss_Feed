<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[开源中国-软件更新资讯]]>
        </title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="https://rsshub.app/oschina/news/project" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[开源中国-软件更新资讯 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Mon, 25 Dec 2023 02:36:19 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[IoTOS-物联卡运营性能天花板-更新报告]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="margin-left:0; margin-right:0"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:#40485b">物联网卡国际化运营综合平台；多接口能力集成，极致同步算法、千万数据承载、国际化方案。多端系统支持、直充内充、阶梯限速、自动化运营方案、阶梯防超套、多支付方式；</span></p><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="margin-left:0; margin-right:0"><span style="color:#0e88eb">极致同步算法 (实测数据)：</span></p><p style="margin-left:0; margin-right:0"><span style="color:#40485b">&nbsp;&nbsp;&nbsp;&nbsp;每 20 秒触发一次同步，同步时间 20 秒内，配置【服务器 4 核 8G CPU30% 卡量 600+】</span></p><p style="margin-left:0; margin-right:0"><span style="color:#40485b"><span>&nbsp; &nbsp; ToB 卡量实测 17W+,&nbsp;配置【</span><span>服务</span><span>器 2</span><span>核 8G CPU20% 内存 60%</span><span>】</span></span></p><p style="margin-left:0; margin-right:0"><span style="color:#40485b"><span>&nbsp; &nbsp; 以上举例&nbsp;纯服务器，数据库、中间件无其他终端依赖。</span></span></p><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="margin-left:0; margin-right:0"><strong>一、发展历程</strong></p><p style="margin-left:0; margin-right:0">&nbsp;</p><p><span style="color:inherit">2023/06/18</span></p><p>&nbsp;</p><p style="color:inherit; margin-left:0; margin-right:0"><span style="color:inherit"><strong>开源 IoTOS 开源版 PC 项目，代码开源&nbsp;</strong></span></p><p style="margin-left:0; margin-right:0">在 Gitee 发布源码，荣获，推荐项目 200 点赞</p><p style="margin-left:0; margin-right:0">&nbsp;https://gitee.com/chinaiot/iotos</p><p><span style="color:inherit">2023/07/06</span></p><p>&nbsp;</p><p style="color:inherit; margin-left:0; margin-right:0"><span style="color:inherit"><strong>开源 IoTOS-App 移动端代码，开源</strong></span></p><p style="margin-left:0; margin-right:0">针对代理的移动端卡号管理诊断多终端部署</p><p style="margin-left:0; margin-right:0">安卓/ios/h5/小程序，等</p><p><span style="color:inherit">2023/07/09</span></p><p>&nbsp;</p><p style="color:inherit; margin-left:0; margin-right:0"><span style="color:inherit"><strong>开源 IoTOS-IM 消息中间件，开源</strong></span></p><p style="margin-left:0; margin-right:0">后续作为网络及时通信中间件</p><p><span style="color:inherit">2023/10/06</span></p><p>&nbsp;</p><p style="color:inherit; margin-left:0; margin-right:0"><span style="color:inherit"><strong>IoTOS-Plus 上线</strong></span></p><p style="margin-left:0; margin-right:0">国际化套餐设计（货币汇率/套餐多类型[流量、短信、语音、话费、套餐]/语言设置）</p><p style="margin-left:0; margin-right:0">套餐直充、内部充值运营，实现</p><p><span style="color:inherit">2023/11/06</span></p><p>&nbsp;</p><p style="color:inherit; margin-left:0; margin-right:0"><span style="color:inherit"><strong>IoTOS-Plus 更新</strong></span></p><p style="margin-left:0; margin-right:0">运营方案 [阶梯限速] [阶梯防超套]&nbsp;</p><p style="margin-left:0; margin-right:0">[达量停机-日用量/月用量] 触发灵活通知&nbsp;</p><p style="margin-left:0; margin-right:0">套餐组，拓展&nbsp;</p><p style="margin-left:0; margin-right:0">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;实名类型、实名顺序、卡密类型、套餐详情、用量算法、提前停机、移动端公告、</p><p style="margin-left:0; margin-right:0">充值金额/赠送金额，档位</p><p style="margin-left:0; margin-right:0">套餐，拓展</p><p style="margin-left:0; margin-right:0">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;无限量套餐、日租包、用量详情</p><p style="margin-left:0; margin-right:0"><span style="color:#6d67ff">2023/12/2X</span></p><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="color:inherit; margin-left:0; margin-right:0"><span style="color:#6d67ff"><strong>IoTOS-Plus-App 上线</strong></span></p><p style="margin-left:0; margin-right:0">卡号绑定、多卡切换、单卡余额、余额预存</p><p style="margin-left:0; margin-right:0">支付目前适配，微信、余额，支付</p><p style="margin-left:0; margin-right:0">单卡可开启自扣费，模式</p><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start"><strong>二、成绩成果</strong></p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">开源社区：</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">荣获 Gitee(码云) 推荐项目，获点赞 200+</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">半年度访问 IP 地址 6000+ 拉取下载 1000+</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">演示站点演示账号，登录 IP 1600+ 登录成功次数 2000</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">社区账号：</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">‘开源 IoTOS’ 公众号，关注人数 800+</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">‘开源 IoTOS’ 哔哩哔哩，投稿视频，播放量 10000+ 点赞/收藏 100+</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start"><strong>三、目前商业版功能介绍</strong></p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">常见物联网卡系统功能 ：</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">阶梯限速、阶梯防超套、达量断网，日用量/月用量、流量包套餐内部充值运营、用量记录、智能诊断、在线信息、自动化管理推送、多支付平台接入、</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">日租包套餐、 等。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">特色功能-智能诊断高适配 API：</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">依据上游 API 能力提供多 API 适配如，中国移动、中国联通、中国电信</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><div><img src="https://pic2.zhimg.com/v2-4734d893a554a43a610c69d4e656e349_b.jpg" width="1080" referrerpolicy="no-referrer"></div><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">(智能诊断，中国移动 )</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><div><img src="https://pic3.zhimg.com/v2-45da8cb56cb1025f20ea722ef72d8fde_b.jpg" width="1080" referrerpolicy="no-referrer"></div><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">(智能诊断，中国电信)</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><div><img src="https://pic2.zhimg.com/v2-2eeb4dd75011c4ab11470270238f4f91_b.jpg" width="1080" referrerpolicy="no-referrer"></div><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">(智能诊断，中国联通)</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">特色功能-国际化套餐汇率：</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">提供套餐正负差价类型，汇率本币支付实时同步国际汇率变更售价</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">多国家地区》运营商，套餐类型【流量/短信/语音/话费/带宽，等】</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><div><img src="https://pic1.zhimg.com/v2-9515361067867bf2b40efcf27335aa94_b.jpg" width="1080" referrerpolicy="no-referrer"></div><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">（套餐编辑，页面展示）</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">特色功能-极致同步算法：</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">依据目前市场未找到同配置能比较的系统。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">每 10 秒触发同步，同步时间 10 秒内，配置【服务器 4 核 8G CPU30% 卡量 600+】</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">ToB 卡量实测 17W+, 配置【服务器 2 核 8G CPU20% 内存 60%】</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">以上举例，纯服务器，数据库、中间件无其他终端依赖。(测试可直接下载开源版)</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">特色功能-安全数据加密：</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">全链路请求数据加密，安全守衞您的数据资产。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">(PS: 已见过多数系统将重要通道秘钥、代理等信息全数明文加载 ‘数据裸奔’)</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><div><img src="https://pic2.zhimg.com/v2-1efb1d9b9d23e9d0d2d7ce1278092bfd_b.jpg" width="1080" referrerpolicy="no-referrer"></div><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">(浏览器 F12 网络[network] 请求连接，查看，请求及返回数据，是否加密)</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start"><strong>四、商业版用户移动端页面预览</strong></p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">商业版移动：</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">将于 2023-12 底发布上线。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><div><img src="https://pic4.zhimg.com/v2-199e7801b843c26e640269e7e7bd4183_b.jpg" width="413" referrerpolicy="no-referrer"></div><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">（首页功能）</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><div><img src="https://pic4.zhimg.com/v2-7b0347475d1075a4f65734e42555fd1b_b.jpg" width="421" referrerpolicy="no-referrer"></div><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">（我的卡号-需用户注册后方可绑定）</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><div><img src="https://pic2.zhimg.com/v2-2252f15692708d471e468216af8851e5_b.jpg" width="409" referrerpolicy="no-referrer"></div><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">（套餐充值，多支付方式展示）</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><div><img src="https://pic3.zhimg.com/v2-5424a4b35b36f6e39021ccd98e70764a_b.jpg" width="427" referrerpolicy="no-referrer"></div><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">（订单记录，套餐记录、单卡余额消费记录）</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><div><img src="https://pic2.zhimg.com/v2-a8fbadd89c81328e9fe0ae0c66fc68c5_b.jpg" width="398" referrerpolicy="no-referrer"></div><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">（登录用户，页面，展示当前账号卡号）</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start"><strong>五、研发计划-2024 年</strong></p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">2024-03-18 商业版增值：</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">目前商业版定伙伴价 6800 年后 3-18 增值到 8800</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">（PC 端+移动端，终生升级，详细质询，微信号 iotos_top）</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">商户收款适配多商户收款自动切换：</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">适配多商户号灵活收款、订单退款返还、手动校验收款</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">数据统计</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">平台财务报表[复充率、激活增长、套餐销量排行]、</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">代理排行报表</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">自动化</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">微信推送: [代理账单、统计报表、用户充值提醒、活动券发放]，App 推送</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">ToB 方面</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">流量池管理、流量池规格配置、客户账单</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">ToC 方面</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">换卡申请、流量转移、批量充值余额</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">物联网商城</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">店铺、商品分类、列表、发货、物流、评价、活动、优惠券</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">分销，等。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start"><strong>六、感谢</strong></p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">感谢各位关注：</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">感谢各位，资源商、用户、开发者、同行，关注。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">我们将在新的一年中拿出新的成绩反馈给各位</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">服务宗旨</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">我们只作为辅助角色协作</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">不去触碰具体运营核心业务</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">为企业保留自身竞争核心与商业模式</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">仅做平台不出资源。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">‘分享利润’ 打造可共同发展盈利生态，合作共赢。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">提升服务体验、加强行业落地发展；</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">尽微薄之力助力物联网行业发展。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">服务永不止步，因为有您我们的服务更有意义。</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 25 Dec 2023 02:33:13 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272537/iotos-app-updated</guid>
            <link>https://www.oschina.net/news/272537/iotos-app-updated</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[go-carbon v2.3.0 发布，轻量级、语义化、对开发者友好的 Golang 时间处理库]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">go-carbon v2.3.0 圣诞节特别版发布，这应该是 2023 年的最后一个版本，祝大家圣诞节快乐！</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">carbon 是一个轻量级、零依赖、语义化、对开发者友好的 Golang 时间处理库，支持链式调用、农历和 gorm、xorm 等主流 orm。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">目前已被<span><span>&nbsp;</span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fyinggaozhen%2Fawesome-go-cn%23%25E6%2597%25A5%25E6%259C%259F%25E5%2592%258C%25E6%2597%25B6%25E9%2597%25B4" target="_blank">awesome-go-cn</a><span><span>&nbsp;</span></span>收录，如果您觉得不错，请给个 star 吧</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgolang-module%2Fcarbon" target="_blank">github.com/golang-module/carbon</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/golang-module/carbon" target="_blank">gitee.com/golang-module/carbon</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>更新日志</strong></p><ul><li>正式移除弃用的<code>FromStdTime</code>,<span>&nbsp;</span><code>Time2Carbon</code>,<span>&nbsp;</span><code>Carbon2Time</code><span>&nbsp;</span>方法</li><li>将 <code>ToANSICString</code><span>&nbsp;</span>方法更名为<span>&nbsp;</span><code>ToAnsicString</code></li><li>将<span>&nbsp;</span><code>CreateFromDateTime</code><span>&nbsp;</span>方法中的毫秒设置为 0</li><li>将<span>&nbsp;</span><code>CreateFromDate</code><span>&nbsp;</span>方法中的时分秒设置为 0</li><li>修复<span>&nbsp;</span><code>DiffInMonths</code><span>&nbsp;</span>方法计算错误</li><li>将<span>&nbsp;</span><code>GormDataType</code><span>&nbsp;</span>方法从<span>&nbsp;</span><code>json.go</code><span>&nbsp;</span>文件移动到<span>&nbsp;</span><code>database.go 文件</code></li><li><code>String</code><span>&nbsp;</span>方法根据设置的不同 tag 输出不同格式字符串</li><li>新增&nbsp;<code>LoadTag</code>&nbsp;方法<span style="background-color:#f6f6f6">，</span>利用反射通过设置 tag 进行 json 自定义编码和解码</li></ul></div>
                                    ]]>
            </description>
            <pubDate>Mon, 25 Dec 2023 02:31:13 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272536/go-carbon-2-3-0-released</guid>
            <link>https://www.oschina.net/news/272536/go-carbon-2-3-0-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[DBeaver 23.3.1 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff; color:#333333">DBeaver 是一个免费开源的通用数据库工具，适用于开发人员和数据库管理员。DBeaver 23.3.1 现已发布，更新内容如下：</span></p><ul style="margin-left:0; margin-right:1.5em"><li>SQL Editor： 
  <ul style="margin-left:0; margin-right:0"><li>默认情况下启用新的高亮显示和脚本验证</li><li>SQL 高亮显示性能得到改进</li><li>现在可以从 SQ Leditor 访问连接变量和系统环境变量</li><li>特殊字符的处理已修复</li></ul></li><li>Data Editor： 
  <ul style="margin-left:0; margin-right:0"><li>Value selector panel&nbsp;得到改进：可以使用「Ctrl+Tab」切换活动面板并更改上下文菜单中的活动值</li><li>增强了多条记录的高级粘贴功能</li><li>空间数据缩放得到改进</li></ul></li><li>ER Diagrams： 
  <ul style="margin-left:0; margin-right:0"><li>图表布局得到增强</li></ul></li><li>Data Transfer： 
  <ul style="margin-left:0; margin-right:0"><li>用户可以更改数据导出任务的输出格式</li><li>修复了从表到表的数据导出</li></ul></li><li>Security： 
  <ul style="margin-left:0; margin-right:0"><li>Oracle 驱动版本更新至 23.2.0.0</li></ul></li><li>General： 
  <ul style="margin-left:0; margin-right:0"><li>切换到 Eclipse 2023-12</li><li>包含语言和国家/地区的区域设置的语言检测已修复</li><li>Workspace opening 已修复</li><li>「Statistic」选项卡显示已修复</li><li>连接对话框中损坏的链接已修复</li><li>新的外键名称生成已修复</li></ul></li><li>Databases： 
  <ul style="margin-left:0; margin-right:0"><li>DB2：加载模式统计信息已修复</li><li>EDB：删除了 Database Navigator&nbsp;中的 Packages duplicating schemas&nbsp;</li><li>Firebird：增强功能和流程演示</li><li>Google Bigtable 名称已更正</li><li>Greenplum：支持&nbsp;Rows policies</li><li>MariaDB：Result fetch size&nbsp;已修复</li><li>PostgreSQL： 
    <ul style="margin-left:0; margin-right:0"><li>在分区 DDL 中显示索引和约束</li><li>增强了多个模式和多个表的备份</li></ul></li></ul></li></ul><p><span style="background-color:#ffffff; color:#333333">更新说明：</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdbeaver.io%2F2023%2F12%2F24%2Fdbeaver-23-3-1%2F" target="_blank">https://dbeaver.io/2023/12/24/dbeaver-23-3-1/</a></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 25 Dec 2023 02:26:13 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272534/dbeaver-23-3-1-released</guid>
            <link>https://www.oschina.net/news/272534/dbeaver-23-3-1-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[🔥圣诞礼物 MybatisPlus 发布 3.5.5 版本发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="135" src="https://oscimg.oschina.net/oscnet/up-22a692458674433c61b5cdfb11ad86f1adf.png" width="212" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span>Mybatis-Plus 是一款 MyBatis 的增强工具包，简化 CRUD 操作。</span><span>启动加载 XML 配置时注入单表 SQL 操作 ，为简化开发工作、提高生产率而生。Mybatis-Plus 启动注入动态 SQL 脚本、性能更优，让你专注业务快速敏捷开发。&nbsp;&nbsp;</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/baomidou/mybatis-plus-samples" target="_blank"><span>演示例子：</span><span>https://gitee.com/bao</span><span>midou/mybatis-plus-samples</span></a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbaomidou.com%2F" target="_blank">官方文档：https://baomidou.com/</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">🔥圣诞礼物🔥 新增支持 Trino,Presto,GBase8s-pg,SUNDB 数据库</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong><span>升级日志</span></strong></p><ul><li>fix: 修复配置 databaseId 失效</li><li>fix: 修复自增主键忽略注入错误忽略非自增主键注入问题</li><li>fix: 修复 ChainWrapper 模式下 GroupBy 生成多的逗</li><li>fix: 修复 selectOne 缓存问题</li><li>fix: 修复数据权限多表支持在某些场景下失效问题</li><li>fix: 修复生成器 mysql 类型转换器 point 转换错误</li><li>fix: 修复 kotlin 下无法使用父类属性操作</li><li>fix: 修复自动注入 DdlApplicationRunner 返回 null 导致的高版本 springboot 启动错误</li><li>fix: 修复生成器代码提示的 RuntimeUtils 安全性漏洞问题</li><li>feat: 新增 fastjson2 支持</li><li>feat: 升级 gradle-wrapper 至 8.4</li><li>feat: 升级 kotlin-gradle-plugin 至 1.9.21</li><li>feat: 升级 mybatis 至 3.5.15</li><li>feat: 升级 lombok 至 1.18.30</li><li>feat: 升级 spring-boot3 至 3.2.0</li><li>feat: 升级 spring-boot2 版本 mybatis-spring 至 2.1.2</li><li>feat: 升级 spring-boot3 版本 mybatis-spring 至 3.0.3</li><li>feat: 移除通用 service 中 saveOrUpdate 的事务</li><li>feat: 支持 Trino,Presto,GBase8s-pg,SUNDB 数据库</li></ul></div>
                                    ]]>
            </description>
            <pubDate>Mon, 25 Dec 2023 02:18:13 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272530/mybatisplus-3-5-5-released</guid>
            <link>https://www.oschina.net/news/272530/mybatisplus-3-5-5-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[🔥 支持跨过跳板机的 ssh 客户端 tssh 发布 v0.1.16]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ftrzsz%2Ftrzsz-ssh" target="_blank">https://github.com/trzsz/trzsz-ssh</a>&nbsp;tssh 发布 v0.1.16，支持自动交互，可用于「跨过」跳板机。</p><p>假设跳板机 J 后面有 A B C 三台服务器，一般是在本地配置跳板机 J ，登录 J 之后再手工选择 A B C 之一登录。<br> 用&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ftrzsz%2Ftrzsz-ssh" target="_blank">trzsz-ssh ( tssh )&nbsp;</a>就可以在本地直接配置 A B C 三台服务器，省去在跳板机 J 上的人工操作。<br> 以下是在&nbsp;<span style="color:#7f8c8d">~/.ssh/config</span>&nbsp;中配置 A B C 三台服务器的例子：</p><pre><code><span>Host</span><span style="color:#b5bd68">A</span><span>HostName</span><span style="color:#b5bd68">172.21.0.2  # 跳板机 J 的 IP</span><span>Port</span><span style="color:#b5bd68">2222            # 跳板机 J 的端口</span><span>User</span><span style="color:#b5bd68">username        # 跳板机 J 的用户名</span><span style="color:#969896">    # 以下是记住跳板机 J 的登录密码（ 通过 tssh --enc-secret 得到 ），推荐使用公钥登录。</span><span style="color:#969896">    #!! encPassword f48160ae63d6eaa5a53983e5f9afe6a0c99f3e791d48714ba3405bed88ca4495</span><span style="color:#969896">    #!! ExpectCount 1    # 有些跳板机只要交互一次就能登录目标服务器，这里配置交互次数</span><span style="color:#969896">    #!! ExpectPattern1 Opt&gt;  # 跳板机的输入提示符</span><span style="color:#969896">    #!! ExpectSendText1 172.22.0.11\r   # 有些跳板机可以直接输入目标服务器的 IP 登录，\r 代表回车</span><span>Host</span><span style="color:#b5bd68">B</span><span style="color:#969896">    # 前面的配置和 A 一样，可以直接复制下来（ ~/.ssh/config 支持通配符，可以简化配置 ）</span><span style="color:#969896">    #!! ExpectSendText1 172.22.0.12\r   # 这里配置目标服务器 B 的 IP</span><span>Host</span><span style="color:#b5bd68">C</span><span style="color:#969896">    # 前面的配置和 A 一样，可以直接复制下来</span><span style="color:#969896">    #!! ExpectSendText1 172.22.0.13\r   # 这里配置目标服务器 C 的 IP</span></code></pre><p>更详细的用法和说明，请参考下文：</p><hr><h2>tssh 简介</h2><ul><li><p style="margin-left:0; margin-right:0">你喜欢的 ssh 终端是否有好用的服务器管理功能？是否支持记住密码？是否有好用的文件传输工具？</p></li><li><p style="margin-left:0; margin-right:0">tssh 支持选择或搜索<span>&nbsp;</span><code>~/.ssh/config</code><span>&nbsp;</span>中配置的服务器，支持 vim 操作习惯，解决 ssh 终端的服务器管理问题。</p></li><li><p style="margin-left:0; margin-right:0">tssh 支持一次选择多台服务器，批量登录，并支持批量执行预先指定的命令，方便快速完成批量服务器操作。</p></li><li><p style="margin-left:0; margin-right:0">tssh 支持配置服务器登录密码，解决每次手工输入密码的麻烦（ 自己能控制的服务器，推荐使用公钥登录 ）。</p></li><li><p style="margin-left:0; margin-right:0">tssh 内置支持<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Ftrzsz.github.io%2Fcn%2F">trzsz</a><span>&nbsp;</span>(trz /tsz) 文件传输工具，一并解决了 Windows 中使用<span>&nbsp;</span><code>trzsz ssh</code><span>&nbsp;</span>上传速度很慢的问题。</p></li><li><p style="margin-left:0; margin-right:0"><em>在作者的 MacOS 上，使用<span>&nbsp;</span><code>trzsz ssh</code><span>&nbsp;</span>的上传速度在 10 MB/s 左右，而使用<span>&nbsp;</span><code>tssh</code><span>&nbsp;</span>可以到 80 MB/s 以上。</em></p></li></ul><h2>安装方法</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><strong><em>客户端安装<span>&nbsp;</span><code>trzsz-ssh ( tssh )</code><span>&nbsp;</span>的方法如下（ 任选其一 ）：</em></strong></p><ul><li><p style="margin-left:0; margin-right:0">Windows 可用<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Fscoop.sh%2F">scoop</a><span>&nbsp;</span>/<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Flearn.microsoft.com%2Fzh-cn%2Fwindows%2Fpackage-manager%2Fwinget%2F">winget</a><span>&nbsp;</span>/<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Fcommunity.chocolatey.org%2F">choco</a><span>&nbsp;</span>安装</p><code>scoop install tssh</code><span>&nbsp;</span>/<span>&nbsp;</span><code>winget install tssh</code><span>&nbsp;</span>/<span>&nbsp;</span><code>choco install tssh</code><div><div><pre><span><span style="color:#6f42c1">scoop</span><span style="color:#0086b3"><span style="color:#032f62">install </span></span><span style="color:#032f62">tssh</span></span></pre><div>
     &nbsp;
    </div></div></div><div><div><pre><span><span style="color:#6f42c1">winget</span><span style="color:#0086b3"><span style="color:#032f62">install </span></span><span style="color:#032f62">tssh</span></span></pre><div>
     &nbsp;
    </div></div></div><div><div><pre><span><span style="color:#6f42c1">choco</span><span style="color:#0086b3"><span style="color:#032f62">install </span></span><span style="color:#032f62">tssh</span></span></pre><div>
     &nbsp;
    </div></div></div></li><li><p style="margin-left:0; margin-right:0">MacOS 可用<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Fbrew.sh%2F">homebrew</a><span>&nbsp;</span>安装</p><code>brew install trzsz-ssh</code><div><div><pre><span><span style="color:#6f42c1">brew</span><span style="color:#032f62">update</span></span><span><span style="color:#6f42c1">brew</span><span style="color:#0086b3"><span style="color:#032f62">install </span></span><span style="color:#032f62">trzsz-ssh</span></span></pre><div>
     &nbsp;
    </div></div></div></li><li><p style="margin-left:0; margin-right:0">Ubuntu 可用 apt 安装</p><code>sudo apt install tssh</code><div><div><pre><span><span style="color:#0086b3">sudo </span>apt <span style="color:#d73a49">update</span><span>&amp;&amp;</span><span style="color:#0086b3">sudo </span>apt <span style="color:#0086b3"><span style="color:#d73a49">install</span></span>software-properties-common</span><span><span style="color:#0086b3">sudo </span><span style="color:#d73a49">add</span>-apt-repository ppa:trzsz/ppa <span>&amp;&amp;</span><span style="color:#0086b3">sudo </span>apt <span style="color:#d73a49">update</span></span><span><span style="color:#0086b3">sudo </span>apt <span style="color:#0086b3"><span style="color:#d73a49">install</span></span>tssh</span></pre><div>
     &nbsp;
    </div></div></div></li><li><p style="margin-left:0; margin-right:0">Debian 可用 apt 安装</p><code>sudo apt install tssh</code><div><div><pre><span><span style="color:#0086b3"><span style="color:#6f42c1">sudo</span></span><span style="color:#032f62">apt </span><span style="color:#0086b3"><span style="color:#032f62">install </span></span><span style="color:#032f62">curl gpg</span></span><span><span style="color:#6f42c1">curl</span><span style="color:#000080"><span style="color:#032f62">-s</span></span><span style="color:#032f62"></span><span style="color:#dd1144"><span style="color:#032f62">'https://keyserver.ubuntu.com/pks/lookup?op=get&amp;search=0x7074ce75da7cc691c1ae1a7c7e51d1ad956055ca'</span></span><span style="color:#032f62"></span><span style="color:#dd1144"><span style="color:#032f62">\</span></span></span><span style="color:#032f62"></span><span><span style="color:#032f62">  | gpg </span><span style="color:#000080"><span style="color:#032f62">--dearmor</span></span><span style="color:#032f62"></span><span style="color:#000080"><span style="color:#032f62">-o</span></span><span style="color:#032f62"> /usr/share/keyrings/trzsz.gpg</span></span><span><span style="color:#0086b3"><span style="color:#6f42c1">echo</span></span><span style="color:#dd1144"><span style="color:#032f62">'deb [signed-by=/usr/share/keyrings/trzsz.gpg] https://ppa.launchpadcontent.net/trzsz/ppa/ubuntu jammy main'</span></span><span style="color:#032f62"></span><span style="color:#dd1144"><span style="color:#032f62">\</span></span></span><span style="color:#032f62"></span><span><span style="color:#032f62">  | </span><span style="color:#0086b3"><span style="color:#032f62">sudo tee</span></span><span style="color:#032f62"> /etc/apt/sources.list.d/trzsz.list</span></span><span><span style="color:#0086b3"><span style="color:#6f42c1">sudo</span></span><span style="color:#032f62">apt update</span></span><span><span style="color:#0086b3"><span style="color:#6f42c1">sudo</span></span><span style="color:#032f62">apt </span><span style="color:#0086b3"><span style="color:#032f62">install </span></span><span style="color:#032f62">tssh</span></span></pre><div>
     &nbsp;
    </div></div></div></li><li><p style="margin-left:0; margin-right:0">Linux 可用 yum 安装</p><code>sudo yum install tssh</code><ul><li><p style="margin-left:0; margin-right:0">国内推荐使用<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.wlnmp.com%2Finstall">wlnmp</a><span>&nbsp;</span>源，安装 tssh 只需要添加 wlnmp 源（ 配置 epel 源不是必须的 ）：</p><div><div><pre><span><span style="color:#6f42c1">curl</span><span style="color:#000080"><span style="color:#032f62">-fsSL</span></span><span style="color:#032f62"></span><span style="color:#dd1144"><span style="color:#032f62">"https://sh.wlnmp.com/wlnmp.sh"</span></span><span style="color:#032f62"> | bash</span></span><span><span style="color:#0086b3"><span style="color:#6f42c1">sudo</span></span><span style="color:#032f62">yum </span><span style="color:#0086b3"><span style="color:#032f62">install </span></span><span style="color:#032f62">tssh</span></span></pre><div>
       &nbsp;
      </div></div></div></li><li><p style="margin-left:0; margin-right:0">也可使用<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Fgemfury.com%2F">gemfury</a><span>&nbsp;</span>源（ 只要网络通，所有操作系统通用 ）</p><div><div><pre><span><span style="color:#0086b3">echo</span><span style="color:#dd1144">'[trzsz]</span></span><span><span style="color:#dd1144">name=Trzsz Repo</span></span><span><span style="color:#dd1144">baseurl=https://yum.fury.io/trzsz/</span></span><span><span style="color:#dd1144">enabled=1</span></span><span><span style="color:#dd1144">gpgcheck=0'</span> | <span style="color:#0086b3">sudo tee</span> /etc/yum.repos.d/trzsz.repo</span><span><span style="color:#0086b3">sudo </span>yum <span style="color:#0086b3">install </span>tssh</span></pre><div>
       &nbsp;
      </div></div></div></li></ul></li><li><p style="margin-left:0; margin-right:0">ArchLinux 可用<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FJguer%2Fyay">yay</a><span>&nbsp;</span>安装</p><code>yay -S tssh</code><div><div><pre><span><span style="color:#6f42c1">yay</span><span style="color:#000080"><span style="color:#032f62">-Syu</span></span></span><span><span style="color:#6f42c1">yay</span><span style="color:#000080"><span style="color:#032f62">-S</span></span><span style="color:#032f62"> tssh</span></span></pre><div>
     &nbsp;
    </div></div></div></li><li><p style="margin-left:0; margin-right:0">用 Go 直接安装（ 要求 go 1.20 以上 ）</p><code>go install github.com/trzsz/trzsz-ssh/cmd/tssh@latest</code><div><div><pre><span><span style="color:#005cc5">go</span><span style="color:#0086b3">install </span>github.com/trzsz/trzsz-ssh/cmd/tssh<span style="color:#032f62">@latest</span></span></pre><div>
     &nbsp;
    </div></div></div><p style="margin-left:0; margin-right:0">安装后，<code>tssh</code><span>&nbsp;</span>程序一般位于<span>&nbsp;</span><code>~/go/bin/</code><span>&nbsp;</span>目录下（ Windows 一般在<span>&nbsp;</span><code>C:\Users\your_name\go\bin\</code><span>&nbsp;</span>）。</p></li><li><p style="margin-left:0; margin-right:0">可从<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Ftrzsz%2Ftrzsz-ssh%2Freleases">Releases</a><span>&nbsp;</span>中直接下载适用的版本</p><code>或者用 Go 编译（ 要求 go 1.20 以上 ）</code><div><div><pre><span><span style="color:#6f42c1">git</span><span style="color:#032f62">clone https://github.com/trzsz/trzsz-ssh.git</span></span><span><span style="color:#0086b3"><span style="color:#6f42c1">cd</span></span><span style="color:#032f62">trzsz-ssh</span></span><span><span style="color:#6f42c1">make</span></span><span><span style="color:#0086b3"><span style="color:#6f42c1">sudo</span></span><span style="color:#032f62">make </span><span style="color:#0086b3"><span style="color:#032f62">install</span></span></span></pre><div>
     &nbsp;
    </div></div></div></li></ul><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><strong><em>服务器上要安装<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Ftrzsz.github.io%2Fcn%2F">trzsz</a><span>&nbsp;</span>才能使用<span>&nbsp;</span><code>trz / tsz</code><span>&nbsp;</span>上传和下载，可任选其一安装：<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Ftrzsz.github.io%2Fcn%2Fgo">Go 版</a>（ ⭐ 推荐 ）、<a href="https://gitee.com/link?target=https%3A%2F%2Ftrzsz.github.io%2Fcn%2F">Py 版</a>、<a href="https://gitee.com/link?target=https%3A%2F%2Ftrzsz.github.io%2Fcn%2Fjs">Js 版</a>。</em></strong></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><em>如果服务器不安装<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Ftrzsz.github.io%2Fcn%2F">trzsz</a>，也能用<span>&nbsp;</span><code>tssh</code>，只是不使用<span>&nbsp;</span><code>trz / tsz</code><span>&nbsp;</span>上传和下载而已。</em></p><h2>使用方法</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><em><code>~/</code><span>&nbsp;</span>代表 HOME 目录。在 Windows 中，请将下文的<span>&nbsp;</span><code>~/</code><span>&nbsp;</span>替换成<span>&nbsp;</span><code>C:\Users\your_name\</code>。</em></p><ul><li><p style="margin-left:0; margin-right:0">在客户端生成密钥对，一般存放在<span>&nbsp;</span><code>~/.ssh/</code><span>&nbsp;</span>下（ 只要一种就可以了 ）：</p><ul><li><code>ssh-keygen -t ed25519</code><span>&nbsp;</span>生成 ED25519 的，私钥<span>&nbsp;</span><code>~/.ssh/id_ed25519</code>，公钥<span>&nbsp;</span><code>~/.ssh/id_ed25519.pub</code>。</li><li><code>ssh-keygen -t rsa -b 4096</code><span>&nbsp;</span>生成 RSA 的，私钥<span>&nbsp;</span><code>~/.ssh/id_rsa</code>，公钥<span>&nbsp;</span><code>~/.ssh/id_rsa.pub</code>。</li></ul></li><li><p style="margin-left:0; margin-right:0">登录服务器，将公钥（ 即前面生成密钥对时<span>&nbsp;</span><code>.pub</code><span>&nbsp;</span>后缀的文件内容 ）追加写入服务器上的<span>&nbsp;</span><code>~/.ssh/authorized_keys</code><span>&nbsp;</span>文件中。</p><ul><li><p style="margin-left:0; margin-right:0">一行代表一个客户端的公钥，注意<span>&nbsp;</span><code>~/.ssh/authorized_keys</code><span>&nbsp;</span>要设置正确的权限：</p><div><div><pre><span><span style="color:#0086b3"><span style="color:#032f62">chmod</span></span><span>700</span><span style="color:#032f62">~/.ssh</span><span><span style="color:#032f62">&amp;&amp;</span></span><span style="color:#0086b3"><span style="color:#032f62">chmod</span></span><span>600</span><span style="color:#032f62">~/.ssh/authorized_keys</span></span></pre><div>
       &nbsp;
      </div></div></div></li></ul></li><li><p style="margin-left:0; margin-right:0">在客户端配置好<span>&nbsp;</span><code>~/.ssh/config</code><span>&nbsp;</span>文件，举例：</p><div><div><pre><span><span style="color:#6f42c1">Host</span><span style="color:#032f62">alias1</span></span><span><span style="color:#6f42c1">HostName</span><span style="color:#032f62">192.168.0.1</span></span><span><span style="color:#6f42c1">Port</span><span style="color:#032f62">22</span></span><span><span style="color:#6f42c1">User</span><span style="color:#032f62">your_name</span></span><span><span style="color:#6f42c1">Host</span><span style="color:#032f62">alias2</span></span><span><span style="color:#6f42c1">HostName</span><span style="color:#032f62">192.168.0.2</span></span><span><span style="color:#6f42c1">Port</span><span style="color:#032f62">22</span></span><span><span style="color:#6f42c1">User</span><span style="color:#032f62">your_name</span></span></pre><div>
     &nbsp;
    </div></div></div></li><li><p style="margin-left:0; margin-right:0">使用<span>&nbsp;</span><code>tssh</code><span>&nbsp;</span>命令登录服务器，<code>tssh alias1</code><span>&nbsp;</span>命令登录在<span>&nbsp;</span><code>~/.ssh/config</code><span>&nbsp;</span>中<span>&nbsp;</span><code>alias1</code><span>&nbsp;</span>对应的服务器。</p></li><li><p style="margin-left:0; margin-right:0">直接执行<span>&nbsp;</span><code>tssh</code><span>&nbsp;</span>命令（ 不带参数 ），可以选择（ 搜索 ）<span>&nbsp;</span><code>~/.ssh/config</code><span>&nbsp;</span>中配置好的服务器并登录。</p></li></ul><h2>批量登录</h2><ul><li><p style="margin-left:0; margin-right:0">支持在<span>&nbsp;</span><code>iTerm2</code>（ 要开启<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Fiterm2.com%2Fpython-api-auth.html">Python API</a>，但不需要<span>&nbsp;</span><code>Allow all apps to connect</code><span>&nbsp;</span>），<code>tmux</code><span>&nbsp;</span>和<span>&nbsp;</span><code>Windows Terminal</code><span>&nbsp;</span>中一次选择多台服务器，批量登录，并支持批量执行预先指定的命令。</p></li><li><p style="margin-left:0; margin-right:0">按下<span>&nbsp;</span><code>Space</code>、<code>Ctrl+X</code><span>&nbsp;</span>等可以选中或取消当前服务器，若不能选中说明还不支持当前终端，请先运行<span>&nbsp;</span><code>tmux</code>。</p></li><li><p style="margin-left:0; margin-right:0">按下<span>&nbsp;</span><code>Ctrl+P</code><span>&nbsp;</span>会以分屏的方式批量登录，<code>Ctrl+W</code><span>&nbsp;</span>会打开新窗口批量登录，<code>Ctrl+T</code><span>&nbsp;</span>会打开新 tab 批量登录。</p></li><li><p style="margin-left:0; margin-right:0"><code>tssh</code><span>&nbsp;</span>不带参数启动可以批量登录服务器，若带<span>&nbsp;</span><code>-o RemoteCommand</code><span>&nbsp;</span>参数启动则可以批量执行指定的命令。支持执行指定命令之后进入交互式 shell，但<span>&nbsp;</span><code>Windows Terminal</code><span>&nbsp;</span>不支持分号<span>&nbsp;</span><code>;</code>，可以用<span>&nbsp;</span><code>|cat&amp;&amp;</code><span>&nbsp;</span>代替。举例：</p><div><div><pre><span><span style="color:#005cc5">tssh</span><span style="color:#000080">-t</span><span style="color:#000080">-o</span><span style="color:#008080">RemoteCommand</span><span>=</span><span style="color:#dd1144"><span style="color:#032f62">'ping -c3 trzsz.github.io ; bash'</span></span></span><span>tssh <span style="color:#000080">-t</span><span style="color:#000080">-o</span><span style="color:#008080">RemoteCommand</span><span>=</span><span style="color:#dd1144"><span style="color:#032f62">"ping -c3 trzsz.github.io |cat&amp;&amp; bash"</span></span></span></pre><div>
     &nbsp;
    </div></div></div></li></ul><h2>分组标签</h2><ul><li><p style="margin-left:0; margin-right:0">如果服务器数量很多，分组标签<span>&nbsp;</span><code>GroupLabels</code><span>&nbsp;</span>可以在按<span>&nbsp;</span><code>/</code><span>&nbsp;</span>搜索时，快速找到目标服务器。</p></li><li><p style="margin-left:0; margin-right:0">按<span>&nbsp;</span><code>/</code><span>&nbsp;</span>输入分组标签后，<code>回车</code>可以锁定；再按<span>&nbsp;</span><code>/</code><span>&nbsp;</span>可以输入另一个分组标签，<code>回车</code>再次锁定。</p></li><li><p style="margin-left:0; margin-right:0">在非搜索模式下，按<span>&nbsp;</span><code>E</code><span>&nbsp;</span>可以清空当前搜索标签；在搜索模式下按<span>&nbsp;</span><code>Ctrl + E</code><span>&nbsp;</span>也是同样效果。</p></li><li><p style="margin-left:0; margin-right:0">支持在一个<span>&nbsp;</span><code>GroupLabels</code><span>&nbsp;</span>中以空格分隔，配置多个分组标签；支持配置多个<span>&nbsp;</span><code>GroupLabels</code>。</p></li><li><p style="margin-left:0; margin-right:0">支持以通配符 * 的形式，在多个 Host 节点配置分组标签，<code>tssh</code><span>&nbsp;</span>会将所有的标签汇总起来。</p><div><div><pre><span><span style="color:#6a737d"># 以下 testAA 具有标签 group1 group2 label3 label4 group5，可以加上 `#!!` 前缀，以兼容标准 ssh</span></span><span><span style="color:#6f42c1">Host</span><span style="color:#032f62">test*</span></span><span><span style="color:#6a737d">    #!! GroupLabels group1 group2</span></span><span><span style="color:#6a737d">    #!! GroupLabels label3</span></span><span><span style="color:#6f42c1">Host</span><span style="color:#032f62">testAA</span></span><span><span style="color:#6a737d">    #!! GroupLabels label4 group5</span></span></pre><div>
     &nbsp;
    </div></div></div></li></ul><h2>自动交互</h2><ul><li><p style="margin-left:0; margin-right:0">支持类似<span>&nbsp;</span><code>expect</code><span>&nbsp;</span>的自动交互功能，可以在登录服务器之后，自动匹配服务器的输出，然后自动输入。</p><div><div><pre><span><span style="color:#6f42c1">Host</span><span style="color:#032f62">auto</span></span><span><span style="color:#6a737d">    #!! ExpectCount 3  # 配置自动交互的次数，默认是 0 即无自动交互</span></span><span><span style="color:#6a737d">    #!! ExpectTimeout 30  # 配置自动交互的超时时间（单位：秒），默认是 30 秒</span></span><span><span style="color:#6a737d">    #!! ExpectPattern1 *assword  # 配置第一个自动交互的匹配表达式</span></span><span><span style="color:#6a737d">    # 配置第一个自动输入（密文），填 tssh --enc-secret 编码后的字符串，会自动发送 \r 回车</span></span><span><span style="color:#6a737d">    #!! ExpectSendPass1 d7983b4a8ac204bd073ed04741913befd4fbf813ad405d7404cb7d779536f8b87e71106d7780b2</span></span><span><span style="color:#6a737d">    #!! ExpectPattern2 hostname*$  # 配置第二个自动交互的匹配表达式</span></span><span><span style="color:#6a737d">    #!! ExpectSendText2 echo tssh expect\r  # 配置第二个自动输入（明文），需要指定 \r 才会发送回车</span></span><span><span style="color:#6a737d">    # 以上 ExpectSendPass? 和 ExpectSendText? 只要二选一即可，若都配置则 ExpectSendPass? 的优先级更高</span></span><span><span style="color:#6a737d">    # --------------------------------------------------</span></span><span><span style="color:#6a737d">    # 在每个 ExpectPattern 匹配之前，可以配置一个或多个可选的匹配，用法如下：</span></span><span><span style="color:#6a737d">    #!! ExpectPattern3 hostname*$  # 配置第三个自动交互的匹配表达式</span></span><span><span style="color:#6a737d">    #!! ExpectSendText3 ssh xxx\r  # 配置第三个自动输入，也可以换成 ExpectSendPass3 然后配置密文</span></span><span><span style="color:#6a737d">    #!! ExpectCaseSendText3 yes/no y\r  # 在 ExpectPattern3 匹配之前，若遇到 yes/no 则发送 y 并回车</span></span><span><span style="color:#6a737d">    #!! ExpectCaseSendText3 y/n yes\r   # 在 ExpectPattern3 匹配之前，若遇到 y/n 则发送 yes 并回车</span></span><span><span style="color:#6a737d">    #!! ExpectCaseSendPass3 token d7... # 在 ExpectPattern3 匹配之前，若遇到 token 则解码并发送 d7...</span></span></pre><div>
     &nbsp;
    </div></div></div><ul><li>使用<span>&nbsp;</span><code>tssh --debug</code><span>&nbsp;</span>登录，可以看到<span>&nbsp;</span><code>expect</code><span>&nbsp;</span>捕获到的输出，以及其匹配结果和自动输入的交互。</li></ul></li></ul><h2>记住密码</h2><ul><li><p style="margin-left:0; margin-right:0">为了兼容标准 ssh ，密码可以单独配置在<span>&nbsp;</span><code>~/.ssh/password</code><span>&nbsp;</span>中，也可以在<span>&nbsp;</span><code>~/.ssh/config</code><span>&nbsp;</span>中加上<span>&nbsp;</span><code>#!!</code><span>&nbsp;</span>前缀。</p></li><li><p style="margin-left:0; margin-right:0">推荐使用前面公钥认证的方式，密码的安全性弱一些。如果必须要用密码，建议至少设置好权限，如：</p><div><div><pre><span><span style="color:#0086b3">chmod </span><span>700</span> ~<span>/.ssh </span><span><span>&amp;&amp;</span></span><span></span><span style="color:#0086b3"><span>chmod </span></span><span>600 ~/</span>.ssh<span>/password ~/</span>.ssh/config</span></pre><div>
     &nbsp;
    </div></div></div></li><li><p style="margin-left:0; margin-right:0">下面配置<span>&nbsp;</span><code>test1</code><span>&nbsp;</span>和<span>&nbsp;</span><code>test2</code><span>&nbsp;</span>的密码是<span>&nbsp;</span><code>123456</code>，其他以<span>&nbsp;</span><code>test</code><span>&nbsp;</span>开头的密码是<span>&nbsp;</span><code>111111</code>：</p><div><div><pre><span><span style="color:#6a737d"># 如果配置在 ~/.ssh/config 中，可以加上 `#!!` 前缀，以兼容标准 ssh</span></span><span><span style="color:#6f42c1">Host</span><span style="color:#032f62">test1</span></span><span><span style="color:#6a737d">    # 下面是运行 tssh --enc-secret 输入密码 123456 得到的密文串，每次运行结果不同。</span></span><span><span style="color:#6a737d">    #!! encPassword 756b17766f45bdc44c37f811db9990b0880318d5f00f6531b15e068ef1fde2666550</span></span><span style="color:#6a737d"></span><span><span style="color:#6a737d"># 如果配置在 ~/.ssh/password 中，则不需要考虑是否兼容标准 ssh</span></span><span><span style="color:#6f42c1">Host</span><span style="color:#032f62">test2</span></span><span><span style="color:#6a737d">    # 下面是运行 tssh --enc-secret 输入密码 123456 得到的密文串，每次运行结果不同。</span></span><span><span style="color:#6f42c1">encPassword</span><span style="color:#032f62">051a2f0fdc7d0d40794b845967df4c2d05b5eb0f25339021dc4e02a9d7620070654b</span></span><span style="color:#6a737d"></span><span><span style="color:#6a737d"># ~/.ssh/config 和 ~/.ssh/password 是支持通配符的，tssh 会使用第一个匹配到的值。</span></span><span><span style="color:#6a737d"># 这里希望 test2 使用区别于其他 test* 的密码，所以将 test* 放在了 test2 的后面。</span></span><span><span style="color:#6f42c1">Host</span><span style="color:#032f62">test*</span></span><span><span style="color:#6f42c1">Password</span><span style="color:#032f62">111111  # 支持明文密码，但是推荐使用 tssh --enc-secret 简单加密一下。</span></span></pre><div>
     &nbsp;
    </div></div></div></li><li><p style="margin-left:0; margin-right:0">如果启用了<span>&nbsp;</span><code>ControlMaster</code><span>&nbsp;</span>多路复用，或者是在<span>&nbsp;</span><code>Warp</code><span>&nbsp;</span>终端，需要使用前面<span>&nbsp;</span><code>自动交互</code><span>&nbsp;</span>的方式实现记住密码的效果。配置方式请参考前面<span>&nbsp;</span><code>自动交互</code>，加上<span>&nbsp;</span><code>Ctrl</code><span>&nbsp;</span>前缀即可，如：</p><div><div><pre><span><span style="color:#6f42c1">Host</span><span style="color:#032f62">ctrl</span></span><span><span style="color:#6a737d">    #!! CtrlExpectCount 1  # 配置自动交互的次数，一般只要输入一次密码</span></span><span><span style="color:#6a737d">    #!! CtrlExpectPattern1 *assword    # 配置密码提示语的匹配表达式</span></span><span><span style="color:#6a737d">    #!! CtrlExpectSendPass1 d7983b...  # 配置 tssh --enc-secret 编码后的密码</span></span></pre><div>
     &nbsp;
    </div></div></div></li><li><p style="margin-left:0; margin-right:0">支持记住私钥的<span>&nbsp;</span><code>Passphrase</code>（ 推荐使用<span>&nbsp;</span><code>ssh-agent</code><span>&nbsp;</span>）。支持与<span>&nbsp;</span><code>IdentityFile</code><span>&nbsp;</span>一起配置，支持使用私钥文件名代替 Host 别名设置通用密钥的<span>&nbsp;</span><code>Passphrase</code>。举例：</p><div><div><pre><span><span style="color:#6a737d"># IdentityFile 和 Passphrase 一起配置，可以加上 `#!!` 前缀，以兼容标准 ssh</span></span><span><span style="color:#6f42c1">Host</span><span style="color:#032f62">test1</span></span><span><span style="color:#6f42c1">IdentityFile</span><span style="color:#032f62">/path/to/id_rsa</span></span><span><span style="color:#6a737d">    # 下面是运行 tssh --enc-secret 输入密码 123456 得到的密文串，每次运行结果不同。</span></span><span><span style="color:#6a737d">    #!! encPassphrase 6f419911555b0cdc84549ae791ef69f654118d734bb4351de7e83163726ef46d176a</span></span><span style="color:#6a737d"></span><span><span style="color:#6a737d"># 在 ~/.ssh/config 中配置通用私钥 ~/.ssh/id_ed25519 对应的 Passphrase</span></span><span><span style="color:#6a737d"># 可以加上通配符 * 以避免 tssh 搜索和选择时，文件名出现在服务器列表中。</span></span><span><span style="color:#6f42c1">Host</span><span style="color:#032f62">id_ed25519*</span></span><span><span style="color:#6a737d">    # 下面是运行 tssh --enc-secret 输入密码 111111 得到的密文串，每次运行结果不同。</span></span><span><span style="color:#6a737d">    #!! encPassphrase 3a929328f2ab1be0ba3fccf29e8125f8e2dac6dab73c946605cf0bb8060b05f02a68</span></span><span style="color:#6a737d"></span><span><span style="color:#6a737d"># 在 ~/.ssh/password 中配置则不需要通配符*，也不会出现在服务器列表中。</span></span><span><span style="color:#6f42c1">Host</span><span style="color:#032f62">id_rsa</span></span><span><span style="color:#6f42c1">Passphrase</span><span style="color:#032f62">111111  # 支持明文密码，但是推荐使用 tssh --enc-secret 简单加密一下。</span></span></pre><div>
     &nbsp;
    </div></div></div></li></ul><h2>记住答案</h2><ul><li><p style="margin-left:0; margin-right:0">除了私钥和密码，还有一种登录方式，英文叫 keyboard interactive ，是服务器返回一些问题，客户端提供正确的答案就能登录，很多自定义的一次性密码就是利用这种方式实现的。</p></li><li><p style="margin-left:0; margin-right:0">如果答案是固定不变的，<code>tssh</code><span>&nbsp;</span>支持 「记住答案」。大部分都是只有一个问题，只要配置<span>&nbsp;</span><code>QuestionAnswer1</code><span>&nbsp;</span>即可。对于有多个问题的，每个问题答案可按序号进行配置，也可以按问题的 hex 编码进行配置。</p></li><li><p style="margin-left:0; margin-right:0">使用<span>&nbsp;</span><code>tssh --debug</code><span>&nbsp;</span>登录，会输出问题的 hex 编码，从而知道该如何使用 hex 编码进行配置。配置举例：</p><div><div><pre><span><span style="color:#6a737d"># 如果配置在 ~/.ssh/config 中，可以加上 `#!!` 前缀，以兼容标准 ssh</span></span><span><span style="color:#6f42c1">Host</span><span style="color:#032f62">test1</span></span><span><span style="color:#6a737d">    # 下面是运行 tssh --enc-secret 输入答案 `答案一` 得到的密文串，每次运行结果不同。</span></span><span><span style="color:#6f42c1">encQuestionAnswer1</span><span style="color:#032f62">482de7690ccc5229299ccadd8de1cb7c6d842665f0dc92ff947a302f644817baecbab38601</span></span><span><span style="color:#6f42c1">Host</span><span style="color:#032f62">test2</span></span><span><span style="color:#6a737d">    # 下面是运行 tssh --enc-secret 输入答案 `答案一` 得到的密文串，每次运行结果不同。</span></span><span><span style="color:#6f42c1">encQuestionAnswer1</span><span style="color:#032f62">43e86f1140cf6d8c786248aad95a26f30633f1eab671676b0860ecb5b1a64fb3ec5212dddf</span></span><span><span style="color:#6f42c1">QuestionAnswer2</span><span style="color:#032f62">答案二  # 支持明文答案，但是推荐使用 tssh --enc-secret 简单加密一下。</span></span><span><span style="color:#6f42c1">QuestionAnswer3</span><span style="color:#032f62">答案三</span></span><span><span style="color:#6f42c1">Host</span><span style="color:#032f62">test3</span></span><span><span style="color:#6a737d">    # 其中 `6e616d653a20` 是问题 `name: ` 的 hex 编码，`enc` 前缀代表配置的是密文串。</span></span><span><span style="color:#6a737d">    # 下面是运行 tssh --enc-secret 输入答案 `my_name` 得到的密文串，每次运行结果不同。</span></span><span><span style="color:#6f42c1">enc6e616d653a20</span><span style="color:#032f62">775f2523ab747384e1661aba7779011cb754b73f2e947672c7fd109607b801d70902d1</span></span><span><span style="color:#6f42c1">636f64653a20</span><span style="color:#032f62">my_code  # 其中 `636f64653a20` 是问题 `code: ` 的 hex 编码, `my_code` 是明文答案</span></span></pre><div>
     &nbsp;
    </div></div></div></li><li><p style="margin-left:0; margin-right:0">如果启用了<span>&nbsp;</span><code>ControlMaster</code><span>&nbsp;</span>多路复用，或者是在<span>&nbsp;</span><code>Warp</code><span>&nbsp;</span>终端，请参考前面<span>&nbsp;</span><code>自动交互</code><span>&nbsp;</span>加<span>&nbsp;</span><code>Ctrl</code><span>&nbsp;</span>前缀来实现。</p></li></ul><h2>可选配置</h2><ul><li><p style="margin-left:0; margin-right:0">支持在<span>&nbsp;</span><code>~/.tssh.conf</code>（ Windows 是<span>&nbsp;</span><code>C:\Users\your_name\.tssh.conf</code><span>&nbsp;</span>）中进行以下自定义配置：</p><div><div><pre><span><span style="color:#6a737d"># SSH 配置路径，默认为 ~/.ssh/config</span></span><span><span style="color:#6f42c1">ConfigPath</span> = ~/.ssh/config</span><span><span style="color:#6a737d"># 扩展配置路径，默认为 ~/.ssh/password</span></span><span><span style="color:#6f42c1">ExConfigPath</span> = ~/.ssh/password</span><span><span style="color:#6a737d"># trz 上传时，对话框打开的路径，为空时打开上次的路径， 默认为空</span></span><span><span style="color:#6f42c1">DefaultUploadPath</span> = ~/Downloads</span><span><span style="color:#6a737d"># tsz 下载时，自动保存的路径，为空时弹出对话框手工选择，默认为空</span></span><span><span style="color:#6f42c1">DefaultDownloadPath</span> = ~/Downloads</span><span><span style="color:#6a737d"># tssh 搜索和选择服务器时，每页显示的记录数，默认为 10</span></span><span><span style="color:#6f42c1">PromptPageSize</span> = <span>10</span></span><span><span style="color:#6a737d"># tssh 搜索和选择服务器时，默认是类似 vim 的 normal 模式，想默认进入搜索模式可如下配置：</span></span><span><span style="color:#6f42c1">PromptDefaultMode</span> = search</span><span><span style="color:#6a737d"># tssh 搜索和选择服务器时，详情中显示的配置列表，默认如下：</span></span><span><span style="color:#6f42c1">PromptDetailItems</span> = Alias Host Port User GroupLabels IdentityFile ProxyCommand ProxyJump RemoteCommand</span><span><span style="color:#6a737d"># 登录后自动设置终端标题，退出后不会重置，你需要参考下文在本地 shell 中设置 PROMPT_COMMAND</span></span><span><span style="color:#6f42c1">SetTerminalTitle</span> = <span style="color:#005cc5">Yes</span></span></pre><div>
     &nbsp;
    </div></div></div></li></ul><h2>其他功能</h2><ul><li><p style="margin-left:0; margin-right:0">使用<span>&nbsp;</span><code>-f</code><span>&nbsp;</span>后台运行时，可以加上<span>&nbsp;</span><code>--reconnect</code><span>&nbsp;</span>参数，在后台进程因连接断开等而退出时，会自动重新连接。</p></li><li><p style="margin-left:0; margin-right:0">使用<span>&nbsp;</span><code>--dragfile</code><span>&nbsp;</span>启用拖拽上传功能，想默认启用则可以在<span>&nbsp;</span><code>~/.ssh/config</code><span>&nbsp;</span>或<span>&nbsp;</span><code>ExConfigPath</code><span>&nbsp;</span>中配置：</p><div><div><pre><span><span style="color:#6f42c1">Host</span><span style="color:#032f62">*</span></span><span><span style="color:#6a737d">  # 如果配置在 ~/.ssh/config 中，可以加上 `#!!` 前缀，以兼容标准 ssh</span></span><span><span style="color:#6f42c1">EnableDragFile</span><span style="color:#032f62">Yes</span></span></pre><div>
     &nbsp;
    </div></div></div></li><li><p style="margin-left:0; margin-right:0">使用<span>&nbsp;</span><code>--zmodem</code><span>&nbsp;</span>启用<span>&nbsp;</span><code>rz / sz</code><span>&nbsp;</span>功能，想默认启用则可以在<span>&nbsp;</span><code>~/.ssh/config</code><span>&nbsp;</span>或<span>&nbsp;</span><code>ExConfigPath</code><span>&nbsp;</span>中配置：</p><div><div><pre><span><span style="color:#6f42c1">Host</span><span style="color:#032f62">server0</span></span><span><span style="color:#6a737d">  # 如果配置在 ~/.ssh/config 中，可以加上 `#!!` 前缀，以兼容标准 ssh</span></span><span><span style="color:#6f42c1">EnableZmodem</span><span style="color:#032f62">Yes</span></span></pre><div>
     &nbsp;
    </div></div></div><ul><li><p style="margin-left:0; margin-right:0">需要在客户端（ 本地电脑 ）上安装<span>&nbsp;</span><code>lrzsz</code>，Windows 可以从<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Ftrzsz%2Flrzsz-win32%2Freleases">lrzsz-win32</a><span>&nbsp;</span>下载解压并加到<span>&nbsp;</span><code>PATH</code><span>&nbsp;</span>中，也可以如下安装：</p><div><div><pre><span>scoop <span style="color:#d73a49">install</span> https://trzsz.github.io/lrzsz.json</span><span>choco <span style="color:#d73a49">install</span> lrzsz <span style="color:#6a737d">--version=0.12.21</span></span></pre><div>
       &nbsp;
      </div></div></div></li><li><p style="margin-left:0; margin-right:0">关于<span>&nbsp;</span><code>rz / sz</code><span>&nbsp;</span>进度条，己传大小和传输速度会有一点偏差，它的主要作用只是指示传输正在进行中。</p></li></ul></li><li><p style="margin-left:0; margin-right:0">使用<span>&nbsp;</span><code>-oEnableTrzsz=No</code><span>&nbsp;</span>禁用 trzsz 功能，想默认禁用则可以在<span>&nbsp;</span><code>~/.ssh/config</code><span>&nbsp;</span>或<span>&nbsp;</span><code>ExConfigPath</code><span>&nbsp;</span>中配置：</p><div><div><pre><span><span style="color:#6f42c1">Host</span><span style="color:#032f62">server1</span></span><span><span style="color:#6a737d">  # 如果配置在 ~/.ssh/config 中，可以加上 `#!!` 前缀，以兼容标准 ssh</span></span><span><span style="color:#6f42c1">EnableTrzsz</span><span style="color:#032f62">No</span></span></pre><div>
     &nbsp;
    </div></div></div></li><li><p style="margin-left:0; margin-right:0">上文说的 「记住密码」 和 「记住答案」，只要在配置项前面加上<span>&nbsp;</span><code>enc</code><span>&nbsp;</span>则可以配置密文，防止被人窥屏。并且，密文可以解决密码含有<code>#</code>的问题。</p><ul><li>运行<span>&nbsp;</span><code>tssh --enc-secret</code>，输入密码或答案，可得到用于配置的密文（ 相同密码每次运行结果不同 ）：</li></ul><div><div><pre><span><span style="color:#6f42c1">Host</span><span style="color:#032f62">server2</span></span><span><span style="color:#6a737d">  # 如果配置在 ~/.ssh/config 中，可以加上 `#!!` 前缀，以兼容标准 ssh</span></span><span><span style="color:#6f42c1">encPassword</span><span style="color:#032f62">de88c4dbdc95d85303682734e2397c4d8dd29bfff09ec53580f31dd40291fc8c7755</span></span><span><span style="color:#6f42c1">encQuestionAnswer1</span><span style="color:#032f62">93956f6e7e9f2aef3af7d6a61f7046dddf14aa4bbd9845dbb836fe3782b62ac0d89f</span></span></pre><div>
     &nbsp;
    </div></div></div></li><li><p style="margin-left:0; margin-right:0">运行<span>&nbsp;</span><code>tssh --new-host</code><span>&nbsp;</span>可以在 TUI 界面轻松添加 SSH 配置，并且完成后可以立即登录。</p></li><li><p style="margin-left:0; margin-right:0">运行<span>&nbsp;</span><code>tssh --install-trzsz</code><span>&nbsp;</span>可以将<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Ftrzsz%2Ftrzsz-go">trzsz</a><span>&nbsp;</span>(<span>&nbsp;</span><code>trz</code><span>&nbsp;</span>/<span>&nbsp;</span><code>tsz</code><span>&nbsp;</span>) 安装到服务器上。</p><ul><li>默认安装到<span>&nbsp;</span><code>~/.local/bin/</code><span>&nbsp;</span>目录，可以通过<span>&nbsp;</span><code>--install-path /path/to/install</code><span>&nbsp;</span>指定安装目录。</li><li>若<span>&nbsp;</span><code>--install-path</code><span>&nbsp;</span>安装目录含有<span>&nbsp;</span><code>~/</code>，则必须加上单引号，如<span>&nbsp;</span><code>--install-path '~/path'</code>。</li><li>若获取<span>&nbsp;</span><code>trzsz</code><span>&nbsp;</span>的最新版本号失败，可以通过<span>&nbsp;</span><code>--trzsz-version x.x.x</code><span>&nbsp;</span>参数自行指定。</li><li>若下载<span>&nbsp;</span><code>trzsz</code><span>&nbsp;</span>的安装包失败，可以自行下载并通过<span>&nbsp;</span><code>--trzsz-bin-path /path/to/trzsz.tar.gz</code><span>&nbsp;</span>参数指定。</li><li>注意：<code>--install-trzsz</code><span>&nbsp;</span>不支持 Windows 服务器，不支持跳板机（ 除非以<span>&nbsp;</span><code>ProxyJump</code><span>&nbsp;</span>跳过 ）。</li></ul></li><li><p style="margin-left:0; margin-right:0">关于修改终端标题，其实无需<span>&nbsp;</span><code>tssh</code><span>&nbsp;</span>就能实现，只要在服务器的 shell 配置文件中（如<span>&nbsp;</span><code>~/.bashrc</code>）配置：</p><div><div><pre><span><span style="color:#888888"><span style="color:#6a737d"># 设置固定的服务器标题</span></span></span><span><span style="color:#008080">PROMPT_COMMAND</span><span>=</span><span style="color:#dd1144">'echo -ne <span style="color:#032f62">"\033]0;固定的服务器标题\007"</span>'</span></span><span><span style="color:#888888"><span style="color:#6a737d"># 根据环境变量动态变化的标题</span></span></span><span><span style="color:#008080">PROMPT_COMMAND</span><span>=</span><span style="color:#dd1144">'echo -ne <span style="color:#032f62">"\033]0;${USER}@${HOSTNAME}: ${PWD}\007"</span>'</span></span></pre><div>
     &nbsp;
    </div></div></div><ul><li>如果在<span>&nbsp;</span><code>~/.tssh.conf</code><span>&nbsp;</span>中设置了<span>&nbsp;</span><code>SetTerminalTitle = Yes</code>，则会在登录后自动设置终端标题，但是服务器上的<span>&nbsp;</span><code>PROMPT_COMMAND</code><span>&nbsp;</span>会覆盖<span>&nbsp;</span><code>tssh</code><span>&nbsp;</span>设置的标题。</li><li>在<span>&nbsp;</span><code>tssh</code><span>&nbsp;</span>退出后不会重置为原来的标题，你需要在本地 shell 中设置<span>&nbsp;</span><code>PROMPT_COMMAND</code>，让它覆盖<span>&nbsp;</span><code>tssh</code><span>&nbsp;</span>设置的标题。</li></ul></li></ul><h2>快捷键</h2><table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:0px; border:none; box-sizing:border-box; color:#40485b; display:block; font-family:-apple-system,&quot;system-ui&quot;,&quot;Segoe UI&quot;,Helvetica,Arial,&quot;Apple Color Emoji&quot;,&quot;Segoe UI Emoji&quot;,&quot;Segoe UI Symbol&quot;,&quot;Liberation Sans&quot;,&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,&quot;Hiragino Sans GB&quot;,&quot;Wenquanyi Micro Hei&quot;,&quot;WenQuanYi Zen Hei&quot;,&quot;ST Heiti&quot;,SimHei,SimSun,&quot;WenQuanYi Zen Hei Sharp&quot;,sans-serif; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; line-height:inherit; margin:0px 0px 16px; max-width:100%; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:634px; word-break:initial; word-spacing:0px"><tbody><tr><th>操作</th><th>全局快捷键</th><th>非搜索快捷键</th><th>快捷键描述</th></tr></tbody><tbody><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Confirm</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Enter</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">&nbsp;</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">确认并登录</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Quit/Exit</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Ctrl+C Ctrl+Q</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">q Q</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">取消并退出</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Move Prev</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Ctrl+K Shift+Tab ↑</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">k K</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">往上移光标</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Move Next</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Ctrl+J Tab ↓</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">j J</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">往下移光标</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Page Up</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Ctrl+H Ctrl+U Ctrl+B PageUp ←</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">h H u U b B</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">往上翻一页</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Page Down</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Ctrl+L Ctrl+D Ctrl+F PageDown →</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">l L d D f F</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">往下翻一页</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Goto Home</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Home</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">g</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">跳到第一行</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Goto End</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">End</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">G</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">跳到最尾行</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">EraseKeys</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Ctrl+E</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">e E</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">擦除搜索关键字</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">TglSearch</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">/</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">&nbsp;</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">切换搜索功能</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Tgl Help</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">?</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">&nbsp;</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">切换帮助信息</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">TglSelect</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Ctrl+X Ctrl+Space Alt+Space</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Space x X</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">切换选中状态</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">SelectAll</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Ctrl+A</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">a A</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">全选当前页</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">SelectOpp</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Ctrl+O</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">o O</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">反选当前页</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Open Wins</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Ctrl+W</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">w W</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">新窗口批量登录</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Open Tabs</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Ctrl+T</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">t T</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">新 Tab 批量登录</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Open Pane</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Ctrl+P</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">p P</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">分屏批量登录</td></tr></tbody></table><h2>故障排除</h2><ul><li><p style="margin-left:0; margin-right:0">在 Warp 终端，分块 Blocks 的功能需要将<span>&nbsp;</span><code>tssh</code><span>&nbsp;</span>重命名为<span>&nbsp;</span><code>ssh</code>，推荐建个软链接（ 对更新友好 ）：</p><div><div><pre><span>sudo ln -sv $(<span>which</span> tssh) /usr/<span>local</span>/bin/ssh</span></pre><div>
     &nbsp;
    </div></div></div><ul><li><p style="margin-left:0; margin-right:0">软链后，<code>ssh -V</code><span>&nbsp;</span>应输出<span>&nbsp;</span><code>trzsz ssh</code><span>&nbsp;</span>加版本号，如果不是，说明软链不成功，或者在<span>&nbsp;</span><code>PATH</code><span>&nbsp;</span>中<span>&nbsp;</span><code>openssh</code><span>&nbsp;</span>的优先级更高，你要软链到另一个地方或者调整<span>&nbsp;</span><code>PATH</code><span>&nbsp;</span>的优先级。</p></li><li><p style="margin-left:0; margin-right:0">软链后，要直接使用<span>&nbsp;</span><code>ssh</code>，它等价于<span>&nbsp;</span><code>tssh</code>。如果还是用<span>&nbsp;</span><code>tssh</code><span>&nbsp;</span>是不会支持分块 Blocks 功能的。</p></li><li><p style="margin-left:0; margin-right:0"><code>--dragfile</code><span>&nbsp;</span>参数可能会让 Warp 分块功能失效，请参考前文配置<span>&nbsp;</span><code>EnableDragFile</code><span>&nbsp;</span>来启用拖拽功能。</p></li><li><p style="margin-left:0; margin-right:0">拖拽文件或目录进入 Warp 终端后，可能不会立即触发上传，需要多按一次<code>回车</code>键，才会上传。</p></li></ul></li><li><p style="margin-left:0; margin-right:0">如果你在使用 Windows7 或者旧版本的 Windows10 等，遇到<span>&nbsp;</span><code>enable virtual terminal failed</code><span>&nbsp;</span>的错误。</p><ul><li>可以尝试在<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.cygwin.com%2F">Cygwin</a>、<a href="https://gitee.com/link?target=https%3A%2F%2Fwww.msys2.org%2F">MSYS2</a><span>&nbsp;</span>或<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.atlassian.com%2Fgit%2Ftutorials%2Fgit-bash">Git Bash</a><span>&nbsp;</span>内使用<span>&nbsp;</span><code>tssh</code>。</li></ul></li><li><p style="margin-left:0; margin-right:0">如果在<span>&nbsp;</span><code>~/.ssh/config</code><span>&nbsp;</span>中配置了<span>&nbsp;</span><code>tssh</code><span>&nbsp;</span>特有的配置项后，标准<span>&nbsp;</span><code>ssh</code><span>&nbsp;</span>报错<span>&nbsp;</span><code>Bad configuration option</code>。</p><ul><li>可以在出错配置项中加上前缀<span>&nbsp;</span><code>#!!</code>，标准<span>&nbsp;</span><code>ssh</code><span>&nbsp;</span>会将它当作注释，而<span>&nbsp;</span><code>tssh</code><span>&nbsp;</span>则会认为它是有效配置之一。</li></ul></li></ul><h2>录屏演示</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://oscimg.oschina.net/oscnet/up-54f8b9038c71ec6266ed9ea132201d719a2.gif" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="500" src="https://oscimg.oschina.net/oscnet/up-8d4a7807c70fece1f4ad71aafa38e7ca261.gif" width="800" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 25 Dec 2023 02:16:13 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272527/tssh-0-1-16-released</guid>
            <link>https://www.oschina.net/news/272527/tssh-0-1-16-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[可替代 Spring，国产 Solon v2.6.3 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h2>Solon 是什么框架？</h2><p style="color:#24292e; text-align:start"><strong>Java 新的"生态级"应用开发框架</strong>。从零开始构建，有自己的标准规范与开放生态（历时六年，具备全球第二级别的生态规模）。</p><h2>相对于 Spring，有什么特点？</h2><ul><li>启动快 5 ～ 10 倍。<span>&nbsp;</span><strong>（更快）</strong></li><li>qps 高 2～ 3 倍。<span>&nbsp;</span><strong>（更高）</strong></li><li>低流量内存节省 1/3 ~ 1/2。<span>&nbsp;</span><strong>（更少）</strong></li><li>打包可以缩小到 1/2 ~ 1/10；比如，300Mb 的变成了 23Mb。<span>&nbsp;</span><strong>（更小）</strong></li><li>同时支持 jdk8, jdk11, jdk17, jdk21,<span>&nbsp;</span><strong>graalvm native image</strong></li></ul><h2>入门探索视频（用户录制）：</h2><p><iframe frameborder="0" height="400" scrolling="no" src="https://player.bilibili.com/player.html?aid=938467339&amp;bvid=BV1RT4y1a7U5&amp;cid=583394292&amp;page=1" style="box-sizing: border-box; font-size: 16px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; color: rgb(36, 41, 46); font-family: -apple-system, &quot;system-ui&quot;, &quot;Segoe UI&quot;, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; text-align: start; background-color: rgb(255, 255, 255);" width="700" referrerpolicy="no-referrer"></iframe></p><h2>最近更新了什么？</h2><ul><li>发布 Solon FaaS</li><li>修复 solon.luffy 插件 JtFunctionLoaderClasspath 可能会出现 null 异常的问题</li><li>修复 solon.luffy 插件 XFun.callFile 的执行兼容性（添加 file_id 赋值）</li><li>修复 Solon.cfg().stopSafe() 自动配置失效的问题</li><li>修复 war 部署时 contextPath 自动识别失效的问题</li><li>调整 contextPath 配置，支持 '!' 开头（表示强制模式，即不再支持旧的地址请求）</li><li>调整 solon.net 把 socketd 包改为 provided</li><li>调整 Utils::mime 添加默认处理</li><li>添加 ConvertUtil 对 Byte 类型的默认解析</li><li>smart-http 升为 1.3.6</li><li>luffy 升为 1.7.2</li><li>folkmq 升为 1.0.22</li><li>socket.d 升为 2.1.14</li><li>sqltoy 升为 5.2.86</li><li>beetl 升为 3.15.12.RELEASE</li><li>beetlsql 升为 3.27.3-RELEASE</li><li>netty 升为 4.1.101.Final</li></ul><h2>项目仓库地址？</h2><ul><li>gitee：<a href="https://gitee.com/noear/solon">https://gitee.com/noear/solon</a></li><li>github：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnoear%2Fsolon" target="_blank">https://github.com/noear/solon</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Mon, 25 Dec 2023 02:08:13 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272522/solon-2-6-3-released</guid>
            <link>https://www.oschina.net/news/272522/solon-2-6-3-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[x-easypdf v3.0.0-BETA 版本发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>本次更新内容如下：</p><p>1. 【pdfbox 模块】整体重构，简化类名，顺序渲染</p><p>2. 【pdfbox 模块】支持中文字体名称设置</p><p>3. 【pdfbox 模块】支持全局边距设置</p><p>4.【pdfbox 模块】文本组件支持自动处理\n、\t 等特殊字符，无须自行处理</p><p>5.【pdfbox 模块】抽象出分析器、提取器、处理器，逻辑更清晰</p><p>6.【pdfbox 模块】使用 pdfbox3.0.1 最新依赖</p><p>7.【fop 模块】简化类名</p><p>&nbsp;</p><p>本次更新【pdfbox 模块】暂未提供表格组件，暂未提交中央仓库，欢迎在<a href="https://gitee.com/dromara/x-easypdf/releases/tag/v3.0.0-BETA">gitee</a>上下载试用，更欢迎大家提出宝贵意见</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 25 Dec 2023 01:59:13 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272519/x-easypdf-3-0-0-beta</guid>
            <link>https://www.oschina.net/news/272519/x-easypdf-3-0-0-beta</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[年度收尾 C++ Web 框架 Paozhu 1.5.4 版，支持 PHP、HTTP2 稳定百万压测]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>C++ Web 框架 Paozhu，发布一年，经过几次不停重构，目前百万压测没有问题。</p><p>1.5.4 版，大范围重构、代码更加现代化和稳定，全球几乎唯一自己开发解析 http2 协议的 C++框架，跟系统高度集成没有性能开销。</p><p>作为新的一代服务器容器程序，Paozhu 可以承担 PHP 开发迁移，老代码可以不动，新业务使用 C++20 等现代快速开发，Paozhu 使用 FastCGI+PHP-FPM 方式，C++20 完善，开发速度也可以比肩脚本语言，加上三大编译器支持内存泄漏检查 asan，能过编译器，运行起来就没有问题，有问题可以自动定位。</p><p>Paozhu C++ Web 框架，内置强大的 C++ ORM 模块，简单易用，自动从数据库生成 ORM 实体类，内置分页，几行代码可以代替 Java 几百行代码。</p><p>Paozhu C++ Web 框架经典内容列表，包括搜索、分页程序，鉴权等</p><pre><code class="language-cpp">//@urlpath(admin_islogin,admin/listarticle)
std::string admin_listarticle(std::shared_ptr&lt;httppeer&gt; peer)
{
    httppeer &amp;client = peer-&gt;getpeer();

    try
    {
        auto topicm = orm::cms::Topic();

        topicm.where("userid", client.session["userid"].to_int()).asc("parentid").fetch();

        unsigned int topicid   = client.get["topicid"].to_int();
        unsigned int page      = client.get["page"].to_int();
        std::string searchword = client.get["searchword"].to_string();
        searchword             = mb_substr(searchword, 0, 15);
        client.val["topicid"]  = topicid;

        client.val["list"].set_array();
        OBJ_ARRAY temp;

        std::map&lt;unsigned int, std::string&gt; topickv;
        std::vector&lt;unsigned int&gt; topic_id_array;//articles under this topic and sub topics

        if (topicid &gt; 0)
        {
            topic_id_array.push_back(topicid);
        }

        for (unsigned int i = 0; i &lt; topicm.record.size(); i++)
        {

            temp["id"]       = topicm.record[i].topicid;
            temp["parentid"] = topicm.record[i].parentid;
            temp["value"]    = topicm.record[i].title;
            client.val["list"].push(temp);

            topickv[topicm.record[i].topicid] = topicm.record[i].title;

            if (topicid &gt; 0)
            {
                for (unsigned int j = 0; j &lt; topic_id_array.size(); j++)
                {
                    if (topicm.record[i].parentid == topic_id_array[j])
                    {
                        topic_id_array.push_back(topicm.record[i].topicid);
                    }
                }
            }
        }

        auto artmodel = orm::cms::Article();

        artmodel.where("userid", client.session["userid"].to_int());
        if (topicid &gt; 0)
        {
            std::string topicid_sql_str = array_to_sql(topic_id_array);
            if (topicid_sql_str.size() &gt; 0)
            {
                artmodel.whereIn("topicid", topicid_sql_str);
            }
        }
        if (searchword.size() &gt; 0)
        {
            artmodel.andsub().whereLike("title", str_addslash(searchword));
            artmodel.whereOrLike("content", str_addslash(searchword)).andsub();
            client.val["searchword"] = searchword;
        }
        auto [bar_min, bar_max, current_page, total_page] = artmodel.page(page, 10, 5);

        client.val["pageinfo"].set_array();
        client.val["pageinfo"]["min"]     = bar_min;
        client.val["pageinfo"]["max"]     = bar_max;
        client.val["pageinfo"]["current"] = current_page;
        client.val["pageinfo"]["total"]   = total_page;

        artmodel.select("aid,topicid,title,createtime,sortid,isopen").desc("aid").fetch();
        client.val["alist"].set_array();
        OBJ_ARRAY tempa;

        if (artmodel.size() &gt; 0)
        {
            for (auto &amp;item : artmodel)
            {
                tempa["title"]     = item.title;
                tempa["aid"]       = item.aid;
                tempa["date"]      = item.createtime.substr(0, 10);
                tempa["topicname"] = topickv[item.topicid];
                tempa["sortid"]    = item.sortid;
                tempa["isopen"]    = item.isopen;
                client.val["alist"].push(tempa);
            }
        }
    }
    catch (std::exception &amp;e)
    {
        client.val["code"] = 1;
    }
    peer-&gt;view("admin/listarticle");
    return "";
}</code></pre><h3>1.特性🔥🔥🔥🔥🔥</h3><p>✅ 1. 自带 json 编解码不用第三方库，标准 json 支持<br> ✅ 2. 支持多域名网站<br> ✅ 3. 支持多域名 ssl 服务端<br> ✅ 4. 支持 http/1.1、http/2 协议<br> ✅ 5. 支持 websocket 服务端<br> ✅ 6. 框架自带 websocket 推送，支持定时推送到 webscoket 客户端<br> ✅ 7. 支持 httpclient get post，同步异步、协程模式，数据采集<br> ✅ 8. 框架自带 ORM,使用链接池方式，目前支持 mysql<br> ✅ 9. 框架自带线程池，和用户代码运行的线程池<br> ✅10. 框架使用 asio 自带的协程<br> ✅11. 框架特色是 I/O 使用协程池，用户代码运行使用线程池,类似 GO 那种调度，只是针对 http 请求调度<br> ✅12. 框架支持普通文件 gzip、br,并支持缓存到磁盘，下次不用 cpu 再压缩<br> ✅13. URL、POST 和上传文件,解析结果 client.get[] client.post[] client.files[]方式获取内容<br> ✅14. 自带 sendmail 类库<br> ✅15. 生成二维码 (qrcode),需要 gd、qrencode 库<br> ✅16. 插件化编程，热动态更新，使用动态库方式<br> ✅17. 框架内置通用数据缓存模块，ORM 结果缓存，提高并发能力<br> ✅18. 框架 controller 目录注解功能，方便添加 URL 路由映射，降低入门心智<br> ✅19. 结构和类注解 JSON 功能，使用 json_encode json_decode 操作复杂 C++结构体和 JSON 互转，可以参考 Wiki<br> ✅20. 提供一个完整 admin 后台管理框架（见后面图片）, 访问 URL 为 /admin/main<br> ✅21. 支持 PHP-FPM fastcgi 运行模式，代替 Apache 做 PHP 前端，让 PHP 程序员平稳过渡到 C++ 开发模式</p><p>https://github.com/hggq/paozhu</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 25 Dec 2023 01:54:13 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272516/paozhu-1-5-4-released</guid>
            <link>https://www.oschina.net/news/272516/paozhu-1-5-4-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[2023 基于 mybatis 的 orm：mybatis-mp 1.2.8 发布 - 超丰富的 api！]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">mybatis-mp 包含丰富的 api：</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">1：基于注解，映射数据库；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">2：支持多表 join 和返回；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">3：api 采用 lambda 和 stream 流式设计；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">4：内置分页以及超强的 sql 优化功能；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">5：稳定且性能极优；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">6：轻量级封装 mybatis，几乎没有侵入；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">7：api 丰富，支持数据库函数、多表、乐观锁、多租户、逻辑删除、默认值（可动态值） 等众多功能；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">8：零学习成本，和写 sql 一样方便。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">9：支持复杂的返回关系映射：例如一对一 ，一对多，多对多；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">10：内置代码生成器，通过配置，可定制自身规范；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">11：全新的框架，全新的设计理念，新的就是好！</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 25 Dec 2023 01:41:13 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272514/mybatis-mp-1-2-8-released</guid>
            <link>https://www.oschina.net/news/272514/mybatis-mp-1-2-8-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[GoEdge CDN v1.3.2 发布，增强 WAF 功能、部分菜单多语言]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>GoEdge</strong><span style="background-color:#ffffff; color:#333333"><span>&nbsp;</span>是一款可以帮你快速构建 CDN &amp; WAF 平台的工具，支持 HTTP、HTTPS、Websocket、TCP、TLS、UDP、PROXY Protocol、IPv6、WAF 、WebP 等特性，支持阿里云、腾讯云、华为云等多个第三方 DNS 服务</span><span style="background-color:#ffffff; color:#171717">。</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" height="352" src="https://oscimg.oschina.net/oscnet/up-5f0af67b5f9485203e9547731535d5fce8f.png" width="600" referrerpolicy="no-referrer"><br> &nbsp;</p><p style="color:#171717; margin-left:0; margin-right:0; text-align:start">GoEdge v1.3.2 开源版本主要增强 WAF、部分菜单多语言。</p><h4>管理系统 EdgeAdmin</h4><ul><li>多语言 
  <ul><li><strong>实现部分菜单的中英文转换</strong></li></ul></li><li>WAF 
  <ul><li>WAF 规则集列表中参数、操作符显示中文名称和描述，方便用户识别</li><li>WAF「显示网页」动作增加状态码显示</li><li><strong>WAF 策略中人机识别增加「极验–行为验」验证</strong></li><li>IP 名单中可以批量删除最多 10000 个 IP</li></ul></li><li>集群 
  <ul><li>创建集群时默认生成子域名，形如 g123456.cdn，避免用户手动填写重复</li><li>WebP 转换质量转移到集群 WebP 策略配置中，避免用户自行设置导致的性能问题</li></ul></li><li>缓存 
  <ul><li><strong>缓存设置中可以设置缓存主域名</strong>，用来复用多域名下的缓存</li></ul></li><li>其他 
  <ul><li>将部分 MB、GB…改成 MiB、GiB…，让流量描述更加准确</li><li>业务域名 CNAME 检查 DNS 主机地址增加 Google 公共 DNS，提升域名解析检查时效性</li><li>管理系统安全设置中增加「自定义客户端 IP 报头」，可以通过它为管理系统获取客户端真实 IP</li></ul></li></ul><h4>API 节点 EdgeAPI</h4><ul><li>WAF 
  <ul><li>自动升级 WAF 策略中 SQL 注入检测和 XSS 注入检测</li></ul></li><li>DNS 
  <ul><li>阿里云 DNS 线路显示完整的线路名称，以往是只显示最大的一级区域名称</li><li>华为云 DNS 线路增加一组「运营商_地区」类型线路</li></ul></li></ul><h4>通用 EdgeCommon</h4><ul><li>WAF 
  <ul><li>将 WAF 策略模板多个规则集的默认动作修改为「显示页面」</li><li><strong>WAF 操作符增加包含任一单词、包含所有单词、不包含任一单词</strong>，用单词匹配的方法往往更科学、速度更快</li><li><strong>WAF 操作符增加包含 XSS 注入、包含 SQL 注入</strong>，解析速度相对于正则更加快速，更能通过语义解析提升检测成功率</li><li><strong>WAF 检查项增加「所有报头名称」</strong>，可以列出当前请求的所有报头名称</li><li><strong>WAF 检查项增加「请求来源」</strong>，可以获取请求报头中的 Referer 和 Origin 信息；旧的「请求来源 URL」改名为「请求来源 Referer「</li></ul></li></ul><h4>边缘节点 EdgeNode</h4><ul><li>WAF 
  <ul><li>优化验证码加载方式，减少不必要的图片生成</li><li>WAF 验证码验证后返回时判断是否已通过验证</li><li>增加「极验-行为验」验证码集成支持</li><li>WAF 相关跳转不计入统计</li><li>优化 WAF 中前缀和后缀相关操作符性能</li><li>节点进程停止时，自动保存 WAF 临时白名单，并在进程重新启动后恢复，避免在节点重新启动后影响当前用户访问</li></ul></li><li>缓存 
  <ul><li>默认不启用内存分片管理，避免内存可能突发激增</li></ul></li><li>WebP 
  <ul><li>WebP 转换限制为若干个线程（根据当前系统配置自动计算），防止占用系统资源过高，当然同时也会导致 WebP 转换率降低</li><li>WebP 策略变化时只更新相关配置，不再重新加载节点全部配置</li></ul></li><li>反向代理 
  <ul><li>优化 TCP 源站错误提示，根据集群设置自动决定是否上报到 API 节点</li></ul></li></ul><p><span style="background-color:#ffffff; color:#24292f">完整变更说明：</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgoedge.cn%2Fdocs%2FReleases%2FIndex.md" target="_blank">https://goedge.cn/docs/Releases/Index.md</a><br><span style="background-color:#ffffff; color:#24292f">下载：</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgoedge.cn%2Fdownloads" target="_blank">https://goedge.cn/downloads</a></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 25 Dec 2023 01:32:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272512/goedge-1-3-2-released</guid>
            <link>https://www.oschina.net/news/272512/goedge-1-3-2-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[智能制造一体化 v3.11.6 发布，手机端更新]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">智能制造一体化管理系统&nbsp;[SpringBoot2 - 快速开发平台]，适用于制造业、建筑业、汽车行业、互联网、教育、政府机关等机构的管理。包含文件在线操作、工作日志、多班次考勤、CRM、ERP 进销存、项目管理、EHR、拖拽式生成问卷、日程、笔记、工作计划、行政办公、薪资模块、动态表单、知识库、公告模块、企业论坛、云售后模块、生产模块、系统模块化同步模块等多种复杂业务功能。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>有一些小伙伴很好奇最近更新的内容和智能制造有什么关系？</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>答</strong>：目前 Skyeye 整体在做重构，优先从底层的一些功能开始，所以现在大家看到的和智能制造的联系不是很大，也希望大家能够理解，一个大型的智能制造对底层的依赖性也是非常高的。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">智能制造一体化 v3.11.6 发布&nbsp;，<strong>手机端</strong>完成以下内容的代码编写：</p><ul><li>会议室管理</li><li>用品管理</li><li>用品采购</li><li>车辆管理</li><li>车辆事故</li><li>车辆加油</li><li>车辆年检</li><li>车辆维修保养</li><li>车辆保险</li><li>印章管理</li><li>证照管理</li><li>资产管理</li><li>资产采购</li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">Skyeye 具备<strong>低代码、快捷开发、可视化设计、微服务</strong>等特点，方便客户二次开发，极大的提高了开发效率。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">erp：&nbsp;<a href="https://gitee.com/doc_wei01/erp-pro">https://gitee.com/doc_wei01/erp-pro</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">OA：&nbsp;<a href="https://gitee.com/doc_wei01/skyeye">https://gitee.com/doc_wei01/skyeye</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">报表：<a href="https://gitee.com/doc_wei01/skyeye-report">https://gitee.com/doc_wei01/skyeye-report</a>&nbsp;</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">产品信息：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.qq.com%2Fdoc%2FDYUxuT3pSdGhVVXFC" target="_blank">https://docs.qq.com/doc/DYUxuT3pSdGhVVXFC</a>&nbsp; 有问题可以联系作者，详情请看开发计划。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>效果图</strong></p><table cellspacing="0" style="--darkreader-inline-bgcolor:#181a1b; --darkreader-inline-border-bottom:currentcolor; --darkreader-inline-border-left:currentcolor; --darkreader-inline-border-right:currentcolor; --darkreader-inline-border-top:currentcolor; --darkreader-inline-color:#bdb7af; -webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:1px; border:medium none; box-sizing:border-box; color:#444444; display:block; font-family:-apple-system,BlinkMacSystemFont,&quot;Apple Color Emoji&quot;,&quot;Segoe UI Emoji&quot;,&quot;Segoe UI Symbol&quot;,&quot;Segoe UI&quot;,&quot;PingFang SC&quot;,&quot;Hiragino Sans GB&quot;,&quot;Microsoft YaHei&quot;,&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:14px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; line-height:inherit; margin:0px; max-width:100%; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:776px; word-break:keep-all; word-spacing:0px"><tbody><tr><th>效果图</th><th>效果图</th><th>效果图</th></tr></tbody><tbody><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px"><p style="margin-left:0; margin-right:0"><img height="1653" src="https://oscimg.oschina.net/oscnet/up-67ad6fccddc8a79a976eaa12e3f0203ae7b.png" width="763" referrerpolicy="no-referrer"></p></td><td style="border-color:#dddddd; border-style:solid; border-width:1px"><p style="margin-left:0; margin-right:0"><img height="1653" src="https://oscimg.oschina.net/oscnet/up-6607560bdbd9d946ea709c333a1a557a002.png" width="763" referrerpolicy="no-referrer"></p></td><td style="border-color:#dddddd; border-style:solid; border-width:1px"><p style="margin-left:0; margin-right:0"><img height="1653" src="https://oscimg.oschina.net/oscnet/up-5374d3fa6ee9ea268239a737d326f3cb479.png" width="763" referrerpolicy="no-referrer"></p></td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px"><p style="margin-left:0; margin-right:0"><img height="1653" src="https://oscimg.oschina.net/oscnet/up-14cdf5b88c70b727cb4842740773063c8da.png" width="763" referrerpolicy="no-referrer"></p></td><td style="border-color:#dddddd; border-style:solid; border-width:1px"><p style="margin-left:0; margin-right:0"><img height="1653" src="https://oscimg.oschina.net/oscnet/up-e702258fd0f7a4e29c63fb56811a9df277e.png" width="763" referrerpolicy="no-referrer"></p></td><td style="border-color:#dddddd; border-style:solid; border-width:1px"><p style="margin-left:0; margin-right:0"><img height="1653" src="https://oscimg.oschina.net/oscnet/up-95f24d75fa8e8b2beca189c1cac2db3a414.png" width="763" referrerpolicy="no-referrer"></p></td></tr></tbody></table><p>&nbsp;</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 25 Dec 2023 01:16:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272509/win10-skyeye-3-11-6-released</guid>
            <link>https://www.oschina.net/news/272509/win10-skyeye-3-11-6-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[🍃 layui-vue v2.13.0 发布，一个 Vue 3 UI 框架]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>更新日志：</p><p><span style="background-color:#ffffff; color:#40485b">[新增] watermark 水印组件。</span><br><span style="background-color:#ffffff; color:#40485b">[新增] watermark 组件 content 属性，用于设置内容。</span><br><span style="background-color:#ffffff; color:#40485b">[新增] watermark 组件 elementBox 属性，用于指定父容器。</span><br><span style="background-color:#ffffff; color:#40485b">[新增] watermark 组件 color 属性，用于设置水印字体颜色。</span><br><span style="background-color:#ffffff; color:#40485b">[新增] watermark 组件 fontSize 属性，用于设置水印字体大小。</span><br><span style="background-color:#ffffff; color:#40485b">[新增] watermark 组件 fontFamily 属性，用于设置水印字体样式。</span><br><span style="background-color:#ffffff; color:#40485b">[新增] watermark 组件 rotate 属性，用于设置水印角度。</span><br><span style="background-color:#ffffff; color:#40485b">[新增] watermark 组件 height 属性，用于设置水印高度。</span><br><span style="background-color:#ffffff; color:#40485b">[新增] watermark 组件 width 属性，用于设置水印宽度。</span><br><span style="background-color:#ffffff; color:#40485b">[新增] tree-select 组件 title 插槽用于自定义标题内容。</span></p><p>更多详情：http://www.layui-vue.com</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 25 Dec 2023 00:41:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272503</guid>
            <link>https://www.oschina.net/news/272503</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Dante Cloud 3.2.1.1 发布，采用领域驱动设计 (DDD) 的微服务架构]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><strong>Dante Cloud</strong> (但丁，原 Eurynome Cloud) 是一款企业级微服务架构和服务能力开发平台，是采用领域驱动模型 (DDD) 设计思想的、全面拥抱 <strong>Spring Authorization Server</strong> 的、基于 <strong>OAuth2.1</strong> 协议的、支持智能电视、IoT 等物联网设备认证的微服务架构。基于 <strong>Spring Authorization Server</strong> 1.2.1、<strong>Spring Boot</strong> 3.2.1、<strong>Spring Cloud</strong> 2023.0.0、<strong>Spring Cloud Tencent</strong> 1.12.4-2022.0.4、<strong>Spring Cloud Alibaba</strong> 2022.0.0.0、<strong>Nacos</strong> 2.3.0 等主流技术栈开发的多租户系统，遵循 <strong>SpringBoot</strong>&nbsp; 编程思想，高度模块化和可配置化。具备服务发现、配置、熔断、限流、降级、监控、多级缓存、分布式事务、工作流等功能。</p><h2>定位</h2><ul><li>构建成熟的、完善的、全面的，基于 OAuth2.1 的、前后端分离的微服务架构解决方案。</li><li>面向企业级应用和互联网应用设计开发，既兼顾传统项目的微服务化，又满足互联网应用开发建设、快速迭代的使用需求。</li><li>平台架构使用微服务领域及周边相关的各类新兴技术或主流技术进行建设，是帮助快速跨越架构技术选型、研究探索阶段的利器。</li><li>代码简洁规范、结构合理清晰，是新技术开发应用的典型的、综合性案例，助力开发人员对新兴技术的学习和掌握。</li></ul><h2>背景</h2><p><strong>这也是为什么做 Dante Cloud 的初衷</strong>：</p><ul><li>一方面是以 <strong>Dante Cloud</strong> 为载体，潜移默化地将过往项目建设的经验教训融入其中，尽可能地帮助使用者规避或者减少无效工作，提升工作效率和质量，有跟多的时间做更有意义的事情；</li><li>另一方面不断地融合和使用各类新兴技术，帮助使用者尽可能多的了解、学习和运用新技术，让技术不再成为禁锢变为进步和提升的基石。</li></ul><p><strong>这也是为什么 Dante Cloud 与其它项目不同</strong>：</p><p><strong>Dante Cloud</strong> 并不过分强调常规应用功能的堆叠与丰富化，因为作者认为纯开发工作仅占整个项目建设投入的 20%，减少开发投入、提升开发效率未必就能减少整个项目建设周期剩余 80% 工作投入。<strong>Dante Cloud</strong> 的远景目标是可以帮助使用者缩短整个项目的建设周期和减少无意义的工作投入，而不仅仅只是在开发效率方面的提升。</p><blockquote><p>Dante Cloud 一直秉承「简洁、高效、包容、务实」的理念，不会采取任何额外的手段来获取更多的 Star，绝对真实就像其产品一样。如果你认可和喜欢 Dante Cloud，请不要吝啬你的赞美，项目右上角点颗小星星。</p></blockquote><h2>说明</h2><p>因 Spring Boot 2.7.X 和 3.0.X 将分别于 2023 年 11 月 18 日，和 2023 年 11 月 24 日，停止维护，考虑到技术发展趋势，决定停止 Dante Cloud 2.7.X 版本代码的维护，专注 3.1.X 维护及 3.2.X 开发。2.7.16.Final 版本是 Dante Cloud 2.7.X 系列最后一个版本，代码仍旧会保留，可在工程 2.7.X 分支中获取。</p><h2>[1] 软件信息</h2><ul><li>软件组成 
  <ul><li>核心组件：<a href="https://gitee.com/herodotus/dante-engine">https://gitee.com/herodotus/dante-engine</a>（已上传中央库）</li><li>后端工程：<a href="https://gitee.com/herodotus/dante-engine">https://gitee.com/dromara/dante-cloud</a></li><li>前端工程：<a href="https://gitee.com/herodotus/dante-engine">https://gitee.com/herodotus/dante-cloud-ui</a></li></ul></li><li>软件生态 
  <ul><li>Dante&nbsp;Cloud&nbsp;Athena（Dante&nbsp;Cloud&nbsp;单体版）：<a href="https://gitee.com/herodotus/dante-engine">https://gitee.com/herodotus/dante-cloud-athena</a></li><li>Dante&nbsp;OSS （像&nbsp;JPA&nbsp;一样操作&nbsp;OSS）：<a href="https://gitee.com/herodotus/dante-engine">https://gitee.com/herodotus/dante-oss</a></li></ul></li><li>软件文档 
  <ul><li>官方文档：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.herodotus.cn" target="_blank">https://www.herodotus.cn</a></li><li>技术手册： 
    <ol><li>《Dante Cloud 及相关知识学习方法和学习路径的建议》</li><li>《OAuth 2 中的 Scope 与 Role 深度解析》</li><li>《Spring Boot 3 之自动配置与注入顺序控制》</li><li>《Spring Cloud 之 Session 共享及一致性处理》</li><li>《OAuth 2 中的鉴权和动态接口鉴权》</li><li>《Spring Boot 3 之 Rest 接口传参方式详解》</li><li>更多详情参见：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.herodotus.cn%2Fcookbook%2F" target="_blank">https://www.herodotus.cn/cookbook/</a></li></ol></li></ul></li></ul><h2>[2] 本次更新内容</h2><ul><li>【<strong>主要更新</strong>】 
  <ul><li>[升级] Spring Boot 版本升级至 3.2.1</li><li>[升级] Spring Authorization Server 版本升级至 1.2.1</li><li>[升级] spring-boot-admin 版本升级至 3.2.0</li><li>[升级] Debezium 版本升级至 2.5</li></ul></li><li>【其它更新】 
  <ul><li>[新增] 新增外部 Open Api 调用失败统一 Exception。</li><li>[新增] 新增系统现有错误体系，发现未能识别的错误时，在日志中打印提醒功能。fix: #I8Q187</li><li>[新增] 在线文档和项目 Readme 新增出厂安全测试说明</li><li>[新增] 新增 Nacos API 登录单元测试</li><li>[新增] 新增获取 Nacos 命名空间列表 Rest API 单元测试代码</li><li>[新增] 新增 Nacos 配置历史 API 封装</li><li>[新增] 新增 Nacos 命名空间 API 封装</li><li>[重构] 重构自定义 OAuth 2 授权模式代码，提取公共重复代码，去除 IDE 中代码重复提示。</li><li>[重构] 重构自定义错误体系代码，去除 Feedback 类型多余的构造函数方法。fix:#I8PFQH</li><li>[修复] 修复自定义错误体系中，自定义的非 HttpStatus 类型错误不生效问题。fix: #I8PFQK</li><li>[修复] 修复自定义错误体系中，自定义类型错误，自动计算的错误码不正确问题。fix: #I8PFQP</li><li>[修复] 修复自定义错误体系抛出「Cannot invoke "java.lang.Integer.intValue()" because the return value of ...」 错误问题。fix: I8PNJ0</li><li>[修复] 修复前端 OAuth2Application Typescript 属性类型映射错误问题。fix: #I8NWXP</li><li>[修复] 修复前端自定义 Datetime 组件 v-close-popup 引入错误，在控制枱抛出告警信息问题 fix: I8NWY8</li><li>[修复] 增强前端登录页面响应式效果，修复在某些环境下登录框过窄的问题。fix: #I8NZMO</li><li>[修复] 解决 Nacos API 封装 SDK 在最新版本环境下登录出错问题。</li><li>[修复] 修复核心 Controller 定义，返回字符串类型数据，数据设置错误导致不显示结果问题。fix: #I8PFV1</li><li>[修复] 采用临时版本，解决 mybatis-plus 与 Spring Boot 3.1.7 和 3.2.1 版本不兼容，启动抛出 Bean named 'ddlApplicationRunner' is expected to be of type 'org.springframework.boot.Runner' but was actually of type 'org.springframework.beans.factory.support.NullBean' 错误问题。fix: #I8QJ9V</li><li>[修复] 修复 Spring Authorization Server 客户端配置缺少 MacAlgorithm 类型相关加密算法错误 fix: #I8NWX5</li><li>[修复] 修复在不使用系统统一 Session 环境下，，单独调用接口特别是测试接口时，提示 Session 过期的问题。fix：#I8PZY1</li><li>[重构] Emqx 系统客户端状态转 ApplicationEvent 重构完成。支持系统主题订阅和 Webhook 两种模式。</li><li>[重构] 重构 Nacos API 封装 SDK，改变原有登录逻辑及配置参数，适配最新的 2.2.2 以上版本 API。</li><li>[优化] 更正自定义错误体系中，Validation 校验失败抛出错误的错误类型和错误编码 fix: #I8PFQT</li><li>[优化] 优化核心 Controller 定义，增加数组类型数据转换为统一响应实体 Result 支持。</li><li>[优化] 优化前端 OAuth2 配置，增加选择 private_key_jwt 或 client_secret_jwt 模式时，加密算法选择的联动处理，防止错误选择。fix: #I8O0GD</li><li>[优化] 优化基础 Controller result 方法定义，去除以 `ID` 作为类型的方法定义。规避重载方法类型判断不正确问题。</li><li>[优化] 升级前端粒子效果组件版本，采用最新方式重新实现前端粒子显示，并更新粒子效果。fix: #I8NZOX</li><li>[优化] 代码适配 Hutool 6.0.0-M9</li><li>[升级] minio docker 镜像版本升级至 RELEASE.2023-12-23T07-19-11Z</li><li>[升级] Camunda 版本升级至 7.21.0-alpha2</li></ul></li><li>【依赖更新】 
  <ul><li>[升级] aws-java-sdk-s3 版本升级至 1.12.625</li><li>[升级] hutool 版本升级至 6.0.0-M9</li><li>[升级] fastjson2 版本升级至 2.0.44</li><li>[升级] redisson 版本升级至 3.25.2</li><li>[升级] influxdb-client 版本升级至 6.12.0</li><li>[升级] alipay-sdk-java 版本升级至 4.38.170.ALL</li><li>[升级] okio 版本升级至 3.7.0</li><li>[升级] wxjava 版本升级至 4.5.9.B</li><li>[升级] vue webjars 版本升级至 3.3.11</li><li>[升级] aliyun-sdk-oss 版本升级至 3.17.3</li><li>[升级] alipay-sdk-java 版本升级至 4.38.161.ALL</li><li>[升级] checker-qual 版本升级至 3.42.0</li><li>[升级] guava 版本升级至 33.0.0-jre</li><li>[升级] skywalking agant 版本升级至 9.1.0</li></ul></li></ul><h2>[3] Dante Cloud 特性</h2><h3>1. 核心基础依赖便捷切换</h3><ul><li>新增 <code>Spring Cloud Tencent</code> 和 <code>Spring Cloud</code> 原生微服务全家桶等两种基础设施支持。</li><li>新增 <code>Spring Cloud Alibaba</code>、<code>Spring Cloud Tencent</code> 和 <code>Spring Cloud</code> 原生微服务全家桶三种基础设值切换能力，可以以相对便捷的方式切换使用 Alibaba、Tencent、Spring 等基础设施环境。可根据自身实际需求选择，不再局限于只能在某一种基础设施环境中运行。</li></ul><h3>2. <code>Spring Authorization Server</code> 全特性支持</h3><ul><li>基于 <code>Spring Authorization Server</code> 和 <code>Spring Data JPA</code> 实现多租户系统架构， 支持 Database 和 Schema 两种模式。</li><li>基于 <code>Spring Data JPA</code>，重新构建 <code>Spring Authorization Server</code> 基础数据存储代码，替代原有 JDBC 数据访问方式，破除 <code>Spring Authorization Server</code> 原有数据存储局限，扩展为更符合实际应用的方式和设计。</li><li>基于 <code>Spring Authorization Server</code>，在 OAuth 2.1 规范基础之上，增加自定义 <code>Resource Ownership Password</code> (密码) 认证模式，以兼容现有基于 OAuth 2 规范的、前后端分离的应用，支持 <code>Refresh Token</code> 的使用。</li><li>基于 <code>Spring Authorization Server</code>，在 OAuth 2.1 规范基础之上，增加自定义 <code>Social Credentials</code> (社会化登录) 认证模式，支持手机短信验证码、微信小程序、基于 <code>JustAuth</code> 的第三方应用登录， 支持 <code>Refresh Token</code> 的使用。</li><li>扩展 <code>Spring Authorization Server</code> 默认的 <code>Client Credentials</code> 模式，实现真正的使用 Scope 权限对接口进行验证。 增加客户端 Scope 的权限配置功能，并与已有的用户权限体系解耦</li><li>支持 <code>Spring Authorization Server</code><code>Authorization Code PKCE</code> 认证模式</li><li>在 <code>Spring Authorization Server</code> 的标准的 <code>JWT Token</code> 加密校验方式外，支持基于自定义证书的 <code>JWT Token</code> 加密校验方式，可通过配置动态修改。</li><li>支持 <code>Opaque Token</code> (不透明令牌) 格式及校验方式，降低 <code>JWT Token</code> 被捕获解析的风险。可通过修改配置参数，设置默认 Token 格式是采用 <code>Opaque Token</code> 格式还是 <code>JWT Token</code> 格式。</li><li>全面支持 <code>OpenID Connect</code> (OIDC) 协议，系统使用时可根据使用需求，通过前端开关配置，快速切换 OIDC 模式和传统 OAuth2 模式</li><li>深度扩展 <code>Authorization Code</code>、<code>Resource Ownership Password</code>、<code>Social Credentials</code> 几种模式，全面融合 <code>IdToken</code>、<code>Opaque Token</code>、<code>JWT Token</code> 与现有权限体系，同时提供 <code>IdToken</code> 和，自定义 Token 扩展两种无须二次请求的用户信息传递方式，减少用户信息的频繁请求。</li><li>自定义 <code>Spring Authorization Server</code> 授权码模式登录认证页面和授权确认页面，授权码模式登录采用数据加密传输。支持多种验证码类型，暂不支持行为验证码。</li><li>新增基于 <code>Spring Authorization Server</code> 的、支持智能电视、IoT 等物联网设备认证模式</li><li>无须在代码中配置 <code>Spring Security</code> 权限注解以及权限方法，即可实现接口鉴权以及权限的动态修改。采用分布式鉴权方案，规避 Gateway 统一鉴权的压力以及重复鉴权问题</li><li>OAuth2 UserDetails 核心数据支持直连数据库获取和 Feign 远程调用两种模式。OAuth2 直连数据库模式性能更优，Feign 访问远程调用可扩展性更强。可通过配置动态修改采用策略方式。</li></ul><h3>3. 全体系化应用特性集成</h3><ul><li>微服务架构全体系 Session 共享，实现 Spring Authorization Server、多实例服务、WebSocket、自定义 Session 以及大前端 Session 的统一。<code>微服务架构下的 Session 可以选择不用，但是不能没有</code>。</li><li>混合国密 <code>SM2</code> (非对称) 和 <code>SM4</code> (对称加密) 算法，实现基于数字信封技术的秘钥动态生成加密传输。利用「一人一码机制」，实现前后端数据进行动态加密传输与。Spring Authorization Server OAuth 2.1 授权模式深度融合，构建统一体系的数据传输加密。</li><li>全面整合 <code>@PreAuthorize</code> 注解权限与 <code>URL</code> 权限，通过后端动态配置，无须在代码中配置 <code>Spring Security</code> 权限注解以及权限方法，可实现接口鉴权以及权限的统一管理和动态修改</li><li>融合 Spring Cloud Stream 和 WebSocket，以优雅的方式实现 WebSocket 服务多实例环境下，点对点、广播消息跨实例推送，在线用户实时统计，完美支持 WebSocket 集群化应用。</li><li>借鉴 JPA 标准化设计思想，提取和抽象 OSS 标准化操作，形成统一的 Java OSS API 规范。封装可操作任意厂商的、统一的 REST API，构建定义统一、动态实现的应用模式（类似于 Hibernate 是 JPA 的一种实现，Hibernate 以 Dialect 方式支持不同的数据库一样），在不修改代码的情况下通过修改配置实现 OSS 的无缝切换和迁移</li><li>自研基于 <code>JetCache</code> 分布式两级缓存，完美实现 JPA Hibernate 二级缓存，支持各类查询数据缓存以及 JPA <code>@ManyToMany</code>， <code>@ManyToOne</code>等关联查询。完美解决 Spring Cache 仅使用本地缓存、创建 Key 繁琐和分页数据无法更新的问题。支持多实例服务本地缓存和远程缓存数据同步，同时支持 Mybatis Plus 二级缓存</li><li>平台统一错误处理，支持自定义错误码体系，有效集成 <code>OAuth2</code>、<code>Spring Validation</code> 等多方错误体系并有机整合 HTTP 状态码。采用 Customizer 模式，采用错误码自动计算和创建模式，支持代码模块级错误码灵活定义扩展。响应结果更加多样灵活，反馈结果也更加人性化，便于理解和定位问题。</li><li>全体系 OkHttp 、HttpClient 统一化集成，实现 OkHttp 、HttpClient 与 RestTemplate 、Openfeign 一体化融合。统一使用 Feign 配置参数，对 OkHttp 、HttpClient 进行参数设定，可策略化选择设置使用 OkHttp 或 HttpClient 作为 RestTemplate 、Openfeign 统一的基础 HttpClient</li></ul><h3>4. 采用 <code>pnpm monorepo</code> 重构前端</h3><ul><li>未使用任何流行开源模版，使用全新技术栈，完全纯"手写"全新前端工程。</li><li>借鉴参考流行开源版本的使用和设计，新版前端界面风格和操作习惯尽量与当前流行方式统一。</li><li>充份使用 Typescript 语言特性，解决大量类型校验问题，尽可能规避 "any" 式的 Typescript 编程语言使用方式。</li><li>充份使用 Composition Api 和 Hooks 等 Vue3 框架新版特性进行代码编写。</li><li>充份利用 Component、Hooks 以及 Typescript 面向对象等特性，抽取通用组件和代码，尽可能降低工程重复代码。</li><li>对较多 Quasar 基础组件和应用功能组件进行封装，以方便代码的统一修改维护和开发使用。</li><li>对生产模式下，对基于 Vite3 的工程打包进行深度性能优化。</li><li>提供以 docker-compose 方式，对工程生产代码进行容器化打包和部署。</li><li>该版本基于 pnpm，采用 monorepo 模式对前端工程进行重构。构建 monorepo 版本前端，是为扩展更多功能、增加应用级功能做铺垫</li><li>抽取 utils、components、apis、bpmn-designer 等相关代码，形成共享模块。</li><li>共享模块已进行优化配置，可编译成独立的组件，单独以组件形式进行发布。</li><li>代码以共享模块的方式进行单独维护开发，降低现有工程代码复杂度，便于后续功能的扩展和代码的复用。</li></ul><hr><p style="color:black; margin-left:0; margin-right:0; text-align:left"><strong>欢迎 Star 一波来支持我们！</strong></p><p style="color:black; margin-left:0; margin-right:0; text-align:left"><strong>Gitee</strong>：<a href="https://gitee.com/dromara/dante-cloud">https://gitee.com/dromara/dante-cloud</a><span>&nbsp;</span></p><p style="color:black; margin-left:0; margin-right:0; text-align:left"><strong>Github</strong>：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdromara%2Fdante-cloud" target="_blank">https://github.com/dromara/dante-cloud</a></p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 24 Dec 2023 16:20:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272480</guid>
            <link>https://www.oschina.net/news/272480</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[酷瓜云课堂（企业版）v1.2.3 发布，知识付费解决方案]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><img alt="酷瓜云课堂-企业版" src="https://portal-1255691183.file.myqcloud.com/img/content/623ed7a82f35a.png" referrerpolicy="no-referrer"></p><h3>更新内容</h3><ul><li>增加专栏分类功能</li><li>增加问题分类功能</li><li>增加专栏付费功能</li><li>增加审核等批量功能</li><li>增加若干业务插件埋点</li><li>精简重构大量业务逻辑</li><li>已发现的问题修复</li></ul><h3>移动端下载</h3><p>下载地址：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdownload.koogua.com%2Frelease%2Fctc-app-pro-v1.1.2.zip" target="_blank">https://download.koogua.com/release/ctc-app-pro-v1.1.2.zip</a></p><h3>注意事项</h3><p>如果你的起始版本 &gt;= <code>v1.2.0</code>，请忽略以下操作，按照正常方式更新即可。</p><p>由于增加队列组件，此次更新需要更新 PHP 镜像，如果更新出现错误，请联系我们。</p><p>（1）和往常一样执行 bash <a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fupgrade.sh" target="_blank">upgrade.sh</a> 升级系统</p><p>（2）执行如下如下命令更新 PHP 镜像</p><pre><code>sudo docker-compose build --pull php
sudo docker-compose up -d --force-recreate --build php
</code></pre><p>（3）使用 ps aux | grep console.php 命令查看是否有 queue 的字样，有则说明更新成功</p><h3>系统介绍</h3><p>酷瓜云课堂，依托腾讯云基础服务架构，采用 C 扩展框架 Phalcon 开发，致力互联网课程点播，互联网课程直播，局域网课程点播，局域网课程直播，垂直于在线教育解决方案。</p><h3>系统功能</h3><p>实现了点播、直播、考试、专栏、面授、问答、会员、积分、秒杀、拼团、分销等。</p><h3>友情提示</h3><p>请使用干净的系统执行安装，如有安装过 nginx，apache 之类的占用 80 和 443 端口的 web 服务会造成端口冲突。</p><h3>配置要求</h3><ul><li>操作系统：Ubuntu | Debain | Centos</li><li>系统内存：2G+</li></ul><h3>桌面端演示</h3><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fctc-pro.koogua.com%2F" target="_blank">前台演示</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fctc-pro.koogua.com%2Fadmin" target="_blank">后台演示</a></li></ul><p>演示帐号：<a href="https://www.oschina.net/action/GoToLink?url=mailto%3A100015%40163.com" target="_blank">100015@163.com</a> / 123456 （前后台通用）</p><h3>H5 端演示</h3><p><img alt="H5 二维码" src="https://portal-1255691183.file.myqcloud.com/img/content/61d2b0aa8bfbc.png" referrerpolicy="no-referrer"></p><p>演示帐号：13507083515 / 123456</p><h3>微信公众号演示</h3><p><img alt="公众号二维码" src="https://portal-1255691183.file.myqcloud.com/img/content/616f998270eca.png" referrerpolicy="no-referrer"></p><p>演示帐号：13507083515 / 123456</p><h3>微信小程序演示</h3><p><img alt="微信小程序码" src="https://portal-1255691183.file.myqcloud.com/img/content/64142486d9cae.png" referrerpolicy="no-referrer"></p><p>演示帐号：13507083515 / 123456</p><h3>支付流程演示</h3><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fctc-pro.koogua.com%2Forder%2Fconfirm%3Fitem_id%3D1390%26item_type%3D1" target="_blank">MySQL 提升全面讲解 MySQL 架构设计（0.01 元）</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fctc-pro.koogua.com%2Forder%2Fconfirm%3Fitem_id%3D1286%26item_type%3D1" target="_blank">Nginx 入门到实践 Nginx 中间件（0.01 元）</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fctc-pro.koogua.com%2Forder%2Fconfirm%3Fitem_id%3D80%26item_type%3D2" target="_blank">数据库与中间件的基础必修课（0.02 元）</a></li></ul><p>Tips：测试支付请用手机号注册一个新账户，以便接收订单通知，以及避免课程无法购买</p><h3>视频加密演示</h3><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fctc-pro.koogua.com%2Fchapter%2F2" target="_blank">CSS3 实现按钮特效，课程简介</a></p><h3>微信推送演示</h3><p>Tips：请用手机注册一个新账号，用户中心 -&gt; 关注订阅，扫码关注公众号。之后的登录、购买、退款、直播、咨询等会有消息推送。</p><h3>项目组件</h3><ul><li>后台框架：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fphalcon.io" target="_blank">phalcon 3.4.5</a></li><li>前端框架：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flayuion.com" target="_blank">layui 2.8.8</a></li><li>全文检索：<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.xunsearch.com" target="_blank">xunsearch 1.4.9</a></li><li>即时通讯：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fworkerman.net" target="_blank">workerman 3.5.22</a></li><li>基础依赖：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fphp.net" target="_blank">php7.3</a>， <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmysql.com" target="_blank">mysql5.7</a>， <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fredis.io" target="_blank">redis5.0</a></li></ul><h3>项目文档</h3><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.koogua.com%2Fpage%2Fwiki" target="_blank">运行环境搭建</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.koogua.com%2Fpage%2Fwiki" target="_blank">系统服务配置</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.koogua.com%2Fpage%2Fwiki" target="_blank">客户终端配置</a></li></ul><h3>意见反馈</h3><ul><li><a href="https://gitee.com/koogua/course-tencent-cloud/issues">码云平台</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.koogua.com%2Fcommunity" target="_blank">官方社区</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Sun, 24 Dec 2023 11:42:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272447</guid>
            <link>https://www.oschina.net/news/272447</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[MooTool 1.5.8 发布，开发者常备小工具]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">MooTool 1.5.8 已发布，这是一个用 Java 编写的开发者常备桌面小工具集。</p><h3><strong>更新内容</strong></h3><div><ul><li>新增文件格式化工具、PDF 拆分/合并工具 by:felixnan168</li><li>设置：新增使用习惯-功能面板位置设置</li><li>主题：修复主题切换后，系统托盘样式不跟随更新的问题</li><li>全局：更多强调色设置</li><li>随手记：outline 强调色跟随笔记设置</li><li>随手记：增加搜索框</li><li>Java Console 编辑器语法高亮</li></ul><p style="margin-left:0; margin-right:0"><strong>下载地址：</strong><a href="https://gitee.com/zhoubochina/MooTool/releases">https://gitee.com/zhoubochina/MooTool/releases</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="Overview" src="https://gitee.com/zhoubochina/MooTool/raw/master/screen_shoot/quick_note_2_mac.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="Overview" src="https://gitee.com/zhoubochina/MooTool/raw/master/screen_shoot/quick_replace_mac.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="Overview" src="https://gitee.com/zhoubochina/MooTool/raw/master/screen_shoot/time_mac_2.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="Overview" src="https://gitee.com/zhoubochina/MooTool/raw/master/screen_shoot/json_mac_2.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="Overview" src="https://gitee.com/zhoubochina/MooTool/raw/master/screen_shoot/host_mac_2.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="Overview" src="https://gitee.com/zhoubochina/MooTool/raw/master/screen_shoot/http_mac_2.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="Overview" src="https://gitee.com/zhoubochina/MooTool/raw/master/screen_shoot/encode_mac_2.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="Overview" src="https://gitee.com/zhoubochina/MooTool/raw/master/screen_shoot/qr_code_mac_2.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="Overview" src="https://gitee.com/zhoubochina/MooTool/raw/master/screen_shoot/crypto_mac_2.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="Overview" src="https://gitee.com/zhoubochina/MooTool/raw/master/screen_shoot/calculator_mac_2.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="Overview" src="https://gitee.com/zhoubochina/MooTool/raw/master/screen_shoot/net_mac_2.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="Overview" src="https://gitee.com/zhoubochina/MooTool/raw/master/screen_shoot/color_board_mac_2.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="Overview" src="https://gitee.com/zhoubochina/MooTool/raw/master/screen_shoot/regex_mac_2.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="Overview" src="https://gitee.com/zhoubochina/MooTool/raw/master/screen_shoot/cron_mac_2.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="Overview" src="https://gitee.com/zhoubochina/MooTool/raw/master/screen_shoot/java_mac_2.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="Overview" src="https://gitee.com/zhoubochina/MooTool/raw/master/screen_shoot/mt-favoriteColor.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="Overview" src="https://gitee.com/zhoubochina/MooTool/raw/master/screen_shoot/quick_note_light_mac.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="Overview" src="https://gitee.com/zhoubochina/MooTool/raw/master/screen_shoot/theme.png" referrerpolicy="no-referrer"></p></div></div>
                                    ]]>
            </description>
            <pubDate>Sun, 24 Dec 2023 11:29:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272444/mootool-1-5-8</guid>
            <link>https://www.oschina.net/news/272444/mootool-1-5-8</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[🎉 领域模型即服务 | Wow 2.12.1 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow:基于 DDD、EventSourcing 的现代响应式 CQRS 架构微服务开发框架" src="https://static.oschina.net/uploads/img/202312/13135012_Zb9v.svg" width="150" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>基于 DDD、EventSourcing 的现代响应式 CQRS 架构微服务开发框架</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FAhoo-Wang%2FWow%2Fblob%2Fmvp%2FLICENSE"><img alt="License" src="https://img.shields.io/badge/license-Apache%202-4EB1BA.svg" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FAhoo-Wang%2FWow%2Freleases"><img alt="GitHub release" src="https://img.shields.io/github/release/Ahoo-Wang/Wow.svg" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fapp.codacy.com%2Fgh%2FAhoo-Wang%2FWow%2Fdashboard%3Futm_source%3Dgh%26utm_medium%3Dreferral%26utm_content%3D%26utm_campaign%3DBadge_grade"><img alt="Codacy Badge" src="https://app.codacy.com/project/badge/Grade/cfc724df22db4f9387525258c8a59609" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fcodecov.io%2Fgh%2FAhoo-Wang%2FWow"><img alt="codecov" src="https://codecov.io/gh/Ahoo-Wang/Wow/branch/main/graph/badge.svg?token=uloJrLoQir" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FAhoo-Wang%2FWow"><img alt="Integration Test Status" src="https://github.com/Ahoo-Wang/Wow/actions/workflows/integration-test.yml/badge.svg" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FKotlinBy%2Fawesome-kotlin"><img alt="Awesome Kotlin Badge" src="https://kotlin.link/awesome-kotlin.svg" referrerpolicy="no-referrer"></a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><strong>领域驱动</strong><span>&nbsp;</span>|<span>&nbsp;</span><strong>事件驱动</strong><span>&nbsp;</span>|<span>&nbsp;</span><strong>测试驱动</strong><span>&nbsp;</span>|<span>&nbsp;</span><strong>声明式设计</strong><span>&nbsp;</span>|<span>&nbsp;</span><strong>响应式编程</strong><span>&nbsp;</span>|<span>&nbsp;</span><strong>命令查询职责分离</strong><span>&nbsp;</span>|<span>&nbsp;</span><strong>事件溯源</strong></p><h2>更新内容</h2><blockquote><p style="margin-left:0; margin-right:0">增强<span>&nbsp;</span><strong>事件补偿控制枱</strong></p></blockquote><ul><li>特性 (<code>dashboard</code>): 支持在<em>事件补偿控制枱</em>配置执行失败的重试策略</li><li>特性 (<code>dashboard</code>): 支持查看<em>事务补偿-历史记录</em></li><li>特性 (<code>dashboard</code>): 添加<em>事件补偿-正在执行</em>导航</li><li>特性 (<code>dashboard</code>): 添加<em>事件补偿通知</em>快速打开执行失败链接</li><li>特性 (<code>OpenAPI</code>): 添加<span>&nbsp;</span><code>SnapshotConverter</code>/<code>StateEventConverter</code>/<code>EventStreamConverter</code>/<code>DomainEventConverter</code><span>&nbsp;</span>以适配<span>&nbsp;</span><em>Wow</em><span>&nbsp;</span>内置序列化器 - OpenAPI-Schema</li><li>特性 (<code>CommandGateawy</code>): 添加<code>sendAndWaitForSnapshot</code>API</li><li>依赖: 升级<span>&nbsp;</span><code>org.springframework.boot:spring-boot-dependencies</code><span>&nbsp;</span><code>v3.2.1</code></li><li>依赖: 升级<span>&nbsp;</span><code>org.jetbrains.kotlin.kapt</code><span>&nbsp;</span><code>v1.9.22</code></li><li>依赖: 升级<span>&nbsp;</span><code>angular</code><span>&nbsp;</span><code>v17.0.8</code></li></ul><p><strong>事件补偿控制枱</strong></p><p style="color:#40485b; margin-left:0em; margin-right:0em; text-align:start"><img alt="事件补偿控制枱" src="https://foruda.gitee.com/images/1703334148138103643/232adcb6_384561.png" referrerpolicy="no-referrer"><br><img alt="事件补偿控制枱-重试策略" src="https://foruda.gitee.com/images/1703334157591231095/a9f5664a_384561.png" referrerpolicy="no-referrer"><br><img alt="事件补偿控制枱-查看异常" src="https://foruda.gitee.com/images/1703334165396962619/4d56b498_384561.png" referrerpolicy="no-referrer"><br><img alt="事件补偿控制枱-成功" src="https://foruda.gitee.com/images/1703334174132015521/877b6355_384561.png" referrerpolicy="no-referrer"></p><h2>快速开始</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">使用<span>&nbsp;</span><a href="https://gitee.com/AhooWang/wow-project-template">Wow 项目模板</a>快速创建基于 Wow 框架的 DDD 项目。</p><h2>特性概览</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-Features" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Features.png" referrerpolicy="no-referrer"></p><h2>架构图</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-Architecture" src="https://static.oschina.net/uploads/img/202312/13135013_Lcug.svg" referrerpolicy="no-referrer"></p><h2>性能测试 (Example)</h2><ul><li>测试代码：<a href="https://gitee.com/AhooWang/Wow/blob/main/example">Example</a></li><li>测试场景：加入购物车、下单</li><li>命令发送等待模式（<code>WaitStrategy</code>）：<code>SENT</code>、<code>PROCESSED</code></li></ul><h3>部署</h3><ul><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/perf/redis.yaml">Redis</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/perf/mongo.yaml">MongoDB</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/perf/kafka.yaml">Kafka</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/perf/config/mongo_kafka_redis.yaml">Application-Config</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/perf/deployment.yaml">Application-Deployment</a></li></ul><h3>测试报告</h3><h4>加入购物车</h4><ul><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/request/AddCartItem.http">请求</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/document/example/perf/Example.Cart.Add@SENT.pdf">详细报告 (PDF)-SENT</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/document/example/perf/Example.Cart.Add@PROCESSED.pdf">详细报告 (PDF)-PROCESSED</a></li></ul><blockquote><p style="margin-left:0; margin-right:0">命令等待策略（<code>WaitStrategy</code>）为<span>&nbsp;</span><code>SENT</code><span>&nbsp;</span>模式，加入购物车命令（<code>AddCartItem</code>）写请求 API 经过 2 分钟的压测，平均 TPS 为<span>&nbsp;</span><em>59625</em>，峰值为<span>&nbsp;</span><em>82312</em>，平均响应时间为<span>&nbsp;</span><em>29</em><span>&nbsp;</span>毫秒。</p></blockquote><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="SENT" src="https://static.oschina.net/uploads/img/202312/13135013_5U15.png" referrerpolicy="no-referrer"></p><blockquote><p style="margin-left:0; margin-right:0">命令等待策略（<code>WaitStrategy</code>）为<span>&nbsp;</span><code>PROCESSED</code><span>&nbsp;</span>模式，加入购物车命令（<code>AddCartItem</code>）写请求 API 经过 2 分钟的压测，平均 TPS 为<span>&nbsp;</span><em>18696</em>，峰值为<span>&nbsp;</span><em>24141</em>，平均响应时间为<span>&nbsp;</span><em>239</em><span>&nbsp;</span>毫秒。</p></blockquote><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="PROCESSED" src="https://static.oschina.net/uploads/img/202312/13135013_8e5S.png" referrerpolicy="no-referrer"></p><h4>下单</h4><ul><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/request/CreateOrder.http">请求</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/document/example/perf/Example.Order.Create@SENT.pdf">详细报告 (PDF)-SENT</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/document/example/perf/Example.Order.Create@PROCESSED.pdf">详细报告 (PDF)-PROCESSED</a></li></ul><blockquote><p style="margin-left:0; margin-right:0">命令等待策略（<code>WaitStrategy</code>）为<span>&nbsp;</span><code>SENT</code><span>&nbsp;</span>模式，下单命令（<code>CreateOrder</code>）写请求 API 经过 2 分钟的压测，平均 TPS 为<span>&nbsp;</span><em>47838</em>，峰值为<span>&nbsp;</span><em>86200</em>，平均响应时间为<span>&nbsp;</span><em>217</em><span>&nbsp;</span>毫秒。</p></blockquote><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">&nbsp;</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="SENT" src="https://static.oschina.net/uploads/img/202312/13135013_iWxL.png" referrerpolicy="no-referrer"></p><blockquote><p style="margin-left:0; margin-right:0">命令等待策略（<code>WaitStrategy</code>）为<span>&nbsp;</span><code>PROCESSED</code><span>&nbsp;</span>模式，下单命令（<code>CreateOrder</code>）写请求 API 经过 2 分钟的压测，平均 TPS 为<span>&nbsp;</span><em>18230</em>，峰值为<span>&nbsp;</span><em>25506</em>，平均响应时间为<span>&nbsp;</span><em>268</em><span>&nbsp;</span>毫秒。</p></blockquote><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="CreateOrder-PROCESSED" src="https://gitee.com/AhooWang/Wow/raw/main/document/example/perf/Example.Order.Create@PROCESSED.png" referrerpolicy="no-referrer"></p><h2>事件源</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-EventSourcing" src="https://static.oschina.net/uploads/img/202312/13135014_lJcu.svg" referrerpolicy="no-referrer"></p><h2>可观测性</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-Observability" src="https://static.oschina.net/uploads/img/202312/13135014_YAFd.png" referrerpolicy="no-referrer"></p><h2>OpenAPI (Spring WebFlux 集成)</h2><blockquote><p style="margin-left:0; margin-right:0">自动注册<span>&nbsp;</span><strong>命令</strong><span>&nbsp;</span>路由处理函数 (<code>HandlerFunction</code>) ，开发人员仅需编写领域模型，即可完成服务开发。</p></blockquote><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-Spring-WebFlux-Integration" src="https://static.oschina.net/uploads/img/202312/13135014_lVJm.png" referrerpolicy="no-referrer"></p><h2>测试套件：80%+ 的测试覆盖率轻而易举</h2><blockquote><p style="margin-left:0; margin-right:0">Given -&gt; When -&gt; Expect .</p></blockquote><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-CI-Flow" src="https://static.oschina.net/uploads/img/202312/13135014_vlP2.png" referrerpolicy="no-referrer"></p><h2>前置条件</h2><ul><li>理解<span>&nbsp;</span><strong>领域驱动设计</strong>：《实现领域驱动设计》、《领域驱动设计：软件核心复杂性应对之道》</li><li>理解<span>&nbsp;</span><strong>命令查询职责分离</strong>（CQRS）</li><li>理解<span>&nbsp;</span><strong>事件源架构</strong></li><li>理解<span>&nbsp;</span><strong>响应式编程</strong></li></ul><h2>Example</h2><h3>订单服务（Kotlin）</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/AhooWang/Wow/blob/main/example">Example-Order</a></p><h3>银行转账（JAVA）</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/AhooWang/Wow/blob/main/example/transfer">Example-Transfer</a></p><h2>单元测试套件</h2><h3>80%+ 的测试覆盖率轻而易举。</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Test Coverage" src="https://static.oschina.net/uploads/img/202312/13135014_MHRR.png" referrerpolicy="no-referrer"></p><blockquote><p style="margin-left:0; margin-right:0">Given -&gt; When -&gt; Expect .</p></blockquote><h3>Aggregate Unit Test (<code>AggregateVerifier</code>)</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/AhooWang/Wow/blob/main/example/example-domain/src/test/kotlin/me/ahoo/wow/example/domain/order/OrderTest.kt">Aggregate Test</a></p><pre><code><span style="color:#d73a49"><span style="color:#d73a49">internal</span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49">class</span></span></span><span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1">OrderTest</span></span></span><span></span></span>{

    <span style="color:#6a737d"><span style="color:#6a737d">@Test</span></span><span style="color:#d73a49"><span style="color:#d73a49">private</span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span><span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1">createOrder</span></span></span><span><span><span>()</span></span></span></span> {
        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> tenantId = GlobalIdGenerator.generateAsString()
        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> customerId = GlobalIdGenerator.generateAsString()

        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> orderItem = OrderItem(
            GlobalIdGenerator.generateAsString(),
            GlobalIdGenerator.generateAsString(),
            BigDecimal.valueOf(<span><span>10</span></span>),
            <span><span>10</span></span>,
        )
        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> orderItems = listOf(orderItem)
        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> inventoryService = <span style="color:#d73a49"><span style="color:#d73a49">object</span></span> : InventoryService {
            <span style="color:#d73a49"><span style="color:#d73a49">override</span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span><span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1">getInventory</span></span></span><span><span><span>(productId: </span></span><span style="color:#d73a49"><span><span><span style="color:#d73a49">String</span></span></span></span><span><span>)</span></span></span></span>: Mono&lt;<span><span>Int</span></span>&gt; {
                <span style="color:#d73a49"><span style="color:#d73a49">return</span></span> orderItems.filter { it.productId == productId }.map { it.quantity }.first().toMono()
            }
        }
        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> pricingService = <span style="color:#d73a49"><span style="color:#d73a49">object</span></span> : PricingService {
            <span style="color:#d73a49"><span style="color:#d73a49">override</span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span><span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1">getProductPrice</span></span></span><span><span><span>(productId: </span></span><span style="color:#d73a49"><span><span><span style="color:#d73a49">String</span></span></span></span><span><span>)</span></span></span></span>: Mono&lt;BigDecimal&gt; {
                <span style="color:#d73a49"><span style="color:#d73a49">return</span></span> orderItems.filter { it.productId == productId }.map { it.price }.first().toMono()
            }
        }
        aggregateVerifier&lt;Order, OrderState&gt;(tenantId = tenantId)
            .inject(DefaultCreateOrderSpec(inventoryService, pricingService))
            .given()
            .`<span style="color:#d73a49"><span style="color:#d73a49">when</span></span>`(CreateOrder(customerId, orderItems, SHIPPING_ADDRESS, <span style="color:#005cc5"><span style="color:#005cc5">false</span></span>))
            .expectEventCount(<span><span>1</span></span>)
            .expectEventType(OrderCreated::<span><span style="color:#d73a49"><span><span style="color:#d73a49">class</span></span></span><span>.</span><span style="color:#6f42c1"><span><span style="color:#6f42c1">java</span></span></span><span>)</span></span>
            .expectStateAggregate {
                assertThat(it.aggregateId.tenantId, equalTo(tenantId))
            }
            .expectState {
                assertThat(it.id, notNullValue())
                assertThat(it.customerId, equalTo(customerId))
                assertThat(it.address, equalTo(SHIPPING_ADDRESS))
                assertThat(it.items, equalTo(orderItems))
                assertThat(it.status, equalTo(OrderStatus.CREATED))
            }
            .verify()
    }

    <span style="color:#6a737d"><span style="color:#6a737d">@Test</span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span><span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1">createOrderGivenEmptyItems</span></span></span><span><span><span>()</span></span></span></span> {
        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> customerId = GlobalIdGenerator.generateAsString()
        aggregateVerifier&lt;Order, OrderState&gt;()
            .inject(mockk&lt;CreateOrderSpec&gt;(), <span style="color:#032f62"><span style="color:#032f62">"createOrderSpec"</span></span>)
            .given()
            .`<span style="color:#d73a49"><span style="color:#d73a49">when</span></span>`(CreateOrder(customerId, listOf(), SHIPPING_ADDRESS, <span style="color:#005cc5"><span style="color:#005cc5">false</span></span>))
            .expectErrorType(IllegalArgumentException::<span><span style="color:#d73a49"><span><span style="color:#d73a49">class</span></span></span><span>.</span><span style="color:#6f42c1"><span><span style="color:#6f42c1">java</span></span></span><span>)</span></span>
            .expectStateAggregate {
                <span style="color:#6a737d"><span style="color:#6a737d">/*
                 * 该聚合对象处于未初始化状态，即该聚合未创建成功.
                 */</span></span>
                assertThat(it.initialized, equalTo(<span style="color:#005cc5"><span style="color:#005cc5">false</span></span>))
            }.verify()
    }

    <span style="color:#6a737d"><span style="color:#6a737d">/**
     * 创建订单-库存不足
     */</span></span><span style="color:#6a737d"><span style="color:#6a737d">@Test</span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span><span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1">createOrderWhenInventoryShortage</span></span></span><span><span><span>()</span></span></span></span> {
        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> customerId = GlobalIdGenerator.generateAsString()
        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> orderItem = OrderItem(
            GlobalIdGenerator.generateAsString(),
            GlobalIdGenerator.generateAsString(),
            BigDecimal.valueOf(<span><span>10</span></span>),
            <span><span>10</span></span>,
        )
        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> orderItems = listOf(orderItem)
        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> inventoryService = <span style="color:#d73a49"><span style="color:#d73a49">object</span></span> : InventoryService {
            <span style="color:#d73a49"><span style="color:#d73a49">override</span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span><span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1">getInventory</span></span></span><span><span><span>(productId: </span></span><span style="color:#d73a49"><span><span><span style="color:#d73a49">String</span></span></span></span><span><span>)</span></span></span></span>: Mono&lt;<span><span>Int</span></span>&gt; {
                <span style="color:#d73a49"><span style="color:#d73a49">return</span></span> orderItems.filter { it.productId == productId }
                    <span style="color:#6a737d"><span style="color:#6a737d">/*
                     * 模拟库存不足
                     */</span></span>
                    .map { it.quantity - <span><span>1</span></span> }.first().toMono()
            }
        }
        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> pricingService = <span style="color:#d73a49"><span style="color:#d73a49">object</span></span> : PricingService {
            <span style="color:#d73a49"><span style="color:#d73a49">override</span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span><span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1">getProductPrice</span></span></span><span><span><span>(productId: </span></span><span style="color:#d73a49"><span><span><span style="color:#d73a49">String</span></span></span></span><span><span>)</span></span></span></span>: Mono&lt;BigDecimal&gt; {
                <span style="color:#d73a49"><span style="color:#d73a49">return</span></span> orderItems.filter { it.productId == productId }.map { it.price }.first().toMono()
            }
        }

        aggregateVerifier&lt;Order, OrderState&gt;()
            .inject(DefaultCreateOrderSpec(inventoryService, pricingService))
            .given()
            .`<span style="color:#d73a49"><span style="color:#d73a49">when</span></span>`(CreateOrder(customerId, orderItems, SHIPPING_ADDRESS, <span style="color:#005cc5"><span style="color:#005cc5">false</span></span>))
            <span style="color:#6a737d"><span style="color:#6a737d">/*
             * 期望：库存不足异常.
             */</span></span>
            .expectErrorType(InventoryShortageException::<span><span style="color:#d73a49"><span><span style="color:#d73a49">class</span></span></span><span>.</span><span style="color:#6f42c1"><span><span style="color:#6f42c1">java</span></span></span><span>)</span></span>
            .expectStateAggregate {
                <span style="color:#6a737d"><span style="color:#6a737d">/*
                 * 该聚合对象处于未初始化状态，即该聚合未创建成功.
                 */</span></span>
                assertThat(it.initialized, equalTo(<span style="color:#005cc5"><span style="color:#005cc5">false</span></span>))
            }.verify()
    }
}</code></pre><h3>Saga Unit Test (<code>SagaVerifier</code>)</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/AhooWang/Wow/blob/main/example/example-domain/src/test/kotlin/me/ahoo/wow/example/domain/cart/CartSagaTest.kt">Saga Test</a></p><pre><code><span><span style="color:#d73a49"><span><span style="color:#d73a49">class</span></span></span><span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1">CartSagaTest</span></span></span><span></span></span>{

    <span style="color:#6a737d"><span style="color:#6a737d">@Test</span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span><span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1">onOrderCreated</span></span></span><span><span><span>()</span></span></span></span> {
        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> orderItem = OrderItem(
            GlobalIdGenerator.generateAsString(),
            GlobalIdGenerator.generateAsString(),
            BigDecimal.valueOf(<span><span>10</span></span>),
            <span><span>10</span></span>,
        )
        sagaVerifier&lt;CartSaga&gt;()
            .`<span style="color:#d73a49"><span style="color:#d73a49">when</span></span>`(
                mockk&lt;OrderCreated&gt; {
                    every {
                        customerId
                    } returns <span style="color:#032f62"><span style="color:#032f62">"customerId"</span></span>
                    every {
                        items
                    } returns listOf(orderItem)
                    every {
                        fromCart
                    } returns <span style="color:#005cc5"><span style="color:#005cc5">true</span></span>
                },
            )
            .expectCommandBody&lt;RemoveCartItem&gt; {
                assertThat(it.id, equalTo(<span style="color:#032f62"><span style="color:#032f62">"customerId"</span></span>))
                assertThat(it.productIds, hasSize(<span><span>1</span></span>))
                assertThat(it.productIds.first(), equalTo(orderItem.productId))
            }
            .verify()
    }
}</code></pre><h2>设计</h2><h3>聚合建模</h3><table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:0px; border:none; box-sizing:border-box; color:#40485b; display:block; font-family:-apple-system,&quot;system-ui&quot;,&quot;Segoe UI&quot;,Helvetica,Arial,&quot;Apple Color Emoji&quot;,&quot;Segoe UI Emoji&quot;,&quot;Segoe UI Symbol&quot;,&quot;Liberation Sans&quot;,&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,&quot;Hiragino Sans GB&quot;,&quot;Wenquanyi Micro Hei&quot;,&quot;WenQuanYi Zen Hei&quot;,&quot;ST Heiti&quot;,SimHei,SimSun,&quot;WenQuanYi Zen Hei Sharp&quot;,sans-serif; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; line-height:inherit; margin:0px 0px 16px; max-width:100%; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; word-break:initial; word-spacing:0px"><tbody><tr><th><strong>Single Class</strong></th><th><strong>Inheritance Pattern</strong></th><th><strong>Aggregation Pattern</strong></th></tr></tbody><tbody><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px; text-align:center"><img alt="Single Class - Modeling" src="https://static.oschina.net/uploads/img/202312/13135015_ZxxP.svg" referrerpolicy="no-referrer"></td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px; text-align:center"><img alt="Inheritance Pattern- Modeling" src="https://static.oschina.net/uploads/img/202312/13135015_I09q.svg" referrerpolicy="no-referrer"></td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px; text-align:center"><img alt="Aggregation Pattern- Modeling" src="https://static.oschina.net/uploads/img/202312/13135015_1pS1.svg" referrerpolicy="no-referrer"></td></tr></tbody></table><h3>加载聚合</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Load Aggregate" src="https://static.oschina.net/uploads/img/202312/13135015_puJx.svg" referrerpolicy="no-referrer"></p><h3>聚合状态流</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Aggregate State Flow" src="https://static.oschina.net/uploads/img/202312/13135015_I8NI.svg" referrerpolicy="no-referrer"></p><h3>发送命令</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Send Command" src="https://static.oschina.net/uploads/img/202312/13135015_sU6r.svg" referrerpolicy="no-referrer"></p><h3>命令与事件流</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Command And Event Flow" src="https://static.oschina.net/uploads/img/202312/13135016_5HaD.svg" referrerpolicy="no-referrer"></p><h2>事件补偿</h2><h3>用例图</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Event-Compensation-UserCase" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Event-Compensation-UserCase.svg" referrerpolicy="no-referrer"></p><h3>执行时序图</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Event-Compensation" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Event-Compensation.svg" referrerpolicy="no-referrer"></p><h3>Dashboard</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Compensation-Dashboard" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/compensation-dashboard.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Compensation-Dashboard-Error" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/compensation-dashboard-error.png" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 24 Dec 2023 11:06:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272439</guid>
            <link>https://www.oschina.net/news/272439</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[WoTerm v9.29.10 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>v9.29.10 版本带来最大的优化是支持多次身份验证，每个认证阶段均尽可能提供用户名或密码或密钥文件等的修改。在实际的场景中，一般是二次验证如密钥文件+OTP 码如 Google-authenticator。</p><p>具体升级内容如下：</p><p style="margin-left:0px; margin-right:0px">1.修复手动浮动窗口失败缺陷。</p><p style="margin-left:0px; margin-right:0px">2.优化终端缓存及解码性能，使其终端表现更流畅。</p><p style="margin-left:0px; margin-right:0px">3.优化 SSH 的登录逻辑，满足更复杂的多次组合认证情况。</p><p style="margin-left:0px; margin-right:0px">4.修复连接 SSH 低版本服务端时的 ssh-rsa 认证失败的缺陷。</p><p style="margin-left:0px; margin-right:0px">5.其它小优化。</p><p>假设远程服务端是采用二次验证的方式，实现远程登录，如密钥文件+Google-authenticator<br> 第一阶段是密钥方式登录如下图所示：</p><p><img height="181" src="https://oscimg.oschina.net/oscnet/up-cefea7907c2614d12f3e156a7543c4b2ec9.png" width="286" referrerpolicy="no-referrer"><br> 第一阶段验证成功后，则进入第二阶段 Google-authenticator 验证，如下图所示：</p><p><img height="146" src="https://oscimg.oschina.net/oscnet/up-c83480e4b5cb211dc5625d1054653108d1d.png" width="226" referrerpolicy="no-referrer"></p><p>这是其它情形的输入</p><p><img height="204" src="https://oscimg.oschina.net/oscnet/up-f25e12eafcc88489c59824acb09dc5c9ab0.png" width="284" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 24 Dec 2023 10:47:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272436</guid>
            <link>https://www.oschina.net/news/272436</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[《铜豌豆 Linux》12.4.1 版本发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>《铜豌豆 Linux》 12.4.1 版本发布</p><div><img alt="铜豌豆图标" height="28" src="https://www.atzlinux.com/pics/logo/atzlinux_144x144.png" width="28" referrerpolicy="no-referrer"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.atzlinux.com%2F" target="_blank">铜豌豆 Linux</a><div><div><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.atzlinux.com%2Findex.htm" target="_blank">首页</a><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.atzlinux.com%2Fyjaz.htm" target="_blank">一键安装</a><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.atzlinux.com%2Fallpackages.htm" target="_blank">软件</a><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.atzlinux.com%2Fdownload-iso.htm" target="_blank">下载</a><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.atzlinux.com%2FNews%2Findex.htm" target="_blank">新闻</a><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.atzlinux.com%2Fskills.htm" target="_blank">使用技巧</a><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.atzlinux.com%2Ffaq.htm" target="_blank">常见问题</a><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.atzlinux.com%2Fdevel.htm" target="_blank">参与开发</a><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.atzlinux.com%2Fcontribute.htm" target="_blank">开源贡献</a><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.atzlinux.com%2Flinks.htm" target="_blank">友情链接</a><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.atzlinux.com%2Fjuanzeng.htm" target="_blank">捐赠</a><a href="https://gitee.com/atzlinux/debian-cn/issues" target="_blank">反馈</a><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.atzlinux.com%2Fcontact.htm" target="_blank">联系方式</a></div></div><hr><h1>《铜豌豆 Linux》12.4.1 版本发布</h1><h3>2023-12-23</h3> 《铜豌豆 Linux》操作系统是面向中文用户的桌面操作系统，基于 Debian 制作。 
 <p>2023-12-10, Debian 官方发布 12.4 版本：<br><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.debian.org%2FNews%2F2023%2F20231210" target="_blank">https://www.debian.org/News/2023/20231210 </a></p><p>铜豌豆 Linux 跟进发布 12.4.1。 该版本是，铜豌豆 Linux 12 大版本下的第二次小版本发布。</p> 铜豌豆软件源同时发布匹配 
 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.atzlinux.com%2Fallpackages-x86_64-v12.htm" target="_blank"> Debian 12 的软件源 </a> 12.4.1 版本。 
 <p><img alt="v12.4.1 xfce 界面" src="https://cdn.atzlinux.com/pics/v12.4.1-xfce.png" width="100%" referrerpolicy="no-referrer"></p><hr><h2>安装文件 iso 下载</h2><p>安装文件大小约 3.7 G</p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmotion.atzlinux.com%3A18761%2Fatzlinux-cd%2F12.4.1%2Famd64%2Fiso-dvd%2Fatzlinux-12.4.1-amd64-DVD-1.iso" target="_blank">https://motion.atzlinux.com:18761/atzlinux-cd/12.4.1/amd64/iso-dvd/atzlinux-12.4.1-amd64-DVD-1.iso</a></p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmike.atzlinux.com%3A58888%2Fatzlinux-cd%2F12.4.1%2Famd64%2Fiso-dvd%2Fatzlinux-12.4.1-amd64-DVD-1.iso" target="_blank">https://mike.atzlinux.com:58888/atzlinux-cd/12.4.1/amd64/iso-dvd/atzlinux-12.4.1-amd64-DVD-1.iso</a></p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhncsdxwq.atzlinux.com%3A1880%2Fatzlinux-cd%2F12.4.1%2Famd64%2Fiso-dvd%2Fatzlinux-12.4.1-amd64-DVD-1.iso" target="_blank">https://hncsdxwq.atzlinux.com:1880/atzlinux-cd/12.4.1/amd64/iso-dvd/atzlinux-12.4.1-amd64-DVD-1.iso</a></p><p><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.yxgang.top%3A1080%2Fatzlinux-cd%2F12.4.1%2Famd64%2Fiso-dvd%2Fatzlinux-12.4.1-amd64-DVD-1.iso" target="_blank">http://www.yxgang.top:1080/atzlinux-cd/12.4.1/amd64/iso-dvd/atzlinux-12.4.1-amd64-DVD-1.iso</a></p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fxjphwy.atzlinux.com%2Fatzlinux-cd%2F12.4.1%2Famd64%2Fiso-dvd%2Fatzlinux-12.4.1-amd64-DVD-1.iso" target="_blank">https://xjphwy.atzlinux.com/atzlinux-cd/12.4.1/amd64/iso-dvd/atzlinux-12.4.1-amd64-DVD-1.iso</a></p><p><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fatzlinux.pythonskill.com%3A8099%2Fatzlinux-cd%2F12.4.1%2Famd64%2Fiso-dvd%2Fatzlinux-12.4.1-amd64-DVD-1.iso" target="_blank">http://atzlinux.pythonskill.com:8099/atzlinux-cd/12.4.1/amd64/iso-dvd/atzlinux-12.4.1-amd64-DVD-1.iso</a></p><ul><li>深圳电信家用网络</li><li>深圳电信家用网络</li><li>湖南长沙电信家用网络</li><li>山东电信家用网络</li><li>新加坡华为云 (10Mbps 带宽)</li><li>北京联通机房 (10Mbps 带宽)</li></ul> 下载完成后，可进行完整性验证，支持校验和、公钥签名验证。 验证所需
 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.atzlinux.com%2Fatzlinux-cd%2F12.4.1%2Famd64%2Fiso-dvd%2F" target="_blank">相关文件可以访问这里</a>获取。 
 <p>该 iso 安装文件，支持目前国内市场上常用的 Intel/amd 64 位 CPU。</p><hr><h3><span style="color:#f08000"><strong><span>系统默认用户：</span></strong></span>wo</h3> 系统默认创建两个用户， 一个是名字为 wo 的普通用户； 一个是具有
 <span style="color:#000000"><strong>最高系统权限</strong></span>的管理员用户 root 。 
 <ul><li>默认普通用户名为： <strong>wo</strong> ，<strong><span style="color:#ff0000">默认密码</span></strong>为：</li><li><em>debian168;</em><br> 最后一个字符是英文的分号 
   <ul><li>root 用户可以直接登录系统， <em><span style="color:#ff0000"><span><strong>默认密码</strong></span></span></em>为：</li><li><em>debian-cn;168</em><br> 中间为英文的连接符，英文的分号</li></ul><hr><p>&nbsp;</p><h3>安全更新</h3><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.debian.org%2Fsecurity%2F" target="_blank">Debian 官方软件包安全更新</a> 同步到 2023-12-22 日。</li></ul><h3>系统安装 iso 文件调整及优化</h3><ul><li>控制 iso 文件大小</li><li>由于安装 iso 集成的中文软件包功能越来越丰富，其软件包大小也在逐渐增大； 再加上，铜豌豆 Linux 不断根据用户反馈增加默认安装软件，导致 iso 文件接近超过一个 DVD 光盘 3.7 GB 容量。 在此次版本发布中，对增加软件包采取慎重评估策略，并删除部分不常用软件包。</li></ul><h3>主要应用软件包版本增加</h3><ul><li>相对 12.2.1 版本，没有增加应用软件包</li></ul><h3>主要应用软件包版本删除</h3><ul><li>fonts-cns11643-kai</li><li>中文繁体字体，使用频率低</li><li>font-manager</li><li>字体管理器，启动慢，功能和其它字体管理器重复</li></ul><h3>主要应用软件包版本更新</h3><ul><li>腾讯 QQ 官方版本 linuxqq</li><li>3.2.3-20139</li><li>钉钉官方版本 com.alibabainc.dingtalk</li><li>7.1.10.31115</li><li>WPS wps-office</li><li>11.1.0.11711</li><li>网络电视 hypnotix</li><li>4.2-20231219atzlinux</li><li>网易云音乐 netease-cloud-music-gtk</li><li>2.3.0-1</li><li>霞鹜文楷字体 fonts-lxgw-wenkai</li><li>1.315+repack-1</li><li>网络 VPN opengnb</li><li>1.4.5.a-1~bpo12+1</li></ul><h3>铜豌豆软件包主要调整：</h3><ul><li>铜豌豆补丁包</li><li>12.4.1.4 版 
     <ul><li>/etc/atzlinux_version 文件, 版本号设置为 12.4.1</li><li>解决 linuxqq 在老的 AMD CPU 上无法启动问题</li></ul></li></ul><h3>主要系统软件包版本更新</h3><ul><li>内核</li><li>Linux atzlinux-df 6.1.0-16-rt-amd64 #1 SMP PREEMPT_RT Debian 6.1.67-1 (2023-12-12) x86_64 GNU/Linux</li><li>pci.ids</li><li>0.0~2023.11.11-1</li><li>usb.ids</li><li>2023.11.08-1</li></ul><h4>NVIDIA 显卡驱动</h4> 铜豌豆默认安装 NVIDIA 显卡开源驱动 nouveau，软件包名为：xserver-xorg-video-nouveau。 <p>如需要安装 NVIDIA 闭源驱动，请参阅： <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.atzlinux.com%2Fskills-tech.htm%23nvidia" target="_blank"> 安装 NVIDIA 显卡厂家闭源驱动及相关软件 </a></p><h3>《铜豌豆 Linux 12 版本》维护期</h3> 该版本维护期至 2028 年 6 月。 <p>在 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.debian.org%2FNews%2F2023%2F20230610" target="_blank"> Debian 12 版</a> 于 2023 年 6 月正式发布后，Debian 官方将维护三年至 2026 年 6 月 ，随后 Debian 的 LTS 团队将再继续维护两年。 LTS 维护相关情况，请参阅： <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwiki.debian.org%2FLTS" target="_blank"> https://wiki.debian.org/LTS</a></p><p><strong>铜豌豆 Linux 12 版本系列，将跟随 Debian 官方和 Debian LTS 的版本继续进行维护和更新发布。</strong></p><h3>iso 文件信息：</h3><ul><li>jidgo 文件：</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.atzlinux.com%2Fatzlinux-cd%2F12.4.1%2Famd64%2Fjigdo-dvd%2F" target="_blank">https://www.atzlinux.com/atzlinux-cd/12.4.1/amd64/jigdo-dvd/</a><p><strong>指引：</strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.atzlinux.com%2Fskills-tech.htm%23jigdo" target="_blank"> 使用 jigdo 下载制作铜豌豆 iso 镜像文件 </a></p></li><li>iso 文件软件包完整列表：</li><li><a href="https://gitee.com/atzlinux/debian-cn/blob/bookworm/isodvd/12.4/atzlinux-12.4.1-amd64-DVD-1.list" target="_blank">https://gitee.com/atzlinux/debian-cn/blob/bookworm/isodvd/12.4/atzlinux-12.4.1-amd64-DVD-1.list</a></li></ul><h4>已知问题</h4><ul><li>首次点击蓝牙图标，会有是否自动启动蓝牙的提示</li><li>有蓝牙的机器，请选择自动启动蓝牙。</li></ul><h4>问题&amp;需求反馈</h4> 铜豌豆 Linux 项目是一个开源项目，采用开源社区模式开发，非常欢迎大家反馈在使用过程中遇到的任何问题。 各类建议和需求也非常欢迎反馈。 <p><a href="https://gitee.com/atzlinux/debian-cn/issues" target="_blank">https://gitee.com/atzlinux/debian-cn/issues </a></p><h4>感谢</h4><ul><li>感谢各位捐赠人对 《铜豌豆 Linux》项目的积极捐赠</li><li>捐赠列表： <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.atzlinux.com%2Fjuanzeng.htm%23liebiao" target="_blank"> https://www.atzlinux.com/juanzeng.htm#liebiao</a><p>大家的捐赠既是对，铜豌豆 Linux 的认可，也是对，铜豌豆 Linux 支持， 是，铜豌豆 Linux 开源项目持续前进的动力。</p></li></ul><h4>其它事项</h4> root 账号登录系统 
   <ol><li>点击象棋、围棋程序，会报错</li><li>默认声音图标显示为静音</li><li>无法打开声音，不能够播放声音</li><li>点击程序菜单，设置--》用户和组</li><li>账号操作，无法成功，请用 <strong>普通用户</strong> 登录系统后使用该程序，届时会出现 root 密码输入提示框。</li></ol> 以上为正常现象。这是由于 Debian 的安全机制，不建议 root 用户直接使用图形应用程序。请用普通账号登录系统使用相关功能。 
   <hr><div><div><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.atzlinux.com%2Findex.htm" target="_blank">首页</a><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.atzlinux.com%2Fyjaz.htm" target="_blank">一键安装</a><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.atzlinux.com%2Fallpackages.htm" target="_blank">软件</a><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.atzlinux.com%2Fdownload-iso.htm" target="_blank">下载</a><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.atzlinux.com%2FNews%2Findex.htm" target="_blank">新闻</a><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.atzlinux.com%2Fskills.htm" target="_blank">使用技巧</a><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.atzlinux.com%2Ffaq.htm" target="_blank">常见问题</a><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.atzlinux.com%2Fdevel.htm" target="_blank">参与开发</a><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.atzlinux.com%2Fcontribute.htm" target="_blank">开源贡献</a><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.atzlinux.com%2Flinks.htm" target="_blank">友情链接</a><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.atzlinux.com%2Fjuanzeng.htm" target="_blank">捐赠</a><a href="https://gitee.com/atzlinux/debian-cn/issues" target="_blank">反馈</a><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.atzlinux.com%2Fcontact.htm" target="_blank">联系方式</a><br> 版权所有 © 《铜豌豆 Linux》 项目网站版权协议为 (CC BY-NC-ND 4.0)
    </div></div></li></ul></div></div>
                                    ]]>
            </description>
            <pubDate>Sun, 24 Dec 2023 03:31:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272395</guid>
            <link>https://www.oschina.net/news/272395</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Bun 1.0.19 版本更新：重要的性能优化与功能改进]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Bun 的最新版本 1.0.19 为 JavaScript 和 TypeScript 运行环境带来了一系列重要更新。这个版本在性能、兼容性和可用性方面进行了显著改进，解决了多个问题，并提高了整体的开发者体验。</p><h4>增强的 TypeScript 支持：<code>@types/bun</code></h4><p>Bun 1.0.19 中的一个突出更新是重新引入<code>@types/bun</code>，此前称为<code>bun-types</code>。这一变化极大地简化了 Bun 与 TypeScript 的整合，解决了先前实现中的一些问题。开发者不再需要为 Bun 特别配置<code>tsconfig.json</code>，而新包无缝重导出<code>@types/node</code>包，确保了兼容性和易用性。</p><h4>改进的加密包支持</h4><p>对于 JavaScript 生态系统的安全来说，Bun 1.0.19 现在完全支持<code>bcrypt</code>和<code>argon2</code>包，这是对 N-API 兼容性改进的重要一步。这一更新允许开发者在 Bun 环境中使用这些流行的加密包进行安全的密码哈希和验证，使 Bun 成为构建安全应用程序的更加多功能的平台。</p><h4>性能优化</h4><p>Bun 1.0.19 引入了几项性能增强。<code>setTimeout</code>和<code>setInterval</code>的实现在 Linux x64 系统上现在快了四倍，这要归功于一种新的计时器堆，它有效地管理计时器。对于严重依赖计时器操作的应用程序来说，这一改进至关重要，提供了显著更好的性能和资源利用。</p><p>此外，针对 Linux 系统上处理大量输入的<code>Bun.spawnSync</code>进行了优化，为具有大量输出的子进程提供了 50% 的性能提升。<code>Bun.peek()</code>函数也实现了惊人的 90 倍速度提升，而使用<code>expect(...).toEqual</code>比较<code>Map</code>实例现在快了 100 倍，这对于广泛依赖这些功能的应用程序来说，是一大益处。</p><h4>用户体验改进</h4><p>Bun 1.0.19 引入了更好的错误处理，特别是对于使用<code>await</code>在<code>async</code>函数外部这类常见错误。这次更新提供了更有信息量的错误消息，帮助开发者调试并提高代码质量。此版本还解决了<code>bun:test</code>中模块模拟的问题，通过直接使用模块指定符使其更直观。</p><h4>安装和安装后脚本</h4><p>新版本记录了安装后脚本的执行速度，帮助开发者在包安装期间识别性能瓶颈。此外，<code>bun install --verbose</code>现在将安装后脚本的输出实时流式传输，提供实时反馈，增强了安装包过程的透明度。</p><h4>Bug 修复和升级</h4><p>Bun 1.0.19 修复了一系列问题，包括与<code>--frozen-lockfile</code>标志相关的问题、TypeScript 解析器的边缘案例以及与环境变量相关的回归。此更新还带来了 SQLite 版本的升级（至 v3.44.2），确保内嵌的 SQLite 客户端保持最新和安全。</p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 24 Dec 2023 00:54:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272386</guid>
            <link>https://www.oschina.net/news/272386</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[.Net 权限工作流框架 OpenAuth.Net 6.1 版上线]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>本次更新：</p><ul><li>[新增] 人员增加直属上级，相关流程设计可以选择【直属上级】【连续多级直属上级】进行审批</li><li>[新增] 部门增加负责人，相关流程设计可以选择【部门负责人】进行审批</li><li>[修复] 定时任务使用外部接口 URL 时异常</li><li><span style="background-color:#ffffff; color:#40485b">升级.Net 版本 6.0，所有三方组件全面更新。</span></li><li><span style="background-color:#ffffff; color:#40485b">全面支持 SqlSugar Orm。详情：</span><a href="https://gitee.com/link?target=http%3A%2F%2Fdoc.openauth.net.cn%2Fcore%2Fsqlsugar.html" target="_blank">http://doc.openauth.net.cn/core/sqlsugar.html</a></li><li><span style="background-color:#ffffff; color:#40485b">全面更新 mvc 版本，升级 layui 版本至最新 v2.8.11</span><p>&nbsp;</p></li></ul><p><span style="background-color:#ffffff; color:#40485b">🔥.Net 权限管理及快速开发框架、最好用的权限工作流系统。源于 Martin Fowler 企业级应用开发思想及最新技术组合（SqlSugar、EF、Quartz、AutoFac、WebAPI、Swagger、Mock、NUnit、Vue2/3、Element-ui/plus、IdentityServer 等）。核心模块包括：角色授权、代码生成、智能打印、表单设计、工作流、定时任务等。架构易扩展，是中小企业的首选。</span></p><p><img alt="LOGO" src="https://gitee.com/uploads/images/2018/0425/163228_7077c3fd_362401.png" referrerpolicy="no-referrer"></p><ul><li><p style="margin-left:0; margin-right:0">同时支持 EntityFramework、SqlSugar 两款最流行的 ORM 框架</p></li><li><p style="margin-left:0; margin-right:0">符合国情的 RBAC 权限体系。超强的自定义权限控制功能，可灵活配置用户、角色可访问的数据权限。请参考：<a href="https://gitee.com/link?target=https%3A%2F%2Fwww.cnblogs.com%2Fyubaolee%2Fp%2FDataPrivilege.html">通用权限设计与实现</a></p></li><li><p style="margin-left:0; margin-right:0">完整的字段权限控制，可以控制字段可见及 API 是否返回字段值</p></li><li><p style="margin-left:0; margin-right:0">可拖拽的表单设计。详情：<a href="https://gitee.com/link?target=http%3A%2F%2Fdoc.openauth.net.cn%2Fpro%2Fdragform.html">可拖拽表单</a></p></li><li><p style="margin-left:0; margin-right:0">可视化流程设计</p></li><li><p style="margin-left:0; margin-right:0">全网最好用的打印解决方案。详情:<a href="https://gitee.com/link?target=http%3A%2F%2Fdoc.openauth.net.cn%2Fpro%2Fprinterplan.html">智能打印</a></p></li><li><p style="margin-left:0; margin-right:0">基于 Quartz.Net 的定时任务控制,可随时启/停，可视化配置 Cron 表达式功能</p></li><li><p style="margin-left:0; margin-right:0">基于 CodeSmith 的代码生成功能，可快速生成带有头/明细结构的页面</p></li><li><p style="margin-left:0; margin-right:0">支持 sqlserver、mysql、Oracle、PostgreSql 数据库，理论上支持所有数据库</p></li><li><p style="margin-left:0; margin-right:0">集成 IdentityServer4，实现基于 OAuth2 的登录体系</p></li><li><p style="margin-left:0; margin-right:0">建立三方对接规范，已有系统可以无缝对接流程引擎</p></li><li><p style="margin-left:0; margin-right:0">前端采用 vue + layui + element-ui + ztree + gooflow + leipiformdesign</p></li><li><p style="margin-left:0; margin-right:0">后端采用 .net core +EF core+ autofac + quartz +IdentityServer4 + nunit + swagger</p></li><li><p style="margin-left:0; margin-right:0">设计工具 PowerDesigner + Enterprise Architect</p></li></ul><p><img height="891" src="https://oscimg.oschina.net/oscnet/up-16c8a0da97ec5fa55b1d908b3e53d70f117.png" width="1911" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Sat, 23 Dec 2023 12:26:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272343</guid>
            <link>https://www.oschina.net/news/272343</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
    </channel>
</rss>
