<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[开源中国-软件更新资讯]]>
        </title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="http://rsshub.app/oschina/news/project" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[开源中国-软件更新资讯 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Tue, 19 Mar 2024 07:17:32 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[Proxy-Go v14.2 发布，优化指定出口 IP，增强兼容性！]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">Proxy 是 golang 实现的高性能 http、https、websocket、tcp、udp、socks5 代理服务器，支持正向代理、反向代理、透明代理、内网穿透、TCP/UDP 端口映射、SSH 中转、TLS 加密传输、协议转换、DNS 防污染智能代理、前置 CDN/Nginx 反代、代理连接重定向、API 动态调用上级代理、限速限连接数。提供全平台的命令行版本，友好易用的 Windows&amp;Linux&amp;macOS 控制面板，强大的安卓版。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>更新内容</strong><br><span style="background-color:#ffffff; color:#24292f">1、http/sps/socks 新增支持指定 VPN 类型的网络接口作为出口。</span><br><span style="background-color:#ffffff; color:#24292f">2、http/sps/socks 新增 dns 查询使用指定网络接口作为出口。</span><br><span style="background-color:#ffffff; color:#24292f">3、优化了 binding 出口 IP 逻辑，当设置了出口 IP 有多个而且包含了 IPv4 和 IPv6 时，根据连接目标的 IP 类型自动选择 IPv4 或 IPv6。</span><br><span style="background-color:#ffffff; color:#24292f">4、选择出口 IP 增强了兼容性。</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">更新： v10.7 及以后版本，执行：<code>proxy update</code>，即可完成快速更新到最新版。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>特色功能</strong></p><ul><li>链式代理，程序本身可以作为一级代理，如果设置了上级代理那么可以作为二级代理，乃至 N 级代理。</li><li>通讯加密，如果程序不是一级代理，而且上级代理也是本程序，那么可以加密和上级代理之间的通讯，采用底层 tls 高强度加密，安全无特征。</li><li>智能 HTTP 代理，HTTPS 代理，SOCKS5 代理，会自动判断访问的网站是否屏蔽，如果被屏蔽那么就会使用上级代理 (前提是配置了上级代理) 访问网站；如果访问的网站没有被屏蔽，为了加速访问，代理会直接访问网站，不使用上级代理。</li><li>域名黑白名单，更加自由的控制网站的访问方式。</li><li>跨平台性，无论你是 widows，linux，还是 mac，甚至是树莓派，都可以很好的运行 proxy。</li><li>多协议支持，支持 HTTP (S)，TCP，UDP，Websocket，SOCKS5 代理。</li><li>TCP/UDP 端口转发。</li><li>游戏盾，游戏代理，高仿服务器。</li><li>内网穿透，P2P 传输，协议支持 TCP 和 UDP，针对 HTTP 的优化穿透。</li><li>SSH 中转，HTTP (S)，SOCKS5 代理支持 SSH 中转，上级 Linux 服务器不需要任何服务端，本地一个 proxy 即可开心上网。</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxtaci%2Fkcp-go" target="_blank">KCP</a><span>&nbsp;</span>协议支持，HTTP (S)，SOCKS5 代理支持 KCP 协议传输数据，降低延迟，提升浏览体验。</li><li>动态选择上级代理，通过外部 API，HTTP (S)，SOCKS5，SPS 代理可以实现基于用户或者 IP 的限速，连接数限制，动态获取上级。</li><li>灵活的上级分配，HTTP (S)，SOCKS5，SPS 代理可以通过配置文件实现基于用户或者 IP 的限速，连接数限制，指定上级。</li><li>反向代理，支持直接把域名解析到 proxy 监听的 ip，然后 proxy 就会帮你代理访问需要访问的 HTTP (S) 网站。</li><li>透明 HTTP (S) 代理，配合 iptables，在网关直接把出去的 80，443 方向的流量转发到 proxy，就能实现无感知的智能路由器代理。</li><li>协议转换，可以把已经存在的 HTTP (S) 或 SOCKS5 或 SS 代理转换为一个端口同时支持 HTTP (S) 和 SOCKS5 和 SS 代理，转换后的 SOCKS5 和 SS 代理如果上级是 SOCKS5 代理，那么支持 UDP 功能，同时支持强大的级联认证功能。</li><li>自定义底层加密传输，http (s)\sps\socks 代理在 tcp 之上可以通过 tls 标准加密以及 kcp 协议加密 tcp 数据，除此之外还支持在 tls 和 kcp 之后进行自定义加密，也就是说自定义加密和 tls|kcp 是可以联合使用的，内部采用 AES256 加密，使用的时候只需要自己定义一个密码即可。</li><li>底层压缩高效传输，http (s)\sps\socks 代理在 tcp 之上可以通过自定义加密和 tls 标准加密以及 kcp 协议加密 tcp 数据，在加密之后还可以对数据进行压缩，也就是说压缩功能和自定义加密和 tls|kcp 是可以联合使用的。</li><li>安全的 DNS 代理，可以通过本地的 proxy 提供的 DNS 代理服务器与上级代理加密通讯实现安全防污染的 DNS 查询。</li><li>负载均衡，高可用，HTTP (S)\SOCKS5\SPS 代理支持上级负载均衡和高可用，多个上级重复 - P 参数即可。</li><li>指定出口 IP，HTTP (S)\SOCKS5\SPS\TCP 代理支持客户端用入口 IP 连接过来的，就用入口 IP 作为出口 IP 访问目标网站的功能。如果入口 IP 是内网 IP，出口 IP 不会使用入口 IP</li><li>支持限速，HTTP (S)\SOCKS5\SPS\TCP 代理支持限速。</li><li><p style="margin-left:0; margin-right:0">支持限连接数，HTTP (S)\SOCKS5\SPS\TCP 代理支持限连接数。</p></li><li>SOCKS5 代理支持级联认证。</li><li>证书参数使用 base64 数据，默认情况下 - C，-K 参数是 crt 证书和 key 文件的路径，如果是 base64:// 开头，那么就认为后面的数据是 base64 编码的，会解码后使用。</li><li>支持客户端 IP 黑白名单，更加安全的控制客户端对代理服务的访问，如果黑白名单同时设置，那么只有白名单生效。socks/http (s)/sps/tcp/udp/dns/ 内网穿透 bridge / 内网穿透 tbridge，都支持客户端 IP 黑白名单。</li><li>端口范围批量监听，HTTP (S)\SOCKS5\SPS\TCP 代理支持指定端口范围监听，避免启动过多进程，提高性能。</li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">下载地址:</p><ul><li><p style="margin-left:0; margin-right:0"><a href="https://gitee.com/snail/proxy/" target="_blank">Gitee</a></p></li><li><p style="margin-left:0; margin-right:0"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsnail007%2Fgoproxy" target="_blank">Github</a></p></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Tue, 19 Mar 2024 04:41:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/283742/proxy-go-14-2-released</guid>
            <link>https://www.oschina.net/news/283742/proxy-go-14-2-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[亮点功能： 私有节点&组织内节点]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify">SaaS 版流水线实现了与原有节点库的深度集成，来实现节点的自定义。用户可以直接使用组织内节点和私有节点，如个人名下发布的私有节点和组织内的开源节点，可以直接在对应的个人或组织下的流水线中使用，而不会泄露给其他的用户，这样确保了节点的私密性。</p><h1><span style="color:#245bdb">如何在流水线中使用自定义节点</span></h1><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify">节点库可发布的节点分为：公开的节点，个人名下的私有节点，组织内公开的节点&nbsp;</p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify">组织名下的流水线可以使用组织在节点库中发布在组织名下的节点</p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:center"><img alt="" height="1556" src="https://oscimg.oschina.net/oscnet/up-f520a105a8acc3a8e86671e5905ffdafddc.png" width="1228" referrerpolicy="no-referrer"></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:center"><span style="color:#245bdb">开源版</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><img alt="" height="1556" src="https://oscimg.oschina.net/oscnet/up-4444e2dd90d783a0bfaaae52630de38994f.png" width="1228" referrerpolicy="no-referrer"></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:center"><span style="color:#245bdb">SaaS 版</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify">&nbsp;</p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify">个人名下的流水线可以使用个人在节点库中发布在个人名下的所有节点</p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:center"><img alt="" height="1556" src="https://oscimg.oschina.net/oscnet/up-694f527d44c789c8bae6e72ac71f3a7f424.png" width="1228" referrerpolicy="no-referrer"></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:center"><span style="color:#245bdb">开源版</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><img alt="" height="1556" src="https://oscimg.oschina.net/oscnet/up-687157d7833a36000caca832362239035a1.png" width="1228" referrerpolicy="no-referrer"></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:center"><span style="color:#245bdb">SaaS 版</span></p><h1><span style="color:#245bdb">如何创建自定义节点：</span></h1><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:left">可查看自定义节点/建木文档，复制链接即可查看详情 https://docs.jianmu.dev/guide/custom-node.html</p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify">都广科技在建木 SaaS 版中提供了丰富的官方节点，同时也提供了用户自定义的节点。</p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:left">复制链接：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdevops.jianmuhub.com" target="_blank">https://devops.jianmuhub.com</a>，快来体验吧！！！</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 19 Mar 2024 03:05:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/283725</guid>
            <link>https://www.oschina.net/news/283725</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[CudaText 1.211.0 发布，跨平台的文本编辑器]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>CudaText 是一个跨平台的文本编辑器，用 Object Pascal 编写。它是开源项目，启动速度相当快，它可以通过 Python 插件进行扩展，借助 EControl 引擎还带来了功能丰富的语法分析器。</p><p>CudaText 1.211.0 正式发布，更新内容如下：</p><ul><li>添加：不使用&nbsp;RegEx 的文本搜索在大行上有很大的加速；例如，对于 len=400K、匹配数为 25K 的行，"全部计数"/"全部选择"/"全部标记 "的速度从 ~30 秒提高到 ~0.5 秒</li><li>添加：文本替换（带或不带 RegEx）在大行上有很大的加速；例如，对于 len=400K 行，匹配数为 25K 时，「全部替换」从约 110 秒改进到约 0.5 秒</li><li>添加：当选项「find_hi_max_lines」超过限制时，仍会高亮显示出现的内容，但仅限于可视编辑器区域；查找对话框中的"Hi"按钮不再禁用</li><li>添加：lexer「Search results」更好地支持代码树</li><li>添加：通过 Enter 插入换行符后，行变为仅空格？然后将其清空。</li><li>添加：通过 'shebang' 检测 JS 脚本，如 '#!/usr/bin/node'</li><li>更改：查找对话框：在输入字段中输入「大」文档（行数&gt; 2000）时，Highlight_All 操作不会立即启动，而是通过计时器启动 
  <ul><li>行数由新选项 "find_hi_timer_lines":2000 控制</li><li>计时器间隔由新选项 "find_hi_timer_interval":500 控制</li></ul></li><li>更改：将选项「find_hi_max_line_len」的默认值从 4k 更改为 800k，因为「查找全部」现在更快</li><li>更改：删除选项「picture_types」</li><li>修复：Windows：忘记添加 DLL 文件 libwebp32.dll / libwebp64.dll</li><li>修复：允许插件 Highlight_Occurrences 对窗口大小调整也做出反应&nbsp;(by on_scroll)</li></ul><p><span style="background-color:#ffffff; color:#333333">更多详情可查看：</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcudatext.github.io%2Fhistory.txt" target="_blank">https://cudatext.github.io/history.txt</a></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 19 Mar 2024 02:26:58 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/283719/cudatext-1-211-0-released</guid>
            <link>https://www.oschina.net/news/283719/cudatext-1-211-0-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[大术专搜 3.6.x 发布，Chrome 用户体验提升与 Firefox 看齐，mv3 升级]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h1>大术专搜是什么</h1><p><br> 大术专搜是个开源的浏览器扩展，以，灵活又顺手，的方式，在 (切换) 任意一个，或 (连续) 多个，搜索引擎（或任意网站）进行搜索。<br> 俱有，多搜索引擎工具，该有的基本功能，如：<br> - 内置，百度,B 站,Github,淘宝，等<br> - GET/POST<br> - 自定引擎<br> 在具有了，以上，基本功能，之后，它还可以：<br> - 文本单行或多行<br> - 调用搜索的过程可<u>完全仅用键盘，不碰鼠标</u>。其自身 UI 里内置类似 Vimium 的功能，键盘可点击不同的搜索引擎<br> - 等等 。。</p><p><img alt="" src="https://gitlab.com/garywill/bigSearch/-/raw/screenshot/chi.jpg" referrerpolicy="no-referrer"></p><h1><br> 本次更新亮点</h1><p><br> 近日，3.6.x 版本已发布至 Chrome Store 和 Firefox Addon。带来的重要更新是 Chrome 用户的使用体验终于能与 Firefox 看齐。</p><h2><br> Chrome 上的搜索词快速设置终于与 Firefox 一样便捷</h2><p>- 修复了 Chrome 上无法通过<u>右键菜单调出搜索界面</u>的问题<br> - 修复了 Chrome 使用<u>快捷键</u>将网页选择文本用作搜索时，需要两个步骤才能<u>唤出界面</u>的问题</p><blockquote><p>以前，这对 Firefox 用户来说都是很平常的操作，而以前因为 Chrome API 的缺失，导致 Chrome 用户需要两个步骤才能完成。现在只需要一步。（感谢那个被人骂的 mv3 带来的正面改进）</p></blockquote><p>&nbsp;</p><h2>Chrome 终于有了原生侧面板</h2><p>Chrome 也开窍了，侧面板来了。（Firefox 和 Opera 早就有了）<br> 因此，现在大术专搜的搜索界面可以通过以下方式使用：<br> 1. 工具栏按钮弹出<br> 2. 单独的专用标签页<br> 3. 浏览器原生侧边栏<br> &nbsp;</p><h2>一直以来的亮点</h2><p><br> 顺便，再介绍一遍一个我认为很好用的一个功能：<br><br> 受 Vimium 启发，大术专搜让你，可视化、快捷，地 <u>用键盘 (连续) 点击不同的搜索引擎的不同按钮</u>。使用`Shift+Enter`进入 Vem 模式。</p><p><img alt="安排好的可视化快捷键" height="388" src="https://oscimg.oschina.net/oscnet/up-3d2d86b44a48ec815dcaddd79dcbd5a48a8.jpg" width="690" referrerpolicy="no-referrer"></p><p><br> 若你用过类似的 DuckDuckGo 的 `!bang`， 或 omnibox，它们都要求你背诵代号才能用。</p><p>大术专搜受 Vimium 启发后，把数字键设置为用于切换分类，字母键用于「点击」各个搜索按钮。<br> &nbsp;</p><h2>完整介绍视频</h2><p><br> https://www.bilibili.com/video/BV1J14y1k7jv/<br> &nbsp;</p><h2>Chrome 仍有缺憾</h2><p><br> Chrome 的这个被人唾骂的 mv3，今天也给我们带来了点有用的改进。<br><br> 但，Chrome 仍有不如 Firefox 的一点：不支持列出已安装进浏览器的搜索引擎。<br><br> 所以，若你平时是将搜索引擎加入进 Chrome 使用的，尚不能无缝地将它们带进大术专搜。希望 Google 早日改进。<br><br> 不过大术专搜内置的引擎也能满足大部分日常需求。Chrome 用户若有需要，请自行把自定义的引擎编入大术专搜。</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 19 Mar 2024 02:21:58 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/283718</guid>
            <link>https://www.oschina.net/news/283718</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[MyData v0.7.3 更新日志]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>v0.7.3 主要更新内容：提高环境变量安全性、增加数据过滤条件；</p><h2>新功能</h2><ul><li><p>环境变量</p><ul><li>变量值，增加加密显示开关，打开后不显示明文值，避免泄露安全相关参数； 
    <ul><li>若需恢复显示，需要二次身份认证；</li></ul></li></ul></li><li><p>任务管理</p><ul><li>数据过滤条件，增加<code>not null</code>、<code>not empty</code>；</li></ul></li></ul><h3>优化</h3><ul><li><p>项目管理 / 集成管理</p><ul><li>默认加载第一个环境的集成数据；</li></ul></li><li><p>租户管理</p><ul><li>增加编号字段，作为唯一标识，用于专属的二级域名；</li></ul></li><li><p>登录</p><ul><li>由完整域名查询 tenant_id 改为用二级域名匹配租户编号查询；</li></ul></li></ul><h3>修复</h3><ul><li>任务卡片样式问题；</li><li>环境变量列表查询问题；</li></ul></div>
                                    ]]>
            </description>
            <pubDate>Tue, 19 Mar 2024 02:09:58 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/283715/mydata-blade-0-7-3-released</guid>
            <link>https://www.oschina.net/news/283715/mydata-blade-0-7-3-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[谁说 java 没有能打的 ORM？国产 ORM 框架 sqltoy-orm 5.6.1 发版]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>开源地址：</strong></p><ul><li>github:&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fchenrenfei%2Fsagacity-sqltoy" target="_blank">https://github.com/sagframe/sagacity-sqltoy</a></li><li>gitee:&nbsp;<a href="https://gitee.com/sagacity/sagacity-sqltoy">https://gitee.com/sagacity/sagacity-sqltoy</a></li><li>idea 插件 (可直接在 idea 中检索安装):&nbsp;&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fthreefish%2Fsqltoy-idea-plugins" target="_blank">https://github.com/threefish/sqltoy-idea-plugins</a></li><li>sqltoy 脚手架项目：https://gitee.com/momoljw/sss-rbac-admin</li><li>sqltoy lambda 项目:&nbsp;https://gitee.com/gzghde/sqltoy-plus</li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>更新内容</strong></p><p style="color:#40485b; margin-left:0em; margin-right:0em; text-align:start">1、支持 convertType 别名@SqlToyFieldAlias 双向 PO&lt;--&gt;DTO 映射 (感谢<span>&nbsp;</span><a href="https://gitee.com/gleam" target="_blank">@gleam</a><span>&nbsp;</span>)<br> 2、优化 sql 查询结果按层级封装 OneToOne，OneToMany 按照业务逻辑场景，而非存粹的数据库表主外键 (感谢<span>&nbsp;</span><a href="https://gitee.com/XiaoGe1202" target="_blank">@俊华</a><span>&nbsp;</span>)</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:start">感谢：@俊华、@Gleam 两位用户的反馈</p><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsagframe%2Fsagacity-sqltoy%23jpa%25E9%2583%25A8%25E5%2588%2586" target="_blank">JPA 部分</a></h3><ul><li>类似 JPA 的对象化 CRUD、对象级联加载和新增、更新</li><li>支持通过 POJO 生成 DDL 以及直接向数据库创建表</li><li>强化 update 操作，提供弹性字段修改能力，不同于 hibernate 先 load 后修改，而是一次数据库交互完成修改，确保了高并发场景下数据的准确性</li><li>改进了级联修改，提供了先删除或者先置无效，再覆盖的操作选项</li><li>增加了 updateFetch、updateSaveFetch 功能，强化针对强事务高并发场景的处理，类似库存台账、资金台账，实现一次数据库交互，完成锁查询、不存在则插入、存在则修改，并返回修改后的结果</li><li>增加了树结构封装，便于统一不同数据库树型结构数据的递归查询</li><li>支持分库分表、支持多种主键策略 (额外支持基于 redis 的产生特定规则的业务主键)、加密存储、数据版本校验</li><li>提供了公共属性赋值 (创建人、修改人、创建时间、修改时间、租户)、扩展类型处理等</li><li>提供了多租户统一过滤和赋值、提供了数据权限参数带入和越权校验</li></ul><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsagframe%2Fsagacity-sqltoy%23%25E6%259F%25A5%25E8%25AF%25A2%25E9%2583%25A8%25E5%2588%2586" target="_blank">查询部分</a></h3><ul><li>极为直观的 sql 编写方式，便于从客户端 &lt;--&gt; 代码，双向快速迁移，便于后期变更维护</li><li>支持缓存翻译、反向缓存匹配 key 代替 like 模糊查询</li><li>提供了跨数据库支持能力：不同数据库的函数自动转换适配，多方言 sql 根据实际环境自动匹配、多数据库同步测试，大幅提升了产品化能力</li><li>提供了取 top 记录、随机记录等特殊场景的查询功能</li><li>提供了最强大的分页查询机制：1) 自动优化 count 语句；2) 提供基于缓存的分页优化，避免每次都执行 count 查询；3) 提供了独具特色的快速分页；4) 提供了并行分页</li><li>提供了分库分表能力</li><li>提供了在管理类项目中极为价值的：分组汇总计算、行列转换 (行转列、列转行)、同比环比、树形排序、树形汇总，相关算法自然集成</li><li>提供了基于查询的层次化数据结构封装</li><li>提供了大量辅助功能：数据脱敏、格式化、条件参数预处理等</li></ul><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsagframe%2Fsagacity-sqltoy%23%25E6%2594%25AF%25E6%258C%2581%25E5%25A4%259A%25E7%25A7%258D%25E6%2595%25B0%25E6%258D%25AE%25E5%25BA%2593" target="_blank">支持多种数据库</a></h3><ul><li>常规的 mysql、oracle、db2、postgresql、 sqlserver、dm、kingbase、sqlite、h2、 oceanBase、polardb、guassdb、tidb</li><li>支持分布式 olap 数据库: clickhouse、StarRocks、greenplum、impala (kudu)</li><li>支持 elasticsearch、mongodb</li><li>所有基于 sql 和 jdbc 各类数据库查询</li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>sqltoy 特点介绍：</strong></p><ul><li><strong>sqltoy 的核心构建思想</strong></li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><img alt="" height="868" src="https://oscimg.oschina.net/oscnet/up-a385d72ceb030d705e8e5803ca3cd4c09a1.png" width="1136" referrerpolicy="no-referrer"></p><ul><li><strong>sqltoy 的对比 mybatis (plus) 的核心点：查询语句编写、可阅读性、可维护性</strong></li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" height="923" src="https://oscimg.oschina.net/oscnet/up-05295a7a1813978134a5e49a7cff0f0e1ab.png" width="1873" referrerpolicy="no-referrer"></p><ul><li><strong>对象化 crud 是基础，但 sqltoy 有针对性的改进：update、updateSaveFetch、updateFetch 等</strong></li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><img alt="" height="845" src="https://oscimg.oschina.net/oscnet/up-6b8e8204061eec3d2096a50e9899548351e.png" width="1745" referrerpolicy="no-referrer"></p><ul><li><strong>sqltoy 的缓存翻译，大幅减少表关联简化 sql，让你的查询性能成几何级提升</strong></li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="阐述 sqltoy 为什么秒杀 mybatis(plus)" src="https://p3-tt.byteimg.com/origin/pgc-image/85287e14aa3e428fbabe297472596455?from=pc" referrerpolicy="no-referrer"></p><ul><li><strong>极致的分页，同样帮助你实现查询的性能大幅提升</strong></li></ul><ol><li>快速分页:@fast () 实现先取单页数据然后再关联查询，极大提升速度</li><li>分页优化器:page-optimize 让分页查询由两次变成 1.3~1.5 次 (用缓存实现相同查询条件的总记录数量在一定周期内无需重复查询</li><li>sqltoy 的分页取总记录的过程不是简单的 select count (1) from (原始 sql)；而是智能判断是否变成:select count (1) from 'from 后语句 '， 并自动剔除最外层的 order by</li><li>sqltoy 支持并行查询：parallel="true"，同时查询总记录数和单页数据，大幅提升性能</li></ol><div><img alt="阐述 sqltoy 为什么秒杀 mybatis(plus)" src="https://p6-tt.byteimg.com/origin/pgc-image/3d5f7094da154671985dd390f56f6302?from=pc" referrerpolicy="no-referrer"></div><div>
 &nbsp;
</div><ul><li><strong>便利的跨数据库统计计算：数据旋转</strong></li></ul><div><img alt="阐述 sqltoy 为什么秒杀 mybatis(plus)" src="https://p1-tt.byteimg.com/origin/pgc-image/949bc75b5c53441c98284dae2bed11fe?from=pc" referrerpolicy="no-referrer"></div><ul><li><strong>便利的跨数据库统计计算：无限极分组统计 (含汇总求平均)</strong></li></ul><div><img alt="阐述 sqltoy 为什么秒杀 mybatis(plus)" src="https://p1-tt.byteimg.com/origin/pgc-image/f5edc52adbbe4a1ca327d9a9b0c5d64c?from=pc" referrerpolicy="no-referrer"></div><ul><li><strong>便利的跨数据库统计计算：同比环比</strong></li></ul><div><img alt="阐述 sqltoy 为什么秒杀 mybatis(plus)" src="https://p3-tt.byteimg.com/origin/pgc-image/b9d435e2852644c9a4c9e062cc3d46d7?from=pc" referrerpolicy="no-referrer"></div><div>
 5、树形表排序汇总
</div><div><p style="margin-left:0; margin-right:0"><img height="274" src="https://oscimg.oschina.net/oscnet/up-1773cce82b98a943d42caaa62f60d80f3d0.png" width="1002" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0"><img height="403" src="https://oscimg.oschina.net/oscnet/up-8717f1c442767b08f2406019ae9b63721cb.png" width="409" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0">6、扩展集成</p><p style="margin-left:0; margin-right:0"><img height="961" src="https://oscimg.oschina.net/oscnet/up-6603ed15ec936dea45c4f6fb7318f4a062b.png" width="1965" referrerpolicy="no-referrer"></p></div></div>
                                    ]]>
            </description>
            <pubDate>Tue, 19 Mar 2024 01:11:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/283702/sqltoy-orm-5-6-1-released</guid>
            <link>https://www.oschina.net/news/283702/sqltoy-orm-5-6-1-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Open 一 Sora1.0 全公开]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>所有训练细节/模型权重全公开，成本仅 1 万美元</p><p>OpenAI Sora 还没用上，Colossal-AI 团队正式宣布全面开源全球首个类 Sora 架构视频生成模型「Open-Sora 1.0」——涵盖了整个训练流程，包括数据处理、所有训练细节和模型权重，1 万美元 64 块 GPU 复现，训练成本直降 46%，携手全球 AI 热爱者共同推进视频创作的新纪元。（新智元）</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 19 Mar 2024 00:49:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/283699</guid>
            <link>https://www.oschina.net/news/283699</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[wlnmp 一键安装包更新 240318]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><strong>wlnmp 一键安装包 240318 更新内容如下：</strong></p><ul><li>（更新）php8.2.17、php8.3.4、mariadb10.4.33、mariadb10.5.24、mariadb10.6.17、mariadb10.11.7、tssh0.1.19 <p>&nbsp;</p></li></ul><p><strong>关于 wlnmp</strong></p><p>从 2019 年初开始维护 wlnmp 一键安装包这个项目，起初只是为了在日常运维过程中，可以快速的部署 lnmp 服务。wlnmp 已支持国产华为欧拉 OpenEuler、国产龙蜥 AnolisOS、OpenCloudOS 系统等。</p><p>wlnmp 一键安装包基于上游开源软件二次开发，可以在 Linux 系统上通过 wlnmp 提供的镜像源，快速部署 Nginx/Mysql/PHP 等常用软件，支持 php、MySQL 多个版本在同一系统中并存。</p><p style="margin-left:0; margin-right:0"><span style="color:#72c490"><strong>系统支持：</strong></span></p><p style="margin-left:0; margin-right:0; text-align:left"><span>✦&nbsp;</span>Alibaba CloudLinux 2.1903</p><p style="margin-left:0; margin-right:0"><span>✦&nbsp;</span>Alibaba CloudLinux 3</p><p style="margin-left:0; margin-right:0"><span>✦&nbsp;</span>AlmaLinux8.x</p><p style="margin-left:0; margin-right:0"><span>✦&nbsp;</span>AnolisOS8.x</p><p style="margin-left:0; margin-right:0"><span>✦&nbsp;</span>CentOS7.x</p><p style="margin-left:0; margin-right:0"><span>✦&nbsp;</span>CentOS8.x</p><p style="margin-left:0; margin-right:0"><span>✦&nbsp;</span>OpenCloudOS8.x</p><p style="margin-left:0; margin-right:0"><span>✦ OpenEuler20.03</span></p><p style="margin-left:0; margin-right:0"><span>✦&nbsp;OpenEuler22.03</span></p><p style="margin-left:0; margin-right:0"><span>✦&nbsp;RockyLinux8.x</span></p><p style="margin-left:0; margin-right:0; text-align:center"><span>传统方式添加 wlnmp 镜像源，实现 yum 一键安装部署！</span></p><p style="margin-left:0; margin-right:0; text-align:center"><span>安装便捷，稳定更新，模块集成</span></p><p style="margin-left:0; margin-right:0; text-align:center"><span>方便维护&nbsp;中国特色，独立包组</span></p><p style="margin-left:0; margin-right:0; text-align:center"><span>免费使用，为爱发电</span></p><p><span style="background-color:#ffffff; color:#333333">安装使用见：</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.wlnmp.com%2Finstall" target="_blank">install</a></p><p><span style="background-color:#ffffff; color:#333333">更新日志可查看：</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.php.net%2FChangeLog-8.php%238.2.17" target="_blank">ChangeLo</a><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.wlnmp.com%2Fchangelog" target="_blank">g</a></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 19 Mar 2024 00:22:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/283698/wlnmp-240318</guid>
            <link>https://www.oschina.net/news/283698/wlnmp-240318</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Teo 0.2.18 发布，修复代码生成 bug，巨好用的网络开发框架]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><img alt="Teo logo" height="405" src="https://oscimg.oschina.net/oscnet/up-287163ce1ca0cbb4b0c204566a5bd675ce5.png" width="900" referrerpolicy="no-referrer"></p><p>一个后端框架，支持 AI 编写，不写编程代码就能启动服务器进行增删改查，还能为前端生成请求包，写一个登录功能只需 5 行代码。支持 Node.js，支持 Python，支持 Rust。使用编程代码的话，它的 ORM API 可能是世界上最好用，最类型安全的。</p><p><strong>使用方法</strong></p><p>它的使用方法非常简单，一般我们在编写后端开发的时候，肯定离不开数据建模，编写各个类和表，我们就编写这个，就能得到默认的增删改查和分组聚合。</p><pre><code>connector {
  provider: .sqlite,
  url: "sqlite::memory:"
}
 
server {
  bind: ("0.0.0.0", 5050)
}
 
model User {
  @id @autoIncrement @readonly
  id: Int
  @unique @onSet($if($presents, $isEmail))
  email: String
  name: String?
  @relation(fields: .id, references: .authorId)
  posts: Post[]
}
 
model Post {
  @id @autoIncrement @readonly
  id: Int
  title: String
  content: String?
  @default(false)
  published: Bool
  @foreignKey
  authorId: Int
  @relation(fields: .authorId, references: .id)
  author: User
}</code></pre><p>这就是最精简的博客网站的后台，用户和文章相关联。我们可以对用户和文章进行非常丰富的创建、编辑和查询等操作。</p><p>如果要创建一个用户的同时创建其相关联的文章，使用这个请求，发送到/User/create。</p><pre><code class="language-json">{
  "create": {
    "email": "ada@teocloud.io",
    "name": "Ada",
    "posts": {
      "create": [
        {
          "title": "Introducing Teo",
          "content": "This post introduces Teo."
        },
        {
          "title": "The next generation framework",
          "content": "Use the next generation technology."
        }
      ]
    }
  },
  "include": {
    "posts": true
  }
}</code></pre><p>这样的返回值会包括用户，也包括文章。</p><pre><code class="language-json">{
  "data": {
    "id": 1,
    "email": "ada@teocloud.io",
    "name": "Ada",
    "posts": [
      {
        "id": 1,
        "title": "Introducing Teo",
        "content": "This post introduces Teo.",
        "published": false,
        "authorId": 1
      },
      {
        "id": 2,
        "title": "The next generation framework",
        "content": "Use the next generation technology.",
        "published": false,
        "authorId": 1
      }
    ]
  }
}</code></pre><p><strong>5 行代码编写登录</strong></p><p>一个集成的登录只需要 5 行代码。请看演示：</p><pre><code>@identity.tokenIssuer($identity.jwt(expired: 3600 * 24 * 365))
@identity.jwtSecret(ENV["JWT_SECRET"]!)
model User {
  @id @autoIncrement @readonly
  id: Int
  @unique @onSet($if($presents, $isEmail)) @identity.id
  email: String
  @writeonly @onSet($presents.bcrypt.salt)
  @identity.checker($get(.value).presents.bcrypt.verify($self.get(.password).presents))
  password: String
 
  include handler identity.signIn
  include handler identity.identity
}
 
middlewares [identity.identityFromJwt(secret: ENV["JWT_SECRET"]!)]</code></pre><p>这里的代码多于 5 行，是因为用户表的字段也在这段代码里。把这个请求发送到/User/signIn：</p><pre><code><span>{</span></code><code><span><span>"credentials"</span>: {</span></code><code><span><span>"email"</span>: <span style="color:#dd1144">"01@gmail.com"</span>,</span></code><code><span><span>"password"</span>: <span style="color:#dd1144">"Aa123456"</span></span></code><code><span>  }</span></code><code><span>}</span></code></pre><p>我们得到了用户信息和他的 token。</p><pre><code><span>{</span></code><code><span><span>"data"</span>: {</span></code><code><span><span>"id"</span>: <span style="color:#0e9ce5">1</span>,</span></code><code><span><span>"email"</span>: <span style="color:#dd1144">"01@gmail.com"</span></span></code><code><span>  },</span></code><code><span><span>"meta"</span>: {</span></code><code><span><span>"token"</span>: <span style="color:#dd1144">"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZCI6eyJpZCI6MX0sIm1vZGVsIjpbIlVzZXIiXSwiZXhwIjoxNzQyMTI0NDk2fQ.x2DSIpdnUeJtsUOGQsHlGksr29aF-CWog6X5LILxsOc"</span></span></code><code><span>  }</span></code><code><span>}</span></code></pre><p><strong>完整框架功能一个不少</strong></p><p>文件上传，文件返回，静态目录映射，返回 HTML 页面，或是返回其他内容，一应俱全。Teo 的插件是先进的先进后出插件，即第一个插件进入，第二个插件进入，执行路由定义，第二个插件退出，第一个插件退出。</p><p>要编写自定义路由，请看这里，这三段代码分别用 Node.js，Python 和 Rust 编写，选择你想选择的语言开发后台即可：</p><pre><code class="language-javascript">import { App, Response, RequestCtx } from '@teocloud/teo'
import { EchoPathArguments } from './entities'
 
const app = new App()
app.mainNamespace().defineHandler("hello", () =&gt; {
    return Response.html(`
        &lt;html&gt;
            &lt;head&gt;
                &lt;title&gt;Hello, Teo handlers&lt;/title&gt;
            &lt;/head&gt;
            &lt;body&gt;
                &lt;h1&gt;Hello, Teo handlers!&lt;/h1&gt;
            &lt;/body&gt;
        &lt;/html&gt;
    `)
})
app.mainNamespace().defineHandler("empty", () =&gt; {
    return Response.empty()
})
app.mainNamespace().defineHandler("echo", (ctx: RequestCtx) =&gt; {
    const pathArguments: EchoPathArguments = ctx.pathArguments()
    return Response.string(pathArguments.data, "text/plain")
})
app.run()</code></pre><pre><code class="language-python">from asyncio import run
from teo import App, Response, RequestCtx
from entities import EchoPathArguments
 
async def main():
    app = App()
    def hello_handler(_ctx):
        return Response.html("""
            &lt;html&gt;
                &lt;head&gt;
                    &lt;title&gt;Hello, Teo handlers&lt;/title&gt;
                &lt;/head&gt;
                &lt;body&gt;
                    &lt;h1&gt;Hello, Teo handlers!&lt;/h1&gt;
                &lt;/body&gt;
            &lt;/html&gt;
        """)
    app.main_namespace().define_handler("hello", hello_handler)
    def empty_handler(_ctx):
        return Response.empty()
    app.main_namespace().define_handler("empty", empty_handler)
    def echo_handler(ctx: RequestCtx):
        path_arguments: EchoPathArguments = ctx.path_arguments()
        return Response.string(path_arguments["data"], "text/plain")
    app.main_namespace().define_handler("echo", echo_handler)
    await app.run()
 
run(main())</code></pre><pre><code>mod entities;
 
use tokio::main;
use teo::prelude::{App, Response, Result, path};
use crate::entities::EchoPathArguments;
 
#[main]
async fn main() -&gt; Result&lt;()&gt; {
    let app = App::new()?;
    app.main_namespace_mut().define_handler("hello", || async {
        let response = Response::html(r#"
            &lt;html&gt;
                &lt;head&gt;
                    &lt;title&gt;Hello, Teo handlers&lt;/title&gt;
                &lt;/head&gt;
                &lt;body&gt;
                    &lt;h1&gt;Hello, Teo handlers!&lt;/h1&gt;
                &lt;/body&gt;
            &lt;/html&gt;
        "#)?;
        Ok::&lt;Response, Error&gt;(response)
    });
    app.main_namespace_mut().define_handler("empty", || async {
        Ok::&lt;Response, Error&gt;(Response::empty())
    });
    app.main_namespace_mut().define_handler("echo", |path_args: EchoPathArguments| async move {
        Ok::&lt;Response, Error&gt;(Response::string(path_args.data(), "text/plain"))
    });
    app.run().await
}</code></pre><p>在这个例子中，我们定义了三个路由，返回 HTML，返回空，和返回文本。</p><p><strong>开始使用</strong></p><p>Teo 的安装过程非常简单，Node.js 用 npm、pnpm、yarn 都可以安装，Python 的用 pip 安装，Rust 的用 cargo 安装，都是语言标配的包管理工具。</p><pre><code class="language-bash">npm install @teocloud/teo # node.js
pip install teo # python
cargo install teo # rust</code></pre><p>添加我们的微信群管微信 caofz007，关注公众号，在 Gitee 上面给我们的辛苦劳动一点鼓励，点一颗星，即可加入我们微信群。群里你可以任意问答，我们有专人回复，我们的作者会聆听你的需求，为你改变框架的未来，开发你正需要的功能。</p><p><strong>项目地址</strong></p><p>官网：https://teocloud.io</p><p>Gitee: https://gitee.com/teocloud/teo</p><p><strong>学习资料</strong></p><p>我们的作者花了数月的时间编写文档，我们的官网有详细的文档和教程，现在的浏览器翻译工具非常厉害，只要安装一个翻译插件，网站秒变中文，阅读轻松畅快。</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 18 Mar 2024 22:29:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/283694/teo-0-2-18-released</guid>
            <link>https://www.oschina.net/news/283694/teo-0-2-18-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[PHP 8.2.17 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff; color:#333333">PHP 8.2.17 已发布，更新内容如下：</span></p><ul><li>Core: 
  <ul><li>修复了在关闭时 ZTS 持久资源崩溃的问题。</li></ul></li><li>Curl: 
  <ul><li>修复了由于 libcurl 8.6.0 中字符串更改导致的测试失败问题。</li></ul></li><li>DOM: 
  <ul><li>修复了 DOMNodeList 和 DOMNodeMap 中维度的引用访问问题。</li></ul></li><li>Fileinfo: 
  <ul><li>修复了 bug GH-13344（finfo::buffer(): Failed identify data 0:(null), backport）。</li></ul></li><li>FPM: 
  <ul><li>修复了 bug #75712（php-fpm 中的 getenv 不应该读取 $_ENV、$_SERVER）。</li></ul></li><li>GD: 
  <ul><li>修复了 bug GH-12019（在系统 gd 库中检测图像格式的问题）。</li></ul></li><li>MySQLnd: 
  <ul><li>修复了 bug GH-11950（[mysqlnd] 如果 CR_SERVER_GONE_ERROR 已经被设置，不应该将 CR_MALFORMED_PACKET 设置为错误）。</li></ul></li><li>PGSQL: 
  <ul><li>修复了 bug GH-13354（pg_execute/pg_send_query_params/pg_send_execute 中传递了空值的引用）。</li></ul></li><li>Standard: 
  <ul><li>修复了将数组键作为哈希字符串（不区分大小写）比较的错误，对于第二个操作数缓冲区大小（尽管现在未使用）。</li></ul></li></ul><p><span style="background-color:#ffffff; color:#333333">更多详情可查看：</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.php.net%2FChangeLog-8.php%238.2.17" target="_blank">ChangeLog</a></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 18 Mar 2024 07:17:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/283587/php-8-2-17-released</guid>
            <link>https://www.oschina.net/news/283587/php-8-2-17-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[vfox 0.2.5 发布: 一个工具管理所有运行时版本！]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>项目地址:<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fversion-fox%2Fvfox" target="_blank">https://github.com/version-fox/vfox</a></strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>官网地址:<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fvfox.lhan.me%2Fzh-hans%2F" target="_blank">https://vfox.lhan.me/zh-hans/</a></strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">该版本主要修复了 Powershell Hook 脚本引起的几个问题，优化了用户体验和性能，还支持 GitBash shell, 并为 0.3.0 做准备。</p><h3>更新内容:</h3><ul><li>feat: 支持 PreUse hook 函数 by<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fbytemain" target="_blank">@bytemain</a><span>&nbsp;</span>in<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fversion-fox%2Fvfox%2Fpull%2F58" target="_blank">#58</a></li><li><strong>feat: 支持 GitBash shell by<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Faooohan" target="_blank">@aooohan</a><span>&nbsp;</span>in<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fversion-fox%2Fvfox%2Fcommit%2F967d2cf2796e09bd0e4ace8d3e6d2721941ef502" target="_blank">967d2cf</a></strong></li><li>feat: 支持模糊搜索所有版本 by<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FChance-fyi" target="_blank">@Chance-fyi</a><span>&nbsp;</span>in<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fversion-fox%2Fvfox%2Fpull%2F78" target="_blank">#78</a></li><li>fix: VSCode 下 PATH 重复问题 by<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Faooohan" target="_blank">@aooohan</a><span>&nbsp;</span>in<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fversion-fox%2Fvfox%2Fcommit%2Fe3c35b92275739dce4c255aa5322435d52a793e1" target="_blank">e3c35b9</a></li><li>fix: 模糊搜索的不一致问题 by<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FChance-fyi" target="_blank">@Chance-fyi</a><span>&nbsp;</span>in<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fversion-fox%2Fvfox%2Fpull%2F75" target="_blank">#75</a></li><li>fix(powershell): 覆盖原始 prompt 函数 by<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FLordHumphrey" target="_blank">@LordHumphrey</a><span>&nbsp;</span>in<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fversion-fox%2Fvfox%2Fpull%2F101" target="_blank">#101</a></li><li>fix(powershell): 激活后导致,中文乱码问题 by<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FLordHumphrey" target="_blank">@LordHumphrey</a><span>&nbsp;</span>in<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fversion-fox%2Fvfox%2Fpull%2F117" target="_blank">#117</a></li><li>fix(powershell): 由于 Powershell 的 bug, 需要提前进行清理 by<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Faooohan" target="_blank">@aooohan</a><span>&nbsp;</span>in<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fversion-fox%2Fvfox%2Fcommit%2F8ce7be0101946dc6bccd5b57794ad91ef01c13b0" target="_blank">8ce7be0</a></li><li>fix(zip): 解压缩未保持原有格式 by<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fahai-code" target="_blank">@ahai-code</a><span>&nbsp;</span>in<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fversion-fox%2Fvfox%2Fpull%2F103" target="_blank">#103</a></li><li>fix(plugin): 插件未传递主版本信息 by<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Faooohan" target="_blank">@aooohan</a><span>&nbsp;</span>in<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fversion-fox%2Fvfox%2Fcommit%2F9151cf2451d12c55c8324f337a235add8013e33f" target="_blank">9151cf2</a></li><li>refactor: 变更插件存储格式, 由单文件改为一个插件对应一个目录 by<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Faooohan" target="_blank">@aooohan</a><span>&nbsp;</span>in<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fversion-fox%2Fvfox%2Fcommit%2Ff0253a4a697f77fd586b9cf33b04bc61619b21a1" target="_blank">f0253a4</a></li><li><p>&nbsp;</p></li></ul><h3>新贡献者:</h3><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxxnuo" target="_blank">@xxnuo</a><span>&nbsp;</span>made their first contribution in<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fversion-fox%2Fvfox%2Fpull%2F71" target="_blank">#71</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdependabot" target="_blank">@dependabot</a><span>&nbsp;</span>made their first contribution in<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fversion-fox%2Fvfox%2Fpull%2F77" target="_blank">#77</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fbytemain" target="_blank">@bytemain</a><span>&nbsp;</span>made their first contribution in<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fversion-fox%2Fvfox%2Fpull%2F58" target="_blank">#58</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FLordHumphrey" target="_blank">@LordHumphrey</a><span>&nbsp;</span>made their first contribution in<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fversion-fox%2Fvfox%2Fpull%2F101" target="_blank">#101</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fahai-code" target="_blank">@ahai-code</a><span>&nbsp;</span>made their first contribution in<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fversion-fox%2Fvfox%2Fpull%2F103" target="_blank">#103</a></li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>Full Changelog</strong><span style="background-color:#ffffff; color:#1f2328">:<span>&nbsp;</span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fversion-fox%2Fvfox%2Fcompare%2Fv0.2.4...v0.2.5" target="_blank">v0.2.4...v0.2.5</a></p><h3>已支持插件:</h3><table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:0px; box-sizing:border-box; color:#1f2328; display:block; font-family:-apple-system,&quot;system-ui&quot;,&quot;Segoe UI&quot;,&quot;Noto Sans&quot;,Helvetica,Arial,sans-serif,&quot;Apple Color Emoji&quot;,&quot;Segoe UI Emoji&quot;; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; margin-bottom:0px !important; margin-top:0px; max-width:100%; orphans:2; overflow:auto; text-align:start; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:max-content; word-spacing:0px"><tbody><tr><th>Name</th><th>Version</th><th>Author</th><th>Description</th></tr><tr><td style="border-style:solid; border-width:1px"><strong>dart/dart</strong></td><td style="border-style:solid; border-width:1px">0.0.1</td><td style="border-style:solid; border-width:1px">Aooohan</td><td style="border-style:solid; border-width:1px">dart plugin, support for getting stable, dev, beta version</td></tr><tr><td style="border-style:solid; border-width:1px"><strong>deno/deno</strong></td><td style="border-style:solid; border-width:1px">0.0.1</td><td style="border-style:solid; border-width:1px">Aooohan</td><td style="border-style:solid; border-width:1px">Deno plugin,<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeno.com%2F" target="_blank">https://deno.com/</a></td></tr><tr><td style="border-style:solid; border-width:1px"><strong>dotnet/dotnet</strong></td><td style="border-style:solid; border-width:1px">0.0.1</td><td style="border-style:solid; border-width:1px">Korbinian Habereder</td><td style="border-style:solid; border-width:1px">dotnet plugin, support for dotnet sdks 6.0, 7.0, 8.0</td></tr><tr><td style="border-style:solid; border-width:1px"><strong>flutter/flutter-cn</strong></td><td style="border-style:solid; border-width:1px">0.0.1</td><td style="border-style:solid; border-width:1px">Aooohan</td><td style="border-style:solid; border-width:1px">flutter plugin for China, support for getting stable, dev, beta version</td></tr><tr><td style="border-style:solid; border-width:1px"><strong>flutter/flutter</strong></td><td style="border-style:solid; border-width:1px">0.0.2</td><td style="border-style:solid; border-width:1px">Aooohan</td><td style="border-style:solid; border-width:1px">flutter plugin, support for getting stable, dev, beta version</td></tr><tr><td style="border-style:solid; border-width:1px"><strong>golang/golang</strong></td><td style="border-style:solid; border-width:1px">0.0.2</td><td style="border-style:solid; border-width:1px">Aooohan</td><td style="border-style:solid; border-width:1px">&nbsp;</td></tr><tr><td style="border-style:solid; border-width:1px"><strong>gradle/gradle</strong></td><td style="border-style:solid; border-width:1px">0.0.1</td><td style="border-style:solid; border-width:1px">ahai</td><td style="border-style:solid; border-width:1px">gradle</td></tr><tr><td style="border-style:solid; border-width:1px"><strong>java/adoptium-jdk</strong></td><td style="border-style:solid; border-width:1px">0.0.1</td><td style="border-style:solid; border-width:1px">aooohan</td><td style="border-style:solid; border-width:1px">Adoptium JDK</td></tr><tr><td style="border-style:solid; border-width:1px"><strong>java/azul-adoptium-jdk</strong></td><td style="border-style:solid; border-width:1px">0.0.1</td><td style="border-style:solid; border-width:1px">axdank</td><td style="border-style:solid; border-width:1px">Azul (Zulu) JDK - Adoptium</td></tr><tr><td style="border-style:solid; border-width:1px"><strong>java/azul-jdk</strong></td><td style="border-style:solid; border-width:1px">0.0.3</td><td style="border-style:solid; border-width:1px">yimiaoxiehou</td><td style="border-style:solid; border-width:1px">Azul JDK, also known as Zulu</td></tr><tr><td style="border-style:solid; border-width:1px"><strong>java/graalvm</strong></td><td style="border-style:solid; border-width:1px">0.0.1</td><td style="border-style:solid; border-width:1px">ahai</td><td style="border-style:solid; border-width:1px">graalvm JDK</td></tr><tr><td style="border-style:solid; border-width:1px"><strong>java/ibm-adoptium-jdk</strong></td><td style="border-style:solid; border-width:1px">0.0.1</td><td style="border-style:solid; border-width:1px">axdank</td><td style="border-style:solid; border-width:1px">IBM JDK - Adoptium</td></tr><tr><td style="border-style:solid; border-width:1px"><strong>java/microsoft-adoptium-jdk</strong></td><td style="border-style:solid; border-width:1px">0.0.1</td><td style="border-style:solid; border-width:1px">axdank</td><td style="border-style:solid; border-width:1px">Microsoft JDK - Adoptium</td></tr><tr><td style="border-style:solid; border-width:1px"><strong>java/redhat-adoptium-jdk</strong></td><td style="border-style:solid; border-width:1px">0.0.1</td><td style="border-style:solid; border-width:1px">axdank</td><td style="border-style:solid; border-width:1px">RedHat JDK - Adoptium</td></tr><tr><td style="border-style:solid; border-width:1px"><strong>kotlin/kotlin</strong></td><td style="border-style:solid; border-width:1px">0.0.1</td><td style="border-style:solid; border-width:1px">Aooohan</td><td style="border-style:solid; border-width:1px">Kotlin plugin</td></tr><tr><td style="border-style:solid; border-width:1px"><strong>maven/maven</strong></td><td style="border-style:solid; border-width:1px">0.0.1</td><td style="border-style:solid; border-width:1px">Aooohan</td><td style="border-style:solid; border-width:1px">&nbsp;</td></tr><tr><td style="border-style:solid; border-width:1px"><strong>nodejs/nodejs</strong></td><td style="border-style:solid; border-width:1px">0.0.7</td><td style="border-style:solid; border-width:1px">Aooohan</td><td style="border-style:solid; border-width:1px">Node.js</td></tr><tr><td style="border-style:solid; border-width:1px"><strong>nodejs/npmmirror</strong></td><td style="border-style:solid; border-width:1px">0.0.5</td><td style="border-style:solid; border-width:1px">yimiaoxiehou</td><td style="border-style:solid; border-width:1px">install Node.js use<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcdn.npmmirror.com%2F" target="_blank">https://cdn.npmmirror.com</a></td></tr><tr><td style="border-style:solid; border-width:1px"><strong>python/npmmirror</strong></td><td style="border-style:solid; border-width:1px">0.0.3</td><td style="border-style:solid; border-width:1px">aooohan</td><td style="border-style:solid; border-width:1px">vfox &gt;= 0.2.3 !!! From npmmirror.org. For Windows, only support &gt;=3.5.0, but no restrictions for unix-like</td></tr><tr><td style="border-style:solid; border-width:1px"><strong>python/python</strong></td><td style="border-style:solid; border-width:1px">0.0.3</td><td style="border-style:solid; border-width:1px">aooohan</td><td style="border-style:solid; border-width:1px">vfox &gt;= 0.2.3 !! For Windows, only support &gt;=3.5.0, but no restrictions for unix-like</td></tr><tr><td style="border-style:solid; border-width:1px"><strong>zig/zig</strong></td><td style="border-style:solid; border-width:1px">0.0.4</td><td style="border-style:solid; border-width:1px">aooohan</td><td style="border-style:solid; border-width:1px">Zig</td></tr></tbody></table><h3>快速开始</h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">亮点:</p><ul><li>跨平台 (<strong>Windows</strong>、Linux、macOS), 不同的平台拥有相同的用户体验</li><li>使用一致的命令管理所有语言</li><li>简单的插件系统添加对您所需 SDK 的支持</li><li><strong>支持 Global、Project、Session 三种作用域</strong></li><li><strong>切换项目时，自动切换到对应版本</strong></li></ul><blockquote><p style="margin-left:0; margin-right:0">详细的安装指南请参见<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fvfox.lhan.me%2Fzh-hans%2Fguides%2Fquick-start.html" target="_blank">快速入门</a></p></blockquote><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>1. 选择一个适合你的<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fvfox.lhan.me%2Fzh-hans%2Fguides%2Fquick-start.html%23_1-%25E5%25AE%2589%25E8%25A3%2585vfox" target="_blank">安装方式</a>。</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">2. ⚠️<span>&nbsp;</span><strong>挂载 vfox 到你的 Shell (从下面选择一条适合你 shell 的命令)</strong><span>&nbsp;</span>⚠️</p><pre><code class="language-bash"><span>echo</span><span style="color:#032f62">'eval "$(vfox activate bash)"'</span> &gt;&gt; ~/.bashrc
<span>echo</span><span style="color:#032f62">'eval "$(vfox activate zsh)"'</span> &gt;&gt; ~/.zshrc
<span>echo</span><span style="color:#032f62">'vfox activate fish | source'</span> &gt;&gt; ~/.config/fish/config.fish

<span style="color:#6a737d"># PowerShell:</span><span style="color:#6a737d"># 1. 打开 PowerShell 配置文件:</span>
New-Item -Type File -Path <span style="color:#032f62">$PROFILE</span><span style="color:#6a737d"># 无需在意 `文件已存在` 错误</span>
Invoke-Item <span style="color:#032f62">$PROFILE</span><span style="color:#6a737d"># 2. 将下面一行添加到你的 $PROFILE 文件末尾并保存:</span>
Invoke-Expression <span style="color:#032f62">"<span style="color:#032f62">$(vfox activate pwsh)</span>"</span></code></pre><blockquote><p style="margin-left:0; margin-right:0">请记住重启你的 Shell 以应用更改。</p></blockquote><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong><span style="color:var(--color-prettylights-syntax-string)"><span style="color:var(--color-prettylights-syntax-string)">3. 添加插件</span></span></strong></p><pre><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">$</span></span></span></span><span><span><span><span> vfox add nodejs/nodejs</span></span></span></span></pre><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>4. 安装版本</strong></p><pre><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5">vfox</span></span></span></span> install nodejs<span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62">@latest</span></span></span></span></pre><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>5. 切换版本</strong></p><pre>$ vfox use nodejs@21.<span><span><span><span>5.0</span></span></span></span>
$ node -v
<span><span><span><span>21.5</span></span></span></span>.<span><span><span><span>0</span></span></span></span></pre><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">目前已支持多种开发语言，欢迎使用～～</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>作用域演示</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>Project 作用域</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://oscimg.oschina.net/oscnet/up-8ad93fe3a88c42de7147e291becfc559fd5.gif" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>Session 作用域</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong><img alt="" src="https://oscimg.oschina.net/oscnet/up-17abed8c089841acdc2b158ab5101506d1a.gif" referrerpolicy="no-referrer"></strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>Node 完整演示</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fasciinema.org%2Fa%2F630778" target="_blank"><img src="https://asciinema.org/a/630778.svg" referrerpolicy="no-referrer"></a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>项目地址:<span><span>&nbsp;</span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fversion-fox%2Fvfox" target="_blank">https://github.com/version-fox/vfox</a></strong></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 18 Mar 2024 06:47:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/283577/vfox-0-2-5-released</guid>
            <link>https://www.oschina.net/news/283577/vfox-0-2-5-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Taro 3.6.25 发布，BAT 小程序、H5 与 RN 端统一框架]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#333333">Taro 3.6.25 现已发布。Taro 是一个开放式跨端跨框架解决方案，支持使用 React/Vue/Nerv 等框架来开发微信 / 京东 / 百度 / 支付宝 / 字节跳动 / QQ 小程序 / H5 等应用。</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="color:#333333">此版本具体更新内容如下：</span></p><h1 style="margin-left:0px; margin-right:0px; text-align:start">特性</h1><h2 style="text-align:start">小程序</h2><ul><li>支持使用 WXS / JDS 脚本语言</li><li>编译模式支持了 JSXElementChild 嵌套使用 &amp;&amp; 表达式</li></ul><h2 style="text-align:start">H5</h2><ul><li>新增了 hideNavigationBarLoading 和 showNavigationBarLoading 等 API</li><li>补充完善了 navigateTo 相关的参数，与小程序端一致</li><li>补充完善了 location 相关的 API，并修改了 NavigationBarLoading 相关的样式</li></ul><h1 style="margin-left:0; margin-right:0; text-align:start">修复</h1><h2 style="text-align:start">小程序</h2><ul><li>修复了 Text 和 Label 组件上 onLongPress 事件无效的问题，fix<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNervJS%2Ftaro%2Fissues%2F15256" target="_blank">#15256</a></li><li>修复了设置环境变量 TARO_APP_ID 无效的问题，fix<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNervJS%2Ftaro%2Fissues%2F14979" target="_blank">#14979</a><span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNervJS%2Ftaro%2Fissues%2F15009" target="_blank">#15009</a></li><li>修复了编译小程序插件时静态资源路径错误的问题</li><li>修复了页面 onClick 事件无法触发的问题，通过修改 nativeComponent 挂载点</li><li>修复了虚拟列表和瀑布流组件在层级太深的情况下，导致一般的选择器字符无法查询到对应元素的问题</li><li>修复了百度小程序在安装 HTML 插件时不渲染的问题，fix<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNervJS%2Ftaro%2Fissues%2F15326" target="_blank">#15326</a><span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNervJS%2Ftaro%2Fissues%2F14945" target="_blank">#14945</a></li><li>优化了 include 和 exclude 的逻辑，fix<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNervJS%2Ftaro%2Fissues%2F15115" target="_blank">#15115</a></li></ul><h2 style="text-align:start">H5</h2><ul><li>修复了在路由存在 basename 的情况下 navigate 报错的问题，fix<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNervJS%2Ftaro%2Fissues%2F15296" target="_blank">#15296</a></li><li>修复了 app.config 缓存路径错误的问题，fix<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNervJS%2Ftaro%2Fissues%2F15314" target="_blank">#15314</a></li><li>修复了设置 devServer 的 historyApiFallbac k 配置不生效的问题，fix<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNervJS%2Ftaro%2Fissues%2F15281" target="_blank">#15281</a></li><li>修复了 MovableView 组件事件中使用 preventDefault 引起的页面无法滚动的问题，fix<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNervJS%2Ftaro%2Fpull%2F1722" target="_blank">#1722</a></li><li>修复了 TabBar 高度未正确设置的问题</li></ul><h2 style="text-align:start">鸿蒙 Hybrid</h2><ul><li>优化了 Request 接口参数的支持情况</li><li>优化了通信通道 JSBridge，将旧通道代码替换为新通道</li><li>修复了在 harmony-hybrid 平台上 NodesRef 的 canIUse 方法返回错误结果的问题</li></ul><p>更新说明：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNervJS%2Ftaro%2Freleases%2Ftag%2Fv3.6.25" target="_blank">https://github.com/NervJS/taro/releases/tag/v3.6.25</a></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 18 Mar 2024 05:59:11 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/283566/taro-3-6-25-released</guid>
            <link>https://www.oschina.net/news/283566/taro-3-6-25-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[IoTOS v1.6.3 设备套餐、协议认证、套餐充值优化]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#616161; margin-left:0; margin-right:0"><span style="color:#0e88eb">未曾松懈一直活跃：</span></p><p style="color:#616161; margin-left:0; margin-right:0"><span style="color:#40485b">&nbsp; &nbsp; &nbsp; &nbsp;自 24 年客户增长适应市场需求增加，‘扯淡’的时间会少一点；</span><span style="color:#40485b">落实的任务会快一点，感兴趣朋友直接腾讯会议详聊，高效沟通让时间更有价值！</span></p><p><img height="537" src="https://oscimg.oschina.net/oscnet/up-2081b00a1d39be8f6ee821ff57c8831f025.png" width="1080" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0; text-align:center">&nbsp;</p><p style="margin-left:0; margin-right:0; text-align:center">（git 仓库，每日提交代码 ‘打卡’情况）</p><p style="color:#616161; margin-left:0; margin-right:0">&nbsp;</p><p style="color:#616161; margin-left:0; margin-right:0">&nbsp;</p><p style="margin-left:0; margin-right:0"><strong>一、近期更新介绍</strong></p><p style="color:#616161; margin-left:0; margin-right:0"><span style="color:#0e88eb">适应设备单套餐的新模式：</span></p><ol><li><p style="margin-left:0; margin-right:0">跟随延长：基础包叠加周期跟随延长&nbsp;<span style="background-color:#ff4c00; color:#ffffff"><strong>详情私聊</strong></span></p></li><li><p style="margin-left:0; margin-right:0">跟随同期：基础包叠加周期同期失效，否延长；</p><p style="margin-left:0; margin-right:0">更适合市场需求单售套餐，省心省力不费事。</p></li></ol><p style="margin-left:0; margin-right:0; text-align:center">&nbsp;</p><p style="color:#616161; margin-left:0; margin-right:0"><span style="color:#0e88eb">套餐编辑优化：</span></p><p>&nbsp;</p><ol><li><p style="margin-left:0; margin-right:0"><span>售价反推：输入售价成本反推赚取差价及类型；</span></p></li><li><p style="margin-left:0; margin-right:0"><span style="color:#ff0000"><span style="color:#000000">汇率优化：适配全新汇率同步 API；</span></span></p></li><li><p style="margin-left:0; margin-right:0"><span style="color:#ff0000"><span style="color:#000000">查看筛选条件增加，套餐分组；</span></span></p><p style="margin-left:0; margin-right:0">&nbsp;</p></li></ol><p><img height="516" src="https://oscimg.oschina.net/oscnet/up-02f3985b8f88b65c7da128d9b8bccb03744.png" width="1080" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0; text-align:center">（套餐，新增页面）</p><p style="color:#616161; margin-left:0; margin-right:0"><span style="color:#0e88eb">套餐分组优化：</span></p><ol><li><p style="margin-left:0; margin-right:0">单售叠加包：叠加包是否可单独购买；</p></li><li><p style="margin-left:0; margin-right:0">日期弹框：用户订购日期弹框是否提示；</p></li><li><p style="margin-left:0; margin-right:0">选中次月：大于日期选中默认选中次月生效；</p></li></ol><p><img height="516" src="https://oscimg.oschina.net/oscnet/up-022e86e800432d9536f82d82f7adf1f9b9a.png" width="1080" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0; text-align:center"><span>（套</span><span>餐分组，新增）</span></p><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="color:#616161; margin-left:0; margin-right:0"><span style="color:#0e88eb">客户认证：</span></p><ol><li><p style="margin-left:0; margin-right:0">修改密码：新账号登录修改密码提示；</p></li><li><p style="margin-left:0; margin-right:0">客户认证：认证多类型、协议多模板；</p></li><li><p style="margin-left:0; margin-right:0">后台审核：灵活查看文件、一键压缩包下载；</p></li></ol><p><img height="516" src="https://oscimg.oschina.net/oscnet/up-629c04577bfb730076ac9207b371e3d94b7.png" width="1080" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0; text-align:center">(修改客户，认证类型、协议)</p><p><img height="537" src="https://oscimg.oschina.net/oscnet/up-935e57e86891dc75768ae0871ea3f57901f.png" width="1080" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0; text-align:center">（登录修改密码提示，引导）</p><p><img height="537" src="https://oscimg.oschina.net/oscnet/up-172ba56b6e8b96001239bf82a41836a1768.png" width="1080" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0; text-align:center">（协议、认证填写）</p><p><img height="537" src="https://oscimg.oschina.net/oscnet/up-ba473cd248494ab2f248dd419fad546cce5.png" width="1080" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0; text-align:center">（资料填写，确认提交认证）</p><p><img height="537" src="https://oscimg.oschina.net/oscnet/up-e66f6e23ed600583406edf46737f5eea02e.png" width="1080" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0; text-align:center">（审核申请中）</p><p><img height="537" src="https://oscimg.oschina.net/oscnet/up-ef36833caa3de613c6ee27a9c874d97b210.png" width="1080" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0; text-align:center">（审核认证，通过）</p><p style="margin-left:0; margin-right:0; text-align:center">&nbsp;</p><p><img height="516" src="https://oscimg.oschina.net/oscnet/up-29b27482112f2d0850baa65666684ea83a1.png" width="1080" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0; text-align:center">（后台管理，审核认证）</p><p style="color:#616161; margin-left:0; margin-right:0"><span style="color:#0e88eb">用户端更新：</span></p><ol><li><p style="margin-left:0; margin-right:0">流量规格：大套餐展现 GB、小套餐显示 MB；</p></li><li><p style="margin-left:0; margin-right:0">充值优化：页面优化、充值日期提示；</p></li><li><p style="margin-left:0; margin-right:0">支付优化：支付<span style="color:#000000">类型、</span>生效类型；</p></li><li><p style="margin-left:0; margin-right:0">免密码登录：可设定注册用户免密码登录；</p></li><li><p style="margin-left:0; margin-right:0">手机号查卡：手机号免密模式可跳转卡号管理；</p></li></ol><p><img height="832" src="https://oscimg.oschina.net/oscnet/up-ef943ff89af445b41de1311c4797f644d47.png" width="404" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0; text-align:center">（套餐充值）</p><p><img height="826" src="https://oscimg.oschina.net/oscnet/up-3e1dd9d579d081216e240d36ee4aa329487.png" width="407" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0; text-align:center">（生效时间，提示）</p><p><img height="861" src="https://oscimg.oschina.net/oscnet/up-e98c243fbd06c9f9d2cfb1a0c21c91ceea1.png" width="401" referrerpolicy="no-referrer"></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:center">（支付确认，优化后）</p><p style="color:#616161; margin-left:0; margin-right:0"><span style="color:#0e88eb">我们的优势：</span></p><ol><li><p style="margin-left:0; margin-right:0"><span style="color:#000000">企业 ERP 生产组装、客户、销售、物流；</span></p></li><li><p style="margin-left:0; margin-right:0"><span style="color:#000000">上海科技艺术教育智能驾驶赛事系统；</span></p></li><li><p style="margin-left:0; margin-right:0"><span style="color:#000000">上海市电教育馆赛事计分系统；</span></p></li><li><p style="margin-left:0; margin-right:0"><span style="color:#000000">物联卡 ToC 类型系统；</span></p></li><li><p style="margin-left:0; margin-right:0"><span style="color:#000000">物联卡 ToB 类型系统；</span></p></li><li><p style="margin-left:0; margin-right:0"><span style="color:#000000">国际话费、短信、语音、等，充值系统；</span></p></li></ol><ol><li><p style="margin-left:0; margin-right:0"><span style="color:#000000">物联网经验丰富：多物联卡平台，研发主力；</span></p></li><li><p style="margin-left:0; margin-right:0"><span style="color:#000000">盈利模式挖掘者：多盈利、营销、风口踩点；</span></p></li><li><p style="margin-left:0; margin-right:0"><span style="color:#000000">数据安全：企业级加密、守衞数据资产；</span></p></li><li><p style="margin-left:0; margin-right:0"><span style="color:#000000">开发经历丰满：</span></p></li></ol><ol></ol><ol><li><p style="margin-left:0; margin-right:0"><span style="color:#000000">企业 ERP 生产组装、客户、销售、物流；</span></p></li><li><p style="margin-left:0; margin-right:0"><span style="color:#000000">上海科技艺术教育智能驾驶赛事系统；</span></p></li><li><p style="margin-left:0; margin-right:0"><span style="color:#000000">上海市电教育馆赛事计分系统；</span></p></li><li><p style="margin-left:0; margin-right:0"><span style="color:#000000">物联卡 ToC 类型系统；</span></p></li><li><p style="margin-left:0; margin-right:0"><span style="color:#000000">物联卡 ToB 类型系统；</span></p></li><li><p style="margin-left:0; margin-right:0"><span style="color:#000000">国际话费、短信、语音、等，充值系统；</span></p></li></ol></div>
                                    ]]>
            </description>
            <pubDate>Mon, 18 Mar 2024 04:43:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/283554</guid>
            <link>https://www.oschina.net/news/283554</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Apache Doris 2.0.6 版本正式发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>亲爱的社区小伙伴们，</span><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoris.apache.org%2Fdownload%2F" target="_blank"><span>Apache Doris 2.0.6</span></a></span><span> 版本已于 2024 年 3 月 12 日正式与大家见面，该版本在物化视图、统计信息收集、JDBC Catalog 等方面进行了更新优化，并提交了 114 个改进项以及问题修复，欢迎大家下载体验。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span><strong><span>官网下载：</span></strong></span><span></span><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoris.apache.org%2Fdownload%2F" target="_blank"><span>https://doris.apache.org/download/</span></a></span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span><strong><span>GitHub 下载：</span></strong></span><span></span><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Freleases" target="_blank"><span>https://github.com/apache/doris/releases</span></a></span></p><h2><span>新功能</span></h2><ul><li><p style="margin-left:.5rem; margin-right:0"><span>自动选择物化视图时支持匹配带别名的函数</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>增加安全下线一个 tablet 副本的命令</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>外表统计信息增加行数统计缓存</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>统计信息收集支持 Rollup</span></p></li></ul><h2><span>改进和优化</span></h2><ul><li><p style="margin-left:.5rem; margin-right:0"><span>使用 protobuf 稳定序列化减少 Tablet Schema 缓存内存占用</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>提升 </span><span><code>show column stats</code></span><span> 的性能</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>统计信息收集和优化器支持 Iceberg 和 Paimon 的行数估计</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>JDBC Catalog 支持读取 SQL Server 的 Timestamp 类型</span></p></li></ul><h2><span>致谢</span></h2><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>最后，衷心感谢 51 位开发者为 Apache Doris 2.0.6 版本做出了重要贡献:</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>924060929, AshinGau, BePPPower, BiteTheDDDDt, CalvinKirs, cambyzju, deardeng, DongLiang-0, eldenmoon, englefly, feelshana, feiniaofeiafei, felixwluo, HappenLee, hust-hhb, iwanttobepowerful, ixzc, JackDrogon, Jibing-Li, KassieZ, larshelge, liaoxin01, LiBinfeng-01, liutang123, luennng, morningman, morrySnow, mrhhsg, qidaye, starocean999, TangSiyang2001, wangbo, wsjz, wuwenchi, xiaokang, XieJiann, xuwei0912, xy720, xzj7019, yiguolei, yujun777, Yukang-Lian, Yulei-Yang, zclllyybb, zddr, zhangstar333, zhannngchen, zhiqiang-hhhh, zy-kkk, zzzxl1993</span></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 18 Mar 2024 03:37:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/283542/apache-doris-2-0-6-released</guid>
            <link>https://www.oschina.net/news/283542/apache-doris-2-0-6-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[AI 和分析统一数据库 Cloudberry Database 1.5.0 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:var(--sub-text-color-2); text-align:start">近日，Cloudberry Database v1.5.0 正式发布，本次新版本新增了若干功能，同时包含了若干产品性能/稳定性优化，修复了若干 bug。</p><p style="color:var(--sub-text-color-2); text-align:start">快速下载试用：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcloudberrydb%2Fcloudberrydb%2Freleases" target="_blank">Cloudberry Database 1.5.0</a></p><h2>新功能<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcloudberrydb.org%2Fzh%2Fdocs%2Freleases%2Frelease-1.5.0%23%25E6%2596%25B0%25E5%258A%259F%25E8%2583%25BD" target="_blank">​</a></h2><table cellspacing="0" style="-webkit-text-stroke-width:0px; border-collapse:collapse; box-sizing:border-box; color:#000000; display:block; font-family:-apple-system,&quot;system-ui&quot;,&quot;Noto Sans&quot;,&quot;Open Sans&quot;,&quot;Source Sans&quot;,Helvetica,Arial,Inter,Ubuntu,Roboto,sans-serif; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; margin-bottom:var(--ifm-spacing-vertical); orphans:2; overflow:auto; text-align:start; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; word-spacing:0px"><tbody><tr><th style="background-color:var(--ifm-table-head-background)">分类</th><th style="background-color:var(--ifm-table-head-background)">功能</th></tr></tbody><tbody><tr><td style="border-style:solid">查询处理</td><td style="border-style:solid">支持并行创建 AO/AOCO 表和并行刷新物化视图</td></tr><tr><td style="border-style:solid">支持自动使用物化视图进行查询优化</td></tr><tr><td style="border-style:solid">支持部署单计算节点的集群</td></tr><tr><td style="border-style:solid">支持使用命令行「一键」部署集群</td></tr><tr><td style="border-style:solid">存储</td><td style="border-style:solid">支持增量物化视图</td></tr><tr><td style="border-style:solid">支持在 AO 表上使用唯一索引</td></tr><tr><td style="border-style:solid">安全</td><td style="border-style:solid">支持登录错误输入密码次数检查</td></tr></tbody></table><p style="color:var(--sub-text-color-2); text-align:start">&nbsp;</p><p style="color:var(--sub-text-color-2); text-align:start">各个新功能的详细说明如下：</p><h3>查询处理<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcloudberrydb.org%2Fzh%2Fdocs%2Freleases%2Frelease-1.5.0%23%25E6%259F%25A5%25E8%25AF%25A2%25E5%25A4%2584%25E7%2590%2586" target="_blank">​</a></h3><ul><li><p style="color:var(--sub-text-color-2)"><strong>支持并行创建 AO/AOCO 表和并行刷新物化视图。</strong></p><p style="color:var(--sub-text-color-2)">支持使用<span>&nbsp;</span><code>CREATE TABLE AS</code><span>&nbsp;</span>语句并行创建 Append-Optimized (AO) 表和 Append-Optimized Column Oriented (AOCO) 表，同时支持并行刷新基于该表的物化视图，从而加速建表和物化视图刷新。</p></li><li><p style="color:var(--sub-text-color-2)"><strong>支持自动使用物化视图进行查询优化</strong>，即在查询规划阶段自动使用物化视图来计算部分或全部查询 (AQUMV)。这一功能使用场景：</p><ul><li>大数据量的聚合查询：对于需要从数百万条记录中进行聚合的查询，AQUMV 能显著减少查询时间。</li><li>频繁更新的大表：在数据频繁更新的环境中，使用 IMV 可以确保查询结果的实时性和准确性。</li></ul></li></ul><h3>集群管理<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcloudberrydb.org%2Fzh%2Fdocs%2Freleases%2Frelease-1.5.0%23%25E9%259B%2586%25E7%25BE%25A4%25E7%25AE%25A1%25E7%2590%2586" target="_blank">​</a></h3><ul><li><p style="color:var(--sub-text-color-2)"><strong>支持以单计算节点部署集群。</strong></p><p style="color:var(--sub-text-color-2)">在 v1.5.0 以前，用户部署一套 Cloudberry Database 集群时，至少需要部署一个 Coordinator 节点和一个 Segment 节点，还需要指定繁多的配置信息和启动参数，这一过程相对复杂耗时。</p><p style="color:var(--sub-text-color-2)">从 v1.5.0 开始，用户可以像部署 PostgreSQL 一样部署单计算节点的 Cloudberry Database 集群，集群仅包含一个 Coordinator 节点，无需指定繁多的配置参数，也无需预分配多个节点的计算资源。</p><p style="color:var(--sub-text-color-2)">用户只需使用脚本工具<span>&nbsp;</span><code>gpdemo</code><span>&nbsp;</span>即可快速部署一套单节点的 Cloudberry Database 集群。</p></li><li><p style="color:var(--sub-text-color-2)"><strong>支持使用命令行工具「一键」部署集群。</strong></p><p style="color:var(--sub-text-color-2)">在 v1.5.0 以前，如果用户想在单节点上部署带有 Segment 的小型集群用于演示，需要花费时间编写配置文件和参数。自 v1.5.0 起，用户只需要通过内置的<span>&nbsp;</span><code>gpdemo</code><span>&nbsp;</span>脚本，使用一条命令就能快速部署指定 Segment 数的 Cloudberry Database 集群。即：</p><div><div><pre><code><span style="color:#393a34"><span>gpdemo</span></span></code></pre></div></div></li></ul><h3>存储<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcloudberrydb.org%2Fzh%2Fdocs%2Freleases%2Frelease-1.5.0%23%25E5%25AD%2598%25E5%2582%25A8" target="_blank">​</a></h3><ul><li><p style="color:var(--sub-text-color-2)"><strong>支持增量物化视图。</strong></p><p style="color:var(--sub-text-color-2)">增量物化视图是物化视图的一种特殊形式。当数据在基础表中发生变化时（例如插入、更新、删除操作），增量物化视图不需要重新计算整个视图中的所有数据。相反，它只更新那些自上次刷新以来发生变化的部分。这样可以节省大量的计算资源和时间，显著提高性能，尤其是在处理大型数据集时。</p><p style="color:var(--sub-text-color-2)">自 v1.5.0 起，如果查询时有中间结果集需要加速，或者在读多写少的场景下，用户可以使用增量物化视图来加速查询。</p></li><li><p style="color:var(--sub-text-color-2)"><strong>在 AO 表上使用唯一索引。</strong></p><p style="color:var(--sub-text-color-2)">自 v1.5.0 起，你可以在 Cloudberry Database 的 Append-Optimized (AO) 或 Append-Optimized Column Store (AOCS) 表上添加唯一索引。有了唯一索引，Cloudberry Database 会在将数据插入到 AO 表时，强制检查唯一性约束，从而保证数据的唯一性，同时能够与优化器一起优化特定的查询，从而提高数据库的查询性能。但这也带来的一定的开销用于维护唯一索引，尤其是在插入数据时。</p></li></ul><h3>安全<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcloudberrydb.org%2Fzh%2Fdocs%2Freleases%2Frelease-1.5.0%23%25E5%25AE%2589%25E5%2585%25A8" target="_blank">​</a></h3><ul><li><p style="color:var(--sub-text-color-2)"><strong>支持创建和绑定数据库的用户密码策略配置。</strong></p><p style="color:var(--sub-text-color-2)">Profile，即密码策略配置，用于控制数据库中用户的密码安全策略。Profile 定义了用户管理和重复使用密码的规则。通过配置 Profile，数据库管理员可以使用 SQL 语句强制添加一些约束，例如在一定次数的登录失败后锁定账户，或者控制密码重复使用次数。</p><p style="color:var(--sub-text-color-2)">自 v1.5.0 起，Cloudberry Database 支持通过 SQL 语句创建 Profile，并将 Profile 绑定到一个或多个用户中，从而控制数据库用户的密码安全策略。</p></li></ul><h2>变更说明<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcloudberrydb.org%2Fzh%2Fdocs%2Freleases%2Frelease-1.5.0%23%25E5%258F%2598%25E6%259B%25B4%25E8%25AF%25B4%25E6%2598%258E" target="_blank">​</a></h2><h3>SQL 语法变更说明<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcloudberrydb.org%2Fzh%2Fdocs%2Freleases%2Frelease-1.5.0%23sql-%25E8%25AF%25AD%25E6%25B3%2595%25E5%258F%2598%25E6%259B%25B4%25E8%25AF%25B4%25E6%2598%258E" target="_blank">​</a></h3><p style="color:var(--sub-text-color-2); text-align:start"><code>CREATE MATERIALIZED VIEW</code><span>&nbsp;</span>新支持<span>&nbsp;</span><code>INCREMENTAL</code><span>&nbsp;</span>选项。你可以使用 SQL 命令<span>&nbsp;</span><code>CREATE INCREMENTAL MATERIALIZED VIEW</code><span>&nbsp;</span>来创建增量物化视图。完整的语法支持如下：</p><div><pre><code>CREATE [INCREMENTAL] MATERIALIZED VIEW [ IF NOT EXISTS ] table_name
    [ (column_name [, ...] ) ]
    [ USING method ]
    [ WITH ( storage_parameter [= value] [, ... ] ) ]
    [ TABLESPACE tablespace_name ]
    AS query
    [ WITH [ NO ] DATA ]</code></pre></div><h3>功能变更说明<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcloudberrydb.org%2Fzh%2Fdocs%2Freleases%2Frelease-1.5.0%23%25E5%258A%259F%25E8%2583%25BD%25E5%258F%2598%25E6%259B%25B4%25E8%25AF%25B4%25E6%2598%258E" target="_blank">​</a></h3><p style="color:var(--sub-text-color-2); text-align:start">无</p><h3>参数变更说明<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcloudberrydb.org%2Fzh%2Fdocs%2Freleases%2Frelease-1.5.0%23%25E5%258F%2582%25E6%2595%25B0%25E5%258F%2598%25E6%259B%25B4%25E8%25AF%25B4%25E6%2598%258E" target="_blank">​</a></h3><p style="color:var(--sub-text-color-2); text-align:start">无</p><h2>Bug 修复<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcloudberrydb.org%2Fzh%2Fdocs%2Freleases%2Frelease-1.5.0%23bug-%25E4%25BF%25AE%25E5%25A4%258D" target="_blank">​</a></h2><ul><li><p style="color:var(--sub-text-color-2)">修复了 AOCO 表内存越界的问题。该 Bug 导致的报错如下所示：</p><div><pre>SET default_table_access_method=ao_column;
CREATE temp TABLE nocolumns();

SELECT EXISTS(SELECT * FROM nocolumns);

WARNING: &nbsp;detected write past chunk end in ExecutorState 0x8f79b78 &nbsp;(seg0 slice1 127.0.1.1:7002 pid=16215)
</pre></div></li><li><p style="color:var(--sub-text-color-2)">修复了使用<span>&nbsp;</span><code>EXPLAIN</code><span>&nbsp;</span>查看查询计划时，输出结果中的<span>&nbsp;</span><code>operatorMem</code><span>&nbsp;</span>对齐问题，修复前显示如下：</p><div><pre>SET gp_resqueue_print_operator_memory_limits=ON;
EXPLAIN(COSTS OFF) SELECT COUNT(*) FROM test_hj_spill;

&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; QUERY PLAN
----------------------------------------------------------------------------
Finalize AggregateoperatorMem: 100 kB

&nbsp; &nbsp; &nbsp; -&gt; &nbsp;Gather Motion 3:1 &nbsp;(slice1; segments: 3)operatorMem: 100 kB

&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; -&gt; &nbsp;Partial AggregateoperatorMem: 100 kB

&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; -&gt; &nbsp;Seq Scan on test_hj_spilloperatorMem: 100 kB
</pre></div></li><li><p style="color:var(--sub-text-color-2)">修复了在特定条件下导致快照功能内存异常的问题，这个问题可能会在某些情况下使事务处理过程中发生 core dump。</p></li><li><p style="color:var(--sub-text-color-2)">改进了并行扫描操作时，并行哈希连接中内部表格大小的估算精度。</p></li><li><p style="color:var(--sub-text-color-2)">并行扫描时新增对 Semi HashJoin 类型的支持。</p></li><li><p style="color:var(--sub-text-color-2)">改进了<span>&nbsp;</span><code>NOT IN</code><span>&nbsp;</span>语句的处理逻辑，现在它可以正确地处理包含<span>&nbsp;</span><code>NULL</code><span>&nbsp;</span>值的情况。例如，在执行像<span>&nbsp;</span><code>SELECT c1 FROM t1_lasj WHERE c1 NOT IN (SELECT c1n FROM t2_lasj_has_null WHERE c1n IS NULL OR c1n IS NULL);</code><span>&nbsp;</span>这样的查询时，将得到正确的结果。</p></li><li><p style="color:var(--sub-text-color-2)">修复了在 macOS 上编译运行遇到的问题。</p></li><li><p style="color:var(--sub-text-color-2)">修复了<span>&nbsp;</span><code>CREATE EXTENSION</code><span>&nbsp;</span>时，用户的<span>&nbsp;</span><code>search_path</code><span>&nbsp;</span>发生变更的问题。</p></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Mon, 18 Mar 2024 03:20:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/283535/cloudberrydb-1-5-0-released</guid>
            <link>https://www.oschina.net/news/283535/cloudberrydb-1-5-0-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[基于 mybatis 的 orm：mybatis-mp 1.4.4 发布 - 丰富强大]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>升级申明：放心升级，不用任何担心，完全没问题</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><br><strong>1.4.4 更新：</strong><span style="background-color:#ffffff; color:#000000">1.4.4 发布</span><br><span style="background-color:#ffffff; color:#000000">1. @TableField 增加修改默认值</span><br><span style="background-color:#ffffff; color:#000000">2. 动态数据源支持 springboot3 自动装配</span><br><span style="background-color:#ffffff; color:#000000">3. 数据库函数和条件方法增加 null 和空值等检测</span><br><span style="background-color:#ffffff; color:#000000">4. 优化其他代码</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>mybatis-mp 包含丰富的 api：</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">1：基于注解，映射数据库；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">2：支持多表 join 和返回；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">3：api 采用 lambda 和 stream 流式设计；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">4：select 自动化以及结果 1 对 1,1 对多，超级方便快捷；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">5：内置分页以及超强的 sql 优化功能；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">6：稳定且性能极优；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">7：轻量级封装 mybatis，几乎没有侵入；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">8：api 丰富，支持数据库函数、多表、乐观锁、多租户、逻辑删除、默认值（可动态值） 等众多功能；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">9：零学习成本，和写 sql 一样方便。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">10：支持复杂的返回关系映射：例如一对一 ，一对多，多对多；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">11：支持自定义 sql 模板，再也不用担心框架支持不足；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">12：内置代码生成器，通过配置，可定制自身规范；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">13：全新的框架，全新的设计理念，新的就是好！</p><p>&nbsp;</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>mybatis-mp 包含丰富的 api：</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">1：基于注解，映射数据库；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">2：支持多表 join 和返回；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">3：api 采用 lambda 和 stream 流式设计；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">4：select 自动化以及结果 1 对 1,1 对多，超级方便快捷；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">5：内置分页以及超强的 sql 优化功能；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">6：稳定且性能极优；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">7：轻量级封装 mybatis，几乎没有侵入；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">8：api 丰富，支持数据库函数、多表、乐观锁、多租户、逻辑删除、默认值（可动态值） 等众多功能；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">9：零学习成本，和写 sql 一样方便。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">10：支持复杂的返回关系映射：例如一对一 ，一对多，多对多；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">11：支持自定义 sql 模板，再也不用担心框架支持不足；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">12：内置代码生成器，通过配置，可定制自身规范；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">13：全新的框架，全新的设计理念，新的就是好！</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 18 Mar 2024 02:59:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/283530/mybatis-mp-1-4-4-released</guid>
            <link>https://www.oschina.net/news/283530/mybatis-mp-1-4-4-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Podman Desktop 1.8 发布，带来自己的 K8s GUI]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Podman Desktop 1.8 已经发布，此版本带来：</p><ul><li><strong>Podman 4.9.3</strong>：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman%2Freleases%2Ftag%2Fv4.9.3" target="_blank">Podman 4.9.3</a>现在包含在 Windows 和 Mac 安装程序中。</li><li><strong>Kubernetes Explorer</strong>：用于使用 Kubernetes 集群的高级 UI 和新工具。</li><li><strong>Global Onboarding</strong>：通过一组指导工作流程，轻松配置和设置您的环境。</li><li><strong>学习中心</strong>：为开发人员发现新的用例和功能。</li><li><strong>扩展 API 改进</strong>：扩展 API 的另一项重大更新，为 🦭 Podman Desktop 的扩展带来更多好处。</li><li><strong>增强的构建、Pod 列表和故障排除页面</strong>：针对不同平台进行构建、升级的 Pod 视图等。</li></ul><p><img height="944" src="https://static.oschina.net/uploads/space/2024/0318/103731_jmJO_3820517.png" width="1704" referrerpolicy="no-referrer"></p><h3>Podman&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpodman-desktop.io%2Fblog%2Fpodman-desktop-release-1.8%23podman-493" target="_blank">4.9.3</a></h3><p style="margin-left:0px; margin-right:0px; text-align:start">🦭 Podman 4.9.3 包括针对我们用户报告的稳定性和可靠性问题的关键修复 - 特别是如果您使用 Apple 芯片架构。如果您一直在苦苦挣扎，我们强烈建议您更新！</p><h3>Kubernetes<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpodman-desktop.io%2Fblog%2Fpodman-desktop-release-1.8%23kubernetes-explorer" target="_blank">资源管理器</a></h3><p style="margin-left:0px; margin-right:0px; text-align:start">在过去的版本中作为实验性功能逐步引入，我们已准备好扩展我们的功能以帮助开发人员从容器过渡到 Kubernetes。在此版本中，我们引入了一组新功能，使开发人员能够使用更多 Kubernetes 资源，从而对应用程序提供更精细和交互式的控制。</p><p style="margin-left:0px; margin-right:0px; text-align:start">现在，🦭 Podman Desktop 中提供了一个新的 Kubernetes Explorer，除了对 Pod 的现有支持之外，它还能够使用部署、服务、入口和路由。对于每个资源，Podman Desktop 提供有关集群上资源状态的实时信息。在此概述页面的右上角，您还可以单击应用 YAML 在集群上创建或更新资源（类似于「kubectl apply -f」），并查看当前连接状态。</p><p style="margin-left:0px; margin-right:0px; text-align:start"><img height="844" src="https://static.oschina.net/uploads/space/2024/0318/104554_X2mJ_3820517.png" width="1296" referrerpolicy="no-referrer"></p><p>就像本地容器或映像一样，您可以单击「摘要」、「检查」和 Kube (YAML) 页面上的更多详细信息。</p><p style="margin-left:0px; margin-right:0px; text-align:start"><img height="862" src="https://static.oschina.net/uploads/space/2024/0318/104606_xUKa_3820517.png" width="1306" referrerpolicy="no-referrer"></p><p>看到问题了吗？您可以直接从 Kube 选项卡编辑和应用更改。</p><p style="margin-left:0px; margin-right:0px; text-align:start"><img height="860" src="https://static.oschina.net/uploads/space/2024/0318/104617_Knka_3820517.png" width="1302" referrerpolicy="no-referrer"></p><p>🦭 Podman Desktop 继续弥合差距和差异，使使用容器的开发人员能够通过高效的工作流程从本地工作站瞄准 Kubernetes。这是除了一些已经可用的强大功能之外的所有功能：</p><ul><li>Podman 的原生 Kubernetes 支持</li><li>Podify - 将容器转换为 Pod</li><li>使用 Minikube 和 Kind 扩展设置本地 Kubernetes 环境</li><li>部署到 Kubernetes 并将本地映像从 Podman 推送到 Kubernetes 环境</li><li>管理 Kubernetes 上下文</li><li>连接到远程 Kubernetes 集群</li></ul><h3>扩展 API<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpodman-desktop.io%2Fblog%2Fpodman-desktop-release-1.8%23extension-api-improvements" target="_blank">改进</a></h3><p style="margin-left:0px; margin-right:0px; text-align:start">我们继续花费大量时间添加新的扩展 API，为即将推出的扩展提供更多功能，甚至更好地集成到 🦭 Podman Desktop：</p><ul><li>拆分 getMatchingPodmanEngine&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F6160" target="_blank">#6160</a></li><li>创建容器时添加 HealthCheck 参数<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5981" target="_blank">#5981</a></li><li>将 listPods 暴露给扩展<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5864" target="_blank">#5864</a></li><li>createPod 的标签<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5862" target="_blank">#5862</a></li><li>允许在 Pod 中创建容器<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5848" target="_blank">#5848</a></li><li>OpenPod 应重定向到 pod 的视图<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5846" target="_blank">#5846</a></li><li>增强 createContainer API 缺少参数的情况<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F6011" target="_blank">#6011</a></li><li>允许扩展使用 openDialog/saveDialog&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F6009" target="_blank">#6009</a></li><li>允许在贡献的操作中自定义图标<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5995" target="_blank">#5995</a></li><li>添加缺失的类型<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F6213" target="_blank">#6213</a></li><li>允许从扩展导航到特定的 Web 视图<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5899" target="_blank">#5899</a></li><li>将 stopPod 和 removePod 暴露给扩展<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5898" target="_blank">#5898</a></li><li>使用新的 API 打开/保存对话框<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F6051" target="_blank">#6051</a>、<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F6050" target="_blank">#6050</a>、<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F6049" target="_blank">#6049</a></li><li>扩展 Podman Desktop API 构建映像参数<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5882" target="_blank">#5882</a></li><li>允许扩展至统计容器<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fissues%2F6211" target="_blank">#6211</a></li></ul><hr><h2>其他值得注意的<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpodman-desktop.io%2Fblog%2Fpodman-desktop-release-1.8%23other-notable-enhancements" target="_blank">增强功能</a></h2><p style="margin-left:0px; margin-right:0px; text-align:start">我们在此版本中添加了 40 多项功能，以下是其他一些亮点：</p><ul><li>改进 Podman Desktop 更新警报<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F6068" target="_blank">#6068</a></li><li>在故障排除中添加收集和下载日志按钮<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5119" target="_blank">#5119</a></li><li>为 Linux 启用 podman 机器<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5902" target="_blank">#5902</a></li><li>多次删除动画<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5717" target="_blank">#5717</a></li><li>图像删除动画<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5709" target="_blank">#5709</a></li><li>卷删除动画<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5707" target="_blank">#5707</a></li><li>打开 OpenShift 路线<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5560" target="_blank">#5560</a></li><li>添加打开创建的 Pod 详细信息<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F4499" target="_blank">#4499</a></li><li>部署到 kubernetes 集群时使用 https&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5824" target="_blank">#5824</a></li><li>仪表板页面上的入门轮播<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5142" target="_blank">#5142</a></li><li>删除对象时添加确认对话框<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5445" target="_blank">#5445</a></li></ul><p style="margin-left:0px; margin-right:0px; text-align:start">我们在实施 light 模式方面也取得了一些重大进展：</p><ul><li>使用主题颜色反转内容<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F6029" target="_blank">#6029</a></li><li>使用辅助导航的主题颜色<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F6028" target="_blank">#6028</a></li><li>为全球导航应用主题颜色<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F6027" target="_blank">#6027</a></li><li>为标题栏应用主题颜色<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F6025" target="_blank">#6025</a></li><li>一致的关闭按钮<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F6060" target="_blank">#6060</a></li><li>在快速选择中使用组件<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F6057" target="_blank">#6057</a></li><li>为 webview 提供 css 颜色<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5963" target="_blank">#5963</a></li><li>将颜色发布到应用程序的样式<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5962" target="_blank">#5962</a></li><li>允许扩展提供带有一组颜色的主题<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5961" target="_blank">#5961</a></li><li>商店颜色<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5960" target="_blank">#5960</a></li><li>包括颜色注册表<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5958" target="_blank">#5958</a></li><li>添加实用方法来获取主题的值<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5947" target="_blank">#5947</a></li><li>当操作系统更改颜色时发送事件<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5946" target="_blank">#5946</a></li><li>清理深色：前缀颜色<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5944" target="_blank">#5944</a></li><li>将调色板提取到自己的文件中<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5931" target="_blank">#5931</a></li><li>输入组件<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5904" target="_blank">#5904</a></li><li>输入错误，在运行图像中使用输入组件<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5988" target="_blank">#5988</a></li><li>构建图像时使用输入<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5986" target="_blank">#5986</a></li><li>使用代理设置输入<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5943" target="_blank">#5943</a></li><li>使用注册表输入<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5939" target="_blank">#5939</a></li><li>从容器创建 pod 时使用输入<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5935" target="_blank">#5935</a></li><li>在扩展页面中使用输入组件<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5934" target="_blank">#5934</a></li><li>在创建卷中使用输入<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5933" target="_blank">#5933</a></li><li>重命名图像时使用输入<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5964" target="_blank">#5964</a></li><li>在部署到 kube 时使用复选框组件<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F6030" target="_blank">#6030</a></li></ul><hr><h2>值得注意的错误<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpodman-desktop.io%2Fblog%2Fpodman-desktop-release-1.8%23notable-bug-fixes" target="_blank">修复</a></h2><p style="margin-left:0px; margin-right:0px; text-align:start">我们在此版本中修复了许多错误，包括以下内容：</p><ul><li>将容器复制到 pod 时安装的复制卷<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5640" target="_blank">#5640</a></li><li>更改卷和容器列表中「创建」按钮的顺序<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F6092" target="_blank">#6092</a></li><li>上下文值更新时刷新入门项目 (#4597)&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F6173" target="_blank">#6173</a></li><li>更好地登录 informer 连接错误<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F6158" target="_blank">#6158</a></li><li>网站：替换损坏的链接<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F6111" target="_blank">#6111</a></li><li>中心空屏幕<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F6077" target="_blank">#6077</a></li><li>不要求确认打开本地文件夹/文件<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5743" target="_blank">#5743</a></li><li>强制面包屑垂直对齐<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5741" target="_blank">#5741</a></li><li>身份验证页面中的长用户名<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5737" target="_blank">#5737</a></li><li>用于更新任务名称的消息属性<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5731" target="_blank">#5731</a></li><li>导航项 UI 修复<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5886" target="_blank">#5886</a></li><li>显示回注册表的图标<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5843" target="_blank">#5843</a></li><li>检查路由 tls 以使用 http 或 https&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5825" target="_blank">#5825</a></li><li>白色工具提示<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5887" target="_blank">#5887</a></li><li>限制注册表用户名列宽度<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5718" target="_blank">#5718</a></li><li>删除 Linux 上的 docker 兼容性警告和按钮<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5903" target="_blank">#5903</a></li><li>容器的图像使用情况<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5663" target="_blank">#5663</a></li><li>删除当前上下文时应更改/更新<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5819" target="_blank">#5819</a></li><li>不要折叠侧边栏上的类别<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5727" target="_blank">#5727</a></li><li>使 localhost 成为 env.openExternal 调用的有效域<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5716" target="_blank">#5716</a></li></ul><hr><h2><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpodman-desktop.io%2Fblog%2Fpodman-desktop-release-1.8%23documentation" target="_blank">文档</a></h2><p style="margin-left:0px; margin-right:0px; text-align:start">随着新版本的 🦭 Podman Desktop 的发布，文档也进行了以下改进：</p><ul><li>containerEngine api 的容器和图像相关方法<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5891" target="_blank">#5891</a></li><li>删除了使用 openshift local 安装 podman&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F6070" target="_blank">#6070</a></li><li>文档图像检查器提供程序 API&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5813" target="_blank">#5813</a></li><li>添加 withProgress api 文档<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5736" target="_blank">#5736</a></li><li>添加了故障排除页面的链接<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5734" target="_blank">#5734</a></li><li>macOS M1/M2/M3 上的安装故障排除<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5708" target="_blank">#5708</a></li><li>卷删除<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5707" target="_blank">#5707</a></li><li>添加了<em>从另一个 WSL 实例访问 Podman</em>（配置、验证）<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5706" target="_blank">#5706</a></li><li>使用 typedoc 生成 api 文档<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5705" target="_blank">#5705</a></li></ul><p>下载：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpodman-desktop.io%2Fdownloads" target="_blank">https://podman-desktop.io/downloads</a></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 18 Mar 2024 02:44:52 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/283526/podman-desktop-1-8-released</guid>
            <link>https://www.oschina.net/news/283526/podman-desktop-1-8-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[🔥【 对标 openssh 客户端 】tssh 发布 v0.1.19]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>tssh 是一个 openssh 客户端的替代品， 基础功能兼容 openssh，另外提供了很多有用的扩展功能。</p><p>新版本 v0.1.19&nbsp;解决了一些大家遇到的问题，配置的注释做了一点小调整。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">GitHub：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ftrzsz%2Ftrzsz-ssh" target="_blank">https://github.com/trzsz/trzsz-ssh</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">Gitee：<a href="https://gitee.com/trzsz/tssh">https://gitee.com/trzsz/tssh</a></p><hr><h2>配置注释</h2><ul><li><p><code>tssh</code><span>&nbsp;</span>配置中的注释基本与<span>&nbsp;</span><code>openssh</code><span>&nbsp;</span>一致，额外做了一些扩展支持，详见下表：</p><table cellspacing="0" style="border-collapse:collapse; border-spacing:0px; box-sizing:border-box; display:block; overflow:auto; width:888px; word-break:keep-all"><tbody><tr><th>注释</th><th>openssh</th><th>tssh</th></tr></tbody><tbody><tr><td style="border-color:#e9ebec; border-style:solid; border-width:1px"><code>#</code><span>&nbsp;</span>开头的配置行</td><td style="border-color:#e9ebec; border-style:solid; border-width:1px">是注释</td><td style="border-color:#e9ebec; border-style:solid; border-width:1px">是注释</td></tr><tr><td style="border-color:#e9ebec; border-style:solid; border-width:1px"><code>#!!</code><span>&nbsp;</span>开头的配置行</td><td style="border-color:#e9ebec; border-style:solid; border-width:1px">是注释</td><td style="border-color:#e9ebec; border-style:solid; border-width:1px">非注释</td></tr><tr><td style="border-color:#e9ebec; border-style:solid; border-width:1px"><code>Key Value # Comment</code></td><td style="border-color:#e9ebec; border-style:solid; border-width:1px">看情况</td><td style="border-color:#e9ebec; border-style:solid; border-width:1px">是注释</td></tr><tr><td style="border-color:#e9ebec; border-style:solid; border-width:1px"><code>Key=Value # Comment</code></td><td style="border-color:#e9ebec; border-style:solid; border-width:1px">看情况</td><td style="border-color:#e9ebec; border-style:solid; border-width:1px">非注释</td></tr></tbody></table></li><li><p><code>#</code><span>&nbsp;</span>开头的配置行，<code>openssh</code><span>&nbsp;</span>一律认为是注释；<code>tssh</code><span>&nbsp;</span>认为<span>&nbsp;</span><code>#!!</code><span>&nbsp;</span>开头的配置行不是注释，其他以<span>&nbsp;</span><code>#</code><span>&nbsp;</span>开头的配置行是注释。</p></li><li><p><code>Key Value # Comment</code><span>&nbsp;</span>配置（没有<span>&nbsp;</span><code>=</code><span>&nbsp;</span>号），<code>openssh</code><span>&nbsp;</span>有些情况认为<span>&nbsp;</span><code>#</code><span>&nbsp;</span>后的内容是注释，有些情况认为不是注释；<code>tssh</code><span>&nbsp;</span>一律认为<span>&nbsp;</span><code>#</code><span>&nbsp;</span>后的内容是注释。</p></li><li><p><code>Key=Value # Comment</code><span>&nbsp;</span>配置（有<span>&nbsp;</span><code>=</code><span>&nbsp;</span>号），<code>openssh</code><span>&nbsp;</span>有些情况认为<span>&nbsp;</span><code>#</code><span>&nbsp;</span>后的内容是注释，有些情况认为不是注释；<code>tssh</code><span>&nbsp;</span>一律认为<span>&nbsp;</span><code>#</code><span>&nbsp;</span>后的内容不是注释。</p></li></ul><hr><div><div><div><div><div><h2>为什么做</h2><ul><li><p style="margin-left:0; margin-right:0">服务器太多，记不住所有别名，<code>tssh</code><span>&nbsp;</span>内置登录界面，支持搜索和选择服务器登录。</p></li><li><p style="margin-left:0; margin-right:0"><code>tssh</code><span>&nbsp;</span>登录服务器后，内置支持<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Ftrzsz.github.io%2Fcn%2F">trzsz</a><span>&nbsp;</span>(trz /tsz) 工具，传文件无需另外新开窗口。</p></li><li><p style="margin-left:0; margin-right:0">有时需要同时登录一批机器，<code>tssh</code><span>&nbsp;</span>支持多选并批量登录，同时支持执行预设的命令。</p></li><li><p style="margin-left:0; margin-right:0">有些服务器不支持公钥登录，<code>tssh</code><span>&nbsp;</span>支持记住密码，支持自动交互，提升登录的效率。</p></li><li><p style="margin-left:0; margin-right:0">在 Windows 中使用<span>&nbsp;</span><code>tssh</code><span>&nbsp;</span>代替<span>&nbsp;</span><code>trzsz ssh</code>，可以解决<span>&nbsp;</span><code>trz</code><span>&nbsp;</span>上传速度很慢的问题。</p></li></ul><h2>安装方法</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><strong><em>客户端安装<span>&nbsp;</span><code>trzsz-ssh ( tssh )</code><span>&nbsp;</span>的方法如下（ 任选其一 ）：</em></strong></p><ul><li><p style="margin-left:0; margin-right:0">Windows 可用<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Fscoop.sh%2F">scoop</a><span>&nbsp;</span>/<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Flearn.microsoft.com%2Fzh-cn%2Fwindows%2Fpackage-manager%2Fwinget%2F">winget</a><span>&nbsp;</span>/<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Fcommunity.chocolatey.org%2F">choco</a><span>&nbsp;</span>安装</p><code>scoop install tssh</code><span>&nbsp;</span>/<span>&nbsp;</span><code>winget install tssh</code><span>&nbsp;</span>/<span>&nbsp;</span><code>choco install tssh</code><div><div><pre><span><span style="color:#6f42c1">scoop</span><span style="color:#0086b3"><span style="color:#032f62">install </span></span><span style="color:#032f62">tssh</span></span></pre></div></div><div><div><pre><span><span style="color:#6f42c1">winget</span><span style="color:#0086b3"><span style="color:#032f62">install </span></span><span style="color:#032f62">tssh</span></span></pre></div></div><div><div><pre><span><span style="color:#6f42c1">choco</span><span style="color:#0086b3"><span style="color:#032f62">install </span></span><span style="color:#032f62">tssh</span></span></pre></div></div></li><li><p style="margin-left:0; margin-right:0">MacOS 可用<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Fbrew.sh%2F">homebrew</a><span>&nbsp;</span>安装</p><code>brew install trzsz-ssh</code><div><div><pre><span><span style="color:#6f42c1">brew</span><span style="color:#032f62">update</span></span><span><span style="color:#6f42c1">brew</span><span style="color:#0086b3"><span style="color:#032f62">install </span></span><span style="color:#032f62">trzsz-ssh</span></span></pre></div></div></li><li><p style="margin-left:0; margin-right:0">Ubuntu 可用 apt 安装</p><code>sudo apt install tssh</code><div><div><pre><span><span style="color:#0086b3">sudo </span>apt <span style="color:#d73a49">update</span><span>&amp;&amp;</span><span style="color:#0086b3">sudo </span>apt <span style="color:#0086b3"><span style="color:#d73a49">install</span></span>software-properties-common</span><span><span style="color:#0086b3">sudo </span><span style="color:#d73a49">add</span>-apt-repository ppa:trzsz/ppa <span>&amp;&amp;</span><span style="color:#0086b3">sudo </span>apt <span style="color:#d73a49">update</span></span><span><span style="color:#0086b3">sudo </span>apt <span style="color:#0086b3"><span style="color:#d73a49">install</span></span>tssh</span></pre></div></div></li><li><p style="margin-left:0; margin-right:0">Debian 可用 apt 安装</p><code>sudo apt install tssh</code><div><div><pre><span><span style="color:#0086b3"><span style="color:#6f42c1">sudo</span></span><span style="color:#032f62">apt </span><span style="color:#0086b3"><span style="color:#032f62">install </span></span><span style="color:#032f62">curl gpg</span></span><span><span style="color:#6f42c1">curl</span><span style="color:#000080"><span style="color:#032f62">-s</span></span><span style="color:#032f62"></span><span style="color:#dd1144"><span style="color:#032f62">'https://keyserver.ubuntu.com/pks/lookup?op=get&amp;search=0x7074ce75da7cc691c1ae1a7c7e51d1ad956055ca'</span></span><span style="color:#032f62"></span><span style="color:#dd1144"><span style="color:#032f62">\</span></span></span><span style="color:#032f62"></span><span><span style="color:#032f62">  | gpg </span><span style="color:#000080"><span style="color:#032f62">--dearmor</span></span><span style="color:#032f62"></span><span style="color:#000080"><span style="color:#032f62">-o</span></span><span style="color:#032f62"> /usr/share/keyrings/trzsz.gpg</span></span><span><span style="color:#0086b3"><span style="color:#6f42c1">echo</span></span><span style="color:#dd1144"><span style="color:#032f62">'deb [signed-by=/usr/share/keyrings/trzsz.gpg] https://ppa.launchpadcontent.net/trzsz/ppa/ubuntu jammy main'</span></span><span style="color:#032f62"></span><span style="color:#dd1144"><span style="color:#032f62">\</span></span></span><span style="color:#032f62"></span><span><span style="color:#032f62">  | </span><span style="color:#0086b3"><span style="color:#032f62">sudo tee</span></span><span style="color:#032f62"> /etc/apt/sources.list.d/trzsz.list</span></span><span><span style="color:#0086b3"><span style="color:#6f42c1">sudo</span></span><span style="color:#032f62">apt update</span></span><span><span style="color:#0086b3"><span style="color:#6f42c1">sudo</span></span><span style="color:#032f62">apt </span><span style="color:#0086b3"><span style="color:#032f62">install </span></span><span style="color:#032f62">tssh</span></span></pre></div></div></li><li><p style="margin-left:0; margin-right:0">Linux 可用 yum 安装</p><code>sudo yum install tssh</code><ul><li><p style="margin-left:0; margin-right:0">国内推荐使用<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.wlnmp.com%2Finstall">wlnmp</a><span>&nbsp;</span>源，安装 tssh 只需要添加 wlnmp 源（ 配置 epel 源不是必须的 ）：</p><div><div><pre><span><span style="color:#6f42c1">curl</span><span style="color:#000080"><span style="color:#032f62">-fsSL</span></span><span style="color:#032f62"></span><span style="color:#dd1144"><span style="color:#032f62">"https://sh.wlnmp.com/wlnmp.sh"</span></span><span style="color:#032f62"> | bash</span></span><span><span style="color:#0086b3"><span style="color:#6f42c1">sudo</span></span><span style="color:#032f62">yum </span><span style="color:#0086b3"><span style="color:#032f62">install </span></span><span style="color:#032f62">tssh</span></span></pre></div></div></li><li><p style="margin-left:0; margin-right:0">也可使用<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Fgemfury.com%2F">gemfury</a><span>&nbsp;</span>源（ 只要网络通，所有操作系统通用 ）</p><div><div><pre><span><span style="color:#0086b3">echo</span><span style="color:#dd1144">'[trzsz]</span></span><span><span style="color:#dd1144">name=Trzsz Repo</span></span><span><span style="color:#dd1144">baseurl=https://yum.fury.io/trzsz/</span></span><span><span style="color:#dd1144">enabled=1</span></span><span><span style="color:#dd1144">gpgcheck=0'</span> | <span style="color:#0086b3">sudo tee</span> /etc/yum.repos.d/trzsz.repo</span><span><span style="color:#0086b3">sudo </span>yum <span style="color:#0086b3">install </span>tssh</span></pre></div></div></li></ul></li><li><p style="margin-left:0; margin-right:0">ArchLinux 可用<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FJguer%2Fyay">yay</a><span>&nbsp;</span>安装</p><code>yay -S tssh</code><div><div><pre><span><span style="color:#6f42c1">yay</span><span style="color:#000080"><span style="color:#032f62">-Syu</span></span></span><span><span style="color:#6f42c1">yay</span><span style="color:#000080"><span style="color:#032f62">-S</span></span><span style="color:#032f62"> tssh</span></span></pre></div></div></li><li><p style="margin-left:0; margin-right:0">用 Go 直接安装（ 要求 go 1.20 以上 ）</p><code>go install github.com/trzsz/trzsz-ssh/cmd/tssh@latest</code><div><div><pre><span><span style="color:#005cc5">go</span><span style="color:#0086b3">install </span>github.com/trzsz/trzsz-ssh/cmd/tssh<span style="color:#032f62">@latest</span></span></pre></div></div><p style="margin-left:0; margin-right:0">安装后，<code>tssh</code><span>&nbsp;</span>程序一般位于<span>&nbsp;</span><code>~/go/bin/</code><span>&nbsp;</span>目录下（ Windows 一般在<span>&nbsp;</span><code>C:\Users\your_name\go\bin\</code><span>&nbsp;</span>）。</p></li><li><p style="margin-left:0; margin-right:0">用 Go 自己编译（ 要求 go 1.20 以上 ）</p><code>sudo make install</code><div><div><pre><span><span style="color:#6f42c1">git</span><span style="color:#032f62">clone </span><span style="color:#000080"><span style="color:#032f62">--depth</span></span><span style="color:#032f62"> 1 https://github.com/trzsz/trzsz-ssh.git</span></span><span><span style="color:#0086b3"><span style="color:#6f42c1">cd</span></span><span style="color:#032f62">trzsz-ssh</span></span><span><span style="color:#6f42c1">make</span></span><span><span style="color:#0086b3"><span style="color:#6f42c1">sudo</span></span><span style="color:#032f62">make </span><span style="color:#0086b3"><span style="color:#032f62">install</span></span></span></pre></div></div></li><li><p style="margin-left:0; margin-right:0">可从<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Ftrzsz%2Ftrzsz-ssh%2Freleases">GitHub Releases</a><span>&nbsp;</span>中下载，国内可从<span>&nbsp;</span><a href="https://gitee.com/trzsz/tssh/releases">Gitee 发行版</a><span>&nbsp;</span>中下载，解压并加到<span>&nbsp;</span><code>PATH</code><span>&nbsp;</span>环境变量中。</p></li></ul><h2>登录界面</h2><ul><li><p style="margin-left:0; margin-right:0">使用之前，需要配置好<span>&nbsp;</span><code>~/.ssh/config</code><span>&nbsp;</span>( Windows 是<span>&nbsp;</span><code>C:\Users\xxx\.ssh\config</code>,<span>&nbsp;</span><code>xxx</code><span>&nbsp;</span>换成用户名 )。</p></li><li><p style="margin-left:0; margin-right:0">关于如何配置<span>&nbsp;</span><code>~/.ssh/config</code>，请参考<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Fmanpages.debian.org%2Fbookworm%2Fopenssh-client%2Fssh_config.5.en.html">openssh</a><span>&nbsp;</span>( 暂不支持<span>&nbsp;</span><code>Match</code><span>&nbsp;</span>)，或参考 tssh wiki<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Ftrzsz%2Ftrzsz-ssh%2Fwiki%2FSSH%25E5%259F%25BA%25E6%259C%25AC%25E9%2585%258D%25E7%25BD%25AE">SSH 基本配置</a>。</p></li><li><p style="margin-left:0; margin-right:0">直接无参数运行<span>&nbsp;</span><code>tssh</code><span>&nbsp;</span>命令就会打开登录界面，或者有除目标机器外的其他参数也会打开登录界面。</p></li><li><p style="margin-left:0; margin-right:0">如果目标机器参数是<span>&nbsp;</span><code>~/.ssh/config</code><span>&nbsp;</span>中别名的一部分，不能完全匹配某个别名，也会打开登录界面。</p></li><li><p style="margin-left:0; margin-right:0">别名含有<span>&nbsp;</span><code>*</code><span>&nbsp;</span>或<span>&nbsp;</span><code>?</code><span>&nbsp;</span>通配符时，则不会显示在登录界面中，要隐藏的别名可以加个<span>&nbsp;</span><code>*</code><span>&nbsp;</span>前缀或后缀。</p></li><li><p style="margin-left:0; margin-right:0"><code>tssh</code><span>&nbsp;</span>支持很多快捷键，支持搜索，在<span>&nbsp;</span><code>tmux</code>、<code>iTerm2</code><span>&nbsp;</span>和<span>&nbsp;</span><code>Windows Terminal</code><span>&nbsp;</span>等中使用时支持多选。</p><table cellspacing="0" style="border-collapse:collapse; border-spacing:0px; border:none; box-sizing:border-box; color:#444444; display:block; font-size:14px; line-height:inherit; margin:0px 0px 16px; max-width:100%; overflow:auto; width:803px; word-break:initial"><tbody><tr><th>操作</th><th>全局快捷键</th><th>非搜索快捷键</th><th>快捷键描述</th></tr></tbody><tbody><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Confirm</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Enter</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">&nbsp;</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">确认并登录</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Quit/Exit</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Ctrl+C Ctrl+Q</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">q Q</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">取消并退出</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Move Prev</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Ctrl+K Shift+Tab ↑</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">k K</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">往上移光标</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Move Next</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Ctrl+J Tab ↓</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">j J</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">往下移光标</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Page Up</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Ctrl+H Ctrl+U Ctrl+B PageUp ←</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">h H u U b B</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">往上翻一页</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Page Down</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Ctrl+L Ctrl+D Ctrl+F PageDown →</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">l L d D f F</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">往下翻一页</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Goto Home</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Home</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">g</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">跳到第一行</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Goto End</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">End</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">G</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">跳到最尾行</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">EraseKeys</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Ctrl+E</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">e E</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">擦除搜索关键字</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">TglSearch</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">/</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">&nbsp;</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">切换搜索功能</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Tgl Help</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">?</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">&nbsp;</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">切换帮助信息</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">TglSelect</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Ctrl+X Ctrl+Space Alt+Space</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Space x X</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">切换选中状态</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">SelectAll</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Ctrl+A</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">a A</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">全选当前页</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">SelectOpp</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Ctrl+O</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">o O</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">反选当前页</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Open Wins</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Ctrl+W</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">w W</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">新窗口批量登录</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Open Tabs</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Ctrl+T</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">t T</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">新 Tab 批量登录</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Open Pane</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Ctrl+P</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">p P</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">分屏批量登录</td></tr></tbody></table></li></ul><h2>主题风格</h2><ul><li><p style="margin-left:0; margin-right:0"><code>tssh</code><span>&nbsp;</span>支持多种主题风格，在<span>&nbsp;</span><code>~/.tssh.conf</code><span>&nbsp;</span>中配置<span>&nbsp;</span><code>PromptThemeLayout</code><span>&nbsp;</span>选用。欢迎一起来创造更多更好看的。</p></li><li><p style="margin-left:0; margin-right:0">每种主题风格都支持自定义颜色，在<span>&nbsp;</span><code>~/.tssh.conf</code><span>&nbsp;</span>中配置<span>&nbsp;</span><code>PromptThemeColors</code>，只要配置非默认的颜色即可。</p></li><li><p style="margin-left:0; margin-right:0">请为你喜欢的主题风格<a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Ftrzsz%2Ftrzsz-ssh%2Fissues%2F75">❤️投票❤️</a>，得票数最高的主题风格将会在下个版本被设置为默认主题。</p></li></ul><h3>tiny 小巧风</h3><ul><li><p style="margin-left:0; margin-right:0">在<span>&nbsp;</span><code>~/.tssh.conf</code><span>&nbsp;</span>中配置<span>&nbsp;</span><code>PromptThemeLayout = tiny</code><span>&nbsp;</span>选用<span>&nbsp;</span><code>tiny 小巧风</code>。<span>&nbsp;</span></p><img height="412" src="https://oscimg.oschina.net/oscnet/up-42c50ae2f804c96af3aefe1412cbddfb178.gif" width="691" referrerpolicy="no-referrer"></li><li><p style="margin-left:0; margin-right:0">在<span>&nbsp;</span><code>~/.tssh.conf</code><span>&nbsp;</span>中配置<span>&nbsp;</span><code>PromptThemeColors</code>，要求配置成一行。<code>tiny 小巧风</code><span>&nbsp;</span>支持以下配置项：</p><code>tiny 颜色配置项和默认值：</code><div><div><pre><span><span>{</span></span><span><span style="color:#bbbbbb"></span><span><span style="color:#6f42c1">"help_tips"</span></span><span>:</span><span style="color:#bbbbbb"></span><span style="color:#dd1144"><span style="color:#032f62">"faint"</span></span><span>,</span></span><span><span style="color:#bbbbbb"></span><span><span style="color:#6f42c1">"shortcuts"</span></span><span>:</span><span style="color:#bbbbbb"></span><span style="color:#dd1144"><span style="color:#032f62">"faint"</span></span><span>,</span></span><span><span style="color:#bbbbbb"></span><span><span style="color:#6f42c1">"label_icon"</span></span><span>:</span><span style="color:#bbbbbb"></span><span style="color:#dd1144"><span style="color:#032f62">"blue"</span></span><span>,</span></span><span><span style="color:#bbbbbb"></span><span><span style="color:#6f42c1">"label_text"</span></span><span>:</span><span style="color:#bbbbbb"></span><span style="color:#dd1144"><span style="color:#032f62">"default"</span></span><span>,</span></span><span><span style="color:#bbbbbb"></span><span><span style="color:#6f42c1">"cursor_icon"</span></span><span>:</span><span style="color:#bbbbbb"></span><span style="color:#dd1144"><span style="color:#032f62">"green|bold"</span></span><span>,</span></span><span><span style="color:#bbbbbb"></span><span><span style="color:#6f42c1">"active_selected"</span></span><span>:</span><span style="color:#bbbbbb"></span><span style="color:#dd1144"><span style="color:#032f62">"green|bold"</span></span><span>,</span></span><span><span style="color:#bbbbbb"></span><span><span style="color:#6f42c1">"active_alias"</span></span><span>:</span><span style="color:#bbbbbb"></span><span style="color:#dd1144"><span style="color:#032f62">"cyan|bold"</span></span><span>,</span></span><span><span style="color:#bbbbbb"></span><span><span style="color:#6f42c1">"active_host"</span></span><span>:</span><span style="color:#bbbbbb"></span><span style="color:#dd1144"><span style="color:#032f62">"magenta|bold"</span></span><span>,</span></span><span><span style="color:#bbbbbb"></span><span><span style="color:#6f42c1">"active_group"</span></span><span>:</span><span style="color:#bbbbbb"></span><span style="color:#dd1144"><span style="color:#032f62">"blue|bold"</span></span><span>,</span></span><span><span style="color:#bbbbbb"></span><span><span style="color:#6f42c1">"inactive_selected"</span></span><span>:</span><span style="color:#bbbbbb"></span><span style="color:#dd1144"><span style="color:#032f62">"green|bold"</span></span><span>,</span></span><span><span style="color:#bbbbbb"></span><span><span style="color:#6f42c1">"inactive_alias"</span></span><span>:</span><span style="color:#bbbbbb"></span><span style="color:#dd1144"><span style="color:#032f62">"cyan"</span></span><span>,</span></span><span><span style="color:#bbbbbb"></span><span><span style="color:#6f42c1">"inactive_host"</span></span><span>:</span><span style="color:#bbbbbb"></span><span style="color:#dd1144"><span style="color:#032f62">"magenta"</span></span><span>,</span></span><span><span style="color:#bbbbbb"></span><span><span style="color:#6f42c1">"inactive_group"</span></span><span>:</span><span style="color:#bbbbbb"></span><span style="color:#dd1144"><span style="color:#032f62">"blue"</span></span><span>,</span></span><span><span style="color:#bbbbbb"></span><span><span style="color:#6f42c1">"details_title"</span></span><span>:</span><span style="color:#bbbbbb"></span><span style="color:#dd1144"><span style="color:#032f62">"default"</span></span><span>,</span></span><span><span style="color:#bbbbbb"></span><span><span style="color:#6f42c1">"details_name"</span></span><span>:</span><span style="color:#bbbbbb"></span><span style="color:#dd1144"><span style="color:#032f62">"faint"</span></span><span>,</span></span><span><span style="color:#bbbbbb"></span><span><span style="color:#6f42c1">"details_value"</span></span><span>:</span><span style="color:#bbbbbb"></span><span style="color:#dd1144"><span style="color:#032f62">"default"</span></span></span><span><span>}</span></span></pre></div></div><code>tiny 支持的颜色枚举，可用 `|` 连接多个：</code><div><div><pre><span>default</span><span>black</span><span>red</span><span>green</span><span>yellow</span><span>blue</span><span>magenta</span><span>cyan</span><span>white</span><span>bgBlack</span><span>bgRed</span><span>bgGreen</span><span>bgYellow</span><span>bgBlue</span><span>bgMagenta</span><span>bgCyan</span><span>bgWhite</span><span>bold</span><span>faint</span><span>italic</span><span>underline</span></pre></div></div></li></ul><h3>simple 简约风</h3><ul><li><p style="margin-left:0; margin-right:0">在<span>&nbsp;</span><code>~/.tssh.conf</code><span>&nbsp;</span>中配置<span>&nbsp;</span><code>PromptThemeLayout = simple</code><span>&nbsp;</span>选用<span>&nbsp;</span><code>simple 简约风</code>。<span>&nbsp;</span></p><img height="627" src="https://oscimg.oschina.net/oscnet/up-b3eeeb9b4a1ca831d0501803e32f5d9b274.gif" width="691" referrerpolicy="no-referrer"></li><li><p style="margin-left:0; margin-right:0"><code>simple 简约风</code><span>&nbsp;</span>支持的颜色配置项、默认值和颜色枚举，和<span>&nbsp;</span><code>tiny 小巧风</code><span>&nbsp;</span>完全相同，请参考前文。</p></li></ul><h3>table 表格风</h3><ul><li><p style="margin-left:0; margin-right:0">在<span>&nbsp;</span><code>~/.tssh.conf</code><span>&nbsp;</span>中配置<span>&nbsp;</span><code>PromptThemeLayout = table</code><span>&nbsp;</span>选用<span>&nbsp;</span><code>table 表格风</code>。<span>&nbsp;</span></p><img height="706" src="https://oscimg.oschina.net/oscnet/up-f0af20cd0644e9b826df9444366b25cb87d.gif" width="691" referrerpolicy="no-referrer"></li><li><p style="margin-left:0; margin-right:0">在<span>&nbsp;</span><code>~/.tssh.conf</code><span>&nbsp;</span>中配置<span>&nbsp;</span><code>PromptThemeColors</code>，要求配置成一行。<code>table 表格风</code><span>&nbsp;</span>支持以下配置项：</p><code>table 颜色配置项和默认值：</code><div><div><pre><span><span>{</span></span><span><span style="color:#bbbbbb"></span><span><span style="color:#6f42c1">"help_tips"</span></span><span>:</span><span style="color:#bbbbbb"></span><span style="color:#dd1144"><span style="color:#032f62">"faint"</span></span><span>,</span></span><span><span style="color:#bbbbbb"></span><span><span style="color:#6f42c1">"shortcuts"</span></span><span>:</span><span style="color:#bbbbbb"></span><span style="color:#dd1144"><span style="color:#032f62">"faint"</span></span><span>,</span></span><span><span style="color:#bbbbbb"></span><span><span style="color:#6f42c1">"table_header"</span></span><span>:</span><span style="color:#bbbbbb"></span><span style="color:#dd1144"><span style="color:#032f62">"10"</span></span><span>,</span></span><span><span style="color:#bbbbbb"></span><span><span style="color:#6f42c1">"default_alias"</span></span><span>:</span><span style="color:#bbbbbb"></span><span style="color:#dd1144"><span style="color:#032f62">"6"</span></span><span>,</span></span><span><span style="color:#bbbbbb"></span><span><span style="color:#6f42c1">"default_host"</span></span><span>:</span><span style="color:#bbbbbb"></span><span style="color:#dd1144"><span style="color:#032f62">"5"</span></span><span>,</span></span><span><span style="color:#bbbbbb"></span><span><span style="color:#6f42c1">"default_group"</span></span><span>:</span><span style="color:#bbbbbb"></span><span style="color:#dd1144"><span style="color:#032f62">"4"</span></span><span>,</span></span><span><span style="color:#bbbbbb"></span><span><span style="color:#6f42c1">"selected_icon"</span></span><span>:</span><span style="color:#bbbbbb"></span><span style="color:#dd1144"><span style="color:#032f62">"2"</span></span><span>,</span></span><span><span style="color:#bbbbbb"></span><span><span style="color:#6f42c1">"selected_alias"</span></span><span>:</span><span style="color:#bbbbbb"></span><span style="color:#dd1144"><span style="color:#032f62">"14"</span></span><span>,</span></span><span><span style="color:#bbbbbb"></span><span><span style="color:#6f42c1">"selected_host"</span></span><span>:</span><span style="color:#bbbbbb"></span><span style="color:#dd1144"><span style="color:#032f62">"13"</span></span><span>,</span></span><span><span style="color:#bbbbbb"></span><span><span style="color:#6f42c1">"selected_group"</span></span><span>:</span><span style="color:#bbbbbb"></span><span style="color:#dd1144"><span style="color:#032f62">"12"</span></span><span>,</span></span><span><span style="color:#bbbbbb"></span><span><span style="color:#6f42c1">"default_border"</span></span><span>:</span><span style="color:#bbbbbb"></span><span style="color:#dd1144"><span style="color:#032f62">"8"</span></span><span>,</span></span><span><span style="color:#bbbbbb"></span><span><span style="color:#6f42c1">"selected_border"</span></span><span>:</span><span style="color:#bbbbbb"></span><span style="color:#dd1144"><span style="color:#032f62">"10"</span></span><span>,</span></span><span><span style="color:#bbbbbb"></span><span><span style="color:#6f42c1">"details_name"</span></span><span>:</span><span style="color:#bbbbbb"></span><span style="color:#dd1144"><span style="color:#032f62">"4"</span></span><span>,</span></span><span><span style="color:#bbbbbb"></span><span><span style="color:#6f42c1">"details_value"</span></span><span>:</span><span style="color:#bbbbbb"></span><span style="color:#dd1144"><span style="color:#032f62">"3"</span></span><span>,</span></span><span><span style="color:#bbbbbb"></span><span><span style="color:#6f42c1">"details_border"</span></span><span>:</span><span style="color:#bbbbbb"></span><span style="color:#dd1144"><span style="color:#032f62">"8"</span></span></span><span><span>}</span></span></pre><div>
          &nbsp;
         </div></div></div></li><li><p style="margin-left:0; margin-right:0">支持的颜色枚举请参考<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fcharmbracelet%2Flipgloss%23colors">lipgloss</a>，除了<span>&nbsp;</span><code>help_tips</code><span>&nbsp;</span>和<span>&nbsp;</span><code>shortcuts</code><span>&nbsp;</span>与前文<span>&nbsp;</span><code>tiny 小巧风</code><span>&nbsp;</span>相同。</p></li></ul><h2>支持 trzsz</h2><ul><li><p style="margin-left:0; margin-right:0">在服务器上要安装<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Ftrzsz.github.io%2Fcn%2F">trzsz</a>，才能使用<span>&nbsp;</span><code>trz / tsz</code><span>&nbsp;</span>上传和下载，可任选其一安装：<a href="https://gitee.com/link?target=https%3A%2F%2Ftrzsz.github.io%2Fcn%2Fgo">Go 版</a>（ ⭐ 推荐 ）、<a href="https://gitee.com/link?target=https%3A%2F%2Ftrzsz.github.io%2Fcn%2F">Py 版</a>、<a href="https://gitee.com/link?target=https%3A%2F%2Ftrzsz.github.io%2Fcn%2Fjs">Js 版</a>。</p></li><li><p style="margin-left:0; margin-right:0">在<span>&nbsp;</span><code>~/.ssh/config</code><span>&nbsp;</span>或<span>&nbsp;</span><code>ExConfigPath</code><span>&nbsp;</span>配置文件中，配置<span>&nbsp;</span><code>EnableDragFile</code><span>&nbsp;</span>为<span>&nbsp;</span><code>Yes</code><span>&nbsp;</span>启用拖拽上传功能。</p><div><div><pre><span><span style="color:#6f42c1">Host</span><span style="color:#032f62">*</span></span><span><span style="color:#6a737d">  # 如果配置在 ~/.ssh/config 中，可以加上 `#!!` 前缀，以兼容标准 ssh</span></span><span><span style="color:#6f42c1">EnableDragFile</span><span style="color:#032f62">Yes</span></span></pre><div>
          &nbsp;
         </div></div></div></li><li><p style="margin-left:0; margin-right:0">如果只是想临时启用拖拽上传功能，可以在命令行中使用<span>&nbsp;</span><code>tssh --dragfile</code><span>&nbsp;</span>登录服务器。</p></li><li><p style="margin-left:0; margin-right:0">在<span>&nbsp;</span><code>~/.ssh/config</code><span>&nbsp;</span>或<span>&nbsp;</span><code>ExConfigPath</code><span>&nbsp;</span>配置文件中，配置<span>&nbsp;</span><code>EnableTrzsz</code><span>&nbsp;</span>为<span>&nbsp;</span><code>No</code><span>&nbsp;</span>禁用 trzsz 和 zmodem。</p><div><div><pre><span><span style="color:#6f42c1">Host</span><span style="color:#032f62">no_trzsz_nor_zmodem</span></span><span><span style="color:#6a737d">  # 如果配置在 ~/.ssh/config 中，可以加上 `#!!` 前缀，以兼容标准 ssh</span></span><span><span style="color:#6f42c1">EnableTrzsz</span><span style="color:#032f62">No</span></span></pre><div>
          &nbsp;
         </div></div></div></li></ul><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img height="500" src="https://oscimg.oschina.net/oscnet/up-ec1249bd72d4dd67361bf48c4950365fc75.gif" width="800" referrerpolicy="no-referrer"></p><h2>支持 zmodem</h2><ul><li><p style="margin-left:0; margin-right:0">在<span>&nbsp;</span><code>~/.ssh/config</code><span>&nbsp;</span>或<span>&nbsp;</span><code>ExConfigPath</code><span>&nbsp;</span>配置文件中，配置<span>&nbsp;</span><code>EnableZmodem</code><span>&nbsp;</span>为<span>&nbsp;</span><code>Yes</code><span>&nbsp;</span>启用<span>&nbsp;</span><code>rz / sz</code><span>&nbsp;</span>功能。</p><div><div><pre><span><span style="color:#6f42c1">Host</span><span style="color:#032f62">*</span></span><span><span style="color:#6a737d">  # 如果配置在 ~/.ssh/config 中，可以加上 `#!!` 前缀，以兼容标准 ssh</span></span><span><span style="color:#6f42c1">EnableZmodem</span><span style="color:#032f62">Yes</span></span></pre><div>
          &nbsp;
         </div></div></div></li><li><p style="margin-left:0; margin-right:0">除了服务器，本地电脑也要安装<span>&nbsp;</span><code>lrzsz</code>，Windows 可以从<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Ftrzsz%2Flrzsz-win32%2Freleases">lrzsz-win32</a><span>&nbsp;</span>下载，解压并加到<span>&nbsp;</span><code>PATH</code><span>&nbsp;</span>环境变量中，也可以如下安装：</p><div><div><pre><span><span style="color:#6f42c1">scoop</span><span style="color:#032f62">install lrzsz</span></span></pre></div></div><div><div><pre><span><span style="color:#6f42c1">choco</span><span style="color:#032f62">install lrzsz</span></span></pre></div></div></li><li><p style="margin-left:0; margin-right:0">如果只是想临时启用<span>&nbsp;</span><code>rz / sz</code><span>&nbsp;</span>传文件功能，可以在命令行中使用<span>&nbsp;</span><code>tssh --zmodem</code><span>&nbsp;</span>登录服务器。</p></li><li><p style="margin-left:0; margin-right:0">关于<span>&nbsp;</span><code>rz / sz</code><span>&nbsp;</span>进度条，己传大小和传输速度会有一点偏差，它的主要作用只是指示传输正在进行中。</p></li></ul><h2>批量登录</h2><ul><li><p style="margin-left:0; margin-right:0">支持在<span>&nbsp;</span><code>iTerm2</code>（ 要开启<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Fiterm2.com%2Fpython-api-auth.html">Python API</a>，但不需要<span>&nbsp;</span><code>Allow all apps to connect</code><span>&nbsp;</span>），<code>tmux</code><span>&nbsp;</span>和<span>&nbsp;</span><code>Windows Terminal</code><span>&nbsp;</span>中一次选择多台服务器，批量登录，并支持批量执行预先指定的命令。</p></li><li><p style="margin-left:0; margin-right:0">按下<span>&nbsp;</span><code>Space</code>、<code>Ctrl+X</code><span>&nbsp;</span>等可以选中或取消当前服务器，若不能选中说明还不支持当前终端，请先运行<span>&nbsp;</span><code>tmux</code>。</p></li><li><p style="margin-left:0; margin-right:0">按下<span>&nbsp;</span><code>a</code><span>&nbsp;</span>或<span>&nbsp;</span><code>Ctrl+A</code><span>&nbsp;</span>全选当前页所有机器，<code>o</code><span>&nbsp;</span>或<span>&nbsp;</span><code>Ctrl+O</code><span>&nbsp;</span>反选当前页所有机器，<code>d</code><span>&nbsp;</span>或<span>&nbsp;</span><code>l</code><span>&nbsp;</span>翻到下一页。</p></li><li><p style="margin-left:0; margin-right:0">按下<span>&nbsp;</span><code>p</code><span>&nbsp;</span>或<span>&nbsp;</span><code>Ctrl+P</code><span>&nbsp;</span>以分屏的方式登录，<code>w</code><span>&nbsp;</span>或<span>&nbsp;</span><code>Ctrl+W</code><span>&nbsp;</span>以新窗口登录，<code>t</code><span>&nbsp;</span>或<span>&nbsp;</span><code>Ctrl+T</code><span>&nbsp;</span>以新 tab 登录。</p></li><li><p style="margin-left:0; margin-right:0"><code>tssh</code><span>&nbsp;</span>不带参数启动可以批量登录服务器，若带<span>&nbsp;</span><code>-o RemoteCommand</code><span>&nbsp;</span>参数启动则可以批量执行指定的命令。支持执行指定命令之后进入交互式 shell，但<span>&nbsp;</span><code>Windows Terminal</code><span>&nbsp;</span>不支持分号<span>&nbsp;</span><code>;</code>，可以用<span>&nbsp;</span><code>|cat&amp;&amp;</code><span>&nbsp;</span>代替。举例：</p><div><div><pre><span><span style="color:#005cc5">tssh</span><span style="color:#000080">-t</span><span style="color:#000080">-o</span><span style="color:#008080">RemoteCommand</span><span>=</span><span style="color:#dd1144"><span style="color:#032f62">'ping -c3 trzsz.github.io ; bash -l'</span></span></span><span>tssh <span style="color:#000080">-t</span><span style="color:#000080">-o</span><span style="color:#008080">RemoteCommand</span><span>=</span><span style="color:#dd1144"><span style="color:#032f62">"ping -c3 trzsz.github.io |cat&amp;&amp; bash -l"</span></span></span></pre><div>
          &nbsp;
         </div></div></div></li></ul><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img height="510" src="https://oscimg.oschina.net/oscnet/up-c93d2890ae5d18fb6d5814ba6fe294bf7d9.gif" width="691" referrerpolicy="no-referrer"></p><h2>分组标签</h2><ul><li><p style="margin-left:0; margin-right:0">如果服务器数量很多，分组标签<span>&nbsp;</span><code>GroupLabels</code><span>&nbsp;</span>可以在按<span>&nbsp;</span><code>/</code><span>&nbsp;</span>搜索时，快速找到目标服务器。</p></li><li><p style="margin-left:0; margin-right:0">按<span>&nbsp;</span><code>/</code><span>&nbsp;</span>输入分组标签后，<code>回车</code>可以锁定；再按<span>&nbsp;</span><code>/</code><span>&nbsp;</span>可以输入另一个分组标签，<code>回车</code>再次锁定。</p></li><li><p style="margin-left:0; margin-right:0">在非搜索模式下，按<span>&nbsp;</span><code>E</code><span>&nbsp;</span>可以清空当前搜索标签；在搜索模式下按<span>&nbsp;</span><code>Ctrl + E</code><span>&nbsp;</span>也是同样效果。</p></li><li><p style="margin-left:0; margin-right:0">支持在一个<span>&nbsp;</span><code>GroupLabels</code><span>&nbsp;</span>中以空格分隔，配置多个分组标签；支持配置多个<span>&nbsp;</span><code>GroupLabels</code>。</p></li><li><p style="margin-left:0; margin-right:0">支持以通配符 * 的形式，在多个 Host 节点配置分组标签，<code>tssh</code><span>&nbsp;</span>会将所有的标签汇总起来。</p><div><div><pre><span><span style="color:#6a737d"># 以下 testAA 具有标签 group1 group2 label3 label4 group5，可以加上 `#!!` 前缀，以兼容标准 ssh</span></span><span><span style="color:#6f42c1">Host</span><span style="color:#032f62">test*</span></span><span><span style="color:#6a737d">    #!! GroupLabels group1 group2</span></span><span><span style="color:#6a737d">    #!! GroupLabels label3</span></span><span><span style="color:#6f42c1">Host</span><span style="color:#032f62">testAA</span></span><span><span style="color:#6a737d">    #!! GroupLabels label4 group5</span></span></pre><div>
          &nbsp;
         </div></div></div></li></ul><h2>自动交互</h2><ul><li><p style="margin-left:0; margin-right:0">支持类似<span>&nbsp;</span><code>expect</code><span>&nbsp;</span>的自动交互功能，在登录服务器之后，自动匹配服务器的输出，然后自动输入。</p><div><div><pre><span><span style="color:#6f42c1">Host</span><span style="color:#032f62">auto</span></span><span><span style="color:#6a737d">    #!! ExpectCount 2  # 配置自动交互的次数，默认是 0 即无自动交互</span></span><span><span style="color:#6a737d">    #!! ExpectTimeout 30  # 配置自动交互的超时时间（单位：秒），默认是 30 秒</span></span><span><span style="color:#6a737d">    #!! ExpectPattern1 *assword  # 配置第一个自动交互的匹配表达式</span></span><span><span style="color:#6a737d">    # 配置第一个自动输入（密文），这是由 tssh --enc-secret 编码得到的字符串，tssh 会自动发送 \r 回车</span></span><span><span style="color:#6a737d">    #!! ExpectSendPass1 d7983b4a8ac204bd073ed04741913befd4fbf813ad405d7404cb7d779536f8b87e71106d7780b2</span></span><span><span style="color:#6a737d">    #!! ExpectPattern2 hostname*$  # 配置第二个自动交互的匹配表达式</span></span><span><span style="color:#6a737d">    #!! ExpectSendText2 echo tssh expect\r  # 配置第二个自动输入（明文），需要指定 \r 才会发送回车</span></span><span><span style="color:#6a737d">    # 以上 ExpectSendPass? 和 ExpectSendText? 只要二选一即可，若都配置则 ExpectSendPass? 的优先级更高</span></span></pre><div>
          &nbsp;
         </div></div></div></li><li><p style="margin-left:0; margin-right:0">在每个<span>&nbsp;</span><code>ExpectPattern?</code><span>&nbsp;</span>匹配之前，如果遇到可选的匹配则自动输入，用法如下：</p><div><div><pre><span><span style="color:#6f42c1">Host</span><span style="color:#032f62">case</span></span><span><span style="color:#6a737d">    #!! ExpectCount 1  # 配置自动交互的次数，默认是 0 即无自动交互</span></span><span><span style="color:#6a737d">    #!! ExpectPattern1 hostname*$  # 配置第一个自动交互的匹配表达式</span></span><span><span style="color:#6a737d">    #!! ExpectSendText1 ssh xxx\r  # 配置第一个自动输入，也可以换成 ExpectSendPass1 然后配置密文</span></span><span><span style="color:#6a737d">    #!! ExpectCaseSendText1 yes/no y\r  # 在 ExpectPattern1 匹配之前，若遇到 yes/no 则发送 y 并回车</span></span><span><span style="color:#6a737d">    #!! ExpectCaseSendText1 y/n yes\r   # 在 ExpectPattern1 匹配之前，若遇到 y/n 则发送 yes 并回车</span></span><span><span style="color:#6a737d">    #!! ExpectCaseSendPass1 token d7... # 在 ExpectPattern1 匹配之前，若遇到 token 则解码 d7... 并发送</span></span></pre></div></div></li><li><p style="margin-left:0; margin-right:0">在匹配到指定输出时，执行指定的命令获取动态密码，然后自动输入，用法如下：</p><div><div><pre><span><span style="color:#6f42c1">Host</span><span style="color:#032f62">otp</span></span><span><span style="color:#6a737d">    #!! ExpectCount 2  # 配置自动交互的次数，默认是 0 即无自动交互</span></span><span><span style="color:#6a737d">    #!! ExpectPattern1 token:  # 配置第一个自动交互的匹配表达式</span></span><span><span style="color:#6a737d">    #!! ExpectSendOtp1 oathtool --totp -b xxxxx  # 配置获取动态密码的命令（明文）</span></span><span><span style="color:#6a737d">    #!! ExpectPattern2 token:  # 配置第二个自动交互的匹配表达式</span></span><span><span style="color:#6a737d">    # 下面是运行 tssh --enc-secret 输入命令 oathtool --totp -b xxxxx 得到的密文串</span></span><span><span style="color:#6a737d">    #!! ExpectSendEncOtp2 77b4ce85d087b39909e563efb165659b22b9ea700a537f1258bdf56ce6fdd6ea70bc7591ea5c01918537a65433133bc0bd5ed3e4</span></span></pre><div>
          &nbsp;
         </div></div></div></li><li><p style="margin-left:0; margin-right:0">可能有些服务器不支持连着发送数据，如输入<span>&nbsp;</span><code>1\r</code>，要求在<span>&nbsp;</span><code>1</code><span>&nbsp;</span>之后有一点延迟，然后再<span>&nbsp;</span><code>\r</code><span>&nbsp;</span>回车，则可以用<span>&nbsp;</span><code>\|</code><span>&nbsp;</span>间开。</p><div><div><pre><span><span style="color:#6f42c1">Host</span><span style="color:#032f62">sleep</span></span><span><span style="color:#6a737d">    #!! ExpectCount 2  # 配置自动交互的次数，默认是 0 即无自动交互</span></span><span><span style="color:#6a737d">    #!! ExpectSleepMS 100  # 当要间开输入时，sleep 的毫秒数，默认 100ms</span></span><span><span style="color:#6a737d">    #!! ExpectPattern1 x&gt;  # 配置第一个自动交互的匹配表达式</span></span><span><span style="color:#6a737d">    #!! ExpectSendText1 1\|\r  # 配置第一个自动输入，在发送 1 之后，先 sleep 100ms，再发送 \r 回车</span></span><span><span style="color:#6a737d">    #!! ExpectPattern2 y&gt;  # 配置第二个自动交互的匹配表达式</span></span><span><span style="color:#6a737d">    #!! ExpectSendText2 \|1\|\|\r  # 先 sleep 100ms，然后发送 1，再 sleep 200ms，最后发送 \r 回车</span></span></pre></div></div></li><li><p style="margin-left:0; margin-right:0">如果不知道<span>&nbsp;</span><code>ExpectPattern2</code><span>&nbsp;</span>如何配置，可以先将<span>&nbsp;</span><code>ExpectCount</code><span>&nbsp;</span>配置为<span>&nbsp;</span><code>2</code>，然后使用<span>&nbsp;</span><code>tssh --debug</code><span>&nbsp;</span>登录，就会看到<span>&nbsp;</span><code>expect</code><span>&nbsp;</span>捕获到的输出，可以直接复制输出的最后部分来配置<span>&nbsp;</span><code>ExpectPattern2</code>。把<span>&nbsp;</span><code>2</code><span>&nbsp;</span>换成其他任意的数字也适用。</p></li></ul><h2>记住密码</h2><ul><li><p style="margin-left:0; margin-right:0">推荐使用公钥认证登录，可参考 openssh 的文档，或者参考 tssh wiki<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Ftrzsz%2Ftrzsz-ssh%2Fwiki%2F%25E5%2585%25AC%25E9%2592%25A5%25E8%25AE%25A4%25E8%25AF%2581%25E7%2599%25BB%25E5%25BD%2595">公钥认证登录</a>。</p></li><li><p style="margin-left:0; margin-right:0">如果只能使用密码登录，建议至少设置一下配置文件的权限，如：</p><div><div><pre><span><span style="color:#0086b3">chmod </span><span>700</span> ~<span>/.ssh </span><span><span>&amp;&amp;</span></span><span></span><span style="color:#0086b3"><span>chmod </span></span><span>600 ~/</span>.ssh<span>/password ~/</span>.ssh/config</span></pre><div>
          &nbsp;
         </div></div></div></li><li><p style="margin-left:0; margin-right:0">下面配置<span>&nbsp;</span><code>test1</code><span>&nbsp;</span>和<span>&nbsp;</span><code>test2</code><span>&nbsp;</span>的密码是<span>&nbsp;</span><code>123456</code>，其他以<span>&nbsp;</span><code>test</code><span>&nbsp;</span>开头的密码是<span>&nbsp;</span><code>111111</code>：</p><div><div><pre><span><span style="color:#6a737d"># 如果配置在 ~/.ssh/config 中，可以加上 `#!!` 前缀，以兼容标准 ssh</span></span><span><span style="color:#6f42c1">Host</span><span style="color:#032f62">test1</span></span><span><span style="color:#6a737d">    # 下面是运行 tssh --enc-secret 输入密码 123456 得到的密文串，每次运行结果不同。</span></span><span><span style="color:#6a737d">    #!! encPassword 756b17766f45bdc44c37f811db9990b0880318d5f00f6531b15e068ef1fde2666550</span></span><span style="color:#6a737d"></span><span><span style="color:#6a737d"># 如果配置在 ~/.ssh/password 中，则不需要考虑是否兼容标准 ssh</span></span><span><span style="color:#6f42c1">Host</span><span style="color:#032f62">test2</span></span><span><span style="color:#6a737d">    # 下面是运行 tssh --enc-secret 输入密码 123456 得到的密文串，每次运行结果不同。</span></span><span><span style="color:#6f42c1">encPassword</span><span style="color:#032f62">051a2f0fdc7d0d40794b845967df4c2d05b5eb0f25339021dc4e02a9d7620070654b</span></span><span style="color:#6a737d"></span><span><span style="color:#6a737d"># ~/.ssh/config 和 ~/.ssh/password 是支持通配符的，tssh 会使用第一个匹配到的值。</span></span><span><span style="color:#6a737d"># 这里希望 test2 使用区别于其他 test* 的密码，所以将 test* 放在了 test2 的后面。</span></span><span><span style="color:#6f42c1">Host</span><span style="color:#032f62">test*</span></span><span><span style="color:#6f42c1">Password</span><span style="color:#032f62">111111  # 支持明文密码，但是推荐使用 tssh --enc-secret 简单加密一下。</span></span></pre><div>
          &nbsp;
         </div></div></div></li><li><p style="margin-left:0; margin-right:0">如果启用了<span>&nbsp;</span><code>ControlMaster</code><span>&nbsp;</span>多路复用，或者是在<span>&nbsp;</span><code>Warp</code><span>&nbsp;</span>终端，需要使用前面<span>&nbsp;</span><code>自动交互</code><span>&nbsp;</span>的方式实现记住密码的效果。配置方式请参考前面<span>&nbsp;</span><code>自动交互</code>，加上<span>&nbsp;</span><code>Ctrl</code><span>&nbsp;</span>前缀即可，如：</p><div><div><pre><span><span style="color:#6f42c1">Host</span><span style="color:#032f62">ctrl</span></span><span><span style="color:#6a737d">    #!! CtrlExpectCount 1  # 配置自动交互的次数，一般只要输入一次密码</span></span><span><span style="color:#6a737d">    #!! CtrlExpectPattern1 *assword    # 配置密码提示语的匹配表达式</span></span><span><span style="color:#6a737d">    #!! CtrlExpectSendPass1 d7983b...  # 配置 tssh --enc-secret 编码后的密码</span></span></pre></div></div></li><li><p style="margin-left:0; margin-right:0">支持记住私钥的<span>&nbsp;</span><code>Passphrase</code>（ 推荐使用<span>&nbsp;</span><code>ssh-agent</code><span>&nbsp;</span>）。支持与<span>&nbsp;</span><code>IdentityFile</code><span>&nbsp;</span>一起配置，支持使用私钥文件名代替 Host 别名设置通用密钥的<span>&nbsp;</span><code>Passphrase</code>。举例：</p><div><div><pre><span><span style="color:#6a737d"># IdentityFile 和 Passphrase 一起配置，可以加上 `#!!` 前缀，以兼容标准 ssh</span></span><span><span style="color:#6f42c1">Host</span><span style="color:#032f62">test1</span></span><span><span style="color:#6f42c1">IdentityFile</span><span style="color:#032f62">/path/to/id_rsa</span></span><span><span style="color:#6a737d">    # 下面是运行 tssh --enc-secret 输入密码 123456 得到的密文串，每次运行结果不同。</span></span><span><span style="color:#6a737d">    #!! encPassphrase 6f419911555b0cdc84549ae791ef69f654118d734bb4351de7e83163726ef46d176a</span></span><span style="color:#6a737d"></span><span><span style="color:#6a737d"># 在 ~/.ssh/config 中配置通用私钥 ~/.ssh/id_ed25519 对应的 Passphrase</span></span><span><span style="color:#6a737d"># 可以加上通配符 * 以避免 tssh 搜索和选择时，文件名出现在服务器列表中。</span></span><span><span style="color:#6f42c1">Host</span><span style="color:#032f62">id_ed25519*</span></span><span><span style="color:#6a737d">    # 下面是运行 tssh --enc-secret 输入密码 111111 得到的密文串，每次运行结果不同。</span></span><span><span style="color:#6a737d">    #!! encPassphrase 3a929328f2ab1be0ba3fccf29e8125f8e2dac6dab73c946605cf0bb8060b05f02a68</span></span><span style="color:#6a737d"></span><span><span style="color:#6a737d"># 在 ~/.ssh/password 中配置则不需要通配符*，也不会出现在服务器列表中。</span></span><span><span style="color:#6f42c1">Host</span><span style="color:#032f62">id_rsa</span></span><span><span style="color:#6f42c1">Passphrase</span><span style="color:#032f62">111111  # 支持明文密码，但是推荐使用 tssh --enc-secret 简单加密一下。</span></span></pre></div></div></li><li><p style="margin-left:0; margin-right:0"><code>记住密码</code>之后还提示输入密码？可能服务器的认证方式是<span>&nbsp;</span><code>keyboard interactive</code>，请参考下文<code>记住答案</code>。</p></li></ul><h2>记住答案</h2><ul><li><p style="margin-left:0; margin-right:0">除了私钥和密码，还有一种登录方式，英文叫 keyboard interactive ，是服务器返回一些问题，客户端提供正确的答案就能登录，很多自定义的一次性密码就是利用这种方式实现的。</p></li><li><p style="margin-left:0; margin-right:0">对于只有一个问题，且答案（密码）固定不变的，只要配置<span>&nbsp;</span><code>QuestionAnswer1</code><span>&nbsp;</span>即可。对于有多个问题的，可以按问题的序号进行配置，也可以按问题的 hex 编码进行配置。</p></li><li><p style="margin-left:0; margin-right:0">使用<span>&nbsp;</span><code>tssh --debug</code><span>&nbsp;</span>登录，会输出问题的 hex 编码，从而知道该如何使用 hex 编码进行配置。配置举例：</p><div><div><pre><span><span style="color:#6a737d"># 如果配置在 ~/.ssh/config 中，可以加上 `#!!` 前缀，以兼容标准 ssh</span></span><span><span style="color:#6f42c1">Host</span><span style="color:#032f62">test1</span></span><span><span style="color:#6a737d">    # 下面是运行 tssh --enc-secret 输入答案 `答案一` 得到的密文串，每次运行结果不同。</span></span><span><span style="color:#6f42c1">encQuestionAnswer1</span><span style="color:#032f62">482de7690ccc5229299ccadd8de1cb7c6d842665f0dc92ff947a302f644817baecbab38601</span></span><span><span style="color:#6f42c1">Host</span><span style="color:#032f62">test2</span></span><span><span style="color:#6a737d">    # 下面是运行 tssh --enc-secret 输入答案 `答案一` 得到的密文串，每次运行结果不同。</span></span><span><span style="color:#6f42c1">encQuestionAnswer1</span><span style="color:#032f62">43e86f1140cf6d8c786248aad95a26f30633f1eab671676b0860ecb5b1a64fb3ec5212dddf</span></span><span><span style="color:#6f42c1">QuestionAnswer2</span><span style="color:#032f62">答案二  # 支持明文答案，但是推荐使用 tssh --enc-secret 简单加密一下。</span></span><span><span style="color:#6f42c1">QuestionAnswer3</span><span style="color:#032f62">答案三</span></span><span><span style="color:#6f42c1">Host</span><span style="color:#032f62">test3</span></span><span><span style="color:#6a737d">    # 其中 `6e616d653a20` 是问题 `name: ` 的 hex 编码，`enc` 前缀代表配置的是密文串。</span></span><span><span style="color:#6a737d">    # 下面是运行 tssh --enc-secret 输入答案 `my_name` 得到的密文串，每次运行结果不同。</span></span><span><span style="color:#6f42c1">enc6e616d653a20</span><span style="color:#032f62">775f2523ab747384e1661aba7779011cb754b73f2e947672c7fd109607b801d70902d1</span></span><span><span style="color:#6f42c1">636f64653a20</span><span style="color:#032f62">my_code  # 其中 `636f64653a20` 是问题 `code: ` 的 hex 编码, `my_code` 是明文答案</span></span></pre><div>
          &nbsp;
         </div></div></div></li><li><p style="margin-left:0; margin-right:0">对于可以通过命令行获取到的动态密码，则可以如下配置（同样支持按序号或 hex 编码进行配置）：</p><div><div><pre><span><span style="color:#6f42c1">Host</span><span style="color:#032f62">otp</span></span><span><span style="color:#6f42c1">OtpCommand1</span><span style="color:#032f62">oathtool --totp -b xxxxx  # 按序号配置获取动态密码的命令</span></span><span><span style="color:#6f42c1">otp636f64653a20</span><span style="color:#032f62">oathtool --totp -b xxxxx  # 按 `code: ` 的 hex 编码 `636f64653a20` 配置获取动态密码的命令</span></span><span><span style="color:#6a737d">    # 下面是运行 tssh --enc-secret 输入命令 oathtool --totp -b xxxxx 得到的密文串，加上 `enc` 前缀进行配置</span></span><span><span style="color:#6f42c1">encOtpCommand2</span><span style="color:#032f62">77b4ce85d087b39909e563efb165659b22b9ea700a537f1258bdf56ce6fdd6ea70bc7591ea5c01918537a65433133bc0bd5ed3e4</span></span><span><span style="color:#6f42c1">encotp636f64653a20</span><span style="color:#032f62">77b4ce85d087b39909e563efb165659b22b9ea700a537f1258bdf56ce6fdd6ea70bc7591ea5c01918537a65433133bc0bd5ed3e4</span></span></pre></div></div></li><li><p style="margin-left:0; margin-right:0">如果启用了<span>&nbsp;</span><code>ControlMaster</code><span>&nbsp;</span>多路复用，或者是在<span>&nbsp;</span><code>Warp</code><span>&nbsp;</span>终端，请参考前面<span>&nbsp;</span><code>自动交互</code><span>&nbsp;</span>加<span>&nbsp;</span><code>Ctrl</code><span>&nbsp;</span>前缀来实现。</p><div><div><pre><span><span style="color:#6f42c1">Host</span><span style="color:#032f62">ctrl_otp</span></span><span><span style="color:#6a737d">    #!! CtrlExpectCount 1  # 配置自动交互的次数，一般只要输入一次密码</span></span><span><span style="color:#6a737d">    #!! CtrlExpectPattern1 token:  # 配置密码提示语的匹配表达式（这里以动态密码举例）</span></span><span><span style="color:#6a737d">    #!! CtrlExpectSendOtp1 oathtool --totp -b xxxxx  # 配置获取动态密码的命令（明文）</span></span><span><span style="color:#6a737d">    #!! CtrlExpectSendEncOtp1 77b4ce85d0...  # 或者配置 tssh --enc-secret 得到的密文串</span></span></pre></div></div></li></ul><h2>个性配置</h2><ul><li><p style="margin-left:0; margin-right:0">支持在<span>&nbsp;</span><code>~/.tssh.conf</code>（ Windows 是<span>&nbsp;</span><code>C:\Users\your_name\.tssh.conf</code><span>&nbsp;</span>）中进行以下自定义配置：</p><div><div><pre><span><span style="color:#6a737d"># SSH 配置路径，默认为 ~/.ssh/config</span></span><span><span style="color:#6f42c1">ConfigPath</span> = ~/.ssh/config</span><span><span style="color:#6a737d"># 扩展配置路径，默认为 ~/.ssh/password</span></span><span><span style="color:#6f42c1">ExConfigPath</span> = ~/.ssh/password</span><span><span style="color:#6a737d"># trz 上传时，对话框打开的路径，为空时打开上次的路径， 默认为空</span></span><span><span style="color:#6f42c1">DefaultUploadPath</span> = ~/Downloads</span><span><span style="color:#6a737d"># tsz 下载时，自动保存的路径，为空时弹出对话框手工选择，默认为空</span></span><span><span style="color:#6f42c1">DefaultDownloadPath</span> = ~/Downloads</span><span><span style="color:#6a737d"># tssh 搜索和选择服务器时，配置主题风格和自定义颜色</span></span><span><span style="color:#6f42c1">PromptThemeLayout</span> = simple</span><span><span style="color:#6f42c1">PromptThemeColors</span> = {<span style="color:#032f62">"active_host"</span>: <span style="color:#032f62">"magenta|bold"</span>, <span style="color:#032f62">"inactive_host"</span>: <span style="color:#032f62">"magenta"</span>}</span><span><span style="color:#6a737d"># tssh 搜索和选择服务器时，每页显示的记录数，默认为 10</span></span><span><span style="color:#6f42c1">PromptPageSize</span> = <span>10</span></span><span><span style="color:#6a737d"># tssh 搜索和选择服务器时，默认是类似 vim 的 normal 模式，想默认进入搜索模式可如下配置：</span></span><span><span style="color:#6f42c1">PromptDefaultMode</span> = search</span><span><span style="color:#6a737d"># tssh 搜索和选择服务器时，详情中显示的配置列表，默认如下：</span></span><span><span style="color:#6f42c1">PromptDetailItems</span> = Alias Host Port User GroupLabels IdentityFile ProxyCommand ProxyJump RemoteCommand</span><span><span style="color:#6a737d"># tssh 搜索和选择服务器时，可以自定义光标和选中的图标：</span></span><span><span style="color:#6f42c1">PromptCursorIcon</span> = &gt;&gt;</span><span><span style="color:#6f42c1">PromptSelectedIcon</span> = ++</span><span><span style="color:#6a737d"># 登录后自动设置终端标题，退出后不会重置，你需要参考下文在本地 shell 中设置 PROMPT_COMMAND</span></span><span><span style="color:#6f42c1">SetTerminalTitle</span> = <span style="color:#005cc5">Yes</span></span></pre></div></div></li></ul><h2>配置注释</h2><ul><li><p style="margin-left:0; margin-right:0"><code>tssh</code><span>&nbsp;</span>配置中的注释基本与<span>&nbsp;</span><code>openssh</code><span>&nbsp;</span>一致，额外做了一些扩展支持，详见下表：</p><table cellspacing="0" style="border-collapse:collapse; border-spacing:0px; border:none; box-sizing:border-box; color:#444444; display:block; font-size:14px; line-height:inherit; margin:0px 0px 20px; max-width:100%; overflow:auto; width:888px; word-break:keep-all"><tbody><tr><th>注释</th><th>openssh</th><th>tssh</th></tr></tbody><tbody><tr><td style="border-color:#e9ebec; border-style:solid; border-width:1px"><code>#</code><span>&nbsp;</span>开头的配置行</td><td style="border-color:#e9ebec; border-style:solid; border-width:1px">是注释</td><td style="border-color:#e9ebec; border-style:solid; border-width:1px">是注释</td></tr><tr><td style="border-color:#e9ebec; border-style:solid; border-width:1px"><code>#!!</code><span>&nbsp;</span>开头的配置行</td><td style="border-color:#e9ebec; border-style:solid; border-width:1px">是注释</td><td style="border-color:#e9ebec; border-style:solid; border-width:1px">非注释</td></tr><tr><td style="border-color:#e9ebec; border-style:solid; border-width:1px"><code>Key Value # Comment</code></td><td style="border-color:#e9ebec; border-style:solid; border-width:1px">看情况</td><td style="border-color:#e9ebec; border-style:solid; border-width:1px">是注释</td></tr><tr><td style="border-color:#e9ebec; border-style:solid; border-width:1px"><code>Key=Value # Comment</code></td><td style="border-color:#e9ebec; border-style:solid; border-width:1px">看情况</td><td style="border-color:#e9ebec; border-style:solid; border-width:1px">非注释</td></tr></tbody></table></li><li><p style="margin-left:0; margin-right:0"><code>#</code><span>&nbsp;</span>开头的配置行，<code>openssh</code><span>&nbsp;</span>一律认为是注释；<code>tssh</code><span>&nbsp;</span>认为<span>&nbsp;</span><code>#!!</code><span>&nbsp;</span>开头的配置行不是注释，其他以<span>&nbsp;</span><code>#</code><span>&nbsp;</span>开头的配置行是注释。</p></li><li><p style="margin-left:0; margin-right:0"><code>Key Value # Comment</code><span>&nbsp;</span>配置（没有<span>&nbsp;</span><code>=</code><span>&nbsp;</span>号），<code>openssh</code><span>&nbsp;</span>有些情况认为<span>&nbsp;</span><code>#</code><span>&nbsp;</span>后的内容是注释，有些情况认为不是注释；<code>tssh</code><span>&nbsp;</span>一律认为<span>&nbsp;</span><code>#</code><span>&nbsp;</span>后的内容是注释。</p></li><li><p style="margin-left:0; margin-right:0"><code>Key=Value # Comment</code><span>&nbsp;</span>配置（有<span>&nbsp;</span><code>=</code><span>&nbsp;</span>号），<code>openssh</code><span>&nbsp;</span>有些情况认为<span>&nbsp;</span><code>#</code><span>&nbsp;</span>后的内容是注释，有些情况认为不是注释；<code>tssh</code><span>&nbsp;</span>一律认为<span>&nbsp;</span><code>#</code><span>&nbsp;</span>后的内容不是注释。</p></li></ul><h2>其他功能</h2><ul><li><p style="margin-left:0; margin-right:0">使用<span>&nbsp;</span><code>-f</code><span>&nbsp;</span>后台运行时，可以加上<span>&nbsp;</span><code>--reconnect</code><span>&nbsp;</span>参数，在后台进程因连接断开等而退出时，会自动重新连接。</p></li><li><p style="margin-left:0; margin-right:0">运行<span>&nbsp;</span><code>tssh --enc-secret</code>，输入密码或答案，可得到用于配置的密文（ 相同密码每次运行结果不同 ）。</p><ul><li>上文说的<code>记住密码</code>和<code>记住答案</code>等，在配置项前面加上<span>&nbsp;</span><code>enc</code><span>&nbsp;</span>则可以配置成密文，防止被人窥屏。</li><li>如果密码中含有<span>&nbsp;</span><code>#</code><span>&nbsp;</span>等特殊字符，直接配置密码明文可能会导致登录失败，此时则必须使用密文配置。</li></ul><div><div><pre><span><span style="color:#6f42c1">Host</span><span style="color:#032f62">server2</span></span><span><span style="color:#6a737d">  # 如果配置在 ~/.ssh/config 中，可以加上 `#!!` 前缀，以兼容标准 ssh</span></span><span><span style="color:#6f42c1">encPassword</span><span style="color:#032f62">de88c4dbdc95d85303682734e2397c4d8dd29bfff09ec53580f31dd40291fc8c7755</span></span><span><span style="color:#6f42c1">encQuestionAnswer1</span><span style="color:#032f62">93956f6e7e9f2aef3af7d6a61f7046dddf14aa4bbd9845dbb836fe3782b62ac0d89f</span></span></pre><div>
          &nbsp;
         </div></div></div></li><li><p style="margin-left:0; margin-right:0">运行<span>&nbsp;</span><code>tssh --new-host</code><span>&nbsp;</span>可以在 TUI 界面轻松添加 SSH 配置，并且完成后可以立即登录。</p></li><li><p style="margin-left:0; margin-right:0">运行<span>&nbsp;</span><code>tssh --install-trzsz</code><span>&nbsp;</span>可以将<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Ftrzsz%2Ftrzsz-go">trzsz</a><span>&nbsp;</span>(<span>&nbsp;</span><code>trz</code><span>&nbsp;</span>/<span>&nbsp;</span><code>tsz</code><span>&nbsp;</span>) 安装到服务器上。</p><ul><li>默认安装到<span>&nbsp;</span><code>~/.local/bin/</code><span>&nbsp;</span>目录，可以通过<span>&nbsp;</span><code>--install-path /path/to/install</code><span>&nbsp;</span>指定安装目录。</li><li>若<span>&nbsp;</span><code>--install-path</code><span>&nbsp;</span>安装目录含有<span>&nbsp;</span><code>~/</code>，则必须加上单引号，如<span>&nbsp;</span><code>--install-path '~/path'</code>。</li><li>若获取<span>&nbsp;</span><code>trzsz</code><span>&nbsp;</span>的最新版本号失败，可以通过<span>&nbsp;</span><code>--trzsz-version x.x.x</code><span>&nbsp;</span>参数自行指定。</li><li>若下载<span>&nbsp;</span><code>trzsz</code><span>&nbsp;</span>的安装包失败，可以自行下载并通过<span>&nbsp;</span><code>--trzsz-bin-path /path/to/trzsz.tar.gz</code><span>&nbsp;</span>参数指定。</li><li>注意：<code>--install-trzsz</code><span>&nbsp;</span>不支持 Windows 服务器，不支持跳板机（ 除非以<span>&nbsp;</span><code>ProxyJump</code><span>&nbsp;</span>跳过 ）。</li></ul></li><li><p style="margin-left:0; margin-right:0">关于修改终端标题，其实无需<span>&nbsp;</span><code>tssh</code><span>&nbsp;</span>就能实现，只要在服务器的 shell 配置文件中（如<span>&nbsp;</span><code>~/.bashrc</code>）配置：</p><div><div><pre><span><span style="color:#888888"><span style="color:#6a737d"># 设置固定的服务器标题</span></span></span><span><span style="color:#008080">PROMPT_COMMAND</span><span>=</span><span style="color:#dd1144">'echo -ne <span style="color:#032f62">"\033]0;固定的服务器标题\007"</span>'</span></span><span><span style="color:#888888"><span style="color:#6a737d"># 根据环境变量动态变化的标题</span></span></span><span><span style="color:#008080">PROMPT_COMMAND</span><span>=</span><span style="color:#dd1144">'echo -ne <span style="color:#032f62">"\033]0;${USER}@${HOSTNAME}: ${PWD}\007"</span>'</span></span></pre><div>
          &nbsp;
         </div></div></div><ul><li>如果在<span>&nbsp;</span><code>~/.tssh.conf</code><span>&nbsp;</span>中设置了<span>&nbsp;</span><code>SetTerminalTitle = Yes</code>，则会在登录后自动设置终端标题，但是服务器上的<span>&nbsp;</span><code>PROMPT_COMMAND</code><span>&nbsp;</span>会覆盖<span>&nbsp;</span><code>tssh</code><span>&nbsp;</span>设置的标题。</li><li>在<span>&nbsp;</span><code>tssh</code><span>&nbsp;</span>退出后不会重置为原来的标题，你需要在本地 shell 中设置<span>&nbsp;</span><code>PROMPT_COMMAND</code>，让它覆盖<span>&nbsp;</span><code>tssh</code><span>&nbsp;</span>设置的标题。</li></ul></li></ul><h2>故障排除</h2><ul><li><p style="margin-left:0; margin-right:0">在 Warp 终端，分块 Blocks 的功能需要将<span>&nbsp;</span><code>tssh</code><span>&nbsp;</span>重命名为<span>&nbsp;</span><code>ssh</code>，推荐建个软链接（ 对更新友好 ）：</p><div><div><pre><span>sudo ln -sv $(<span>which</span> tssh) /usr/<span>local</span>/bin/ssh</span></pre><div>
          &nbsp;
         </div></div></div><ul><li><p style="margin-left:0; margin-right:0">软链后，<code>ssh -V</code><span>&nbsp;</span>应输出<span>&nbsp;</span><code>trzsz ssh</code><span>&nbsp;</span>加版本号，如果不是，说明软链不成功，或者在<span>&nbsp;</span><code>PATH</code><span>&nbsp;</span>中<span>&nbsp;</span><code>openssh</code><span>&nbsp;</span>的优先级更高，你要软链到另一个地方或者调整<span>&nbsp;</span><code>PATH</code><span>&nbsp;</span>的优先级。</p></li><li><p style="margin-left:0; margin-right:0">软链后，要直接使用<span>&nbsp;</span><code>ssh</code>，它等价于<span>&nbsp;</span><code>tssh</code>。如果还是用<span>&nbsp;</span><code>tssh</code><span>&nbsp;</span>是不会支持分块 Blocks 功能的。</p></li><li><p style="margin-left:0; margin-right:0"><code>--dragfile</code><span>&nbsp;</span>参数可能会让 Warp 分块功能失效，请参考前文配置<span>&nbsp;</span><code>EnableDragFile</code><span>&nbsp;</span>来启用拖拽功能。</p></li><li><p style="margin-left:0; margin-right:0">拖拽文件或目录进入 Warp 终端后，可能不会立即触发上传，需要多按一次<code>回车</code>键，才会上传。</p></li></ul></li><li><p style="margin-left:0; margin-right:0">如果你在使用 Windows7 或者旧版本的 Windows10 等，遇到<span>&nbsp;</span><code>enable virtual terminal failed</code><span>&nbsp;</span>的错误。</p><ul><li>可以尝试在<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.cygwin.com%2F">Cygwin</a>、<a href="https://gitee.com/link?target=https%3A%2F%2Fwww.msys2.org%2F">MSYS2</a><span>&nbsp;</span>或<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.atlassian.com%2Fgit%2Ftutorials%2Fgit-bash">Git Bash</a><span>&nbsp;</span>内使用<span>&nbsp;</span><code>tssh</code>。</li></ul></li><li><p style="margin-left:0; margin-right:0">如果在<span>&nbsp;</span><code>~/.ssh/config</code><span>&nbsp;</span>中配置了<span>&nbsp;</span><code>tssh</code><span>&nbsp;</span>特有的配置项后，标准<span>&nbsp;</span><code>ssh</code><span>&nbsp;</span>报错<span>&nbsp;</span><code>Bad configuration option</code>。</p><ul><li>可以在出错配置项中加上前缀<span>&nbsp;</span><code>#!!</code>，标准<span>&nbsp;</span><code>ssh</code><span>&nbsp;</span>会将它当作注释，而<span>&nbsp;</span><code>tssh</code><span>&nbsp;</span>则会认为它是有效配置之一。</li></ul></li></ul></div></div></div></div></div></div>
                                    ]]>
            </description>
            <pubDate>Mon, 18 Mar 2024 02:44:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/283524/tssh-0-1-19-released</guid>
            <link>https://www.oschina.net/news/283524/tssh-0-1-19-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[yuqing v1.3.0 已经发布，舆情监控系统]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>yuqing v1.3.0 已经发布，舆情监控系统</p><p>此版本更新内容包括：</p><p>1.修复了若干 bug</p><p>2.新增公众号预警功能</p><p>3.新增监控预警功能</p><p>4.新增移动端页面</p><p>详情查看：<a href="https://gitee.com/stonedtx/yuqing/releases/v1.3.0">https://gitee.com/stonedtx/yuqing/releases/v1.3.0</a></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 18 Mar 2024 02:38:52 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/283522/yuqing-1-3-0-released</guid>
            <link>https://www.oschina.net/news/283522/yuqing-1-3-0-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[数据库连接池 Druid 1.2.22 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#333333">数据库连接池 Druid 1.2.22 现已发布，</span>这又是一个功能增强 BUG FIX 的版本，建议大家按需升级。</p><h4><strong>Issues</strong></h4><ol><li><p>优化超时设置默认逻辑。针对 1.2.12 开始的 connectTimeout 和 socketTimeout 在没指定配置的情况下默认为 10 秒情况，去除该默认逻辑。在没配置这两个参数的情况下，超时设置行为与以前保持一致。 去除 timeout 默认值为 10 秒的逻辑&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Falibaba%2Fdruid%2Fissues%2F5729" target="_blank">#5729</a>&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Falibaba%2Fdruid%2Fpull%2F5735" target="_blank">#5735</a></p></li><li><p>优化超时参数设置逻辑。提取 jdbcurl 中 connectTimeout 和 socketTimeout 时不再区分 db 类型，MySQL/Oracle/PostgreSQL/SQLServer 在不方便设置数据源参数的情况下，可以在 jdbculr 中使用该参数进行超时控制; initialize connectTimeout and socketTimeout from jdbcUrl or properties&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Falibaba%2Fdruid%2Fpull%2F5706" target="_blank">#5706</a></p></li><li><p>优化创建连接的失败处理机制。针对 1.2.21 版本新增的连接数据库失败就关闭连接池的优化，回退不恰当的 fastfail&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Falibaba%2Fdruid%2Fissues%2F5771" target="_blank">#5771</a>&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Falibaba%2Fdruid%2Fpull%2F5777" target="_blank">#5777</a></p></li><li><p>增强 WallFilter 的数据库适配。针对使用内置 WallFilter 且数据库类型为匹配的情况下抛异常的情况，提供 SPI 机制通过实现 WallProviderCreator 来自定义扩展 WallProvider&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Falibaba%2Fdruid%2Fissues%2F5682" target="_blank">#5682</a>&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Falibaba%2Fdruid%2Fpull%2F5772" target="_blank">#5772</a></p></li><li><p>增强 SQL 解析能力。根据反馈，持续增强 druid parser 的 SQL 语法解析能力和修复语法解析的若干错误。</p></li><li><p>其它若干小优化。主要根据 Issue 反馈和 PR 反馈，持续进行优化。</p></li></ol><p style="color:#1f2328; text-align:start">在使用 1.2.12 至 1.2.21 版本的用户，建议升级至 1.2.22 进行功能验证。</p><p style="margin-left:0px; margin-right:0px; text-align:start"><strong>相关连接</strong></p><ul><li>druid 下载&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frepo1.maven.org%2Fmaven2%2Fcom%2Falibaba%2Fdruid%2F1.2.22%2F" target="_blank">https://repo1.maven.org/maven2/com/alibaba/druid/1.2.22/</a></li><li>druid-spring-booter 下载&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frepo1.maven.org%2Fmaven2%2Fcom%2Falibaba%2Fdruid-spring-boot-starter%2F1.2.22%2F" target="_blank">https://repo1.maven.org/maven2/com/alibaba/druid-spring-boot-starter/1.2.22/</a></li><li>文档&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Falibaba%2Fdruid%2Fwiki%2F%25E5%25B8%25B8%25E8%25A7%2581%25E9%2597%25AE%25E9%25A2%2598" target="_blank">https://github.com/alibaba/druid/wiki/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98</a></li><li>源码&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Falibaba%2Fdruid%2Ftree%2F1.2.22" target="_blank">https://github.com/alibaba/druid/tree/1.2.22</a></li><li>内置监控演示&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2F120.26.192.168%2Fdruid%2F" target="_blank">http://120.26.192.168/druid/</a></li></ul><p>更新说明：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Falibaba%2Fdruid%2Freleases%2Ftag%2F1.2.22" target="_blank">https://github.com/alibaba/druid/releases/tag/1.2.22</a></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 18 Mar 2024 02:09:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/283514/druid-1-2-22-released</guid>
            <link>https://www.oschina.net/news/283514/druid-1-2-22-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
    </channel>
</rss>
