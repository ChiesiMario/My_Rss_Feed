<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[开源中国-软件更新资讯]]>
        </title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="https://rsshub.app/oschina/news/project" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[开源中国-软件更新资讯 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Mon, 09 Oct 2023 06:17:30 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[DBeaver 23.2.2 发布，可视化数据库管理平台]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff; color:#333333">DBeaver 是一个免费开源的通用数据库工具，适用于开发人员和数据库管理员。DBeaver 23.2.2 现已发布，更新内容如下：</span></p><ul style="margin-left:0; margin-right:1.5em"><li>SQL editor： 
  <ul style="margin-left:0; margin-right:0"><li>改进了复杂 SQL 查询的自动完成功能</li><li>修复了在简单视图和高级视图之间切换时重新连接打开的编辑器的问题</li><li>SQL 控制枱现在可以另存为脚本</li></ul></li><li>ER diagrams： 
  <ul style="margin-left:0; margin-right:0"><li>添加了图表符号切换器</li><li>连接渲染得到改进</li><li>添加了 Crow’s foot 符号</li></ul></li><li>Data editor： 
  <ul style="margin-left:0; margin-right:0"><li>现在可以垂直显示多个查询结果</li><li>添加了「Go to column」(Ctrl+F) 操作</li><li>列搜索已添加到元数据面板</li><li>浮点数的数字格式已修复</li><li>打开 Calc 面板后出现空表的问题已解决</li><li>修复了为结果集设置行颜色的问题</li></ul></li><li>Data transfer：列自动映射现在可配置</li><li>General： 
  <ul style="margin-left:0; margin-right:0"><li>首选项页面上的「恢复默认设置」现在重置为实际的默认首选项</li><li>现在支持 Eclipse 2023-09 插件 API</li><li>修复了 macOS 上重置 UI 设置的问题</li><li>修复了在 Wayland 上运行时应用程序崩溃的问题</li><li>java.compiler 和 java.scripting 模块包含在捆绑的 Java 中</li></ul></li><li>Databases： 
  <ul style="margin-left:0; margin-right:0"><li>添加了 Damen 数据库扩展</li><li>Clickhouse：array map 表示已修复</li><li>Google Spanner：table DDL 生成问题已修复</li><li>DB2 LUW：trigger editor 已修复</li><li>Exasol：客户组创建已修复</li><li>Fireberd：添加了几个关键字</li><li>Materialized：系统模式加载已修复</li><li>PostgreSQL： 
    <ul style="margin-left:0; margin-right:0"><li>Backup/restore&nbsp;本机工具执行已修复</li><li>「欧洲/基辅」时区支持已修复</li></ul></li><li>Redshift： 
    <ul style="margin-left:0; margin-right:0"><li>Schemas loading 已修复</li><li>频谱表加载已修复（用于自定义驱动程序配置）</li></ul></li></ul></li></ul><p><span style="background-color:#ffffff; color:#333333">更新说明：</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdbeaver.io%2F2023%2F10%2F08%2Fdbeaver-23-2-2%2F" target="_blank">https://dbeaver.io/2023/10/08/dbeaver-23-2-2/</a></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 09 Oct 2023 06:08:27 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/260978/dbeaver-23-2-2-released</guid>
            <link>https://www.oschina.net/news/260978/dbeaver-23-2-2-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Solon 2.5.8 发布，诚邀 Java 开发者共建]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h3>诚邀?</h3><p style="color:#24292e; text-align:start">如果您对开源感兴趣且愿意学习和贡献，欢迎您共建 Solon 生态。Solon 计划明年推向国际市场，希望有对国外社区熟的同学加入帮忙。</p><h3>Solon 是什么框架？</h3><p style="color:#24292e; text-align:start"><strong>Java 生态级应用开发框架</strong>。从零开始构建，<span style="background-color:#f1c40f">有自己的标准规范与开放生态</span>（历时五年，具备全球第二级别的生态规模）。与其他框架相比，<span style="background-color:#f1c40f">解决了两个重要的痛点：启动慢，费内存</span>。</p><h3>解决痛点？</h3><p style="color:#24292e; text-align:start">由于 Solon&nbsp;Bean 容器的独特设计，不会因为扩展依赖变多而启动很慢（开发调试时，省时、爽快）！以知名开源项目「小诺」为例：</p><ul><li><a href="https://gitee.com/xiaonuobase/snowy">「snowy-spring 版」</a><span>&nbsp;</span>启动 15-50 秒</li><li><a href="https://gitee.com/xiaonuoadmin/snowy-solon">「snowy-solon 版」</a><span>&nbsp;</span><span style="background-color:#f1c40f">启动 3-5 秒，启动内存节省 1/3</span>（有兴趣的，欢迎拉取代码体验）</li></ul><h3>有什么可爱的特点？</h3><ul><li>启动快 5 ～ 10 倍。<span>&nbsp;</span><strong>（更快）</strong></li><li>qps 高 2～ 3 倍。<span>&nbsp;</span><strong>（更高）</strong></li><li>运行时内存节省 1/3 ~ 1/2。<span>&nbsp;</span><strong>（更少）</strong></li><li>打包可以缩小到 1/2 ~ 1/10；比如，300Mb 的变成了 23Mb。<span>&nbsp;</span><strong>（更小）</strong></li><li>同时支持 jdk8, jdk11, jdk17, jdk21,<span>&nbsp;</span><strong>graalvm native image</strong></li></ul><h3>入门探索视频（用户录制）：</h3><p><iframe frameborder="0" height="400" scrolling="no" src="https://player.bilibili.com/player.html?aid=938467339&amp;bvid=BV1RT4y1a7U5&amp;cid=583394292&amp;page=1" style="box-sizing: border-box; font-size: 16px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; color: rgb(36, 41, 46); font-family: -apple-system, &quot;system-ui&quot;, &quot;Segoe UI&quot;, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; text-align: start; background-color: rgb(255, 255, 255);" width="700" referrerpolicy="no-referrer"></iframe></p><h3>最近更新了什么？</h3><ul><li>增加 Context::headerOfResponse 接口</li><li>增加 http server gzip 整体配置支持（详见官网的<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsolon.noear.org%2Farticle%2F174" target="_blank">《应用常用配置说明》</a>）</li><li>增加 solon.web.staticfiles 对 gzip 的配置支持</li><li>增加 solon.boot.jdkhttp 对 gzip 的配置支持（取消内部的自动处理）</li><li>调整<span>&nbsp;</span><code>@Import</code><span>&nbsp;</span>替代<span>&nbsp;</span><code>@PropertySource</code>、<code>@TestPropertySource</code>，后者标为弃用（详见官网的<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsolon.noear.org%2Farticle%2F618" target="_blank">《@Import 使用说明》</a>）</li><li>调整<span>&nbsp;</span><code>@Rollback</code><span>&nbsp;</span>替代<span>&nbsp;</span><code>@TestRollback</code>，后者标为弃用</li><li>调整 SolonTestApp 默认关闭 http 服务；避免与已启动服务端口冲突</li><li>调整 solon.cache.jedis 的两个序列化实现，转到 solon.data（做为公用）</li><li>调整 solon.cache.redission RedissonCacheService 增加外部序列化接口支持</li><li>调整<span>&nbsp;</span><code>@Bean</code><span>&nbsp;</span>函数，参数没带注解的算必须</li><li>调整 paramsMap 增加 autoMultipart 处理</li><li>调整 nami,forest,feign 负载均衡的获取方式</li><li>修复 solon-maven-plugin 在 linux 下因为一些用户角色没有权限导致打包失败问题</li><li>优化<span>&nbsp;</span><code>VarGather</code><span>&nbsp;</span>检查增加自动排序</li><li>优化 Props::getMap 处理</li><li>简化 Props::getProp 处理提升性能</li><li>取消，全局未处理异常走总线的机制，转由 Log 框架接收（简化用户体验）</li><li>wood 升为 1.2.2</li><li>mybatis-flex 升为 1.6.8</li><li>fastmybatis 升为 2.9.7</li><li>easy-trans 升为 1.3.0</li><li>sa-token 升为 1.36.0</li><li>fastjson2 升为 2.4.0</li><li>jetty 升为 9.4.52.v20230823</li><li>undertow 升为 2.2.26.Final</li><li>redisx 升为 1.6.0</li></ul><h3>项目仓库地址？</h3><ul><li>gitee：<a href="https://gitee.com/noear/solon">https://gitee.com/noear/solon</a></li><li>github：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnoear%2Fsolon" target="_blank">https://github.com/noear/solon</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Mon, 09 Oct 2023 06:06:27 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/260977/solon-2-5-8-released</guid>
            <link>https://www.oschina.net/news/260977/solon-2-5-8-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[wmproxy 0.1 发布支持 http/https/socks5 代理及内网穿透功能]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h1>wmproxy</h1><p>一个同时支持 http/https/socks5 的代理，通过简单配置即可获取加密通道的内网穿透功能，支持 http/https/tcp 内网穿透</p><h2>📦 Installation &amp; 🏃 Usage</h2><h3>Installation</h3><pre><code class="language-bash">cargo install wmproxy
</code></pre><p>OR</p><pre><code class="language-bash">git clone https://github.com/tickbh/wmproxy
cd wmproxy
cargo install --path .
</code></pre><h3>Usage</h3><p>默认端口为 8090 端口，默认监听地址为 127.0.0.1</p><pre><code class="language-bash"># 直接通用默认参数
wmproxy

# 设置账号密码
wmproxy -p 8090 -b 0.0.0.0 --user wmproxy --pass wmproxy

# 其它指令
wmproxy --help

#配置文件版启动
wmproxy -c config/client.yaml
</code></pre><p>启动二级代理</p><ol><li>在本地启动代理</li></ol><pre><code class="language-bash">wmproxy -b 127.0.0.1 -p 8090 -S 127.0.0.1:8091 --ts
</code></pre><p>或者</p><pre><code class="language-bash">wmproxy -c config/client.yaml
</code></pre><p>配置文件如下:</p><pre><code># 连接服务端地址
server: 127.0.0.1:8091
# 连接服务端是否加密
ts: true

# 内网映射配置的数组
mappings:
  #将 localhost 的域名转发到本地的 127.0.0.1:8080
  - name: web
    mode: http
    local_addr: 127.0.0.1:8080
    domain: localhost
    headers:
      - [proxy, +, x-forward-for, $client_ip]
      - [proxy, +, from, $url]
      - [+, key, value]
      - [-, etag]
      - [+, last-modified, aaaa]

  #将 tcp 的流量无条件转到 127.0.0.1:8080
  - name: tcp
    mode: tcp
    local_addr: 127.0.0.1:8080
    domain:
</code></pre><p>因为纯转发，所以在当前节点设置账号密码没有意义<code>-S</code>表示连接到的二级代理地址，<strong>有该参数则表示是中转代理，否则是末端代理。</strong><code>--ts</code>表示连接父级代理的时候需要用加密的方式链接</p><ol><li>在远程启动代理</li></ol><pre><code class="language-bash">wmproxy --user proxy --pass proxy -b 0.0.0.0 -p 8091 --tc
</code></pre><p>或者</p><pre><code class="language-bash">wmproxy -c config/server.yaml
</code></pre><p>配置文件如下:</p><pre><code>#绑定的 ip 地址
bind_addr: 127.0.0.1:8091

#代理支持的功能，1 为 http，2 为 https，4 为 socks5
flag: 7

#内网映射 http 绑定地址
map_http_bind: 127.0.0.1:8001
#内网映射 tcp 绑定地址
map_tcp_bind: 127.0.0.1:8002
#内网映射 https 绑定地址
map_https_bind: 127.0.0.1:8003
#内网映射的公钥证书，为空则是默认证书
map_cert:
#内网映射的私钥证书，为空则是默认证书
map_key:

#接收客户端是为是加密客户端
tc: true
#当前服务模式，server 为服务端，client 为客户端
mode: server
</code></pre><p><code>--tc</code>表示接收子级代理的时候需要用加密的方式链接，可以<code>--cert</code>指定证书的公钥，<code>--key</code>指定证书的私钥，<code>--domain</code>指定证书的域名，如果不指定，则默认用自带的证书参数</p><blockquote><p>至此通过代理访问的，我们已经没有办法得到真正的请求地址，只能得到代理发起的请求</p></blockquote><h1>🚥 Roadmap</h1><h3>socks5</h3><ul><li>[x] IPV6 Support</li><li>[x] <code>SOCKS5</code> Authentication Methods 
  <ul><li>[x] <code>NOAUTH</code></li><li>[x] <code>USERPASS</code></li></ul></li><li>[x] <code>SOCKS5</code> Commands 
  <ul><li>[x] <code>CONNECT</code></li><li>[x] <code>UDP ASSOCIATE</code></li></ul></li></ul><h3>http/https</h3><ul><li>[x] IPV6 Support</li></ul><h3>内网穿透</h3><ul><li>[x] Http Support</li><li>[x] Https Support</li><li>[x] Tcp Support</li></ul><h4>支持功能</h4><ul><li>修改 HTTP 请求 Header</li><li>支持 HTTP2 的内网穿透</li></ul></div>
                                    ]]>
            </description>
            <pubDate>Mon, 09 Oct 2023 06:00:27 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/260975/wmproxy-0-1-released</guid>
            <link>https://www.oschina.net/news/260975/wmproxy-0-1-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Rust 1.73.0 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Rust 1.73.0 稳定版已正式<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.rust-lang.org%2F2023%2F10%2F05%2FRust-1.73.0.html" target="_blank">发布</a>，主要带来以下变化：</p><h4><span><span><strong><span><span><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>Cleaner panic messages</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></span></span></h4><p style="text-align:start"><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>默认紧急处理程序生成的输出已更改为将 panic 消息放在单独一行，而不是用引号括起来。这可以使 panic 消息更易于阅读，如本示例所示：</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><div style="margin-left:1em; margin-right:1em; text-align:start"><pre><code><span><span style="color:#b854d4">fn</span><span style="color:#6684e1">main</span></span>() {
    <span style="color:#b854d4">let</span> file = <span style="color:#60ac39">"ferris.txt"</span>;
    <span style="color:#b65611">panic!</span>(<span style="color:#60ac39">"oh no! {file:?} not found!"</span>);
}</code></pre></div><p style="text-align:start"><span style="background-color:#ffffff; color:#000000">Output before Rust 1.73：</span></p><pre style="text-align:start"><code class="language-text">thread 'main' panicked at 'oh no! "ferris.txt" not found!', src/main.rs:3:5</code></pre><p><span style="background-color:#ffffff; color:#000000">Output starting in Rust 1.73：</span></p><pre style="text-align:start"><code class="language-text">thread 'main' panicked at src/main.rs:3:5:
oh no! "ferris.txt" not found!</code></pre><p style="text-align:start"><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>这在信息较长、包含嵌套引号或跨多行时尤其有用。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:start"><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>此外，<code>assert_eq</code>和<code>assert_ne</code>产生的 panic 消息也已被修改，移动了自定义消息（第三个参数）并删除了一些不必要的标点符号，如下所示：</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><div style="margin-left:1em; margin-right:1em; text-align:start"><pre><code><span><span style="color:#b854d4">fn</span><span style="color:#6684e1">main</span></span>() {
    <span style="color:#b65611">assert_eq!</span>(<span style="color:#60ac39">"🦀"</span>, <span style="color:#60ac39">"🐟"</span>, <span style="color:#60ac39">"ferris is not a fish"</span>);
}</code></pre></div><p style="text-align:start"><span style="background-color:#ffffff; color:#000000">Output before Rust 1.73：</span></p><pre><code class="language-text">thread 'main' panicked at 'assertion failed: `(left == right)`
 left: `"🦀"`,
right: `"🐟"`: ferris is not a fish', src/main.rs:2:5</code></pre><p style="text-align:start"><span style="background-color:#ffffff; color:#000000">Output starting in Rust 1.73：</span></p><pre><code class="language-text">thread 'main' panicked at src/main.rs:2:5:
assertion `left == right` failed: ferris is not a fish
 left: "🦀"
right: "🐟"</code></pre><h4 style="text-align:start"><strong>Thread local initialization</strong></h4><p style="text-align:start"><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frust-lang%2Frfcs%2Fblob%2Fmaster%2Ftext%2F3184-thread-local-cell-methods.md" target="_blank">正如 RFC 3184</a>&nbsp;中所提议的，<code>LocalKey&lt;Cell&lt;T&gt;&gt;</code>和<code>LocalKey&lt;RefCell&lt;T&gt;&gt;</code>现在可以直接使用<code>get()</code>、<code>set()</code>、<code>take()</code>和<code>replace()</code>方法进行操作，而无需像一般<code>LocalKey</code>工作那样跳过<code>with(|inner| ...)</code>闭包。<code>LocalKey&lt;T&gt;</code>是<code>thread_local!</code>statics 的类型。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>新方法使 </span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="background-color:#ffffff; color:#000000">common code&nbsp;</span><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>更加简洁，并避免了为新线程在<code>thread_local!</code>中指定的默认值运行额外的初始化代码。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><pre style="text-align:start"><code class="language-rust">thread_local! {
    <span style="color:#b854d4">static</span> THINGS: Cell&lt;<span style="color:#b65611">Vec</span>&lt;<span style="color:#b65611">i32</span>&gt;&gt; = Cell::new(<span style="color:#b65611">Vec</span>::new());
}

<span><span style="color:#b854d4">fn</span><span style="color:#6684e1">f</span></span>() {
    <span style="color:#aaaaaa">// before:</span>
    THINGS.with(|i| i.set(<span style="color:#b65611">vec!</span>[<span style="color:#b65611">1</span>, <span style="color:#b65611">2</span>, <span style="color:#b65611">3</span>]));
    <span style="color:#aaaaaa">// now:</span>
    THINGS.set(<span style="color:#b65611">vec!</span>[<span style="color:#b65611">1</span>, <span style="color:#b65611">2</span>, <span style="color:#b65611">3</span>]);

    <span style="color:#aaaaaa">// ...</span><span style="color:#aaaaaa">// before:</span><span style="color:#b854d4">let</span> v = THINGS.with(|i| i.take());
    <span style="color:#aaaaaa">// now:</span><span style="color:#b854d4">let</span> v: <span style="color:#b65611">Vec</span>&lt;<span style="color:#b65611">i32</span>&gt; = THINGS.take();
}
</code></pre><p style="text-align:start"><strong>Stabilized APIs</strong></p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fstd%2Fprimitive.u32.html%23method.div_ceil" target="_blank">Unsigned<span>&nbsp;</span><code>{integer}::div_ceil</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fstd%2Fprimitive.u32.html%23method.next_multiple_of" target="_blank">Unsigned<span>&nbsp;</span><code>{integer}::next_multiple_of</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fstd%2Fprimitive.u32.html%23method.checked_next_multiple_of" target="_blank">Unsigned<span>&nbsp;</span><code>{integer}::checked_next_multiple_of</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fstd%2Fffi%2Fstruct.FromBytesUntilNulError.html" target="_blank"><code>std::ffi::FromBytesUntilNulError</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fstd%2Fos%2Funix%2Ffs%2Ffn.chown.html" target="_blank"><code>std::os::unix::fs::chown</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fstd%2Fos%2Funix%2Ffs%2Ffn.fchown.html" target="_blank"><code>std::os::unix::fs::fchown</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fstd%2Fos%2Funix%2Ffs%2Ffn.lchown.html" target="_blank"><code>std::os::unix::fs::lchown</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fstd%2Fthread%2Fstruct.LocalKey.html%23method.get" target="_blank"><code>LocalKey::&lt;Cell&lt;T&gt;&gt;::get</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fstd%2Fthread%2Fstruct.LocalKey.html%23method.set" target="_blank"><code>LocalKey::&lt;Cell&lt;T&gt;&gt;::set</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fstd%2Fthread%2Fstruct.LocalKey.html%23method.take" target="_blank"><code>LocalKey::&lt;Cell&lt;T&gt;&gt;::take</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fstd%2Fthread%2Fstruct.LocalKey.html%23method.replace" target="_blank"><code>LocalKey::&lt;Cell&lt;T&gt;&gt;::replace</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fstd%2Fthread%2Fstruct.LocalKey.html%23method.with_borrow" target="_blank"><code>LocalKey::&lt;RefCell&lt;T&gt;&gt;::with_borrow</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fstd%2Fthread%2Fstruct.LocalKey.html%23method.with_borrow_mut" target="_blank"><code>LocalKey::&lt;RefCell&lt;T&gt;&gt;::with_borrow_mut</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fstd%2Fthread%2Fstruct.LocalKey.html%23method.set-1" target="_blank"><code>LocalKey::&lt;RefCell&lt;T&gt;&gt;::set</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fstd%2Fthread%2Fstruct.LocalKey.html%23method.take-1" target="_blank"><code>LocalKey::&lt;RefCell&lt;T&gt;&gt;::take</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fstd%2Fthread%2Fstruct.LocalKey.html%23method.replace-1" target="_blank"><code>LocalKey::&lt;RefCell&lt;T&gt;&gt;::replace</code></a></li></ul><p style="color:#000000; text-align:start"><span style="background-color:#ffffff; color:#000000">这些 API 现在在 const contexts 中是稳定的：</span></p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Falloc%2Frc%2Fstruct.Weak.html%23method.new" target="_blank"><code>rc::Weak::new</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Falloc%2Fsync%2Fstruct.Weak.html%23method.new" target="_blank"><code>sync::Weak::new</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fcore%2Fptr%2Fstruct.NonNull.html%23method.as_ref" target="_blank"><code>NonNull::as_ref</code></a></li></ul><p>&nbsp;详情可<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.rust-lang.org%2F2023%2F10%2F05%2FRust-1.73.0.html" target="_blank">查看官方公告</a>。</p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 08 Oct 2023 06:13:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/260807/rust-1-73-0-released</guid>
            <link>https://www.oschina.net/news/260807/rust-1-73-0-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Apache Hudi 0.14.0 版本发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Apache Hudi 0.14.0 现已发布。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FATf-92UzW5iOGXYODYn0ug" target="_blank">公告</a>指出，该版本标志着一个重要的里程碑，具有一系列新功能和增强功能。其中包括引入<strong>Record Level Index</strong>、<strong>自动生成记录键</strong>&nbsp;、用于增量读取的&nbsp;<code>hudi_table_changes</code>函数等等。</p><p>值得注意的是，此版本还包含对&nbsp;<strong>Spark 3.4 的支持</strong>。在 Flink 方面，0.14.0 版本带来了一些令人兴奋的功能，例如<strong>一致哈希索引支持、支持 Flink 1.17 以及支持更新和删除语句</strong>。此外此版本还升级了 Hudi 表版本，提示用户查阅下面提供的迁移指南。我们鼓励用户在采用 0.14.0 版本之前查看重大特性、重大变化和行为变更。</p><h1>迁移指南</h1><p>在 0.14.0 版本进行了一些更改，例如从 ".aux" 文件夹中删除压缩计划以及引入新的日志块版本。作为此版本的一部分，表版本更新到版本 6。在具有旧表版本的表上运行版本 0.14.0 的 Hudi 作业时，会触发自动升级过程以将表升级到版本 6。升级对于每个 Hudi 表都是一次性的，因为升级完成后&nbsp;<code>hoodie.table.version</code>&nbsp;会在属性文件中更新。此外还包括用于降级的命令行工具，允许用户从表版本 6 降级到 5，或从 Hudi 0.14.0 恢复到 0.14.0 之前的版本。请从 0.14.0 环境使用此工具。有关更多详细信息，请参阅&nbsp;hudi-cli。</p><blockquote><p>注意：如果从旧版本（0.14.0 之前）迁移，建议按顺序检查每个旧版本的升级说明。</p></blockquote><h1>Bundle 包更新</h1><h3>新 Spark Bundle 包</h3><p>在此版本扩展了支持范围，包括 Spark 3.4 (hudi-spark3.4-bundle_2.12) 和 Spark 3.0 (hudi-spark3.0-bundle_2.12) 的 Bundle 包。请注意，在 Hudi 0.10.1 版本之后，对 Spark 3.0 的支持已停止，但由于社区的强烈兴趣，在此版本中恢复了对 Spark 3.0 的支持。</p><h1>重大变化</h1><h3>Spark SQL INSERT INTO 行为</h3><p>在 0.14.0 版本之前，Spark SQL 中通过 INSERT INTO 摄取的数据遵循 upsert 流程，其中多个版本的记录将合并为一个版本。但是从 0.14.0 开始更改了 INSERT INTO 的默认行为，默认行为更改为<code>insert</code>流。此更改显着提高了写入性能，因为它绕过了索引查找。</p><p>如果使用 preCombine 键创建表，则 INSERT INTO 的默认操作仍为&nbsp;<code>upsert</code>。相反如果没有设置 preCombine 键，则 INSERT INTO 的底层写操作默认为&nbsp;<code>insert</code>。用户可以根据自己的要求显式设置配置&nbsp;<code>hoodie.spark.sql.insert.into.operation</code>&nbsp;的值来灵活地覆盖此行为。此配置的可能值包括&nbsp;<code>insert</code>、<code>bulk_insert</code>&nbsp;和&nbsp;<code>upsert</code>。</p><p>此外在 0.14.0 版本中弃用了两个相关的旧配置</p><ul><li><p>hoodie.sql.insert.mode</p></li><li><p>hoodie.sql.bulk.insert.enable</p></li></ul><h1>行为变更</h1><h3>使用 Spark SQL Inserts 简化重复处理</h3><p>如果操作类型配置为 Spark SQL INSERT INTO 流的插入，用户现在可以选择使用配置设置 hoodie.datasource.insert.dup.policy 强制执行重复策略。此策略确定当正在摄取的传入记录已存在于存储中时采取的操作。此配置的可用值如下：</p><ul><li><p>none：不采取任何特定操作，如果传入记录包含重复项，则允许 Hudi 表中存在重复项。</p></li><li><p>drop：传入写入中的匹配记录将被删除，其余记录将被摄取。</p></li><li><p>fail：如果重新摄取相同的记录，写入操作将失败。本质上由键生成策略确定的给定记录只能被摄取到目标表中一次。</p></li></ul><p>通过添加此配置，旧的相关配置&nbsp;<code>hoodie.datasource.write.insert.drop.duplicates</code>&nbsp;现已弃用。当两者都指定时，新配置将优先于旧配置。如果未提供特定配置，则将采用较新配置的默认值。强烈鼓励用户迁移到使用这些较新的配置。</p><h3>MOR 表 Compaction</h3><p>对于 Spark 批写入器（Spark Datasource 和 Spark SQL），默认情况下会自动为 MOR（读取时合并）表启用压缩，除非用户显式覆盖此行为。用户可以选择通过将&nbsp;<code>hoodie.compact.inline</code>设置为&nbsp;<code>false</code>&nbsp;显式禁用压缩。如果用户不覆盖此配置，大约每 5 个增量提交（<code>hoodie.compact.inline.max.delta.commits</code>的默认值）会触发 MOR 表的压缩。</p><h3>HoodieDeltaStreamer 更名为 HoodieStreamer</h3><p>从版本 0.14.0 开始将 HoodieDeltaStreamer 重命名为 HoodieStreamer。同时确保了向后兼容性，以便现有的用户作业不受影响。但是在即将发布的版本中可能会停止对 Deltastreamer 的支持。因此强烈建议用户改用 HoodieStreamer。</p><h3>MERGE INTO JOIN CONDITION</h3><p>从 0.14.0 版本开始，当用户没有提供明确的规范时，Hudi 能够自动生成主记录键。此增强功能使&nbsp;<code>MERGE INTO JOIN</code>&nbsp;子句能够引用 Hudi 表中连接条件的任何数据列，其中主键由 Hudi 本身生成。但是在用户配置主记录键的情况下，连接条件仍然需要用户指定的主键字段。</p><h1>重大特性</h1><h3>Record Level Index</h3><p>Hudi 版本 0.14.0 引入了新的索引实现 -&nbsp;Record Level Index。记录级索引通过有效存储每条记录的位置并在索引查找操作期间实现快速检索，显着增强了大型表的写入性能。它可以有效地替代 Hudi 中常用的其他全局索引，例如 Global_bloom、Global_Simple 或 Hbase。</p><p>由于在查找过程中从各种数据文件收集索引数据的成本很高，布隆索引和简单索引对于大型数据集表现出较低的性能。而且，这些索引不保留一对一的记录键来记录文件路径映射；相反，他们在查找时通过优化搜索来推断映射。这些索引所需的每个文件的开销使得它们对于具有大量文件或记录的数据集效率较低。</p><p>另一方面，Hbase 索引为每个记录键保存一对一的映射，从而实现随数据集大小扩展的快速性能。然而，它需要一个单独的 HBase 集群来进行维护，这在操作上具有挑战性且资源密集型，需要专门的专业知识。</p><p>记录索引结合了 HBase 索引的速度和可扩展性，而没有其限制和开销。作为 HUDI 元数据表的一部分，未来写入和查询方面的任何性能增强都将自动转化为记录索引性能的改进。采用记录级索引有可能将索引查找性能提高 4 到 10 倍，具体取决于工作负载，即使对于超大规模数据集（例如 1TB）也是如此。</p><p>通过记录级别索引，可以观察到大型数据集的显着性能改进，因为延迟与摄取的数据量成正比。这与其他全局索引形成鲜明对比，其中索引查找时间随着表大小线性增加。记录级索引专门设计用于有效处理此类大规模数据的查找，而查找时间不会随着表大小的增长而线性增加。</p><p>为了利用这种快速的索引的优势，用户需要启用两种配置：</p><ul><li><p>必须启用&nbsp;<code>hoodie.metadata.record.index.enable</code>&nbsp;才能将记录级别索引写入元数据表。</p></li><li><p><code>hoodie.index.type</code>&nbsp;需要设置为&nbsp;<code>RECORD_INDEX</code>&nbsp;以便索引查找利用记录级别索引。</p></li></ul><h3>支持 Hudi 表自动生成键</h3><p>从 Hudi 最初的正式版本开始，主键是用户需要为任何 Hudi 表配置的必填字段。从 0.14.0 开始，我们放宽了这一限制。此增强功能解决了社区内的长期需求，其中某些用例不具有主键。版本 0.14.0 现在为用户提供了创建 Hudi 表的灵活性，而无需显式配置主键（通过省略配置设置 -&nbsp;<code>hoodie.datasource.write.recordkey.field</code>）。这种情况下 Hudi 将自动生成主键。此功能仅适用于新表，不能更改现有表。</p><p>所有 Spark 写入器都提供此功能，但有一定限制。对于仅追加类型的用例，如下四个写入器都允许插入和批量插入 - Spark Datasource、Spark SQL、Spark Streaming、Hoodie Streamer。仅使用 Spark SQL MERGE INTO 、 UPDATE 和 DELETE 语句支持更新和删除。对于 Spark Datasource，仅当 DataFrame 包含 Hudi 的元字段时才支持 UPDATE 和 DELETE。请查看快速入门指南，了解有关自动生成键的 Hudi 表 CRUD 操作的代码片段。</p><h3>Spark 3.4 版本支持</h3><p>添加 Spark 3.4 支持， Spark 3.4 的用户可以使用&nbsp;hudi-spark3.4-bundle。Spark 3.2、Spark 3.1、Spark3.0 和 Spark 2.4 将继续受支持。请检查迁移指南以获取 Bundle 包更新。可以浏览快速入门指南快速开始使用 Hudi 和 Spark 3.4。</p><h3>查询端改进</h3><h4>Athena 的元数据表支持</h4><p>用户现在可以与 Athena 无缝地利用 Hudi 的元数据表。文件列表索引通过从维护分区到文件映射的索引检索信息，消除了对递归文件系统调用（如「列表文件」）的需要。事实证明这种方法非常高效，尤其是在处理大量数据集时。使用 Hudi 0.14.0，用户可以在为其 Hudi 表执行 Glue 目录同步时激活基于元数据表的文件列表。要启用此功能，用户可以配置&nbsp;<code>hoodie.datasource.meta.sync.glue.metadata_file_listing</code>&nbsp;并在 Glue 同步过程中将其设置为 true。</p><h4>查询利用 Parquet 布隆过滤器</h4><p>在 Hudi 0.14.0 中，用户现在可以使用原生 Parquet 布隆过滤器，前提是他们的计算引擎支持 Apache Parquet 1.12.0 或更高版本。这种支持涵盖了数据集的写入和读取。Hudi 通过 Hadoop 配置方便使用原生 Parquet 布隆过滤器。用户需要使用代表要应用布隆过滤器的列的特定键来设置 Hadoop 配置。例如，&nbsp;<code>parquet.bloom.filter.enabled#rider=true</code>&nbsp;为 rider 列创建布隆过滤器。每当查询涉及 rider 列上的谓词时，布隆过滤器就会发挥作用，从而增强读取性能。</p><h4>多写入器的增量查询</h4><p>在多写入器场景中，由于并发写入活动，时间线中可能会出现间隙（requested 或 inflight 时刻不是最新时刻）。在执行增量查询时，这些间隙可能会导致结果不一致。为了解决这个问题，Hudi 0.14.0 引入了一个新的配置设置&nbsp;<code>hoodie.read.timeline.holes.resolution.policy</code>，专门用于处理增量查询中的这些不一致问题。该配置提供了三种可能的策略：</p><ul><li><p>FAIL：这是默认策略，当增量查询期间发现此类时间线间隙时，会引发异常。</p></li><li><p>BLOCK：在此策略中，增量查询的结果仅限于时间线中空洞之间的时间范围。例如，如果在 t0 到 t2 的增量查询范围内，在 t1 时刻检测到间隙，则查询将仅显示 t0 到 t1 之间的结果，而不会失败。</p></li><li><p>USE_TRANSITION_TIME：此策略是实验性的，涉及在增量查询期间使用状态转换时间，该时间基于时间线中提交元数据文件的文件修改时间。</p></li></ul><h4>Hive 3.x 的 Timestamp 类型支持</h4><p>相当长一段时间以来，Hudi 用户在读取 Spark 的 Timestamp 类型列以及随后尝试使用 Hive 3.x 读取它们时遇到了挑战。在 Hudi 0.13.x 中，我们引入了一种解决方法来缓解此问题，0.14.0 版本现在确保 HiveAvroSerializer 与 Hive 3.x 完全兼容以解决此问题。</p><h4>Google BigQuery 同步增强功能</h4><p>在 0.14.0 中，BigQuerySyncTool&nbsp;支持使用清单将表同步到 BigQuery。与传统方式相比，这预计将具有更好的查询性能。模式演进由清单方法支持。由于新的 schema 处理改进，不再需要从文件中删除分区列。要启用此功能，用户可以将&nbsp;<code>hoodie.gcp.bigquery.sync.use_bq_manifest_file</code>设置为&nbsp;<code>true</code>。</p><h3>Spark 读取端改进</h3><h4>MOR Bootstrap 表的快照读取支持</h4><p>在 0.14.0 中，为引导表添加了 MOR 快照读取支持。默认行为已通过多种方式进行了更改，以匹配非引导 MOR 表的行为。快照读取现在将成为默认读取模式。使用&nbsp;<code>hoodie.datasource.query.type=read_optimized</code>&nbsp;进行读取优化查询，这是以前的默认行为。此类表的 Hive 同步将导致表名带有 _ro 和 _rt 后缀，分别表示读取优化和快照读取。</p><h4>用于增量读取的表值函数 hudi_table_changes</h4><p>Hudi 已经提供了使用增量查询类型获取自给定提交时间戳以来更改的记录流的功能。在 Hudi 0.14.0 中，我们添加了一种新的、更简单的方法，使用名为 hudi_table_changes 的表值函数来获取 Hudi 数据集的最新状态或更改流。以下是有关如何使用此函数的语法和一些示例。</p><pre><code>SYNTAX
hudi_table_changes(table,&nbsp;queryType,&nbsp;beginTime&nbsp;[,&nbsp;endTime]);
--&nbsp;table:&nbsp;table&nbsp;identifier,&nbsp;example:&nbsp;db.tableName,&nbsp;tableName,&nbsp;or&nbsp;path&nbsp;for&nbsp;the&nbsp;table,&nbsp;example:&nbsp;hdfs://path/to/hudiTable.
--&nbsp;queryType:&nbsp;incremental&nbsp;query&nbsp;mode,&nbsp;valid&nbsp;values:&nbsp;latest_state,&nbsp;cdc
(for&nbsp;cdc&nbsp;query,&nbsp;first&nbsp;enable&nbsp;cdc&nbsp;for&nbsp;the&nbsp;table&nbsp;by&nbsp;setting&nbsp;cdc.enabled=true),
--&nbsp;beginTime:&nbsp;instantTime&nbsp;to&nbsp;begin&nbsp;query&nbsp;from,&nbsp;example:&nbsp;earliest,&nbsp;202305150000,
--&nbsp;endTime:&nbsp;optional&nbsp;instantTime&nbsp;to&nbsp;end&nbsp;query&nbsp;at,&nbsp;example:&nbsp;202305160000,

EXAMPLES
--&nbsp;incrementally&nbsp;query&nbsp;data&nbsp;by&nbsp;table&nbsp;name
--&nbsp;start&nbsp;from&nbsp;earliest&nbsp;available&nbsp;commit,&nbsp;end&nbsp;at&nbsp;latest&nbsp;available&nbsp;commit.
SELECT&nbsp;*&nbsp;FROM&nbsp;hudi_table_changes('db.table',&nbsp;'latest_state',&nbsp;'earliest');

--&nbsp;start&nbsp;from&nbsp;earliest,&nbsp;end&nbsp;at&nbsp;202305160000.
SELECT&nbsp;*&nbsp;FROM&nbsp;hudi_table_changes('table',&nbsp;'latest_state',&nbsp;'earliest',&nbsp;'202305160000');

--&nbsp;incrementally&nbsp;query&nbsp;data&nbsp;by&nbsp;path
--&nbsp;start&nbsp;from&nbsp;earliest&nbsp;available&nbsp;commit,&nbsp;end&nbsp;at&nbsp;latest&nbsp;available&nbsp;commit.
SELECT&nbsp;*&nbsp;FROM&nbsp;hudi_table_changes('path/to/table',&nbsp;'cdc',&nbsp;'earliest');

</code></pre><p>查看快速入门以获取更多示例。</p><h4>Spark 中新的 MOR 文件格式读取器</h4><p>基于&nbsp;RFC-72&nbsp;旨在重新设计 Hudi-Spark 集成的提案，我们引入了用于 MOR（读取合并）表的实验性文件格式读取器。与旧文件格式相比，该读取器预计可将读取延迟显着降低 20% 至 40%，特别是对于快照和引导查询。目标是使延迟更接近 COW（写入时复制）文件格式的延迟。要利用这种新文件格式，用户需要设置&nbsp;<code>hoodie.datasource.read.use.new.parquet.file.format=true</code>。值得注意的是，此功能仍处于实验阶段，并且存在一些限制。有关更多详细信息以及有兴趣做出贡献，请参阅&nbsp;HUDI-6568。</p><h3>Spark 写入端改进</h3><h4>Bulk_Insert 和行写入器增强</h4><p>0.14.0 版本支持在执行 INSERT OVERWRITE TABLE 和 INSERT OVERWRITE PARTITION 等 SQL 操作时使用批量插入操作。要启用批量插入，请将配置&nbsp;<code>hoodie.spark.sql.insert.into.operation</code>&nbsp;设置为值<code>bulk_insert</code>。与插入操作相比，批量插入具有更好的写入性能。另外简单存储桶索引也支持了行写入器。</p><h3>Hoodie DeltaStreamer 增强</h3><h4>动态配置更新</h4><p>当 Hoodie Streamer 以连续模式运行时，可以在每次同步调用之前刷新/更新属性。有兴趣的用户可以实现&nbsp;<code>org.apache.hudi.utilities.deltastreamer.ConfigurationHotUpdateStrategy</code>&nbsp;来利用它。</p><h4>HoodieStreamer 基于 SQL 文件的源</h4><p>HoodieStreamer 中添加了一个新源 -&nbsp;SqlFileBasedSource，旨在促进一次性回填场景。</p><h3>Flink 增强功能</h3><p>以下是 0.14.0 版本中基于 Flink Engine 的增强功能。</p><h4>一致的哈希索引支持</h4><p>与静态哈希索引（BUCKET 索引）相比，一致性哈希索引为写入者提供了数据桶的动态可扩展性。要利用此功能，请将选项<code>index.type</code>配置为 BUCKET 并将<code>hoodie.index.bucket.engine</code>设置为<code>CONSISTENT_HASHING</code>。</p><p>启用一致性哈希索引时，在写入器中激活异步 Clustering 调度非常重要。Clustering 计划应通过离线作业执行。在此过程中，写入器将在 Clustering Pending 时对新旧数据桶执行双重写入。虽然双写不会影响正确性，但强烈建议尽快执行 Clustering。</p><h4>用于流式读取的动态分区修剪</h4><p>在 0.14.0 之前，当查询具有恒定日期时间过滤的谓词时，Flink 流式读取器无法正确修剪日期时间分区。自此版本以来，Flink 流式查询已得到修复，以支持任何过滤谓词模式，包括但不限于日期时间过滤。</p><h4>简单桶索引表查询加速（带索引字段）</h4><p>对于一个简单的桶索引表，如果查询对索引键字段采用等式过滤谓词，Flink 引擎会优化规划，只包含来自非常特定数据桶的源数据文件；此类查询预计平均性能将提高近&nbsp;<code>hoodie.bucket.index.num.buckets</code>&nbsp;倍。</p><h4>Flink 1.17 支持</h4><p>Flink 1.17 支持新的编译 maven 配置文件 flink1.17，在 Flink Hudi Bundle 包 jar 的编译 cmd 中添加配置文件 -Pflink1.17 以启用与 Flink 1.17 的集成。</p><h4>Flink 更新删除语句</h4><p>自此版本以来，UPDATE 和 DELETE 语句已集成用于批量查询。当前只有定义主键的表可以正确处理该语句。</p><pre><code>UPDATE&nbsp;hudi_table&nbsp;SET&nbsp;...&nbsp;WHERE&nbsp;...
DELETE&nbsp;FROM&nbsp;hudi_table&nbsp;WHERE&nbsp;...

EXAMPLES
--&nbsp;update&nbsp;the&nbsp;specific&nbsp;records&nbsp;with&nbsp;constant&nbsp;age
UPDATE&nbsp;hudi_table&nbsp;SET&nbsp;age=19&nbsp;WHERE&nbsp;UUID&nbsp;in&nbsp;('id1',&nbsp;'id2');
--&nbsp;delete&nbsp;all&nbsp;the&nbsp;records&nbsp;that&nbsp;with&nbsp;age&nbsp;greater&nbsp;than&nbsp;23
DELETE&nbsp;FROM&nbsp;hudi_table&nbsp;WHERE&nbsp;age&nbsp;&gt;&nbsp;23;

</code></pre><h3>Java 增强功能</h3><p>Java 引擎已扩展支持许多写操作，使其与其他引擎保持一致。例如 Java Engine 0.14.0 中添加了压缩、Clustering 和元数据表支持。</p><h3>已知回退</h3><p>在 Hudi 0.14.0 中，当查询使用 ComplexKeyGenerator 或 CustomKeyGenerator 的表时，分区值以字符串形式返回。请注意，存储上没有类型更改，即分区字段以存储上的用户定义类型写入。这对于上述键生成器来说是一个重大变化，将在 0.14.1 中修复。</p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 08 Oct 2023 03:51:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/260955/apache-hudi-0-14-0-released</guid>
            <link>https://www.oschina.net/news/260955/apache-hudi-0-14-0-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[7 个月，100+ 贡献者，MyBatis-Flex v1.6.9 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:center"><img alt="" height="265" src="https://oscimg.oschina.net/oscnet/up-0d6ec96d8070deb116566704fcc7bfd1291.png" width="500" referrerpolicy="no-referrer"></p><h1>MyBatis-Flex： 一个优雅的 MyBatis 增强框架</h1><h1>特征</h1><h4>1、很轻量</h4><blockquote><p style="margin-left:0; margin-right:0">MyBatis-Flex 整个框架只依赖 MyBatis，再无其他任何第三方依赖。</p></blockquote><h4>2、只增强</h4><blockquote><p style="margin-left:0; margin-right:0">MyBatis-Flex 支持 CRUD、分页查询、多表查询、批量操作，但不丢失 MyBatis 原有的任何功能。</p></blockquote><h4>3、高性能</h4><blockquote><p style="margin-left:0; margin-right:0">MyBatis-Flex 采用独特的技术架构、相比许多同类框架，MyBatis-Flex 的在增删改查等方面的性能均超越其 5~10 倍或以上。</p></blockquote><h4>4、更灵动</h4><blockquote><p style="margin-left:0; margin-right:0">MyBatis-Flex 支持多主键、多表查询、逻辑删除、乐观锁、数据脱敏、数据加密、多数据源、分库分表、字段权限、 字段加密、多租户、事务管理、SQL 审计... 等等等等。 这一切，免费且灵动。</p></blockquote><p>MyBatis-Flex 从今年的 3 月份发布第一个版本后，到今天为止，已经开源了 7 个月的时间。</p><p>在这 7 个月中，MyBatis-Flex 由于&nbsp;<strong>极友好的 API 设计、无任何第三方依赖、轻量实现、免费且友好&nbsp;</strong>等诸多特点，得到了 100+ 为同学的参与贡献。<span style="background-color:#ffffff; color:#3c3c43">他们有的是学生，有的 10+ 年开发经验的工程师，也有来至于<span>&nbsp;</span></span><strong>阿里巴巴</strong><span style="background-color:#ffffff; color:#3c3c43">、</span><strong>腾讯</strong><span style="background-color:#ffffff; color:#3c3c43">、</span><strong>科大讯飞</strong><span style="background-color:#ffffff; color:#3c3c43">、<span>&nbsp;</span></span><strong>网宿科技</strong><span style="background-color:#ffffff; color:#3c3c43">、</span><strong>新东方</strong><span style="background-color:#ffffff; color:#3c3c43"><span>&nbsp;</span>等企业的同学，使得 MyBatis-Flex 在这 7 个月的时间里，一共关闭了 600+ 个 issue，发布了 60+ 个版本，成为 Gitee 上最为活跃的 ORM 框架。</span></p><p><span style="background-color:#ffffff; color:#3c3c43">没有这些同学的贡献，就没有 MyBatis-Flex 的成长。</span></p><p>&nbsp;</p><h4><strong>MyBatis-Flex v1.6.9 更新细节如下：</strong></h4><div><ul><li>新增：添加 SQL 审计模块的计数消息收集器，感谢<span>&nbsp;</span><a href="https://gitee.com/Suomm" target="_blank">@王帅</a></li><li>新增：QueryWrapper 的 Lambda 方式支持 allColumns 和 defaultColumns 构建功能，感谢<span>&nbsp;</span><a href="https://gitee.com/Suomm" target="_blank">@王帅</a></li><li>新增：Mapper 增加 Entity 作为入参进行查询与删除和查询的方法，这有利于对多主键实体类的删除和查询，感谢 @Watcher.Wang</li><li>新增：添加 ifNull 函数 lambda 下缺失的非 lambda elseColumn 参数的支持，感谢<span>&nbsp;</span><a href="https://gitee.com/guanmengyuan" target="_blank">@guanmengyuan</a></li><li>新增：<code>@RelationOneToMany</code><span>&nbsp;</span>添加支持 selfValueSplitBy 字符分割的配置支持，感谢<span>&nbsp;</span><a href="https://gitee.com/ice-samll" target="_blank">@Ice-samll</a></li><li>新增：添加构建所有列方法 QueryMethods.allColumns()，感谢<span>&nbsp;</span><a href="https://gitee.com/guanmengyuan" target="_blank">@guanmengyuan</a></li><li>优化：重构抽象 SQL 审计模块的消息收集器，感谢<span>&nbsp;</span><a href="https://gitee.com/Suomm" target="_blank">@王帅</a></li><li>优化：SpringBoot-starter 模块的 autoconfigure-processor 默认添加 optional 配置，感谢<span>&nbsp;</span><a href="https://gitee.com/freeman" target="_blank">@freeman</a><span>&nbsp;</span>Liu</li><li>修复：当<span>&nbsp;</span>@Relation 注解使用 valueField 配置时，在某些情况下抛出 IllegalStateException 异常的问题</li><li>修复：在 FlexConfiguration 替换 ResultMap 时，替换了用户自定义的配置可能导致异常的问题</li><li>修复：修复 QueryMethods.replace 无法支持空格替换的问题</li><li>修复：ManyToOne 在某些场景下出错 IllegalArgumentException 错误的问题</li><li>测试：添加关于<span>&nbsp;</span><code>@RelationOneToMany</code><span>&nbsp;</span>的 selfValueSplitBy 测试代码，感谢<span>&nbsp;</span><a href="https://gitee.com/ice-samll" target="_blank">@Ice-samll</a></li><li>测试：测试环境添加一个 SQL 格式化的相关依赖，感谢<span>&nbsp;</span><a href="https://gitee.com/Suomm" target="_blank">@王帅</a></li><li>测试：添加关于 Lambda 方式 SQL 列构建测试，感谢<span>&nbsp;</span><a href="https://gitee.com/Suomm" target="_blank">@王帅</a></li><li>文档：添加在 where 部分使用 SQL 函数的相关文档，感谢 @shaoerkuai</li><li>文档：添加关于<span>&nbsp;</span><code>@RelationOneToMany</code><span>&nbsp;</span>的 selfValueSplitBy 的使用文档，感谢<span>&nbsp;</span><a href="https://gitee.com/ice-samll" target="_blank">@Ice-samll</a></li><li>文档：修改将批量操作文档中的相关错别字，感谢<span>&nbsp;</span><a href="https://gitee.com/dataprince" target="_blank">@数据小王子</a>&nbsp;</li></ul></div><p><strong>这个版本得以发布，要感谢以上 8 位 pr 的同学，他们分别是：<span>&nbsp;</span></strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/dataprince" target="_blank">@数据小王子</a>、<a href="https://gitee.com/ice-samll" target="_blank">@Ice-samll</a>、<a href="https://gitee.com/Suomm" target="_blank">@王帅</a>、<a href="https://gitee.com/ice-samll" target="_blank">@Ice-samll</a>、<a href="https://gitee.com/freeman" target="_blank">@freeman</a><span>&nbsp;</span>Liu、<a href="https://gitee.com/guanmengyuan" target="_blank">@guanmengyuan</a>、@Watcher.Wang、@shaoerkuai</p><div><p style="margin-left:0; margin-right:0">更多的代码贡献者，请参考：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fintro%2Fwhat-is-mybatisflex.html%23%25E8%25B4%25A1%25E7%258C%25AE%25E8%2580%2585" target="_blank">https://mybatis-flex.com/zh/intro/what-is-mybatisflex.html#%E8%B4%A1%E7%8C%AE%E8%80%85</a></p></div><h4><strong>进一步了解 MyBatis-Flex 框架，请参考一下链接：</strong></h4><ul><li>1、快速开始：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fintro%2Fgetting-started.html" target="_blank">https://mybatis-flex.com/zh/intro/getting-started.html</a></li><li>2、多表关联查询：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fbase%2Fquery.html%23%25E5%2585%25B3%25E8%2581%2594%25E6%259F%25A5%25E8%25AF%25A2-%25E6%2588%2596%25E5%25A4%259A%25E8%25A1%25A8%25E6%259F%25A5%25E8%25AF%25A2" target="_blank">https://mybatis-flex.com/zh/base/query.html</a></li><li>3、一对多、多对一：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fbase%2Frelations-query.html" target="_blank">https://mybatis-flex.com/zh/base/relations-query.html</a></li><li>4、灵活的 QueryWrapper：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fbase%2Fquerywrapper.html" target="_blank">https://mybatis-flex.com/zh/base/querywrapper.html</a></li><li>5、逻辑删除：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fcore%2Flogic-delete.html" target="_blank">https://mybatis-flex.com/zh/core/logic-delete.html</a></li><li>6、乐观锁：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fcore%2Fversion.html" target="_blank">https://mybatis-flex.com/zh/core/version.html</a></li><li>7、数据填充：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fcore%2Ffill.html" target="_blank">https://mybatis-flex.com/zh/core/fill.html</a></li><li>6、数据脱敏：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fcore%2Fmask.html" target="_blank">https://mybatis-flex.com/zh/core/mask.html</a></li><li>7、SQL 审计：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fcore%2Faudit.html" target="_blank">https://mybatis-flex.com/zh/core/audit.html</a></li><li>8、多数据源：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fcore%2Fmulti-datasource.html" target="_blank">https://mybatis-flex.com/zh/core/multi-datasource.htm</a></li><li>9、数据源加密：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fcore%2Fdatasource-encryption.html" target="_blank">https://mybatis-flex.com/zh/core/datasource-encryption.html</a></li><li>10、动态表名：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fcore%2Fdynamic-table.html" target="_blank">https://mybatis-flex.com/zh/core/dynamic-table.html</a></li><li>11、事务管理：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fcore%2Ftx.html" target="_blank">https://mybatis-flex.com/zh/core/tx.html</a></li><li>12、数据权限：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fcore%2Fdata-permission.html" target="_blank">https://mybatis-flex.com/zh/core/data-permission.html</a></li><li>13、字段权限：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fcore%2Fcolumns-permission.html" target="_blank">https://mybatis-flex.com/zh/core/columns-permission.html</a></li><li>14、字段加密：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fcore%2Fcolumns-encrypt.html" target="_blank">https://mybatis-flex.com/zh/core/columns-encrypt.html</a></li><li>15、字典回写：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fcore%2Fcolumns-dict.html" target="_blank">https://mybatis-flex.com/zh/core/columns-dict.html</a></li><li>16、枚举属性：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fcore%2Fenum-property.html" target="_blank">https://mybatis-flex.com/zh/core/enum-property.html</a></li><li>17、多租户：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fcore%2Fmulti-tenancy.html" target="_blank">https://mybatis-flex.com/zh/core/multi-tenancy.html</a></li><li>18、代码生成器：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fothers%2Fcodegen.html" target="_blank">https://mybatis-flex.com/zh/others/codegen.html</a></li><li>19、QQ 交流群：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fintro%2Fqq-group.html" target="_blank">https://mybatis-flex.com/zh/intro/qq-group.html</a></li><li>20、更好用的功能正在路上：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com" target="_blank">https://mybatis-flex.com</a></li></ul><h4><strong>bilibili 视频教程（免费）：</strong></h4><p style="color:#3c3c43; margin-left:0; margin-right:0; text-align:start"><strong>课程 1：《MyBatis-Flex 视频教程》</strong></p><blockquote><p style="color:var(--vp-c-text-2); margin-left:0; margin-right:0">课程简介：该课程由<span>&nbsp;</span><a href="https://gitee.com/Suomm" target="_blank">王帅</a><span>&nbsp;</span>老师录制主讲，<span>&nbsp;</span><a href="https://gitee.com/Suomm" target="_blank">王帅</a><span>&nbsp;</span>老师也是除了作者以外，对 MyBatis-Flex 代码贡献最大的 committer。 其无论对 MyBatis 还是 MyBatis-Flex，都有非常深入的理解。</p></blockquote><p style="color:#3c3c43; margin-left:0; margin-right:0; text-align:start">课程地址：</p><p style="color:#3c3c43; margin-left:0; margin-right:0; text-align:start"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV11h411A7cU" target="_blank">https://www.bilibili.com/video/BV11h411A7cU</a></p><hr><p style="color:#3c3c43; margin-left:0; margin-right:0; text-align:start"><strong>课程 2：《MyBatis-Flex 轻松掌握，从零基础到高级应用的完整教程！持续更新中～》</strong></p><blockquote><p style="color:var(--vp-c-text-2); margin-left:0; margin-right:0">课程简介：该课程由周游老师录制，周游老师有多年的开发经验以及丰富的教学经验，能够把 MyBatis-Flex 的许多原理知识讲解的通俗易懂、深入浅出。</p></blockquote><p style="color:#3c3c43; margin-left:0; margin-right:0; text-align:start">课程地址：</p><p style="color:#3c3c43; margin-left:0; margin-right:0; text-align:start"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1kF411r7ky" target="_blank">https://www.bilibili.com/video/BV1kF411r7ky</a></p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 08 Oct 2023 03:50:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/260954/mybatis-flex-1-6-9-released</guid>
            <link>https://www.oschina.net/news/260954/mybatis-flex-1-6-9-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[CMake 3.27.7 发布，开源构建系统]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>CMake 是一个跨平台的自动化构建系统，它使用一个名为 CMakeLists.txt 的文件来描述构建过程，可以产生标准的构建文件，如 Unix 的 Makefile 或 Windows Visual C++ 的 projects/workspaces 。文件 CMakeLists.txt 需要手工编写，也可以通过编写脚本进行半自动的生成。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">CMake 3.27.7 现已发布，一些亮点更新内容如下：</p><ul><li><span style="color:#000000">Android：-std=c++23 需要 Clang 18</span></li><li><span style="color:#000000">测试：Clarify RunCMake.CTestTimeout case name</span></li><li><span style="color:#000000">ctest：恢复对 --timeout 值高于默认测试超时的支持</span></li><li><span style="color:#000000">帮助：记录已设置变量的 CMP0124 行为</span></li><li><span style="color:#000000">FindPostgreSQL：添加对版本 16 的支持</span></li><li><span style="color:#000000">Linting：修复&nbsp;empty evaluated genex</span></li></ul><p><span style="color:#000000"><span style="background-color:#ffffff">详情可</span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.kitware.com%2Fcmake-3-27-7-available-for-download%2F" target="_blank">查看发布公告</a><span style="background-color:#ffffff; color:#333333">。</span></p><p><span style="background-color:#ffffff; color:#333333">下载：</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcmake.org%2Fdownload%2F" target="_blank">https://cmake.org/download/</a></p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 08 Oct 2023 02:48:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/260939/cmake-3-27-7-released</guid>
            <link>https://www.oschina.net/news/260939/cmake-3-27-7-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[DBShop 商城系统 V3.3 Release 231008 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">DBShop 企业级商城系统，使用 PHP 语言基于 Laminas（Zendframework 3） + Doctrine 2 组合框架开发完成。可定制、多终端、多场景、多支付、多货币；严谨的安全机制，可靠稳定；方便的操作管理，节约时间；清晰的权限分配，责任分明；便捷的更新处理，一键搞定；丰富的插件市场，扩展无限。</p><h2>系统框架</h2><ul><li>Laminas （Zendframework 3）</li><li>Doctrine 2</li></ul><h2>环境要求</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>服务器系统</strong>&nbsp;Linux、Unix、Mac、Windows、其他</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>web 服务器</strong>&nbsp;Apache、Nginx、IIS、其他</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>MySQL 版本</strong>&nbsp;&gt;= 5.6</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>PHP 版本</strong>&nbsp;&gt;= 7.4</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>PHP 扩展 | 库</strong></p><ul><li>PDO</li><li>SSL（openssl）</li><li>Fileinfo</li><li>intl</li><li>Curl</li><li>GD2</li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>系统空间</strong>&nbsp;&gt;= 500M</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>更新日志：</strong><br> 新增，前台会员注册加入扩展功能<br> 修正，在线客服 qq 图标失效问题<br> 优化，在线客服新增微信显示<br> 优化，提示信息的语言包修改<br> 优化，货币设置加入小数位数设置<br> 优化，货币显示<br> 优化，订单金额显示优化<br> 优化，语言包<br> 优化，默认模板和健康绿模板去掉底部服务承诺<br> 优化，货币设置加入货币单位<br> 优化，前台调用<br> 优化，文章图片删除</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>在线文档地址：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.loongdom.com.cn" target="_blank">https://docs.loongdom.com.cn/</a></strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>前台演示地址：</strong><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fv3.dbshop.net%2F" target="_blank">http://v3.dbshop.net</a><br><strong>后台演示地址：</strong><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fv3.dbshop.net%2Fadmin" target="_blank">http://v3.dbshop.net/admin</a><br><strong>后台登录账号：</strong>dbshop<br><strong>后台登录密码：</strong>123456</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><img alt="" height="318" src="https://oscimg.oschina.net/oscnet/up-935399731889136addb4890704783bb91b2.png" width="700" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><img alt="" height="438" src="https://oscimg.oschina.net/oscnet/up-2a10d87169518ff3590a641b918e95a2814.png" width="700" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><img alt="" height="306" src="https://oscimg.oschina.net/oscnet/up-4c99aa3bc36cd815ba6585a6c400b726bb7.png" width="700" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><img alt="" height="404" src="https://oscimg.oschina.net/oscnet/up-21a7773040bd4fab00897a97c87e3d9c188.png" width="700" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><img alt="" height="396" src="https://oscimg.oschina.net/oscnet/up-4bc8e4e8bc97e0f0855e8337dce22da947c.png" width="700" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><img alt="" height="410" src="https://oscimg.oschina.net/oscnet/up-fdec0119a9a8bdc28c9cf30e11f42cafd3b.png" width="700" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>下载地址：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdownload.loongdom.com.cn/dbshop/V3.3/DBShopV3.3_Release231008.tar.gz" target="_blank">&nbsp;https://download.loongdom.com.cn/dbshop/V3.3/DBShopV3.3_Release231008.tar.gz</a></strong></p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 08 Oct 2023 02:26:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/260937</guid>
            <link>https://www.oschina.net/news/260937</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[生产力桌面工具—想天工作台 7.0.30 版本发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><img src="https://www.apps.vip/wp-content/uploads/2023/09/1695004332-%E6%A1%8C%E9%9D%A2-1385x800.png" referrerpolicy="no-referrer"></p><p><span style="background-color:#ffffff; color:#40485b">想天工作台是一款集桌面管理、效率办公、游戏娱乐为一体的副屏「系统」（副屏最佳拍档，也可以在主屏窗口化使用）。 基于 Electron 和 Vue 全家桶开发。欢迎各位前端开发的小伙伴下载运行体验。</span></p><p><span style="background-color:#ffffff; color:#40485b">产品主页：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.apps.vip" target="_blank">www.apps.vip</a></span></p><p>目前客户端部分已经完全开源，并托管至 Gitee 上，近期我们也会推出离线版本，支持无服务端依赖运行。</p><p>本次 7.0.30 更新内容如下：<br><span style="color:#6a8759">[</span><span style="color:#6a8759">新增</span><span style="color:#6a8759">]</span><span style="color:#6a8759">新增</span><span style="color:#6a8759">2</span><span style="color:#6a8759">种番茄钟卡片</span><br><span style="color:#6a8759">[</span><span style="color:#6a8759">新增</span><span style="color:#6a8759">]</span><span style="color:#6a8759">番茄钟支持顶部状态栏提示，支持记录番茄数</span><br><span style="color:#6a8759">[</span><span style="color:#6a8759">新增</span><span style="color:#6a8759">]</span><span style="color:#6a8759">部分支线任务</span><br><span style="color:#6a8759">[</span><span style="color:#6a8759">新增</span><span style="color:#6a8759">]</span><span style="color:#6a8759">社群支持应用和分类的创建</span><br><span style="color:#6a8759">[</span><span style="color:#6a8759">新增</span><span style="color:#6a8759">]</span><span style="color:#6a8759">社群的社区应用支持评论和发布内容</span><br><span style="color:#6a8759">[</span><span style="color:#6a8759">优化</span><span style="color:#6a8759">]</span><span style="color:#6a8759">优化待办组件的右键菜单和应用样式</span></p><p><span style="color:#6a8759">[优化]</span><span style="color:#6a8759">优化桌面图标获取方式，获取到的图标非常高清</span><br><span style="color:#6a8759">[</span><span style="color:#6a8759">修复</span><span style="color:#6a8759">]</span><span style="color:#6a8759">修复其他一些小问题</span></p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 08 Oct 2023 02:15:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/260932/xiangtian-workbench-7-0-30-released</guid>
            <link>https://www.oschina.net/news/260932/xiangtian-workbench-7-0-30-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[go-carbon v2.2.9 发布，轻量级、语义化、对开发者友好的 Golang 时间处理库]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">carbon 是一个轻量级、语义化、对开发者友好的 Golang 时间处理库，支持链式调用、农历和 gorm、xorm 等主流 orm</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">目前已被<span><span>&nbsp;</span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fyinggaozhen%2Fawesome-go-cn%23%25E6%2597%25A5%25E6%259C%259F%25E5%2592%258C%25E6%2597%25B6%25E9%2597%25B4" target="_blank">awesome-go-cn</a><span><span>&nbsp;</span></span>收录，如果您觉得不错，请给个 star 吧</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgolang-module%2Fcarbon" target="_blank">github.com/golang-module/carbon</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/golang-module/carbon" target="_blank">gitee.com/golang-module/carbon</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>更新日志</strong></p><ul><li>修复获取年龄方法计算错误的 bug</li><li>修复乌克兰语部分翻译错误的 bug</li><li>更改 <span style="color:#999999">DateTime</span>、<span style="color:#999999">DateTimeXXX</span>、<span style="color:#999999">Date</span>、<span style="color:#999999">DateXXX</span> 等结构体的类型 <p>&nbsp;</p></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Sun, 08 Oct 2023 02:05:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/260929/go-carbon-2-2-9-released</guid>
            <link>https://www.oschina.net/news/260929/go-carbon-2-2-9-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Hikyuu 1.2.9 发布，高性能量化交易研究框架]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>Hikyuu 是一款基于 C++/Python 的高性能开源量化交易研究框架</strong>，用于快速策略分析及回测。与其他量化平台或回测软件相比，具备：</p><ol><li>超快的回测速度（百万级别 K 线 1~2 秒完成 A 股全市场计算）；</li><li>对完整的系统交易理念进行抽象，并分解为不同的组件，通过重用不同的方面策略，最大化的减轻编写策略的负担。</li></ol><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">更多信息，参见项目主页:<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhikyuu.org" target="_blank">https://hikyuu.org</a><span>&nbsp;</span>或<span>&nbsp;</span><a href="http://fasiondog.gitee.io/hikyuu">http://fasiondog.gitee.io/hikyuu</a></p><p><strong><span style="background-color:#fdfdfe; color:#05073b">在 Hikyuu 1.2.9 版本中，我们进行了一系列重要的修复和功能增强，该版本更新如下：</span></strong></p><div><div><span style="color:#c586c0">1.</span> 稳定性与兼容性
 </div><div>
  &nbsp; &nbsp; - 修复了 setup.py 更新编译模式时的问题，确保并行编译参数能够正常生效
 </div><div>
  &nbsp; &nbsp; - 对 HikyuuTdx 数据下载进行了优化，增加了超时处理，以防止网络连接问题导致进度停滞
 </div><div>
  &nbsp; &nbsp; - 增加了对 pytdx 连接失败的检测，以便记录相关日志
 </div> &nbsp; 
 <div>
  2. 算法优化
 </div><div>
  &nbsp; &nbsp; - 优化了 VAR 和 STDP 算法，现在使用移位算法，提升了计算效率
 </div><div>
  &nbsp; &nbsp; - 修复了 weave formula 中缺少 break 的问题，避免了在打印时出现崩溃
 </div><div>
  &nbsp; &nbsp; - 增加了相关系数指标 CORR
 </div><div>
  &nbsp; &nbsp; - 修复了 SUM 中缺少 discard 设置的问题
 </div><div>
  &nbsp; &nbsp; - 修复了 setDiscard 在 discard 小于 size 时未对 m_discard 进行赋值的问题
 </div> &nbsp; 
 <div>
  3. 功能增强
 </div><div>
  &nbsp; &nbsp; - 新增 pyechart 绘图支持
 </div><div>
  &nbsp; &nbsp; - 在 ipython/notebook 模式下，自动设定 matplotlib 绘图为交互模式，并改善了 bokeh 绘图效果
 </div><div>
  &nbsp; &nbsp; - StrategyBase 现在可以直接获取 StockManager 实例
 </div><div>
  &nbsp; &nbsp; - 自动设置 matplotlib 的中文字体
 </div><div>
  &nbsp; &nbsp; - 增加了 TimerManager 对系统时间发生变化的保护
 </div><div>
  &nbsp; &nbsp; - SQLite kdata driver 新增了支持转换时间间隔的功能
 </div> &nbsp; 
 <div>
  4. 其他修复和改进
 </div><div>
  &nbsp; &nbsp; - 修复 getFinanceInfo 和 getHistoryFinanceInfo 的问题，只对 STOCKTYPE_A 生效
 </div><div>
  &nbsp; &nbsp; - 修复 IndicatorImp::setContext 方法中判断逻辑的问题，确保在遍历过程中 Context 能够正确修改
 </div><div>
  &nbsp; &nbsp; - 增加一下常用了跨平台函数
 </div><div>
  &nbsp; &nbsp; - 添加了反馈信息发送功能
 </div><div>
  &nbsp; &nbsp; - 优化了编译选项，对于部分用户直接使用 xmake 进行编译控制
 </div><div>
  &nbsp; &nbsp; - 修复了 split 函数的缺陷，并新增了 byteToHexStr 系列 byte 转字符串函数
 </div></div></div>
                                    ]]>
            </description>
            <pubDate>Sat, 07 Oct 2023 18:03:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/260918/hikyuu-1-2-9-released</guid>
            <link>https://www.oschina.net/news/260918/hikyuu-1-2-9-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[MyCms v4.7 快捷生成接口，开源无头 CMS 开发后台]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="1704" src="https://oscimg.oschina.net/oscnet/up-be804f9fddc5b95ea3e9702d55b8cbde98f.png" width="3200" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="background-color:#ffffff; color:#40485b">MyCms 是一款基于 Laravel 开发的开源免费的</span>开源多语言商城 CMS 企业建站系统。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="background-color:#ffffff; color:#40485b">MyCms 基于 Apache2.0 开源协议发布，<strong>免费且可商业使用</strong>，欢迎持续关注我们。技术交流 QQ 群：</span><a href="https://gitee.com/link?target=https%3A%2F%2Fqm.qq.com%2Fcgi-bin%2Fqm%2Fqr%3Fk%3Dy3Q3pCWJdIRtCzdLMGdqMv3Jx04bib8D%26jump_from%3Dwebapi">887522124</a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><code>加群请备注来源：如 gitee、github、官网等</code></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>v4.7 更新内容</strong></p><p><span style="background-color:#ffffff; color:#40485b">opt:公众号菜单优化</span><br><span style="background-color:#ffffff; color:#40485b">dev:API 接口生成管理</span><br><span style="background-color:#ffffff; color:#40485b">dev:数据表 CURD 管理</span><br><span style="background-color:#ffffff; color:#40485b">opt:后台返回列表按钮</span><br><span style="background-color:#ffffff; color:#40485b">opt:插件兼容版本</span><br><span style="background-color:#ffffff; color:#40485b">opt:后台 admin.js</span></p><p><strong>更新说明</strong></p><p><strong><span style="background-color:#ffffff; color:#40485b">1、公众号菜单操作界面优化</span></strong></p><p><img alt="" height="1163" src="https://oscimg.oschina.net/oscnet/up-42fc3fbb9c02de7f2dbf459128b1328b870.png" width="2178" referrerpolicy="no-referrer"></p><p><strong>2、【重点】<span style="background-color:#ffffff; color:#40485b">API 接口快捷生成</span></strong></p><p>使用方式：</p><p>1、数据表方式：直接读取数据库数据表数据</p><p><span style="background-color:#ffffff; color:#40485b">示例接口：</span>/api/entry?path=regions&amp;pid=0</p><p><img alt="" height="1810" src="https://oscimg.oschina.net/oscnet/up-cca46bc71343e982abf20ec72d9b71e18fa.png" width="2519" referrerpolicy="no-referrer"></p><p>2、接口转发：对接第三方接口（比如聚合等数据提供商）</p><p><span style="background-color:#ffffff; color:#40485b">示例接口：</span>/api/entry?path=jump&amp;height=177&amp;weight=77</p><p><br><img alt="" src="https://oscimg.oschina.net/oscnet/up-f0fe1b36affbcb35e483ff2fe5117f978f6.png" referrerpolicy="no-referrer"></p><p>3、固定内容：返回自定义的内容</p><p><span style="background-color:#ffffff; color:#40485b">示例接口：</span>/api/entry?path=content</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-40d1e0180f7089563267b7ecc3be36967c5.png" referrerpolicy="no-referrer"></p><p>4、自定义操作：自行编写代码，自定义接口操作</p><p><span style="background-color:#ffffff; color:#40485b">示例接口：</span>/api/entry?path=demo</p><p><br><img alt="" src="https://oscimg.oschina.net/oscnet/up-fbcd28dd1411516ba3c326cd7f8cdd9cccf.png" referrerpolicy="no-referrer"></p><p><strong>3、【重点】数据表管理</strong></p><p>可以直接在后台管理数据表，以及管理数据表结构以及数据</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-47ef03bfc44ec5065c171c053d38241a71d.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>站点地址</strong></p><ul><li><p style="margin-left:0; margin-right:0">官方网站 : https://www.mycms.net.cn/</p></li><li><p style="margin-left:0; margin-right:0">使用手册：https://www.mycms.net.cn/shouce</p></li><li><p style="margin-left:0; margin-right:0">二次开发：https://www.mycms.net.cn/dev</p></li><li><p style="margin-left:0; margin-right:0">API 文档：https://www.mycms.net.cn/api-doc</p></li><li><p style="margin-left:0; margin-right:0">模板下载：https://www.mycms.net.cn/muban</p></li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>优秀案例</strong></p><ul><li>在线计算网<span>&nbsp;</span>: https://www.zaixianjisuan.com/</li><li>程序员导航<span>&nbsp;</span>: https://nav.mycms.net.cn/</li><li>火马活码：https://www.huomahuoma.com/</li><li>编程宝典：https://www.bianchengbaodian.com</li><li>品牌大观：https://www.pinpaidaguan.com</li></ul></div>
                                    ]]>
            </description>
            <pubDate>Sat, 07 Oct 2023 15:54:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/260913/mycms-4-7-released</guid>
            <link>https://www.oschina.net/news/260913/mycms-4-7-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Go 1.21.2 & 1.20.9 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Go 近日发布了 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgolang%2Fgo%2Freleases%2Ftag%2Fgo1.21.2" target="_blank">Go 1.21.2 </a>和<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgolang%2Fgo%2Freleases%2Ftag%2Fgo1.20.9" target="_blank"> Go 1.20.9 </a>两个小版本。</p><p>Go 1.21.2 是 1.21 的第 2 个安全补丁，主要涉及一个安全更新：</p><ul><li><strong>cmd/go：line 指令允许在构建期间任意执行</strong></li></ul><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgolang%2Fgo%2Fissues%2F63211" target="_blank">根据 issue 的描述</a>，"//line" 指令可用于绕过对 "//go：cgo_" 指令的限制，允许在兼容期间传递阻塞的链接器和编译器标志。这可能导致在运行"go build"时意外执行任意代码。</p><p>line 指令需要指令所在文件的绝对路径，这使得解决此问题变得更加复杂。</p><blockquote><p><img height="931" src="https://static.oschina.net/uploads/space/2023/1008/162018_ZOvZ_2720166.png" width="2124" referrerpolicy="no-referrer"></p></blockquote><p>Go1.21.2 更新涉及到的 issue 如下：</p><p><img src="https://static.oschina.net/uploads/space/2023/1008/162328_0YqZ_2720166.png" referrerpolicy="no-referrer"></p><p>详情：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgolang%2Fgo%2Fissues%3Fq%3Dmilestone%253AGo1.21.2%2Blabel%253ACherryPickApproved" target="_blank">https://github.com/golang/go/issues?q=milestone%3AGo1.21.2+label%3ACherryPickApproved</a></p></div>
                                    ]]>
            </description>
            <pubDate>Sat, 07 Oct 2023 08:24:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/260842/go-1-21-2</guid>
            <link>https://www.oschina.net/news/260842/go-1-21-2</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Debian 12.2 & 11.8 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Debian 近日为两个分支发布了更新：<strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.debian.org%2FNews%2F2023%2F20231007" target="_blank">12.2 </a>和 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.debian.org%2FNews%2F2023%2F2023100702" target="_blank">11.8</a></strong>。两个版本都是常规性更新，主要是修复错误和安全问题。</p><p>Debian 12.2 是 12 系列的第 2 个维护更新，修复了安全漏洞和严重问题。</p><ul><li>引入微码 (microcode) 更新，包含针对 AMD Zen4 处理器中 "AMD Inception" 的修复</li><li><p>修复与 Python 3.11 的兼容性问题</p></li><li><p>修复解析 JPEG 附件时出现崩溃的问题</p></li><li><p>修复远程代码执行漏洞&nbsp;[CVE-2023-40477]</p></li><li><p>……</p></li></ul><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.debian.org%2FNews%2F2023%2F20231007" target="_blank">详情</a>。</p></div>
                                    ]]>
            </description>
            <pubDate>Sat, 07 Oct 2023 07:24:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/260830/debian-12-2-n-11-8-released</guid>
            <link>https://www.oschina.net/news/260830/debian-12-2-n-11-8-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[ModStartBlog v8.3.0 支持音频 MP3 文件，表单快速编辑优化]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#34495e; margin-left:.5em; margin-right:.5em; text-align:left">ModStart 是一个基于 Laravel 模块化极速开发框架。模块市场拥有丰富的功能应用，支持后台一键快速安装，让开发者能快的实现业务功能开发。</p><p style="color:#34495e; margin-left:.5em; margin-right:.5em; text-align:left">系统完全开源，基于 Apache 2.0 开源协议。</p><p style="color:#34495e; margin-left:.5em; margin-right:.5em; text-align:left"><img alt="系统演示" src="https://ms-assets.modstart.com/data/image/2022/05/30/7459_smgt_9533.jpg" referrerpolicy="no-referrer"></p><h2>功能特性</h2><ul><li><p style="margin-left:.5em; margin-right:.5em">丰富的模块市场，后台一键快速安装</p></li><li><p style="margin-left:.5em; margin-right:.5em">会员模块通用且完整，支持完整的 API 调用</p></li><li><p style="margin-left:.5em; margin-right:.5em">大文件分片上传，进度条显示，已上传文件管理</p></li><li><p style="margin-left:.5em; margin-right:.5em">强大的模块扩展功能，所有模块可以无缝集成，支持在线安装、卸载模块</p></li><li><p style="margin-left:.5em; margin-right:.5em">完善的开发助手，实现模块、主题的的一键创建</p></li><li><p style="margin-left:.5em; margin-right:.5em">完善的后台权限管理，支持基于 RBAC 的权限管理系统</p></li><li><p style="margin-left:.5em; margin-right:.5em">后台管理支持使用手机、平板、PC，无论何时何地都可方便管理</p></li><li><p style="margin-left:.5em; margin-right:.5em">第三方登录（QQ、微信、微博、支付宝、微信小程序）</p></li><li><p style="margin-left:.5em; margin-right:.5em">第三方支付支持（微信、支付宝、支付宝当面付、微信扫码、微信小程序）</p></li><li><p style="margin-left:.5em; margin-right:.5em">第三方云存储支持，支持云储存分片上传（阿里云、百度云、华为云、腾讯云、FTP、七牛云、UCloud、又拍云）</p></li><li><p style="margin-left:.5em; margin-right:.5em">第三方短信支持（阿里云、腾讯云、华为云、百度云、253 云通讯、聚合、七牛云、融云、赛邮、UCloud、云片、网易云）</p></li></ul><h2>V8.3.0 版本更新</h2><p style="color:#34495e; margin-left:.5em; margin-right:.5em; text-align:left">2023 年 10 月 08 日 ModStartBlog 发布 v8.3.0 版本，增加了以下 8 个特性：</p><ul><li><p style="margin-left:.5em; margin-right:.5em">[新功能] SiteUrlProvider 增加按业务变更方法</p></li><li><p style="margin-left:.5em; margin-right:.5em">[新功能] 富文本增加 MP3 文件等音频内容</p></li><li><p style="margin-left:.5em; margin-right:.5em">[新功能] ImageSelector 支持 show-preview-url 参数，图片预览是否显示链接</p></li><li><p style="margin-left:.5em; margin-right:.5em">[新功能] 移动端增加 c-rich-html 组件，支持多端富文本兼容显示</p></li><li><p style="margin-left:.5em; margin-right:.5em">[系统优化] 后台注册登录链接生成使用非路由生成</p></li><li><p style="margin-left:.5em; margin-right:.5em">[系统优化] 树状结构 Select 显示优化</p></li><li><p style="margin-left:.5em; margin-right:.5em">[系统优化] AES 加密解密方法优化，支持更多模式</p></li><li><p style="margin-left:.5em; margin-right:.5em">[系统优化] 表单快速编辑功能优化</p></li></ul><h2>模块市场一键安装</h2><p style="color:#34495e; margin-left:.5em; margin-right:.5em; text-align:left">系统内置模块市场，有行业应用、插件、云存储、云短信等功能模块，后台支持一键安装、启用、禁用、卸载，可快速搭建属于自己的系统应用。</p><p style="color:#34495e; margin-left:.5em; margin-right:.5em; text-align:left"><img alt="功能模块" src="https://ms-assets.modstart.com/data/image/2022/04/18/22844_bgyg_5120.jpeg" referrerpolicy="no-referrer"></p><h2>系统演示与文档</h2><ul><li><p style="margin-left:.5em; margin-right:.5em">码云仓库：<a href="https://gitee.com/modstart/ModStartBlog">https://gitee.com/modstart/ModStartBlog</a></p></li><li><p style="margin-left:.5em; margin-right:.5em">Github 仓库：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmodstart%2FModStartBlog" target="_blank">https://github.com/modstart/ModStartBlog</a></p></li><li><p style="margin-left:.5em; margin-right:.5em">系统演示：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.demo.tecmz.com%2F" target="_blank">https://blog.demo.tecmz.com/</a></p></li><li><p style="margin-left:.5em; margin-right:.5em">下载试用：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmodstart.com%2Fdownload" target="_blank">https://modstart.com/download</a></p></li><li><p style="margin-left:.5em; margin-right:.5em">开发者文档：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmodstart.com%2Fdoc" target="_blank">https://modstart.com/doc</a></p></li><li><p style="margin-left:.5em; margin-right:.5em">模块市场：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmodstart.com%2Fstore" target="_blank">https://modstart.com/store</a></p></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Sat, 07 Oct 2023 07:02:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/260820/modstartblog-8-3-0-released</guid>
            <link>https://www.oschina.net/news/260820/modstartblog-8-3-0-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Vue3 组件库 fes-design 版本更新 v0.8.10]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h2>About</h2><p style="color:#1f2328; text-align:start">Vue3 组件库，Typescirpt 编写，高性能，支持按需引入、国际化、可配置主题。</p><div><span><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Ffes-design.mumblefe.cn%2F" target="_blank">fes-design.mumblefe.cn/</a></span></div><h2><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FWeBankFinTech%2Ffes-design%2Fcompare%2Fv0.8.9...v0.8.10" target="_blank">0.8.10</a><span>&nbsp;</span>(2023-10-08)</h2><h3>Bug Fixes</h3><ul><li><strong>drawer:</strong><span>&nbsp;</span>解决无标题情况下，关闭按钮不可点击的问题 (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FWeBankFinTech%2Ffes-design%2Fissues%2F484" target="_blank">#484</a>) (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FWeBankFinTech%2Ffes-design%2Fcommit%2Fa7aad88b127be86be2510e80718258c338964b14" target="_blank">a7aad88</a>)</li><li><strong>table:</strong><span>&nbsp;</span>解决设置 height 时，高度误差问题 (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FWeBankFinTech%2Ffes-design%2Fissues%2F483" target="_blank">#483</a>) (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FWeBankFinTech%2Ffes-design%2Fcommit%2F665eb392fc4e7231b8111a36d1c7e6a6a0b2bab3" target="_blank">665eb39</a>)</li></ul><h3>Features</h3><ul><li><strong>upload:</strong><span>&nbsp;</span>增加 clearFiles、addFile、removeFile 方法，支持覆盖上传 (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FWeBankFinTech%2Ffes-design%2Fissues%2F482" target="_blank">#482</a>) (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FWeBankFinTech%2Ffes-design%2Fcommit%2Fa91a18a0459f66539b77af4b8511ddcb1dd96985" target="_blank">a91a18a</a>)</li></ul></div>
                                    ]]>
            </description>
            <pubDate>Sat, 07 Oct 2023 06:57:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/260818/fes-design-0-8-10-released</guid>
            <link>https://www.oschina.net/news/260818/fes-design-0-8-10-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[【 webshell 文件传输工具 trzsz.js 】发布 v1.1.3]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>【 webshell 文件传输工具&nbsp;trzsz.js&nbsp;】发布 v1.1.3，使用异步的 fs API，提高了接入的可扩展性。</p><hr><h2>开发指引</h2><ul><li><p style="margin-left:0; margin-right:0">添加依赖</p><pre><code><span style="color:#6f42c1">npm</span><span style="color:#032f62">install trzsz</span></code></pre><p style="margin-left:0; margin-right:0">或者</p><pre><code><span style="color:#6f42c1">yarn</span><span style="color:#032f62">add trzsz</span></code></pre></li><li><p style="margin-left:0; margin-right:0">在 Node.js 中引用</p><div><div><pre><code><strong><span style="color:#d73a49">import</span></strong><span>{</span><span>TrzszFilter</span><span>}</span><strong><span style="color:#d73a49">from</span></strong><span><span style="color:#032f62">"</span></span><span style="color:#dd1144"><span style="color:#032f62">trzsz</span></span><span><span style="color:#032f62">"</span></span><span>;</span></code></pre></div></div><p style="margin-left:0; margin-right:0">或者</p><div><div><pre><code><strong><span style="color:#d73a49">const</span></strong><span>{</span><span>TrzszFilter</span><span>}</span><strong>=</strong><span><span>require</span></span><span>(</span><span><span style="color:#032f62">"</span></span><span style="color:#dd1144"><span style="color:#032f62">trzsz</span></span><span><span style="color:#032f62">"</span></span><span>);</span></code></pre></div></div></li><li><p style="margin-left:0; margin-right:0">或者在浏览器中引用</p><div><div><pre><code><span style="color:#000080"><span style="color:#333333">&lt;<span style="color:#22863a">script</span></span></span><span style="color:#008080"><span style="color:#333333"><span style="color:#6f42c1">src</span>=</span></span><span style="color:#dd1144"><span style="color:#333333"><span style="color:#032f62">"node_modules/trzsz/lib/trzsz.js"</span></span></span><span style="color:#000080"><span style="color:#333333">&gt;</span><span style="color:#333333">&lt;/<span style="color:#22863a">script</span>&gt;</span></span></code></pre></div></div></li><li><p style="margin-left:0; margin-right:0">创建<span>&nbsp;</span><code>TrzszFilter</code><span>&nbsp;</span>对象（ 每个登录服务器的连接创建一个相应的 ）</p><div><div><pre><code><strong><span style="color:#d73a49">const</span></strong><span>trzszFilter</span><strong>=</strong><strong><span style="color:#d73a49">new</span></strong><span>TrzszFilter</span><span>({</span><em><span style="color:#6a737d">// 这里设置 trzsz 的属性，详情请参考下文。</span></em><span>});</span></code></pre></div></div></li><li><p style="margin-left:0; margin-right:0">一般来说，服务器的输出会转发到终端进行显示，创建<span>&nbsp;</span><code>TrzszFilter</code><span>&nbsp;</span>过滤器，接受服务器的输出，并转发给终端。</p><div><div><pre><code><strong><span style="color:#d73a49">const</span></strong><span>trzszFilter</span><strong>=</strong><strong><span style="color:#d73a49">new</span></strong><span>TrzszFilter</span><span>({</span><em><span style="color:#6a737d">// 将服务器的输出转发给终端进行显示，当用户在服务器上执行 trz / tsz 命令时，输出则会被接管。</span></em><span style="color:#008080">writeToTerminal</span><span>:</span><span><span>(</span></span><span><span><span>data</span></span></span><span><span>)</span></span><span></span><strong><span>=&gt;</span></strong><span>terminal</span><span>.</span><span>write</span><span>(</span><strong><span style="color:#d73a49">typeof</span></strong><span>data</span><strong>===</strong><span><span style="color:#032f62">"</span></span><span style="color:#dd1144"><span style="color:#032f62">string</span></span><span><span style="color:#032f62">"</span></span><span>?</span><span>data</span><span>:</span><strong><span style="color:#d73a49">new</span></strong><span style="color:#0086b3"><span>Uint8Array</span></span><span>(</span><span>data</span><span>)),</span><span>});</span><em><span style="color:#6a737d">// 将服务器的输出转发给 TrzszFilter 进行处理，一般会原样转发回上面定义的 writeToTerminal 函数。</span></em><span>webSocket</span><span>.</span><span>addEventListener</span><span>(</span><span><span style="color:#032f62">"</span></span><span style="color:#dd1144"><span style="color:#032f62">message</span></span><span><span style="color:#032f62">"</span></span><span>,</span><span><span>(</span></span><span><span><span>ev</span></span></span><span><span>)</span></span><span></span><strong><span>=&gt;</span></strong><span>trzszFilter</span><span>.</span><span>processServerOutput</span><span>(</span><span>ev</span><span>.</span><span>data</span><span>));</span></code></pre></div></div></li><li><p style="margin-left:0; margin-right:0">一般来说，用户的输入会转发到服务器上，创建<span>&nbsp;</span><code>TrzszFilter</code><span>&nbsp;</span>过滤器，接受用户的输入，并转发给服务器。</p><div><div><pre><code><strong><span style="color:#d73a49">const</span></strong><span>trzszFilter</span><strong>=</strong><strong><span style="color:#d73a49">new</span></strong><span>TrzszFilter</span><span>({</span><em><span style="color:#6a737d">// 将用户的输入转发到服务器上，当 trz / tsz 上传或下载时，输入则会被忽略，ctrl + c 会停止传输。</span></em><span style="color:#008080">sendToServer</span><span>:</span><span><span>(</span></span><span><span><span>data</span></span></span><span><span>)</span></span><span></span><strong><span>=&gt;</span></strong><span>webSocket</span><span>.</span><span>send</span><span>(</span><span>data</span><span>),</span><span>});</span><em><span style="color:#6a737d">// 将用户的输入转发给 TrzszFilter 进行处理，一般会原样转发回上面定义的 sendToServer 函数。</span></em><span>terminal</span><span>.</span><span>onData</span><span>(<span>(</span></span><span><span><span>data</span></span></span><span><span>)</span></span><span></span><strong><span>=&gt;</span></strong><span>trzszFilter</span><span>.</span><span>processTerminalInput</span><span>(</span><span>data</span><span>));</span><em><span style="color:#6a737d">// 将用户的鼠标事件转发给 TrzszFilter 进行处理，一般会原样转发回上面定义的 sendToServer 函数。</span></em><span>terminal</span><span>.</span><span>onBinary</span><span>(<span>(</span></span><span><span><span>data</span></span></span><span><span>)</span></span><span></span><strong><span>=&gt;</span></strong><span>trzszFilter</span><span>.</span><span>processBinaryInput</span><span>(</span><span>data</span><span>));</span></code></pre></div></div></li><li><p style="margin-left:0; margin-right:0">需要告知<span>&nbsp;</span><code>TrzszFilter</code><span>&nbsp;</span>终端的宽度，在显示进度条时会使用到。</p><div><div><pre><code><strong><span style="color:#d73a49">const</span></strong><span>trzszFilter</span><strong>=</strong><strong><span style="color:#d73a49">new</span></strong><span>TrzszFilter</span><span>({</span><em><span style="color:#6a737d">// 终端的初始宽度</span></em><span style="color:#008080">terminalColumns</span><span>:</span><span>terminal</span><span>.</span><span>cols</span><span>,</span><span>});</span><em><span style="color:#6a737d">// 当终端宽度发生变化时，告知 TrzszFilter 最新的宽度。</span></em><span>terminal</span><span>.</span><span>onResize</span><span>(<span>(</span></span><span><span><span>size</span></span></span><span><span>)</span></span><span></span><strong><span>=&gt;</span></strong><span>trzszFilter</span><span>.</span><span>setTerminalColumns</span><span>(</span><span>size</span><span>.</span><span>cols</span><span>));</span></code></pre></div></div></li><li><p style="margin-left:0; margin-right:0">如果远程服务器是 Windows 命令行，例如<span>&nbsp;</span><code>cmd</code><span>&nbsp;</span>和<span>&nbsp;</span><code>PowerShell</code>。</p><div><div><pre><code><strong><span style="color:#d73a49">const</span></strong><span>trzszFilter</span><strong>=</strong><strong><span style="color:#d73a49">new</span></strong><span>TrzszFilter</span><span>({</span><em><span style="color:#6a737d">// 声明远程服务器是 Windows 的 cmd / PowerShell 等</span></em><span style="color:#008080">isWindowsShell</span><span>:</span><strong><span style="color:#d73a49">true</span></strong><span>,</span><span>});</span></code></pre></div></div></li><li><p style="margin-left:0; margin-right:0">如果是<span>&nbsp;</span><code>Node.js</code><span>&nbsp;</span>运行环境，即能正常执行<span>&nbsp;</span><code>require('fs')</code>，那么<span>&nbsp;</span><code>chooseSendFiles</code><span>&nbsp;</span>and<span>&nbsp;</span><code>chooseSaveDirectory</code><span>&nbsp;</span>是必须的。如果是浏览器运行环境，则会忽略它们。注意是<span>&nbsp;</span><code>async</code><span>&nbsp;</span>函数。</p><div><div><pre><code><strong><span style="color:#d73a49">const</span></strong><span>trzszFilter</span><strong>=</strong><strong><span style="color:#d73a49">new</span></strong><span>TrzszFilter</span><span>({</span><em><span style="color:#6a737d">// 当用户在服务器上执行 trz 命令上传文件时，require('fs') 不报错，则会回调此函数，选择要上传的文件。</span></em><span style="color:#008080">chooseSendFiles</span><span>:</span><strong><span style="color:#d73a49">async</span></strong><span>(</span><span>directory</span><span>)</span><strong>=&gt;</strong><span>{</span><em><span style="color:#6a737d">// 如果 `directory` 参数为 `true`，则应该允许用户选择目录和文件（ 多选 ）。</span></em><em><span style="color:#6a737d">// 如果 `directory` 参数为 `false`，则应该只允许用户选择文件（ 多选 ）。</span></em><em><span style="color:#6a737d">// 返回 `    ` 代表用户取消选择文件，终止上传操作。</span></em><em><span style="color:#6a737d">// 正常应该回一个数组，包含文件或目录的绝对路径，如下：</span></em><strong><span style="color:#d73a49">return</span></strong><span>[</span><span><span style="color:#032f62">"</span></span><span style="color:#dd1144"><span style="color:#032f62">/path/to/file1</span></span><span><span style="color:#032f62">"</span></span><span>,</span><span><span style="color:#032f62">"</span></span><span style="color:#dd1144"><span style="color:#032f62">/path/to/file2</span></span><span><span style="color:#032f62">"</span></span><span>,</span><span><span style="color:#032f62">"</span></span><span style="color:#dd1144"><span style="color:#032f62">/path/to/directory3</span></span><span><span style="color:#032f62">"</span></span><span>];</span><span>},</span><em><span style="color:#6a737d">// 当用户在服务器上执行 tsz 命令下载文件时，require('fs') 不报错，则会回调此函数，选择要保存的路径。</span></em><span style="color:#008080">chooseSaveDirectory</span><span>:</span><strong><span style="color:#d73a49">async</span></strong><span>()</span><strong>=&gt;</strong><span>{</span><em><span style="color:#6a737d">// 返回 `    ` 代表用户取消选择保存路径，终止下载操作。</span></em><em><span style="color:#6a737d">// 正常应该回一个目录的绝对路径，如下：</span></em><strong><span style="color:#d73a49">return</span></strong><span><span style="color:#032f62">"</span></span><span style="color:#dd1144"><span style="color:#032f62">/path/to/directory</span></span><span><span style="color:#032f62">"</span></span><span>;</span><span>},</span><span>});</span></code></pre></div></div></li><li><p style="margin-left:0; margin-right:0">支持拖拽文件和目录上传的功能。</p><div><div><pre><code><span>terminalHtmlElement</span><span>.</span><span>addEventListener</span><span>(</span><span><span style="color:#032f62">"</span></span><span style="color:#dd1144"><span style="color:#032f62">dragover</span></span><span><span style="color:#032f62">"</span></span><span>,</span><span><span><span>(</span></span></span><span><span><span>event</span></span></span><span><span><span>)</span></span></span><span></span><strong><span>=&gt;</span></strong><span>event</span><span>.</span><span>preventDefault</span><span>());</span><span>terminalHtmlElement</span><span>.</span><span>addEventListener</span><span>(</span><span><span style="color:#032f62">"</span></span><span style="color:#dd1144"><span style="color:#032f62">drop</span></span><span><span style="color:#032f62">"</span></span><span>,</span><span><span><span>(</span></span></span><span><span><span>event</span></span></span><span><span><span>)</span></span></span><span></span><strong><span>=&gt;</span></strong><span>{</span><span>event</span><span>.</span><span>preventDefault</span><span>();</span><span>trzszFilter</span><span>.</span><span>uploadFiles</span><span>(</span><span>event</span><span>.</span><span>dataTransfer</span><span>.</span><span>items</span><span>)</span><span>.</span><span><span style="color:#d73a49">then</span></span><span>(<span><span>()</span></span></span><span></span><strong><span>=&gt;</span></strong><span><span>console</span></span><span>.</span><span>log</span><span>(</span><span><span style="color:#032f62">"</span></span><span style="color:#dd1144"><span style="color:#032f62">upload success</span></span><span><span style="color:#032f62">"</span></span><span>))</span><span>.</span><strong><span style="color:#d73a49">catch</span></strong><span>(<span><span>(</span></span></span><span><span><span>err</span></span></span><span><span><span>)</span></span></span><span></span><strong><span>=&gt;</span></strong><span><span>console</span></span><span>.</span><span>log</span><span>(</span><span>err</span><span>));</span><span>});</span></code></pre></div></div></li><li><p style="margin-left:0; margin-right:0">如果你在使用<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.npmjs.com%2Fpackage%2Fxterm-addon-attach" target="_blank">xterm-addon-attach</a><span>&nbsp;</span>插件，只将简单地用<span>&nbsp;</span><code>TrzszAddon</code><span>&nbsp;</span>替换<span>&nbsp;</span><code>AttachAddon</code><span>&nbsp;</span>即可。</p><div><div><pre><code><strong><span style="color:#d73a49">import</span></strong><span>{</span><span>Terminal</span><span>}</span><strong><span style="color:#d73a49">from</span></strong><span><span style="color:#032f62">"</span></span><span style="color:#dd1144"><span style="color:#032f62">xterm</span></span><span><span style="color:#032f62">"</span></span><span>;</span><strong><span style="color:#d73a49">import</span></strong><span>{</span><span>TrzszAddon</span><span>}</span><strong><span style="color:#d73a49">from</span></strong><span><span style="color:#032f62">"</span></span><span style="color:#dd1144"><span style="color:#032f62">trzsz</span></span><span><span style="color:#032f62">"</span></span><span>;</span><strong><span style="color:#d73a49">const</span></strong><span>terminal</span><strong>=</strong><strong><span style="color:#d73a49">new</span></strong><span>Terminal</span><span>();</span><strong><span style="color:#d73a49">const</span></strong><span>trzszAddon</span><strong>=</strong><strong><span style="color:#d73a49">new</span></strong><span>TrzszAddon</span><span>(</span><span>webSocket</span><span>);</span><span>terminal</span><span>.</span><span>loadAddon</span><span>(</span><span>trzszAddon</span><span>);</span></code></pre></div></div></li></ul><h2>开发示例</h2><ul><li><p style="margin-left:0; margin-right:0"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ftrzsz%2Ftrzsz.js%2Fblob%2Fmain%2Fexamples%2Fbrowser" target="_blank">浏览器</a><span>&nbsp;</span>webshell 例子。</p></li><li><p style="margin-left:0; margin-right:0"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ftrzsz%2Ftrzsz.js%2Fblob%2Fmain%2Fexamples%2Felectron" target="_blank">Electron</a><span>&nbsp;</span>终端例子。</p></li><li><p style="margin-left:0; margin-right:0"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ftrzsz%2Ftrzsz.js%2Fblob%2Fmain%2Fexamples%2Faddon" target="_blank">TrzszAddon</a><span>&nbsp;</span>xterm 插件例子。</p></li></ul><h2>录屏演示</h2><p style="color:#000000; margin-left:0; margin-right:0; text-align:left"><code>js</code><span>&nbsp;</span>版的<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ftrzsz%2Ftrzsz.js" target="_blank">trzsz.js</a>，可以在 Chrome&nbsp;<span>浏览器中使用&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ftrzsz%2Ftrzsz" target="_blank">trzsz</a><span>&nbsp;</span>(trz /tsz) 上传和下载文件，如图：</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="600" src="https://oscimg.oschina.net/oscnet/up-4c6898d54bd7faa5b452f9cc815a38ee49c.gif" width="800" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><code>js</code><span>&nbsp;</span>版的<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ftrzsz%2Ftrzsz.js" target="_blank">trzsz.js</a>，可以集成到 electron 开发的终端中，<span>使用&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ftrzsz%2Ftrzsz" target="_blank">trzsz</a><span>&nbsp;</span>(trz /tsz) 上传和下载文件，如图：</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="600" src="https://oscimg.oschina.net/oscnet/up-8f852f401a545c8490ea0aa1f45c3626b7d.gif" width="800" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Sat, 07 Oct 2023 05:35:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/260794/trzsz-1-1-3-released</guid>
            <link>https://www.oschina.net/news/260794/trzsz-1-1-3-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[开源轻量级 IM 框架 MobileIMSDK v6.4 发布！]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h1>一、更新内容简介</h1><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start">本次更新为次要版本更新，进行了若干优化（<span style="color:#888888">更新历史详见：</span><a href="https://gitee.com/jackjiang/MobileIMSDK/releases">码云 Release Notes</a>）。MobileIMSDK 可能是市面上唯一同时支持&nbsp;<span style="color:#4e5f70"><strong>UDP</strong>+<strong>TCP</strong>+</span><strong><span style="color:#4e5f70">WebSocket</span>&nbsp;</strong>三种协议的同类开源 IM 框架。</p><h1>二、MobileIMSDK 简介</h1><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start"><img alt="" src="https://img2020.cnblogs.com/blog/1834368/202112/1834368-20211216214256092-1905940.png" referrerpolicy="no-referrer"></p><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start"><strong><a href="https://gitee.com/jackjiang/MobileIMSDK">MobileIMSDK</a>&nbsp;是一套专为移动端开发的原创 IM 通信层框架：</strong></p><ul><li>历经 10 年、久经考验；</li><li>超轻量级、高度提炼，lib 包 50KB 以内；</li><li>精心封装，一套 API 同时支持 UDP、TCP、WebSocket 三种协议（<span style="color:#888888">可能是全网唯一开源的</span>）；</li><li>客户端支持&nbsp;<strong>iOS</strong>、<strong>Android</strong>、<strong>标准 Java</strong>、<strong><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.52im.net%2Fthread-3682-1-1.html" target="_blank">H5</a></strong>、<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.52im.net%2Fthread-4169-1-1.html" target="_blank"><strong>小程序</strong></a>、<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.52im.net%2Fthread-4225-1-1.html" target="_blank"><strong>Uniapp</strong></a>；</li><li>服务端基于 Netty，性能卓越、易于扩展；<img alt="👈" height="14" src="https://gitee.com/assets/emoji/point_left-4570b6929b8880ab2e8b8031007fef18.png" width="14" referrerpolicy="no-referrer"></li><li>可与姊妹工程&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.52im.net%2Fthread-959-1-1.html" target="_blank">MobileIMSDK-Web</a>&nbsp;无缝互通实现网页端聊天或推送等；<img alt="👈" height="14" src="https://gitee.com/assets/emoji/point_left-4570b6929b8880ab2e8b8031007fef18.png" width="14" referrerpolicy="no-referrer"></li><li>可应用于跨设备、跨网络的聊天 APP、企业 OA、消息推送等各种场景。</li></ul><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start">MobileIMSDK 工程始于 2013 年 10 月，历经 10 年，起初用作某产品的即时通讯底层实现，<span style="background-color:#ffffff; color:#e74c3c">完全从零开发，技术自主可控</span></p><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start"><strong>您可能需要：</strong><a href="https://gitee.com/jackjiang/MobileIMSDK/blob/master/README.md" target="_blank">查看关于 MobileIMSDK 的详细介绍</a>。</p><h1>三、源码托管同步更新</h1><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start"><strong>OsChina.net</strong></p><ul><li><p style="margin-left:auto; margin-right:auto">源码托管：&nbsp;<a href="http://git.oschina.net/jackjiang/MobileIMSDK">http://git.oschina.net/jackjiang/MobileIMSDK</a></p></li><li><p style="margin-left:auto; margin-right:auto">项目资料：&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.52im.net%2Fforum.php%3Fmod%3Dcollection%26action%3Dview%26ctid%3D1" target="_blank">点击查看更多资料</a></p></li></ul><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start"><strong>GitHub.com</strong></p><ul><li><p style="margin-left:auto; margin-right:auto">源码托管：<strong>&nbsp;</strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A//github.com/JackJiang2011/MobileIMSDK" target="_blank">https://github.com/JackJiang2011/MobileIMSDK</a></p></li><li><p style="margin-left:auto; margin-right:auto">项目资料：&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.52im.net%2Fforum.php%3Fmod%3Dcollection%26action%3Dview%26ctid%3D1" target="_blank">点击查看更多资料</a></p></li></ul><h1>四、MobileIMSDK 设计目标</h1><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start">让开发者专注于应用逻辑的开发，底层复杂的即时通讯算法交由 SDK 开发人员，从而解偶即时通讯应用开发的复杂性。</p><h1>五、MobileIMSDK 框架组成</h1><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start"><strong>整套 MobileIMSDK 框架由以下 7 部分组成：</strong></p><ol><li><strong><span style="color:#993300">Android</span>客户端 SDK</strong>：用于 Android 版即时通讯客户端，支持 Android 2.3 及以上，<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fdocs.52im.net%2Fextend%2Fdocs%2Fapi%2Fmobileimsdk%2Fandroid_tcp%2F" target="_blank">查看 API 文档</a>；</li><li><strong><span style="color:#993300">iOS</span>客户端 SDK</strong>：用于开发 iOS 版即时通讯客户端，支持 iOS 9.0 及以上，<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fdocs.52im.net%2Fextend%2Fdocs%2Fapi%2Fmobileimsdk%2Fios_tcp%2F" target="_blank">查看 API 文档</a>；</li><li><strong><span style="color:#993300">Java</span>客户端 SDK</strong>：用于开发跨平台的 PC 端即时通讯客户端，支持 Java 1.6 及以上，<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fdocs.52im.net%2Fextend%2Fdocs%2Fapi%2Fmobileimsdk%2Fjava_tcp%2F" target="_blank">查看 API 文档</a>；</li><li><strong><span style="color:#993300">H5</span>客户端 SDK</strong>：<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.52im.net%2Fthread-3682-1-1.html" target="_blank">查看精编注释版</a>；</li><li><strong><span style="color:#993300">微信小程序</span>端 SDK</strong>：<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.52im.net%2Fthread-4169-1-1.html" target="_blank">查看精编注释版</a>；</li><li><strong><span style="color:#993300">Uniapp</span>端 SDK</strong>：<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.52im.net%2Fthread-4225-1-1.html" target="_blank">查看精编注释版</a>；</li><li><strong><span style="color:#993300">服务端</span>SDK</strong>：用于开发即时通讯服务端，支持 Java 1.7 及以上版本，<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fdocs.52im.net%2Fextend%2Fdocs%2Fapi%2Fmobileimsdk%2Fserver%2F" target="_blank">查看 API 文档</a>。</li></ol><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start"><strong>整套 MobileIMSDK 框架的架构组成：</strong></p><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start"><img alt="" src="https://img2023.cnblogs.com/blog/1834368/202309/1834368-20230925205635124-1350296102.png" referrerpolicy="no-referrer"></p><h1>六、MobileIMSDK&nbsp;v6.4 更新内容&nbsp;</h1><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start"><strong>【重要说明】：</strong></p><blockquote><p style="margin-left:auto; margin-right:auto">MobileIMSDK v6.4 为次要版本，进行了若干优化！&nbsp;<a href="https://gitee.com/jackjiang/MobileIMSDK/releases/tag/v6.4" target="_blank">查看详情</a>&nbsp;</p></blockquote><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start"><strong>【新增重要特性】：</strong></p><ul><li>无</li></ul><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start"><strong>【解决的 Bug】：</strong></p><ul><li>1. [<span style="color:#808080">Uniapp 端</span>] 解决了 Demo 界面右上角的连接状态 title 无法更新的问题；</li><li>2. [<span style="color:#808080">服务端</span>] 解决桥接模式下与最新 rabbitmq 库不兼容从而断线重连不成功，导致 MQ 中消息堆积的问题。</li></ul><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start"><strong>【其它优化和提升】：</strong></p><ul><li>1. [<span style="color:#808080">服务端</span>] 解决登陆连接指令中的一处潜在空指针风险；</li><li>2. [<span style="color:#808080">微信小程序端</span>] 优化自带 Demo 中聊天主界面 flex 布局下的中部聊天列表高度自适应能力；</li><li>3. [<span style="color:#808080">微信小程序端/H5 端</span>] 优化了 Demo 中的 CSS 代码；</li><li>4. [<span style="color:#808080">微信小程序端/H5 端</span>] 优化了 WebSocket 的关闭逻辑，确保标准 API 中的 close 方法因异步调用带来 socket 实例被错误重置的问题；</li><li>5. [<span style="color:#808080">H5 端</span>] 为 Demo 增加了消息送达状态图标的显示（包括发送中、发送成功、发送失败 3 种状态）；</li><li>6. [<span style="color:#808080">H5 端</span>] 重新设计了 Demo 的登录界面；</li><li>7. [<span style="color:#808080">服务端</span>] 升级 amqp-client 库至 5.x 版；</li><li>8. [<span style="color:#808080">服务端</span>] 解决桥接模式下 MQ 断线自动恢复时消费者 Chennal 未主动清理，导致 channel 越来越多的问题（无消费者与其关联的空 channel）：</li><li>9. [<span style="color:#808080">Android</span>] 提升 targetSdkVersion 至 33（即 Android 13）；</li><li>10. [<span style="color:#808080">Android</span>] 升级开发工程使之支持最新 Android Studio Giraffe 和 Gradle 8.1.1；</li></ul><p style="color:#000000; margin-left:auto; margin-right:auto; text-align:start"><strong>【最新版本源码地址】：</strong></p><ul><li><strong>Gitee</strong>：<a href="https://gitee.com/jackjiang/MobileIMSDK/releases/tag/v6.4" target="_blank">https://gitee.com/jackjiang/MobileIMSDK/releases/tag/v6.4</a></li></ul><div><h1>七、相关链接</h1></div><div><ul><li>MobileIMSDK 的详细介绍：<a href="https://www.oschina.net/p/mobileimsdk" target="_blank">点击查看</a></li><li>MobileIMSDK 的下载地址：<a href="https://gitee.com/jackjiang/MobileIMSDK/releases" target="_blank">点击下载</a></li></ul></div></div>
                                    ]]>
            </description>
            <pubDate>Sat, 07 Oct 2023 03:25:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/260777/mobileimsdk-6-4-released</guid>
            <link>https://www.oschina.net/news/260777/mobileimsdk-6-4-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[高性能日志库 go-logger v2.0.3 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#212529; text-align:start">go-logger v2.0.3 发布，该版本主要针对性能进行优化. &nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdonnie4w%2Fgo-logger" target="_blank">github 地址：</a><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdonnie4w%2Fgo-logger" target="_blank">https://github.com/donnie4w/go-logger</a><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdonnie4w%2Fgo-logger" target="_blank">&nbsp;</a></span></p><p style="color:#212529; text-align:start">go 的结构化日志库非常多，<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdonnie4w%2Fgo-logger" target="_blank">go-logger</a>是比较早期开发的一个库， 以简洁为主要特征。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdonnie4w%2Fsimplelog" target="_blank">simplelog</a>是后期给数据库 binlog 日志开发的一个日志库，由于功能与 go-logger 有重合，就把两个库的代码就合并了。目前两个库代都会一起更新，实现是一致的。</p><p style="color:#212529; text-align:start">go1.21 版本就在标准库加上结构化日志库 log/slog,该日志库性能非常优越，根据压测结果，slog 的性能要比社区常用的第三方结构化日志库好许多，所以大部分项目日志库可以直接使用 slog。</p><p style="color:#212529; text-align:start"><strong>go-logger 将继续维护，原因是：</strong></p><ol><li><strong>go-logger 比 slog 占用更少的内存，效率比 slog 更高</strong></li><li><strong>go-logger 对日志文件处理，如，日志文件按大小切分备份，按日期：月，日，时切分备份，日志文件压缩备份，日志文件限制最大文件数等特性，目前 slog 还不具备这些特征。</strong></li></ol><p style="color:#212529; text-align:start"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftlnet.top%2Fsimplelogfunc" target="_blank"><strong>go-logger 函数文档</strong></a></p><hr><p><strong>性能测试数据：</strong></p><p style="color:#212529; text-align:start"><img alt="" height="434" src="https://oscimg.oschina.net/oscnet/up-325c430e8e822604bb5beb2737c8c122866.jpg" width="1279" referrerpolicy="no-referrer"></p><p style="color:#212529; text-align:start"><strong>输出数据：</strong></p><pre><code>2023-09-30T17:37:15.008+0800    DEBUG   logtest/benchmark_test.go:103   &gt;&gt;&gt;aaaaaaaaaaaaaaaaaaaaaaaaaaaaa
[DEBUG]2023/09/30 17:37:19 benchmark_test.go:115: &gt;&gt;&gt;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
[DEBUG]2023/06/10 01:25:55.028277 log_test.go:46:&gt;&gt;&gt;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
[DEBUG]2023/06/10 01:25:55.028277 log_test.go:55:&gt;&gt;&gt;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
time=2023-09-30T17:37:38.395+08:00 level=INFO source=benchmark_test.go:164 msg=&gt;&gt;&gt;aaaaaaaaaaaaaaaaaaaaaaa</code></pre><p style="color:#212529; text-align:start"><strong>参数说明：</strong></p><ul><li><span style="background-color:#ffffff; color:#121212"><strong>ns/op: 每执行一次消耗的时间</strong></span></li><li><span style="background-color:#ffffff; color:#121212"><strong>B/op：每执行一次消耗的内存</strong></span></li><li><span style="background-color:#ffffff; color:#121212"><strong>allocs/op：每执行一次分配内存次数</strong></span></li></ul><p><span style="background-color:#ffffff; color:#121212"><strong>结果说明：</strong></span></p><ol><li><span style="background-color:#ffffff; color:#121212"><strong>不同日志库输出的数据大小是一致的</strong></span></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgo.uber.org%2Fzap" target="_blank"><span style="background-color:#ffffff; color:#121212"><strong>Zap</strong></span></a><span style="background-color:#ffffff; color:#121212"><strong>：uber 官方 go 日志库，测试中是，常规格式 (包含文件名行号) debug 日志输出</strong></span></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdonnie4w%2Fgo-logger" target="_blank"><span style="background-color:#ffffff; color:#121212"><strong>Logger</strong></span></a><span style="background-color:#ffffff; color:#121212"><strong>：go-logger &nbsp;测试中是，常规格式 (包含文件名行号) debug 日志输出</strong></span></li><li><span style="background-color:#ffffff; color:#121212"><strong>LoggerNoFORMAT： &nbsp;为 go-logger 去格式化日志输出</strong></span></li><li><span style="background-color:#ffffff; color:#121212"><strong>LoggerWrite： &nbsp;为 go-logger 提供的原始数据高速写入文件的方法，原是<span>&nbsp;</span></strong></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdonnie4w%2Fsimplelog" target="_blank"><span style="background-color:#ffffff; color:#121212"><strong>simplelog<span>&nbsp;</span></strong></span></a><span style="background-color:#ffffff; color:#121212"><strong>高效输出数据库 binlog 日志数据的方法</strong></span></li><li><span style="background-color:#ffffff; color:#121212"><strong>Slog：官方 log/slog &nbsp;测试为常规格式 (包含文件名行号)info 日志输出</strong></span></li></ol><p style="color:#212529; text-align:start"><span style="background-color:#ffffff; color:#121212"><strong>可以看到，测试数据</strong></span></p><ul><li><span style="background-color:#ffffff; color:#121212">时间消耗： go-logger 4500ns/op 左右 ， &nbsp;<span>&nbsp;</span></span>slog 与 zap 大致在 5600ns/op 左右</li><li>内存消耗：<span style="background-color:#ffffff; color:#121212">go-logger 64B &nbsp; ， &nbsp; &nbsp;<span>&nbsp;</span></span>slog 与 zap 大致在 330ns/op 左右<span style="background-color:#ffffff; color:#121212"><span>&nbsp;</span>&nbsp; &nbsp;</span></li><li>不同机器跑测试程序会有不同的结果，这个主要是一个比较作用。</li></ul><p style="color:#212529; text-align:start"><strong>测试结果：</strong></p><ol><li><span style="background-color:#ffffff; color:#121212"><strong>性能 &nbsp; &nbsp; &nbsp;: &nbsp;</strong></span><strong>go-logger &nbsp;&gt; &nbsp;slog &nbsp;≥ &nbsp;zap</strong></li><li><strong>内存消耗 : go-logger 远小于 &nbsp;slog 与 zap</strong></li></ol><p style="color:#212529; text-align:start"><strong>说明：go-logger 性能与内存上的优势，主要归功于其内存使用上的优化</strong></p><hr><p style="color:#212529; text-align:start"><span style="background-color:#ffffff; color:#121212"><strong>多次测试结果：</strong></span></p><p style="color:#212529; text-align:start"><img alt="" height="439" src="https://oscimg.oschina.net/oscnet/up-20401f284c4ed8d35647c0a1621ffdd1e1b.jpg" width="1334" referrerpolicy="no-referrer"></p><p style="color:#212529; text-align:start"><img alt="" height="439" src="https://oscimg.oschina.net/oscnet/up-feb4870c28d8781cbda455e7af074b17a53.jpg" width="1334" referrerpolicy="no-referrer"></p><p style="color:#212529; text-align:start"><img alt="" height="372" src="https://oscimg.oschina.net/oscnet/up-c1ec6dd52edb8402f3b20a8afb3e174bbb0.jpg" width="1331" referrerpolicy="no-referrer"></p><p style="color:#212529; text-align:start"><strong>对比可知，不同时间测试结果都相似</strong></p><ul><li><strong>可以看到，这几个日志库的性能都非常高。可以根据项目的实际需求选择使用任一日志库。</strong></li><li><strong>如果对性能与内存要求苛刻或对日志文件备份处理有要求时， 建议使用</strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdonnie4w%2Fgo-logger" target="_blank"><strong>go-logger</strong></a><strong>。</strong></li><li><strong>如果官方日志库 slog 已经能满足项目需求，建议使用 slog，由官方维护的库总是靠谱的；对于一般业务来说：性能 4500ns/op 与 5600ns/op 并无实质区别。</strong></li><li><strong>go-logger 会持续进行优化和维护，包括功能与性能.</strong></li></ul><p style="color:#212529; text-align:start"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdonnie4w%2Ftest%2Ftree%2Fmain%2Flogtest" target="_blank">测试程序</a></p></div>
                                    ]]>
            </description>
            <pubDate>Sat, 07 Oct 2023 03:21:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/260776/go-logger-2-0-3-released</guid>
            <link>https://www.oschina.net/news/260776/go-logger-2-0-3-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Rust 通用代码生成器莲花发布红莲尝鲜版十五和视频，彻底修复新晋功能]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><strong>Rust 通用代码生成器莲花发布红莲尝鲜版十五和视频，彻底修复新晋功能</strong></p><p>Rust 通用代码生成器莲花已发布红莲尝鲜版十五及其视频，彻底修复新晋功能。包括 Oracle 数据库支持，DataDummy 模式和枚举功能。实用性大大增强。欢迎使用。</p><p>红莲尝鲜版十五和十四的最大区别是修复了 DataDummy 模式，同时，Oracle 数据库项目也可以顺畅生成。</p><p>尝鲜版十五的视频请见：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1VC4y1Z7KF%2F" target="_blank">https://www.bilibili.com/video/BV1VC4y1Z7KF/</a></p><p>尝鲜版十四的视频请见：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1Fz4y1F7jf%2F" target="_blank">https://www.bilibili.com/video/BV1Fz4y1F7jf/</a></p><p>Rust 通用代码生成器莲花已发布尝鲜版十五。此版本支持 Oracle 数据库。此版本支持 MariaDB，MySQL，PostgreSQL 和 Oracle 四种数据库。请部署在 Tomcat9 的 webapps 目录下。欢迎使用纯内存数据模式的原型功能，此功能为售前和产品经理开发，欢迎使用。</p><p>老一点的视频请见：<br><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1MH4y1U7A1%2F" target="_blank">https://www.bilibili.com/video/BV1MH4y1U7A1/</a><br><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1Qm4y1V77Q%2F" target="_blank">https://www.bilibili.com/video/BV1Qm4y1V77Q/</a><br><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1Ez4y157k2%2F" target="_blank">https://www.bilibili.com/video/BV1Ez4y157k2/</a><br><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1Fh4y1P7xF%2F" target="_blank">https://www.bilibili.com/video/BV1Fh4y1P7xF/</a></p><p>DataDummy 模式，中文称为哑数据模式。是一种专门设计的快速原型模式。这种模式下，数据是暂存于内存中的，重启程序后数据会自动复原。对项目原型的演示非常方便。</p><p>DataDummy 模式是一种演示，快速原型使用的模式。不需要数据库链接，使用内存中的数据对象模拟数据库。但是没有数据持久化功能。也支持前端和后端双系统。其中前端项目和正常模式是完全一致的。不同的是后端项目。</p><p>红莲尝鲜版十支持枚举，即常量表，不可以修改，通过初始化数据构建，内存数据模式。用枚举，只需将其页签设置为 Enum 起头即可，其他设置和 Domain 完全相同，生成的枚举只包含读取功能。注意，登录模块的 User,Role 和 Privilege 都不可以设置为枚举。红莲尝鲜版十优化了模块结构，main.rs 只包含入口点和最低限度的其他程序，其他模块都放在 lib.rs 里，前端代码生成器的默认图片位置改到 static 目录下，方便 vue 前端的构建。请部署在 Tomcat9 的 webapps 目录下。</p><p>代码生成器的项目地址：<a href="https://gitee.com/jerryshensjf/Lotus">https://gitee.com/jerryshensjf/Lotus</a></p><p>二进制 war 包的下载地址: <a href="https://gitee.com/jerryshensjf/Lotus/attach_files">https://gitee.com/jerryshensjf/Lotus/attach_files</a></p><h1>Rust 通用代码生成器：莲花</h1><h3>介绍</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Rust 通用代码生成器：莲花</p><h3>软件架构说明</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">软件使用 Java 写成，部署在 Tomcat 9 的 webapps 目录中。目前的版本采用 openjdk 17 编译。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">本软件是从 Go 语言通用代码生成器：仙童改写而来。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">代码生成物是 rust 1.69 环境。采用 Axum 0.6.20, tokio 1.32.0 , sqlx 0.7.1 数据库访问层和 MariaDB, MySQL 8，PostgreSQL 数据库。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Rust 通用代码生成器莲花尝鲜版十五。此版本是测试修复版，没有新功能，修复了尝鲜版十四的 DataDummy 功能。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Rust 通用代码生成器莲花尝鲜版十四。此版本是测试修复版，没有新功能，都是尝鲜版十二的功能，但有错误修复。修复 Oracle 数据库，datadummy 模式和枚举。此版本支持 MariaDB，MySQL，PostgreSQL 和 Oracle 四种数据库。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Rust 通用代码生成器莲花尝鲜版十二。此版本支持 Oracle 数据库。此版本支持 MariaDB，MySQL，PostgreSQL 和 Oracle 四种数据库。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Rust 通用代码生成器莲花尝鲜版十一。此版本是一个修复增强版本，此版本完善了 DataDummy 模式，并完善了枚举的使用。并修复了数据库模式的脚本缺陷。暂不支持 Oracle 数据库。欢迎使用纯内存数据模式的原型功能，此功能为售前和产品经理开发，欢迎使用。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Rust 通用代码生成器莲花尝鲜版十。此版本支持 DataDummy 模式，即纯内存数据模式的原型功能，为售前和产品经理开发。支持枚举，优化了模块结构，main.rs 只包含入口点和最低限度的其他程序，其他模块都放在 lib.rs 里，前端代码生成器的默认图片位置改到 static 目录下，方便 vue 前端的构建。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Rust 通用代码生成器莲花尝鲜版九。此版本更新 Axum 至最新版 0.6.20,改进了前端登录失败的错误提示，去除了后端运行时在控制枱上输出的调试信息。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Rust 通用代码生成器莲花尝鲜版八已发布。此版本更新 JQuery EasyUI 至最新版 1.10.17。此版本解决了编译警告问题。支持日期与日期时间的空值。修复了尝鲜版七过度更新引起的后端编辑不支持更新图片的缺陷。和其他一些缺陷。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Rust 通用代码生成器莲花已发布红莲尝鲜版七，这是迄今为止最重要的里程碑。最重要的更新是数据库访问框架从 0.3.5 大幅更新至 0.7.1 最新版。这是一个重大的更新，尝试了几次才顺利完成了这个规划了很久的更新。第二个更新是消除了代码生成物上 90% 的编译警告，大幅改善了代码生成物的代码质量。而后通过更多的测试，修复了一系列缺陷。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Rust 通用代码生成器莲花尝鲜版六。此版本支持日期与日期时间，支持三大部分生成功能群。支持自动登录模块，支持修改自己的资料和登陆密码。修复了尝鲜版五的克隆和批克隆出错问题，修复了尝鲜版五编辑用户会导致密码失效问题。和其他一些缺陷。暂不支持 Oracle 数据库，暂不支持空值。功能对标 java 通用代码生成器光电音之王版本。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Rust 通用代码生成器莲花尝鲜版 5。此版本是第一个功能完整的可用版本，支持自动登录模块，支持 Axum 最新版 0.6.18,彻底改进了数据库访问层，解决了每次查询新建一个数据库链接，以致只能查询 10 余次的重大缺陷，经过更多测试，此版本支持 MariaDB,MySQL 和 PostgreSQL 数据库。支持所附全部非 Oracle 示例。本版本的功能和质量均达到可用水平。 尝鲜版 4。通过编程和测试，终于彻底修复了莲花生成的 Vue 前端。现在，前端和后端可以顺畅的工作，没有任何障碍了。莲花尝鲜版 4 除了弹性登录模块和 Oracle 数据库的功能外，其他功能都已完备。大家已经可以试用了。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">莲花尝鲜版 3 升级 Axum 至 0.6.6,并消除 2/3 的编译警告。后续版本有可能将 Axum 重新降级至 0.4。Axum0.6 的粉丝请使用此版本。您可以使用所附非 Oracle 示例测试系统，可以得到可以运行的代码生成物。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">此版本支持 Go 语言兼容性，即 Go 语言通用代码生成器仙童的模板直接生成 Rust 代码生成物。也支持 Java 兼容性，即支持 java 通用代码生成器光，和平之翼代码生成器，无垠式代码生成器的 Excel 模板直接生成 Rust 代码生成物。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版 4 支持 Excel,PDF 数据导出。支持 Vue，ElementUI 的独立前端。支持 MySQL，MariaDB 和 PostgreSQL 数据库。支持图片功能。支持所附全部非 Oracle 示例。欢迎试用。</p><h3>百度话题</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">＃通用代码生成器＃</p><h3>介绍视频</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版十五的视频请见：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1VC4y1Z7KF%2F">https://www.bilibili.com/video/BV1VC4y1Z7KF/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版十四的视频请见：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1Fz4y1F7jf%2F">https://www.bilibili.com/video/BV1Fz4y1F7jf/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版十二的介绍视频请见：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1MH4y1U7A1%2F">https://www.bilibili.com/video/BV1MH4y1U7A1/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版十一的介绍视频请见：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1Qm4y1V77Q%2F">https://www.bilibili.com/video/BV1Qm4y1V77Q/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1Ez4y157k2%2F">https://www.bilibili.com/video/BV1Ez4y157k2/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版十的介绍视频请见：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1Fh4y1P7xF%2F">https://www.bilibili.com/video/BV1Fh4y1P7xF/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版九的介绍视频请见：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1Hp4y1E7T2%2F">https://www.bilibili.com/video/BV1Hp4y1E7T2/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版八介绍视频请见：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1qG411f7io%2F">https://www.bilibili.com/video/BV1qG411f7io/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1yV4y1Y7pM%2F">https://www.bilibili.com/video/BV1yV4y1Y7pM/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版七介绍视频请见：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1Kz4y1W7eH%2F">https://www.bilibili.com/video/BV1Kz4y1W7eH/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版六介绍视频请见：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1Cj41197nY%2F">https://www.bilibili.com/video/BV1Cj41197nY/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版五介绍视频请见：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1Cg4y1574C%2F">https://www.bilibili.com/video/BV1Cg4y1574C/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Rust 通用代码生成器莲花尝鲜版 4 发布介绍视频，从源码开始构建 Rust 通用代码生成器莲花。并生成一个例程的前后端并演示运行。 视频请见：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV11N411c7H6%2F">https://www.bilibili.com/video/BV11N411c7H6/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版 3</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1co4y1a7Ca%2F">https://www.bilibili.com/video/BV1co4y1a7Ca/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版 2</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1aj411N7YB%2F">https://www.bilibili.com/video/BV1aj411N7YB/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">冒烟测试版 4</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1jy4y1R79h%2F">https://www.bilibili.com/video/BV1jy4y1R79h/</a></p><h3>尝鲜版十五下载</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/jerryshensjf/Lotus/attach_files">https://gitee.com/jerryshensjf/Lotus/attach_files</a></p><h3>项目图片</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="输入图片说明" src="https://gitee.com/jerryshensjf/Lotus/raw/master/RedLotus.jpg" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="输入图片说明" src="https://gitee.com/jerryshensjf/Lotus/raw/master/pl_3.jpeg" referrerpolicy="no-referrer"></p><h3>软件截屏</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="输入图片说明" src="https://gitee.com/jerryshensjf/Lotus/raw/master/lotus_excelg.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="输入图片说明" src="https://gitee.com/jerryshensjf/Lotus/raw/master/lotus_wizard.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="输入图片说明" src="https://gitee.com/jerryshensjf/Lotus/raw/master/Lotus_compare2.png" referrerpolicy="no-referrer"></p><h3>代码生成物截屏</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">日期时间对话框<span>&nbsp;</span></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="输入图片说明" src="https://gitee.com/jerryshensjf/Lotus/raw/master/datetime.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">单表操作</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="输入图片说明" src="https://gitee.com/jerryshensjf/Lotus/raw/master/lotus_grid.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">多对多</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="输入图片说明" src="https://gitee.com/jerryshensjf/Lotus/raw/master/rust_mtm.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">复杂版面，树表</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="输入图片说明" src="https://gitee.com/jerryshensjf/Lotus/raw/master/lotus_treegrid.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">图形报表</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="输入图片说明" src="https://gitee.com/jerryshensjf/Lotus/raw/master/lotus_echarts.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">图片功能</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="输入图片说明" src="https://gitee.com/jerryshensjf/Lotus/raw/master/lotus_pic.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Excel 数据导出</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="输入图片说明" src="https://gitee.com/jerryshensjf/Lotus/raw/master/Lotus_excel_export.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">PDF 数据导出</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="输入图片说明" src="https://gitee.com/jerryshensjf/Lotus/raw/master/Lotus_pdf_export.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Vue 前端日期对话框</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="输入图片说明" src="https://gitee.com/jerryshensjf/Lotus/raw/master/front_date.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Vue 独立前端，登录界面</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="输入图片说明" src="https://gitee.com/jerryshensjf/Lotus/raw/master/Lotus_frontend_login.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Vue 独立前端，内页</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="输入图片说明" src="https://gitee.com/jerryshensjf/Lotus/raw/master/Lotus_frontend_inner.png" referrerpolicy="no-referrer"></p><h3>源码编译用户指南</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">通用代码生成器已经支持自己编译源码，我已把原来缺的前端代码生成器的 jar 包上传。支持大家自行编译源码。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">需要注意的是，现在我的开发平台是 Fedora 37 上的 openjdk 17。所以大家编译源码最好使用 openjdk17。编译好的 war 包运行在 apache tomcat 9.0 上。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">已有 jdk8 的用户报告默认下载的代码生成器 war 包在他的平台上无法运行。您如果遇到类似问题请报告。我的电子邮件是：<a href="https://www.oschina.net/action/GoToLink?url=mailto%3Ajerry_shen_sjf%40qq.com" target="_blank">jerry_shen_sjf@qq.com</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">附 openjdk 17 下载地址：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fjdk.java.net%2Fjava-se-ri%2F17">https://jdk.java.net/java-se-ri/17</a></p><h3>源码研读者注意事项</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">无垠式代码生成器第一个完整版本源码，有兴趣可以抄写一下：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/jerryshensjf/InfinityGPGenerator_0_6_5">https://gitee.com/jerryshensjf/InfinityGPGenerator_0_6_5</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">相关技术视频：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1fX4y1u7Bn%2F">https://www.bilibili.com/video/BV1fX4y1u7Bn/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1rv41187qY%2F">https://www.bilibili.com/video/BV1rv41187qY/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1xv41187cA%2F">https://www.bilibili.com/video/BV1xv41187cA/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1t64y1v7WA%2F">https://www.bilibili.com/video/BV1t64y1v7WA/</a></p></div>
                                    ]]>
            </description>
            <pubDate>Sat, 07 Oct 2023 03:16:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/260774</guid>
            <link>https://www.oschina.net/news/260774</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
    </channel>
</rss>
