<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[开源中国-软件更新资讯]]>
        </title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="https://rsshub.app/oschina/news/project" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[开源中国-软件更新资讯 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Fri, 26 Jan 2024 00:20:45 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[Docker 25.0.1 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff; color:#333333">Docker 25.0.1 现已发布，具体更新内容如下：</span></p><p style="text-align:start"><strong>Bug fixes and enhancements</strong></p><ul><li>API：修复升级到 Docker Engine v25.0 之前创建的具有无效网络配置的容器的错误 HTTP 状态代码。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmoby%2Fmoby%2Fpull%2F47159" target="_blank">moby/moby#47159</a></li><li>确保在容器停止并重新启动时重新生成基于容器 IP 地址的 MAC 地址，以防生成的 IP/MAC 地址已被重复使用。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmoby%2Fmoby%2Fpull%2F47171" target="_blank">moby/moby#47171</a></li><li>修复了<code>host-gateway-ip</code>未通过配置设置时在构建期间无法工作的问题。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmoby%2Fmoby%2Fpull%2F47192" target="_blank">moby/moby#47192</a></li><li>修复了导致容器无法重命名两次的错误。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmoby%2Fmoby%2Fpull%2F47196" target="_blank">moby/moby#47196</a></li><li>修复了导致容器在检查时将其短 ID 添加到其网络别名的问题。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmoby%2Fmoby%2Fpull%2F47182" target="_blank">moby/moby#47182</a></li><li>修复了检测远程构建上下文是否为 Git 存储库时的问题。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmoby%2Fmoby%2Fpull%2F47136" target="_blank">moby/moby#47136</a></li><li>修复 OCI 清单中的 layers order 问题。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmoby%2Fmoby%2Fissues%2F47150" target="_blank">moby/moby#47150</a></li><li>修复传递<code>addr</code>或<code>ip</code>mount 选项时出现的 volume mount 错误。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmoby%2Fmoby%2Fpull%2F47185" target="_blank">moby/moby#47185</a></li><li>改进了与由于命名空间属性名称不正确而无法设置的扩展属性相关的错误消息。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmoby%2Fmoby%2Fpull%2F47178" target="_blank">moby/moby#47178</a></li><li>Swarm：修复了<code>start_interval</code>未传递到容器配置的问题。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmoby%2Fmoby%2Fpull%2F47163" target="_blank">moby/moby#47163</a></li></ul><p style="text-align:start"><strong>Packaging updates</strong></p><ul><li>将 Compose 升级到<code>2.24.2</code>.&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdocker%2Fdocker-ce-packaging%2Fpull%2F981" target="_blank">docker/docker-ce-packaging#981</a></li></ul><p>更新说明：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmoby%2Fmoby%2Freleases%2Ftag%2Fv25.0.1" target="_blank">https://github.com/moby/moby/releases/tag/v25.0.1</a></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 25 Jan 2024 05:50:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276608/docker-25-0-1-released</guid>
            <link>https://www.oschina.net/news/276608/docker-25-0-1-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[凌鲨 0.7.13 版本更新]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h1>凌鲨 0.7.13 版本更新</h1><ul><li>服务端版本: 0.2.27</li><li>改进: 调整注册页面样式</li><li>改进: 登录界面按回车健可触发登录</li><li>改进: 燃尽图增加错误提示</li><li>改进: 工作计划统计信息增加错误提示</li><li>改进: 甘特图增加错误提示</li><li>改进: 调整甘特图界面样式</li></ul><h1>相关截图</h1><p><img height="750" src="https://oscimg.oschina.net/oscnet/up-c7d569dcd8bf4fc9bb8d3d6a2dd63b07249.png" width="1500" referrerpolicy="no-referrer"></p><p><img height="750" src="https://oscimg.oschina.net/oscnet/up-eef614a02c25d035b072eddd51f9d2d5cdb.png" width="1500" referrerpolicy="no-referrer"></p><p><img height="750" src="https://oscimg.oschina.net/oscnet/up-f592e97fe048453a4cebee97e371de203e6.png" width="1500" referrerpolicy="no-referrer"></p><p><img height="750" src="https://oscimg.oschina.net/oscnet/up-f8c0d5f05f34fdf641a13efe4fb5797c357.png" width="1500" referrerpolicy="no-referrer"></p><p><img height="750" src="https://oscimg.oschina.net/oscnet/up-e71184f662634a715f9c67248ac922a6bc9.png" width="1500" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 25 Jan 2024 04:27:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276600</guid>
            <link>https://www.oschina.net/news/276600</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[zlib 1.3.1 发布，数据压缩库]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>zlib 1.3.1 现已发布。zlib 是一个通用的数据压缩库，<span style="background-color:#ffffff; color:#333333">很多程序中的压缩或者解压缩函数都会用到这个库。zlib 适用于数据压缩的函式库，几乎适用于任何计算器硬件和操作系统。</span></p><p style="text-align:start"><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>1.3.1 版有以下主要变化：</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><ul><li>拒绝 minizip 中 zip header field 的溢出</li><li>修复 inflateSync() 中位缓冲区中保存的数据的错误</li><li>添加 LIT_MEM 定义以使用更多内存来实现小幅压缩加速</li><li>修复 minizip 中 Zip64 end records&nbsp;的 emission 决定</li><li>为 zError() 使用的 ERR_MSG() macro 添加&nbsp;bounds checking 功能</li><li>消除 miniunz 中的 zip 文件遍历攻击</li><li>修复 check_match() 中 ZLIB_DEBUG 编译的错误</li></ul><p>更新说明：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmadler%2Fzlib%2Freleases%2Ftag%2Fv1.3.1" target="_blank">https://github.com/madler/zlib/releases/tag/v1.3.1</a></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 25 Jan 2024 03:20:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276595/zlib-1-3-1-released</guid>
            <link>https://www.oschina.net/news/276595/zlib-1-3-1-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Zulip Server 8.1 发布，开源团队协作工具]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Zulip 是一个开源团队协作工具，一款专为实时和异步对话而设计的现代团队聊天应用程序，支持快速搜索、拖放文件上传、图像预览、组私人消息、可听通知、错过电子邮件消息提醒与桌面应用等。</p><p>Zulip Server 8.1 现已<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fzulip.readthedocs.io%2Fen%2Flatest%2Foverview%2Fchangelog.html%23zulip-server-8-1" target="_blank">发布</a>，一些更新内容包括：</p><ul><li><p>CVE-2024-21630：Zulip 版本 8.0 及其测试版存在一个错误，影响了不太可能的权限配置，其中某些用户角色有权创建可重用的邀请链接来加入组织，但缺乏订阅其他用户流的权限。具有此类角色的用户可能会错误地创建为新用户订阅流的邀请链接。此漏洞与 CVE-2023-32677 类似，但适用于多用户邀请，而不是单用户邀请。</p></li><li><p>修复了一个 fault-tolerance bug，即传出电子邮件身份验证失败可能会导致其他队列工作人员无法在低内存 Zulip 服务器上正常进行。</p></li><li><p>添加了对使用 PostgreSQL 16 作为数据库的支持。</p></li><li><p>已添加对明确停用移动推送通知注册的支持。</p></li><li><p>添加了对新类自定义身份验证 hook 的支持。</p></li><li><p>改进了向从其他聊天应用程序导入的用户发送密码重置电子邮件的工作流程。</p></li><li><p>改进了文件上传集成，以与使用不同 URL 寻址样式的 S3 替代方案兼容。</p></li><li><p>如果未配置策略侧边栏，则改进了服务条款/隐私策略设置。</p></li><li><p>修复了阻止传入电子邮件集成提及每个人都可以提及的群组的错误。</p></li><li><p>修复了数据导入工具在处理已交付的计划信息时崩溃的问题。</p></li><li><p>修复了通知设置的推送通知列中的错误工具提示。</p></li><li><p>修复了用户组设置面板的小 UI 错误。</p></li><li><p>修复了使用新的撰写框按钮较小的 UI 错误。</p></li><li><p>修复了一些 UI 的小错误，限制了 guest user&nbsp;对其他用户的访问。</p></li><li><p>修复了深色主题中提示字颜色不正确的问题。</p></li><li><p>修复了 Zulip 计划管理登录流程的一些细微错误。</p></li><li><p>修复了涉及通过 API 启用的用户状态的实时更新错误。</p></li><li><p>修复了阻止 logrotate 服务启动的配置问题。</p></li><li><p>修复了影响某些服务器的移动帮助中心导航栏区域的布局错误。</p></li><li><p>修复了涉及共享用户的 Slack 数据导入工具极端情况。</p></li><li><p>修复了与机器人用户的私信中提及被错误转换为 silent mentions 的问题。</p></li><li><p>修复了用于配置自定义 code playgrounds 的预输入中不可利用的 HTML 注入错误。</p></li><li><p>改进了以下主题的应用内文档。</p></li><li><p>向后移植了多项文档改进。</p></li></ul><p><span style="background-color:#ffffff; color:#000000">更多详情可</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fzulip.readthedocs.io%2Fen%2Flatest%2Foverview%2Fchangelog.html%23zulip-server-8-1" target="_blank">查看发布说明</a><span style="background-color:#ffffff; color:#000000">。</span>&nbsp;</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 25 Jan 2024 02:42:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276590/zulip-server-8-1-released</guid>
            <link>https://www.oschina.net/news/276590/zulip-server-8-1-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[自动化测试工具：TestHub V1.0.3 版本发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span>​自动化测试工具：TestHub V1.0.3 版本发布</span></p><h2><span>简介</span></h2><p>TestHub 是一款基于流程编排的自动化测试工具。是为了解决在软件开发旅程中测试流程管理和执行的复杂挑战而诞生的。传统测试工具可能局限于接口级自动化，无法满足多样化的需求，而我们在 TestHub 中引入了独特的流程编排功能，让您能够轻松定义、管理和执行测试流程。无论是自动化测试、流程调度还是其他自动化任务，TestHub 的插件式架构都能够满足您的无限扩展需求。</p><p>使用手册：http://nsrule.com/</p><p>演示环境：http://testhub.nsrule.com:11018/#/</p><p>Gitee 开源地址：https://gitee.com/dromara/TestHub</p><p>Gitub 开源地址：https://github.com/dromara/TestHub</p><p>演示视频：https://www.bilibili.com/video/BV1X94y1v7ak/</p><p>安装包：https://url37.ctfile.com/d/42659137-59604925-26bdd9?p=3710 (访问密码: 3710)</p><div><img height="2062" src="https://oscimg.oschina.net/oscnet/up-84e04e13620546458a902636d6c5cfaf385.jpg" width="3572" referrerpolicy="no-referrer"></div><h2><span>1.0.3 更新内容</span></h2><ul><li><p>🪲🪲 修复 BUG🪲🪲</p><ul><li><p>优化用例编辑器卡顿问题</p></li><li><p>修复 HTTP 不支持异步接口能问题</p></li><li><p>自动生成的 ID 和人工输入的 ID 可能会产生重复@magic(感谢大佬) <a href="https://gitee.com/dromara/TestHub/issues/I8AZW1">#I8AZW1 </a></p></li></ul></li><li><p>👍👍 新增功能 👍👍</p><ul><li><p>优化 Formula 表达式日志展示。<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fnsrule.com%2Fprinciple%2Foperand.html" target="_blank">使用说明</a></p></li><li><p>基于 antlr4 重构 Formula 表达式</p></li><li><p>支持操作 cookie <a href="https://gitee.com/dromara/TestHub/issues/I8I89D">#I8I89D </a></p></li><li><p>参数支持复制键入 <a href="https://gitee.com/dromara/TestHub/issues/I8B27J">#I8B27J </a></p></li><li><p>优化环境变量的使用 <a href="https://gitee.com/dromara/TestHub/issues/I8CEPE">#I8CEPE</a></p></li></ul></li></ul><h2><span>如何使用 Formula 表达式</span></h2><p><strong>❓为什么要基于 antlr4 重构 Formula 表达式 ❓</strong></p><pre><code>ANTLR (ANother Tool for Language Recognition) 是一个强大的语法分析器生成工具，用于生成词法分析器和语法分析器。ANTLR4 是其最新版本，具有许多先进的功能，它有一些优势使其在一些情况下比 TestHub 之前版本手动解析更有优势，而且支持的语法更多。
</code></pre><p>Formula 表达式做为操作数是 TestHub 数据的最小操作单元,</p><p>我们用 FormulaNode 表示一个的操作数 - TestHub 中内置了 5 种基础操作数</p><ul><li><p>DataNode 表示固定值,是有配置人员手动指定的, 例如:<code>xxxx</code></p></li><li><p>PathNode 表示变量值,可以基于 jsonPath 从决策上下文中获取指定的变量值,标识为<code>${xxx.yyy}</code></p></li><li><p>FuncNode 表示方法型函数的调用,标识为<code>%{方法名 (形参 1:操作数,......)}</code></p></li><li><p>ArithmeticNode 表示计算算数运算, 例如:<code>1+2+3*4/5%3</code></p></li><li><p>MixNode 表示混合表达式</p></li></ul><h3><span>操作对象</span></h3><p>后续介绍均以上下文中存在如下数据为前提</p><pre><code>{
&nbsp;&nbsp;"store":&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;"book":&nbsp;[
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"category":&nbsp;"reference",
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"author":&nbsp;"Nigel&nbsp;Rees",
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"title":&nbsp;"Sayings&nbsp;of&nbsp;the&nbsp;Century",
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"price":&nbsp;8.95
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"category":&nbsp;"fiction",
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"author":&nbsp;"Evelyn&nbsp;Waugh",
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"title":&nbsp;"Sword&nbsp;of&nbsp;Honour",
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"price":&nbsp;12.99
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"category":&nbsp;"fiction",
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"author":&nbsp;"Herman&nbsp;Melville",
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"title":&nbsp;"Moby&nbsp;Dick",
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"isbn":&nbsp;"0-553-21311-3",
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"price":&nbsp;8.99
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"category":&nbsp;"fiction",
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"author":&nbsp;"J.&nbsp;R.&nbsp;R.&nbsp;Tolkien",
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"title":&nbsp;"The&nbsp;Lord&nbsp;of&nbsp;the&nbsp;Rings",
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"isbn":&nbsp;"0-395-19395-8",
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"price":&nbsp;22.99
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;&nbsp;],
&nbsp;&nbsp;&nbsp;&nbsp;"bicycle":&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"color":&nbsp;"red",
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"price":&nbsp;19.95
&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;},
&nbsp;&nbsp;"expensive":&nbsp;2
}
</code></pre><h3><span>语法</span></h3><h4><span>固定值-DataNode</span></h4><p>data="root"中的，我们写死的 root 其实就是 DataNode 类型的操作数</p><pre><code><span>&lt;<span>param</span>&nbsp;<span>code</span>=<span>"password"</span>&nbsp;<span>name</span>&nbsp;=&nbsp;<span>"密码"</span>&nbsp;<span>dataType</span>=<span>"STRING"</span>&nbsp;<span>data</span>=<span>"root"</span>/&gt;</span></code></pre><table><tbody><tr><th>写法</th><th>例子</th><th>值</th></tr><tr><td><code>-1.0086</code></td><td>数字</td><td>-1.0086</td></tr><tr><td><code>{attr:{a:1},attr1:1}</code></td><td>json 对象</td><td>{"attr":{"a":1},"attr1":1}</td></tr><tr><td><code>[${expensive},1]</code></td><td>列表，操作对象的 expensive 做为第一个元素，1 是第二个元素</td><td><code>[2,1]</code></td></tr></tbody></table><h4><span>变量值-PathNode</span></h4><p>::: warning PathNode 几乎支持了所有 jsonPath 的语法,但是我们不支持 <code>$['store']['book'][0]['title']</code> 这种<code>[]</code>的写法，如果目前的语法满足不了你的测试过程，请于<a href="https://gitee.com/failedgoddess/TestHub/issues"><code>gitee</code></a>仓库提 lssues，我们会优先支持。 jsonPath 语法学习，请参考 https://github.com/alibaba/fastjson/wiki/JSONPath :::</p><table><tbody><tr><th>写法</th><th>例子</th><th>值</th></tr><tr><td><code>${expensive}</code></td><td>操作对象的 expensive 的值</td><td>2</td></tr><tr><td><code>${store.book.price}</code></td><td>操作对象的 store 的每一个 book 的 price 值</td><td><code>[8.95, 12.99, 8.99, 22.99]</code></td></tr><tr><td><code>${store.book[-1].author}</code></td><td>操作对象的 store 的最后一个 book 的 author</td><td>J. R. R. Tolkien</td></tr><tr><td><code>${store.book[0:2].author}</code></td><td>操作对象的 store 的 0 到 2book 的 author</td><td>Nigel Rees,Sword of Honour,Herman Melville</td></tr><tr><td><code>${store.book[?(isbn)]}</code></td><td>操作对象的 store 的 book 中 isbn 属性不等于空的</td><td>Herman Melville,J. R. R. Tolkien</td></tr><tr><td><code>${store.book[author='Nigel Rees'].title}</code></td><td>操作对象的 store 的 book 中 author 等于 Nigel Rees 的 book 的 title</td><td>Sayings of the Century</td></tr></tbody></table><h4><span>内置方法-FuncNode</span></h4><table><tbody><tr><th>写法</th><th>例子</th><th>值</th></tr><tr><td><code>%{getNowTime()}</code></td><td>获取当前时间</td><td>看表</td></tr><tr><td><code>%{add(attr1:1,attr2:2)}</code></td><td>进行 1+2 ，key:val 的写法</td><td>3</td></tr><tr><td><code>%{add(1,2)}</code></td><td>进行 1+2 默认 key 为下标的写法</td><td>3</td></tr></tbody></table><p>内置函数是我们基于 SPI 机制提供的扩展点之一，目前我们实现了这些内置函数</p><p>如果有不满足你的可以按照一下方式扩展</p><ol><li><p>继承 FunctionHandler</p></li></ol><pre><code><span>package</span>&nbsp;org.dromara.testhub.nsrule.core.executer.mode.base.function;

<span>import</span>&nbsp;com.alibaba.fastjson.JSONObject;
<span>import</span>&nbsp;org.dromara.testhub.nsrule.core.executer.context.Context;

<span>public</span>&nbsp;<span><span>interface</span>&nbsp;<span>FunctionHandler</span>&nbsp;</span>{
&nbsp;&nbsp;&nbsp;&nbsp;<span>String&nbsp;<span>getName</span><span>()</span></span>;

&nbsp;&nbsp;&nbsp;&nbsp;<span>Object&nbsp;<span>execute</span><span>(Context&nbsp;context,&nbsp;JSONObject&nbsp;data)</span></span>;
}

</code></pre><ol><li><p>在 META-INF.services 路径下的 org.dromara.testhub.nsrule.core.executer.mode.base.function.FunctionHandler 配置的你扩展方法</p></li></ol><h4><span>算数运算-ArithmeticNode</span></h4><p>是的我们支持了手写算数运算的表达式</p><table><tbody><tr><th>符号</th><th>作用</th></tr><tr><td>+</td><td>加</td></tr><tr><td>-</td><td>减</td></tr><tr><td><code>*</code></td><td>乘</td></tr><tr><td>/</td><td>除</td></tr><tr><td>%</td><td>取余</td></tr><tr><td>()</td><td>优先级</td></tr></tbody></table><table><tbody><tr><th>写法</th><th>例子</th><th>值</th></tr><tr><td><code>1+2+3*4/5%3</code></td><td>计算<code>1+2+3*4/5%3</code></td><td>5.4</td></tr><tr><td><code>1+(2+3)*4/5%3</code></td><td>计算<code>1+(2+3)*4/5%3</code></td><td>2</td></tr></tbody></table><h4><span>混合表达式-MixNode</span></h4><p>用户组合所有 FormulaNode 最终结果返回字符串</p><table><tbody><tr><th>写法</th><th>例子</th><th>值</th></tr><tr><td><code>http:${expensive}:10010/server/workerHeartbeat</code></td><td>将操作对象的 expensive 的值替换后返回字符串</td><td>http:2:10010/server/workerHeartbeat</td></tr></tbody></table><h2><span>实践</span></h2><div><img height="2048" src="https://oscimg.oschina.net/oscnet/up-d614d4b20fb2ef0b0fdd6adbd0800a3193e.jpg" width="3564" referrerpolicy="no-referrer"></div><pre><code><span>&lt;?xml&nbsp;version="1.0"&nbsp;encoding="UTF-8"?&gt;</span><span>&lt;<span>rule</span>&nbsp;<span>code</span>=<span>"RULE_0000000013"</span>&nbsp;<span>name</span>=<span>"Formula 操作数使用说明"</span>&nbsp;<span>model</span>=<span>"flow"</span>&nbsp;<span>project</span>=<span>"default"</span>&gt;</span>
&nbsp;&nbsp;&nbsp;&nbsp;<span>&lt;<span>actions</span>&gt;</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>&lt;<span>action</span>&nbsp;<span>code</span>=<span>"getData"</span>&nbsp;<span>name</span>=<span>"操作数据"</span>&nbsp;<span>type</span>=<span>"CONST"</span>&nbsp;<span>dataType</span>=<span>"MAP"</span>&gt;</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>&lt;<span>bound</span>&gt;</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{"store":{"book":[{"category":"reference","author":"Nigel&nbsp;Rees","title":"Sayings&nbsp;of&nbsp;the&nbsp;Century","price":8.95},{"category":"fiction","author":"Evelyn&nbsp;Waugh","title":"Sword&nbsp;of&nbsp;Honour","price":12.99},{"category":"fiction","author":"Herman&nbsp;Melville","title":"Moby&nbsp;Dick","isbn":"0-553-21311-3","price":8.99},{"category":"fiction","author":"J.&nbsp;R.&nbsp;R.&nbsp;Tolkien","title":"The&nbsp;Lord&nbsp;of&nbsp;the&nbsp;Rings","isbn":"0-395-19395-8","price":22.99}],"bicycle":{"color":"red","price":19.95}},"expensive":2}
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>&lt;/<span>bound</span>&gt;</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>&lt;/<span>action</span>&gt;</span>
&nbsp;&nbsp;&nbsp;&nbsp;<span>&lt;/<span>actions</span>&gt;</span>
&nbsp;&nbsp;&nbsp;&nbsp;<span>&lt;<span>flows</span>&gt;</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>&lt;<span>flow</span>&nbsp;<span>code</span>=<span>"flow1"</span>&gt;</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>&lt;<span>execute</span>&nbsp;<span>code</span>=<span>"stp1"</span>&nbsp;<span>name</span>=<span>"获取基础操作数据"</span>&nbsp;<span>actionCode</span>=<span>"getData"</span>/&gt;</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>&lt;<span>execute</span>&nbsp;<span>code</span>=<span>"stp2"</span>&nbsp;<span>name</span>=<span>"固定值-DataNode"</span>&nbsp;<span>actionCode</span>=<span>"check"</span>&gt;</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>&lt;<span>checkItem</span>&nbsp;<span>code</span>=<span>"check1"</span>&nbsp;<span>name</span>=<span>"固定值数字"</span>&nbsp;<span>msg</span>=<span>""</span>&gt;</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>&lt;<span>expression</span>&nbsp;<span>expressionType</span>=<span>"relation"</span>&nbsp;<span>operationCode</span>=<span>"eq"</span>&nbsp;<span>dataType</span>=<span>"NUMBER"</span>&nbsp;<span>cover</span>=<span>"-1.0086"</span>&nbsp;<span>threshold</span>=<span>"-1.0086"</span>/&gt;</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>&lt;/<span>checkItem</span>&gt;</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>&lt;<span>checkItem</span>&nbsp;<span>code</span>=<span>"check2"</span>&nbsp;<span>name</span>=<span>"固定值字符串"</span>&nbsp;<span>msg</span>=<span>""</span>&gt;</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>&lt;<span>expression</span>&nbsp;<span>expressionType</span>=<span>"relation"</span>&nbsp;<span>operationCode</span>=<span>"eq"</span>&nbsp;<span>dataType</span>=<span>"STRING"</span>&nbsp;<span>cover</span>=<span>"*&nbsp;0/1&nbsp;*&nbsp;*&nbsp;*&nbsp;?"</span>&nbsp;<span>threshold</span>=<span>"*&nbsp;0/1&nbsp;*&nbsp;*&nbsp;*&nbsp;?"</span>/&gt;</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>&lt;/<span>checkItem</span>&gt;</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>&lt;<span>checkItem</span>&nbsp;<span>code</span>=<span>"check3"</span>&nbsp;<span>name</span>=<span>"固定值列表"</span>&nbsp;<span>msg</span>=<span>""</span>&gt;</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>&lt;<span>expression</span>&nbsp;<span>expressionType</span>=<span>"relation"</span>&nbsp;<span>operationCode</span>=<span>"eq"</span>&nbsp;<span>dataType</span>=<span>"NUMBER"</span>&nbsp;<span>coverComplex</span>=<span>"1"</span>&nbsp;<span>cover</span>=<span>"[${stp1.expensive},1]"</span>&nbsp;<span>thresholdComplex</span>=<span>"1"</span>&nbsp;<span>threshold</span>=<span>"[2,1]"</span>/&gt;</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>&lt;/<span>checkItem</span>&gt;</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>&lt;/<span>execute</span>&gt;</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>&lt;<span>execute</span>&nbsp;<span>code</span>=<span>"stp3"</span>&nbsp;<span>name</span>=<span>"变量值-PathNode"</span>&nbsp;<span>actionCode</span>=<span>"check"</span>&gt;</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>&lt;<span>checkItem</span>&nbsp;<span>code</span>=<span>"check1"</span>&nbsp;<span>name</span>=<span>"操作对象的&nbsp;expensive&nbsp;的值"</span>&nbsp;<span>msg</span>=<span>""</span>&gt;</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>&lt;<span>expression</span>&nbsp;<span>expressionType</span>=<span>"relation"</span>&nbsp;<span>operationCode</span>=<span>"eq"</span>&nbsp;<span>dataType</span>=<span>"NUMBER"</span>&nbsp;<span>cover</span>=<span>"${stp1.expensive}"</span>&nbsp;<span>threshold</span>=<span>"2"</span>/&gt;</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>&lt;/<span>checkItem</span>&gt;</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>&lt;<span>checkItem</span>&nbsp;<span>code</span>=<span>"check2"</span>&nbsp;<span>name</span>=<span>"操作对象的&nbsp;store&nbsp;的每一个&nbsp;book&nbsp;的&nbsp;price&nbsp;值"</span>&nbsp;<span>msg</span>=<span>""</span>&gt;</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>&lt;<span>expression</span>&nbsp;<span>expressionType</span>=<span>"relation"</span>&nbsp;<span>operationCode</span>=<span>"eq"</span>&nbsp;<span>dataType</span>=<span>"STRING"</span>&nbsp;<span>coverComplex</span>=<span>"1"</span>&nbsp;<span>cover</span>=<span>"${stp1.store.book.price}"</span>&nbsp;<span>thresholdComplex</span>=<span>"1"</span>&nbsp;<span>threshold</span>=<span>"[8.95,12.99,8.99,22.99]"</span>/&gt;</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>&lt;/<span>checkItem</span>&gt;</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>&lt;<span>checkItem</span>&nbsp;<span>code</span>=<span>"check3"</span>&nbsp;<span>name</span>=<span>"操作对象的&nbsp;store&nbsp;的最后一个&nbsp;book&nbsp;的&nbsp;author"</span>&nbsp;<span>msg</span>=<span>""</span>&gt;</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>&lt;<span>expression</span>&nbsp;<span>expressionType</span>=<span>"relation"</span>&nbsp;<span>operationCode</span>=<span>"eq"</span>&nbsp;<span>dataType</span>=<span>"STRING"</span>&nbsp;<span>cover</span>=<span>"${stp1.store.book[-1].author}"</span>&nbsp;<span>threshold</span>=<span>"J.&nbsp;R.&nbsp;R.&nbsp;Tolkien"</span>/&gt;</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>&lt;/<span>checkItem</span>&gt;</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>&lt;<span>checkItem</span>&nbsp;<span>code</span>=<span>"check4"</span>&nbsp;<span>name</span>=<span>"操作对象的&nbsp;store&nbsp;的&nbsp;0&nbsp;到&nbsp;2book&nbsp;的&nbsp;author"</span>&nbsp;<span>msg</span>=<span>""</span>&gt;</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>&lt;<span>expression</span>&nbsp;<span>expressionType</span>=<span>"relation"</span>&nbsp;<span>operationCode</span>=<span>"eq"</span>&nbsp;<span>dataType</span>=<span>"STRING"</span>&nbsp;<span>coverComplex</span>=<span>"1"</span>&nbsp;<span>cover</span>=<span>"${stp1.store.book[0:2].author}"</span>&nbsp;<span>thresholdComplex</span>=<span>"1"</span>&nbsp;<span>threshold</span>=<span>"[Nigel&nbsp;Rees,Sword&nbsp;of&nbsp;Honour,Herman&nbsp;Melville]"</span>/&gt;</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>&lt;/<span>checkItem</span>&gt;</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>&lt;<span>checkItem</span>&nbsp;<span>code</span>=<span>"check5"</span>&nbsp;<span>name</span>=<span>"操作对象的&nbsp;store&nbsp;的&nbsp;book&nbsp;中&nbsp;isbn&nbsp;属性不等于空的&nbsp;的&nbsp;author"</span>&nbsp;<span>msg</span>=<span>""</span>&gt;</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>&lt;<span>expression</span>&nbsp;<span>expressionType</span>=<span>"relation"</span>&nbsp;<span>operationCode</span>=<span>"eq"</span>&nbsp;<span>dataType</span>=<span>"STRING"</span>&nbsp;<span>coverComplex</span>=<span>"1"</span>&nbsp;<span>cover</span>=<span>"${stp1.store.book[?(isbn)].author}"</span>&nbsp;<span>thresholdComplex</span>=<span>"1"</span>&nbsp;<span>threshold</span>=<span>"[Herman&nbsp;Melville,J.&nbsp;R.&nbsp;R.&nbsp;Tolkien]"</span>/&gt;</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>&lt;/<span>checkItem</span>&gt;</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>&lt;<span>checkItem</span>&nbsp;<span>code</span>=<span>"check6"</span>&nbsp;<span>name</span>=<span>"操作对象的&nbsp;store&nbsp;的&nbsp;book&nbsp;中&nbsp;author&nbsp;等于&nbsp;Nigel&nbsp;Rees&nbsp;的&nbsp;book&nbsp;的&nbsp;title"</span>&nbsp;<span>msg</span>=<span>""</span>&gt;</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>&lt;<span>expression</span>&nbsp;<span>expressionType</span>=<span>"relation"</span>&nbsp;<span>operationCode</span>=<span>"eq"</span>&nbsp;<span>dataType</span>=<span>"STRING"</span>&nbsp;<span>cover</span>=<span>"${stp1.store.book[author='Nigel&nbsp;Rees'].title}"</span>&nbsp;<span>threshold</span>=<span>"Sayings&nbsp;of&nbsp;the&nbsp;Century"</span>/&gt;</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>&lt;/<span>checkItem</span>&gt;</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>&lt;/<span>execute</span>&gt;</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>&lt;<span>execute</span>&nbsp;<span>code</span>=<span>"stp4"</span>&nbsp;<span>name</span>=<span>"内置方法-FuncNode"</span>&nbsp;<span>actionCode</span>=<span>"check"</span>&gt;</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>&lt;<span>checkItem</span>&nbsp;<span>code</span>=<span>"check1"</span>&nbsp;<span>name</span>=<span>"参数 key:val 形式"</span>&nbsp;<span>msg</span>=<span>""</span>&gt;</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>&lt;<span>expression</span>&nbsp;<span>expressionType</span>=<span>"relation"</span>&nbsp;<span>operationCode</span>=<span>"eq"</span>&nbsp;<span>dataType</span>=<span>"NUMBER"</span>&nbsp;<span>cover</span>=<span>"%{add(attr1:1,attr2:2)}"</span>&nbsp;<span>threshold</span>=<span>"3"</span>/&gt;</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>&lt;/<span>checkItem</span>&gt;</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>&lt;<span>checkItem</span>&nbsp;<span>code</span>=<span>"check2"</span>&nbsp;<span>name</span>=<span>"参数,形式"</span>&nbsp;<span>msg</span>=<span>""</span>&gt;</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>&lt;<span>expression</span>&nbsp;<span>expressionType</span>=<span>"relation"</span>&nbsp;<span>operationCode</span>=<span>"eq"</span>&nbsp;<span>dataType</span>=<span>"NUMBER"</span>&nbsp;<span>cover</span>=<span>"%{add(1,2)}"</span>&nbsp;<span>threshold</span>=<span>"3"</span>/&gt;</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>&lt;/<span>checkItem</span>&gt;</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>&lt;/<span>execute</span>&gt;</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>&lt;<span>execute</span>&nbsp;<span>code</span>=<span>"stp5"</span>&nbsp;<span>name</span>=<span>"算数运算-ArithmeticNode"</span>&nbsp;<span>actionCode</span>=<span>"check"</span>&gt;</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>&lt;<span>checkItem</span>&nbsp;<span>code</span>=<span>"check1"</span>&nbsp;<span>name</span>=<span>"计算 1+2+3*4/5%3"</span>&nbsp;<span>msg</span>=<span>""</span>&gt;</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>&lt;<span>expression</span>&nbsp;<span>expressionType</span>=<span>"relation"</span>&nbsp;<span>operationCode</span>=<span>"eq"</span>&nbsp;<span>dataType</span>=<span>"NUMBER"</span>&nbsp;<span>cover</span>=<span>"1+2+3*4/5%3"</span>&nbsp;<span>threshold</span>=<span>"5.4"</span>/&gt;</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>&lt;/<span>checkItem</span>&gt;</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>&lt;<span>checkItem</span>&nbsp;<span>code</span>=<span>"check2"</span>&nbsp;<span>name</span>=<span>"计算 1+(2+3)*4/5%3"</span>&nbsp;<span>msg</span>=<span>""</span>&gt;</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>&lt;<span>expression</span>&nbsp;<span>expressionType</span>=<span>"relation"</span>&nbsp;<span>operationCode</span>=<span>"eq"</span>&nbsp;<span>dataType</span>=<span>"NUMBER"</span>&nbsp;<span>cover</span>=<span>"1+(2+3)*4/5%3"</span>&nbsp;<span>threshold</span>=<span>"2"</span>/&gt;</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>&lt;/<span>checkItem</span>&gt;</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>&lt;/<span>execute</span>&gt;</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>&lt;<span>execute</span>&nbsp;<span>code</span>=<span>"stp6"</span>&nbsp;<span>name</span>=<span>"混合表达式-MixNode"</span>&nbsp;<span>actionCode</span>=<span>"check"</span>&gt;</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>&lt;<span>checkItem</span>&nbsp;<span>code</span>=<span>"check1"</span>&nbsp;<span>name</span>=<span>"store&nbsp;的&nbsp;book 中第 expensive+1 个&nbsp;&nbsp;的&nbsp;author"</span>&nbsp;<span>msg</span>=<span>""</span>&gt;</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>&lt;<span>expression</span>&nbsp;<span>expressionType</span>=<span>"relation"</span>&nbsp;<span>operationCode</span>=<span>"eq"</span>&nbsp;<span>dataType</span>=<span>"STRING"</span>&nbsp;<span>cover</span>=<span>"${stp1.store.book[%{add(${stp1.expensive},1)}].author}"</span>&nbsp;<span>threshold</span>=<span>"J.&nbsp;R.&nbsp;R.&nbsp;Tolkien"</span>/&gt;</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>&lt;/<span>checkItem</span>&gt;</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>&lt;<span>checkItem</span>&nbsp;<span>code</span>=<span>"check2"</span>&nbsp;<span>name</span>=<span>"store&nbsp;的&nbsp;book 中第 expensive+1 个&nbsp;&nbsp;的&nbsp;author"</span>&nbsp;<span>msg</span>=<span>""</span>&gt;</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>&lt;<span>expression</span>&nbsp;<span>expressionType</span>=<span>"relation"</span>&nbsp;<span>operationCode</span>=<span>"eq"</span>&nbsp;<span>dataType</span>=<span>"STRING"</span>&nbsp;<span>cover</span>=<span>"${stp1.expensive}.1"</span>&nbsp;<span>threshold</span>=<span>"2.1"</span>/&gt;</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>&lt;/<span>checkItem</span>&gt;</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>&lt;/<span>execute</span>&gt;</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>&lt;/<span>flow</span>&gt;</span>
&nbsp;&nbsp;&nbsp;&nbsp;<span>&lt;/<span>flows</span>&gt;</span><span>&lt;/<span>rule</span>&gt;</span></code></pre></div>
                                    ]]>
            </description>
            <pubDate>Thu, 25 Jan 2024 02:10:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276582/testhub-1-0-3-released</guid>
            <link>https://www.oschina.net/news/276582/testhub-1-0-3-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[腾讯 APIJSON 插件 apijson-query-spring-boot-starter 1.0.2]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><img height="1570" src="https://oscimg.oschina.net/oscnet/up-bdaf900bde612e78f2a7ac5ec7f7dda180c.png" width="2202" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">腾讯 APIJSON 是一种专为 API 而生的 JSON 网络传输协议，以及，基于这套协议实现的 ORM 库。<br><strong>为各种增删改查提供了完全自动化的万能 API，零代码实时满足千变万化的各种新增和变更需求。</strong><br> 能大幅降低开发和沟通成本，简化开发流程，缩短开发周期。适合中小型前后端分离的项目。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>自 2016 年开源 7 年来发展迅速，目前 16K+ Star 位居 400W Java 开源项目前 100。</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>国内，腾讯、华为、阿里巴巴、字节跳动、美团、拼多多、百度、京东、网易、快手、圆通，等 和<br> 国外 Google, Apple, Microsoft, Amazon, Tesla, Meta(FB), Paypal 等数百个知名大厂员工 Star，<br> 也有，腾讯、华为、字节跳动、Microsoft、Zoom、知乎，等 工程师/专家/架构师，提了 PR/Issue，<br> 还被，腾讯、华为、百度、SHEIN、快手、中兴、传音、圆通、美图，等各大知名厂商用于各类项目。</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="1352" src="https://oscimg.oschina.net/oscnet/up-05507add1ab73979181e2a721832b2ef017.png" width="1850" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="1344" src="https://oscimg.oschina.net/oscnet/up-b0118180bc641918130cef0f4dee2bf1ca1.png" width="1634" referrerpolicy="no-referrer"></p><h2>&nbsp;</h2><h2><strong><span>apijson-query-spring-boot-starter</span></strong></h2><h3><strong>1.0.1-1.0.2 更新内容：</strong></h3><ul><li>返回结果使用驼峰规则转换；</li><li>修复 list 转为字符串问题；</li><li>修复查询空值报错问题；</li></ul><p>&nbsp;</p><h1>插件介绍</h1><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><em>一个快速构建 apijson 查询条件的插件</em></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">通常我们在数仓或者其他场景中会使用 apijson 提供通用接口，这时候会有其他应用需要调用 apijson 接口，虽然 apijson 提供通用的 json 格式参数调用， 但是由于 apijson 单独实现一套语法规则，需要学习成本，此插件的目的就是像使用 mybatis plus 构建 sql 查询参数一样，去构建 apijson 查询条件，无需任何 apijson 语法学习，即可完成通用查询请求。</p><h1>查询构建使用示例</h1><ul><li>基于 ApiJsonQueryLambdaWrapper 构建查询</li></ul><div><div><pre><span><strong>public</strong><strong>class</strong><strong>Test</strong><span>{</span></span><span><strong>public</strong><strong>void</strong><strong>testQuery</strong><span>()</span><span>{</span></span><span><strong>ApiJsonQueryLambdaWrapper</strong><span>queryWrapper</span><span>=</span><strong>ApiJsonQueryWrappers</strong><span>.</span><span style="color:#008080">lambdaQuery</span><span>()</span></span><span><span>.</span><span style="color:#008080">setSchema</span><span>(</span><span style="color:#dd2200">"模式名"</span><span>)</span></span><span><span>.</span><span style="color:#008080">setTableName</span><span>(</span><span style="color:#dd2200">"表名"</span><span>)</span></span><span><span>.</span><span style="color:#008080">setBiSigns</span><span>(</span><span style="color:#dd2200">"业务标识"</span><span>)</span></span><span><span>.</span><span style="color:#008080">select</span><span>(</span><span style="color:#dd2200">"查询列"</span><span>)</span></span><span><span>.</span><span style="color:#008080">eq</span><span>(</span><span style="color:#dd2200">"条件判断"</span><span>,</span><span style="color:#dd2200">"条件列"</span><span>,</span><span style="color:#dd2200">"条件值"</span><span>)</span></span><span><span style="color:#888888">// ...</span></span><span><span>;</span></span><span><span>}</span></span><span><span>}</span></span></pre><div>
   &nbsp;
  </div></div></div><ul><li>基于 ApiJsonQueryStringWrapper 构建查询</li></ul><div><div><pre><span><strong>public</strong><strong>class</strong><strong>Test</strong><span>{</span></span><span><strong>public</strong><strong>void</strong><strong>testQuery</strong><span>()</span><span>{</span></span><span><strong>ApiJsonQueryStringWrapper</strong><span>queryWrapper</span><span>=</span><strong>ApiJsonQueryWrappers</strong><span>.</span><span style="color:#008080">query</span><span>()</span></span><span><span>.</span><span style="color:#008080">setSchema</span><span>(</span><span style="color:#dd2200">"模式名"</span><span>)</span></span><span><span>.</span><span style="color:#008080">setTableName</span><span>(</span><span style="color:#dd2200">"表名"</span><span>)</span></span><span><span>.</span><span style="color:#008080">setBiSigns</span><span>(</span><span style="color:#dd2200">"业务标识"</span><span>)</span></span><span><span>.</span><span style="color:#008080">select</span><span>(</span><span style="color:#dd2200">"查询列"</span><span>)</span></span><span><span>.</span><span style="color:#008080">eq</span><span>(</span><span style="color:#dd2200">"条件判断"</span><span>,</span><span style="color:#dd2200">"条件列"</span><span>,</span><span style="color:#dd2200">"条件值"</span><span>)</span></span><span><span style="color:#888888">//...</span></span><span><span>;</span></span><span><span>}</span></span><span><span>}</span></span></pre><div>
   &nbsp;
  </div></div></div><ul><li>基于 ApiJsonQueryMapWrapper 构建查询</li></ul><div><div><pre><span><strong>public</strong><strong>class</strong><strong>Test</strong><span>{</span></span><span><strong>public</strong><strong>void</strong><strong>testQuery</strong><span>()</span><span>{</span></span><span><strong>Map</strong><span>&lt;</span><strong>String</strong><span>,</span><strong>Object</strong><span>&gt;</span><span>param</span><span>=</span><strong>new</strong><strong>HashMap</strong><span>&lt;&gt;();</span></span><span><span style="color:#888888">//apijson 原生语法</span></span><span><span>param</span><span>.</span><span style="color:#008080">put</span><span>(</span><span style="color:#dd2200">"键"</span><span>,</span><span style="color:#dd2200">"值"</span><span>);</span></span><span><span style="color:#888888">//...</span></span><span><strong>ApiJsonQueryMapWrapper</strong><span>queryWrapper</span><span>=</span><strong>ApiJsonQueryWrappers</strong><span>.</span><span style="color:#008080">mapQuery</span><span>()</span></span><span><span>.</span><span style="color:#008080">setQueryParam</span><span>(</span><span>param</span><span>);</span></span><span><span>}</span></span><span><span>}</span></span></pre><div>
   &nbsp;
  </div></div></div><h1>方法调用使用示例</h1><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">提供 ApiJsonQueryTemplate 模板方法</p><ul><li>查询一条数据 getOne(查询条件,转换类型)</li></ul><div><div><pre><span><strong>public</strong><strong>class</strong><strong>Test</strong><span>{</span></span><span><span>@Autowired</span></span><span><strong>private</strong><strong>ApiJsonQueryTemplate</strong><span>apiJsonQueryTemplate</span><span>;</span></span><span><strong>public</strong><strong>void</strong><strong>testGetOne</strong><span>()</span><span>{</span></span><span><strong>User</strong><span>user</span><span>=</span><span>apiJsonQueryTemplate</span><span>.</span><span style="color:#008080">getOne</span><span>(</span><span>queryWrapper</span><span>,</span><strong>User</strong><span>.</span><span style="color:#008080">class</span><span>);</span></span><span><span>}</span></span><span><span>}</span></span></pre><div>
   &nbsp;
  </div></div></div><ul><li>查询条数 count(查询条件)</li></ul><div><div><pre><span><strong>public</strong><strong>class</strong><strong>Test</strong><span>{</span></span><span><span>@Autowired</span></span><span><strong>private</strong><strong>ApiJsonQueryTemplate</strong><span>apiJsonQueryTemplate</span><span>;</span></span><span><strong>public</strong><strong>void</strong><strong>testCount</strong><span>()</span><span>{</span></span><span><strong>Long</strong><span>count</span><span>=</span><span>apiJsonQueryTemplate</span><span>.</span><span style="color:#008080">count</span><span>(</span><span>queryWrapper</span><span>);</span></span><span><span>}</span></span><span><span>}</span></span></pre><div>
   &nbsp;
  </div></div></div><ul><li>查询列表 getList(查询条件,转换类型)</li></ul><div><div><pre><span><strong>public</strong><strong>class</strong><strong>Test</strong><span>{</span></span><span><span>@Autowired</span></span><span><strong>private</strong><strong>ApiJsonQueryTemplate</strong><span>apiJsonQueryTemplate</span><span>;</span></span><span><strong>public</strong><strong>void</strong><strong>testGetList</strong><span>()</span><span>{</span></span><span><strong>List</strong><span>&lt;</span><strong>User</strong><span>&gt;</span><span>userList</span><span>=</span><span>apiJsonQueryTemplate</span><span>.</span><span style="color:#008080">getList</span><span>(</span><span>queryWrapper</span><span>,</span><strong>User</strong><span>.</span><span style="color:#008080">class</span><span>);</span></span><span><span>}</span></span><span><span>}</span></span></pre><div>
   &nbsp;
  </div></div></div><ul><li>查询分页列表 getPageList(查询条件,当前页,页大小,转换类型)</li></ul><div><div><pre><span><strong>public</strong><strong>class</strong><strong>Test</strong><span>{</span></span><span><span>@Autowired</span></span><span><strong>private</strong><strong>ApiJsonQueryTemplate</strong><span>apiJsonQueryTemplate</span><span>;</span></span><span><strong>public</strong><strong>void</strong><strong>testGetPageList</strong><span>()</span><span>{</span></span><span><strong>ApiJsonPageInfo</strong><span>&lt;</span><strong>User</strong><span>&gt;</span><span>userPageList</span><span>=</span><span>apiJsonQueryTemplate</span><span>.</span><span style="color:#008080">getPageList</span><span>(</span><span>queryWrapper</span><span>,</span><span style="color:#009999">1</span><span>,</span><span style="color:#009999">10</span><span>,</span><strong>User</strong><span>.</span><span style="color:#008080">class</span><span>);</span></span><span><span>}</span></span><span><span>}</span></span></pre><div>
   &nbsp;
  </div></div></div><h1>扩展查询数据源示例</h1><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">提供默认基于 http 形式的 apijson 数据源查询方法，如果不满足需求，可继承 DwQueryDao 接口,实现 getData 方法，然后再装配 Bean</p><div><div><pre><span><strong>public</strong><strong>class</strong><strong>AutoConfiguration</strong><span>{</span></span><span><span>@Resource</span></span><span><strong>private</strong><strong>ApiJsonQueryProperties</strong><span>apiJsonQueryProperties</span><span>;</span></span><span><span>@Bean</span></span><span><strong>public</strong><strong>ApiJsonQueryTemplate</strong><strong>apiJsonQueryTemplate</strong><span>()</span><span>{</span></span><span><span>log</span><span>.</span><span style="color:#008080">debug</span><span>(</span><span style="color:#dd2200">"加载自定义查询数据源实现...."</span><span>);</span></span><span><strong>ApiJsonQueryTemplate</strong><span>apiJsonQueryTemplate</span><span>=</span><strong>new</strong><strong>ApiJsonQueryTemplate</strong><span>();</span></span><span><span style="color:#888888">//自定义查询数据源</span></span><span><strong>ApiJsonQueryDao</strong><span>customQuery</span><span>=</span><strong>new</strong><strong>CustomQueryImpl</strong><span>(</span><span>apiJsonQueryProperties</span><span>);</span></span><span><span>apiJsonQueryTemplate</span><span>.</span><span style="color:#008080">setDao</span><span>(</span><span>customQuery</span><span>);</span></span><span><strong>return</strong><span>apiJsonQueryTemplate</span><span>;</span></span><span><span>}</span></span><span><span>}</span></span></pre><div>
   &nbsp;
  </div></div></div><h1>注解说明</h1><ul><li>ApiJsonTableName 表名注解</li></ul><div><div><pre><span><span>@ApiJsonTableName</span><span>(</span></span><span><span>value</span><span>=</span><span style="color:#dd2200">"表名"</span><span>,</span></span><span><span>schema</span><span>=</span><span style="color:#dd2200">"模式名"</span><span>,</span></span><span><span>biSigns</span><span>=</span><span style="color:#dd2200">"业务标识"</span><span>,</span></span><span><span>desc</span><span>=</span><span style="color:#dd2200">"描述"</span></span><span><span>)</span></span><span><strong>public</strong><strong>class</strong><strong>TestDO</strong><span>{</span></span><span></span><span><span>}</span></span><span><span style="color:#888888">//注解设置完成后，只需要在构建查询条件时 setTableName(TestDO.class) 即可</span></span></pre><div>
   &nbsp;
  </div></div></div><ul><li>ApiJsonTableField 字段名注解</li></ul><div><div><pre><span><span>@ApiJsonTableName</span><span>(</span></span><span><span>value</span><span>=</span><span style="color:#dd2200">"表名"</span><span>,</span></span><span><span>schema</span><span>=</span><span style="color:#dd2200">"模式名"</span><span>,</span></span><span><span>biSigns</span><span>=</span><span style="color:#dd2200">"业务标识"</span><span>,</span></span><span><span>desc</span><span>=</span><span style="color:#dd2200">"描述"</span></span><span><span>)</span></span><span><strong>public</strong><strong>class</strong><strong>TestDO</strong><span>{</span></span><span><span style="color:#888888">//将 name 映射为 name2 查询</span></span><span><span>@ApiJsonTableField</span><span>(</span><span>value</span><span>=</span><span style="color:#dd2200">"name2"</span><span>)</span></span><span><strong>private</strong><strong>String</strong><span>name</span><span>;</span></span><span><span style="color:#888888">//忽略该字段查询</span></span><span><span>@ApiJsonTableField</span><span>(</span><span>exist</span><span>=</span><strong>false</strong><span>)</span></span><span><strong>private</strong><strong>String</strong><span>value</span><span>;</span></span><span><span>}</span></span><span><span style="color:#888888">//注解设置完成后，只需要在构建查询条件时 setTableName(TestDO.class) 即可</span></span></pre><div>
   &nbsp;
  </div><div><strong>创作不易，打开以下链接右上角点亮 ⭐️ 来支持/收藏下吧~</strong></div></div></div><p><a href="https://gitee.com/mingbaobaba/apijson-query-spring-boot-starter">https://gitee.com/mingbaobaba/apijson-query-spring-boot-starter</a></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 25 Jan 2024 01:52:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276576/apijson-query-spring-boot-starter-1-0-2</guid>
            <link>https://www.oschina.net/news/276576/apijson-query-spring-boot-starter-1-0-2</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[OpenNJet 支持 yum 源安装！]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff; color:#000000">现在 njet 支持 yum 源安装了，目前只支持 centos 7 和 x86_64 架构！</span><br><br><span style="background-color:#ffffff; color:#000000">具体安装方式如下：</span><br><strong><span style="background-color:#ffffff; color:#000000">step 1: 生成 njet.repo</span></strong></p><pre><code>echo "
[opennjet]
name=OpenNJet
baseurl=https://njet.org.cn/download/linux/centos/$releasever/$basearch/
enabled=1
gpgcheck=1
gpgkey=https://njet.org.cn/download/linux/centos/RPM-GPG-KEY-OpenNJet
" &gt; /etc/yum.repos.d/njet.repo</code></pre><div><h4><span style="background-color:#ffffff; color:#000000">step 2: 更新 yum 缓存<span>&nbsp;</span></span></h4><pre><code>yum clean all
yum makecache # 类似于 apt update</code></pre><h4><strong><span style="background-color:#ffffff; color:#000000">step 3: 安装 njet 或 njet-otel</span></strong></h4><pre><code>yum install njet
yum install njet-otel</code></pre><h4><span style="background-color:#ffffff; color:#000000">step 4: 启动 njet 服务</span></h4><pre><code>systemctl start nje</code></pre></div><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnjet.org.cn%2F" target="_blank">官网</a>&nbsp; 了解更多</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 24 Jan 2024 09:20:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276544</guid>
            <link>https://www.oschina.net/news/276544</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[MediaPortal 2.5 发布，开源多媒体聚合平台]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff; color:#333333">MediaPortal 2.5 现已发布。MediaPortal 是一个开源的流媒体聚合平台，支持观看和录制电视、观看视频和 DVD、音乐播放、广播收听、图片相册、查询天气等丰富功能。支持 .NET Framework 和 DirectX 环境下的 Windows 系统。</span></p><p><span style="background-color:#ffffff; color:rgba(0, 0, 0, 0.8)">2.5 版本配备了全新的安装程序，提供了流畅舒适的安装过程，并且还带来了炫酷的设计，使安装程序看起来清新而现代。</span></p><p><span style="background-color:#ffffff; color:rgba(0, 0, 0, 0.8)"><img alt="" height="296" src="https://oscimg.oschina.net/oscnet/up-087267bfb62f5febe588afdaaf0425668ab.jpg" width="500" referrerpolicy="no-referrer"></span></p><p><span style="background-color:#ffffff; color:rgba(0, 0, 0, 0.8)"><img alt="" height="296" src="https://oscimg.oschina.net/oscnet/up-73c898b7e338e48eba3ca494e2a9c73b16c.jpg" width="500" referrerpolicy="no-referrer"></span></p><p><strong>New Features</strong></p><p>在安装程序中，你可以在 3 个电视引擎之间进行选择（如果不需要电视功能，则可以选择不选择）：</p><ul><li>TVE3（仅适用于 MediaPortal 2 的 NET4.8 版本中）</li><li>TVE3.5</li><li>TVMosaic</li></ul><p>你可以清楚地了解哪些软件包已安装、哪些软件包将被更新、哪些软件包将被添加或删除。安装程序会注意在后台安装所有需要的软件包（例如 NET）。可查看&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.team-mediaportal.com%2Fwiki%2Fdisplay%2FMediaPortal2%2FInstallation%2BProcedure" target="_blank">wiki</a>&nbsp;以获取更多详细信息。&nbsp;&nbsp;</p><p><strong>System</strong></p><p>MediaPortal 的后端发生了许多变化。代码从 NET4.8 移植到 NET6 ，从而提高了大多数系统的性能。然而，某些功能（尚未）与 NET6 兼容，例如 OnlineVideos 和 TVE3。因此，官方决定发布两个安装程序，用户可自行选择所需。</p><ul><li><span style="color:#000000">NET6 installer (</span><span style="background-color:#ffffff; color:#000000">不包括 OV 和 TVE3</span><span style="color:#000000">)</span></li><li><span style="color:#000000"><span style="color:#000000">NET4.8 installer</span></span></li></ul><p>受益于 MediaPortal 2 的大量开发工作，许多新的文本字符串已经添加，但尚未本地化。每个人都可以在翻译平台 transifex 中翻译字符串。</p><p><strong><span style="color:#000000">其他变化</span></strong></p><ul><li>处理 GENA 事件订阅时可能出现死锁</li><li>将全屏/窗口切换与「Always On Top」行为分开</li><li>更新 Nuget.config 以使用 https myget source</li><li>更新构建过程以使用 Transifex CLI 而不是现已过时的 Transifex 客户端</li><li>到子屏幕的工作流导航不遵循某些父屏幕属性</li><li>将 MediaLogo 和认证图像集中到默认皮肤，以避免多个皮肤中的冗余存储</li><li>修复天气和新闻主页内容中未显示的快捷方式项目</li><li>修复 VirtualizingPanel 中潜在的无限循环</li><li>扩展澳大利亚、加拿大、芬兰、意大利和日本的年龄认证标志</li><li>将 MediaPortal 2 版本信息添加到设置中</li><li>如果在搜索时按下「播放/暂停」OSD 按钮，则会从头开始重新播放</li><li>如果演员列表为空，Nfo SeriesFanArtHandler 可能会抛出空引用异常</li><li>打开诊断配置页面会中断服务器通信和其他奇怪的问题</li><li>如果启动期间出现问题，则会记录/显示错误的异常</li><li>FanArtService 可以在关闭时抛出 NullReferenceException 异常</li><li>更新 transifex 构建脚本以支持 VS 2022</li></ul><p>详情可<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.team-mediaportal.com%2Fnews%2Fmediaportal-2-5" target="_blank">查看官方公告</a>。</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 24 Jan 2024 09:05:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276542/mediaportal-2-5-released</guid>
            <link>https://www.oschina.net/news/276542/mediaportal-2-5-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Categraf 更多监控插件来了（v0.3.47 发版）]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Categraf 一款监控数据采集器，内置几十种采集插件，最新版本 v0.3.47，changelog 如下：</p><ul><li>1 &nbsp;oracle 插件去除 cgo 依赖，centos6.7 上也可以进行 oracle 采集了</li><li>2 新增 nats 插件</li><li>3 新增 tengine 插件</li><li>4 新增 bind 插件</li><li>5 新增 snmp_trap 插件</li><li>6 snmp 暴露更多可配置参数</li><li>7 snmp 插件支持 mibs 文件、支持请求响应非同一个 IP&nbsp;</li><li>8 snmp 插件支持深信服 sfTotalMemory 格式采集</li><li>9 prometheus-agent 暴露更多 wal 控制参数</li><li>10 用 ipmi exporter 替换老的 ipmi 插件</li><li>11 redis 插件支持 slow log 采集</li><li>12 prometheus-agent 支持重复指标处理（配置有开关）</li><li>13 log-agent 支持更多参数和 hash 策略</li><li>14 ntp 支持设置 timeout</li><li>15 writers 支持写入 https 的后端</li><li>16 exec 插件，支持正则匹配</li></ul><p>感谢各位贡献者 @c88888 &nbsp;@katepangLiu &nbsp;@tanxiao1990 @liuqian1990 &nbsp;@Meepoljdx @nondevops &nbsp;<br> @noovertime7 @shardingH</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 24 Jan 2024 08:55:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276540/categraf-0-3-47-released</guid>
            <link>https://www.oschina.net/news/276540/categraf-0-3-47-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[基于 mybatis 的 orm：mybatis-mp 1.3.6 发布 - 超丰富的 api！]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>1.3.6 更新：</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="background-color:#ffffff; color:#000000">1.枚举类处理适配</span><br><span style="background-color:#ffffff; color:#000000">2.sqlserver 强制索引适配</span><br><span style="background-color:#ffffff; color:#000000">3.solon 代码生成器调整</span><br><span style="background-color:#ffffff; color:#000000">4.修复了保存时，id 自增时，可能出现类型转换的问题</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>mybatis-mp 包含丰富的 api：</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">1：基于注解，映射数据库；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">2：支持多表 join 和返回；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">3：api 采用 lambda 和 stream 流式设计；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">4：select 自动化以及结果 1 对 1,1 对多，超级方便快捷；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">5：内置分页以及超强的 sql 优化功能；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">6：稳定且性能极优；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">7：轻量级封装 mybatis，几乎没有侵入；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">8：api 丰富，支持数据库函数、多表、乐观锁、多租户、逻辑删除、默认值（可动态值） 等众多功能；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">9：零学习成本，和写 sql 一样方便。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">10：支持复杂的返回关系映射：例如一对一 ，一对多，多对多；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">11：支持自定义 sql 模板，再也不用担心框架支持不足；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">12：内置代码生成器，通过配置，可定制自身规范；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">13：全新的框架，全新的设计理念，新的就是好！</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 24 Jan 2024 06:16:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276524/mybatis-mp-1-3-6-released</guid>
            <link>https://www.oschina.net/news/276524/mybatis-mp-1-3-6-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[🍃 layui-vue v2.14.1 发布，一个 Vue 3 UI 框架]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>更新日志：</p><ul><li>[新增] color-picker 组件，添加 allowClear、simple 属性控制清空与确认按钮。</li><li>[新增] input-number 组件，添加 precision 属性，用于控制数值精度。</li><li>[新增] tree 组件 replace-fields 属性，支持自定义字段。</li><li>[新增] tree 与 treeSelect 组件 defaultExpandAll 属性，默认是否展开所有节点。</li><li>[修复] table 组件 border 异常。<a href="https://gitee.com/layui/layui-vue/issues/I8Y142">I8Y142</a></li><li>[修复] table 组件 columns 属性内部深度监听。</li><li>[修复] color-picker 组 modelValue 为空组件内部报错。</li><li>[优化] table 组件 default-toolbar 的 border-radius 属性跟随主题。</li><li>[优化] date-picker 组件底部按钮 border-radius 跟随主题。</li><li>[优化] tooltip 组件，添加 hide 事件，当弹窗内容隐藏后触发。</li><li>[优化] layer 组件操作栏 icon 资源，替换为 @layui/icons-vue。</li><li>[优化] layer 组件操作栏 icon 主题跟随主题色。</li><li>[升级] @layui/layer-vue 2.2.1 版本。</li></ul><p>更多详情：</p><p><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.layui-vue.com" target="_blank">http://www.layui-vue.com</a></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 24 Jan 2024 06:10:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276522/layui-vue-2-14-1-released</guid>
            <link>https://www.oschina.net/news/276522/layui-vue-2-14-1-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[🎉 领域模型即服务 | Wow 2.15.0 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><a href="https://ahoowang.gitee.io/wow/"><img alt="Wow:基于 DDD、EventSourcing 的现代响应式 CQRS 架构微服务开发框架" src="https://static.oschina.net/uploads/img/202312/13135012_Zb9v.svg" width="150" referrerpolicy="no-referrer"></a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><strong>领域驱动</strong><span>&nbsp;</span>|<span>&nbsp;</span><strong>事件驱动</strong><span>&nbsp;</span>|<span>&nbsp;</span><strong>测试驱动</strong><span>&nbsp;</span>|<span>&nbsp;</span><strong>声明式设计</strong><span>&nbsp;</span>|<span>&nbsp;</span><strong>响应式编程</strong><span>&nbsp;</span>|<span>&nbsp;</span><strong>命令查询职责分离</strong><span>&nbsp;</span>|<span>&nbsp;</span><strong>事件溯源</strong></p><blockquote><p style="margin-left:0; margin-right:0"><strong>官方文档：</strong><img alt="👉" height="14" src="https://cn-assets.gitee.com/assets/emoji/point_right-8d392cf32998e3bca12bb7b4ee10dae0.png" width="14" referrerpolicy="no-referrer"><span>&nbsp;</span><a href="https://ahoowang.gitee.io/wow/" target="_blank">https://ahoowang.gitee.io/wow/</a><span>&nbsp;</span><img alt="👈" height="14" src="https://cn-assets.gitee.com/assets/emoji/point_left-4570b6929b8880ab2e8b8031007fef18.png" width="14" referrerpolicy="no-referrer"></p></blockquote><h2>更新内容</h2><ul><li>特性 (openapi): 新增<span>&nbsp;</span><code>GenerateGlobalIdRouteSpec</code><span>&nbsp;</span>，支持通过<span>&nbsp;</span><em>RESTfull API</em><span>&nbsp;</span>生成全局 ID</li><li>特性 (openapi): 新增<span>&nbsp;</span><code>GenerateBIScriptRouteSpec</code><span>&nbsp;</span>，支持通过<span>&nbsp;</span><em>RESTfull API</em><span>&nbsp;</span>生成 BI 脚本能力</li><li>特性 (openapi): 新增<span>&nbsp;</span><code>GetWowMetadataRouteSpec</code><span>&nbsp;</span>，支持通过<span>&nbsp;</span><em>RESTfull API</em><span>&nbsp;</span>获取<span>&nbsp;</span><em>Wow</em><span>&nbsp;</span>元数据</li><li>依赖 (dashboard): 升级<span>&nbsp;</span><code>angular</code><span>&nbsp;</span>版本，到<span>&nbsp;</span><code>v17.1.1</code></li></ul><h2>简介</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><em>Wow</em><span>&nbsp;</span>是一个基于领域驱动设计和事件溯源的现代响应式<span>&nbsp;</span><em>CQRS</em><span>&nbsp;</span>微服务开发框架，历经多年生产环境验证。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">旨在帮助开发者构建现代化的、高性能且易于维护的微服务应用程序，充分发挥领域驱动设计和事件溯源等模式优势的同时降低应用的复杂性以及实践成本。</p><blockquote><p style="margin-left:0; margin-right:0">值得一提的是，领域驱动设计和事件溯源并非微服务架构的专属，<em>Wow</em><span>&nbsp;</span>框架不仅适用于微服务开发，同样也可用于构建基于领域驱动设计的单体应用程序。</p></blockquote><h2>快速开始</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://ahoowang.gitee.io/wow/guide/getting-started.html">使用 Wow 项目模板快速创建基于 Wow 框架的 DDD 项目</a></p><h2>特性概览</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-Features" src="https://gitee.com/AhooWang/Wow/raw/main/documentation/docs/public/images/Features.png" referrerpolicy="no-referrer"></p><h2>架构图</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-Architecture" src="https://gitee.com/AhooWang/Wow/raw/main/documentation/docs/public/images/Architecture.svg" referrerpolicy="no-referrer"></p><h2>背景</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">随着业务的发展和复杂性的增加，传统的架构和开发方式逐渐显露出瓶颈。<em>领域驱动设计</em>和<em>事件溯源</em>等理念在提高系统设计的灵活性和可维护性方面表现出色，但在实践中常常需要面对复杂性和学习曲线的挑战。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><em>Wow</em><span>&nbsp;</span>框架的目标是以简单易用的方式将领域驱动设计和事件溯源等理念融入到微服务应用开发中，降低开发者的学习成本，提高开发效率。 通过提供现代响应式的<span>&nbsp;</span><em>CQRS</em><span>&nbsp;</span>架构和相关组件，<em>Wow</em><span>&nbsp;</span>框架旨在让开发者更专注于业务逻辑的实现，而不必过多关心底层技术细节。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">经过多年的实践和不断的演进，<em>Wow</em><span>&nbsp;</span>框架在生产环境中得到了验证，积累了丰富的经验。这些经验和反馈不仅丰富了框架的功能和性能，也为持续的改进和优化提供了宝贵的指导。</p><h2>对于开发者而言，<em>Wow</em><span>&nbsp;</span>框架意味着什么？</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">我曾告诫我的团队：如果我们过于依赖<em>数据驱动设计</em>而忽视<em>领域驱动设计</em>，我们最终将沦为<span>&nbsp;</span><em>CRUD</em><span>&nbsp;</span>工程师。</p><blockquote><p style="margin-left:0; margin-right:0"><em>CRUD</em><span>&nbsp;</span>工程师的竞争力和可替代性可想而知，这或许是为何会有<span>&nbsp;</span><em>35</em><span>&nbsp;</span>岁效应，企业显然更倾向于招募没有太多生活羁绊、更加廉价的<span>&nbsp;</span><em>25</em><span>&nbsp;</span>岁<span>&nbsp;</span><em>CRUD</em><span>&nbsp;</span>工程师。</p></blockquote><h3>业务价值</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">软件系统的核心价值体现在业务价值上，研发人员不应只关注技术实现上，而是应该更多地关注业务价值的实现。 这其中的好处显而易见，当你开发完一个业务系统之后，你将变成一个业务专家，甚至比跟你合作的领域专家还要专业，因为你需要洞察业务细节。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">使用<span>&nbsp;</span><em>Wow</em><span>&nbsp;</span>框架，意味着你将关注点放在围绕领域模型设计上，与业务专家一起探索业务领域，而不是关注于技术实现上。 你仅需编写领域模型，即可完成服务开发，<em>Wow</em><span>&nbsp;</span>框架自动为你准备好<span>&nbsp;</span><em>OpenAPI</em><span>&nbsp;</span>接口。</p><blockquote><p style="margin-left:0; margin-right:0">在《实现领域驱动设计》一书中，作者 Vaughn Vernon 提到：核心域才值得投入精力进行领域驱动设计， 但如果你使用<span>&nbsp;</span><em>Wow</em><span>&nbsp;</span>框架，你将发现，因为低廉开发成本、快速的开发效率，即使是次要的支撑子域也值得<span>&nbsp;</span><em>DDD</em>。</p></blockquote><h3>性能与伸缩性</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">随着业务的发展，你需要开始思考系统的性能和伸缩性问题。 在传统架构中，这牵扯到数据库关系模式、分片规则等复杂问题，同时你还需要处理因数据库分片导致的跨分片事务问题。 这时，你不得不修改你的业务代码，以适应水平拆分后的数据库架构。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">然而，如果你选择使用<span>&nbsp;</span><em>Wow</em><span>&nbsp;</span>框架，你将不再需要过多关注数据库关系模式、分片规则等问题。你的业务代码无需变更，系统能够轻松实现水平伸缩。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">你可以在这里了解更多关于<span>&nbsp;</span><a href="https://ahoowang.gitee.io/wow/guide/perf-test.html">Wow 框架的性能</a>。</p><h3>读写分离与同步延迟</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">读写分离是一种极为普遍的性能优化架构模式。 然而，同步延迟问题常伴随而来，事务执行成功后写库落库成功，但读库同步延迟，用户刷新页面后无法获取最新数据，从而对用户的体验产生影响。例如：</p><ul><li>用户发起下单事务，写库执行成功，但由于某种原因，读库同步延迟，用户刷新页面后发现订单未成功创建。</li><li>商家编辑完商品后，同步到<span>&nbsp;</span><em>Elasticsearch</em><span>&nbsp;</span>索引库，但由于某种原因，同步延迟，导致商家刷新页面后搜索不到该商品。</li></ul><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">通常，大家采用最简便的方法，等待 1 秒后刷新页面。 虽然这种方式能解决大多数数据同步延迟的问题，但效率不够高。 因为大多数情况下，同步在 100 毫秒内就已完成，剩余的 900 毫秒成了<em>浪费</em>。 然而，有时 1 秒无法完成同步，这就导致用户获取的数据变得<strong>无效</strong>。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">使用<span>&nbsp;</span><em>Wow</em><span>&nbsp;</span>框架，你可以通过等待<span>&nbsp;</span><em>PROJECTED</em><span>&nbsp;</span>信号完成，然后再将结果返回给用户，以更为优雅和高效的方式处理数据同步延迟的问题。</p><h3>工程质量</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><em>单元测试</em>是确保代码质量且符合预期业务需求的重要手段，但在传统架构中，单元测试往往是一项相当困难的任务，因为你需要考虑数据库连接、事务管理、数据清理等问题。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">使用<span>&nbsp;</span><em>Wow</em><span>&nbsp;</span>框架，你将会发现基于<span>&nbsp;</span><em>Given-&gt;When-&gt;Expect</em><span>&nbsp;</span>模式的测试套件，使得单元测试变得异常简单。 你只需关注领域模型是否符合预期，而无需为数据库连接等问题烦恼。</p><blockquote><p style="margin-left:0; margin-right:0">在实际应用中，我们将领域模型的单元测试覆盖率下限阈值设置为<span>&nbsp;</span><strong>85%</strong>，也是可以轻松实现的。</p><p style="margin-left:0; margin-right:0">在没有刻意要求的情况下，开发人员甚至自觉地将覆盖率提升至<span>&nbsp;</span><strong>95%</strong>。</p><p style="margin-left:0; margin-right:0">因此，每次提交代码都变得轻松自在，因为你确信你的代码经过了充分的测试，并且真正意义上从单元测试中获得了收益。</p></blockquote><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">在研发同级别的项目中，我们的测试团队在系统<span>&nbsp;</span><em>API</em><span>&nbsp;</span>测试中发现，基于 Wow 框架的项目，其<span>&nbsp;</span><em>BUG</em><span>&nbsp;</span>数仅为传统架构项目的<span>&nbsp;</span><strong>1/3</strong>。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">你可以在这里了解更多关于<span>&nbsp;</span><a href="https://ahoowang.gitee.io/wow/guide/test-suite.html">Wow 单元测试套件</a>。</p><h2>对于企业而言，<em>Wow</em><span>&nbsp;</span>框架意味着什么？</h2><h3>商业智能</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="传统架构 VS 事件溯源" src="https://foruda.gitee.com/images/1704878807657006766/300ee974_384561.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="ETL 同步流程" src="https://foruda.gitee.com/images/1704878793697689592/5fda25c1_384561.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><em>商业智能</em>是企业决策的关键支持，而数据则是商业智能的分析原料。业务数据越为丰富有价值，商业智能的分析结果越准确，决策也就更加可靠。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">与传统架构有着显著差异，<em>Wow</em><span>&nbsp;</span>提供了实时聚合根状态事件（<code>StateEvent</code>）和聚合命令（<code>Command</code>）作为数据分析的数据源，同时极大降低了实时<span>&nbsp;</span><em>ETL</em>（<code>Extract</code>,<span>&nbsp;</span><code>Transform</code>,<span>&nbsp;</span><code>Load</code>）的难度。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">在传统架构中，实现实时<span>&nbsp;</span><em>ETL</em><span>&nbsp;</span>通常需要经过繁琐的流程，包括<span>&nbsp;</span><code>DB-&gt;CDC-&gt;Process-&gt;DB</code>，而在<span>&nbsp;</span><em>Wow</em><span>&nbsp;</span>框架中，仅需一段简单的<span>&nbsp;</span><em>SQL</em><span>&nbsp;</span>脚本即可完成这一过程。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">另外，在传统架构中，使用<span>&nbsp;</span><em>CDC</em>（<code>MySql Binlog</code>）数据仅记录数据的变化，缺乏明确的业务语义。进行业务分析时，需要基于数据状态的变化推断出业务语义，这往往需要进行大量的数据处理。 相较之下，<em>Wow</em><span>&nbsp;</span>框架直接提供了聚合根状态事件和聚合命令作为数据分析的数据源，极大降低了数据处理的难度。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><em>Wow</em><span>&nbsp;</span>提供的实时同步机制将数据实时同步至数据仓库（<em>ClickHouse</em>），为实时数据分析提供了极大的便利。这种方法为商业智能提供了强有力的支持，构建了一个实时数据分析系统，使决策制定能够基于及时而准确的信息。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">你可以在这里了解更多关于<span>&nbsp;</span><a href="https://ahoowang.gitee.io/wow/guide/bi.html">Wow 商业智能</a>。</p><h3>操作审计</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><em>操作审计</em>是企业中保障安全性和合规性的重要组成部分，同时也是对系统操作进行监控和追踪的关键手段。<em>Wow</em><span>&nbsp;</span>框架在这方面为企业带来了显著的优势。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">通过记录聚合命令（<code>Command</code>）作为操作审计的数据源，<em>Wow</em><span>&nbsp;</span>框架能够详细追踪系统中的各种操作。 这些记录不仅包含了操作本身的内容，还涵盖了操作触发的副作用（<em>领域事件</em>），为审计提供了更为全面和准确的数据基础。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">相较于传统审计方法，<em>Wow</em><span>&nbsp;</span>框架的操作审计的数据源具备更加明确的业务语义，以及操作后产生的明确领域事件。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">此外，Wow 框架提供的实时数据同步机制也为操作审计带来了便利，确保了审计数据的及时性和一致性。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">了解更多关于<span>&nbsp;</span><a href="https://ahoowang.gitee.io/wow/guide/bi.html#%E8%81%9A%E5%90%88%E5%91%BD%E4%BB%A4">Wow 操作审计</a>。</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 24 Jan 2024 06:07:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276611/wow-2-15-0-released</guid>
            <link>https://www.oschina.net/news/276611/wow-2-15-0-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Rust 通用代码生成器莲花发布红莲尝鲜版二十视频，支持 Nodejs 21,18 和 14]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><strong>Rust 通用代码生成器莲花发布红莲尝鲜版二十视频，支持 Nodejs 21,18 和 14</strong></p><p>Rust 通用代码生成器莲花发布红莲尝鲜版二十视频。此版本开始支持 Nodejs21,18 加上原来支持的 Nodejs 14。现在莲花支持三种 Nodejs 环境。适应性大大增强，也给您的使用带来了更多方便。视频请见：<br><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1GW4y1c7vA%2F" target="_blank">https://www.bilibili.com/video/BV1GW4y1c7vA/</a></p><p>红莲尝鲜版十九视频请见：</p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1bC4y1C7bT%2F" target="_blank">https://www.bilibili.com/video/BV1bC4y1C7bT/</a></p><p>Rust 通用代码生成器莲花发布深度修复版红莲尝鲜版十八介绍视频，动词否定功能群介绍。视频请见：</p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1sa4y1d7cz%2F" target="_blank">https://www.bilibili.com/video/BV1sa4y1d7cz/</a></p><p>Rust 通用代码生成器莲花发布深度修复版红莲尝鲜版十八介绍视频，初学者指南，详细介绍代码生成器环境搭建，编译，运行和使用代码生成物，欢迎使用。视频请见：<br><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1364y157Zg%2F" target="_blank">https://www.bilibili.com/video/BV1364y157Zg/</a></p><p>Rust 通用代码生成器莲花发布深度修复版红莲尝鲜版十七介绍视频，详细讲解三大变形功能群之一的动态椰子树功能群，欢迎使用。视频请见：<br><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1sa4y1d7cz%2F" target="_blank">https://www.bilibili.com/video/BV1sa4y1d7cz/</a></p><p>Rust 通用代码生成器莲花尝鲜版二十。修复了前端代码生成。修复了动词否定功能群和复杂版面和图形报表联合使用时的一些缺陷。此版本支持 MariaDB，MySQL，PostgreSQL 和 Oracle 四种数据库。此版本支持枚举和 datadummy 模式。请部署在 Tomcat9 的 webapps 目录下。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">代码生成器的项目地址：<a href="https://gitee.com/jerryshensjf/Lotus">https://gitee.com/jerryshensjf/Lotus</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">二进制 war 包的下载地址:<span>&nbsp;</span><a href="https://gitee.com/jerryshensjf/Lotus/attach_files">https://gitee.com/jerryshensjf/Lotus/attach_files</a></p><h1>Rust 通用代码生成器：莲花</h1><h3>介绍</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Rust 通用代码生成器：莲花</p><h3>软件架构说明</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">软件使用 Java 写成，部署在 Tomcat 9 的 webapps 目录中。目前的版本采用 openjdk 17 编译。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">本软件是从 Go 语言通用代码生成器：仙童改写而来。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">代码生成物是 rust 1.69 环境。采用 Axum 0.6.20, tokio 1.32.0 , sqlx 0.7.1 数据库访问层和 MariaDB, MySQL 8，PostgreSQL 数据库。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Rust 通用代码生成器莲花，红莲尝鲜版二十。此版本开始支持 Nodejs21,18 加上原来支持的 Nodejs 14。现在莲花支持三种 Nodejs 环境。适应性大大增强，也给您的使用带来了更多方便。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Rust 通用代码生成器莲花深度修复版红莲尝鲜版十九。红莲尝鲜版十九修复了前端代码生成的一些缺陷。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Rust 通用代码生成器莲花尝鲜版十八。修复了前端代码生成。此版本支持 MariaDB，MySQL，PostgreSQL 和 Oracle 四种数据库。此版本支持枚举和 datadummy 模式。请部署在 Tomcat9 的 webapps 目录下。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Rust 通用代码生成器莲花尝鲜版十八。修复了动词否定功能群和复杂版面和图形报表联合使用时的一些缺陷。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Rust 通用代码生成器莲花尝鲜版十七。此版本是深度修复版，修复规范了下拉列表的空值。前端项目和后端项目经过了更严密的测试。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Rust 通用代码生成器莲花尝鲜版十六。此版本是深度修复版，修复了高级定制功能群，自动生成差异版本功能群，动词否定功能群和字段否定功能群里的一系列缺陷，并有其他缺陷修复。此版本支持 MariaDB，MySQL，PostgreSQL 和 Oracle 四种数据库。此版本支持枚举和 datadummy 模式。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Rust 通用代码生成器莲花尝鲜版十五。此版本是测试修复版，没有新功能，修复了尝鲜版十四的 DataDummy 功能。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Rust 通用代码生成器莲花尝鲜版十四。此版本是测试修复版，没有新功能，都是尝鲜版十二的功能，但有错误修复。修复 Oracle 数据库，datadummy 模式和枚举。此版本支持 MariaDB，MySQL，PostgreSQL 和 Oracle 四种数据库。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Rust 通用代码生成器莲花尝鲜版十二。此版本支持 Oracle 数据库。此版本支持 MariaDB，MySQL，PostgreSQL 和 Oracle 四种数据库。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Rust 通用代码生成器莲花尝鲜版十一。此版本是一个修复增强版本，此版本完善了 DataDummy 模式，并完善了枚举的使用。并修复了数据库模式的脚本缺陷。暂不支持 Oracle 数据库。欢迎使用纯内存数据模式的原型功能，此功能为售前和产品经理开发，欢迎使用。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Rust 通用代码生成器莲花尝鲜版十。此版本支持 DataDummy 模式，即纯内存数据模式的原型功能，为售前和产品经理开发。支持枚举，优化了模块结构，main.rs 只包含入口点和最低限度的其他程序，其他模块都放在 lib.rs 里，前端代码生成器的默认图片位置改到 static 目录下，方便 vue 前端的构建。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Rust 通用代码生成器莲花尝鲜版九。此版本更新 Axum 至最新版 0.6.20,改进了前端登录失败的错误提示，去除了后端运行时在控制枱上输出的调试信息。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Rust 通用代码生成器莲花尝鲜版八已发布。此版本更新 JQuery EasyUI 至最新版 1.10.17。此版本解决了编译警告问题。支持日期与日期时间的空值。修复了尝鲜版七过度更新引起的后端编辑不支持更新图片的缺陷。和其他一些缺陷。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Rust 通用代码生成器莲花已发布红莲尝鲜版七，这是迄今为止最重要的里程碑。最重要的更新是数据库访问框架从 0.3.5 大幅更新至 0.7.1 最新版。这是一个重大的更新，尝试了几次才顺利完成了这个规划了很久的更新。第二个更新是消除了代码生成物上 90% 的编译警告，大幅改善了代码生成物的代码质量。而后通过更多的测试，修复了一系列缺陷。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Rust 通用代码生成器莲花尝鲜版六。此版本支持日期与日期时间，支持三大部分生成功能群。支持自动登录模块，支持修改自己的资料和登陆密码。修复了尝鲜版五的克隆和批克隆出错问题，修复了尝鲜版五编辑用户会导致密码失效问题。和其他一些缺陷。暂不支持 Oracle 数据库，暂不支持空值。功能对标 java 通用代码生成器光电音之王版本。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Rust 通用代码生成器莲花尝鲜版 5。此版本是第一个功能完整的可用版本，支持自动登录模块，支持 Axum 最新版 0.6.18,彻底改进了数据库访问层，解决了每次查询新建一个数据库链接，以致只能查询 10 余次的重大缺陷，经过更多测试，此版本支持 MariaDB,MySQL 和 PostgreSQL 数据库。支持所附全部非 Oracle 示例。本版本的功能和质量均达到可用水平。 尝鲜版 4。通过编程和测试，终于彻底修复了莲花生成的 Vue 前端。现在，前端和后端可以顺畅的工作，没有任何障碍了。莲花尝鲜版 4 除了弹性登录模块和 Oracle 数据库的功能外，其他功能都已完备。大家已经可以试用了。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">莲花尝鲜版 3 升级 Axum 至 0.6.6,并消除 2/3 的编译警告。后续版本有可能将 Axum 重新降级至 0.4。Axum0.6 的粉丝请使用此版本。您可以使用所附非 Oracle 示例测试系统，可以得到可以运行的代码生成物。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">此版本支持 Go 语言兼容性，即 Go 语言通用代码生成器仙童的模板直接生成 Rust 代码生成物。也支持 Java 兼容性，即支持 java 通用代码生成器光，和平之翼代码生成器，无垠式代码生成器的 Excel 模板直接生成 Rust 代码生成物。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版 4 支持 Excel,PDF 数据导出。支持 Vue，ElementUI 的独立前端。支持 MySQL，MariaDB 和 PostgreSQL 数据库。支持图片功能。支持所附全部非 Oracle 示例。欢迎试用。</p><h3>百度话题</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">＃通用代码生成器＃</p><h3>介绍视频</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Rust 通用代码生成器莲花发布红莲尝鲜版二十介绍视频，视频请见：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1GW4y1c7vA%2F">https://www.bilibili.com/video/BV1GW4y1c7vA/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Rust 通用代码生成器莲花发布深度修复版红莲尝鲜版十九介绍视频，介绍了 PostgreSQL 代码生成。视频请见：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1bC4y1C7bT%2F">https://www.bilibili.com/video/BV1bC4y1C7bT/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Rust 通用代码生成器莲花发布深度修复版红莲尝鲜版十八介绍视频，初学者指南，详细介绍代码生成器环境搭建，编译，运行和使用代码生成物，欢迎使用。视频请见：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1364y157Zg%2F">https://www.bilibili.com/video/BV1364y157Zg/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版十八的视频请见：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1sa4y1d7cz%2F">https://www.bilibili.com/video/BV1sa4y1d7cz/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版十七的视频请见：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1pG411i7Qa%2F">https://www.bilibili.com/video/BV1pG411i7Qa/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1iC4y1j7rd%2F">https://www.bilibili.com/video/BV1iC4y1j7rd/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1rQ4y1t7qJ%2F">https://www.bilibili.com/video/BV1rQ4y1t7qJ/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版十六的视频请见：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1Mw411x7FP%2F">https://www.bilibili.com/video/BV1Mw411x7FP/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版十五的视频请见：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1Pw411X7h5%2F">https://www.bilibili.com/video/BV1Pw411X7h5/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1VC4y1Z7KF%2F">https://www.bilibili.com/video/BV1VC4y1Z7KF/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版十四的视频请见：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1Fz4y1F7jf%2F">https://www.bilibili.com/video/BV1Fz4y1F7jf/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版十二的介绍视频请见：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1MH4y1U7A1%2F">https://www.bilibili.com/video/BV1MH4y1U7A1/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版十一的介绍视频请见：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1Qm4y1V77Q%2F">https://www.bilibili.com/video/BV1Qm4y1V77Q/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1Ez4y157k2%2F">https://www.bilibili.com/video/BV1Ez4y157k2/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版十的介绍视频请见：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1Fh4y1P7xF%2F">https://www.bilibili.com/video/BV1Fh4y1P7xF/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版九的介绍视频请见：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1Hp4y1E7T2%2F">https://www.bilibili.com/video/BV1Hp4y1E7T2/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版八介绍视频请见：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1qG411f7io%2F">https://www.bilibili.com/video/BV1qG411f7io/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1yV4y1Y7pM%2F">https://www.bilibili.com/video/BV1yV4y1Y7pM/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版七介绍视频请见：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1Kz4y1W7eH%2F">https://www.bilibili.com/video/BV1Kz4y1W7eH/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版六介绍视频请见：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1Cj41197nY%2F">https://www.bilibili.com/video/BV1Cj41197nY/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版五介绍视频请见：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1Cg4y1574C%2F">https://www.bilibili.com/video/BV1Cg4y1574C/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Rust 通用代码生成器莲花尝鲜版 4 发布介绍视频，从源码开始构建 Rust 通用代码生成器莲花。并生成一个例程的前后端并演示运行。 视频请见：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV11N411c7H6%2F">https://www.bilibili.com/video/BV11N411c7H6/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版 3</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1co4y1a7Ca%2F">https://www.bilibili.com/video/BV1co4y1a7Ca/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版 2</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1aj411N7YB%2F">https://www.bilibili.com/video/BV1aj411N7YB/</a></p><h3>尝鲜版十九二进制发布包下载</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/jerryshensjf/Lotus/attach_files">https://gitee.com/jerryshensjf/Lotus/attach_files</a></p><h3>项目图片</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="输入图片说明" src="https://gitee.com/jerryshensjf/Lotus/raw/master/RedLotus.jpg" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="输入图片说明" src="https://gitee.com/jerryshensjf/Lotus/raw/master/pl_3.jpeg" referrerpolicy="no-referrer"></p><h3>软件截屏</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="输入图片说明" src="https://gitee.com/jerryshensjf/Lotus/raw/master/lotus_excelg.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="输入图片说明" src="https://gitee.com/jerryshensjf/Lotus/raw/master/lotus_wizard.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="输入图片说明" src="https://gitee.com/jerryshensjf/Lotus/raw/master/Lotus_compare2.png" referrerpolicy="no-referrer"></p><h3>代码生成物截屏</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">日期时间对话框</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="输入图片说明" src="https://gitee.com/jerryshensjf/Lotus/raw/master/datetime.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">单表操作</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="输入图片说明" src="https://gitee.com/jerryshensjf/Lotus/raw/master/lotus_grid.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">多对多</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="输入图片说明" src="https://gitee.com/jerryshensjf/Lotus/raw/master/rust_mtm.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">复杂版面，树表</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="输入图片说明" src="https://gitee.com/jerryshensjf/Lotus/raw/master/lotus_treegrid.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">图形报表</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="输入图片说明" src="https://gitee.com/jerryshensjf/Lotus/raw/master/lotus_echarts.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">图片功能</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="输入图片说明" src="https://gitee.com/jerryshensjf/Lotus/raw/master/lotus_pic.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Excel 数据导出</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="输入图片说明" src="https://gitee.com/jerryshensjf/Lotus/raw/master/Lotus_excel_export.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">PDF 数据导出</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="输入图片说明" src="https://gitee.com/jerryshensjf/Lotus/raw/master/Lotus_pdf_export.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Vue 前端日期对话框</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="输入图片说明" src="https://gitee.com/jerryshensjf/Lotus/raw/master/front_date.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Vue 独立前端，登录界面</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="输入图片说明" src="https://gitee.com/jerryshensjf/Lotus/raw/master/Lotus_frontend_login.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Vue 独立前端，内页</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="输入图片说明" src="https://gitee.com/jerryshensjf/Lotus/raw/master/Lotus_frontend_inner.png" referrerpolicy="no-referrer"></p><h3>Nodejs 前端代码生成物运行指南</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">莲花尝鲜版二十支持 Nodejs 21, 18 和 14 三种 Nodejs 环境。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">首先，使用 Rust 通用代码生成器莲花的红莲尝鲜版二十生成前端代码生成物，生成时需选择 Nodejs 相应版本。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">将代码生成物的前端和后端代码生成物的压缩包拷入工作目录并完成解压缩，部署并启动后端项目。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">进入前端代码生成物的根目录，需选择正确的 Nodejs 版本。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">运行命令：npm install -registry=<a href="https://gitee.com/link?target=https%3A%2F%2Fregistry.npm.taobao.org">https://registry.npm.taobao.org</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">此命令使用淘宝镜像安装 Nodejs 依赖包。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">如果您使用的是 Nodejs 21 和 Nodejs18，请运行命令：export NODE_OPTIONS=--openssl-legacy-provider</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">此命令暴露了一个必须的内存变量。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">运行命令：node --max-http-header-size=1000000 ./node_modules/.bin/webpack-dev-server --inline --progress --config build/webpack.dev.conf.js</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">此命令启动了前端项目。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">访问：<a href="https://gitee.com/link?target=http%3A%2F%2Flocalhost%3A8000%2F">http://localhost:8000/</a></p><h3>源码编译用户指南</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">通用代码生成器已经支持自己编译源码，我已把原来缺的前端代码生成器的 jar 包上传。支持大家自行编译源码。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">需要注意的是，现在我的开发平台是 Fedora 37 上的 openjdk 17。所以大家编译源码最好使用 openjdk17。编译好的 war 包运行在 apache tomcat 9.0 上。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">已有 jdk8 的用户报告默认下载的代码生成器 war 包在他的平台上无法运行。您如果遇到类似问题请报告。我的电子邮件是：<a href="https://www.oschina.net/action/GoToLink?url=mailto%3Ajerry_shen_sjf%40qq.com" target="_blank">jerry_shen_sjf@qq.com</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">附 openjdk 17 下载地址：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fjdk.java.net%2Fjava-se-ri%2F17">https://jdk.java.net/java-se-ri/17</a></p><h3>源码研读者注意事项</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">无垠式代码生成器第一个完整版本源码，有兴趣可以抄写一下：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/jerryshensjf/InfinityGPGenerator_0_6_5">https://gitee.com/jerryshensjf/InfinityGPGenerator_0_6_5</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">相关技术视频：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1fX4y1u7Bn%2F">https://www.bilibili.com/video/BV1fX4y1u7Bn/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1rv41187qY%2F">https://www.bilibili.com/video/BV1rv41187qY/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1xv41187cA%2F">https://www.bilibili.com/video/BV1xv41187cA/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1t64y1v7WA%2F">https://www.bilibili.com/video/BV1t64y1v7WA/</a></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 24 Jan 2024 03:43:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276598</guid>
            <link>https://www.oschina.net/news/276598</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[VersionFox 0.2.2 发布：跨平台、可拓展的 SDK 版本管理工具]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>项目地址:&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fversion-fox%2Fvfox" target="_blank">https://github.com/version-fox/vfox</a></strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">当前版本最重要的变化是使用插件里指定的名称作为 sdk 名称，而不是使用插件的文件名作为 sdk 名称。此外，我们还引入了代理支持，使用户能够配置代理来路由 vfox 的请求。</p><h3>更新内容:</h3><ul><li>功能: <strong>支持配置代理</strong><span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fversion-fox%2Fvfox%2Fissues%2F4" target="_blank">#4</a><span>&nbsp;</span>by<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FXuZheCheung" target="_blank">@XuZheCheung</a><span>&nbsp;</span>in<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fversion-fox%2Fvfox%2Fpull%2F27" target="_blank">#27</a></li><li>修复: 使用插件里指定名称作为 SDK 名称 by<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Faooohan" target="_blank">@aooohan</a><span>&nbsp;</span>in<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fversion-fox%2Fvfox%2Fcommit%2Fb221f57e35667a1847504da11abc708a85dbd8b5" target="_blank">b221f57</a></li><li>修复: 清理今天之前的所有临时文件 by<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Faooohan" target="_blank">@aooohan</a><span>&nbsp;</span>in<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fversion-fox%2Fvfox%2Fcommit%2Fc73877280b878dab23c1024a777aea163e88a5ce" target="_blank">c738772</a></li><li>插件: <strong>支持 Flutter CN 镜像</strong> by<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Faooohan" target="_blank">@aooohan</a><span>&nbsp;</span>in<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fversion-fox%2Fversion-fox-plugins%2Fpull%2F5" target="_blank">version-fox/version-fox-plugins#5</a></li><li>插件: <strong>支持.Net</strong>&nbsp; by<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fliquidiert" target="_blank">@liquidiert</a><span>&nbsp;</span>in<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fversion-fox%2Fversion-fox-plugins%2Fpull%2F6" target="_blank">version-fox/version-fox-plugins#6</a></li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="background-color:#ffffff; color:#1f2328">每种编程语言都有对应的版本管理工具，如 nvm、fvm、gvm、sdkman 等，它们的核心功能大同小异。但对于使用多种语言的开发者来说，这意味着需要学习和记忆各种不同的命令，增加了学习成本。如果你是全栈工程师，或者使用不止一种语言，使用<span>&nbsp;</span><strong>VersionFox</strong>，你无需再学习这些繁杂的工具，从而降低学习成本，节省时间。</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">亮点:</p><ul><li>跨平台 (<strong>Windows</strong>、Linux、macOS), 不同的平台拥有相同的用户体验</li><li>使用一致的命令管理所有语言</li><li>简单的插件系统添加对您所需 SDK 的支持</li><li><strong>支持 Global、Project、Session 三种作用域</strong></li><li><strong>切换项目时，自动切换到对应版本</strong></li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">快速入门</p><ol><li>安装 vfox (&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fversion-fox%2Fvfox%2Fwiki%2FGetting-Started%23installation" target="_blank">详细安装</a>) <pre><span style="color:#6a737d">$</span><span> brew tap version-fox/tap</span><span style="color:#6a737d">$</span><span> brew install vfox</span></pre></li><li>选择一条适合你 shell 的命令</li></ol><pre><span style="color:var(--color-prettylights-syntax-constant)"><span>echo</span></span><span style="color:var(--color-prettylights-syntax-string)"><span style="color:var(--color-prettylights-syntax-string)"><span style="color:#032f62">'</span></span><span style="color:#032f62">eval "$(vfox activate bash)"</span><span style="color:var(--color-prettylights-syntax-string)"><span style="color:#032f62">'</span></span></span><span style="color:var(--color-prettylights-syntax-keyword)">&gt;&gt;</span><span style="color:var(--color-prettylights-syntax-keyword)">~</span>/.bashrc
<span style="color:var(--color-prettylights-syntax-constant)"><span>echo</span></span><span style="color:var(--color-prettylights-syntax-string)"><span style="color:var(--color-prettylights-syntax-string)"><span style="color:#032f62">'</span></span><span style="color:#032f62">eval "$(vfox activate zsh)"</span><span style="color:var(--color-prettylights-syntax-string)"><span style="color:#032f62">'</span></span></span><span style="color:var(--color-prettylights-syntax-keyword)">&gt;&gt;</span><span style="color:var(--color-prettylights-syntax-keyword)">~</span>/.zshrc
<span style="color:var(--color-prettylights-syntax-constant)"><span>echo</span></span><span style="color:var(--color-prettylights-syntax-string)"><span style="color:var(--color-prettylights-syntax-string)"><span style="color:#032f62">'</span></span><span style="color:#032f62">vfox activate fish | source</span><span style="color:var(--color-prettylights-syntax-string)"><span style="color:#032f62">'</span></span></span><span style="color:var(--color-prettylights-syntax-keyword)">&gt;&gt;</span><span style="color:var(--color-prettylights-syntax-keyword)">~</span>/.config/fish/config.fish

<span style="color:var(--color-prettylights-syntax-comment)"><span style="color:var(--color-prettylights-syntax-comment)"><span style="color:#6a737d">#</span></span><span style="color:#6a737d"> For PowerShell, add the following line to your $PROFILE:</span></span>
Invoke-Expression <span style="color:var(--color-prettylights-syntax-string)"><span style="color:var(--color-prettylights-syntax-string)"><span style="color:#032f62">"</span></span><span style="color:var(--color-prettylights-syntax-string)"><span style="color:var(--color-prettylights-syntax-string)"><span style="color:#032f62"><span style="color:#032f62">$(</span></span></span><span style="color:#032f62"><span style="color:#032f62">vfox activate pwsh</span></span><span style="color:var(--color-prettylights-syntax-string)"><span style="color:#032f62"><span style="color:#032f62">)</span></span></span></span><span style="color:var(--color-prettylights-syntax-string)"><span style="color:#032f62">"</span></span></span></pre><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="color:var(--color-prettylights-syntax-string)"><span style="color:var(--color-prettylights-syntax-string)">3. 添加插件</span></span></p><pre><span style="color:#6a737d">$</span><span> vfox add nodejs/nodejs</span></pre><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">4. 安装版本</p><pre><span style="color:#005cc5">vfox</span> install nodejs<span style="color:#032f62">@latest</span></pre><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">5. 切换版本</p><pre>$ vfox use nodejs@21.<span>5.0</span>
$ node -v
<span>21.5</span>.<span>0</span></pre><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">目前已支持多种开发语言，欢迎使用～～</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>作用域演示</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>Project 作用域</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://oscimg.oschina.net/oscnet/up-8ad93fe3a88c42de7147e291becfc559fd5.gif" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>Session 作用域</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong><img alt="" src="https://oscimg.oschina.net/oscnet/up-17abed8c089841acdc2b158ab5101506d1a.gif" referrerpolicy="no-referrer"></strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>Node 完整演示</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fasciinema.org%2Fa%2F630778" target="_blank"><img src="https://asciinema.org/a/630778.svg" referrerpolicy="no-referrer"></a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>项目地址:<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fversion-fox%2Fvfox" target="_blank">https://github.com/version-fox/vfox</a></strong></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 24 Jan 2024 02:17:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276487/versionfox-0-2-2-released</guid>
            <link>https://www.oschina.net/news/276487/versionfox-0-2-2-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[BeetlSQL 3.29.0 发布，流行的 Java DAO 工具]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div><div><p style="margin-left:0; margin-right:0">BeetlSQL 研发自 2015 年，核心和扩展全部自研。目标是提供开发高效，维护高效，运行高效的数据访问框架，它适用范围广，定制性强，入门快。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.kancloud.cn%2Fxiandafu%2Fbeetlsql3_guide" target="_blank">阅读文档</a><span style="background-color:#ffffff; color:#333333"><span>&nbsp;</span></span><a href="https://gitee.com/xiandafu/beetlsql">源码和例子</a><span style="background-color:#ffffff; color:#333333">&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2F121.42.237.11%3A8080%2Fbeetlsql_online%2F" target="_blank">在线体验</a><span style="background-color:#ffffff; color:#333333">&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.kancloud.cn%2Fxiandafu%2Fbeetlsql3_guide%2F1958115" target="_blank">多库使用</a><span style="background-color:#ffffff; color:#333333">&nbsp;</span><a href="https://gitee.com/xiandafu/beetlsql/tree/master/sql-jmh">性能测试</a>&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fplugins.jetbrains.com%2Fplugin%2F15097-beetlsql-support" target="_blank">插件支持</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">本次调整：</p><ul><li>Apache Doris 数据库支持</li><li>sql-dynamic-table 不支持 timestamp 和 bye[] 类型修复</li><li>solon 框架集成更新到最新版本</li><li>更新 beetl，修复 beetl 不支持 char 类型</li></ul><pre><code class="language-java">SQLManager sqlManager = builder.build();
//doris 没有传统数据丰富的 metadata 的补充
((SchemaLessMetaDataManager)sqlManager.getMetaDataManager()).addBean(DorisUser.class);

DorisMapper dorisMapper = sqlManager.getMapper(DorisMapper.class);
sqlManager.all(DorisUser.class);
//根据「主键」 查询
sqlManager.unique(DorisUser.class,1);
// SQL 查询
List&lt;DorisUser&gt; list = sqlManager.execute(new SQLReady("select * from example_tbl_agg1 order by user_id limit 1,2"),DorisUser.class);
//翻页
PageResult&lt;DorisUser&gt;  pageResult =  dorisMapper.select(DefaultPageRequest.of(1,5));</code></pre><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>BeetlSQL 核心功能</strong></p><table border="1" cellpadding="1" cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:1px; border:none; box-sizing:border-box; color:#444444; display:block; font-family:-apple-system,BlinkMacSystemFont,&quot;Apple Color Emoji&quot;,&quot;Segoe UI Emoji&quot;,&quot;Segoe UI Symbol&quot;,&quot;Segoe UI&quot;,&quot;PingFang SC&quot;,&quot;Hiragino Sans GB&quot;,&quot;Microsoft YaHei&quot;,&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:14px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; line-height:inherit; margin:0px 0px 20px; max-width:100%; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:700px; word-break:keep-all; word-spacing:0px"><tbody><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">BeetlSQL 核心</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">功能</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">sql-core</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">核心包，封装了 JDBC 操作，SQL 文件管理，可扩展注解管理</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">sql-fetch</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">类似 Hibernate 那样提供 @Fetch，@FetchMany 等注解</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">sql-mapper</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">mapper 类定义和扩展，用户可以自定义自己的 mapper 和 mapper 的注解</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">sql-intergration</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">整合 Spring，solon，jfinal 等框架，以及例子</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">sql-query</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">Query 和 LambdaQuery，用 Java API 构造和使用 SQL</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">sql-mapping</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">支持单表，多表与 POJO 的互相映射，支持 json 定义，xml 定义映射方式，或者约定习俗</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">sql-template</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">Beetl 模板实现，且支持其他模板语言</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">sql-gen</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">代码生成抽象包，并提供默认实现可以生成 dao，sql 文件，md 文档</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">sql-db-support</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">各种数据库的测试和验证，支持 20+ 数据库。</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">sql-samples</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">包含了上百个使用 beetlsql 的例子</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">sql-test</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">包含了上百个单元测试例子</td></tr></tbody></table><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>BeetlSQL 最新扩展包</strong></p><table border="1" cellpadding="1" cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:1px; border:none; box-sizing:border-box; color:#444444; display:block; font-family:-apple-system,BlinkMacSystemFont,&quot;Apple Color Emoji&quot;,&quot;Segoe UI Emoji&quot;,&quot;Segoe UI Symbol&quot;,&quot;Segoe UI&quot;,&quot;PingFang SC&quot;,&quot;Hiragino Sans GB&quot;,&quot;Microsoft YaHei&quot;,&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:14px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; line-height:inherit; margin:0px 0px 20px; max-width:100%; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:700px; word-break:keep-all; word-spacing:0px"><tbody><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">BeetlSQL 扩展包</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">功能</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">sql-xml</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">高仿 myabtis 的 xml 语法，如果喜欢使用 xml 写 sql 模板的，可以使用此扩展包</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">sql-accelerator</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">性能加速包，通过反射优化，缓存，让 beetlsql 性能提升 50%-200%，接近一半手写 JDBC 的性能</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">sql-firewall</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">sql 防火墙，避免不小心写的 sql 破坏数据库</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">sql-dynamic-table</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">支持像访问静态表格那样防火动态表格，简化动态创建表格的业务需求开发</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">sql-bean-encrypt</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">支持 @MD5 ，@AES 等对字段加密解密</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">sql-rewrite</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">采用 sql 重写，支持单表多租户模式，逻辑删除，数据权限功能</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">SAGA（实验）</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">BeetSQL 的 SAGA 是实现，用 SAGA 微服务事务</td></tr></tbody></table><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">使用加速扩展性能优化结果：能达到近一半手写 JDBC 的性能</p><table border="1" cellpadding="1" cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:1px; border:none; box-sizing:border-box; color:#444444; display:block; font-family:-apple-system,&quot;system-ui&quot;,&quot;Apple Color Emoji&quot;,&quot;Segoe UI Emoji&quot;,&quot;Segoe UI Symbol&quot;,&quot;Segoe UI&quot;,&quot;PingFang SC&quot;,&quot;Hiragino Sans GB&quot;,&quot;Microsoft YaHei&quot;,&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:14px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; line-height:inherit; margin:0px 0px 20px; max-width:100%; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:700px; word-break:keep-all; word-spacing:0px"><tbody><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">查询</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">测试内容</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">BeetlSQL(ops/ms)</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">纯 jdbc</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">mybatis</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">JPA</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">beetlsqlExecuteJdbc</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">直接执行 JDBC</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">318</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">678</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">/</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">64</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">beetlsqlExecuteTemplate</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">执行 SQL 模板</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">268</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">/</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">44</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">66</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">beetlsqlFile</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">SQL 存放在文件统一管理</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">266</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">/</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">41</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">/</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">beetlsqlInsert</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">插入一条</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">129</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">248</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">43</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">59</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">beetlsqlGetAll</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">获取所有数据</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">13</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">40</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">4</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">5</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">beetlsqlLambdaQuery</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">Java 函数编写 SQL 执行查询</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">196</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">/</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">9</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">/</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">beetlsqlPageQuery</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">翻页查询</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">159</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">/</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">17</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">59</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">beetlsqlSelectById</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">查询一条</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">259</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">670</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">43</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">61</td></tr></tbody></table><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>maven</strong></p><pre><code class="language-xml"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333">&lt;</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a">dependency</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333">&gt;</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333">&lt;</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a">groupId</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333">&gt;</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>com.ibeetl<span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333">&lt;/</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a">groupId</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333">&gt;</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333">&lt;</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a">artifactId</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333">&gt;</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>beetlsql<span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333">&lt;/</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a">artifactId</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333">&gt;</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333">&lt;</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a">version</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333">&gt;</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>3.29.0-RELEASE<span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333">&lt;/</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a">version</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333">&gt;</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333">&lt;/</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a">dependency</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333">&gt;</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></code></pre><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">BeetlSQL 支持如下数据库</p><ul><li>传统数据库：MySQL (包括支持 MySQL 协议的各种数据库), MariaDB ,Oralce ,Postgres (包括支持 Postgres 协议的各种数据库), DB2 , SQL Server ，H2 , SQLite , Derby ，神通，达梦，华为高斯，人大金仓，PolarDB，GBase8s，GreatSQL 等</li><li>大数据：HBase，ClickHouse，Cassandar，Hive,GreenPlum，Doris</li><li>物联网时序数据库：Machbase，TD-Engine，IotDB</li><li>SQL 查询引擎：Drill,Presto，Druid</li><li>内存数据库：ignite，CouchBase</li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fplugins.jetbrains.com%2Fplugin%2F15097-beetlsql-support" target="_blank"><strong>插件支持</strong></a></p><p style="margin-left:0; margin-right:0"><img alt="" height="200" src="https://oscimg.oschina.net/oscnet/up-c441edffb0409a7d8ce12af5472267ef748.png" width="600" referrerpolicy="no-referrer"></p></div></div></div>
                                    ]]>
            </description>
            <pubDate>Wed, 24 Jan 2024 01:48:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276478/beetlsql-3-29-0-released</guid>
            <link>https://www.oschina.net/news/276478/beetlsql-3-29-0-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[🎉 声明式 HTTP JAVA 客户端 | CoApi 1.0.0 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h1>CoApi - 同时支持响应式编程和同步编程模型的 HTTP 客户端</h1><h2>更新内容</h2><ul><li>特性: 新增<span>&nbsp;</span><code>WebClientBuilderCustomizer</code><span>&nbsp;</span>API，以支持自定义&nbsp;<code>CoApi</code>&nbsp;<code>WebClient.Builder</code></li><li>特性: 新增<span>&nbsp;</span><code>RestClientBuilderCustomizer</code><span>&nbsp;</span>API，以支持自定义<span>&nbsp;</span>&nbsp;<code>CoApi</code>&nbsp;<code>RestClient.Builder</code></li></ul><h2>简介</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">在 Spring Framework 6 中，引入了全新的 HTTP 客户端 -<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Fdocs.spring.io%2Fspring-framework%2Freference%2Fintegration%2Frest-clients.html%23rest-http-interface">Spring6 HTTP Interface</a>。 该接口允许开发者通过使用<span>&nbsp;</span><code>@HttpExchange</code><span>&nbsp;</span>注解将 HTTP 服务定义为 Java 接口。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">然而，当前版本尚未提供自动配置的支持，需要开发者自己实现配置。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">虽然<span>&nbsp;</span><em>Spring</em><span>&nbsp;</span>生态中已经存在<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fspring-cloud%2Fspring-cloud-openfeign">Spring Cloud OpenFeign</a><span>&nbsp;</span>，但它并未支持响应式编程模型。 为解决这个问题，<em>Spring Cloud OpenFeign</em><span>&nbsp;</span>推荐了替代方案<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FPlaytikaOSS%2Ffeign-reactive">feign-reactive</a>。然而，这个替代方案目前已处于不积极维护状态，并且不支持 Spring Boot 3.2.x。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><strong>CoApi</strong><span>&nbsp;</span>应运而生，它提供了类似于<span>&nbsp;</span><em>Spring Cloud OpenFeign</em><span>&nbsp;</span>的零样板代码自动配置的支持，同时支持<em>响应式编程模型</em>和<em>同步编程模型</em>。开发者只需定义接口，即可轻松使用。</p><h2>安装</h2><blockquote><p style="margin-left:0; margin-right:0">使用<span>&nbsp;</span><em>Gradle(Kotlin)</em><span>&nbsp;</span>安装依赖</p></blockquote><div><pre><code><span style="color:#d73a49">implementation</span>("<span style="color:#d73a49">me</span><span style="color:#6f42c1">.ahoo</span><span style="color:#6f42c1">.coapi</span><span style="color:#6f42c1">:coapi-spring-boot-starter")</span></code></pre></div><blockquote><p style="margin-left:0; margin-right:0">使用<span>&nbsp;</span><em>Gradle(Groovy)</em><span>&nbsp;</span>安装依赖</p></blockquote><div><pre><code class="language-groovy"><span style="color:#005cc5">implementation</span><span style="color:#032f62">'me.ahoo.coapi:coapi-spring-boot-starter'</span></code></pre></div><blockquote><p style="margin-left:0; margin-right:0">使用<span>&nbsp;</span><em>Maven</em><span>&nbsp;</span>安装依赖</p></blockquote><pre><code class="language-xml"><span style="color:#333333">&lt;<span style="color:#22863a">dependency</span>&gt;</span><span style="color:#333333">&lt;<span style="color:#22863a">groupId</span>&gt;</span>me.ahoo.coapi<span style="color:#333333">&lt;/<span style="color:#22863a">groupId</span>&gt;</span><span style="color:#333333">&lt;<span style="color:#22863a">artifactId</span>&gt;</span>coapi-spring-boot-starter<span style="color:#333333">&lt;/<span style="color:#22863a">artifactId</span>&gt;</span><span style="color:#333333">&lt;<span style="color:#22863a">version</span>&gt;</span>${coapi.version}<span style="color:#333333">&lt;/<span style="color:#22863a">version</span>&gt;</span><span style="color:#333333">&lt;/<span style="color:#22863a">dependency</span>&gt;</span></code></pre><h2>使用</h2><h3>定义<span>&nbsp;</span><code>CoApi</code><span>&nbsp;</span>- 第三方接口</h3><blockquote><p style="margin-left:0; margin-right:0"><code>baseUrl</code><span>&nbsp;</span>： 定义请求的基础地址，该参数可以从配置文件中获取，如：<code>baseUrl = "${github.url}"</code>，<code>github.url</code><span>&nbsp;</span>是配置文件中的配置项<span>&nbsp;</span><span><span style="color:#eeeeee">}</span></span></p></blockquote><div><div><pre><code class="language-java"><span style="color:#032f62">@CoApi</span>(baseUrl = <span style="color:#032f62">"${github.url}"</span>)
public interface GitHubApiClient {

    <span style="color:#032f62">@GetExchange</span>(<span style="color:#032f62">"repos/{owner}/{repo}/issues"</span>)
    Flux&lt;Issue&gt; getIssue(<span style="color:#032f62">@PathVariable</span> String owner, <span style="color:#032f62">@PathVariable</span> String repo);
}</code></pre></div></div><blockquote><p style="margin-left:0; margin-right:0">配置文件：</p></blockquote><pre><code><span style="color:#005cc5">github</span>:
  <span style="color:#005cc5">url</span>: <span style="color:#005cc5">https</span>:<span style="color:#6a737d">//api.github.com</span></code></pre><h3>定义<span>&nbsp;</span><code>CoApi</code><span>&nbsp;</span>- 客户端负载均衡</h3><pre><code class="language-java"><span style="color:#032f62">@CoApi</span>(serviceId = <span style="color:#032f62">"github-service"</span>)
public interface ServiceApiClient {

    <span style="color:#032f62">@GetExchange</span>(<span style="color:#032f62">"repos/{owner}/{repo}/issues"</span>)
    Flux&lt;Issue&gt; getIssue(<span style="color:#032f62">@PathVariable</span> String owner, <span style="color:#032f62">@PathVariable</span> String repo);
}</code></pre><h3>使用<span>&nbsp;</span><code>CoApi</code></h3><pre><code><span style="color:#6a737d">@RestController</span><span><span style="color:#d73a49">class</span><span style="color:#6f42c1">GithubController</span></span>(
    <span style="color:#d73a49">private</span><span style="color:#d73a49">val</span> gitHubApiClient: GitHubApiClient,
    <span style="color:#d73a49">private</span><span style="color:#d73a49">val</span> serviceApiClient: ServiceApiClient
) {

    <span style="color:#6a737d">@GetMapping(<span>"/baseUrl"</span>)</span><span><span style="color:#d73a49">fun</span><span style="color:#6f42c1">baseUrl</span><span>()</span></span>: Flux&lt;Issue&gt; {
        <span style="color:#d73a49">return</span> gitHubApiClient.getIssue(<span style="color:#032f62">"Ahoo-Wang"</span>, <span style="color:#032f62">"CoApi"</span>)
    }

    <span style="color:#6a737d">@GetMapping(<span>"/serviceId"</span>)</span><span><span style="color:#d73a49">fun</span><span style="color:#6f42c1">serviceId</span><span>()</span></span>: Flux&lt;Issue&gt; {
        <span style="color:#d73a49">return</span> serviceApiClient.getIssue(<span style="color:#032f62">"Ahoo-Wang"</span>, <span style="color:#032f62">"CoApi"</span>)
    }
}</code></pre><h2>案例参考</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/AhooWang/CoApi/blob/main/example">Example</a></p><h3>服务提供者</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/AhooWang/CoApi/blob/main/example/example-provider-server">Example-Provider</a></p><p style="margin-left:0; margin-right:0; text-align:center"><img height="316" src="https://oscimg.oschina.net/oscnet/up-9ce6cdb0cd8e1b269b78fa69a3a55e5a1e1.png" width="432" referrerpolicy="no-referrer"></p><ul><li><code>TodoApi</code><span>&nbsp;</span>: 规定了客户端消费方与服务提供者之间的共同契约，旨在防范重复冗余定义的风险，同时消除了服务提供者实现与客户端 SDK 的不一致性。</li><li><code>TodoClient</code><span>&nbsp;</span>: 客户端消费方通过<span>&nbsp;</span><code>TodoClient</code><span>&nbsp;</span>访问服务提供者的 API。</li><li><code>TodoController</code><span>&nbsp;</span>: 服务提供者负责实现<span>&nbsp;</span><code>TodoApi</code><span>&nbsp;</span>接口。</li></ul><h4>定义 API</h4><pre><code><span style="color:#6a737d">@HttpExchange(<span>"todo"</span>)</span><span><span style="color:#d73a49">interface</span><span style="color:#6f42c1">TodoApi</span></span>{

    <span style="color:#6a737d">@GetExchange</span><span><span style="color:#d73a49">fun</span><span style="color:#6f42c1">getTodo</span><span>()</span></span>: Flux&lt;Todo&gt;
}</code></pre><h4>定义 Client</h4><pre><code><span style="color:#6a737d">@CoApi(serviceId = <span>"provider-service"</span>)</span><span><span style="color:#d73a49">interface</span><span style="color:#6f42c1">TodoClient</span> : <span style="color:#d73a49">TodoApi</span></span></code></pre><h4>实现 API</h4><pre><code><span style="color:#6a737d">@RestController</span><span><span style="color:#d73a49">class</span><span style="color:#6f42c1">TodoController</span> : <span style="color:#d73a49">TodoApi {</span></span><span style="color:#d73a49">override</span><span><span style="color:#d73a49">fun</span><span style="color:#6f42c1">getTodo</span><span>()</span></span>: Flux&lt;Todo&gt; {
        <span style="color:#d73a49">return</span> Flux.range(<span>1</span>, <span>10</span>)
            .map {
                Todo(<span style="color:#032f62">"todo-<span style="color:#032f62">$it</span>"</span>)
            }
    }
}</code></pre><h3>服务消费者</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/AhooWang/CoApi/blob/main/example/example-consumer-server">Example-Consumer</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">服务消费者通过<span>&nbsp;</span><code>@EnableCoApi</code><span>&nbsp;</span>注解开启<span>&nbsp;</span><code>CoApi</code><span>&nbsp;</span>的自动配置。</p><pre><code><span style="color:#032f62">@EnableCoApi</span>(apis = [<span style="color:#005cc5">TodoClient</span>::class])
<span style="color:#032f62">@SpringBootApplication</span>
class ConsumerServer</code></pre><pre><code><span style="color:#6a737d">@RestController</span><span><span style="color:#d73a49">class</span><span style="color:#6f42c1">TodoController</span></span>(<span style="color:#d73a49">private</span><span style="color:#d73a49">val</span> todoClient: TodoClient) {

    <span style="color:#6a737d">@GetExchange</span><span><span style="color:#d73a49">fun</span><span style="color:#6f42c1">getProviderTodo</span><span>()</span></span>: Flux&lt;Todo&gt; {
        <span style="color:#d73a49">return</span> todoClient.getTodo()
    }
}</code></pre></div>
                                    ]]>
            </description>
            <pubDate>Tue, 23 Jan 2024 07:13:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276528/coapi-1-0-0-released</guid>
            <link>https://www.oschina.net/news/276528/coapi-1-0-0-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[凌鲨 0.7.12 版本更新]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h1>凌鲨 0.7.12 版本更新</h1><ul><li>服务端版本: 0.2.27</li><li>新增: 新增项目排序</li><li>新增: gitpro 中新增提交列表视图</li><li>改进: 工作计划中新增任务/缺陷优先级</li><li>改进: 工作计划中创建任务/缺陷可指定优先级</li><li>改进: 更改任务/缺陷状态可附加评论</li><li>改进: 调整 gitpro 界面样式</li><li>修复: 修复关闭任务/缺陷是未清零剩余工时的问题</li><li>修复: 我的工作面板在专注模式下的宽度异常问题</li><li>修复: 工作计划面板在专注模式下的宽度异常问题</li><li>修复: gitpro 下二进制文本不再进行对比</li></ul><h1>相关截图</h1><p><img height="839" src="https://oscimg.oschina.net/oscnet/up-2e3c43a19a2142e62b67eff7ddcbe0a9d18.png" width="1316" referrerpolicy="no-referrer"></p><p><img height="750" src="https://oscimg.oschina.net/oscnet/up-0c614121f21fffd32a83da154aea88a14fd.png" width="1500" referrerpolicy="no-referrer"></p><p><img height="750" src="https://oscimg.oschina.net/oscnet/up-eeb2a421892402de3f7086f3eb3972ed5bb.png" width="1500" referrerpolicy="no-referrer"></p><p><img height="750" src="https://oscimg.oschina.net/oscnet/up-be7e00eb404b801994f4d48f2692f9220b1.png" width="1500" referrerpolicy="no-referrer"></p><p><img height="750" src="https://oscimg.oschina.net/oscnet/up-e052748b9fa9aca9c46fef1fe22fed15377.png" width="1500" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 23 Jan 2024 06:18:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276525/linksaas-0-7-12-released</guid>
            <link>https://www.oschina.net/news/276525/linksaas-0-7-12-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Simple Admin Go 语言分布式后台管理系统 v1.3.3 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h2>Simple Admin - Go 语言分布式后台管理系统 v1.3.3 更新</h2><h3>项目介绍</h3><p>Simple Admin 是一个开箱即用的分布式微服务后端管理系统，基于 go-zero 开发，为开发中大型后台提供了丰富的功能，支持三端代码生成。 官方自带多种扩展，助力中小企业快速上云，快速迭代。适合用于微服务学习和商用，开源免费。</p><h3>Simple Admin Core / Job / MCMS / FMS / Common v1.3.3 更新</h3><h4>介绍</h4><p>核心模块 Core, 定时任务模块 Job, 消息中心模块 MCMS, 以及文件管理模块 FMS 均已升级</p><h4>本次更新</h4><ul><li>新增 (Core): menu 新增 ServiceName 字段便于区分服务</li><li>新增 (Fms): upload 新增 relativeSrc 返回字段，返回文件的相对路径</li><li>更新： 更新 dockerfile</li><li>优化： 使用最新的 protoc 重新生成 RPC</li><li>更新： 更新依赖</li></ul><h3>Simple Admin Backend UI v1.3.3 更新</h3><h4>介绍</h4><p>Simple Admin UI 是基于 vue-vben-admin 二次开发的为 Simple Admin 专门开发的后台管理界面，基于 Vue3 和 TypeScript 开发， 提供后台错误统一处理，国际化等功能，本项目完全免费，可用于学习和商用.</p><h4>本次更新</h4><ul><li>优化： 优化圆角样式</li><li>优化： tab 组件双横线</li><li>优化： tab 关闭图标样式</li><li>修复： 浏览器自动填写数据的样式错误</li><li>新增： 菜单新增服务名称字段</li><li>新增： vxe table 新增多个方法和组件</li><li>优化： 优化 Form 下的 BasicTitle 组件</li><li>修复： Form 在 suffix 插槽下的对齐错误</li><li>修复： 隐藏的 table column 依然占用空间的 Bug</li><li>更新： 更新登录页大图</li><li>更新： 更新系统依赖</li><li>优化： 隐藏不常用的项目配置选项</li><li>修复： 部分微小 bug</li></ul><h3>Goctls v1.6.23 更新</h3><h4>介绍</h4><p>Goctls 是一个基于 Go Zero 官方生成工具 Goctl 开发的针对 Simple Admin 适配优化的生成工具。提供强大的代码生成功能，同时集成了许多定制工具，实现快速开发微服务接入后台和前台​。三端代码生成可以大大提升开发效率，欢迎体验​。</p><h4>特性</h4><ul><li>go-swagger : 基于 go-swagger 而不是官方的@doc 注解</li><li>多国语言支持</li><li>优化错误信息处理,支持多语言错误</li><li>简单易用的校验器</li><li>支持代码生成，生成 API,RPC 和 web 端的 CRUD 代码</li><li>支持多种额外插件如 GORM, RocketMQ</li><li>对 Simple Admin 的针对性优化</li><li>rpc logic group 分组</li><li>全面支持 Ent 代码生成</li><li>额外工具如本地日志查看，环境变量查看</li></ul><h4>本次更新</h4><ul><li>修复： 字段名称带有 page 时无法生成指针的 bug</li><li>新增： env check 新增 clear_cache 参数，用于清空缓存并重新安装所有工具</li><li>更新： 更新依赖</li></ul><h3>注意： 本次更新需要更新数据库表</h3><h3>更新预览</h3><blockquote><p>优化 tab 样式</p></blockquote><p><img height="352" src="https://oscimg.oschina.net/oscnet/up-27f386b85cc9166ec1cdb00f98591a13c5d.jpg" width="1573" referrerpolicy="no-referrer"></p><blockquote><p>隐藏不常用配置</p></blockquote><p><img height="1305" src="https://oscimg.oschina.net/oscnet/up-874732dfc9812ac455c3df8282b11648d08.jpg" width="2560" referrerpolicy="no-referrer"></p><blockquote><p>新增 clear_cache 参数</p></blockquote><p><img height="405" src="https://oscimg.oschina.net/oscnet/up-191e6fba81f45d3131684ad5fe745ad2fe4.jpg" width="679" referrerpolicy="no-referrer"></p><blockquote><p>UI 整体优化</p></blockquote><p>&nbsp;<img height="1305" src="https://oscimg.oschina.net/oscnet/up-59e0629e8af1a83d602e31a6aa7fbe8ef5c.jpg" width="2560" referrerpolicy="no-referrer"></p><p><img height="1305" src="https://oscimg.oschina.net/oscnet/up-ce0360dcce913ef6c31fdfc4d6124f18466.jpg" width="2560" referrerpolicy="no-referrer"></p><p><img height="1305" src="https://oscimg.oschina.net/oscnet/up-138871d27a15ffc75a9505069906c3d188e.jpg" width="2560" referrerpolicy="no-referrer"></p><p><img height="1305" src="https://oscimg.oschina.net/oscnet/up-f1e545c5c99e6697363a41d88a31e70f8b7.jpg" width="2560" referrerpolicy="no-referrer"></p><p><strong>文档网站：&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.ryansu.tech%2Fzh%2F" target="_blank">点击访问</a></strong></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 23 Jan 2024 03:41:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276502/simple-admin-go-1-3-3-released</guid>
            <link>https://www.oschina.net/news/276502/simple-admin-go-1-3-3-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Firefox 122.0 正式发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Firefox 122.0 现已发布，具体更新内容如下：</p><p><strong>New</strong></p><ul><li><p>Firefox 现在会在搜索引擎提供搜索建议时显示图像和描述。</p></li></ul><p><img height="214" src="https://oscimg.oschina.net/oscnet/up-4cbc89200801a7e727946349df3e26b39fc.png" width="700" referrerpolicy="no-referrer"></p><ul><li><p>翻译功能提高了<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsupport.mozilla.org%2Fkb%2Fwebsite-translation" target="_blank">翻译</a>网页的质量。结果应该更加稳定。这解决了翻译时页面内容可能消失或交互式小部件可能损坏的问题。</p></li><li><p>Firefox 现在支持在 macOS 上创建和使用存储在 iCloud Keychain 中的<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsupport.apple.com%2Fguide%2Fmac-help%2Fcreate-a-passkey-mchl4af65d1a%2Fmac" target="_blank">密钥。</a></p></li><li><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.mozilla.org%2F" target="_blank">来自 Firefox Suggest 的 MDN Web Docs</a>&nbsp;文章建议将在地址栏中提供，供搜索 Web 开发相关信息的用户使用。</p></li><li><p>Web 内容的换行规则现在符合 Unicode 标准。这提高了 Web 浏览器对换行的兼容性。针对东亚和东南亚最终用户的另一项改进是，当双击中文、日语、缅甸语、老挝语、高棉语和泰语等语言的文本时，Firefox 现在支持正确的语言感知单词选择。</p></li><li><p>Firefox 现在为 Ubuntu、Debian 和 Linux Mint 上的 Linux 用户提供了新的&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsupport.mozilla.org%2Fkb%2Finstall-firefox-linux%23w_install-firefox-deb-package-for-debian-based-distributions" target="_blank">.deb 软件包。</a></p></li></ul><p><strong>Fixed</strong></p><ul><li>各种<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.mozilla.org%2Fsecurity%2Fadvisories%2Fmfsa2024-01%2F" target="_blank">安全</a>修复。</li></ul><p><strong>Developer</strong></p><ul><li><p>修复 Inspector Rules 视图中的<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ffxdx.dev%2Frules-view-enter-key%2F" target="_blank">键盘导航</a>。从 Firefox 122 开始，在检查器中编辑选择器、属性名称或属性值时，Enter 键将不再将焦点移动到下一个输入，而是验证输入的内容并聚焦匹配元素 (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugzilla.mozilla.org%2Fshow_bug.cgi%3Fid%3D1861674" target="_blank">#1861674</a>) 。用户仍然可以使用 Ctrl + Enter（macOS 上的 Cmd + Enter）或 Tab 来验证并将焦点移动到下一个输入。</p></li></ul><p><strong>Web Platform</strong></p><ul><li><p>启用 offset-position 属性，这对于大多数 offset-path 值很有用。在 offset-path&nbsp;CSS 属性中添加了对&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.mozilla.org%2Fdocs%2FWeb%2FCSS%2Fray" target="_blank">ray()</a>、<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.mozilla.org%2Fdocs%2FWeb%2FCSS%2Fbasic-shape" target="_blank">basic-shape</a>、<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.mozilla.org%2Fdocs%2FWeb%2FCSS%2Fbox-edge%23values" target="_blank">coord-box</a>&nbsp;的支持。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.mozilla.org%2Fdocs%2FWeb%2FCSS%2Fclip-path" target="_blank">在 Clip-path</a>&nbsp;和&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.mozilla.org%2Fdocs%2FWeb%2FCSS%2Foffset-path" target="_blank">offset-path CSS 属性上添加了对</a>&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.mozilla.org%2Fdocs%2FWeb%2FSVG%2FElement%2Frect" target="_blank">rect()</a>&nbsp;和&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.mozilla.org%2Fdocs%2FWeb%2FCSS%2Fbasic-shape%2Fxywh" target="_blank">xywh()</a>&nbsp;basic shapes 的支持。</p></li><li><p>Firefox 现在支持使用&nbsp;SMIL by animations&nbsp;&nbsp;对 SVG&nbsp;viewBox&nbsp;属性进行动画处理。</p></li><li><p>添加了 LargestContentfulPaint&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.mozilla.org%2Fdocs%2FWeb%2FAPI%2FLargestContentfulPaint" target="_blank">API</a>，它在用户与网页交互之前提供有关最大图像或文本绘制的计时信息。</p></li><li><p>现在支持&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.mozilla.org%2Fdocs%2FWeb%2FHTML%2FElement%2Fhr" target="_blank">hr</a><span style="background-color:#ffffff; color:#42425a"><span>&nbsp;</span>in<span>&nbsp;</span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.mozilla.org%2Fdocs%2FWeb%2FHTML%2FElement%2Fselect" target="_blank">select</a>，允许网站轻松地在元素内使用分隔符。</p></li><li><p><code>&lt;select&gt;</code>元素现在支持 showPicker 方法，这可用于通过 JavaScript 触发下拉行为。</p></li><li><p>未知方案的后备 URL 解析器已更改为<code>DefaultURI</code>，这提高了规范遵循性和 Web 兼容性。</p></li><li><p>启用&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ftc39%2Fproposal-arraybuffer-transfer" target="_blank">ArrayBuffer.prototype.transfer 提案</a>方法，该方法可以转移&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.mozilla.org%2Fdocs%2FWeb%2FJavaScript%2FReference%2FGlobal_Objects%2FArrayBuffer" target="_blank">ArrayBuffer</a>&nbsp;数据的所有权。</p></li><li><p>添加了对<span style="background-color:#ffffff; color:#42425a"><span>&nbsp;</span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.mozilla.org%2Fdocs%2FWeb%2FAPI%2FScreen_Wake_Lock_API" target="_blank">Screen Wake Lock API 的</a>支持。</p></li><li><p>Firefox 现在可以识别「webauthn」autocomplete token，并会在表单自动填充对话框中建议使用密码。</p></li><li><p>脚本现在可以在 Private Browsing 模式下存储<code>cacheAPI</code>数据。获得在常规浏览模式与 Private Browsing 模式下的统一体验。</p></li><li><p>为了进一步保护用户隐私，Firefox 现在会对使用 currentColor 作为输入的过滤器进行 taints filters。由于颜色可以通过 :visited&nbsp;pseudo selector 设置，它可能包含隐私敏感信息，因此必须将这些 primitives 标记为 tainted。这意味着如果你使用这样的过滤器，将无法从&nbsp;canvas 中读取过滤器输出。</p></li><li><p>现在，Firefox 中默认启用&nbsp;Uneven Level Protection Forward Error Correction&nbsp;(ULPFEC)。这为 WebRTC 服务提供了另一个可以利用的工具，为互联网连接不稳定的用户提高视频质量。</p></li></ul><p><strong>未解决</strong></p><ul><li>某些配备较旧 AMD CPU 的计算机可能会在文件对话框中看到图像缩略图错误地呈现为全黑。如果是这种情况，更新显卡驱动程序应该可以解决此问题。</li></ul><p>详情可<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.mozilla.org%2Fen-US%2Ffirefox%2F122.0%2Freleasenotes%2F" target="_blank">查看更新说明</a>。</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 23 Jan 2024 02:22:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276489/firefox-122-0-released</guid>
            <link>https://www.oschina.net/news/276489/firefox-122-0-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[国产数据库管理工具 CloudDM v2.4.3 发布，改善 Redis、Doris 等数据使用体验]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div><div><p style="margin-left:0; margin-right:0"><span>CloudDM<span>&nbsp;</span></span><span style="color:#333333">是<span>&nbsp;</span></span><span>ClouGence</span><span style="color:#333333"><span>&nbsp;</span>公司推出的一款</span><strong><span>一站式多数据源开发管理工具</span></strong><span style="color:#333333">，使用它可以方便地访问和管理<span>&nbsp;</span></span><span>MySQL、Oracle、PostgreSQL、阿里云 RDS、Greenplum、TiDB、Redis、StarRocks、Doris、SelectDB、SQL SERVER、ClickHouse、OceanBase 、PolarDB-X 、IBM Db2 等多种不同类型的数据库。通过 CloudDM 丰富的数据源支持可以避免在多个专业工具之间切换，从而提高工作效率。</span></p><p style="margin-left:0; margin-right:0"><span>它是本地化的应用程序，没有后台进程。和<span>&nbsp;</span></span><strong><span>DataGrip</span></strong><span>、</span><strong><span>Navicat</span></strong><span><span>&nbsp;</span>一样在安装完成后，只需要双击应用程序图标，便可以方便的管理位于本地计算机或远程计算机上的数据库。已经支持<span>&nbsp;</span></span><strong><span>Windows</span></strong><span>、</span><strong><span>MacOS</span></strong><span><span>&nbsp;</span>和<span>&nbsp;</span></span><strong><span>Linux</span></strong><span><span>&nbsp;</span>主流操作系统。</span></p></div></div><p style="color:#333333; margin-left:0; margin-right:0; text-align:center"><img src="https://oscimg.oschina.net/oscnet/up-c0a92ca7654a775e970ab24569abe3fe44d.png" referrerpolicy="no-referrer"></p><div><div><h2><span>更新内容</span></h2><div><ul><li><span>[新增]</span><ul><li><div><p>新增 8 个 Redis 命令的支持，分别为：<span>PING、QUIT、AUTH、TIME、SAVE、ROLE、FLUSHALL、BGREWRITEAOF</span></p></div></li></ul></li><li><span style="color:#333333">[优化]</span><ul><li><span>优化，表结构编辑器，编辑后未提交直接关闭标签页现在会有提醒</span><span style="color:#333333">​</span></li></ul></li><li><span style="color:#333333">[修复]</span><ul><li><span>修复，生成 Insert 语句错误的问题</span></li><li><span>修复 Doris 2.0.X 版本设计表等功能报错的问题</span></li><li><span style="color:#333333">修复，新增标签页，丢失当前编辑器内容的问题</span></li><li><span>修复 MySQL、OceanBase、TiDB 等数据库新建表功能，列默认值为函数时，识别为字符串的问题</span></li><li><span>修复 MySQL、OceanBase、TiDB 等数据库设计表功能，列日期类型默认值为函数时，值显示错误的问题</span></li></ul></li></ul></div></div><h2><span>下载与反馈</span></h2><ul><li><span>产品官网：</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.clougence.com%2Fclouddm-personal" target="_blank"><span>https://www.clougence.com/clouddm-personal</span></a></li><li><span>问题反馈：</span><a href="https://gitee.com/clougence/clouddm-issue/issues" target="_blank"><span>https://gitee.com/clougence/clouddm-issue/issues</span></a></li><li>Release Node：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.clougence.com%2Fdmp-doc%2Freleaseinfo%2Fdesktop_2_4_2" target="_blank">https://www.clougence.com/dmp-doc/releaseinfo/desktop_2_4_2</a></li><li><span style="color:#333333">微信交流群：访问产品官网，扫描右侧二维码即可加入</span>​​​​​​</li></ul></div></div>
                                    ]]>
            </description>
            <pubDate>Tue, 23 Jan 2024 01:49:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276479/clouddm-2-4-3-released</guid>
            <link>https://www.oschina.net/news/276479/clouddm-2-4-3-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
    </channel>
</rss>
