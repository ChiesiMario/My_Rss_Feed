<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[开源中国-软件更新资讯]]>
        </title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="https://rsshub.app/oschina/news/project" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[开源中国-软件更新资讯 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Wed, 10 Jan 2024 14:01:35 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[基于 mybatis 的 orm：mybatis-mp 1.3.3 发布 - 超丰富的 api！]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>本次更新：<br> 1.&nbsp;select(vo) 自动帮助你选择需要 select 的列</p><p>2. 增加@Fetch 注解，实现结果 1 对 1,1 对多，让不想写 join 的同学，方便快捷</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">mybatis-mp 包含丰富的 api：</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">1：基于注解，映射数据库；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">2：支持多表 join 和返回；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">3：api 采用 lambda 和 stream 流式设计；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">4：select 自动化以及结果 1 对 1,1 对多，超级方便快捷；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">5：内置分页以及超强的 sql 优化功能；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">6：稳定且性能极优；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">7：轻量级封装 mybatis，几乎没有侵入；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">8：api 丰富，支持数据库函数、多表、乐观锁、多租户、逻辑删除、默认值（可动态值） 等众多功能；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">9：零学习成本，和写 sql 一样方便。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">10：支持复杂的返回关系映射：例如一对一 ，一对多，多对多；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">11：支持自定义 sql 模板，再也不用担心框架支持不足；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">12：内置代码生成器，通过配置，可定制自身规范；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">13：全新的框架，全新的设计理念，新的就是好！</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 10 Jan 2024 09:45:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/275099/mybatis-mp-1-1-3-released</guid>
            <link>https://www.oschina.net/news/275099/mybatis-mp-1-1-3-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[🎉 领域模型即服务 | Wow 2.13.2 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><a href="https://ahoowang.gitee.io/wow/"><img alt="Wow:基于 DDD、EventSourcing 的现代响应式 CQRS 架构微服务开发框架" src="https://static.oschina.net/uploads/img/202312/13135012_Zb9v.svg" width="150" referrerpolicy="no-referrer"></a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><strong>领域驱动</strong><span>&nbsp;</span>|<span>&nbsp;</span><strong>事件驱动</strong><span>&nbsp;</span>|<span>&nbsp;</span><strong>测试驱动</strong><span>&nbsp;</span>|<span>&nbsp;</span><strong>声明式设计</strong><span>&nbsp;</span>|<span>&nbsp;</span><strong>响应式编程</strong><span>&nbsp;</span>|<span>&nbsp;</span><strong>命令查询职责分离</strong><span>&nbsp;</span>|<span>&nbsp;</span><strong>事件溯源</strong></p><blockquote><p style="margin-left:0; margin-right:0"><strong>官方文档：</strong><img alt="👉" height="14" src="https://cn-assets.gitee.com/assets/emoji/point_right-8d392cf32998e3bca12bb7b4ee10dae0.png" width="14" referrerpolicy="no-referrer"><span>&nbsp;</span><a href="https://ahoowang.gitee.io/wow/" target="_blank">https://ahoowang.gitee.io/wow/</a><span>&nbsp;</span><img alt="👈" height="14" src="https://cn-assets.gitee.com/assets/emoji/point_left-4570b6929b8880ab2e8b8031007fef18.png" width="14" referrerpolicy="no-referrer"></p></blockquote><h2>更新内容</h2><blockquote><p style="margin-left:0; margin-right:0">新增<span>&nbsp;</span><code>wow-bi</code><span>&nbsp;</span>模块，自动生成<span>&nbsp;</span><em>ETL</em><span>&nbsp;</span>实时同步脚本，以及<strong>快照展开视图</strong>-~-&gt;&gt;<strong>数据仓库的大宽表。</strong></p></blockquote><blockquote><ul><li>聚合命令（<code>Command</code>）: 包含用户发送的所有命令。</li><li>状态事件（<code>StateEvent</code>）: 包含聚合状态的完整变化历史，同时记录了引发这些状态变更的事件关联信息。</li><li>最新状态事件（<code>LastStateEvent</code>）: 包含最新的聚合状态，类似于传统数据库中的表，专门用于存储每个聚合根的最新状态信息。</li><li>快照展开视图: 相比于传统数据库的关系表，聚合根快照是以聚合根为中心组织在一起的。 一对一、一对多的关系也是维护在聚合根内部的，所以并不会出现关系表的情况。 但是在数据分析时，我们需要将聚合根的快照展开，以便基于关系模式进行更有深度的数据分析。 Wow 框架提供的 ETL 脚本工具能够将聚合根快照逐层展开，形成关系清晰的视图，该展开视图甚至可以作为<strong>数据仓库的大宽表</strong>，为业务决策提供更清晰、更全面的数据支持。</li><li>了解更多 -&gt;&nbsp;<a href="https://ahoowang.gitee.io/wow/guide/bi.html">https://ahoowang.gitee.io/wow/guide/bi.html</a></li></ul></blockquote><ul><li>特性 (bi): 新增<span>&nbsp;</span><code>wow-bi</code><span>&nbsp;</span>模块，支持自动生成<span>&nbsp;</span><em>ETL</em><span>&nbsp;</span>实时同步脚本。</li><li>特性 (bi): 支持通过<span>&nbsp;</span><code>RESTFul</code><span>&nbsp;</span>端点生成<span>&nbsp;</span><em>ETL</em><span>&nbsp;</span>同步脚本。</li><li>特性 (bi): 状态聚合根展开视图<span>&nbsp;</span><em>ETL</em><span>&nbsp;</span>脚本解析支持<span>&nbsp;</span><code>Jackson</code><span>&nbsp;</span>序列化器。</li><li>特性 (bi): 状态聚合根展开视图<span>&nbsp;</span><em>ETL</em><span>&nbsp;</span>脚本解析支持<span>&nbsp;</span><code>java.time</code><span>&nbsp;</span>模块。</li><li>依赖 (dashboard): 升级<span>&nbsp;</span><code>zone.js</code><span>&nbsp;</span>到<span>&nbsp;</span><code>v0.14.3</code></li><li>依赖 (plugin): 升级<span>&nbsp;</span><code>io.mockk:mockk</code><span>&nbsp;</span>到<span>&nbsp;</span><code>v1.13.9</code></li></ul><h3>ETL 同步流程</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:start"><img alt="ETL 同步流程" src="https://foruda.gitee.com/images/1704878793697689592/5fda25c1_384561.png" referrerpolicy="no-referrer"></p><h3>传统架构 VS 事件溯源</h3><p style="color:#40485b; margin-left:0em; margin-right:0em; text-align:start"><img alt="传统架构 VS 事件溯源" src="https://foruda.gitee.com/images/1704878807657006766/300ee974_384561.png" referrerpolicy="no-referrer"></p><h2>简介</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><em>Wow</em><span>&nbsp;</span>是一个基于领域驱动设计和事件溯源的现代响应式<span>&nbsp;</span><em>CQRS</em><span>&nbsp;</span>微服务开发框架，历经多年生产环境验证。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">旨在帮助开发者构建现代化的、高性能且易于维护的微服务应用程序，充分发挥领域驱动设计和事件溯源等模式优势的同时降低应用的复杂性以及实践成本。</p><blockquote><p style="margin-left:0; margin-right:0">值得一提的是，领域驱动设计和事件溯源并非微服务架构的专属，<em>Wow</em><span>&nbsp;</span>框架不仅适用于微服务开发，同样也可用于构建基于领域驱动设计的单体应用程序。</p></blockquote><h2>快速开始</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://ahoowang.gitee.io/wow/guide/getting-started.html">使用 Wow 项目模板快速创建基于 Wow 框架的 DDD 项目</a></p><h2>特性概览</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-Features" src="https://gitee.com/AhooWang/Wow/raw/main/documentation/docs/public/images/Features.png" referrerpolicy="no-referrer"></p><h2>架构图</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-Architecture" src="https://gitee.com/AhooWang/Wow/raw/main/documentation/docs/public/images/Architecture.svg" referrerpolicy="no-referrer"></p><h2>背景</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">随着业务的发展和复杂性的增加，传统的架构和开发方式逐渐显露出瓶颈。<em>领域驱动设计</em>和<em>事件溯源</em>等理念在提高系统设计的灵活性和可维护性方面表现出色，但在实践中常常需要面对复杂性和学习曲线的挑战。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><em>Wow</em><span>&nbsp;</span>框架的目标是以简单易用的方式将领域驱动设计和事件溯源等理念融入到微服务应用开发中，降低开发者的学习成本，提高开发效率。 通过提供现代响应式的<span>&nbsp;</span><em>CQRS</em><span>&nbsp;</span>架构和相关组件，<em>Wow</em><span>&nbsp;</span>框架旨在让开发者更专注于业务逻辑的实现，而不必过多关心底层技术细节。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">经过多年的实践和不断的演进，<em>Wow</em><span>&nbsp;</span>框架在生产环境中得到了验证，积累了丰富的经验。这些经验和反馈不仅丰富了框架的功能和性能，也为持续的改进和优化提供了宝贵的指导。</p><h2>对于开发者而言，<em>Wow</em><span>&nbsp;</span>框架意味着什么？</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">我曾告诫我的团队：如果我们过于依赖<em>数据驱动设计</em>而忽视<em>领域驱动设计</em>，我们最终将沦为<span>&nbsp;</span><em>CRUD</em><span>&nbsp;</span>工程师。</p><blockquote><p style="margin-left:0; margin-right:0"><em>CRUD</em><span>&nbsp;</span>工程师的竞争力和可替代性可想而知，这或许是为何会有<span>&nbsp;</span><em>35</em><span>&nbsp;</span>岁效应，企业显然更倾向于招募没有太多生活羁绊、更加廉价的<span>&nbsp;</span><em>25</em><span>&nbsp;</span>岁<span>&nbsp;</span><em>CRUD</em><span>&nbsp;</span>工程师。</p></blockquote><h3>业务价值</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">软件系统的核心价值体现在业务价值上，研发人员不应只关注技术实现上，而是应该更多地关注业务价值的实现。 这其中的好处显而易见，当你开发完一个业务系统之后，你将变成一个业务专家，甚至比跟你合作的领域专家还要专业，因为你需要洞察业务细节。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">使用<span>&nbsp;</span><em>Wow</em><span>&nbsp;</span>框架，意味着你将关注点放在围绕领域模型设计上，与业务专家一起探索业务领域，而不是关注于技术实现上。 你仅需编写领域模型，即可完成服务开发，<em>Wow</em><span>&nbsp;</span>框架自动为你准备好<span>&nbsp;</span><em>OpenAPI</em><span>&nbsp;</span>接口。</p><blockquote><p style="margin-left:0; margin-right:0">在《实现领域驱动设计》一书中，作者 Vaughn Vernon 提到：核心域才值得投入精力进行领域驱动设计， 但如果你使用<span>&nbsp;</span><em>Wow</em><span>&nbsp;</span>框架，你将发现，因为低廉开发成本、快速的开发效率，即使是次要的支撑子域也值得<span>&nbsp;</span><em>DDD</em>。</p></blockquote><h3>性能与伸缩性</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">随着业务的发展，你需要开始思考系统的性能和伸缩性问题。 在传统架构中，这牵扯到数据库关系模式、分片规则等复杂问题，同时你还需要处理因数据库分片导致的跨分片事务问题。 这时，你不得不修改你的业务代码，以适应水平拆分后的数据库架构。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">然而，如果你选择使用<span>&nbsp;</span><em>Wow</em><span>&nbsp;</span>框架，你将不再需要过多关注数据库关系模式、分片规则等问题。你的业务代码无需变更，系统能够轻松实现水平伸缩。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">你可以在这里了解更多关于<span>&nbsp;</span><a href="https://ahoowang.gitee.io/wow/guide/perf-test.html">Wow 框架的性能</a>。</p><h3>读写分离与同步延迟</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">读写分离是一种极为普遍的性能优化架构模式。 然而，同步延迟问题常伴随而来，事务执行成功后写库落库成功，但读库同步延迟，用户刷新页面后无法获取最新数据，从而对用户的体验产生影响。例如：</p><ul><li>用户发起下单事务，写库执行成功，但由于某种原因，读库同步延迟，用户刷新页面后发现订单未成功创建。</li><li>商家编辑完商品后，同步到<span>&nbsp;</span><em>Elasticsearch</em><span>&nbsp;</span>索引库，但由于某种原因，同步延迟，导致商家刷新页面后搜索不到该商品。</li></ul><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">通常，大家采用最简便的方法，等待 1 秒后刷新页面。 虽然这种方式能解决大多数数据同步延迟的问题，但效率不够高。 因为大多数情况下，同步在 100 毫秒内就已完成，剩余的 900 毫秒成了<em>浪费</em>。 然而，有时 1 秒无法完成同步，这就导致用户获取的数据变得<strong>无效</strong>。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">使用<span>&nbsp;</span><em>Wow</em><span>&nbsp;</span>框架，你可以通过等待<span>&nbsp;</span><em>PROJECTED</em><span>&nbsp;</span>信号完成，然后再将结果返回给用户，以更为优雅和高效的方式处理数据同步延迟的问题。</p><h3>工程质量</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><em>单元测试</em>是确保代码质量且符合预期业务需求的重要手段，但在传统架构中，单元测试往往是一项相当困难的任务，因为你需要考虑数据库连接、事务管理、数据清理等问题。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">使用<span>&nbsp;</span><em>Wow</em><span>&nbsp;</span>框架，你将会发现基于<span>&nbsp;</span><em>Given-&gt;When-&gt;Expect</em><span>&nbsp;</span>模式的测试套件，使得单元测试变得异常简单。 你只需关注领域模型是否符合预期，而无需为数据库连接等问题烦恼。</p><blockquote><p style="margin-left:0; margin-right:0">在实际应用中，我们将领域模型的单元测试覆盖率下限阈值设置为<span>&nbsp;</span><strong>85%</strong>，也是可以轻松实现的。</p><p style="margin-left:0; margin-right:0">在没有刻意要求的情况下，开发人员甚至自觉地将覆盖率提升至<span>&nbsp;</span><strong>95%</strong>。</p><p style="margin-left:0; margin-right:0">因此，每次提交代码都变得轻松自在，因为你确信你的代码经过了充分的测试，并且真正意义上从单元测试中获得了收益。</p></blockquote><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">在研发同级别的项目中，我们的测试团队在系统<span>&nbsp;</span><em>API</em><span>&nbsp;</span>测试中发现，基于 Wow 框架的项目，其<span>&nbsp;</span><em>BUG</em><span>&nbsp;</span>数仅为传统架构项目的<span>&nbsp;</span><strong>1/3</strong>。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">你可以在这里了解更多关于<span>&nbsp;</span><a href="https://ahoowang.gitee.io/wow/guide/test-suite.html">Wow 单元测试套件</a>。</p><h2>对于企业而言，<em>Wow</em><span>&nbsp;</span>框架意味着什么？</h2><h3>商业智能</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><em>商业智能</em>是企业决策的关键支持，而数据则是商业智能的分析原料。业务数据越为丰富有价值，商业智能的分析结果越准确，决策也就更加可靠。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">与传统架构有着显著差异，<em>Wow</em><span>&nbsp;</span>提供了实时聚合根状态事件（<code>StateEvent</code>）和聚合命令（<code>Command</code>）作为数据分析的数据源，同时极大降低了实时<span>&nbsp;</span><em>ETL</em>（<code>Extract</code>,<span>&nbsp;</span><code>Transform</code>,<span>&nbsp;</span><code>Load</code>）的难度。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">在传统架构中，实现实时<span>&nbsp;</span><em>ETL</em><span>&nbsp;</span>通常需要经过繁琐的流程，包括<span>&nbsp;</span><code>DB-&gt;CDC-&gt;Process-&gt;DB</code>，而在<span>&nbsp;</span><em>Wow</em><span>&nbsp;</span>框架中，仅需一段简单的<span>&nbsp;</span><em>SQL</em><span>&nbsp;</span>脚本即可完成这一过程。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">另外，在传统架构中，使用<span>&nbsp;</span><em>CDC</em>（<code>MySql Binlog</code>）数据仅记录数据的变化，缺乏明确的业务语义。进行业务分析时，需要基于数据状态的变化推断出业务语义，这往往需要进行大量的数据处理。 相较之下，<em>Wow</em><span>&nbsp;</span>框架直接提供了聚合根状态事件和聚合命令作为数据分析的数据源，极大降低了数据处理的难度。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><em>Wow</em><span>&nbsp;</span>提供的实时同步机制将数据实时同步至数据仓库（<em>ClickHouse</em>），为实时数据分析提供了极大的便利。这种方法为商业智能提供了强有力的支持，构建了一个实时数据分析系统，使决策制定能够基于及时而准确的信息。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">你可以在这里了解更多关于<span>&nbsp;</span><a href="https://ahoowang.gitee.io/wow/guide/bi.html">Wow 商业智能</a>。</p><h3>操作审计</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><em>操作审计</em>是企业中保障安全性和合规性的重要组成部分，同时也是对系统操作进行监控和追踪的关键手段。<em>Wow</em><span>&nbsp;</span>框架在这方面为企业带来了显著的优势。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">通过记录聚合命令（<code>Command</code>）作为操作审计的数据源，<em>Wow</em><span>&nbsp;</span>框架能够详细追踪系统中的各种操作。 这些记录不仅包含了操作本身的内容，还涵盖了操作触发的副作用（<em>领域事件</em>），为审计提供了更为全面和准确的数据基础。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">相较于传统审计方法，<em>Wow</em><span>&nbsp;</span>框架的操作审计的数据源具备更加明确的业务语义，以及操作后产生的明确领域事件。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">此外，Wow 框架提供的实时数据同步机制也为操作审计带来了便利，确保了审计数据的及时性和一致性。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">了解更多关于<span>&nbsp;</span><a href="https://ahoowang.gitee.io/wow/guide/bi.html#%E8%81%9A%E5%90%88%E5%91%BD%E4%BB%A4">Wow 操作审计</a>。</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 10 Jan 2024 09:32:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/275098/wow-2-13-2-released</guid>
            <link>https://www.oschina.net/news/275098/wow-2-13-2-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[企业级快速开发框架 nbsaas-boot 1.1.6-2023 发布了]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div><div><pre><code><span><span><span><span><span>&lt;</span></span></span></span><span><span><span><span><span><span><span><span><span>parent</span></span></span></span></span></span></span></span></span><span><span><span><span>&gt;</span></span></span></span></span><span><span><span><span><span>&lt;</span></span></span></span><span><span><span><span><span><span><span><span><span>groupId</span></span></span></span></span></span></span></span></span><span><span><span><span>&gt;</span></span></span></span></span>com.nbsaas.boot<span><span><span><span><span>&lt;/</span></span></span></span><span><span><span><span><span><span><span><span><span>groupId</span></span></span></span></span></span></span></span></span><span><span><span><span>&gt;</span></span></span></span></span><span><span><span><span><span>&lt;</span></span></span></span><span><span><span><span><span><span><span><span><span>artifactId</span></span></span></span></span></span></span></span></span><span><span><span><span>&gt;</span></span></span></span></span>nbsaas-boot<span><span><span><span><span>&lt;/</span></span></span></span><span><span><span><span><span><span><span><span><span>artifactId</span></span></span></span></span></span></span></span></span><span><span><span><span>&gt;</span></span></span></span></span><span><span><span><span><span>&lt;</span></span></span></span><span><span><span><span><span><span><span><span><span>version</span></span></span></span></span></span></span></span></span><span><span><span><span>&gt;</span></span></span></span></span>1.1.6-2023<span><span><span><span><span>&lt;/</span></span></span></span><span><span><span><span><span><span><span><span><span>version</span></span></span></span></span></span></span></span></span><span><span><span><span>&gt;</span></span></span></span></span><span><span><span><span><span>&lt;/</span></span></span></span><span><span><span><span><span><span><span><span><span>parent</span></span></span></span></span></span></span></span></span><span><span><span><span>&gt;</span></span></span></span></span></code></pre><p><img alt="" src="https://foruda.gitee.com/images/1692714554881768744/cdda40bc_1029.png" referrerpolicy="no-referrer"></p><p><strong>本次更新内容</strong></p><p>1. 数据请求全面从没用 json 格式数据提交，增加前端参数加密和后端响应加密功能。</p><p>2. 修改 vue3 代码生成模板</p><p>3. 增加@EncryptionData 注解，放到参数上，后台认为请求需要加密，进行解密。放到方法头上，aes 加密响应请求。</p><p>4. 增加 mybatis mapper 文件夹生成 Command</p><p>5. 增加数据库逻辑删除代码生成功能</p><p>6. 修改后台代码生成器模板代码</p><p><strong>nbsaas-boot 具有以下特点：</strong></p><p>自动建表：nbsaas-boot 提供了自动建表功能，根据用户定义的数据模型自动生成数据库表结构，减少手动操作，提高开发效率。</p><p>支持 jpa，mybatis-plus 等数据库 orm。内置一套访问数据的注解 DSL</p><p>开发规范：nbsaas-boot 提供一套开发规范，包括代码风格、命名规范、注释规范等，使团队开发更加规范化和高效化。</p><p>代码生成器：nbsaas-boot 提供代码生成器，根据数据模型自动生成前端和后端代码，提高开发效率和代码质量。</p><p>多租户支持：nbsaas-boot 支持多租户，为不同客户提供独立的数据存储空间和访问权限，保证数据安全性和隔离性</p><p><strong>通过 Command 处理复杂的业务</strong></p><pre><code>InputRequestObject context = <span><span><span><span><span><span>new</span></span></span></span></span></span> InputRequestObject();
context.setConfig(config);
context.setFormBean(formBean);

 

    <span><span><span><span><span><span>new</span></span></span></span></span></span> DomainCommand()
        .after(<span><span><span><span><span><span>new</span></span></span></span></span></span> ApiCommand())
        .after(<span><span><span><span><span><span>new</span></span></span></span></span></span> ConvertCommand())
        .after(<span><span><span><span><span><span>new</span></span></span></span></span></span> ControllerFrontCommand())
        .after(<span><span><span><span><span><span>new</span></span></span></span></span></span> RestCommand())
        .after(<span><span><span><span><span><span>new</span></span></span></span></span></span> ExtApiCommand())
        .after(<span><span><span><span><span><span>new</span></span></span></span></span></span> RepositoryCommand())
        .after(<span><span><span><span><span><span>new</span></span></span></span></span></span> FieldCommand())
        .after(<span><span><span><span><span><span>new</span></span></span></span></span></span> FinishCommand()).execute(context);</code></pre><p><strong>模型构建</strong></p><pre><code><span><span><span><span><span><span>@CatalogClass</span></span></span></span></span></span><span><span><span><span><span><span>@FormAnnotation</span></span></span></span></span></span>(title = <span><span><span><span><span><span>"组织架构管理"</span></span></span></span></span></span>, model = <span><span><span><span><span><span>"组织架构"</span></span></span></span></span></span>, menu = <span><span><span><span><span><span>"1,27,88"</span></span></span></span></span></span>)
<span><span><span><span><span><span>@Data</span></span></span></span></span></span><span><span><span><span><span><span>@Entity</span></span></span></span></span></span><span><span><span><span><span><span>@Table</span></span></span></span></span></span>(name = <span><span><span><span><span><span>"sys_structure"</span></span></span></span></span></span>)
public class Structure extends CatalogEntity {

    <span><span><span><span><span><span>@FormField</span></span></span></span></span></span>(title = <span><span><span><span><span><span>"父分类名称"</span></span></span></span></span></span>)
    <span><span><span><span><span><span>@Comment</span></span></span></span></span></span>(<span><span><span><span><span><span>"父分 id"</span></span></span></span></span></span>)
    <span><span><span><span><span><span>@FieldName</span></span></span></span></span></span><span><span><span><span><span><span>@FieldConvert</span></span></span></span></span></span>(classType = <span><span><span><span><span><span>"Integer"</span></span></span></span></span></span>)
    <span><span><span><span><span><span>@ManyToOne</span></span></span></span></span></span>(fetch = FetchType.LAZY)
    private Structure parent;

    <span><span><span><span><span><span>@OneToMany</span></span></span></span></span></span>(fetch = FetchType.LAZY, mappedBy = <span><span><span><span><span><span>"parent"</span></span></span></span></span></span>)
    private List&lt;Structure&gt; children;

}</code></pre><p>搜索模型</p><pre><code class="language-java"><span>@Data</span><span>public</span><span><span>class</span><span>ArticleSearch</span><span>extends</span><span>PageRequest</span><span>implements</span><span>Serializable</span></span>{

    <span>/**
     * 主键 id  ==查询
     **/</span><span>@Search</span>(name = <span>"id"</span>, operator = Operator.eq)
    <span>private</span> Long id;

    <span>/**
     * 文章标题，模糊查询
     **/</span><span>@Search</span>(name = <span>"title"</span>, operator = Operator.like)
    <span>private</span> String title;


}</code></pre><p>通过模型数据提取，然后通过代码生成器生成后端代码 + vue3 后端管理代码</p><p>项目最佳实践:https://gitee.com/quhaodian/nbsaas-mall2</p><p>基础功能项目 https://gitee.com/cng1985/nbsaas-boot-starter<br> 项目脚手架 https://gitee.com/cng1985/nbsaas-admin<br> vue3 后台管理脚手架 https://gitee.com/cng1985/nbsaas-admin-vue3</p></div></div></div>
                                    ]]>
            </description>
            <pubDate>Wed, 10 Jan 2024 08:47:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/275093/nbsaas-boot-1-1-6-2023</guid>
            <link>https://www.oschina.net/news/275093/nbsaas-boot-1-1-6-2023</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Bun 1.0.22 版本发布，提升性能和兼容性]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Bun 1.0.22 版本终于面世了！这个小巧玲珑的 JavaScript 运行时可谓是编程界的「黑马」，短短一年多时间就以其独特的魅力吸引了众多开发者。这一次的更新再次印证了 Bun 背后的团队充满激情与执着，他们一如既往地致力于让 Bun 成为 JavaScript 开发的「瑞士军刀」。那么，这一期的更新又带来了哪些惊喜呢?让我们来一一揭晓。</p><p>首先，解决了在 Vercel 上安装时遇到的问题。我们都知道，Vercel 是前沿的无服务器平台，可以让开发者零配置部署应用。但是由于某些兼容性问题，Bun 的自动安装脚本在这里屡屡碰壁。这一次，Bun 的创造者 Jarred 针对此进行了靶向优化，实现了类似 posix_spawn 的 polyfill，终于搞定了这个「心病」。对于许多依赖 Vercel 作为部署环境的开发者来说，这无疑是一个大大的好消息。</p><p>其次，增加了 performance.mark 等用户性能衡量的 API。这些 API 可以帮助开发者更好地分析应用的性能瓶颈所在，是调优的利器。与此同时，还增加了 PerformanceObserver 的支持，可以监听各类性能指标事件，实时掌握应用的运行状况。</p><p>再者，增强了 child_process 的功能，现在支持传递额外的 pipes。这使跨进程通信变得更加方便，父子进程可以通过管道自由地相互传递数据。未来，这也为支持 Playwright 奠定了基础。</p><p>此外，Fetch 请求现在可以启用 Brotli 压缩。对带宽敏感的应用来说，这无疑是个福音。不仅如此，Bun 的创造者们还调整了 Brotli 的链接方式，从动态链接改为静态链接，以解决某些 Linux 发行版缺乏必要库导致的问题。</p><p>Buffer 模块也迎来了性能提升，Buffer.concat 的速度提高了 15% 至 400%。考虑到 Buffer 在 Node 开发中的广泛应用，这个优化可以带来很大的整体收益。此外，还修复了 Buffer.concat 在处理大量缓冲区时可能导致崩溃的 bug。</p><p>Console 模块的 console.table 用法也得到增强，现在可以正确处理表格中包含 emoji 和 Unicode 字符的情况了。许多开发者喜欢在日志中加入 emoji 表情，此次升级终于兑现了这一需求。</p><p>当然，此版本中还有很多其他改进，例如为 worker_threads 增加了 argv 和 execArgv 选项、修复了绑定到 0.0.0.0 时也同时绑定 IPv6 的 bug、为 assert 模块增加了 doesNotMatch 断言等等。</p><p>总体来看，Bun 1.0.22 版本带来了大量实用的优化和新功能。它们或许不那么「高大上」，但确确实实解决了开发者在使用过程中遇到的痛点。这再次彰显了 Bun 背后的团队秉承务实的设计理念和对开发者需求的关注。</p><p>Bun 已经成长为一个「大户」，但它的开发团队仍然保持着像创业公司一样的激情与敏捷。我们有理由相信，在他们的不懈努力下，Bun 将为 JavaScript 开发继续献上更多惊喜。让我们拭目以待吧！</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 10 Jan 2024 07:46:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/275084/bun-1-0-22-released</guid>
            <link>https://www.oschina.net/news/275084/bun-1-0-22-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[凌鲨 0.7.7 版本更新]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h1>凌鲨 0.7.7 版本更新</h1><ul><li>服务端版本: 0.2.23</li><li>新增: 我的工作面板新增我的关注板块</li><li>新增: 顶部导航栏新增返回上一页面按钮</li><li>改进: 项目沟通可修改 1 小时内发出的消息</li><li>改进: 编辑器链接信息新增信息面板/工作集合/接口集合/数据标注</li><li>改进: 同步服务器和客户端时间</li><li>修复: 修复关注数量返回不正确的问题</li><li>去除: 未读通知面板去除标记已读按钮</li><li>去除: 去除项目成员额外状态信息</li><li>去除: 设置去除我的工作相关设置</li></ul><h1>相关截图</h1><p><img height="750" src="https://oscimg.oschina.net/oscnet/up-6dff2d9797f3317fdd7423b8e0f3ffde62c.png" width="1500" referrerpolicy="no-referrer"></p><p><img height="750" src="https://oscimg.oschina.net/oscnet/up-11c90221b5ab4064fae32ab15b8c6af0529.png" width="1500" referrerpolicy="no-referrer"></p><p><img height="750" src="https://oscimg.oschina.net/oscnet/up-a61723f9c36c8c0f6caf30681606fed94d0.png" width="1500" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 10 Jan 2024 07:31:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/275083/linksaas-0-7-7-released</guid>
            <link>https://www.oschina.net/news/275083/linksaas-0-7-7-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Cphalcon 5.6.0 发布，PHP 的 C 扩展 Web 框架]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="color:#333333">Cphalcon 是一个开源的 Web 框架，作为 PHP 语言的 C 扩展，它提供了更高的性能与更低的资源消耗。</span>Cphalcon v5.6.0<span style="color:#333333"><span>&nbsp;</span>现已发布，具体更新内容如下：</span></p><p style="text-align:start"><strong><span><span><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>Changed</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></p><ul><li>出于性能原因，已将<code>Phalcon\Db\Adapter\Pdo\Mysql</code>改为不使用<code>PDO</code>的特定 flag（<code>PDO::ATTR_EMULATE_PREPARES</code>或<code>PDO::ATTR_STRINGIFY_FETCHES</code>）<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fphalcon%2Fcphalcon%2Fissues%2F16474" target="_blank">#16474</a></li><li>将<code>Phalcon\Db\AbstractDb</code>与<code>Phalcon\Db\Adapter\AbstractAdapter</code>合并，因为前者未被使用&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fphalcon%2Fcphalcon%2Fissues%2F16474" target="_blank">#16474</a></li></ul><p style="text-align:start"><strong><span><span><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>Added</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></p><ul><li>为<code>Phalcon\Datamapper\Query\AbstractQuery</code>添加了<code>resetColumns()</code>,&nbsp;<code>resetFrom()</code>,&nbsp;<code>resetWhere()</code>,&nbsp;<code>resetGroupBy()</code>,&nbsp;<code>resetHaving()</code>,&nbsp;<code>resetOrderBy()</code>,&nbsp;<code>resetLimit()</code>,<code>resetFlags()</code>以允许重置查询过滤器。</li></ul><p style="text-align:start"><strong><span><span><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>Fixed</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></p><ul><li>修复<code>Phalcon\Mvc\Model::count</code>忽略<code>order</code>参数（Posgresql 需要）<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fphalcon%2Fcphalcon%2Fissues%2F16471" target="_blank">#16471</a></li><li>修复了<code>Phalcon\Mvc\Model::toArray</code>添加的 ignore getters 的参数，以免破坏序列化。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fphalcon%2Fcphalcon%2Fissues%2F16490" target="_blank">#16490</a></li><li>修复了<code>Phalcon\Mvc\Model::toArray</code>更改 population 条件以 segfault 的问题。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fphalcon%2Fcphalcon%2Fissues%2F16498" target="_blank">#16498</a></li></ul><p>更新说明：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fphalcon%2Fcphalcon%2Freleases%2Ftag%2Fv5.6.0" target="_blank">https://github.com/phalcon/cphalcon/releases/tag/v5.6.0</a></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 10 Jan 2024 06:02:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/275061/cphalcon-5-6-0-released</guid>
            <link>https://www.oschina.net/news/275061/cphalcon-5-6-0-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[RustDesk nightly 新加零拷贝 GPU 支持]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>新的 GPU 支持已经发布到&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frustdesk%2Frustdesk%2Freleases%2Ftag%2Fnightly" target="_blank">nightly</a>&nbsp;版本，目前仅仅支持 Windows，欢迎大家使用。</p><p>相比老版本的 GPU 支持，截屏转码都在 GPU 内完成，不再 GPU / CPU 内存来回倒，性能得到很大改善，如下是新旧对比。</p><p><img height="970" src="https://oscimg.oschina.net/oscnet/up-7d63c113799d56f5fb04db7f4cfd4a2a3a6.png" width="1598" referrerpolicy="no-referrer"></p><p><img height="1038" src="https://oscimg.oschina.net/oscnet/up-0d02e0b56f3c777377893a8de369e2fa4dd.jpg" width="1626" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 10 Jan 2024 04:06:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/275049</guid>
            <link>https://www.oschina.net/news/275049</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[MqttInsight 新版发布，内置了更多的解码支持]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>本次更新重点新增了常用一些序列化和反序列化框架的支持， 现在还可以使用 Javascript 编写全局的的编解码器了。</p><p><span style="background-color:#ffffff; color:#6a737d">有些序列化框架需要指定模式 (Schema、IDL) 文件才能正确进行序列化 (编码) 和反序列化 (解码), 例如 Protobuf、Avro。这一类的编解码器使用前需要用户在</span><code>文件-&gt;编解码设置</code><span style="background-color:#ffffff; color:#6a737d">中设置具体的名称和模式文件。</span></p><ul><li><strong>新增 ✨</strong><ul><li>新增 Protobuf、MessagePack、Avro、Hessian、Hessian2 和 Kryo 消息编解码支持</li><li>新增全局 JavaScript 脚本编解码器支持</li><li>脚本 mqtt 对象增加从主题提取变量的方法</li><li>增加全局文本框剪切、复制、粘贴右键菜单</li></ul></li><li><strong>优化 🙌</strong><ul><li>变更: 订阅的静音功能替换为显示/隐藏消息</li><li>事件传递过程中可能存在的异常处理</li><li>脚本加载、重载、去除机制优化</li><li>清除可见消息时同步更新相关订阅消息数量角标</li><li>补充连接错误提醒</li><li>JsonPath 表达式取值如果是数组的取数组的第一个值</li><li>优化暗色主题下消息视图文字颜色</li></ul></li><li><strong>修复 🐛</strong><ul><li>修复 Payload 可能为 null 的问题</li><li>修复非最大化的窗口大小和位置不能还原的问题</li><li>修复在收到消息时，处理线程池可能还未创建的问题</li><li>修复从图表收藏加载系列集时默认数据限制不生效的问题</li><li>修复消息过滤大小写敏感设置无效的问题</li></ul></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Wed, 10 Jan 2024 03:52:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/275048/mqttinsight-updated</guid>
            <link>https://www.oschina.net/news/275048/mqttinsight-updated</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Firefox 121.0.1 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff; color:#333333">Firefox 121.0.1 现已发布，此版本进行了一些 bug 修复。具体更新内容如下：</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong style="color:#333333">Fixed</strong></p><ul><li><div><p style="margin-left:0; margin-right:0"><span>修复了某些 CJK 上下文中因表意空间处理变化而导致的意外换行（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugzilla.mozilla.org%2Fshow_bug.cgi%3Fid%3D1870973" target="_blank">Bug 1870973</a>）</span></p></div></li><li><div><p style="margin-left:0; margin-right:0"><span>修复了在某些情况下加载包含基于列的布局的网站时的挂起问题（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugzilla.mozilla.org%2Fshow_bug.cgi%3Fid%3D1867784" target="_blank">Bug 1867784</a>）</span></p></div></li><li><div><p style="margin-left:0; margin-right:0"><span>修复了在另一个视频上播放的视频缺少圆角的问题（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugzilla.mozilla.org%2Fshow_bug.cgi%3Fid%3D1869994" target="_blank">Bug 1869994</a>）</span></p></div></li><li><div><p style="margin-left:0; margin-right:0"><span>修复了 Firefox 无法正确关闭以及其他应用程序在 Firefox 会话期间使用过 USB 安全密钥后无法使用的问题（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugzilla.mozilla.org%2Fshow_bug.cgi%3Fid%3D1863135" target="_blank">Bug 1863135</a>）</span></p></div></li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">更新说明：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.mozilla.org%2Fen-US%2Ffirefox%2F121.0.1%2Freleasenotes%2F" target="_blank">https://www.mozilla.org/en-US/firefox/121.0.1/releasenotes/</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">下载地址：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.mozilla.org%2Fzh-CN%2Ffirefox%2Fdownload%2Fthanks%2F" target="_blank">https://www.mozilla.org/zh-CN/firefox/download/thanks/</a></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 10 Jan 2024 03:42:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/275047/firefox-121-0-1-released</guid>
            <link>https://www.oschina.net/news/275047/firefox-121-0-1-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[.NET 全能 Cron 表达式解析库 TimeCrontab v3.3.6]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h1>TimeCrontab</h1><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/dotnetchina/TimeCrontab/blob/master/LICENSE"><img alt="license" src="https://img.shields.io/badge/license-MIT-orange?cacheSeconds=10800" referrerpolicy="no-referrer"></a><span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.nuget.org%2Fpackages%2FTimeCrontab"><img alt="nuget" src="https://img.shields.io/nuget/v/TimeCrontab.svg?cacheSeconds=10800" referrerpolicy="no-referrer"></a><span>&nbsp;</span><a href="https://gitee.com/dotnetchina"><img alt="dotNET China" src="https://img.shields.io/badge/organization-dotNET%20China-yellow?cacheSeconds=10800" referrerpolicy="no-referrer"></a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">.NET 全能 Cron 表达式解析库，支持 Cron 所有特性。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="TimeCrontab.drawio" src="https://gitee.com/dotnetchina/TimeCrontab/raw/master/drawio/TimeCrontab.drawio.png" referrerpolicy="no-referrer"></p><h2>特性</h2><ul><li>支持 Cron 所有特性</li><li>超高性能</li><li>易拓展</li><li>很小，仅<span>&nbsp;</span><code>4KB</code></li><li>无第三方依赖</li><li>跨平台</li><li>高质量代码和良好单元测试</li><li>支持<span>&nbsp;</span><code>.NET Framework 3.5+</code><span>&nbsp;</span>及后续版本</li></ul><h2>安装</h2><ul><li><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.nuget.org%2Fpackages%2FTimeCrontab">Package Manager</a></li></ul><div><div><pre><span><span>Install-Package</span><span style="color:#bbbbbb"></span><span>TimeCrontab</span></span></pre></div></div><ul><li><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.nuget.org%2Fpackages%2FTimeCrontab">.NET CLI</a></li></ul><div><div><pre><span><span>dotnet</span><span style="color:#bbbbbb"></span><span>add</span><span style="color:#bbbbbb"></span><span>package</span><span style="color:#bbbbbb"></span><span>TimeCrontab</span></span></pre></div></div><h2>快速入门</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">我们在<a href="https://gitee.com/dotnetchina/TimeCrontab/blob/net6/samples">主页</a>上有不少例子，这是让您入门的第一个：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><strong>常规格式</strong>：分，时 天，月 周</p><div><div><pre><span><strong>var</strong><span>crontab</span><span>=</span><span>Crontab</span><span>.</span><strong>Parse</strong><span>(</span><span style="color:#dd2200">"* * * * *"</span><span>);</span></span><span><strong>var</strong><span>nextOccurrence</span><span>=</span><span>crontab</span><span>.</span><strong>GetNextOccurrence</strong><span>(</span><span>DateTime</span><span>.</span><span>Now</span><span>);</span></span></pre></div></div><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><strong>支持年份</strong>：分，时 天，月 周，年</p><div><div><pre><span><strong>var</strong><span>crontab</span><span>=</span><span>Crontab</span><span>.</span><strong>Parse</strong><span>(</span><span style="color:#dd2200">"* * * * * *"</span><span>,</span><span>CronStringFormat</span><span>.</span><span>WithYears</span><span>);</span></span><span><strong>var</strong><span>nextOccurrence</span><span>=</span><span>crontab</span><span>.</span><strong>GetNextOccurrence</strong><span>(</span><span>DateTime</span><span>.</span><span>Now</span><span>);</span></span></pre></div></div><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><strong>支持秒数</strong>：秒，分 时，天 月，周</p><div><div><pre><span><strong>var</strong><span>crontab</span><span>=</span><span>Crontab</span><span>.</span><strong>Parse</strong><span>(</span><span style="color:#dd2200">"* * * * * *"</span><span>,</span><span>CronStringFormat</span><span>.</span><span>WithSeconds</span><span>);</span></span><span><strong>var</strong><span>nextOccurrence</span><span>=</span><span>crontab</span><span>.</span><strong>GetNextOccurrence</strong><span>(</span><span>DateTime</span><span>.</span><span>Now</span><span>);</span></span></pre></div></div><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><strong>支持秒和年</strong>：秒，分 时，天 月，周 年</p><div><div><pre><span><strong>var</strong><span>crontab</span><span>=</span><span>Crontab</span><span>.</span><strong>Parse</strong><span>(</span><span style="color:#dd2200">"* * * * * * *"</span><span>,</span><span>CronStringFormat</span><span>.</span><span>WithSecondsAndYears</span><span>);</span></span><span><strong>var</strong><span>nextOccurrence</span><span>=</span><span>crontab</span><span>.</span><strong>GetNextOccurrence</strong><span>(</span><span>DateTime</span><span>.</span><span>Now</span><span>);</span></span></pre></div></div><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><strong>获取休眠差实现简单定时任务</strong></p><div><div><pre><span><span style="color:#888888">// 阻塞方式</span></span><span><strong>var</strong><span>crontab</span><span>=</span><span>Crontab</span><span>.</span><strong>Parse</strong><span>(</span><span style="color:#dd2200">"* * * * * *"</span><span>,</span><span>CronStringFormat</span><span>.</span><span>WithSeconds</span><span>);</span></span><span><strong>while</strong><span>(</span><strong>true</strong><span>)</span></span><span><span>{</span></span><span><span>Thread</span><span>.</span><strong>Sleep</strong><span>(</span><span>crontab</span><span>.</span><strong>GetSleepMilliseconds</strong><span>(</span><span>DateTime</span><span>.</span><span>Now</span><span>));</span></span><span><span>Console</span><span>.</span><strong>WriteLine</strong><span>(</span><span>DateTime</span><span>.</span><span>Now</span><span>.</span><strong>ToString</strong><span>(</span><span style="color:#dd2200">"G"</span><span>));</span></span><span><span>}</span></span><span><span style="color:#888888">// 无阻塞方式</span></span><span><strong>var</strong><span>crontab</span><span>=</span><span>Crontab</span><span>.</span><strong>Parse</strong><span>(</span><span style="color:#dd2200">"* * * * * *"</span><span>,</span><span>CronStringFormat</span><span>.</span><span>WithSeconds</span><span>);</span></span><span><span>Task</span><span>.</span><span>Factory</span><span>.</span><strong>StartNew</strong><span>(</span><strong>async</strong><span>()</span><span>=&gt;</span></span><span><span>{</span></span><span><strong>while</strong><span>(</span><strong>true</strong><span>)</span></span><span><span>{</span></span><span><strong>await</strong><span>Task</span><span>.</span><strong>Delay</strong><span>(</span><span>crontab</span><span>.</span><strong>GetSleepMilliseconds</strong><span>(</span><span>DateTime</span><span>.</span><span>Now</span><span>));</span></span><span><span>Console</span><span>.</span><strong>WriteLine</strong><span>(</span><span>DateTime</span><span>.</span><span>Now</span><span>.</span><strong>ToString</strong><span>(</span><span style="color:#dd2200">"G"</span><span>));</span></span><span><span>}</span></span><span><span>},</span><span>TaskCreationOptions</span><span>.</span><span>LongRunning</span><span>);</span></span></pre></div></div><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><strong><code>BackgroundService</code><span>&nbsp;</span>实现简单定时任务</strong></p><div><div><pre><span><strong>using</strong><strong>TimeCrontab</strong><span>;</span></span><span><strong>namespace</strong><strong>WorkerService</strong><span>;</span></span><span><strong>public</strong><strong>class</strong><strong>Worker</strong><span>:</span><span>BackgroundService</span></span><span><span>{</span></span><span><strong>private</strong><strong>readonly</strong><span>ILogger</span><span>&lt;</span><span>Worker</span><span>&gt;</span><span>_logger</span><span>;</span></span><span><strong>private</strong><strong>readonly</strong><span>Crontab</span><span>_crontab</span><span>;</span></span><span><strong>public</strong><strong>Worker</strong><span>(</span><span>ILogger</span><span>&lt;</span><span>Worker</span><span>&gt;</span><span>logger</span><span>)</span></span><span><span>{</span></span><span><span>_logger</span><span>=</span><span>logger</span><span>;</span></span><span><span>_crontab</span><span>=</span><span>Crontab</span><span>.</span><strong>Parse</strong><span>(</span><span style="color:#dd2200">"* * * * * *"</span><span>,</span><span>CronStringFormat</span><span>.</span><span>WithSeconds</span><span>);</span></span><span><span>}</span></span><span><strong>protected</strong><strong>override</strong><strong>async</strong><span>Task</span><strong>ExecuteAsync</strong><span>(</span><span>CancellationToken</span><span>stoppingToken</span><span>)</span></span><span><span>{</span></span><span><strong>while</strong><span>(!</span><span>stoppingToken</span><span>.</span><span>IsCancellationRequested</span><span>)</span></span><span><span>{</span></span><span><strong>var</strong><span>taskFactory</span><span>=</span><strong>new</strong><strong>TaskFactory</strong><span>(</span><span>System</span><span>.</span><span>Threading</span><span>.</span><span>Tasks</span><span>.</span><span>TaskScheduler</span><span>.</span><span>Current</span><span>);</span></span><span><strong>await</strong><span>taskFactory</span><span>.</span><strong>StartNew</strong><span>(</span><strong>async</strong><span>()</span><span>=&gt;</span></span><span><span>{</span></span><span><span style="color:#888888">// 你的业务代码写到这里面</span></span><span><span>_logger</span><span>.</span><strong>LogInformation</strong><span>(</span><span style="color:#dd2200">"Worker running at: {time}"</span><span>,</span><span>DateTime</span><span>.</span><span>Now</span><span>);</span></span><span><strong>await</strong><span>Task</span><span>.</span><span>CompletedTask</span><span>;</span></span><span><span>},</span><span>stoppingToken</span><span>);</span></span><span><strong>await</strong><span>Task</span><span>.</span><strong>Delay</strong><span>(</span><span>_crontab</span><span>.</span><strong>GetSleepMilliseconds</strong><span>(</span><span>DateTime</span><span>.</span><span>Now</span><span>),</span><span>stoppingToken</span><span>);</span></span><span><span>}</span></span><span><span>}</span></span><span><span>}</span></span></pre></div></div><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><strong>Macro 标识符</strong></p><div><div><pre><span><span style="color:#888888">// macro 字符串</span></span><span><strong>var</strong><span>secondly</span><span>=</span><span>Crontab</span><span>.</span><strong>Parse</strong><span>(</span><span style="color:#dd2200">"@secondly"</span><span>);</span><span style="color:#888888">// 每秒</span></span><span><strong>var</strong><span>minutely</span><span>=</span><span>Crontab</span><span>.</span><strong>Parse</strong><span>(</span><span style="color:#dd2200">"@minutely"</span><span>);</span><span style="color:#888888">// 每分钟</span></span><span><strong>var</strong><span>hourly</span><span>=</span><span>Crontab</span><span>.</span><strong>Parse</strong><span>(</span><span style="color:#dd2200">"@hourly"</span><span>);</span><span style="color:#888888">// 每小时</span></span><span><strong>var</strong><span>daily</span><span>=</span><span>Crontab</span><span>.</span><strong>Parse</strong><span>(</span><span style="color:#dd2200">"@daily"</span><span>);</span><span style="color:#888888">// 每天 00:00:00</span></span><span><strong>var</strong><span>monthly</span><span>=</span><span>Crontab</span><span>.</span><strong>Parse</strong><span>(</span><span style="color:#dd2200">"@monthly"</span><span>);</span><span style="color:#888888">// 每月 1 号 00:00:00</span></span><span><strong>var</strong><span>weekly</span><span>=</span><span>Crontab</span><span>.</span><strong>Parse</strong><span>(</span><span style="color:#dd2200">"@weekly"</span><span>);</span><span style="color:#888888">// 每周日 00：00：00</span></span><span><strong>var</strong><span>yearly</span><span>=</span><span>Crontab</span><span>.</span><strong>Parse</strong><span>(</span><span style="color:#dd2200">"@yearly"</span><span>);</span><span style="color:#888888">// 每年 1 月 1 号 00:00:00</span></span><span><strong>var</strong><span>workday</span><span>=</span><span>Crontab</span><span>.</span><strong>Parse</strong><span>(</span><span style="color:#dd2200">"@workday"</span><span>);</span><span style="color:#888888">// 每周一至周五 00:00:00</span></span><span><span style="color:#888888">// 静态属性</span></span><span><strong>var</strong><span>secondly</span><span>=</span><span>Crontab</span><span>.</span><span>Secondly</span><span>;</span><span style="color:#888888">// 每秒</span></span><span><strong>var</strong><span>minutely</span><span>=</span><span>Crontab</span><span>.</span><span>Minutely</span><span>;</span><span style="color:#888888">// 每分钟</span></span><span><strong>var</strong><span>hourly</span><span>=</span><span>Crontab</span><span>.</span><span>Hourly</span><span>;</span><span style="color:#888888">// 每小时</span></span><span><strong>var</strong><span>daily</span><span>=</span><span>Crontab</span><span>.</span><span>Daily</span><span>;</span><span style="color:#888888">// 每天 00:00:00</span></span><span><strong>var</strong><span>monthly</span><span>=</span><span>Crontab</span><span>.</span><span>Monthly</span><span>;</span><span style="color:#888888">// 每月 1 号 00:00:00</span></span><span><strong>var</strong><span>weekly</span><span>=</span><span>Crontab</span><span>.</span><span>Weekly</span><span>;</span><span style="color:#888888">// 每周日 00：00：00</span></span><span><strong>var</strong><span>yearly</span><span>=</span><span>Crontab</span><span>.</span><span>Yearly</span><span>;</span><span style="color:#888888">// 每年 1 月 1 号 00:00:00</span></span><span><strong>var</strong><span>workday</span><span>=</span><span>Crontab</span><span>.</span><span>Workday</span><span>;</span><span style="color:#888888">// 每周一至周五 00:00:00</span></span></pre></div></div><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><strong>Macro At 标识符</strong></p><div><div><pre><span><span style="color:#888888">// 每第 3 秒</span></span><span><strong>var</strong><span>crontab</span><span>=</span><span>Crontab</span><span>.</span><strong>SecondlyAt</strong><span>(</span><strong>3</strong><span>);</span></span><span><span style="color:#888888">// 每第 3，5，6 秒</span></span><span><strong>var</strong><span>crontab</span><span>=</span><span>Crontab</span><span>.</span><strong>SecondlyAt</strong><span>(</span><strong>3</strong><span>,</span><strong>5</strong><span>,</span><strong>6</strong><span>);</span></span><span><span style="color:#888888">// 每分钟第 3 秒</span></span><span><strong>var</strong><span>crontab</span><span>=</span><span>Crontab</span><span>.</span><strong>MinutelyAt</strong><span>(</span><strong>3</strong><span>);</span></span><span><span style="color:#888888">// 每分钟第 3，5，6 秒</span></span><span><strong>var</strong><span>crontab</span><span>=</span><span>Crontab</span><span>.</span><strong>MinutelyAt</strong><span>(</span><strong>3</strong><span>,</span><strong>5</strong><span>,</span><strong>6</strong><span>);</span></span><span><span style="color:#888888">// 每小时第 3 分钟</span></span><span><strong>var</strong><span>crontab</span><span>=</span><span>Crontab</span><span>.</span><strong>HourlyAt</strong><span>(</span><strong>3</strong><span>);</span></span><span><span style="color:#888888">// 每小时第 3，5，6 分钟</span></span><span><strong>var</strong><span>crontab</span><span>=</span><span>Crontab</span><span>.</span><strong>HourlyAt</strong><span>(</span><strong>3</strong><span>,</span><strong>5</strong><span>,</span><strong>6</strong><span>);</span></span><span><span style="color:#888888">// 每天第 3 小时正（点）</span></span><span><strong>var</strong><span>crontab</span><span>=</span><span>Crontab</span><span>.</span><strong>DailyAt</strong><span>(</span><strong>3</strong><span>);</span></span><span><span style="color:#888888">// 每天第 3，5，6 小时正（点）</span></span><span><strong>var</strong><span>crontab</span><span>=</span><span>Crontab</span><span>.</span><strong>DailyAt</strong><span>(</span><strong>3</strong><span>,</span><strong>5</strong><span>,</span><strong>6</strong><span>);</span></span><span><span style="color:#888888">// 每月第 3 天零点正</span></span><span><strong>var</strong><span>crontab</span><span>=</span><span>Crontab</span><span>.</span><strong>MonthlyAt</strong><span>(</span><strong>3</strong><span>);</span></span><span><span style="color:#888888">// 每月第 3，5，6 天零点正</span></span><span><strong>var</strong><span>crontab</span><span>=</span><span>Crontab</span><span>.</span><strong>MonthlyAt</strong><span>(</span><strong>3</strong><span>,</span><strong>5</strong><span>,</span><strong>6</strong><span>);</span></span><span><span style="color:#888888">// 每周星期 3 零点正</span></span><span><strong>var</strong><span>crontab</span><span>=</span><span>Crontab</span><span>.</span><strong>WeeklyAt</strong><span>(</span><strong>3</strong><span>);</span></span><span><strong>var</strong><span>crontab</span><span>=</span><span>Crontab</span><span>.</span><strong>WeeklyAt</strong><span>(</span><span style="color:#dd2200">"WED"</span><span>);</span><span style="color:#888888">// SUN（星期天），MON，TUE，WED，THU，FRI，SAT</span></span><span><span style="color:#888888">// 每周星期 3，5，6 零点正</span></span><span><strong>var</strong><span>crontab</span><span>=</span><span>Crontab</span><span>.</span><strong>WeeklyAt</strong><span>(</span><strong>3</strong><span>,</span><strong>5</strong><span>,</span><strong>6</strong><span>);</span></span><span><strong>var</strong><span>crontab</span><span>=</span><span>Crontab</span><span>.</span><strong>WeeklyAt</strong><span>(</span><span style="color:#dd2200">"WED"</span><span>,</span><span style="color:#dd2200">"FRI"</span><span>,</span><span style="color:#dd2200">"SAT"</span><span>);</span></span><span><span style="color:#888888">// 还支持混合</span></span><span><strong>var</strong><span>crontab</span><span>=</span><span>Crontab</span><span>.</span><strong>WeeklyAt</strong><span>(</span><strong>3</strong><span>,</span><span style="color:#dd2200">"FRI"</span><span>,</span><strong>6</strong><span>);</span></span><span><span style="color:#888888">// 每年第 3 月 1 日零点正</span></span><span><strong>var</strong><span>crontab</span><span>=</span><span>Crontab</span><span>.</span><strong>YearlyAt</strong><span>(</span><strong>3</strong><span>);</span></span><span><strong>var</strong><span>crontab</span><span>=</span><span>Crontab</span><span>.</span><strong>YearlyAt</strong><span>(</span><span style="color:#dd2200">"MAR"</span><span>);</span><span style="color:#888888">// JAN（一月），FEB，MAR，APR，MAY，JUN，JUL，AUG，SEP，OCT，NOV，DEC</span></span><span><span style="color:#888888">// 每年第 3，5，6 月 1 日零点正</span></span><span><strong>var</strong><span>crontab</span><span>=</span><span>Crontab</span><span>.</span><strong>YearlyAt</strong><span>(</span><strong>3</strong><span>);</span></span><span><strong>var</strong><span>crontab</span><span>=</span><span>Crontab</span><span>.</span><strong>YearlyAt</strong><span>(</span><strong>3</strong><span>,</span><strong>5</strong><span>,</span><strong>6</strong><span>);</span></span><span><strong>var</strong><span>crontab</span><span>=</span><span>Crontab</span><span>.</span><strong>YearlyAt</strong><span>(</span><span style="color:#dd2200">"MAR"</span><span>,</span><span style="color:#dd2200">"MAY"</span><span>,</span><span style="color:#dd2200">"JUN"</span><span>);</span></span><span><span style="color:#888888">// 还支持混合</span></span><span><strong>var</strong><span>crontab</span><span>=</span><span>Crontab</span><span>.</span><strong>YearlyAt</strong><span>(</span><strong>3</strong><span>,</span><span style="color:#dd2200">"MAY"</span><span>,</span><strong>6</strong><span>);</span></span></pre></div></div><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Ffurion.baiqian.ltd%2Fdocs%2Fcron">更多文档</a></p><h2>文档</h2><p><img height="1322" src="https://oscimg.oschina.net/oscnet/up-9f796ba63af907d9543c5c555d75f42b378.png" width="1710" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">您可以在<a href="https://gitee.com/link?target=https%3A%2F%2Ffurion.baiqian.ltd%2Fdocs%2Fcron">主页</a>找到 TimeCrontab 文档。</p><h2>测试</h2><div><div><pre><span><strong>public</strong><strong>class</strong><strong>TimeCrontabUnitTests</strong></span><span><span>{</span></span><span><span>[</span><span>Theory</span><span>]</span></span><span><span>[</span><strong>InlineData</strong><span>(</span><span style="color:#dd2200">"* * * * *"</span><span>,</span><span style="color:#dd2200">"* * * * *"</span><span>,</span><span>CronStringFormat</span><span>.</span><span>Default</span><span>)]</span></span><span><span>[</span><strong>InlineData</strong><span>(</span><span style="color:#dd2200">"0 0 31W * *"</span><span>,</span><span style="color:#dd2200">"0 0 31W * *"</span><span>,</span><span>CronStringFormat</span><span>.</span><span>Default</span><span>)]</span></span><span><span>[</span><strong>InlineData</strong><span>(</span><span style="color:#dd2200">"0 23 ? * MON-FRI"</span><span>,</span><span style="color:#dd2200">"0 23 ? * 1-5"</span><span>,</span><span>CronStringFormat</span><span>.</span><span>Default</span><span>)]</span></span><span><span>[</span><strong>InlineData</strong><span>(</span><span style="color:#dd2200">"*/5 * * * *"</span><span>,</span><span style="color:#dd2200">"*/5 * * * *"</span><span>,</span><span>CronStringFormat</span><span>.</span><span>Default</span><span>)]</span></span><span><span>[</span><strong>InlineData</strong><span>(</span><span style="color:#dd2200">"30 11 * * 1-5"</span><span>,</span><span style="color:#dd2200">"30 11 * * 1-5"</span><span>,</span><span>CronStringFormat</span><span>.</span><span>Default</span><span>)]</span></span><span><span>[</span><strong>InlineData</strong><span>(</span><span style="color:#dd2200">"23 12 * JAN *"</span><span>,</span><span style="color:#dd2200">"23 12 * 1 *"</span><span>,</span><span>CronStringFormat</span><span>.</span><span>Default</span><span>)]</span></span><span><span>[</span><strong>InlineData</strong><span>(</span><span style="color:#dd2200">"* * * * MON#3"</span><span>,</span><span style="color:#dd2200">"* * * * 1#3"</span><span>,</span><span>CronStringFormat</span><span>.</span><span>Default</span><span>)]</span></span><span><span>[</span><strong>InlineData</strong><span>(</span><span style="color:#dd2200">"*/5 * L JAN *"</span><span>,</span><span style="color:#dd2200">"*/5 * L 1 *"</span><span>,</span><span>CronStringFormat</span><span>.</span><span>Default</span><span>)]</span></span><span><span>[</span><strong>InlineData</strong><span>(</span><span style="color:#dd2200">"0 0 ? 1 MON#1"</span><span>,</span><span style="color:#dd2200">"0 0 ? 1 1#1"</span><span>,</span><span>CronStringFormat</span><span>.</span><span>Default</span><span>)]</span></span><span><span>[</span><strong>InlineData</strong><span>(</span><span style="color:#dd2200">"0 0 LW * *"</span><span>,</span><span style="color:#dd2200">"0 0 LW * *"</span><span>,</span><span>CronStringFormat</span><span>.</span><span>Default</span><span>)]</span></span><span><span>[</span><strong>InlineData</strong><span>(</span><span style="color:#dd2200">"0 30 10-13 ? * WED,FRI"</span><span>,</span><span style="color:#dd2200">"0 30 10-13 ? * 3,5"</span><span>,</span><span>CronStringFormat</span><span>.</span><span>WithSeconds</span><span>)]</span></span><span><span>[</span><strong>InlineData</strong><span>(</span><span style="color:#dd2200">"0 */5 * * * *"</span><span>,</span><span style="color:#dd2200">"0 */5 * * * *"</span><span>,</span><span>CronStringFormat</span><span>.</span><span>WithSeconds</span><span>)]</span></span><span><span>[</span><strong>InlineData</strong><span>(</span><span style="color:#dd2200">"0 0/1 * * * ?"</span><span>,</span><span style="color:#dd2200">"0 */1 * * * ?"</span><span>,</span><span>CronStringFormat</span><span>.</span><span>WithSeconds</span><span>)]</span></span><span><span>[</span><strong>InlineData</strong><span>(</span><span style="color:#dd2200">"5-10 30-35 10-12 * * *"</span><span>,</span><span style="color:#dd2200">"5-10 30-35 10-12 * * *"</span><span>,</span><span>CronStringFormat</span><span>.</span><span>WithSeconds</span><span>)]</span></span><span><strong>public</strong><strong>void</strong><strong>TestParse</strong><span>(</span><strong>string</strong><span>expression</span><span>,</span><strong>string</strong><span>outputString</span><span>,</span><span>CronStringFormat</span><span>format</span><span>)</span></span><span><span>{</span></span><span><strong>var</strong><span>output</span><span>=</span><span>Crontab</span><span>.</span><strong>Parse</strong><span>(</span><span>expression</span><span>,</span><span>format</span><span>).</span><strong>ToString</strong><span>();</span></span><span><span>Assert</span><span>.</span><strong>Equal</strong><span>(</span><span>outputString</span><span>,</span><span>output</span><span>);</span></span><span><span>}</span></span><span><span>[</span><span>Theory</span><span>]</span></span><span><span>[</span><strong>InlineData</strong><span>(</span><span style="color:#dd2200">"* * * * *"</span><span>,</span><span style="color:#dd2200">"2022-01-01 00:01:00"</span><span>,</span><span>CronStringFormat</span><span>.</span><span>Default</span><span>)]</span></span><span><span>[</span><strong>InlineData</strong><span>(</span><span style="color:#dd2200">"0 0 31W * *"</span><span>,</span><span style="color:#dd2200">"2022-01-31 00:00:00"</span><span>,</span><span>CronStringFormat</span><span>.</span><span>Default</span><span>)]</span></span><span><span>[</span><strong>InlineData</strong><span>(</span><span style="color:#dd2200">"0 23 ? * MON-FRI"</span><span>,</span><span style="color:#dd2200">"2022-01-03 23:00:00"</span><span>,</span><span>CronStringFormat</span><span>.</span><span>Default</span><span>)]</span></span><span><span>[</span><strong>InlineData</strong><span>(</span><span style="color:#dd2200">"*/5 * * * *"</span><span>,</span><span style="color:#dd2200">"2022-01-01 00:05:00"</span><span>,</span><span>CronStringFormat</span><span>.</span><span>Default</span><span>)]</span></span><span><span>[</span><strong>InlineData</strong><span>(</span><span style="color:#dd2200">"30 11 * * 1-5"</span><span>,</span><span style="color:#dd2200">"2022-01-03 11:30:00"</span><span>,</span><span>CronStringFormat</span><span>.</span><span>Default</span><span>)]</span></span><span><span>[</span><strong>InlineData</strong><span>(</span><span style="color:#dd2200">"23 12 * JAN *"</span><span>,</span><span style="color:#dd2200">"2022-01-01 12:23:00"</span><span>,</span><span>CronStringFormat</span><span>.</span><span>Default</span><span>)]</span></span><span><span>[</span><strong>InlineData</strong><span>(</span><span style="color:#dd2200">"* * * * MON#3"</span><span>,</span><span style="color:#dd2200">"2022-01-17 00:00:00"</span><span>,</span><span>CronStringFormat</span><span>.</span><span>Default</span><span>)]</span></span><span><span>[</span><strong>InlineData</strong><span>(</span><span style="color:#dd2200">"*/5 * L JAN *"</span><span>,</span><span style="color:#dd2200">"2022-01-31 00:00:00"</span><span>,</span><span>CronStringFormat</span><span>.</span><span>Default</span><span>)]</span></span><span><span>[</span><strong>InlineData</strong><span>(</span><span style="color:#dd2200">"0 0 ? 1 MON#1"</span><span>,</span><span style="color:#dd2200">"2022-01-03 00:00:00"</span><span>,</span><span>CronStringFormat</span><span>.</span><span>Default</span><span>)]</span></span><span><span>[</span><strong>InlineData</strong><span>(</span><span style="color:#dd2200">"0 0 LW * *"</span><span>,</span><span style="color:#dd2200">"2022-01-31 00:00:00"</span><span>,</span><span>CronStringFormat</span><span>.</span><span>Default</span><span>)]</span></span><span><span>[</span><strong>InlineData</strong><span>(</span><span style="color:#dd2200">"0 30 10-13 ? * WED,FRI"</span><span>,</span><span style="color:#dd2200">"2022-01-05 10:30:00"</span><span>,</span><span>CronStringFormat</span><span>.</span><span>WithSeconds</span><span>)]</span></span><span><span>[</span><strong>InlineData</strong><span>(</span><span style="color:#dd2200">"0 */5 * * * *"</span><span>,</span><span style="color:#dd2200">"2022-01-01 00:05:00"</span><span>,</span><span>CronStringFormat</span><span>.</span><span>WithSeconds</span><span>)]</span></span><span><span>[</span><strong>InlineData</strong><span>(</span><span style="color:#dd2200">"0 0/1 * * * ?"</span><span>,</span><span style="color:#dd2200">"2022-01-01 00:01:00"</span><span>,</span><span>CronStringFormat</span><span>.</span><span>WithSeconds</span><span>)]</span></span><span><span>[</span><strong>InlineData</strong><span>(</span><span style="color:#dd2200">"5-10 30-35 10-12 * * *"</span><span>,</span><span style="color:#dd2200">"2022-01-01 10:30:05"</span><span>,</span><span>CronStringFormat</span><span>.</span><span>WithSeconds</span><span>)]</span></span><span><strong>public</strong><strong>void</strong><strong>TestGetNextOccurence</strong><span>(</span><strong>string</strong><span>expression</span><span>,</span><strong>string</strong><span>nextOccurenceString</span><span>,</span><span>CronStringFormat</span><span>format</span><span>)</span></span><span><span>{</span></span><span><strong>var</strong><span>beginTime</span><span>=</span><strong>new</strong><strong>DateTime</strong><span>(</span><strong>2022</strong><span>,</span><strong>1</strong><span>,</span><strong>1</strong><span>,</span><strong>0</strong><span>,</span><strong>0</strong><span>,</span><strong>0</strong><span>);</span></span><span><strong>var</strong><span>crontab</span><span>=</span><span>Crontab</span><span>.</span><strong>Parse</strong><span>(</span><span>expression</span><span>,</span><span>format</span><span>);</span></span><span><strong>var</strong><span>nextOccurence</span><span>=</span><span>crontab</span><span>.</span><strong>GetNextOccurrence</strong><span>(</span><span>beginTime</span><span>);</span></span><span><span>Assert</span><span>.</span><strong>Equal</strong><span>(</span><span>nextOccurenceString</span><span>,</span><span>nextOccurence</span><span>.</span><strong>ToString</strong><span>(</span><span style="color:#dd2200">"yyyy-MM-dd HH🇲🇲ss"</span><span>));</span></span><span><span>}</span></span><span><span>}</span></span></pre></div></div><h2>贡献</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">该存储库的主要目的是继续发展 TimeCrontab 核心，使其更快、更易于使用。TimeCrontab 的开发在<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/TimeCrontab">Gitee</a><span>&nbsp;</span>上公开进行，我们感谢社区贡献错误修复和改进。</p><h2>许可证</h2><p style="color:#40485b; margin-left:0em; margin-right:0em; text-align:left">TimeCrontab 采用<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/TimeCrontab/blob/net6/LICENSE">MIT</a><span>&nbsp;</span>开源许可证。</p><h2>本期更新</h2><ul><li><p style="margin-left:0; margin-right:0"><strong>新特性</strong></p><ul><li>[新增]<span>&nbsp;</span><code>Crontab.IsValid(...)</code><span>&nbsp;</span>静态方法，判断<span>&nbsp;</span><code>Cron</code><span>&nbsp;</span>表达式是否有效<span>&nbsp;</span>4.8.7.17<span>&nbsp;</span>⏱️2023.03.20<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/issues/I6OHO4">#I6OHO4</a></li><li>[新增]<span>&nbsp;</span><code>crontab.GetSleepTimeSpan(baseTime)</code><span>&nbsp;</span>实例方法<span>&nbsp;</span>4.8.4.10<span>&nbsp;</span>⏱️2023.01.09<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/issues/I69HM4">#I69HM4</a></li><li>[新增]<span>&nbsp;</span><code>Crontab.ParseAt(..)</code><span>&nbsp;</span>静态方法<span>&nbsp;</span>4.8.2.6<span>&nbsp;</span>⏱️2022.11.30<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/035cc23a20045e9673a1406b94e72030f5f18375">035cc23</a></li><li>[新增]<span>&nbsp;</span><code>Crontab</code><span>&nbsp;</span>所有<span>&nbsp;</span><code>Macro At</code><span>&nbsp;</span>静态方法<span>&nbsp;</span>4.8.2.6<span>&nbsp;</span>⏱️2022.11.30<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/a15b69d0eeb4bdc8d0ec042cfec22ff0049dc89f">a15b69d</a></li><li>[新增]<span>&nbsp;</span><code>Crontab.Workday</code><span>&nbsp;</span>表示周一至周五的<span>&nbsp;</span><code>Macro</code><span>&nbsp;</span>静态属性<span>&nbsp;</span>4.8.2.6<span>&nbsp;</span>⏱️2022.11.30<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/a15b69d0eeb4bdc8d0ec042cfec22ff0049dc89f">a15b69d</a></li></ul></li><li><p style="margin-left:0; margin-right:0"><strong>问题修复</strong></p><ul><li>[修复]<span>&nbsp;</span><code>Cron</code><span>&nbsp;</span>表达式步长解析器错误<span>&nbsp;</span>4.8.8.25<span>&nbsp;</span>⏱️2023.06.14<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/TimeCrontab/issues/I7D9XU">#I7D9XU</a></li><li>[修复]<span>&nbsp;</span><code>Cron</code><span>&nbsp;</span>表达式<span>&nbsp;</span><code>*</code><span>&nbsp;</span>符号解析器不够严谨，如：<code>*1111aaaaa</code><span>&nbsp;</span>也被解析为<span>&nbsp;</span><code>*</code><span>&nbsp;</span>4.8.7.17<span>&nbsp;</span>⏱️2023.03.20<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/issues/I6OHO4">#I6OHO4</a></li></ul></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Wed, 10 Jan 2024 03:40:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/275045/timecrontab-3-3-6-released</guid>
            <link>https://www.oschina.net/news/275045/timecrontab-3-3-6-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[.NET 分布式作业调度 Sundial v2.23]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h1>Sundial</h1><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/dotnetchina/Sundial/blob/master/LICENSE"><img alt="license" src="https://img.shields.io/badge/license-MIT-orange?cacheSeconds=10800" referrerpolicy="no-referrer"></a><span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.nuget.org%2Fpackages%2FSundial"><img alt="nuget" src="https://img.shields.io/nuget/v/Sundial.svg?cacheSeconds=10800" referrerpolicy="no-referrer"></a><span>&nbsp;</span><a href="https://gitee.com/dotnetchina"><img alt="dotNET China" src="https://img.shields.io/badge/organization-dotNET%20China-yellow?cacheSeconds=10800" referrerpolicy="no-referrer"></a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">.NET 功能齐全的开源分布式作业调度系统，可从最小的应用程序到大型企业系统使用。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="Sundial.drawio" src="https://gitee.com/dotnetchina/Sundial/raw/master/drawio/Sundial.drawio.png" referrerpolicy="no-referrer"></p><h2>安装</h2><div><div><pre><span><span>dotnet</span><span style="color:#bbbbbb"></span><span>add</span><span style="color:#bbbbbb"></span><span>package</span><span style="color:#bbbbbb"></span><span>Sundial</span></span></pre></div></div><h2>快速入门</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">我们在<a href="https://gitee.com/link?target=https%3A%2F%2Ffurion.baiqian.ltd%2Fdocs%2Fjob%2F">主页</a>上有不少例子，这是让您入门的第一个：</p><ol><li>定义作业，并实现<span>&nbsp;</span><code>IJob</code><span>&nbsp;</span>接口：</li></ol><div><div><pre><span><strong>public</strong><strong>class</strong><strong>MyJob</strong><span>:</span><span>IJob</span></span><span><span>{</span></span><span><strong>private</strong><strong>readonly</strong><span>ILogger</span><span>&lt;</span><span>MyJob</span><span>&gt;</span><span>_logger</span><span>;</span></span><span><strong>public</strong><strong>MyJob</strong><span>(</span><span>ILogger</span><span>&lt;</span><span>MyJob</span><span>&gt;</span><span>logger</span><span>)</span></span><span><span>{</span></span><span><span>_logger</span><span>=</span><span>logger</span><span>;</span></span><span><span>}</span></span><span><strong>public</strong><span>Task</span><strong>ExecuteAsync</strong><span>(</span><span>JobExecutingContext</span><span>context</span><span>,</span><span>CancellationToken</span><span>stoppingToken</span><span>)</span></span><span><span>{</span></span><span><span>_logger</span><span>.</span><strong>LogInformation</strong><span>(</span><span>context</span><span>.</span><strong>ToString</strong><span>());</span></span><span><strong>return</strong><span>Task</span><span>.</span><span>CompletedTask</span><span>;</span></span><span><span>}</span></span><span><span>}</span></span></pre></div></div><ol><li>在<span>&nbsp;</span><code>Startup.cs</code><span>&nbsp;</span>注册<span>&nbsp;</span><code>AddSchedule</code><span>&nbsp;</span>服务和作业：</li></ol><div><div><pre><span><span>services</span><span>.</span><strong>AddSchedule</strong><span>(</span><span>options</span><span>=&gt;</span></span><span><span>{</span></span><span><span>options</span><span>.</span><span>AddJob</span><span>&lt;</span><span>MyJob</span><span>&gt;(</span><span>Triggers</span><span>.</span><strong>PeriodSeconds</strong><span>(</span><strong>5</strong><span>));</span><span style="color:#888888">// 5s 执行一次</span></span><span><span>});</span></span></pre></div></div><ol><li>运行项目：</li></ol><div><div><pre><span><span>info: 2022-12-05 19:32:56.3835407 +08:00 星期一 L System.Logging.ScheduleService[0] #1</span></span><span>      Schedule hosted service is running.</span><span><span>info: 2022-12-05 19:32:56.3913451 +08:00 星期一 L System.Logging.ScheduleService[0] #1</span></span><span>      Schedule hosted service is preloading...</span><span><span>info: 2022-12-05 19:32:56.4322887 +08:00 星期一 L System.Logging.ScheduleService[0] #1</span></span><span>      The &lt;job1_trigger1&gt; trigger for scheduler of &lt;job1&gt; successfully appended to the schedule.</span><span><span>info: 2022-12-05 19:32:56.4347959 +08:00 星期一 L System.Logging.ScheduleService[0] #1</span></span><span>      The scheduler of &lt;job1&gt; successfully appended to the schedule.</span><span><span>warn: 2022-12-05 19:32:56.4504555 +08:00 星期一 L System.Logging.ScheduleService[0] #1</span></span><span>      Schedule hosted service preload completed, and a total of &lt;1&gt; schedulers are appended.</span><span><span>info: 2022-12-05 19:33:01.5100177 +08:00 星期一 L MyJob[0] #13</span></span><span><span style="background-color:#ddffdd; color:#000000">+     &lt;job1&gt; [C] &lt;job1 job1_trigger1&gt; 5s 1ts 2022-12-05 19:33:01.395 -&gt; 2022-12-05 19:33:06.428</span></span><span><span>info: 2022-12-05 19:33:06.4676792 +08:00 星期一 L MyJob[0] #13</span></span><span><span style="background-color:#ddffdd; color:#000000">+     &lt;job1&gt; [C] &lt;job1 job1_trigger1&gt; 5s 2ts 2022-12-05 19:33:06.428 -&gt; 2022-12-05 19:33:11.435</span></span><span><span>info: 2022-12-05 19:33:11.4460946 +08:00 星期一 L MyJob[0] #16</span></span><span><span style="background-color:#ddffdd; color:#000000">+     &lt;job1&gt; [C] &lt;job1 job1_trigger1&gt; 5s 3ts 2022-12-05 19:33:11.435 -&gt; 2022-12-05 19:33:16.412</span></span></pre></div></div><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><code>JobExecutionContext</code><span>&nbsp;</span>重写了<span>&nbsp;</span><code>ToString()</code><span>&nbsp;</span>方法并提供以下几种格式：</p><div><div><pre><span><span style="color:#888888"># 持续运行格式</span></span><span>&lt;作业 Id&gt; 作业描述 <span>[</span>并行 C/串行 S] &lt;作业 Id 触发器 Id&gt; 触发器字符串，触发器描述，触发次数 ts 触发时间 -&gt; 下一次触发时间</span><span><span style="color:#888888"># 触发停止格式</span></span><span>&lt;作业 Id&gt; 作业描述 <span>[</span>并行 C/串行 S] &lt;作业 Id 触发器 Id&gt; 触发器字符串，触发器描述，触发次数 ts 触发时间 <span>[</span>触发器终止状态]</span></pre></div></div><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Ffurion.baiqian.ltd%2Fdocs%2Fjob%2F">更多文档</a></p><h2>文档</h2><p><img height="1322" src="https://oscimg.oschina.net/oscnet/up-64f2d3452e861fd8973fe98bda7381e233b.png" width="1710" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">您可以在<a href="https://gitee.com/link?target=https%3A%2F%2Ffurion.baiqian.ltd%2Fdocs%2Fjob%2F">主页</a>找到 Sundial 文档。</p><h2>贡献</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">该存储库的主要目的是继续发展 Sundial 核心，使其更快、更易于使用。Sundial 的开发在<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Sundial">Gitee</a><span>&nbsp;</span>上公开进行，我们感谢社区贡献错误修复和改进。</p><h2>许可证</h2><p style="color:#40485b; margin-left:0em; margin-right:0em; text-align:left">Sundial 采用<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Sundial/blob/master/LICENSE">MIT</a><span>&nbsp;</span>开源许可证。</p><h2>本期更新</h2><ul><li><p style="margin-left:0; margin-right:0"><strong>新特性</strong></p><ul><li>[新增] 定时任务<span>&nbsp;</span><code>IJobPersistence</code><span>&nbsp;</span>持久化接口<span>&nbsp;</span><code>OnExecutionRecord</code><span>&nbsp;</span>方法实现作业运行记录持久化<span>&nbsp;</span>4.9.1.16<span>&nbsp;</span>⏱️2024.01.01<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/4d4d492fc91fe312ca30770ec30a6f692fccbf0e">4d4d492</a></li><li>[新增] 定时任务作业调度计划<span>&nbsp;</span><code>OnExecutionRecord</code><span>&nbsp;</span>事件，可监听作业运行记录<span>&nbsp;</span>4.9.1.16<span>&nbsp;</span>⏱️2024.01.01<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/4d4d492fc91fe312ca30770ec30a6f692fccbf0e">4d4d492</a></li><li>[新增] 定时任务支持取消正在运行的作业程序<span>&nbsp;</span>4.9.1.9<span>&nbsp;</span>⏱️2023.12.03<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/3cc9be0da1eabc0f3baaa7801b115bb2909bb085">3cc9be0</a></li></ul></li><li><p style="margin-left:0; margin-right:0"><strong>突破性变化</strong></p><ul><li>[新增] 定时任务<span>&nbsp;</span><code>IJobPersistence</code><span>&nbsp;</span>持久化接口<span>&nbsp;</span><code>OnExecutionRecord</code><span>&nbsp;</span>方法实现作业运行记录持久化<span>&nbsp;</span>4.9.1.16<span>&nbsp;</span>⏱️2024.01.01<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/4d4d492fc91fe312ca30770ec30a6f692fccbf0e">4d4d492</a></li></ul></li><li><p style="margin-left:0; margin-right:0"><strong>问题修复</strong></p><ul><li>[修复] 定时任务设置触发器<span>&nbsp;</span><code>Result</code><span>&nbsp;</span>后作业执行异常不能重置问题<span>&nbsp;</span>4.9.1.7<span>&nbsp;</span>⏱️2023.11.24<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/147215f1631f58fca900f17cca5695f9431555e5">147215f</a></li><li>[修复] 定时任务高频作业下持久化操作出现阻塞卡问题<span>&nbsp;</span>4.8.8.51<span>&nbsp;</span>⏱️2023.11.06<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/f1d0b4a9d7d65d5263109d5370b8d87705f4178b">f1d0b4a</a></li><li>[修复] 定时任务看板中间件<span>&nbsp;</span><code>SSE</code><span>&nbsp;</span>请求不是长连接导致连接频繁初始化销毁<span>&nbsp;</span>4.8.8.49<span>&nbsp;</span>⏱️2023.10.26<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/1997f1b99043eb80accac4e6a0c60c4e33d77183">1997f1b</a></li></ul></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Wed, 10 Jan 2024 03:35:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/275044/sundial-2-23-released</guid>
            <link>https://www.oschina.net/news/275044/sundial-2-23-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[ModStartBlog v8.9.0 SEO 独立设置，管理条件筛选，交互优化]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#34495e; margin-left:.5em; margin-right:.5em; text-align:left">ModStart 是一个基于 Laravel 模块化极速开发框架。模块市场拥有丰富的功能应用，支持后台一键快速安装，让开发者能快的实现业务功能开发。</p><p style="color:#34495e; margin-left:.5em; margin-right:.5em; text-align:left">系统完全开源，基于 Apache 2.0 开源协议。</p><p style="color:#34495e; margin-left:.5em; margin-right:.5em; text-align:left"><img alt="系统演示" src="https://ms-assets.modstart.com/data/image/2022/05/30/7459_smgt_9533.jpg" referrerpolicy="no-referrer"></p><h2>功能特性</h2><ul><li><p style="margin-left:.5em; margin-right:.5em">丰富的模块市场，后台一键快速安装</p></li><li><p style="margin-left:.5em; margin-right:.5em">会员模块通用且完整，支持完整的 API 调用</p></li><li><p style="margin-left:.5em; margin-right:.5em">大文件分片上传，进度条显示，已上传文件管理</p></li><li><p style="margin-left:.5em; margin-right:.5em">强大的模块扩展功能，所有模块可以无缝集成，支持在线安装、卸载模块</p></li><li><p style="margin-left:.5em; margin-right:.5em">完善的开发助手，实现模块、主题的的一键创建</p></li><li><p style="margin-left:.5em; margin-right:.5em">完善的后台权限管理，支持基于 RBAC 的权限管理系统</p></li><li><p style="margin-left:.5em; margin-right:.5em">后台管理支持使用手机、平板、PC，无论何时何地都可方便管理</p></li><li><p style="margin-left:.5em; margin-right:.5em">第三方登录（QQ、微信、微博、支付宝、微信小程序）</p></li><li><p style="margin-left:.5em; margin-right:.5em">第三方支付支持（微信、支付宝、支付宝当面付、微信扫码、微信小程序）</p></li><li><p style="margin-left:.5em; margin-right:.5em">第三方云存储支持，支持云储存分片上传（阿里云、百度云、华为云、腾讯云、FTP、七牛云、UCloud、又拍云）</p></li><li><p style="margin-left:.5em; margin-right:.5em">第三方短信支持（阿里云、腾讯云、华为云、百度云、253 云通讯、聚合、七牛云、融云、赛邮、UCloud、云片、网易云）</p></li></ul><h2>V8.9.0 版本更新</h2><p style="color:#34495e; margin-left:.5em; margin-right:.5em; text-align:left">2024 年 01 月 09 日 ModStartBlog 发布 v8.9.0 版本，增加了以下 11 个特性：</p><ul><li><p style="margin-left:.5em; margin-right:.5em">[新功能] Values 组件新增 countFixed 属性，固定显示数量</p></li><li><p style="margin-left:.5em; margin-right:.5em">[新功能] 博客首页的 SEO 标题、关键词、描述信息可以单独设置</p></li><li><p style="margin-left:.5em; margin-right:.5em">[新功能] NumberRange 组件支持，用于输入数字范围</p></li><li><p style="margin-left:.5em; margin-right:.5em">[新功能] 请求输入 getBase64File 自动检测 Base64 文件前缀</p></li><li><p style="margin-left:.5em; margin-right:.5em">[新功能] Form 支持原生 Response 直接返回，便于处理文件下载等表单</p></li><li><p style="margin-left:.5em; margin-right:.5em">[新功能] Request::mergeQueries 合并请求参数按参数名称排序，避免同业不同链问题</p></li><li><p style="margin-left:.5em; margin-right:.5em">[新功能] 搜索中心内容索引重建统一入口，安装 SuperSearch 模块</p></li><li><p style="margin-left:.5em; margin-right:.5em">[新功能] 地址智能解析 AddressParseProvider</p></li><li><p style="margin-left:.5em; margin-right:.5em">[新功能] 后台框架页面增加禁止搜索引擎爬取 meta 标签</p></li><li><p style="margin-left:.5em; margin-right:.5em">[新功能] 后台已登录状态下，前台可直接一键编辑文章，方便快捷</p></li><li><p style="margin-left:.5em; margin-right:.5em">[系统优化] AES 加密函数解密异常时错误优化</p></li></ul><h2>功能特性</h2><h3>博客首页的 SEO 标题、关键词、描述信息可以单独设置</h3><p style="color:#34495e; margin-left:.5em; margin-right:.5em; text-align:left"><img alt="" src="https://mz-assets.tecmz.com/data/image/2024/01/09/32054_r1ij_8427.png" referrerpolicy="no-referrer"></p><h3>后台已登录状态下，前台可直接一键编辑文章，方便快捷</h3><p style="color:#34495e; margin-left:.5em; margin-right:.5em; text-align:left"><img alt="spacer.gif" src="https://ms-cdn.modstart.com/asset/vendor/ueditor/themes/default/images/spacer.gif?1298864217" referrerpolicy="no-referrer"></p><h3>后台博客管理增加更多筛选条件，支持多条件筛选</h3><p style="color:#34495e; margin-left:.5em; margin-right:.5em; text-align:left"><img alt="" src="https://mz-assets.tecmz.com/data/image/2024/01/09/32337_jwnr_1606.png" referrerpolicy="no-referrer"></p><h2>模块市场一键安装</h2><p style="color:#34495e; margin-left:.5em; margin-right:.5em; text-align:left">系统内置模块市场，有行业应用、插件、云存储、云短信等功能模块，后台支持一键安装、启用、禁用、卸载，可快速搭建属于自己的系统应用。</p><p style="color:#34495e; margin-left:.5em; margin-right:.5em; text-align:left"><img alt="功能模块" src="https://ms-assets.modstart.com/data/image/2022/04/18/22844_bgyg_5120.jpeg" referrerpolicy="no-referrer"></p><h2>系统演示与文档</h2><ul><li><p style="margin-left:.5em; margin-right:.5em">码云仓库：<a href="https://gitee.com/modstart/ModStartBlog">https://gitee.com/modstart/ModStartBlog</a></p></li><li><p style="margin-left:.5em; margin-right:.5em">Github 仓库：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmodstart%2FModStartBlog" target="_blank">https://github.com/modstart/ModStartBlog</a></p></li><li><p style="margin-left:.5em; margin-right:.5em">系统演示：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.demo.tecmz.com%2F" target="_blank">https://blog.demo.tecmz.com/</a></p></li><li><p style="margin-left:.5em; margin-right:.5em">下载试用：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmodstart.com%2Fdownload" target="_blank">https://modstart.com/download</a></p></li><li><p style="margin-left:.5em; margin-right:.5em">开发者文档：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmodstart.com%2Fdoc" target="_blank">https://modstart.com/doc</a></p></li><li><p style="margin-left:.5em; margin-right:.5em">模块市场：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmodstart.com%2Fstore" target="_blank">https://modstart.com/store</a></p></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Wed, 10 Jan 2024 03:32:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/275043/modstartblog-8-9-0-released</guid>
            <link>https://www.oschina.net/news/275043/modstartblog-8-9-0-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[开源 Ruoyi-Flex 发布新版 V5.0.0，增加多租户及乐观锁功能，进入新时代]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><strong><span><span><span><span>一、软件简介</span></span></span></span></strong></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span>　　Ruoyi-Flex 是基于 JDK21、Spring Boot V3.2.X+平台前后端分离的 Java 快速开发框架，针对「分布式集群与多租户」场景全方位升级，使用 MIT 开源许可协议，毫无保留给个人及企业免费使用。基于 RuoYi-Vue、RuoYi-Vue-Plus，集成 MyBatis-Flex、JDK21、SpringBootV3.2.X+、Lombok、Sa-Token、SpringDoc、Hutool、SpringBoot Admin、PowerJob、Vue3、Element-Plus、MinIO 等优秀开源软件，支持 PostgreSQL、MySQL 开源数据库及其衍生分布式数据库，可以作为未来 8 年更好的软件开发底座。</span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><strong><span><span><span><span>二、系统特色</span></span></span></span></strong></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span>　　Ruoyi-Flex 秉承「写的更少、性能更好、出错更低、交流通畅、快速入门」 的理念，为您带来全方位的赋能与提升：</span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><strong><span><span><span><span>1、写的更少</span></span></span></span></strong></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span>　　借助</span></span><span><span>MyBatis-Flex</span></span><span><span>，</span></span><span><span>Ruoyi-Flex</span></span><span><span>显著降低了代码输入工作量，最高降低了 25.85%，参考「</span></span><span><span>演示模块</span></span><span><span>」</span></span><span><span>中的同一功能</span></span><span><span>演示程序</span></span><span><span>源码对比分析（排除相同代码量的控制器、前端代码）：</span></span></span></span></p><p><img alt="工作量" src="https://gitee.com/dataprince/ruoyi-flex/raw/master/image/workload.JPG" referrerpolicy="no-referrer"></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span>　　除了那些复杂的遗留项目中的统计报表，在绝大部分情况下</span></span><span><span>Ruoyi-Flex</span></span><span><span>不需要手写 SQL 语句。</span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><strong><span><span><span><span>2、性能更好</span></span></span></span></strong></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span>　　除了集成的 JDK21 虚拟线程、SpringBootV3.2、MyBatis-Flex 的性能提升，系统「代码生成」模块生成的代码，</span></span><span><span style="background-color:#ffffff"><span>凡是涉及到后台数据库的多表查询，没有采用数据库的 LeftJoin、InnerJoin 等 SQL 方式，而是使用 WithRelation 编程装配来取代数据库 LeftJoin SQL 关联查询，数据库不用维护表间外键关系，将多表关联 SQL 语句拆分为对各个单表的主键查询，关联无 SQL，性能提高 10 倍。</span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><strong><span><span><span><span>3、出错更低</span></span></span></span></strong></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span>&nbsp; 　　原来用 mybatis 开发需要手写 SQL 语句，开发后期需要增加字段，修改 xml 文件是一种灾难，一不留神就犯错了；而 Ruoyi-Flex 借助 MyBatis-Flex 则很好地规避了此问题，如果字段输入错误，开发环境 IDEA 就会自动标红报警，避免犯错。</span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><strong><span><span><span><span>4、</span></span><span><span style="background-color:#ffffff"><span>交流通畅 &nbsp;</span></span></span></span></span></strong></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span>　　「非我族类，其心必异」。</span></span><span><span>Ruoyi-Flex</span></span><span><span>集成了一大波国产开源软件：</span></span><span><span>MyBatis-Flex、Sa-Token、Hutool、PowerJob</span></span><span><span>、</span></span><span><span>Element-Plus</span></span><span><span>等，同根同源，交流自然顺畅，开发中遇到问题可联系作者快速得到解决。例如，同一个领域的安全框架，一个中国人只需半天就可学会</span></span><span><span>Sa-Token</span></span><span><span>干活</span></span><span><span>，</span></span><span><span>如果是学 Spring Security 的话，七天也不一定能学会。</span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><strong><span><span><span><span>5、快速入门</span></span></span></span></strong></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span>　　Ruoyi-Flex 已集成各种开源开发框架，扫平了技术障碍，可直接上手干活。使用者只需要设计好数据库表结构，系统能可视化生成前后端本地代码，单表、树表、主子表任你选，10 分钟就能开发一个模块，快速入门，开发高效。</span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><strong><span><span><span><span>三、V5.0.0 更新内容</span></span></span></span></strong></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span>&nbsp;1、增加「租户套餐管理」、「租户管理」模块</span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span>&nbsp;2、实现多租户功能</span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span>&nbsp;3、实现乐观锁功能</span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span>&nbsp;4、实现逻辑删除功能</span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span>&nbsp;5、启用 JAVA21 虚拟线程功能</span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span>&nbsp;6、启用 JAVA21 分代 ZGC 功能</span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span>&nbsp;7、Ruoyi-FlexV5 的 PosgtgreSQL、MySQL 数据库完整脚本</span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span>&nbsp;8、修正部门排序字段错误</span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span>&nbsp;9、升级 spring-boot 依赖到 V3.2.1</span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span>&nbsp;10、升级 mybatis-flex 依赖到 1.7.7，去掉 mybatis-spring 依赖</span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span>&nbsp;11、代码生成模块支持多租户、乐观锁、逻辑删除</span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span>&nbsp;12、增加"客户端管理"模块</span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span>&nbsp;13、完善「ruoyi-common-tenant</span></span><span><span>」</span></span><span><span>模块</span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span>&nbsp;14、增加「ruoyi-common-encrypt」加密模块</span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span>&nbsp;15、postgresql 创建与 mysql 等效的的 find_in_set 函数</span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span>&nbsp;16、同步 ruoyi-vue-plus 的 2023-11-17 至 2023-12-23 的更新</span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span>&nbsp;17、简化代码，对于 QueryWrapper 的操作，不再重复判断条件！</span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span>&nbsp;18、修改 yml 文件，大部分配置代码放到参数文件中</span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><strong><span><span><span><span>四、展望</span></span></span></span></strong></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span>　　喜迎 2024 元旦及春节</span></span><span><span>，Ruoyi-Flex 发布新版 V</span></span><span><span>5</span></span><span><span>.</span></span><span><span>0</span></span><span><span>.0</span></span><span><span>，</span></span><span><span>集成最好的 JAVA ORM 产品 Mybatis-Flex、最好的 JDK21、最好的 SpringBootV3.2.1、最好的安全框架 Sa-Token、最好的任务调度框架 PowerJob、最好的数据库</span></span><span><span>PostgreSQL</span></span><span><span>，</span></span><span><span>启用虚拟线程、分代 ZGC 功能，具备多租户、乐观锁、逻辑删除功能</span></span><span><span>，</span></span><span><span>Ruoyi-Flex</span></span><span><span>站在这些巨人的肩膀上，与您在 2024 年迈入新时代，做最好的快速开源开发框架，致敬时代！</span></span></span></span></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 10 Jan 2024 03:30:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/275041/ruoyi-flex-5-0-0-released</guid>
            <link>https://www.oschina.net/news/275041/ruoyi-flex-5-0-0-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Solus 4.5 发布，弃用 MATE 转向 XFCE 版本]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">Solus 4.5 「Resilience」 现已<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgetsol.us%2F2024%2F01%2F08%2Fsolus-4-5-released%2F" target="_blank">发布</a>。此版本带来了更新的应用程序和内核、更新的软件堆栈、新的安装程序以及采用 XFCE 桌面环境的新 ISO 版本。</span></p><p><span style="color:#000000"><img alt="" height="281" src="https://oscimg.oschina.net/oscnet/up-23a81b7291d2daba437ec478767f1973ee5.jpg" width="500" referrerpolicy="no-referrer"></span></p><p><span style="color:#000000">Solus 4.5 带来了使用 Calamares 安装程序的全新安装体验。与此前相比，现在利用 Calamares 可以更轻松地在不同配置中设置 Solus，例如 Btrfs 根文件系统和其他配置。这也是摆脱旧版 os-installer 所使用的 Python 2 的重要一步。</span></p><p><span style="color:#000000">与此同时，新版本默认使用 Pipewire 媒体框架取代了 JACK 和 PulseAudio；UI 方面不会产生太大差异，但是会带来一些性能方面的改进，例如更好、更可靠的蓝牙音频。以及：</span></p><ul><li><span style="color:#000000">为使用受支持的 AMD 硬件的用户打包了 ROCm 5.5。</span></li><li><span style="color:#000000">附带 Linux kernel 6.6.9 以提供最新的硬件支持。</span></li><li><span style="color:#000000">Mesa 已升级至 23.3.2，以提供最新的开源图形驱动程序</span></li></ul><p><span style="color:#000000">桌面环境方面，Solus 4.5 提供了最新版本的 Budgie / GNOME / Plasma，并针对这些桌面环境提供了许多更新；同时发布了 XFCE 的第一个版本。Solus 4.4 发布公告曾宣布计划弃用 MATE 版本，转而使用新的 XFCE 版本。XFCE 版的目标是填补与 MATE 版相同的空白：喜欢更轻量级桌面体验的用户。</span></p><p><span style="color:#000000">鉴于这是 XFCE 版本的首次发布，可能会存在一些明显的不足，所以官方将 4.5 版 XFCE 定义为 beta 版本。新的 XFCE 版本包括：</span></p><ul><li><span style="color:#000000">XFCE version 4.18</span></li><li><span style="color:#000000">Mousepad 0.6.1</span></li><li><span style="color:#000000">Parole 4.18.0</span></li><li><span style="color:#000000">Ristretto 0.13.1</span></li><li><span style="color:#000000">Thunar 4.18.6</span></li><li><span style="color:#000000">Whiskermenu 2.8.0</span></li></ul><p><span style="color:#000000">XFCE 版本采用传统的桌面布局，带有底部面板和 Whiskermenu 作为应用程序菜单。使用 Qogir GTK 主题和 Papirus 图标主题，打造时尚现代的外观。并已安装 Blueman，可满足用户对蓝牙的所有需求。「这一版本耗费了大量心血，我们很高兴能与大家分享！」</span></p><p><span style="color:#000000">此外，官方仍在努力为 MATE 桌面的现有用户提供无缝过渡路径。从广义上讲，将为用户提供一种将其 MATE 安装迁移到 Budgie 或 XFCE 的方法。在成熟的过渡计划出炉之前，MATE 将继续为现有用户提供支持。</span></p><p>展望 2024，项目团队计划在 Plasma 中提供 Discover，并在 GNOME 中提供 Software Center，以实现具有集成 Flatpak 支持的软件管理。以及将通过修复错误、更新系统组件和完成从 python2 的迁移来偿还技术债务。还计划探索如何开始迁移到 Serpent 工具，为 5.0 版本做好准备。</p><p>更多详情可<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgetsol.us%2F2024%2F01%2F08%2Fsolus-4-5-released%2F" target="_blank">查看官方公告</a>。</p><p><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgetsol.us%2Fdownload" target="_blank">下载</a></strong></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 10 Jan 2024 02:49:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/275026/solus-4-5-released</guid>
            <link>https://www.oschina.net/news/275026/solus-4-5-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[MakuCloud v3.6 发布，简洁好用的 SpringCloud 2023 脚手架]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h2>项目说明</h2><ul><li>maku-cloud 是采用<span>&nbsp;</span><span style="background-color:#ffffff; color:#40485b">SpringCloud 2023、SpringBoot 3.2、SpringSecurity 6.2、Nacos、Mybatis-Plus</span><span>&nbsp;</span>等框架，开发的一套 SpringCloud 快速开发平台，使用门槛极低，且采用 MIT 开源协议，完全免费开源，可免费用于<strong>商业项目</strong>等场景。</li><li>采用组件模式，扩展不同的业务功能，可以很方便的实现各种业务需求，且不会导致系统臃肿，若想使用某个组件，按需引入即可，反之亦然。</li><li>官网地址：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmaku.net" target="_blank">https://maku.net</a></li><li>开发文档：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmaku.net%2Fdocs%2Fmaku-cloud" target="_blank">https://maku.net/docs/maku-cloud</a></li><li>演示环境：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdemo.maku.net%2Fmaku-cloud" target="_blank">https://demo.maku.net/maku-cloud</a></li></ul><h2>更新日志</h2><ul><li>菜单管理页面，可以新增子菜单</li><li>机构管理页面，可以新增子机构</li><li>机构管理页面，可以展开/收缩</li><li>Tab 标签栏，右键可以关闭标签</li><li>优化七牛文件上传，获取 token 方式</li><li>优化 sys_menu 字段 pid 可以为空</li><li>优化菜单 ID 获取方式</li><li>优化前端下载逻辑</li><li>优化用户管理逻辑</li><li>优化字典标签</li><li>升级 SpringCloud 到 2023</li><li>升级 SpringBoot 到 3.2.1</li><li>升级 Vue 到 3.4.3</li><li>升级 Vue-Router 到 4.2.5</li><li>升级 Element-Plus 到 2.4.4</li><li>升级表单设计器，到 1.1.0</li><li>修复超级管理员无法踢出用户问题</li><li>修复默认字段填充错误问题</li><li>修复不能获取驱动问题</li></ul><h2>开源汇总</h2><ul><li>低代码开发平台（单体版）：<a href="https://gitee.com/makunet/maku-boot">https://gitee.com/makunet/maku-boot</a></li><li>低代码开发平台（微服务）：<a href="https://gitee.com/makunet/maku-cloud">https://gitee.com/makunet/maku-cloud</a></li><li>超好用的代码生成器：<a href="https://gitee.com/makunet/maku-generator">https://gitee.com/makunet/maku-generator</a></li><li>Vue3.x 后台管理 UI：<a href="https://gitee.com/makunet/maku-admin">https://gitee.com/makunet/maku-admin</a></li><li>Vue3.x 表单设计器：<a href="https://gitee.com/makunet/maku-form-design">https://gitee.com/makunet/maku-form-design</a></li></ul><h1>架构图</h1><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img src="https://gitee.com/makunet/maku-cloud/raw/master/images/0.png" referrerpolicy="no-referrer"></p><h2>效果图</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://oscimg.oschina.net/oscnet/up-d0065ca4f1a855b06899086183836d0af0b.jpg" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://oscimg.oschina.net/oscnet/up-1844aaec5e2fc7d41592e22214d3b6c4fb7.jpg" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="1733" src="https://oscimg.oschina.net/oscnet/up-9c6a40c83e67737c217439e5a87113464fd.png" width="3451" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://oscimg.oschina.net/oscnet/up-ece73f2b6b04ec2c55941f6e740934ab7b1.jpg" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="1723" src="https://oscimg.oschina.net/oscnet/up-8fc9c3a69eae3db5d332871e74ee26b04fe.png" width="3449" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="1738" src="https://oscimg.oschina.net/oscnet/up-c3625112682db0465d9ab75f84bd9f5fd7a.png" width="3445" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 10 Jan 2024 02:16:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/275022/makucloud-3-6-released</guid>
            <link>https://www.oschina.net/news/275022/makucloud-3-6-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Extism v1.0.0 发布， WebAssembly 插件实现框架]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Extism v1.0.0 已正式发布。Extism 是一个 WebAssembly 插件实现框架，它可以给你的应用开发出各种各样的 WebAssembly 插件，支持多种编程语言。</p><p><img src="https://oscimg.oschina.net/oscnet/up-5d37397b3cababa42f8754739726d916b86.png" referrerpolicy="no-referrer"></p><p>新版本主要变化：</p><ul><li>采用 Go 重写新的 Extism CLI</li><li>Rust SDK 和 C SDK 仍保留在<code>extism/extism</code></li><li>Go SDK 通过 Wazero、JS SDK 使用原生 WASM 引擎来运行 JS 运行时（node、deno、bun、浏览器）</li><li>Extism 主机函数的模块命名空间已更改为&nbsp;<code>extism:host/env</code>&nbsp;，用户定义的主机函数现在默认位于&nbsp;<code>extism:host/user</code>&nbsp;中</li></ul><p><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fextism%2Fextism%2Freleases%2Ftag%2Fv1.0.0" target="_blank">详情</a></u>。</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 10 Jan 2024 02:13:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/275021/extism-1-0-0</guid>
            <link>https://www.oschina.net/news/275021/extism-1-0-0</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[sms4j 3.1.0 发布啦]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h1><span>📣📣sms4j 3.1.0 终于发布啦！📣📣</span></h1><p style="color:#b8bfc6; text-align:start"><span style="color:#000000">2023 年转瞬即逝，sms4j 项目在这段时间里取得了令人瞩目的成就。截至目前，我们已经获得了超过 1300 个 star，这离不开大家对 sms4j 项目的支持和关注，我代表整个开发团队向大家表示衷心的感谢！</span></p><p style="color:#b8bfc6; text-align:start"><span style="color:#000000">同时，我很高兴地告诉大家，我们的开发团队正在不断壮大，并迎来了一批新的成员加入。他们的加入为项目注入了新的活力和创造力。此外，我们还收到了许多建设性的意见和建议，这些宝贵的反馈将有助于我们进一步提升 sms4j 的功能和性能。</span></p><p style="color:#b8bfc6; text-align:start"><span style="color:#000000">接下来，让我们一起来了解一下本次 3.1.0 版本的更新内容，以及认识一下团队的新成员吧！在这个版本中，我们增加了一些新的特性和功能，以满足用户不断增长的需求。同时，我们也修复了一些已知的问题和 bug，提升了系统的稳定性和可靠性。</span></p><p style="color:#b8bfc6; text-align:start"><span style="color:#000000">如果我们的项目对你产生了帮助，或者你觉得还算值得鼓励，请用你发财的小手帮助点上一个 start</span></p><p style="color:#b8bfc6; text-align:start"><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsms4j.com" target="_blank"><span>官网地址</span></a></span></p><p style="color:#b8bfc6; text-align:start"><span><a href="https://gitee.com/dromara/sms4j"><span>gitee 仓库</span></a></span></p><p style="color:#b8bfc6; text-align:start"><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdromara%2Fsms4j" target="_blank"><span>github 仓库</span></a></span></p><h2><span>新增功能：</span></h2><ul><li><p style="margin-left:.5rem; margin-right:0"><span>联麓短信：我们新增了对联麓短信的支持，现在可以像使用其他厂商一样方便地进行使用。</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>鼎众短信：我们还新增了对鼎众短信的支持，鼎众短信可以发送无模板短信，有需要的小伙伴可以尝试一下。</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>OA 通知：在 3.1 版本中，我们正式加入了对 OA 通知的支持，兼容钉钉、飞书和企业微信。</span></p></li></ul><h2><span>优化功能：</span></h2><ul><li><p style="margin-left:.5rem; margin-right:0"><span>邮件功能优化：现在邮件发送可以直接发送 HTML 字符串，并且可以存在模板变量。</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>标准短信方法优化：我们添加了一个方法，该方法用于发送固定模板下的多参数模板短信。</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>全局黑名单功能优化：在这次的更新中，我们重构了底层对于短信失败重试和短信黑名单的功能，现在它变得更加轻量、更加稳定。</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>新增方法 reload 和 reloadAll：我们在核心工厂类（SmsFactory）中新增了方法 reload 和 reloadAll，用于重新从接口实现中读取并重新实例化短信对象。这样可以极大地减少对于重新读取配置的工作量。</span></p></li></ul><h2><span>修复问题：</span></h2><ul><li><p style="margin-left:.5rem; margin-right:0"><span>合一短信 HMAC 模式下签名无效的问题：我们修复了合一短信在 HMAC 模式下签名无效的问题。</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>邮件插件 JDK17 的适配：我们修复了邮件插件在 JDK17 上的适配问题。</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>容联云短信发送失败问题：我们修复了容联云短信发送失败的问题。</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>阿里云短信在个别情况下报签名错误问题：我们修复了阿里云短信在个别情况下报签名错误的问题。</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>云片短信在无模板下报错的问题：我们修复了云片短信在无模板下报错的问题。</span></p></li></ul><p style="color:#b8bfc6; text-align:start"><span># </span></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 10 Jan 2024 01:54:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/275016/sms4j-3-1-0-released</guid>
            <link>https://www.oschina.net/news/275016/sms4j-3-1-0-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[sms4j 3.1.0 终于发布啦！]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h1>📣📣sms4j 3.1.0 终于发布啦！📣📣</h1><p>2023 年转瞬即逝，sms4j 项目在这段时间里取得了令人瞩目的成就。截至目前，我们已经获得了超过 1300 个 star，这离不开大家对 sms4j 项目的支持和关注，我代表整个开发团队向大家表示衷心的感谢！</p><p>同时，我很高兴地告诉大家，我们的开发团队正在不断壮大，并迎来了一批新的成员加入。他们的加入为项目注入了新的活力和创造力。此外，我们还收到了许多建设性的意见和建议，这些宝贵的反馈将有助于我们进一步提升 sms4j 的功能和性能。</p><p>接下来，让我们一起来了解一下本次 3.1.0 版本的更新内容，以及认识一下团队的新成员吧！在这个版本中，我们增加了一些新的特性和功能，以满足用户不断增长的需求。同时，我们也修复了一些已知的问题和 bug，提升了系统的稳定性和可靠性。</p><p>如果我们的项目对你产生了帮助，或者你觉得还算值得鼓励，请用你发财的小手帮助点上一个 start</p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsms4j.com" target="_blank">官网地址</a></p><p><a href="https://gitee.com/dromara/sms4j">gitee 仓库</a></p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdromara%2Fsms4j" target="_blank">github 仓库</a></p><h2>新增功能：</h2><ul><li><p>联麓短信：我们新增了对联麓短信的支持，现在可以像使用其他厂商一样方便地进行使用。</p></li><li><p>鼎众短信：我们还新增了对鼎众短信的支持，鼎众短信可以发送无模板短信，有需要的小伙伴可以尝试一下。</p></li><li><p>OA 通知：在 3.1 版本中，我们正式加入了对 OA 通知的支持，兼容钉钉、飞书和企业微信。</p></li></ul><h2>优化功能：</h2><ul><li><p>邮件功能优化：现在邮件发送可以直接发送 HTML 字符串，并且可以存在模板变量。</p></li><li><p>标准短信方法优化：我们添加了一个方法，该方法用于发送固定模板下的多参数模板短信。</p></li><li><p>全局黑名单功能优化：在这次的更新中，我们重构了底层对于短信失败重试和短信黑名单的功能，现在它变得更加轻量、更加稳定。</p></li><li><p>新增方法 reload 和 reloadAll：我们在核心工厂类（SmsFactory）中新增了方法 reload 和 reloadAll，用于重新从接口实现中读取并重新实例化短信对象。这样可以极大地减少对于重新读取配置的工作量。</p></li></ul><h2>修复问题：</h2><ul><li><p>合一短信 HMAC 模式下签名无效的问题：我们修复了合一短信在 HMAC 模式下签名无效的问题。</p></li><li><p>邮件插件 JDK17 的适配：我们修复了邮件插件在 JDK17 上的适配问题。</p></li><li><p>容联云短信发送失败问题：我们修复了容联云短信发送失败的问题。</p></li><li><p>阿里云短信在个别情况下报签名错误问题：我们修复了阿里云短信在个别情况下报签名错误的问题。</p></li><li><p>云片短信在无模板下报错的问题：我们修复了云片短信在无模板下报错的问题。</p></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Wed, 10 Jan 2024 00:48:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/275005/sms4j-3-1-0-released</guid>
            <link>https://www.oschina.net/news/275005/sms4j-3-1-0-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Java HeartBeat 3.0.0 发布，心跳检测各类服务 (支持 HTTP/UDP/TCP) 应用]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff; color:#333333">Java HeartBeat 3.0.0 版本已经发布，带来 Socket 监控支持（TCP/UDP）。</span></p><p><span style="background-color:#ffffff; color:#333333">3.0.0 版本主要更新如下：</span></p><ol><li><p style="margin-left:0; margin-right:0">添加 Socket (TCP,UDP) 的监控</p></li><li><p style="margin-left:0; margin-right:0">升级 JDK, SpringBoot 等基础版本, log 升级使用 logback 框架, thymeleaf 替换 jsp</p></li><li><p style="margin-left:0; margin-right:0">各实例提供分组与查询</p></li><li><p style="margin-left:0; margin-right:0">邮件配置界面化,更灵活 (不在配置文件中写固定)</p></li><li><p>提醒方式增加钉钉机器人 (相比邮件即时性更好)</p></li><li><p>优化界面部分 UI，更直观简洁</p></li></ol><p><span style="background-color:#ffffff; color:#333333">HeartBeat 3.0.0 版本访问地址：<a href="https://gitee.com/mkk/HeartBeat/tree/3.0.0/" target="_blank">https://gitee.com/mkk/HeartBeat/tree/3.0.0/</a></span></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 09 Jan 2024 14:16:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/274981/java-heartbeat-3-0-0-released</guid>
            <link>https://www.oschina.net/news/274981/java-heartbeat-3-0-0-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[大一统的 Exporter，Cprobe 0.11 发版]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Cprobe 发布 v0.11 版本，融合了 13 款采集插件，包括：MySQL、Redis、Kafka、Blackbox、JSON、Prometheus、ElasticSearch、Oracle、Whois、MongoDB、Postgres、Tomcat、Memcached，取得阶段性里程碑。后面再增加哪些插件，欢迎大家提 issue 或 PR。</p><p><img height="1866" src="https://oscimg.oschina.net/oscnet/up-d3bd1361316b8027653699eb36fce7c4fe7.png" width="1816" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 09 Jan 2024 10:05:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/274951/cprobe-0-11-released</guid>
            <link>https://www.oschina.net/news/274951/cprobe-0-11-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
    </channel>
</rss>
