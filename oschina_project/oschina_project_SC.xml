<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[开源中国-软件更新资讯]]>
        </title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="https://rsshub.app/oschina/news/project" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[开源中国-软件更新资讯 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Tue, 30 Jan 2024 23:23:37 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[酷瓜云课堂（开源版）v1.6.8 发布，在线教育系统]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.koogua.com" target="_blank"><img alt="酷瓜云课堂-开源知识付费解决方案" src="https://portal-1255691183.file.myqcloud.com/img/content/63ec392618bd5.png" referrerpolicy="no-referrer"></a></p><h3>更新内容</h3><ul><li>修正 course_user 中 active_time 未更新问题</li><li>修正主页 simple 模式免费课程模块样式问题</li><li>修正 chapter_user 中 plan_id=0 问题</li><li>修正课时评论管理链接</li><li>修正用户 active_time 搜索条件</li><li>修正课时发布 switch 开关</li><li>精简 chapter/lessons.volt</li><li>去除 league/commonmark 包</li><li>去除分类等必选判断</li><li>更新 layui-v2.9.3</li><li>使用 ServiceTrait 精简代码</li><li>优化 AccountTrait</li><li>优化错误处理</li></ul><h3>系统介绍</h3><p>酷瓜云课堂，依托腾讯云基础服务架构，采用 C 扩展框架 Phalcon 开发，GPL-2.0 开源协议，致力开源网课系统，开源网校系统，开源知识付费系统，开源在线教育系统。</p><h3>系统功能</h3><p>实现了点播、直播、专栏、面授、问答、会员、积分等。</p><p>友情提示：</p><ul><li>演示系统配置低（1Core，1G，1M 跑多个容器）切莫压测</li><li>课程数据来源于网络（无实质内容）切莫购买</li><li>管理后台已禁止数据提交，私密配置已过滤</li></ul><p>桌面端演示：</p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fctc.koogua.com" target="_blank">前台演示</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fctc.koogua.com%2Fadmin" target="_blank">后台演示</a></li></ul><p>演示账号：100015@163.com / 123456 （前后台通用）</p><p>H5 手机端演示：</p><p><img alt="H5 二维码" src="https://portal-1255691183.file.myqcloud.com/img/content/616fc238895b7.png" referrerpolicy="no-referrer"></p><p>演示账号：13507083515 / 123456</p><p>支付流程演示：</p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fctc.koogua.com%2Forder%2Fconfirm%3Fitem_id%3D1390%26item_type%3D1" target="_blank">MySQL 提升课程全面讲解 MySQL 架构设计（0.01 元）</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fctc.koogua.com%2Forder%2Fconfirm%3Fitem_id%3D1286%26item_type%3D1" target="_blank">Nginx 入门到实践 Nginx 中间件（0.01 元）</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fctc.koogua.com%2Forder%2Fconfirm%3Fitem_id%3D80%26item_type%3D2" target="_blank">数据库与中间件的基础必修课（0.02 元）</a></li></ul><p>Tips: 测试支付请用手机号注册一个新账户，以便接收订单通知，以及避免课程无法购买</p><p>微信推送演示：</p><p>Tips: 请用手机注册一个新账号，用户中心 -&gt; 关注订阅，扫码关注公众号。之后的登录、购买、退款、直播、咨询等会有消息推送。</p><h3>项目组件</h3><ul><li>后台框架：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fphalcon.io" target="_blank">phalcon 3.4.5</a></li><li>前端框架：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flayuion.com" target="_blank">layui 2.9.3</a></li><li>全文检索：<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.xunsearch.com" target="_blank">xunsearch 1.4.17</a></li><li>基础依赖：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fphp.net" target="_blank">php7.3</a>， <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmysql.com" target="_blank">mysql5.7</a>， <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fredis.io" target="_blank">redis5.0</a></li></ul><h3>项目文档</h3><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.koogua.com%2Fpage%2Fwiki" target="_blank">运行环境搭建</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.koogua.com%2Fpage%2Fwiki" target="_blank">系统服务配置</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.koogua.com%2Fpage%2Fwiki" target="_blank">客户终端配置</a></li></ul><h3>意见反馈</h3><ul><li><a href="https://gitee.com/koogua/course-tencent-cloud/issues">码云平台</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.koogua.com%2Fcommunity" target="_blank">官方社区</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Tue, 30 Jan 2024 13:43:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276962</guid>
            <link>https://www.oschina.net/news/276962</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Rainbond 企业版 2.0：云原生应用管理新体验]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>在当今快速演进的技术领域，微服务架构已成为企业实现敏捷开发、快速迭代和高效运维的关键。然而，微服务治理也带来了一系列挑战，包括服务发现、负载均衡、故障转移、安全性和监控等。我们从云原生应用管理的角度出发，同时结合企业用户内部实践，深入思考和探索产品的发展方向，在与数百家企业的磨合中，正式发布企业版 2.0 。 该版本是 Rainbond 在云原生应用管理上的深入探索和优化，其中不仅集成了 Istio 和 Spring Cloud 等微服务治理模式，还在国产化信创、离线环境以及企业级备份方面提供了综合的解决方案。可以轻松应对微服务架构中的常见挑战，同时也能适应特定的业务需求和运维环境。</p><h1>企业版功能</h1><ul><li><strong>Spring Cloud 可视化管理</strong>：集成 Spring Cloud，支持可视化管理，包含流量拓扑、流量监控、调用链分析、流量控制及网关配置等功能。</li><li><strong>Istio 可视化管理</strong>：集成 Istio 服务网格，支持流量拓扑、流量监控、零信任网络和流量控制等。</li><li><strong>国产化信创支持</strong>：与多家国产 CPU、国产操作系统进行了兼容性适配，确保平台在各种国产化环境均可正常使用，助力企业顺利完成信创转型。</li><li><strong>离线环境支持</strong>：平台支持在没有网络连接的环境中通过界面部署 Kubernetes 集群和 Rainbond，以及离线源码构建、离线镜像和 Helm Chart 部署。</li><li><strong>企业级备份</strong>：全面的应用备份解决方案，确保企业数据的安全性和恢复能力。</li><li><strong>可观测性中心</strong>：企业版提供了综合的监控解决方案，主要包含全局日志、报警中心、高级监控和大屏。</li><li><strong>集群巡检</strong>：通过巡检插件，定期对 Kubernetes 集群进行健康检查，确保集群运行的稳定性和安全性。主要包含组件运行巡检、配置规范巡检、安全巡检等。</li><li><strong>安全增强</strong>：针对企业级场景，平台支持操作审计、安全配置、源码安全检测等功能。</li><li><strong>网关增强</strong>：优化了 API 网关管理，支持复杂的流量控制、路由策略以及 WAF 防火墙。</li><li><strong>全链路灰度</strong>：支持应用的全链路灰度发布，减少发布新版本时的风险。</li><li><strong>云原生应用商店</strong>：企业版支持应用商店私有化部署，以及开源应用商店应用导入，允许用户建立属于自己的应用商店。</li><li><strong>团队资源配额</strong>：管理团队资源的使用，确保资源的合理分配和使用效率。支持各个团队内存、CPU、存储资源的限制。</li><li><strong>定制化和样式</strong>：提供个性化的用户界面和主题样式，使用户能够根据自己的品牌风格进行定制。</li><li><strong>应用集成和展示门户</strong>：该门户可以方便地集成和展示自己的内部应用，提高内部协作和效率。</li><li><strong>开源中间件（集群版）</strong>：企业级应用商店集成了一系列集群版本的开源中间件，可以为生产环境的使用提供更稳定的保障。</li><li><strong>三级等保支持</strong>：企业版符合国家三级等保的安全标准，适用于需要高安全合规性的企业和机构。</li></ul><h1><strong>主要功能更新</strong></h1><h2><strong>Spring Cloud 可视化管理</strong></h2><p>Rainbond 企业版将 Spring Cloud 的复杂性转化为简单直观的操作。允许用户通过图形界面轻松配置和管理 Spring Cloud 的各项功能，无需深入了解背后的复杂命令或配置文件。用户可以在 Rainbond 的界面上直接进行如下操作：</p><ol><li><strong>服务注册与发现</strong>：在 Rainbond 企业版中，通过 Rainbond 的 Spring Cloud 治理模式，组件可以自动向注册中心注册自己，无需开发者配置注册中心地址。</li><li><strong>配置管理</strong>：Rainbond 提供了一个集中化的界面来管理所有微服务的配置。用户可以轻松地对配置进行添加、修改和删除，同时支持配置的版本管理和回滚。</li><li><strong>断路器和流量控制</strong>：Rainbond 允许用户通过界面配置断路器规则和流量控制策略，帮助用户防止系统级别的故障。</li></ol><p><img alt="1" src="https://grstatic.oss-cn-shanghai.aliyuncs.com/wechat/enterprise2_0/1.png" referrerpolicy="no-referrer"></p><ol><li><strong>链路追踪和监控</strong>：Rainbond 还集成了流量图表、链路追踪等工具，用户可以在 Rainbond 的界面上追踪请求的全链路信息，快速定位问题所在。</li></ol><p><img alt="2" src="https://grstatic.oss-cn-shanghai.aliyuncs.com/wechat/enterprise2_0/2.png" referrerpolicy="no-referrer"></p><p><img alt="3" src="https://grstatic.oss-cn-shanghai.aliyuncs.com/wechat/enterprise2_0/3.png" referrerpolicy="no-referrer"></p><h2><strong>Istio 可视化管理</strong></h2><p>Istio 本身使用的复杂性较高。为了简化其使用流程，帮助用户更好的使用，在 Rainbond 企业版中，Istio 治理模式的集成使得用户可以直接通过 Rainbond 的可视化界面管理和配置 Istio 的功能。其主要功能包括：</p><ol><li><strong>流量管理</strong>：Rainbond 的界面允许用户轻松配置流量路由规则、限流、熔断等策略。这有助于控制和优化服务之间的流量，同时还提供了全面的流量监控能力。</li></ol><p><img alt="4" src="https://grstatic.oss-cn-shanghai.aliyuncs.com/wechat/enterprise2_0/4.png" referrerpolicy="no-referrer"></p><ol><li><strong>零信任网络</strong>：Istio 在服务通信中提供自动的 TLS 加密，提高了微服务架构中的安全性。用户可以通过 Rainbond 界面配置服务间的身份认证和授权规则。</li><li><strong>观察性增强</strong>：通过集成 Istio，Rainbond 为用户提供了丰富的遥测数据，包括服务间调用的延迟、流量分布等。这些信息在 Rainbond 的界面上以图形化方式展示，方便用户监控和调试服务。</li></ol><p><img alt="5" src="https://grstatic.oss-cn-shanghai.aliyuncs.com/wechat/enterprise2_0/5.png" referrerpolicy="no-referrer"></p><ol><li><strong>灰度发布和流量控制</strong>：同时 Rainbond 企业版已支持分批次发布、基于 Header 的匹配规则、全链路灰度以及监控和回滚等全链路灰度发布的核心功能。可以使用户能够更精细地控制服务间的流量，实现灰度发布和流量控制。</li></ol><h2><strong>国产化信创</strong></h2><p>Rainbond 企业版致力于提供符合国产化信创要求的云原生应用管理和部署解决方案。它支持国产操作系统和中间件，能够在完全国产化的硬件和软件环境下运行，可以为用户提供以下关键能力：</p><ol><li><strong>支持国产操作系统和 CPU</strong>：Rainbond 企业版兼容国产操作系统和国产 CPU，如麒麟、中标麒麟、龙芯、飞腾等，确保用户在国产软件环境下也能平稳运行 Rainbond 平台及其管理的应用。</li></ol><p><img alt="6" src="https://grstatic.oss-cn-shanghai.aliyuncs.com/wechat/enterprise2_0/6.png" referrerpolicy="no-referrer"></p><ol><li><strong>一云多芯集群支持</strong>：Rainbond 允许通过一个统一的控制枱部署不同架构的集群，即可以通过页面直接部署管理 x86 架构的集群，也可以部署管理 ARM 架构的集群，同时还支持在同一个集群中部署不同架构的节点。这意味着用户可以在一个集中的界面中监控和管理横跨多种 CPU 架构的集群，从而优化资源分配和操作流程。同时还可以将 x86 应用逐步迁移。</li><li><strong>跨架构应用编译运行</strong>：Rainbond 支持将有源码的 x86 应用系统自动编译成兼容国产化 CPU 的应用，同时还提供了国产化能力仓库，帮助用户实现各类国产化应用的沉淀与复用。</li><li><strong>适配国产数据库和中间件</strong>：针对国产数据库和中间件，Rainbond 企业版能够无缝集成，提供稳定的服务支持，同时还提供了国产化能力仓库，用户可以将已经完成迁移改造的国产化应用发布至该仓库。形成国产化软件的资源池，加速软件开发和交付流程。</li></ol><h2><strong>离线环境支持</strong></h2><p>在离线环境中由于网络限制，传统依赖于在线资源和服务的应用在这种环境下可能难以正常运行。离线环境要求所有必要的软件包、依赖项和工具必须在本地可用。 Rainbond 企业版针对离线环境设计了一系列的支持策略和工具，以确保即使在无法连接外部网络的情况下，用户也能顺利部署和管理云原生应用。</p><ol><li><strong>离线部署</strong>：Rainbond 企业版提供了完整的离线安装包，使得用户可以在没有互联网连接的环境中安装和运行 Rainbond 以及 Kubernetes。安装过程中所需的所有依赖和镜像都已包含在安装包中。</li><li><strong>源码构建与应用管理</strong>：即使在无法访问外部代码库或资源的情况下，Rainbond 企业版也支持从源码构建应用。用户可以上传应用的源代码，Rainbond 将在离线环境中完成构建和部署流程。</li><li><strong>离线镜像和 Helm Chart 包部署</strong>：用户可以将 Docker 镜像和 Helm Chart 包直接上传至 Rainbond 平台，实现在离线环境中的一键部署。</li></ol><h2><strong>企业级备份</strong></h2><p>在微服务架构中，应用数据的安全和持续性至关重要。企业级备份功能保证了在面对数据丢失、系统故障、人为错误或灾难性事件时，能够快速恢复应用和数据。这不仅是为了保障业务连续性，也是满足合规性和安全性要求的关键部分。 Rainbond 企业版提供了全面的企业级备份解决方案，以确保微服务应用和相关数据的安全和完整性。</p><ol><li><strong>全量备份</strong>：Rainbond 企业版支持对整个应用进行全量备份，包括应用的代码、运行环境、配置、数据库和其他相关数据。这种全面的备份策略确保了应用的每个部分都能被准确地备份和恢复。</li><li><strong>备份和恢复流程</strong>：Rainbond 的备份恢复功能流程简单。用户可以轻松启动备份任务，并在需要时快速恢复到特定的备份版本。</li><li><strong>跨集群和团队的备份</strong>：Rainbond 企业版支持跨集群和团队的备份，允许用户在不同的环境中备份和恢复应用。这对于多环境部署和灾难恢复计划尤为重要。</li></ol><h1><strong>我们的用户：</strong></h1><p>Rainbond 企业版自发布以来，已经赢得了众多行业、公司的信任和支持。我们的企业客户涵盖了从初创企业到大型企业，包括餐饮、航空、制造、医疗、煤炭等多个行业。典型客户有：中国煤炭科工集团、京东方、研祥科技、中国航信、中国国际货运航空、海尔以及公安、军队等行业。</p><h1>联系我们：</h1><p>企业版咨询：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frainbond.feishu.cn%2Fshare%2Fbase%2Fshrcn4dG9z5zvbZZWd1MFf6ILBg" target="_blank">https://rainbond.feishu.cn/share/base/shrcn4dG9z5zvbZZWd1MFf6ILBg</a></p><p>企业版全部功能：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.rainbond.com%2Fenterprise_server" target="_blank">https://www.rainbond.com/enterprise_server</a></p><p>微信群：关注 Rainbond 公众号加入技术交流群</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 30 Jan 2024 09:36:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276921/rainbond-enterprise-2-0</guid>
            <link>https://www.oschina.net/news/276921/rainbond-enterprise-2-0</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Solon v2.6.6 发布（更坚实的力量）]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h2>Solon 是什么框架？</h2><p style="color:#24292e; text-align:start"><strong>Java "生态级"应用开发框架</strong>。<span style="background-color:#f1c40f">从零开始构建，有自己的标准规范与开放生态</span>（历时七年，具备全球第二级别的生态规模）。</p><h2>相对于 Spring，有什么特点？</h2><ul><li>国产！国产！国产！</li><li>启动快 5 ～ 10 倍。<span>&nbsp;</span><strong>（更快）</strong></li><li>qps 高 2～ 3 倍。<span>&nbsp;</span><strong>（更高）</strong></li><li>低流量内存节省 1/3 ~ 1/2。<span>&nbsp;</span><strong>（更少）</strong></li><li>打包可以缩小到 1/2 ~ 1/10；比如，300Mb 的变成了 23Mb。<span>&nbsp;</span><strong>（更小）</strong></li><li>同时支持 jdk8, jdk11, jdk17, jdk21,<span>&nbsp;</span><strong>graalvm native image</strong></li></ul><h2>入门探索视频（用户录制）：</h2><p>&nbsp;</p><h2>最近更新了什么？</h2><ul><li>添加 ToSocketdWebSocketListener::setListener 接口（更方便定制）</li><li>添加 ToHandlerListener 对异常反馈的支持</li><li>添加 WebSocket 支持 war(javax) 部署</li><li>添加 WebSocket 支持 war(jakarta) 部署</li><li>添加 OffsetDateTime 请求注入支持</li><li>添加 solon.boot.undertow 打印 http2 的启用情况</li><li>添加 solonee.licence 配置支持</li><li>添加 JacksonActionExecutor 支持设定全新 ObjectMapper</li><li>添加 smarthttp 适配对 websocket header 的处理</li><li>调整 enableMd5key 返回（支持链式返回自己）</li><li>调整，路由拦截器匹配规则采用 pathNew 方法（原为 path）</li><li>调整 ToHandlerListener 基类改为 EventListener（更方便定制）</li><li>修复 WebSocket 不能获取 queryString 单字母参数问题</li><li>liteflow 升为 2.11.4.2</li><li>fastjson2 升为 2.0.44</li><li>snack3 升为 3.2.88</li><li>bean-searcher 升为 4.2.7</li><li>sqltoy 升为 5.2.91</li><li>beetlsql 升为 3.29.0-RELEASE</li><li>reactor-netty-http 升为 1.1.15</li><li>reactor-core 升为 3.6.2</li><li>socket.d 升为 2.3.7</li><li>folkmq 升为 1.0.30</li><li>sms4j 升为 3.1.1</li><li>smarthttp 升为 1.3.8</li></ul><h2>项目仓库地址？</h2><ul><li>gitee：<a href="https://gitee.com/noear/solon">https://gitee.com/noear/solon</a></li><li>github：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnoear%2Fsolon" target="_blank">https://github.com/noear/solon</a></li></ul><h2>官网？</h2><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsolon.noear.org%2F" target="_blank">https://solon.noear.org</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Tue, 30 Jan 2024 08:00:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276912/solon-2-6-6-released</guid>
            <link>https://www.oschina.net/news/276912/solon-2-6-6-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Ant Design 5.13.3 发布，企业级 UI 设计语言和 React 实现]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff; color:#333333">An Design 5.13.3 现已发布，主要变化如下：</span></p><ul><li>Input 
  <ul><li>修复 Input.Search 宽度比 Input 少 1px 的问题。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design%2Fpull%2F47193" target="_blank">#47193</a></li><li>修复 Input 启用<span>&nbsp;</span><code>showCount</code><span>&nbsp;</span>时在 Space.Compact 下的样式错误。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design%2Fpull%2F47112" target="_blank">#47112</a></li></ul></li><li>修复 Descriptions 当<span>&nbsp;</span><code>item</code><span>&nbsp;</span>的<span>&nbsp;</span><code>children</code><span>&nbsp;</span>为<span>&nbsp;</span><code>null</code><span>&nbsp;</span>时丢失单元格右边框样式的问题。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design%2Fpull%2F47191" target="_blank">#47191</a></li><li>修复 Table<span>&nbsp;</span><code>column.onFilter</code><span>&nbsp;</span>方法未过滤树形数据的问题。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design%2Fpull%2F47170" target="_blank">#47170</a></li><li>修复 Affix 在 Chrome 缩放<span>&nbsp;</span><code>80%</code><span>&nbsp;</span>的情况下占位高度异常的问题。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design%2Fpull%2F46823" target="_blank">#46823</a></li><li>修复 QRCode 在暗黑模式下的背景色。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design%2Fpull%2F47128" target="_blank">#47128</a></li><li>修复 Statistic 组件不支持 HTML<span>&nbsp;</span><code>role</code>、<code>data-*</code><span>&nbsp;</span>和<span>&nbsp;</span><code>aria-*</code><span>&nbsp;</span>等属性的问题。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design%2Fpull%2F47149" target="_blank">#47149</a></li><li>修复 Transfer 反选当页错误的问题<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design%2Fpull%2F47125" target="_blank">#47125</a></li><li>降低 Button<span>&nbsp;</span><code>size</code><span>&nbsp;</span>样式权重以方便覆盖。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design%2Fpull%2F47074" target="_blank">#47074</a></li><li>修复 Modal 自定义<span>&nbsp;</span><code>classNames.wrapper</code><span>&nbsp;</span>时<span>&nbsp;</span><code>centered</code><span>&nbsp;</span>属性不生效的问题。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design%2Fpull%2F47076" target="_blank">#47076</a></li><li>修复 Spin 组件在<span>&nbsp;</span><code>tip</code><span>&nbsp;</span>和<span>&nbsp;</span><code>fullscreen</code><span>&nbsp;</span>同时使用时的控制枱误报。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design%2Fpull%2F47015" target="_blank">#47015</a></li><li>移除了早已失效的 PageHeader 组件相关的多语言文案和 ConfigProvider 的<span>&nbsp;</span><code>pageHeader</code><span>&nbsp;</span>属性。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design%2Fpull%2F47163" target="_blank">#47163</a></li><li>重构简化 Drawer 的动画代码。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design%2Fpull%2F47194" target="_blank">#47194</a></li><li>国际化 
  <ul><li>为 Tour 组件补充 it_IT 本地化文案。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design%2Fpull%2F47148" target="_blank">#47148</a></li><li>为 Table 组件筛选功能补充 ja_JP 本地化文案。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design%2Fpull%2F47072" target="_blank">#47072</a></li></ul></li></ul><p>更新说明：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design%2Freleases%2Ftag%2F5.13.3" target="_blank">https://github.com/ant-design/ant-design/releases/tag/5.13.3</a></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 30 Jan 2024 06:33:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276903/ant-design-5-13-3-released</guid>
            <link>https://www.oschina.net/news/276903/ant-design-5-13-3-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[React Native 0.73.3 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff; color:#333333">React Native 0.73.3 现已发布，具体更新内容如下：</span></p><h4 style="margin-left:0; margin-right:0; text-align:start"><strong><span><span><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>Added</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></h4><p style="text-align:start"><strong><span><span><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>iOS specific</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></p><ul><li>查找 codegen 声明时处理 TSAsExpression (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ffacebook%2Freact-native%2Fcommit%2F02957718d7ca1af815493d145697c1e848b16c17" target="_blank">02957718d7</a>)</li></ul><h4 style="text-align:start"><strong>Changed</strong></h4><ul><li>将 CLI 升级到 12.3.2（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ffacebook%2Freact-native%2Fcommit%2Fbcb229e8f8b70b59d3cb603d7bb912784ad25a02" target="_blank">bcb229e8f8</a>）</li></ul><p style="text-align:start"><strong><span><span><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>Android specific</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></p><ul><li>在 ReactActivity 的 onRequestPermissionsResult() 中调用 super.onRequestPermissionsResult (&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ffacebook%2Freact-native%2Fcommit%2F96ed1190c624869af96e464b009e0c0234076893" target="_blank">96ed1190c6</a>)</li></ul><p style="text-align:start"><strong>iOS specific</strong></p><ul><li>从 react_native_post_install 中移除 ATS 配置补丁（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ffacebook%2Freact-native%2Fcommit%2F41c601e4786b544fdd1fca138b0e0c61dbb8eba2" target="_blank">41c601e478</a>）</li></ul><h4 style="text-align:start"><strong>Fixed</strong></h4><ul><li>声明缺少的 dependency<code>chalk</code>（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ffacebook%2Freact-native%2Fcommit%2F9155e2d1828e04d6144de80bb543d50936500377" target="_blank">9155e2d182</a>）</li><li><span style="background-color:#ffffff; color:#1f2328">TouchableBounce, TouchableHighlight and TouchableNativeFeedback dropping touches with React 18</span>。（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ffacebook%2Freact-native%2Fcommit%2Fe4708d661bf3d01ec857635f04a4aabf9d954a5e" target="_blank">e4708d661b</a>）</li><li><span style="background-color:#ffffff; color:#1f2328">TouchableWithoutFeedback and TouchableOpacity dropping touches with React 18</span>。（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ffacebook%2Freact-native%2Fcommit%2F54166342f01fc74236ba6146a4c0f604189017e4" target="_blank">54166342f0</a>）</li></ul><p style="text-align:start"><strong><span><span><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>iOS specific</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></p><ul><li>Restrict Cocoapods versions &lt; 1.15。 （<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ffacebook%2Freact-native%2Fcommit%2F3869ae4d80d1da8c4e3fe7449f2926c5e1575beb" target="_blank">3869ae4d80</a>）</li><li>让<code>RCTDeviceInfo</code>在桥接失效时监听无效事件并 unregister observers（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ffacebook%2Freact-native%2Fcommit%2Fd46d80d2ef6cdc05c5a1b2429ed1df93410ae36f" target="_blank">d46d80d2ef</a>）</li><li>修复对包含空格的 SOURCEMAP_FILE 路径的支持（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ffacebook%2Freact-native%2Fcommit%2F63e893d23d84c9bf65bad64fc359b9686eb19b4d" target="_blank">63e893d23d</a>）</li><li>修复了下载预构建 tarball 后由于 Hermes tarball 路径中的大小写问题而导致的发布构建错误（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ffacebook%2Freact-native%2Fcommit%2F2e2f8a668907552070a2a53a47137b1449b66bbd" target="_blank">2e2f8a6689</a>）</li><li>修复 A11yManager 和 UIManager 之间的 race condition（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ffacebook%2Freact-native%2Fcommit%2Ff39f34ed82997d0595522a285c3cb8693594e718" target="_blank">f39f34ed82</a>）</li><li>修复在 use_frameworks 中找不到 _jump_fcontext 符号的问题 (&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ffacebook%2Freact-native%2Fcommit%2Fa2771ce58ac221d1ac0de265c1ce571212fbcf83" target="_blank">a2771ce58a</a>)</li></ul><p>更新说明：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ffacebook%2Freact-native%2Freleases%2Ftag%2Fv0.73.3" target="_blank">https://github.com/facebook/react-native/releases/tag/v0.73.3</a></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 30 Jan 2024 06:07:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276900/react-native-0-73-3-released</guid>
            <link>https://www.oschina.net/news/276900/react-native-0-73-3-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[kunlun-admin v1.4.2 发布，昆仑管理系统]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">SpringCloud 前后端分离微服务版昆仑管理系统 v1.4.2 发布！</p><h4>更新日志</h4><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">1、升级 SpringCloud 及&nbsp;SpringBoot 版本后适配改造；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">2、升级 Java 17 版本后适配改造<span style="background-color:#ffffff; color:#333333">；</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="background-color:#ffffff; color:#333333">3、前端组件升级后适配改造；</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="background-color:#ffffff; color:#333333">4、优化并修复前端及后端若干问题&nbsp;。</span></p><h4><strong>系统介绍</strong></h4><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">昆仑管理系统是一套基于前后端分离架构的后台管理系统。kunlun-web 基于 React + Umi (乌米) + Ant Design (蚂蚁金服) 构建开发，提供前端解决方案；kunlun-service 基于 SpringBoot 与 Spring Cloud 构建开发，提供后端基于微服务架构的解决方案。系统通过 Apache Shiro 与 Jwt 组件，用 token 进行数据交互认证，可快速开发并独立进行 Docker 容器化部署。</p><h4>使用说明</h4><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">1. &nbsp;npm 安装前端依赖库，并启动 kunlun-home-web 与 kunlun-system-web 服务；<br> 2.&nbsp; 安装并启动 PostgreSQL；<br> 3.&nbsp; 安装并启动 RabbitMQ 和 Redis；<br> 4. &nbsp;启动注册中心服务 kunlun-register-service；<br> 5. &nbsp;依次启动 kunlun-gateway-service、kunlun-basedata-service 与 kunlun-system-service 服务；<br> 6. &nbsp;访问 URL：http://localhost:8000；<br> 7. &nbsp;输入账号：admin，密码：admin 及验证码。</p><h4><strong>工具插件</strong></h4><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="up-80ade19e0fc813d73816b77c0f706a4dc07.png" height="300" src="https://oscimg.oschina.net/oscnet/up-80ade19e0fc813d73816b77c0f706a4dc07.png" width="359" referrerpolicy="no-referrer"></p><h4>页面截图</h4><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="964" src="https://oscimg.oschina.net/oscnet/up-b7d2d49fc827a71697929b8b61b83dd0e8c.png" width="1918" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img src="https://oscimg.oschina.net/oscnet/up-cce01fbb8b8359e7b6c54f93ec5b4cbf8d1.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="937" src="https://oscimg.oschina.net/oscnet/up-814bbf60c4d4235dc562f0c9df214fe79c4.png" width="1920" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="934" src="https://oscimg.oschina.net/oscnet/up-d2167a0ae231dd61d9c0f5316a18c98259e.png" width="1920" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="935" src="https://oscimg.oschina.net/oscnet/up-69247d2af95f8644ac18c65f7cc6fac4874.png" width="1920" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="935" src="https://oscimg.oschina.net/oscnet/up-a1e572e6341a27114707bbfe0f5053f350c.png" width="1920" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img src="https://images.gitee.com/uploads/images/2020/0519/152658_4980a1cb_1894302.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img src="https://images.gitee.com/uploads/images/2020/0519/152923_83532d5e_1894302.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img src="https://images.gitee.com/uploads/images/2020/0519/152753_8e4ad63b_1894302.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="935" src="https://oscimg.oschina.net/oscnet/up-9b1ad2e25bc5b26f352606c038e74d94793.png" width="1920" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="937" src="https://oscimg.oschina.net/oscnet/up-2389c610721734c66277a54a2a62a1fecd4.png" width="1920" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 30 Jan 2024 04:41:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276896</guid>
            <link>https://www.oschina.net/news/276896</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[ETL & 流批一体化框架 bboss v7.1.5 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span>数据采集 ETL &amp; 流批一体化框架 bboss v7.1.5 发布 ---<span>&nbsp;</span></span><strong>高效、稳定、快速、安全</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">7.1.5 版本亮点：<span style="background-color:#ffffff; color:#34495e"><strong>扩展 kafka 输出插件，可以根据需求，在记录级别设置数据发送 Kafka 主题</strong>。</span></p><p style="color:#34495e; margin-left:0; margin-right:0; text-align:start"><span style="color:#000000">bboss 是一个基于开源协议 Apache License 发布的开源项目，由开源团队<span>&nbsp;</span>bboss<span>&nbsp;</span>运维，主要由以下三部分构成：</span></p><ul><li><p style="margin-left:0; margin-right:0"><strong>Elasticsearch Highlevel Java Restclient</strong><span>&nbsp;</span>， 一个高性能高兼容性的 Elasticsearch/Opensearch java 客户端框架</p></li><li><p style="margin-left:0; margin-right:0"><strong>数据采集同步 ETL</strong><span>&nbsp;</span>，一个基于 java 语言实现数据采集作业的强大 ETL 工具，提供丰富的输入插件和输出插件，可以基于插件规范轻松扩展新的输入插件和输出插件</p></li><li><p style="margin-left:0; margin-right:0"><strong>流批一体化计算框架</strong>，提供灵活的数据指标统计计算流批一体化处理功能的简易框架，可以结合数据采集同步 ETL 工具，实现数据流处理和批处理计算，亦可以独立使用；计算结果可以保存到各种关系数据库、分布式数据仓库 Elasticsearch、Clickhouse 等，特别适用于数据体量和规模不大的企业级数据分析计算场景，具有成本低、见效快、易运维等特点，助力企业降本增效。</p></li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" height="564" src="https://oscimg.oschina.net/oscnet/up-9a4a18dc80a526beb69eeb75b968771271f.png" width="1310" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">项目源码地址参考：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fesdoc.bbossgroups.com%2F%23%2Fbboss-build" target="_blank"><span style="color:#3da742">源码下载和构建</span></a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="color:#3da742">快速上手：</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fesdoc.bbossgroups.com%2F%23%2Fquickstart" target="_blank">https://esdoc.bbossgroups.com/#/quickstart</a></p><h1><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fesdoc.bbossgroups.com%2F%23%2Fchangelog%3Fid%3Dv715-%25e5%258a%259f%25e8%2583%25bd%25e6%2594%25b9%25e8%25bf%259b" target="_blank"><span style="color:#34495e">v7.1.5 功能改进</span></a></h1><ol><li>数据处理作业改进：设置增量状态 ID 生成策略，在设置 jobId 的情况下起作用</li></ol><pre><code>ImportIncreamentConfig<span style="color:#525252">.</span>STATUSID_POLICY_JOBID 采用 jobType<span>+</span>jobId 作为增量状态 id
ImportIncreamentConfig<span style="color:#525252">.</span>STATUSID_POLICY_JOBID_QUERYSTATEMENT 采用<span style="color:#525252">[</span>jobType<span style="color:#525252">]</span><span>+</span><span style="color:#525252">[</span>jobId<span style="color:#525252">]</span><span>+</span><span style="color:#525252">[</span>作业查询语句<span>/</span>文件路径等信息的 hashcode<span style="color:#525252">]</span>，作为增量 id 作为增量状态 id
默认值 ImportIncreamentConfig<span style="color:#525252">.</span>STATUSID_POLICY_JOBID_QUERYSTATEMENT</code></pre><ol><li>扩展 kafka 输出插件，可以根据需求，在记录级别设置数据发送 Kafka 主题，使用案例： <pre><code><span style="color:#8e908c">//设置记录级别的 kafka 主题</span>
context<span style="color:#525252">.</span><span style="color:#e96900">setKafkaTopic</span><span style="color:#525252">(</span><span style="color:var(--theme-color,#42b983)">"es2kafka1"</span><span style="color:#525252">)</span><span style="color:#525252">;</span></code></pre></li><li>context 接口增加一组工具方法，用户一次性将 bean 或者 map 中的数据添加到记录中</li></ol><pre><code><span style="color:#8e908c">/**
     * 将对象中的所有字段和值作为字段添加到记录中，忽略空值字段
     * @param bean
     * @return
     */</span>
    Context <span style="color:#e96900">addFieldValues</span><span style="color:#525252">(</span> Object bean<span style="color:#525252">)</span><span style="color:#525252">;</span><span style="color:#8e908c">/**
     * 将对象中的所有字段和值作为字段添加到记录中
     * 根据参数 ignoreNullField 控制是否忽略空值字段 true 忽略  false 不忽略
     * @param bean
     * @param ignoreNullField
     * @return
     */</span>
    Context <span style="color:#e96900">addFieldValues</span><span style="color:#525252">(</span>Object bean<span style="color:#525252">,</span><span style="color:#e96900">boolean</span> ignoreNullField<span style="color:#525252">)</span><span style="color:#525252">;</span><span style="color:#8e908c">/**
     * 将 map 中的所有键值对作为字段添加到记录中，忽略空值字段
     * @param values
     * @return
     */</span>
    Context <span style="color:#e96900">addMapFieldValues</span><span style="color:#525252">(</span> Map<span style="color:#e96900"><span style="color:#525252">&lt;</span>String<span style="color:#525252">,</span>Object<span style="color:#525252">&gt;</span></span> values<span style="color:#525252">)</span><span style="color:#525252">;</span><span style="color:#8e908c">/**
     * 将 map 中的所有键值对作为字段添加到记录中
     *  根据参数 ignoreNullField 控制是否忽略空值字段 true 忽略  false 不忽略
     * @param values
     * @param ignoreNullField
     * @return
     */</span>
    Context <span style="color:#e96900">addMapFieldValues</span><span style="color:#525252">(</span> Map<span style="color:#e96900"><span style="color:#525252">&lt;</span>String<span style="color:#525252">,</span>Object<span style="color:#525252">&gt;</span></span> values<span style="color:#525252">,</span><span style="color:#e96900">boolean</span> ignoreNullField<span style="color:#525252">)</span><span style="color:#525252">;</span></code></pre><p><strong>导入和使用 bboss</strong></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span>bboss 版本最新版本号从以下文档章节【<strong>1.1 在工程中导入 bboss maven 座标</strong><span>】</span></span><span><span>获取:</span></span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fesdoc.bbossgroups.com%2F%23%2Fdb-es-tool" target="_blank"><span>https://esdoc.bbossgroups.com/#/db-es-tool</span></a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>bboss ETL 插件使用指南</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fesdoc.bbossgroups.com%2F%23%2Fdatatran-plugins" target="_blank">https://esdoc.bbossgroups.com/#/datatran-plugins</a></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><strong>bboss 详细介绍文档</strong></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fesdoc.bbossgroups.com%2F%23%2FREADME" target="_blank"><span>https://esdoc.bbossgroups.com/#/README</span></a></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><strong>bboss 实战视频</strong></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1Rs4y1i7EK" target="_blank"><span>Elasticsearch&nbsp;Bboss&nbsp;Stream&nbsp;ETL 介绍视频</span></a></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1ko4y1M7My" target="_blank"><span>实时采集 Mysql&nbsp;binlog 增删改数据视频教程</span></a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1o44y1w7VP" target="_blank">bboss 流批一体化计算入门教程</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1gu411579T" target="_blank">Elasticsearch 导出 Excel 文件，按记录数切割 Excel 文件，解决单个文件导出数量过大问题</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>通用数据库管理工具 -- 支持关系数据库、</strong>Clickhouse、doris 等数据库管理</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.bbossgroups.com%2F%23%2Ftools" target="_blank">https://doc.bbossgroups.com/#/tools</a></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 30 Jan 2024 04:34:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276895</guid>
            <link>https://www.oschina.net/news/276895</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[uengine 运行器 2.2.0 已经发布，在 Deepin/UOS 上安装自定义 APK]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>uengine 运行器 2.2.0 已经发布，在 Deepin/UOS 上安装自定义 APK</p><p>此版本更新内容包括：</p><p><strong>※1、支持 deepin 23，不需要强制依赖 aapt</strong><br><strong>※2、修复 deepin 23 安装的 APK 无法正常在启动器显示图标的问题</strong><br><strong>※3、新增 ARM 架构非飞腾 CPU 识别防止破坏鲲鹏 kbox 环境</strong><br><strong>※4、修复部分系统在使用程序的一些功能时发生崩溃的问题</strong><br><strong>※5、新增 UEngine For Wayland 补丁</strong><br> 6、优化安装量统计机制<br> 7、关于窗口新增赞助页<br> 8、新增 QQ 交流群入口<br> 9、内置 Via 浏览器</p><p><img alt="截图_选择区域_20240130111917.png" src="https://storage.deepin.org/thread/20240130031926574_%E6%88%AA%E5%9B%BE_%E9%80%89%E6%8B%A9%E5%8C%BA%E5%9F%9F_20240130111917.png" referrerpolicy="no-referrer"></p><p>详情查看：<a href="https://gitee.com/gfdgd-xi/uengine-runner/releases/2.2.0">https://gitee.com/gfdgd-xi/uengine-runner/releases/2.2.0</a></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 30 Jan 2024 03:24:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276887/uengine-2-2-0-released</guid>
            <link>https://www.oschina.net/news/276887/uengine-2-2-0-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[CXYGZL-程序员工作流：自定义流程打印模板，新增审批人类型]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h2>概述</h2><p>我们的工作流引擎采用了低代码方式，借鉴了钉钉和飞书的设计思路，旨在降低用户的使用门槛。相比基于 BPMN.js 的工作流引擎，我们的解决方案更容易上手，一般用户也能在几分钟内搭建自己的工作流程。这样，非专业人员也能轻松驾驭我们的工作流引擎，无需过于复杂的专业知识。</p><p>官网：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.cxygzl.com" target="_blank">程序员工作流</a><br> 演示：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpro.cxygzl.com" target="_blank">演示网址</a></p><h2>本次更新内容</h2><ol><li>【新增】支持打印模板自定义设置</li><li>【新增】支持明细表单汇总显示并可以当做条件处理</li><li>【新增】用户任务审批人类型：其他节点人员选择指定</li><li>【优化】流程详情表单只读且为空值的条件下不显示</li><li>【优化】小程序签署合同改为 PDF 转图片显示</li><li>【删除】用户任务审批人类型：发起人自选</li></ol><h2>功能介绍</h2><h3>便捷</h3><p>无论是在 H5、微信小程序还是钉钉小程序，我们已经完美适配，让您可以随时随地启动流程、高效处理任务，并实时了解流程执行情况，助您紧握每一个重要瞬间，从未错过<br><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.cxygzl.com" target="_blank"><img alt="" src="https://www.cxygzl.com/assets/imgs/121111.png" referrerpolicy="no-referrer"></a></p><h3>好用</h3><p>通过低代码方式，您只需简单的拖拽表单、自定义流程图，即可实现个性化的工作流程。一切配置都是所见即所得的，无需费心复杂的设置<br><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.cxygzl.com" target="_blank"><img alt="" src="https://www.cxygzl.com/assets/imgs/2023080601.png" referrerpolicy="no-referrer"></a></p><h3>专业</h3><p>我们提供了广泛的专业功能，包括排他网关、包容网关、延时器、子流程等多种节点，以及流程监听器、动态表单权限等特色功能。这些功能的完美结合，确保流程与业务的无缝对接和完美衔接<br><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.cxygzl.com" target="_blank"><img alt="" src="https://pro.cxygzl.com/api/file/show/2024-01-16/15bedf5b31474e429ad317483d0bff62.png" referrerpolicy="no-referrer"></a></p><h2>强大</h2><p>审批仅仅是我们提供的众多功能之一，无论是业务编排还是动态表单，我们都能轻松应对。而且，我们还为用户提供了更多可扩展的动态属性，使得流程变得更加丰富多样<br><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.cxygzl.com" target="_blank"><img alt="" src="https://pro.cxygzl.com/api/file/show/2024-01-16/593dd697e27949a6ae9e60da0e14b308.png" referrerpolicy="no-referrer"></a></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 30 Jan 2024 03:08:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276884/cxygzl-updated</guid>
            <link>https://www.oschina.net/news/276884/cxygzl-updated</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Barman 3.10.0 发布，PostgreSQL 备份与灾难恢复管理器]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff; color:#333333">Barman 是 PostgreSQL 数据库的备份和灾难恢复管理器，v</span><span style="background-color:#ffffff; color:#333333"><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span><span><span>3.10.0 版本现已发布</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="background-color:#ffffff; color:#333333">。一些亮点更新内容如下：</span></p><p style="margin-left:0px; margin-right:0px; text-align:left"><strong><span><span><span><span><span><span style="color:var(--header-fg-color)"><span><span><span><span><span><span><span><span><span><span><span><span>Features</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></p><ul><li>根据新 CLI 选项<code>--max-bandwidth</code>设置的值，限制<code>barman-cloud-backup</code>备份到 AWS S3 或 Azure Blob 存储时使用的平均带宽。</li><li>添加新的<code>lock_directory_cleanup</code>配置选项&nbsp;，使 cron 能够自动清除 barman_lock_directory 中未使用的锁定文件。</li><li>添加对名为<code>model</code>的新配置类型的支持。</li><li>添加新的&nbsp;Barman&nbsp;命令<code>barman config-update</code>，允许使用 JSON 创建和更新配置。</li><li>与此 Barman 版本相关，<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FEnterpriseDB%2Fbarman%2Fblob%2Fmaster%2FNEWS" target="_blank">pg_backup_api</a>&nbsp;已更新并发布以支持这些新功能。因此，Barman 现在支持在运行时更改配置。此 pg-backup-api 版本添加了所需的端点，以便在请求时触发该切换。</li></ul><p style="margin-left:0px; margin-right:0px; text-align:left"><strong><span><span><span><span><span><span style="color:var(--header-fg-color)"><span><span><span><span><span><span><span><span><span><span><span><span>Bug 修复</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></p><ul><li>修复了在 Barman 中使用<code>barman-cloud-backup</code>作为 hook script 时，导致<code>--min-chunk-size</code>被忽略的错误。</li></ul><p><span style="background-color:#ffffff; color:#333333">更新说明：</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.postgresql.org%2Fabout%2Fnews%2Fbarman-3100-released-2798%2F" target="_blank">https://www.postgresql.org/about/news/barman-3100-released-2798/</a></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 30 Jan 2024 03:01:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276881/barman-3-10-0-released</guid>
            <link>https://www.oschina.net/news/276881/barman-3-10-0-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Socket.D v2.3.9 发布（支持 node.js server 模式）]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h3>Socket.D</h3><p style="color:#24292e; text-align:start">是基于"事件"和"语义消息""流"的网络应用层传输协议。有用户说，「Socket.D 之于 Socket，尤如 Vue 之于 Js、Mvc 之于 Http」。<span style="background-color:#f1c40f">支持 tcp, udp, ws, kcp 传输</span>。协议特点可参考<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsocketd.noear.org%2Farticle%2F748" target="_blank">《官网介绍》</a>。</p><p style="color:#24292e; text-align:start">pyton 已开发完成，再在测试中；go, rust, c++ 正在开发中。</p><h3>for Java 适配框架更新说明：</h3><ul><li>添加 CLOSE28_OPEN_FAIL 关闭码，优化关闭处理</li><li>调整 SocketD.createXxx 的异常提示，带上协议架构信息</li><li>调整 PathListener::of 更名为 doOf，并添加 of 函数（应用不同）</li></ul><h3>for JavaScript 适配框架更新说明：</h3><ul><li><span style="background-color:#f1c40f">完成 for Node.js server 实现!!!</span></li><li>添加 Session::remoteAddress,localAddress 方法</li><li>添加 CLOSE28_OPEN_FAIL 关闭码，优化关闭处理</li><li>调整 SocketD.createXxx 的异常提示，带上协议架构信息</li><li>调整 PathListener::of 更名为 doOf，并添加 of 函数（应用不同）</li></ul><h3>新增的接口体验（for Node.js Server）：</h3><p style="color:#24292e; text-align:start">现在服务端可以用 java 也可以用 node.js（很快也可以用 python 了） 。for Node.js Server Demo:</p><ul><li>包配置</li></ul><pre><code class="language-javascript">{
  <span style="color:#50a14f">"name"</span>: <span style="color:#50a14f">"demo"</span>,
  <span style="color:#50a14f">"description"</span>: <span style="color:#50a14f">"socket.d for node.js demo"</span>,
  <span style="color:#50a14f">"author"</span>: <span style="color:#50a14f">"noear"</span>,
  <span style="color:#50a14f">"dependencies"</span>: {
    <span style="color:#50a14f">"@noear/socket.d"</span>: <span style="color:#50a14f">"2.3.9"</span>,
    <span style="color:#50a14f">"ws"</span>: <span style="color:#50a14f">"^8.16.0"</span>
  }
}
</code></pre><ul><li>服务端示例代码</li></ul><pre><code class="language-javascript"><span style="color:#a626a4">const</span> {<span style="color:#c18401">SocketD</span>}  = <span style="color:#c18401">require</span>(<span style="color:#50a14f">'@noear/socket.d'</span>);

<span style="color:#a626a4">function</span><span style="color:#4078f2">main</span>(){
   <span style="color:#a626a4">let</span> server = <span style="color:#c18401">SocketD</span>.<span style="color:#4078f2">createServer</span>(<span style="color:#50a14f">"sd:ws"</span>)
       .<span style="color:#4078f2">config</span>(<span><span>c</span> =&gt;</span> c.<span style="color:#4078f2">port</span>(<span style="color:#986801">8602</span>).<span style="color:#4078f2">fragmentSize</span>(<span style="color:#986801">1024</span> * <span style="color:#986801">1024</span>))
       .<span style="color:#4078f2">listen</span>(<span style="color:#4078f2">buildListener</span>())
       .<span style="color:#4078f2">start</span>();
}

<span style="color:#a626a4">function</span><span style="color:#4078f2">buildListener</span>() {
    <span style="color:#a626a4">return</span><span style="color:#c18401">SocketD</span>.<span style="color:#4078f2">newEventListener</span>()
        .<span style="color:#4078f2">doOnOpen</span>(<span><span>s</span> =&gt;</span> {
            <span style="color:#986801">console</span>.<span style="color:#4078f2">info</span>(<span style="color:#50a14f">"onOpen: "</span> + s.<span style="color:#4078f2">sessionId</span>());
        }).<span style="color:#4078f2">doOnMessage</span>(<span>(<span>s, m</span>) =&gt;</span> {
            <span style="color:#986801">console</span>.<span style="color:#4078f2">info</span>(<span style="color:#50a14f">"onMessage: "</span> + m);
        }).<span style="color:#4078f2">doOn</span>(<span style="color:#50a14f">"/demo"</span>, <span>(<span>s, m</span>) =&gt;</span> {
            <span style="color:#a626a4">if</span> (m.<span style="color:#4078f2">isRequest</span>()) {
                s.<span style="color:#4078f2">reply</span>(m, <span style="color:#c18401">SocketD</span>.<span style="color:#4078f2">newEntity</span>(<span style="color:#50a14f">"me to!"</span>));
            }

            <span style="color:#a626a4">if</span> (m.<span style="color:#4078f2">isSubscribe</span>()) {
                <span style="color:#a626a4">let</span> size = m.<span style="color:#4078f2">rangeSize</span>();
                <span style="color:#a626a4">for</span> (<span style="color:#a626a4">let</span> i = <span style="color:#986801">1</span>; i &lt;= size; i++ ) {
                    s.<span style="color:#4078f2">reply</span>(m, <span style="color:#c18401">SocketD</span>.<span style="color:#4078f2">newEntity</span>(<span style="color:#50a14f">"me to-"</span> + i));
                }
                s.<span style="color:#4078f2">replyEnd</span>(m, <span style="color:#c18401">SocketD</span>.<span style="color:#4078f2">newEntity</span>(<span style="color:#50a14f">"welcome to my home!"</span>));
            }
        }).<span style="color:#4078f2">doOn</span>(<span style="color:#50a14f">"/upload"</span>, <span>(<span>s, m</span>) =&gt;</span> {
            <span style="color:#a626a4">if</span> (m.<span style="color:#4078f2">isRequest</span>()) {
                <span style="color:#a626a4">let</span> fileName = m.<span style="color:#4078f2">meta</span>(<span style="color:#c18401">SocketD</span>.<span>EntityMetas</span>.<span>META_DATA_DISPOSITION_FILENAME</span>);
                <span style="color:#a626a4">if</span> (fileName) {
                    s.<span style="color:#4078f2">reply</span>(m, <span style="color:#c18401">SocketD</span>.<span style="color:#4078f2">newEntity</span>(<span style="color:#50a14f">"no file! size: "</span> + m.<span style="color:#4078f2">dataSize</span>()));
                } <span style="color:#a626a4">else</span> {
                    s.<span style="color:#4078f2">reply</span>(m, <span style="color:#c18401">SocketD</span>.<span style="color:#4078f2">newEntity</span>(<span style="color:#50a14f">"file received: "</span> + fileName + <span style="color:#50a14f">", size: "</span> + m.<span style="color:#4078f2">dataSize</span>()));
                }
            }
        }).<span style="color:#4078f2">doOn</span>(<span style="color:#50a14f">"/download"</span>, <span>(<span>s, m</span>) =&gt;</span> {
            <span style="color:#a626a4">if</span> (m.<span style="color:#4078f2">isRequest</span>()) {
                <span style="color:#a626a4">let</span> fileEntity = <span style="color:#c18401">SocketD</span>.<span style="color:#4078f2">newEntity</span>(<span style="color:#50a14f">"..."</span>);<em>//todo://SocketD.newEntity(fs.readFileSync("/Users/noear/Movies/snack3-rce-poc.mov"));</em>
                s.<span style="color:#4078f2">reply</span>(m, fileEntity);
            }
        }).<span style="color:#4078f2">doOn</span>(<span style="color:#50a14f">"/push"</span>, <span>(<span>s, m</span>) =&gt;</span> {
            <span style="color:#a626a4">if</span> (s.<span style="color:#4078f2">attrHas</span>(<span style="color:#50a14f">"push"</span>)) {
                <span style="color:#a626a4">return</span>;
            }

            s.<span style="color:#4078f2">attrPut</span>(<span style="color:#50a14f">"push"</span>, <span style="color:#50a14f">"1"</span>);

            <span style="color:#a626a4">for</span> (<span style="color:#a626a4">let</span> i = <span style="color:#986801">0</span>; i++; i &lt; <span style="color:#986801">100</span>) {
                <span style="color:#a626a4">if</span> (s.<span style="color:#4078f2">attrHas</span>(<span style="color:#50a14f">"push"</span>) == <span style="color:#0184bb">false</span>) {
                    <span style="color:#a626a4">break</span>;
                }

                s.<span style="color:#4078f2">send</span>(<span style="color:#50a14f">"/push"</span>, <span style="color:#c18401">SocketD</span>.<span style="color:#4078f2">newEntity</span>(<span style="color:#50a14f">"push test"</span>));
                <em>//todo:sleep</em>
            }
        }).<span style="color:#4078f2">doOn</span>(<span style="color:#50a14f">"/unpush"</span>, <span>(<span>s, m</span>) =&gt;</span> {
            s.<span style="color:#4078f2">attrMap</span>().<span style="color:#4078f2">remove</span>(<span style="color:#50a14f">"push"</span>);
        })
        .<span style="color:#4078f2">doOnClose</span>(<span><span>s</span> =&gt;</span> {
            <span style="color:#986801">console</span>.<span style="color:#4078f2">info</span>(<span style="color:#50a14f">"onClose: "</span> + s.<span style="color:#4078f2">sessionId</span>());
        }).<span style="color:#4078f2">doOnError</span>(<span>(<span>s, err</span>) =&gt;</span> {
            <span style="color:#986801">console</span>.<span style="color:#4078f2">warn</span>(<span style="color:#50a14f">"onError: "</span> + s.<span style="color:#4078f2">sessionId</span>());
        });
}

<span style="color:#4078f2">main</span>();
</code></pre><h3>Socket.D.js 客户能力演示：</h3><ul><li>监听（相当于 ws 的增强）</li></ul><p style="color:#24292e; text-align:start">多了事件路由。可以用一个连接，监听不同的业务事件（类似于 http path）。</p><pre><code class="language-javascript"><em>//打开客户端会话（用 url 形式打开）</em><span style="color:#a626a4">let</span> session = <span style="color:#a626a4">await</span><span style="color:#c18401">SocketD</span>.<span style="color:#4078f2">createClient</span>(<span style="color:#50a14f">"sd:ws</span><span style="color:#50a14f">://127.0.0.1:8602/?token=1b0VsGusEkddgr3d"</span>)</code><code class="language-javascript">        .<span style="color:#4078f2">listen</span>(<span style="color:#c18401">SocketD</span>.<span style="color:#4078f2">newEventListener</span>()
                .<span style="color:#4078f2">doOnOpen</span>(s -&gt; { <em>//会话打开时</em><em>//...</em>
                }).<span style="color:#4078f2">doOnMessage</span>((s, m) -&gt; { <em>//收到任意消息时</em><em>//打印</em><span style="color:#986801">console</span>.<span style="color:#4078f2">info</span>(m);
                }).<span style="color:#4078f2">doOn</span>(<span style="color:#50a14f">"/demo"</span>, (s, m) -&gt; { <em>//收到"/demo"事件的消息时</em><span style="color:#a626a4">if</span> (m.<span style="color:#4078f2">isRequest</span>() || m.<span style="color:#4078f2">isSubscribe</span>()) {
                        <em>//答复</em>
                        s.<span style="color:#4078f2">replyEnd</span>(m, <span style="color:#c18401">SocketD</span>.<span style="color:#4078f2">newEntity</span>(<span style="color:#50a14f">"And you too."</span>));
                    }
                }))
        .<span style="color:#4078f2">open</span>();
</code></pre><ul><li>发送，和 发送文件（并获取进度）</li></ul><p style="color:#24292e; text-align:start">发送相对于 ws 多了元信息。可为数据添加额外的业务标注。发送大数据时，会自动分片（接收端自动聚合）</p><pre><code class="language-javascript"><em>//发送</em>
session.<span style="color:#4078f2">send</span>(<span style="color:#50a14f">"/demo/hello"</span>, <span style="color:#c18401">SocketD</span>.<span style="color:#4078f2">newEntity</span>(<span style="color:#50a14f">"hi"</span>).<span style="color:#4078f2">metaPut</span>(<span style="color:#50a14f">"sender"</span>,<span style="color:#50a14f">"noear"</span>));

<em>//发送文件，且获取发送进度（如果有大数据发送，又需要显示进度）//实际开发，要用 sendAndRequest 接口（以获取接收确认）</em>
session.<span style="color:#4078f2">send</span>(<span style="color:#50a14f">"/demo/upload"</span>, <span style="color:#c18401">SocketD</span>.<span style="color:#4078f2">newEntity</span>(file)).<span style="color:#4078f2">thenProgress</span>(<span>(<span>isSend, val, max</span>)=&gt;</span>{
    <span style="color:#a626a4">if</span>(isSend){
        <em>//获取发送进度</em><span style="color:#986801">console</span>.<span style="color:#4078f2">info</span>(<span style="color:#50a14f">`...<span style="color:#e45649">${val}</span>/<span style="color:#e45649">${max}</span>`</span>);
    }
});
</code></pre><ul><li>请求，和 下载文件（或大数据块）</li></ul><p style="color:#24292e; text-align:start">这个相当于 ws 有了 ajax 的交互方式</p><pre><code class="language-javascript"><em>//发送并请求（有点像 ajax）</em><span style="color:#a626a4">let</span> reply = session.<span style="color:#4078f2">sendAndRequest</span>(<span style="color:#50a14f">"/demo/hello"</span>, <span style="color:#c18401">SocketD</span>.<span style="color:#4078f2">newEntity</span>()).<span style="color:#4078f2">thenReply</span>(<span><span>reply</span>=&gt;</span>{
    <span style="color:#986801">console</span>.<span style="color:#4078f2">info</span>(reply.<span style="color:#4078f2">dataAsString</span>());
});

<em>//发送并请求，且取接收进度（如果有大数据获取，又需要显示进度）</em>
session.<span style="color:#4078f2">sendAndRequest</span>(<span style="color:#50a14f">"/demo/download"</span>, <span style="color:#c18401">SocketD</span>.<span style="color:#4078f2">newEntity</span>()).<span style="color:#4078f2">thenProgress</span>(<span>(<span>isSend, val, max</span>)=&gt;</span>{
    <span style="color:#a626a4">if</span>(!isSend){
        <em>//获取接收进度</em><span style="color:#986801">console</span>.<span style="color:#4078f2">info</span>(<span style="color:#50a14f">`...<span style="color:#e45649">${val}</span>/<span style="color:#e45649">${max}</span>`</span>);
    }
}).<span style="color:#4078f2">thenReply</span>(<span><span>reply</span>=&gt;</span>{
      <em>//reply.data()...</em>
}).<span style="color:#4078f2">thenError</span>(<span><span>err</span>=&gt;</span>{
      <em>//如果有出错？</em>
});
</code></pre><ul><li>订阅，与 流量控制（一般用于流加载）</li></ul><p style="color:#24292e; text-align:start">通过 range(start, size) 指定数据范围，由 sendAndSubscribe 发起订阅，通过 thenReply 多次接收。</p><pre><code class="language-javascript"><em>//发送并订阅</em><span style="color:#a626a4">let</span> entity = <span style="color:#c18401">SocketD</span>.<span style="color:#4078f2">newEntity</span>().<span style="color:#4078f2">range</span>(<span style="color:#986801">5</span>,<span style="color:#986801">5</span>).<span style="color:#4078f2">metaPut</span>(<span style="color:#50a14f">"videoId"</span>,<span style="color:#50a14f">"1"</span>);
session.<span style="color:#4078f2">sendAndSubscribe</span>(<span style="color:#50a14f">"/demo/stream"</span>, entity).<span style="color:#4078f2">thenReply</span>(<span><span>reply</span>=&gt;</span>{
      <em>//异步获取答复（会多次回调）</em>
})
</code></pre><h3>视频演示效果：</h3><ul><li>for H5 
  <ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1ck4y197BV%2F" target="_blank">https://www.bilibili.com/video/BV1ck4y197BV/</a></li><li><a href="https://gitee.com/noear/socket.d/tree/main/javascript/socketd-examples/demo01-js-ws">演示源码</a></li></ul></li><li>for UniAPP 
  <ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1T94y1T7sp%2F" target="_blank">https://www.bilibili.com/video/BV1T94y1T7sp/</a></li><li><a href="https://gitee.com/noear/socket.d/tree/main/javascript/socketd-examples/demo03-uniapp-ws">演示源码</a></li></ul></li></ul><h3>代码仓库：</h3><ul><li><a href="https://gitee.com/noear/socketd">https://gitee.com/noear/socketd</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnoear%2Fsocketd" target="_blank">https://github.com/noear/socketd</a></li></ul><h3>官网：</h3><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsocketd.noear.org%2F" target="_blank">https://socketd.noear.org</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Mon, 29 Jan 2024 05:29:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276899/socketd-2-3-9-released</guid>
            <link>https://www.oschina.net/news/276899/socketd-2-3-9-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[🔥每秒推送 600 万条消息，已成为过去式]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h2><span style="background-color:#e7642b; color:white">1、smart-mqtt 简介</span></h2><p style="color:black; margin-left:0; margin-right:0; text-align:left"><strong>smart-mqtt，是 smartboot 组织下面向物联网的首款解决方案，它使用 Java 语言开发，提供高效、可靠的 MQTT Broker 服务。</strong></p><p style="color:black; margin-left:0; margin-right:0; text-align:left">smart-mqtt 的独特优势在于大量设备接入的情况下，仍能保持低延迟和高吞吐量，满足物联网领域严苛的实时性需求。同时，smart-mqtt 为了最大限度地节省硬件成本，采用了高度优化的资源管理策略，降低了系统运行时的 CPU 和内存占用，使企业在保持高性能的同时，大幅降低运维成本。</p><p style="color:black; margin-left:0; margin-right:0; text-align:left"><strong>另外，mqtt 协议天然适合 IM 场景，需要打造企业级 IM 应用，smart-mqtt 同样是一个非常好的选择。</strong></p><p style="color:black; margin-left:0; margin-right:0; text-align:left"><img src="https://smartboot.tech/assets/img/framework.87b57b29.svg" referrerpolicy="no-referrer"></p><blockquote><p style="color:#424b5d; margin-left:0; margin-right:0">smartboot 开源组织，一个容易被误认为是在 「重复造轮子」 的低调组织。曾获得<span>&nbsp;</span><strong>2020 年度 OSC 中国开源项目「优秀 Gitee 组织 」</strong>荣誉。</p><p style="color:#424b5d; margin-left:0; margin-right:0">该组织内的明星项目包括：</p><ul><li><p style="margin-left:0; margin-right:0">smart-socket<br> 历时 5 年精炼出 2 千多行代码，轻松实现百万级长连接的 AIO 通信框架。</p></li><li><p style="margin-left:0; margin-right:0">smart-http<br> 基于 smart-socket 实现的 HTTP/1.1 web 服务。</p></li><li><p style="margin-left:0; margin-right:0">smart-servlet<br> 基于 smart-http 实现的 Servlet 3.1 容器服务。</p></li><li><p style="margin-left:0; margin-right:0">smart-mqtt<br> 基于 smart-socket 实现的 MQTT 3.1.1/5.0 Broker&amp;Client 服务。</p></li><li><p style="margin-left:0; margin-right:0">smart-flow<br> 一款具备可观测性的轻量级业务编排框架。</p></li></ul><p style="color:#424b5d; margin-left:0; margin-right:0">组织地址：<span>?</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsmartboot.tech%2F" target="_blank">https://smartboot.tech/</a><br> 代码仓库：<span>?</span><a href="https://gitee.com/smartboot">https://gitee.com/smartboot</a></p></blockquote><h3>快速启动</h3><pre><code class="language-bash"><span style="color:#6f42c1"><span style="color:#6f42c1">docker</span></span><span style="color:#032f62"><span style="color:#032f62">run --name smart-mqtt \
  -p 18083:18083 \
  -p 1883:1883  \
  -d smartboot/smart-mqtt:latest</span></span></code></pre><ul><li><p style="margin-left:0; margin-right:0">18083：Web 管理后台服务端口</p></li><li><p style="margin-left:0; margin-right:0">1883：mqtt 端口</p><p><img height="619" src="https://oscimg.oschina.net/oscnet/up-848a14fa3a1b6e76dfc3831d3d4316bc4bb.png" width="1080" referrerpolicy="no-referrer"></p></li></ul><h2><span style="background-color:#e7642b; color:white">2、 版本更新</span></h2><p style="color:black; margin-left:0; margin-right:0; text-align:left">在 2023 年的最后一个版本中，smart-mqtt 将 Qos0 消息的 TPS 由<span>&nbsp;</span><strong>350W/s</strong><span>&nbsp;</span>提升至<span>&nbsp;</span><strong>600W/s</strong>。</p><p style="color:black; margin-left:0; margin-right:0; text-align:left">作为 2024 年的第一个版本，600W/s 这个数值再次被刷新，达到了惊人的<span>&nbsp;</span><strong>670W/s</strong>，提升幅度超过 10% 。</p><p style="color:black; margin-left:0; margin-right:0; text-align:left">此外，在这个版本中我们引入了版本检测功能，帮助用户主动感知新版本发布。</p><p><img height="371" src="https://oscimg.oschina.net/oscnet/up-11b73f695854cbebc6516bc1070e64b89fa.png" width="1080" referrerpolicy="no-referrer"></p><p style="color:black; margin-left:0; margin-right:0; text-align:left"><strong>更新内容：</strong></p><ol><li><p>优化消息总线 Consumer 的接口设计。</p></li><li><p>临时性事件类型执行完毕后自动销毁订阅者。</p></li><li><p>提升事件总线的执行性能。</p></li><li><p>BrokerTopic 增加可用性状态量。</p></li><li><p>增加遗嘱消息配置的合法性校验</p></li><li><p>提升通信性能。</p></li><li><p>加入新版本检测功能，及时获得最新动态。</p></li><li><p>smart-socket 升级至 1.5.41</p></li><li><p>smart-http 升级至 1.3.8</p></li></ol><h2><span style="background-color:#e7642b; color:white">3、性能测试报告</span></h2><ul><li><p style="margin-left:0; margin-right:0">场景一：<br> 10 个 publisher 每隔 1 毫秒发送 payload 为 128 字节的消息，这些消息分布在 128 种 topic 下，有 2000 个 subscriber 订阅这些 topic 的消息。</p></li></ul><table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:1px; border:none; box-sizing:border-box !important; color:#000000; display:table; font-family:Optima-Regular,Optima,PingFangSC-light,PingFangTC-light,&quot;PingFang SC&quot;,Cambria,Cochin,Georgia,Times,&quot;Times New Roman&quot;,serif; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; line-height:inherit; margin:0px 0px 10px; max-width:100%; orphans:2; outline:0px; overflow-wrap:break-word !important; overflow:auto; padding:0px; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:657px; word-break:keep-all; word-spacing:0px"><tbody><tr><th style="text-align:left">&nbsp;</th><th style="text-align:left"><strong>smart-mqtt v0.33</strong></th><th style="text-align:left"><strong>smart-mqtt v0.34</strong></th><th style="text-align:left"><strong>smart-mqtt v0.35</strong></th></tr></tbody><tbody><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">QoS0</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">350W/s</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">600W/s</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">670W/s</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">QoS1</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">220W/s</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">280W/s</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">320W/s</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">QoS2</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">110W/s</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">150w/s</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">180W/s</td></tr></tbody></table><ul><li><p style="margin-left:0; margin-right:0">场景二：</p></li></ul><p style="color:black; margin-left:0; margin-right:0; text-align:left">2000 个 publisher 每隔 1 毫秒发送 10 个 payload 为 128 字节的消息，这些消息分布在 128 种 topic 下。</p><table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:1px; border:none; box-sizing:border-box !important; color:#000000; display:table; font-family:Optima-Regular,Optima,PingFangSC-light,PingFangTC-light,&quot;PingFang SC&quot;,Cambria,Cochin,Georgia,Times,&quot;Times New Roman&quot;,serif; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; line-height:inherit; margin:0px 0px 10px; max-width:100%; orphans:2; outline:0px; overflow-wrap:break-word !important; overflow:auto; padding:0px; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:657px; word-break:keep-all; word-spacing:0px"><tbody><tr><th style="text-align:left">&nbsp;</th><th style="text-align:left">smart-mqtt 社区版</th><th style="text-align:left">smart-mqtt 企业版</th></tr></tbody><tbody><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">QoS0</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">98W/s</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">97W/s</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">QoS1</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">58W/s</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">58W/s</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">QoS2</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">49W/s</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">47W/s</td></tr></tbody></table><h2><span style="background-color:#e7642b; color:white">4、如何获取 smart-mqtt</span></h2><p style="margin-left:0px; margin-right:0px; text-align:left"><strong>源码</strong></p><ul><li><p style="margin-left:0; margin-right:0">主仓库：<a href="https://gitee.com/smartboot/smart-mqtt">https://gitee.com/smartboot/smart-mqtt</a></p></li><li><p style="margin-left:0; margin-right:0">镜像同步：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsmartboot%2Fsmart-mqtt" target="_blank">https://github.com/smartboot/smart-mqtt</a></p></li></ul><p style="margin-left:0; margin-right:0"><strong>产品手册</strong>：<a href="https://smartboot.gitee.io/smart-mqtt/enterprise.html">https://smartboot.gitee.io/smart-mqtt/enterprise.html</a></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 29 Jan 2024 05:25:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276835</guid>
            <link>https://www.oschina.net/news/276835</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[.NET 框架 Furion v4.9.1.27，组建团队|多套商业应用]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>在 2023 年这一整年里，全身心投入 Furion 研发工作，仅在几个特定日子短暂离线，几乎全年无休。每天都要处理来自三个微信平台的 3.5 万 Furion 用户（含重叠）的问题。尽管工作强度大，但乐在其中。为了服务好 Furion 的用户，经常工作至凌晨 3 点，然后又在早晨 7、8 点起床继续工作。</p><p>在商业运营方面，Furion 也取得了显著的成绩。除了通过商业化运营获得营收外，我们还获得了四家企业的资金支持：一家企业捐赠了 10 万人民币，另一家给予了 18 万人民币，第三家国外企业慷慨地提供了 140 万人民币，最后一家企业更是投资了 800 万人民币与我们一起成立企业。这为我们提供了充足的资金，使得我们能够组建 Furion 独立企业和运营团队，全职投入 Furion v5 版本的研发和全新的商业化产品——<strong>Furion 运维平台和 Furon ERP 平台</strong>的开发工作。</p><p>有了独立团队，我们坚信能为用户提供更好的产品和服务，我们将继续努力，不断优化和完善 Furion 产品，以满足用户的需求和期望。</p><p><img height="1315" src="https://oscimg.oschina.net/oscnet/up-0fc26ab3650d1bd387c3a1503020f84ac37.png" width="1695" referrerpolicy="no-referrer"></p><h2>基于 Furion 新【应用产品】</h2><p><img src="https://foruda.gitee.com/images/1702051807491982108/c878412b_974299.png" referrerpolicy="no-referrer"></p><p><img height="969" src="https://oscimg.oschina.net/oscnet/up-138b284cc799264335cd162bd5b19a3bf94.png" width="1080" referrerpolicy="no-referrer"></p><p><img height="1080" src="https://oscimg.oschina.net/oscnet/up-32bf9f7fe9a78e47b37f182b0579cd91103.jpg" width="1303" referrerpolicy="no-referrer"></p><p><img height="1080" src="https://oscimg.oschina.net/oscnet/up-c4aff7a5a287df1b8a6032200fdaa702012.jpg" width="1679" referrerpolicy="no-referrer"></p><p><img src="https://foruda.gitee.com/images/1702051839269205309/8092dfcb_974299.png" referrerpolicy="no-referrer"></p><p><img height="1148" src="https://oscimg.oschina.net/oscnet/up-e5086f1e88986832d8a09e173382fd22759.png" width="1280" referrerpolicy="no-referrer"></p><p><img height="1080" src="https://oscimg.oschina.net/oscnet/up-faa837fb48e4b82aed163253e612d44243d.jpg" width="1620" referrerpolicy="no-referrer"></p><p><img height="1080" src="https://oscimg.oschina.net/oscnet/up-c36f80b6da89dd357e11876a7576cfdb262.jpg" width="1620" referrerpolicy="no-referrer"></p><p><img height="1080" src="https://oscimg.oschina.net/oscnet/up-c57ab061d54fcb52ce2c8c4428d24e9622e.jpg" width="1620" referrerpolicy="no-referrer"></p><p><img height="1080" src="https://oscimg.oschina.net/oscnet/up-af06e2d0e4bcf031d3fcbf087b56798455f.jpg" width="1620" referrerpolicy="no-referrer"></p><p><img height="1080" src="https://oscimg.oschina.net/oscnet/up-d50ee6878a6bb36f8e1dd712430555d68b1.jpg" width="1620" referrerpolicy="no-referrer"></p><p><img height="867" src="https://oscimg.oschina.net/oscnet/up-25d5b79b4e4bddc657b44ada3dc1ebc5ee7.png" width="1540" referrerpolicy="no-referrer"></p><p><img height="1042" src="https://oscimg.oschina.net/oscnet/up-82e7e8baa0afe4cb5016b923b2309cb2aad.jpg" width="1398" referrerpolicy="no-referrer"></p><p><img height="1080" src="https://oscimg.oschina.net/oscnet/up-62bef282dc23be0cdbe8fa45be715763838.jpg" width="1188" referrerpolicy="no-referrer"></p><p><img height="1513" src="https://oscimg.oschina.net/oscnet/up-45cf4bc15dd988f02b7c467a6441efa809c.png" width="685" referrerpolicy="no-referrer"></p><p><img height="7444" src="https://oscimg.oschina.net/oscnet/up-5947309d7b1bcd6751dee434527e12571e8.jpg" width="1080" referrerpolicy="no-referrer"></p><p>&nbsp;</p><p><img height="1321" src="https://oscimg.oschina.net/oscnet/up-a2ed7a6b24ec70ded231e12d741380b124a.png" width="1718" referrerpolicy="no-referrer"></p><h2>项目信息</h2><ul><li>Gitee：<strong><a href="https://gitee.com/dotnetchina/Furion">https://gitee.com/dotnetchina/Furion</a></strong></li><li>Github：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FMonkSoul%2FFurion" target="_blank">https://github.com/MonkSoul/Furion</a></li><li>文档：<strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ffurion.net" target="_blank">https://furion.net</a></strong></li></ul><h2>本期更新</h2><ul><li><p><strong>新特性</strong></p><ul><li>[新增] 远程请求支持自动处理状态码<span>&nbsp;</span><code>301、302</code><span>&nbsp;</span>和响应头带<span>&nbsp;</span><code>Location</code><span>&nbsp;</span>4.9.1.27<span>&nbsp;</span>⏱️2024.01.29<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/65aa221ee6b99904b5349dfdad34b701296c0f5c">65aa221</a></li><li>[新增]<span>&nbsp;</span><strong>事件总线支持配置处理程序只消费一次</strong><span>&nbsp;</span>4.9.1.24<span>&nbsp;</span>⏱️2024.01.19<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/dc882ebc8f8e37977b4a55963711b0fa86f2c741">dc882eb</a></li><li>[新增] 任务队列支持配置重试次数、重试间隔<span>&nbsp;</span>4.9.1.24<span>&nbsp;</span>⏱️2023.01.19<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/1c274347517671e7611a8c578a05ce273248700d">1c27434</a></li><li>[新增] 监听日志<span>&nbsp;</span><code>Monitor</code><span>&nbsp;</span>可配置序列化是否处理<span>&nbsp;</span><code>long</code><span>&nbsp;</span>转<span>&nbsp;</span><code>string</code><span>&nbsp;</span>4.9.1.23<span>&nbsp;</span>⏱️2023.01.16<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/issues/I8WDH9">#I8WDH9</a></li><li>[新增]<span>&nbsp;</span><code>HTTP</code><span>&nbsp;</span>响应报文头输出<span>&nbsp;</span><code>Furion</code><span>&nbsp;</span>版本<span>&nbsp;</span>4.9.1.23<span>&nbsp;</span>⏱️2024.01.16<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/a4a49d68d0ad6f0473ba45090cc7881900d8ad2b">a4a49d6</a></li><li>[新增] 任务队列支持配置<span>&nbsp;</span><code>Concurrent</code><span>&nbsp;</span>串行执行<span>&nbsp;</span>4.9.1.22<span>&nbsp;</span>⏱️2024.01.14<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/issues/I8VXFV">#I8VXFV</a></li><li>[新增]<span>&nbsp;</span><code>Serve.RunAsync</code><span>&nbsp;</span>异步启动主机方法支持<span>&nbsp;</span>4.9.1.21<span>&nbsp;</span>⏱️2024.01.12<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/issues/I8V0J8">#I8V0J8</a></li><li>[新增]<span>&nbsp;</span><code>Oops.Text(errorCode)</code><span>&nbsp;</span>静态方法，可根据错误码获取错误消息<span>&nbsp;</span>4.9.1.18<span>&nbsp;</span>⏱️2024.01.08<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/f25125c06d902709025be2420665cecb6e7fb520">f25125c</a></li><li>[新增] 定时任务<span>&nbsp;</span><code>IJobPersistence</code><span>&nbsp;</span>持久化接口<span>&nbsp;</span><code>OnExecutionRecord</code><span>&nbsp;</span>方法实现作业运行记录持久化<span>&nbsp;</span>4.9.1.16<span>&nbsp;</span>⏱️2024.01.01<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/4d4d492fc91fe312ca30770ec30a6f692fccbf0e">4d4d492</a></li><li>[新增] 定时任务作业调度计划<span>&nbsp;</span><code>OnExecutionRecord</code><span>&nbsp;</span>事件，可监听作业运行记录<span>&nbsp;</span>4.9.1.16<span>&nbsp;</span>⏱️2024.01.01<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/4d4d492fc91fe312ca30770ec30a6f692fccbf0e">4d4d492</a></li><li>[新增]<span>&nbsp;</span><code>EFCore</code><span>&nbsp;</span>数据库操作<span>&nbsp;</span><code>EntityNotTenant</code><span>&nbsp;</span>和<span>&nbsp;</span><code>EntityBaseNotTenant</code><span>&nbsp;</span>实体基类<span>&nbsp;</span>4.9.1.11<span>&nbsp;</span>⏱️2023.12.04<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/b62bfb1a18d57f7fe3dd9548aa02372025dfed85">b62bfb1</a></li><li>[新增] 控制枱日志支持启动时同步<span>&nbsp;</span><code>ConsoleFormatterExtendOptions</code><span>&nbsp;</span>配置<span>&nbsp;</span>4.9.1.10<span>&nbsp;</span>⏱️2023.12.04<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/a96fe08336dbf99b7cf5cc5e6ec304adf7413a4b">a96fe08</a></li><li>[新增] 定时任务支持取消正在运行的作业程序<span>&nbsp;</span>4.9.1.9<span>&nbsp;</span>⏱️2023.12.03<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/3cc9be0da1eabc0f3baaa7801b115bb2909bb085">3cc9be0</a></li><li>[新增]<span>&nbsp;</span><code>JSON.IsValid(jsonString)</code><span>&nbsp;</span>判断<span>&nbsp;</span><code>JSON</code><span>&nbsp;</span>字符串有效性<span>&nbsp;</span>4.9.1.8<span>&nbsp;</span>⏱️2023.11.30<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/22bc69bd4a445f81833c082da7c99f4a5c518012">22bc69b</a></li><li>[新增]<span>&nbsp;</span><code>axios-utils.ts</code><span>&nbsp;</span>解析<span>&nbsp;</span><code>token</code><span>&nbsp;</span>信息导出方法<span>&nbsp;</span>4.9.1.7<span>&nbsp;</span>⏱️2023.11.29<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/ae8c3e8c47494fa3ba37d2b076d54f9f2c016252">ae8c3e8</a></li><li>[新增] 规范化处理自动过滤<span>&nbsp;</span><code>SSE</code><span>&nbsp;</span>请求、文件请求、图片请求<span>&nbsp;</span>4.9.1.6<span>&nbsp;</span>⏱️2023.11.22<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/issues/I8IP6D">#I8IP6D</a></li><li>[新增]<span>&nbsp;</span><code>[AppDbContext]</code><span>&nbsp;</span>特性支持<span>&nbsp;</span><code>UseSnakeCaseNaming</code><span>&nbsp;</span>属性配置表名使用蛇形命名<span>&nbsp;</span>4.9.1.5<span>&nbsp;</span>⏱️2023.11.20<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/issues/I8HGR2">#I8HGR2</a><span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/pulls/863">!863</a></li><li>[新增] 时间戳模型绑定器将时间戳转换为<span>&nbsp;</span><code>DateTime/DateTimeOffset</code><span>&nbsp;</span>类型<span>&nbsp;</span>4.9.1.5<span>&nbsp;</span>⏱️2023.11.20<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/df3053cf081d5e4d8eb63d567ed95c45267e0969">df3053c</a></li><li>[新增]<span>&nbsp;</span><code>Newtonsoft.Json</code><span>&nbsp;</span>自动将时间戳转换为<span>&nbsp;</span><code>DateTime/DateTimeOffset</code><span>&nbsp;</span>类型<span>&nbsp;</span>4.9.1.3<span>&nbsp;</span>⏱️2023.11.17<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/78a589d99eb5985b576e4c96acd6e4890391d6ff">78a589d</a></li><li>[新增]<span>&nbsp;</span><code>System.Text.Json</code><span>&nbsp;</span>自动将时间戳转换为<span>&nbsp;</span><code>DateTime/DateTimeOffset</code><span>&nbsp;</span>类型<span>&nbsp;</span>4.9.1.2<span>&nbsp;</span>⏱️2023.11.17<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/abd5196f5c5160a5df96dad80c7c5aa51b96d5b9">abd5196</a></li><li>[新增]<span>&nbsp;</span><code>IRepositoryFactory&lt;TEntity, TDbContextLocator&gt;</code><span>&nbsp;</span>仓储功能，解决在<span>&nbsp;</span><code>Blazor</code><span>&nbsp;</span>中使用<span>&nbsp;</span><code>EFCore</code><span>&nbsp;</span>问题<span>&nbsp;</span>4.9.1.1<span>&nbsp;</span>⏱️2023.11.16<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/4285ec0b8debc2d71c7f978126cb3dc394a8ad30">4285ec0</a><span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flearn.microsoft.com%2Fzh-cn%2Faspnet%2Fcore%2Fblazor%2Fblazor-ef-core%3Fview%3Daspnetcore-7.0" target="_blank">文档说明</a></li><li>[新增] 补偿策略模块功能<span>&nbsp;</span>4.9.1<span>&nbsp;</span>⏱️2023.11.15<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/tree/v4/framework/Furion/RescuePolicy">【源码地址】</a><span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/dfc63e7f0ffd2e03653f11a3e49a21646902ddc4">dfc63e7</a></li></ul></li><li><p><strong>突破性变化</strong></p><ul><li>[新增]<span>&nbsp;</span><strong>事件总线支持配置处理程序只消费一次</strong><span>&nbsp;</span>4.9.1.24<span>&nbsp;</span>⏱️2024.01.19<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/dc882ebc8f8e37977b4a55963711b0fa86f2c741">dc882eb</a></li><li>[调整] 监听日志默认不进行序列化<span>&nbsp;</span><code>long</code><span>&nbsp;</span>转<span>&nbsp;</span><code>string</code><span>&nbsp;</span>处理<span>&nbsp;</span>4.9.1.23<span>&nbsp;</span>⏱️2024.01.16<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/issues/I8WDH9">#I8WDH9</a></li><li>[新增] 定时任务<span>&nbsp;</span><code>IJobPersistence</code><span>&nbsp;</span>持久化接口<span>&nbsp;</span><code>OnExecutionRecord</code><span>&nbsp;</span>方法实现作业运行记录持久化<span>&nbsp;</span>4.9.1.16<span>&nbsp;</span>⏱️2024.01.01<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/4d4d492fc91fe312ca30770ec30a6f692fccbf0e">4d4d492</a></li><li>[调整]<span>&nbsp;</span><strong>动态<span>&nbsp;</span><code>WebAPI</code><span>&nbsp;</span>生成版本控制路由规则，版本分隔符默认由<span>&nbsp;</span><code>@</code><span>&nbsp;</span>调整为<span>&nbsp;</span><code>v</code></strong><span>&nbsp;</span>4.9.1.14<span>&nbsp;</span>⏱️2023.12.14<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/7677d0fa615d3ccdf784542b5702cd1d6165e78f">7677d0f</a></li><li>[升级]<span>&nbsp;</span><code>Serilog</code><span>&nbsp;</span>拓展包依赖至<span>&nbsp;</span><code>8.0.0</code><span>&nbsp;</span>版本，<strong>移除<span>&nbsp;</span><code>.NET8.0</code><span>&nbsp;</span>的<span>&nbsp;</span><code>IWebHostBuilder.UseSerilogDefault</code><span>&nbsp;</span>拓展方法</strong><span>&nbsp;</span>4.9.1.1<span>&nbsp;</span>⏱️2023.11.16<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/5ab3e43722a298db56a86792dde301adf1f3fe7f">5ab3e43</a></li><li>[升级]<span>&nbsp;</span><strong>框架底层适配<span>&nbsp;</span><code>.NET8.0</code><span>&nbsp;</span>正式版</strong><span>&nbsp;</span>4.9.1<span>&nbsp;</span>⏱️2023.11.15</li><li>[升级]<span>&nbsp;</span><strong>框架脚手架适配<span>&nbsp;</span><code>.NET8.0</code><span>&nbsp;</span>正式版</strong><span>&nbsp;</span>4.9.1<span>&nbsp;</span>⏱️2023.11.15</li></ul></li><li><p><strong>问题修复</strong></p><ul><li>[修复] 动态<span>&nbsp;</span><code>WebAPI</code><span>&nbsp;</span>设置<span>&nbsp;</span><code>VersionInFront: false</code><span>&nbsp;</span>异常问题<span>&nbsp;</span>4.9.1.26<span>&nbsp;</span>⏱️2024.01.12<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/issues/I8ZGGH">#I8ZGGH</a><span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/issues/I8ZDXD">#I8ZDXD</a><span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/issues/I8ZFNG">#I8ZFNG</a></li><li>[修复] 启用<span>&nbsp;</span><code>WithStackFrame</code><span>&nbsp;</span>配置后可能出现空异常问题<span>&nbsp;</span>4.9.1.21<span>&nbsp;</span>⏱️2024.01.12<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/c8be745dd119c73c9230dbfdf6150ddbfcd16e81">c8be745</a></li><li>[修复] 动态<span>&nbsp;</span><code>WebAPI</code><span>&nbsp;</span>配置<span>&nbsp;</span><code>ForceWithRoutePrefix</code><span>&nbsp;</span>不包含<span>&nbsp;</span><code>Module</code><span>&nbsp;</span>问题<span>&nbsp;</span>4.9.1.19<span>&nbsp;</span>⏱️2024.01.09<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/87849d1ef1dc098e702db66f47490bd7e75495d5">87849d1</a></li><li>[修复] 规范化文档加载文档注释时如果存在类完全限定名一致出现重复键异常问题<span>&nbsp;</span>4.9.1.17<span>&nbsp;</span>⏱️2024.01.04<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/issues/I8TJZ0">#I8TJZ0</a></li><li>[修复] 动态<span>&nbsp;</span><code>WebAPI</code><span>&nbsp;</span>因<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/d9810bece0a1d1108e134cfdae2fdd868554f769">1dc7ea7</a><span>&nbsp;</span>提交导致<span>&nbsp;</span><code>AsLowerCamelCase</code><span>&nbsp;</span>配置失效问题<span>&nbsp;</span>4.9.1.15<span>&nbsp;</span>⏱️2023.12.20<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/d9810bece0a1d1108e134cfdae2fdd868554f769">d9810be</a></li><li>[修复] 粘土对象转换成<span>&nbsp;</span><code>Dictionary</code><span>&nbsp;</span>对象不支持递归问题<span>&nbsp;</span>4.9.1.13<span>&nbsp;</span>⏱️2023.12.11<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/issues/I8NFT4">#I8NFT4</a></li><li>[修复]<span>&nbsp;</span><code>Scoped.CreateAsync</code><span>&nbsp;</span>内部异常上层应用不能捕获问题<span>&nbsp;</span>4.9.1.12<span>&nbsp;</span>⏱️2023.12.08<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/0a89a434223c45d84b8908f6aff1bf1d7528193a">0a89a43</a></li><li>[修复]<span>&nbsp;</span><code>Scoped.CreateUowAsync</code><span>&nbsp;</span>内部异常上层应用不能捕获问题<span>&nbsp;</span>4.9.1.8<span>&nbsp;</span>⏱️2023.11.30<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/3c859e83c0ed6f07fcf191973fe465599a823224">3c859e8</a></li><li>[修复] 定时任务设置触发器<span>&nbsp;</span><code>Result</code><span>&nbsp;</span>后作业执行异常不能重置问题<span>&nbsp;</span>4.9.1.7<span>&nbsp;</span>⏱️2023.11.24<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/147215f1631f58fca900f17cca5695f9431555e5">147215f</a></li><li>[修复]<span>&nbsp;</span><code>JWTEncryption.GetJWTSettings()</code><span>&nbsp;</span>独立使用时无法获取自定义配置<span>&nbsp;</span>4.9.1.4<span>&nbsp;</span>⏱️2023.11.18<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/c045e084670a98f71d5ea5ed55ca5cbbfc981e0b">c045e08</a></li></ul></li><li><p><strong>其他更改</strong></p><ul><li>[调整] 定时任务<span>&nbsp;</span><code>GC</code><span>&nbsp;</span>垃圾回收器回收时机，降低长时间内存占用<span>&nbsp;</span>4.9.1.23<span>&nbsp;</span>⏱️2024.01.16<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/f43fc25dc59c5e539844048d2da4bce4153e3063">f43fc25</a></li><li>[调整] 模板引擎编译性能，提升模板缓存解析速度<span>&nbsp;</span>4.9.1.16<span>&nbsp;</span>⏱️2023.12.27<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/d7ea423f272de141a351d7f7f4fb29ae0d9b1df6">d7ea423</a></li></ul></li><li><p><strong>文档</strong></p><ul><li>[更新] 仓储文档、<code>Db</code><span>&nbsp;</span>静态类文档、脚手架文档、<code>.NET7</code><span>&nbsp;</span>升级<span>&nbsp;</span><code>.NET8</code><span>&nbsp;</span>文档、<code>JSON</code><span>&nbsp;</span>序列化文档、<code>Docker</code><span>&nbsp;</span>部署文档、数据库上下文文档、虚拟文件文档、远程请求文档、<code>HttpContext</code><span>&nbsp;</span>文档、<code>JSON</code><span>&nbsp;</span>静态类文档、定时任务文档、数据库仓储拓展文档、数据库实体文档、规范化文档、任务队列文档、虚拟文件系统文档</li></ul></li><li><p><strong>贡献者</strong></p><ul><li>zuohuaijun (<a href="https://gitee.com/zuohuaijun">@zuohuaijun</a>)<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/pulls/865">!865</a></li><li>anliuty (<a href="https://gitee.com/www.fengyunmy.com">@anliuty</a>)<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/pulls/863">!863</a></li><li>风云明月 (<a href="https://gitee.com/www.fengyunmy.com">@www.fengyunmy.com</a>)<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/pulls/862">!862</a></li></ul></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Mon, 29 Jan 2024 04:42:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276833</guid>
            <link>https://www.oschina.net/news/276833</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[功能强大的开源数据中台系统 DataCap 2024.01.1 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="text-align:center"><img alt="" src="https://images.edurt.io/devlive.org/2023-12-1/8AA600FB-3F02-4229-8353-EA4400BCE1D7.jpg" referrerpolicy="no-referrer"></p><blockquote><p>推荐一套基于 SpringBoot 开发的简单、易用的开源权限管理平台，建议下载使用: <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdevlive-community%2Fauthx" target="_blank">https://github.com/devlive-community/authx</a></p></blockquote><blockquote><p>推荐一套为 Java 开发人员提供方便易用的 SDK 来与目前提供服务的的 Open AI 进行交互组件：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdevlive-community%2Fopenai-java-sdk" target="_blank">https://github.com/devlive-community/openai-java-sdk</a></p></blockquote><blockquote><p>推荐一套全平台数据库管理工具，建议下载使用: <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdevlive-community%2Fdbm" target="_blank">https://github.com/devlive-community/dbm</a></p></blockquote><blockquote><p>我们即将推出一套开源新系统。InfoSphere 是一款面向企业和个人的开源 Wiki 系统，旨在提供简单而强大的知识管理解决方案。建议尝试使用: <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdevlive-community%2Fincubator-infosphere" target="_blank">https://github.com/devlive-community/incubator-infosphere</a></p></blockquote><p><strong>DataCap 发布!</strong></p><table><tbody><tr><th>发布版本</th><th>发布时间</th></tr></tbody><tbody><tr><td><code>2024.01.1</code></td><td><code>2024-01-30</code></td></tr></tbody></table><h4>General</h4><hr><ul><li>[仪表盘] 支持移除报表</li><li>[仪表盘] 支持预览</li><li>[仪表盘] 支持修改</li><li>[元数据] 支持 PostgreSQL 数据库</li><li>[元数据] 支持同步错误消息</li><li>[元数据] 支持构建后元数据同步 (https://github.com/devlive-community/datacap/issues/585)</li><li>[元数据] 支持数据源手动同步元数据 (https://github.com/devlive-community/datacap/issues/586)</li><li>[元数据] 支持数据源同步历史记录</li><li>添加查询模式</li><li>修复了函数创建/更新时间问题</li><li>优化问题模板</li><li>支持 GitHub CI 本地化</li><li>添加系统架构图 (https://github.com/devlive-community/datacap/issues/491)</li><li>支持缓冲查询结果 (https://github.com/devlive-community/datacap/issues/490)</li></ul><h4>SPI</h4><hr><ul><li>修复数据源并发异常问题 (https://github.com/devlive-community/datacap/issues/513)</li></ul><h4>Parser</h4><hr><ul><li>添加 SQL 解析器 SPI</li><li>添加 Trino SQL 解析器 (https://github.com/devlive-community/datacap/issues/569)</li><li>添加 MySQL SQL 解析器 (https://github.com/devlive-community/datacap/issues/568)</li></ul><h4>Scheduler</h4><hr><ul><li>添加调度 SPI</li><li>支持默认调度器</li></ul><h4>Pipeleine</h4><hr><ul><li>修复流水线分组问题</li><li>支持 SqlServer</li><li>重构 Seatunnel 执行器</li><li>重构 SPI 使用 Kotlin 重写</li><li>重构流水线配置方法</li></ul><h4>Plugin</h4><hr><ul><li>支持 MatrixOne (https://github.com/devlive-community/datacap/issues/574)</li><li>支持 ScyllaDB (https://github.com/devlive-community/datacap/issues/543)</li></ul><h4>DataSet</h4><hr><ul><li>添加列模型（指标｜维度）</li><li>添加即席查询可视化编辑器</li><li>添加折线图</li><li>添加数据表格</li><li>添加柱状图</li><li>支持展示查询 SQL</li><li>支持指标自定义表达式</li><li>支持维度分组</li><li>添加指标表达式提示</li><li>按类型指定表达式</li><li>支持指标别名</li><li>支持发布|编辑数据集报表</li><li>支持分区键</li><li>支持列别名</li><li>支持同步历史记录</li><li>支持即席查询 (https://github.com/devlive-community/datacap/issues/581)</li><li>支持定时数据同步 (https://github.com/devlive-community/datacap/issues/590)</li></ul><h4>Docs</h4><hr><ul><li>新增文件系统集成开发文档</li><li>添加合作伙伴演示文档 (https://github.com/devlive-community/datacap/issues/582)</li></ul><h4>Dependencies</h4><hr><ul><li>更新 org.apache.maven.plugins:maven-compiler-plugin <code>3.3</code> 到 <code>3.12.1</code></li><li>更新 com.dameng:DmJdbcDriver18 <code>8.1.2.192</code> 到 <code>8.1.3.62</code></li><li>更新 mysql 到 <code>8.0.30</code></li><li>更新 snowflake 到 <code>3.14.4</code></li><li>更新 com.taosdata.jdbc:taos-jdbcdriver <code>3.0.0</code> 到 <code>3.2.7</code></li><li>更新 org.apache.kylin:kylin-jdbc <code>2.6.3</code> 到 <code>4.0.3</code></li><li>更新 slf4j.version <code>1.7.36</code> 到 <code>2.0.10</code></li><li>更新 org.apache.maven.plugins:maven-assembly-plugin <code>3.5.0</code> 到 <code>3.6.0</code></li><li>更新 org.duckdb:duckdb_jdbc <code>0.8.1</code> 到 <code>0.9.2</code></li><li>更新 org.apache.ignite:ignite-core <code>2.8.1</code> 到 <code>2.16.0</code></li><li>更新 org.projectlombok:lombok <code>1.18.28</code> 到 <code>1.18.30</code></li></ul><h4>下载地址</h4><hr><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdatacap.edurt.io%2Fdownload.html" target="_blank">https://datacap.edurt.io/download.html</a></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 29 Jan 2024 03:37:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276829</guid>
            <link>https://www.oschina.net/news/276829</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[PicList 2.7.3 发布，图床管理和上传工具 bug 修复]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>PicList 是一款高效的云存储和图床平台管理工具，在 PicGo 的基础上经过深度的二次开发，不仅完整保留了 PicGo 的所有功能，还增添了许多新的 feature。例如相册支持同步云端删除文件，内置图床额外添加了 WebDav、本地图床和 SFTP 等。PicList 同时增加了完整的云存储管理功能，包括云端目录查看、文件搜索、批量上传下载和删除文件，复制多种格式文件链接和图片/markdown/文本/视频预览等，另外还有更加强大的相册和多项功能新增或优化。</p><h2>开源地址和软件官网</h2><ul><li><p>Github: <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FKuingsmile%2FPicList" target="_blank">https://github.com/Kuingsmile/PicList</a></p></li><li><p>Gitee: <a href="https://gitee.com/kuingsmile/PicList">https://gitee.com/kuingsmile/PicList</a></p></li><li><p>软件官网：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpiclist.cn" target="_blank">https://piclist.cn</a></p></li></ul><h2>下载地址</h2><h3>MacOS</h3><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frelease.piclist.cn%2Flatest%2FPicList-2.7.3-arm64.dmg" target="_blank">PicList-2.7.3-arm64.dmg</a><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frelease.piclist.cn%2Flatest%2FPicList-2.7.3-x64.dmg" target="_blank">PicList-2.7.3-x64.dmg</a><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frelease.piclist.cn%2Flatest%2FPicList-2.7.3-universal.dmg" target="_blank">PicList-2.7.3-universal.dmg</a></p><h3>Windows</h3><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frelease.piclist.cn%2Flatest%2FPicList-Setup-2.7.3-ia32.exe" target="_blank">PicList-Setup-2.7.3-ia32.exe</a><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frelease.piclist.cn%2Flatest%2FPicList-Setup-2.7.3-x64.exe" target="_blank">PicList-Setup-2.7.3-x64.exe</a><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frelease.piclist.cn%2Flatest%2FPicList-Setup-2.7.3.exe" target="_blank">PicList-Setup-2.7.3.exe</a></p><h3>Linux</h3><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frelease.piclist.cn%2Flatest%2FPicList-2.7.3.AppImage" target="_blank">PicList-2.7.3.AppImage</a><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frelease.piclist.cn%2Flatest%2Fpiclist_2.7.3_amd64.snap" target="_blank">piclist_2.7.3_amd64.snap</a></p><h2>本次更新内容</h2><h3>✨ Features</h3><ul><li>现在配置页点击图床名会跳转至手册说明页</li></ul><h3>🐛 Bug Fixes</h3><ul><li>修复了设置精细转换格式时，配置没有起作用的问题</li><li>修复了界面翻译错误</li></ul><h2>特色功能</h2><ul><li>保留了 PicGo 的所有功能，兼容绝大部分已有的 PicGo 插件，包括和 Typora、Obsidian 等软件的搭配</li><li>新增了多个内置图床，如 WebDav、本地图床和 SFTP 等，原内置 imgur 图床额外支持登录账号上传</li><li>相册中可同步删除云端图片，支持所有内置图床和多个插件</li><li>相册新增了高级搜索和排序，批量修改 URL 等功能</li><li>内置水印添加、图片压缩、图片缩放、图片旋转和图片格式转换等功能，同时支持高级重命名</li><li>支持配置同步至 Github 或 Gitee 仓库</li><li>支持管理十余种图床，可以在线进行云端目录查看、文件搜索、批量上传、批量下载、删除文件等</li><li>支持预览多种格式的文件，包括图片、视频、纯文本文件和 markdown 文件等，具体支持的格式请参考<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FKuingsmile%2FPicList%2Fblob%2Fdev%2Fsupported_format.md" target="_blank">支持的文件格式列表</a></li><li>支持启用正则表达式的批量云端文件重命名</li><li>对于私有存储桶等支持复制预签名链接进行分享</li><li>支持软件自动更新，支持多种启动模式，还有更多功能细节新增和优化</li><li>优化了 PicGo 的界面，解锁了窗口大小限制，同时美化了部分界面布局</li><li>mac 平台安装包已签名，从源头解决了 PicGo 上的安装包已损坏的日经问题</li></ul><h2>软件截图</h2><p><img alt="image.png" src="https://note.msq.pub/202308230137997.webp" referrerpolicy="no-referrer"><img alt="image.png" src="https://note.msq.pub/202308230138231.webp" referrerpolicy="no-referrer"><img alt="image.png" src="https://note.msq.pub/202308230138929.webp" referrerpolicy="no-referrer"><img alt="image.png" src="https://note.msq.pub/202308230139152.webp" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 29 Jan 2024 03:07:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276883/piclist-2-7-3-released</guid>
            <link>https://www.oschina.net/news/276883/piclist-2-7-3-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Apache Doris 2.0.4 版本正式发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div><div>
  亲爱的社区小伙伴们，Apache Doris 2.0.4 版本已于 2024 年 1 月 26 日正式发布，该版本在新优化器、倒排索引、数据湖等功能上有了进一步的完善与更新，使 Apache Doris 能够适配更广泛的场景。此外，该版本进行了若干的改进与优化，以提供更加稳定高效的性能体验。新版本已经上线，欢迎大家下载使用！
 </div><div>
  &nbsp;
 </div><div><strong>官网下载</strong>：
  <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoris.apache.org%2Fdownload%2F" target="_blank">https://doris.apache.org/download/</a></div><div><strong>GitHub 下载</strong>：
  <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Freleases" target="_blank">https://github.com/apache/doris/releases</a></div><div>
  &nbsp;
 </div><h2>行为变更</h2><ul><li><div>
    提供了更精确的 Precision 和 Scale 推导，可满足金融场景计算的高要求
   </div></li><li><div>
    Drop Policy 支持了 User 和 Role
   </div></li></ul><h2>新功能</h2><ul><li><div>
    新优化器支持了 datev1， datetimev1 及 decimalv2 数据类型
   </div></li><li><div>
    新优化器支持了 ODBC 外表
   </div></li><li><div>
    倒排索引支持了
    <code> lower_case</code> 和 
    <code>ignore_above</code> 选项
   </div></li><li><div>
    倒排索引支持了 
    <code>match_regexp</code> 和 
    <code>match_phrase_prefix</code> 查询加速
   </div></li><li><div>
    数据湖支持了 Paimon Native Reader
   </div></li><li><div>
    数据湖支持读取 LZO 压缩的 Parquet 文件
   </div></li><li><div>
    审计日志支持 
    <code>insert into</code></div></li></ul><h2>改进和优化</h2><ul><li><div>
    对数据均衡、迁移等存储管控进行了改进
   </div></li><li><div>
    对数据冷却策略进行了改进，以节省本地硬盘存储空间
   </div></li><li><div>
    对 ASCII 字符串 substr 进行了优化
   </div></li><li><div>
    针对使用 date 函数查询时的分区裁剪进行了优化
   </div></li><li><div>
    针对优化器自动统计信息收集的可观测性和性能进行了优化
   </div></li></ul></div></div>
                                    ]]>
            </description>
            <pubDate>Mon, 29 Jan 2024 02:57:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276822</guid>
            <link>https://www.oschina.net/news/276822</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[🔥🔥🔥 EasyRetry 2.6.0 发布，全新国产 DAG 工作流强势来袭🎉🎉]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h3><strong>🔥🔥🔥 灵活，可靠和快速的分布式任务重试和分布式任务调度平台</strong></h3><pre><span style="color:#cf8e6d"><span style="color:#6a737d">&gt;</span><span></span></span><span><span>✅️ </span></span><span><span>可重放，可管控、为提高分布式业务系统一致性的分布式任务重试平台 </span></span><span style="color:#6a737d"></span><span style="color:#cf8e6d"><span style="color:#6a737d">&gt;</span><span></span></span><span><span>✅️ </span></span><span><span>支持秒级、可中断、可编排的高性能分布式任务调度平台</span></span></pre><div><h4><span style="color:#e74c3c"><strong>本期是 Spring Boot 2.x 的最后一个版本，下一期将升级 Spring boot3.x 并作为长期支持版本</strong></span></h4></div><ul><li><strong>易用性</strong><span><span>&nbsp;</span></span>业务接入成本小。避免依赖研发人员的技术水平，保障稳定性</li><li><strong>灵活性</strong><span><span>&nbsp;</span></span>能够动态调整配置，启动 / 停止任务，以及终止运行中的任务</li><li><strong>操作简单</strong><span><span>&nbsp;</span></span>分钟上手，支持 WEB 页面对任务数据 CRUD 操作。</li><li><strong>数据大盘</strong><span><span>&nbsp;</span></span>实时管控系统任务数据</li><li><strong>分布式重试任务</strong><span><span>&nbsp;</span></span>支持多样化退避策略、多样化重试类型、流量管控等</li><li><strong>分布式调度任务</strong><span><span>&nbsp;</span></span>提供丰富的任务触发策略、任务编排、任务分片、停止恢复、失败重试等</li><li><strong>任务数据管理</strong><span><span>&nbsp;</span></span>可以做到数据不丢失、数据一键回放</li><li><strong>容器化部署</strong><span><span>&nbsp;</span></span>服务端支持 docker 容器部署</li><li><strong>高性能调度平台</strong><span><span>&nbsp;</span></span>支持服务端节点动态扩容和缩容</li><li><strong>支持多样化的告警方式</strong><span><span>&nbsp;</span></span>邮箱、企业微信、钉钉、飞书</li></ul><h2>设计思想</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img src="https://www.easyretry.com/img/%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84%E5%9B%BE-v2.4.0.png" referrerpolicy="no-referrer"><span>&nbsp;</span><img height="1353" src="https://oscimg.oschina.net/oscnet/up-0a0e46da4b4a4b74f5d89f2d9da4661a349.png" width="1852" referrerpolicy="no-referrer"><span>&nbsp;</span><img src="https://www.easyretry.com/img/%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%8A%9F%E8%83%BD%E6%A8%A1%E5%9D%97-2.0.png" referrerpolicy="no-referrer"></p><h2>开源组件对比</h2><table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:1px; border:none; box-sizing:border-box; color:#00323c; display:inline-table; font-family:-apple-system,BlinkMacSystemFont,&quot;Apple Color Emoji&quot;,&quot;Segoe UI Emoji&quot;,&quot;Segoe UI Symbol&quot;,&quot;Segoe UI&quot;,&quot;PingFang SC&quot;,&quot;Hiragino Sans GB&quot;,&quot;Microsoft YaHei&quot;,&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:14px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; line-height:inherit; margin:0px 0px 20px; max-width:100%; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:776px; word-break:keep-all; word-spacing:0px"><tbody><tr><th style="text-align:inherit"><strong>项目</strong></th><th style="text-align:inherit"><strong>Quartz</strong></th><th style="text-align:inherit"><strong>Elastic-Job</strong></th><th style="text-align:inherit"><strong>XXL-JOB</strong></th><th style="text-align:inherit"><strong>Easy Retry</strong></th></tr></tbody><tbody><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">定时调度</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">Cron</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">Cron</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">Cron</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">1. 定时任务 2. 秒级任务 (无需依赖外部中间件) 3. 固定频率</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">重试任务</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">不支持</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">不支持</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">不支持</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">1. 支持本地 &amp; 远程重试模式 2. 支持各种常用组件的重试，比如 dubbo/feign 3. 支持多种退避策略 4. 丰富的重试风暴管控手段 ......</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">任务编排</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">不支持</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">不支持</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">不支持</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">可视化任务编排</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">分布式计算</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">不支持</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">静态分片</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">广播</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">1. 广播执行 2. 集群执行 3. 静态分片</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">多语言</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">Java</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">1. Java 2. 脚本任务</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">1. Java 2. 脚本任务</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">1. Java 2. 脚本任务 3. HTTP 任务 4. Kettle</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">可视化</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">无</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">弱</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">1. 历史记录 2. 运行日志（不支持存储）3. 监控大盘</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">1. 历史记录 2. 运行日志 (支持持久化) 3. 监控大盘 4. 操作记录 5. 查看日志堆栈</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">可运维</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">无</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">启用、禁用任务</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">1. 启用、禁用任务 2. 手动运行任务 3. 停止任务</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">1. 启用、禁用任务 2. 手动运行任务 3. 停止任务</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">报警监控</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">无</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">邮件</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">邮件</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">1. 邮件 2. 钉钉 3. 企微 4. 飞书</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">性能</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">每次调度通过 DB 抢锁，对 DB 压力大</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">ZooKeeper 是性能瓶颈</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">采用 Master 节点调度，Master 节点压力大</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">系统采用多 bucket 模式，借助负载均衡算法，确保每个节点能够均衡处理任务，同时支持无限水平扩展，轻松应对海量任务调度</td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px">接入成本</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">只依赖 DB 接入成本低</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">需引入 Zookeeper 增加系统复杂性和维护成本</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">只依赖 DB 接入成本低</td><td style="border-color:#dddddd; border-style:solid; border-width:1px">只依赖 DB 接入成本低</td></tr></tbody></table><h2><strong>更新日志</strong></h2><ol><li>定时任务执行任务编排功能【<strong>新增</strong>】<a href="https://gitee.com/aizuda/easy-retry/issues/I8HGNQ" target="_blank">issues</a></li><li>工作流执行手动/自动运行、复制工作流、停止等功能【<strong>新增</strong>】</li><li>任务调度支持失败重试【<strong>新增</strong>】<a href="https://gitee.com/aizuda/easy-retry/issues/I8O5OX" target="_blank">issues</a></li><li>新增定时任务实时日志功能【<strong>新增</strong>】<a href="https://gitee.com/aizuda/easy-retry/issues/I8GUEJ" target="_blank">issues</a></li><li>dashboard Sql 优化 【<strong>优化</strong>】<a href="https://gitee.com/aizuda/easy-retry/issues/I8NTGT" target="_blank">issues</a></li><li>管理台组信息配置的分区下拉框无数据 【<strong>BUG</strong>】<a href="https://gitee.com/aizuda/easy-retry/issues/I8P4VX" target="_blank">issues</a></li></ol><p>&nbsp;</p><h2>项目地址</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">官网:&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.easyretry.com%2F" target="_blank">https://www.easyretry.com/</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">gitee:<a href="https://gitee.com/aizuda/easy-retry.git">https://gitee.com/aizuda/easy-retry.git</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">github：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Faizuda%2Feasy-retry.git" target="_blank">https://github.com/aizuda/easy-retry.git</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><u><strong>方便的话给项目一个 star，你的支持是我们前进的动力！</strong></u></p><p><img height="892" src="https://oscimg.oschina.net/oscnet/up-3a60153289977dbd60779cf10b9f71b4f01.png" width="1911" referrerpolicy="no-referrer"></p><p><img height="906" src="https://oscimg.oschina.net/oscnet/up-825456c64ad5e79eae06b6b61b421e79dda.png" width="1916" referrerpolicy="no-referrer"></p><p><img height="907" src="https://oscimg.oschina.net/oscnet/up-db255ba2623b42461a5f328341a2bc89eb8.png" width="1917" referrerpolicy="no-referrer"></p><p><img height="893" src="https://oscimg.oschina.net/oscnet/up-f10e56f97a6e5417f61bd2bc7a7d2a3a0ae.png" width="1909" referrerpolicy="no-referrer"></p><p><img height="888" src="https://oscimg.oschina.net/oscnet/up-def7290cfd656e5daa06991c7cdf06ac219.png" width="1678" referrerpolicy="no-referrer"></p><p><img height="851" src="https://oscimg.oschina.net/oscnet/up-9374238abd0e610a7c92f1f96bd6b03bc2a.png" width="1648" referrerpolicy="no-referrer"></p><p><img height="635" src="https://oscimg.oschina.net/oscnet/up-8782a31675acf0753f76906b8e8c5727a74.png" width="1622" referrerpolicy="no-referrer"></p><p><img height="899" src="https://oscimg.oschina.net/oscnet/up-37039ba0a34543ccb305b9f63ebbe3e7ddf.png" width="1908" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 29 Jan 2024 01:12:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276870</guid>
            <link>https://www.oschina.net/news/276870</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[墨干 V1.2.3: 两周年纪念版]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div><p style="margin-left:0; margin-right:0">墨干理工套件 V1.2.3 包含以下组件：</p><ul><li>墨干 V1.2.3 (Mogan Research v1.2.3)</li></ul><p>热烈庆祝<strong>墨干理工套件</strong>入选<strong>GVP（Gitee 最有价值开源项目）</strong>。</p><h2>重要变更<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Flocalhost%3A8000%2Fzh%2Fguide%2FChangeLog_v1.2.3.html%23%25E9%2587%258D%25E8%25A6%2581%25E5%258F%2598%25E6%259B%25B4" target="_blank">​</a></h2><ul><li>提升了性能</li><li>修复了大量错误</li><li>改进了界面交互体验</li></ul><h2>影响用户体验的详细变更<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Flocalhost%3A8000%2Fzh%2Fguide%2FChangeLog_v1.2.3.html%23%25E5%25BD%25B1%25E5%2593%258D%25E7%2594%25A8%25E6%2588%25B7%25E4%25BD%2593%25E9%25AA%258C%25E7%259A%2584%25E8%25AF%25A6%25E7%25BB%2586%25E5%258F%2598%25E6%259B%25B4" target="_blank">​</a></h2><ul><li>用户界面 
   <ul><li>在 Windows 和 Linux 平台，也可以使用<code>工具-&gt;键盘-&gt;显示键盘按键</code>了</li><li>修复 macOS 下外接非 hidpi 显示屏无法打开的问题</li><li>修复 macOS 平台无权限访问用户<code>$HOME/Document</code>目录问题</li></ul></li><li>编辑器 
   <ul><li>新增<code>std V</code>（<code>Ctrl+Shift+v</code>或者<code>Command+Shift+v</code>）用于粘贴纯文本</li><li>新增<code>编辑-&gt;无格式粘贴</code>菜单项</li><li>移除<code>编辑</code>-&gt;<code>复制/粘贴/剪切</code>的<code>Primary/Secondary/Ternary</code>菜单项</li><li>macOS：采用<code>Command+left</code>或者<code>Command+right</code>逐词移动</li><li>采用 Markdown 风格的快捷键插入 hlink（<code>[ ] var</code>）和 slink（<code>[ ] var var</code>）</li><li>修复在 macOS 平台无法使用<code>Command+minus</code>放大的问题</li><li>修复光标在行首时概率出现（尤其是老电脑）的输入法漏字问题</li><li>修复在拼音输入法下无法输入破折号的问题</li></ul></li><li>字体 
   <ul><li>改进对思源宋体（Noto CJK fonts）的支持</li><li>如果思源宋体可用，则默认的中日韩字体是思源宋体</li><li>支持 CESI（中国电子技术标准化研究院）的宋体、黑体、楷体、仿宋、小标宋</li></ul></li><li>插件 
   <ul><li>Maxima: 修复输入卡顿的问题</li><li>Maxima: 工具栏上的帮助按钮直接访问官网文档</li><li>拼写检查: 在 Windows 和 Linux 开启<code>编辑-&gt;拼写检查</code></li><li>拼写检查: 修复没有安装 hunspell 或者 aspell 时，在 Windows 平台做拼写检查会崩溃的问题</li><li>LaTeX: 修复复制多行公式到 LaTeX 代码片段出现乱码的问题</li></ul></li></ul><h2>开发者相关变更<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Flocalhost%3A8000%2Fzh%2Fguide%2FChangeLog_v1.2.3.html%23%25E5%25BC%2580%25E5%258F%2591%25E8%2580%2585%25E7%259B%25B8%25E5%2585%25B3%25E5%258F%2598%25E6%259B%25B4" target="_blank">​</a></h2><ul><li>使用<code>xmake-requires.lock</code>机制以改善构建的可复现性</li><li>在 macOS arm 平台的安装包已经由 Github Action 自动打包了</li></ul></div></div>
                                    ]]>
            </description>
            <pubDate>Sun, 28 Jan 2024 15:11:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276868/mogan-1-2-3-released</guid>
            <link>https://www.oschina.net/news/276868/mogan-1-2-3-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[fastjson 2.0.46 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#e6edf3; text-align:start"><span style="color:#333333">这又是一个 BUG FIX 版本，大家按需升级。这个版本在 android 4 ~ android 33 上性能有了非常大的提升。</span></p><h1>Issues</h1><ol><li>修复 JSONB 反序列化 skip 不存在 int 类型字段某些场景报错的问题<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Falibaba%2Ffastjson2%2Fissues%2F1257" target="_blank">#1257</a></li><li>修复 JSONB 反序列化自定义异常类的 List 类型变量赋值为 null 时报错的问题<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Falibaba%2Ffastjson2%2Fissues%2F2181" target="_blank">#2181</a></li><li>修复反序列化某些场景不兼容 fastjson 1.x "new Date(millis)"的格式<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Falibaba%2Ffastjson2%2Fpull%2F2087" target="_blank">#2087</a></li><li>修复 jdk module 功能启用后 package 重复的问题<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Falibaba%2Ffastjson2%2Fissues%2F2176" target="_blank">#2176</a></li><li>修复某些场景下序列化数组类型不正确的问题<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Falibaba%2Ffastjson2%2Fissues%2F2175" target="_blank">#2175</a></li><li>修复 toJSON 不能识别循环引用的问题<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Falibaba%2Ffastjson2%2Fissues%2F2187" target="_blank">#2187</a></li><li>修复 JSONPath exists 函数不支持多级表达式的问题<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Falibaba%2Ffastjson2%2Fissues%2F2190" target="_blank">#2190</a></li><li>修复反序列化 double 结束为\r\n 等转义时报错的问题<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Falibaba%2Ffastjson2%2Fissues%2F2164" target="_blank">#2164</a></li><li>修复不兼容日期格式 yyyy-MM-dd hh🇲🇲ss 的问<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Falibaba%2Ffastjson2%2Fissues%2F2199" target="_blank">#2199</a></li><li>修复不兼容日期格式 yyyy-MM-dd'T'HH🇲🇲ssXXX 的问题<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Falibaba%2Ffastjson2%2Fissues%2F2206" target="_blank">#2206</a></li><li>修复当 Double 字段为 null 时。开启 WriteNullNumberAsZero 和 WriteLongAsString，会变成 "0"的问题<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Falibaba%2Ffastjson2%2Fissues%2F2211" target="_blank">#2211</a></li><li>修复不兼容 jackson 的 Annotation JsonDeserialize#contentUsing 的问题<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Falibaba%2Ffastjson2%2Fissues%2F2217" target="_blank">#2217</a></li><li>修复 List 字段 JSONField#deserializeUsing 不起作用的问题<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Falibaba%2Ffastjson2%2Fissues%2F2213" target="_blank">#2213</a></li><li>修复 java.sql.Struct 类型序列化报错的问题<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Falibaba%2Ffastjson2%2Fissues%2F2205" target="_blank">#2205</a></li><li>修复某些场景引用检测不起作用的问题<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Falibaba%2Ffastjson2%2Fissues%2F2180" target="_blank">#2180</a></li><li>修复 JSONWriter.Feature.BrowserCompatible 导致 LocalDateTime 类型 Map Key 未按预期格式进行格式化处理<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Falibaba%2Ffastjson2%2Fissues%2F2183" target="_blank">#2183</a></li><li>修复序列化不会忽略 InputStream 类型字段的问题<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Falibaba%2Ffastjson2%2Fissues%2F2202" target="_blank">#2202</a></li></ol><h1>MAVEN 依赖配置</h1><div><pre>&lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">dependency</span>&gt;
    &lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">groupId</span>&gt;com.alibaba.fastjson2&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">groupId</span>&gt;
    &lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">artifactId</span>&gt;fastjson2&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">artifactId</span>&gt;
    &lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">version</span>&gt;2.0.46&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">version</span>&gt;
&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">dependency</span>&gt;</pre><div>
  &nbsp;
 </div></div><ul><li>android4 兼容版本</li></ul><div><pre>&lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">dependency</span>&gt;
    &lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">groupId</span>&gt;com.alibaba.fastjson2&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">groupId</span>&gt;
    &lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">artifactId</span>&gt;fastjson2&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">artifactId</span>&gt;
    &lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">version</span>&gt;2.0.46.android4&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">version</span>&gt;
&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">dependency</span>&gt;</pre><div>
  &nbsp;
 </div></div><ul><li>android5 兼容版本<br> 这个版本和 android4 兼容版本基本一致，只是使用了 java.nio.charset.StandardCharsets，后续将会不再升级 android4 兼容版本。</li></ul><div><pre>&lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">dependency</span>&gt;
    &lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">groupId</span>&gt;com.alibaba.fastjson2&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">groupId</span>&gt;
    &lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">artifactId</span>&gt;fastjson2&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">artifactId</span>&gt;
    &lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">version</span>&gt;2.0.46.android5&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">version</span>&gt;
&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">dependency</span>&gt;</pre><div>
  &nbsp;
 </div></div><ul><li>android8 兼容版本<br> 这个版本支持 java.time 和 Optional</li></ul><div><pre>&lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">dependency</span>&gt;
    &lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">groupId</span>&gt;com.alibaba.fastjson2&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">groupId</span>&gt;
    &lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">artifactId</span>&gt;fastjson2&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">artifactId</span>&gt;
    &lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">version</span>&gt;2.0.46.android8&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">version</span>&gt;
&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">dependency</span>&gt;</pre><div>
  &nbsp;
 </div></div><ul><li>1.x 兼容版本</li></ul><div><pre>&lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">dependency</span>&gt;
    &lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">groupId</span>&gt;com.alibaba&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">groupId</span>&gt;
    &lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">artifactId</span>&gt;fastjson&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">artifactId</span>&gt;
    &lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">version</span>&gt;2.0.46&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">version</span>&gt;
&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">dependency</span>&gt;</pre><div>
  &nbsp;
 </div></div><ul><li>Spring 5 extension 配置</li></ul><div><pre>&lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">dependency</span>&gt;
    &lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">groupId</span>&gt;com.alibaba.fastjson2&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">groupId</span>&gt;
    &lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">artifactId</span>&gt;fastjson2-extension-spring5&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">artifactId</span>&gt;
    &lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">version</span>&gt;2.0.46&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">version</span>&gt;
&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">dependency</span>&gt;</pre><div>
  &nbsp;
 </div></div><ul><li>Spring 6 extension 配置</li></ul><div><pre>&lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">dependency</span>&gt;
    &lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">groupId</span>&gt;com.alibaba.fastjson2&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">groupId</span>&gt;
    &lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">artifactId</span>&gt;fastjson2-extension-spring6&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">artifactId</span>&gt;
    &lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">version</span>&gt;2.0.46&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">version</span>&gt;
&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">dependency</span>&gt;</pre><div>
  &nbsp;
 </div></div><h1>相关链接</h1><ul><li>FASTJSON 1.x 用户升级指南<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Falibaba%2Ffastjson2%2Fwiki%2Ffastjson_1_upgrade_cn" target="_blank">https://github.com/alibaba/fastjson2/wiki/fastjson_1_upgrade_cn</a></li><li>相关 issues<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Falibaba%2Ffastjson2%2Fmilestone%2F46" target="_blank">https://github.com/alibaba/fastjson2/milestone/46</a></li><li>代码 tag<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Falibaba%2Ffastjson2%2Ftree%2F2.0.46" target="_blank">https://github.com/alibaba/fastjson2/tree/2.0.46</a></li><li>Maven 下载<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frepo1.maven.org%2Fmaven2%2Fcom%2Falibaba%2Ffastjson2%2Ffastjson2%2F2.0.46%2F" target="_blank">https://repo1.maven.org/maven2/com/alibaba/fastjson2/fastjson2/2.0.46/</a></li><li>Android4 兼容版本<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frepo1.maven.org%2Fmaven2%2Fcom%2Falibaba%2Ffastjson2%2Ffastjson2%2F2.0.46.android4%2F" target="_blank">https://repo1.maven.org/maven2/com/alibaba/fastjson2/fastjson2/2.0.46.android4/</a></li><li>Android5 兼容版本<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frepo1.maven.org%2Fmaven2%2Fcom%2Falibaba%2Ffastjson2%2Ffastjson2%2F2.0.46.android5%2F" target="_blank">https://repo1.maven.org/maven2/com/alibaba/fastjson2/fastjson2/2.0.46.android5/</a></li><li>Android8 兼容版本<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frepo1.maven.org%2Fmaven2%2Fcom%2Falibaba%2Ffastjson2%2Ffastjson2%2F2.0.46.android8%2F" target="_blank">https://repo1.maven.org/maven2/com/alibaba/fastjson2/fastjson2/2.0.46.android8/</a></li><li>1.x 兼容版本<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frepo1.maven.org%2Fmaven2%2Fcom%2Falibaba%2Ffastjson%2F2.0.46%2F" target="_blank">https://repo1.maven.org/maven2/com/alibaba/fastjson/2.0.46/</a></li><li>性能测试报告<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Falibaba%2Ffastjson2%2Fblob%2Fmain%2Fdocs%2Fbenchmark%2Fbenchmark_2.0.46.md" target="_blank">https://github.com/alibaba/fastjson2/blob/main/docs/benchmark/benchmark_2.0.46.md</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Sun, 28 Jan 2024 13:47:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276862/fastjson-2-0-46</guid>
            <link>https://www.oschina.net/news/276862/fastjson-2-0-46</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Katalyst v0.4.0 发布：潮汐混部与资源超分]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="margin-left:0; margin-right:0"><span style="color:#888888"><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzk0NDMzNjkxNw%3D%3D%26mid%3D2247485561%26idx%3D1%26sn%3Dc5a10a4f5e692568a60f76fb3bab67c2%26chksm%3Dc3277103f450f815423288c62b7f66d0a86a67f3820950c77acbf241cad0e2b56f1e0461bb5f%26scene%3D21%23wechat_redirect" target="_blank">Katalyst</a><span style="background-color:#f7f7f7; color:#888888"> 是字节跳动开源的成本优化实践系统，致力于解决云原生场景下的资源不合理利用问题，为资源管理和成本优化提供解决方案。</span></span></span></p><p><span style="color:#888888">来源&nbsp;| KubeWharf 社区</span></p><p><span style="color:#888888">项目 |&nbsp;</span><span style="color:#888888">github.com/kubewharf/katalyst-core</span></p><p><span style="color:#3e3e3e">近日，Katalyst 社区完成了 0.4.0 版本发布。除了持续优化 QoS 能力之外，我们还在新版本中提供了可以独立在原生 Kubernetes 上使用的潮汐混部和资源超售能力。</span></p><p><span style="color:#3e3e3e">和在离线常</span><span style="color:#3e3e3e">态混部一样，这些能力是字节跳动在不同业务场景中实现降本增效的技术手段，我们在抽象出标准化能力之后也进行了开源，</span><span style="color:#3e3e3e">期望这些能力可以帮助用户以更低的落地成本完成资源效能提升。</span></p><p>&nbsp;</p><p><strong><span>潮汐混部</span></strong></p><p><strong><span style="color:#0080ff">背景</span></strong></p><p style="color:#222222; margin-left:8px; margin-right:8px; text-align:justify"><span style="color:#3e3e3e">通过给应用分配差异化的 QoS 等级，Katalyst 可以基于资源隔离和动态调控能力实现在单机维度的在离线业务混部，即常态混部。</span><span style="color:#3e3e3e">这种混部模式虽然可以实现极致的资源效能提升，但是也增加了基础设施的复杂度。</span><span style="color:#3e3e3e">同时因为引入了例如 Reclaimed 资源这样的概念，要落地常态混部往往还需要做一些业务侧的适配。</span></p><p style="color:#222222; margin-left:8px; margin-right:8px; text-align:justify"><span style="color:#3e3e3e">为了让用户可以以更低的成本落地混部能力，在 v0.4.0 中，Katalyst 提供了潮汐混部（Tidal Colocation）功能。</span></p><p>&nbsp;</p><p><strong><span style="color:#0080ff">技术解读</span></strong></p><p style="color:#222222; margin-left:8px; margin-right:8px; text-align:justify"><span style="color:#3e3e3e">在潮汐混部中引入了潮汐节点池的概念，并且将集群中的节点划分为「在线」和「离线」两种类型。潮汐混部主要分为两个部分：</span></p><ul><li><p style="color:#222222; margin-left:8px; margin-right:8px"><strong><span style="color:#3e3e3e">实例数管理</span></strong><span style="color:#3e3e3e">：</span><span style="color:#3e3e3e">通过 HPA、CronHPA 等各种横向扩缩能力来管理在线业务的实例数，在夜间可以腾出资源给离线业务使用</span></p></li><li><p style="color:#222222; margin-left:8px; margin-right:8px"><span style="color:#3e3e3e"><strong>潮汐节点池管理</strong>：</span><span style="color:#3e3e3e">Tidal Controller 基于设定好的策略对潮汐节点池中的节点做 binpacking，将腾出的资源折合成整机出让给离线业务</span></p></li></ul><p><img height="987" src="https://oscimg.oschina.net/oscnet/up-838bb9ee9d50ac86ea88c54f1f1b43a1865.png" width="1080" referrerpolicy="no-referrer"></p><p>&nbsp;</p><p><strong><span style="color:#0080ff">使用</span></strong></p><p style="color:#222222; margin-left:8px; margin-right:8px; text-align:justify"><span style="color:#3e3e3e">1. 在集群中选取加</span><span style="color:#3e3e3e">入潮汐节点池的节点，并为节点打上某个 Label</span></p><pre><code><span><span>apiVersion</span>: <span style="color:#dd1144">v1</span></span></code><code><span><span>kind</span>: <span style="color:#dd1144">Node</span></span></code><code><span><span>metadata</span>:</span></code><code><span><span>...</span></span></code><code><span><span>labels</span>:</span></code><code><span><span style="color:#afafaf">beta.kubernetes.io/arch</span>: <span style="color:#dd1144">amd64</span></span></code><code><span><span style="color:#afafaf">beta.kubernetes.io/os</span>: <span style="color:#dd1144">linux</span></span></code><code><span><em>    # 潮汐节点标识</em></span></code><code><span><span>tidenodes</span>: <span style="color:#dd1144">"true"</span></span></code><code><span><span>name</span>: <span style="color:#dd1144">192.168.0.11</span></span></code><code><span><span>spec</span>:</span></code><code><span><span>...</span></span></code></pre><p style="color:#222222; margin-left:8px; margin-right:8px; text-align:justify"><span style="color:#3e3e3e">2. 创建潮汐节点池配置</span>​​​​​</p><pre><code><span><span>apiVersion</span>: <span style="color:#dd1144">tide.katalyst.kubewharf.io/v1alpha1</span></span></code><code><span><span>kind</span>: <span style="color:#dd1144">TideNodePool</span></span></code><code><span><span>metadata</span>:</span></code><code><span><span>name</span>: <span style="color:#dd1144">tidenodepool-example</span></span></code><code><span><span>spec</span>:</span></code><code><span><span>nodeConfigs</span>:</span></code><code><span><span>nodeSelector</span>:</span></code><code><span><em>      # 与加入潮汐节点池的节点中的标签匹配</em></span></code><code><span><span>tidenodes</span>: <span style="color:#dd1144">"true"</span></span></code><code><span><em>    # 配置潮汐节点池中为在线和离线节点预留的节点量</em></span></code><code><span><span>reserve</span>:</span></code><code><span><span>offline</span>: <span style="color:#dd1144">25%</span></span></code><code><span><span>online</span>: <span style="color:#dd1144">10%</span></span></code></pre><p style="color:#222222; margin-left:8px; margin-right:8px; text-align:justify"><span style="color:#3e3e3e">3. 潮汐控制器为节点打上对应的标签和污点，并且会根据各个节点的负载情况动态做 Binpacking 调整节点角色</span>​​​​​​​​​​​​​​​​​​</p><pre><code><span><span>apiVersion</span>: <span style="color:#dd1144">v1</span></span></code><code><span><span>kind</span>: <span style="color:#dd1144">Node</span></span></code><code><span><span>metadata</span>:</span></code><code><span><span>labels</span>:</span></code><code><span><span style="color:#afafaf">beta.kubernetes.io/arch</span>: <span style="color:#dd1144">amd64</span></span></code><code><span><span style="color:#afafaf">beta.kubernetes.io/os</span>: <span style="color:#dd1144">linux</span></span></code><code><span><span>tidenodes</span>: <span style="color:#dd1144">"true"</span></span></code><code><span><em>    # 潮汐控制器为在线节点打上在线标签，离线类似</em></span></code><code><span><span style="color:#afafaf">tide.katalyst.kubewharf.io/node-pool</span>: <span style="color:#dd1144">tidenodepool-sample</span></span></code><code><span><span style="color:#afafaf">tide.katalyst.kubewharf.io/node-type</span>: <span style="color:#dd1144">online</span></span></code><code><span><span style="color:#afafaf">tide.katalyst.kubewharf.io/reserve</span>: <span style="color:#dd1144">"false"</span></span></code><code><span><span style="color:#afafaf">tide.katalyst.kubewharf.io/tide</span>: <span style="color:#dd1144">"true"</span></span></code><code><span><span>name</span>: <span style="color:#dd1144">192.168.0.11</span></span></code><code><span><span>spec</span>:</span></code><code><span><em>  # 潮汐控制器为在线节点打上禁止离线调度的污点，离线类似</em></span></code><code><span><span>taints</span>:</span></code><code><span><span style="color:#afafaf">-</span><span style="color:#dd1144">effect: NoExecute</span></span></code><code><span><span>key</span>: <span style="color:#dd1144">tide.katalyst.kubewharf.io/offline-not-used</span></span></code><code><span><span>value</span>: <span style="color:#dd1144">"true"</span></span></code><code><span><span>...</span></span></code></pre><p style="color:#222222; margin-left:8px; margin-right:8px; text-align:justify"><span style="color:#3e3e3e">4. 部署在线离线业务，为应用打上相应标签和污点容忍，并配置 HPA 规则</span>​​​​​​​​​​​​​​​​​​​​​​​​​​​​</p><pre><code><span><span>kind</span>: <span style="color:#dd1144">Deployment</span></span></code><code><span><span>apiVersion</span>: <span style="color:#dd1144">apps/v1</span></span></code><code><span><span>metadata</span>:</span></code><code><span><span>name</span>: <span style="color:#dd1144">tide-online</span></span></code><code><span><span>spec</span>:</span></code><code><span><span>replicas</span>: <span style="color:#dd1144">30</span></span></code><code><span><span>selector</span>:</span></code><code><span><span>matchLabels</span>:</span></code><code><span><span>app</span>: <span style="color:#dd1144">tide-online</span></span></code><code><span><span>template</span>:</span></code><code><span><span>metadata</span>:</span></code><code><span><span>labels</span>:</span></code><code><span><em>        # 标识在线</em></span></code><code><span><span style="color:#afafaf">tide.katalyst.kubewharf.io/pod-type</span>: <span style="color:#dd1144">online</span></span></code><code><span><span>app</span>: <span style="color:#dd1144">tide-online</span></span></code><code><span><span>spec</span>:</span></code><code><span><span>tolerations</span>:</span></code><code><span><em>        # 容忍污点</em></span></code><code><span><span style="color:#afafaf">-</span><span style="color:#dd1144">key: "tide.katalyst.kubewharf.io/offline-not-used" </span></span></code><code><span><span>operator</span>: <span style="color:#dd1144">"Exists"</span></span></code><code><span><span>nodeSelector</span>:</span></code><code><span><em>        # 选择在线节点，包含预留+潮汐</em></span></code><code><span><span style="color:#afafaf">tide.katalyst.kubewharf.io/node-type</span>: <span style="color:#dd1144">online</span></span></code><code><span><span>containers</span>:</span></code><code><span><span style="color:#afafaf">-</span><span style="color:#dd1144">name: busybox</span></span></code><code><span><span>image</span>: <span style="color:#dd1144">busybox</span></span></code><code><span><span>command</span>: <span style="color:#dd1144">["sleep", "36000"]</span></span></code><code><span><span>resources</span>:</span></code><code><span><span>requests</span>:</span></code><code><span><span>cpu</span>: <span style="color:#dd1144">"4"</span></span></code><code><span><span>memory</span>: <span style="color:#dd1144">"8Gi"</span></span></code></pre><p><strong><span>在线超分</span></strong></p><p><strong><span style="color:#0080ff">背景</span></strong></p><p style="color:#222222; margin-left:8px; margin-right:8px; text-align:justify"><span style="color:#3e3e3e">在线业务的资源使用量往往会随着访问数量的波动而变化，具备明显的潮汐特性。为了确保业务的稳定性，用户通常会以峰值时消耗的资源量作为申请的依据，而且往往会有过度申请资源的倾向，这些资源会被浪费。</span></p><p style="color:#222222; margin-left:8px; margin-right:8px; text-align:justify"><span style="color:#3e3e3e">Katalyst 提供了在离线混部的能力作为解决上述问题的方式之一，但是在一些场景下，在离线混部可能不便于落地，比如：</span></p><ul><li><p style="color:#222222; margin-left:8px; margin-right:8px"><span style="color:#3e3e3e">负载类型比较单一，只有在线业务</span></p></li><li><p style="color:#222222; margin-left:8px; margin-right:8px"><span style="color:#3e3e3e">业务方不愿意改变申请资源的协议来申请 Reclaimed 资源</span></p></li></ul><p style="color:#222222; margin-left:8px; margin-right:8px; text-align:justify"><span style="color:#3e3e3e">在新版本中，Katalyst 针对在线业务场景，提供了一种简单的、对业务方无感的资源超分方案，便于用户快速提升资源利用率。</span></p><p>&nbsp;</p><p><strong><span style="color:#0080ff">技术解读</span></strong></p><ul><li><p style="margin-left:8px; margin-right:8px"><strong><span style="color:#3e3e3e">Over-commit Webhook</span></strong><span style="color:#3e3e3e">：</span><span style="color:#3e3e3e">劫持 kubelet 上报心跳的请求，并对 Allocatable 资源量进行放大</span></p></li><li><p style="margin-left:8px; margin-right:8px"><strong><span style="color:#3e3e3e">Over-commit Controller</span></strong><span style="color:#3e3e3e">：超分配置管理</span></p></li><li><p style="margin-left:8px; margin-right:8px"><strong><span style="color:#3e3e3e">Katalyst Agent</span></strong><span style="color:#3e3e3e">：通过干扰检测和驱逐，保障超分后节点的性能和稳定性；根据指标数据，计算并上报动态的超分比</span></p></li><li><p style="margin-left:8px; margin-right:8px"><strong><span style="color:#3e3e3e">Katalyst Scheduler</span></strong><span style="color:#3e3e3e">：对需要绑核的 Pod 进行准入，避免超分导致实际无法绑核而启动失败</span></p></li></ul><p><img height="969" src="https://oscimg.oschina.net/oscnet/up-d0f2afbb872b4856166267aa860bc05aacd.png" width="1080" referrerpolicy="no-referrer"></p><p><strong><span style="color:#0080ff">使用</span></strong></p><p style="color:#222222; margin-left:8px; margin-right:8px; text-align:justify"><span style="color:#3e3e3e">1. 为需要超分的节点池的节点打上 Label</span>​​​​​​​​​​​​​​​​​​​​​</p><pre><code><span><span>apiVersion</span>: <span style="color:#dd1144">v1</span></span></code><code><span><span>kind</span>: <span style="color:#dd1144">Node</span></span></code><code><span><span>metadata</span>:</span></code><code><span><span>annotations</span>:</span></code><code><span><em>    # 超分节点池的标识</em></span></code><code><span><span style="color:#afafaf">katalyst.kubewharf.io/overcommit_node_pool</span>: <span style="color:#dd1144">node-pool-1 </span></span></code><code><span><span>name</span>: <span style="color:#dd1144">10.27.0.1</span></span></code><code><span><span>spec</span>:</span></code><code><span><span>...</span></span></code><code><span><span>status</span>:</span></code><code><span><em>  # 未超分时的资源量</em></span></code><code><span><span>allocatable</span>:</span></code><code><span><span>cpu</span>: <span style="color:#dd1144">15900m</span></span></code><code><span><span>memory</span>: <span style="color:#dd1144">32059820Ki</span></span></code><code><span><span>capacity</span>:</span></code><code><span><span>cpu</span>: <span style="color:#dd1144">16</span></span></code><code><span><span>memory</span>: <span style="color:#dd1144">32424364Ki</span></span></code><code><span><span>...</span></span></code></pre><p style="color:#222222; margin-left:8px; margin-right:8px; text-align:justify"><span style="color:#3e3e3e">2.<span>&nbsp;</span><span style="background-color:#ffffff; color:#3e3e3e">创建超分规则</span></span>​​​​​​​</p><pre><code><span><span>apiVersion</span>: <span style="color:#dd1144">overcommit.katalyst.kubewharf.io/v1alpha1</span></span></code><code><span><span>kind</span>: <span style="color:#dd1144">NodeOvercommitConfig</span></span></code><code><span><span>metadata</span>:</span></code><code><span><span>name</span>: <span style="color:#dd1144">node-overcommit-config-1</span></span></code><code><span><span>spec</span>:</span></code><code><span><em>  # 该规则匹配具有如下节点池 Label 的节点</em></span></code><code><span><em>  # katalyst.kubewharf.io/overcommit_node_pool=node-pool-1 </em></span></code><code><span><span>nodeOvercommitSelectorVal</span>: <span style="color:#dd1144">"node-pool-1"</span></span></code><code><span><em>  # 各种资源的超分比</em></span></code><code><span><span>resourceOvercommitRatio</span>:</span></code><code><span><span>cpu</span>: <span style="color:#dd1144">2</span></span></code><code><span><span>status</span>:</span></code><code><span><em>  # 该规则匹配的节点名称列表</em></span></code><code><span><span>matchedNodeList</span>: </span></code><code><span><span style="color:#afafaf">-</span><span style="color:#dd1144">10.27.0.1</span></span></code><code><span><span style="color:#afafaf">-</span><span style="color:#dd1144">10.27.0.2</span></span></code><code><span><span style="color:#afafaf">-</span><span style="color:#dd1144">10.27.0.3</span></span></code></pre><p style="color:#222222; margin-left:8px; margin-right:8px; text-align:justify"><span style="color:#3e3e3e">3. 观察 Node 对象，发现 Katalyst 将超分比、未超分时的资源量更新到<span>&nbsp;</span></span><span style="color:#3e3e3e">Annotation 中，并根据超分比对 Allocatable 和 Capacity 进行了放大</span></p><pre><code><span><span>apiVersion</span>: <span style="color:#dd1144">v1</span></span></code><code><span><span>kind</span>: <span style="color:#dd1144">Node</span></span></code><code><span><span>metadata</span>:</span></code><code><span><span>annotations</span>:</span></code><code><span><span style="color:#afafaf">katalyst.kubewharf.io/overcommit_node_pool</span>: <span style="color:#dd1144">node-pool-1 </span></span></code><code><span><em>    # 以下字段由 Katalyst 添加</em></span></code><code><span><em>    # CPU 超分比</em></span></code><code><span><span style="color:#afafaf">katalyst.kubewharf.io/cpu-overcommit-ratio</span>: <span style="color:#dd1144">"2"</span></span></code><code><span><em>    # Memory 超分比</em></span></code><code><span><span style="color:#afafaf">katalyst.kubewharf.io/memory-overcommit-ratio</span>: <span style="color:#dd1144">"1"</span></span></code><code><span><em>    # 超分前的 CPU Capacity</em></span></code><code><span><span style="color:#afafaf">katalyst.kubewharf.io/original_capacity_cpu</span>: <span style="color:#dd1144">"16"</span></span></code><code><span><em>    # 超分前的 Memory Capacity</em></span></code><code><span><span style="color:#afafaf">katalyst.kubewharf.io/original_capacity_memory</span>: <span style="color:#dd1144">"32424364Ki"</span></span></code><code><span><em>    # 超分前的 CPU Allocatable</em></span></code><code><span><span style="color:#afafaf">katalyst.kubewharf.io/original_allocatable_cpu</span>: <span style="color:#dd1144">"15900m"</span></span></code><code><span><em>    # 超分前的 Memory Allocatable</em></span></code><code><span><span style="color:#afafaf">katalyst.kubewharf.io/original_allocatable_memory</span>: <span style="color:#dd1144">"32424364Ki"</span></span></code><code><span><span>name</span>: <span style="color:#dd1144">10.27.0.1</span></span></code><code><span><span>spec</span>:</span></code><code><span><span>...</span></span></code><code><span><span>status</span>:</span></code><code><span><em>  # 超分后的资源量</em></span></code><code><span><span>allocatable</span>:</span></code><code><span><span>cpu</span>: <span style="color:#dd1144">31800m</span></span></code><code><span><span>memory</span>: <span style="color:#dd1144">32059820Ki</span></span></code><code><span><span>capacity</span>:</span></code><code><span><span>cpu</span>: <span style="color:#dd1144">32</span></span></code><code><span><span>memory</span>: <span style="color:#dd1144">32424364Ki</span></span></code><code><span><span>...</span></span></code></pre><p style="color:#222222; margin-left:8px; margin-right:8px; text-align:justify">&nbsp;</p><p><strong><span>NUMA 粒度混部内存管控框架</span></strong></p><p><strong><span style="color:#0080ff">背景</span></strong></p><p style="color:#222222; margin-left:8px; margin-right:8px; text-align:justify"><span style="color:#3e3e3e">Katalyst 当前的混部策略只考虑整体机器的可用资源，导致离线任务在 NUMA 跨度申请内存时，内存容量和带宽在各 NUMA 间分布不均匀。这种情况下，当前的混部策略往往无法精确控制内存使用量，进而引起内存压力。</span></p><p style="color:#222222; margin-left:8px; margin-right:8px; text-align:justify"><span style="color:#3e3e3e">针对这种情况，我们提出了一种精细化的 NUMA 粒度内存管控框架，旨在通过 sysadvisor 计算 memory provisions，并与 qrm memory plugin 交互，实现更细致的 NUMA 内存管理。这将使 qrm memory plugin 能够根据 memory provisions 进行 NUMA 细粒度内存控制。</span></p><p><strong><span style="color:#0080ff">技术解读</span></strong></p><p style="color:#222222; margin-left:8px; margin-right:8px; text-align:justify"><span style="color:#3e3e3e">在 Sysadvisor 的 Memory Plugin 中，我们引入了名为 memoryProvisioner 的插件，负责计算每个 NUMA 的内存供应逻辑。</span></p><p style="color:#222222; margin-left:8px; margin-right:8px; text-align:justify"><span style="color:#3e3e3e">为</span><span style="color:#3e3e3e">增强其可扩展性，我们设计了 ProvisionPolicy 接口，包含 Update 和 GetProvision 两个方法，分别用于定期更新内存供应量和获取 provision 建议。</span><span style="color:#3e3e3e">MemoryProvisioner 插件实现了 MemoryAdvisorPlugin 接口。</span></p><p style="color:#222222; margin-left:8px; margin-right:8px; text-align:justify"><span style="color:#3e3e3e">此策略基于 Memory Headroom 的 PolicyNUMAAware 策略，通过遍历每个物理 NUMA 及其 pod，计算每个 NUMA 的内存供应量。具体计算逻辑包括分析 NUMA Exclusive 设置，获取每个 NUMA 节点的空闲内存，并应用公式考虑 reclaimed cores、系统 scale_factor 和 reserved 内存，以实现更均衡的 NUMA 内存分配。</span></p><p><img height="426" src="https://oscimg.oschina.net/oscnet/up-8efb4d6c7abeb791e341f0d528ca148dfb2.png" width="1080" referrerpolicy="no-referrer"></p><p><strong><span style="color:#0080ff">使用</span></strong></p><p style="color:#222222; margin-left:8px; margin-right:8px; text-align:justify"><span style="color:#3e3e3e">katalyst-agent 添加了<span style="background-color:#ffffff; color:#3e3e3e">&nbsp;</span><span style="background-color:#ffffff; color:#3e3e3e"><code><span style="color:#d84fa9">memory-provision-policy</span></code></span><span style="background-color:#ffffff; color:#3e3e3e">&nbsp;</span></span><span style="color:#3e3e3e">的启动参数，用于指定计算策略，默认是 canonical。用法如下：</span></p><pre><code><span><span style="color:#afafaf">katalyst-agent</span><span style="color:#dd1144">--kubeconfig=/root/.kube/config \</span></span></code><code><span>--memory-resource-plugin-advisor=true   \</span></code><code><span>--memory-advisor-plugins=memory-provisioner \</span></code><code><span>--memory-provision-policy=memory-provisioner-canonical \</span></code><code><span>...</span></code></pre><p><strong><span>支持 OOM 优先级作为 QoS 增强</span></strong></p><p><strong><span style="color:#0080ff">背景</span></strong></p><p style="color:#222222; margin-left:8px; margin-right:8px; text-align:justify"><span style="color:#3e3e3e">目前，Kubernetes 中 pod 的 OOM 优先级主要受其 QoS 级别与其对内存的申请量、使用量影响。</span><span style="color:#3e3e3e">然而，当前混部场景下，kubelet 原生的 oom_score_adj 计算策略已经不能很好的满足需求，例如：</span></p><ul><li><p style="color:#222222; margin-left:8px; margin-right:8px"><span style="color:#3e3e3e">需要给两个都映射到原生的 Burstable 级别的 shared_cores pods 设定 OOM 优先级</span></p></li><li><p style="color:#222222; margin-left:8px; margin-right:8px"><span style="color:#3e3e3e">需要在两个原生都是 Guaranteed 级别的 dedicated_cores pod 和 shared_cores pod 之间设定 shared_cores pod 要早于 dedicated_cores pod OOM</span></p></li></ul><p style="color:#222222; margin-left:8px; margin-right:8px; text-align:justify"><span style="color:#3e3e3e">此外，当前 kubelet 中提供的静态 oom_score_adj 计算机制，不支持 OOM 优先级的动态调整。因此 Katalyst 提供了一个关于 OOM 优先级的 QoS Enhancement，支持更加灵活地为 pods 设置 OOM 优先级。</span></p><p>&nbsp;</p><p><strong><span style="color:#0080ff">技术解读</span></strong></p><p style="color:#222222; margin-left:8px; margin-right:8px; text-align:justify"><span style="color:#3e3e3e">Katalyst 通过在内核添加 ebpf 的方式实现用户自定义的 OOM 策略注入，并在上层 qrm memory plugin 中完成用户定义策略的解析以及 OOM Priority 的配置下发。</span></p><p><strong><span style="color:#0080ff">使用</span></strong></p><p style="color:#222222; margin-left:8px; margin-right:8px; text-align:justify"><span style="color:#3e3e3e">OOM Priority 信息通过 annotaion 在 pod 上进行指定</span><span style="color:#333333">​​​​​​​</span></p><pre><code><span><span style="color:#dd1144">annotations:</span></span></code><code><span><span style="color:#dd1144">"katalyst.kubewharf.io/memory_enhancement"</span>:'{</span></code><code><span><span style="color:#dd1144">"numa_binding"</span>: <span style="color:#dd1144">"true"</span>, </span></code><code><span><span style="color:#dd1144">"numa_exclusive"</span>: <span style="color:#dd1144">"true"</span>,</span></code><code><span><span style="color:#dd1144">"oom_priority"</span>: priorityValueInt,</span></code><code><span>    }'</span></code></pre><p><span style="color:#3e3e3e">priorityValueInt 的取值越大表示优先级越高，并且取值范围受 pod 所指定的 QoS level 影响。</span></p><p>&nbsp;</p><p><strong><span>支持拓扑感知调度</span></strong></p><p><strong><span style="color:#0080ff">背景</span></strong></p><p style="color:#222222; margin-left:8px; margin-right:8px; text-align:justify"><span style="color:#3e3e3e">在搜索、广告、推荐、游戏、AI 分布式训练等业务场景下，用户对时延的敏感性较高，对容器在微拓扑级别的摆放方式存在要求。</span><span style="color:#3e3e3e">原生 K8s 的微拓扑管理能力存在一些局限，调度器不感知微拓扑，可能导致出现较多的因不满足 NUMA 亲和要求而造成的 Admit 失败。</span></p><p style="color:#222222; margin-left:8px; margin-right:8px; text-align:justify"><span style="color:#3e3e3e">因此，Katalyst 在 v0.4.0 实现了拓扑感知调度功能，支持两种模式：</span></p><ul><li><p style="color:#222222; margin-left:8px; margin-right:8px"><span style="color:#3e3e3e">Native 策略：</span><span style="color:#3e3e3e">兼容 K8s 原生的 NUMA 亲和和绑核策略</span></p></li><li><p><span style="color:#3e3e3e">Dynamic 策略：</span><span style="color:#3e3e3e">混部场景下增强的绑核策略，对于<span>&nbsp;</span></span><span style="color:#3e3e3e">dedicated_cores</span><span style="color:#3e3e3e"><span>&nbsp;</span>QoS 级别，支持了 NUMA 亲和 (</span><span style="color:#3e3e3e">numa_binding</span><span style="color:#3e3e3e">) 以及 NUMA 独占 (numa_exclusive) 两种语义</span></p></li></ul><p><strong><span>其他</span></strong></p><ul><li><p style="margin-left:8px; margin-right:8px"><span style="color:#3e3e3e">SysAdvisor 框架支持对接自定义业务模型，调优 rama provision policy 计算结果</span></p></li><li><p style="margin-left:8px; margin-right:8px"><span style="color:#3e3e3e">QRM 支持设置整机和容器级别 TCP Memory 上限，缓解 TCP 内存满导致的丢包问题</span></p></li><li><p style="margin-left:8px; margin-right:8px"><span style="color:#3e3e3e">Eviction 集成 RootFS 驱逐能力，定制排序策略和 QoS 级别驱逐阈值</span></p></li><li><p style="margin-left:8px; margin-right:8px"><span style="color:#3e3e3e">KCMAS 优化存储数据结构和索引，支持多 tag 能力</span></p></li><li><p style="margin-left:8px; margin-right:8px"><span style="color:#3e3e3e">ServiceProfilingDescriper (SPD) 支持服务维度的混部 baseline 和 per-pod 灰度能力</span></p></li><li><p style="margin-left:8px; margin-right:8px"><span style="color:#3e3e3e">社区开发切换到基于 owner review 模式</span></p></li><li><p style="margin-left:8px; margin-right:8px"><span style="color:#3e3e3e">基于超时实现死锁检测功能</span></p></li></ul><p>&nbsp;</p><p><strong><span style="color:#0080ff">新版本体验路径</span></strong></p><p style="color:#222222; margin-left:8px; margin-right:8px; text-align:justify"><span style="color:#3e3e3e">请参考社区官方文档体验 Katalyst 潮汐混部和资源超分能力:</span></p><ul><li><p style="color:#222222; margin-left:8px; margin-right:8px; text-align:left"><span style="color:#3e3e3e">潮汐混部：</span><u>gokatalyst.io/docs/user-guide/tidal-colocation/</u></p></li><li><p style="color:#222222; margin-left:8px; margin-right:8px; text-align:left"><span style="color:#3e3e3e">资源超分：</span><u>gokatalyst.io/docs/user-guide/resource-overcommitment/</u></p></li></ul><p>&nbsp;</p><p><strong><span style="color:#0080ff">感谢贡献者</span></strong></p><p><span style="color:#3e3e3e">在本次新版本的发布过程中，社区也迎来了不少新的贡献者，在此向他们的付出表示由衷感谢：</span>​​​​​​​</p><p><img height="489" src="https://oscimg.oschina.net/oscnet/up-703a8831cd0930fbe1142bda9155b62f7b1.png" width="1080" referrerpolicy="no-referrer"></p><p><span style="color:#3e3e3e">非常期待更多开发者和用户加入到 Katalyst 开源社区中，和我们一起交流和探讨在离线混部以及资源效能的相关话题。</span>​​​​​​​</p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 28 Jan 2024 03:44:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276830/katalyst-0-4-0</guid>
            <link>https://www.oschina.net/news/276830/katalyst-0-4-0</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
    </channel>
</rss>
