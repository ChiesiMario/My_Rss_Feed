<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[开源中国-软件更新资讯]]>
        </title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="https://rsshub.app/oschina/news/project" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[开源中国-软件更新资讯 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Sat, 04 Nov 2023 02:30:28 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[TypeScript 5.3 RC 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>TypeScript 5.3 RC 版本现已发布。可以通过 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.nuget.org%2Fpackages%2FMicrosoft.TypeScript.MSBuild" target="_blank">NuGet</a> 获取，或通过 npm 使用以下命令获取：</p><pre><code>npm install -D typescript@rc
</code></pre><p><strong>TypeScript 5.3 中的新特性包括：</strong></p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdevblogs.microsoft.com%2Ftypescript%2Fannouncing-typescript-5-3-rc%2F%23import-attributes" target="_blank">Import Attributes</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdevblogs.microsoft.com%2Ftypescript%2Fannouncing-typescript-5-3-rc%2F%23stable-support-resolution-mode-in-import-types" target="_blank">在 Import Types 中稳定支持<code>resolution-mode</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdevblogs.microsoft.com%2Ftypescript%2Fannouncing-typescript-5-3-rc%2F%23resolution-mode-supported-in-all-module-modes" target="_blank"><code>resolution-mode</code>在所有模块模式均受支持</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdevblogs.microsoft.com%2Ftypescript%2Fannouncing-typescript-5-3-rc%2F%23switch-true-narrowing" target="_blank"><code>switch (true)</code>Narrowing</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdevblogs.microsoft.com%2Ftypescript%2Fannouncing-typescript-5-3-rc%2F%23narrowing-on-comparisons-to-booleans" target="_blank">Narrowing On Comparisons to Booleans</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdevblogs.microsoft.com%2Ftypescript%2Fannouncing-typescript-5-3-rc%2F%23instanceof-narrowing-through-symbolhasinstance" target="_blank"><code>instanceof</code><span>&nbsp;</span>Narrowing Through<span>&nbsp;</span><code>Symbol.hasInstance</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdevblogs.microsoft.com%2Ftypescript%2Fannouncing-typescript-5-3-rc%2F%23checks-for-super-property-accesses-on-instance-fields" target="_blank">检查对实例字段的 super 属性访问</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdevblogs.microsoft.com%2Ftypescript%2Fannouncing-typescript-5-3-rc%2F%23interactive-inlay-hints-for-types" target="_blank">针对类型的交互式嵌套提示 (Interactive Inlay Hints)</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdevblogs.microsoft.com%2Ftypescript%2Fannouncing-typescript-5-3-rc%2F%23settings-to-prefer-type-auto-imports" target="_blank">Prefer<code>type</code>Auto-Imports 的设置</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdevblogs.microsoft.com%2Ftypescript%2Fannouncing-typescript-5-3-rc%2F%23optimizations-by-skipping-jsdoc-parsing" target="_blank">通过跳过 JSDoc 解析进行优化</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdevblogs.microsoft.com%2Ftypescript%2Fannouncing-typescript-5-3-rc%2F%23optimizations-by-comparing-non-normalized-intersections" target="_blank">通过 Comparing Non-Normalized Intersections 进行优化</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdevblogs.microsoft.com%2Ftypescript%2Fannouncing-typescript-5-3-rc%2F%23consolidation-between-tsserverlibraryjs-and-typescriptjs" target="_blank">合并<code>tsserverlibrary.js</code>和<code>typescript.js</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdevblogs.microsoft.com%2Ftypescript%2Fannouncing-typescript-5-3-rc%2F%23breaking-changes-and-correctness-improvements" target="_blank">Breaking Changes 和 Correctness Improvements</a></li></ul><p><strong>自&nbsp;Beta&nbsp;<span><span><span><span><span style="color:#333333"><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>版以来的新变化有：</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></p><p style="text-align:left">Beta&nbsp;<span><span><span><span><span style="color:#333333"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>版<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdevblogs.microsoft.com%2Ftypescript%2Fannouncing-typescript-5-3-rc%2F%23resolution-mode-supported-in-all-module-modes" target="_blank">允许<code>resolution-mode</code>跨模块分辨率设置使用</a>，但并未对此进行记录。自 </span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>Beta&nbsp;<span><span><span><span><span style="color:#333333"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>版发布以来，项目团队添加了<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdevblogs.microsoft.com%2Ftypescript%2Fannouncing-typescript-5-3-rc%2F%23settings-to-prefer-type-auto-imports" target="_blank">一个选项，在可能的情况下首选</a></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdevblogs.microsoft.com%2Ftypescript%2Fannouncing-typescript-5-3-rc%2F%23settings-to-prefer-type-auto-imports" target="_blank"><code>type</code>-only auto-imports</a><span><span><span><span><span style="color:#333333"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ftc39%2Fproposal-import-attributes" target="_blank">import attributes</a></u></strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">import attributes 的一个用例是向运行时提供有关模块预期格式的信息。</p><pre style="margin-left:0; margin-right:0; text-align:left"><code class="language-javascript"><span style="color:#6a737d">// We only want this to be interpreted as JSON,</span><span style="color:#6a737d">// not a runnable/malicious JavaScript file with a `.json` extension.</span><span style="color:#d73a49">import</span> obj <span style="color:#d73a49">from</span><span style="color:#032f62">"./something.json"</span><span style="color:#d73a49">with</span> { <span style="color:#d73a49">type</span>: <span style="color:#032f62">"json"</span> };</code></pre><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">TypeScript 不会检查这些属性的内容，因为它们是特定于主机的，因此不会对它们进行检查，只是让浏览器和运行时处理它们（可能会出错）。</p><pre style="margin-left:0; margin-right:0; text-align:left"><code class="language-javascript"><span style="color:#6a737d">// TypeScript is fine with this.</span><span style="color:#6a737d">// But your browser? Probably not.</span><span style="color:#d73a49">import</span> * <span style="color:#d73a49">as</span> foo <span style="color:#d73a49">from</span><span style="color:#032f62">"./foo.js"</span><span style="color:#d73a49">with</span> { <span style="color:#d73a49">type</span>: <span style="color:#032f62">"fluffy bunny"</span> };</code></pre><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">动态 import () 调用也可以通过第二个参数使用 import 属性。</p><pre style="margin-left:0; margin-right:0; text-align:left"><code class="language-javascript"><span style="color:#d73a49">const</span> obj = <span style="color:#d73a49">await</span><span style="color:#d73a49">import</span>(<span style="color:#032f62">"./something.json"</span>, {
    <span style="color:#d73a49">with</span>: { <span style="color:#d73a49">type</span>: <span style="color:#032f62">"json"</span> }
});</code></pre><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">第二个参数的预期类型由一个名为<span>&nbsp;</span><code>ImportCallOptions</code><span>&nbsp;</span>的类型定义，默认情况下，该类型只期望调用一个属性<span>&nbsp;</span><code>with</code>。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">请注意，导入属性是从早期的 "导入断言"（import assertions）提案演变而来的，该提案已在 TypeScript 4.5 中实现。最明显的区别是使用了<span>&nbsp;</span><code>with</code><span>&nbsp;</span>关键字而非<span>&nbsp;</span><code>assert</code><span>&nbsp;</span>关键字。但不太明显的区别是，运行时现在可以自由使用属性来指导导入路径的解析和解释，而导入断言只能在加载模块后断言某些特性。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">随着时间的推移，TypeScript 将淘汰旧的导入断言语法，转而使用建议的导入属性语法。使用 assert 的现有代码应迁移到 with 关键字。需要导入属性的新代码应只使用<span>&nbsp;</span><code>with</code><span>&nbsp;</span>关键字。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong><code>switch (true)</code>Narrowing</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">TypeScript 5.3 可以根据<span>&nbsp;</span><code>switch (true)</code><span>&nbsp;</span>中每个<span>&nbsp;</span><code>case</code><span>&nbsp;</span>子句的条件执行 narrowing。</p><pre style="margin-left:0; margin-right:0; text-align:left"><code class="language-javascript"><span><span style="color:#d73a49">function</span><span style="color:#6f42c1">f</span>(<span>x: unknown</span>) </span>{
    <span style="color:#d73a49">switch</span> (<span style="color:#005cc5">true</span>) {
        <span style="color:#d73a49">case</span><span style="color:#d73a49">typeof</span> x === <span style="color:#032f62">"string"</span>:
            <span style="color:#6a737d">// 'x' is a 'string' here</span><span>console</span>.log(x.toUpperCase());
            <span style="color:#6a737d">// falls through...</span><span style="color:#d73a49">case</span><span>Array</span>.isArray(x):
            <span style="color:#6a737d">// 'x' is a 'string | any[]' here.</span><span>console</span>.log(x.length);
            <span style="color:#6a737d">// falls through...</span><span style="color:#d73a49">default</span>:
          <span style="color:#6a737d">// 'x' is 'unknown' here.</span><span style="color:#6a737d">// ...</span>
    }
}</code></pre><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">更多详情可<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdevblogs.microsoft.com%2Ftypescript%2Fannouncing-typescript-5-3-rc%2F" target="_blank">查看发布公告</a>。</p></div>
                                    ]]>
            </description>
            <pubDate>Sat, 04 Nov 2023 02:27:23 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264869/typescript-5-3-rc</guid>
            <link>https://www.oschina.net/news/264869/typescript-5-3-rc</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[游戏引擎 Godot 4.1.3 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">Godot 4.1.3 现已<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgodotengine.org%2Farticle%2Fmaintenance-release-godot-4-1-3%2F" target="_blank">发布</a>，共有 76 位贡献者提出了 128 项 pull-request（或 133 次 commits）。Godot 是一个非营利性的开源游戏引擎，由数百名贡献者利用业余时间开发，也有少数兼职或全职开发人员受雇于 Godot 社区的捐助。</span></p><p><span style="color:#000000"><img alt="" height="281" src="https://oscimg.oschina.net/oscnet/up-e95b46d9d794618d76ef3887eeade7270b9.webp" width="500" referrerpolicy="no-referrer"></span></p><p><span style="color:#000000">v4.1.3 是&nbsp;Godot 4.1 的第三个维护版本，包含了许多针对渲染系统的修复，解决了所有渲染后端、光照贴图和体素全局照明系统以及 GPU 粒子中的问题。编辑器 UI 和引擎 GUI 系统中的各种问题已得到解决，输入团队改进了控制器支持并解决了 Android 平台特有的几个问题。</span></p><p><span style="color:#000000">此外还添加了一个重要的修复程序，以改进对 Android 14 的支持，并修复了其他目标平台上的各种错误。以及纠正了一些文档错误，并且为<code class="language-plaintext">RenderingDevice</code>class 提供了新的文档。</span></p><p>截至目前，与之前的 Godot 4.1.x 版本没有已知的不兼容性。官方鼓励所有用户升级到 4.1.3。</p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgodotengine.org%2Fdownload%2F" target="_blank"><strong>立即下载 Godot 4.1.3</strong></a>或尝试<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Feditor.godotengine.org%2F4.1.3.stable%2F" target="_blank">在线版本的 Godot 编辑器</a>。</p><p>更多详情可查看官方公告。</p><p><strong>相关阅读：</strong></p><ul><li><a href="https://www.oschina.net/news/258085/godot-developer-fund" target="_blank">游戏引擎项目 Godot 成立开发基金</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Sat, 04 Nov 2023 02:09:23 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264867/godot-4-1-3-released</guid>
            <link>https://www.oschina.net/news/264867/godot-4-1-3-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Deno 1.38：新增 HTML 文档生成器、支持 HMR]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Deno 1.38 已正式<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeno.com%2Fblog%2Fv1.38" target="_blank">发布</a></u>。</p><p>公告写道，此版本为<code>deno doc</code>命令引入了重大改进，其中包括使用<code>deno doc --html</code>生成静态站点文档的能力。另外改进了 Node.js 兼容性、支持 HMR（模块热更新）。</p><p><strong>主要变化</strong></p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeno.com%2Fblog%2Fv1.38%23deno-doc-updates" target="_blank">改进<code>deno doc</code></a>：新的&nbsp;<code>deno doc --html</code>&nbsp;命令可生成包含项目文档的静态站点。</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeno.com%2Fblog%2Fv1.38%23hot-module-replacement" target="_blank">模块热更新</a>：新的&nbsp;<code>--unstable-hmr</code>&nbsp;flag 将检测变更，重新加载服务器，同时保留状态。</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeno.com%2Fblog%2Fv1.38%23nodejs-compatibility-improvements" target="_blank">改进 Node.js 兼容性</a>：现在从 Node 迁移时，使用 Deno 会更加容易。因为可以使用所选择的 npm 包管理器。通过&nbsp;<code>npm</code>&nbsp;安装 npm 模块并使用 Deno 运行它。</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeno.com%2Fblog%2Fv1.38%23fastest-jsx-transform" target="_blank">快速的 JSX 转换</a>：通过字符串连接而不是对象分配将 JSX 转换速度提高约 7-20 倍</li><li><code>deno run --env</code>&nbsp;：对&nbsp;<code>.env</code>&nbsp;文件的内置支持</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeno.com%2Fblog%2Fv1.38%23websockets-improvements" target="_blank">改进 WebSockets</a>：支持 HTTP/2 上的 RFC8841 Websocket 以及修复错误</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeno.com%2Fblog%2Fv1.38%23deno-task-supports-head-command" target="_blank"><code>deno task</code>&nbsp;支持&nbsp;<code>head</code>&nbsp;命令</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeno.com%2Fblog%2Fv1.38%23vscode-extension-and-language-server" target="_blank">针对 VSCode 扩展和语言服务器的稳定性改进</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fdeno.com%2Fblog%2Fv1.38%23denotest-support-in-the-repl" target="_blank">REPL 中的&nbsp;<code>Deno.test</code>&nbsp;支持</a>：与 Jupyter 运行良好</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeno.com%2Fblog%2Fv1.38%23jupyter-notebook-updates" target="_blank">Jupyter Notebook 更新</a>：支持富文本 HTML 输出</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeno.com%2Fblog%2Fv1.38%23deno-api-changes" target="_blank"><code>Deno</code>&nbsp;API 变更</a>：&nbsp;<code>Deno.serve</code>&nbsp;现在支持 unix 套接字</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeno.com%2Fblog%2Fv1.38%23web-api-changes" target="_blank">Web API 变更</a>：添加了&nbsp;<code>window.name</code>&nbsp;和&nbsp;<code>EventSource</code>&nbsp;</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeno.com%2Fblog%2Fv1.38%23standard-library-updates" target="_blank">标准库更新</a>：弃用<code>std/http/server.ts</code></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeno.com%2Fblog%2Fv1.38%23granular---unstable--flags" target="_blank">细粒度&nbsp;<code>--unstable-*</code>&nbsp;flags</a>：更好地对内部功能进行标记</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeno.com%2Fblog%2Fv1.38%23performance-improvements" target="_blank">改进性能</a>：当不使用可转移项时，&nbsp;<code>structuredClone</code>&nbsp;现在速度要快得多</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeno.com%2Fblog%2Fv1.38%23v8-120" target="_blank">V8 升级到 12.0</a>：引入&nbsp;<code>Array.fromAsync</code>&nbsp;和&nbsp;<code>Promise.withResolvers</code>&nbsp;</li></ul><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeno.com%2Fblog%2Fv1.38" target="_blank">详情</a>。</p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 03 Nov 2023 03:18:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264739/deno-1-38</guid>
            <link>https://www.oschina.net/news/264739/deno-1-38</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Visual Studio Code 1.84 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff; color:#333333">Visual Studio Code 1.84 现已发布，具体更新内容如下：</span></p><ul><li><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_84%23_accessibility" target="_blank">更多音频提示</a>&nbsp;</strong>- 新的音频提示可指示清除、保存和格式化活动。</li><li><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_84%23_workbench" target="_blank">自定义活动栏位置</a>&nbsp;</strong>- 将活动栏移至顶部以紧凑显示。</li></ul><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-a02489be8fd5595d8dc82350d192b5472a2.gif" width="400" referrerpolicy="no-referrer"></p><ul><li><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_84%23_hide-editor-tabs" target="_blank">隐藏编辑器选项卡</a>&nbsp;</strong>- 显示多个、单个或不显示编辑器选项卡。</li></ul><p><img alt="" height="207" src="https://oscimg.oschina.net/oscnet/up-398420c769b24caa7db39e15dfc6428ae6b.gif" width="500" referrerpolicy="no-referrer"></p><ul><li><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_84%23_maximize-editor-group" target="_blank">最大化 Editor Groups</a>&nbsp;</strong>- 快速展开活动的 Editor Group。</li></ul><p><img alt="" height="318" src="https://oscimg.oschina.net/oscnet/up-f7316c4fd42416ea0211da2c2149213e46f.gif" width="500" referrerpolicy="no-referrer"></p><ul><li><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_84%23_python" target="_blank">Python 改进</a>&nbsp;</strong>- 更好地在终端中运行代码，更轻松地创建虚拟环境。</li><li><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_84%23_fastapi-tutorial" target="_blank">FastAPI 教程</a>&nbsp;</strong>- 了解如何使用 VS Code 开发 Python FastAPI 应用程序。</li><li><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_84%23_gradle-for-java" target="_blank">Gradle for Java</a></strong>&nbsp;- 改进了对 Java Gradle 项目的支持。</li></ul><p><img height="104" src="https://oscimg.oschina.net/oscnet/up-239bfee4e76f665ff20e9fda7fc279bbaea.png" width="500" referrerpolicy="no-referrer"></p><ul><li><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_84%23_github-copilot" target="_blank">Preview：GitHub Copilot</a></strong>&nbsp;- 聊天「代理」，生成 commit 消息，终端支持。</li></ul><p>更多详情可<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_84" target="_blank">查看官方公告</a>。&nbsp;</p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 03 Nov 2023 02:48:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264731/vs-code-1-84-released</guid>
            <link>https://www.oschina.net/news/264731/vs-code-1-84-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[商城系统平台端更新登录、经营状况、平台管理模块]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div><div><div><div><p style="margin-left:0; margin-right:0"><strong>登录功能模块</strong></p></div><div><ul><li><span>密码登录：输入框提示语调整为【请输入手机号，或 账号】</span></li><li><strong><span style="color:#df2a3f">账号、密码</span></strong><span> 位数：限定为 11 位</span></li><li><span>在线时长：token 有效期 30 天 ，避免频繁登录</span></li><li><span>重复登录：处于登录状态打开后直接进入系统即可，目前操作用户名和密码没有错误但登录提示【用户名或密码错误】需要清缓存才行</span></li><li><span>店铺名称：需将店铺名称显示全</span></li><li><span>重置：</span><strong><span style="color:#df2a3f">所有搜索功能模块中都加上【重置】功能</span></strong></li></ul><p style="margin-left:0; margin-right:0"><strong><span>修改密码</span></strong></p><ul><li><span>将待修改用户的手机号显示出来，取消脱敏展示样式</span></li><li><span>验证码：改为与登录操作一致滑动图片将验证码填入框内</span></li></ul></div><p><strong>经营概况模块</strong></p><div><span>日注册用户数：将【今日访客数】改为【今日注册用户数】，即今日注册成功的总用户数</span></div><p>&nbsp;</p><p><strong>平台管理模块</strong></p></div><div><ul><li><span>菜单顺序：店铺管理、供应商管理、门店管理</span></li><li><span>删除：当删除【店铺、供应商】时，需同步将【签约类目、自己的商品】一并删除</span></li></ul><p style="margin-left:0; margin-right:0"><strong><span>店铺管理</span></strong></p><ul><li><span>店铺评分：将【商品评分】改为【店铺评分】，店铺评分是指本店已售评价商品的平均分</span></li><li><span>店铺 ID：将【ID】改为【店铺 ID】</span></li><li><span>添加类目：添加类目中需增加百分比符号显示</span></li></ul></div></div></div></div>
                                    ]]>
            </description>
            <pubDate>Fri, 03 Nov 2023 01:46:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264722</guid>
            <link>https://www.oschina.net/news/264722</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Light Chaser v0.0.6 已经发布，大屏数据可视化设计器]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Light Chaser v0.0.6 已经发布，大屏数据可视化设计器</p><p>此版本更新内容包括：</p><ol><li>新增 json schema ui 解析器</li><li>新增蓝图事件交互功能</li></ol><p>详情查看：<a href="https://gitee.com/xiaopujun/light-chaser/releases/v0.0.6">https://gitee.com/xiaopujun/light-chaser/releases/v0.0.6</a></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 01 Nov 2023 23:52:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264864/light-chaser-0-0-6-released</guid>
            <link>https://www.oschina.net/news/264864/light-chaser-0-0-6-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Semi Design v2.46.0 发布，抖音企业级 UI 库]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">Semi Design 是现代、全面、灵活的设计系统和 UI 库，由字节跳动抖音前端与 UED 团队设计、开发并维护，是一款包含设计语言、React 组件、主题等开箱即用的中后台解决方案，可用于快速搭建美观的 React 应用。</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="color:#000000"><span style="background-color:#ffffff">Semi Design v2.46.0 现已发布，</span>此版本带来如下更新内容：</span></p><ul><li>【Fix】 
  <ul><li>修复高度不足以容纳一个事件时，更新事件后不展示 「还有 x 项」问题</li><li>修复 AutoComplete 中 onBlur 和 onSelect 的调用顺序不一致问题<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FDouyinFE%2Fsemi-design%2Fissues%2F1880" target="_blank">#1880</a></li><li>修复 Select 使用 JSX 传入 Option 时，Option 传入的 key 未在渲染时生效的问题</li></ul></li></ul><p>更新说明：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FDouyinFE%2Fsemi-design%2Freleases%2Ftag%2Fv2.46.0" target="_blank">https://github.com/DouyinFE/semi-design/releases/tag/v2.46.0</a></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 01 Nov 2023 09:19:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264816/semi-design-2-46-0-released</guid>
            <link>https://www.oschina.net/news/264816/semi-design-2-46-0-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[SQL 质量管理 | SQLE 2.2310.0 来啦！]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="margin-left:0; margin-right:0; text-align:center"><strong><span style="color:#000000">📢</span></strong><strong>SQLE 3.0 版本已经发布</strong></p><p style="margin-left:0; margin-right:0; text-align:center"><strong><strong><span style="color:#000000">🤗&nbsp;</span></strong></strong><strong>全新的界面设计</strong></p><p style="margin-left:0; margin-right:0; text-align:center"><strong><strong><strong><span style="color:#000000">✨ 欢</span></strong></strong>迎体验</strong></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:center"><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzU2NzgwMTg0MA%3D%3D%26mid%3D2247511821%26idx%3D1%26sn%3D81daa00d15667105404e471c93088773%26chksm%3Dfc954d92cbe2c484444e7790ebbd63c74a96dae5f76631da293c9da470c4da725223fd2aae48%26scene%3D21%23wechat_redirect" target="_blank">SQLE 3.0 正式发布！SQL 质量提升官持续招募中</a></p><p style="color:black; margin-left:0; margin-right:0; text-align:left"><span style="background-color:#ff6827; color:#ffffff"><strong><span>本期发布的是 SQLE 2.x 版本的最终正式版。接下来，我们将全力投入到 SQLE 3.x 版本的功能开发和产品支持中。为了获得最新的功能和持续的产品支持，我们强烈建议您尽快升级到 SQLE 3.x 版本。感谢您一直以来的支持和配合！</span></strong></span></p><p style="margin-left:0; margin-right:0">&nbsp;</p><h1><span style="background-color:#2584b5">1</span><span style="color:#2584b5">什么是 SQLE？</span></h1><p style="color:black; margin-left:0; margin-right:0"><span>SQLE 是一款全方位的 SQL 质量管理平台，覆盖开发至生产环境的 SQL 审核和管理。支持主流的开源、商业、国产数据库，为开发和运维提供流程自动化能力，提升上线效率，提高数据质量。</span></p><p style="color:black; margin-left:0; margin-right:0"><img alt="" height="654" src="https://oscimg.oschina.net/oscnet/up-6a34966059442f5f6fc3c5b4c82449177e8.jpg" width="1475" referrerpolicy="no-referrer"></p><p style="color:black; margin-left:0; margin-right:0"><span>更多功能特性及使用场景：《</span><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzU2NzgwMTg0MA%3D%3D%26mid%3D2247511712%26idx%3D1%26sn%3D6919bd72d338367b49af6eabcf8f30cb%26chksm%3Dfc954c3fcbe2c529696cc3a779e8baf74646830ad9ef6a83a78d8664f5e2b8ec2d2d7b450a61%26scene%3D21%23wechat_redirect" target="_blank"><span>让所有人不再为 SQL 问题头疼</span></a><span>》</span></p><p style="color:black; margin-left:0; margin-right:0"><span>以下是 SQLE 2.2310.0 版本的主要功能介绍和 Release Notes。</span></p><h1><span style="background-color:#2584b5">2</span><span style="color:#2584b5">主要功能介绍</span></h1><h2><span style="color:#2584b5">社区版</span></h2><h3><span style="color:#2584b5">1、CloudBeaver 支持自主审核</span></h3><p style="margin-left:0; margin-right:0; text-align:left"><span>使用 CloudBeaver 客户端执行 SQL 前，您可以便捷地进行审核操作，快速获取审核结果。通过审核结果，您可以优化 SQL 语句，也可以查阅相关规则的知识库，获取处理经验。CloudBeaver 还会根据数据源上配置的 SQL 执行等级来限制风险 SQL 执行，以增强数据安全性。以下是 CloudBeaver 审核功能的简单效果示例：</span></p><p style="margin-left:0; margin-right:0; text-align:left"><span>1. 输入 SQL 后，点击&nbsp;<strong>SQL 审核&nbsp;</strong>图标，对编写的 SQL 进行规则审核，获取优化建议；</span></p><p style="margin-left:0; margin-right:0; text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-feaf50976b191ca7872f78e2862afd5a3db.png" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0; text-align:center"><span>SQL 审核</span></p><p style="margin-left:0; margin-right:0; text-align:center">&nbsp;</p><p style="margin-left:0; margin-right:0; text-align:left"><span>2. 点击&nbsp;<strong>执行 SQL</strong>，CloudBeaver 将根据数据源上配置的 SQL 执行等级拦截问题 SQL；</span></p><p style="margin-left:0; margin-right:0; text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-111c06485c326879ebeeaf6cd3ec768a817.png" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0; text-align:center"><span>SQL 拦截</span></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:left">&nbsp;</p><h3><span style="color:#2584b5">2、支持从 Git 仓库内的 Java 代码文件中提取 SQL</span></h3><p style="margin-left:0; margin-right:0; text-align:left"><span>本次发版丰富了 SQL 来源的支持度——从 Java 代码中提取 SQL。</span></p><p style="margin-left:0; margin-right:0; text-align:left"><span>在使用&nbsp;<strong>SQL 审核</strong>&nbsp;时，如果使用的 SQL 来源是 Git 仓库，则 SQLE 会从 Git 仓库里的 Java 代码中提取 SQL 并进行审核。以下是简单的试用：</span></p><p style="margin-left:0; margin-right:0; text-align:left"><span>本例中，Git 仓库中存在一个 Java 代码文件，文件有如下内容：</span></p><p style="margin-left:0; margin-right:0; text-align:center"><img alt="" height="1042" src="https://oscimg.oschina.net/oscnet/up-af464f0c661ed8b77af0df66f3048485887.png" width="2072" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0; text-align:center"><span>Java 代码抓取</span></p><p style="margin-left:0; margin-right:0; text-align:center">&nbsp;</p><p style="margin-left:0; margin-right:0; text-align:left"><span>进入&nbsp;<strong>SQL 审核</strong>，选择 SQL 来源。</span></p><p style="margin-left:0; margin-right:0; text-align:center"><img alt="" height="491" src="https://oscimg.oschina.net/oscnet/up-1d23b4f4d18f67751b14ebca4687deb1dcf.png" width="1143" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0; text-align:center"><span>SQL 来源选择</span></p><p style="margin-left:0; margin-right:0; text-align:center">&nbsp;</p><p style="margin-left:0; margin-right:0; text-align:left"><span>点击&nbsp;<strong>审核</strong>，审核结果中可以查看到代码中的 SQL。</span></p><p style="margin-left:0; margin-right:0; text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-829613d5bb6a8ca16be1b50b4768502e4f8.png" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0; text-align:center"><span>查看代码中的 SQL</span></p><p style="margin-left:0; margin-right:0; text-align:left">&nbsp;</p><h2><span style="color:#2584b5">企业版</span></h2><h3><span style="color:#2584b5">1、Jetbrains 插件支持查看规则知识库</span></h3><p style="margin-left:0; margin-right:0; text-align:left"><span>为了帮助开发人员提高效率，我们提供的 Jetbrains 插件新增查看规则知识库的功能。</span></p><p style="margin-left:0; margin-right:0; text-align:left"><span>在使用 IDEA 开发的过程中，不需要打开 SQLE 页面，在 IDE 中就可以查看相关规则的知识库内容，快速获取更详细的优化建议。一起来看一下吧：</span></p><p style="margin-left:0; margin-right:0; text-align:left"><span>使用 SQLE 插件审核 SQL，在审核结果中点击新增的「<strong>点击查看知识库</strong>」。</span></p><p style="margin-left:0; margin-right:0; text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-7f7aaaa9270b4b06b620987f26ee79b0e91.png" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0; text-align:center"><span>点击查看知识库</span></p><p style="margin-left:0; margin-right:0; text-align:center">&nbsp;</p><p style="margin-left:0; margin-right:0; text-align:left"><span>即可查看对应审核规则的知识库。</span></p><p style="margin-left:0; margin-right:0; text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-baeebfa20338ffac31c7fa154dce7f6d75e.png" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0; text-align:center"><span>知识库效果</span></p><h3><span style="color:#2584b5">2、为 MySQL&amp;TDSQL 填充默认的规则知识库</span></h3><p style="margin-left:0; margin-right:0; text-align:left"><span>通过提供预定义的规则最佳实践示例，我们旨在丰富用户对规则的理解，并帮助私有云用户进行规则理解沉淀，从而更好地管理和优化数据库性能。</span></p><p style="margin-left:0; margin-right:0; text-align:left">&nbsp;</p><h1><span style="background-color:#2584b5">3&nbsp;</span><span style="color:#2584b5">2.2310.0 Release 信息</span></h1><h2><span style="color:#2584b5">社区版</span></h2><h3><span style="color:#2584b5">新特性：</span></h3><ul><li><p><span>[#1893] SQL 工作台支持直接审核 SQL</span></p></li><li><p><span>[#1905] 支持从 Java 代码中提取 SQL</span></p></li></ul><h3><span style="color:#2584b5">优化：</span></h3><ul><li><p><span>[#1947] 延长插件启动超时时间</span></p></li><li><p><span>[#1921][#1918] 优化审核规则规则：增加适用场景及性能优化</span></p></li><li><p><span>[#1884] 支持 CloudBeaver 23.2.1 版本</span></p></li><li><p><span>[#1889] 防止「SQL 审核」页面重复误点击审核的情况</span></p></li></ul><h3><span style="color:#2584b5">Bug 修复：</span></h3><ul><li><p><span>[#1936] 修复规则「不建议创建冗余索引」误报的问题</span></p></li><li><p><span>[#1925] 修复审核规则在部分场景下发生 panic 的问题</span></p></li><li><p><span>[#1924] 解析器优化，支持 MySQL 所有字符集的解析</span></p></li><li><p><span>[#1923] 修复审核包含特殊字符的 SQL 时发生程序卡住的问题</span></p></li><li><p><span>[#1917][#1913] 修复审核规则未触发的问题</span></p></li><li><p><span>[#1903] 修复审核中会出现「affectRowNum error」报错的问题</span></p></li><li><p><span>[#1899] 修复审核结果展示的规则信息错误的问题</span></p></li><li><p><span>[#1888] 修复 MySQL 规则缺陷</span></p></li><li><p><span>[#1886] 修复「SQL 审核」记录中审核结果展示错误的问题</span></p></li><li><p><span>[#1075] 修复扫描任务中指纹聚合问题</span></p></li><li><p><span>[#1965][#1926] 修复白名单在某些情况下不生效的问题</span></p></li></ul><h2><span style="color:#2584b5">企业版</span></h2><h3><span style="color:#2584b5">新特性：</span></h3><ul><li><p><span>[actiontech/sqle-ee/issues/1059] 提供默认的规则知识库&nbsp;</span></p></li><li><p><span>[actiontech/sqle-ee/issues/1114] Jetbrains 插件支持根据审核结果查看规则知识库</span></p></li></ul><h3><span style="color:#2584b5">优化：</span></h3><ul><li><p><span>[actiontech/sqle-ee/issues/1131] SQL 管控只同步带标签的 SQL 审核记录</span></p></li><li><p><span>[actiontech/sqle-ee/issues/1119] SQL 上传接口支持通过关键字过滤 SQL</span></p></li><li><p><span>[actiontech/sqle-ee/issues/1080] 允许所有登录用户查看规则知识库</span></p></li><li><p><span>[actiontech/sqle-ee/issues/1052] 支持自定规则使用知识库</span></p></li><li><p><span>[actiontech/sqle-ee/issues/1013] SQL 管控优化</span></p></li><li><p><span>[actiontech/sqle-ee/issues/1080] 允许所有登录用户查看规则知识库</span></p></li></ul><h3><span style="color:#2584b5">Bug 修复：</span></h3><ul><li><p><span>[actiontech/sqle-ee/issues/1148] 修复规则「不建议创建冗余索引」误报的问题</span></p></li><li><p><span>[actiontech/sqle-ee/issues/1140] 修复非 admin 用户无法导出 SQL 管控记录的问题</span></p></li><li><p><span>[actiontech/sqle-ee/issues/1091] 解决 scannerd 上传的慢查询语句存在冗余信息的问题</span></p></li></ul><h1><span style="background-color:#2584b5">4</span><span style="color:#2584b5">体验环境</span></h1><p style="color:black; margin-left:0; margin-right:0"><span>我们同时提供了 SQLE 社区版和企业版的线上 DEMO 环境，可以通过访问社区官网获取入口，<strong>目前已更新为 SQLE 3.0 版本。</strong></span></p><p style="color:black; margin-left:0; margin-right:0"><img alt="" height="1277" src="https://oscimg.oschina.net/oscnet/up-ab8b1bf3e8efad9e39002b5877d8c092e3a.png" width="2113" referrerpolicy="no-referrer"></p><p style="color:black; margin-left:0; margin-right:0"><span>社区版：http://demo.sqle.actionsky.com/</span></p><p style="color:black; margin-left:0; margin-right:0"><span>企业版：http://demo.sqle.actionsky.com:8889/</span></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:left"><span>登录信息：用户名 admin 密码 admin。登录后您可以轻松体验 SQLE 的丰富功能。</span></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:left"><span>部署文档：https://actiontech.github.io/sqle-docs/docs/deploy-manual/intro</span></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:left"><span>🤗 请将任何 SQLE 的 Bug、问题和需求提交到 SQLE GitHub Issue。</span></p><h1><span style="background-color:#2584b5">5&nbsp;</span><span style="color:#2584b5">SQL&nbsp;质量提升官招募</span></h1><p style="color:black; margin-left:0; margin-right:0; text-align:left"><span>为了感谢广大社区成员对 SQLE 的关注、使用和贡献，社区特别企划<span>&nbsp;</span><strong>1024 特别企划 | SQL 质量提升官招募活动</strong>，快来留下您的使用体验！</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:left"><span style="background-color:#2584b5"><img alt="" height="2531" src="https://oscimg.oschina.net/oscnet/up-12c8a040cbcc85b67b0d606a57b49bbfb02.png" width="500" referrerpolicy="no-referrer"></span></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 01 Nov 2023 08:52:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264804/sqle-2-2310-0</guid>
            <link>https://www.oschina.net/news/264804/sqle-2-2310-0</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Libreboot 20231101 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">Libreboot 是一个自由开源的 BIOS/UEFI 替代品，基于 Coreboot，适用于 x86 和 ARM 机器。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><span><span><span style="color:#404040"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>随着开发人员努力改进硬件支持，</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span><span><span style="color:#404040"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>Libreboot 20231101 现已作为更新发布，引入了对笔记本电脑和台式机新主板的支持：</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><ul><li>ThinkPad X201 支持</li><li>修正 Dell Latitude E6400/E6430 GRUB 键盘初始化相关问题。</li><li>修正 Dell Latitude E6400 冷启动相关问题，启动更稳定。</li><li>修正 Sandybridge, Ivybridge 和 Haswell 的 S3 挂起/恢复相关问题 (ThinkPad X220, X230, T440p)。</li><li>修正在使用某些键盘时 GRUB"Unknown key"错误信息刷屏问题。</li></ul><p>有关更改的完整列表，请查看&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flibreboot.org%2Fnews%2Flibreboot20231101.html" target="_blank">发布公告页面</a>。</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 01 Nov 2023 07:54:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264792/libreboot-20231101</guid>
            <link>https://www.oschina.net/news/264792/libreboot-20231101</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[wmproxy 0.2.0 发布,支持反向代理 / 正向代理 / 内网穿透等功能,]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">0.2.0 功能:</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">1. 实现内存缓冲区, 防止内存增长过多</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">2. 实现流量控制, 可限制某一请求占用过多流量</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">&nbsp;</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>已实现初步的反向代理支持，包含主动式健康检查，四层代理，七层代理，及配置的热加载等功能</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><code>wmproxy</code><span>&nbsp;</span>将用<span>&nbsp;</span><code>Rust</code><span>&nbsp;</span>实现<span>&nbsp;</span><code>http/https</code><span>&nbsp;</span>代理，<code>socks5</code><span>&nbsp;</span>代理，反向代理，静态文件服务器，后续将实现<span>&nbsp;</span><code>websocket</code><span>&nbsp;</span>代理，内外网穿透等，会将实现过程分享出来，感兴趣的可以一起造个轮子</p><h2>📦 安装 &amp; 🏃 使用</h2><h3>安装</h3><div><div><pre><span><span style="color:#6f42c1">cargo</span><span><span style="color:#032f62">install </span></span><span style="color:#032f62">wmproxy</span></span></pre></div></div><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">OR</p><div><div><pre><span><span style="color:#6f42c1">git</span><span style="color:#032f62">clone https://github.com/tickbh/wmproxy</span></span><span><span><span style="color:#6f42c1">cd</span></span><span style="color:#032f62">wmproxy</span></span><span><span style="color:#6f42c1">cargo</span><span><span style="color:#032f62">install</span></span><span style="color:#032f62"></span><span><span style="color:#032f62">--path</span></span><span style="color:#032f62"></span><span><span style="color:#032f62">.</span></span></span></pre></div></div><h3>使用</h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">默认端口为 8090 端口，默认监听地址为 127.0.0.1</p><div><div><pre><span><span><span style="color:#6a737d"># 直接通用默认参数</span></span></span><span><span style="color:#6f42c1">wmproxy</span></span><span style="color:#6a737d"></span><span><span><span style="color:#6a737d"># 设置账号密码</span></span></span><span><span style="color:#6f42c1">wmproxy</span><span><span style="color:#032f62">-b</span></span><span style="color:#032f62"> 0.0.0.0:8090 </span><span><span style="color:#032f62">--user</span></span><span style="color:#032f62"> wmproxy </span><span><span style="color:#032f62">--pass</span></span><span style="color:#032f62"> wmproxy</span></span><span style="color:#6a737d"></span><span><span><span style="color:#6a737d"># 其它指令</span></span></span><span><span style="color:#6f42c1">wmproxy</span><span><span style="color:#032f62">--help</span></span></span><span style="color:#6a737d"></span><span><span><span style="color:#6a737d">#配置文件版启动</span></span></span><span><span style="color:#6f42c1">wmproxy</span><span><span style="color:#032f62">-c</span></span><span style="color:#032f62"> config/client.yaml</span></span></pre></div></div><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">启动二级代理</p><ol><li>在本地启动代理</li></ol><div><div><pre><span><span style="color:#d73a49">wmproxy</span><span><span style="color:#d73a49">-b</span></span> 127<span style="color:#6f42c1">.0</span><span style="color:#6f42c1">.0</span><span style="color:#6f42c1">.1</span><span><span style="color:#d73a49">-p</span></span> 8090 <span><span style="color:#d73a49">-S</span></span> 127<span style="color:#6f42c1">.0</span><span style="color:#6f42c1">.0</span><span style="color:#6f42c1">.1</span><span style="color:#6f42c1">:8091</span><span><span style="color:#d73a49">--ts</span></span></span></pre></div></div><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">或者</p><div><div><pre><span><span style="color:#6f42c1">wmproxy</span><span><span style="color:#032f62">-c</span></span><span style="color:#032f62"> config/client.yaml</span></span></pre></div></div><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">配置文件如下:</p><div><div><pre><span><span><span style="color:#6f42c1">proxy</span></span><span><span style="color:#6f42c1">:</span></span></span><span><span><span style="color:#6a737d"># 连接服务端地址</span></span></span><span><span><span style="color:#6f42c1">server</span></span><span><span style="color:#6f42c1">:</span></span><span><span>127.0</span><span>.0</span><span>.1</span><span style="color:#032f62">:8091</span></span></span><span><span><span style="color:#6a737d"># 连接服务端是否加密</span></span></span><span><span><span style="color:#6f42c1">ts</span></span><span><span style="color:#6f42c1">:</span></span><span><span style="color:#005cc5">true</span></span></span><span><span><span style="color:#6a737d"># 内网映射配置的数组</span></span></span><span><span><span style="color:#6f42c1">mappings</span></span><span><span style="color:#6f42c1">:</span></span></span><span><span><span style="color:#6a737d">#将 localhost 的域名转发到本地的 127.0.0.1:8080</span></span></span><span><span><span style="color:#005cc5">-</span></span><span><span style="color:#6f42c1">name</span></span><span><span style="color:#6f42c1">:</span></span><span><span style="color:#032f62">web</span></span></span><span><span><span style="color:#6f42c1">mode</span></span><span><span style="color:#6f42c1">:</span></span><span><span style="color:#032f62">http</span></span></span><span><span><span style="color:#6f42c1">local_addr</span></span><span><span style="color:#6f42c1">:</span></span><span><span>127.0</span><span>.0</span><span>.1</span><span style="color:#032f62">:8080</span></span></span><span><span><span style="color:#6f42c1">domain</span></span><span><span style="color:#6f42c1">:</span></span><span><span style="color:#032f62">localhost</span></span></span><span><span><span style="color:#6f42c1">headers</span></span><span><span style="color:#6f42c1">:</span></span></span><span><span><span style="color:#005cc5">-</span></span><span><span style="color:#032f62">[</span></span><span><span style="color:#032f62">proxy</span></span><span><span style="color:#032f62">,</span></span><span><span style="color:#032f62">+</span></span><span><span style="color:#032f62">,</span></span><span><span style="color:#032f62">x-forward-for</span></span><span><span style="color:#032f62">,</span></span><span><span style="color:#032f62">$client_ip</span></span><span><span style="color:#032f62">]</span></span></span><span><span><span style="color:#005cc5">-</span></span><span><span style="color:#032f62">[</span></span><span><span style="color:#032f62">proxy</span></span><span><span style="color:#032f62">,</span></span><span><span style="color:#032f62">+</span></span><span><span style="color:#032f62">,</span></span><span><span style="color:#032f62">from</span></span><span><span style="color:#032f62">,</span></span><span><span style="color:#032f62">$url</span></span><span><span style="color:#032f62">]</span></span></span><span><span><span style="color:#005cc5">-</span></span><span><span style="color:#032f62">[</span></span><span><span style="color:#032f62">+</span></span><span><span style="color:#032f62">,</span></span><span><span style="color:#032f62">key</span></span><span><span style="color:#032f62">,</span></span><span><span style="color:#032f62">value</span></span><span><span style="color:#032f62">]</span></span></span><span><span><span style="color:#005cc5">-</span></span><span><span style="color:#032f62">[</span></span><span><span style="color:#032f62">-</span></span><span><span style="color:#032f62">,</span></span><span><span style="color:#032f62">etag</span></span><span><span style="color:#032f62">]</span></span></span><span><span><span style="color:#005cc5">-</span></span><span><span style="color:#032f62">[</span></span><span><span style="color:#032f62">+</span></span><span><span style="color:#032f62">,</span></span><span><span style="color:#032f62">last-modified</span></span><span><span style="color:#032f62">,</span></span><span><span style="color:#032f62">aaaa</span></span><span><span style="color:#032f62">]</span></span></span><span><span><span style="color:#6a737d">#将 tcp 的流量无条件转到 127.0.0.1:8080</span></span></span><span><span><span style="color:#005cc5">-</span></span><span><span style="color:#6f42c1">name</span></span><span><span style="color:#6f42c1">:</span></span><span><span style="color:#032f62">tcp</span></span></span><span><span><span style="color:#6f42c1">mode</span></span><span><span style="color:#6f42c1">:</span></span><span><span style="color:#032f62">tcp</span></span></span><span><span><span style="color:#6f42c1">local_addr</span></span><span><span style="color:#6f42c1">:</span></span><span><span>127.0</span><span>.0</span><span>.1</span><span style="color:#032f62">:8080</span></span></span><span><span><span style="color:#6f42c1">domain</span></span><span><span style="color:#6f42c1">:</span></span></span></pre></div></div><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">因为纯转发，所以在当前节点设置账号密码没有意义<span>&nbsp;</span><code>-S</code><span>&nbsp;</span>表示连接到的二级代理地址，<strong>有该参数则表示是中转代理，否则是末端代理。</strong><code>--ts</code><span>&nbsp;</span>表示连接父级代理的时候需要用加密的方式链接</p><ol><li>在远程启动代理</li></ol><div><div><pre><span><span style="color:#032f62">wmproxy</span><span><span style="color:#032f62">--user</span></span><span style="color:#032f62">proxy</span><span><span style="color:#032f62">--pass</span></span><span style="color:#032f62">proxy</span><span><span style="color:#032f62">-b</span></span><span>0.0</span><span>.0</span><span>.0</span><span><span style="color:#032f62">-p</span></span><span>8091</span><span><span style="color:#032f62">--tc</span></span></span></pre></div></div><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">或者</p><div><div><pre><span><span style="color:#6f42c1">wmproxy</span><span><span style="color:#032f62">-c</span></span><span style="color:#032f62"> config/server.yaml</span></span></pre></div></div><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">配置文件如下:</p><div><div><pre><span><span><span style="color:#6f42c1">proxy</span></span><span><span style="color:#6f42c1">:</span></span></span><span><span><span style="color:#6a737d">#绑定的 ip 地址</span></span></span><span><span><span style="color:#6f42c1">bind_addr</span></span><span><span style="color:#6f42c1">:</span></span><span><span>127.0</span><span>.0</span><span>.1</span><span style="color:#032f62">:8091</span></span></span><span><span><span style="color:#6a737d">#代理支持的功能，1 为 http，2 为 https，4 为 socks5</span></span></span><span><span><span style="color:#6f42c1">flag</span></span><span><span style="color:#6f42c1">:</span></span><span><span>7</span></span></span><span><span><span style="color:#6a737d">#内网映射 http 绑定地址</span></span></span><span><span><span style="color:#6f42c1">map_http_bind</span></span><span><span style="color:#6f42c1">:</span></span><span><span>127.0</span><span>.0</span><span>.1</span><span style="color:#032f62">:8001</span></span></span><span><span><span style="color:#6a737d">#内网映射 tcp 绑定地址</span></span></span><span><span><span style="color:#6f42c1">map_tcp_bind</span></span><span><span style="color:#6f42c1">:</span></span><span><span>127.0</span><span>.0</span><span>.1</span><span style="color:#032f62">:8002</span></span></span><span><span><span style="color:#6a737d">#内网映射 https 绑定地址</span></span></span><span><span><span style="color:#6f42c1">map_https_bind</span></span><span><span style="color:#6f42c1">:</span></span><span><span>127.0</span><span>.0</span><span>.1</span><span style="color:#032f62">:8003</span></span></span><span><span><span style="color:#6a737d">#内网映射的公钥证书，为空则是默认证书</span></span></span><span><span><span style="color:#6f42c1">map_cert</span></span><span><span style="color:#6f42c1">:</span></span></span><span><span><span style="color:#6a737d">#内网映射的私钥证书，为空则是默认证书</span></span></span><span><span><span style="color:#6f42c1">map_key</span></span><span><span style="color:#6f42c1">:</span></span></span><span><span><span style="color:#6a737d">#接收客户端是为是加密客户端</span></span></span><span><span><span style="color:#6f42c1">tc</span></span><span><span style="color:#6f42c1">:</span></span><span><span style="color:#005cc5">true</span></span></span><span><span><span style="color:#6a737d">#当前服务模式，server 为服务端，client 为客户端</span></span></span><span><span><span style="color:#6f42c1">mode</span></span><span><span style="color:#6f42c1">:</span></span><span><span style="color:#032f62">server</span></span></span></pre></div></div><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><code>--tc</code><span>&nbsp;</span>表示接收子级代理的时候需要用加密的方式链接，可以<span>&nbsp;</span><code>--cert</code><span>&nbsp;</span>指定证书的公钥，<code>--key</code><span>&nbsp;</span>指定证书的私钥，<code>--domain</code><span>&nbsp;</span>指定证书的域名，如果不指定，则默认用自带的证书参数</p><blockquote><p style="margin-left:0; margin-right:0">至此通过代理访问的，我们已经没有办法得到真正的请求地址，只能得到代理发起的请求</p></blockquote><h3>代理间的认证</h3><blockquote><p style="margin-left:0; margin-right:0">目前提供了两种认证双式，<code>two_way_tls</code><span>&nbsp;</span>开启客户端的证书认证信息，另一种服务端配置了<span>&nbsp;</span><code>username</code><span>&nbsp;</span>和<span>&nbsp;</span><code>password</code><span>&nbsp;</span>即需要客户端配置相同的用户密码才能启用认证信息，两种方式可叠加使用或者单独使用。 配置添加如下:</p></blockquote><div><div><pre><span><span><span style="color:#6f42c1">proxy</span></span><span><span style="color:#6f42c1">:</span></span></span><span><span><span style="color:#6f42c1">two_way_tls</span></span><span><span style="color:#6f42c1">:</span></span><span><span style="color:#005cc5">true</span></span></span><span><span><span style="color:#6f42c1">username</span></span><span><span style="color:#6f42c1">:</span></span><span><span style="color:#032f62">wmproxy</span></span></span><span><span><span style="color:#6f42c1">password</span></span><span><span style="color:#6f42c1">:</span></span><span><span style="color:#032f62">wmproxy</span></span></span></pre></div></div><h1>🚥 路线图</h1><h3>socks5</h3><ul><li>IPV6 支持</li><li><code>SOCKS5</code><span>&nbsp;</span>验证方式 
  <ul><li><code>NOAUTH</code></li><li><code>USERPASS</code></li></ul></li><li><code>SOCKS5</code><span>&nbsp;</span>Commands 
  <ul><li><code>CONNECT</code></li><li><code>UDP ASSOCIATE</code></li></ul></li></ul><h3>http/https</h3><ul><li>IPV6 支持</li></ul><h3>内网穿透</h3><ul><li>Http 支持</li><li>Https 支持</li><li>Tcp 支持</li></ul><h3>反向代理</h3><ul><li>静态文件服务器</li><li>被动健康检查</li><li>主动健康检查</li><li>配置热加载</li><li>负载均衡</li></ul><h4>支持功能</h4><ul><li>修改 HTTP 请求 Header</li><li>支持 HTTP2 的内网穿透</li></ul></div>
                                    ]]>
            </description>
            <pubDate>Wed, 01 Nov 2023 06:02:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264760/wmproxy-0-2-0-released</guid>
            <link>https://www.oschina.net/news/264760/wmproxy-0-2-0-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[NativeScript 8.6.1 发布，跨平台原生应用框架]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>NativeScript 8.6.1&nbsp;<span style="background-color:#ffffff; color:#333333">现已发布。NativeScript 使用户能够直接从 JavaScript 访问&nbsp;native API。目前，该框架为丰富的移动开发提供了 iOS 和 Android 运行时，并可用于多种不同的用例。</span></p><h4 style="margin-left:0; margin-right:0; text-align:left"><strong>Bug Fixes</strong></h4><ul><li><strong>android：</strong>防止被破坏的对话框 rehydration（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNativeScript%2FNativeScript%2Fissues%2F10414" target="_blank">#10414</a>）（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNativeScript%2FNativeScript%2Fcommit%2F756354952c88c00794e586cbb316928b7f9dbbff" target="_blank">7563549</a>）</li><li><strong>core：</strong>&nbsp;box-shadow「none」处理（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNativeScript%2FNativeScript%2Fissues%2F10405" target="_blank">#10405</a>）（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNativeScript%2FNativeScript%2Fcommit%2Fc23695c477dc1363e4f30fb45d3666c5b8101e4f" target="_blank">c23695c</a>）</li><li><strong>core：</strong>字体变化设置解析器无效轴 (&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNativeScript%2FNativeScript%2Fissues%2F10427" target="_blank">#10427</a>&nbsp;) (&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNativeScript%2FNativeScript%2Fcommit%2F08478556a9e39af9b1524c12e9e330d0a8aae9c7" target="_blank">0847855</a>&nbsp;)</li><li><strong>core：</strong>页面框架引用未在本机视图处理中取消设置（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNativeScript%2FNativeScript%2Fissues%2F10417" target="_blank">#10417</a>）（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNativeScript%2FNativeScript%2Fcommit%2F22c21b7e062b851a635d96aede9c936fb8e9749a" target="_blank">22c21b7</a>）</li><li><strong>css：</strong>防止「unset」和「inset」上的速记解析错误（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNativeScript%2FNativeScript%2Fissues%2F10424" target="_blank">#10424</a>）（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNativeScript%2FNativeScript%2Fcommit%2Fd70b48bbe9c42044204e6887b18f95f628656d69" target="_blank">d70b48b</a>）</li><li><strong>ios：</strong>添加/删除可重用视图的阴影（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNativeScript%2FNativeScript%2Fissues%2F10409" target="_blank">#10409</a>）（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNativeScript%2FNativeScript%2Fcommit%2Fee87b52ac323e220b7b154d27a55cbf4cdbd59c4" target="_blank">ee87b52</a>）</li><li><strong>ios：</strong>视图处理期间「    」的属性掩码（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNativeScript%2FNativeScript%2Fissues%2F10404" target="_blank">#10404</a>）（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNativeScript%2FNativeScript%2Fcommit%2F212d086676a3246fd225f346af2ab920634a7643" target="_blank">212d086</a>）</li><li><strong>ios：</strong>平移变换后的阴影位置（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNativeScript%2FNativeScript%2Fissues%2F10413" target="_blank">#10413</a>）（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNativeScript%2FNativeScript%2Fcommit%2Fc78ea79f0f63f49506120aeef3bc603426c155b2" target="_blank">c78ea79</a>）</li></ul><h4 style="text-align:start"><strong><span><span><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>Features</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></h4><ul><li><strong>android：</strong>允许 shared element&nbsp;转换与 ListView/CollectionView/Pager 一起使用（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNativeScript%2FNativeScript%2Fissues%2F10411" target="_blank">#10411</a>）（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNativeScript%2FNativeScript%2Fcommit%2Fe8c093d7a2ca94edd2f5d35ca3725c7a27e74b74" target="_blank">e8c093d</a>）</li></ul><p>更新说明：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNativeScript%2FNativeScript%2Freleases%2Ftag%2F8.6.1-core" target="_blank">https://github.com/NativeScript/NativeScript/releases/tag/8.6.1-core</a></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 01 Nov 2023 05:52:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264759/nativescript-8-6-1-released</guid>
            <link>https://www.oschina.net/news/264759/nativescript-8-6-1-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[go-carbon v2.2.12 发布，轻量级、语义化、对开发者友好的 Golang 时间处理库]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">carbon 是一个轻量级、语义化、零依赖、对开发者友好的 Golang 时间处理库，支持链式调用、农历和 gorm、xorm 等主流 orm</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">目前已被<span><span>&nbsp;</span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fyinggaozhen%2Fawesome-go-cn%23%25E6%2597%25A5%25E6%259C%259F%25E5%2592%258C%25E6%2597%25B6%25E9%2597%25B4" target="_blank">awesome-go-cn</a><span><span>&nbsp;</span></span>收录，如果您觉得不错，请给个 star 吧</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgolang-module%2Fcarbon" target="_blank">github.com/golang-module/carbon</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/golang-module/carbon" target="_blank">gitee.com/golang-module/carbon</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>更新日志</strong></p><ul><li>增加对荷兰语的支持</li><li>测试文件里测试用例增加索引数字</li><li>去掉<span>&nbsp;</span><code>comparer.go</code><span>&nbsp;</span>文件里<span>&nbsp;</span><code>IsNow</code><span>&nbsp;</span>方法中的打印调试信息</li></ul></div>
                                    ]]>
            </description>
            <pubDate>Wed, 01 Nov 2023 02:24:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264729/go-carbon-2-2-12-released</guid>
            <link>https://www.oschina.net/news/264729/go-carbon-2-2-12-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[OpenNJet 版本更新到 V1.2.3]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span>☘️ </span><span style="background-color:#ffffff; color:#333333">OpenNJet 版本 1.2.3 现已发布，</span><span>该版本修复了一个 stream 流量劫持功能相关的 bug：</span></p><ul><li><span>关于配置 njtmesh_dest 指令，可能导致 stream 代理不能正常通信的问题</span></li></ul><div><div><span style="background-color:rgba(0, 0, 0, 0.04); color:#000000">👉</span><span>了解详情：<a href="https://gitee.com/njet-rd/njet/releases%EF%BB%BF">https://gitee.com/njet-rd/njet/releases﻿</a></span></div></div><p>&nbsp;</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 01 Nov 2023 02:11:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264727/opennjet-1-2-3-released</guid>
            <link>https://www.oschina.net/news/264727/opennjet-1-2-3-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Wow 2.7.1 发布，让领域驱动设计变得触手可得]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>基于 DDD、EventSourcing 的现代响应式 CQRS 架构微服务开发框架</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FAhoo-Wang%2FWow%2Fblob%2Fmvp%2FLICENSE"><img alt="License" src="https://img.shields.io/badge/license-Apache%202-4EB1BA.svg" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FAhoo-Wang%2FWow%2Freleases"><img alt="GitHub release" src="https://img.shields.io/github/release/Ahoo-Wang/Wow.svg" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fapp.codacy.com%2Fgh%2FAhoo-Wang%2FWow%2Fdashboard%3Futm_source%3Dgh%26utm_medium%3Dreferral%26utm_content%3D%26utm_campaign%3DBadge_grade"><img alt="Codacy Badge" src="https://app.codacy.com/project/badge/Grade/cfc724df22db4f9387525258c8a59609" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fcodecov.io%2Fgh%2FAhoo-Wang%2FWow"><img alt="codecov" src="https://codecov.io/gh/Ahoo-Wang/Wow/branch/main/graph/badge.svg?token=uloJrLoQir" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FAhoo-Wang%2FWow"><img alt="Integration Test Status" src="https://github.com/Ahoo-Wang/Wow/actions/workflows/integration-test.yml/badge.svg" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FKotlinBy%2Fawesome-kotlin"><img alt="Awesome Kotlin Badge" src="https://kotlin.link/awesome-kotlin.svg" referrerpolicy="no-referrer"></a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><strong>领域驱动&nbsp;</strong><span>&nbsp;</span>|&nbsp;<span>&nbsp;</span><strong>事件驱动</strong><span>&nbsp;&nbsp;</span>|<span>&nbsp;&nbsp;</span><strong>测试驱动</strong><span>&nbsp;&nbsp;</span>|<span>&nbsp;&nbsp;</span><strong>声明式设计</strong><span>&nbsp;</span>｜<span>&nbsp;</span><strong>响应式编程</strong><span>&nbsp;</span>｜<span>&nbsp;</span><strong>命令查询职责分离</strong><span>&nbsp;</span>｜<span>&nbsp;</span><strong>事件溯源</strong></p><h2>更新内容 🎉 🎉 🎉</h2><ul><li>依赖: 更新<span>&nbsp;</span><code>CosId</code><span>&nbsp;</span>版本<span>&nbsp;</span><code>v2.5.6</code></li><li>依赖: 更新<span>&nbsp;</span><code>kotlin</code><span>&nbsp;</span>版本<span>&nbsp;</span><code>v1.9.20</code></li><li>依赖: 更新<span>&nbsp;</span><code>ksp</code><span>&nbsp;</span>版本<span>&nbsp;</span><code>v1.9.20-1.0.13</code></li><li>依赖: 更新<span>&nbsp;</span><code>detekt</code><span>&nbsp;</span>版本<span>&nbsp;</span><code>v1.23.3</code></li><li>重构: 移除重复的<span>&nbsp;</span><code>BatchResult</code><span>&nbsp;</span>类定义</li></ul><h2>架构图</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-Architecture" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Architecture.svg" referrerpolicy="no-referrer"></p><h2>性能测试 (Example)</h2><ul><li>测试代码：<a href="https://gitee.com/AhooWang/Wow/blob/main/example">Example</a></li><li>测试场景：加入购物车、下单</li><li>命令发送等待模式（<code>WaitStrategy</code>）：<code>SENT</code>、<code>PROCESSED</code></li></ul><h3>部署</h3><ul><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/perf/redis.yaml">Redis</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/perf/mongo.yaml">MongoDB</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/perf/kafka.yaml">Kafka</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/perf/config/mongo_kafka_redis.yaml">Application-Config</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/perf/deployment.yaml">Application-Deployment</a></li></ul><h3>测试报告</h3><h4>加入购物车</h4><ul><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/request/AddCartItem.http">请求</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/document/example/perf/Example.Cart.Add@SENT.pdf">详细报告 (PDF)-SENT</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/document/example/perf/Example.Cart.Add@PROCESSED.pdf">详细报告 (PDF)-PROCESSED</a></li></ul><blockquote><p style="margin-left:0; margin-right:0"><code>WaitStrategy</code>:<span>&nbsp;</span><code>SENT</code></p></blockquote><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="SENT" src="https://gitee.com/AhooWang/Wow/raw/main/document/example/perf/Example.Cart.Add@SENT.png" referrerpolicy="no-referrer"></p><blockquote><p style="margin-left:0; margin-right:0"><code>WaitStrategy</code>:<span>&nbsp;</span><code>PROCESSED</code></p></blockquote><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="PROCESSED" src="https://gitee.com/AhooWang/Wow/raw/main/document/example/perf/Example.Cart.Add@PROCESSED.png" referrerpolicy="no-referrer"></p><h4>下单</h4><ul><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/request/CreateOrder.http">请求</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/document/example/perf/Example.Order.Create@SENT.pdf">详细报告 (PDF)-SENT</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/document/example/perf/Example.Order.Create@PROCESSED.pdf">详细报告 (PDF)-PROCESSED</a></li></ul><blockquote><p style="margin-left:0; margin-right:0"><code>WaitStrategy</code>:<span>&nbsp;</span><code>SENT</code></p></blockquote><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="SENT" src="https://gitee.com/AhooWang/Wow/raw/main/document/example/perf/Example.Order.Create@SENT.png" referrerpolicy="no-referrer"></p><blockquote><p style="margin-left:0; margin-right:0"><code>WaitStrategy</code>:<span>&nbsp;</span><code>PROCESSED</code></p></blockquote><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="PROCESSED" src="https://gitee.com/AhooWang/Wow/raw/main/document/example/perf/Example.Order.Create@PROCESSED.png" referrerpolicy="no-referrer"></p><h2>事件源</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-EventSourcing" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/EventSourcing.svg" referrerpolicy="no-referrer"></p><h2>可观测性</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-Observability" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/OpenTelemetry.png" referrerpolicy="no-referrer"></p><h2>OpenAPI (Spring WebFlux 集成)</h2><blockquote><p style="margin-left:0; margin-right:0">自动注册<span>&nbsp;</span><strong>命令</strong><span>&nbsp;</span>路由处理函数 (<code>HandlerFunction</code>) ，开发人员仅需编写领域模型，即可完成服务开发。</p></blockquote><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-Spring-WebFlux-Integration" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/OpenAPI-Swagger.png" referrerpolicy="no-referrer"></p><h2>测试套件：80%+ 的测试覆盖率轻而易举</h2><blockquote><p style="margin-left:0; margin-right:0">Given -&gt; When -&gt; Expect .</p></blockquote><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-CI-Flow" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/CI-Flow.png" referrerpolicy="no-referrer"></p><h2>前置条件</h2><ul><li>理解<span>&nbsp;</span><strong>领域驱动设计</strong>：《实现领域驱动设计》、《领域驱动设计：软件核心复杂性应对之道》</li><li>理解<span>&nbsp;</span><strong>命令查询职责分离</strong>（CQRS）</li><li>理解<span>&nbsp;</span><strong>事件源架构</strong></li><li>理解<span>&nbsp;</span><strong>响应式编程</strong></li></ul><h2>特性</h2><ul><li><span>&nbsp;</span>Aggregate Modeling 
  <ul><li><span>&nbsp;</span>Single Class</li><li><span>&nbsp;</span>Inheritance Pattern</li><li><span>&nbsp;</span>Aggregation Pattern</li></ul></li><li><span>&nbsp;</span>Saga Modeling 
  <ul><li><span>&nbsp;</span><code>StatelessSaga</code></li></ul></li><li><span>&nbsp;</span>Test Suite 
  <ul><li><span>&nbsp;</span>兼容性测试规范（TCK）</li><li><span>&nbsp;</span><code>AggregateVerifier</code></li><li><span>&nbsp;</span><code>SagaVerifier</code></li></ul></li><li><span>&nbsp;</span>EventSourcing 
  <ul><li>EventStore 
    <ul><li><span>&nbsp;</span>MongoDB (Recommend)</li><li><span>&nbsp;</span>R2dbc 
      <ul><li><span>&nbsp;</span>Database Sharding</li><li><span>&nbsp;</span>Table Sharding</li></ul></li><li><span>&nbsp;</span>Redis</li></ul></li><li>Snapshot 
    <ul><li><span>&nbsp;</span>MongoDB</li><li><span>&nbsp;</span>R2dbc 
      <ul><li><span>&nbsp;</span>Database Sharding</li><li><span>&nbsp;</span>Table Sharding</li></ul></li><li><span>&nbsp;</span>ElasticSearch</li><li><span>&nbsp;</span>Redis (Recommend)</li></ul></li></ul></li><li><span>&nbsp;</span>命令等待策略（<code>WaitStrategy</code>） 
  <ul><li><span>&nbsp;</span><code>SENT</code><span>&nbsp;</span>: 命令发送成功后发送完成信号</li><li><span>&nbsp;</span><code>PROCESSED</code><span>&nbsp;</span>: 命令处理完成后发送完成信号</li><li><span>&nbsp;</span><code>SNAPSHOT</code><span>&nbsp;</span>: 快照生成完成后发送完成信号</li><li><span>&nbsp;</span><code>PROJECTED</code><span>&nbsp;</span>: 命令产生的事件被投影后发送完成信号</li></ul></li><li><span>&nbsp;</span>CommandBus 
  <ul><li><span>&nbsp;</span><code>InMemoryCommandBus</code></li><li><span>&nbsp;</span><code>KafkaCommandBus</code><span>&nbsp;</span>(Recommend)</li><li><span>&nbsp;</span><code>RedisCommandBus</code></li><li><span>&nbsp;</span><code>LocalFirstCommandBus</code></li></ul></li><li><span>&nbsp;</span>DomainEventBus 
  <ul><li><span>&nbsp;</span><code>InMemoryDomainEventBus</code></li><li><span>&nbsp;</span><code>KafkaDomainEventBus</code><span>&nbsp;</span>(Recommend)</li><li><span>&nbsp;</span><code>RedisDomainEventBus</code></li><li><span>&nbsp;</span><code>LocalFirstDomainEventBus</code></li></ul></li><li><span>&nbsp;</span>StateEventBus 
  <ul><li><span>&nbsp;</span><code>InMemoryStateEventBus</code></li><li><span>&nbsp;</span><code>KafkaStateEventBus</code><span>&nbsp;</span>(Recommend)</li><li><span>&nbsp;</span><code>RedisStateEventBus</code></li><li><span>&nbsp;</span><code>LocalFirstStateEventBus</code></li></ul></li><li><span>&nbsp;</span>Spring 集成 
  <ul><li><span>&nbsp;</span>Spring Boot Auto Configuration</li><li><span>&nbsp;</span>Automatically register<span>&nbsp;</span><code>CommandAggregate</code><span>&nbsp;</span>to<span>&nbsp;</span><code>RouterFunction</code></li></ul></li><li><span>&nbsp;</span>可观测性 
  <ul><li><span>&nbsp;</span>OpenTelemetry</li></ul></li><li><span>&nbsp;</span>OpenAPI</li><li><span>&nbsp;</span><code>WowMetadata</code><span>&nbsp;</span>Generator 
  <ul><li><span>&nbsp;</span><code>wow-compiler</code></li></ul></li></ul><h2>Example</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/AhooWang/Wow/blob/main/example">Example</a></p><h2>单元测试套件</h2><h3>80%+ 的测试覆盖率轻而易举。</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Test Coverage" src="https://gitee.com/AhooWang/Wow/raw/main/document/example/example-domain-jococo.png" referrerpolicy="no-referrer"></p><blockquote><p style="margin-left:0; margin-right:0">Given -&gt; When -&gt; Expect .</p></blockquote><h3>Aggregate Unit Test (<code>AggregateVerifier</code>)</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/AhooWang/Wow/blob/main/example/example-domain/src/test/kotlin/me/ahoo/wow/example/domain/order/OrderTest.kt">Aggregate Test</a></p><pre><code><span style="color:#d73a49"><span style="color:#d73a49">internal</span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49">class</span></span></span><span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1">OrderTest</span></span></span><span></span></span>{

    <span style="color:#d73a49"><span style="color:#d73a49">private</span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span><span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1">mockCreateOrder</span></span></span><span><span><span>()</span></span></span></span>: VerifiedStage&lt;OrderState&gt; {
        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> tenantId = GlobalIdGenerator.generateAsString()
        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> customerId = GlobalIdGenerator.generateAsString()

        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> orderItem = OrderItem(
            GlobalIdGenerator.generateAsString(),
            GlobalIdGenerator.generateAsString(),
            BigDecimal.valueOf(<span><span>10</span></span>),
            <span><span>10</span></span>,
        )
        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> orderItems = listOf(orderItem)
        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> inventoryService = <span style="color:#d73a49"><span style="color:#d73a49">object</span></span> : InventoryService {
            <span style="color:#d73a49"><span style="color:#d73a49">override</span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span><span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1">getInventory</span></span></span><span><span><span>(productId: </span></span><span style="color:#d73a49"><span><span><span style="color:#d73a49">String</span></span></span></span><span><span>)</span></span></span></span>: Mono&lt;<span><span>Int</span></span>&gt; {
                <span style="color:#d73a49"><span style="color:#d73a49">return</span></span> orderItems.filter { it.productId == productId }.map { it.quantity }.first().toMono()
            }
        }
        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> pricingService = <span style="color:#d73a49"><span style="color:#d73a49">object</span></span> : PricingService {
            <span style="color:#d73a49"><span style="color:#d73a49">override</span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span><span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1">getProductPrice</span></span></span><span><span><span>(productId: </span></span><span style="color:#d73a49"><span><span><span style="color:#d73a49">String</span></span></span></span><span><span>)</span></span></span></span>: Mono&lt;BigDecimal&gt; {
                <span style="color:#d73a49"><span style="color:#d73a49">return</span></span> orderItems.filter { it.productId == productId }.map { it.price }.first().toMono()
            }
        }
        <span style="color:#d73a49"><span style="color:#d73a49">return</span></span> aggregateVerifier&lt;Order, OrderState&gt;(tenantId = tenantId)
            .inject(DefaultCreateOrderSpec(inventoryService, pricingService))
            .given()
            .`<span style="color:#d73a49"><span style="color:#d73a49">when</span></span>`(CreateOrder(customerId, orderItems, SHIPPING_ADDRESS, <span style="color:#005cc5"><span style="color:#005cc5">false</span></span>))
            .expectEventCount(<span><span>1</span></span>)
            .expectEventType(OrderCreated::<span><span style="color:#d73a49"><span><span style="color:#d73a49">class</span></span></span><span>.</span><span style="color:#6f42c1"><span><span style="color:#6f42c1">java</span></span></span><span>)</span></span>
            .expectStateAggregate {
                assertThat(it.aggregateId.tenantId, equalTo(tenantId))
            }
            .expectState {
                assertThat(it.id, notNullValue())
                assertThat(it.customerId, equalTo(customerId))
                assertThat(it.address, equalTo(SHIPPING_ADDRESS))
                assertThat(it.items, equalTo(orderItems))
                assertThat(it.status, equalTo(OrderStatus.CREATED))
            }
            .verify()
    }

    <span style="color:#6a737d"><span style="color:#6a737d">/**
     * 创建订单
     */</span></span><span style="color:#6a737d"><span style="color:#6a737d">@Test</span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span><span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1">createOrder</span></span></span><span><span><span>()</span></span></span></span> {
        mockCreateOrder()
    }

    <span style="color:#6a737d"><span style="color:#6a737d">@Test</span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span><span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1">createOrderGivenEmptyItems</span></span></span><span><span><span>()</span></span></span></span> {
        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> customerId = GlobalIdGenerator.generateAsString()
        aggregateVerifier&lt;Order, OrderState&gt;()
            .inject(mockk&lt;CreateOrderSpec&gt;(), <span style="color:#032f62"><span style="color:#032f62">"createOrderSpec"</span></span>)
            .given()
            .`<span style="color:#d73a49"><span style="color:#d73a49">when</span></span>`(CreateOrder(customerId, listOf(), SHIPPING_ADDRESS, <span style="color:#005cc5"><span style="color:#005cc5">false</span></span>))
            .expectErrorType(IllegalArgumentException::<span><span style="color:#d73a49"><span><span style="color:#d73a49">class</span></span></span><span>.</span><span style="color:#6f42c1"><span><span style="color:#6f42c1">java</span></span></span><span>)</span></span>
            .expectStateAggregate {
                <span style="color:#6a737d"><span style="color:#6a737d">/*
                 * 该聚合对象处于未初始化状态，即该聚合未创建成功.
                 */</span></span>
                assertThat(it.initialized, equalTo(<span style="color:#005cc5"><span style="color:#005cc5">false</span></span>))
            }.verify()
    }

    <span style="color:#6a737d"><span style="color:#6a737d">/**
     * 创建订单-库存不足
     */</span></span><span style="color:#6a737d"><span style="color:#6a737d">@Test</span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span><span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1">createOrderWhenInventoryShortage</span></span></span><span><span><span>()</span></span></span></span> {
        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> customerId = GlobalIdGenerator.generateAsString()
        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> orderItem = OrderItem(
            GlobalIdGenerator.generateAsString(),
            GlobalIdGenerator.generateAsString(),
            BigDecimal.valueOf(<span><span>10</span></span>),
            <span><span>10</span></span>,
        )
        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> orderItems = listOf(orderItem)
        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> inventoryService = <span style="color:#d73a49"><span style="color:#d73a49">object</span></span> : InventoryService {
            <span style="color:#d73a49"><span style="color:#d73a49">override</span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span><span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1">getInventory</span></span></span><span><span><span>(productId: </span></span><span style="color:#d73a49"><span><span><span style="color:#d73a49">String</span></span></span></span><span><span>)</span></span></span></span>: Mono&lt;<span><span>Int</span></span>&gt; {
                <span style="color:#d73a49"><span style="color:#d73a49">return</span></span> orderItems.filter { it.productId == productId }
                    <span style="color:#6a737d"><span style="color:#6a737d">/*
                     * 模拟库存不足
                     */</span></span>
                    .map { it.quantity - <span><span>1</span></span> }.first().toMono()
            }
        }
        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> pricingService = <span style="color:#d73a49"><span style="color:#d73a49">object</span></span> : PricingService {
            <span style="color:#d73a49"><span style="color:#d73a49">override</span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span><span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1">getProductPrice</span></span></span><span><span><span>(productId: </span></span><span style="color:#d73a49"><span><span><span style="color:#d73a49">String</span></span></span></span><span><span>)</span></span></span></span>: Mono&lt;BigDecimal&gt; {
                <span style="color:#d73a49"><span style="color:#d73a49">return</span></span> orderItems.filter { it.productId == productId }.map { it.price }.first().toMono()
            }
        }

        aggregateVerifier&lt;Order, OrderState&gt;()
            .inject(DefaultCreateOrderSpec(inventoryService, pricingService))
            .given()
            .`<span style="color:#d73a49"><span style="color:#d73a49">when</span></span>`(CreateOrder(customerId, orderItems, SHIPPING_ADDRESS, <span style="color:#005cc5"><span style="color:#005cc5">false</span></span>))
            <span style="color:#6a737d"><span style="color:#6a737d">/*
             * 期望：库存不足异常.
             */</span></span>
            .expectErrorType(InventoryShortageException::<span><span style="color:#d73a49"><span><span style="color:#d73a49">class</span></span></span><span>.</span><span style="color:#6f42c1"><span><span style="color:#6f42c1">java</span></span></span><span>)</span></span>
            .expectStateAggregate {
                <span style="color:#6a737d"><span style="color:#6a737d">/*
                 * 该聚合对象处于未初始化状态，即该聚合未创建成功.
                 */</span></span>
                assertThat(it.initialized, equalTo(<span style="color:#005cc5"><span style="color:#005cc5">false</span></span>))
            }.verify()
    }

    <span style="color:#6a737d"><span style="color:#6a737d">/**
     * 创建订单-下单价格与当前价格不一致
     */</span></span><span style="color:#6a737d"><span style="color:#6a737d">@Test</span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span><span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1">createOrderWhenPriceInconsistency</span></span></span><span><span><span>()</span></span></span></span> {
        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> customerId = GlobalIdGenerator.generateAsString()
        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> orderItem = OrderItem(
            GlobalIdGenerator.generateAsString(),
            GlobalIdGenerator.generateAsString(),
            BigDecimal.valueOf(<span><span>10</span></span>),
            <span><span>10</span></span>,
        )
        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> orderItems = listOf(orderItem)
        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> inventoryService = <span style="color:#d73a49"><span style="color:#d73a49">object</span></span> : InventoryService {
            <span style="color:#d73a49"><span style="color:#d73a49">override</span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span><span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1">getInventory</span></span></span><span><span><span>(productId: </span></span><span style="color:#d73a49"><span><span><span style="color:#d73a49">String</span></span></span></span><span><span>)</span></span></span></span>: Mono&lt;<span><span>Int</span></span>&gt; {
                <span style="color:#d73a49"><span style="color:#d73a49">return</span></span> orderItems.filter { it.productId == productId }.map { it.quantity }.first().toMono()
            }
        }
        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> pricingService = <span style="color:#d73a49"><span style="color:#d73a49">object</span></span> : PricingService {
            <span style="color:#d73a49"><span style="color:#d73a49">override</span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span><span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1">getProductPrice</span></span></span><span><span><span>(productId: </span></span><span style="color:#d73a49"><span><span><span style="color:#d73a49">String</span></span></span></span><span><span>)</span></span></span></span>: Mono&lt;BigDecimal&gt; {
                <span style="color:#d73a49"><span style="color:#d73a49">return</span></span> orderItems.filter { it.productId == productId }
                    <span style="color:#6a737d"><span style="color:#6a737d">/*
                     * 模拟下单价格、商品定价不一致
                     */</span></span>
                    .map { it.price.plus(BigDecimal.valueOf(<span><span>1</span></span>)) }.first().toMono()
            }
        }
        aggregateVerifier&lt;Order, OrderState&gt;()
            .inject(DefaultCreateOrderSpec(inventoryService, pricingService))
            .given()
            .`<span style="color:#d73a49"><span style="color:#d73a49">when</span></span>`(CreateOrder(customerId, orderItems, SHIPPING_ADDRESS, <span style="color:#005cc5"><span style="color:#005cc5">false</span></span>))
            <span style="color:#6a737d"><span style="color:#6a737d">/*
             * 期望：价格不一致异常.
             */</span></span>
            .expectErrorType(PriceInconsistencyException::<span><span style="color:#d73a49"><span><span style="color:#d73a49">class</span></span></span><span>.</span><span style="color:#6f42c1"><span><span style="color:#6f42c1">java</span></span></span><span>).</span><span style="color:#6f42c1"><span><span style="color:#6f42c1">verify</span></span></span></span>()
    }
}</code></pre><h3>Saga Unit Test (<code>SagaVerifier</code>)</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/AhooWang/Wow/blob/main/example/example-domain/src/test/kotlin/me/ahoo/wow/example/domain/cart/CartSagaTest.kt">Saga Test</a></p><pre><code><span><span style="color:#d73a49"><span><span style="color:#d73a49">class</span></span></span><span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1">CartSagaTest</span></span></span><span></span></span>{

    <span style="color:#6a737d"><span style="color:#6a737d">@Test</span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span><span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1">onOrderCreated</span></span></span><span><span><span>()</span></span></span></span> {
        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> orderItem = OrderItem(
            GlobalIdGenerator.generateAsString(),
            GlobalIdGenerator.generateAsString(),
            BigDecimal.valueOf(<span><span>10</span></span>),
            <span><span>10</span></span>,
        )
        sagaVerifier&lt;CartSaga&gt;()
            .`<span style="color:#d73a49"><span style="color:#d73a49">when</span></span>`(
                mockk&lt;OrderCreated&gt; {
                    every {
                        customerId
                    } returns <span style="color:#032f62"><span style="color:#032f62">"customerId"</span></span>
                    every {
                        items
                    } returns listOf(orderItem)
                    every {
                        fromCart
                    } returns <span style="color:#005cc5"><span style="color:#005cc5">true</span></span>
                },
            )
            .expectCommandBody&lt;RemoveCartItem&gt; {
                assertThat(it.id, equalTo(<span style="color:#032f62"><span style="color:#032f62">"customerId"</span></span>))
                assertThat(it.productIds, hasSize(<span><span>1</span></span>))
                assertThat(it.productIds.first(), equalTo(orderItem.productId))
            }
            .verify()
    }
}</code></pre><h2>设计</h2><h3>聚合建模</h3><table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:0px; border:none; box-sizing:border-box; color:#40485b; display:block; font-family:-apple-system,&quot;system-ui&quot;,&quot;Segoe UI&quot;,Helvetica,Arial,&quot;Apple Color Emoji&quot;,&quot;Segoe UI Emoji&quot;,&quot;Segoe UI Symbol&quot;,&quot;Liberation Sans&quot;,&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,&quot;Hiragino Sans GB&quot;,&quot;Wenquanyi Micro Hei&quot;,&quot;WenQuanYi Zen Hei&quot;,&quot;ST Heiti&quot;,SimHei,SimSun,&quot;WenQuanYi Zen Hei Sharp&quot;,sans-serif; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; line-height:inherit; margin:0px 0px 16px; max-width:100%; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; word-break:initial; word-spacing:0px"><tbody><tr><th><strong>Single Class</strong></th><th><strong>Inheritance Pattern</strong></th><th><strong>Aggregation Pattern</strong></th></tr></tbody><tbody><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px; text-align:center"><img alt="Single Class - Modeling" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Modeling-Single-Class-Pattern.svg" referrerpolicy="no-referrer"></td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px; text-align:center"><img alt="Inheritance Pattern- Modeling" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Modeling-Inheritance-Pattern.svg" referrerpolicy="no-referrer"></td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px; text-align:center"><img alt="Aggregation Pattern- Modeling" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Modeling-Aggregation-Pattern.svg" referrerpolicy="no-referrer"></td></tr></tbody></table><h3>加载聚合</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Load Aggregate" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Load-Aggregate.svg" referrerpolicy="no-referrer"></p><h3>聚合状态流</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Aggregate State Flow" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Aggregate-State-Flow.svg" referrerpolicy="no-referrer"></p><h3>发送命令</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Send Command" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Send-Command.svg" referrerpolicy="no-referrer"></p><h3>命令与事件流</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Command And Event Flow" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Command-Event-Flow.svg" referrerpolicy="no-referrer"></p><h3>Saga - OrderProcessManager (Demo)</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="OrderProcessManager" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Saga-Order.svg" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 01 Nov 2023 01:24:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264719/wow-2-7-1-released</guid>
            <link>https://www.oschina.net/news/264719/wow-2-7-1-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Zino 0.14 发布：基于 Rust 语言的新一代组装式应用开发框架]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#222222; text-align:start"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fphotino%2Fzino" target="_blank">Zino 开发框架</a>已发布 0.14 版本！这两个月的改进，主要集中在以下方面：</p><ul><li>支持通过配置定义本地目录；</li><li>服务器端口注册路由支持分组；</li><li>静态页面支持多页模式；</li><li>Response 动态内容添加 ETag 进行缓存控制；</li><li>全面支持国密算法 SM3、SM4；</li><li>进一步完善和优化 ORM，为 DefaultController 添加更多方法；</li><li>新增 zino-extra 库，提供非核心的功能 feature；</li><li>新增 zino-dioxus 库，提供 Dioxus 组件封装；</li><li>新增 zino-cli 库，提供脚手架工具。</li></ul><p><img height="417" src="https://oscimg.oschina.net/oscnet/up-046df710ba7c1cef26ed75fd48df97bfd74.png" width="700" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 31 Oct 2023 15:33:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264702/zino-0-14-released</guid>
            <link>https://www.oschina.net/news/264702/zino-0-14-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Bee V2.1.10 支持 OceanBase 数据库的 ORM]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><strong>分久必合!&nbsp; ORM,分片,PC 版,安卓版,鸿蒙版, GraphQL,&nbsp; 不如只用一个 Bee!&nbsp; 入门只需要 10 分钟!</strong></p><p><strong>Hibernate? MyBatis? JPA? 试下 Bee, 简单易用又功能强大，面向对象，自定义 sql 都支持良好，还支持 Sharding 分库分表.</strong></p><p><strong><span style="color:#3498db">Hibernate/MyBatis+ plus +Sharding JDBC + Jpa+ Spring data+ GraphQL+ App ORM (Android, 鸿蒙)</span><span style="color:#9b59b6">=</span><span style="color:#2980b9"><span>&nbsp;</span></span><span style="color:#e67e22">Bee</span><br> 要整合一堆的工具，还不如只用一个小巧又功能强大的工具。犹如 JAVA 界的数据源连接池 Hikari， 文件虽小，功能却不赖！</strong></p><h3><strong>V2.1.10(2023.10.30)</strong></h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><strong>1.支持 SQL 取反运算 NOT("!")</strong><br><strong>2.支持 OceanBase 数据库</strong><br> 3.doBeforeReturn 使用 finally<br><strong>4.多数据源配置,dbs 支持多环境覆盖配置</strong><br> 5.fixed bug:有两个配置项 (notSupportUnionQuery,executorSize) 没有加前缀 sharding_</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">&nbsp;</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong><span style="background-color:#fafafb">自动生成 Spring Boot 后端微服务代码，几秒钟即可完成，秒杀 GPT.</span></strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/automvc/gencode">https://gitee.com/automvc/gencode</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>Bee</strong><span style="background-color:#ffffff; color:#333333">&nbsp;是一个简单，易用，功能强大，开发速度快，编码少的 JAVA ORM 框架。连接，事务都可以由 Bee 框架负责管理.<span>&nbsp;</span></span><strong>Bee 简化了与 DB 交互的编码工作量，是&nbsp;</strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbaike.baidu.com%2Fitem%2F%25E7%25BC%2596%25E7%25A0%2581%25E5%25A4%258D%25E6%259D%2582%25E5%25BA%25A6%2F23229411%3Ffr%3Daladdin" target="_blank">编码复杂度</a>&nbsp;为<span>&nbsp;</span><strong><span style="color:#c0392b">O(1)</span><span>&nbsp;</span></strong>的 Java 框架！(技术交流群:扣 992650213 )</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="background-color:#ffffff; color:#333333">Bee 简单易用：单表操作、多表关联操作，可以不用写 sql, 极少语句就可以完成 SQL 操作；</span><strong>概念简单</strong><span style="background-color:#ffffff; color:#333333"><span>&nbsp;</span>,10 分钟即可入门。</span><br><span style="background-color:#ffffff; color:#333333">Bee 功能强大：<strong>复杂查询也支持向对象方式，分页查询性能更高</strong>，一级缓存即可支持个性化优化；具有分布式特性。</span><strong><span style="background-color:#ffffff">高级要求，还可以方便自定义 SQL 语句</span></strong><span style="background-color:#ffffff">。</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>下期功能预告:</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">你还想添加什么功能，请到评论区告诉我们.</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">项目首页:</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/automvc/bee" target="_blank">https://gitee.com/automvc/bee</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fautomvc%2Fbee" target="_blank">https://github.com/automvc/bee</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/automvc/bee-springboot">https://gitee.com/automvc/bee-springboot</a></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 31 Oct 2023 13:12:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264688/bee-2-1-10-released</guid>
            <link>https://www.oschina.net/news/264688/bee-2-1-10-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[企业级开源分布式中间件 | DBLE 3.23.08.0 版本发布！]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>以下对 DBLE 3.23.08.0&nbsp;版本的 Release Notes 进行详细解读。</p><p>文章主要分为以下四部分内容：</p><p>一、DBLE 项目介绍</p><p>二、新版本主要更新解读</p><p><span>三、完整&nbsp;Release Notes</span></p><p style="margin-left:0; margin-right:0">四、LTS 版本更新</p><p style="margin-left:0; margin-right:0"><span><strong>一、DBLE 项目介绍</strong></span></p><p>DBLE 是企业级开源分布式中间件，江湖人送外号&nbsp;<span style="color:#108080"><strong>「MyCat Plus」</strong></span>；以其简单稳定，持续维护，良好的社区环境和广大的群众基础得到了社区的大力支持；</p><p style="margin-left:0; margin-right:0"><strong>破壳日：</strong>2017.10.24</p><p><strong>爱好：</strong>开源</p><p><strong>技能：</strong>数据水平拆分、读写分离、分布式事务支持、多分片算法、全局 ID、IP/SQL 黑白名单</p><p><strong>特长：</strong>MySQL 语法兼容、复杂查询优化、低改造成本、成熟稳定、成熟技术栈</p><ul><li><p style="margin-left:0; margin-right:0; text-align:left"><span>DBLE 官方项目：</span></p><p><span>https://github.com/actiontech/dble</span></p></li><li><p style="margin-left:0; margin-right:0"><span>DBLE 官方文档（已更新）：</span></p><p style="margin-left:0; margin-right:0"><span>https://actiontech.github.io/dble-docs-cn</span></p></li><li><p><span>新版本 DBLE 下载地址及 Release Notes：</span></p><p><span>https://github.com/actiontech/dble/releases</span></p></li></ul><p><span><strong>官方课程：</strong></span></p><ul><li><p>点击学习<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzU2NzgwMTg0MA%3D%3D%26mid%3D2247486230%26idx%3D2%26sn%3Dffb7a2f34640da3ac0df23f7827ffa18%26chksm%3Dfc96e989cbe1609fb0d7624685d40a8a0e9cc25a62c245de27d3f991fcbfdcbccd449955ae57%26scene%3D21%23wechat_redirect" target="_blank">《DBLE 快速上手》</a><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzU2NzgwMTg0MA%3D%3D%26mid%3D2247484004%26idx%3D3%26sn%3D034cc89b1880e6486c884031f8c77827%26chksm%3Dfc96e0fbcbe169ed0e0a71f63f8bd52fdb8a6c425e8df25f8147e711054d28ec1575e760512c%26scene%3D21%23wechat_redirect" target="_blank">《DBLE 公开课》</a>课程，近期<span>已同步至社区</span><span>视频号和</span><span>&nbsp;B</span><span>&nbsp;</span><span>站</span><span>，欢迎观看</span><span>！</span></p></li></ul><p style="margin-left:0; margin-right:0"><span style="color:#888888">Tips：建议下载最新的 Releases 版本，下载 tar 压缩包即可，如有源码编译需求的，可以下载源码包。</span></p><p style="margin-left:0; margin-right:0"><span><strong>二、</strong><strong>新版本主要功能更新解</strong><strong>读</strong></span></p><p><strong><span style="background-color:#ffffff"><strong><span>新版 DBLE 新增&amp;重构功能 5 个，修复社区重要缺陷 2+，其他 bug 100+，和旧版本的不兼容项调整 1 处。</span></strong></span></strong></p><p style="margin-left:0; margin-right:0; text-align:left"><span><strong>致谢</strong></span>：</p><ul><li><p style="margin-left:0; margin-right:0; text-align:left"><span style="color:#4a4a4a">感谢 Github 用户提供的优质&nbsp;Issue，</span><span style="color:#ff4c00"><strong>Star 突破 1024！</strong></span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span style="color:#4a4a4a">感谢 QQ 群（669663113）和微信群内朋友提供的有效反馈。</span></p></li></ul><p style="margin-left:0; margin-right:0; text-align:left"><strong>主要更新：</strong></p><h4><span style="color:#148484"><strong><span style="color:#148484">1、支持 OLAP/OLTP 混合负载</span></strong></span></h4><p style="margin-left:0; margin-right:0; text-align:left"><span>新增<span>&nbsp;</span></span><span>hybridTAUs</span><span>er 用</span><span>户，DBLE<span>&nbsp;</span></span><span>会将前端下发</span><span>的 SQL<span>&nbsp;</span></span><span>根据一</span><span>些规则将 TP 型的路由</span><span>到 MySQL<span>&nbsp;</span></span><span>上，而<span>&nbsp;</span></span><span>AP 型，的路由到<span>&nbsp;</span></span><span>ClickHou</span><span>se 上，</span><span>实</span><span>现 AP/TP<span>&nbsp;</span></span><span>负载自动识别</span><span>下发。</span></p><p style="margin-left:0; margin-right:0; text-align:left"><span><strong><span style="background-color:#ffffff"><strong><span>TP/AP 路由规则：</span></strong></span></strong>&nbsp;</span></p><ul><li><p style="margin-left:0; margin-right:0; text-align:left"><span>包含聚合函数的 SELECT 需要下发给 AP，具体指：min、sum、count、avg、max、STDDEV_POP、STDDEV_SAMP、VAR_POP、VAR_SAMP、group by。</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>事务：ClickHouse 不支持事务，所以针对事务的情况都需要发给 TP。</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>增删改：根据数据同步机制，ClickHouse 使用 binlog 同步 MySQL 数据，可以认为 ClickHouse 作为从，MySQL 作为主，这样的结构也就限制 DML 只能下发给 TP。</span></p></li></ul><p style="margin-left:0; margin-right:0; text-align:left"><span>详情请见文档对应章节。</span></p><h4><span style="color:#148484"><strong><span>2、支持自主检测内部定时线程是否疑似 hang 和部分线程的中断/恢复操作</span></strong></span></h4><p style="margin-left:0; margin-right:0; text-align:left"><span>当 DBLE 遇到某些业务的 hang 场景，期望能在不重启 DBLE 方式解决 hang 问题；可以通过 thread @@print 操作（存在与 jstack 一样的 stw 风险），来定位疑似问题内部线程；经过再三确认后，可以先尝试使用 thread @@kill name='?' 操作（内部采用 interrupt 提前退出任务的方式）中断当前线程，在一定部分场景下可以解决当前 hang 问题，然后根据情况决定是否需要对此线程进行 thread @@recover name=? 操作。</span></p><ul><li><p style="margin-left:0; margin-right:0; text-align:left"><span>DBLE 自主检测内部定时线程（Timer\TimerScheduler）疑似 hang，如果出现疑似 hang，会有对应的告警和 dble.log 会有相应的 hang 关键字</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>支持部分线程的中断/恢复操作</span></p></li></ul><p><span>详情请见文档对应章节。</span></p><p style="margin-left:0; margin-right:0"><span><strong>三、完整 Release Notes</strong></span></p><p style="margin-left:0; margin-right:0; text-align:left"><span><strong>特性：</strong></span></p><ul><li><p><span style="color:#333333"><span style="color:#333333">[#3831] 支持 OLAP/OLTP 混合负载</span>。更多详细信息，请参见 doc</span><span style="color:#148484"><strong>[1]</strong></span></p></li><li><p><span style="color:#333333"><span style="color:#333333">[#3832] ManagerFrontWorker 独立管理端线程池</span>。更多详细信息，请参见 doc<span style="color:#148484"><span style="color:#148484">[2]</span></span></span></p></li><li><p><span style="color:#333333"><span style="color:#333333">[#3833] 支持监控部分定时线程以及部分线程的中断操作。<span style="color:#333333">更多详细信息，请参见 doc</span><span style="color:#148484"><span style="color:#148484">[3]</span></span></span></span></p></li><li><p><span style="color:#333333"><span style="color:#333333">[#3834] 优化并统一 DBLE 相关内部统计信息</span>。更多详细信息，请参见 doc<span style="color:#148484"><span style="color:#148484">[4]</span></span></span></p></li><li><p><span style="color:#333333">[#3838] 加强对捕获的线程「错误」异常的处理。</span></p></li></ul><p><span><strong>缺陷修复：</strong></span></p><ul><li><p><span>[#3835]&nbsp;DBLE 启动时，某些异步初始化任务需要很长时间</span></p></li><li><p><span>[#3836] 后端的 lower_case_table_name 不一致时，DBLE 部分操作不符合预期</span></p></li><li><p><span>修复一些 DDL 问题</span></p></li><li><p><span>修复重新加载时 ClickHouse 同步变量错误</span></p></li><li><p><span>ChildTable 支持 specifyCharset 属性配置</span></p></li></ul><p style="margin-left:0; margin-right:0"><strong><span>和旧版本的不兼容项：</span></strong></p><ul><li><p><span>[#3834] 优化并统一 DBLE 相关内部统计信息。更多详细信息，请参见 doc<span style="color:#148484"><span style="color:#148484">[4]</span></span></span></p><p>&nbsp;</p></li></ul><p style="margin-left:0; margin-right:0"><span><strong>四、<span>LTS 版本更新</span></strong></span></p><p>对于 LTS 的版本，有小版本发出，修复一些 bug：</p><h1><strong><span>3.22.11.1</span></strong></h1><p style="margin-left:0; margin-right:0; text-align:left"><span><span>我们发布了 3.22.11.1，</span><span>这</span><span>是个 bug&nbsp;</span><span>修</span><span>复版本</span>。</span></p><ul><li><p style="color:#010101; margin-left:0; margin-right:0; text-align:left"><span>改善从连接池中获取连接的逻辑</span></p></li><li><p style="color:#010101; margin-left:0; margin-right:0; text-align:left"><span>某些场景下执行大包语句出现 hang、Lost connection...</span></p></li><li><p style="color:#010101; margin-left:0; margin-right:0; text-align:left"><span>支持 UPDATE/DELETE&nbsp;多表针对分片表 JOIN&nbsp;全局表</span></p></li><li><p style="color:#010101; margin-left:0; margin-right:0; text-align:left"><span>后端连接初始化时出现半连接场景的处理</span></p></li><li><p style="color:#010101; margin-left:0; margin-right:0; text-align:left"><span>主从切换后，业务端开启事务并进行回滚时，可能存在部分数据没有被回滚的现象</span></p></li><li><p style="color:#010101; margin-left:0; margin-right:0; text-align:left"><span>连接池的扩缩容线程 connection-pool-evictor-thread 意外退出，慢日志过多阻塞，导致心跳失败、创建连接失败</span></p></li></ul><h1><strong><span>3.22.01.6</span></strong></h1><p style="margin-left:0; margin-right:0; text-align:left"><span><span>我们发布了&nbsp;</span><span>3.22.01.6，</span><span>这是</span><span>个&nbsp;</span><span>bug&nbsp;</span><span>修</span><span>复版本。</span></span></p><ul><li><p style="color:#010101; margin-left:0; margin-right:0; text-align:left"><span>主从切换后，业务端开启事务并进行回滚时，可能存在部分数据没有被回滚的现象</span></p></li><li><p style="color:#010101; margin-left:0; margin-right:0; text-align:left"><span>开启 SQL 统计，并发线程没有抢到锁陷入死循环引起 CPU 使用率过高</span></p></li><li><p style="color:#010101; margin-left:0; margin-right:0; text-align:left"><span>连接池的扩缩容线程 connection-pool-evictor-thread 意外退出</span></p></li><li><p style="color:#010101; margin-left:0; margin-right:0; text-align:left"><span>慢日志过多阻塞，导致心跳失败、创建连接失败</span></p></li><li><p style="color:#010101; margin-left:0; margin-right:0; text-align:left"><span>慢日志 bug 导致队列消费线程异常退出</span></p></li><li><p style="color:#010101; margin-left:0; margin-right:0; text-align:left"><span>多语句下发出现 lost connnection...</span></p></li><li><p style="color:#010101; margin-left:0; margin-right:0; text-align:left"><span>加强 sequence 配置改动场景优化</span></p></li></ul><h1><strong><span>3.21.10.15</span></strong></h1><p style="margin-left:0; margin-right:0; text-align:left"><span><span>我们发布了&nbsp;</span><span>3.21.10.14，</span><span>这是</span><span>个</span><span>&nbsp;bug&nbsp;</span><span>修</span><span>复版本。</span></span></p><ul><li><p style="color:#010101; margin-left:0; margin-right:0; text-align:left"><span>max 函数处理 datetime/timestamp/time 列时，精度丢弃了</span></p></li><li><p style="color:#010101; margin-left:0; margin-right:0; text-align:left"><span>修改 dble_rw_split_entry 中 white_ips 列为 null，不生效</span></p></li><li><p style="color:#010101; margin-left:0; margin-right:0; text-align:left"><span>加强 sequence 配置改动场景优化</span></p></li><li><p style="color:#010101; margin-left:0; margin-right:0; text-align:left"><span>一些 NPE 的处理</span></p></li></ul><p style="margin-left:0; margin-right:0"><span><strong>引用参考</strong></span></p><p><strong><span>[1]<span style="color:#148484"><span>&nbsp;</span>HTAP：</span></span></strong><span>https://actiontech.github.io/dble-docs-cn/history/develop/2.Function/2.39_HTAP.html</span></p><p><strong><span>[2]<span>&nbsp;</span><span style="color:#148484">参数详情：</span></span></strong><span>https://actiontech.github.io/dble-docs-cn/history/develop/1.config_file/1.02_bootstrap.cnf.html</span></p><p><span><strong><span>[3]</span><span>&nbsp;</span><span style="color:#148484">线程处理：</span></strong><span>https://actiontech.github.io/dble-docs-cn/history/develop/2.Function/2.40_thread_cmd.html</span></span></p><p><strong><span>[4]&nbsp;<span style="color:#148484">变更内容：</span></span></strong><span>https://actiontech.github.io/dble-docs-cn/history/develop/1.config_file/1.10_version_change.html#config-title-3.23.08.0</span></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 31 Oct 2023 08:25:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264638/dble-3-23-08-0</guid>
            <link>https://www.oschina.net/news/264638/dble-3-23-08-0</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Transformers.js 2.7.0 发布，新增文本转语音]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Transformers.js 支持在浏览器中实现最先进的机器学习——无需服务器。它提供预训练模型和熟悉的 API，支持自然语言处理、计算机视觉、音频和多模态领域的任务。</p><p>借助 Transformers.js，开发者可以直接在浏览器中运行文本分类、图像分类、语音识别等任务，这使其成为 ML 从业者和研究人员的强大工具。</p><p>最近发布的<strong><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxenova%2Ftransformers.js%2Freleases%2Ftag%2F2.7.0" target="_blank"> Transformers.js 2.7.0 </a></u></strong>添加了一项重要功能：文本转语音。</p><p>下面是演示视频：</p><div class="ckeditor-html5-video" style="text-align:center"><video controls="controls" src="https://user-images.githubusercontent.com/26504141/277378666-9fa5131d-0e07-47fa-9a13-122c1b69d233.mp4">
  &nbsp;
 </video></div><p>&nbsp;</p><p>开发者表示目前只支持 speecht5 的文本转语音，将来会添加其他模型，如 bark 和 MMS。</p><p>为了展示在浏览器中文本转语音的强大功能，开发者还发布了一个简单的示例应用：</p><ul><li>演示：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhuggingface.co%2Fspaces%2FXenova%2Ftext-to-speech-client" target="_blank">https://huggingface.co/spaces/Xenova/text-to-speech-client</a></li><li>代码：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxenova%2Ftransformers.js%2Ftree%2Fmain%2Fexamples%2Ftext-to-speech-client" target="_blank">https://github.com/xenova/transformers.js/tree/main/examples/text-to-speech-client</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Tue, 31 Oct 2023 06:38:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264606/transformers-js-2-7-0-released</guid>
            <link>https://www.oschina.net/news/264606/transformers-js-2-7-0-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[SQLite 3.44.0 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">SQLite 是一个 C 语言库，实现了一个小型、快速、独立、高可靠性、全功能的 SQL 数据库引擎。SQLite 是世界上使用最多的数据库引擎。SQLite 的源代码属于公共领域，每个人都可以免费使用，用于任何目的。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">SQLite 3.44.0 现已发布，更新内容如下：</p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsqlite.org%2Flang_aggfunc.html" target="_blank">聚合函数</a>现在可以在其最后一个参数后包含 ORDER BY 子句。函数的参数按照指定的顺序进行处理。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsqlite.org%2Flang_aggfunc.html%23group_concat" target="_blank">这对于 string_agg()</a>&nbsp;和&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsqlite.org%2Fjson1.html%23jgrouparray" target="_blank">json_group_array()</a>&nbsp;等函数非常重要&nbsp;。</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsqlite.org%2Flang_corefunc.html%23concat" target="_blank">添加对 concat()</a>&nbsp;和&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsqlite.org%2Flang_corefunc.html%23concat_ws" target="_blank">concat_ws()</a>&nbsp;标量 SQL 函数的支持，与 PostgreSQL、SQLServer 和 MySQL 兼容。</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsqlite.org%2Flang_aggfunc.html%23group_concat" target="_blank">添加对 string_agg()</a>&nbsp;聚合 SQL 函数的支持，兼容 PostgreSQL 和 SQLServer。</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsqlite.org%2Flang_datefunc.html%23strftm" target="_blank">strftime() SQL 函数</a>上的新转换字母：%e %F %I %k %l %p %P %R %T %u</li><li>添加新的 C 语言 API：&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsqlite.org%2Fc3ref%2Fget_clientdata.html" target="_blank">sqlite3_get_clientdata()</a>&nbsp;和&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsqlite.org%2Fc3ref%2Fget_clientdata.html" target="_blank">sqlite3_set_clientdata()</a>。</li><li>现在，当运行 CREATE TABLE 语句本身时，会引发许多与 CREATE TABLE 相关的错误，而不是推迟到第一次实际使用表时。</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsqlite.org%2Fpragma.html%23pragma_integrity_check" target="_blank">PRAGMA integrity_check</a>&nbsp;命令现在使用新的&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsqlite.org%2Fvtab.html%23xintegrity" target="_blank">xIntegrity 方法</a>验证各种内置<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsqlite.org%2Fvtab.html" target="_blank">虚拟表</a>中内容的一致性。这适用于&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsqlite.org%2Ffts3.html" target="_blank">FTS3</a>、<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsqlite.org%2Ffts3.html%23fts4" target="_blank">FTS4</a>、<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsqlite.org%2Ffts5.html" target="_blank">FTS5</a>、<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsqlite.org%2Frtree.html" target="_blank">RTREE</a>&nbsp;和&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsqlite.org%2Fgeopoly.html" target="_blank">GEOPOLY</a>&nbsp;扩展。</li><li>SQLITE_DBCONFIG_DEFENSIVE 设置现在可防止<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsqlite.org%2Fc3ref%2Fc_dbconfig_defensive.html%23sqlitedbconfigdefensive" target="_blank">打开</a>&nbsp;PRAGMA&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsqlite.org%2Fpragma.html%23pragma_writable_schema" target="_blank">writable_schema 。</a>以前可以打开 writable_schema，但实际上不允许模式可写。现在则根本无法开启。</li><li>将内置&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsqlite.org%2Ffts3.html" target="_blank">FTS3</a>、<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsqlite.org%2Ffts3.html%23fts4" target="_blank">FTS4</a>、<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsqlite.org%2Ffts5.html" target="_blank">FTS5</a>、<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsqlite.org%2Frtree.html" target="_blank">RTREE</a>&nbsp;和&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsqlite.org%2Fgeopoly.html" target="_blank">GEOPOLY</a>&nbsp;虚拟表标记为&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsqlite.org%2Fc3ref%2Fc_vtab_constraint_support.html%23sqlitevtabinnocuous" target="_blank">SQLITE_VTAB_INNOCUOUS</a>，以便它们可以在高安全性部署中的触发器内部使用。</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsqlite.org%2Fpragma.html%23pragma_case_sensitive_like" target="_blank">PRAGMA case_sensitive_like</a>&nbsp;语句已弃用，因为当模式包含 LIKE 运算符时使用它可能会导致 PRAGMAintegrity_check 报告数据库<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsqlite.org%2Fpragma.html%23pragma_integrity_check" target="_blank">损坏</a>。</li><li>现在，只要使用 Microsoft C 编译器构建 SQLite，就会默认启用&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsqlite.org%2Fcompile.html%23use_seh" target="_blank">SQLITE_USE_SEH （结构化异常处理）。</a>可以使用 -DSQLITE_USE_SEH=0 禁用它</li><li>Query planner 优化： 
  <ul><li>在部分索引扫描中，如果 WHERE 子句暗示表列的常量值，则用该常量替换该表列的出现。这增加了部分索引作为覆盖索引的可能性。</li><li>禁用视图扫描优化（在<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsqlite.org%2Fchanges.html%23version_3_42_0" target="_blank">版本 3.42.0</a>&nbsp;中添加- item 1c），因为它会导致多个性能下降。取而代之的是，将 DISTINCT 子查询的估计行数减少 8 倍。</li></ul></li><li>SQLite 现在执行运行时检测，检测底层硬件是否支持精度大于「double」的「long double」，并根据检测结果使用适当的浮点例程。</li><li>Windows CLI 现在默认在支持 UTF-8 的平台上使用 UTF-8 进行输入和输出<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsqlite.org%2Fcli.html" target="_blank">。</a>--no-utf8 选项可用于禁用 UTF8 支持。</li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="background-color:#ffffff; color:#333333">更多详情可查看：</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsqlite.org%2Fchanges.html" target="_blank">https://sqlite.org/changes.html</a></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 31 Oct 2023 06:25:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264604/sqlite-3-44-0-released</guid>
            <link>https://www.oschina.net/news/264604/sqlite-3-44-0-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[功能强大的开源数据中台系统 DataCap 1.16.0 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div><blockquote><p style="margin-left:0; margin-right:0">推荐一套基于 SpringBoot 开发的简单、易用的开源权限管理平台，建议下载使用:<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdevlive-community%2Fauthx" target="_blank">https://github.com/devlive-community/authx</a></p></blockquote><blockquote><p style="margin-left:0; margin-right:0">推荐一套为 Java 开发人员提供方便易用的 SDK 来与 OpenAI 的 API 进行交互组件：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdevlive-community%2Fopenai-java-sdk" target="_blank">https://github.com/devlive-community/openai-java-sdk</a></p></blockquote></div><p style="color:rgba(0, 0, 0, 0.87); text-align:start"><strong>DataCap 发布!</strong></p><div><div><table border="1" style="background-color:var(--md-default-bg-color); border-collapse:initial; border-radius:0.1rem; border-spacing:0px; border:.05rem solid var(--md-typeset-table-color); box-sizing:inherit; display:inline-block; font-size:0.64rem; margin:0px; max-width:100%; overflow:auto; touch-action:auto; width:205.688px"><tbody><tr><th style="text-align:center; vertical-align:top">发布版本</th><th style="text-align:center; vertical-align:top">发布时间</th></tr></tbody><tbody><tr><td style="border-top:.05rem solid var(--md-typeset-table-color); text-align:center; vertical-align:top"><code>1.16.0</code></td><td style="border-top:.05rem solid var(--md-typeset-table-color); text-align:center; vertical-align:top"><code>2023-11-01</code></td></tr></tbody></table></div></div><h4>General<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fdatacap.devlive.org%2Fzh%2Frelease%2Flatest.html%23general" target="_blank">¶</a></h4><hr><ul><li>支持列顺序 <p><img alt="" height="732" src="https://datacap.edurt.io/release/latest/column_order.gif" width="1439" referrerpolicy="no-referrer"></p></li><li>支持删除行</li><li>支持删除多行<br><span>&nbsp;</span><img alt="Delete Rows" src="https://datacap.edurt.io/release/latest/delete_rows.gif" referrerpolicy="no-referrer"></li><li>支持无主键数据更新<br><span>&nbsp;</span><img alt="Update Columns" src="https://datacap.edurt.io/release/latest/update_columns.gif" referrerpolicy="no-referrer"></li><li>支持根据主键更新<br><span>&nbsp;</span><img alt="Update Without Primary Key" src="https://datacap.edurt.io/release/latest/update_without_primary_key.gif" referrerpolicy="no-referrer"></li><li>支持预览待处理的更改</li></ul><h4>Editor<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fdatacap.devlive.org%2Fzh%2Frelease%2Flatest.html%23editor" target="_blank">¶</a></h4><hr><ul><li>支持选择查询<span>&nbsp;</span><br><img alt="Selection Query" src="https://datacap.edurt.io/release/latest/selection_query.gif" referrerpolicy="no-referrer"></li><li>支持自定义配置<br><span>&nbsp;</span><img alt="Custom Configure" src="https://datacap.edurt.io/release/latest/custom_editor_configure.gif" referrerpolicy="no-referrer"></li></ul><h4>Docs<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fdatacap.devlive.org%2Fzh%2Frelease%2Flatest.html%23docs" target="_blank">¶</a></h4><hr><ul><li>添加用户配置文件文档</li></ul><h4>Dependencies<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fdatacap.devlive.org%2Fzh%2Frelease%2Flatest.html%23dependencies" target="_blank">¶</a></h4><hr><ul><li>更新 org.apache.maven.plugins:maven-javadoc-plugin<span>&nbsp;</span><code>3.5.0</code><span>&nbsp;</span>到<span>&nbsp;</span><code>3.6.0</code></li><li>更新 com.oceanbase:oceanbase-client<span>&nbsp;</span><code>2.4.2</code><span>&nbsp;</span>到<span>&nbsp;</span><code>2.4.5</code></li><li>更新 org.apache.maven.plugins:maven-javadoc-plugin<span>&nbsp;</span><code>3.5.0</code><span>&nbsp;</span>到<span>&nbsp;</span><code>3.6.0</code></li></ul><h4>下载地址</h4><hr><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdatacap.edurt.io%2Fdownload.html" target="_blank">https://datacap.edurt.io/download.html</a></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 31 Oct 2023 05:21:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264589/datacap-1-16-0-released</guid>
            <link>https://www.oschina.net/news/264589/datacap-1-16-0-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
    </channel>
</rss>
