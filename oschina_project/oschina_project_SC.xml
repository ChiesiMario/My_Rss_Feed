<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[开源中国-软件更新资讯]]>
        </title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="https://rsshub.app/oschina/news/project" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[开源中国-软件更新资讯 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Tue, 19 Dec 2023 18:17:04 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[2023 基于 mybatis 的 orm：mybatis-mp 1.2.5 发布 - 支持 Spring Boot 3]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">全新一代基于 mybatis 扩展的 orm 框架，拥有良好的性能和扩展性。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">本次 1.2.5 更新，内容：</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="color:#333333">1：</span><span style="color:#000000">全面支持 springboot3</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="color:#000000">2：优化 maven 依赖，节省开发时间</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="color:#000000">3：全面提供 crud 安全性（重点）：默认不忽略 null（直接报错提示），不忽略空字符串，不对字符串进行 trim 操作；并提供一下方法</span>：</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">&nbsp; &nbsp;//忽略 null，忽略空字符串，对 string 参数进行 trim 去空格操作<br> &nbsp;&nbsp;&nbsp;&nbsp;forSearch()<br> &nbsp; &nbsp;&nbsp;// 忽略 null 条件参数 &nbsp; &nbsp;<br> &nbsp; &nbsp; ignoreNullValueInCondition(true)<br> &nbsp; &nbsp; // 忽略，空字符串，条件参数 &nbsp; &nbsp;<br> &nbsp; &nbsp; ignoreEmptyInCondition(true)<br> &nbsp; &nbsp; // &nbsp;对字符串进行 trim 去空格操作 &nbsp; &nbsp;<br> &nbsp; &nbsp; trimStringInCondition(true)</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">第 3 点应该是该框架的一大亮点，可以大大减少开发者的 bug！</p><p>mybatis-mp 包含丰富的 api：</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">1：基于注解，映射数据库；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">2：支持多表 join 和返回；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">3：api 采用 lambda 和 stream 流式设计；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">4：内置分页以及超强的 sql 优化功能；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">5：稳定且性能极优；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">6：轻量级封装 mybatis，几乎没有侵入；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">7：api 丰富，支持数据库函数、多表、乐观锁、多租户、逻辑删除、默认值（可动态值） 等众多功能；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">8：零学习成本，和写 sql 一样方便。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">9：支持复杂的返回关系映射：例如一对一 ，一对多，多对多；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">10：内置代码生成器，通过配置，可定制自身规范；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">11：全新的框架，全新的设计理念，新的就是好！</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 18 Dec 2023 08:04:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271749</guid>
            <link>https://www.oschina.net/news/271749</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[GnuCash 5.5 发布，跨平台财务管理软件]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>GnuCash&nbsp;5.5 现已发布，<span style="background-color:#ffffff; color:#000000">这是稳定版 5.x 系列的第六个版本</span>。GnuCash 是一个适用于个人或小型企业的财务软件，采用 GPL 协议开源，支持 GNU / Linux、BSD、Solaris、Mac OS X 及 Microsoft Windows。GnuCash 易于使用，且功能强大，它可以追踪银行帐户、股票、收入与支出，也可以基于专业的会计原则确保帐目平衡并提供准确的报表。&nbsp;</p><p style="color:#000000; margin-left:0; margin-right:0; text-align:start"><strong>在<span>&nbsp;</span><span><span><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>5.4 和 5.5</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span>&nbsp;</span>之间，完成了以下错误修复：</strong></p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugs.gnucash.org%2Fshow_bug.cgi%3Fid%3D607000" target="_blank">Bug 607000 - SLR 可见事务</a><p><span>更改「Since Last Run」对话框以仅显示状态非空的事务。</span></p></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugs.gnucash.org%2Fshow_bug.cgi%3Fid%3D792241" target="_blank">Bug 792241 - 允许对计划事务进行排序</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugs.gnucash.org%2Fshow_bug.cgi%3Fid%3D798025" target="_blank">Bug 798025 - SLR Value entry 未与位置绑定</a><p><span>当条目具有 focus 时禁用滚动和水平滚动条。</span></p></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugs.gnucash.org%2Fshow_bug.cgi%3Fid%3D798760" target="_blank">Bug 798760 - SLR OK 按钮完成值输入</a><p><span>通过此更改，「Since Last Run」对话框的「OK」按钮将提交正在进行的编辑并前进到需要输入的下一个编辑。仅当不再进行编辑时才会关闭对话框。</span></p></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugs.gnucash.org%2Fshow_bug.cgi%3Fid%3D798760" target="_blank">Bug 798760 - 带值输入的 SLR 更换提醒</a><p><span>当用户提供了所需的值并单击「OK」后，将事务状态从「Reminder」更改为「ToCreate&nbsp;」。</span></p></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugs.gnucash.org%2Fshow_bug.cgi%3Fid%3D798890" target="_blank">Bug 798890 - Printing 问题</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugs.gnucash.org%2Fshow_bug.cgi%3Fid%3D799087" target="_blank">Bug 799087 - Import - 不平衡（需要 acct）交易现在显示为红色（之前为橙色）。</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugs.gnucash.org%2Fshow_bug.cgi%3Fid%3D799090" target="_blank">Bug 799090 - 右键单击​​计划事务</a><p><span>确保在 SX 编辑器中右键单击时，选择高亮显示更改为指针下方的项目。</span></p></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugs.gnucash.org%2Fshow_bug.cgi%3Fid%3D799092" target="_blank">Bug 799092 - GnuCash 5.4 会在退出时保留运行的后台进程</a><p><span>通过 gnc_prefs_remove_registered 在应用程序关闭时清除 schema_hash ，并使该函数可用于 Python 绑定，以便 python 程序也可以这样做。</span></p></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugs.gnucash.org%2Fshow_bug.cgi%3Fid%3D799099" target="_blank">Bug 799099 - 尝试获取报价时崩溃</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugs.gnucash.org%2Fshow_bug.cgi%3Fid%3D799104" target="_blank">Bug 799104 - 「Asset Chart」损坏</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugs.gnucash.org%2Fshow_bug.cgi%3Fid%3D799108" target="_blank">Bug 799108 - 如果创建计划事务时出现任何错误，「Since Last Run」会崩溃</a><p><span>捕获错误并将其显示在对话框中。</span></p></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugs.gnucash.org%2Fshow_bug.cgi%3Fid%3D799113" target="_blank">Bug 799113 - 「Start Import」按钮报告「Failed」</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugs.gnucash.org%2Fshow_bug.cgi%3Fid%3D799121" target="_blank">Bug 799121 - MacOS 上 CSV 导入时出现解析错误</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugs.gnucash.org%2Fshow_bug.cgi%3Fid%3D799130" target="_blank">Bug 799130 - split-register.c:1847:gnc_split_register_save: assertion failed: (xaccTransIsOpen (blank_trans))</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugs.gnucash.org%2Fshow_bug.cgi%3Fid%3D799134" target="_blank">Bug 799134 - 无法使用 GCC 14 进行构建（find_if’ is not a member of ‘std’; did you mean ‘find’）</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugs.gnucash.org%2Fshow_bug.cgi%3Fid%3D799138" target="_blank">Bug 799138 - 移植到新的 Python C 配置 API</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugs.gnucash.org%2Fshow_bug.cgi%3Fid%3D799143" target="_blank">Bug 799143 - 32 位架构上的 FTBFS</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugs.gnucash.org%2Fshow_bug.cgi%3Fid%3D799144" target="_blank">Bug 799144 - 5.4 升级后 Date Completion&nbsp;被破坏</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugs.gnucash.org%2Fshow_bug.cgi%3Fid%3D799148" target="_blank">Bug 799148 - 保存修改后的已保存报告配置时发生 Reliable crash</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugs.gnucash.org%2Fshow_bug.cgi%3Fid%3D799150" target="_blank">Bug 799150 - 无法在帐户树视图的注释字段中粘贴文本（使用 Ctrl+V）</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugs.gnucash.org%2Fshow_bug.cgi%3Fid%3D799151" target="_blank">Bug 799151 - gnc_date_get_last_mday () 不能正确计算闰年</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugs.gnucash.org%2Fshow_bug.cgi%3Fid%3D799152" target="_blank">Bug 799152 - normalize_reldate_tm() 无法正确处理月份大于 11 或小于 -11 的日期。</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugs.gnucash.org%2Fshow_bug.cgi%3Fid%3D799156" target="_blank">Bug 799156 - normalize_struct_tm() 无法正确标准化秒、分钟和小时。</a></li></ul><p><span style="background-color:#ffffff; color:#333333">更多详情可查看：</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.gnucash.org%2Fnews.phtml" target="_blank">https://www.gnucash.org/news.phtml</a></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 18 Dec 2023 06:55:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271735/gnucash-5-5-released</guid>
            <link>https://www.oschina.net/news/271735/gnucash-5-5-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Ant Design 5.12.3 发布，企业级 UI 设计语言和 React 实现]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff; color:#333333">An Design 5.12.3 现已发布，主要变化如下：</span></p><ul><li><span>&nbsp;</span>修复 Tag 组件在 SSR 场景下的样式丢失问题。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design%2Fpull%2F46500" target="_blank">#46500</a></li><li>Upload 的<span>&nbsp;</span><code>disabled</code><span>&nbsp;</span>属性不再对下载按钮生效。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design%2Fpull%2F46454" target="_blank">#46454</a></li><li>Upload.Dragger 增加一个水平内边距。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design%2Fpull%2F46457" target="_blank">#46457</a></li><li>修复 Upload<span>&nbsp;</span><code>actions</code><span>&nbsp;</span>的颜色问题。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design%2Fpull%2F46456" target="_blank">#46456</a></li><li>修复 Form 使用<span>&nbsp;</span><code>getValueProps</code><span>&nbsp;</span>展示值无法更新的问题。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design%2Fpull%2F46445" target="_blank">#46445</a></li><li>修复 Checkbox 自定义<span>&nbsp;</span><code>token.lineWidth</code><span>&nbsp;</span>时勾选箭头错位问题。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design%2Fpull%2F46431" target="_blank">#46431</a></li><li>修复 Select 组件定制 token 会让 padding 失效的问题。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design%2Fpull%2F46427" target="_blank">#46427</a></li><li>修复 Message 在<span>&nbsp;</span><code>cssVar</code><span>&nbsp;</span>模式下覆盖组件 token 无效的问题。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design%2Fpull%2F46415" target="_blank">#46415</a></li><li>Flex 组件不应该应用额外的样式。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design%2Fpull%2F46404" target="_blank">#46404</a></li></ul><p>更新说明：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design%2Freleases%2Ftag%2F5.12.3" target="_blank">https://github.com/ant-design/ant-design/releases/tag/5.12.3</a></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 18 Dec 2023 03:43:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271702/ant-design-5-12-3-released</guid>
            <link>https://www.oschina.net/news/271702/ant-design-5-12-3-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[React Native 0.73.1 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff; color:#333333">React Native 0.73.1 现已发布，具体更新内容如下：</span></p><h4 style="text-align:start"><strong><span><span><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>Added</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></h4><ul><li>添加<code>enableNetworkInspector</code>实验，以在检查器代理中启用网络面板和 CDP 处理程序（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ffacebook%2Freact-native%2Fcommit%2F8ef807bfb2e596bd70f0c8b17f1b6f698d98ae2a" target="_blank">8ef807bfb2</a>)</li></ul><h4 style="text-align:start"><strong><span><span><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>Changed</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></h4><ul><li>Chore：将 CLI 升级至 12.3.0（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ffacebook%2Freact-native%2Fcommit%2Fdff11ab993e57a097988537791afe8ef086e4ce4" target="_blank">dff11ab993</a>）</li></ul><h4 style="text-align:start"><strong><span><span><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>Fixed</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></h4><ul><li>修复 VirtualizedList 中的最后一个间隔约束逻辑 (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ffacebook%2Freact-native%2Fcommit%2F3ed4bf9046ae125d244283c3556892345bfd77e1" target="_blank">3ed4bf9046</a>）</li></ul><p style="text-align:start"><strong><span><span><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>Android specific</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></p><ul><li><p>修复无法识别的字段 mBinding 的类型（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ffacebook%2Freact-native%2Fcommit%2F31d8a93bf3199432bcd2b577738fbf49e84c207d" target="_blank">31d8a93bf3</a>)</p></li></ul><p style="text-align:start"><strong><span><span><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>iOS specific</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></p><ul><li>修复了 pod 安装期间 NSAppTransportSecurity 被覆盖的问题（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ffacebook%2Freact-native%2Fcommit%2Fa0b76d90b73ec0d3d9e0174004bfb96a5b6f3a3e" target="_blank">a0b76d90b7</a>）</li></ul><p>更新说明：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ffacebook%2Freact-native%2Freleases%2Ftag%2Fv0.73.1" target="_blank">https://github.com/facebook/react-native/releases/tag/v0.73.1</a></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 18 Dec 2023 03:24:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271700/react-native-0-73-1-released</guid>
            <link>https://www.oschina.net/news/271700/react-native-0-73-1-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[DHorse v1.5.0 发布，基于 k8s 的发布平台]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h2>版本说明</h2><h3>新增特性</h3><ul><li>支持同一机器部署多个 DHorse 服务；</li><li>支持 Next、.NET 应用部署；</li><li>优化 Node、Nuxt 应用构建和部署的性能；</li><li>默认使用 fabric8 客户端与 k8s 集群交互，可以通过指定参数-Dkubernetes-client=official 切回到 k8s 官方客户端；</li><li>支持企业微信、钉钉、飞书登录；</li><li>支持对集群节点的管理；</li></ul><h3>优化特性</h3><ul><li>隐藏密码展示；</li><li>修改 Banner 展示；</li><li>选择应用列表按照字母排序；</li><li>优化副本终端、日志等功能；</li><li>构建版本、部署时对 DHorse 资源的利用；</li><li>使用集群模式提交构建请求；</li><li>优化终止部署历史的功能；</li><li>优化 Go 应用的构建流程；</li></ul><h3>解决问题</h3><ul><li>WebSocket 支持 Https 协议；</li></ul><h3>升级指南</h3><p><a href="https://gitee.com/i512team/dhorse-doc/blob/main/upgrade/v1.5.0/%E5%8D%87%E7%BA%A7%E6%8C%87%E5%8D%97.md">升级指南</a></p><h2>DHorse 介绍</h2><p>DHorse 是一个轻量级、简单易用的云应用管理平台，具有多云和多环境管理、应用管理和部署、服务治理等功能，使用该平台不需要了解容器和 k8s 的概念。</p><h2>功能特性</h2><ul><li>简洁的操作界面</li><li>以应用为中心，屏蔽 K8S 的底层概念</li><li>支持 SpringBoot、Vue、React、Nodejs、Html、Go、Flask、Django、Nuxt、Next、.Net 应用部署</li><li>无需安装 Docker 即可构建镜像</li><li>无需安装 Maven、Gradle、Node、Go、Python、Nodejs、.Net 即可打包</li><li>支持多集群管理</li><li>支持多环境部署</li><li>支持日志收集</li><li>支持链路追踪</li></ul><h2>架构</h2><p><img alt="" height="355" src="https://oscimg.oschina.net/oscnet/up-24aa6b57bddcc6dce1aaf17df47294e2d28.png" width="696" referrerpolicy="no-referrer"></p><h2>预览</h2><p><img alt="" height="824" src="https://oscimg.oschina.net/oscnet/up-3b81f424bffe101af871d3dcf7ae059dc5d.png" width="1920" referrerpolicy="no-referrer"></p><h2>文档</h2><ul><li><p>Gitee：<a href="https://gitee.com/i512team/dhorse">https://gitee.com/i512team/dhorse</a></p></li><li><p>GitHub：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2F512team%2Fdhorse" target="_blank">https://github.com/512team/dhorse</a></p></li><li><p>操作手册：<a href="https://gitee.com/i512team/dhorse-doc/blob/main/guide/%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C.md">https://gitee.com/i512team/dhorse-doc/blob/main/guide/%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C.md</a></p></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Mon, 18 Dec 2023 03:23:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271699/dhorse-1-5-0-released</guid>
            <link>https://www.oschina.net/news/271699/dhorse-1-5-0-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[DBErp 进销存系统 V1.2 Release 231218 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><span style="background-color:#ffffff; color:#333333"><strong>DBErp</strong><span>&nbsp;</span>基于 Laminas</span><span style="background-color:#ffffff; color:#333333">&nbsp;+ doctrine</span><span style="background-color:#ffffff; color:#333333">&nbsp;2 开发的一套进销存系统。</span></p><h2>系统框架</h2><ul><li>Laminas （Zendframework 3）</li><li>Doctrine 2</li></ul><h2>环境要求</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>服务器系统</strong>&nbsp;Linux、Unix、Mac、Windows、其他</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>web 服务器</strong>&nbsp;Apache、Nginx、IIS、其他</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>MySQL 版本</strong>&nbsp;&gt;= 5.6</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>PHP 版本</strong>&nbsp;&gt;= 7.4</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>PHP 扩展 | 库</strong></p><ul><li>PDO</li><li>SSL（openssl）</li><li>Fileinfo</li><li>intl</li><li>Curl</li><li>GD2</li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>系统空间</strong>&nbsp;&gt;= 500M</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>更新日志：</strong><br> 新增，其他入库、采购入库可 ajax 添加仓库<br> 新增，添加客户、供应商可 ajax 添加分类<br> 新增，系统设置加入，编码&amp;单号，的生成规则 (设置后生效)，如果不填写则自动生成<br> 新增，添加、编辑商品可弹出添加计量单位和商品分类<br> 优化，自定义打印模板加入公司 logo<br> 优化，采购入库和销售发货详情加入操作记录<br> 优化，自定义打印加入序列号<br> 优化，其他出库、盘点、调拨，的调用商品<br> 优化，库存相关页面<br> 优化，仓库删除处理<br> 优化，语言包<br> 优化，商品删除功能<br> 优化，提示信息</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><span style="background-color:#ffffff; color:#e74c3c">珑大官方全新发布&nbsp;</span><strong>语言包个性化定制扩展平台&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.loongdom.com.cn%2Fcloud%2Ftrans.html" target="_blank">https://docs.loongdom.com.cn/cloud/trans.html</a></strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>在线文档地址：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.dberp.net%2F" target="_blank">https://docs.dberp.net/</a></strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>演示地址：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdemo.dberp.com.cn%2F" target="_blank">https://demo.dberp.com.cn/</a></strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><img alt="dashboard" src="https://static.oschina.net/uploads/img/201906/30075605_OW5Q.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>下载地址：<span>&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdownload.loongdom.com.cn/dberp/V1.2/DBErpV1.2_Release231218.tar.gz" target="_blank">https://download.loongdom.com.cn/dberp/V1.2/DBErpV1.2_Release231218.tar.gz</a></span></strong></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 18 Dec 2023 03:14:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271693</guid>
            <link>https://www.oschina.net/news/271693</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Apollo 2.2.0 发布，分布式配置管理中心]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Apollo 2.2.0 已发布，包含了诸如 H2 数据库支持、发布历史支持保留数量配置、支持通过 OpenAPI 创建 App、非 Properties Namespace 支持灰度发布等重大更新。</p><blockquote><p>Apollo（阿波罗）是一款可靠的分布式配置管理中心，诞生于携程框架研发部，能够集中化管理应用不同环境、不同集群的配置，配置修改后能够实时推送到应用端，并且具备规范的权限、流程治理等特性，适用于微服务配置管理场景。</p></blockquote><h3>H2 数据库支持</h3><p>Apollo 现已支持 H2 数据库，非常适合快速部署场景。</p><h3>发布历史支持保留数量配置</h3><p>用户可以为每个 Namespace 配置保留多少条发布历史，从而降低历史记录过多导致数据库过载的风险。</p><h3>日志目录更改为&nbsp;/opt/logs</h3><p>Apollo ConfigService、AdminService 和 Portal 的日志目录都已更改为&nbsp;/opt/logs，旧版本分别是&nbsp;/opt/logs/10003171、/opt/logs/10003172 和 /opt/logs/10003173。</p><h3>支持通过 OpenAPI 创建 App</h3><p>OpenAPI 的 consumer token 可以配置是否允许创建 App。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-65f8916408197a05305952b7674cd2cd99b.png" referrerpolicy="no-referrer"></p><h3>非 Properties Namespace 支持灰度发布</h3><p>非 Properties Namespace（如 Yaml, JSON 等）现已支持灰度发布功能。</p><h3>审计日志页面展示</h3><p>管理员可以通过管理员工具中的审计日志功能访问详细的操作日志。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-ee231f7ed253a20c335fec98e0f83c92d7e.png" referrerpolicy="no-referrer"><img alt="" src="https://oscimg.oschina.net/oscnet/up-dd201f297376f3dcc03b0868adbcb34981f.png" referrerpolicy="no-referrer"></p><p>详情：</p><ul style="list-style-type:disc; margin-left:0; margin-right:0"><li><p style="margin-left:0; margin-right:0"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapolloconfig%2Fapollo%2Freleases%2Ftag%2Fv2.2.0" target="_blank"><span>https://github.com/apolloconfig/apollo/releases/tag/v2.2.0</span></a></p></li><li><p style="margin-left:0; margin-right:0"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapolloconfig%2Fapollo-java%2Freleases%2Ftag%2Fv2.2.0" target="_blank">https://github.com/apolloconfig/apollo-java/releases/tag/v2.2.0</a></p></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Mon, 18 Dec 2023 02:09:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271676/apollo-config-2-2-0-released</guid>
            <link>https://www.oschina.net/news/271676/apollo-config-2-2-0-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[AiEditor rc.1 发布，一个面向 AI 的下一代富文本编辑器]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="screenshot.png" height="287" src="https://gitee.com/aieditor-team/aieditor/raw/main/docs/assets/image/logo-banner.png" width="500" referrerpolicy="no-referrer"></p><h1>AiEditor</h1><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">关于 AiEditor（官网<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Faieditor.dev">https://aieditor.dev</a><span>&nbsp;</span>）</p><blockquote><p style="margin-left:0; margin-right:0">AiEditor 是一个面向 AI 的下一代富文本编辑器，她基于 Web Component，因此支持 Layui、Vue、React、Angular 等几乎任何前端框架。她适配了 PC Web 端和手机端，并提供了，亮色，和 暗色，两个主题。除此之外，她还提供了灵活的配置，开发者可以方便的使用其开发任何文字编辑的应用。</p></blockquote><p>在这个的版本中，我们添加了选择文字，弹出 AI 菜单并可以自定义 AI 指令的功能，如下图所示：</p><p><img height="985" src="https://oscimg.oschina.net/oscnet/up-d0b85d4eee0b6be8a07e018a59ccdbe523d.png" width="1420" referrerpolicy="no-referrer"></p><p>在之前的版本中，我们已经完善了：AI 翻译、AI 续写、AI 校正（发现错别字）、AI 菜单、AI 命令等功能，欢迎体验：<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Faieditor1.jpress.cn" target="_blank">http://aieditor1.jpress.cn</a>&nbsp;。</p><p>&nbsp;</p><h2>v1.0.0-rc.1 更新细节：</h2><ul><li>新增：AI 功能添加选择文字时，对文字进行在定义 Prompt 操作的功能</li><li>新增：添加选中文字内容时，弹出操作菜单的功能</li><li>新增：AiEditor 添加 onCreateBefore 的钩子函数，方便初始化插件</li><li>修复：同一个页面下，初始化多个 editor 实例时出错的问题</li><li>修复：修复保持 html 后，通过 html 再次初始化编辑器无法准确解析视频组件的问题</li><li>优化：重构 AbstractBubbleMenu.ts 的相关属性和逻辑</li><li>优化：重构 ai 组件，使之能够适配更多的业务场景</li><li>样式：优化编辑器诸多样式细节</li><li>文档：添加链接配置 ref/class 等相关配置的文档</li></ul><p>&nbsp;</p><h2>快速开始</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">安装：</p><div><div><pre><span><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1">npm</span></span></span></span></span></span></span><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62">i aieditor</span></span></span></span></span></span></span></span></pre><div>
   &nbsp;
  </div></div></div><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">使用：</p><div><div><pre><span><strong><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">new</span></span></span></span></span></span></span></strong><span><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">AiEditor</span></span></span></span></span></span></span></span><span>({</span></span><span><span style="color:#008080"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5">element</span></span></span></span></span></span></span></span><span>:</span><span><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62">"</span></span></span></span></span></span></span></span><span style="color:#dd1144"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62">#aiEditor</span></span></span></span></span></span></span></span><span><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62">"</span></span></span></span></span></span></span></span><span>,</span></span><span><span style="color:#008080"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5">placeholder</span></span></span></span></span><span>:</span><span><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62">"</span></span></span></span></span></span></span></span><span style="color:#dd1144"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62">点击输入内容...</span></span></span></span></span></span></span></span><span><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62">"</span></span></span></span></span></span></span></span><span>,</span></span><span><span style="color:#008080"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5">content</span></span></span></span></span><span>:</span><span><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62">'</span></span></span></span></span></span></span></span><span style="color:#dd1144"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62">AiEditor 是一个面向 AI 的开源富文本编辑器。 </span></span></span></span></span></span></span></span><span><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62">'</span></span></span></span></span></span></span></span><span>,</span></span><span><span>})</span></span></pre><div>
   &nbsp;
  </div></div></div><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">更多访问官网：<a href="https://gitee.com/link?target=https%3A%2F%2Faieditor.dev%2Fzh%2Fgetting-started.html">https://aieditor.dev/zh/getting-started.html</a></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 18 Dec 2023 02:09:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271675/ai-editor-rc1</guid>
            <link>https://www.oschina.net/news/271675/ai-editor-rc1</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[🎉 领域建模即微服务开发 | Wow 2.10.3 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow:基于 DDD、EventSourcing 的现代响应式 CQRS 架构微服务开发框架" src="https://static.oschina.net/uploads/img/202312/13135012_Zb9v.svg" width="150" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>基于 DDD、EventSourcing 的现代响应式 CQRS 架构微服务开发框架</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FAhoo-Wang%2FWow%2Fblob%2Fmvp%2FLICENSE"><img alt="License" src="https://img.shields.io/badge/license-Apache%202-4EB1BA.svg" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FAhoo-Wang%2FWow%2Freleases"><img alt="GitHub release" src="https://img.shields.io/github/release/Ahoo-Wang/Wow.svg" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fapp.codacy.com%2Fgh%2FAhoo-Wang%2FWow%2Fdashboard%3Futm_source%3Dgh%26utm_medium%3Dreferral%26utm_content%3D%26utm_campaign%3DBadge_grade"><img alt="Codacy Badge" src="https://app.codacy.com/project/badge/Grade/cfc724df22db4f9387525258c8a59609" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fcodecov.io%2Fgh%2FAhoo-Wang%2FWow"><img alt="codecov" src="https://codecov.io/gh/Ahoo-Wang/Wow/branch/main/graph/badge.svg?token=uloJrLoQir" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FAhoo-Wang%2FWow"><img alt="Integration Test Status" src="https://github.com/Ahoo-Wang/Wow/actions/workflows/integration-test.yml/badge.svg" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FKotlinBy%2Fawesome-kotlin"><img alt="Awesome Kotlin Badge" src="https://kotlin.link/awesome-kotlin.svg" referrerpolicy="no-referrer"></a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><strong>领域驱动&nbsp;</strong><span>&nbsp;</span>|&nbsp;<span>&nbsp;</span><strong>事件驱动</strong><span>&nbsp;&nbsp;</span>|<span>&nbsp;&nbsp;</span><strong>测试驱动</strong><span>&nbsp;&nbsp;</span>|<span>&nbsp;&nbsp;</span><strong>声明式设计</strong><span>&nbsp;</span>｜<span>&nbsp;</span><strong>响应式编程</strong><span>&nbsp;</span>｜<span>&nbsp;</span><strong>命令查询职责分离</strong><span>&nbsp;</span>｜<span>&nbsp;</span><strong>事件溯源</strong></p><h2>🎉 更新内容 🎉</h2><blockquote><p style="margin-left:0; margin-right:0"><strong><em>事件补偿服务&nbsp;</em></strong>支持 <em>分布式定时调度</em></p></blockquote><ul><li>重构: 默认启用客户端事件补偿过滤器 (<code>CompensationFilter</code>)</li><li>特性: 支持客户端主动配置分布式重试（补偿）策略</li><li>特性: 新增修改重试策略命令 (<code>ApplyRetrySpec</code>)API</li><li>部署: 新增<em>事件补偿服务端</em><em>Kubernetes</em> 部署清单</li><li>文档: 新增事件补偿处理时序图<br><img alt="事件补偿" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Event-Compensation.svg" referrerpolicy="no-referrer"></li></ul><h2>快速开始</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">使用<span>&nbsp;</span><a href="https://gitee.com/AhooWang/wow-project-template">Wow 项目模板</a>快速创建基于 Wow 框架的 DDD 项目。</p><h2>特性概览</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-Features" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Features.png" referrerpolicy="no-referrer"></p><h2>架构图</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-Architecture" src="https://static.oschina.net/uploads/img/202312/13135013_Lcug.svg" referrerpolicy="no-referrer"></p><h2>性能测试 (Example)</h2><ul><li>测试代码：<a href="https://gitee.com/AhooWang/Wow/blob/main/example">Example</a></li><li>测试场景：加入购物车、下单</li><li>命令发送等待模式（<code>WaitStrategy</code>）：<code>SENT</code>、<code>PROCESSED</code></li></ul><h3>部署</h3><ul><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/perf/redis.yaml">Redis</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/perf/mongo.yaml">MongoDB</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/perf/kafka.yaml">Kafka</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/perf/config/mongo_kafka_redis.yaml">Application-Config</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/perf/deployment.yaml">Application-Deployment</a></li></ul><h3>测试报告</h3><h4>加入购物车</h4><ul><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/request/AddCartItem.http">请求</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/document/example/perf/Example.Cart.Add@SENT.pdf">详细报告 (PDF)-SENT</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/document/example/perf/Example.Cart.Add@PROCESSED.pdf">详细报告 (PDF)-PROCESSED</a></li></ul><blockquote><p style="margin-left:0; margin-right:0">命令等待策略（<code>WaitStrategy</code>）为<code>SENT</code>模式，加入购物车命令（<code>AddCartItem</code>）写请求 API 经过 2 分钟的压测，平均 TPS 为 <em>59625</em>，峰值为 <em>82312</em>，平均响应时间为 <em>29</em> 毫秒。</p></blockquote><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="AddCartItem-SENT" src="https://gitee.com/AhooWang/Wow/raw/main/document/example/perf/Example.Cart.Add@SENT.png" referrerpolicy="no-referrer"></p><blockquote><p style="margin-left:0; margin-right:0">命令等待策略（<code>WaitStrategy</code>）为<code>PROCESSED</code>模式，加入购物车命令（<code>AddCartItem</code>）写请求 API 经过 2 分钟的压测，平均 TPS 为 <em>18696</em>，峰值为 <em>24141</em>，平均响应时间为 <em>239</em> 毫秒。</p></blockquote><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="AddCartItem-PROCESSED" src="https://gitee.com/AhooWang/Wow/raw/main/document/example/perf/Example.Cart.Add@PROCESSED.png" referrerpolicy="no-referrer"></p><p>&nbsp;</p><h4>下单</h4><ul><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/request/CreateOrder.http">请求</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/document/example/perf/Example.Order.Create@SENT.pdf">详细报告 (PDF)-SENT</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/document/example/perf/Example.Order.Create@PROCESSED.pdf">详细报告 (PDF)-PROCESSED</a></li></ul><blockquote><p style="margin-left:0; margin-right:0">命令等待策略（<code>WaitStrategy</code>）为<code>SENT</code>模式，下单命令（<code>CreateOrder</code>）写请求 API 经过 2 分钟的压测，平均 TPS 为 <em>47838</em>，峰值为 <em>86200</em>，平均响应时间为 <em>217</em> 毫秒。</p></blockquote><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="CreateOrder-SENT" src="https://gitee.com/AhooWang/Wow/raw/main/document/example/perf/Example.Order.Create@SENT.png" referrerpolicy="no-referrer"></p><blockquote><p style="margin-left:0; margin-right:0">命令等待策略（<code>WaitStrategy</code>）为<code>PROCESSED</code>模式，下单命令（<code>CreateOrder</code>）写请求 API 经过 2 分钟的压测，平均 TPS 为 <em>180230</em>，峰值为 <em>25506</em>，平均响应时间为 <em>268</em> 毫秒。</p></blockquote><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="CreateOrder-PROCESSED" src="https://gitee.com/AhooWang/Wow/raw/main/document/example/perf/Example.Order.Create@PROCESSED.png" referrerpolicy="no-referrer"></p><h2>事件源</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-EventSourcing" src="https://static.oschina.net/uploads/img/202312/13135014_lJcu.svg" referrerpolicy="no-referrer"></p><h2>可观测性</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-Observability" src="https://static.oschina.net/uploads/img/202312/13135014_YAFd.png" referrerpolicy="no-referrer"></p><h2>OpenAPI (Spring WebFlux 集成)</h2><blockquote><p style="margin-left:0; margin-right:0">自动注册<span>&nbsp;</span><strong>命令</strong><span>&nbsp;</span>路由处理函数 (<code>HandlerFunction</code>) ，开发人员仅需编写领域模型，即可完成服务开发。</p></blockquote><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-Spring-WebFlux-Integration" src="https://static.oschina.net/uploads/img/202312/13135014_lVJm.png" referrerpolicy="no-referrer"></p><h2>测试套件：80%+ 的测试覆盖率轻而易举</h2><blockquote><p style="margin-left:0; margin-right:0">Given -&gt; When -&gt; Expect .</p></blockquote><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-CI-Flow" src="https://static.oschina.net/uploads/img/202312/13135014_vlP2.png" referrerpolicy="no-referrer"></p><h2>前置条件</h2><ul><li>理解<span>&nbsp;</span><strong>领域驱动设计</strong>：《实现领域驱动设计》、《领域驱动设计：软件核心复杂性应对之道》</li><li>理解<span>&nbsp;</span><strong>命令查询职责分离</strong>（CQRS）</li><li>理解<span>&nbsp;</span><strong>事件源架构</strong></li><li>理解<span>&nbsp;</span><strong>响应式编程</strong></li></ul><h2>Example</h2><h3>订单服务（Kotlin）</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/AhooWang/Wow/blob/main/example">Example-Order</a></p><h3>银行转账（JAVA）</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/AhooWang/Wow/blob/main/example/transfer">Example-Transfer</a></p><h2>单元测试套件</h2><h3>80%+ 的测试覆盖率轻而易举。</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Test Coverage" src="https://static.oschina.net/uploads/img/202312/13135014_MHRR.png" referrerpolicy="no-referrer"></p><blockquote><p style="margin-left:0; margin-right:0">Given -&gt; When -&gt; Expect .</p></blockquote><h3>Aggregate Unit Test (<code>AggregateVerifier</code>)</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/AhooWang/Wow/blob/main/example/example-domain/src/test/kotlin/me/ahoo/wow/example/domain/order/OrderTest.kt">Aggregate Test</a></p><pre><code><span style="color:#d73a49"><span style="color:#d73a49">internal</span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49">class</span></span></span><span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1">OrderTest</span></span></span><span></span></span>{

    <span style="color:#6a737d"><span style="color:#6a737d">@Test</span></span><span style="color:#d73a49"><span style="color:#d73a49">private</span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span><span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1">createOrder</span></span></span><span><span><span>()</span></span></span></span> {
        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> tenantId = GlobalIdGenerator.generateAsString()
        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> customerId = GlobalIdGenerator.generateAsString()

        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> orderItem = OrderItem(
            GlobalIdGenerator.generateAsString(),
            GlobalIdGenerator.generateAsString(),
            BigDecimal.valueOf(<span><span>10</span></span>),
            <span><span>10</span></span>,
        )
        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> orderItems = listOf(orderItem)
        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> inventoryService = <span style="color:#d73a49"><span style="color:#d73a49">object</span></span> : InventoryService {
            <span style="color:#d73a49"><span style="color:#d73a49">override</span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span><span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1">getInventory</span></span></span><span><span><span>(productId: </span></span><span style="color:#d73a49"><span><span><span style="color:#d73a49">String</span></span></span></span><span><span>)</span></span></span></span>: Mono&lt;<span><span>Int</span></span>&gt; {
                <span style="color:#d73a49"><span style="color:#d73a49">return</span></span> orderItems.filter { it.productId == productId }.map { it.quantity }.first().toMono()
            }
        }
        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> pricingService = <span style="color:#d73a49"><span style="color:#d73a49">object</span></span> : PricingService {
            <span style="color:#d73a49"><span style="color:#d73a49">override</span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span><span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1">getProductPrice</span></span></span><span><span><span>(productId: </span></span><span style="color:#d73a49"><span><span><span style="color:#d73a49">String</span></span></span></span><span><span>)</span></span></span></span>: Mono&lt;BigDecimal&gt; {
                <span style="color:#d73a49"><span style="color:#d73a49">return</span></span> orderItems.filter { it.productId == productId }.map { it.price }.first().toMono()
            }
        }
        aggregateVerifier&lt;Order, OrderState&gt;(tenantId = tenantId)
            .inject(DefaultCreateOrderSpec(inventoryService, pricingService))
            .given()
            .`<span style="color:#d73a49"><span style="color:#d73a49">when</span></span>`(CreateOrder(customerId, orderItems, SHIPPING_ADDRESS, <span style="color:#005cc5"><span style="color:#005cc5">false</span></span>))
            .expectEventCount(<span><span>1</span></span>)
            .expectEventType(OrderCreated::<span><span style="color:#d73a49"><span><span style="color:#d73a49">class</span></span></span><span>.</span><span style="color:#6f42c1"><span><span style="color:#6f42c1">java</span></span></span><span>)</span></span>
            .expectStateAggregate {
                assertThat(it.aggregateId.tenantId, equalTo(tenantId))
            }
            .expectState {
                assertThat(it.id, notNullValue())
                assertThat(it.customerId, equalTo(customerId))
                assertThat(it.address, equalTo(SHIPPING_ADDRESS))
                assertThat(it.items, equalTo(orderItems))
                assertThat(it.status, equalTo(OrderStatus.CREATED))
            }
            .verify()
    }

    <span style="color:#6a737d"><span style="color:#6a737d">@Test</span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span><span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1">createOrderGivenEmptyItems</span></span></span><span><span><span>()</span></span></span></span> {
        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> customerId = GlobalIdGenerator.generateAsString()
        aggregateVerifier&lt;Order, OrderState&gt;()
            .inject(mockk&lt;CreateOrderSpec&gt;(), <span style="color:#032f62"><span style="color:#032f62">"createOrderSpec"</span></span>)
            .given()
            .`<span style="color:#d73a49"><span style="color:#d73a49">when</span></span>`(CreateOrder(customerId, listOf(), SHIPPING_ADDRESS, <span style="color:#005cc5"><span style="color:#005cc5">false</span></span>))
            .expectErrorType(IllegalArgumentException::<span><span style="color:#d73a49"><span><span style="color:#d73a49">class</span></span></span><span>.</span><span style="color:#6f42c1"><span><span style="color:#6f42c1">java</span></span></span><span>)</span></span>
            .expectStateAggregate {
                <span style="color:#6a737d"><span style="color:#6a737d">/*
                 * 该聚合对象处于未初始化状态，即该聚合未创建成功.
                 */</span></span>
                assertThat(it.initialized, equalTo(<span style="color:#005cc5"><span style="color:#005cc5">false</span></span>))
            }.verify()
    }

    <span style="color:#6a737d"><span style="color:#6a737d">/**
     * 创建订单-库存不足
     */</span></span><span style="color:#6a737d"><span style="color:#6a737d">@Test</span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span><span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1">createOrderWhenInventoryShortage</span></span></span><span><span><span>()</span></span></span></span> {
        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> customerId = GlobalIdGenerator.generateAsString()
        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> orderItem = OrderItem(
            GlobalIdGenerator.generateAsString(),
            GlobalIdGenerator.generateAsString(),
            BigDecimal.valueOf(<span><span>10</span></span>),
            <span><span>10</span></span>,
        )
        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> orderItems = listOf(orderItem)
        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> inventoryService = <span style="color:#d73a49"><span style="color:#d73a49">object</span></span> : InventoryService {
            <span style="color:#d73a49"><span style="color:#d73a49">override</span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span><span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1">getInventory</span></span></span><span><span><span>(productId: </span></span><span style="color:#d73a49"><span><span><span style="color:#d73a49">String</span></span></span></span><span><span>)</span></span></span></span>: Mono&lt;<span><span>Int</span></span>&gt; {
                <span style="color:#d73a49"><span style="color:#d73a49">return</span></span> orderItems.filter { it.productId == productId }
                    <span style="color:#6a737d"><span style="color:#6a737d">/*
                     * 模拟库存不足
                     */</span></span>
                    .map { it.quantity - <span><span>1</span></span> }.first().toMono()
            }
        }
        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> pricingService = <span style="color:#d73a49"><span style="color:#d73a49">object</span></span> : PricingService {
            <span style="color:#d73a49"><span style="color:#d73a49">override</span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span><span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1">getProductPrice</span></span></span><span><span><span>(productId: </span></span><span style="color:#d73a49"><span><span><span style="color:#d73a49">String</span></span></span></span><span><span>)</span></span></span></span>: Mono&lt;BigDecimal&gt; {
                <span style="color:#d73a49"><span style="color:#d73a49">return</span></span> orderItems.filter { it.productId == productId }.map { it.price }.first().toMono()
            }
        }

        aggregateVerifier&lt;Order, OrderState&gt;()
            .inject(DefaultCreateOrderSpec(inventoryService, pricingService))
            .given()
            .`<span style="color:#d73a49"><span style="color:#d73a49">when</span></span>`(CreateOrder(customerId, orderItems, SHIPPING_ADDRESS, <span style="color:#005cc5"><span style="color:#005cc5">false</span></span>))
            <span style="color:#6a737d"><span style="color:#6a737d">/*
             * 期望：库存不足异常.
             */</span></span>
            .expectErrorType(InventoryShortageException::<span><span style="color:#d73a49"><span><span style="color:#d73a49">class</span></span></span><span>.</span><span style="color:#6f42c1"><span><span style="color:#6f42c1">java</span></span></span><span>)</span></span>
            .expectStateAggregate {
                <span style="color:#6a737d"><span style="color:#6a737d">/*
                 * 该聚合对象处于未初始化状态，即该聚合未创建成功.
                 */</span></span>
                assertThat(it.initialized, equalTo(<span style="color:#005cc5"><span style="color:#005cc5">false</span></span>))
            }.verify()
    }
}</code></pre><h3>Saga Unit Test (<code>SagaVerifier</code>)</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/AhooWang/Wow/blob/main/example/example-domain/src/test/kotlin/me/ahoo/wow/example/domain/cart/CartSagaTest.kt">Saga Test</a></p><pre><code><span><span style="color:#d73a49"><span><span style="color:#d73a49">class</span></span></span><span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1">CartSagaTest</span></span></span><span></span></span>{

    <span style="color:#6a737d"><span style="color:#6a737d">@Test</span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span><span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1">onOrderCreated</span></span></span><span><span><span>()</span></span></span></span> {
        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> orderItem = OrderItem(
            GlobalIdGenerator.generateAsString(),
            GlobalIdGenerator.generateAsString(),
            BigDecimal.valueOf(<span><span>10</span></span>),
            <span><span>10</span></span>,
        )
        sagaVerifier&lt;CartSaga&gt;()
            .`<span style="color:#d73a49"><span style="color:#d73a49">when</span></span>`(
                mockk&lt;OrderCreated&gt; {
                    every {
                        customerId
                    } returns <span style="color:#032f62"><span style="color:#032f62">"customerId"</span></span>
                    every {
                        items
                    } returns listOf(orderItem)
                    every {
                        fromCart
                    } returns <span style="color:#005cc5"><span style="color:#005cc5">true</span></span>
                },
            )
            .expectCommandBody&lt;RemoveCartItem&gt; {
                assertThat(it.id, equalTo(<span style="color:#032f62"><span style="color:#032f62">"customerId"</span></span>))
                assertThat(it.productIds, hasSize(<span><span>1</span></span>))
                assertThat(it.productIds.first(), equalTo(orderItem.productId))
            }
            .verify()
    }
}</code></pre><div>
 &nbsp;
</div><h2>设计</h2><h3>聚合建模</h3><table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:0px; border:none; box-sizing:border-box; color:#40485b; display:block; font-family:-apple-system,&quot;system-ui&quot;,&quot;Segoe UI&quot;,Helvetica,Arial,&quot;Apple Color Emoji&quot;,&quot;Segoe UI Emoji&quot;,&quot;Segoe UI Symbol&quot;,&quot;Liberation Sans&quot;,&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,&quot;Hiragino Sans GB&quot;,&quot;Wenquanyi Micro Hei&quot;,&quot;WenQuanYi Zen Hei&quot;,&quot;ST Heiti&quot;,SimHei,SimSun,&quot;WenQuanYi Zen Hei Sharp&quot;,sans-serif; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; line-height:inherit; margin:0px 0px 16px; max-width:100%; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:776px; word-break:initial; word-spacing:0px"><tbody><tr><th><strong>Single Class</strong></th><th><strong>Inheritance Pattern</strong></th><th><strong>Aggregation Pattern</strong></th></tr></tbody><tbody><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px; text-align:center"><img alt="Single Class - Modeling" src="https://static.oschina.net/uploads/img/202312/13135015_ZxxP.svg" referrerpolicy="no-referrer"></td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px; text-align:center"><img alt="Inheritance Pattern- Modeling" src="https://static.oschina.net/uploads/img/202312/13135015_I09q.svg" referrerpolicy="no-referrer"></td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px; text-align:center"><img alt="Aggregation Pattern- Modeling" src="https://static.oschina.net/uploads/img/202312/13135015_1pS1.svg" referrerpolicy="no-referrer"></td></tr></tbody></table><h3>加载聚合</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Load Aggregate" src="https://static.oschina.net/uploads/img/202312/13135015_puJx.svg" referrerpolicy="no-referrer"></p><h3>聚合状态流</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Aggregate State Flow" src="https://static.oschina.net/uploads/img/202312/13135015_I8NI.svg" referrerpolicy="no-referrer"></p><h3>发送命令</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Send Command" src="https://static.oschina.net/uploads/img/202312/13135015_sU6r.svg" referrerpolicy="no-referrer"></p><h3>命令与事件流</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Command And Event Flow" src="https://static.oschina.net/uploads/img/202312/13135016_5HaD.svg" referrerpolicy="no-referrer"></p><h3>Saga - OrderProcessManager (Demo)</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="OrderProcessManager" src="https://static.oschina.net/uploads/img/202312/13135016_NfuX.svg" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 18 Dec 2023 01:39:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271666/wow-2-10-3-released</guid>
            <link>https://www.oschina.net/news/271666/wow-2-10-3-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[【店滴云】继无人茶室代码开源后，快速开发后台也开源]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="text-align:center">【店滴云】继无人茶室代码开源后，快速开发后台也开源</p><p>快速开发后台可以做到的能力：</p><p>1、一句话后台表单，满足各种输入场景，数据联动，数据渲染</p><p>2、后台检索组件一句话配置</p><p>3、后台列表渲染，兼容手机与电脑，分别采用不同渲染，支持无限极分类渲染</p><p>4、支持多商户，多层级代理</p><p>5、支持不同客户端配置，包含小程序，app,公众号等</p><p>6、模块化结构，方便快速开发</p><p>7、页面路由，按钮，菜单级别的权限控制</p><p>8、后台代码可生成，接口标准化</p><p style="text-align:center">&nbsp;</p><p><img alt="" height="540" src="https://oscimg.oschina.net/oscnet/up-02d651bbefdd6bc3ff4d54e96508e86c64d.png" width="1024" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 17 Dec 2023 17:22:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271654</guid>
            <link>https://www.oschina.net/news/271654</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[GoFrame v2.6 版本发布，企业级 Golang 开发框架]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#172b4d; margin-left:0; margin-right:0; text-align:start">大家好啊，<code>GoFrame</code>框架今天发布了<code>v2.6.0</code>正式版本啦！👏👏👏👏</p><p style="color:#172b4d; margin-left:0; margin-right:0; text-align:start">本次版本主要是大量的代码改进和<code>BugFix</code>工作。由于本次版本变更内容较多，以下中文介绍一些较为重要的改进点，详细的<code>ChangeLog</code>请参考（特别是<code>BugFix</code>）：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgogf%2Fgf%2Freleases%2Ftag%2Fv2.6.0" target="_blank">https://github.com/gogf/gf/releases/tag/v2.6.0</a></p><p style="color:#172b4d; margin-left:0; margin-right:0; text-align:start">完整代码变更<span style="color:#1f2328">:<span><span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgogf%2Fgf%2Fcompare%2Fv2.5.0...v2.6.0" target="_blank">https://github.com/gogf/gf/compare/v2.5.0...v2.6.0</a></span></span></p><p style="color:#172b4d; margin-left:0; margin-right:0; text-align:start"><span style="color:#172b4d">感谢本次所有的贡献开发者：</span></p><p style="color:#172b4d; margin-left:0; margin-right:0; text-align:start"><span><img alt="" src="https://goframe.org/download/attachments/118685599/image-2023-12-18_21-15-19.png?version=1&amp;modificationDate=1702905320372&amp;api=v2" referrerpolicy="no-referrer"></span></p><h1>功能改进</h1><p style="color:#172b4d; margin-left:0; margin-right:0; text-align:start">框架最低依赖的<code>Golang</code>版本从<code>v1.15</code>升级到<code>v1.18</code>。</p><ol><li><code>g</code><ol><li>新增<code>g.Go 方</code>法，用于便捷创建带有<code>ctx</code>和<code>recover</code>参数的异步<code>goroutine</code>。</li></ol></li><li><code>glog</code><ol><li>改进<code>Handler</code>回调处理函数的<code>HandlerInput</code>输入参数，增加<code>Values</code>参数，该参数为日志打印时的参数列表：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgoframe.org%2Fpages%2Fviewpage.action%3FpageId%3D17207121" target="_blank">日志组件-Handler</a></li><li>新增<code>HandlerStructure</code>回调函数，将日志打印内容按照结构化参数打印，打印内容结构同<code>golang</code>标准库新版本<code>slog</code>：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgoframe.org%2Fpages%2Fviewpage.action%3FpageId%3D17207121" target="_blank">日志组件-Handler</a></li><li>改进日志文件<code>rotate</code>逻辑，解决在个别场景下文件无法<code>rotate</code>的问题。</li></ol></li><li><code>gerror</code><ol><li>增加错误堆栈模式（<code>brief/detail</code>）：在<code>brief</code>模式下，错误堆栈仅会打印非框架组件堆栈。在<code>detail</code>模式下，<span style="color:#172b4d">错误堆栈会打印完整的框架代码调用链路。</span>框架默认使用<code>brief</code>模式：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgoframe.org%2Fpages%2Fviewpage.action%3FpageId%3D3671867" target="_blank">错误处理-其他特性</a></li></ol></li><li><code>gcode</code><ol><li>新增<code>gcode.CodeInternalPanic</code>错误码，框架组件捕获的所有<code>panic</code>错误将会以此错误码返回。</li></ol></li><li><code>gmap</code><ol><li>新增<code>Diff</code>方法，用于对比并返回两个<code>Map</code>的差异。</li></ol></li><li><code>gaes</code><ol><li>新增<code>PKCS7Padding/PKCS7UnPadding</code>方法。</li></ol></li><li><code>gdb</code><ol><li>删除<code>ConvertDataForRecord</code>转换方法，新增<code>ConvertValueForField</code>转换方法。</li><li>修改<code>CheckLocalTypeForField</code>方法，返回参数类型<code>string</code>修改为<code>LocalType</code>类型。</li><li>这两个主要是数据库实现会用到，通常在社区组件中使用。如果使用者本地有<code>gdb.DB</code>接口的实现需要注意这个改动。</li><li>新增<code>Model.Partition</code>方法，允许数据库操作时用户显式指定分区参数。</li><li>新增<code>Model.LeftJoinOnFields/RightJoinOnFields/InnerJoinOnFields</code>方法，用于更便捷实现<code>Join</code>关联操作。</li><li>修复<code>Model.WherePrefixNotIn</code>方法实现问题。</li></ol></li><li><code>gredis</code><ol><li>新增<code>Cluster</code>配置项，用于指定是否使用集群模式：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgoframe.org%2Fpages%2Fviewpage.action%3FpageId%3D1114217" target="_blank">Redis-配置管理</a></li><li>新增<code>Protocol</code>配置项，用于指定<code>RESP</code>版本：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgoframe.org%2Fpages%2Fviewpage.action%3FpageId%3D1114217" target="_blank">Redis-配置管理</a></li></ol></li><li><code>gi18n</code><ol><li>改进转译文件读取逻辑，支持从资源管理器中自动读取文件：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgoframe.org%2Fpages%2Fviewpage.action%3FpageId%3D7301640" target="_blank">I18N 国际化-配置管理</a></li></ol></li><li><code>gclient</code><ol><li>新增<code>NoUrlEncode</code>特性，设置<code>GET</code>请求不自动对参数做<code>UrlEncode</code>编码。</li></ol></li><li><code>ghttp</code><ol><li>改进退出信号处理，支持<code>windows</code>平台下的退出信号捕获后优雅退出。</li></ol></li><li><code>goai</code><ol><li>支持自动识别<code>ghttp.UploadFile</code>类型为<code>OpenAPIv3</code>的<code>File</code>类型。</li><li>去掉<code>Path</code>对象上与<code>Method</code>对象上重复的描述信息。</li><li>接口示例的字段类型按照参数数据类型自动转换为对应的数据类型。</li></ol></li><li><code>gcfg</code><ol><li>新增<code>AdapterContent</code>配置接口实现，使用具体的配置内容来实现配置管理对象：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgoframe.org%2Fpages%2Fviewpage.action%3FpageId%3D120274394" target="_blank">配置管理-AdapterContent</a></li></ol></li><li><code>gctx</code><ol><li>新增<code>NeverDone</code>方法，用于包裹给定的<code>ctx</code>对象并返回一个永不会过期和<code>Cancel</code>的<code>ctx</code>对象。</li></ol></li><li><code>gfile</code><ol><li>默认创建的文件模式从<code>0777</code>改为了<code>0755</code>。</li><li>改进<code>Copy/CopyFile/CopyDir</code>方法，增加<code>CopyOption</code>可选参数，用于控制复制逻辑的可选项。</li></ol></li><li><code>gmutex</code><ol><li>使用<code>Golang</code>新版本的<code>mutex</code>改进<code>gmutex.Mutex</code>对象，直接使用新版本标准库的<code>TryLock/TryRLock</code>，不再自行实现这些重复的方法。保留<code>LockFunc/TryLockFunc</code>方法。</li><li>新增<code>gmutex.RWMutex</code>对象，扩展自标准库的<code>sync.RWMutex</code>对象，扩展新增了<code>LockFunc/TryLockFunc、RLockFunc/TryRLockFunc</code>方法。</li></ol></li><li><code>gstr</code><ol><li>新增<code>List2/ListAndTrim2/List3/ListAndTrim3</code>方法，实现类似于<code>PHP list</code>方法特性，将字符串拆分后作为多个结果值返回。</li><li>新增<code>CaseConvert</code>方法，用于按照给定的<code>CaseType</code>类型参数执行字符串命名格式转换。</li></ol></li><li><code>gconv</code><ol><li>新增<code>ConvertWithRefer</code>方法，用于给定参数作为类型参考，并转换给定参数为指定参数的类型。</li></ol></li><li><code>gutil</code><ol><li>新增<code>FillStructWithDefault</code>方法，用于自动通过读取<code>struct tag</code>读取默认值并填充给定的<code>struct</code>对象/指针。</li></ol></li><li><code>gvalid</code><ol><li>修复<code>enums</code>校验规则不支持<code>map</code>参数类型的问题。</li></ol></li></ol><h1>社区组件</h1><h2>配置管理</h2><ol><li>新增<code>contrib/config/consul</code>组件，用于配置管理组件接口的<code>consul</code>服务实现：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgogf%2Fgf%2Ftree%2Fmaster%2Fcontrib%2Fconfig%2Fconsul" target="_blank">https://github.com/gogf/gf/tree/master/contrib/config/consul</a></li></ol><h2>数据库实现</h2><ol><li>改进<code>contrib/drivers/dm</code>组件： 
  <ol><li>支持<code>schema</code>参数配置。</li><li>支持<code>time.Time/*time.Time</code>时间类型参数操作。</li></ol></li><li>改进<code>contrib/drivers/sqlite</code>组件，支持<code>Insert Ignore</code>及<code>Save</code>操作。</li><li>新增<code>contrib/drivers/sqlitecgo</code>组件，通过<code>cgo</code>方式支持<code>i386</code>系统架构。</li><li>改进<code>contrib/nosql/redis</code>组件： 
  <ol><li>增加<code>TLSConfig</code>配置，以支持<code>TLS</code>链接<code>Redis Server</code>。</li><li>增加<code>Protocol</code>配置项，以支持最新版本的<code>Redis Server</code>。</li></ol></li></ol><h2>服务注册发现</h2><ol><li>新增<code>contrib/registry/nacos</code>组件，使用<code>nacos</code>时限微服务的注册发现：</li><li>改进<code>contrib/registry/file</code>组件，自动删除过期的注册项，避免客户端发现并连接过期的服务端地址。</li><li>修复<code>contrib/registry/polaris</code>组件部分实现问题。</li></ol><h2>微服务组件</h2><ol><li>改进<code>contrib/rpc/grpcx</code>组件： 
  <ol><li>客户端支持直接给定链接地址访问服务端。</li><li>完善单测，提高代码质量。</li></ol></li></ol><h1>开发工具</h1><ol><li>改进<code>cli</code>工具安装方式，额外支持<code>go install</code>安装方式：<code>go install github.com/gogf/gf/cmd/gf/v2@latest</code></li><li>改进<code>gf run</code>命令，新增<code>WatchPaths/-w</code>配置，支持指定监听的路径列表，避免默认监听本地项目所有项目文件引发<code>too many opened files</code>问题：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgoframe.org%2Fpages%2Fviewpage.action%3FpageId%3D1115792" target="_blank">自动编译-run</a></li><li>改进<code>gf gen ctrl</code>命令，新增<code>Merge/-m</code>选项，用以控制生成的控制器代码文件按照<code>api</code>层的文件生成，而不是默认按照<code>api</code>接口拆分为不同的接口实现文件：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgoframe.org%2Fpages%2Fviewpage.action%3FpageId%3D93880327" target="_blank">接口规范-gen ctrl</a></li><li>改进<code>gf gen dao</code>命令，新增<code>RemoveFieldPrefix/-rf</code>选项，用于自动去掉生成表字段的名称前缀：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgoframe.org%2Fpages%2Fviewpage.action%3FpageId%3D3673173" target="_blank">数据规范-gen dao</a></li><li>改进<code>gf gen pbentity</code>命令，新增<code>RemoveFieldPrefix/-rf</code>选项，用于自动去掉生成表字段的名称前缀：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgoframe.org%2Fpages%2Fviewpage.action%3FpageId%3D80488193" target="_blank">数据表 PB-gen pbentity</a></li><li>改进<code>gf gen service</code>命令，支持自动识别<code>logic</code>模块对象的方法注释生成到<code>service</code>接口文件中。</li><li>改进<code>gf version/gf -v</code>命令，更详细的工具版本、运行环境、框架版本信息。</li><li>改进开发工具的初始化效率，去掉影响初始化效率的<code>init</code>包方法逻辑。</li><li>修复<code>gf gen dao</code>命令中指定<code>Link</code>数据库配置失效的问题。</li><li>其他一些细节修复。</li></ol></div>
                                    ]]>
            </description>
            <pubDate>Sun, 17 Dec 2023 13:18:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271639/goframe-2-6</guid>
            <link>https://www.oschina.net/news/271639/goframe-2-6</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[酷瓜云课堂（内网版）v1.1.0 发布，局域网课程点播+直播平台]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><img alt="酷瓜云课堂-局域网学习平台" src="https://portal-1255691183.file.myqcloud.com/img/content/624528cd8be23.png" referrerpolicy="no-referrer"></p><h3>更新内容</h3><ul><li>增加文章分类功能</li><li>增加问题分类功能</li><li>增加专栏付费功能</li><li>增加审核等批量功能</li><li>增加若干业务插件埋点</li><li>精简重构大量业务逻辑</li><li>已发现的问题修复</li></ul><h3>移动端下载</h3><p>下载地址：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdownload.koogua.com%2Frelease%2Flan-edu-app-v1.0.4.zip" target="_blank">https://download.koogua.com/release/lan-edu-app-v1.0.4.zip</a></p><h3>系统介绍</h3><p>酷瓜云课堂内网版，采用 C 扩展框架 Phalcon 开发，使用本地基础服务，无营销相关功能，主要适用于公司，学校等内部网络环境使用。</p><h3>系统功能</h3><p>实现了点播、直播、专栏、问答、积分等。</p><p>友情提示：</p><ul><li>演示系统配置低，带宽有限，切莫压测</li><li>课程数据来源于网络（无实质内容）</li><li>管理后台已禁止数据提交，私密配置已过滤</li></ul><p>系统演示：</p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flan-edu.koogua.com" target="_blank">前台演示</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flan-edu.koogua.com%2Fadmin" target="_blank">后台演示</a></li></ul><p>演示账号：100015@163.com / 123456 （前后台通用）</p><h3>项目组件</h3><ul><li>后台框架：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fphalcon.io" target="_blank">phalcon 3.4.5</a></li><li>前端框架：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flayui.com" target="_blank">layui 2.8.8</a></li><li>全文检索：<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.xunsearch.com" target="_blank">xunsearch 1.4.9</a></li><li>即时通讯：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fworkerman.net" target="_blank">workerman 3.5.22</a></li><li>基础依赖：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fphp.net" target="_blank">php7.3</a>， <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmysql.com" target="_blank">mysql5.7</a>， <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fredis.io" target="_blank">redis5.0</a></li></ul><h3>项目文档</h3><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.koogua.com%2Fpage%2Fwiki" target="_blank">运行环境搭建</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.koogua.com%2Fpage%2Fwiki" target="_blank">系统服务配置</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.koogua.com%2Fpage%2Fwiki" target="_blank">客户终端配置</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Sun, 17 Dec 2023 12:02:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271629</guid>
            <link>https://www.oschina.net/news/271629</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Redisson 3.25.1 发布，改进 JDK21 虚拟线程兼容性]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Redisson 3.25.1&nbsp;现已发布，这是一个 Java 编写的 Redis 客户端，具备驻内存数据网格（In-Memory Data Grid）功能，并获得了 Redis 的官方推荐。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">此版本更新内容如下：</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong style="color:#333333"><span style="background-color:#ffffff; color:#1f2328">Improvement</span></strong></p><ul><li style="text-align:start"><span style="background-color:#ffffff; color:#1f2328">JDK21 虚拟线程兼容性</span></li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong style="color:#333333">Fixed</strong><span style="background-color:#ffffff; color:#333333">&nbsp;</span></p><ul><li style="text-align:start">即使调用了<code>destroy()</code>方法，EvictionTask 仍在继续运行</li><li style="text-align:start">Sprint Data Redis 引发的&nbsp;<code>Subscription registration timeout exceeded</code></li><li style="text-align:start">Sprint Data Redis&nbsp;<code>RedisMessageListenerContainer.addMessageListener()</code>&nbsp;方法在容器启动后调用会挂起的问题</li><li style="text-align:start">如果<code>lazyInitialization = true</code>会抛出 NPE&nbsp;</li><li style="text-align:start"><code>PriorityQueue</code>&nbsp;方法可能会因异常后未释放的锁而挂起</li><li style="text-align:start"><code>RMap.getAll()</code>&nbsp;方法抛出&nbsp;<code>IndexOutOfBoundsException</code></li><li style="text-align:start">&nbsp;natMapper 在 Sentinel 模式下启动时不会应用于从属节点和主节点</li><li style="text-align:start">如果&nbsp;<code>retryInterval = 0</code>，方法调用在故障转移后挂起</li><li style="text-align:start">事务性 Map 和 MapCache keySet 方法返回不一致的状态</li><li style="text-align:start">Multilock&nbsp;锁定方法无法与 non-MILLISECONDS TimeUnit 一起正常工作</li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">更新说明：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fredisson%2Fredisson%2Freleases%2Ftag%2Fredisson-3.25.1" target="_blank">https://github.com/redisson/redisson/releases/tag/redisson-3.25.1</a></p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 17 Dec 2023 10:32:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271617/redisson-3-25-1-released</guid>
            <link>https://www.oschina.net/news/271617/redisson-3-25-1-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[iRTU v2.0.1 已经发布，DTU/RTU 解决方案]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>iRTU v2.0.1 已经发布，DTU/RTU 解决方案</p><p>此版本更新内容包括：</p><p>1、新增了阿里云企业版</p><p>2、对单次 http 和 http 网络通道进行了优化</p><p>3、新增了 onenet 新版</p><p>4、对单次 http 进行了优化</p><p>5、对单次 tcp 进行了优化，连接失败超过一定次数会返回 ERROR 而不是一直连接</p><p>6、新增了休眠模式拉低管脚的操作，8910 为 gpio28</p><p>7、修改了 485oetime 的问题</p><p>8、新增了 gps 的串口配置</p><p>9、修改了多主题订阅会把 qos 当做主题的 bug</p><p>详情查看：<a href="https://gitee.com/hotdll/iRTU/releases/v2.0.1">https://gitee.com/hotdll/iRTU/releases/v2.0.1</a></p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 17 Dec 2023 07:28:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271577/irtu-2-0-1-released</guid>
            <link>https://www.oschina.net/news/271577/irtu-2-0-1-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[开源的项目任务协作管理系统 —— 勾股 DEV 3.12.18 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#40485b; margin-left:0; margin-right:0; text-align:start">勾股 DEV 是一款专为 IT 研发团队打造的项目管理与团队协作的系统工具，可以在线管理团队的工作、项目和任务，覆盖从需求提出到研发完成上线整个过程的项目协作。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:start">勾股 DEV 通过 「项目（Project）」 的形式把<strong>成员、需求、任务、缺陷 (BUG)、文档、互动讨论</strong>以及各种形式的资源组织在一起，团队成员参与更新任务、文档等内容来推动项目的进度，同时系统利用时间线索和各种动态的报表的形式来自动给成员汇报项目进度。</p><ul></ul><h3><strong>🔴该版本更新日志</strong></h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:start"><span style="background-color:#ffffff; color:#40485b">1、优化：项目可见人权限统一修改为拥有超级管理员权限的用户都可以查看；</span><br><span style="background-color:#ffffff; color:#40485b">2、新增：工作日志列表展示关联的任务和项目；</span><br><span style="background-color:#ffffff; color:#40485b">3、新增：任务列表展示关联的项目；</span><br><span style="background-color:#ffffff; color:#40485b">4、新增：工作记录删除功能，只有超级管理员权限才能删除，其他人不准删除；</span><br><span style="background-color:#ffffff; color:#40485b">5、优化：任务删除功能，如果任务存在关联的工作记录无法删除；</span><br><span style="background-color:#ffffff; color:#40485b">6、修复：修改超级管理员信息时，登录名被修改了的问题；</span><br><span style="background-color:#ffffff; color:#40485b">7、新增：支持用户使用用户名、手机号码、邮箱登录；</span><br><span style="background-color:#ffffff; color:#40485b">8、修复：项目详情中的工作记录列表在无数据时读取全部的问题；</span><br><span style="background-color:#ffffff; color:#40485b">9、优化：工作记录列表，默认只读取个人的工作记录数据，如果是超级权限管理员的话读取全部员工的工作记录数据；</span><br><span style="background-color:#ffffff; color:#40485b">10、新增：工作记录列表增加时间筛选条件检索；</span><br><span style="background-color:#ffffff; color:#40485b">11、修复：项目任务修改状态时候，同步改变项目进度不准确的问题；</span><br><span style="background-color:#ffffff; color:#40485b">12、新增：工作记录开放给创建者修改；</span><br><span style="background-color:#ffffff; color:#40485b">13、优化：员工选择的前端控件，操作体验更佳，同时修复了，已选员工删除造成 ID 不准的 bug；</span><br><span style="background-color:#ffffff; color:#40485b">14、升级：layUI 升级到最新版 2.9.1；</span><br><span style="background-color:#ffffff; color:#40485b">15、完善部分已知的问题或者细节调整。</span></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:start"><strong>🔴系统特点</strong></p><ul><li>多产品支持，可添加多产品管理；</li><li>多项目支持，可以多项目同时进行管理，支持项目分阶段拆解项目；</li><li>可配置的用户角色控制，不同的角色可配置不同的操作权限；</li><li>Wiki 形式的文档撰写，Mardown 编辑器，工程师使用更高效便捷；</li><li>每个项目配置有需求、任务、Wiki 文档、动态记录、互动评论、工作记录模块；</li><li>任务时间跟踪机制，项目任务多状态流转，任务成果可见可控，支持子任务模式。</li><li>工时登记，团队精细化管理，可统计每个人每天在每个项目做了多少时间；</li><li>任务安排，任务分配指定人，可设置负责人、多协同人员；</li><li>员工的操作记录全覆盖跟踪。</li></ul><h3><strong>相关链接</strong></h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="background-color:#ffffff; color:#40485b">项目开源地址：</span><a href="https://gitee.com/gougucms/dev.git" target="_blank">https://gitee.com/gougucms/dev.git</a><br><span style="background-color:#ffffff; color:#40485b">系统介绍：</span><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.gougucms.com%2Fhome%2Fpages%2Fdetail%2Fs%2Fgougudev.html" target="_blank">https://www.gougucms.com/home/pages/detail/s/gougudev.html</a><br><span style="background-color:#ffffff; color:#40485b">文档地址：</span><a href="https://gitee.com/link?target=https%3A%2F%2Fblog.gougucms.com%2Fhome%2Fbook%2Fdetail%2Fbid%2F7.html" target="_blank">https://blog.gougucms.com/home/book/detail/bid/7.html</a></p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 17 Dec 2023 06:08:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271549</guid>
            <link>https://www.oschina.net/news/271549</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[智能制造一体化 v3.11.5 发布，手机端更新]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">智能制造一体化管理系统&nbsp;[SpringBoot2 - 快速开发平台]，适用于制造业、建筑业、汽车行业、互联网、教育、政府机关等机构的管理。包含文件在线操作、工作日志、多班次考勤、CRM、ERP 进销存、项目管理、EHR、拖拽式生成问卷、日程、笔记、工作计划、行政办公、薪资模块、动态表单、知识库、公告模块、企业论坛、云售后模块、生产模块、系统模块化同步模块等多种复杂业务功能。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>有一些小伙伴很好奇最近更新的内容和智能制造有什么关系？</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>答</strong>：目前 Skyeye 整体在做重构，优先从底层的一些功能开始，所以现在大家看到的和智能制造的联系不是很大，也希望大家能够理解，一个大型的智能制造对底层的依赖性也是非常高的。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">智能制造一体化 v3.11.5 发布&nbsp;，重构内容如下：</p><ul><li><span style="color:#000000">手机端整体框架搭建完成</span></li><li>手机端组件适配已完成 8 个组件</li><li>行政模块手机端已完成 30%</li><li>ERP 手机端已完成 35%</li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">Skyeye 具备<strong>低代码、快捷开发、可视化设计、微服务</strong>等特点，方便客户二次开发，极大的提高了开发效率。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">erp：&nbsp;<a href="https://gitee.com/doc_wei01/erp-pro">https://gitee.com/doc_wei01/erp-pro</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">OA：&nbsp;<a href="https://gitee.com/doc_wei01/skyeye">https://gitee.com/doc_wei01/skyeye</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">报表：<a href="https://gitee.com/doc_wei01/skyeye-report">https://gitee.com/doc_wei01/skyeye-report</a>&nbsp;</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">产品信息：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.qq.com%2Fdoc%2FDYUxuT3pSdGhVVXFC" target="_blank">https://docs.qq.com/doc/DYUxuT3pSdGhVVXFC</a>&nbsp; 有问题可以联系作者，详情请看开发计划。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>效果图</strong></p><table cellspacing="0" style="--darkreader-inline-bgcolor:#181a1b; --darkreader-inline-border-bottom:currentcolor; --darkreader-inline-border-left:currentcolor; --darkreader-inline-border-right:currentcolor; --darkreader-inline-border-top:currentcolor; --darkreader-inline-color:#bdb7af; -webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:1px; border:medium none; box-sizing:border-box; color:#444444; display:block; font-family:-apple-system,BlinkMacSystemFont,&quot;Apple Color Emoji&quot;,&quot;Segoe UI Emoji&quot;,&quot;Segoe UI Symbol&quot;,&quot;Segoe UI&quot;,&quot;PingFang SC&quot;,&quot;Hiragino Sans GB&quot;,&quot;Microsoft YaHei&quot;,&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:14px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; line-height:inherit; margin:0px; max-width:100%; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:776px; word-break:keep-all; word-spacing:0px"><tbody><tr><th>效果图</th><th>效果图</th><th>效果图</th></tr></tbody><tbody><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px"><p><img height="1653" src="https://oscimg.oschina.net/oscnet/up-67ad6fccddc8a79a976eaa12e3f0203ae7b.png" width="763" referrerpolicy="no-referrer"></p></td><td style="border-color:#dddddd; border-style:solid; border-width:1px"><p><img height="1653" src="https://oscimg.oschina.net/oscnet/up-6607560bdbd9d946ea709c333a1a557a002.png" width="763" referrerpolicy="no-referrer"></p></td><td style="border-color:#dddddd; border-style:solid; border-width:1px"><p><img height="1653" src="https://oscimg.oschina.net/oscnet/up-5374d3fa6ee9ea268239a737d326f3cb479.png" width="763" referrerpolicy="no-referrer"></p></td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px"><p><img height="1653" src="https://oscimg.oschina.net/oscnet/up-14cdf5b88c70b727cb4842740773063c8da.png" width="763" referrerpolicy="no-referrer"></p></td><td style="border-color:#dddddd; border-style:solid; border-width:1px"><p><img height="1653" src="https://oscimg.oschina.net/oscnet/up-e702258fd0f7a4e29c63fb56811a9df277e.png" width="763" referrerpolicy="no-referrer"></p></td><td style="border-color:#dddddd; border-style:solid; border-width:1px"><p><img height="1653" src="https://oscimg.oschina.net/oscnet/up-95f24d75fa8e8b2beca189c1cac2db3a414.png" width="763" referrerpolicy="no-referrer"></p></td></tr></tbody></table></div>
                                    ]]>
            </description>
            <pubDate>Sun, 17 Dec 2023 05:22:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271539/win10-skyeye-3-11-5-released</guid>
            <link>https://www.oschina.net/news/271539/win10-skyeye-3-11-5-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[开放原子 2023 年活力开源贡献者、开源项目揭晓｜JeecgBoot 成功入选]]>
            </title>
            <description>
                <![CDATA[<div class="content"><blockquote><p style="margin-left:0; margin-right:0">JeecgBoot 是一个开源的企业级快速开发平台，它成功入选 2023 年度生态开源项目，这是对其十年坚持开源的实至名归的认可。作为一个开源项目，JeecgBoot 在过去的十年里一直秉承着开放、共享、协作的理念，不断推动着开源社区的发展。其成功入选 2023 年度生态开源项目，无疑是对其在开源领域所做出的努力和贡献的肯定。</p></blockquote><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">JeecgBoot 的成功入选，也意味着其在技术实力、社区贡献、用户口碑等方面都取得了显著成就。作为一个企业级快速开发平台，JeecgBoot 在业界享有很高的声誉，被广泛应用于企业级软件开发中。其丰富的功能模块和灵活的扩展机制，为开发者提供了便利，大大提高了软件开发的效率和质量。</p><h2>2023 年开放原子开发者大会</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">11 月 9 日，2023 年活力开源贡献者、开源项目获选榜单在 2023 开放原子开发者大会上正式公布。<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FktN-8_hWADIgBm89UFA5jw" target="_blank">https://mp.weixin.qq.com/s/ktN-8_hWADIgBm89UFA5jw</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://oscimg.oschina.net/oscnet/up-c207a829c134eeb75613a91f3fca0af645c.png" referrerpolicy="no-referrer"></p><h2>2023 年开源项目榜单</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">基金会邀请华东师范大学教授王伟，CSDN 副总裁孟迎霞，OpenDigger 项目发起人赵生宇，开放原子开源基金会资深行业研究员郭晧、蓝登峰五位评委，基于以下开源项目评估框架进行评选。<span>&nbsp;</span><img alt="" src="https://oscimg.oschina.net/oscnet/up-8123450560d167ac2cfda027ee445ff8262.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">五位评委对开源项目进行了综合评估，分别从项目的发展现状与发展速度两个维度进行评选。在 「2023 年度生态开源项目」 的评选中，评委们主要考察了项目在评选时间范围内的整体评估指标数据和发展现状。而在 「2023 年度快速成长开源项目」 的评选中，评委们则侧重分析了项目在评选时间范围内的定量指标数据增长速度以及定性指标的发展速度。 结合申报项目提交内容与 OpenRank 值、OSS Compass 指数等开源指数情况评估，五位评委评选出了 22 个 「2023 生态开源项目」 和 29 个 「2023 快速成长开源项目」。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://oscimg.oschina.net/oscnet/up-2db65a16c7d468777c1c7f7d9a470a22c87.png" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 17 Dec 2023 04:54:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271536</guid>
            <link>https://www.oschina.net/news/271536</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[REBUILD 3.5.2 已经发布，高度可定制化企业管理系统]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>REBUILD 3.5.2 已经发布，高度可定制化企业管理系统</p><p>此版本更新内容包括：</p><p>V3.5.2 Fix Version 修订版</p><ol><li>[修复] <a href="https://gitee.com/link?target=https%3A%2F%2Fgetrebuild.com%2Fdocs%2Fadmin%2Fentity%2Ffield-nreference" target="_blank">多引用</a> 字段 <a href="https://gitee.com/link?target=https%3A%2F%2Fgetrebuild.com%2Fdocs%2Fadmin%2Fentity%2Flayout%23%25E7%259B%25B8%25E5%2585%25B3%25E9%25A1%25B9%25EF%25BC%2588%25E7%259B%25B8%25E5%2585%25B3%25E8%25AE%25B0%25E5%25BD%2595%25EF%25BC%2589" target="_blank">新建相关项</a> 无法设置</li><li>[修复] <a href="https://gitee.com/link?target=https%3A%2F%2Fgetrebuild.com%2Fdocs%2Fadmin%2Fexcel-admin%23WORD%2520%25E6%25A8%25A1%25E6%259D%25BF" target="_blank">WORD 模板</a> 保持小数位</li></ol><p>V3.5 更新详情 <a href="https://gitee.com/link?target=https%3A%2F%2Fgetrebuild.com%2Fdocs%2Fdev%2Fchangelog" target="_blank">CHANGELOG</a></p><blockquote><p>一键安装包 <a href="https://gitee.com/link?target=https%3A%2F%2Fgetrebuild.com%2Fdownload" target="_blank">https://getrebuild.com/download</a> 安装指南 <a href="https://gitee.com/link?target=https%3A%2F%2Fgetrebuild.com%2Fdocs%2Fadmin%2Finstall" target="_blank">https://getrebuild.com/docs/admin/install</a></p></blockquote><p>详情查看：<a href="https://gitee.com/getrebuild/rebuild/releases/3.5.2">https://gitee.com/getrebuild/rebuild/releases/3.5.2</a></p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 17 Dec 2023 04:00:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271532/rebuild-3-5-2-released</guid>
            <link>https://www.oschina.net/news/271532/rebuild-3-5-2-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Apache Doris 2.0.3 版本正式发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span>亲爱的社区小伙伴们，<strong><span>Apache Doris 2.0.3 版本已于 2023 年 12 月 14 日正式发布，该版本对复杂数据类型、统计信息收集、倒排索引、数据湖分析、分布式副本管理等多个功能进行了优化</span></strong></span><span>，欢迎大家下载体验。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>此外，由衷感谢 104 位贡献者，他们为 Apache Doris 2.0.3 版本提交了超过 1000 个功能优化项以及问题修复，为性能及稳定性提升做出重要贡献。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span><strong><span>GitHub 下载</span></strong></span><span>：</span><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Freleases" target="_blank">https://github.com/apache/doris/releases</a></span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span><strong><span>官网下载页</span></strong></span><span>：</span><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoris.apache.org%2Fdownload%2F" target="_blank">https://doris.apache.org/download/</a></span></p><h2><span>新增特性</span></h2><h3><span>自动统计信息收集</span></h3><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>统计信息是 CBO 优化器进行代价估算时的依赖，通过收集统计信息有助于优化器了解数据分布特性、执行计划成本估算以及执行计划选择，用于查询效率的提升。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>从 2.0.3 版本开始，Apache Doris 支持了自动统计信息收集，并默认为开启状态。在每次导入事务提交后，Apache Doris 会记录导入事务更新的表信息，并估算表统计信息的健康度。当健康度低于配置参数时，Doris 将自动触发统计信息收集作业。为了降低统计信息作业的资源开销，Apache Doris 会自动采取采样的方式收集统计信息，用户也可根据需求调整参数以获得更准确的数据分布信息。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>更多信息请参考：</span><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoris.apache.org%2Fdocs%2Fquery-acceleration%2Fstatistics%2F" target="_blank">https://doris.apache.org/docs/query-acceleration/statistics/</a></span></p><h3><span>数据湖框架支持复杂数据类型</span></h3><ul><li><p style="margin-left:.5rem; margin-right:0"><span>Java UDF、JDBC catalog、Hudi MOR 表等功能支持复杂数据类型</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F24810" target="_blank">https://github.com/apache/doris/pull/24810</a></span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F26236" target="_blank">https://github.com/apache/doris/pull/26236</a></span></p></li></ul></li><li><p style="margin-left:.5rem; margin-right:0"><span>Paimon catalog 支持复杂数据类型</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F25364" target="_blank">https://github.com/apache/doris/pull/25364</a></span></p></li></ul></li><li><p style="margin-left:.5rem; margin-right:0"><span>Paimon catalog 支持 Paimon 0.5 版本</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F24985" target="_blank">https://github.com/apache/doris/pull/24985</a></span></p></li></ul></li></ul><h3><span>增加更多内置函数</span></h3><ul><li><p style="margin-left:.5rem; margin-right:0"><span>新优化器支持 BitmapAgg 函数</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F25508" target="_blank">https://github.com/apache/doris/pull/25508</a></span></p></li></ul></li><li><p style="margin-left:.5rem; margin-right:0"><span>支持 SHA 系列摘要函数</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F24342" target="_blank">https://github.com/apache/doris/pull/24342</a></span><span></span></p></li></ul></li><li><p style="margin-left:.5rem; margin-right:0"><span>聚合函数 min_by 和 max_by 支持 bitmap 数据类型</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F25430" target="_blank">https://github.com/apache/doris/pull/25430</a></span><span></span></p></li></ul></li><li><p style="margin-left:.5rem; margin-right:0"><span>增加 milliseconds/microseconds_add/sub/diff 函数</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F24114" target="_blank">https://github.com/apache/doris/pull/24114</a></span></p></li></ul></li><li><p style="margin-left:.5rem; margin-right:0"><span>增加 json_insert, json_replace, json_set JSON 函数</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F24384" target="_blank">https://github.com/apache/doris/pull/24384</a></span></p></li></ul></li></ul><h2><span>改进优化</span></h2><h3><span>性能优化</span></h3><ul><li><p style="margin-left:.5rem; margin-right:0"><span>在过滤率高的倒排索引 match where 条件和过滤率低的普通 where 条件组合时，大幅降低索引列的 IO</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>优化经过 where 条件过滤后随机读数据的效率</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>优化在 JSON 数据类型上使用老的 get_json_xx 函数的性能，提升 2-4 倍</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>支持配置降低读数据线程的优先级，保证写入的 CPU 资源和实时性</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>增加返回 largeint 的 uuid-numeric 函数，性能比返回 string 的 uuid 函数快 20 倍</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>Case when 的性能提升 3 倍</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>在存储引擎执行中裁剪不必要的谓词计算</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>支持 count 算子下推到存储层</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>优化支持 and or 表达式中包含 nullable 类型的计算性能</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>支持更多场景下 limit 算子提前到 join 前执行的改写，以提升执行效率</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>增加消除 inline view 中的无用的 order by 算子，以提升执行效率</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>优化了部分情况下的基数估计和代价模型的准确性，以提升执行效率</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>优化了 JDBC catalog 的谓词下推逻辑和大小写逻辑</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>优化了 file cache 的第一次开启后的读取效率</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>优化 Hive 表 SQL cache 策略，使用 HMS 中存储的分区更新时间作为 cache 是否失效的判断，提高 cache 命中率</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>优化了 Merge-on-Write compaction 效率</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>优化了外表查询的线程分配逻辑，降低内存使用</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>优化 column reader 的内存使用</span></p></li></ul><h3><span>分布式副本管理改进</span></h3><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>优化跳过删除分区、colocate group、持续写时均衡失败、冷热分层表不能均衡等；</span></p><h3><span>安全性提升</span></h3><ul><li><p style="margin-left:.5rem; margin-right:0"><span>审计日志插件的配置使用 token 代替明文密码以增强安全性</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F26278" target="_blank">https://github.com/apache/doris/pull/26278</a></span></p></li></ul></li><li><p style="margin-left:.5rem; margin-right:0"><span>log4j 配置安全性增强</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F24861" target="_blank">https://github.com/apache/doris/pull/24861</a></span><span></span></p></li></ul></li><li><p style="margin-left:.5rem; margin-right:0"><span>日志中不显示用户敏感信息</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F26912" target="_blank">https://github.com/apache/doris/pull/26912</a></span></p></li></ul></li></ul><h2><span>Bugfix 和稳定性提升</span></h2><h3><span>复杂数据类型</span></h3><ul><li><p style="margin-left:.5rem; margin-right:0"><span>修复了 map/struct 对定长 CHAR(n) 没有正确截断的问题</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F25725" target="_blank">https://github.com/apache/doris/pull/25725</a></span></p></li></ul></li><li><p style="margin-left:.5rem; margin-right:0"><span>修复了 struct 嵌套 map/array 写入失败的问题</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F26973" target="_blank">https://github.com/apache/doris/pull/26973</a></span></p></li></ul></li><li><p style="margin-left:.5rem; margin-right:0"><span>修复了 count distinct 不支持 array/map/struct 的问题</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F25483" target="_blank">https://github.com/apache/doris/pull/25483</a></span></p></li></ul></li><li><p style="margin-left:.5rem; margin-right:0"><span>解决 query 中出现 delete 复杂类型之后，升级过程中出现 BE crash 的问题</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F26006" target="_blank">https://github.com/apache/doris/pull/26006</a></span></p></li></ul></li><li><p style="margin-left:.5rem; margin-right:0"><span>修复了 jsonb 在 where 条件中 BE crash 问题</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F27325" target="_blank">https://github.com/apache/doris/pull/27325</a></span></p></li></ul></li><li><p style="margin-left:.5rem; margin-right:0"><span>修复了 outer join 中有 array 类型时 BE crash 的问题</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F25669" target="_blank">https://github.com/apache/doris/pull/25669</a></span></p></li></ul></li><li><p style="margin-left:.5rem; margin-right:0"><span>修复 orc 格式 decimal 类型读取错误的问题</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F26548" target="_blank">https://github.com/apache/doris/pull/26548</a></span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F25977" target="_blank">https://github.com/apache/doris/pull/25977</a></span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F26633" target="_blank">https://github.com/apache/doris/pull/26633</a></span></p></li></ul></li></ul><h3><span>倒排索引</span></h3><ul><li><p style="margin-left:.5rem; margin-right:0"><span>修复了关闭倒排索引查询时 OR NOT 组合 where 条件结果错误的问题</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F26327" target="_blank">https://github.com/apache/doris/pull/26327</a></span></p></li></ul></li><li><p style="margin-left:.5rem; margin-right:0"><span>修复了空数组的倒排索引写入时 BE crash 的问题</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F25984" target="_blank">https://github.com/apache/doris/pull/25984</a></span></p></li></ul></li><li><p style="margin-left:.5rem; margin-right:0"><span>修复输出为空的情况下 index compaction BE crash 的问题</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F25486" target="_blank">https://github.com/apache/doris/pull/25486</a></span></p></li></ul></li><li><p style="margin-left:.5rem; margin-right:0"><span>修复新增列没有写入数据时，增加倒排索引 BE crash 的问题</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F27276" target="_blank">https://github.com/apache/doris/pull/27276</a></span></p></li></ul></li><li><p style="margin-left:.5rem; margin-right:0"><span>修复 1.2 版本误建倒排索引后升级 2.0 等情况下倒排索引硬链缺失和泄露的问题</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F26903" target="_blank">https://github.com/apache/doris/pull/26903</a></span></p></li></ul></li></ul><h3><span>物化视图</span></h3><ul><li><p style="margin-left:.5rem; margin-right:0"><span>修复 group by 语句中包括重复表达式导致 BE crash 的问题</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F27523" target="_blank">https://github.com/apache/doris/pull/27523</a></span></p></li></ul></li><li><p style="margin-left:.5rem; margin-right:0"><span>禁止视图创建时 group by 子句中使用 float/doubld 类型</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F25823" target="_blank">https://github.com/apache/doris/pull/25823</a></span></p></li></ul></li><li><p style="margin-left:.5rem; margin-right:0"><span>增强支持了 select 查询命中物化视图的功能</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F24691" target="_blank">https://github.com/apache/doris/pull/24691</a></span><span></span></p></li></ul></li><li><p style="margin-left:.5rem; margin-right:0"><span>修复当使用了表的 alias 时物化视图不能命中的问题</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F25321" target="_blank">https://github.com/apache/doris/pull/25321</a></span></p></li></ul></li><li><p style="margin-left:.5rem; margin-right:0"><span>修复了创建物化视图中使用 percentile_approx 的问题</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F26528" target="_blank">https://github.com/apache/doris/pull/26528</a></span></p></li></ul></li></ul><h3><span>采样查询</span></h3><ul><li><p style="margin-left:.5rem; margin-right:0"><span>修复 table sample 功能在 partition table 上无法正常工作的问题</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F25912" target="_blank">https://github.com/apache/doris/pull/25912</a></span><span></span></p></li></ul></li><li><p style="margin-left:.5rem; margin-right:0"><span>修复 table sample 指定 tablet 无法工作的问题</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F25378" target="_blank">https://github.com/apache/doris/pull/25378</a></span><span></span></p></li></ul></li></ul><h3><span>主键表</span></h3><ul><li><p style="margin-left:.5rem; margin-right:0"><span>修复基于主键条件更新的空指针异常</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F26881" target="_blank">https://github.com/apache/doris/pull/26881</a></span><span></span></p></li></ul></li><li><p style="margin-left:.5rem; margin-right:0"><span>修复部分列更新字段名大小写问题</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F27223" target="_blank">https://github.com/apache/doris/pull/27223</a></span><span></span></p></li></ul></li><li><p style="margin-left:.5rem; margin-right:0"><span>修复 schema change 时 mow 会出现重复 key 的问题</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F25705" target="_blank">https://github.com/apache/doris/pull/25705</a></span></p></li></ul></li></ul><h3><span>导入和 Compaction</span></h3><ul><li><p style="margin-left:.5rem; margin-right:0"><span>修复 routine load 一流多表时 unkown slot descriptor 错误</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F25762" target="_blank">https://github.com/apache/doris/pull/25762</a></span></p></li></ul></li><li><p style="margin-left:.5rem; margin-right:0"><span>修复内存统计并发访问导致 BE crash 问题</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F27101" target="_blank">https://github.com/apache/doris/pull/27101</a></span><span></span></p></li></ul></li><li><p style="margin-left:.5rem; margin-right:0"><span>修复重复取消导入导致 BE crash 的问题</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F27111" target="_blank">https://github.com/apache/doris/pull/27111</a></span></p></li></ul></li><li><p style="margin-left:.5rem; margin-right:0"><span>修复 broker load 时 broker 连接报错问题</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F26050" target="_blank">https://github.com/apache/doris/pull/26050</a></span></p></li></ul></li><li><p style="margin-left:.5rem; margin-right:0"><span>修复 compaction 和 scan 并发下 delete 谓词可能导致查询结果不对的问题</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F24638" target="_blank">https://github.com/apache/doris/pull/24638</a></span></p></li></ul></li><li><p style="margin-left:.5rem; margin-right:0"><span>修复 compaction task 存在时打印大量 stacktrace 日志的问题</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F25597" target="_blank">https://github.com/apache/doris/pull/25597</a></span></p></li></ul></li></ul><h3><span>数据湖兼容性</span></h3><ul><li><p style="margin-left:.5rem; margin-right:0"><span>解决 iceberg 表中包含特殊字符导致查询失败的问题</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F27108" target="_blank">https://github.com/apache/doris/pull/27108</a></span></p></li></ul></li><li><p style="margin-left:.5rem; margin-right:0"><span>修复 Hive metastore 不同版本的兼容性问题</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F27327" target="_blank">https://github.com/apache/doris/pull/27327</a></span></p></li></ul></li><li><p style="margin-left:.5rem; margin-right:0"><span>修复读取 MaxCompute 分区表错误的问题</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F24911" target="_blank">https://github.com/apache/doris/pull/24911</a></span></p></li></ul></li><li><p style="margin-left:.5rem; margin-right:0"><span>修复备份到对象存储失败的问题</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F25496" target="_blank">https://github.com/apache/doris/pull/25496</a></span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F25803" target="_blank">https://github.com/apache/doris/pull/25803</a></span></p></li></ul></li></ul><h3><span>JDBC 外表兼容性</span></h3><ul><li><p style="margin-left:.5rem; margin-right:0"><span>修复 JDBC catalog 处理 Oracle 日期类型格式错误的问题</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F25487" target="_blank">https://github.com/apache/doris/pull/25487</a></span><span></span></p></li></ul></li><li><p style="margin-left:.5rem; margin-right:0"><span>修复 JDBC catalog 读取 MySQL 0000-00-00 日期异常的问题</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F26569" target="_blank">https://github.com/apache/doris/pull/26569</a></span></p></li></ul></li><li><p style="margin-left:.5rem; margin-right:0"><span>修复从 MariaDB 读取数据时间类型默认值为 current_timestamp 时空指针异常问题</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F25016" target="_blank">https://github.com/apache/doris/pull/25016</a></span></p></li></ul></li><li><p style="margin-left:.5rem; margin-right:0"><span>修复 JDBC catalog 处理 bitmap 类型时 BE crash 的问题</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F25034" target="_blank">https://github.com/apache/doris/pull/25034</a></span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F26933" target="_blank">https://github.com/apache/doris/pull/26933</a></span></p></li></ul></li></ul><h3><span>SQL 规划和优化</span></h3><ul><li><p style="margin-left:.5rem; margin-right:0"><span>修复了部分场景下分区裁剪错误的问题</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F27047" target="_blank">https://github.com/apache/doris/pull/27047</a></span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F26873" target="_blank">https://github.com/apache/doris/pull/26873</a></span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F25769" target="_blank">https://github.com/apache/doris/pull/25769</a></span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F27636" target="_blank">https://github.com/apache/doris/pull/27636</a></span></p></li></ul></li><li><p style="margin-left:.5rem; margin-right:0"><span>修复了部分场景下子查询处理不正确的问题</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F26034" target="_blank">https://github.com/apache/doris/pull/26034</a></span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F25492" target="_blank">https://github.com/apache/doris/pull/25492</a></span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F25955" target="_blank">https://github.com/apache/doris/pull/25955</a></span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F27177" target="_blank">https://github.com/apache/doris/pull/27177</a></span></p></li></ul></li><li><p style="margin-left:.5rem; margin-right:0"><span>修复了部分语义解析的错误</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F24928" target="_blank">https://github.com/apache/doris/pull/24928</a></span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F25627" target="_blank">https://github.com/apache/doris/pull/25627</a></span></p></li></ul></li><li><p style="margin-left:.5rem; margin-right:0"><span>修复 right outer/anti join 时，有可能丢失数据的问题</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F26529" target="_blank">https://github.com/apache/doris/pull/26529</a></span></p></li></ul></li><li><p style="margin-left:.5rem; margin-right:0"><span>修复了谓词被错误的下推穿过聚合算子的问题</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F25525" target="_blank">https://github.com/apache/doris/pull/25525</a></span></p></li></ul></li><li><p style="margin-left:.5rem; margin-right:0"><span>修正了部分情况下返回的结果 header 不正确的问题</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F25372" target="_blank">https://github.com/apache/doris/pull/25372</a></span></p></li></ul></li><li><p style="margin-left:.5rem; margin-right:0"><span>包含有 nullsafeEquals 表达式 (&lt;=&gt;) 作为连接条件时，可以正确对规划出 hash join</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F27127" target="_blank">https://github.com/apache/doris/pull/27127</a></span></p></li></ul></li><li><p style="margin-left:.5rem; margin-right:0"><span>修复了 set operation 算子中无法正确列裁剪的问题</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F26884" target="_blank">https://github.com/apache/doris/pull/26884</a></span></p></li></ul></li></ul><h2><span>行为变更</span></h2><ul><li><p style="margin-left:.5rem; margin-right:0"><span>复杂数据类型 array/map/struct 的输出格式改成跟输入格式以及 JSON 规范保持一致，跟之前版本的主要变化是日期和字符串用双引号括起来，array/map 内部的空值显示为 null 而不是 NULL。</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F25946" target="_blank">https://github.com/apache/doris/pull/25946</a></span></p></li></ul></li><li><p style="margin-left:.5rem; margin-right:0"><span>默认情况下，当用户属性 </span><span><code>resource_tags.location</code></span><span> 没有设置时，只能使用 default 资源组的节点，而之前版本中可以访问任意节点。</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F25331" target="_blank">https://github.com/apache/doris/pull/25331</a></span><span></span></p></li></ul></li><li><p style="margin-left:.5rem; margin-right:0"><span>支持 SHOW_VIEW 权限，拥有 SELECT 或 LOAD 权限的用户将不再能够执行 </span><span><code>SHOW CREATE VIEW</code></span><span> 语句，必须单独授予 SHOW_VIEW 权限。</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F25370" target="_blank">https://github.com/apache/doris/pull/25370</a></span></p></li></ul></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Sun, 17 Dec 2023 03:46:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271528/apache-doris-2-0-3-released</guid>
            <link>https://www.oschina.net/news/271528/apache-doris-2-0-3-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[PeaZip 9.6 发布，压缩管理工具]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>PeaZip 是一个适用于 Windows 和 Linux 的免费文件存档工具和 rar 提取器，可处理 200 多种存档类型（7z, ace, arc, bz2, cab, gz, iso, paq, pea, rar, tar, wim, zip, zipx...），处理跨区存档（001, r01, z01...）并支持多种存档加密标准。</p><p>该项目旨在为多种开源技术（7-Zip、FreeArc、PAQ、PEA、UPX）提供一个跨平台、可移植的 GUI 前端，专注于文件和档案管理，以及安全（强加密、双因素认证、加密密码管理器、安全删除）。</p><p>PeaZip 9.6 现已正式发布，该版本更新内容如下：</p><p><strong>CODE</strong></p><ul><li>(Windows）(peazip)\res\share\lang-wincontext 文件夹中的所有上下文菜单翻译 .reg 脚本现在都编码为 UTF-16 LE。</li><li>所有脚本现在都导出为 UTF-8 编码文件，不带 BOM</li><li>改进了应用程序二进制文件的完整性自检功能 
  <ul><li>现在对库（.dll、.so 等）和 sfx 模块进行检查（与可执行文件一样，将 SHA256 哈希值与白名单上的已知值进行匹配）。</li><li>(Windows）dragdropfilesdll.dll 现在会在应用程序启动时自动检查</li></ul></li></ul><p><strong>FILE MANAGER</strong></p><ul><li>改进的 file / archive manager 
  <ul><li>添加了只显示图标的 Compact 侧边栏，显示最常用系统路径的链接 
    <ul><li>紧凑型侧边栏可以与主侧边栏分开设置可见/隐藏</li><li>紧凑型侧边栏主要用于隐藏侧边栏或使用树形视图模式时</li></ul></li><li>改进了浏览档案时的一些特定 TOC 问题（同一项目的重复条目、不同情况下的重复名称）</li><li>改进了文件名的智能排序</li></ul></li><li>改进的主题 
  <ul><li>所有替代选项卡样式（按钮、链接和选项卡）现在都可以居中或左对齐。</li><li>链接标签样式现在与其他样式一样使用图形呈现</li></ul></li><li>引入了配置文件，用于存储所有配置数据（conf 路径中的所有内容 - 除配置文件子文件夹外），以便一次性加载/保存，供不同用户或不同用途使用，或将所有配置数据轻松导出到另一台机器上。 
  <ul><li>Profiles 以*.profile.7z 文件格式存储在配置路径中的 "Profiles "子文件夹中，并可选择使用密码/密钥文件进行加密</li><li>可通过主菜单"Options"加载/保存&nbsp;Profiles</li></ul></li><li>各种修复和改进 
  <ul><li>修复了全屏和沉浸模式下的 breadcrumb&nbsp;问题</li><li>改进了对加密 ARC 文件的处理 
    <ul><li>现在浏览带有加密文件名的 ARC 存档时会正确触发密码请求</li><li>从上下文菜单提取文件现在可正确触发密码请求，如果提供错误密码，用户可终止提取操作<br> 在 <span style="background-color:#ffffff; color:#333333">archiving / extraction / list / test&nbsp;</span>操作过程中，现在可正确报告输入名称和路径</li></ul></li></ul></li></ul><p><strong style="color:#333333">EXTRACTION and ARCHIVING</strong></p><ul><li>改进了存档提取功能，在提取到新文件夹时不应用 "先提取再移动到目的地"，因为不需要进行命名冲突分析</li></ul><p><span style="background-color:#ffffff; color:#333333">更多详情可查看：</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpeazip.github.io%2Fchangelog.html" target="_blank">https://peazip.github.io/changelog.html</a></p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 17 Dec 2023 03:43:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271525/peazip-9-6-released</guid>
            <link>https://www.oschina.net/news/271525/peazip-9-6-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
    </channel>
</rss>
