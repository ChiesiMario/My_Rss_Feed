<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[开源中国-软件更新资讯]]>
        </title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="https://rsshub.app/oschina/news/project" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[开源中国-软件更新资讯 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Wed, 20 Dec 2023 06:25:40 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[OpenSSH 9.6 现已发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">OpenSSH 是 100% 完整的 SSH 协议 2.0 实现，且包括 sftp 客户端和服务器支持。</span></p><p><span style="color:#000000">OpenSSH 9.6 现已<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.openssh.com%2Freleasenotes.html" target="_blank">发布</a>，此版本包含了许多安全修复并添加了一些小功能。其中包括一个针对所谓 Terrapin 攻击的修复。这种攻击允许 MITM 在加密开始前发送额外信息，并在加密开始后</span>立即删除相同数量的连续信息，从而有限度地破坏早期加密 SSH 传输协议的完整性。对等 SSH 客户端/服务器将无法检测到信息已被删除。</p><p>公告称，虽然这一攻击手段在密码学上很新颖，但幸运的是，其对安全的影响非常有限。因为它只允许删除连续的信息，而在协议的这一阶段删除大多数信息会阻止用户验证继续进行，并导致连接卡死。</p><p><strong>新功能</strong></p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fman.openbsd.org%2Fssh.1" target="_blank">ssh(1)</a>：添加一个 %j token，扩展为已配置的 ProxyJump 主机名（如果未使用此选项，则为空字符串），可用于多个 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fman.openbsd.org%2Fssh_config.5" target="_blank">ssh_config(5)</a>&nbsp;关键字。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugzilla.mindrot.org%2Fshow_bug.cgi%3Fid%3D3610" target="_blank">bz3610</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fman.openbsd.org%2Fssh.1" target="_blank">ssh(1)</a> : 向客户端添加 ChannelTimeout 支持，在服务器中镜像相同的选项，并允许&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fman.openbsd.org%2Fssh.1" target="_blank">ssh(1)</a>&nbsp;终止静态通道。</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fman.openbsd.org%2Fssh.1" target="_blank">ssh(1)</a>、<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fman.openbsd.org%2Fsshd.8" target="_blank">sshd(8)</a>、<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fman.openbsd.org%2Fssh-add.1" target="_blank">ssh-add(1)</a>、<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fman.openbsd.org%2Fssh-keygen.1" target="_blank">ssh-keygen(1)</a>：添加对读取 PEM PKCS8 格式的 ED25519 &nbsp;私钥的支持。以前只支持 OpenSSH 私钥格式。</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fman.openbsd.org%2Fssh.1" target="_blank">ssh(1)</a>、<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fman.openbsd.org%2Fsshd.8" target="_blank">sshd(8)</a> : 引入协议扩展，以允许在服务器得知用于身份验证的用户名后，重新协商公钥身份验证的可接受签名算法。这允许在"Match user"块中更改 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fman.openbsd.org%2Fsshd_config.5" target="_blank">sshd_config(5)</a> PubkeyAcceptedAlgorithms。</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fman.openbsd.org%2Fssh-add.1" target="_blank">ssh-add(1)</a>、<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fman.openbsd.org%2Fssh-agent.1" target="_blank">ssh-agent(1)</a> : 添加代理协议扩展，以允许在加载 PKCS#11 密钥时指定证书。这允许在所有支持 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fman.openbsd.org%2Fssh-agent.1" target="_blank">ssh-agent(1)</a> 的 OpenSSH 工具中使用由 PKCS#11 私钥支持的证书。以前只有 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fman.openbsd.org%2Fssh.1" target="_blank">ssh(1)</a> 支持这一用例。</li></ul><p><strong>Bug 修复</strong></p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fman.openbsd.org%2Fssh.1" target="_blank">ssh(1)</a> : 决定是否启用 keystroke timing obfuscation 时，只有当带有 TTY 的通道处于活动状态时才启用。</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fman.openbsd.org%2Fssh.1" target="_blank">ssh(1)</a> : 将主循环从 poll(3) 切换为 ppoll(3)，并在检查信号处理器中设置的标志之前屏蔽信号。这样可以避免在发出 ssh 退出信号和轮询之间出现潜在的 race condition。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugzilla.mindrot.org%2Fshow_bug.cgi%3Fid%3D3531" target="_blank">bz3531</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fman.openbsd.org%2Fssh.1" target="_blank">ssh(1)</a> : 当连接到同时使用 AddressFamily 和 CanonicalizeHostname 指令的目标时，AddressFamily 指令可能会被忽略。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugzilla.mindrot.org%2Fshow_bug.cgi%3Fid%3D5326" target="_blank">bz5326</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fman.openbsd.org%2Fsftp.1" target="_blank">sftp(1)</a>：当服务器返回意外信息时，正确处理了 limits@openssh.com 选项。</li><li>修复了 PuTTY 和 Dropbear 回归/集成测试中的一些问题。</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fman.openbsd.org%2Fssh.1" target="_blank">ssh(1)</a> : 仅在认证结束时释放 GSS OID，避免了不必要的 init/cleanup cycles。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugzilla.mindrot.org%2Fshow_bug.cgi%3Fid%3D2982" target="_blank">bz2982</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fman.openbsd.org%2Fssh_config.5" target="_blank">ssh_config(5)</a> : 在手册中提及"none"是 IdentityFile 的有效参数。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugzilla.mindrot.org%2Fshow_bug.cgi%3Fid%3D3080" target="_blank">BZ3080</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fman.openbsd.org%2Fscp.1" target="_blank">scp(1)</a>：改进了在旧 SCP/RCP 协议模式下，因不匹配客户端 glob(3) 模式而被拒绝的服务器路径的调试。</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fman.openbsd.org%2Fssh-agent.1" target="_blank">ssh-agent(1)</a> : 如果之前的会话绑定操作失败，则拒绝对目标受限的密钥进行签名操作。如果用户使用了不匹配的 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fman.openbsd.org%2Fssh.1" target="_blank">ssh(1)</a> 客户端和 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fman.openbsd.org%2Fssh-agent.1" target="_blank">ssh-agent(1)</a>，而客户端支持的密钥类型是代理所不支持的，那么这可能会避免将来出现打开失败的情况。</li></ul><p><span style="color:#000000"><span style="background-color:#ffffff">详情可<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.openssh.com%2Freleasenotes.html" target="_blank">查看</a></span><span style="background-color:#ffffff"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.openssh.com%2Freleasenotes.html" target="_blank">更新公告</a>。</span>&nbsp;</span></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 20 Dec 2023 03:40:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271851/openssh-9-6-released</guid>
            <link>https://www.oschina.net/news/271851/openssh-9-6-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[smqttx 2.0.12 版本更新]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>解决以下 issue：</p><p>https://gitee.com/quickmsg/smqttx/issues/I8GGXB&nbsp;</p><p>https://gitee.com/quickmsg/smqttx/issues/I8F5M1</p><p>https://gitee.com/quickmsg/smqttx/issues/I7LMC2</p><ol><li>移除 UI 页面。现在 UI 已经自动编译到项目中，无需引入 UI 依赖</li><li>规则引擎处理 JSON 数据时候，支持自动转换</li><li>解决 smqttx 跨域问题</li><li>解决 will 消息乱码问题</li></ol></div>
                                    ]]>
            </description>
            <pubDate>Wed, 20 Dec 2023 03:10:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271847</guid>
            <link>https://www.oschina.net/news/271847</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Paozhu C++ Web 框架 1.5.3 发布，完善 HTTP/2 支持 MSVC]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>最近一周更新很多，重构了 HTTP/2 模块，通过压力测试目前没有什么问题。</p><p>经过两位社区网友完善支持 Windows 下 MSVC 支持，目前 MSVC 可以开启 asan 模块,Windows 用户可以直接使用 MSVC。</p><p>为了符合监管要求，添加了 ip 转地址模块，可以详细到市，也可以到省，到省可以 1.7M 大小。</p><p>1.特性🔥🔥🔥🔥🔥</p><p>✅ 1. 自带 json 编解码不用第三方库，标准 json 支持<br> ✅ 2. 支持多域名网站<br> ✅ 3. 支持多域名 ssl 服务端<br> ✅ 4. 支持 http/1.1、http/2 协议<br> ✅ 5. 支持 websocket 服务端<br> ✅ 6. 框架自带 websocket 推送，支持定时推送到 webscoket 客户端<br> ✅ 7. 支持 httpclient get post，同步异步、协程模式，数据采集<br> ✅ 8. 框架自带 ORM,使用链接池方式，目前支持 mysql<br> ✅ 9. 框架自带线程池，和用户代码运行的线程池<br> ✅10. 框架使用 asio 自带的协程<br> ✅11. 框架特色是 I/O 使用协程池，用户代码运行使用线程池,类似 GO 那种调度，只是针对 http 请求调度<br> ✅12. 框架支持普通文件 gzip、br,并支持缓存到磁盘，下次不用 cpu 再压缩<br> ✅13. URL、POST 和上传文件,解析结果 client.get[] client.post[] client.files[]方式获取内容<br> ✅14. 自带 sendmail 类库<br> ✅15. 生成二维码 (qrcode),需要 gd、qrencode 库<br> ✅16. 插件化编程，热动态更新，使用动态库方式<br> ✅17. 框架内置通用数据缓存模块，ORM 结果缓存，提高并发能力<br> ✅18. 框架 controller 目录注解功能，方便添加 URL 路由映射，降低入门心智<br> ✅19. 结构和类注解 JSON 功能，使用 json_encode json_decode 操作复杂 C++结构体和 JSON 互转，可以参考 Wiki<br> ✅20. 提供一个完整 admin 后台管理框架（见后面图片）, 访问 URL 为 /admin/main<br> ✅21. 支持 PHP-FPM fastcgi 运行模式，代替 Apache 做 PHP 前端，让 PHP 程序员平稳过渡到 C++ 开发模式</p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fhggq%2Fpaozhu" target="_blank">https://github.com/hggq/paozhu</a></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 20 Dec 2023 02:54:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271841/paozhu-1-5-3</guid>
            <link>https://www.oschina.net/news/271841/paozhu-1-5-3</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Taro 3.6.21 发布，BAT 小程序、H5 与 RN 端统一框架]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#333333">Taro 3.6.21 现已发布。Taro 是一个开放式跨端跨框架解决方案，支持使用 React/Vue/Nerv 等框架来开发微信 / 京东 / 百度 / 支付宝 / 字节跳动 / QQ 小程序 / H5 等应用。</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="color:#333333">此版本具体更新内容如下：</span></p><h4 style="margin-left:0; margin-right:0; text-align:start"><strong>修复</strong></h4><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>小程序</strong></p><ul><li>修复了小程序 Input 组件在使用 async onInput 回调时导致输入框闪烁的问题</li><li>修复了 Webpack5 React 使用小程序自定义组件时，传递 kebab-case 属性失败的问题</li><li>修复了独立分包组件没有经过子编译器处理导致的报错问题，fix<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNervJS%2Ftaro%2Fissues%2F14848" target="_blank">#14848</a></li><li>修复了小程序中文本重叠的问题</li><li>修复了当嵌套层级过深时，模板变量 c 超过 baselevel 但没有进入新的嵌套循环的问题，fix<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNervJS%2Ftaro%2Fissues%2F14883" target="_blank">#14883</a></li></ul><p style="text-align:start"><strong>H5</strong></p><ul><li>修复了 Swiper 组件在 state 更新时导致动画阻塞的问题，fix<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNervJS%2Ftaro%2Fissues%2F14985" target="_blank">#14985</a></li><li>优化了 loadFontFace 函数的成功回调信息，以及 setTabBarBadge 函数中上标的显示</li></ul><p style="text-align:start"><strong>React-Native</strong></p><ul><li>修复了安卓平板和 iPad 设备上 pxTransform 计算不一致的问题</li></ul><h4 style="margin-left:0px; margin-right:0px; text-align:start"><strong>CI</strong></h4><ul><li>修复了 CI 相关的错误，包括移除了对 Node 14 版本的 CI 校验以及提前 publish 取消规则校验</li><li>编译增加 Ubuntu 平台，用于限制分支 CI</li></ul><h4 style="margin-left:0px; margin-right:0px; text-align:start"><strong>Refactor</strong></h4><ul><li>增加 Rust 桥接模块，并对 taro init 部分进行了 Rust 改造</li></ul><p>更新说明：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNervJS%2Ftaro%2Freleases%2Ftag%2Fv3.6.21" target="_blank">https://github.com/NervJS/taro/releases/tag/v3.6.21</a></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 20 Dec 2023 02:48:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271840/taro-3-6-21-released</guid>
            <link>https://www.oschina.net/news/271840/taro-3-6-21-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Firefox 121.0 正式发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Firefox 121.0 现已发布，具体更新内容如下：</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>New</strong></p><ul style="margin-left:0; margin-right:0"><li><div><p style="margin-left:0px; margin-right:0px"><span>Firefox 现在提示 Windows 用户安装 Microsoft&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fapps.microsoft.com%2Fdetail%2F9MVZQVXJBQ9V" target="_blank">AV1 视频扩展</a>，以便从<code>about:support</code>启用对 AV1 视频编解码器的硬件解码支持（如果尚未安装）。</span></p></div></li><li><div><p style="margin-left:0px; margin-right:0px"><span>Firefox 现在支持 macOS 系统上的<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsupport.apple.com%2Fguide%2Fmac-help%2Fuse-voice-control-commands-mh40719%2Fmac" target="_blank">语音控制命令</a>。</span></p></div></li><li><div><p style="margin-left:0px; margin-right:0px"><span>在 Linux 上，Firefox 现在默认使用 Wayland 合成器（如果可用）而不是 XWayland。这带来了对触摸板和触摸屏手势、滑动导航、每个显示器 DPI 设置、更好的图形性能等的支持。</span></p><p style="margin-left:0px; margin-right:0px"><span>注意，由于 Wayland 协议限制，画中画窗口需要额外的用户交互（通常右键单击窗口）或 shell/桌面环境调整。有关相关讨论和跟踪，可参阅&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugzilla.mozilla.org%2Fshow_bug.cgi%3Fid%3D1621261" target="_blank">bug 1621261</a>&nbsp;，有关 KDE 配置可参见本帖，以及有关 GNOME 的扩展可参见<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.reddit.com%2Fr%2Fkde%2Fcomments%2Fosjt3p%2Ffirefox_wayland_pip_workaround_or_how_i_learned%2F" target="_blank">本帖</a>。</span></p></div></li><li><span>Firefox 现在可以强制链接始终带有下划线。可以在 Firefox 设置菜单的浏览部分启用此选项。</span></li></ul><p style="margin-left:0; margin-right:0"><img height="39" src="https://oscimg.oschina.net/oscnet/up-b31dd4e7a56c998d6b0d00fe28a4a0f14f3.png" width="200" referrerpolicy="no-referrer"></p><ul style="margin-left:0; margin-right:0"><li><div><p style="margin-left:0; margin-right:0"><span>PDF 查看器现在包含一个浮动按钮，可简化删除 PDF 中添加的绘图、文本和图像的操作。</span></p></div></li></ul><p><img alt="" height="259" src="https://oscimg.oschina.net/oscnet/up-8a6c0111dae1921dad985f920761c2c97b5.png" width="500" referrerpolicy="no-referrer"></p><p><strong style="color:#333333">Fixed</strong></p><ul><li>各种<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.mozilla.org%2Fsecurity%2Fadvisories%2Fmfsa2023-56%2F" target="_blank">安全</a>修复。&nbsp;</li></ul><p><strong style="color:#333333">Developer</strong></p><ul style="margin-left:0; margin-right:0"><li><p style="margin-left:0; margin-right:0"><span>Firefox Debugger&nbsp;现在包含了一项新功能：在当前页面上禁用<code>debugger</code>关键字的选项。该功能可通过断点侧面板中的一个新复选框访问，该复选框标有 "<code>Pause on debugger statement</code>"，位于现有的<code>Pause on exceptions</code>复选框旁边。默认情况下，此选项处于启用状态，这意味着除非手动禁用，否则调试器语句将处于活动状态。</span></p><p style="margin-left:0; margin-right:0"><img alt="" height="143" src="https://oscimg.oschina.net/oscnet/up-3fde3ae00e9b3b27257a9b14f54aa63a2ba.png" width="200" referrerpolicy="no-referrer"></p></li><li><div><p style="margin-left:0; margin-right:0"><span>作为改进 Firefox 开发者工具易用性工作的一部分，统一了整个工具箱的焦点指示器。焦点指示器现在更大，对比度更高，具有白色框阴影，可增强蓝色背景上的可见度。还进行了调整，以确保共享组件和常用面板的清晰可见性，防止与元素边框或背景重叠。</span></p></div></li></ul><p>&nbsp;<strong style="color:#333333">Web Platform</strong></p><div style="margin-left:auto; margin-right:auto; text-align:start"><div><ul style="margin-left:0; margin-right:0"><li><div><p style="margin-left:0; margin-right:0"><span><span><span><span style="color:#42425a"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span><span><span><span>现在支持<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.mozilla.org%2Fdocs%2FWeb%2FCSS%2F%3Ahas" target="_blank"><code>:has()</code></a>选择器。这允许作者匹配具有或「anchors」至少一个与其相对选择器匹配的元素的元素。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p></div></li><li><div><p style="margin-left:0; margin-right:0"><span><span><span><span style="color:#42425a"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span><span><span><span>text&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.mozilla.org%2Fdocs%2FWeb%2FCSS%2Ftext-indent" target="_blank">-indent</a>&nbsp;CSS 属性现在支持<code>hanging</code>和<code>each-line</code>关键字，为参考书目、诗歌等样式提供更方便的段落布局选项。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p></div></li><li><div><p style="margin-left:0; margin-right:0"><span><span><span><span style="color:#42425a"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span><span><span><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.mozilla.org%2Fdocs%2FWeb%2FCSS%2Ftext-wrap" target="_blank">text-wrap</a>&nbsp;CSS 属性现在支持<code>balance</code>关键字，该属性可以通过协调行长度来改善短多行文本块（例如长标题或说明文字）的外观。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p></div></li><li><div><p style="margin-left:0; margin-right:0"><span><span><span><span style="color:#42425a"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span><span><span><span>现在支持&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.mozilla.org%2Fdocs%2FWeb%2FPerformance%2FLazy_loading" target="_blank">Lazy loading</a><code>&lt;iframe loading=lazy&gt;</code>iframe ( )。Lazy loading iframe 仅在可见时加载，因此非关键 iframe 可以在需要时稍后加载，以加速初始页面加载、减少初始网络使用等。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p></div></li><li><div><p style="margin-left:0; margin-right:0"><span><span><span><span style="color:#42425a"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span><span><span><span>添加了对 WebAssembly 语言中<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FWebAssembly%2Ftail-call%2Fblob%2Fmain%2Fproposals%2Ftail-call%2FOverview.md" target="_blank">尾部调用消除的支持，以改进对函数式语言的支持。</a></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p></div></li></ul></div></div><p><span style="background-color:#ffffff; color:#333333">详情可</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.mozilla.org%2Fen-US%2Ffirefox%2F121.0%2Freleasenotes%2F" target="_blank">查看更新说明</a><span style="background-color:#ffffff; color:#333333">。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 20 Dec 2023 02:21:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271836/firefox-121-0-released</guid>
            <link>https://www.oschina.net/news/271836/firefox-121-0-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[同程旅行 smart-doc 3.0.1 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>尊敬的 Smart-Doc 社区用户：</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;我们很高兴地宣布，Smart-Doc 3.0.1 版本现已正式发布！在这个新版本中，我们对现有的功能进行了优化和改进，并新增了三个重要的功能。在本次的版本迭代中，我们特别感谢五位来自<span style="color:#d35400"><strong>快手</strong></span>、<span style="color:#d35400"><strong>同程旅行</strong></span>等知名互联网企业的研发工程师作为社区贡献者加入我们，是他们的辛勤付出和支持让我们的产品不断完善，更好地服务于广大社区用户。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>以下是本次更新的主要内容：</span></p><ol><li><p style="margin-left:.5rem; margin-right:0"><span>新增功能：</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span>支持基于 git 管理的增量文档构建，提高文档构建效率。</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>支持 JMeter 性能测试脚本生成，大幅降低性能测试脚本的开发成本。</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>支持将接口文档生成到 word 文件中，方便用户查阅和分享。</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>支持多路由场景下的 openapi 生成，满足不同场景的需求。</span></p></li></ul></li><li><p style="margin-left:.5rem; margin-right:0"><span>优化改进：</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span>优化 html 模版页面 url 策略，方便分享后 url 地址保持一致。</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>优化 Dubbo 文档生成设置，支持指定 Dubbo 接口的 service 名称、版本号、协议类型。</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>优化 Dubbo 文档中字段类型的展示，提高文档可读性。</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>兼容 swagger 的 tag，方便用户使用已有的 swagger 标签。</span></p></li></ul></li><li><p style="margin-left:.5rem; margin-right:0"><span>bug 修复：</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span>修复 componentType 配置为 NORMAL 失效的问题，确保配置生效。</span></p></li></ul></li></ol><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;再次感谢社区贡献者们的无私奉献和支持，正是有了你们的帮助，我们才能不断进步，为用户提供更优质和完善的文档工具。如果您在使用过程中遇到任何问题，欢迎随时与我们联系，我们将竭诚为您解答。祝您使用愉快！</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>项目地址：</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span>GitHub: </span><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FTongchengOpenSource%2Fsmart-doc" target="_blank">https://github.com/TongchengOpenSource/smart-doc</a></span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>Gitee: </span><span><a href="https://gitee.com/TongchengOpenSource/smart-doc">https://gitee.com/TongchengOpenSource/smart-doc</a></span></p></li></ul><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span style="color:#d35400"><strong>不要忘记给我们的项目点个 star 哦，您给的 star，胜过人间的诗！</strong></span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>Smart-Doc 开源社区团队</span></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 20 Dec 2023 02:02:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271832/smart-doc-3-0-1-released</guid>
            <link>https://www.oschina.net/news/271832/smart-doc-3-0-1-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[动态线程池框架 dynamic-tp 1.1.6 发布，支持 springboot3]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h2>DynamicTp 简介</h2><p>DynamicTp 是一个基于配置中心实现的轻量级动态线程池监控管理工具，主要功能可以总结为动态调参、通知报警、运行监控、三方包线程池管理等几大类。</p><p><img height="557" src="https://oscimg.oschina.net/oscnet/up-e6b68ae7844b3c2a1b970600785577b57d8.png" width="1228" referrerpolicy="no-referrer"></p><h2>DynamicTp 特性</h2><p><strong>经过多个版本的迭代，目前最新版本 v1.1.6.1 具有以下特性</strong> ✅</p><ul><li><p><strong>代码零侵入</strong>：我们改变了线程池以往的使用姿势，所有配置均放在配置中心，服务启动时会从配置中心拉取配置生成线程池对象放到 Spring 容器中，使用时直接从 Spring 容器中获取，对业务代码零侵入</p></li><li><p><strong>通知告警</strong>：提供多种通知告警维度（配置变更通知、活性报警、队列容量阈值报警、拒绝触发报警、任务执行或等待超时报警），触发配置阈值实时推送告警信息，已支持企微、钉钉、飞书、邮件、云之家报警，同时提供 SPI 接口可自定义扩展实现</p></li><li><p><strong>运行监控</strong>：定时采集线程池指标数据（20 多种指标，包含线程池维度、队列维度、任务维度、tps、tp99 等），支持通过 MicroMeter、JsonLog 两种方式，也可以通过 SpringBoot Endpoint 端点实时获取最新指标数据，同时提供 SPI 接口可自定义扩展实现</p></li><li><p><strong>任务增强</strong>：提供任务包装功能（比 Spring 线程池任务包装更强大），实现 TaskWrapper 接口即可，如 MdcTaskWrapper、TtlTaskWrapper、SwTraceTaskWrapper、OpenTelemetryWrapper，可以支持线程池上下文信息传递</p></li><li><p><strong>多配置中心支持</strong>：支持多种主流配置中心，包括 Nacos、Apollo、Zookeeper、Consul、Etcd、Polaris、ServiceComb，同时也提供 SPI 接口可自定义扩展实现</p></li><li><p><strong>中间件线程池管理</strong>：集成管理常用第三方组件的线程池，已集成 Tomcat、Jetty、Undertow、Dubbo、RocketMq、Hystrix、Grpc、Motan、Okhttp3、Brpc、Tars、SofaRpc、RabbitMq 等组件的线程池管理（调参、监控报警）</p></li><li><p><strong>轻量简单</strong>：使用起来极其简单，引入相应依赖，接入只需简单 4 步就可完成，顺利 3 分钟搞定，相当丝滑</p></li><li><p><strong>多模式</strong>：提供了增强线程池 DtpExecutor，IO 密集型场景使用的线程池 EagerDtpExecutor，调度线程池 ScheduledDtpExecutor，有序线程池 OrderedDtpExecutor，可以根据业务场景选择合适的线程池</p></li><li><p><strong>兼容性</strong>：JUC 普通线程池和 Spring 中的 ThreadPoolTaskExecutor 也可以被框架管理，@Bean 定义时加 @DynamicTp 注解即可</p></li><li><p><strong>可靠性</strong>：依靠 Spring 生命周期管理，可以做到优雅关闭线程池，在 Spring 容器关闭前尽可能多的处理队列中的任务</p></li><li><p><strong>高可扩展</strong>：框架核心功能都提供 SPI 接口供用户自定义个性化实现（配置中心、配置文件解析、通知告警、监控数据采集、任务包装等等）</p></li><li><p><strong>线上大规模应用</strong>：参考<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftech.meituan.com%2F2020%2F04%2F02%2Fjava-pooling-pratice-in-meituan.html" target="_blank">美团线程池实践</a>，美团内部已经有该理论成熟的应用经验</p></li></ul><h2>v1.1.6.1 发版记录</h2><h4>Feature</h4><ul><li><p>支持 springboot3、jdk17、spring6，@KamToHung，@dragon-zhang，@yanhom</p></li><li><p>支持 springboot 1.x、springboot 2.0.x、spring 5.0.x 等低版本，@yanhom</p></li><li><p>新增初始化器 DtpInitizlizer SPI 接口，可以在框架启动前做一些自定义初始化操作，@yanhom</p></li><li><p>支持兼容 skywalking 9.0 引入的线程池插件，1.1.5 版本在跟 skywalking 线程池插件一起使用有内存泄露问题，@yanhom</p></li><li><p>告警信息里新增堆内存占比相关信息，@yanhom</p></li><li><p>配置文件配置 dynamictp 时，新增 DtpProperties 相关属性字段自动提示功能，@yanhom</p></li></ul><h4>Bugfix</h4><ul><li><p>修复 allowCoreThreadTimeOut 参数为 true 时，ScheduledDtpExecutor 初始化失败的问题，@kyao</p></li><li><p>修复 ExecutorWrapper#threadPoolStatProvider 成员属性初始化失败问题，@KamToHung</p></li><li><p>修复 ALARM_EXECUTOR 没有移除 traceId，导致告警信息里的 traceId 错乱问题，@yanhom</p></li><li><p>修复线程池别名不一致导致 Prometheus 指标上报失败问题，@androidcj</p></li><li><p>修复使用注解注入 ScheduledThreadPoolExecutor 线程池报错的问题，@kyao</p></li><li><p>修复 ScheduledDtpExecutor 不支持超时告警的问题，@kyao</p></li><li><p>修复 alibaba dubbo 初始化失败问题，@yanhom</p></li></ul><h4>Optimize</h4><ul><li><p>ThreadPoolBuilder、ThreadPoolCreator 方法完善丰富，@yanhom</p></li><li><p>优化 tps、tp99 等指标监控相关代码，@yanhom</p></li><li><p>DtpProperties 配置类中一些字段默认值调整，enabledCollect=true，waitForTasksToCompleteOnShutdown=true，awaitTerminationSeconds=3，@yanhom</p></li><li><p>优化 JVMTI 相关模块，@dragon-zhang，@yanhom</p></li><li><p>完善 example，@yanhom</p></li><li><p>部分代码优化重构，@yanhom</p></li><li><p>hutool、sc、sca、sb 等依赖版本升级，@yanhom</p></li></ul><h4>Refactor</h4><ul><li><p>重构 NacosRefresher，去掉在配置中手动指定线程池配置文件 data-id，降低接入成本，@wuhui</p></li><li><p>重构 ApolloRefresher，去掉在配置中手动指定线程池配置文件 namespace，降低接入成本，@BanTanger</p></li><li><p>重构所有 cloud 模块的 refresher，通过监听 EnvironmentChangeEvent 事件，更精准的判断是否线程池配置变动进行刷新，@yanhom</p></li></ul><h2>maven 依赖</h2><p><strong>springboot3 以上用 1.1.6.1-3.x，以下用 1.1.6.1</strong></p><h2>加入社群</h2><p><strong>看到这儿，方便的话给项目一个 star，你的支持是我们前进的动力！</strong></p><p>使用过程中有任何问题，或者对项目有什么想法或者建议，可以加入社群，跟 1000+ 群友一起交流讨论。</p><p>加我 vx yanhom1314 拉群，备注 dynamic-tp。</p><h2>项目地址</h2><p><strong>官网</strong>：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdynamictp.cn" target="_blank">https://dynamictp.cn</a></p><p><strong>gitee 地址</strong>：<a href="https://gitee.com/dromara/dynamic-tp">https://gitee.com/dromara/dynamic-tp</a></p><p><strong>github 地址</strong>：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdromara%2Fdynamic-tp" target="_blank">https://github.com/dromara/dynamic-tp</a></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 20 Dec 2023 01:17:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271823/dynamic-tp-1-1-6-released</guid>
            <link>https://www.oschina.net/news/271823/dynamic-tp-1-1-6-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[🔥AIO 通信神器：开启物联网时代新篇章！]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h2><span style="color:#ffffff"><strong><span style="background-color:#e67e22">1、smart-socket 简介</span></strong></span></h2><p style="color:black; margin-left:0; margin-right:0; text-align:left">smart-socket，一款面向万物互联的 Java 通信框架。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="684" src="https://oscimg.oschina.net/oscnet/up-882fa84a3378e38a10f6cf7aa55ddb9971e.png" width="1080" referrerpolicy="no-referrer"></p><p style="color:black; margin-left:0; margin-right:0; text-align:left">产品特色：</p><ul><li><p style="margin-left:0; margin-right:0">极简：于 2017 年开源至今发布了数十次版本，核心代码量始终控制在 2500 行以内，总代码量不足 5000 行。</p></li><li><p style="margin-left:0; margin-right:0">易用：5 分钟上手（前提：未曾遭受网上错误编解码知识的毒害）</p></li><li><p style="margin-left:0; margin-right:0">高性能：以算法之力充分驱动硬件算力之势，基于 smart-socket 的服务在通信性能方面可轻松超过其他计算机语言开发的程序，包括且不限于：C/C++、Golang、Rust、Erlang。</p></li></ul><p style="color:black; margin-left:0; margin-right:0; text-align:left">推荐理由：</p><ol><li><p style="margin-left:0; margin-right:0">国产化，源码 100% 自研，信创首选产品。</p></li><li><p style="margin-left:0; margin-right:0">轻量化，<span style="background-color:#ffffff; color:#010101">生成 jar 包仅 62KB；单机百万长连接内存开销仅 4GB。</span></p></li><li><p style="margin-left:0; margin-right:0">插件化，多款实用插件辅助高效通信编程。</p></li><li><p style="margin-left:0; margin-right:0">人性化，低至分钟级的学习成本。</p></li></ol><blockquote><p style="color:black; margin-left:0; margin-right:0">舒适的编程体验；高效的运行表现；极少的资源开销。</p><p style="color:black; margin-left:0; margin-right:0">smart-socket 在多方面都遥遥领先 netty，除了知名度。</p></blockquote><h2><span style="color:#ffffff"><strong><span style="background-color:#e67e22">2、 版本更新</span></strong></span>​​​​​​</h2><p style="color:black; margin-left:0; margin-right:0; text-align:left">这个版本作了一些涉及 TCP 和 UDP 的通信稳定性优化，算是把早年特地留下的一个坑给填补上了。</p><p style="color:black; margin-left:0; margin-right:0; text-align:left">当初为了性能考虑，对<code>WriteBuffer#flush</code>作了无锁化设计。这带来的弊端是致使该接口线程不安全，在断开网络连接时有极小概率触发空指针。我自己这么多年总共也有遇到不超过 5 次。</p><p style="color:black; margin-left:0; margin-right:0; text-align:left">但是，Solon 作者，那个要单挑 Spring 的男人。不知道做了什么神仙操作，竟然能精准踩中这颗雷，并以「用户就是上帝」之势强烈要求我处理这个问题。</p><p style="color:black; margin-left:0; margin-right:0; text-align:left">虽然内心是拒绝的，但为了能过个安稳年，不得不耗费几晚思考接口的重构。所幸最终呈现的效果还是令我满意的，即修复了问题，又没让性能受到丝毫损伤。</p><p style="color:black; margin-left:0; margin-right:0; text-align:left">至于解决方案的具体细节，我就不在这里展开了。smart-socket 的微内核模块总共只有两千行代码，十分钟就能浏览完我八年的成果，所以有兴趣的人可以自行查阅。</p><h2><span style="color:#ffffff"><strong><span style="background-color:#e67e22">3、快速上手</span></strong></span></h2><h3>3.1 引入 Maven 依赖</h3><pre><code><span><span style="color:#333333">&lt;</span><span style="color:#e06c75"><span style="color:#333333"><span style="color:#22863a">dependencies</span></span></span><span style="color:#333333">&gt;</span></span><span><span style="color:#333333">&lt;</span><span style="color:#e06c75"><span style="color:#333333"><span style="color:#22863a">dependency</span></span></span><span style="color:#333333">&gt;</span></span><span><span style="color:#333333">&lt;</span><span style="color:#e06c75"><span style="color:#333333"><span style="color:#22863a">groupId</span></span></span><span style="color:#333333">&gt;</span></span>org.smartboot.socket<span><span style="color:#333333">&lt;/</span><span style="color:#e06c75"><span style="color:#333333"><span style="color:#22863a">groupId</span></span></span><span style="color:#333333">&gt;</span></span><span><span style="color:#333333">&lt;</span><span style="color:#e06c75"><span style="color:#333333"><span style="color:#22863a">artifactId</span></span></span><span style="color:#333333">&gt;</span></span>aio-core<span><span style="color:#333333">&lt;/</span><span style="color:#e06c75"><span style="color:#333333"><span style="color:#22863a">artifactId</span></span></span><span style="color:#333333">&gt;</span></span><span><span style="color:#333333">&lt;</span><span style="color:#e06c75"><span style="color:#333333"><span style="color:#22863a">version</span></span></span><span style="color:#333333">&gt;</span></span>${version}<span><span style="color:#333333">&lt;/</span><span style="color:#e06c75"><span style="color:#333333"><span style="color:#22863a">version</span></span></span><span style="color:#333333">&gt;</span></span><span><span style="color:#333333">&lt;/</span><span style="color:#e06c75"><span style="color:#333333"><span style="color:#22863a">dependency</span></span></span><span style="color:#333333">&gt;</span></span><span><span style="color:#333333">&lt;/</span><span style="color:#e06c75"><span style="color:#333333"><span style="color:#22863a">dependencies</span></span></span><span style="color:#333333">&gt;</span></span></code></pre><h3>3.2 定义协议</h3><p style="color:black; margin-left:0; margin-right:0; text-align:left">这里提供的示例是一种简单的字符串通信协议，仅作效果演示。实际场景中还需根据通信双方约定的协议实现编解码算法。</p><pre><code><span style="color:#c678dd"><span style="color:#6f42c1">import</span></span><span style="color:#032f62">org.smartboot.socket.Protocol;</span><span style="color:#c678dd"><span style="color:#6f42c1">import</span></span><span style="color:#032f62">org.smartboot.socket.transport.AioSession;</span><span style="color:#c678dd"><span style="color:#6f42c1">import</span></span><span style="color:#032f62">java.nio.ByteBuffer;</span><span style="color:#c678dd"><span style="color:#6f42c1">public</span></span><span><span style="color:#c678dd"><span style="color:#6f42c1">class</span></span><span style="color:#e6c07b"><span style="color:#032f62">StringProtocol</span></span><span style="color:#032f62"></span><span style="color:#c678dd"><span style="color:#032f62">implements</span></span><span style="color:#032f62"></span><span style="color:#e6c07b"><span style="color:#032f62">Protocol</span></span><span style="color:#032f62">&lt;</span><span style="color:#e6c07b"><span style="color:#032f62">String</span></span><span style="color:#032f62">&gt; </span></span><span style="color:#032f62">{</span><span style="color:#61aeee"><span style="color:#6f42c1">@Override</span></span><span><span style="color:#c678dd"><span style="color:#6f42c1">public</span></span><span style="color:#032f62">String </span><span style="color:#61aeee"><span style="color:#032f62">decode</span></span><span><span style="color:#032f62">(ByteBuffer readBuffer, AioSession session)</span></span><span style="color:#032f62"></span></span><span style="color:#032f62">{</span><span style="color:#c678dd"><span style="color:#6f42c1">int</span></span><span style="color:#032f62">remaining = readBuffer.remaining();</span><span style="color:#c678dd"><span style="color:#6f42c1">if</span></span><span style="color:#032f62">(remaining &lt; Integer.BYTES) {</span><span style="color:#c678dd"><span style="color:#6f42c1">return</span></span><span style="color:#c678dd"><span style="color:#6f42c1">null</span></span><span style="color:#6f42c1">;</span><span style="color:#6f42c1">}</span><span style="color:#6f42c1">readBuffer.mark();</span><span style="color:#c678dd"><span style="color:#6f42c1">int</span></span><span style="color:#032f62">length = readBuffer.getInt();</span><span style="color:#c678dd"><span style="color:#6f42c1">if</span></span><span style="color:#032f62">(length &gt; readBuffer.remaining()) {</span><span style="color:#6f42c1">readBuffer.reset();</span><span style="color:#c678dd"><span style="color:#6f42c1">return</span></span><span style="color:#c678dd"><span style="color:#6f42c1">null</span></span><span style="color:#6f42c1">;</span><span style="color:#6f42c1">}</span><span style="color:#c678dd"><span style="color:#6a737d">byte</span></span><span style="color:#6a737d">[]</span><span style="color:#032f62">b = </span><span style="color:#c678dd"><span style="color:#032f62">new</span></span><span style="color:#c678dd"><span style="color:#032f62">byte</span></span><span style="color:#032f62">[length];</span><span style="color:#6f42c1">readBuffer.get(b);</span><span style="color:#6f42c1">readBuffer.mark();</span><span style="color:#c678dd"><span style="color:#6f42c1">return</span></span><span style="color:#c678dd"><span style="color:#6f42c1">new</span></span><span style="color:#032f62">String(b);</span><span style="color:#6f42c1">}</span><span style="color:#6f42c1">}</span></code></pre><h3>3.3 启动服务端</h3><p style="color:black; margin-left:0; margin-right:0; text-align:left">服务端通过<span>&nbsp;</span><code>System.out</code><span>&nbsp;</span>打印客户端传输过来的字符串内容，并将该内容原样传回至客户端。</p><pre><code><span style="color:#c678dd"><span style="color:#d73a49">import</span></span> org.smartboot.socket.MessageProcessor;
<span style="color:#c678dd"><span style="color:#d73a49">import</span></span> org.smartboot.socket.transport.AioQuickServer;
<span style="color:#c678dd"><span style="color:#d73a49">import</span></span> org.smartboot.socket.transport.WriteBuffer;

<span style="color:#c678dd"><span style="color:#d73a49">import</span></span> java.io.IOException;

<span style="color:#c678dd">public</span><span><span style="color:#c678dd">class</span><span style="color:#e6c07b">StringServer</span></span>{

    <span><span style="color:#c678dd"><span><span style="color:#d73a49">public</span></span></span><span></span><span style="color:#c678dd"><span><span style="color:#d73a49">static</span></span></span><span></span><span style="color:#c678dd"><span><span style="color:#d73a49">void</span></span></span><span></span><span style="color:#61aeee"><span><span style="color:#6f42c1">main</span></span></span><span><span><span>(String[] args)</span></span></span><span></span><span style="color:#c678dd"><span><span style="color:#d73a49">throws</span></span></span><span> IOException </span></span>{
        MessageProcessor&lt;String&gt; processor = (session, msg) -&gt; {
            System.out.println(<span style="color:#98c379"><span style="color:#032f62">"receive from client: "</span></span> + msg);
            WriteBuffer outputStream = session.writeBuffer();
            <span style="color:#c678dd"><span style="color:#d73a49">try</span></span> {
                <span style="color:#c678dd"><span style="color:#d73a49">byte</span></span>[] bytes = msg.getBytes();
                outputStream.writeInt(bytes.length);
                outputStream.write(bytes);
            } <span style="color:#c678dd"><span style="color:#d73a49">catch</span></span> (IOException e) {
                e.printStackTrace();
            }
        };

        AioQuickServer server = <span style="color:#c678dd"><span style="color:#d73a49">new</span></span> AioQuickServer(<span style="color:#d19a66"><span>8888</span></span>, <span style="color:#c678dd"><span style="color:#d73a49">new</span></span> StringProtocol(), processor);
        server.start();
    }
}
</code></pre><p style="color:black; margin-left:0; margin-right:0; text-align:left"><code>try-catch 中</code>先后调用<span>&nbsp;</span><code>writeInt</code>、<code>write</code><span>&nbsp;</span>是一种协议编码手法，也是从事通信开发必须要理解和掌握的技能。</p><h3>3.4 启动客户端</h3><p style="color:black; margin-left:0; margin-right:0; text-align:left">客户端与服务端建立 TCP 连接后，便向其发送<span>&nbsp;</span><code>hello smart-socket</code>，当收到服务端的响应消息时，通过<span>&nbsp;</span><code>MessageProcessor</code><span>&nbsp;</span>的实现类进行控制枱打印。</p><pre><code><span style="color:#c678dd"><span style="color:#d73a49">import</span></span> org.smartboot.socket.MessageProcessor;
<span style="color:#c678dd"><span style="color:#d73a49">import</span></span> org.smartboot.socket.transport.AioQuickClient;
<span style="color:#c678dd"><span style="color:#d73a49">import</span></span> org.smartboot.socket.transport.AioSession;
<span style="color:#c678dd"><span style="color:#d73a49">import</span></span> org.smartboot.socket.transport.WriteBuffer;

<span style="color:#c678dd"><span style="color:#d73a49">import</span></span> java.io.IOException;

<span style="color:#c678dd">public</span><span><span style="color:#c678dd">class</span><span style="color:#e6c07b"><span style="color:#d73a49">StringClient</span></span></span>{

    <span><span style="color:#c678dd"><span style="color:#d73a49">public</span></span><span style="color:#c678dd"><span style="color:#d73a49">static</span></span><span style="color:#c678dd">void</span><span style="color:#61aeee">main</span><span>(<span style="color:#d73a49">String</span>[] args)</span><span style="color:#c678dd"><span style="color:#d73a49">throws</span></span><span style="color:#d73a49">IOException</span></span>{
        <span style="color:#d73a49">MessageProcessor</span>&lt;<span style="color:#d73a49">String</span>&gt; processor = (session, msg) -&gt; <span style="color:#d73a49">System</span>.out.<span>println</span>(<span style="color:#98c379"><span style="color:#032f62">"receive from server: "</span></span> + msg);
        <span style="color:#d73a49">AioQuickClient</span> client = <span style="color:#c678dd">new</span><span style="color:#d73a49">AioQuickClient</span>(<span style="color:#98c379"><span style="color:#032f62">"localhost"</span></span>, <span style="color:#d19a66"><span>8888</span></span>, <span style="color:#c678dd">new</span><span style="color:#d73a49">StringProtocol</span>(), processor);
        <span style="color:#d73a49">AioSession</span> session = client.start();
        <span style="color:#d73a49">WriteBuffer</span> writeBuffer = session.writeBuffer();
        <span style="color:#c678dd">byte</span>[] data = <span style="color:#98c379"><span style="color:#032f62">"hello smart-socket"</span></span>.getBytes();
        writeBuffer.writeInt(data.length);
        writeBuffer.write(data);
        writeBuffer.flush();
    }
}
</code></pre><h2><span style="color:#ffffff"><strong><span style="background-color:#e67e22">4、我们的用户</span></strong></span></h2><p>smart-socket 开源以来深受广大用户的青睐。其中有世界 500 强的知名企业；也有 Solon 之父（江湖人称单挑 Spring 的男人）；还有无数家从事物联网领域的公司。</p><p style="color:black; margin-left:0; margin-right:0; text-align:left">目前 smart-socket 在 Gitee 上已收获<span>&nbsp;</span><strong>4K+</strong><span>&nbsp;</span>Star，Fork 数超<span>&nbsp;</span><strong>1K</strong>；仓库访问量<span>&nbsp;</span><strong>10+ 万</strong>，源码下载量超<strong>4 万</strong>。在此衷心感谢各位朋友对 smart-socket 的支持和信任。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="1657" src="https://oscimg.oschina.net/oscnet/up-d7bd230691e21b32369057cf98191252b2e.png" width="1080" referrerpolicy="no-referrer"></p><p style="color:black; margin-left:0; margin-right:0; text-align:left">篇幅有限，仅展示部分...</p><hr><h2><span style="color:#ffffff"><strong><span style="background-color:#e67e22">5、关于组织</span></strong></span></h2><blockquote><p style="color:black; margin-left:0; margin-right:0">smartboot 开源组织，一个容易被误认为是在 「重复造轮子」 的低调组织。曾获得<span>&nbsp;</span><strong>2020 年度 OSC 中国开源项目「优秀 Gitee 组织 」</strong>荣誉。</p><p style="color:black; margin-left:0; margin-right:0">该组织内的明星项目包括：</p><ul><li><p style="margin-left:0; margin-right:0">smart-socket<br> 历时 5 年精炼出 2 千多行代码，轻松实现百万级长连接的 AIO 通信框架。</p></li><li><p style="margin-left:0; margin-right:0">smart-http<br> 基于 smart-socket 实现的 HTTP/1.1 web 服务。</p></li><li><p style="margin-left:0; margin-right:0">smart-servlet<br> 基于 smart-http 实现的 Servlet 3.1 容器服务。</p></li><li><p style="margin-left:0; margin-right:0">smart-mqtt<br> 基于 smart-socket 实现的 MQTT 3.1.1/5.0 Broker&amp;Client 服务。</p></li><li><p style="margin-left:0; margin-right:0">smart-flow<br> 一款具备可观测性的轻量级业务编排框架。</p></li></ul><p style="color:black; margin-left:0; margin-right:0">组织地址：https://smartboot.tech/<br> 代码仓库：https://gitee.com/smartboot</p></blockquote><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span>教程篇：</span></p><ul><li><p style="margin-left:0; margin-right:0"><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4MzU2NDA0Nw%3D%3D%26mid%3D2247483720%26idx%3D1%26sn%3De8e6d0a3faf1194abba517fea9ab5614%26chksm%3Dcf44ca28f833433ed271d7bb4d50f59a45b8be903bf7796f58a2caa0bcc591e17e66c65cb3b3%26scene%3D21%23wechat_redirect" target="_blank">通信框架 smart-socket 设计概览</a></p></li><li><p style="margin-left:0; margin-right:0"><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4MzU2NDA0Nw%3D%3D%26mid%3D2247484201%26idx%3D1%26sn%3D5b9cdf53c869c8140784db7ca7044836%26chksm%3Dcf44c849f833415f31edd730efea652a3fd0dbc6cb11a91bbdee86e506311b62c9a28e2a0e6d%26scene%3D21%23wechat_redirect" target="_blank">五分钟上手&nbsp;smart-socket</a></p></li><li><p style="margin-left:0; margin-right:0"><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4MzU2NDA0Nw%3D%3D%26mid%3D2247484018%26idx%3D1%26sn%3D67cfa4fb1d2aff719f2c891a7f590548%26chksm%3Dcf44c912f83340045685b84a938fc8b3865e1f1bcb51e6440f4a006f0a00be5d9c0a0c73eeee%26scene%3D21%23wechat_redirect" target="_blank">smart-socket 系列教程：工程结构</a></p></li><li><p style="margin-left:0; margin-right:0"><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4MzU2NDA0Nw%3D%3D%26mid%3D2247484002%26idx%3D1%26sn%3D40732f4e36e3dc911c2587300eb5fbba%26chksm%3Dcf44c902f833401412acee55bd76277b06c9255d61b9021096dc8149a9bebbf1a779be218a06%26scene%3D21%23wechat_redirect" target="_blank">smart-socket 系列教程：通信协议</a></p></li></ul><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify">插件篇：</p><ul><li><p style="margin-left:0; margin-right:0"><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4MzU2NDA0Nw%3D%3D%26mid%3D2247483862%26idx%3D1%26sn%3D90bc01e109934fe2b53e7ddc3a6a4b35%26chksm%3Dcf44cab6f83343a04fcee24f7631a2c272ac0795cd883fa29b8ac1c4cfd7aa8bca27af900865%26scene%3D21%23wechat_redirect" target="_blank">smart-socket 插件化设计</a></p></li><li><p style="margin-left:0; margin-right:0"><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4MzU2NDA0Nw%3D%3D%26mid%3D2247483874%26idx%3D1%26sn%3D96e49ac916207b7e6a868bb8d8a8690f%26chksm%3Dcf44ca82f833439480282447fcab25050fef899807c63a08096c9ec732b9edbfea55938826ae%26scene%3D21%23wechat_redirect" target="_blank">smart-socket 监控插件，性能分析的一柄利刃</a></p></li><li><p style="margin-left:0; margin-right:0"><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4MzU2NDA0Nw%3D%3D%26mid%3D2247483888%26idx%3D1%26sn%3D62837e31a0f561f5192f723906d26ce5%26chksm%3Dcf44ca90f83343865d024dfe71d66ced56aae9e2141b9402a4edbe527fd49c603733a0b78926%26scene%3D21%23wechat_redirect" target="_blank">smart-socket 码流监控插件，让通信数据无所遁形</a></p></li></ul><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify">杂篇</p><ul><li><p style="margin-left:0; margin-right:0"><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4MzU2NDA0Nw%3D%3D%26mid%3D2247484175%26idx%3D1%26sn%3D911c9191c0c4c262ca7f2787d5be8049%26chksm%3Dcf44c86ff833417980956abd88741539bb8ae4092e1cd989cec2c6437fbb848899dceda5de44%26scene%3D21%23wechat_redirect" target="_blank">smart-socket 单机百万长连接背后的故事</a></p></li><li><p style="margin-left:0; margin-right:0"><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4MzU2NDA0Nw%3D%3D%26mid%3D2247484842%26idx%3D1%26sn%3D867360bbfefcbc3d751ef90512389821%26chksm%3Dcf44cecaf83347dc5222ddaeea43bff4a3e7e1992f2565153150d3f6b68622b2ff4713009b87%26scene%3D21%23wechat_redirect" target="_blank">揭秘百万长连接背后的黑科技</a></p></li><li><p style="margin-left:0; margin-right:0"><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4MzU2NDA0Nw%3D%3D%26mid%3D2247484095%26idx%3D1%26sn%3D075f6e1b4081ab57455fe322aff8f0cb%26chksm%3Dcf44c9dff83340c96997fb53b9548f3002d997f8578ef4cb0fe2b33eeee8ed99c13a221271ea%26scene%3D21%23wechat_redirect" target="_blank">图解通信框架的调度模型</a></p></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Wed, 20 Dec 2023 01:05:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271822/smart-socket-updated</guid>
            <link>https://www.oschina.net/news/271822/smart-socket-updated</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[支持 Postman 同步，IDEA 插件 Fast Request 2023.2.3 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h1><span>​</span>简介</h1><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fplugins.jetbrains.com%2Fplugin%2F16988-restful-fast-request"><strong>Restful Fast Request</strong></a>&nbsp;是一个类似于 Postman 的 IDEA 插件。它是一个强大的 restful api 工具包插件，可以根据已有的方法帮助您快速、自动生成 url 和 params。 Restful Fast Request = API 调试工具 + API 管理工具 + API 搜索工具。 它有一个漂亮的界面来完成请求、检查服务器响应、存储你的 api 请求和导出 api 请求。插件帮助你在 IDEA 界面内更快更高效得调试你的 API。</p><p><span style="color:#d35400"><strong>最新域名</strong></span>：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fapi-buddy.cn" target="_blank"><strong>api-buddy.cn</strong></a>&nbsp;</p><p><strong>Restful Fast Request 为简化 API 调试而生，3 秒调完 Spring 接口不是梦</strong>，所以少年，赶紧<strong>上号</strong>吧</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-2c30405e687d4f8e9163f8973fe3126c029.gif" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>Restful Fast Request 为<span style="color:#1abc9c">简化 API 调试</span>而生，3 秒调完 Spring 接口不是梦</strong>，所以少年，赶紧<strong>上号</strong>吧</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="color:#9b59b6"><strong>倾听用户的声音，不断提升自我</strong>，</span>本次<span><span>&nbsp;</span></span><strong>Restful Fast Request</strong><span><span>&nbsp;</span></span>更新主要内容如下：</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong><span style="color:#e67e22">重要功能</span><span style="color:#16a085">、新功能、</span><span style="color:#3498db">优化项</span><span style="color:#16a085">、</span><span style="color:#e74c3c">修复项</span></strong></p><ul><li><span style="color:#e67e22"><strong>API 同步至 Postman</strong></span></li><li><span style="color:#16a085"><strong>自动域名切换项目名下拉框自动切换</strong></span></li><li><span style="color:#16a085"><strong>Markdown 文档模板配置</strong></span></li><li><span style="color:#16a085"><strong>JSON5 支持</strong></span></li><li><span style="color:#2980b9"><strong>Environment 重构</strong></span></li><li><span style="color:#2980b9"><strong>项目域名添加优化</strong></span></li><li><span style="color:#2980b9"><strong>api 文档同步触发在 api 保存的时候</strong></span></li><li><span style="color:#2980b9"><strong>忽略字段使用 @fastRequestParseIgnore</strong></span></li><li><strong><span style="color:#e74c3c">SearchEveryWhere 兼容 idea2023.3</span></strong></li><li><strong><span style="color:#e74c3c">body 中传非 json 报错</span></strong></li><li><strong><span style="color:#e74c3c">历史请求显示错误</span></strong></li></ul><h2><span style="color:#e67e22">1. API 同步至 Postman</span></h2><p>仅需配置 Postman 的 token 和对应 workspace 的 ID，再点击保存或同步按钮。即可将 API 上传到 Postman.无需额外操作。</p><p>同时支持了 Environment 变量的上传和域名的变量上传。</p><p><img height="1840" src="https://oscimg.oschina.net/oscnet/up-18627bbbe0d307eb830441ad4e8f4358656.png" width="2920" referrerpolicy="no-referrer"></p><p><img height="999" src="https://oscimg.oschina.net/oscnet/up-7f8a23b9a3545c020979c72016c06da7e2e.png" width="1956" referrerpolicy="no-referrer"></p><p><img height="999" src="https://oscimg.oschina.net/oscnet/up-ded3077598aebbcafb511c6b6b61aefc766.png" width="1956" referrerpolicy="no-referrer"></p><h2><span style="color:#16a085">2.&nbsp;<strong>Markdown 文档模板配置</strong></span></h2><p>利用 Velocity 和 Markdown 技术，实现导出文档和&nbsp;<strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fapi-buddy.cn%2Fguide%2Ffeatures%2FapiDocSync.html" target="_blank">Api 在线文档</a>&nbsp;</strong>自定义格式实现，满足用户各种样式类型文档的输出。</p><p><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fapi-buddy.cn%2Fguide%2Ffeatures%2FmarkdownDocTemplateConfig.html" target="_blank">点击</a></strong>查看文档</p><p><img height="804" src="https://oscimg.oschina.net/oscnet/up-057c7a9098274295f4ac275b3b6e425a966.png" width="856" referrerpolicy="no-referrer"></p><p><img height="410" src="https://oscimg.oschina.net/oscnet/up-b6215911e39a557b0206fb1ef030a0ca0ed.png" width="856" referrerpolicy="no-referrer"></p><p><img height="676" src="https://oscimg.oschina.net/oscnet/up-701b250289cf0f62165741cbd24546604f6.png" width="856" referrerpolicy="no-referrer"></p><h3><span style="color:#16a085"><strong>3. JSON5 支持</strong></span></h3><p>请求体 JSON5 格式支持,JSON 字段注释支持等</p><p><img alt="json5" src="https://api-buddy.cn/img/2023.2.2/json5.png" referrerpolicy="no-referrer"></p><h2><span style="color:#2980b9">4. Environment 重构</span></h2><p>Environment 区分为本地值 (Current value) 和共享值 (Initial value)</p><p>Initial value 可以通过提交 .fastRequest/config/fastRequestCurrentProjectEnvironment.json 实现共享</p><p><img height="1840" src="https://oscimg.oschina.net/oscnet/up-5055a22d4c5bb2d4ad9874cc6adbb26f13b.png" width="2920" referrerpolicy="no-referrer"></p><h2><span style="color:#2980b9">5. 项目域名添加优化</span></h2><p>添加项目名的时候，自动识别 module 名称作为下拉框选项,也可以自定义输入.</p><p><img alt="projectName" src="https://api-buddy.cn/img/2023.2.3/projectName.png" referrerpolicy="no-referrer"></p><h2><span style="color:#2980b9">6. 忽略字段使用@fastRequestParseIgnore</span></h2><p>针对实体类需要忽略解析的字段,可以在注释中添加@fastRequestParseIgnore 来实现,原来的注解@parseIgnore 依然适用，减少代码入侵</p><pre><code class="language-java">/**
 * xxx description
 * @fastRequestParseIgnore
 */
private String someIgnoreField ;</code></pre><p>&nbsp;</p><p>还有非常多的细节优化不再一一描述，赶紧升级吧！</p><h1>更多详情</h1><p>请点击 -------------&gt;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fapi-buddy.cn%2Fguide%2Fhistory.html" target="_blank"><strong>这里</strong></a></p><p><strong>看完还不赶紧上号？</strong></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 19 Dec 2023 23:46:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271821</guid>
            <link>https://www.oschina.net/news/271821</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[别再 mybatis 了朋友们，国产 sqltoy-orm 5.2.87 发版，用的人挺多哦！]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><strong>开源地址：</strong></p><ul><li>github:&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fchenrenfei%2Fsagacity-sqltoy" target="_blank">https://github.com/sagframe/sagacity-sqltoy</a></li><li>gitee:&nbsp;<a href="https://gitee.com/sagacity/sagacity-sqltoy">https://gitee.com/sagacity/sagacity-sqltoy</a></li><li>idea 插件 (可直接在 idea 中检索安装):&nbsp;&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fthreefish%2Fsqltoy-idea-plugins" target="_blank">https://github.com/threefish/sqltoy-idea-plugins</a></li><li>sqltoy 脚手架项目：https://gitee.com/momoljw/sss-rbac-admin</li><li>sqltoy lambda 项目:&nbsp;https://gitee.com/gzghde/sqltoy-plus</li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>更新内容</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="background-color:#ffffff; color:#40485b">1、修复@include(:sqlscript) 动态 sql 片段未清理缓存的缺陷</span><br><span style="background-color:#ffffff; color:#40485b">2、优化:paramName 匹配，支持 xxx_:paramName 下划线相邻的场景</span></p><p><strong>s</strong><strong>qltoy-orm 是 JPA 和超强查询的融合体</strong></p><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsagframe%2Fsagacity-sqltoy%23jpa%25E9%2583%25A8%25E5%2588%2586" target="_blank">JPA 部分</a></h3><ul><li>类似 JPA 的对象化 CRUD、对象级联加载和新增、更新</li><li>强化 update 操作，提供弹性字段修改能力，不同于 hibernate 先 load 后修改，而是一次数据库交互完成修改，确保了高并发场景下数据的准确性</li><li>改进了级联修改，提供了先删除或者先置无效，再覆盖的操作选项</li><li>增加了 updateFetch、updateSaveFetch 功能，强化针对强事务高并发场景的处理，类似库存台账、资金台账，实现一次数据库交互，完成锁查询、不存在则插入、存在则修改，并返回修改后的结果</li><li>增加了树结构封装，便于统一不同数据库树型结构数据的递归查询</li><li>支持分库分表、支持多种主键策略 (额外支持基于 redis 的产生特定规则的业务主键)、加密存储、数据版本校验</li><li>提供了公共属性赋值 (创建人、修改人、创建时间、修改时间、租户)、扩展类型处理等</li><li>提供了多租户统一过滤和赋值、提供了数据权限参数带入和越权校验</li></ul><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsagframe%2Fsagacity-sqltoy%23%25E6%259F%25A5%25E8%25AF%25A2%25E9%2583%25A8%25E5%2588%2586" target="_blank">查询部分</a></h3><ul><li>极为直观的 sql 编写方式，便于从客户端 &lt;--&gt; 代码，双向快速迁移，便于后期变更维护</li><li>支持缓存翻译、反向缓存匹配 key 代替 like 模糊查询</li><li>提供了跨数据库支持能力：不同数据库的函数自动转换适配，多方言 sql 根据实际环境自动匹配、多数据库同步测试，大幅提升了产品化能力</li><li>提供了取 top 记录、随机记录等特殊场景的查询功能</li><li>提供了最强大的分页查询机制：1) 自动优化 count 语句；2) 提供基于缓存的分页优化，避免每次都执行 count 查询；3) 提供了独具特色的快速分页；4) 提供了并行分页</li><li>提供了分库分表能力</li><li>提供了在管理类项目中极为价值的：分组汇总计算、行列转换 (行转列、列转行)、同比环比、树形排序、树形汇总，相关算法自然集成</li><li>提供了基于查询的层次化数据结构封装</li><li>提供了大量辅助功能：数据脱敏、格式化、条件参数预处理等</li></ul><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsagframe%2Fsagacity-sqltoy%23%25E6%2594%25AF%25E6%258C%2581%25E5%25A4%259A%25E7%25A7%258D%25E6%2595%25B0%25E6%258D%25AE%25E5%25BA%2593" target="_blank">支持多种数据库</a></h3><ul><li>常规的 mysql、oracle、db2、postgresql、 sqlserver、dm、kingbase、sqlite、h2、 oceanBase、polardb、guassdb、tidb</li><li>支持分布式 olap 数据库: clickhouse、StarRocks、greenplum、impala (kudu)</li><li>支持 elasticsearch、mongodb</li><li>所有基于 sql 和 jdbc 各类数据库查询</li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>sqltoy 特点介绍：</strong></p><ul><li><strong>sqltoy 的核心构建思想</strong></li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><img alt="" height="868" src="https://oscimg.oschina.net/oscnet/up-a385d72ceb030d705e8e5803ca3cd4c09a1.png" width="1136" referrerpolicy="no-referrer"></p><ul><li><strong>sqltoy 的对比 mybatis (plus) 的核心点：查询语句编写、可阅读性、可维护性</strong></li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" height="923" src="https://oscimg.oschina.net/oscnet/up-05295a7a1813978134a5e49a7cff0f0e1ab.png" width="1873" referrerpolicy="no-referrer"></p><ul><li><strong>对象化 crud 是基础，但 sqltoy 有针对性的改进：update、updateSaveFetch、updateFetch 等</strong></li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><img alt="" height="845" src="https://oscimg.oschina.net/oscnet/up-6b8e8204061eec3d2096a50e9899548351e.png" width="1745" referrerpolicy="no-referrer"></p><ul><li><strong>sqltoy 的缓存翻译，大幅减少表关联简化 sql，让你的查询性能成几何级提升</strong></li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="阐述 sqltoy 为什么秒杀 mybatis(plus)" src="https://p3-tt.byteimg.com/origin/pgc-image/85287e14aa3e428fbabe297472596455?from=pc" referrerpolicy="no-referrer"></p><ul><li><strong>极致的分页，同样帮助你实现查询的性能大幅提升</strong></li></ul><ol><li>快速分页:@fast () 实现先取单页数据然后再关联查询，极大提升速度</li><li>分页优化器:page-optimize 让分页查询由两次变成 1.3~1.5 次 (用缓存实现相同查询条件的总记录数量在一定周期内无需重复查询</li><li>sqltoy 的分页取总记录的过程不是简单的 select count (1) from (原始 sql)；而是智能判断是否变成:select count (1) from 'from 后语句 '， 并自动剔除最外层的 order by</li><li>sqltoy 支持并行查询：parallel="true"，同时查询总记录数和单页数据，大幅提升性能</li></ol><div><img alt="阐述 sqltoy 为什么秒杀 mybatis(plus)" src="https://p6-tt.byteimg.com/origin/pgc-image/3d5f7094da154671985dd390f56f6302?from=pc" referrerpolicy="no-referrer"></div><div>
 &nbsp;
</div><ul><li><strong>便利的跨数据库统计计算：数据旋转</strong></li></ul><div><img alt="阐述 sqltoy 为什么秒杀 mybatis(plus)" src="https://p1-tt.byteimg.com/origin/pgc-image/949bc75b5c53441c98284dae2bed11fe?from=pc" referrerpolicy="no-referrer"></div><ul><li><strong>便利的跨数据库统计计算：无限极分组统计 (含汇总求平均)</strong></li></ul><div><img alt="阐述 sqltoy 为什么秒杀 mybatis(plus)" src="https://p1-tt.byteimg.com/origin/pgc-image/f5edc52adbbe4a1ca327d9a9b0c5d64c?from=pc" referrerpolicy="no-referrer"></div><ul><li><strong>便利的跨数据库统计计算：同比环比</strong></li></ul><div><img alt="阐述 sqltoy 为什么秒杀 mybatis(plus)" src="https://p3-tt.byteimg.com/origin/pgc-image/b9d435e2852644c9a4c9e062cc3d46d7?from=pc" referrerpolicy="no-referrer"></div><div>
 5、树形表排序汇总
</div><div><p style="margin-left:0; margin-right:0"><img height="274" src="https://oscimg.oschina.net/oscnet/up-1773cce82b98a943d42caaa62f60d80f3d0.png" width="1002" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0"><img height="403" src="https://oscimg.oschina.net/oscnet/up-8717f1c442767b08f2406019ae9b63721cb.png" width="409" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0">6、扩展集成</p><p style="margin-left:0; margin-right:0"><img height="961" src="https://oscimg.oschina.net/oscnet/up-6603ed15ec936dea45c4f6fb7318f4a062b.png" width="1965" referrerpolicy="no-referrer"></p></div></div>
                                    ]]>
            </description>
            <pubDate>Tue, 19 Dec 2023 15:20:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271809</guid>
            <link>https://www.oschina.net/news/271809</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Seata 1.8.0 正式发布，支持达梦和 PolarDB-X 数据库]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div><div><div><h3><span>用户登记</span></h3><p style="margin-left:0; margin-right:0"><span style="color:#222222">欢</span><span style="color:#222222">迎</span><span style="color:#222222">已</span><span style="color:#222222">使</span><span style="color:#222222">用</span><span style="color:#222222">用</span><span style="color:#222222">户</span><span style="color:#222222">在</span><span style="color:#222222">此</span><span style="color:#222222">链</span><span style="color:#222222">接</span><span style="color:#222222">登</span><span style="color:#222222">记</span><span style="color:#222222">，</span><span style="color:#222222">便</span><span style="color:#222222">于</span><span style="color:#222222">我</span><span style="color:#222222">们</span><span style="color:#222222">更</span><span style="color:#222222">好</span><span style="color:#222222">的</span><span style="color:#222222">针</span><span style="color:#222222">对</span><span style="color:#222222">业</span><span style="color:#222222">务</span><span style="color:#222222">场</span><span style="color:#222222">景</span><span style="color:#222222">优</span><span style="color:#222222">化</span><span style="color:#222222">：</span></p><p style="margin-left:0; margin-right:0"><span style="color:#222222">https://github.com/seata/seata/issues/1246</span></p><p style="margin-left:0; margin-right:0">&nbsp;</p><h3><span style="color:#222222">发布概览</span></h3><p style="margin-left:0; margin-right:0"><strong><span style="color:#24292e">1.8.0 中对 AT 模式扩展了达梦和 PolarDB-X 2.0 数据库的支持</span></strong><span style="color:#24292e">。共通过了 80 多组 jdk（8，11，17，21）+ Spring 各版本 + OS（x86，arm64）+ druid 主要版本的交叉兼容测试，可放心平滑升级。</span></p><p style="margin-left:0; margin-right:0; text-align:center"><img src="https://intranetproxy.alipay.com/skylark/lark/0/2023/png/64127/1702439575274-fdd1a226-ecbf-43ce-834b-48bf053767c5.png" width="1080" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0"><span style="color:#222222">此</span><span style="color:#222222">次</span><span style="color:#222222"></span><span style="color:#222222">r</span><span style="color:#222222">e</span><span style="color:#222222">l</span><span style="color:#222222">e</span><span style="color:#222222">a</span><span style="color:#222222">s</span><span style="color:#222222">e</span><span style="color:#222222"></span><span style="color:#222222"> 共</span><span style="color:#222222">修</span><span style="color:#222222">改</span><span style="color:#222222">文</span><span style="color:#222222">件</span><span style="color:#222222">数</span><span style="color:#222222">：</span><strong><span style="color:#222222">190</span></strong><span style="color:#222222">，</span><span style="color:#222222">累</span><span style="color:#222222">计提交代码 </span><strong><span style="color:#222222">+23755 −773</span></strong><span style="color:#222222">，</span><span style="color:#222222">合</span><span style="color:#222222">并</span><span style="color:#222222">P</span><span style="color:#222222">R</span><span style="color:#222222"></span><strong><span style="color:#222222">76</span></strong><span style="color:#222222">个</span><span style="color:#222222">，</span><span style="color:#222222">共</span><strong><span style="color:#222222">9</span></strong><span style="color:#222222">人</span><span style="color:#222222">参</span><span style="color:#222222">与</span><span style="color:#222222">代</span><span style="color:#222222">码</span><span style="color:#222222"></span><span style="color:#222222">c</span><span style="color:#222222">o</span><span style="color:#222222">m</span><span style="color:#222222">m</span><span style="color:#222222">i</span><span style="color:#222222">t</span><span style="color:#222222"></span><span style="color:#222222">。</span></p><p style="margin-left:0; margin-right:0"><span style="color:#222222">https://github.com/seata/seata/pull/5985</span></p><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="margin-left:0; margin-right:0"><strong><span style="color:#222222">1</span></strong><strong><span style="color:#222222">.8</span></strong><strong><span style="color:#222222">.</span></strong><strong><span style="color:#222222">0</span></strong><strong><span style="color:#222222"></span></strong><strong><span style="color:#222222">m</span></strong><strong><span style="color:#222222">i</span></strong><strong><span style="color:#222222">l</span></strong><strong><span style="color:#222222">e</span></strong><strong><span style="color:#222222">s</span></strong><strong><span style="color:#222222">t</span></strong><strong><span style="color:#222222">o</span></strong><strong><span style="color:#222222">n</span></strong><strong><span style="color:#222222">e</span></strong><strong><span style="color:#222222">：</span></strong></p><p style="margin-left:0; margin-right:0"><span style="color:#222222">h</span><span style="color:#222222">t</span><span style="color:#222222">t</span><span style="color:#222222">p</span><span style="color:#222222">s</span><span style="color:#222222">:</span><span style="color:#222222">/</span><span style="color:#222222">/</span><span style="color:#222222">g</span><span style="color:#222222">i</span><span style="color:#222222">t</span><span style="color:#222222">h</span><span style="color:#222222">u</span><span style="color:#222222">b</span><span style="color:#222222">.</span><span style="color:#222222">c</span><span style="color:#222222">o</span><span style="color:#222222">m</span><span style="color:#222222">/</span><span style="color:#222222">s</span><span style="color:#222222">e</span><span style="color:#222222">a</span><span style="color:#222222">t</span><span style="color:#222222">a</span><span style="color:#222222">/</span><span style="color:#222222">s</span><span style="color:#222222">e</span><span style="color:#222222">a</span><span style="color:#222222">t</span><span style="color:#222222">a</span><span style="color:#222222">/</span><span style="color:#222222">m</span><span style="color:#222222">i</span><span style="color:#222222">l</span><span style="color:#222222">e</span><span style="color:#222222">s</span><span style="color:#222222">t</span><span style="color:#222222">o</span><span style="color:#222222">n</span><span style="color:#222222">e</span><span style="color:#222222">/30</span></p><p style="margin-left:0; margin-right:0"><strong><span style="color:#222222">s</span></strong><strong><span style="color:#222222">e</span></strong><strong><span style="color:#222222">a</span></strong><strong><span style="color:#222222">t</span></strong><strong><span style="color:#222222">a</span></strong><strong><span style="color:#222222">-</span></strong><strong><span style="color:#222222">s</span></strong><strong><span style="color:#222222">e</span></strong><strong><span style="color:#222222">r</span></strong><strong><span style="color:#222222">v</span></strong><strong><span style="color:#222222">e</span></strong><strong><span style="color:#222222">r</span></strong><strong><span style="color:#222222">： </span></strong></p><p style="margin-left:0; margin-right:0"><span style="color:#222222">h</span><span style="color:#222222">t</span><span style="color:#222222">t</span><span style="color:#222222">p</span><span style="color:#222222">s</span><span style="color:#222222">:</span><span style="color:#222222">/</span><span style="color:#222222">/</span><span style="color:#222222">g</span><span style="color:#222222">i</span><span style="color:#222222">t</span><span style="color:#222222">h</span><span style="color:#222222">u</span><span style="color:#222222">b</span><span style="color:#222222">.</span><span style="color:#222222">c</span><span style="color:#222222">o</span><span style="color:#222222">m</span><span style="color:#222222">/</span><span style="color:#222222">s</span><span style="color:#222222">e</span><span style="color:#222222">a</span><span style="color:#222222">t</span><span style="color:#222222">a</span><span style="color:#222222">/</span><span style="color:#222222">s</span><span style="color:#222222">e</span><span style="color:#222222">a</span><span style="color:#222222">t</span><span style="color:#222222">a</span><span style="color:#222222">/</span><span style="color:#222222">r</span><span style="color:#222222">e</span><span style="color:#222222">l</span><span style="color:#222222">e</span><span style="color:#222222">a</span><span style="color:#222222">s</span><span style="color:#222222">e</span><span style="color:#222222">s</span><span style="color:#222222">/</span><span style="color:#222222">d</span><span style="color:#222222">o</span><span style="color:#222222">w</span><span style="color:#222222">n</span><span style="color:#222222">l</span><span style="color:#222222">o</span><span style="color:#222222">a</span><span style="color:#222222">d</span><span style="color:#222222">/</span><span style="color:#222222">v</span><span style="color:#222222">1</span><span style="color:#222222">.8</span><span style="color:#222222">.</span><span style="color:#222222">0</span><span style="color:#222222">/</span><span style="color:#222222">s</span><span style="color:#222222">e</span><span style="color:#222222">a</span><span style="color:#222222">t</span><span style="color:#222222">a</span><span style="color:#222222">-</span><span style="color:#222222">s</span><span style="color:#222222">e</span><span style="color:#222222">r</span><span style="color:#222222">v</span><span style="color:#222222">e</span><span style="color:#222222">r</span><span style="color:#222222">-</span><span style="color:#222222">1</span><span style="color:#222222">.8</span><span style="color:#222222">.</span><span style="color:#222222">0</span><span style="color:#222222">.</span><span style="color:#222222">t</span><span style="color:#222222">a</span><span style="color:#222222">r</span><span style="color:#222222">.</span><span style="color:#222222">g</span><span style="color:#222222">z</span></p><p style="margin-left:0; margin-right:0"><strong><span style="color:#222222">d</span></strong><strong><span style="color:#222222">o</span></strong><strong><span style="color:#222222">c</span></strong><strong><span style="color:#222222">k</span></strong><strong><span style="color:#222222">e</span></strong><strong><span style="color:#222222">r image</span></strong><strong><span style="color:#222222">：</span></strong></p><p style="margin-left:0; margin-right:0"><span style="color:#222222">h</span><span style="color:#222222">t</span><span style="color:#222222">t</span><span style="color:#222222">p</span><span style="color:#222222">s</span><span style="color:#222222">:</span><span style="color:#222222">/</span><span style="color:#222222">/</span><span style="color:#222222">h</span><span style="color:#222222">u</span><span style="color:#222222">b</span><span style="color:#222222">.</span><span style="color:#222222">d</span><span style="color:#222222">o</span><span style="color:#222222">c</span><span style="color:#222222">k</span><span style="color:#222222">e</span><span style="color:#222222">r</span><span style="color:#222222">.</span><span style="color:#222222">c</span><span style="color:#222222">o</span><span style="color:#222222">m</span><span style="color:#222222">/</span><span style="color:#222222">r</span><span style="color:#222222">e</span><span style="color:#222222">p</span><span style="color:#222222">o</span><span style="color:#222222">s</span><span style="color:#222222">i</span><span style="color:#222222">t</span><span style="color:#222222">o</span><span style="color:#222222">r</span><span style="color:#222222">y</span><span style="color:#222222">/</span><span style="color:#222222">d</span><span style="color:#222222">o</span><span style="color:#222222">c</span><span style="color:#222222">k</span><span style="color:#222222">e</span><span style="color:#222222">r</span><span style="color:#222222">/</span><span style="color:#222222">s</span><span style="color:#222222">e</span><span style="color:#222222">a</span><span style="color:#222222">t</span><span style="color:#222222">a</span><span style="color:#222222">i</span><span style="color:#222222">o</span><span style="color:#222222">/</span><span style="color:#222222">s</span><span style="color:#222222">e</span><span style="color:#222222">a</span><span style="color:#222222">t</span><span style="color:#222222">a</span><span style="color:#222222">-</span><span style="color:#222222">s</span><span style="color:#222222">e</span><span style="color:#222222">r</span><span style="color:#222222">v</span><span style="color:#222222">e</span><span style="color:#222222">r</span></p><p style="margin-left:0; margin-right:0"><strong><span style="color:#222222">部</span></strong><strong><span style="color:#222222">署</span></strong><strong><span style="color:#222222">指</span></strong><strong><span style="color:#222222">南</span></strong><strong><span style="color:#222222">：</span></strong></p><p style="margin-left:0; margin-right:0"><span style="color:#222222">h</span><span style="color:#222222">t</span><span style="color:#222222">t</span><span style="color:#222222">p</span><span style="color:#222222">s</span><span style="color:#222222">:</span><span style="color:#222222">/</span><span style="color:#222222">/</span><span style="color:#222222">s</span><span style="color:#222222">e</span><span style="color:#222222">a</span><span style="color:#222222">t</span><span style="color:#222222">a</span><span style="color:#222222">.</span><span style="color:#222222">i</span><span style="color:#222222">o</span><span style="color:#222222">/</span><span style="color:#222222">z</span><span style="color:#222222">h</span><span style="color:#222222">-</span><span style="color:#222222">c</span><span style="color:#222222">n</span><span style="color:#222222">/</span><span style="color:#222222">d</span><span style="color:#222222">o</span><span style="color:#222222">c</span><span style="color:#222222">s</span><span style="color:#222222">/</span><span style="color:#222222">o</span><span style="color:#222222">p</span><span style="color:#222222">s</span><span style="color:#222222">/</span><span style="color:#222222">d</span><span style="color:#222222">e</span><span style="color:#222222">p</span><span style="color:#222222">l</span><span style="color:#222222">o</span><span style="color:#222222">y</span><span style="color:#222222">-</span><span style="color:#222222">g</span><span style="color:#222222">u</span><span style="color:#222222">i</span><span style="color:#222222">d</span><span style="color:#222222">e</span><span style="color:#222222">-</span><span style="color:#222222">b</span><span style="color:#222222">e</span><span style="color:#222222">g</span><span style="color:#222222">i</span><span style="color:#222222">n</span><span style="color:#222222">n</span><span style="color:#222222">e</span><span style="color:#222222">r</span><span style="color:#222222">.</span><span style="color:#222222">h</span><span style="color:#222222">t</span><span style="color:#222222">m</span><span style="color:#222222">l</span></p><p style="margin-left:0; margin-right:0"><strong><span style="color:#222222">升</span></strong><strong><span style="color:#222222">级</span></strong><strong><span style="color:#222222">指</span></strong><strong><span style="color:#222222">南</span></strong><strong><span style="color:#222222">：</span></strong></p><p style="margin-left:0; margin-right:0"><span style="color:#222222">h</span><span style="color:#222222">t</span><span style="color:#222222">t</span><span style="color:#222222">p</span><span style="color:#222222">s</span><span style="color:#222222">:</span><span style="color:#222222">/</span><span style="color:#222222">/</span><span style="color:#222222">s</span><span style="color:#222222">e</span><span style="color:#222222">a</span><span style="color:#222222">t</span><span style="color:#222222">a</span><span style="color:#222222">.</span><span style="color:#222222">i</span><span style="color:#222222">o</span><span style="color:#222222">/</span><span style="color:#222222">z</span><span style="color:#222222">h</span><span style="color:#222222">-</span><span style="color:#222222">c</span><span style="color:#222222">n</span><span style="color:#222222">/</span><span style="color:#222222">d</span><span style="color:#222222">o</span><span style="color:#222222">c</span><span style="color:#222222">s</span><span style="color:#222222">/</span><span style="color:#222222">o</span><span style="color:#222222">p</span><span style="color:#222222">s</span><span style="color:#222222">/</span><span style="color:#222222">u</span><span style="color:#222222">p</span><span style="color:#222222">g</span><span style="color:#222222">r</span><span style="color:#222222">a</span><span style="color:#222222">d</span><span style="color:#222222">e</span><span style="color:#222222">.</span><span style="color:#222222">h</span><span style="color:#222222">t</span><span style="color:#222222">m</span><span style="color:#222222">l</span></p><p style="margin-left:0; margin-right:0"><span style="color:#222222">与低版本可平滑兼容。 </span></p><p style="margin-left:0; margin-right:0">&nbsp;</p><h3><span style="color:#222222">版本主要更新</span></h3><h3><span style="color:#24292e">feature:</span></h3><ul><li><span style="color:#24292e">[#3672] AT 模式支持 Dameng 数据库</span></li><li><span style="color:#24292e">[#5892] AT 模式支持 PolarDB-X 2.0 数据库</span></li></ul><h3><span style="color:#24292e">bugfix:</span></h3><ul><li><span style="color:#24292e">[#5833] 修复 XA 事务失败回滚后，TC 继续重试回滚的问题</span></li><li><span style="color:#24292e">[#5884] 修复达梦前后镜像查询列名都加了引号导致 sql 异常的问题</span></li><li><span style="color:#24292e">[#5931] 修复存储 redis 哨兵模式下哨兵密码缺失的问题</span></li><li><span style="color:#24292e">[#5970] 修复某些未弃用的配置显示"已弃用"</span></li></ul><h3><span style="color:#24292e">optimize:</span></h3><ul><li><span style="color:#24292e">[#5866] 一些小的语法优化</span></li><li><span style="color:#24292e">[#5889] 移除无 license 组件</span></li><li><span style="color:#24292e">[#5890] 移除 7z 压缩支持</span></li><li><span style="color:#24292e">[#5891] 移除 mariadb.jdbc 依赖</span></li><li><span style="color:#24292e">[#5828] 修正 </span><span style="color:#24292e">codecov chart</span><span style="color:#24292e"> 不展示的问题</span></li><li><span style="color:#24292e">[#5927] 优化一些与 Apollo 相关的脚本</span></li><li><span style="color:#24292e">[#5918] 修正 codecov.yml 不标准属性</span></li><li><span style="color:#24292e">[#5939] 支持 jmx 监控配置</span></li></ul><h3><span style="color:#24292e">security:</span></h3><ul><li><span style="color:#24292e">[#5867] 修复 npm package 漏洞</span></li><li><span style="color:#24292e">[#5898] 修复 npm package 漏洞</span></li></ul><h3><span style="color:#24292e">test:</span></h3><ul><li><span style="color:#24292e">[#5888] 移除 sofa 测试用例</span></li><li><span style="color:#24292e">[#5831] 升级 </span><span style="color:#24292e">druid</span><span style="color:#24292e"> 版本，并添加 </span><span style="color:#24292e">test-druid.yml</span><span style="color:#24292e"> 用于测试 seata 与 druid 各版本的兼容性。</span></li><li><span style="color:#24292e">[#5862] 修复单元测试在 Java21 下无法正常运行的问题。</span></li><li><span style="color:#24292e">[#5914] 升级 native-lib-loader 版本</span></li><li><span style="color:#24292e">[#5960] 修复 zookeeper 单测失败问题</span></li><li><span style="color:#24292e">[#5981] 固定 </span><span style="color:#24292e">seata-server</span><span style="color:#24292e"> 所使用有 jedis 版本</span></li></ul><p style="margin-left:0; margin-right:0; text-align:left">&nbsp;</p><p style="margin-left:0; margin-right:0; text-align:left"><strong><span style="color:#222222">英文版参考：</span></strong><span style="color:#222222">https://github.com/seata/seata/releases/tag/v1.8.0</span></p><p style="margin-left:0; margin-right:0; text-align:left">&nbsp;</p><h3><span style="color:#222222">致谢</span></h3><p style="margin-left:0; margin-right:0"><span style="color:#24292e">非常感谢以下 contributors 的代码贡献。若有无意遗漏，请报告。</span></p><ul><li><span style="color:#24292e">slievrly</span></li><li><span style="color:#24292e">capthua</span></li><li><span style="color:#24292e">funky-eyes</span></li><li><span style="color:#24292e">iquanzhan</span></li><li><span style="color:#24292e">leizhiyuan</span></li><li><span style="color:#24292e">l81893521</span></li><li><span style="color:#24292e">PeppaO</span></li><li><span style="color:#24292e">wangliang181230</span></li><li><span style="color:#24292e">hsien999</span></li></ul><p style="margin-left:0; margin-right:0"><span style="color:#24292e">同时，我们收到了社区反馈的很多有价值的 issue 和建议，非常感谢大家。</span></p><p style="margin-left:0; margin-right:0">&nbsp;</p><h3><span style="color:#24292e">社区讨论群</span></h3><p style="margin-left:0; margin-right:0"><br><img src="https://intranetproxy.alipay.com/skylark/lark/0/2023/png/64127/1702439668090-39d0a62a-7c85-4932-9cd1-7128364bae4e.png" width="1080" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0; text-align:justify">&nbsp;</p><h3><span style="color:#222222">常用链接</span></h3><ul><li><strong><span style="color:#222222">S</span></strong><strong><span style="color:#222222">e</span></strong><strong><span style="color:#222222">a</span></strong><strong><span style="color:#222222">t</span></strong><strong><span style="color:#222222">a</span></strong><strong><span style="color:#222222">:</span></strong><span style="color:#222222"></span><span style="color:#222222">h</span><span style="color:#222222">t</span><span style="color:#222222">t</span><span style="color:#222222">p</span><span style="color:#222222">s</span><span style="color:#222222">:</span><span style="color:#222222">/</span><span style="color:#222222">/</span><span style="color:#222222">g</span><span style="color:#222222">i</span><span style="color:#222222">t</span><span style="color:#222222">h</span><span style="color:#222222">u</span><span style="color:#222222">b</span><span style="color:#222222">.</span><span style="color:#222222">c</span><span style="color:#222222">o</span><span style="color:#222222">m</span><span style="color:#222222">/</span><span style="color:#222222">s</span><span style="color:#222222">e</span><span style="color:#222222">a</span><span style="color:#222222">t</span><span style="color:#222222">a</span><span style="color:#222222">/</span><span style="color:#222222">s</span><span style="color:#222222">e</span><span style="color:#222222">a</span><span style="color:#222222">t</span><span style="color:#222222">a</span></li><li><strong><span style="color:#222222">S</span></strong><strong><span style="color:#222222">a</span></strong><strong><span style="color:#222222">m</span></strong><strong><span style="color:#222222">p</span></strong><strong><span style="color:#222222">l</span></strong><strong><span style="color:#222222">e</span></strong><strong><span style="color:#222222">s</span></strong><strong><span style="color:#222222">:</span></strong><span style="color:#222222"></span><span style="color:#222222">h</span><span style="color:#222222">t</span><span style="color:#222222">t</span><span style="color:#222222">p</span><span style="color:#222222">s</span><span style="color:#222222">:</span><span style="color:#222222">/</span><span style="color:#222222">/</span><span style="color:#222222">g</span><span style="color:#222222">i</span><span style="color:#222222">t</span><span style="color:#222222">h</span><span style="color:#222222">u</span><span style="color:#222222">b</span><span style="color:#222222">.</span><span style="color:#222222">c</span><span style="color:#222222">o</span><span style="color:#222222">m</span><span style="color:#222222">/</span><span style="color:#222222">s</span><span style="color:#222222">e</span><span style="color:#222222">a</span><span style="color:#222222">t</span><span style="color:#222222">a</span><span style="color:#222222">/</span><span style="color:#222222">s</span><span style="color:#222222">e</span><span style="color:#222222">a</span><span style="color:#222222">t</span><span style="color:#222222">a</span><span style="color:#222222">-</span><span style="color:#222222">s</span><span style="color:#222222">a</span><span style="color:#222222">m</span><span style="color:#222222">p</span><span style="color:#222222">l</span><span style="color:#222222">e</span><span style="color:#222222">s</span></li><li><strong><span style="color:#222222">R</span></strong><strong><span style="color:#222222">e</span></strong><strong><span style="color:#222222">l</span></strong><strong><span style="color:#222222">e</span></strong><strong><span style="color:#222222">a</span></strong><strong><span style="color:#222222">s</span></strong><strong><span style="color:#222222">e</span></strong><strong><span style="color:#222222">:</span></strong><span style="color:#222222"></span><span style="color:#222222">h</span><span style="color:#222222">t</span><span style="color:#222222">t</span><span style="color:#222222">p</span><span style="color:#222222">s</span><span style="color:#222222">:</span><span style="color:#222222">/</span><span style="color:#222222">/</span><span style="color:#222222">g</span><span style="color:#222222">i</span><span style="color:#222222">t</span><span style="color:#222222">h</span><span style="color:#222222">u</span><span style="color:#222222">b</span><span style="color:#222222">.</span><span style="color:#222222">c</span><span style="color:#222222">o</span><span style="color:#222222">m</span><span style="color:#222222">/</span><span style="color:#222222">s</span><span style="color:#222222">e</span><span style="color:#222222">a</span><span style="color:#222222">t</span><span style="color:#222222">a</span><span style="color:#222222">/</span><span style="color:#222222">s</span><span style="color:#222222">e</span><span style="color:#222222">a</span><span style="color:#222222">t</span><span style="color:#222222">a</span><span style="color:#222222">/</span><span style="color:#222222">r</span><span style="color:#222222">e</span><span style="color:#222222">l</span><span style="color:#222222">e</span><span style="color:#222222">a</span><span style="color:#222222">s</span><span style="color:#222222">e</span><span style="color:#222222">s</span></li><li><strong><span style="color:#222222">官网:</span></strong><span style="color:#222222"> https://seata.io</span></li></ul><p style="margin-left:0; margin-right:0; text-align:left">&nbsp;</p><h3><span style="color:#222222">开发者招募</span></h3><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="margin-left:0; margin-right:0"><span style="color:#222222">如果您对 Seata 的前后端开发、测试和文档感兴趣，请您邮件联系</span><span style="color:#222222">：slievrly@gmail.com</span></p></div><p>&nbsp;</p></div></div></div>
                                    ]]>
            </description>
            <pubDate>Tue, 19 Dec 2023 11:55:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271776/seata-1-8-0</guid>
            <link>https://www.oschina.net/news/271776/seata-1-8-0</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[2023 基于 mybatis 的 orm：mybatis-mp 1.2.5 发布 - 支持 Spring Boot 3]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">全新一代基于 mybatis 扩展的 orm 框架，拥有良好的性能和扩展性。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">本次 1.2.5 更新，内容：</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="color:#333333">1：</span><span style="color:#000000">全面支持 springboot3</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="color:#000000">2：优化 maven 依赖，节省开发时间</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="color:#000000">3：全面提供 crud 安全性（重点）：默认不忽略 null（直接报错提示），不忽略空字符串，不对字符串进行 trim 操作；并提供一下方法</span>：</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">&nbsp; &nbsp;//忽略 null，忽略空字符串，对 string 参数进行 trim 去空格操作<br> &nbsp;&nbsp;&nbsp;&nbsp;forSearch()<br> &nbsp; &nbsp;&nbsp;// 忽略 null 条件参数 &nbsp; &nbsp;<br> &nbsp; &nbsp; ignoreNullValueInCondition(true)<br> &nbsp; &nbsp; // 忽略，空字符串，条件参数 &nbsp; &nbsp;<br> &nbsp; &nbsp; ignoreEmptyInCondition(true)<br> &nbsp; &nbsp; // &nbsp;对字符串进行 trim 去空格操作 &nbsp; &nbsp;<br> &nbsp; &nbsp; trimStringInCondition(true)</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">第 3 点应该是该框架的一大亮点，可以大大减少开发者的 bug！</p><p>mybatis-mp 包含丰富的 api：</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">1：基于注解，映射数据库；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">2：支持多表 join 和返回；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">3：api 采用 lambda 和 stream 流式设计；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">4：内置分页以及超强的 sql 优化功能；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">5：稳定且性能极优；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">6：轻量级封装 mybatis，几乎没有侵入；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">7：api 丰富，支持数据库函数、多表、乐观锁、多租户、逻辑删除、默认值（可动态值） 等众多功能；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">8：零学习成本，和写 sql 一样方便。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">9：支持复杂的返回关系映射：例如一对一 ，一对多，多对多；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">10：内置代码生成器，通过配置，可定制自身规范；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">11：全新的框架，全新的设计理念，新的就是好！</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 19 Dec 2023 08:04:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271749</guid>
            <link>https://www.oschina.net/news/271749</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[GnuCash 5.5 发布，跨平台财务管理软件]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>GnuCash&nbsp;5.5 现已发布，<span style="background-color:#ffffff; color:#000000">这是稳定版 5.x 系列的第六个版本</span>。GnuCash 是一个适用于个人或小型企业的财务软件，采用 GPL 协议开源，支持 GNU / Linux、BSD、Solaris、Mac OS X 及 Microsoft Windows。GnuCash 易于使用，且功能强大，它可以追踪银行帐户、股票、收入与支出，也可以基于专业的会计原则确保帐目平衡并提供准确的报表。&nbsp;</p><p style="color:#000000; margin-left:0; margin-right:0; text-align:start"><strong>在<span>&nbsp;</span><span><span><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>5.4 和 5.5</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span>&nbsp;</span>之间，完成了以下错误修复：</strong></p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugs.gnucash.org%2Fshow_bug.cgi%3Fid%3D607000" target="_blank">Bug 607000 - SLR 可见事务</a><p><span>更改「Since Last Run」对话框以仅显示状态非空的事务。</span></p></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugs.gnucash.org%2Fshow_bug.cgi%3Fid%3D792241" target="_blank">Bug 792241 - 允许对计划事务进行排序</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugs.gnucash.org%2Fshow_bug.cgi%3Fid%3D798025" target="_blank">Bug 798025 - SLR Value entry 未与位置绑定</a><p><span>当条目具有 focus 时禁用滚动和水平滚动条。</span></p></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugs.gnucash.org%2Fshow_bug.cgi%3Fid%3D798760" target="_blank">Bug 798760 - SLR OK 按钮完成值输入</a><p><span>通过此更改，「Since Last Run」对话框的「OK」按钮将提交正在进行的编辑并前进到需要输入的下一个编辑。仅当不再进行编辑时才会关闭对话框。</span></p></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugs.gnucash.org%2Fshow_bug.cgi%3Fid%3D798760" target="_blank">Bug 798760 - 带值输入的 SLR 更换提醒</a><p><span>当用户提供了所需的值并单击「OK」后，将事务状态从「Reminder」更改为「ToCreate&nbsp;」。</span></p></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugs.gnucash.org%2Fshow_bug.cgi%3Fid%3D798890" target="_blank">Bug 798890 - Printing 问题</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugs.gnucash.org%2Fshow_bug.cgi%3Fid%3D799087" target="_blank">Bug 799087 - Import - 不平衡（需要 acct）交易现在显示为红色（之前为橙色）。</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugs.gnucash.org%2Fshow_bug.cgi%3Fid%3D799090" target="_blank">Bug 799090 - 右键单击​​计划事务</a><p><span>确保在 SX 编辑器中右键单击时，选择高亮显示更改为指针下方的项目。</span></p></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugs.gnucash.org%2Fshow_bug.cgi%3Fid%3D799092" target="_blank">Bug 799092 - GnuCash 5.4 会在退出时保留运行的后台进程</a><p><span>通过 gnc_prefs_remove_registered 在应用程序关闭时清除 schema_hash ，并使该函数可用于 Python 绑定，以便 python 程序也可以这样做。</span></p></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugs.gnucash.org%2Fshow_bug.cgi%3Fid%3D799099" target="_blank">Bug 799099 - 尝试获取报价时崩溃</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugs.gnucash.org%2Fshow_bug.cgi%3Fid%3D799104" target="_blank">Bug 799104 - 「Asset Chart」损坏</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugs.gnucash.org%2Fshow_bug.cgi%3Fid%3D799108" target="_blank">Bug 799108 - 如果创建计划事务时出现任何错误，「Since Last Run」会崩溃</a><p><span>捕获错误并将其显示在对话框中。</span></p></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugs.gnucash.org%2Fshow_bug.cgi%3Fid%3D799113" target="_blank">Bug 799113 - 「Start Import」按钮报告「Failed」</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugs.gnucash.org%2Fshow_bug.cgi%3Fid%3D799121" target="_blank">Bug 799121 - MacOS 上 CSV 导入时出现解析错误</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugs.gnucash.org%2Fshow_bug.cgi%3Fid%3D799130" target="_blank">Bug 799130 - split-register.c:1847:gnc_split_register_save: assertion failed: (xaccTransIsOpen (blank_trans))</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugs.gnucash.org%2Fshow_bug.cgi%3Fid%3D799134" target="_blank">Bug 799134 - 无法使用 GCC 14 进行构建（find_if’ is not a member of ‘std’; did you mean ‘find’）</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugs.gnucash.org%2Fshow_bug.cgi%3Fid%3D799138" target="_blank">Bug 799138 - 移植到新的 Python C 配置 API</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugs.gnucash.org%2Fshow_bug.cgi%3Fid%3D799143" target="_blank">Bug 799143 - 32 位架构上的 FTBFS</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugs.gnucash.org%2Fshow_bug.cgi%3Fid%3D799144" target="_blank">Bug 799144 - 5.4 升级后 Date Completion&nbsp;被破坏</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugs.gnucash.org%2Fshow_bug.cgi%3Fid%3D799148" target="_blank">Bug 799148 - 保存修改后的已保存报告配置时发生 Reliable crash</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugs.gnucash.org%2Fshow_bug.cgi%3Fid%3D799150" target="_blank">Bug 799150 - 无法在帐户树视图的注释字段中粘贴文本（使用 Ctrl+V）</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugs.gnucash.org%2Fshow_bug.cgi%3Fid%3D799151" target="_blank">Bug 799151 - gnc_date_get_last_mday () 不能正确计算闰年</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugs.gnucash.org%2Fshow_bug.cgi%3Fid%3D799152" target="_blank">Bug 799152 - normalize_reldate_tm() 无法正确处理月份大于 11 或小于 -11 的日期。</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugs.gnucash.org%2Fshow_bug.cgi%3Fid%3D799156" target="_blank">Bug 799156 - normalize_struct_tm() 无法正确标准化秒、分钟和小时。</a></li></ul><p><span style="background-color:#ffffff; color:#333333">更多详情可查看：</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.gnucash.org%2Fnews.phtml" target="_blank">https://www.gnucash.org/news.phtml</a></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 19 Dec 2023 06:55:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271735/gnucash-5-5-released</guid>
            <link>https://www.oschina.net/news/271735/gnucash-5-5-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Ant Design 5.12.3 发布，企业级 UI 设计语言和 React 实现]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff; color:#333333">An Design 5.12.3 现已发布，主要变化如下：</span></p><ul><li><span>&nbsp;</span>修复 Tag 组件在 SSR 场景下的样式丢失问题。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design%2Fpull%2F46500" target="_blank">#46500</a></li><li>Upload 的<span>&nbsp;</span><code>disabled</code><span>&nbsp;</span>属性不再对下载按钮生效。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design%2Fpull%2F46454" target="_blank">#46454</a></li><li>Upload.Dragger 增加一个水平内边距。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design%2Fpull%2F46457" target="_blank">#46457</a></li><li>修复 Upload<span>&nbsp;</span><code>actions</code><span>&nbsp;</span>的颜色问题。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design%2Fpull%2F46456" target="_blank">#46456</a></li><li>修复 Form 使用<span>&nbsp;</span><code>getValueProps</code><span>&nbsp;</span>展示值无法更新的问题。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design%2Fpull%2F46445" target="_blank">#46445</a></li><li>修复 Checkbox 自定义<span>&nbsp;</span><code>token.lineWidth</code><span>&nbsp;</span>时勾选箭头错位问题。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design%2Fpull%2F46431" target="_blank">#46431</a></li><li>修复 Select 组件定制 token 会让 padding 失效的问题。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design%2Fpull%2F46427" target="_blank">#46427</a></li><li>修复 Message 在<span>&nbsp;</span><code>cssVar</code><span>&nbsp;</span>模式下覆盖组件 token 无效的问题。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design%2Fpull%2F46415" target="_blank">#46415</a></li><li>Flex 组件不应该应用额外的样式。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design%2Fpull%2F46404" target="_blank">#46404</a></li></ul><p>更新说明：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design%2Freleases%2Ftag%2F5.12.3" target="_blank">https://github.com/ant-design/ant-design/releases/tag/5.12.3</a></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 19 Dec 2023 03:43:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271702/ant-design-5-12-3-released</guid>
            <link>https://www.oschina.net/news/271702/ant-design-5-12-3-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[React Native 0.73.1 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff; color:#333333">React Native 0.73.1 现已发布，具体更新内容如下：</span></p><h4 style="text-align:start"><strong><span><span><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>Added</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></h4><ul><li>添加<code>enableNetworkInspector</code>实验，以在检查器代理中启用网络面板和 CDP 处理程序（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ffacebook%2Freact-native%2Fcommit%2F8ef807bfb2e596bd70f0c8b17f1b6f698d98ae2a" target="_blank">8ef807bfb2</a>)</li></ul><h4 style="text-align:start"><strong><span><span><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>Changed</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></h4><ul><li>Chore：将 CLI 升级至 12.3.0（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ffacebook%2Freact-native%2Fcommit%2Fdff11ab993e57a097988537791afe8ef086e4ce4" target="_blank">dff11ab993</a>）</li></ul><h4 style="text-align:start"><strong><span><span><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>Fixed</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></h4><ul><li>修复 VirtualizedList 中的最后一个间隔约束逻辑 (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ffacebook%2Freact-native%2Fcommit%2F3ed4bf9046ae125d244283c3556892345bfd77e1" target="_blank">3ed4bf9046</a>）</li></ul><p style="text-align:start"><strong><span><span><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>Android specific</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></p><ul><li><p>修复无法识别的字段 mBinding 的类型（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ffacebook%2Freact-native%2Fcommit%2F31d8a93bf3199432bcd2b577738fbf49e84c207d" target="_blank">31d8a93bf3</a>)</p></li></ul><p style="text-align:start"><strong><span><span><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>iOS specific</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></p><ul><li>修复了 pod 安装期间 NSAppTransportSecurity 被覆盖的问题（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ffacebook%2Freact-native%2Fcommit%2Fa0b76d90b73ec0d3d9e0174004bfb96a5b6f3a3e" target="_blank">a0b76d90b7</a>）</li></ul><p>更新说明：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ffacebook%2Freact-native%2Freleases%2Ftag%2Fv0.73.1" target="_blank">https://github.com/facebook/react-native/releases/tag/v0.73.1</a></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 19 Dec 2023 03:24:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271700/react-native-0-73-1-released</guid>
            <link>https://www.oschina.net/news/271700/react-native-0-73-1-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[DHorse v1.5.0 发布，基于 k8s 的发布平台]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h2>版本说明</h2><h3>新增特性</h3><ul><li>支持同一机器部署多个 DHorse 服务；</li><li>支持 Next、.NET 应用部署；</li><li>优化 Node、Nuxt 应用构建和部署的性能；</li><li>默认使用 fabric8 客户端与 k8s 集群交互，可以通过指定参数-Dkubernetes-client=official 切回到 k8s 官方客户端；</li><li>支持企业微信、钉钉、飞书登录；</li><li>支持对集群节点的管理；</li></ul><h3>优化特性</h3><ul><li>隐藏密码展示；</li><li>修改 Banner 展示；</li><li>选择应用列表按照字母排序；</li><li>优化副本终端、日志等功能；</li><li>构建版本、部署时对 DHorse 资源的利用；</li><li>使用集群模式提交构建请求；</li><li>优化终止部署历史的功能；</li><li>优化 Go 应用的构建流程；</li></ul><h3>解决问题</h3><ul><li>WebSocket 支持 Https 协议；</li></ul><h3>升级指南</h3><p><a href="https://gitee.com/i512team/dhorse-doc/blob/main/upgrade/v1.5.0/%E5%8D%87%E7%BA%A7%E6%8C%87%E5%8D%97.md">升级指南</a></p><h2>DHorse 介绍</h2><p>DHorse 是一个轻量级、简单易用的云应用管理平台，具有多云和多环境管理、应用管理和部署、服务治理等功能，使用该平台不需要了解容器和 k8s 的概念。</p><h2>功能特性</h2><ul><li>简洁的操作界面</li><li>以应用为中心，屏蔽 K8S 的底层概念</li><li>支持 SpringBoot、Vue、React、Nodejs、Html、Go、Flask、Django、Nuxt、Next、.Net 应用部署</li><li>无需安装 Docker 即可构建镜像</li><li>无需安装 Maven、Gradle、Node、Go、Python、Nodejs、.Net 即可打包</li><li>支持多集群管理</li><li>支持多环境部署</li><li>支持日志收集</li><li>支持链路追踪</li></ul><h2>架构</h2><p><img alt="" height="355" src="https://oscimg.oschina.net/oscnet/up-24aa6b57bddcc6dce1aaf17df47294e2d28.png" width="696" referrerpolicy="no-referrer"></p><h2>预览</h2><p><img alt="" height="824" src="https://oscimg.oschina.net/oscnet/up-3b81f424bffe101af871d3dcf7ae059dc5d.png" width="1920" referrerpolicy="no-referrer"></p><h2>文档</h2><ul><li><p>Gitee：<a href="https://gitee.com/i512team/dhorse">https://gitee.com/i512team/dhorse</a></p></li><li><p>GitHub：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2F512team%2Fdhorse" target="_blank">https://github.com/512team/dhorse</a></p></li><li><p>操作手册：<a href="https://gitee.com/i512team/dhorse-doc/blob/main/guide/%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C.md">https://gitee.com/i512team/dhorse-doc/blob/main/guide/%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C.md</a></p></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Tue, 19 Dec 2023 03:23:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271699/dhorse-1-5-0-released</guid>
            <link>https://www.oschina.net/news/271699/dhorse-1-5-0-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[DBErp 进销存系统 V1.2 Release 231218 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><span style="background-color:#ffffff; color:#333333"><strong>DBErp</strong><span>&nbsp;</span>基于 Laminas</span><span style="background-color:#ffffff; color:#333333">&nbsp;+ doctrine</span><span style="background-color:#ffffff; color:#333333">&nbsp;2 开发的一套进销存系统。</span></p><h2>系统框架</h2><ul><li>Laminas （Zendframework 3）</li><li>Doctrine 2</li></ul><h2>环境要求</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>服务器系统</strong>&nbsp;Linux、Unix、Mac、Windows、其他</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>web 服务器</strong>&nbsp;Apache、Nginx、IIS、其他</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>MySQL 版本</strong>&nbsp;&gt;= 5.6</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>PHP 版本</strong>&nbsp;&gt;= 7.4</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>PHP 扩展 | 库</strong></p><ul><li>PDO</li><li>SSL（openssl）</li><li>Fileinfo</li><li>intl</li><li>Curl</li><li>GD2</li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>系统空间</strong>&nbsp;&gt;= 500M</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>更新日志：</strong><br> 新增，其他入库、采购入库可 ajax 添加仓库<br> 新增，添加客户、供应商可 ajax 添加分类<br> 新增，系统设置加入，编码&amp;单号，的生成规则 (设置后生效)，如果不填写则自动生成<br> 新增，添加、编辑商品可弹出添加计量单位和商品分类<br> 优化，自定义打印模板加入公司 logo<br> 优化，采购入库和销售发货详情加入操作记录<br> 优化，自定义打印加入序列号<br> 优化，其他出库、盘点、调拨，的调用商品<br> 优化，库存相关页面<br> 优化，仓库删除处理<br> 优化，语言包<br> 优化，商品删除功能<br> 优化，提示信息</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><span style="background-color:#ffffff; color:#e74c3c">珑大官方全新发布&nbsp;</span><strong>语言包个性化定制扩展平台&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.loongdom.com.cn%2Fcloud%2Ftrans.html" target="_blank">https://docs.loongdom.com.cn/cloud/trans.html</a></strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>在线文档地址：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.dberp.net%2F" target="_blank">https://docs.dberp.net/</a></strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>演示地址：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdemo.dberp.com.cn%2F" target="_blank">https://demo.dberp.com.cn/</a></strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><img alt="dashboard" src="https://static.oschina.net/uploads/img/201906/30075605_OW5Q.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>下载地址：<span>&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdownload.loongdom.com.cn/dberp/V1.2/DBErpV1.2_Release231218.tar.gz" target="_blank">https://download.loongdom.com.cn/dberp/V1.2/DBErpV1.2_Release231218.tar.gz</a></span></strong></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 19 Dec 2023 03:14:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271693</guid>
            <link>https://www.oschina.net/news/271693</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Apollo 2.2.0 发布，分布式配置管理中心]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Apollo 2.2.0 已发布，包含了诸如 H2 数据库支持、发布历史支持保留数量配置、支持通过 OpenAPI 创建 App、非 Properties Namespace 支持灰度发布等重大更新。</p><blockquote><p>Apollo（阿波罗）是一款可靠的分布式配置管理中心，诞生于携程框架研发部，能够集中化管理应用不同环境、不同集群的配置，配置修改后能够实时推送到应用端，并且具备规范的权限、流程治理等特性，适用于微服务配置管理场景。</p></blockquote><h3>H2 数据库支持</h3><p>Apollo 现已支持 H2 数据库，非常适合快速部署场景。</p><h3>发布历史支持保留数量配置</h3><p>用户可以为每个 Namespace 配置保留多少条发布历史，从而降低历史记录过多导致数据库过载的风险。</p><h3>日志目录更改为&nbsp;/opt/logs</h3><p>Apollo ConfigService、AdminService 和 Portal 的日志目录都已更改为&nbsp;/opt/logs，旧版本分别是&nbsp;/opt/logs/10003171、/opt/logs/10003172 和 /opt/logs/10003173。</p><h3>支持通过 OpenAPI 创建 App</h3><p>OpenAPI 的 consumer token 可以配置是否允许创建 App。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-65f8916408197a05305952b7674cd2cd99b.png" referrerpolicy="no-referrer"></p><h3>非 Properties Namespace 支持灰度发布</h3><p>非 Properties Namespace（如 Yaml, JSON 等）现已支持灰度发布功能。</p><h3>审计日志页面展示</h3><p>管理员可以通过管理员工具中的审计日志功能访问详细的操作日志。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-ee231f7ed253a20c335fec98e0f83c92d7e.png" referrerpolicy="no-referrer"><img alt="" src="https://oscimg.oschina.net/oscnet/up-dd201f297376f3dcc03b0868adbcb34981f.png" referrerpolicy="no-referrer"></p><p>详情：</p><ul style="list-style-type:disc; margin-left:0; margin-right:0"><li><p style="margin-left:0; margin-right:0"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapolloconfig%2Fapollo%2Freleases%2Ftag%2Fv2.2.0" target="_blank"><span>https://github.com/apolloconfig/apollo/releases/tag/v2.2.0</span></a></p></li><li><p style="margin-left:0; margin-right:0"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapolloconfig%2Fapollo-java%2Freleases%2Ftag%2Fv2.2.0" target="_blank">https://github.com/apolloconfig/apollo-java/releases/tag/v2.2.0</a></p></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Tue, 19 Dec 2023 02:09:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271676/apollo-config-2-2-0-released</guid>
            <link>https://www.oschina.net/news/271676/apollo-config-2-2-0-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[AiEditor rc.1 发布，一个面向 AI 的下一代富文本编辑器]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="screenshot.png" height="287" src="https://gitee.com/aieditor-team/aieditor/raw/main/docs/assets/image/logo-banner.png" width="500" referrerpolicy="no-referrer"></p><h1>AiEditor</h1><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">关于 AiEditor（官网<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Faieditor.dev">https://aieditor.dev</a><span>&nbsp;</span>）</p><blockquote><p style="margin-left:0; margin-right:0">AiEditor 是一个面向 AI 的下一代富文本编辑器，她基于 Web Component，因此支持 Layui、Vue、React、Angular 等几乎任何前端框架。她适配了 PC Web 端和手机端，并提供了，亮色，和 暗色，两个主题。除此之外，她还提供了灵活的配置，开发者可以方便的使用其开发任何文字编辑的应用。</p></blockquote><p>在这个的版本中，我们添加了选择文字，弹出 AI 菜单并可以自定义 AI 指令的功能，如下图所示：</p><p><img height="985" src="https://oscimg.oschina.net/oscnet/up-d0b85d4eee0b6be8a07e018a59ccdbe523d.png" width="1420" referrerpolicy="no-referrer"></p><p>在之前的版本中，我们已经完善了：AI 翻译、AI 续写、AI 校正（发现错别字）、AI 菜单、AI 命令等功能，欢迎体验：<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Faieditor1.jpress.cn" target="_blank">http://aieditor1.jpress.cn</a>&nbsp;。</p><p>&nbsp;</p><h2>v1.0.0-rc.1 更新细节：</h2><ul><li>新增：AI 功能添加选择文字时，对文字进行在定义 Prompt 操作的功能</li><li>新增：添加选中文字内容时，弹出操作菜单的功能</li><li>新增：AiEditor 添加 onCreateBefore 的钩子函数，方便初始化插件</li><li>修复：同一个页面下，初始化多个 editor 实例时出错的问题</li><li>修复：修复保持 html 后，通过 html 再次初始化编辑器无法准确解析视频组件的问题</li><li>优化：重构 AbstractBubbleMenu.ts 的相关属性和逻辑</li><li>优化：重构 ai 组件，使之能够适配更多的业务场景</li><li>样式：优化编辑器诸多样式细节</li><li>文档：添加链接配置 ref/class 等相关配置的文档</li></ul><p>&nbsp;</p><h2>快速开始</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">安装：</p><div><div><pre><span><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1">npm</span></span></span></span></span></span></span><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62">i aieditor</span></span></span></span></span></span></span></span></pre><div>
   &nbsp;
  </div></div></div><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">使用：</p><div><div><pre><span><strong><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">new</span></span></span></span></span></span></span></strong><span><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">AiEditor</span></span></span></span></span></span></span></span><span>({</span></span><span><span style="color:#008080"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5">element</span></span></span></span></span></span></span></span><span>:</span><span><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62">"</span></span></span></span></span></span></span></span><span style="color:#dd1144"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62">#aiEditor</span></span></span></span></span></span></span></span><span><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62">"</span></span></span></span></span></span></span></span><span>,</span></span><span><span style="color:#008080"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5">placeholder</span></span></span></span></span><span>:</span><span><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62">"</span></span></span></span></span></span></span></span><span style="color:#dd1144"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62">点击输入内容...</span></span></span></span></span></span></span></span><span><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62">"</span></span></span></span></span></span></span></span><span>,</span></span><span><span style="color:#008080"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5">content</span></span></span></span></span><span>:</span><span><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62">'</span></span></span></span></span></span></span></span><span style="color:#dd1144"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62">AiEditor 是一个面向 AI 的开源富文本编辑器。 </span></span></span></span></span></span></span></span><span><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62">'</span></span></span></span></span></span></span></span><span>,</span></span><span><span>})</span></span></pre><div>
   &nbsp;
  </div></div></div><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">更多访问官网：<a href="https://gitee.com/link?target=https%3A%2F%2Faieditor.dev%2Fzh%2Fgetting-started.html">https://aieditor.dev/zh/getting-started.html</a></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 19 Dec 2023 02:09:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271675/ai-editor-rc1</guid>
            <link>https://www.oschina.net/news/271675/ai-editor-rc1</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[🎉 领域建模即微服务开发 | Wow 2.10.3 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow:基于 DDD、EventSourcing 的现代响应式 CQRS 架构微服务开发框架" src="https://static.oschina.net/uploads/img/202312/13135012_Zb9v.svg" width="150" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>基于 DDD、EventSourcing 的现代响应式 CQRS 架构微服务开发框架</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FAhoo-Wang%2FWow%2Fblob%2Fmvp%2FLICENSE"><img alt="License" src="https://img.shields.io/badge/license-Apache%202-4EB1BA.svg" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FAhoo-Wang%2FWow%2Freleases"><img alt="GitHub release" src="https://img.shields.io/github/release/Ahoo-Wang/Wow.svg" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fapp.codacy.com%2Fgh%2FAhoo-Wang%2FWow%2Fdashboard%3Futm_source%3Dgh%26utm_medium%3Dreferral%26utm_content%3D%26utm_campaign%3DBadge_grade"><img alt="Codacy Badge" src="https://app.codacy.com/project/badge/Grade/cfc724df22db4f9387525258c8a59609" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fcodecov.io%2Fgh%2FAhoo-Wang%2FWow"><img alt="codecov" src="https://codecov.io/gh/Ahoo-Wang/Wow/branch/main/graph/badge.svg?token=uloJrLoQir" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FAhoo-Wang%2FWow"><img alt="Integration Test Status" src="https://github.com/Ahoo-Wang/Wow/actions/workflows/integration-test.yml/badge.svg" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FKotlinBy%2Fawesome-kotlin"><img alt="Awesome Kotlin Badge" src="https://kotlin.link/awesome-kotlin.svg" referrerpolicy="no-referrer"></a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><strong>领域驱动&nbsp;</strong><span>&nbsp;</span>|&nbsp;<span>&nbsp;</span><strong>事件驱动</strong><span>&nbsp;&nbsp;</span>|<span>&nbsp;&nbsp;</span><strong>测试驱动</strong><span>&nbsp;&nbsp;</span>|<span>&nbsp;&nbsp;</span><strong>声明式设计</strong><span>&nbsp;</span>｜<span>&nbsp;</span><strong>响应式编程</strong><span>&nbsp;</span>｜<span>&nbsp;</span><strong>命令查询职责分离</strong><span>&nbsp;</span>｜<span>&nbsp;</span><strong>事件溯源</strong></p><h2>🎉 更新内容 🎉</h2><blockquote><p style="margin-left:0; margin-right:0"><strong><em>事件补偿服务&nbsp;</em></strong>支持 <em>分布式定时调度</em></p></blockquote><ul><li>重构: 默认启用客户端事件补偿过滤器 (<code>CompensationFilter</code>)</li><li>特性: 支持客户端主动配置分布式重试（补偿）策略</li><li>特性: 新增修改重试策略命令 (<code>ApplyRetrySpec</code>)API</li><li>部署: 新增<em>事件补偿服务端</em><em>Kubernetes</em> 部署清单</li><li>文档: 新增事件补偿处理时序图<br><img alt="事件补偿" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Event-Compensation.svg" referrerpolicy="no-referrer"></li></ul><h2>快速开始</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">使用<span>&nbsp;</span><a href="https://gitee.com/AhooWang/wow-project-template">Wow 项目模板</a>快速创建基于 Wow 框架的 DDD 项目。</p><h2>特性概览</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-Features" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Features.png" referrerpolicy="no-referrer"></p><h2>架构图</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-Architecture" src="https://static.oschina.net/uploads/img/202312/13135013_Lcug.svg" referrerpolicy="no-referrer"></p><h2>性能测试 (Example)</h2><ul><li>测试代码：<a href="https://gitee.com/AhooWang/Wow/blob/main/example">Example</a></li><li>测试场景：加入购物车、下单</li><li>命令发送等待模式（<code>WaitStrategy</code>）：<code>SENT</code>、<code>PROCESSED</code></li></ul><h3>部署</h3><ul><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/perf/redis.yaml">Redis</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/perf/mongo.yaml">MongoDB</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/perf/kafka.yaml">Kafka</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/perf/config/mongo_kafka_redis.yaml">Application-Config</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/perf/deployment.yaml">Application-Deployment</a></li></ul><h3>测试报告</h3><h4>加入购物车</h4><ul><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/request/AddCartItem.http">请求</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/document/example/perf/Example.Cart.Add@SENT.pdf">详细报告 (PDF)-SENT</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/document/example/perf/Example.Cart.Add@PROCESSED.pdf">详细报告 (PDF)-PROCESSED</a></li></ul><blockquote><p style="margin-left:0; margin-right:0">命令等待策略（<code>WaitStrategy</code>）为<code>SENT</code>模式，加入购物车命令（<code>AddCartItem</code>）写请求 API 经过 2 分钟的压测，平均 TPS 为 <em>59625</em>，峰值为 <em>82312</em>，平均响应时间为 <em>29</em> 毫秒。</p></blockquote><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="AddCartItem-SENT" src="https://gitee.com/AhooWang/Wow/raw/main/document/example/perf/Example.Cart.Add@SENT.png" referrerpolicy="no-referrer"></p><blockquote><p style="margin-left:0; margin-right:0">命令等待策略（<code>WaitStrategy</code>）为<code>PROCESSED</code>模式，加入购物车命令（<code>AddCartItem</code>）写请求 API 经过 2 分钟的压测，平均 TPS 为 <em>18696</em>，峰值为 <em>24141</em>，平均响应时间为 <em>239</em> 毫秒。</p></blockquote><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="AddCartItem-PROCESSED" src="https://gitee.com/AhooWang/Wow/raw/main/document/example/perf/Example.Cart.Add@PROCESSED.png" referrerpolicy="no-referrer"></p><p>&nbsp;</p><h4>下单</h4><ul><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/request/CreateOrder.http">请求</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/document/example/perf/Example.Order.Create@SENT.pdf">详细报告 (PDF)-SENT</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/document/example/perf/Example.Order.Create@PROCESSED.pdf">详细报告 (PDF)-PROCESSED</a></li></ul><blockquote><p style="margin-left:0; margin-right:0">命令等待策略（<code>WaitStrategy</code>）为<code>SENT</code>模式，下单命令（<code>CreateOrder</code>）写请求 API 经过 2 分钟的压测，平均 TPS 为 <em>47838</em>，峰值为 <em>86200</em>，平均响应时间为 <em>217</em> 毫秒。</p></blockquote><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="CreateOrder-SENT" src="https://gitee.com/AhooWang/Wow/raw/main/document/example/perf/Example.Order.Create@SENT.png" referrerpolicy="no-referrer"></p><blockquote><p style="margin-left:0; margin-right:0">命令等待策略（<code>WaitStrategy</code>）为<code>PROCESSED</code>模式，下单命令（<code>CreateOrder</code>）写请求 API 经过 2 分钟的压测，平均 TPS 为 <em>180230</em>，峰值为 <em>25506</em>，平均响应时间为 <em>268</em> 毫秒。</p></blockquote><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="CreateOrder-PROCESSED" src="https://gitee.com/AhooWang/Wow/raw/main/document/example/perf/Example.Order.Create@PROCESSED.png" referrerpolicy="no-referrer"></p><h2>事件源</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-EventSourcing" src="https://static.oschina.net/uploads/img/202312/13135014_lJcu.svg" referrerpolicy="no-referrer"></p><h2>可观测性</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-Observability" src="https://static.oschina.net/uploads/img/202312/13135014_YAFd.png" referrerpolicy="no-referrer"></p><h2>OpenAPI (Spring WebFlux 集成)</h2><blockquote><p style="margin-left:0; margin-right:0">自动注册<span>&nbsp;</span><strong>命令</strong><span>&nbsp;</span>路由处理函数 (<code>HandlerFunction</code>) ，开发人员仅需编写领域模型，即可完成服务开发。</p></blockquote><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-Spring-WebFlux-Integration" src="https://static.oschina.net/uploads/img/202312/13135014_lVJm.png" referrerpolicy="no-referrer"></p><h2>测试套件：80%+ 的测试覆盖率轻而易举</h2><blockquote><p style="margin-left:0; margin-right:0">Given -&gt; When -&gt; Expect .</p></blockquote><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-CI-Flow" src="https://static.oschina.net/uploads/img/202312/13135014_vlP2.png" referrerpolicy="no-referrer"></p><h2>前置条件</h2><ul><li>理解<span>&nbsp;</span><strong>领域驱动设计</strong>：《实现领域驱动设计》、《领域驱动设计：软件核心复杂性应对之道》</li><li>理解<span>&nbsp;</span><strong>命令查询职责分离</strong>（CQRS）</li><li>理解<span>&nbsp;</span><strong>事件源架构</strong></li><li>理解<span>&nbsp;</span><strong>响应式编程</strong></li></ul><h2>Example</h2><h3>订单服务（Kotlin）</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/AhooWang/Wow/blob/main/example">Example-Order</a></p><h3>银行转账（JAVA）</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/AhooWang/Wow/blob/main/example/transfer">Example-Transfer</a></p><h2>单元测试套件</h2><h3>80%+ 的测试覆盖率轻而易举。</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Test Coverage" src="https://static.oschina.net/uploads/img/202312/13135014_MHRR.png" referrerpolicy="no-referrer"></p><blockquote><p style="margin-left:0; margin-right:0">Given -&gt; When -&gt; Expect .</p></blockquote><h3>Aggregate Unit Test (<code>AggregateVerifier</code>)</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/AhooWang/Wow/blob/main/example/example-domain/src/test/kotlin/me/ahoo/wow/example/domain/order/OrderTest.kt">Aggregate Test</a></p><pre><code><span style="color:#d73a49"><span style="color:#d73a49">internal</span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49">class</span></span></span><span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1">OrderTest</span></span></span><span></span></span>{

    <span style="color:#6a737d"><span style="color:#6a737d">@Test</span></span><span style="color:#d73a49"><span style="color:#d73a49">private</span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span><span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1">createOrder</span></span></span><span><span><span>()</span></span></span></span> {
        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> tenantId = GlobalIdGenerator.generateAsString()
        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> customerId = GlobalIdGenerator.generateAsString()

        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> orderItem = OrderItem(
            GlobalIdGenerator.generateAsString(),
            GlobalIdGenerator.generateAsString(),
            BigDecimal.valueOf(<span><span>10</span></span>),
            <span><span>10</span></span>,
        )
        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> orderItems = listOf(orderItem)
        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> inventoryService = <span style="color:#d73a49"><span style="color:#d73a49">object</span></span> : InventoryService {
            <span style="color:#d73a49"><span style="color:#d73a49">override</span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span><span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1">getInventory</span></span></span><span><span><span>(productId: </span></span><span style="color:#d73a49"><span><span><span style="color:#d73a49">String</span></span></span></span><span><span>)</span></span></span></span>: Mono&lt;<span><span>Int</span></span>&gt; {
                <span style="color:#d73a49"><span style="color:#d73a49">return</span></span> orderItems.filter { it.productId == productId }.map { it.quantity }.first().toMono()
            }
        }
        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> pricingService = <span style="color:#d73a49"><span style="color:#d73a49">object</span></span> : PricingService {
            <span style="color:#d73a49"><span style="color:#d73a49">override</span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span><span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1">getProductPrice</span></span></span><span><span><span>(productId: </span></span><span style="color:#d73a49"><span><span><span style="color:#d73a49">String</span></span></span></span><span><span>)</span></span></span></span>: Mono&lt;BigDecimal&gt; {
                <span style="color:#d73a49"><span style="color:#d73a49">return</span></span> orderItems.filter { it.productId == productId }.map { it.price }.first().toMono()
            }
        }
        aggregateVerifier&lt;Order, OrderState&gt;(tenantId = tenantId)
            .inject(DefaultCreateOrderSpec(inventoryService, pricingService))
            .given()
            .`<span style="color:#d73a49"><span style="color:#d73a49">when</span></span>`(CreateOrder(customerId, orderItems, SHIPPING_ADDRESS, <span style="color:#005cc5"><span style="color:#005cc5">false</span></span>))
            .expectEventCount(<span><span>1</span></span>)
            .expectEventType(OrderCreated::<span><span style="color:#d73a49"><span><span style="color:#d73a49">class</span></span></span><span>.</span><span style="color:#6f42c1"><span><span style="color:#6f42c1">java</span></span></span><span>)</span></span>
            .expectStateAggregate {
                assertThat(it.aggregateId.tenantId, equalTo(tenantId))
            }
            .expectState {
                assertThat(it.id, notNullValue())
                assertThat(it.customerId, equalTo(customerId))
                assertThat(it.address, equalTo(SHIPPING_ADDRESS))
                assertThat(it.items, equalTo(orderItems))
                assertThat(it.status, equalTo(OrderStatus.CREATED))
            }
            .verify()
    }

    <span style="color:#6a737d"><span style="color:#6a737d">@Test</span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span><span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1">createOrderGivenEmptyItems</span></span></span><span><span><span>()</span></span></span></span> {
        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> customerId = GlobalIdGenerator.generateAsString()
        aggregateVerifier&lt;Order, OrderState&gt;()
            .inject(mockk&lt;CreateOrderSpec&gt;(), <span style="color:#032f62"><span style="color:#032f62">"createOrderSpec"</span></span>)
            .given()
            .`<span style="color:#d73a49"><span style="color:#d73a49">when</span></span>`(CreateOrder(customerId, listOf(), SHIPPING_ADDRESS, <span style="color:#005cc5"><span style="color:#005cc5">false</span></span>))
            .expectErrorType(IllegalArgumentException::<span><span style="color:#d73a49"><span><span style="color:#d73a49">class</span></span></span><span>.</span><span style="color:#6f42c1"><span><span style="color:#6f42c1">java</span></span></span><span>)</span></span>
            .expectStateAggregate {
                <span style="color:#6a737d"><span style="color:#6a737d">/*
                 * 该聚合对象处于未初始化状态，即该聚合未创建成功.
                 */</span></span>
                assertThat(it.initialized, equalTo(<span style="color:#005cc5"><span style="color:#005cc5">false</span></span>))
            }.verify()
    }

    <span style="color:#6a737d"><span style="color:#6a737d">/**
     * 创建订单-库存不足
     */</span></span><span style="color:#6a737d"><span style="color:#6a737d">@Test</span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span><span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1">createOrderWhenInventoryShortage</span></span></span><span><span><span>()</span></span></span></span> {
        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> customerId = GlobalIdGenerator.generateAsString()
        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> orderItem = OrderItem(
            GlobalIdGenerator.generateAsString(),
            GlobalIdGenerator.generateAsString(),
            BigDecimal.valueOf(<span><span>10</span></span>),
            <span><span>10</span></span>,
        )
        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> orderItems = listOf(orderItem)
        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> inventoryService = <span style="color:#d73a49"><span style="color:#d73a49">object</span></span> : InventoryService {
            <span style="color:#d73a49"><span style="color:#d73a49">override</span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span><span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1">getInventory</span></span></span><span><span><span>(productId: </span></span><span style="color:#d73a49"><span><span><span style="color:#d73a49">String</span></span></span></span><span><span>)</span></span></span></span>: Mono&lt;<span><span>Int</span></span>&gt; {
                <span style="color:#d73a49"><span style="color:#d73a49">return</span></span> orderItems.filter { it.productId == productId }
                    <span style="color:#6a737d"><span style="color:#6a737d">/*
                     * 模拟库存不足
                     */</span></span>
                    .map { it.quantity - <span><span>1</span></span> }.first().toMono()
            }
        }
        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> pricingService = <span style="color:#d73a49"><span style="color:#d73a49">object</span></span> : PricingService {
            <span style="color:#d73a49"><span style="color:#d73a49">override</span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span><span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1">getProductPrice</span></span></span><span><span><span>(productId: </span></span><span style="color:#d73a49"><span><span><span style="color:#d73a49">String</span></span></span></span><span><span>)</span></span></span></span>: Mono&lt;BigDecimal&gt; {
                <span style="color:#d73a49"><span style="color:#d73a49">return</span></span> orderItems.filter { it.productId == productId }.map { it.price }.first().toMono()
            }
        }

        aggregateVerifier&lt;Order, OrderState&gt;()
            .inject(DefaultCreateOrderSpec(inventoryService, pricingService))
            .given()
            .`<span style="color:#d73a49"><span style="color:#d73a49">when</span></span>`(CreateOrder(customerId, orderItems, SHIPPING_ADDRESS, <span style="color:#005cc5"><span style="color:#005cc5">false</span></span>))
            <span style="color:#6a737d"><span style="color:#6a737d">/*
             * 期望：库存不足异常.
             */</span></span>
            .expectErrorType(InventoryShortageException::<span><span style="color:#d73a49"><span><span style="color:#d73a49">class</span></span></span><span>.</span><span style="color:#6f42c1"><span><span style="color:#6f42c1">java</span></span></span><span>)</span></span>
            .expectStateAggregate {
                <span style="color:#6a737d"><span style="color:#6a737d">/*
                 * 该聚合对象处于未初始化状态，即该聚合未创建成功.
                 */</span></span>
                assertThat(it.initialized, equalTo(<span style="color:#005cc5"><span style="color:#005cc5">false</span></span>))
            }.verify()
    }
}</code></pre><h3>Saga Unit Test (<code>SagaVerifier</code>)</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/AhooWang/Wow/blob/main/example/example-domain/src/test/kotlin/me/ahoo/wow/example/domain/cart/CartSagaTest.kt">Saga Test</a></p><pre><code><span><span style="color:#d73a49"><span><span style="color:#d73a49">class</span></span></span><span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1">CartSagaTest</span></span></span><span></span></span>{

    <span style="color:#6a737d"><span style="color:#6a737d">@Test</span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span><span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1">onOrderCreated</span></span></span><span><span><span>()</span></span></span></span> {
        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> orderItem = OrderItem(
            GlobalIdGenerator.generateAsString(),
            GlobalIdGenerator.generateAsString(),
            BigDecimal.valueOf(<span><span>10</span></span>),
            <span><span>10</span></span>,
        )
        sagaVerifier&lt;CartSaga&gt;()
            .`<span style="color:#d73a49"><span style="color:#d73a49">when</span></span>`(
                mockk&lt;OrderCreated&gt; {
                    every {
                        customerId
                    } returns <span style="color:#032f62"><span style="color:#032f62">"customerId"</span></span>
                    every {
                        items
                    } returns listOf(orderItem)
                    every {
                        fromCart
                    } returns <span style="color:#005cc5"><span style="color:#005cc5">true</span></span>
                },
            )
            .expectCommandBody&lt;RemoveCartItem&gt; {
                assertThat(it.id, equalTo(<span style="color:#032f62"><span style="color:#032f62">"customerId"</span></span>))
                assertThat(it.productIds, hasSize(<span><span>1</span></span>))
                assertThat(it.productIds.first(), equalTo(orderItem.productId))
            }
            .verify()
    }
}</code></pre><div>
 &nbsp;
</div><h2>设计</h2><h3>聚合建模</h3><table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:0px; border:none; box-sizing:border-box; color:#40485b; display:block; font-family:-apple-system,&quot;system-ui&quot;,&quot;Segoe UI&quot;,Helvetica,Arial,&quot;Apple Color Emoji&quot;,&quot;Segoe UI Emoji&quot;,&quot;Segoe UI Symbol&quot;,&quot;Liberation Sans&quot;,&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,&quot;Hiragino Sans GB&quot;,&quot;Wenquanyi Micro Hei&quot;,&quot;WenQuanYi Zen Hei&quot;,&quot;ST Heiti&quot;,SimHei,SimSun,&quot;WenQuanYi Zen Hei Sharp&quot;,sans-serif; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; line-height:inherit; margin:0px 0px 16px; max-width:100%; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:776px; word-break:initial; word-spacing:0px"><tbody><tr><th><strong>Single Class</strong></th><th><strong>Inheritance Pattern</strong></th><th><strong>Aggregation Pattern</strong></th></tr></tbody><tbody><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px; text-align:center"><img alt="Single Class - Modeling" src="https://static.oschina.net/uploads/img/202312/13135015_ZxxP.svg" referrerpolicy="no-referrer"></td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px; text-align:center"><img alt="Inheritance Pattern- Modeling" src="https://static.oschina.net/uploads/img/202312/13135015_I09q.svg" referrerpolicy="no-referrer"></td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px; text-align:center"><img alt="Aggregation Pattern- Modeling" src="https://static.oschina.net/uploads/img/202312/13135015_1pS1.svg" referrerpolicy="no-referrer"></td></tr></tbody></table><h3>加载聚合</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Load Aggregate" src="https://static.oschina.net/uploads/img/202312/13135015_puJx.svg" referrerpolicy="no-referrer"></p><h3>聚合状态流</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Aggregate State Flow" src="https://static.oschina.net/uploads/img/202312/13135015_I8NI.svg" referrerpolicy="no-referrer"></p><h3>发送命令</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Send Command" src="https://static.oschina.net/uploads/img/202312/13135015_sU6r.svg" referrerpolicy="no-referrer"></p><h3>命令与事件流</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Command And Event Flow" src="https://static.oschina.net/uploads/img/202312/13135016_5HaD.svg" referrerpolicy="no-referrer"></p><h3>Saga - OrderProcessManager (Demo)</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="OrderProcessManager" src="https://static.oschina.net/uploads/img/202312/13135016_NfuX.svg" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 19 Dec 2023 01:39:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271666/wow-2-10-3-released</guid>
            <link>https://www.oschina.net/news/271666/wow-2-10-3-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
    </channel>
</rss>
