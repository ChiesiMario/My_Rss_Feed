<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[开源中国-软件更新资讯]]>
        </title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="https://rsshub.app/oschina/news/project" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[开源中国-软件更新资讯 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Fri, 08 Dec 2023 14:39:32 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[feilong 4.0.6 发布了，让 Java 开发更简便的工具库]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#1f2328; text-align:start">feilong 4.0.6 发布了，让 Java 开发更简便的工具库</p><ol><li>让你从大量重复的底层代码中脱身,提高开发效率;</li><li>让你的代码<code>更简炼</code>，<code>易写</code>、<code>易读</code>、<code>易于维护</code>;</li></ol><p style="color:#1f2328; text-align:start">文档地址:<span>&nbsp;</span><a href="http://feilong-core.mydoc.io/">http://feilong-core.mydoc.io/</a></p><p style="color:#1f2328; text-align:start">maven 依赖配置:</p><div><pre>&lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">dependency</span>&gt;
     &lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">groupId</span>&gt;com.github.ifeilong&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">groupId</span>&gt;
     &lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">artifactId</span>&gt;feilong&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">artifactId</span>&gt;
     &lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">version</span>&gt;4.0.6&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">version</span>&gt;
&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">dependency</span>&gt;</pre><div>
  &nbsp;
 </div></div><p style="color:#1f2328; text-align:start">Gradle 依赖配置:</p><div><pre><span style="color:var(--color-prettylights-syntax-storage-modifier-import)">com</span>.<span style="color:var(--color-prettylights-syntax-storage-modifier-import)">github</span>.<span style="color:var(--color-prettylights-syntax-storage-modifier-import)">ifeilong</span>:<span>feilong</span>:<span style="color:var(--color-prettylights-syntax-constant)">4.0</span><span style="color:var(--color-prettylights-syntax-constant)">.6</span></pre><div>
  &nbsp;
 </div></div><p style="color:#1f2328; text-align:start">本次升级共有<span>&nbsp;</span><code>16</code><span>&nbsp;</span>处变更, 具体参见<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fifeilong%2Ffeilong%2Fmilestone%2F40%3Fclosed%3D1" target="_blank">4.0.6 milestone</a></p><h2>🐛<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fifeilong%2Ffeilong%2Fissues%3Fq%3Dis%253Aissue%2Blabel%253Abug%2Bmilestone%253A4.0.6%2Bis%253Aclosed" target="_blank">bug</a></h2><p style="color:#1f2328; text-align:start"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fifeilong%2Ffeilong%2Fissues%2F76" target="_blank">#76</a><span>&nbsp;</span>post 请求,显示日志的时候,full url 没有包含请求参数部分 [<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fifeilong%2Ffeilong%2Fissues%3Fq%3Dis%253Aissue%2Blabel%253Afeilong-servlet%2Bmilestone%253A4.0.6%2Bis%253Aclosed" target="_blank">feilong-servlet</a>]</p><p style="color:#1f2328; text-align:start"><strong>说明: 相关日志,从直接使用 request queryString,改成解析请求参数拼接</strong></p><h2>👽<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fifeilong%2Ffeilong%2Fissues%3Fq%3Dis%253Aissue%2Blabel%253A%25E4%25B8%258D%25E5%2585%25BC%25E5%25AE%25B9%2Bmilestone%253A4.0.6%2Bis%253Aclosed" target="_blank">不兼容</a></h2><p style="color:#1f2328; text-align:start"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fifeilong%2Ffeilong%2Fissues%2F643" target="_blank">#643</a><span>&nbsp;</span>✨ PartitionThreadConfig 默认初始最大线程从 100 改成 20,并且计算的时候，大于 20 时候 info 级别日志提醒 [<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fifeilong%2Ffeilong%2Fissues%3Fq%3Dis%253Aissue%2Blabel%253Aenhancement%2Bmilestone%253A4.0.6%2Bis%253Aclosed" target="_blank">enhancement</a><span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fifeilong%2Ffeilong%2Fissues%3Fq%3Dis%253Aissue%2Blabel%253Afeilong-core%2Bmilestone%253A4.0.6%2Bis%253Aclosed" target="_blank">feilong-core</a>]</p><h2>🍑<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fifeilong%2Ffeilong%2Fissues%3Fq%3Dis%253Aissue%2Blabel%253Afeilong-core%2Bmilestone%253A4.0.6%2Bis%253Aclosed" target="_blank">feilong-core</a></h2><p style="color:#1f2328; text-align:start"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fifeilong%2Ffeilong%2Fissues%2F644" target="_blank">#644</a><span>&nbsp;</span>✨ 多线程执行时,内部日志支持默认标识 key,方便搜索 [<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fifeilong%2Ffeilong%2Fissues%3Fq%3Dis%253Aissue%2Blabel%253Aenhancement%2Bmilestone%253A4.0.6%2Bis%253Aclosed" target="_blank">enhancement</a>]<br><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fifeilong%2Ffeilong%2Fissues%2F641" target="_blank">#641</a><span>&nbsp;</span>✨ 新建 DefaultPartitionPerHandler 多线程处理单元素的方法, 并且内容 try catch exception 和计算耗时时间 [<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fifeilong%2Ffeilong%2Fissues%3Fq%3Dis%253Aissue%2Blabel%253Aenhancement%2Bmilestone%253A4.0.6%2Bis%253Aclosed" target="_blank">enhancement</a>]<br><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fifeilong%2Ffeilong%2Fissues%2F652" target="_blank">#652</a><span>&nbsp;</span>✨ 新建 PartitionPerElementHandler 分区中的每个线程中的每个元素执行 [<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fifeilong%2Ffeilong%2Fissues%3Fq%3Dis%253Aissue%2Blabel%253Aenhancement%2Bmilestone%253A4.0.6%2Bis%253Aclosed" target="_blank">enhancement</a>]<br><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fifeilong%2Ffeilong%2Fissues%2F649" target="_blank">#649</a><span>&nbsp;</span>✨ 新建 com.feilong.core.lang.ThreadUtil.executeUsePerElement(List, Map&lt;String, ?&gt;, PartitionPerElementHandler) [<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fifeilong%2Ffeilong%2Fissues%3Fq%3Dis%253Aissue%2Blabel%253Aenhancement%2Bmilestone%253A4.0.6%2Bis%253Aclosed" target="_blank">enhancement</a>]<br><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fifeilong%2Ffeilong%2Fissues%2F650" target="_blank">#650</a><span>&nbsp;</span>✨ 新建 com.feilong.core.lang.ThreadUtil.executeUsePerElement(List, PartitionPerElementHandler) [<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fifeilong%2Ffeilong%2Fissues%3Fq%3Dis%253Aissue%2Blabel%253Aenhancement%2Bmilestone%253A4.0.6%2Bis%253Aclosed" target="_blank">enhancement</a>]<br><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fifeilong%2Ffeilong%2Fissues%2F651" target="_blank">#651</a><span>&nbsp;</span>✨ 新建 com.feilong.core.lang.ThreadUtil.executeUsePerElement(List, PartitionThreadConfig, Map&lt;String, ?&gt;, PartitionPerElementHandler) [<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fifeilong%2Ffeilong%2Fissues%3Fq%3Dis%253Aissue%2Blabel%253Aenhancement%2Bmilestone%253A4.0.6%2Bis%253Aclosed" target="_blank">enhancement</a>]<br><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fifeilong%2Ffeilong%2Fissues%2F654" target="_blank">#654</a><span>&nbsp;</span>✨ 新建 com.feilong.core.util.MapUtil.getDefaultEmptyStringIfNull(Map&lt;K, V&gt;, K) [<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fifeilong%2Ffeilong%2Fissues%3Fq%3Dis%253Aissue%2Blabel%253Aenhancement%2Bmilestone%253A4.0.6%2Bis%253Aclosed" target="_blank">enhancement</a>]<br><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fifeilong%2Ffeilong%2Fissues%2F645" target="_blank">#645</a><span>&nbsp;</span>🗑️ 标识 com.feilong.core.lang.ThreadUtil.execute(List, int, Map&lt;String, ?&gt;, PartitionPerHandler) Deprecated [<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fifeilong%2Ffeilong%2Fissues%3Fq%3Dis%253Aissue%2Blabel%253Adeprecated%2Bmilestone%253A4.0.6%2Bis%253Aclosed" target="_blank">deprecated</a>]<br><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fifeilong%2Ffeilong%2Fissues%2F646" target="_blank">#646</a><span>&nbsp;</span>🗑️ 标识 com.feilong.core.lang.ThreadUtil.execute(List, int, Map&lt;String, ?&gt;, PartitionRunnableBuilder) 过时 [<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fifeilong%2Ffeilong%2Fissues%3Fq%3Dis%253Aissue%2Blabel%253Adeprecated%2Bmilestone%253A4.0.6%2Bis%253Aclosed" target="_blank">deprecated</a>]<br><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fifeilong%2Ffeilong%2Fissues%2F647" target="_blank">#647</a><span>&nbsp;</span>🗑️ 标识 com.feilong.core.lang.ThreadUtil.execute(List, int, PartitionPerHandler) 过时 [<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fifeilong%2Ffeilong%2Fissues%3Fq%3Dis%253Aissue%2Blabel%253Adeprecated%2Bmilestone%253A4.0.6%2Bis%253Aclosed" target="_blank">deprecated</a>]<br><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fifeilong%2Ffeilong%2Fissues%2F648" target="_blank">#648</a><span>&nbsp;</span>🗑️ 标识 com.feilong.core.lang.ThreadUtil.execute(List, int, PartitionRunnableBuilder) 过时 [<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fifeilong%2Ffeilong%2Fissues%3Fq%3Dis%253Aissue%2Blabel%253Adeprecated%2Bmilestone%253A4.0.6%2Bis%253Aclosed" target="_blank">deprecated</a>]</p><h2>🎸<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fifeilong%2Ffeilong%2Fissues%3Fq%3Dis%253Aissue%2Blabel%253Afeilong-context%2Bmilestone%253A4.0.6%2Bis%253Aclosed" target="_blank">feilong-context</a></h2><p style="color:#1f2328; text-align:start"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fifeilong%2Ffeilong%2Fissues%2F655" target="_blank">#655</a><span>&nbsp;</span>✨ 新建 com.feilong.context.log.RequestLogHelper 个能快速输出请求 url 请求类型, 请求参数的方法 [<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fifeilong%2Ffeilong%2Fissues%3Fq%3Dis%253Aissue%2Blabel%253Aenhancement%2Bmilestone%253A4.0.6%2Bis%253Aclosed" target="_blank">enhancement</a>]</p><h2><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fifeilong%2Ffeilong%2Fissues%3Fq%3Dis%253Aissue%2Blabel%253Afeilong-net-bot%2Bmilestone%253A4.0.6%2Bis%253Aclosed" target="_blank">feilong-net-bot</a></h2><p style="color:#1f2328; text-align:start"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fifeilong%2Ffeilong%2Fissues%2F642" target="_blank">#642</a><span>&nbsp;</span>✨ 机器人开放获取 key 的方法,方便记录日志, 比如钉钉机器人需要可以返回 token [<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fifeilong%2Ffeilong%2Fissues%3Fq%3Dis%253Aissue%2Blabel%253Aenhancement%2Bmilestone%253A4.0.6%2Bis%253Aclosed" target="_blank">enhancement</a>]</p><h2>🍼<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fifeilong%2Ffeilong%2Fissues%3Fq%3Dis%253Aissue%2Blabel%253Afeilong-servlet%2Bmilestone%253A4.0.6%2Bis%253Aclosed" target="_blank">feilong-servlet</a></h2><p style="color:#1f2328; text-align:start"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fifeilong%2Ffeilong%2Fissues%2F656" target="_blank">#656</a><span>&nbsp;</span>✨ 新建 com.feilong.servlet.http.RequestUtil.parseParamsToQueryString(HttpServletRequest) [<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fifeilong%2Ffeilong%2Fissues%3Fq%3Dis%253Aissue%2Blabel%253Aenhancement%2Bmilestone%253A4.0.6%2Bis%253Aclosed" target="_blank">enhancement</a>]</p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 08 Dec 2023 09:59:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/270133/feilong-4-0-6</guid>
            <link>https://www.oschina.net/news/270133/feilong-4-0-6</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[CLup 5.0.4 更新公告]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:black; margin-left:0; margin-right:0">大家好！🎉 我们的开源项目 CLup，一个强大的 PostgreSQL/PolarDB 数据库管控平台，又迎来了令人振奋的更新——版本 5.0.4！这次更新我们不仅提升了用户体验，还修复了多项问题，让数据库管理变得更加高效和便捷。</p><p style="color:black; margin-left:0; margin-right:0"><strong>🔧 更新亮点</strong>:</p><ol><li><p>👏<strong>前端页面升级</strong>：修复了会话管理和锁管理中的小问题。现在，无论您选择哪个数据库，都不会出现异常了！</p></li><li><p>✨<strong>精准的故障修复</strong>：在<code>pg_helpers.get_db_conn</code>中的判断更加准确，问题解决得干净利落！</p></li><li><p>🛠️<strong>数据库参数管理</strong>：新增了获取和更新数据库默认参数的功能，甚至在数据库停机的状态下也能进行参数修改了！</p></li><li><p>📚<strong>必要的 SQL 文件</strong>：为了更平稳的升级体验，我们增加了升级所需的 SQL 文件。</p></li><li><p>🔍<strong>数据参数优化</strong>：在修改数据参数时，我们增加了一个重要的检查项：备库的参数必须大于主库的<code>max_locks_per_transaction</code>。</p></li><li><p>📉<strong>界面调整</strong>：修改参数页面增加了一个便利的选项，让未被修改的参数不再显示，界面更加清爽！</p></li><li><p>🚀<strong>PolarDB 节点优化</strong>：在搭建 reader 或 Standby 节点、加回备库到集群的过程中，我们优化了实现过程并去除了冗余代码，效率大幅提升！</p></li><li><p>🛠️<strong>配置文件修复</strong>：修复了修改数据库配置时未查找匹配<code>postgresql.auto.conf</code>文件的问题，让配置更加稳定！</p></li><li><p>🧹<strong>清理工作</strong>：我们还删除了部分无效的注释，让代码更加干净整洁。</p></li></ol><p style="color:black; margin-left:0; margin-right:0">这次更新旨在让 CLup 变得更加强大和易用。🌈 我们相信，这些改进会让您的数据库管理工作更加轻松愉快。快来体验 CLup 5.0.4 的全新功能吧！</p><p style="color:black; margin-left:0; margin-right:0; text-align:left">期待您的反馈，让我们一起见证 CLup 软件的不断成长和进步！</p><p style="color:black; margin-left:0; margin-right:0; text-align:left">产品官网：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.csudata.com%2Fclup">https://www.csudata.com/clup</a></p><p style="color:black; margin-left:0; margin-right:0; text-align:left">官方文档：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.csudata.com%2Fclup%2Fmanual">https://www.csudata.com/clup/manual</a></p><p style="color:black; margin-left:0; margin-right:0; text-align:left">开源版 Gitee 地址：</p><ul><li><p style="margin-left:0; margin-right:0">server: https://gitee.com/csudata/clup</p></li><li><p style="margin-left:0; margin-right:0">agent: https://gitee.com/csudata/clup-agent</p></li></ul><p style="color:black; margin-left:0; margin-right:0; text-align:left">开源版 Github 地址</p><ul><li><p style="margin-left:0; margin-right:0">server：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcsudata%2Fclup">https://github.com/csudata/clup</a></p></li><li><p style="margin-left:0; margin-right:0">agent：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcsudata%2Fclup-agent">https://github.com/csudata/clup-agent</a></p></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Fri, 08 Dec 2023 09:29:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/270126</guid>
            <link>https://www.oschina.net/news/270126</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[SQL 质量管理 | SQLE 3.2311.0 来啦！盘点 V3 版本主要变更]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="margin-left:0; margin-right:0; text-align:center"><strong><strong><strong><strong><strong><span style="color:#000000"><strong><strong><span style="color:#000000">📢 重要通知：</span></strong></strong></span></strong></strong></strong></strong></strong><strong><strong><strong><strong><strong><span style="color:#000000">至本期发版，SQLE 已经完成了从 V2 版本到 V3 版本的完美过渡！&nbsp;</span></strong></strong></strong></strong></strong></p><p style="margin-left:0; margin-right:0; text-align:center"><strong><strong><strong><strong><strong><span style="color:#000000"><strong><strong><strong><strong><strong><span style="color:#000000"><strong><strong><strong><strong><strong><span style="color:#000000">✨</span></strong></strong></strong></strong></strong>&nbsp;</span></strong></strong></strong></strong></strong>V3 版本将带来全新的界面和焕然一新的体验！</span></strong></strong></strong></strong></strong></p><p style="margin-left:0; margin-right:0; text-align:center"><strong><strong><strong><strong><strong><span style="color:#000000">🎁</span></strong></strong></strong></strong></strong><strong><strong><strong><strong><strong><span style="color:#000000"><span>&nbsp;</span>SQLE 体验有礼活动再次开启</span></strong></strong></strong></strong></strong></p><p style="margin-left:0; margin-right:0; text-align:center"><strong><strong><strong><strong><strong><span style="color:#000000">长期有效，详见文末</span></strong></strong></strong></strong></strong></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:left">&nbsp;</p><h1><span style="color:#2584b5">什么是 SQLE？</span></h1><p style="color:black; margin-left:0; margin-right:0; text-align:left"><span>SQLE 是一款全方位的 SQL 质量管理平台，覆盖开发至生产环境的 SQL 审核和管理。支持主流的开源、商业、国产数据库，为开发和运维提供流程自动化能力，提升上线效率，提高数据质量。</span></p><p style="color:black; margin-left:0; margin-right:0; text-align:left"><span>更多功能特性及使用场景：《</span><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzU2NzgwMTg0MA%3D%3D%26mid%3D2247511712%26idx%3D1%26sn%3D6919bd72d338367b49af6eabcf8f30cb%26chksm%3Dfc954c3fcbe2c529696cc3a779e8baf74646830ad9ef6a83a78d8664f5e2b8ec2d2d7b450a61%26scene%3D21%23wechat_redirect" target="_blank"><span>让所有人不再为 SQL 问题头疼</span></a><span>》</span></p><h1><span style="color:#2584b5">V3 版本有哪些变化？</span></h1><h3>&nbsp;</h3><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:left"><span style="color:#000000"><strong>与 10.24 发布的 V3 版本相比，本期的发布内容包括了过渡期间在 V2 版本上新增的功能，以及 V3 版本独有的一些酷炫功能。让我们一起来看看吧！</strong></span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:left">&nbsp;</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><span><strong>1. 审核功能改进</strong></span></p><ul><li><p style="margin-left:0; margin-right:0">现在支持快速审核 SQL，高效获得审核结果；</p></li><li><p style="margin-left:0; margin-right:0">新增了全生命周期 SQL 管控面板，让您的 SQL 管理更加得心应手；</p></li><li><p style="margin-left:0; margin-right:0">引入了规则知识库，让您在审核过程中更加专业、准确；</p></li><li><p style="margin-left:0; margin-right:0">支持导出扫描任务报告，让您的审核结果更加清晰明了；</p></li><li><p style="margin-left:0; margin-right:0">审核结果还可以对规则进行筛选，让您的分析更有针对性；&nbsp;</p></li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><span><strong>2. CloudBeaver 优化</strong></span></p><ul><li><p style="margin-left:0; margin-right:0">CloudBeaver 现在也支持自主审核功能啦，可以自主选择审核是否需阻塞 SQL 操作流程；</p></li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><span><strong>3. SQL 采集来源扩展</strong></span></p><ul><li><p style="margin-left:0; margin-right:0">现在可以从 GIT 仓库内的 Java 代码文件中提取 SQL，并且还能查看 SQL 所属的文件，方便快速定位问题；</p></li><li><p style="margin-left:0; margin-right:0">同样地，您也可以从 ZIP 文件中提取 SQL，并且查看 SQL 所属的文件；</p></li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><span><strong>4.&nbsp;审核插件优化</strong></span></p><ul><li><p style="margin-left:0; margin-right:0">JetBrains 插件现在审核时支持快捷切换数据源；</p></li><li><p style="margin-left:0; margin-right:0">审核结果还支持查看规则知识库；</p></li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><span><strong>5. 流程对接优化</strong></span></p><ul><li><p style="margin-left:0; margin-right:0">支持对接飞书流程进行工单审批，让您的工单审批工作更加高效便捷；</p></li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><span><strong>6. 系统功能优化</strong></span></p><ul><li><p style="margin-left:0; margin-right:0">新增了系统公告功能，让您随时获得平台重要信息；</p></li></ul><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:left">&nbsp;</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><span><strong>此后，我们将在 V3 版本持续更新，带给您更多惊喜和改进，敬请期待 SQLE 的新变化！</strong></span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">接下来，我们将介绍本期在<span>&nbsp;</span><strong>SQLE 3.2311.0</strong><span>&nbsp;</span>版本上独有的特色功能：</p><p style="color:black; margin-left:0; margin-right:0; text-align:left">&nbsp;</p><h1><span style="color:#2584b5">主要功能介绍</span></h1><h2><span style="color:#2584b5">社区版</span></h2><h3><span style="color:#2584b5">1、智能扫描任务支持华为 RDS MySQL 慢日志类型</span></h3><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:left"><span style="color:#000000">本期智能扫描新增华为云 RDS 扫描任务类型，用户可以监测华为云 MySQL 数据库中存在性能问题的 SQL 语句，满足用户监控和优化华为云数据库的需求。</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:left">&nbsp;</p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:left">&nbsp;</p><p><img alt="" height="718" src="https://oscimg.oschina.net/oscnet/up-943c50dcae22173b7d2bd879cf1977b1a99.png" width="1280" referrerpolicy="no-referrer"></p><p>&nbsp;</p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:left"><span style="color:#000000">以下是简单的操作示例。</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:left"><span style="color:#000000">1. 新建华为云 RDS 实例，获取实例的项目 ID 及实例 ID。</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0px; margin-right:0px"><img align="left" alt="" src="https://oscimg.oschina.net/oscnet/up-150698bddf08bf37aae78940de37e2aab5e.jpg" referrerpolicy="no-referrer"></p><p>&nbsp;</p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0px; margin-right:0px">&nbsp;</p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:left">&nbsp;</p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:left">&nbsp;</p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:left">&nbsp;</p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:left">&nbsp;</p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:left">&nbsp;</p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:left">&nbsp;</p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:left">&nbsp;</p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:left">&nbsp;</p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:left">&nbsp;</p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:left">&nbsp;</p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:left">&nbsp;</p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:left">&nbsp;</p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:left"><span style="color:#000000">2. 实例上开启慢日志明文显示，并设置慢查时间阈值</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:left"><span style="color:#000000"><span>注意：明文显示的日志 30 天后会自动删除。</span></span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:left"><span style="color:#000000"><span>具体参考：https://support.huaweicloud.com/usermanual-rds/rds_mysql_slow_query_log.html</span></span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:left"><img alt="" height="1172" src="https://oscimg.oschina.net/oscnet/up-245f1993558b83fcc9eebd204e00bf983fa.png" width="1966" referrerpolicy="no-referrer"></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:left">&nbsp;</p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:left"><span>3. 获取访问密钥，密钥文件需要下载至本地查看。</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:left"><span>具体参考：https://support.huaweicloud.com/usermanual-ca/zh-cn_topic_0046606340.html</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:left"><img alt="" height="1302" src="https://oscimg.oschina.net/oscnet/up-52e62cf41ae1c1469c96e6a23db781df0f1.jpg" width="2320" referrerpolicy="no-referrer"></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:left">&nbsp;</p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:left"><span>4. 在 SQLE 平台创建华为云 RDS 慢日志扫描任务，填写字段信息如下：&nbsp;</span></p><ul><li><p style="margin-left:0; margin-right:0; text-align:left"><span>项目 ID：实例所在项目 ID</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>实例 ID：实例 ID</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>Access Key ID：在步骤 3 中获取的访问密钥 ID</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>Access Key Secret：在步骤 3 中获取的访问密钥 Secret</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>启动慢日志时拉取慢日志时间范围（小时）：由于开启明文显示后，华为云平台会自动删除 30 天前的日志，所以时间范围上限是 30 天</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>当前 API 开放的地区参考：https://developer.huaweicloud.com/endpoint?RDS</span></p></li></ul><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:left">&nbsp;</p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:left"><span>5. 完成扫描任务创建，获取扫描任务审核结果。</span></p><h3><span style="color:#2584b5">2、支持查看 SQL 所属文件</span></h3><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:left"><span style="color:#000000">支持在审核 ZIP 文件和 GIT 仓库文件时，了解 SQL 的具体来源，方便用户快速定位问题 SQL。</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:left"><img alt="" height="1320" src="https://oscimg.oschina.net/oscnet/up-d1de6d4c044b3bb0c278171318b055ac991.png" width="1718" referrerpolicy="no-referrer"></p><h1><span style="color:#2584b5">Release 信息</span></h1><h2><span style="color:#2584b5">社区版</span></h2><p><u>新特性：</u></p><ul><li><p style="color:#000000; margin-left:0; margin-right:0"><span>[#2078] 智能扫描任务支持华为云 RDS MySQL 慢日志扫描</span></p></li></ul><p><u>优化：</u></p><ul><li><p><span>[#2054] 当使用 ZIP<span>&nbsp;</span></span><span>文</span><span>件、GIT<span>&nbsp;</span></span><span>仓库审核时，审核结</span><span>果展示 SQL<span>&nbsp;</span></span><span>来源于哪个文件</span></p></li><li><p><span>[#2118] 优化 SQL 分析页面的 SQL 语句展示</span></p></li><li><p><span>[#2030] 规则列表新增检索框</span></p></li><li><p><span>[#1958] 审核结果展示审核规则的详细说明</span></p></li></ul><p><u>Bug 修复：</u></p><ul><li><p><span>[#2136] 解决通过 RPM 包升级后配置文件被重置的问题</span></p></li><li><p><span>[#2119] 解决 SQL 审核页面上传 XML 文件报错的问题</span></p></li><li><p><span>[#2083] 解决创建工单页面规则模板跳转错误的问题</span></p></li><li><p><span>[#1975] 解决 token 失效重新登录后自动跳转功能失效的问题</span></p></li><li><p><span>[#1951] 解决工单内「待操作人」显示重复的问题</span></p></li><li><p><span>[#1945] 解决当数据源没有绑定审核规则模版的时候，在界面上显示报错的问题</span></p></li></ul><h2><span style="color:#2584b5">企业版</span></h2><p><u>Bug 修复：</u></p><ul><li><p><span>[actiontech/sqle-ee/issues/1183] 解决编辑流程模板无法查到指定审核人的问题</span></p></li><li><p><span>[actiontech/sqle-ee/issues/923] 解决添加 Oracle 数据源，修改某些配置后已填好的配置会变为默认值的问题</span></p></li></ul><p style="color:black; margin-left:0; margin-right:0; text-align:left">&nbsp;</p><h1><span style="color:#2584b5">用户体验有礼活动【长期】</span></h1><p style="color:#000000; margin-left:0; margin-right:0; text-align:left">感谢大家在 1024 活动中真诚的反馈！<span>社</span><span>区决定将长期开放【SQLE 用户体验有礼】活动。</span></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:left">体验流程：</p><ol><li><p style="margin-left:0; margin-right:0">体验 SQLE</p></li><li><p style="margin-left:0; margin-right:0">填写体验问卷</p></li><li><p style="margin-left:0; margin-right:0">上传体验过程截图并反馈体验建议或感受（有效性验证，必选）</p></li><li><p style="margin-left:0; margin-right:0">联系管理员领取社区周边</p></li></ol><p style="color:#000000; margin-left:0; margin-right:0; text-align:left">&nbsp;</p><p><img alt="" height="512" src="https://oscimg.oschina.net/oscnet/up-a02212bb699d823206e2b061a3046120c64.png" width="512" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 08 Dec 2023 09:07:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/270121</guid>
            <link>https://www.oschina.net/news/270121</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[wmproxy 0.2.1 发布，支持反向代理 / 负载均衡 / 内网穿透等功能，]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h1>0.2.1</h1><p>1. 请求流量控制</p><p>2. 负载均衡</p><p>3. http 接口重构</p><h1>wmproxy</h1><p><code>wmproxy</code>已用<code>Rust</code>实现<code>http/https</code>代理, <code>socks5</code>代理, 反向代理, 静态文件服务器，四层 TCP/UDP 转发，内网穿透，后续将实现<code>websocket</code>代理等，会将实现过程分享出来，感兴趣的可以一起造个轮子</p><h2>&nbsp;</h2><h2>📦 安装 &amp; 🏃 使用</h2><h3>&nbsp;</h3><h3>安装</h3><div><pre>cargo install wmproxy</pre><div>
  &nbsp;
 </div></div><p>OR</p><div><pre>git clone https://github.com/tickbh/wmproxy
<span>cd</span> wmproxy
cargo install --path <span>.</span></pre><div>
  &nbsp;
 </div></div><pre><code>docker pull dreamwhat/wmproxy
docker run -p 82:82 -p 8090:8090 -p 127.0.0.1:8837:8837 --name proxy_bash dreamwhat/wmproxy /bin/./wmproxy -b -b 0.0.0.0:8090
</code></pre><div>
 &nbsp;
</div><h3>&nbsp;</h3><h3>使用</h3><p>默认端口为 8090 端口，默认监听地址为 127.0.0.1</p><div><pre><span><span>#</span> 直接通用默认参数</span>
wmproxy

<span><span>#</span> 设置账号密码</span>
wmproxy -b 0.0.0.0:8090 --user wmproxy --pass wmproxy

<span><span>#</span> 其它指令</span>
wmproxy --help

<span><span>#</span>配置文件版启动</span>
wmproxy -c config/client.yaml</pre><div>
  &nbsp;
 </div></div><p>&nbsp;</p><p>启动二级代理</p><ol><li>在本地启动代理</li></ol><div><pre>wmproxy -b 127.0.0.1 -p 8090 -S 127.0.0.1:8091 --ts</pre><div>
  &nbsp;
 </div></div><p>或者</p><div><pre>wmproxy -c config/client.yaml</pre><div>
  &nbsp;
 </div></div><p>配置文件如下:</p><div><pre><span>proxy</span>:
  <span><span>#</span> 连接服务端地址</span><span>server</span>: <span>127.0.0.1:8091</span><span><span>#</span> 连接服务端是否加密</span><span>ts</span>: <span>true</span><span><span>#</span> 内网映射配置的数组</span><span>mappings</span>:
    <span><span>#</span>将 localhost 的域名转发到本地的 127.0.0.1:8080</span>
    - <span>name</span>: <span>web</span><span>mode</span>: <span>http</span><span>local_addr</span>: <span>127.0.0.1:8080</span><span>domain</span>: <span>localhost</span><span>headers</span>:
        - <span>[proxy, +, x-forward-for, $client_ip]</span>
        - <span>[proxy, +, from, $url]</span>
        - <span>[+, key, value]</span>
        - <span>[-, etag]</span>
        - <span>[+, last-modified, aaaa]</span><span><span>#</span>将 tcp 的流量无条件转到 127.0.0.1:8080</span>
    - <span>name</span>: <span>tcp</span><span>mode</span>: <span>tcp</span><span>local_addr</span>: <span>127.0.0.1:8080</span><span>domain</span>: </pre><div>
  &nbsp;
 </div></div><p>因为纯转发，所以在当前节点设置账号密码没有意义<code>-S</code>表示连接到的二级代理地址，<strong>有该参数则表示是中转代理，否则是末端代理。</strong><code>--ts</code>表示连接父级代理的时候需要用加密的方式链接</p><ol><li>在远程启动代理</li></ol><div><pre>wmproxy --user proxy --pass proxy -b 0.0.0.0:8091 --tc</pre><div>
  &nbsp;
 </div></div><p>或者</p><div><pre>wmproxy -c config/server.yaml</pre><div>
  &nbsp;
 </div></div><p>配置文件如下:</p><div><pre><span>proxy</span>:
  <span><span>#</span>绑定的 ip 地址</span><span>bind_addr</span>: <span>127.0.0.1:8091</span><span><span>#</span>代理支持的功能，1 为 http，2 为 https，4 为 socks5</span><span>flag</span>: <span>7</span><span><span>#</span>内网映射 http 绑定地址</span><span>map_http_bind</span>: <span>127.0.0.1:8001</span><span><span>#</span>内网映射 tcp 绑定地址</span><span>map_tcp_bind</span>: <span>127.0.0.1:8002</span><span><span>#</span>内网映射 https 绑定地址</span><span>map_https_bind</span>: <span>127.0.0.1:8003</span><span><span>#</span>内网映射的公钥证书，为空则是默认证书</span><span>map_cert</span>: 
  <span><span>#</span>内网映射的私钥证书，为空则是默认证书</span><span>map_key</span>:

  <span><span>#</span>接收客户端是为是加密客户端</span><span>tc</span>: <span>true</span><span><span>#</span>当前服务模式，server 为服务端，client 为客户端</span><span>mode</span>: <span>server</span></pre><div>
  &nbsp;
 </div></div><p><code>--tc</code>表示接收子级代理的时候需要用加密的方式链接，可以<code>--cert</code>指定证书的公钥，<code>--key</code>指定证书的私钥，<code>--domain</code>指定证书的域名，如果不指定，则默认用自带的证书参数</p><blockquote><p>至此通过代理访问的，我们已经没有办法得到真正的请求地址，只能得到代理发起的请求</p></blockquote><h3>&nbsp;</h3><h3>代理间的认证</h3><blockquote><p>目前提供了两种认证双式, <code>two_way_tls</code>开启客户端的证书认证信息, 另一种服务端配置了<code>username</code>和<code>password</code>即需要客户端配置相同的用户密码才能启用认证信息, 两种方式可叠加使用或者单独使用。 配置添加如下:</p></blockquote><div><pre><span>proxy</span>:
  <span>two_way_tls</span>: <span>true</span><span>username</span>: <span>wmproxy</span><span>password</span>: <span>wmproxy</span></pre><div>
  &nbsp;
 </div></div><h1>&nbsp;</h1><h1>🚥 路线图</h1><h3>&nbsp;</h3><h3>socks5</h3><ul><li>IPV6 支持</li><li><code>SOCKS5</code> 验证方式 
  <ul><li><code>NOAUTH</code></li><li><code>USERPASS</code></li></ul></li><li><code>SOCKS5</code> Commands 
  <ul><li><code>CONNECT</code></li><li><code>UDP ASSOCIATE</code></li></ul></li></ul><h3>&nbsp;</h3><h3>http/https</h3><ul><li>IPV6 支持</li></ul><h3>&nbsp;</h3><h3>内网穿透</h3><ul><li>Http 支持</li><li>Https 支持</li><li>Tcp 支持</li></ul><h3>&nbsp;</h3><h3>反向代理</h3><ul><li>静态文件服务器</li><li>被动健康检查</li><li>主动健康检查</li><li>配置热加载</li><li>负载均衡</li><li>四层 TCP 负载</li><li>四层 UDP 负载</li></ul><h4>&nbsp;</h4><h4>支持功能</h4><ul><li>修改 HTTP 请求 Header</li><li>支持 HTTP2 的内网穿透</li></ul></div>
                                    ]]>
            </description>
            <pubDate>Fri, 08 Dec 2023 08:55:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/270120/wmproxy-0-2-1-released</guid>
            <link>https://www.oschina.net/news/270120/wmproxy-0-2-1-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[PicList 2.6.8 发布，图床管理和上传工具，相册 bug 修复]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>PicList 是一款高效的云存储和图床平台管理工具，在 PicGo 的基础上经过深度的二次开发，不仅完整保留了 PicGo 的所有功能，还增添了许多新的 feature。例如相册支持同步云端删除文件，内置图床额外添加了 WebDav、本地图床和 SFTP 等。PicList 同时增加了完整的云存储管理功能，包括云端目录查看、文件搜索、批量上传下载和删除文件，复制多种格式文件链接和图片/markdown/文本/视频预览等，另外还有更加强大的相册和多项功能新增或优化。</p><h2>开源地址和软件官网</h2><ul><li><p>Github: <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FKuingsmile%2FPicList" target="_blank">https://github.com/Kuingsmile/PicList</a></p></li><li><p>Gitee: <a href="https://gitee.com/kuingsmile/PicList">https://gitee.com/kuingsmile/PicList</a></p></li><li><p>软件官网：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpiclist.cn" target="_blank">https://piclist.cn</a></p></li></ul><h2>下载地址</h2><h3>MacOS</h3><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frelease.piclist.cn%2Flatest%2FPicList-2.6.8-arm64.dmg" target="_blank">PicList-2.6.8-arm64.dmg</a><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frelease.piclist.cn%2Flatest%2FPicList-2.6.8-x64.dmg" target="_blank">PicList-2.6.8-x64.dmg</a><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frelease.piclist.cn%2Flatest%2FPicList-2.6.8-universal.dmg" target="_blank">PicList-2.6.8-universal.dmg</a></p><h3>Windows</h3><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frelease.piclist.cn%2Flatest%2FPicList-Setup-2.6.8-ia32.exe" target="_blank">PicList-Setup-2.6.8-ia32.exe</a><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frelease.piclist.cn%2Flatest%2FPicList-Setup-2.6.8-x64.exe" target="_blank">PicList-Setup-2.6.8-x64.exe</a><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frelease.piclist.cn%2Flatest%2FPicList-Setup-2.6.8.exe" target="_blank">PicList-Setup-2.6.8.exe</a></p><h3>Linux</h3><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frelease.piclist.cn%2Flatest%2FPicList-2.6.8.AppImage" target="_blank">PicList-2.6.8.AppImage</a><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frelease.piclist.cn%2Flatest%2Fpiclist_2.6.8_amd64.snap" target="_blank">piclist_2.6.8_amd64.snap</a></p><h2>本次更新内容</h2><h3>✨ Features</h3><ul><li>现在支持 vscode 插件 vs-piclist 的远程服务器模式</li><li>关联更新：现在支持通过 Docker 部署 PicList-core</li><li>上传接口增加了额外的记录区分上传行为</li><li>核心库版本更新</li></ul><h3>🐛 Bug Fixes</h3><ul><li>修复了相册内无法正常复制部分插件上传的图片 URL 的问题</li><li>修复了上传图床选择过程中的 log 记录字段错误的问题</li></ul><h2>特色功能</h2><ul><li>保留了 PicGo 的所有功能，兼容绝大部分已有的 PicGo 插件，包括和 Typora、Obsidian 等软件的搭配</li><li>新增了多个内置图床，如 WebDav、本地图床和 SFTP 等，原内置 imgur 图床额外支持登录账号上传</li><li>相册中可同步删除云端图片，支持所有内置图床和多个插件</li><li>相册新增了高级搜索和排序，批量修改 URL 等功能</li><li>内置水印添加、图片压缩、图片缩放、图片旋转和图片格式转换等功能，同时支持高级重命名</li><li>支持配置同步至 Github 或 Gitee 仓库</li><li>支持管理十余种图床，可以在线进行云端目录查看、文件搜索、批量上传、批量下载、删除文件等</li><li>支持预览多种格式的文件，包括图片、视频、纯文本文件和 markdown 文件等，具体支持的格式请参考<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FKuingsmile%2FPicList%2Fblob%2Fdev%2Fsupported_format.md" target="_blank">支持的文件格式列表</a></li><li>支持启用正则表达式的批量云端文件重命名</li><li>对于私有存储桶等支持复制预签名链接进行分享</li><li>支持软件自动更新，支持多种启动模式，还有更多功能细节新增和优化</li><li>优化了 PicGo 的界面，解锁了窗口大小限制，同时美化了部分界面布局</li><li>mac 平台安装包已签名，从源头解决了 PicGo 上的安装包已损坏的日经问题</li></ul><h2>软件截图</h2><p><img alt="image.png" src="https://note.msq.pub/202308230137997.webp" referrerpolicy="no-referrer"><img alt="image.png" src="https://note.msq.pub/202308230138231.webp" referrerpolicy="no-referrer"><img alt="image.png" src="https://note.msq.pub/202308230138929.webp" referrerpolicy="no-referrer"><img alt="image.png" src="https://note.msq.pub/202308230139152.webp" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 08 Dec 2023 07:32:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/270105</guid>
            <link>https://www.oschina.net/news/270105</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Visual Studio Code 1.85 发布，浮动窗口]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff; color:#333333">Visual Studio Code 1.85 现已发布，具体更新内容如下：</span></p><ul><li><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_85%23_floating-editor-windows" target="_blank">浮动编辑器窗口</a>&nbsp;</strong>- 将编辑器拖放到桌面上。</li></ul><p>在此版本中，你可以将编辑器从主窗口移到自己的轻量级窗口中。对一个窗口中的编辑器所做的更改会立即应用到打开编辑器的所有其他窗口。创建浮动编辑器窗口的最简单方法是将编辑器从当前窗口拖出，然后放到桌面的空白处。</p><p><img height="199" src="https://oscimg.oschina.net/oscnet/up-b0da5aaa77a00252d07e01a0deba0bb9651.png" width="500" referrerpolicy="no-referrer"></p><p>新的 workbench.editor.dragToOpenWindow 设置可以禁用这一行为。</p><p>此外，还新增了全局和上下文命令，用于将编辑器和编辑器组移动或复制到各自的窗口中：</p><ol><li><strong>View: Copy Editor into New Window</strong><span>&nbsp;</span>(<code>workbench.action.editor.copyWithSyntaxHighlightingAction</code>)</li><li><strong>View: Move Editor into New Window</strong><span>&nbsp;</span>(<code>workbench.action.editor.moveEditorToNextWindow</code>)</li><li><strong>View: Copy Editor Group into New Window</strong><span>&nbsp;</span>(<code>workbench.action.editor.copyGroupToNextWindow</code>)</li><li><strong>View: Move Editor Group into New Window</strong><span>&nbsp;</span>(<code>workbench.action.editor.moveGroupToNextWindow</code>)</li><li><strong>View: New Empty Editor Window</strong><span>&nbsp;</span>(<code>workbench.action.newWindow</code>)</li></ol><p>浮动窗口中的编辑器区域可以按照你的要求进行任何复杂的布局。由于终端和搜索结果都可以作为编辑器打开，因此现在也可以在单独的窗口中使用这些功能。</p><p><img alt="" height="380" src="https://oscimg.oschina.net/oscnet/up-614b6e5f35aba888f52c6af02605f895709.png" width="500" referrerpolicy="no-referrer">&nbsp;</p><ul><li><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_85%23_accessibility" target="_blank">无障碍视图工作流程</a>&nbsp;</strong>- 更顺畅地往返于无障碍视图。</li><li><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_85%23_extension-auto-update-control" target="_blank">更精细的扩展更新控制</a>&nbsp;</strong>- 选择要自动更新的扩展。</li></ul><p><img height="185" src="https://oscimg.oschina.net/oscnet/up-2b45a99221f8b86b5b262c255e4730e2db4.png" width="500" referrerpolicy="no-referrer"></p><p><img height="173" src="https://oscimg.oschina.net/oscnet/up-11c49e3b9484fc08295eab2ac761fb1e91a.png" width="500" referrerpolicy="no-referrer"></p><ul><li><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_85%23_source-control" target="_blank">Source Control&nbsp;</a><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_85%23_incomingoutgoing-changes" target="_blank">Incoming/Outgoing</a>&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_85%23_source-control" target="_blank">视图</a>&nbsp;</strong>- 轻松查看待处理的存储库更改。</li></ul><p><img alt="" height="400" src="https://oscimg.oschina.net/oscnet/up-e03fba3b7c01f5169672e873dc03f7ca5d2.png" width="500" referrerpolicy="no-referrer"></p><ul><li><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_85%23_javascript-debugger" target="_blank">JavaScript 堆快照</a>&nbsp;</strong>- 可视化堆快照，包括内存对象图。</li></ul><p><img alt="" height="313" src="https://oscimg.oschina.net/oscnet/up-2c53ba92039826739ba95948bfa8fdf06d1.png" width="500" referrerpolicy="no-referrer"></p><ul><li><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_85%23_jump-to-definition-for-inlay-hints" target="_blank">TypeScript 从 inlay hints 转到 Definition</a>&nbsp;</strong>- 从 inlay hint 悬停跳转到 definition。</li></ul><p><img height="152" src="https://oscimg.oschina.net/oscnet/up-9e81061ebcb464afb21b52a4230d32d41c2.png" width="500" referrerpolicy="no-referrer"></p><ul><li><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_85%23_python" target="_blank">Python 类型层次结构显示</a>&nbsp;</strong>- 快速查看和浏览复杂的类型关系。</li></ul><p><img height="306" src="https://oscimg.oschina.net/oscnet/up-65ccbe610ac5572ae021bd333667e60b9c1.png" width="500" referrerpolicy="no-referrer"></p><ul><li><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_85%23_github-copilot" target="_blank">GitHub Copilot 更新</a>&nbsp;</strong>- 内联聊天改进、Rust 代码解释。</li></ul><p><img alt="" height="242" src="https://oscimg.oschina.net/oscnet/up-ea71728ad959cbc644dc29abd62c52495f7.png" width="500" referrerpolicy="no-referrer"></p><p><img alt="" height="369" src="https://oscimg.oschina.net/oscnet/up-71118ae08a788d060a52f73b35d2b632f4f.png" width="500" referrerpolicy="no-referrer"></p><ul><li><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_85%23_preview-features" target="_blank">预览：扩展的 Sticky Scroll 支持</a>&nbsp;</strong>- 在树视图和终端中的 Sticky Scroll。</li></ul><p><img height="325" src="https://oscimg.oschina.net/oscnet/up-9c280278b75fad356124e3b3c38eeaa46cc.png" width="500" referrerpolicy="no-referrer"></p><p><span style="background-color:#ffffff; color:#333333">更多详情可</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_85" target="_blank">查看官方公告</a><span style="background-color:#ffffff; color:#333333">。&nbsp;</span></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 08 Dec 2023 06:43:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/270095/vs-code-1-85-released</guid>
            <link>https://www.oschina.net/news/270095/vs-code-1-85-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Rust 通用代码生成器莲花发布红莲尝鲜版十八介绍视频，详细讲解动词否定功能群]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><strong>Rust 通用代码生成器莲花发布红莲尝鲜版十八介绍视频，详细讲解动词否定功能群</strong></p><p>Rust 通用代码生成器莲花发布深度修复版红莲尝鲜版十七介绍视频，详细讲解三大变形功能群之一的动态椰子树功能群，欢迎使用。视频请见：<br><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1sa4y1d7cz%2F" target="_blank">https://www.bilibili.com/video/BV1sa4y1d7cz/</a></p><p>Rust 通用代码生成器莲花尝鲜版十八。修复了动词否定功能群和复杂版面和图形报表联合使用时的一些缺陷。此版本支持 MariaDB，MySQL，PostgreSQL 和 Oracle 四种数据库。此版本支持枚举和 datadummy 模式。请部署在 Tomcat9 的 webapps 目录下。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">代码生成器的项目地址：<a href="https://gitee.com/jerryshensjf/Lotus">https://gitee.com/jerryshensjf/Lotus</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">二进制 war 包的下载地址:<span>&nbsp;</span><a href="https://gitee.com/jerryshensjf/Lotus/attach_files">https://gitee.com/jerryshensjf/Lotus/attach_files</a></p><h1>Rust 通用代码生成器：莲花</h1><h3>介绍</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Rust 通用代码生成器：莲花</p><h3>软件架构说明</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">软件使用 Java 写成，部署在 Tomcat 9 的 webapps 目录中。目前的版本采用 openjdk 17 编译。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">本软件是从 Go 语言通用代码生成器：仙童改写而来。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">代码生成物是 rust 1.69 环境。采用 Axum 0.6.20, tokio 1.32.0 , sqlx 0.7.1 数据库访问层和 MariaDB, MySQL 8，PostgreSQL 数据库。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Rust 通用代码生成器莲花尝鲜版十八。修复了动词否定功能群和复杂版面和图形报表联合使用时的一些缺陷。此版本支持 MariaDB，MySQL，PostgreSQL 和 Oracle 四种数据库。此版本支持枚举和 datadummy 模式。请部署在 Tomcat9 的 webapps 目录下。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Rust 通用代码生成器莲花尝鲜版十七。此版本是深度修复版，修复规范了下拉列表的空值。前端项目和后端项目经过了更严密的测试。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Rust 通用代码生成器莲花尝鲜版十六。此版本是深度修复版，修复了高级定制功能群，自动生成差异版本功能群，动词否定功能群和字段否定功能群里的一系列缺陷，并有其他缺陷修复。此版本支持 MariaDB，MySQL，PostgreSQL 和 Oracle 四种数据库。此版本支持枚举和 datadummy 模式。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Rust 通用代码生成器莲花尝鲜版十五。此版本是测试修复版，没有新功能，修复了尝鲜版十四的 DataDummy 功能。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Rust 通用代码生成器莲花尝鲜版十四。此版本是测试修复版，没有新功能，都是尝鲜版十二的功能，但有错误修复。修复 Oracle 数据库，datadummy 模式和枚举。此版本支持 MariaDB，MySQL，PostgreSQL 和 Oracle 四种数据库。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Rust 通用代码生成器莲花尝鲜版十二。此版本支持 Oracle 数据库。此版本支持 MariaDB，MySQL，PostgreSQL 和 Oracle 四种数据库。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Rust 通用代码生成器莲花尝鲜版十一。此版本是一个修复增强版本，此版本完善了 DataDummy 模式，并完善了枚举的使用。并修复了数据库模式的脚本缺陷。暂不支持 Oracle 数据库。欢迎使用纯内存数据模式的原型功能，此功能为售前和产品经理开发，欢迎使用。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Rust 通用代码生成器莲花尝鲜版十。此版本支持 DataDummy 模式，即纯内存数据模式的原型功能，为售前和产品经理开发。支持枚举，优化了模块结构，main.rs 只包含入口点和最低限度的其他程序，其他模块都放在 lib.rs 里，前端代码生成器的默认图片位置改到 static 目录下，方便 vue 前端的构建。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Rust 通用代码生成器莲花尝鲜版九。此版本更新 Axum 至最新版 0.6.20,改进了前端登录失败的错误提示，去除了后端运行时在控制枱上输出的调试信息。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Rust 通用代码生成器莲花尝鲜版八已发布。此版本更新 JQuery EasyUI 至最新版 1.10.17。此版本解决了编译警告问题。支持日期与日期时间的空值。修复了尝鲜版七过度更新引起的后端编辑不支持更新图片的缺陷。和其他一些缺陷。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Rust 通用代码生成器莲花已发布红莲尝鲜版七，这是迄今为止最重要的里程碑。最重要的更新是数据库访问框架从 0.3.5 大幅更新至 0.7.1 最新版。这是一个重大的更新，尝试了几次才顺利完成了这个规划了很久的更新。第二个更新是消除了代码生成物上 90% 的编译警告，大幅改善了代码生成物的代码质量。而后通过更多的测试，修复了一系列缺陷。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Rust 通用代码生成器莲花尝鲜版六。此版本支持日期与日期时间，支持三大部分生成功能群。支持自动登录模块，支持修改自己的资料和登陆密码。修复了尝鲜版五的克隆和批克隆出错问题，修复了尝鲜版五编辑用户会导致密码失效问题。和其他一些缺陷。暂不支持 Oracle 数据库，暂不支持空值。功能对标 java 通用代码生成器光电音之王版本。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Rust 通用代码生成器莲花尝鲜版 5。此版本是第一个功能完整的可用版本，支持自动登录模块，支持 Axum 最新版 0.6.18,彻底改进了数据库访问层，解决了每次查询新建一个数据库链接，以致只能查询 10 余次的重大缺陷，经过更多测试，此版本支持 MariaDB,MySQL 和 PostgreSQL 数据库。支持所附全部非 Oracle 示例。本版本的功能和质量均达到可用水平。 尝鲜版 4。通过编程和测试，终于彻底修复了莲花生成的 Vue 前端。现在，前端和后端可以顺畅的工作，没有任何障碍了。莲花尝鲜版 4 除了弹性登录模块和 Oracle 数据库的功能外，其他功能都已完备。大家已经可以试用了。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">莲花尝鲜版 3 升级 Axum 至 0.6.6,并消除 2/3 的编译警告。后续版本有可能将 Axum 重新降级至 0.4。Axum0.6 的粉丝请使用此版本。您可以使用所附非 Oracle 示例测试系统，可以得到可以运行的代码生成物。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">此版本支持 Go 语言兼容性，即 Go 语言通用代码生成器仙童的模板直接生成 Rust 代码生成物。也支持 Java 兼容性，即支持 java 通用代码生成器光，和平之翼代码生成器，无垠式代码生成器的 Excel 模板直接生成 Rust 代码生成物。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版 4 支持 Excel,PDF 数据导出。支持 Vue，ElementUI 的独立前端。支持 MySQL，MariaDB 和 PostgreSQL 数据库。支持图片功能。支持所附全部非 Oracle 示例。欢迎试用。</p><h3>百度话题</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">＃通用代码生成器＃</p><h3>介绍视频</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版十八的视频请见：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1sa4y1d7cz%2F">https://www.bilibili.com/video/BV1sa4y1d7cz/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版十七的视频请见：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1pG411i7Qa%2F">https://www.bilibili.com/video/BV1pG411i7Qa/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1iC4y1j7rd%2F">https://www.bilibili.com/video/BV1iC4y1j7rd/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1rQ4y1t7qJ%2F">https://www.bilibili.com/video/BV1rQ4y1t7qJ/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版十六的视频请见：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1Mw411x7FP%2F">https://www.bilibili.com/video/BV1Mw411x7FP/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版十五的视频请见：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1Pw411X7h5%2F">https://www.bilibili.com/video/BV1Pw411X7h5/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1VC4y1Z7KF%2F">https://www.bilibili.com/video/BV1VC4y1Z7KF/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版十四的视频请见：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1Fz4y1F7jf%2F">https://www.bilibili.com/video/BV1Fz4y1F7jf/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版十二的介绍视频请见：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1MH4y1U7A1%2F">https://www.bilibili.com/video/BV1MH4y1U7A1/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版十一的介绍视频请见：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1Qm4y1V77Q%2F">https://www.bilibili.com/video/BV1Qm4y1V77Q/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1Ez4y157k2%2F">https://www.bilibili.com/video/BV1Ez4y157k2/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版十的介绍视频请见：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1Fh4y1P7xF%2F">https://www.bilibili.com/video/BV1Fh4y1P7xF/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版九的介绍视频请见：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1Hp4y1E7T2%2F">https://www.bilibili.com/video/BV1Hp4y1E7T2/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版八介绍视频请见：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1qG411f7io%2F">https://www.bilibili.com/video/BV1qG411f7io/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1yV4y1Y7pM%2F">https://www.bilibili.com/video/BV1yV4y1Y7pM/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版七介绍视频请见：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1Kz4y1W7eH%2F">https://www.bilibili.com/video/BV1Kz4y1W7eH/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版六介绍视频请见：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1Cj41197nY%2F">https://www.bilibili.com/video/BV1Cj41197nY/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版五介绍视频请见：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1Cg4y1574C%2F">https://www.bilibili.com/video/BV1Cg4y1574C/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Rust 通用代码生成器莲花尝鲜版 4 发布介绍视频，从源码开始构建 Rust 通用代码生成器莲花。并生成一个例程的前后端并演示运行。 视频请见：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV11N411c7H6%2F">https://www.bilibili.com/video/BV11N411c7H6/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版 3</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1co4y1a7Ca%2F">https://www.bilibili.com/video/BV1co4y1a7Ca/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版 2</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1aj411N7YB%2F">https://www.bilibili.com/video/BV1aj411N7YB/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">冒烟测试版 4</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1jy4y1R79h%2F">https://www.bilibili.com/video/BV1jy4y1R79h/</a></p><h3>尝鲜版十八下载</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/jerryshensjf/Lotus/attach_files">https://gitee.com/jerryshensjf/Lotus/attach_files</a></p><h3>项目图片</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="输入图片说明" src="https://gitee.com/jerryshensjf/Lotus/raw/master/RedLotus.jpg" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="输入图片说明" src="https://gitee.com/jerryshensjf/Lotus/raw/master/pl_3.jpeg" referrerpolicy="no-referrer"></p><h3>软件截屏</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="输入图片说明" src="https://gitee.com/jerryshensjf/Lotus/raw/master/lotus_excelg.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="输入图片说明" src="https://gitee.com/jerryshensjf/Lotus/raw/master/lotus_wizard.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="输入图片说明" src="https://gitee.com/jerryshensjf/Lotus/raw/master/Lotus_compare2.png" referrerpolicy="no-referrer"></p><h3>代码生成物截屏</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">日期时间对话框</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="输入图片说明" src="https://gitee.com/jerryshensjf/Lotus/raw/master/datetime.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">单表操作</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="输入图片说明" src="https://gitee.com/jerryshensjf/Lotus/raw/master/lotus_grid.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">多对多</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="输入图片说明" src="https://gitee.com/jerryshensjf/Lotus/raw/master/rust_mtm.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">复杂版面，树表</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="输入图片说明" src="https://gitee.com/jerryshensjf/Lotus/raw/master/lotus_treegrid.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">图形报表</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="输入图片说明" src="https://gitee.com/jerryshensjf/Lotus/raw/master/lotus_echarts.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">图片功能</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="输入图片说明" src="https://gitee.com/jerryshensjf/Lotus/raw/master/lotus_pic.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Excel 数据导出</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="输入图片说明" src="https://gitee.com/jerryshensjf/Lotus/raw/master/Lotus_excel_export.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">PDF 数据导出</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="输入图片说明" src="https://gitee.com/jerryshensjf/Lotus/raw/master/Lotus_pdf_export.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Vue 前端日期对话框</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="输入图片说明" src="https://gitee.com/jerryshensjf/Lotus/raw/master/front_date.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Vue 独立前端，登录界面</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="输入图片说明" src="https://gitee.com/jerryshensjf/Lotus/raw/master/Lotus_frontend_login.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Vue 独立前端，内页</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="输入图片说明" src="https://gitee.com/jerryshensjf/Lotus/raw/master/Lotus_frontend_inner.png" referrerpolicy="no-referrer"></p><h3>源码编译用户指南</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">通用代码生成器已经支持自己编译源码，我已把原来缺的前端代码生成器的 jar 包上传。支持大家自行编译源码。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">需要注意的是，现在我的开发平台是 Fedora 37 上的 openjdk 17。所以大家编译源码最好使用 openjdk17。编译好的 war 包运行在 apache tomcat 9.0 上。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">已有 jdk8 的用户报告默认下载的代码生成器 war 包在他的平台上无法运行。您如果遇到类似问题请报告。我的电子邮件是：<a href="https://www.oschina.net/action/GoToLink?url=mailto%3Ajerry_shen_sjf%40qq.com" target="_blank">jerry_shen_sjf@qq.com</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">附 openjdk 17 下载地址：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fjdk.java.net%2Fjava-se-ri%2F17">https://jdk.java.net/java-se-ri/17</a></p><h3>源码研读者注意事项</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">无垠式代码生成器第一个完整版本源码，有兴趣可以抄写一下：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/jerryshensjf/InfinityGPGenerator_0_6_5">https://gitee.com/jerryshensjf/InfinityGPGenerator_0_6_5</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">相关技术视频：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1fX4y1u7Bn%2F">https://www.bilibili.com/video/BV1fX4y1u7Bn/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1rv41187qY%2F">https://www.bilibili.com/video/BV1rv41187qY/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1xv41187cA%2F">https://www.bilibili.com/video/BV1xv41187cA/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1t64y1v7WA%2F">https://www.bilibili.com/video/BV1t64y1v7WA/</a></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 08 Dec 2023 05:05:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/270078</guid>
            <link>https://www.oschina.net/news/270078</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[CMake 3.28.0 发布，开源构建系统]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">CMake 是一个跨平台的自动化构建系统，它使用一个名为 CMakeLists.txt 的文件来描述构建过程，可以产生标准的构建文件，如 Unix 的 Makefile 或 Windows Visual C++ 的 projects/workspaces 。文件 CMakeLists.txt 需要手工编写，也可以通过编写脚本进行半自动的生成。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">CMake 3.28.0 现已发布，一些亮点更新内容如下：</p><ul><li style="text-align:left">Ninja Generators 和 Visual Studio Generators for VS 2022 及更新版本，结合 MSVC 14.34 工具集（随 VS 17.4 提供）及更新版本、LLVM/Clang 16.0 及更新版本，以及 GCC 14（2023-09-20 每日更新后）及更新版本，现在都支持 C++ 20 命名模块。详情可参阅 "cmake-cxxmodules(7)"。</li><li>现在可以使用 NVIDIA CUDA Compiler (NVCC) 为 NVIDIA GPU 编译「HIP」语言代码。参阅「CMAKE_HIP_PLATFORM」变量。</li><li>在 Apple 平台上，现在支持「.xcframework」文件夹。</li><li>自 CMake 3.0 起已弃用的「exec_program()」命令已被 policy 「CMP0153」删除。请改用「execute_process()」命令。</li><li>使用文件集的目标中生成的文件现在默认被视为私有。生成的 public headers&nbsp;必须使用文件集指定。这使得 Ninja Generators 能够生成更高效的构建图。参见政策「CMP0154」。</li><li>「find_library()」、「find_path()」和「find_file()」命令不再搜索从「PATH」环境变量派生的安装前缀。此行为是在 CMake 3.3 中添加的，以支持 Windows 上的 MSYS 和 MinGW（「MSYSTEM」）开发环境，但它可以出于不相关的原因搜索恰好位于「PATH」中的不需要的前缀。在「PATH」中保留一些「&lt;prefix&gt;/bin」目录只是为了他们的工具的用户，不一定希望搜索任何相应的「&lt;prefix&gt;/lib」「&lt;prefix&gt;/include」目录。CMake 3.6 已针对非 Windows 平台恢复了该行为。现在它也已在 Windows 平台上恢复。</li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="color:#000000"><span style="background-color:#ffffff">详情可</span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.kitware.com%2Fcmake-3-28-0-available-for-download%2F" target="_blank">查看发布公告</a><span style="background-color:#ffffff; color:#333333">。</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="background-color:#ffffff; color:#333333">下载：</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcmake.org%2Fdownload%2F" target="_blank">https://cmake.org/download/</a></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 08 Dec 2023 03:13:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/270056/cmake-3-28-0-released</guid>
            <link>https://www.oschina.net/news/270056/cmake-3-28-0-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[FolkMQ 180K TPS，v1.0.18 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h2>简介</h2><ul><li>采用 "内存运行" + "快照持久化" + "Broker 集群模式"（可选）</li><li>基于<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsocketd.noear.org%2F" target="_blank">Socket.D 网络应用协议</a><span>&nbsp;</span>开发，使用「多路复用」技术。<span style="background-color:#f1c40f">全新设计，自主架构！</span></li></ul><table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:0px; box-sizing:border-box; color:#24292e; display:block; font-family:-apple-system,&quot;system-ui&quot;,&quot;Segoe UI&quot;,Helvetica,Arial,sans-serif,&quot;Apple Color Emoji&quot;,&quot;Segoe UI Emoji&quot;,&quot;Segoe UI Symbol&quot;; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; margin-bottom:16px; margin-top:0px; orphans:2; overflow:auto; text-align:start; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:960px; word-spacing:0px"><tbody><tr><th>角色</th><th>功能</th></tr></tbody><tbody><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">生产端</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">发布消息（Qos0、Qos1）、发布定时消息（Qos0、Qos1）、发布重试</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">&nbsp;</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">&nbsp;</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">消费端</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">订阅、取消订阅</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">消费端</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">消费-ACK（自动、手动）</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">&nbsp;</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">&nbsp;</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">服务端</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">发布-Confirm、订阅-Confirm、取消订阅-Confirm、派发-Retry、派发-Delayed</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">服务端</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">内存运行、快照持久化（自动、停机、手动）</td></tr></tbody></table><h2>特点</h2><ul><li>快、是真的快（单机版，180K TPS）。有点像 Redis 之于 MySql。</li></ul><p style="color:#24292e; text-align:start"><img src="https://teamx.noear.org/img/99fe298fb31440779e0a786fe3cd958c.png" width="600" referrerpolicy="no-referrer"></p><p style="color:#24292e; text-align:start">//使用 MacBook pro 2020 + JDK8 本机测试，单客户端发与收（跑分难免有波动，我是选了好看点的）</p><h2>本次更新</h2><ul><li>调整，将「消费者」概念调整为「消费者组」概念（与经典概念同步）</li><li>调整，客户端创建接口，更友好些</li><li>添加 folkmq-broker 控制枱</li><li>优化 folkmq-broker 答复中转流程（避免对方已关停，还在不断答复）</li><li>优化 folkmq-server 快照加载机制</li><li>优化，快照格式设计（兼容旧版）</li><li>优化，消息派发处理细节</li><li>简化 folkmq-server 连接 folkmq-broker 的地址</li><li>修复 broker 集群模式下，folkmq-server 无法触发启动与停目快照事件的问题</li></ul><h2>代码仓库</h2><ul><li><a href="https://gitee.com/noear/folkmq">https://gitee.com/noear/folkmq</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnoear%2Ffolkmq" target="_blank">https://github.com/noear/folkmq</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Fri, 08 Dec 2023 02:58:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/270051/folkmq-1-0-18-released</guid>
            <link>https://www.oschina.net/news/270051/folkmq-1-0-18-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[新一代基于 mybatis 的 orm：mybatis-mp 1.2.1 GA 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">全新一代基于 mybatis 扩展的 orm 框架，拥有良好的性能和扩展性。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">1：基于注解，映射数据库；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">2：支持多表 join 和返回；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">3：api 采用 lambda 和 stream 流式设计；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">4：内置分页以及超强的 sql 优化功能；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">5：稳定且性能极优；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">6：轻量级封装 mybatis，几乎没有侵入；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">7：api 丰富，支持数据库函数、多表、乐观锁、多租户、逻辑删除、默认值（可动态值） 等众多功能；零学习成本，和写 sql 一样方便。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">8：支持复杂的返回关系映射：例如一对一 ，一对多，多对多；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">8：内置代码生成器，通过配置，可定制自身规范；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">9：全新的框架，全新的设计理念，新的就是好！</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">本次 1.2.0 更新，内容：</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">1：<span style="background-color:#ffffff; color:#000000">增加游标列表查询</span></p><p>2:&nbsp; &nbsp;<span style="background-color:#ffffff; color:#000000">小优化部分 foreach 代码</span></p><p>3:&nbsp; &nbsp;<span style="background-color:#ffffff; color:#000000">增加 save(list) update(list) delete(list) 等方法</span></p><p>4:&nbsp; &nbsp;&nbsp;<span style="background-color:#ffffff; color:#000000">修改了逻辑删除局部开关的作用域</span></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 08 Dec 2023 02:35:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/270046/mybatis-mp-1-2-1-ga</guid>
            <link>https://www.oschina.net/news/270046/mybatis-mp-1-2-1-ga</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[RuoYi-Vue 3.8.7 发布，更多细节优化]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">若依前后端分离版本<span style="background-color:#ffffff; color:#333333">&nbsp;v3.8.7 已发布，更新日志：</span></p><ul><li>操作日志记录部门名称</li><li>全局数据存储用户编号</li><li>新增编程式判断资源访问权限</li><li>操作日志列表新增 IP 地址查询</li><li>定时任务新增页去除状态选项</li><li>代码生成支持选择前端模板类型</li><li>显隐列组件支持复选框弹出类型</li><li>通用排序属性 orderBy 参数限制长度</li><li>Excel 自定义数据处理器增加单元格/工作簿对象</li><li>升级 oshi 到最新版本 6.4.8</li><li>升级 druid 到最新版本 1.2.20</li><li>升级 fastjson 到最新版 2.0.43</li><li>升级 pagehelper 到最新版 1.4.7</li><li>升级 commons.io 到最新版本 2.13.0</li><li>升级 element-ui 到最新版本 2.15.14</li><li>修复五级路由缓存无效问题</li><li>修复外链带端口出现的异常</li><li>修复树模板父级编码变量错误</li><li>修复字典表详情页面搜索问题</li><li>修复内链 iframe 没有传递参数问题</li><li>修复自定义字典样式不生效的问题</li><li>修复字典缓存删除方法参数错误问题</li><li>修复 Excel 导入数据临时文件无法删除问题</li><li>修复未登录带参数访问成功后参数丢失问题</li><li>修复 HeaderSearch 组件跳转 query 参数丢失问题</li><li>修复代码生成导入后必填项与数据库不匹配问题</li><li>修复 Excels 导入时无法获取到 dictType 字典值问题</li><li>优化下载 zip 方法新增遮罩层</li><li>优化头像上传参数新增文件名称</li><li>优化字典标签支持自定义分隔符</li><li>优化菜单管理类型为按钮状态可选</li><li>优化前端防重复提交数据大小限制</li><li>优化 TopNav 菜单没有图标 svg 不显示</li><li>优化数字金额大写转换精度丢失问题</li><li>优化富文本 Editor 组件检验图片格式</li><li>优化页签在 Firefox 浏览器被遮挡的问题</li><li>优化个人中心/基本资料修改时数据显示问题</li><li>优化缓存监控图表支持跟随屏幕大小自适应调整</li><li>其他细节优化</li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">若依是一套全部开源的快速开发平台，毫无保留给个人及企业免费使用。</p><ul><li>前端采用 Vue、Element UI。</li><li>后端采用 Spring Boot、Spring Security、Redis &amp; Jwt。</li><li>权限认证使用 Jwt，支持多终端认证系统。</li><li>支持加载动态权限菜单，多方式轻松权限控制。</li><li>高效率开发，使用代码生成器可以一键生成前后端代码。</li><li>提供了技术栈（Vue3 Element Plus Vite）版本<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fyangzongzhuan%2FRuoYi-Vue3" target="_blank">RuoYi-Vue3</a>，保持同步更新。</li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">下载地址<span>&nbsp;</span><a href="https://gitee.com/y_project/RuoYi-Vue">RuoYi-Vue</a></p><blockquote><p style="margin-left:0; margin-right:0">如需不分离应用，请移步&nbsp;<a href="https://gitee.com/y_project/RuoYi">RuoYi</a>&nbsp;<code>(保持同步更新)</code>，如需其他版本，请移步&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fdoc.ruoyi.vip%2Fruoyi%2Fdocument%2Fxmkz.html" target="_blank">项目扩展</a>&nbsp;<code>(不定时更新)</code></p></blockquote><h2>内置功能</h2><ol><li>用户管理：用户是系统操作者，该功能主要完成系统用户配置。</li><li>部门管理：配置系统组织机构（公司、部门、小组），树结构展现支持数据权限。</li><li>岗位管理：配置系统用户所属担任职务。</li><li>菜单管理：配置系统菜单，操作权限，按钮权限标识等。</li><li>角色管理：角色菜单权限分配、设置角色按机构进行数据范围权限划分。</li><li>字典管理：对系统中经常使用的一些较为固定的数据进行维护。</li><li>参数管理：对系统动态配置常用参数。</li><li>通知公告：系统通知公告信息发布维护。</li><li>操作日志：系统正常操作日志记录和查询；系统异常信息日志记录和查询。</li><li>登录日志：系统登录日志记录查询包含登录异常。</li><li>在线用户：当前系统中活跃用户状态监控。</li><li>定时任务：在线（添加、修改、删除) 任务调度包含执行结果日志。</li><li>代码生成：前后端代码的生成（java、html、xml、sql）支持 CRUD 下载 。</li><li>系统接口：根据业务代码自动生成相关的 api 接口文档。</li><li>服务监控：监视当前系统 CPU、内存、磁盘、堆栈等相关信息。</li><li>缓存监控：对系统的缓存信息查询，命令统计等。</li><li>在线构建器：拖动表单元素生成相应的 HTML 代码。</li><li>连接池监视：监视当前系统数据库连接池状态，可进行分析 SQL 找出系统性能瓶颈。</li></ol><h2>在线体验</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">演示地址：<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fvue.ruoyi.vip%2F" target="_blank">http://vue.ruoyi.vip</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">文档地址：<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fdoc.ruoyi.vip%2F" target="_blank">http://doc.ruoyi.vip</a></p><h2>演示图</h2><table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:1px; border:none; box-sizing:border-box; color:#444444; display:block; font-family:-apple-system,BlinkMacSystemFont,&quot;Apple Color Emoji&quot;,&quot;Segoe UI Emoji&quot;,&quot;Segoe UI Symbol&quot;,&quot;Segoe UI&quot;,&quot;PingFang SC&quot;,&quot;Hiragino Sans GB&quot;,&quot;Microsoft YaHei&quot;,&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:14px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; line-height:inherit; margin:0px; max-width:100%; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-indent:0px; text-transform:none; white-space:normal; widows:2; width:776px; word-break:keep-all; word-spacing:0px"><tbody><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px"><img src="https://oscimg.oschina.net/oscnet/cd1f90be5f2684f4560c9519c0f2a232ee8.jpg" referrerpolicy="no-referrer"></td><td style="border-color:#dddddd; border-style:solid; border-width:1px"><img src="https://oscimg.oschina.net/oscnet/1cbcf0e6f257c7d3a063c0e3f2ff989e4b3.jpg" referrerpolicy="no-referrer"></td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px"><img src="https://oscimg.oschina.net/oscnet/up-8074972883b5ba0622e13246738ebba237a.png" referrerpolicy="no-referrer"></td><td style="border-color:#dddddd; border-style:solid; border-width:1px"><img src="https://oscimg.oschina.net/oscnet/up-9f88719cdfca9af2e58b352a20e23d43b12.png" referrerpolicy="no-referrer"></td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px"><img src="https://oscimg.oschina.net/oscnet/up-39bf2584ec3a529b0d5a3b70d15c9b37646.png" referrerpolicy="no-referrer"></td><td style="border-color:#dddddd; border-style:solid; border-width:1px"><img src="https://oscimg.oschina.net/oscnet/up-936ec82d1f4872e1bc980927654b6007307.png" referrerpolicy="no-referrer"></td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px"><img src="https://oscimg.oschina.net/oscnet/up-b2d62ceb95d2dd9b3fbe157bb70d26001e9.png" referrerpolicy="no-referrer"></td><td style="border-color:#dddddd; border-style:solid; border-width:1px"><img src="https://oscimg.oschina.net/oscnet/up-d67451d308b7a79ad6819723396f7c3d77a.png" referrerpolicy="no-referrer"></td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px"><img src="https://oscimg.oschina.net/oscnet/5e8c387724954459291aafd5eb52b456f53.jpg" referrerpolicy="no-referrer"></td><td style="border-color:#dddddd; border-style:solid; border-width:1px"><img src="https://oscimg.oschina.net/oscnet/644e78da53c2e92a95dfda4f76e6d117c4b.jpg" referrerpolicy="no-referrer"></td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px"><img src="https://oscimg.oschina.net/oscnet/up-8370a0d02977eebf6dbf854c8450293c937.png" referrerpolicy="no-referrer"></td><td style="border-color:#dddddd; border-style:solid; border-width:1px"><img src="https://oscimg.oschina.net/oscnet/up-49003ed83f60f633e7153609a53a2b644f7.png" referrerpolicy="no-referrer"></td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px"><img src="https://oscimg.oschina.net/oscnet/up-d4fe726319ece268d4746602c39cffc0621.png" referrerpolicy="no-referrer"></td><td style="border-color:#dddddd; border-style:solid; border-width:1px"><img src="https://oscimg.oschina.net/oscnet/up-c195234bbcd30be6927f037a6755e6ab69c.png" referrerpolicy="no-referrer"></td></tr></tbody></table></div>
                                    ]]>
            </description>
            <pubDate>Fri, 08 Dec 2023 01:02:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/270027</guid>
            <link>https://www.oschina.net/news/270027</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Dante Cloud 3.2.0.0 发布，首个适配 Spring Boot 3.2 版本及经验分享]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><img height="1500" src="https://oscimg.oschina.net/oscnet/up-5d0c58fa43378848b2cd8dd29e3e1eb4a62.png" width="2000" referrerpolicy="no-referrer"></p><p style="color:black; margin-left:0; margin-right:0"><strong>Dante Cloud</strong> (但丁，原 Eurynome Cloud) 是一款企业级微服务架构和服务能力开发平台，是采用领域驱动模型 (DDD) 设计思想的、全面拥抱 <strong>Spring Authorization Server</strong> 的、基于 <strong>OAuth2.1</strong> 协议的、支持智能电视、IoT 等物联网设备认证的微服务架构。基于 <strong>Spring Authorization Server</strong> 1.2.0、<strong>Spring Boot</strong> 3.2.0、<strong>Spring Cloud</strong> 2023.0.0、<strong>Spring Cloud Tencent</strong> 1.12.4-2022.0.4、<strong>Spring Cloud Alibaba</strong> 2022.0.0.0、<strong>Nacos</strong> 2.3.0 等主流技术栈开发的多租户系统，遵循 SpringBoot 编程思想，高度模块化和可配置化。具备服务发现、配置、熔断、限流、降级、监控、多级缓存、分布式事务、工作流等功能。</p><p style="color:black; margin-left:0; margin-right:0"><strong>定位</strong></p><ul><li><p>构建成熟的、完善的、全面的，基于 OAuth2.1 的、前后端分离的微服务架构解决方案。</p></li><li><p>面向企业级应用和互联网应用设计开发，既兼顾传统项目的微服务化，又满足互联网应用开发建设、快速迭代的使用需求。</p></li><li><p>平台架构使用微服务领域及周边相关的各类新兴技术或主流技术进行建设，是帮助快速跨越架构技术选型、研究探索阶段的利器。</p></li><li><p>代码简洁规范、结构合理清晰，是新技术开发应用的典型的、综合性案例，助力开发人员对新兴技术的学习和掌握。</p></li></ul><h2><strong>[1] 软件信息</strong><span></span></h2><ul><li>软件组成 
  <ul><li><p>核心组件：https://gitee.com/herodotus/dante-engine（已上传中央库）</p></li><li><p>后端工程：https://gitee.com/dromara/dante-cloud</p></li><li><p>前端工程：https://gitee.com/herodotus/dante-cloud-ui</p></li></ul></li><li>软件生态 
  <ul><li><p>Dante Cloud Athena（Dante Cloud 单体版）：https://gitee.com/herodotus/dante-cloud-athena</p></li><li><p>Dante OSS （像 JPA 一样操作 OSS）：https://gitee.com/herodotus/dante-oss</p></li></ul></li><li>软件文档 
  <ul><li><p>官方文档：https://www.herodotus.cn</p></li><li>技术手册： 
    <ul><li><p>《Dante Cloud 及相关知识学习方法和学习路径的建议》</p></li><li><p>《OAuth 2 中的 Scope 与 Role 深度解析》</p></li><li><p>《Spring Boot 3 之自动配置与注入顺序控制》</p></li><li><p>《Spring Cloud 之 Session 共享及一致性处理》</p></li><li><p>《OAuth 2 中的鉴权和动态接口鉴权》</p></li><li><p>更多详情参见：https://www.herodotus.cn/cookbook/</p></li></ul></li></ul></li></ul><h2><strong>[2] 经验分享</strong><span></span></h2><p style="color:black; margin-left:0; margin-right:0">因 "虚拟线程" 这个新特性，而让 Java 21 备受关注。Spring Boot 3.2.0 作为 2023 年年终的大版本，对虚拟线程已经做到完全支持了，而让人分外期待。Dante Cloud 作为新技术和新特性的拥趸，也在第一时间对 Spring Boot 3.2.0 和 Spring Cloud 2023.0.0 等组件进行适配和尝鲜。</p><p style="color:black; margin-left:0; margin-right:0">相比适配 Spring Boot 3.0 来说，适配 Spring Boot 3.2 会遇到的问题已经少了很多，但也不是一帆风顺。现将适配过程中遇到的问题，分享出来，希望可以帮助感兴趣的朋友尽量避坑。</p><h3><span>组件版本</span></h3><ul><li><p>Spring Boot 3.2.0</p></li><li><p>Spring Cloud 2023.0.0</p></li><li><p>Spring Authrozation Server 1.2.0</p></li><li><p>Spring Cloud Tencent 1.12.4-2022.0.4</p></li><li><p>Spring Cloud Alibaba 2022.0.0.0</p></li><li><p>Nacos 2.3.0</p></li></ul><h3><span>问题解决</span></h3><ol><li><p>Spring Boot 和 Spring Cloud</p></li></ol><p style="color:black; margin-left:0; margin-right:0">微服务架构想要适配 Spring Boot 3.2 一定要注意版本对应。Spring Boot 3.2 已经绑定 Spring Cloud 版本为 2023.0.0，低于该版本代码无法运行。</p><ol><li><p>Spring Cloud Tencent</p></li></ol><p style="color:black; margin-left:0; margin-right:0">适配 Spring Boot 3.2 后，在使用 Spring Cloud Tencent 时，目前发现两个问题：</p><ul><li><p>Netty 最新的 4.1.101.Final 版本调用了一个 Grpc 组件不支持的方法，会导致 Spring Cloud Tencent 无法连接到 Server，运行时出错。这个问题本身并不是「适配」 问题，而是 Spring Boot 2.7.18、3.1.6 和 3.2.0 都依赖了最新版本的 Netty，升级就会出错。</p></li><li><p>因为 Spring Bean 和 Feign 代码存在变化，而 Spring Cloud Tencent 采用 uber.jar 打包方式，导致依赖当前版本会出现代码冲突。</p></li></ul><p style="color:black; margin-left:0; margin-right:0">解决办法：</p><ul><li><p>将 Netty 版本降至 4.1.100.Final，可解决无法 GRPC 无法连接 Server 问题。</p></li><li><p>去除对包 <code>spring-cloud-starter-tencent-all</code> 和 <code>spring-cloud-starter-tencent-polaris-circuitbreaker</code> 的依赖，即可运行但部分功能会不可用</p></li></ul><blockquote><p style="color:black; margin-left:0; margin-right:0">相关问题已经提交至 Spring Cloud Tencent 社区。https://github.com/Tencent/spring-cloud-tencent/issues/1210。该问题已经修复，grpc-java 也已经发布新版本。需要等待 Spring Cloud Tencent 新版本发布</p></blockquote><ol><li><p>Spring Cloud Alibaba</p></li></ol><p style="color:black; margin-left:0; margin-right:0">因为 Feign 底层核心接口存在变化，所以原来可以使用的 Sentinel 全局 Fallback 代码无法使用。而且当前环境，依赖 Sentinel 相关组件，会出现自定义 Feign Contract 配置失效，导致使用 SpringMVC 注解的或者自定义注解的 Feign 代码抛错。</p><p style="color:black; margin-left:0; margin-right:0">目前的临时解决办法就是去除 Sentinel 所有的依赖包。</p><ol><li><p>Spring Authrozation Server</p></li></ol><p style="color:black; margin-left:0; margin-right:0">Spring Authrozation Server 1.2.0 并没有太多的变化。但其中影响最大的变化，就是 issuer 地址不再允许包含 ip 和 port 以外的路径。如果包含了路径，启动时将会报错。https://github.com/spring-projects/spring-authorization-server/issues/1435 。目前临时的解决办法就手动修改代码，将限制取消。</p><h3><span>额外说明</span></h3><ol><li><p>Dante Cloud 3.2.0.0 虽然已经适配 Spring Boot 3.2 和 Spring Cloud 2023.0.0，但是因为部分功能并不可用，所以不建议用于生产。</p></li><li><p><strong>虽说是「适配」，但是核心目的是对升级 Spring Boot 3.2 和 Spring Cloud 2023.0.0 的工作量和会遇到的问题做评估，有了合理的评估才好决定是否要升级。所以望理解</strong></p></li><li><p>虽然前面的内容说的都是「问题」，但这并不是说组件本身有问题，而是放到当前 Dante Cloud 的环境中以及使用未进行版本适配遇到的小插曲，而且和具体自己代码的实现思路和逻辑有很大关系，不同的系统代码遇到问题也未必相同。</p></li></ol><p style="color:black; margin-left:0; margin-right:0">最后，还是建议等相关组件完成代码适配后再进行尝试。Spring Cloud Tencent 社区已经在进行响应，等 1.13 版本发布后就会开展 Spring Cloud 2023.0.0 版本的适配工作。https://github.com/Tencent/spring-cloud-tencent/issues/1209</p><h2><strong>[3] 本次更新内容</strong><span></span></h2><ul><li>【主要更新】 
  <ul><li><p>[升级] Spring Boot 版本升级至 3.2.0</p></li><li><p>[升级] Spring Cloud 版本升级至 2023.0.0</p></li><li><p>[升级] Spring Authorization Server 版本升级至 1.2.0</p></li><li><p>[升级] Spring Boot Admin 版本升级至 3.1.8</p></li><li><p>[升级] Nacos 版本升级至 2.3.0</p></li><li><p>[升级] Nacos Docker 镜像，版本升级至 2.3.0</p></li><li>[优化] jetcache 的问题修复及优化。（PR by Kaiser_Li） 
    <ol><li><p>优化计数缓存签章，增加 maxTimes 作为默认值，简化了 counting 方法，一般情况下只需调用 counting(key) 即可</p></li><li><p>修复 AbstractCountStampManager 中 counting(String identity, int maxTimes) 调用报错的问题</p></li><li><p>优化 AbstractCountStampManager 中对次数的判断，大于 maxTimes 时都返回错误</p></li></ol></li></ul></li><li>【其它更新】 
  <ul><li><p>[新增] 新增 Spring Cloud Tencent 读取和使用本地缓存统一化配置。</p></li><li><p>[新增] Spring Cloud Tencent Polaris 配置导入包，方便环境搭建和配置</p></li><li><p>[新增] 新增 caffeine、jetcache、redis 缓存组件使用详细说明，文档路径：dante-engine/readme/plugins/cache/ 以及，各模块 Readme 说明（PR by Kaiser_Li）</p></li><li><p>[重构] 重构 RestTemplate 和 OpenFeign 底层 Engine 及负载均衡统一化配置。去除 Spring Boot 3.2 不再支持的 OkHttp3ClientHttpRequestFactory 相关配置，增加基于 JdkClient 的 RestTemplate 和 OpenFeign 统一配置。fix: #I8JNOK</p></li><li><p>[重构] 重构相关代码，适配 Spring Boot 3.2.0 fix: #I7W5C3</p></li><li><p>[重构] 重构相关代码，适配 Spring Cloud 2023.0.0-RC1 fix: #7W5C6</p></li><li><p>[重构] 重构 Spring Authorization Server 自定义 Provider 代码，适配最新的 Spring Authorization Server 1.2.0 版本。fix: #I7W5BY</p></li><li><p>[重构] 重构 Spring Authorization Server 配置代码，去除过时方法，适配最新代码。</p></li><li><p>[重构] 重构系统静态权限配置核心代码，统一配置信息出入口，规范调用 API 名称及使用方式。一次性构建解析列表，减少冗余的循环和临时创建 fix: #I8KL29</p></li><li><p>[重构] 重构自定义 ApplicationEvent 命名及使用方式。</p></li><li><p>[修复] 修复 Emqx 监控数据转 Influxdb2 的 Spring Integration 流程注入配置条件错误。</p></li><li><p>[修复] 修复 docker-compose 文件中，polaris 镜像名称不正确问题。</p></li><li><p>[修复] 调整 polaris docker-compose 默认端口，适配最新版本 Polarismesh Server。</p></li><li><p>[修复] 前端工程适配 Vite 5.0.0，修复 monorepo 模块编译时出现 「The CJS build of Vite's Node API is deprecated」 问题 fix: #I8HLU0</p></li><li><p>[修复] 清除 Docker Profile 环境下原有的 Native 配置，解决在 Docker Profile 环境下编译错误问题。fix: #I8ICSZ</p></li><li><p>[优化] 调整 Polaris 本地配置缓存目录，防止与新增配置导入包冲突和混淆</p></li><li><p>[优化] 优化各个服务中，Spring Cloud Tencent 相关配置，去除无用的或者与默认参数相同的配置。</p></li><li><p>[优化] 临时解决 Spring Authorization Server 1.2.0 不兼容问题，后续根据实际情况进行完善和修改。https://github.com/spring-projects/spring-authorization-server/issues/1435</p></li><li><p>[优化] 删除 dependencies 中重复的或无用的版本控制配置，统一使用 Spring Boot Dependencies 控制依赖版本</p></li><li><p>[优化] 前端工程支持 ES 模块代码的编译生成，以及 ES 模块的加载。fix: #I8HLVI</p></li><li><p>[优化] 去除所有 Native 相关 pom 配置，待 Spring Boot 后续版本统一进行 Native 处理。</p></li><li><p>[优化] 优化 message-sdk-mqtt 模块代码，明确入站、出站以及通道相关代码。增加系统统一通道定义类，便于后续其它模块集成使用。 fix: #I8IPWG</p></li><li><p>[适配] 适配 Spring Cloud Alibaba 生态组件。临时去除 Sentinel 相关组件依赖和代码，解决在 Spring Cloud 2023.0.0 环境下，依赖 Sentinel 会引起 Feign 契约配置失效而导致的服务无法启动问题。</p></li><li><p>[适配] 代码适配 Hutool 6.0.0-M8</p></li><li><p>[适配] Apache Maven 适配至 3.9.6</p></li><li><p>[升级] minio docker 镜像版本升级至 RELEASE.2023-12-06T09-09-22Z</p></li></ul></li><li>【依赖更新】 
  <ul><li><p>[升级] aws-java-sdk-s3 版本升级至 1.12.606</p></li><li><p>[升级] alipay-sdk-java 版本升级至 4.38.149.ALL</p></li><li><p>[升级] bcprov-jdk15to18 版本升级至 1.77</p></li><li><p>[升级] bcprov-jdk18on 版本升级至 1.77</p></li><li><p>[升级] wxjava 版本升级至 4.5.7.B</p></li><li><p>[升级] com.baidu.aip 版本升级至 4.16.17</p></li><li><p>[升级] minio 版本升级至 8.5.7</p></li><li><p>[升级] hutool 版本升级至 6.0.0-M8</p></li><li><p>[升级] mybatis-plus 版本升级至 3.5.4.1</p></li><li><p>[升级] mybatis 版本升级至 3.5.14</p></li><li><p>[升级] sqlite-jdbc 版本升级至 3.44.1.0</p></li><li><p>[升级] springdoc 版本升级至 2.3.0</p></li><li><p>[升级] transmittable-thread-local 版本升级至 2.14.4</p></li><li><p>[升级] fastjson2 版本升级至 2.0.43</p></li><li><p>[升级] commons-io 版本升级至 2.15.1</p></li><li><p>[升级] JustAuth 版本升级至 1.16.6</p></li><li><p>[升级] quasar webjars 版本升级至 2.14.0</p></li><li><p>[升级] vue webjars 版本升级至 3.3.9</p></li><li><p>[升级] redisson 版本升级至 3.25.0</p></li><li><p>[升级] influxdb-client 版本升级至 6.11.0</p></li></ul></li></ul><h2><strong>[4] Dante Cloud 特性</strong><span></span></h2><h3><span>1. 核心基础依赖便捷切换</span></h3><ul><li><p>新增 <code>Spring Cloud Tencent</code> 和 <code>Spring Cloud</code> 原生微服务全家桶等两种基础设施支持。</p></li><li><p>新增 <code>Spring Cloud Alibaba</code>、<code>Spring Cloud Tencent</code> 和 <code>Spring Cloud</code> 原生微服务全家桶三种基础设值切换能力，可以以相对便捷的方式切换使用 Alibaba、Tencent、Spring 等基础设施环境。可根据自身实际需求选择，不再局限于只能在某一种基础设施环境中运行。</p></li></ul><h3><span>2. <code>Spring Authorization Server</code> 全特性支持及扩展</span></h3><ul><li><p>基于 <code>Spring Authorization Server</code> 和 <code>Spring Data JPA</code> 实现多租户系统架构， 支持 Database 和 Schema 两种模式。</p></li><li><p>基于 <code>Spring Data JPA</code>，重新构建 <code>Spring Authorization Server</code> 基础数据存储代码，替代原有 JDBC 数据访问方式，破除 <code>Spring Authorization Server</code> 原有数据存储局限，扩展为更符合实际应用的方式和设计。</p></li><li><p>基于 <code>Spring Authorization Server</code>，在 OAuth 2.1 规范基础之上，增加自定义 <code>Resource Ownership Password</code> (密码) 认证模式，以兼容现有基于 OAuth 2 规范的、前后端分离的应用，支持 <code>Refresh Token</code> 的使用。</p></li><li><p>基于 <code>Spring Authorization Server</code>，在 OAuth 2.1 规范基础之上，增加自定义 <code>Social Credentials</code> (社会化登录) 认证模式，支持手机短信验证码、微信小程序、基于 <code>JustAuth</code> 的第三方应用登录， 支持 <code>Refresh Token</code> 的使用。</p></li><li><p>扩展 <code>Spring Authorization Server</code> 默认的 <code>Client Credentials</code> 模式，实现真正的使用 Scope 权限对接口进行验证。 增加客户端 Scope 的权限配置功能，并与已有的用户权限体系解耦</p></li><li><p>支持 <code>Spring Authorization Server</code><code>Authorization Code PKCE</code> 认证模式</p></li><li><p>在 <code>Spring Authorization Server</code> 的标准的 <code>JWT Token</code> 加密校验方式外，支持基于自定义证书的 <code>JWT Token</code> 加密校验方式，可通过配置动态修改。</p></li><li><p>支持 <code>Opaque Token</code> (不透明令牌) 格式及校验方式，降低 <code>JWT Token</code> 被捕获解析的风险。可通过修改配置参数，设置默认 Token 格式是采用 <code>Opaque Token</code> 格式还是 <code>JWT Token</code> 格式。</p></li><li><p>全面支持 <code>OpenID Connect</code> (OIDC) 协议，系统使用时可根据使用需求，通过前端开关配置，快速切换 OIDC 模式和传统 OAuth2 模式</p></li><li><p>深度扩展 <code>Authorization Code</code>、<code>Resource Ownership Password</code>、<code>Social Credentials</code> 几种模式，全面融合 <code>IdToken</code>、<code>Opaque Token</code>、<code>JWT Token</code> 与现有权限体系，同时提供 <code>IdToken</code> 和，自定义 Token 扩展两种无须二次请求的用户信息传递方式，减少用户信息的频繁请求。</p></li><li><p>自定义 <code>Spring Authorization Server</code> 授权码模式登录认证页面和授权确认页面，授权码模式登录采用数据加密传输。支持多种验证码类型，暂不支持行为验证码。</p></li><li><p>新增基于 <code>Spring Authorization Server</code> 的、支持智能电视、IoT 等物联网设备认证模式</p></li><li><p>无须在代码中配置 <code>Spring Security</code> 权限注解以及权限方法，即可实现接口鉴权以及权限的动态修改。采用分布式鉴权方案，规避 Gateway 统一鉴权的压力以及重复鉴权问题</p></li><li><p>OAuth2 UserDetails 核心数据支持直连数据库获取和 Feign 远程调用两种模式。OAuth2 直连数据库模式性能更优，Feign 访问远程调用可扩展性更强。可通过配置动态修改采用策略方式。</p></li></ul><h3><span>3. 全体系化应用和开发特性集成</span></h3><ul><li><p>微服务架构全体系 Session 共享，实现 Spring Authorization Server、多实例服务、WebSocket、自定义 Session 以及大前端 Session 的统一。<code>微服务架构下的 Session 可以选择不用，但是不能没有</code>。</p></li><li><p>混合国密 <code>SM2</code> (非对称) 和 <code>SM4</code> (对称加密) 算法，实现基于数字信封技术的秘钥动态生成加密传输。利用「一人一码机制」，实现前后端数据进行动态加密传输与。Spring Authorization Server OAuth 2.1 授权模式深度融合，构建统一体系的数据传输加密。</p></li><li><p>全面整合 <code>@PreAuthorize</code> 注解权限与 <code>URL</code> 权限，通过后端动态配置，无须在代码中配置 <code>Spring Security</code> 权限注解以及权限方法，可实现接口鉴权以及权限的统一管理和动态修改</p></li><li><p>融合 Spring Cloud Stream 和 WebSocket，以优雅的方式实现 WebSocket 服务多实例环境下，点对点、广播消息跨实例推送，在线用户实时统计，完美支持 WebSocket 集群化应用。</p></li><li><p>借鉴 JPA 标准化设计思想，提取和抽象 OSS 标准化操作，形成统一的 Java OSS API 规范。封装可操作任意厂商的、统一的 REST API，构建定义统一、动态实现的应用模式（类似于 Hibernate 是 JPA 的一种实现，Hibernate 以 Dialect 方式支持不同的数据库一样），在不修改代码的情况下通过修改配置实现 OSS 的无缝切换和迁移</p></li><li><p>自研基于 <code>JetCache</code> 分布式两级缓存，完美实现 JPA Hibernate 二级缓存，支持各类查询数据缓存以及 JPA <code>@ManyToMany</code>， <code>@ManyToOne</code>等关联查询。完美解决 Spring Cache 仅使用本地缓存、创建 Key 繁琐和分页数据无法更新的问题。支持多实例服务本地缓存和远程缓存数据同步，同时支持 Mybatis Plus 二级缓存</p></li><li><p>平台统一错误处理，支持自定义错误码体系，有效集成 <code>OAuth2</code>、<code>Spring Validation</code> 等多方错误体系并有机整合 HTTP 状态码。采用 Customizer 模式，采用错误码自动计算和创建模式，支持代码模块级错误码灵活定义扩展。响应结果更加多样灵活，反馈结果也更加人性化，便于理解和定位问题。</p></li><li><p>全体系 OkHttp 、HttpClient 统一化集成，实现 OkHttp 、HttpClient 与 RestTemplate 、Openfeign 一体化融合。统一使用 Feign 配置参数，对 OkHttp 、HttpClient 进行参数设定，可策略化选择设置使用 OkHttp 或 HttpClient 作为 RestTemplate 、Openfeign 统一的基础 HttpClient</p></li></ul><h3><span>4. 采用 <code>pnpm monorepo</code> 重构前端</span></h3><ul><li><p>未使用任何流行开源模版，使用全新技术栈，完全纯"手写"全新前端工程。</p></li><li><p>借鉴参考流行开源版本的使用和设计，新版前端界面风格和操作习惯尽量与当前流行方式统一。</p></li><li><p>充份使用 Typescript 语言特性，解决大量类型校验问题，尽可能规避 "any" 式的 Typescript 编程语言使用方式。</p></li><li><p>充份使用 Composition Api 和 Hooks 等 Vue3 框架新版特性进行代码编写。</p></li><li><p>充份利用 Component、Hooks 以及 Typescript 面向对象等特性，抽取通用组件和代码，尽可能降低工程重复代码。</p></li><li><p>对较多 Quasar 基础组件和应用功能组件进行封装，以方便代码的统一修改维护和开发使用。</p></li><li><p>对生产模式下，对基于 Vite3 的工程打包进行深度性能优化。</p></li><li><p>提供以 docker-compose 方式，对工程生产代码进行容器化打包和部署。</p></li><li><p>该版本基于 pnpm，采用 monorepo 模式对前端工程进行重构。构建 monorepo 版本前端，是为扩展更多功能、增加应用级功能做铺垫</p></li><li><p>抽取 utils、components、apis、bpmn-designer 等相关代码，形成共享模块。</p></li><li><p>共享模块已进行优化配置，可编译成独立的组件，单独以组件形式进行发布。</p></li><li><p>代码以共享模块的方式进行单独维护开发，降低现有工程代码复杂度，便于后续功能的扩展和代码的复用。</p></li><li><p><strong>使用极少的 CSS 样式、高度的模块化构建，对后端人员开发前端非常友好。</strong></p></li></ul><hr><p style="color:black; margin-left:0; margin-right:0"><strong>欢迎 Star 一波来支持我们！</strong></p><p style="color:black; margin-left:0; margin-right:0"><strong>Gitee</strong>：<a href="https://gitee.com/dromara/dante-cloud">https://gitee.com/dromara/dante-cloud</a><strong>Github</strong>：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdromara%2Fdante-cloud" target="_blank">https://github.com/dromara/dante-cloud</a></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 08 Dec 2023 00:51:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/270025</guid>
            <link>https://www.oschina.net/news/270025</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[私域管理平台，LinkWeChat V5.0.2 版本发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0"><span>LinkWeChat 是国内首个基于企业微信的开源 SCRM，在集成了企微强大的开放能力的基础上，进一步升级拓展灵活高效的客户运营能力及多元化精准营销能力，让客户与企业之间建立强链接，帮助企业提高客户运营效率，强化营销能力，拓展盈利空间，是企业私域流量管理与营销的综合解决方案，目前已经受到企业微信的官方推荐和国家级木兰开源社区进行孵化，同时也是国家工信部重点扶持项目，同时也获得 2022 年中国开源创新大赛二等奖。</span></p><p style="color:#333333; margin-left:0; margin-right:0"><strong>LinkWeChat V5.0.2 主要的升级内容如下：</strong></p><p style="color:#333333; margin-left:0; margin-right:0">1.员工活码新增 H5 链接与智能短链功能，与活码统计升级,我们新增了员工活码的 H5 链接与智能短链功能。您可以通过设置员工活码的跳转链接，将员工活码与您的网站、小程序或其他线上资源进行关联。同时，我们还对活码统计功能进行了升级，现在您可以更加方便地查看活码的使用情况，包括扫描次数、扫描人数等详细信息。<br> 2.客群活码新增 H5 链接与智能短链功能，与活码统计升级,与员工活码类似，我们也新增了客群活码的 H5 链接与智能短链功能。您可以通过设置客群活码的跳转链接，将客群活码与您的网站、小程序或其他线上资源进行关联。同时，我们也对客群活码统计功能进行了升级，现在您可以更加方便地查看客群活码的使用情况，包括扫描次数、扫描人数等详细信息。</p><p style="color:#333333; margin-left:0; margin-right:0">感谢您对我们产品的支持和信任，我们会继续努力，为您提供更好的产品和服务。</p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 08 Dec 2023 00:21:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/270024/linkwechat-5-0-2-released</guid>
            <link>https://www.oschina.net/news/270024/linkwechat-5-0-2-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[领域建模即微服务开发 | Wow 2.9.5 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>基于 DDD、EventSourcing 的现代响应式 CQRS 架构微服务开发框架</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FAhoo-Wang%2FWow%2Fblob%2Fmvp%2FLICENSE"><img alt="License" src="https://img.shields.io/badge/license-Apache%202-4EB1BA.svg" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FAhoo-Wang%2FWow%2Freleases"><img alt="GitHub release" src="https://img.shields.io/github/release/Ahoo-Wang/Wow.svg" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fapp.codacy.com%2Fgh%2FAhoo-Wang%2FWow%2Fdashboard%3Futm_source%3Dgh%26utm_medium%3Dreferral%26utm_content%3D%26utm_campaign%3DBadge_grade"><img alt="Codacy Badge" src="https://app.codacy.com/project/badge/Grade/cfc724df22db4f9387525258c8a59609" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fcodecov.io%2Fgh%2FAhoo-Wang%2FWow"><img alt="codecov" src="https://codecov.io/gh/Ahoo-Wang/Wow/branch/main/graph/badge.svg?token=uloJrLoQir" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FAhoo-Wang%2FWow"><img alt="Integration Test Status" src="https://github.com/Ahoo-Wang/Wow/actions/workflows/integration-test.yml/badge.svg" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FKotlinBy%2Fawesome-kotlin"><img alt="Awesome Kotlin Badge" src="https://kotlin.link/awesome-kotlin.svg" referrerpolicy="no-referrer"></a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><strong>领域驱动&nbsp;</strong><span>&nbsp;</span>|&nbsp;<span>&nbsp;</span><strong>事件驱动</strong><span>&nbsp;&nbsp;</span>|<span>&nbsp;&nbsp;</span><strong>测试驱动</strong><span>&nbsp;&nbsp;</span>|<span>&nbsp;&nbsp;</span><strong>声明式设计</strong><span>&nbsp;</span>｜<span>&nbsp;</span><strong>响应式编程</strong><span>&nbsp;</span>｜<span>&nbsp;</span><strong>命令查询职责分离</strong><span>&nbsp;</span>｜<span>&nbsp;</span><strong>事件溯源</strong></p><h2>🎉 更新内容 🎉</h2><ul><li>特性: 新增<span>&nbsp;</span><code>sortedByOrder</code><span>&nbsp;</span>扩展函数，增强基于<span>&nbsp;</span><code>@Order</code><span>&nbsp;</span>注解的排序算法</li><li>依赖: 升级<span>&nbsp;</span><code>me.ahoo.cosid:cosid-bom</code><span>&nbsp;</span>版本<span>&nbsp;</span><code>v2.6.2</code></li><li>依赖: 升级<span>&nbsp;</span><code>springdoc</code><span>&nbsp;</span>版本<span>&nbsp;</span><code>v2.3.0</code></li><li>依赖: 升级<span>&nbsp;</span><code>org.gradle.test-retry</code><span>&nbsp;</span>版本<span>&nbsp;</span><code>v1.5.8</code></li><li>依赖: 升级<span>&nbsp;</span><code>dragonwell-registry.cn-hangzhou.cr.aliyuncs.com/dragonwell/dragonwell</code><span>&nbsp;</span>版本<span>&nbsp;</span><code>21-ubuntu</code></li><li>特性: 优化命令校验异常消息</li></ul><h2>架构图</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-Architecture" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Architecture.svg" referrerpolicy="no-referrer"></p><h2>性能测试 (Example)</h2><ul><li>测试代码：<a href="https://gitee.com/AhooWang/Wow/blob/main/example">Example</a></li><li>测试场景：加入购物车、下单</li><li>命令发送等待模式（<code>WaitStrategy</code>）：<code>SENT</code>、<code>PROCESSED</code></li></ul><h3>部署</h3><ul><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/perf/redis.yaml">Redis</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/perf/mongo.yaml">MongoDB</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/perf/kafka.yaml">Kafka</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/perf/config/mongo_kafka_redis.yaml">Application-Config</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/perf/deployment.yaml">Application-Deployment</a></li></ul><h3>测试报告</h3><h4>加入购物车</h4><ul><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/request/AddCartItem.http">请求</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/document/example/perf/Example.Cart.Add@SENT.pdf">详细报告 (PDF)-SENT</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/document/example/perf/Example.Cart.Add@PROCESSED.pdf">详细报告 (PDF)-PROCESSED</a></li></ul><blockquote><p style="margin-left:0; margin-right:0"><code>WaitStrategy</code>:<span>&nbsp;</span><code>SENT</code></p></blockquote><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="SENT" src="https://gitee.com/AhooWang/Wow/raw/main/document/example/perf/Example.Cart.Add@SENT.png" referrerpolicy="no-referrer"></p><blockquote><p style="margin-left:0; margin-right:0"><code>WaitStrategy</code>:<span>&nbsp;</span><code>PROCESSED</code></p></blockquote><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="PROCESSED" src="https://gitee.com/AhooWang/Wow/raw/main/document/example/perf/Example.Cart.Add@PROCESSED.png" referrerpolicy="no-referrer"></p><h4>下单</h4><ul><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/request/CreateOrder.http">请求</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/document/example/perf/Example.Order.Create@SENT.pdf">详细报告 (PDF)-SENT</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/document/example/perf/Example.Order.Create@PROCESSED.pdf">详细报告 (PDF)-PROCESSED</a></li></ul><blockquote><p style="margin-left:0; margin-right:0"><code>WaitStrategy</code>:<span>&nbsp;</span><code>SENT</code></p></blockquote><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="SENT" src="https://gitee.com/AhooWang/Wow/raw/main/document/example/perf/Example.Order.Create@SENT.png" referrerpolicy="no-referrer"></p><blockquote><p style="margin-left:0; margin-right:0"><code>WaitStrategy</code>:<span>&nbsp;</span><code>PROCESSED</code></p></blockquote><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="PROCESSED" src="https://gitee.com/AhooWang/Wow/raw/main/document/example/perf/Example.Order.Create@PROCESSED.png" referrerpolicy="no-referrer"></p><h2>事件源</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-EventSourcing" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/EventSourcing.svg" referrerpolicy="no-referrer"></p><h2>可观测性</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-Observability" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/OpenTelemetry.png" referrerpolicy="no-referrer"></p><h2>OpenAPI (Spring WebFlux 集成)</h2><blockquote><p style="margin-left:0; margin-right:0">自动注册<span>&nbsp;</span><strong>命令</strong><span>&nbsp;</span>路由处理函数 (<code>HandlerFunction</code>) ，开发人员仅需编写领域模型，即可完成服务开发。</p></blockquote><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-Spring-WebFlux-Integration" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/OpenAPI-Swagger.png" referrerpolicy="no-referrer"></p><h2>测试套件：80%+ 的测试覆盖率轻而易举</h2><blockquote><p style="margin-left:0; margin-right:0">Given -&gt; When -&gt; Expect .</p></blockquote><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-CI-Flow" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/CI-Flow.png" referrerpolicy="no-referrer"></p><h2>前置条件</h2><ul><li>理解<span>&nbsp;</span><strong>领域驱动设计</strong>：《实现领域驱动设计》、《领域驱动设计：软件核心复杂性应对之道》</li><li>理解<span>&nbsp;</span><strong>命令查询职责分离</strong>（CQRS）</li><li>理解<span>&nbsp;</span><strong>事件源架构</strong></li><li>理解<span>&nbsp;</span><strong>响应式编程</strong></li></ul><h2>特性</h2><ul><li><span>&nbsp;</span>Aggregate Modeling 
  <ul><li><span>&nbsp;</span>Single Class</li><li><span>&nbsp;</span>Inheritance Pattern</li><li><span>&nbsp;</span>Aggregation Pattern</li></ul></li><li><span>&nbsp;</span>Saga Modeling 
  <ul><li><span>&nbsp;</span><code>StatelessSaga</code></li></ul></li><li><span>&nbsp;</span>Test Suite 
  <ul><li><span>&nbsp;</span>兼容性测试规范（TCK）</li><li><span>&nbsp;</span><code>AggregateVerifier</code></li><li><span>&nbsp;</span><code>SagaVerifier</code></li></ul></li><li><span>&nbsp;</span>EventSourcing 
  <ul><li>EventStore 
    <ul><li><span>&nbsp;</span>MongoDB (Recommend)</li><li><span>&nbsp;</span>R2dbc 
      <ul><li><span>&nbsp;</span>Database Sharding</li><li><span>&nbsp;</span>Table Sharding</li></ul></li><li><span>&nbsp;</span>Redis</li></ul></li><li>Snapshot 
    <ul><li><span>&nbsp;</span>MongoDB</li><li><span>&nbsp;</span>R2dbc 
      <ul><li><span>&nbsp;</span>Database Sharding</li><li><span>&nbsp;</span>Table Sharding</li></ul></li><li><span>&nbsp;</span>ElasticSearch</li><li><span>&nbsp;</span>Redis (Recommend)</li></ul></li></ul></li><li><span>&nbsp;</span>命令等待策略（<code>WaitStrategy</code>） 
  <ul><li><span>&nbsp;</span><code>SENT</code><span>&nbsp;</span>: 命令发送成功后发送完成信号</li><li><span>&nbsp;</span><code>PROCESSED</code><span>&nbsp;</span>: 命令处理完成后发送完成信号</li><li><span>&nbsp;</span><code>SNAPSHOT</code><span>&nbsp;</span>: 快照生成完成后发送完成信号</li><li><span>&nbsp;</span><code>PROJECTED</code><span>&nbsp;</span>: 命令产生的事件被投影后发送完成信号</li></ul></li><li><span>&nbsp;</span>CommandBus 
  <ul><li><span>&nbsp;</span><code>InMemoryCommandBus</code></li><li><span>&nbsp;</span><code>KafkaCommandBus</code><span>&nbsp;</span>(Recommend)</li><li><span>&nbsp;</span><code>RedisCommandBus</code></li><li><span>&nbsp;</span><code>LocalFirstCommandBus</code></li></ul></li><li><span>&nbsp;</span>DomainEventBus 
  <ul><li><span>&nbsp;</span><code>InMemoryDomainEventBus</code></li><li><span>&nbsp;</span><code>KafkaDomainEventBus</code><span>&nbsp;</span>(Recommend)</li><li><span>&nbsp;</span><code>RedisDomainEventBus</code></li><li><span>&nbsp;</span><code>LocalFirstDomainEventBus</code></li></ul></li><li><span>&nbsp;</span>StateEventBus 
  <ul><li><span>&nbsp;</span><code>InMemoryStateEventBus</code></li><li><span>&nbsp;</span><code>KafkaStateEventBus</code><span>&nbsp;</span>(Recommend)</li><li><span>&nbsp;</span><code>RedisStateEventBus</code></li><li><span>&nbsp;</span><code>LocalFirstStateEventBus</code></li></ul></li><li><span>&nbsp;</span>Spring 集成 
  <ul><li><span>&nbsp;</span>Spring Boot Auto Configuration</li><li><span>&nbsp;</span>Automatically register<span>&nbsp;</span><code>CommandAggregate</code><span>&nbsp;</span>to<span>&nbsp;</span><code>RouterFunction</code></li></ul></li><li><span>&nbsp;</span>可观测性 
  <ul><li><span>&nbsp;</span>OpenTelemetry</li></ul></li><li><span>&nbsp;</span>OpenAPI</li><li><span>&nbsp;</span><code>WowMetadata</code><span>&nbsp;</span>Generator 
  <ul><li><span>&nbsp;</span><code>wow-compiler</code></li></ul></li></ul><h2>Example</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/AhooWang/Wow/blob/main/example">Example</a></p><h2>单元测试套件</h2><h3>80%+ 的测试覆盖率轻而易举。</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Test Coverage" src="https://gitee.com/AhooWang/Wow/raw/main/document/example/example-domain-jococo.png" referrerpolicy="no-referrer"></p><blockquote><p style="margin-left:0; margin-right:0">Given -&gt; When -&gt; Expect .</p></blockquote><h3>Aggregate Unit Test (<code>AggregateVerifier</code>)</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/AhooWang/Wow/blob/main/example/example-domain/src/test/kotlin/me/ahoo/wow/example/domain/order/OrderTest.kt">Aggregate Test</a></p><pre><code><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">internal</span></span></span></span></span></span></span></span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">class</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span></span></span></span></span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">OrderTest</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span></span></span></span></span></span></span></span></span></span>{

    <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">private</span></span></span></span></span></span></span></span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span></span></span></span></span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">mockCreateOrder</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span>()</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>: VerifiedStage&lt;OrderState&gt; {
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span></span></span></span></span> tenantId = GlobalIdGenerator.generateAsString()
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span></span></span></span></span> customerId = GlobalIdGenerator.generateAsString()

        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span></span></span></span></span> orderItem = OrderItem(
            GlobalIdGenerator.generateAsString(),
            GlobalIdGenerator.generateAsString(),
            BigDecimal.valueOf(<span><span><span><span><span><span><span><span><span>10</span></span></span></span></span></span></span></span></span>),
            <span><span><span><span><span><span><span><span><span>10</span></span></span></span></span></span></span></span></span>,
        )
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span></span></span></span></span> orderItems = listOf(orderItem)
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span></span></span></span></span> inventoryService = <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">object</span></span></span></span></span></span></span></span></span> : InventoryService {
            <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">override</span></span></span></span></span></span></span></span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span></span></span></span></span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">getInventory</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span>(productId: </span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49">String</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span>)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>: Mono&lt;<span><span><span><span><span><span><span><span><span>Int</span></span></span></span></span></span></span></span></span>&gt; {
                <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">return</span></span></span></span></span></span></span></span></span> orderItems.filter { it.productId == productId }.map { it.quantity }.first().toMono()
            }
        }
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span></span></span></span></span> pricingService = <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">object</span></span></span></span></span></span></span></span></span> : PricingService {
            <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">override</span></span></span></span></span></span></span></span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span></span></span></span></span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">getProductPrice</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span>(productId: </span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49">String</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span>)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>: Mono&lt;BigDecimal&gt; {
                <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">return</span></span></span></span></span></span></span></span></span> orderItems.filter { it.productId == productId }.map { it.price }.first().toMono()
            }
        }
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">return</span></span></span></span></span></span></span></span></span> aggregateVerifier&lt;Order, OrderState&gt;(tenantId = tenantId)
            .inject(DefaultCreateOrderSpec(inventoryService, pricingService))
            .given()
            .`<span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">when</span></span></span></span></span></span></span></span></span>`(CreateOrder(customerId, orderItems, SHIPPING_ADDRESS, <span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5">false</span></span></span></span></span></span></span></span></span>))
            .expectEventCount(<span><span><span><span><span><span><span><span><span>1</span></span></span></span></span></span></span></span></span>)
            .expectEventType(OrderCreated::<span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">class</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span>.</span></span></span></span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">java</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span>)</span></span></span></span></span></span></span></span></span>
            .expectStateAggregate {
                assertThat(it.aggregateId.tenantId, equalTo(tenantId))
            }
            .expectState {
                assertThat(it.id, notNullValue())
                assertThat(it.customerId, equalTo(customerId))
                assertThat(it.address, equalTo(SHIPPING_ADDRESS))
                assertThat(it.items, equalTo(orderItems))
                assertThat(it.status, equalTo(OrderStatus.CREATED))
            }
            .verify()
    }

    <span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">/** * 创建订单 */</span></span></span></span></span></span></span></span></span><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">@Test</span></span></span></span></span></span></span></span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span></span></span></span></span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">createOrder</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span>()</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> {
        mockCreateOrder()
    }

    <span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">@Test</span></span></span></span></span></span></span></span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span></span></span></span></span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">createOrderGivenEmptyItems</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span>()</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> {
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span></span></span></span></span> customerId = GlobalIdGenerator.generateAsString()
        aggregateVerifier&lt;Order, OrderState&gt;()
            .inject(mockk&lt;CreateOrderSpec&gt;(), <span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62">"createOrderSpec"</span></span></span></span></span></span></span></span></span>)
            .given()
            .`<span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">when</span></span></span></span></span></span></span></span></span>`(CreateOrder(customerId, listOf(), SHIPPING_ADDRESS, <span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5">false</span></span></span></span></span></span></span></span></span>))
            .expectErrorType(IllegalArgumentException::<span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">class</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span>.</span></span></span></span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">java</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span>)</span></span></span></span></span></span></span></span></span>
            .expectStateAggregate {
                <span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">/* * 该聚合对象处于未初始化状态，即该聚合未创建成功. */</span></span></span></span></span></span></span></span></span>
                assertThat(it.initialized, equalTo(<span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5">false</span></span></span></span></span></span></span></span></span>))
            }.verify()
    }

    <span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">/** * 创建订单-库存不足 */</span></span></span></span></span></span></span></span></span><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">@Test</span></span></span></span></span></span></span></span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span></span></span></span></span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">createOrderWhenInventoryShortage</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span>()</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> {
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span></span></span></span></span> customerId = GlobalIdGenerator.generateAsString()
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span></span></span></span></span> orderItem = OrderItem(
            GlobalIdGenerator.generateAsString(),
            GlobalIdGenerator.generateAsString(),
            BigDecimal.valueOf(<span><span><span><span><span><span><span><span><span>10</span></span></span></span></span></span></span></span></span>),
            <span><span><span><span><span><span><span><span><span>10</span></span></span></span></span></span></span></span></span>,
        )
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span></span></span></span></span> orderItems = listOf(orderItem)
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span></span></span></span></span> inventoryService = <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">object</span></span></span></span></span></span></span></span></span> : InventoryService {
            <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">override</span></span></span></span></span></span></span></span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span></span></span></span></span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">getInventory</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span>(productId: </span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49">String</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span>)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>: Mono&lt;<span><span><span><span><span><span><span><span><span>Int</span></span></span></span></span></span></span></span></span>&gt; {
                <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">return</span></span></span></span></span></span></span></span></span> orderItems.filter { it.productId == productId }
                    <span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">/* * 模拟库存不足 */</span></span></span></span></span></span></span></span></span>
                    .map { it.quantity - <span><span><span><span><span><span><span><span><span>1</span></span></span></span></span></span></span></span></span> }.first().toMono()
            }
        }
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span></span></span></span></span> pricingService = <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">object</span></span></span></span></span></span></span></span></span> : PricingService {
            <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">override</span></span></span></span></span></span></span></span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span></span></span></span></span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">getProductPrice</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span>(productId: </span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49">String</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span>)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>: Mono&lt;BigDecimal&gt; {
                <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">return</span></span></span></span></span></span></span></span></span> orderItems.filter { it.productId == productId }.map { it.price }.first().toMono()
            }
        }

        aggregateVerifier&lt;Order, OrderState&gt;()
            .inject(DefaultCreateOrderSpec(inventoryService, pricingService))
            .given()
            .`<span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">when</span></span></span></span></span></span></span></span></span>`(CreateOrder(customerId, orderItems, SHIPPING_ADDRESS, <span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5">false</span></span></span></span></span></span></span></span></span>))
            <span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">/* * 期望：库存不足异常. */</span></span></span></span></span></span></span></span></span>
            .expectErrorType(InventoryShortageException::<span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">class</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span>.</span></span></span></span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">java</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span>)</span></span></span></span></span></span></span></span></span>
            .expectStateAggregate {
                <span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">/* * 该聚合对象处于未初始化状态，即该聚合未创建成功. */</span></span></span></span></span></span></span></span></span>
                assertThat(it.initialized, equalTo(<span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5">false</span></span></span></span></span></span></span></span></span>))
            }.verify()
    }

    <span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">/** * 创建订单-下单价格与当前价格不一致 */</span></span></span></span></span></span></span></span></span><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">@Test</span></span></span></span></span></span></span></span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span></span></span></span></span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">createOrderWhenPriceInconsistency</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span>()</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> {
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span></span></span></span></span> customerId = GlobalIdGenerator.generateAsString()
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span></span></span></span></span> orderItem = OrderItem(
            GlobalIdGenerator.generateAsString(),
            GlobalIdGenerator.generateAsString(),
            BigDecimal.valueOf(<span><span><span><span><span><span><span><span><span>10</span></span></span></span></span></span></span></span></span>),
            <span><span><span><span><span><span><span><span><span>10</span></span></span></span></span></span></span></span></span>,
        )
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span></span></span></span></span> orderItems = listOf(orderItem)
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span></span></span></span></span> inventoryService = <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">object</span></span></span></span></span></span></span></span></span> : InventoryService {
            <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">override</span></span></span></span></span></span></span></span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span></span></span></span></span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">getInventory</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span>(productId: </span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49">String</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span>)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>: Mono&lt;<span><span><span><span><span><span><span><span><span>Int</span></span></span></span></span></span></span></span></span>&gt; {
                <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">return</span></span></span></span></span></span></span></span></span> orderItems.filter { it.productId == productId }.map { it.quantity }.first().toMono()
            }
        }
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span></span></span></span></span> pricingService = <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">object</span></span></span></span></span></span></span></span></span> : PricingService {
            <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">override</span></span></span></span></span></span></span></span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span></span></span></span></span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">getProductPrice</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span>(productId: </span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49">String</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span>)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>: Mono&lt;BigDecimal&gt; {
                <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">return</span></span></span></span></span></span></span></span></span> orderItems.filter { it.productId == productId }
                    <span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">/* * 模拟下单价格、商品定价不一致 */</span></span></span></span></span></span></span></span></span>
                    .map { it.price.plus(BigDecimal.valueOf(<span><span><span><span><span><span><span><span><span>1</span></span></span></span></span></span></span></span></span>)) }.first().toMono()
            }
        }
        aggregateVerifier&lt;Order, OrderState&gt;()
            .inject(DefaultCreateOrderSpec(inventoryService, pricingService))
            .given()
            .`<span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">when</span></span></span></span></span></span></span></span></span>`(CreateOrder(customerId, orderItems, SHIPPING_ADDRESS, <span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5">false</span></span></span></span></span></span></span></span></span>))
            <span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">/* * 期望：价格不一致异常. */</span></span></span></span></span></span></span></span></span>
            .expectErrorType(PriceInconsistencyException::<span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">class</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span>.</span></span></span></span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">java</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span>).</span></span></span></span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">verify</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>()
    }
}</code></pre><h3>Saga Unit Test (<code>SagaVerifier</code>)</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/AhooWang/Wow/blob/main/example/example-domain/src/test/kotlin/me/ahoo/wow/example/domain/cart/CartSagaTest.kt">Saga Test</a></p><pre><code><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">class</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span></span></span></span></span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">CartSagaTest</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span></span></span></span></span></span></span></span></span></span>{

    <span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">@Test</span></span></span></span></span></span></span></span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span></span></span></span></span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">onOrderCreated</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span>()</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> {
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span></span></span></span></span> orderItem = OrderItem(
            GlobalIdGenerator.generateAsString(),
            GlobalIdGenerator.generateAsString(),
            BigDecimal.valueOf(<span><span><span><span><span><span><span><span><span>10</span></span></span></span></span></span></span></span></span>),
            <span><span><span><span><span><span><span><span><span>10</span></span></span></span></span></span></span></span></span>,
        )
        sagaVerifier&lt;CartSaga&gt;()
            .`<span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">when</span></span></span></span></span></span></span></span></span>`(
                mockk&lt;OrderCreated&gt; {
                    every {
                        customerId
                    } returns <span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62">"customerId"</span></span></span></span></span></span></span></span></span>
                    every {
                        items
                    } returns listOf(orderItem)
                    every {
                        fromCart
                    } returns <span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5">true</span></span></span></span></span></span></span></span></span>
                },
            )
            .expectCommandBody&lt;RemoveCartItem&gt; {
                assertThat(it.id, equalTo(<span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62">"customerId"</span></span></span></span></span></span></span></span></span>))
                assertThat(it.productIds, hasSize(<span><span><span><span><span><span><span><span><span>1</span></span></span></span></span></span></span></span></span>))
                assertThat(it.productIds.first(), equalTo(orderItem.productId))
            }
            .verify()
    }
}</code></pre><h2>设计</h2><h3>聚合建模</h3><table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:0px; border:none; box-sizing:border-box; color:#40485b; display:block; font-family:-apple-system,&quot;system-ui&quot;,&quot;Segoe UI&quot;,Helvetica,Arial,&quot;Apple Color Emoji&quot;,&quot;Segoe UI Emoji&quot;,&quot;Segoe UI Symbol&quot;,&quot;Liberation Sans&quot;,&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,&quot;Hiragino Sans GB&quot;,&quot;Wenquanyi Micro Hei&quot;,&quot;WenQuanYi Zen Hei&quot;,&quot;ST Heiti&quot;,SimHei,SimSun,&quot;WenQuanYi Zen Hei Sharp&quot;,sans-serif; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; line-height:inherit; margin:0px 0px 16px; max-width:100%; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; word-break:initial; word-spacing:0px"><tbody><tr><th><strong>Single Class</strong></th><th><strong>Inheritance Pattern</strong></th><th><strong>Aggregation Pattern</strong></th></tr></tbody><tbody><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px; text-align:center"><img alt="Single Class - Modeling" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Modeling-Single-Class-Pattern.svg" referrerpolicy="no-referrer"></td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px; text-align:center"><img alt="Inheritance Pattern- Modeling" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Modeling-Inheritance-Pattern.svg" referrerpolicy="no-referrer"></td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px; text-align:center"><img alt="Aggregation Pattern- Modeling" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Modeling-Aggregation-Pattern.svg" referrerpolicy="no-referrer"></td></tr></tbody></table><h3>加载聚合</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Load Aggregate" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Load-Aggregate.svg" referrerpolicy="no-referrer"></p><h3>聚合状态流</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Aggregate State Flow" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Aggregate-State-Flow.svg" referrerpolicy="no-referrer"></p><h3>发送命令</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Send Command" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Send-Command.svg" referrerpolicy="no-referrer"></p><h3>命令与事件流</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Command And Event Flow" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Command-Event-Flow.svg" referrerpolicy="no-referrer"></p><h3>Saga - OrderProcessManager (Demo)</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="OrderProcessManager" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Saga-Order.svg" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 07 Dec 2023 23:29:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/270022</guid>
            <link>https://www.oschina.net/news/270022</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Golang 正式发布了 Go 1.21.5 版本]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#2d2d2d; margin-left:0; margin-right:0; text-align:start">2023 年 12 月 5 日 Golang 正式发布了 Go 1.21.5 版本 ，该版本在上版本基础上进行了优化，修改若干些小问题，主要涉及修复的点，如下：</p><p style="color:#2d2d2d; margin-left:0; margin-right:0; text-align:start">go1.21.5 (released 2023-12-05) includes security fixes to the go command, and the net/http and path/filepath packages, as well as bug fixes to the compiler, the go command, the runtime, and the crypto/rand, net, os, and syscall packages. See the<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgolang%2Fgo%2Fissues%3Fq%3Dmilestone%253AGo1.21.5%2Blabel%253ACherryPickApproved" target="_blank">Go 1.21.5 milestone<span>&nbsp;</span></a>on our issue tracker for details.</p><p style="color:#2d2d2d; margin-left:0; margin-right:0; text-align:start">go1.21.5（2023-12-05 发布）包括对 go 命令、net/http 和 path/filepath 包的安全修复，以及对编译器、go 命令、运行时和 crypto/rand、net、os 和 syscall 包的错误修复。有关详细信息，请参阅我们的问题跟踪器上的<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgolang%2Fgo%2Fissues%3Fq%3Dmilestone%253AGo1.21.5%2Blabel%253ACherryPickApproved" target="_blank">Go 1.21.5 里程碑</a>。</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 07 Dec 2023 23:16:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/270021</guid>
            <link>https://www.oschina.net/news/270021</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[ModStartBlog v8.7.0 LayUI 全新升级，文件顺序选择]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#34495e; margin-left:.5em; margin-right:.5em; text-align:left">ModStart 是一个基于 Laravel 模块化极速开发框架。模块市场拥有丰富的功能应用，支持后台一键快速安装，让开发者能快的实现业务功能开发。</p><p style="color:#34495e; margin-left:.5em; margin-right:.5em; text-align:left">系统完全开源，基于 Apache 2.0 开源协议。</p><p style="color:#34495e; margin-left:.5em; margin-right:.5em; text-align:left"><img alt="系统演示" src="https://ms-assets.modstart.com/data/image/2022/05/30/7459_smgt_9533.jpg" referrerpolicy="no-referrer"></p><h2>功能特性</h2><ul><li><p style="margin-left:.5em; margin-right:.5em">丰富的模块市场，后台一键快速安装</p></li><li><p style="margin-left:.5em; margin-right:.5em">会员模块通用且完整，支持完整的 API 调用</p></li><li><p style="margin-left:.5em; margin-right:.5em">大文件分片上传，进度条显示，已上传文件管理</p></li><li><p style="margin-left:.5em; margin-right:.5em">强大的模块扩展功能，所有模块可以无缝集成，支持在线安装、卸载模块</p></li><li><p style="margin-left:.5em; margin-right:.5em">完善的开发助手，实现模块、主题的的一键创建</p></li><li><p style="margin-left:.5em; margin-right:.5em">完善的后台权限管理，支持基于 RBAC 的权限管理系统</p></li><li><p style="margin-left:.5em; margin-right:.5em">后台管理支持使用手机、平板、PC，无论何时何地都可方便管理</p></li><li><p style="margin-left:.5em; margin-right:.5em">第三方登录（QQ、微信、微博、支付宝、微信小程序）</p></li><li><p style="margin-left:.5em; margin-right:.5em">第三方支付支持（微信、支付宝、支付宝当面付、微信扫码、微信小程序）</p></li><li><p style="margin-left:.5em; margin-right:.5em">第三方云存储支持，支持云储存分片上传（阿里云、百度云、华为云、腾讯云、FTP、七牛云、UCloud、又拍云）</p></li><li><p style="margin-left:.5em; margin-right:.5em">第三方短信支持（阿里云、腾讯云、华为云、百度云、253 云通讯、聚合、七牛云、融云、赛邮、UCloud、云片、网易云）</p></li></ul><h2>V8.7.0 版本更新</h2><p style="color:#34495e; margin-left:.5em; margin-right:.5em; text-align:left">2023 年 12 月 07 日 ModStartBlog Laravel9 发布 v8.7.0 版本，增加了以下 11 个特性：</p><ul><li><p style="margin-left:.5em; margin-right:.5em">[新功能] 文件上传管理页面支持图标显示，支持顺序选择</p></li><li><p style="margin-left:.5em; margin-right:.5em">[新功能] 有移动端链接时，后台链接选择自动识别电脑端和移动端筛选</p></li><li><p style="margin-left:.5em; margin-right:.5em">[新功能] 富文本支持文档一键导入，支持 Word 文档（docx）、Markdown 文档（md）</p></li><li><p style="margin-left:.5em; margin-right:.5em">[新功能] 系统命令行安装和界面安装方式文档支持</p></li><li><p style="margin-left:.5em; margin-right:.5em">[新功能] ComplexFieldsList 组件支持链接和颜色选择</p></li><li><p style="margin-left:.5em; margin-right:.5em">[新功能] Tree 组件增加选项是否独立模式 independentEnable</p></li><li><p style="margin-left:.5em; margin-right:.5em">[新功能] LayUI 升级到最新版</p></li><li><p style="margin-left:.5em; margin-right:.5em">[新功能] DataRefProvider 提供文件引用提供者模块</p></li><li><p style="margin-left:.5em; margin-right:.5em">[系统优化] Robot 蜘蛛检测 UserAgent 完善</p></li><li><p style="margin-left:.5em; margin-right:.5em">[系统优化] 系统图标样式统一优化</p></li><li><p style="margin-left:.5em; margin-right:.5em">[系统优化] 数据表单 Grid 常规模式和简单模式底层重构完成</p></li></ul><h2>功能特性</h2><h3>文件上传管理页面支持图标显示，支持顺序选择</h3><p style="color:#34495e; margin-left:.5em; margin-right:.5em; text-align:left"><img alt="" src="https://mz-assets.tecmz.com/data/image/2023/11/23/44339_phbb_8745.png" referrerpolicy="no-referrer"></p><p style="color:#34495e; margin-left:.5em; margin-right:.5em; text-align:left"><img alt="44361_zxwu_8817.gif" src="https://mz-assets.tecmz.com/data/image/2023/11/23/44361_zxwu_8817.gif" referrerpolicy="no-referrer"></p><p style="color:#34495e; margin-left:.5em; margin-right:.5em; text-align:left">&nbsp;</p><h3>命令行安装方式文档说明</h3><p style="color:#34495e; margin-left:.5em; margin-right:.5em; text-align:left"><img alt="" src="https://mz-assets.tecmz.com/data/image/2023/11/27/21628_dteb_6856.png" referrerpolicy="no-referrer"></p><h3>富文本支持文档一键导入，支持 Word 文档（docx）、Markdown 文档（md）</h3><p style="color:#34495e; margin-left:.5em; margin-right:.5em; text-align:left"><img alt="" src="https://mz-assets.tecmz.com/data/image/2023/12/02/32934_en1y_3833.png" referrerpolicy="no-referrer"></p><p style="color:#34495e; margin-left:.5em; margin-right:.5em; text-align:left"><img alt="" src="https://mz-assets.tecmz.com/data/image/2023/12/02/32956_rlcj_2739.png" referrerpolicy="no-referrer"></p><h3>有移动端链接时，后台链接选择自动识别电脑端和移动端筛选</h3><p style="color:#34495e; margin-left:.5em; margin-right:.5em; text-align:left"><img alt="23018_vyrs_6936.gif" src="https://mz-assets.tecmz.com/data/image/2023/12/06/23018_vyrs_6936.gif" referrerpolicy="no-referrer"></p><p style="color:#34495e; margin-left:.5em; margin-right:.5em; text-align:left">&nbsp;</p><h2>模块市场一键安装</h2><p style="color:#34495e; margin-left:.5em; margin-right:.5em; text-align:left">系统内置模块市场，有行业应用、插件、云存储、云短信等功能模块，后台支持一键安装、启用、禁用、卸载，可快速搭建属于自己的系统应用。</p><p style="color:#34495e; margin-left:.5em; margin-right:.5em; text-align:left"><img alt="功能模块" src="https://ms-assets.modstart.com/data/image/2022/04/18/22844_bgyg_5120.jpeg" referrerpolicy="no-referrer"></p><h2>系统演示与文档</h2><ul><li><p style="margin-left:.5em; margin-right:.5em">码云仓库：<a href="https://gitee.com/modstart/ModStartBlog">https://gitee.com/modstart/ModStartBlog</a></p></li><li><p style="margin-left:.5em; margin-right:.5em">Github 仓库：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmodstart%2FModStartBlog" target="_blank">https://github.com/modstart/ModStartBlog</a></p></li><li><p style="margin-left:.5em; margin-right:.5em">系统演示：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.demo.tecmz.com%2F" target="_blank">https://blog.demo.tecmz.com/</a></p></li><li><p style="margin-left:.5em; margin-right:.5em">下载试用：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmodstart.com%2Fdownload" target="_blank">https://modstart.com/download</a></p></li><li><p style="margin-left:.5em; margin-right:.5em">开发者文档：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmodstart.com%2Fdoc" target="_blank">https://modstart.com/doc</a></p></li><li><p style="margin-left:.5em; margin-right:.5em">模块市场：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmodstart.com%2Fstore" target="_blank">https://modstart.com/store</a></p></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Thu, 07 Dec 2023 14:19:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/269998</guid>
            <link>https://www.oschina.net/news/269998</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[IntelliJ IDEA 2023.3 & JetBrains 全家桶年度大版本更新]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>JetBrains 为多款 IDE <u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.jetbrains.com%2F%3Fposts-count%3D24" target="_blank">发布</a></u>了 2023 年度第 3 个大版本更新。</p><p><img src="https://oscimg.oschina.net/oscnet/up-f6e4a4c78160fd0990433992941b61dfb54.png" referrerpolicy="no-referrer"></p><p><img src="https://oscimg.oschina.net/oscnet/up-07457ee9eae7f861ed4ae46f819c7b7868c.png" referrerpolicy="no-referrer"></p><p>包括：</p><ul><li><strong>IntelliJ IDEA 2023.3</strong></li></ul><p>在 IntelliJ IDEA 2023.3 中，AI Assistant 持续演进，现已超越技术预览阶段，获得了大量令人期待的改进。</p><p>在其他方面，此版本包括对最新 Java 21 功能的全面支持，引入了带有编辑操作的直观浮动工具栏，并添加了 Run to Cursor（运行到光标）嵌入选项来增强调试工作流。</p><p>此外 IntelliJ IDEA Ultimate 现在提供无缝的开箱即用 Kubernetes 开发体验。</p><p>详情：<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.jetbrains.com%2Fzh-cn%2Fidea%2Fwhatsnew%2F" target="_blank">https://www.jetbrains.com/zh-cn/idea/whatsnew/</a></u></p><hr><ul><li><strong>WebStorm 2023.3</strong></li></ul><p>改进 Angular、Svelte 和 Vue 支持、AI Assistant、针对 TypeScript 的更新，以及对 Cypress、Playwright 和 Node.js 原生测试运行程序的支持。</p><p>详情：<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.jetbrains.com%2Fzh-cn%2Fwebstorm%2Fwhatsnew%2F" target="_blank">https://www.jetbrains.com/zh-cn/webstorm/whatsnew/</a></u></p><hr><ul><li><strong>GoLand 2023.3</strong></li></ul><p>GoLand 2023.3 带来多项重要的新功能：</p><ul><li>JetBrains 的 AI Assistant 现已全面推出，搭载大量新功能和改进，助力提高您在 JetBrains IDE 中的工作效率。</li><li>Dev Container 现已得到正式支持。 我们正在开发功能集，并积极推进 Dev Container 支持，因此它们带有「Beta」标记。</li><li>错误处理、单行<code>returns</code>和<code>panics</code>以及其他代码的代码折叠样式的巨大更新。</li><li>提高工作效率的多项提示、重构和快速修复，例如<code>slice</code>表达式的提示、自定义<code>printf</code>式函数的代码洞察，以及调试器增强。</li></ul><p>GoLand 2023.3 还提供了针对 Docker 与 Kubernetes 集成、VCS 的更新，以及针对 Web 开发的一些调整。&nbsp;</p><p>详情：<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.jetbrains.com%2Fzh-cn%2Fgo%2Fwhatsnew%2F" target="_blank">https://www.jetbrains.com/zh-cn/go/whatsnew/</a></u></p><hr><p>其他 IDE：</p><ul><li><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.jetbrains.com%2Fzh-cn%2Fdatagrip%2Fwhatsnew%2F" target="_blank"><strong>DataGrip 2023.3</strong></a></u></li><li><strong><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.jetbrains.com%2Fzh-cn%2Fruby%2Fwhatsnew%2F" target="_blank">RubyMine 2023.3</a></u></strong></li><li><strong><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.jetbrains.com%2Fzh-cn%2Fdataspell%2Fwhatsnew%2F" target="_blank">DataSpell 2023.3</a></u></strong></li><li><strong><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.jetbrains.com%2Frscpp%2F2023%2F12%2F07%2Fresharper-cpp-2023-3%2F" target="_blank">ReSharper C++ 2023.3</a></u></strong></li><li><u><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.jetbrains.com%2Fclion%2F2023%2F12%2Fclion-classic-2023-3-released-ai%2F" target="_blank">CLion Classic 2023.3</a></strong></u></li><li><strong><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.jetbrains.com%2Fphpstorm%2F2023%2F12%2Fphpstorm-2023-3-is-now-available%2F" target="_blank">PhpStorm 2023.3</a></u></strong></li><li><strong><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.jetbrains.com%2Fdotnet%2F2023%2F12%2F07%2Fresharper-2023-3-release%2F" target="_blank">ReSharper 2023.3</a></u></strong></li><li><strong><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.jetbrains.com%2Fdotnet%2F2023%2F12%2F07%2Frider-2023-3-release%2F" target="_blank">Rider 2023.3</a></u></strong></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Thu, 07 Dec 2023 10:07:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/269961/intellij-idea-2023-3</guid>
            <link>https://www.oschina.net/news/269961/intellij-idea-2023-3</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[数据可视化引擎 G2 v5.1.11 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff; color:#333333">数据可视化引擎&nbsp;G2 v5.1.11 版本现已发布，具体更新内容包括：</span></p><ul><li>修复：tooltip 应说明字符串格式的容器&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fantvis%2FG2%2Fpull%2F5856" target="_blank">#5856</a></li><li>feat(sunburst)：添加 sunburst 演示&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fantvis%2FG2%2Fpull%2F5854" target="_blank">#5854</a></li><li>feat(slider)：支持&nbsp;sparkline&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fantvis%2FG2%2Fpull%2F5832" target="_blank">#5832</a></li><li>feat(interaction)：定义内联交互&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fantvis%2FG2%2Fpull%2F5857" target="_blank">#5857</a></li><li>chore：将 @antv/component 更新为 1.0.0&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fantvis%2FG2%2Fpull%2F5858" target="_blank">#5858</a></li><li>docs：更新 time.zh.md <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fantvis%2FG2%2Fpull%2F5864" target="_blank">#5864</a></li><li>修复：修复极座标上的 scaleInY 动画（径向缩放）&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fantvis%2FG2%2Fpull%2F5866" target="_blank">#5866</a></li><li>修复：如果 group 被破坏，则无法找到文档&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fantvis%2FG2%2Fpull%2F5870" target="_blank">#5870</a></li><li>修复：ci 和 bench&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fantvis%2FG2%2Fpull%2F5880" target="_blank">#5880</a></li><li>feat：优化面积标记曲线&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fantvis%2FG2%2Fpull%2F5877" target="_blank">#5877</a></li><li>docs：更新示例大纲的标题&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fantvis%2FG2%2Fpull%2F5888" target="_blank">#5888</a></li><li>docs：更新示例栏的图片&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fantvis%2FG2%2Fpull%2F5889" target="_blank">#5889</a></li><li>fix(tooltip)：错误的容器&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fantvis%2FG2%2Fpull%2F5890" target="_blank">#5890</a></li><li>feat：添加&nbsp;jitterY​​​​​​​&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fantvis%2FG2%2Fpull%2F5887" target="_blank">#5887</a></li></ul><p>更新说明：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fantvis%2FG2%2Freleases%2Ftag%2F5.1.11" target="_blank">https://github.com/antvis/G2/releases/tag/5.1.11</a></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 07 Dec 2023 05:52:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/269912/g2-5-1-11-released</guid>
            <link>https://www.oschina.net/news/269912/g2-5-1-11-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[👉 贡献者协议 (CLA） | .NET 框架 Furion 4.9.1.11 版本]]>
            </title>
            <description>
                <![CDATA[<div class="content"><blockquote><p><strong>Furion 的这次商业化尝试不是什么坏事。如果走通了这条路，那么值得其他开源项目团队 「<span style="color:#e67e22">择其善者而从之、其不善者而改之</span>」，如果这条路走不通，也为其他开源项目试了一次错。</strong></p><p><strong>毫无疑问 Furion 跨出的这一步，为后来者项目趟出了一条新路，一- 无论这条路是否正确，这一系列做法却<span style="color:#d35400">不再是「毫无先例」的了</span>。</strong></p></blockquote><p style="color:rgba(0, 0, 0, 0.8); margin-left:0em; margin-right:0em; text-align:start"><span style="color:#008000">🚩 截止 2023 年 12 月 07 日 00 时 00 分 00 秒，注册用户<span>&nbsp;</span></span><strong>15338</strong><span style="color:#008000">个，VIP 服务用户<span>&nbsp;</span></span><strong>467</strong><span style="color:#008000">个，开通文档用户<span>&nbsp;</span></span><strong>7704</strong><span style="color:#008000">个，针对仓库贡献者、 .NET 初学者、学生或教育工作者免费开通账号<span>&nbsp;</span></span><strong>1134</strong><span style="color:#008000">个。</span></p><h2>福祸相依</h2><p style="color:rgba(0, 0, 0, 0.8); margin-left:0em; margin-right:0em; text-align:start"><strong>经过这一周 Furion 的调整，我们筛选掉了一些认为 Furion 对他们没有帮助和价值的用户，而留下的则是那些对我们充满信任并深怀感激之情的支持者们。</strong></p><p style="color:rgba(0, 0, 0, 0.8); margin-left:0; margin-right:0; text-align:start">正如福祸相依的道理，Furion 的知名度已经得到了显著的提升。<strong>接下来，我们将发布 v5 版本，其中汲取了过去三年的教训与经验。无论是团队的外宣工作、框架技术的改进还是商业化布局，我们都有信心将比过去做得更好。</strong></p><p style="color:rgba(0, 0, 0, 0.8); margin-left:0; margin-right:0; text-align:start"><strong>幸运的是，我们并没有急于发布 v5 版本。经历了这一切之后，Furion 团队获得了充足的时间来调整和优化 v5 版本的发布策略。</strong></p><p style="color:rgba(0, 0, 0, 0.8); margin-left:0em; margin-right:0em; text-align:start">在此，我想起了罗翔老师的一句话：「若非命运的庇护，你早就没了。」这句话对我们团队来说也是一种警示，提醒我们珍惜机会，继续努力。</p><h2>成长过程</h2><p style="color:rgba(0, 0, 0, 0.8); margin-left:0em; margin-right:0em; text-align:start"><strong>忍人所不忍，能人所不能。这就是我们的生存空间。</strong></p><p style="color:rgba(0, 0, 0, 0.8); margin-left:0em; margin-right:0em; text-align:start"><strong>成长有一个过程，那就是容忍一切事情的发生，凡是让你感到不舒服的事，都是在增加你的阅历，拓宽你的认知。</strong></p><p style="color:rgba(0, 0, 0, 0.8); margin-left:0em; margin-right:0em; text-align:start">只有明白了众生相，了解社会运行规则，直面人性的善与恶，其实就不会在互联网上当键盘侠了。</p><h2>贡献者协议</h2><p style="color:rgba(0, 0, 0, 0.8); margin-left:0em; margin-right:0em; text-align:start">https://help.gitee.com/cla</p><p style="color:rgba(0, 0, 0, 0.8); margin-left:0em; margin-right:0em; text-align:start">借此机会，给那些不了解贡献者协议（CLA）的用户了解一下。<span style="color:#000000"><strong><span style="background-color:#d35400">在此之前，目前 Furion 所有的贡献者没有签订 CLA 协议，另外 Furion 给予所有贡献者（联系我们）提供的都是永久的文档访问权限。</span></strong></span></p><p style="color:rgba(0, 0, 0, 0.8); margin-left:0em; margin-right:0em; text-align:start"><span style="color:#000000"><strong><span style="background-color:#e67e22">在做这一切商业化探索之前的一个月，我们团队已经咨询了法务律师、各大开源大佬、开源社区导师和开源专家，并通过了中国电子技术标准化研究院成熟度评审，包括安全合规审查等等一系列的评审操作。</span></strong></span></p><p style="color:rgba(0, 0, 0, 0.8); margin-left:0em; margin-right:0em; text-align:start"><a href="https://www.oschina.net/news/267981/furion-4-9-1-7-released">🎉 Furion 通过 ⌈中国电子技术标准化研究院⌋ 成熟度评估，v4.9.1.7 发布 - OSCHINA - 中文开源技术交流社区</a></p><p><img height="1059" src="https://oscimg.oschina.net/oscnet/up-de21df17f23c015b8ceee42c2c7b9bb9ed7.png" width="1303" referrerpolicy="no-referrer"></p><h2>本期更新</h2><ul><li><ul><li>&nbsp;新增<span>&nbsp;</span><code>EFCore</code><span>&nbsp;</span>数据库操作<span>&nbsp;</span><code>EntityNotTenant</code><span>&nbsp;</span>和<span>&nbsp;</span><code>EntityBaseNotTenant</code><span>&nbsp;</span>实体基类<span>&nbsp;</span>4.9.1.11<span>&nbsp;</span>⏱️2023.12.04<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/b62bfb1a18d57f7fe3dd9548aa02372025dfed85" target="_blank">b62bfb1</a></li><li>&nbsp;新增<span>&nbsp;</span>控制枱日志支持启动时同步<span>&nbsp;</span><code>ConsoleFormatterExtendOptions</code><span>&nbsp;</span>配置<span>&nbsp;</span>4.9.1.10<span>&nbsp;</span>⏱️2023.12.04<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/a96fe08336dbf99b7cf5cc5e6ec304adf7413a4b" target="_blank">a96fe08</a></li><li>&nbsp;新增<span>&nbsp;</span>定时任务支持取消正在运行的作业程序<span>&nbsp;</span>4.9.1.9<span>&nbsp;</span>⏱️2023.12.03<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/3cc9be0da1eabc0f3baaa7801b115bb2909bb085" target="_blank">3cc9be0</a></li><li>&nbsp;新增<span>&nbsp;</span><code>JSON.IsValid(jsonString)</code><span>&nbsp;</span>判断<span>&nbsp;</span><code>JSON</code><span>&nbsp;</span>字符串有效性<span>&nbsp;</span>4.9.1.8<span>&nbsp;</span>⏱️2023.11.30<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/22bc69bd4a445f81833c082da7c99f4a5c518012" target="_blank">22bc69b</a></li><li>&nbsp;新增<span>&nbsp;</span><code>axios-utils.ts</code><span>&nbsp;</span>解析<span>&nbsp;</span><code>token</code><span>&nbsp;</span>信息导出方法<span>&nbsp;</span>4.9.1.7<span>&nbsp;</span>⏱️2023.11.29<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/ae8c3e8c47494fa3ba37d2b076d54f9f2c016252" target="_blank">ae8c3e8</a></li><li>&nbsp;新增<span>&nbsp;</span>规范化处理自动过滤<span>&nbsp;</span><code>SSE</code><span>&nbsp;</span>请求、文件请求、图片请求<span>&nbsp;</span>4.9.1.6<span>&nbsp;</span>⏱️2023.11.22<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/issues/I8IP6D" target="_blank">#I8IP6D</a></li><li>&nbsp;新增<span>&nbsp;</span><code>[AppDbContext]</code><span>&nbsp;</span>特性支持<span>&nbsp;</span><code>UseSnakeCaseNaming</code><span>&nbsp;</span>属性配置表名使用蛇形命名<span>&nbsp;</span>4.9.1.5<span>&nbsp;</span>⏱️2023.11.20<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/issues/I8HGR2" target="_blank">#I8HGR2</a><span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/pulls/863" target="_blank">!863</a></li><li>&nbsp;新增<span>&nbsp;</span>时间戳模型绑定器将时间戳转换为<span>&nbsp;</span><code>DateTime/DateTimeOffset</code><span>&nbsp;</span>类型<span>&nbsp;</span>4.9.1.5<span>&nbsp;</span>⏱️2023.11.20<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/df3053cf081d5e4d8eb63d567ed95c45267e0969" target="_blank">df3053c</a></li><li>&nbsp;新增<span>&nbsp;</span><code>Newtonsoft.Json</code><span>&nbsp;</span>自动将时间戳转换为<span>&nbsp;</span><code>DateTime/DateTimeOffset</code><span>&nbsp;</span>类型<span>&nbsp;</span>4.9.1.3<span>&nbsp;</span>⏱️2023.11.17<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/78a589d99eb5985b576e4c96acd6e4890391d6ff" target="_blank">78a589d</a></li><li>&nbsp;新增<span>&nbsp;</span><code>System.Text.Json</code><span>&nbsp;</span>自动将时间戳转换为<span>&nbsp;</span><code>DateTime/DateTimeOffset</code><span>&nbsp;</span>类型<span>&nbsp;</span>4.9.1.2<span>&nbsp;</span>⏱️2023.11.17<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/abd5196f5c5160a5df96dad80c7c5aa51b96d5b9" target="_blank">abd5196</a></li><li>&nbsp;新增<span>&nbsp;</span><code>IRepositoryFactory&lt;TEntity, TDbContextLocator&gt;</code><span>&nbsp;</span>仓储功能，解决在<span>&nbsp;</span><code>Blazor</code><span>&nbsp;</span>中使用<span>&nbsp;</span><code>EFCore</code><span>&nbsp;</span>问题<span>&nbsp;</span>4.9.1.1<span>&nbsp;</span>⏱️2023.11.16<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/4285ec0b8debc2d71c7f978126cb3dc394a8ad30" target="_blank">4285ec0</a><span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flearn.microsoft.com%2Fzh-cn%2Faspnet%2Fcore%2Fblazor%2Fblazor-ef-core%3Fview%3Daspnetcore-7.0" target="_blank">文档说明</a></li><li>&nbsp;新增<span>&nbsp;</span>补偿策略模块功能<span>&nbsp;</span>4.9.1<span>&nbsp;</span>⏱️2023.11.15<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/tree/v4/framework/Furion/RescuePolicy" target="_blank">【源码地址】</a><span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/dfc63e7f0ffd2e03653f11a3e49a21646902ddc4" target="_blank">dfc63e7</a></li></ul></li><li><p><strong>突破性变化</strong></p><ul><li>&nbsp;升级<span>&nbsp;</span><code>Serilog</code><span>&nbsp;</span>拓展包依赖至<span>&nbsp;</span><code>8.0.0</code><span>&nbsp;</span>版本，<strong>移除<span>&nbsp;</span><code>.NET8.0</code><span>&nbsp;</span>的<span>&nbsp;</span><code>IWebHostBuilder.UseSerilogDefault</code><span>&nbsp;</span>拓展方法</strong><span>&nbsp;</span>4.9.1.1<span>&nbsp;</span>⏱️2023.11.16<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/5ab3e43722a298db56a86792dde301adf1f3fe7f" target="_blank">5ab3e43</a></li><li>&nbsp;升级<span>&nbsp;</span><strong>框架底层适配<span>&nbsp;</span><code>.NET8.0</code><span>&nbsp;</span>正式版</strong><span>&nbsp;</span>4.9.1<span>&nbsp;</span>⏱️2023.11.15</li><li>&nbsp;升级<span>&nbsp;</span><strong>框架脚手架适配<span>&nbsp;</span><code>.NET8.0</code><span>&nbsp;</span>正式版</strong><span>&nbsp;</span>4.9.1<span>&nbsp;</span>⏱️2023.11.15</li></ul></li><li><p><strong>问题修复</strong></p><ul><li>&nbsp;修复<span>&nbsp;</span><code>Scoped.CreateUowAsync</code><span>&nbsp;</span>内部异常上层应用不能捕获问题<span>&nbsp;</span>4.9.1.8<span>&nbsp;</span>⏱️2023.11.30<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/3c859e83c0ed6f07fcf191973fe465599a823224" target="_blank">3c859e8</a></li><li>&nbsp;修复<span>&nbsp;</span>定时任务设置触发器<span>&nbsp;</span><code>Result</code><span>&nbsp;</span>后作业执行异常不能重置问题<span>&nbsp;</span>4.9.1.7<span>&nbsp;</span>⏱️2023.11.24<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/147215f1631f58fca900f17cca5695f9431555e5" target="_blank">147215f</a></li><li>&nbsp;修复<span>&nbsp;</span><code>JWTEncryption.GetJWTSettings()</code><span>&nbsp;</span>独立使用时无法获取自定义配置<span>&nbsp;</span>4.9.1.4<span>&nbsp;</span>⏱️2023.11.18<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/c045e084670a98f71d5ea5ed55ca5cbbfc981e0b" target="_blank">c045e08</a></li></ul></li><li><p><strong>文档</strong></p><ul><li>&nbsp;更新<span>&nbsp;</span>仓储文档、<code>Db</code><span>&nbsp;</span>静态类文档、脚手架文档、<code>.NET7</code><span>&nbsp;</span>升级<span>&nbsp;</span><code>.NET8</code><span>&nbsp;</span>文档、<code>JSON</code><span>&nbsp;</span>序列化文档、<code>Docker</code><span>&nbsp;</span>部署文档、数据库上下文文档、虚拟文件文档、远程请求文档、<code>HttpContext</code><span>&nbsp;</span>文档、<code>JSON</code><span>&nbsp;</span>静态类文档、定时任务文档、数据库仓储拓展文档、数据库实体文档</li></ul></li><li><p><strong>贡献者</strong></p><ul><li>zuohuaijun (<a href="https://gitee.com/zuohuaijun" target="_blank">@zuohuaijun</a>)<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/pulls/865" target="_blank">!865</a></li><li>anliuty (<a href="https://gitee.com/www.fengyunmy.com" target="_blank">@anliuty</a>)<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/pulls/863" target="_blank">!863</a></li><li>风云明月 (<a href="https://gitee.com/www.fengyunmy.com" target="_blank">@www.fengyunmy.com</a>)<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/pulls/862" target="_blank">!862</a></li></ul></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Thu, 07 Dec 2023 05:42:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/269909/furion-4-9-1-11-released</guid>
            <link>https://www.oschina.net/news/269909/furion-4-9-1-11-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[去中心化分布式即时通讯引擎 tim 2.0.0 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#212529; text-align:start"><strong>tim2.0.0 是一个去中心化的分布式 im 引擎，分布式数据存储，零依赖，支持 nat 穿透，支持大规模集群，支持多种数据库，支持海量数据流分发。tim2.0.0 是作者通过长时间实践并结合 xmpp 设计理念开发的 im 引擎。</strong></p><h4><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftlnet.top%2Ftim" target="_blank">tim 官网与文档&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tim 源码地址</a></h4><h4><strong>tim 的特点</strong></h4><ul><li><strong>解决大规模节点集群问题，去中心化架构，无第三方服务依赖</strong></li><li><strong>解决海量通讯数据存储问题，分布式数据存储，支持数据库在线动态扩容</strong></li><li><strong>高性能，协议体积下，序列化效率高</strong></li><li><strong>支持所有的通讯模式，通过 tim 可以设计开发类似微信，抖音，QQ，阅后即焚等等 app 的通讯功能</strong></li><li><strong>tim 从底层设计支持流数据分发，通过 tim 可以支持类似抖音的，海量用户直播间，等功能</strong></li><li><strong>通过 tim 可以搭建通讯服务，云平台</strong></li><li><strong>tim 自带监控后台</strong></li></ul><p style="color:#212529; text-align:start">&nbsp;</p><h4><strong>tim 功能简介</strong></h4><ol><li><span><strong>去中心化分布式架构，支持 Nat 穿透集群节点，天然分布式架构，无需特殊配置，无最小节点数限制，零依赖，支持大规模集群。</strong></span></li><li><span><strong>支持多种数据库：TLDB，Mysql，PostgreSQL ，SQL Server，Oracle，Oceanbase 等</strong></span></li><li><span><strong>高度归纳 IM 通讯模式，从底层支持 1:1，1:N，N:N 通讯模式</strong></span></li><li><span><strong>从底层支持流数据发送，轻松支持直播，实时音视频等功能的开发</strong></span></li><li><span><strong>重视数据安全，从账号到通讯数据，都进行换算或加密，保证用户信息安全</strong></span></li><li><span><strong>实现分布式存储数据，解决海量数据存储的问题，支持动态扩容数据库节点。</strong></span></li><li><span><strong>具备单机高性能特点，协议序列化效率高，体积小。</strong></span></li><li><span><strong>从底层支持各种通讯类型，包括普通信息，撤回信息，信息阅后即焚等</strong></span></li><li><span><strong>支持各种自定义用户状态，对标 QQ 等类型 APP 的状态功能</strong></span></li><li><span><strong>支持群组，对标 QQ，微信等类型 APP 群组功能</strong></span></li><li><span><strong>支持多人实时流数据发送，对标抖音直播，视频连线，或多人实时视频会议等 app 的功能</strong></span></li><li><span><strong>支持同账号多终端同时登录，并支持通过配置进行限制，对标 QQ，微信多终端登录功能</strong></span></li><li><span><strong>支持客户端采用 json 协议访问。</strong></span></li></ol><p style="color:#212529; text-align:start">&nbsp;</p><h4><strong>tim 的性能</strong></h4><h4><span><strong>tim 传输具备协议体积小，序列化效率高，定位快的特点</strong></span></h4><ul><li>千人大群，千人同时在线，一个 tim 服务节点的场景，消息不延迟</li><li>万人大群，万人同时在线，一个 tim 服务节点的场景，消息延迟 2-5 秒</li><li>万人大群，万人同时在线，三个 tim 集群节点的场景，消息不延迟或延迟小于 2 秒</li></ul><p style="color:#212529; text-align:start">&nbsp;</p><h4><strong>tim 的安全性</strong></h4><ul><li>tim 支持安全协议通讯</li><li>tim 对用户属性资料及所有通讯数据都进行加密存储</li><li>tim 不存储用户账号等信息，tim 是通过内置用户账号进行用户通讯</li></ul><p style="color:#212529; text-align:start">所以使用 tim 是信息安全的，即使内部开发人员，在不进行额外记录的情况下，也无法直接查询用户及通讯信息。当然，这是针对使用 tim 内置用户系统的情况，如果使用 tim 接入外部业务用户系统，则用户信息不受 tim 操作，但通讯信息依旧是加密存储的。</p><p style="color:#212529; text-align:start">数据库存储示例截图：（<code>乱码部分为加密数据</code>）</p><p style="color:#212529; text-align:start"><img alt="" height="413" src="https://oscimg.oschina.net/oscnet/up-23d4430a178d77b2c248863b7ba6be07146.jpg" width="1587" referrerpolicy="no-referrer"></p><p><img alt="" height="324" src="https://oscimg.oschina.net/oscnet/up-f3e22c057412ecd4796652f7f086dda45d9.jpg" width="1580" referrerpolicy="no-referrer"></p><hr><h2>相关文章：</h2><p style="color:#212529; text-align:start"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftlnet.top%2Farticle%2F22425142" target="_blank"><strong>《tim 实践系列——tim 协议与其他格式协议的比较》</strong></a></p><p style="color:#212529; text-align:start"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftlnet.top%2Farticle%2F22425137" target="_blank"><strong>《tim 实践系列——tim 设计来源与设计模式》</strong></a></p><p style="color:#212529; text-align:start">后续的《tim 实践系列》文章会逐一更新，详细介绍 tim 的使用</p><ul><li><code><strong>《tim 实践系列——如何使用 TimMessage 自定义各种消息》</strong></code></li><li><code><strong>《tim 实践系列——如何使用 TimPrecence 自定义各种用户状态》</strong></code></li><li><code><strong>《tim 实践系列——虚拟房间的作用和如何使用》</strong></code></li><li><code><strong>《tim 实践系列——用户如何实现，隐身，在线，忙碌等状态》</strong></code></li><li><code><strong>《tim 实践系列——消息特点和如何在实际业务中使用》</strong></code></li><li><code><strong>《tim 实践系列——tim 如何限制一个账号多个终端登录》</strong></code></li><li><code><strong>《tim 实践系列——tim 内置的账号系统与登录账号区别》</strong></code></li><li><code><strong>《tim 实践系列——内置的好友关系和群组》</strong></code></li><li><code><strong>《tim 实践系列——消息撤回，阅后即焚，等功能如何开发》</strong></code></li><li><code><strong>《tim 实践系列——用户之间如何实现文件传输》</strong></code></li><li><code><strong>《tim 实践系列——微信实时音视频开发》</strong></code></li><li><code><strong>《tim 实践系列——抖音直播间的开发》</strong></code></li><li><code><strong>《tim 实践系列——多人实时视频会议，抖音直播间在线多人视频连线》</strong></code></li><li><code><strong>《tim 实践系列——如何实现对公众号订阅号等系统栏目的实时订阅》</strong></code></li><li><code><strong>《tim 实践系列——去中心化分布式架构特点》</strong></code></li><li><code><strong>《tim 实践系列——分布式数据存储与动态数据库扩容》</strong></code></li><li><code><strong>《tim 实践系列——如何架构支持百亿级别在线用户的即时消息系统》</strong></code></li><li><code><strong>《tim 实践系列——接入自定义账号系统，配置关系型数据库》</strong></code></li><li><code><strong>《tim 实践系列——后台管理员接口的使用》</strong></code></li><li><code><strong>《tim 实践系列——账号安全措施》</strong></code></li><li><code><strong>《tim 实践系列——tim 服务器如何限流，限制消息体大小，连接数，发信频率等》</strong></code></li><li><code><strong>《tim 实践系列——tim 产生的数据统计与建议》</strong></code></li><li><code><strong>《tim 实践系列——tim 配置系统参数要注意的地方》</strong></code></li><li><code><strong>《tim 实践系列——使用 timjs 实现的 web 版即时通讯项目 webtim》</strong></code></li><li><code><strong>《tim 实践系列——使用 tim 无数据库模式实现 web IM》</strong></code></li></ul><p style="color:#212529; text-align:start"><strong>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</strong></p><hr><h4><strong>tim 监控后台</strong></h4><p><img alt="" height="903" src="https://oscimg.oschina.net/oscnet/up-e625f5013b416f11c483c7908e1f52907d9.jpg" width="1614" referrerpolicy="no-referrer"></p><p><img alt="" height="533" src="https://oscimg.oschina.net/oscnet/up-8ea307b4889ffd1fcde116766fb19646db1.jpg" width="1617" referrerpolicy="no-referrer"></p><hr><h1><strong>webtim</strong></h1><p style="color:#212529; text-align:start"><strong>webtim 是 tim 的功能示例项目，使用 tim 客户端 timjs 开发，除了流数据的使用，展示了基本的用户通讯与群功能，功能如，用户注册，用户上线，离线，加好友，基本通讯，离线数据，拉取聊天数据，建群，加群，退群，踢出群等等功能，当然部分接口没有示例的如拉黑，修改资料等，这些请在</strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftlnet.top%2Ftimdoc" target="_blank"><strong>tim 文档</strong></a><strong>上查询或，等待后续 webtim 的完善.</strong></p><p style="color:#212529; text-align:start"><strong>webtim 的业务使用 timjs 完成，所有逻辑功能前端页面中处理完成。</strong></p><p style="color:#212529; text-align:start"><strong>webtim 的源码地址：</strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdonnie4w%2Fwebtim" target="_blank"><strong>https://github.com/donnie4w/webtim</strong></a></p><p style="color:#212529; text-align:start"><strong>webtim 在线访问地址：</strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftim.tlnet.top%2F" target="_blank"><strong>https://tim.tlnet.top</strong></a></p><h4><strong>webtim 的功能截图：</strong></h4><p style="color:#212529; text-align:start"><strong>聊天及用户状态</strong></p><p style="color:#212529; text-align:start"><strong><img alt="" height="883" src="https://oscimg.oschina.net/oscnet/up-95e6b9cf754a19a26ac54ab18f9c0671ef8.jpg" width="1791" referrerpolicy="no-referrer"></strong></p><p style="color:#212529; text-align:start"><strong><img alt="" height="886" src="https://oscimg.oschina.net/oscnet/up-66f167a65b2790c052c7dbb78c9b8893f68.jpg" width="1788" referrerpolicy="no-referrer"></strong></p><p style="color:#212529; text-align:start"><strong><img alt="" height="872" src="https://oscimg.oschina.net/oscnet/up-a6e51a8afcf23f4c5235f234fffe91ceda7.jpg" width="1797" referrerpolicy="no-referrer"></strong></p><p><img alt="" height="882" src="https://oscimg.oschina.net/oscnet/up-ad62f6cea51c71fef80c2ecfaf0bb17d068.jpg" width="1772" referrerpolicy="no-referrer"></p><p><img alt="" height="869" src="https://oscimg.oschina.net/oscnet/up-41f40b443e8f9cf9d15fdbaecd97b9209f7.jpg" width="1794" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 07 Dec 2023 05:13:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/269907</guid>
            <link>https://www.oschina.net/news/269907</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
    </channel>
</rss>
