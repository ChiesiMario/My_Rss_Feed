<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[开源中国-软件更新资讯]]>
        </title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="http://rsshub.app/oschina/news/project" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[开源中国-软件更新资讯 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Wed, 13 Mar 2024 13:59:24 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[Laravel 11 正式发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">Laravel 11 和 Laravel Reverb 现已<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flaravel-news.com%2Flaravel-11" target="_blank">发布</a>。Reverb 是 Laravel 生态系统的最新成员，是第一方、可扩展的 WebSocket 服务器，旨在为用户的应用程序提供强大的实时功能。</span></p><p><span style="color:#000000">Laravel 11 引入了：极简应用结构、默认使用 SQLite、实现 health routing、提供每秒速率限制、支持优雅的加密密钥轮换、改进队列测试、引入新的 Artisan 命令、添加 Resend 邮件传输、集成 Prompt validator、新的 Artisan commands、Model Casts 改进、The once function、改进了使用内存数据库进行测试时的性能、改进了对 MariaDB 的支持等等，</span></p><p><span style="color:#000000">Laravel 11 使用的 PHP 版本最低要求是&nbsp;PHP 8.2。</span></p><p><img alt="" height="352" src="https://oscimg.oschina.net/oscnet/up-0453b972568e047b7d57af4dd0cf5cf3c7d.png" width="500" referrerpolicy="no-referrer"></p><p><span style="color:#000000"><strong>极简应用结构</strong></span></p><p><span style="color:#000000">Laravel 11 为新的 Laravel 应用程序引入了极简应用程序结构，无需对现有应用程序进行任何更改。新的应用程序结构旨在提供更精简、更现代的体验，同时保留 Laravel 开发人员已经熟悉的许多概念。</span></p><p><span style="color:#000000">应用程序文件夹已大幅简化；HTTP 内核和控制枱内核都已删除。很少定制的九个中间件现已移至框架本身，异常处理程序已被移除，Providers 目录精简为单一提供程序。</span></p><p><img height="313" src="https://oscimg.oschina.net/oscnet/up-fd30e47727225b78e873f024484cf66b61e.png" width="500" referrerpolicy="no-referrer"></p><p><img height="388" src="https://oscimg.oschina.net/oscnet/up-45a1e9253daae9587fc3b631ede34b2d0a4.png" width="500" referrerpolicy="no-referrer"></p><p>此外，<code>routes</code>文件夹也得到了简化；默认情况下， <code>api.php</code>和<code>channels.php</code>路由文件不再存在，因为许多应用程序不需要这些文件。</p><p><img height="209" src="https://oscimg.oschina.net/oscnet/up-201c1fc787f2da27f81a117792a7429a363.png" width="500" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000">可以使用简单的 Artisan 命令来创建它们：</span></p><pre style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000"><code class="language-shell">php artisan install:api

php artisan install:broadcasting</code></span></pre><p><strong><span style="color:#000000">Laravel Reverb</span></strong></p><p>Laravel Reverb 直接为你的 Laravel 应用程序带来超快且可扩展的实时 WebSocket 通信，并提供与 Laravel 现有事件广播工具套件（例如<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flaravel.com%2Fdocs%2F11.x%2Fbroadcasting" target="_blank">Laravel Echo）</a>的无缝集成。<span style="color:#000000">此外，Reverb 通过 Redis 的发布/订阅功能支持水平扩展，允许用户在多个后端 Reverb 服务器之间分配 WebSocket 流量，所有服务器都支持单个高需求应用程序。</span></p><p><img alt="" height="250" src="https://oscimg.oschina.net/oscnet/up-1afcddc83e166e5471581763d90dca87c48.webp" width="500" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000">下面是一个压力测试示例，约 30,000 个客户端保持与 Reverb 的开放连接，其中每个连接订阅 10 个不同的通道，每秒交换超过 6,000 条消息：</span></p><p style="margin-left:0; margin-right:0; text-align:start"><img height="343" src="https://oscimg.oschina.net/oscnet/up-03c0f7168a242e4116186204b90cb8da1ed.png" width="500" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0; text-align:start">此外，用户可以在 Laravel Pulse 中监控 Reverb 服务器的性能，以更好地了解正在处理的连接和消息的数量。要深入了解 Laravel Reverb，可参阅完整的&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flaravel.com%2Fdocs%2F11.x%2Freverb" target="_blank">Reverb 文档</a>。</p><p style="margin-left:0px; margin-right:0px; text-align:start"><strong><span style="color:#000000">默认情况下的 SQLite</span></strong></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000">默认情况下，新的 Laravel 应用程序使用 SQLite 进行数据库存储，以及 Laravel 会话、缓存和队列的<code>database</code>驱动程序。此外，使用<code>composer create-project</code>命令或通过 Laravel 安装程序创建项目将自动创建 SQLite 文件并为你运行初始数据库迁移：</span></p><p style="margin-left:0px; margin-right:0px; text-align:start"><img height="267" src="https://oscimg.oschina.net/oscnet/up-3f2f9c8b6e11b58e504d090a02fccbcd80c.png" width="500" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px; text-align:start"><span style="color:#000000">这允许你在创建新的 Laravel 应用程序后立即开始构建应用程序，而无需安装额外的软件或创建额外的数据库迁移。</span></p><p style="margin-left:0px; margin-right:0px; text-align:start"><span style="color:#000000">更多详情可<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.laravel.com%2Flaravel-11-now-available" target="_blank">查看官方公告</a>。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 13 Mar 2024 07:46:46 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/282901/laravel-11-released</guid>
            <link>https://www.oschina.net/news/282901/laravel-11-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[EasyAdmin8-Laravel 更新 Laravel 版本 11.x，PHP 要求提升到 8.2]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#6a737d; margin-left:0; margin-right:0; text-align:left"><code>EasyAdmin8-Laravel</code><span>&nbsp;</span>在<span>&nbsp;</span><a href="https://gitee.com/zhongshaofa/easyadmin"><code>EasyAdmin</code></a><span>&nbsp;</span>的基础上使用 Laravel 11.x 重构，PHP 最低版本要求不低于 8.2</p><p style="color:#6a737d; margin-left:0; margin-right:0; text-align:left">请注意：当前项目采用<span>&nbsp;</span><code>laravel 11.x</code><span>&nbsp;</span>构建，如需要<span>&nbsp;</span><code>laravel 10.x</code><span>&nbsp;</span>请在分支中选择<span>&nbsp;</span><code>10.x</code></p><p style="color:#6a737d; margin-left:0; margin-right:0; text-align:left">Laravel v11.x 和 layui v2.9.x 的快速开发的后台管理系统。</p><p style="color:#6a737d; margin-left:0; margin-right:0; text-align:left">项目地址：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Feasyadmin8.top" target="_blank">https://easyadmin8.top</a></p><p style="color:#6a737d; margin-left:0; margin-right:0; text-align:left"><code>main</code>分支演示地址：<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Flaravel.easyadmin8.top%2Fadmin" target="_blank">http://laravel.easyadmin8.top/admin</a>，需要 PHP &gt;=8.2</p><p style="color:#6a737d; margin-left:0; margin-right:0; text-align:left"><code>10.x</code>分支演示地址：<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Flaravel-10.easyadmin8.top%2Fadmin" target="_blank">http://laravel-10.easyadmin8.top/admin</a>，需要 PHP &gt;=8.1</p><h3>新功能</h3><ul><li>主要更新 Laravel 版本，PHP 版本要求提升</li><li>旧版 Laravel 10.x 依赖，归入 10.x 分支</li></ul><h2>安装教程</h2><blockquote><p style="margin-left:0; margin-right:0">EasyAdmin8-Laravel 使用 Composer 来管理项目依赖。因此，在使用 EasyAdmin8-Laravel 之前，请确保你的机器已经安装了 Composer。</p></blockquote><h3>通过 git 下载安装包，composer 安装依赖包</h3><div><div><pre><span>1.下载安装包</span><span>  git clone https://github.com/wolf-leo/EasyAdmin8-Laravel</span><span>  或者</span><span>  git clone https://gitee.com/wolf18/EasyAdmin8-Laravel</span><span>2.安装依赖包（确保 PHP 版本 &gt;= 8.2 如需要本地上传则须装 fileinfo 扩展）</span><span>  在根目录下 composer install ，如果有报错信息可以使用命令 composer install --ignore-platform-reqs</span><span></span><span>3.拷贝 .example.env 文件重命名为 .env ，命令 cp .example.env .env ，修改数据库账号密码参数</span><span>4.设置 APP_KEY ，命令 php artisan key:generate</span><span>5.命令启动 (php artisan serve) 或者配置伪静态 (以 Nginx 为例)</span><span></span><span>location / {</span><span>     try_files $uri $uri/ /index.php$is_args$query_string;  </span><span>}</span></pre></div></div><ul></ul><p style="color:#6a737d; margin-left:0; margin-right:0; text-align:left">&nbsp;</p><h3>预览图</h3><p><img alt="" height="922" src="https://oscimg.oschina.net/oscnet/up-d51099cd5672e527fb9ad4b98e3aa359b77.png" width="1915" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 13 Mar 2024 07:22:46 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/282898</guid>
            <link>https://www.oschina.net/news/282898</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Dante Cloud 3.2.3.3 发布，采用领域驱动设计 (DDD) 的微服务框架]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><strong>Dante Cloud</strong> (但丁，原 Eurynome Cloud) 是一款企业级微服务架构和服务能力开发平台，是采用领域驱动模型 (DDD) 设计思想的、全面拥抱 <strong>Spring Authorization Server</strong> 的、基于 <strong>OAuth2.1</strong> 协议的、支持智能电视、IoT 等物联网设备认证的微服务架构。基于 <strong>Spring Authorization Server</strong> 1.2.2、<strong>Spring Boot</strong> 3.2.3、<strong>Spring Cloud</strong> 2023.0.0、<strong>Spring Cloud Tencent</strong> 1.13.1-2023.0.0、<strong>Spring Cloud Alibaba</strong> 2023.0.0.0、<strong>Nacos</strong> 2.3.1 等主流技术栈开发的多租户系统，遵循 <strong>SpringBoot</strong>&nbsp; 编程思想，高度模块化和可配置化。具备服务发现、配置、熔断、限流、降级、监控、多级缓存、分布式事务、工作流等功能。</p><h2>定位</h2><ul><li>构建成熟的、完善的、全面的，基于 OAuth2.1 的、前后端分离的微服务架构解决方案。</li><li>面向企业级应用和互联网应用设计开发，既兼顾传统项目的微服务化，又满足互联网应用开发建设、快速迭代的使用需求。</li><li>平台架构使用微服务领域及周边相关的各类新兴技术或主流技术进行建设，是帮助快速跨越架构技术选型、研究探索阶段的利器。</li><li>代码简洁规范、结构合理清晰，是新技术开发应用的典型的、综合性案例，助力开发人员对新兴技术的学习和掌握。</li></ul><h2>背景</h2><p><strong>这也是为什么做 Dante Cloud 的初衷</strong>：</p><ul><li>一方面是以 <strong>Dante Cloud</strong> 为载体，潜移默化地将过往项目建设的经验教训融入其中，尽可能地帮助使用者规避或者减少无效工作，提升工作效率和质量，有跟多的时间做更有意义的事情；</li><li>另一方面不断地融合和使用各类新兴技术，帮助使用者尽可能多的了解、学习和运用新技术，让技术不再成为禁锢变为进步和提升的基石。</li></ul><p><strong>这也是为什么 Dante Cloud 与其它项目不同</strong>：</p><p><strong>Dante Cloud</strong> 并不过分强调常规应用功能的堆叠与丰富化，因为作者认为纯开发工作仅占整个项目建设投入的 20%，减少开发投入、提升开发效率未必就能减少整个项目建设周期剩余 80% 工作投入。<strong>Dante Cloud</strong> 的远景目标是可以帮助使用者缩短整个项目的建设周期和减少无意义的工作投入，而不仅仅只是在开发效率方面的提升。</p><blockquote><p>Dante Cloud 一直秉承「简洁、高效、包容、务实」的理念，不会采取任何额外的手段来获取更多的 Star，绝对真实就像其产品一样。如果你认可和喜欢 Dante Cloud，请不要吝啬你的赞美，项目右上角点颗小星星。</p></blockquote><h2>代码分支说明</h2><table border="1" cellpadding="1" cellspacing="1"><tbody><tr><th><strong>分支名称</strong></th><th><strong>对应 Spring 生态版本</strong></th><th><strong>对应 JDK 版本</strong></th><th><strong>用途</strong></th><th><strong>现状</strong></th></tr></tbody><tbody><tr><td><span style="background-color:#ffffff; color:#444444">master</span></td><td><span style="background-color:#ffffff; color:#444444">Spring Boot 3.2 和 Spring Cloud 2023.0.0</span></td><td><span style="background-color:#ffffff; color:#444444">JDK 17</span></td><td><span style="background-color:#ffffff; color:#444444">主要发布分支</span></td><td><span style="background-color:#ffffff; color:#444444">可使用，但 Spring Cloud Alibaba、Tencent 等生态组件尚未发布正式版本</span></td></tr><tr><td><span style="background-color:#f8f8f8; color:#444444">develop</span></td><td><span style="background-color:#f8f8f8; color:#444444">Spring Boot 3.2 和 Spring Cloud 2023.0.0</span></td><td><span style="background-color:#f8f8f8; color:#444444">JDK 17</span></td><td><span style="background-color:#f8f8f8; color:#444444">Development 分支</span></td><td><span style="background-color:#f8f8f8; color:#444444">新功能、ISSUE 均以此分支作为开发，发布后会 PR 至 master 分支。开发分支不保证可用</span></td></tr><tr><td><span style="background-color:#ffffff; color:#444444">reactive-develop</span></td><td><span style="background-color:#ffffff; color:#444444">Spring Boot 3.2 和 Spring Cloud 2023.0.0</span></td><td><span style="background-color:#ffffff; color:#444444">JDK 21</span></td><td><span style="background-color:#ffffff; color:#444444">响应式 Development 分支</span></td><td><span style="background-color:#ffffff; color:#444444">下一代响应式微服务版本开发分支。开发分支不保证可用</span></td></tr><tr><td><span style="background-color:#f8f8f8; color:#444444">3.1.X</span></td><td><span style="background-color:#f8f8f8; color:#444444">Spring Boot 3.1 和 Spring Cloud 2022.0.X</span></td><td><span style="background-color:#f8f8f8; color:#444444">JDK 17</span></td><td><span style="background-color:#f8f8f8; color:#444444">Stable 代码分支</span></td><td><span style="background-color:#f8f8f8; color:#444444">稳定可用版本分支，2024 年 5 月，Spring Boot 3.3 发布后将会停止维护</span></td></tr><tr><td><span style="background-color:#ffffff; color:#444444">2.7.X</span></td><td><span style="background-color:#ffffff; color:#444444">Spring Boot 2.7 和 Spring Cloud 2021.0.X</span></td><td><span style="background-color:#ffffff; color:#444444">JDK 8</span></td><td><span style="background-color:#ffffff; color:#444444">历史代码分支</span></td><td><span style="background-color:#ffffff; color:#444444">基于 Spring Boot 2.7 时代开发的代码分支，不再维护</span></td></tr><tr><td><span style="background-color:#f8f8f8; color:#444444">spring-security-oauth2</span></td><td><span style="background-color:#f8f8f8; color:#444444">Spring Boot 2.6 和 Spring Cloud 2021.0.X</span></td><td><span style="background-color:#f8f8f8; color:#444444">JDK 8</span></td><td><span style="background-color:#f8f8f8; color:#444444">历史代码分支</span></td><td><span style="background-color:#f8f8f8; color:#444444">基于原 Spring Security OAuth2 实现的微服务，因相关组件均不在维护，所以该版本不再维护</span></td></tr></tbody></table><h2>[1] 软件信息</h2><ul><li>软件组成 
  <ul><li>核心组件：<a href="https://gitee.com/herodotus/dante-engine">https://gitee.com/herodotus/dante-engine</a>（已上传中央库）</li><li>后端工程：<a href="https://gitee.com/herodotus/dante-engine">https://gitee.com/dromara/dante-cloud</a></li><li>前端工程：<a href="https://gitee.com/herodotus/dante-engine">https://gitee.com/herodotus/dante-cloud-ui</a></li></ul></li><li>软件生态 
  <ul><li>Dante&nbsp;Cloud&nbsp;Athena（Dante&nbsp;Cloud&nbsp;单体版）：<a href="https://gitee.com/herodotus/dante-engine">https://gitee.com/herodotus/dante-cloud-athena</a></li><li>Dante&nbsp;OSS （像&nbsp;JPA&nbsp;一样操作&nbsp;OSS）：<a href="https://gitee.com/herodotus/dante-engine">https://gitee.com/herodotus/dante-oss</a></li></ul></li><li>软件文档 
  <ul><li>官方文档：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.herodotus.cn" target="_blank">https://www.herodotus.cn</a></li><li>技术手册： 
    <ol><li>《Dante Cloud 及相关知识学习方法和学习路径的建议》</li><li>《OAuth 2 中的 Scope 与 Role 深度解析》</li><li>《Spring Boot 3 之自动配置与注入顺序控制》</li><li>《Spring Cloud 之 Session 共享及一致性处理》</li><li>《OAuth 2 中的鉴权和动态接口鉴权》</li><li>《Spring Boot 3 之 Rest 接口传参方式详解》</li><li>更多详情参见：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.herodotus.cn%2Fcookbook%2F" target="_blank">https://www.herodotus.cn/cookbook/</a></li></ol></li></ul></li></ul><h2>[2] 本次更新内容</h2><ul><li>【<strong>主要更新</strong>】 
  <ul><li>[升级] Spring Boot 版本升级至 3.2.3</li><li>[升级] Spring Boot Admin 版本升级至 3.2.2</li><li>[升级] Spring Authorization Server 版本升级至 1.2.2</li><li>[升级] Spring Cloud Alibaba 版本升级至 2023.0.0.0-RC1</li><li>[升级] Spring Cloud Tencent 版本升级至 1.13.0-2023.0.0-SNAPSHOT</li><li>[升级] Nacos 版本升级至 2.3.1</li><li>[升级] 升级 Antisamy XSS 防护策略配置文件</li></ul></li><li>其它更新 
  <ul><li>[新增] Nacos 2.3.1 SQL 脚本</li><li>[修复] 修复目前已知的所有 Spring Cloud Alibaba Sentinel 与 Spring Cloud 2023.0.0 不兼容问题和代码</li><li>[修复] 恢复所有 Spring Cloud Alibaba Sentinel 相关支持代码及配置</li><li>[修复] 修复前端设计自定义组件模块在新版本 vue 和 vite 环境下，因 Typescirpt 类型错误导致编译失败问题</li><li>[修复] 修复前端粒子效果卡顿问题</li><li>[修复] 修复前端静态路由自动校验错误</li><li>[修复] 临时修复前端 tsparticles 组件最新版本自身 ISSUE 导致前端页面打开没有响应问题</li><li>[修复] 修复伴随 Spring Boot 版本，引起的 Netty 版本升级，导致的 Spring Cloud Tencent 代码不兼容运行出错问题。</li><li>[修复] 临时修复 Spring Cloud Tencent 配置逻辑问题，导致服务启动出现 `The bean 'restTemplateCustomizer', defined in class path resource [com/tencent/cloud/polaris/loadbalancer/PolarisLoadBalancerAutoConfiguration.class], could not be registered. A bean with that name has already been defined in class path resource [org/springframework/cloud/client/loadbalancer/LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration.class] and overriding is disabled</li><li>[修复] 修复 Spring Cloud Tencent 配置错误，导致 Spring Cloud Tencent 熔断相关代码无法注入问题。</li><li>[修复] 临时修复 Spring Cloud Tencent RestTemplateCustomizer bean 冲突导致服务无法正常启动问题</li><li>[修复] 修复伴随 Spring Boot 版本，起的 Netty 版本升级，导致的 Spring Cloud Tencent 代码不兼容运行出错问题。</li><li>[修复] 修复前端提示，在 「module」 模式下无法读取 .eslintrc.js 问题</li><li>[优化] 调整 Spring Cloud Tencent 工程日志输出配置</li><li>[优化] 代码适配 Hutool 6.0.0-M11</li><li>[优化] 去除核心 Dependencies 中无用的依赖配置</li><li>[优化] 优化 Cache 相关模块代码，修改部分包名、代码以及注解的使用，符合 Spring 规范的命名和使用方式</li><li>[优化] 彻底清除系统中 facility 相关模块依赖的 bcpkix-jdk15on，解决 bcpkix 不同版本依赖冲突导致的前后端数据加密异常问题。fix: #I8XHFK</li><li>[优化] 清除为临时解决 SMS4J 启动输出错误信息的相关配置</li><li>[安全] 增加 Hutool 5.X pom 配置，修复 SMS4J 依赖 Hutool 低版本携带的 CVE 问题。</li><li>[安全] 修复 Jayway JsonPath 安全漏洞 (CVE-2023-51074) fix: #I8XWGJ</li><li>[升级] Nacos docker 镜像版本升级至 v2.3.1</li><li>[升级] minio docker 镜像版本升级至 RELEASE.2024-03-07T00-43-48Z</li></ul></li><li>【<strong>依赖更新</strong>】 
  <ul><li>[升级] JetCache 版本升级至 2.7.5</li><li>[升级] maven-gpg-plugin 版本升级至 3.2.0</li><li>[升级] redisson 版本升级至 3.27.2</li><li>[升级] springdoc 版本升级至 2.4.0</li><li>[升级] aws-java-sdk-s3 版本升级至 1.12.676</li><li>[升级] camunda-bpm-spring-boot-starter-rest 版本升级至 7.21.0-alpha4</li><li>[升级] org.json 版本升级至 20240303</li><li>[升级] git-commit-id-maven-plugin 版本升级至 8.0.1</li><li>[升级] minio 版本升级至 8.5.9</li><li>[升级] bootstrap webjars 版本升级至 5.3.3</li><li>[升级] alipay-sdk-java 版本升级至 4.38.221.ALL</li><li>[升级] fastjson2 版本升级至 2.0.47</li><li>[升级] xnio 版本升级至 3.8.13.Final</li><li>[升级] hutool 版本升级至 6.0.0-M11</li><li>[升级] okio 版本升级至 3.8.0</li><li>[升级] antisamy 版本升级至 1.7.5</li><li>[升级] zxing 版本升级至 3.5.3</li><li>[升级] influxdb-client 版本升级至 7.0.0</li><li>[升级] sqlite-jdbc 版本升级至 3.45.1.0</li><li>[升级] sms4j 版本升级至 3.1.1</li><li>[升级] vue webjars 版本升级至 3.4.15</li><li>[升级] mysql-connector-j 版本升级至 8.3.0</li></ul></li></ul><h2>[3] Dante Cloud 特性</h2><h3>1. 核心基础依赖便捷切换</h3><ul><li>新增 <code>Spring Cloud Tencent</code> 和 <code>Spring Cloud</code> 原生微服务全家桶等两种基础设施支持。</li><li>新增 <code>Spring Cloud Alibaba</code>、<code>Spring Cloud Tencent</code> 和 <code>Spring Cloud</code> 原生微服务全家桶三种基础设值切换能力，可以以相对便捷的方式切换使用 Alibaba、Tencent、Spring 等基础设施环境。可根据自身实际需求选择，不再局限于只能在某一种基础设施环境中运行。</li></ul><h3>2. <code>Spring Authorization Server</code> 全特性支持</h3><ul><li>基于 <code>Spring Authorization Server</code> 和 <code>Spring Data JPA</code> 实现多租户系统架构， 支持 Database 和 Schema 两种模式。</li><li>基于 <code>Spring Data JPA</code>，重新构建 <code>Spring Authorization Server</code> 基础数据存储代码，替代原有 JDBC 数据访问方式，破除 <code>Spring Authorization Server</code> 原有数据存储局限，扩展为更符合实际应用的方式和设计。</li><li>基于 <code>Spring Authorization Server</code>，在 OAuth 2.1 规范基础之上，增加自定义 <code>Resource Ownership Password</code> (密码) 认证模式，以兼容现有基于 OAuth 2 规范的、前后端分离的应用，支持 <code>Refresh Token</code> 的使用。</li><li>基于 <code>Spring Authorization Server</code>，在 OAuth 2.1 规范基础之上，增加自定义 <code>Social Credentials</code> (社会化登录) 认证模式，支持手机短信验证码、微信小程序、基于 <code>JustAuth</code> 的第三方应用登录， 支持 <code>Refresh Token</code> 的使用。</li><li>扩展 <code>Spring Authorization Server</code> 默认的 <code>Client Credentials</code> 模式，实现真正的使用 Scope 权限对接口进行验证。 增加客户端 Scope 的权限配置功能，并与已有的用户权限体系解耦</li><li>支持 <code>Spring Authorization Server</code><code>Authorization Code PKCE</code> 认证模式</li><li>在 <code>Spring Authorization Server</code> 的标准的 <code>JWT Token</code> 加密校验方式外，支持基于自定义证书的 <code>JWT Token</code> 加密校验方式，可通过配置动态修改。</li><li>支持 <code>Opaque Token</code> (不透明令牌) 格式及校验方式，降低 <code>JWT Token</code> 被捕获解析的风险。可通过修改配置参数，设置默认 Token 格式是采用 <code>Opaque Token</code> 格式还是 <code>JWT Token</code> 格式。</li><li>全面支持 <code>OpenID Connect</code> (OIDC) 协议，系统使用时可根据使用需求，通过前端开关配置，快速切换 OIDC 模式和传统 OAuth2 模式</li><li>深度扩展 <code>Authorization Code</code>、<code>Resource Ownership Password</code>、<code>Social Credentials</code> 几种模式，全面融合 <code>IdToken</code>、<code>Opaque Token</code>、<code>JWT Token</code> 与现有权限体系，同时提供 <code>IdToken</code> 和，自定义 Token 扩展两种无须二次请求的用户信息传递方式，减少用户信息的频繁请求。</li><li>自定义 <code>Spring Authorization Server</code> 授权码模式登录认证页面和授权确认页面，授权码模式登录采用数据加密传输。支持多种验证码类型，暂不支持行为验证码。</li><li>新增基于 <code>Spring Authorization Server</code> 的、支持智能电视、IoT 等物联网设备认证模式</li><li>无须在代码中配置 <code>Spring Security</code> 权限注解以及权限方法，即可实现接口鉴权以及权限的动态修改。采用分布式鉴权方案，规避 Gateway 统一鉴权的压力以及重复鉴权问题</li><li>OAuth2 UserDetails 核心数据支持直连数据库获取和 Feign 远程调用两种模式。OAuth2 直连数据库模式性能更优，Feign 访问远程调用可扩展性更强。可通过配置动态修改采用策略方式。</li></ul><h3>3. 全体系化应用特性集成</h3><ul><li>微服务架构全体系 Session 共享，实现 Spring Authorization Server、多实例服务、WebSocket、自定义 Session 以及大前端 Session 的统一。<code>微服务架构下的 Session 可以选择不用，但是不能没有</code>。</li><li>混合国密 <code>SM2</code> (非对称) 和 <code>SM4</code> (对称加密) 算法，实现基于数字信封技术的秘钥动态生成加密传输。利用「一人一码机制」，实现前后端数据进行动态加密传输与。Spring Authorization Server OAuth 2.1 授权模式深度融合，构建统一体系的数据传输加密。</li><li>全面整合 <code>@PreAuthorize</code> 注解权限与 <code>URL</code> 权限，通过后端动态配置，无须在代码中配置 <code>Spring Security</code> 权限注解以及权限方法，可实现接口鉴权以及权限的统一管理和动态修改</li><li>融合 Spring Cloud Stream 和 WebSocket，以优雅的方式实现 WebSocket 服务多实例环境下，点对点、广播消息跨实例推送，在线用户实时统计，完美支持 WebSocket 集群化应用。</li><li>借鉴 JPA 标准化设计思想，提取和抽象 OSS 标准化操作，形成统一的 Java OSS API 规范。封装可操作任意厂商的、统一的 REST API，构建定义统一、动态实现的应用模式（类似于 Hibernate 是 JPA 的一种实现，Hibernate 以 Dialect 方式支持不同的数据库一样），在不修改代码的情况下通过修改配置实现 OSS 的无缝切换和迁移</li><li>自研基于 <code>JetCache</code> 分布式两级缓存，完美实现 JPA Hibernate 二级缓存，支持各类查询数据缓存以及 JPA <code>@ManyToMany</code>， <code>@ManyToOne</code>等关联查询。完美解决 Spring Cache 仅使用本地缓存、创建 Key 繁琐和分页数据无法更新的问题。支持多实例服务本地缓存和远程缓存数据同步，同时支持 Mybatis Plus 二级缓存</li><li>平台统一错误处理，支持自定义错误码体系，有效集成 <code>OAuth2</code>、<code>Spring Validation</code> 等多方错误体系并有机整合 HTTP 状态码。采用 Customizer 模式，采用错误码自动计算和创建模式，支持代码模块级错误码灵活定义扩展。响应结果更加多样灵活，反馈结果也更加人性化，便于理解和定位问题。</li><li>全体系 OkHttp 、HttpClient 统一化集成，实现 OkHttp 、HttpClient 与 RestTemplate 、Openfeign 一体化融合。统一使用 Feign 配置参数，对 OkHttp 、HttpClient 进行参数设定，可策略化选择设置使用 OkHttp 或 HttpClient 作为 RestTemplate 、Openfeign 统一的基础 HttpClient</li></ul><h3>4. 采用 <code>pnpm monorepo</code> 重构前端</h3><ul><li>未使用任何流行开源模版，使用全新技术栈，完全纯"手写"全新前端工程。</li><li>借鉴参考流行开源版本的使用和设计，新版前端界面风格和操作习惯尽量与当前流行方式统一。</li><li>充份使用 Typescript 语言特性，解决大量类型校验问题，尽可能规避 "any" 式的 Typescript 编程语言使用方式。</li><li>充份使用 Composition Api 和 Hooks 等 Vue3 框架新版特性进行代码编写。</li><li>充份利用 Component、Hooks 以及 Typescript 面向对象等特性，抽取通用组件和代码，尽可能降低工程重复代码。</li><li>对较多 Quasar 基础组件和应用功能组件进行封装，以方便代码的统一修改维护和开发使用。</li><li>对生产模式下，对基于 Vite3 的工程打包进行深度性能优化。</li><li>提供以 docker-compose 方式，对工程生产代码进行容器化打包和部署。</li><li>该版本基于 pnpm，采用 monorepo 模式对前端工程进行重构。构建 monorepo 版本前端，是为扩展更多功能、增加应用级功能做铺垫</li><li>抽取 utils、components、apis、bpmn-designer 等相关代码，形成共享模块。</li><li>共享模块已进行优化配置，可编译成独立的组件，单独以组件形式进行发布。</li><li>代码以共享模块的方式进行单独维护开发，降低现有工程代码复杂度，便于后续功能的扩展和代码的复用。</li></ul><hr><p style="color:black; margin-left:0; margin-right:0; text-align:left"><strong>欢迎 Star 一波来支持我们！</strong></p><p style="color:black; margin-left:0; margin-right:0; text-align:left"><strong>Gitee</strong>：<a href="https://gitee.com/dromara/dante-cloud">https://gitee.com/dromara/dante-cloud</a><span>&nbsp;</span></p><p style="color:black; margin-left:0; margin-right:0; text-align:left"><strong>Github</strong>：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdromara%2Fdante-cloud" target="_blank">https://github.com/dromara/dante-cloud</a></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 13 Mar 2024 06:28:18 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/282891/dante-cloud-3-2-3-3-released</guid>
            <link>https://www.oschina.net/news/282891/dante-cloud-3-2-3-3-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[IntelliJ IDEA 2023.3.5 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>IntelliJ IDEA 2023.3.5 现已发布，这是一个错误修复。具体更新内容包括：</p><ul style="margin-left:0; margin-right:0"><li>修复了导致 Linux 上屏幕缩放不稳定的问题。[&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fyoutrack.jetbrains.com%2Fissue%2FIDEA-341318%2F" target="_blank">IDEA-341318</a>&nbsp;]</li><li>Problems tool 窗口中的 Project Errors 选项卡不再错误地继续显示已解决的问题。[&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fyoutrack.jetbrains.com%2Fissue%2FIDEA-343358%2FJava-Problems-stuck-in-Project-Problems-view" target="_blank">IDEA-343358</a>&nbsp;]</li><li>Generate Constructor 对话框中的 Select None 按钮再次响应并按预期工作。[&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fyoutrack.jetbrains.com%2Fissue%2FIDEA-340046%2FUI-buttons-problem" target="_blank">IDEA-340046</a>&nbsp;]</li><li>修复了安装或卸载语言包时 Maven wrapper&nbsp;设置变得无效的问题。[&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fyoutrack.jetbrains.com%2Fissue%2FIDEA-338796%2FMaven-wrapper-settings-become-invalid-after-language-pack-installation-deinstallation" target="_blank">IDEA-338796</a>&nbsp;]&nbsp;</li><li>gutter icons 再次在 GraphQL 模式文件中正确显示。[&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fyoutrack.jetbrains.com%2Fissue%2FIDEA-348051%2F" target="_blank">IDEA-348051</a>&nbsp;]</li></ul><p>详情可<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.jetbrains.com%2Fidea%2F2024%2F03%2Fintellij-idea-2023-3-5%2F" target="_blank">查看官方博客</a>。</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 13 Mar 2024 06:19:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/282889/intellij-idea-2023-3-5-released</guid>
            <link>https://www.oschina.net/news/282889/intellij-idea-2023-3-5-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[MyData Blade v0.7.2 更新日志]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>v0.7.2&nbsp;完善数据集成场景：支持环境变量的定时更新、跨环境数据集成、任务跨环境复制</p><h3>新功能</h3><ul><li>项目管理 / 集成管理 
  <ul><li>增加变量任务管理，实现定时从接口更新变量值；</li><li>任务支持跨环境同步数据，支持多环境的数据集成，同时业务数据按环境隔离；</li><li>复制任务，到其他环境，简化重复配置操作；</li></ul></li></ul><h3><strong>优化</strong></h3><ul><li>升级后端 SpringBlade 框架版本； 
  <ul><li>去掉框架示例功能；</li></ul></li><li>升级前端 Sword 框架版本； 
  <ul><li>去掉框架示例功能；</li></ul></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Wed, 13 Mar 2024 05:16:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/282884/mydata-blade-0-7-2-released</guid>
            <link>https://www.oschina.net/news/282884/mydata-blade-0-7-2-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Spring AI 0.8.1 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Spring AI 0.8.1 现已发布，一些亮点更新包括：</p><p><strong>Google Gemini</strong></p><ul><li>对 Gemini 的多模态功能支持。</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.spring.io%2Fspring-ai%2Freference%2Fapi%2Fclients%2Fvertexai-gemini-chat.html%23_multimodal" target="_blank">在此处阅读更多相关信息</a>，并查看展示许多 Gemini 功能的<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ftzolov%2Fspring-ai-aot-tests%2Fblob%2Fmain%2Fvertexai-gemini-aot-demo%2Fsrc%2Fmain%2Fjava%2Forg%2Fspringframework%2Fai%2Faot%2Ftest%2Fvertexai%2Fgemini%2FVertexAiGeminiAotDemoApplication.java" target="_blank">示例应用程序</a>。</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.spring.io%2Fspring-ai%2Freference%2Fapi%2Fclients%2Fvertexai-gemini-chat.html" target="_blank">流式和非流式聊天客户端</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.spring.io%2Fspring-ai%2Freference%2Fapi%2Fclients%2Ffunctions%2Fvertexai-gemini-chat-functions.html" target="_blank">函数调用</a></li><li>Gemini 应用程序的&nbsp;Native compilation</li></ul><p>值得注意的是，Google Vertex Palm2 支持将在 Spring AI 的未来版本中删除，因为 Google 将在 6 个月后停止使用该机型。</p><p><strong>Mistral AI</strong></p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.spring.io%2Fspring-ai%2Freference%2Fapi%2Fclients%2Fmistralai-chat.html" target="_blank">可重试的流式和非流式聊天客户端</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.spring.io%2Fspring-ai%2Freference%2Fapi%2Fclients%2Ffunctions%2Fmistralai-chat-functions.html" target="_blank">函数调用</a></li><li>Mistral 应用程序的&nbsp;Native compilation</li></ul><p><strong>函数调用改进</strong></p><p>对函数调用进行了多项改进，并创建了一个<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ftzolov%2Fspring-ai-function-calling-portability" target="_blank">示例</a>程序。</p><p><strong>OpenAI 改进</strong></p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.spring.io%2Fspring-ai%2Freference%2Fapi%2Ftranscriptions%2Fopenai-transcriptions.html" target="_blank">添加了对音频转录</a>的支持。</li><li>添加了对由于 transient errors 而<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.spring.io%2Fspring-ai%2Freference%2Fapi%2Fclients%2Fopenai-chat.html%23_retry_properties" target="_blank">重试请求的</a>支持。</li></ul><p><strong>Azure 改进</strong></p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.spring.io%2Fspring-ai%2Freference%2Fapi%2Fclients%2Ffunctions%2Fazure-open-ai-chat-functions.html" target="_blank">添加了对函数调用的</a>支持。</li><li>Azure AI 应用程序的 Native compilation</li><li>新的<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ftzolov%2Fspring-ai-aot-tests%2Fblob%2Fmain%2Fazure-openai-aot-demo%2Fsrc%2Fmain%2Fjava%2Forg%2Fspringframework%2Fai%2Faot%2Ftest%2Fazure%2Fopenai%2FAzureOpenaiAotDemoApplication.java" target="_blank">示例应用程序</a>展示了这些功能。</li><li>注意，自动配置属性已更改。名为「spring.ai.azure.openai.chat.options.model」的属性现在是「spring.ai.azure.openai.chat.options.deployment-name」。</li></ul><p><strong>Qdrant Vector Database</strong></p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fqdrant.tech%2F" target="_blank">Qdrant</a>&nbsp;是一个用 Rust 编写的开源向量数据库和搜索引擎，以其快速、可扩展的向量相似性搜索服务而闻名。Qdrant 提供了这个<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.spring.io%2Fspring-ai%2Freference%2Fapi%2Fvectordbs%2Fqdrant.html" target="_blank">新的实现</a>。</p><p><strong>Spring Intializr</strong></p><p>可以在&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fstart.spring.io%2F" target="_blank">https://start.spring.io</a>&nbsp;上为不同的 AI 模型和向量数据库创建新的 Spring AI 应用程序。</p><p>更多详情可<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fspring.io%2Fblog%2F2024%2F03%2F12%2Fspring-ai-0-8-1-released" target="_blank">查看官方博客</a>。</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 13 Mar 2024 02:29:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/282847/spring-ai-0-8-1-released</guid>
            <link>https://www.oschina.net/news/282847/spring-ai-0-8-1-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[EasyGoAdmin 敏捷开发框架 Beego+AntdVue 版本 v2.5.0 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff; color:#333333">v2.5.0 更新内容：</span><br><span style="background-color:#ffffff; color:#333333">1、go.mod 依赖管理导入 Excel 操作类依赖；</span><br><span style="background-color:#ffffff; color:#333333">2、新增职级管理导出 Excel 数据的功能；</span><br><span style="background-color:#ffffff; color:#333333">3、新增职级管理导入 Excel 模板文件；</span><br><span style="background-color:#ffffff; color:#333333">4、新增职级管理导入 Excel 数据的功能；</span><br><span style="background-color:#ffffff; color:#333333">5、新增职级管理导入、导出和下载模板的路由；</span><br><span style="background-color:#ffffff; color:#333333">6、修复近期用户使用过程中反馈的 BUG；</span></p><div><div><div><h2>项目介绍</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">一款 Go 语言基于 Beego、Vue3、AntDesign、MySQL 等框架精心打造的一款模块化、插件化、高性能的前后端分离架构敏捷开发框架，可快速搭建前后端分离后台管理系统，本着简化开发、提升开发效率的初衷，框架自研了一套个性化的组件，实现了可插拔的组件式开发方式，同时为了敏捷快速开发，框架特地集成了代码生成器，完全自主研发了自定义 GO 后端服务模板和前端 Vue 自定义模板，可以根据已建好的表结构，可以快速的一键生成整个模块的所有代码和增删改查等等功能业务，真正实现了低代码开发方式，极大的节省了人力成本的同时提高了开发效率，缩短了研发周期，是一款真正意义上实现组件化、可插拔式的敏捷开发框架。</p><h2>内置模块</h2><ul><li>用户管理：用于维护管理系统的用户，常规信息的维护与账号设置。</li><li>角色管理：角色菜单管理与权限分配、设置角色所拥有的菜单权限。</li><li>菜单管理：配置系统菜单，操作权限，按钮权限标识等。</li><li>职级管理：主要管理用户的职级。</li><li>岗位管理：主要管理用户担任职务。</li><li>部门管理：配置系统组织机构，树结构展现支持数据权限。</li><li>字典管理：对系统中常用的较为固定的数据进行统一维护。</li><li>配置管理：对系统的常规配置信息进行维护，网站配置管理功能进行统一维护。</li><li>通知公告：系统通知公告信息发布维护。</li><li>操作日志：系统正常操作日志记录和查询；系统异常信息日志记录和查询。</li><li>登录日志：系统登录日志记录查询包含登录异常。</li><li>代码生成：一键生成模块 CRUD 的功能，包括后端和前端等相关代码。</li><li>案例演示：常规代码生成器一键生成后的演示案例。</li></ul><h2>软件信息</h2><ul><li>软件名称：EasyGoAdmin 敏捷开发框架 Beego+AntdVue 版本</li><li>官网网址：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.easygoadmin.vip" target="_blank">https://www.easygoadmin.vip</a></li><li>文档网址：<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fdocs.beego.antdvue.easygoadmin.vip" target="_blank">http://docs.beego.antdvue.easygoadmin.vip</a></li><li>演示地址：<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmanage.beego.antdvue.easygoadmin.vip" target="_blank">http://manage.beego.antdvue.easygoadmin.vip</a></li></ul><h2>版本说明</h2><table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:0px; border:none; box-sizing:border-box; color:#40485b; display:block; font-family:-apple-system,BlinkMacSystemFont,&quot;Segoe UI&quot;,Helvetica,Arial,&quot;Apple Color Emoji&quot;,&quot;Segoe UI Emoji&quot;,&quot;Segoe UI Symbol&quot;,&quot;Liberation Sans&quot;,&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,&quot;Hiragino Sans GB&quot;,&quot;Wenquanyi Micro Hei&quot;,&quot;WenQuanYi Zen Hei&quot;,&quot;ST Heiti&quot;,SimHei,SimSun,&quot;WenQuanYi Zen Hei Sharp&quot;,sans-serif; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; line-height:inherit; margin:0px 0px 16px; max-width:100%; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:635px; word-break:initial; word-spacing:0px"><tbody><tr><th>版本名称</th><th>版本说明</th><th>版本地址</th></tr></tbody><tbody><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">GoFrame+Layui 混编版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 GoFrame、Layui 等框架研发</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/easygoadmin/EasyGoAdmin_GoFrame_Layui">https://gitee.com/easygoadmin/EasyGoAdmin_GoFrame_Layui</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Beego+Layui 混编版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 Beego、Layui 等框架研发</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/easygoadmin/EasyGoAdmin_Beego_Layui">https://gitee.com/easygoadmin/EasyGoAdmin_Beego_Layui</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Gin+Layui 混编版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 Gin、Layui 等框架研发</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/easygoadmin/EasyGoAdmin_Gin_Layui">https://gitee.com/easygoadmin/EasyGoAdmin_Gin_Layui</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Iris+Layui 混编版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 Iris、Layui 等框架研发</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/easygoadmin/EasyGoAdmin_Iris_Layui">https://gitee.com/easygoadmin/EasyGoAdmin_Iris_Layui</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Echo+Layui 混编版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 Echo、Layui 等框架研发</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/easygoadmin/EasyGoAdmin_Echo_Layui">https://gitee.com/easygoadmin/EasyGoAdmin_Echo_Layui</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Revel+Layui 混编版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 Revel、Layui 等框架研发</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/easygoadmin/EasyGoAdmin_Revel_Layui">https://gitee.com/easygoadmin/EasyGoAdmin_Revel_Layui</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">GoFrame+EleVue 前后端分离版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 GoFrame、Vue、ElementUI 等框架研发前后端分离版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/easygoadmin/EasyGoAdmin_GoFrame_EleVue">https://gitee.com/easygoadmin/EasyGoAdmin_GoFrame_EleVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Beego+EleVue 前后端分离版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 Beego、Vue、ElementUI 等框架研发前后端分离版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/easygoadmin/EasyGoAdmin_Beego_EleVue">https://gitee.com/easygoadmin/EasyGoAdmin_Beego_EleVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Gin+EleVue 前后端分离版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 Gin、Vue、ElementUI 等框架研发前后端分离版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/easygoadmin/EasyGoAdmin_Gin_EleVue">https://gitee.com/easygoadmin/EasyGoAdmin_Gin_EleVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Iris+EleVue 前后端分离版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 Iris、Vue、ElementUI 等框架研发前后端分离版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/easygoadmin/EasyGoAdmin_Iris_EleVue">https://gitee.com/easygoadmin/EasyGoAdmin_Iris_EleVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Echo+EleVue 前后端分离版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 Echo、Vue、ElementUI 等框架研发前后端分离版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/easygoadmin/EasyGoAdmin_Echo_EleVue">https://gitee.com/easygoadmin/EasyGoAdmin_Echo_EleVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Revel+EleVue 前后端分离版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 Revel、Vue、ElementUI 等框架研发前后端分离版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/easygoadmin/EasyGoAdmin_Revel_EleVue">https://gitee.com/easygoadmin/EasyGoAdmin_Revel_EleVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">GoFrame+AntdVue 前后端分离版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 GoFrame、Vue、AntDesign 等框架研发前后端分离版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/easygoadmin/EasyGoAdmin_GoFrame_AntdVue">https://gitee.com/easygoadmin/EasyGoAdmin_GoFrame_AntdVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Beego+AntdVue 前后端分离版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 Beego、Vue、AntDesign 等框架研发前后端分离版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/easygoadmin/EasyGoAdmin_Beego_AntdVue">https://gitee.com/easygoadmin/EasyGoAdmin_Beego_AntdVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Gin+AntdVue 前后端分离版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 Gin、Vue、AntDesign 等框架研发前后端分离版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/easygoadmin/EasyGoAdmin_Gin_AntdVue">https://gitee.com/easygoadmin/EasyGoAdmin_Gin_AntdVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Iris+AntdVue 前后端分离版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 Iris、Vue、AntDesign 等框架研发前后端分离版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/easygoadmin/EasyGoAdmin_Iris_AntdVue">https://gitee.com/easygoadmin/EasyGoAdmin_Iris_AntdVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Echo+AntdVue 前后端分离版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 Echo、Vue、AntDesign 等框架研发前后端分离版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/easygoadmin/EasyGoAdmin_Echo_AntdVue">https://gitee.com/easygoadmin/EasyGoAdmin_Echo_AntdVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Revel+AntdVue 前后端分离版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 Revel、Vue、AntDesign 等框架研发前后端分离版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/easygoadmin/EasyGoAdmin_Revel_AntdVue">https://gitee.com/easygoadmin/EasyGoAdmin_Revel_AntdVue</a></td></tr></tbody></table><h2>模块展示</h2><p style="margin-left:0; margin-right:0"><br><img alt="" height="1080" src="https://oscimg.oschina.net/oscnet/up-3896f194b821431b6dabce7ab11b3981cb3.png" width="1920" referrerpolicy="no-referrer"></p></div></div></div></div>
                                    ]]>
            </description>
            <pubDate>Tue, 12 Mar 2024 22:49:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/282820</guid>
            <link>https://www.oschina.net/news/282820</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[酷瓜云课堂（内网版）v1.1.2 发布，局域网在线教育平台]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><img alt="酷瓜云课堂-局域网学习平台" src="https://portal-1255691183.file.myqcloud.com/img/content/624528cd8be23.png" referrerpolicy="no-referrer"></p><h3>更新内容</h3><ul><li>增加弹幕管理</li><li>增加图文背景水印</li><li>增加内容审核开关</li><li>单元测评增加题型过滤</li><li>增加 post 方式传递 csrf_token</li><li>Response 增加 unauthorized() 返回</li><li>删除 chapter 中 resource_count,consult_count 属性</li><li>删除 resource 表 chapter_id 属性</li><li>删除 Article 中多余的 settings 属性</li><li>重新统计 course 中 resource_count</li><li>修正 home 模块编辑器图片上传</li><li>修正直播回放获取播放地址参数问题</li><li>图文和文章增加 markdown 支持</li><li>精简 CsrfToken 白名单</li><li>拆解优化创建表脚本</li><li>优化 Storage.php</li></ul><h3>系统介绍</h3><p>酷瓜云课堂内网版，采用 C 扩展框架 Phalcon 开发，使用本地基础服务，无营销相关功能，主要适用于公司、集团、机关、学校等内部网络环境使用。</p><h3>系统功能</h3><p>实现了点播、直播、专栏、问答、积分等。</p><p>友情提示：</p><ul><li>演示系统配置低，带宽有限，切莫压测</li><li>课程数据来源于网络（无实质内容）</li><li>管理后台已禁止数据提交，私密配置已过滤</li></ul><p>系统演示：</p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flan-edu.koogua.com" target="_blank">前台演示</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flan-edu.koogua.com%2Fadmin" target="_blank">后台演示</a></li></ul><p>演示账号：100015@163.com / 123456 （前后台通用）</p><h3>项目组件</h3><ul><li>后台框架：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fphalcon.io" target="_blank">phalcon 3.4.5</a></li><li>前端框架：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flayui.dev" target="_blank">layui 2.9.3</a></li><li>全文检索：<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.xunsearch.com" target="_blank">xunsearch 1.4.9</a></li><li>基础依赖：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fphp.net" target="_blank">php7.3</a>， <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmysql.com" target="_blank">mysql5.7</a>， <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fredis.io" target="_blank">redis5.0</a></li></ul><h3>项目文档</h3><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.koogua.com%2Fpage%2Fwiki" target="_blank">运行环境搭建</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.koogua.com%2Fpage%2Fwiki" target="_blank">系统服务配置</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.koogua.com%2Fpage%2Fwiki" target="_blank">客户终端配置</a></li></ul><h3>产品试用</h3><p>申请地址：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.koogua.com%2Fpage%2Ftrial" target="_blank">点击申请</a></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 12 Mar 2024 11:25:43 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/282772</guid>
            <link>https://www.oschina.net/news/282772</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[PDManer [元数建模]-v4.9.2 发布：一款简单好用的数据库建模平台]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h1>特别说明</h1><hr><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.pdmaas.cn" target="_blank"><strong>平台公云版及企业私云版已经发布，增加多人团队协作支持，点击这里了解</strong></a></p><hr><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>[PDManer 元数建模 - v4]</strong>，历时五年，持续升级，工匠精神，做一款简单好用的数据库建模平台。</p><blockquote><p style="margin-left:0; margin-right:0">元数建模平台，使用 React+Electron+Java 技术体系构建。</p></blockquote><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">[PDMan-v2] --&gt; [CHINER-v3] --&gt; [PDManer-v4]，连续五年，一直保持很好的传承和延续。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">PDManer 元数建模软件 (v4 版本）介绍：<a href="https://my.oschina.net/skymozn/blog/5515012">PDManer [元数建模]-v4.0.0 发布：一款简单好用的数据库建模平台</a></p><h1>4.9.2 版本升级内容清单</h1><hr><ul><li>1.[新增功能] 新增数据库设计规范检查功能</li><li>2.[缺陷修复] 修复关系图某些场景下无法搜索的问题</li><li>3.[缺陷修复] 修复修改数据域后数据类型没有更新的问题</li><li>4.[缺陷修复] 修复创建视图时选择数据表时搜索失效的问题</li></ul><h2>此前 4.9.1 升级内容</h2><ul><li><ol><li>[新增功能] 物理表设计扩展字段增加多种格式支持，如下拉框，数字框，单选等</li></ol></li><li><ol><li>[缺陷修复] 修正 ORACLE 数据库通过 all_tables 读取数据库元数据信息</li></ol></li><li><ol><li>[新增功能] DM (达梦）数据库通过 all_tables 读取数据库元数据信息</li></ol></li><li><ol><li>[新增功能] DB2 数据库通过 sysibm.systables 读取数据库元数据信息</li></ol></li><li><ol><li>[新增功能] 瀚高数据库支持，增加 DDL 以及通过 pg_tables 读取元数据</li></ol></li><li><ol><li>[缺陷修复] 修正 MySQL，Oracle，SQLServer，PosgreSQL，DB2，达梦，瀚高等数据库的自增数据类型模板</li></ol></li></ul><hr><h1>新功能说明</h1><h2>1. 数据库设计规范检查</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">规范配置：<br><img alt="" src="https://oscimg.oschina.net/oscnet/up-dec7b1efb26e135d58e7bb409a95cff7506.png" referrerpolicy="no-referrer"><br> 规范检查:<br><img alt="" src="https://oscimg.oschina.net/oscnet/up-4fd7d3924d0edb640d57543acbe3e89fbd5.png" referrerpolicy="no-referrer"></p><h1>源代码 &amp; 下载</h1><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">我们将长期持续维护 PDManer 元数建模的升级，并及时采纳合理的用户建议。</p><ul><li>开源免费客户端版本，下载安装:<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.pdmaner.com%2Fdownload%2Fv4.9.2" target="_blank">安装文件下载</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.pdmaas.cn" target="_blank">平台公云版及企业私云版，点击这里了解</a></li><li>软件下载链接：<a href="https://gitee.com/robergroup/pdmaner/releases">Gitee 发行版</a></li><li>[源代码 - 客户端] 托管于码云 Gitee，(<a href="https://gitee.com/robergroup/pdmaner">https://gitee.com/robergroup/pdmaner</a>)</li><li>[源代码 - Java 端] 托管于码云 Gitee，(<a href="https://gitee.com/robergroup/chiner-java">https://gitee.com/robergroup/chiner-java</a>)</li></ul><h1>社区用户 - 特别价值贡献 (语雀文档)</h1><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fpdmaner%2Fdocs%2Fpdmaner-manual" target="_blank">PDManer 元数建模 - v4 - 操作手册</a></li></ul><h1>历史版本发布日志</h1><h2>v4.9 版本 (2024 年)</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">01-27，<a href="https://www.oschina.net/news/276757">PDManer [元数建模]-v4.9.0 发布：一款简单好用的数据库建模平台</a></p><h2>v4.8 版 (2024 年):</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">01-17，<a href="https://www.oschina.net/news/275971">PDManer [元数建模]-v4.8.0 发布：一款简单好用的数据库建模平台</a></p><h2>v4.7 版 (2023 年):</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">11-26，<a href="https://my.oschina.net/skymozn/blog/10260837">PDManer [元数建模]-v4.7.0 发布：一款简单好用的数据库建模平台</a></p><h2>v4.6 版 (2023 年):</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">08-20，<a href="https://www.oschina.net/news/254560/pdmaner-4-6-3-released">PDManer [元数建模]-v4.6.3 发布：一款简单好用的数据库建模平台</a><br> 07-23，<a href="https://www.oschina.net/news/250521/pdmaner-4-6-2-release">PDManer [元数建模]-v4.6.1 发布：一款简单好用的数据库建模平台</a><br> 07-17，<span>&nbsp;</span><a href="https://gitee.com/robergroup/pdmaner/releases/tag/v4.6.1">PDManer [元数建模]-v4.6.1 发布：一款简单好用的数据库建模平台</a><br> 06-05，<a href="https://my.oschina.net/skymozn/blog/9868228">PDManer [元数建模]-v4.6.0 发布：一款简单好用的数据库建模平台</a></p><h2>v4.5 版 (2023 年):</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">03-27，<a href="https://my.oschina.net/skymozn/blog/8590982">PDManer [元数建模]-v4.5.1 发布：一款简单好用的数据库建模平台</a><span>&nbsp;</span>03-19，<span>&nbsp;</span><a href="https://my.oschina.net/skymozn/blog/8582726">PDManer [元数建模]-v4.5.0 发布：一款简单好用的数据库建模平台</a></p><h2>v4.3 版 (2023 年):</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">02-25，<span>&nbsp;</span><a href="https://my.oschina.net/skymozn/blog/8240850">PDManer [元数建模]-v4.4.0 发布：一款简单好用的数据库建模平台</a><br> 01-07，<span>&nbsp;</span><a href="https://my.oschina.net/skymozn/blog/5930631">PDManer [元数建模]-v4.3.0 发布：一款简单好用的数据库建模平台</a></p><h2>v4.0 版 (2022 年):</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">11-27，<span>&nbsp;</span><a href="https://my.oschina.net/skymozn/blog/5599770">PDManer [元数建模]-v4.2.2 发布：一款简单好用的数据库建模平台</a><br> 10-15，<span>&nbsp;</span><a href="https://www.oschina.net/news/213704/pdmaner-4-2-0-released">PDManer [元数建模]-v4.2.0 发布：一款简单好用的数据库建模平台</a><br> 09-17，<span>&nbsp;</span><a href="https://my.oschina.net/skymozn/blog/5578581">PDManer [元数建模]-v4.1.5 发布：一款简单好用的数据库建模平台</a><br> 08-16，<span>&nbsp;</span><a href="https://my.oschina.net/skymozn/blog/5565965">PDManer [元数建模]-v4.1.4 发布：一款简单好用的数据库建模平台</a><br> 08-16，<span>&nbsp;</span><a href="https://my.oschina.net/skymozn/blog/5565965">PDManer [元数建模]-v4.1.4 发布：一款简单好用的数据库建模平台</a><br> 07-17，<span>&nbsp;</span><a href="https://my.oschina.net/skymozn/blog/5555061">PDManer [元数建模]-v4.1.3 发布：一款简单好用的数据库建模平台</a><br> 05-17，<span>&nbsp;</span><a href="https://my.oschina.net/skymozn/blog/5526958">PDManer [元数建模]-v4.1.1 发布：一款简单好用的数据库建模平台</a><br> 05-09，<span>&nbsp;</span><a href="https://my.oschina.net/skymozn/blog/5523590">PDManer [元数建模]-v4.1.0 发布：一款简单好用的数据库建模平台</a><br> 04-17，<span>&nbsp;</span><a href="https://my.oschina.net/skymozn/blog/5515012">PDManer [元数建模]-v4.0.0 发布：一款简单好用的数据库建模平台</a></p><h2>v3.5 版 (2021 年):</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">12-12，<span>&nbsp;</span><a href="https://my.oschina.net/skymozn/blog/5358921">CHINER [元数建模]-v3.5.7 发布：最好用的国产开源数据库建模平台</a><br> 11-27，<span>&nbsp;</span><a href="https://my.oschina.net/skymozn/blog/5329462">CHINER [元数建模]-v3.5.6 发布：最好用的国产开源数据库建模平台</a><br> 11-07，<span>&nbsp;</span><a href="https://my.oschina.net/skymozn/blog/5300548">CHINER [元数建模]-v3.5.5 发布：最好用的国产开源数据库建模平台</a><br> 10-31，<a href="https://my.oschina.net/skymozn/blog/5292026">CHINER [元数建模]-v3.5.4 发布：最好用的国产开源数据库建模平台</a><br> 10-24，<a href="https://my.oschina.net/skymozn/blog/5286281">CHINER [元数建模]-v3.5.3 发布：最好用的国产开源数据库建模平台</a><br> 10-17，<a href="https://my.oschina.net/skymozn/blog/5281261">CHINER [元数建模]-v3.5.2 发布：最好用的国产开源数据库建模平台</a><br> 10-06，<a href="https://my.oschina.net/skymozn/blog/5274141">CHINER [元数建模]- 国庆版 - 补丁修正版 v3.5.1：最好用的国产开源数据库建模平台</a><br> 09-30，<a href="https://my.oschina.net/skymozn/blog/5272352">CHINER [元数建模]- 国庆版发布 - 升级至 v3.5.0：最好用的国产开源数据库建模平台</a></p><h2>v3.3 版 (2021 年):</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">9 月 15 日，<a href="https://my.oschina.net/skymozn/blog/5262033">CHINER [元数建模] 升级至 v3.3.0：最好用的国产开源数据库建模平台</a></p><h2>v3.2 版 (2021 年):</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">8 月 22 日，<a href="https://my.oschina.net/skymozn/blog/5196704">PDMan 的最新版 - CHINER [元数建模] 升级至 v3.2：最好用的国产开源数据库建模平台</a><br> 9 月 07 日，<a href="https://my.oschina.net/skymozn/blog/5236977">PDMan 的最新版 - CHINER [元数建模] 升级至 v3.2.1：最好用的国产开源数据库建模平台</a></p><h2>v3.1 版 (2021 年):</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">8 月 8 日，<a href="https://my.oschina.net/skymozn/blog/5170023">PDMan 的最新版 - CHINER [元数建模] 升级至 v3.1：最好用的国产开源数据库建模平台</a></p><h2>v3.0 版 (2021 年)：</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">7 月 17 日，<a href="https://my.oschina.net/skymozn/blog/5134881">PDMan 升级换代至 -&gt;CHINER [元数建模] v3.0：最好用的国产开源数据库建模平台</a></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 12 Mar 2024 09:40:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/282753/pdmaner-4-9-2-released</guid>
            <link>https://www.oschina.net/news/282753/pdmaner-4-9-2-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Redisson 3.27.2 发布，官方推荐的 Redis 客户端]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Redisson 3.27.2&nbsp;现已发布，这是一个 Java 编写的 Redis 客户端，具备驻内存数据网格（In-Memory Data Grid）功能，并获得了 Redis 的官方推荐。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">此版本更新内容如下：</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong style="color:#333333"><span style="background-color:#ffffff; color:#1f2328">Feature</span></strong></p><ul><li style="text-align:left"><span style="background-color:#ffffff; color:#1f2328">实现了 RShardedTopic.countSubscribers() 方法</span></li><li style="text-align:left"><span style="background-color:#ffffff; color:#1f2328">RedissonMultiLock 实现了 isHeldByThread() 和 isHeldByCurrentThread() 方法</span></li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong style="color:#333333"><span style="background-color:#ffffff; color:#1f2328">Fixed</span></strong></p><ul><li style="text-align:left"><span style="background-color:#ffffff; color:#1f2328">多次锁定 RLock 会将 remainTimeToLive 重置为配置默认值</span></li><li style="text-align:left"><span style="background-color:#ffffff; color:#1f2328">日志中未显示 natMapper 引发的异常</span></li><li style="text-align:left"><span style="background-color:#ffffff; color:#1f2328">OSGi jdk.net 包导入应为可选项</span></li><li style="text-align:left"><span style="background-color:#ffffff; color:#1f2328">ServiceManager.resolveAll() 方法抛出 NPE</span></li><li style="text-align:left"><span style="background-color:#ffffff; color:#1f2328">RObject.addListenerAsync() 方法引发 UnsupportedOperationException</span></li><li style="text-align:left"><span style="background-color:#ffffff; color:#1f2328">StatusListener 无法与 RShardedTopic 一起工作</span></li><li style="text-align:left"><span style="background-color:#ffffff; color:#1f2328">如果添加了从节点，在集群模式下会抛出 NPE</span></li><li style="text-align:left"><span style="background-color:#ffffff; color:#1f2328">在集群模式下持续重新连接已移除的从节点</span></li><li style="text-align:left"><span style="background-color:#ffffff; color:#1f2328">删除 TrackingListener 时的错误处理</span></li><li style="text-align:left"><span style="background-color:#ffffff; color:#1f2328">FlushListener 接收重复事件</span></li><li style="text-align:left"><span style="background-color:#ffffff; color:#1f2328">SlotsDecoder 在结果为空时抛出 NPE</span></li><li style="text-align:left"><span style="background-color:#ffffff; color:#1f2328">RedissonCache 与 Spring (6.1+) 缓存接口方法之间的冲突</span></li><li style="text-align:left"><span style="background-color:#ffffff; color:#1f2328">RedissonClient.shutdown() 方法在调用 serviceManager.getShutdownLatch() 时挂起</span></li><li style="text-align:left"><span style="background-color:#ffffff; color:#1f2328">PingConnectionHandler 导致的「Failed to submit a listener notification task. Event loop shut down?」</span></li><li style="text-align:left"><span style="background-color:#ffffff; color:#1f2328">JsonCodecWrapper 未正确缓存</span></li></ul><p>更新说明：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fredisson%2Fredisson%2Freleases%2Ftag%2Fredisson-3.27.2" target="_blank">https://github.com/redisson/redisson/releases/tag/redisson-3.27.2</a></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 12 Mar 2024 08:01:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/282729/redisson-3-27-2-released</guid>
            <link>https://www.oschina.net/news/282729/redisson-3-27-2-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[【店滴云】增加关注公众号登录后台管理系统]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="text-align:center">【店滴云】增加关注公众号登录后台管理系统</p><p><span style="background-color:#ffffff; color:#40485b">店滴云，让经营场所，更智能。围绕茶室、酒店、健身房、公寓、出租房等经营性场所进行物联网改造。同时支持多种物联网通信协议，开放智能门锁，智能开关，智能手环的 sdk 供开发者使用。</span></p><p>1、增加微信公众号通过第三方平台生成二维码，包括临时和永久二维码</p><p>2、增加扫码绑定账号和扫码关注公众号登录系统功能</p><p>3、增加为微信公众号中直接通过网页授权登录系统的功能</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 12 Mar 2024 07:51:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/282726</guid>
            <link>https://www.oschina.net/news/282726</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[outline.js 3.33.0 已经发布，自动生成文章导读导航]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>outline.js 3.33.0 已经发布，自动生成文章导读导航</p><p>此版本更新内容包括：</p><h3>Features</h3><ul><li>文章大纲导航的滚动条会随文章正文滚动位置同步滚动，使大纲导航的当前章节始终可见；</li></ul><p>详情查看：<a href="https://gitee.com/yaohaixiao/outline.js/releases/3.33.0">https://gitee.com/yaohaixiao/outline.js/releases/3.33.0</a></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 12 Mar 2024 06:09:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/282698/outline-js-3-33-0-released</guid>
            <link>https://www.oschina.net/news/282698/outline-js-3-33-0-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[GNU Linux-libre 6.8 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>在 <a href="https://www.oschina.net/news/282502/linux-kernel-6-8">Linux Kernel 6.8</a> 版本发布后，自由软件基金会的拉美团队（FSFLA）照例跟进<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.fsfla.org%2Fikiwiki%2Fselibre%2Flinux-libre%2F%23news" target="_blank">发布</a>了 GNU Linux-libre 6.8 内核。值得一提的是，上个月&nbsp;GNU Linux-libre 刚庆祝了项目诞生 16 周年。</p><p><img alt="" height="278" src="https://oscimg.oschina.net/oscnet/up-01f8bd4d6be86f550135c5e017c512d202c.png" width="500" referrerpolicy="no-referrer"></p><p>一些更新内容包括：</p><p><strong>Cleaning up changes</strong></p><ul><li>删除了对 atmel、hermes、orinoco_usb、libertas_cs 和 zd1201 驱动程序的清理，因为它们已经在上游被移除。</li><li>清理了 Intel qat_420xx、Imagination PowerVR、Intel Xe、Chips and Media Wave5、Intel VSC、Aquantia PHY 和 Realtek rtw8922a 的新驱动程序。</li><li>coda 驱动程序移到了上游"source"树中，因此对其清理工作进行了调整。</li><li>清理了 ARM 和 AArch64 devicetree 文件中的新 blob 名称。</li><li>上游修改了 .deb 打包脚本，基于此修改进行了调整，并借此机会改进了 wording。</li></ul><p><span style="color:#000000">此外，项目团队还在尝试修复 Intel i915 驱动程序的问题。</span></p><blockquote><p><span style="color:#000000">去年，我们了解到在某些 i915 硬件变体上出现了无限循环，因为它们试图回退到我们已清理为难以区分的名称的早期 blob 变体。</span></p><p><span style="color:#000000">我们修复了这一问题，甚至向上游提供了补丁。 但我们的补丁并没有被采纳，而是针对我们的补丁做了其他修改，导致驱动程序在我们的情况下噪音更大。</span></p><p><span style="color:#000000">我们已经解决了额外噪音的问题，但这些上游更改并不是导致驱动程序再次损坏的原因。 我们仍然不知道是什么原因造成的，但症状与之前的故障类似：一些装有英特尔显卡的系统出现 freeze。</span></p><p><span style="color:#000000">使用 i915.enable_guc=0 启动将避免受此问题影响的系统出现明显的 freeze 现象。</span></p></blockquote><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.fsfla.org%2Fikiwiki%2Fselibre%2Flinux-libre%2F" target="_blank">GNU Linux-libre</a>&nbsp;<span style="color:#000000">项目致力于为那些遵循自由软件基金会的《GNU 自由操作系统发行版指南》（GNU Free System Distribution Guidelines）的人们提供上游 Linux 内核的 100% 自由版本。</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="color:#000000">GNU Linux-libre 从 Linux 内核中删除了那些不含源代码、源代码被混淆或遮蔽、使用非自由软件许可证、不允许用户修改软件使其达到用户要求、诱导或要求用户安装额外的非自由软件的软件。</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">更多详情可查看<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.fsfla.org%2Fpipermail%2Flinux-libre%2F2024-March%2F003538.html" target="_blank">此处</a>。</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 12 Mar 2024 06:07:54 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/282696/gnu-linux-libre-6-8-released</guid>
            <link>https://www.oschina.net/news/282696/gnu-linux-libre-6-8-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[OpenAPI Generator v7.4.0 发布，OpenAPI 规范自动生成代码]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#333333"><span style="background-color:#ffffff"><span style="color:#333333"><span style="color:#0f1419"><span style="background-color:#ffffff">OpenAPI Generator v6.6.0 现已发布，此</span></span></span></span><span style="background-color:#ffffff"><span style="color:#1f2328">版本包含了 90 多项增强功能和错误修复，以及 1 个</span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAPITools%2Fopenapi-generator%2Fpulls%3Fq%3Dis%253Apr%2Bmilestone%253A7.4.0%2Bis%253Aclosed%2Blabel%253A%2522Breaking%2Bchange%2B%2528with%2Bfallback%2529%2522" target="_blank">&nbsp;breaking change (with fallback)</a>&nbsp;<span style="background-color:#ffffff"><span style="color:#333333"><span style="color:#0f1419"><span style="background-color:#ffffff">。</span></span></span></span><span style="background-color:#ffffff"><span style="color:#000000">OpenAPI Generator 可用于在给定 OpenAPI 规范（v2, v3）的情况下自动生成 API 客户端库、server stubs、文档以及配置。</span></span></span></p><p style="margin-left:0px; margin-right:0px; text-align:start"><span style="color:#1f2328">一些更新亮点如下：</span></p><p style="text-align:start"><strong><span style="color:#1f2328"><span style="background-color:#ffffff">General</span></span></strong></p><ul><li>当设置 inputSpecRootDirectory 时，inputSpec 不应该是强制性的&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAPITools%2Fopenapi-generator%2Fpull%2F18000" target="_blank">#18000</a></li><li>修复 ClassCastException in OpenAPINormalizer on composed schemas&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAPITools%2Fopenapi-generator%2Fpull%2F17912" target="_blank">#17912</a></li><li>将 FILTER 添加到 openapi normalizer&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAPITools%2Fopenapi-generator%2Fpull%2F17859" target="_blank">#17859</a></li><li>修复 allOf 和 $ref 中的属性&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAPITools%2Fopenapi-generator%2Fpull%2F17836" target="_blank">#17836</a></li></ul><p style="text-align:start"><strong><span style="color:#1f2328"><span style="background-color:#ffffff">C</span></span></strong></p><ul><li>[C][Client] 修复默认枚举值为 -1&nbsp;的问题&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAPITools%2Fopenapi-generator%2Fpull%2F18040" target="_blank">#18040</a></li></ul><p style="text-align:start"><strong><span style="color:#1f2328"><span style="background-color:#ffffff">C#</span></span></strong></p><ul><li>[C#] 修复 anyof、oneof mixed primitive object 解析错误&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAPITools%2Fopenapi-generator%2Fpull%2F17986" target="_blank">#17986</a></li></ul><p style="text-align:start"><strong><span style="color:#1f2328"><span style="background-color:#ffffff">C++</span></span></strong></p><ul><li>[cpp-qt-client] 允许参数为空&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAPITools%2Fopenapi-generator%2Fpull%2F17805" target="_blank">#17805</a></li><li>防止枚举项名称成为保留关键字<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAPITools%2Fopenapi-generator%2Fpull%2F17804" target="_blank">#17804</a></li></ul><p style="text-align:start"><strong><span style="color:#1f2328"><span style="background-color:#ffffff">Dart</span></span></strong></p><ul><li>[Dart] 减少对 intl 包的依赖&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAPITools%2Fopenapi-generator%2Fpull%2F17862" target="_blank">#17862</a></li></ul><p style="text-align:start"><strong>Go</strong></p><ul><li>[Go] 修复 isNil 检查&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAPITools%2Fopenapi-generator%2Fpull%2F17870" target="_blank">#17870</a></li><li>Generate API 文件作为 go-gin 服务器的接口&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAPITools%2Fopenapi-generator%2Fpull%2F17784" target="_blank">#17784</a></li></ul><p style="text-align:start"><strong><span style="color:#1f2328"><span style="background-color:#ffffff">Java</span></span></strong></p><ul><li>[java] 在提供的情况下用 modelNameMappings&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAPITools%2Fopenapi-generator%2Fpull%2F18025" target="_blank">#18025</a></li><li>[Java][apache-httpclient] 使用 EntityUtils#toString 代替 Scanner 进行反序列化<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAPITools%2Fopenapi-generator%2Fpull%2F17998" target="_blank">#17998</a></li></ul><p style="text-align:start"><strong><span style="color:#1f2328"><span style="background-color:#ffffff">Jetbrains HTTP Client</span></span></strong></p><ul><li>Jetbrains HTTP Client 重大升级。移至测试版&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAPITools%2Fopenapi-generator%2Fpull%2F15779" target="_blank">#15779</a></li></ul><p style="text-align:start"><strong><span style="color:#1f2328"><span style="background-color:#ffffff">Kotlin</span></span></strong></p><ul><li>[kotlin] 枚举应该匹配规范&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAPITools%2Fopenapi-generator%2Fpull%2F18062" target="_blank">#18062</a>&nbsp;- Breaking change (with fallback)</li><li>[kotlin-spring] 修复 API 中的 cookie 参数代码生成&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAPITools%2Fopenapi-generator%2Fpull%2F17959" target="_blank">#17959</a></li><li>[kotlin-spring] 修复 BigDecimal 默认值编译失败的问题&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAPITools%2Fopenapi-generator%2Fpull%2F17956" target="_blank">#17956</a></li></ul><p style="text-align:start"><strong><span style="color:#1f2328"><span style="background-color:#ffffff">PHP</span></span></strong></p><ul><li>fix(php)：更新 toString 方法中的类型提示<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAPITools%2Fopenapi-generator%2Fpull%2F17838" target="_blank">#17838</a></li><li>fix(php)：在 psr-18 实现中正确调用 selectHeaders&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAPITools%2Fopenapi-generator%2Fpull%2F17832" target="_blank">#17832</a></li></ul><p style="text-align:start"><strong><span style="color:#1f2328"><span style="background-color:#ffffff">Python</span></span></strong></p><ul><li>[python] 修复 inherited discriminators 上的&nbsp;Circular imports&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAPITools%2Fopenapi-generator%2Fpull%2F17886" target="_blank">#17886</a></li><li>将 python-fastapi 依赖项更新为新版本&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAPITools%2Fopenapi-generator%2Fpull%2F17871" target="_blank">#17871</a></li></ul><p style="text-align:start"><strong><span style="color:#1f2328"><span style="background-color:#ffffff">Ruby</span></span></strong></p><ul><li>fix(ruby)：使用 faraday 检测表单数据文件上传中的内容类型（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAPITools%2Fopenapi-generator%2Fissues%2F17851" target="_blank">＃17851</a>）<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAPITools%2Fopenapi-generator%2Fpull%2F17853" target="_blank">＃17853</a></li></ul><p style="text-align:start"><strong><span style="color:#1f2328"><span style="background-color:#ffffff">Rust</span></span></strong></p><ul><li>[Rust] [Axum] 修复 clippy warning：to_string_trait_impl&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAPITools%2Fopenapi-generator%2Fpull%2F17995" target="_blank">#17995</a></li><li>fix(rust)：用作 api 参数的模型路径错误<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAPITools%2Fopenapi-generator%2Fpull%2F17968" target="_blank">#17968</a></li><li>feat(rust)：支持在客户端中禁用 boxed models 的能力&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAPITools%2Fopenapi-generator%2Fpull%2F17931" target="_blank">#17931</a></li><li>fix(rust)：客户端的 oneOf generation&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAPITools%2Fopenapi-generator%2Fpull%2F17915" target="_blank">#17915</a></li></ul><p style="text-align:start"><strong><span style="color:#1f2328"><span style="background-color:#ffffff">TypeScript</span></span></strong></p><ul><li>[typescript-fetch] 使用 == 检查属性是否为 null 或未定义<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAPITools%2Fopenapi-generator%2Fpull%2F17972" target="_blank">#17972</a></li><li>使用 exists() 检查属性<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAPITools%2Fopenapi-generator%2Fpull%2F17798" target="_blank">#17798</a></li></ul><p>详情可查看更新说明：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAPITools%2Fopenapi-generator%2Freleases%2Ftag%2Fv7.4.0" target="_blank">https://github.com/OpenAPITools/openapi-generator/releases/tag/v7.4.0</a></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 12 Mar 2024 02:16:09 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/282666/openapi-generator-7-4-0-released</guid>
            <link>https://www.oschina.net/news/282666/openapi-generator-7-4-0-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[抛弃 mybatis 无限 plus 系列的内卷，国产 ORM 框架 sqltoy-orm 5.6.0 发版]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>开源地址：</strong></p><ul><li>github:&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fchenrenfei%2Fsagacity-sqltoy" target="_blank">https://github.com/sagframe/sagacity-sqltoy</a></li><li>gitee:&nbsp;<a href="https://gitee.com/sagacity/sagacity-sqltoy">https://gitee.com/sagacity/sagacity-sqltoy</a></li><li>idea 插件 (可直接在 idea 中检索安装):&nbsp;&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fthreefish%2Fsqltoy-idea-plugins" target="_blank">https://github.com/threefish/sqltoy-idea-plugins</a></li><li>sqltoy 脚手架项目：https://gitee.com/momoljw/sss-rbac-admin</li><li>sqltoy lambda 项目:&nbsp;https://gitee.com/gzghde/sqltoy-plus</li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>更新内容</strong></p><p>1、拆分 sqltoy-orm-core\sqltoy-orm-spring\sqltoy-orm-spring-starter 三个子项目，剥离对 spring 的依赖<br> 2、分 5.6.x 和 5.6.x.jre8 两个分支版本，5.6.x 以 jdk17、springboot3.x 为起点</p><pre><code class="language-xml">&lt;!-- 其他非 spring 框架可以基于 sagacity-sqltoy 进行扩展 --&gt;
&lt;dependency&gt;
&nbsp;&nbsp; &nbsp;&lt;groupId&gt;com.sagframe&lt;/groupId&gt;
&nbsp;&nbsp; &nbsp;&lt;artifactId&gt;sagacity-sqltoy&lt;/artifactId&gt;
&nbsp; &nbsp; &nbsp; &nbsp; &lt;!-- jdk8 对应的版本号为：5.6.0.jre8 --&gt;
&nbsp;&nbsp; &nbsp;&lt;version&gt;5.6.0&lt;/version&gt;
&lt;/dependency&gt;

&lt;!-- 纯粹 springboot 项目只需引入 sagacity-sqltoy-spring-starter 依赖即可 &nbsp;--&gt;
&lt;dependency&gt;
&nbsp;&nbsp; &nbsp;&lt;groupId&gt;com.sagframe&lt;/groupId&gt;
&nbsp;&nbsp; &nbsp;&lt;artifactId&gt;sagacity-sqltoy-spring-starter&lt;/artifactId&gt;
&nbsp; &nbsp; &nbsp; &nbsp; &lt;!-- jdk8 对应的版本号为：5.6.0.jre8 --&gt;
&nbsp;&nbsp; &nbsp;&lt;version&gt;5.6.0&lt;/version&gt;
&lt;/dependency&gt;
</code></pre><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>sqltoy-orm 是 JPA 和超强查询的融合体</strong></p><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsagframe%2Fsagacity-sqltoy%23jpa%25E9%2583%25A8%25E5%2588%2586" target="_blank">JPA 部分</a></h3><ul><li>类似 JPA 的对象化 CRUD、对象级联加载和新增、更新</li><li>强化 update 操作，提供弹性字段修改能力，不同于 hibernate 先 load 后修改，而是一次数据库交互完成修改，确保了高并发场景下数据的准确性</li><li>改进了级联修改，提供了先删除或者先置无效，再覆盖的操作选项</li><li>增加了 updateFetch、updateSaveFetch 功能，强化针对强事务高并发场景的处理，类似库存台账、资金台账，实现一次数据库交互，完成锁查询、不存在则插入、存在则修改，并返回修改后的结果</li><li>增加了树结构封装，便于统一不同数据库树型结构数据的递归查询</li><li>支持分库分表、支持多种主键策略 (额外支持基于 redis 的产生特定规则的业务主键)、加密存储、数据版本校验</li><li>提供了公共属性赋值 (创建人、修改人、创建时间、修改时间、租户)、扩展类型处理等</li><li>提供了多租户统一过滤和赋值、提供了数据权限参数带入和越权校验</li></ul><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsagframe%2Fsagacity-sqltoy%23%25E6%259F%25A5%25E8%25AF%25A2%25E9%2583%25A8%25E5%2588%2586" target="_blank">查询部分</a></h3><ul><li>极为直观的 sql 编写方式，便于从客户端 &lt;--&gt; 代码，双向快速迁移，便于后期变更维护</li><li>支持缓存翻译、反向缓存匹配 key 代替 like 模糊查询</li><li>提供了跨数据库支持能力：不同数据库的函数自动转换适配，多方言 sql 根据实际环境自动匹配、多数据库同步测试，大幅提升了产品化能力</li><li>提供了取 top 记录、随机记录等特殊场景的查询功能</li><li>提供了最强大的分页查询机制：1) 自动优化 count 语句；2) 提供基于缓存的分页优化，避免每次都执行 count 查询；3) 提供了独具特色的快速分页；4) 提供了并行分页</li><li>提供了分库分表能力</li><li>提供了在管理类项目中极为价值的：分组汇总计算、行列转换 (行转列、列转行)、同比环比、树形排序、树形汇总，相关算法自然集成</li><li>提供了基于查询的层次化数据结构封装</li><li>提供了大量辅助功能：数据脱敏、格式化、条件参数预处理等</li></ul><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsagframe%2Fsagacity-sqltoy%23%25E6%2594%25AF%25E6%258C%2581%25E5%25A4%259A%25E7%25A7%258D%25E6%2595%25B0%25E6%258D%25AE%25E5%25BA%2593" target="_blank">支持多种数据库</a></h3><ul><li>常规的 mysql、oracle、db2、postgresql、 sqlserver、dm、kingbase、sqlite、h2、 oceanBase、polardb、guassdb、tidb</li><li>支持分布式 olap 数据库: clickhouse、StarRocks、greenplum、impala (kudu)</li><li>支持 elasticsearch、mongodb</li><li>所有基于 sql 和 jdbc 各类数据库查询</li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>sqltoy 特点介绍：</strong></p><ul><li><strong>sqltoy 的核心构建思想</strong></li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><img alt="" height="868" src="https://oscimg.oschina.net/oscnet/up-a385d72ceb030d705e8e5803ca3cd4c09a1.png" width="1136" referrerpolicy="no-referrer"></p><ul><li><strong>sqltoy 的对比 mybatis (plus) 的核心点：查询语句编写、可阅读性、可维护性</strong></li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" height="923" src="https://oscimg.oschina.net/oscnet/up-05295a7a1813978134a5e49a7cff0f0e1ab.png" width="1873" referrerpolicy="no-referrer"></p><ul><li><strong>对象化 crud 是基础，但 sqltoy 有针对性的改进：update、updateSaveFetch、updateFetch 等</strong></li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><img alt="" height="845" src="https://oscimg.oschina.net/oscnet/up-6b8e8204061eec3d2096a50e9899548351e.png" width="1745" referrerpolicy="no-referrer"></p><ul><li><strong>sqltoy 的缓存翻译，大幅减少表关联简化 sql，让你的查询性能成几何级提升</strong></li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="阐述 sqltoy 为什么秒杀 mybatis(plus)" src="https://p3-tt.byteimg.com/origin/pgc-image/85287e14aa3e428fbabe297472596455?from=pc" referrerpolicy="no-referrer"></p><ul><li><strong>极致的分页，同样帮助你实现查询的性能大幅提升</strong></li></ul><ol><li>快速分页:@fast () 实现先取单页数据然后再关联查询，极大提升速度</li><li>分页优化器:page-optimize 让分页查询由两次变成 1.3~1.5 次 (用缓存实现相同查询条件的总记录数量在一定周期内无需重复查询</li><li>sqltoy 的分页取总记录的过程不是简单的 select count (1) from (原始 sql)；而是智能判断是否变成:select count (1) from 'from 后语句 '， 并自动剔除最外层的 order by</li><li>sqltoy 支持并行查询：parallel="true"，同时查询总记录数和单页数据，大幅提升性能</li></ol><div><img alt="阐述 sqltoy 为什么秒杀 mybatis(plus)" src="https://p6-tt.byteimg.com/origin/pgc-image/3d5f7094da154671985dd390f56f6302?from=pc" referrerpolicy="no-referrer"></div><div>
 &nbsp;
</div><ul><li><strong>便利的跨数据库统计计算：数据旋转</strong></li></ul><div><img alt="阐述 sqltoy 为什么秒杀 mybatis(plus)" src="https://p1-tt.byteimg.com/origin/pgc-image/949bc75b5c53441c98284dae2bed11fe?from=pc" referrerpolicy="no-referrer"></div><ul><li><strong>便利的跨数据库统计计算：无限极分组统计 (含汇总求平均)</strong></li></ul><div><img alt="阐述 sqltoy 为什么秒杀 mybatis(plus)" src="https://p1-tt.byteimg.com/origin/pgc-image/f5edc52adbbe4a1ca327d9a9b0c5d64c?from=pc" referrerpolicy="no-referrer"></div><ul><li><strong>便利的跨数据库统计计算：同比环比</strong></li></ul><div><img alt="阐述 sqltoy 为什么秒杀 mybatis(plus)" src="https://p3-tt.byteimg.com/origin/pgc-image/b9d435e2852644c9a4c9e062cc3d46d7?from=pc" referrerpolicy="no-referrer"></div><div>
 5、树形表排序汇总
</div><div><p style="margin-left:0; margin-right:0"><img height="274" src="https://oscimg.oschina.net/oscnet/up-1773cce82b98a943d42caaa62f60d80f3d0.png" width="1002" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0"><img height="403" src="https://oscimg.oschina.net/oscnet/up-8717f1c442767b08f2406019ae9b63721cb.png" width="409" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0">6、扩展集成</p><p style="margin-left:0; margin-right:0"><img height="961" src="https://oscimg.oschina.net/oscnet/up-6603ed15ec936dea45c4f6fb7318f4a062b.png" width="1965" referrerpolicy="no-referrer"></p></div></div>
                                    ]]>
            </description>
            <pubDate>Tue, 12 Mar 2024 01:37:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/282659/sqltoy-orm-5-6-0-released</guid>
            <link>https://www.oschina.net/news/282659/sqltoy-orm-5-6-0-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[vxe-table 4.5.21 已经发布，vue 表格解决方案]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>vxe-table 4.5.21 已经发布，vue 表格解决方案</p><p>此版本更新内容包括：</p><ul><li>table 
  <ul><li>修复插入临时数据位置错误问题题</li><li>增加参数 sort-config.iconLayout</li></ul></li><li>column 
  <ul><li>增加参数 titleSuffix</li></ul></li><li>icon 
  <ul><li>增加图标 asc、sort-desc</li></ul></li></ul><p>详情查看：<a href="https://gitee.com/xuliangzhan_admin/vxe-table/releases/4.5.21">https://gitee.com/xuliangzhan_admin/vxe-table/releases/4.5.21</a></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 12 Mar 2024 00:19:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/282652/vxe-table-4-5-21-released</guid>
            <link>https://www.oschina.net/news/282652/vxe-table-4-5-21-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[JDBC 连接池 BeeCP-4.0.0 从新出发]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><strong><span><span><span><span><span>&nbsp;</span>一：基本介绍&nbsp; </span></span></span></span></strong></p><p><span><span><span><span><strong><span>BeeCP</span></strong>是一款简单易用的</span></span></span></span><span><span><span><span>JDBC 连接池，具有性能高，代码轻，稳定性好特点，已获得不少用户的青睐，因此推荐它给更多企业和个人使用。时至今日，它已在默默无闻中悄然走过了 7 个年头，为了在未来更好的服务于全球用户，本次新版（BeeCP-4.0.0）发布中，我们做了两处大的调整：更换了项目 LICENSE（<span style="background-color:#16a085">LGPL2.1---&gt;Apache LICENSE 2.0</span>）；调整项目源码顶级目录 (<span style="background-color:#16a085">cn ---&gt; org.stone</span>)；此外并将 BeeCP 项目源码整合进 stone 项目中（注：stone 是一个 J2EE 工具包项目，目前它收集了四款彼此独立的 Java 工具，分别为：JDBC 连接池，Java 对象池，任务处理池，同步等待池，其中连接池与对象池已经历多个版本迭代，且有多年的实用经历，另外两款处于孵化中，未来也许会整合更多小型组件工具，项目地址：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FChris2018998%2Fstone" target="_blank">https://github.com/Chris2018998/stone</a>，项目寓意：以<strong>晶钻般</strong>的品质服务于全人类，如果此话让您感觉到不适，那就请忽略此句吧^-^），用户可以根据自身需求下载单一包或整合包。</span></span></span></span></p><p><strong><span><span><span><span>二：相关截图</span></span></span></span></strong></p><p><img height="467" src="https://oscimg.oschina.net/oscnet/up-91db3099a359411061d963e75d188792935.png" width="1036" referrerpolicy="no-referrer"></p><p><em>图 1：性能对比图（<span style="color:#333333">CPU:&nbsp; I3-7100，内存: 8G，操作系统：Win7_64&nbsp;</span>）</em></p><p><img alt="图片" src="https://user-images.githubusercontent.com/32663325/163173015-2ce906f3-1b83-419d-82aa-a42b5c8d92b8.png" referrerpolicy="no-referrer"></p><p><em>图 2：项目代码质量图</em></p><p><img height="244" src="https://oscimg.oschina.net/oscnet/up-318214b6655357935988da6864d041fd0cd.png" width="1050" referrerpolicy="no-referrer"></p><p><em>图 3：数据源监控界面（Springboot2)</em></p><p><strong>三：软件包下载</strong></p><p>Maven 座标（Java7 及以上）</p><pre><code class="language-xml">&lt;dependency&gt;
   &lt;groupId&gt;com.github.chris2018998&lt;/groupId&gt;
   &lt;artifactId&gt;beecp&lt;/artifactId&gt;
   &lt;version&gt;4.0.0&lt;/version&gt;
&lt;/dependency&gt;</code></pre><pre><code class="language-xml">&lt;dependency&gt;
   &lt;groupId&gt;com.github.chris2018998&lt;/groupId&gt;
   &lt;artifactId&gt;beecp-spring-boot-starter&lt;/artifactId&gt;
   &lt;version&gt;1.8.0&lt;/version&gt;
&lt;/dependency&gt;</code></pre><p>beecp-spring-boot-starter 为 beecp 数据源管理工具，它支持以配置的方式维护一个或多个数据源（无代码开发），并提供 Web 监控界面（上图 3）<em>，参考例子：</em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FChris2018998%2Fbeecp-starter%2Ftree%2Fmaster%2Fdoc%2Fdemo" target="_blank">https://github.com/Chris2018998/beecp-starter/tree/master/doc/demo</a></p><p><strong>四：修改内容</strong></p><ul><li><em>增加用于自定义判定驱逐接口 ( 其他两种方式：errorCode 和 SQLState 的配置）</em></li></ul><ul><li><em>增加创建线程的中断阻塞的处理方法（外部调用触发）</em></li></ul><ul><li><em>配置项改名：createTimeout ---&gt; connctTimeout</em></li></ul><p>&nbsp;&nbsp;&nbsp; 关于细节，请到项目站点查看介绍资料</p><p><strong>五：项目地址</strong></p><ul><li>gitee：&nbsp;&nbsp; <a href="https://gitee.com/Chris2018998/BeeCP">https://gitee.com/Chris2018998/BeeCP</a></li><li>github：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FChris2018998%2FBeeCP" target="_blank">&nbsp;https://github.com/Chris2018998/BeeCP</a></li><li>github：<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fgithub.com%2FChris2018998%2Fstone" target="_blank">&nbsp;https://github.com/Chris2018998/stone</a></li></ul><p><strong>六：作品承若</strong></p><p><strong>我们庄重承若：在不破坏版权的前提下，已经开源的相关作品可永久免费使用，无论您是商用还是个人使用（不包括违法用途），因为这是我们多年开源的初衷，因此请大家放心使用。</strong><strong>您的支持，便是我们前进的动力，让我们一起来加油！谢谢！</strong></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 11 Mar 2024 16:18:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/282643/beecp-4-0-0-released</guid>
            <link>https://www.oschina.net/news/282643/beecp-4-0-0-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[新增移动端支持，嵌入式能力优化，DataEase 开源数据可视化分析平台 v2.4.0 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#000000; text-align:start">2024 年 3 月 11 日，DataEase 开源数据可视化分析平台正式发布 v2.4.0 版本。</p><p style="color:#000000; text-align:start">这一版本的功能升级包括：新增<strong><span style="color:#0a7be0">移动端</span></strong>支持，方便用户在移动端查看收藏的仪表板等可视化数据，随时随地掌握业务的动态变化；新增<strong><span style="color:#0a7be0">引擎设置</span></strong>模块，用户可以修改默认引擎，将 API 数据和 Excel 数据存放在指定数据库中；新增<strong><span style="color:#0a7be0">扫码登录</span></strong>功能，企业微信、飞书、钉钉的用户可通过此功能扫码登录至 DataEase 平台；新增<strong><span style="color:#0a7be0">外观配置</span></strong>模块，用户可以在此模块中设置平台主题、Logo、背景图、Slogan、页脚等信息。</p><p style="color:#000000; text-align:start">需要说明的是，在 v2.4.0 版本中，DataEase 的<strong><span style="color:#0a7be0">嵌入式能力</span></strong>得到了进一步优化，同时对表格、富文本、嵌入式、数据大屏、同步管理等功能进行了增强。</p><h1>新增功能</h1><p style="color:#000000; text-align:start"><strong><span style="color:#0a7be0">■ 移动端：增加适配移动端功能，方便用户在移动端查看仪表板等</span></strong></p><p style="color:#000000; text-align:start">在 v2.4.0 版本中，DataEase 新增了对移动端的支持。用户通过移动设备访问 DataEase 平台时，DataEase 后端服务会判断访问设备的类型，自动跳转至访问设备对应的展示界面。在 DataEase 移动端中，用户可以方便地查看收藏的仪表板等可视化数据，随时随地掌握业务的动态变化。</p><p style="color:#000000; text-align:start"><img alt="" height="886" src="https://oscimg.oschina.net/oscnet/up-b302aa6ec51110f18d0806983a639cdbbcf.png" width="792" referrerpolicy="no-referrer"></p><p><span>▲ 图 1 移动端总体概览以及移动端仪表板展示</span></p><p style="color:#000000; text-align:start"><strong><span style="color:#0a7be0">■ 系统设置：支持引擎设置</span></strong></p><p style="color:#000000; text-align:start">DataEase v2.4.0 版本新增了「引擎设置」功能模块，用户可以修改默认引擎，将 DataEase 中的 API 数据和 Excel 数据存放在其中。</p><p style="color:#000000; text-align:start">在以往版本中，DataEase 默认将 API 数据源的数据和 Excel 数据源的数据都存放在 DataEase 运行数据库中。支持了引擎设置后，用户可以将这部分业务数据单独指定存放到自己的数据仓库里，不仅可以做到平台数据与业务数据的分离，也能进一步保证数据的安全性。</p><p style="color:#000000; text-align:start"><img alt="" height="1028" src="https://oscimg.oschina.net/oscnet/up-7652690be9d36225aec14d0d31d9c7d553b.png" width="1955" referrerpolicy="no-referrer"></p><p><span>▲ 图 2 DataEase 新增「引擎配置」功能界面</span></p><p style="color:#000000; text-align:start"><strong><span style="color:#0a7be0">■ 嵌入式：嵌入式能力优化</span></strong></p><p style="color:#000000; text-align:start">DataEase 支持以 iframe 的方式将所有模块以及仪表板、数据大屏、图表、编辑器等嵌入到其他系统中。DataEase 支持用户按需嵌入多个视图，并且可以方便地调整视图大小，同时大幅优化了嵌入式模式下的前端加载速度。</p><p style="color:#000000; text-align:start">此外，DataEase 官方已经推出嵌入式 BI 演示系统（<em>https://embedded-bi.dataease.cn/</em>），便于 ISV（独立软件开发商）、SI（系统集成商）体验 DataEase 的嵌入式 BI 能力。</p><p style="color:#000000; text-align:start"><img alt="" src="https://oscimg.oschina.net/oscnet/up-3dcc830ab59f7ac9b4031b8075e77ad0264.png" referrerpolicy="no-referrer"></p><p style="color:#000000; text-align:start"><span>▲ 图 3 DataEase 嵌入式版演示环境主界面</span></p><p style="color:#000000; text-align:start"><strong><span style="color:#0a7be0">■ X-Pack 增强包：新增扫码登录功能（支持企业微信、飞书和钉钉）</span></strong></p><p style="color:#000000; text-align:start">DataEase v2.4.0 版本新增扫码登录功能，支持用户以企业微信、飞书、钉钉扫码的方式登录到 DataEase，满足了更多企业用户的访问登录需求。</p><p style="color:#000000; text-align:start"><img alt="" height="1028" src="https://oscimg.oschina.net/oscnet/up-4b33ec83e27c2d4ed3172a55cc9427b51ae.jpg" width="1955" referrerpolicy="no-referrer"></p><p><span>▲ 图 4 DataEase 扫码登录页面</span></p><p><img alt="" height="1028" src="https://oscimg.oschina.net/oscnet/up-133c9fda18863886baad3799ca1c2c76ea9.png" width="1955" referrerpolicy="no-referrer"></p><p><span>▲ 图 5 DataEase「平台对接」管理页面</span></p><p style="color:#000000; text-align:start"><strong><span style="color:#0a7be0">■ X-Pack 增强包：支持外观配置</span></strong></p><p style="color:#000000; text-align:start">DataEase v2.4.0 版本新增「外观配置」功能模块，用户可以根据自己的需要，自定义平台主题、Logo、Slogan、名称、背景图、导航、页脚等信息，进一步满足了用户操作界面定制化的相关需求。</p><p style="color:#000000; text-align:start"><img alt="" height="1027" src="https://oscimg.oschina.net/oscnet/up-a4363b442b7f1d7dfeb45081dcb32921611.png" width="1955" referrerpolicy="no-referrer"></p><p><span>▲ 图 6 DataEase「外观配置」功能界面</span></p><p style="color:#000000; text-align:start">除了上述新增功能外，DataEase v2.4.0 版本还包含了很多其他的功能更新和优化，欢迎进入 DataEase 的官方文档及 GitHub 仓库的 Release 页面查看更加详细的更新日志。</p><h1>功能优化</h1><p style="color:#000000; text-align:start"><span style="color:#0a7be0">■</span><span>&nbsp;</span>refactor（数据大屏）：「保存」按钮新增防止重复提交的设置；</p><p style="color:#000000; text-align:start"><span style="color:#0a7be0">■</span><span>&nbsp;</span>refactor（数据大屏）：图形组件新增 SVG 矢量图形；</p><p style="color:#000000; text-align:start"><span style="color:#0a7be0">■</span><span>&nbsp;</span>refactor（数据大屏）：图形组件默认样式变更；</p><p style="color:#000000; text-align:start"><span style="color:#0a7be0">■</span><span>&nbsp;</span>refactor（数据大屏）：富文本组件新增支持撤销操作；</p><p style="color:#000000; text-align:start"><span style="color:#0a7be0">■</span><span>&nbsp;</span>refactor（数据大屏）：在调整位置属性的页面中可以手动设置图表宽高逻辑，适配保持宽高比例；</p><p style="color:#000000; text-align:start"><span style="color:#0a7be0">■</span><span>&nbsp;</span>refactor（系统设置）：更新 Flyway 水印管理权限；</p><p style="color:#000000; text-align:start"><span style="color:#0a7be0">■</span><span>&nbsp;</span>refactor（图表）：优化图表的默认标签配置；</p><p style="color:#000000; text-align:start"><span style="color:#0a7be0">■</span><span>&nbsp;</span>refactor（图表）：优化图表的默认图例配置；</p><p style="color:#000000; text-align:start"><span style="color:#0a7be0">■</span><span>&nbsp;</span>refactor：Calcite SQL 新增适配自定义函数；</p><p style="color:#000000; text-align:start"><span style="color:#0a7be0">■</span><span>&nbsp;</span>refactor：优化 Calcite 自定义函数的性能；</p><p style="color:#000000; text-align:start"><span style="color:#0a7be0">■</span><span>&nbsp;</span>refactor：优化 uninstall.sh 卸载脚本的提示（#7955）；</p><p style="color:#000000; text-align:start"><span style="color:#0a7be0">■</span><span>&nbsp;</span>refactor：优化<em>dectl</em>脚本逻辑；</p><p style="color:#000000; text-align:start"><span style="color:#0a7be0">■</span><span>&nbsp;</span>chore（X-Pack）：将 TinyMCE 依赖切换到 Core；</p><p style="color:#000000; text-align:start"><span style="color:#0a7be0">■</span><span>&nbsp;</span>perf（X-Pack）：优化 Flyway 中声明的字符集以及排序相关语句；</p><p style="color:#000000; text-align:start"><span style="color:#0a7be0">■</span><span>&nbsp;</span>style（同步管理）：优化更新任务执行中状态图标的样式；</p><p style="color:#000000; text-align:start"><span style="color:#0a7be0">■</span><span>&nbsp;</span>style：优化大屏制作时右侧抽屉页面（编辑表单、过滤条件所属页面）底部的样式；</p><p style="color:#000000; text-align:start"><span style="color:#0a7be0">■</span><span>&nbsp;</span>style：优化登录页面页脚的样式。</p><h1>Bug 修复</h1><p style="color:#000000; text-align:start"><span><span style="color:#0a7be0">■</span><span>&nbsp;</span>fix（仪表板）：修复 Icon 的背景圆角与下方列表圆角不一致的问题；</span></p><p style="color:#000000; text-align:start"><span><span style="color:#0a7be0">■</span><span>&nbsp;</span>fix（仪表板）：修复富文本组件因与 X-Pack 功能冲突而导致不可用的问题；</span></p><p style="color:#000000; text-align:start"><span><span style="color:#0a7be0">■</span><span>&nbsp;</span>fix（仪表板）：修复富文本组件中华文仿宋等部分字体无法加粗的问题（#8174）；</span></p><p style="color:#000000; text-align:start"><span><span style="color:#0a7be0">■</span><span>&nbsp;</span>fix（仪表板）：修复了在 DataEase 社区版中，因仪表板不支持水印设置而导致的控制枱报错问题；</span></p><p style="color:#000000; text-align:start"><span><span style="color:#0a7be0">■</span><span>&nbsp;</span>fix（仪表板）：修改颜色选择弹出窗口内置的默认颜色；</span></p><p style="color:#000000; text-align:start"><span><span style="color:#0a7be0">■</span><span>&nbsp;</span>fix（工作台）：将模板中心错误的大屏展示间距更正为 16px；</span></p><p style="color:#000000; text-align:start"><span><span style="color:#0a7be0">■</span><span>&nbsp;</span>fix（工作台）：新增点击 Logo 即可返回工作台的设置；</span></p><p style="color:#000000; text-align:start"><span><span style="color:#0a7be0">■</span><span>&nbsp;</span>fix（数据大屏）：修复保持宽高比时，部分图表的拖拽点被拖拽的同时出现异常位移的问题；</span></p><p style="color:#000000; text-align:start"><span><span style="color:#0a7be0">■</span><span>&nbsp;</span>fix（数据大屏）：修复保持宽高比时，图表大幅度移动会出现比例改变的问题；</span></p><p style="color:#000000; text-align:start"><span><span style="color:#0a7be0">■</span><span>&nbsp;</span>fix（数据大屏）：修复对标线未显示的问题；</span></p><p style="color:#000000; text-align:start"><span><span style="color:#0a7be0">■</span><span>&nbsp;</span>fix（数据大屏）：修复组件角落处的移动点，在保持宽高比时被拖动会出现闪动的问题；</span></p><p style="color:#000000; text-align:start"><span><span style="color:#0a7be0">■</span><span>&nbsp;</span>fix（图表）：修复明细表分页状态下只能导出当前页数据的问题（#7972）；</span></p><p style="color:#000000; text-align:start"><span><span style="color:#0a7be0">■</span><span>&nbsp;</span>fix（图表）：修复指标卡名称修改不生效的问题（#8122）；</span></p><p style="color:#000000; text-align:start"><span><span style="color:#0a7be0">■</span><span>&nbsp;</span>fix（图表）：修复横向柱状图的横轴在图表格式化后不显示的问题；</span></p><p style="color:#000000; text-align:start"><span><span style="color:#0a7be0">■</span><span>&nbsp;</span>fix（图表）：修复表格添加序号列后，拖拽表格会导致设置的序号列列宽无法保存的问题；</span></p><p style="color:#000000; text-align:start"><span><span style="color:#0a7be0">■</span><span>&nbsp;</span>fix：修复了从其他页面切换至导航主菜单时，闪现其他空状态图片的问题；</span></p><p style="color:#000000; text-align:start"><span><span style="color:#0a7be0">■</span><span>&nbsp;</span>fix：修复</span><em><span>dectl</span></em><span>脚本在停止服务时，无法停止同步管理服务的问题；</span></p><p style="color:#000000; text-align:start"><span><span style="color:#0a7be0">■</span><span>&nbsp;</span>fix：升级 Calcite 版本，修复日期格式错乱的问题（#8032）。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 11 Mar 2024 16:06:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/282640/dataease-2-4-0-released</guid>
            <link>https://www.oschina.net/news/282640/dataease-2-4-0-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[🔥🔥🔥 Sigma v1.2.0 发布 - 一个极容易部署和维护的镜像仓库]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Sigma 是一个极容易部署和维护的镜像仓库，并且自主完整实现了&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopencontainers%2Fdistribution-spec%2Ftree%2Fv1.1.0" target="_blank">OCI Distribution Specification 1.1</a> 的协议，除了支持 docker 客户端以外，还支持其他类型的各种客户端，例如 oras，apptainer，helm，nerdctl 等。在部署层面上完全可以做到 all-in-one 的部署，启动单个容器即可将整体的镜像仓库的所有服务启动起来，在搞可用层面也可以将各个模块分别单独灵活部署。</p><pre><code class="language-bash">docker run -d --name sigma -p 3000:3000 tosone/sigma:nightly-alpine</code></pre><h2>架构图</h2><p><img height="2246" src="https://oscimg.oschina.net/oscnet/up-7e22efc5daa649c84774a539ee9b0367b36.png" width="5881" referrerpolicy="no-referrer"></p><h2>更新日志</h2><ul><li>增加 webhook 的功能，支持在 namespace 创建的时候触发 webhook，支持在 gc 过程中触发 webhook。</li><li>修复 gc 过程中对 artifact 的清理逻辑。</li><li>暴露 sigma 中的一些 metric，在线的 metric 可以看这里：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgrafana.sigma.tosone.cn%2Fpublic-dashboards%2Febf12be7e7f44b59bfe4096f0f51ab88" target="_blank">https://grafana.sigma.tosone.cn/public-dashboards/ebf12be7e7f44b59bfe4096f0f51ab88</a></li><li>对于静态资源发挥 etag。</li><li>修改 namespace 中角色权限校验部分的逻辑。</li></ul><h2>项目地址</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">gitee:&nbsp;<a href="https://gitee.com/xtosone/sigma">https://gitee.com/xtosone/sigma</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">github:&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgo-sigma%2Fsigma" target="_blank">https://github.com/go-sigma/sigma</a></p><h2><strong>Sigma 详细介绍</strong></h2><p style="color:#000000; margin-left:0; margin-right:0; text-align:left">在云原生的时代，绝大多数 DevOps 的系统中，软件交付的制品已经从软件本身转换到了 OCI-Native 的镜像，且其已经是必不可少的一个重要组件，它的最大优势是帮助减少制品交付的复杂度，那么就需要 OCI-Native 的镜像仓库从角色权限的角度维护制品版本，注重制品交付的安全性，保证容器部署的速度。</p><p style="color:#000000; margin-left:0; margin-right:0; text-align:left">开发<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgo-sigma%2Fsigma" target="_blank">sigma</a><span>&nbsp;</span>的最初的想法是是降低<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgoharbor%2Fharbor" target="_blank">Harbor</a><span>&nbsp;</span>组件部署的复杂度，并且在高可用的角度又不失其架构优势。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgo-sigma%2Fsigma" target="_blank">sigma</a><span>&nbsp;</span>希望在制品元数据管理、权限管理、制品分发、部署和维护容易程度这四个方面作出最大努力，并且在一开始设计<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgo-sigma%2Fsigma" target="_blank">sigma</a><span>&nbsp;</span>的时候就对这几方面做出思考。</p><p style="color:#000000; margin-left:0; margin-right:0; text-align:left">在个人开发者的使用场景里需要制品元数据管理友好、UI 易用、部署和维护简单的镜像仓库，并且在镜像仓库中能够加入类似<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhub.docker.com%2F" target="_blank">docker hub</a><span>&nbsp;</span>的镜像构建功能将会是一个很受大家期待的功能。在企业团队中，会对镜像仓库的稳定性和兼容性提出更高要求，<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgo-sigma%2Fsigma" target="_blank">sigma</a><span>&nbsp;</span>希望可以更深入的参与到整个 DevOps 流程，接入已有的 DevOps 系统，而不单单是一个仓库存储的角色。</p><h3><strong>sigma 的优势</strong></h3><h4><strong>部署架构</strong></h4><p style="color:#000000; margin-left:0; margin-right:0; text-align:left"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgo-sigma%2Fsigma" target="_blank">sigma</a><span>&nbsp;</span>在部署层面上最简化可以做到单文件单个启动命令，将前端、镜像清理和镜像构建等异步任务服务以及镜像元数据管理等服务启动起来，并且仅依赖文件系统即可。 在高可用部署的情况下，可以将前端、镜像元数据管理、镜像清理和镜像构建等异步任务服务等分别作为单独的服务运行，api-server 与镜像元数据管理服务分别单独部署，主要在于镜像元数据管理服务会参与到镜像的拉取和推送服务中，涉及到的流量较大，这样便不会影响到 api-server 的稳定性，依赖的中间件将会有对象存储、Redis、PostgreSQL/MySQL。具体部署细节可以参考<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgo-sigma%2Fsigma" target="_blank">sigma</a><span>&nbsp;</span>chart 中的实现：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgo-sigma%2Fsigma%2Ftree%2Fmain%2Fdeploy%2Fsigma" target="_blank">https://github.com/go-sigma/sigma/tree/main/deploy/sigma</a>。</p><h4><strong>镜像元数据管理</strong></h4><p style="color:#000000; margin-left:0; margin-right:0; text-align:left">镜像元数据管理这里采用和<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhub.docker.com%2F" target="_blank">docker hub</a><span>&nbsp;</span>比较类似的展示方式，在 repository 层级之下展示 tag，而不是像<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgoharbor%2Fharbor" target="_blank">Harbor</a><span>&nbsp;</span>和 ghcr 一样展示 artifact，用户其实对于 artifact hash 值的展示不是那么理解，而 tag 是用户自己定义的东西，更容易理解一些，在对架构镜像的展示方式和 docker hub 保持一致。 在多架构镜像这里，会有类似 sbom 的 artifact 的内容推送到 artifact list 内，<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgo-sigma%2Fsigma" target="_blank">sigma</a><span>&nbsp;</span>的前端将会仅展示 image、imageIndex、chart 等类型的 artifact，但是在<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopencontainers%2Fdistribution-spec" target="_blank">distribution-spec</a><span>&nbsp;</span>标准接口上，<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgo-sigma%2Fsigma" target="_blank">sigma</a><span>&nbsp;</span>还是会返回所有的 artifact。</p><p><img alt="" src="https://fs.tosone.cn/sigma/20231225/tags.jpg" referrerpolicy="no-referrer"></p><h4><strong>路由匹配</strong></h4><p style="color:#000000; margin-left:0; margin-right:0; text-align:left"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopencontainers%2Fdistribution-spec" target="_blank">distribution-spec</a><span>&nbsp;</span>定义的镜像仓库实现的 API 上，在 repository 层级这里是允许有斜线存在的（例如：/v2/library/alpine/manifests/latest），在<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdistribution%2Fdistribution" target="_blank">distribution</a><span>&nbsp;</span>的实现上是利用正则来匹配路由的，在绝大多数的 web 框架都是将斜线当作是资源层级分隔符，导致这里比较难以实现，或者说不利用正则很难有好的实现方式。在<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgo-sigma%2Fsigma" target="_blank">sigma</a><span>&nbsp;</span>中首先使得<span>&nbsp;</span><code>/v2/</code><span>&nbsp;</span>的请求进入到统一的一个路由，再使用字符串匹配切割的方式检测路由的匹配情况。例如 manifests 相关的路由实现代码如下：</p><pre><code><span><span style="color:#c678dd">func</span>&nbsp;<span>(f&nbsp;factory)</span>&nbsp;<span style="color:#61aeee">Initialize</span><span>(c&nbsp;echo.Context)</span>&nbsp;<span style="color:#61aeee">error</span></span>&nbsp;{
&nbsp;&nbsp;method&nbsp;:=&nbsp;c.Request().Method
&nbsp;&nbsp;uri&nbsp;:=&nbsp;c.Request().RequestURI
&nbsp;&nbsp;urix&nbsp;:=&nbsp;uri[:strings.LastIndex(uri,&nbsp;<span style="color:#98c379">"/"</span>)]
&nbsp;&nbsp;manifestHandler&nbsp;:=&nbsp;handlerNew()
&nbsp;&nbsp;<span style="color:#c678dd">if</span>&nbsp;strings.HasSuffix(urix,&nbsp;<span style="color:#98c379">"/manifests"</span>)&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#c678dd">switch</span>&nbsp;method&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#c678dd">case</span>&nbsp;http.MethodGet:
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#c678dd">return</span>&nbsp;manifestHandler.GetManifest(c)
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#c678dd">case</span>&nbsp;http.MethodHead:
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#c678dd">return</span>&nbsp;manifestHandler.HeadManifest(c)
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#c678dd">case</span>&nbsp;http.MethodPut:
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#c678dd">return</span>&nbsp;manifestHandler.PutManifest(c)
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#c678dd">case</span>&nbsp;http.MethodDelete:
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#c678dd">return</span>&nbsp;manifestHandler.DeleteManifest(c)
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#c678dd">default</span>:
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#c678dd">return</span>&nbsp;c.String(http.StatusMethodNotAllowed,&nbsp;<span style="color:#98c379">"Method&nbsp;Not&nbsp;Allowed"</span>)
&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;}&nbsp;<span style="color:#c678dd">else</span>&nbsp;<span style="color:#c678dd">if</span>&nbsp;strings.HasSuffix(urix,&nbsp;<span style="color:#98c379">"/referrers"</span>)&nbsp;&amp;&amp;&nbsp;method&nbsp;==&nbsp;http.MethodGet&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#c678dd">return</span>&nbsp;manifestHandler.GetReferrer(c)
&nbsp;&nbsp;}
&nbsp;&nbsp;<span style="color:#c678dd">return</span>&nbsp;distribution.Next&nbsp;<em>//&nbsp;进入到下一个路由匹配规则中</em>
}
</code></pre><h4><strong>镜像存储</strong></h4><p style="color:#000000; margin-left:0; margin-right:0; text-align:left">与<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdistribution%2Fdistribution" target="_blank">distribution</a><span>&nbsp;</span>项目不相同的是在镜像的 manifest 和 blob 文件存储上是完全不同的，<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdistribution%2Fdistribution" target="_blank">distribution</a><span>&nbsp;</span>在镜像的存储上主要依赖存储上的结构，将 tag 与 artifact 组成关联关系，artifact 与 blob 组成关联关系，这样就可以让<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdistribution%2Fdistribution" target="_blank">distribution</a><span>&nbsp;</span>不依赖任何的数据库就可以达到管理镜像元数据和镜像 blob 的目的，从这一点上来看是很不错的。但是在镜像 gc 的时候会产生很大的麻烦，因为镜像清理要涉及到 blob 的清理，但是反向的关联在文件系统上比较难实现，这也是导致<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgoharbor%2Fharbor" target="_blank">Harbor</a><span>&nbsp;</span>在很早之前的版本上只能做到在镜像清理的时候停止镜像仓库的推送功能，这是完全不能接受的。</p><p style="color:#000000; margin-left:0; margin-right:0; text-align:left"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgo-sigma%2Fsigma" target="_blank">sigma</a><span>&nbsp;</span>在存储这些关联关系的时候不再使用文件系统来实现，而是直接使用数据库，文件系统层级将仅仅存储 blob 数据，存储 blob 的目录结构与<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdistribution%2Fdistribution" target="_blank">distribution</a><span>&nbsp;</span>上保持一致，artifact 与 tag 直接存储在数据库内。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgo-sigma%2Fsigma" target="_blank">sigma</a><span>&nbsp;</span>的镜像清理在实现层面上是多线程的，将没有关联关系的 blob 直接从文件系统层级上删除，并且不会影响到前端的镜像推送功能（需要说明的是，在删除和新的 blob 推送上在相同的 blob 这里是有一个毫秒级的锁在的，用户对此无法感知），具体实现可以看这里：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgo-sigma%2Fsigma%2Fblob%2Fmain%2Fpkg%2Fdaemon%2Fgc%2Fgc_blob.go" target="_blank">https://github.com/go-sigma/sigma/blob/main/pkg/daemon/gc/gc_blob.go</a>。</p><h4><strong>镜像构建</strong></h4><p style="color:#000000; margin-left:0; margin-right:0; text-align:left">镜像构建主要依赖 Dockerfile，但是 Dockerfile 构建的时候大多数需要依赖代码仓库，所以<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgo-sigma%2Fsigma" target="_blank">sigma</a><span>&nbsp;</span>目前对接了 GitHub 和 GitLab，可以将其中的代码仓库列表获取到让用户选择代码仓库填写相关参数进行构建。</p><p><img alt="" src="https://fs.tosone.cn/sigma/20231225/build-conf.jpg" referrerpolicy="no-referrer"></p><p><img alt="" src="https://fs.tosone.cn/sigma/20231225/build-log.jpg" referrerpolicy="no-referrer"></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:left">用户可以选择指定的代码仓库和代码仓库的分支，填写 Dockerfile 相关的构建参数，例如：构建架构，build args 等。 其中也支持定时任务的构建，也支持代码仓库的 hook event 触发构建，例如：push event，tag event 等。 sigma 在构建的时候随时可以对任务进行停止操作，在构建过程中会有实时的日志展示到前端。在<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgo-sigma%2Fsigma" target="_blank">sigma</a><span>&nbsp;</span>构建完成的时候会将构建过程中得到的缓存文件打包缓存到<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgo-sigma%2Fsigma" target="_blank">sigma</a><span>&nbsp;</span>对接的文件系统或对象存储中，到下次构建前会将缓存加载进来再做构建，构建任务完成之前还会对镜像使用<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsigstore%2Fcosign" target="_blank">cosign</a><span>&nbsp;</span>进行签名，签名使用的私钥为<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgo-sigma%2Fsigma" target="_blank">sigma</a><span>&nbsp;</span>启动时生成的私钥，存储在数据库中。</p><h4><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopencontainers%2Fdistribution-spec" target="_blank">distribution-spec</a><span>&nbsp;</span>1.1 的支持</strong></h4><p style="color:#000000; margin-left:0; margin-right:0; text-align:left"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdistribution%2Fdistribution" target="_blank">distribution</a><span>&nbsp;</span>目前尚未支持<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopencontainers%2Fdistribution-spec" target="_blank">distribution-spec</a><span>&nbsp;</span>1.1 定义的内容，目前<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgoharbor%2Fharbor" target="_blank">Harbor</a><span>&nbsp;</span>和<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fproject-zot%2Fzot" target="_blank">zot</a><span>&nbsp;</span>都是实现了的，<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgo-sigma%2Fsigma" target="_blank">sigma</a><span>&nbsp;</span>也对<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopencontainers%2Fdistribution-spec" target="_blank">distribution-spec</a><span>&nbsp;</span>1.1 做了实现，并且在镜像清理中会检查 referrer 的内容，当 artifact 被删除的时候会连同之前其 artifact 的其他 artifact 全部删除。</p><h4><strong>quota</strong></h4><p style="color:#000000; margin-left:0; margin-right:0; text-align:left"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgo-sigma%2Fsigma" target="_blank">sigma</a><span>&nbsp;</span>支持在 namespace 和 repository 设置 size 和 tag 上限，但其中遵循 namespace 和 repository 的从属容量限制关系。 在 namespace 页面上可以方便查看当前的容量使用情况，未来会支持当存储容量接近上限的时候发出对应的 hook event。如下图：</p><p><img alt="" src="https://fs.tosone.cn/sigma/20231225/quota.jpg" referrerpolicy="no-referrer"></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:left">目前<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgo-sigma%2Fsigma" target="_blank">sigma</a><span>&nbsp;</span>支持在镜像推送达到存储容量或者 tag 容量上限的时候，在客户端给出相应的提示信息。</p><p><img alt="" src="https://fs.tosone.cn/sigma/20231225/quota-push.jpg" referrerpolicy="no-referrer"></p><h4><strong>镜像扫描</strong></h4><p style="color:#000000; margin-left:0; margin-right:0; text-align:left">目前在镜像类型的制品在推送完成之后就会在后端异步的执行<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Faquasecurity%2Ftrivy" target="_blank">trivy</a><span>&nbsp;</span>镜像扫描的任务，并且镜像扫描的任务将会和<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Faquasecurity%2Ftrivy" target="_blank">trivy</a><span>&nbsp;</span>的漏洞库做关联，当漏洞库有更新时，用户可以选择是否重新进行进行镜像扫描，后续 sigma 会支持当镜像有严重漏洞的时候禁止镜像的拉取操作。</p><p><img alt="" src="https://fs.tosone.cn/sigma/20231225/vuln.png" referrerpolicy="no-referrer"></p><h3><strong>未来规划</strong></h3><ul><li><p>在存储层将会支持更多的对象存储的 driver，目前仅支持 filesystem，s3，cos，如果对应的对象存储支持 s3 协议则可以无缝对接。</p></li><li><p>在镜像分发的可分发性上做出一些开关，当镜像被发现一些严重的漏洞的时候将不允许被分发，当镜像没有做签名的时候不允许被分发。</p></li><li><p>完善更多的镜像 Proxy 策略，对接更多的镜像仓库，可以缓存 ghcr.io 的镜像等等。完善更多的镜像复制策略，在做 proxy 的时候可以在 repository 层级上做更多的设置。</p></li><li><p>实现多地域 sigma 实例镜像同步的功能。</p></li><li><p>实现事件触发的 hook event，例如镜像构建完成，镜像 tag 推送完成等事件。</p></li><li><p>未来在镜像分发方面将会做更多努力，将会支持 P2P 和 lazy pull 特性。</p></li><li><p>对接更多的第三方登录的方式，优化权限管理，在权限粒度上设置的更精细一些，支持多租户的管理。</p></li></ul><h3><strong>最后</strong></h3><p style="color:#000000; margin-left:0; margin-right:0; text-align:left">在 2023 年 12 月底发布 v1.0.0 正式开源，欢迎各位开发者体验试用，更欢迎大家一起建设<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgo-sigma%2Fsigma" target="_blank">sigma</a><span>&nbsp;</span>的未来，参与到项目中来。</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 11 Mar 2024 14:48:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/282630/go-sigma-1-2-0-released</guid>
            <link>https://www.oschina.net/news/282630/go-sigma-1-2-0-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Jeepay v2.3.0 正式发布：支付系统支持一键部署]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="background-color:#ffffff; color:#333333">Jeepay 是一套适合互联网企业使用的开源支付系统，支持多渠道服务商和普通商户模式。已对接</span><code>微信支付</code><span style="background-color:#ffffff; color:#333333">，</span><code>支付宝</code><span style="background-color:#ffffff; color:#333333">，</span><code>云闪付</code><span style="background-color:#ffffff; color:#333333">官方接口，支持聚合码支付。<br><br> v2.3.0 版本升级内容：</span></p><div><ol><li>优化：升级 wxjava/hutool 到最新版本， 适配最新版本微信支付接口</li><li>新增：添加项目下的 Dockerfile 文件</li><li>新增：一键部署安装、卸载脚本</li><li>修复： FastJSON 开启安全模式，解决安全检测漏洞</li></ol></div><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">更多升级日志：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.jeequan.com%2Fdev%2Fupdate%2Fcategory_1016.html" target="_blank">https://www.jeequan.com/dev/update/category_1016.html</a><br><br> 项目特点</p><ul><li>支持多渠道对接，支付网关自动路由</li><li>已对接<code>微信</code>服务商和普通商户接口，支持<span>&nbsp;</span><code>V2</code><span>&nbsp;</span>和<span>&nbsp;</span><code>V3</code><span>&nbsp;</span>接口</li><li>已对接<code>支付宝</code>服务商和普通商户接口，支持 RSA 和 RSA2 签名</li><li>已对接<code>云闪付</code>服务商接口，可选择多家支付机构</li><li>提供 http 形式接口，提供各语言的<span>&nbsp;</span><code>sdk</code><span>&nbsp;</span>实现，方便对接</li><li>接口请求和响应数据采用签名机制，保证交易安全可靠</li><li>系统安全，支持<code>分布式</code>部署，<code>高并发</code></li><li>管理端包括<code>运营平台</code>和<code>商户系统</code></li><li>管理平台操作界面简洁、易用</li><li>支付平台到商户系统的订单通知使用 MQ 实现，保证了高可用，消息可达</li><li>支付渠道的接口参数配置界面自动化生成</li><li>使用<span>&nbsp;</span><code>spring security</code><span>&nbsp;</span>实现权限管理</li><li>前后端分离架构，方便二次开发</li><li>由原<span>&nbsp;</span><code>XxPay</code><span>&nbsp;</span>团队开发，有着多年支付系统开发经验</li></ul><blockquote><p style="margin-left:0; margin-right:0">Jeepay 运营平台功能</p></blockquote><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="Jeepay 运营平台功能" src="https://static.oschina.net/uploads/img/202207/08190720_WljY.png" referrerpolicy="no-referrer"></p><blockquote><p style="margin-left:0; margin-right:0">Jeepay 商户系统功能</p></blockquote><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="Jeepay 商户系统功能" src="https://static.oschina.net/uploads/img/202207/08190720_luZt.png" referrerpolicy="no-referrer"></p><h2>🍯 系统截图</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><code>以下截图是从实际已完成功能界面截取,截图时间为：2021-07-06 08:59</code></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="Jeepay 演示界面" src="https://static.oschina.net/uploads/img/202207/08190720_qjBV.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="Jeepay 演示界面" src="https://static.oschina.net/uploads/img/202207/08190721_IaeV.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="Jeepay 演示界面" src="https://static.oschina.net/uploads/img/202207/08190721_jxZD.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="Jeepay 演示界面" src="https://static.oschina.net/uploads/img/202207/08190721_AAZk.png" referrerpolicy="no-referrer"></p><p>&nbsp;</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 11 Mar 2024 11:53:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/282607/jeepay-2-3-0-released</guid>
            <link>https://www.oschina.net/news/282607/jeepay-2-3-0-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
    </channel>
</rss>
