<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[开源中国-软件更新资讯]]>
        </title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="https://rsshub.app/oschina/news/project" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[开源中国-软件更新资讯 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Thu, 23 Nov 2023 03:58:38 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[PHP 8.3 GA]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>PHP 8.3 <u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.php.net%2Freleases%2F8.3%2Fzh.php" target="_blank">已正式发布</a></u>。主要变化包括：</p><ul><li>类常量显式类型 (Typed class constants)</li><li>只读属性深拷贝</li><li>新增<code>#[\Override]</code>属性</li><li>新增<code>json_validate()</code>函数</li><li>添加<code>Randomizer::getBytesFromString()</code>方法</li><li>添加<code>Randomizer::getFloat()</code>和<code>Randomizer::nextFloat()</code>方法</li><li>以及更好的性能、更好的语法、改进类型安全</li></ul><p><img height="1114" src="https://static.oschina.net/uploads/space/2023/1123/110607_AwYL_2720166.png" width="2552" referrerpolicy="no-referrer"></p><p>下面介绍部分语法的变化。</p><ul><li><strong>类型化类常量</strong></li></ul><p>PHP &lt; 8.3</p><pre><code class="language-php">interface I {
    // We may naively assume that the PHP constant is always a string.
    const PHP = 'PHP 8.2';
}

class Foo implements I {
    // But implementing classes may define it as an array.
    const PHP = [];
}</code></pre><p>PHP 8.3</p><pre><code class="language-php">interface I {
    const string PHP = 'PHP 8.3';
}

class Foo implements I {
    const string PHP = [];
}

// Fatal error: Cannot use array as value for class constant
// Foo::PHP of type string</code></pre><ul><li><strong>动态获取类常量</strong></li></ul><p>PHP &lt; 8.3</p><pre><code class="language-php">class Foo {
    const PHP = 'PHP 8.2';
}

$searchableConstant = 'PHP';

var_dump(constant(Foo::class . "::{$searchableConstant}"));</code></pre><p>PHP 8.3</p><pre><code class="language-php">class Foo {
    const PHP = 'PHP 8.3';
}

$searchableConstant = 'PHP';

var_dump(Foo::{$searchableConstant});</code></pre><ul><li><strong>只读属性深拷贝</strong></li></ul><p><code>readonly</code>属性现在可以在魔术方法<code>__clone</code>中被修改一次，以此实现只读属性的深拷贝。</p><p>PHP &lt; 8.3</p><pre><code class="language-php">class PHP {
    public string $version = '8.2';
}

readonly class Foo {
    public function __construct(
        public PHP $php
    ) {}

    public function __clone(): void {
        $this-&gt;php = clone $this-&gt;php;
    }
}

$instance = new Foo(new PHP());
$cloned = clone $instance;

// Fatal error: Cannot modify readonly property Foo::$php</code></pre><p>PHP 8.3</p><pre><code class="language-php">class PHP {
    public string $version = '8.2';
}

readonly class Foo {
    public function __construct(
        public PHP $php
    ) {}

    public function __clone(): void {
        $this-&gt;php = clone $this-&gt;php;
    }
}

$instance = new Foo(new PHP());
$cloned = clone $instance;

$cloned-&gt;php-&gt;version = '8.3';</code></pre><ul><li><strong>新增<code>#[\Override]</code>属性</strong></li></ul><p>通过给方法添加<code>#[\Override]</code>属性，PHP 将确保在父类或实现的接口中存在同名的方法。<br> 添加该属性表示明确说明复盖父方法是有意为之，并且简化了重构过程，因为删除被覆盖的父方法将被检测出来。</p><p>PHP &lt; 8.3</p><pre><code class="language-php">use PHPUnit\Framework\TestCase;

final class MyTest extends TestCase {
    protected $logFile;

    protected function setUp(): void {
        $this-&gt;logFile = fopen('/tmp/logfile', 'w');
    }

    protected function taerDown(): void {
        fclose($this-&gt;logFile);
        unlink('/tmp/logfile');
    }
}

// The log file will never be removed, because the
// method name was mistyped (taerDown vs tearDown).</code></pre><p>PHP 8.3</p><pre><code class="language-php">use PHPUnit\Framework\TestCase;

final class MyTest extends TestCase {
    protected $logFile;

    protected function setUp(): void {
        $this-&gt;logFile = fopen('/tmp/logfile', 'w');
    }

    #[\Override]
    protected function taerDown(): void {
        fclose($this-&gt;logFile);
        unlink('/tmp/logfile');
    }
}

// Fatal error: MyTest::taerDown() has #[\Override] attribute,
// but no matching parent method exists</code></pre><ul><li><strong>新增<code>json_validate()</code>函数</strong></li></ul><p><code>json_validate()</code>可以检查一个字符串是否为语法正确的 JSON，比<code>json_decode()</code>更有效。</p><p>PHP &lt; 8.3</p><pre><code class="language-php">function json_validate(string $string): bool {
    json_decode($string);

    return json_last_error() === JSON_ERROR_NONE;
}

var_dump(json_validate('{ "test": { "foo": "bar" } }')); // true</code></pre><p>PHP 8.3</p><pre><code class="language-php">var_dump(json_validate('{ "test": { "foo": "bar" } }')); // true</code></pre><hr><p>此外，PHP 8.0 的生命周期即将结束。早在 2022 年 11 月 26 日，PHP 8.0 结束了积极支持，而安全支持也将在 PHP 8.3 正式发布三天后——2023 年 11 月 26 日停止。</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 23 Nov 2023 03:12:31 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/267734/php-8-3-ga</guid>
            <link>https://www.oschina.net/news/267734/php-8-3-ga</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Node.js v20.10.0 (LTS)]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Node.js v20.10.0 已正式发布，代号 'Iron'。根据发布时间表，由于上月&nbsp;Node.js 21 已正式发布，因此&nbsp;Node.js 20 就变成了长期支持版本 (LTS)。</p><p><strong>新版本主要变化</strong></p><ul><li>引入新的<code>--experimental-default-type</code>flag，用于快速启用 module 默认值</li><li>引入新的<code>--experimental-detect-module</code>flag，支持检测不明确的 JavaScript 中的 ESM 语法</li><li>为文件系统函数引入新的&nbsp;<code>flush</code>&nbsp;选项</li><li>新增实验性的 WebSocket 客户端</li><li>修复 vm.Script 的 V8 编译缓存支持</li></ul><p><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnodejs.org%2Fen%2Fblog%2Frelease%2Fv20.10.0" target="_blank">详情查看发布公告</a></u>。</p><p>延伸阅读：<u><em><a href="https://www.oschina.net/news/262268/nodejs-v21-release-released" target="news">Node.js 21 正式发布</a></em></u></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 23 Nov 2023 02:59:31 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/267730/nodejs-v20-10-0-lts</guid>
            <link>https://www.oschina.net/news/267730/nodejs-v20-10-0-lts</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[RuoYi 4.7.8 发布，更多细节优化]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="background-color:#ffffff; color:#333333">若依管理系统 v4.7.8&nbsp;已发布，更新日志：</span></p><ul><li>用户列表新增抽屉效果详细信息</li><li>操作日志列表新增 IP 地址查询</li><li>定时任务新增页去除状态选项</li><li>系统管理角色列表显示数据权限</li><li>通用排序属性 orderBy 参数限制长度</li><li>新增 isScrollToTop 页签切换滚动到顶部</li><li>Excel 自定义数据处理器增加单元格/工作簿对象</li><li>新增表格参数（数据值为空时显示的内容     Text）</li><li>升级 oshi 到最新版本 6.4.7</li><li>升级 shiro 到最新版本 1.13.0</li><li>升级 druid 到最新版本 1.2.20</li><li>升级 pagehelper 到最新版 1.4.7</li><li>升级 spring-boot 到最新版本 2.5.15</li><li>升级 jquery 到最新版 v3.7.1</li><li>升级 layer 到最新版本 v3.7.0</li><li>升级 layui 到最新版本 v2.8.18</li><li>升级 x-editable 到最新版本 1.5.3</li><li>修复自定义字典样式不生效的问题</li><li>修复弹窗按钮启用禁用方法无效问题</li><li>修复横向菜单关闭最后一个页签状态问题</li><li>修复 Excel 导入数据临时文件无法删除问题</li><li>修复表格行内编辑启用翻页记住选择无效问题</li><li>修复 Excels 导入时无法获取到 dictType 字典值问题</li><li>优化重置密码鼠标按下显示密码</li><li>优化参数键值文本框改为文本域</li><li>优化表格重置默认返回到第一页</li><li>优化菜单管理类型为按钮状态可选</li><li>优化数字金额大写转换精度丢失问题</li><li>优化树表查询无数据时清除分页信息</li><li>优化通用 detail 详细信息弹窗不显示按钮</li><li>其他细节优化</li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">RuoYi（若依）是一个基于 Java EE 企业级快速开发平台，提供前后端分离与不分离、微服务，移动端版本。主要目的让开发者注重专注业务，降低技术难度，从而节省人力成本，缩短项目周期，提高软件安全质量，并且毫无保留全部开源给个人及企业免费使用（都可以免费商用无需授权）。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">下载地址<span>&nbsp;</span><a href="https://gitee.com/y_project/RuoYi">RuoYi</a></p><blockquote><p style="margin-left:0; margin-right:0">如需分离版本，请移步&nbsp;<a href="https://gitee.com/y_project/RuoYi-Vue">RuoYi-Vue</a>&nbsp;，如需微服务版本，请移步&nbsp;<a href="https://gitee.com/y_project/RuoYi-Cloud" target="_blank">RuoYi-Cloud</a>&nbsp; &nbsp;，如需移动端版本，请移步&nbsp;<a href="https://gitee.com/y_project/RuoYi-App" target="_blank">RuoYi-App</a>&nbsp;</p></blockquote><h4>内置功能</h4><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">1. &nbsp;用户管理：用户是系统操作者，该功能主要完成系统用户配置。<br> 2. &nbsp;部门管理：配置系统组织机构（公司、部门、小组），树结构展现支持权限。<br> 3. &nbsp;岗位管理：配置系统用户所属担任职务。<br> 4. &nbsp;菜单管理：配置系统菜单，操作权限，按钮权限标识等。<br> 5. &nbsp;角色管理：角色菜单权限分配、设置角色按机构进行数据范围权限划分。<br> 6. &nbsp;字典管理：对系统中经常使用的一些较为固定的数据进行维护。<br> 7. &nbsp;参数管理：对系统动态配置常用参数。<br> 8. &nbsp;通知公告：系统通知公告信息发布维护。<br> 9. &nbsp;操作日志：系统正常操作日志记录和查询；系统异常信息日志记录和查询。<br> 10. &nbsp;登录日志：系统登录日志记录查询包含登录异常。<br> 11. 在线用户：当前系统中活跃用户状态监控。<br> 12. 定时任务：在线（添加、修改、删除) 任务调度包含执行结果日志。<br> 13. 代码生成：前后端代码的生成（java、html、xml、sql) 支持 CRUD 下载 。<br> 14. 系统接口：根据业务代码自动生成相关的 api 接口文档。<br> 15. 服务监控：监视当前系统 CPU、内存、磁盘、堆栈等相关信息。<br> 16. 缓存监控：对系统的缓存查询，删除、清空等操作。<br> 17. 在线构建器：拖动表单元素生成相应的 HTML 代码。<br> 18. 连接池监视：监视当前系统数据库连接池状态，可进行分析 SQL 找出系统性能瓶颈。</p><h3>系统演示 &nbsp;<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.ruoyi.vip%2F" target="_blank">http://www.ruoyi.vip</a></h3><table cellspacing="0" style="--darkreader-inline-bgcolor:#181a1b; --darkreader-inline-border-bottom:currentcolor; --darkreader-inline-border-left:currentcolor; --darkreader-inline-border-right:currentcolor; --darkreader-inline-border-top:currentcolor; --darkreader-inline-color:#bdb7af; -webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:1px; border:medium none; box-sizing:border-box; color:#444444; display:block; font-family:-apple-system,BlinkMacSystemFont,&quot;Apple Color Emoji&quot;,&quot;Segoe UI Emoji&quot;,&quot;Segoe UI Symbol&quot;,&quot;Segoe UI&quot;,&quot;PingFang SC&quot;,&quot;Hiragino Sans GB&quot;,&quot;Microsoft YaHei&quot;,&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:14px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; line-height:inherit; margin:0px; max-width:100%; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-indent:0px; text-transform:none; white-space:normal; widows:2; width:776px; word-break:keep-all; word-spacing:0px"><tbody><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px"><img src="https://oscimg.oschina.net/oscnet/up-42e518aa72a24d228427a1261cb3679f395.png" referrerpolicy="no-referrer"></td><td style="border-color:#dddddd; border-style:solid; border-width:1px"><img src="https://oscimg.oschina.net/oscnet/up-7f20dd0edba25e5187c5c4dd3ec7d3d9797.png" referrerpolicy="no-referrer"></td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px"><img src="https://oscimg.oschina.net/oscnet/up-2dae3d87f6a8ca05057db059cd9a411d51d.png" referrerpolicy="no-referrer"></td><td style="border-color:#dddddd; border-style:solid; border-width:1px"><img src="https://oscimg.oschina.net/oscnet/up-ea4d98423471e55fba784694e45d12bd4bb.png" referrerpolicy="no-referrer"></td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px"><img src="https://oscimg.oschina.net/oscnet/up-7f6c6e9f5873efca09bd2870ee8468b8fce.png" referrerpolicy="no-referrer"></td><td style="border-color:#dddddd; border-style:solid; border-width:1px"><img src="https://oscimg.oschina.net/oscnet/up-c708b65f2c382a03f69fe1efa8d341e6cff.png" referrerpolicy="no-referrer"></td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px"><img src="https://oscimg.oschina.net/oscnet/up-9ab586c47dd5c7b92bca0d727962c90e3b8.png" referrerpolicy="no-referrer"></td><td style="border-color:#dddddd; border-style:solid; border-width:1px"><img src="https://oscimg.oschina.net/oscnet/up-ef954122a2080e02013112db21754b955c6.png" referrerpolicy="no-referrer"></td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px"><img src="https://oscimg.oschina.net/oscnet/up-088edb4d531e122415a1e2342bccb1a9691.png" referrerpolicy="no-referrer"></td><td style="border-color:#dddddd; border-style:solid; border-width:1px"><img src="https://oscimg.oschina.net/oscnet/up-f886fe19bd820c0efae82f680223cac196c.png" referrerpolicy="no-referrer"></td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px"><img src="https://oscimg.oschina.net/oscnet/up-c7a2eb71fa65d6e660294b4bccca613d638.png" referrerpolicy="no-referrer"></td><td style="border-color:#dddddd; border-style:solid; border-width:1px"><img src="https://oscimg.oschina.net/oscnet/up-e60137fb0787defe613bd83331dc4755a70.png" referrerpolicy="no-referrer"></td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px"><img src="https://oscimg.oschina.net/oscnet/up-7c51c1b5758f0a0f92ed3c60469b7526f9f.png" referrerpolicy="no-referrer"></td><td style="border-color:#dddddd; border-style:solid; border-width:1px"><img src="https://oscimg.oschina.net/oscnet/up-15181aed45bb2461aa97b594cbf2f86ea5f.png" referrerpolicy="no-referrer"></td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px"><img src="https://oscimg.oschina.net/oscnet/up-83326ad52ea63f67233d126226738054d98.png" referrerpolicy="no-referrer"></td><td style="border-color:#dddddd; border-style:solid; border-width:1px"><img src="https://oscimg.oschina.net/oscnet/up-3bd6d31e913b70df00107db51d64ef81df7.png" referrerpolicy="no-referrer"></td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px"><img src="https://oscimg.oschina.net/oscnet/up-70a2225836bc82042a6785edf6299e2586a.png" referrerpolicy="no-referrer"></td><td style="border-color:#dddddd; border-style:solid; border-width:1px"><img src="https://oscimg.oschina.net/oscnet/up-0184d6ab01fdc6667a14327fcaf8b46345d.png" referrerpolicy="no-referrer"></td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px"><img src="https://oscimg.oschina.net/oscnet/up-64d8086dc2c02c8f71170290482f7640098.png" referrerpolicy="no-referrer"></td><td style="border-color:#dddddd; border-style:solid; border-width:1px"><img src="https://oscimg.oschina.net/oscnet/up-5e4daac0bb59612c5038448acbcef235e3a.png" referrerpolicy="no-referrer"></td></tr></tbody></table></div>
                                    ]]>
            </description>
            <pubDate>Thu, 23 Nov 2023 02:50:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/267727/ruoyi-4-7-8-released</guid>
            <link>https://www.oschina.net/news/267727/ruoyi-4-7-8-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[🍃 layui-vue v2.12.0 发布，一个 Vue 3 UI 框架]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>更新内容：</p><p>[新增] layer 组件 resizeStart 属性，拉伸开始回调。<br> [新增] layer 组件 resizing 属性，拉伸中回调。<br> [新增] layer 组件 resizeEnd 属性，拉伸结束回调。<br> [新增] form 组件 mode 属性，全局设置表单项布局模式，block 与 inline 未可选值。<br> [新增] table 组件 empty 插槽，提供自定义空状态的能力。<br> [新增] table 组件 empty-description 属性，设置没有数据时的默认文本。<br> [修复] avatar 组件 class 错误，导致内容不垂直水平居中的问题。<br> [修复] slider 组件 max 属性响应式特性失效的问题。<br> [修复] select 组件 allowClear 属性在文档缺失的问题。<br> [升级] layer 组件 2.2.0 版本。</p><p>更多详情：<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.layui-vue.com" target="_blank">http://www.layui-vue.com</a></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 23 Nov 2023 02:45:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/267725/layui-vue-2-12-0-released</guid>
            <link>https://www.oschina.net/news/267725/layui-vue-2-12-0-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Spring Integration 6.2 GA]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Spring Integration 6.2<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fspring.io%2Fblog%2F2023%2F05%2F18%2Fspring-integration-6-1-goes-ga" target="_blank">已正式 GA</a>。</p><blockquote><p style="margin-left:0; margin-right:0">Spring Integration 在基于 Spring 的应用程序中启用轻量级消息传递，并支持通过声明性适配器与外部系统集成。这些适配器提供了比 Spring 对远程处理、消息传递和调度的支持更高级别的抽象。 Spring Integration 的主要目标是为构建企业集成解决方案提供一个简单的模型，同时保持关注点分离，这对于生成可维护、可测试的代码至关重要。</p></blockquote><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>更新亮点如下：</strong></p><ul><li><span><span>文档已迁移到 Antora 站点生成器，并与其他迁移的 Spring 项目一起托管<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.spring.io%2Fspring-integration%2Freference%2F6.2%2Findex.html" target="_blank">在此处</a></span></span></li><li><span><span>Project CrAC 支持，对关闭组件停止时的资源进行了一些内部修改</span></span></li><li><span><span>虚拟线程支持，并注入了相应的<code>TaskExecutor</code>和 Synchronized Block to Lock</span></span></li><li><span><span>项目构建生命周期现已连接到&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fge.spring.io%2Fscans%3Fsearch.rootProjectNames%3Dspring-integration" target="_blank">Gradle Enterprise</a>，因此每个贡献者现在都可以从 Gradle tasks 的远程共享缓存中受益</span></span></li><li><span><span><code>LockRegistry</code>接口提供了类似模板的<code>executeLocked()</code>API：</span></span></li></ul><pre><code>COPY registry.executeLocked("someLockKey", () -&gt; someExclusiveResourceCall());</code></pre><ul><li><span><span>现在可以使用其特定<code>AbstractLastModifiedFileListFilter&lt;F&gt;</code>实现来配置远程文件通道适配器（(S)FTP、SMB）</span></span></li><li><span><span>现在可通过重载<code>createSftpClient()</code>方法在<code>DefaultSftpSessionFactory</code>的扩展中配置自定义<code>SftpClient</code></span></span></li><li><span><span>Debezium Inbound Channel Adapter&nbsp;用于跟踪数据库中的事务日志</span></span></li><li><span><span><code>spring-integration-security</code>模块已完全弃用，转而使用<code>spring-security-messaging</code>模块中的相应实用程序。更多信息可<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.spring.io%2Fspring-integration%2Freference%2Fsecurity.html" target="_blank">参阅 Spring Integration Security 文档</a>。</span></span></li></ul><p>详情可<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fspring.io%2Fblog%2F2023%2F11%2F22%2Fspring-integration-6-2-goes-ga" target="_blank">查看发布公告</a>。</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 23 Nov 2023 02:39:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/267723/spring-integration-6-2-ga</guid>
            <link>https://www.oschina.net/news/267723/spring-integration-6-2-ga</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Python 3.13.0 alpha 2]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Python 3.13.0 第 2 个 alpha 已发布，目前处于非常早期的开发阶段。</p><blockquote><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-830317f825f86fd0fff29be2fcf18a93961.png" referrerpolicy="no-referrer"></p></blockquote><p>公告写道，Python 3.13 的许多新功能仍在规划和编写中（<a href="https://www.oschina.net/news/251454/steering-council-notice-about-pep-703">包括备受关注的 no-GIL</a>）。</p><p>下面是该版本的主要变化：</p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpeps.python.org%2Fpep-0594%2F" target="_blank">PEP 594</a>（从标准库中删除已弃用的模块）：aifc、audioop、chunk、cgi、cgitb、crypt、imghdr、mailcap、msilib、nis、nntplib、ossaudiodev、pipes、sndhdr、spwd、sunau、 telnetlib、uu、xdrlib、lib2to3。</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.python.org%2Fdev%2Fwhatsnew%2F3.13.html%23removed" target="_blank">删除</a>多个标准库模块中已被弃用的类、函数和方法</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.python.org%2Fdev%2Fwhatsnew%2F3.13.html%23deprecated" target="_blank">新的弃用内容</a>，其中大部分计划从 Python 3.15 或 3.16 中删除</li><li>针对 C API 的<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.python.org%2Fdev%2Fwhatsnew%2F3.13.html%23id10" target="_blank">删除</a>和<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.python.org%2Fdev%2Fwhatsnew%2F3.13.html%23id9" target="_blank">弃用</a>（alpha 1 中存在的一些删除已在 alpha 2 中恢复，因为此时删除被认为过于破坏兼容性）</li></ul><p>Python 3.13 的下一个更新是 3.13.0a3，目前计划于 2023 年 12 月 19 日发布。</p><p>详情查看 Python 3.13 发布日程（将于明年 10 月 1 日正式发布）：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpeps.python.org%2Fpep-0719%2F">https://peps.python.org/pep-0719/</a></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 23 Nov 2023 02:21:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/267717/python-3-13-0-alpha-2</guid>
            <link>https://www.oschina.net/news/267717/python-3-13-0-alpha-2</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[新一代基于 mybatis 的 orm：mybatis-mp 1.1.4 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">全新一代基于 mybatis 扩展的 orm 框架，拥有良好的性能和扩展性。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">1：基于注解，映射数据库；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">2：支持多表 join 和返回；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">3：api 采用 lambda 和 stream 流式设计；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">4：内置分页以及超强的 sql 优化功能；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">5：稳定且性能极优;</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">6：轻量级封装 mybatis，几乎没有侵入；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">7：api 丰富，支持数据库函数、多表、乐观锁、多租户，等众多功能；零学习成本，和写 sql 一样方便。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">8：内置代码生成器，通过配置，可定制自身规范；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">9：全新的框架，全新的设计理念，新的就是好！</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">本次 1.1.4 更新，内容：</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">1：优化底层代码</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">2：集成数据库函数近 70 个</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">优化不影响上层 api，敬请使用！</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 23 Nov 2023 01:42:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/267686</guid>
            <link>https://www.oschina.net/news/267686</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[无鱼 0.10 发布，项目工时系统]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>无鱼 0.10 已经发布，项目工时系统。</p><p>此版本更新内容包括：</p><p>v0.10: 增加了移动版 1、增加了移动端功能，包括填报工时/查看工时/查看我的项目</p><p>2、优化了日报的查看界面。</p><p>3、修复一些其他 bug。</p><h2>fix</h2><p>#I7TR2K</p><h2>功能预览</h2><p><img alt="登录" src="https://foruda.gitee.com/images/1700661178298462247/63e2ec4c_4008.png" referrerpolicy="no-referrer"><img alt="首页" src="https://foruda.gitee.com/images/1700661165467036184/0bb119b8_4008.png" referrerpolicy="no-referrer"><img alt="我的工时" src="https://foruda.gitee.com/images/1700661188462374526/3238afa2_4008.png" referrerpolicy="no-referrer"><img alt="填报工时" src="https://foruda.gitee.com/images/1700661195619199222/2c0c064a_4008.png" referrerpolicy="no-referrer"><img alt="查看工时" src="https://foruda.gitee.com/images/1700661262601873539/2c2d81b1_4008.png" referrerpolicy="no-referrer"></p><h1>使用方法</h1><p>新搭建建议使用 compose 方式部署。 老版本需要替换后台程序、前端程序。（不需要更新数据库）</p><p>更新方法： 该版本需要更新前端文件、后端文件。</p><p>详情查看：<a href="https://gitee.com/wy-soft/wyproject/releases/0.10">https://gitee.com/wy-soft/wyproject/releases/0.10</a></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 22 Nov 2023 13:55:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/267661</guid>
            <link>https://www.oschina.net/news/267661</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Jeepay v2.2.2 正式发布：计全支付-让支付接入更简单]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="background-color:#ffffff; color:#333333">Jeepay 是一套适合互联网企业使用的开源支付系统，支持多渠道服务商和普通商户模式。已对接</span><code>微信支付</code><span style="background-color:#ffffff; color:#333333">，</span><code>支付宝</code><span style="background-color:#ffffff; color:#333333">，</span><code>云闪付</code><span style="background-color:#ffffff; color:#333333">官方接口，支持聚合码支付。<br><br> v2.2.2 版本升级内容：</span></p><div><ol><li>优化微信 V3 接口 APP 支付返回参数</li><li>优化 PayPal 支付接口参数名、关单方法名大小写</li><li>优化 Docker 部署</li><li>优化分账页面描述</li></ol></div><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">更多升级日志：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.jeequan.com%2Fdev%2Fupdate%2Fcategory_1016.html" target="_blank">https://www.jeequan.com/dev/update/category_1016.html</a><br><br> 项目特点</p><ul><li>支持多渠道对接，支付网关自动路由</li><li>已对接<code>微信</code>服务商和普通商户接口，支持<span>&nbsp;</span><code>V2</code><span>&nbsp;</span>和<span>&nbsp;</span><code>V3</code><span>&nbsp;</span>接口</li><li>已对接<code>支付宝</code>服务商和普通商户接口，支持 RSA 和 RSA2 签名</li><li>已对接<code>云闪付</code>服务商接口，可选择多家支付机构</li><li>提供 http 形式接口，提供各语言的<span>&nbsp;</span><code>sdk</code><span>&nbsp;</span>实现，方便对接</li><li>接口请求和响应数据采用签名机制，保证交易安全可靠</li><li>系统安全，支持<code>分布式</code>部署，<code>高并发</code></li><li>管理端包括<code>运营平台</code>和<code>商户系统</code></li><li>管理平台操作界面简洁、易用</li><li>支付平台到商户系统的订单通知使用 MQ 实现，保证了高可用，消息可达</li><li>支付渠道的接口参数配置界面自动化生成</li><li>使用<span>&nbsp;</span><code>spring security</code><span>&nbsp;</span>实现权限管理</li><li>前后端分离架构，方便二次开发</li><li>由原<span>&nbsp;</span><code>XxPay</code><span>&nbsp;</span>团队开发，有着多年支付系统开发经验</li></ul><blockquote><p style="margin-left:0; margin-right:0">Jeepay 运营平台功能</p></blockquote><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="Jeepay 运营平台功能" src="https://static.oschina.net/uploads/img/202207/08190720_WljY.png" referrerpolicy="no-referrer"></p><blockquote><p style="margin-left:0; margin-right:0">Jeepay 商户系统功能</p></blockquote><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="Jeepay 商户系统功能" src="https://static.oschina.net/uploads/img/202207/08190720_luZt.png" referrerpolicy="no-referrer"></p><h2>🍯 系统截图</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><code>以下截图是从实际已完成功能界面截取,截图时间为：2021-07-06 08:59</code></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="Jeepay 演示界面" src="https://static.oschina.net/uploads/img/202207/08190720_qjBV.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="Jeepay 演示界面" src="https://static.oschina.net/uploads/img/202207/08190721_IaeV.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="Jeepay 演示界面" src="https://static.oschina.net/uploads/img/202207/08190721_jxZD.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="Jeepay 演示界面" src="https://static.oschina.net/uploads/img/202207/08190721_AAZk.png" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 22 Nov 2023 10:36:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/267638/jeepay-2-2-2-released</guid>
            <link>https://www.oschina.net/news/267638/jeepay-2-2-2-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[数据可视化引擎 G2 v5.1.9 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff; color:#333333">数据可视化引擎&nbsp;G2 v5.1.9 版本现已发布，具体更新内容包括：</span></p><ul><li>docs：翻译 getting-started、what-is-g2、why-g2&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fantvis%2FG2%2Fpull%2F5778" target="_blank">#5778</a></li><li>fix(docs)：g2 的介绍&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fantvis%2FG2%2Fpull%2F5797" target="_blank">#5797</a></li><li>docs：添加&nbsp;example stocks dark&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fantvis%2FG2%2Fpull%2F5798" target="_blank">#5798</a></li><li>fix(tooltip)：overflow&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fantvis%2FG2%2Fpull%2F5802" target="_blank">#5802</a></li><li>docs：将 eco 添加到 README 中&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fantvis%2FG2%2Fpull%2F5804" target="_blank">#5804</a></li><li>docs：ecosystem 和 plugin&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fantvis%2FG2%2Fpull%2F5805" target="_blank">#5805</a></li><li>docs：添加智能 autovis demo&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fantvis%2FG2%2Fpull%2F5806" target="_blank">#5806</a></li><li>chore：添加 3D 曲面图的文档和示例&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fantvis%2FG2%2Fpull%2F5799" target="_blank">#5799</a></li><li>chore：更新 dumi-theme-antv&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fantvis%2FG2%2Fpull%2F5812" target="_blank">#5812</a></li><li>修复：dumi-theme-antv footerTheme light&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fantvis%2FG2%2Fpull%2F5813" target="_blank">#5813</a></li><li>feat(mark)：添加&nbsp;chord mark&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fantvis%2FG2%2Fpull%2F5810" target="_blank">#5810</a></li><li>docs：添加&nbsp;insight mark demos&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fantvis%2FG2%2Fpull%2F5811" target="_blank">#5811</a></li><li>docs：添加更多自动标记的&nbsp;demo&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fantvis%2FG2%2Fpull%2F5820" target="_blank">#5820</a></li><li>docs(demo)：使用 chart.mark&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fantvis%2FG2%2Fpull%2F5822" target="_blank">#5822</a></li><li>docs：图像位置变化&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fantvis%2FG2%2Fpull%2F5827" target="_blank">#5827</a></li><li>chore：更新至 5.1.9&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fantvis%2FG2%2Fpull%2F5831" target="_blank">#5831</a></li></ul><p><span style="background-color:#ffffff; color:#333333">详情可查看更新说明：</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fantvis%2FG2%2Freleases%2Ftag%2F5.1.9" target="_blank">https://github.com/antvis/G2/releases/tag/5.1.9</a></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 22 Nov 2023 06:07:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/267587/g2-5-1-9-released</guid>
            <link>https://www.oschina.net/news/267587/g2-5-1-9-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[FastCFS V5.0 发布，原生支持 RDMA]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div><div><span><span>经过 4 个多月的预研、开发和测试，FastCFS 5.0 终于和大家见面了。FastCFS 5.0 使用 ibverbs 原生方式适配了 RDMA 网络，可以充分发挥 RDMA 网络的低延迟和高吞吐特性。在此特别感谢 @Frank 提供 IB 环境的高端服务器供我们预研；非常感谢 @yunqi 在 ibverbs 编程方面耐心的答疑；十分感谢 @AI 墨墨，公众号提供了非常好用的 chatGPT 问答服务，帮助我解答了不少疑惑。</span></span></div><div>
  &nbsp;
 </div></div><div><div><span><span>我们租用阿里云 g8 类型的 ECS，使用其 eRDMA 特性，4KB 随机读在 fuse 场景性能下相比 socket 方式提升了 50%；我们直接调用 API（纯用户态模式）的 fcfs_beachmark，非 busy polling 模式下性能相比 socket 方式提升 80%，而 busy polling 模式下性能提升了 110%。后续我们将找机会在 IB 网络环境下进行性能对比测试，预计性能提升会更加明显。</span></span></div><div>
  &nbsp;
 </div></div><div><div><span><span>是否开启 busy polling，我们 server 端默认配置为智能模式。当一个连接的 QPS 连续 N 秒（如 3 秒）超过阈值（如 10240），则启用 busy polling 模式；连续 N 秒低于阈值，则退回非 busy polling 模式。</span></span></div></div><div><div><span><span>友情提示：配置示例及说明参见源码 conf/full/ 子目录下的配置文件。</span></span></div><div>
  &nbsp;
 </div></div><div><div><span><span>V5.0 修复的 bug 如下：</span></span></div></div><div><div><span><span>[fdir] bugfixed: dentry_create set loaded_flags correctly</span></span></div></div><div><div><span><span>[fdir] bugfixed: must use lock for db skiplist</span></span></div></div><div><div><span><span>[libfdirstorage] bugfixed: set variable normal_update correctly</span></span></div></div><div><div><span><span>[libfsstorage] segment reclaim more robustly</span></span></div><div>
  &nbsp;
 </div></div><div><div><span><span>FastCFS 5.0 通过了比较充分的测试，欢迎有 RDMA 网络环境的朋友进行性能测试。建议使用 FastCFS 老版本的用户，尽快升级到最新版本。有任何问题和建议，欢迎在 gitee 上提交 issue，当然也可以加群交流。</span></span></div></div></div>
                                    ]]>
            </description>
            <pubDate>Wed, 22 Nov 2023 02:44:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/267561/fastcfs-5-0-released</guid>
            <link>https://www.oschina.net/news/267561/fastcfs-5-0-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Firefox 120.0 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Firefox 120.0 现已发布，具体更新内容如下：</p><p><strong>New</strong></p><ul><li>Firefox 在上下文菜单中支持新的"复制链接不带网站跟踪"功能，确保复制的链接不再包含跟踪信息。</li></ul><p><img alt="" height="361" src="https://oscimg.oschina.net/oscnet/up-e7e4d23ecc050ac3f60820b1fa1946c0f75.png" width="300" referrerpolicy="no-referrer"></p><ul><li>Firefox 现在支持启用"全局隐私控制"的设置（在 Preferences → Privacy &amp; Security 中）。有了这项 opt-in&nbsp;功能，Firefox&nbsp;就会通知网站，用户不希望自己的数据被共享或出售。</li></ul><p><img alt="" height="139" src="https://oscimg.oschina.net/oscnet/up-e2c7de7e40d5068002d7503fbe8daf5795e.png" width="500" referrerpolicy="no-referrer"></p><ul><li>现在，Firefox 的隐私窗口和 ETP-Strict 隐私配置通过指纹保护功能增强了 Canvas API，从而继续保护用户的在线隐私。</li><li>Firefox 已在德国所有用户的隐私窗口中默认启用 Cookie <span style="background-color:#ffffff"><span style="color:#42425a">Banner Blocker</span></span>。对于支持的网站，Firefox 现在会自动拒绝 Cookie 并屏蔽恼人的&nbsp;cookie banners。</li><li><p>Firefox 已在德国所有用户的隐私窗口中默认启用 URL 跟踪保护功能。Firefox 将删除非必要的 URL 查询参数，这些参数通常用于在网络上跟踪用户。</p></li><li><p>Firefox 现在可以从操作系统根存储导入 TLS 信任锚（如证书）。这将在 Windows、macOS 和 Android 上默认启用，如有需要，可在设置（Preferences → Privacy &amp; Security → Certificates）中关闭。</p></li><li><p>现在已添加键盘快捷键，用于在 about:logins 上编辑和删除所选证书。editing - Alt + enter (Option + return on macOS)&nbsp;，deleting - Alt + Backspace (Option + Delete on macOS)。</p></li><li><p>Ubuntu Linux 用户现在可以从作为 Snap 软件包安装的 Chromium 中导入。</p></li><li><p>画中画现在支持 Windows 和 Linux 上的 corner snapping，只需在移动画中画窗口时按住 Ctrl 键即可。</p></li></ul><p><strong>Fixed</strong></p><ul><li><span style="color:#42425a">各种</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.mozilla.org%2Fsecurity%2Fadvisories%2Fmfsa2023-49%2F" target="_blank">安全</a>修复<span style="background-color:#ffffff"><span style="color:#42425a">。</span></span></li></ul><p><strong>Developer</strong></p><ul><li>现在已添加 User Activation API，允许 JavaScript 使用 navigator.userActivation 检查用户当前是否或曾否激活页面（点击等）。</li><li>Early Hints Preconnect（信息状态代码 103）现已启用。这允许服务器在最终 HTTP 响应之前发送 resource Link headers，并提高了使用此功能的服务器的性能。(<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.cloudflare.com%2Fearly-hints%2F" target="_blank">更多信息</a>）</li><li>用户现在可以使用新增的 devtools 功能模拟浏览器标签脱机。</li><li>Style Editor 面板的页脚新增了一个"Pretty Print"按钮，类似于调试器面板中的 Pretty Print 按钮。该按钮可用于格式化样式表（如已精简的样式表）。以前的功能是自动格式化最小化文件，现在已被删除。</li><li>Inspector&nbsp;面板中的"Rules"面板不再以新的 CSS Color 4 格式（如 OKLCH）显示十六进制/命名颜色。这样可以确保与使用的原始值相匹配。</li></ul><p><strong>Web Platform</strong></p><ul><li>lh 和 rlh 单位现在可以作为长度正确解析和计算。这样，作者就可以根据 element's（或 root element's）的行高来指定长度。</li><li>WebAssembly GC 现在已默认启用，这允许新语言（如 Dart 或 Kotlin）在 Firefox 上运行。以便收集 guest language 和 host browser 之间的 reference cycles&nbsp;。</li></ul><p><span style="background-color:#ffffff"><span style="color:#333333">详情可<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.mozilla.org%2Fen-US%2Ffirefox%2F120.0%2Freleasenotes%2F" target="_blank">查看更新说明</a>。</span></span></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 22 Nov 2023 02:35:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/267557/firefox-120-0-released</guid>
            <link>https://www.oschina.net/news/267557/firefox-120-0-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[FreeBSD 14.0 正式发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>FreeBSD 14.0 <u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.freebsd.org%2Freleases%2F14.0R%2Fannounce%2F" target="_blank">已正式发布</a></u>，这是&nbsp;<span style="background-color:#ffffff; color:#000000"><span>&nbsp;</span>stable/14 分支的首个版本，</span>支持 amd64, aarch64, i386, powerpc, powerpc64, powerpc64le, powerpcspe, armv7, 和 riscv64 架构。</p><p>主要变化：</p><ul><li>OpenSSH 升级至 v9.5p1</li><li>OpenSSL 升级至 v3.0.12<br> FreeBSD 13.2-RELEASE 使用 OpenSSL 1.1.1t，所以这是重大升级</li><li>bhyve 虚拟机管理程序支持 TPM 和 GPU 透传</li><li>FreeBSD 在 amd64 和 arm64 平台支持最多 1024 个内核</li><li>ZFS 升级至 OpenZFS v2.2，显著改进性能</li><li>实验性 ZFS 镜像可用于 AWS 和 Azure</li><li>支持对运行日志软更新的 UFS 文件系统执行后台文件系统检查</li><li>TCP 默认拥塞控制机制为<strong> CUBIC</strong></li><li>……</li></ul><p><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.freebsd.org%2Freleases%2F14.0R%2Frelnotes%2F" target="_blank">FreeBSD 14.0-RELEASE Release Notes</a></u></p><hr><p>负责 FreeBSD 发版工作的主管在其个人博客介绍了一些 FreeBSD 14 的破坏性变化，详情查看&nbsp;<em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.daemonology.net%2Fblog%2F2023-11-21-late-breaking-FreeBSD-14-breakage.html" target="_blank">https://www.daemonology.net/blog/2023-11-21-late-breaking-FreeBSD-14-breakage.html</a></u></em>。</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 22 Nov 2023 02:26:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/267555/freebsd-14-0</guid>
            <link>https://www.oschina.net/news/267555/freebsd-14-0</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[凌鲨 0.6.1 版本更新]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>凌鲨 0.6.1 版本更新</p><ul><li>新增: 新增 k8s 连接功能&nbsp;</li><li>改进: 自动隐藏目录列表&nbsp;</li><li>改进: 改进任务/缺陷状态文案&nbsp;</li><li>修复: 修复打开便签时报错</li></ul><p><img height="556" src="https://oscimg.oschina.net/oscnet/up-6147f1a9c41feabedc2cb33ddb6a4c20d27.png" width="887" referrerpolicy="no-referrer"></p><p><img height="750" src="https://oscimg.oschina.net/oscnet/up-099254f7365fe8a7b24c518037a7fc1c019.png" width="1300" referrerpolicy="no-referrer"></p><p><img height="750" src="https://oscimg.oschina.net/oscnet/up-291670843b05f188a9cedb9656abc3971a8.png" width="1300" referrerpolicy="no-referrer"></p><p><img height="750" src="https://oscimg.oschina.net/oscnet/up-b8970adc3358e12b608144cea861260d163.png" width="1300" referrerpolicy="no-referrer"></p><p><img height="750" src="https://oscimg.oschina.net/oscnet/up-5f32ee7ca820122e840de246b9aa0de5671.png" width="1300" referrerpolicy="no-referrer"></p><p><img height="750" src="https://oscimg.oschina.net/oscnet/up-43b9236e0700ad68fc78b24f039b464bb8e.png" width="1300" referrerpolicy="no-referrer"></p><p><img height="750" src="https://oscimg.oschina.net/oscnet/up-e1c1548a2bbe432c3e54e11b5f50ca69b62.png" width="1300" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 22 Nov 2023 01:49:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/267547/linksaas-0-6-1</guid>
            <link>https://www.oschina.net/news/267547/linksaas-0-6-1</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Simple Admin Go 语言分布式后台管理系统 v1.2.3 更新, 大幅优化生成工具]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h2>Simple Admin Go 语言分布式后台管理系统 v1.2.3 更新</h2><h3>项目介绍</h3><p>Simple Admin 是一个开箱即用的分布式微服务后端管理系统，基于 go-zero 开发，为开发中大型后台提供了丰富的功能，支持三端代码生成。 官方自带多种扩展，助力中小企业快速上云，快速迭代。适合用于微服务学习和商用，开源免费。</p><h3>Simple Admin Core/Job/MCMS/FMS v1.2.3 更新</h3><h4>介绍</h4><p>核心模块 Core, 定时任务模块 Job, 消息中心模块 MCMS, 以及文件管理模块 FMS 均已升级至 v1.2.3</p><h4>本次更新</h4><ul><li>更新： 更新 <code>Ent</code> 至 <code>0.12.5</code></li><li>优化（FMS）：新增 <code>init_api_data</code> 文件</li><li>重构： 重新生成 Ent 相关文件</li></ul><h3>Simple Admin Backend UI v1.2.3 更新</h3><h4>介绍</h4><p>Simple Admin UI 是基于 vue-vben-admin 二次开发的为 Simple Admin 专门开发的后台管理界面，基于 Vue3 和 TypeScript 开发， 提供后台错误统一处理，国际化等功能，本项目完全免费，可用于学习和商用.</p><h4>本次更新</h4><ul><li>新增 (menu): 新增 <code>path</code> 的校验规则</li><li>修复 (icon): 修复 <code>icon</code> 组件的循环依赖问题</li><li>升级 (tinymce): 升级 <code>Tinymce</code> 至最新，优化夜间模式下的样式</li><li>优化 (i18n): 优化 <code>i18n</code> 翻译</li><li>新增 (ImageUpload)：新增 <code>ImageUpload</code> 组件</li><li>优化: 优化全局颜色配置</li><li>优化 (ImageUpload): 支持单个图片地址</li><li>同步： 同步 <code>vben</code> 最新代码</li><li>移除： 旧的夜间模式无用的配置文件及代码</li><li>优化 (login page)： 优化登录页样式</li><li>优化 (pinia persist): 新增 <code>pinia-plugin-persistedstate</code> 插件， 优化 <code>store</code> 代码，使用插件</li><li>修复： <code>form</code> 配置 <code>default value</code> 导致的覆盖问题</li><li>优化 (search)：搜索栏样式</li><li>移除 (qrcode)：移除 <code>QRCode</code> 组件，改为使用 <code>antdv</code> 自带的 <code>QRCode</code></li><li>修复 (menu): 修复菜单列表重复的参数</li><li>更新： 更新依赖</li></ul><h3>Goctls v1.6.13 更新</h3><h4>介绍</h4><p>Goctls 是一个基于 Go Zero 官方生成工具 Goctl 开发的针对 Simple Admin 适配优化的生成工具。提供强大的代码生成功能，同时集成了许多定制工具，实现快速开发微服务接入后台和前台​。三端代码生成可以大大提升开发效率，欢迎体验​。</p><h4>特性</h4><ul><li>go-swagger : 基于 go-swagger 而不是官方的@doc 注解</li><li>多国语言支持</li><li>优化错误信息处理,支持多语言错误</li><li>简单易用的校验器</li><li>支持代码生成，生成 API,RPC 和 web 端的 CRUD 代码</li><li>支持多种额外插件如 GORM, RocketMQ</li><li>对 Simple Admin 的针对性优化</li><li>rpc logic group 分组</li><li>全面支持 Ent 代码生成</li><li>额外工具如本地日志查看，环境变量查看</li></ul><h4>本次更新</h4><ul><li>修复： 修复 <code>Ent</code> 代码生成的 <code>Unix</code> 时间错误</li><li>优化： 优化 <code>extra init_code</code> 命令，现已支持直接输出至 <code>init_api_data.go</code> 文件</li><li>新增： <code>api new</code> 命令新增 <code>--use_core_rpc</code> 参数，可在创建新项目时直接生成 <code>CoreRpc</code> 配置</li><li>修复： <code>rpc ent</code>代码生成时出现的 <code>pointy</code> 多余导入</li><li>修复： <code>api ent</code>代码生成时出现的<code>i18n</code>多余引用</li><li>修复： <code>rpc ent</code>生成所有 <code>schema</code> 的逻辑代码时出现的错误</li><li>修复： <code>api ent</code>生成所有 <code>schema</code> 的逻辑代码时出现的错误</li><li>新增： <code>api new</code>和<code>rpc new</code>如果使用<code>Ent</code>均支持自动生成 Ent 初始化代码</li><li>新增： <code>api ent</code>和<code>rpc ent</code>命令新增<code>--api_data</code>参数，用于直接生成<code>Core API</code>初始化代码</li><li>修复： 修复<code>api proto</code> 错误的提示信息</li><li>优化： 删除<code>api proto</code> 无用的 <code>--search_key_num</code> 参数</li><li>优化： <code>extra makefile</code>模板新增<code>AUTO_API_INIT_DATA</code>用于自动生成<code>API</code>初始化代码</li><li>更新： 升级依赖</li></ul><h3>更新预览</h3><blockquote><p>优化后台登录页</p></blockquote><p><img height="924" src="https://oscimg.oschina.net/oscnet/up-003533e2e6a94b15b888904cd0f192d9222.jpg" width="1920" referrerpolicy="no-referrer"><img height="924" src="https://oscimg.oschina.net/oscnet/up-408608ff3befba336a9f8c70578614deda7.jpg" width="1920" referrerpolicy="no-referrer"><img height="924" src="https://oscimg.oschina.net/oscnet/up-fbeca4ca9e8b0d6dac5f6b9c42bc52a8aac.jpg" width="1920" referrerpolicy="no-referrer"></p><p>&nbsp;</p><blockquote><p>移除菜单重复参数，新增路由地址校验</p></blockquote><p><img height="924" src="https://oscimg.oschina.net/oscnet/up-55f5cd44f7e6c56d2bf128cf7f01cfea227.jpg" width="1920" referrerpolicy="no-referrer"></p><blockquote><p>优化富文本组件</p></blockquote><p><img height="1315" src="https://oscimg.oschina.net/oscnet/up-947cbd688d7e75157d1cc4b6bd6af8b0587.jpg" width="2560" referrerpolicy="no-referrer"><img height="1315" src="https://oscimg.oschina.net/oscnet/up-e9ee1e261d3b81143e54a84f7840646a2c0.jpg" width="2560" referrerpolicy="no-referrer"></p><blockquote><p>大幅优化 goctls 批量生成效率</p></blockquote><p><img height="400" src="https://oscimg.oschina.net/oscnet/up-caa9e012bc649e986fe63728f76feec722b.jpg" width="1248" referrerpolicy="no-referrer"></p><p>&nbsp;</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">项目文档地址:&nbsp;&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.ryansu.tech%2Fzh%2F" target="_blank">https://doc.ryansu.tech/zh/</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">Gitee:&nbsp;&nbsp;<a href="https://gitee.com/hopefire/simple-admin-core">https://gitee.com/hopefire/simple-admin-core</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">Github:&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsuyuan32%2Fsimple-admin-core" target="_blank">https://github.com/suyuan32/simple-admin-core</a></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 22 Nov 2023 01:41:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/267543</guid>
            <link>https://www.oschina.net/news/267543</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Torna 1.24.0 发布，接口文档解决方案]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Torna 1.24.0 发布，本次发布内容如下：</p><p style="color:#40485b; margin-left:0em; margin-right:0em; text-align:start">【新增】</p><ul><li>支持查看文档变更记录，精确到字段级别，Markdown、富文本文档支持内容对比</li><li>新增前置脚本、后置脚本，可在请求前动态处理参数信息</li><li>新增文档状态字段（未开始、进行中、已完成），改状态支持钉钉推送</li><li>文档内容变更支持推送到钉钉群，支持@某人</li><li>支持自定义参数类型（下拉框可编辑）</li></ul><p style="color:#40485b; margin-left:0; margin-right:0; text-align:start">【修复】</p><ul><li>未读消息只能显示 10 条问题</li></ul><p>本次升级重点是<strong>查看文档变更记录，</strong>在文档预览界面右上角点击查看</p><p><img height="598" src="https://oscimg.oschina.net/oscnet/up-477cb8c6eede9be9fe26bc695711e9f73f9.png" width="750" referrerpolicy="no-referrer"></p><p>弹出变更历史：</p><p><img height="859" src="https://oscimg.oschina.net/oscnet/up-95fd0830b1b0cd9c3b35011c864619a17a5.png" width="957" referrerpolicy="no-referrer"></p><p>除此之外，富文本文档和 Markdown 文档支持内容对比</p><p><img height="286" src="https://oscimg.oschina.net/oscnet/up-9b21b738ad08ff0b9a8fa750928e5708353.png" width="1353" referrerpolicy="no-referrer"></p><p>文档内容变更后支持推送到钉钉群</p><p>1.24.0 版本新增请求预处理，可动态修改请求参数等信息，比如请求接口前获取一下 token、参数加密</p><p><img height="783" src="https://oscimg.oschina.net/oscnet/up-1ff3c2d1e632ff33af62b5c5041e80430b9.png" width="831" referrerpolicy="no-referrer"></p><p>具体使用可以部署 Torna 进行体验~</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>关于 Torna</strong></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">接口文档解决方案，目标是让接口文档管理变得更加方便、快捷。Torna 采用团队协作的方式管理和维护接口文档，将不同形式的文档纳入进来统一维护。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Torna 弥补了传统文档生成工具（如 swagger）的不如之处，在保持原有功能的前提下丰富并增强了一些实用的功能。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">&nbsp;</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://oscimg.oschina.net/oscnet/up-47d91305f6b4e40f648ded1c23a50e3515c.png" referrerpolicy="no-referrer"></p><h2>解决文档管理痛点</h2><ul><li>不满足 swagger 文档预览页面和调试页面的展现方式</li><li>不喜欢 swagger 这种侵入式注解</li><li>希望使用 javadoc 注释生成文档，并进行接口调试</li><li>希望把公司所有项目接口文档进行统一管理</li><li>希望把项目中的若干文档提供给第三方调用者查看</li><li>希望可以统一管理项目中的字典枚举</li></ul><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">如果您有以上几个需求和痛点，或许可以尝试一下使用 Torna</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftorna.cn%2Ftutorial%2Fstart.html" target="_blank">快速开始</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>推荐组合</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>smart-doc + Torna 实现文档全流程自动化</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">如果您使用 Java 语言，推荐使用<span></span><code>smart-doc + Torna</code></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/smart-doc-team/smart-doc">smart-doc</a> + Torna 组成行业领先的文档生成和管理解决方案，使用 smart-doc 无侵入完成 Java 源代码和注释提取生成 API 文档，自动将文档推送到 Torna 企业级接口文档管理平台。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">通过这套组合您可以实现：只需要写完 Java 注释就能把接口信息推送到 Torna 平台，从而实现接口预览、接口调试。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">推送的内容有：<code>接口名称/author/Path 参数/Header/请求参数/返回参数/字典列表/公共错误码</code></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">如果您是非 Java 语言，可以使用表单页面编辑以上内容，完成后同样可以进行接口预览、调试。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Ftorna.cn%2Fdev%2Fsmart-doc.html" target="_blank">smart-doc 整合 Torna 图文教程</a></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 22 Nov 2023 01:24:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/267541/torna-1-24-0-released</guid>
            <link>https://www.oschina.net/news/267541/torna-1-24-0-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[魔豆文库 moredoc v2.1.0 发布，增强文档预览与集成 Oauth 登录]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bookstack.cn%2Fprojects%2Fmoredoc%2F25025565fbb0a50a52bcb76e9586ac42.png" target="_blank"><img alt="魔豆文库" src="https://static.sitestack.cn/projects/moredoc/25025565fbb0a50a52bcb76e9586ac42.png" referrerpolicy="no-referrer"></a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">魔豆文库 MOREDOC，使用 Go 语言开发实现的文库解决方案，<a href="https://gitee.com/truthhun/DocHub">dochub</a>文库的重构版本，支持 office (全部类型)、PDF、TXT、EPUB、MOBI 等多种文档格式的在线阅读浏览，支持<code>无限级分类</code>、<code>文档批量上传</code>、<code>文档批量转换</code>、<code>全文搜索</code>、<code>云存储</code>、<code>网络爬虫</code>、<code>VIP</code>、<code>手机号登录注册</code>以及<code>支付宝</code>和<code>微信支付</code>等功能，拥有简洁美观的用户视觉和功能体验，以及配套的<a href="https://gitee.com/mnt-ltd/moredoc-app">微信小程序</a>。</p><h2>技术栈</h2><ul><li>Golang ：gin + gRPC + GORM</li><li>Vue.js : nuxt2 + element-ui</li><li>Database : MySQL 5.7+</li></ul><h2>升级日志</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>社区版 (开源版) 升级日志</strong></p><ul><li>增加用户注册时邮箱验证控制（在<span>&nbsp;</span><code>后台-&gt;系统设置-&gt;安全配置-&gt;是否开启注册邮箱验证</code>）</li><li>增加多种文档预览格式，除支持<code>svg</code>外，额外支持<code>png</code>、<code>jpeg</code>和<code>webp</code>等格式预览（在<span>&nbsp;</span><code>后台-&gt;系统设置-&gt;转换配置-&gt;预览格式</code><span>&nbsp;</span>配置）</li><li>增加<code>reconvert</code>指令，支持将以前的<code>svg</code>转为其他预览格式，以减少存储空间的占用和提升预览加载速度</li><li>变更程序指令提示，使用中文以便更清晰呈现指令的使用</li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>专业版升级日志</strong></p><blockquote><p style="margin-left:0; margin-right:0">专业版升级内容包含社区版升级内容</p></blockquote><ul><li>集成<code>Oauth</code>登录，支持微信、QQ、Gitee、Github 等第三方登录（在<code>后台-&gt;系统设置-&gt;Oauth 配置</code>进行配置）</li><li>支持微信小程序登录（在<code>后台-&gt;系统设置-&gt;小程序配置-&gt;启用微信登录</code>配置）</li><li>修复关闭网站后登录框消失的问题</li><li>修复 VIP 购买失败的问题</li><li>修复文档小程序码不显示问题</li><li>优化全文索引，使用队列减小索引更新阻塞时间</li><li>优化重复文档检测</li><li>优化 minio 对 https 的支持</li></ul><h2>演示站点</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">程序新功能体验，一睹为快！</p><ul><li>网址：<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmoredoc.mnt.ltd%2F" target="_blank">https://moredoc.mnt.ltd</a></li><li>管理员账号： admin</li><li>管理员密码： mnt.ltd</li></ul><blockquote><p style="margin-left:0; margin-right:0">演示站点，每天凌晨 1:00 ~ 6:00，每隔一小时重置一次全部数据</p></blockquote><h2>开源地址</h2><ul><li>Gitee -<span>&nbsp;</span><a href="https://gitee.com/mnt-ltd/moredoc">https://gitee.com/mnt-ltd/moredoc</a></li><li>Github -<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmnt-ltd%2Fmoredoc" target="_blank">https://github.com/mnt-ltd/moredoc</a></li><li>MNT.Ltd -<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgit.mnt.ltd%2Fmnt-ltd%2Fmoredoc" target="_blank">https://git.mnt.ltd/mnt-ltd/moredoc</a></li></ul><h2>使用手册</h2><p style="color:#333333; margin-left:0px; margin-right:0px; text-align:left">关于魔豆文库安装部署、二次开发等更详细的教程，详见书栈网<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bookstack.cn%2Fbooks%2Fmoredoc" target="_blank">《魔豆文库使用手册》</a></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 22 Nov 2023 00:34:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/267517</guid>
            <link>https://www.oschina.net/news/267517</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[JeeSite V5.5.2 发布，Java 快速开发平台]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h4>升级内容</h4><ul><li><p style="margin-left:0; margin-right:0">新增，文件上传支持自定义存储表，业务上可独立 file_upload 表，与系统文件上传表分离存储</p></li><li><p style="margin-left:0; margin-right:0">新增 sqlMap.column.toSqlNoAlias() 方法，可以在 mapper 中调用，返回不包含别名的列数据</p></li><li><p style="margin-left:0; margin-right:0">新增 Web 服务脚本，可方便进行 run、start、restart、stop 管理服务</p></li><li><p style="margin-left:0; margin-right:0">新增，富文本中的文件和图片、用户头像的对象存储调用</p></li><li><p style="margin-left:0; margin-right:0">新增 Vue 的 ListSelect 选择框代码生成模板</p></li><li><p style="margin-left:0; margin-right:0">新增 Quartz、Flowable 表 ER 图和注释</p></li><li><p style="margin-left:0; margin-right:0">新增 jdbc.connectTimeout 和 jdbc.socketTimeout 连接池参数</p></li><li><p style="margin-left:0; margin-right:0">新增，一个日志清理接口 logService.deleteLogBefore() 可根据需要创建 job 调用</p></li><li><p style="margin-left:0; margin-right:0">调整，工具 Byte 字节格式化默认显示两位小数</p></li><li><p style="margin-left:0; margin-right:0">优化，服务启动脚本，支持在任意目录运行，无需切换到具体目录下</p></li><li><p style="margin-left:0; margin-right:0">优化，数据库设计模型完善，并生成 Excel 表格和 PNG 模型图</p></li><li><p style="margin-left:0; margin-right:0">优化，查询和重置按钮增加图标、搜索框布局优化改进</p></li></ul><p style="color:#002127; text-align:start"><strong>Spring Boot 3 版本升级</strong></p><ul><li><p style="margin-left:0; margin-right:0">升级 flowable 7.0.0 release</p></li><li><p style="margin-left:0; margin-right:0">新增，微小服务 Web Mini 支持只连接业务库，不使用自带 sys 表的支持</p></li><li><p style="margin-left:0; margin-right:0">修正 ExceptionUtils 包名取不到 jakarta 异常类，导致前端异常信息不能正确显示</p></li><li><p style="margin-left:0; margin-right:0">修正，代码生成模板，中的错误 javax 没有修改为 jakarta 的问题</p></li><li><p style="margin-left:0; margin-right:0">修正，接口调用时 context-type 重复问题，导致接口调用 400 错误</p></li></ul><p style="color:#002127; text-align:start"><strong>Vue 分离端</strong></p><ul><li><p style="margin-left:0; margin-right:0">新增 Upload 组件支持后端服务地址属性自定义设置</p></li><li><p style="margin-left:0; margin-right:0">新增，单元格变色和行变色的例子 testData/list.vue</p></li><li><p style="margin-left:0; margin-right:0">新增，路由表单保存后刷新列表数据例子</p></li><li><p style="margin-left:0; margin-right:0">优化，表格上的 tabs 美化、标题配色优化</p></li><li><p style="margin-left:0; margin-right:0">优化，布局调整，将表格的搜索表单，调整到页面标题的下面</p></li><li><p style="margin-left:0; margin-right:0">优化 ListSelect 细节样式、美化树标题样式、美化布局等</p></li><li><p style="margin-left:0; margin-right:0">优化，标题配色、表格上页签、黑暗主题、主题设置抽屉的遮罩透明等</p></li><li><p style="margin-left:0; margin-right:0">修正，编辑 table 的 change 事件调用 2 次的问题 #I8F3O7</p></li><li><p style="margin-left:0; margin-right:0">修正，文件管理目录树，窗口改变大小的时候刷新目录树的问题</p></li><li><p style="margin-left:0; margin-right:0">修正，表单组件 labelValue 可能为空时的异常</p></li><li><p style="margin-left:0; margin-right:0">更新 package.json 依赖库</p></li></ul><h4>升级<span>​</span>方法</h4><ul><li><p style="margin-left:0; margin-right:0">修改&nbsp;<code>pom.xml</code>&nbsp;文件中的&nbsp;<code>jeesite-parent</code>&nbsp;版本号为&nbsp;<code>5.5.2-SNAPSHOT</code></p></li><li><p style="margin-left:0; margin-right:0">如果您修改了&nbsp;<code>parent</code>、<code>common</code>、<code>modules</code>&nbsp;等项目源码，请与&nbsp;<code>git</code>&nbsp;上的代码进行同步</p></li><li><p style="margin-left:0; margin-right:0">如果您是跨版本升级，请注意每一个版本的升级方法，业务上有调整的地方进行修改</p></li><li><p style="margin-left:0; margin-right:0">执行&nbsp;<code>root/package.bat(sh)</code>&nbsp;打包脚本，强制更新依赖。</p></li></ul><p style="color:#002127; text-align:start"><strong>Spring Boot 3 版本升级</strong></p><ul><li><p style="margin-left:0; margin-right:0">修改&nbsp;<code>pom.xml</code>&nbsp;文件中的&nbsp;<code>jeesite-parent</code>&nbsp;版本号为&nbsp;<code>5.5.2.springboot3-SNAPSHOT</code></p></li><li><p style="margin-left:0; margin-right:0">如果您修改了&nbsp;<code>parent</code>、<code>common</code>、<code>modules</code>&nbsp;等项目源码，请与&nbsp;<code>git</code>&nbsp;上的代码进行同步</p></li><li><p style="margin-left:0; margin-right:0">如果您是跨版本升级，请注意每一个版本的升级方法，业务上有调整的地方进行修改</p></li><li><p style="margin-left:0; margin-right:0">执行&nbsp;<code>root/package.bat(sh)</code>&nbsp;打包脚本，强制更新依赖。</p></li></ul><p style="color:#002127; text-align:start"><strong>Vue 分离端升级</strong></p><ul><li><p style="margin-left:0; margin-right:0">请与&nbsp;<code>jeesite-vue</code>&nbsp;代码仓库源码进行同步，合并代码，手动解决冲突代码。</p></li><li><p style="margin-left:0; margin-right:0">匹配后端版本为&nbsp;<code>JeeSite v5.5.2</code></p></li></ul><h2>了解更多</h2><ul><li><p style="margin-left:0; margin-right:0">JeeSite 官网地址：<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fjeesite.com" target="_blank">http://jeesite.com</a></p></li><li><p style="margin-left:0; margin-right:0">JeeSite 在线文档：<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fdocs.jeesite.com" target="_blank">http://docs.jeesite.com</a></p></li><li><p style="margin-left:0; margin-right:0">JeeSite 演示地址：<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fdemo.jeesite.com" target="_blank">http://demo.jeesite.com</a></p></li><li><p style="margin-left:0; margin-right:0">JeeSite Vue 演示地址：<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fvue.jeesite.com" target="_blank">http://vue.jeesite.com</a></p></li><li><p style="margin-left:0; margin-right:0">JeeSite 源码仓库：<a href="https://gitee.com/thinkgem/jeesite4" target="_blank">https://gitee.com/thinkgem/jeesite4</a></p></li><li><p style="margin-left:0; margin-right:0">JeeSite Vue 前端源码：<a href="https://gitee.com/thinkgem/jeesite-vue" target="_blank">https://gitee.com/thinkgem/jeesite-vue</a></p></li><li><p style="margin-left:0; margin-right:0">JeeSite 跨平台手机端：<a href="https://gitee.com/thinkgem/jeesite-uniapp" target="_blank">https://gitee.com/thinkgem/jeesite-uniapp</a></p></li><li><p style="margin-left:0; margin-right:0">JeeSite Cloud 微服务：<a href="https://gitee.com/thinkgem/jeesite-cloud" target="_blank">https://gitee.com/thinkgem/jeesite-cloud</a></p></li><li><p style="margin-left:0; margin-right:0">JeeSite 客户端安装程序：<a href="https://gitee.com/thinkgem/jeesite-client" target="_blank">https://gitee.com/thinkgem/jeesite-client</a></p></li></ul><h2>JeeSite 生态系统</h2><ul><li><p style="margin-left:0; margin-right:0">分布式微服务（Spring Cloud）：<a href="https://gitee.com/thinkgem/jeesite-cloud">https://gitee.com/thinkgem/jeesite-cloud</a></p></li><li><p style="margin-left:0; margin-right:0">Flowable 业务流程引擎（BPM）：<a href="https://gitee.com/link?target=http%3A%2F%2Fjeesite.com%2Fdocs%2Fbpm%2F">http://jeesite.com/docs/bpm/</a></p></li><li><p style="margin-left:0; margin-right:0">JFlow 工作流引擎：<a href="https://gitee.com/thinkgem/jeesite-jflow">https://gitee.com/thinkgem/jeesite-jflow</a></p></li><li><p style="margin-left:0; margin-right:0">多站点内容管理模块（CMS）：<a href="https://gitee.com/link?target=https%3A%2F%2Fjeesite.com%2Fdocs%2Fcms%2F">https://jeesite.com/docs/cms/</a></p></li><li><p style="margin-left:0; margin-right:0">手机端移动端：<a href="https://gitee.com/thinkgem/jeesite-uniapp">https://gitee.com/thinkgem/jeesite-uniapp</a></p></li><li><p style="margin-left:0; margin-right:0">PC 客户端程序：<a href="https://gitee.com/thinkgem/jeesite-client">https://gitee.com/thinkgem/jeesite-client</a></p></li><li><p style="margin-left:0; margin-right:0">Vue3 分离版本：<a href="https://gitee.com/thinkgem/jeesite-vue">https://gitee.com/thinkgem/jeesite-vue</a></p></li><li><p style="margin-left:0; margin-right:0">JeeSite 统一认证：<a href="https://gitee.com/link?target=https%3A%2F%2Fjeesite.com%2Fdocs%2Foauth2-server">https://jeesite.com/docs/oauth2-server</a></p></li><li><p style="margin-left:0; margin-right:0">TopIAM 统一认证：<a href="https://gitee.com/thinkgem/jeesite-topiam">https://gitee.com/thinkgem/jeesite-topiam</a></p></li><li><p style="margin-left:0; margin-right:0">MaxKey 统一认证：<a href="https://gitee.com/thinkgem/jeesite-maxkey">https://gitee.com/thinkgem/jeesite-maxkey</a></p></li><li><p style="margin-left:0; margin-right:0">MybatisPlus:<span>&nbsp;</span><a href="https://gitee.com/thinkgem/jeesite-mybatisplus">https://gitee.com/thinkgem/jeesite-mybatisplus</a></p></li><li><p style="margin-left:0; margin-right:0">Magic 接口快速开发：<a href="https://gitee.com/thinkgem/jeesite-magic-api">https://gitee.com/thinkgem/jeesite-magic-api</a></p></li><li><p style="margin-left:0; margin-right:0">内外网中间件：<a href="https://gitee.com/link?target=https%3A%2F%2Fmy.oschina.net%2Fthinkgem%2Fblog%2F4624519">https://my.oschina.net/thinkgem/blog/4624519</a></p></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Wed, 22 Nov 2023 00:30:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/267516</guid>
            <link>https://www.oschina.net/news/267516</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Wow 2.8.0 发布，让领域驱动设计变得触手可得]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>基于 DDD、EventSourcing 的现代响应式 CQRS 架构微服务开发框架</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FAhoo-Wang%2FWow%2Fblob%2Fmvp%2FLICENSE"><img alt="License" src="https://img.shields.io/badge/license-Apache%202-4EB1BA.svg" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FAhoo-Wang%2FWow%2Freleases"><img alt="GitHub release" src="https://img.shields.io/github/release/Ahoo-Wang/Wow.svg" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fapp.codacy.com%2Fgh%2FAhoo-Wang%2FWow%2Fdashboard%3Futm_source%3Dgh%26utm_medium%3Dreferral%26utm_content%3D%26utm_campaign%3DBadge_grade"><img alt="Codacy Badge" src="https://app.codacy.com/project/badge/Grade/cfc724df22db4f9387525258c8a59609" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fcodecov.io%2Fgh%2FAhoo-Wang%2FWow"><img alt="codecov" src="https://codecov.io/gh/Ahoo-Wang/Wow/branch/main/graph/badge.svg?token=uloJrLoQir" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FAhoo-Wang%2FWow"><img alt="Integration Test Status" src="https://github.com/Ahoo-Wang/Wow/actions/workflows/integration-test.yml/badge.svg" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FKotlinBy%2Fawesome-kotlin"><img alt="Awesome Kotlin Badge" src="https://kotlin.link/awesome-kotlin.svg" referrerpolicy="no-referrer"></a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><strong>领域驱动&nbsp;</strong><span>&nbsp;</span>|&nbsp;<span>&nbsp;</span><strong>事件驱动</strong><span>&nbsp;&nbsp;</span>|<span>&nbsp;&nbsp;</span><strong>测试驱动</strong><span>&nbsp;&nbsp;</span>|<span>&nbsp;&nbsp;</span><strong>声明式设计</strong><span>&nbsp;</span>｜<span>&nbsp;</span><strong>响应式编程</strong><span>&nbsp;</span>｜<span>&nbsp;</span><strong>命令查询职责分离</strong><span>&nbsp;</span>｜<span>&nbsp;</span><strong>事件溯源</strong></p><h2>更新内容 🎉 🎉 🎉</h2><ul><li>特新: 增强<span>&nbsp;</span><em>JAVA</em><span>&nbsp;</span>兼容性与使用体验</li><li>CI: 新增<span>&nbsp;</span><em>JAVA</em><span>&nbsp;</span>兼容性测试</li><li>案例: 新增经典 DDD 银行转账案例（JAVA）<a href="https://gitee.com/AhooWang/Wow/tree/main/example/transfer" target="_blank">https://gitee.com/AhooWang/Wow/tree/main/example/transfer</a></li></ul><p style="color:#40485b; margin-left:0em; margin-right:0em; text-align:center"><img alt="转账流程" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Saga-Transfer.svg" referrerpolicy="no-referrer"></p><h2>架构图</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-Architecture" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Architecture.svg" referrerpolicy="no-referrer"></p><h2>性能测试 (Example)</h2><ul><li>测试代码：<a href="https://gitee.com/AhooWang/Wow/blob/main/example">Example</a></li><li>测试场景：加入购物车、下单</li><li>命令发送等待模式（<code>WaitStrategy</code>）：<code>SENT</code>、<code>PROCESSED</code></li></ul><h3>部署</h3><ul><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/perf/redis.yaml">Redis</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/perf/mongo.yaml">MongoDB</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/perf/kafka.yaml">Kafka</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/perf/config/mongo_kafka_redis.yaml">Application-Config</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/perf/deployment.yaml">Application-Deployment</a></li></ul><h3>测试报告</h3><h4>加入购物车</h4><ul><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/request/AddCartItem.http">请求</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/document/example/perf/Example.Cart.Add@SENT.pdf">详细报告 (PDF)-SENT</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/document/example/perf/Example.Cart.Add@PROCESSED.pdf">详细报告 (PDF)-PROCESSED</a></li></ul><blockquote><p style="margin-left:0; margin-right:0"><code>WaitStrategy</code>:<span>&nbsp;</span><code>SENT</code></p></blockquote><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="SENT" src="https://gitee.com/AhooWang/Wow/raw/main/document/example/perf/Example.Cart.Add@SENT.png" referrerpolicy="no-referrer"></p><blockquote><p style="margin-left:0; margin-right:0"><code>WaitStrategy</code>:<span>&nbsp;</span><code>PROCESSED</code></p></blockquote><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="PROCESSED" src="https://gitee.com/AhooWang/Wow/raw/main/document/example/perf/Example.Cart.Add@PROCESSED.png" referrerpolicy="no-referrer"></p><h4>下单</h4><ul><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/request/CreateOrder.http">请求</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/document/example/perf/Example.Order.Create@SENT.pdf">详细报告 (PDF)-SENT</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/document/example/perf/Example.Order.Create@PROCESSED.pdf">详细报告 (PDF)-PROCESSED</a></li></ul><blockquote><p style="margin-left:0; margin-right:0"><code>WaitStrategy</code>:<span>&nbsp;</span><code>SENT</code></p></blockquote><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="SENT" src="https://gitee.com/AhooWang/Wow/raw/main/document/example/perf/Example.Order.Create@SENT.png" referrerpolicy="no-referrer"></p><blockquote><p style="margin-left:0; margin-right:0"><code>WaitStrategy</code>:<span>&nbsp;</span><code>PROCESSED</code></p></blockquote><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="PROCESSED" src="https://gitee.com/AhooWang/Wow/raw/main/document/example/perf/Example.Order.Create@PROCESSED.png" referrerpolicy="no-referrer"></p><h2>事件源</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-EventSourcing" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/EventSourcing.svg" referrerpolicy="no-referrer"></p><h2>可观测性</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-Observability" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/OpenTelemetry.png" referrerpolicy="no-referrer"></p><h2>OpenAPI (Spring WebFlux 集成)</h2><blockquote><p style="margin-left:0; margin-right:0">自动注册<span>&nbsp;</span><strong>命令</strong><span>&nbsp;</span>路由处理函数 (<code>HandlerFunction</code>) ，开发人员仅需编写领域模型，即可完成服务开发。</p></blockquote><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-Spring-WebFlux-Integration" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/OpenAPI-Swagger.png" referrerpolicy="no-referrer"></p><h2>测试套件：80%+ 的测试覆盖率轻而易举</h2><blockquote><p style="margin-left:0; margin-right:0">Given -&gt; When -&gt; Expect .</p></blockquote><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-CI-Flow" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/CI-Flow.png" referrerpolicy="no-referrer"></p><h2>前置条件</h2><ul><li>理解<span>&nbsp;</span><strong>领域驱动设计</strong>：《实现领域驱动设计》、《领域驱动设计：软件核心复杂性应对之道》</li><li>理解<span>&nbsp;</span><strong>命令查询职责分离</strong>（CQRS）</li><li>理解<span>&nbsp;</span><strong>事件源架构</strong></li><li>理解<span>&nbsp;</span><strong>响应式编程</strong></li></ul><h2>特性</h2><ul><li><span>&nbsp;</span>Aggregate Modeling 
  <ul><li><span>&nbsp;</span>Single Class</li><li><span>&nbsp;</span>Inheritance Pattern</li><li><span>&nbsp;</span>Aggregation Pattern</li></ul></li><li><span>&nbsp;</span>Saga Modeling 
  <ul><li><span>&nbsp;</span><code>StatelessSaga</code></li></ul></li><li><span>&nbsp;</span>Test Suite 
  <ul><li><span>&nbsp;</span>兼容性测试规范（TCK）</li><li><span>&nbsp;</span><code>AggregateVerifier</code></li><li><span>&nbsp;</span><code>SagaVerifier</code></li></ul></li><li><span>&nbsp;</span>EventSourcing 
  <ul><li>EventStore 
    <ul><li><span>&nbsp;</span>MongoDB (Recommend)</li><li><span>&nbsp;</span>R2dbc 
      <ul><li><span>&nbsp;</span>Database Sharding</li><li><span>&nbsp;</span>Table Sharding</li></ul></li><li><span>&nbsp;</span>Redis</li></ul></li><li>Snapshot 
    <ul><li><span>&nbsp;</span>MongoDB</li><li><span>&nbsp;</span>R2dbc 
      <ul><li><span>&nbsp;</span>Database Sharding</li><li><span>&nbsp;</span>Table Sharding</li></ul></li><li><span>&nbsp;</span>ElasticSearch</li><li><span>&nbsp;</span>Redis (Recommend)</li></ul></li></ul></li><li><span>&nbsp;</span>命令等待策略（<code>WaitStrategy</code>） 
  <ul><li><span>&nbsp;</span><code>SENT</code><span>&nbsp;</span>: 命令发送成功后发送完成信号</li><li><span>&nbsp;</span><code>PROCESSED</code><span>&nbsp;</span>: 命令处理完成后发送完成信号</li><li><span>&nbsp;</span><code>SNAPSHOT</code><span>&nbsp;</span>: 快照生成完成后发送完成信号</li><li><span>&nbsp;</span><code>PROJECTED</code><span>&nbsp;</span>: 命令产生的事件被投影后发送完成信号</li></ul></li><li><span>&nbsp;</span>CommandBus 
  <ul><li><span>&nbsp;</span><code>InMemoryCommandBus</code></li><li><span>&nbsp;</span><code>KafkaCommandBus</code><span>&nbsp;</span>(Recommend)</li><li><span>&nbsp;</span><code>RedisCommandBus</code></li><li><span>&nbsp;</span><code>LocalFirstCommandBus</code></li></ul></li><li><span>&nbsp;</span>DomainEventBus 
  <ul><li><span>&nbsp;</span><code>InMemoryDomainEventBus</code></li><li><span>&nbsp;</span><code>KafkaDomainEventBus</code><span>&nbsp;</span>(Recommend)</li><li><span>&nbsp;</span><code>RedisDomainEventBus</code></li><li><span>&nbsp;</span><code>LocalFirstDomainEventBus</code></li></ul></li><li><span>&nbsp;</span>StateEventBus 
  <ul><li><span>&nbsp;</span><code>InMemoryStateEventBus</code></li><li><span>&nbsp;</span><code>KafkaStateEventBus</code><span>&nbsp;</span>(Recommend)</li><li><span>&nbsp;</span><code>RedisStateEventBus</code></li><li><span>&nbsp;</span><code>LocalFirstStateEventBus</code></li></ul></li><li><span>&nbsp;</span>Spring 集成 
  <ul><li><span>&nbsp;</span>Spring Boot Auto Configuration</li><li><span>&nbsp;</span>Automatically register<span>&nbsp;</span><code>CommandAggregate</code><span>&nbsp;</span>to<span>&nbsp;</span><code>RouterFunction</code></li></ul></li><li><span>&nbsp;</span>可观测性 
  <ul><li><span>&nbsp;</span>OpenTelemetry</li></ul></li><li><span>&nbsp;</span>OpenAPI</li><li><span>&nbsp;</span><code>WowMetadata</code><span>&nbsp;</span>Generator 
  <ul><li><span>&nbsp;</span><code>wow-compiler</code></li></ul></li></ul><h2>Example</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/AhooWang/Wow/blob/main/example">Example</a></p><h2>单元测试套件</h2><h3>80%+ 的测试覆盖率轻而易举。</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Test Coverage" src="https://gitee.com/AhooWang/Wow/raw/main/document/example/example-domain-jococo.png" referrerpolicy="no-referrer"></p><blockquote><p style="margin-left:0; margin-right:0">Given -&gt; When -&gt; Expect .</p></blockquote><h3>Aggregate Unit Test (<code>AggregateVerifier</code>)</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/AhooWang/Wow/blob/main/example/example-domain/src/test/kotlin/me/ahoo/wow/example/domain/order/OrderTest.kt">Aggregate Test</a></p><pre><code><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">internal</span></span></span></span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">class</span></span></span></span></span></span></span></span></span><span><span><span><span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">OrderTest</span></span></span></span></span></span></span></span></span><span><span><span><span></span></span></span></span></span>{

    <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">private</span></span></span></span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span></span></span></span></span></span></span><span><span><span><span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">mockCreateOrder</span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span><span>()</span></span></span></span></span></span></span></span></span></span>: VerifiedStage&lt;OrderState&gt; {
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span> tenantId = GlobalIdGenerator.generateAsString()
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span> customerId = GlobalIdGenerator.generateAsString()

        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span> orderItem = OrderItem(
            GlobalIdGenerator.generateAsString(),
            GlobalIdGenerator.generateAsString(),
            BigDecimal.valueOf(<span><span><span><span><span>10</span></span></span></span></span>),
            <span><span><span><span><span>10</span></span></span></span></span>,
        )
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span> orderItems = listOf(orderItem)
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span> inventoryService = <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">object</span></span></span></span></span> : InventoryService {
            <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">override</span></span></span></span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span></span></span></span></span></span></span><span><span><span><span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">getInventory</span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span><span>(productId: </span></span></span></span></span></span></span></span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49">String</span></span></span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span>)</span></span></span></span></span></span></span></span></span></span>: Mono&lt;<span><span><span><span><span>Int</span></span></span></span></span>&gt; {
                <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">return</span></span></span></span></span> orderItems.filter { it.productId == productId }.map { it.quantity }.first().toMono()
            }
        }
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span> pricingService = <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">object</span></span></span></span></span> : PricingService {
            <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">override</span></span></span></span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span></span></span></span></span></span></span><span><span><span><span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">getProductPrice</span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span><span>(productId: </span></span></span></span></span></span></span></span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49">String</span></span></span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span>)</span></span></span></span></span></span></span></span></span></span>: Mono&lt;BigDecimal&gt; {
                <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">return</span></span></span></span></span> orderItems.filter { it.productId == productId }.map { it.price }.first().toMono()
            }
        }
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">return</span></span></span></span></span> aggregateVerifier&lt;Order, OrderState&gt;(tenantId = tenantId)
            .inject(DefaultCreateOrderSpec(inventoryService, pricingService))
            .given()
            .`<span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">when</span></span></span></span></span>`(CreateOrder(customerId, orderItems, SHIPPING_ADDRESS, <span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5">false</span></span></span></span></span>))
            .expectEventCount(<span><span><span><span><span>1</span></span></span></span></span>)
            .expectEventType(OrderCreated::<span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">class</span></span></span></span></span></span></span></span></span><span><span><span><span>.</span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">java</span></span></span></span></span></span></span></span></span><span><span><span><span>)</span></span></span></span></span>
            .expectStateAggregate {
                assertThat(it.aggregateId.tenantId, equalTo(tenantId))
            }
            .expectState {
                assertThat(it.id, notNullValue())
                assertThat(it.customerId, equalTo(customerId))
                assertThat(it.address, equalTo(SHIPPING_ADDRESS))
                assertThat(it.items, equalTo(orderItems))
                assertThat(it.status, equalTo(OrderStatus.CREATED))
            }
            .verify()
    }

    <span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">/** * 创建订单 */</span></span></span></span></span><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">@Test</span></span></span></span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span></span></span></span></span></span></span><span><span><span><span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">createOrder</span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span><span>()</span></span></span></span></span></span></span></span></span></span> {
        mockCreateOrder()
    }

    <span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">@Test</span></span></span></span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span></span></span></span></span></span></span><span><span><span><span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">createOrderGivenEmptyItems</span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span><span>()</span></span></span></span></span></span></span></span></span></span> {
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span> customerId = GlobalIdGenerator.generateAsString()
        aggregateVerifier&lt;Order, OrderState&gt;()
            .inject(mockk&lt;CreateOrderSpec&gt;(), <span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62">"createOrderSpec"</span></span></span></span></span>)
            .given()
            .`<span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">when</span></span></span></span></span>`(CreateOrder(customerId, listOf(), SHIPPING_ADDRESS, <span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5">false</span></span></span></span></span>))
            .expectErrorType(IllegalArgumentException::<span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">class</span></span></span></span></span></span></span></span></span><span><span><span><span>.</span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">java</span></span></span></span></span></span></span></span></span><span><span><span><span>)</span></span></span></span></span>
            .expectStateAggregate {
                <span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">/* * 该聚合对象处于未初始化状态，即该聚合未创建成功. */</span></span></span></span></span>
                assertThat(it.initialized, equalTo(<span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5">false</span></span></span></span></span>))
            }.verify()
    }

    <span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">/** * 创建订单-库存不足 */</span></span></span></span></span><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">@Test</span></span></span></span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span></span></span></span></span></span></span><span><span><span><span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">createOrderWhenInventoryShortage</span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span><span>()</span></span></span></span></span></span></span></span></span></span> {
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span> customerId = GlobalIdGenerator.generateAsString()
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span> orderItem = OrderItem(
            GlobalIdGenerator.generateAsString(),
            GlobalIdGenerator.generateAsString(),
            BigDecimal.valueOf(<span><span><span><span><span>10</span></span></span></span></span>),
            <span><span><span><span><span>10</span></span></span></span></span>,
        )
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span> orderItems = listOf(orderItem)
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span> inventoryService = <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">object</span></span></span></span></span> : InventoryService {
            <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">override</span></span></span></span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span></span></span></span></span></span></span><span><span><span><span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">getInventory</span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span><span>(productId: </span></span></span></span></span></span></span></span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49">String</span></span></span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span>)</span></span></span></span></span></span></span></span></span></span>: Mono&lt;<span><span><span><span><span>Int</span></span></span></span></span>&gt; {
                <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">return</span></span></span></span></span> orderItems.filter { it.productId == productId }
                    <span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">/* * 模拟库存不足 */</span></span></span></span></span>
                    .map { it.quantity - <span><span><span><span><span>1</span></span></span></span></span> }.first().toMono()
            }
        }
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span> pricingService = <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">object</span></span></span></span></span> : PricingService {
            <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">override</span></span></span></span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span></span></span></span></span></span></span><span><span><span><span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">getProductPrice</span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span><span>(productId: </span></span></span></span></span></span></span></span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49">String</span></span></span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span>)</span></span></span></span></span></span></span></span></span></span>: Mono&lt;BigDecimal&gt; {
                <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">return</span></span></span></span></span> orderItems.filter { it.productId == productId }.map { it.price }.first().toMono()
            }
        }

        aggregateVerifier&lt;Order, OrderState&gt;()
            .inject(DefaultCreateOrderSpec(inventoryService, pricingService))
            .given()
            .`<span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">when</span></span></span></span></span>`(CreateOrder(customerId, orderItems, SHIPPING_ADDRESS, <span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5">false</span></span></span></span></span>))
            <span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">/* * 期望：库存不足异常. */</span></span></span></span></span>
            .expectErrorType(InventoryShortageException::<span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">class</span></span></span></span></span></span></span></span></span><span><span><span><span>.</span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">java</span></span></span></span></span></span></span></span></span><span><span><span><span>)</span></span></span></span></span>
            .expectStateAggregate {
                <span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">/* * 该聚合对象处于未初始化状态，即该聚合未创建成功. */</span></span></span></span></span>
                assertThat(it.initialized, equalTo(<span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5">false</span></span></span></span></span>))
            }.verify()
    }

    <span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">/** * 创建订单-下单价格与当前价格不一致 */</span></span></span></span></span><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">@Test</span></span></span></span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span></span></span></span></span></span></span><span><span><span><span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">createOrderWhenPriceInconsistency</span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span><span>()</span></span></span></span></span></span></span></span></span></span> {
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span> customerId = GlobalIdGenerator.generateAsString()
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span> orderItem = OrderItem(
            GlobalIdGenerator.generateAsString(),
            GlobalIdGenerator.generateAsString(),
            BigDecimal.valueOf(<span><span><span><span><span>10</span></span></span></span></span>),
            <span><span><span><span><span>10</span></span></span></span></span>,
        )
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span> orderItems = listOf(orderItem)
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span> inventoryService = <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">object</span></span></span></span></span> : InventoryService {
            <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">override</span></span></span></span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span></span></span></span></span></span></span><span><span><span><span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">getInventory</span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span><span>(productId: </span></span></span></span></span></span></span></span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49">String</span></span></span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span>)</span></span></span></span></span></span></span></span></span></span>: Mono&lt;<span><span><span><span><span>Int</span></span></span></span></span>&gt; {
                <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">return</span></span></span></span></span> orderItems.filter { it.productId == productId }.map { it.quantity }.first().toMono()
            }
        }
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span> pricingService = <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">object</span></span></span></span></span> : PricingService {
            <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">override</span></span></span></span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span></span></span></span></span></span></span><span><span><span><span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">getProductPrice</span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span><span>(productId: </span></span></span></span></span></span></span></span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49">String</span></span></span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span>)</span></span></span></span></span></span></span></span></span></span>: Mono&lt;BigDecimal&gt; {
                <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">return</span></span></span></span></span> orderItems.filter { it.productId == productId }
                    <span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">/* * 模拟下单价格、商品定价不一致 */</span></span></span></span></span>
                    .map { it.price.plus(BigDecimal.valueOf(<span><span><span><span><span>1</span></span></span></span></span>)) }.first().toMono()
            }
        }
        aggregateVerifier&lt;Order, OrderState&gt;()
            .inject(DefaultCreateOrderSpec(inventoryService, pricingService))
            .given()
            .`<span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">when</span></span></span></span></span>`(CreateOrder(customerId, orderItems, SHIPPING_ADDRESS, <span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5">false</span></span></span></span></span>))
            <span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">/* * 期望：价格不一致异常. */</span></span></span></span></span>
            .expectErrorType(PriceInconsistencyException::<span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">class</span></span></span></span></span></span></span></span></span><span><span><span><span>.</span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">java</span></span></span></span></span></span></span></span></span><span><span><span><span>).</span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">verify</span></span></span></span></span></span></span></span></span></span>()
    }
}</code></pre><h3>Saga Unit Test (<code>SagaVerifier</code>)</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/AhooWang/Wow/blob/main/example/example-domain/src/test/kotlin/me/ahoo/wow/example/domain/cart/CartSagaTest.kt">Saga Test</a></p><pre><code><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">class</span></span></span></span></span></span></span></span></span><span><span><span><span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">CartSagaTest</span></span></span></span></span></span></span></span></span><span><span><span><span></span></span></span></span></span>{

    <span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">@Test</span></span></span></span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span></span></span></span></span></span></span><span><span><span><span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">onOrderCreated</span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span><span>()</span></span></span></span></span></span></span></span></span></span> {
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span> orderItem = OrderItem(
            GlobalIdGenerator.generateAsString(),
            GlobalIdGenerator.generateAsString(),
            BigDecimal.valueOf(<span><span><span><span><span>10</span></span></span></span></span>),
            <span><span><span><span><span>10</span></span></span></span></span>,
        )
        sagaVerifier&lt;CartSaga&gt;()
            .`<span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">when</span></span></span></span></span>`(
                mockk&lt;OrderCreated&gt; {
                    every {
                        customerId
                    } returns <span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62">"customerId"</span></span></span></span></span>
                    every {
                        items
                    } returns listOf(orderItem)
                    every {
                        fromCart
                    } returns <span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5">true</span></span></span></span></span>
                },
            )
            .expectCommandBody&lt;RemoveCartItem&gt; {
                assertThat(it.id, equalTo(<span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62">"customerId"</span></span></span></span></span>))
                assertThat(it.productIds, hasSize(<span><span><span><span><span>1</span></span></span></span></span>))
                assertThat(it.productIds.first(), equalTo(orderItem.productId))
            }
            .verify()
    }
}</code></pre><h2>设计</h2><h3>聚合建模</h3><table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:0px; border:none; box-sizing:border-box; color:#40485b; display:block; font-family:-apple-system,&quot;system-ui&quot;,&quot;Segoe UI&quot;,Helvetica,Arial,&quot;Apple Color Emoji&quot;,&quot;Segoe UI Emoji&quot;,&quot;Segoe UI Symbol&quot;,&quot;Liberation Sans&quot;,&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,&quot;Hiragino Sans GB&quot;,&quot;Wenquanyi Micro Hei&quot;,&quot;WenQuanYi Zen Hei&quot;,&quot;ST Heiti&quot;,SimHei,SimSun,&quot;WenQuanYi Zen Hei Sharp&quot;,sans-serif; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; line-height:inherit; margin:0px 0px 16px; max-width:100%; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; word-break:initial; word-spacing:0px"><tbody><tr><th><strong>Single Class</strong></th><th><strong>Inheritance Pattern</strong></th><th><strong>Aggregation Pattern</strong></th></tr></tbody><tbody><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px; text-align:center"><img alt="Single Class - Modeling" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Modeling-Single-Class-Pattern.svg" referrerpolicy="no-referrer"></td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px; text-align:center"><img alt="Inheritance Pattern- Modeling" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Modeling-Inheritance-Pattern.svg" referrerpolicy="no-referrer"></td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px; text-align:center"><img alt="Aggregation Pattern- Modeling" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Modeling-Aggregation-Pattern.svg" referrerpolicy="no-referrer"></td></tr></tbody></table><h3>加载聚合</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Load Aggregate" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Load-Aggregate.svg" referrerpolicy="no-referrer"></p><h3>聚合状态流</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Aggregate State Flow" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Aggregate-State-Flow.svg" referrerpolicy="no-referrer"></p><h3>发送命令</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Send Command" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Send-Command.svg" referrerpolicy="no-referrer"></p><h3>命令与事件流</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Command And Event Flow" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Command-Event-Flow.svg" referrerpolicy="no-referrer"></p><h3>Saga - OrderProcessManager (Demo)</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="OrderProcessManager" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Saga-Order.svg" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 21 Nov 2023 06:47:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/267407</guid>
            <link>https://www.oschina.net/news/267407</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[支持 .NET 8，SunnyUI V3.6.0 发布啦，C# WinForm 开源控件库]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div><h1><img alt="SunnyUI" src="https://images.gitee.com/uploads/images/2021/0324/213615_54240ba9_416720.png" referrerpolicy="no-referrer"></h1></div><div><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/yhuse/SunnyUI/stargazers"><img alt="star" src="https://gitee.com/yhuse/SunnyUI/badge/star.svg?theme=gvp" referrerpolicy="no-referrer"></a><span>&nbsp;</span><a href="https://gitee.com/yhuse/SunnyUI/members"><img alt="fork" src="https://gitee.com/yhuse/SunnyUI/badge/fork.svg?theme=gvp" referrerpolicy="no-referrer"></a></p><ul><li>帮助文档:<span>&nbsp;</span><a href="https://gitee.com/yhuse/SunnyUI/wikis/pages">https://gitee.com/yhuse/SunnyUI/wikis/pages</a></li><li>Gitee:<span>&nbsp;</span><a href="https://gitee.com/yhuse/SunnyUI">https://gitee.com/yhuse/SunnyUI</a></li><li>GitHub:<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fyhuse%2FSunnyUI">https://github.com/yhuse/SunnyUI</a></li><li>Nuget:<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.nuget.org%2Fpackages%2FSunnyUI%2F">https://www.nuget.org/packages/SunnyUI/</a></li><li>Blog:<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.cnblogs.com%2Fyhuse">https://www.cnblogs.com/yhuse</a></li></ul><p style="margin-left:0; margin-right:0"><span style="background-color:#ffffff; color:#40485b">SunnyUI.Net 是基于.Net Framework 4.0~4.8、.Net 6 框架的 C# WinForm 开源控件库、工具类库、扩展类库、多页面开发框架。</span></p><p style="margin-left:0; margin-right:0"><img height="768" src="https://oscimg.oschina.net/oscnet/up-1c3c587dbd99a478ed62523f94ad0d7ccbf.png" width="1100" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0"><span style="background-color:#ffffff; color:#333333">此版本更新内容为：</span></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">+ 增加 * 修改 - 删除</p></div><h4>2023-11-21 V3.6.0</h4><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><strong>注意：大版本更新，重构主题</strong><br> 建议新项目使用此版本，如果 3.6.0 以下版本需要升级参照文档比较差异：<br><a href="https://gitee.com/yhuse/SunnyUI/wikis/%E5%8D%87%E7%BA%A7%E6%8C%87%E5%8D%97/3.5.2--%3E3.6.0">升级指南/3.5.2--&gt;3.6.0</a><br> + 增加.Net8 支持<br> * 重构主题<br> * 修改点阵字体数字显示<br> * UIForm: 修改默认 ShowShadow 边框阴影打开，ShowRadius 显示圆角关闭<br> * UIRadioButtonGroup: 重写 UIRadioButtonGroup<br> * UICheckBoxGroup: 重写 UICheckBoxGroup<br> * UIRadioButton: 增加修改图标大小<br> * UIEditForm: 代码生成增加 ComboDataGridView 类型<br> * 修改几个进度弹窗的关闭标志<br> * 重构 GDI 一些方法</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 21 Nov 2023 02:02:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/267552</guid>
            <link>https://www.oschina.net/news/267552</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
    </channel>
</rss>
