<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[开源中国-软件更新资讯]]>
        </title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="https://rsshub.app/oschina/news/project" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[开源中国-软件更新资讯 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Fri, 22 Dec 2023 03:26:41 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[OpenTofu 发布候选版本，GA 定于 1 月 10 日]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">OpenTofu v1.6.0-rc1 现已发布，这是第一个稳定版本发布前的最后阶段。它是继 alpha 版和 beta 版之后的又一个快速版本，正式版本预计将于 2024 年 1 月 10 日（节后）正式发布。</span></p><p><span style="color:#000000">该版本包括了一些错误修复、稳定性改进和文档更新。重要的是，这个版本突出强调了新的公共注册表的稳定性，该注册表曾在三周前发布的 v1.6.0-beta1 版本中首次亮相。</span></p><blockquote><p><span style="color:#000000">「从构想到候选版本，OpenTofu 的发展之旅只用了四个月。」</span></p></blockquote><p><span style="color:#000000"><img alt="" height="354" src="https://oscimg.oschina.net/oscnet/up-ef39bb3bd36ca3eee6bd95bb95cbf0bf4dc.png" width="500" referrerpolicy="no-referrer"></span></p><p><span style="color:#000000">2023 年 8 月 10 日：Terraform 转向商业源代码许可证。8 月 15 日：OpenTF 宣言上线。8 月 25 日：宣言发布。8 月 31 日：宣言在 GitHub 上获得 3 万个星。9 月 5 日：OpenTF 仓库公开。9 月 20 日：OpenTF 作为 OpenTofu 加入 Linux 基金会。10 月 4 日：发布 Alpha 版。11 月 29 日：发布 Beta 版。12 月 20 日：发布稳定版本候选版。2024 年 1 月 10 日：正式发布。</span></p><p><span style="color:#000000">官方公布的数据称：截至 12 月 18 日，OpenTofu 已经超过 31000 次下载，有 60 位 committer，收到了 1000 多个拉取请求和问题报告。项目的主要仓库除了宣言的 36200 多个 GitHub star 外，还积累了 16450 个 GitHub star。</span></p><p><span style="color:#000000">更多详情可<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.linuxfoundation.org%2Fblog%2Fopentofu-release-candidate-is-out" target="_blank">查看官方博客</a>。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 22 Dec 2023 03:18:36 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272129/opentofu-release-candidate</guid>
            <link>https://www.oschina.net/news/272129/opentofu-release-candidate</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[功能强大的开源数据中台系统 DataCap 1.18.0 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><blockquote><p>推荐一套基于 SpringBoot 开发的简单、易用的开源权限管理平台，建议下载使用: <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdevlive-community%2Fauthx" target="_blank">https://github.com/devlive-community/authx</a></p></blockquote><blockquote><p>推荐一套为 Java 开发人员提供方便易用的 SDK 来与目前提供服务的的 Open AI 进行交互组件：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdevlive-community%2Fopenai-java-sdk" target="_blank">https://github.com/devlive-community/openai-java-sdk</a></p></blockquote><blockquote><p>推荐一套全平台数据库管理工具，建议下载使用: <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdevlive-community%2Fdbm" target="_blank">https://github.com/devlive-community/dbm</a></p></blockquote><p><strong>DataCap 发布!</strong></p><table><tbody><tr><th>发布版本</th><th>发布时间</th></tr></tbody><tbody><tr><td><code>1.18.0</code></td><td><code>2023-12-22</code></td></tr></tbody></table><h4>General</h4><hr><ul><li>[元数据] 支持克隆行</li><li>[元数据] 支持截断表</li><li>[元数据] 支持刷新数据</li><li>[元数据] 支持删除表</li><li>[元数据] 支持展示表结构</li><li>[元数据] 支持展示表 ER 图</li><li>[元数据] 支持导出表数据</li><li>[元数据] 支持新建表</li><li>[元数据] 支持新建列</li><li>[元数据] 支持删除列</li><li>[查询] 添加自动添加 <code>LIMIT</code></li><li>[用户] 支持用户头像</li><li>[数据源] 优化数据源删除提示信息</li><li>[报表] 支持数据报表功能</li><li>[仪表盘] 支持仪表盘功能</li><li>[数据集] 支持数据集数据</li></ul><h4>SPI</h4><hr><ul><li>支持 FileSystem</li><li>支持 Local FileSystem</li></ul><h4>Docs</h4><hr><ul><li>添加 SDK 使用文档</li></ul><h4>SqlServer</h4><hr><ul><li>支持多版本</li><li>修复连接具柄导致连接失败</li></ul><h4>Pipeline</h4><hr><ul><li>支持 MySQL JDBC 方式</li><li>支持拖拽构建</li></ul><h4>Dependencies</h4><hr><ul><li>更新 org.mongodb:mongodb-jdbc <code>2.0.2</code> 到 <code>2.0.3</code></li><li>更新 ch.qos.logback:logback-classic <code>1.2.11</code> 到 <code>1.2.13</code></li><li>更新 org.apache.kafka:kafka-clients <code>2.8.1</code> 到 <code>3.6.1</code></li><li>更新 ch.qos.logback:logback-core <code>1.2.11</code> 到 <code>1.2.13</code></li><li>更新 com.oracle.database.jdbc:ojdbc8 <code>21.9.0.0</code> 到 <code>23.3.0.23.09</code></li><li>更新 org.elasticsearch.plugin:x-pack-sql-jdbc <code>7.10.0</code> 到 <code>8.11.3</code></li><li>更新 jackson.version <code>2.14.2</code> 到 <code>2.16.0</code></li></ul><h4>下载地址</h4><hr><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdatacap.edurt.io%2Fdownload.html" target="_blank">https://datacap.edurt.io/download.html</a></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 22 Dec 2023 03:07:36 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272125</guid>
            <link>https://www.oschina.net/news/272125</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[给开发者更好的选择！支持多种 AI 框架的 openKylin 2.0 Alpha 版来啦]]>
            </title>
            <description>
                <![CDATA[<div class="content"><blockquote><p><span>人工智能作为当前科技发展的重要方向，已经在各个领域展现出巨大的潜力和应用前景。Linux 以其稳定、安全、开放的特性，为人工智能研究和应用提供了更加自由的空间，让开发者可以根据个性化需求进行定制和优化，成为人工智能领域的首选平台。</span></p></blockquote><p style="margin-left:0; margin-right:0; text-align:center"><img alt="" height="410" src="https://oscimg.oschina.net/oscnet/up-46cb23cbef6115af1a63ecc7385176ff6b4.png" width="940" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0"><span style="color:#7f7f7f">注：Alpha 版本只面向开发者和尝新用户体验，非稳定版本请勿在任何工作或生产环境上部署。</span></p><p><span>支持多种 AI 框架的 openKylin 2.0 Alpha 版本来啦！新版本可支撑多种主流 AI 框架，并提供 openKylin AI 框架安装助手，为开发者构建人工智能应用提供了便利的环境和工具。openKylin 与人工智能的结合，可为人工智能技术的发展提供可靠的基础平台。同时，开明包格式、wlcom 合成器、UKUI 4.10 桌面环境等社区最新重大成果都将融入到新版中，颠覆性创新带来全新体验。</span></p><div><div><div><span><span style="color:#ffffff">:09</span></span></div><div><div><div><div><div><div><div><div><div><div>
            &nbsp;
           </div></div></div></div></div></div></div></div></div></div></div></div><p style="margin-left:0; margin-right:0"><span><strong>AI 框架<span><strong>安装助手</strong></span></strong></span></p><p><span>安装 AI 框架需要显卡驱动、加速工具、依赖软件以及配置系统等综合环境，稍有差错就会导致安装失败。<strong>新版本提供了由社区独立开发的 openKylin AI 框架安装助手，实现一键安装 AI 框架。</strong>安装助手采用前后端分离架构：前端负责检测系统硬件，自动推荐安装方式，提供安装选择，获取安装选项，显示安装信息及进度；后端执行具体任务并向前端及时反馈信息。该架构提高了开发效率、可维护性和可扩展性，同时也提供了更好的用户体验。</span></p><p style="margin-left:0; margin-right:0; text-align:center"><img alt="" height="410" src="https://oscimg.oschina.net/oscnet/up-69db6a50571d9beaf6619898ea34e395a7f.png" width="940" referrerpolicy="no-referrer"></p><p>&nbsp;</p><p><span><strong>全新开明包格式环境</strong></span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span>开明包格式是 openKylin 社区为应对传统包格式存在的系统与应用无明确界限、发行版碎片化、兼容性等问题而开发的一款新软件包格式。目标是为新发布软件提供高兼容性、高安全性的解决方案；支持大量存量 Linux 应用的导入和管理；逐步治理版本碎片化，并方便安装升级。2.0 Alpha 版本预装了开明包格式环境，并提供部分开明包软件用以体验开明包格式的安装、更新和卸载操作（命令行方式），后续还将支持多种格式应用导入、多种安装方式等更加完善的功能。</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0px; margin-right:0px; text-align:center"><img alt="" height="410" src="https://oscimg.oschina.net/oscnet/up-2e4f1c7891e318ed0831e1573fededbe20b.png" width="940" referrerpolicy="no-referrer"></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify">&nbsp;</p><p><span><strong>创新 wlcom 合成器</strong></span></p><p style="margin-left:0; margin-right:0; text-align:justify"><span>wlcom 合成器是由 openKylin 社区 Wayland SIG 组研制的一款基于 wayland 协议的合成器，目标是解决传统开源 wayland 合成器在兼容性和稳定性方面的不足。openKylin 2.0 Alpha 版本已默认支持 wlcom 合成器，每次登录系统前可在锁屏界面右下角点击选择。</span></p><p style="margin-left:0px; margin-right:0px; text-align:center"><span><img alt="" height="410" src="https://oscimg.oschina.net/oscnet/up-87a40a83e2c0579dfe2dd3ccfeec602045d.png" width="940" referrerpolicy="no-referrer"></span></p><p><span style="color:#888888">请注意，目前 wlcom 合成器还处于持续开发阶段，一些功能还不完善，若遇到影响体验的问题可选择切换到其他显示模式使用。</span></p><p>&nbsp;</p><p><span><strong>最新 UKUI 4.10 桌面环境</strong></span></p><p><strong><span>交互设计方面</span></strong><span>，UKUI 4.10 桌面环境重点围绕开始菜单、侧边栏、文件管理器、任务栏、多任务视图、锁屏&amp;登录模块等重点模块进行优化，并引入「双钻设计模型」的方法论。在架构上，提出 UKUI Framework 概念和 Framework+轻量级 UI 的发展路线，重新设计了桌面环境整体架构，对 UI 层与功能逻辑层做分层处理，使各部分具备高内聚、低耦合的特点，使 UKUI 桌面整体具备快速迭代、可定制化、高扩展性的特性。<strong>功能使用上</strong>，根据用户的反馈，优化了众多体验问题。同时还新增 UKUI-Lite 模式配置支持，可根据嵌入式等具体场景进行系统定制。</span></p><p style="text-align:center"><img alt="" height="410" src="https://oscimg.oschina.net/oscnet/up-cc1a0e90ba02d1cd0ec1059f029b34f6955.png" width="940" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0; text-align:justify"><span>UKUI 4.10 文件管理器优化了批量文件和大文件拷贝、搜索、排序、重命名等场景下的性能体验和显示搜索进度条、搜索结果的文件删除、重命名等操作，在全局搜索新增无权访问的目标也可添加到搜索范围的支持，以及蓝牙耳机控制、任务栏影音播放器预览图控制键、微信登录功能、创意主题和交互动画效果等，从细微处感受新版本的更佳体验。</span></p><p style="margin-left:0; margin-right:0; text-align:justify">&nbsp;</p><p><span><strong>不可变系统安装模式</strong></span></p><p><span>不可变系统是一种不可更改且只读的操作系统，系统核心文件和目录就无法修改，提高系统的安全性和稳定性，简化系统管理。可以原子方式更新，易于维护。安装 openKylin 2.0 Alpha 版本时勾选「不可变系统安装」即可安装 openKylin 不可变系统。</span></p><p style="text-align:center"><img alt="" height="410" src="https://oscimg.oschina.net/oscnet/up-5b69be3b3013669e8f9143435e6451106a8.png" width="940" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="margin-left:0; margin-right:0; text-align:left">&nbsp;</p><p><span><strong>跨版本升级工具</strong></span></p><p><span>支持 openKylin 1.0、openKylin 1.0.1 用户通过 openKylin 跨版本升级工具快速升级到 openKylin 2.0 Alpha 版本，并支持老版本应用生态兼容。</span></p><p style="margin-left:0; margin-right:0; text-align:center"><img alt="" height="410" src="https://oscimg.oschina.net/oscnet/up-4b82b25d7f0cecc074aac68ff1fad01d447.png" width="940" referrerpolicy="no-referrer"><br> &nbsp;</p><p><span><strong>新增九种系统语言支持</strong></span></p><ul><li><p style="margin-left:0; margin-right:0; text-align:justify"><span><span>新增繁体中文、</span>蒙文<span>、哈萨克文、藏文、柯尔克孜文、维吾尔文、德文、西班牙文、法文九种系统语言支持；</span></span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>安装时可选系统默认安装语言；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>系统安装完后可到「设置-区域语言」切换系统语言；</span></p></li></ul><p style="margin-left:0; margin-right:0; text-align:center">&nbsp;</p><p><span><strong>KARE<span>生态兼容</span></strong></span></p><p style="margin-left:0; margin-right:0"><span>openKylin 2.0 Alpha 版本预装 KARE 生态兼容方案，目前支持 openKylin 1.0 生态兼容。后续 KARE 还将支持更多其他 Linux 版本（包括历史版本）生态兼容。</span></p><p style="text-align:center"><img alt="" height="410" src="https://oscimg.oschina.net/oscnet/up-6cc20d60b4b1583bb0f231802b9a571a53e.png" width="940" referrerpolicy="no-referrer"></p><p>&nbsp;</p><p><span><strong>新增麒麟输入法管理框架及 OK 输入法实现</strong></span></p><ul><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>新增麒麟输入法管理框架通用插件；</span></p></li><li><p><span>新增 OK 拼音输入法支持全拼输入；支持简繁转换、中英标点和全角半角；全新输入窗口和状态栏；支持<span>状态栏</span>拖拽、位置记忆和多屏幕使用；</span></p></li></ul><p style="margin-left:0; margin-right:0; text-align:left">&nbsp;</p><p><span><strong>分级冻结 3.0</strong></span></p><ul><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>新增应用冰冻模式；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>新增控制面板可设置分级冻结是否开启功能；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>新增资源紧张时提醒用户开启分级冻结的消息通知；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>优化关键应用（如浏览器、腾讯会议、WPS 等）运行资源保障；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>优化系统应用运行流畅度；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>优化大量应用场景下的功耗问题；</span></p></li></ul><p>&nbsp;</p><p><span><strong>基础组件升级</strong></span></p><p>&nbsp;</p><p style="margin-left:0px; margin-right:0px; text-align:center"><img alt="" height="1267" src="https://oscimg.oschina.net/oscnet/up-06d5ece851f10d889cbc5399121f2a5dd7c.png" width="1287" referrerpolicy="no-referrer"></p><h2>&nbsp;</h2><p>&nbsp;</p><p><span><strong>安装方式</strong></span></p><p style="margin-left:0; margin-right:0"><span>1.通过官网下载镜像安装镜像，制作启动盘安装（推荐），镜像下载地址：</span></p><p><span style="color:#0052ff">https://www.openkylin.top/downloads/</span></p><p style="margin-left:0; margin-right:0; text-align:left"><span>2.openKylin 1.0.1 用户体验可通过 openKylin 跨版本升级工具安装。工具安装方式：</span></p><pre><code><span><span>sudo</span><span style="color:#dd1144">apt update</span></span></code><code><span><span>sudo</span><span style="color:#dd1144">apt install kylin-revision-manager</span></span></code></pre><p style="margin-left:0; margin-right:0; text-align:left"><span>然后打开工具按照提示完成系统升级。</span></p><p style="margin-left:0; margin-right:0; text-align:left"><span style="color:#ce2a1b">*请注意，该过程存在风险，请确保重要文件已备份。</span></p><h2>&nbsp;</h2><p><span><strong>其他更新</strong></span></p><h3><span style="color:#0052ff"><strong><span>1.UKUI 4.10</span></strong></span></h3><ul><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>【文件管理器】优化标签文件聚合功能；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>【文件管理器】优化用户视图切换、排序等功能入口，用户操作更方便；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>【文件管理器】新增不同页签之间通过拖拽图标进行文件复制支持；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>【文件管理器】新增「创建时间」属性；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>【文件管理器】新增重名文件名后缀时弹窗提醒；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>【蓝牙】新增「我的设备」支持名称自定义；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>【蓝牙】优化用户提示信息策略，提升交互体验；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>【全局搜索】新增任务栏托盘区搜索图标右键菜单；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>【侧边栏】新增删除单个通知的动画效果；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>【侧边栏】优化界面显示；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>【触控板】新增双指滑动调节滑动条手势；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>【窗管】新增窗口阴影效果；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>【声音】新增音效自定义设置功能；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>【用户手册】新增快捷键调出的用户手册的文本可以用鼠标选中和复制支持；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>【控制面板】新增圆角大小配置支持；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>【多任务视图】优化键盘导航交互；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>【开始菜单】优化展开/收缩动画特效；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>【快捷键】USD、kwin、音乐、录音、看图、影音等组件优化快捷键；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>【系统监视器】新增最小化后保持后台运行；</span></p></li></ul><h3><span style="color:#0052ff"><strong><span>2.麒麟管家</span></strong></span></h3><ul><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>新增百宝箱-驱动精灵功能；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>新增百宝箱-换机助手功能；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>重构故障检测模块，支持一键检测同时支持修复功能；</span></p></li></ul><h3><span style="color:#0052ff"><strong><span>3.kmre 3.0</span></strong></span></h3><ul><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>新增应用多开支持；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>新增安卓应用音量调节支持；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>新增部分软件局域网内投屏；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>新增应用全屏启动可配置；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>优化性能模式；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span><span>优化</span>Wayland<span>环境支持；</span></span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>优化 X86 兼容性；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>优化应用窗口自由拉伸；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>优化文件互通；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>优化安卓应用启动速度；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>优化 kmre UI 界面；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>优化选项菜单；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>增加多款 GPU 适配支持；</span></p></li></ul><h3><span style="color:#0052ff"><strong><span>4.虚拟键盘 3.0</span></strong></span></h3><ul><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>新增三种虚拟键盘动画：显示动画、隐藏动画、模式切换动画；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>新增控制面板启用或禁用虚拟键盘动画入口；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>新增自定义虚拟键盘大小功能以及控制面板入口；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>新增控制面板启用或禁用虚拟键盘悬浮球入口；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>新增虚拟键盘增加对高亮候选的支持；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>新增托盘图标支持本地化；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span><span>新增退出按钮、模式转换按钮</span>ToolTip<span>信息提示；</span></span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>提高虚拟键盘兼容性，新增小语种输入支持，对齐物理键盘输入法；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>修复悬浮按钮窗口锯齿问题；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>优化本地配置文件的写入性能；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>修复在调用 QSystemTrayIcon 的 setContextMenu 之后右键菜单中信息无法更新问题；</span></p></li></ul><h3><span style="color:#0052ff"><strong><span>5.计算器</span></strong></span></h3><ul><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>新增复杂函数显示提示；</span></p></li></ul><h3><span style="color:#0052ff"><strong><span>6.便签</span></strong></span></h3><ul><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>原便签贴应用名称更改为「便签」；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>优化插入图片显示；</span></p></li></ul><h3><span style="color:#0052ff"><strong><span>7.系统安全能力</span></strong></span></h3><ul><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>新增 openKylin 网络层访问控制功能；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>新增国密算法支持，保护账户安全；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span><span>支持开启</span>apparmor<span>；</span></span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>新增 RISC-V 系统调用审计支持；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>新增 Intel SGX 支持；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>新增 secGear 支持；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>新增 tom2-tools、tpm2-abrmd 组件；</span></p></li></ul><h3><span style="color:#0052ff"><strong><span>8.适配支持青霜框架</span></strong></span></h3><p style="margin-left:0; margin-right:0; text-align:justify"><span>青霜框架是由 openKylin 社区 QSFramework SIG 组基于 MiniBlink 开发的一款新形态、轻量化、微内核 Web 引擎。目前已发布到 openKylin 2.0 软件仓库，欢迎大家下载体验！</span></p><h2>&nbsp;</h2><p><span><strong>已知问题</strong></span></p><p><span>正如开头所说，openKylin 2.0 Alpha 版本处于试验阶段，目前还存在诸多问题，甚至有些还很严重，请大家不要安装到任何工作或生产环境中去。以下是目前已知的一些严重问题，您如果在使用过程中遇到，不需要再次向社区提交问题反馈。</span></p><ul><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>【不可变系统】不可变模式安装系统后目前不支持应用安装，包括从软件商店安装；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>【wlcom】wlcom 模式下无法打开多任务视图；win+tab 快捷键不生效；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>【登录】登录界面多次切换用户后出现无法再切换用户且登录进去黑屏的问题；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>【荔枝派】荔枝派版本窗口存在毛玻璃异常、窗口直角、黑框等问题；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>【触控板】惠普平板注销后进入 X11 模式桌面后触控板无法滑动；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>【文件管理器】U 盘文件加载缓慢；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>【开始菜单】开始菜单处无法成功卸载应用；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>【任务栏】多次注销重启后任务栏托盘处多个图标加载失败；</span></p></li></ul><p style="margin-left:0; margin-right:0; text-align:justify">&nbsp;</p><p style="margin-left:0; margin-right:0; text-align:justify"><strong><span><span style="background-color:#ffffff; color:rgba(0, 0, 0, 0.9)">更多 bug 问题，可</span><span style="background-color:#ffffff; color:rgba(0, 0, 0, 0.9)">前往 openKylin Gitee 仓库（</span><span style="background-color:#ffffff; color:#0052ff">https://gitee.com/openkylin</span><span style="background-color:#ffffff; color:rgba(0, 0, 0, 0.9)">）反馈~</span></span></strong>​​​​​​​</p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 22 Dec 2023 02:38:21 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272117/openkylin-2-0-alpha</guid>
            <link>https://www.oschina.net/news/272117/openkylin-2-0-alpha</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[PHP 8.3.1 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>PHP 8.3.1 现已<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.php.net%2Farchive%2F2023.php%232023-12-21-1" target="_blank">发布</a>，这是一个错误修复版本。具体更新内容包括：</p><ul><li>Core： 
  <ul><li>修复了错误&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fphp%2Fphp-src%2Fissues%2F12758" target="_blank">GH-12758</a>&nbsp;/&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fphp%2Fphp-src%2Fissues%2F12768" target="_blank">GH-12768</a>（ZEND_FUNC_GET_ARGS 和 ZEND_BIND_STATIC 内的 OOM 处理程序中的无效 opline）。</li><li>修复各种缺失的 NULL 检查。</li><li>修复了错误&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fphp%2Fphp-src%2Fissues%2F12835" target="_blank">GH-12835</a>（内部 __call 上的 call-&gt;extra_named_pa​​rams 泄漏）。</li><li>修复了错误&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fphp%2Fphp-src%2Fissues%2F12826" target="_blank">GH-12826</a>（嵌套循环中奇怪的指针问题）。</li></ul></li><li>FPM:： 
  <ul><li>修复了错误&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fphp%2Fphp-src%2Fissues%2F12705" target="_blank">GH-12705</a>（fpm_status_export_to_zval 中的 Segmentation 错误）。</li></ul></li><li>FTP： 
  <ul><li>修复了错误&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fphp%2Fphp-src%2Fissues%2F9348" target="_blank">GH-9348</a>（FTP 和 SSL 会话重用）。</li></ul></li><li>LibXML： 
  <ul><li>修复了 libxml2 2.12.0 的测试失败问题。</li></ul></li><li>MySQLnd: 
  <ul><li>避免使用未初始化的结构。</li><li>修复了错误&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fphp%2Fphp-src%2Fissues%2F12791" target="_blank">GH-12791</a>（MySQLnd 调试代码中可能取消引用 NULL）。</li></ul></li><li>Opcache： 
  <ul><li>修复了 JIT 错误（函数 JIT 在无效偏移错误的同时发出「Uninitialized string offset」警告）。</li><li>修复了 JIT 错误（JIT 在抛出错误的同时发出「Attempt to assign property of non-object」警告）。</li></ul></li><li>PDO PGSQL： 
  <ul><li>修复了 PDO::pgsqlGetNotify() 中 $fetchMode 的默认值 (kocsismate)</li></ul></li><li>SOAP： 
  <ul><li>修复了错误&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fphp%2Fphp-src%2Fissues%2F12838" target="_blank">GH-12838</a>（[SOAP] 临时 WSDL 缓存文件未删除）。</li></ul></li><li>Standard： 
  <ul><li>修复了&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fphp%2Fphp-src%2Fissues%2F12745" target="_blank">GH-12745</a>（$arg_separator 的 http_build_query() 默认 null 参数被隐式强制为字符串）。</li></ul></li></ul><p><span style="background-color:#ffffff; color:#333333">&nbsp;更多详情可查看&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.php.net%2FChangeLog-8.php%238.3.1" target="_blank">ChangeLog</a><span style="background-color:#ffffff; color:#333333">。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 22 Dec 2023 02:13:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272106/php-8-3-1-released</guid>
            <link>https://www.oschina.net/news/272106/php-8-3-1-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[🎉 领域模型即服务 | Wow 2.11.2 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow:基于 DDD、EventSourcing 的现代响应式 CQRS 架构微服务开发框架" src="https://static.oschina.net/uploads/img/202312/13135012_Zb9v.svg" width="150" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>基于 DDD、EventSourcing 的现代响应式 CQRS 架构微服务开发框架</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FAhoo-Wang%2FWow%2Fblob%2Fmvp%2FLICENSE"><img alt="License" src="https://img.shields.io/badge/license-Apache%202-4EB1BA.svg" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FAhoo-Wang%2FWow%2Freleases"><img alt="GitHub release" src="https://img.shields.io/github/release/Ahoo-Wang/Wow.svg" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fapp.codacy.com%2Fgh%2FAhoo-Wang%2FWow%2Fdashboard%3Futm_source%3Dgh%26utm_medium%3Dreferral%26utm_content%3D%26utm_campaign%3DBadge_grade"><img alt="Codacy Badge" src="https://app.codacy.com/project/badge/Grade/cfc724df22db4f9387525258c8a59609" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fcodecov.io%2Fgh%2FAhoo-Wang%2FWow"><img alt="codecov" src="https://codecov.io/gh/Ahoo-Wang/Wow/branch/main/graph/badge.svg?token=uloJrLoQir" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FAhoo-Wang%2FWow"><img alt="Integration Test Status" src="https://github.com/Ahoo-Wang/Wow/actions/workflows/integration-test.yml/badge.svg" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FKotlinBy%2Fawesome-kotlin"><img alt="Awesome Kotlin Badge" src="https://kotlin.link/awesome-kotlin.svg" referrerpolicy="no-referrer"></a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><strong>领域驱动</strong><span>&nbsp;</span>|<span>&nbsp;</span><strong>事件驱动</strong><span>&nbsp;</span>|<span>&nbsp;</span><strong>测试驱动</strong><span>&nbsp;</span>|<span>&nbsp;</span><strong>声明式设计</strong><span>&nbsp;</span>|<span>&nbsp;</span><strong>响应式编程</strong><span>&nbsp;</span>|<span>&nbsp;</span><strong>命令查询职责分离</strong><span>&nbsp;</span>|<span>&nbsp;</span><strong>事件溯源</strong></p><h2>更新内容</h2><blockquote><p style="margin-left:0; margin-right:0">新增，事件补偿 ——<span>&nbsp;</span><strong>群机器人 (企业微信) 通知</strong><span>&nbsp;</span>🎉🎉，提升事件补偿处理效率！！！</p></blockquote><ul><li>特性: 分布式补偿调度器 (<code>CompensationScheduler</code>) 支持自定义配置</li><li>特性: 新增<span>&nbsp;</span><code>@Retry</code><span>&nbsp;</span>注解 API，以支持更友好的客户端重试策略配置</li><li>特性:<span>&nbsp;</span><code>MessageFunction</code><span>&nbsp;</span>API 支持获取函数注解</li><li>特性:<span>&nbsp;</span><code>CompensationFilter</code><span>&nbsp;</span>支持<span>&nbsp;</span><code>@Retry</code><span>&nbsp;</span>注解</li></ul><p>群机器人 (企业微信) 通知</p><table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:0px; border:none; box-sizing:border-box; color:#40485b; display:block; font-family:-apple-system,&quot;system-ui&quot;,&quot;Segoe UI&quot;,Helvetica,Arial,&quot;Apple Color Emoji&quot;,&quot;Segoe UI Emoji&quot;,&quot;Segoe UI Symbol&quot;,&quot;Liberation Sans&quot;,&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,&quot;Hiragino Sans GB&quot;,&quot;Wenquanyi Micro Hei&quot;,&quot;WenQuanYi Zen Hei&quot;,&quot;ST Heiti&quot;,SimHei,SimSun,&quot;WenQuanYi Zen Hei Sharp&quot;,sans-serif; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; line-height:inherit; margin:0px 0px 16px; max-width:100%; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; word-break:initial; word-spacing:0px"><tbody><tr><th>重试执行失败通知</th><th>补偿成功通知</th></tr></tbody><tbody><tr><td><img alt="事件补偿-通知" src="https://foruda.gitee.com/images/1703151825204489303/fc470563_384561.png" referrerpolicy="no-referrer"></td><td><img alt="事件补偿-通知" src="https://foruda.gitee.com/images/1703151770653404501/50c50d33_384561.png" referrerpolicy="no-referrer"></td></tr></tbody></table><h2>快速开始</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">使用<span>&nbsp;</span><a href="https://gitee.com/AhooWang/wow-project-template">Wow 项目模板</a>快速创建基于 Wow 框架的 DDD 项目。</p><h2>特性概览</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-Features" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Features.png" referrerpolicy="no-referrer"></p><h2>架构图</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-Architecture" src="https://static.oschina.net/uploads/img/202312/13135013_Lcug.svg" referrerpolicy="no-referrer"></p><h2>性能测试 (Example)</h2><ul><li>测试代码：<a href="https://gitee.com/AhooWang/Wow/blob/main/example">Example</a></li><li>测试场景：加入购物车、下单</li><li>命令发送等待模式（<code>WaitStrategy</code>）：<code>SENT</code>、<code>PROCESSED</code></li></ul><h3>部署</h3><ul><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/perf/redis.yaml">Redis</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/perf/mongo.yaml">MongoDB</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/perf/kafka.yaml">Kafka</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/perf/config/mongo_kafka_redis.yaml">Application-Config</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/perf/deployment.yaml">Application-Deployment</a></li></ul><h3>测试报告</h3><h4>加入购物车</h4><ul><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/request/AddCartItem.http">请求</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/document/example/perf/Example.Cart.Add@SENT.pdf">详细报告 (PDF)-SENT</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/document/example/perf/Example.Cart.Add@PROCESSED.pdf">详细报告 (PDF)-PROCESSED</a></li></ul><blockquote><p style="margin-left:0; margin-right:0">命令等待策略（<code>WaitStrategy</code>）为<span>&nbsp;</span><code>SENT</code><span>&nbsp;</span>模式，加入购物车命令（<code>AddCartItem</code>）写请求 API 经过 2 分钟的压测，平均 TPS 为<span>&nbsp;</span><em>59625</em>，峰值为<span>&nbsp;</span><em>82312</em>，平均响应时间为<span>&nbsp;</span><em>29</em><span>&nbsp;</span>毫秒。</p></blockquote><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="SENT" src="https://static.oschina.net/uploads/img/202312/13135013_5U15.png" referrerpolicy="no-referrer"></p><blockquote><p style="margin-left:0; margin-right:0">命令等待策略（<code>WaitStrategy</code>）为<span>&nbsp;</span><code>PROCESSED</code><span>&nbsp;</span>模式，加入购物车命令（<code>AddCartItem</code>）写请求 API 经过 2 分钟的压测，平均 TPS 为<span>&nbsp;</span><em>18696</em>，峰值为<span>&nbsp;</span><em>24141</em>，平均响应时间为<span>&nbsp;</span><em>239</em><span>&nbsp;</span>毫秒。</p></blockquote><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="PROCESSED" src="https://static.oschina.net/uploads/img/202312/13135013_8e5S.png" referrerpolicy="no-referrer"></p><h4>下单</h4><ul><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/request/CreateOrder.http">请求</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/document/example/perf/Example.Order.Create@SENT.pdf">详细报告 (PDF)-SENT</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/document/example/perf/Example.Order.Create@PROCESSED.pdf">详细报告 (PDF)-PROCESSED</a></li></ul><blockquote><p style="margin-left:0; margin-right:0">命令等待策略（<code>WaitStrategy</code>）为<span>&nbsp;</span><code>SENT</code><span>&nbsp;</span>模式，下单命令（<code>CreateOrder</code>）写请求 API 经过 2 分钟的压测，平均 TPS 为<span>&nbsp;</span><em>47838</em>，峰值为<span>&nbsp;</span><em>86200</em>，平均响应时间为<span>&nbsp;</span><em>217</em><span>&nbsp;</span>毫秒。</p></blockquote><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">&nbsp;</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="SENT" src="https://static.oschina.net/uploads/img/202312/13135013_iWxL.png" referrerpolicy="no-referrer"></p><blockquote><p style="margin-left:0; margin-right:0">命令等待策略（<code>WaitStrategy</code>）为<span>&nbsp;</span><code>PROCESSED</code><span>&nbsp;</span>模式，下单命令（<code>CreateOrder</code>）写请求 API 经过 2 分钟的压测，平均 TPS 为<span>&nbsp;</span><em>18230</em>，峰值为<span>&nbsp;</span><em>25506</em>，平均响应时间为<span>&nbsp;</span><em>268</em><span>&nbsp;</span>毫秒。</p></blockquote><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="CreateOrder-PROCESSED" src="https://gitee.com/AhooWang/Wow/raw/main/document/example/perf/Example.Order.Create@PROCESSED.png" referrerpolicy="no-referrer"></p><h2>事件源</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-EventSourcing" src="https://static.oschina.net/uploads/img/202312/13135014_lJcu.svg" referrerpolicy="no-referrer"></p><h2>可观测性</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-Observability" src="https://static.oschina.net/uploads/img/202312/13135014_YAFd.png" referrerpolicy="no-referrer"></p><h2>OpenAPI (Spring WebFlux 集成)</h2><blockquote><p style="margin-left:0; margin-right:0">自动注册<span>&nbsp;</span><strong>命令</strong><span>&nbsp;</span>路由处理函数 (<code>HandlerFunction</code>) ，开发人员仅需编写领域模型，即可完成服务开发。</p></blockquote><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-Spring-WebFlux-Integration" src="https://static.oschina.net/uploads/img/202312/13135014_lVJm.png" referrerpolicy="no-referrer"></p><h2>测试套件：80%+ 的测试覆盖率轻而易举</h2><blockquote><p style="margin-left:0; margin-right:0">Given -&gt; When -&gt; Expect .</p></blockquote><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-CI-Flow" src="https://static.oschina.net/uploads/img/202312/13135014_vlP2.png" referrerpolicy="no-referrer"></p><h2>前置条件</h2><ul><li>理解<span>&nbsp;</span><strong>领域驱动设计</strong>：《实现领域驱动设计》、《领域驱动设计：软件核心复杂性应对之道》</li><li>理解<span>&nbsp;</span><strong>命令查询职责分离</strong>（CQRS）</li><li>理解<span>&nbsp;</span><strong>事件源架构</strong></li><li>理解<span>&nbsp;</span><strong>响应式编程</strong></li></ul><h2>Example</h2><h3>订单服务（Kotlin）</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/AhooWang/Wow/blob/main/example">Example-Order</a></p><h3>银行转账（JAVA）</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/AhooWang/Wow/blob/main/example/transfer">Example-Transfer</a></p><h2>单元测试套件</h2><h3>80%+ 的测试覆盖率轻而易举。</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Test Coverage" src="https://static.oschina.net/uploads/img/202312/13135014_MHRR.png" referrerpolicy="no-referrer"></p><blockquote><p style="margin-left:0; margin-right:0">Given -&gt; When -&gt; Expect .</p></blockquote><h3>Aggregate Unit Test (<code>AggregateVerifier</code>)</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/AhooWang/Wow/blob/main/example/example-domain/src/test/kotlin/me/ahoo/wow/example/domain/order/OrderTest.kt">Aggregate Test</a></p><pre><code><span style="color:#d73a49">internal</span><span><span style="color:#d73a49">class</span><span style="color:#6f42c1">OrderTest</span></span>{

    <span style="color:#6a737d">@Test</span><span style="color:#d73a49">private</span><span><span style="color:#d73a49">fun</span><span style="color:#6f42c1">createOrder</span><span>()</span></span> {
        <span style="color:#d73a49">val</span> tenantId = GlobalIdGenerator.generateAsString()
        <span style="color:#d73a49">val</span> customerId = GlobalIdGenerator.generateAsString()

        <span style="color:#d73a49">val</span> orderItem = OrderItem(
            GlobalIdGenerator.generateAsString(),
            GlobalIdGenerator.generateAsString(),
            BigDecimal.valueOf(<span>10</span>),
            <span>10</span>,
        )
        <span style="color:#d73a49">val</span> orderItems = listOf(orderItem)
        <span style="color:#d73a49">val</span> inventoryService = <span style="color:#d73a49">object</span> : InventoryService {
            <span style="color:#d73a49">override</span><span><span style="color:#d73a49">fun</span><span style="color:#6f42c1">getInventory</span><span>(productId: <span style="color:#d73a49">String</span>)</span></span>: Mono&lt;<span>Int</span>&gt; {
                <span style="color:#d73a49">return</span> orderItems.filter { it.productId == productId }.map { it.quantity }.first().toMono()
            }
        }
        <span style="color:#d73a49">val</span> pricingService = <span style="color:#d73a49">object</span> : PricingService {
            <span style="color:#d73a49">override</span><span><span style="color:#d73a49">fun</span><span style="color:#6f42c1">getProductPrice</span><span>(productId: <span style="color:#d73a49">String</span>)</span></span>: Mono&lt;BigDecimal&gt; {
                <span style="color:#d73a49">return</span> orderItems.filter { it.productId == productId }.map { it.price }.first().toMono()
            }
        }
        aggregateVerifier&lt;Order, OrderState&gt;(tenantId = tenantId)
            .inject(DefaultCreateOrderSpec(inventoryService, pricingService))
            .given()
            .`<span style="color:#d73a49">when</span>`(CreateOrder(customerId, orderItems, SHIPPING_ADDRESS, <span style="color:#005cc5">false</span>))
            .expectEventCount(<span>1</span>)
            .expectEventType(OrderCreated::<span><span style="color:#d73a49">class</span>.<span style="color:#6f42c1">java</span>)</span>
            .expectStateAggregate {
                assertThat(it.aggregateId.tenantId, equalTo(tenantId))
            }
            .expectState {
                assertThat(it.id, notNullValue())
                assertThat(it.customerId, equalTo(customerId))
                assertThat(it.address, equalTo(SHIPPING_ADDRESS))
                assertThat(it.items, equalTo(orderItems))
                assertThat(it.status, equalTo(OrderStatus.CREATED))
            }
            .verify()
    }

    <span style="color:#6a737d">@Test</span><span><span style="color:#d73a49">fun</span><span style="color:#6f42c1">createOrderGivenEmptyItems</span><span>()</span></span> {
        <span style="color:#d73a49">val</span> customerId = GlobalIdGenerator.generateAsString()
        aggregateVerifier&lt;Order, OrderState&gt;()
            .inject(mockk&lt;CreateOrderSpec&gt;(), <span style="color:#032f62">"createOrderSpec"</span>)
            .given()
            .`<span style="color:#d73a49">when</span>`(CreateOrder(customerId, listOf(), SHIPPING_ADDRESS, <span style="color:#005cc5">false</span>))
            .expectErrorType(IllegalArgumentException::<span><span style="color:#d73a49">class</span>.<span style="color:#6f42c1">java</span>)</span>
            .expectStateAggregate {
                <span style="color:#6a737d">/*
                 * 该聚合对象处于未初始化状态，即该聚合未创建成功.
                 */</span>
                assertThat(it.initialized, equalTo(<span style="color:#005cc5">false</span>))
            }.verify()
    }

    <span style="color:#6a737d">/**
     * 创建订单-库存不足
     */</span><span style="color:#6a737d">@Test</span><span><span style="color:#d73a49">fun</span><span style="color:#6f42c1">createOrderWhenInventoryShortage</span><span>()</span></span> {
        <span style="color:#d73a49">val</span> customerId = GlobalIdGenerator.generateAsString()
        <span style="color:#d73a49">val</span> orderItem = OrderItem(
            GlobalIdGenerator.generateAsString(),
            GlobalIdGenerator.generateAsString(),
            BigDecimal.valueOf(<span>10</span>),
            <span>10</span>,
        )
        <span style="color:#d73a49">val</span> orderItems = listOf(orderItem)
        <span style="color:#d73a49">val</span> inventoryService = <span style="color:#d73a49">object</span> : InventoryService {
            <span style="color:#d73a49">override</span><span><span style="color:#d73a49">fun</span><span style="color:#6f42c1">getInventory</span><span>(productId: <span style="color:#d73a49">String</span>)</span></span>: Mono&lt;<span>Int</span>&gt; {
                <span style="color:#d73a49">return</span> orderItems.filter { it.productId == productId }
                    <span style="color:#6a737d">/*
                     * 模拟库存不足
                     */</span>
                    .map { it.quantity - <span>1</span> }.first().toMono()
            }
        }
        <span style="color:#d73a49">val</span> pricingService = <span style="color:#d73a49">object</span> : PricingService {
            <span style="color:#d73a49">override</span><span><span style="color:#d73a49">fun</span><span style="color:#6f42c1">getProductPrice</span><span>(productId: <span style="color:#d73a49">String</span>)</span></span>: Mono&lt;BigDecimal&gt; {
                <span style="color:#d73a49">return</span> orderItems.filter { it.productId == productId }.map { it.price }.first().toMono()
            }
        }

        aggregateVerifier&lt;Order, OrderState&gt;()
            .inject(DefaultCreateOrderSpec(inventoryService, pricingService))
            .given()
            .`<span style="color:#d73a49">when</span>`(CreateOrder(customerId, orderItems, SHIPPING_ADDRESS, <span style="color:#005cc5">false</span>))
            <span style="color:#6a737d">/*
             * 期望：库存不足异常.
             */</span>
            .expectErrorType(InventoryShortageException::<span><span style="color:#d73a49">class</span>.<span style="color:#6f42c1">java</span>)</span>
            .expectStateAggregate {
                <span style="color:#6a737d">/*
                 * 该聚合对象处于未初始化状态，即该聚合未创建成功.
                 */</span>
                assertThat(it.initialized, equalTo(<span style="color:#005cc5">false</span>))
            }.verify()
    }
}</code></pre><h3>Saga Unit Test (<code>SagaVerifier</code>)</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/AhooWang/Wow/blob/main/example/example-domain/src/test/kotlin/me/ahoo/wow/example/domain/cart/CartSagaTest.kt">Saga Test</a></p><pre><code><span><span style="color:#d73a49">class</span><span style="color:#6f42c1">CartSagaTest</span></span>{

    <span style="color:#6a737d">@Test</span><span><span style="color:#d73a49">fun</span><span style="color:#6f42c1">onOrderCreated</span><span>()</span></span> {
        <span style="color:#d73a49">val</span> orderItem = OrderItem(
            GlobalIdGenerator.generateAsString(),
            GlobalIdGenerator.generateAsString(),
            BigDecimal.valueOf(<span>10</span>),
            <span>10</span>,
        )
        sagaVerifier&lt;CartSaga&gt;()
            .`<span style="color:#d73a49">when</span>`(
                mockk&lt;OrderCreated&gt; {
                    every {
                        customerId
                    } returns <span style="color:#032f62">"customerId"</span>
                    every {
                        items
                    } returns listOf(orderItem)
                    every {
                        fromCart
                    } returns <span style="color:#005cc5">true</span>
                },
            )
            .expectCommandBody&lt;RemoveCartItem&gt; {
                assertThat(it.id, equalTo(<span style="color:#032f62">"customerId"</span>))
                assertThat(it.productIds, hasSize(<span>1</span>))
                assertThat(it.productIds.first(), equalTo(orderItem.productId))
            }
            .verify()
    }
}</code></pre><div>
 &nbsp;
</div><h2>设计</h2><h3>聚合建模</h3><table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:0px; border:none; box-sizing:border-box; color:#40485b; display:block; font-family:-apple-system,&quot;system-ui&quot;,&quot;Segoe UI&quot;,Helvetica,Arial,&quot;Apple Color Emoji&quot;,&quot;Segoe UI Emoji&quot;,&quot;Segoe UI Symbol&quot;,&quot;Liberation Sans&quot;,&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,&quot;Hiragino Sans GB&quot;,&quot;Wenquanyi Micro Hei&quot;,&quot;WenQuanYi Zen Hei&quot;,&quot;ST Heiti&quot;,SimHei,SimSun,&quot;WenQuanYi Zen Hei Sharp&quot;,sans-serif; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; line-height:inherit; margin:0px 0px 16px; max-width:100%; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; word-break:initial; word-spacing:0px"><tbody><tr><th><strong>Single Class</strong></th><th><strong>Inheritance Pattern</strong></th><th><strong>Aggregation Pattern</strong></th></tr></tbody><tbody><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px; text-align:center"><img alt="Single Class - Modeling" src="https://static.oschina.net/uploads/img/202312/13135015_ZxxP.svg" referrerpolicy="no-referrer"></td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px; text-align:center"><img alt="Inheritance Pattern- Modeling" src="https://static.oschina.net/uploads/img/202312/13135015_I09q.svg" referrerpolicy="no-referrer"></td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px; text-align:center"><img alt="Aggregation Pattern- Modeling" src="https://static.oschina.net/uploads/img/202312/13135015_1pS1.svg" referrerpolicy="no-referrer"></td></tr></tbody></table><h3>加载聚合</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Load Aggregate" src="https://static.oschina.net/uploads/img/202312/13135015_puJx.svg" referrerpolicy="no-referrer"></p><h3>聚合状态流</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Aggregate State Flow" src="https://static.oschina.net/uploads/img/202312/13135015_I8NI.svg" referrerpolicy="no-referrer"></p><h3>发送命令</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Send Command" src="https://static.oschina.net/uploads/img/202312/13135015_sU6r.svg" referrerpolicy="no-referrer"></p><h3>命令与事件流</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Command And Event Flow" src="https://static.oschina.net/uploads/img/202312/13135016_5HaD.svg" referrerpolicy="no-referrer"></p><h2>事件补偿</h2><h3>用例图</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Event-Compensation-UserCase" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Event-Compensation-UserCase.svg" referrerpolicy="no-referrer"></p><h3>执行时序图</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Event-Compensation" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Event-Compensation.svg" referrerpolicy="no-referrer"></p><h3>Dashboard</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Compensation-Dashboard" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/compensation-dashboard.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Compensation-Dashboard-Error" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/compensation-dashboard-error.png" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 22 Dec 2023 01:04:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272099/wow-2-11-2-released</guid>
            <link>https://www.oschina.net/news/272099/wow-2-11-2-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[私域管理平台，LinkWeChat V5.0.4 版本发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span>LinkWeChat 是国内首个基于企业微信的开源 SCRM，在集成了企微强大的开放能力的基础上，进一步升级拓展灵活高效的客户运营能力及多元化精准营销能力，让客户与企业之间建立强链接，帮助企业提高客户运营效率，强化营销能力，拓展盈利空间，是企业私域流量管理与营销的综合解决方案，目前已经受到企业微信的官方推荐和国家级木兰开源社区进行孵化，同时也是国家工信部重点扶持项目，同时也获得 2022 年中国开源创新大赛二等奖。</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>LinkWeChat V5.0.4 主要的升级内容如下：</strong></p><p style="color:#40485b; margin-left:0em; margin-right:0em; text-align:start"><strong>一、升级概述</strong><br> 本次升级主要针对企业微信 Scrm LinkWeChat v5.0.4 版本，智能表单统计优化重构和更新企微配置重构缓存，并对相关功能进行了 bug 修复。以下是详细的升级内容。<br><strong>二、升级内容</strong></p><ol><li>智能表单统计优化重构<br> 精简优化了表单的统计,避免原有统计缓存失效导致数据丢失等问题。</li><li>更新企微配置重构缓存<br> 更新配合后相关参数缓存进行重构，避免出现因密钥更换导致 token 失效等问题。</li></ol><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">感谢您对我们产品的支持和信任，我们会继续努力，为您提供更好的产品和服务。</p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 22 Dec 2023 01:02:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272098/linkwechat-5-0-4-released</guid>
            <link>https://www.oschina.net/news/272098/linkwechat-5-0-4-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[开源无代码/低代码平台 NocoBase 发布 V0.18，建立健全的测试体系]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:rgba(var(--color-text-base),var(--tw-text-opacity)) !important; margin-left:0; margin-right:0; text-align:start"><img alt="NocoBase" src="https://nocobase-file.oss-cn-beijing.aliyuncs.com/main-l.png" referrerpolicy="no-referrer"></p><p style="color:rgba(var(--color-text-base),var(--tw-text-opacity)) !important; margin-left:0; margin-right:0; text-align:start">NocoBase 是一个极易扩展的开源无代码开发平台。 不必投入几年时间、数百万资金研发，花几分钟时间部署 NocoBase，马上拥有一个私有、可控、极易扩展的无代码开发平台。</p><p style="color:rgba(var(--color-text-base),var(--tw-text-opacity)) !important; margin-left:0; margin-right:0; text-align:start">中文官网：<br><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcn.nocobase.com%2F" target="_blank">https://cn.nocobase.com/</a></p><h2>新特性</h2><p style="color:rgba(var(--color-text-base),var(--tw-text-opacity)) !important; margin-left:0; margin-right:0; text-align:start">为了让 NocoBase 变得更加稳健，第四季度我们一直在补充 E2E 测试，与此同时，也完善了整个测试体系</p><h3>@nocobase/test</h3><p style="color:rgba(var(--color-text-base),var(--tw-text-opacity)) !important; margin-left:0; margin-right:0; text-align:start">NocoBase 测试包，包括：</p><ul><li><p style="color:rgba(var(--color-text-base),var(--tw-text-opacity)) !important; margin-left:.75em; margin-right:0"><code>@nocobase/test/server</code><span>&nbsp;</span>服务端测试</p><ul><li>集成了<span>&nbsp;</span><code>supertest</code><span>&nbsp;</span>用于接口测试</li><li>内置了<span>&nbsp;</span><code>mockDatabase</code><span>&nbsp;</span>和<span>&nbsp;</span><code>mockServer</code></li></ul></li><li><p style="color:rgba(var(--color-text-base),var(--tw-text-opacity)) !important; margin-left:.75em; margin-right:0"><code>@nocobase/test/client</code><span>&nbsp;</span>客户端测试</p><ul><li>集成了<span>&nbsp;</span><code>@testing-library/react</code><span>&nbsp;</span>和<span>&nbsp;</span><code>@testing-library/user-event</code></li></ul></li><li><p style="color:rgba(var(--color-text-base),var(--tw-text-opacity)) !important; margin-left:.75em; margin-right:0"><code>@nocobase/test/e2e</code><span>&nbsp;</span>E2E 测试</p><ul><li>集成了<span>&nbsp;</span><code>@playwright/test</code></li><li>内置了常用的 mock 方法</li></ul></li></ul><h3>测试框架</h3><ul><li>后端测试，使用 Vitest 框架</li><li>前端测试，使用 Vitest 框架</li><li>E2E 测试，使用 Playwright 框架</li></ul><h3>编写测试</h3><h4>后端测试</h4><pre><code><span><span style="color:#c678dd">import</span><span style="color:#abb2bf"> { </span><span style="color:#e06c75">mockDatabase</span><span style="color:#abb2bf"> } </span><span style="color:#c678dd">from</span><span style="color:#abb2bf"></span><span style="color:#98c379">'@nocobase/test/server'</span><span style="color:#abb2bf">;</span></span><span><span style="color:#61afef">describe</span><span style="color:#abb2bf">(</span><span style="color:#98c379">'my db suite'</span><span style="color:#abb2bf">, () </span><span style="color:#c678dd">=&gt;</span><span style="color:#abb2bf"> {</span></span><span><span style="color:#abb2bf"></span><span style="color:#c678dd">let</span><span style="color:#abb2bf"></span><span style="color:#e06c75">db</span><span style="color:#abb2bf">;</span></span><span><span style="color:#abb2bf"></span><span style="color:#61afef">beforeEach</span><span style="color:#abb2bf">(</span><span style="color:#c678dd">async</span><span style="color:#abb2bf"> () </span><span style="color:#c678dd">=&gt;</span><span style="color:#abb2bf"> {</span></span><span><span style="color:#abb2bf"></span><span style="color:#e06c75">db</span><span style="color:#abb2bf"></span><span style="color:#56b6c2">=</span><span style="color:#abb2bf"></span><span style="color:#61afef">mockDatabase</span><span style="color:#abb2bf">();</span></span><span><span style="color:#abb2bf"></span><span style="color:#e5c07b">db</span><span style="color:#abb2bf">.</span><span style="color:#61afef">collection</span><span style="color:#abb2bf">({</span></span><span><span style="color:#abb2bf"></span><span style="color:#e06c75">name</span><span style="color:#abb2bf">: </span><span style="color:#98c379">'posts'</span><span style="color:#abb2bf">,</span></span><span><span style="color:#abb2bf"></span><span style="color:#e06c75">fields</span><span style="color:#abb2bf">: [</span></span><span><span style="color:#abb2bf">        {</span></span><span><span style="color:#abb2bf"></span><span style="color:#e06c75">type</span><span style="color:#abb2bf">: </span><span style="color:#98c379">'string'</span><span style="color:#abb2bf">,</span></span><span><span style="color:#abb2bf"></span><span style="color:#e06c75">name</span><span style="color:#abb2bf">: </span><span style="color:#98c379">'title'</span><span style="color:#abb2bf">,</span></span><span><span style="color:#abb2bf">        },</span></span><span><span style="color:#abb2bf">      ],</span></span><span><span style="color:#abb2bf">    });</span></span><span><span style="color:#abb2bf"></span><span style="color:#c678dd">await</span><span style="color:#abb2bf"></span><span style="color:#e5c07b">db</span><span style="color:#abb2bf">.</span><span style="color:#61afef">sync</span><span style="color:#abb2bf">();</span></span><span><span style="color:#abb2bf">  });</span></span><span><span style="color:#abb2bf"></span><span style="color:#61afef">afterEach</span><span style="color:#abb2bf">(</span><span style="color:#c678dd">async</span><span style="color:#abb2bf"> () </span><span style="color:#c678dd">=&gt;</span><span style="color:#abb2bf"> {</span></span><span><span style="color:#abb2bf"></span><span style="color:#c678dd">await</span><span style="color:#abb2bf"></span><span style="color:#e5c07b">db</span><span style="color:#abb2bf">.</span><span style="color:#61afef">close</span><span style="color:#abb2bf">();</span></span><span><span style="color:#abb2bf">  });</span></span><span><span style="color:#abb2bf"></span><span style="color:#61afef">test</span><span style="color:#abb2bf">(</span><span style="color:#98c379">'my case'</span><span style="color:#abb2bf">, </span><span style="color:#c678dd">async</span><span style="color:#abb2bf"> () </span><span style="color:#c678dd">=&gt;</span><span style="color:#abb2bf"> {</span></span><span><span style="color:#abb2bf"></span><span style="color:#c678dd">const</span><span style="color:#abb2bf"></span><span style="color:#e5c07b">repository</span><span style="color:#abb2bf"></span><span style="color:#56b6c2">=</span><span style="color:#abb2bf"></span><span style="color:#e5c07b">db</span><span style="color:#abb2bf">.</span><span style="color:#61afef">getRepository</span><span style="color:#abb2bf">(</span><span style="color:#98c379">'posts'</span><span style="color:#abb2bf">);</span></span><span><span style="color:#abb2bf"></span><span style="color:#c678dd">const</span><span style="color:#abb2bf"></span><span style="color:#e5c07b">post</span><span style="color:#abb2bf"></span><span style="color:#56b6c2">=</span><span style="color:#abb2bf"></span><span style="color:#c678dd">await</span><span style="color:#abb2bf"></span><span style="color:#e5c07b">repository</span><span style="color:#abb2bf">.</span><span style="color:#61afef">create</span><span style="color:#abb2bf">({</span></span><span><span style="color:#abb2bf"></span><span style="color:#e06c75">values</span><span style="color:#abb2bf">: {</span></span><span><span style="color:#abb2bf"></span><span style="color:#e06c75">title</span><span style="color:#abb2bf">: </span><span style="color:#98c379">'hello'</span><span style="color:#abb2bf">,</span></span><span><span style="color:#abb2bf">      },</span></span><span><span style="color:#abb2bf">    });</span></span><span><span style="color:#abb2bf"></span><span style="color:#61afef">expect</span><span style="color:#abb2bf">(</span><span style="color:#e5c07b">post</span><span style="color:#abb2bf">.</span><span style="color:#61afef">get</span><span style="color:#abb2bf">(</span><span style="color:#98c379">'title'</span><span style="color:#abb2bf">)).</span><span style="color:#61afef">toEqual</span><span style="color:#abb2bf">(</span><span style="color:#98c379">'hello'</span><span style="color:#abb2bf">);</span></span><span><span style="color:#abb2bf">  });</span></span><span><span style="color:#abb2bf">});</span></span></code></pre><h4>前端测试</h4><pre><code><span><span style="color:#c678dd">import</span><span style="color:#abb2bf"> { </span><span style="color:#e06c75">render</span><span style="color:#abb2bf">, </span><span style="color:#e06c75">screen</span><span style="color:#abb2bf">, </span><span style="color:#e06c75">userEvent</span><span style="color:#abb2bf">, </span><span style="color:#e06c75">waitFor</span><span style="color:#abb2bf"> } </span><span style="color:#c678dd">from</span><span style="color:#abb2bf"></span><span style="color:#98c379">'@nocobase/test/client'</span><span style="color:#abb2bf">;</span></span><span><span style="color:#61afef">it</span><span style="color:#abb2bf">(</span><span style="color:#98c379">'should display the value of user input'</span><span style="color:#abb2bf">, </span><span style="color:#c678dd">async</span><span style="color:#abb2bf"> () </span><span style="color:#c678dd">=&gt;</span><span style="color:#abb2bf"> {</span></span><span><span style="color:#abb2bf"></span><span style="color:#c678dd">const</span><span style="color:#abb2bf"> { </span><span style="color:#e5c07b">container</span><span style="color:#abb2bf"> } </span><span style="color:#56b6c2">=</span><span style="color:#abb2bf"></span><span style="color:#61afef">render</span><span style="color:#abb2bf">(&lt;</span><span style="color:#e5c07b">App1</span><span style="color:#abb2bf"> /&gt;);</span></span><span><span style="color:#abb2bf"></span><span style="color:#c678dd">const</span><span style="color:#abb2bf"></span><span style="color:#e5c07b">input</span><span style="color:#abb2bf"></span><span style="color:#56b6c2">=</span><span style="color:#abb2bf"></span><span style="color:#e5c07b">container</span><span style="color:#abb2bf">.</span><span style="color:#61afef">querySelector</span><span style="color:#abb2bf">(</span><span style="color:#98c379">'input'</span><span style="color:#abb2bf">);</span></span><span><span style="color:#abb2bf"></span><span style="color:#c678dd">await</span><span style="color:#abb2bf"></span><span style="color:#e5c07b">userEvent</span><span style="color:#abb2bf">.</span><span style="color:#61afef">type</span><span style="color:#abb2bf">(</span><span style="color:#e06c75">input</span><span style="color:#abb2bf">, </span><span style="color:#98c379">'Hello World'</span><span style="color:#abb2bf">);</span></span><span><span style="color:#abb2bf"></span><span style="color:#c678dd">await</span><span style="color:#abb2bf"></span><span style="color:#61afef">waitFor</span><span style="color:#abb2bf">(() </span><span style="color:#c678dd">=&gt;</span><span style="color:#abb2bf"> {</span></span><span><span style="color:#abb2bf"></span><span style="color:#61afef">expect</span><span style="color:#abb2bf">(</span><span style="color:#e5c07b">screen</span><span style="color:#abb2bf">.</span><span style="color:#61afef">getByText</span><span style="color:#abb2bf">(</span><span style="color:#98c379">'Hello World'</span><span style="color:#abb2bf">)).</span><span style="color:#61afef">toBeInTheDocument</span><span style="color:#abb2bf">();</span></span><span><span style="color:#abb2bf">  });</span></span><span><span style="color:#abb2bf">});</span></span></code></pre><h4>E2E 测试</h4><pre><code><span><span style="color:#c678dd">import</span><span style="color:#abb2bf"> { </span><span style="color:#e06c75">test</span><span style="color:#abb2bf"> } </span><span style="color:#c678dd">from</span><span style="color:#abb2bf"></span><span style="color:#98c379">'@nocobase/test/e2e'</span><span style="color:#abb2bf">;</span></span><span><span style="color:#61afef">test</span><span style="color:#abb2bf">(</span><span style="color:#98c379">'sign in'</span><span style="color:#abb2bf">, </span><span style="color:#c678dd">async</span><span style="color:#abb2bf"> ({ </span><em>page</em><span style="color:#abb2bf"> }) </span><span style="color:#c678dd">=&gt;</span><span style="color:#abb2bf"> {</span></span><span><span style="color:#abb2bf"></span><span style="color:#c678dd">await</span><span style="color:#abb2bf"></span><span style="color:#e5c07b">page</span><span style="color:#abb2bf">.</span><span style="color:#61afef">goto</span><span style="color:#abb2bf">(</span><span style="color:#98c379">'/'</span><span style="color:#abb2bf">);</span></span><span><span style="color:#abb2bf"></span><span style="color:#c678dd">await</span><span style="color:#abb2bf"></span><span style="color:#e5c07b">page</span><span style="color:#abb2bf">.</span><span style="color:#61afef">getByPlaceholder</span><span style="color:#abb2bf">(</span><span style="color:#98c379">'Username/Email'</span><span style="color:#abb2bf">).</span><span style="color:#61afef">click</span><span style="color:#abb2bf">();</span></span><span><span style="color:#abb2bf"></span><span style="color:#c678dd">await</span><span style="color:#abb2bf"></span><span style="color:#e5c07b">page</span><span style="color:#abb2bf">.</span><span style="color:#61afef">getByPlaceholder</span><span style="color:#abb2bf">(</span><span style="color:#98c379">'Username/Email'</span><span style="color:#abb2bf">).</span><span style="color:#61afef">fill</span><span style="color:#abb2bf">(</span><span style="color:#98c379">'admin@nocobase.com'</span><span style="color:#abb2bf">);</span></span><span><span style="color:#abb2bf"></span><span style="color:#c678dd">await</span><span style="color:#abb2bf"></span><span style="color:#e5c07b">page</span><span style="color:#abb2bf">.</span><span style="color:#61afef">getByPlaceholder</span><span style="color:#abb2bf">(</span><span style="color:#98c379">'Password'</span><span style="color:#abb2bf">).</span><span style="color:#61afef">click</span><span style="color:#abb2bf">();</span></span><span><span style="color:#abb2bf"></span><span style="color:#c678dd">await</span><span style="color:#abb2bf"></span><span style="color:#e5c07b">page</span><span style="color:#abb2bf">.</span><span style="color:#61afef">getByPlaceholder</span><span style="color:#abb2bf">(</span><span style="color:#98c379">'Password'</span><span style="color:#abb2bf">).</span><span style="color:#61afef">fill</span><span style="color:#abb2bf">(</span><span style="color:#98c379">'admin123'</span><span style="color:#abb2bf">);</span></span><span><span style="color:#abb2bf"></span><span style="color:#c678dd">await</span><span style="color:#abb2bf"></span><span style="color:#e5c07b">page</span><span style="color:#abb2bf">.</span><span style="color:#61afef">getByRole</span><span style="color:#abb2bf">(</span><span style="color:#98c379">'button'</span><span style="color:#abb2bf">, { </span><span style="color:#e06c75">name</span><span style="color:#abb2bf">: </span><span style="color:#98c379">'Sign in'</span><span style="color:#abb2bf"> }).</span><span style="color:#61afef">click</span><span style="color:#abb2bf">();</span></span><span><span style="color:#abb2bf"></span><span style="color:#c678dd">await</span><span style="color:#abb2bf"></span><span style="color:#61afef">expect</span><span style="color:#abb2bf">(</span></span><span><span style="color:#abb2bf"></span><span style="color:#e5c07b">page</span><span style="color:#abb2bf">.</span><span style="color:#61afef">getByTestId</span><span style="color:#abb2bf">(</span><span style="color:#98c379">'user-center-button'</span><span style="color:#abb2bf">).</span><span style="color:#61afef">getByText</span><span style="color:#abb2bf">(</span><span style="color:#98c379">'Super Admin'</span><span style="color:#abb2bf">)</span></span><span><span style="color:#abb2bf">    ).</span><span style="color:#61afef">toBeVisible</span><span style="color:#abb2bf">();</span></span><span><span style="color:#abb2bf">});</span></span></code></pre><h3>运行 Vitest 测试</h3><pre><code><span><em># 运行全部测试，前后端并行两个 vitest 进程</em></span><span><span style="color:#61afef">yarn</span><span style="color:#abb2bf"></span><span style="color:#98c379">test</span></span><span><em># 运行 client 相关测试用例</em></span><span><span style="color:#61afef">yarn</span><span style="color:#abb2bf"></span><span style="color:#98c379">test</span><span style="color:#abb2bf"></span><span style="color:#d19a66">--client</span></span><span><em># 等价于</em></span><span><span style="color:#61afef">yarn</span><span style="color:#abb2bf"></span><span style="color:#98c379">cross-env</span><span style="color:#abb2bf"></span><span style="color:#98c379">TEST_ENV=client-side</span><span style="color:#abb2bf"></span><span style="color:#98c379">vitest</span></span><span><em># 运行 server 相关测试用例</em></span><span><span style="color:#61afef">yarn</span><span style="color:#abb2bf"></span><span style="color:#98c379">test</span><span style="color:#abb2bf"></span><span style="color:#d19a66">--server</span></span><span><em># 等价于</em></span><span><span style="color:#61afef">yarn</span><span style="color:#abb2bf"></span><span style="color:#98c379">cross-env</span><span style="color:#abb2bf"></span><span style="color:#98c379">TEST_ENV=server-side</span><span style="color:#abb2bf"></span><span style="color:#98c379">vitest</span></span><span><em># 指定目录或文件</em></span><span><span style="color:#61afef">yarn</span><span style="color:#abb2bf"></span><span style="color:#98c379">test</span><span style="color:#abb2bf"></span><span style="color:#98c379">your/path/src/__tests__/test-file.test.ts</span></span><span><em># 前端文件必须包含 /client/ </em></span><span><span style="color:#61afef">yarn</span><span style="color:#abb2bf"></span><span style="color:#98c379">test</span><span style="color:#abb2bf"></span><span style="color:#98c379">your/path/client/src/__tests__/test-file.test.ts</span></span></code></pre><p style="color:rgba(var(--color-text-base),var(--tw-text-opacity)) !important; margin-left:0; margin-right:0; text-align:start">📢 和直接运行 vitest 的区别</p><ul><li>指定路径时，可以自动识别前后端，前端的必须包含<span>&nbsp;</span><code>/client/</code></li><li>后端测试默认为<span>&nbsp;</span><code>--single-thread</code>，如果要关掉可以加上<span>&nbsp;</span><code>--single-thread=false</code></li><li>默认为<span>&nbsp;</span><code>--run</code><span>&nbsp;</span>测试运行完退出进程，如果需要监听，加上<span>&nbsp;</span><code>--watch</code></li></ul><h3>运行 Playwright 测试</h3><pre><code><span><em># 安装依赖</em></span><span><span style="color:#61afef">yarn</span><span style="color:#abb2bf"></span><span style="color:#98c379">e2e</span><span style="color:#abb2bf"></span><span style="color:#98c379">install-deps</span></span><span><em># 运行测试</em></span><span><span style="color:#61afef">yarn</span><span style="color:#abb2bf"></span><span style="color:#98c379">e2e</span><span style="color:#abb2bf"></span><span style="color:#98c379">test</span></span><span><em># UI 模式</em></span><span><span style="color:#61afef">yarn</span><span style="color:#abb2bf"></span><span style="color:#98c379">e2e</span><span style="color:#abb2bf"></span><span style="color:#98c379">test</span><span style="color:#abb2bf"></span><span style="color:#d19a66">--ui</span></span><span><em># 已运行的应用 URL</em></span><span><span style="color:#61afef">yarn</span><span style="color:#abb2bf"></span><span style="color:#98c379">e2e</span><span style="color:#abb2bf"></span><span style="color:#98c379">test</span><span style="color:#abb2bf"></span><span style="color:#d19a66">--url=http://localhost:20000</span></span><span><em># Start an app. It reinstalls every time.</em></span><span><span style="color:#61afef">yarn</span><span style="color:#abb2bf"></span><span style="color:#98c379">e2e</span><span style="color:#abb2bf"></span><span style="color:#98c379">start-app</span></span></code></pre><h2>其他变化</h2><h3>用户认证扩展的优化</h3><ul><li>用户认证扩展开发指南<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs-cn.nocobase.com%2Fplugins%2Fauth%2Fdev%2Fguide" target="_blank">https://docs-cn.nocobase.com/plugins/auth/dev/guide</a></li><li>用户认证扩展相关不兼容变化<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs-cn.nocobase.com%2Fbreaking-changes%2Fv0-18-0-alpha-1" target="_blank">https://docs-cn.nocobase.com/breaking-changes/v0-18-0-alpha-1</a></li></ul><h3>插件化拆分</h3><p style="color:rgba(var(--color-text-base),var(--tw-text-opacity)) !important; margin-left:0; margin-right:0; text-align:start">为了让内核变得更加精炼，某些功能做了插件化的拆分，近期已完成拆分的插件有：</p><table cellspacing="0" style="--tw-border-spacing-x:0; --tw-border-spacing-y:0; --tw-ring-color:#3b82f680; --tw-ring-offset-color:#ffffff; --tw-ring-offset-shadow:0 0 #0000; --tw-ring-offset-width:0px; --tw-ring-shadow:0 0 #0000; --tw-rotate:0; --tw-scale-x:1; --tw-scale-y:1; --tw-scroll-snap-strictness:proximity; --tw-shadow-colored:0 0 #0000; --tw-shadow:0 0 #0000; --tw-skew-x:0; --tw-skew-y:0; --tw-text-opacity:1; --tw-translate-x:0; --tw-translate-y:0; -webkit-text-stroke-width:0px; background-color:#fbfefb; border-collapse:collapse; border-color:inherit; border-image:initial; border-style:solid; border-width:0px; box-sizing:border-box; color:rgba(var(--color-text-base),var(--tw-text-opacity)); font-family:&quot;IBM Plex Mono&quot;,-apple-system,BlinkMacSystemFont,&quot;Segoe UI&quot;,&quot;Noto Sans&quot;,Helvetica,Arial,sans-serif,&quot;Apple Color Emoji&quot;,&quot;Segoe UI Emoji&quot;,monospace; font-size:0.875em; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; line-height:1.71429; margin-bottom:2em; margin-top:2em; orphans:2; table-layout:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-indent:0px; text-transform:none; white-space:normal; widows:2; width:736px; word-spacing:0px"><tbody><tr><th style="border-color:rgba(var(--color-border),var(--tw-border-opacity)); vertical-align:bottom">插件名</th><th style="border-color:rgba(var(--color-border),var(--tw-border-opacity)); vertical-align:bottom">包名</th></tr></tbody><tbody><tr><td style="border-color:rgba(var(--color-border),var(--tw-border-opacity)); border-image:initial; border-style:solid; border-width:1px; vertical-align:baseline">操作 - 批量编辑</td><td style="border-color:rgba(var(--color-border),var(--tw-border-opacity)); border-image:initial; border-style:solid; border-width:1px; vertical-align:baseline">@nocobase/plugin-action-bulk-edit</td></tr><tr><td style="border-color:rgba(var(--color-border),var(--tw-border-opacity)); border-image:initial; border-style:solid; border-width:1px; vertical-align:baseline">操作 - 批量更新</td><td style="border-color:rgba(var(--color-border),var(--tw-border-opacity)); border-image:initial; border-style:solid; border-width:1px; vertical-align:baseline">@nocobase/plugin-action-bulk-update</td></tr><tr><td style="border-color:rgba(var(--color-border),var(--tw-border-opacity)); border-image:initial; border-style:solid; border-width:1px; vertical-align:baseline">操作 - 复制</td><td style="border-color:rgba(var(--color-border),var(--tw-border-opacity)); border-image:initial; border-style:solid; border-width:1px; vertical-align:baseline">@nocobase/plugin-action-duplicate</td></tr><tr><td style="border-color:rgba(var(--color-border),var(--tw-border-opacity)); border-image:initial; border-style:solid; border-width:1px; vertical-align:baseline">看板区块</td><td style="border-color:rgba(var(--color-border),var(--tw-border-opacity)); border-image:initial; border-style:solid; border-width:1px; vertical-align:baseline">@nocobase/plugin-kanban</td></tr><tr><td style="border-color:rgba(var(--color-border),var(--tw-border-opacity)); border-image:initial; border-style:solid; border-width:1px; vertical-align:baseline">甘特图区块</td><td style="border-color:rgba(var(--color-border),var(--tw-border-opacity)); border-image:initial; border-style:solid; border-width:1px; vertical-align:baseline">@nocobase/plugin-gantt</td></tr><tr><td style="border-color:rgba(var(--color-border),var(--tw-border-opacity)); border-image:initial; border-style:solid; border-width:1px; vertical-align:baseline">Workflow - Aggregate</td><td style="border-color:rgba(var(--color-border),var(--tw-border-opacity)); border-image:initial; border-style:solid; border-width:1px; vertical-align:baseline">@nocobase/plugin-workflow-aggregate</td></tr><tr><td style="border-color:rgba(var(--color-border),var(--tw-border-opacity)); border-image:initial; border-style:solid; border-width:1px; vertical-align:baseline">Workflow - Approval</td><td style="border-color:rgba(var(--color-border),var(--tw-border-opacity)); border-image:initial; border-style:solid; border-width:1px; vertical-align:baseline">@nocobase/plugin-workflow-approval</td></tr><tr><td style="border-color:rgba(var(--color-border),var(--tw-border-opacity)); border-image:initial; border-style:solid; border-width:1px; vertical-align:baseline">Workflow - Delay</td><td style="border-color:rgba(var(--color-border),var(--tw-border-opacity)); border-image:initial; border-style:solid; border-width:1px; vertical-align:baseline">@nocobase/plugin-workflow-delay</td></tr><tr><td style="border-color:rgba(var(--color-border),var(--tw-border-opacity)); border-image:initial; border-style:solid; border-width:1px; vertical-align:baseline">Workflow - Dynamic calculation</td><td style="border-color:rgba(var(--color-border),var(--tw-border-opacity)); border-image:initial; border-style:solid; border-width:1px; vertical-align:baseline">@nocobase/plugin-workflow-dynamic-calculation</td></tr><tr><td style="border-color:rgba(var(--color-border),var(--tw-border-opacity)); border-image:initial; border-style:solid; border-width:1px; vertical-align:baseline">Workflow - Form trigger</td><td style="border-color:rgba(var(--color-border),var(--tw-border-opacity)); border-image:initial; border-style:solid; border-width:1px; vertical-align:baseline">@nocobase/plugin-workflow-form-trigger</td></tr><tr><td style="border-color:rgba(var(--color-border),var(--tw-border-opacity)); border-image:initial; border-style:solid; border-width:1px; vertical-align:baseline">Workflow - JSON query</td><td style="border-color:rgba(var(--color-border),var(--tw-border-opacity)); border-image:initial; border-style:solid; border-width:1px; vertical-align:baseline">@nocobase/plugin-workflow-json-query</td></tr><tr><td style="border-color:rgba(var(--color-border),var(--tw-border-opacity)); border-image:initial; border-style:solid; border-width:1px; vertical-align:baseline">Workflow - Loop</td><td style="border-color:rgba(var(--color-border),var(--tw-border-opacity)); border-image:initial; border-style:solid; border-width:1px; vertical-align:baseline">@nocobase/plugin-workflow-loop</td></tr><tr><td style="border-color:rgba(var(--color-border),var(--tw-border-opacity)); border-image:initial; border-style:solid; border-width:1px; vertical-align:baseline">Workflow - Manual</td><td style="border-color:rgba(var(--color-border),var(--tw-border-opacity)); border-image:initial; border-style:solid; border-width:1px; vertical-align:baseline">@nocobase/plugin-workflow-manual</td></tr><tr><td style="border-color:rgba(var(--color-border),var(--tw-border-opacity)); border-image:initial; border-style:solid; border-width:1px; vertical-align:baseline">Workflow - Parallel</td><td style="border-color:rgba(var(--color-border),var(--tw-border-opacity)); border-image:initial; border-style:solid; border-width:1px; vertical-align:baseline">@nocobase/plugin-workflow-parallel</td></tr><tr><td style="border-color:rgba(var(--color-border),var(--tw-border-opacity)); border-image:initial; border-style:solid; border-width:1px; vertical-align:baseline">Workflow - Request</td><td style="border-color:rgba(var(--color-border),var(--tw-border-opacity)); border-image:initial; border-style:solid; border-width:1px; vertical-align:baseline">@nocobase/plugin-workflow-request</td></tr><tr><td style="border-color:rgba(var(--color-border),var(--tw-border-opacity)); border-image:initial; border-style:solid; border-width:1px; vertical-align:baseline">Workflow - SQL</td><td style="border-color:rgba(var(--color-border),var(--tw-border-opacity)); border-image:initial; border-style:solid; border-width:1px; vertical-align:baseline">@nocobase/plugin-workflow-sql</td></tr></tbody></table><p style="color:rgba(var(--color-text-base),var(--tw-text-opacity)) !important; margin-left:0; margin-right:0; text-align:start">详情查看<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs-cn.nocobase.com%2Fplugins" target="_blank">完整的插件列表</a>，需要注意的是，文档正在建设中，部分内容可能缺失或缺少翻译，你可以关注<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnocobase%2Fdocs" target="_blank">nocobase/docs</a><span>&nbsp;</span>了解最新动态。</p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 22 Dec 2023 00:49:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272097/nocobase-0-18-released</guid>
            <link>https://www.oschina.net/news/272097/nocobase-0-18-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[ModStartBlog v8.8.0 富文本支持导入/粘贴 Markdown，多处优化]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#34495e; margin-left:.5em; margin-right:.5em; text-align:left">ModStart 是一个基于 Laravel 模块化极速开发框架。模块市场拥有丰富的功能应用，支持后台一键快速安装，让开发者能快的实现业务功能开发。</p><p style="color:#34495e; margin-left:.5em; margin-right:.5em; text-align:left">系统完全开源，基于 Apache 2.0 开源协议。</p><p style="color:#34495e; margin-left:.5em; margin-right:.5em; text-align:left"><img alt="系统演示" src="https://ms-assets.modstart.com/data/image/2022/05/30/7459_smgt_9533.jpg" referrerpolicy="no-referrer"></p><h2>功能特性</h2><ul><li><p style="margin-left:.5em; margin-right:.5em">丰富的模块市场，后台一键快速安装</p></li><li><p style="margin-left:.5em; margin-right:.5em">会员模块通用且完整，支持完整的 API 调用</p></li><li><p style="margin-left:.5em; margin-right:.5em">大文件分片上传，进度条显示，已上传文件管理</p></li><li><p style="margin-left:.5em; margin-right:.5em">强大的模块扩展功能，所有模块可以无缝集成，支持在线安装、卸载模块</p></li><li><p style="margin-left:.5em; margin-right:.5em">完善的开发助手，实现模块、主题的的一键创建</p></li><li><p style="margin-left:.5em; margin-right:.5em">完善的后台权限管理，支持基于 RBAC 的权限管理系统</p></li><li><p style="margin-left:.5em; margin-right:.5em">后台管理支持使用手机、平板、PC，无论何时何地都可方便管理</p></li><li><p style="margin-left:.5em; margin-right:.5em">第三方登录（QQ、微信、微博、支付宝、微信小程序）</p></li><li><p style="margin-left:.5em; margin-right:.5em">第三方支付支持（微信、支付宝、支付宝当面付、微信扫码、微信小程序）</p></li><li><p style="margin-left:.5em; margin-right:.5em">第三方云存储支持，支持云储存分片上传（阿里云、百度云、华为云、腾讯云、FTP、七牛云、UCloud、又拍云）</p></li><li><p style="margin-left:.5em; margin-right:.5em">第三方短信支持（阿里云、腾讯云、华为云、百度云、253 云通讯、聚合、七牛云、融云、赛邮、UCloud、云片、网易云）</p></li></ul><h2>V8.8.0 版本更新</h2><p style="color:#34495e; margin-left:.5em; margin-right:.5em; text-align:left">2023 年 12 月 21 日 ModStartBlog 发布 v8.8.0 版本，增加了以下 8 个特性：</p><ul><li><p style="margin-left:.5em; margin-right:.5em">[新功能] CurlUtil::mockUserAgent 支持模拟真实 UA</p></li><li><p style="margin-left:.5em; margin-right:.5em">[新功能] 图片水印工具类全面优化，支持文字单行、文字多行、图片单个、图片多个</p></li><li><p style="margin-left:.5em; margin-right:.5em">[系统优化] RedisQueue 一处多进程调度性能问题</p></li><li><p style="margin-left:.5em; margin-right:.5em">[系统优化] UEditor 图片抓取特殊 URL 文件类型判断优化，新增真实 UserAgent</p></li><li><p style="margin-left:.5em; margin-right:.5em">[系统优化] 组件 when 方法数据类型优化</p></li><li><p style="margin-left:.5em; margin-right:.5em">[Bug 修复] 一处 LayUI 树 tree 多选问题</p></li><li><p style="margin-left:.5em; margin-right:.5em">[Bug 修复] 后台 Job 执行时候，资源全路径修正问题</p></li><li><p style="margin-left:.5em; margin-right:.5em">[Bug 修复] 一处图片分片上传异常问题</p></li></ul><h2>功能特性</h2><h3>富文本支持 Markdown 内容一键粘贴</h3><p style="color:#34495e; margin-left:.5em; margin-right:.5em; text-align:left"><img alt="" src="https://mz-assets.tecmz.com/data/image/2023/12/08/54129_lgxx_8116.png" referrerpolicy="no-referrer"></p><h3>图片水印支持多种方式，倾斜水平、透明度、样式均可设置</h3><p style="color:#34495e; margin-left:.5em; margin-right:.5em; text-align:left">单行文字</p><p style="color:#34495e; margin-left:.5em; margin-right:.5em; text-align:left"><img alt="" src="https://mz-assets.tecmz.com/data/image/2023/12/14/57631_o8az_9718.png" referrerpolicy="no-referrer"></p><p style="color:#34495e; margin-left:.5em; margin-right:.5em; text-align:left">文字重复</p><p style="color:#34495e; margin-left:.5em; margin-right:.5em; text-align:left"><img alt="" src="https://mz-assets.tecmz.com/data/image/2023/12/14/57645_1m18_2436.png" referrerpolicy="no-referrer"></p><p style="color:#34495e; margin-left:.5em; margin-right:.5em; text-align:left">图片重复</p><p style="color:#34495e; margin-left:.5em; margin-right:.5em; text-align:left"><img alt="" src="https://mz-assets.tecmz.com/data/image/2023/12/14/57664_dmk5_1991.png" referrerpolicy="no-referrer"></p><p style="color:#34495e; margin-left:.5em; margin-right:.5em; text-align:left">图片透明度设置</p><p style="color:#34495e; margin-left:.5em; margin-right:.5em; text-align:left"><img alt="" src="https://mz-assets.tecmz.com/data/image/2023/12/14/57676_xdni_9735.png" referrerpolicy="no-referrer"></p><h2>模块市场一键安装</h2><p style="color:#34495e; margin-left:.5em; margin-right:.5em; text-align:left">系统内置模块市场，有行业应用、插件、云存储、云短信等功能模块，后台支持一键安装、启用、禁用、卸载，可快速搭建属于自己的系统应用。</p><p style="color:#34495e; margin-left:.5em; margin-right:.5em; text-align:left"><img alt="功能模块" src="https://ms-assets.modstart.com/data/image/2022/04/18/22844_bgyg_5120.jpeg" referrerpolicy="no-referrer"></p><h2>系统演示与文档</h2><ul><li><p style="margin-left:.5em; margin-right:.5em">码云仓库：<a href="https://gitee.com/modstart/ModStartBlog">https://gitee.com/modstart/ModStartBlog</a></p></li><li><p style="margin-left:.5em; margin-right:.5em">Github 仓库：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmodstart%2FModStartBlog" target="_blank">https://github.com/modstart/ModStartBlog</a></p></li><li><p style="margin-left:.5em; margin-right:.5em">系统演示：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.demo.tecmz.com%2F" target="_blank">https://blog.demo.tecmz.com/</a></p></li><li><p style="margin-left:.5em; margin-right:.5em">下载试用：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmodstart.com%2Fdownload" target="_blank">https://modstart.com/download</a></p></li><li><p style="margin-left:.5em; margin-right:.5em">开发者文档：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmodstart.com%2Fdoc" target="_blank">https://modstart.com/doc</a></p></li><li><p style="margin-left:.5em; margin-right:.5em">模块市场：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmodstart.com%2Fstore" target="_blank">https://modstart.com/store</a></p></li></ul><p style="margin-left:.5em; margin-right:.5em">&nbsp;</p><p style="margin-left:.5em; margin-right:.5em"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmodstart.com%2Fcourse_video" target="_blank"><span style="background-color:#ffffff; color:#4d4d4d">ModStart 框架的博客主题开发视频教程上线啦！</span></a></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 21 Dec 2023 08:56:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272046</guid>
            <link>https://www.oschina.net/news/272046</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[🚀 分布式运维监控平台 WGCLOUD v3.5.0 正式发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.wgstart.com" target="_blank">WGCLOUD</a><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.wgstart.com" target="_blank"><span>&nbsp;</span></a>是一款集成度较高的分布式运维监控平台，具有集群监控，易部署、易上手使用、轻量、高效、自动化等特点，server 端基于<span style="background-color:#ffffff; color:#333333"><span>&nbsp;</span>springboot 开发，agent 端使用 go 编写。核心模块包括：<strong>主机系统信息监控，CPU 监控，CPU 温度监控，内存监控，网络流量监控，磁盘 IO 监控，磁盘空间监测，系统负载监控，硬盘 smart 健康检测，应用进程监控，端口监控，docker 监控，日志文件监控，文件防篡改保护，数据可视化监控，自动生成拓扑图、大屏可视化，数通设备监测，服务接口监测，K8S 监测，设备账号管理，web ssh ，指令下发，告警信息（邮件、钉钉、微信等）推送</strong></span>&nbsp;</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="background-color:#ffffff; color:#333333">码云仓库：</span><a href="https://gitee.com/wanghouhou/wgcloud">https://gitee.com/wanghouhou/wgcloud</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">GITHUB 仓库：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ftianshiyeben%2Fwgcloud" target="_blank">https://github.com/tianshiyeben/wgcloud</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">WGCLOUD 唯一官网：<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.wgstart.com" target="_blank">http://www.wgstart.com</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>WGCLOUD 支持监测的操作系统平台</strong></p><blockquote><p style="margin-left:0; margin-right:0"><span style="background-color:#f6f6f6; color:#333333">支持监测 Linux 系列：Debian、RedHat、CentOS、Ubuntu、Fedora、麒麟、统信 (UOS)、龙芯 (mips) 等</span><br><span style="background-color:#f6f6f6; color:#333333">支持监测 Windows 系列：Windows Server 2008 R2，2012，2016，2019，2022，Windows 7，Windows 8，Windows 10，Windows 11</span><br><span style="background-color:#f6f6f6; color:#333333">支持监测 Unix 系列：solaris，FreeBSD，OpenBSD</span><br><span style="background-color:#f6f6f6; color:#333333">支持监测 MacOS 系列：macOS amd64，macOS arm64</span><br><span style="background-color:#f6f6f6; color:#333333">其他支持：ARM，Android（安卓），riscv64，s390x，树莓派等</span></p></blockquote><p><strong>WGCLOUD-v3.5.0 更新说明&nbsp;</strong></p><blockquote><p>1.新增，再次支持添加二级目录访问，就像以前版本那样访问<code>http://[server 主机 IP]:9999/wgcloud</code>，<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.wgstart.com%2Fhelp%2Fdocs139.html" target="_blank">查看配置说明</a>。但是默认访问方式还是不用加/wgcloud 的，依然是<code>http://[server 主机 IP]:9999</code></p><p>2.新增，v5 版大屏，<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2F101.35.223.197%3A9999%2FdapingFive%2Findex%3FdashView%3D1" target="_blank">查看</a></p><p>3.新增，大屏页面支持<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.wgstart.com%2Fhelp%2Fdocs153.html" target="_blank">自定义配置刷新时间</a>，默认还是 10 分钟刷新一次页面</p><p>4.新增，监控主机 MAC 地址</p><p>5.新增，支持监控交换机等 SNMP 设备的接口状态 UP DOWN</p><p>6.修复漏洞，CVE-2023-44487</p><p>7.改造，成员账号在登录状态下，打开大屏页面只会看到自己的监控资源信息，管理员可以看到所有的监控资源信息。如果大屏是开放给游客（不用登录）看的，那么未登录状态的大屏会展示所有的监控资源信息</p><p>8.一些已知的 bug 修复，优化 UI，代码结构优化</p></blockquote><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img src="https://oscimg.oschina.net/oscnet/up-96bae78ebe456c85b9ee7ace95675a37113.jpg" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="2179" src="https://oscimg.oschina.net/oscnet/up-9af58507aec4c3b30d1c632c34839f2da9b.png" width="1890" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img src="https://oscimg.oschina.net/oscnet/up-90010c1635f996318e7fc5fa6aa657e080e.jpg" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">&nbsp;</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">&nbsp;<img src="https://oscimg.oschina.net/oscnet/up-e86b6015c1e66ab0e6497404b0aa6ce3600.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">&nbsp;</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img src="https://oscimg.oschina.net/oscnet/up-8c1e6f02a53d1df5acd342e790a435aac35.jpg" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="up-eb8b552dcc652a42e1a29cfe48dbec15c0d.png" src="https://oscimg.oschina.net/oscnet/up-eb8b552dcc652a42e1a29cfe48dbec15c0d.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">&nbsp;</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="up-d984aefd21d3fda515eee1632eee780d868.png" src="https://oscimg.oschina.net/oscnet/up-d984aefd21d3fda515eee1632eee780d868.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img src="https://oscimg.oschina.net/oscnet/up-b7e2275cc31dae0af63dc8faba03285044f.jpg" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">&nbsp;</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="1800" src="https://oscimg.oschina.net/oscnet/up-a13450856ca7c00c9fa3644d9f7f3cf566c.png" width="1344" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://oscimg.oschina.net/oscnet/up-512dcd1385117b366100db0e73223fd8098.jpg" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" height="857" src="https://oscimg.oschina.net/oscnet/up-8a521055045be6d46a3929c452a9b705f6a.jpg" width="1899" referrerpolicy="no-referrer"><img alt="" height="853" src="https://oscimg.oschina.net/oscnet/up-a445a516d2c5579c83098d77e012e263345.jpg" width="1920" referrerpolicy="no-referrer"></p><p><br><img alt="" height="1080" src="https://oscimg.oschina.net/oscnet/up-df26d8ed17a38dc1fc088150be872d3dba2.jpg" width="1920" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 21 Dec 2023 08:16:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272038/wgcloud-3-5-0-released</guid>
            <link>https://www.oschina.net/news/272038/wgcloud-3-5-0-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[RStudio 2023.12 发布，R 语言的集成开发环境]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff; color:#333333">RStudio 2023.12 现已发布。RStudio 是 R 语言的集成开发环境，分为面向桌面用户 IDE 和 Linux R 服务器版编辑器两种编辑器，采用 AGPL v3 与&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.rstudio.com%2Fabout%2Feula%2F">RStudio License Agreement</a><span style="background-color:#ffffff; color:#333333">&nbsp;双协议授权。该版本的更新内容如下：</span></p><h4 style="text-align:start"><strong>New</strong></h4><p><strong>RStudio</strong></p><ul><li>将 Ace 更新至版本 1.28。(#13708)</li><li>将 Boost 更新至版本 1.83.0。(#13577)</li><li>Electron 更新至版本 26.2.4。(#13577)</li><li>将 GitHub Copilot 代理的默认版本更新为 1.10.3。(#13729)</li><li>在 Mac 和 Windows 上将 openssl 更新到 1.1.1w。(#13683)</li><li>将 Electron Forge 更新至版本 6.4.2，将 Webpack 更新至版本 5.89.0。(rstudio-pro#5383)</li><li>将 Quarto 更新至版本 1.3.450。(#13914)</li><li>RStudio 现在支持在 R Markdown / Quarto 文档中高亮显示内联 YAML 块选项。(#11663)</li><li>RStudio 现在支持通过<code>.AtNames</code>在<code>@</code>之后自动补全。(#13451)</li><li>RStudio 现在支持在 R Markdown / Quarto 块中执行和显示 GraphViz (<code>dot</code>) 图形。(#13187)</li><li>RStudio 现在支持<code>LuaLaTeX</code>编译 Sweave/Rnw 文档。(#13812)</li><li>RStudio 现在支持粘贴复制到剪贴板的文件的文件路径。(#4572)</li><li>RStudio 现在支持 Posit 驱动程序的重复连接名称。(rstudio-pro#5437)</li><li>当通过<code>devtools::load_all()</code>加载软件包时，改进了对开发文档的支持。(#13526)</li><li>当用户首选项因文件夹权限而无法保存时，提供更好的错误信息。(#12974)</li><li>在启用屏幕阅读器支持的情况下，按下 ESC 键可从编辑器中跳转。[辅助功能] (#13593)</li></ul><p><strong><span><span><span><span><span style="color:#404041"><span>Posit Workbench</span></span></span></span></span></span></strong></p><ul><li>从 Session Info 对话框中删除了用于在 RStudio Desktop Pro 中打开会话的链接。(rstudio-pro#5263)</li><li>恢复了 2023.09.1 中移除的数据库密码加密支持&nbsp;(rstudio-pro#5365)</li><li>添加了许可证指南，其中包括开源软件组件以及组件使用的许可协议的完整副本。(#5027)</li><li>添加了对通过 Slurm 的 Singularity 启动作业的支持（launcher#447）</li><li>当 rserver.conf 的 server-access-log=1 时，将 requestTime 添加到 nginx 访问日志中。rserver-http-access.log 的格式已更改，添加了一个请求时间字段，可用于查看 rserver 响应请求所需的时间。警告：如果你有处理日志文件的代码，则需要一个新字段。</li><li>增加了内置 nginx 服务器的最大连接限制，启用了 nginx 错误日志记录，并允许两者进行配置（rstudio-pro#4652、rstudio-pro#4747、rstudio-pro#5452）</li><li>将 Administration Guide section PRO markers&nbsp;替换为 Workbench tags。(#5416)</li><li>改进的管理：Logs tab 允许查看其他服务器日志文件。新的 Server tab 提供实时性能信息和 rserver 日志级别的即时调整 (rstudio-pro#5212)</li></ul><p>详情可<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.posit.co%2Fide%2Fnews%2F%23rstudio-2023.12.0" target="_blank">查看更新说明</a>。</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 21 Dec 2023 06:53:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272022/rstudio-2023-12-released</guid>
            <link>https://www.oschina.net/news/272022/rstudio-2023-12-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Simple Admin Go 语言分布式后台管理系统 v1.2.8 更新]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h2>Simple Admin Go 语言分布式后台管理系统 v1.2.8 更新</h2><h3>项目介绍</h3><p>Simple Admin 是一个开箱即用的分布式微服务后端管理系统，基于 go-zero 开发，为开发中大型后台提供了丰富的功能，支持三端代码生成。 官方自带多种扩展，助力中小企业快速上云，快速迭代。适合用于微服务学习和商用，开源免费。</p><h3>Simple Admin Core / Job / MCMS / FMS / Common v1.2.8 更新</h3><h4>介绍</h4><p>核心模块 Core, 定时任务模块 Job, 消息中心模块 MCMS, 以及文件管理模块 FMS 均已升级至 v1.2.8</p><h4>本次更新</h4><ul><li>新增 (Common): 新增官方 <code>redis</code> 配置，可以使用原生的 <code>go redis v9</code>, 可配置 <code>DB</code></li><li>新增 (Common): <code>captcha</code>, <code>asynq</code> 提供 <code>go zero</code> 封装的 <code>redis</code> 支持和原生 <code>redis</code> 支持，如 <code>MustNewOriginalRedisCaptcha</code>，带有 <code>Original</code> 为原生 redis</li><li>新增 (Common): 新增 <code>redis key</code></li><li>新增 (Common): 新增 i18n 缓存国际化错误信息</li><li>移除 (Common): 暂时移除 <code>ent cache driver</code>, 不使用 <code>entcache</code></li><li>优化 (Core): 切换 <code>redis</code> 为原生 <code>redis</code></li><li>优化 (Core): 缓存前缀改为使用 common 的 <code>redis key</code></li><li>更新： 更新依赖</li></ul><h3>Simple Admin Backend UI v1.2.8 更新</h3><h4>介绍</h4><p>Simple Admin UI 是基于 vue-vben-admin 二次开发的为 Simple Admin 专门开发的后台管理界面，基于 Vue3 和 TypeScript 开发， 提供后台错误统一处理，国际化等功能，本项目完全免费，可用于学习和商用.</p><h4>本次更新</h4><ul><li>新增：<code>API</code> 权限按服务名称分组</li><li>新增：字典表新增名称列</li><li>更新: 更新依赖及系统版本</li></ul><h3>Goctls v1.6.18 更新</h3><h4>介绍</h4><p>Goctls 是一个基于 Go Zero 官方生成工具 Goctl 开发的针对 Simple Admin 适配优化的生成工具。提供强大的代码生成功能，同时集成了许多定制工具，实现快速开发微服务接入后台和前台​。三端代码生成可以大大提升开发效率，欢迎体验​。</p><h4>特性</h4><ul><li>go-swagger : 基于 go-swagger 而不是官方的@doc 注解</li><li>多国语言支持</li><li>优化错误信息处理,支持多语言错误</li><li>简单易用的校验器</li><li>支持代码生成，生成 API,RPC 和 web 端的 CRUD 代码</li><li>支持多种额外插件如 GORM, RocketMQ</li><li>对 Simple Admin 的针对性优化</li><li>rpc logic group 分组</li><li>全面支持 Ent 代码生成</li><li>额外工具如本地日志查看，环境变量查看</li></ul><h4>本次更新</h4><ul><li>新增 (ent)： 新增 <code>ent</code> 缓存模板，支持任意唯一键缓存</li><li>新增 (gen)： <code>i18n</code> 缓存错误翻译</li><li>优化 (gen): 默认使用原生 <code>redis</code></li><li>更新： 版本依赖信息</li></ul><h3>更新预览</h3><blockquote><p>新增 API 权限控制按服务分组</p></blockquote><p>&nbsp;</p><p><img height="730" src="https://oscimg.oschina.net/oscnet/up-42464851f09baaa3e3f68b5501ce00be90b.jpg" width="1525" referrerpolicy="no-referrer"></p><blockquote><p>新增缓存模板，支持数据库唯一键缓存</p></blockquote><p>&nbsp;<img height="62" src="https://oscimg.oschina.net/oscnet/up-bc14f591d3e236fa5df02fb838f06d61c07.png" width="737" referrerpolicy="no-referrer"></p><blockquote><p>新增原生 go-redis 配置，可配置 Db</p></blockquote><p>&nbsp;<img height="213" src="https://oscimg.oschina.net/oscnet/up-d104bdf9382053b90306e4d51ea91d23fc9.jpg" width="479" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 21 Dec 2023 06:21:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272015</guid>
            <link>https://www.oschina.net/news/272015</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[PuTTY 0.80 发布，修复 Terrapin 漏洞]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000"><span style="background-color:#ffffff">PuTTY 0.80 现已发布。PuTTY 是一款集成虚拟终端、系统控制枱和网络文件传输为一体的自由开源程序。它支持多种网络协议，包括&nbsp;SCP，SSH，Telnet，rlogin 和原始的套接字连接，它也可以连接到串行端口。其软件名字 「PuTTY」 并没有特殊含义。</span></span></p><p><span style="color:#000000"><span style="background-color:#ffffff">0.80 版本包含了对某些 SSH 协议扩展中 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fterrapin-attack.com%2F" target="_blank">Terrapin</a> 漏洞（又名 CVE-2023-48795）的修复。该问题还需要在服务器中打补丁。</span></span></p><p><span style="color:#000000"><strong><span style="background-color:#ffffff"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.chiark.greenend.org.uk%2F%7Esgtatham%2Fputty%2Flatest.html" target="_blank">下载地址</a> | <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.chiark.greenend.org.uk%2F%7Esgtatham%2Fputty%2F" target="_blank">发布公告</a></span></strong></span></p><p><span style="color:#000000"><span style="background-color:#ffffff">Terrapin 是一种针对 SSH 协议的前缀截断攻击。更确切地说，Terrapin 破坏了 SSH 安全通道的完整性。通过在 handshake 过程中仔细调整序列号，攻击者可以在安全通道开始时删除客户端或服务器发送的任意数量的信息，而客户端或服务器却不会察觉。</span></span></p><p><img height="233" src="https://oscimg.oschina.net/oscnet/up-81e37599f65f6bde439d35e0bc805580ed1.png" width="300" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 21 Dec 2023 04:09:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272004/putty-0-80-released</guid>
            <link>https://www.oschina.net/news/272004/putty-0-80-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Golang 通用代码生成器仙童发布 2.4.0 电音仙女尝鲜版一及其介绍视频]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><strong>Golang 通用代码生成器仙童发布 2.4.0 电音仙女尝鲜版一及其介绍视频</strong></p><p>Golang 通用代码生成器仙童已发布 2.4.0 电音仙女尝鲜版一及其介绍视频。视频请见：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1nu4y1K7sz%2F" target="_blank">https://www.bilibili.com/video/BV1nu4y1K7sz/</a></p><p>电音仙女版本支持日期和日期时间。支持三大部分生成功能群。支持枚举。支持哑数据模式。支持用户管理自己的资料和密码。技术状态和最新版的 Rust 通用代码生成器红莲的技术状态一致。非常便利大家的使用。</p><p><span style="background-color:#ffffff; color:#333333">代码生成器项目地址：</span><a href="https://gitee.com/jerryshensjf/Fairchild">https://gitee.com/jerryshensjf/Fairchild</a><br><span style="background-color:#ffffff; color:#333333">二进制发布包下载地址：</span><a href="https://gitee.com/jerryshensjf/Fairchild/attach_files">https://gitee.com/jerryshensjf/Fairchild/attach_files</a></p><h1>Go 语言通用代码生成器：仙童</h1><h3>简介</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Go 语言通用代码生成器：仙童</p><h3>百度话题</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">#通用代码生成器#</p><h3>版本更新</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Golang 通用代码生成器仙童已发布 2.4.0 电音仙女（TechnoFairy）尝鲜版一，支持日期和日期时间。支持三大部分生成功能群。支持枚举。支持哑数据模式。支持用户管理自己的资料和密码。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Go 语言通用代码生成器仙童 Beta 7 版。完善支持 Oracle 数据库，并有错误修正。可以从源码编译生成构建。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Go 语言通用代码生成器仙童 Beta6 版，发布最新介绍视频，支持从源码构建代码生成器。您只需下载源码，即可以 mvn install 编译构建 Go 语言通用代码生成器仙童。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Go 语言通用代码生成器：仙童 Beta5 版。彻底修复弹性登录模块，修复了注册，修改密码，管理员新增用户时使用过时加密算法问题。更多测试。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Go 语言通用代码生成器：仙童 Beta3 版。修复几处错误。包括登录权限问题和图形报表 UI 的语言问题。更多测试。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">GO 语言通用代码生成器仙童已发布 Beta2 版，支持 Rust 语言兼容性，即可以使用 Rust 通用代码生成器莲花的 SGS2 模板直接生成 Go 语言代码生成物。同时支持 Java 语言兼容性。即支持 Java 通用代码生成器的模板直接生成 Go 语言代码生成物。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">仙童 Beta 版，此版本修复了 Excelize 组件 API 变化引起的编译错误，另有文档更新和更多检查。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">仙童尝鲜版十二。支持 PDF 格式数据导出。在尝鲜版十一基础上有增强和修错。流畅支持模板向导代码生成。支持三大变形功能群，支持四种数据库。已完成所有功能规划，下一个版本即可进入 Beta 阶段。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版十一。在尝鲜版十基础上有增强和修错，并支持数据库表与字段的中文注释和兼容所有 java 通用代码生成器的 SGS2 模板，直接生成 go 语言后端和 Vue 前端，并自动格式化 java 语言 SGS2 模板至 go 语言模板。支持三大变形功能群，支持四种数据库，支持 Excel 数据导出。支持图形报表和复杂版面，支持弹性登录模块。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版十是第一个稳定版本。功能基本完备，所有示例通过检测，初步完整测试。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版九在尝鲜版八基础上有功能增强和缺陷修复。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版八初步支持 SimpleAuth 弹性登录界面。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版 7 是一个错误修复版本。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版 5 支持前端和后端的复杂版面和图形报表功能</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版 4 支持 Vue 和 ElementUI 的基于 Node.js 的独立前端。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版 3 进行了广泛的测试和修错。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版２新增对 Oracle 数据库的支持。</p><h3>架构</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">基于 Java 通用代码生成器：光的架构。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">生成的代码基于 go 语言，使用 gin 作为 web 框架。目前支持 MariaDB,MySQL,PostgreSQL 和 Oracle 四种数据库。支持生成 Vue 和 ElementUI 的基于 Node.js 的独立前端。支持 Excel,PDF 两种数据导出格式。</p><h3>开发测试环境</h3><ul><li>jdk 17</li><li>Apache Tomcat 9</li><li>Node.js 14</li><li>golang 1.19</li><li>MariaDB 15.1</li><li>MySQL 8</li><li>PostgreSQL 14</li><li>Oracle 11</li></ul><h3>B 站介绍视频</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Golang 通用代码生成器仙童 2.4.0 电音仙女尝鲜版一介绍视频请见：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1nu4y1K7sz%2F">https://www.bilibili.com/video/BV1nu4y1K7sz/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Go 语言通用代码生成器仙童已发布 Beta7 版视频,请见：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1uM4y1774F%2F">https://www.bilibili.com/video/BV1uM4y1774F/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Go 语言通用代码生成器仙童 Beta6 版视频,请见：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1Jg4y1473X%2F">https://www.bilibili.com/video/BV1Jg4y1473X/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">​Go 语言通用代码生成器仙童已发布 Beta5 版，发布最新介绍视频，彻底修复弹性登录模块。修复了注册，修改密码，管理员新增用户时使用过时加密算法问题。更多测试。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">视频请见：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1xg4y1E7FA%2F">https://www.bilibili.com/video/BV1xg4y1E7FA/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">​Beta3 版，请见：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1g84y1n73B%2F">https://www.bilibili.com/video/BV1g84y1n73B/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Beta 版两个视频的合集，请见：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV13D4y1G7L4%2F">https://www.bilibili.com/video/BV13D4y1G7L4/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Beta2 版：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV13M411A7nH%2F">https://www.bilibili.com/video/BV13M411A7nH/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Beta 版：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV19j411T7wx%2F">https://www.bilibili.com/video/BV19j411T7wx/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版十二：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV14K411i7DM%2F">https://www.bilibili.com/video/BV14K411i7DM/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版十一：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1ce411P7qU%2F">https://www.bilibili.com/video/BV1ce411P7qU/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版九：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1a5411R7Zt%2F">https://www.bilibili.com/video/BV1a5411R7Zt/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1pR4y1w7aB%2F">https://www.bilibili.com/video/BV1pR4y1w7aB/</a></p><h3>项目图片</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="Image description" src="https://images.gitee.com/uploads/images/2021/1104/210826_16fb1ca2_1203742.jpeg" referrerpolicy="no-referrer"></p><h3>最新大版本号</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">正在研发的最新大版本号是仙童 2.4.0 电音仙女　TechnoFairy 短名 TF。对标 java 通用代码生成器光 2.4.0 电音之王和 Rust 通用代码生成器红莲。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="输入图片说明" src="https://gitee.com/jerryshensjf/Fairchild/raw/master/tf2.jpg" referrerpolicy="no-referrer"></p><h3>百度话题</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">＃通用代码生成器＃</p><h3>代码生成器截图</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">代码生成器正在研发中，Beta7 版已发布，这是一个稳定版本。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="Image description" src="https://images.gitee.com/uploads/images/2021/1112/202857_c7a40dc0_1203742.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="Image description" src="https://images.gitee.com/uploads/images/2021/1112/202911_c2b9a341_1203742.png" referrerpolicy="no-referrer"></p><h3>电音仙女尝鲜版一下载</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">下载地址：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/jerryshensjf/Fairchild/attach_files">https://gitee.com/jerryshensjf/Fairchild/attach_files</a></p><h3>仙童的安装运行</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">仙童是使用 Java 语言写成的代码生成器。运行仙童您需要装好 Java8 和安装好 Tomcat9 或 8.5 应用服务器。并把仙童的 war 包部署在 Tomcat 的 webapps 目录下。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">代码生成物的运行还需要安装好 Go 语言开发环境，您要使用 go mod 管理依赖，并把代码生成物解压在 go 语言工作空间的 src 文件夹的一级子目录下。还需要对应的数据库服务器运行代码生成物的建库 sql 脚本。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">前端代码生成物的运行需要装好 node.js 运行环境并安装 js 依赖库。</p><h3>Vue 独立前端截图</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="输入图片说明" src="https://gitee.com/jerryshensjf/Fairchild/raw/master/Fc_login.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="输入图片说明" src="https://gitee.com/jerryshensjf/Fairchild/raw/master/fc_list.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="输入图片说明" src="https://gitee.com/jerryshensjf/Fairchild/raw/master/fc_img.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="输入图片说明" src="https://gitee.com/jerryshensjf/Fairchild/raw/master/fc_mtm2.png" referrerpolicy="no-referrer"></p><h3>代码生成物截图</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="Image description" src="https://images.gitee.com/uploads/images/2021/1122/151921_f4271962_1203742.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="Image description" src="https://images.gitee.com/uploads/images/2021/1122/151935_cf6c7223_1203742.png" referrerpolicy="no-referrer"></p><h3>源码编译用户指南</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">通用代码生成器已经支持自己编译源码，我已把原来缺的前端代码生成器的 jar 包上传。支持大家自行编译源码。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">需要注意的是，现在我的开发平台是 Fedora 37 上的 openjdk 17。所以大家编译源码最好使用 openjdk17。编译好的 war 包运行在 apache tomcat 9.0 上。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">已有 jdk8 的用户报告默认下载的代码生成器 war 包在他的平台上无法运行。您如果遇到类似问题请报告。我的电子邮件是：<a href="https://www.oschina.net/action/GoToLink?url=mailto%3Ajerry_shen_sjf%40qq.com" target="_blank">jerry_shen_sjf@qq.com</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">附 openjdk 17 下载地址：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fjdk.java.net%2Fjava-se-ri%2F17">https://jdk.java.net/java-se-ri/17</a></p><h3>使用前端功能的注意事项</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">由于图片文件比较大，原来前端使用 cnpm instll 安装类型，npm run dev 运行有所改动，改为先使用 npm install --registry=<a href="https://gitee.com/link?target=https%3A%2F%2Fregistry.npm.taobao.org%25E5%25AE%2589%25E8%25A3%2585%25E7%25B1%25BB%25E5%25BA%2593%25EF%25BC%258C%25E5%2587%25BA%25E9%2594%2599%25E5%2590%258E%25E4%25BD%25BF%25E7%2594%25A8cnpm">https://registry.npm.taobao.org 安装类库，出错后使用 cnpm</a><span>&nbsp;</span>install 安装类库， 使用 node --max-http-header-size=1000000 ./node_modules/.bin/webpack-dev-server --inline --progress --config build/webpack.dev.conf.js　 运行系统。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">您也可以从安装好的本系列代码生成器的前端项目中拷贝 node_modules 目录，即可运行前端。</p><h4>node-sass 不兼容的解决办法</h4><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">办法一：</p><div><div><pre><span>npm uninstall node-sass</span><span>npm install sass-loader</span><span>npm i node-sass --sass_binary_site=https://npm.taobao.org/mirrors/node-sass/</span></pre><div>
   &nbsp;
  </div></div></div><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">办法二：</p><div><div><pre><span>npm uninstall sass-loader node-sass //卸载</span><span>npm install sass-loader@7.3.1 node-sass@4.14.1 --save-dev //安装对应的版本</span></pre><div>
   &nbsp;
  </div></div></div><h3>动词算子式代码生成器的应用场景</h3><ol><li>快速原型：项目或演示场景使用。可以生成具有关系型数据库后端，使用 MyBatis 的数据库后端和 Vue 和 ElementUI 前端。</li><li>项目前期：如果项目和动词算子式代码生成器兼容，可以使用动词算子式代码生成器执行项目前期的自动化生成。</li></ol><h3>源码研读者注意事项</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">无垠式代码生成器第一个完整版本源码，有兴趣可以抄写一下：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/jerryshensjf/InfinityGPGenerator_0_6_5">https://gitee.com/jerryshensjf/InfinityGPGenerator_0_6_5</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">相关技术视频：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1fX4y1u7Bn%2F">https://www.bilibili.com/video/BV1fX4y1u7Bn/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1rv41187qY%2F">https://www.bilibili.com/video/BV1rv41187qY/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1xv41187cA%2F">https://www.bilibili.com/video/BV1xv41187cA/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1t64y1v7WA%2F">https://www.bilibili.com/video/BV1t64y1v7WA/</a></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 21 Dec 2023 03:41:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272000</guid>
            <link>https://www.oschina.net/news/272000</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[QEMU 8.2 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.qemu.org%2F2023%2F12%2F20%2Fqemu-8-2-0%2F" target="_blank">QEMU 8.2.0 </a>版本现已推出，此版本包含来自 238 位作者的 3200 多项 <span style="background-color:#ffffff">commit</span>。</span></p><p><span style="color:#000000">一些更新<span style="background-color:#ffffff">亮点包括：</span></span></p><ul><li><span style="color:#000000">新的 virtio-sound 设备模拟</span></li><li><span style="color:#000000">Android 模拟器使用新的 virtio-gpu rutabaga 设备模拟</span></li><li><span style="color:#000000">新增用于 Hyper-V guests 的动态内存协议设备 hv-balloon</span></li><li><span style="color:#000000">新的通用闪存设备模拟</span></li><li><span style="color:#000000">网络块设备 (NBD) 64 位偏移可提高性能</span></li><li><span style="color:#000000">dump-guest-memory 现在支持标准 kdump 格式</span></li><li><span style="color:#000000">ARM：对 cortex-a710 和 neoverse-n2 的 CPU 仿真支持</span></li><li><span style="color:#000000">ARM：对 PACQARMA3、EPAC、Pauth2、FPAC、FPACCOMBINE、TIDCP1、MOPS、HBC 和 HPMN0 的架构功能支持</span></li><li><span style="color:#000000">HPPA：64 位 PA-RISC 2.0 的 CPU 仿真支持</span></li><li><span style="color:#000000">HPPA：C3700 的机器仿真支持，包括 Astro 内存控制器和四个 Elroy PCI&nbsp;bridges</span></li><li><span style="color:#000000">LoongArch：ISA 对 LASX 扩展和 PRELDX 指令的支持</span></li><li><span style="color:#000000">LoongArch：对 la132 的 CPU emulation 支持</span></li><li><span style="color:#000000">RISC-V：通过 KVM 和矢量加密指令支持 AIA 虚拟化的 ISA/扩展支持</span></li><li><span style="color:#000000">RISC-V：大量扩展/指令清理、修复和重做</span></li><li><span style="color:#000000">s390x：支持加密适配器的 vfio-ap passthrough，以保护受保护的虚拟化&nbsp;guests</span></li><li><span style="color:#000000">Tricore：支持实现 ISA v1.6.2 的 TC37x CPU</span></li><li><span style="color:#000000">Tricore：支持 CRCN、FTOU、FTOHP 和 HPTOF 指令</span></li><li><span style="color:#000000">x86：对 PV 控制枱和网络设备的 Zen 支持</span></li></ul><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.qemu.org%2Fdownload%2F%23source" target="_blank">下载地址</a><span style="background-color:#ffffff; color:#333333">&nbsp;|<span>&nbsp;</span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwiki.qemu.org%2FChangeLog%2F8.2" target="_blank">Changelog</a></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 21 Dec 2023 02:06:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271972/qemu-8-2-released</guid>
            <link>https://www.oschina.net/news/271972/qemu-8-2-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[🎉 领域模型即服务 | 事件补偿控制枱 | Wow 2.11.0 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow:基于 DDD、EventSourcing 的现代响应式 CQRS 架构微服务开发框架" src="https://static.oschina.net/uploads/img/202312/13135012_Zb9v.svg" width="150" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>基于 DDD、EventSourcing 的现代响应式 CQRS 架构微服务开发框架</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FAhoo-Wang%2FWow%2Fblob%2Fmvp%2FLICENSE"><img alt="License" src="https://img.shields.io/badge/license-Apache%202-4EB1BA.svg" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FAhoo-Wang%2FWow%2Freleases"><img alt="GitHub release" src="https://img.shields.io/github/release/Ahoo-Wang/Wow.svg" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fapp.codacy.com%2Fgh%2FAhoo-Wang%2FWow%2Fdashboard%3Futm_source%3Dgh%26utm_medium%3Dreferral%26utm_content%3D%26utm_campaign%3DBadge_grade"><img alt="Codacy Badge" src="https://app.codacy.com/project/badge/Grade/cfc724df22db4f9387525258c8a59609" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fcodecov.io%2Fgh%2FAhoo-Wang%2FWow"><img alt="codecov" src="https://codecov.io/gh/Ahoo-Wang/Wow/branch/main/graph/badge.svg?token=uloJrLoQir" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FAhoo-Wang%2FWow"><img alt="Integration Test Status" src="https://github.com/Ahoo-Wang/Wow/actions/workflows/integration-test.yml/badge.svg" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FKotlinBy%2Fawesome-kotlin"><img alt="Awesome Kotlin Badge" src="https://kotlin.link/awesome-kotlin.svg" referrerpolicy="no-referrer"></a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><strong>领域驱动&nbsp;</strong><span>&nbsp;</span>|&nbsp;<span>&nbsp;</span><strong>事件驱动</strong><span>&nbsp;&nbsp;</span>|<span>&nbsp;&nbsp;</span><strong>测试驱动</strong><span>&nbsp;&nbsp;</span>|<span>&nbsp;&nbsp;</span><strong>声明式设计</strong><span>&nbsp;</span>｜<span>&nbsp;</span><strong>响应式编程</strong><span>&nbsp;</span>｜<span>&nbsp;</span><strong>命令查询职责分离</strong><span>&nbsp;</span>｜<span>&nbsp;</span><strong>事件溯源</strong></p><h2>更新内容</h2><blockquote><p style="margin-left:0; margin-right:0">新增<span>&nbsp;</span><strong>事件补偿控制枱</strong><span>&nbsp;</span>🎉🎉，提升事件补偿处理效率！！！</p></blockquote><ul><li>特性: 新增强制执行重试命令 (<code>ForcePrepareCompensation</code>)API</li><li>依赖: 升级<span>&nbsp;</span><code>io.swagger.core.v3:swagger-core-jakarta</code><span>&nbsp;</span><code>v2.2.20</code></li><li>依赖: 升级<span>&nbsp;</span><code>com.google.guava:guava</code><span>&nbsp;</span><code>v33</code></li></ul><p><strong>事件补偿控制枱</strong></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:start"><img alt="事件补偿控制枱" src="https://foruda.gitee.com/images/1703062607825591272/eca6da71_384561.png" referrerpolicy="no-referrer"><br><img alt="事件补偿控制枱-查看异常" src="https://foruda.gitee.com/images/1703062616531236647/a123237a_384561.png" referrerpolicy="no-referrer"></p><p><strong>事件补偿用例图</strong></p><p style="color:#40485b; margin-left:0em; margin-right:0em; text-align:start"><img alt="事件补偿用例图" src="https://foruda.gitee.com/images/1703062683334124661/7cc0cb95_384561.png" referrerpolicy="no-referrer"></p><h2>快速开始</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">使用<span>&nbsp;</span><a href="https://gitee.com/AhooWang/wow-project-template">Wow 项目模板</a>快速创建基于 Wow 框架的 DDD 项目。</p><h2>特性概览</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-Features" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Features.png" referrerpolicy="no-referrer"></p><h2>架构图</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-Architecture" src="https://static.oschina.net/uploads/img/202312/13135013_Lcug.svg" referrerpolicy="no-referrer"></p><h2>性能测试 (Example)</h2><ul><li>测试代码：<a href="https://gitee.com/AhooWang/Wow/blob/main/example">Example</a></li><li>测试场景：加入购物车、下单</li><li>命令发送等待模式（<code>WaitStrategy</code>）：<code>SENT</code>、<code>PROCESSED</code></li></ul><h3>部署</h3><ul><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/perf/redis.yaml">Redis</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/perf/mongo.yaml">MongoDB</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/perf/kafka.yaml">Kafka</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/perf/config/mongo_kafka_redis.yaml">Application-Config</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/perf/deployment.yaml">Application-Deployment</a></li></ul><h3>测试报告</h3><h4>加入购物车</h4><ul><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/request/AddCartItem.http">请求</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/document/example/perf/Example.Cart.Add@SENT.pdf">详细报告 (PDF)-SENT</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/document/example/perf/Example.Cart.Add@PROCESSED.pdf">详细报告 (PDF)-PROCESSED</a></li></ul><blockquote><p style="margin-left:0; margin-right:0">命令等待策略（<code>WaitStrategy</code>）为<span>&nbsp;</span><code>SENT</code><span>&nbsp;</span>模式，加入购物车命令（<code>AddCartItem</code>）写请求 API 经过 2 分钟的压测，平均 TPS 为<span>&nbsp;</span><em>59625</em>，峰值为<span>&nbsp;</span><em>82312</em>，平均响应时间为<span>&nbsp;</span><em>29</em><span>&nbsp;</span>毫秒。</p></blockquote><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="AddCartItem-SENT" src="https://gitee.com/AhooWang/Wow/raw/main/document/example/perf/Example.Cart.Add@SENT.png" referrerpolicy="no-referrer"></p><blockquote><p style="margin-left:0; margin-right:0">命令等待策略（<code>WaitStrategy</code>）为<span>&nbsp;</span><code>PROCESSED</code><span>&nbsp;</span>模式，加入购物车命令（<code>AddCartItem</code>）写请求 API 经过 2 分钟的压测，平均 TPS 为<span>&nbsp;</span><em>18696</em>，峰值为<span>&nbsp;</span><em>24141</em>，平均响应时间为<span>&nbsp;</span><em>239</em><span>&nbsp;</span>毫秒。</p></blockquote><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="AddCartItem-PROCESSED" src="https://gitee.com/AhooWang/Wow/raw/main/document/example/perf/Example.Cart.Add@PROCESSED.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">&nbsp;</p><h4>下单</h4><ul><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/request/CreateOrder.http">请求</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/document/example/perf/Example.Order.Create@SENT.pdf">详细报告 (PDF)-SENT</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/document/example/perf/Example.Order.Create@PROCESSED.pdf">详细报告 (PDF)-PROCESSED</a></li></ul><blockquote><p style="margin-left:0; margin-right:0">命令等待策略（<code>WaitStrategy</code>）为<span>&nbsp;</span><code>SENT</code><span>&nbsp;</span>模式，下单命令（<code>CreateOrder</code>）写请求 API 经过 2 分钟的压测，平均 TPS 为<span>&nbsp;</span><em>47838</em>，峰值为<span>&nbsp;</span><em>86200</em>，平均响应时间为<span>&nbsp;</span><em>217</em><span>&nbsp;</span>毫秒。</p></blockquote><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="CreateOrder-SENT" src="https://gitee.com/AhooWang/Wow/raw/main/document/example/perf/Example.Order.Create@SENT.png" referrerpolicy="no-referrer"></p><blockquote><p style="margin-left:0; margin-right:0">命令等待策略（<code>WaitStrategy</code>）为<span>&nbsp;</span><code>PROCESSED</code><span>&nbsp;</span>模式，下单命令（<code>CreateOrder</code>）写请求 API 经过 2 分钟的压测，平均 TPS 为<span>&nbsp;</span><em>18230</em>，峰值为<span>&nbsp;</span><em>25506</em>，平均响应时间为<span>&nbsp;</span><em>268</em><span>&nbsp;</span>毫秒。</p></blockquote><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="CreateOrder-PROCESSED" src="https://gitee.com/AhooWang/Wow/raw/main/document/example/perf/Example.Order.Create@PROCESSED.png" referrerpolicy="no-referrer"></p><h2>事件源</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-EventSourcing" src="https://static.oschina.net/uploads/img/202312/13135014_lJcu.svg" referrerpolicy="no-referrer"></p><h2>可观测性</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-Observability" src="https://static.oschina.net/uploads/img/202312/13135014_YAFd.png" referrerpolicy="no-referrer"></p><h2>OpenAPI (Spring WebFlux 集成)</h2><blockquote><p style="margin-left:0; margin-right:0">自动注册<span>&nbsp;</span><strong>命令</strong><span>&nbsp;</span>路由处理函数 (<code>HandlerFunction</code>) ，开发人员仅需编写领域模型，即可完成服务开发。</p></blockquote><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-Spring-WebFlux-Integration" src="https://static.oschina.net/uploads/img/202312/13135014_lVJm.png" referrerpolicy="no-referrer"></p><h2>测试套件：80%+ 的测试覆盖率轻而易举</h2><blockquote><p style="margin-left:0; margin-right:0">Given -&gt; When -&gt; Expect .</p></blockquote><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-CI-Flow" src="https://static.oschina.net/uploads/img/202312/13135014_vlP2.png" referrerpolicy="no-referrer"></p><h2>前置条件</h2><ul><li>理解<span>&nbsp;</span><strong>领域驱动设计</strong>：《实现领域驱动设计》、《领域驱动设计：软件核心复杂性应对之道》</li><li>理解<span>&nbsp;</span><strong>命令查询职责分离</strong>（CQRS）</li><li>理解<span>&nbsp;</span><strong>事件源架构</strong></li><li>理解<span>&nbsp;</span><strong>响应式编程</strong></li></ul><h2>Example</h2><h3>订单服务（Kotlin）</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/AhooWang/Wow/blob/main/example">Example-Order</a></p><h3>银行转账（JAVA）</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/AhooWang/Wow/blob/main/example/transfer">Example-Transfer</a></p><h2>单元测试套件</h2><h3>80%+ 的测试覆盖率轻而易举。</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Test Coverage" src="https://static.oschina.net/uploads/img/202312/13135014_MHRR.png" referrerpolicy="no-referrer"></p><blockquote><p style="margin-left:0; margin-right:0">Given -&gt; When -&gt; Expect .</p></blockquote><h3>Aggregate Unit Test (<code>AggregateVerifier</code>)</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/AhooWang/Wow/blob/main/example/example-domain/src/test/kotlin/me/ahoo/wow/example/domain/order/OrderTest.kt">Aggregate Test</a></p><pre><code><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">internal</span></span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">class</span></span></span></span></span><span><span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">OrderTest</span></span></span></span></span><span><span></span></span></span>{

    <span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">@Test</span></span></span><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">private</span></span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span></span></span><span><span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">createOrder</span></span></span></span></span><span><span><span><span><span>()</span></span></span></span></span></span> {
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span> tenantId = GlobalIdGenerator.generateAsString()
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span> customerId = GlobalIdGenerator.generateAsString()

        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span> orderItem = OrderItem(
            GlobalIdGenerator.generateAsString(),
            GlobalIdGenerator.generateAsString(),
            BigDecimal.valueOf(<span><span><span>10</span></span></span>),
            <span><span><span>10</span></span></span>,
        )
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span> orderItems = listOf(orderItem)
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span> inventoryService = <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">object</span></span></span> : InventoryService {
            <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">override</span></span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span></span></span><span><span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">getInventory</span></span></span></span></span><span><span><span><span><span>(productId: </span></span></span></span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49">String</span></span></span></span></span></span></span><span><span><span><span>)</span></span></span></span></span></span>: Mono&lt;<span><span><span>Int</span></span></span>&gt; {
                <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">return</span></span></span> orderItems.filter { it.productId == productId }.map { it.quantity }.first().toMono()
            }
        }
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span> pricingService = <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">object</span></span></span> : PricingService {
            <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">override</span></span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span></span></span><span><span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">getProductPrice</span></span></span></span></span><span><span><span><span><span>(productId: </span></span></span></span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49">String</span></span></span></span></span></span></span><span><span><span><span>)</span></span></span></span></span></span>: Mono&lt;BigDecimal&gt; {
                <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">return</span></span></span> orderItems.filter { it.productId == productId }.map { it.price }.first().toMono()
            }
        }
        aggregateVerifier&lt;Order, OrderState&gt;(tenantId = tenantId)
            .inject(DefaultCreateOrderSpec(inventoryService, pricingService))
            .given()
            .`<span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">when</span></span></span>`(CreateOrder(customerId, orderItems, SHIPPING_ADDRESS, <span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5">false</span></span></span>))
            .expectEventCount(<span><span><span>1</span></span></span>)
            .expectEventType(OrderCreated::<span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">class</span></span></span></span></span><span><span>.</span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">java</span></span></span></span></span><span><span>)</span></span></span>
            .expectStateAggregate {
                assertThat(it.aggregateId.tenantId, equalTo(tenantId))
            }
            .expectState {
                assertThat(it.id, notNullValue())
                assertThat(it.customerId, equalTo(customerId))
                assertThat(it.address, equalTo(SHIPPING_ADDRESS))
                assertThat(it.items, equalTo(orderItems))
                assertThat(it.status, equalTo(OrderStatus.CREATED))
            }
            .verify()
    }

    <span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">@Test</span></span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span></span></span><span><span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">createOrderGivenEmptyItems</span></span></span></span></span><span><span><span><span><span>()</span></span></span></span></span></span> {
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span> customerId = GlobalIdGenerator.generateAsString()
        aggregateVerifier&lt;Order, OrderState&gt;()
            .inject(mockk&lt;CreateOrderSpec&gt;(), <span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62">"createOrderSpec"</span></span></span>)
            .given()
            .`<span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">when</span></span></span>`(CreateOrder(customerId, listOf(), SHIPPING_ADDRESS, <span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5">false</span></span></span>))
            .expectErrorType(IllegalArgumentException::<span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">class</span></span></span></span></span><span><span>.</span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">java</span></span></span></span></span><span><span>)</span></span></span>
            .expectStateAggregate {
                <span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">/*
                 * 该聚合对象处于未初始化状态，即该聚合未创建成功.
                 */</span></span></span>
                assertThat(it.initialized, equalTo(<span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5">false</span></span></span>))
            }.verify()
    }

    <span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">/**
     * 创建订单-库存不足
     */</span></span></span><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">@Test</span></span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span></span></span><span><span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">createOrderWhenInventoryShortage</span></span></span></span></span><span><span><span><span><span>()</span></span></span></span></span></span> {
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span> customerId = GlobalIdGenerator.generateAsString()
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span> orderItem = OrderItem(
            GlobalIdGenerator.generateAsString(),
            GlobalIdGenerator.generateAsString(),
            BigDecimal.valueOf(<span><span><span>10</span></span></span>),
            <span><span><span>10</span></span></span>,
        )
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span> orderItems = listOf(orderItem)
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span> inventoryService = <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">object</span></span></span> : InventoryService {
            <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">override</span></span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span></span></span><span><span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">getInventory</span></span></span></span></span><span><span><span><span><span>(productId: </span></span></span></span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49">String</span></span></span></span></span></span></span><span><span><span><span>)</span></span></span></span></span></span>: Mono&lt;<span><span><span>Int</span></span></span>&gt; {
                <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">return</span></span></span> orderItems.filter { it.productId == productId }
                    <span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">/*
                     * 模拟库存不足
                     */</span></span></span>
                    .map { it.quantity - <span><span><span>1</span></span></span> }.first().toMono()
            }
        }
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span> pricingService = <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">object</span></span></span> : PricingService {
            <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">override</span></span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span></span></span><span><span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">getProductPrice</span></span></span></span></span><span><span><span><span><span>(productId: </span></span></span></span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49">String</span></span></span></span></span></span></span><span><span><span><span>)</span></span></span></span></span></span>: Mono&lt;BigDecimal&gt; {
                <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">return</span></span></span> orderItems.filter { it.productId == productId }.map { it.price }.first().toMono()
            }
        }

        aggregateVerifier&lt;Order, OrderState&gt;()
            .inject(DefaultCreateOrderSpec(inventoryService, pricingService))
            .given()
            .`<span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">when</span></span></span>`(CreateOrder(customerId, orderItems, SHIPPING_ADDRESS, <span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5">false</span></span></span>))
            <span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">/*
             * 期望：库存不足异常.
             */</span></span></span>
            .expectErrorType(InventoryShortageException::<span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">class</span></span></span></span></span><span><span>.</span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">java</span></span></span></span></span><span><span>)</span></span></span>
            .expectStateAggregate {
                <span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">/*
                 * 该聚合对象处于未初始化状态，即该聚合未创建成功.
                 */</span></span></span>
                assertThat(it.initialized, equalTo(<span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5">false</span></span></span>))
            }.verify()
    }
}</code></pre><h3>Saga Unit Test (<code>SagaVerifier</code>)</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/AhooWang/Wow/blob/main/example/example-domain/src/test/kotlin/me/ahoo/wow/example/domain/cart/CartSagaTest.kt">Saga Test</a></p><pre><code><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">class</span></span></span></span></span><span><span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">CartSagaTest</span></span></span></span></span><span><span></span></span></span>{

    <span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">@Test</span></span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span></span></span><span><span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">onOrderCreated</span></span></span></span></span><span><span><span><span><span>()</span></span></span></span></span></span> {
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span> orderItem = OrderItem(
            GlobalIdGenerator.generateAsString(),
            GlobalIdGenerator.generateAsString(),
            BigDecimal.valueOf(<span><span><span>10</span></span></span>),
            <span><span><span>10</span></span></span>,
        )
        sagaVerifier&lt;CartSaga&gt;()
            .`<span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">when</span></span></span>`(
                mockk&lt;OrderCreated&gt; {
                    every {
                        customerId
                    } returns <span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62">"customerId"</span></span></span>
                    every {
                        items
                    } returns listOf(orderItem)
                    every {
                        fromCart
                    } returns <span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5">true</span></span></span>
                },
            )
            .expectCommandBody&lt;RemoveCartItem&gt; {
                assertThat(it.id, equalTo(<span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62">"customerId"</span></span></span>))
                assertThat(it.productIds, hasSize(<span><span><span>1</span></span></span>))
                assertThat(it.productIds.first(), equalTo(orderItem.productId))
            }
            .verify()
    }
}</code></pre><div>
 &nbsp;
</div><h2>设计</h2><h3>聚合建模</h3><table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:0px; border:none; box-sizing:border-box; color:#40485b; display:block; font-family:-apple-system,&quot;system-ui&quot;,&quot;Segoe UI&quot;,Helvetica,Arial,&quot;Apple Color Emoji&quot;,&quot;Segoe UI Emoji&quot;,&quot;Segoe UI Symbol&quot;,&quot;Liberation Sans&quot;,&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,&quot;Hiragino Sans GB&quot;,&quot;Wenquanyi Micro Hei&quot;,&quot;WenQuanYi Zen Hei&quot;,&quot;ST Heiti&quot;,SimHei,SimSun,&quot;WenQuanYi Zen Hei Sharp&quot;,sans-serif; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; line-height:inherit; margin:0px 0px 16px; max-width:100%; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:776px; word-break:initial; word-spacing:0px"><tbody><tr><th><strong>Single Class</strong></th><th><strong>Inheritance Pattern</strong></th><th><strong>Aggregation Pattern</strong></th></tr></tbody><tbody><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px; text-align:center"><img alt="Single Class - Modeling" src="https://static.oschina.net/uploads/img/202312/13135015_ZxxP.svg" referrerpolicy="no-referrer"></td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px; text-align:center"><img alt="Inheritance Pattern- Modeling" src="https://static.oschina.net/uploads/img/202312/13135015_I09q.svg" referrerpolicy="no-referrer"></td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px; text-align:center"><img alt="Aggregation Pattern- Modeling" src="https://static.oschina.net/uploads/img/202312/13135015_1pS1.svg" referrerpolicy="no-referrer"></td></tr></tbody></table><h3>加载聚合</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Load Aggregate" src="https://static.oschina.net/uploads/img/202312/13135015_puJx.svg" referrerpolicy="no-referrer"></p><h3>聚合状态流</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Aggregate State Flow" src="https://static.oschina.net/uploads/img/202312/13135015_I8NI.svg" referrerpolicy="no-referrer"></p><h3>发送命令</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Send Command" src="https://static.oschina.net/uploads/img/202312/13135015_sU6r.svg" referrerpolicy="no-referrer"></p><h3>命令与事件流</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Command And Event Flow" src="https://static.oschina.net/uploads/img/202312/13135016_5HaD.svg" referrerpolicy="no-referrer"></p><h3>Saga - OrderProcessManager (Demo)</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="OrderProcessManager" src="https://static.oschina.net/uploads/img/202312/13135016_NfuX.svg" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 21 Dec 2023 01:55:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271970</guid>
            <link>https://www.oschina.net/news/271970</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[橙单低代码 v2.9.2 发布，Vant&Uniapp 移动端上线]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h3>新版功能</h3><ul><li>移动端，在线表单同时支持 vant(h5) 和 uniapp(小程序)。</li><li>移动端，工作流审批同时支持 vant(h5) 和 uniapp(小程序)。</li><li>移动端，统计表单同时支持 vant(h5) 和 uniapp(小程序)。</li><li>报表打印，x-spreadsheet 替换 luckysheet，作为打印编辑器的电子表格组件。</li><li>报表打印，新增支持 Doris 分析数据库。</li><li>基础架构，支持华为云 OSS。</li><li>基础架构，全模块支持华为 OpenGauss。</li></ul><h3>图和真相</h3><p><img height="2329" src="https://oscimg.oschina.net/oscnet/up-f4c9624b4f6deb516050c54f6c803a6b788.jpg" width="1200" referrerpolicy="no-referrer"></p><p><img height="2331" src="https://oscimg.oschina.net/oscnet/up-7cf7a8c9142d130f52f4bfc60f427e40daf.jpg" width="1200" referrerpolicy="no-referrer"></p><p><img height="2321" src="https://oscimg.oschina.net/oscnet/up-0379369950775a361511e1718fca53404c1.jpg" width="1200" referrerpolicy="no-referrer"></p><p><img height="2318" src="https://oscimg.oschina.net/oscnet/up-60bd5395f94e0f2777d574320265e2dc41c.jpg" width="1200" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 21 Dec 2023 01:49:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271969/orange-admin-2-9-2-released</guid>
            <link>https://www.oschina.net/news/271969/orange-admin-2-9-2-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[类腾讯文档 UI 风格，AiEditor RC.3 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="screenshot.png" height="287" src="https://gitee.com/aieditor-team/aieditor/raw/main/docs/assets/image/logo-banner.png" width="500" referrerpolicy="no-referrer"></p><h1>AiEditor</h1><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">关于 AiEditor（官网<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Faieditor.dev">https://aieditor.dev</a><span>&nbsp;</span>）</p><blockquote><p style="margin-left:0; margin-right:0">AiEditor 是一个面向 AI 的下一代富文本编辑器，她基于 Web Component，因此支持 Layui、Vue、React、Angular 等几乎任何前端框架。她适配了 PC Web 端和手机端，并提供了，亮色，和 暗色，两个主题。除此之外，她还提供了灵活的配置，开发者可以方便的使用其开发任何文字编辑的应用。</p></blockquote><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">&nbsp;</p><h2>在线演示</h2><ul><li>现代风格（类腾讯文档）:<span>&nbsp;</span><a href="https://gitee.com/link?target=http%3A%2F%2Faieditor1.jpress.cn">http://aieditor1.jpress.cn</a></li><li>经典/传统风格:<span>&nbsp;</span><a href="https://gitee.com/link?target=http%3A%2F%2Faieditor.jpress.cn">http://aieditor.jpress.cn</a></li></ul><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="screenshot.png" src="https://gitee.com/aieditor-team/aieditor/raw/main/docs/assets/image/screenshot.png" referrerpolicy="no-referrer"></p><h2>已完善</h2><ul><li><span>&nbsp;</span><strong>基础</strong>：标题、正文、字体、字号、加粗、斜体、下划线、删除线、链接、行内代码、上标、下标、分割线、引用、打印</li><li><span>&nbsp;</span><strong>增强</strong>：撤回、重做、格式刷、橡皮擦、待办事项、字体颜色、背景颜色、Emoji 表情、对齐方式、行高、有（无）序列表、段落缩进、强制换行</li><li><span>&nbsp;</span><strong>附件</strong>：支持图片、视频、文件功能，支持选择上传、粘贴上传、拖拽上传、支持拖动调整大小...</li><li><span>&nbsp;</span><strong>代码</strong>：行内代码、代码块、语言类型选择、<strong>AI 自动注释</strong>、<strong>AI 代码解释</strong>...</li><li><span>&nbsp;</span><strong>表格</strong>：左增右增、左减右减、上增下增、上减下减、合并单元格、解除合并</li><li><span>&nbsp;</span><strong>Markdown</strong>：标题、引用、表格、图片、代码块、<strong>高亮块（类似 vuepress 的 :::）</strong>、各种列表、粗体、斜体、删除线...</li><li><span>&nbsp;</span><strong>A I</strong>：AI 续写、AI 优化、AI 校对、AI 翻译、自定义 AI 菜单及其 Prompts</li><li><strong>主题</strong>：传统切入主题、<strong>类腾讯文档风格主题</strong></li><li><span>&nbsp;</span><strong>更多</strong>：国际化、亮色主题、暗色主题、手机适配、全屏编辑、@某某某（提及）...</li></ul><p>&nbsp;</p><h2>待完善（计划中...）</h2><ul><li><span>&nbsp;</span>团队协作</li><li><span>&nbsp;</span>自动化测试</li><li><span>&nbsp;</span>AI 插入图片</li><li><span>&nbsp;</span>AI 图生图（AI 图片优化）</li><li><span>&nbsp;</span>AI 一键排版</li><li><span>&nbsp;</span>进一步增强粘贴功能</li><li><span>&nbsp;</span>上传视频自动获取缩略图</li><li><span>&nbsp;</span>WORD 导入、导出</li><li><span>&nbsp;</span>PDF 导出、PDF 预览</li><li><span>&nbsp;</span>类 Notion 拖拽功能</li><li><span>&nbsp;</span>更多的大模型对接：文心一言、ChatGPT</li></ul><p>&nbsp;</p><h2>v1.0.0-rc.3 更新细节：</h2><ul><li>新增：自定义菜单添加 id 和 className 类名配置的支持</li><li>新增：AiEditor 添加 onDestroy 监听的配置支持</li><li>优化：上传组件重命名 onBeforeUpload 为 onUploadBefore</li><li>修复：在 React 的 StrictMode 下，无法使用 AiEditor 自定义布局的问题</li><li>修复：把 AIEditor 切入到 Form 下，点击某些按钮时，会触发 form 的 submit 的问题</li><li>文档：添加自定义布局的相关文档内容</li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">&nbsp;</p><h2>快速开始</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">安装：</p><div><div><pre><span><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1">npm</span></span></span></span></span></span></span></span><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62">i aieditor</span></span></span></span></span></span></span></span></span></pre><div>
   &nbsp;
  </div></div></div><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">使用：</p><div><div><pre><span><strong><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">new</span></span></span></span></span></span></span></span></strong><span><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">AiEditor</span></span></span></span></span></span></span></span></span><span>({</span></span><span><span style="color:#008080"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5">element</span></span></span></span></span></span></span></span></span><span>:</span><span><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62">"</span></span></span></span></span></span></span></span></span><span style="color:#dd1144"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62">#aiEditor</span></span></span></span></span></span></span></span></span><span><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62">"</span></span></span></span></span></span></span></span></span><span>,</span></span><span><span style="color:#008080"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5">placeholder</span></span></span></span></span><span>:</span><span><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62">"</span></span></span></span></span></span></span></span></span><span style="color:#dd1144"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62">点击输入内容...</span></span></span></span></span></span></span></span></span><span><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62">"</span></span></span></span></span></span></span></span></span><span>,</span></span><span><span style="color:#008080"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5">content</span></span></span></span></span><span>:</span><span><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62">'</span></span></span></span></span></span></span></span></span><span style="color:#dd1144"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62">AiEditor 是一个面向 AI 的开源富文本编辑器。 </span></span></span></span></span></span></span></span></span><span><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62">'</span></span></span></span></span></span></span></span></span><span>,</span></span><span><span>})</span></span></pre><div>
   &nbsp;
  </div></div></div><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">更多访问官网：<a href="https://gitee.com/link?target=https%3A%2F%2Faieditor.dev%2Fzh%2Fgetting-started.html">https://aieditor.dev/zh/getting-started.html</a></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 21 Dec 2023 01:49:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271968/aieditor-rc3-released</guid>
            <link>https://www.oschina.net/news/271968/aieditor-rc3-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[监控探针采集器 cprobe v0.6.0 新增 ES、Oracle 监控采集能力]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>v0.6.0 新增 ElasticSearch 和 Oracle 的采集器，Oracle 采集器使用了 pure go 的 Driver，无需安装 Oracle instant client。至此，MySQL、Redis、Kafka、ES、Oracle、JSON、Prometheus 相关插件都 OK 了，下一步就是 MongoDB 和 Postgres 采集插件。</p><p>对于 Oracle 采集插件，记得要先创建账号并授权，比如：</p><pre><code class="language-sql">-- Create the monitoring user "cprobe"
CREATE USER cprobe IDENTIFIED BY &lt;YOUR-PASSWORD&gt;;

-- Grant the "cprobe" user the required permissions
GRANT CONNECT TO cprobe;
GRANT SELECT ON SYS.GV_$RESOURCE_LIMIT to cprobe;
GRANT SELECT ON SYS.V_$SESSION to cprobe;
GRANT SELECT ON SYS.V_$WAITCLASSMETRIC to cprobe;
GRANT SELECT ON SYS.GV_$PROCESS to cprobe;
GRANT SELECT ON SYS.GV_$SYSSTAT to cprobe;
GRANT SELECT ON SYS.V_$DATAFILE to cprobe;
GRANT SELECT ON SYS.V_$ASM_DISKGROUP_STAT to cprobe;
GRANT SELECT ON SYS.V_$SYSTEM_WAIT_CLASS to cprobe;
GRANT SELECT ON SYS.DBA_TABLESPACE_USAGE_METRICS to cprobe;
GRANT SELECT ON SYS.DBA_TABLESPACES to cprobe;
GRANT SELECT ON SYS.GLOBAL_NAME to cprobe;</code></pre></div>
                                    ]]>
            </description>
            <pubDate>Thu, 21 Dec 2023 01:47:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271967/cprobe-0-6-0-released</guid>
            <link>https://www.oschina.net/news/271967/cprobe-0-6-0-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[BeikeShop v1.5.0 版本重磅升级 | Laravel 10/全新 UI 交互等功能！]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><img src="https://www.opencart.cn/storage/uploads/image/2023/12/21/ebb414fc85b783f46f31773a86123673.png" width="1141" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0"><span style="background-color:#ffffff; color:#333333">点击</span><span style="background-color:#ffffff; color:#333333">作者:&nbsp;</span><a href="https://my.oschina.net/u/4161376" target="_blank">成都光大网络</a><span style="background-color:#ffffff; color:#333333">&nbsp;关注我</span></p><p style="margin-left:0; margin-right:0"><strong>前言</strong>：尊敬的 BeikeShop 用户们，期待已久的 BeikeShop v1.5.0 版本正式上线啦，欢迎大家免费下载！</p><p style="margin-left:0; margin-right:0">时隔 4 个月的时间，在这次正式版的升级中，我们进行了全面的系统优化和功能升级，同时推出了多个全新插件</p><p style="margin-left:0; margin-right:0">接下来，将向您介绍 BeikeShop v1.5.0 版本中主要升级新增了哪些功能！</p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">&nbsp;</p><p style="margin-left:0px; margin-right:0px"><span>✦</span><span>✦</span></p><h1><strong>一、架构升级</strong></h1><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">PHP 框架升级至 Laravel 10，同时兼容 PHP 8.1 以及以上版本！</p><p><img src="https://www.opencart.cn/storage/uploads/image/2023/12/21/51aff2f1f9696e64d47f786e126e8af5.png" width="1139" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0">这次我们在 BeikeShop v1.5.0 版本中，系统架构升级到了 Laravel 10 的框架。兼容 PHP 8.1 及以上版本。</p><p style="margin-left:0; margin-right:0">系统的安全性、用户体验都得到了进一步的优化！</p><p style="margin-left:0px; margin-right:0px"><span>✦</span><span>✦</span></p><h1><strong>二、前台新增&amp;升级</strong></h1><h2><strong>1. 全新 UI 交互，升级</strong></h2><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">这次我们重点优化了移动端的访问体验，为移动端购物的买家带来全新的购物体验！</p><p><img height="534" src="https://www.opencart.cn/storage/uploads/image/2023/12/21/c3972f67431ccb552568f77a17b1d0b1.jpg" width="750" referrerpolicy="no-referrer"></p><p><img height="534" src="https://www.opencart.cn/storage/uploads/image/2023/12/21/debe3c5cdd762bd8ca5f9957fd868874.jpg" width="750" referrerpolicy="no-referrer"></p><p><img height="537" src="https://www.opencart.cn/storage/uploads/image/2023/12/21/71a037d42e768d36b4d7760c6c7c8acc.jpg" width="750" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0">本次重点优化了，客户在购物过程中，常用的模块和页面。用户将会用更少的操作，更短的时间，选购到更多的商品！</p><p style="margin-left:0; margin-right:0">本次优化了商品展示、购物车、个人中心、结算页等多个页面的 UI 和交互。</p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">&nbsp;</p><h2><strong>2. 登录显示商品价格</strong></h2><p style="margin-left:0; margin-right:0">针对一些会员独立站的使用场景，我们在系统中内置了这个功能。</p><p style="margin-left:0; margin-right:0">管理员可以在后台「系统设置-结账设置」中自行设置开启或关闭。</p><p><img src="https://www.opencart.cn/storage/uploads/image/2023/12/21/cf0d191481a007f39bf4867235f61f61.jpg" width="1139" referrerpolicy="no-referrer"></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">注意：启用后将自动关闭游客结账功能</p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">&nbsp;</p><h3><strong>3. 商城 DIY 装修强化</strong></h3><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">- 新增了，多个首页 DIY 装修功能模块</p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">- 新增了，拖动装修功能，可以轻松地将左侧模块拖入右侧正确位置，直接开始装修</p><p><img height="912" src="https://www.opencart.cn/storage/uploads/image/2023/12/21/ef708c7aff95e8a3950c25b786a0e4f9.jpg" width="500" referrerpolicy="no-referrer"></p><p><img height="918" src="https://www.opencart.cn/storage/uploads/image/2023/12/21/cd9cf6d677b27e46cb5b4f9cfdb00493.jpg" width="500" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0"><strong>→直接拖入即可修</strong></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">&nbsp;</p><h2><strong>4. 语言包升级</strong></h2><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">BeikeShop v1.5.0 再次更新语言包，更符合当地用户的语言习惯</p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">&nbsp;</p><p style="margin-left:0px; margin-right:0px"><span>✦</span><span>✦</span></p><h1><strong>三、后台新增</strong></h1><h2><strong>1. 注册客户审核</strong></h2><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">本次 BeikeShop v1.5.0&nbsp;版本中，加入了客户审核功能。管理员可在后台自行设置，开启或关闭此功能。</p><p><img src="https://www.opencart.cn/storage/uploads/image/2023/12/21/01116cd6e07182db9aeb8f223e8bca0f.jpg" width="1139" referrerpolicy="no-referrer"></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">该功能主要应用于 B2B、会员制、高端定制、奢侈品等需要严格筛选审核客户的场景！</p><h2><strong>2. 订单管理</strong></h2><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">- 新增批量打印发货单功能，提高订单处理效率。</p><p><img src="https://www.opencart.cn/storage/uploads/image/2023/12/21/ad2f9c979d21d4e1380f35b0d7ffdc3f.jpg" width="1139" referrerpolicy="no-referrer"></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">- 本次新增了批量选择订单的功能，后续还会继续围绕该功能，增加其他批量操作的功能！</p><p><img src="https://www.opencart.cn/storage/uploads/image/2023/12/21/6ec8a46159e4949a06c30b8d5cbb9b06.jpg" width="1139" referrerpolicy="no-referrer"></p><h2><strong>3. 统计报表模块</strong></h2><p style="margin-left:0; margin-right:0"><strong>（1）商品浏览报表：</strong></p><p style="margin-left:0; margin-right:0">可以直接查看所有商品或指定商品的 PV/UV 数据</p><p><img src="https://www.opencart.cn/storage/uploads/image/2023/12/21/ff805da49c9a24371a88d23c6f506512.jpg" width="1139" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0">注意：商品数据标签，<strong>点击后可隐藏</strong>对应数据的显示！</p><p style="margin-left:0; margin-right:0"><strong>（2）商品销售报表：</strong></p><p style="margin-left:0; margin-right:0">报表中可以查看订单金额、订单数量。轻松了解商城整体销售情况</p><p><img src="https://www.opencart.cn/storage/uploads/image/2023/12/21/ee5ef3ff13f2073991aa7e4efe8cb470.jpg" width="1139" referrerpolicy="no-referrer"></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">商品销量，商品金额、用户购买金额排行。帮助运营人员定位关键商品，找到重点客户</p><h2><strong>4. 国家/地区数据筛选</strong></h2><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">在系统设置-国家管理中，可以按「洲」对国家进行筛选</p><p><img src="https://www.opencart.cn/storage/uploads/image/2023/12/21/5d7bc60f55747d90ed8b3d9733600f55.jpg" width="1139" referrerpolicy="no-referrer"></p><h2><strong>5. 新增 hook</strong></h2><p style="margin-left:0; margin-right:0">- 单规格可设定阶梯价格的 hook</p><p style="margin-left:0; margin-right:0">- 通过 hook 和 stack 实现 SKU 展示方式的控制</p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify"><span>✦✦</span></p><h1><strong>四、插件新增</strong></h1><h2><strong>1. IP 屏蔽客户</strong></h2><p><img src="https://www.opencart.cn/storage/uploads/image/2023/12/21/375fb86f1dbc8e8070f0639415501a15.png" width="568" referrerpolicy="no-referrer"></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">插件开启后，可以按照大洲、国际等 IP 维度限制来访客户，增加网站安全性！（如下图）</p><p><img src="https://www.opencart.cn/storage/uploads/image/2023/12/21/e3b53dc6f33028bdbf2e87b10e4b1db8.jpg" width="1139" referrerpolicy="no-referrer"></p><h2><strong>2. 代客下单</strong></h2><p><img src="https://www.opencart.cn/storage/uploads/image/2023/12/21/e85d5ce9fe984200b195715b613a4025.png" width="568" referrerpolicy="no-referrer"></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">开启插件后，平台管理员可以帮助客户进行下单操作。可自主添加商品、选择用户或游客结账、填写地址、选择配送支付方式等（如下图）</p><p><img src="https://www.opencart.cn/storage/uploads/image/2023/12/21/403a1d0f61fb7f0bbc17f2603c208f90.jpg" width="1139" referrerpolicy="no-referrer"></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">&nbsp;</p><h2><strong>3. 购物车分析</strong></h2><p><img src="https://www.opencart.cn/storage/uploads/image/2023/12/21/80e9d1bbe042c2b2935c88440185aa46.png" width="568" referrerpolicy="no-referrer"></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">展示所有的客户的购物车数据，可进行多维度数据筛选分析。帮助独立站运营人员，快速筛选出高价值客户、潜在爆款商品等重要数据指标（如下图）</p><p><img src="https://www.opencart.cn/storage/uploads/image/2023/12/21/f8e78673899701065886dd7b66ba99b8.jpg" width="1139" referrerpolicy="no-referrer"></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">&nbsp;</p><p style="margin-left:0; margin-right:0"><strong>BeikeShop 国际站官网：</strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbeikeshop.com%2F" target="_blank"><span>https://beikeshop.com/</span></a></p><p style="margin-left:0; margin-right:0"><strong>BeikeShop 中文站官网：</strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbeikeshop.cn%2F" target="_blank"><span>https://beikeshop.cn/</span></a></p><p style="margin-left:0px; margin-right:0px"><strong>欢迎随时联系我们！</strong></p><p style="margin-left:0; margin-right:0">版权所有，转载需注明出处！</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 21 Dec 2023 01:42:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271966/beikeshop-1-5-0-released</guid>
            <link>https://www.oschina.net/news/271966/beikeshop-1-5-0-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[NeutrinoProxy 2.0.1 发布，新增 IP 访问拦截+限速支持]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h1>NeutrinoProxy2.0.1 发布，新增 IP 访问拦截+限速支持</h1><h2>项目简介</h2><ul><li><a href="https://gitee.com/asgc/neutrino-proxy">中微子代理 (neutrino-proxy)</a> 是一款基于 Solon、Netty 的内网穿透神器。该项目采用最为宽松的 MIT 协议，因此您可以对它进行复制、修改、传播并用于任何个人或商业行为。</li><li>市面上基于内网穿透的常见产品有：花生壳、TeamView、cpolar 等。</li><li>常见的使用场景： 
  <ul><li>本地开发调试第三方回调</li><li>本地开发异地接口连调</li><li>远程登录内网 windows 机器</li><li>将本地服务映射到外网，用于演示</li></ul></li><li>Gitee 仓库：<a href="https://gitee.com/dromara/neutrino-proxy">https://gitee.com/dromara/neutrino-proxy</a></li><li>Github 仓库：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdromara%2Fneutrino-proxy" target="_blank">https://github.com/dromara/neutrino-proxy</a></li><li>官网地址 1: <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fneutrino-proxy.dromara.org" target="_blank">https://neutrino-proxy.dromara.org</a></li><li>官网地址 2: <a href="https://dromara.gitee.io/neutrino-proxy">https://dromara.gitee.io/neutrino-proxy</a></li></ul><h2>主要特点：</h2><ul><li>1、流量监控：首页图表、报表管理多维度流量监控。全方位掌握实时、历史代理数据。</li><li>2、用户/License：支持多用户、多客户端使用。后台禁用实时生效。</li><li>3、端口池：对外端口统一管理，支持用户、License 独占端口。</li><li>4、端口映射：新增、编辑、删除、禁用实时生效。</li><li>5、Docker：服务端/客户端支持 Docker 一键部署。</li><li>6、SSL 证书：隧道通信支持 SSL 加密，保护您的数据安全。</li><li>7、域名映射：支持绑定子域名，方便本地调试三方回调</li><li>8、多种协议：支持代理 TCP、HTTP、HTTPS、UDP 协议</li><li>9、原生部署：支持编译为原生可执行文件，更低部署门槛、更少内存占用</li><li>10、安全组：支持黑/白名单 IP 访问限制</li><li>11、限速：支持对 License、端口映射限制上传/下载速度</li><li>12、采用最为宽松的 MIT 协议，免去你的后顾之忧</li></ul><h2>本次更新内容</h2><ul><li>jdk 版本升级为 21</li><li>新增安全组模块，支持黑名单、白名单限制</li><li>支持对用户、license 限速</li><li>修复 HTTP(S) 映射时使用 tcp 端口访问正常，使用域名访问偶现一直 loading 的问题</li><li>修复 HTTP(S) 映射时使用映射的域名上传文件时，连接中断的问题</li></ul><h2>安装使用说明</h2><ul><li>快速上手：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fneutrino-proxy.dromara.org%2Fneutrino-proxy%2Fpages%2F793dcb%2F" target="_blank">https://neutrino-proxy.dromara.org/neutrino-proxy/pages/793dcb/</a></li><li>升级须知： 
  <ul><li>jdk 版本升级为了 jdk21，jar 部署时请注意</li><li>涉及到表结构变更，执行增量 SQL：<a href="https://gitee.com/dromara/neutrino-proxy/blob/master/neutrino-proxy-server/src/main/resources/sql/mysql/update/UPDATE-20231215.SQL">https://gitee.com/dromara/neutrino-proxy/blob/master/neutrino-proxy-server/src/main/resources/sql/mysql/update/UPDATE-20231215.SQL</a></li></ul></li></ul><h2>运行示例</h2><h4>License 限速</h4><p><img height="928" src="https://oscimg.oschina.net/oscnet/up-68d6b827831b2f3ffdb632b2eab39873b9c.png" width="1920" referrerpolicy="no-referrer"></p><h4>端口映射限速</h4><p><img height="932" src="https://oscimg.oschina.net/oscnet/up-f3eb2f691f1c4b1911897848f5048acf879.png" width="1919" referrerpolicy="no-referrer"></p><h4>安全组</h4><p><img height="931" src="https://oscimg.oschina.net/oscnet/up-30720c5a356ce3d590d630d9e48e3e2d4b8.png" width="1920" referrerpolicy="no-referrer"></p><p><img height="933" src="https://oscimg.oschina.net/oscnet/up-6237424f99927c701cedea62f1138d3efa2.png" width="1920" referrerpolicy="no-referrer"></p><h2>联系我们</h2><p>笔者时间、能力有限，且开源项目非一朝一夕之事，存在众多问题亦在所难免。使用、学习过程中有任何问题欢迎大家与我联系。</p><p>对项目有什么想法或者建议，可以加我微信拉交流群，或者创建<a href="https://gitee.com/dromara/neutrino-proxy/issues">issues</a>，一起完善项目</p><ul><li>微信号：yuyunshize 添加时请备注"中微子进群"）</li><li>Email: <a href="https://www.oschina.net/action/GoToLink?url=mailto%3Aaoshiguchen%40dromara.org" target="_blank">aoshiguchen@dromara.org</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Thu, 21 Dec 2023 01:28:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271961/neutrinoproxy-2-0-1-released</guid>
            <link>https://www.oschina.net/news/271961/neutrinoproxy-2-0-1-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
    </channel>
</rss>
