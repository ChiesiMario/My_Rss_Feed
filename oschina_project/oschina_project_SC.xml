<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[开源中国-软件更新资讯]]>
        </title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="https://rsshub.app/oschina/news/project" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[开源中国-软件更新资讯 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Sat, 13 Jan 2024 00:48:35 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[LinkWeChat V5.1.0 版本发布，全面接入腾讯混元大模型]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff; color:#333333">LinkWeChat 是国内首个基于企业微信的开源 SCRM，在集成了企微强大的开放能力的基础上，进一步升级拓展灵活高效的客户运营能力及多元化精准营销能力，让客户与企业之间建立强链接，帮助企业提高客户运营效率，强化营销能力，拓展盈利空间，是企业私域流量管理与营销的综合解决方案，目前已经受到企业微信的官方推荐和国家级木兰开源社区进行孵化，同时也是国家工信部重点扶持项目，同时也获得 2022 年中国开源创新大赛二等奖。</span></p><p><strong>LinkWeChat V5.1.0 主要的升级内容如下：</strong></p><p><span style="background-color:#ffffff; color:#40485b">过去，客户支持可能意味着大量的手动操作和不断回复相同的问题。但现在，通过 LinkWechat 的 AI 技术，你可以：快速解答客户问题：通过智能问答系统，快速准确地回答客户的问题，提高工作效率;个性化客户服务：AI 可以根据每个客户的需求和喜好，提供个性化的建议和解决方案。</span></p><p><img height="1392" src="https://oscimg.oschina.net/oscnet/up-0889310db6e4346b3f56c3f41a9f61d5bd9.png" width="2794" referrerpolicy="no-referrer"></p><p><img height="1646" src="https://oscimg.oschina.net/oscnet/up-001bf61b352101b8baf7ac1a8b8ce8f2cf4.png" width="2186" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 12 Jan 2024 09:35:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/275471/linkwechat-5-1-0-released</guid>
            <link>https://www.oschina.net/news/275471/linkwechat-5-1-0-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Blazor 开发框架 Known 2.0.0 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff; color:#333333">Known 是基于 Blazor 的企业级快速开发框架，低代码，跨平台，开箱即用，一处代码，多处运行。</span></p><p>现已发布 2.0 版本，主要特性如下：</p><ul><li>快速开发：基于 Blazor，在线表单设计，自动生成代码</li><li>通用权限：内置通用权限模块，只需专注业务功能</li><li>国际化：提供完备的国际化多语言解决方案</li><li>抽象 UI：抽象 UI 层，易扩展，无缝对接 Ant Design 等</li><li>最佳实践：低代码，一人多角色，沟通高效，成本最低</li><li>C# 语言：全量使用 C# 进行全栈开发</li></ul><p>软件首页：<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fknown.pumantech.com%2F" target="_blank">http://known.pumantech.com</a></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 12 Jan 2024 08:23:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/275455/known-2-0-0-released</guid>
            <link>https://www.oschina.net/news/275455/known-2-0-0-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Apache Tomcat 10.1.18 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff; color:#333333">Apache Tomcat 10.1.18 现已</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftomcat.apache.org%2F" target="_blank">发布</a><span style="background-color:#ffffff; color:#333333">，</span><span style="background-color:#ffffff; color:#000000">此版本实现了作为 Jakarta EE 10 平台一部分的规范。</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="background-color:#ffffff; color:#000000">在 Tomcat 9 和更早版本上运行的应用程序，如果不做修改，将无法在 Tomcat 10 上运行。为 Tomcat 9 和更早版本设计的基于 Java EE 的应用程序可以放在<span>&nbsp;</span><code>$CATALINA_BASE/webapps-javaee</code><span>&nbsp;</span>目录下，Tomcat 会自动将其转换为 Jakarta EE 并复制到 webapps 目录。此转换是通过&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Ftomcat-jakartaee-migration" target="_blank">Apache Tomcat 的 Jakarta EE 迁移工具</a><span style="background-color:#ffffff; color:#000000">进行的，此工具也可以单独</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftomcat.apache.org%2Fdownload-migration.cgi" target="_blank">下载</a><span style="background-color:#ffffff; color:#000000">，以供离线使用。</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="color:#000000"><span style="background-color:#ffffff">一些值得关注的变化有：</span></span></p><ul><li>修复 NIO2 连接器的虚拟线程支持。</li><li>更正了 67675 修复程序中的回归，该回归破坏了未指定显式伪随机函数并依赖于默认值的 PKCS#8 格式密钥的 TLS 密钥文件解析。这通常会影响 OpenSSL 1.0.2 生成的密钥。</li><li>允许在&nbsp;introspected mbeans 上执行多个同名操作，修复因引入第二个 addSslHostConfig() 方法而导致的回归。</li></ul><p>&nbsp;<span style="background-color:#ffffff; color:#000000">这些更改以及所有其他更改的完整详细信息可在</span>&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftomcat.apache.org%2Ftomcat-10.1-doc%2Fchangelog.html%23Tomcat_10.1.18_%28schultz%29" target="_blank">Tomcat 10.1 changelog</a>&nbsp;<span style="background-color:#ffffff; color:#000000">中找到。</span>&nbsp;</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="background-color:#ffffff; color:#333333">此外，</span><span style="background-color:#ffffff; color:#333333">Apache Tomc</span><span style="background-color:#ffffff; color:#000000">at&nbsp;8.5.98、9.0.85、11.0.0-M16 也同步发布。</span></p><ul style="list-style-type:disc; margin-left:0; margin-right:0"><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftomcat.apache.org%2Ftomcat-8.5-doc%2Fchangelog.html%23Tomcat_8.5.98_%28schultz%29" target="_blank">Tomcat 8 changelog</a>，<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftomcat.apache.org%2Fdownload-80.cgi" target="_blank">Download</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftomcat.apache.org%2Ftomcat-9.0-doc%2Fchangelog.html%23Tomcat_9.0.85_%28remm%29" target="_blank">Tomcat 9 changelog</a>，<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftomcat.apache.org%2Fdownload-90.cgi" target="_blank">Download</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftomcat.apache.org%2Ftomcat-10.1-doc%2Fchangelog.html%23Tomcat_10.1.18_%28schultz%29" target="_blank">Tomcat 10.1 changelog</a>，<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftomcat.apache.org%2Fdownload-10.cgi" target="_blank">Download</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftomcat.apache.org%2Ftomcat-11.0-doc%2Fchangelog.html%23Tomcat_11.0.0-M16_%28markt%29" target="_blank">Tomcat 11<span>&nbsp;</span><strong>(alpha)</strong><span>&nbsp;</span>changelog</a>，<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftomcat.apache.org%2Fdownload-11.cgi" target="_blank">Download</a></li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="background-color:#ffffff; color:#000000">值得注意的是，Apache Tomcat 8.5.x 将于 2024 年 3 月 31 日终止</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftomcat.apache.org%2Ftomcat-85-eol.html" target="_blank">生命周期</a><span style="background-color:#ffffff; color:#000000">&nbsp;(EOL)。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 12 Jan 2024 08:12:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/275450/tomcat-10-1-18-released</guid>
            <link>https://www.oschina.net/news/275450/tomcat-10-1-18-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Elasticsearch 8.11.4 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Elasticsearch 是一个基于 Lucene 库的搜索引擎。它提供了一个分布式、支持多租户的全文搜索引擎，具有 HTTP Web 接口和无模式 JSON 文档。Elasticsearch 基于 Java 开发，并在 SSPL + Elastic License 双重授权许可下作为开源软件发布。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">Elasticsearch 8.11.4 现已发布，具体更新内容如下：</p><h4 style="margin-left:0; margin-right:0; text-align:left"><strong><span><span><span><span><span><span style="color:#212529"><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>Bug 修复</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></h4><p><span><span><span><strong>EQL</strong></span></span></span></p><div><ul><li><span><span>修复丢失事件查询的 NPE&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Felastic%2Felasticsearch%2Fpull%2F103611" target="_blank">#103611</a>（issue：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Felastic%2Felasticsearch%2Fissues%2F103608" target="_blank">#103608</a>）</span></span></li></ul></div><p><span><span><span><strong>ES|QL</strong></span></span></span></p><div><ul><li><span><span>现在以毫秒为单位修复 ESQL 搜索上下文<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Felastic%2Felasticsearch%2Fpull%2F103474" target="_blank">#103474</a>（issue：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Felastic%2Felasticsearch%2Fissues%2F103455" target="_blank">#103455</a>）</span></span></li><li><span><span>修复<code>PlanStreamOutput</code>的传输版本&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Felastic%2Felasticsearch%2Fpull%2F103758" target="_blank">#103758</a></span></span></li><li><span><span><code>AsyncOperator#isFinished</code>失败时绝不能返回 true&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Felastic%2Felasticsearch%2Fpull%2F104029" target="_blank">#104029</a></span></span></li></ul></div><p><span><span><span><strong>Infra/Scripting</strong></span></span></span></p><div><ul><li><span><span>Wrap painless explain error&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Felastic%2Felasticsearch%2Fpull%2F103151" target="_blank">#103151</a>（issue：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Felastic%2Felasticsearch%2Fissues%2F103018" target="_blank">#103018</a>）</span></span></li></ul></div><p><span><span><span><strong>Mapping</strong></span></span></span></p><div><ul><li><span><span>Revert change&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Felastic%2Felasticsearch%2Fpull%2F103865" target="_blank">#103865</a></span></span></li></ul></div><p><span><span><span><strong>Snapshot/Restore</strong></span></span></span></p><div><ul><li><span><span>在读取完成后而不是之前 Decref<code>SharedBytes.IO</code><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Felastic%2Felasticsearch%2Fpull%2F102848" target="_blank">#102848</a></span></span></li><li><span><span>恢复读取和写入时的<code>SharedBytes.IO</code></span></span><span style="background-color:#ffffff; color:#212529">refcounting<span>&nbsp;</span></span><span><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Felastic%2Felasticsearch%2Fpull%2F102843" target="_blank">#102843</a></span></span></li></ul></div><p><span><span><span><strong>Watcher</strong></span></span></span></p><div><ul><li><span><span>修复：Watcher REST API<code>GET /_watcher/settings</code>现在包含&nbsp;product header&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Felastic%2Felasticsearch%2Fpull%2F103003" target="_blank">#103003</a>（issue：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Felastic%2Felasticsearch%2Fissues%2F102928" target="_blank">#102928</a>）</span></span></li></ul></div><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="background-color:#ffffff; color:#212529">详情可</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.elastic.co%2Fguide%2Fen%2Felasticsearch%2Freference%2F8.11%2Frelease-notes-8.11.4.html" target="_blank">查看更新说明</a><span style="background-color:#ffffff; color:#212529">。</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="background-color:#ffffff; color:#333333"><span><span><span style="color:#212529"><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span><span><span>下载地址：</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Felastic.co%2Fdownloads%2Felasticsearch" target="_blank">https://elastic.co/downloads/elasticsearch</a></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 12 Jan 2024 03:13:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/275379/elasticsearch-8-11-4-released</guid>
            <link>https://www.oschina.net/news/275379/elasticsearch-8-11-4-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[OpenResty 1.25.3.1 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>OpenResty 1.25.3.1 现已<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopenresty.org%2Fcn%2Fann-1025003001.html" target="_blank">发布</a>，更新亮点包括：</p><ul><li>基于最新的主线&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopenresty.org%2Fcn%2Fnginx.html" target="_blank">nginx core</a> 1.25.3。</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopenresty%2Fluajit2" target="_blank">LuaJIT</a><ul><li>从 Mike Pall 的上游 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fluajit%2Fluajit" target="_blank">https://github.com/luajit/luajit</a>&nbsp;代码库导入了许多修复程序。</li></ul></li><li>添加了对 HTTP/3 的支持。</li><li>添加了对 PCRE2 的支持。</li><li>针对 Win32/Win64 将 OpenSSL 升级到 1.1.1w。</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopenresty%2Flua-nginx-module" target="_blank">lua-nginx-module</a><ul><li>添加了对 lua_ssl_certificate 和 lua_ssl_certificate_key 的支持。</li><li><code>ngx.re</code>已经从<code>ngx.run_worker_thread</code>删除。</li><li>在 lua-ssl-protocols 中默认禁用 SSLv3 并启用 TLSv1.3。</li></ul></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopenresty%2Flua-resty-core" target="_blank">llua-resty-core</a><ul><li>改进了<code>ngx.worker.pids()</code>以获得更好的性能。</li></ul></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopenresty%2Flua-resty-dns" target="_blank">lua-resty-dns</a><ul><li>引入了一种清理方法，用于明确销毁解析器对象内的 cosocket 资源。</li></ul></li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>下载地址：</strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopenresty.org%2Fen%2Fdownload.html" target="_blank">https://openresty.org/en/download.html</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">更多详情可查看<span style="background-color:#f9fcf9; color:#3e423e"><span>&nbsp;</span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopenresty.org%2Fcn%2Fchangelog-1025003.html" target="_blank">Change Log</a>。</p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 12 Jan 2024 02:54:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/275371/openresty-1-25-3-1-released</guid>
            <link>https://www.oschina.net/news/275371/openresty-1-25-3-1-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[凌鲨 0.7.8 版本更新]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h1>凌鲨 0.7.8 版本更新</h1><ul><li>服务端版本: 0.2.24</li><li>新增: 内容面板新增目录模式</li><li>改进: 创建项目时自动创建默认目录</li></ul><h1>相关截图</h1><p><img height="750" src="https://oscimg.oschina.net/oscnet/up-88cc25201b8058f7df2364e7f5984483e32.png" width="1500" referrerpolicy="no-referrer"></p><p><img height="750" src="https://oscimg.oschina.net/oscnet/up-cbeff99f8907ac6793f4371da2f1526843e.png" width="1500" referrerpolicy="no-referrer"></p><p><img height="750" src="https://oscimg.oschina.net/oscnet/up-4d8ad67e241454263817f9a0c6646a76bca.png" width="1500" referrerpolicy="no-referrer"></p><p><img height="750" src="https://oscimg.oschina.net/oscnet/up-9b89bb89738ddee64fde03e397b56f08a4d.png" width="1500" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 12 Jan 2024 02:39:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/275368/linksaas-0-7-8-released</guid>
            <link>https://www.oschina.net/news/275368/linksaas-0-7-8-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Simple Admin Go 语言分布式后台管理系统 v1.3.2 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h2>Simple Admin - Go 语言分布式后台管理系统 v1.3.2 更新</h2><h3>项目介绍</h3><p>Simple Admin 是一个开箱即用的分布式微服务后端管理系统，基于 go-zero 开发，为开发中大型后台提供了丰富的功能，支持三端代码生成。 官方自带多种扩展，助力中小企业快速上云，快速迭代。适合用于微服务学习和商用，开源免费。</p><h3>Simple Admin Core / Job / MCMS / FMS / Common v1.3.2 更新</h3><h4>介绍</h4><p>核心模块 Core, 定时任务模块 Job, 消息中心模块 MCMS, 以及文件管理模块 FMS 均已升级</p><h4>本次更新</h4><ul><li>优化 (Core): 将 api group 的字段长度限制改为 80</li><li>更新： 更新依赖</li></ul><h3>Simple Admin Backend UI v1.3.2 更新</h3><h4>介绍</h4><p>Simple Admin UI 是基于 vue-vben-admin 二次开发的为 Simple Admin 专门开发的后台管理界面，基于 Vue3 和 TypeScript 开发， 提供后台错误统一处理，国际化等功能，本项目完全免费，可用于学习和商用.</p><h4>本次更新</h4><ul><li>修复 (Form): SimpleTimePicker 双击删除 bug</li><li>优化 (Form): 优化 DictionarySelect 缓存逻辑，增加请求缓存</li><li>新增 (Table): 新增 DictionaryTag 组件用于回显字典数据，同时支持缓存逻辑</li><li>修复 (Api): 错误的 user model 字段定义</li><li>更新： 更新 antdv 至最新，兼容 vue 3.4.x</li><li>更新： 更新所有依赖</li></ul><h3>Goctls v1.6.22 更新</h3><h4>介绍</h4><p>Goctls 是一个基于 Go Zero 官方生成工具 Goctl 开发的针对 Simple Admin 适配优化的生成工具。提供强大的代码生成功能，同时集成了许多定制工具，实现快速开发微服务接入后台和前台​。三端代码生成可以大大提升开发效率，欢迎体验​。</p><h4>特性</h4><ul><li>go-swagger : 基于 go-swagger 而不是官方的@doc 注解</li><li>多国语言支持</li><li>优化错误信息处理,支持多语言错误</li><li>简单易用的校验器</li><li>支持代码生成，生成 API,RPC 和 web 端的 CRUD 代码</li><li>支持多种额外插件如 GORM, RocketMQ</li><li>对 Simple Admin 的针对性优化</li><li>rpc logic group 分组</li><li>全面支持 Ent 代码生成</li><li>额外工具如本地日志查看，环境变量查看</li></ul><h4>本次更新</h4><ul><li>新增： api ent 命令新增 route prefix 参数用于生成路由前缀</li><li>新增： api proto 命令新增 route prefix 参数用于生成路由前缀</li><li>新增： extra init_code 命令新增 route prefix 参数用于生成路由前缀</li><li>更新： 更新依赖</li></ul><h3>更新预览</h3><blockquote><p>新增 route_prefix 参数</p></blockquote><p><img height="1112" src="https://oscimg.oschina.net/oscnet/up-76a43ea8807a2d238a68cd206801fdbc21d.png" width="1654" referrerpolicy="no-referrer"></p><blockquote><p>新增表格字典回显组件</p></blockquote><p><img height="996" src="https://oscimg.oschina.net/oscnet/up-1b542e6069114a046df19866cc406abc7d2.png" width="1323" referrerpolicy="no-referrer"></p><p>&nbsp;</p><p>文档网站：&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.ryansu.tech%2Fzh" target="_blank">https://doc.ryansu.tech/zh</a></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 12 Jan 2024 01:53:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/275343/simple-admin-go-1-3-2-released</guid>
            <link>https://www.oschina.net/news/275343/simple-admin-go-1-3-2-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[🎉 信创首选，国产开源 Servlet 容器新版发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h2><span style="color:#ffffff"><strong><span style="background-color:#e67e22">1、smart-servlet 简介</span></strong></span></h2><p style="color:black; margin-left:0; margin-right:0; text-align:left">smart-servlet 是目前 Gitee、Github 平台上首款，也是&nbsp;<strong><span style="color:#d35400">唯一款全栈核心技术自研&nbsp;</span></strong>的国产开源的 Servlet 容器项目。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="539" src="https://oscimg.oschina.net/oscnet/up-3f119f313717b1596a59cacb581286696d7.png" width="1080" referrerpolicy="no-referrer"></p><h3>产品特色</h3><ul><li><p>国产血统：核心技术 100% 全栈自研。</p></li><li><p>性能优越：搭载最新版通信微内核 smart-socket。</p></li><li><p>安全可靠：严格遵循协议规范；支持加密传输方式。</p></li><li><p>极致轻量：发行包不足&nbsp;<span style="color:#27ae60"><strong>800KB</strong></span></p></li><li><p>简洁易用：支持 War 包、springboot、maven-plugin 等多种运行模式，使用体验 100% 兼容 Tomcat。</p></li></ul><h3><span style="color:#ffffff"><strong><span style="background-color:#e67e22">2、 版本更新</span></strong></span></h3><blockquote><p><span style="color:#000000">上个版本部分内容：</span><s>最近社区中最具热度的事件莫过于 Java 21 的发布，虽然这个版本没有特别吸引我的地方，但为了项目发展需要，适当蹭一蹭这个热度。所以作了一个较为冲动的决定：<strong>将 smart-servlet 的开发、运行环境切换为 Java 21；同时， servlet 适配的规范提升至了 Jakarta Servlet 5.0。</strong>希望通过这样的调整，能为这个项目注入新的活力。</s></p></blockquote><p style="color:black; margin-left:0; margin-right:0; text-align:left">上个版本确实是冲动了。思来想去，再结合社区朋友的建议，当下适合 smart-servlet 去服务的目标用户只有一类：<strong>有着信创要求，且难以承受昂贵国产 Servlet 容器的中小企业</strong>。</p><p style="color:black; margin-left:0; margin-right:0; text-align:left">此类用户所维护的系统，大多数还停留在低版本 Servlet。smart-servlet 首先要考虑的是帮助这类用户平滑的完成信创要求，再来考虑技术体系升级的事。</p><p style="color:black; margin-left:0; margin-right:0; text-align:left">所以，此次 smart-servlet 再次回归至 JDK8 和 Servlet 4.0 。</p><p style="color:black; margin-left:0; margin-right:0; text-align:left"><strong>本次更新内容</strong>：</p><ol><li><p>提供不完整的 AsyncContext 规范实现。</p></li><li><p>提供 locale-encoding-mapping-list 规范的实现</p></li><li><p>优化 ServletResponse#flushBuffer 规范实现。</p></li><li><p>优化 ServletResponse#setLocale 规范实现。</p></li><li><p>提供请求异步处理能力。</p></li><li><p>新增控制枱技术支持信息露出。</p></li><li><p>优化日志输出。</p></li><li><p>清理大量无用代码。</p></li></ol><h2><span style="color:#ffffff"><strong><span style="background-color:#e67e22">3、快速上手</span></strong></span></h2><p style="color:black; margin-left:0; margin-right:0; text-align:left">我们提供了三种方式启用 smart-servlet，您可根据实际情况选择其中适用的一种。</p><h3>方式一：maven 插件</h3><p style="color:black; margin-left:0; margin-right:0; text-align:left">这是一种类似：<code>tomcat-maven-plugin</code><span>&nbsp;</span>的使用方式，通常应用于 Java Web 工程的本地开发环境。集成该插件只需在 pom.xml 中加入以下代码，便可以在 IDE 中启动 servlet 服务。</p><pre><code class="language-xml"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333">&lt;</span></span><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a">build</span></span></span></span></span><span style="color:#333333"><span style="color:#333333">&gt;</span></span></span><span style="color:#333333"><span style="color:#333333"><span style="color:#333333">&lt;</span></span><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a">plugins</span></span></span></span></span><span style="color:#333333"><span style="color:#333333">&gt;</span></span></span><span style="color:#333333"><span style="color:#333333"><span style="color:#333333">&lt;</span></span><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a">plugin</span></span></span></span></span><span style="color:#333333"><span style="color:#333333">&gt;</span></span></span><span style="color:#333333"><span style="color:#333333"><span style="color:#333333">&lt;</span></span><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a">groupId</span></span></span></span></span><span style="color:#333333"><span style="color:#333333">&gt;</span></span></span>org.smartboot.servlet<span style="color:#333333"><span style="color:#333333"><span style="color:#333333">&lt;/</span></span><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a">groupId</span></span></span></span></span><span style="color:#333333"><span style="color:#333333">&gt;</span></span></span><span style="color:#333333"><span style="color:#333333"><span style="color:#333333">&lt;</span></span><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a">artifactId</span></span></span></span></span><span style="color:#333333"><span style="color:#333333">&gt;</span></span></span>smart-servlet-maven-plugin<span style="color:#333333"><span style="color:#333333"><span style="color:#333333">&lt;/</span></span><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a">artifactId</span></span></span></span></span><span style="color:#333333"><span style="color:#333333">&gt;</span></span></span><span style="color:#333333"><span style="color:#333333"><span style="color:#333333">&lt;</span></span><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a">version</span></span></span></span></span><span style="color:#333333"><span style="color:#333333">&gt;</span></span></span>0.6<span style="color:#333333"><span style="color:#333333"><span style="color:#333333">&lt;/</span></span><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a">version</span></span></span></span></span><span style="color:#333333"><span style="color:#333333">&gt;</span></span></span><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">&lt;!--最新版本 --&gt;</span></span></span><span style="color:#333333"><span style="color:#333333"><span style="color:#333333">&lt;</span></span><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a">configuration</span></span></span></span></span><span style="color:#333333"><span style="color:#333333">&gt;</span></span></span><span style="color:#333333"><span style="color:#333333"><span style="color:#333333">&lt;</span></span><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a">port</span></span></span></span></span><span style="color:#333333"><span style="color:#333333">&gt;</span></span></span>8080<span style="color:#333333"><span style="color:#333333"><span style="color:#333333">&lt;/</span></span><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a">port</span></span></span></span></span><span style="color:#333333"><span style="color:#333333">&gt;</span></span></span><span style="color:#333333"><span style="color:#333333"><span style="color:#333333">&lt;</span></span><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a">path</span></span></span></span></span><span style="color:#333333"><span style="color:#333333">&gt;</span></span></span>/portal<span style="color:#333333"><span style="color:#333333"><span style="color:#333333">&lt;/</span></span><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a">path</span></span></span></span></span><span style="color:#333333"><span style="color:#333333">&gt;</span></span></span><span style="color:#333333"><span style="color:#333333"><span style="color:#333333">&lt;/</span></span><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a">configuration</span></span></span></span></span><span style="color:#333333"><span style="color:#333333">&gt;</span></span></span><span style="color:#333333"><span style="color:#333333"><span style="color:#333333">&lt;/</span></span><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a">plugin</span></span></span></span></span><span style="color:#333333"><span style="color:#333333">&gt;</span></span></span><span style="color:#333333"><span style="color:#333333"><span style="color:#333333">&lt;/</span></span><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a">plugins</span></span></span></span></span><span style="color:#333333"><span style="color:#333333">&gt;</span></span></span><span style="color:#333333"><span style="color:#333333"><span style="color:#333333">&lt;/</span></span><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a">build</span></span></span></span></span><span style="color:#333333"><span style="color:#333333">&gt;</span></span></span></code></pre><p style="color:black; margin-left:0; margin-right:0; text-align:left">插件的版本建议采用最新版本，另外主要的配置项包括：</p><ul><li><p style="margin-left:0; margin-right:0">port：servlet 服务启动的监听端口</p></li><li><p style="margin-left:0; margin-right:0">path：Servlet 容器上下文路径，即 ContextPath，通常以 / 表示。当然也支持自定义，但必须以 / 开头，完成配置后在控制枱输入：<code>mvn package smart-servlet:run</code><span>&nbsp;</span>即可。</p></li></ul><h3>方式二：smart-servlet-spring-boot-starter</h3><p style="color:black; margin-left:0; margin-right:0; text-align:left">用过 springboot 的<span>&nbsp;</span><code>spring-boot-starter-tomcat</code><span>&nbsp;</span>或者<span>&nbsp;</span><code>spring-boot-starter-undertow</code><span>&nbsp;</span>的朋友应该对此不陌生。</p><p style="color:black; margin-left:0; margin-right:0; text-align:left"><code>smart-servlet-spring-boot-starter</code><span>&nbsp;</span>本质上就是 smart-servlet 对 spring-boot-starter-web 的另一种适配。</p><p style="color:black; margin-left:0; margin-right:0; text-align:left">只需按照以下方式调整 springboot 工程中 pom.xml 文件的配置，便可将 springboot 的默认 Servlet 容器替换成 smart-servlet。</p><pre><code class="language-xml"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333">&lt;</span></span><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a">dependencys</span></span></span></span></span><span style="color:#333333"><span style="color:#333333">&gt;</span></span></span><span style="color:#333333"><span style="color:#333333"><span style="color:#333333">&lt;</span></span><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a">dependency</span></span></span></span></span><span style="color:#333333"><span style="color:#333333">&gt;</span></span></span><span style="color:#333333"><span style="color:#333333"><span style="color:#333333">&lt;</span></span><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a">groupId</span></span></span></span></span><span style="color:#333333"><span style="color:#333333">&gt;</span></span></span>org.springframework.boot<span style="color:#333333"><span style="color:#333333"><span style="color:#333333">&lt;/</span></span><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a">groupId</span></span></span></span></span><span style="color:#333333"><span style="color:#333333">&gt;</span></span></span><span style="color:#333333"><span style="color:#333333"><span style="color:#333333">&lt;</span></span><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a">artifactId</span></span></span></span></span><span style="color:#333333"><span style="color:#333333">&gt;</span></span></span>spring-boot-starter-web<span style="color:#333333"><span style="color:#333333"><span style="color:#333333">&lt;/</span></span><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a">artifactId</span></span></span></span></span><span style="color:#333333"><span style="color:#333333">&gt;</span></span></span><span style="color:#333333"><span style="color:#333333"><span style="color:#333333">&lt;</span></span><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a">exclusions</span></span></span></span></span><span style="color:#333333"><span style="color:#333333">&gt;</span></span></span><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">&lt;!-- Exclude the Tomcat dependency --&gt;</span></span></span><span style="color:#333333"><span style="color:#333333"><span style="color:#333333">&lt;</span></span><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a">exclusion</span></span></span></span></span><span style="color:#333333"><span style="color:#333333">&gt;</span></span></span><span style="color:#333333"><span style="color:#333333"><span style="color:#333333">&lt;</span></span><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a">groupId</span></span></span></span></span><span style="color:#333333"><span style="color:#333333">&gt;</span></span></span>org.springframework.boot<span style="color:#333333"><span style="color:#333333"><span style="color:#333333">&lt;/</span></span><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a">groupId</span></span></span></span></span><span style="color:#333333"><span style="color:#333333">&gt;</span></span></span><span style="color:#333333"><span style="color:#333333"><span style="color:#333333">&lt;</span></span><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a">artifactId</span></span></span></span></span><span style="color:#333333"><span style="color:#333333">&gt;</span></span></span>spring-boot-starter-tomcat<span style="color:#333333"><span style="color:#333333"><span style="color:#333333">&lt;/</span></span><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a">artifactId</span></span></span></span></span><span style="color:#333333"><span style="color:#333333">&gt;</span></span></span><span style="color:#333333"><span style="color:#333333"><span style="color:#333333">&lt;/</span></span><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a">exclusion</span></span></span></span></span><span style="color:#333333"><span style="color:#333333">&gt;</span></span></span><span style="color:#333333"><span style="color:#333333"><span style="color:#333333">&lt;/</span></span><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a">exclusions</span></span></span></span></span><span style="color:#333333"><span style="color:#333333">&gt;</span></span></span><span style="color:#333333"><span style="color:#333333"><span style="color:#333333">&lt;/</span></span><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a">dependency</span></span></span></span></span><span style="color:#333333"><span style="color:#333333">&gt;</span></span></span><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">&lt;!-- Use smart-servlet instead --&gt;</span></span></span><span style="color:#333333"><span style="color:#333333"><span style="color:#333333">&lt;</span></span><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a">dependency</span></span></span></span></span><span style="color:#333333"><span style="color:#333333">&gt;</span></span></span><span style="color:#333333"><span style="color:#333333"><span style="color:#333333">&lt;</span></span><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a">groupId</span></span></span></span></span><span style="color:#333333"><span style="color:#333333">&gt;</span></span></span>org.smartboot.servlet<span style="color:#333333"><span style="color:#333333"><span style="color:#333333">&lt;/</span></span><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a">groupId</span></span></span></span></span><span style="color:#333333"><span style="color:#333333">&gt;</span></span></span><span style="color:#333333"><span style="color:#333333"><span style="color:#333333">&lt;</span></span><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a">artifactId</span></span></span></span></span><span style="color:#333333"><span style="color:#333333">&gt;</span></span></span>smart-servlet-spring-boot-starter<span style="color:#333333"><span style="color:#333333"><span style="color:#333333">&lt;/</span></span><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a">artifactId</span></span></span></span></span><span style="color:#333333"><span style="color:#333333">&gt;</span></span></span><span style="color:#333333"><span style="color:#333333"><span style="color:#333333">&lt;</span></span><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a">version</span></span></span></span></span><span style="color:#333333"><span style="color:#333333">&gt;</span></span></span>0.6<span style="color:#333333"><span style="color:#333333"><span style="color:#333333">&lt;/</span></span><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a">version</span></span></span></span></span><span style="color:#333333"><span style="color:#333333">&gt;</span></span></span><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">&lt;!--最新版本 --&gt;</span></span></span><span style="color:#333333"><span style="color:#333333"><span style="color:#333333">&lt;/</span></span><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a">dependency</span></span></span></span></span><span style="color:#333333"><span style="color:#333333">&gt;</span></span></span><span style="color:#333333"><span style="color:#333333"><span style="color:#333333">&lt;/</span></span><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a">dependencys</span></span></span></span></span><span style="color:#333333"><span style="color:#333333">&gt;</span></span></span></code></pre><h3>方式三：发行包</h3><p style="color:black; margin-left:0; margin-right:0; text-align:left">发行包适用于 War 包的部署方式，也是生产环境中常用的一种形式。（PS：联系作者获取最新版）</p><blockquote><p style="color:black; margin-left:0; margin-right:0">出于项目发展需要，smart-servlet 将面向信创企业提供 10 份为期 1 年的&nbsp;<strong><a href="https://smartboot.gitee.io/smart-servlet/backers.html#%E5%86%85%E6%B5%8B%E4%BC%81%E4%B8%9A">免费试用</a></strong>&nbsp;资格。</p><p style="color:black; margin-left:0; margin-right:0"><strong>名额有限，先到先得~</strong></p></blockquote></div>
                                    ]]>
            </description>
            <pubDate>Fri, 12 Jan 2024 01:10:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/275334/smart-servlet-updated</guid>
            <link>https://www.oschina.net/news/275334/smart-servlet-updated</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[魔豆文库 moredoc v2.3.0 发布，优化页面体验和全文索引]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><a href="https://gitee.com/link?target=https%3A%2F%2Fstatic.sitestack.cn%2Fprojects%2Fmoredoc%2F25025565fbb0a50a52bcb76e9586ac42.png" target="_blank"><img alt="魔豆文库" src="https://static.sitestack.cn/projects/moredoc/25025565fbb0a50a52bcb76e9586ac42.png" referrerpolicy="no-referrer"></a></p><p>魔豆文库 MOREDOC，使用 Go 语言开发实现的文库解决方案，<a href="https://gitee.com/truthhun/DocHub" target="_blank">dochub</a>文库的重构版本，支持 office (全部类型)、PDF、TXT、EPUB、MOBI 等多种文档格式的在线阅读浏览，支持<code>无限级分类</code>、<code>文档批量上传</code>、<code>文档批量转换</code>、<code>全文搜索</code>、<code>云存储</code>、<code>网络爬虫</code>、<code>VIP</code>、<code>手机号登录注册</code>以及<code>支付宝</code>和<code>微信支付</code>等功能，拥有简洁美观的用户视觉和功能体验，以及配套的<a href="https://gitee.com/mnt-ltd/moredoc-app" target="_blank">微信小程序</a>。</p><h2>技术栈</h2><ul><li>Golang ：gin + gRPC + GORM</li><li>Vue.js : nuxt2 + element-ui</li><li>Database : MySQL 5.7+</li></ul><h2>升级日志</h2><h3>社区版 (开源版) 升级日志</h3><ul><li><p>修复因设置了广告起止时间后网站广告无法正常显示的问题。</p></li><li><p>修复列表页等右侧关键字、相关文档列表在页面滚动到底部出现遮挡的问题。</p></li><li><p>支持隐藏文档列表页右侧关键字（在 <code>系统配置</code>-&gt; <code>展示配置</code>中可设置<code>隐藏关键字</code>）。</p></li><li><p>支持在前台快速管理文档: 对于普通用户，可以编辑和删除文档，对于有权限的网站管理员，还可以对文档进行禁用或者是推荐。</p><p><img height="132" src="https://oscimg.oschina.net/oscnet/up-efc63f9c21633c63b0555d721646c793cad.png" width="520" referrerpolicy="no-referrer"></p></li><li><p>在首页、文档列表页、文档预览页等增加页面骨架 (Skeleton)，用以消除页面内容在加载时出现闪动的情况。</p><p><img alt="" src="https://static.sitestack.cn/projects/moredoc/202401/17a971b26696e604.png" referrerpolicy="no-referrer"></p></li><li><p>增加文档卡片，以便快速了解文档信息</p><p><img alt="" src="https://static.sitestack.cn/projects/moredoc/202401/17a938c9b7cfc85a.png" referrerpolicy="no-referrer"></p></li><li><p>在文档预览页，增加显示用户最新上传文档</p><p><img alt="" src="https://static.sitestack.cn/projects/moredoc/202401/17a9399fff97b53b.png" referrerpolicy="no-referrer"></p></li><li><p>增加文档搜索记录管理，用以了解搜索响应耗时、搜索结果质量等，以便跟进补充、丰富和完善网站文档质量和数量。</p><p><img alt="" src="https://static.sitestack.cn/projects/moredoc/202401/17a971a940a1ca82.png" referrerpolicy="no-referrer"></p></li><li><p>调整面包屑导航，用卡片代替垂直分类展示，以避免分类过多时造成的页面问题。</p><p><img alt="" src="https://static.sitestack.cn/projects/moredoc/202401/17a971a11a89b3f8.png" referrerpolicy="no-referrer"></p></li></ul><h3>专业版升级日志</h3><blockquote><p>专业版升级内容包含社区版升级内容</p></blockquote><ul><li><p>在<code>系统设置</code>-&gt;<code>Oauth 配置</code>，显示相应 Oauth 的回调和申请链接</p><p><img alt="" src="https://static.sitestack.cn/projects/moredoc/202401/17a93f89b65f0b32.png" referrerpolicy="no-referrer"></p></li><li><p>优化文档采集功能 (epub 电子书采集检测以及文档标题提取)；允许控制是否显示采集文档来源 (在 <code>系统配置</code>-&gt; <code>展示配置</code>中可设置<code>显示文档来源</code>)</p><p><img alt="" src="https://static.sitestack.cn/projects/moredoc/202401/17a93fa3cbbf658a.png" referrerpolicy="no-referrer"></p></li><li><p>优化内置的全文搜索引擎，降低全文索引更新时对服务器硬件资源的占用。<code>app.toml</code>相关配置项：</p><div><pre><code> [system]
 <span># 最大使用内存，用于一定程度减少程序对内存的占用。单位为 GB，如果为 0，则表示不限制。一般不建议设置。</span><span>maxMemory =</span><span>0</span><span># 最大使用 CPU 核心数，如果为 0，则表示不限制。一般不建议设置。</span><span>maxCPU =</span><span>0</span><span># 文档转换并发数，如果为 0，则表示自动根据 CPU 核数设置。一般不建议设置。</span><span>threads =</span><span>0</span><span># 文档索引时的服务器负载限制，在更新全文索引时，不定时获取当前服务器负载情况，若服务器负载过高，则临时暂停进行全文检索，用于减轻更新全文索引时对服务器资源的占用。</span><span># 如果为 0，则表示不限制。如果有必要设置，则建议设置为 CPU 核心数，如您的服务器是 4 核，则设置为 4，设置之后，可能会导致全文索引更新时间变长。</span><span># 低配服务器建议设置，中高配服务器可不设置。</span><span>indexLoadAvg =</span><span>0</span></code></pre><div>
    &nbsp;
   </div></div></li></ul><h2>升级方式</h2><ol><li><p>从 Gitee 下载对应您的服务器系统的最新版本程序：<a href="https://gitee.com/mnt-ltd/moredoc/releases" target="_blank">https://gitee.com/mnt-ltd/moredoc/releases</a></p></li><li><p>上传到服务器，解压覆盖。专业版可以根据需要，在<code>app.toml</code>中增加<code>[system]</code>的配置。</p></li><li><p>更新数据库表结构</p><blockquote><p>注意：本次升级，存在数据库表结构变更，请务必执行 syncdb 操作</p></blockquote><div><pre><code><span># windows</span>
moredoc.exe syncdb

<span># Linux/Unix</span>
./moredoc syncdb
</code></pre><div>
    &nbsp;
   </div></div></li><li><p>重启程序。</p></li></ol><h2>演示站点</h2><p>程序新功能体验，一睹为快！</p><ul><li>网址： <a href="https://gitee.com/link?target=https%3A%2F%2Fmoredoc.mnt.ltd" target="_blank">https://moredoc.mnt.ltd</a></li><li>管理员账号： admin</li><li>管理员密码： mnt.ltd</li></ul><blockquote><p>演示站点，每天凌晨 1:00 ~ 6:00，每隔一小时重置一次全部数据</p></blockquote><h2>开源地址</h2><p><strong>魔豆文库 MOREDOC</strong></p><ul><li>Gitee - <a href="https://gitee.com/mnt-ltd/moredoc" target="_blank">https://gitee.com/mnt-ltd/moredoc</a></li><li>Github - <a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fmnt-ltd%2Fmoredoc" target="_blank">https://github.com/mnt-ltd/moredoc</a></li></ul><p><strong>配套小程序 ONEDOC</strong></p><ul><li>Gitee - <a href="https://gitee.com/mnt-ltd/onedoc" target="_blank">https://gitee.com/mnt-ltd/onedoc</a></li><li>Github - <a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fmnt-ltd%2Fonedoc" target="_blank">https://github.com/mnt-ltd/onedoc</a></li></ul><h2>使用手册</h2><p>关于魔豆文库安装部署、二次开发等更详细的教程，详见书栈网<a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bookstack.cn%2Fbooks%2Fmoredoc" target="_blank">《魔豆文库使用手册》</a></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 12 Jan 2024 00:43:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/275328/moredoc-2-3-0-released</guid>
            <link>https://www.oschina.net/news/275328/moredoc-2-3-0-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[国产数据库管理工具 CloudDM v2.4.2 发布，StarRocks 兼容修复]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div><div><p style="margin-left:0; margin-right:0"><span>CloudDM<span>&nbsp;</span></span><span style="color:#333333">是<span>&nbsp;</span></span><span>ClouGence</span><span style="color:#333333"><span>&nbsp;</span>公司推出的一款</span><strong><span>一站式多数据源开发管理工具</span></strong><span style="color:#333333">，使用它可以方便地访问和管理<span>&nbsp;</span></span><span>MySQL、Oracle、PostgreSQL、阿里云 RDS、Greenplum、TiDB、Redis、StarRocks、Doris、SelectDB、SQL SERVER、ClickHouse、OceanBase 、PolarDB-X 、IBM Db2 等多种不同类型的数据库。通过 CloudDM 丰富的数据源支持可以避免在多个专业工具之间切换，从而提高工作效率。</span></p><p style="margin-left:0; margin-right:0"><span>它是本地化的应用程序，没有后台进程。和<span>&nbsp;</span></span><strong><span>DataGrip</span></strong><span>、</span><strong><span>Navicat</span></strong><span><span>&nbsp;</span>一样在安装完成后，只需要双击应用程序图标，便可以方便的管理位于本地计算机或远程计算机上的数据库。已经支持<span>&nbsp;</span></span><strong><span>Windows</span></strong><span>、</span><strong><span>MacOS</span></strong><span><span>&nbsp;</span>和<span>&nbsp;</span></span><strong><span>Linux</span></strong><span><span>&nbsp;</span>主流操作系统。</span></p></div></div><p style="color:#333333; margin-left:0; margin-right:0; text-align:center"><img src="https://oscimg.oschina.net/oscnet/up-c0a92ca7654a775e970ab24569abe3fe44d.png" referrerpolicy="no-referrer"></p><div><div><div><div><div><h2><span>更新内容</span></h2><div><ul><li><span>[新增]</span><ul><li><span>新增 Redis DBSIZE 命令</span></li></ul></li><li><span style="color:#333333">[优化]</span><ul><li><span style="color:#333333">​​​​​​​​​​​​​​</span><span>优化 StarRocks 数据库表结构编辑器组件布局</span></li><li><span>优化 Redis KEYS 命令执行，速度更快</span></li></ul></li><li><span style="color:#333333">[修复]</span><ul><li><span style="color:#333333">​​​​​​​</span><span>修复 StarRocks 数据库主键模型表数据编辑时无法修改数据的问题</span></li><li><span>修复 StarRocks 数据库表结构编辑器 Order By 失效的问题</span></li><li><span>修复 StarRocks 数据库列默认值失效的问题</span></li><li><span>修复 StarRocks 数据库列 bitmap 类型无法识别的问题</span></li><li><span>修复 StarRocks 数据库列信息点击报错的问题</span></li><li><span>修复 Doris 数据库表编辑语句生成错误问题</span></li><li><span>修复 ClickHouse 数据库重命名语句未指定 Schema 的问题</span></li><li><span>修复，针对同一个表的表结构编辑操作，出现多个重复窗口的问题</span></li><li><span>修复，在一些情况下打开的 SQL 查询页面会出现初始事务状态设置错误的问题</span>​​​​​​​</li></ul></li></ul></div></div></div><h2><span>下载与反馈</span></h2><ul><li><span>产品官网：</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.clougence.com%2Fclouddm-personal" target="_blank"><span>https://www.clougence.com/clouddm-personal</span></a></li><li><span>问题反馈：</span><a href="https://gitee.com/clougence/clouddm-issue/issues" target="_blank"><span>https://gitee.com/clougence/clouddm-issue/issues</span></a></li><li>Release Node：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.clougence.com%2Fdmp-doc%2Freleaseinfo%2Fdesktop_2_4_2" target="_blank">https://www.clougence.com/dmp-doc/releaseinfo/desktop_2_4_2</a></li><li><span style="color:#333333">微信交流群：访问产品官网，扫描右侧二维码即可加入</span>​​​​​​​</li></ul></div></div></div></div>
                                    ]]>
            </description>
            <pubDate>Thu, 11 Jan 2024 10:02:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/275276/clouddm-2-4-2-released</guid>
            <link>https://www.oschina.net/news/275276/clouddm-2-4-2-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[【店滴云】V1.4.6 发布，完善代码生成应用 help]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff; color:#40485b">1、修复代码助手生成过程中检索模型的 bug</span><br><span style="background-color:#ffffff; color:#40485b">2、插件安装增加排序，方便主插件和子插件的区分</span></p><p><span style="background-color:#ffffff; color:#40485b">&nbsp; &nbsp; &nbsp; &nbsp;店滴云，让经营场所，更智能。围绕茶室、酒店、健身房、公寓、出租房等经营性场所进行物联网改造。同时支持多种物联网通信协议，开放智能门锁，智能开关，智能手环的 sdk 供开发者使用。</span></p><p><img alt="" height="600" src="https://oscimg.oschina.net/oscnet/up-667a4cef6983afe48642c629a91980e8748.png" width="1920" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 11 Jan 2024 07:55:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/275237/ddiot-1-4-6-released</guid>
            <link>https://www.oschina.net/news/275237/ddiot-1-4-6-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[TimescaleDB 2.13.1 发布，基于 PostgreSQL 的时序数据库]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff; color:#333333">TimescaleDB 是一个开源数据库，旨在使 SQL 可扩展到时间序列数据，基于 PostgreSQL 构建的，并打包为 PostgreSQL 扩展程序，提供跨时间和空间的自动分区，以及完整的 SQL 支持。</span></p><p style="margin-left:0px; margin-right:0px; text-align:left">TimescaleDB 2.13.1 现已发布，<span style="background-color:#ffffff; color:#1f2328">此版本包含自 2.13.0 版本以来的错误修复。</span><span style="background-color:#ffffff">具体更新内容如下</span><span style="color:#333333"><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>：</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:start"><strong><span><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>Bug 修复</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ftimescale%2Ftimescaledb%2Fpull%2F6365" target="_blank">#6365</a>&nbsp;在近似行数中使用 numrows_pre_compression</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ftimescale%2Ftimescaledb%2Fpull%2F6377" target="_blank">#6377</a>&nbsp;在 PG16 中使用已处理的组子句</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ftimescale%2Ftimescaledb%2Fpull%2F6384" target="_blank">#6384</a>&nbsp;更改 bgw_log_level 以使用 PGC_SUSET</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ftimescale%2Ftimescaledb%2Fpull%2F6393" target="_blank">#6393</a>&nbsp;禁用表达式的向量化总和。</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ftimescale%2Ftimescaledb%2Fpull%2F6405" target="_blank">#6405</a>&nbsp;从物化数据中读取 CAgg 水印</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ftimescale%2Ftimescaledb%2Fpull%2F6408" target="_blank">#6408</a>&nbsp;修复 PG16 中的 gapfill 的 groupby pathkeys</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ftimescale%2Ftimescaledb%2Fpull%2F6428" target="_blank">#6428</a>&nbsp;修复 DML 解压期间的索引匹配</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ftimescale%2Ftimescaledb%2Fpull%2F6439" target="_blank">#6439</a>&nbsp;修复 PG16 上的压缩块权限处理</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ftimescale%2Ftimescaledb%2Fpull%2F6443" target="_blank">#6443</a>&nbsp;修复丢失的并发 CAgg 更新</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ftimescale%2Ftimescaledb%2Fpull%2F6454" target="_blank">#6454</a>&nbsp;修复压缩块上的唯一表达式索引</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ftimescale%2Ftimescaledb%2Fpull%2F6465" target="_blank">#6465</a>&nbsp;修复解压排序逻辑中释放路径的使用</li></ul><p><span style="background-color:#ffffff; color:#333333">详情可</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ftimescale%2Ftimescaledb%2Freleases%2Ftag%2F2.13.1" target="_blank">查看更新说明</a><span style="background-color:#ffffff; color:#333333">。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 11 Jan 2024 07:33:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/275227/imescaledb-2-13-1-released</guid>
            <link>https://www.oschina.net/news/275227/imescaledb-2-13-1-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Dante OSS v3.1.7.3 已经发布，简化 Minio 操作]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Dante OSS v3.1.7.3 已经发布，简化 Minio 操作</p><p>此版本更新内容包括：</p><p>⚗️ feat: v3.1.7.3</p><ul><li>主要更新 
  <ul><li>[升级] Dante Engine 版本升级至 3.1.7.3</li><li>[升级] aws-java-sdk-s3 版本升级至 1.12.634</li><li>[升级] minio 镜像版本升级至 RELEASE.2024-01-11T07-46-16Z</li></ul></li></ul><p>详情查看：<a href="https://gitee.com/herodotus/dante-oss/releases/v3.1.7.3">https://gitee.com/herodotus/dante-oss/releases/v3.1.7.3</a></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 11 Jan 2024 06:51:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/275423/dante-oss-3-1-7-3-released</guid>
            <link>https://www.oschina.net/news/275423/dante-oss-3-1-7-3-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Memcached 1.6.23 发布，高性能分布式缓存系统]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Memcached 1.6.23 现已发布，<span><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>此版本仅影响 proxy code。请求调度 API 已重做。有关 API 的完整文档，请参阅<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmemcached%2Fmemcached%2Fwiki%2FProxy" target="_blank">此处</a>。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:start"><span><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>官方提醒，有关此版本中新的 API 虽然已经做了大量工作来验证代码，但这仍然是一个很大的变化。建议用户在部署前仔细测试。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:start"><span><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>以前的<code>mcp.await</code>和<code>pool(request)</code>调用表单已被积极弃用，相关代码将在 memcached 的下一个版本中删除。在再次升级之前，用户需要将配置脚本移至新的 API。此举是为了简化内部代码并解除旧 API 所阻碍的性能和稳定性功能。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:start"><span><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>以前在默认情况下，代理使用单个后台线程向后端服务器发出 IO。这通常会阻止扩展到超过 4 个 CPU 核心，但会减少使用的 TCP 套接字数量并增加到后端的管道传输。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>从此版本开始，默认情况是直接从工作线程发出后端 IO。这种行为可以在全局或每个池的基础上进行调整。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:start"><span><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>项目团队的目标是稳定代理，从现在开始专注于代码清理和较小的更改。还计划在下一个版本中直接在 memcached 中加入新的<code>routelib</code>，以提高易用性。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:start"><strong><span><span><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>修复</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></p><ul><li>proxy：添加<code>mcp.backend_use_iothread(bool)</code>+错误修复</li><li>proxy：lua API 版本 2</li><li>proxy：添加<code>mcp.time_[real|mono]_millis()</code></li></ul><p style="text-align:start"><strong><span><span><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>新功能</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></p><p style="text-align:start"><span><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>Proxy API version 2：</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><ul><li>通过允许对每个请求重复使用预先计算来提高性能</li><li>通过避免在请求时分配、防止 GC 使用来提高性能</li><li>允许递归函数调用</li><li>让未来的 API 扩展更加容易</li><li>针对发出的每个后端请求的自定义回调</li></ul><p>详情可<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmemcached%2Fmemcached%2Fwiki%2FReleaseNotes1623" target="_blank">查看更新说明</a>。&nbsp;</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 11 Jan 2024 06:12:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/275213/memcached-1-6-23-released</guid>
            <link>https://www.oschina.net/news/275213/memcached-1-6-23-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[RediSearch 2.8.11 发布，高性能全文搜索引擎]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff; color:#000000">RediSearch&nbsp;2.8.11 现已发布，这是</span><span style="background-color:#ffffff; color:#1f2328">&nbsp;RediSearch 2.8 的一个维护版本</span><span style="background-color:#ffffff; color:#000000">。更新紧迫性为</span><code>MODERATE</code><span style="background-color:#ffffff; color:#000000">，</span><span style="background-color:#ffffff; color:#1f2328">计划升级服务器，但并不紧急。</span><span style="background-color:#ffffff; color:#000000">RediSearch 是 RedisLabs 团队开发的一个高性能全文搜索引擎，可作为一个 Redis Module 运行在 Redis 上。</span></p><h4 style="margin-left:0px; margin-right:0px; text-align:left"><strong><span><span><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>Details</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></h4><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><span><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span><strong>Bug 修复：</strong></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FRediSearch%2FRediSearch%2Fpull%2F4324" target="_blank">#4324</a><span>&nbsp;</span>内部集群机制没有等到来自 shards 的所有回复，导致崩溃 (MOD-6287)</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FRediSearch%2FRediSearch%2Fpull%2F4297" target="_blank">#4297</a><span>&nbsp;</span>使用带有 LOAD 阶段的 FT.AGGREGATE 时，执行加载器无法缓冲正确的结果，可能导致崩溃 (MOD-6385)</li></ul><p style="color:#1f2328; text-align:start"><strong style="color:#1f2328">Improvements：</strong></p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FRediSearch%2FRediSearch%2Fpull%2F4264" target="_blank">#4264</a><span>&nbsp;</span><code>FT.PROFILE</code><span>上时间报告计数器的粒度&nbsp;</span>(MOD-6002)</li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">更新说明：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FRediSearch%2FRediSearch%2Freleases%2Ftag%2Fv2.8.11" target="_blank">https://github.com/RediSearch/RediSearch/releases/tag/v2.8.11</a></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 11 Jan 2024 05:50:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/275414/redisearch-2-8-11-released</guid>
            <link>https://www.oschina.net/news/275414/redisearch-2-8-11-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Golang 通用代码生成器仙童已发布电音仙女尝鲜版四及其介绍视频，介绍了 PostgreSQL 代码生成]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div><div><div><p style="margin-left:0; margin-right:0"><strong>Golang 通用代码生成器仙童已发布 2.4.0 电音仙女尝鲜版四及其介绍视频，详细介绍了 PostgreSQL 代码生成</strong></p><p style="margin-left:0; margin-right:0">Golang 通用代码生成器仙童已发布 2.4.0 电音仙女尝鲜版四及其介绍视频。详细介绍了 PostgreSQL 代码生成。即生成后端数据库为 PostgreSQL 的 golang web 代码。并同时生成对应的 Nodejs 的 ElementUI 的前端项目。</p><p style="margin-left:0; margin-right:0">尝鲜版四的视频请见：</p><p style="margin-left:0; margin-right:0"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1RK411e7dj%2F" target="_blank">https://www.bilibili.com/video/BV1RK411e7dj/</a></p><p style="margin-left:0; margin-right:0"><br> 尝鲜版三视频请见：<br><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1Jc411b7N6%2F" target="_blank">https://www.bilibili.com/video/BV1Jc411b7N6/</a></p><p style="margin-left:0; margin-right:0">三大部分生成功能群即高级定制功能群，部分生成功能群和自动生成差异版本功能群。此三个功能群为用户在整个软件开发周期中多次，迭代式的全程使用通用代码生成器设计。极大的提高了工作效率，欢迎试用。<br> 尝鲜版二的视频请见：</p><p style="margin-left:0; margin-right:0"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV15N4y1x75p%2F" target="_blank">https://www.bilibili.com/video/BV15N4y1x75p/</a></p><p style="margin-left:0; margin-right:0"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1Q64y1H75r%2F" target="_blank">https://www.bilibili.com/video/BV1Q64y1H75r/</a></p><p style="margin-left:0; margin-right:0">尝鲜版一介绍视频请见：</p><p style="margin-left:0; margin-right:0">正常模式：</p><p style="margin-left:0; margin-right:0"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1fw411V77i%2F" target="_blank">https://www.bilibili.com/video/BV1fw411V77i/</a></p><p style="margin-left:0; margin-right:0">哑数据模式：</p><p style="margin-left:0; margin-right:0"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1nu4y1K7sz%2F" target="_blank">https://www.bilibili.com/video/BV1nu4y1K7sz/</a></p><p style="margin-left:0; margin-right:0">电音仙女版本支持日期和日期时间。支持三大部分生成功能群。支持枚举。支持哑数据模式。支持用户管理自己的资料和密码。技术状态和最新版的 Rust 通用代码生成器红莲的技术状态一致。非常便利大家的使用。</p><p style="margin-left:0; margin-right:0"><span style="background-color:#ffffff; color:#333333">代码生成器项目地址：</span><a href="https://gitee.com/jerryshensjf/Fairchild">https://gitee.com/jerryshensjf/Fairchild</a><br><span style="background-color:#ffffff; color:#333333">二进制发布包下载地址：</span><a href="https://gitee.com/jerryshensjf/Fairchild/attach_files">https://gitee.com/jerryshensjf/Fairchild/attach_files</a></p><h3>项目图片</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="Image description" src="https://images.gitee.com/uploads/images/2021/1104/210826_16fb1ca2_1203742.jpeg" referrerpolicy="no-referrer"></p><h3>最新大版本号</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">正在研发的最新大版本号是仙童 2.4.0 电音仙女　TechnoFairy 短名 TF。对标 java 通用代码生成器光 2.4.0 电音之王和 Rust 通用代码生成器红莲。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="输入图片说明" src="https://gitee.com/jerryshensjf/Fairchild/raw/master/tf2.jpg" referrerpolicy="no-referrer"></p><h3>百度话题</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">＃通用代码生成器＃</p><h3>代码生成器截图</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="Image description" src="https://images.gitee.com/uploads/images/2021/1112/202857_c7a40dc0_1203742.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="Image description" src="https://images.gitee.com/uploads/images/2021/1112/202911_c2b9a341_1203742.png" referrerpolicy="no-referrer"></p><h3>Vue 独立前端截图</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="输入图片说明" src="https://gitee.com/jerryshensjf/Fairchild/raw/master/Fc_login.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="输入图片说明" src="https://gitee.com/jerryshensjf/Fairchild/raw/master/fc_list.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="输入图片说明" src="https://gitee.com/jerryshensjf/Fairchild/raw/master/fc_img.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="输入图片说明" src="https://gitee.com/jerryshensjf/Fairchild/raw/master/fc_mtm2.png" referrerpolicy="no-referrer"></p><h3>代码生成物截图</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="Image description" src="https://images.gitee.com/uploads/images/2021/1122/151921_f4271962_1203742.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="Image description" src="https://images.gitee.com/uploads/images/2021/1122/151935_cf6c7223_1203742.png" referrerpolicy="no-referrer"></p></div></div></div></div>
                                    ]]>
            </description>
            <pubDate>Thu, 11 Jan 2024 03:22:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/275194</guid>
            <link>https://www.oschina.net/news/275194</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[go-carbon v2.3.4 发布，轻量级、语义化、对开发者友好的 golang 时间处理库]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">carbon 是一个轻量级、语义化、对开发者友好的 Golang 时间处理库，支持链式调用、农历和 gorm、xorm 等主流 orm。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">目前已被<span><span>&nbsp;</span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fyinggaozhen%2Fawesome-go-cn%23%25E6%2597%25A5%25E6%259C%259F%25E5%2592%258C%25E6%2597%25B6%25E9%2597%25B4" target="_blank">awesome-go-cn</a><span><span>&nbsp;</span></span>收录，如果您觉得不错，请给个 star 吧</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgolang-module%2Fcarbon" target="_blank">github.com/golang-module/carbon</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/golang-module/carbon" target="_blank">gitee.com/golang-module/carbon</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>更新日志</strong></p><ol><li>Default 结构体新增 Locale 字段用于设置全局当地语言</li><li>新增 IsAM 和 IsPM 方法</li><li>新增 Max 和 Min 方法</li><li>优化 LoadTag 方法，将 strings.Contains 改成 strings.HasPrefix</li><li>提高单元测试和性能测试覆盖率</li></ol></div>
                                    ]]>
            </description>
            <pubDate>Thu, 11 Jan 2024 01:52:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/275342/go-carbon-2-3-4-released</guid>
            <link>https://www.oschina.net/news/275342/go-carbon-2-3-4-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[🎉 领域模型即服务 | Wow 2.13.6 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><a href="https://ahoowang.gitee.io/wow/"><img alt="Wow:基于 DDD、EventSourcing 的现代响应式 CQRS 架构微服务开发框架" src="https://static.oschina.net/uploads/img/202312/13135012_Zb9v.svg" width="150" referrerpolicy="no-referrer"></a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><strong>领域驱动</strong><span>&nbsp;</span>|<span>&nbsp;</span><strong>事件驱动</strong><span>&nbsp;</span>|<span>&nbsp;</span><strong>测试驱动</strong><span>&nbsp;</span>|<span>&nbsp;</span><strong>声明式设计</strong><span>&nbsp;</span>|<span>&nbsp;</span><strong>响应式编程</strong><span>&nbsp;</span>|<span>&nbsp;</span><strong>命令查询职责分离</strong><span>&nbsp;</span>|<span>&nbsp;</span><strong>事件溯源</strong></p><blockquote><p style="margin-left:0; margin-right:0"><strong>官方文档：</strong><img alt="👉" height="14" src="https://cn-assets.gitee.com/assets/emoji/point_right-8d392cf32998e3bca12bb7b4ee10dae0.png" width="14" referrerpolicy="no-referrer"><span>&nbsp;</span><a href="https://ahoowang.gitee.io/wow/" target="_blank">https://ahoowang.gitee.io/wow/</a><span>&nbsp;</span><img alt="👈" height="14" src="https://cn-assets.gitee.com/assets/emoji/point_left-4570b6929b8880ab2e8b8031007fef18.png" width="14" referrerpolicy="no-referrer"></p></blockquote><h2>更新内容</h2><blockquote><p style="margin-left:0; margin-right:0">增强<span>&nbsp;</span><em>BI</em><span>&nbsp;</span>模块生成<em>ETL</em>实时同步脚本特性。</p></blockquote><blockquote><ul><li>聚合命令（<code>Command</code>）: 包含用户发送的所有命令。</li><li>状态事件（<code>StateEvent</code>）: 包含聚合状态的完整变化历史，同时记录了引发这些状态变更的事件关联信息。</li><li>最新状态事件（<code>LastStateEvent</code>）: 包含最新的聚合状态，类似于传统数据库中的表，专门用于存储每个聚合根的最新状态信息。</li><li>快照展开视图: 相比于传统数据库的关系表，聚合根快照是以聚合根为中心组织在一起的。 一对一、一对多的关系也是维护在聚合根内部的，所以并不会出现关系表的情况。 但是在数据分析时，我们需要将聚合根的快照展开，以便基于关系模式进行更有深度的数据分析。 Wow 框架提供的 ETL 脚本工具能够将聚合根快照逐层展开，形成关系清晰的视图，该展开视图甚至可以作为<strong>数据仓库的大宽表</strong>，为业务决策提供更清晰、更全面的数据支持。</li></ul></blockquote><ul><li>特性 (core):<span>&nbsp;</span><code>EventStore</code><span>&nbsp;</span>支持<span>&nbsp;</span><code>tailCursorId</code>/<code>archiveAggregateId</code><span>&nbsp;</span>API 以提升<span>&nbsp;</span><code>scanAggregateId</code><span>&nbsp;</span>性能</li><li>特性 (openapi): 添加<span>&nbsp;</span><code>ArchiveAggregateIdRouteSpec</code><span>&nbsp;</span>API 以支持<span>&nbsp;</span><code>archiveAggregateId</code></li><li>特性 (core): 为<span>&nbsp;</span><code>DomainEventFunctionFilter</code><span>&nbsp;</span>添加<span>&nbsp;</span><code>checkpoint</code><span>&nbsp;</span>以提升<span>&nbsp;</span><code>Debug</code><span>&nbsp;</span>能力</li><li>特性 (bi): 支持展开状态事件（<code>StateEvent</code>）的领域事件，以提升基于领域事件数据分析的便捷性</li><li>依赖 (dashboard): 升级<span>&nbsp;</span><code>angular-cli</code><span>&nbsp;</span>到<span>&nbsp;</span><code>v17.0.10</code></li><li>特性 (bi): 父级展开视图支持获取一对多子字段。</li><li>特性 (bi): 将服务名称中的<span>&nbsp;</span><code>-</code><span>&nbsp;</span>字符替换为<span>&nbsp;</span><code>_</code>，以防止表名失效。</li><li>特性 (bi): 使用双<span>&nbsp;</span><code>_</code><span>&nbsp;</span>字符作为逐层展开列的分隔符，以防止命名冲突。</li></ul><h3>ETL 同步流程</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="ETL 同步流程" src="https://foruda.gitee.com/images/1704878793697689592/5fda25c1_384561.png" referrerpolicy="no-referrer"></p><h3>传统架构 VS 事件溯源</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="传统架构 VS 事件溯源" src="https://foruda.gitee.com/images/1704878807657006766/300ee974_384561.png" referrerpolicy="no-referrer"></p><h2>简介</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><em>Wow</em><span>&nbsp;</span>是一个基于领域驱动设计和事件溯源的现代响应式<span>&nbsp;</span><em>CQRS</em><span>&nbsp;</span>微服务开发框架，历经多年生产环境验证。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">旨在帮助开发者构建现代化的、高性能且易于维护的微服务应用程序，充分发挥领域驱动设计和事件溯源等模式优势的同时降低应用的复杂性以及实践成本。</p><blockquote><p style="margin-left:0; margin-right:0">值得一提的是，领域驱动设计和事件溯源并非微服务架构的专属，<em>Wow</em><span>&nbsp;</span>框架不仅适用于微服务开发，同样也可用于构建基于领域驱动设计的单体应用程序。</p></blockquote><h2>快速开始</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://ahoowang.gitee.io/wow/guide/getting-started.html">使用 Wow 项目模板快速创建基于 Wow 框架的 DDD 项目</a></p><h2>特性概览</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-Features" src="https://gitee.com/AhooWang/Wow/raw/main/documentation/docs/public/images/Features.png" referrerpolicy="no-referrer"></p><h2>架构图</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-Architecture" src="https://gitee.com/AhooWang/Wow/raw/main/documentation/docs/public/images/Architecture.svg" referrerpolicy="no-referrer"></p><h2>背景</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">随着业务的发展和复杂性的增加，传统的架构和开发方式逐渐显露出瓶颈。<em>领域驱动设计</em>和<em>事件溯源</em>等理念在提高系统设计的灵活性和可维护性方面表现出色，但在实践中常常需要面对复杂性和学习曲线的挑战。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><em>Wow</em><span>&nbsp;</span>框架的目标是以简单易用的方式将领域驱动设计和事件溯源等理念融入到微服务应用开发中，降低开发者的学习成本，提高开发效率。 通过提供现代响应式的<span>&nbsp;</span><em>CQRS</em><span>&nbsp;</span>架构和相关组件，<em>Wow</em><span>&nbsp;</span>框架旨在让开发者更专注于业务逻辑的实现，而不必过多关心底层技术细节。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">经过多年的实践和不断的演进，<em>Wow</em><span>&nbsp;</span>框架在生产环境中得到了验证，积累了丰富的经验。这些经验和反馈不仅丰富了框架的功能和性能，也为持续的改进和优化提供了宝贵的指导。</p><h2>对于开发者而言，<em>Wow</em><span>&nbsp;</span>框架意味着什么？</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">我曾告诫我的团队：如果我们过于依赖<em>数据驱动设计</em>而忽视<em>领域驱动设计</em>，我们最终将沦为<span>&nbsp;</span><em>CRUD</em><span>&nbsp;</span>工程师。</p><blockquote><p style="margin-left:0; margin-right:0"><em>CRUD</em><span>&nbsp;</span>工程师的竞争力和可替代性可想而知，这或许是为何会有<span>&nbsp;</span><em>35</em><span>&nbsp;</span>岁效应，企业显然更倾向于招募没有太多生活羁绊、更加廉价的<span>&nbsp;</span><em>25</em><span>&nbsp;</span>岁<span>&nbsp;</span><em>CRUD</em><span>&nbsp;</span>工程师。</p></blockquote><h3>业务价值</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">软件系统的核心价值体现在业务价值上，研发人员不应只关注技术实现上，而是应该更多地关注业务价值的实现。 这其中的好处显而易见，当你开发完一个业务系统之后，你将变成一个业务专家，甚至比跟你合作的领域专家还要专业，因为你需要洞察业务细节。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">使用<span>&nbsp;</span><em>Wow</em><span>&nbsp;</span>框架，意味着你将关注点放在围绕领域模型设计上，与业务专家一起探索业务领域，而不是关注于技术实现上。 你仅需编写领域模型，即可完成服务开发，<em>Wow</em><span>&nbsp;</span>框架自动为你准备好<span>&nbsp;</span><em>OpenAPI</em><span>&nbsp;</span>接口。</p><blockquote><p style="margin-left:0; margin-right:0">在《实现领域驱动设计》一书中，作者 Vaughn Vernon 提到：核心域才值得投入精力进行领域驱动设计， 但如果你使用<span>&nbsp;</span><em>Wow</em><span>&nbsp;</span>框架，你将发现，因为低廉开发成本、快速的开发效率，即使是次要的支撑子域也值得<span>&nbsp;</span><em>DDD</em>。</p></blockquote><h3>性能与伸缩性</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">随着业务的发展，你需要开始思考系统的性能和伸缩性问题。 在传统架构中，这牵扯到数据库关系模式、分片规则等复杂问题，同时你还需要处理因数据库分片导致的跨分片事务问题。 这时，你不得不修改你的业务代码，以适应水平拆分后的数据库架构。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">然而，如果你选择使用<span>&nbsp;</span><em>Wow</em><span>&nbsp;</span>框架，你将不再需要过多关注数据库关系模式、分片规则等问题。你的业务代码无需变更，系统能够轻松实现水平伸缩。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">你可以在这里了解更多关于<span>&nbsp;</span><a href="https://ahoowang.gitee.io/wow/guide/perf-test.html">Wow 框架的性能</a>。</p><h3>读写分离与同步延迟</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">读写分离是一种极为普遍的性能优化架构模式。 然而，同步延迟问题常伴随而来，事务执行成功后写库落库成功，但读库同步延迟，用户刷新页面后无法获取最新数据，从而对用户的体验产生影响。例如：</p><ul><li>用户发起下单事务，写库执行成功，但由于某种原因，读库同步延迟，用户刷新页面后发现订单未成功创建。</li><li>商家编辑完商品后，同步到<span>&nbsp;</span><em>Elasticsearch</em><span>&nbsp;</span>索引库，但由于某种原因，同步延迟，导致商家刷新页面后搜索不到该商品。</li></ul><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">通常，大家采用最简便的方法，等待 1 秒后刷新页面。 虽然这种方式能解决大多数数据同步延迟的问题，但效率不够高。 因为大多数情况下，同步在 100 毫秒内就已完成，剩余的 900 毫秒成了<em>浪费</em>。 然而，有时 1 秒无法完成同步，这就导致用户获取的数据变得<strong>无效</strong>。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">使用<span>&nbsp;</span><em>Wow</em><span>&nbsp;</span>框架，你可以通过等待<span>&nbsp;</span><em>PROJECTED</em><span>&nbsp;</span>信号完成，然后再将结果返回给用户，以更为优雅和高效的方式处理数据同步延迟的问题。</p><h3>工程质量</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><em>单元测试</em>是确保代码质量且符合预期业务需求的重要手段，但在传统架构中，单元测试往往是一项相当困难的任务，因为你需要考虑数据库连接、事务管理、数据清理等问题。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">使用<span>&nbsp;</span><em>Wow</em><span>&nbsp;</span>框架，你将会发现基于<span>&nbsp;</span><em>Given-&gt;When-&gt;Expect</em><span>&nbsp;</span>模式的测试套件，使得单元测试变得异常简单。 你只需关注领域模型是否符合预期，而无需为数据库连接等问题烦恼。</p><blockquote><p style="margin-left:0; margin-right:0">在实际应用中，我们将领域模型的单元测试覆盖率下限阈值设置为<span>&nbsp;</span><strong>85%</strong>，也是可以轻松实现的。</p><p style="margin-left:0; margin-right:0">在没有刻意要求的情况下，开发人员甚至自觉地将覆盖率提升至<span>&nbsp;</span><strong>95%</strong>。</p><p style="margin-left:0; margin-right:0">因此，每次提交代码都变得轻松自在，因为你确信你的代码经过了充分的测试，并且真正意义上从单元测试中获得了收益。</p></blockquote><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">在研发同级别的项目中，我们的测试团队在系统<span>&nbsp;</span><em>API</em><span>&nbsp;</span>测试中发现，基于 Wow 框架的项目，其<span>&nbsp;</span><em>BUG</em><span>&nbsp;</span>数仅为传统架构项目的<span>&nbsp;</span><strong>1/3</strong>。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">你可以在这里了解更多关于<span>&nbsp;</span><a href="https://ahoowang.gitee.io/wow/guide/test-suite.html">Wow 单元测试套件</a>。</p><h2>对于企业而言，<em>Wow</em><span>&nbsp;</span>框架意味着什么？</h2><h3>商业智能</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><em>商业智能</em>是企业决策的关键支持，而数据则是商业智能的分析原料。业务数据越为丰富有价值，商业智能的分析结果越准确，决策也就更加可靠。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">与传统架构有着显著差异，<em>Wow</em><span>&nbsp;</span>提供了实时聚合根状态事件（<code>StateEvent</code>）和聚合命令（<code>Command</code>）作为数据分析的数据源，同时极大降低了实时<span>&nbsp;</span><em>ETL</em>（<code>Extract</code>,<span>&nbsp;</span><code>Transform</code>,<span>&nbsp;</span><code>Load</code>）的难度。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">在传统架构中，实现实时<span>&nbsp;</span><em>ETL</em><span>&nbsp;</span>通常需要经过繁琐的流程，包括<span>&nbsp;</span><code>DB-&gt;CDC-&gt;Process-&gt;DB</code>，而在<span>&nbsp;</span><em>Wow</em><span>&nbsp;</span>框架中，仅需一段简单的<span>&nbsp;</span><em>SQL</em><span>&nbsp;</span>脚本即可完成这一过程。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">另外，在传统架构中，使用<span>&nbsp;</span><em>CDC</em>（<code>MySql Binlog</code>）数据仅记录数据的变化，缺乏明确的业务语义。进行业务分析时，需要基于数据状态的变化推断出业务语义，这往往需要进行大量的数据处理。 相较之下，<em>Wow</em><span>&nbsp;</span>框架直接提供了聚合根状态事件和聚合命令作为数据分析的数据源，极大降低了数据处理的难度。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><em>Wow</em><span>&nbsp;</span>提供的实时同步机制将数据实时同步至数据仓库（<em>ClickHouse</em>），为实时数据分析提供了极大的便利。这种方法为商业智能提供了强有力的支持，构建了一个实时数据分析系统，使决策制定能够基于及时而准确的信息。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">你可以在这里了解更多关于<span>&nbsp;</span><a href="https://ahoowang.gitee.io/wow/guide/bi.html">Wow 商业智能</a>。</p><h3>操作审计</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><em>操作审计</em>是企业中保障安全性和合规性的重要组成部分，同时也是对系统操作进行监控和追踪的关键手段。<em>Wow</em><span>&nbsp;</span>框架在这方面为企业带来了显著的优势。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">通过记录聚合命令（<code>Command</code>）作为操作审计的数据源，<em>Wow</em><span>&nbsp;</span>框架能够详细追踪系统中的各种操作。 这些记录不仅包含了操作本身的内容，还涵盖了操作触发的副作用（<em>领域事件</em>），为审计提供了更为全面和准确的数据基础。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">相较于传统审计方法，<em>Wow</em><span>&nbsp;</span>框架的操作审计的数据源具备更加明确的业务语义，以及操作后产生的明确领域事件。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">此外，Wow 框架提供的实时数据同步机制也为操作审计带来了便利，确保了审计数据的及时性和一致性。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">了解更多关于<span>&nbsp;</span><a href="https://ahoowang.gitee.io/wow/guide/bi.html#%E8%81%9A%E5%90%88%E5%91%BD%E4%BB%A4">Wow 操作审计</a>。</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 11 Jan 2024 01:36:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/275339/wow-2-13-6-released</guid>
            <link>https://www.oschina.net/news/275339/wow-2-13-6-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[VersionFox：跨平台、可拓展的 SDK 版本管理工具]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><strong>项目地址:&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fversion-fox%2Fvfox" target="_blank">https://github.com/version-fox/vfox</a></strong></p><p><span style="background-color:#ffffff; color:#1f2328">每种编程语言都有对应的版本管理工具，如 nvm、fvm、gvm、sdkman 等，它们的核心功能大同小异。但对于使用多种语言的开发者来说，这意味着需要学习和记忆各种不同的命令，增加了学习成本。如果你是全栈工程师,或者使用不止一种语言,使用<strong>VersionFox</strong>，你无需再学习这些繁杂的工具，从而降低学习成本，节省时间。</span></p><p>亮点:</p><ul><li>跨平台 (Windows、Linux、macOS), 不同的平台拥有相同的用户体验</li><li>使用一致的命令管理所有语言</li><li>简单的插件系统添加对您所需 SDK 的支持</li><li>支持 Global、Project、Session 三种作用域</li><li>当您遍历您的项目时,自动切换到对应版本</li></ul><p>快速入门</p><ol><li>安装 vfox (&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fversion-fox%2Fvfox%2Fwiki%2FGetting-Started%23installation" target="_blank">详细安装</a>) <pre>$ brew tap version-fox/tap
$ brew install vfox
</pre></li><li>选择一条适合你 shell 的命令</li></ol><pre><span style="color:var(--color-prettylights-syntax-constant)">echo</span><span style="color:var(--color-prettylights-syntax-string)"><span style="color:var(--color-prettylights-syntax-string)">'</span>eval "$(vfox activate bash)"<span style="color:var(--color-prettylights-syntax-string)">'</span></span><span style="color:var(--color-prettylights-syntax-keyword)">&gt;&gt;</span><span style="color:var(--color-prettylights-syntax-keyword)">~</span>/.bashrc
<span style="color:var(--color-prettylights-syntax-constant)">echo</span><span style="color:var(--color-prettylights-syntax-string)"><span style="color:var(--color-prettylights-syntax-string)">'</span>eval "$(vfox activate zsh)"<span style="color:var(--color-prettylights-syntax-string)">'</span></span><span style="color:var(--color-prettylights-syntax-keyword)">&gt;&gt;</span><span style="color:var(--color-prettylights-syntax-keyword)">~</span>/.zshrc
<span style="color:var(--color-prettylights-syntax-constant)">echo</span><span style="color:var(--color-prettylights-syntax-string)"><span style="color:var(--color-prettylights-syntax-string)">'</span>vfox activate fish | source<span style="color:var(--color-prettylights-syntax-string)">'</span></span><span style="color:var(--color-prettylights-syntax-keyword)">&gt;&gt;</span><span style="color:var(--color-prettylights-syntax-keyword)">~</span>/.config/fish/config.fish

<span style="color:var(--color-prettylights-syntax-comment)"><span style="color:var(--color-prettylights-syntax-comment)">#</span> For PowerShell, add the following line to your $PROFILE:</span>
Invoke-Expression <span style="color:var(--color-prettylights-syntax-string)"><span style="color:var(--color-prettylights-syntax-string)">"</span><span style="color:var(--color-prettylights-syntax-string)"><span style="color:var(--color-prettylights-syntax-string)">$(</span>vfox activate pwsh<span style="color:var(--color-prettylights-syntax-string)">)</span></span><span style="color:var(--color-prettylights-syntax-string)">"</span></span></pre><p><span style="color:var(--color-prettylights-syntax-string)"><span style="color:var(--color-prettylights-syntax-string)">3. 添加插件</span></span></p><pre>$ vfox add nodejs/nodejs</pre><p>4.安装版本</p><pre>vfox install nodejs@latest</pre><p>5.切换版本</p><pre>$ vfox use nodejs@21.5.0
$ node -v
21.5.0</pre><p>目前已支持多种开发语言, 欢迎使用~~</p><p><strong>Node 演示</strong></p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fasciinema.org%2Fa%2F630778" target="_blank"><img src="https://asciinema.org/a/630778.svg" referrerpolicy="no-referrer"></a></p><p><strong>项目地址: <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fversion-fox%2Fvfox" target="_blank">https://github.com/version-fox/vfox</a></strong></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 10 Jan 2024 07:42:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/275232</guid>
            <link>https://www.oschina.net/news/275232</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Redis 7.2.4 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff; color:#000000">Redis 7.2.4 现已发布，此版本包含了一些安全问题修复</span><span style="background-color:#ffffff; color:#24292f">。具体更新内容如下：</span></p><p><strong><span><span><span style="color:#24292f"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>安全修复</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></p><ul><li><span><span><span style="color:#24292f"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>(CVE-2023-41056) 在某些情况下，Redis 可能会错误地处理内存缓冲区的大小调整，这可能导致缓冲区大小的不正确计算，并导致堆溢出和潜在的远程代码执行。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></li></ul><p><span><span><span style="color:#24292f"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span><strong>Bug 修复</strong></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><ul><li><span style="background-color:#ffffff; color:#1f2328">修复 7.0 和 7.2 混合版本的集群命令集群崩溃问题</span> (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fredis%2Fredis%2Fpull%2F12805" target="_blank">#12805</a>,<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fredis%2Fredis%2Fpull%2F12832" target="_blank">#12832</a>)</li><li>修复从节点删除 slot 时 slot ownership 未得到正确处理的问题 (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fredis%2Fredis%2Fpull%2F12564" target="_blank">#12564</a>)</li><li>修复 RedisModuleEvent_Key module API 事件的 atomicity issues (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fredis%2Fredis%2Fpull%2F12733" target="_blank">#12733</a>)</li></ul><p><span><span><span style="color:#24292f"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>更新说明：</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fredis%2Fredis%2Freleases%2Ftag%2F7.2.4" target="_blank">https://github.com/redis/redis/releases/tag/7.2.4</a></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 10 Jan 2024 05:51:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/275211/redis-7-2-4-released</guid>
            <link>https://www.oschina.net/news/275211/redis-7-2-4-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
    </channel>
</rss>
