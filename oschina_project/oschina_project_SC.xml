<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[开源中国-软件更新资讯]]>
        </title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="https://rsshub.app/oschina/news/project" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[开源中国-软件更新资讯 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Tue, 21 Nov 2023 10:59:08 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[Wow 2.8.0 发布，让领域驱动设计变得触手可得]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>基于 DDD、EventSourcing 的现代响应式 CQRS 架构微服务开发框架</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FAhoo-Wang%2FWow%2Fblob%2Fmvp%2FLICENSE"><img alt="License" src="https://img.shields.io/badge/license-Apache%202-4EB1BA.svg" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FAhoo-Wang%2FWow%2Freleases"><img alt="GitHub release" src="https://img.shields.io/github/release/Ahoo-Wang/Wow.svg" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fapp.codacy.com%2Fgh%2FAhoo-Wang%2FWow%2Fdashboard%3Futm_source%3Dgh%26utm_medium%3Dreferral%26utm_content%3D%26utm_campaign%3DBadge_grade"><img alt="Codacy Badge" src="https://app.codacy.com/project/badge/Grade/cfc724df22db4f9387525258c8a59609" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fcodecov.io%2Fgh%2FAhoo-Wang%2FWow"><img alt="codecov" src="https://codecov.io/gh/Ahoo-Wang/Wow/branch/main/graph/badge.svg?token=uloJrLoQir" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FAhoo-Wang%2FWow"><img alt="Integration Test Status" src="https://github.com/Ahoo-Wang/Wow/actions/workflows/integration-test.yml/badge.svg" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FKotlinBy%2Fawesome-kotlin"><img alt="Awesome Kotlin Badge" src="https://kotlin.link/awesome-kotlin.svg" referrerpolicy="no-referrer"></a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><strong>领域驱动&nbsp;</strong><span>&nbsp;</span>|&nbsp;<span>&nbsp;</span><strong>事件驱动</strong><span>&nbsp;&nbsp;</span>|<span>&nbsp;&nbsp;</span><strong>测试驱动</strong><span>&nbsp;&nbsp;</span>|<span>&nbsp;&nbsp;</span><strong>声明式设计</strong><span>&nbsp;</span>｜<span>&nbsp;</span><strong>响应式编程</strong><span>&nbsp;</span>｜<span>&nbsp;</span><strong>命令查询职责分离</strong><span>&nbsp;</span>｜<span>&nbsp;</span><strong>事件溯源</strong></p><h2>更新内容 🎉 🎉 🎉</h2><ul><li>特新: 增强<span>&nbsp;</span><em>JAVA</em><span>&nbsp;</span>兼容性与使用体验</li><li>CI: 新增<span>&nbsp;</span><em>JAVA</em><span>&nbsp;</span>兼容性测试</li><li>案例: 新增经典 DDD 银行转账案例（JAVA）<a href="https://gitee.com/AhooWang/Wow/tree/main/example/transfer" target="_blank">https://gitee.com/AhooWang/Wow/tree/main/example/transfer</a></li></ul><p style="color:#40485b; margin-left:0em; margin-right:0em; text-align:center"><img alt="转账流程" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Saga-Transfer.svg" referrerpolicy="no-referrer"></p><h2>架构图</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-Architecture" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Architecture.svg" referrerpolicy="no-referrer"></p><h2>性能测试 (Example)</h2><ul><li>测试代码：<a href="https://gitee.com/AhooWang/Wow/blob/main/example">Example</a></li><li>测试场景：加入购物车、下单</li><li>命令发送等待模式（<code>WaitStrategy</code>）：<code>SENT</code>、<code>PROCESSED</code></li></ul><h3>部署</h3><ul><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/perf/redis.yaml">Redis</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/perf/mongo.yaml">MongoDB</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/perf/kafka.yaml">Kafka</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/perf/config/mongo_kafka_redis.yaml">Application-Config</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/perf/deployment.yaml">Application-Deployment</a></li></ul><h3>测试报告</h3><h4>加入购物车</h4><ul><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/request/AddCartItem.http">请求</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/document/example/perf/Example.Cart.Add@SENT.pdf">详细报告 (PDF)-SENT</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/document/example/perf/Example.Cart.Add@PROCESSED.pdf">详细报告 (PDF)-PROCESSED</a></li></ul><blockquote><p style="margin-left:0; margin-right:0"><code>WaitStrategy</code>:<span>&nbsp;</span><code>SENT</code></p></blockquote><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="SENT" src="https://gitee.com/AhooWang/Wow/raw/main/document/example/perf/Example.Cart.Add@SENT.png" referrerpolicy="no-referrer"></p><blockquote><p style="margin-left:0; margin-right:0"><code>WaitStrategy</code>:<span>&nbsp;</span><code>PROCESSED</code></p></blockquote><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="PROCESSED" src="https://gitee.com/AhooWang/Wow/raw/main/document/example/perf/Example.Cart.Add@PROCESSED.png" referrerpolicy="no-referrer"></p><h4>下单</h4><ul><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/request/CreateOrder.http">请求</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/document/example/perf/Example.Order.Create@SENT.pdf">详细报告 (PDF)-SENT</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/document/example/perf/Example.Order.Create@PROCESSED.pdf">详细报告 (PDF)-PROCESSED</a></li></ul><blockquote><p style="margin-left:0; margin-right:0"><code>WaitStrategy</code>:<span>&nbsp;</span><code>SENT</code></p></blockquote><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="SENT" src="https://gitee.com/AhooWang/Wow/raw/main/document/example/perf/Example.Order.Create@SENT.png" referrerpolicy="no-referrer"></p><blockquote><p style="margin-left:0; margin-right:0"><code>WaitStrategy</code>:<span>&nbsp;</span><code>PROCESSED</code></p></blockquote><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="PROCESSED" src="https://gitee.com/AhooWang/Wow/raw/main/document/example/perf/Example.Order.Create@PROCESSED.png" referrerpolicy="no-referrer"></p><h2>事件源</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-EventSourcing" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/EventSourcing.svg" referrerpolicy="no-referrer"></p><h2>可观测性</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-Observability" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/OpenTelemetry.png" referrerpolicy="no-referrer"></p><h2>OpenAPI (Spring WebFlux 集成)</h2><blockquote><p style="margin-left:0; margin-right:0">自动注册<span>&nbsp;</span><strong>命令</strong><span>&nbsp;</span>路由处理函数 (<code>HandlerFunction</code>) ，开发人员仅需编写领域模型，即可完成服务开发。</p></blockquote><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-Spring-WebFlux-Integration" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/OpenAPI-Swagger.png" referrerpolicy="no-referrer"></p><h2>测试套件：80%+ 的测试覆盖率轻而易举</h2><blockquote><p style="margin-left:0; margin-right:0">Given -&gt; When -&gt; Expect .</p></blockquote><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-CI-Flow" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/CI-Flow.png" referrerpolicy="no-referrer"></p><h2>前置条件</h2><ul><li>理解<span>&nbsp;</span><strong>领域驱动设计</strong>：《实现领域驱动设计》、《领域驱动设计：软件核心复杂性应对之道》</li><li>理解<span>&nbsp;</span><strong>命令查询职责分离</strong>（CQRS）</li><li>理解<span>&nbsp;</span><strong>事件源架构</strong></li><li>理解<span>&nbsp;</span><strong>响应式编程</strong></li></ul><h2>特性</h2><ul><li><span>&nbsp;</span>Aggregate Modeling 
  <ul><li><span>&nbsp;</span>Single Class</li><li><span>&nbsp;</span>Inheritance Pattern</li><li><span>&nbsp;</span>Aggregation Pattern</li></ul></li><li><span>&nbsp;</span>Saga Modeling 
  <ul><li><span>&nbsp;</span><code>StatelessSaga</code></li></ul></li><li><span>&nbsp;</span>Test Suite 
  <ul><li><span>&nbsp;</span>兼容性测试规范（TCK）</li><li><span>&nbsp;</span><code>AggregateVerifier</code></li><li><span>&nbsp;</span><code>SagaVerifier</code></li></ul></li><li><span>&nbsp;</span>EventSourcing 
  <ul><li>EventStore 
    <ul><li><span>&nbsp;</span>MongoDB (Recommend)</li><li><span>&nbsp;</span>R2dbc 
      <ul><li><span>&nbsp;</span>Database Sharding</li><li><span>&nbsp;</span>Table Sharding</li></ul></li><li><span>&nbsp;</span>Redis</li></ul></li><li>Snapshot 
    <ul><li><span>&nbsp;</span>MongoDB</li><li><span>&nbsp;</span>R2dbc 
      <ul><li><span>&nbsp;</span>Database Sharding</li><li><span>&nbsp;</span>Table Sharding</li></ul></li><li><span>&nbsp;</span>ElasticSearch</li><li><span>&nbsp;</span>Redis (Recommend)</li></ul></li></ul></li><li><span>&nbsp;</span>命令等待策略（<code>WaitStrategy</code>） 
  <ul><li><span>&nbsp;</span><code>SENT</code><span>&nbsp;</span>: 命令发送成功后发送完成信号</li><li><span>&nbsp;</span><code>PROCESSED</code><span>&nbsp;</span>: 命令处理完成后发送完成信号</li><li><span>&nbsp;</span><code>SNAPSHOT</code><span>&nbsp;</span>: 快照生成完成后发送完成信号</li><li><span>&nbsp;</span><code>PROJECTED</code><span>&nbsp;</span>: 命令产生的事件被投影后发送完成信号</li></ul></li><li><span>&nbsp;</span>CommandBus 
  <ul><li><span>&nbsp;</span><code>InMemoryCommandBus</code></li><li><span>&nbsp;</span><code>KafkaCommandBus</code><span>&nbsp;</span>(Recommend)</li><li><span>&nbsp;</span><code>RedisCommandBus</code></li><li><span>&nbsp;</span><code>LocalFirstCommandBus</code></li></ul></li><li><span>&nbsp;</span>DomainEventBus 
  <ul><li><span>&nbsp;</span><code>InMemoryDomainEventBus</code></li><li><span>&nbsp;</span><code>KafkaDomainEventBus</code><span>&nbsp;</span>(Recommend)</li><li><span>&nbsp;</span><code>RedisDomainEventBus</code></li><li><span>&nbsp;</span><code>LocalFirstDomainEventBus</code></li></ul></li><li><span>&nbsp;</span>StateEventBus 
  <ul><li><span>&nbsp;</span><code>InMemoryStateEventBus</code></li><li><span>&nbsp;</span><code>KafkaStateEventBus</code><span>&nbsp;</span>(Recommend)</li><li><span>&nbsp;</span><code>RedisStateEventBus</code></li><li><span>&nbsp;</span><code>LocalFirstStateEventBus</code></li></ul></li><li><span>&nbsp;</span>Spring 集成 
  <ul><li><span>&nbsp;</span>Spring Boot Auto Configuration</li><li><span>&nbsp;</span>Automatically register<span>&nbsp;</span><code>CommandAggregate</code><span>&nbsp;</span>to<span>&nbsp;</span><code>RouterFunction</code></li></ul></li><li><span>&nbsp;</span>可观测性 
  <ul><li><span>&nbsp;</span>OpenTelemetry</li></ul></li><li><span>&nbsp;</span>OpenAPI</li><li><span>&nbsp;</span><code>WowMetadata</code><span>&nbsp;</span>Generator 
  <ul><li><span>&nbsp;</span><code>wow-compiler</code></li></ul></li></ul><h2>Example</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/AhooWang/Wow/blob/main/example">Example</a></p><h2>单元测试套件</h2><h3>80%+ 的测试覆盖率轻而易举。</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Test Coverage" src="https://gitee.com/AhooWang/Wow/raw/main/document/example/example-domain-jococo.png" referrerpolicy="no-referrer"></p><blockquote><p style="margin-left:0; margin-right:0">Given -&gt; When -&gt; Expect .</p></blockquote><h3>Aggregate Unit Test (<code>AggregateVerifier</code>)</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/AhooWang/Wow/blob/main/example/example-domain/src/test/kotlin/me/ahoo/wow/example/domain/order/OrderTest.kt">Aggregate Test</a></p><pre><code><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">internal</span></span></span></span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">class</span></span></span></span></span></span></span></span></span><span><span><span><span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">OrderTest</span></span></span></span></span></span></span></span></span><span><span><span><span></span></span></span></span></span>{

    <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">private</span></span></span></span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span></span></span></span></span></span></span><span><span><span><span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">mockCreateOrder</span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span><span>()</span></span></span></span></span></span></span></span></span></span>: VerifiedStage&lt;OrderState&gt; {
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span> tenantId = GlobalIdGenerator.generateAsString()
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span> customerId = GlobalIdGenerator.generateAsString()

        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span> orderItem = OrderItem(
            GlobalIdGenerator.generateAsString(),
            GlobalIdGenerator.generateAsString(),
            BigDecimal.valueOf(<span><span><span><span><span>10</span></span></span></span></span>),
            <span><span><span><span><span>10</span></span></span></span></span>,
        )
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span> orderItems = listOf(orderItem)
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span> inventoryService = <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">object</span></span></span></span></span> : InventoryService {
            <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">override</span></span></span></span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span></span></span></span></span></span></span><span><span><span><span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">getInventory</span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span><span>(productId: </span></span></span></span></span></span></span></span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49">String</span></span></span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span>)</span></span></span></span></span></span></span></span></span></span>: Mono&lt;<span><span><span><span><span>Int</span></span></span></span></span>&gt; {
                <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">return</span></span></span></span></span> orderItems.filter { it.productId == productId }.map { it.quantity }.first().toMono()
            }
        }
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span> pricingService = <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">object</span></span></span></span></span> : PricingService {
            <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">override</span></span></span></span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span></span></span></span></span></span></span><span><span><span><span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">getProductPrice</span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span><span>(productId: </span></span></span></span></span></span></span></span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49">String</span></span></span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span>)</span></span></span></span></span></span></span></span></span></span>: Mono&lt;BigDecimal&gt; {
                <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">return</span></span></span></span></span> orderItems.filter { it.productId == productId }.map { it.price }.first().toMono()
            }
        }
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">return</span></span></span></span></span> aggregateVerifier&lt;Order, OrderState&gt;(tenantId = tenantId)
            .inject(DefaultCreateOrderSpec(inventoryService, pricingService))
            .given()
            .`<span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">when</span></span></span></span></span>`(CreateOrder(customerId, orderItems, SHIPPING_ADDRESS, <span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5">false</span></span></span></span></span>))
            .expectEventCount(<span><span><span><span><span>1</span></span></span></span></span>)
            .expectEventType(OrderCreated::<span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">class</span></span></span></span></span></span></span></span></span><span><span><span><span>.</span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">java</span></span></span></span></span></span></span></span></span><span><span><span><span>)</span></span></span></span></span>
            .expectStateAggregate {
                assertThat(it.aggregateId.tenantId, equalTo(tenantId))
            }
            .expectState {
                assertThat(it.id, notNullValue())
                assertThat(it.customerId, equalTo(customerId))
                assertThat(it.address, equalTo(SHIPPING_ADDRESS))
                assertThat(it.items, equalTo(orderItems))
                assertThat(it.status, equalTo(OrderStatus.CREATED))
            }
            .verify()
    }

    <span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">/** * 创建订单 */</span></span></span></span></span><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">@Test</span></span></span></span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span></span></span></span></span></span></span><span><span><span><span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">createOrder</span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span><span>()</span></span></span></span></span></span></span></span></span></span> {
        mockCreateOrder()
    }

    <span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">@Test</span></span></span></span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span></span></span></span></span></span></span><span><span><span><span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">createOrderGivenEmptyItems</span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span><span>()</span></span></span></span></span></span></span></span></span></span> {
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span> customerId = GlobalIdGenerator.generateAsString()
        aggregateVerifier&lt;Order, OrderState&gt;()
            .inject(mockk&lt;CreateOrderSpec&gt;(), <span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62">"createOrderSpec"</span></span></span></span></span>)
            .given()
            .`<span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">when</span></span></span></span></span>`(CreateOrder(customerId, listOf(), SHIPPING_ADDRESS, <span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5">false</span></span></span></span></span>))
            .expectErrorType(IllegalArgumentException::<span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">class</span></span></span></span></span></span></span></span></span><span><span><span><span>.</span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">java</span></span></span></span></span></span></span></span></span><span><span><span><span>)</span></span></span></span></span>
            .expectStateAggregate {
                <span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">/* * 该聚合对象处于未初始化状态，即该聚合未创建成功. */</span></span></span></span></span>
                assertThat(it.initialized, equalTo(<span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5">false</span></span></span></span></span>))
            }.verify()
    }

    <span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">/** * 创建订单-库存不足 */</span></span></span></span></span><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">@Test</span></span></span></span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span></span></span></span></span></span></span><span><span><span><span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">createOrderWhenInventoryShortage</span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span><span>()</span></span></span></span></span></span></span></span></span></span> {
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span> customerId = GlobalIdGenerator.generateAsString()
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span> orderItem = OrderItem(
            GlobalIdGenerator.generateAsString(),
            GlobalIdGenerator.generateAsString(),
            BigDecimal.valueOf(<span><span><span><span><span>10</span></span></span></span></span>),
            <span><span><span><span><span>10</span></span></span></span></span>,
        )
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span> orderItems = listOf(orderItem)
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span> inventoryService = <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">object</span></span></span></span></span> : InventoryService {
            <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">override</span></span></span></span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span></span></span></span></span></span></span><span><span><span><span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">getInventory</span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span><span>(productId: </span></span></span></span></span></span></span></span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49">String</span></span></span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span>)</span></span></span></span></span></span></span></span></span></span>: Mono&lt;<span><span><span><span><span>Int</span></span></span></span></span>&gt; {
                <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">return</span></span></span></span></span> orderItems.filter { it.productId == productId }
                    <span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">/* * 模拟库存不足 */</span></span></span></span></span>
                    .map { it.quantity - <span><span><span><span><span>1</span></span></span></span></span> }.first().toMono()
            }
        }
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span> pricingService = <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">object</span></span></span></span></span> : PricingService {
            <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">override</span></span></span></span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span></span></span></span></span></span></span><span><span><span><span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">getProductPrice</span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span><span>(productId: </span></span></span></span></span></span></span></span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49">String</span></span></span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span>)</span></span></span></span></span></span></span></span></span></span>: Mono&lt;BigDecimal&gt; {
                <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">return</span></span></span></span></span> orderItems.filter { it.productId == productId }.map { it.price }.first().toMono()
            }
        }

        aggregateVerifier&lt;Order, OrderState&gt;()
            .inject(DefaultCreateOrderSpec(inventoryService, pricingService))
            .given()
            .`<span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">when</span></span></span></span></span>`(CreateOrder(customerId, orderItems, SHIPPING_ADDRESS, <span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5">false</span></span></span></span></span>))
            <span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">/* * 期望：库存不足异常. */</span></span></span></span></span>
            .expectErrorType(InventoryShortageException::<span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">class</span></span></span></span></span></span></span></span></span><span><span><span><span>.</span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">java</span></span></span></span></span></span></span></span></span><span><span><span><span>)</span></span></span></span></span>
            .expectStateAggregate {
                <span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">/* * 该聚合对象处于未初始化状态，即该聚合未创建成功. */</span></span></span></span></span>
                assertThat(it.initialized, equalTo(<span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5">false</span></span></span></span></span>))
            }.verify()
    }

    <span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">/** * 创建订单-下单价格与当前价格不一致 */</span></span></span></span></span><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">@Test</span></span></span></span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span></span></span></span></span></span></span><span><span><span><span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">createOrderWhenPriceInconsistency</span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span><span>()</span></span></span></span></span></span></span></span></span></span> {
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span> customerId = GlobalIdGenerator.generateAsString()
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span> orderItem = OrderItem(
            GlobalIdGenerator.generateAsString(),
            GlobalIdGenerator.generateAsString(),
            BigDecimal.valueOf(<span><span><span><span><span>10</span></span></span></span></span>),
            <span><span><span><span><span>10</span></span></span></span></span>,
        )
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span> orderItems = listOf(orderItem)
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span> inventoryService = <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">object</span></span></span></span></span> : InventoryService {
            <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">override</span></span></span></span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span></span></span></span></span></span></span><span><span><span><span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">getInventory</span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span><span>(productId: </span></span></span></span></span></span></span></span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49">String</span></span></span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span>)</span></span></span></span></span></span></span></span></span></span>: Mono&lt;<span><span><span><span><span>Int</span></span></span></span></span>&gt; {
                <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">return</span></span></span></span></span> orderItems.filter { it.productId == productId }.map { it.quantity }.first().toMono()
            }
        }
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span> pricingService = <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">object</span></span></span></span></span> : PricingService {
            <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">override</span></span></span></span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span></span></span></span></span></span></span><span><span><span><span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">getProductPrice</span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span><span>(productId: </span></span></span></span></span></span></span></span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49">String</span></span></span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span>)</span></span></span></span></span></span></span></span></span></span>: Mono&lt;BigDecimal&gt; {
                <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">return</span></span></span></span></span> orderItems.filter { it.productId == productId }
                    <span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">/* * 模拟下单价格、商品定价不一致 */</span></span></span></span></span>
                    .map { it.price.plus(BigDecimal.valueOf(<span><span><span><span><span>1</span></span></span></span></span>)) }.first().toMono()
            }
        }
        aggregateVerifier&lt;Order, OrderState&gt;()
            .inject(DefaultCreateOrderSpec(inventoryService, pricingService))
            .given()
            .`<span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">when</span></span></span></span></span>`(CreateOrder(customerId, orderItems, SHIPPING_ADDRESS, <span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5">false</span></span></span></span></span>))
            <span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">/* * 期望：价格不一致异常. */</span></span></span></span></span>
            .expectErrorType(PriceInconsistencyException::<span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">class</span></span></span></span></span></span></span></span></span><span><span><span><span>.</span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">java</span></span></span></span></span></span></span></span></span><span><span><span><span>).</span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">verify</span></span></span></span></span></span></span></span></span></span>()
    }
}</code></pre><h3>Saga Unit Test (<code>SagaVerifier</code>)</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/AhooWang/Wow/blob/main/example/example-domain/src/test/kotlin/me/ahoo/wow/example/domain/cart/CartSagaTest.kt">Saga Test</a></p><pre><code><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">class</span></span></span></span></span></span></span></span></span><span><span><span><span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">CartSagaTest</span></span></span></span></span></span></span></span></span><span><span><span><span></span></span></span></span></span>{

    <span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">@Test</span></span></span></span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span></span></span></span></span></span></span><span><span><span><span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">onOrderCreated</span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span><span>()</span></span></span></span></span></span></span></span></span></span> {
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span> orderItem = OrderItem(
            GlobalIdGenerator.generateAsString(),
            GlobalIdGenerator.generateAsString(),
            BigDecimal.valueOf(<span><span><span><span><span>10</span></span></span></span></span>),
            <span><span><span><span><span>10</span></span></span></span></span>,
        )
        sagaVerifier&lt;CartSaga&gt;()
            .`<span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">when</span></span></span></span></span>`(
                mockk&lt;OrderCreated&gt; {
                    every {
                        customerId
                    } returns <span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62">"customerId"</span></span></span></span></span>
                    every {
                        items
                    } returns listOf(orderItem)
                    every {
                        fromCart
                    } returns <span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5">true</span></span></span></span></span>
                },
            )
            .expectCommandBody&lt;RemoveCartItem&gt; {
                assertThat(it.id, equalTo(<span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62">"customerId"</span></span></span></span></span>))
                assertThat(it.productIds, hasSize(<span><span><span><span><span>1</span></span></span></span></span>))
                assertThat(it.productIds.first(), equalTo(orderItem.productId))
            }
            .verify()
    }
}</code></pre><h2>设计</h2><h3>聚合建模</h3><table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:0px; border:none; box-sizing:border-box; color:#40485b; display:block; font-family:-apple-system,&quot;system-ui&quot;,&quot;Segoe UI&quot;,Helvetica,Arial,&quot;Apple Color Emoji&quot;,&quot;Segoe UI Emoji&quot;,&quot;Segoe UI Symbol&quot;,&quot;Liberation Sans&quot;,&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,&quot;Hiragino Sans GB&quot;,&quot;Wenquanyi Micro Hei&quot;,&quot;WenQuanYi Zen Hei&quot;,&quot;ST Heiti&quot;,SimHei,SimSun,&quot;WenQuanYi Zen Hei Sharp&quot;,sans-serif; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; line-height:inherit; margin:0px 0px 16px; max-width:100%; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; word-break:initial; word-spacing:0px"><tbody><tr><th><strong>Single Class</strong></th><th><strong>Inheritance Pattern</strong></th><th><strong>Aggregation Pattern</strong></th></tr></tbody><tbody><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px; text-align:center"><img alt="Single Class - Modeling" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Modeling-Single-Class-Pattern.svg" referrerpolicy="no-referrer"></td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px; text-align:center"><img alt="Inheritance Pattern- Modeling" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Modeling-Inheritance-Pattern.svg" referrerpolicy="no-referrer"></td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px; text-align:center"><img alt="Aggregation Pattern- Modeling" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Modeling-Aggregation-Pattern.svg" referrerpolicy="no-referrer"></td></tr></tbody></table><h3>加载聚合</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Load Aggregate" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Load-Aggregate.svg" referrerpolicy="no-referrer"></p><h3>聚合状态流</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Aggregate State Flow" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Aggregate-State-Flow.svg" referrerpolicy="no-referrer"></p><h3>发送命令</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Send Command" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Send-Command.svg" referrerpolicy="no-referrer"></p><h3>命令与事件流</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Command And Event Flow" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Command-Event-Flow.svg" referrerpolicy="no-referrer"></p><h3>Saga - OrderProcessManager (Demo)</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="OrderProcessManager" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Saga-Order.svg" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 21 Nov 2023 06:47:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/267407</guid>
            <link>https://www.oschina.net/news/267407</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[HandBrake 1.7.0 发布，多功能视频转码工具]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">HandBrake 1.7.0 现已发布。HandBrake 是一款适用于 Linux、Mac 和 Windows 的开源视频转码器。</p><h4 style="margin-left:0; margin-right:0; text-align:left"><strong>Upgrade Notice</strong></h4><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><span><span><span style="color:#24292f"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>在更新 HandBrake 之前，请确保队列中没有待处理的编码，并确保备份你拥有的任何自定义预设和应用首选项，因为它们可能与新版本不兼容。Windows 用户，请确保安装&nbsp;</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdotnet.microsoft.com%2Fen-us%2Fdownload%2Fdotnet%2F6.0" target="_blank">Microsoft .NET Desktop Runtime version 6.0.x</a><span><span><span style="color:#24292f"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>。Read carefully：你需要&nbsp;<strong>DESKTOP&nbsp;</strong>runtime。即使你已经安装了 .NET 7，也必须安装 .NET 6。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><h4 style="margin-left:0px; margin-right:0px; text-align:start"><strong>HandBrake 1.7.0</strong></h4><p style="color:#333333; margin-left:0px; margin-right:0px; text-align:start"><strong>General</strong></p><ul><li>添加了 Apple VideoToolbox hardware presets</li><li>更新了 Creator presets 
  <ul><li>禁用隔行检测和删除；假设创作者默认使用&nbsp;progressive sources</li></ul></li><li>更新了&nbsp;Social preset 
  <ul><li>在更短的时间内实现更高的质量和帧速率，无需隔行检测和删除</li><li>更适合实时社交短片和屏幕/游戏捕获的现代社交共享</li></ul></li><li>删除了 Email presets，以支持修订后的 Social presets 
  <ul><li>停止通过电子邮件发送视频或使用新的 Social presets</li></ul></li><li>各种错误修复和改进</li></ul><p><strong>Video</strong></p><ul><li>添加 AMD VCN AV1 编码器</li><li>添加了 NVIDIA NVENC AV1 编码器</li><li>添加了对 SVT-AV1 multi-pass ABR 模式的支持</li><li>添加了 QSV Rotate 和 Format filters</li><li>改进了 arm64 / aarch64 / Apple Silicon 架构的性能 
  <ul><li>最新的 FFmpeg 提供更快的 HEVC 解码，bwdif 过滤器速度提高 30%</li><li>新的 SVT-AV1 assembly&nbsp;优化可将性能提高 4 倍</li></ul></li><li>通过删除不需要的 frame copies 以提高内存效率来提高视频转换速度</li><li>改进的杜比视界动态范围元数据传递 
  <ul><li>支持的编码器：x265 10 位</li><li>支持的配置文件和交叉兼容性 ID：8.4、8.1、7.6（仅限 base layer，转换为 8.1）、5.0</li></ul></li><li>改进的 HDR10+ 动态范围元数据传递 
  <ul><li>支持的编码器：x265 10 位、SVT-AV1</li></ul></li><li>改进了 Linux 上的 QSV 支持 (&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FHandBrake%2FHandBrake%2Fpull%2F4958" target="_blank">#4958</a>&nbsp;)</li><li>更新了 NVENC，默认情况下不使用 multi-pass；用户可配置的高级选项</li><li>将 2-pass 编码选项重命名为 multi-pass (&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FHandBrake%2FHandBrake%2Fpull%2F5019" target="_blank">#5019</a>&nbsp;)</li><li>修复了英特尔 QSV 编码器在某些情况下输出 green video 的问题（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FHandBrake%2FHandBrake%2Fissues%2F4842" target="_blank">#4842</a>、<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FHandBrake%2FHandBrake%2Fpull%2F4876" target="_blank">#4876</a>）</li><li>修复了使用 10 位硬件编码器时像素格式转换会稍微改变颜色的问题 (&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FHandBrake%2FHandBrake%2Fissues%2F5011" target="_blank">#5011</a>&nbsp;)</li><li>修复了当源分辨率不是 mod 2 时使用 swscale 而不是 zscale 的扫描失败问题</li><li>修复了从变形 AV1 视频轨道读取时 PAR 不正确的问题</li><li>删除了 VP9 CQ 模式的人为比特率限制</li></ul><p>更多详情可查看：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FHandBrake%2FHandBrake%2Freleases%2Ftag%2F1.7.0" target="_blank">https://github.com/HandBrake/HandBrake/releases/tag/1.7.0</a></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 21 Nov 2023 06:42:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/267405/handbrake-1-7-0-released</guid>
            <link>https://www.oschina.net/news/267405/handbrake-1-7-0-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Gitee 推荐 | 物联网边缘计算网关 FreeIOE]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>FreeIOE 是用于快速构建工业物联网边缘计算网关的开源框架。</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 21 Nov 2023 06:39:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/267402</guid>
            <link>https://www.oschina.net/news/267402</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Git for Windows 2.43.0 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Git for Windows v2.43.0 现已发布，具体更新内容包括：</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong style="color:#333333">New Features</strong></p><ul><li>附带&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgit%2Fgit%2Fblob%2Fv2.43.0%2FDocumentation%2FRelNotes%2F2.43.0.txt" target="_blank">Git v2.43.0</a>。</li><li>附带&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcygwin%2Fcygwin%2Freleases%2Ftag%2Fcygwin-3.4.9" target="_blank">MSYS2 runtime v3.4.9</a>。</li><li>附带&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flists.gnupg.org%2Fpipermail%2Fgnutls-help%2F2023-August%2F004834.html" target="_blank">GNU TLS v3.8.1</a>。</li><li>当安装到启用了 Mandatory Address Space Layout Randomization (ASLR) 的 Windows 设置时（该功能与支持 Git Bash、SSH 和一些其他随 Git for Windows 分发的程序的 MSYS2 运行时不兼容），Git for Windows 安装程序现在提供添加例外<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgit-for-windows%2Fbuild-extra%2Fpull%2F513" target="_blank">情况</a>：将允许这些程序按预期工作。</li><li>附带&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopenssh%2Fopenssh-portable%2Freleases%2Ftag%2FV_9_5_P1" target="_blank">OpenSSH v9.5.P1</a>。</li><li>附带&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcurl%2Fcurl%2Freleases%2Ftag%2Fcurl-8_4_0" target="_blank">cURL v8.4.0</a>。</li><li>附带&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopenssl%2Fopenssl%2Freleases%2Ftag%2Fopenssl-3.1.4" target="_blank">OpenSSL v3.1.4</a>。</li><li>附带&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgit-ecosystem%2Fgit-credential-manager%2Freleases%2Ftag%2Fv2.4.1" target="_blank">Git Credential Manager v2.4.1</a>。</li><li>附带&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgit.savannah.gnu.org%2Fcgit%2Fbash.git%2Fcommit%2F%3Fid%3D2bb3cbefdb8fd019765b1a9cc42ecf37ff22fec6" target="_blank">Bash v5.2.21</a>。</li><li>附带&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmintty%2Fmintty%2Freleases%2Ftag%2F3.7.0" target="_blank">MinTTY v3.7.0</a>。</li></ul><p style="text-align:start"><strong><span><span><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>Bug 修复</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></p><ul><li>target&nbsp;为不带驱动器前缀的绝对路径的<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgit-for-windows%2Fgit%2Fissues%2F4586" target="_blank">符号链接在 checked out 时意外添加了驱动器前缀</a>，导致其「eternally modified」。此错误<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgit-for-windows%2Fgit%2Fpull%2F4592" target="_blank">已得到修复</a>。</li><li>Git for Windows 的安装程序<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgit-for-windows%2Fbuild-extra%2Fpull%2F529" target="_blank">不再被全局<code>GIT_*</code>环境变量</a>所困扰。</li><li>安装程序<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgit-for-windows%2Fbuild-extra%2Fpull%2F498" target="_blank">不再声称「fast-forward or merge」是默认的<code>git pull</code>行为</a>：Git 中的默认行为不久前已更改为「fast-forward only」。</li></ul><table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:0px; box-sizing:border-box; color:#1f2328; display:block; font-family:-apple-system,BlinkMacSystemFont,&quot;Segoe UI&quot;,&quot;Noto Sans&quot;,Helvetica,Arial,sans-serif,&quot;Apple Color Emoji&quot;,&quot;Segoe UI Emoji&quot;; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; margin-bottom:0px !important; margin-top:0px; max-width:100%; orphans:2; overflow:auto; text-align:start; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:max-content; word-spacing:0px"><thead><tr><th>Filename</th><th>SHA-256</th></tr></thead><tbody><tr><td style="border-style:solid; border-width:1px">Git-2.43.0-64-bit.exe</td><td style="border-style:solid; border-width:1px">a6058d7c4c16bfa5bcd6fde051a92de8c68535fd7ebade55fc0ab1c41be3c8d5</td></tr><tr><td style="border-style:solid; border-width:1px">Git-2.43.0-32-bit.exe</td><td style="border-style:solid; border-width:1px">aee1587a4004c6a57b614c81fdc2ae1fa33de0daaf6b650cf6467e4253e024a9</td></tr><tr><td style="border-style:solid; border-width:1px">PortableGit-2.43.0-64-bit.7z.exe</td><td style="border-style:solid; border-width:1px">c76216d032685fa972d129eca30f8c9fb957eb9f46ccbce954e70e07d6211961</td></tr><tr><td style="border-style:solid; border-width:1px">PortableGit-2.43.0-32-bit.7z.exe</td><td style="border-style:solid; border-width:1px">c33f9aa7bf9c59e24db71b65e9d75b1e8532562175afef380119aa1eee90afd1</td></tr><tr><td style="border-style:solid; border-width:1px">MinGit-2.43.0-64-bit.zip</td><td style="border-style:solid; border-width:1px">1905d93068e986258fafc69517df8fddff829bb2a289c1fa4dcc6cdf720ddf36</td></tr><tr><td style="border-style:solid; border-width:1px">MinGit-2.43.0-32-bit.zip</td><td style="border-style:solid; border-width:1px">d46fac9c17b55627f714aefa36c3b00d81651d2bb4076a12b4455b5f841f1a9e</td></tr><tr><td style="border-style:solid; border-width:1px">MinGit-2.43.0-busybox-64-bit.zip</td><td style="border-style:solid; border-width:1px">2bd705f2c378ccbbf25a9095432aada3ac9dd2d963eff51421944beaccdc3e0c</td></tr><tr><td style="border-style:solid; border-width:1px">MinGit-2.43.0-busybox-32-bit.zip</td><td style="border-style:solid; border-width:1px">70799d1f5b9d2469f44299ff33461efd7814531dd9bfb7ae912d1cbf83478162</td></tr><tr><td style="border-style:solid; border-width:1px">Git-2.43.0-64-bit.tar.bz2</td><td style="border-style:solid; border-width:1px">4c19cc73003e55ec71d6f1ce4a961ab32ca22f9c57217d224982535161123f79</td></tr><tr><td style="border-style:solid; border-width:1px">Git-2.43.0-32-bit.tar.bz2</td><td style="border-style:solid; border-width:1px">192f58080247f1eea2845fb61e37e91c05a89b44260c7e045b936ca3e45ac7f6</td></tr></tbody></table><p><span style="background-color:#ffffff; color:#333333">详情可</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgit-for-windows%2Fgit%2Freleases%2Ftag%2Fv2.43.0.windows.1" target="_blank">查看更新说明</a><span style="background-color:#ffffff; color:#333333">。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 21 Nov 2023 06:18:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/267400/git-for-windows-2-43-0-released</guid>
            <link>https://www.oschina.net/news/267400/git-for-windows-2-43-0-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[企业级快速开发框架 nbsaas-boot 1.1.3-2023 发布了]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div><div><pre><code><span><span><span>&lt;</span></span><span><span><span><span><span>parent</span></span></span></span></span><span><span>&gt;</span></span></span><span><span><span>&lt;</span></span><span><span><span><span><span>groupId</span></span></span></span></span><span><span>&gt;</span></span></span>com.nbsaas.boot<span><span><span>&lt;/</span></span><span><span><span><span><span>groupId</span></span></span></span></span><span><span>&gt;</span></span></span><span><span><span>&lt;</span></span><span><span><span><span><span>artifactId</span></span></span></span></span><span><span>&gt;</span></span></span>nbsaas-boot<span><span><span>&lt;/</span></span><span><span><span><span><span>artifactId</span></span></span></span></span><span><span>&gt;</span></span></span><span><span><span>&lt;</span></span><span><span><span><span><span>version</span></span></span></span></span><span><span>&gt;</span></span></span>1.1.3-2023<span><span><span>&lt;/</span></span><span><span><span><span><span>version</span></span></span></span></span><span><span>&gt;</span></span></span><span><span><span>&lt;/</span></span><span><span><span><span><span>parent</span></span></span></span></span><span><span>&gt;</span></span></span></code></pre><p><img alt="" src="https://foruda.gitee.com/images/1692714554881768744/cdda40bc_1029.png" referrerpolicy="no-referrer"></p><p><strong>本次更新内容</strong></p><p>1. 升级 spring-boot 版本，升级 shiro 版本 1.13.0</p><p>2. 增加 SearchData 注解，方便在搜索的适合通过 aop 进行数据拦截</p><p>3. 增加控制操作区域是否显示属性</p><p>4. 新增<span><span>ExtResourceCommand</span> ，处理生成代码的时候生成扩展模块文件夹。</span></p><p>5. 搜索模块支持 or 条件搜索。</p><p>6. 修改通过注解提取模型数据。</p><p><strong>nbsaas-boot 具有以下特点：</strong></p><p>自动建表：nbsaas-boot 提供了自动建表功能，根据用户定义的数据模型自动生成数据库表结构，减少手动操作，提高开发效率。</p><p>开发规范：nbsaas-boot 提供一套开发规范，包括代码风格、命名规范、注释规范等，使团队开发更加规范化和高效化。</p><p>代码生成器：nbsaas-boot 提供代码生成器，根据数据模型自动生成前端和后端代码，提高开发效率和代码质量。</p><p>多租户支持：nbsaas-boot 支持多租户，为不同客户提供独立的数据存储空间和访问权限，保证数据安全性和隔离性</p><p><strong>通过 Command 处理复杂的业务</strong></p><pre><code>InputRequestObject context = <span><span><span><span>new</span></span></span></span> InputRequestObject();
context.setConfig(config);
context.setFormBean(formBean);

 

    <span><span><span><span>new</span></span></span></span> DomainCommand()
        .after(<span><span><span><span>new</span></span></span></span> ApiCommand())
        .after(<span><span><span><span>new</span></span></span></span> ConvertCommand())
        .after(<span><span><span><span>new</span></span></span></span> ControllerFrontCommand())
        .after(<span><span><span><span>new</span></span></span></span> RestCommand())
        .after(<span><span><span><span>new</span></span></span></span> ExtApiCommand())
        .after(<span><span><span><span>new</span></span></span></span> RepositoryCommand())
        .after(<span><span><span><span>new</span></span></span></span> FieldCommand())
        .after(<span><span><span><span>new</span></span></span></span> FinishCommand()).execute(context);</code></pre><p><strong>模型构建</strong></p><pre><code><span><span><span><span>@CatalogClass</span></span></span></span><span><span><span><span>@FormAnnotation</span></span></span></span>(title = <span><span><span><span>"组织架构管理"</span></span></span></span>, model = <span><span><span><span>"组织架构"</span></span></span></span>, menu = <span><span><span><span>"1,27,88"</span></span></span></span>)
<span><span><span><span>@Data</span></span></span></span><span><span><span><span>@Entity</span></span></span></span><span><span><span><span>@Table</span></span></span></span>(name = <span><span><span><span>"sys_structure"</span></span></span></span>)
public class Structure extends CatalogEntity {

    <span><span><span><span>@FormField</span></span></span></span>(title = <span><span><span><span>"父分类名称"</span></span></span></span>)
    <span><span><span><span>@Comment</span></span></span></span>(<span><span><span><span>"父分 id"</span></span></span></span>)
    <span><span><span><span>@FieldName</span></span></span></span><span><span><span><span>@FieldConvert</span></span></span></span>(classType = <span><span><span><span>"Integer"</span></span></span></span>)
    <span><span><span><span>@ManyToOne</span></span></span></span>(fetch = FetchType.LAZY)
    private Structure parent;

    <span><span><span><span>@OneToMany</span></span></span></span>(fetch = FetchType.LAZY, mappedBy = <span><span><span><span>"parent"</span></span></span></span>)
    private List&lt;Structure&gt; children;

}</code></pre><p>通过模型数据提取，然后通过代码生成器生成后端代码 + vue3 后端管理代码</p><p>基础功能项目 https://gitee.com/cng1985/nbsaas-boot-starter<br> 项目脚手架 https://gitee.com/cng1985/nbsaas-admin<br> vue3 后台管理脚手架 https://gitee.com/cng1985/nbsaas-admin-vue3</p></div></div></div>
                                    ]]>
            </description>
            <pubDate>Tue, 21 Nov 2023 05:40:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/267394/nbsaas-boot-1-1-3-2023</guid>
            <link>https://www.oschina.net/news/267394/nbsaas-boot-1-1-3-2023</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[wechat-app-mall 14.14.2 发布，微信小程序商城]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">微信小程序商城 wechat-app-mall 已经升级至 version 14.14.2 ，具体详情请查看码云项目主页更新</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">本次更新功能如下：</p><ol><li>保存小程序码到手机相册，用户拒绝后给你提示并引导用户打开设置去开启权限；</li><li>上传文件接口升级；</li><li>关于我们，帮助中心页面，增加转发及分享朋友圈；</li><li>客服支持配置成企业微信；</li><li>提现后台控制开关；</li><li>增加 IoT 控制；</li><li>按天定价、时段定价页面示例；</li><li>vant，apifm-sdk 升级到最新版；</li><li>核销开关系统参数可控制，核销码改为小程序码，支持直接用微信扫一扫进行核销；</li><li>申请发票增加订阅消息；</li><li>好评率计算方式调整；</li><li>增加设置暱称头像弹框，引导用户完善资料;三级分销抢客支持在 config.js 配置；</li><li>系统设置增加调试开关，以及打开小程序设置;</li><li>秒杀样式美化;</li><li>增加转发朋友圈功能;</li><li>vant 升级到最新版;</li><li>增加动态会员码功能;</li><li>编辑资料页面优化;</li><li>提现超过 2000 增加填写真实姓名;</li></ol></div>
                                    ]]>
            </description>
            <pubDate>Tue, 21 Nov 2023 03:41:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/267383/wechat-app-mall-14-14-2-released</guid>
            <link>https://www.oschina.net/news/267383/wechat-app-mall-14-14-2-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[TypeScript 5.3 正式发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>TypeScript 5.3 已正式发布。</p><p><strong>主要变化</strong></p><ul><li><p>支持&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ftc39%2Fproposal-import-attributes">import attributes</a>&nbsp;提案的最近更新</p></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdevblogs.microsoft.com%2Ftypescript%2Fannouncing-typescript-5-3%2F%23stable-support-resolution-mode-in-import-types" target="_blank">在 Import Types</a>&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdevblogs.microsoft.com%2Ftypescript%2Fannouncing-typescript-5-3%2F%23stable-support-resolution-mode-in-import-types" target="_blank">中提供对<code>resolution-mode</code>的稳定支持</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdevblogs.microsoft.com%2Ftypescript%2Fannouncing-typescript-5-3%2F%23resolution-mode-supported-in-all-module-modes" target="_blank">为所有 Module Modes</a>&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdevblogs.microsoft.com%2Ftypescript%2Fannouncing-typescript-5-3%2F%23resolution-mode-supported-in-all-module-modes" target="_blank">提供</a><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdevblogs.microsoft.com%2Ftypescript%2Fannouncing-typescript-5-3%2F%23resolution-mode-supported-in-all-module-modes" target="_blank"><code>resolution-mode</code>支持</a></li><li><p><code>switch (true)</code>Narrowing</p></li><li><p>Narrowing On Comparisons to Booleans</p></li><li><p>检查对实例字段的<code>super</code>属性访问</p></li><li><p>针对类型的交互式嵌套提示 (Interactive Inlay Hints)</p></li><li><p>跳过 JSDoc 解析以进行优化</p></li><li><p>合并<code>tsserverlibrary.js</code>和<code>typescript.js</code></p></li></ul><hr><p><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ftc39%2Fproposal-import-attributes">import attributes</a></strong></p><p>import attributes 的一个用例是向运行时提供有关模块预期格式的信息。</p><pre><code class="language-javascript">// We only want this to be interpreted as JSON,
// not a runnable/malicious JavaScript file with a `.json` extension.
import obj from "./something.json" with { type: "json" };
</code></pre><p>TypeScript 不会检查这些属性的内容，因为它们是特定于主机的，因此不会对它们进行检查，只是让浏览器和运行时处理它们（可能会出错）。</p><pre><code class="language-javascript">// TypeScript is fine with this.
// But your browser? Probably not.
import * as foo from "./foo.js" with { type: "fluffy bunny" };
</code></pre><p>动态 import () 调用也可以通过第二个参数使用 import 属性。</p><pre><code class="language-javascript">const obj = await import("./something.json", {
    with: { type: "json" }
});
</code></pre><p>第二个参数的预期类型由一个名为<code>ImportCallOptions</code>的类型定义，默认情况下，该类型只期望调用一个属性<code>with</code>。</p><p>请注意，导入属性是从早期的 "导入断言"（import assertions）提案演变而来的，该提案已在 TypeScript 4.5 中实现。最明显的区别是使用了<code>with</code>关键字而非<code>assert</code>关键字。但不太明显的区别是，运行时现在可以自由使用属性来指导导入路径的解析和解释，而导入断言只能在加载模块后断言某些特性。</p><p>随着时间的推移，TypeScript 将淘汰旧的导入断言语法，转而使用建议的导入属性语法。使用 assert 的现有代码应迁移到 with 关键字。需要导入属性的新代码应只使用<code>with</code>关键字。</p><p><strong><code>switch (true)</code>Narrowing</strong></p><p>TypeScript 5.3 可以根据<code>switch (true)</code>中每个<code>case</code>子句的条件执行 narrowing。</p><pre><code class="language-javascript">function f(x: unknown) {
    switch (true) {
        case typeof x === "string":
            // 'x' is a 'string' here
            console.log(x.toUpperCase());
            // falls through...

        case Array.isArray(x):
            // 'x' is a 'string | any[]' here.
            console.log(x.length);
            // falls through...

        default:
          // 'x' is 'unknown' here.
          // ...
    }
}
</code></pre><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdevblogs.microsoft.com%2Ftypescript%2Fannouncing-typescript-5-3%2F" target="_blank">详情查看发布公告</a>。</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 21 Nov 2023 03:39:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/267382/typescript-5-3-ga</guid>
            <link>https://www.oschina.net/news/267382/typescript-5-3-ga</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[微软周二补丁日 (Patch Tuesday) 实施 20 周年]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>微软安全响应中心上周庆祝了周二补丁日 (Patch Tuesday) <u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmsrc.microsoft.com%2Fblog%2F2023%2F11%2Freflecting-on-20-years-of-patch-tuesday%2F" target="_blank">实施二十周年</a></u>。</p><p>周二补丁日也称补丁星期二、星期二更新 (Update Tuesday) 等，它是一个在行业内被广泛使用的非正式术语，指微软定期在每个月的第二个星期二发布其软件产品的更新补丁，经由 Windows Update 推送给用户。具体时间为 UTC 18:00（或 17:00 开始）。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-584f40b5209168b60a127974dbb6c03dc59.png" referrerpolicy="no-referrer"></p><p>微软有一种习惯，会在偶数月份发布更多的更新，相应奇数月份的更新会更少。少数更新也会在周二补丁日之外被发布。某些更新，例如 Microsoft Defender 的病毒库更新则会每天发布。有时候，在一次常规的周二补丁日之后会有一次额外的周二补丁日。另外一些更新则可能随时会被发布。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-a84502b16cff68810870adb778d2491d613.png" referrerpolicy="no-referrer"></p><p>微软于 2003 年 10 月正式开始了此模式。在统一采用周二补丁日前，安全补丁的发布是零零散散的，这种零散的模式给 IT 工作者和组织部署重要补丁带来了挑战。微软率先提出的可预测的补丁发布时间表改变了这一状况。</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 21 Nov 2023 02:51:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/267373/20-years-of-patch-tuesday</guid>
            <link>https://www.oschina.net/news/267373/20-years-of-patch-tuesday</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Spring Security 6.2 GA]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Spring Security 6.2&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fspring.io%2Fblog%2F2023%2F11%2F20%2Fspring-security-6-2-goes-ga" target="_blank">已正式 GA</a>。</p><p>Spring Security 是一个能够为基于 Spring 的企业应用系统提供声明式的安全访问控制解决方案的安全框架。它提供了一组可以在 Spring 应用上下文中配置的 Bean，充分利用了 Spring IoC，DI（控制反转 Inversion of Control ,DI:Dependency Injection 依赖注入）和 AOP（面向切面编程）功能，为应用系统提供声明式的安全访问控制功能，减少了为企业系统安全控制编写大量重复代码的工作。</p><p>Spring Security 6.2 将 Spring Framework baseline&nbsp;与 Project Reactor 2023.0.0 和 Micrometer 1.12.0 一起升级到了 6.1，同时要求将 Java 17 作为最低平台版本，并支持高达 Java 21 的虚拟线程支持。该版本将包含在即将发布的 Spring Boot 3.2 GA 版本中。</p><p>一些版本更新亮点内容如下：</p><p><strong>Configuration</strong></p><ul><li><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fspring-projects%2Fspring-security%2Fissues%2F5011" target="_blank">gh-5011 - (docs)</a>&nbsp;如果存在<code>CorsConfigurationSource</code> bean ，则自动启用<code>.cors()</code></p></li><li><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fspring-projects%2Fspring-security%2Fissues%2F13204" target="_blank">gh-13204 - (docs)</a>&nbsp;添加<code>AbstractConfiguredSecurityBuilder.with(…​)</code>方法以应用返回构建器的配置器</p></li><li><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fspring-projects%2Fspring-security%2Fpull%2F13587" target="_blank">gh-13587 - blog post</a>&nbsp;简化 OAuth2 客户端组件模型的配置</p></li><li><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fspring-projects%2Fspring-security%2Fpull%2F13857" target="_blank">gh-13857 - docs</a>&nbsp;将 servlet 模式支持添加到 AuthorizeHttpRequests</p></li></ul><p><strong>OAuth 2.0/OIDC</strong></p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fspring-projects%2Fspring-security%2Fissues%2F7845" target="_blank">gh-7845 - docs</a>&nbsp;添加 OIDC Back-channel Logout&nbsp;支持</li></ul><p><strong>Messaging</strong></p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fspring-projects%2Fspring-security%2Fpull%2F12532" target="_blank">gh-12532</a>&nbsp;- 添加安全上下文传播支持</li></ul><p><strong>Web</strong></p><ul><li><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fspring-projects%2Fspring-security%2Fpull%2F12817" target="_blank">gh-12817</a>&nbsp;- 使 RedirectStrategy status code 可配置</p></li><li><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fspring-projects%2Fspring-security%2Fissues%2F13988" target="_blank">gh-13988</a>&nbsp;- 可配置 HTTP Basic 请求解析</p></li></ul><p><strong>Documentation</strong></p><ul><li><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fspring-projects%2Fspring-security%2Fissues%2F13784" target="_blank">gh-13784 - docs</a>- 使用示例更新 OAuth2 文档登录页面</p></li><li><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fspring-projects%2Fspring-security%2Fissues%2F11926" target="_blank">gh-11926 - docs</a>&nbsp;记录如何在没有<code>WebSecurityConfigurerAdapter</code>的情况下发布<code>AuthenticationManager</code>&nbsp;<code>@Bean</code></p></li></ul><p>详情可<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fspring.io%2Fblog%2F2023%2F11%2F20%2Fspring-security-6-2-goes-ga" target="_blank">查看官方公告</a>。</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 21 Nov 2023 02:32:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/267367/spring-security-6-2-ga</guid>
            <link>https://www.oschina.net/news/267367/spring-security-6-2-ga</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[XL-LightHouse 1.1.4 发布，零门槛轻松实现大数据实时统计]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h4><strong>升级内容：</strong></h4><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="background-color:#ffffff; color:#1f2328">1、优化系统统计工程管理模块；</span><br><span style="background-color:#ffffff; color:#1f2328">2、insights 模块功能初始化；</span><br><span style="background-color:#ffffff; color:#1f2328">3、项目文档优化；</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong><em>一键部署，一行代码接入，无需大数据研发运维经验，轻松实现海量数据实时统计，使用 XL-LightHouse 后：</em></strong></p><ul><li><span style="color:#0033b3">&nbsp;1、</span>再也不需要用 Flink、Spark、ClickHouse 或者基于 Redis 这种臃肿笨重的方案跑数了；</li><li><span style="color:#0033b3">&nbsp;</span>2、再也不需要疲于应付对个人价值提升没有多大益处的数据统计需求了，能够帮助您从琐碎反复的数据统计需求中抽身出来，从而专注于对个人提升、对企业发展更有价值的事情；</li><li><span style="color:#0033b3">&nbsp;</span>3、轻松帮您实现任意细粒度的监控指标，是您监控服务运行状况，排查各类业务数据波动、指标异常类问题的好帮手；</li><li><span style="color:#0033b3">&nbsp;</span>4、培养数据思维，辅助您将所从事的工作建立数据指标体系，量化工作产出，做专业严谨的职场人，创造更大的个人价值；</li></ul><h4><em><strong>概述</strong></em></h4><ul><li>XL-LightHouse 是针对互联网领域繁杂的流式数据统计需求而开发的一套集成了数据写入、数据运算、数据存储和数据可视化等一系列功能，支持超大数据量，支持超高并发的【通用型流式大数据统计平台】。</li><li>XL-LightHouse 目前已基本涵盖了常见的流式数据统计场景，包括 count、sum、max、min、avg、distinct、topN/lastN 等多种运算，支持多维度计算，支持分钟级、小时级、天级多个时间粒度的统计，支持自定义统计周期的配置。</li><li>XL-LightHouse 内置丰富的转化类函数、支持表达式解析，可以满足各种复杂的条件筛选和逻辑判断。</li><li>XL-LightHouse 是一套功能完备的流式大数据统计领域的数据治理解决方案，它提供了比较友好和完善的可视化查询功能，并对外提供 API 查询接口，此外还包括数据指标管理、权限管理、统计限流等多种功能。</li><li>XL-LightHouse 支持时序性数据的存储和查询。</li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong><em>产品优势</em></strong></p><ul><li>XL-LightHouse 面向企业繁杂的流式数据统计需求，可以帮助企业在极短时间内快速实现数以万计、数十万计的数据指标，而这是 Flink、ClickHouse 之类技术所远不能比拟的，XL-LightHouse 帮助企业低成本实现数据化运营，数据指标体系可遍布企业运转的方方面面；</li><li>对单个流式统计场景的数据量无限制，可以非常庞大，也可以非常稀少，您既可以使用它完成十亿级用户量 APP 的 DAU 统计、十几万台服务器的运维监控、一线互联网大厂数据量级的日志统计、也可以用它来统计一天只有零星几次的接口调用量、耗时状况；</li><li>支持高并发查询统计结果；</li><li>一键部署、一行代码接入，无需专业的大数据研发人员，普通工程人员就可以轻松驾驭；</li><li>有完善的数据指标可视化以及数据指标管理维护等功能；</li></ul><h4><strong><em>收益</em></strong></h4><ul><li>XL-LightHouse 可以帮助企业更快速的搭建起一套较为完善的、稳定可靠的数据化运营体系，节省企业在数据化运营方面的投入，主要体现在以下几个方面：</li><li>减少企业在流式大数据统计方面的研发成本和数据维护成本。</li><li>帮助企业节省时间成本，辅助互联网产品的快速迭代。</li><li>为企业节省较为可观的服务器运算资源。</li><li>便于数据在企业内部的共享和互通。</li><li>此外，XL-LightHouse 对中小企业友好，它大大降低了中小企业使用流式大数据统计的技术门槛，通过简单的页面配置和数据接入即可应对繁杂的流式数据统计需求。&nbsp;</li></ul><h4><strong><em>项目地址</em></strong></h4><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxl-xueling%2Fxl-lighthouse.git" target="_blank">https://github.com/xl-xueling/xl-lighthouse.git</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/xl-xueling/xl-lighthouse.git">https://gitee.com/xl-xueling/xl-lighthouse.git</a></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 21 Nov 2023 01:46:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/267354/xl-lighthouse-1-1-4</guid>
            <link>https://www.oschina.net/news/267354/xl-lighthouse-1-1-4</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[AiEditor beta.2 发布，一个面向 AI 的下一代富文本编辑器]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:center"><img alt="screenshot.png" src="https://gitee.com/aieditor-team/aieditor/raw/main/docs/assets/image/screenshot.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>关于 AiEditor</strong></p><blockquote><p style="margin-left:0; margin-right:0">AiEditor 是一个面向 AI 的下一代富文本编辑器，她基于 Web Component，因此支持 Layui、Vue、React、Angular 等几乎任何前端框架。她适配了 PC Web 端和手机端，并提供了，亮色，和 暗色，两个主题。除此之外，她还提供了灵活的配置，开发者可以方便的使用其开发任何文字编辑的应用。</p></blockquote><h2>在线演示</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Faieditor.jpress.cn" target="_blank">http://aieditor.jpress.cn</a></p><h2>已完善</h2><ul><li>&nbsp;基础：标题、正文、字体、字号、加粗、斜体、下划线、删除线、链接、行内代码、上标、下标、分割线、引用、打印</li><li>&nbsp;增强：撤回、重做、格式刷、橡皮擦、待办事项、字体颜色、背景颜色、Emoji 表情、对齐方式、行高、有（无）序列表、段落缩进、强制换行</li><li>&nbsp;附件：支持图片、视频、文件功能，支持选择上传、粘贴上传、拖拽上传、支持拖动调整大小...</li><li>&nbsp;代码：行内代码、代码块、代码语言选择</li><li>&nbsp;表格：左增右增、左减右减、上增下增、上减下减、合并单元格、解除合并</li><li>&nbsp;A I：AI 续写、AI 优化、AI 校对、AI 翻译、自定义 AI 菜单及其 Prompts</li><li>&nbsp;更多：亮色主题、暗色主题、手机版适配、全屏编辑、@某某某（提及）...</li></ul><h2>v1.0.0-beta.2 更新细节：</h2><ul><li>新增：添加输入 "/" 时弹出 AI 菜单的功能</li><li>新增：AiEditor 添加 onChange 的回调配置</li><li>新增：星火大模型添加 ws 和 wss 协议配置的支持</li><li>新增：星火大模型添加自定义 URL 数据前面的支持</li><li>新增：编辑器右下角添加自由拖拽放大或缩小整个编辑器的支持</li><li>新增：添加传统模式下，比如 Layui 集成的示例</li><li>新增：顶部菜单以及操作菜单添加鼠标移动有操作提示的支持</li><li>新增：图片添加多图选择上传显示的功能</li><li>新增：支持从电脑复制图片到编辑器粘贴上传的功能（之前已支持拖拽上传和选择上传）</li><li>新增：添加选择某段文字后，点击菜单时选区样式消失的问题</li><li>优化：优化 @某某某（提及）时的暗色样式错误</li><li>修复：Base64Uploader 显示模拟上传时显示错误</li><li>修复：暗色模式下，全屏编辑时，编辑区显示亮色的问题</li><li>修复：@某某某（提及）通过鼠标点击选择用户时，显示 "@null" 的问题</li><li>修复：链接弹出菜单点击取消链接时，错误的弹出编辑框的问题</li><li>修复：Firefox 浏览器下某些 icon 无法显示的问题</li></ul><h2>下个版本功能计划：</h2><ul><li>&nbsp;完善国际化</li><li>&nbsp;完善文档站点</li><li>&nbsp;对接 ChatGPT</li></ul><h2>快速开始</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">安装：</p><div><div><pre><span>npm i aieditor</span></pre><div>
   &nbsp;
  </div></div></div><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">使用：</p><div><div><pre><span><strong>new</strong><span>AiEditor</span><span>({</span></span><span><span style="color:#008080">element</span><span>:</span><span>"</span><span style="color:#dd1144">#aiEditor</span><span>"</span><span>,</span></span><span><span style="color:#008080">placeholder</span><span>:</span><span>"</span><span style="color:#dd1144">点击输入内容...</span><span>"</span><span>,</span></span><span><span style="color:#008080">content</span><span>:</span><span>'</span><span style="color:#dd1144">AiEditor 是一个面向 AI 的开源富文本编辑器。 </span><span>'</span><span>,</span></span><span><span style="color:#008080">ai</span><span>:</span><span>{</span></span><span><span style="color:#008080">model</span><span>:</span><span>{</span></span><span><span style="color:#008080">xinghuo</span><span>:</span><span>{</span></span><span><span style="color:#008080">appId</span><span>:</span><span>"</span><span style="color:#dd1144">***</span><span>"</span><span>,</span></span><span><span style="color:#008080">apiKey</span><span>:</span><span>"</span><span style="color:#dd1144">***</span><span>"</span><span>,</span></span><span><span style="color:#008080">apiSecret</span><span>:</span><span>"</span><span style="color:#dd1144">***</span><span>"</span><span>,</span></span><span><span>}</span></span><span><span>}</span></span><span><span>}</span></span><span><span>})</span></span></pre><div>
   &nbsp;
  </div></div></div><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">传统方式使用，参考 layui 示例：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/aieditor-team/aieditor/tree/main/demos/layui">https://gitee.com/aieditor-team/aieditor/tree/main/demos/layui</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">&nbsp;</p><h2>AI 功能配置</h2><ul><li>1、去科大讯飞注册账号&nbsp;<a href="https://gitee.com/link?target=https%3A%2F%2Fxinghuo.xfyun.cn">https://xinghuo.xfyun.cn</a></li><li>2、在科大讯飞服务管理中（<a href="https://gitee.com/link?target=https%3A%2F%2Fconsole.xfyun.cn%2Fservices%2Fbm2">https://console.xfyun.cn/services/bm2</a>&nbsp;） 获取 appId、apiKey、apiSecret。</li><li>3、在配置中添加科大讯飞星火大模型配置</li></ul><pre><span style="color:#d73a49">new</span><span style="color:#d73a49">AiEditor</span>({
    <span style="color:#005cc5">element</span>: <span style="color:#032f62">"#aiEditor"</span>,
    <span style="color:#005cc5">placeholder</span>: <span style="color:#032f62">"点击输入内容..."</span>,
    <span style="color:#005cc5">content</span>: <span style="color:#032f62">'AiEditor 是一个面向 AI 的开源富文本编辑器。'</span>,
    <span style="color:#005cc5">ai</span>: {
        <span style="color:#005cc5">model</span>: {
            <span style="color:#005cc5">xinghuo</span>: {
                <span style="color:#005cc5">appId</span>: <span style="color:#032f62">"***"</span>,
                <span style="color:#005cc5">apiKey</span>: <span style="color:#032f62">"***"</span>,
                <span style="color:#005cc5">apiSecret</span>: <span style="color:#032f62">"***"</span>,
            }
        }
    }
})
</pre></div>
                                    ]]>
            </description>
            <pubDate>Tue, 21 Nov 2023 01:22:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/267350/aieditor-beta2</guid>
            <link>https://www.oschina.net/news/267350/aieditor-beta2</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[MyBatis-Flex v1.7.4 发布，一个优雅的 MyBatis 增强框架]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:center"><img alt="" height="265" src="https://oscimg.oschina.net/oscnet/up-0d6ec96d8070deb116566704fcc7bfd1291.png" width="500" referrerpolicy="no-referrer"></p><h1>MyBatis-Flex： 一个优雅的 MyBatis 增强框架</h1><h1>特征</h1><h4>1、很轻量</h4><blockquote><p style="margin-left:0; margin-right:0">MyBatis-Flex 整个框架只依赖 MyBatis，再无其他任何第三方依赖。</p></blockquote><h4>2、只增强</h4><blockquote><p style="margin-left:0; margin-right:0">MyBatis-Flex 支持 CRUD、分页查询、多表查询、批量操作，但不丢失 MyBatis 原有的任何功能。</p></blockquote><h4>3、高性能</h4><blockquote><p style="margin-left:0; margin-right:0">MyBatis-Flex 采用独特的技术架构、相比许多同类框架，MyBatis-Flex 的在增删改查等方面的性能均超越其 5~10 倍或以上。</p></blockquote><h4>4、更灵动</h4><blockquote><p style="margin-left:0; margin-right:0">MyBatis-Flex 支持多主键、多表查询、逻辑删除、乐观锁、数据脱敏、数据加密、多数据源、分库分表、字段权限、 字段加密、多租户、事务管理、SQL 审计... 等等等等。 这一切，免费且灵动。</p></blockquote><h4>&nbsp;</h4><h4><strong>MyBatis-Flex v1.7.4 更新细节如下：</strong></h4><div><ul><li>新增：QueryMethods 添加 bracket 在极特殊场景下用于构建括号的支持，感谢<span>&nbsp;</span><a href="https://gitee.com/Suomm" target="_blank">@王帅</a></li><li>新增：QueryWrapper 添加取相反数的 SQL 构建，感谢<span>&nbsp;</span><a href="https://gitee.com/Suomm" target="_blank">@王帅</a></li><li>优化：重命名 RawFragment 为 RawQueryCondition，保持 Raw 的风格统一，感谢<span>&nbsp;</span><a href="https://gitee.com/Suomm" target="_blank">@王帅</a></li><li>优化：solon-plugin 升级 solon 升为 2.5.3，感谢<span>&nbsp;</span><a href="https://gitee.com/noear_admin" target="_blank">@西东</a></li><li>修复：ArithmeticQueryColumn 算术运算无法拼接条件的问题，感谢 @uanmengyuan</li><li>修复：读写分离自定义分离策略不生效的问题<span>&nbsp;</span><a href="https://gitee.com/mybatis-flex/mybatis-flex/issues/I8FP0K">#I8FP0K:[Bug]: 读写分离自定义分离策略不生效</a></li><li>修复：Spring 下使用 @Transactional 嵌套时，默认事务传播机制与预期不符<span>&nbsp;</span></li><li>修复：case when 别名丢失的问题，感谢<span>&nbsp;</span><a href="https://gitee.com/x-core" target="_blank">@丿风轻灬云淡</a></li><li>文档：添加关于 QueryWrapper 克隆测试的相关文档，感谢<span>&nbsp;</span><a href="https://gitee.com/Suomm" target="_blank">@王帅</a></li><li>文档：添加关于 QueryWrapper 取相反数的 SQL 构建文档，感谢<span>&nbsp;</span><a href="https://gitee.com/Suomm" target="_blank">@王帅</a></li><li>文档：优化 QueryWrapper 的相关文档，感谢<span>&nbsp;</span><a href="https://gitee.com/Suomm" target="_blank">@王帅</a></li></ul><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="margin-left:0; margin-right:0">代码贡献者，请参考：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fintro%2Fwhat-is-mybatisflex.html%23%25E8%25B4%25A1%25E7%258C%25AE%25E8%2580%2585" target="_blank">https://mybatis-flex.com/zh/intro/what-is-mybatisflex.html#%E8%B4%A1%E7%8C%AE%E8%80%85</a></p><p style="margin-left:0; margin-right:0">&nbsp;</p></div><h4><strong>进一步了解 MyBatis-Flex 框架，请参考一下链接：</strong></h4><ul><li>1、快速开始：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fintro%2Fgetting-started.html" target="_blank">https://mybatis-flex.com/zh/intro/getting-started.html</a></li><li>2、多表关联查询：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fbase%2Fquery.html%23%25E5%2585%25B3%25E8%2581%2594%25E6%259F%25A5%25E8%25AF%25A2-%25E6%2588%2596%25E5%25A4%259A%25E8%25A1%25A8%25E6%259F%25A5%25E8%25AF%25A2" target="_blank">https://mybatis-flex.com/zh/base/query.html</a></li><li>3、一对多、多对一：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fbase%2Frelations-query.html" target="_blank">https://mybatis-flex.com/zh/base/relations-query.html</a></li><li>4、灵活的 QueryWrapper：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fbase%2Fquerywrapper.html" target="_blank">https://mybatis-flex.com/zh/base/querywrapper.html</a></li><li>5、逻辑删除：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fcore%2Flogic-delete.html" target="_blank">https://mybatis-flex.com/zh/core/logic-delete.html</a></li><li>6、乐观锁：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fcore%2Fversion.html" target="_blank">https://mybatis-flex.com/zh/core/version.html</a></li><li>7、数据填充：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fcore%2Ffill.html" target="_blank">https://mybatis-flex.com/zh/core/fill.html</a></li><li>6、数据脱敏：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fcore%2Fmask.html" target="_blank">https://mybatis-flex.com/zh/core/mask.html</a></li><li>7、SQL 审计：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fcore%2Faudit.html" target="_blank">https://mybatis-flex.com/zh/core/audit.html</a></li><li>8、多数据源：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fcore%2Fmulti-datasource.html" target="_blank">https://mybatis-flex.com/zh/core/multi-datasource.htm</a></li><li>9、数据源加密：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fcore%2Fdatasource-encryption.html" target="_blank">https://mybatis-flex.com/zh/core/datasource-encryption.html</a></li><li>10、动态表名：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fcore%2Fdynamic-table.html" target="_blank">https://mybatis-flex.com/zh/core/dynamic-table.html</a></li><li>11、事务管理：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fcore%2Ftx.html" target="_blank">https://mybatis-flex.com/zh/core/tx.html</a></li><li>12、数据权限：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fcore%2Fdata-permission.html" target="_blank">https://mybatis-flex.com/zh/core/data-permission.html</a></li><li>13、字段权限：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fcore%2Fcolumns-permission.html" target="_blank">https://mybatis-flex.com/zh/core/columns-permission.html</a></li><li>14、字段加密：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fcore%2Fcolumns-encrypt.html" target="_blank">https://mybatis-flex.com/zh/core/columns-encrypt.html</a></li><li>15、字典回写：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fcore%2Fcolumns-dict.html" target="_blank">https://mybatis-flex.com/zh/core/columns-dict.html</a></li><li>16、枚举属性：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fcore%2Fenum-property.html" target="_blank">https://mybatis-flex.com/zh/core/enum-property.html</a></li><li>17、多租户：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fcore%2Fmulti-tenancy.html" target="_blank">https://mybatis-flex.com/zh/core/multi-tenancy.html</a></li><li>18、代码生成器：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fothers%2Fcodegen.html" target="_blank">https://mybatis-flex.com/zh/others/codegen.html</a></li><li>19、QQ 交流群：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fintro%2Fqq-group.html" target="_blank">https://mybatis-flex.com/zh/intro/qq-group.html</a></li><li>20、更好用的功能正在路上：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com" target="_blank">https://mybatis-flex.com</a></li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">&nbsp;</p><h4><strong>bilibili 视频教程（免费）：</strong></h4><p style="color:#3c3c43; margin-left:0; margin-right:0; text-align:start"><strong>课程 ：《MyBatis-Flex 视频教程》</strong></p><blockquote><p style="color:var(--vp-c-text-2); margin-left:0; margin-right:0">课程简介：该课程由<span>&nbsp;</span><a href="https://gitee.com/Suomm" target="_blank">王帅</a><span>&nbsp;</span>老师录制主讲，<span>&nbsp;</span><a href="https://gitee.com/Suomm" target="_blank">王帅</a><span>&nbsp;</span>老师也是除了作者以外，对 MyBatis-Flex 代码贡献最大的 committer。 其无论对 MyBatis 还是 MyBatis-Flex，都有非常深入的理解。</p></blockquote><p style="color:#3c3c43; margin-left:0; margin-right:0; text-align:start">课程地址：</p><p style="color:#3c3c43; margin-left:0; margin-right:0; text-align:start"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV11h411A7cU" target="_blank">https://www.bilibili.com/video/BV11h411A7cU</a></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 21 Nov 2023 01:16:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/267349</guid>
            <link>https://www.oschina.net/news/267349</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[NocoBase 发布 V0.16 - 开源私有部署的无代码/低代码平台]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:rgba(var(--color-text-base),var(--tw-text-opacity)) !important; margin-left:0; margin-right:0; text-align:start">NocoBase 是一个极易扩展的开源无代码开发平台。 不必投入几年时间、数百万资金研发，花几分钟时间部署 NocoBase，马上拥有一个私有、可控、极易扩展的无代码开发平台。</p><p style="color:rgba(var(--color-text-base),var(--tw-text-opacity)) !important; margin-left:0; margin-right:0; text-align:start">中文官网：<br><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcn.nocobase.com%2F" target="_blank">https://cn.nocobase.com/</a></p><p style="color:rgba(var(--color-text-base),var(--tw-text-opacity)) !important; margin-left:0; margin-right:0; text-align:start"><img alt="NocoBase" src="https://nocobase-file.oss-cn-beijing.aliyuncs.com/main-l.png" referrerpolicy="no-referrer"></p><h2>新特性</h2><p style="color:rgba(var(--color-text-base),var(--tw-text-opacity)) !important; margin-left:0; margin-right:0; text-align:start">之前版本的 cache 可用性较差（仅支持 memory 缓存），v0.16 版本进行了重构，内置了 memory 和 redis 两种 store（缓存存储方式），也支持自定义存储方式，具体的使用方法请参考<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs-cn.nocobase.com%2Fapi%2Fcache%2Fcache-manager" target="_blank">API 文档</a>。</p><h2>不兼容的变化</h2><h4>Node 最低版本更改为 18</h4><p style="color:rgba(var(--color-text-base),var(--tw-text-opacity)) !important; margin-left:0; margin-right:0; text-align:start">Node v16 已经停止维护了，最低版本更改为 v18</p><pre><code><span><span style="color:#abb2bf">{</span></span><span><span style="color:#abb2bf"></span><span style="color:#e06c75">"engines"</span><span style="color:#abb2bf">: {</span></span><span><span style="color:#abb2bf"></span><span style="color:#e06c75">"node"</span><span style="color:#abb2bf">: </span><span style="color:#98c379">"&gt;=18"</span></span><span><span style="color:#abb2bf">  }</span></span><span><span style="color:#abb2bf">}</span></span></code></pre><h4>创建缓存方法变更</h4><p style="color:rgba(var(--color-text-base),var(--tw-text-opacity)) !important; margin-left:0; margin-right:0; text-align:start">以前创建缓存通过<span>&nbsp;</span><code>createCache</code><span>&nbsp;</span>方法创建，该方法已废弃。</p><pre><code><span><span style="color:#c678dd">import</span><span style="color:#abb2bf"> { </span><span style="color:#e06c75">createCache</span><span style="color:#abb2bf"> } </span><span style="color:#c678dd">from</span><span style="color:#abb2bf"></span><span style="color:#98c379">"@nocobase/cache"</span><span style="color:#abb2bf">;</span></span><span><span style="color:#c678dd">const</span><span style="color:#abb2bf"></span><span style="color:#e5c07b">cache</span><span style="color:#abb2bf"></span><span style="color:#56b6c2">=</span><span style="color:#abb2bf"></span><span style="color:#61afef">createCache</span><span style="color:#abb2bf">();</span></span></code></pre><p style="color:rgba(var(--color-text-base),var(--tw-text-opacity)) !important; margin-left:0; margin-right:0; text-align:start">新的缓存由<span>&nbsp;</span><code>CacheManager</code><span>&nbsp;</span>统一管理，通过<span>&nbsp;</span><code>app.cacheManager</code><span>&nbsp;</span>创建。</p><pre><code><span><span style="color:#c678dd">const</span><span style="color:#abb2bf"></span><span style="color:#e5c07b">cache</span><span style="color:#abb2bf"></span><span style="color:#56b6c2">=</span><span style="color:#abb2bf"></span><span style="color:#c678dd">await</span><span style="color:#abb2bf"></span><span style="color:#e5c07b">app</span><span style="color:#abb2bf">.</span><span style="color:#e5c07b">cacheManager</span><span style="color:#abb2bf">.</span><span style="color:#61afef">createCache</span><span style="color:#abb2bf">({</span></span><span><span style="color:#abb2bf"></span><span style="color:#e06c75">name</span><span style="color:#abb2bf">: </span><span style="color:#98c379">"memory"</span><span style="color:#abb2bf">, </span><em>// 缓存唯一标识</em></span><span><span style="color:#abb2bf"></span><span style="color:#e06c75">store</span><span style="color:#abb2bf">: </span><span style="color:#98c379">"memory"</span><span style="color:#abb2bf">, </span><em>// 缓存方式</em></span><span><span style="color:#abb2bf"></span><em>// 其他缓存配置</em></span><span><span style="color:#abb2bf"></span><span style="color:#e06c75">max</span><span style="color:#abb2bf">: </span><span style="color:#d19a66">2000</span><span style="color:#abb2bf">,</span></span><span><span style="color:#abb2bf"></span><span style="color:#e06c75">ttl</span><span style="color:#abb2bf">: </span><span style="color:#d19a66">60</span><span style="color:#abb2bf"></span><span style="color:#56b6c2">*</span><span style="color:#abb2bf"></span><span style="color:#d19a66">1000</span><span style="color:#abb2bf">,</span></span><span><span style="color:#abb2bf">});</span></span></code></pre><h4>环境变量变更</h4><p style="color:rgba(var(--color-text-base),var(--tw-text-opacity)) !important; margin-left:0; margin-right:0; text-align:start">以前的缓存环境变量配置需要配置一个 JSON 字符串作为配置参数。</p><pre><code><span><span style="color:#e06c75">CACHE_CONFIG</span><span style="color:#56b6c2">=</span><span style="color:#98c379">{"storePackage":"cache-manager-fs-hash","ttl":86400,"max":1000}</span></span></code></pre><p style="color:rgba(var(--color-text-base),var(--tw-text-opacity)) !important; margin-left:0; margin-right:0; text-align:start">新的环境变量：</p><pre><code><span><em># 默认缓存方式，值为缓存方式的唯一标识</em></span><span><span style="color:#e06c75">CACHE_DEFAULT_STORE</span><span style="color:#56b6c2">=</span><span style="color:#98c379">memory</span></span><span><em># 内存缓存项目最大数量</em></span><span><span style="color:#e06c75">CACHE_MEMORY_MAX</span><span style="color:#56b6c2">=</span><span style="color:#d19a66">2000</span></span><span><em># Redis，可选</em></span><span><span style="color:#e06c75">CACHE_REDIS_URL</span><span style="color:#56b6c2">=</span><span style="color:#98c379">redis://localhost:6379</span></span></code></pre><h2>完整更新记录</h2><ul><li>refactor(cache): improve cache<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnocobase%2Fnocobase%2Fpull%2F3004" target="_blank"><code>#3004</code></a></li><li>fix: local storage base url<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnocobase%2Fnocobase%2Fpull%2F3063" target="_blank"><code>#3063</code></a></li><li>feat: show table definition<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnocobase%2Fnocobase%2Fpull%2F3061" target="_blank"><code>#3061</code></a></li><li>feat: mariadb support<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnocobase%2Fnocobase%2Fpull%2F3052" target="_blank"><code>#3052</code></a></li><li>fix(plugin-workflow): client minor fixes<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnocobase%2Fnocobase%2Fpull%2F3062" target="_blank"><code>#3062</code></a></li><li>chore: view inference<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnocobase%2Fnocobase%2Fpull%2F3060" target="_blank"><code>#3060</code></a></li><li>fix: sort by association collection<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnocobase%2Fnocobase%2Fpull%2F3058" target="_blank"><code>#3058</code></a></li><li>feat: node &gt;= 18<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnocobase%2Fnocobase%2Fpull%2F3066" target="_blank"><code>#3066</code></a></li></ul><h2>NocoBase 与众不同之处</h2><h4>1. 模型驱动，「数据结构」与「使用界面」分离</h4><p style="color:rgba(var(--color-text-base),var(--tw-text-opacity)) !important; margin-left:0; margin-right:0; text-align:start">多数以表单、表格或者流程驱动的无代码产品都是在使用界面上直接创建数据结构，比如 Airtable 在表格里新增一列就是新增一个字段。这样的好处是使用简单，不足是功能和灵活性受限，难以满足较复杂场景的需求。</p><p style="color:rgba(var(--color-text-base),var(--tw-text-opacity)) !important; margin-left:0; margin-right:0; text-align:start">NocoBase 采用数据结构与使用界面分离的设计思路，可以为数据表创建任意数量、任意形态的区块（数据视图），每个区块里可以定义不同的样式、文案、操作。这样既兼顾了无代码的简单操作，又具备了原生开发的灵活性。</p><p style="color:rgba(var(--color-text-base),var(--tw-text-opacity)) !important; margin-left:0; margin-right:0; text-align:start"><img alt="model" src="https://nocobase-file.oss-cn-beijing.aliyuncs.com/model-l.png" referrerpolicy="no-referrer"></p><h4>2. 所见即所得</h4><p style="color:rgba(var(--color-text-base),var(--tw-text-opacity)) !important; margin-left:0; margin-right:0; text-align:start">NocoBase 可以开发复杂和有特色的业务系统，但这并不意味着需要复杂和专业的操作。只需一次点击，就可以在使用界面上显示出配置选项，具备系统配置权限的管理员可以用所见即所得的操作方式，直接配置用户的使用界面。</p><p style="color:rgba(var(--color-text-base),var(--tw-text-opacity)) !important; margin-left:0; margin-right:0; text-align:start"><img alt="wysiwyg" src="https://nocobase-file.oss-cn-beijing.aliyuncs.com/wysiwyg.gif" referrerpolicy="no-referrer"></p><h4>3. 功能即插件</h4><p style="color:rgba(var(--color-text-base),var(--tw-text-opacity)) !important; margin-left:0; margin-right:0; text-align:start">NocoBase 采用插件化架构，所有新功能都可以通过开发和安装插件来实现，扩展功能就像在手机上安装 APP 一样简单。</p><p style="color:rgba(var(--color-text-base),var(--tw-text-opacity)) !important; margin-left:0; margin-right:0; text-align:start"><img alt="plugins" src="https://nocobase-file.oss-cn-beijing.aliyuncs.com/plugins-l.png" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 21 Nov 2023 00:36:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/267347/nocobase-0-16-released</guid>
            <link>https://www.oschina.net/news/267347/nocobase-0-16-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[开源即时通讯应用 Tailchat v1.9.5 发布，插件化分布式 noIM 应用]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div><h1>介绍</h1></div><div><div><div><div><p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"><code>Tailchat</code><span>&nbsp;</span>是一款插件化易拓展的开源 IM 应用。可拓展架构赋予<span>&nbsp;</span><code>Tailchat</code><span>&nbsp;</span>无限可能性。</p><p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start">前端微内核架构 + 后端微服务架构，使得<span>&nbsp;</span><code>Tailchat</code><span>&nbsp;</span>能够驾驭任何定制化 / 私有化的场景</p><p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start">面向企业与私域用户打造，高度自由的群组管理与定制化的面板展示可以让私域主能够更好的展示自己的作品，管理用户，打造自己的品牌与圈子。</p><p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start">官方网站:&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftailchat.msgbyte.com%2F" target="_blank">https://tailchat.msgbyte.com/</a></p></div></div></div></div><h2>v1.9.5 更新内容</h2><h3>特性更新<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftailchat.msgbyte.com%2Fzh-Hans%2Fblog%23%25E7%2589%25B9%25E6%2580%25A7%25E6%259B%25B4%25E6%2596%25B0" target="_blank">​</a><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftailchat.msgbyte.com%2Fzh-Hans%2Fblog%23livekit-%25E6%258F%2592%25E4%25BB%25B6%25E5%25A4%25A7%25E9%2587%258F%25E6%259B%25B4%25E6%2596%25B0" target="_blank">​</a></h3><h4>livekit 插件增加成员面板<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftailchat.msgbyte.com%2Fzh-Hans%2Fblog%23livekit-%25E6%258F%2592%25E4%25BB%25B6%25E5%25A2%259E%25E5%258A%25A0%25E6%2588%2590%25E5%2591%2598%25E9%259D%25A2%25E6%259D%25BF" target="_blank">​</a></h4><p><img height="1123" src="https://oscimg.oschina.net/oscnet/up-d1bae14fbc0fcad249a2758dfd55f2331b2.png" width="1017" referrerpolicy="no-referrer"></p><p style="color:#1c1e21; text-align:start">你可以在成员面板中查看所有参会者的列表，以及麦克风情况</p><h4>livekit 插件增加多人会话发起音视频会话功能<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftailchat.msgbyte.com%2Fzh-Hans%2Fblog%23livekit-%25E6%258F%2592%25E4%25BB%25B6%25E5%25A2%259E%25E5%258A%25A0%25E5%25A4%259A%25E4%25BA%25BA%25E4%25BC%259A%25E8%25AF%259D%25E5%258F%2591%25E8%25B5%25B7%25E9%259F%25B3%25E8%25A7%2586%25E9%25A2%2591%25E4%25BC%259A%25E8%25AF%259D%25E5%258A%259F%25E8%2583%25BD" target="_blank">​</a></h4><p><img height="159" src="https://oscimg.oschina.net/oscnet/up-3eb87a7939a7300ce29e5c4f0a38e4146c5.png" width="1026" referrerpolicy="no-referrer"></p><p style="color:#1c1e21; text-align:start">现在你可以直接从私信会话中直接发起音视频呼叫了</p><h4>livekit 插件增加多人会话自动邀请功能<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftailchat.msgbyte.com%2Fzh-Hans%2Fblog%23livekit-%25E6%258F%2592%25E4%25BB%25B6%25E5%25A2%259E%25E5%258A%25A0%25E5%25A4%259A%25E4%25BA%25BA%25E4%25BC%259A%25E8%25AF%259D%25E8%2587%25AA%25E5%258A%25A8%25E9%2582%2580%25E8%25AF%25B7%25E5%258A%259F%25E8%2583%25BD" target="_blank">​</a></h4><p style="color:#1c1e21; text-align:start">当对方从私信会话中发送消息，则会自动发起邀请功能，如果接收方在线，则会弹出提示弹窗与铃声邀请加入会话 (前提是接收方安装了 livekit 插件)</p><p><img height="187" src="https://oscimg.oschina.net/oscnet/up-324787aa6ecbb1a98c60a25b0c4c3adaf42.png" width="424" referrerpolicy="no-referrer"></p><h4>群组成员列表允许右键快速修改身份组<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftailchat.msgbyte.com%2Fzh-Hans%2Fblog%23%25E7%25BE%25A4%25E7%25BB%2584%25E6%2588%2590%25E5%2591%2598%25E5%2588%2597%25E8%25A1%25A8%25E5%2585%2581%25E8%25AE%25B8%25E5%258F%25B3%25E9%2594%25AE%25E5%25BF%25AB%25E9%2580%259F%25E4%25BF%25AE%25E6%2594%25B9%25E8%25BA%25AB%25E4%25BB%25BD%25E7%25BB%2584" target="_blank">​</a></h4><p><img height="194" src="https://oscimg.oschina.net/oscnet/up-3e7f5b15af06a950894485130fe75630824.png" width="515" referrerpolicy="no-referrer"></p><p style="color:#1c1e21; text-align:start">现在允许在群组成员列表中通过右键菜单快速分配成员身份组，这对于需要频繁分配身份的场景非常好用</p><h4>增加好友列表搜索功能<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftailchat.msgbyte.com%2Fzh-Hans%2Fblog%23%25E5%25A2%259E%25E5%258A%25A0%25E5%25A5%25BD%25E5%258F%258B%25E5%2588%2597%25E8%25A1%25A8%25E6%2590%259C%25E7%25B4%25A2%25E5%258A%259F%25E8%2583%25BD" target="_blank">​</a></h4><p><img height="161" src="https://oscimg.oschina.net/oscnet/up-7d2a53576e2c402e15638d59d9da2ac311e.png" width="758" referrerpolicy="no-referrer"></p><p style="color:#1c1e21; text-align:start">为了进一步优化对于多好友情况的管理，增加了好友列表搜索框，用于基于好友暱称快速过滤好友，帮助用户找到好友。</p><h3>其他更新<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftailchat.msgbyte.com%2Fzh-Hans%2Fblog%23%25E5%2585%25B6%25E4%25BB%2596%25E6%259B%25B4%25E6%2596%25B0" target="_blank">​</a></h3><ul><li>增加 notification 弹窗夜间模式支持</li><li>增加环境变量 MINIO_SSL 用于手动控制 minio ssl，适用于使用外部 s3 存储</li><li>设置页面增加重新加载按钮，用于在非网页模式下方便重新加载 tailchat</li><li>网页面板增加背景色选项，用于处理部分网页透明背景导致的样式问题</li><li>修复消息输入框背景色透明的 bug</li><li>修复 ban 用户时清理缓存的时序问题可能导致的 token 过期不生效问题</li><li>修复了在私人对话中回复时收件箱 groupId 不正确的问题</li><li>(desktop): v0.1.0 改进了服务器列表的管理</li></ul></div>
                                    ]]>
            </description>
            <pubDate>Mon, 20 Nov 2023 16:44:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/267341/tailchat-1-9-5-released</guid>
            <link>https://www.oschina.net/news/267341/tailchat-1-9-5-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[支持对协议和会话分享动作进行授权，JumpServer 堡垒机 v3.9.0 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div><img alt="" height="346" src="https://oscimg.oschina.net/oscnet/up-7aafaba079c4ffcb0c546eeae2291f6ab02.png" width="1046" referrerpolicy="no-referrer"></div><div><span style="color:#000000">2023 年 11 月 20 日，JumpServer 开源堡垒机正式发布 v3.9.0 版本。在这一版本中，JumpServer 对授权功能进行了优化，增加了对「会话分享」及「资产协议」的配置，方便管理员以更细的颗粒度对各种资源进行控制；针对使用 API Key 与 JumpServer 进行交互的行为，新版本的 JumpServer 增加了 API Key 白名单功能，用于拦截非法 IP，提高了系统的安全性；针对使用 SSH 命令行方式连接资产的用户，用户可以在首次连接会话时看到管理员配置的公告信息。</span></div><p style="color:#000000; text-align:start"><span><span style="color:#000000">同时，在这一版本中，账号备份功能不仅可以将资产账号备份文件发送到指定人的邮箱，还可以将资产账号备份文件发送到指定的 SFTP 服务器上。</span></span></p><p style="color:#000000; text-align:start"><span><span style="color:#000000">X-Pack 增强包方面，JumpServer 在账号收集任务执行完成后，支持对比任务执行前后资产账号发生的变化，并将对比结果发送给任务指定接收人。除此之外，管理员还可以通过角色自定义功能，将「系统工具」权限开放给指定用户。</span></span></p><h1>新增功能</h1><p style="color:#000000; text-align:start"><span><strong><span style="color:#28937c">1. 新增资产授权规则，支持对协议和会话分享动作进行授权</span></strong></span></p><p style="color:#000000; text-align:start"><span><span style="color:#000000">在 JumpServer v3.9.0 版本中，资产授权规则新增对协议和会话分享的权限控制，方便管理员以更细的颗粒度对用户和资产进行控制。</span></span></p><p style="color:#000000; text-align:start"><img alt="" src="https://oscimg.oschina.net/oscnet/up-77bf8fd5087b1e151b79f05e126585802ef.png" referrerpolicy="no-referrer"></p><p style="color:#000000; text-align:start"><span>▲图 1 资产授权规则支持对协议及会话分享进行授权</span></p><p style="color:#000000; text-align:start"><span><strong><span style="color:#28937c">2. 新增语言切换功能（控制枱、工作台、审计台）</span></strong></span></p><p style="color:#000000; text-align:start"><span><span style="color:#000000">在 JumpServer v3.9.0 版本中，用户可以在 Web 操作页面进行语言切换功能。</span></span></p><p style="color:#000000; text-align:start"><img alt="" height="1624" src="https://oscimg.oschina.net/oscnet/up-1a89866a27060d1a208897b151f613e8220.png" width="2912" referrerpolicy="no-referrer"></p><p><span>▲图 2 新增语言切换功能</span></p><p style="color:#000000; text-align:start"><span><strong><span style="color:#28937c">3. 远程应用发布机新增支持使用同名账号进行连接</span></strong></span></p><p style="color:#000000; text-align:start"><span><span style="color:#000000">在 JumpServer v3.9.0 版本中，远程应用发布机可以选择「使用同步账号」功能，账号使用上将优先使用同名账号。</span></span></p><p style="color:#000000; text-align:start"><img alt="" src="https://oscimg.oschina.net/oscnet/up-6a6a05cf374a744c0f1f59c2b2bf6705af5.png" referrerpolicy="no-referrer"></p><p style="color:#000000; text-align:start"><span>▲图 3 远程应用发布机支持使用同名账号进行连接</span></p><p style="color:#000000; text-align:start"><span><strong><span style="color:#28937c">4. API Key 支持配置 IP 白名单</span></strong></span></p><p style="color:#000000; text-align:start"><span><span style="color:#000000">在 JumpServer v3.9.0 版本中，API Key 支持白名单策略，可以对非法 IP 请求进行过滤拦截，提高了系统的安全性。</span></span></p><p style="color:#000000; text-align:start"><img alt="" src="https://oscimg.oschina.net/oscnet/up-791e2486655f22733e90a02a3c44858cadc.png" referrerpolicy="no-referrer"></p><p style="color:#000000; text-align:start"><span>▲图 4 API Key 支持配置 IP 白名单</span></p><p style="color:#000000; text-align:start"><span><strong><span style="color:#28937c">5. 新增控制数据库连接时的复制、粘贴动作（Web GUI）（Chen 组件）</span></strong></span></p><p style="color:#000000; text-align:start"><span><span style="color:#000000">在 JumpServer v3.9.0 版本中，当使用 Web GUI 方式连接数据库时，管理员可以控制用户是否可以复制、粘贴工作台的内容。</span></span></p><p style="color:#000000; text-align:start"><img alt="" src="https://oscimg.oschina.net/oscnet/up-1d0ff2f7b9295d1183a4431dd2c4c49c76c.png" referrerpolicy="no-referrer"></p><p style="color:#000000; text-align:start"><span>▲图 5 新增控制数据库连接时的复制、粘贴动作</span></p><p style="color:#000000; text-align:start"><span><strong><span style="color:#28937c">6. 账号备份功能支持配置 SFTP 存储方式</span></strong></span></p><p style="color:#000000; text-align:start"><span><span style="color:#000000">在 JumpServer v3.9.0 版本中，账号备份功能支持将备份后的账号信息发送到指定的 SFTP 服务器上。</span></span></p><p style="color:#000000; text-align:start"><img alt="" src="https://oscimg.oschina.net/oscnet/up-f0557909391a23a7e377a9f4444ac3a7d4f.png" referrerpolicy="no-referrer"></p><p style="color:#000000; text-align:start"><span>▲图 6 账号备份功能支持配置 SFTP 存储方式</span></p><p style="color:#000000; text-align:start"><span><strong><span style="color:#28937c">7. Windows 类型资产连接时，支持配置是否开启智能调整窗口大小功能</span></strong></span></p><p style="color:#000000; text-align:start"><span><span style="color:#000000">在 JumpServer v3.9.0 版本中，用户可在「个人信息」→「偏好设置」中配置「RDP 智能大小」选项，该功能将自动计算匹配出本地窗口大小与远程窗口大小的缩放比例。</span></span></p><p style="color:#000000; text-align:start"><img alt="" src="https://oscimg.oschina.net/oscnet/up-4822367284267eb9a66587548df74af0a69.png" referrerpolicy="no-referrer"></p><p style="color:#000000; text-align:start"><span>▲图 7 Windows 类型资产连接时，支持配置是否开启智能调整窗口大小功能</span></p><p style="color:#000000; text-align:start"><span><strong><span style="color:#28937c">8. 系统公告设置新增支持 Markdown View 预览模式</span></strong></span></p><p style="color:#000000; text-align:start"><span><span style="color:#000000">在 JumpServer v3.9.0 版本中，在公告中使用 Markdown 语法时，可以在页面右侧实时预览公告的呈现效果。</span></span></p><p style="color:#000000; text-align:start"><img alt="" height="1628" src="https://oscimg.oschina.net/oscnet/up-e956a90645c6c82c6613fd879e46c10955f.png" width="2928" referrerpolicy="no-referrer"></p><p><span>▲图 8 系统公告设置新增支持 Markdown View 预览模式</span></p><p style="color:#000000; text-align:start"><span><strong><span style="color:#28937c">9. SSH 命令行连接方式支持查看系统公告信息（KoKo 组件）</span></strong></span></p><p style="color:#000000; text-align:start"><span><span style="color:#000000">在 JumpServer v3.9.0 版本中，用户使用 SSH 命令行方式连接资产时，公告将会展示在连接会话窗口中。</span></span></p><p style="color:#000000; text-align:start"><img alt="" src="https://oscimg.oschina.net/oscnet/up-bb6286cb40abc6f0b788cccfa4a8b927a10.png" referrerpolicy="no-referrer"></p><p style="color:#000000; text-align:start"><span>▲图 9 SSH 命令行连接方式支持查看系统公告信息</span></p><p style="color:#000000; text-align:start"><span><strong><span style="color:#28937c">10. 新增资产连接高级选项的编码格式</span></strong></span></p><p style="color:#000000; text-align:start"><span><span style="color:#000000">在 JumpServer v3.9.0 版本中，连接资产的编码类型新增了 GB2312 和 IOS-8859-1 两种编码格式。用户可以在连接资产时，点击「高级选项」项目中的「字符集」选项进行配置。</span></span></p><p style="color:#000000; text-align:start"><img alt="" src="https://oscimg.oschina.net/oscnet/up-1873fa219ed9ac78fcfe35408a36acedb4f.png" referrerpolicy="no-referrer"></p><p><span>▲图 10 新增资产连接高级选项的编码格式</span></p><p style="color:#000000; text-align:start"><span><strong><span style="color:#28937c">11. 「定时清理」 新增作业中心执行历史日志的保留天数配置项</span></strong></span></p><p style="color:#000000; text-align:start"><span><span style="color:#000000">在 JumpServer v3.9.0 版本中，用户可以在「系统任务」→「定时清理」中，配置历史执行的保留天数。</span></span></p><p style="color:#000000; text-align:start"><img alt="" src="https://oscimg.oschina.net/oscnet/up-50420bf5a55e29aa399590bf7ae0b27230f.png" referrerpolicy="no-referrer"></p><p style="color:#000000; text-align:start"><span>▲图 11 「定时清理」 新增作业中心执行历史日志的保留天数配置项</span></p><p style="color:#000000; text-align:start"><span><strong><span style="color:#28937c">12. 「账号收集」任务新增支持资产账号信息变动的消息通知（X-Pack 增强包内）</span></strong></span></p><p style="color:#000000; text-align:start"><span><span style="color:#000000">在 JumpServer v3.9.0 版本中，执行「账号收集」任务后，如果资产上的用户发生了变化，系统会自动发送消息给任务中所配置的指定接收人。</span></span></p><p style="color:#000000; text-align:start"><img alt="" src="https://oscimg.oschina.net/oscnet/up-f5c5ad6797eff2ad5d00d8651b7c8d4d8d2.png" referrerpolicy="no-referrer"></p><p style="color:#000000; text-align:start"><span>▲图 12 「账号收集」任务新增支持资产账号信息变动的消息通知（X-Pack 增强包内）</span></p><p style="color:#000000; text-align:start"><span><strong><span style="color:#28937c">13. 工作台新增支持「系统工具」功能（管理员可配置用户角色开启，默认关闭）（X-Pack 增强包内）</span></strong></span></p><p style="color:#000000; text-align:start"><span><span style="color:#000000">在 JumpServer v3.9.0 版本中，管理员可以在角色列表中配置相应权限，将「系统工具」功能发放给指定用户。</span></span></p><p style="color:#000000; text-align:start"><img alt="" src="https://oscimg.oschina.net/oscnet/up-d8484f62796d73de67bf767b35cac97b4b6.png" referrerpolicy="no-referrer"></p><p style="color:#000000; text-align:start"><span>▲图 13 工作台新增支持「系统工具」功能（X-Pack 增强包内）</span></p><h1>功能优化</h1><p style="color:#000000; text-align:start"><span><span style="color:#28937c">■</span><span>&nbsp;</span>优化用户连接资产无协议时的提示信息；</span></p><p style="color:#000000; text-align:start"><span><span style="color:#28937c">■</span><span>&nbsp;</span>优化 OAuth2.0 认证方式中获取 Access Token 的 Content 类型；</span></p><p style="color:#000000; text-align:start"><span><span style="color:#28937c">■</span><span>&nbsp;</span>优化生成 RSA Key 的默认长度为 2048 位字符；</span></p><p style="color:#000000; text-align:start"><span><span style="color:#28937c">■</span><span>&nbsp;</span>优化用户登录日志和在线用户 IP 地址的获取逻辑；</span></p><p style="color:#000000; text-align:start"><span><span style="color:#28937c">■</span><span>&nbsp;</span>在线用户新增活跃属性的标识；</span></p><p style="color:#000000; text-align:start"><span><span style="color:#28937c">■</span><span>&nbsp;</span>优化在线用户扫描机制（Redis 命令使用 Sca 替代 Keys）；</span></p><p style="color:#000000; text-align:start"><span><span style="color:#28937c">■</span><span>&nbsp;</span>优化命令存储为本地数据库时，命令列表支持资产模糊搜索；</span></p><p style="color:#000000; text-align:start"><span><span style="color:#28937c">■</span><span>&nbsp;</span>优化资产账号密码，支持使用特殊字符'和"；</span></p><p style="color:#000000; text-align:start"><span><span style="color:#28937c">■</span><span>&nbsp;</span>优化发布机终端名称不包含空白字符的问题；</span></p><p style="color:#000000; text-align:start"><span><span style="color:#28937c">■</span><span>&nbsp;</span>优化仪表盘查询文件日志的 SQL 语句，减少查询次数；</span></p><p style="color:#000000; text-align:start"><span><span style="color:#28937c">■</span><span>&nbsp;</span>优化远程应用名称不能包含「()」字符的问题；</span></p><p style="color:#000000; text-align:start"><span><span style="color:#28937c">■</span><span>&nbsp;</span>优化「作业中心」操作枱，在资产数中选择父节点后，展开子节点时默认也是选中状态；</span></p><p style="color:#000000; text-align:start"><span><span style="color:#28937c">■</span><span>&nbsp;</span>优化保存快捷命令时，命令为空不能保存的问题；</span></p><p style="color:#000000; text-align:start"><span><span style="color:#28937c">■</span><span>&nbsp;</span>优化用户最后执行的命令未被记录的问题（Magnus 组件）；</span></p><p style="color:#000000; text-align:start"><span><span style="color:#28937c">■</span><span>&nbsp;</span>优化 API Key 认证记录用户的时间逻辑，避免次数太多导致数据库被锁。</span></p><h1>Bug 修复</h1><p style="color:#000000; text-align:start"><span><span style="color:#28937c">■</span><span>&nbsp;</span>修复 DB2 资产平台已存在的问题；</span></p><p style="color:#000000; text-align:start"><span><span style="color:#28937c">■</span><span>&nbsp;</span>修复包含 Apps 资产节点时，可能导致数据库迁移失败的问题；</span></p><p style="color:#000000; text-align:start"><span><span style="color:#28937c">■</span><span>&nbsp;</span>修复资产连接信息超长，导致 JumpServer 客户端拉起无响应的问题；</span></p><p style="color:#000000; text-align:start"><span><span style="color:#28937c">■</span><span>&nbsp;</span>修复发布机名称包含特殊字符时，导致部署失败的问题；</span></p><p style="color:#000000; text-align:start"><span><span style="color:#28937c">■</span><span>&nbsp;</span>修复 Elasticsearch（6 版本）查询不到命令记录的问题；</span></p><p style="color:#000000; text-align:start"><span><span style="color:#28937c">■<span>&nbsp;</span></span>修复禁用用户 MFA 页面显示错误的问题；</span></p><p style="color:#000000; text-align:start"><span><span style="color:#28937c">■</span><span>&nbsp;</span>修复使用「切换自」的交换机账号登录时卡住的问题；</span></p><p style="color:#000000; text-align:start"><span><span style="color:#28937c">■</span><span>&nbsp;</span>修复 MySQL 数据库测试可连接性失败的问题；</span></p><p style="color:#000000; text-align:start"><span><span style="color:#28937c">■</span><span>&nbsp;</span>修复作业日志搜索用户报错的问题；</span></p><p style="color:#000000; text-align:start"><span><span style="color:#28937c">■</span><span>&nbsp;</span>修复快捷命令找不到</span><em><span>mssql_module</span></em><span>路径的问题；</span></p><p style="color:#000000; text-align:start"><span><span style="color:#28937c">■</span><span>&nbsp;</span>修复自动化任务中资产包含多个协议时，端口获取不准确的问题；</span></p><p style="color:#000000; text-align:start"><span><span style="color:#28937c">■</span><span>&nbsp;</span>修复连接 Telnet 协议资产时，客户端拉起无响应的问题；</span></p><p style="color:#000000; text-align:start"><span><span style="color:#28937c">■</span><span>&nbsp;</span>修复快捷命令 Playbook 部分任务不可执行的问题；</span></p><p style="color:#000000; text-align:start"><span><span style="color:#28937c">■</span><span>&nbsp;</span>修复快捷命令 SQLServer 资产执行失败的问题；</span></p><p style="color:#000000; text-align:start"><span><span style="color:#28937c">■</span><span>&nbsp;</span>修复连接远程应用时，「服务端点」下的「端点规则」未生效的问题；</span></p><p style="color:#000000; text-align:start"><span><span style="color:#28937c">■</span><span>&nbsp;</span>修复 CentOS 系统用户使用 sudo 方式切换登录会失败的问题（KoKo 组件）；</span></p><p style="color:#000000; text-align:start"><span><span style="color:#28937c">■</span><span>&nbsp;</span>修复 MySQL 无默认数据库时，无法通过 Web GUI 方式连接的问题（Chen 组件）；</span></p><p style="color:#000000; text-align:start"><span><span style="color:#28937c">■</span><span>&nbsp;</span>修复使用本地客户端方式连接数据库时，记录命令的风险等级不准确的问题（Magnus 组件）；</span></p><p style="color:#000000; text-align:start"><span><span style="color:#28937c">■</span><span>&nbsp;</span>修复账号改密记录无法搜索查询的问题（X-Pack 增强包内）；</span></p><p style="color:#000000; text-align:start"><span><span style="color:#28937c">■</span><span>&nbsp;</span>修复云同步任务中，策略不能被清空的问题（X-Pack 增强包内）；</span></p><p style="color:#000000; text-align:start"><span><span style="color:#28937c">■</span><span>&nbsp;</span>修复账号密码规则提交不生效的问题（X-Pack 增强包内）；</span></p><p style="color:#000000; text-align:start"><span><span style="color:#28937c">■</span><span>&nbsp;</span>修复云同步策略为「不等于」时，策略不生效的问题（X-Pack 增强包内）；</span></p><p style="color:#000000; text-align:start"><span><span style="color:#28937c">■</span><span>&nbsp;</span>修复云同步任务的优先级无法更新的问题（X-Pack 增强包内）；</span></p><p style="color:#000000; text-align:start"><span><span style="color:#28937c">■</span><span>&nbsp;</span>修复账号开启了「切换自」功能，改密执行到「测试改密后的账号连通性」时，测试可连接性失败的问题（X-Pack 增强包内）；</span></p><p style="color:#000000; text-align:start"><span><span style="color:#28937c">■</span><span>&nbsp;</span>修复账号改密 Root 账号密钥未修改成功的问题（X-Pack 增强包内）；</span></p><p style="color:#000000; text-align:start"><span><span style="color:#28937c">■</span><span>&nbsp;</span>修复云同步策略设置的账号模版和实际账号未进行关联的问题（X-Pack 增强包内）；</span></p><p style="color:#000000; text-align:start"><span><span style="color:#28937c">■</span><span>&nbsp;</span>修复创建工单账号字段搜索后，点击下拉选项时会重复添加的问题（X-Pack 增强包内）；</span></p><p style="color:#000000; text-align:start"><span><span style="color:#28937c">■</span><span>&nbsp;</span>修复 Oracle 使用 16 位密码时，无法使用本地客户端进行连接的问题（Magnus 组件）（X-Pack 增强包内）；</span></p><p style="color:#000000; text-align:start"><span><span style="color:#28937c">■</span><span>&nbsp;</span>修复 Windows 资产账号推送、账号改密使用 WinRM 方式会执行失败的问题（X-Pack 增强包内）。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 20 Nov 2023 12:38:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/267304/jumpserver-3-9-0-released</guid>
            <link>https://www.oschina.net/news/267304/jumpserver-3-9-0-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[新一代基于 mybatis 的 orm：mybatis-mp 1.1.3 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">全新一代基于 mybatis 扩展的 orm 框架，拥有良好的性能和扩展性。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">1：基于注解，映射数据库；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">2：支持多表 join 和返回；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">3：api 采用 lambda 和 stream 流式设计；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">4：内置分页以及超强的 sql 优化功能；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">5：稳定且性能极优，mybatis-flex&gt;mybatis-mp&gt;mybatis plus；复杂 sql 时，性能最优。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">6：轻量级封装 mybatis，几乎没有侵入；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">7：api 丰富，支持数据库函数、多表、乐观锁、多租户，等众多功能；零学习成本，和写 sql 一样方便。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">8：内置代码生成器，通过配置，可定制自身规范；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">9：全新的框架，全新的设计理念，新的就是好！</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 20 Nov 2023 12:25:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/267299</guid>
            <link>https://www.oschina.net/news/267299</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Oracle Linux 9.3 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Oracle Linux 9 系列<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblogs.oracle.com%2Flinux%2Fpost%2Foracle-linux-9-update-3" target="_blank">发布了第 3 个版本更新</a></u>，支持 64 位 Intel 和 AMD (<code>x86_64</code>) 以及 64 位 Arm (<code>aarch64</code>) 平台。与所有的 Oracle Linux 版本一样，此版本与相应 RHEL 版本 100% 应用二进制兼容。</p><p>对于<code>x86_64</code>和<code>aarch64</code>架构，Oracle Linux 提供了 Unbreakable Enterprise Kernel (UEK) 内核，版本为 UEK Release 7 Update 2, 5.15.0-200.131.27。UEK R7 基于上游 Linux Kernel 5.15，同时支持 Oracle Linux 9 和 Oracle Linux 8。此外还为<code>x86_64</code>架构提供兼容红帽的内核 (RHCK)，版本号为 5.14.0-364。</p><p><strong>主要变化</strong></p><ul><li>Oracle Linux 现在支持通过 DNF 安装补丁后自动重启系统。通过增强的 DNF，使用不同选项（从不、更改时、需要时）自动重启可以加快补丁管理操作</li><li>OpenSSH 默认情况下显式强制使用 SHA-2 算法进行密钥测试，对于运行 Oracle Linux 9 Update 3 的系统，SHA-1 在客户端不可用；此增强功能避免了使用 SHA-1 算法中的弱点</li><li>采用 UEK R7U2 的 Oracle Linux 9.3 继续维护并支持 btrfs 文件系统，以访问 Linux 上最现代的写入时复制 (COW) 文件系统之一</li></ul><p><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblogs.oracle.com%2Flinux%2Fpost%2Foracle-linux-9-update-3" target="_blank">详情查看发布公告</a></u>、<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.oracle.com%2Fen%2Foperating-systems%2Foracle-linux%2F9%2Frelnotes9.3%2F%23Oracle-Linux-9" target="_blank">Release Notes</a></u>。</p><blockquote><p>Oracle Linux 是由 Oracle 支持的企业级 Linux 发行版，它从 RHEL 源代码包生成。Oracle Linux 的独有特性包括一份定制且严格测试过的名为 「Oracle Unbreakable Kernel」 的 Linux 内核，与 Oracle 的多数数据库应用在内的软硬件产品的紧密集成，以及 「零掉线打补丁」 技术 —— 该特性能让系统管理员在不重启的情况下更新内核。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-65ef8ba8572130a6b1d0d70109f7d6a0c03.png" referrerpolicy="no-referrer"></p></blockquote></div>
                                    ]]>
            </description>
            <pubDate>Mon, 20 Nov 2023 10:20:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/267286/oracle-linux-9-update-3</guid>
            <link>https://www.oschina.net/news/267286/oracle-linux-9-update-3</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[ApiCat v2.9.2 已经发布，基于 AI 技术的 API 开发工具]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>ApiCat v2.9.2 已经发布，基于 AI 技术的 API 开发工具</p><p>此版本更新内容包括：</p><p><strong>功能</strong></p><ul><li>增加了 OpenAPI 中多个 example 的支持 ###Bug 修复</li><li>修复了在删除全局参数时解引用出现的错误</li></ul><p>详情查看：<a href="https://gitee.com/apicat/apicat/releases/v2.9.2">https://gitee.com/apicat/apicat/releases/v2.9.2</a></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 20 Nov 2023 09:23:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/267281/apicat-2-9-2-released</guid>
            <link>https://www.oschina.net/news/267281/apicat-2-9-2-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[elasticsearch-script-velocity 8.11.0-1.0.0 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.apache.org%2Flicenses%2FLICENSE-2.0.html"><img alt="License" src="https://img.shields.io/badge/license-Apache%202-4EB1BA.svg" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FAhoo-Wang%2Felasticsearch-script-velocity%2Freleases"><img alt="GitHub release" src="https://img.shields.io/github/release/Ahoo-Wang/elasticsearch-script-velocity.svg" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fcodecov.io%2Fgh%2FAhoo-Wang%2Felasticsearch-script-velocity"><img alt="codecov" src="https://codecov.io/gh/Ahoo-Wang/elasticsearch-script-velocity/graph/badge.svg?token=QK8XZXHBZN" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><img alt="Integration Test Status" src="https://github.com/Ahoo-Wang/elasticsearch-script-velocity/actions/workflows/integration-test.yml/badge.svg" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><em>Search Template</em><span>&nbsp;</span>是<span>&nbsp;</span><em>Elasticsearch</em><span>&nbsp;</span>中一项非常实用的功能。通过这一特性，搜索请求的查询结构可以事先定义好，然后在实际请求时传入搜索参数。这样既使得请求体更加简洁，也避免了在客户端拼接查询结构时可能出现的错误。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">在需要进行搜索调优时，可以直接在<span>&nbsp;</span><em>Elasticsearch</em><span>&nbsp;</span>服务端修改搜索脚本，而无需重新发布客户端。这显著提高了搜索调优的效率。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">然而，<em>Elasticsearch</em><span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.elastic.co%2Fguide%2Fen%2Felasticsearch%2Freference%2Fcurrent%2Fmodules-scripting.html%23scripting-available-languages">默认支持的脚本语言</a>（<code>mustache</code>/<code>painless</code>/<code>expression</code>）的语法逻辑相对较为有限，不支持逻辑判断，从而对<span>&nbsp;</span><em>Search Template</em><span>&nbsp;</span>的使用带来了一定的限制。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">通过引入<span>&nbsp;</span><em>Velocity</em><span>&nbsp;</span>到<span>&nbsp;</span><em>Elasticsearch</em><span>&nbsp;</span>中，可以支持任何逻辑判断，使得<span>&nbsp;</span><em>Search Template</em><span>&nbsp;</span>的使用更加灵活。这为用户提供了更强大、更灵活的搜索定制能力。</p><h2>更新内容 🎉 🎉 🎉</h2><blockquote><p style="margin-left:0; margin-right:0">支持<span>&nbsp;</span><em>ElasticSearch</em><span>&nbsp;</span>v8.11.0 版本</p></blockquote><ul><li>依赖: 更新<span>&nbsp;</span><code>elasticsearch</code><span>&nbsp;</span>版本<span>&nbsp;</span><code>v8.11.0</code></li><li>测试: 提升单元测试覆盖率</li><li>测试: 添加 JMH 基准测试</li><li>重构：修改版本号发布策略（<code>version</code>=<code>elasticsearchVersion</code>-<code>pluginVersion</code>）</li></ul><h2>安装</h2><blockquote><p style="margin-left:0; margin-right:0">方式 1 - 使用<span>&nbsp;</span><code>elasticsearch-plugin<span>&nbsp;</span></code><span>&nbsp;</span>安装</p></blockquote><div><div><pre><span>./bin/elasticsearch-plugin <span style="color:#0086b3">install </span>https:<span style="color:#6a737d">//github.com/Ahoo-Wang/elasticsearch-script-velocity/releases/download/v8.11.0/elasticsearch-script-velocity-8.11.0.zip</span></span></pre></div></div><blockquote><p style="margin-left:0; margin-right:0">方式 2 - 从<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FAhoo-Wang%2Felasticsearch-script-velocity%2Freleases">Releases</a><span>&nbsp;</span>下载构建包</p></blockquote><ol><li>创建插件目录<span>&nbsp;</span><code>cd your-es-root/plugins/ &amp;&amp; mkdir elasticsearch-script-velocity</code></li><li>解压到该目录<span>&nbsp;</span><code>your-es-root/plugins/elasticsearch-script-velocity</code></li></ol><h2>使用</h2><h3>存储脚本</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.elastic.co%2Fguide%2Fen%2Felasticsearch%2Freference%2Fcurrent%2Fcreate-stored-script-api.html">create-stored-script-api</a></p><pre><code class="language-http">POST _scripts/templateid
{
    <span style="color:#032f62">"script"</span>: {
        <span style="color:#032f62">"lang"</span>: <span style="color:#032f62">"velocity"</span>,
        <span style="color:#032f62">"source"</span>: {
            <span style="color:#032f62">"query"</span>: {
                <span style="color:#032f62">"match"</span>: {
                    <span style="color:#032f62">"title"</span>: <span style="color:#032f62">"$query_string"</span>
                }
            }
        }
    }
}</code></pre><h3>获取已存储的脚本</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.elastic.co%2Fguide%2Fen%2Felasticsearch%2Freference%2Fcurrent%2Fget-stored-script-api.html">get-stored-script-api</a></p><pre><code class="language-http"><span style="color:#6f42c1">GET</span><span style="color:#032f62">_scripts/templateid</span></code></pre><blockquote><p style="margin-left:0; margin-right:0">请求响应结果：</p></blockquote><div><div><pre><code class="language-json">{
  <span style="color:#6f42c1">"_id"</span>: <span style="color:#032f62">"templateid"</span>,
  <span style="color:#6f42c1">"found"</span>: <span style="color:#005cc5">true</span>,
  <span style="color:#6f42c1">"script"</span>: {
    <span style="color:#6f42c1">"lang"</span>: <span style="color:#032f62">"velocity"</span>,
    <span style="color:#6f42c1">"source"</span>: <span style="color:#032f62">""</span><span style="color:#032f62">"{"</span>query<span style="color:#032f62">":{"</span>match<span style="color:#032f62">":{"</span>title<span style="color:#032f62">":"</span>$query_string<span style="color:#032f62">"}}}"</span><span style="color:#032f62">""</span>,
    <span style="color:#6f42c1">"options"</span>: {
      <span style="color:#6f42c1">"content_type"</span>: <span style="color:#032f62">"application/json;charset=utf-8"</span>
    }
  }
}</code></pre></div></div><h3>删除已存储的脚本</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.elastic.co%2Fguide%2Fen%2Felasticsearch%2Freference%2Fcurrent%2Fdelete-stored-script-api.html">delete-stored-script-api</a></p><pre><code class="language-http"><span style="color:#6f42c1">DELETE</span><span style="color:#032f62">_scripts/templateid</span></code></pre><h3>模板搜索</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.elastic.co%2Fguide%2Fen%2Felasticsearch%2Freference%2Fcurrent%2Fsearch-template.html">search-template</a></p><pre><code class="language-http">GET _search/<span style="color:#d73a49">template</span>
{
    <span style="color:#032f62">"id"</span>: <span style="color:#032f62">"templateid"</span>,
    <span style="color:#032f62">"params"</span>: {
        <span style="color:#032f62">"query_string"</span>: <span style="color:#032f62">"search for these words"</span>
    }
}</code></pre><h3>验证搜索模板</h3><pre><code class="language-http">GET _render/<span style="color:#d73a49">template</span>/templateid
{
  <span style="color:#032f62">"params"</span>: {
    <span style="color:#032f62">"query_string"</span>: <span style="color:#032f62">"search for these words"</span>
  }
}</code></pre><blockquote><p style="margin-left:0; margin-right:0">请求响应结果：</p></blockquote><pre><code class="language-json">{
  <span style="color:#6f42c1">"template_output"</span>: {
    <span style="color:#6f42c1">"query"</span>: {
      <span style="color:#6f42c1">"match"</span>: {
        <span style="color:#6f42c1">"title"</span>: <span style="color:#032f62">"search for these words"</span>
      }
    }
  }
}</code></pre></div>
                                    ]]>
            </description>
            <pubDate>Mon, 20 Nov 2023 08:48:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/267278</guid>
            <link>https://www.oschina.net/news/267278</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Velocity for Elasticsearch v8.11.0-1.0.0 已经发布，将 Velocity 带到 ElasticSearch]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Velocity for Elasticsearch v8.11.0-1.0.0 已经发布，将 Velocity 带到 ElasticSearch</p><p>此版本更新内容包括：</p><h2>更新内容</h2><blockquote><p>支持 <em>ElasticSearch</em> v8.11.0 版本</p></blockquote><ul><li>依赖: 更新 <code>elasticsearch</code> 版本 <code>v8.11.0</code></li><li>测试: 提升单元测试覆盖率</li><li>测试: 添加 JMH 基准测试</li><li>重构：修改版本号发布策略（<code>version</code>=<code>elasticsearchVersion</code>-<code>pluginVersion</code>）</li></ul><p>详情查看：<a href="https://gitee.com/AhooWang/elasticsearch-script-velocity/releases/v8.11.0-1.0.0">https://gitee.com/AhooWang/elasticsearch-script-velocity/releases/v8.11.0-1.0.0</a></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 20 Nov 2023 08:47:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/267277/elasticsearch-script-velocity-v8-11-0-1-0-0</guid>
            <link>https://www.oschina.net/news/267277/elasticsearch-script-velocity-v8-11-0-1-0-0</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
    </channel>
</rss>
