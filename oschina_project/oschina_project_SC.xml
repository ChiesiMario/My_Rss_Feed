<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[开源中国-软件更新资讯]]>
        </title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="https://rsshub.app/oschina/news/project" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[开源中国-软件更新资讯 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Fri, 17 Nov 2023 08:59:58 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[老牌国产开源 PG 数据库管理平台 CLup 5.0.2 正式发布，轻松管理 PG 数据库集群]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#1f2329; margin-left:0; margin-right:0; text-align:start"><span>大家好，CLup 开源版 5.0.2 发布啦，本次更新主要增加了数据库集群批量上线和离线的功能，管理大规模的数据库集群更加方便，并优化了一下代码。</span></p><h2><span>更新</span></h2><ol><li><p style="margin-left:0; margin-right:0"><span>增加数据库集群批量上线功能。</span></p></li><li><p style="margin-left:0; margin-right:0"><span>增加数据库集群批量离线功能，方便停机维护。</span></p></li><li><p style="margin-left:0; margin-right:0"><span>优化了代码，增加代码可读性。</span></p></li></ol><h2><span>CLup 开源版介绍</span></h2><p style="color:#1f2329; margin-left:0; margin-right:0; text-align:start"><span>CLup 是带有 Web 界面的 PostgreSQL 数据库运维管理软件，旨在为 PostgreSQL 数据库管理员和开发者提供一个简单易用、功能丰富的管理工具，实现了高可用集群管理 (包括读写分离)、数据库和主机监控管理、事件告警、数据备份与恢复等功能。通过使用此工具，用户可以轻松地部署、管理和监控多套 PostgreSQL 数据库集群，实现 PostgreSQL 高可用集群的部署管理以及自动化运维。使用 CLup 可以轻松管理几十套至上百套 PostgreSQL 高可用的数据库集群，发生故障时自动切换，不影响生产系统的运行。故障切换后有详细的故障日志，方便定位故障原因，还可以手工一键切换、重搭备库等，得此利器，DBA 从此不再手忙脚乱。</span></p><h3><span>主要亮点</span></h3><ol><li><p style="margin-left:0; margin-right:0"><span><strong><span>完善的 Web 界面</span></strong></span><span>：采用了简洁明了的 Web 界面设计，提供了丰富的数据展示和操作功能。用户可以通过 Web 界面实时查看数据库的各项指标，如会话管理、锁等待、流复制状态等，同时还可以对数据库进行创建、删除、备库搭建、修改数据库配置等操作。</span></p></li><li><p style="margin-left:0; margin-right:0"><span><strong><span>一键创建 PostgreSQL 数据库</span></strong></span><span>：无需繁琐的命令行操作，只需点击一下，即可快速创建一个 PostgreSQL 数据库。这大大简化了数据库的部署流程，让您可以更快速地进入开发环节。</span></p></li><li><p style="margin-left:0; margin-right:0"><span><strong><span>数据库集群管理</span></strong></span><span>：面向大型企业和高并发场景，OpenCLup 软件提供了一键创建 PostgreSQL 数据库集群的功能，助力企业轻松构建稳定、高效的数据库集群环境。</span></p></li><li><p style="margin-left:0; margin-right:0"><span><strong><span>数据库集群高可用功能</span></strong></span><span>：对于任何业务来说，数据库的稳定性都是至关重要的。OpenCLup 软件的高可用功能保证了数据库集群在遇到故障时，可以快速进行故障转移，确保数据的安全和业务的连续性。</span></p></li><li><p style="margin-left:0; margin-right:0"><span><strong><span>一键搭备库功能</span></strong></span><span>：一键搭备库功能旨在优化数据库搭备库流程，让数据库管理员和开发者无需深入复杂的设置和命令行操作，鼠标在 Web 管理界面上点几下，就可以快速地搭建备库。这不仅大幅提高了工作效率，降低了出错率，还为数据库的安全提供了有力保障。</span></p></li><li><p style="margin-left:0; margin-right:0"><span><strong><span>部署简单方便，资源消耗少</span></strong></span><span>：对服务器资源要求很低，如可以在 2GB 内存的机器上部署和使用，对机器的 CPU 没有要求。之所以可以做到这种程度，原因是此软件完全自主研发的，而不是基于其他开源软件做的二次封装。</span></p></li></ol><p style="color:#1f2329; margin-left:0; margin-right:0; text-align:start"><span>CLup 开源版旨在为广大开发者和企业提供一个高效、稳定和易用的开源 PostgreSQL 数据库管理工具。同时，我们也有 CLup 企业版，和开源版本相比，具备更多</span><span><strong><span>高级功能</span></strong></span><span>和</span><span><strong><span>专业的技术支持</span></strong></span><span>，可以前往官网下载和试用。</span></p><p style="color:#1f2329; margin-left:0; margin-right:0; text-align:start"><span>我们真诚地邀请开发者和企业用户下载、试用并为 CLup 软件提出宝贵的建议和反馈。通过开源，中启乘数科技将与广大用户一同推进 CLup 软件的发展，共同构建更为完善的 PostgreSQL 数据库管理生态。</span></p><p style="color:#1f2329; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><p style="color:#1f2329; margin-left:0; margin-right:0; text-align:start"><span>产品官网：</span><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.csudata.com%2Fclup"><span>https://www.csudata.com/clup</span></a></span></p><p style="color:#1f2329; margin-left:0; margin-right:0; text-align:start"><span>官方文档：</span><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.csudata.com%2Fclup%2Fmanual"><span>https://www.csudata.com/clup/manual</span></a></span></p><p style="color:#1f2329; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><p style="color:#1f2329; margin-left:0; margin-right:0; text-align:start"><span>开源版 Gitee 地址：</span></p><ul><li><p style="margin-left:0; margin-right:0"><span>server:<span>&nbsp;</span></span><span><a href="https://gitee.com/csudata/clup">https://gitee.com/csudata/clup</a></span></p></li><li><p style="margin-left:0; margin-right:0"><span>agent:<span>&nbsp;</span></span><span><a href="https://gitee.com/csudata/clup-agent">https://gitee.com/csudata/clup-agent</a></span></p></li></ul><p style="color:#1f2329; margin-left:0; margin-right:0; text-align:start"><span>开源版 Github 地址</span></p><ul><li><p style="margin-left:0; margin-right:0"><span>server：</span><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcsudata%2Fclup" target="_blank">https://github.com/csudata/clup</a></span></p></li><li><p style="margin-left:0; margin-right:0"><span>agent：</span><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcsudata%2Fclup-agent" target="_blank">https://github.com/csudata/clup-agent</a></span></p></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Fri, 17 Nov 2023 08:48:55 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266928/clup-5-0-2</guid>
            <link>https://www.oschina.net/news/266928/clup-5-0-2</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[MyExcel 4.3.3 版本发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">MyExcel，是一个集导入、导出、加密 Excel 等多项功能的 Java 工具包。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">MyExcel 采用声明式语法来构建、读取 Excel，屏蔽 POI 的具体操作细节（对 POI 无感知），以开发常用的技术替代，使得构建（从简单到高度复杂 Excel）以及读取 Excel 变得极为便利，且构建、读取性能极为优异，占用内存极低。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">如导入：</p><pre><code>List&lt;ArtCrowd&gt; result = SaxExcelReader.of(ArtCrowd<span><span>.</span><span style="color:#d73a49"><span><span style="color:#d73a49">class</span></span></span><span>)</span></span>
        .sheet(<span><span><span><span><span>0</span></span></span></span></span>) <span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">// 0 代表第一个 sheet，如果为 0，可省略该操作，也可 sheet("名称") 读取</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>
        .rowFilter(row -&gt; row.getRowNum() &gt; <span><span><span><span><span>0</span></span></span></span></span>) <span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">// 如无需过滤，可省略该操作，0 代表第一行</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>
        .detectedMerge() <span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">// 识别合并单元格并填充数据，默认不识别</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>
        .read(path.toFile());</code></pre><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>本次更新点如下</strong>：</p><ul><li>修复不选取所有字段导出的情况下@MultiColumn 无效问题；</li><li>支持 jakarta.servlet，可在 springboot 3 使用附件导出；</li><li>支持内聚导出；</li><li>升级 poi 版本为 5.2.4；</li><li>其他依赖版本升级；</li></ul><p>其中，内聚导出如下：</p><p><span style="background-color:#ffffff; color:#1f2328">聚合导出和聚合列导出的差异，在于注解<span>&nbsp;</span></span><strong>@MultiColumn</strong><span style="background-color:#ffffff; color:#1f2328">所作用的对象不是</span><strong>List</strong><span style="background-color:#ffffff; color:#1f2328">，而是自定义对象：</span></p><pre><code class="language-java">public class School{
   
   @ExcelColumn(title = "学校名称")
   String schoolName;

   @MultiColumn(classType = ExtendedInfo.class)
   ExtendedInfo extendedInfo;

}

public class ExtendedInfo {

   @ExcelColumn(title = "学生总数")
   Integer count;
    
   @ExcelColumn(title = "学生姓名")
   List&lt;String&gt; studentNames;
    
}</code></pre><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="background-color:#ffffff; color:#333333">具体，请移步文档</span><span style="background-color:#ffffff; color:#333333">：</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fliaochong%2Fmyexcel%2Fwiki" target="_blank">https://github.com/liaochong/myexcel/wiki</a></p><p><img src="https://oscimg.oschina.net/oscnet/up-bf0dcbd14b9df24356a206ff40878aaec30.png" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 16 Nov 2023 06:59:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266909/myexcel-4-3-3-released</guid>
            <link>https://www.oschina.net/news/266909/myexcel-4-3-3-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Eclipse Vert.x 4.5.0 发布，虚拟线程支持]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff; color:#333333">Eclipse Vert.x 是一个微服务开发框架，基于事件和异步，依托于全异步 Java 服务器 Netty，并扩展了很多其他特性，以其轻量、高性能、支持多语言开发而备受开发者青睐。</span></p><p><span style="background-color:#ffffff; color:#333333">Eclipse Vert.x 4.5.0 现已<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fvertx.io%2Fblog%2Feclipse-vert-x-4-5-0%2F" target="_blank">发布</a>，此版本带来了一些新功能，包括虚拟线程支持。亮点更新如下：</span></p><h4><strong>虚拟线程</strong></h4><p>虚拟线程 verticle 可以等待 Vert.x futures 并同步获取结果。</p><pre style="margin-left:0; margin-right:0; text-align:start"><code class="language-java"><span style="color:#f0a46c">Verticle</span><span style="color:#c9e5f9">verticle</span><span>=</span><span style="color:#d2a8e0">new</span><span style="color:#f0a46c">AbstractVerticle</span>() {
  <span style="color:#adb5bd">@Override</span><span style="color:#d2a8e0">public</span><span style="color:#d2a8e0">void</span><span style="color:#f0a46c">start</span><span>()</span> {
    <span style="color:#f0a46c">HttpClient</span><span style="color:#c9e5f9">client</span><span>=</span> vertx.createHttpClient();
    <span style="color:#f0a46c">HttpClientRequest</span><span style="color:#c9e5f9">req</span><span>=</span> Future.await(client.request(
      HttpMethod.GET,
      <span style="color:#6cb9f0">8080</span>,
      <span style="color:#6cb9f0">"localhost"</span>,
      <span style="color:#6cb9f0">"/"</span>));
    <span style="color:#f0a46c">HttpClientResponse</span><span style="color:#c9e5f9">resp</span><span>=</span> Future.await(req.send());
    <span style="color:#f0a46c">int</span><span style="color:#c9e5f9">status</span><span>=</span> resp.statusCode();
    <span style="color:#f0a46c">Buffer</span><span style="color:#c9e5f9">body</span><span>=</span> Future.await(resp.body());
  }
};

<span style="color:#adb5bd">// Run the verticle a on virtual thread</span>
vertx.deployVerticle(verticle, <span style="color:#d2a8e0">new</span><span style="color:#f0a46c">DeploymentOptions</span>().setThreadingModel(ThreadingModel.VIRTUAL_THREAD));</code></pre><p style="text-align:start"><span><span><span><span style="color:#3c3c3b"><span><span><span><span><span><span><span><span><span><span><span><span><span><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fvertx.io%2Fdocs%2Fvertx-core%2Fjava%2F%23virtual_threads" target="_blank">Vert.x 虚拟线程</a>可以使用<code>await</code>来 block 任何 Vert.x future&nbsp;：</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span><span style="background-color:#3a2840"><span><span><span><span><span style="color:#ffffff"><span><span><span><span><span><span><span><span><span><span><span><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><pre style="margin-left:0; margin-right:0; text-align:start"><code class="language-java"><span style="color:#adb5bd">// create a test table</span>
await(pool.query(<span style="color:#6cb9f0">"create table test(id int primary key, name varchar(255))"</span>).execute());
<span style="color:#adb5bd">// insert some test data</span>
await(pool.query(<span style="color:#6cb9f0">"insert into test values (1, 'Hello'), (2, 'World')"</span>).execute());
<span style="color:#adb5bd">// query some data</span>
RowSet&lt;Row&gt; rows = await(pool.query(<span style="color:#6cb9f0">"select * from test"</span>).execute());
<span style="color:#d2a8e0">for</span> (Row row : rows) {
  System.out.println(<span style="color:#6cb9f0">"row = "</span> + row.toJson());
}
</code></pre><p style="color:#3c3c3b; text-align:start">可以在<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fvert-x3%2Fvertx-examples%2Ftree%2F4.x%2Fvirtual-threads-examples" target="_blank">ex­am­ple repo</a>&nbsp;查看更多信息。</p><h4 style="text-align:start"><strong><span><span><span><span><span style="color:#3c3c3b"><span><span><span><span><span><span><span><span><span><span><span><span><span>动态 SQL 连接创建</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></h4><p style="text-align:start"><span><span><span><span style="color:#3c3c3b"><span><span><span><span><span><span><span><span><span><span><span><span><span><span>默认情况下，连接池始终连接到同一主机，换句话说，数据库配置是静态<em>的</em>。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span><span><span><span style="color:#3c3c3b"><span><span><span><span><span><span><span><span><span><span><span><span><span><span>有时数据库配置需要是动态的，例如连接到数据库阵列，或者数据库配置可能会改变。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:start"><span><span><span><span style="color:#3c3c3b"><span><span><span><span><span><span><span><span><span><span><span><span><span><span>通过<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fvertx.io%2Fdocs%2Fvertx-pg-client%2Fjava%2F%23_dynamic_connection_configuration" target="_blank">动态连接配置，</a>你可以在 Vert.x 中轻松实现这一点：</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><pre style="margin-left:0; margin-right:0; text-align:start"><code class="language-java"><span style="color:#f0a46c">Pool</span><span style="color:#c9e5f9">pool</span><span>=</span> PgBuilder.pool()
  .with(poolOptions)
  .connectingTo(() -&gt; {
    Future&lt;SqlConnectOptions&gt; connectOptions = retrieveOptions();
    <span style="color:#d2a8e0">return</span> connectOptions;
  })
  .using(vertx)
  .build();
</code></pre><p style="color:#3c3c3b; text-align:start"><span style="color:#3c3c3b">每次 pool 需要创建连接时，都会调用 options supplier 并使用返回的选项来创建连接。</span></p><h4 style="text-align:start">PG bouncer transaction pooling mode</h4><p style="text-align:start"><span><span><span><span style="color:#3c3c3b"><span><span><span><span><span><span><span><span><span><span><span><span><span><span>7 级代理可以在与实际数据库的多个连接上平衡查询负载。当发生这种情况时，客户端可能会因缺乏 session affinity&nbsp;而感到 confused，并且可能会出现不必要的错误，例如 ERROR: unnamed preded statements does not exit (26000)。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:start"><span><span><span><span style="color:#3c3c3b"><span><span><span><span><span><span><span><span><span><span><span><span><span><span>Vert.x SQL 客户端现在<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fvertx.io%2Fdocs%2Fvertx-pg-client%2Fjava%2F%23_using_a_level_7_proxy" target="_blank">支持 </a>7 级代理，例如&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.pgbouncer.org%2F" target="_blank">PgBouncer&nbsp;</a>。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><h4 style="text-align:start"><span><span><span><span><span style="color:#3c3c3b"><span><span><span><span><span><span><span><span><span><span><span><span><span>TCP SSL 选项更新</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></h4><p style="text-align:start"><span><span><span><span style="color:#3c3c3b"><span><span><span><span><span><span><span><span><span><span><span><span><span><span>现在可以<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fvertx.io%2Fdocs%2Fvertx-core%2Fjava%2F%23_updating_ssltls_configuration" target="_blank">在运行时更新 TCP client/server SSL 选项</a>&nbsp;，这对于证书轮换非常有用。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><pre style="margin-left:0; margin-right:0; text-align:start"><code class="language-java">Future&lt;Boolean&gt; fut = server.updateSSLOptions(
  <span style="color:#d2a8e0">new</span><span style="color:#f0a46c">SSLOptions</span>()
    .setKeyCertOptions(<span style="color:#d2a8e0">new</span><span style="color:#f0a46c">JksOptions</span>()
      .setPath(<span style="color:#6cb9f0">"/path/to/your/server-keystore.jks"</span>)
      .setPassword(<span style="color:#6cb9f0">"password-of-your-keystore"</span>)));
</code></pre><p style="color:#3c3c3b; text-align:start"><span style="color:#3c3c3b">新连接将使用更新的配置。</span></p><h4 style="text-align:start"><strong>WebSocket client</strong></h4><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fvertx.io%2Fdocs%2Fvertx-core%2Fjava%2F%23_websockets_on_the_client" target="_blank">在新的 WebSocket client</a>&nbsp;中从 Vert.x HTTP client 捕获了 WebSocket client API&nbsp;。</p><pre style="margin-left:0; margin-right:0; text-align:start"><code class="language-java"><span style="color:#f0a46c">WebSocketClient</span><span style="color:#c9e5f9">wsClient</span><span>=</span> vertx.createWebSocketClient();

Future&lt;WebSocket&gt; f = wsClient.connect(connectOptions);
</code></pre><p style="color:#3c3c3b; text-align:start">这一改动的目的是让<code>HttpClient</code>接口专注于 HTTP 交互，并清理接口。</p><h4 style="text-align:start"><strong>Client builders</strong></h4><p style="text-align:start"><span><span><span><span style="color:#3c3c3b"><span><span><span><span><span><span><span><span><span><span><span><span><span><span>在 4.5 中开始引入用于高级客户端创建的 builder pattern。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:start"><span><span><span><span style="color:#3c3c3b"><span><span><span><span><span><span><span><span><span><span><span><span><span><span>当 Vert.x 客户端需要进行超出选项的配置时，builder pattern 有助于配置和创建 Vert.x 客户端。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:start"><span><span><span><span style="color:#3c3c3b"><span><span><span><span><span><span><span><span><span><span><span><span><span><span>更多详情可<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fvertx.io%2Fblog%2Fwhats-new-in-vert-x-4-5%2F" target="_blank">查看官方博客</a>。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 16 Nov 2023 06:53:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266908/eclipse-vert-x-4-5-0-released</guid>
            <link>https://www.oschina.net/news/266908/eclipse-vert-x-4-5-0-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Bun v1.0.12 版本发布：功能升级与错误修复]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Bun 技术团队近期推出了其 JavaScript 运行时、包管理器、打包器和测试运行器的升级版本——Bun v1.0.12。该版本在修复了 24 个安全漏洞的基础上，引入了多项创新功能和重大改进，以增强用户体验并提高与 Node.js 的兼容性。</p><p>Bun v1.0.12 的一个显著新特性是<code>bun -e</code>命令的加入，允许开发者在不创建文件的情况下直接运行脚本。这极大提升了编写和测试小型脚本的便利性和灵活性。此外，此版本通过<code>bun --env-file</code>命令的引入，使得用户可以指定不同的环境变量文件，这对于多环境测试尤为重要。</p><p>新版 Bun 还增加了对<code>server.url</code>的支持，它允许返回定义 HTTP 服务器位置的 URL 对象，这对于需要在测试中获取服务器实际 URL 的用户非常有用。同时，<code>import.meta.env</code>的引入使得在 Bun 环境中访问环境变量变得更为简便。</p><p>在代码健壮性方面，Bun v1.0.12 引入了<code>expect.unreachable()</code>，它用于在代码路径不应被执行时抛出错误。同时，该版本对 Bun 的 CLI 帮助进行了改进，使其更易于阅读和理解。</p><p><span>在打包功能方面，Bun v1.0.12 引入了一项重要改进：现在可以在打包时使用宏来导入内置模块。例如，开发者可以在打包阶段使用宏来调用</span><code>readFileSync</code><span>和</span><code>spawnSync</code><span>等内置模块的功能。这一改进为开发者在构建过程中提供了更多的灵活性和便利，使得例如在打包时读取文件内容或启动进程等操作变得可行。</span>此外，对<code>mock.module</code>的支持也得到了改进，解决了覆盖默认导出和重新导出时的问题，增强了在测试环境中模拟模块的功能。</p><p>在解决 bug 方面，Bun 团队修复了多项问题，包括<code>bun install</code>在处理特殊情况时的错误，HTTP 客户端响应头缺失情况的改进，以及其他潜在的稳定性问题。</p><p>综合来看，Bun v1.0.12 的发布是该项目在打造更加强大、易用工具方面的一大步。这些更新和改进预期将使 Bun 在 JavaScript 开发社区中的作用更为重要，为开发者提供更高效、更可靠的编程体验。</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 16 Nov 2023 06:13:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266904/bun-1-0-12-released</guid>
            <link>https://www.oschina.net/news/266904/bun-1-0-12-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[新一代国产 ORM 框架，sqltoy-orm 5.2.81 发版，强化枚举类型支持]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>开源地址：</strong></p><ul><li>github:&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fchenrenfei%2Fsagacity-sqltoy" target="_blank">https://github.com/sagframe/sagacity-sqltoy</a></li><li>gitee:&nbsp;<a href="https://gitee.com/sagacity/sagacity-sqltoy">https://gitee.com/sagacity/sagacity-sqltoy</a></li><li>idea 插件 (可直接在 idea 中检索安装):&nbsp;&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fthreefish%2Fsqltoy-idea-plugins" target="_blank">https://github.com/threefish/sqltoy-idea-plugins</a></li><li>sqltoy 脚手架项目：https://gitee.com/momoljw/sss-rbac-admin</li><li>sqltoy lambda 项目:&nbsp;https://gitee.com/gzghde/sqltoy-plus</li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>更新内容</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="background-color:#ffffff; color:#40485b">1、条件参数 filter 处理过程支持枚举类型</span><br><span style="background-color:#ffffff; color:#40485b">2、宏里面的参数支持枚举类型，如@ loop</span><br><span style="background-color:#ffffff; color:#40485b">3、sql 日志输出支持枚举类型</span></p><p><strong>s</strong><strong>qltoy-orm 是 JPA 和超强查询的融合体</strong></p><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsagframe%2Fsagacity-sqltoy%23jpa%25E9%2583%25A8%25E5%2588%2586" target="_blank">JPA 部分</a></h3><ul><li>类似 JPA 的对象化 CRUD、对象级联加载和新增、更新</li><li>强化 update 操作，提供弹性字段修改能力，不同于 hibernate 先 load 后修改，而是一次数据库交互完成修改，确保了高并发场景下数据的准确性</li><li>改进了级联修改，提供了先删除或者先置无效，再覆盖的操作选项</li><li>增加了 updateFetch、updateSaveFetch 功能，强化针对强事务高并发场景的处理，类似库存台账、资金台账，实现一次数据库交互，完成锁查询、不存在则插入、存在则修改，并返回修改后的结果</li><li>增加了树结构封装，便于统一不同数据库树型结构数据的递归查询</li><li>支持分库分表、支持多种主键策略 (额外支持基于 redis 的产生特定规则的业务主键)、加密存储、数据版本校验</li><li>提供了公共属性赋值 (创建人、修改人、创建时间、修改时间、租户)、扩展类型处理等</li><li>提供了多租户统一过滤和赋值、提供了数据权限参数带入和越权校验</li></ul><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsagframe%2Fsagacity-sqltoy%23%25E6%259F%25A5%25E8%25AF%25A2%25E9%2583%25A8%25E5%2588%2586" target="_blank">查询部分</a></h3><ul><li>极为直观的 sql 编写方式，便于从客户端 &lt;--&gt; 代码，双向快速迁移，便于后期变更维护</li><li>支持缓存翻译、反向缓存匹配 key 代替 like 模糊查询</li><li>提供了跨数据库支持能力：不同数据库的函数自动转换适配，多方言 sql 根据实际环境自动匹配、多数据库同步测试，大幅提升了产品化能力</li><li>提供了取 top 记录、随机记录等特殊场景的查询功能</li><li>提供了最强大的分页查询机制：1) 自动优化 count 语句；2) 提供基于缓存的分页优化，避免每次都执行 count 查询；3) 提供了独具特色的快速分页；4) 提供了并行分页</li><li>提供了分库分表能力</li><li>提供了在管理类项目中极为价值的：分组汇总计算、行列转换 (行转列、列转行)、同比环比、树形排序、树形汇总，相关算法自然集成</li><li>提供了基于查询的层次化数据结构封装</li><li>提供了大量辅助功能：数据脱敏、格式化、条件参数预处理等</li></ul><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsagframe%2Fsagacity-sqltoy%23%25E6%2594%25AF%25E6%258C%2581%25E5%25A4%259A%25E7%25A7%258D%25E6%2595%25B0%25E6%258D%25AE%25E5%25BA%2593" target="_blank">支持多种数据库</a></h3><ul><li>常规的 mysql、oracle、db2、postgresql、 sqlserver、dm、kingbase、sqlite、h2、 oceanBase、polardb、guassdb、tidb</li><li>支持分布式 olap 数据库: clickhouse、StarRocks、greenplum、impala (kudu)</li><li>支持 elasticsearch、mongodb</li><li>所有基于 sql 和 jdbc 各类数据库查询</li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>sqltoy 特点介绍：</strong></p><ul><li><strong>sqltoy 的核心构建思想</strong></li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><img alt="" height="868" src="https://oscimg.oschina.net/oscnet/up-a385d72ceb030d705e8e5803ca3cd4c09a1.png" width="1136" referrerpolicy="no-referrer"></p><ul><li><strong>sqltoy 的对比 mybatis (plus) 的核心点：查询语句编写、可阅读性、可维护性</strong></li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong><img alt="" height="988" src="https://oscimg.oschina.net/oscnet/up-93bc88150c80aed200b6ff7d95c9c7bd7df.png" width="1797" referrerpolicy="no-referrer"></strong></p><ul><li><strong>对象化 crud 是基础，但 sqltoy 有针对性的改进：update、updateSaveFetch、updateFetch 等</strong></li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><img alt="" height="845" src="https://oscimg.oschina.net/oscnet/up-6b8e8204061eec3d2096a50e9899548351e.png" width="1745" referrerpolicy="no-referrer"></p><ul><li><strong>sqltoy 的缓存翻译，大幅减少表关联简化 sql，让你的查询性能成几何级提升</strong></li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="阐述 sqltoy 为什么秒杀 mybatis(plus)" src="https://p3-tt.byteimg.com/origin/pgc-image/85287e14aa3e428fbabe297472596455?from=pc" referrerpolicy="no-referrer"></p><ul><li><strong>极致的分页，同样帮助你实现查询的性能大幅提升</strong></li></ul><ol><li>快速分页:@fast () 实现先取单页数据然后再关联查询，极大提升速度</li><li>分页优化器:page-optimize 让分页查询由两次变成 1.3~1.5 次 (用缓存实现相同查询条件的总记录数量在一定周期内无需重复查询</li><li>sqltoy 的分页取总记录的过程不是简单的 select count (1) from (原始 sql)；而是智能判断是否变成:select count (1) from 'from 后语句 '， 并自动剔除最外层的 order by</li><li>sqltoy 支持并行查询：parallel="true"，同时查询总记录数和单页数据，大幅提升性能</li></ol><div><img alt="阐述 sqltoy 为什么秒杀 mybatis(plus)" src="https://p6-tt.byteimg.com/origin/pgc-image/3d5f7094da154671985dd390f56f6302?from=pc" referrerpolicy="no-referrer"></div><div>
 &nbsp;
</div><ul><li><strong>便利的跨数据库统计计算：数据旋转</strong></li></ul><div><img alt="阐述 sqltoy 为什么秒杀 mybatis(plus)" src="https://p1-tt.byteimg.com/origin/pgc-image/949bc75b5c53441c98284dae2bed11fe?from=pc" referrerpolicy="no-referrer"></div><ul><li><strong>便利的跨数据库统计计算：无限极分组统计 (含汇总求平均)</strong></li></ul><div><img alt="阐述 sqltoy 为什么秒杀 mybatis(plus)" src="https://p1-tt.byteimg.com/origin/pgc-image/f5edc52adbbe4a1ca327d9a9b0c5d64c?from=pc" referrerpolicy="no-referrer"></div><ul><li><strong>便利的跨数据库统计计算：同比环比</strong></li></ul><div><img alt="阐述 sqltoy 为什么秒杀 mybatis(plus)" src="https://p3-tt.byteimg.com/origin/pgc-image/b9d435e2852644c9a4c9e062cc3d46d7?from=pc" referrerpolicy="no-referrer"></div><div>
 5、树形表排序汇总
</div><div><p style="margin-left:0; margin-right:0"><img height="274" src="https://oscimg.oschina.net/oscnet/up-1773cce82b98a943d42caaa62f60d80f3d0.png" width="1002" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0"><img height="403" src="https://oscimg.oschina.net/oscnet/up-8717f1c442767b08f2406019ae9b63721cb.png" width="409" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0">6、扩展集成</p><p style="margin-left:0; margin-right:0"><img height="961" src="https://oscimg.oschina.net/oscnet/up-6603ed15ec936dea45c4f6fb7318f4a062b.png" width="1965" referrerpolicy="no-referrer"></p></div></div>
                                    ]]>
            </description>
            <pubDate>Thu, 16 Nov 2023 04:52:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266891/sqltoy-orm-5-2-851-released</guid>
            <link>https://www.oschina.net/news/266891/sqltoy-orm-5-2-851-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[JavaWeb 敏捷开发框架 Layui 版本 v3.0.0 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>v3.0.0 更新如下：<br> 1、重新设计登录背景页，重写登录整体功能；<br> 2、升级字典管理功能，数据表分别改成 sys_dict(字典分类)、sys_dict_data(字典数据)；<br> 3、升级配置管理模块，数据表分别改成 sys_config(系统配置)、sys_config_data(配置数据)；<br> 4、重构代码生成器，解决原因生成模块时因为存在相同的表导致生成重复内容的问题；<br> 5、升级系统主页菜单展示问题，支持三级菜单展示，案例在系统工具中；<br> 6、系统 Vo 统一根据模块目录进行划分，同模块的 Vo 文件统一放入当前的模块的文件夹中；<br> 7、重构上传文件组件，编写上传文件案例，目前上传文件已集成到用户信息编辑页中；<br> 8、新增下拉多选组件，已编写案例于用户管理模块的编辑表单中；<br> 9、重构系统主页的欢迎页，将原先的内容换成了统计报表等等相关内容；<br> 10、系统架构新增多环境发布配置文件，分别为本地环境 (local)、开发环境 (dev)、测试环境 (test)、线上环境 (prod);<br> 11、数据库名有原先的 javaweb 变更为 javaweb.layui,为了更现象的标识每个版本的差异性；<br> 12、更新配置数据列表页 tab 切换样式，体验更简洁，更友好；<br> 13、核心基类服务做了结构调整，基类所有模块统一调整至 common 核心模块中；<br> 14、重构代码生成生成菜单权限的逻辑；<br> 15、重写菜单编辑时创建菜单权限节点的功能，采用全部删除现有节点，重新创建新节点；<br> 16、完善会员管理模块，新增注册来源、设备类型等表单控件；<br> 17、新增 javaweb-api 模块，根据客户反馈有时需要开发客户端等程序，可以放入这个模块，具体业务文件可以直接放入此模块；</p><p><span style="background-color:#ffffff; color:#40485b">一款 Java 语言基于 SpringBoot2、Layui、Thymeleaf、MybatisPlus、Shiro、MySQL 等框架精心打造的一款模块化、插件化、高性能的前后端分离架构敏捷开发框架，可用于快速搭建后台管理系统，本着简化开发、提升开发效率的初衷，框架自研了一套个性化的组件，实现了可插拔的组件式开发方式：单图上传、多图上传、下拉选择、开关按钮、单选按钮、多选按钮、图片裁剪、富文本编辑器等等一系列个性化、轻量级的组件，是一款真正意义上实现组件化开发的敏捷开发框架，框架已集成了完整的 RBAC 权限架构和常规基础模块，同时支持多主题切换，可以根据自己喜欢的风格选择想一个的主题，实现了个性化呈现的需求；</span></p><p>&nbsp;</p><h2>开发者信息</h2><ul><li>软件名称：JavaWeb 敏捷开发框架单体 Layui 版本</li><li>官网网址：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.javaweb.vip" target="_blank">https://www.javaweb.vip</a></li><li>文档网址：<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fdocs.layui.javaweb.vip" target="_blank">http://docs.layui.javaweb.vip</a></li><li>演示地址：<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmanage.layui.javaweb.vip" target="_blank">http://manage.layui.javaweb.vip</a></li></ul><h2>版本说明</h2><table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:0px; box-sizing:border-box; color:#40485b; display:block; font-family:-apple-system,BlinkMacSystemFont,&quot;Segoe UI&quot;,Helvetica,Arial,&quot;Apple Color Emoji&quot;,&quot;Segoe UI Emoji&quot;,&quot;Segoe UI Symbol&quot;,&quot;Liberation Sans&quot;,&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,&quot;Hiragino Sans GB&quot;,&quot;Wenquanyi Micro Hei&quot;,&quot;WenQuanYi Zen Hei&quot;,&quot;ST Heiti&quot;,SimHei,SimSun,&quot;WenQuanYi Zen Hei Sharp&quot;,sans-serif; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; margin-bottom:16px; margin-top:0px; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:635px; word-break:initial; word-spacing:0px"><tbody><tr><th>版本名称</th><th>说明</th><th>地址</th></tr></tbody><tbody><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">JavaWeb_Layui 单体混编专业版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 SpringBoot2、Thymeleaf、layui、MySQL</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/javaweb520/JavaWeb_Layui">https://gitee.com/javaweb520/JavaWeb_Layui</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">avaWeb_Layui 单体混编旗舰版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 SpringBoot2、Thymeleaf、layui、MySQL</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/javaweb520/JavaWeb_Layui_Pro">https://gitee.com/javaweb520/JavaWeb_Layui_Pro</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">JavaWeb_EleVue 单体前后端分离版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 SpringBoot2、Vue2.x、ElementUI、MySQL</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/javaweb520/JavaWeb_EleVue">https://gitee.com/javaweb520/JavaWeb_EleVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">JavaWeb_AntdVue 单体前后端分离版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 SpringBoot2、Vue3.x、AntDesign、MySQL</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/javaweb520/JavaWeb_AntdVue">https://gitee.com/javaweb520/JavaWeb_AntdVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">JavaWeb_Cloud_Eureka_EleVue 微服务前后端分离版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 SpringCloud、Eureka、OAuth2、Vue2.x、ElementUI、MySQL</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/javaweb520/JavaWeb_Cloud_Eureka_EleVue">https://gitee.com/javaweb520/JavaWeb_Cloud_Eureka_EleVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">JavaWeb_Cloud_Eureka_AntdVue 微服务前后端分离版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 SpringCloud、Eureka、OAuth2、Vue3.x、AntDesign、MySQL</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/javaweb520/JavaWeb_Cloud_Eureka_AntdVue">https://gitee.com/javaweb520/JavaWeb_Cloud_Eureka_AntdVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">JavaWeb_Cloud_Consul_EleVue 微服务前后端分离版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 SpringCloud、Consul、OAuth2、Vue2.x、ElementUI、MySQL</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/javaweb520/JavaWeb_Cloud_Consul_EleVue">https://gitee.com/javaweb520/JavaWeb_Cloud_Consul_EleVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">JavaWeb_Cloud_Consul_AntdVue 微服务前后端分离版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 SpringCloud、Consul、OAuth2、Vue3.x、AntDesign、MySQL</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/javaweb520/JavaWeb_Cloud_Consul_AntdVue">https://gitee.com/javaweb520/JavaWeb_Cloud_Consul_AntdVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">JavaWeb_Cloud_Nacos_EleVue 微服务前后端分离版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 SpringCloud、Nacos、OAuth2、Vue2.x、ElementUI、MySQL</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/javaweb520/JavaWeb_Cloud_Nacos_EleVue">https://gitee.com/javaweb520/JavaWeb_Cloud_Nacos_EleVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">JavaWeb_Cloud_Nacos_AntdVue 微服务前后端分离版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 SpringCloud、Nacos、OAuth2、Vue3.x、AntDesign、MySQL</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/javaweb520/JavaWeb_Cloud_Nacos_AntdVue">https://gitee.com/javaweb520/JavaWeb_Cloud_Nacos_AntdVue</a></td></tr></tbody></table><h2>模块展示</h2><p><img alt="" height="1080" src="https://oscimg.oschina.net/oscnet/up-d8264a2e0b66b80f8831d67b55e7b9e96eb.png" width="1920" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 16 Nov 2023 04:49:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266890/javaweb-layui-3-0-0-released</guid>
            <link>https://www.oschina.net/news/266890/javaweb-layui-3-0-0-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[企业微信 Java 开发包 WECOM-SDK 1.2.3 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#363c42; text-align:start"><span><a href="https://gitee.com/felord/wecom-sdk"><span><strong><span>WECOM-SDK</span></strong></span></a></span><span> 是开源的企业微信开放 API 的 Java 实现，是目前最完整的 Java 实现。目前已经实现了企业微信通讯录管理、客户管理、上下游、微信客服、素材管理、消息推送、企微机器人、身份验证、应用管理、汇报、收集表、考勤等相关接口，开发人员不需要很高的学习成本就能快速优雅地接入企业微信。</span></p><p style="color:#363c42; text-align:start"><span>现在你可以通过 wecom-sdk 提供的 api 来自定义企微应用工作台样式了，具体参见</span><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ffelord.cn%2Fwecom%2Fchangelog.html%231-2-x" target="_blank"><span>更新说明</span></a></span><span>。</span></p><p style="color:#363c42; text-align:start"><span><strong><span>仓库地址</span></strong></span></p><p style="color:#363c42; text-align:start"><span>gitee: </span><span><a href="https://gitee.com/felord/wecom-sdk"><span><strong><span>https://gitee.com/felord/wecom-sdk</span></strong></span></a></span></p><p style="color:#363c42; text-align:start"><span>github: </span><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNotFound403%2Fwecom-sdk" target="_blank"><span><strong><span>https://github.com/NotFound403/wecom-sdk</span></strong></span></a></span></p><p style="color:#363c42; text-align:start"><span><strong><span>开发文档</span></strong></span></p><p style="color:#363c42; text-align:start"><span>文档：</span><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ffelord.cn%2Fwecom%2Foverview.html" target="_blank"><span>https://felord.cn/wecom/overview.html</span></a></span></p><p style="color:#363c42; text-align:start"><span><strong><span>特性</span></strong></span></p><ul><li><p style="color:var(--text-color); margin-left:.5rem; margin-right:0"><span>支持多企业微信同时配置作业</span></p></li><li><p style="color:var(--text-color); margin-left:.5rem; margin-right:0"><span>支持响应式，高性能</span></p></li><li><p style="color:var(--text-color); margin-left:.5rem; margin-right:0"><span>集成方便，适用于各种 Java 生态</span></p></li><li><p style="color:var(--text-color); margin-left:.5rem; margin-right:0"><span>学习成本低</span></p></li><li><p style="color:var(--text-color); margin-left:.5rem; margin-right:0"><span>目前实现企业微信接口</span><span><strong><span>200</span></strong></span><span>多个，能满足大部分企业微信业务场景的需求</span></p></li><li><p style="color:var(--text-color); margin-left:.5rem; margin-right:0"><span>全参数封装，入参、出参高度语义化封装，再也不担心组织参数、解析参数的问题</span></p></li><li><p style="color:var(--text-color); margin-left:.5rem; margin-right:0"><span>实现统一回调，所有回调事件可集中异步处理，开发者只需要关心业务逻辑的开发</span></p></li><li><p style="color:var(--text-color); margin-left:.5rem; margin-right:0"><span>由 SDK 接管 AccessToken 生命周期，开发者无需关心 AccessToken 的管理。</span></p></li></ul><p style="color:#363c42; text-align:start"><span><strong><span>Maven 中央仓库座标</span></strong></span></p><ul><li><p style="color:var(--text-color); margin-left:.5rem; margin-right:0"><span>普通版本</span></p></li></ul><pre><span><span style="color:#80cbc4">&lt;</span><span style="color:#80cbc4">dependency</span><span style="color:#80cbc4">&gt;</span></span><span> &nbsp;<span style="color:#80cbc4">&lt;</span><span style="color:#80cbc4">groupId</span><span style="color:#80cbc4">&gt;</span>cn.felord<span style="color:#80cbc4">&lt;/</span><span style="color:#80cbc4">groupId</span><span style="color:#80cbc4">&gt;</span></span><span> &nbsp;<span style="color:#80cbc4">&lt;</span><span style="color:#80cbc4">artifactId</span><span style="color:#80cbc4">&gt;</span>wecom-sdk<span style="color:#80cbc4">&lt;/</span><span style="color:#80cbc4">artifactId</span><span style="color:#80cbc4">&gt;</span></span><span> &nbsp;<span style="color:#80cbc4">&lt;</span><span style="color:#80cbc4">version</span><span style="color:#80cbc4">&gt;</span>1.2.3<span style="color:#80cbc4">&lt;/</span><span style="color:#80cbc4">version</span><span style="color:#80cbc4">&gt;</span></span><span><span style="color:#80cbc4">&lt;/</span><span style="color:#80cbc4">dependency</span><span style="color:#80cbc4">&gt;</span></span></pre><ul><li><p style="color:var(--text-color); margin-left:.5rem; margin-right:0"><span>响应式版本</span></p></li></ul><pre><span><span style="color:#80cbc4">&lt;</span><span style="color:#80cbc4">dependency</span><span style="color:#80cbc4">&gt;</span></span><span> &nbsp;<span style="color:#80cbc4">&lt;</span><span style="color:#80cbc4">groupId</span><span style="color:#80cbc4">&gt;</span>cn.felord<span style="color:#80cbc4">&lt;/</span><span style="color:#80cbc4">groupId</span><span style="color:#80cbc4">&gt;</span></span><span> &nbsp;<span style="color:#80cbc4">&lt;</span><span style="color:#80cbc4">artifactId</span><span style="color:#80cbc4">&gt;</span>rx-wecom-sdk<span style="color:#80cbc4">&lt;/</span><span style="color:#80cbc4">artifactId</span><span style="color:#80cbc4">&gt;</span></span><span> &nbsp;<span style="color:#80cbc4">&lt;</span><span style="color:#80cbc4">version</span><span style="color:#80cbc4">&gt;</span>1.2.3<span style="color:#80cbc4">&lt;/</span><span style="color:#80cbc4">version</span><span style="color:#80cbc4">&gt;</span></span><span><span style="color:#80cbc4">&lt;/</span><span style="color:#80cbc4">dependency</span><span style="color:#80cbc4">&gt;</span></span></pre><p style="color:#363c42; text-align:start"><span><strong><span>采用技术栈</span></strong></span></p><ul><li><p style="color:var(--text-color); margin-left:.5rem; margin-right:0"><span>Retrofit2</span></p></li><li><p style="color:var(--text-color); margin-left:.5rem; margin-right:0"><span>Rxjava3</span></p></li><li><p style="color:var(--text-color); margin-left:.5rem; margin-right:0"><span>Okhttp4</span></p></li><li><p style="color:var(--text-color); margin-left:.5rem; margin-right:0"><span>Jackson2</span></p></li><li><p style="color:var(--text-color); margin-left:.5rem; margin-right:0"><span>XStream</span></p></li></ul><p style="color:#363c42; text-align:start"><span><strong><span>🚀1.2.3 更新</span></strong></span></p><ul><li><p style="color:var(--text-color); margin-left:.5rem; margin-right:0"><span>应用菜单和工作台相关 API 实现，现在你可以通过接口自定义你的应用菜单和应用工作台</span></p></li><li><p style="color:var(--text-color); margin-left:.5rem; margin-right:0"><span>修复通讯录标签列表 API 返回值错误的问题</span></p></li><li><p style="color:var(--text-color); margin-left:.5rem; margin-right:0"><span>Okhttp 版本升级到 4.12.0</span></p></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Thu, 16 Nov 2023 03:50:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266886/wecom-sdk-1-2-3-released</guid>
            <link>https://www.oschina.net/news/266886/wecom-sdk-1-2-3-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[【店滴云】可命令行生成 uniapp 接口文件，结合官方 sdk 快速开发]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="text-align:center">【店滴云】可命令行生成 uniapp 接口文件，结合官方 sdk 快速开发</p><p>命令行：</p><div><pre><span style="background-color:#153811; color:#54b33e">php ./yii addons/createapi --addons=diandi_hotel</span></pre></div><p>生成的 api 文件示例：</p><pre><code>import sendHttp from "@/uni_modules/ddiot-ui/js_sdk/http/index.js"

export function hotelCommentList(hotel_id, room_id, page, pageSize) {
return sendHttp('/diandi_hotel/comment/list', "POST", {
hotel_id,
room_id,
page,
pageSize
}, true)
}</code></pre></div>
                                    ]]>
            </description>
            <pubDate>Thu, 16 Nov 2023 03:28:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266881/ddiot-updated</guid>
            <link>https://www.oschina.net/news/266881/ddiot-updated</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[FydeOS v17.1 发布，集中修复 Linux 子系统，增加本土化优化]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#121212; margin-left:0; margin-right:0; text-align:start"><img alt="" height="720" src="https://oscimg.oschina.net/oscnet/up-9957e1513ae48366915d9d57f2b638760ae.png" width="1440" referrerpolicy="no-referrer"></p><p style="color:#121212; margin-left:0; margin-right:0; text-align:start">FydeOS v17.1 是对 FydeOS v17 Nostalgic Reflections 的一个集合功能修复及维护版本。在此次的发布里，值得一提的修改的有：</p><ul><li>集中修复了 Linux 子系统存在的一些问题： 
  <ul><li>修复了某些 Linux 程序无法展现 GUI 的问题</li><li>修复了某些 Linux 程序在系统休眠唤醒后崩溃的问题</li><li>修复了某些常用 Linux 程序（比如 WPS Linux）无法通过双击 .deb 软件包安装的依赖缺失</li><li>优化了 Linux 镜像内的源地址；默认指向部署在中国大陆的阿里云镜像</li><li>其它本土化优化，包括中文字体和系统语言等</li><li><strong>如果你是从早期版本的 FydeOS 通过 OTA 升级到此 v17.1 版本，以上 Linux 子系统的优化并不会通过升级系统而生效；你需要删除 Linux 环境并重新开启才能获得。</strong></li></ul></li></ul><div><img alt="" height="1824" src="https://oscimg.oschina.net/oscnet/up-bcbf3ddcf921f81e98aa29ac7468275d9f6.png" width="2736" referrerpolicy="no-referrer"></div><ul><li>修复了摄像头无法在某些安卓应用中开启的问题</li><li>修复了在系统内添加打印机可能会报错的问题</li><li>优化了「提交反馈」的功能</li><li>为多启动安装的 FydeOS 增加了「<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ffydeos.com%2Ffaq%2Fdisable-media-files-scan" target="_blank">禁用多分区下的媒体文件自动扫描以获得更长的电池续航时间</a></u>」的功能</li><li>在<span>&nbsp;</span><code>hwtuner</code><span>&nbsp;</span>中添加了更新 rEFInd 二进制文件以及新设计的深色主题的入口</li><li>添加了针对常见 USB wifi 适配器芯片的支持：MT7612U、RTL8192EU、RTL8188GU 以及 RTL8188CUS</li></ul><p style="color:#121212; margin-left:0; margin-right:0; text-align:start">希望你喜欢本次更新的新功能，有什么想对我们说的，欢迎随时到<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcommunity.fydeos.com%2F" target="_blank">FydeOS 社区</a>来告诉我们。</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 16 Nov 2023 03:24:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266880/fydeos-17-1-released</guid>
            <link>https://www.oschina.net/news/266880/fydeos-17-1-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Rust 1.74.0 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff"><span style="color:#333333">Rust 1.74.0 稳定版已正式</span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.rust-lang.org%2F2023%2F11%2F16%2FRust-1.74.0.html" target="_blank">发布</a><span style="background-color:#ffffff"><span style="color:#333333">，主要带来以下变化：</span></span></p><h4 style="text-align:start"><strong><span style="color:#000000"><span style="background-color:#ffffff">通过 Cargo 进行 Lint 配置</span></span></strong></h4><p style="text-align:start"><span style="color:#000000"><span style="background-color:#ffffff">正如&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frust-lang.github.io%2Frfcs%2F3389-manifest-lint.html" target="_blank">RFC 3389</a>&nbsp;所提议，<code>Cargo.toml</code>manifest&nbsp;现在支持一个<code>[lints]</code>表来配置来自编译器和其他工具的 lints 的报告级别（禁止、拒绝、警告、允许）。因此，不要使用</span></span><code>-F</code><span style="background-color:#ffffff"><span style="color:#000000">/</span></span><code>-D</code><span style="background-color:#ffffff"><span style="color:#000000">/</span></span><code>-W</code><span style="background-color:#ffffff"><span style="color:#000000">/</span></span><code>-A</code><span style="color:#000000"><span style="background-color:#ffffff">设置 RUSTFLAGS（这会影响整个构建过程），或者使用 crate-level 的属性，例如：</span></span></p><pre style="text-align:start"><code class="language-rust"><span style="color:#b65611">#![forbid(unsafe_code)]</span><span style="color:#b65611">#![deny(clippy::enum_glob_use)]</span></code></pre><p style="text-align:start"><span style="color:#000000"><span style="background-color:#ffffff">现在可以将这些写入 </span></span><span style="color:#000000"><span style="background-color:#ffffff">package manifest&nbsp;</span></span><span style="color:#000000"><span style="background-color:#ffffff">中以供 Cargo 处理：</span></span></p><pre style="text-align:start"><code class="language-toml"><span style="color:#6684e1">[lints.rust]</span>
unsafe_code = <span style="color:#60ac39">"forbid"</span><span style="color:#6684e1">
[lints.clippy]</span>
enum_glob_use = <span style="color:#60ac39">"deny"</span></code></pre><p style="text-align:start"><span style="color:#000000"><span style="background-color:#ffffff">这些也可以在<code>[workspace.lints]</code>表中配置，然后像许多其他工作区设置一样由<code>[lints] workspace = true</code>继承。在决定哪些&nbsp;crates&nbsp;需要重建时，Cargo 还将跟踪这些设置的更改。</span></span></p><p style="text-align:start"><span style="color:#000000"><span style="background-color:#ffffff">有关详细信息，可参阅 Cargo 参考手册中的<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fcargo%2Freference%2Fmanifest.html%23the-lints-section" target="_blank"><code>lints</code></a>和<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fcargo%2Freference%2Fworkspaces.html%23the-lints-table" target="_blank"><code>workspace.lints</code></a>部分。</span></span></p><h4 style="text-align:start"><strong><span style="color:#000000"><span style="background-color:#ffffff">Cargo Registry Authentication</span></span></strong></h4><p style="text-align:start"><span style="color:#000000"><span style="background-color:#ffffff">此版本中还包含两个相关的 Cargo 功能：credential providers 和 authenticated private registries。</span></span></p><p style="text-align:start"><span style="color:#000000"><span style="background-color:#ffffff">Credential providers&nbsp;允许配置 Cargo 如何获取注册表的凭证。Built-in providers&nbsp;用于 Linux、macOS 和 Windows 上特定于操作系统的安全秘密存储。此外，可以编写自定义 providers 来支持存储或生成令牌的任意方法。使用安全的 credential provider&nbsp;可以降低注册表令牌泄漏的风险。</span></span></p><p style="text-align:start"><span style="color:#000000"><span style="background-color:#ffffff">Registries 现在可以选择要求对所有操作进行身份验证，而不仅仅是发布。这使得 private Cargo registries 能够提供更安全的 crates 托管。使用 private registries&nbsp;需要配置 credential provider。</span></span></p><p style="text-align:start"><span style="color:#000000"><span style="background-color:#ffffff">有关更多信息，可参阅&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fbeta%2Fcargo%2Freference%2Fregistry-authentication.html" target="_blank">Cargo 文档</a>。</span></span></p><h4 style="text-align:start"><strong><span style="color:#000000"><span style="background-color:#ffffff">Projections in opaque return types</span></span></strong></h4><p style="text-align:start"><span style="color:#000000"><span style="background-color:#ffffff">有关返回「return type cannot contain a projection or Self that references lifetimes from a parent scope」错误信息的问题现在已经解决。编译器现在允许在 opaque return types 中提及<code>Self</code>和关联类型，例如<code>async fn</code>和<code>-&gt; impl Trait</code>。即使你对"projection"之类的术语一无所知，这种功能也能让 Rust 更接近你所期望的工作方式。</span></span></p><p style="text-align:start"><span style="color:#000000"><span style="background-color:#ffffff">不过该功能目前有一个不稳定的 feature gate，因为它的实现最初没有正确处理 captured lifetimes。有关更多技术细节，可参阅</span></span>&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frust-lang%2Frust%2Fpull%2F115659" target="_blank">stabilization pull request</a><span style="color:#000000"><span style="background-color:#ffffff">。示例：</span></span></p><pre style="text-align:start"><code class="language-rust"><span style="color:#b854d4">struct</span><span style="color:#6684e1">Wrapper</span>&lt;<span style="color:#60ac39">'a</span>, T&gt;(&amp;<span style="color:#60ac39">'a</span> T);

<span style="color:#aaaaaa">// Opaque return types that mention `Self`:</span><span style="color:#b854d4">impl</span> Wrapper&lt;<span style="color:#60ac39">'_</span>, ()&gt; {
    <span style="color:#b854d4">async</span><span style="color:#b854d4">fn</span><span style="color:#6684e1">async_fn</span>() -&gt; <span style="color:#b854d4">Self</span> { <span style="color:#aaaaaa">/* ... */</span> }
    <span style="color:#b854d4">fn</span><span style="color:#6684e1">impl_trait</span>() -&gt; <span style="color:#b854d4">impl</span><span style="color:#b65611">Iterator</span>&lt;Item = <span style="color:#b854d4">Self</span>&gt; { <span style="color:#aaaaaa">/* ... */</span> }
}

<span style="color:#b854d4">trait</span><span style="color:#6684e1">Trait</span>&lt;<span style="color:#60ac39">'a</span>&gt; {
    <span style="color:#b854d4">type</span><span style="color:#6684e1">Assoc</span>;
    <span style="color:#b854d4">fn</span><span style="color:#6684e1">new</span>() -&gt; Self::Assoc;
}
<span style="color:#b854d4">impl</span> Trait&lt;<span style="color:#60ac39">'_</span>&gt; <span style="color:#b854d4">for</span> () {
    <span style="color:#b854d4">type</span><span style="color:#6684e1">Assoc</span> = ();
    <span style="color:#b854d4">fn</span><span style="color:#6684e1">new</span>() {}
}

<span style="color:#aaaaaa">// Opaque return types that mention an associated type:</span><span style="color:#b854d4">impl</span>&lt;<span style="color:#60ac39">'a</span>, T: Trait&lt;<span style="color:#60ac39">'a</span>&gt;&gt; Wrapper&lt;<span style="color:#60ac39">'a</span>, T&gt; {
    <span style="color:#b854d4">async</span><span style="color:#b854d4">fn</span><span style="color:#6684e1">mk_assoc</span>() -&gt; T::Assoc { <span style="color:#aaaaaa">/* ... */</span> }
    <span style="color:#b854d4">fn</span><span style="color:#6684e1">a_few_assocs</span>() -&gt; <span style="color:#b854d4">impl</span><span style="color:#b65611">Iterator</span>&lt;Item = T::Assoc&gt; { <span style="color:#aaaaaa">/* ... */</span> }
}
</code></pre><h4 style="text-align:start"><strong>Stabilized APIs</strong></h4><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fstd%2Fnum%2Fstruct.Saturating.html" target="_blank"><code>core::num::Saturating</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fstd%2Fprocess%2Fstruct.Stdio.html%23impl-From%253CStdout%253E-for-Stdio" target="_blank"><code>impl From&lt;io::Stdout&gt; for std::process::Stdio</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fstd%2Fprocess%2Fstruct.Stdio.html%23impl-From%253CStderr%253E-for-Stdio" target="_blank"><code>impl From&lt;io::Stderr&gt; for std::process::Stdio</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fstd%2Fprocess%2Fstruct.Stdio.html%23impl-From%253CStderr%253E-for-Stdio" target="_blank"><code>impl From&lt;OwnedHandle&gt; for std::process::Child{Stdin, Stdout, Stderr}</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fstd%2Fprocess%2Fstruct.Stdio.html%23impl-From%253CStderr%253E-for-Stdio" target="_blank"><code>impl From&lt;OwnedFd&gt; for std::process::Child{Stdin, Stdout, Stderr}</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fstd%2Fffi%2Fstruct.OsString.html%23method.from_encoded_bytes_unchecked" target="_blank"><code>std::ffi::OsString::from_encoded_bytes_unchecked</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fstd%2Fffi%2Fstruct.OsString.html%23method.into_encoded_bytes" target="_blank"><code>std::ffi::OsString::into_encoded_bytes</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fstd%2Fffi%2Fstruct.OsStr.html%23method.from_encoded_bytes_unchecked" target="_blank"><code>std::ffi::OsStr::from_encoded_bytes_unchecked</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fstd%2Fffi%2Fstruct.OsStr.html%23method.as_encoded_bytes" target="_blank"><code>std::ffi::OsStr::as_encoded_bytes</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fstd%2Fio%2Fstruct.Error.html%23method.other" target="_blank"><code>std::io::Error::other</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fstd%2Fprimitive.u16.html%23impl-TryFrom%253Cchar%253E-for-u16" target="_blank"><code>impl TryFrom&lt;char&gt; for u16</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fstd%2Fvec%2Fstruct.Vec.html%23impl-From%253C%2526%255BT%3B%2BN%255D%253E-for-Vec%253CT%2C%2BGlobal%253E" target="_blank"><code>impl&lt;T: Clone, const N: usize&gt; From&lt;&amp;[T; N]&gt; for Vec&lt;T&gt;</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fstd%2Fvec%2Fstruct.Vec.html%23impl-From%253C%2526mut%2B%255BT%3B%2BN%255D%253E-for-Vec%253CT%2C%2BGlobal%253E" target="_blank"><code>impl&lt;T: Clone, const N: usize&gt; From&lt;&amp;mut [T; N]&gt; for Vec&lt;T&gt;</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fstd%2Fsync%2Fstruct.Arc.html%23impl-From%253C%255BT%3B%2BN%255D%253E-for-Arc%253C%255BT%255D%2C%2BGlobal%253E" target="_blank"><code>impl&lt;T, const N: usize&gt; From&lt;[T; N]&gt; for Arc&lt;[T]&gt;</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fstd%2Frc%2Fstruct.Rc.html%23impl-From%253C%255BT%3B%2BN%255D%253E-for-Rc%253C%255BT%255D%2C%2BGlobal%253E" target="_blank"><code>impl&lt;T, const N: usize&gt; From&lt;[T; N]&gt; for Rc&lt;[T]&gt;</code></a></li></ul><p style="text-align:start"><span style="color:#000000"><span style="background-color:#ffffff"><span style="color:#000000">这些 API 现在在 const contexts 中是稳定的：</span></span></span></p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fstd%2Fmem%2Ffn.transmute_copy.html" target="_blank"><code>core::mem::transmute_copy</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fstd%2Fprimitive.str.html%23method.is_ascii" target="_blank"><code>str::is_ascii</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fstd%2Fprimitive.slice.html%23method.is_ascii" target="_blank"><code>[u8]::is_ascii</code></a></li></ul><h4 style="text-align:start"><strong><span style="color:#000000"><span style="background-color:#ffffff">兼容性说明</span></span></strong></h4><ul><li>正如<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.rust-lang.org%2F2023%2F09%2F25%2FIncreasing-Apple-Version-Requirements.html" target="_blank">之前所宣布的</a>，Rust 1.74 提高了对 Apple 平台的要求。现在最低版本是： 
  <ul><li>macOS：10.12 Sierra（2016 年首次发布）</li><li>iOS：10（2016 年首次发布）、</li><li>tvOS：10（2016 年首次发布）</li></ul></li></ul><h4 style="text-align:start"><strong><span style="color:#000000"><span style="background-color:#ffffff">其他变化</span></span></strong></h4><p style="text-align:start"><span style="color:#000000"><span style="background-color:#ffffff">查看&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frust-lang%2Frust%2Freleases%2Ftag%2F1.74.0" target="_blank">Rust</a>、<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frust-lang%2Fcargo%2Fblob%2Fmaster%2FCHANGELOG.md%23cargo-174-2023-11-16" target="_blank">Cargo</a>&nbsp;和&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frust-lang%2Frust-clippy%2Fblob%2Fmaster%2FCHANGELOG.md%23rust-174" target="_blank">Clippy</a>&nbsp;中发生的所有变化。</span></span></p><p><span style="background-color:#ffffff"><span style="color:#333333">详情可</span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.rust-lang.org%2F2023%2F11%2F16%2FRust-1.74.0.html" target="_blank">查看官方公告</a><span style="background-color:#ffffff"><span style="color:#333333">。</span></span></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 16 Nov 2023 03:03:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266875/rust-1-74-0-released</guid>
            <link>https://www.oschina.net/news/266875/rust-1-74-0-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Spring Framework 6.1 正式 GA]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Spring Framework 6.1<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fspring.io%2Fblog%2F2023%2F11%2F16%2Fspring-framework-6-1-goes-ga" target="_blank"> 已正式发布</a></u>。</p><p><strong>主要变化</strong></p><ul><li>支持 JDK 21 LTS</li><li>支持虚拟线程</li><li>支持恢复 JVM Checkpoint</li><li>引入「资源生命周期管理」</li><li>引入「数据绑定和验证」</li><li>新增&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.spring.io%2Fspring-framework%2Fdocs%2F6.1.x%2Fjavadoc-api%2Forg%2Fspringframework%2Fweb%2Fclient%2FRestClient.html" target="_blank">RestClient</a>&nbsp;和&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.spring.io%2Fspring-framework%2Fdocs%2F6.1.x%2Fjavadoc-api%2Forg%2Fspringframework%2Fjdbc%2Fcore%2Fsimple%2FJdbcClient.html" target="_blank">JdbcClient</a>&nbsp;API</li></ul><p>公告写道，就 HotSpot JVM 上的高效部署选项而言，Spring Framework 6.1 与 Project CRaC 紧密集成以实现 JVM checkpoint 部署：查看&nbsp;<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.spring.io%2Fspring-framework%2Freference%2F6.1%2Fintegration%2Fcheckpoint-restore.html" target="_blank">JVM Checkpoint Restore</a></u>。此外，Spring 用户还可以采用 JDK 21 中最新的 AppCDS 功能，与 OpenJDK 的 Project Leyden 预先保持一致。</p><p>此外，Spring Framework 6.1 在运行时方面针对 JDK 21 和 Jakarta EE 10 上提供了一级支持，同时保留了 JDK 17 和 Jakarta EE 9 基线。Spring 还通过精细的元数据推理跟踪 GraalVM for JDK 21 的演变，同时暂时保持与 GraalVM 22.3 的兼容性。</p><hr><p>文档<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fspring-projects%2Fspring-framework%2Fwiki%2FWhat%2527s-New-in-Spring-Framework-6.x">显示</a>，Spring 6.1 已全面兼容虚拟线程 (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fspring-projects%2Fspring-framework%2Fissues%2F23443">Virtual Threads</a>) 和 JDK 21。</p><p><img alt="" src="https://static.oschina.net/uploads/space/2023/0817/140919_ppSy_2720166.png" referrerpolicy="no-referrer"></p><p>虚拟线程配置选项：专用的&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.spring.io%2Fspring-framework%2Fdocs%2F6.1.0-SNAPSHOT%2Fjavadoc-api%2Forg%2Fspringframework%2Fcore%2Ftask%2FVirtualThreadTaskExecutor.html">VirtualThreadTaskExecutor</a>&nbsp;和&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.spring.io%2Fspring-framework%2Fdocs%2F6.1.0-SNAPSHOT%2Fjavadoc-api%2Forg%2Fspringframework%2Fcore%2Ftask%2FSimpleAsyncTaskExecutor.html%23setVirtualThreads%28boolean%29">SimpleAsyncTaskExecutor 上的虚拟线程模式</a>，以及类似的具有 new-thread-per-task strategy 和虚拟线程模式的&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.spring.io%2Fspring-framework%2Fdocs%2F6.1.0-SNAPSHOT%2Fjavadoc-api%2Forg%2Fspringframework%2Fscheduling%2Fconcurrent%2FSimpleAsyncTaskScheduler.html">SimpleAsyncTaskScheduler</a>。</p><p>详情查看&nbsp;<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fspring-projects%2Fspring-framework%2Fwiki%2FWhat%27s-New-in-Spring-Framework-6.x" target="_blank">What's New 页面</a></u>。</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 16 Nov 2023 02:12:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266858/spring-framework-6-1-ga</guid>
            <link>https://www.oschina.net/news/266858/spring-framework-6-1-ga</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[🎉Solon v2.6 荣耀发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h2>先吹牛！</h2><p style="color:#24292e; text-align:start">在 v2.6 这个新的里程碑节点，Solon 又完成了几件惊天大事（每一件，都是经历了漫长时间打磨与积累）：</p><h4>（1）Solon Native，有了第一个开源案例：<a href="https://gitee.com/dromara/neutrino-proxy">dromara/neutrino-proxy</a><span>&nbsp;</span>（它是 2021 年起头的二级项目）</h4><p style="color:#24292e; text-align:start">Solon 估计是国内唯搞 AOT 和 Java 原生编译的。或许，这块的友商只能是 Micronaut、Quarkus 和 Spring Native。</p><h4>（2）99% 换血重构了：<span>&nbsp;</span><a href="https://gitee.com/noear/socketd">Socket.D 通讯应用协议</a><span>&nbsp;</span>（它是 Solon 的二级项目，已孵化两年）</h4><p style="color:#24292e; text-align:start">它是一种通讯应用协议，也是一个网络开发框架。未来， 必会成为各种网络开发场景的优选。开发 Mq, Im, Rpc 就跟玩似的。</p><h4>（3）重新设计了 Solon 的 WebSocket 接口标准</h4><p style="color:#24292e; text-align:start">这次的设计很专业、很纯血。未来 10 年，估计都不用再动了。动它，是下了很大决心的</p><h4>（4）封装了微 FaaS 引擎：<a href="https://gitee.com/noear/luffy">Luffy FaaS 引擎</a>（它也是 Solon 的二级项目，已孵化三年）</h4><p style="color:#24292e; text-align:start">随时可能更新代码，又不想重启的场景。可以考虑用它了<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsolon.noear.org%2Farticle%2F664" target="_blank">luffy-solon-plugin</a>。<span style="background-color:#f1c40f">官网将推出全新的学习频道：Solon Faas 开发</span>。</p><h4>（5）设定 Smart-Http 为 solon-api 的默认 http-server（它也打磨几年了）</h4><p style="color:#24292e; text-align:start">smart-http ？它可能是国内唯一完整支持 http 1.1 协议的原创 http-server。换它，国产纯血度大升级！</p><h2>Solon 是什么框架？</h2><p style="color:#24292e; text-align:start"><strong>Java 新的"生态级"应用开发框架</strong>。<span style="background-color:#f1c40f">从零开始构建，有自己的标准规范与开放生态</span>（历时五年，具备全球第二级别的生态规模）。Solon 生态的友商是 Spring 生态。Solon 的友商很强，所以很有意思。未来也将会在国际上照面。</p><h2>相对于 Spring，有什么特点？</h2><ul><li>启动快 5 ～ 10 倍。<span>&nbsp;</span><strong>（更快）</strong></li><li>qps 高 2～ 3 倍。<span>&nbsp;</span><strong>（更高）</strong></li><li>低流量内存节省 1/3 ~ 1/2。<span>&nbsp;</span><strong>（更少）</strong></li><li>打包可以缩小到 1/2 ~ 1/10；比如，300Mb 的变成了 23Mb。<span>&nbsp;</span><strong>（更小）</strong></li><li>同时支持 jdk8, jdk11, jdk17, jdk21,<span>&nbsp;</span><strong>graalvm native image</strong></li></ul><h2>入门探索视频（用户录制）：</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><iframe frameborder="0" height="400" scrolling="no" src="https://player.bilibili.com/player.html?aid=938467339&amp;bvid=BV1RT4y1a7U5&amp;cid=583394292&amp;page=1" style="box-sizing: border-box; font-size: 16px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; color: rgb(36, 41, 46); font-family: -apple-system, system-ui, &quot;Segoe UI&quot;, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; text-align: start; background-color: rgb(255, 255, 255);" width="700" referrerpolicy="no-referrer"></iframe></p><h2>最近更新了什么？</h2><ul><li><span style="background-color:#f1c40f">设定 smart-http 为 solon-api 快捷组合包的默认 http-server</span></li><li>重构 socketd 适配，升为 v2.0</li><li>重构 websocket 适配，升为 v2.0</li><li>新增 solon.net 模块用于定义网络接口，分离 websocket 与 socketd 的接口（分开后，用户层面更清爽）</li><li>新增 solon.boot.socketd 插件</li><li>新增 sa-token-dao-redisson-jackson 插件</li><li>添加 SolonApp::filterIfAbsent,routerInterceptorIfAbsent 接口</li><li>添加 AppContext::getBeansMapOfType 接口</li><li>添加 websocket context-path 过滤处理机制</li><li>添加<span>&nbsp;</span><code>@Cache</code><span>&nbsp;</span>缓存注解处理对动态开关的支持（之前，只能在启动时决定）</li><li>添加<span>&nbsp;</span><code>@Tran</code><span>&nbsp;</span>事务注解处理对动态开关的支持（之前，只能在启动时决定）</li><li>添加 solon.boot.smarthttp 外部优先级处理（成为默认后，要方便外部替换它）</li><li>调整 smart-http,jetty,undertow 统一使用 server.http.idleTimeout 配置</li><li>调整<span>&nbsp;</span><code>@ProxyComponent</code><span>&nbsp;</span>弃用提示为直接提示（之前为 debug 模式下）</li><li>移除 AopContext（完成更名 AppContext 的第二步动作）</li><li>移除 PathLimiter （已无用，留着有误导性）</li><li>移除 SolonApp::enableWebSocketD,enableWebSocketMvc,enableSocketMvc（已无用，留着有误导性）</li><li>优化 http context-path 过滤器处理机制</li><li>优化 solon.test 的<span>&nbsp;</span><code>@Rollback</code><span>&nbsp;</span>注解处理，支持 web 的事务控制</li><li>优化 solon.scheduling.simple 保持与 jdk 调度服务的策略一致</li><li>删除 socketd v1.0 相关的 10 多个插件（v2.0 独立仓库）</li><li>jackson 升为 2.15.2</li><li>pagehelper 升为 5.3.3</li><li>liteflow 升为 2.11.3</li><li>activemq 升为 5.16.7</li><li>redisx 升为 1.6.2</li><li>minio8 升为 8.5.3</li><li>sqltoy 升为 5.2.81</li><li>fastjson2 升为 2.0.42</li><li>luffy 升为 1.6.9</li><li>water 升为 2.12.0</li></ul><h2>项目仓库地址？</h2><ul><li>gitee：<a href="https://gitee.com/noear/solon">https://gitee.com/noear/solon</a></li><li>github：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnoear%2Fsolon" target="_blank">https://github.com/noear/solon</a></li></ul><p>&nbsp;</p><p>&nbsp;</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 16 Nov 2023 00:56:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266845/solon-2-6-released</guid>
            <link>https://www.oschina.net/news/266845/solon-2-6-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[RXThinkCMF 敏捷开发框架 ThinkPhp8+AntdVue 版本 v2.0.0 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff; color:#333333">v2.0.0 更新内容：</span><br><span style="background-color:#ffffff; color:#333333">1、新增日志操作日志功能；</span><br><span style="background-color:#ffffff; color:#333333">2、新增网站配置管理功能；</span><br><span style="background-color:#ffffff; color:#333333">3、新增生成器模板引擎；</span><br><span style="background-color:#ffffff; color:#333333">4、新增生成器一键生成功能；</span><br><span style="background-color:#ffffff; color:#333333">5、新增广告富文本图片存储功能；</span><br><span style="background-color:#ffffff; color:#333333">6、新增通知公告富文本图片存储功能；</span><br><span style="background-color:#ffffff; color:#333333">7、修复近期用户反馈的问题；</span></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">一款 PHP 语言基于 ThinkPhp8.x、Vue3、AntDesign、MySQL 等框架精心打造的一款模块化、插件化、高性能的前后端分离架构敏捷开发框架，可用于快速搭建前后端分离后台管理系统，本着简化开发、提升开发效率的初衷，框架自研了一套个性化的组件，实现了可插拔的组件式开发方式：单图上传、多图上传、下拉选择、开关按钮、单选按钮、多选按钮、图片裁剪等等一系列个性化、轻量级的组件，是一款真正意义上实现组件化开发的敏捷开发框架，框架已集成了完整的 RBAC 权限架构和常规基础模块，同时支持多主题切换，可以根据自己喜欢的风格选择想一个的主题，实现了个性化呈现的需求；为了敏捷快速开发，提升研发效率，框架内置了一键 CRUD 代码生成器，自定义了模块生成模板，可以根据已建好的表结构 (字段注释需规范) 快速的一键生成整个模块的所有代码和增删改查等等功能业务，真正实现了低代码开发，极大的节省了人力成本的同时提高了开发效率，缩短了研发周期，是一款真正意义上实现组件化、低代码敏捷开发框架。</p><h2>内置模块</h2><ul><li>用户管理：用于维护管理系统的用户，常规信息的维护与账号设置。</li><li>角色管理：角色菜单管理与权限分配、设置角色所拥有的菜单权限。</li><li>菜单管理：配置系统菜单，操作权限，按钮权限标识等。</li><li>职级管理：主要管理用户担任的职级。</li><li>岗位管理：主要管理用户担任的岗位。</li><li>部门管理：主要管理系统组织架构，对组织架构进行统一管理维护。</li><li>操作日志：系统正常操作日志记录和查询；系统异常信息日志记录和查询。</li><li>登录日志：系统登录日志记录查询包含登录异常。</li><li>字典管理：对系统中常用的较为固定的数据进行统一维护。</li><li>配置管理：对系统的常规配置信息进行维护，网站配置管理功能进行统一维护。</li><li>城市管理：统一对全国行政区划进行维护，对其他模块提供行政区划数据支撑。</li><li>友链管理：对系统友情链接、合作伙伴等相关外链进行集成维护管理的模块。</li><li>个人中心：主要是对当前登录用户的个人信息进行便捷修改的功能。</li><li>广告管理：主要对各终端的广告数据进行管理维护。</li><li>站点栏目：主要对大型系统网站等栏目进行划分和维护的模块。</li><li>会员管理：对各终端注册的会员进行统一的查询与管理的模块。</li><li>网站配置：对配置管理模块的数据源动态解析与统一维护管理的模块。</li><li>通知公告：系统通知公告信息发布维护。</li><li>代码生成：一键生成模块 CRUD 的功能，包括后端和前端等相关代码。</li><li>案例演示：常规代码生成器一键生成后的演示案例。</li></ul><h2>软件信息</h2><ul><li>软件名称：RXThinkCMF 敏捷开发框架 ThinkPhp8.x+AntdVue 版本</li><li>官网网址：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.rxthink.cn" target="_blank">https://www.rxthink.cn</a></li><li>文档网址：<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fdocs.thinkphp8.antdvue.rxthink.cn" target="_blank">http://docs.thinkphp8.antdvue.rxthink.cn</a></li><li>演示地址：<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmanage.thinkphp8.antdvue.rxthink.cn" target="_blank">http://manage.thinkphp8.antdvue.rxthink.cn</a></li></ul><h2>版本说明</h2><table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:0px; box-sizing:border-box; color:#40485b; display:block; font-family:-apple-system,BlinkMacSystemFont,&quot;Segoe UI&quot;,Helvetica,Arial,&quot;Apple Color Emoji&quot;,&quot;Segoe UI Emoji&quot;,&quot;Segoe UI Symbol&quot;,&quot;Liberation Sans&quot;,&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,&quot;Hiragino Sans GB&quot;,&quot;Wenquanyi Micro Hei&quot;,&quot;WenQuanYi Zen Hei&quot;,&quot;ST Heiti&quot;,SimHei,SimSun,&quot;WenQuanYi Zen Hei Sharp&quot;,sans-serif; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; margin-bottom:16px; margin-top:0px; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:635px; word-break:initial; word-spacing:0px"><tbody><tr><th>版本名称</th><th>版本说明</th><th>版本地址</th></tr></tbody><tbody><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">ThinkPhp3.2+Layui 混编版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 ThinkPhp3.2、Layui、MySQL 等框架研发的混编专业版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp3.2_Layui">https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp3.2_Layui</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">ThinkPhp5.1+Layui 混编版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 ThinkPhp5.1、Layui、MySQL 等框架研发的混编专业版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp5.1_Layui">https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp5.1_Layui</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">ThinkPhp6.x+Layui 混编版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 ThinkPhp6、Layui、MySQL 等框架研发的混编专业版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp6_Layui">https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp6_Layui</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">ThinkPhp8.x+Layui 混编版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 ThinkPhp8、Layui、MySQL 等框架研发的混编专业版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp8_Layui">https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp8_Layui</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Laravel8.x+Layui 混编版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 Laravel8、Layui、MySQL 等框架研发的混编专业版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/rxthinkcmf/RXThinkCMF_laravel8_Layui">https://gitee.com/rxthinkcmf/RXThinkCMF_laravel8_Layui</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Laravel9.x+Layui 混编版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 Laravel9、Layui、MySQL 等框架研发的混编专业版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/rxthinkcmf/RXThinkCMF_Laravel9_Layui">https://gitee.com/rxthinkcmf/RXThinkCMF_Laravel9_Layui</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Laravel10.x+Layui 混编版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 Laravel10、Layui、MySQL 等框架研发的混编专业版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/rxthinkcmf/RXThinkCMF_Laravel10_Layui">https://gitee.com/rxthinkcmf/RXThinkCMF_Laravel10_Layui</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">ThinkPhp3.2+EleVue 前后端分离版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 ThinkPhp3.2、Vue2.x、ElementUI 等框架研发前后端分离版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp3.2_EleVue">https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp3.2_EleVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">ThinkPhp3.2+AntdVue 前后端分离版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 ThinkPhp3.2、Vue3.x、AntDesign 等框架研发前后端分离版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp3.2_AntdVue">https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp3.2_AntdVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">ThinkPhp5.1+EleVue 前后端分离版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 ThinkPhp5.1、Vue2.x、ElementUI 等框架研发前后端分离版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp5.1_EleVue">https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp5.1_EleVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">ThinkPhp5.1+AntdVue 前后端分离版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 ThinkPhp5.1、Vue2.x、AntDesign 等框架研发前后端分离版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp5.1_AntdVue">https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp5.1_AntdVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">ThinkPhp6.x+EleVue 前后端分离版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 ThinkPhp6、Vue2.x、ElementUI 等框架研发前后端分离版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp6_EleVue">https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp6_EleVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">ThinkPhp6.x+AntdVue 前后端分离版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 ThinkPhp6、Vue3.x、AntDesign 等框架研发前后端分离版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp6_AntdVue">https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp6_AntdVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">ThinkPhp8.x+EleVue 前后端分离版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 ThinkPhp8、Vue2.x、ElementUI 等框架研发前后端分离版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp8_EleVue">https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp8_EleVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">ThinkPhp8.x+AntdVue 前后端分离版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 ThinkPhp8、Vue3.x、AntDesign 等框架研发前后端分离版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp8_AntdVue">https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp8_AntdVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Laravel8.x+EleVue 前后端分离版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 Laravel8、Vue2.x、ElementUI 等框架研发前后端分离版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/rxthinkcmf/RXThinkCMF_Laravel8_EleVue">https://gitee.com/rxthinkcmf/RXThinkCMF_Laravel8_EleVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Laravel8.x+AntdVue 前后端分离版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 Laravel8、Vue3.x、AntDesign 等框架研发前后端分离版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/rxthinkcmf/RXThinkCMF_Laravel8_AntdVue">https://gitee.com/rxthinkcmf/RXThinkCMF_Laravel8_AntdVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Laravel9.x+EleVue 前后端分离版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 Laravel9、Vue2.x、ElementUI 等框架研发前后端分离版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/rxthinkcmf/RXThinkCMF_Laravel9_EleVue">https://gitee.com/rxthinkcmf/RXThinkCMF_Laravel9_EleVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Laravel9.x+AntdVue 前后端分离版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 Laravel9、Vue3.x、AntDesign 等框架研发前后端分离版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/rxthinkcmf/RXThinkCMF_Laravel9_AntdVue">https://gitee.com/rxthinkcmf/RXThinkCMF_Laravel9_AntdVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Laravel10.x+EleVue 前后端分离版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 Laravel10、Vue2.x、ElementUI 等框架研发前后端分离版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/rxthinkcmf/RXThinkCMF_Laravel10_EleVue">https://gitee.com/rxthinkcmf/RXThinkCMF_Laravel10_EleVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Laravel10.x+AntdVue 前后端分离版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 Laravel10、Vue3.x、AntDesign 等框架研发前后端分离版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/rxthinkcmf/RXThinkCMF_Laravel10_AntdVue">https://gitee.com/rxthinkcmf/RXThinkCMF_Laravel10_AntdVue</a></td></tr></tbody></table><h2>模块展示</h2><p><img alt="" height="1080" src="https://oscimg.oschina.net/oscnet/up-7ecd65f6bc08a0f001503fdf427e89cbf6e.png" width="1920" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 16 Nov 2023 00:52:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266844</guid>
            <link>https://www.oschina.net/news/266844</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[MT-AUTH v1.18.0 发布，多租户权限系统]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h1>更新日志</h1><h2>mt-ui</h2><ul><li>重新设计 Permission</li><li>重新设计 Role</li></ul><h1><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fpublicdevop2019%2Fmt-auth%2Fprojects%2F19" target="_blank">更多详情</a></h1><p style="color:#e6edf3; margin-left:0; margin-right:0; text-align:left">&nbsp;</p><p style="color:#e6edf3; margin-left:0; margin-right:0; text-align:left"><span style="color:#000000"><strong>MT-AUTH 是一款多租户权限管理系统，包含用户管理与 API 路由、共享、鉴权、缓存、跨域、安全防护等功能</strong></span></p><h1><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fpublicdevop2019%2Fmt-auth%2Ftree%2Fmain%23%25E5%25BA%2594%25E7%2594%25A8%25E5%259C%25BA%25E6%2599%25AF" target="_blank"><span style="color:#000000">应用场景</span></a></h1><p style="color:#e6edf3; margin-left:0; margin-right:0; text-align:start"><span style="color:#000000">对于个人开发者，您可以：</span></p><ul><li><span style="color:#000000">无需从零构建用户相关功能，例如：用户注册，忘记密码找回等</span></li><li><span style="color:#000000">轻松使用现成的权限管理模式（RBAC），更加专注于业务需求</span></li><li><span style="color:#000000">快速与您的应用集成单点登录（SSO）</span></li><li><span style="color:#000000">一站式管理应用，API，用户</span></li><li><span style="color:#000000">享受 API 级别的鉴权，缓存，跨域，限流，安全控制</span></li><li><span style="color:#000000">通过 API 市场分享或订阅其它 API</span></li></ul><p style="color:#e6edf3; margin-left:0; margin-right:0; text-align:start"><span style="color:#000000">对于企业，如果您：</span></p><ul><li><span style="color:#000000">项目之间用户通用，需要统一管理</span></li><li><span style="color:#000000">项目由不同的团队管理，团队相对独立</span></li><li><span style="color:#000000">用户在不同项目中有不同权限</span></li><li><span style="color:#000000">统一管理项目、应用与 API</span></li><li><span style="color:#000000">项目之间需要共享 API</span></li></ul><h1><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fpublicdevop2019%2Fmt-auth%2Ftree%2Fmain%23%25E4%25BA%2591%25E7%2589%2588%25E6%259C%25AC" target="_blank"><span style="color:#000000">云版本</span></a></h1><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.letsauth.cloud%2Flogin" target="_blank">官方地址 (www.letsauth.cloud)</a></li><li><span style="color:#000000">演示账号：</span><a href="https://www.oschina.net/action/GoToLink?url=mailto%3Ademo%40sample.com" target="_blank"><span style="color:#000000">demo@sample.com</span></a><span style="color:#000000">&nbsp;密：Password1!</span></li><li><span style="color:#000000">演示账号：</span><a href="https://www.oschina.net/action/GoToLink?url=mailto%3Aadmin%40sample.com" target="_blank"><span style="color:#000000">admin@sample.com</span></a><span style="color:#000000">&nbsp;密：Password1!</span></li><li><span style="color:#000000">演示账号：</span><a href="https://www.oschina.net/action/GoToLink?url=mailto%3Auser1%40sample.com" target="_blank"><span style="color:#000000">user1@sample.com</span></a><span style="color:#000000">&nbsp;密：Password1!</span></li><li><span style="color:#000000"><strong>注：当前版本为 beta 版，不保证数据安全并且随时回滚</strong></span></li></ul><h1><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fpublicdevop2019%2Fmt-auth%2Ftree%2Fmain%23%25E7%25A4%25BA%25E6%2584%258F%25E5%259B%25BE" target="_blank"><span style="color:#000000">示意图</span></a></h1><p style="color:#e6edf3; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><h1><img alt="" height="440" src="https://oscimg.oschina.net/oscnet/up-340644b27fece1bd183c7978e86bc25af6a.jpg" width="500" referrerpolicy="no-referrer"></h1><p style="color:#e6edf3; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><h1><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fpublicdevop2019%2Fmt-auth%2Ftree%2Fmain%23%25E9%25A1%25B9%25E7%259B%25AE%25E7%2589%25B9%25E7%2582%25B9" target="_blank"><span style="color:#000000">项目特点</span></a></h1><ul><li><span style="color:#000000">事件驱动</span></li><li><span style="color:#000000">基于角色的权限控制 (RBAC)</span></li><li><span style="color:#000000">多租户</span></li><li><span style="color:#000000">不对称密匙</span></li><li><span style="color:#000000">OAuth2</span></li><li><span style="color:#000000">站内信，短信，邮件通知</span></li><li><span style="color:#000000">用户密码重置，注册码注册</span></li><li><span style="color:#000000">已签发 JWT 回收</span></li><li><span style="color:#000000">API 路由、缓存、跨域 CORS、CSRF 防护、压缩、隐藏系统错误信息</span></li><li><span style="color:#000000">API 记录与分析</span></li><li><span style="color:#000000">多因素认证 (MFA)</span></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Wed, 15 Nov 2023 13:55:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266819</guid>
            <link>https://www.oschina.net/news/266819</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[BootstrapBlazor v8.0.0 已经发布，Bootstrap 样式的 Blazor UI 组件库]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>BootstrapBlazor v8.0.0 已经发布，Bootstrap 样式的 Blazor UI 组件库</p><p>此版本更新内容包括：</p><h2>Release 2023-11-16 V8.0.0</h2><h3>What's Changed</h3><ul><li>fix(Table): 修复单元格内溢出文本 <code>Tooltip</code> 未居中问题 by @ArgoZhang in <a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F2307" target="_blank">https://github.com/dotnetcore/BootstrapBlazor/pull/2307</a></li><li>fix(ValidateForm): 修复 <code>OnValidSubmit</code> 在 <code>ValidateAsync</code> 前执行问题 by @ArgoZhang in <a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F2311" target="_blank">https://github.com/dotnetcore/BootstrapBlazor/pull/2311</a></li><li>fix(Markdown): 修复缺失中文包问题 by @ArgoZhang in <a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F2332" target="_blank">https://github.com/dotnetcore/BootstrapBlazor/pull/2332</a></li><li>fix(Table): 修复鼠标调整列宽时未触发 <code>OnResizeColumnAsync</code> 回调问题 by @ArgoZhang in <a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F2351" target="_blank">https://github.com/dotnetcore/BootstrapBlazor/pull/2351</a></li><li>fix(ValidateForm): 修复异步验证未等待问题 by @ArgoZhang in <a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F2355" target="_blank">https://github.com/dotnetcore/BootstrapBlazor/pull/2355</a></li><li>fix(Table): 修复使用动态数据类型作为数据源时无法调整列宽问题 by @ArgoZhang in <a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F2367" target="_blank">https://github.com/dotnetcore/BootstrapBlazor/pull/2367</a></li><li>feat(Select): 增加参数 <code>ClearSearchText</code> 用于自定义清空提示字 by @ArgoZhang in <a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F2306" target="_blank">https://github.com/dotnetcore/BootstrapBlazor/pull/2306</a></li><li>feat(Table): 增加 <code>GetAdvancedSearchFilterCallback</code> 回调方法 by @ArgoZhang in <a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F2309" target="_blank">https://github.com/dotnetcore/BootstrapBlazor/pull/2309</a></li><li>chore(NET8): 更新框架支持 <code>net8.0</code> by @ArgoZhang in <a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F2371" target="_blank">https://github.com/dotnetcore/BootstrapBlazor/pull/2371</a></li></ul><p><strong>Full Changelog</strong>: <a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fcompare%2Fv7.12.0...v8.0.0" target="_blank">https://github.com/dotnetcore/BootstrapBlazor/compare/v7.12.0...v8.0.0</a></p><p>详情查看：<a href="https://gitee.com/LongbowEnterprise/BootstrapBlazor/releases/v8.0.0">https://gitee.com/LongbowEnterprise/BootstrapBlazor/releases/v8.0.0</a></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 15 Nov 2023 09:02:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266774/bootstrapblazor-8-0-0-released</guid>
            <link>https://www.oschina.net/news/266774/bootstrapblazor-8-0-0-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[MCMS 5.3.5 已经发布，铭飞内容管理系统]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>MCMS 5.3.5 已经发布，铭飞内容管理系统</p><p>此版本更新内容包括：</p><ul><li>【新增】自定义业务数据 ID 增加雪花 ID 支持</li><li>【新增】自定义模型增加代码生成器结构</li><li>【新增】XSS 支持地址参数的配置方式</li><li>【优化】搜索功能优化</li><li>【优化】默认模板优化</li><li>【优化】标签功能优化</li><li>【修复】具体参考开源中国与 GitHub 的 ISSUES <a href="https://gitee.com/mingSoft/MCMS/issues" target="_blank">https://gitee.com/mingSoft/MCMS/issues</a></li></ul><p>详情查看：<a href="https://gitee.com/mingSoft/MCMS/releases/5.3.5">https://gitee.com/mingSoft/MCMS/releases/5.3.5</a></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 15 Nov 2023 07:50:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266754/ms-cms-5-3-5-released</guid>
            <link>https://www.oschina.net/news/266754/ms-cms-5-3-5-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Rust 通用代码生成器莲花发布深度修复版红莲尝鲜版十七介绍视频]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Rust 通用代码生成器莲花发布深度修复版红莲尝鲜版十七介绍视频</p><p>Rust 通用代码生成器莲花已发布深度修复版红莲尝鲜版十七介绍视频。欢迎使用。视频请见：<br><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1rQ4y1t7qJ%2F" target="_blank">https://www.bilibili.com/video/BV1rQ4y1t7qJ/</a></p><p>Rust 通用代码生成器莲花发布深度修复版红莲尝鲜版十七。修复规范了下拉列表的空值，并修复了高级定制功能群，自动生成差异版本功能群，动词否定功能群和字段否定功能群里的一系列缺陷，并有其他缺陷修复。此版本支持 MariaDB，MySQL，PostgreSQL 和 Oracle 四种数据库。此版本支持枚举和 datadummy 模式。请部署在 Tomcat9 的 webapps 目录下。</p><p>老一点的参考视频：</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1Mw411x7FP%2F" target="_blank">https://www.bilibili.com/video/BV1Mw411x7FP/</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1Pw411X7h5%2F" target="_blank">https://www.bilibili.com/video/BV1Pw411X7h5/</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1VC4y1Z7KF%2F" target="_blank">https://www.bilibili.com/video/BV1VC4y1Z7KF/</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1Fz4y1F7jf%2F" target="_blank">https://www.bilibili.com/video/BV1Fz4y1F7jf/</a></p><p>红莲尝鲜版十七支持枚举，即常量表，不可以修改，通过初始化数据构建，内存数据模式。用枚举，只需将其页签设置为 Enum 起头即可，其他设置和 Domain 完全相同，生成的枚举只包含读取功能。注意，登录模块的 User,Role 和 Privilege 都不可以设置为枚举。红莲尝鲜版十六优化了模块结构，main.rs 只包含入口点和最低限度的其他程序，其他模块都放在 lib.rs 里，前端代码生成器的默认图片位置改到 static 目录下，方便 vue 前端的构建。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">代码生成器的项目地址：<a href="https://gitee.com/jerryshensjf/Lotus">https://gitee.com/jerryshensjf/Lotus</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">二进制 war 包的下载地址:<span>&nbsp;</span><a href="https://gitee.com/jerryshensjf/Lotus/attach_files">https://gitee.com/jerryshensjf/Lotus/attach_files</a></p><h1>Rust 通用代码生成器：莲花</h1><h3>介绍</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Rust 通用代码生成器：莲花</p><h3>软件架构说明</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">软件使用 Java 写成，部署在 Tomcat 9 的 webapps 目录中。目前的版本采用 openjdk 17 编译。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">本软件是从 Go 语言通用代码生成器：仙童改写而来。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">代码生成物是 rust 1.69 环境。采用 Axum 0.6.20, tokio 1.32.0 , sqlx 0.7.1 数据库访问层和 MariaDB, MySQL 8，PostgreSQL 数据库。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Rust 通用代码生成器莲花尝鲜版十七。此版本是深度修复版，修复规范了下拉列表的空值。前端项目和后端项目经过了更严密的测试。此版本支持 MariaDB，MySQL，PostgreSQL 和 Oracle 四种数据库。此版本支持枚举和 datadummy 模式。请部署在 Tomcat9 的 webapps 目录下。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Rust 通用代码生成器莲花尝鲜版十六。此版本是深度修复版，修复了高级定制功能群，自动生成差异版本功能群，动词否定功能群和字段否定功能群里的一系列缺陷，并有其他缺陷修复。此版本支持 MariaDB，MySQL，PostgreSQL 和 Oracle 四种数据库。此版本支持枚举和 datadummy 模式。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Rust 通用代码生成器莲花尝鲜版十五。此版本是测试修复版，没有新功能，修复了尝鲜版十四的 DataDummy 功能。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Rust 通用代码生成器莲花尝鲜版十四。此版本是测试修复版，没有新功能，都是尝鲜版十二的功能，但有错误修复。修复 Oracle 数据库，datadummy 模式和枚举。此版本支持 MariaDB，MySQL，PostgreSQL 和 Oracle 四种数据库。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Rust 通用代码生成器莲花尝鲜版十二。此版本支持 Oracle 数据库。此版本支持 MariaDB，MySQL，PostgreSQL 和 Oracle 四种数据库。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Rust 通用代码生成器莲花尝鲜版十一。此版本是一个修复增强版本，此版本完善了 DataDummy 模式，并完善了枚举的使用。并修复了数据库模式的脚本缺陷。暂不支持 Oracle 数据库。欢迎使用纯内存数据模式的原型功能，此功能为售前和产品经理开发，欢迎使用。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Rust 通用代码生成器莲花尝鲜版十。此版本支持 DataDummy 模式，即纯内存数据模式的原型功能，为售前和产品经理开发。支持枚举，优化了模块结构，main.rs 只包含入口点和最低限度的其他程序，其他模块都放在 lib.rs 里，前端代码生成器的默认图片位置改到 static 目录下，方便 vue 前端的构建。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Rust 通用代码生成器莲花尝鲜版九。此版本更新 Axum 至最新版 0.6.20,改进了前端登录失败的错误提示，去除了后端运行时在控制枱上输出的调试信息。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Rust 通用代码生成器莲花尝鲜版八已发布。此版本更新 JQuery EasyUI 至最新版 1.10.17。此版本解决了编译警告问题。支持日期与日期时间的空值。修复了尝鲜版七过度更新引起的后端编辑不支持更新图片的缺陷。和其他一些缺陷。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Rust 通用代码生成器莲花已发布红莲尝鲜版七，这是迄今为止最重要的里程碑。最重要的更新是数据库访问框架从 0.3.5 大幅更新至 0.7.1 最新版。这是一个重大的更新，尝试了几次才顺利完成了这个规划了很久的更新。第二个更新是消除了代码生成物上 90% 的编译警告，大幅改善了代码生成物的代码质量。而后通过更多的测试，修复了一系列缺陷。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Rust 通用代码生成器莲花尝鲜版六。此版本支持日期与日期时间，支持三大部分生成功能群。支持自动登录模块，支持修改自己的资料和登陆密码。修复了尝鲜版五的克隆和批克隆出错问题，修复了尝鲜版五编辑用户会导致密码失效问题。和其他一些缺陷。暂不支持 Oracle 数据库，暂不支持空值。功能对标 java 通用代码生成器光电音之王版本。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Rust 通用代码生成器莲花尝鲜版 5。此版本是第一个功能完整的可用版本，支持自动登录模块，支持 Axum 最新版 0.6.18,彻底改进了数据库访问层，解决了每次查询新建一个数据库链接，以致只能查询 10 余次的重大缺陷，经过更多测试，此版本支持 MariaDB,MySQL 和 PostgreSQL 数据库。支持所附全部非 Oracle 示例。本版本的功能和质量均达到可用水平。 尝鲜版 4。通过编程和测试，终于彻底修复了莲花生成的 Vue 前端。现在，前端和后端可以顺畅的工作，没有任何障碍了。莲花尝鲜版 4 除了弹性登录模块和 Oracle 数据库的功能外，其他功能都已完备。大家已经可以试用了。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">莲花尝鲜版 3 升级 Axum 至 0.6.6,并消除 2/3 的编译警告。后续版本有可能将 Axum 重新降级至 0.4。Axum0.6 的粉丝请使用此版本。您可以使用所附非 Oracle 示例测试系统，可以得到可以运行的代码生成物。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">此版本支持 Go 语言兼容性，即 Go 语言通用代码生成器仙童的模板直接生成 Rust 代码生成物。也支持 Java 兼容性，即支持 java 通用代码生成器光，和平之翼代码生成器，无垠式代码生成器的 Excel 模板直接生成 Rust 代码生成物。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版 4 支持 Excel,PDF 数据导出。支持 Vue，ElementUI 的独立前端。支持 MySQL，MariaDB 和 PostgreSQL 数据库。支持图片功能。支持所附全部非 Oracle 示例。欢迎试用。</p><h3>百度话题</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">＃通用代码生成器＃</p><h3>介绍视频</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版十七的视频请见：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1rQ4y1t7qJ%2F">https://www.bilibili.com/video/BV1rQ4y1t7qJ/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版十六的视频请见：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1Mw411x7FP%2F">https://www.bilibili.com/video/BV1Mw411x7FP/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版十五的视频请见：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1Pw411X7h5%2F">https://www.bilibili.com/video/BV1Pw411X7h5/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1VC4y1Z7KF%2F">https://www.bilibili.com/video/BV1VC4y1Z7KF/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版十四的视频请见：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1Fz4y1F7jf%2F">https://www.bilibili.com/video/BV1Fz4y1F7jf/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版十二的介绍视频请见：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1MH4y1U7A1%2F">https://www.bilibili.com/video/BV1MH4y1U7A1/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版十一的介绍视频请见：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1Qm4y1V77Q%2F">https://www.bilibili.com/video/BV1Qm4y1V77Q/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1Ez4y157k2%2F">https://www.bilibili.com/video/BV1Ez4y157k2/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版十的介绍视频请见：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1Fh4y1P7xF%2F">https://www.bilibili.com/video/BV1Fh4y1P7xF/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版九的介绍视频请见：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1Hp4y1E7T2%2F">https://www.bilibili.com/video/BV1Hp4y1E7T2/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版八介绍视频请见：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1qG411f7io%2F">https://www.bilibili.com/video/BV1qG411f7io/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1yV4y1Y7pM%2F">https://www.bilibili.com/video/BV1yV4y1Y7pM/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版七介绍视频请见：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1Kz4y1W7eH%2F">https://www.bilibili.com/video/BV1Kz4y1W7eH/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版六介绍视频请见：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1Cj41197nY%2F">https://www.bilibili.com/video/BV1Cj41197nY/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版五介绍视频请见：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1Cg4y1574C%2F">https://www.bilibili.com/video/BV1Cg4y1574C/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Rust 通用代码生成器莲花尝鲜版 4 发布介绍视频，从源码开始构建 Rust 通用代码生成器莲花。并生成一个例程的前后端并演示运行。 视频请见：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV11N411c7H6%2F">https://www.bilibili.com/video/BV11N411c7H6/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版 3</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1co4y1a7Ca%2F">https://www.bilibili.com/video/BV1co4y1a7Ca/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版 2</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1aj411N7YB%2F">https://www.bilibili.com/video/BV1aj411N7YB/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">冒烟测试版 4</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1jy4y1R79h%2F">https://www.bilibili.com/video/BV1jy4y1R79h/</a></p><h3>尝鲜版十七下载</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/jerryshensjf/Lotus/attach_files">https://gitee.com/jerryshensjf/Lotus/attach_files</a></p><h3>项目图片</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="输入图片说明" src="https://gitee.com/jerryshensjf/Lotus/raw/master/RedLotus.jpg" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="输入图片说明" src="https://gitee.com/jerryshensjf/Lotus/raw/master/pl_3.jpeg" referrerpolicy="no-referrer"></p><h3>软件截屏</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="输入图片说明" src="https://gitee.com/jerryshensjf/Lotus/raw/master/lotus_excelg.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="输入图片说明" src="https://gitee.com/jerryshensjf/Lotus/raw/master/lotus_wizard.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="输入图片说明" src="https://gitee.com/jerryshensjf/Lotus/raw/master/Lotus_compare2.png" referrerpolicy="no-referrer"></p><h3>代码生成物截屏</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">日期时间对话框<span>&nbsp;</span><img alt="输入图片说明" src="https://gitee.com/jerryshensjf/Lotus/raw/master/datetime.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">单表操作</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="输入图片说明" src="https://gitee.com/jerryshensjf/Lotus/raw/master/lotus_grid.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">多对多</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="输入图片说明" src="https://gitee.com/jerryshensjf/Lotus/raw/master/rust_mtm.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">复杂版面，树表</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="输入图片说明" src="https://gitee.com/jerryshensjf/Lotus/raw/master/lotus_treegrid.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">图形报表</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="输入图片说明" src="https://gitee.com/jerryshensjf/Lotus/raw/master/lotus_echarts.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">图片功能</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="输入图片说明" src="https://gitee.com/jerryshensjf/Lotus/raw/master/lotus_pic.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Excel 数据导出</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="输入图片说明" src="https://gitee.com/jerryshensjf/Lotus/raw/master/Lotus_excel_export.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">PDF 数据导出</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="输入图片说明" src="https://gitee.com/jerryshensjf/Lotus/raw/master/Lotus_pdf_export.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Vue 前端日期对话框</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="输入图片说明" src="https://gitee.com/jerryshensjf/Lotus/raw/master/front_date.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Vue 独立前端，登录界面</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="输入图片说明" src="https://gitee.com/jerryshensjf/Lotus/raw/master/Lotus_frontend_login.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Vue 独立前端，内页</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="输入图片说明" src="https://gitee.com/jerryshensjf/Lotus/raw/master/Lotus_frontend_inner.png" referrerpolicy="no-referrer"></p><h3>源码编译用户指南</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">通用代码生成器已经支持自己编译源码，我已把原来缺的前端代码生成器的 jar 包上传。支持大家自行编译源码。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">需要注意的是，现在我的开发平台是 Fedora 37 上的 openjdk 17。所以大家编译源码最好使用 openjdk17。编译好的 war 包运行在 apache tomcat 9.0 上。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">已有 jdk8 的用户报告默认下载的代码生成器 war 包在他的平台上无法运行。您如果遇到类似问题请报告。我的电子邮件是：<a href="https://www.oschina.net/action/GoToLink?url=mailto%3Ajerry_shen_sjf%40qq.com" target="_blank">jerry_shen_sjf@qq.com</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">附 openjdk 17 下载地址：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fjdk.java.net%2Fjava-se-ri%2F17">https://jdk.java.net/java-se-ri/17</a></p><h3>源码研读者注意事项</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">无垠式代码生成器第一个完整版本源码，有兴趣可以抄写一下：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/jerryshensjf/InfinityGPGenerator_0_6_5">https://gitee.com/jerryshensjf/InfinityGPGenerator_0_6_5</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">相关技术视频：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1fX4y1u7Bn%2F">https://www.bilibili.com/video/BV1fX4y1u7Bn/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1rv41187qY%2F">https://www.bilibili.com/video/BV1rv41187qY/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1xv41187cA%2F">https://www.bilibili.com/video/BV1xv41187cA/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1t64y1v7WA%2F">https://www.bilibili.com/video/BV1t64y1v7WA/</a></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 15 Nov 2023 07:30:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266749</guid>
            <link>https://www.oschina.net/news/266749</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[前端开源项目 Fes- Design Release v0.8.16 & v0.8.15 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">FES-Design 是由微众银行前端技术团队联合用户体验设计团队共同打造的一款服务于中后台系统的组件库，其初衷是为了给中后台系统开发者提供一个好用的前端应用解决方案，前端技术团队始终以 「快速、简单、稳定」 为核心理念，推动 FES-Design 的成长，FES-Design 的设计体系目前还在不断的探索中，希望今后能够通过更多的积累为用户提供一款更优秀更专业的企业级产品设计体系。</p><p>v0.8.16 更新内容如下：</p><h4><strong>Features</strong></h4><ul><li>新增日历组件 (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FWeBankFinTech%2Ffes-design%2Fissues%2F509" target="_blank">#509</a>) (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FWeBankFinTech%2Ffes-design%2Fcommit%2Ff890b05993e99ffedfb4063bf896320b02f3c2d9" target="_blank">f890b05</a>)</li><li><strong>Cascader:</strong><span>&nbsp;</span>支持本地数据项搜索 (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FWeBankFinTech%2Ffes-design%2Fissues%2F511" target="_blank">#511</a>) (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FWeBankFinTech%2Ffes-design%2Fcommit%2F4993058c8a89fe15abff11a66b0bfe48f9654965" target="_blank">4993058</a>)</li></ul><p>v0.8.15 更新内容如下：</p><h4 style="margin-left:0px; margin-right:0px; text-align:start"><strong>Bug Fixes</strong></h4><ul style="list-style-type:disc; margin-left:0; margin-right:0"><li>checkbox 和 radio 支持 option 为 null &amp; option 类型修复 (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FWeBankFinTech%2Ffes-design%2Fissues%2F510" target="_blank">#510</a>) (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FWeBankFinTech%2Ffes-design%2Fcommit%2F463ac71015de05b09a1eeceabed3d4d742a91971" target="_blank">463ac71</a>)</li><li><strong>select:</strong><span>&nbsp;</span>Option 组件没有配置 value 默认为      &amp; Foption 无需处理 valueField 和 labelField (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FWeBankFinTech%2Ffes-design%2Fissues%2F512" target="_blank">#512</a>) (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FWeBankFinTech%2Ffes-design%2Fcommit%2F5e803f45c0a122409e2ce28bfb7c2817371edc4b" target="_blank">5e803f4</a>)</li></ul></div>
                                    ]]>
            </description>
            <pubDate>Wed, 15 Nov 2023 06:53:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266739/fes-design-0-8-16-released</guid>
            <link>https://www.oschina.net/news/266739/fes-design-0-8-16-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Node.js 21.2.0 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">Node.js 是能够在服务器端运行 JavaScript 的开放源代码、跨平台 JavaScript 运行环境，采用 Google 开发的 V8 运行代码，使用事件驱动、非阻塞和异步输入输出模型等技术来提高性能。</span></p><p>Node.js 21.2.0 现已发布，具体更新内容如下：</p><p style="color:#000000; margin-left:0; margin-right:0; text-align:start"><strong>显著变化</strong></p><ul><li>[&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnodejs%2Fnode%2Fcommit%2Fe25c65ee2f" target="_blank"><code>e25c65ee2f</code></a>] -&nbsp;<strong>doc</strong>&nbsp;: 将 MrJithil 添加到&nbsp;<span style="background-color:#ffffff; color:#333333">collaborators</span>&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnodejs%2Fnode%2Fpull%2F50666" target="_blank">#50666</a></li><li>[&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnodejs%2Fnode%2Fcommit%2Ff2366573f9" target="_blank"><code>f2366573f9</code></a>] -&nbsp;<strong>doc</strong>：添加 Ethan-Arrowood 作为&nbsp;<span style="background-color:#ffffff; color:#333333">collaborator</span>&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnodejs%2Fnode%2Fpull%2F50393" target="_blank">#50393</a></li><li>[&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnodejs%2Fnode%2Fcommit%2Feac9cc5fcb" target="_blank"><code>eac9cc5fcb</code></a>] -&nbsp;<strong>(SEMVER-MINOR)&nbsp;</strong><strong>esm</strong>&nbsp;: 添加 import.meta.dirname 和 import.meta.filename (James Sumners)&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnodejs%2Fnode%2Fpull%2F48740" target="_blank">#48740</a></li><li>[&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnodejs%2Fnode%2Fcommit%2F7e151114b1" target="_blank"><code>7e151114b1</code></a>] -&nbsp;<strong>fs</strong>&nbsp;: 将 stacktrace 添加到 fs/promises&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnodejs%2Fnode%2Fpull%2F49849" target="_blank">#49849</a></li><li>[&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnodejs%2Fnode%2Fcommit%2F6dbb280733" target="_blank"><code>6dbb280733</code></a>] -&nbsp;<strong>(SEMVER-MINOR)&nbsp;</strong><strong>lib</strong>&nbsp;: 添加<code>--no-experimental-global-navigator</code>CLI flag&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnodejs%2Fnode%2Fpull%2F50562" target="_blank">#50562</a></li><li>[&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnodejs%2Fnode%2Fcommit%2F03c730b931" target="_blank"><code>03c730b931</code></a>] -&nbsp;<strong>(SEMVER-MINOR)&nbsp;</strong><strong>lib</strong>&nbsp;: 添加 navigator.language 和 navigator.languages&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnodejs%2Fnode%2Fpull%2F50303" target="_blank">#50303</a></li><li>[&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnodejs%2Fnode%2Fcommit%2Ff932f4c518" target="_blank"><code>f932f4c518</code></a>] -&nbsp;<strong>(SEMVER-MINOR)&nbsp;</strong><strong>lib</strong>&nbsp;: 添加 navigator.platform&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnodejs%2Fnode%2Fpull%2F50385" target="_blank">#50385</a></li><li>[&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnodejs%2Fnode%2Fcommit%2F91f37d1dc3" target="_blank"><code>91f37d1dc3</code></a>] -&nbsp;<strong>(SEMVER-MINOR) stream</strong>：为 webstreams 压缩添加<code>deflate-raw</code>格式支持&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnodejs%2Fnode%2Fpull%2F50097" target="_blank">#50097</a></li><li>[&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnodejs%2Fnode%2Fcommit%2F65850a67c7" target="_blank"><code>65850a67c7</code></a>] -<strong></strong><strong>stream</strong>：为可读缓冲区使用数组&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnodejs%2Fnode%2Fpull%2F50341" target="_blank">#50341</a></li><li>[&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnodejs%2Fnode%2Fcommit%2Fe433fa54b7" target="_blank"><code>e433fa54b7</code></a>] -<strong>stream</strong>：优化创建&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnodejs%2Fnode%2Fpull%2F50337" target="_blank">#50337</a></li><li>[&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnodejs%2Fnode%2Fcommit%2Fc9b92bba58" target="_blank"><code>c9b92bba58</code></a>] -&nbsp;<strong>(SEMVER-MINOR)&nbsp;</strong><strong>test_runner</strong>&nbsp;: 添加内置 lcov 报告器&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnodejs%2Fnode%2Fpull%2F50018" target="_blank">#50018</a></li><li>[&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnodejs%2Fnode%2Fcommit%2Ff6c496563e" target="_blank"><code>f6c496563e</code></a>] -&nbsp;<strong>(SEMVER-MINOR)&nbsp;</strong><strong>test_runner</strong>：将&nbsp;Date 添加到支持的模拟 API (Lucas Santos)&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnodejs%2Fnode%2Fpull%2F48638" target="_blank">#48638</a></li><li>[&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnodejs%2Fnode%2Fcommit%2F05e8b6ef20" target="_blank"><code>05e8b6ef20</code></a>] -&nbsp;<strong>(SEMVER-MINOR)&nbsp;</strong><strong>test_runner, cli</strong>&nbsp;: 添加 --test-timeout flag&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnodejs%2Fnode%2Fpull%2F50443" target="_blank">#50443</a></li></ul><p>更多详情可<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnodejs.org%2Fen%2Fblog%2Frelease%2Fv21.2.0" target="_blank">查看发布公告</a><span style="background-color:#ffffff; color:#333333">。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 15 Nov 2023 06:03:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266722/nodejs-21-2-0-released</guid>
            <link>https://www.oschina.net/news/266722/nodejs-21-2-0-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[BifroMQ-v2.0.0 版本重磅发布：支持标准集群模式（StandardCluster）]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="margin-left:0px; margin-right:0px">2023 年 7 月，百度天工 AIoT 团队正式开源高性能分布式 MQTT 物联网消息中间件，并将其全新命名为 BifroMQ。自 BifroMQ 首个版本发布以来，获得海量社区的广泛关注，其中，BifroMQ 的集群能力一直备受期待。</p><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="margin-left:0; margin-right:0">通过近三个月的不懈努力，如今正式推出 BifroMQ-v2.0.0 版本，新版本首次支持集群模式，我们将其称为标准集群 StandardCluster（以下简称 StandardCluster）。新版本主要有以下特性：</p><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="margin-left:0; margin-right:0">🌍 集群模式全面支持 MQTT 协议：在集群模式下，每个节点均具备完整的 MQTT 协议功能，提供更高的可用性和扩展性。</p><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="margin-left:0; margin-right:0">🌍&nbsp;新增 HTTP API 支持：除 MQTT 外，本版本新增对 HTTP API 的支持，更加灵活多变。</p><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="margin-left:0; margin-right:0">🚀 高性能不减：专注于在大规模负载环境下的高性能 MQTT 协议。</p><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="margin-left:0; margin-right:0">🛠️ 模块化架构进一步优化：适应各种业务需求的分布式集群管理。</p><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="margin-left:0; margin-right:0">📊 强力可扩展性：目标支持大规模多租户的 Serverless 云服务。</p><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="margin-left:0; margin-right:0">详情介绍，继续阅读</p><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="margin-left:0; margin-right:0"><span><strong>BifroMQ 的集群架构解析</strong></span></p><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="margin-left:0; margin-right:0"><span style="color:#3498db"><strong>▌StandardCluster 的整体结构</strong></span></p><p style="margin-left:0; margin-right:0">在过往介绍 BifroMQ 整体架构的文章（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbifromq.io%2Fzh-Hans%2Fblog%2Fbifromq-tech-architecture%2F" target="_blank">https://bifromq.io/zh-Hans/blog/bifromq-tech-architecture/</a>）中，曾提到 BifroMQ 将逻辑上的 MQTT 功能从负载的角度分解为若干子服务，每个子服务对应一类关键负载：</p><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="margin-left:0; margin-right:0"><span style="color:#3e3e3e">·bifromq-mqtt：负责 MQTT 协议连接负载</span></p><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="margin-left:0; margin-right:0"><span style="color:#3e3e3e">·bifromq-dist：负责订阅和消息路由分发负载</span></p><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="margin-left:0; margin-right:0"><span style="color:#3e3e3e">·bifromq-inbox：负责持久会话中的离线消息队列负载</span></p><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="margin-left:0; margin-right:0"><span style="color:#3e3e3e">·bifromq-retain：负责 Retain 消息存取负载</span></p><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="margin-left:0; margin-right:0">从部署的角度出发，BifroMQ StandardCluster 是将这些独立负载的服务模块"封装"到一个节点服务进程的集群模式，从逻辑上来说，此为 Standalone 运行模式的抽象（BifroMQ Standalone 可以看作是单个节点的 BifroMQ StandardCluster）。与其他支持集群的 MQTT Broker 不同，BifroMQ 内置分布式持久化功能，因此单个 BifroMQ 节点是"有状态的"（Stateful）。</p><p style="margin-left:0px; margin-right:0px; text-align:center"><img alt="" height="400" src="https://oscimg.oschina.net/oscnet/up-6d871c8ad8353d28f90b010ef0e2e4b0a09.png" width="792" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px; text-align:center">▲ 标准集群的整体结构</p><p style="margin-left:0; margin-right:0; text-align:justify">注：本文所有插图中括号内的﻿bifromq-xxx﻿，即为代码中对应的模块名称</p><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="margin-left:0; margin-right:0"><span style="color:#3498db"><strong>▌消息分发能力的水平扩展</strong></span></p><p style="margin-left:0; margin-right:0">在 StandardCluster 集群模式下，每个节点进程内的分发负载模块（ 以下简称 Dist Service ）构成逻辑上的负载子集群（Dist-SubCluster）。Dist Service 将订阅信息存储在内置的持久化引擎中，并通过持久化引擎的分布式功能在节点之间同步路由信息。在 StandardCluster 模式下，通过增加节点的方式，即可以实现消息分发能力的水平扩展，特别是在 CleanSession 为 True 的情况下，这一点非常明显，详见官网测试报告。</p><p style="margin-left:0px; margin-right:0px; text-align:center"><img alt="" height="400" src="https://oscimg.oschina.net/oscnet/up-42840b4de22478548ca6934ee24df62ec21.png" width="792" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px; text-align:center">▲ bifromq-dist 结构</p><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="margin-left:0; margin-right:0"><span style="color:#3498db"><strong>▌离线消息队列的持久化、扩展性及高可靠性</strong></span></p><p style="margin-left:0; margin-right:0">与 Dist Service 模块类似，节点进程内负责 MQTT 持久会话中离线消息队列的 Inbox Service 模块构成了另一个逻辑上的负载子集群（以下简称 Inbox-SubCluster）。Inbox Service 将离线队列消息持久化到内置的存储引擎中，可以极大程度地减少因节点故障导致的数据丢失。在存储方面，Inbox Service 利用内置存储引擎的分片功能，在实现存储规模和处理能力水平扩展的同时，通过静态配置或运行时策略动态增加分片的副本数，可以进一步提高离线消息数据的可靠性，这对某些对数据可靠性要求更高的应用场景尤为重要。</p><p style="margin-left:0px; margin-right:0px; text-align:center"><img alt="" height="400" src="https://oscimg.oschina.net/oscnet/up-a071612e0fe715b733bad98bb4ca1353b8d.png" width="792" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px; text-align:center">▲ bifromq-inbox 结构</p><p style="margin-left:0; margin-right:0; text-align:justify">注 1：由于增加分片副本数对 MQTT CleanSession 为 False 的消息负载有不可忽视的影响，需要根据实际需求确定资源投入以达到预期效果。因此，默认副本数为 1，该设置可以通过 JVM 启动参数&nbsp;﻿inbox_store_range_voter_count﻿&nbsp;进行调整</p><p style="margin-left:0; margin-right:0; text-align:justify">注 2：Inbox Service 提供了离线消息队列的全局访问能力，因此 MQTT 客户端重新连接到任何集群节点时都可以访问所属队列中的离线消息，无需引入在其他 MQTT Broker 集群实现中常见的 sticky session 或 session migration 方案</p><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="margin-left:0; margin-right:0"><span style="color:#3498db"><strong>▌</strong><strong>Inbox 服务的基于负载的拆分策略</strong></span></p><p style="margin-left:0; margin-right:0">如前文所述，在 StandardCluster 部署下，单个节点进程内的 Inbox Service 利用了内置存储引擎的分片功能来实现存储规模和处理能力的水平扩展。然而，分片策略对实际运行效果有着决定性的影响。在 BifroMQ StandardCluster 版本中，已内置开箱即用的基于负载的拆分策略（以下简称 Load-based Splitting）。该策略通过统计最近一段时间内的负载情况来决定对 KV Range 的划分，可以视为一种"后验"拆分策略。当使用场景已经对离线消息负载的分布有提前规划和了解时，提前划分 Range 往往能在负载到来时带来更稳定的性能表现，而对于深度使用 BifroMQ 的用户，可以通过 SPI 机制实现此类"先验"拆分策略。</p><p style="margin-left:0px; margin-right:0px; text-align:center"><img alt="" height="600" src="https://oscimg.oschina.net/oscnet/up-46576e818cdeb9a1b9aafe883169c0428aa.png" width="400" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px; text-align:center">▲inbox 服务拆分策略</p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify">&nbsp;</p><p style="margin-left:0; margin-right:0"><span style="color:#3498db"><strong>▌</strong><strong>HTTP API 模块</strong></span></p><p style="margin-left:0; margin-right:0">BifroMQ StandardCluster 版本同时引入了 HTTP API 功能，每个集群节点均可通过配置开放 API 访问端口。BifroMQ HTTP API 作为无状态的全局接口，旨在支持业务层面的管理控制逻辑集成，访问任何一个节点的 API 都可以实现对整个集群的操作，详见官网 API 使用指南</p><p style="margin-left:0; margin-right:0; text-align:center"><img alt="" height="400" src="https://oscimg.oschina.net/oscnet/up-d65f5da4462a78d93bd53c50c1b80d118c8.png" width="792" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px; text-align:center">▲HTTP API 模块结构</p><p style="margin-left:0px; margin-right:0px; text-align:center">&nbsp;</p><p style="margin-left:0; margin-right:0"><span><strong>混合负载对性能的影响</strong></span></p><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="margin-left:0; margin-right:0; text-align:justify"><span style="color:#3e3e3e">在 StandardCluster 部署下，单个节点具备完整的 MQTT 协议功能，承担各种类型的负载。因此，这种模式非常适用于以下两类企业级应用场景：</span></p><p style="margin-left:0; margin-right:0; text-align:justify">&nbsp;</p><p style="margin-left:0; margin-right:0; text-align:justify"><span style="color:#3e3e3e">·业务产生的负载类型相对单一</span></p><p style="margin-left:0; margin-right:0; text-align:justify">&nbsp;</p><p style="margin-left:0; margin-right:0; text-align:justify"><span style="color:#3e3e3e">·</span><span style="color:#3e3e3e">业务产生的负载类型多元化，但产生时间相对分散。对于负载形式复杂且在时间维度上有集中产生的情况，我们建议用户通过模拟负载测试来获得单个 BifroMQ StandardCluster 集群下的最佳资源配置和参数设置，或者考虑使用多个 BifroMQ StandardCluster 来承载不同类型的业务负载。另外，您还可以与我们联系，获取 BifroMQ 商业版本的独立负载集群支持。</span></p><p style="margin-left:0; margin-right:0; text-align:justify">&nbsp;</p><p style="margin-left:0; margin-right:0"><span><strong>简单部署和简化运维</strong></span></p><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="margin-left:0; margin-right:0">在以往 BifroMQ 技术架构文章中，曾提及 BifroMQ 集群建立在一套内置的去中心化技术之上（base-cluster），无需依赖外部节点注册和发现服务。因此，构建 BifroMQ StandardCluster 的部署过程非常简单，只需指定任何一个集群中的节点作为种子节点，即可完成新节点的加入。此外，BifroMQ 还内置了集群分裂后的自愈能力，可以极大地简化出现网络分区（Network Partition）等故障时的运维操作。</p><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="margin-left:0; margin-right:0"><span><strong>相关链接</strong></span></p><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="margin-left:0; margin-right:0">·BifroMQ 官网（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbifromq.io%2F" target="_blank">https://bifromq.io/</a>）</p><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="margin-left:0; margin-right:0">·安装包地址（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fbaidu%2Fbifromq%2Freleases%2Ftag%2Fv2.0.0" target="_blank">https://github.com/baidu/bifromq/releases/tag/v2.0.0</a>）</p><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="margin-left:0; margin-right:0">·部署指南（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbifromq.io%2Fzh-Hans%2Fdocs%2F2.0.0%2Fdeploy%2Fcluster%2F" target="_blank">https://bifromq.io/zh-Hans/docs/2.0.0/deploy/cluster/</a>）</p><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="margin-left:0; margin-right:0"><span><strong>未来展望</strong></span></p><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="margin-left:0; margin-right:0">BifroMQ 团队一直秉持技术中立理念，致力于大规模实现 MQTT 协议，从而提高可靠性和可维护性。我们期待更多社区参与和深入使用反馈，共同推动这一技术的成熟。此外，您还可以通过扫描下方二维码加入开发者交流社区，与广大同行进行交流学习。</p><p style="margin-left:0px; margin-right:0px; text-align:center"><img alt="" height="250" src="https://oscimg.oschina.net/oscnet/up-87a63b79b2a9bc4215a5e13869541f206e1.png" width="450" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 15 Nov 2023 04:57:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266713</guid>
            <link>https://www.oschina.net/news/266713</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
    </channel>
</rss>
