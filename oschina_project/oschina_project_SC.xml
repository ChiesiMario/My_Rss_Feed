<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[开源中国-软件更新资讯]]>
        </title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="https://rsshub.app/oschina/news/project" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[开源中国-软件更新资讯 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Mon, 25 Dec 2023 10:49:08 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[开源 AI 聊天、绘图软件 AIdea 1.0.10 支持 Gemini、GPT-4V 等]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>AIdea 最新版本的 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmylxsw%2Faidea%2Freleases%2Ftag%2F1.0.10" target="_blank">1.0.10</a> 发布啦，大家快来体验体验！</p><blockquote><p>如果你还不知道这款 APP，那么可以简单看看这篇文章 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzA3NTU1NDk4Mg%3D%3D%26mid%3D2454663369%26idx%3D1%26sn%3Dfc5ae7e09e5da885fecbe90747900bc9%26chksm%3D88d55900bfa2d016578008ec30550acbab49cf9ed5cd0b454c3ce8d308ff7cc1ab9416637f19%23rd" target="_blank">花了小半年开发了一个 AI 套壳 APP，然而大势已过，直接开源了</a>。</p></blockquote><p>下载体验地址：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Faidea.aicode.cc" target="_blank">https://aidea.aicode.cc</a> 。</p><p><img alt="" src="https://ssl.aicode.cc/mweb/20231225/17034940908941.jpg" referrerpolicy="no-referrer"></p><p>本次更新内容如下</p><ul><li>新增了几个视觉模型的支持 
  <ul><li>GPT-4V</li><li>Google Gemini Pro Vision</li><li>通义千问 VL</li></ul></li><li>新增了几个大模型 
  <ul><li>Google Gemini Pro</li><li>通义千问 Max</li><li>天工 MegaVerse</li><li>零一万物的 Yi 34B</li></ul></li><li>创作岛增加艺术字、艺术二维码生成</li><li>群聊默认由所有成员同时回答（之前是随机选择一个）</li><li>朗读采用 OpenAI 的 TSS 模型输出（目前响应速度很慢）</li></ul><p>AIdea 是一款集成了主流大语言模型以及绘图模型的 APP，采用 Flutter + Golang 开发，代码完全开源，目前已经支持以下大语言模型</p><p><img alt="" src="https://ssl.aicode.cc/mweb/20231225/17034908007422.jpg" referrerpolicy="no-referrer"></p><p>整体技术栈如下图</p><p><img alt="" src="https://ssl.aicode.cc/mweb/20231225/17034970421740.jpg" referrerpolicy="no-referrer"></p><p>如果你对 AIdea 项目感兴趣，以下是 Github 地址，赶紧去 Star 一下吧！</p><ul><li>客户端（ Flutter ）： <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmylxsw%2Faidea" target="_blank">https://github.com/mylxsw/aidea</a></li><li>服务端（ Golang ）： <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmylxsw%2Faidea-server" target="_blank">https://github.com/mylxsw/aidea-server</a></li><li>Docker 一键部署安装包：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmylxsw%2Faidea-docker" target="_blank">https://github.com/mylxsw/aidea-docker</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Mon, 25 Dec 2023 09:59:03 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272634/aidea-1-0-10-released</guid>
            <link>https://www.oschina.net/news/272634/aidea-1-0-10-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Ruby 3.3.0 正式发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">Ruby 3.3.0 现已正式<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.ruby-lang.org%2Fen%2Fnews%2F2023%2F12%2F25%2Fruby-3-3-0-released%2F" target="_blank">发布</a>。新版本<span style="background-color:#ffffff">添加了一个名为 Prism 的新解析器，使用 Lrama 作为解析器生成器，添加了一个名为 RJIT 的新纯 Ruby JIT 编译器，以及许多性能改进，尤其是 YJIT。</span></span></p><p><span style="background-color:#ffffff; color:#333333">具体更新内容如下：</span></p><h4 style="margin-left:0px; margin-right:0px; text-align:left"><strong><span style="color:#000000"><span style="background-color:#ffffff">Prism</span></span></strong></h4><ul style="margin-left:0; margin-right:0"><li>引入&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fruby%2Fprism" target="_blank">Prism 解析器</a>作为默认 gem 
  <ul style="margin-left:0; margin-right:0"><li>Prism 是一个可移植、容错且可维护的 Ruby 语言递归下降解析器</li></ul></li><li>Prism 已做好生产准备并积极维护，用户可以使用它代替 Ripper 
  <ul style="margin-left:0; margin-right:0"><li>具体介绍可查看&nbsp;Prism 的<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fruby.github.io%2Fprism%2F" target="_blank">文档</a>。</li><li>Prism 既是一个由 CRuby 内部使用的 C 库，又是一个可供任何需要解析 Ruby 代码的工具使用的 Ruby gem</li><li>Prism API 中值得注意的方法有： 
    <ul style="margin-left:0; margin-right:0"><li><code class="language-plaintext">Prism.parse(source)</code>返回 AST 作为解析结果对象的一部分</li><li><code class="language-plaintext">Prism.parse_comments(source)</code>返回&nbsp;comments</li><li><code class="language-plaintext">Prism.parse_success?(source)</code>如果没有错误，则返回 true</li></ul></li></ul></li><li>现在可以使用<code class="language-plaintext">ruby --parser=prism</code>或<code class="language-plaintext">RUBYOPT="--parser=prism"</code>尝试使用&nbsp; Prism 编译器。值得注意的是，该 flag 仅用于调试。</li></ul><h4 style="margin-left:0px; margin-right:0px; text-align:left"><strong><span style="color:#000000"><span style="background-color:#ffffff">使用 Lrama 代替 Bison</span></span></strong></h4><ul style="margin-left:0; margin-right:0"><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fruby%2Flrama" target="_blank">用 Lrama LALR 解析器生成器</a>替换 Bison&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugs.ruby-lang.org%2Fissues%2F19637" target="_blank">[Feature #19637]</a><ul style="margin-left:0; margin-right:0"><li>更多详情可参阅<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frubykaigi.org%2F2023%2Fpresentations%2Fspikeolaf.html" target="_blank">Ruby Parser 的未来愿景</a></li><li>为了便于维护，Lrama 内部解析器被替换为 Racc 生成的 LR 解析器</li><li>支持参数化规则<code class="language-plaintext">(?, *, +)</code>，将在 Ruby parse.y 中使用</li></ul></li></ul><h4 style="margin-left:0px; margin-right:0px; text-align:left"><span style="color:#000000"><strong><span style="background-color:#ffffff">YJIT</span></strong></span></h4><ul style="margin-left:0; margin-right:0"><li>相对 Ruby 3.2 的主要性能改进 
  <ul style="margin-left:0; margin-right:0"><li>对 splat 和 rest 参数的支持已得到改进。</li><li>为虚拟机的堆栈操作分配了寄存器。</li><li>编译更多带有可选参数的调用。异常处理程序也被编译。</li><li>不支持的调用类型和<span style="background-color:#ffffff; color:#333333">复态调用点</span>不再退出到解释器。</li><li>Rails <code class="language-plaintext">#blank?</code>和 specialized<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frails%2Frails%2Fpull%2F49909" target="_blank"><code class="language-plaintext">#present?</code></a>等基本方法都是内联的。</li><li>对<code class="language-plaintext">Integer#*</code>、<code class="language-plaintext">Integer#!=</code>、<code class="language-plaintext">String#!=</code>、<code class="language-plaintext">String#getbyte</code>、&nbsp;<code class="language-plaintext">Kernel#block_given?</code>、<code class="language-plaintext">Kernel#is_a?</code>、<code class="language-plaintext">Kernel#instance_of?</code>和<code class="language-plaintext">Module#===</code>进行了特别优化。</li><li>编译速度现在比 Ruby 3.2 稍快。</li><li>现在比 Optcarrot 上的解释器快 3 倍以上</li></ul></li><li>与 Ruby 3.2 相比显着提高了内存使用率 
  <ul style="margin-left:0; margin-right:0"><li>编译代码的元数据占用内存更少。</li><li>当应用程序的 ISEQ 超过 40,000 个时，<code class="language-plaintext">--yjit-call-threshold</code>会自动从 30 提高到 120。</li><li>添加<code class="language-plaintext">--yjit-cold-threshold</code>以跳过编译 cold&nbsp;ISEQ。</li><li>在 Arm64 上生成更紧凑的代码。</li></ul></li><li>Code GC 现在默认禁用 
  <ul style="margin-left:0; margin-right:0"><li><code class="language-plaintext">--yjit-exec-mem-size</code>被视为新代码编译停止的硬限制。</li><li>不会因 Code GC&nbsp;导致性能突然下降。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fshopify%2Fpitchfork" target="_blank">使用 Pitchfork</a>&nbsp;重新分叉的服务器上有更好的 copy-on-write&nbsp;行为&nbsp;。</li><li>如果需要，仍然可以使用<code class="language-plaintext">--yjit-code-gc</code>启用&nbsp;code GC</li></ul></li><li>添加<code class="language-plaintext">RubyVM::YJIT.enable</code>以便在运行时启用 YJIT 
  <ul style="margin-left:0; margin-right:0"><li>无需修改​​命令行参数或环境变量即可启动 YJIT。Rails 7.2 将使用此方法<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frails%2Frails%2Fpull%2F49947" target="_blank">默认启用 YJIT</a>&nbsp;。</li><li>这也可用于仅在应用程序完成启动后启用 YJIT。如果想在启动时禁用 YJIT 的同时使用其他 YJIT 选项，可以使用<code class="language-plaintext">--yjit-disable</code>。</li></ul></li><li>默认情况下提供更多 YJIT stats 
  <ul style="margin-left:0; margin-right:0"><li>现在默认情况下还提供了<code class="language-plaintext">yjit_alloc_size</code>和更多与元数据相关的统计信息。</li><li>由<code class="language-plaintext">--yjit-stats</code>生成的 <code class="language-plaintext">ratio_in_yjit</code>stat 现在可在发行版中使用，不再需要特殊的 stats 或 dev 版本才能访问大多数统计信息。</li></ul></li><li>添加更多 profiling 功能 
  <ul style="margin-left:0; margin-right:0"><li>添加<code class="language-plaintext">--yjit-perf</code>以方便使用 Linux perf 进行分析。</li><li><code class="language-plaintext">--yjit-trace-exits</code>现在支持使用<code class="language-plaintext">--yjit-trace-exits-sample-rate=N</code>进行采样</li></ul></li><li>更全面的测试和多个错误修复</li></ul><h4 style="margin-left:0px; margin-right:0px; text-align:left"><strong><span style="color:#000000"><span style="background-color:#ffffff">RJIT</span></span></strong></h4><ul style="margin-left:0; margin-right:0"><li>引入了纯 Ruby JIT 编译器 RJIT 并取代了 MJIT。 
  <ul style="margin-left:0; margin-right:0"><li>RJIT 仅支持 Unix 平台上的 x86-64 架构。</li><li>与 MJIT 不同，它在运行时不需要 C 编译器。</li></ul></li><li>RJIT 的存在仅用于实验目的。 
  <ul style="margin-left:0; margin-right:0"><li>建议用户在生产环境中继续使用 YJIT。</li></ul></li><li>如果对为开发 JIT for Ruby 感兴趣，可查看&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frubykaigi.org%2F2023%2Fpresentations%2Fk0kubun.html%23day3" target="_blank">k0kubun 在 RubyKaigi 第 3 天的演示</a>。</li></ul><h4 style="margin-left:0px; margin-right:0px; text-align:left"><span style="color:#000000"><strong><span style="background-color:#ffffff">M:N 线程调度器</span></strong></span></h4><ul style="margin-left:0; margin-right:0"><li>引入了 M:N 线程调度程序。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugs.ruby-lang.org%2Fissues%2F19842" target="_blank">[Feature#19842]</a><ul style="margin-left:0; margin-right:0"><li>M 个 Ruby 线程由 N 个本机线程（操作系统线程）管理，因此减少了线程创建和管理成本。</li><li>它可能会破坏 C 扩展兼容性，因此默认情况下会在主 Ractor 上禁用 M:N 线程调度程序。 
    <ul style="margin-left:0; margin-right:0"><li><code class="language-plaintext">RUBY_MN_THREADS=1</code>环境变量可在主 Ractor 上启用 M:N 线程。</li><li>M:N 线程始终在非主 Ractor 上启用。</li></ul></li><li><code class="language-plaintext">RUBY_MAX_CPU=n</code>环境变量用于设置<code class="language-plaintext">N</code>（本地线程的最大数量）的最大值。默认值为 8。 
    <ul style="margin-left:0; margin-right:0"><li>由于每个 Ractor 只能同时运行一个 Ruby 线程，因此将使用的本地线程数是<code class="language-plaintext">RUBY_MAX_CPU</code>中指定的线程数和正在运行的 Ractor 数量中较小的一个。因此，单 Ractor 应用程序（大多数应用程序）将只使用 1 个本地线程。</li><li>为了支持阻塞操作，可以使用<code class="language-plaintext">N</code>个以上的本地线程。</li></ul></li></ul></li></ul><p>更多详情可<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.ruby-lang.org%2Fen%2Fnews%2F2023%2F12%2F25%2Fruby-3-3-0-released%2F" target="_blank">查看官方公告</a>。</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 25 Dec 2023 08:34:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272610/ruby-3-3-0-released</guid>
            <link>https://www.oschina.net/news/272610/ruby-3-3-0-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[fastjson 2.0.44 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#e6edf3; text-align:start"><span style="color:#000000">这又是例行的 BUG 修复小版本，大家按需升级。</span></p><h1>Issues</h1><ol><li>反序列化跳过非 String Key 的报错<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Falibaba%2Ffastjson2%2Fissues%2F2102" target="_blank">#2102</a></li><li>兼容 fastjson 1.x new Date 格式<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Falibaba%2Ffastjson2%2Fissues%2F2086" target="_blank">#2086</a></li><li>修复缺省序列化 springboot ResolvableType 类型 StackOverflowError 的问题<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Falibaba%2Ffastjson2%2Fissues%2F2103" target="_blank">#2103</a></li><li>修复序列化 BigDecimal 某些场景下会报 ArrayIndexOutOfBoundsException 的问题<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Falibaba%2Ffastjson2%2Fissues%2F2076" target="_blank">#2076</a></li><li>修复某些场景反序列化解析引用不成功的问题<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Falibaba%2Ffastjson2%2Fissues%2F2072" target="_blank">#2072</a></li><li>修复 List 字段的@JSONField#format 不起作用的问题<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Falibaba%2Ffastjson2%2Fissues%2F2073" target="_blank">#2073</a></li><li>修复 Kotlin 数据类 is 开头非 boolean 类型字段序列化丢失的问题<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Falibaba%2Ffastjson2%2Fissues%2F2069" target="_blank">#2069</a></li></ol><h1>MAVEN 依赖配置</h1><div><pre>&lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">dependency</span>&gt;
    &lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">groupId</span>&gt;com.alibaba.fastjson2&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">groupId</span>&gt;
    &lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">artifactId</span>&gt;fastjson2&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">artifactId</span>&gt;
    &lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">version</span>&gt;2.0.44&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">version</span>&gt;
&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">dependency</span>&gt;
</pre></div><ul><li>android4 兼容版本</li></ul><div><pre>&lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">dependency</span>&gt;
    &lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">groupId</span>&gt;com.alibaba.fastjson2&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">groupId</span>&gt;
    &lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">artifactId</span>&gt;fastjson2&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">artifactId</span>&gt;
    &lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">version</span>&gt;2.0.44.android4&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">version</span>&gt;
&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">dependency</span>&gt;
</pre></div><ul><li>1.x 兼容版本</li></ul><div><pre>&lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">dependency</span>&gt;
    &lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">groupId</span>&gt;com.alibaba&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">groupId</span>&gt;
    &lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">artifactId</span>&gt;fastjson&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">artifactId</span>&gt;
    &lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">version</span>&gt;2.0.44&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">version</span>&gt;
&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">dependency</span>&gt;
</pre></div><ul><li>Spring 5 extension 配置</li></ul><div><pre>&lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">dependency</span>&gt;
    &lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">groupId</span>&gt;com.alibaba.fastjson2&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">groupId</span>&gt;
    &lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">artifactId</span>&gt;fastjson2-extension-spring5&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">artifactId</span>&gt;
    &lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">version</span>&gt;2.0.44&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">version</span>&gt;
&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">dependency</span>&gt;
</pre></div><ul><li>Spring 6 extension 配置</li></ul><div><pre>&lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">dependency</span>&gt;
    &lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">groupId</span>&gt;com.alibaba.fastjson2&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">groupId</span>&gt;
    &lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">artifactId</span>&gt;fastjson2-extension-spring6&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">artifactId</span>&gt;
    &lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">version</span>&gt;2.0.44&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">version</span>&gt;
&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">dependency</span>&gt;
</pre></div><h1>相关链接</h1><ul><li>FASTJSON 1.x 用户升级指南<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Falibaba%2Ffastjson2%2Fwiki%2Ffastjson_1_upgrade_cn" target="_blank">https://github.com/alibaba/fastjson2/wiki/fastjson_1_upgrade_cn</a></li><li>相关 issues<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Falibaba%2Ffastjson2%2Fmilestone%2F44" target="_blank">https://github.com/alibaba/fastjson2/milestone/44</a></li><li>代码 tag<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Falibaba%2Ffastjson2%2Ftree%2F2.0.44" target="_blank">https://github.com/alibaba/fastjson2/tree/2.0.44</a></li><li>Maven 下载<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frepo1.maven.org%2Fmaven2%2Fcom%2Falibaba%2Ffastjson2%2Ffastjson2%2F2.0.44%2F" target="_blank">https://repo1.maven.org/maven2/com/alibaba/fastjson2/fastjson2/2.0.44/</a></li><li>Android4 兼容版本<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frepo1.maven.org%2Fmaven2%2Fcom%2Falibaba%2Ffastjson2%2Ffastjson2%2F2.0.44.android4%2F" target="_blank">https://repo1.maven.org/maven2/com/alibaba/fastjson2/fastjson2/2.0.44.android4/</a></li><li>1.x 兼容版本<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frepo1.maven.org%2Fmaven2%2Fcom%2Falibaba%2Ffastjson%2F2.0.44%2F" target="_blank">https://repo1.maven.org/maven2/com/alibaba/fastjson/2.0.44/</a></li><li>性能测试报告<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Falibaba%2Ffastjson2%2Fblob%2Fmain%2Fdocs%2Fbenchmark%2Fbenchmark_2.0.44.md" target="_blank">https://github.com/alibaba/fastjson2/blob/main/docs/benchmark/benchmark_2.0.44.md</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Mon, 25 Dec 2023 08:25:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272608/fastjson-2-0-44-released</guid>
            <link>https://www.oschina.net/news/272608/fastjson-2-0-44-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[国内第一个开源免费电子签章系统发布了]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="text-align:left"><span><span><span><span><strong><span>一、前言 &nbsp;&nbsp;</span></strong><br> &nbsp;&nbsp;&nbsp;&nbsp;<span><span>如约而至，历经一年的奋战，开放签电子签章系统于 2023 年 12 月 15 日上线发布了。</span></span><br> &nbsp;&nbsp;&nbsp;&nbsp;<span><span>开放签是国内第一个开源免费的电子签章系统，为企业构建安全、可信、可控、灵活的一站式电子签章全服务体系产品链，我们相信将电子签章技术、产品开源开放，能够为产品与用户之间带来更多信任，让电子签署更加可信、简单。</span></span><br><strong><span><span><strong>二、产品理念 &nbsp;&nbsp;</strong></span></span></strong><br> &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<strong><span><span><strong>产品的核心价值理念：让电子签署更简单。</strong></span></span></strong></span></span></span></span></p><p style="margin-left:0; margin-right:0; text-align:left"><span><span><span><span><span><span>&nbsp; &nbsp; &nbsp; &nbsp;让电子签章技术更加简单：目前，市场上掌握电子签署完整技术的开发工程师比例相对较低，同时网上相关的技术资料和工具也比较分散，很难系统性的学习和应用。所以，我们希望开放签可以将电子签章技术和工具完整的、开源的提供出来，让有技术能力的个人或团队学习或自建电子签章系统；</span></span><br><span><span>让电子签章应用更加简单：在应用层面，我们希望可以降低企业应用电子签章产品的门槛，免费下载，零采购成本使用；</span></span><br><strong><span><span><strong>三、产品矩阵和功能</strong></span></span></strong><br> &nbsp;&nbsp;&nbsp;&nbsp;<strong>&nbsp; &nbsp;&nbsp;</strong><strong><span><span><strong>基于产品理念，开放签的产品矩阵和功能如下：</strong></span></span></strong></span></span></span></span></p><p style="margin-left:0; margin-right:0; text-align:left"><span><span><span><span><span><span>&nbsp; &nbsp; &nbsp; &nbsp;开源工具版：将电子签章的核心技术代码和工具进行开源，开源版采用更加宽松的 MIT 开源协议，且不受商业限制。产品功能包括：电子印章制作，手写签名生成，数字证书生成，PDF 文件转图片，电子签章（关键字签署、指定位置签署），文件验签等。</span></span><br> &nbsp; &nbsp; &nbsp; &nbsp;<span><span>企业版：提供免费版本的电子签章应用系统，用户可以一键下载、部署安装，部署完成后，用户即可拥有电子签章的基本功能。支持私有化部署、多租户、SaaS 化等多种服务模式，提供在线签署、电子签章、电子印章管控、审批流程管理、数字证书服务等功能，满足电子合同、电子保单、电子报告单、招投标文件、电子成绩单、电子证明、金融凭证、会计凭证、电子处方等多种电子文件签署场景。</span></span><br> &nbsp; &nbsp; &nbsp; &nbsp;<span><span>定制版：对于比较复杂的、定制的场景需求，开放签提供本地化、深度定制化、专属技术服务，为您提供专属电子签章平台。</span></span><br><strong><span><span><strong>四、开放签产品地址</strong></span></span></strong><br><span><span>开源工具版下载地址：</span></span></span></span></span></span></p><p><a href="https://gitee.com/kaifangqian">gitee 仓库地址</a>：https://gitee.com/kaifangqian</p><p><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.kaifangqian.com" target="_blank">产品官网地址</a>：www.kaifangqian.com</p><p><span style="background-color:#ffffff; color:#4d4d4d">开放签将始终以开源、开放的价值观持续更新系统，为用户提供更加开放、好用的电子签章系统。</span></p><p>&nbsp;</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 25 Dec 2023 07:42:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272595</guid>
            <link>https://www.oschina.net/news/272595</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Furion 商业化探索：轻舟已过万重山，v4.9.1.15]]>
            </title>
            <description>
                <![CDATA[<div class="content"><blockquote><p><strong>两岸猿声啼不住，轻舟已过万重山。</strong></p><p><strong>所有人的看法和评价都是暂时的，只有自己的经历和成绩是伴随一生的。</strong>几乎所有的担忧和畏惧，都是来源于自己的想象，只有你真的去做了，才会发现有多快乐。</p></blockquote><p>经过为期一个月的商业化探索，Furion 收获了 1.4 万个付费用户，其中开通年付费 VIP 服务的有 519 位，同时获得了国内两家和国外一家企业超过 10 万人民币的友情赞助。NuGet 总下载量也达到了 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.nuget.org%2Fprofiles%2Fmonk.soul" target="_blank">1200 万</a>。</p><hr><p><strong>尽人事，听天命，事在人为。</strong></p><p>经过一个月对开源文档商业化的深入探索，我们已成功建立了一套全面且规范的流程，并在此过程中积累了丰富的经验。这些经验涵盖了流程设计、财务收款、防盗版措施、客户投诉处理、安全合规以及舆论公关等多个方面。</p><p>面对新事物和改变，人们往往会产生恐惧和不安。然而，<strong>作为互联网行业的从业者，我们不仅需要思考如何改变，更要勇于接受、拥抱并实现这些改变。</strong></p><p><strong>不论未来人们如何评价我们的这一尝试，至少在目前，我们已经为开源商业化领域开辟了一条新的道路。</strong></p><h2>本期更新</h2><ul><li><p style="margin-left:0; margin-right:0"><strong>新特性</strong></p><ul><li>[新增]<span>&nbsp;</span><code>EFCore</code><span>&nbsp;</span>数据库操作<span>&nbsp;</span><code>EntityNotTenant</code><span>&nbsp;</span>和<span>&nbsp;</span><code>EntityBaseNotTenant</code><span>&nbsp;</span>实体基类<span>&nbsp;</span>4.9.1.11<span>&nbsp;</span>⏱️2023.12.04<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/b62bfb1a18d57f7fe3dd9548aa02372025dfed85">b62bfb1</a></li><li>[新增] 控制枱日志支持启动时同步<span>&nbsp;</span><code>ConsoleFormatterExtendOptions</code><span>&nbsp;</span>配置<span>&nbsp;</span>4.9.1.10<span>&nbsp;</span>⏱️2023.12.04<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/a96fe08336dbf99b7cf5cc5e6ec304adf7413a4b">a96fe08</a></li><li>[新增] 定时任务支持取消正在运行的作业程序<span>&nbsp;</span>4.9.1.9<span>&nbsp;</span>⏱️2023.12.03<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/3cc9be0da1eabc0f3baaa7801b115bb2909bb085">3cc9be0</a></li><li>[新增]<span>&nbsp;</span><code>JSON.IsValid(jsonString)</code><span>&nbsp;</span>判断<span>&nbsp;</span><code>JSON</code><span>&nbsp;</span>字符串有效性<span>&nbsp;</span>4.9.1.8<span>&nbsp;</span>⏱️2023.11.30<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/22bc69bd4a445f81833c082da7c99f4a5c518012">22bc69b</a></li><li>[新增]<span>&nbsp;</span><code>axios-utils.ts</code><span>&nbsp;</span>解析<span>&nbsp;</span><code>token</code><span>&nbsp;</span>信息导出方法<span>&nbsp;</span>4.9.1.7<span>&nbsp;</span>⏱️2023.11.29<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/ae8c3e8c47494fa3ba37d2b076d54f9f2c016252">ae8c3e8</a></li><li>[新增] 规范化处理自动过滤<span>&nbsp;</span><code>SSE</code><span>&nbsp;</span>请求、文件请求、图片请求<span>&nbsp;</span>4.9.1.6<span>&nbsp;</span>⏱️2023.11.22<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/issues/I8IP6D">#I8IP6D</a></li><li>[新增]<span>&nbsp;</span><code>[AppDbContext]</code><span>&nbsp;</span>特性支持<span>&nbsp;</span><code>UseSnakeCaseNaming</code><span>&nbsp;</span>属性配置表名使用蛇形命名<span>&nbsp;</span>4.9.1.5<span>&nbsp;</span>⏱️2023.11.20<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/issues/I8HGR2">#I8HGR2</a><span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/pulls/863">!863</a></li><li>[新增] 时间戳模型绑定器将时间戳转换为<span>&nbsp;</span><code>DateTime/DateTimeOffset</code><span>&nbsp;</span>类型<span>&nbsp;</span>4.9.1.5<span>&nbsp;</span>⏱️2023.11.20<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/df3053cf081d5e4d8eb63d567ed95c45267e0969">df3053c</a></li><li>[新增]<span>&nbsp;</span><code>Newtonsoft.Json</code><span>&nbsp;</span>自动将时间戳转换为<span>&nbsp;</span><code>DateTime/DateTimeOffset</code><span>&nbsp;</span>类型<span>&nbsp;</span>4.9.1.3<span>&nbsp;</span>⏱️2023.11.17<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/78a589d99eb5985b576e4c96acd6e4890391d6ff">78a589d</a></li><li>[新增]<span>&nbsp;</span><code>System.Text.Json</code><span>&nbsp;</span>自动将时间戳转换为<span>&nbsp;</span><code>DateTime/DateTimeOffset</code><span>&nbsp;</span>类型<span>&nbsp;</span>4.9.1.2<span>&nbsp;</span>⏱️2023.11.17<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/abd5196f5c5160a5df96dad80c7c5aa51b96d5b9">abd5196</a></li><li>[新增]<span>&nbsp;</span><code>IRepositoryFactory&lt;TEntity, TDbContextLocator&gt;</code><span>&nbsp;</span>仓储功能，解决在<span>&nbsp;</span><code>Blazor</code><span>&nbsp;</span>中使用<span>&nbsp;</span><code>EFCore</code><span>&nbsp;</span>问题<span>&nbsp;</span>4.9.1.1<span>&nbsp;</span>⏱️2023.11.16<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/4285ec0b8debc2d71c7f978126cb3dc394a8ad30">4285ec0</a><span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flearn.microsoft.com%2Fzh-cn%2Faspnet%2Fcore%2Fblazor%2Fblazor-ef-core%3Fview%3Daspnetcore-7.0" target="_blank">文档说明</a></li><li>[新增] 补偿策略模块功能<span>&nbsp;</span>4.9.1<span>&nbsp;</span>⏱️2023.11.15<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/tree/v4/framework/Furion/RescuePolicy">【源码地址】</a><span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/dfc63e7f0ffd2e03653f11a3e49a21646902ddc4">dfc63e7</a></li></ul></li><li><p style="margin-left:0; margin-right:0"><strong>突破性变化</strong></p><ul><li>[调整]<span>&nbsp;</span><strong>动态<span>&nbsp;</span><code>WebAPI</code><span>&nbsp;</span>生成版本控制路由规则，版本分隔符默认由<span>&nbsp;</span><code>@</code><span>&nbsp;</span>调整为<span>&nbsp;</span><code>v</code></strong><span>&nbsp;</span>4.9.1.14<span>&nbsp;</span>⏱️2023.12.14<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/7677d0fa615d3ccdf784542b5702cd1d6165e78f">7677d0f</a></li><li>[升级]<span>&nbsp;</span><code>Serilog</code><span>&nbsp;</span>拓展包依赖至<span>&nbsp;</span><code>8.0.0</code><span>&nbsp;</span>版本，<strong>移除<span>&nbsp;</span><code>.NET8.0</code><span>&nbsp;</span>的<span>&nbsp;</span><code>IWebHostBuilder.UseSerilogDefault</code><span>&nbsp;</span>拓展方法</strong><span>&nbsp;</span>4.9.1.1<span>&nbsp;</span>⏱️2023.11.16<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/5ab3e43722a298db56a86792dde301adf1f3fe7f">5ab3e43</a></li><li>[升级]<span>&nbsp;</span><strong>框架底层适配<span>&nbsp;</span><code>.NET8.0</code><span>&nbsp;</span>正式版</strong><span>&nbsp;</span>4.9.1<span>&nbsp;</span>⏱️2023.11.15</li><li>[升级]<span>&nbsp;</span><strong>框架脚手架适配<span>&nbsp;</span><code>.NET8.0</code><span>&nbsp;</span>正式版</strong><span>&nbsp;</span>4.9.1<span>&nbsp;</span>⏱️2023.11.15</li></ul></li><li><p style="margin-left:0; margin-right:0"><strong>问题修复</strong></p><ul><li>[修复] 动态<span>&nbsp;</span><code>WebAPI</code><span>&nbsp;</span>因<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/d9810bece0a1d1108e134cfdae2fdd868554f769">1dc7ea7</a><span>&nbsp;</span>提交导致<span>&nbsp;</span><code>AsLowerCamelCase</code><span>&nbsp;</span>配置失效问题<span>&nbsp;</span>4.9.1.15<span>&nbsp;</span>⏱️2023.12.20<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/d9810bece0a1d1108e134cfdae2fdd868554f769">d9810be</a></li><li>[修复] 粘土对象转换成<span>&nbsp;</span><code>Dictionary</code><span>&nbsp;</span>对象不支持递归问题<span>&nbsp;</span>4.9.1.13<span>&nbsp;</span>⏱️2023.12.11<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/issues/I8NFT4">#I8NFT4</a></li><li>[修复]<span>&nbsp;</span><code>Scoped.CreateAsync</code><span>&nbsp;</span>内部异常上层应用不能捕获问题<span>&nbsp;</span>4.9.1.12<span>&nbsp;</span>⏱️2023.12.08<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/0a89a434223c45d84b8908f6aff1bf1d7528193a">0a89a43</a></li><li>[修复]<span>&nbsp;</span><code>Scoped.CreateUowAsync</code><span>&nbsp;</span>内部异常上层应用不能捕获问题<span>&nbsp;</span>4.9.1.8<span>&nbsp;</span>⏱️2023.11.30<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/3c859e83c0ed6f07fcf191973fe465599a823224">3c859e8</a></li><li>[修复] 定时任务设置触发器<span>&nbsp;</span><code>Result</code><span>&nbsp;</span>后作业执行异常不能重置问题<span>&nbsp;</span>4.9.1.7<span>&nbsp;</span>⏱️2023.11.24<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/147215f1631f58fca900f17cca5695f9431555e5">147215f</a></li><li>[修复]<span>&nbsp;</span><code>JWTEncryption.GetJWTSettings()</code><span>&nbsp;</span>独立使用时无法获取自定义配置<span>&nbsp;</span>4.9.1.4<span>&nbsp;</span>⏱️2023.11.18<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/c045e084670a98f71d5ea5ed55ca5cbbfc981e0b">c045e08</a></li></ul></li><li><p style="margin-left:0; margin-right:0"><strong>文档</strong></p><ul><li>[更新] 仓储文档、<code>Db</code><span>&nbsp;</span>静态类文档、脚手架文档、<code>.NET7</code><span>&nbsp;</span>升级<span>&nbsp;</span><code>.NET8</code><span>&nbsp;</span>文档、<code>JSON</code><span>&nbsp;</span>序列化文档、<code>Docker</code><span>&nbsp;</span>部署文档、数据库上下文文档、虚拟文件文档、远程请求文档、<code>HttpContext</code><span>&nbsp;</span>文档、<code>JSON</code><span>&nbsp;</span>静态类文档、定时任务文档、数据库仓储拓展文档、数据库实体文档、规范化文档</li></ul></li><li><p style="margin-left:0; margin-right:0"><strong>贡献者</strong></p><ul><li>zuohuaijun (<a href="https://gitee.com/zuohuaijun">@zuohuaijun</a>)<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/pulls/865">!865</a></li><li>anliuty (<a href="https://gitee.com/www.fengyunmy.com">@anliuty</a>)<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/pulls/863">!863</a></li><li>风云明月 (<a href="https://gitee.com/www.fengyunmy.com">@www.fengyunmy.com</a>)<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/pulls/862">!862</a></li></ul></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Mon, 25 Dec 2023 06:34:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272578/furion-4-9-1-15-released</guid>
            <link>https://www.oschina.net/news/272578/furion-4-9-1-15-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Stellarium 23.4 发布，开源 3D 天象模拟软件]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Stellarium 23.4 已发布。从 v23.1 开始，发布的版本号将显示 year.release scheme。对于 Windows，所使用的 Qt 框架版本作为包名称的一部分可见。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">Stellarium 是一款免费开源 GPL（自由软件基金会 GNU 通用公共许可证）软件，它使用 OpenGL 图形接口对星空进行实时渲染。软件可以模拟肉眼、双筒望远镜和小型天文等观察天空，根据观测者所处时间和位置，计算出天空中太阳、月球、行星等天体位置，并将其精确地显示出来。还可以绘制星座、演示天文现象，如流星雨、日食和月食等。</p><p style="color:#000000; margin-left:0; margin-right:0; text-align:start">Stellarium 还被应用于天文馆中作为教学展示软件，作为天文爱好者星空望远镜观测辅助软件。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" height="374" src="https://oscimg.oschina.net/oscnet/up-0aa6143a3e2a1325d21d488ecfd731d4a83.png" width="500" referrerpolicy="no-referrer"></p><p><span style="background-color:#ffffff; color:#333333">此版本的主要变化内容如下：</span></p><ul><li>新插件：Lens Distortion Estimator（实验性）</li><li>新天空文化：Tibetan Lunar Mansions</li><li>更改了 GUI：能够通过 normalStyle.css 更改外观</li><li>为 Windows 软件包添加了新的 MESA</li><li>添加了对 Windows/ARM64 软件包的支持</li><li>添加了对 nomenclature names 起源的支持</li><li>插件和 AstroCalc 工具的改进</li><li>macOS/ARM64 上的性能改进</li><li>以及许多小问题的修复</li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>TELESCOPE USERS</strong></p><ul style="list-style-type:disc; margin-left:0; margin-right:0"><li><span style="color:#000000">已经发现并修复了基于 Qt6 版本的 TelescopeControl 插件中的一些错误。</span></li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="color:#000000">Telescope users 可检查一下问题是否已经解决。如果没有解决的话，</span>Stellarium 团队正在寻求有能力解决该问题的开发者的协助，可能会有奖励。</p><p><span style="background-color:#ffffff; color:#000000">详情可</span><span style="background-color:#ffffff; color:#333333">参阅</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fstellarium.org%2Frelease%2F2023%2F12%2F23%2Fstellarium-23.4.html" target="_blank">完整的更改列表</a><span style="background-color:#ffffff; color:#333333">。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 25 Dec 2023 06:07:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272572/stellarium-23-4-released</guid>
            <link>https://www.oschina.net/news/272572/stellarium-23-4-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[RuleGo v0.18.0 发布：Go 轻量级、高性能、嵌入式、可编排组件式规则引擎]]>
            </title>
            <description>
                <![CDATA[<div class="content"><ul></ul><p><code>RuleGo</code> 是一个基于 <code>Go</code> 语言的轻量级、高性能、嵌入式、可编排组件式的规则引擎。也一个灵活配置和高度定制化的事件处理框架。支持异构系统数据集成，可以对输入消息进行聚合、分发、过滤、转换、丰富和执行各种动作。</p><h4>典型使用场景</h4><ul><li><strong>边缘计算：</strong> 可以在边缘服务器部署 <code>RuleGo</code>，对数据进行预处理，筛选、聚合或者计算后再上报到云端。数据的处理规则和分发规则可以通过规则链动态配置和修改，而不需要重启系统。</li><li><strong>物联网：</strong> 收集设备数据上报，经过规则链的规则判断，触发一个或者多个动作，例如：发邮件、发告警、和其他设备或者系统联动。</li><li><strong>数据分发：</strong> 可以根据不同的消息类型，调用 HTTP、MQTT 或者 gRPC 把数据分发到不同系统。</li><li><strong>应用集成：</strong> 把 <code>RuleGo</code> 当做胶水连接各种系统或者协议，例如：ssh、webhook、kafka、消息队列、数据库、chatGPT、第三方应用系统。</li><li><strong>异构系统数据集中处理：</strong> 从不同的数据源（如 MQTT、HTTP、WS、TCP/UDP 等）接收数据，然后对数据进行过滤、格式转换、然后分发到数据库、业务系统或者仪表板。</li><li><strong>高度定制化业务：</strong> 把高度定制化或者经常变化的业务解耦出来，交给 <code>RuleGo</code> 规则链进行管理。业务需求变化而不需要重启主程序。</li><li><strong>复杂业务编排：</strong> 把业务封装成自定义组件，通过 <code>RuleGo</code> 编排和驱动这些自定义的组件，业务逻辑并支持动态调整和替换。</li><li><strong>微服务编排：</strong> 通过 <code>RuleGo</code> 编排和驱动微服务，或者动态调用第三方服务处理业务，并返回结果。</li><li><strong>业务代码和业务逻辑解耦：</strong> 例如：用户积分计算系统、风控系统。</li><li><strong>自动化：</strong> 例如：流程自动化系统、营销自动化系统、对接<code>大模型</code>提取用户意图，然后触发规则链与其他系统进行联动或者进行业务处理。</li><li><strong>灵活配置和高度定制化的事件处理框架：</strong> 对不同的消息类型，进行异步或者同步的处理。</li></ul><h3>架构图</h3><p><img alt="" height="1536" src="https://oscimg.oschina.net/oscnet/up-e549bd3e4e005f5ac2031927b4ab00e516b.png" width="2149" referrerpolicy="no-referrer"></p><h3><strong>本次更新</strong></h3><p>筑牢底座，迎接 2024，本次主要增加了：</p><p>1.增加<strong>AOP</strong>(面向切面编程，Aspect Oriented Programming) 机制，它类似拦截器或者 hook 机制，但是功能更加强大和灵活。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frulego.cc%2Fpages%2Fa1ed6c%2F" target="_blank">文档</a></p><ul><li>它允许在不修改规则链或节点的原有逻辑的情况下，对规则链的执行添加额外的行为，或者直接替换原规则链或者节点逻辑。</li><li>它允许把一些公共的行为（例如：日志、安全、规则链执行情况跟踪、组件降级、组件重试、组件缓存）从业务逻辑中分离出来。</li><li>它允许你更好地控制和扩展 RuleGo 框架。</li></ul><p>2.另外增加生产环境的可靠性验证，增加了大量的单元测试（覆盖率 92%）和性能测试测试用例（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frulego.cc%2Fpages%2Ff60381%2F" target="_blank">链接</a>）。</p><p><strong>详细更新：</strong></p><h2>[v0.18.0] 2023/12/27</h2><ul><li>feat:增加 AOP 模块，它允许在不修改规则链或节点的原有逻辑的情况下，对规则链的执行添加额外的行为，或者直接替换原规则链或者节点逻辑。 提供以下增强点：Before Advice、After Advice、Around Advice、Start Advice、End Advice、Completed Advice、OnCreated Advice、OnReload Advice、OnDestroy Advice。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frulego.cc%2Fpages%2Fa1ed6c%2F" target="_blank">文档</a></li><li>feat:restApiCall 节点组件，增加 SSE(Server-Sent Events) 流式请求模式，支持对接大模型接口。</li><li>feat:增加 CI 自动化测试流程。</li><li>feat:增加大量单元测试，覆盖率达到 92%。</li><li>feat:增加性能<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frulego.cc%2Fpages%2Ff60381%2F" target="_blank">测试用例</a><span>&nbsp;</span>。</li><li>feat:sendEmail 节点组件，增加 ConnectTimeout 配置。</li><li>feat:/examples/server 示例工程，增加 -js -plugins -chain_id flags，支持启动加载 js 原生文件、插件和指定 mqtt 订阅处理规则链 ID。</li><li>fix:/examples/server 示例工程，规则链文件夹多层路径无法正常解析。</li><li>fix:/examples/server 示例工程，保存规则链，可能会出现旧规则链文件数据无法正确覆盖。</li><li>fix:metadata 可能会出现并发读写问题。</li><li>fix:规则引擎同步处理数据，有几率无法正确调用 onCompleted 回调函数。</li><li>fix:RuleChainPool nil 问题。</li><li>fix:mqtt endpoint，无法通过 header 得到主题。</li><li>refactor:onEnd 回调函数允许得到 relationType。</li><li>refactor:删除函数 Configuration.GetToString。</li><li>opt:部分组件，增强 nil 检查。</li><li>opt:dsl AdditionalInfo 字段，增加 omitempty json tag。</li><li>opt:run go fmt。</li></ul><h3>其他信息</h3><ul><li>欢迎在<span>&nbsp;</span><a href="https://gitee.com/rulego/rulego" target="_blank">Gitee</a><span>&nbsp;</span>或者<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frulego%2Frulego" target="_blank">Github</a><span>&nbsp;</span>上提交反馈或建议</li><li>如果喜欢这个项目，请给我们点个 Star</li><li>文档官网：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frulego.cc%2F" target="_blank">rulego.cc</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Mon, 25 Dec 2023 03:54:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272552/rulego-0-18-0-released</guid>
            <link>https://www.oschina.net/news/272552/rulego-0-18-0-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[NativeScript 8.6.2 发布，跨平台原生应用框架]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>NativeScript 8.6.2&nbsp;<span style="background-color:#ffffff; color:#333333">现已发布。NativeScript 使用户能够直接从 JavaScript 访问&nbsp;native API。目前，该框架为丰富的移动开发提供了 iOS 和 Android 运行时，并可用于多种不同的用例。</span></p><h4 style="margin-left:0; margin-right:0; text-align:left"><strong>Bug Fixes</strong></h4><ul><li><strong>android：</strong>以编程方式正确更改输入交互模式（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNativeScript%2FNativeScript%2Fissues%2F10434" target="_blank">#10434</a>）（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNativeScript%2FNativeScript%2Fcommit%2F07d2129f9c9b387c238c9a7c2da29b5690bac986" target="_blank">07d2129</a>）</li><li><strong>android：</strong>在 TextField 中使用 nativeTextViewProtected (&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNativeScript%2FNativeScript%2Fissues%2F10450" target="_blank">#10450</a>&nbsp;) (&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNativeScript%2FNativeScript%2Fcommit%2Fc5561d60df0fb093c88a30e072ffdc10f31015b8" target="_blank">c5561d6</a>&nbsp;)</li><li><strong>core：</strong>可继承属性更改 backstack 传播 (&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNativeScript%2FNativeScript%2Fissues%2F10438" target="_blank">#10438</a>&nbsp;) (&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNativeScript%2FNativeScript%2Fcommit%2F48b1856d6cb024ee2a42082e6cf0b8923b0cd8f4" target="_blank">48b1856</a>&nbsp;)</li><li><strong>core：</strong>安全重要检查 (&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNativeScript%2FNativeScript%2Fissues%2F10455" target="_blank">#10455</a>&nbsp;) (&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNativeScript%2FNativeScript%2Fcommit%2F172d3463a30cf1ee3727aaa42d6a33505332c6bf" target="_blank">172d346</a>&nbsp;)</li><li><strong>css：</strong>box-shadow 无处理 (&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNativeScript%2FNativeScript%2Fissues%2F10445" target="_blank">#10445</a>&nbsp;) (&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNativeScript%2FNativeScript%2Fcommit%2F67440095f4fafd68da528e9a88e6a42a86136d9c" target="_blank">6744009</a>&nbsp;)</li><li><strong>ios：</strong>字体变化设置不适用于标签（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNativeScript%2FNativeScript%2Fissues%2F10429" target="_blank">#10429</a>）（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNativeScript%2FNativeScript%2Fcommit%2F2cf166da5974083d1f1431624a4ff06ad648913b" target="_blank">2cf166d</a>）</li><li><strong>ios：</strong>边界角度不统一（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNativeScript%2FNativeScript%2Fissues%2F10437" target="_blank">#10437</a>）（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNativeScript%2FNativeScript%2Fcommit%2Faba3093e69004e44aa4afa1f245e7cfa3f6e7b97" target="_blank">aba3093</a>）</li><li><strong>ios：</strong>带有监听器的 ScrollView 已删除 scroll delegate（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNativeScript%2FNativeScript%2Fissues%2F10432" target="_blank">#10432</a>）（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNativeScript%2FNativeScript%2Fcommit%2F9fae9c428185ed2f99b3710e3fe16cf060bc072b" target="_blank">9fae9c4</a>）</li><li><strong>ios：</strong>shadow 不考虑 z-index (&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNativeScript%2FNativeScript%2Fissues%2F10433" target="_blank">#10433</a>&nbsp;) (&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNativeScript%2FNativeScript%2Fcommit%2F5a4bb7c38cc694a312135e44022d5a4c8dc79d1c" target="_blank">5a4bb7c</a>&nbsp;)</li><li><strong>time-picker：</strong>使用 valueChanged 正确处理小时和分钟上的 0 (&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNativeScript%2FNativeScript%2Fissues%2F10460" target="_blank">#10460</a>&nbsp;) (&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNativeScript%2FNativeScript%2Fcommit%2F4762699fa19fb81a766310724ad2cf0741b105c3" target="_blank">4762699</a>&nbsp;)</li></ul><h4><strong>Features</strong></h4><ul><li><strong>core：</strong>&nbsp;initRootView 事件 (&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNativeScript%2FNativeScript%2Fissues%2F10442" target="_blank">#10442</a>&nbsp;) (&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNativeScript%2FNativeScript%2Fcommit%2F82e9c67d3398c376be1641c5f23bf82a492a48c3" target="_blank">82e9c67</a>&nbsp;)</li><li><strong>core：</strong>新的<code>defaultVisualState</code> 属性选项可覆盖"normal"默认 visualState（&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNativeScript%2FNativeScript%2Fissues%2F10440" target="_blank">#10440</a>）（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNativeScript%2FNativeScript%2Fcommit%2F31ed40c17ab6ff026dde65c786a3c8ad8e625b3b" target="_blank">31ed40c</a>）</li></ul><p>更新说明：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNativeScript%2FNativeScript%2Freleases%2Ftag%2F8.6.2-core" target="_blank">https://github.com/NativeScript/NativeScript/releases/tag/8.6.2-core</a></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 25 Dec 2023 03:50:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272551/nativescript-8-6-2-released</guid>
            <link>https://www.oschina.net/news/272551/nativescript-8-6-2-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[REBUILD 3.5.3 已经发布，高度可定制化企业管理系统]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>REBUILD 3.5.3 已经发布，高度可定制化企业管理系统</p><p>此版本更新内容包括：</p><p>V3.5.3 Fix Version 修订版</p><ol><li>[新增] 报表中导出 <a href="https://gitee.com/link?target=https%3A%2F%2Fgetrebuild.com%2Fdocs%2Fadmin%2Fexcel-admin%23%25E5%258C%2585%25E5%2590%25AB%25E7%259B%25B8%25E5%2585%25B3%25E8%25AE%25B0%25E5%25BD%2595" target="_blank">相关记录</a> 支持 <a href="https://gitee.com/link?target=https%3A%2F%2Fgetrebuild.com%2Fdocs%2Fadmin%2Fentity%2Ffield-nreference" target="_blank">多引用</a> 字段</li><li>[修复] <a href="https://gitee.com/link?target=https%3A%2F%2Fgetrebuild.com%2Fdocs%2Fadmin%2Ftrigger%2Fdatavalidate" target="_blank">数据校验</a> 高级表达式中数字值未保持类型导致的问题</li><li>[修复] 高并发情况下可能导致的触发器不执行问题</li><li>[修复] <a href="https://gitee.com/link?target=https%3A%2F%2Fgetrebuild.com%2Fdocs%2Fmanual%2Fmobile-h5" target="_blank">手机版</a> 使用 iPhone 无法预览视频</li><li>[优化] <a href="https://gitee.com/link?target=https%3A%2F%2Fgetrebuild.com%2Fdocs%2Fadmin%2Ftrigger%2Fsendnotification" target="_blank">发送通知</a> 邮件内容支持 HTML</li></ol><blockquote><p>V3.5 更新详情 <a href="https://gitee.com/link?target=https%3A%2F%2Fgetrebuild.com%2Fdocs%2Fdev%2Fchangelog" target="_blank">CHANGELOG</a></p></blockquote><blockquote><p>一键安装包 <a href="https://gitee.com/link?target=https%3A%2F%2Fgetrebuild.com%2Fdownload" target="_blank">https://getrebuild.com/download</a> 安装指南 <a href="https://gitee.com/link?target=https%3A%2F%2Fgetrebuild.com%2Fdocs%2Fadmin%2Finstall" target="_blank">https://getrebuild.com/docs/admin/install</a></p></blockquote><p>详情查看：<a href="https://gitee.com/getrebuild/rebuild/releases/3.5.3">https://gitee.com/getrebuild/rebuild/releases/3.5.3</a></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 25 Dec 2023 03:44:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272550/rebuild-3-5-3-released</guid>
            <link>https://www.oschina.net/news/272550/rebuild-3-5-3-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[IoTOS-物联卡运营性能天花板-更新报告]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="margin-left:0; margin-right:0"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:#40485b">物联网卡国际化运营综合平台；多接口能力集成，极致同步算法、千万数据承载、国际化方案。多端系统支持、直充内充、阶梯限速、自动化运营方案、阶梯防超套、多支付方式；</span></p><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="margin-left:0; margin-right:0"><span style="color:#0e88eb">极致同步算法 (实测数据)：</span></p><p style="margin-left:0; margin-right:0"><span style="color:#40485b">&nbsp;&nbsp;&nbsp;&nbsp;每 20 秒触发一次同步，同步时间 20 秒内，配置【服务器 4 核 8G CPU30% 卡量 600+】</span></p><p style="margin-left:0; margin-right:0"><span style="color:#40485b"><span>&nbsp; &nbsp; ToB 卡量实测 17W+,&nbsp;配置【</span><span>服务</span><span>器 2</span><span>核 8G CPU20% 内存 60%</span><span>】</span></span></p><p style="margin-left:0; margin-right:0"><span style="color:#40485b"><span>&nbsp; &nbsp; 以上举例&nbsp;纯服务器，数据库、中间件无其他终端依赖。</span></span></p><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="margin-left:0; margin-right:0"><strong>一、发展历程</strong></p><p style="margin-left:0; margin-right:0">&nbsp;</p><p><span style="color:inherit">2023/06/18</span></p><p>&nbsp;</p><p style="color:inherit; margin-left:0; margin-right:0"><span style="color:inherit"><strong>开源 IoTOS 开源版 PC 项目，代码开源&nbsp;</strong></span></p><p style="margin-left:0; margin-right:0">在 Gitee 发布源码，荣获，推荐项目 200 点赞</p><p style="margin-left:0; margin-right:0">&nbsp;https://gitee.com/chinaiot/iotos</p><p><span style="color:inherit">2023/07/06</span></p><p>&nbsp;</p><p style="color:inherit; margin-left:0; margin-right:0"><span style="color:inherit"><strong>开源 IoTOS-App 移动端代码，开源</strong></span></p><p style="margin-left:0; margin-right:0">针对代理的移动端卡号管理诊断多终端部署</p><p style="margin-left:0; margin-right:0">安卓/ios/h5/小程序，等</p><p><span style="color:inherit">2023/07/09</span></p><p>&nbsp;</p><p style="color:inherit; margin-left:0; margin-right:0"><span style="color:inherit"><strong>开源 IoTOS-IM 消息中间件，开源</strong></span></p><p style="margin-left:0; margin-right:0">后续作为网络及时通信中间件</p><p><span style="color:inherit">2023/10/06</span></p><p>&nbsp;</p><p style="color:inherit; margin-left:0; margin-right:0"><span style="color:inherit"><strong>IoTOS-Plus 上线</strong></span></p><p style="margin-left:0; margin-right:0">国际化套餐设计（货币汇率/套餐多类型[流量、短信、语音、话费、套餐]/语言设置）</p><p style="margin-left:0; margin-right:0">套餐直充、内部充值运营，实现</p><p><span style="color:inherit">2023/11/06</span></p><p>&nbsp;</p><p style="color:inherit; margin-left:0; margin-right:0"><span style="color:inherit"><strong>IoTOS-Plus 更新</strong></span></p><p style="margin-left:0; margin-right:0">运营方案 [阶梯限速] [阶梯防超套]&nbsp;</p><p style="margin-left:0; margin-right:0">[达量停机-日用量/月用量] 触发灵活通知&nbsp;</p><p style="margin-left:0; margin-right:0">套餐组，拓展&nbsp;</p><p style="margin-left:0; margin-right:0">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;实名类型、实名顺序、卡密类型、套餐详情、用量算法、提前停机、移动端公告、</p><p style="margin-left:0; margin-right:0">充值金额/赠送金额，档位</p><p style="margin-left:0; margin-right:0">套餐，拓展</p><p style="margin-left:0; margin-right:0">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;无限量套餐、日租包、用量详情</p><p style="margin-left:0; margin-right:0"><span style="color:#6d67ff">2023/12/2X</span></p><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="color:inherit; margin-left:0; margin-right:0"><span style="color:#6d67ff"><strong>IoTOS-Plus-App 上线</strong></span></p><p style="margin-left:0; margin-right:0">卡号绑定、多卡切换、单卡余额、余额预存</p><p style="margin-left:0; margin-right:0">支付目前适配，微信、余额，支付</p><p style="margin-left:0; margin-right:0">单卡可开启自扣费，模式</p><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start"><strong>二、成绩成果</strong></p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">开源社区：</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">荣获 Gitee(码云) 推荐项目，获点赞 200+</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">半年度访问 IP 地址 6000+ 拉取下载 1000+</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">演示站点演示账号，登录 IP 1600+ 登录成功次数 2000</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">社区账号：</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">‘开源 IoTOS’ 公众号，关注人数 800+</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">‘开源 IoTOS’ 哔哩哔哩，投稿视频，播放量 10000+ 点赞/收藏 100+</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start"><strong>三、目前商业版功能介绍</strong></p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">常见物联网卡系统功能 ：</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">阶梯限速、阶梯防超套、达量断网，日用量/月用量、流量包套餐内部充值运营、用量记录、智能诊断、在线信息、自动化管理推送、多支付平台接入、</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">日租包套餐、 等。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">特色功能-智能诊断高适配 API：</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">依据上游 API 能力提供多 API 适配如，中国移动、中国联通、中国电信</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><div><img src="https://pic2.zhimg.com/v2-4734d893a554a43a610c69d4e656e349_b.jpg" width="1080" referrerpolicy="no-referrer"></div><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">(智能诊断，中国移动 )</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><div><img src="https://pic3.zhimg.com/v2-45da8cb56cb1025f20ea722ef72d8fde_b.jpg" width="1080" referrerpolicy="no-referrer"></div><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">(智能诊断，中国电信)</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><div><img src="https://pic2.zhimg.com/v2-2eeb4dd75011c4ab11470270238f4f91_b.jpg" width="1080" referrerpolicy="no-referrer"></div><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">(智能诊断，中国联通)</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">特色功能-国际化套餐汇率：</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">提供套餐正负差价类型，汇率本币支付实时同步国际汇率变更售价</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">多国家地区》运营商，套餐类型【流量/短信/语音/话费/带宽，等】</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><div><img src="https://pic1.zhimg.com/v2-9515361067867bf2b40efcf27335aa94_b.jpg" width="1080" referrerpolicy="no-referrer"></div><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">（套餐编辑，页面展示）</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">特色功能-极致同步算法：</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">依据目前市场未找到同配置能比较的系统。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">每 10 秒触发同步，同步时间 10 秒内，配置【服务器 4 核 8G CPU30% 卡量 600+】</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">ToB 卡量实测 17W+, 配置【服务器 2 核 8G CPU20% 内存 60%】</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">以上举例，纯服务器，数据库、中间件无其他终端依赖。(测试可直接下载开源版)</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">特色功能-安全数据加密：</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">全链路请求数据加密，安全守衞您的数据资产。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">(PS: 已见过多数系统将重要通道秘钥、代理等信息全数明文加载 ‘数据裸奔’)</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><div><img src="https://pic2.zhimg.com/v2-1efb1d9b9d23e9d0d2d7ce1278092bfd_b.jpg" width="1080" referrerpolicy="no-referrer"></div><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">(浏览器 F12 网络[network] 请求连接，查看，请求及返回数据，是否加密)</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start"><strong>四、商业版用户移动端页面预览</strong></p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">商业版移动：</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">将于 2023-12 底发布上线。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><div><img src="https://pic4.zhimg.com/v2-199e7801b843c26e640269e7e7bd4183_b.jpg" width="413" referrerpolicy="no-referrer"></div><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">（首页功能）</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><div><img src="https://pic4.zhimg.com/v2-7b0347475d1075a4f65734e42555fd1b_b.jpg" width="421" referrerpolicy="no-referrer"></div><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">（我的卡号-需用户注册后方可绑定）</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><div><img src="https://pic2.zhimg.com/v2-2252f15692708d471e468216af8851e5_b.jpg" width="409" referrerpolicy="no-referrer"></div><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">（套餐充值，多支付方式展示）</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><div><img src="https://pic3.zhimg.com/v2-5424a4b35b36f6e39021ccd98e70764a_b.jpg" width="427" referrerpolicy="no-referrer"></div><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">（订单记录，套餐记录、单卡余额消费记录）</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><div><img src="https://pic2.zhimg.com/v2-a8fbadd89c81328e9fe0ae0c66fc68c5_b.jpg" width="398" referrerpolicy="no-referrer"></div><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">（登录用户，页面，展示当前账号卡号）</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start"><strong>五、研发计划-2024 年</strong></p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">2024-03-18 商业版增值：</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">目前商业版定伙伴价 6800 年后 3-18 增值到 8800</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">（PC 端+移动端，终生升级，详细质询，微信号 iotos_top）</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">商户收款适配多商户收款自动切换：</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">适配多商户号灵活收款、订单退款返还、手动校验收款</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">数据统计</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">平台财务报表[复充率、激活增长、套餐销量排行]、</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">代理排行报表</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">自动化</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">微信推送: [代理账单、统计报表、用户充值提醒、活动券发放]，App 推送</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">ToB 方面</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">流量池管理、流量池规格配置、客户账单</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">ToC 方面</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">换卡申请、流量转移、批量充值余额</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">物联网商城</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">店铺、商品分类、列表、发货、物流、评价、活动、优惠券</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">分销，等。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start"><strong>六、感谢</strong></p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">感谢各位关注：</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">感谢各位，资源商、用户、开发者、同行，关注。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">我们将在新的一年中拿出新的成绩反馈给各位</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">服务宗旨</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">我们只作为辅助角色协作</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">不去触碰具体运营核心业务</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">为企业保留自身竞争核心与商业模式</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">仅做平台不出资源。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">‘分享利润’ 打造可共同发展盈利生态，合作共赢。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">提升服务体验、加强行业落地发展；</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">尽微薄之力助力物联网行业发展。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">服务永不止步，因为有您我们的服务更有意义。</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 25 Dec 2023 02:32:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272537/iotos-app-updated</guid>
            <link>https://www.oschina.net/news/272537/iotos-app-updated</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[go-carbon v2.3.0 发布，轻量级、语义化、对开发者友好的 Golang 时间处理库]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">go-carbon v2.3.0 圣诞节特别版发布，这应该是 2023 年的最后一个版本，祝大家圣诞节快乐！</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">carbon 是一个轻量级、零依赖、语义化、对开发者友好的 Golang 时间处理库，支持链式调用、农历和 gorm、xorm 等主流 orm。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">目前已被<span><span>&nbsp;</span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fyinggaozhen%2Fawesome-go-cn%23%25E6%2597%25A5%25E6%259C%259F%25E5%2592%258C%25E6%2597%25B6%25E9%2597%25B4" target="_blank">awesome-go-cn</a><span><span>&nbsp;</span></span>收录，如果您觉得不错，请给个 star 吧</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgolang-module%2Fcarbon" target="_blank">github.com/golang-module/carbon</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/golang-module/carbon" target="_blank">gitee.com/golang-module/carbon</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>更新日志</strong></p><ul><li>正式移除弃用的<code>FromStdTime</code>,<span>&nbsp;</span><code>Time2Carbon</code>,<span>&nbsp;</span><code>Carbon2Time</code><span>&nbsp;</span>方法</li><li>将 <code>ToANSICString</code><span>&nbsp;</span>方法更名为<span>&nbsp;</span><code>ToAnsicString</code></li><li>将<span>&nbsp;</span><code>CreateFromDateTime</code><span>&nbsp;</span>方法中的毫秒设置为 0</li><li>将<span>&nbsp;</span><code>CreateFromDate</code><span>&nbsp;</span>方法中的时分秒设置为 0</li><li>修复<span>&nbsp;</span><code>DiffInMonths</code><span>&nbsp;</span>方法计算错误</li><li>将<span>&nbsp;</span><code>GormDataType</code><span>&nbsp;</span>方法从<span>&nbsp;</span><code>json.go</code><span>&nbsp;</span>文件移动到<span>&nbsp;</span><code>database.go 文件</code></li><li><code>String</code><span>&nbsp;</span>方法根据设置的不同 tag 输出不同格式字符串</li><li>新增&nbsp;<code>LoadTag</code>&nbsp;方法<span style="background-color:#f6f6f6">，</span>利用反射通过设置 tag 进行 json 自定义编码和解码</li></ul></div>
                                    ]]>
            </description>
            <pubDate>Mon, 25 Dec 2023 02:30:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272536/go-carbon-2-3-0-released</guid>
            <link>https://www.oschina.net/news/272536/go-carbon-2-3-0-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[DBeaver 23.3.1 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff; color:#333333">DBeaver 是一个免费开源的通用数据库工具，适用于开发人员和数据库管理员。DBeaver 23.3.1 现已发布，更新内容如下：</span></p><ul style="margin-left:0; margin-right:1.5em"><li>SQL Editor： 
  <ul style="margin-left:0; margin-right:0"><li>默认情况下启用新的高亮显示和脚本验证</li><li>SQL 高亮显示性能得到改进</li><li>现在可以从 SQ Leditor 访问连接变量和系统环境变量</li><li>特殊字符的处理已修复</li></ul></li><li>Data Editor： 
  <ul style="margin-left:0; margin-right:0"><li>Value selector panel&nbsp;得到改进：可以使用「Ctrl+Tab」切换活动面板并更改上下文菜单中的活动值</li><li>增强了多条记录的高级粘贴功能</li><li>空间数据缩放得到改进</li></ul></li><li>ER Diagrams： 
  <ul style="margin-left:0; margin-right:0"><li>图表布局得到增强</li></ul></li><li>Data Transfer： 
  <ul style="margin-left:0; margin-right:0"><li>用户可以更改数据导出任务的输出格式</li><li>修复了从表到表的数据导出</li></ul></li><li>Security： 
  <ul style="margin-left:0; margin-right:0"><li>Oracle 驱动版本更新至 23.2.0.0</li></ul></li><li>General： 
  <ul style="margin-left:0; margin-right:0"><li>切换到 Eclipse 2023-12</li><li>包含语言和国家/地区的区域设置的语言检测已修复</li><li>Workspace opening 已修复</li><li>「Statistic」选项卡显示已修复</li><li>连接对话框中损坏的链接已修复</li><li>新的外键名称生成已修复</li></ul></li><li>Databases： 
  <ul style="margin-left:0; margin-right:0"><li>DB2：加载模式统计信息已修复</li><li>EDB：删除了 Database Navigator&nbsp;中的 Packages duplicating schemas&nbsp;</li><li>Firebird：增强功能和流程演示</li><li>Google Bigtable 名称已更正</li><li>Greenplum：支持&nbsp;Rows policies</li><li>MariaDB：Result fetch size&nbsp;已修复</li><li>PostgreSQL： 
    <ul style="margin-left:0; margin-right:0"><li>在分区 DDL 中显示索引和约束</li><li>增强了多个模式和多个表的备份</li></ul></li></ul></li></ul><p><span style="background-color:#ffffff; color:#333333">更新说明：</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdbeaver.io%2F2023%2F12%2F24%2Fdbeaver-23-3-1%2F" target="_blank">https://dbeaver.io/2023/12/24/dbeaver-23-3-1/</a></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 25 Dec 2023 02:25:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272534/dbeaver-23-3-1-released</guid>
            <link>https://www.oschina.net/news/272534/dbeaver-23-3-1-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[🔥圣诞礼物 MybatisPlus 发布 3.5.5 版本发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="135" src="https://oscimg.oschina.net/oscnet/up-22a692458674433c61b5cdfb11ad86f1adf.png" width="212" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span>Mybatis-Plus 是一款 MyBatis 的增强工具包，简化 CRUD 操作。</span><span>启动加载 XML 配置时注入单表 SQL 操作 ，为简化开发工作、提高生产率而生。Mybatis-Plus 启动注入动态 SQL 脚本、性能更优，让你专注业务快速敏捷开发。&nbsp;&nbsp;</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/baomidou/mybatis-plus-samples" target="_blank"><span>演示例子：</span><span>https://gitee.com/bao</span><span>midou/mybatis-plus-samples</span></a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbaomidou.com%2F" target="_blank">官方文档：https://baomidou.com/</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">🔥圣诞礼物🔥 新增支持 Trino,Presto,GBase8s-pg,SUNDB 数据库</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong><span>升级日志</span></strong></p><ul><li>fix: 修复配置 databaseId 失效</li><li>fix: 修复自增主键忽略注入错误忽略非自增主键注入问题</li><li>fix: 修复 ChainWrapper 模式下 GroupBy 生成多的逗</li><li>fix: 修复 selectOne 缓存问题</li><li>fix: 修复数据权限多表支持在某些场景下失效问题</li><li>fix: 修复生成器 mysql 类型转换器 point 转换错误</li><li>fix: 修复 kotlin 下无法使用父类属性操作</li><li>fix: 修复自动注入 DdlApplicationRunner 返回 null 导致的高版本 springboot 启动错误</li><li>fix: 修复生成器代码提示的 RuntimeUtils 安全性漏洞问题</li><li>feat: 新增 fastjson2 支持</li><li>feat: 升级 gradle-wrapper 至 8.4</li><li>feat: 升级 kotlin-gradle-plugin 至 1.9.21</li><li>feat: 升级 mybatis 至 3.5.15</li><li>feat: 升级 lombok 至 1.18.30</li><li>feat: 升级 spring-boot3 至 3.2.0</li><li>feat: 升级 spring-boot2 版本 mybatis-spring 至 2.1.2</li><li>feat: 升级 spring-boot3 版本 mybatis-spring 至 3.0.3</li><li>feat: 移除通用 service 中 saveOrUpdate 的事务</li><li>feat: 支持 Trino,Presto,GBase8s-pg,SUNDB 数据库</li></ul></div>
                                    ]]>
            </description>
            <pubDate>Mon, 25 Dec 2023 02:18:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272530/mybatisplus-3-5-5-released</guid>
            <link>https://www.oschina.net/news/272530/mybatisplus-3-5-5-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[🔥 支持跨过跳板机的 ssh 客户端 tssh 发布 v0.1.16]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ftrzsz%2Ftrzsz-ssh" target="_blank">https://github.com/trzsz/trzsz-ssh</a>&nbsp;tssh 发布 v0.1.16，支持自动交互，可用于「跨过」跳板机。</p><p>假设跳板机 J 后面有 A B C 三台服务器，一般是在本地配置跳板机 J ，登录 J 之后再手工选择 A B C 之一登录。<br> 用&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ftrzsz%2Ftrzsz-ssh" target="_blank">trzsz-ssh ( tssh )&nbsp;</a>就可以在本地直接配置 A B C 三台服务器，省去在跳板机 J 上的人工操作。<br> 以下是在&nbsp;<span style="color:#7f8c8d">~/.ssh/config</span>&nbsp;中配置 A B C 三台服务器的例子：</p><pre><code><span>Host</span><span style="color:#b5bd68">A</span><span>HostName</span><span style="color:#b5bd68">172.21.0.2  # 跳板机 J 的 IP</span><span>Port</span><span style="color:#b5bd68">2222            # 跳板机 J 的端口</span><span>User</span><span style="color:#b5bd68">username        # 跳板机 J 的用户名</span><span style="color:#969896">    # 以下是记住跳板机 J 的登录密码（ 通过 tssh --enc-secret 得到 ），推荐使用公钥登录。</span><span style="color:#969896">    #!! encPassword f48160ae63d6eaa5a53983e5f9afe6a0c99f3e791d48714ba3405bed88ca4495</span><span style="color:#969896">    #!! ExpectCount 1    # 有些跳板机只要交互一次就能登录目标服务器，这里配置交互次数</span><span style="color:#969896">    #!! ExpectPattern1 Opt&gt;  # 跳板机的输入提示符</span><span style="color:#969896">    #!! ExpectSendText1 172.22.0.11\r   # 有些跳板机可以直接输入目标服务器的 IP 登录，\r 代表回车</span><span>Host</span><span style="color:#b5bd68">B</span><span style="color:#969896">    # 前面的配置和 A 一样，可以直接复制下来（ ~/.ssh/config 支持通配符，可以简化配置 ）</span><span style="color:#969896">    #!! ExpectSendText1 172.22.0.12\r   # 这里配置目标服务器 B 的 IP</span><span>Host</span><span style="color:#b5bd68">C</span><span style="color:#969896">    # 前面的配置和 A 一样，可以直接复制下来</span><span style="color:#969896">    #!! ExpectSendText1 172.22.0.13\r   # 这里配置目标服务器 C 的 IP</span></code></pre><p>更详细的用法和说明，请参考下文：</p><hr><h2>tssh 简介</h2><ul><li><p style="margin-left:0; margin-right:0">你喜欢的 ssh 终端是否有好用的服务器管理功能？是否支持记住密码？是否有好用的文件传输工具？</p></li><li><p style="margin-left:0; margin-right:0">tssh 支持选择或搜索<span>&nbsp;</span><code>~/.ssh/config</code><span>&nbsp;</span>中配置的服务器，支持 vim 操作习惯，解决 ssh 终端的服务器管理问题。</p></li><li><p style="margin-left:0; margin-right:0">tssh 支持一次选择多台服务器，批量登录，并支持批量执行预先指定的命令，方便快速完成批量服务器操作。</p></li><li><p style="margin-left:0; margin-right:0">tssh 支持配置服务器登录密码，解决每次手工输入密码的麻烦（ 自己能控制的服务器，推荐使用公钥登录 ）。</p></li><li><p style="margin-left:0; margin-right:0">tssh 内置支持<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Ftrzsz.github.io%2Fcn%2F">trzsz</a><span>&nbsp;</span>(trz /tsz) 文件传输工具，一并解决了 Windows 中使用<span>&nbsp;</span><code>trzsz ssh</code><span>&nbsp;</span>上传速度很慢的问题。</p></li><li><p style="margin-left:0; margin-right:0"><em>在作者的 MacOS 上，使用<span>&nbsp;</span><code>trzsz ssh</code><span>&nbsp;</span>的上传速度在 10 MB/s 左右，而使用<span>&nbsp;</span><code>tssh</code><span>&nbsp;</span>可以到 80 MB/s 以上。</em></p></li></ul><h2>安装方法</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><strong><em>客户端安装<span>&nbsp;</span><code>trzsz-ssh ( tssh )</code><span>&nbsp;</span>的方法如下（ 任选其一 ）：</em></strong></p><ul><li><p style="margin-left:0; margin-right:0">Windows 可用<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Fscoop.sh%2F">scoop</a><span>&nbsp;</span>/<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Flearn.microsoft.com%2Fzh-cn%2Fwindows%2Fpackage-manager%2Fwinget%2F">winget</a><span>&nbsp;</span>/<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Fcommunity.chocolatey.org%2F">choco</a><span>&nbsp;</span>安装</p><code>scoop install tssh</code><span>&nbsp;</span>/<span>&nbsp;</span><code>winget install tssh</code><span>&nbsp;</span>/<span>&nbsp;</span><code>choco install tssh</code><div><div><pre><span><span style="color:#6f42c1">scoop</span><span style="color:#0086b3"><span style="color:#032f62">install </span></span><span style="color:#032f62">tssh</span></span></pre><div>
     &nbsp;
    </div></div></div><div><div><pre><span><span style="color:#6f42c1">winget</span><span style="color:#0086b3"><span style="color:#032f62">install </span></span><span style="color:#032f62">tssh</span></span></pre><div>
     &nbsp;
    </div></div></div><div><div><pre><span><span style="color:#6f42c1">choco</span><span style="color:#0086b3"><span style="color:#032f62">install </span></span><span style="color:#032f62">tssh</span></span></pre><div>
     &nbsp;
    </div></div></div></li><li><p style="margin-left:0; margin-right:0">MacOS 可用<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Fbrew.sh%2F">homebrew</a><span>&nbsp;</span>安装</p><code>brew install trzsz-ssh</code><div><div><pre><span><span style="color:#6f42c1">brew</span><span style="color:#032f62">update</span></span><span><span style="color:#6f42c1">brew</span><span style="color:#0086b3"><span style="color:#032f62">install </span></span><span style="color:#032f62">trzsz-ssh</span></span></pre><div>
     &nbsp;
    </div></div></div></li><li><p style="margin-left:0; margin-right:0">Ubuntu 可用 apt 安装</p><code>sudo apt install tssh</code><div><div><pre><span><span style="color:#0086b3">sudo </span>apt <span style="color:#d73a49">update</span><span>&amp;&amp;</span><span style="color:#0086b3">sudo </span>apt <span style="color:#0086b3"><span style="color:#d73a49">install</span></span>software-properties-common</span><span><span style="color:#0086b3">sudo </span><span style="color:#d73a49">add</span>-apt-repository ppa:trzsz/ppa <span>&amp;&amp;</span><span style="color:#0086b3">sudo </span>apt <span style="color:#d73a49">update</span></span><span><span style="color:#0086b3">sudo </span>apt <span style="color:#0086b3"><span style="color:#d73a49">install</span></span>tssh</span></pre><div>
     &nbsp;
    </div></div></div></li><li><p style="margin-left:0; margin-right:0">Debian 可用 apt 安装</p><code>sudo apt install tssh</code><div><div><pre><span><span style="color:#0086b3"><span style="color:#6f42c1">sudo</span></span><span style="color:#032f62">apt </span><span style="color:#0086b3"><span style="color:#032f62">install </span></span><span style="color:#032f62">curl gpg</span></span><span><span style="color:#6f42c1">curl</span><span style="color:#000080"><span style="color:#032f62">-s</span></span><span style="color:#032f62"></span><span style="color:#dd1144"><span style="color:#032f62">'https://keyserver.ubuntu.com/pks/lookup?op=get&amp;search=0x7074ce75da7cc691c1ae1a7c7e51d1ad956055ca'</span></span><span style="color:#032f62"></span><span style="color:#dd1144"><span style="color:#032f62">\</span></span></span><span style="color:#032f62"></span><span><span style="color:#032f62">  | gpg </span><span style="color:#000080"><span style="color:#032f62">--dearmor</span></span><span style="color:#032f62"></span><span style="color:#000080"><span style="color:#032f62">-o</span></span><span style="color:#032f62"> /usr/share/keyrings/trzsz.gpg</span></span><span><span style="color:#0086b3"><span style="color:#6f42c1">echo</span></span><span style="color:#dd1144"><span style="color:#032f62">'deb [signed-by=/usr/share/keyrings/trzsz.gpg] https://ppa.launchpadcontent.net/trzsz/ppa/ubuntu jammy main'</span></span><span style="color:#032f62"></span><span style="color:#dd1144"><span style="color:#032f62">\</span></span></span><span style="color:#032f62"></span><span><span style="color:#032f62">  | </span><span style="color:#0086b3"><span style="color:#032f62">sudo tee</span></span><span style="color:#032f62"> /etc/apt/sources.list.d/trzsz.list</span></span><span><span style="color:#0086b3"><span style="color:#6f42c1">sudo</span></span><span style="color:#032f62">apt update</span></span><span><span style="color:#0086b3"><span style="color:#6f42c1">sudo</span></span><span style="color:#032f62">apt </span><span style="color:#0086b3"><span style="color:#032f62">install </span></span><span style="color:#032f62">tssh</span></span></pre><div>
     &nbsp;
    </div></div></div></li><li><p style="margin-left:0; margin-right:0">Linux 可用 yum 安装</p><code>sudo yum install tssh</code><ul><li><p style="margin-left:0; margin-right:0">国内推荐使用<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.wlnmp.com%2Finstall">wlnmp</a><span>&nbsp;</span>源，安装 tssh 只需要添加 wlnmp 源（ 配置 epel 源不是必须的 ）：</p><div><div><pre><span><span style="color:#6f42c1">curl</span><span style="color:#000080"><span style="color:#032f62">-fsSL</span></span><span style="color:#032f62"></span><span style="color:#dd1144"><span style="color:#032f62">"https://sh.wlnmp.com/wlnmp.sh"</span></span><span style="color:#032f62"> | bash</span></span><span><span style="color:#0086b3"><span style="color:#6f42c1">sudo</span></span><span style="color:#032f62">yum </span><span style="color:#0086b3"><span style="color:#032f62">install </span></span><span style="color:#032f62">tssh</span></span></pre><div>
       &nbsp;
      </div></div></div></li><li><p style="margin-left:0; margin-right:0">也可使用<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Fgemfury.com%2F">gemfury</a><span>&nbsp;</span>源（ 只要网络通，所有操作系统通用 ）</p><div><div><pre><span><span style="color:#0086b3">echo</span><span style="color:#dd1144">'[trzsz]</span></span><span><span style="color:#dd1144">name=Trzsz Repo</span></span><span><span style="color:#dd1144">baseurl=https://yum.fury.io/trzsz/</span></span><span><span style="color:#dd1144">enabled=1</span></span><span><span style="color:#dd1144">gpgcheck=0'</span> | <span style="color:#0086b3">sudo tee</span> /etc/yum.repos.d/trzsz.repo</span><span><span style="color:#0086b3">sudo </span>yum <span style="color:#0086b3">install </span>tssh</span></pre><div>
       &nbsp;
      </div></div></div></li></ul></li><li><p style="margin-left:0; margin-right:0">ArchLinux 可用<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FJguer%2Fyay">yay</a><span>&nbsp;</span>安装</p><code>yay -S tssh</code><div><div><pre><span><span style="color:#6f42c1">yay</span><span style="color:#000080"><span style="color:#032f62">-Syu</span></span></span><span><span style="color:#6f42c1">yay</span><span style="color:#000080"><span style="color:#032f62">-S</span></span><span style="color:#032f62"> tssh</span></span></pre><div>
     &nbsp;
    </div></div></div></li><li><p style="margin-left:0; margin-right:0">用 Go 直接安装（ 要求 go 1.20 以上 ）</p><code>go install github.com/trzsz/trzsz-ssh/cmd/tssh@latest</code><div><div><pre><span><span style="color:#005cc5">go</span><span style="color:#0086b3">install </span>github.com/trzsz/trzsz-ssh/cmd/tssh<span style="color:#032f62">@latest</span></span></pre><div>
     &nbsp;
    </div></div></div><p style="margin-left:0; margin-right:0">安装后，<code>tssh</code><span>&nbsp;</span>程序一般位于<span>&nbsp;</span><code>~/go/bin/</code><span>&nbsp;</span>目录下（ Windows 一般在<span>&nbsp;</span><code>C:\Users\your_name\go\bin\</code><span>&nbsp;</span>）。</p></li><li><p style="margin-left:0; margin-right:0">可从<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Ftrzsz%2Ftrzsz-ssh%2Freleases">Releases</a><span>&nbsp;</span>中直接下载适用的版本</p><code>或者用 Go 编译（ 要求 go 1.20 以上 ）</code><div><div><pre><span><span style="color:#6f42c1">git</span><span style="color:#032f62">clone https://github.com/trzsz/trzsz-ssh.git</span></span><span><span style="color:#0086b3"><span style="color:#6f42c1">cd</span></span><span style="color:#032f62">trzsz-ssh</span></span><span><span style="color:#6f42c1">make</span></span><span><span style="color:#0086b3"><span style="color:#6f42c1">sudo</span></span><span style="color:#032f62">make </span><span style="color:#0086b3"><span style="color:#032f62">install</span></span></span></pre><div>
     &nbsp;
    </div></div></div></li></ul><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><strong><em>服务器上要安装<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Ftrzsz.github.io%2Fcn%2F">trzsz</a><span>&nbsp;</span>才能使用<span>&nbsp;</span><code>trz / tsz</code><span>&nbsp;</span>上传和下载，可任选其一安装：<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Ftrzsz.github.io%2Fcn%2Fgo">Go 版</a>（ ⭐ 推荐 ）、<a href="https://gitee.com/link?target=https%3A%2F%2Ftrzsz.github.io%2Fcn%2F">Py 版</a>、<a href="https://gitee.com/link?target=https%3A%2F%2Ftrzsz.github.io%2Fcn%2Fjs">Js 版</a>。</em></strong></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><em>如果服务器不安装<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Ftrzsz.github.io%2Fcn%2F">trzsz</a>，也能用<span>&nbsp;</span><code>tssh</code>，只是不使用<span>&nbsp;</span><code>trz / tsz</code><span>&nbsp;</span>上传和下载而已。</em></p><h2>使用方法</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><em><code>~/</code><span>&nbsp;</span>代表 HOME 目录。在 Windows 中，请将下文的<span>&nbsp;</span><code>~/</code><span>&nbsp;</span>替换成<span>&nbsp;</span><code>C:\Users\your_name\</code>。</em></p><ul><li><p style="margin-left:0; margin-right:0">在客户端生成密钥对，一般存放在<span>&nbsp;</span><code>~/.ssh/</code><span>&nbsp;</span>下（ 只要一种就可以了 ）：</p><ul><li><code>ssh-keygen -t ed25519</code><span>&nbsp;</span>生成 ED25519 的，私钥<span>&nbsp;</span><code>~/.ssh/id_ed25519</code>，公钥<span>&nbsp;</span><code>~/.ssh/id_ed25519.pub</code>。</li><li><code>ssh-keygen -t rsa -b 4096</code><span>&nbsp;</span>生成 RSA 的，私钥<span>&nbsp;</span><code>~/.ssh/id_rsa</code>，公钥<span>&nbsp;</span><code>~/.ssh/id_rsa.pub</code>。</li></ul></li><li><p style="margin-left:0; margin-right:0">登录服务器，将公钥（ 即前面生成密钥对时<span>&nbsp;</span><code>.pub</code><span>&nbsp;</span>后缀的文件内容 ）追加写入服务器上的<span>&nbsp;</span><code>~/.ssh/authorized_keys</code><span>&nbsp;</span>文件中。</p><ul><li><p style="margin-left:0; margin-right:0">一行代表一个客户端的公钥，注意<span>&nbsp;</span><code>~/.ssh/authorized_keys</code><span>&nbsp;</span>要设置正确的权限：</p><div><div><pre><span><span style="color:#0086b3"><span style="color:#032f62">chmod</span></span><span>700</span><span style="color:#032f62">~/.ssh</span><span><span style="color:#032f62">&amp;&amp;</span></span><span style="color:#0086b3"><span style="color:#032f62">chmod</span></span><span>600</span><span style="color:#032f62">~/.ssh/authorized_keys</span></span></pre><div>
       &nbsp;
      </div></div></div></li></ul></li><li><p style="margin-left:0; margin-right:0">在客户端配置好<span>&nbsp;</span><code>~/.ssh/config</code><span>&nbsp;</span>文件，举例：</p><div><div><pre><span><span style="color:#6f42c1">Host</span><span style="color:#032f62">alias1</span></span><span><span style="color:#6f42c1">HostName</span><span style="color:#032f62">192.168.0.1</span></span><span><span style="color:#6f42c1">Port</span><span style="color:#032f62">22</span></span><span><span style="color:#6f42c1">User</span><span style="color:#032f62">your_name</span></span><span><span style="color:#6f42c1">Host</span><span style="color:#032f62">alias2</span></span><span><span style="color:#6f42c1">HostName</span><span style="color:#032f62">192.168.0.2</span></span><span><span style="color:#6f42c1">Port</span><span style="color:#032f62">22</span></span><span><span style="color:#6f42c1">User</span><span style="color:#032f62">your_name</span></span></pre><div>
     &nbsp;
    </div></div></div></li><li><p style="margin-left:0; margin-right:0">使用<span>&nbsp;</span><code>tssh</code><span>&nbsp;</span>命令登录服务器，<code>tssh alias1</code><span>&nbsp;</span>命令登录在<span>&nbsp;</span><code>~/.ssh/config</code><span>&nbsp;</span>中<span>&nbsp;</span><code>alias1</code><span>&nbsp;</span>对应的服务器。</p></li><li><p style="margin-left:0; margin-right:0">直接执行<span>&nbsp;</span><code>tssh</code><span>&nbsp;</span>命令（ 不带参数 ），可以选择（ 搜索 ）<span>&nbsp;</span><code>~/.ssh/config</code><span>&nbsp;</span>中配置好的服务器并登录。</p></li></ul><h2>批量登录</h2><ul><li><p style="margin-left:0; margin-right:0">支持在<span>&nbsp;</span><code>iTerm2</code>（ 要开启<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Fiterm2.com%2Fpython-api-auth.html">Python API</a>，但不需要<span>&nbsp;</span><code>Allow all apps to connect</code><span>&nbsp;</span>），<code>tmux</code><span>&nbsp;</span>和<span>&nbsp;</span><code>Windows Terminal</code><span>&nbsp;</span>中一次选择多台服务器，批量登录，并支持批量执行预先指定的命令。</p></li><li><p style="margin-left:0; margin-right:0">按下<span>&nbsp;</span><code>Space</code>、<code>Ctrl+X</code><span>&nbsp;</span>等可以选中或取消当前服务器，若不能选中说明还不支持当前终端，请先运行<span>&nbsp;</span><code>tmux</code>。</p></li><li><p style="margin-left:0; margin-right:0">按下<span>&nbsp;</span><code>Ctrl+P</code><span>&nbsp;</span>会以分屏的方式批量登录，<code>Ctrl+W</code><span>&nbsp;</span>会打开新窗口批量登录，<code>Ctrl+T</code><span>&nbsp;</span>会打开新 tab 批量登录。</p></li><li><p style="margin-left:0; margin-right:0"><code>tssh</code><span>&nbsp;</span>不带参数启动可以批量登录服务器，若带<span>&nbsp;</span><code>-o RemoteCommand</code><span>&nbsp;</span>参数启动则可以批量执行指定的命令。支持执行指定命令之后进入交互式 shell，但<span>&nbsp;</span><code>Windows Terminal</code><span>&nbsp;</span>不支持分号<span>&nbsp;</span><code>;</code>，可以用<span>&nbsp;</span><code>|cat&amp;&amp;</code><span>&nbsp;</span>代替。举例：</p><div><div><pre><span><span style="color:#005cc5">tssh</span><span style="color:#000080">-t</span><span style="color:#000080">-o</span><span style="color:#008080">RemoteCommand</span><span>=</span><span style="color:#dd1144"><span style="color:#032f62">'ping -c3 trzsz.github.io ; bash'</span></span></span><span>tssh <span style="color:#000080">-t</span><span style="color:#000080">-o</span><span style="color:#008080">RemoteCommand</span><span>=</span><span style="color:#dd1144"><span style="color:#032f62">"ping -c3 trzsz.github.io |cat&amp;&amp; bash"</span></span></span></pre><div>
     &nbsp;
    </div></div></div></li></ul><h2>分组标签</h2><ul><li><p style="margin-left:0; margin-right:0">如果服务器数量很多，分组标签<span>&nbsp;</span><code>GroupLabels</code><span>&nbsp;</span>可以在按<span>&nbsp;</span><code>/</code><span>&nbsp;</span>搜索时，快速找到目标服务器。</p></li><li><p style="margin-left:0; margin-right:0">按<span>&nbsp;</span><code>/</code><span>&nbsp;</span>输入分组标签后，<code>回车</code>可以锁定；再按<span>&nbsp;</span><code>/</code><span>&nbsp;</span>可以输入另一个分组标签，<code>回车</code>再次锁定。</p></li><li><p style="margin-left:0; margin-right:0">在非搜索模式下，按<span>&nbsp;</span><code>E</code><span>&nbsp;</span>可以清空当前搜索标签；在搜索模式下按<span>&nbsp;</span><code>Ctrl + E</code><span>&nbsp;</span>也是同样效果。</p></li><li><p style="margin-left:0; margin-right:0">支持在一个<span>&nbsp;</span><code>GroupLabels</code><span>&nbsp;</span>中以空格分隔，配置多个分组标签；支持配置多个<span>&nbsp;</span><code>GroupLabels</code>。</p></li><li><p style="margin-left:0; margin-right:0">支持以通配符 * 的形式，在多个 Host 节点配置分组标签，<code>tssh</code><span>&nbsp;</span>会将所有的标签汇总起来。</p><div><div><pre><span><span style="color:#6a737d"># 以下 testAA 具有标签 group1 group2 label3 label4 group5，可以加上 `#!!` 前缀，以兼容标准 ssh</span></span><span><span style="color:#6f42c1">Host</span><span style="color:#032f62">test*</span></span><span><span style="color:#6a737d">    #!! GroupLabels group1 group2</span></span><span><span style="color:#6a737d">    #!! GroupLabels label3</span></span><span><span style="color:#6f42c1">Host</span><span style="color:#032f62">testAA</span></span><span><span style="color:#6a737d">    #!! GroupLabels label4 group5</span></span></pre><div>
     &nbsp;
    </div></div></div></li></ul><h2>自动交互</h2><ul><li><p style="margin-left:0; margin-right:0">支持类似<span>&nbsp;</span><code>expect</code><span>&nbsp;</span>的自动交互功能，可以在登录服务器之后，自动匹配服务器的输出，然后自动输入。</p><div><div><pre><span><span style="color:#6f42c1">Host</span><span style="color:#032f62">auto</span></span><span><span style="color:#6a737d">    #!! ExpectCount 3  # 配置自动交互的次数，默认是 0 即无自动交互</span></span><span><span style="color:#6a737d">    #!! ExpectTimeout 30  # 配置自动交互的超时时间（单位：秒），默认是 30 秒</span></span><span><span style="color:#6a737d">    #!! ExpectPattern1 *assword  # 配置第一个自动交互的匹配表达式</span></span><span><span style="color:#6a737d">    # 配置第一个自动输入（密文），填 tssh --enc-secret 编码后的字符串，会自动发送 \r 回车</span></span><span><span style="color:#6a737d">    #!! ExpectSendPass1 d7983b4a8ac204bd073ed04741913befd4fbf813ad405d7404cb7d779536f8b87e71106d7780b2</span></span><span><span style="color:#6a737d">    #!! ExpectPattern2 hostname*$  # 配置第二个自动交互的匹配表达式</span></span><span><span style="color:#6a737d">    #!! ExpectSendText2 echo tssh expect\r  # 配置第二个自动输入（明文），需要指定 \r 才会发送回车</span></span><span><span style="color:#6a737d">    # 以上 ExpectSendPass? 和 ExpectSendText? 只要二选一即可，若都配置则 ExpectSendPass? 的优先级更高</span></span><span><span style="color:#6a737d">    # --------------------------------------------------</span></span><span><span style="color:#6a737d">    # 在每个 ExpectPattern 匹配之前，可以配置一个或多个可选的匹配，用法如下：</span></span><span><span style="color:#6a737d">    #!! ExpectPattern3 hostname*$  # 配置第三个自动交互的匹配表达式</span></span><span><span style="color:#6a737d">    #!! ExpectSendText3 ssh xxx\r  # 配置第三个自动输入，也可以换成 ExpectSendPass3 然后配置密文</span></span><span><span style="color:#6a737d">    #!! ExpectCaseSendText3 yes/no y\r  # 在 ExpectPattern3 匹配之前，若遇到 yes/no 则发送 y 并回车</span></span><span><span style="color:#6a737d">    #!! ExpectCaseSendText3 y/n yes\r   # 在 ExpectPattern3 匹配之前，若遇到 y/n 则发送 yes 并回车</span></span><span><span style="color:#6a737d">    #!! ExpectCaseSendPass3 token d7... # 在 ExpectPattern3 匹配之前，若遇到 token 则解码并发送 d7...</span></span></pre><div>
     &nbsp;
    </div></div></div><ul><li>使用<span>&nbsp;</span><code>tssh --debug</code><span>&nbsp;</span>登录，可以看到<span>&nbsp;</span><code>expect</code><span>&nbsp;</span>捕获到的输出，以及其匹配结果和自动输入的交互。</li></ul></li></ul><h2>记住密码</h2><ul><li><p style="margin-left:0; margin-right:0">为了兼容标准 ssh ，密码可以单独配置在<span>&nbsp;</span><code>~/.ssh/password</code><span>&nbsp;</span>中，也可以在<span>&nbsp;</span><code>~/.ssh/config</code><span>&nbsp;</span>中加上<span>&nbsp;</span><code>#!!</code><span>&nbsp;</span>前缀。</p></li><li><p style="margin-left:0; margin-right:0">推荐使用前面公钥认证的方式，密码的安全性弱一些。如果必须要用密码，建议至少设置好权限，如：</p><div><div><pre><span><span style="color:#0086b3">chmod </span><span>700</span> ~<span>/.ssh </span><span><span>&amp;&amp;</span></span><span></span><span style="color:#0086b3"><span>chmod </span></span><span>600 ~/</span>.ssh<span>/password ~/</span>.ssh/config</span></pre><div>
     &nbsp;
    </div></div></div></li><li><p style="margin-left:0; margin-right:0">下面配置<span>&nbsp;</span><code>test1</code><span>&nbsp;</span>和<span>&nbsp;</span><code>test2</code><span>&nbsp;</span>的密码是<span>&nbsp;</span><code>123456</code>，其他以<span>&nbsp;</span><code>test</code><span>&nbsp;</span>开头的密码是<span>&nbsp;</span><code>111111</code>：</p><div><div><pre><span><span style="color:#6a737d"># 如果配置在 ~/.ssh/config 中，可以加上 `#!!` 前缀，以兼容标准 ssh</span></span><span><span style="color:#6f42c1">Host</span><span style="color:#032f62">test1</span></span><span><span style="color:#6a737d">    # 下面是运行 tssh --enc-secret 输入密码 123456 得到的密文串，每次运行结果不同。</span></span><span><span style="color:#6a737d">    #!! encPassword 756b17766f45bdc44c37f811db9990b0880318d5f00f6531b15e068ef1fde2666550</span></span><span style="color:#6a737d"></span><span><span style="color:#6a737d"># 如果配置在 ~/.ssh/password 中，则不需要考虑是否兼容标准 ssh</span></span><span><span style="color:#6f42c1">Host</span><span style="color:#032f62">test2</span></span><span><span style="color:#6a737d">    # 下面是运行 tssh --enc-secret 输入密码 123456 得到的密文串，每次运行结果不同。</span></span><span><span style="color:#6f42c1">encPassword</span><span style="color:#032f62">051a2f0fdc7d0d40794b845967df4c2d05b5eb0f25339021dc4e02a9d7620070654b</span></span><span style="color:#6a737d"></span><span><span style="color:#6a737d"># ~/.ssh/config 和 ~/.ssh/password 是支持通配符的，tssh 会使用第一个匹配到的值。</span></span><span><span style="color:#6a737d"># 这里希望 test2 使用区别于其他 test* 的密码，所以将 test* 放在了 test2 的后面。</span></span><span><span style="color:#6f42c1">Host</span><span style="color:#032f62">test*</span></span><span><span style="color:#6f42c1">Password</span><span style="color:#032f62">111111  # 支持明文密码，但是推荐使用 tssh --enc-secret 简单加密一下。</span></span></pre><div>
     &nbsp;
    </div></div></div></li><li><p style="margin-left:0; margin-right:0">如果启用了<span>&nbsp;</span><code>ControlMaster</code><span>&nbsp;</span>多路复用，或者是在<span>&nbsp;</span><code>Warp</code><span>&nbsp;</span>终端，需要使用前面<span>&nbsp;</span><code>自动交互</code><span>&nbsp;</span>的方式实现记住密码的效果。配置方式请参考前面<span>&nbsp;</span><code>自动交互</code>，加上<span>&nbsp;</span><code>Ctrl</code><span>&nbsp;</span>前缀即可，如：</p><div><div><pre><span><span style="color:#6f42c1">Host</span><span style="color:#032f62">ctrl</span></span><span><span style="color:#6a737d">    #!! CtrlExpectCount 1  # 配置自动交互的次数，一般只要输入一次密码</span></span><span><span style="color:#6a737d">    #!! CtrlExpectPattern1 *assword    # 配置密码提示语的匹配表达式</span></span><span><span style="color:#6a737d">    #!! CtrlExpectSendPass1 d7983b...  # 配置 tssh --enc-secret 编码后的密码</span></span></pre><div>
     &nbsp;
    </div></div></div></li><li><p style="margin-left:0; margin-right:0">支持记住私钥的<span>&nbsp;</span><code>Passphrase</code>（ 推荐使用<span>&nbsp;</span><code>ssh-agent</code><span>&nbsp;</span>）。支持与<span>&nbsp;</span><code>IdentityFile</code><span>&nbsp;</span>一起配置，支持使用私钥文件名代替 Host 别名设置通用密钥的<span>&nbsp;</span><code>Passphrase</code>。举例：</p><div><div><pre><span><span style="color:#6a737d"># IdentityFile 和 Passphrase 一起配置，可以加上 `#!!` 前缀，以兼容标准 ssh</span></span><span><span style="color:#6f42c1">Host</span><span style="color:#032f62">test1</span></span><span><span style="color:#6f42c1">IdentityFile</span><span style="color:#032f62">/path/to/id_rsa</span></span><span><span style="color:#6a737d">    # 下面是运行 tssh --enc-secret 输入密码 123456 得到的密文串，每次运行结果不同。</span></span><span><span style="color:#6a737d">    #!! encPassphrase 6f419911555b0cdc84549ae791ef69f654118d734bb4351de7e83163726ef46d176a</span></span><span style="color:#6a737d"></span><span><span style="color:#6a737d"># 在 ~/.ssh/config 中配置通用私钥 ~/.ssh/id_ed25519 对应的 Passphrase</span></span><span><span style="color:#6a737d"># 可以加上通配符 * 以避免 tssh 搜索和选择时，文件名出现在服务器列表中。</span></span><span><span style="color:#6f42c1">Host</span><span style="color:#032f62">id_ed25519*</span></span><span><span style="color:#6a737d">    # 下面是运行 tssh --enc-secret 输入密码 111111 得到的密文串，每次运行结果不同。</span></span><span><span style="color:#6a737d">    #!! encPassphrase 3a929328f2ab1be0ba3fccf29e8125f8e2dac6dab73c946605cf0bb8060b05f02a68</span></span><span style="color:#6a737d"></span><span><span style="color:#6a737d"># 在 ~/.ssh/password 中配置则不需要通配符*，也不会出现在服务器列表中。</span></span><span><span style="color:#6f42c1">Host</span><span style="color:#032f62">id_rsa</span></span><span><span style="color:#6f42c1">Passphrase</span><span style="color:#032f62">111111  # 支持明文密码，但是推荐使用 tssh --enc-secret 简单加密一下。</span></span></pre><div>
     &nbsp;
    </div></div></div></li></ul><h2>记住答案</h2><ul><li><p style="margin-left:0; margin-right:0">除了私钥和密码，还有一种登录方式，英文叫 keyboard interactive ，是服务器返回一些问题，客户端提供正确的答案就能登录，很多自定义的一次性密码就是利用这种方式实现的。</p></li><li><p style="margin-left:0; margin-right:0">如果答案是固定不变的，<code>tssh</code><span>&nbsp;</span>支持 「记住答案」。大部分都是只有一个问题，只要配置<span>&nbsp;</span><code>QuestionAnswer1</code><span>&nbsp;</span>即可。对于有多个问题的，每个问题答案可按序号进行配置，也可以按问题的 hex 编码进行配置。</p></li><li><p style="margin-left:0; margin-right:0">使用<span>&nbsp;</span><code>tssh --debug</code><span>&nbsp;</span>登录，会输出问题的 hex 编码，从而知道该如何使用 hex 编码进行配置。配置举例：</p><div><div><pre><span><span style="color:#6a737d"># 如果配置在 ~/.ssh/config 中，可以加上 `#!!` 前缀，以兼容标准 ssh</span></span><span><span style="color:#6f42c1">Host</span><span style="color:#032f62">test1</span></span><span><span style="color:#6a737d">    # 下面是运行 tssh --enc-secret 输入答案 `答案一` 得到的密文串，每次运行结果不同。</span></span><span><span style="color:#6f42c1">encQuestionAnswer1</span><span style="color:#032f62">482de7690ccc5229299ccadd8de1cb7c6d842665f0dc92ff947a302f644817baecbab38601</span></span><span><span style="color:#6f42c1">Host</span><span style="color:#032f62">test2</span></span><span><span style="color:#6a737d">    # 下面是运行 tssh --enc-secret 输入答案 `答案一` 得到的密文串，每次运行结果不同。</span></span><span><span style="color:#6f42c1">encQuestionAnswer1</span><span style="color:#032f62">43e86f1140cf6d8c786248aad95a26f30633f1eab671676b0860ecb5b1a64fb3ec5212dddf</span></span><span><span style="color:#6f42c1">QuestionAnswer2</span><span style="color:#032f62">答案二  # 支持明文答案，但是推荐使用 tssh --enc-secret 简单加密一下。</span></span><span><span style="color:#6f42c1">QuestionAnswer3</span><span style="color:#032f62">答案三</span></span><span><span style="color:#6f42c1">Host</span><span style="color:#032f62">test3</span></span><span><span style="color:#6a737d">    # 其中 `6e616d653a20` 是问题 `name: ` 的 hex 编码，`enc` 前缀代表配置的是密文串。</span></span><span><span style="color:#6a737d">    # 下面是运行 tssh --enc-secret 输入答案 `my_name` 得到的密文串，每次运行结果不同。</span></span><span><span style="color:#6f42c1">enc6e616d653a20</span><span style="color:#032f62">775f2523ab747384e1661aba7779011cb754b73f2e947672c7fd109607b801d70902d1</span></span><span><span style="color:#6f42c1">636f64653a20</span><span style="color:#032f62">my_code  # 其中 `636f64653a20` 是问题 `code: ` 的 hex 编码, `my_code` 是明文答案</span></span></pre><div>
     &nbsp;
    </div></div></div></li><li><p style="margin-left:0; margin-right:0">如果启用了<span>&nbsp;</span><code>ControlMaster</code><span>&nbsp;</span>多路复用，或者是在<span>&nbsp;</span><code>Warp</code><span>&nbsp;</span>终端，请参考前面<span>&nbsp;</span><code>自动交互</code><span>&nbsp;</span>加<span>&nbsp;</span><code>Ctrl</code><span>&nbsp;</span>前缀来实现。</p></li></ul><h2>可选配置</h2><ul><li><p style="margin-left:0; margin-right:0">支持在<span>&nbsp;</span><code>~/.tssh.conf</code>（ Windows 是<span>&nbsp;</span><code>C:\Users\your_name\.tssh.conf</code><span>&nbsp;</span>）中进行以下自定义配置：</p><div><div><pre><span><span style="color:#6a737d"># SSH 配置路径，默认为 ~/.ssh/config</span></span><span><span style="color:#6f42c1">ConfigPath</span> = ~/.ssh/config</span><span><span style="color:#6a737d"># 扩展配置路径，默认为 ~/.ssh/password</span></span><span><span style="color:#6f42c1">ExConfigPath</span> = ~/.ssh/password</span><span><span style="color:#6a737d"># trz 上传时，对话框打开的路径，为空时打开上次的路径， 默认为空</span></span><span><span style="color:#6f42c1">DefaultUploadPath</span> = ~/Downloads</span><span><span style="color:#6a737d"># tsz 下载时，自动保存的路径，为空时弹出对话框手工选择，默认为空</span></span><span><span style="color:#6f42c1">DefaultDownloadPath</span> = ~/Downloads</span><span><span style="color:#6a737d"># tssh 搜索和选择服务器时，每页显示的记录数，默认为 10</span></span><span><span style="color:#6f42c1">PromptPageSize</span> = <span>10</span></span><span><span style="color:#6a737d"># tssh 搜索和选择服务器时，默认是类似 vim 的 normal 模式，想默认进入搜索模式可如下配置：</span></span><span><span style="color:#6f42c1">PromptDefaultMode</span> = search</span><span><span style="color:#6a737d"># tssh 搜索和选择服务器时，详情中显示的配置列表，默认如下：</span></span><span><span style="color:#6f42c1">PromptDetailItems</span> = Alias Host Port User GroupLabels IdentityFile ProxyCommand ProxyJump RemoteCommand</span><span><span style="color:#6a737d"># 登录后自动设置终端标题，退出后不会重置，你需要参考下文在本地 shell 中设置 PROMPT_COMMAND</span></span><span><span style="color:#6f42c1">SetTerminalTitle</span> = <span style="color:#005cc5">Yes</span></span></pre><div>
     &nbsp;
    </div></div></div></li></ul><h2>其他功能</h2><ul><li><p style="margin-left:0; margin-right:0">使用<span>&nbsp;</span><code>-f</code><span>&nbsp;</span>后台运行时，可以加上<span>&nbsp;</span><code>--reconnect</code><span>&nbsp;</span>参数，在后台进程因连接断开等而退出时，会自动重新连接。</p></li><li><p style="margin-left:0; margin-right:0">使用<span>&nbsp;</span><code>--dragfile</code><span>&nbsp;</span>启用拖拽上传功能，想默认启用则可以在<span>&nbsp;</span><code>~/.ssh/config</code><span>&nbsp;</span>或<span>&nbsp;</span><code>ExConfigPath</code><span>&nbsp;</span>中配置：</p><div><div><pre><span><span style="color:#6f42c1">Host</span><span style="color:#032f62">*</span></span><span><span style="color:#6a737d">  # 如果配置在 ~/.ssh/config 中，可以加上 `#!!` 前缀，以兼容标准 ssh</span></span><span><span style="color:#6f42c1">EnableDragFile</span><span style="color:#032f62">Yes</span></span></pre><div>
     &nbsp;
    </div></div></div></li><li><p style="margin-left:0; margin-right:0">使用<span>&nbsp;</span><code>--zmodem</code><span>&nbsp;</span>启用<span>&nbsp;</span><code>rz / sz</code><span>&nbsp;</span>功能，想默认启用则可以在<span>&nbsp;</span><code>~/.ssh/config</code><span>&nbsp;</span>或<span>&nbsp;</span><code>ExConfigPath</code><span>&nbsp;</span>中配置：</p><div><div><pre><span><span style="color:#6f42c1">Host</span><span style="color:#032f62">server0</span></span><span><span style="color:#6a737d">  # 如果配置在 ~/.ssh/config 中，可以加上 `#!!` 前缀，以兼容标准 ssh</span></span><span><span style="color:#6f42c1">EnableZmodem</span><span style="color:#032f62">Yes</span></span></pre><div>
     &nbsp;
    </div></div></div><ul><li><p style="margin-left:0; margin-right:0">需要在客户端（ 本地电脑 ）上安装<span>&nbsp;</span><code>lrzsz</code>，Windows 可以从<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Ftrzsz%2Flrzsz-win32%2Freleases">lrzsz-win32</a><span>&nbsp;</span>下载解压并加到<span>&nbsp;</span><code>PATH</code><span>&nbsp;</span>中，也可以如下安装：</p><div><div><pre><span>scoop <span style="color:#d73a49">install</span> https://trzsz.github.io/lrzsz.json</span><span>choco <span style="color:#d73a49">install</span> lrzsz <span style="color:#6a737d">--version=0.12.21</span></span></pre><div>
       &nbsp;
      </div></div></div></li><li><p style="margin-left:0; margin-right:0">关于<span>&nbsp;</span><code>rz / sz</code><span>&nbsp;</span>进度条，己传大小和传输速度会有一点偏差，它的主要作用只是指示传输正在进行中。</p></li></ul></li><li><p style="margin-left:0; margin-right:0">使用<span>&nbsp;</span><code>-oEnableTrzsz=No</code><span>&nbsp;</span>禁用 trzsz 功能，想默认禁用则可以在<span>&nbsp;</span><code>~/.ssh/config</code><span>&nbsp;</span>或<span>&nbsp;</span><code>ExConfigPath</code><span>&nbsp;</span>中配置：</p><div><div><pre><span><span style="color:#6f42c1">Host</span><span style="color:#032f62">server1</span></span><span><span style="color:#6a737d">  # 如果配置在 ~/.ssh/config 中，可以加上 `#!!` 前缀，以兼容标准 ssh</span></span><span><span style="color:#6f42c1">EnableTrzsz</span><span style="color:#032f62">No</span></span></pre><div>
     &nbsp;
    </div></div></div></li><li><p style="margin-left:0; margin-right:0">上文说的 「记住密码」 和 「记住答案」，只要在配置项前面加上<span>&nbsp;</span><code>enc</code><span>&nbsp;</span>则可以配置密文，防止被人窥屏。并且，密文可以解决密码含有<code>#</code>的问题。</p><ul><li>运行<span>&nbsp;</span><code>tssh --enc-secret</code>，输入密码或答案，可得到用于配置的密文（ 相同密码每次运行结果不同 ）：</li></ul><div><div><pre><span><span style="color:#6f42c1">Host</span><span style="color:#032f62">server2</span></span><span><span style="color:#6a737d">  # 如果配置在 ~/.ssh/config 中，可以加上 `#!!` 前缀，以兼容标准 ssh</span></span><span><span style="color:#6f42c1">encPassword</span><span style="color:#032f62">de88c4dbdc95d85303682734e2397c4d8dd29bfff09ec53580f31dd40291fc8c7755</span></span><span><span style="color:#6f42c1">encQuestionAnswer1</span><span style="color:#032f62">93956f6e7e9f2aef3af7d6a61f7046dddf14aa4bbd9845dbb836fe3782b62ac0d89f</span></span></pre><div>
     &nbsp;
    </div></div></div></li><li><p style="margin-left:0; margin-right:0">运行<span>&nbsp;</span><code>tssh --new-host</code><span>&nbsp;</span>可以在 TUI 界面轻松添加 SSH 配置，并且完成后可以立即登录。</p></li><li><p style="margin-left:0; margin-right:0">运行<span>&nbsp;</span><code>tssh --install-trzsz</code><span>&nbsp;</span>可以将<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Ftrzsz%2Ftrzsz-go">trzsz</a><span>&nbsp;</span>(<span>&nbsp;</span><code>trz</code><span>&nbsp;</span>/<span>&nbsp;</span><code>tsz</code><span>&nbsp;</span>) 安装到服务器上。</p><ul><li>默认安装到<span>&nbsp;</span><code>~/.local/bin/</code><span>&nbsp;</span>目录，可以通过<span>&nbsp;</span><code>--install-path /path/to/install</code><span>&nbsp;</span>指定安装目录。</li><li>若<span>&nbsp;</span><code>--install-path</code><span>&nbsp;</span>安装目录含有<span>&nbsp;</span><code>~/</code>，则必须加上单引号，如<span>&nbsp;</span><code>--install-path '~/path'</code>。</li><li>若获取<span>&nbsp;</span><code>trzsz</code><span>&nbsp;</span>的最新版本号失败，可以通过<span>&nbsp;</span><code>--trzsz-version x.x.x</code><span>&nbsp;</span>参数自行指定。</li><li>若下载<span>&nbsp;</span><code>trzsz</code><span>&nbsp;</span>的安装包失败，可以自行下载并通过<span>&nbsp;</span><code>--trzsz-bin-path /path/to/trzsz.tar.gz</code><span>&nbsp;</span>参数指定。</li><li>注意：<code>--install-trzsz</code><span>&nbsp;</span>不支持 Windows 服务器，不支持跳板机（ 除非以<span>&nbsp;</span><code>ProxyJump</code><span>&nbsp;</span>跳过 ）。</li></ul></li><li><p style="margin-left:0; margin-right:0">关于修改终端标题，其实无需<span>&nbsp;</span><code>tssh</code><span>&nbsp;</span>就能实现，只要在服务器的 shell 配置文件中（如<span>&nbsp;</span><code>~/.bashrc</code>）配置：</p><div><div><pre><span><span style="color:#888888"><span style="color:#6a737d"># 设置固定的服务器标题</span></span></span><span><span style="color:#008080">PROMPT_COMMAND</span><span>=</span><span style="color:#dd1144">'echo -ne <span style="color:#032f62">"\033]0;固定的服务器标题\007"</span>'</span></span><span><span style="color:#888888"><span style="color:#6a737d"># 根据环境变量动态变化的标题</span></span></span><span><span style="color:#008080">PROMPT_COMMAND</span><span>=</span><span style="color:#dd1144">'echo -ne <span style="color:#032f62">"\033]0;${USER}@${HOSTNAME}: ${PWD}\007"</span>'</span></span></pre><div>
     &nbsp;
    </div></div></div><ul><li>如果在<span>&nbsp;</span><code>~/.tssh.conf</code><span>&nbsp;</span>中设置了<span>&nbsp;</span><code>SetTerminalTitle = Yes</code>，则会在登录后自动设置终端标题，但是服务器上的<span>&nbsp;</span><code>PROMPT_COMMAND</code><span>&nbsp;</span>会覆盖<span>&nbsp;</span><code>tssh</code><span>&nbsp;</span>设置的标题。</li><li>在<span>&nbsp;</span><code>tssh</code><span>&nbsp;</span>退出后不会重置为原来的标题，你需要在本地 shell 中设置<span>&nbsp;</span><code>PROMPT_COMMAND</code>，让它覆盖<span>&nbsp;</span><code>tssh</code><span>&nbsp;</span>设置的标题。</li></ul></li></ul><h2>快捷键</h2><table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:0px; border:none; box-sizing:border-box; color:#40485b; display:block; font-family:-apple-system,&quot;system-ui&quot;,&quot;Segoe UI&quot;,Helvetica,Arial,&quot;Apple Color Emoji&quot;,&quot;Segoe UI Emoji&quot;,&quot;Segoe UI Symbol&quot;,&quot;Liberation Sans&quot;,&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,&quot;Hiragino Sans GB&quot;,&quot;Wenquanyi Micro Hei&quot;,&quot;WenQuanYi Zen Hei&quot;,&quot;ST Heiti&quot;,SimHei,SimSun,&quot;WenQuanYi Zen Hei Sharp&quot;,sans-serif; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; line-height:inherit; margin:0px 0px 16px; max-width:100%; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:634px; word-break:initial; word-spacing:0px"><tbody><tr><th>操作</th><th>全局快捷键</th><th>非搜索快捷键</th><th>快捷键描述</th></tr></tbody><tbody><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Confirm</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Enter</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">&nbsp;</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">确认并登录</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Quit/Exit</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Ctrl+C Ctrl+Q</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">q Q</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">取消并退出</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Move Prev</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Ctrl+K Shift+Tab ↑</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">k K</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">往上移光标</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Move Next</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Ctrl+J Tab ↓</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">j J</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">往下移光标</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Page Up</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Ctrl+H Ctrl+U Ctrl+B PageUp ←</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">h H u U b B</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">往上翻一页</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Page Down</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Ctrl+L Ctrl+D Ctrl+F PageDown →</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">l L d D f F</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">往下翻一页</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Goto Home</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Home</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">g</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">跳到第一行</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Goto End</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">End</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">G</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">跳到最尾行</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">EraseKeys</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Ctrl+E</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">e E</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">擦除搜索关键字</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">TglSearch</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">/</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">&nbsp;</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">切换搜索功能</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Tgl Help</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">?</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">&nbsp;</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">切换帮助信息</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">TglSelect</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Ctrl+X Ctrl+Space Alt+Space</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Space x X</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">切换选中状态</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">SelectAll</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Ctrl+A</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">a A</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">全选当前页</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">SelectOpp</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Ctrl+O</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">o O</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">反选当前页</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Open Wins</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Ctrl+W</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">w W</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">新窗口批量登录</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Open Tabs</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Ctrl+T</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">t T</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">新 Tab 批量登录</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Open Pane</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Ctrl+P</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">p P</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">分屏批量登录</td></tr></tbody></table><h2>故障排除</h2><ul><li><p style="margin-left:0; margin-right:0">在 Warp 终端，分块 Blocks 的功能需要将<span>&nbsp;</span><code>tssh</code><span>&nbsp;</span>重命名为<span>&nbsp;</span><code>ssh</code>，推荐建个软链接（ 对更新友好 ）：</p><div><div><pre><span>sudo ln -sv $(<span>which</span> tssh) /usr/<span>local</span>/bin/ssh</span></pre><div>
     &nbsp;
    </div></div></div><ul><li><p style="margin-left:0; margin-right:0">软链后，<code>ssh -V</code><span>&nbsp;</span>应输出<span>&nbsp;</span><code>trzsz ssh</code><span>&nbsp;</span>加版本号，如果不是，说明软链不成功，或者在<span>&nbsp;</span><code>PATH</code><span>&nbsp;</span>中<span>&nbsp;</span><code>openssh</code><span>&nbsp;</span>的优先级更高，你要软链到另一个地方或者调整<span>&nbsp;</span><code>PATH</code><span>&nbsp;</span>的优先级。</p></li><li><p style="margin-left:0; margin-right:0">软链后，要直接使用<span>&nbsp;</span><code>ssh</code>，它等价于<span>&nbsp;</span><code>tssh</code>。如果还是用<span>&nbsp;</span><code>tssh</code><span>&nbsp;</span>是不会支持分块 Blocks 功能的。</p></li><li><p style="margin-left:0; margin-right:0"><code>--dragfile</code><span>&nbsp;</span>参数可能会让 Warp 分块功能失效，请参考前文配置<span>&nbsp;</span><code>EnableDragFile</code><span>&nbsp;</span>来启用拖拽功能。</p></li><li><p style="margin-left:0; margin-right:0">拖拽文件或目录进入 Warp 终端后，可能不会立即触发上传，需要多按一次<code>回车</code>键，才会上传。</p></li></ul></li><li><p style="margin-left:0; margin-right:0">如果你在使用 Windows7 或者旧版本的 Windows10 等，遇到<span>&nbsp;</span><code>enable virtual terminal failed</code><span>&nbsp;</span>的错误。</p><ul><li>可以尝试在<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.cygwin.com%2F">Cygwin</a>、<a href="https://gitee.com/link?target=https%3A%2F%2Fwww.msys2.org%2F">MSYS2</a><span>&nbsp;</span>或<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.atlassian.com%2Fgit%2Ftutorials%2Fgit-bash">Git Bash</a><span>&nbsp;</span>内使用<span>&nbsp;</span><code>tssh</code>。</li></ul></li><li><p style="margin-left:0; margin-right:0">如果在<span>&nbsp;</span><code>~/.ssh/config</code><span>&nbsp;</span>中配置了<span>&nbsp;</span><code>tssh</code><span>&nbsp;</span>特有的配置项后，标准<span>&nbsp;</span><code>ssh</code><span>&nbsp;</span>报错<span>&nbsp;</span><code>Bad configuration option</code>。</p><ul><li>可以在出错配置项中加上前缀<span>&nbsp;</span><code>#!!</code>，标准<span>&nbsp;</span><code>ssh</code><span>&nbsp;</span>会将它当作注释，而<span>&nbsp;</span><code>tssh</code><span>&nbsp;</span>则会认为它是有效配置之一。</li></ul></li></ul><h2>录屏演示</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://oscimg.oschina.net/oscnet/up-54f8b9038c71ec6266ed9ea132201d719a2.gif" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="500" src="https://oscimg.oschina.net/oscnet/up-8d4a7807c70fece1f4ad71aafa38e7ca261.gif" width="800" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 25 Dec 2023 02:15:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272527/tssh-0-1-16-released</guid>
            <link>https://www.oschina.net/news/272527/tssh-0-1-16-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[可替代 Spring，国产 Solon v2.6.3 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h2>Solon 是什么框架？</h2><p style="color:#24292e; text-align:start"><strong>Java 新的"生态级"应用开发框架</strong>。从零开始构建，有自己的标准规范与开放生态（历时六年，具备全球第二级别的生态规模）。</p><h2>相对于 Spring，有什么特点？</h2><ul><li>启动快 5 ～ 10 倍。<span>&nbsp;</span><strong>（更快）</strong></li><li>qps 高 2～ 3 倍。<span>&nbsp;</span><strong>（更高）</strong></li><li>低流量内存节省 1/3 ~ 1/2。<span>&nbsp;</span><strong>（更少）</strong></li><li>打包可以缩小到 1/2 ~ 1/10；比如，300Mb 的变成了 23Mb。<span>&nbsp;</span><strong>（更小）</strong></li><li>同时支持 jdk8, jdk11, jdk17, jdk21,<span>&nbsp;</span><strong>graalvm native image</strong></li></ul><h2>入门探索视频（用户录制）：</h2><p><iframe frameborder="0" height="400" scrolling="no" src="https://player.bilibili.com/player.html?aid=938467339&amp;bvid=BV1RT4y1a7U5&amp;cid=583394292&amp;page=1" style="box-sizing: border-box; font-size: 16px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; color: rgb(36, 41, 46); font-family: -apple-system, &quot;system-ui&quot;, &quot;Segoe UI&quot;, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; text-align: start; background-color: rgb(255, 255, 255);" width="700" referrerpolicy="no-referrer"></iframe></p><h2>最近更新了什么？</h2><ul><li>发布 Solon FaaS</li><li>修复 solon.luffy 插件 JtFunctionLoaderClasspath 可能会出现 null 异常的问题</li><li>修复 solon.luffy 插件 XFun.callFile 的执行兼容性（添加 file_id 赋值）</li><li>修复 Solon.cfg().stopSafe() 自动配置失效的问题</li><li>修复 war 部署时 contextPath 自动识别失效的问题</li><li>调整 contextPath 配置，支持 '!' 开头（表示强制模式，即不再支持旧的地址请求）</li><li>调整 solon.net 把 socketd 包改为 provided</li><li>调整 Utils::mime 添加默认处理</li><li>添加 ConvertUtil 对 Byte 类型的默认解析</li><li>smart-http 升为 1.3.6</li><li>luffy 升为 1.7.2</li><li>folkmq 升为 1.0.22</li><li>socket.d 升为 2.1.14</li><li>sqltoy 升为 5.2.86</li><li>beetl 升为 3.15.12.RELEASE</li><li>beetlsql 升为 3.27.3-RELEASE</li><li>netty 升为 4.1.101.Final</li></ul><h2>项目仓库地址？</h2><ul><li>gitee：<a href="https://gitee.com/noear/solon">https://gitee.com/noear/solon</a></li><li>github：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnoear%2Fsolon" target="_blank">https://github.com/noear/solon</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Mon, 25 Dec 2023 02:07:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272522/solon-2-6-3-released</guid>
            <link>https://www.oschina.net/news/272522/solon-2-6-3-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[x-easypdf v3.0.0-BETA 版本发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>本次更新内容如下：</p><p>1. 【pdfbox 模块】整体重构，简化类名，顺序渲染</p><p>2. 【pdfbox 模块】支持中文字体名称设置</p><p>3. 【pdfbox 模块】支持全局边距设置</p><p>4.【pdfbox 模块】文本组件支持自动处理\n、\t 等特殊字符，无须自行处理</p><p>5.【pdfbox 模块】抽象出分析器、提取器、处理器，逻辑更清晰</p><p>6.【pdfbox 模块】使用 pdfbox3.0.1 最新依赖</p><p>7.【fop 模块】简化类名</p><p>&nbsp;</p><p>本次更新【pdfbox 模块】暂未提供表格组件，暂未提交中央仓库，欢迎在<a href="https://gitee.com/dromara/x-easypdf/releases/tag/v3.0.0-BETA">gitee</a>上下载试用，更欢迎大家提出宝贵意见</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 25 Dec 2023 01:58:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272519/x-easypdf-3-0-0-beta</guid>
            <link>https://www.oschina.net/news/272519/x-easypdf-3-0-0-beta</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[年度收尾 C++ Web 框架 Paozhu 1.5.4 版，支持 PHP、HTTP2 稳定百万压测]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>C++ Web 框架 Paozhu，发布一年，经过几次不停重构，目前百万压测没有问题。</p><p>1.5.4 版，大范围重构、代码更加现代化和稳定，全球几乎唯一自己开发解析 http2 协议的 C++框架，跟系统高度集成没有性能开销。</p><p>作为新的一代服务器容器程序，Paozhu 可以承担 PHP 开发迁移，老代码可以不动，新业务使用 C++20 等现代快速开发，Paozhu 使用 FastCGI+PHP-FPM 方式，C++20 完善，开发速度也可以比肩脚本语言，加上三大编译器支持内存泄漏检查 asan，能过编译器，运行起来就没有问题，有问题可以自动定位。</p><p>Paozhu C++ Web 框架，内置强大的 C++ ORM 模块，简单易用，自动从数据库生成 ORM 实体类，内置分页，几行代码可以代替 Java 几百行代码。</p><p>Paozhu C++ Web 框架经典内容列表，包括搜索、分页程序，鉴权等</p><pre><code class="language-cpp">//@urlpath(admin_islogin,admin/listarticle)
std::string admin_listarticle(std::shared_ptr&lt;httppeer&gt; peer)
{
    httppeer &amp;client = peer-&gt;getpeer();

    try
    {
        auto topicm = orm::cms::Topic();

        topicm.where("userid", client.session["userid"].to_int()).asc("parentid").fetch();

        unsigned int topicid   = client.get["topicid"].to_int();
        unsigned int page      = client.get["page"].to_int();
        std::string searchword = client.get["searchword"].to_string();
        searchword             = mb_substr(searchword, 0, 15);
        client.val["topicid"]  = topicid;

        client.val["list"].set_array();
        OBJ_ARRAY temp;

        std::map&lt;unsigned int, std::string&gt; topickv;
        std::vector&lt;unsigned int&gt; topic_id_array;//articles under this topic and sub topics

        if (topicid &gt; 0)
        {
            topic_id_array.push_back(topicid);
        }

        for (unsigned int i = 0; i &lt; topicm.record.size(); i++)
        {

            temp["id"]       = topicm.record[i].topicid;
            temp["parentid"] = topicm.record[i].parentid;
            temp["value"]    = topicm.record[i].title;
            client.val["list"].push(temp);

            topickv[topicm.record[i].topicid] = topicm.record[i].title;

            if (topicid &gt; 0)
            {
                for (unsigned int j = 0; j &lt; topic_id_array.size(); j++)
                {
                    if (topicm.record[i].parentid == topic_id_array[j])
                    {
                        topic_id_array.push_back(topicm.record[i].topicid);
                    }
                }
            }
        }

        auto artmodel = orm::cms::Article();

        artmodel.where("userid", client.session["userid"].to_int());
        if (topicid &gt; 0)
        {
            std::string topicid_sql_str = array_to_sql(topic_id_array);
            if (topicid_sql_str.size() &gt; 0)
            {
                artmodel.whereIn("topicid", topicid_sql_str);
            }
        }
        if (searchword.size() &gt; 0)
        {
            artmodel.andsub().whereLike("title", str_addslash(searchword));
            artmodel.whereOrLike("content", str_addslash(searchword)).andsub();
            client.val["searchword"] = searchword;
        }
        auto [bar_min, bar_max, current_page, total_page] = artmodel.page(page, 10, 5);

        client.val["pageinfo"].set_array();
        client.val["pageinfo"]["min"]     = bar_min;
        client.val["pageinfo"]["max"]     = bar_max;
        client.val["pageinfo"]["current"] = current_page;
        client.val["pageinfo"]["total"]   = total_page;

        artmodel.select("aid,topicid,title,createtime,sortid,isopen").desc("aid").fetch();
        client.val["alist"].set_array();
        OBJ_ARRAY tempa;

        if (artmodel.size() &gt; 0)
        {
            for (auto &amp;item : artmodel)
            {
                tempa["title"]     = item.title;
                tempa["aid"]       = item.aid;
                tempa["date"]      = item.createtime.substr(0, 10);
                tempa["topicname"] = topickv[item.topicid];
                tempa["sortid"]    = item.sortid;
                tempa["isopen"]    = item.isopen;
                client.val["alist"].push(tempa);
            }
        }
    }
    catch (std::exception &amp;e)
    {
        client.val["code"] = 1;
    }
    peer-&gt;view("admin/listarticle");
    return "";
}</code></pre><h3>1.特性🔥🔥🔥🔥🔥</h3><p>✅ 1. 自带 json 编解码不用第三方库，标准 json 支持<br> ✅ 2. 支持多域名网站<br> ✅ 3. 支持多域名 ssl 服务端<br> ✅ 4. 支持 http/1.1、http/2 协议<br> ✅ 5. 支持 websocket 服务端<br> ✅ 6. 框架自带 websocket 推送，支持定时推送到 webscoket 客户端<br> ✅ 7. 支持 httpclient get post，同步异步、协程模式，数据采集<br> ✅ 8. 框架自带 ORM,使用链接池方式，目前支持 mysql<br> ✅ 9. 框架自带线程池，和用户代码运行的线程池<br> ✅10. 框架使用 asio 自带的协程<br> ✅11. 框架特色是 I/O 使用协程池，用户代码运行使用线程池,类似 GO 那种调度，只是针对 http 请求调度<br> ✅12. 框架支持普通文件 gzip、br,并支持缓存到磁盘，下次不用 cpu 再压缩<br> ✅13. URL、POST 和上传文件,解析结果 client.get[] client.post[] client.files[]方式获取内容<br> ✅14. 自带 sendmail 类库<br> ✅15. 生成二维码 (qrcode),需要 gd、qrencode 库<br> ✅16. 插件化编程，热动态更新，使用动态库方式<br> ✅17. 框架内置通用数据缓存模块，ORM 结果缓存，提高并发能力<br> ✅18. 框架 controller 目录注解功能，方便添加 URL 路由映射，降低入门心智<br> ✅19. 结构和类注解 JSON 功能，使用 json_encode json_decode 操作复杂 C++结构体和 JSON 互转，可以参考 Wiki<br> ✅20. 提供一个完整 admin 后台管理框架（见后面图片）, 访问 URL 为 /admin/main<br> ✅21. 支持 PHP-FPM fastcgi 运行模式，代替 Apache 做 PHP 前端，让 PHP 程序员平稳过渡到 C++ 开发模式</p><p>https://github.com/hggq/paozhu</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 25 Dec 2023 01:53:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272516/paozhu-1-5-4-released</guid>
            <link>https://www.oschina.net/news/272516/paozhu-1-5-4-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[2023 基于 mybatis 的 orm：mybatis-mp 1.2.8 发布 - 超丰富的 api！]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">mybatis-mp 包含丰富的 api：</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">1：基于注解，映射数据库；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">2：支持多表 join 和返回；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">3：api 采用 lambda 和 stream 流式设计；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">4：内置分页以及超强的 sql 优化功能；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">5：稳定且性能极优；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">6：轻量级封装 mybatis，几乎没有侵入；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">7：api 丰富，支持数据库函数、多表、乐观锁、多租户、逻辑删除、默认值（可动态值） 等众多功能；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">8：零学习成本，和写 sql 一样方便。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">9：支持复杂的返回关系映射：例如一对一 ，一对多，多对多；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">10：内置代码生成器，通过配置，可定制自身规范；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">11：全新的框架，全新的设计理念，新的就是好！</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 25 Dec 2023 01:41:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272514/mybatis-mp-1-2-8-released</guid>
            <link>https://www.oschina.net/news/272514/mybatis-mp-1-2-8-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[GoEdge CDN v1.3.2 发布，增强 WAF 功能、部分菜单多语言]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>GoEdge</strong><span style="background-color:#ffffff; color:#333333"><span>&nbsp;</span>是一款可以帮你快速构建 CDN &amp; WAF 平台的工具，支持 HTTP、HTTPS、Websocket、TCP、TLS、UDP、PROXY Protocol、IPv6、WAF 、WebP 等特性，支持阿里云、腾讯云、华为云等多个第三方 DNS 服务</span><span style="background-color:#ffffff; color:#171717">。</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" height="352" src="https://oscimg.oschina.net/oscnet/up-5f0af67b5f9485203e9547731535d5fce8f.png" width="600" referrerpolicy="no-referrer"><br> &nbsp;</p><p style="color:#171717; margin-left:0; margin-right:0; text-align:start">GoEdge v1.3.2 开源版本主要增强 WAF、部分菜单多语言。</p><h4>管理系统 EdgeAdmin</h4><ul><li>多语言 
  <ul><li><strong>实现部分菜单的中英文转换</strong></li></ul></li><li>WAF 
  <ul><li>WAF 规则集列表中参数、操作符显示中文名称和描述，方便用户识别</li><li>WAF「显示网页」动作增加状态码显示</li><li><strong>WAF 策略中人机识别增加「极验–行为验」验证</strong></li><li>IP 名单中可以批量删除最多 10000 个 IP</li></ul></li><li>集群 
  <ul><li>创建集群时默认生成子域名，形如 g123456.cdn，避免用户手动填写重复</li><li>WebP 转换质量转移到集群 WebP 策略配置中，避免用户自行设置导致的性能问题</li></ul></li><li>缓存 
  <ul><li><strong>缓存设置中可以设置缓存主域名</strong>，用来复用多域名下的缓存</li></ul></li><li>其他 
  <ul><li>将部分 MB、GB…改成 MiB、GiB…，让流量描述更加准确</li><li>业务域名 CNAME 检查 DNS 主机地址增加 Google 公共 DNS，提升域名解析检查时效性</li><li>管理系统安全设置中增加「自定义客户端 IP 报头」，可以通过它为管理系统获取客户端真实 IP</li></ul></li></ul><h4>API 节点 EdgeAPI</h4><ul><li>WAF 
  <ul><li>自动升级 WAF 策略中 SQL 注入检测和 XSS 注入检测</li></ul></li><li>DNS 
  <ul><li>阿里云 DNS 线路显示完整的线路名称，以往是只显示最大的一级区域名称</li><li>华为云 DNS 线路增加一组「运营商_地区」类型线路</li></ul></li></ul><h4>通用 EdgeCommon</h4><ul><li>WAF 
  <ul><li>将 WAF 策略模板多个规则集的默认动作修改为「显示页面」</li><li><strong>WAF 操作符增加包含任一单词、包含所有单词、不包含任一单词</strong>，用单词匹配的方法往往更科学、速度更快</li><li><strong>WAF 操作符增加包含 XSS 注入、包含 SQL 注入</strong>，解析速度相对于正则更加快速，更能通过语义解析提升检测成功率</li><li><strong>WAF 检查项增加「所有报头名称」</strong>，可以列出当前请求的所有报头名称</li><li><strong>WAF 检查项增加「请求来源」</strong>，可以获取请求报头中的 Referer 和 Origin 信息；旧的「请求来源 URL」改名为「请求来源 Referer「</li></ul></li></ul><h4>边缘节点 EdgeNode</h4><ul><li>WAF 
  <ul><li>优化验证码加载方式，减少不必要的图片生成</li><li>WAF 验证码验证后返回时判断是否已通过验证</li><li>增加「极验-行为验」验证码集成支持</li><li>WAF 相关跳转不计入统计</li><li>优化 WAF 中前缀和后缀相关操作符性能</li><li>节点进程停止时，自动保存 WAF 临时白名单，并在进程重新启动后恢复，避免在节点重新启动后影响当前用户访问</li></ul></li><li>缓存 
  <ul><li>默认不启用内存分片管理，避免内存可能突发激增</li></ul></li><li>WebP 
  <ul><li>WebP 转换限制为若干个线程（根据当前系统配置自动计算），防止占用系统资源过高，当然同时也会导致 WebP 转换率降低</li><li>WebP 策略变化时只更新相关配置，不再重新加载节点全部配置</li></ul></li><li>反向代理 
  <ul><li>优化 TCP 源站错误提示，根据集群设置自动决定是否上报到 API 节点</li></ul></li></ul><p><span style="background-color:#ffffff; color:#24292f">完整变更说明：</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgoedge.cn%2Fdocs%2FReleases%2FIndex.md" target="_blank">https://goedge.cn/docs/Releases/Index.md</a><br><span style="background-color:#ffffff; color:#24292f">下载：</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgoedge.cn%2Fdownloads" target="_blank">https://goedge.cn/downloads</a></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 25 Dec 2023 01:32:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272512/goedge-1-3-2-released</guid>
            <link>https://www.oschina.net/news/272512/goedge-1-3-2-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[智能制造一体化 v3.11.6 发布，手机端更新]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">智能制造一体化管理系统&nbsp;[SpringBoot2 - 快速开发平台]，适用于制造业、建筑业、汽车行业、互联网、教育、政府机关等机构的管理。包含文件在线操作、工作日志、多班次考勤、CRM、ERP 进销存、项目管理、EHR、拖拽式生成问卷、日程、笔记、工作计划、行政办公、薪资模块、动态表单、知识库、公告模块、企业论坛、云售后模块、生产模块、系统模块化同步模块等多种复杂业务功能。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>有一些小伙伴很好奇最近更新的内容和智能制造有什么关系？</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>答</strong>：目前 Skyeye 整体在做重构，优先从底层的一些功能开始，所以现在大家看到的和智能制造的联系不是很大，也希望大家能够理解，一个大型的智能制造对底层的依赖性也是非常高的。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">智能制造一体化 v3.11.6 发布&nbsp;，<strong>手机端</strong>完成以下内容的代码编写：</p><ul><li>会议室管理</li><li>用品管理</li><li>用品采购</li><li>车辆管理</li><li>车辆事故</li><li>车辆加油</li><li>车辆年检</li><li>车辆维修保养</li><li>车辆保险</li><li>印章管理</li><li>证照管理</li><li>资产管理</li><li>资产采购</li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">Skyeye 具备<strong>低代码、快捷开发、可视化设计、微服务</strong>等特点，方便客户二次开发，极大的提高了开发效率。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">erp：&nbsp;<a href="https://gitee.com/doc_wei01/erp-pro">https://gitee.com/doc_wei01/erp-pro</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">OA：&nbsp;<a href="https://gitee.com/doc_wei01/skyeye">https://gitee.com/doc_wei01/skyeye</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">报表：<a href="https://gitee.com/doc_wei01/skyeye-report">https://gitee.com/doc_wei01/skyeye-report</a>&nbsp;</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">产品信息：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.qq.com%2Fdoc%2FDYUxuT3pSdGhVVXFC" target="_blank">https://docs.qq.com/doc/DYUxuT3pSdGhVVXFC</a>&nbsp; 有问题可以联系作者，详情请看开发计划。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>效果图</strong></p><table cellspacing="0" style="--darkreader-inline-bgcolor:#181a1b; --darkreader-inline-border-bottom:currentcolor; --darkreader-inline-border-left:currentcolor; --darkreader-inline-border-right:currentcolor; --darkreader-inline-border-top:currentcolor; --darkreader-inline-color:#bdb7af; -webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:1px; border:medium none; box-sizing:border-box; color:#444444; display:block; font-family:-apple-system,BlinkMacSystemFont,&quot;Apple Color Emoji&quot;,&quot;Segoe UI Emoji&quot;,&quot;Segoe UI Symbol&quot;,&quot;Segoe UI&quot;,&quot;PingFang SC&quot;,&quot;Hiragino Sans GB&quot;,&quot;Microsoft YaHei&quot;,&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:14px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; line-height:inherit; margin:0px; max-width:100%; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:776px; word-break:keep-all; word-spacing:0px"><tbody><tr><th>效果图</th><th>效果图</th><th>效果图</th></tr></tbody><tbody><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px"><p style="margin-left:0; margin-right:0"><img height="1653" src="https://oscimg.oschina.net/oscnet/up-67ad6fccddc8a79a976eaa12e3f0203ae7b.png" width="763" referrerpolicy="no-referrer"></p></td><td style="border-color:#dddddd; border-style:solid; border-width:1px"><p style="margin-left:0; margin-right:0"><img height="1653" src="https://oscimg.oschina.net/oscnet/up-6607560bdbd9d946ea709c333a1a557a002.png" width="763" referrerpolicy="no-referrer"></p></td><td style="border-color:#dddddd; border-style:solid; border-width:1px"><p style="margin-left:0; margin-right:0"><img height="1653" src="https://oscimg.oschina.net/oscnet/up-5374d3fa6ee9ea268239a737d326f3cb479.png" width="763" referrerpolicy="no-referrer"></p></td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px"><p style="margin-left:0; margin-right:0"><img height="1653" src="https://oscimg.oschina.net/oscnet/up-14cdf5b88c70b727cb4842740773063c8da.png" width="763" referrerpolicy="no-referrer"></p></td><td style="border-color:#dddddd; border-style:solid; border-width:1px"><p style="margin-left:0; margin-right:0"><img height="1653" src="https://oscimg.oschina.net/oscnet/up-e702258fd0f7a4e29c63fb56811a9df277e.png" width="763" referrerpolicy="no-referrer"></p></td><td style="border-color:#dddddd; border-style:solid; border-width:1px"><p style="margin-left:0; margin-right:0"><img height="1653" src="https://oscimg.oschina.net/oscnet/up-95f24d75fa8e8b2beca189c1cac2db3a414.png" width="763" referrerpolicy="no-referrer"></p></td></tr></tbody></table><p>&nbsp;</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 25 Dec 2023 01:16:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272509/win10-skyeye-3-11-6-released</guid>
            <link>https://www.oschina.net/news/272509/win10-skyeye-3-11-6-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
    </channel>
</rss>
