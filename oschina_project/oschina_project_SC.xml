<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[开源中国-软件更新资讯]]>
        </title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="http://rsshub.app/oschina/news/project" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[开源中国-软件更新资讯 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Mon, 18 Mar 2024 13:02:40 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[PHP 8.2.17 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff; color:#333333">PHP 8.2.17 已发布，更新内容如下：</span></p><ul><li>Core: 
  <ul><li>修复了在关闭时 ZTS 持久资源崩溃的问题。</li></ul></li><li>Curl: 
  <ul><li>修复了由于 libcurl 8.6.0 中字符串更改导致的测试失败问题。</li></ul></li><li>DOM: 
  <ul><li>修复了 DOMNodeList 和 DOMNodeMap 中维度的引用访问问题。</li></ul></li><li>Fileinfo: 
  <ul><li>修复了 bug GH-13344（finfo::buffer(): Failed identify data 0:(null), backport）。</li></ul></li><li>FPM: 
  <ul><li>修复了 bug #75712（php-fpm 中的 getenv 不应该读取 $_ENV、$_SERVER）。</li></ul></li><li>GD: 
  <ul><li>修复了 bug GH-12019（在系统 gd 库中检测图像格式的问题）。</li></ul></li><li>MySQLnd: 
  <ul><li>修复了 bug GH-11950（[mysqlnd] 如果 CR_SERVER_GONE_ERROR 已经被设置，不应该将 CR_MALFORMED_PACKET 设置为错误）。</li></ul></li><li>PGSQL: 
  <ul><li>修复了 bug GH-13354（pg_execute/pg_send_query_params/pg_send_execute 中传递了空值的引用）。</li></ul></li><li>Standard: 
  <ul><li>修复了将数组键作为哈希字符串（不区分大小写）比较的错误，对于第二个操作数缓冲区大小（尽管现在未使用）。</li></ul></li></ul><p><span style="background-color:#ffffff; color:#333333">更多详情可查看：</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.php.net%2FChangeLog-8.php%238.2.17" target="_blank">ChangeLog</a></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 18 Mar 2024 07:17:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/283587/php-8-2-17-released</guid>
            <link>https://www.oschina.net/news/283587/php-8-2-17-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[vfox 0.2.5 发布: 一个工具管理所有运行时版本！]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>项目地址:<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fversion-fox%2Fvfox" target="_blank">https://github.com/version-fox/vfox</a></strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>官网地址:<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fvfox.lhan.me%2Fzh-hans%2F" target="_blank">https://vfox.lhan.me/zh-hans/</a></strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">该版本主要修复了 Powershell Hook 脚本引起的几个问题，优化了用户体验和性能，还支持 GitBash shell, 并为 0.3.0 做准备。</p><h3>更新内容:</h3><ul><li>feat: 支持 PreUse hook 函数 by<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fbytemain" target="_blank">@bytemain</a><span>&nbsp;</span>in<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fversion-fox%2Fvfox%2Fpull%2F58" target="_blank">#58</a></li><li><strong>feat: 支持 GitBash shell by<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Faooohan" target="_blank">@aooohan</a><span>&nbsp;</span>in<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fversion-fox%2Fvfox%2Fcommit%2F967d2cf2796e09bd0e4ace8d3e6d2721941ef502" target="_blank">967d2cf</a></strong></li><li>feat: 支持模糊搜索所有版本 by<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FChance-fyi" target="_blank">@Chance-fyi</a><span>&nbsp;</span>in<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fversion-fox%2Fvfox%2Fpull%2F78" target="_blank">#78</a></li><li>fix: VSCode 下 PATH 重复问题 by<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Faooohan" target="_blank">@aooohan</a><span>&nbsp;</span>in<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fversion-fox%2Fvfox%2Fcommit%2Fe3c35b92275739dce4c255aa5322435d52a793e1" target="_blank">e3c35b9</a></li><li>fix: 模糊搜索的不一致问题 by<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FChance-fyi" target="_blank">@Chance-fyi</a><span>&nbsp;</span>in<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fversion-fox%2Fvfox%2Fpull%2F75" target="_blank">#75</a></li><li>fix(powershell): 覆盖原始 prompt 函数 by<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FLordHumphrey" target="_blank">@LordHumphrey</a><span>&nbsp;</span>in<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fversion-fox%2Fvfox%2Fpull%2F101" target="_blank">#101</a></li><li>fix(powershell): 激活后导致,中文乱码问题 by<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FLordHumphrey" target="_blank">@LordHumphrey</a><span>&nbsp;</span>in<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fversion-fox%2Fvfox%2Fpull%2F117" target="_blank">#117</a></li><li>fix(powershell): 由于 Powershell 的 bug, 需要提前进行清理 by<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Faooohan" target="_blank">@aooohan</a><span>&nbsp;</span>in<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fversion-fox%2Fvfox%2Fcommit%2F8ce7be0101946dc6bccd5b57794ad91ef01c13b0" target="_blank">8ce7be0</a></li><li>fix(zip): 解压缩未保持原有格式 by<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fahai-code" target="_blank">@ahai-code</a><span>&nbsp;</span>in<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fversion-fox%2Fvfox%2Fpull%2F103" target="_blank">#103</a></li><li>fix(plugin): 插件未传递主版本信息 by<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Faooohan" target="_blank">@aooohan</a><span>&nbsp;</span>in<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fversion-fox%2Fvfox%2Fcommit%2F9151cf2451d12c55c8324f337a235add8013e33f" target="_blank">9151cf2</a></li><li>refactor: 变更插件存储格式, 由单文件改为一个插件对应一个目录 by<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Faooohan" target="_blank">@aooohan</a><span>&nbsp;</span>in<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fversion-fox%2Fvfox%2Fcommit%2Ff0253a4a697f77fd586b9cf33b04bc61619b21a1" target="_blank">f0253a4</a></li><li><p>&nbsp;</p></li></ul><h3>新贡献者:</h3><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxxnuo" target="_blank">@xxnuo</a><span>&nbsp;</span>made their first contribution in<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fversion-fox%2Fvfox%2Fpull%2F71" target="_blank">#71</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdependabot" target="_blank">@dependabot</a><span>&nbsp;</span>made their first contribution in<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fversion-fox%2Fvfox%2Fpull%2F77" target="_blank">#77</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fbytemain" target="_blank">@bytemain</a><span>&nbsp;</span>made their first contribution in<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fversion-fox%2Fvfox%2Fpull%2F58" target="_blank">#58</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FLordHumphrey" target="_blank">@LordHumphrey</a><span>&nbsp;</span>made their first contribution in<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fversion-fox%2Fvfox%2Fpull%2F101" target="_blank">#101</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fahai-code" target="_blank">@ahai-code</a><span>&nbsp;</span>made their first contribution in<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fversion-fox%2Fvfox%2Fpull%2F103" target="_blank">#103</a></li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>Full Changelog</strong><span style="background-color:#ffffff; color:#1f2328">:<span>&nbsp;</span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fversion-fox%2Fvfox%2Fcompare%2Fv0.2.4...v0.2.5" target="_blank">v0.2.4...v0.2.5</a></p><h3>已支持插件:</h3><table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:0px; box-sizing:border-box; color:#1f2328; display:block; font-family:-apple-system,&quot;system-ui&quot;,&quot;Segoe UI&quot;,&quot;Noto Sans&quot;,Helvetica,Arial,sans-serif,&quot;Apple Color Emoji&quot;,&quot;Segoe UI Emoji&quot;; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; margin-bottom:0px !important; margin-top:0px; max-width:100%; orphans:2; overflow:auto; text-align:start; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:max-content; word-spacing:0px"><tbody><tr><th>Name</th><th>Version</th><th>Author</th><th>Description</th></tr><tr><td style="border-style:solid; border-width:1px"><strong>dart/dart</strong></td><td style="border-style:solid; border-width:1px">0.0.1</td><td style="border-style:solid; border-width:1px">Aooohan</td><td style="border-style:solid; border-width:1px">dart plugin, support for getting stable, dev, beta version</td></tr><tr><td style="border-style:solid; border-width:1px"><strong>deno/deno</strong></td><td style="border-style:solid; border-width:1px">0.0.1</td><td style="border-style:solid; border-width:1px">Aooohan</td><td style="border-style:solid; border-width:1px">Deno plugin,<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeno.com%2F" target="_blank">https://deno.com/</a></td></tr><tr><td style="border-style:solid; border-width:1px"><strong>dotnet/dotnet</strong></td><td style="border-style:solid; border-width:1px">0.0.1</td><td style="border-style:solid; border-width:1px">Korbinian Habereder</td><td style="border-style:solid; border-width:1px">dotnet plugin, support for dotnet sdks 6.0, 7.0, 8.0</td></tr><tr><td style="border-style:solid; border-width:1px"><strong>flutter/flutter-cn</strong></td><td style="border-style:solid; border-width:1px">0.0.1</td><td style="border-style:solid; border-width:1px">Aooohan</td><td style="border-style:solid; border-width:1px">flutter plugin for China, support for getting stable, dev, beta version</td></tr><tr><td style="border-style:solid; border-width:1px"><strong>flutter/flutter</strong></td><td style="border-style:solid; border-width:1px">0.0.2</td><td style="border-style:solid; border-width:1px">Aooohan</td><td style="border-style:solid; border-width:1px">flutter plugin, support for getting stable, dev, beta version</td></tr><tr><td style="border-style:solid; border-width:1px"><strong>golang/golang</strong></td><td style="border-style:solid; border-width:1px">0.0.2</td><td style="border-style:solid; border-width:1px">Aooohan</td><td style="border-style:solid; border-width:1px">&nbsp;</td></tr><tr><td style="border-style:solid; border-width:1px"><strong>gradle/gradle</strong></td><td style="border-style:solid; border-width:1px">0.0.1</td><td style="border-style:solid; border-width:1px">ahai</td><td style="border-style:solid; border-width:1px">gradle</td></tr><tr><td style="border-style:solid; border-width:1px"><strong>java/adoptium-jdk</strong></td><td style="border-style:solid; border-width:1px">0.0.1</td><td style="border-style:solid; border-width:1px">aooohan</td><td style="border-style:solid; border-width:1px">Adoptium JDK</td></tr><tr><td style="border-style:solid; border-width:1px"><strong>java/azul-adoptium-jdk</strong></td><td style="border-style:solid; border-width:1px">0.0.1</td><td style="border-style:solid; border-width:1px">axdank</td><td style="border-style:solid; border-width:1px">Azul (Zulu) JDK - Adoptium</td></tr><tr><td style="border-style:solid; border-width:1px"><strong>java/azul-jdk</strong></td><td style="border-style:solid; border-width:1px">0.0.3</td><td style="border-style:solid; border-width:1px">yimiaoxiehou</td><td style="border-style:solid; border-width:1px">Azul JDK, also known as Zulu</td></tr><tr><td style="border-style:solid; border-width:1px"><strong>java/graalvm</strong></td><td style="border-style:solid; border-width:1px">0.0.1</td><td style="border-style:solid; border-width:1px">ahai</td><td style="border-style:solid; border-width:1px">graalvm JDK</td></tr><tr><td style="border-style:solid; border-width:1px"><strong>java/ibm-adoptium-jdk</strong></td><td style="border-style:solid; border-width:1px">0.0.1</td><td style="border-style:solid; border-width:1px">axdank</td><td style="border-style:solid; border-width:1px">IBM JDK - Adoptium</td></tr><tr><td style="border-style:solid; border-width:1px"><strong>java/microsoft-adoptium-jdk</strong></td><td style="border-style:solid; border-width:1px">0.0.1</td><td style="border-style:solid; border-width:1px">axdank</td><td style="border-style:solid; border-width:1px">Microsoft JDK - Adoptium</td></tr><tr><td style="border-style:solid; border-width:1px"><strong>java/redhat-adoptium-jdk</strong></td><td style="border-style:solid; border-width:1px">0.0.1</td><td style="border-style:solid; border-width:1px">axdank</td><td style="border-style:solid; border-width:1px">RedHat JDK - Adoptium</td></tr><tr><td style="border-style:solid; border-width:1px"><strong>kotlin/kotlin</strong></td><td style="border-style:solid; border-width:1px">0.0.1</td><td style="border-style:solid; border-width:1px">Aooohan</td><td style="border-style:solid; border-width:1px">Kotlin plugin</td></tr><tr><td style="border-style:solid; border-width:1px"><strong>maven/maven</strong></td><td style="border-style:solid; border-width:1px">0.0.1</td><td style="border-style:solid; border-width:1px">Aooohan</td><td style="border-style:solid; border-width:1px">&nbsp;</td></tr><tr><td style="border-style:solid; border-width:1px"><strong>nodejs/nodejs</strong></td><td style="border-style:solid; border-width:1px">0.0.7</td><td style="border-style:solid; border-width:1px">Aooohan</td><td style="border-style:solid; border-width:1px">Node.js</td></tr><tr><td style="border-style:solid; border-width:1px"><strong>nodejs/npmmirror</strong></td><td style="border-style:solid; border-width:1px">0.0.5</td><td style="border-style:solid; border-width:1px">yimiaoxiehou</td><td style="border-style:solid; border-width:1px">install Node.js use<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcdn.npmmirror.com%2F" target="_blank">https://cdn.npmmirror.com</a></td></tr><tr><td style="border-style:solid; border-width:1px"><strong>python/npmmirror</strong></td><td style="border-style:solid; border-width:1px">0.0.3</td><td style="border-style:solid; border-width:1px">aooohan</td><td style="border-style:solid; border-width:1px">vfox &gt;= 0.2.3 !!! From npmmirror.org. For Windows, only support &gt;=3.5.0, but no restrictions for unix-like</td></tr><tr><td style="border-style:solid; border-width:1px"><strong>python/python</strong></td><td style="border-style:solid; border-width:1px">0.0.3</td><td style="border-style:solid; border-width:1px">aooohan</td><td style="border-style:solid; border-width:1px">vfox &gt;= 0.2.3 !! For Windows, only support &gt;=3.5.0, but no restrictions for unix-like</td></tr><tr><td style="border-style:solid; border-width:1px"><strong>zig/zig</strong></td><td style="border-style:solid; border-width:1px">0.0.4</td><td style="border-style:solid; border-width:1px">aooohan</td><td style="border-style:solid; border-width:1px">Zig</td></tr></tbody></table><h3>快速开始</h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">亮点:</p><ul><li>跨平台 (<strong>Windows</strong>、Linux、macOS), 不同的平台拥有相同的用户体验</li><li>使用一致的命令管理所有语言</li><li>简单的插件系统添加对您所需 SDK 的支持</li><li><strong>支持 Global、Project、Session 三种作用域</strong></li><li><strong>切换项目时，自动切换到对应版本</strong></li></ul><blockquote><p style="margin-left:0; margin-right:0">详细的安装指南请参见<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fvfox.lhan.me%2Fzh-hans%2Fguides%2Fquick-start.html" target="_blank">快速入门</a></p></blockquote><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>1. 选择一个适合你的<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fvfox.lhan.me%2Fzh-hans%2Fguides%2Fquick-start.html%23_1-%25E5%25AE%2589%25E8%25A3%2585vfox" target="_blank">安装方式</a>。</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">2. ⚠️<span>&nbsp;</span><strong>挂载 vfox 到你的 Shell (从下面选择一条适合你 shell 的命令)</strong><span>&nbsp;</span>⚠️</p><pre><code class="language-bash"><span>echo</span><span style="color:#032f62">'eval "$(vfox activate bash)"'</span> &gt;&gt; ~/.bashrc
<span>echo</span><span style="color:#032f62">'eval "$(vfox activate zsh)"'</span> &gt;&gt; ~/.zshrc
<span>echo</span><span style="color:#032f62">'vfox activate fish | source'</span> &gt;&gt; ~/.config/fish/config.fish

<span style="color:#6a737d"># PowerShell:</span><span style="color:#6a737d"># 1. 打开 PowerShell 配置文件:</span>
New-Item -Type File -Path <span style="color:#032f62">$PROFILE</span><span style="color:#6a737d"># 无需在意 `文件已存在` 错误</span>
Invoke-Item <span style="color:#032f62">$PROFILE</span><span style="color:#6a737d"># 2. 将下面一行添加到你的 $PROFILE 文件末尾并保存:</span>
Invoke-Expression <span style="color:#032f62">"<span style="color:#032f62">$(vfox activate pwsh)</span>"</span></code></pre><blockquote><p style="margin-left:0; margin-right:0">请记住重启你的 Shell 以应用更改。</p></blockquote><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong><span style="color:var(--color-prettylights-syntax-string)"><span style="color:var(--color-prettylights-syntax-string)">3. 添加插件</span></span></strong></p><pre><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">$</span></span></span></span><span><span><span><span> vfox add nodejs/nodejs</span></span></span></span></pre><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>4. 安装版本</strong></p><pre><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5">vfox</span></span></span></span> install nodejs<span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62">@latest</span></span></span></span></pre><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>5. 切换版本</strong></p><pre>$ vfox use nodejs@21.<span><span><span><span>5.0</span></span></span></span>
$ node -v
<span><span><span><span>21.5</span></span></span></span>.<span><span><span><span>0</span></span></span></span></pre><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">目前已支持多种开发语言，欢迎使用～～</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>作用域演示</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>Project 作用域</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://oscimg.oschina.net/oscnet/up-8ad93fe3a88c42de7147e291becfc559fd5.gif" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>Session 作用域</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong><img alt="" src="https://oscimg.oschina.net/oscnet/up-17abed8c089841acdc2b158ab5101506d1a.gif" referrerpolicy="no-referrer"></strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>Node 完整演示</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fasciinema.org%2Fa%2F630778" target="_blank"><img src="https://asciinema.org/a/630778.svg" referrerpolicy="no-referrer"></a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>项目地址:<span><span>&nbsp;</span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fversion-fox%2Fvfox" target="_blank">https://github.com/version-fox/vfox</a></strong></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 18 Mar 2024 06:47:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/283577/vfox-0-2-5-released</guid>
            <link>https://www.oschina.net/news/283577/vfox-0-2-5-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Taro 3.6.25 发布，BAT 小程序、H5 与 RN 端统一框架]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#333333">Taro 3.6.25 现已发布。Taro 是一个开放式跨端跨框架解决方案，支持使用 React/Vue/Nerv 等框架来开发微信 / 京东 / 百度 / 支付宝 / 字节跳动 / QQ 小程序 / H5 等应用。</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="color:#333333">此版本具体更新内容如下：</span></p><h1 style="margin-left:0px; margin-right:0px; text-align:start">特性</h1><h2 style="text-align:start">小程序</h2><ul><li>支持使用 WXS / JDS 脚本语言</li><li>编译模式支持了 JSXElementChild 嵌套使用 &amp;&amp; 表达式</li></ul><h2 style="text-align:start">H5</h2><ul><li>新增了 hideNavigationBarLoading 和 showNavigationBarLoading 等 API</li><li>补充完善了 navigateTo 相关的参数，与小程序端一致</li><li>补充完善了 location 相关的 API，并修改了 NavigationBarLoading 相关的样式</li></ul><h1 style="margin-left:0; margin-right:0; text-align:start">修复</h1><h2 style="text-align:start">小程序</h2><ul><li>修复了 Text 和 Label 组件上 onLongPress 事件无效的问题，fix<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNervJS%2Ftaro%2Fissues%2F15256" target="_blank">#15256</a></li><li>修复了设置环境变量 TARO_APP_ID 无效的问题，fix<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNervJS%2Ftaro%2Fissues%2F14979" target="_blank">#14979</a><span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNervJS%2Ftaro%2Fissues%2F15009" target="_blank">#15009</a></li><li>修复了编译小程序插件时静态资源路径错误的问题</li><li>修复了页面 onClick 事件无法触发的问题，通过修改 nativeComponent 挂载点</li><li>修复了虚拟列表和瀑布流组件在层级太深的情况下，导致一般的选择器字符无法查询到对应元素的问题</li><li>修复了百度小程序在安装 HTML 插件时不渲染的问题，fix<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNervJS%2Ftaro%2Fissues%2F15326" target="_blank">#15326</a><span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNervJS%2Ftaro%2Fissues%2F14945" target="_blank">#14945</a></li><li>优化了 include 和 exclude 的逻辑，fix<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNervJS%2Ftaro%2Fissues%2F15115" target="_blank">#15115</a></li></ul><h2 style="text-align:start">H5</h2><ul><li>修复了在路由存在 basename 的情况下 navigate 报错的问题，fix<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNervJS%2Ftaro%2Fissues%2F15296" target="_blank">#15296</a></li><li>修复了 app.config 缓存路径错误的问题，fix<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNervJS%2Ftaro%2Fissues%2F15314" target="_blank">#15314</a></li><li>修复了设置 devServer 的 historyApiFallbac k 配置不生效的问题，fix<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNervJS%2Ftaro%2Fissues%2F15281" target="_blank">#15281</a></li><li>修复了 MovableView 组件事件中使用 preventDefault 引起的页面无法滚动的问题，fix<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNervJS%2Ftaro%2Fpull%2F1722" target="_blank">#1722</a></li><li>修复了 TabBar 高度未正确设置的问题</li></ul><h2 style="text-align:start">鸿蒙 Hybrid</h2><ul><li>优化了 Request 接口参数的支持情况</li><li>优化了通信通道 JSBridge，将旧通道代码替换为新通道</li><li>修复了在 harmony-hybrid 平台上 NodesRef 的 canIUse 方法返回错误结果的问题</li></ul><p>更新说明：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNervJS%2Ftaro%2Freleases%2Ftag%2Fv3.6.25" target="_blank">https://github.com/NervJS/taro/releases/tag/v3.6.25</a></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 18 Mar 2024 05:59:11 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/283566/taro-3-6-25-released</guid>
            <link>https://www.oschina.net/news/283566/taro-3-6-25-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[IoTOS v1.6.3 设备套餐、协议认证、套餐充值优化]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#616161; margin-left:0; margin-right:0"><span style="color:#0e88eb">未曾松懈一直活跃：</span></p><p style="color:#616161; margin-left:0; margin-right:0"><span style="color:#40485b">&nbsp; &nbsp; &nbsp; &nbsp;自 24 年客户增长适应市场需求增加，‘扯淡’的时间会少一点；</span><span style="color:#40485b">落实的任务会快一点，感兴趣朋友直接腾讯会议详聊，高效沟通让时间更有价值！</span></p><p><img height="537" src="https://oscimg.oschina.net/oscnet/up-2081b00a1d39be8f6ee821ff57c8831f025.png" width="1080" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0; text-align:center">&nbsp;</p><p style="margin-left:0; margin-right:0; text-align:center">（git 仓库，每日提交代码 ‘打卡’情况）</p><p style="color:#616161; margin-left:0; margin-right:0">&nbsp;</p><p style="color:#616161; margin-left:0; margin-right:0">&nbsp;</p><p style="margin-left:0; margin-right:0"><strong>一、近期更新介绍</strong></p><p style="color:#616161; margin-left:0; margin-right:0"><span style="color:#0e88eb">适应设备单套餐的新模式：</span></p><ol><li><p style="margin-left:0; margin-right:0">跟随延长：基础包叠加周期跟随延长&nbsp;<span style="background-color:#ff4c00; color:#ffffff"><strong>详情私聊</strong></span></p></li><li><p style="margin-left:0; margin-right:0">跟随同期：基础包叠加周期同期失效，否延长；</p><p style="margin-left:0; margin-right:0">更适合市场需求单售套餐，省心省力不费事。</p></li></ol><p style="margin-left:0; margin-right:0; text-align:center">&nbsp;</p><p style="color:#616161; margin-left:0; margin-right:0"><span style="color:#0e88eb">套餐编辑优化：</span></p><p>&nbsp;</p><ol><li><p style="margin-left:0; margin-right:0"><span>售价反推：输入售价成本反推赚取差价及类型；</span></p></li><li><p style="margin-left:0; margin-right:0"><span style="color:#ff0000"><span style="color:#000000">汇率优化：适配全新汇率同步 API；</span></span></p></li><li><p style="margin-left:0; margin-right:0"><span style="color:#ff0000"><span style="color:#000000">查看筛选条件增加，套餐分组；</span></span></p><p style="margin-left:0; margin-right:0">&nbsp;</p></li></ol><p><img height="516" src="https://oscimg.oschina.net/oscnet/up-02f3985b8f88b65c7da128d9b8bccb03744.png" width="1080" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0; text-align:center">（套餐，新增页面）</p><p style="color:#616161; margin-left:0; margin-right:0"><span style="color:#0e88eb">套餐分组优化：</span></p><ol><li><p style="margin-left:0; margin-right:0">单售叠加包：叠加包是否可单独购买；</p></li><li><p style="margin-left:0; margin-right:0">日期弹框：用户订购日期弹框是否提示；</p></li><li><p style="margin-left:0; margin-right:0">选中次月：大于日期选中默认选中次月生效；</p></li></ol><p><img height="516" src="https://oscimg.oschina.net/oscnet/up-022e86e800432d9536f82d82f7adf1f9b9a.png" width="1080" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0; text-align:center"><span>（套</span><span>餐分组，新增）</span></p><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="color:#616161; margin-left:0; margin-right:0"><span style="color:#0e88eb">客户认证：</span></p><ol><li><p style="margin-left:0; margin-right:0">修改密码：新账号登录修改密码提示；</p></li><li><p style="margin-left:0; margin-right:0">客户认证：认证多类型、协议多模板；</p></li><li><p style="margin-left:0; margin-right:0">后台审核：灵活查看文件、一键压缩包下载；</p></li></ol><p><img height="516" src="https://oscimg.oschina.net/oscnet/up-629c04577bfb730076ac9207b371e3d94b7.png" width="1080" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0; text-align:center">(修改客户，认证类型、协议)</p><p><img height="537" src="https://oscimg.oschina.net/oscnet/up-935e57e86891dc75768ae0871ea3f57901f.png" width="1080" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0; text-align:center">（登录修改密码提示，引导）</p><p><img height="537" src="https://oscimg.oschina.net/oscnet/up-172ba56b6e8b96001239bf82a41836a1768.png" width="1080" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0; text-align:center">（协议、认证填写）</p><p><img height="537" src="https://oscimg.oschina.net/oscnet/up-ba473cd248494ab2f248dd419fad546cce5.png" width="1080" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0; text-align:center">（资料填写，确认提交认证）</p><p><img height="537" src="https://oscimg.oschina.net/oscnet/up-e66f6e23ed600583406edf46737f5eea02e.png" width="1080" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0; text-align:center">（审核申请中）</p><p><img height="537" src="https://oscimg.oschina.net/oscnet/up-ef36833caa3de613c6ee27a9c874d97b210.png" width="1080" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0; text-align:center">（审核认证，通过）</p><p style="margin-left:0; margin-right:0; text-align:center">&nbsp;</p><p><img height="516" src="https://oscimg.oschina.net/oscnet/up-29b27482112f2d0850baa65666684ea83a1.png" width="1080" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0; text-align:center">（后台管理，审核认证）</p><p style="color:#616161; margin-left:0; margin-right:0"><span style="color:#0e88eb">用户端更新：</span></p><ol><li><p style="margin-left:0; margin-right:0">流量规格：大套餐展现 GB、小套餐显示 MB；</p></li><li><p style="margin-left:0; margin-right:0">充值优化：页面优化、充值日期提示；</p></li><li><p style="margin-left:0; margin-right:0">支付优化：支付<span style="color:#000000">类型、</span>生效类型；</p></li><li><p style="margin-left:0; margin-right:0">免密码登录：可设定注册用户免密码登录；</p></li><li><p style="margin-left:0; margin-right:0">手机号查卡：手机号免密模式可跳转卡号管理；</p></li></ol><p><img height="832" src="https://oscimg.oschina.net/oscnet/up-ef943ff89af445b41de1311c4797f644d47.png" width="404" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0; text-align:center">（套餐充值）</p><p><img height="826" src="https://oscimg.oschina.net/oscnet/up-3e1dd9d579d081216e240d36ee4aa329487.png" width="407" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0; text-align:center">（生效时间，提示）</p><p><img height="861" src="https://oscimg.oschina.net/oscnet/up-e98c243fbd06c9f9d2cfb1a0c21c91ceea1.png" width="401" referrerpolicy="no-referrer"></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:center">（支付确认，优化后）</p><p style="color:#616161; margin-left:0; margin-right:0"><span style="color:#0e88eb">我们的优势：</span></p><ol><li><p style="margin-left:0; margin-right:0"><span style="color:#000000">企业 ERP 生产组装、客户、销售、物流；</span></p></li><li><p style="margin-left:0; margin-right:0"><span style="color:#000000">上海科技艺术教育智能驾驶赛事系统；</span></p></li><li><p style="margin-left:0; margin-right:0"><span style="color:#000000">上海市电教育馆赛事计分系统；</span></p></li><li><p style="margin-left:0; margin-right:0"><span style="color:#000000">物联卡 ToC 类型系统；</span></p></li><li><p style="margin-left:0; margin-right:0"><span style="color:#000000">物联卡 ToB 类型系统；</span></p></li><li><p style="margin-left:0; margin-right:0"><span style="color:#000000">国际话费、短信、语音、等，充值系统；</span></p></li></ol><ol><li><p style="margin-left:0; margin-right:0"><span style="color:#000000">物联网经验丰富：多物联卡平台，研发主力；</span></p></li><li><p style="margin-left:0; margin-right:0"><span style="color:#000000">盈利模式挖掘者：多盈利、营销、风口踩点；</span></p></li><li><p style="margin-left:0; margin-right:0"><span style="color:#000000">数据安全：企业级加密、守衞数据资产；</span></p></li><li><p style="margin-left:0; margin-right:0"><span style="color:#000000">开发经历丰满：</span></p></li></ol><ol></ol><ol><li><p style="margin-left:0; margin-right:0"><span style="color:#000000">企业 ERP 生产组装、客户、销售、物流；</span></p></li><li><p style="margin-left:0; margin-right:0"><span style="color:#000000">上海科技艺术教育智能驾驶赛事系统；</span></p></li><li><p style="margin-left:0; margin-right:0"><span style="color:#000000">上海市电教育馆赛事计分系统；</span></p></li><li><p style="margin-left:0; margin-right:0"><span style="color:#000000">物联卡 ToC 类型系统；</span></p></li><li><p style="margin-left:0; margin-right:0"><span style="color:#000000">物联卡 ToB 类型系统；</span></p></li><li><p style="margin-left:0; margin-right:0"><span style="color:#000000">国际话费、短信、语音、等，充值系统；</span></p></li></ol></div>
                                    ]]>
            </description>
            <pubDate>Mon, 18 Mar 2024 04:43:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/283554</guid>
            <link>https://www.oschina.net/news/283554</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Apache Doris 2.0.6 版本正式发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>亲爱的社区小伙伴们，</span><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoris.apache.org%2Fdownload%2F" target="_blank"><span>Apache Doris 2.0.6</span></a></span><span> 版本已于 2024 年 3 月 12 日正式与大家见面，该版本在物化视图、统计信息收集、JDBC Catalog 等方面进行了更新优化，并提交了 114 个改进项以及问题修复，欢迎大家下载体验。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span><strong><span>官网下载：</span></strong></span><span></span><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoris.apache.org%2Fdownload%2F" target="_blank"><span>https://doris.apache.org/download/</span></a></span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span><strong><span>GitHub 下载：</span></strong></span><span></span><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Freleases" target="_blank"><span>https://github.com/apache/doris/releases</span></a></span></p><h2><span>新功能</span></h2><ul><li><p style="margin-left:.5rem; margin-right:0"><span>自动选择物化视图时支持匹配带别名的函数</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>增加安全下线一个 tablet 副本的命令</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>外表统计信息增加行数统计缓存</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>统计信息收集支持 Rollup</span></p></li></ul><h2><span>改进和优化</span></h2><ul><li><p style="margin-left:.5rem; margin-right:0"><span>使用 protobuf 稳定序列化减少 Tablet Schema 缓存内存占用</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>提升 </span><span><code>show column stats</code></span><span> 的性能</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>统计信息收集和优化器支持 Iceberg 和 Paimon 的行数估计</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>JDBC Catalog 支持读取 SQL Server 的 Timestamp 类型</span></p></li></ul><h2><span>致谢</span></h2><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>最后，衷心感谢 51 位开发者为 Apache Doris 2.0.6 版本做出了重要贡献:</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>924060929, AshinGau, BePPPower, BiteTheDDDDt, CalvinKirs, cambyzju, deardeng, DongLiang-0, eldenmoon, englefly, feelshana, feiniaofeiafei, felixwluo, HappenLee, hust-hhb, iwanttobepowerful, ixzc, JackDrogon, Jibing-Li, KassieZ, larshelge, liaoxin01, LiBinfeng-01, liutang123, luennng, morningman, morrySnow, mrhhsg, qidaye, starocean999, TangSiyang2001, wangbo, wsjz, wuwenchi, xiaokang, XieJiann, xuwei0912, xy720, xzj7019, yiguolei, yujun777, Yukang-Lian, Yulei-Yang, zclllyybb, zddr, zhangstar333, zhannngchen, zhiqiang-hhhh, zy-kkk, zzzxl1993</span></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 18 Mar 2024 03:37:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/283542/apache-doris-2-0-6-released</guid>
            <link>https://www.oschina.net/news/283542/apache-doris-2-0-6-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[AI 和分析统一数据库 Cloudberry Database 1.5.0 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:var(--sub-text-color-2); text-align:start">近日，Cloudberry Database v1.5.0 正式发布，本次新版本新增了若干功能，同时包含了若干产品性能/稳定性优化，修复了若干 bug。</p><p style="color:var(--sub-text-color-2); text-align:start">快速下载试用：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcloudberrydb%2Fcloudberrydb%2Freleases" target="_blank">Cloudberry Database 1.5.0</a></p><h2>新功能<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcloudberrydb.org%2Fzh%2Fdocs%2Freleases%2Frelease-1.5.0%23%25E6%2596%25B0%25E5%258A%259F%25E8%2583%25BD" target="_blank">​</a></h2><table cellspacing="0" style="-webkit-text-stroke-width:0px; border-collapse:collapse; box-sizing:border-box; color:#000000; display:block; font-family:-apple-system,&quot;system-ui&quot;,&quot;Noto Sans&quot;,&quot;Open Sans&quot;,&quot;Source Sans&quot;,Helvetica,Arial,Inter,Ubuntu,Roboto,sans-serif; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; margin-bottom:var(--ifm-spacing-vertical); orphans:2; overflow:auto; text-align:start; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; word-spacing:0px"><tbody><tr><th style="background-color:var(--ifm-table-head-background)">分类</th><th style="background-color:var(--ifm-table-head-background)">功能</th></tr></tbody><tbody><tr><td style="border-style:solid">查询处理</td><td style="border-style:solid">支持并行创建 AO/AOCO 表和并行刷新物化视图</td></tr><tr><td style="border-style:solid">支持自动使用物化视图进行查询优化</td></tr><tr><td style="border-style:solid">支持部署单计算节点的集群</td></tr><tr><td style="border-style:solid">支持使用命令行「一键」部署集群</td></tr><tr><td style="border-style:solid">存储</td><td style="border-style:solid">支持增量物化视图</td></tr><tr><td style="border-style:solid">支持在 AO 表上使用唯一索引</td></tr><tr><td style="border-style:solid">安全</td><td style="border-style:solid">支持登录错误输入密码次数检查</td></tr></tbody></table><p style="color:var(--sub-text-color-2); text-align:start">&nbsp;</p><p style="color:var(--sub-text-color-2); text-align:start">各个新功能的详细说明如下：</p><h3>查询处理<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcloudberrydb.org%2Fzh%2Fdocs%2Freleases%2Frelease-1.5.0%23%25E6%259F%25A5%25E8%25AF%25A2%25E5%25A4%2584%25E7%2590%2586" target="_blank">​</a></h3><ul><li><p style="color:var(--sub-text-color-2)"><strong>支持并行创建 AO/AOCO 表和并行刷新物化视图。</strong></p><p style="color:var(--sub-text-color-2)">支持使用<span>&nbsp;</span><code>CREATE TABLE AS</code><span>&nbsp;</span>语句并行创建 Append-Optimized (AO) 表和 Append-Optimized Column Oriented (AOCO) 表，同时支持并行刷新基于该表的物化视图，从而加速建表和物化视图刷新。</p></li><li><p style="color:var(--sub-text-color-2)"><strong>支持自动使用物化视图进行查询优化</strong>，即在查询规划阶段自动使用物化视图来计算部分或全部查询 (AQUMV)。这一功能使用场景：</p><ul><li>大数据量的聚合查询：对于需要从数百万条记录中进行聚合的查询，AQUMV 能显著减少查询时间。</li><li>频繁更新的大表：在数据频繁更新的环境中，使用 IMV 可以确保查询结果的实时性和准确性。</li></ul></li></ul><h3>集群管理<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcloudberrydb.org%2Fzh%2Fdocs%2Freleases%2Frelease-1.5.0%23%25E9%259B%2586%25E7%25BE%25A4%25E7%25AE%25A1%25E7%2590%2586" target="_blank">​</a></h3><ul><li><p style="color:var(--sub-text-color-2)"><strong>支持以单计算节点部署集群。</strong></p><p style="color:var(--sub-text-color-2)">在 v1.5.0 以前，用户部署一套 Cloudberry Database 集群时，至少需要部署一个 Coordinator 节点和一个 Segment 节点，还需要指定繁多的配置信息和启动参数，这一过程相对复杂耗时。</p><p style="color:var(--sub-text-color-2)">从 v1.5.0 开始，用户可以像部署 PostgreSQL 一样部署单计算节点的 Cloudberry Database 集群，集群仅包含一个 Coordinator 节点，无需指定繁多的配置参数，也无需预分配多个节点的计算资源。</p><p style="color:var(--sub-text-color-2)">用户只需使用脚本工具<span>&nbsp;</span><code>gpdemo</code><span>&nbsp;</span>即可快速部署一套单节点的 Cloudberry Database 集群。</p></li><li><p style="color:var(--sub-text-color-2)"><strong>支持使用命令行工具「一键」部署集群。</strong></p><p style="color:var(--sub-text-color-2)">在 v1.5.0 以前，如果用户想在单节点上部署带有 Segment 的小型集群用于演示，需要花费时间编写配置文件和参数。自 v1.5.0 起，用户只需要通过内置的<span>&nbsp;</span><code>gpdemo</code><span>&nbsp;</span>脚本，使用一条命令就能快速部署指定 Segment 数的 Cloudberry Database 集群。即：</p><div><div><pre><code><span style="color:#393a34"><span>gpdemo</span></span></code></pre></div></div></li></ul><h3>存储<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcloudberrydb.org%2Fzh%2Fdocs%2Freleases%2Frelease-1.5.0%23%25E5%25AD%2598%25E5%2582%25A8" target="_blank">​</a></h3><ul><li><p style="color:var(--sub-text-color-2)"><strong>支持增量物化视图。</strong></p><p style="color:var(--sub-text-color-2)">增量物化视图是物化视图的一种特殊形式。当数据在基础表中发生变化时（例如插入、更新、删除操作），增量物化视图不需要重新计算整个视图中的所有数据。相反，它只更新那些自上次刷新以来发生变化的部分。这样可以节省大量的计算资源和时间，显著提高性能，尤其是在处理大型数据集时。</p><p style="color:var(--sub-text-color-2)">自 v1.5.0 起，如果查询时有中间结果集需要加速，或者在读多写少的场景下，用户可以使用增量物化视图来加速查询。</p></li><li><p style="color:var(--sub-text-color-2)"><strong>在 AO 表上使用唯一索引。</strong></p><p style="color:var(--sub-text-color-2)">自 v1.5.0 起，你可以在 Cloudberry Database 的 Append-Optimized (AO) 或 Append-Optimized Column Store (AOCS) 表上添加唯一索引。有了唯一索引，Cloudberry Database 会在将数据插入到 AO 表时，强制检查唯一性约束，从而保证数据的唯一性，同时能够与优化器一起优化特定的查询，从而提高数据库的查询性能。但这也带来的一定的开销用于维护唯一索引，尤其是在插入数据时。</p></li></ul><h3>安全<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcloudberrydb.org%2Fzh%2Fdocs%2Freleases%2Frelease-1.5.0%23%25E5%25AE%2589%25E5%2585%25A8" target="_blank">​</a></h3><ul><li><p style="color:var(--sub-text-color-2)"><strong>支持创建和绑定数据库的用户密码策略配置。</strong></p><p style="color:var(--sub-text-color-2)">Profile，即密码策略配置，用于控制数据库中用户的密码安全策略。Profile 定义了用户管理和重复使用密码的规则。通过配置 Profile，数据库管理员可以使用 SQL 语句强制添加一些约束，例如在一定次数的登录失败后锁定账户，或者控制密码重复使用次数。</p><p style="color:var(--sub-text-color-2)">自 v1.5.0 起，Cloudberry Database 支持通过 SQL 语句创建 Profile，并将 Profile 绑定到一个或多个用户中，从而控制数据库用户的密码安全策略。</p></li></ul><h2>变更说明<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcloudberrydb.org%2Fzh%2Fdocs%2Freleases%2Frelease-1.5.0%23%25E5%258F%2598%25E6%259B%25B4%25E8%25AF%25B4%25E6%2598%258E" target="_blank">​</a></h2><h3>SQL 语法变更说明<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcloudberrydb.org%2Fzh%2Fdocs%2Freleases%2Frelease-1.5.0%23sql-%25E8%25AF%25AD%25E6%25B3%2595%25E5%258F%2598%25E6%259B%25B4%25E8%25AF%25B4%25E6%2598%258E" target="_blank">​</a></h3><p style="color:var(--sub-text-color-2); text-align:start"><code>CREATE MATERIALIZED VIEW</code><span>&nbsp;</span>新支持<span>&nbsp;</span><code>INCREMENTAL</code><span>&nbsp;</span>选项。你可以使用 SQL 命令<span>&nbsp;</span><code>CREATE INCREMENTAL MATERIALIZED VIEW</code><span>&nbsp;</span>来创建增量物化视图。完整的语法支持如下：</p><div><pre><code>CREATE [INCREMENTAL] MATERIALIZED VIEW [ IF NOT EXISTS ] table_name
    [ (column_name [, ...] ) ]
    [ USING method ]
    [ WITH ( storage_parameter [= value] [, ... ] ) ]
    [ TABLESPACE tablespace_name ]
    AS query
    [ WITH [ NO ] DATA ]</code></pre></div><h3>功能变更说明<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcloudberrydb.org%2Fzh%2Fdocs%2Freleases%2Frelease-1.5.0%23%25E5%258A%259F%25E8%2583%25BD%25E5%258F%2598%25E6%259B%25B4%25E8%25AF%25B4%25E6%2598%258E" target="_blank">​</a></h3><p style="color:var(--sub-text-color-2); text-align:start">无</p><h3>参数变更说明<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcloudberrydb.org%2Fzh%2Fdocs%2Freleases%2Frelease-1.5.0%23%25E5%258F%2582%25E6%2595%25B0%25E5%258F%2598%25E6%259B%25B4%25E8%25AF%25B4%25E6%2598%258E" target="_blank">​</a></h3><p style="color:var(--sub-text-color-2); text-align:start">无</p><h2>Bug 修复<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcloudberrydb.org%2Fzh%2Fdocs%2Freleases%2Frelease-1.5.0%23bug-%25E4%25BF%25AE%25E5%25A4%258D" target="_blank">​</a></h2><ul><li><p style="color:var(--sub-text-color-2)">修复了 AOCO 表内存越界的问题。该 Bug 导致的报错如下所示：</p><div><pre>SET default_table_access_method=ao_column;
CREATE temp TABLE nocolumns();

SELECT EXISTS(SELECT * FROM nocolumns);

WARNING: &nbsp;detected write past chunk end in ExecutorState 0x8f79b78 &nbsp;(seg0 slice1 127.0.1.1:7002 pid=16215)
</pre></div></li><li><p style="color:var(--sub-text-color-2)">修复了使用<span>&nbsp;</span><code>EXPLAIN</code><span>&nbsp;</span>查看查询计划时，输出结果中的<span>&nbsp;</span><code>operatorMem</code><span>&nbsp;</span>对齐问题，修复前显示如下：</p><div><pre>SET gp_resqueue_print_operator_memory_limits=ON;
EXPLAIN(COSTS OFF) SELECT COUNT(*) FROM test_hj_spill;

&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; QUERY PLAN
----------------------------------------------------------------------------
Finalize AggregateoperatorMem: 100 kB

&nbsp; &nbsp; &nbsp; -&gt; &nbsp;Gather Motion 3:1 &nbsp;(slice1; segments: 3)operatorMem: 100 kB

&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; -&gt; &nbsp;Partial AggregateoperatorMem: 100 kB

&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; -&gt; &nbsp;Seq Scan on test_hj_spilloperatorMem: 100 kB
</pre></div></li><li><p style="color:var(--sub-text-color-2)">修复了在特定条件下导致快照功能内存异常的问题，这个问题可能会在某些情况下使事务处理过程中发生 core dump。</p></li><li><p style="color:var(--sub-text-color-2)">改进了并行扫描操作时，并行哈希连接中内部表格大小的估算精度。</p></li><li><p style="color:var(--sub-text-color-2)">并行扫描时新增对 Semi HashJoin 类型的支持。</p></li><li><p style="color:var(--sub-text-color-2)">改进了<span>&nbsp;</span><code>NOT IN</code><span>&nbsp;</span>语句的处理逻辑，现在它可以正确地处理包含<span>&nbsp;</span><code>NULL</code><span>&nbsp;</span>值的情况。例如，在执行像<span>&nbsp;</span><code>SELECT c1 FROM t1_lasj WHERE c1 NOT IN (SELECT c1n FROM t2_lasj_has_null WHERE c1n IS NULL OR c1n IS NULL);</code><span>&nbsp;</span>这样的查询时，将得到正确的结果。</p></li><li><p style="color:var(--sub-text-color-2)">修复了在 macOS 上编译运行遇到的问题。</p></li><li><p style="color:var(--sub-text-color-2)">修复了<span>&nbsp;</span><code>CREATE EXTENSION</code><span>&nbsp;</span>时，用户的<span>&nbsp;</span><code>search_path</code><span>&nbsp;</span>发生变更的问题。</p></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Mon, 18 Mar 2024 03:20:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/283535/cloudberrydb-1-5-0-released</guid>
            <link>https://www.oschina.net/news/283535/cloudberrydb-1-5-0-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[基于 mybatis 的 orm：mybatis-mp 1.4.4 发布 - 丰富强大]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>升级申明：放心升级，不用任何担心，完全没问题</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><br><strong>1.4.4 更新：</strong><span style="background-color:#ffffff; color:#000000">1.4.4 发布</span><br><span style="background-color:#ffffff; color:#000000">1. @TableField 增加修改默认值</span><br><span style="background-color:#ffffff; color:#000000">2. 动态数据源支持 springboot3 自动装配</span><br><span style="background-color:#ffffff; color:#000000">3. 数据库函数和条件方法增加 null 和空值等检测</span><br><span style="background-color:#ffffff; color:#000000">4. 优化其他代码</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>mybatis-mp 包含丰富的 api：</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">1：基于注解，映射数据库；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">2：支持多表 join 和返回；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">3：api 采用 lambda 和 stream 流式设计；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">4：select 自动化以及结果 1 对 1,1 对多，超级方便快捷；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">5：内置分页以及超强的 sql 优化功能；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">6：稳定且性能极优；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">7：轻量级封装 mybatis，几乎没有侵入；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">8：api 丰富，支持数据库函数、多表、乐观锁、多租户、逻辑删除、默认值（可动态值） 等众多功能；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">9：零学习成本，和写 sql 一样方便。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">10：支持复杂的返回关系映射：例如一对一 ，一对多，多对多；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">11：支持自定义 sql 模板，再也不用担心框架支持不足；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">12：内置代码生成器，通过配置，可定制自身规范；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">13：全新的框架，全新的设计理念，新的就是好！</p><p>&nbsp;</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>mybatis-mp 包含丰富的 api：</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">1：基于注解，映射数据库；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">2：支持多表 join 和返回；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">3：api 采用 lambda 和 stream 流式设计；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">4：select 自动化以及结果 1 对 1,1 对多，超级方便快捷；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">5：内置分页以及超强的 sql 优化功能；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">6：稳定且性能极优；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">7：轻量级封装 mybatis，几乎没有侵入；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">8：api 丰富，支持数据库函数、多表、乐观锁、多租户、逻辑删除、默认值（可动态值） 等众多功能；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">9：零学习成本，和写 sql 一样方便。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">10：支持复杂的返回关系映射：例如一对一 ，一对多，多对多；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">11：支持自定义 sql 模板，再也不用担心框架支持不足；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">12：内置代码生成器，通过配置，可定制自身规范；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">13：全新的框架，全新的设计理念，新的就是好！</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 18 Mar 2024 02:59:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/283530/mybatis-mp-1-4-4-released</guid>
            <link>https://www.oschina.net/news/283530/mybatis-mp-1-4-4-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Podman Desktop 1.8 发布，带来自己的 K8s GUI]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Podman Desktop 1.8 已经发布，此版本带来：</p><ul><li><strong>Podman 4.9.3</strong>：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman%2Freleases%2Ftag%2Fv4.9.3" target="_blank">Podman 4.9.3</a>现在包含在 Windows 和 Mac 安装程序中。</li><li><strong>Kubernetes Explorer</strong>：用于使用 Kubernetes 集群的高级 UI 和新工具。</li><li><strong>Global Onboarding</strong>：通过一组指导工作流程，轻松配置和设置您的环境。</li><li><strong>学习中心</strong>：为开发人员发现新的用例和功能。</li><li><strong>扩展 API 改进</strong>：扩展 API 的另一项重大更新，为 🦭 Podman Desktop 的扩展带来更多好处。</li><li><strong>增强的构建、Pod 列表和故障排除页面</strong>：针对不同平台进行构建、升级的 Pod 视图等。</li></ul><p><img height="944" src="https://static.oschina.net/uploads/space/2024/0318/103731_jmJO_3820517.png" width="1704" referrerpolicy="no-referrer"></p><h3>Podman&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpodman-desktop.io%2Fblog%2Fpodman-desktop-release-1.8%23podman-493" target="_blank">4.9.3</a></h3><p style="margin-left:0px; margin-right:0px; text-align:start">🦭 Podman 4.9.3 包括针对我们用户报告的稳定性和可靠性问题的关键修复 - 特别是如果您使用 Apple 芯片架构。如果您一直在苦苦挣扎，我们强烈建议您更新！</p><h3>Kubernetes<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpodman-desktop.io%2Fblog%2Fpodman-desktop-release-1.8%23kubernetes-explorer" target="_blank">资源管理器</a></h3><p style="margin-left:0px; margin-right:0px; text-align:start">在过去的版本中作为实验性功能逐步引入，我们已准备好扩展我们的功能以帮助开发人员从容器过渡到 Kubernetes。在此版本中，我们引入了一组新功能，使开发人员能够使用更多 Kubernetes 资源，从而对应用程序提供更精细和交互式的控制。</p><p style="margin-left:0px; margin-right:0px; text-align:start">现在，🦭 Podman Desktop 中提供了一个新的 Kubernetes Explorer，除了对 Pod 的现有支持之外，它还能够使用部署、服务、入口和路由。对于每个资源，Podman Desktop 提供有关集群上资源状态的实时信息。在此概述页面的右上角，您还可以单击应用 YAML 在集群上创建或更新资源（类似于「kubectl apply -f」），并查看当前连接状态。</p><p style="margin-left:0px; margin-right:0px; text-align:start"><img height="844" src="https://static.oschina.net/uploads/space/2024/0318/104554_X2mJ_3820517.png" width="1296" referrerpolicy="no-referrer"></p><p>就像本地容器或映像一样，您可以单击「摘要」、「检查」和 Kube (YAML) 页面上的更多详细信息。</p><p style="margin-left:0px; margin-right:0px; text-align:start"><img height="862" src="https://static.oschina.net/uploads/space/2024/0318/104606_xUKa_3820517.png" width="1306" referrerpolicy="no-referrer"></p><p>看到问题了吗？您可以直接从 Kube 选项卡编辑和应用更改。</p><p style="margin-left:0px; margin-right:0px; text-align:start"><img height="860" src="https://static.oschina.net/uploads/space/2024/0318/104617_Knka_3820517.png" width="1302" referrerpolicy="no-referrer"></p><p>🦭 Podman Desktop 继续弥合差距和差异，使使用容器的开发人员能够通过高效的工作流程从本地工作站瞄准 Kubernetes。这是除了一些已经可用的强大功能之外的所有功能：</p><ul><li>Podman 的原生 Kubernetes 支持</li><li>Podify - 将容器转换为 Pod</li><li>使用 Minikube 和 Kind 扩展设置本地 Kubernetes 环境</li><li>部署到 Kubernetes 并将本地映像从 Podman 推送到 Kubernetes 环境</li><li>管理 Kubernetes 上下文</li><li>连接到远程 Kubernetes 集群</li></ul><h3>扩展 API<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpodman-desktop.io%2Fblog%2Fpodman-desktop-release-1.8%23extension-api-improvements" target="_blank">改进</a></h3><p style="margin-left:0px; margin-right:0px; text-align:start">我们继续花费大量时间添加新的扩展 API，为即将推出的扩展提供更多功能，甚至更好地集成到 🦭 Podman Desktop：</p><ul><li>拆分 getMatchingPodmanEngine&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F6160" target="_blank">#6160</a></li><li>创建容器时添加 HealthCheck 参数<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5981" target="_blank">#5981</a></li><li>将 listPods 暴露给扩展<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5864" target="_blank">#5864</a></li><li>createPod 的标签<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5862" target="_blank">#5862</a></li><li>允许在 Pod 中创建容器<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5848" target="_blank">#5848</a></li><li>OpenPod 应重定向到 pod 的视图<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5846" target="_blank">#5846</a></li><li>增强 createContainer API 缺少参数的情况<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F6011" target="_blank">#6011</a></li><li>允许扩展使用 openDialog/saveDialog&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F6009" target="_blank">#6009</a></li><li>允许在贡献的操作中自定义图标<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5995" target="_blank">#5995</a></li><li>添加缺失的类型<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F6213" target="_blank">#6213</a></li><li>允许从扩展导航到特定的 Web 视图<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5899" target="_blank">#5899</a></li><li>将 stopPod 和 removePod 暴露给扩展<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5898" target="_blank">#5898</a></li><li>使用新的 API 打开/保存对话框<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F6051" target="_blank">#6051</a>、<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F6050" target="_blank">#6050</a>、<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F6049" target="_blank">#6049</a></li><li>扩展 Podman Desktop API 构建映像参数<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5882" target="_blank">#5882</a></li><li>允许扩展至统计容器<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fissues%2F6211" target="_blank">#6211</a></li></ul><hr><h2>其他值得注意的<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpodman-desktop.io%2Fblog%2Fpodman-desktop-release-1.8%23other-notable-enhancements" target="_blank">增强功能</a></h2><p style="margin-left:0px; margin-right:0px; text-align:start">我们在此版本中添加了 40 多项功能，以下是其他一些亮点：</p><ul><li>改进 Podman Desktop 更新警报<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F6068" target="_blank">#6068</a></li><li>在故障排除中添加收集和下载日志按钮<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5119" target="_blank">#5119</a></li><li>为 Linux 启用 podman 机器<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5902" target="_blank">#5902</a></li><li>多次删除动画<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5717" target="_blank">#5717</a></li><li>图像删除动画<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5709" target="_blank">#5709</a></li><li>卷删除动画<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5707" target="_blank">#5707</a></li><li>打开 OpenShift 路线<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5560" target="_blank">#5560</a></li><li>添加打开创建的 Pod 详细信息<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F4499" target="_blank">#4499</a></li><li>部署到 kubernetes 集群时使用 https&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5824" target="_blank">#5824</a></li><li>仪表板页面上的入门轮播<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5142" target="_blank">#5142</a></li><li>删除对象时添加确认对话框<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5445" target="_blank">#5445</a></li></ul><p style="margin-left:0px; margin-right:0px; text-align:start">我们在实施 light 模式方面也取得了一些重大进展：</p><ul><li>使用主题颜色反转内容<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F6029" target="_blank">#6029</a></li><li>使用辅助导航的主题颜色<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F6028" target="_blank">#6028</a></li><li>为全球导航应用主题颜色<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F6027" target="_blank">#6027</a></li><li>为标题栏应用主题颜色<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F6025" target="_blank">#6025</a></li><li>一致的关闭按钮<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F6060" target="_blank">#6060</a></li><li>在快速选择中使用组件<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F6057" target="_blank">#6057</a></li><li>为 webview 提供 css 颜色<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5963" target="_blank">#5963</a></li><li>将颜色发布到应用程序的样式<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5962" target="_blank">#5962</a></li><li>允许扩展提供带有一组颜色的主题<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5961" target="_blank">#5961</a></li><li>商店颜色<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5960" target="_blank">#5960</a></li><li>包括颜色注册表<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5958" target="_blank">#5958</a></li><li>添加实用方法来获取主题的值<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5947" target="_blank">#5947</a></li><li>当操作系统更改颜色时发送事件<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5946" target="_blank">#5946</a></li><li>清理深色：前缀颜色<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5944" target="_blank">#5944</a></li><li>将调色板提取到自己的文件中<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5931" target="_blank">#5931</a></li><li>输入组件<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5904" target="_blank">#5904</a></li><li>输入错误，在运行图像中使用输入组件<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5988" target="_blank">#5988</a></li><li>构建图像时使用输入<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5986" target="_blank">#5986</a></li><li>使用代理设置输入<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5943" target="_blank">#5943</a></li><li>使用注册表输入<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5939" target="_blank">#5939</a></li><li>从容器创建 pod 时使用输入<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5935" target="_blank">#5935</a></li><li>在扩展页面中使用输入组件<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5934" target="_blank">#5934</a></li><li>在创建卷中使用输入<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5933" target="_blank">#5933</a></li><li>重命名图像时使用输入<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5964" target="_blank">#5964</a></li><li>在部署到 kube 时使用复选框组件<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F6030" target="_blank">#6030</a></li></ul><hr><h2>值得注意的错误<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpodman-desktop.io%2Fblog%2Fpodman-desktop-release-1.8%23notable-bug-fixes" target="_blank">修复</a></h2><p style="margin-left:0px; margin-right:0px; text-align:start">我们在此版本中修复了许多错误，包括以下内容：</p><ul><li>将容器复制到 pod 时安装的复制卷<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5640" target="_blank">#5640</a></li><li>更改卷和容器列表中「创建」按钮的顺序<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F6092" target="_blank">#6092</a></li><li>上下文值更新时刷新入门项目 (#4597)&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F6173" target="_blank">#6173</a></li><li>更好地登录 informer 连接错误<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F6158" target="_blank">#6158</a></li><li>网站：替换损坏的链接<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F6111" target="_blank">#6111</a></li><li>中心空屏幕<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F6077" target="_blank">#6077</a></li><li>不要求确认打开本地文件夹/文件<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5743" target="_blank">#5743</a></li><li>强制面包屑垂直对齐<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5741" target="_blank">#5741</a></li><li>身份验证页面中的长用户名<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5737" target="_blank">#5737</a></li><li>用于更新任务名称的消息属性<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5731" target="_blank">#5731</a></li><li>导航项 UI 修复<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5886" target="_blank">#5886</a></li><li>显示回注册表的图标<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5843" target="_blank">#5843</a></li><li>检查路由 tls 以使用 http 或 https&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5825" target="_blank">#5825</a></li><li>白色工具提示<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5887" target="_blank">#5887</a></li><li>限制注册表用户名列宽度<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5718" target="_blank">#5718</a></li><li>删除 Linux 上的 docker 兼容性警告和按钮<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5903" target="_blank">#5903</a></li><li>容器的图像使用情况<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5663" target="_blank">#5663</a></li><li>删除当前上下文时应更改/更新<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5819" target="_blank">#5819</a></li><li>不要折叠侧边栏上的类别<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5727" target="_blank">#5727</a></li><li>使 localhost 成为 env.openExternal 调用的有效域<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5716" target="_blank">#5716</a></li></ul><hr><h2><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpodman-desktop.io%2Fblog%2Fpodman-desktop-release-1.8%23documentation" target="_blank">文档</a></h2><p style="margin-left:0px; margin-right:0px; text-align:start">随着新版本的 🦭 Podman Desktop 的发布，文档也进行了以下改进：</p><ul><li>containerEngine api 的容器和图像相关方法<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5891" target="_blank">#5891</a></li><li>删除了使用 openshift local 安装 podman&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F6070" target="_blank">#6070</a></li><li>文档图像检查器提供程序 API&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5813" target="_blank">#5813</a></li><li>添加 withProgress api 文档<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5736" target="_blank">#5736</a></li><li>添加了故障排除页面的链接<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5734" target="_blank">#5734</a></li><li>macOS M1/M2/M3 上的安装故障排除<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5708" target="_blank">#5708</a></li><li>卷删除<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5707" target="_blank">#5707</a></li><li>添加了<em>从另一个 WSL 实例访问 Podman</em>（配置、验证）<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5706" target="_blank">#5706</a></li><li>使用 typedoc 生成 api 文档<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5705" target="_blank">#5705</a></li></ul><p>下载：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpodman-desktop.io%2Fdownloads" target="_blank">https://podman-desktop.io/downloads</a></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 18 Mar 2024 02:44:52 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/283526/podman-desktop-1-8-released</guid>
            <link>https://www.oschina.net/news/283526/podman-desktop-1-8-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[🔥【 对标 openssh 客户端 】tssh 发布 v0.1.19]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>tssh 是一个 openssh 客户端的替代品， 基础功能兼容 openssh，另外提供了很多有用的扩展功能。</p><p>新版本 v0.1.19&nbsp;解决了一些大家遇到的问题，配置的注释做了一点小调整。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">GitHub：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ftrzsz%2Ftrzsz-ssh" target="_blank">https://github.com/trzsz/trzsz-ssh</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">Gitee：<a href="https://gitee.com/trzsz/tssh">https://gitee.com/trzsz/tssh</a></p><hr><h2>配置注释</h2><ul><li><p><code>tssh</code><span>&nbsp;</span>配置中的注释基本与<span>&nbsp;</span><code>openssh</code><span>&nbsp;</span>一致，额外做了一些扩展支持，详见下表：</p><table cellspacing="0" style="border-collapse:collapse; border-spacing:0px; box-sizing:border-box; display:block; overflow:auto; width:888px; word-break:keep-all"><tbody><tr><th>注释</th><th>openssh</th><th>tssh</th></tr></tbody><tbody><tr><td style="border-color:#e9ebec; border-style:solid; border-width:1px"><code>#</code><span>&nbsp;</span>开头的配置行</td><td style="border-color:#e9ebec; border-style:solid; border-width:1px">是注释</td><td style="border-color:#e9ebec; border-style:solid; border-width:1px">是注释</td></tr><tr><td style="border-color:#e9ebec; border-style:solid; border-width:1px"><code>#!!</code><span>&nbsp;</span>开头的配置行</td><td style="border-color:#e9ebec; border-style:solid; border-width:1px">是注释</td><td style="border-color:#e9ebec; border-style:solid; border-width:1px">非注释</td></tr><tr><td style="border-color:#e9ebec; border-style:solid; border-width:1px"><code>Key Value # Comment</code></td><td style="border-color:#e9ebec; border-style:solid; border-width:1px">看情况</td><td style="border-color:#e9ebec; border-style:solid; border-width:1px">是注释</td></tr><tr><td style="border-color:#e9ebec; border-style:solid; border-width:1px"><code>Key=Value # Comment</code></td><td style="border-color:#e9ebec; border-style:solid; border-width:1px">看情况</td><td style="border-color:#e9ebec; border-style:solid; border-width:1px">非注释</td></tr></tbody></table></li><li><p><code>#</code><span>&nbsp;</span>开头的配置行，<code>openssh</code><span>&nbsp;</span>一律认为是注释；<code>tssh</code><span>&nbsp;</span>认为<span>&nbsp;</span><code>#!!</code><span>&nbsp;</span>开头的配置行不是注释，其他以<span>&nbsp;</span><code>#</code><span>&nbsp;</span>开头的配置行是注释。</p></li><li><p><code>Key Value # Comment</code><span>&nbsp;</span>配置（没有<span>&nbsp;</span><code>=</code><span>&nbsp;</span>号），<code>openssh</code><span>&nbsp;</span>有些情况认为<span>&nbsp;</span><code>#</code><span>&nbsp;</span>后的内容是注释，有些情况认为不是注释；<code>tssh</code><span>&nbsp;</span>一律认为<span>&nbsp;</span><code>#</code><span>&nbsp;</span>后的内容是注释。</p></li><li><p><code>Key=Value # Comment</code><span>&nbsp;</span>配置（有<span>&nbsp;</span><code>=</code><span>&nbsp;</span>号），<code>openssh</code><span>&nbsp;</span>有些情况认为<span>&nbsp;</span><code>#</code><span>&nbsp;</span>后的内容是注释，有些情况认为不是注释；<code>tssh</code><span>&nbsp;</span>一律认为<span>&nbsp;</span><code>#</code><span>&nbsp;</span>后的内容不是注释。</p></li></ul><hr><div><div><div><div><div><h2>为什么做</h2><ul><li><p style="margin-left:0; margin-right:0">服务器太多，记不住所有别名，<code>tssh</code><span>&nbsp;</span>内置登录界面，支持搜索和选择服务器登录。</p></li><li><p style="margin-left:0; margin-right:0"><code>tssh</code><span>&nbsp;</span>登录服务器后，内置支持<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Ftrzsz.github.io%2Fcn%2F">trzsz</a><span>&nbsp;</span>(trz /tsz) 工具，传文件无需另外新开窗口。</p></li><li><p style="margin-left:0; margin-right:0">有时需要同时登录一批机器，<code>tssh</code><span>&nbsp;</span>支持多选并批量登录，同时支持执行预设的命令。</p></li><li><p style="margin-left:0; margin-right:0">有些服务器不支持公钥登录，<code>tssh</code><span>&nbsp;</span>支持记住密码，支持自动交互，提升登录的效率。</p></li><li><p style="margin-left:0; margin-right:0">在 Windows 中使用<span>&nbsp;</span><code>tssh</code><span>&nbsp;</span>代替<span>&nbsp;</span><code>trzsz ssh</code>，可以解决<span>&nbsp;</span><code>trz</code><span>&nbsp;</span>上传速度很慢的问题。</p></li></ul><h2>安装方法</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><strong><em>客户端安装<span>&nbsp;</span><code>trzsz-ssh ( tssh )</code><span>&nbsp;</span>的方法如下（ 任选其一 ）：</em></strong></p><ul><li><p style="margin-left:0; margin-right:0">Windows 可用<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Fscoop.sh%2F">scoop</a><span>&nbsp;</span>/<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Flearn.microsoft.com%2Fzh-cn%2Fwindows%2Fpackage-manager%2Fwinget%2F">winget</a><span>&nbsp;</span>/<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Fcommunity.chocolatey.org%2F">choco</a><span>&nbsp;</span>安装</p><code>scoop install tssh</code><span>&nbsp;</span>/<span>&nbsp;</span><code>winget install tssh</code><span>&nbsp;</span>/<span>&nbsp;</span><code>choco install tssh</code><div><div><pre><span><span style="color:#6f42c1">scoop</span><span style="color:#0086b3"><span style="color:#032f62">install </span></span><span style="color:#032f62">tssh</span></span></pre></div></div><div><div><pre><span><span style="color:#6f42c1">winget</span><span style="color:#0086b3"><span style="color:#032f62">install </span></span><span style="color:#032f62">tssh</span></span></pre></div></div><div><div><pre><span><span style="color:#6f42c1">choco</span><span style="color:#0086b3"><span style="color:#032f62">install </span></span><span style="color:#032f62">tssh</span></span></pre></div></div></li><li><p style="margin-left:0; margin-right:0">MacOS 可用<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Fbrew.sh%2F">homebrew</a><span>&nbsp;</span>安装</p><code>brew install trzsz-ssh</code><div><div><pre><span><span style="color:#6f42c1">brew</span><span style="color:#032f62">update</span></span><span><span style="color:#6f42c1">brew</span><span style="color:#0086b3"><span style="color:#032f62">install </span></span><span style="color:#032f62">trzsz-ssh</span></span></pre></div></div></li><li><p style="margin-left:0; margin-right:0">Ubuntu 可用 apt 安装</p><code>sudo apt install tssh</code><div><div><pre><span><span style="color:#0086b3">sudo </span>apt <span style="color:#d73a49">update</span><span>&amp;&amp;</span><span style="color:#0086b3">sudo </span>apt <span style="color:#0086b3"><span style="color:#d73a49">install</span></span>software-properties-common</span><span><span style="color:#0086b3">sudo </span><span style="color:#d73a49">add</span>-apt-repository ppa:trzsz/ppa <span>&amp;&amp;</span><span style="color:#0086b3">sudo </span>apt <span style="color:#d73a49">update</span></span><span><span style="color:#0086b3">sudo </span>apt <span style="color:#0086b3"><span style="color:#d73a49">install</span></span>tssh</span></pre></div></div></li><li><p style="margin-left:0; margin-right:0">Debian 可用 apt 安装</p><code>sudo apt install tssh</code><div><div><pre><span><span style="color:#0086b3"><span style="color:#6f42c1">sudo</span></span><span style="color:#032f62">apt </span><span style="color:#0086b3"><span style="color:#032f62">install </span></span><span style="color:#032f62">curl gpg</span></span><span><span style="color:#6f42c1">curl</span><span style="color:#000080"><span style="color:#032f62">-s</span></span><span style="color:#032f62"></span><span style="color:#dd1144"><span style="color:#032f62">'https://keyserver.ubuntu.com/pks/lookup?op=get&amp;search=0x7074ce75da7cc691c1ae1a7c7e51d1ad956055ca'</span></span><span style="color:#032f62"></span><span style="color:#dd1144"><span style="color:#032f62">\</span></span></span><span style="color:#032f62"></span><span><span style="color:#032f62">  | gpg </span><span style="color:#000080"><span style="color:#032f62">--dearmor</span></span><span style="color:#032f62"></span><span style="color:#000080"><span style="color:#032f62">-o</span></span><span style="color:#032f62"> /usr/share/keyrings/trzsz.gpg</span></span><span><span style="color:#0086b3"><span style="color:#6f42c1">echo</span></span><span style="color:#dd1144"><span style="color:#032f62">'deb [signed-by=/usr/share/keyrings/trzsz.gpg] https://ppa.launchpadcontent.net/trzsz/ppa/ubuntu jammy main'</span></span><span style="color:#032f62"></span><span style="color:#dd1144"><span style="color:#032f62">\</span></span></span><span style="color:#032f62"></span><span><span style="color:#032f62">  | </span><span style="color:#0086b3"><span style="color:#032f62">sudo tee</span></span><span style="color:#032f62"> /etc/apt/sources.list.d/trzsz.list</span></span><span><span style="color:#0086b3"><span style="color:#6f42c1">sudo</span></span><span style="color:#032f62">apt update</span></span><span><span style="color:#0086b3"><span style="color:#6f42c1">sudo</span></span><span style="color:#032f62">apt </span><span style="color:#0086b3"><span style="color:#032f62">install </span></span><span style="color:#032f62">tssh</span></span></pre></div></div></li><li><p style="margin-left:0; margin-right:0">Linux 可用 yum 安装</p><code>sudo yum install tssh</code><ul><li><p style="margin-left:0; margin-right:0">国内推荐使用<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.wlnmp.com%2Finstall">wlnmp</a><span>&nbsp;</span>源，安装 tssh 只需要添加 wlnmp 源（ 配置 epel 源不是必须的 ）：</p><div><div><pre><span><span style="color:#6f42c1">curl</span><span style="color:#000080"><span style="color:#032f62">-fsSL</span></span><span style="color:#032f62"></span><span style="color:#dd1144"><span style="color:#032f62">"https://sh.wlnmp.com/wlnmp.sh"</span></span><span style="color:#032f62"> | bash</span></span><span><span style="color:#0086b3"><span style="color:#6f42c1">sudo</span></span><span style="color:#032f62">yum </span><span style="color:#0086b3"><span style="color:#032f62">install </span></span><span style="color:#032f62">tssh</span></span></pre></div></div></li><li><p style="margin-left:0; margin-right:0">也可使用<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Fgemfury.com%2F">gemfury</a><span>&nbsp;</span>源（ 只要网络通，所有操作系统通用 ）</p><div><div><pre><span><span style="color:#0086b3">echo</span><span style="color:#dd1144">'[trzsz]</span></span><span><span style="color:#dd1144">name=Trzsz Repo</span></span><span><span style="color:#dd1144">baseurl=https://yum.fury.io/trzsz/</span></span><span><span style="color:#dd1144">enabled=1</span></span><span><span style="color:#dd1144">gpgcheck=0'</span> | <span style="color:#0086b3">sudo tee</span> /etc/yum.repos.d/trzsz.repo</span><span><span style="color:#0086b3">sudo </span>yum <span style="color:#0086b3">install </span>tssh</span></pre></div></div></li></ul></li><li><p style="margin-left:0; margin-right:0">ArchLinux 可用<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FJguer%2Fyay">yay</a><span>&nbsp;</span>安装</p><code>yay -S tssh</code><div><div><pre><span><span style="color:#6f42c1">yay</span><span style="color:#000080"><span style="color:#032f62">-Syu</span></span></span><span><span style="color:#6f42c1">yay</span><span style="color:#000080"><span style="color:#032f62">-S</span></span><span style="color:#032f62"> tssh</span></span></pre></div></div></li><li><p style="margin-left:0; margin-right:0">用 Go 直接安装（ 要求 go 1.20 以上 ）</p><code>go install github.com/trzsz/trzsz-ssh/cmd/tssh@latest</code><div><div><pre><span><span style="color:#005cc5">go</span><span style="color:#0086b3">install </span>github.com/trzsz/trzsz-ssh/cmd/tssh<span style="color:#032f62">@latest</span></span></pre></div></div><p style="margin-left:0; margin-right:0">安装后，<code>tssh</code><span>&nbsp;</span>程序一般位于<span>&nbsp;</span><code>~/go/bin/</code><span>&nbsp;</span>目录下（ Windows 一般在<span>&nbsp;</span><code>C:\Users\your_name\go\bin\</code><span>&nbsp;</span>）。</p></li><li><p style="margin-left:0; margin-right:0">用 Go 自己编译（ 要求 go 1.20 以上 ）</p><code>sudo make install</code><div><div><pre><span><span style="color:#6f42c1">git</span><span style="color:#032f62">clone </span><span style="color:#000080"><span style="color:#032f62">--depth</span></span><span style="color:#032f62"> 1 https://github.com/trzsz/trzsz-ssh.git</span></span><span><span style="color:#0086b3"><span style="color:#6f42c1">cd</span></span><span style="color:#032f62">trzsz-ssh</span></span><span><span style="color:#6f42c1">make</span></span><span><span style="color:#0086b3"><span style="color:#6f42c1">sudo</span></span><span style="color:#032f62">make </span><span style="color:#0086b3"><span style="color:#032f62">install</span></span></span></pre></div></div></li><li><p style="margin-left:0; margin-right:0">可从<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Ftrzsz%2Ftrzsz-ssh%2Freleases">GitHub Releases</a><span>&nbsp;</span>中下载，国内可从<span>&nbsp;</span><a href="https://gitee.com/trzsz/tssh/releases">Gitee 发行版</a><span>&nbsp;</span>中下载，解压并加到<span>&nbsp;</span><code>PATH</code><span>&nbsp;</span>环境变量中。</p></li></ul><h2>登录界面</h2><ul><li><p style="margin-left:0; margin-right:0">使用之前，需要配置好<span>&nbsp;</span><code>~/.ssh/config</code><span>&nbsp;</span>( Windows 是<span>&nbsp;</span><code>C:\Users\xxx\.ssh\config</code>,<span>&nbsp;</span><code>xxx</code><span>&nbsp;</span>换成用户名 )。</p></li><li><p style="margin-left:0; margin-right:0">关于如何配置<span>&nbsp;</span><code>~/.ssh/config</code>，请参考<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Fmanpages.debian.org%2Fbookworm%2Fopenssh-client%2Fssh_config.5.en.html">openssh</a><span>&nbsp;</span>( 暂不支持<span>&nbsp;</span><code>Match</code><span>&nbsp;</span>)，或参考 tssh wiki<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Ftrzsz%2Ftrzsz-ssh%2Fwiki%2FSSH%25E5%259F%25BA%25E6%259C%25AC%25E9%2585%258D%25E7%25BD%25AE">SSH 基本配置</a>。</p></li><li><p style="margin-left:0; margin-right:0">直接无参数运行<span>&nbsp;</span><code>tssh</code><span>&nbsp;</span>命令就会打开登录界面，或者有除目标机器外的其他参数也会打开登录界面。</p></li><li><p style="margin-left:0; margin-right:0">如果目标机器参数是<span>&nbsp;</span><code>~/.ssh/config</code><span>&nbsp;</span>中别名的一部分，不能完全匹配某个别名，也会打开登录界面。</p></li><li><p style="margin-left:0; margin-right:0">别名含有<span>&nbsp;</span><code>*</code><span>&nbsp;</span>或<span>&nbsp;</span><code>?</code><span>&nbsp;</span>通配符时，则不会显示在登录界面中，要隐藏的别名可以加个<span>&nbsp;</span><code>*</code><span>&nbsp;</span>前缀或后缀。</p></li><li><p style="margin-left:0; margin-right:0"><code>tssh</code><span>&nbsp;</span>支持很多快捷键，支持搜索，在<span>&nbsp;</span><code>tmux</code>、<code>iTerm2</code><span>&nbsp;</span>和<span>&nbsp;</span><code>Windows Terminal</code><span>&nbsp;</span>等中使用时支持多选。</p><table cellspacing="0" style="border-collapse:collapse; border-spacing:0px; border:none; box-sizing:border-box; color:#444444; display:block; font-size:14px; line-height:inherit; margin:0px 0px 16px; max-width:100%; overflow:auto; width:803px; word-break:initial"><tbody><tr><th>操作</th><th>全局快捷键</th><th>非搜索快捷键</th><th>快捷键描述</th></tr></tbody><tbody><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Confirm</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Enter</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">&nbsp;</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">确认并登录</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Quit/Exit</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Ctrl+C Ctrl+Q</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">q Q</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">取消并退出</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Move Prev</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Ctrl+K Shift+Tab ↑</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">k K</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">往上移光标</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Move Next</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Ctrl+J Tab ↓</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">j J</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">往下移光标</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Page Up</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Ctrl+H Ctrl+U Ctrl+B PageUp ←</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">h H u U b B</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">往上翻一页</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Page Down</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Ctrl+L Ctrl+D Ctrl+F PageDown →</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">l L d D f F</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">往下翻一页</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Goto Home</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Home</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">g</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">跳到第一行</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Goto End</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">End</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">G</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">跳到最尾行</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">EraseKeys</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Ctrl+E</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">e E</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">擦除搜索关键字</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">TglSearch</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">/</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">&nbsp;</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">切换搜索功能</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Tgl Help</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">?</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">&nbsp;</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">切换帮助信息</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">TglSelect</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Ctrl+X Ctrl+Space Alt+Space</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Space x X</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">切换选中状态</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">SelectAll</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Ctrl+A</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">a A</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">全选当前页</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">SelectOpp</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Ctrl+O</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">o O</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">反选当前页</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Open Wins</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Ctrl+W</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">w W</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">新窗口批量登录</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Open Tabs</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Ctrl+T</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">t T</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">新 Tab 批量登录</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Open Pane</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Ctrl+P</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">p P</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">分屏批量登录</td></tr></tbody></table></li></ul><h2>主题风格</h2><ul><li><p style="margin-left:0; margin-right:0"><code>tssh</code><span>&nbsp;</span>支持多种主题风格，在<span>&nbsp;</span><code>~/.tssh.conf</code><span>&nbsp;</span>中配置<span>&nbsp;</span><code>PromptThemeLayout</code><span>&nbsp;</span>选用。欢迎一起来创造更多更好看的。</p></li><li><p style="margin-left:0; margin-right:0">每种主题风格都支持自定义颜色，在<span>&nbsp;</span><code>~/.tssh.conf</code><span>&nbsp;</span>中配置<span>&nbsp;</span><code>PromptThemeColors</code>，只要配置非默认的颜色即可。</p></li><li><p style="margin-left:0; margin-right:0">请为你喜欢的主题风格<a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Ftrzsz%2Ftrzsz-ssh%2Fissues%2F75">❤️投票❤️</a>，得票数最高的主题风格将会在下个版本被设置为默认主题。</p></li></ul><h3>tiny 小巧风</h3><ul><li><p style="margin-left:0; margin-right:0">在<span>&nbsp;</span><code>~/.tssh.conf</code><span>&nbsp;</span>中配置<span>&nbsp;</span><code>PromptThemeLayout = tiny</code><span>&nbsp;</span>选用<span>&nbsp;</span><code>tiny 小巧风</code>。<span>&nbsp;</span></p><img height="412" src="https://oscimg.oschina.net/oscnet/up-42c50ae2f804c96af3aefe1412cbddfb178.gif" width="691" referrerpolicy="no-referrer"></li><li><p style="margin-left:0; margin-right:0">在<span>&nbsp;</span><code>~/.tssh.conf</code><span>&nbsp;</span>中配置<span>&nbsp;</span><code>PromptThemeColors</code>，要求配置成一行。<code>tiny 小巧风</code><span>&nbsp;</span>支持以下配置项：</p><code>tiny 颜色配置项和默认值：</code><div><div><pre><span><span>{</span></span><span><span style="color:#bbbbbb"></span><span><span style="color:#6f42c1">"help_tips"</span></span><span>:</span><span style="color:#bbbbbb"></span><span style="color:#dd1144"><span style="color:#032f62">"faint"</span></span><span>,</span></span><span><span style="color:#bbbbbb"></span><span><span style="color:#6f42c1">"shortcuts"</span></span><span>:</span><span style="color:#bbbbbb"></span><span style="color:#dd1144"><span style="color:#032f62">"faint"</span></span><span>,</span></span><span><span style="color:#bbbbbb"></span><span><span style="color:#6f42c1">"label_icon"</span></span><span>:</span><span style="color:#bbbbbb"></span><span style="color:#dd1144"><span style="color:#032f62">"blue"</span></span><span>,</span></span><span><span style="color:#bbbbbb"></span><span><span style="color:#6f42c1">"label_text"</span></span><span>:</span><span style="color:#bbbbbb"></span><span style="color:#dd1144"><span style="color:#032f62">"default"</span></span><span>,</span></span><span><span style="color:#bbbbbb"></span><span><span style="color:#6f42c1">"cursor_icon"</span></span><span>:</span><span style="color:#bbbbbb"></span><span style="color:#dd1144"><span style="color:#032f62">"green|bold"</span></span><span>,</span></span><span><span style="color:#bbbbbb"></span><span><span style="color:#6f42c1">"active_selected"</span></span><span>:</span><span style="color:#bbbbbb"></span><span style="color:#dd1144"><span style="color:#032f62">"green|bold"</span></span><span>,</span></span><span><span style="color:#bbbbbb"></span><span><span style="color:#6f42c1">"active_alias"</span></span><span>:</span><span style="color:#bbbbbb"></span><span style="color:#dd1144"><span style="color:#032f62">"cyan|bold"</span></span><span>,</span></span><span><span style="color:#bbbbbb"></span><span><span style="color:#6f42c1">"active_host"</span></span><span>:</span><span style="color:#bbbbbb"></span><span style="color:#dd1144"><span style="color:#032f62">"magenta|bold"</span></span><span>,</span></span><span><span style="color:#bbbbbb"></span><span><span style="color:#6f42c1">"active_group"</span></span><span>:</span><span style="color:#bbbbbb"></span><span style="color:#dd1144"><span style="color:#032f62">"blue|bold"</span></span><span>,</span></span><span><span style="color:#bbbbbb"></span><span><span style="color:#6f42c1">"inactive_selected"</span></span><span>:</span><span style="color:#bbbbbb"></span><span style="color:#dd1144"><span style="color:#032f62">"green|bold"</span></span><span>,</span></span><span><span style="color:#bbbbbb"></span><span><span style="color:#6f42c1">"inactive_alias"</span></span><span>:</span><span style="color:#bbbbbb"></span><span style="color:#dd1144"><span style="color:#032f62">"cyan"</span></span><span>,</span></span><span><span style="color:#bbbbbb"></span><span><span style="color:#6f42c1">"inactive_host"</span></span><span>:</span><span style="color:#bbbbbb"></span><span style="color:#dd1144"><span style="color:#032f62">"magenta"</span></span><span>,</span></span><span><span style="color:#bbbbbb"></span><span><span style="color:#6f42c1">"inactive_group"</span></span><span>:</span><span style="color:#bbbbbb"></span><span style="color:#dd1144"><span style="color:#032f62">"blue"</span></span><span>,</span></span><span><span style="color:#bbbbbb"></span><span><span style="color:#6f42c1">"details_title"</span></span><span>:</span><span style="color:#bbbbbb"></span><span style="color:#dd1144"><span style="color:#032f62">"default"</span></span><span>,</span></span><span><span style="color:#bbbbbb"></span><span><span style="color:#6f42c1">"details_name"</span></span><span>:</span><span style="color:#bbbbbb"></span><span style="color:#dd1144"><span style="color:#032f62">"faint"</span></span><span>,</span></span><span><span style="color:#bbbbbb"></span><span><span style="color:#6f42c1">"details_value"</span></span><span>:</span><span style="color:#bbbbbb"></span><span style="color:#dd1144"><span style="color:#032f62">"default"</span></span></span><span><span>}</span></span></pre></div></div><code>tiny 支持的颜色枚举，可用 `|` 连接多个：</code><div><div><pre><span>default</span><span>black</span><span>red</span><span>green</span><span>yellow</span><span>blue</span><span>magenta</span><span>cyan</span><span>white</span><span>bgBlack</span><span>bgRed</span><span>bgGreen</span><span>bgYellow</span><span>bgBlue</span><span>bgMagenta</span><span>bgCyan</span><span>bgWhite</span><span>bold</span><span>faint</span><span>italic</span><span>underline</span></pre></div></div></li></ul><h3>simple 简约风</h3><ul><li><p style="margin-left:0; margin-right:0">在<span>&nbsp;</span><code>~/.tssh.conf</code><span>&nbsp;</span>中配置<span>&nbsp;</span><code>PromptThemeLayout = simple</code><span>&nbsp;</span>选用<span>&nbsp;</span><code>simple 简约风</code>。<span>&nbsp;</span></p><img height="627" src="https://oscimg.oschina.net/oscnet/up-b3eeeb9b4a1ca831d0501803e32f5d9b274.gif" width="691" referrerpolicy="no-referrer"></li><li><p style="margin-left:0; margin-right:0"><code>simple 简约风</code><span>&nbsp;</span>支持的颜色配置项、默认值和颜色枚举，和<span>&nbsp;</span><code>tiny 小巧风</code><span>&nbsp;</span>完全相同，请参考前文。</p></li></ul><h3>table 表格风</h3><ul><li><p style="margin-left:0; margin-right:0">在<span>&nbsp;</span><code>~/.tssh.conf</code><span>&nbsp;</span>中配置<span>&nbsp;</span><code>PromptThemeLayout = table</code><span>&nbsp;</span>选用<span>&nbsp;</span><code>table 表格风</code>。<span>&nbsp;</span></p><img height="706" src="https://oscimg.oschina.net/oscnet/up-f0af20cd0644e9b826df9444366b25cb87d.gif" width="691" referrerpolicy="no-referrer"></li><li><p style="margin-left:0; margin-right:0">在<span>&nbsp;</span><code>~/.tssh.conf</code><span>&nbsp;</span>中配置<span>&nbsp;</span><code>PromptThemeColors</code>，要求配置成一行。<code>table 表格风</code><span>&nbsp;</span>支持以下配置项：</p><code>table 颜色配置项和默认值：</code><div><div><pre><span><span>{</span></span><span><span style="color:#bbbbbb"></span><span><span style="color:#6f42c1">"help_tips"</span></span><span>:</span><span style="color:#bbbbbb"></span><span style="color:#dd1144"><span style="color:#032f62">"faint"</span></span><span>,</span></span><span><span style="color:#bbbbbb"></span><span><span style="color:#6f42c1">"shortcuts"</span></span><span>:</span><span style="color:#bbbbbb"></span><span style="color:#dd1144"><span style="color:#032f62">"faint"</span></span><span>,</span></span><span><span style="color:#bbbbbb"></span><span><span style="color:#6f42c1">"table_header"</span></span><span>:</span><span style="color:#bbbbbb"></span><span style="color:#dd1144"><span style="color:#032f62">"10"</span></span><span>,</span></span><span><span style="color:#bbbbbb"></span><span><span style="color:#6f42c1">"default_alias"</span></span><span>:</span><span style="color:#bbbbbb"></span><span style="color:#dd1144"><span style="color:#032f62">"6"</span></span><span>,</span></span><span><span style="color:#bbbbbb"></span><span><span style="color:#6f42c1">"default_host"</span></span><span>:</span><span style="color:#bbbbbb"></span><span style="color:#dd1144"><span style="color:#032f62">"5"</span></span><span>,</span></span><span><span style="color:#bbbbbb"></span><span><span style="color:#6f42c1">"default_group"</span></span><span>:</span><span style="color:#bbbbbb"></span><span style="color:#dd1144"><span style="color:#032f62">"4"</span></span><span>,</span></span><span><span style="color:#bbbbbb"></span><span><span style="color:#6f42c1">"selected_icon"</span></span><span>:</span><span style="color:#bbbbbb"></span><span style="color:#dd1144"><span style="color:#032f62">"2"</span></span><span>,</span></span><span><span style="color:#bbbbbb"></span><span><span style="color:#6f42c1">"selected_alias"</span></span><span>:</span><span style="color:#bbbbbb"></span><span style="color:#dd1144"><span style="color:#032f62">"14"</span></span><span>,</span></span><span><span style="color:#bbbbbb"></span><span><span style="color:#6f42c1">"selected_host"</span></span><span>:</span><span style="color:#bbbbbb"></span><span style="color:#dd1144"><span style="color:#032f62">"13"</span></span><span>,</span></span><span><span style="color:#bbbbbb"></span><span><span style="color:#6f42c1">"selected_group"</span></span><span>:</span><span style="color:#bbbbbb"></span><span style="color:#dd1144"><span style="color:#032f62">"12"</span></span><span>,</span></span><span><span style="color:#bbbbbb"></span><span><span style="color:#6f42c1">"default_border"</span></span><span>:</span><span style="color:#bbbbbb"></span><span style="color:#dd1144"><span style="color:#032f62">"8"</span></span><span>,</span></span><span><span style="color:#bbbbbb"></span><span><span style="color:#6f42c1">"selected_border"</span></span><span>:</span><span style="color:#bbbbbb"></span><span style="color:#dd1144"><span style="color:#032f62">"10"</span></span><span>,</span></span><span><span style="color:#bbbbbb"></span><span><span style="color:#6f42c1">"details_name"</span></span><span>:</span><span style="color:#bbbbbb"></span><span style="color:#dd1144"><span style="color:#032f62">"4"</span></span><span>,</span></span><span><span style="color:#bbbbbb"></span><span><span style="color:#6f42c1">"details_value"</span></span><span>:</span><span style="color:#bbbbbb"></span><span style="color:#dd1144"><span style="color:#032f62">"3"</span></span><span>,</span></span><span><span style="color:#bbbbbb"></span><span><span style="color:#6f42c1">"details_border"</span></span><span>:</span><span style="color:#bbbbbb"></span><span style="color:#dd1144"><span style="color:#032f62">"8"</span></span></span><span><span>}</span></span></pre><div>
          &nbsp;
         </div></div></div></li><li><p style="margin-left:0; margin-right:0">支持的颜色枚举请参考<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fcharmbracelet%2Flipgloss%23colors">lipgloss</a>，除了<span>&nbsp;</span><code>help_tips</code><span>&nbsp;</span>和<span>&nbsp;</span><code>shortcuts</code><span>&nbsp;</span>与前文<span>&nbsp;</span><code>tiny 小巧风</code><span>&nbsp;</span>相同。</p></li></ul><h2>支持 trzsz</h2><ul><li><p style="margin-left:0; margin-right:0">在服务器上要安装<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Ftrzsz.github.io%2Fcn%2F">trzsz</a>，才能使用<span>&nbsp;</span><code>trz / tsz</code><span>&nbsp;</span>上传和下载，可任选其一安装：<a href="https://gitee.com/link?target=https%3A%2F%2Ftrzsz.github.io%2Fcn%2Fgo">Go 版</a>（ ⭐ 推荐 ）、<a href="https://gitee.com/link?target=https%3A%2F%2Ftrzsz.github.io%2Fcn%2F">Py 版</a>、<a href="https://gitee.com/link?target=https%3A%2F%2Ftrzsz.github.io%2Fcn%2Fjs">Js 版</a>。</p></li><li><p style="margin-left:0; margin-right:0">在<span>&nbsp;</span><code>~/.ssh/config</code><span>&nbsp;</span>或<span>&nbsp;</span><code>ExConfigPath</code><span>&nbsp;</span>配置文件中，配置<span>&nbsp;</span><code>EnableDragFile</code><span>&nbsp;</span>为<span>&nbsp;</span><code>Yes</code><span>&nbsp;</span>启用拖拽上传功能。</p><div><div><pre><span><span style="color:#6f42c1">Host</span><span style="color:#032f62">*</span></span><span><span style="color:#6a737d">  # 如果配置在 ~/.ssh/config 中，可以加上 `#!!` 前缀，以兼容标准 ssh</span></span><span><span style="color:#6f42c1">EnableDragFile</span><span style="color:#032f62">Yes</span></span></pre><div>
          &nbsp;
         </div></div></div></li><li><p style="margin-left:0; margin-right:0">如果只是想临时启用拖拽上传功能，可以在命令行中使用<span>&nbsp;</span><code>tssh --dragfile</code><span>&nbsp;</span>登录服务器。</p></li><li><p style="margin-left:0; margin-right:0">在<span>&nbsp;</span><code>~/.ssh/config</code><span>&nbsp;</span>或<span>&nbsp;</span><code>ExConfigPath</code><span>&nbsp;</span>配置文件中，配置<span>&nbsp;</span><code>EnableTrzsz</code><span>&nbsp;</span>为<span>&nbsp;</span><code>No</code><span>&nbsp;</span>禁用 trzsz 和 zmodem。</p><div><div><pre><span><span style="color:#6f42c1">Host</span><span style="color:#032f62">no_trzsz_nor_zmodem</span></span><span><span style="color:#6a737d">  # 如果配置在 ~/.ssh/config 中，可以加上 `#!!` 前缀，以兼容标准 ssh</span></span><span><span style="color:#6f42c1">EnableTrzsz</span><span style="color:#032f62">No</span></span></pre><div>
          &nbsp;
         </div></div></div></li></ul><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img height="500" src="https://oscimg.oschina.net/oscnet/up-ec1249bd72d4dd67361bf48c4950365fc75.gif" width="800" referrerpolicy="no-referrer"></p><h2>支持 zmodem</h2><ul><li><p style="margin-left:0; margin-right:0">在<span>&nbsp;</span><code>~/.ssh/config</code><span>&nbsp;</span>或<span>&nbsp;</span><code>ExConfigPath</code><span>&nbsp;</span>配置文件中，配置<span>&nbsp;</span><code>EnableZmodem</code><span>&nbsp;</span>为<span>&nbsp;</span><code>Yes</code><span>&nbsp;</span>启用<span>&nbsp;</span><code>rz / sz</code><span>&nbsp;</span>功能。</p><div><div><pre><span><span style="color:#6f42c1">Host</span><span style="color:#032f62">*</span></span><span><span style="color:#6a737d">  # 如果配置在 ~/.ssh/config 中，可以加上 `#!!` 前缀，以兼容标准 ssh</span></span><span><span style="color:#6f42c1">EnableZmodem</span><span style="color:#032f62">Yes</span></span></pre><div>
          &nbsp;
         </div></div></div></li><li><p style="margin-left:0; margin-right:0">除了服务器，本地电脑也要安装<span>&nbsp;</span><code>lrzsz</code>，Windows 可以从<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Ftrzsz%2Flrzsz-win32%2Freleases">lrzsz-win32</a><span>&nbsp;</span>下载，解压并加到<span>&nbsp;</span><code>PATH</code><span>&nbsp;</span>环境变量中，也可以如下安装：</p><div><div><pre><span><span style="color:#6f42c1">scoop</span><span style="color:#032f62">install lrzsz</span></span></pre></div></div><div><div><pre><span><span style="color:#6f42c1">choco</span><span style="color:#032f62">install lrzsz</span></span></pre></div></div></li><li><p style="margin-left:0; margin-right:0">如果只是想临时启用<span>&nbsp;</span><code>rz / sz</code><span>&nbsp;</span>传文件功能，可以在命令行中使用<span>&nbsp;</span><code>tssh --zmodem</code><span>&nbsp;</span>登录服务器。</p></li><li><p style="margin-left:0; margin-right:0">关于<span>&nbsp;</span><code>rz / sz</code><span>&nbsp;</span>进度条，己传大小和传输速度会有一点偏差，它的主要作用只是指示传输正在进行中。</p></li></ul><h2>批量登录</h2><ul><li><p style="margin-left:0; margin-right:0">支持在<span>&nbsp;</span><code>iTerm2</code>（ 要开启<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Fiterm2.com%2Fpython-api-auth.html">Python API</a>，但不需要<span>&nbsp;</span><code>Allow all apps to connect</code><span>&nbsp;</span>），<code>tmux</code><span>&nbsp;</span>和<span>&nbsp;</span><code>Windows Terminal</code><span>&nbsp;</span>中一次选择多台服务器，批量登录，并支持批量执行预先指定的命令。</p></li><li><p style="margin-left:0; margin-right:0">按下<span>&nbsp;</span><code>Space</code>、<code>Ctrl+X</code><span>&nbsp;</span>等可以选中或取消当前服务器，若不能选中说明还不支持当前终端，请先运行<span>&nbsp;</span><code>tmux</code>。</p></li><li><p style="margin-left:0; margin-right:0">按下<span>&nbsp;</span><code>a</code><span>&nbsp;</span>或<span>&nbsp;</span><code>Ctrl+A</code><span>&nbsp;</span>全选当前页所有机器，<code>o</code><span>&nbsp;</span>或<span>&nbsp;</span><code>Ctrl+O</code><span>&nbsp;</span>反选当前页所有机器，<code>d</code><span>&nbsp;</span>或<span>&nbsp;</span><code>l</code><span>&nbsp;</span>翻到下一页。</p></li><li><p style="margin-left:0; margin-right:0">按下<span>&nbsp;</span><code>p</code><span>&nbsp;</span>或<span>&nbsp;</span><code>Ctrl+P</code><span>&nbsp;</span>以分屏的方式登录，<code>w</code><span>&nbsp;</span>或<span>&nbsp;</span><code>Ctrl+W</code><span>&nbsp;</span>以新窗口登录，<code>t</code><span>&nbsp;</span>或<span>&nbsp;</span><code>Ctrl+T</code><span>&nbsp;</span>以新 tab 登录。</p></li><li><p style="margin-left:0; margin-right:0"><code>tssh</code><span>&nbsp;</span>不带参数启动可以批量登录服务器，若带<span>&nbsp;</span><code>-o RemoteCommand</code><span>&nbsp;</span>参数启动则可以批量执行指定的命令。支持执行指定命令之后进入交互式 shell，但<span>&nbsp;</span><code>Windows Terminal</code><span>&nbsp;</span>不支持分号<span>&nbsp;</span><code>;</code>，可以用<span>&nbsp;</span><code>|cat&amp;&amp;</code><span>&nbsp;</span>代替。举例：</p><div><div><pre><span><span style="color:#005cc5">tssh</span><span style="color:#000080">-t</span><span style="color:#000080">-o</span><span style="color:#008080">RemoteCommand</span><span>=</span><span style="color:#dd1144"><span style="color:#032f62">'ping -c3 trzsz.github.io ; bash -l'</span></span></span><span>tssh <span style="color:#000080">-t</span><span style="color:#000080">-o</span><span style="color:#008080">RemoteCommand</span><span>=</span><span style="color:#dd1144"><span style="color:#032f62">"ping -c3 trzsz.github.io |cat&amp;&amp; bash -l"</span></span></span></pre><div>
          &nbsp;
         </div></div></div></li></ul><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img height="510" src="https://oscimg.oschina.net/oscnet/up-c93d2890ae5d18fb6d5814ba6fe294bf7d9.gif" width="691" referrerpolicy="no-referrer"></p><h2>分组标签</h2><ul><li><p style="margin-left:0; margin-right:0">如果服务器数量很多，分组标签<span>&nbsp;</span><code>GroupLabels</code><span>&nbsp;</span>可以在按<span>&nbsp;</span><code>/</code><span>&nbsp;</span>搜索时，快速找到目标服务器。</p></li><li><p style="margin-left:0; margin-right:0">按<span>&nbsp;</span><code>/</code><span>&nbsp;</span>输入分组标签后，<code>回车</code>可以锁定；再按<span>&nbsp;</span><code>/</code><span>&nbsp;</span>可以输入另一个分组标签，<code>回车</code>再次锁定。</p></li><li><p style="margin-left:0; margin-right:0">在非搜索模式下，按<span>&nbsp;</span><code>E</code><span>&nbsp;</span>可以清空当前搜索标签；在搜索模式下按<span>&nbsp;</span><code>Ctrl + E</code><span>&nbsp;</span>也是同样效果。</p></li><li><p style="margin-left:0; margin-right:0">支持在一个<span>&nbsp;</span><code>GroupLabels</code><span>&nbsp;</span>中以空格分隔，配置多个分组标签；支持配置多个<span>&nbsp;</span><code>GroupLabels</code>。</p></li><li><p style="margin-left:0; margin-right:0">支持以通配符 * 的形式，在多个 Host 节点配置分组标签，<code>tssh</code><span>&nbsp;</span>会将所有的标签汇总起来。</p><div><div><pre><span><span style="color:#6a737d"># 以下 testAA 具有标签 group1 group2 label3 label4 group5，可以加上 `#!!` 前缀，以兼容标准 ssh</span></span><span><span style="color:#6f42c1">Host</span><span style="color:#032f62">test*</span></span><span><span style="color:#6a737d">    #!! GroupLabels group1 group2</span></span><span><span style="color:#6a737d">    #!! GroupLabels label3</span></span><span><span style="color:#6f42c1">Host</span><span style="color:#032f62">testAA</span></span><span><span style="color:#6a737d">    #!! GroupLabels label4 group5</span></span></pre><div>
          &nbsp;
         </div></div></div></li></ul><h2>自动交互</h2><ul><li><p style="margin-left:0; margin-right:0">支持类似<span>&nbsp;</span><code>expect</code><span>&nbsp;</span>的自动交互功能，在登录服务器之后，自动匹配服务器的输出，然后自动输入。</p><div><div><pre><span><span style="color:#6f42c1">Host</span><span style="color:#032f62">auto</span></span><span><span style="color:#6a737d">    #!! ExpectCount 2  # 配置自动交互的次数，默认是 0 即无自动交互</span></span><span><span style="color:#6a737d">    #!! ExpectTimeout 30  # 配置自动交互的超时时间（单位：秒），默认是 30 秒</span></span><span><span style="color:#6a737d">    #!! ExpectPattern1 *assword  # 配置第一个自动交互的匹配表达式</span></span><span><span style="color:#6a737d">    # 配置第一个自动输入（密文），这是由 tssh --enc-secret 编码得到的字符串，tssh 会自动发送 \r 回车</span></span><span><span style="color:#6a737d">    #!! ExpectSendPass1 d7983b4a8ac204bd073ed04741913befd4fbf813ad405d7404cb7d779536f8b87e71106d7780b2</span></span><span><span style="color:#6a737d">    #!! ExpectPattern2 hostname*$  # 配置第二个自动交互的匹配表达式</span></span><span><span style="color:#6a737d">    #!! ExpectSendText2 echo tssh expect\r  # 配置第二个自动输入（明文），需要指定 \r 才会发送回车</span></span><span><span style="color:#6a737d">    # 以上 ExpectSendPass? 和 ExpectSendText? 只要二选一即可，若都配置则 ExpectSendPass? 的优先级更高</span></span></pre><div>
          &nbsp;
         </div></div></div></li><li><p style="margin-left:0; margin-right:0">在每个<span>&nbsp;</span><code>ExpectPattern?</code><span>&nbsp;</span>匹配之前，如果遇到可选的匹配则自动输入，用法如下：</p><div><div><pre><span><span style="color:#6f42c1">Host</span><span style="color:#032f62">case</span></span><span><span style="color:#6a737d">    #!! ExpectCount 1  # 配置自动交互的次数，默认是 0 即无自动交互</span></span><span><span style="color:#6a737d">    #!! ExpectPattern1 hostname*$  # 配置第一个自动交互的匹配表达式</span></span><span><span style="color:#6a737d">    #!! ExpectSendText1 ssh xxx\r  # 配置第一个自动输入，也可以换成 ExpectSendPass1 然后配置密文</span></span><span><span style="color:#6a737d">    #!! ExpectCaseSendText1 yes/no y\r  # 在 ExpectPattern1 匹配之前，若遇到 yes/no 则发送 y 并回车</span></span><span><span style="color:#6a737d">    #!! ExpectCaseSendText1 y/n yes\r   # 在 ExpectPattern1 匹配之前，若遇到 y/n 则发送 yes 并回车</span></span><span><span style="color:#6a737d">    #!! ExpectCaseSendPass1 token d7... # 在 ExpectPattern1 匹配之前，若遇到 token 则解码 d7... 并发送</span></span></pre></div></div></li><li><p style="margin-left:0; margin-right:0">在匹配到指定输出时，执行指定的命令获取动态密码，然后自动输入，用法如下：</p><div><div><pre><span><span style="color:#6f42c1">Host</span><span style="color:#032f62">otp</span></span><span><span style="color:#6a737d">    #!! ExpectCount 2  # 配置自动交互的次数，默认是 0 即无自动交互</span></span><span><span style="color:#6a737d">    #!! ExpectPattern1 token:  # 配置第一个自动交互的匹配表达式</span></span><span><span style="color:#6a737d">    #!! ExpectSendOtp1 oathtool --totp -b xxxxx  # 配置获取动态密码的命令（明文）</span></span><span><span style="color:#6a737d">    #!! ExpectPattern2 token:  # 配置第二个自动交互的匹配表达式</span></span><span><span style="color:#6a737d">    # 下面是运行 tssh --enc-secret 输入命令 oathtool --totp -b xxxxx 得到的密文串</span></span><span><span style="color:#6a737d">    #!! ExpectSendEncOtp2 77b4ce85d087b39909e563efb165659b22b9ea700a537f1258bdf56ce6fdd6ea70bc7591ea5c01918537a65433133bc0bd5ed3e4</span></span></pre><div>
          &nbsp;
         </div></div></div></li><li><p style="margin-left:0; margin-right:0">可能有些服务器不支持连着发送数据，如输入<span>&nbsp;</span><code>1\r</code>，要求在<span>&nbsp;</span><code>1</code><span>&nbsp;</span>之后有一点延迟，然后再<span>&nbsp;</span><code>\r</code><span>&nbsp;</span>回车，则可以用<span>&nbsp;</span><code>\|</code><span>&nbsp;</span>间开。</p><div><div><pre><span><span style="color:#6f42c1">Host</span><span style="color:#032f62">sleep</span></span><span><span style="color:#6a737d">    #!! ExpectCount 2  # 配置自动交互的次数，默认是 0 即无自动交互</span></span><span><span style="color:#6a737d">    #!! ExpectSleepMS 100  # 当要间开输入时，sleep 的毫秒数，默认 100ms</span></span><span><span style="color:#6a737d">    #!! ExpectPattern1 x&gt;  # 配置第一个自动交互的匹配表达式</span></span><span><span style="color:#6a737d">    #!! ExpectSendText1 1\|\r  # 配置第一个自动输入，在发送 1 之后，先 sleep 100ms，再发送 \r 回车</span></span><span><span style="color:#6a737d">    #!! ExpectPattern2 y&gt;  # 配置第二个自动交互的匹配表达式</span></span><span><span style="color:#6a737d">    #!! ExpectSendText2 \|1\|\|\r  # 先 sleep 100ms，然后发送 1，再 sleep 200ms，最后发送 \r 回车</span></span></pre></div></div></li><li><p style="margin-left:0; margin-right:0">如果不知道<span>&nbsp;</span><code>ExpectPattern2</code><span>&nbsp;</span>如何配置，可以先将<span>&nbsp;</span><code>ExpectCount</code><span>&nbsp;</span>配置为<span>&nbsp;</span><code>2</code>，然后使用<span>&nbsp;</span><code>tssh --debug</code><span>&nbsp;</span>登录，就会看到<span>&nbsp;</span><code>expect</code><span>&nbsp;</span>捕获到的输出，可以直接复制输出的最后部分来配置<span>&nbsp;</span><code>ExpectPattern2</code>。把<span>&nbsp;</span><code>2</code><span>&nbsp;</span>换成其他任意的数字也适用。</p></li></ul><h2>记住密码</h2><ul><li><p style="margin-left:0; margin-right:0">推荐使用公钥认证登录，可参考 openssh 的文档，或者参考 tssh wiki<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Ftrzsz%2Ftrzsz-ssh%2Fwiki%2F%25E5%2585%25AC%25E9%2592%25A5%25E8%25AE%25A4%25E8%25AF%2581%25E7%2599%25BB%25E5%25BD%2595">公钥认证登录</a>。</p></li><li><p style="margin-left:0; margin-right:0">如果只能使用密码登录，建议至少设置一下配置文件的权限，如：</p><div><div><pre><span><span style="color:#0086b3">chmod </span><span>700</span> ~<span>/.ssh </span><span><span>&amp;&amp;</span></span><span></span><span style="color:#0086b3"><span>chmod </span></span><span>600 ~/</span>.ssh<span>/password ~/</span>.ssh/config</span></pre><div>
          &nbsp;
         </div></div></div></li><li><p style="margin-left:0; margin-right:0">下面配置<span>&nbsp;</span><code>test1</code><span>&nbsp;</span>和<span>&nbsp;</span><code>test2</code><span>&nbsp;</span>的密码是<span>&nbsp;</span><code>123456</code>，其他以<span>&nbsp;</span><code>test</code><span>&nbsp;</span>开头的密码是<span>&nbsp;</span><code>111111</code>：</p><div><div><pre><span><span style="color:#6a737d"># 如果配置在 ~/.ssh/config 中，可以加上 `#!!` 前缀，以兼容标准 ssh</span></span><span><span style="color:#6f42c1">Host</span><span style="color:#032f62">test1</span></span><span><span style="color:#6a737d">    # 下面是运行 tssh --enc-secret 输入密码 123456 得到的密文串，每次运行结果不同。</span></span><span><span style="color:#6a737d">    #!! encPassword 756b17766f45bdc44c37f811db9990b0880318d5f00f6531b15e068ef1fde2666550</span></span><span style="color:#6a737d"></span><span><span style="color:#6a737d"># 如果配置在 ~/.ssh/password 中，则不需要考虑是否兼容标准 ssh</span></span><span><span style="color:#6f42c1">Host</span><span style="color:#032f62">test2</span></span><span><span style="color:#6a737d">    # 下面是运行 tssh --enc-secret 输入密码 123456 得到的密文串，每次运行结果不同。</span></span><span><span style="color:#6f42c1">encPassword</span><span style="color:#032f62">051a2f0fdc7d0d40794b845967df4c2d05b5eb0f25339021dc4e02a9d7620070654b</span></span><span style="color:#6a737d"></span><span><span style="color:#6a737d"># ~/.ssh/config 和 ~/.ssh/password 是支持通配符的，tssh 会使用第一个匹配到的值。</span></span><span><span style="color:#6a737d"># 这里希望 test2 使用区别于其他 test* 的密码，所以将 test* 放在了 test2 的后面。</span></span><span><span style="color:#6f42c1">Host</span><span style="color:#032f62">test*</span></span><span><span style="color:#6f42c1">Password</span><span style="color:#032f62">111111  # 支持明文密码，但是推荐使用 tssh --enc-secret 简单加密一下。</span></span></pre><div>
          &nbsp;
         </div></div></div></li><li><p style="margin-left:0; margin-right:0">如果启用了<span>&nbsp;</span><code>ControlMaster</code><span>&nbsp;</span>多路复用，或者是在<span>&nbsp;</span><code>Warp</code><span>&nbsp;</span>终端，需要使用前面<span>&nbsp;</span><code>自动交互</code><span>&nbsp;</span>的方式实现记住密码的效果。配置方式请参考前面<span>&nbsp;</span><code>自动交互</code>，加上<span>&nbsp;</span><code>Ctrl</code><span>&nbsp;</span>前缀即可，如：</p><div><div><pre><span><span style="color:#6f42c1">Host</span><span style="color:#032f62">ctrl</span></span><span><span style="color:#6a737d">    #!! CtrlExpectCount 1  # 配置自动交互的次数，一般只要输入一次密码</span></span><span><span style="color:#6a737d">    #!! CtrlExpectPattern1 *assword    # 配置密码提示语的匹配表达式</span></span><span><span style="color:#6a737d">    #!! CtrlExpectSendPass1 d7983b...  # 配置 tssh --enc-secret 编码后的密码</span></span></pre></div></div></li><li><p style="margin-left:0; margin-right:0">支持记住私钥的<span>&nbsp;</span><code>Passphrase</code>（ 推荐使用<span>&nbsp;</span><code>ssh-agent</code><span>&nbsp;</span>）。支持与<span>&nbsp;</span><code>IdentityFile</code><span>&nbsp;</span>一起配置，支持使用私钥文件名代替 Host 别名设置通用密钥的<span>&nbsp;</span><code>Passphrase</code>。举例：</p><div><div><pre><span><span style="color:#6a737d"># IdentityFile 和 Passphrase 一起配置，可以加上 `#!!` 前缀，以兼容标准 ssh</span></span><span><span style="color:#6f42c1">Host</span><span style="color:#032f62">test1</span></span><span><span style="color:#6f42c1">IdentityFile</span><span style="color:#032f62">/path/to/id_rsa</span></span><span><span style="color:#6a737d">    # 下面是运行 tssh --enc-secret 输入密码 123456 得到的密文串，每次运行结果不同。</span></span><span><span style="color:#6a737d">    #!! encPassphrase 6f419911555b0cdc84549ae791ef69f654118d734bb4351de7e83163726ef46d176a</span></span><span style="color:#6a737d"></span><span><span style="color:#6a737d"># 在 ~/.ssh/config 中配置通用私钥 ~/.ssh/id_ed25519 对应的 Passphrase</span></span><span><span style="color:#6a737d"># 可以加上通配符 * 以避免 tssh 搜索和选择时，文件名出现在服务器列表中。</span></span><span><span style="color:#6f42c1">Host</span><span style="color:#032f62">id_ed25519*</span></span><span><span style="color:#6a737d">    # 下面是运行 tssh --enc-secret 输入密码 111111 得到的密文串，每次运行结果不同。</span></span><span><span style="color:#6a737d">    #!! encPassphrase 3a929328f2ab1be0ba3fccf29e8125f8e2dac6dab73c946605cf0bb8060b05f02a68</span></span><span style="color:#6a737d"></span><span><span style="color:#6a737d"># 在 ~/.ssh/password 中配置则不需要通配符*，也不会出现在服务器列表中。</span></span><span><span style="color:#6f42c1">Host</span><span style="color:#032f62">id_rsa</span></span><span><span style="color:#6f42c1">Passphrase</span><span style="color:#032f62">111111  # 支持明文密码，但是推荐使用 tssh --enc-secret 简单加密一下。</span></span></pre></div></div></li><li><p style="margin-left:0; margin-right:0"><code>记住密码</code>之后还提示输入密码？可能服务器的认证方式是<span>&nbsp;</span><code>keyboard interactive</code>，请参考下文<code>记住答案</code>。</p></li></ul><h2>记住答案</h2><ul><li><p style="margin-left:0; margin-right:0">除了私钥和密码，还有一种登录方式，英文叫 keyboard interactive ，是服务器返回一些问题，客户端提供正确的答案就能登录，很多自定义的一次性密码就是利用这种方式实现的。</p></li><li><p style="margin-left:0; margin-right:0">对于只有一个问题，且答案（密码）固定不变的，只要配置<span>&nbsp;</span><code>QuestionAnswer1</code><span>&nbsp;</span>即可。对于有多个问题的，可以按问题的序号进行配置，也可以按问题的 hex 编码进行配置。</p></li><li><p style="margin-left:0; margin-right:0">使用<span>&nbsp;</span><code>tssh --debug</code><span>&nbsp;</span>登录，会输出问题的 hex 编码，从而知道该如何使用 hex 编码进行配置。配置举例：</p><div><div><pre><span><span style="color:#6a737d"># 如果配置在 ~/.ssh/config 中，可以加上 `#!!` 前缀，以兼容标准 ssh</span></span><span><span style="color:#6f42c1">Host</span><span style="color:#032f62">test1</span></span><span><span style="color:#6a737d">    # 下面是运行 tssh --enc-secret 输入答案 `答案一` 得到的密文串，每次运行结果不同。</span></span><span><span style="color:#6f42c1">encQuestionAnswer1</span><span style="color:#032f62">482de7690ccc5229299ccadd8de1cb7c6d842665f0dc92ff947a302f644817baecbab38601</span></span><span><span style="color:#6f42c1">Host</span><span style="color:#032f62">test2</span></span><span><span style="color:#6a737d">    # 下面是运行 tssh --enc-secret 输入答案 `答案一` 得到的密文串，每次运行结果不同。</span></span><span><span style="color:#6f42c1">encQuestionAnswer1</span><span style="color:#032f62">43e86f1140cf6d8c786248aad95a26f30633f1eab671676b0860ecb5b1a64fb3ec5212dddf</span></span><span><span style="color:#6f42c1">QuestionAnswer2</span><span style="color:#032f62">答案二  # 支持明文答案，但是推荐使用 tssh --enc-secret 简单加密一下。</span></span><span><span style="color:#6f42c1">QuestionAnswer3</span><span style="color:#032f62">答案三</span></span><span><span style="color:#6f42c1">Host</span><span style="color:#032f62">test3</span></span><span><span style="color:#6a737d">    # 其中 `6e616d653a20` 是问题 `name: ` 的 hex 编码，`enc` 前缀代表配置的是密文串。</span></span><span><span style="color:#6a737d">    # 下面是运行 tssh --enc-secret 输入答案 `my_name` 得到的密文串，每次运行结果不同。</span></span><span><span style="color:#6f42c1">enc6e616d653a20</span><span style="color:#032f62">775f2523ab747384e1661aba7779011cb754b73f2e947672c7fd109607b801d70902d1</span></span><span><span style="color:#6f42c1">636f64653a20</span><span style="color:#032f62">my_code  # 其中 `636f64653a20` 是问题 `code: ` 的 hex 编码, `my_code` 是明文答案</span></span></pre><div>
          &nbsp;
         </div></div></div></li><li><p style="margin-left:0; margin-right:0">对于可以通过命令行获取到的动态密码，则可以如下配置（同样支持按序号或 hex 编码进行配置）：</p><div><div><pre><span><span style="color:#6f42c1">Host</span><span style="color:#032f62">otp</span></span><span><span style="color:#6f42c1">OtpCommand1</span><span style="color:#032f62">oathtool --totp -b xxxxx  # 按序号配置获取动态密码的命令</span></span><span><span style="color:#6f42c1">otp636f64653a20</span><span style="color:#032f62">oathtool --totp -b xxxxx  # 按 `code: ` 的 hex 编码 `636f64653a20` 配置获取动态密码的命令</span></span><span><span style="color:#6a737d">    # 下面是运行 tssh --enc-secret 输入命令 oathtool --totp -b xxxxx 得到的密文串，加上 `enc` 前缀进行配置</span></span><span><span style="color:#6f42c1">encOtpCommand2</span><span style="color:#032f62">77b4ce85d087b39909e563efb165659b22b9ea700a537f1258bdf56ce6fdd6ea70bc7591ea5c01918537a65433133bc0bd5ed3e4</span></span><span><span style="color:#6f42c1">encotp636f64653a20</span><span style="color:#032f62">77b4ce85d087b39909e563efb165659b22b9ea700a537f1258bdf56ce6fdd6ea70bc7591ea5c01918537a65433133bc0bd5ed3e4</span></span></pre></div></div></li><li><p style="margin-left:0; margin-right:0">如果启用了<span>&nbsp;</span><code>ControlMaster</code><span>&nbsp;</span>多路复用，或者是在<span>&nbsp;</span><code>Warp</code><span>&nbsp;</span>终端，请参考前面<span>&nbsp;</span><code>自动交互</code><span>&nbsp;</span>加<span>&nbsp;</span><code>Ctrl</code><span>&nbsp;</span>前缀来实现。</p><div><div><pre><span><span style="color:#6f42c1">Host</span><span style="color:#032f62">ctrl_otp</span></span><span><span style="color:#6a737d">    #!! CtrlExpectCount 1  # 配置自动交互的次数，一般只要输入一次密码</span></span><span><span style="color:#6a737d">    #!! CtrlExpectPattern1 token:  # 配置密码提示语的匹配表达式（这里以动态密码举例）</span></span><span><span style="color:#6a737d">    #!! CtrlExpectSendOtp1 oathtool --totp -b xxxxx  # 配置获取动态密码的命令（明文）</span></span><span><span style="color:#6a737d">    #!! CtrlExpectSendEncOtp1 77b4ce85d0...  # 或者配置 tssh --enc-secret 得到的密文串</span></span></pre></div></div></li></ul><h2>个性配置</h2><ul><li><p style="margin-left:0; margin-right:0">支持在<span>&nbsp;</span><code>~/.tssh.conf</code>（ Windows 是<span>&nbsp;</span><code>C:\Users\your_name\.tssh.conf</code><span>&nbsp;</span>）中进行以下自定义配置：</p><div><div><pre><span><span style="color:#6a737d"># SSH 配置路径，默认为 ~/.ssh/config</span></span><span><span style="color:#6f42c1">ConfigPath</span> = ~/.ssh/config</span><span><span style="color:#6a737d"># 扩展配置路径，默认为 ~/.ssh/password</span></span><span><span style="color:#6f42c1">ExConfigPath</span> = ~/.ssh/password</span><span><span style="color:#6a737d"># trz 上传时，对话框打开的路径，为空时打开上次的路径， 默认为空</span></span><span><span style="color:#6f42c1">DefaultUploadPath</span> = ~/Downloads</span><span><span style="color:#6a737d"># tsz 下载时，自动保存的路径，为空时弹出对话框手工选择，默认为空</span></span><span><span style="color:#6f42c1">DefaultDownloadPath</span> = ~/Downloads</span><span><span style="color:#6a737d"># tssh 搜索和选择服务器时，配置主题风格和自定义颜色</span></span><span><span style="color:#6f42c1">PromptThemeLayout</span> = simple</span><span><span style="color:#6f42c1">PromptThemeColors</span> = {<span style="color:#032f62">"active_host"</span>: <span style="color:#032f62">"magenta|bold"</span>, <span style="color:#032f62">"inactive_host"</span>: <span style="color:#032f62">"magenta"</span>}</span><span><span style="color:#6a737d"># tssh 搜索和选择服务器时，每页显示的记录数，默认为 10</span></span><span><span style="color:#6f42c1">PromptPageSize</span> = <span>10</span></span><span><span style="color:#6a737d"># tssh 搜索和选择服务器时，默认是类似 vim 的 normal 模式，想默认进入搜索模式可如下配置：</span></span><span><span style="color:#6f42c1">PromptDefaultMode</span> = search</span><span><span style="color:#6a737d"># tssh 搜索和选择服务器时，详情中显示的配置列表，默认如下：</span></span><span><span style="color:#6f42c1">PromptDetailItems</span> = Alias Host Port User GroupLabels IdentityFile ProxyCommand ProxyJump RemoteCommand</span><span><span style="color:#6a737d"># tssh 搜索和选择服务器时，可以自定义光标和选中的图标：</span></span><span><span style="color:#6f42c1">PromptCursorIcon</span> = &gt;&gt;</span><span><span style="color:#6f42c1">PromptSelectedIcon</span> = ++</span><span><span style="color:#6a737d"># 登录后自动设置终端标题，退出后不会重置，你需要参考下文在本地 shell 中设置 PROMPT_COMMAND</span></span><span><span style="color:#6f42c1">SetTerminalTitle</span> = <span style="color:#005cc5">Yes</span></span></pre></div></div></li></ul><h2>配置注释</h2><ul><li><p style="margin-left:0; margin-right:0"><code>tssh</code><span>&nbsp;</span>配置中的注释基本与<span>&nbsp;</span><code>openssh</code><span>&nbsp;</span>一致，额外做了一些扩展支持，详见下表：</p><table cellspacing="0" style="border-collapse:collapse; border-spacing:0px; border:none; box-sizing:border-box; color:#444444; display:block; font-size:14px; line-height:inherit; margin:0px 0px 20px; max-width:100%; overflow:auto; width:888px; word-break:keep-all"><tbody><tr><th>注释</th><th>openssh</th><th>tssh</th></tr></tbody><tbody><tr><td style="border-color:#e9ebec; border-style:solid; border-width:1px"><code>#</code><span>&nbsp;</span>开头的配置行</td><td style="border-color:#e9ebec; border-style:solid; border-width:1px">是注释</td><td style="border-color:#e9ebec; border-style:solid; border-width:1px">是注释</td></tr><tr><td style="border-color:#e9ebec; border-style:solid; border-width:1px"><code>#!!</code><span>&nbsp;</span>开头的配置行</td><td style="border-color:#e9ebec; border-style:solid; border-width:1px">是注释</td><td style="border-color:#e9ebec; border-style:solid; border-width:1px">非注释</td></tr><tr><td style="border-color:#e9ebec; border-style:solid; border-width:1px"><code>Key Value # Comment</code></td><td style="border-color:#e9ebec; border-style:solid; border-width:1px">看情况</td><td style="border-color:#e9ebec; border-style:solid; border-width:1px">是注释</td></tr><tr><td style="border-color:#e9ebec; border-style:solid; border-width:1px"><code>Key=Value # Comment</code></td><td style="border-color:#e9ebec; border-style:solid; border-width:1px">看情况</td><td style="border-color:#e9ebec; border-style:solid; border-width:1px">非注释</td></tr></tbody></table></li><li><p style="margin-left:0; margin-right:0"><code>#</code><span>&nbsp;</span>开头的配置行，<code>openssh</code><span>&nbsp;</span>一律认为是注释；<code>tssh</code><span>&nbsp;</span>认为<span>&nbsp;</span><code>#!!</code><span>&nbsp;</span>开头的配置行不是注释，其他以<span>&nbsp;</span><code>#</code><span>&nbsp;</span>开头的配置行是注释。</p></li><li><p style="margin-left:0; margin-right:0"><code>Key Value # Comment</code><span>&nbsp;</span>配置（没有<span>&nbsp;</span><code>=</code><span>&nbsp;</span>号），<code>openssh</code><span>&nbsp;</span>有些情况认为<span>&nbsp;</span><code>#</code><span>&nbsp;</span>后的内容是注释，有些情况认为不是注释；<code>tssh</code><span>&nbsp;</span>一律认为<span>&nbsp;</span><code>#</code><span>&nbsp;</span>后的内容是注释。</p></li><li><p style="margin-left:0; margin-right:0"><code>Key=Value # Comment</code><span>&nbsp;</span>配置（有<span>&nbsp;</span><code>=</code><span>&nbsp;</span>号），<code>openssh</code><span>&nbsp;</span>有些情况认为<span>&nbsp;</span><code>#</code><span>&nbsp;</span>后的内容是注释，有些情况认为不是注释；<code>tssh</code><span>&nbsp;</span>一律认为<span>&nbsp;</span><code>#</code><span>&nbsp;</span>后的内容不是注释。</p></li></ul><h2>其他功能</h2><ul><li><p style="margin-left:0; margin-right:0">使用<span>&nbsp;</span><code>-f</code><span>&nbsp;</span>后台运行时，可以加上<span>&nbsp;</span><code>--reconnect</code><span>&nbsp;</span>参数，在后台进程因连接断开等而退出时，会自动重新连接。</p></li><li><p style="margin-left:0; margin-right:0">运行<span>&nbsp;</span><code>tssh --enc-secret</code>，输入密码或答案，可得到用于配置的密文（ 相同密码每次运行结果不同 ）。</p><ul><li>上文说的<code>记住密码</code>和<code>记住答案</code>等，在配置项前面加上<span>&nbsp;</span><code>enc</code><span>&nbsp;</span>则可以配置成密文，防止被人窥屏。</li><li>如果密码中含有<span>&nbsp;</span><code>#</code><span>&nbsp;</span>等特殊字符，直接配置密码明文可能会导致登录失败，此时则必须使用密文配置。</li></ul><div><div><pre><span><span style="color:#6f42c1">Host</span><span style="color:#032f62">server2</span></span><span><span style="color:#6a737d">  # 如果配置在 ~/.ssh/config 中，可以加上 `#!!` 前缀，以兼容标准 ssh</span></span><span><span style="color:#6f42c1">encPassword</span><span style="color:#032f62">de88c4dbdc95d85303682734e2397c4d8dd29bfff09ec53580f31dd40291fc8c7755</span></span><span><span style="color:#6f42c1">encQuestionAnswer1</span><span style="color:#032f62">93956f6e7e9f2aef3af7d6a61f7046dddf14aa4bbd9845dbb836fe3782b62ac0d89f</span></span></pre><div>
          &nbsp;
         </div></div></div></li><li><p style="margin-left:0; margin-right:0">运行<span>&nbsp;</span><code>tssh --new-host</code><span>&nbsp;</span>可以在 TUI 界面轻松添加 SSH 配置，并且完成后可以立即登录。</p></li><li><p style="margin-left:0; margin-right:0">运行<span>&nbsp;</span><code>tssh --install-trzsz</code><span>&nbsp;</span>可以将<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Ftrzsz%2Ftrzsz-go">trzsz</a><span>&nbsp;</span>(<span>&nbsp;</span><code>trz</code><span>&nbsp;</span>/<span>&nbsp;</span><code>tsz</code><span>&nbsp;</span>) 安装到服务器上。</p><ul><li>默认安装到<span>&nbsp;</span><code>~/.local/bin/</code><span>&nbsp;</span>目录，可以通过<span>&nbsp;</span><code>--install-path /path/to/install</code><span>&nbsp;</span>指定安装目录。</li><li>若<span>&nbsp;</span><code>--install-path</code><span>&nbsp;</span>安装目录含有<span>&nbsp;</span><code>~/</code>，则必须加上单引号，如<span>&nbsp;</span><code>--install-path '~/path'</code>。</li><li>若获取<span>&nbsp;</span><code>trzsz</code><span>&nbsp;</span>的最新版本号失败，可以通过<span>&nbsp;</span><code>--trzsz-version x.x.x</code><span>&nbsp;</span>参数自行指定。</li><li>若下载<span>&nbsp;</span><code>trzsz</code><span>&nbsp;</span>的安装包失败，可以自行下载并通过<span>&nbsp;</span><code>--trzsz-bin-path /path/to/trzsz.tar.gz</code><span>&nbsp;</span>参数指定。</li><li>注意：<code>--install-trzsz</code><span>&nbsp;</span>不支持 Windows 服务器，不支持跳板机（ 除非以<span>&nbsp;</span><code>ProxyJump</code><span>&nbsp;</span>跳过 ）。</li></ul></li><li><p style="margin-left:0; margin-right:0">关于修改终端标题，其实无需<span>&nbsp;</span><code>tssh</code><span>&nbsp;</span>就能实现，只要在服务器的 shell 配置文件中（如<span>&nbsp;</span><code>~/.bashrc</code>）配置：</p><div><div><pre><span><span style="color:#888888"><span style="color:#6a737d"># 设置固定的服务器标题</span></span></span><span><span style="color:#008080">PROMPT_COMMAND</span><span>=</span><span style="color:#dd1144">'echo -ne <span style="color:#032f62">"\033]0;固定的服务器标题\007"</span>'</span></span><span><span style="color:#888888"><span style="color:#6a737d"># 根据环境变量动态变化的标题</span></span></span><span><span style="color:#008080">PROMPT_COMMAND</span><span>=</span><span style="color:#dd1144">'echo -ne <span style="color:#032f62">"\033]0;${USER}@${HOSTNAME}: ${PWD}\007"</span>'</span></span></pre><div>
          &nbsp;
         </div></div></div><ul><li>如果在<span>&nbsp;</span><code>~/.tssh.conf</code><span>&nbsp;</span>中设置了<span>&nbsp;</span><code>SetTerminalTitle = Yes</code>，则会在登录后自动设置终端标题，但是服务器上的<span>&nbsp;</span><code>PROMPT_COMMAND</code><span>&nbsp;</span>会覆盖<span>&nbsp;</span><code>tssh</code><span>&nbsp;</span>设置的标题。</li><li>在<span>&nbsp;</span><code>tssh</code><span>&nbsp;</span>退出后不会重置为原来的标题，你需要在本地 shell 中设置<span>&nbsp;</span><code>PROMPT_COMMAND</code>，让它覆盖<span>&nbsp;</span><code>tssh</code><span>&nbsp;</span>设置的标题。</li></ul></li></ul><h2>故障排除</h2><ul><li><p style="margin-left:0; margin-right:0">在 Warp 终端，分块 Blocks 的功能需要将<span>&nbsp;</span><code>tssh</code><span>&nbsp;</span>重命名为<span>&nbsp;</span><code>ssh</code>，推荐建个软链接（ 对更新友好 ）：</p><div><div><pre><span>sudo ln -sv $(<span>which</span> tssh) /usr/<span>local</span>/bin/ssh</span></pre><div>
          &nbsp;
         </div></div></div><ul><li><p style="margin-left:0; margin-right:0">软链后，<code>ssh -V</code><span>&nbsp;</span>应输出<span>&nbsp;</span><code>trzsz ssh</code><span>&nbsp;</span>加版本号，如果不是，说明软链不成功，或者在<span>&nbsp;</span><code>PATH</code><span>&nbsp;</span>中<span>&nbsp;</span><code>openssh</code><span>&nbsp;</span>的优先级更高，你要软链到另一个地方或者调整<span>&nbsp;</span><code>PATH</code><span>&nbsp;</span>的优先级。</p></li><li><p style="margin-left:0; margin-right:0">软链后，要直接使用<span>&nbsp;</span><code>ssh</code>，它等价于<span>&nbsp;</span><code>tssh</code>。如果还是用<span>&nbsp;</span><code>tssh</code><span>&nbsp;</span>是不会支持分块 Blocks 功能的。</p></li><li><p style="margin-left:0; margin-right:0"><code>--dragfile</code><span>&nbsp;</span>参数可能会让 Warp 分块功能失效，请参考前文配置<span>&nbsp;</span><code>EnableDragFile</code><span>&nbsp;</span>来启用拖拽功能。</p></li><li><p style="margin-left:0; margin-right:0">拖拽文件或目录进入 Warp 终端后，可能不会立即触发上传，需要多按一次<code>回车</code>键，才会上传。</p></li></ul></li><li><p style="margin-left:0; margin-right:0">如果你在使用 Windows7 或者旧版本的 Windows10 等，遇到<span>&nbsp;</span><code>enable virtual terminal failed</code><span>&nbsp;</span>的错误。</p><ul><li>可以尝试在<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.cygwin.com%2F">Cygwin</a>、<a href="https://gitee.com/link?target=https%3A%2F%2Fwww.msys2.org%2F">MSYS2</a><span>&nbsp;</span>或<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.atlassian.com%2Fgit%2Ftutorials%2Fgit-bash">Git Bash</a><span>&nbsp;</span>内使用<span>&nbsp;</span><code>tssh</code>。</li></ul></li><li><p style="margin-left:0; margin-right:0">如果在<span>&nbsp;</span><code>~/.ssh/config</code><span>&nbsp;</span>中配置了<span>&nbsp;</span><code>tssh</code><span>&nbsp;</span>特有的配置项后，标准<span>&nbsp;</span><code>ssh</code><span>&nbsp;</span>报错<span>&nbsp;</span><code>Bad configuration option</code>。</p><ul><li>可以在出错配置项中加上前缀<span>&nbsp;</span><code>#!!</code>，标准<span>&nbsp;</span><code>ssh</code><span>&nbsp;</span>会将它当作注释，而<span>&nbsp;</span><code>tssh</code><span>&nbsp;</span>则会认为它是有效配置之一。</li></ul></li></ul></div></div></div></div></div></div>
                                    ]]>
            </description>
            <pubDate>Mon, 18 Mar 2024 02:44:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/283524/tssh-0-1-19-released</guid>
            <link>https://www.oschina.net/news/283524/tssh-0-1-19-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[yuqing v1.3.0 已经发布，舆情监控系统]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>yuqing v1.3.0 已经发布，舆情监控系统</p><p>此版本更新内容包括：</p><p>1.修复了若干 bug</p><p>2.新增公众号预警功能</p><p>3.新增监控预警功能</p><p>4.新增移动端页面</p><p>详情查看：<a href="https://gitee.com/stonedtx/yuqing/releases/v1.3.0">https://gitee.com/stonedtx/yuqing/releases/v1.3.0</a></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 18 Mar 2024 02:38:52 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/283522/yuqing-1-3-0-released</guid>
            <link>https://www.oschina.net/news/283522/yuqing-1-3-0-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[数据库连接池 Druid 1.2.22 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#333333">数据库连接池 Druid 1.2.22 现已发布，</span>这又是一个功能增强 BUG FIX 的版本，建议大家按需升级。</p><h4><strong>Issues</strong></h4><ol><li><p>优化超时设置默认逻辑。针对 1.2.12 开始的 connectTimeout 和 socketTimeout 在没指定配置的情况下默认为 10 秒情况，去除该默认逻辑。在没配置这两个参数的情况下，超时设置行为与以前保持一致。 去除 timeout 默认值为 10 秒的逻辑&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Falibaba%2Fdruid%2Fissues%2F5729" target="_blank">#5729</a>&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Falibaba%2Fdruid%2Fpull%2F5735" target="_blank">#5735</a></p></li><li><p>优化超时参数设置逻辑。提取 jdbcurl 中 connectTimeout 和 socketTimeout 时不再区分 db 类型，MySQL/Oracle/PostgreSQL/SQLServer 在不方便设置数据源参数的情况下，可以在 jdbculr 中使用该参数进行超时控制; initialize connectTimeout and socketTimeout from jdbcUrl or properties&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Falibaba%2Fdruid%2Fpull%2F5706" target="_blank">#5706</a></p></li><li><p>优化创建连接的失败处理机制。针对 1.2.21 版本新增的连接数据库失败就关闭连接池的优化，回退不恰当的 fastfail&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Falibaba%2Fdruid%2Fissues%2F5771" target="_blank">#5771</a>&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Falibaba%2Fdruid%2Fpull%2F5777" target="_blank">#5777</a></p></li><li><p>增强 WallFilter 的数据库适配。针对使用内置 WallFilter 且数据库类型为匹配的情况下抛异常的情况，提供 SPI 机制通过实现 WallProviderCreator 来自定义扩展 WallProvider&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Falibaba%2Fdruid%2Fissues%2F5682" target="_blank">#5682</a>&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Falibaba%2Fdruid%2Fpull%2F5772" target="_blank">#5772</a></p></li><li><p>增强 SQL 解析能力。根据反馈，持续增强 druid parser 的 SQL 语法解析能力和修复语法解析的若干错误。</p></li><li><p>其它若干小优化。主要根据 Issue 反馈和 PR 反馈，持续进行优化。</p></li></ol><p style="color:#1f2328; text-align:start">在使用 1.2.12 至 1.2.21 版本的用户，建议升级至 1.2.22 进行功能验证。</p><p style="margin-left:0px; margin-right:0px; text-align:start"><strong>相关连接</strong></p><ul><li>druid 下载&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frepo1.maven.org%2Fmaven2%2Fcom%2Falibaba%2Fdruid%2F1.2.22%2F" target="_blank">https://repo1.maven.org/maven2/com/alibaba/druid/1.2.22/</a></li><li>druid-spring-booter 下载&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frepo1.maven.org%2Fmaven2%2Fcom%2Falibaba%2Fdruid-spring-boot-starter%2F1.2.22%2F" target="_blank">https://repo1.maven.org/maven2/com/alibaba/druid-spring-boot-starter/1.2.22/</a></li><li>文档&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Falibaba%2Fdruid%2Fwiki%2F%25E5%25B8%25B8%25E8%25A7%2581%25E9%2597%25AE%25E9%25A2%2598" target="_blank">https://github.com/alibaba/druid/wiki/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98</a></li><li>源码&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Falibaba%2Fdruid%2Ftree%2F1.2.22" target="_blank">https://github.com/alibaba/druid/tree/1.2.22</a></li><li>内置监控演示&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2F120.26.192.168%2Fdruid%2F" target="_blank">http://120.26.192.168/druid/</a></li></ul><p>更新说明：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Falibaba%2Fdruid%2Freleases%2Ftag%2F1.2.22" target="_blank">https://github.com/alibaba/druid/releases/tag/1.2.22</a></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 18 Mar 2024 02:09:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/283514/druid-1-2-22-released</guid>
            <link>https://www.oschina.net/news/283514/druid-1-2-22-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[webtim 开源即时通讯平台 v0.0.4 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><blockquote>
 前言：webtim 是即时通讯平台，提供丰富的通讯功能，除了基础通讯，同时实现多人实时音视频，视频直播等功能。im
 <span>服务器为<span>&nbsp;</span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftlnet.top%2Ftim" target="_blank"><span>Tim</span></a><span>。前端使用 tim 的 js 客户端<span>&nbsp;</span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdonnie4w%2Ftimjs" target="_blank"><span>timjs</span></a><span><span>&nbsp;</span>调用 tim 服务器接口解析数据并渲染页面</span></blockquote><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftlnet.top%2Fwebtim" target="_blank">webtim 官网</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftlnet.top%2Fwebtim" target="_blank">在线地址</a></li></ul><p>webtim 具备以下功能与特性：</p><ul><li>信息安全性：信息加密加密机制，确保通信内容的安全性。</li><li>用户资料安全性：用户账号无需被记录到服务器。用户资料被加密存储。确保用户信息的安全性。</li><li>即时消息通讯：用户间进行实时信息发送。</li><li>离线消息存储：允许用户在离线状态下接收消息，并在重新上线时进行同步。</li><li>用户管理：支持用户注册、登录、个人信息管理等功能。</li><li>好友关系管理：支持用户添加、删除好友，管理好友列表等功能。</li><li>群管理：支持群的一系列操作功能</li><li>消息回执：提供消息的发送状态反馈。</li><li>消息撤回：消息可以被发送者撤回，并同步到相关所有的终端。</li><li>用户状态广播：实现了用户实时在线状态的广播与订阅</li><li>文件传输：支持用户间互发文件</li><li>视频电话：实现用户与用户之间建立音视频电话的功能</li><li>视频直播：实现了用户可以在线视频直播的功能</li><li>直播本地视频：实现了用户可以通过播放本地音视频来做在线直播的功能</li><li>多人实时视频：实现了多人进行实时视频的功能。该功能可用于在线多人会议，远程在线办公等。</li></ul><hr><p>webtim v0.0.4 的主要更新内容</p><ol><li>修复已知的 bug。</li><li>优化加载速度，与内存分配 
  <ul><li>图片托管在<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftlnet.top%2Fwfs" target="_blank">wfs 文件存储系统,</a><span>&nbsp;</span>；离线图片，图片大小展示，使用 wfs 图片处理，更加灵活和高效</li></ul></li><li>增加用户状态在线探测。</li></ol><p style="color:#212529; text-align:start">说明：</p><ul><li>状态在线探测依赖 tim 的 v2.0.2 版本后台新接口</li><li>webtim 之前的版本，离线图片使用 js 在线处理，有两个问题 
  <ol><li>处理失败率占比高；托管在 wfs，图片处理 100% 成功率</li><li>比较占用内存 CPU，特别在移动端，加载大量用户资料时可能出现卡顿。</li></ol></li><li>图片处理，如离线与在线状态图片： &nbsp;<span>&nbsp;</span><img alt="" src="https://webtim.cn/static/1106056506_3064017.jpg?mode/0/w/40/g/1" referrerpolicy="no-referrer"><span>&nbsp;</span>&nbsp; &nbsp;<img alt="" src="https://webtim.cn/static/1106056506_3064017.jpg?mode/0/w/40" referrerpolicy="no-referrer"></li></ul><p style="color:#212529; text-align:start">&nbsp;</p><hr><p>webtim 相关技术资料</p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftlnet.top%2Ftimdoc" target="_blank"><span>TIM 开发使用文档</span></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftlnet.top%2Ftim" target="_blank"><span>TIM 即时通讯引擎</span></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdonnie4w%2Fwebtim" target="_blank"><span>webtim 源码地址</span></a><span><span>&nbsp;</span>&nbsp;</span></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdonnie4w%2Ftimjs" target="_blank"><span>timjs 源码地址</span></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftlnet.top%2Ftldb" target="_blank">Tldb 分布式数据库</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftlnet.top%2Fwfs" target="_blank">WFS 文件存储系统</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftlnet.top%2Fwfsdoc" target="_blank">WFS 使用文档</a></li></ul><p><br> webtim 本地部署方案</p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdonnie4w%2Fwebtim-deploy" target="_blank">webtim 本地部署</a></li></ul><p style="color:#212529; text-align:start">&nbsp;</p><hr><p>实时音视频</p><p style="color:#212529; text-align:start"><span><strong>移动端的截图：</strong></span></p><p style="color:#212529; text-align:start"><img alt="" src="https://tlnet.top/statics/tlnettop/img/27136.jpg" width="470" referrerpolicy="no-referrer"></p><p style="color:#212529; text-align:start">&nbsp;</p><p style="color:#212529; text-align:start">说明：<span style="background-color:#ffffff; color:#212529">tim 可以实现更为复杂的业务需求和更精细的流控制，在多人实时视频中，如多人实时会议，远程办公，在线实时授课等，甚至几百上千人实时音视频对话中，tim 可以提高更为有效的控制，用以解决同时过多人数实时音视频复杂问题。</span></p><p style="color:#212529; text-align:start">&nbsp;</p><p>Tim 的关键技术包括以下几个方面</p><ol><li>去中心化：Tim 采用去中心化的分布式架构，没有中心节点或控制单元。每个节点都是独立的，具有高度自治的特征。这种架构方式可以降低单点故障的风险，提高系统的可靠性和安全性。</li><li>分布式数据存储：Tim 采用分布式存储算法，将数据分散存储在多个数据库节点上。这种存储方式可以提高数据的可靠性和安全性，并且能够更好地抵御数据丢失或损坏的问题。</li><li>支持大规模用户：Tim 能够支持大规模用户同时在线，并保证消息的及时送达。通过优化的协议和序列化技术，Tim 能够高效地处理海量数据和请求，确保消息的快速传输和可靠交付。</li><li>即时通讯：Tim 作为即时通讯 IM 引擎，强调信息的及时性和可达性。它采用高效的传输协议和序列化技术，优化消息的传递和接收，确保用户能够即时地交流和互动。</li><li>安全性和隐私保护：Tim 重视用户信息的隐私和安全。通过加密技术和去中心化身份验证等手段，确保用户数据的安全和隐私不受侵犯。同时，内部开发人员也无法直接查询用户及通讯信息，增加了数据的安全性。</li><li>高可用性和容错性：Tim 具有高可用性和容错性。由于采用去中心化分布式架构，即使某个节点出现故障，其他节点仍能继续工作，确保整体服务的连续性。这种设计方式提高了系统的可靠性和稳定性。</li><li>可扩展性和灵活性：Tim 的分布式架构使其具有良好的可扩展性和灵活性。随着业务需求的增长，可以增加更多的节点来提高系统的处理能力和存储容量。同时，由于节点间的自由连接和交互，Tim 能够快速适应变化的需求和环境。</li></ol></div>
                                    ]]>
            </description>
            <pubDate>Mon, 18 Mar 2024 02:01:52 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/283512/webtim-0-0-4-released</guid>
            <link>https://www.oschina.net/news/283512/webtim-0-0-4-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[基于 Java 的大语言模型应用开发框架，Agents-Flex alpha.3 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#40485b; margin-left:0px; margin-right:0px; text-align:center"><img src="https://gitee.com/agents-flex/agents-flex/raw/main/docs/assets/images/banner.png" referrerpolicy="no-referrer"></p><h1>Agents-Flex： 一个基于 Java 的 LLM（大语言模型）应用开发框架。</h1><hr><h2>基本能力</h2><ul><li>LLM 的访问能力</li><li>Prompt、Prompt Template 定义加载的能力</li><li>Function Calling 定义、调用和执行等能力</li><li>记忆的能力（Memory）</li><li>Embedding</li><li>Vector Storage</li><li>文档处理 
  <ul><li>加载器（Loader） 
    <ul><li>Http</li><li>FileSystem</li></ul></li><li>分割器（Splitter）</li><li>解析器（Parser） 
    <ul><li>PoiParser</li><li>PdfBoxParser</li></ul></li></ul></li><li>LLM Chain</li><li>Agents Chain</li></ul><h2>简单对话</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">使用 OpenAi 大语言模型:</p><div><div><pre><span><span>@Test</span></span><span><strong>public</strong><strong>void</strong><strong>testChat</strong><span>()</span><span>{</span></span><span><strong>OpenAiLlmConfig</strong><span>config</span><span>=</span><strong>new</strong><strong>OpenAiLlmConfig</strong><span>();</span></span><span><span>config</span><span>.</span><span style="color:#008080">setApiKey</span><span>(</span><span style="color:#dd2200">"sk-rts5NF6n*******"</span><span>);</span></span><span><strong>Llm</strong><span>llm</span><span>=</span><strong>new</strong><strong>OpenAiLlm</strong><span>(</span><span>config</span><span>);</span></span><span><strong>String</strong><span>response</span><span>=</span><span>llm</span><span>.</span><span style="color:#008080">chat</span><span>(</span><span style="color:#dd2200">"请问你叫什么名字"</span><span>);</span></span><span><strong>System</strong><span>.</span><span style="color:#008080">out</span><span>.</span><span style="color:#008080">println</span><span>(</span><span>response</span><span>);</span></span><span><span>}</span></span></pre><div>
   &nbsp;
  </div></div></div><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">使用 「通义千问」 大语言模型:</p><div><div><pre><span><span>@Test</span></span><span><strong>public</strong><strong>void</strong><strong>testChat</strong><span>()</span><span>{</span></span><span><strong>QwenLlmConfig</strong><span>config</span><span>=</span><strong>new</strong><strong>QwenLlmConfig</strong><span>();</span></span><span><span>config</span><span>.</span><span style="color:#008080">setApiKey</span><span>(</span><span style="color:#dd2200">"sk-28a6be3236****"</span><span>);</span></span><span><span>config</span><span>.</span><span style="color:#008080">setModel</span><span>(</span><span style="color:#dd2200">"qwen-turbo"</span><span>);</span></span><span><strong>Llm</strong><span>llm</span><span>=</span><strong>new</strong><strong>QwenLlm</strong><span>(</span><span>config</span><span>);</span></span><span><strong>String</strong><span>response</span><span>=</span><span>llm</span><span>.</span><span style="color:#008080">chat</span><span>(</span><span style="color:#dd2200">"请问你叫什么名字"</span><span>);</span></span><span><strong>System</strong><span>.</span><span style="color:#008080">out</span><span>.</span><span style="color:#008080">println</span><span>(</span><span>response</span><span>);</span></span><span><span>}</span></span></pre><div>
   &nbsp;
  </div></div></div><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">使用 「讯飞星火」 大语言模型:</p><div><div><pre><span><span>@Test</span></span><span><strong>public</strong><strong>void</strong><strong>testChat</strong><span>()</span><span>{</span></span><span><strong>SparkLlmConfig</strong><span>config</span><span>=</span><strong>new</strong><strong>SparkLlmConfig</strong><span>();</span></span><span><span>config</span><span>.</span><span style="color:#008080">setAppId</span><span>(</span><span style="color:#dd2200">"****"</span><span>);</span></span><span><span>config</span><span>.</span><span style="color:#008080">setApiKey</span><span>(</span><span style="color:#dd2200">"****"</span><span>);</span></span><span><span>config</span><span>.</span><span style="color:#008080">setApiSecret</span><span>(</span><span style="color:#dd2200">"****"</span><span>);</span></span><span><strong>Llm</strong><span>llm</span><span>=</span><strong>new</strong><strong>SparkLlm</strong><span>(</span><span>config</span><span>);</span></span><span><strong>String</strong><span>response</span><span>=</span><span>llm</span><span>.</span><span style="color:#008080">chat</span><span>(</span><span style="color:#dd2200">"请问你叫什么名字"</span><span>);</span></span><span><strong>System</strong><span>.</span><span style="color:#008080">out</span><span>.</span><span style="color:#008080">println</span><span>(</span><span>response</span><span>);</span></span><span><span>}</span></span></pre><div>
   &nbsp;
  </div></div></div><h2>历史对话示例</h2><div><div><pre><span><strong>public</strong><strong>static</strong><strong>void</strong><strong>main</strong><span>(</span><strong>String</strong><span>[]</span><span>args</span><span>)</span><span>{</span></span><span><strong>SparkLlmConfig</strong><span>config</span><span>=</span><strong>new</strong><strong>SparkLlmConfig</strong><span>();</span></span><span><span>config</span><span>.</span><span style="color:#008080">setAppId</span><span>(</span><span style="color:#dd2200">"****"</span><span>);</span></span><span><span>config</span><span>.</span><span style="color:#008080">setApiKey</span><span>(</span><span style="color:#dd2200">"****"</span><span>);</span></span><span><span>config</span><span>.</span><span style="color:#008080">setApiSecret</span><span>(</span><span style="color:#dd2200">"****"</span><span>);</span></span><span><strong>Llm</strong><span>llm</span><span>=</span><strong>new</strong><strong>SparkLlm</strong><span>(</span><span>config</span><span>);</span></span><span><strong>HistoriesPrompt</strong><span>prompt</span><span>=</span><strong>new</strong><strong>HistoriesPrompt</strong><span>();</span></span><span><strong>System</strong><span>.</span><span style="color:#008080">out</span><span>.</span><span style="color:#008080">println</span><span>(</span><span style="color:#dd2200">"您想问什么？"</span><span>);</span></span><span><strong>Scanner</strong><span>scanner</span><span>=</span><strong>new</strong><strong>Scanner</strong><span>(</span><strong>System</strong><span>.</span><span style="color:#008080">in</span><span>);</span></span><span><strong>String</strong><span>userInput</span><span>=</span><span>scanner</span><span>.</span><span style="color:#008080">nextLine</span><span>();</span></span><span><strong>while</strong><span>(</span><span>userInput</span><span>!=</span><strong>null</strong><span>)</span><span>{</span></span><span><span>prompt</span><span>.</span><span style="color:#008080">addMessage</span><span>(</span><strong>new</strong><strong>HumanMessage</strong><span>(</span><span>userInput</span><span>));</span></span><span><span>llm</span><span>.</span><span style="color:#008080">chatAsync</span><span>(</span><span>prompt</span><span>,</span><span>(</span><span>context</span><span>,</span><span>response</span><span>)</span><span>-&gt;</span><span>{</span></span><span><strong>System</strong><span>.</span><span style="color:#008080">out</span><span>.</span><span style="color:#008080">println</span><span>(</span><span style="color:#dd2200">"&gt;&gt;&gt;&gt; "</span><span>+</span><span>response</span><span>.</span><span style="color:#008080">getMessage</span><span>().</span><span style="color:#008080">getContent</span><span>());</span></span><span><span>});</span></span><span><span>userInput</span><span>=</span><span>scanner</span><span>.</span><span style="color:#008080">nextLine</span><span>();</span></span><span><span>}</span></span><span><span>}</span></span></pre><div>
   &nbsp;
  </div></div></div><h2>Function Calling</h2><ul><li>第一步: 通过注解定义本地方法</li></ul><div><div><pre><span><strong>public</strong><strong>class</strong><strong>WeatherUtil</strong><span>{</span></span><span><span>@FunctionDef</span><span>(</span><span>name</span><span>=</span><span style="color:#dd2200">"get_the_weather_info"</span><span>,</span><span>description</span><span>=</span><span style="color:#dd2200">"get the weather info"</span><span>)</span></span><span><strong>public</strong><strong>static</strong><strong>String</strong><strong>getWeatherInfo</strong><span>(</span></span><span><span>@FunctionParam</span><span>(</span><span>name</span><span>=</span><span style="color:#dd2200">"city"</span><span>,</span><span>description</span><span>=</span><span style="color:#dd2200">"the city name"</span><span>)</span><strong>String</strong><span>name</span></span><span><span>)</span><span>{</span></span><span><span style="color:#888888">//在这里，我们应该通过第三方接口调用 api 信息</span></span><span><strong>return</strong><span>name</span><span>+</span><span style="color:#dd2200">"的天气是阴转多云。 "</span><span>;</span></span><span><span>}</span></span><span><span>}</span></span></pre><div>
   &nbsp;
  </div></div></div><ul><li>第二步: 通过 Prompt、Functions 传入给大模型，然后得到结果</li></ul><div><div><pre><span><strong>public</strong><strong>static</strong><strong>void</strong><strong>main</strong><span>(</span><strong>String</strong><span>[]</span><span>args</span><span>)</span><span>{</span></span><span><strong>OpenAiLlmConfig</strong><span>config</span><span>=</span><strong>new</strong><strong>OpenAiLlmConfig</strong><span>();</span></span><span><span>config</span><span>.</span><span style="color:#008080">setApiKey</span><span>(</span><span style="color:#dd2200">"sk-rts5NF6n*******"</span><span>);</span></span><span><strong>OpenAiLlm</strong><span>llm</span><span>=</span><strong>new</strong><strong>OpenAiLlm</strong><span>(</span><span>config</span><span>);</span></span><span><strong>FunctionPrompt</strong><span>prompt</span><span>=</span><strong>new</strong><strong>FunctionPrompt</strong><span>(</span><span style="color:#dd2200">"今天北京的天气怎么样"</span><span>,</span><strong>WeatherUtil</strong><span>.</span><span style="color:#008080">class</span><span>);</span></span><span><strong>FunctionResultResponse</strong><span>response</span><span>=</span><span>llm</span><span>.</span><span style="color:#008080">chat</span><span>(</span><span>prompt</span><span>);</span></span><span><strong>Object</strong><span>result</span><span>=</span><span>response</span><span>.</span><span style="color:#008080">invoke</span><span>();</span></span><span><strong>System</strong><span>.</span><span style="color:#008080">out</span><span>.</span><span style="color:#008080">println</span><span>(</span><span>result</span><span>);</span></span><span><span style="color:#888888">//"北京的天气是阴转多云。 "</span></span><span><span>}</span></span></pre><div>
   &nbsp;
  </div></div></div><h2>模块构成</h2><p style="color:#40485b; margin-left:0em; margin-right:0em; text-align:left"><img alt="" src="https://gitee.com/agents-flex/agents-flex/raw/main/docs/assets/images/modules.jpg" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">注意：当前版本为 v1.0.0-alpha.2 ，还在开发中，请暂时勿使用于正式的商业产品中。</p><h2>开源地址​：</h2><ul><li>Gitee:&nbsp;<a href="https://gitee.com/agents-flex/agents-flex">https://gitee.com/agents-flex/agents-flex</a></li><li>Github:&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fagents-flex%2Fagents-flex" target="_blank">https://github.com/agents-flex/agents-flex</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Mon, 18 Mar 2024 01:37:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/283508/agents-flex-alpha-3</guid>
            <link>https://www.oschina.net/news/283508/agents-flex-alpha-3</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[类腾讯文档 UI 风格的 AI 编辑器，AiEditor rc.8 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="screenshot.png" height="287" src="https://gitee.com/aieditor-team/aieditor/raw/main/docs/assets/image/logo-banner.png" width="500" referrerpolicy="no-referrer"></p><h1>AiEditor</h1><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">关于 AiEditor（官网<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Faieditor.dev">https://aieditor.dev</a><span>&nbsp;</span>）</p><blockquote><p style="margin-left:0; margin-right:0">AiEditor 是一个面向 AI 的下一代富文本编辑器，她基于 Web Component，因此支持 Layui、Vue、React、Angular 等几乎任何前端框架。她适配了 PC Web 端和手机端，并提供了，亮色，和 暗色，两个主题。除此之外，她还提供了灵活的配置，开发者可以方便的使用其开发任何文字编辑的应用。</p></blockquote><h2>在线演示</h2><ul><li>现代风格（类腾讯文档）:<span>&nbsp;</span><a href="https://gitee.com/link?target=http%3A%2F%2Faieditor1.jpress.cn">http://aieditor1.jpress.cn</a></li><li>经典 / 传统风格:<span>&nbsp;</span><a href="https://gitee.com/link?target=http%3A%2F%2Faieditor.jpress.cn">http://aieditor.jpress.cn</a></li></ul><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="screenshot.png" src="https://gitee.com/aieditor-team/aieditor/raw/main/docs/assets/image/screenshot.png" referrerpolicy="no-referrer"></p><h2>已完善</h2><ul><li><span>&nbsp;</span><strong>基础</strong>：标题、正文、字体、字号、加粗、斜体、下划线、删除线、链接、行内代码、上标、下标、分割线、引用、打印</li><li><span>&nbsp;</span><strong>增强</strong>：撤回、重做、格式刷、橡皮擦、待办事项、字体颜色、背景颜色、Emoji 表情、对齐方式、行高、有（无）序列表、段落缩进、强制换行</li><li><span>&nbsp;</span><strong>附件</strong>：支持图片、视频、文件功能，支持选择上传、粘贴上传、拖拽上传、支持拖动调整大小...</li><li><span>&nbsp;</span><strong>代码</strong>：行内代码、代码块、语言类型选择、<strong>AI 自动注释</strong>、<strong>AI 代码解释</strong>...</li><li><span>&nbsp;</span><strong>表格</strong>：左增右增、左减右减、上增下增、上减下减、合并单元格、解除合并</li><li><span>&nbsp;</span><strong>Markdown</strong>：标题、引用、表格、图片、代码块、<strong>高亮块（类似 vuepress 的 :::）</strong>、各种列表、粗体、斜体、删除线...</li><li><span>&nbsp;</span><strong>A I</strong>：AI 续写、AI 优化、AI 校对、AI 翻译、自定义 AI 菜单及其 Prompts</li><li><strong>主题</strong>：传统切入主题、<strong>类腾讯文档风格主题</strong></li><li><span>&nbsp;</span><strong>更多</strong>：国际化、亮色主题、暗色主题、手机适配、全屏编辑、@某某某（提及）...</li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">&nbsp;</p><h2>待完善（计划中...）</h2><ul><li><span>&nbsp;</span>团队协作</li><li><span>&nbsp;</span>自动化测试</li><li><span>&nbsp;</span>AI 插入图片</li><li><span>&nbsp;</span>AI 图生图（AI 图片优化）</li><li><span>&nbsp;</span>AI 一键排版</li><li><span>&nbsp;</span>进一步增强粘贴功能</li><li><span>&nbsp;</span>上传视频自动获取缩略图</li><li><span>&nbsp;</span>WORD 导入、导出</li><li><span>&nbsp;</span>PDF 导出、PDF 预览</li><li><span>&nbsp;</span>类 Notion 拖拽功能</li><li><span>&nbsp;</span>更多的大模型对接：文心一言、ChatGPT</li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">&nbsp;</p><h2>v1.0.0-rc.8 更新细节：</h2><ul><li>新增：添加自定义对接任意大模型的支持</li><li>新增：添加文心一言大模型的支持，感谢<span>&nbsp;</span><a href="https://gitee.com/bendantada" target="_blank">@笨笨</a></li><li>新增：星火大模型添加对 v3.5 的支持</li><li>新增：AI 客户端新增 SSE 客户端的支持</li><li>优化：AI 菜单，AI 命令添加自动选择大语言模型的支持</li><li>文档：修正图片上传的示例错误代码</li><li>文档：更新配置 models 的相关错误示例</li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">&nbsp;</p><h2>快速开始</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">安装：</p><div><div><pre><span><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1">npm</span></span></span></span></span></span></span></span></span></span></span><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62">i aieditor</span></span></span></span></span></span></span></span></span></span></span></span></pre><div>
   &nbsp;
  </div></div></div><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">使用：</p><div><div><pre><span><strong><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">new</span></span></span></span></span></span></span></span></span></span></span></strong><span><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">AiEditor</span></span></span></span></span></span></span></span></span></span></span></span><span>({</span></span><span><span style="color:#008080"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5">element</span></span></span></span></span></span></span></span></span></span></span></span><span>:</span><span><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62">"</span></span></span></span></span></span></span></span></span></span></span></span><span style="color:#dd1144"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62">#aiEditor</span></span></span></span></span></span></span></span></span></span></span></span><span><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62">"</span></span></span></span></span></span></span></span></span></span></span></span><span>,</span></span><span><span style="color:#008080"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5">placeholder</span></span></span></span></span><span>:</span><span><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62">"</span></span></span></span></span></span></span></span></span></span></span></span><span style="color:#dd1144"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62">点击输入内容...</span></span></span></span></span></span></span></span></span></span></span></span><span><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62">"</span></span></span></span></span></span></span></span></span></span></span></span><span>,</span></span><span><span style="color:#008080"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5">content</span></span></span></span></span><span>:</span><span><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62">'</span></span></span></span></span></span></span></span></span></span></span></span><span style="color:#dd1144"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62">AiEditor 是一个面向 AI 的开源富文本编辑器。 </span></span></span></span></span></span></span></span></span></span></span></span><span><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62">'</span></span></span></span></span></span></span></span></span></span></span></span><span>,</span></span><span><span>})</span></span></pre><div>
   &nbsp;
  </div></div></div><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">更多访问官网：<a href="https://gitee.com/link?target=https%3A%2F%2Faieditor.dev%2Fzh%2Fgetting-started.html">https://aieditor.dev/zh/getting-started.html</a></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 18 Mar 2024 01:34:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/283507/aieditor-rc8</guid>
            <link>https://www.oschina.net/news/283507/aieditor-rc8</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[【店滴云】民宿管理系统升级微信营销功能]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="text-align:center">【店滴云】民宿管理系统升级微信营销功能</p><p>1、授权版后台与微信公众号深度绑定。从用户登录到用户消费和使用</p><p>2、粉丝数据的维护更方便，可以对不同粉丝进行精准划分</p><p>3、增加微信模板消息应用辅助，可以更方便的触达用户</p><p>&nbsp;</p><p>系统后台截图：</p><p>楼栋管理：</p><p><img height="919" src="https://oscimg.oschina.net/oscnet/up-82bda53dd6f8c76e183673a79dd15e31dcc.png" width="1920" referrerpolicy="no-referrer"></p><p>房间管理：</p><p><img height="919" src="https://oscimg.oschina.net/oscnet/up-e58f485fb826b82e6ce75bbdd282fcdc0bc.png" width="1920" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 18 Mar 2024 01:30:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/283505</guid>
            <link>https://www.oschina.net/news/283505</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[RXThinkCMF 敏捷开发框架 Laravel10+EleVue 版本 v2.0.0 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff; color:#40485b">v2.0.0 更新如下:</span><br><span style="background-color:#ffffff; color:#40485b">1、新增 Docker 容器化解决方案；</span><br><span style="background-color:#ffffff; color:#40485b">2、优化系统功能模块和文件结构；</span><br><span style="background-color:#ffffff; color:#40485b">3、优化编码规范，统一命名和描述；</span><br><span style="background-color:#ffffff; color:#40485b">4、优化数据库表结构和编码；</span><br><span style="background-color:#ffffff; color:#40485b">5、优化模块页面，提升使用体验度；</span><br><span style="background-color:#ffffff; color:#40485b">6、修复近期用户反馈的问题；</span></p><div><div><div><h2>项目介绍</h2><p style="margin-left:0; margin-right:0">一款 PHP 语言基于 Laravel10、Vue、ElementUI、MySQL 等框架精心打造的一款模块化、插件化、高性能的前后端分离架构敏捷开发框架，可用于快速搭建前后端分离后台管理系统，本着简化开发、提升开发效率的初衷，目前框架已集成了完整的 RBAC 权限架构和常规基础模块，前端 Vue 端支持多主题切换，可以根据自己喜欢的风格选择想一个的主题，实现了个性化呈现的需求；为了敏捷快速开发，提升研发效率，框架内置了一键 CRUD 代码生成器，自定义了模块生成模板，包括后端 PHP 文件模块和前端 Vue 端个性化模板，可以根据已建好的表结构 (字段注释需规范) 快速的一键生成整个模块的所有代码和增删改查等等功能业务，真正实现了低代码开发，极大的节省了人力成本的同时提高了开发效率，缩短了研发周期，是一款真正意义上实现组件化、低代码敏捷开发框架。</p><h2>软件信息</h2><ul><li>软件名称：RXThinkCMF 敏捷开发框架 Laravel10+EleVue 版本</li><li>官网网址：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.rxthink.cn" target="_blank">https://www.rxthink.cn</a></li><li>文档网址：<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fdocs.laravel10.elevue.rxthink.cn" target="_blank">http://docs.laravel10.elevue.rxthink.cn</a></li><li>演示地址：<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmanage.laravel10.elevue.rxthink.cn" target="_blank">http://manage.laravel10.elevue.rxthink.cn</a></li></ul><h2>版本说明</h2><table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:0px; border:none; box-sizing:border-box; color:#40485b; display:block; font-family:-apple-system,BlinkMacSystemFont,&quot;Segoe UI&quot;,Helvetica,Arial,&quot;Apple Color Emoji&quot;,&quot;Segoe UI Emoji&quot;,&quot;Segoe UI Symbol&quot;,&quot;Liberation Sans&quot;,&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,&quot;Hiragino Sans GB&quot;,&quot;Wenquanyi Micro Hei&quot;,&quot;WenQuanYi Zen Hei&quot;,&quot;ST Heiti&quot;,SimHei,SimSun,&quot;WenQuanYi Zen Hei Sharp&quot;,sans-serif; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; line-height:inherit; margin:0px 0px 16px; max-width:100%; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:635px; word-break:initial; word-spacing:0px"><tbody><tr><th>版本名称</th><th>版本说明</th><th>版本地址</th></tr></tbody><tbody><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">ThinkPhp3.2+Layui 混编版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 ThinkPhp3.2、Layui、MySQL 等框架研发的混编专业版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp3.2_Layui">https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp3.2_Layui</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">ThinkPhp5.1+Layui 混编版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 ThinkPhp5.1、Layui、MySQL 等框架研发的混编专业版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp5.1_Layui">https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp5.1_Layui</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">ThinkPhp6.x+Layui 混编版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 ThinkPhp6、Layui、MySQL 等框架研发的混编专业版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp6_Layui">https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp6_Layui</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">ThinkPhp8.x+Layui 混编版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 ThinkPhp8、Layui、MySQL 等框架研发的混编专业版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp8_Layui">https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp8_Layui</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Laravel8.x+Layui 混编版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 Laravel8、Layui、MySQL 等框架研发的混编专业版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/rxthinkcmf/RXThinkCMF_laravel8_Layui">https://gitee.com/rxthinkcmf/RXThinkCMF_laravel8_Layui</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Laravel9.x+Layui 混编版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 Laravel9、Layui、MySQL 等框架研发的混编专业版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/rxthinkcmf/RXThinkCMF_Laravel9_Layui">https://gitee.com/rxthinkcmf/RXThinkCMF_Laravel9_Layui</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Laravel10.x+Layui 混编版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 Laravel10、Layui、MySQL 等框架研发的混编专业版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/rxthinkcmf/RXThinkCMF_Laravel10_Layui">https://gitee.com/rxthinkcmf/RXThinkCMF_Laravel10_Layui</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">ThinkPhp3.2+EleVue 前后端分离版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 ThinkPhp3.2、Vue2.x、ElementUI 等框架研发前后端分离版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp3.2_EleVue">https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp3.2_EleVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">ThinkPhp3.2+AntdVue 前后端分离版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 ThinkPhp3.2、Vue3.x、AntDesign 等框架研发前后端分离版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp3.2_AntdVue">https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp3.2_AntdVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">ThinkPhp5.1+EleVue 前后端分离版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 ThinkPhp5.1、Vue2.x、ElementUI 等框架研发前后端分离版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp5.1_EleVue">https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp5.1_EleVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">ThinkPhp5.1+AntdVue 前后端分离版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 ThinkPhp5.1、Vue2.x、AntDesign 等框架研发前后端分离版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp5.1_AntdVue">https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp5.1_AntdVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">ThinkPhp6.x+EleVue 前后端分离版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 ThinkPhp6、Vue2.x、ElementUI 等框架研发前后端分离版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp6_EleVue">https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp6_EleVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">ThinkPhp6.x+AntdVue 前后端分离版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 ThinkPhp6、Vue3.x、AntDesign 等框架研发前后端分离版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp6_AntdVue">https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp6_AntdVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">ThinkPhp8.x+EleVue 前后端分离版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 ThinkPhp8、Vue2.x、ElementUI 等框架研发前后端分离版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp8_EleVue">https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp8_EleVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">ThinkPhp8.x+AntdVue 前后端分离版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 ThinkPhp8、Vue3.x、AntDesign 等框架研发前后端分离版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp8_AntdVue">https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp8_AntdVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Laravel8.x+EleVue 前后端分离版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 Laravel8、Vue2.x、ElementUI 等框架研发前后端分离版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/rxthinkcmf/RXThinkCMF_Laravel8_EleVue">https://gitee.com/rxthinkcmf/RXThinkCMF_Laravel8_EleVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Laravel8.x+AntdVue 前后端分离版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 Laravel8、Vue3.x、AntDesign 等框架研发前后端分离版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/rxthinkcmf/RXThinkCMF_Laravel8_AntdVue">https://gitee.com/rxthinkcmf/RXThinkCMF_Laravel8_AntdVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Laravel9.x+EleVue 前后端分离版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 Laravel9、Vue2.x、ElementUI 等框架研发前后端分离版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/rxthinkcmf/RXThinkCMF_Laravel9_EleVue">https://gitee.com/rxthinkcmf/RXThinkCMF_Laravel9_EleVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Laravel9.x+AntdVue 前后端分离版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 Laravel9、Vue3.x、AntDesign 等框架研发前后端分离版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/rxthinkcmf/RXThinkCMF_Laravel9_AntdVue">https://gitee.com/rxthinkcmf/RXThinkCMF_Laravel9_AntdVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Laravel10.x+EleVue 前后端分离版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 Laravel10、Vue2.x、ElementUI 等框架研发前后端分离版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/rxthinkcmf/RXThinkCMF_Laravel10_EleVue">https://gitee.com/rxthinkcmf/RXThinkCMF_Laravel10_EleVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Laravel10.x+AntdVue 前后端分离版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 Laravel10、Vue3.x、AntDesign 等框架研发前后端分离版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/rxthinkcmf/RXThinkCMF_Laravel10_AntdVue">https://gitee.com/rxthinkcmf/RXThinkCMF_Laravel10_AntdVue</a></td></tr></tbody></table><h2>模块展示</h2><p style="margin-left:0; margin-right:0"><img alt="" height="1080" src="https://oscimg.oschina.net/oscnet/up-44c7ba2ba7c06e94c5fc7771e1ec57af447.png" width="1920" referrerpolicy="no-referrer"></p></div></div></div></div>
                                    ]]>
            </description>
            <pubDate>Sun, 17 Mar 2024 23:05:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/283498</guid>
            <link>https://www.oschina.net/news/283498</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Teo 0.2.16 发布！用户登录只需 5 行代码，高度可扩展！]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify">Teo 是以结构为核心的声明式网络后端开发框架，支持 Node.js、Python 和 Rust 语言，支持手动编写和 AI 编写。它能够节省 80% 的开发时间，大大缩短开发时间和开发成本，符合当下的技术环境和社会环境，是新一代的网络开发框架。</p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify">在 0.2.16 版本中，我们新增了用户登录、token 验证等功能。多的不说，请看演示。</p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><strong><span>Teo schema</span></strong></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify">声明一个服务器，包含增删改查分组聚合是非常简单的，甚至不需要编程代码，使用编程代码，开发者可以访问 ORM API 和定义自定义的路由，编写自定义的路由先进后出中间件。</p><pre><code><span>connector {</span></code><code><span><span style="color:#dd1144">provider:</span> .sqlite,</span></code><code><span><span style="color:#dd1144">url:</span><span style="color:#dd1144">"sqlite:./database.sqlite"</span></span></code><code><span>}</span></code><code><span></span></code><code><span>server {</span></code><code><span><span style="color:#dd1144">bind:</span> (<span style="color:#dd1144">"0.0.0.0"</span>, <span style="color:#0e9ce5">5052</span>)</span></code><code><span>}</span></code><code><span>​</span></code><code><span>model User {</span></code><code><span>  @id @autoIncrement @readonly</span></code><code><span><span style="color:#dd1144">id:</span> Int</span></code><code><span>  @unique @onSet($if($presents, $isEmail))</span></code><code><span><span style="color:#dd1144">email:</span> String</span></code><code><span>  @writeonly @onSet($presents.bcrypt.salt)</span></code><code><span>&nbsp;&nbsp;<span style="color:#dd1144">password:</span>&nbsp;String</span></code><code><span>}</span></code></pre><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify">如上所示，声明一个含有邮箱和密码的用户表，并产生增删改查分组聚合等 API，是非常容易的。在 schema 中，我们也指定了服务器监听的端口和连接的数据库。Teo 采用连接池来管理数据库连接，非常的高效和性能。<span>使用命令`</span><span>teo serve`</span><span>即可启动服务器。</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span><strong>用户登录</strong></span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify">为这个用户表增加登录功能，非常的简单，请看更新后的代码。</p><pre><code><span>connector {</span></code><code><span><span style="color:#dd1144">provider:</span> .sqlite,</span></code><code><span><span style="color:#dd1144">url:</span><span style="color:#dd1144">"sqlite:./database.sqlite"</span></span></code><code><span>}</span></code><code><span></span></code><code><span>server {</span></code><code><span><span style="color:#dd1144">bind:</span> (<span style="color:#dd1144">"0.0.0.0"</span>, <span style="color:#0e9ce5">5052</span>)</span></code><code><span>}</span></code><code><span></span></code><code><span>@identity.tokenIssuer($identity.jwt(<span style="color:#dd1144">expired:</span><span style="color:#0e9ce5">3600</span> * <span style="color:#0e9ce5">24</span> * <span style="color:#0e9ce5">365</span>))</span></code><code><span>@identity.jwtSecret(ENV[<span style="color:#dd1144">"JWT_SECRET"</span>]!)</span></code><code><span>model User {</span></code><code><span>  @id @autoIncrement @readonly</span></code><code><span><span style="color:#dd1144">id:</span> Int</span></code><code><span>  @unique @onSet($if($presents, $isEmail)) @identity.id</span></code><code><span><span style="color:#dd1144">email:</span> String</span></code><code><span>  @writeonly @onSet($presents.bcrypt.salt)</span></code><code><span>  @identity.checker($get(.value).presents.bcrypt.verify($self.get(.password).presents))</span></code><code><span><span style="color:#dd1144">password:</span> String</span></code><code><span></span></code><code><span><span style="color:#ca7d37">include</span> handler identity.signIn</span></code><code><span><span style="color:#ca7d37">include</span> handler identity.identity</span></code><code><span>}</span></code><code><span></span></code><code><span>middlewares [identity.identityFromJwt(<span style="color:#dd1144">secret:</span> ENV[<span style="color:#dd1144">"JWT_SECRET"</span>]!)]</span></code></pre><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify">我们增加了一些修饰符，指定了 token 的 encode 方式，这里采用业内最流行的 JWT token，并指定了过期时间。我们标记了采用邮箱登录，采用密码验证，并且增加了两个由模版 handler 构成的新的 route handler。这两个 route handler 完全不需要手动代码编写。在文件内增加中间件，这个中间件会验证 token 并且设置当前的登录者。这段代码，总共比之前的没有登录功能的时候，增加了 5 行代码。</p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span><strong>辅助验证信息</strong></span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify">在实际开发中，我们在登录的时候，经常要用户点击图片验证码或输入一些来自图片中的文字。这些辅助的验证信息，也可以通过 Teo 的 API 进行传递，话不多说，上例子。</p><pre><code><span>connector {</span></code><code><span><span style="color:#dd1144">provider:</span> .sqlite,</span></code><code><span><span style="color:#dd1144">url:</span><span style="color:#dd1144">"sqlite:./database.sqlite"</span></span></code><code><span>}</span></code><code><span></span></code><code><span>server {</span></code><code><span><span style="color:#dd1144">bind:</span> (<span style="color:#dd1144">"0.0.0.0"</span>, <span style="color:#0e9ce5">5052</span>)</span></code><code><span>}</span></code><code><span></span></code><code><span>@identity.tokenIssuer($identity.jwt(<span style="color:#dd1144">expired:</span><span style="color:#0e9ce5">3600</span> * <span style="color:#0e9ce5">24</span> * <span style="color:#0e9ce5">365</span>))</span></code><code><span>@identity.jwtSecret(ENV[<span style="color:#dd1144">"JWT_SECRET"</span>]!)</span></code><code><span>model User {</span></code><code><span>  @id @autoIncrement @readonly</span></code><code><span><span style="color:#dd1144">id:</span> Int</span></code><code><span>  @unique @onSet($if($presents, $isEmail)) @identity.id</span></code><code><span><span style="color:#dd1144">email:</span> String</span></code><code><span>  @writeonly @onSet($presents.bcrypt.salt)</span></code><code><span>  @identity.checker(</span></code><code><span>    $do($get(.value).presents.bcrypt.verify($self.get(.password).presents))</span></code><code><span>    .<span style="color:#ca7d37">do</span>($get(.companions).presents.get(.imageAuthToken).presents))</span></code><code><span><span style="color:#dd1144">password:</span> String</span></code><code><span>  @virtual @writeonly @identity.companion</span></code><code><span><span style="color:#dd1144">imageAuthToken:</span> String?</span></code><code><span></span></code><code><span><span style="color:#ca7d37">include</span> handler identity.signIn</span></code><code><span><span style="color:#ca7d37">include</span> handler identity.identity</span></code><code><span>}</span></code><code><span></span></code><code><span>middlewares [identity.identityFromJwt(<span style="color:#dd1144">secret:</span> ENV[<span style="color:#dd1144">"JWT_SECRET"</span>]!)]</span></code></pre><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify">我们又增加了四行代码。imageAuthToken 是一个虚拟字段，它不会在数据库中出现，但是却会在请求中出现，这样的字段是配合 API 功能的。比如，输入旧密码更改当前密码，这个功能，就需要定义一个 oldPassword 这样的虚拟字段。在这个例子中，我们只是检查 imageAuthToken 是否存在，而实际应用中，我们通过编写 pipeline item 跟第三方接口验证验证码即可。</p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span><strong>动态的 token 过期时间</strong></span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify">有一些论坛网站，token 过期时间是用户自己选择的，现在有这个需求的产品很少，但是 Teo 同样支持。</p><pre><code><span>connector {</span></code><code><span><span style="color:#dd1144">provider:</span> .sqlite,</span></code><code><span><span style="color:#dd1144">url:</span><span style="color:#dd1144">"sqlite:./database.sqlite"</span></span></code><code><span>}</span></code><code><span></span></code><code><span>server {</span></code><code><span><span style="color:#dd1144">bind:</span> (<span style="color:#dd1144">"0.0.0.0"</span>, <span style="color:#0e9ce5">5052</span>)</span></code><code><span>}</span></code><code><span></span></code><code><span>@identity.tokenIssuer($identity.jwt(<span style="color:#dd1144">expired:</span> $get(.expired).presents))</span></code><code><span>@identity.jwtSecret(ENV[<span style="color:#dd1144">"JWT_SECRET"</span>]!)</span></code><code><span>model User {</span></code><code><span>  @id @autoIncrement @readonly</span></code><code><span><span style="color:#dd1144">id:</span> Int</span></code><code><span>  @unique @onSet($if($presents, $isEmail)) @identity.id</span></code><code><span><span style="color:#dd1144">email:</span> String</span></code><code><span>  @writeonly @onSet($presents.bcrypt.salt)</span></code><code><span>  @identity.checker(</span></code><code><span>    $do($get(.value).presents.bcrypt.verify($self.get(.password).presents))</span></code><code><span>    .<span style="color:#ca7d37">do</span>($get(.companions).presents.get(.imageAuthToken).presents))</span></code><code><span><span style="color:#dd1144">password:</span> String</span></code><code><span>  @virtual @writeonly @identity.companion</span></code><code><span><span style="color:#dd1144">imageAuthToken:</span> String?</span></code><code><span>  @virtual @writeonly @identity.companion</span></code><code><span><span style="color:#dd1144">expired:</span> Int64?</span></code><code><span></span></code><code><span><span style="color:#ca7d37">include</span> handler identity.signIn</span></code><code><span><span style="color:#ca7d37">include</span> handler identity.identity</span></code><code><span>}</span></code><code><span></span></code><code><span>middlewares [identity.identityFromJwt(<span style="color:#dd1144">secret:</span> ENV[<span style="color:#dd1144">"JWT_SECRET"</span>]!)]</span></code></pre><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify">把 JWT 的 expire 参数改为动态获取，就可以得到用户传来的 expire 参数了。如果 expire 参数填一个很低的秒数，这个 token 很快就会过期。</p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span><strong>账号封禁</strong></span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify">实现封禁账号是很简单的，利用声明式的优势。告诉 Teo，什么样的账号判定为被封禁即可。</p><pre><code><span>connector {</span></code><code><span>  provider: .sqlite,</span></code><code><span>  url: <span style="color:#dd1144">"sqlite:./database.sqlite"</span></span></code><code><span>}</span></code><code><span></span></code><code><span>server {</span></code><code><span><span style="color:#ca7d37">bind</span>: (<span style="color:#dd1144">"0.0.0.0"</span>, <span style="color:#0e9ce5">5052</span>)</span></code><code><span>}</span></code><code><span></span></code><code><span>@identity.tokenIssuer($identity.jwt(expired: $get(.expired).presents))</span></code><code><span>@identity.jwtSecret(ENV[<span style="color:#dd1144">"JWT_SECRET"</span>]!)</span></code><code><span>@identity.validateAccount($get(.enabled).presents.e<span style="color:#dd1144">q(true)</span>)</span></code><code><span>model User {</span></code><code><span>  @id @autoIncrement @readonly</span></code><code><span>  id: Int</span></code><code><span>  @unique @onSet($if($presents, $isEmail)) @identity.id</span></code><code><span>  email: String</span></code><code><span>  @writeonly @onSet($presents.bcrypt.salt)</span></code><code><span>  @identity.checker(</span></code><code><span>    $do($get(.value).presents.bcrypt.verify($self.get(.password).presents))</span></code><code><span>    .do($get(.companions).presents.get(.imageAuthToken).presents))</span></code><code><span>  password: String</span></code><code><span>  @virtual @writeonly @identity.companion</span></code><code><span>  imageAuthToken: String?</span></code><code><span>  @virtual @writeonly @identity.companion</span></code><code><span>  expired: Int64?</span></code><code><span>  @migration(default: true)</span></code><code><span>  enabled: Bool</span></code><code><span></span></code><code><span>  include handler identity.signIn</span></code><code><span>  include handler identity.identity</span></code><code><span>}</span></code><code><span></span></code><code><span>middlewares [identity.identityFromJwt(secret: ENV[<span style="color:#dd1144">"JWT_SECRET"</span>]!)]</span></code></pre><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify">在这里更新的例子中，通过新增的一行模型声明，Teo 知道了，enabled 字段为 false 的账号即是封禁账号。封禁的账号不能进行登录，其 token 也会失效。</p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span><strong>第三方身份集成</strong></span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify">实际开发中，我们经常要做微信登录，支付宝登录等平台身份登录。具体的前端跳转逻辑，我们不做演示。在后端，绑定账号就是更新字段，我们演示如何使用三方 token 进行登录。</p><pre><code><span>connector {</span></code><code><span>  provider: .sqlite,</span></code><code><span>  url: <span style="color:#dd1144">"sqlite:./database.sqlite"</span></span></code><code><span>}</span></code><code><span></span></code><code><span>server {</span></code><code><span><span style="color:#ca7d37">bind</span>: (<span style="color:#dd1144">"0.0.0.0"</span>, <span style="color:#0e9ce5">5052</span>)</span></code><code><span>}</span></code><code><span></span></code><code><span>@identity.tokenIssuer($identity.jwt(expired: $get(.expired).presents))</span></code><code><span>@identity.jwtSecret(ENV[<span style="color:#dd1144">"JWT_SECRET"</span>]!)</span></code><code><span>@identity.validateAccount(</span></code><code><span>  $message($get(.enabled).presents.e<span style="color:#dd1144">q(true)</span>, <span style="color:#dd1144">"this account is blocked"</span>))</span></code><code><span>model User {</span></code><code><span>  @id @autoIncrement @readonly</span></code><code><span>  id: Int</span></code><code><span>  @unique @onSet($if($presents, $isEmail)) @identity.id</span></code><code><span>  email: String</span></code><code><span>  @writeonly @onSet($presents.bcrypt.salt)</span></code><code><span>  @identity.checker(</span></code><code><span>    $do($get(.value).presents.bcrypt.verify($self.get(.password).presents))</span></code><code><span>    .do($get(.companions).presents.get(.imageAuthToken).presents))</span></code><code><span>  password: String</span></code><code><span>  @virtual @writeonly @identity.companion</span></code><code><span>  imageAuthToken: String?</span></code><code><span>  @virtual @writeonly @identity.companion</span></code><code><span>  expired: Int64?</span></code><code><span>  @migration(default: true) @default(true)</span></code><code><span>  enabled: Bool</span></code><code><span>  @identity.id @unique</span></code><code><span>  thirdPartyId: String?</span></code><code><span>  @virtual @writeonly @identity.checker($get(.value).presents.valid)</span></code><code><span>  thirdPartyToken: String?</span></code><code><span></span></code><code><span>  include handler identity.signIn</span></code><code><span>  include handler identity.identity</span></code><code><span>}</span></code><code><span></span></code><code><span>middlewares [identity.identityFromJwt(secret: ENV[<span style="color:#dd1144">"JWT_SECRET"</span>]!)]</span></code></pre><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify">在表中新增三方 id 和三方 token，使用自定义的 pipeline item 与三方沟通获得 token 是否有效。一旦有效，就给用户在我们系统中登录，获得我们的 token。这时，进行 signIn 请求，我们不用输入邮箱和密码，输入三方 id 和 token 即可。</p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span><strong>手机验证码/邮箱验证码/手机密码/邮箱密码</strong></span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify">Teo 支持任意的身份字段和验证方式相匹配。我们来看一个验证码验证的案例。这一次需要编写编程代码。</p><pre><code><span>connector {</span></code><code><span>  provider: .sqlite,</span></code><code><span>  url: <span style="color:#dd1144">"sqlite:./database.sqlite"</span></span></code><code><span>}</span></code><code><span></span></code><code><span>server {</span></code><code><span>  bind: (<span style="color:#dd1144">"0.0.0.0"</span>, <span style="color:#0e9ce5">5052</span>)</span></code><code><span>}</span></code><code><span></span></code><code><span>entity {</span></code><code><span>  provider: .rust,</span></code><code><span>  dest: <span style="color:#dd1144">"./src/entities"</span></span></code><code><span>}</span></code><code><span></span></code><code><span><span style="color:#ca7d37">declare</span> pipeline item validateAuthCode&lt;T&gt;: T -&gt; <span style="color:#ca7d37">String</span></span></code><code><span></span></code><code><span><span style="color:#afafaf">@identity</span>.tokenIssuer($identity.jwt(expired: $<span style="color:#ca7d37">get</span>(.expired).presents))</span></code><code><span><span style="color:#afafaf">@identity</span>.jwtSecret(ENV[<span style="color:#dd1144">"JWT_SECRET"</span>]!)</span></code><code><span><span style="color:#afafaf">@identity</span>.validateAccount(</span></code><code><span>  $message($<span style="color:#ca7d37">get</span>(.enabled).presents.eq(<span style="color:#0e9ce5">true</span>), <span style="color:#dd1144">"this account is blocked"</span>))</span></code><code><span>model User {</span></code><code><span><span style="color:#afafaf">@id</span><span style="color:#afafaf">@autoIncrement</span><span style="color:#afafaf">@readonly</span></span></code><code><span>  id: Int</span></code><code><span><span style="color:#afafaf">@unique</span><span style="color:#afafaf">@onSet</span>($<span style="color:#ca7d37">if</span>($presents, $isEmail)) <span style="color:#afafaf">@identity</span>.id</span></code><code><span><span style="color:#afafaf">@presentWithout</span>(.phoneNumber)</span></code><code><span>  email: <span style="color:#ca7d37">String</span>?</span></code><code><span><span style="color:#afafaf">@writeonly</span><span style="color:#afafaf">@onSet</span>($presents.bcrypt.salt)</span></code><code><span><span style="color:#afafaf">@identity</span>.checker(</span></code><code><span>    $<span style="color:#ca7d37">do</span>($<span style="color:#ca7d37">get</span>(.value).presents.bcrypt.verify($self.get(.password).presents))</span></code><code><span>    .do($<span style="color:#ca7d37">get</span>(.companions).presents.get(.imageAuthToken).presents))</span></code><code><span>  password: <span style="color:#ca7d37">String</span>?</span></code><code><span><span style="color:#afafaf">@virtual</span><span style="color:#afafaf">@writeonly</span><span style="color:#afafaf">@identity</span>.companion</span></code><code><span>  imageAuthToken: <span style="color:#ca7d37">String</span>?</span></code><code><span><span style="color:#afafaf">@virtual</span><span style="color:#afafaf">@writeonly</span><span style="color:#afafaf">@identity</span>.companion</span></code><code><span>  expired: Int64?</span></code><code><span><span style="color:#afafaf">@migration</span>(<span style="color:#ca7d37">default</span>: <span style="color:#0e9ce5">true</span>) <span style="color:#afafaf">@default</span>(<span style="color:#0e9ce5">true</span>)</span></code><code><span>  enabled: Bool</span></code><code><span><span style="color:#afafaf">@identity</span>.id <span style="color:#afafaf">@unique</span></span></code><code><span>  thirdPartyId: <span style="color:#ca7d37">String</span>?</span></code><code><span><span style="color:#afafaf">@virtual</span><span style="color:#afafaf">@writeonly</span><span style="color:#afafaf">@identity</span>.checker($<span style="color:#ca7d37">get</span>(.value).presents.valid)</span></code><code><span>  thirdPartyToken: <span style="color:#ca7d37">String</span>?</span></code><code><span><span style="color:#afafaf">@onSet</span>($<span style="color:#ca7d37">if</span>($presents, $regexMatch(<span style="color:#ca7d37">/\\+?[0-9]+/</span>))) <span style="color:#afafaf">@identity</span>.id</span></code><code><span><span style="color:#afafaf">@presentWithout</span>(.email) <span style="color:#afafaf">@unique</span></span></code><code><span>  phoneNumber: <span style="color:#ca7d37">String</span>?</span></code><code><span><span style="color:#afafaf">@virtual</span><span style="color:#afafaf">@writeonly</span><span style="color:#afafaf">@identity</span>.checker($validateAuthCode)</span></code><code><span>  authCode: <span style="color:#ca7d37">String</span>?</span></code><code><span></span></code><code><span>  include handler identity.signIn</span></code><code><span>  include handler identity.identity</span></code><code><span>}</span></code><code><span></span></code><code><span>model AuthCode {</span></code><code><span><span style="color:#afafaf">@id</span><span style="color:#afafaf">@autoIncrement</span><span style="color:#afafaf">@readonly</span></span></code><code><span>  id: Int</span></code><code><span><span style="color:#afafaf">@presentWithout</span>(.phoneNumber) <span style="color:#afafaf">@unique</span></span></code><code><span>  email: <span style="color:#ca7d37">String</span>?</span></code><code><span><span style="color:#afafaf">@presentWithout</span>(.email) <span style="color:#afafaf">@unique</span></span></code><code><span>  phoneNumber: <span style="color:#ca7d37">String</span>?</span></code><code><span><span style="color:#afafaf">@onSave</span>($randomDigits(<span style="color:#0e9ce5">4</span>))</span></code><code><span>  code: <span style="color:#ca7d37">String</span></span></code><code><span>}</span></code><code><span></span></code><code><span>middlewares [identity.identityFromJwt(secret: ENV[<span style="color:#dd1144">"JWT_SECRET"</span>]!)]</span></code></pre><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify">我们新增了一张 AuthCode 表，用来保存用户收到的验证码。我们用编程代码访问 Teo 的 ORM API 来进行验证码验证。代码如下，有三个语言版本，选择你采用的语言即可。</p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><strong>Node.js 版本</strong></p><pre><code><span><span style="color:#ca7d37">import</span> { App } <span style="color:#ca7d37">from</span><span style="color:#dd1144">'@teocloud/teo'</span></span></code><code><span><span style="color:#ca7d37">import</span> { AuthCodeWhereUniqueInput, Teo, User } <span style="color:#ca7d37">from</span><span style="color:#dd1144">'./entities'</span></span></code><code><span></span></code><code><span><span style="color:#ca7d37">const</span> app = <span style="color:#ca7d37">new</span> App()</span></code><code><span></span></code><code><span>app.mainNamespace().defineValidatorPipelineItem(</span></code><code><span><span style="color:#dd1144">"validateAuthCode"</span>, </span></code><code><span><span style="color:#ca7d37">async</span> (checkArgs: <span style="color:#ca7d37">any</span>, _, user: User, teo: Teo) =&gt; {</span></code><code><span><span style="color:#ca7d37">const</span> finder: AuthCodeWhereUniqueInput = {}</span></code><code><span><span style="color:#ca7d37">if</span> (checkArgs.ids.email) {</span></code><code><span>            finder.email = user.email!</span></code><code><span>        }</span></code><code><span><span style="color:#ca7d37">if</span> (checkArgs.ids.phoneNumber) {</span></code><code><span>            finder.phoneNumber = user.phoneNumber!</span></code><code><span>        }</span></code><code><span><span style="color:#ca7d37">const</span> authCode = <span style="color:#ca7d37">await</span> teo.authCode.findUnique({</span></code><code><span>            where: finder</span></code><code><span>        })</span></code><code><span><span style="color:#ca7d37">if</span> (!authCode) {</span></code><code><span><span style="color:#ca7d37">return</span><span style="color:#dd1144">"auth code not found"</span></span></code><code><span>        }</span></code><code><span><span style="color:#ca7d37">if</span> (authCode.code !== checkArgs.value) {</span></code><code><span><span style="color:#ca7d37">return</span><span style="color:#dd1144">"auth code is wrong"</span></span></code><code><span>        }</span></code><code><span>})</span></code><code><span></span></code><code><span>app.run()</span></code></pre><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><strong><span><span><span><span><span><span><span><span><span>Python 版本</span></span></span></span></span></span></span></span></span></strong></p><pre><code><span><span style="color:#ca7d37">from</span> __future__ <span style="color:#ca7d37">import</span> annotations</span></code><code><span><span style="color:#ca7d37">from</span> typing <span style="color:#ca7d37">import</span> Any</span></code><code><span><span style="color:#ca7d37">from</span> asyncio <span style="color:#ca7d37">import</span> run</span></code><code><span><span style="color:#ca7d37">from</span> teo <span style="color:#ca7d37">import</span> App</span></code><code><span><span style="color:#ca7d37">from</span> entities <span style="color:#ca7d37">import</span> Teo, User</span></code><code><span></span></code><code><span><span style="color:#ca7d37">async</span><span><span style="color:#ca7d37">def</span><span style="color:#dd1144">main</span><span>()</span>:</span></span></code><code><span>    app = App()</span></code><code><span><span style="color:#ca7d37">async</span><span><span style="color:#ca7d37">def</span><span style="color:#dd1144">validate_auth_code</span><span>(checker_args: dict[str, Any], _, user: User, teo: Teo)</span>:</span></span></code><code><span>        finder = {}</span></code><code><span><span style="color:#ca7d37">if</span> checker_args[<span style="color:#dd1144">'ids'</span>].get(<span style="color:#dd1144">'email'</span>) <span style="color:#ca7d37">is</span><span style="color:#ca7d37">not</span><span style="color:#ca7d37">None</span>:</span></code><code><span>            finder[<span style="color:#dd1144">'email'</span>] = user.email</span></code><code><span><span style="color:#ca7d37">if</span> checker_args[<span style="color:#dd1144">'ids'</span>].get(<span style="color:#dd1144">'phoneNumber'</span>) <span style="color:#ca7d37">is</span><span style="color:#ca7d37">not</span><span style="color:#ca7d37">None</span>:</span></code><code><span>            finder[<span style="color:#dd1144">'phoneNumber'</span>] = user.phone_number</span></code><code><span>        auth_code = <span style="color:#ca7d37">await</span> teo.auth_code.find_unique({</span></code><code><span><span style="color:#dd1144">"where"</span>: finder</span></code><code><span>        })</span></code><code><span><span style="color:#ca7d37">if</span> auth_code <span style="color:#ca7d37">is</span><span style="color:#ca7d37">None</span>:</span></code><code><span><span style="color:#ca7d37">return</span><span style="color:#dd1144">"auth code not found"</span></span></code><code><span><span style="color:#ca7d37">if</span> auth_code.code != checker_args.value:</span></code><code><span><span style="color:#ca7d37">return</span><span style="color:#dd1144">"auth code is wrong"</span></span></code><code><span></span></code><code><span>    app.main_namespace().define_validator_pipeline_item(</span></code><code><span><span style="color:#dd1144">"validateAuthCode"</span>, </span></code><code><span>        validate_auth_code)</span></code><code><span></span></code><code><span>run(main())</span></code></pre><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><strong>Rust 版本</strong></p><pre><code><span>pub mod entities;</span></code><code><span></span></code><code><span><span style="color:#ca7d37">use</span><span style="color:#dd1144">entities</span>::{<span style="color:#dd1144">Teo</span>, <span style="color:#dd1144">User</span>};</span></code><code><span><span style="color:#ca7d37">use</span><span style="color:#dd1144">indexmap</span>::<span style="color:#dd1144">indexmap</span>;</span></code><code><span><span style="color:#ca7d37">use</span><span style="color:#dd1144">tokio</span>::<span style="color:#dd1144">main</span>;</span></code><code><span><span style="color:#ca7d37">use</span><span style="color:#dd1144">teo</span>::<span style="color:#dd1144">prelude</span>::{<span style="color:#dd1144">pipeline</span>::<span style="color:#dd1144">item</span>::<span style="color:#dd1144">validator</span>::<span style="color:#dd1144">Validity</span>, <span style="color:#dd1144">App</span>, <span style="color:#dd1144">Result</span>, <span style="color:#dd1144">Value</span>, <span style="color:#dd1144">Error</span>};</span></code><code><span></span></code><code><span><em>#[main]</em></span></code><code><span>async fn main() -&gt; Result&lt;()&gt; {</span></code><code><span>    let app = App::new()?;</span></code><code><span>    app.main_namespace_mut().define_validator_pipeline_item(<span style="color:#dd1144">"validateAuthCode"</span>, move |check_args: Value, user: User, teo: Teo| async move {</span></code><code><span>        let mut finder = Value::Dictionary(indexmap!{});</span></code><code><span>        let check_args = check_args.as_dictionary().unwrap();</span></code><code><span>        let ids = check_args.get(<span style="color:#dd1144">"ids"</span>).unwrap().as_dictionary().unwrap();</span></code><code><span><span style="color:#ca7d37">if</span> ids.contains_key(<span style="color:#dd1144">"email"</span>) {</span></code><code><span>            finder.as_dictionary_mut().unwrap().insert(<span style="color:#dd1144">"email"</span>.to_owned(), ids.get(<span style="color:#dd1144">"email"</span>).unwrap().<span style="color:#ca7d37">clone</span>());</span></code><code><span>        }</span></code><code><span><span style="color:#ca7d37">if</span> ids.contains_key(<span style="color:#dd1144">"phoneNumber"</span>) {</span></code><code><span>            finder.as_dictionary_mut().unwrap().insert(<span style="color:#dd1144">"phoneNumber"</span>.to_owned(), ids.get(<span style="color:#dd1144">"phoneNumber"</span>).unwrap().<span style="color:#ca7d37">clone</span>());</span></code><code><span>        }</span></code><code><span>        let auth_code = teo.auth_code().find_unique(finder).await?;</span></code><code><span>        match auth_code {</span></code><code><span>            Some(auth_code) =&gt; <span style="color:#ca7d37">if</span> auth_code.code().as_str() == check_args.get(<span style="color:#dd1144">"value"</span>).unwrap().as_str().unwrap() {</span></code><code><span>                Ok::&lt;Validity, Error&gt;(Validity::Valid)</span></code><code><span>            } <span style="color:#ca7d37">else</span> {</span></code><code><span>                Ok(Validity::Invalid(<span style="color:#dd1144">"auth code is wrong"</span>.to_owned()))</span></code><code><span>            },</span></code><code><span>            None =&gt; Ok(Validity::Invalid(<span style="color:#dd1144">"auth code not found"</span>.to_owned()))</span></code><code><span>        }</span></code><code><span>    });</span></code><code><span>    app.run().await</span></code><code><span>}</span></code></pre><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify">这三组代码做的事情是一样的，创建一个叫作<span style="background-color:#fafafa; color:#dd1144">"validateAuthCode"</span>的 pipeline item。在 schema 中，我们看到了这个 pipeline item 的位置，我们声明并使用了它。这个方法内部，我们根据用户输入的电话号码或邮箱地址，来查找一个验证码，一旦输入正确，我们给予用户登录，否则给予用户错误信息：验证码不存在或验证码错误。</p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span><strong>举一反三</strong></span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify">在刚刚展示的例子中，我们列举了常常容易被想到的 token 用法。如果实现一个人最多允许几个 token，和 invalid 某个 token，则需要单独建表并编写自定义的验证代码，像上面的验证码验证那样。其他的各种验证和 token 方式，也可以通过 Teo 强大的生命方式来实现。</p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span><strong>声明式的魅力</strong></span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify">在这逐步几次更新的 schema 中，我们看到了声明式编程的魅力。一切都那么简洁、易读、可描述。不再有难以看得懂的代码。因为声明式很紧凑，逻辑混乱的 bug 也很难出现。这样的代码，易于编写，易于部署。我们的开发者用户已经开始采用 AI 编程的方式来编写 Teo 服务器代码了。</p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><strong>开发文档</strong></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify">我们的官网内写有丰富的开发文档，支持白天模式和夜间模式的阅读。安装流程，快速开始指南，教程，概念，专题指南和 API 文档一应俱有。</p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify">官网：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fteocloud.io" target="_blank">https://teocloud.io</a></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span><strong>支持我们</strong></span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify">我们从 2022 年编写 Teo 至今，已经接近两年了，它从最初的仅支持 Rust 和 MongoDB 的框架，到现在支持三种语言，支持主流 SQL 和 MongoDB，支持自定义 handler 和中间件，支持生成前端请求客户端，一路过来真的很辛苦。我们不断科研创新、探索研究，克服重重技术难题，把它做到现在。它是完全开源免费的框架。我们做它的目的，是让开发者能过上不卷、没有太大压力的好日子，让创业者和企业能够节省成本，更容易不被技术所负累，更容易成功。</p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify">我们十分需要您的支持，请关注我们的公众号，在 Gitee 为我们点一颗星。</p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify">Gitee: <a href="https://gitee.com/teocloud/teo">https://gitee.com/teocloud/teo</a></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><strong><span>联系我们</span></strong></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify">在使用过程中，如果遇到任何困难，想要与我们沟通，或是提出功能需求，是非常容易的。带着点赞截图和公众号关注截图，添加我们的微信群群管微信 caofz007，即可加入我们的用户群。</p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span><strong><span>加入我们团队</span></strong></span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify">目前我们都是以志愿者形式参与的开发，我是项目的发起者和主要编写者，框架核心，语言绑定，编辑器插件，网站都是我全职编写的。我们需要核心开发，前端开发，编辑器插件开发等人手，来把它做得更好。</p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify">我们现在有清晰的开发和推广，和商业化路线。在 Teo 具有一定规模和可见的良好未来的时候，即在具有一定底牌、资格、合适的时候，我们会积极努力寻找融资，把它做大。也会给予我们的项目贡献者，符合贡献价值<span>的奖励。添加我们的伙伴 caofz007 这个微信，加入我们，成为我们的一部分。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 17 Mar 2024 11:15:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/283459/teo-0-2-16-released</guid>
            <link>https://www.oschina.net/news/283459/teo-0-2-16-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[DaxPay 支付网关 v2.0.3: 增加云闪付支付]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h2>背景</h2><p>在平时对接三方支付时，尤其需要对接多家支付的时候，是不是有以下痛点：</p><blockquote><ol><li><p>各家支付系统的调用方式、返回参数、数据签名、回调格式等都不尽相同，对接时互相之间无法复用</p></li><li><p>各家支付系统提供的支付能力不尽相同，有时候业务系统为了对客户展现的功能一致，需要写大量的适配代码才能实现</p></li><li><p>支付订单、退款订单、回调记录、订单关闭、对账分账等必要功能都需要进行实现，需要考虑各种场景才能保证不出问题</p></li><li><p>有时候业务上需要支持一些扩展的支付类型，如要支持钱包支付、支持多种支付方式进行组合支付、支持聚合支付实现一码通扫等</p></li></ol></blockquote><p>如果你遇到这些问题，<strong>Dromara DaxPay</strong>（开源支付网关）或许能帮助到你：</p><p>它是<code>Dromara 开源社区</code>旗下新晋的一款开源支付网关系统，将各种支付通道（如支付宝、微信、云闪付等）的调用方式进行抽象统一，隐藏开发者不需要关注的细节，只需要一份代码就可以与多家支付通道对接。<code>DaxPay</code>独立部署，提供独立的管理界面，不侵入业务系统也不需要业务系统进行改造，只需要通过<code>http</code>进行调用就拥有相应的支付能力。除了对各类三方支付系统进行了对接，还对常用的支付方式进行了扩展，支持聚合支付、组合支付、钱包支付等功能。</p><h2>🧭 特色功能</h2><ol><li><p>基于<code>Spring Boot</code>、<code>Vue3</code>主流技术栈，方便对系统进行扩展和改造</p></li><li><p>已对接<code>微信支付、支付宝</code>、<code>云闪付</code>的接口，后续版本将支持<code>V3</code>版本支付接口</p></li><li><p>对接各类支付通道对外提供统一的接口，简化支付对接的复杂度，也方便后期快速替换或增加新的支付通道</p></li><li><p>提供<code>钱包支付</code>、<code>现金支付</code>、<code>储值卡支付</code>等扩展支付方式，同时支持组合支付，满足业务系统多样的支付场景</p></li><li><p>提供<code>Java</code>版本的<code>SDK</code>工具包，简化业务系统对接流程，同时也可以使用<code>HTTP</code>方式进行接口调用，保证了更低的耦合性和通用性</p></li><li><p>请求、响应、回调数据都支持启用签名机制，可根据实际需要进行开关，保证交易的安全可靠</p></li><li><p>提供管理平台，可以对各类订单、记录、配置进行便捷的操作，方便运营人员进行支付业务的管理</p></li><li><p>提供<code>聚合支付</code>、<code>电脑收银台</code>和<code>手机收银台</code>的演示模块，供开发者参考其实现支付功能的逻辑</p></li><li><p>系统源码为商业友好的<code>Apache-2.0</code>协议，文档为更加宽松的<code>MIT</code>协议，不需要担心后续代码和文档会突然进行收费</p></li></ol><h2>🥞&nbsp;本次更新内容</h2><ul><li>增加云闪付通道，支持支付、退款、同步、回调处理</li><li>增加定时同步退款中的退款订单任务</li><li>增加通知任务订单的状态类型，例如订单关闭、成功、失败等</li><li>增加退款操作支持重试</li><li>增加手动触发通知任务消息的发送功能</li></ul><h2>🍒 文档和源码地址</h2><h3>文档地址</h3><p>在<a href="https://bootx.gitee.io/">Bootx 开源文档站</a>下的支付网关 (DaxPay) 模块下可以进行查阅相关文档，具体链接地址如下：<a href="https://bootx.gitee.io/daxpay/guides/overview/%E9%A1%B9%E7%9B%AE%E4%BB%8B%E7%BB%8D.html">快速指南</a>、<a href="https://bootx.gitee.io/daxpay/gateway/overview/%E6%8E%A5%E5%8F%A3%E6%B8%85%E5%8D%95.html">支付对接</a>、<a href="https://bootx.gitee.io/daxpay/admin/config/%E5%B9%B3%E5%8F%B0%E9%85%8D%E7%BD%AE.html">操作手册</a></p><h2>🏬 项目和演示地址</h2><h3>源码地址</h3><table><tbody><tr><th>项目</th><th>GITEE</th><th>GITHUB</th></tr></tbody><tbody><tr><td>后端地址</td><td><a href="https://gitee.com/dromara/dax-pay">https://gitee.com/dromara/dax-pay</a></td><td><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdromara%2Fdax-pay" target="_blank">https://github.com/dromara/dax-pay</a></td></tr><tr><td>Web 前端地址</td><td><a href="https://gitee.com/bootx/dax-pay-ui">https://gitee.com/bootx/dax-pay-ui</a></td><td><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxxm1995%2Fdax-pay-ui" target="_blank">https://github.com/xxm1995/dax-pay-ui</a></td></tr><tr><td>H5 前端地址</td><td><a href="https://gitee.com/bootx/dax-pay-h5">https://gitee.com/bootx/dax-pay-h5</a></td><td><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxxm1995%2Fdax-pay-h5" target="_blank">https://github.com/xxm1995/dax-pay-h5</a></td></tr></tbody></table><h3>管理平台:</h3><blockquote><p>注：演示账号部分功能修改删除权限未开放。</p></blockquote><p>地址：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdaxpay.demo.bootx.cn" target="_blank">https://daxpay.demo.bootx.cn</a> 账号：daxpay 密码：123456</p><h3>网关接口</h3><blockquote><p>注：接口平台只开放支付网关相关的接口，不开放系统其他接口。</p></blockquote><p>地址: <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdaxpay.server.bootx.cn%2Fdoc.html" target="_blank">https://daxpay.server.bootx.cn/doc.html</a> 账号: daxpay 密码: 123456</p><h3>收银台</h3><blockquote><p>请勿大额支付，可以通过后台管理平台进行退款</p></blockquote><p>电脑收银台地址: <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdaxpay.demo.bootx.cn%2F%23%2Fcashier" target="_blank">https://daxpay.demo.bootx.cn/#/cashier</a></p><p>手机收银台地址: <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdaxpay.demo.bootx.cn%2Fh5%2F%23%2Fcashier%2FuniCashier" target="_blank">https://daxpay.demo.bootx.cn/h5/#/cashier/uniCashier</a></p><h2>🥞 核心技术栈</h2><table><tbody><tr><th>名称</th><th>描述</th><th>版本要求</th></tr></tbody><tbody><tr><td>Jdk</td><td>Java 环境</td><td>1.8+，11 版本可以正常使用，但 17+版本暂不支持</td></tr><tr><td>Spring Boot</td><td>开发框架</td><td>2.7.x</td></tr><tr><td>Redis</td><td>分布式缓存</td><td>5.x 版本及以上</td></tr><tr><td>MySQL</td><td>数据库</td><td>基于 5.7.X 版本开发，基本支持 8.x 版本</td></tr><tr><td>Vue</td><td>前端框架</td><td>3.x</td></tr><tr><td>IJpay</td><td>支付 SDK 开发包</td><td>项目自动管理，不需要额外处理</td></tr></tbody></table><h2>🍎 系统截图</h2><h3>H5 收银台演示</h3><p><img alt="" src="https://jsd.cdn.zzko.cn/gh/xxm1995/bootx-img@master/daxpay/3.3e0781my8tc0.webp" referrerpolicy="no-referrer"></p><h3>收银台演示</h3><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-d6ae2e823c5910947b6d01679bbbfb08317.jpg" referrerpolicy="no-referrer"></p><h3>支付通道配置</h3><p><img alt="" src="https://jsd.cdn.zzko.cn/gh/xxm1995/bootx-img@master/daxpay/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20240215020450.3abki92bc6w0.webp" referrerpolicy="no-referrer"><img alt="" src="https://oscimg.oschina.net/oscnet/up-fc3b1c709335b70c619272af5f572be1389.jpg" referrerpolicy="no-referrer"></p><h2>🍻 鸣谢</h2><p>感谢 JetBrains 提供的免费开源 License：</p><p><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.jetbrains.com%2F%3Ffrom%3Dbootx"><img alt="JetBrains" src="https://gitee.com/bootx/dax-pay/raw/gateway/_doc/images/jetbrains.png" referrerpolicy="no-referrer"></a></p><p>感谢其他提供灵感和思路的开源项目</p><p><a href="https://gitee.com/bootx/dax-pay/blob/gateway/_license/LICENSE.md">部分参考的开源项目和开源许可列表</a></p><h2>🍷License</h2><p>Apache License Version 2.0</p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 17 Mar 2024 09:13:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/283448/daxpay2-0-3-released</guid>
            <link>https://www.oschina.net/news/283448/daxpay2-0-3-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[增加 Telemetry 功能！Tianji v1.7.0 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h2>Tianji:&nbsp;网站分析器 + 状态监控器 + 服务状态上报</h2><h3>动机</h3><p style="color:#1f2328; margin-left:0; margin-right:0; text-align:start">在我们对网站进行观察时。我们往往需要多个应用一起来组合使用。比如我们需要 ga/umami 等分析工具来查看 pvuv 以及各个页面的访问量，我们需要 uptime 监控器来检查服务器的网络质量与连通性，我们需要通关 prometheus 获取服务端上报的状态来检查服务器的质量。另外如果开发的是一个允许被开源部署的应用，我们往往还需要一个遥测系统来帮助我们对其他人的部署情况做一个最简单的信息收集。</p><p style="color:#1f2328; margin-left:0; margin-right:0; text-align:start">我认为这些工具应当是为同一个目的而服务的，那么有没有一款应用能够轻量级的将这些常见的需求整合为一体呢？毕竟在大部分时候我们并不需要非常专业与深入的功能。但是我为了实现全面的监控却需要安装如此多的服务。</p><p style="color:#1f2328; margin-left:0; margin-right:0; text-align:start">专精于一项这很好，如果我们是相关能力的专家我们需要这样的专业工具。但是对于大部分只有轻量级需求的用户而言，一个 all in one 的应用会更加方便与易于使用</p><ul><li>官方网站:&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftianji.msgbyte.com%2F" target="_blank">https://tianji.msgbyte.com/</a></li><li>Github:&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmsgbyte%2Ftianji" target="_blank">https://github.com/msgbyte/tianji</a></li></ul><h2>v1.7.0 版本更新内容</h2><p>主要更新内容:</p><ul><li>增加遥测功能</li><li>优化体积容器体积</li></ul><p><img height="521" src="https://oscimg.oschina.net/oscnet/up-59b37c7db21f7073c398664cdaf47a878a7.png" width="1312" referrerpolicy="no-referrer"></p><p>(uncompressed)</p><p><img height="60" src="https://oscimg.oschina.net/oscnet/up-a5bad89812d952f64bd97c76c09ca5d7b52.png" width="558" referrerpolicy="no-referrer"></p><h1>详细改动</h1><div><div><div><div><div><div><div><div><div><div><h3>Features</h3><ul><li>add alpha mode and usage page (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmsgbyte%2Ftianji%2Fcommit%2Fd3df3f2692b7bf97759d104f748710afd7b38f00" target="_blank">d3df3f2</a>)</li><li>add telemetry event count (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmsgbyte%2Ftianji%2Fcommit%2Fe79c4b48190c9c1867210399b13e8e4d7386fcd0" target="_blank">e79c4b4</a>)</li><li>add telemetry feature desc (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmsgbyte%2Ftianji%2Fcommit%2F011ac6c71389f0430d995396992e649fa0d5bc91" target="_blank">011ac6c</a>)</li><li>add telemetry list (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmsgbyte%2Ftianji%2Fcommit%2F5e720abb11ae3615b07155aff320f46b5d8f95d1" target="_blank">5e720ab</a>)</li><li>add telemetry metrics table (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmsgbyte%2Ftianji%2Fcommit%2F38dd60feeec35142cd08e4fe4fe2151b5acee400" target="_blank">38dd60f</a>)</li><li>add telemetry overview (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmsgbyte%2Ftianji%2Fcommit%2F5bad815e62352fa2ee5835233e98d3f1370890b8" target="_blank">5bad815</a>)</li><li>add telemetry trpc feature (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmsgbyte%2Ftianji%2Fcommit%2F0bd98adf96fde351cda499ca215cedf36d5ec724" target="_blank">0bd98ad</a>)</li><li>add tianji anonymous telemetry (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmsgbyte%2Ftianji%2Fcommit%2Fceef5c4b71e89bfdb60bf24406a5ab5b6eb930d7" target="_blank">ceef5c4</a>)</li><li>add usage button for telemetry (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmsgbyte%2Ftianji%2Fcommit%2Fdaef9ff08471f3de5a7cf975265d7fae3b28062e" target="_blank">daef9ff</a>)</li><li>telemetry add telemetryId report (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmsgbyte%2Ftianji%2Fcommit%2F355690eb7505a3a3174e88eb7febd17fc0e288c7" target="_blank">355690e</a>)</li></ul><h3>Bug Fixes</h3><ul><li>fix audit log too long will broken style problem (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmsgbyte%2Ftianji%2Fcommit%2Fb02e0b75d67cdf7e64e6606adad9496c2ff722af" target="_blank">b02e0b7</a>)</li><li>fix logic problem of retry (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmsgbyte%2Ftianji%2Fcommit%2Fce891e9254ef82ace8993232b50dee4ffa0673f2" target="_blank">ce891e9</a>)</li><li>fix pageviews not include timezone problem (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmsgbyte%2Ftianji%2Fcommit%2F439eb83748b2fd6386027fdf63252f0a60ab8582" target="_blank">439eb83</a>)</li><li>fix telemetry lost timezone problem (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmsgbyte%2Ftianji%2Fcommit%2F40e1bac541c198fcd6e35600e17fffe1cdd4ddfd" target="_blank">40e1bac</a>)</li></ul><h3>Document</h3><ul><li>add framework support document (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmsgbyte%2Ftianji%2Fcommit%2F18027170b8da78a05f362c1fdcfc0cdbfa018514" target="_blank">1802717</a>)</li><li>add Q&amp;A for tianji reporter (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmsgbyte%2Ftianji%2Fcommit%2Fb50de6b4e026491ecc7e33b876a68ba2282c2faf" target="_blank">b50de6b</a>)</li><li>update changelog (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmsgbyte%2Ftianji%2Fcommit%2F4b35cc0588e0e7d0ff54795b5c57fa9bef647b7c" target="_blank">4b35cc0</a>)</li><li>update docs, add account tip in intro page (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmsgbyte%2Ftianji%2Fcommit%2F5d99bffa87efc5b8279707041c63b6fbd6b42027" target="_blank">5d99bff</a>)</li><li>update intro document (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmsgbyte%2Ftianji%2Fcommit%2F2afb5e55f7689a02542af37e4e98d27f7d8bef53" target="_blank">2afb5e5</a>)</li><li>update keyword (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmsgbyte%2Ftianji%2Fcommit%2F1872a5d437a1e61a459c16372533b93f6e54a1e0" target="_blank">1872a5d</a>)</li><li>update openapi (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmsgbyte%2Ftianji%2Fcommit%2F5b36d10346477a047a0af801a7842ea0fa84e4ae" target="_blank">5b36d10</a>)</li><li>update openapi.json (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmsgbyte%2Ftianji%2Fcommit%2F6f77452ae9a8dff1849e139c9496a026868ab746" target="_blank">6f77452</a>)</li><li>update preview/wechat image, and add feature tag of i18n (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmsgbyte%2Ftianji%2Fcommit%2Fa94e10b93f0233377bc1ac7edbeb5d65c1fc28d1" target="_blank">a94e10b</a>)</li><li>update tianji keywords (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmsgbyte%2Ftianji%2Fcommit%2Fd0c8bf9f0e3e2e0b8d025998e47c0d182f3c6db1" target="_blank">d0c8bf9</a>)</li><li>update wechat qrcode (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmsgbyte%2Ftianji%2Fcommit%2F070f4990a65cf322611f4ecce798639ba51898dc" target="_blank">070f499</a>)</li></ul><h3>Others</h3><ul><li>add sealos config (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmsgbyte%2Ftianji%2Fcommit%2Ff87e5b32f9c08fa3fd31d15547ec559f3f897432" target="_blank">f87e5b3</a>)</li><li>improve dockerfile build (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmsgbyte%2Ftianji%2Fcommit%2F6464a59d791b3fa93ca0b97ca0e1776274bc09b6" target="_blank">6464a59</a>)</li><li>refactor chart render and perf pageview data handle logic (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmsgbyte%2Ftianji%2Fcommit%2F4fe61a6d7c11c99ce3fd4b8ec0cfa2c78cb5c077" target="_blank">4fe61a6</a>)</li><li>refactor website pageview endpoint to trpc (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmsgbyte%2Ftianji%2Fcommit%2Fdd0ad8c5deb217673285ada601c3121815eb37b8" target="_blank">dd0ad8c</a>)</li><li>remove alpha mode for telemetry (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmsgbyte%2Ftianji%2Fcommit%2Fe387b70c3a1511772a548f727bcadfc4a43a92d0" target="_blank">e387b70</a>)</li><li>rename MetricsTable to WebsiteMetricsTable (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmsgbyte%2Ftianji%2Fcommit%2F1306187f01e91d400f228bcd3f4c7ed4ad8576d4" target="_blank">1306187</a>)</li><li>update docker file to multi stage builds (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmsgbyte%2Ftianji%2Fcommit%2Febc91d95317418241a01cf580c423947559f593c" target="_blank">ebc91d9</a>)</li><li>update translation (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmsgbyte%2Ftianji%2Fcommit%2F49fc136fb836cfa178c20809f758bbc13cbdaa46" target="_blank">49fc136</a>)</li><li>upgrade @i18next-toolkit/cli version (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmsgbyte%2Ftianji%2Fcommit%2Fd8b23a746801b3f35d9d86126b37eef53bd84f17" target="_blank">d8b23a7</a>)</li><li>upgrade i18next-toolkit cli version and add translation of telemetry (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmsgbyte%2Ftianji%2Fcommit%2F4711987779733bc12a156767a87cfd6c19b6c8c7" target="_blank">4711987</a>)</li></ul></div></div></div></div></div></div></div></div></div></div></div>
                                    ]]>
            </description>
            <pubDate>Sun, 17 Mar 2024 07:38:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/283434/tianji-1-7-0-released</guid>
            <link>https://www.oschina.net/news/283434/tianji-1-7-0-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Ant Design 5.15.3 发布，企业级 UI 设计语言和 React 实现]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff; color:#333333">An Design 5.15.3 现已发布，主要变化如下：</span></p><ul><li>统一 Modal、Drawer、notification 和 Tour 关闭按钮的样式，并增大 Modal 和 Drawer 关闭按钮的交互区域使其更容易点击。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design%2Fpull%2F47909" target="_blank">#47909</a></li><li>修复 Badge 和文本元素在 Space 下排版不对齐的问题。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design%2Fpull%2F47908" target="_blank">#47908</a></li><li>修复 Upload 列表行动点换行的问题。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design%2Fpull%2F47898" target="_blank">#47898</a></li><li>修复 Typography 配置的<span>&nbsp;</span><code>ellipsis.symbol</code><span>&nbsp;</span>超出单行高度时，省略行数不正确的问题。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design%2Fpull%2F47889" target="_blank">#47889</a></li><li>修复 DatePicker 配置自定义<span>&nbsp;</span><code>controlHeight</code><span>&nbsp;</span>时展示高度不正确的问题。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design%2Fpull%2F47874" target="_blank">#47874</a></li><li>修复 DatePicker 设置<span>&nbsp;</span><code>multiple</code><span>&nbsp;</span>多选换行时行与行之间没有间隙的问题。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design%2Fpull%2F47821" target="_blank">#47821</a></li><li>调深 Empty 文本色彩使其更清晰可读一些。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design%2Fpull%2F47268" target="_blank">#47268</a></li></ul><p>更新说明：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design%2Freleases%2Ftag%2F5.15.3" target="_blank">https://github.com/ant-design/ant-design/releases/tag/5.15.3</a></p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 17 Mar 2024 03:00:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/283411/ant-design-5-15-3-released</guid>
            <link>https://www.oschina.net/news/283411/ant-design-5-15-3-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
    </channel>
</rss>
