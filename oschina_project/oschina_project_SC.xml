<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[开源中国-软件更新资讯]]>
        </title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="http://rsshub.app/oschina/news/project" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[开源中国-软件更新资讯 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Sun, 24 Dec 2023 22:34:27 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[WoTerm v9.29.10 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>v9.29.10 版本带来最大的优化是支持多次身份验证，每个认证阶段均尽可能提供用户名或密码或密钥文件等的修改。在实际的场景中，一般是二次验证如密钥文件+OTP 码如 Google-authenticator。</p><p>具体升级内容如下：</p><p style="margin-left:0px; margin-right:0px">1.修复手动浮动窗口失败缺陷。</p><p style="margin-left:0px; margin-right:0px">2.优化终端缓存及解码性能，使其终端表现更流畅。</p><p style="margin-left:0px; margin-right:0px">3.优化 SSH 的登录逻辑，满足更复杂的多次组合认证情况。</p><p style="margin-left:0px; margin-right:0px">4.修复连接 SSH 低版本服务端时的 ssh-rsa 认证失败的缺陷。</p><p style="margin-left:0px; margin-right:0px">5.其它小优化。</p><p>假设远程服务端是采用二次验证的方式，实现远程登录，如密钥文件+Google-authenticator<br> 第一阶段是密钥方式登录如下图所示：</p><p><img height="181" src="https://oscimg.oschina.net/oscnet/up-cefea7907c2614d12f3e156a7543c4b2ec9.png" width="286" referrerpolicy="no-referrer"><br> 第一阶段验证成功后，则进入第二阶段 Google-authenticator 验证，如下图所示：</p><p><img height="146" src="https://oscimg.oschina.net/oscnet/up-c83480e4b5cb211dc5625d1054653108d1d.png" width="226" referrerpolicy="no-referrer"></p><p>这是其它情形的输入</p><p><img height="204" src="https://oscimg.oschina.net/oscnet/up-f25e12eafcc88489c59824acb09dc5c9ab0.png" width="284" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 24 Dec 2023 10:47:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272436</guid>
            <link>https://www.oschina.net/news/272436</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[《铜豌豆 Linux》12.4.1 版本发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>《铜豌豆 Linux》 12.4.1 版本发布</p><div><img alt="铜豌豆图标" height="28" src="https://www.atzlinux.com/pics/logo/atzlinux_144x144.png" width="28" referrerpolicy="no-referrer"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.atzlinux.com%2F" target="_blank">铜豌豆 Linux</a><div><div><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.atzlinux.com%2Findex.htm" target="_blank">首页</a><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.atzlinux.com%2Fyjaz.htm" target="_blank">一键安装</a><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.atzlinux.com%2Fallpackages.htm" target="_blank">软件</a><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.atzlinux.com%2Fdownload-iso.htm" target="_blank">下载</a><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.atzlinux.com%2FNews%2Findex.htm" target="_blank">新闻</a><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.atzlinux.com%2Fskills.htm" target="_blank">使用技巧</a><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.atzlinux.com%2Ffaq.htm" target="_blank">常见问题</a><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.atzlinux.com%2Fdevel.htm" target="_blank">参与开发</a><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.atzlinux.com%2Fcontribute.htm" target="_blank">开源贡献</a><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.atzlinux.com%2Flinks.htm" target="_blank">友情链接</a><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.atzlinux.com%2Fjuanzeng.htm" target="_blank">捐赠</a><a href="https://gitee.com/atzlinux/debian-cn/issues" target="_blank">反馈</a><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.atzlinux.com%2Fcontact.htm" target="_blank">联系方式</a></div></div><hr><h1>《铜豌豆 Linux》12.4.1 版本发布</h1><h3>2023-12-23</h3> 《铜豌豆 Linux》操作系统是面向中文用户的桌面操作系统，基于 Debian 制作。 
 <p>2023-12-10, Debian 官方发布 12.4 版本：<br><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.debian.org%2FNews%2F2023%2F20231210" target="_blank">https://www.debian.org/News/2023/20231210 </a></p><p>铜豌豆 Linux 跟进发布 12.4.1。 该版本是，铜豌豆 Linux 12 大版本下的第二次小版本发布。</p> 铜豌豆软件源同时发布匹配 
 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.atzlinux.com%2Fallpackages-x86_64-v12.htm" target="_blank"> Debian 12 的软件源 </a> 12.4.1 版本。 
 <p><img alt="v12.4.1 xfce 界面" src="https://cdn.atzlinux.com/pics/v12.4.1-xfce.png" width="100%" referrerpolicy="no-referrer"></p><hr><h2>安装文件 iso 下载</h2><p>安装文件大小约 3.7 G</p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmotion.atzlinux.com%3A18761%2Fatzlinux-cd%2F12.4.1%2Famd64%2Fiso-dvd%2Fatzlinux-12.4.1-amd64-DVD-1.iso" target="_blank">https://motion.atzlinux.com:18761/atzlinux-cd/12.4.1/amd64/iso-dvd/atzlinux-12.4.1-amd64-DVD-1.iso</a></p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmike.atzlinux.com%3A58888%2Fatzlinux-cd%2F12.4.1%2Famd64%2Fiso-dvd%2Fatzlinux-12.4.1-amd64-DVD-1.iso" target="_blank">https://mike.atzlinux.com:58888/atzlinux-cd/12.4.1/amd64/iso-dvd/atzlinux-12.4.1-amd64-DVD-1.iso</a></p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhncsdxwq.atzlinux.com%3A1880%2Fatzlinux-cd%2F12.4.1%2Famd64%2Fiso-dvd%2Fatzlinux-12.4.1-amd64-DVD-1.iso" target="_blank">https://hncsdxwq.atzlinux.com:1880/atzlinux-cd/12.4.1/amd64/iso-dvd/atzlinux-12.4.1-amd64-DVD-1.iso</a></p><p><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.yxgang.top%3A1080%2Fatzlinux-cd%2F12.4.1%2Famd64%2Fiso-dvd%2Fatzlinux-12.4.1-amd64-DVD-1.iso" target="_blank">http://www.yxgang.top:1080/atzlinux-cd/12.4.1/amd64/iso-dvd/atzlinux-12.4.1-amd64-DVD-1.iso</a></p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fxjphwy.atzlinux.com%2Fatzlinux-cd%2F12.4.1%2Famd64%2Fiso-dvd%2Fatzlinux-12.4.1-amd64-DVD-1.iso" target="_blank">https://xjphwy.atzlinux.com/atzlinux-cd/12.4.1/amd64/iso-dvd/atzlinux-12.4.1-amd64-DVD-1.iso</a></p><p><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fatzlinux.pythonskill.com%3A8099%2Fatzlinux-cd%2F12.4.1%2Famd64%2Fiso-dvd%2Fatzlinux-12.4.1-amd64-DVD-1.iso" target="_blank">http://atzlinux.pythonskill.com:8099/atzlinux-cd/12.4.1/amd64/iso-dvd/atzlinux-12.4.1-amd64-DVD-1.iso</a></p><ul><li>深圳电信家用网络</li><li>深圳电信家用网络</li><li>湖南长沙电信家用网络</li><li>山东电信家用网络</li><li>新加坡华为云 (10Mbps 带宽)</li><li>北京联通机房 (10Mbps 带宽)</li></ul> 下载完成后，可进行完整性验证，支持校验和、公钥签名验证。 验证所需
 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.atzlinux.com%2Fatzlinux-cd%2F12.4.1%2Famd64%2Fiso-dvd%2F" target="_blank">相关文件可以访问这里</a>获取。 
 <p>该 iso 安装文件，支持目前国内市场上常用的 Intel/amd 64 位 CPU。</p><hr><h3><span style="color:#f08000"><strong><span>系统默认用户：</span></strong></span>wo</h3> 系统默认创建两个用户， 一个是名字为 wo 的普通用户； 一个是具有
 <span style="color:#000000"><strong>最高系统权限</strong></span>的管理员用户 root 。 
 <ul><li>默认普通用户名为： <strong>wo</strong> ，<strong><span style="color:#ff0000">默认密码</span></strong>为：</li><li><em>debian168;</em><br> 最后一个字符是英文的分号 
   <ul><li>root 用户可以直接登录系统， <em><span style="color:#ff0000"><span><strong>默认密码</strong></span></span></em>为：</li><li><em>debian-cn;168</em><br> 中间为英文的连接符，英文的分号</li></ul><hr><p>&nbsp;</p><h3>安全更新</h3><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.debian.org%2Fsecurity%2F" target="_blank">Debian 官方软件包安全更新</a> 同步到 2023-12-22 日。</li></ul><h3>系统安装 iso 文件调整及优化</h3><ul><li>控制 iso 文件大小</li><li>由于安装 iso 集成的中文软件包功能越来越丰富，其软件包大小也在逐渐增大； 再加上，铜豌豆 Linux 不断根据用户反馈增加默认安装软件，导致 iso 文件接近超过一个 DVD 光盘 3.7 GB 容量。 在此次版本发布中，对增加软件包采取慎重评估策略，并删除部分不常用软件包。</li></ul><h3>主要应用软件包版本增加</h3><ul><li>相对 12.2.1 版本，没有增加应用软件包</li></ul><h3>主要应用软件包版本删除</h3><ul><li>fonts-cns11643-kai</li><li>中文繁体字体，使用频率低</li><li>font-manager</li><li>字体管理器，启动慢，功能和其它字体管理器重复</li></ul><h3>主要应用软件包版本更新</h3><ul><li>腾讯 QQ 官方版本 linuxqq</li><li>3.2.3-20139</li><li>钉钉官方版本 com.alibabainc.dingtalk</li><li>7.1.10.31115</li><li>WPS wps-office</li><li>11.1.0.11711</li><li>网络电视 hypnotix</li><li>4.2-20231219atzlinux</li><li>网易云音乐 netease-cloud-music-gtk</li><li>2.3.0-1</li><li>霞鹜文楷字体 fonts-lxgw-wenkai</li><li>1.315+repack-1</li><li>网络 VPN opengnb</li><li>1.4.5.a-1~bpo12+1</li></ul><h3>铜豌豆软件包主要调整：</h3><ul><li>铜豌豆补丁包</li><li>12.4.1.4 版 
     <ul><li>/etc/atzlinux_version 文件, 版本号设置为 12.4.1</li><li>解决 linuxqq 在老的 AMD CPU 上无法启动问题</li></ul></li></ul><h3>主要系统软件包版本更新</h3><ul><li>内核</li><li>Linux atzlinux-df 6.1.0-16-rt-amd64 #1 SMP PREEMPT_RT Debian 6.1.67-1 (2023-12-12) x86_64 GNU/Linux</li><li>pci.ids</li><li>0.0~2023.11.11-1</li><li>usb.ids</li><li>2023.11.08-1</li></ul><h4>NVIDIA 显卡驱动</h4> 铜豌豆默认安装 NVIDIA 显卡开源驱动 nouveau，软件包名为：xserver-xorg-video-nouveau。 <p>如需要安装 NVIDIA 闭源驱动，请参阅： <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.atzlinux.com%2Fskills-tech.htm%23nvidia" target="_blank"> 安装 NVIDIA 显卡厂家闭源驱动及相关软件 </a></p><h3>《铜豌豆 Linux 12 版本》维护期</h3> 该版本维护期至 2028 年 6 月。 <p>在 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.debian.org%2FNews%2F2023%2F20230610" target="_blank"> Debian 12 版</a> 于 2023 年 6 月正式发布后，Debian 官方将维护三年至 2026 年 6 月 ，随后 Debian 的 LTS 团队将再继续维护两年。 LTS 维护相关情况，请参阅： <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwiki.debian.org%2FLTS" target="_blank"> https://wiki.debian.org/LTS</a></p><p><strong>铜豌豆 Linux 12 版本系列，将跟随 Debian 官方和 Debian LTS 的版本继续进行维护和更新发布。</strong></p><h3>iso 文件信息：</h3><ul><li>jidgo 文件：</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.atzlinux.com%2Fatzlinux-cd%2F12.4.1%2Famd64%2Fjigdo-dvd%2F" target="_blank">https://www.atzlinux.com/atzlinux-cd/12.4.1/amd64/jigdo-dvd/</a><p><strong>指引：</strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.atzlinux.com%2Fskills-tech.htm%23jigdo" target="_blank"> 使用 jigdo 下载制作铜豌豆 iso 镜像文件 </a></p></li><li>iso 文件软件包完整列表：</li><li><a href="https://gitee.com/atzlinux/debian-cn/blob/bookworm/isodvd/12.4/atzlinux-12.4.1-amd64-DVD-1.list" target="_blank">https://gitee.com/atzlinux/debian-cn/blob/bookworm/isodvd/12.4/atzlinux-12.4.1-amd64-DVD-1.list</a></li></ul><h4>已知问题</h4><ul><li>首次点击蓝牙图标，会有是否自动启动蓝牙的提示</li><li>有蓝牙的机器，请选择自动启动蓝牙。</li></ul><h4>问题&amp;需求反馈</h4> 铜豌豆 Linux 项目是一个开源项目，采用开源社区模式开发，非常欢迎大家反馈在使用过程中遇到的任何问题。 各类建议和需求也非常欢迎反馈。 <p><a href="https://gitee.com/atzlinux/debian-cn/issues" target="_blank">https://gitee.com/atzlinux/debian-cn/issues </a></p><h4>感谢</h4><ul><li>感谢各位捐赠人对 《铜豌豆 Linux》项目的积极捐赠</li><li>捐赠列表： <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.atzlinux.com%2Fjuanzeng.htm%23liebiao" target="_blank"> https://www.atzlinux.com/juanzeng.htm#liebiao</a><p>大家的捐赠既是对，铜豌豆 Linux 的认可，也是对，铜豌豆 Linux 支持， 是，铜豌豆 Linux 开源项目持续前进的动力。</p></li></ul><h4>其它事项</h4> root 账号登录系统 
   <ol><li>点击象棋、围棋程序，会报错</li><li>默认声音图标显示为静音</li><li>无法打开声音，不能够播放声音</li><li>点击程序菜单，设置--》用户和组</li><li>账号操作，无法成功，请用 <strong>普通用户</strong> 登录系统后使用该程序，届时会出现 root 密码输入提示框。</li></ol> 以上为正常现象。这是由于 Debian 的安全机制，不建议 root 用户直接使用图形应用程序。请用普通账号登录系统使用相关功能。 
   <hr><div><div><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.atzlinux.com%2Findex.htm" target="_blank">首页</a><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.atzlinux.com%2Fyjaz.htm" target="_blank">一键安装</a><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.atzlinux.com%2Fallpackages.htm" target="_blank">软件</a><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.atzlinux.com%2Fdownload-iso.htm" target="_blank">下载</a><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.atzlinux.com%2FNews%2Findex.htm" target="_blank">新闻</a><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.atzlinux.com%2Fskills.htm" target="_blank">使用技巧</a><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.atzlinux.com%2Ffaq.htm" target="_blank">常见问题</a><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.atzlinux.com%2Fdevel.htm" target="_blank">参与开发</a><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.atzlinux.com%2Fcontribute.htm" target="_blank">开源贡献</a><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.atzlinux.com%2Flinks.htm" target="_blank">友情链接</a><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.atzlinux.com%2Fjuanzeng.htm" target="_blank">捐赠</a><a href="https://gitee.com/atzlinux/debian-cn/issues" target="_blank">反馈</a><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.atzlinux.com%2Fcontact.htm" target="_blank">联系方式</a><br> 版权所有 © 《铜豌豆 Linux》 项目网站版权协议为 (CC BY-NC-ND 4.0)
    </div></div></li></ul></div></div>
                                    ]]>
            </description>
            <pubDate>Sun, 24 Dec 2023 03:31:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272395</guid>
            <link>https://www.oschina.net/news/272395</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Bun 1.0.19 版本更新：重要的性能优化与功能改进]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Bun 的最新版本 1.0.19 为 JavaScript 和 TypeScript 运行环境带来了一系列重要更新。这个版本在性能、兼容性和可用性方面进行了显著改进，解决了多个问题，并提高了整体的开发者体验。</p><h4>增强的 TypeScript 支持：<code>@types/bun</code></h4><p>Bun 1.0.19 中的一个突出更新是重新引入<code>@types/bun</code>，此前称为<code>bun-types</code>。这一变化极大地简化了 Bun 与 TypeScript 的整合，解决了先前实现中的一些问题。开发者不再需要为 Bun 特别配置<code>tsconfig.json</code>，而新包无缝重导出<code>@types/node</code>包，确保了兼容性和易用性。</p><h4>改进的加密包支持</h4><p>对于 JavaScript 生态系统的安全来说，Bun 1.0.19 现在完全支持<code>bcrypt</code>和<code>argon2</code>包，这是对 N-API 兼容性改进的重要一步。这一更新允许开发者在 Bun 环境中使用这些流行的加密包进行安全的密码哈希和验证，使 Bun 成为构建安全应用程序的更加多功能的平台。</p><h4>性能优化</h4><p>Bun 1.0.19 引入了几项性能增强。<code>setTimeout</code>和<code>setInterval</code>的实现在 Linux x64 系统上现在快了四倍，这要归功于一种新的计时器堆，它有效地管理计时器。对于严重依赖计时器操作的应用程序来说，这一改进至关重要，提供了显著更好的性能和资源利用。</p><p>此外，针对 Linux 系统上处理大量输入的<code>Bun.spawnSync</code>进行了优化，为具有大量输出的子进程提供了 50% 的性能提升。<code>Bun.peek()</code>函数也实现了惊人的 90 倍速度提升，而使用<code>expect(...).toEqual</code>比较<code>Map</code>实例现在快了 100 倍，这对于广泛依赖这些功能的应用程序来说，是一大益处。</p><h4>用户体验改进</h4><p>Bun 1.0.19 引入了更好的错误处理，特别是对于使用<code>await</code>在<code>async</code>函数外部这类常见错误。这次更新提供了更有信息量的错误消息，帮助开发者调试并提高代码质量。此版本还解决了<code>bun:test</code>中模块模拟的问题，通过直接使用模块指定符使其更直观。</p><h4>安装和安装后脚本</h4><p>新版本记录了安装后脚本的执行速度，帮助开发者在包安装期间识别性能瓶颈。此外，<code>bun install --verbose</code>现在将安装后脚本的输出实时流式传输，提供实时反馈，增强了安装包过程的透明度。</p><h4>Bug 修复和升级</h4><p>Bun 1.0.19 修复了一系列问题，包括与<code>--frozen-lockfile</code>标志相关的问题、TypeScript 解析器的边缘案例以及与环境变量相关的回归。此更新还带来了 SQLite 版本的升级（至 v3.44.2），确保内嵌的 SQLite 客户端保持最新和安全。</p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 24 Dec 2023 00:54:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272386</guid>
            <link>https://www.oschina.net/news/272386</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[.Net 权限工作流框架 OpenAuth.Net 6.1 版上线]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>本次更新：</p><ul><li>[新增] 人员增加直属上级，相关流程设计可以选择【直属上级】【连续多级直属上级】进行审批</li><li>[新增] 部门增加负责人，相关流程设计可以选择【部门负责人】进行审批</li><li>[修复] 定时任务使用外部接口 URL 时异常</li><li><span style="background-color:#ffffff; color:#40485b">升级.Net 版本 6.0，所有三方组件全面更新。</span></li><li><span style="background-color:#ffffff; color:#40485b">全面支持 SqlSugar Orm。详情：</span><a href="https://gitee.com/link?target=http%3A%2F%2Fdoc.openauth.net.cn%2Fcore%2Fsqlsugar.html" target="_blank">http://doc.openauth.net.cn/core/sqlsugar.html</a></li><li><span style="background-color:#ffffff; color:#40485b">全面更新 mvc 版本，升级 layui 版本至最新 v2.8.11</span><p>&nbsp;</p></li></ul><p><span style="background-color:#ffffff; color:#40485b">🔥.Net 权限管理及快速开发框架、最好用的权限工作流系统。源于 Martin Fowler 企业级应用开发思想及最新技术组合（SqlSugar、EF、Quartz、AutoFac、WebAPI、Swagger、Mock、NUnit、Vue2/3、Element-ui/plus、IdentityServer 等）。核心模块包括：角色授权、代码生成、智能打印、表单设计、工作流、定时任务等。架构易扩展，是中小企业的首选。</span></p><p><img alt="LOGO" src="https://gitee.com/uploads/images/2018/0425/163228_7077c3fd_362401.png" referrerpolicy="no-referrer"></p><ul><li><p style="margin-left:0; margin-right:0">同时支持 EntityFramework、SqlSugar 两款最流行的 ORM 框架</p></li><li><p style="margin-left:0; margin-right:0">符合国情的 RBAC 权限体系。超强的自定义权限控制功能，可灵活配置用户、角色可访问的数据权限。请参考：<a href="https://gitee.com/link?target=https%3A%2F%2Fwww.cnblogs.com%2Fyubaolee%2Fp%2FDataPrivilege.html">通用权限设计与实现</a></p></li><li><p style="margin-left:0; margin-right:0">完整的字段权限控制，可以控制字段可见及 API 是否返回字段值</p></li><li><p style="margin-left:0; margin-right:0">可拖拽的表单设计。详情：<a href="https://gitee.com/link?target=http%3A%2F%2Fdoc.openauth.net.cn%2Fpro%2Fdragform.html">可拖拽表单</a></p></li><li><p style="margin-left:0; margin-right:0">可视化流程设计</p></li><li><p style="margin-left:0; margin-right:0">全网最好用的打印解决方案。详情:<a href="https://gitee.com/link?target=http%3A%2F%2Fdoc.openauth.net.cn%2Fpro%2Fprinterplan.html">智能打印</a></p></li><li><p style="margin-left:0; margin-right:0">基于 Quartz.Net 的定时任务控制,可随时启/停，可视化配置 Cron 表达式功能</p></li><li><p style="margin-left:0; margin-right:0">基于 CodeSmith 的代码生成功能，可快速生成带有头/明细结构的页面</p></li><li><p style="margin-left:0; margin-right:0">支持 sqlserver、mysql、Oracle、PostgreSql 数据库，理论上支持所有数据库</p></li><li><p style="margin-left:0; margin-right:0">集成 IdentityServer4，实现基于 OAuth2 的登录体系</p></li><li><p style="margin-left:0; margin-right:0">建立三方对接规范，已有系统可以无缝对接流程引擎</p></li><li><p style="margin-left:0; margin-right:0">前端采用 vue + layui + element-ui + ztree + gooflow + leipiformdesign</p></li><li><p style="margin-left:0; margin-right:0">后端采用 .net core +EF core+ autofac + quartz +IdentityServer4 + nunit + swagger</p></li><li><p style="margin-left:0; margin-right:0">设计工具 PowerDesigner + Enterprise Architect</p></li></ul><p><img height="891" src="https://oscimg.oschina.net/oscnet/up-16c8a0da97ec5fa55b1d908b3e53d70f117.png" width="1911" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Sat, 23 Dec 2023 12:26:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272343</guid>
            <link>https://www.oschina.net/news/272343</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[2023 基于 mybatis 的 orm：mybatis-mp 1.2.7 发布 - 超丰富的 api！]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">mybatis-mp 包含丰富的 api：</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">1：基于注解，映射数据库；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">2：支持多表 join 和返回；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">3：api 采用 lambda 和 stream 流式设计；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">4：内置分页以及超强的 sql 优化功能；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">5：稳定且性能极优；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">6：轻量级封装 mybatis，几乎没有侵入；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">7：api 丰富，支持数据库函数、多表、乐观锁、多租户、逻辑删除、默认值（可动态值） 等众多功能；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">8：零学习成本，和写 sql 一样方便。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">9：支持复杂的返回关系映射：例如一对一 ，一对多，多对多；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">10：内置代码生成器，通过配置，可定制自身规范；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">11：全新的框架，全新的设计理念，新的就是好！</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">mybatis-mp 1.2.7 更新：</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">1：<span style="background-color:#ffffff; color:#808080">select、orderby、groupby，having，and 等方法增加了*WithFun 等动态构建 sql 命令方法</span></p><p>2：<span style="background-color:#ffffff; color:#808080">增加 3 个模板类：普通模板 CmdTemplate ，函数模板 FunTemplate（后续可继续调用框架的函数），条件模板 ConditionTemplate（用于 where 中）</span></p><p><span style="background-color:#ffffff; color:#808080">3</span>：<span style="background-color:#ffffff; color:#808080">条件 eq、gt。。。等的参数顺序，更加规范...(基本不影响原有设定)</span></p></div>
                                    ]]>
            </description>
            <pubDate>Sat, 23 Dec 2023 12:05:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272340</guid>
            <link>https://www.oschina.net/news/272340</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[简单易用的 Open Ai Java SDK 2023.12.1 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><blockquote><p><span>推荐一套基于 SpringBoot 开发的简单、易用的开源权限管理平台，建议下载使用: <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdevlive-community%2Fauthx" target="_blank">https://github.com/devlive-community/authx</a></span></p></blockquote><blockquote><p><span>推荐一套功能强大的开源数据中台系统：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdevlive-community%2Fdatacap" target="_blank">https://github.com/devlive-community/datacap</a></span></p></blockquote><blockquote><p><span>推荐一套全平台数据库管理工具，建议下载使用: <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdevlive-community%2Fdbm" target="_blank">https://github.com/devlive-community/dbm</a></span></p></blockquote><p><span>OpenAI Java SDK 主要为 Java 开发人员提供方便易用的 SDK 来与开放 AI 模型的 API 进行交互依赖库。</span></p><table><tbody><tr><th>发布版本</th><th>发布时间</th></tr></tbody><tbody><tr><td><code>2023.12.1</code></td><td><code>2023-12-23</code></td></tr></tbody></table><h3><span>创建微调作业</span></h3><hr><p><span>创建一个作业，用于微调给定数据集中的指定模型。</span></p><pre><span><code>FineTuningEntity entity = FineTuningEntity.builder()
        .file(<span>"file-Rcxv6RrQXzTuJ2i2LY9kuChL"</span>)
        .build();
client.createFineTuningJob(entity);
</code></span></pre><h3>列出微调作业</h3><hr><p>列出组织的微调作业</p><pre><code>client.fineTuningJobs();
</code></pre><h3>列出微调事件</h3><hr><p>获取微调作业的状态更新。</p><pre><code>client.fineTuningJobEvents(<span>"ftjob-abc123"</span>);
</code></pre><h3>检索微调作业</h3><hr><p>获取有关微调作业的信息。</p><pre><code>client.retrieveFineTuningJob(<span>"ftjob-abc123"</span>);
</code></pre><h3>取消微调</h3><hr><p>立即取消微调作业。</p><pre><code>client.cancelFineTuningJob(<span>"ftjob-abc123"</span>);
</code></pre><h3>如何使用？</h3><hr><p>Maven</p><pre><code><span>&lt;<span>properties</span>&gt;</span><span>&lt;<span>openai.version</span>&gt;</span>2023.12.1<span>&lt;/<span>openai.version</span>&gt;</span><span>&lt;/<span>properties</span>&gt;</span><span>&lt;<span>dependencies</span>&gt;</span><span>&lt;<span>dependency</span>&gt;</span><span>&lt;<span>groupId</span>&gt;</span>org.devlive.sdk<span>&lt;/<span>groupId</span>&gt;</span><span>&lt;<span>artifactId</span>&gt;</span>openai-java-sdk<span>&lt;/<span>artifactId</span>&gt;</span><span>&lt;<span>version</span>&gt;</span>${openai.version}<span>&lt;/<span>version</span>&gt;</span><span>&lt;/<span>dependency</span>&gt;</span><span>&lt;/<span>dependencies</span>&gt;</span></code></pre><p>Gradle</p><pre><code>implementation group: <span>'org.devlive.sdk'</span>, name: <span>'openai-java-sdk'</span>, version: <span>'2023.12.1'</span></code></pre></div>
                                    ]]>
            </description>
            <pubDate>Sat, 23 Dec 2023 06:28:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272299</guid>
            <link>https://www.oschina.net/news/272299</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Golang 通用代码生成器仙童发布 2.4.0 电音仙女尝鲜版一及其介绍两个模式的视频]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>Golang 通用代码生成器仙童发布 2.4.0 电音仙女尝鲜版一及其介绍两个模式的视频</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">Golang 通用代码生成器仙童已发布 2.4.0 电音仙女尝鲜版一及其介绍视频。视频请见：</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">正常模式：</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1fw411V77i%2F" target="_blank">https://www.bilibili.com/video/BV1fw411V77i/</a></p><p>哑数据模式：</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1nu4y1K7sz%2F" target="_blank">https://www.bilibili.com/video/BV1nu4y1K7sz/</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">电音仙女版本支持日期和日期时间。支持三大部分生成功能群。支持枚举。支持哑数据模式。支持用户管理自己的资料和密码。技术状态和最新版的 Rust 通用代码生成器红莲的技术状态一致。非常便利大家的使用。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="background-color:#ffffff; color:#333333">代码生成器项目地址：</span><a href="https://gitee.com/jerryshensjf/Fairchild">https://gitee.com/jerryshensjf/Fairchild</a><br><span style="background-color:#ffffff; color:#333333">二进制发布包下载地址：</span><a href="https://gitee.com/jerryshensjf/Fairchild/attach_files">https://gitee.com/jerryshensjf/Fairchild/attach_files</a></p><h1>Go 语言通用代码生成器：仙童</h1><h3>简介</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Go 语言通用代码生成器：仙童</p><h3>百度话题</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">#通用代码生成器#</p><h3>版本更新</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Golang 通用代码生成器仙童已发布 2.4.0 电音仙女（TechnoFairy）尝鲜版一，支持日期和日期时间。支持三大部分生成功能群。支持枚举。支持哑数据模式。支持用户管理自己的资料和密码。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Go 语言通用代码生成器仙童 Beta 7 版。完善支持 Oracle 数据库，并有错误修正。可以从源码编译生成构建。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Go 语言通用代码生成器仙童 Beta6 版，发布最新介绍视频，支持从源码构建代码生成器。您只需下载源码，即可以 mvn install 编译构建 Go 语言通用代码生成器仙童。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Go 语言通用代码生成器：仙童 Beta5 版。彻底修复弹性登录模块，修复了注册，修改密码，管理员新增用户时使用过时加密算法问题。更多测试。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Go 语言通用代码生成器：仙童 Beta3 版。修复几处错误。包括登录权限问题和图形报表 UI 的语言问题。更多测试。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">GO 语言通用代码生成器仙童已发布 Beta2 版，支持 Rust 语言兼容性，即可以使用 Rust 通用代码生成器莲花的 SGS2 模板直接生成 Go 语言代码生成物。同时支持 Java 语言兼容性。即支持 Java 通用代码生成器的模板直接生成 Go 语言代码生成物。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">仙童 Beta 版，此版本修复了 Excelize 组件 API 变化引起的编译错误，另有文档更新和更多检查。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">仙童尝鲜版十二。支持 PDF 格式数据导出。在尝鲜版十一基础上有增强和修错。流畅支持模板向导代码生成。支持三大变形功能群，支持四种数据库。已完成所有功能规划，下一个版本即可进入 Beta 阶段。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版十一。在尝鲜版十基础上有增强和修错，并支持数据库表与字段的中文注释和兼容所有 java 通用代码生成器的 SGS2 模板，直接生成 go 语言后端和 Vue 前端，并自动格式化 java 语言 SGS2 模板至 go 语言模板。支持三大变形功能群，支持四种数据库，支持 Excel 数据导出。支持图形报表和复杂版面，支持弹性登录模块。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版十是第一个稳定版本。功能基本完备，所有示例通过检测，初步完整测试。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版九在尝鲜版八基础上有功能增强和缺陷修复。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版八初步支持 SimpleAuth 弹性登录界面。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版 7 是一个错误修复版本。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版 5 支持前端和后端的复杂版面和图形报表功能</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版 4 支持 Vue 和 ElementUI 的基于 Node.js 的独立前端。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版 3 进行了广泛的测试和修错。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版２新增对 Oracle 数据库的支持。</p><h3>架构</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">基于 Java 通用代码生成器：光的架构。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">生成的代码基于 go 语言，使用 gin 作为 web 框架。目前支持 MariaDB,MySQL,PostgreSQL 和 Oracle 四种数据库。支持生成 Vue 和 ElementUI 的基于 Node.js 的独立前端。支持 Excel,PDF 两种数据导出格式。</p><h3>开发测试环境</h3><ul><li>jdk 17</li><li>Apache Tomcat 9</li><li>Node.js 14</li><li>golang 1.19</li><li>MariaDB 15.1</li><li>MySQL 8</li><li>PostgreSQL 14</li><li>Oracle 11</li></ul><h3>B 站介绍视频</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Golang 通用代码生成器仙童 2.4.0 电音仙女尝鲜版一介绍视频请见：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1fw411V77i%2F">https://www.bilibili.com/video/BV1fw411V77i/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1nu4y1K7sz%2F">https://www.bilibili.com/video/BV1nu4y1K7sz/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Go 语言通用代码生成器仙童已发布 Beta7 版视频,请见：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1uM4y1774F%2F">https://www.bilibili.com/video/BV1uM4y1774F/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Go 语言通用代码生成器仙童 Beta6 版视频,请见：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1Jg4y1473X%2F">https://www.bilibili.com/video/BV1Jg4y1473X/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">​Go 语言通用代码生成器仙童已发布 Beta5 版，发布最新介绍视频，彻底修复弹性登录模块。修复了注册，修改密码，管理员新增用户时使用过时加密算法问题。更多测试。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">视频请见：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1xg4y1E7FA%2F">https://www.bilibili.com/video/BV1xg4y1E7FA/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">​Beta3 版，请见：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1g84y1n73B%2F">https://www.bilibili.com/video/BV1g84y1n73B/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Beta 版两个视频的合集，请见：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV13D4y1G7L4%2F">https://www.bilibili.com/video/BV13D4y1G7L4/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Beta2 版：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV13M411A7nH%2F">https://www.bilibili.com/video/BV13M411A7nH/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Beta 版：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV19j411T7wx%2F">https://www.bilibili.com/video/BV19j411T7wx/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版十二：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV14K411i7DM%2F">https://www.bilibili.com/video/BV14K411i7DM/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版十一：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1ce411P7qU%2F">https://www.bilibili.com/video/BV1ce411P7qU/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版九：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1a5411R7Zt%2F">https://www.bilibili.com/video/BV1a5411R7Zt/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1pR4y1w7aB%2F">https://www.bilibili.com/video/BV1pR4y1w7aB/</a></p><h3>项目图片</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="Image description" src="https://images.gitee.com/uploads/images/2021/1104/210826_16fb1ca2_1203742.jpeg" referrerpolicy="no-referrer"></p><h3>最新大版本号</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">正在研发的最新大版本号是仙童 2.4.0 电音仙女　TechnoFairy 短名 TF。对标 java 通用代码生成器光 2.4.0 电音之王和 Rust 通用代码生成器红莲。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="输入图片说明" src="https://gitee.com/jerryshensjf/Fairchild/raw/master/tf2.jpg" referrerpolicy="no-referrer"></p><h3>百度话题</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">＃通用代码生成器＃</p><h3>代码生成器截图</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">代码生成器正在研发中，Beta7 版已发布，这是一个稳定版本。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="Image description" src="https://images.gitee.com/uploads/images/2021/1112/202857_c7a40dc0_1203742.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="Image description" src="https://images.gitee.com/uploads/images/2021/1112/202911_c2b9a341_1203742.png" referrerpolicy="no-referrer"></p><h3>电音仙女尝鲜版一下载</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">下载地址：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/jerryshensjf/Fairchild/attach_files">https://gitee.com/jerryshensjf/Fairchild/attach_files</a></p><h3>仙童的安装运行</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">仙童是使用 Java 语言写成的代码生成器。运行仙童您需要装好 Java8 和安装好 Tomcat9 或 8.5 应用服务器。并把仙童的 war 包部署在 Tomcat 的 webapps 目录下。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">代码生成物的运行还需要安装好 Go 语言开发环境，您要使用 go mod 管理依赖，并把代码生成物解压在 go 语言工作空间的 src 文件夹的一级子目录下。还需要对应的数据库服务器运行代码生成物的建库 sql 脚本。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">前端代码生成物的运行需要装好 node.js 运行环境并安装 js 依赖库。</p><h3>Vue 独立前端截图</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="输入图片说明" src="https://gitee.com/jerryshensjf/Fairchild/raw/master/Fc_login.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="输入图片说明" src="https://gitee.com/jerryshensjf/Fairchild/raw/master/fc_list.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="输入图片说明" src="https://gitee.com/jerryshensjf/Fairchild/raw/master/fc_img.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="输入图片说明" src="https://gitee.com/jerryshensjf/Fairchild/raw/master/fc_mtm2.png" referrerpolicy="no-referrer"></p><h3>代码生成物截图</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="Image description" src="https://images.gitee.com/uploads/images/2021/1122/151921_f4271962_1203742.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="Image description" src="https://images.gitee.com/uploads/images/2021/1122/151935_cf6c7223_1203742.png" referrerpolicy="no-referrer"></p><h3>源码编译用户指南</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">通用代码生成器已经支持自己编译源码，我已把原来缺的前端代码生成器的 jar 包上传。支持大家自行编译源码。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">需要注意的是，现在我的开发平台是 Fedora 37 上的 openjdk 17。所以大家编译源码最好使用 openjdk17。编译好的 war 包运行在 apache tomcat 9.0 上。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">已有 jdk8 的用户报告默认下载的代码生成器 war 包在他的平台上无法运行。您如果遇到类似问题请报告。我的电子邮件是：<a href="https://www.oschina.net/action/GoToLink?url=mailto%3Ajerry_shen_sjf%40qq.com" target="_blank">jerry_shen_sjf@qq.com</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">附 openjdk 17 下载地址：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fjdk.java.net%2Fjava-se-ri%2F17">https://jdk.java.net/java-se-ri/17</a></p><h3>使用前端功能的注意事项</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">由于图片文件比较大，原来前端使用 cnpm instll 安装类型，npm run dev 运行有所改动，改为先使用 npm install --registry=<a href="https://gitee.com/link?target=https%3A%2F%2Fregistry.npm.taobao.org%25E5%25AE%2589%25E8%25A3%2585%25E7%25B1%25BB%25E5%25BA%2593%25EF%25BC%258C%25E5%2587%25BA%25E9%2594%2599%25E5%2590%258E%25E4%25BD%25BF%25E7%2594%25A8cnpm">https://registry.npm.taobao.org 安装类库，出错后使用 cnpm</a><span>&nbsp;</span>install 安装类库， 使用 node --max-http-header-size=1000000 ./node_modules/.bin/webpack-dev-server --inline --progress --config build/webpack.dev.conf.js　 运行系统。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">您也可以从安装好的本系列代码生成器的前端项目中拷贝 node_modules 目录，即可运行前端。</p><h4>node-sass 不兼容的解决办法</h4><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">办法一：</p><div><div><pre><span>npm uninstall node-sass</span><span>npm install sass-loader</span><span>npm i node-sass --sass_binary_site=https://npm.taobao.org/mirrors/node-sass/</span></pre><div>
   &nbsp;
  </div></div></div><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">办法二：</p><div><div><pre><span>npm uninstall sass-loader node-sass //卸载</span><span>npm install sass-loader@7.3.1 node-sass@4.14.1 --save-dev //安装对应的版本</span></pre><div>
   &nbsp;
  </div></div></div><h3>动词算子式代码生成器的应用场景</h3><ol><li>快速原型：项目或演示场景使用。可以生成具有关系型数据库后端，使用 MyBatis 的数据库后端和 Vue 和 ElementUI 前端。</li><li>项目前期：如果项目和动词算子式代码生成器兼容，可以使用动词算子式代码生成器执行项目前期的自动化生成。</li></ol><h3>源码研读者注意事项</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">无垠式代码生成器第一个完整版本源码，有兴趣可以抄写一下：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/jerryshensjf/InfinityGPGenerator_0_6_5">https://gitee.com/jerryshensjf/InfinityGPGenerator_0_6_5</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">相关技术视频：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1fX4y1u7Bn%2F">https://www.bilibili.com/video/BV1fX4y1u7Bn/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1rv41187qY%2F">https://www.bilibili.com/video/BV1rv41187qY/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1xv41187cA%2F">https://www.bilibili.com/video/BV1xv41187cA/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1t64y1v7WA%2F">https://www.bilibili.com/video/BV1t64y1v7WA/</a></p></div>
                                    ]]>
            </description>
            <pubDate>Sat, 23 Dec 2023 04:15:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272284</guid>
            <link>https://www.oschina.net/news/272284</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[企业微信 Java 开发包 WECOM-SDK 1.2.5 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#363c42; text-align:start"><span><a href="https://gitee.com/felord/wecom-sdk"><span><strong><span>WECOM-SDK</span></strong></span></a></span><span> 是开源的企业微信开放 API 的 Java SDK，是目前最完整的 Java 实现。目前已经实现了企业微信通讯录管理、客户管理、上下游、微信客服、素材管理、消息推送、企微机器人、身份验证、应用管理、汇报、收集表、考勤等相关接口，开发人员不需要很高的学习成本就能快速优雅地接入企业微信。</span></p><p style="color:#363c42; text-align:start"><span>具体更新细节参见</span><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ffelord.cn%2Fwecom%2Fchangelog.html%231-2-x" target="_blank"><span>更新说明</span></a></span><span>。</span></p><p style="color:#363c42; text-align:start"><span><strong><span>仓库地址</span></strong></span></p><p style="color:#363c42; text-align:start"><span>gitee: </span><span><a href="https://gitee.com/felord/wecom-sdk"><span><strong><span>https://gitee.com/felord/wecom-sdk</span></strong></span></a></span></p><p style="color:#363c42; text-align:start"><span>github: </span><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNotFound403%2Fwecom-sdk" target="_blank"><span><strong><span>https://github.com/NotFound403/wecom-sdk</span></strong></span></a></span></p><p style="color:#363c42; text-align:start"><span><strong><span>开发文档</span></strong></span></p><p style="color:#363c42; text-align:start"><span>文档：</span><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ffelord.cn%2Fwecom%2Foverview.html" target="_blank"><span>https://felord.cn/wecom/overview.html</span></a></span></p><p style="color:#363c42; text-align:start"><span><strong><span>特性</span></strong></span></p><ul><li><p style="color:var(--text-color); margin-left:.5rem; margin-right:0"><span>支持多企业微信同时配置作业</span></p></li><li><p style="color:var(--text-color); margin-left:.5rem; margin-right:0"><span>支持响应式，高性能</span></p></li><li><p style="color:var(--text-color); margin-left:.5rem; margin-right:0"><span>集成方便，适用于各种 Java 生态</span></p></li><li><p style="color:var(--text-color); margin-left:.5rem; margin-right:0"><span>学习成本低</span></p></li><li><p style="color:var(--text-color); margin-left:.5rem; margin-right:0"><span>目前实现企业微信接口</span><span><strong><span>200</span></strong></span><span>多个，能满足大部分企业微信业务场景的需求</span></p></li><li><p style="color:var(--text-color); margin-left:.5rem; margin-right:0"><span>全参数封装，入参、出参高度语义化封装，再也不担心组织参数、解析参数的问题</span></p></li><li><p style="color:var(--text-color); margin-left:.5rem; margin-right:0"><span>实现统一回调，所有回调事件可集中异步处理，开发者只需要关心业务逻辑的开发</span></p></li><li><p style="color:var(--text-color); margin-left:.5rem; margin-right:0"><span>由 SDK 接管 AccessToken 生命周期，开发者无需关心 AccessToken 的管理。</span></p></li></ul><p style="color:#363c42; text-align:start"><span><strong><span>Maven 中央仓库座标</span></strong></span></p><ul><li><p style="color:var(--text-color); margin-left:.5rem; margin-right:0"><span>普通版本</span></p></li></ul><pre><span><span style="color:#80cbc4">&lt;</span><span style="color:#80cbc4">dependency</span><span style="color:#80cbc4">&gt;</span></span><span> &nbsp;<span style="color:#80cbc4">&lt;</span><span style="color:#80cbc4">groupId</span><span style="color:#80cbc4">&gt;</span>cn.felord<span style="color:#80cbc4">&lt;/</span><span style="color:#80cbc4">groupId</span><span style="color:#80cbc4">&gt;</span></span><span> &nbsp;<span style="color:#80cbc4">&lt;</span><span style="color:#80cbc4">artifactId</span><span style="color:#80cbc4">&gt;</span>wecom-sdk<span style="color:#80cbc4">&lt;/</span><span style="color:#80cbc4">artifactId</span><span style="color:#80cbc4">&gt;</span></span><span> &nbsp;<span style="color:#80cbc4">&lt;</span><span style="color:#80cbc4">version</span><span style="color:#80cbc4">&gt;</span>1.2.5<span style="color:#80cbc4">&lt;/</span><span style="color:#80cbc4">version</span><span style="color:#80cbc4">&gt;</span></span><span><span style="color:#80cbc4">&lt;/</span><span style="color:#80cbc4">dependency</span><span style="color:#80cbc4">&gt;</span></span></pre><ul><li><p style="color:var(--text-color); margin-left:.5rem; margin-right:0"><span>响应式版本</span></p></li></ul><pre><span><span style="color:#80cbc4">&lt;</span><span style="color:#80cbc4">dependency</span><span style="color:#80cbc4">&gt;</span></span><span> &nbsp;<span style="color:#80cbc4">&lt;</span><span style="color:#80cbc4">groupId</span><span style="color:#80cbc4">&gt;</span>cn.felord<span style="color:#80cbc4">&lt;/</span><span style="color:#80cbc4">groupId</span><span style="color:#80cbc4">&gt;</span></span><span> &nbsp;<span style="color:#80cbc4">&lt;</span><span style="color:#80cbc4">artifactId</span><span style="color:#80cbc4">&gt;</span>rx-wecom-sdk<span style="color:#80cbc4">&lt;/</span><span style="color:#80cbc4">artifactId</span><span style="color:#80cbc4">&gt;</span></span><span> &nbsp;<span style="color:#80cbc4">&lt;</span><span style="color:#80cbc4">version</span><span style="color:#80cbc4">&gt;</span>1.2.5<span style="color:#80cbc4">&lt;/</span><span style="color:#80cbc4">version</span><span style="color:#80cbc4">&gt;</span></span><span><span style="color:#80cbc4">&lt;/</span><span style="color:#80cbc4">dependency</span><span style="color:#80cbc4">&gt;</span></span></pre><p style="color:#363c42; text-align:start"><span><strong><span>采用技术栈</span></strong></span></p><ul><li><p style="color:var(--text-color); margin-left:.5rem; margin-right:0"><span>Retrofit2</span></p></li><li><p style="color:var(--text-color); margin-left:.5rem; margin-right:0"><span>Rxjava3</span></p></li><li><p style="color:var(--text-color); margin-left:.5rem; margin-right:0"><span>Okhttp4</span></p></li><li><p style="color:var(--text-color); margin-left:.5rem; margin-right:0"><span>Jackson2</span></p></li><li><p style="color:var(--text-color); margin-left:.5rem; margin-right:0"><span>XStream</span></p></li></ul><p style="color:#363c42; text-align:start"><span><strong><span>🚀1.2.5 更新</span></strong></span></p><ul><li><p style="color:var(--text-color); margin-left:.5rem; margin-right:0"><span>企业微信基础应用 NativeAgent 部分 Agentid 标记为过时以适应企业微信新的</span><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.work.weixin.qq.com%2Fcommunity%2Fannouncement%2Fdetail%3Fcontent_id%3D16530832268018849698" target="_blank"><span>安全策略</span></a></span></p></li><li><p style="color:var(--text-color); margin-left:.5rem; margin-right:0"><span>审批时长控件参数优化</span></p></li><li><p style="color:var(--text-color); margin-left:.5rem; margin-right:0"><span>日期格式化采用 ISO8601 风格</span></p></li><li><p style="color:var(--text-color); margin-left:.5rem; margin-right:0"><span>回调优化</span></p></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Sat, 23 Dec 2023 00:58:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272265</guid>
            <link>https://www.oschina.net/news/272265</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[墨干理工套件 V1.2.1 发布了]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h2>已知问题</h2><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">墨干 V1.2.1 和墨干 V1.1.6 可以同时安装，这个版本仍旧有如以下问题。下一个版本 V1.2.2 将在 2024/01/31 前发布。</p><ul><li>默认的搜索替换没有问题，使用结构化的搜索或者替换窗口时容易崩溃</li><li>默认缓冲区管理没有问题，切换到<code>编辑-&gt;首选项-&gt;通用-&gt;缓冲区管理-&gt;Documents in separate windows</code>容易崩溃</li></ul><h2>重要变更</h2><ul><li>修复 v1.2.0 引入的<code>文件-&gt;导出-&gt;LaTeX</code>失败的问题</li><li>修复 v1.2.0 引入的点击<code>编辑-&gt;快捷键-&gt;快捷键编辑器</code>崩溃的问题</li><li>修复 v1.2.0 引入的 Windows 安装包没有创建快捷方式和开始菜单快捷方式的问题</li><li>修复 v1.2.0 引入的 Linux 安装包内没有 Desktop 文件的问题</li><li>重新开始提供 UOS 安装包（支持 amd64 和 loongarch64）</li><li>性能：通过优化字体加载改善初次启动的性能</li><li>用户界面：将一级菜单所有菜单项都翻译为中文，并改善若干菜单项的中文翻译</li><li>用户界面：<code>文件-&gt;打开</code>默认目录调整为家目录</li><li>用户界面：在 Windows 平台，窗口最大化，重启之后，窗口仍旧最大化，不会偏移</li><li>用户界面：在 macOS 平台，切换到 Qt 实现的文件浏览器，避免间歇性出现无法打开文件的问题</li><li>用户界面：在焦点工具栏为中文文档添加宋体/黑体/仿宋/楷体四种字体的切换快捷方式</li><li>样式：修复了更改样式后，由于缓存没有被清除，样式修改不生效的问题</li><li>快捷键：将 Deepin 和 KDE 桌面的快捷键风格调整为 kde 风格，并调整若干和系统快捷键冲突的快捷键</li><li>版本控制：修复若干 Git 版本控制相关的功能</li><li>稳定性：修复若干崩溃或者卡死的错误</li></ul></div>
                                    ]]>
            </description>
            <pubDate>Fri, 22 Dec 2023 15:44:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272252/mogan-1-2-1-released</guid>
            <link>https://www.oschina.net/news/272252/mogan-1-2-1-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[🎉🎉 wmproxy 0.2.2 发布，支持内网穿透中内网代理的实现]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h1>0.2.2 内网穿透优化</h1><ul><li>HTTP 转发</li><li>HTTPS 转发 (证书在服务器,内网为 HTTP)</li><li>TCP 转发 (纯粹的 TCP 转发，保持原样的协议)</li><li>PROXY 转发 (服务端接收数据，内网的客户端当成 PROXY 客户端，相当于逆向访问内网服务器，<strong><span style="color:red">[新增]</span></strong>)</li></ul><h1>wmproxy</h1><p><code>wmproxy</code>已用<code>Rust</code>实现<code>http/https</code>代理, <code>socks5</code>代理, 反向代理, 负载均衡, 静态文件服务器，四层 TCP/UDP 转发，内网穿透，后续将实现<code>websocket</code>代理等，会将实现过程分享出来，感兴趣的可以一起造个轮子</p><h2>📦 安装 &amp; 🏃 使用</h2><h3>安装</h3><pre><span>cargo <span>install </span>wmproxy</span></pre><p>OR</p><pre><span>git clone https://github.com/tickbh/wmproxy</span><span><span>cd </span>wmproxy</span><span>cargo <span>install</span><span>--path</span><span>.</span></span></pre><pre><span>docker pull dreamwhat/wmproxy</span><span>docker run -p 82:82 -p 8090:8090 -p 127.0.0.1:8837:8837 --name proxy_bash dreamwhat/wmproxy /bin/./wmproxy -b -b 0.0.0.0:8090</span></pre><h3>使用</h3><p>默认端口为 8090 端口，默认监听地址为 127.0.0.1</p><pre><span><span># 直接通用默认参数</span></span><span>wmproxy</span><span><span># 设置账号密码</span></span><span>wmproxy <span>-b</span> 0.0.0.0:8090 <span>--user</span> wmproxy <span>--pass</span> wmproxy</span><span><span># 其它指令</span></span><span>wmproxy <span>--help</span></span><span><span>#配置文件版启动</span></span><span>wmproxy <span>-c</span> config/client.toml</span></pre><p>启动二级代理</p><ol><li>在本地启动代理</li></ol><pre><span>wmproxy <span>-b</span> 127.0.0.1 <span>-p</span> 8090 <span>-S</span> 127.0.0.1:8091 <span>--ts</span></span></pre><p>或者</p><pre><span>wmproxy <span>-c</span> config/client.toml</span></pre><p>配置文件如下:</p><pre><span><span>[proxy]</span></span><span><span># 连接服务端地址</span></span><span><span>#server = "127.0.0.1:8091"</span></span><span><span>bind_addr</span><span>=</span><span>"0.0.0.0:8090"</span></span><span><span>flag</span><span>=</span><span>"http https socks5"</span></span><span><span># 连接服务端是否加密</span></span><span><span>ts</span><span>=</span><span>true</span></span><span><span>two_way_tls</span><span>=</span><span>true</span></span><span><span># username = "wmproxy"</span></span><span><span># password = "wmproxy"</span></span><span><span># 内网映射配置的数组</span></span><span><span>#将 localhost 的域名转发到本地的 127.0.0.1:8080</span></span><span><span>[[proxy.mappings]]</span></span><span><span>name</span><span>=</span><span>"web"</span></span><span><span>mode</span><span>=</span><span>"http"</span></span><span><span>local_addr</span><span>=</span><span>"127.0.0.1:8080"</span></span><span><span>domain</span><span>=</span><span>"localhost"</span></span><span><span>headers</span><span>=</span><span>[</span></span><span><span>"proxy x-forward-for {client_ip}"</span><span>,</span></span><span><span>"proxy + from $url"</span><span>,</span></span><span><span>"+ last-modified 'from proxy'"</span><span>,</span></span><span><span>"- etag"</span><span>,</span></span><span><span>]</span></span><span><span>#将 tcp 的流量无条件转到 127.0.0.1:8080</span></span><span><span>[[proxy.mappings]]</span></span><span><span>name</span><span>=</span><span>"tcp"</span></span><span><span>mode</span><span>=</span><span>"tcp"</span></span><span><span>local_addr</span><span>=</span><span>"127.0.0.1:8080"</span></span><span><span>domain</span><span>=</span><span>""</span></span></pre><p>因为纯转发，所以在当前节点设置账号密码没有意义<code>-S</code>表示连接到的二级代理地址，<strong>有该参数则表示是中转代理，否则是末端代理。</strong><code>--ts</code>表示连接父级代理的时候需要用加密的方式链接</p><ol><li>在远程启动代理</li></ol><pre><span>wmproxy <span>--user</span> proxy <span>--pass</span> proxy <span>-b</span> 0.0.0.0:8091 <span>--tc</span></span></pre><p>或者</p><pre><span>wmproxy <span>-c</span> config/server.toml</span></pre><p>配置文件如下:</p><pre><span><span>[proxy]</span></span><span><span>#绑定的 ip 地址</span></span><span><span>bind_addr</span><span>=</span><span>"127.0.0.1:8091"</span></span><span><span>#代理支持的功能，1 为 http，2 为 https，4 为 socks5</span></span><span><span># flag = "7"</span></span><span><span>username</span><span>=</span><span>"wmproxy"</span></span><span><span>password</span><span>=</span><span>"wmproxy"</span></span><span><span>#内网映射 http 绑定地址</span></span><span><span>map_http_bind</span><span>=</span><span>"127.0.0.1:8001"</span></span><span><span>#内网映射 tcp 绑定地址</span></span><span><span>map_tcp_bind</span><span>=</span><span>"127.0.0.1:8002"</span></span><span><span>#内网映射 https 绑定地址</span></span><span><span>map_https_bind</span><span>=</span><span>"127.0.0.1:8003"</span></span><span><span>#内网映射的公钥证书，为空则是默认证书</span></span><span><span># map_cert = </span></span><span><span>#内网映射的私钥证书，为空则是默认证书</span></span><span><span># map_key =</span></span><span><span># 双向认证</span></span><span><span>two_way_tls</span><span>=</span><span>true</span></span><span><span>#接收客户端是为是加密客户端</span></span><span><span>tc</span><span>=</span><span>true</span></span><span><span>#当前服务模式，server 为服务端，client 为客户端</span></span><span><span>mode</span><span>=</span><span>"server"</span></span></pre><p><code>--tc</code>表示接收子级代理的时候需要用加密的方式链接，可以<code>--cert</code>指定证书的公钥，<code>--key</code>指定证书的私钥，<code>--domain</code>指定证书的域名，如果不指定，则默认用自带的证书参数</p><blockquote>
 至此通过代理访问的，我们已经没有办法得到真正的请求地址，只能得到代理发起的请求
</blockquote><h3>代理间的认证</h3><blockquote>
 目前提供了两种认证双式, 
 <code>two_way_tls</code>开启客户端的证书认证信息, 另一种服务端配置了
 <code>username</code>和
 <code>password</code>即需要客户端配置相同的用户密码才能启用认证信息, 两种方式可叠加使用或者单独使用。 配置添加如下:
</blockquote><pre><span><span>proxy</span><span>:</span></span><span><span>two_way_tls</span><span>:</span><span>true</span></span><span><span>username</span><span>:</span><span>wmproxy</span></span><span><span>password</span><span>:</span><span>wmproxy</span></span></pre><h1>🚥 路线图</h1><h3>socks5</h3><ul><li>IPV6 支持</li><li><code>SOCKS5</code> 验证方式 
  <ul><li><code>NOAUTH</code></li><li><code>USERPASS</code></li></ul></li><li><code>SOCKS5</code> Commands 
  <ul><li><code>CONNECT</code></li><li><code>UDP ASSOCIATE</code></li></ul></li></ul><h3>http/https</h3><ul><li>IPV6 支持</li></ul><h3>内网穿透</h3><ul><li>Http 支持</li><li>Https 支持</li><li>Tcp 支持</li></ul><h3>反向代理</h3><ul><li>静态文件服务器</li><li>被动健康检查</li><li>主动健康检查</li><li>配置热加载</li><li>负载均衡</li><li>四层 TCP 负载</li><li>四层 UDP 负载</li><li>流量控制</li></ul><h3>基础能力</h3><ul><li>日志</li></ul><h4>扩展能力</h4><ul><li>请求限速 (limit_req)</li><li>修改 HTTP 请求 Header</li><li>支持 HTTP2 的内网穿透</li><li>控制微端</li><li>try_files</li></ul></div>
                                    ]]>
            </description>
            <pubDate>Fri, 22 Dec 2023 09:06:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272197/wmproxy-0-2-2-released</guid>
            <link>https://www.oschina.net/news/272197/wmproxy-0-2-2-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[企业级快速开发框架 nbsaas-boot 1.1.4-2023 发布了]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div><div><pre><code><span><span><span><span>&lt;</span></span></span><span><span><span><span><span><span><span>parent</span></span></span></span></span></span></span><span><span><span>&gt;</span></span></span></span><span><span><span><span>&lt;</span></span></span><span><span><span><span><span><span><span>groupId</span></span></span></span></span></span></span><span><span><span>&gt;</span></span></span></span>com.nbsaas.boot<span><span><span><span>&lt;/</span></span></span><span><span><span><span><span><span><span>groupId</span></span></span></span></span></span></span><span><span><span>&gt;</span></span></span></span><span><span><span><span>&lt;</span></span></span><span><span><span><span><span><span><span>artifactId</span></span></span></span></span></span></span><span><span><span>&gt;</span></span></span></span>nbsaas-boot<span><span><span><span>&lt;/</span></span></span><span><span><span><span><span><span><span>artifactId</span></span></span></span></span></span></span><span><span><span>&gt;</span></span></span></span><span><span><span><span>&lt;</span></span></span><span><span><span><span><span><span><span>version</span></span></span></span></span></span></span><span><span><span>&gt;</span></span></span></span>1.1.4-2023<span><span><span><span>&lt;/</span></span></span><span><span><span><span><span><span><span>version</span></span></span></span></span></span></span><span><span><span>&gt;</span></span></span></span><span><span><span><span>&lt;/</span></span></span><span><span><span><span><span><span><span>parent</span></span></span></span></span></span></span><span><span><span>&gt;</span></span></span></span></code></pre><p><img alt="" src="https://foruda.gitee.com/images/1692714554881768744/cdda40bc_1029.png" referrerpolicy="no-referrer"></p><p><strong>本次更新内容</strong></p><p>1. 增加@Dict@DictItem 注解，方便字典类型数据显示</p><p>2. DataRequest 对象重构成 Request 对象，SearchRequest 对象重构成 Search 对象</p><p>3. 修改代码生成模块 Request 对象，SearchRequest 对象相关模块</p><p>4. 增加 PageExtResponse 对象，方便列表数据增加其他属性。</p><p>5. 增加 NeStrategy，支持 ne 查询。</p><p>6. 调整 FilterGroup 等类型，这样兼容 dubbo3</p><p><strong>nbsaas-boot 具有以下特点：</strong></p><p>自动建表：nbsaas-boot 提供了自动建表功能，根据用户定义的数据模型自动生成数据库表结构，减少手动操作，提高开发效率。</p><p>开发规范：nbsaas-boot 提供一套开发规范，包括代码风格、命名规范、注释规范等，使团队开发更加规范化和高效化。</p><p>代码生成器：nbsaas-boot 提供代码生成器，根据数据模型自动生成前端和后端代码，提高开发效率和代码质量。</p><p>多租户支持：nbsaas-boot 支持多租户，为不同客户提供独立的数据存储空间和访问权限，保证数据安全性和隔离性</p><p><strong>通过 Command 处理复杂的业务</strong></p><pre><code>InputRequestObject context = <span><span><span><span><span>new</span></span></span></span></span> InputRequestObject();
context.setConfig(config);
context.setFormBean(formBean);

 

    <span><span><span><span><span>new</span></span></span></span></span> DomainCommand()
        .after(<span><span><span><span><span>new</span></span></span></span></span> ApiCommand())
        .after(<span><span><span><span><span>new</span></span></span></span></span> ConvertCommand())
        .after(<span><span><span><span><span>new</span></span></span></span></span> ControllerFrontCommand())
        .after(<span><span><span><span><span>new</span></span></span></span></span> RestCommand())
        .after(<span><span><span><span><span>new</span></span></span></span></span> ExtApiCommand())
        .after(<span><span><span><span><span>new</span></span></span></span></span> RepositoryCommand())
        .after(<span><span><span><span><span>new</span></span></span></span></span> FieldCommand())
        .after(<span><span><span><span><span>new</span></span></span></span></span> FinishCommand()).execute(context);</code></pre><p><strong>模型构建</strong></p><pre><code><span><span><span><span><span>@CatalogClass</span></span></span></span></span><span><span><span><span><span>@FormAnnotation</span></span></span></span></span>(title = <span><span><span><span><span>"组织架构管理"</span></span></span></span></span>, model = <span><span><span><span><span>"组织架构"</span></span></span></span></span>, menu = <span><span><span><span><span>"1,27,88"</span></span></span></span></span>)
<span><span><span><span><span>@Data</span></span></span></span></span><span><span><span><span><span>@Entity</span></span></span></span></span><span><span><span><span><span>@Table</span></span></span></span></span>(name = <span><span><span><span><span>"sys_structure"</span></span></span></span></span>)
public class Structure extends CatalogEntity {

    <span><span><span><span><span>@FormField</span></span></span></span></span>(title = <span><span><span><span><span>"父分类名称"</span></span></span></span></span>)
    <span><span><span><span><span>@Comment</span></span></span></span></span>(<span><span><span><span><span>"父分 id"</span></span></span></span></span>)
    <span><span><span><span><span>@FieldName</span></span></span></span></span><span><span><span><span><span>@FieldConvert</span></span></span></span></span>(classType = <span><span><span><span><span>"Integer"</span></span></span></span></span>)
    <span><span><span><span><span>@ManyToOne</span></span></span></span></span>(fetch = FetchType.LAZY)
    private Structure parent;

    <span><span><span><span><span>@OneToMany</span></span></span></span></span>(fetch = FetchType.LAZY, mappedBy = <span><span><span><span><span>"parent"</span></span></span></span></span>)
    private List&lt;Structure&gt; children;

}</code></pre><p>搜索模型</p><pre><code class="language-java">@Data
public class ArticleSearch extends PageRequest implements Serializable {

    /**
     * 主键 id  ==查询
     **/
    @Search(name = "id", operator = Operator.eq)
    private Long id;

    /**
     * 文章标题，模糊查询
     **/
    @Search(name = "title", operator = Operator.like)
    private String title;


}</code></pre><p>通过模型数据提取，然后通过代码生成器生成后端代码 + vue3 后端管理代码</p><p>基础功能项目 https://gitee.com/cng1985/nbsaas-boot-starter<br> 项目脚手架 https://gitee.com/cng1985/nbsaas-admin<br> vue3 后台管理脚手架 https://gitee.com/cng1985/nbsaas-admin-vue3</p></div></div></div>
                                    ]]>
            </description>
            <pubDate>Fri, 22 Dec 2023 08:23:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272190</guid>
            <link>https://www.oschina.net/news/272190</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Seata 2.x 首个版本正式发布，支持 Raft 集群模式]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#ff6a00; margin-left:0; margin-right:0"><em><span style="color:#f2622e"><strong>用户登记</strong></span></em></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span>欢迎已使用用户在此链接登记，便于我们更好的针对业务场景优化：</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><em><u>https://github.com/apache/incubator-seata/issues/1246</u></em></p><p>&nbsp;</p><p style="color:#ff6a00; margin-left:0; margin-right:0"><em><span style="color:#f2622e"><strong>2.x&nbsp;Roadmap</strong></span></em></p><p><img height="378" src="https://oscimg.oschina.net/oscnet/up-66d251b337b1405fbb759449c4a6b86bedc.png" width="1172" referrerpolicy="no-referrer"></p><p style="color:#ff6a00; margin-left:0; margin-right:0"><em><span style="color:#f2622e"><strong>发布概览</strong></span></em></p><p><span>2.0.0 中对大家期待已久的 Raft 集群模式做了支持，Raft 集群模式消除了对第三方注册中心和 Seata-Server 后端存储的依赖，让运维变得更简单可靠性变得更高。除此之外，AT 模式支持 SQLServer、达梦和 PolarDB-X 2.0 数据库；对事务模式的 API 完成了统一；支持事务二阶段并行大幅度提升事务的性能；支持 IPV6。共通过了 110 多组 jdk（8，11，17，21）+ Spring 各版本 + OS（x86，arm64）+ druid &nbsp;主要版本的交叉兼容测试，可放心平滑升级。</span></p><p><span>此次 release &nbsp;共修改文件数：930，累计提交代码&nbsp;&nbsp;+56171 −6549，合并 PR 182 个，共 47 人参与代码 commit。</span></p><p><u><em><u>https://github.com/<span>apache/incubator-seata</span>/pull/6067</u></em></u></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><strong><span>2.0.0 milestone：</span></strong></p><p><span>https://github.com/apache/incubator-seata/milestone/21</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><strong><span>seata-server：&nbsp;</span></strong></p><p><span>https://github.com/apache/incubator-seata/releases/download/v2.0.0/seata-server-2.0.0.tar.gz</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><strong><span>docker image：</span></strong></p><p><span>https://hub.docker.com/repository/docker/seataio/seata-server</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><strong><span>部署指南：</span></strong></p><p><span>https://<span>seata.apache.org</span>/zh-cn/docs/ops/deploy-server-raft</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><strong><span>升级指南：</span></strong></p><p><span>https://<span>seata.apache.org</span>/zh-cn/docs/ops/upgrade</span></p><p><span>与低版本可平滑兼容。&nbsp;</span></p><p>&nbsp;</p><p style="color:#ff6a00; margin-left:0; margin-right:0"><em><span style="color:#f2622e"><strong>版本的主要更新如下</strong></span></em></p><h3><u><em><strong><u>feature:</u></strong></em></u></h3><ul><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5226] 支持 Raft 集群模式</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5165] 统一多种事务模式的 API</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5352] 在 TCC Business Action Context 中集成 jackson 和 gson 序列化功能</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5377] 支持 http PUT 请求</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5396] TC 异常日志指标采集</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5118] 支持二阶段并行下发执行</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5529] docker 镜像支持注入 JVM 参数到容器</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#3887] 增加 AT 模式的 SQLServer 数据库支持</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#4033] 增加 ServerDB 存储模式的 SQLServer 支持</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5600] skywalking 插件支持根据 XID 追踪事务</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5357] seata console 集成 saga 设计器</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5717] 兼容 1.4.2 及以下版本的 file.conf/registry.conf 配置</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5842] 构建 docker 镜像时添加相关 git 信息,方便定位代码关系</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5902] 支持 IPv6 网络环境</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5907] 增加 AT 模式的 PolarDB-X 2.0 数据库支持</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5932] AT 模式支持达梦数据库</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5946] 增加 sqlserver 对控制枱分页接口的适配</span></p><p style="margin-left:0; margin-right:0; text-align:left">&nbsp;</p></li></ul><h3><u><em><strong><u>bugfix:</u></strong></em></u></h3><ul><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5677] 修复 saga 模式下 serviceTask 入参 autoType 转化失败问题</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5277] 修复控制枱全局锁查询接口查到了已释放的锁</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5282] 修复并行 rm 请求处理时数组索引越界问题</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5294] 修复 AT 模式下 pgsql/oracle 的主键列自增的问题</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5298] 事务提交或回滚超时不移除 global session</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5304] 移除基于文件存储恢复时的 RollbackRetryTimeout 事务</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5310] 修复生成 update 前后镜像 sql 不对关键字转义的 bug</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5318] 修复 jdk8 中 G1 参数</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5330] 修复单元测试中发现的 bug</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5337] 修复 feature#5165 中关于 spring 使用环境下，多 interceptor 排序问题，同时修复 order 一致时无法使用 BeforeTransaction(AfterTransaction) 事务排序问题</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5347] 修复控制枱打印&nbsp;unauthorized error&nbsp;问题</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5355] 修复自定义 context-path 时的问题</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5362] 修复当 TC 端回滚返回 RollbackFailed 时，自定义 FailureHandler 的方法未执行</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5373] 修复客户侧事务提交前超时未执行 hook 和 failureHandler 的问题</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5395] 修复 AT 模式下新增字段产生的字段找不到</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5426] 修复不能获取 GlobalTransactional 注解问题</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5464] 修复 saga 模式全局事务状态始终为 Begin 的问题</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5478] 修复提交事务时事务已完成不抛出异常问题</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5490] 修复日志中不打印方法名的问题</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5449] 修复 Oracle XA 模式 start 重入问题</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5462] 在 RM 中使用@GlobalTransactional 时,如果 RM 执行失败会抛出 ShouldNeverHappenException</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5498] 修复 Oracle 10g 中「setDate」条件的全表扫描问题</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5531] 修复读取 logback 文件路径错误的问题</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5523] 修复 GlobalStatus=9 在 DB 存储模式无法清除的问题</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5558] 修复 mariadb 回滚失败的问题</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5556] 修复 oracle 插入 undolog 失败问题</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5579] 修复 resourceId 为空时，获取 RM_CHANNELS 空指针问题</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5577] 修复 grpc 拦截器解绑 xid 失败问题</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5594] 修复 participant 情况下的重复日志</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5604] 修复在 DB 模式下&nbsp;asyncCommit&nbsp;和&nbsp;queueToRetryCommit&nbsp;两个方法总是失败的问题</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5658] 修复大写和小写列名称的转义字符</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5661] 修复 connectionProxyXA 连接复用时 timeout 为 null</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5679] 修复 xxx.grouplist 和 grouplist.xxx 配置项兼容问题</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5715] 修复取中划线配置项错误问题</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5748] 修复在某些情况下，业务 sql 中主键字段名大小写与表元数据中的不一致，导致回滚失败</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5745] 修复不满足 sofa-rpc 中 setAttachment 方法的参数前缀要求问题</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5772] 修复 TableMetaCache 的一些字段类型，避免溢出</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5787] 解决 redis 作为注册中心时 cluster 无法自定义的 BUG</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5810] 修复 druid 依赖冲突导致的 XA 事务开始异常与回滚失败</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5821] 修复 insert executor 对关键字未转义的问题</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5835] bugfix: 修复当 XA 事务失败回滚后，TC 还会继续重试回滚的问题</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5881] 修复事务回滚时锁未删除的问题</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5930] 修复存储为 redis 哨兵模式下哨兵密码缺失的问题</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5958] 在二阶段提交状态下发生重选时需要进行解除全局锁</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5971] 修复某些未弃用的配置显示"已弃用"</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5977] 修复当 raft server 关闭时,rpc server 未关闭的问题</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5954] 修复保存的分支会话状态与实际的分支会话状态不一致的问题</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5990] 修复 redis sentinel master node 宕机时，lua 脚本未同步的问题</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5997] 修复全局事务钩子重复执行</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#6018] 修复错误的 metric 上报</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#6024] 修复控制枱点击事务信息页面中的"查看全局锁"按钮之后白屏的问题</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#6015] 修复在 spring 环境下无法集成 dubbo</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#6049] 修复客户端在 raft 注册中心类型下，网络中断时，watch 线程未暂停一秒等待重试的问题</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#6050] 修改 RaftServer#destroy 为等待所有关闭流程结束</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#6033] 修复 HSFRemotingParser 中 isReference 判断逻辑，去掉关于 FactoryBean 的无用判断</span></p></li></ul><h3><u><em><strong><u>optimize:</u></strong></em></u></h3><ul><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5966] Saga 表达式解耦并统一格式</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5928] 增加 Saga 模式状态机语义验证阶段</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#4858] 重构优化 SessionManager 用法</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#4881] 重新划分 SessionManager 和 SessionLifecycleListener 用法</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5273] 优化 protobuf-maven-plugin 插件的编译配置，解决高版本的命令行过长问题</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5278] 清理 sessionmanager 多例模式遗留代码</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5302] 移除启动脚本的-Xmn 参数</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#4880] 优化提交和回滚遇到异常时的日志输出</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5322] 优化 SPI 加载日志</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5326] 为全局事务超时日志添加时间信息</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5328] 为全局事务和事务存储的 Redis 模式，增加对应的 lua 实现</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5341] 优化 gRPC TCC 模式</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5342] 优化 TCC fence log 清理定时任务的 delay 参数值检查</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5344] 添加配置中心、注册中心类型以及存储模式日志信息</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5351] 优化 TCC 模式下的 RPC filter</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5354] 重构 RPC 集成模块</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5370] 优化事务失败处理 handler</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5431] 优化 github 工作流</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5461] 优化 license workflow</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5456] 重构 ColumnUtils 和 EscapeHandler</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5438] 优化 code style 检测属性</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5471] 优化客户侧事务日志</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5485] 优化 Server 日志输出</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#4907] 调整二阶段 result 线程池大小及优化代码</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5487] 将 branchsession 中的 lockholder 增加 final 修饰</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5519] 优化 Oracle FenceHandler</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5501] 支持乐观锁方式更新事务状态</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5419] 优化镜像发布流水线支持 jdk8/17 和支持 maven 3.9.0</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5549] 优化 gpg key 和，发布流水线</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5576] 仅当 useTCCFence 设置为 true 时，才开启 Fence 表清理任务</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5623] 优化异步提交线程和重试线程之间可能存在的冲突</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5563] 优化 channel 通道可用性日志输出</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5553] 支持表和列元数据大小写敏感设置</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5644] 优化 Server 日志输出</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5680] 优化大小写转义符</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5686] 优化 license check actions</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5714] 优化分布式锁竞争日志</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5723] 优化 docker 镜像的默认时区</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5779] 删除无用的输出日志并统一日志输出路径</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5802] 优化 server 端事务隔离级别为读已提交</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5783] 支持 nacos 上 application name 配置</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5524] 支持 seata-server.sh 中的更多操作命令</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5836] 分离 mariadb 和 mysql 的 AT 实现</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5869] 优化一些小的语法</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5885] 优化 ConnectionProxyXA 中的日志</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5894] 移除无 license 组件</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5895] 移除 7z 压缩支持</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5896] 移除 mariadb.jdbc 依赖</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5384] 统一版本号管理，只需维护 build/pom.xml 中的版本号即可。</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5419] 发布基于多个 java 版本的 docker 镜像</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5829] 修正&nbsp;codecov chart&nbsp;不展示的问题</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5878] 优化&nbsp;httpcore&nbsp;和&nbsp;httpclient&nbsp;的依赖定义</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5917] 升级 native-lib-loader 版本</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5926] 优化一些与 Apollo 相关的脚本</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5938] 支持 jmx 监控配置</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5944] 修复构建操作警告</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5951] 删除在 jdk17 中不支持的配置项</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5959] 修正代码风格问题及去除无用的类引用</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#6002] 移除 fst 序列化模块</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#6045] 优化 MySQL 衍生数据库判断逻辑</span></p></li></ul><h3><u><em><strong><u>security:</u></strong></em></u></h3><ul><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5642] 增加 Hessian 序列化黑白名单</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5694] 修复若干 Node.js 依赖安全漏洞</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5801] 修复 Java 依赖安全漏洞</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5805] 修复序列化漏洞</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5868] 修复 npm package 漏洞</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5916] 修复 npm package 漏洞</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5942] 升级依赖版本</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5987] 升级依赖版本</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#6013] 升级 seata-server 依赖的 spring 版本</span></p></li></ul><h3><u><em><strong><u>test:</u></strong></em></u></h3><ul><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5308] 添加单元测试用例&nbsp;[FileLoader, ObjectHolder, StringUtils]</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5309] 添加单元测试用例&nbsp;[ArrayUtils, ConfigTools, MapUtil]</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5335] 添加单元测试用例&nbsp;[EnhancedServiceLoader,ExtensionDefinition,SizeUtilTest,ReflectionUtil,LowerCaseLinkHashMap,FileLoader,ObjectHolder]</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5367] 修复 UpdateExecutorTest 单测失败问题</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5383] 修复多 Spring 版本测试失败</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5391] 添加 config 模块的单元测试用例</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5428] 修复 FileTransactionStoreManagerTest 单测失败问题</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5622] 添加单元测试用例&nbsp;[ExporterType, RegistryType]</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5637] 添加单元测试用例&nbsp;[BatchResultMessage, HeartbeatMessage, RegisterRMResponse, ResultCode, RegisterTMResponse, MergeResultMessage, MergedWarpMessage, Version]</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5893] 移除 sofa 测试用例</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5845] 升级 druid 版本，并添加 test-druid.yml 用于测试 seata 与 druid 各版本的兼容性。</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5863] 修复单元测试在 Java21 下无法正常运行的问题。</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5986] 修复 zookeeper 单测失败问题</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5995] 添加 RaftClusterMetadataMsg 模块的单元测试用例</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#6001] 添加 RaftMsgExecute 模块 branch 包下的单元测试用例</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#5996] 添加 RaftMsgExecute 模块 global 包下的单元测试用例</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#6003] 添加 RaftMsgExecute 模块 lock 包下的单元测试用例</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#6005] 修复 saga 异步测试未定义的行为</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#6009] 添加 RaftServerFactory 的单元测试用例</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>[#6052] UT 升级 springboot 和服务器的 spring 版本</span></p></li></ul><p style="margin-left:0; margin-right:0; text-align:left">&nbsp;</p><p><span>英文版参考：</span><u><em>https://github.com/seata/seata/releases/tag/v2.0.0</em></u></p><p style="color:#ff6a00; margin-left:0; margin-right:0"><em><span style="color:#f2622e"><strong>致谢</strong></span></em></p><p style="color:#ff6a00; margin-left:0; margin-right:0"><span>非常感谢以下 contributors 的代码贡献。若有无意遗漏，请报告。</span></p><ul><li><p><span>slievrly</span></p></li><li><p><span>xssdpgy</span></p></li><li><p><span>albumenj</span></p></li><li><p><span>PeppaO</span></p></li><li><p><span>yuruixin</span></p></li><li><p><span>CrazyLionLi</span></p></li><li><p><span>xingfudeshi</span></p></li><li><p><span>Bughue</span></p></li><li><p><span>pengten</span></p></li><li><p><span>wangliang181230</span></p></li><li><p><span>GoodBoyCoder</span></p></li><li><p><span>funky-eyes</span></p></li><li><p><span>isharpever</span></p></li><li><p><span>mxsm</span></p></li><li><p><span>liuqiufeng</span></p></li><li><p><span>l81893521</span></p></li><li><p><span>dmego</span></p></li><li><p><span>zsp419</span></p></li><li><p><span>tuwenlin</span></p></li><li><p><span>sixlei</span></p></li><li><p><span>yixia</span></p></li><li><p><span>capthua</span></p></li><li><p><span>robynron</span></p></li><li><p><span>XQDD</span></p></li><li><p><span>Weelerer</span></p></li><li><p><span>Ifdevil</span></p></li><li><p><span>iquanzhan</span></p></li><li><p><span>leizhiyuan</span></p></li><li><p><span>Aruato</span></p></li><li><p><span>ggbocoder</span></p></li><li><p><span>ptyin</span></p></li><li><p><span>jsbxyyx</span></p></li><li><p><span>xxxcrel</span></p></li><li><p><span>fengzhenhai168</span></p></li><li><p><span>tobehardest</span></p></li><li><p><span>leezongjie</span></p></li></ul><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span>同时，我们收到了社区反馈的很多有价值的 issue 和建议，非常感谢大家。</span></p><p style="color:#ff6a00; margin-left:0; margin-right:0"><em><span style="color:#f2622e"><strong>社区讨论群</strong></span></em></p><p><img height="470" src="https://oscimg.oschina.net/oscnet/up-496ee420619f8b08ad1b6dcb452b3bb80a1.png" width="1388" referrerpolicy="no-referrer"></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:center">&nbsp;</p><p style="color:#ff6a00; margin-left:0; margin-right:0"><em><span style="color:#f2622e"><strong>常用链接</strong></span></em></p><p><span>Seata:&nbsp;https://github.com/apache/incubator-seata</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:left"><span>Samples:&nbsp;https://github.com/<span>apache</span>/<span>incubator-seata</span>-samples</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:left"><span>Release:&nbsp;https://github.com/<span>apache</span>/<span>incubator-seata</span>/releases</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:left"><span>官网：https://seata.apache.org/</span></p><p style="color:#ff6a00; margin-left:0; margin-right:0">&nbsp;</p><p style="color:#ff6a00; margin-left:0; margin-right:0"><em><span style="color:#f2622e"><strong>开发者招募</strong></span></em></p><p><span>如果您对 Seata 的前后端开发、测试和文档感兴趣，请您邮件联系：</span><u><em>slievrly@gmail.com</em></u></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 22 Dec 2023 08:19:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272189</guid>
            <link>https://www.oschina.net/news/272189</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[RuoYi-Cloud-Plus 发布 2.1.2 版本 2023 最后一版]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><img height="176" src="https://oscimg.oschina.net/oscnet/up-cb5d367b69556287ffb09178d55431c8af7.png" width="1165" referrerpolicy="no-referrer"></p><hr><h1><span>更新日志</span></h1><h3><span>依赖升级</span></h3><ul><li><p>update springboot 3.1.5 =&gt; 3.1.7</p></li><li><p>update springboot 2.7.17 =&gt; 2.7.18(扩展服务升级到 boot2 最终版本)</p></li><li><p>update mybatis-boot 3.0.2 =&gt; 3.0.3 优化依赖传递</p></li><li><p>update powerjob 4.3.3 =&gt; 4.3.6</p></li><li><p>update easyexcel 3.3.2 =&gt; 3.3.3</p></li><li><p>update transmittable-thread-local 2.14.2 =&gt; 2.14.4</p></li><li><p>update justauth 1.16.5 =&gt; 1.16.6</p></li><li><p>update redisson 3.24.1 =&gt; 3.24.3 修复订阅重启连接超时问题</p></li><li><p>update easy-es 1.1.1 =&gt; 2.0.0-beta4</p></li></ul><h3><span>功能更新</span></h3><ul><li><p>update 优化 oss 远程调用，支持降级处理</p></li><li><p>update 优化，丰富 RedisUtils 对 List Set 类型的操作</p></li><li><p>update 优化，为 admin 模块，单独增加 ratelimiter 模块</p></li><li><p>update 优化，验证码接口，增加限流配置</p></li><li><p>update 优化 excel 合并注解会根据第一合并列的结果来决定后续的列合并 (感谢 Simple)</p></li><li><p>update 优化 SocialUtils 代码</p></li><li><p>update 优化，删除无用异常类</p></li><li><p>update 优化，补全三方登录校验国际化</p></li><li><p>update 优化 sms 组件，预留自动配置类</p></li><li><p>update 更新，关于数据库的说明</p></li><li><p>update 优化 sms 组件，预留自动配置类</p></li><li><p>update 优化，将 OSS 配置，改为全局模式，降低使用难度，保留 sql 便于用户自行扩展 (常规项目用不上配置分多租户)</p></li><li><p>update 优化，细化 oss 配置管理权限控制</p></li><li><p>update 优化，开启 redisson 脚本缓存，减少网络传输</p></li><li><p>update 优化，删除 hikaricp 官方不推荐使用的配置 jdbc4 协议自带校验方法</p></li><li><p>update 优化，减少 PlusSaTokenDao 不必要的查询优化性能</p></li><li><p>update 优化，更新用户异常提示，使用登录账号</p></li><li><p>update 优化，使用登录用户判断是否登录，提高效率</p></li><li><p>update 优化，重构 LoginHelper 将本地存储代码操作封装</p></li><li><p>update 优化 getTenantId 判断是否开启多租户</p></li><li><p>update 优化 Dockerfile 使用 shell 模式，支持环境变量传入 jvm 参数</p></li><li><p>update 优化 WebSocketUtils 连接关闭改为警告</p></li><li><p>update 优化 excel 多 sheet 页导出 (感谢 May)</p></li><li><p>update 优化，删除无用接口实现</p></li><li><p>update 优化 jvm 参数调整，全面启用 zgc</p></li><li><p>update 优化，使用动态租户重构业务对租户的逻辑</p></li><li><p>update 优化 TenantHelper 动态租户支持函数式方法</p></li><li><p>update 优化，支持多租户绑定相同的三方登录</p></li><li><p>update 优化，更新用户登录信息方法忽略数据权限</p></li><li><p>update 优化，补全三方绑定时间字段，删除无用 excel 注解</p></li><li><p>update 优化，将登录记录抽取到监听器统一处理</p></li><li><p>update 优化，登录消息推送异常拦截 (未启动 resource 也不耽误用)</p></li><li><p>update 优化，租户插件 ignoreTable 方法支持动态租户</p></li></ul><h3><span>新增功能</span></h3><ul><li><p>add 新增 RedisUtils.setObjectIfExists 如果存在则设置方法</p></li><li><p>add 新增，丰富 RedisUtils 对 List Set 类型的操作</p></li><li><p>add 新增，翻译组件，用户暱称翻译实现</p></li><li><p>add 新增，响应加密功能，支持注解强制加密接口数据 (感谢 MichelleChung)</p></li><li><p>add 新增 common-ratelimiter 限流模块，用于自定义业务限流，与 sentinel 不冲突</p></li></ul><h3><span>问题修复</span></h3><ul><li><p>fix 修复 stream-mq 测试服务未导入租户模块，导致鉴权不一致问题</p></li><li><p>fix 修复，使用 zgc 导致 seata 报错 (未知原因，将 alibaba 组件全还原)</p></li><li><p>fix 修复 sentinel 镜像添加了多余接口参数</p></li><li><p>fix 修复，注册接口获取开关未在租户范围内问题</p></li><li><p>fix 修复 seata-server logback 版本冲突问题</p></li><li><p>fix 修复 selectDictTypeByType 查询方法错误问题</p></li><li><p>fix 修复，一些不正常类无法加载报错问题</p></li><li><p>fix 修复 powerjob sql 脚本针对其他数据库转义符问题 (感谢 branches)</p></li><li><p>fix 修复 MybatisSystemException 空指针问题</p></li><li><p>fix 修复 excel 合并注解会根据第一合并列的结果来决定后续的列合并</p></li><li><p>fix 修复 session 多账号共用覆盖问题，改为 tokenSession 独立存储</p></li><li><p>fix 修复 token 失效后，登录获取用户 null 问题</p></li><li><p>fix 修复 powerjob 部署方案，高版本 nginx 不生效问题</p></li><li><p>fix 修复 OssFactory 并发多创建实例问题</p></li><li><p>fix 修复，延迟队列在投递消息未到达时间的时候，服务死机导致重启收不到消息</p></li></ul><h3><span>前端改动</span></h3><ul><li><p>update 优化，用户头像 img 变量无确定类型问题</p></li><li><p>update 优化，细化 oss 配置管理权限控制</p></li><li><p>update 优化，明确打包命令</p></li><li><p>update 优化，代码中存在的警告</p></li><li><p>update 优化，前端白名单页面放行逻辑</p></li><li><p>update 优化，页面关于权限标识符说明</p></li><li><p>fix 修复 append-to-body 编写错误 (感谢 Ai3_刘小龙)</p></li><li><p>fix 关闭动态路由 tab 页签时不清理组件缓存 (感谢 NickLuo)</p></li><li><p>fix 删除重复环境变量 ElUploadInstance (感谢，棉花)</p></li><li><p>fix 修复，在线用户，强推按钮点击取消控制枱警告问题</p></li><li><p>fix 修复，字典使用 default 样式报警告问题</p></li></ul><h2><span>平台简介</span></h2><blockquote><p style="color:black; margin-left:0; margin-right:0">RuoYi-Cloud-Plus <code>微服务通用权限管理系统</code> 重写 RuoYi-Cloud 全方位升级 (不兼容原框架)</p></blockquote><blockquote><p style="color:black; margin-left:0; margin-right:0">项目代码、文档，均开源免费可商用，遵循开源协议在项目中保留开源协议文件即可<br> 活到老写到老，为兴趣而开源，为学习而开源，为让大家真正可以学到技术而开源</p></blockquote><blockquote><p style="color:black; margin-left:0; margin-right:0">系统演示: https://plus-doc.dromara.org/#/common/demo_system</p></blockquote><blockquote><p style="color:black; margin-left:0; margin-right:0">前端项目地址: https://gitee.com/JavaLionLi/plus-ui</p></blockquote><blockquote><p style="color:black; margin-left:0; margin-right:0">文档地址: https://plus-doc.dromara.org</p></blockquote><h1><span>本框架与 RuoYi 的功能差异</span></h1><table style="display:table; text-align:left"><tbody><tr><th style="background-color:#f0f0f0; text-align:left">功能</th><th style="background-color:#f0f0f0; text-align:left">本框架</th><th style="background-color:#f0f0f0; text-align:left">RuoYi</th></tr></tbody><tbody><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">前端项目</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">基于 vue3-element-admin 开源项目重写<br> Vue3 + TS + ElementPlus</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">基于 Vue2/Vue3 + JS</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">后端项目结构</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用插件化 + 扩展包形式，结构解耦，易于扩展</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">模块相互注入耦合严重难以扩展</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">后端代码风格</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">严格遵守 Alibaba 规范与项目统一配置的代码格式化</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">代码书写与常规结构不同阅读障碍大</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">分布式注册中心</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用 Alibaba Nacos 源码集成便于调试扩展与二次开发，框架还为其增加了各种监控</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用 Alibaba Nacos 自行搭建纯官方版本不可靠</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">分布式配置中心</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用 Alibaba Nacos 源码集成便于调试扩展与二次开发，框架还为其增加了各种监控</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用 Alibaba Nacos 自行搭建纯官方版本不可靠</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">服务网关</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用 SpringCloud Gateway 框架扩展了多种功能<br> 例如:内网鉴权、请求体缓存、跨域配置、请求响应日志等</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用 SpringCloud Gateway 功能单一</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">负载均衡</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用 SpringCloud Loadbalancer 扩展支持了开发团队路由，便于多团队开发调试</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用 SpringCloud Loadbalancer 功能单一</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">RPC 远程调用</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用，全新 Apache Dubbo 3.X 历史悠远不用多说</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用 feign 功能有限编写方式，网络波动大，不稳定</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">分布式限流熔断</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用 Alibaba Sentinel 源码集成便于调试扩展与二次开发，框架还为其增加了各种监控</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用 Alibaba Sentinel 自行搭建纯官方版本不可靠</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">分布式事务</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用 Alibaba Seata 源码集成对接了 Nacos 与各种监控，简化了搭建部署流程</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用 Alibaba Seata 自行搭建纯官方版本，搭建繁琐与 Nacos 不挂钩，代码内使用方式怪异等</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">Web 容器</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用 Undertow 基于 XNIO 的高性能容器</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用 Tomcat</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">权限认证</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用 Sa-Token、Jwt 静态使用功能齐全，低耦合，高扩展</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">Spring Security 配置繁琐扩展性极差</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">权限注解</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用 Sa-Token 支持注解，登录校验、角色校验、权限校验、二级认证校验、HttpBasic 校验、忽略校验<br> 角色与权限校验支持多种条件，如 <code>AND</code><code>OR</code> 或 <code>权限 OR 角色</code> 等复杂表达式</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">只支持是否存在匹配</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">关系数据库支持</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">原生支持 MySQL、Oracle、PostgreSQL、SQLServer<br> 可同时使用异构切换</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">支持 Mysql、Oracle 不支持同时使用、不支持异构切换</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">缓存数据库</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">支持 Redis 5-7 支持大部分新功能特性，如 分布式限流、分布式队列</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">Redis 简单 get set 支持</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">Redis 客户端</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用 Redisson Redis 官方推荐，基于 Netty 的客户端工具<br> 支持 Redis 90% 以上的命令，底层优化规避很多不正确的用法，例如: keys 被转换为 scan<br> 支持单机、哨兵、单主集群、多主集群等模式</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">Lettuce + RedisTemplate 支持模式少，工具使用繁琐<br> 连接池采用 common-pool Bug 多经常性出问题</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">缓存注解</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用 Spring-Cache 注解，对其扩展了实现支持了更多功能<br> 例如，过期时间，最大空闲时间，组最大长度等，只需一个注解即可完成数据自动缓存</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">需手动编写 Redis 代码逻辑</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">ORM 框架</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用 Mybatis-Plus 基于对象几乎不用写 SQL 全 java 操作，功能强大插件众多<br> 例如多租户插件，分页插件，乐观锁插件等等</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用 Mybatis 基于 XML 需要手写 SQL</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">SQL 监控</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用 p6spy 可输出完整 SQL 与执行时间监控</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">log 输出，需手动拼接 sql 与参数无法快速查看调试问题</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">数据分页</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用 Mybatis-Plus 分页插件<br> 框架对其进行了扩展，对象化分页对象，支持多种方式传参，支持前端多排序，复杂排序</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用 PageHelper 仅支持单查询分页，参数只能从 param 传，只能单排序，功能扩展性差，体验不好</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">数据权限</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用 Mybatis-Plus 插件，自行分析拼接 SQL 无感式过滤<br> 只需为 Mapper 设置好注解条件，支持多种自定义，不限于部门角色</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用，注解+aop 实现，基于部门角色，生成的 sql 兼容性差，不支持其他业务扩展<br> 生成 sql 后需手动拼接到具体业务 sql 上，对于多个 Mapper 查询不起作用</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">数据脱敏</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用，注解 + jackson 序列化期间脱敏，支持不同模块不同的脱敏条件<br> 支持多种策略，如身份证、手机号、地址、邮箱、银行卡等，可自行扩展</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">无</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">数据加解密</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用，注解 + mybatis 拦截器，对存取数据期间自动加解密<br> 支持多种策略，如 BASE64、AES、RSA、SM2、SM4 等</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">无</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">数据翻译</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用，注解 + jackson 序列化期间动态修改数据，数据进行翻译<br> 支持多种模式: <code>映射翻译</code><code>直接翻译</code><code>其他扩展条件翻译</code> 接口化两步即可完成自定义扩展，内置多种翻译实现</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">无</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">多数据源框架</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用 dynamic-datasource 支持世面大部分数据库<br> 通过 yml 配置即可动态管理异构不同种类的数据库，也可通过前端页面添加数据源<br> 支持 spel 表达式从请求头参数等条件切换数据源</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">基于 druid 手动编写代码配置数据源，配置繁琐，支持性差</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">多数据源事务</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用 dynamic-datasource 支持多数据源不同种类的数据库事务回滚</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">不支持</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">数据库连接池</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用 HikariCP Spring 官方内置连接池，配置简单，以性能与稳定性闻名天下</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用 druid bug 众多，社区维护差，活跃度低，配置众多繁琐性能一般</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">数据库主键</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用，雪花 ID 基于时间戳的，有序增长，唯一 ID 再也不用为分库分表，数据合并主键冲突重复而发愁</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用，数据库自增 ID 支持数据量有限，不支持多数据源主键唯一</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">WebSocket 协议</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">基于 Spring 封装的 WebSocket 协议，扩展了 Token 鉴权与分布式会话同步，不再只是基於单机的废物</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">无</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">序列化</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用 Jackson Spring 官方内置序列化，靠谱!!!</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用 fastjson bugjson 远近闻名</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">分布式幂等</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">参考美团 GTIS 防重系统简化实现 (细节可看文档)</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">手动编写注解基于 aop 实现</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">分布式任务调度</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用 PowerJob 天生支持分布式，统一的管理中心，底层基于 JPA 实现，支持多种数据库</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用 Quartz 基于数据库锁性能差，集群需要做很多配置与改造</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">分布式日志中心</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用 ELK 业界成熟解决方案，实时收集所有服务的运行日志，快速发现定位问题</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">无</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">分布式搜索引擎</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用 ElasticSearch、Easy-Es 以 Mybatis-Plus 方式操作 ElasticSearch</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">无</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">分布式消息队列</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用 SpringCloud-Stream 支持 Kafka、RocketMQ、RabbitMQ</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">无</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">分库分表功能</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用 Apache Sharding-Proxy 代理服务无入侵支持分库分表，只需编写分库分表规则即可</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">无</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">文件存储</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用 Minio 分布式文件存储，天生支持多机、多硬盘、多分片、多副本存储<br> 支持权限管理，安全可靠，文件可加密存储</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用，本机文件存储，文件裸漏，易丢失泄漏，不支持集群有单点效应</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">云存储</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用 AWS S3 协议客户端，支持，七牛、阿里、腾讯，等一切支持 S3 协议的厂家</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">不支持</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">短信</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">支持，阿里、腾讯，只需在 yml 配置好厂家密钥即可使用，接口化支持扩展其他厂家</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">不支持</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">邮件</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用 mail-api 通用协议支持大部分邮件厂商</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">不支持</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">接口文档</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用 SpringDoc、javadoc 无注解零入侵基于 java 注释<br> 只需把注释写好，无需再写一大堆的文档注解了</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用 Springfox 已停止维护，需要编写大量的注解来支持文档生成</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">校验框架</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用 Validation 支持注解与工具类校验，注解支持国际化</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">仅支持注解，且注解不支持国际化</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">Excel 框架</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用 Alibaba EasyExcel 基于插件化<br> 框架对其增加了很多功能，例如，自动合并相同内容，自动排列布局，字典翻译等</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">基于 POI 手写实现，功能有限，复杂，扩展性差</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">工具类框架</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用 Hutool、Lombok 上百种工具覆盖 90% 的使用需求，基于注解自动生成 get set 等简化框架大量代码</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">手写工具稳定性差易出问题，工具数量有限，代码臃肿需自己手写 get set 等</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">服务监控框架</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用 SpringBoot-Admin 基于 SpringBoot 官方 actuator 探针机制<br> 实时监控服务状态，框架还为其扩展了在线日志查看监控</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">无</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">全方位监控报警</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用 Prometheus、Grafana 多样化采集，多模板大屏展示，实时报警监控，提供详细的搭建文档</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">无</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">链路追踪</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用 Apache SkyWalking 还在为请求不知道去哪了，到哪出了问题而烦恼吗<br> 用了它即可实时查看请求经过的每一处每一个节点</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">无</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">代码生成器</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">只需设计好表结构，一键生成所有 crud 代码与页面<br> 降低 80% 的开发量，把精力都投入到业务设计上<br> 框架为其适配 MP、SpringDoc 规范化代码，同时支持动态多数据源代码生成</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">代码生成原生结构，只支持单数据源生成</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">部署方式</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">支持 Docker 编排，一键搭建所有环境，让开发人员从此不再为搭建环境而烦恼</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">原生 jar 部署，其他环境需手动下载安装，自行搭建</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">项目路径修改</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">提供详细的修改方案文档，并为其做了一些改动，非常简单即可修改成自己想要的</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">需要做很多改造，文档说明有限</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">国际化</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">基于请求头动态返回不同语种的文本内容，开发难度低，有对应的工具类，支持大部分注解内容国际化</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">只提供基础功能，其他需自行编写扩展</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">代码单例测试</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">提供单例测试，使用方式编写方法与 maven 多环境单测插件</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">只提供基础功能，其他需自行编写扩展</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">Demo 案例</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">提供框架功能的实际使用案例，单独一个模块提供了很多很全</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">无</td></tr></tbody></table><h2><span>本框架与 RuoYi 的业务差异</span></h2><table style="display:table; text-align:left"><tbody><tr><th style="background-color:#f0f0f0; text-align:left">业务</th><th style="background-color:#f0f0f0; text-align:left">功能说明</th><th style="background-color:#f0f0f0; text-align:left">本框架</th><th style="background-color:#f0f0f0; text-align:left">RuoYi</th></tr></tbody><tbody><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">租户管理</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">系统内租户的管理，如:租户套餐、过期时间、用户数量、企业信息等</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">支持</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">无</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">租户套餐管理</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">系统内租户所能使用的套餐管理，如:套餐内所包含的菜单等</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">支持</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">无</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">用户管理</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">用户的管理配置，如:新增用户、分配用户所属部门、角色、岗位等</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">支持</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">支持</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">部门管理</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">配置系统组织机构（公司、部门、小组） 树结构展现支持数据权限</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">支持</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">支持</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">岗位管理</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">配置系统用户所属担任职务</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">支持</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">支持</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">菜单管理</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">配置系统菜单、操作权限、按钮权限标识等</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">支持</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">支持</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">角色管理</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">角色菜单权限分配、设置角色按机构进行数据范围权限划分</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">支持</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">支持</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">字典管理</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">对系统中经常使用的一些较为固定的数据进行维护</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">支持</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">支持</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">参数管理</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">对系统动态配置常用参数</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">支持</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">支持</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">通知公告</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">系统通知公告信息发布维护</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">支持</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">支持</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">操作日志</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">系统正常操作日志记录和查询，系统异常信息日志记录和查询</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">支持</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">支持</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">登录日志</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">系统登录日志记录查询包含登录异常</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">支持</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">支持</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">文件管理</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">系统文件展示、上传、下载、删除等管理</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">支持</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">无</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">文件配置管理</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">系统文件上传、下载所需要的配置信息动态添加、修改、删除等管理</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">支持</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">无</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">在线用户管理</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">已登录系统的在线用户信息监控与强制踢出操作</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">支持</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">支持</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">定时任务</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">运行报表、任务管理 (添加、修改、删除)、日志管理、执行器管理等</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">支持</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">仅支持任务与日志管理</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">代码生成</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">多数据源前后端代码的生成（java、html、xml、sql）支持 CRUD 下载</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">支持</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">仅支持单数据源</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">系统接口</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">根据业务代码自动生成相关的 api 接口文档</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">支持</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">支持</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">服务监控</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">监视集群系统 CPU、内存、磁盘、堆栈、在线日志、Spring 相关配置等</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">支持</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">仅支持单机 CPU、内存、磁盘监控</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">缓存监控</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">对系统的缓存信息查询，命令统计等。</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">支持</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">支持</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">在线构建器</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">拖动表单元素生成相应的 HTML 代码。</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">支持</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">支持</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">使用案例</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">系统的一些功能案例</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">支持</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">不支持</td></tr></tbody></table></div>
                                    ]]>
            </description>
            <pubDate>Fri, 22 Dec 2023 06:36:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272161</guid>
            <link>https://www.oschina.net/news/272161</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[RuoYi-Vue-Plus 发布 5.1.2 版本 2023 最后一版]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><img height="176" src="https://oscimg.oschina.net/oscnet/up-64aa0f03cadc9e0490cd82fa9b8113c6a49.png" width="1050" referrerpolicy="no-referrer"></p><hr><h1><span>更新日志</span></h1><h3><span>依赖升级</span></h3><ul><li><p>update springboot 3.1.5 =&gt; 3.1.7</p></li><li><p>update mybatis-boot 3.0.2 =&gt; 3.0.3 优化依赖传递</p></li><li><p>update powerjob 4.3.3 =&gt; 4.3.6</p></li><li><p>update easyexcel 3.3.2 =&gt; 3.3.3</p></li><li><p>update transmittable-thread-local 2.14.2 =&gt; 2.14.4</p></li><li><p>update justauth 1.16.5 =&gt; 1.16.6</p></li><li><p>update redisson 3.24.1 =&gt; 3.24.3 修复订阅重启连接超时问题</p></li></ul><h3><span>功能更新</span></h3><ul><li><p>update 优化，为 admin 模块，单独增加 ratelimiter 模块</p></li><li><p>update 优化，验证码接口，增加限流配置</p></li><li><p>update 优化 excel 合并注解会根据第一合并列的结果来决定后续的列合并 (感谢 Simple)</p></li><li><p>update 优化 SocialUtils 代码</p></li><li><p>update 优化，删除无用异常类</p></li><li><p>update 优化，补全三方登录校验国际化</p></li><li><p>update 优化 sms 组件，预留自动配置类</p></li><li><p>update 更新，关于数据库的说明</p></li><li><p>update 优化 sms 组件，预留自动配置类</p></li><li><p>update 优化，将 OSS 配置，改为全局模式，降低使用难度，保留 sql 便于用户自行扩展 (常规项目用不上配置分多租户)</p></li><li><p>update 优化，细化 oss 配置管理权限控制</p></li><li><p>update 优化，开启 redisson 脚本缓存，减少网络传输</p></li><li><p>update 优化，删除 hikaricp 官方不推荐使用的配置 jdbc4 协议自带校验方法</p></li><li><p>update 优化，减少 PlusSaTokenDao 不必要的查询优化性能</p></li><li><p>update 优化，更新用户异常提示，使用登录账号</p></li><li><p>update 优化，使用登录用户判断是否登录，提高效率</p></li><li><p>update 优化，重构 LoginHelper 将本地存储代码操作封装</p></li><li><p>update 优化 getTenantId 判断是否开启多租户</p></li><li><p>update 优化 Dockerfile 使用 shell 模式，支持环境变量传入 jvm 参数</p></li><li><p>update 优化 WebSocketUtils 连接关闭改为警告</p></li><li><p>update 优化 excel 多 sheet 页导出 (感谢 May)</p></li><li><p>update 优化，删除无用接口实现</p></li><li><p>update 优化 jvm 参数调整，全面启用 zgc</p></li><li><p>update 优化，使用动态租户重构业务对租户的逻辑</p></li><li><p>update 优化 TenantHelper 动态租户支持函数式方法</p></li><li><p>update 优化，支持多租户绑定相同的三方登录</p></li><li><p>update 优化，更新用户登录信息方法忽略数据权限</p></li><li><p>update 优化，补全三方绑定时间字段，删除无用 excel 注解</p></li><li><p>update 优化，将登录记录抽取到监听器统一处理</p></li><li><p>update 优化，租户插件 ignoreTable 方法支持动态租户</p></li></ul><h3><span>新增功能</span></h3><ul><li><p>add 新增 RedisUtils.setObjectIfExists 如果存在则设置方法</p></li><li><p>add 新增，丰富 RedisUtils 对 List Set 类型的操作</p></li><li><p>add 新增，翻译组件，用户暱称翻译实现</p></li><li><p>add 新增，响应加密功能，支持注解强制加密接口数据 (感谢 MichelleChung)</p></li></ul><h3><span>问题修复</span></h3><ul><li><p>fix 修复 selectDictTypeByType 查询方法错误问题</p></li><li><p>fix 修复，一些不正常类无法加载报错问题</p></li><li><p>fix 修复 powerjob sql 脚本针对其他数据库转义符问题 (感谢 branches)</p></li><li><p>fix 修复 MybatisSystemException 空指针问题</p></li><li><p>fix 修复 excel 合并注解会根据第一合并列的结果来决定后续的列合并</p></li><li><p>fix 修复 session 多账号共用覆盖问题，改为 tokenSession 独立存储</p></li><li><p>fix 修复 token 失效后，登录获取用户 null 问题</p></li><li><p>fix 修复 powerjob 部署方案，高版本 nginx 不生效问题</p></li><li><p>fix 修复 OssFactory 并发多创建实例问题</p></li><li><p>fix 修复，延迟队列在投递消息未到达时间的时候，服务死机导致重启收不到消息</p></li></ul><h3><span>前端改动</span></h3><ul><li><p>update 优化，用户头像 img 变量无确定类型问题</p></li><li><p>update 优化，细化 oss 配置管理权限控制</p></li><li><p>update 优化，明确打包命令</p></li><li><p>update 优化，代码中存在的警告</p></li><li><p>update 优化，前端白名单页面放行逻辑</p></li><li><p>update 优化，页面关于权限标识符说明</p></li><li><p>fix 修复 append-to-body 编写错误 (感谢 Ai3_刘小龙)</p></li><li><p>fix 关闭动态路由 tab 页签时不清理组件缓存 (感谢 NickLuo)</p></li><li><p>fix 删除重复环境变量 ElUploadInstance (感谢，棉花)</p></li><li><p>fix 修复，在线用户，强推按钮点击取消控制枱警告问题</p></li><li><p>fix 修复，字典使用 default 样式报警告问题</p></li></ul><h2><span>平台简介</span></h2><blockquote><p style="color:black; margin-left:0; margin-right:0">RuoYi-Vue-Plus 是重写 RuoYi-Vue 针对 <code>分布式集群与多租户</code> 场景全方位升级 (不兼容原框架)</p></blockquote><blockquote><p style="color:black; margin-left:0; margin-right:0">项目代码、文档，均开源免费可商用，遵循开源协议在项目中保留开源协议文件即可<br> 活到老写到老，为兴趣而开源，为学习而开源，为让大家真正可以学到技术而开源</p></blockquote><blockquote><p style="color:black; margin-left:0; margin-right:0">系统演示: https://plus-doc.dromara.org/#/common/demo_system</p></blockquote><blockquote><p style="color:black; margin-left:0; margin-right:0">前端项目地址: plus-ui](https://gitee.com/JavaLionLi/plus-ui</p></blockquote><blockquote><p style="color:black; margin-left:0; margin-right:0">文档地址: https://plus-doc.dromara.org</p></blockquote><h1><span>本框架与 RuoYi 的功能差异</span></h1><table style="display:table; text-align:left"><tbody><tr><th style="background-color:#f0f0f0; text-align:left">功能</th><th style="background-color:#f0f0f0; text-align:left">本框架</th><th style="background-color:#f0f0f0; text-align:left">RuoYi</th></tr></tbody><tbody><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">前端项目</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用 Vue3 + TS + ElementPlus 重写</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">基于 Vue2/Vue3 + JS</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">后端项目结构</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用插件化 + 扩展包形式，结构解耦，易于扩展</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">模块相互注入耦合严重难以扩展</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">后端代码风格</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">严格遵守 Alibaba 规范与项目统一配置的代码格式化</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">代码书写与常规结构不同阅读障碍大</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">Web 容器</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用 Undertow 基于 XNIO 的高性能容器</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用 Tomcat</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">权限认证</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用 Sa-Token、Jwt 静态使用功能齐全，低耦合，高扩展</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">Spring Security 配置繁琐扩展性极差</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">权限注解</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用 Sa-Token 支持注解，登录校验、角色校验、权限校验、二级认证校验、HttpBasic 校验、忽略校验<br> 角色与权限校验支持多种条件，如 <code>AND</code><code>OR</code> 或 <code>权限 OR 角色</code> 等复杂表达式</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">只支持是否存在匹配</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">三方鉴权</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用 JustAuth 第三方登录组件，支持微信、钉钉等数十种三方认证</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">无</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">关系数据库支持</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">原生支持 MySQL、Oracle、PostgreSQL、SQLServer<br> 可同时使用异构切换</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">支持 Mysql、Oracle 不支持同时使用、不支持异构切换</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">缓存数据库</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">支持 Redis 5-7 支持大部分新功能特性，如 分布式限流、分布式队列</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">Redis 简单 get set 支持</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">Redis 客户端</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用 Redisson Redis 官方推荐，基于 Netty 的客户端工具<br> 支持 Redis 90% 以上的命令，底层优化规避很多不正确的用法，例如: keys 被转换为 scan<br> 支持单机、哨兵、单主集群、多主集群等模式</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">Lettuce + RedisTemplate 支持模式少，工具使用繁琐<br> 连接池采用 common-pool Bug 多经常性出问题</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">缓存注解</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用 Spring-Cache 注解，对其扩展了实现支持了更多功能<br> 例如，过期时间，最大空闲时间，组最大长度等，只需一个注解即可完成数据自动缓存</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">需手动编写 Redis 代码逻辑</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">ORM 框架</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用 Mybatis-Plus 基于对象几乎不用写 SQL 全 java 操作，功能强大插件众多<br> 例如多租户插件，分页插件，乐观锁插件等等</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用 Mybatis 基于 XML 需要手写 SQL</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">SQL 监控</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用 p6spy 可输出完整 SQL 与执行时间监控</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">log 输出，需手动拼接 sql 与参数无法快速查看调试问题</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">数据分页</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用 Mybatis-Plus 分页插件<br> 框架对其进行了扩展，对象化分页对象，支持多种方式传参，支持前端多排序，复杂排序</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用 PageHelper 仅支持单查询分页，参数只能从 param 传，只能单排序，功能扩展性差，体验不好</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">数据权限</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用 Mybatis-Plus 插件，自行分析拼接 SQL 无感式过滤<br> 只需为 Mapper 设置好注解条件，支持多种自定义，不限于部门角色</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用，注解+aop 实现，基于部门角色，生成的 sql 兼容性差，不支持其他业务扩展<br> 生成 sql 后需手动拼接到具体业务 sql 上，对于多个 Mapper 查询不起作用</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">数据脱敏</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用，注解 + jackson 序列化期间脱敏，支持不同模块不同的脱敏条件<br> 支持多种策略，如身份证、手机号、地址、邮箱、银行卡等，可自行扩展</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">无</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">数据加解密</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用，注解 + mybatis 拦截器，对存取数据期间自动加解密<br> 支持多种策略，如 BASE64、AES、RSA、SM2、SM4 等</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">无</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">接口传输加密</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用，动态 AES + RSA 加密请求 body 每一次请求秘钥都不同大幅度降低可破解性</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">无</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">数据翻译</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用，注解 + jackson 序列化期间动态修改数据，数据进行翻译<br> 支持多种模式: <code>映射翻译</code><code>直接翻译</code><code>其他扩展条件翻译</code> 接口化两步即可完成自定义扩展，内置多种翻译实现</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">无</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">多数据源框架</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用 dynamic-datasource 支持世面大部分数据库<br> 通过 yml 配置即可动态管理异构不同种类的数据库，也可通过前端页面添加数据源<br> 支持 spel 表达式从请求头参数等条件切换数据源</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">基于 druid 手动编写代码配置数据源，配置繁琐，支持性差</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">多数据源事务</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用 dynamic-datasource 支持多数据源不同种类的数据库事务回滚</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">不支持</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">数据库连接池</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用 HikariCP Spring 官方内置连接池，配置简单，以性能与稳定性闻名天下</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用 druid bug 众多，社区维护差，活跃度低，配置众多繁琐性能一般</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">数据库主键</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用，雪花 ID 基于时间戳的，有序增长，唯一 ID 再也不用为分库分表，数据合并主键冲突重复而发愁</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用，数据库自增 ID 支持数据量有限，不支持多数据源主键唯一</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">WebSocket 协议</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">基于 Spring 封装的 WebSocket 协议，扩展了 Token 鉴权与分布式会话同步，不再只是基於单机的废物</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">无</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">序列化</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用 Jackson Spring 官方内置序列化，靠谱!!!</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用 fastjson bugjson 远近闻名</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">分布式幂等</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">参考美团 GTIS 防重系统简化实现 (细节可看文档)</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">手动编写注解基于 aop 实现</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">分布式锁</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用 Lock4j 底层基于 Redisson</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">无</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">分布式任务调度</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用 PowerJob 天生支持分布式，统一的管理中心</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用 Quartz 基于数据库锁性能差，集群需要做很多配置与改造</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">文件存储</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用 Minio 分布式文件存储，天生支持多机、多硬盘、多分片、多副本存储<br> 支持权限管理，安全可靠，文件可加密存储</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用，本机文件存储，文件裸漏，易丢失泄漏，不支持集群有单点效应</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">云存储</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用 AWS S3 协议客户端，支持，七牛、阿里、腾讯，等一切支持 S3 协议的厂家</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">不支持</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">短信</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用 sms4j 短信融合包，支持数十种短信厂家，只需在 yml 配置好厂家密钥即可使用，可多厂家共用</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">不支持</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">邮件</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用 mail-api 通用协议支持大部分邮件厂商</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">不支持</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">接口文档</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用 SpringDoc、javadoc 无注解零入侵基于 java 注释<br> 只需把注释写好，无需再写一大堆的文档注解了</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用 Springfox 已停止维护，需要编写大量的注解来支持文档生成</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">校验框架</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用 Validation 支持注解与工具类校验，注解支持国际化</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">仅支持注解，且注解不支持国际化</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">Excel 框架</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用 Alibaba EasyExcel 基于插件化<br> 框架对其增加了很多功能，例如，自动合并相同内容，自动排列布局，字典翻译等</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">基于 POI 手写实现，功能有限，复杂，扩展性差</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">工具类框架</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用 Hutool、Lombok 上百种工具覆盖 90% 的使用需求，基于注解自动生成 get set 等简化框架大量代码</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">手写工具稳定性差易出问题，工具数量有限，代码臃肿需自己手写 get set 等</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">监控框架</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用 SpringBoot-Admin 基于 SpringBoot 官方 actuator 探针机制<br> 实时监控服务状态，框架还为其扩展了在线日志查看监控</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">无</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">链路追踪</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">采用 Apache SkyWalking 还在为请求不知道去哪了，到哪出了问题而烦恼吗<br> 用了它即可实时查看请求经过的每一处每一个节点</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">无</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">代码生成器</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">只需设计好表结构，一键生成所有 crud 代码与页面<br> 降低 80% 的开发量，把精力都投入到业务设计上<br> 框架为其适配 MP、SpringDoc 规范化代码，同时支持动态多数据源代码生成</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">代码生成原生结构，只支持单数据源生成</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">部署方式</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">支持 Docker 编排，一键搭建所有环境，让开发人员从此不再为搭建环境而烦恼</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">原生 jar 部署，其他环境需手动下载安装，自行搭建</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">项目路径修改</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">提供详细的修改方案文档，并为其做了一些改动，非常简单即可修改成自己想要的</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">需要做很多改造，文档说明有限</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">国际化</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">基于请求头动态返回不同语种的文本内容，开发难度低，有对应的工具类，支持大部分注解内容国际化</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">只提供基础功能，其他需自行编写扩展</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">代码单例测试</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">提供单例测试，使用方式编写方法与 maven 多环境单测插件</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">只提供基础功能，其他需自行编写扩展</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">Demo 案例</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">提供框架功能的实际使用案例，单独一个模块提供了很多很全</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">无</td></tr></tbody></table><h2><span>本框架与 RuoYi 的业务差异</span></h2><table style="display:table; text-align:left"><tbody><tr><th style="background-color:#f0f0f0; text-align:left">业务</th><th style="background-color:#f0f0f0; text-align:left">功能说明</th><th style="background-color:#f0f0f0; text-align:left">本框架</th><th style="background-color:#f0f0f0; text-align:left">RuoYi</th></tr></tbody><tbody><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">租户管理</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">系统内租户的管理，如:租户套餐、过期时间、用户数量、企业信息等</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">支持</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">无</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">租户套餐管理</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">系统内租户所能使用的套餐管理，如:套餐内所包含的菜单等</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">支持</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">无</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">客户端管理</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">系统内对接的所有客户端管理，如: pc 端、小程序端等<br> 支持动态授权登录方式，如: 短信登录、密码登录等，支持动态控制 token 时效</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">支持</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">无</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">用户管理</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">用户的管理配置，如:新增用户、分配用户所属部门、角色、岗位等</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">支持</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">支持</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">部门管理</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">配置系统组织机构（公司、部门、小组） 树结构展现支持数据权限</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">支持</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">支持</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">岗位管理</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">配置系统用户所属担任职务</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">支持</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">支持</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">菜单管理</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">配置系统菜单、操作权限、按钮权限标识等</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">支持</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">支持</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">角色管理</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">角色菜单权限分配、设置角色按机构进行数据范围权限划分</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">支持</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">支持</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">字典管理</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">对系统中经常使用的一些较为固定的数据进行维护</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">支持</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">支持</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">参数管理</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">对系统动态配置常用参数</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">支持</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">支持</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">通知公告</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">系统通知公告信息发布维护</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">支持</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">支持</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">操作日志</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">系统正常操作日志记录和查询，系统异常信息日志记录和查询</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">支持</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">支持</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">登录日志</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">系统登录日志记录查询包含登录异常</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">支持</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">支持</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">文件管理</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">系统文件展示、上传、下载、删除等管理</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">支持</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">无</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">文件配置管理</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">系统文件上传、下载所需要的配置信息动态添加、修改、删除等管理</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">支持</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">无</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">在线用户管理</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">已登录系统的在线用户信息监控与强制踢出操作</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">支持</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">支持</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">定时任务</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">运行报表、任务管理 (添加、修改、删除)、日志管理、执行器管理等</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">支持</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">仅支持任务与日志管理</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">代码生成</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">多数据源前后端代码的生成（java、html、xml、sql）支持 CRUD 下载</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">支持</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">仅支持单数据源</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">系统接口</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">根据业务代码自动生成相关的 api 接口文档</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">支持</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">支持</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">服务监控</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">监视集群系统 CPU、内存、磁盘、堆栈、在线日志、Spring 相关配置等</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">支持</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">仅支持单机 CPU、内存、磁盘监控</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">缓存监控</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">对系统的缓存信息查询，命令统计等。</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">支持</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">支持</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">在线构建器</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">拖动表单元素生成相应的 HTML 代码。</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">支持</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">支持</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">使用案例</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">系统的一些功能案例</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">支持</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:left">不支持</td></tr></tbody></table><p>&nbsp;</p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 22 Dec 2023 06:35:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272160</guid>
            <link>https://www.oschina.net/news/272160</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Apache Druid 28.0.1 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Apache Druid&nbsp;<span style="color:#1a1a1a"><span>&nbsp;</span>是一个分布式的、支持实时多维 OLAP 分析的数据处理系统。它既支持高速的数据实时摄入处理，也支持实时且灵活的多维数据分析查询。因此 Druid 最常用的场景就是大数据背景下、灵活快速的多维 OLAP 分析。Druid 还有一个关键的特点：它支持根据时间戳对数据进行预聚合摄入和聚合分析，因此也有用户经常在有时序数据处理分析的场景中用到它。</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="color:#000000"><span style="background-color:#ffffff">Apache Druid 28.0.1 现已<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdruid%2Freleases%2Ftag%2Fdruid-26.0.0" target="_blank">发布</a>。这</span></span><span style="background-color:#ffffff; color:#1f2328">是一个补丁版本，修复了 28.0.0 版本中的一些问题。</span>有关更多详细信息，可参阅<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdruid%2Fmilestone%2F53%3Fclosed%3D1" target="_blank">完整的更改集</a>。</p><p style="text-align:start"><strong><span><span><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>Notable Bug fixes</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdruid%2Fpull%2F15405" target="_blank">#15405</a>&nbsp;使 start-druid 脚本更加&nbsp;robust</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdruid%2Fpull%2F15402" target="_blank">#15402</a>&nbsp;修复了具有多个 post-aggregation metrics 的 groupBy 查询的查询缓存错误</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdruid%2Fpull%2F15430" target="_blank">#15430</a>&nbsp;修复了升级期间任务失败的问题，这是因为添加了新的任务操作<code>RetrieveSegmentsToReplaceAction</code>，而该操作在滚动升级时在 overlord 上不可用。</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdruid%2Fpull%2F15500" target="_blank">#15500</a>&nbsp;修复了新的默认 SQL 兼容模式中常用的 NullFilter 的错误。</li></ul><p>更新说明：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdruid%2Freleases%2Ftag%2Fdruid-28.0.1" target="_blank">https://github.com/apache/druid/releases/tag/druid-28.0.1</a></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 22 Dec 2023 05:54:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272146/apache-druid-28-0-1-released</guid>
            <link>https://www.oschina.net/news/272146/apache-druid-28-0-1-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[OpenTofu 发布候选版本，GA 定于 1 月 10 日]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">OpenTofu v1.6.0-rc1 现已发布，这是第一个稳定版本发布前的最后阶段。它是继 alpha 版和 beta 版之后的又一个快速版本，正式版本预计将于 2024 年 1 月 10 日（节后）正式发布。</span></p><p><span style="color:#000000">该版本包括了一些错误修复、稳定性改进和文档更新。重要的是，这个版本突出强调了新的公共注册表的稳定性，该注册表曾在三周前发布的 v1.6.0-beta1 版本中首次亮相。</span></p><blockquote><p><span style="color:#000000">「从构想到候选版本，OpenTofu 的发展之旅只用了四个月。」</span></p></blockquote><p><span style="color:#000000"><img alt="" height="354" src="https://oscimg.oschina.net/oscnet/up-ef39bb3bd36ca3eee6bd95bb95cbf0bf4dc.png" width="500" referrerpolicy="no-referrer"></span></p><p><span style="color:#000000">2023 年 8 月 10 日：Terraform 转向商业源代码许可证。8 月 15 日：OpenTF 宣言上线。8 月 25 日：宣言发布。8 月 31 日：宣言在 GitHub 上获得 3 万个星。9 月 5 日：OpenTF 仓库公开。9 月 20 日：OpenTF 作为 OpenTofu 加入 Linux 基金会。10 月 4 日：发布 Alpha 版。11 月 29 日：发布 Beta 版。12 月 20 日：发布稳定版本候选版。2024 年 1 月 10 日：正式发布。</span></p><p><span style="color:#000000">官方公布的数据称：截至 12 月 18 日，OpenTofu 已经超过 31000 次下载，有 60 位 committer，收到了 1000 多个拉取请求和问题报告。项目的主要仓库除了宣言的 36200 多个 GitHub star 外，还积累了 16450 个 GitHub star。</span></p><p><span style="color:#000000">更多详情可<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.linuxfoundation.org%2Fblog%2Fopentofu-release-candidate-is-out" target="_blank">查看官方博客</a>。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 22 Dec 2023 03:18:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272129/opentofu-release-candidate</guid>
            <link>https://www.oschina.net/news/272129/opentofu-release-candidate</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[功能强大的开源数据中台系统 DataCap 1.18.0 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><blockquote><p>推荐一套基于 SpringBoot 开发的简单、易用的开源权限管理平台，建议下载使用: <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdevlive-community%2Fauthx" target="_blank">https://github.com/devlive-community/authx</a></p></blockquote><blockquote><p>推荐一套为 Java 开发人员提供方便易用的 SDK 来与目前提供服务的的 Open AI 进行交互组件：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdevlive-community%2Fopenai-java-sdk" target="_blank">https://github.com/devlive-community/openai-java-sdk</a></p></blockquote><blockquote><p>推荐一套全平台数据库管理工具，建议下载使用: <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdevlive-community%2Fdbm" target="_blank">https://github.com/devlive-community/dbm</a></p></blockquote><p><strong>DataCap 发布!</strong></p><table><tbody><tr><th>发布版本</th><th>发布时间</th></tr></tbody><tbody><tr><td><code>1.18.0</code></td><td><code>2023-12-22</code></td></tr></tbody></table><h4>General</h4><hr><ul><li>[元数据] 支持克隆行</li><li>[元数据] 支持截断表</li><li>[元数据] 支持刷新数据</li><li>[元数据] 支持删除表</li><li>[元数据] 支持展示表结构</li><li>[元数据] 支持展示表 ER 图</li><li>[元数据] 支持导出表数据</li><li>[元数据] 支持新建表</li><li>[元数据] 支持新建列</li><li>[元数据] 支持删除列</li><li>[查询] 添加自动添加 <code>LIMIT</code></li><li>[用户] 支持用户头像</li><li>[数据源] 优化数据源删除提示信息</li><li>[报表] 支持数据报表功能</li><li>[仪表盘] 支持仪表盘功能</li><li>[数据集] 支持数据集数据</li></ul><h4>SPI</h4><hr><ul><li>支持 FileSystem</li><li>支持 Local FileSystem</li></ul><h4>Docs</h4><hr><ul><li>添加 SDK 使用文档</li></ul><h4>SqlServer</h4><hr><ul><li>支持多版本</li><li>修复连接具柄导致连接失败</li></ul><h4>Pipeline</h4><hr><ul><li>支持 MySQL JDBC 方式</li><li>支持拖拽构建</li></ul><h4>Dependencies</h4><hr><ul><li>更新 org.mongodb:mongodb-jdbc <code>2.0.2</code> 到 <code>2.0.3</code></li><li>更新 ch.qos.logback:logback-classic <code>1.2.11</code> 到 <code>1.2.13</code></li><li>更新 org.apache.kafka:kafka-clients <code>2.8.1</code> 到 <code>3.6.1</code></li><li>更新 ch.qos.logback:logback-core <code>1.2.11</code> 到 <code>1.2.13</code></li><li>更新 com.oracle.database.jdbc:ojdbc8 <code>21.9.0.0</code> 到 <code>23.3.0.23.09</code></li><li>更新 org.elasticsearch.plugin:x-pack-sql-jdbc <code>7.10.0</code> 到 <code>8.11.3</code></li><li>更新 jackson.version <code>2.14.2</code> 到 <code>2.16.0</code></li></ul><h4>下载地址</h4><hr><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdatacap.edurt.io%2Fdownload.html" target="_blank">https://datacap.edurt.io/download.html</a></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 22 Dec 2023 03:07:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272125</guid>
            <link>https://www.oschina.net/news/272125</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[给开发者更好的选择！支持多种 AI 框架的 openKylin 2.0 Alpha 版来啦]]>
            </title>
            <description>
                <![CDATA[<div class="content"><blockquote><p><span>人工智能作为当前科技发展的重要方向，已经在各个领域展现出巨大的潜力和应用前景。Linux 以其稳定、安全、开放的特性，为人工智能研究和应用提供了更加自由的空间，让开发者可以根据个性化需求进行定制和优化，成为人工智能领域的首选平台。</span></p></blockquote><p style="margin-left:0; margin-right:0; text-align:center"><img alt="" height="410" src="https://oscimg.oschina.net/oscnet/up-46cb23cbef6115af1a63ecc7385176ff6b4.png" width="940" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0"><span style="color:#7f7f7f">注：Alpha 版本只面向开发者和尝新用户体验，非稳定版本请勿在任何工作或生产环境上部署。</span></p><p><span>支持多种 AI 框架的 openKylin 2.0 Alpha 版本来啦！新版本可支撑多种主流 AI 框架，并提供 openKylin AI 框架安装助手，为开发者构建人工智能应用提供了便利的环境和工具。openKylin 与人工智能的结合，可为人工智能技术的发展提供可靠的基础平台。同时，开明包格式、wlcom 合成器、UKUI 4.10 桌面环境等社区最新重大成果都将融入到新版中，颠覆性创新带来全新体验。</span></p><div><div><div><span><span style="color:#ffffff">:09</span></span></div><div><div><div><div><div><div><div><div><div><div>
            &nbsp;
           </div></div></div></div></div></div></div></div></div></div></div></div><p style="margin-left:0; margin-right:0"><span><strong>AI 框架<span><strong>安装助手</strong></span></strong></span></p><p><span>安装 AI 框架需要显卡驱动、加速工具、依赖软件以及配置系统等综合环境，稍有差错就会导致安装失败。<strong>新版本提供了由社区独立开发的 openKylin AI 框架安装助手，实现一键安装 AI 框架。</strong>安装助手采用前后端分离架构：前端负责检测系统硬件，自动推荐安装方式，提供安装选择，获取安装选项，显示安装信息及进度；后端执行具体任务并向前端及时反馈信息。该架构提高了开发效率、可维护性和可扩展性，同时也提供了更好的用户体验。</span></p><p style="margin-left:0; margin-right:0; text-align:center"><img alt="" height="410" src="https://oscimg.oschina.net/oscnet/up-69db6a50571d9beaf6619898ea34e395a7f.png" width="940" referrerpolicy="no-referrer"></p><p>&nbsp;</p><p><span><strong>全新开明包格式环境</strong></span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span>开明包格式是 openKylin 社区为应对传统包格式存在的系统与应用无明确界限、发行版碎片化、兼容性等问题而开发的一款新软件包格式。目标是为新发布软件提供高兼容性、高安全性的解决方案；支持大量存量 Linux 应用的导入和管理；逐步治理版本碎片化，并方便安装升级。2.0 Alpha 版本预装了开明包格式环境，并提供部分开明包软件用以体验开明包格式的安装、更新和卸载操作（命令行方式），后续还将支持多种格式应用导入、多种安装方式等更加完善的功能。</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0px; margin-right:0px; text-align:center"><img alt="" height="410" src="https://oscimg.oschina.net/oscnet/up-2e4f1c7891e318ed0831e1573fededbe20b.png" width="940" referrerpolicy="no-referrer"></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify">&nbsp;</p><p><span><strong>创新 wlcom 合成器</strong></span></p><p style="margin-left:0; margin-right:0; text-align:justify"><span>wlcom 合成器是由 openKylin 社区 Wayland SIG 组研制的一款基于 wayland 协议的合成器，目标是解决传统开源 wayland 合成器在兼容性和稳定性方面的不足。openKylin 2.0 Alpha 版本已默认支持 wlcom 合成器，每次登录系统前可在锁屏界面右下角点击选择。</span></p><p style="margin-left:0px; margin-right:0px; text-align:center"><span><img alt="" height="410" src="https://oscimg.oschina.net/oscnet/up-87a40a83e2c0579dfe2dd3ccfeec602045d.png" width="940" referrerpolicy="no-referrer"></span></p><p><span style="color:#888888">请注意，目前 wlcom 合成器还处于持续开发阶段，一些功能还不完善，若遇到影响体验的问题可选择切换到其他显示模式使用。</span></p><p>&nbsp;</p><p><span><strong>最新 UKUI 4.10 桌面环境</strong></span></p><p><strong><span>交互设计方面</span></strong><span>，UKUI 4.10 桌面环境重点围绕开始菜单、侧边栏、文件管理器、任务栏、多任务视图、锁屏&amp;登录模块等重点模块进行优化，并引入「双钻设计模型」的方法论。在架构上，提出 UKUI Framework 概念和 Framework+轻量级 UI 的发展路线，重新设计了桌面环境整体架构，对 UI 层与功能逻辑层做分层处理，使各部分具备高内聚、低耦合的特点，使 UKUI 桌面整体具备快速迭代、可定制化、高扩展性的特性。<strong>功能使用上</strong>，根据用户的反馈，优化了众多体验问题。同时还新增 UKUI-Lite 模式配置支持，可根据嵌入式等具体场景进行系统定制。</span></p><p style="text-align:center"><img alt="" height="410" src="https://oscimg.oschina.net/oscnet/up-cc1a0e90ba02d1cd0ec1059f029b34f6955.png" width="940" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0; text-align:justify"><span>UKUI 4.10 文件管理器优化了批量文件和大文件拷贝、搜索、排序、重命名等场景下的性能体验和显示搜索进度条、搜索结果的文件删除、重命名等操作，在全局搜索新增无权访问的目标也可添加到搜索范围的支持，以及蓝牙耳机控制、任务栏影音播放器预览图控制键、微信登录功能、创意主题和交互动画效果等，从细微处感受新版本的更佳体验。</span></p><p style="margin-left:0; margin-right:0; text-align:justify">&nbsp;</p><p><span><strong>不可变系统安装模式</strong></span></p><p><span>不可变系统是一种不可更改且只读的操作系统，系统核心文件和目录就无法修改，提高系统的安全性和稳定性，简化系统管理。可以原子方式更新，易于维护。安装 openKylin 2.0 Alpha 版本时勾选「不可变系统安装」即可安装 openKylin 不可变系统。</span></p><p style="text-align:center"><img alt="" height="410" src="https://oscimg.oschina.net/oscnet/up-5b69be3b3013669e8f9143435e6451106a8.png" width="940" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="margin-left:0; margin-right:0; text-align:left">&nbsp;</p><p><span><strong>跨版本升级工具</strong></span></p><p><span>支持 openKylin 1.0、openKylin 1.0.1 用户通过 openKylin 跨版本升级工具快速升级到 openKylin 2.0 Alpha 版本，并支持老版本应用生态兼容。</span></p><p style="margin-left:0; margin-right:0; text-align:center"><img alt="" height="410" src="https://oscimg.oschina.net/oscnet/up-4b82b25d7f0cecc074aac68ff1fad01d447.png" width="940" referrerpolicy="no-referrer"><br> &nbsp;</p><p><span><strong>新增九种系统语言支持</strong></span></p><ul><li><p style="margin-left:0; margin-right:0; text-align:justify"><span><span>新增繁体中文、</span>蒙文<span>、哈萨克文、藏文、柯尔克孜文、维吾尔文、德文、西班牙文、法文九种系统语言支持；</span></span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>安装时可选系统默认安装语言；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>系统安装完后可到「设置-区域语言」切换系统语言；</span></p></li></ul><p style="margin-left:0; margin-right:0; text-align:center">&nbsp;</p><p><span><strong>KARE<span>生态兼容</span></strong></span></p><p style="margin-left:0; margin-right:0"><span>openKylin 2.0 Alpha 版本预装 KARE 生态兼容方案，目前支持 openKylin 1.0 生态兼容。后续 KARE 还将支持更多其他 Linux 版本（包括历史版本）生态兼容。</span></p><p style="text-align:center"><img alt="" height="410" src="https://oscimg.oschina.net/oscnet/up-6cc20d60b4b1583bb0f231802b9a571a53e.png" width="940" referrerpolicy="no-referrer"></p><p>&nbsp;</p><p><span><strong>新增麒麟输入法管理框架及 OK 输入法实现</strong></span></p><ul><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>新增麒麟输入法管理框架通用插件；</span></p></li><li><p><span>新增 OK 拼音输入法支持全拼输入；支持简繁转换、中英标点和全角半角；全新输入窗口和状态栏；支持<span>状态栏</span>拖拽、位置记忆和多屏幕使用；</span></p></li></ul><p style="margin-left:0; margin-right:0; text-align:left">&nbsp;</p><p><span><strong>分级冻结 3.0</strong></span></p><ul><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>新增应用冰冻模式；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>新增控制面板可设置分级冻结是否开启功能；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>新增资源紧张时提醒用户开启分级冻结的消息通知；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>优化关键应用（如浏览器、腾讯会议、WPS 等）运行资源保障；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>优化系统应用运行流畅度；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>优化大量应用场景下的功耗问题；</span></p></li></ul><p>&nbsp;</p><p><span><strong>基础组件升级</strong></span></p><p>&nbsp;</p><p style="margin-left:0px; margin-right:0px; text-align:center"><img alt="" height="1267" src="https://oscimg.oschina.net/oscnet/up-06d5ece851f10d889cbc5399121f2a5dd7c.png" width="1287" referrerpolicy="no-referrer"></p><h2>&nbsp;</h2><p>&nbsp;</p><p><span><strong>安装方式</strong></span></p><p style="margin-left:0; margin-right:0"><span>1.通过官网下载镜像安装镜像，制作启动盘安装（推荐），镜像下载地址：</span></p><p><span style="color:#0052ff">https://www.openkylin.top/downloads/</span></p><p style="margin-left:0; margin-right:0; text-align:left"><span>2.openKylin 1.0.1 用户体验可通过 openKylin 跨版本升级工具安装。工具安装方式：</span></p><pre><code><span><span>sudo</span><span style="color:#dd1144">apt update</span></span></code><code><span><span>sudo</span><span style="color:#dd1144">apt install kylin-revision-manager</span></span></code></pre><p style="margin-left:0; margin-right:0; text-align:left"><span>然后打开工具按照提示完成系统升级。</span></p><p style="margin-left:0; margin-right:0; text-align:left"><span style="color:#ce2a1b">*请注意，该过程存在风险，请确保重要文件已备份。</span></p><h2>&nbsp;</h2><p><span><strong>其他更新</strong></span></p><h3><span style="color:#0052ff"><strong><span>1.UKUI 4.10</span></strong></span></h3><ul><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>【文件管理器】优化标签文件聚合功能；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>【文件管理器】优化用户视图切换、排序等功能入口，用户操作更方便；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>【文件管理器】新增不同页签之间通过拖拽图标进行文件复制支持；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>【文件管理器】新增「创建时间」属性；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>【文件管理器】新增重名文件名后缀时弹窗提醒；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>【蓝牙】新增「我的设备」支持名称自定义；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>【蓝牙】优化用户提示信息策略，提升交互体验；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>【全局搜索】新增任务栏托盘区搜索图标右键菜单；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>【侧边栏】新增删除单个通知的动画效果；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>【侧边栏】优化界面显示；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>【触控板】新增双指滑动调节滑动条手势；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>【窗管】新增窗口阴影效果；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>【声音】新增音效自定义设置功能；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>【用户手册】新增快捷键调出的用户手册的文本可以用鼠标选中和复制支持；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>【控制面板】新增圆角大小配置支持；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>【多任务视图】优化键盘导航交互；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>【开始菜单】优化展开/收缩动画特效；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>【快捷键】USD、kwin、音乐、录音、看图、影音等组件优化快捷键；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>【系统监视器】新增最小化后保持后台运行；</span></p></li></ul><h3><span style="color:#0052ff"><strong><span>2.麒麟管家</span></strong></span></h3><ul><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>新增百宝箱-驱动精灵功能；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>新增百宝箱-换机助手功能；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>重构故障检测模块，支持一键检测同时支持修复功能；</span></p></li></ul><h3><span style="color:#0052ff"><strong><span>3.kmre 3.0</span></strong></span></h3><ul><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>新增应用多开支持；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>新增安卓应用音量调节支持；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>新增部分软件局域网内投屏；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>新增应用全屏启动可配置；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>优化性能模式；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span><span>优化</span>Wayland<span>环境支持；</span></span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>优化 X86 兼容性；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>优化应用窗口自由拉伸；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>优化文件互通；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>优化安卓应用启动速度；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>优化 kmre UI 界面；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>优化选项菜单；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>增加多款 GPU 适配支持；</span></p></li></ul><h3><span style="color:#0052ff"><strong><span>4.虚拟键盘 3.0</span></strong></span></h3><ul><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>新增三种虚拟键盘动画：显示动画、隐藏动画、模式切换动画；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>新增控制面板启用或禁用虚拟键盘动画入口；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>新增自定义虚拟键盘大小功能以及控制面板入口；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>新增控制面板启用或禁用虚拟键盘悬浮球入口；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>新增虚拟键盘增加对高亮候选的支持；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>新增托盘图标支持本地化；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span><span>新增退出按钮、模式转换按钮</span>ToolTip<span>信息提示；</span></span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>提高虚拟键盘兼容性，新增小语种输入支持，对齐物理键盘输入法；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>修复悬浮按钮窗口锯齿问题；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>优化本地配置文件的写入性能；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>修复在调用 QSystemTrayIcon 的 setContextMenu 之后右键菜单中信息无法更新问题；</span></p></li></ul><h3><span style="color:#0052ff"><strong><span>5.计算器</span></strong></span></h3><ul><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>新增复杂函数显示提示；</span></p></li></ul><h3><span style="color:#0052ff"><strong><span>6.便签</span></strong></span></h3><ul><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>原便签贴应用名称更改为「便签」；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>优化插入图片显示；</span></p></li></ul><h3><span style="color:#0052ff"><strong><span>7.系统安全能力</span></strong></span></h3><ul><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>新增 openKylin 网络层访问控制功能；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>新增国密算法支持，保护账户安全；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span><span>支持开启</span>apparmor<span>；</span></span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>新增 RISC-V 系统调用审计支持；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>新增 Intel SGX 支持；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>新增 secGear 支持；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>新增 tom2-tools、tpm2-abrmd 组件；</span></p></li></ul><h3><span style="color:#0052ff"><strong><span>8.适配支持青霜框架</span></strong></span></h3><p style="margin-left:0; margin-right:0; text-align:justify"><span>青霜框架是由 openKylin 社区 QSFramework SIG 组基于 MiniBlink 开发的一款新形态、轻量化、微内核 Web 引擎。目前已发布到 openKylin 2.0 软件仓库，欢迎大家下载体验！</span></p><h2>&nbsp;</h2><p><span><strong>已知问题</strong></span></p><p><span>正如开头所说，openKylin 2.0 Alpha 版本处于试验阶段，目前还存在诸多问题，甚至有些还很严重，请大家不要安装到任何工作或生产环境中去。以下是目前已知的一些严重问题，您如果在使用过程中遇到，不需要再次向社区提交问题反馈。</span></p><ul><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>【不可变系统】不可变模式安装系统后目前不支持应用安装，包括从软件商店安装；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>【wlcom】wlcom 模式下无法打开多任务视图；win+tab 快捷键不生效；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>【登录】登录界面多次切换用户后出现无法再切换用户且登录进去黑屏的问题；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>【荔枝派】荔枝派版本窗口存在毛玻璃异常、窗口直角、黑框等问题；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>【触控板】惠普平板注销后进入 X11 模式桌面后触控板无法滑动；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>【文件管理器】U 盘文件加载缓慢；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>【开始菜单】开始菜单处无法成功卸载应用；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span>【任务栏】多次注销重启后任务栏托盘处多个图标加载失败；</span></p></li></ul><p style="margin-left:0; margin-right:0; text-align:justify">&nbsp;</p><p style="margin-left:0; margin-right:0; text-align:justify"><strong><span><span style="background-color:#ffffff; color:rgba(0, 0, 0, 0.9)">更多 bug 问题，可</span><span style="background-color:#ffffff; color:rgba(0, 0, 0, 0.9)">前往 openKylin Gitee 仓库（</span><span style="background-color:#ffffff; color:#0052ff">https://gitee.com/openkylin</span><span style="background-color:#ffffff; color:rgba(0, 0, 0, 0.9)">）反馈~</span></span></strong>​​​​​​​</p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 22 Dec 2023 02:38:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272117/openkylin-2-0-alpha</guid>
            <link>https://www.oschina.net/news/272117/openkylin-2-0-alpha</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[PHP 8.3.1 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>PHP 8.3.1 现已<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.php.net%2Farchive%2F2023.php%232023-12-21-1" target="_blank">发布</a>，这是一个错误修复版本。具体更新内容包括：</p><ul><li>Core： 
  <ul><li>修复了错误&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fphp%2Fphp-src%2Fissues%2F12758" target="_blank">GH-12758</a>&nbsp;/&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fphp%2Fphp-src%2Fissues%2F12768" target="_blank">GH-12768</a>（ZEND_FUNC_GET_ARGS 和 ZEND_BIND_STATIC 内的 OOM 处理程序中的无效 opline）。</li><li>修复各种缺失的 NULL 检查。</li><li>修复了错误&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fphp%2Fphp-src%2Fissues%2F12835" target="_blank">GH-12835</a>（内部 __call 上的 call-&gt;extra_named_pa​​rams 泄漏）。</li><li>修复了错误&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fphp%2Fphp-src%2Fissues%2F12826" target="_blank">GH-12826</a>（嵌套循环中奇怪的指针问题）。</li></ul></li><li>FPM:： 
  <ul><li>修复了错误&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fphp%2Fphp-src%2Fissues%2F12705" target="_blank">GH-12705</a>（fpm_status_export_to_zval 中的 Segmentation 错误）。</li></ul></li><li>FTP： 
  <ul><li>修复了错误&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fphp%2Fphp-src%2Fissues%2F9348" target="_blank">GH-9348</a>（FTP 和 SSL 会话重用）。</li></ul></li><li>LibXML： 
  <ul><li>修复了 libxml2 2.12.0 的测试失败问题。</li></ul></li><li>MySQLnd: 
  <ul><li>避免使用未初始化的结构。</li><li>修复了错误&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fphp%2Fphp-src%2Fissues%2F12791" target="_blank">GH-12791</a>（MySQLnd 调试代码中可能取消引用 NULL）。</li></ul></li><li>Opcache： 
  <ul><li>修复了 JIT 错误（函数 JIT 在无效偏移错误的同时发出「Uninitialized string offset」警告）。</li><li>修复了 JIT 错误（JIT 在抛出错误的同时发出「Attempt to assign property of non-object」警告）。</li></ul></li><li>PDO PGSQL： 
  <ul><li>修复了 PDO::pgsqlGetNotify() 中 $fetchMode 的默认值 (kocsismate)</li></ul></li><li>SOAP： 
  <ul><li>修复了错误&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fphp%2Fphp-src%2Fissues%2F12838" target="_blank">GH-12838</a>（[SOAP] 临时 WSDL 缓存文件未删除）。</li></ul></li><li>Standard： 
  <ul><li>修复了&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fphp%2Fphp-src%2Fissues%2F12745" target="_blank">GH-12745</a>（$arg_separator 的 http_build_query() 默认 null 参数被隐式强制为字符串）。</li></ul></li></ul><p><span style="background-color:#ffffff; color:#333333">&nbsp;更多详情可查看&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.php.net%2FChangeLog-8.php%238.3.1" target="_blank">ChangeLog</a><span style="background-color:#ffffff; color:#333333">。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 22 Dec 2023 02:13:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272106/php-8-3-1-released</guid>
            <link>https://www.oschina.net/news/272106/php-8-3-1-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[🎉 领域模型即服务 | Wow 2.11.2 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow:基于 DDD、EventSourcing 的现代响应式 CQRS 架构微服务开发框架" src="https://static.oschina.net/uploads/img/202312/13135012_Zb9v.svg" width="150" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>基于 DDD、EventSourcing 的现代响应式 CQRS 架构微服务开发框架</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FAhoo-Wang%2FWow%2Fblob%2Fmvp%2FLICENSE"><img alt="License" src="https://img.shields.io/badge/license-Apache%202-4EB1BA.svg" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FAhoo-Wang%2FWow%2Freleases"><img alt="GitHub release" src="https://img.shields.io/github/release/Ahoo-Wang/Wow.svg" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fapp.codacy.com%2Fgh%2FAhoo-Wang%2FWow%2Fdashboard%3Futm_source%3Dgh%26utm_medium%3Dreferral%26utm_content%3D%26utm_campaign%3DBadge_grade"><img alt="Codacy Badge" src="https://app.codacy.com/project/badge/Grade/cfc724df22db4f9387525258c8a59609" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fcodecov.io%2Fgh%2FAhoo-Wang%2FWow"><img alt="codecov" src="https://codecov.io/gh/Ahoo-Wang/Wow/branch/main/graph/badge.svg?token=uloJrLoQir" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FAhoo-Wang%2FWow"><img alt="Integration Test Status" src="https://github.com/Ahoo-Wang/Wow/actions/workflows/integration-test.yml/badge.svg" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FKotlinBy%2Fawesome-kotlin"><img alt="Awesome Kotlin Badge" src="https://kotlin.link/awesome-kotlin.svg" referrerpolicy="no-referrer"></a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><strong>领域驱动</strong><span>&nbsp;</span>|<span>&nbsp;</span><strong>事件驱动</strong><span>&nbsp;</span>|<span>&nbsp;</span><strong>测试驱动</strong><span>&nbsp;</span>|<span>&nbsp;</span><strong>声明式设计</strong><span>&nbsp;</span>|<span>&nbsp;</span><strong>响应式编程</strong><span>&nbsp;</span>|<span>&nbsp;</span><strong>命令查询职责分离</strong><span>&nbsp;</span>|<span>&nbsp;</span><strong>事件溯源</strong></p><h2>更新内容</h2><blockquote><p style="margin-left:0; margin-right:0">新增，事件补偿 ——<span>&nbsp;</span><strong>群机器人 (企业微信) 通知</strong><span>&nbsp;</span>🎉🎉，提升事件补偿处理效率！！！</p></blockquote><ul><li>特性: 分布式补偿调度器 (<code>CompensationScheduler</code>) 支持自定义配置</li><li>特性: 新增<span>&nbsp;</span><code>@Retry</code><span>&nbsp;</span>注解 API，以支持更友好的客户端重试策略配置</li><li>特性:<span>&nbsp;</span><code>MessageFunction</code><span>&nbsp;</span>API 支持获取函数注解</li><li>特性:<span>&nbsp;</span><code>CompensationFilter</code><span>&nbsp;</span>支持<span>&nbsp;</span><code>@Retry</code><span>&nbsp;</span>注解</li></ul><p>群机器人 (企业微信) 通知</p><table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:0px; border:none; box-sizing:border-box; color:#40485b; display:block; font-family:-apple-system,&quot;system-ui&quot;,&quot;Segoe UI&quot;,Helvetica,Arial,&quot;Apple Color Emoji&quot;,&quot;Segoe UI Emoji&quot;,&quot;Segoe UI Symbol&quot;,&quot;Liberation Sans&quot;,&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,&quot;Hiragino Sans GB&quot;,&quot;Wenquanyi Micro Hei&quot;,&quot;WenQuanYi Zen Hei&quot;,&quot;ST Heiti&quot;,SimHei,SimSun,&quot;WenQuanYi Zen Hei Sharp&quot;,sans-serif; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; line-height:inherit; margin:0px 0px 16px; max-width:100%; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; word-break:initial; word-spacing:0px"><tbody><tr><th>重试执行失败通知</th><th>补偿成功通知</th></tr></tbody><tbody><tr><td><img alt="事件补偿-通知" src="https://foruda.gitee.com/images/1703151825204489303/fc470563_384561.png" referrerpolicy="no-referrer"></td><td><img alt="事件补偿-通知" src="https://foruda.gitee.com/images/1703151770653404501/50c50d33_384561.png" referrerpolicy="no-referrer"></td></tr></tbody></table><h2>快速开始</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">使用<span>&nbsp;</span><a href="https://gitee.com/AhooWang/wow-project-template">Wow 项目模板</a>快速创建基于 Wow 框架的 DDD 项目。</p><h2>特性概览</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-Features" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Features.png" referrerpolicy="no-referrer"></p><h2>架构图</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-Architecture" src="https://static.oschina.net/uploads/img/202312/13135013_Lcug.svg" referrerpolicy="no-referrer"></p><h2>性能测试 (Example)</h2><ul><li>测试代码：<a href="https://gitee.com/AhooWang/Wow/blob/main/example">Example</a></li><li>测试场景：加入购物车、下单</li><li>命令发送等待模式（<code>WaitStrategy</code>）：<code>SENT</code>、<code>PROCESSED</code></li></ul><h3>部署</h3><ul><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/perf/redis.yaml">Redis</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/perf/mongo.yaml">MongoDB</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/perf/kafka.yaml">Kafka</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/perf/config/mongo_kafka_redis.yaml">Application-Config</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/perf/deployment.yaml">Application-Deployment</a></li></ul><h3>测试报告</h3><h4>加入购物车</h4><ul><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/request/AddCartItem.http">请求</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/document/example/perf/Example.Cart.Add@SENT.pdf">详细报告 (PDF)-SENT</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/document/example/perf/Example.Cart.Add@PROCESSED.pdf">详细报告 (PDF)-PROCESSED</a></li></ul><blockquote><p style="margin-left:0; margin-right:0">命令等待策略（<code>WaitStrategy</code>）为<span>&nbsp;</span><code>SENT</code><span>&nbsp;</span>模式，加入购物车命令（<code>AddCartItem</code>）写请求 API 经过 2 分钟的压测，平均 TPS 为<span>&nbsp;</span><em>59625</em>，峰值为<span>&nbsp;</span><em>82312</em>，平均响应时间为<span>&nbsp;</span><em>29</em><span>&nbsp;</span>毫秒。</p></blockquote><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="SENT" src="https://static.oschina.net/uploads/img/202312/13135013_5U15.png" referrerpolicy="no-referrer"></p><blockquote><p style="margin-left:0; margin-right:0">命令等待策略（<code>WaitStrategy</code>）为<span>&nbsp;</span><code>PROCESSED</code><span>&nbsp;</span>模式，加入购物车命令（<code>AddCartItem</code>）写请求 API 经过 2 分钟的压测，平均 TPS 为<span>&nbsp;</span><em>18696</em>，峰值为<span>&nbsp;</span><em>24141</em>，平均响应时间为<span>&nbsp;</span><em>239</em><span>&nbsp;</span>毫秒。</p></blockquote><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="PROCESSED" src="https://static.oschina.net/uploads/img/202312/13135013_8e5S.png" referrerpolicy="no-referrer"></p><h4>下单</h4><ul><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/request/CreateOrder.http">请求</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/document/example/perf/Example.Order.Create@SENT.pdf">详细报告 (PDF)-SENT</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/document/example/perf/Example.Order.Create@PROCESSED.pdf">详细报告 (PDF)-PROCESSED</a></li></ul><blockquote><p style="margin-left:0; margin-right:0">命令等待策略（<code>WaitStrategy</code>）为<span>&nbsp;</span><code>SENT</code><span>&nbsp;</span>模式，下单命令（<code>CreateOrder</code>）写请求 API 经过 2 分钟的压测，平均 TPS 为<span>&nbsp;</span><em>47838</em>，峰值为<span>&nbsp;</span><em>86200</em>，平均响应时间为<span>&nbsp;</span><em>217</em><span>&nbsp;</span>毫秒。</p></blockquote><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">&nbsp;</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="SENT" src="https://static.oschina.net/uploads/img/202312/13135013_iWxL.png" referrerpolicy="no-referrer"></p><blockquote><p style="margin-left:0; margin-right:0">命令等待策略（<code>WaitStrategy</code>）为<span>&nbsp;</span><code>PROCESSED</code><span>&nbsp;</span>模式，下单命令（<code>CreateOrder</code>）写请求 API 经过 2 分钟的压测，平均 TPS 为<span>&nbsp;</span><em>18230</em>，峰值为<span>&nbsp;</span><em>25506</em>，平均响应时间为<span>&nbsp;</span><em>268</em><span>&nbsp;</span>毫秒。</p></blockquote><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="CreateOrder-PROCESSED" src="https://gitee.com/AhooWang/Wow/raw/main/document/example/perf/Example.Order.Create@PROCESSED.png" referrerpolicy="no-referrer"></p><h2>事件源</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-EventSourcing" src="https://static.oschina.net/uploads/img/202312/13135014_lJcu.svg" referrerpolicy="no-referrer"></p><h2>可观测性</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-Observability" src="https://static.oschina.net/uploads/img/202312/13135014_YAFd.png" referrerpolicy="no-referrer"></p><h2>OpenAPI (Spring WebFlux 集成)</h2><blockquote><p style="margin-left:0; margin-right:0">自动注册<span>&nbsp;</span><strong>命令</strong><span>&nbsp;</span>路由处理函数 (<code>HandlerFunction</code>) ，开发人员仅需编写领域模型，即可完成服务开发。</p></blockquote><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-Spring-WebFlux-Integration" src="https://static.oschina.net/uploads/img/202312/13135014_lVJm.png" referrerpolicy="no-referrer"></p><h2>测试套件：80%+ 的测试覆盖率轻而易举</h2><blockquote><p style="margin-left:0; margin-right:0">Given -&gt; When -&gt; Expect .</p></blockquote><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-CI-Flow" src="https://static.oschina.net/uploads/img/202312/13135014_vlP2.png" referrerpolicy="no-referrer"></p><h2>前置条件</h2><ul><li>理解<span>&nbsp;</span><strong>领域驱动设计</strong>：《实现领域驱动设计》、《领域驱动设计：软件核心复杂性应对之道》</li><li>理解<span>&nbsp;</span><strong>命令查询职责分离</strong>（CQRS）</li><li>理解<span>&nbsp;</span><strong>事件源架构</strong></li><li>理解<span>&nbsp;</span><strong>响应式编程</strong></li></ul><h2>Example</h2><h3>订单服务（Kotlin）</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/AhooWang/Wow/blob/main/example">Example-Order</a></p><h3>银行转账（JAVA）</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/AhooWang/Wow/blob/main/example/transfer">Example-Transfer</a></p><h2>单元测试套件</h2><h3>80%+ 的测试覆盖率轻而易举。</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Test Coverage" src="https://static.oschina.net/uploads/img/202312/13135014_MHRR.png" referrerpolicy="no-referrer"></p><blockquote><p style="margin-left:0; margin-right:0">Given -&gt; When -&gt; Expect .</p></blockquote><h3>Aggregate Unit Test (<code>AggregateVerifier</code>)</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/AhooWang/Wow/blob/main/example/example-domain/src/test/kotlin/me/ahoo/wow/example/domain/order/OrderTest.kt">Aggregate Test</a></p><pre><code><span style="color:#d73a49">internal</span><span><span style="color:#d73a49">class</span><span style="color:#6f42c1">OrderTest</span></span>{

    <span style="color:#6a737d">@Test</span><span style="color:#d73a49">private</span><span><span style="color:#d73a49">fun</span><span style="color:#6f42c1">createOrder</span><span>()</span></span> {
        <span style="color:#d73a49">val</span> tenantId = GlobalIdGenerator.generateAsString()
        <span style="color:#d73a49">val</span> customerId = GlobalIdGenerator.generateAsString()

        <span style="color:#d73a49">val</span> orderItem = OrderItem(
            GlobalIdGenerator.generateAsString(),
            GlobalIdGenerator.generateAsString(),
            BigDecimal.valueOf(<span>10</span>),
            <span>10</span>,
        )
        <span style="color:#d73a49">val</span> orderItems = listOf(orderItem)
        <span style="color:#d73a49">val</span> inventoryService = <span style="color:#d73a49">object</span> : InventoryService {
            <span style="color:#d73a49">override</span><span><span style="color:#d73a49">fun</span><span style="color:#6f42c1">getInventory</span><span>(productId: <span style="color:#d73a49">String</span>)</span></span>: Mono&lt;<span>Int</span>&gt; {
                <span style="color:#d73a49">return</span> orderItems.filter { it.productId == productId }.map { it.quantity }.first().toMono()
            }
        }
        <span style="color:#d73a49">val</span> pricingService = <span style="color:#d73a49">object</span> : PricingService {
            <span style="color:#d73a49">override</span><span><span style="color:#d73a49">fun</span><span style="color:#6f42c1">getProductPrice</span><span>(productId: <span style="color:#d73a49">String</span>)</span></span>: Mono&lt;BigDecimal&gt; {
                <span style="color:#d73a49">return</span> orderItems.filter { it.productId == productId }.map { it.price }.first().toMono()
            }
        }
        aggregateVerifier&lt;Order, OrderState&gt;(tenantId = tenantId)
            .inject(DefaultCreateOrderSpec(inventoryService, pricingService))
            .given()
            .`<span style="color:#d73a49">when</span>`(CreateOrder(customerId, orderItems, SHIPPING_ADDRESS, <span style="color:#005cc5">false</span>))
            .expectEventCount(<span>1</span>)
            .expectEventType(OrderCreated::<span><span style="color:#d73a49">class</span>.<span style="color:#6f42c1">java</span>)</span>
            .expectStateAggregate {
                assertThat(it.aggregateId.tenantId, equalTo(tenantId))
            }
            .expectState {
                assertThat(it.id, notNullValue())
                assertThat(it.customerId, equalTo(customerId))
                assertThat(it.address, equalTo(SHIPPING_ADDRESS))
                assertThat(it.items, equalTo(orderItems))
                assertThat(it.status, equalTo(OrderStatus.CREATED))
            }
            .verify()
    }

    <span style="color:#6a737d">@Test</span><span><span style="color:#d73a49">fun</span><span style="color:#6f42c1">createOrderGivenEmptyItems</span><span>()</span></span> {
        <span style="color:#d73a49">val</span> customerId = GlobalIdGenerator.generateAsString()
        aggregateVerifier&lt;Order, OrderState&gt;()
            .inject(mockk&lt;CreateOrderSpec&gt;(), <span style="color:#032f62">"createOrderSpec"</span>)
            .given()
            .`<span style="color:#d73a49">when</span>`(CreateOrder(customerId, listOf(), SHIPPING_ADDRESS, <span style="color:#005cc5">false</span>))
            .expectErrorType(IllegalArgumentException::<span><span style="color:#d73a49">class</span>.<span style="color:#6f42c1">java</span>)</span>
            .expectStateAggregate {
                <span style="color:#6a737d">/*
                 * 该聚合对象处于未初始化状态，即该聚合未创建成功.
                 */</span>
                assertThat(it.initialized, equalTo(<span style="color:#005cc5">false</span>))
            }.verify()
    }

    <span style="color:#6a737d">/**
     * 创建订单-库存不足
     */</span><span style="color:#6a737d">@Test</span><span><span style="color:#d73a49">fun</span><span style="color:#6f42c1">createOrderWhenInventoryShortage</span><span>()</span></span> {
        <span style="color:#d73a49">val</span> customerId = GlobalIdGenerator.generateAsString()
        <span style="color:#d73a49">val</span> orderItem = OrderItem(
            GlobalIdGenerator.generateAsString(),
            GlobalIdGenerator.generateAsString(),
            BigDecimal.valueOf(<span>10</span>),
            <span>10</span>,
        )
        <span style="color:#d73a49">val</span> orderItems = listOf(orderItem)
        <span style="color:#d73a49">val</span> inventoryService = <span style="color:#d73a49">object</span> : InventoryService {
            <span style="color:#d73a49">override</span><span><span style="color:#d73a49">fun</span><span style="color:#6f42c1">getInventory</span><span>(productId: <span style="color:#d73a49">String</span>)</span></span>: Mono&lt;<span>Int</span>&gt; {
                <span style="color:#d73a49">return</span> orderItems.filter { it.productId == productId }
                    <span style="color:#6a737d">/*
                     * 模拟库存不足
                     */</span>
                    .map { it.quantity - <span>1</span> }.first().toMono()
            }
        }
        <span style="color:#d73a49">val</span> pricingService = <span style="color:#d73a49">object</span> : PricingService {
            <span style="color:#d73a49">override</span><span><span style="color:#d73a49">fun</span><span style="color:#6f42c1">getProductPrice</span><span>(productId: <span style="color:#d73a49">String</span>)</span></span>: Mono&lt;BigDecimal&gt; {
                <span style="color:#d73a49">return</span> orderItems.filter { it.productId == productId }.map { it.price }.first().toMono()
            }
        }

        aggregateVerifier&lt;Order, OrderState&gt;()
            .inject(DefaultCreateOrderSpec(inventoryService, pricingService))
            .given()
            .`<span style="color:#d73a49">when</span>`(CreateOrder(customerId, orderItems, SHIPPING_ADDRESS, <span style="color:#005cc5">false</span>))
            <span style="color:#6a737d">/*
             * 期望：库存不足异常.
             */</span>
            .expectErrorType(InventoryShortageException::<span><span style="color:#d73a49">class</span>.<span style="color:#6f42c1">java</span>)</span>
            .expectStateAggregate {
                <span style="color:#6a737d">/*
                 * 该聚合对象处于未初始化状态，即该聚合未创建成功.
                 */</span>
                assertThat(it.initialized, equalTo(<span style="color:#005cc5">false</span>))
            }.verify()
    }
}</code></pre><h3>Saga Unit Test (<code>SagaVerifier</code>)</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/AhooWang/Wow/blob/main/example/example-domain/src/test/kotlin/me/ahoo/wow/example/domain/cart/CartSagaTest.kt">Saga Test</a></p><pre><code><span><span style="color:#d73a49">class</span><span style="color:#6f42c1">CartSagaTest</span></span>{

    <span style="color:#6a737d">@Test</span><span><span style="color:#d73a49">fun</span><span style="color:#6f42c1">onOrderCreated</span><span>()</span></span> {
        <span style="color:#d73a49">val</span> orderItem = OrderItem(
            GlobalIdGenerator.generateAsString(),
            GlobalIdGenerator.generateAsString(),
            BigDecimal.valueOf(<span>10</span>),
            <span>10</span>,
        )
        sagaVerifier&lt;CartSaga&gt;()
            .`<span style="color:#d73a49">when</span>`(
                mockk&lt;OrderCreated&gt; {
                    every {
                        customerId
                    } returns <span style="color:#032f62">"customerId"</span>
                    every {
                        items
                    } returns listOf(orderItem)
                    every {
                        fromCart
                    } returns <span style="color:#005cc5">true</span>
                },
            )
            .expectCommandBody&lt;RemoveCartItem&gt; {
                assertThat(it.id, equalTo(<span style="color:#032f62">"customerId"</span>))
                assertThat(it.productIds, hasSize(<span>1</span>))
                assertThat(it.productIds.first(), equalTo(orderItem.productId))
            }
            .verify()
    }
}</code></pre><div>
 &nbsp;
</div><h2>设计</h2><h3>聚合建模</h3><table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:0px; border:none; box-sizing:border-box; color:#40485b; display:block; font-family:-apple-system,&quot;system-ui&quot;,&quot;Segoe UI&quot;,Helvetica,Arial,&quot;Apple Color Emoji&quot;,&quot;Segoe UI Emoji&quot;,&quot;Segoe UI Symbol&quot;,&quot;Liberation Sans&quot;,&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,&quot;Hiragino Sans GB&quot;,&quot;Wenquanyi Micro Hei&quot;,&quot;WenQuanYi Zen Hei&quot;,&quot;ST Heiti&quot;,SimHei,SimSun,&quot;WenQuanYi Zen Hei Sharp&quot;,sans-serif; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; line-height:inherit; margin:0px 0px 16px; max-width:100%; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; word-break:initial; word-spacing:0px"><tbody><tr><th><strong>Single Class</strong></th><th><strong>Inheritance Pattern</strong></th><th><strong>Aggregation Pattern</strong></th></tr></tbody><tbody><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px; text-align:center"><img alt="Single Class - Modeling" src="https://static.oschina.net/uploads/img/202312/13135015_ZxxP.svg" referrerpolicy="no-referrer"></td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px; text-align:center"><img alt="Inheritance Pattern- Modeling" src="https://static.oschina.net/uploads/img/202312/13135015_I09q.svg" referrerpolicy="no-referrer"></td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px; text-align:center"><img alt="Aggregation Pattern- Modeling" src="https://static.oschina.net/uploads/img/202312/13135015_1pS1.svg" referrerpolicy="no-referrer"></td></tr></tbody></table><h3>加载聚合</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Load Aggregate" src="https://static.oschina.net/uploads/img/202312/13135015_puJx.svg" referrerpolicy="no-referrer"></p><h3>聚合状态流</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Aggregate State Flow" src="https://static.oschina.net/uploads/img/202312/13135015_I8NI.svg" referrerpolicy="no-referrer"></p><h3>发送命令</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Send Command" src="https://static.oschina.net/uploads/img/202312/13135015_sU6r.svg" referrerpolicy="no-referrer"></p><h3>命令与事件流</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Command And Event Flow" src="https://static.oschina.net/uploads/img/202312/13135016_5HaD.svg" referrerpolicy="no-referrer"></p><h2>事件补偿</h2><h3>用例图</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Event-Compensation-UserCase" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Event-Compensation-UserCase.svg" referrerpolicy="no-referrer"></p><h3>执行时序图</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Event-Compensation" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Event-Compensation.svg" referrerpolicy="no-referrer"></p><h3>Dashboard</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Compensation-Dashboard" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/compensation-dashboard.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Compensation-Dashboard-Error" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/compensation-dashboard-error.png" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 22 Dec 2023 01:04:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272099/wow-2-11-2-released</guid>
            <link>https://www.oschina.net/news/272099/wow-2-11-2-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
    </channel>
</rss>
