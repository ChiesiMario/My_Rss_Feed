<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[开源中国-软件更新资讯]]>
        </title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="https://rsshub.app/oschina/news/project" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[开源中国-软件更新资讯 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Sat, 30 Dec 2023 12:28:32 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[FML-0.5.8 版本发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#e6edf3; text-align:start"><span style="color:#000000">FML——快速（维度）建模语言是一个用 Java 实现的维度建模语言 SDK，主要是参考了 kimball 建模理论和阿里 Onedata 方法论，定义一套用于表达上述理论中的模型语法，来做模型设计，该语言是面向数据建模和数据开发同学，同时针对为了解决模型发布的效率，基于当前 SDK 封装了一套从模型表达转换其他不同引擎的 DDL 能力，目前引擎包括：Hive，Hologres，Mysql 等。 使用 Java 实现目的主要是使用了 java 的语法解析工具来做语法的解析处理。 目前 FML 可以在 Dataworks 的智能建模工具上使用，方便建模同学能够快速的调整模型结构。 具体可以参考这里：</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhelp.aliyun.com%2Fzh%2Fdataworks%2Fuser-guide%2Fuse-fml-statements-to-configure-and-manage-data-tables%3Fspm%3Da2c4g.11174283.0.0.16b4467fOJ1Kbg" target="_blank">https://help.aliyun.com/zh/dataworks/user-guide/use-fml-statements-to-configure-and-manage-data-tables?spm=a2c4g.11174283.0.0.16b4467fOJ1Kbg</a></p><ul><li>说明文档： 
  <ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Falibaba%2Ffast-modeling-language%2Fblob%2Fmain%2FREADME_zh_CN.md" target="_blank">https://github.com/alibaba/fast-modeling-language/blob/main/README_zh_CN.md</a></li></ul></li><li>开发手册： 
  <ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Falibaba.github.io%2Ffast-modeling-language%2F%23%2F" target="_blank">https://alibaba.github.io/fast-modeling-language/#/</a></li></ul></li></ul><p style="color:#e6edf3; text-align:start"><span style="color:#000000"><strong>版本：0.5.8-jdk8</strong><br> 新功能（new features）<br> Core<br> • 新增 Create ODS TABLE<br> • 新增 Show Statics 语句</span></p><p style="color:#e6edf3; text-align:start"><span style="color:#000000">Transformer<br> • 新增 FML 到 Sqlite 的转换<br> • 新增 FML 到 Adb Mysql 的转换</span></p><p style="color:#e6edf3; text-align:start"><span style="color:#000000">向下兼容（compatibility）<br> 无</span></p><p style="color:#e6edf3; text-align:start"><span style="color:#000000">过期功能（deprecations）<br> 无<br> 安全漏洞修复（vulnerability）<br> 无</span></p><h1>maven 依赖</h1><p style="color:#e6edf3; text-align:start"><span style="color:#000000">项目根 pom 增加以下依赖：</span></p><div><pre><code>  &lt;dependencyManagement&gt;
            &lt;dependency&gt;
                &lt;groupId&gt;com.aliyun.fastmodel&lt;/groupId&gt;
                &lt;artifactId&gt;fastmodel-bom&lt;/artifactId&gt;
                &lt;version&gt;0.5.8-jdk8&lt;/version&gt;
                &lt;type&gt;pom&lt;/type&gt;
                &lt;scope&gt;import&lt;/scope&gt;
            &lt;/dependency&gt;
&lt;/dependencyManagement&gt;
</code></pre><div>
  子 module 增加依赖
  <br> 解析器的接入
 </div></div><div><pre><code>&lt;!--fastmodel 解析器--&gt; 
 &lt;dependency&gt;
      &lt;groupId&gt;com.aliyun.fastmodel&lt;/groupId&gt;
      &lt;artifactId&gt;fastmodel-core&lt;/artifactId&gt;
 &lt;/dependency&gt;
 &lt;dependency&gt;
      &lt;groupId&gt;com.aliyun.fastmodel&lt;/groupId&gt;
      &lt;artifactId&gt;fastmodel-parser&lt;/artifactId&gt;
 &lt;/dependency&gt;
</code></pre><div>
  转化器接入
 </div></div><div><pre><code>    &lt;dependency&gt;
      &lt;groupId&gt;com.aliyun.fastmodel&lt;/groupId&gt;
      &lt;artifactId&gt;fastmodel-transform-hive&lt;/artifactId&gt;
&lt;/dependency&gt;
&lt;dependency&gt;
      &lt;groupId&gt;com.aliyun.fastmodel&lt;/groupId&gt;
      &lt;artifactId&gt;fastmodel-transform-hologres&lt;/artifactId&gt;
&lt;/dependency&gt;
&lt;dependency&gt;
      &lt;groupId&gt;com.aliyun.fastmodel&lt;/groupId&gt;
      &lt;artifactId&gt;fastmodel-transform-adbmysql&lt;/artifactId&gt;
&lt;/dependency&gt;</code></pre></div></div>
                                    ]]>
            </description>
            <pubDate>Sat, 30 Dec 2023 06:01:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/273416/fml-0-5-8-released</guid>
            <link>https://www.oschina.net/news/273416/fml-0-5-8-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Golang 通用代码生成器仙童已发布 2.4.0 电音仙女尝鲜版二及其视频，详细介绍了三大部分生成功能群]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><strong>Golang 通用代码生成器仙童已发布 2.4.0 电音仙女尝鲜版二及其介绍视频，详细介绍了三大部分生成功能群</strong></p><p>Golang 通用代码生成器仙童已发布 2.4.0 电音仙女尝鲜版二及其介绍视频。详细介绍了三大部分生成功能群。<br> 三大部分生成功能群即高级定制功能群，部分生成功能群和自动生成差异版本功能群。此三个功能群为用户在整个软件开发周期中多次，迭代式的全程使用通用代码生成器设计。极大的提高了工作效率，欢迎试用。<br> 视频请见：</p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV15N4y1x75p%2F" target="_blank">https://www.bilibili.com/video/BV15N4y1x75p/</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1Q64y1H75r%2F" target="_blank">https://www.bilibili.com/video/BV1Q64y1H75r/</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">Golang 通用代码生成器仙童已发布 2.4.0 电音仙女尝鲜版一介绍视频请见：</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">正常模式：</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1fw411V77i%2F" target="_blank">https://www.bilibili.com/video/BV1fw411V77i/</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">哑数据模式：</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1nu4y1K7sz%2F" target="_blank">https://www.bilibili.com/video/BV1nu4y1K7sz/</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">电音仙女版本支持日期和日期时间。支持三大部分生成功能群。支持枚举。支持哑数据模式。支持用户管理自己的资料和密码。技术状态和最新版的 Rust 通用代码生成器红莲的技术状态一致。非常便利大家的使用。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="background-color:#ffffff; color:#333333">代码生成器项目地址：</span><a href="https://gitee.com/jerryshensjf/Fairchild">https://gitee.com/jerryshensjf/Fairchild</a><br><span style="background-color:#ffffff; color:#333333">二进制发布包下载地址：</span><a href="https://gitee.com/jerryshensjf/Fairchild/attach_files">https://gitee.com/jerryshensjf/Fairchild/attach_files</a></p><h1>Go 语言通用代码生成器：仙童</h1><h3>简介</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Go 语言通用代码生成器：仙童</p><h3>百度话题</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">#通用代码生成器#</p><h3>版本更新</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Golang 通用代码生成器仙童已发布 2.4.0 电音仙女（TechnoFairy）尝鲜版二，改进了三大部分生成功能群。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Golang 通用代码生成器仙童已发布 2.4.0 电音仙女（TechnoFairy）尝鲜版一，支持日期和日期时间。支持三大部分生成功能群。支持枚举。支持哑数据模式。支持用户管理自己的资料和密码。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Go 语言通用代码生成器仙童 Beta 7 版。完善支持 Oracle 数据库，并有错误修正。可以从源码编译生成构建。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Go 语言通用代码生成器仙童 Beta6 版，发布最新介绍视频，支持从源码构建代码生成器。您只需下载源码，即可以 mvn install 编译构建 Go 语言通用代码生成器仙童。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Go 语言通用代码生成器：仙童 Beta5 版。彻底修复弹性登录模块，修复了注册，修改密码，管理员新增用户时使用过时加密算法问题。更多测试。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Go 语言通用代码生成器：仙童 Beta3 版。修复几处错误。包括登录权限问题和图形报表 UI 的语言问题。更多测试。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">GO 语言通用代码生成器仙童已发布 Beta2 版，支持 Rust 语言兼容性，即可以使用 Rust 通用代码生成器莲花的 SGS2 模板直接生成 Go 语言代码生成物。同时支持 Java 语言兼容性。即支持 Java 通用代码生成器的模板直接生成 Go 语言代码生成物。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">仙童 Beta 版，此版本修复了 Excelize 组件 API 变化引起的编译错误，另有文档更新和更多检查。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">仙童尝鲜版十二。支持 PDF 格式数据导出。在尝鲜版十一基础上有增强和修错。流畅支持模板向导代码生成。支持三大变形功能群，支持四种数据库。已完成所有功能规划，下一个版本即可进入 Beta 阶段。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版十一。在尝鲜版十基础上有增强和修错，并支持数据库表与字段的中文注释和兼容所有 java 通用代码生成器的 SGS2 模板，直接生成 go 语言后端和 Vue 前端，并自动格式化 java 语言 SGS2 模板至 go 语言模板。支持三大变形功能群，支持四种数据库，支持 Excel 数据导出。支持图形报表和复杂版面，支持弹性登录模块。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版十是第一个稳定版本。功能基本完备，所有示例通过检测，初步完整测试。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版九在尝鲜版八基础上有功能增强和缺陷修复。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版八初步支持 SimpleAuth 弹性登录界面。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版 7 是一个错误修复版本。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版 5 支持前端和后端的复杂版面和图形报表功能</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版 4 支持 Vue 和 ElementUI 的基于 Node.js 的独立前端。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版 3 进行了广泛的测试和修错。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版２新增对 Oracle 数据库的支持。</p><h3>架构</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">基于 Java 通用代码生成器：光的架构。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">生成的代码基于 go 语言，使用 gin 作为 web 框架。目前支持 MariaDB,MySQL,PostgreSQL 和 Oracle 四种数据库。支持生成 Vue 和 ElementUI 的基于 Node.js 的独立前端。支持 Excel,PDF 两种数据导出格式。</p><h3>开发测试环境</h3><ul><li>jdk 17</li><li>Apache Tomcat 9</li><li>Node.js 14</li><li>golang 1.19</li><li>MariaDB 15.1</li><li>MySQL 8</li><li>PostgreSQL 14</li><li>Oracle 11</li></ul><h3>B 站介绍视频</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Golang 通用代码生成器仙童 2.4.0 电音仙女尝鲜版二介绍视频请见：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV15N4y1x75p%2F">https://www.bilibili.com/video/BV15N4y1x75p/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1Q64y1H75r%2F">https://www.bilibili.com/video/BV1Q64y1H75r/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Golang 通用代码生成器仙童 2.4.0 电音仙女尝鲜版一介绍视频请见：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1fw411V77i%2F">https://www.bilibili.com/video/BV1fw411V77i/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1nu4y1K7sz%2F">https://www.bilibili.com/video/BV1nu4y1K7sz/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Go 语言通用代码生成器仙童已发布 Beta7 版视频,请见：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1uM4y1774F%2F">https://www.bilibili.com/video/BV1uM4y1774F/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Go 语言通用代码生成器仙童 Beta6 版视频,请见：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1Jg4y1473X%2F">https://www.bilibili.com/video/BV1Jg4y1473X/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">​Go 语言通用代码生成器仙童已发布 Beta5 版，发布最新介绍视频，彻底修复弹性登录模块。修复了注册，修改密码，管理员新增用户时使用过时加密算法问题。更多测试。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">视频请见：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1xg4y1E7FA%2F">https://www.bilibili.com/video/BV1xg4y1E7FA/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">​Beta3 版，请见：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1g84y1n73B%2F">https://www.bilibili.com/video/BV1g84y1n73B/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Beta 版两个视频的合集，请见：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV13D4y1G7L4%2F">https://www.bilibili.com/video/BV13D4y1G7L4/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Beta2 版：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV13M411A7nH%2F">https://www.bilibili.com/video/BV13M411A7nH/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">Beta 版：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV19j411T7wx%2F">https://www.bilibili.com/video/BV19j411T7wx/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版十二：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV14K411i7DM%2F">https://www.bilibili.com/video/BV14K411i7DM/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版十一：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1ce411P7qU%2F">https://www.bilibili.com/video/BV1ce411P7qU/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">尝鲜版九：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1a5411R7Zt%2F">https://www.bilibili.com/video/BV1a5411R7Zt/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1pR4y1w7aB%2F">https://www.bilibili.com/video/BV1pR4y1w7aB/</a></p><h3>项目图片</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="Image description" src="https://images.gitee.com/uploads/images/2021/1104/210826_16fb1ca2_1203742.jpeg" referrerpolicy="no-referrer"></p><h3>最新大版本号</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">正在研发的最新大版本号是仙童 2.4.0 电音仙女　TechnoFairy 短名 TF。对标 java 通用代码生成器光 2.4.0 电音之王和 Rust 通用代码生成器红莲。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="输入图片说明" src="https://gitee.com/jerryshensjf/Fairchild/raw/master/tf2.jpg" referrerpolicy="no-referrer"></p><h3>百度话题</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">＃通用代码生成器＃</p><h3>代码生成器截图</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">代码生成器正在研发中，Beta7 版已发布，这是一个稳定版本。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="Image description" src="https://images.gitee.com/uploads/images/2021/1112/202857_c7a40dc0_1203742.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="Image description" src="https://images.gitee.com/uploads/images/2021/1112/202911_c2b9a341_1203742.png" referrerpolicy="no-referrer"></p><h3>电音仙女尝鲜版二下载</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">下载地址：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/jerryshensjf/Fairchild/attach_files">https://gitee.com/jerryshensjf/Fairchild/attach_files</a></p><h3>仙童的安装运行</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">仙童是使用 Java 语言写成的代码生成器。运行仙童您需要装好 Java8 和安装好 Tomcat9 或 8.5 应用服务器。并把仙童的 war 包部署在 Tomcat 的 webapps 目录下。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">代码生成物的运行还需要安装好 Go 语言开发环境，您要使用 go mod 管理依赖，并把代码生成物解压在 go 语言工作空间的 src 文件夹的一级子目录下。还需要对应的数据库服务器运行代码生成物的建库 sql 脚本。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">前端代码生成物的运行需要装好 node.js 运行环境并安装 js 依赖库。</p><h3>Vue 独立前端截图</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="输入图片说明" src="https://gitee.com/jerryshensjf/Fairchild/raw/master/Fc_login.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="输入图片说明" src="https://gitee.com/jerryshensjf/Fairchild/raw/master/fc_list.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="输入图片说明" src="https://gitee.com/jerryshensjf/Fairchild/raw/master/fc_img.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="输入图片说明" src="https://gitee.com/jerryshensjf/Fairchild/raw/master/fc_mtm2.png" referrerpolicy="no-referrer"></p><h3>代码生成物截图</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="Image description" src="https://images.gitee.com/uploads/images/2021/1122/151921_f4271962_1203742.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="Image description" src="https://images.gitee.com/uploads/images/2021/1122/151935_cf6c7223_1203742.png" referrerpolicy="no-referrer"></p><h3>源码编译用户指南</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">通用代码生成器已经支持自己编译源码，我已把原来缺的前端代码生成器的 jar 包上传。支持大家自行编译源码。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">需要注意的是，现在我的开发平台是 Fedora 37 上的 openjdk 17。所以大家编译源码最好使用 openjdk17。编译好的 war 包运行在 apache tomcat 9.0 上。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">已有 jdk8 的用户报告默认下载的代码生成器 war 包在他的平台上无法运行。您如果遇到类似问题请报告。我的电子邮件是：<a href="https://www.oschina.net/action/GoToLink?url=mailto%3Ajerry_shen_sjf%40qq.com" target="_blank">jerry_shen_sjf@qq.com</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">附 openjdk 17 下载地址：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fjdk.java.net%2Fjava-se-ri%2F17">https://jdk.java.net/java-se-ri/17</a></p><h3>使用前端功能的注意事项</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">由于图片文件比较大，原来前端使用 cnpm instll 安装类型，npm run dev 运行有所改动，改为先使用 npm install --registry=<a href="https://gitee.com/link?target=https%3A%2F%2Fregistry.npm.taobao.org%25E5%25AE%2589%25E8%25A3%2585%25E7%25B1%25BB%25E5%25BA%2593%25EF%25BC%258C%25E5%2587%25BA%25E9%2594%2599%25E5%2590%258E%25E4%25BD%25BF%25E7%2594%25A8cnpm">https://registry.npm.taobao.org 安装类库，出错后使用 cnpm</a><span>&nbsp;</span>install 安装类库， 使用 node --max-http-header-size=1000000 ./node_modules/.bin/webpack-dev-server --inline --progress --config build/webpack.dev.conf.js　 运行系统。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">您也可以从安装好的本系列代码生成器的前端项目中拷贝 node_modules 目录，即可运行前端。</p><h4>node-sass 不兼容的解决办法</h4><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">办法一：</p><div><div><pre><span>npm uninstall node-sass</span><span>npm install sass-loader</span><span>npm i node-sass --sass_binary_site=https://npm.taobao.org/mirrors/node-sass/</span></pre><div>
   &nbsp;
  </div></div></div><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">办法二：</p><div><div><pre><span>npm uninstall sass-loader node-sass //卸载</span><span>npm install sass-loader@7.3.1 node-sass@4.14.1 --save-dev //安装对应的版本</span></pre><div>
   &nbsp;
  </div></div></div><h3>动词算子式代码生成器的应用场景</h3><ol><li>快速原型：项目或演示场景使用。可以生成具有关系型数据库后端，使用 MyBatis 的数据库后端和 Vue 和 ElementUI 前端。</li><li>项目前期：如果项目和动词算子式代码生成器兼容，可以使用动词算子式代码生成器执行项目前期的自动化生成。</li></ol><h3>源码研读者注意事项</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">无垠式代码生成器第一个完整版本源码，有兴趣可以抄写一下：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/jerryshensjf/InfinityGPGenerator_0_6_5">https://gitee.com/jerryshensjf/InfinityGPGenerator_0_6_5</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">相关技术视频：</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1fX4y1u7Bn%2F">https://www.bilibili.com/video/BV1fX4y1u7Bn/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1rv41187qY%2F">https://www.bilibili.com/video/BV1rv41187qY/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1xv41187cA%2F">https://www.bilibili.com/video/BV1xv41187cA/</a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1t64y1v7WA%2F">https://www.bilibili.com/video/BV1t64y1v7WA/</a></p></div>
                                    ]]>
            </description>
            <pubDate>Sat, 30 Dec 2023 03:23:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/273399</guid>
            <link>https://www.oschina.net/news/273399</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Taro 3.6.22 发布，BAT 小程序、H5 与 RN 端统一框架]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#333333">Taro 3.6.22 现已发布。Taro 是一个开放式跨端跨框架解决方案，支持使用 React/Vue/Nerv 等框架来开发微信 / 京东 / 百度 / 支付宝 / 字节跳动 / QQ 小程序 / H5 等应用。</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="color:#333333">此版本具体更新内容如下：</span></p><h4><strong>特性</strong></h4><p style="text-align:start"><strong>小程序</strong></p><ul><li>新增了小程序编译模式（CompileMode）功能，支持手动对组件进行优化，以提升渲染性能</li><li>新增了 webpack 不同级别编译错误的处理方式</li></ul><p style="text-align:start"><strong>H5</strong></p><ul><li>新增了对 navigationStyle 配置的处理逻辑</li><li>移除了 mobile-detect 依赖，改为直接使用 UA 或者 platform 来获取平台和设备信息</li></ul><h4><strong>修复</strong></h4><ul><li>修复了 esbuild-loader 的 AST 兼容问题</li><li>修复了执行 "taro init projectname" 方法时报错的问题</li><li>修复了初始化项目时文件权限丢失的问题</li><li>排除了 esbuild 不支持的别名配置，以避免错误的抛出</li></ul><p style="text-align:start"><strong>小程序</strong></p><ul><li>修复 esbuild-loader 的 ast 兼容问题</li><li>修复了 alias 在递归组件配置中获取不完整的问题</li></ul><p style="text-align:start"><strong>H5</strong></p><ul><li>修复了在 H5 端开启 enablePullDownRefresh 后导致页面白屏的问题，fix<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNervJS%2Ftaro%2Fissues%2F14869" target="_blank">#14869</a></li><li>修复了在 window 环境下无法生成 definition.json 文件的问题</li><li>优化了 Image 组件兼容 mode 为空串和 src 无值的情况</li></ul><h4><strong>Typings</strong></h4><ul><li>新增了微信小程序异步 requirePlugin 的重载类型</li></ul><p>更新说明：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNervJS%2Ftaro%2Freleases%2Ftag%2Fv3.6.22" target="_blank">https://github.com/NervJS/taro/releases/tag/v3.6.22</a></p></div>
                                    ]]>
            </description>
            <pubDate>Sat, 30 Dec 2023 02:25:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/273389/taro-3-6-22-released</guid>
            <link>https://www.oschina.net/news/273389/taro-3-6-22-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[jsoup 1.17.2 发布，Java HTML 解析器]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">jsoup 1.17.2 现已发布</span><span style="color:#000000">。jsoup 是一个用于处理 real-world&nbsp;HTML 的 Java 库。它使用最好的 HTML5 DOM 方法和 CSS 选择器提供了一个非常方便的 API 用于提取和操作数据。</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="color:#000000">下载地址：</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjsoup.org%2Fdownload" target="_blank">https://jsoup.org/download</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="color:#000000">具体更新内容包括：</span></p><h4><strong><span><span><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>改进</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></h4><ul><li><strong>Attribute object accessors</strong>：添加<code>Element.attribute(String)</code>和<code>Attributes.attribute(String)</code>以便更简单地获取<code>Attribute</code>对象。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjhy%2Fjsoup%2Fissues%2F2069" target="_blank">2069</a></li><li><strong>Attribute source tracking</strong>：如果 source tracking 已打开，并且属性的键已更改（通过<code>Attribute.setKey(String)</code>），则现在仍会在<code>Attribute.sourceRange()</code>中跟踪 source range。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjhy%2Fjsoup%2Fissues%2F2070" target="_blank">2070</a></li><li><strong>Wildcard attribute selector</strong>：添加了对具有任何属性选择器的<code>[*]</code>元素的支持。并且还恢复了对通过空属性名称前缀 (&nbsp;<code>[^]</code>) 选择的支持。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjhy%2Fjsoup%2Fissues%2F2079" target="_blank">2079</a></li></ul><h4><strong><span><span><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>Bug 修复</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></h4><ul><li><strong>Mixed-cased source position</strong>：跟踪属性的源位置时，如果源属性名称是混合大小写的，但解析器是小写规范化属性名称，则无法正确跟踪该属性的源位置。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjhy%2Fjsoup%2Fissues%2F2067" target="_blank">2067</a></li><li><strong>Source position NPE</strong>：跟踪正文片段解析的源位置时，抛出空指针异常。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjhy%2Fjsoup%2Fissues%2F2068" target="_blank">2068</a></li><li><strong>Multi-point emoji entity</strong>：多点编码的表情符号实体可能会被错误地解码为替换字符。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjhy%2Fjsoup%2Fissues%2F2074" target="_blank">2074</a></li><li><strong>Selector sub-expressions</strong>：（回归）在像<code>parent [attr=va], other</code>之类的选择器中，<code>, OR</code>被绑定到<code>[attr=va]</code>而不是<code>parent [attr=va]</code>，导致不正确的选择。该修复包含一个 EvaluatorDebug 类，可生成一个 sexpr 来表示查询，从而使查询解析测试更简单、更彻底。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjhy%2Fjsoup%2Fissues%2F2073" target="_blank">2073</a></li><li><strong>XML CData output</strong>：从解析的 HTML 生成 XML 语法输出时，包含（伪）CData 部分的脚本节点将添加无关的 CData 部分，从而导致脚本执行错误。现在，<br> 如果数据尚未位于 CData 部分中，则数据内容将以 HTML/XML/XHTML 多语言格式发出。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjhy%2Fjsoup%2Fissues%2F2078" target="_blank">2078</a></li><li><strong>Thread safety</strong>：<code>:has</code>evaluator 持有一个非线程安全的迭代器，因此如果多个并发线程共享一个 Evaluator object，可能会抛出 NoSuchElement 异常，并且选择的结果可能不正确。现在，迭代器对象是线程本地的。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjhy%2Fjsoup%2Fissues%2F2088" target="_blank">2088</a></li></ul><p><span style="background-color:#ffffff; color:#333333">更新说明：</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjhy%2Fjsoup%2Freleases%2Ftag%2Fjsoup-1.17.2" target="_blank">https://github.com/jhy/jsoup/releases/tag/jsoup-1.17.2</a></p></div>
                                    ]]>
            </description>
            <pubDate>Sat, 30 Dec 2023 02:14:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/273388/jsoup-1-17-2-released</guid>
            <link>https://www.oschina.net/news/273388/jsoup-1-17-2-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[SQL 质量管理 | SQLE 3.2312.0 来啦！]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h1><span style="color:#2584b5">什么是 SQLE？</span></h1><p style="color:black; margin-left:0; margin-right:0"><span>SQLE 是一款全方位的 SQL 质量管理平台，覆盖开发至生产环境的 SQL 审核和管理。支持主流的开源、商业、国产数据库，为开发和运维提供流程自动化能力，提升上线效率，提高数据质量。</span></p><p style="color:black; margin-left:0; margin-right:0"><img alt="" height="654" src="https://oscimg.oschina.net/oscnet/up-ca977f312972ec81590a39c90b40a032042.jpg" width="1475" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0; text-align:center">&nbsp;</p><p style="color:black; margin-left:0; margin-right:0"><span>以下是<span>&nbsp;</span><strong>SQLE 3.2312.0</strong>&nbsp;的 Release Notes。</span></p><h1><span style="color:#2584b5">主要功能介绍</span></h1><h2><span style="color:#2584b5">社区版</span></h2><h3><span style="color:#2584b5">1、支持查看 SQL 所属文件</span></h3><p style="margin-left:0; margin-right:0; text-align:left"><span style="color:#000000">考虑到审核 ZIP 文件和 GIT 仓库文件时，可能包含多个文件，因而无法快速定位 SQL 问题点的问题，本期支持在审核这两个 SQL 来源时，标识 SQL 的具体路径，方便用户快速定位问题 SQL 并修改。</span></p><p style="margin-left:0; margin-right:0; text-align:center"><img alt="" height="1320" src="https://oscimg.oschina.net/oscnet/up-8ef705de4b7ac168b213f18b599255a9ac4.png" width="1718" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0; text-align:left">&nbsp;</p><h3><span style="color:#2584b5">2、JetBrains 插件适配 SQLE V3 版本</span></h3><p style="margin-left:0; margin-right:0; text-align:left"><span style="color:#000000">由于<span>&nbsp;</span></span><span style="color:#000000">SQLE V3<span>&nbsp;</span></span><span style="color:#000000">的接口发生变更，而插件还在使用旧接口，导致 SQLE V3<span>&nbsp;</span></span><span style="color:#000000">无法正常使用 I</span><span style="color:#000000">DE<span>&nbsp;</span></span><span style="color:#000000">插件。</span><span style="color:#000000">本期升级了<span>&nbsp;</span></span><span style="color:#000000">JetBrains 插件，以兼容<span>&nbsp;</span></span><span style="color:#000000">V3 版本<span>&nbsp;</span></span><span style="color:#000000">SQLE。</span></p><h3><span style="color:#2584b5">3、索引创建建议优化</span></h3><p style="margin-left:0; margin-right:0; text-align:left"><span style="color:#000000">本期对索引创建相关规则的代码进行了整体重构，使得不同建议相互独立，解决了原先建议不合理不清晰、覆盖场景不全的问题，具体优化点如下：</span></p><ul><li><p style="margin-left:0; margin-right:0; text-align:left"><strong><span style="color:#000000"><span>修</span></span><span style="color:#000000">复缺陷</span></strong></p><ul><li><p style="margin-left:0; margin-right:0; text-align:left"><span style="color:#000000">修复了三星索引建议中，给出的索引排序建议不合理的问题；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span style="color:#000000">修复了当无法解析 MySQL 版本号时，建议不触发的问题；</span></p></li></ul></li><li><p style="margin-left:0; margin-right:0; text-align:left"><strong><span style="color:#000000">增加场景覆盖</span></strong></p><ul><li><p style="margin-left:0; margin-right:0; text-align:left"><span style="color:#000000">结合 SELECT 选择的列、覆盖索引情况，给出三星索引建议；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span style="color:#000000">增加对函数索引或虚拟列索引的使用建议；</span><span style="color:#000000">完善前缀模式匹配的场景支持；</span></p></li></ul></li><li><p style="margin-left:0; margin-right:0; text-align:left"><strong><span style="color:#000000">优化建议的提示内容</span></strong></p><ul><li><p style="margin-left:0; margin-right:0; text-align:left"><span style="color:#000000">在建议中提示对应的 SQL 内容，方便快速定位问题点。</span></p></li></ul></li></ul><h2><span style="color:#2584b5">企业版</span></h2><h3><span style="color:#2584b5">1、SQL 管控优化</span></h3><p style="margin-left:0; margin-right:0; text-align:left"><span style="color:#000000">本期对 SQL 管控页面做了优化，提高 SQL 管控的能力，具体优化点如下：</span></p><ul><li><p style="margin-left:0; margin-right:0; text-align:left"><span style="color:#000000">增加端点信息和 Schema 信息展示：现在您可以在 SQL 管控页面上综合查看 SQL 的详细数据源信息，这样您可以更准确地判断问题 SQL 的紧急程度；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span style="color:#000000">优化效率低下的查询 SQL：我们解决了现有页面卡顿的问题，提升了查询 SQL 的效率，使您能够更顺畅地使用 SQL 管控页面；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span style="color:#000000">支持 SQL 分析：当您在管控页面上发现有问题的 SQL 时，您可以直接参考 SQL 执行计划和审核建议，以便更准确地判断问题的原因，并缩短问题定位的路径。</span></p></li></ul><h3><span style="color:#2584b5">2、MyBatis 审核优化</span></h3><p style="margin-left:0; margin-right:0; text-align:left"><span style="color:#000000">在本期的更新中，我们对 MyBatis 文件类型的审核支持进行了提升，具体优化如下：</span></p><ul><li><p style="margin-left:0; margin-right:0; text-align:left"><span style="color:#000000">支持 SQL 分析：</span><span style="color:#000000">您可以更全面地了解带有占位符的 SQL 语句的执行情况，从而更好地优化和调整您的查询。</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span style="color:#000000">增加了对包含占位符的 SQL 是否使用索引的检查功能：</span><span style="color:#000000">您可以方便地验证带有占位符的 SQL 是否充分利用了合适的索引，从而提高查询的性能和效率。</span></p></li></ul><p style="color:black; margin-left:0; margin-right:0">&nbsp;</p><h1><span style="color:#2584b5">Release 信息</span></h1><h2><span style="color:#2584b5">社区版</span></h2><p><u>新特性：</u></p><ul><li><p><span>[#2185] JetBrains 插件适配 SQLE V3 版</span></p></li></ul><p><u>优化：</u></p><ul><li><p><span>[#2062] 审核规则完善：</span><span>「避免使用 COUNT(COL)」规则增加对子查询场景的支持</span></p></li><li><p><span>[#2114] 审核规则完善：判断 MyBatis 配置文件解析出来的 SQL 是否使用索引</span></p></li><li><p><span>[#2117] 优化 MySQL 索引建议逻辑</span></p></li><li><p><span>[#2155] 规则模板详情新增规则名模糊查询</span></p></li></ul><p><u>Bug 修复：</u></p><ul><li><p><span>[#2127] 修复创建工单时数据源列表异常的问题</span></p></li><li><p><span>[#2164] 修复使用脚本启动 SQLE，启动失败，但输出启动成功的问题</span></p></li><li><p><span>[#2169] 修复审核规则缺陷</span></p></li><li><p><span>[#2138] 修复当扫描任务去扫描没有开启审核规则的数据源的时候报错的问题</span></p></li><li><p><span>[#2125] 修复无法审核带特殊字符的 SQL 的问题</span></p></li></ul><h2><span style="color:#2584b5">企业版</span></h2><p><u>优化：</u></p><ul><li><p><span>[actiontech/sqle-ee/issues/1271] SQL 管控列表增加 s</span><span>chema<span>&nbsp;</span></span><span>列展示</span></p></li><li><p><span>[actiontech/sqle-ee/issues/1229] 优化 SQL 管控端点信息展示</span></p></li><li><p><span>[actiontech/sqle-ee/issues/1294] DB2 Top SQL 扫描任务优化</span></p></li><li><p><span>[actiontech/sqle-ee/issues/1266] SQL 管控页面支持使用 SQL 分析</span></p></li><li><p><span>[actiontech/sqle-ee/issues/1256] SQL 分析功能支持 MyBatis 文件解析出来的 SQL</span></p></li><li><p><span>[actiontech/sqle-ee/issues/1272] 采集慢日志文件时，支持通过 IP 过滤内容</span></p></li><li><p><span>[actiontech/sqle-ee/issues/1283] 去掉冗余的日志内容</span></p></li></ul><p><u>Bug 修复：</u></p><ul><li><p><span>[actiontech/sqle-ee/issues/1174] 修复 T</span><span>DSQL 审核规则<span>&nbsp;</span></span><span>panic 的</span><span>问题</span></p></li><li><p><span>[actiontech/sqle-ee/issues/1230] 修复慢日志审核结果同步到 SQL 管控，出现相同 SQL 时出错的问题</span></p></li><li><p><span>[actiontech/sqle-ee/issues/1291] 修复智能扫描 MySQL 慢日志部分 schema 提取不到的问题</span></p></li><li><p><span>[actiontech/sqle-ee/issues/1282] 修复 SQL 工作台页面审核按钮不可用的问题</span></p></li><li><p><span>[actiontech/sqle-ee/issues/1274] 修复工单审核 TDSQL 时 panic 的问题</span></p></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Fri, 29 Dec 2023 12:18:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/273333</guid>
            <link>https://www.oschina.net/news/273333</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[OpenCV 4.9.0 发布，Intel 开源的计算机视觉库]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff; color:#333333">OpenCV 是 Intel 开源计算机视觉库，它实现了图像处理和计算机视觉方面的很多通用算法。OpenCV 4.9.0 版本的主要更新内容如下：</span></p><ul><li><p><span style="background-color:#ffffff; color:#1f2328">Core Module</span><span><span>：</span></span></p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopencv%2Fopencv%2Fpull%2F23965" target="_blank">#23965</a>&nbsp;添加<code>cv::broadcast</code></li></ul></li><li>DNN module patches： 
  <ul><li>Experimental transformers 支持</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopencv%2Fopencv%2Fpull%2F24476" target="_blank">#24476</a>&nbsp;ONNX Attention layer 支持</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopencv%2Fopencv%2Fpull%2F24037" target="_blank">#24037</a>&nbsp;ONNX Einsum layer 支持</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopencv%2Fopencv%2Fpull%2F23987" target="_blank">#23987</a>&nbsp;INT8 models 的 OpenVINO 后端</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopencv%2Fopencv%2Fpull%2F24092" target="_blank">#24092</a>&nbsp;ONNX Gather Elements layer</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopencv%2Fopencv%2Fpull%2F24378" target="_blank">#24378</a>&nbsp;ONNX InstanceNorm layer</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopencv%2Fopencv%2Fpull%2F23897" target="_blank">#23897&nbsp;</a><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopencv%2Fopencv%2Fpull%2F24694" target="_blank">#24694&nbsp;</a><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopencv%2Fopencv%2Fpull%2F24509" target="_blank">#24509</a>&nbsp;新的 fastGEMM 实现及其之上的多个层</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopencv%2Fopencv%2Fpull%2F23654" target="_blank">#23654</a>&nbsp;ARM 上的 Winograd fp16 优化</li><li>对 Yolo 系列模型支持的测试和多项修复</li><li>CUDA 后端中的新层支持和错误修复：GEMM、Gelu、Add</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopencv%2Fopencv%2Fpull%2F24462" target="_blank">#24462</a>&nbsp;CANN 后端：错误修复，支持 HardSwish、LayerNormalization 和 InstanceNormalization</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopencv%2Fopencv%2Fpull%2F24552" target="_blank">#24552</a>&nbsp;LayerNormalization：支持 OpenVINO、OpenCL 和 CUDA 后端</li></ul></li><li><p><span><span>G-API 模块：</span></span></p><ul><li>TBD</li></ul></li><li><p><span><span>Objdetect 模块：</span></span></p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopencv%2Fopencv%2Fpull%2F24364" target="_blank">#24364</a>&nbsp;<span style="background-color:#ffffff; color:#1f2328">QR code encoder version estimation&nbsp;</span>中的错误修复</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopencv%2Fopencv%2Fpull%2F24479" target="_blank">#24479</a>&nbsp;修复了 ArUco 中的&nbsp;contour filtering</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopencv%2Fopencv%2Fpull%2F24598" target="_blank">#24598</a>&nbsp;Android 的&nbsp;QR&nbsp;码检测示例</li><li>针对 Aruco makers、Charuco boards 和 QR 码的多个本地错误修复和文档更新。</li></ul></li><li><p><span><span>Video：</span></span></p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopencv%2Fopencv%2Fpull%2F24201" target="_blank">#24201</a>&nbsp;Google Summer of Code：为基于视觉转换器的&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopencv%2Fopencv_zoo%2Ftree%2Fmain%2Fmodels%2Fobject_tracking_vittrack" target="_blank">VitTrack</a>&nbsp;添加了新的对象跟踪 API&nbsp;<code>TrackerVit</code>。</li></ul></li><li><p><span><span>Calibration module：</span></span></p><ul><li>多项修复和改进 chess board calibration rig detector。</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopencv%2Fopencv%2Fpull%2F23025" target="_blank">#23025</a>&nbsp;如果 calibration system 约束不足，calibrateCamera 会抛出异常。</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopencv%2Fopencv%2Fissues%2F24482" target="_blank">#24482</a>&nbsp;修复了 USAC 的 findEssentialMat 中的错误</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopencv%2Fopencv%2Fpull%2F24527" target="_blank">#24527</a>&nbsp;修复了<code>cv::cornerSubPix</code>中的&nbsp;out-of-image access</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopencv%2Fopencv%2Fpull%2F23607" target="_blank">#23607</a>&nbsp;修复了 ap3p 中的崩溃</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopencv%2Fopencv%2Fpull%2F24035" target="_blank">#24035</a>&nbsp;修复&nbsp;stereoRectify image boundaries</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopencv%2Fopencv%2Fpull%2F24211" target="_blank">#24211</a>&nbsp;修复了 Essential_solver.cpp 中的「use after free」问题</li></ul></li><li><p><span><span>Python 绑定：</span></span></p><ul><li>为遗漏的类型和手动包装的类型添加了类型存根生成。</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopencv%2Fopencv%2Fpull%2F24026" target="_blank">#24026</a>&nbsp;添加了 Numpy 数组的只读标志处理。</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopencv%2Fopencv%2Fpull%2F24028" target="_blank">#24028</a>&nbsp;修复了模块内的异常处理和绑定。</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopencv%2Fopencv%2Fpull%2F23958" target="_blank">#23958</a>&nbsp;改进了 Numpy 数组类型处理中的错误消息。</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopencv%2Fopencv%2Fpull%2F24468" target="_blank">#24468</a>&nbsp;修复了 Python 中的构造函数文档。</li></ul></li><li><p><span><span>Android：</span></span></p><ul><li>通过&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcentral.sonatype.com%2Fartifact%2Forg.opencv%2Fopencv%2Foverview" target="_blank">Maven Central 发布</a>的新 Android Archive Package (AAR)</li><li>新的 Android 示例：QR 码检测器、视频 IO 示例。DNN 和人脸检测器示例更新。</li><li>切换到 Gradle 7.6.3，现代 Android 工具。</li></ul></li><li><p><span><span>平台支持：</span></span></p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopencv%2Fopencv%2Fpull%2F23021" target="_blank">#23021</a>&nbsp;在 CMake 中将 CUDA 作为 first class 语言进行实验性支持</li></ul></li><li><p><span><span>其他：</span></span></p><ul><li>TBD</li><li>OpenCV Summer of Code：HAN Liutong 跨多个拉取请求的半自动重构使 CPU 优化代码与可变向量长度的 SIMD (RISC-V RVV) 兼容</li></ul></li></ul><p>更多详情可查看&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopencv%2Fopencv%2Fwiki%2FChangeLog%23version490" target="_blank">ChangeLog</a>。</p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 29 Dec 2023 10:42:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/273327/opencv-4-9-0-released</guid>
            <link>https://www.oschina.net/news/273327/opencv-4-9-0-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[私域管理平台，LinkWeChat V5.0.5 版本发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span>LinkWeChat 是国内首个基于企业微信的开源 SCRM，在集成了企微强大的开放能力的基础上，进一步升级拓展灵活高效的客户运营能力及多元化精准营销能力，让客户与企业之间建立强链接，帮助企业提高客户运营效率，强化营销能力，拓展盈利空间，是企业私域流量管理与营销的综合解决方案，目前已经受到企业微信的官方推荐和国家级木兰开源社区进行孵化，同时也是国家工信部重点扶持项目，同时也获得 2022 年中国开源创新大赛二等奖。</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>LinkWeChat V5.0.5 主要的升级内容如下：</strong></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:start"><span style="background-color:#ffffff; color:#40485b">一、升级概述</span><br><span style="background-color:#ffffff; color:#40485b">本次升级主要针对企业微信 Scrm LinkWeChat v5.0.5 版本，门店活码门店导购与门店客群码升级为动态生成和门店活码统计重构，并对相关功能进行了 bug 修复。以下是详细的升级内容。</span><br><span style="background-color:#ffffff; color:#40485b">二、升级内容</span><br><span style="background-color:#ffffff; color:#40485b">1.门店活码门店导购与门店客群码升级为动态生成</span><br><span style="background-color:#ffffff; color:#40485b">门店导购与门店客群码升级为动态生成，同时每个码新增渠道标识，便于更新详细的维度化统计。</span><br><span style="background-color:#ffffff; color:#40485b">2.门店活码统计升级</span><br><span style="background-color:#ffffff; color:#40485b">根据新的渠道标识，对原有统计进行重构升级，统计数据更加详细。</span><br><span style="background-color:#ffffff; color:#40485b">3.系统相关 bug 修复,提升系统稳定性。</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">感谢您对我们产品的支持和信任，我们会继续努力，为您提供更好的产品和服务。</p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 29 Dec 2023 08:56:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/273306/linkwechat-5-0-5-released</guid>
            <link>https://www.oschina.net/news/273306/linkwechat-5-0-5-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[夜莺监控发布 v6.7 版本，下放部分商业版功能]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; text-align:left">熟悉夜莺的小伙伴都知道夜莺分为开源版、专业版、企业版，三个版本良性发展，近期夜莺团队发布了 v6.7 版本，把机器的 metadata 功能下放到了开源版，下面做个简单介绍。</p><p style="color:#333333; text-align:left"><img alt="20231228073037" src="https://download.flashcat.cloud/ulric/20231228073037.png" referrerpolicy="no-referrer"></p><p style="color:#333333; text-align:left">如上图，机器列表页面的机器标识部分，加了超链接支持点击，点击之后会弹出一个侧拉板，展示机器的 metadata 信息，如下图：</p><p style="color:#333333; text-align:left"><img alt="20231228073236" src="https://download.flashcat.cloud/ulric/20231228073236.png" referrerpolicy="no-referrer"></p><p style="color:#333333; text-align:left">比如机器的 Kernel 信息、CPU 型号、机器的 IP 地址、Mac 地址，等等，如果机器有多块网卡，每一块的信息都会被采集展示。这个功能一定程度上可以提供部分 CMDB 的能力，而且，因为是通过 Categraf（v0.3.42 以上版本）自动采集的数据，所以数据是准实时的、准确的，不需要人工维护，CMDB 主打就是一个权威性，这个数据绝对权威。</p><p style="color:#333333; text-align:left">更多 Changelog 以及下载地址，请访问这里：https://flashcat.cloud/download/nightingale/</p><h2>夜莺简介</h2><p style="color:#333333; text-align:left">夜莺 Nightingale 是中国计算机学会托管的开源云原生可观测工具，最早由滴滴于 2020 年孵化并开源，于 2022 年正式捐赠予中国计算机学会。夜莺采用 All-in-One 的设计理念，集数据采集、可视化、监控告警、数据分析于一体，与云原生生态紧密集成，融入了顶级互联网公司可观测性最佳实践，沉淀了众多社区专家经验，开箱即用。</p><blockquote><ul><li>仓库：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fccfos%2Fnightingale" target="_blank">github.com/ccfos/nightingale</a></li><li>文档：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fn9e.github.io%2F" target="_blank">n9e.github.io</a></li></ul></blockquote><h2>夜莺功能特点</h2><ul><li>统一接入各种数据源：支持对接 Prometheus、VictoriaMetrics、TDEngine、Loki、ElasticSearch 等多种数据源，实现统一观测</li><li>专业告警能力：内置支持多种告警规则，可以扩展支持所有通知媒介，支持告警屏蔽、告警抑制、告警自愈、告警事件管理</li><li>高性能可视化引擎：支持多种图表样式，内置众多 Dashboard 模版，也可导入 Grafana 模版，开箱即用，开源协议商业友好</li><li>无缝搭配<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fflashcat.cloud%2Fproduct%2Fflashcat-duty%2F" target="_blank">Flashduty</a>：实现告警聚合收敛、认领、升级、排班、IM 集成，确保告警处理不遗漏，减少打扰，更好协同</li><li>支持所有常见采集器：支持<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fflashcat.cloud%2Fproduct%2Fcategraf%2F" target="_blank">Categraf</a>、telegraf、grafana-agent、datadog-agent、各种 exporter 作为采集器，没有什么数据是不能监控的</li></ul></div>
                                    ]]>
            </description>
            <pubDate>Fri, 29 Dec 2023 08:56:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/273305/nightingale-6-7-released</guid>
            <link>https://www.oschina.net/news/273305/nightingale-6-7-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[🎉 领域模型即服务 | Wow 官方文档正式发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow:基于 DDD、EventSourcing 的现代响应式 CQRS 架构微服务开发框架" src="https://static.oschina.net/uploads/img/202312/13135012_Zb9v.svg" width="150" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><strong>领域驱动</strong><span>&nbsp;</span>|<span>&nbsp;</span><strong>事件驱动</strong><span>&nbsp;</span>|<span>&nbsp;</span><strong>测试驱动</strong><span>&nbsp;</span>|<span>&nbsp;</span><strong>声明式设计</strong><span>&nbsp;</span>|<span>&nbsp;</span><strong>响应式编程</strong><span>&nbsp;</span>|<span>&nbsp;</span><strong>命令查询职责分离</strong><span>&nbsp;</span>|<span>&nbsp;</span><strong>事件溯源</strong></p><h2>更新内容</h2><blockquote><p style="margin-left:0; margin-right:0"><strong>永远免费的</strong><em>官方文档正式</em>发布！<span>&nbsp;</span>🎉&nbsp;</p><p style="margin-left:0; margin-right:0">采用 Apache 2.0 许可证，与源码一起提供，使用 Gitee Pages 部署。</p><p style="margin-left:0; margin-right:0">&nbsp;<img alt="👉" height="14" src="https://cn-assets.gitee.com/assets/emoji/point_right-8d392cf32998e3bca12bb7b4ee10dae0.png" width="14" referrerpolicy="no-referrer"><span>&nbsp;</span><a href="https://ahoowang.gitee.io/wow/" target="_blank">https://ahoowang.gitee.io/wow/</a><span>&nbsp;</span><img alt="👈" height="14" src="https://cn-assets.gitee.com/assets/emoji/point_left-4570b6929b8880ab2e8b8031007fef18.png" width="14" referrerpolicy="no-referrer"></p></blockquote><p style="text-align:center"><a href="https://ahoowang.gitee.io/wow/"><img height="1296" src="https://oscimg.oschina.net/oscnet/up-599dfc7f4f442dcf15a6bbe34f838133516.png" width="1311" referrerpolicy="no-referrer"></a></p><h2>简介</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><em>Wow</em><span>&nbsp;</span>是一个基于领域驱动设计和事件溯源的现代响应式<span>&nbsp;</span><em>CQRS</em><span>&nbsp;</span>微服务开发框架，历经多年生产环境验证。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">旨在帮助开发者构建现代化的、高性能且易于维护的微服务应用程序，充分发挥领域驱动设计和事件溯源等模式优势的同时降低应用的复杂性以及实践成本。</p><blockquote><p style="margin-left:0; margin-right:0">值得一提的是，领域驱动设计和事件溯源并非微服务架构的专属，<em>Wow</em><span>&nbsp;</span>框架不仅适用于微服务开发，同样也可用于构建基于领域驱动设计的单体应用程序。</p></blockquote><h2>快速开始</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://ahoowang.gitee.io/wow/guide/getting-started.html">使用 Wow 项目模板快速创建基于 Wow 框架的 DDD 项目</a></p><h2>特性概览</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-Features" src="https://gitee.com/AhooWang/Wow/raw/main/documentation/docs/public/images/Features.png" referrerpolicy="no-referrer"></p><h2>架构图</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-Architecture" src="https://gitee.com/AhooWang/Wow/raw/main/documentation/docs/public/images/Architecture.svg" referrerpolicy="no-referrer"></p><h2>背景</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">随着业务的发展和复杂性的增加，传统的架构和开发方式逐渐显露出瓶颈。<em>领域驱动设计</em>和<em>事件溯源</em>等理念在提高系统设计的灵活性和可维护性方面表现出色，但在实践中常常需要面对复杂性和学习曲线的挑战。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><em>Wow</em><span>&nbsp;</span>框架的目标是以简单易用的方式将领域驱动设计和事件溯源等理念融入到微服务应用开发中，降低开发者的学习成本，提高开发效率。 通过提供现代响应式的<span>&nbsp;</span><em>CQRS</em><span>&nbsp;</span>架构和相关组件，<em>Wow</em><span>&nbsp;</span>框架旨在让开发者更专注于业务逻辑的实现，而不必过多关心底层技术细节。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">经过多年的实践和不断的演进，<em>Wow</em><span>&nbsp;</span>框架在生产环境中得到了验证，积累了丰富的经验。这些经验和反馈不仅丰富了框架的功能和性能，也为持续的改进和优化提供了宝贵的指导。</p><h2>对于开发者而言，<em>Wow</em><span>&nbsp;</span>框架意味着什么？</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">我曾告诫我的团队：如果我们过于依赖<em>数据驱动设计</em>而忽视<em>领域驱动设计</em>，我们最终将沦为<span>&nbsp;</span><em>CRUD</em><span>&nbsp;</span>工程师。</p><blockquote><p style="margin-left:0; margin-right:0"><em>CRUD</em><span>&nbsp;</span>工程师的竞争力和可替代性可想而知，这或许是为何会有<span>&nbsp;</span><em>35</em><span>&nbsp;</span>岁效应，企业显然更倾向于招募没有太多生活羁绊、更加廉价的<span>&nbsp;</span><em>25</em><span>&nbsp;</span>岁<span>&nbsp;</span><em>CRUD</em><span>&nbsp;</span>工程师。</p></blockquote><h3>业务价值</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">软件系统的核心价值体现在业务价值上，研发人员不应只关注技术实现上，而是应该更多地关注业务价值的实现。 这其中的好处显而易见，当你开发完一个业务系统之后，你将变成一个业务专家，甚至比跟你合作的领域专家还要专业，因为你需要洞察业务细节。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">使用<span>&nbsp;</span><em>Wow</em><span>&nbsp;</span>框架，意味着你将关注点放在围绕领域模型设计上，与业务专家一起探索业务领域，而不是关注于技术实现上。 你仅需编写领域模型，即可完成服务开发，<em>Wow</em><span>&nbsp;</span>框架自动为你准备好<span>&nbsp;</span><em>OpenAPI</em><span>&nbsp;</span>接口。</p><blockquote><p style="margin-left:0; margin-right:0">在《实现领域驱动设计》一书中，作者 Vaughn Vernon 提到：核心域才值得投入精力进行领域驱动设计， 但如果你使用<span>&nbsp;</span><em>Wow</em><span>&nbsp;</span>框架，你将发现，因为低廉开发成本、快速的开发效率，即使是次要的支撑子域也值得<span>&nbsp;</span><em>DDD</em>。</p></blockquote><h3>性能与伸缩性</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">随着业务的发展，你需要开始思考系统的性能和伸缩性问题。 在传统架构中，这牵扯到数据库关系模式、分片规则等复杂问题，同时你还需要处理因数据库分片导致的跨分片事务问题。 这时，你不得不修改你的业务代码，以适应水平拆分后的数据库架构。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">然而，如果你选择使用<span>&nbsp;</span><em>Wow</em><span>&nbsp;</span>框架，你将不再需要过多关注数据库关系模式、分片规则等问题。你的业务代码无需变更，系统能够轻松实现水平伸缩。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">你可以在这里了解更多关于<span>&nbsp;</span><a href="https://ahoowang.gitee.io/wow/guide/perf-test.html">Wow 框架的性能</a>。</p><h3>读写分离与同步延迟</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">读写分离是一种极为普遍的性能优化架构模式。 然而，同步延迟问题常伴随而来，事务执行成功后写库落库成功，但读库同步延迟，用户刷新页面后无法获取最新数据，从而对用户的体验产生影响。例如：</p><ul><li>用户发起下单事务，写库执行成功，但由于某种原因，读库同步延迟，用户刷新页面后发现订单未成功创建。</li><li>商家编辑完商品后，同步到<span>&nbsp;</span><em>Elasticsearch</em><span>&nbsp;</span>索引库，但由于某种原因，同步延迟，导致商家刷新页面后搜索不到该商品。</li></ul><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">通常，大家采用最简便的方法，等待 1 秒后刷新页面。 虽然这种方式能解决大多数数据同步延迟的问题，但效率不够高。 因为大多数情况下，同步在 100 毫秒内就已完成，剩余的 900 毫秒成了<em>浪费</em>。 然而，有时 1 秒无法完成同步，这就导致用户获取的数据变得<strong>无效</strong>。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">使用<span>&nbsp;</span><em>Wow</em><span>&nbsp;</span>框架，你可以通过等待<span>&nbsp;</span><em>PROJECTED</em><span>&nbsp;</span>信号完成，然后再将结果返回给用户，以更为优雅和高效的方式处理数据同步延迟的问题。</p><h3>工程质量</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><em>单元测试</em>是确保代码质量且符合预期业务需求的重要手段，但在传统架构中，单元测试往往是一项相当困难的任务，因为你需要考虑数据库连接、事务管理、数据清理等问题。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">使用<span>&nbsp;</span><em>Wow</em><span>&nbsp;</span>框架，你将会发现基于<span>&nbsp;</span><em>Given-&gt;When-&gt;Expect</em><span>&nbsp;</span>模式的测试套件，使得单元测试变得异常简单。 你只需关注领域模型是否符合预期，而无需为数据库连接等问题烦恼。</p><blockquote><p style="margin-left:0; margin-right:0">在实际应用中，我们将领域模型的单元测试覆盖率下限阈值设置为<span>&nbsp;</span><strong>85%</strong>，也是可以轻松实现的。</p><p style="margin-left:0; margin-right:0">在没有刻意要求的情况下，开发人员甚至自觉地将覆盖率提升至<span>&nbsp;</span><strong>95%</strong>。</p><p style="margin-left:0; margin-right:0">因此，每次提交代码都变得轻松自在，因为你确信你的代码经过了充分的测试，并且真正意义上从单元测试中获得了收益。</p></blockquote><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">在研发同级别的项目中，我们的测试团队在系统<span>&nbsp;</span><em>API</em><span>&nbsp;</span>测试中发现，基于 Wow 框架的项目，其<span>&nbsp;</span><em>BUG</em><span>&nbsp;</span>数仅为传统架构项目的<span>&nbsp;</span><strong>1/3</strong>。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">你可以在这里了解更多关于<span>&nbsp;</span><a href="https://ahoowang.gitee.io/wow/guide/test-suite.html">Wow 单元测试套件</a>。</p><h2>对于企业而言，<em>Wow</em><span>&nbsp;</span>框架意味着什么？</h2><h3>商业智能</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><em>商业智能</em>是企业决策的关键支持，而数据则是商业智能的分析原料。业务数据越为丰富有价值，商业智能的分析结果越准确，决策也就更加可靠。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">与传统架构有着显著差异，<em>Wow</em><span>&nbsp;</span>提供了实时聚合根状态事件（<code>StateEvent</code>）和聚合命令（<code>Command</code>）作为数据分析的数据源，同时极大降低了实时<span>&nbsp;</span><em>ETL</em>（<code>Extract</code>,<span>&nbsp;</span><code>Transform</code>,<span>&nbsp;</span><code>Load</code>）的难度。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">在传统架构中，实现实时<span>&nbsp;</span><em>ETL</em><span>&nbsp;</span>通常需要经过繁琐的流程，包括<span>&nbsp;</span><code>DB-&gt;CDC-&gt;Process-&gt;DB</code>，而在<span>&nbsp;</span><em>Wow</em><span>&nbsp;</span>框架中，仅需一段简单的<span>&nbsp;</span><em>SQL</em><span>&nbsp;</span>脚本即可完成这一过程。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">另外，在传统架构中，使用<span>&nbsp;</span><em>CDC</em>（<code>MySql Binlog</code>）数据仅记录数据的变化，缺乏明确的业务语义。进行业务分析时，需要基于数据状态的变化推断出业务语义，这往往需要进行大量的数据处理。 相较之下，<em>Wow</em><span>&nbsp;</span>框架直接提供了聚合根状态事件和聚合命令作为数据分析的数据源，极大降低了数据处理的难度。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><em>Wow</em><span>&nbsp;</span>提供的实时同步机制将数据实时同步至数据仓库（<em>ClickHouse</em>），为实时数据分析提供了极大的便利。这种方法为商业智能提供了强有力的支持，构建了一个实时数据分析系统，使决策制定能够基于及时而准确的信息。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">你可以在这里了解更多关于<span>&nbsp;</span><a href="https://ahoowang.gitee.io/wow/guide/bi.html">Wow 商业智能</a>。</p><h3>操作审计</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><em>操作审计</em>是企业中保障安全性和合规性的重要组成部分，同时也是对系统操作进行监控和追踪的关键手段。<em>Wow</em><span>&nbsp;</span>框架在这方面为企业带来了显著的优势。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">通过记录聚合命令（<code>Command</code>）作为操作审计的数据源，<em>Wow</em><span>&nbsp;</span>框架能够详细追踪系统中的各种操作。 这些记录不仅包含了操作本身的内容，还涵盖了操作触发的副作用（<em>领域事件</em>），为审计提供了更为全面和准确的数据基础。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">相较于传统审计方法，<em>Wow</em><span>&nbsp;</span>框架的操作审计的数据源具备更加明确的业务语义，以及操作后产生的明确领域事件。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">此外，Wow 框架提供的实时数据同步机制也为操作审计带来了便利，确保了审计数据的及时性和一致性。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">了解更多关于<span>&nbsp;</span><a href="https://ahoowang.gitee.io/wow/guide/bi.html#%E8%81%9A%E5%90%88%E5%91%BD%E4%BB%A4">Wow 操作审计</a>。</p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 29 Dec 2023 08:49:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/273303/wow-readme</guid>
            <link>https://www.oschina.net/news/273303/wow-readme</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[🎉🎉 wmproxy 0.2.3 发布，支持负载均衡中的 HTTP2 功能]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div><div><h1>0.2.3 负载均衡中的 HTTP2</h1><ul><li>HTTP2 协议处理</li><li>try_files 功能的实现</li><li>修复 bug</li></ul><h1>wmproxy</h1><p><code>wmproxy</code> 已用 <code>Rust</code> 实现 <code>http/https</code> 代理，<code>socks5</code> 代理，反向代理，负载均衡，静态文件服务器，四层 TCP/UDP 转发，内网穿透，后续将实现 <code>websocket</code> 代理等，会将实现过程分享出来，感兴趣的可以一起造个轮子</p><h2>项目地址</h2><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.juejin.cn%3Ftarget%3Dhttps%253A%252F%252Fgitee.com%252Ftickbh%252Fwmproxy" target="_blank">国内: https://gitee.com/tickbh/wmproxy</a></p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.juejin.cn%3Ftarget%3Dhttps%253A%252F%252Fgithub.com%252Ftickbh%252Fwmproxy" target="_blank">github: https://github.com/tickbh/wmproxy</a></p><h2>📦 安装 &amp; 🏃 使用</h2><h3>安装</h3><pre><span><span>cargo</span><span><span>install </span></span><span>wmproxy</span></span></pre><p>OR</p><pre><span><span>git</span><span>clone https://github.com/tickbh/wmproxy</span></span><span><span><span>cd</span></span><span>wmproxy</span></span><span><span>cargo</span><span><span>install</span></span><span></span><span><span>--path</span></span><span></span><span><span>.</span></span></span></pre><pre><span><span>docker</span><span>pull</span><span>dreamwhat/wmproxy</span></span><span><span>docker</span><span>run</span><span>-p</span><span>82</span><span>:82</span><span>-p</span><span>8090</span><span>:8090</span><span>-p</span><span>127.0</span><span>.0</span><span>.1</span><span>:8837:8837</span><span>--name</span><span>proxy_bash</span><span>dreamwhat/wmproxy</span><span>/bin/./wmproxy</span><span>-b</span><span>-b</span><span>0.0</span><span>.0</span><span>.0</span><span>:8090</span></span></pre><h3>使用</h3><p>默认端口为 8090 端口，默认监听地址为 127.0.0.1</p><pre><span><span><span># 直接通用默认参数</span></span></span><span><span>wmproxy</span></span><span></span><span><span><span># 设置账号密码</span></span></span><span><span>wmproxy</span><span><span>-b</span></span><span> 0.0.0.0:8090 </span><span><span>--user</span></span><span> wmproxy </span><span><span>--pass</span></span><span> wmproxy</span></span><span></span><span><span><span># 其它指令</span></span></span><span><span>wmproxy</span><span><span>--help</span></span></span><span></span><span><span><span>#配置文件版启动</span></span></span><span><span>wmproxy</span><span><span>-c</span></span><span> config/client.toml</span></span></pre><p>启动二级代理</p><ol><li>在本地启动代理</li></ol><pre><span><span>wmproxy</span><span><span>-b</span></span> 127<span>.0</span><span>.0</span><span>.1</span><span><span>-p</span></span> 8090 <span><span>-S</span></span> 127<span>.0</span><span>.0</span><span>.1</span><span>:8091</span><span><span>--ts</span></span></span></pre><p>或者</p><pre><span><span>wmproxy</span><span><span>-c</span></span><span> config/client.toml</span></span></pre><p>配置文件如下:</p><pre><span><span>[proxy]</span></span><span><span><span># 连接服务端地址</span></span></span><span><span><span>#server = "127.0.0.1:8091"</span></span></span><span><span>bind_addr</span><span>=</span><span><span>"0.0.0.0:8090"</span></span></span><span><span>flag</span><span>=</span><span><span>"http https socks5"</span></span></span><span><span><span># 连接服务端是否加密</span></span></span><span><span>ts</span><span>=</span><span>true</span></span><span><span>two_way_tls</span><span>=</span><span>true</span></span><span><span><span># username = "wmproxy"</span></span></span><span><span><span># password = "wmproxy"</span></span></span><span><span><span># 内网映射配置的数组</span></span></span><span><span><span>#将 localhost 的域名转发到本地的 127.0.0.1:8080</span></span></span><span><span>[[proxy.mappings]]</span></span><span><span>name</span><span>=</span><span><span>"web"</span></span></span><span><span>mode</span><span>=</span><span><span>"http"</span></span></span><span><span>local_addr</span><span>=</span><span><span>"127.0.0.1:8080"</span></span></span><span><span>domain</span><span>=</span><span><span>"localhost"</span></span></span><span><span>headers</span><span>=</span><span>[</span></span><span><span><span>"proxy x-forward-for {client_ip}"</span></span><span>,</span></span><span><span><span>"proxy + from $url"</span></span><span>,</span></span><span><span><span>"+ last-modified 'from proxy'"</span></span><span>,</span></span><span><span><span>"- etag"</span></span><span>,</span></span><span><span>]</span></span><span><span><span>#将 tcp 的流量无条件转到 127.0.0.1:8080</span></span></span><span><span>[[proxy.mappings]]</span></span><span><span>name</span><span>=</span><span><span>"tcp"</span></span></span><span><span>mode</span><span>=</span><span><span>"tcp"</span></span></span><span><span>local_addr</span><span>=</span><span><span>"127.0.0.1:8080"</span></span></span><span><span>domain</span><span>=</span><span><span>""</span></span></span></pre><p>因为纯转发，所以在当前节点设置账号密码没有意义 <code>-S</code> 表示连接到的二级代理地址，<strong>有该参数则表示是中转代理，否则是末端代理。</strong><code>--ts</code> 表示连接父级代理的时候需要用加密的方式链接</p><ol><li>在远程启动代理</li></ol><pre><span><span>wmproxy</span><span><span>--user</span></span><span>proxy</span><span><span>--pass</span></span><span>proxy</span><span><span>-b</span></span> 0<span>.0</span><span>.0</span><span>.0</span><span>:8091</span><span><span>--tc</span></span></span></pre><p>或者</p><pre><span><span>wmproxy</span><span><span>-c</span></span><span> config/server.toml</span></span></pre><p>配置文件如下:</p><pre><span><span><span>[proxy]</span></span></span><span><span><span>#绑定的 ip 地址</span></span></span><span><span><span>bind_addr</span></span><span>=</span><span><span>"127.0.0.1:8091"</span></span></span><span><span><span>#代理支持的功能，1 为 http，2 为 https，4 为 socks5</span></span></span><span><span><span># flag = "7"</span></span></span><span><span><span>username</span></span><span>=</span><span><span>"wmproxy"</span></span></span><span><span><span>password</span></span><span>=</span><span><span>"wmproxy"</span></span></span><span><span><span>#内网映射 http 绑定地址</span></span></span><span><span><span>map_http_bind</span></span><span>=</span><span><span>"127.0.0.1:8001"</span></span></span><span><span><span>#内网映射 tcp 绑定地址</span></span></span><span><span><span>map_tcp_bind</span></span><span>=</span><span><span>"127.0.0.1:8002"</span></span></span><span><span><span>#内网映射 https 绑定地址</span></span></span><span><span><span>map_https_bind</span></span><span>=</span><span><span>"127.0.0.1:8003"</span></span></span><span><span><span>#内网映射的公钥证书，为空则是默认证书</span></span></span><span><span><span># map_cert = </span></span></span><span><span><span>#内网映射的私钥证书，为空则是默认证书</span></span></span><span><span><span># map_key =</span></span></span><span><span><span># 双向认证</span></span></span><span><span><span>two_way_tls</span></span><span>=</span><span><span>true</span></span></span><span><span><span>#接收客户端是为是加密客户端</span></span></span><span><span><span>tc</span></span><span>=</span><span><span>true</span></span></span><span><span><span>#当前服务模式，server 为服务端，client 为客户端</span></span></span><span><span><span>mode</span></span><span>=</span><span><span>"server"</span></span></span></pre><p><code>--tc</code> 表示接收子级代理的时候需要用加密的方式链接，可以 <code>--cert</code> 指定证书的公钥，<code>--key</code> 指定证书的私钥，<code>--domain</code> 指定证书的域名，如果不指定，则默认用自带的证书参数</p><blockquote>
   至此通过代理访问的，我们已经没有办法得到真正的请求地址，只能得到代理发起的请求
  </blockquote><h3>代理间的认证</h3><blockquote>
   目前提供了两种认证双式， 
   <code>two_way_tls</code> 开启客户端的证书认证信息，另一种服务端配置了 
   <code>username</code> 和 
   <code>password</code> 即需要客户端配置相同的用户密码才能启用认证信息，两种方式可叠加使用或者单独使用。 配置添加如下:
  </blockquote><pre><span><span><span>proxy</span></span><span><span>:</span></span></span><span><span><span>two_way_tls</span></span><span><span>:</span></span><span><span>true</span></span></span><span><span><span>username</span></span><span><span>:</span></span><span><span>wmproxy</span></span></span><span><span><span>password</span></span><span><span>:</span></span><span><span>wmproxy</span></span></span></pre><h1>🚥 路线图</h1><h3>socks5</h3><ul><li>IPV6 支持</li><li><code>SOCKS5</code> 验证方式 
    <ul><li><code>NOAUTH</code></li><li><code>USERPASS</code></li></ul></li><li><code>SOCKS5</code> Commands 
    <ul><li><code>CONNECT</code></li><li><code>UDP ASSOCIATE</code></li></ul></li></ul><h3>http/https</h3><ul><li>IPV6 支持</li></ul><h3>内网穿透</h3><ul><li>Http 支持</li><li>Https 支持</li><li>Tcp 支持</li></ul><h3>反向代理</h3><ul><li>静态文件服务器</li><li>被动健康检查</li><li>主动健康检查</li><li>配置热加载</li><li>负载均衡</li><li>四层 TCP 负载</li><li>四层 UDP 负载</li><li>流量控制</li></ul><h3>基础能力</h3><ul><li>日志</li></ul><h4>扩展能力</h4><ul><li>请求限速 (limit_req)</li><li>修改 HTTP 请求 Header</li><li>支持 HTTP2 的内网穿透</li><li>控制微端</li><li>try_files</li></ul></div></div></div>
                                    ]]>
            </description>
            <pubDate>Fri, 29 Dec 2023 08:23:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/273300/wmproxy-0-2-3-released</guid>
            <link>https://www.oschina.net/news/273300/wmproxy-0-2-3-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Snail 2.17.0 已经发布，下载工具]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Snail 2.17.0 已经发布，下载工具</p><p>此版本更新内容包括：</p><ul><li>NAT 端口保活</li><li>STUN 错误请求</li><li>调整代码结构</li><li>JavaFX 升级<code>17.0.2</code></li><li>升级最新 Maven 插件</li><li>删除对 SLF4J 的依赖</li><li>实现 Mac、Linux 回收站</li><li>优化扩展 GUI 多文件选择事件</li><li>修复 HiDPI 缩放托盘菜单位置错误</li><li>使用 CPU 核心数量自动配置部分线程数量</li><li>HLS 下载优化内存和共享对象减小下载内存占用</li></ul><p><a href="https://gitee.com/acgist/snail/attach_files" target="_blank" rel="nofollow">最新版本下载</a></p><p>详情查看：<a href="https://gitee.com/acgist/snail/releases/2.17.0" rel="nofollow">https://gitee.com/acgist/snail/releases/2.17.0</a></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 29 Dec 2023 07:40:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/273294/snail%20-2-17-0-released</guid>
            <link>https://www.oschina.net/news/273294/snail%20-2-17-0-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Goploy v1.16.0 发布：支持 Docker 构建命令等功能]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Goploy 的最新版本 v1.16.0 现已发布！</p><p>这个版本带来了许多刺激的新功能，改进和修复。</p><p>Goploy 是一个轻量级的，专为开发人员设计的持续集成和持续部署系统。它的设计理念是简单易用，让开发人员能够快速、轻松地部署他们的应用程序。 在这个新版本中，我们引入了一些强大的新功能，包括：</p><p>1. 新增功能：支持查看各阶段构建时长</p><p>2. 新增功能：支持 docker 构建命令等功能</p><p>3. 修复功能：修复无法删除服务器的 bug</p><p>4. 修复功能：兼容最新版 element-plus</p><p>这些新功能不仅提高了系统的稳定性和性能，也增强了用户体验。</p><p>我们鼓励所有用户升级到新版本，以便利用这些改进和新功能。</p><p>你可以在 GitHub 上查看完整的发布说明和下载最新版本：https://github.com/zhenorzz/goploy/releases/tag/v1.16.0。</p><p>我们感谢社区的反馈和支持，让我们能够继续改进 Goploy。</p><p>如果你在使用过程中遇到任何问题，或者有任何建议，欢迎通过 GitHub 向我们反馈。 感谢你选择 Goploy，让我们一起更快、更好地部署应用程序！</p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 29 Dec 2023 07:08:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/273289</guid>
            <link>https://www.oschina.net/news/273289</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Codes 重新定义 SaaS 模式的研发管理平台开源版 4.2.1 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div><div><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong><span style="background-color:#ffffff; color:#111926">Codes 重新定义 SaaS 模式:</span></strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="background-color:#ffffff; color:#5d6c83">云端认证+程序及数据本地安装+不限功能+30 人免费</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>一：codes&nbsp;简介</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="background-color:#ffffff; color:#40485b">Codes&nbsp; 是一个&nbsp;高效、简洁、轻量的一站式研发管理平台。包含需求管理，任务管理，测试管理，缺陷管理，自动化测试，cicd&nbsp;等功能； Codes 帮助企业加速融合研发、测试、运维一体化进程，常态下，刀耕火种的 Test 环节给自动化的 Dev 与 Ops 踩下了刹车。 Codes 以技术最薄弱，最不被重视的测试为发力点，通过落地敏捷测试打通了研发与运维中间的枢钮润滑环节。 解决了 Test 在 DevOps 快速迭代中的木桶效应，促进了研发、测试、运维一体化融合进程。</span><strong>商业版不限功能，本地安装只限用户数，30 个用户免费</strong><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span>; 社区版当前只开放了测试跟踪管理 (主要功能用例管理，缺陷管理)，后续接着分离其他功能代码出来。</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong><span style="color:#333333">Codes 帮助 it 企业数字化转型，实现降本增效；以便捷的方式给管理人员以上帝视角来审视软件研发全流程；以不增加负担的方式，让执行人员高效协同，使执行过程事找人、透明化、可追溯；围绕需求拉通所有研发活动，全场景业务数据惯通不割裂。</span></strong></p><p style="margin-left:0; margin-right:0"><strong><strong>官网&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Ficodes.work" target="_blank">icodes.work</a></strong></strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>二：4.2.1&nbsp; 更新说明</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>主要是 bug&nbsp;修复，一共 11 个 bug fixed ，加 1 个更新</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>4.2.1 版 1 个更新：</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="background-color:#ffffff; color:#40485b">1、优化用例分配的实现方式</span>：有用户反馈，他在分用例到用例包时，要分配个把小时。支持从其他用例包已分配的用例中，拷贝分配关系到当前用例包中，来，当同样的用例，需要在不同的平台上执行时，就不用重复分配用例了</p><p style="margin-left:0; margin-right:0"><strong>4.2.1 版 11 个 bug 修复：</strong></p><p style="margin-left:0; margin-right:0">1、修复用例操作过程及数据，超过 600 字时，导入不进去的问题<br> 2、项目名中包括中杠时，且只参加一个项目，点测试后直接跳转到项目时，一直提示，没提交测试需求的问题<br> 3、点 「测试」 然后选择一个刚建好且设置好测试流程的项目时，在测试总揽里，人员摘要中显示的数据不对的问题<br> 4、修复点迭代明细 TAB 上的刷新图示，显示出两个 grid ，应该是有当前的 Grid 的问题<br> 5、修复项目不设置版本，在导出用例的时候，报错的问题<br> 6、修复增加测试包，有时候会报系统异常，4.2.0 之前版没这问题的问题<br> 7、修复项目不设置版本，在下载用例导入模板时，报错的问题<br> 8、修复测试总览缺陷摘要中，已改缺陷有时候统计不准的问题<br> 9、用例导入时，下拉列表中的阻塞，写为阴塞 &nbsp;<br> 10、日提交及 BUG 总数趋势中，不显示提交的数据 &nbsp;<br> 11、版本间提交及 BUG 存在总趋势统计，因逻辑删除一些版本，不显示 bug&nbsp;存在总趋势&nbsp;</p><p style="margin-left:0; margin-right:0"><strong>三：功能界面截屏</strong></p><p style="margin-left:0; margin-right:0"><strong><span style="background-color:#ffffff; color:#333333">对研发全场景数据进行多维度分析，帮助团队进行效能的持续改进，帮助企业深耕研发效能</span></strong></p><p style="margin-left:0; margin-right:0"><img src="https://oscimg.oschina.net/oscnet/up-6adbcecfb7067ab281ecfadfe02943350b1.png" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0"><img height="1308" src="https://oscimg.oschina.net/oscnet/up-fe045fd2b717b4499d6245be6d2b052349e.png" width="2151" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="margin-left:0; margin-right:0"><strong><span style="background-color:#ffffff; color:#333333">敏捷与瀑布融合，有迭代也有 PMO 关注的里程碑</span></strong></p><p style="margin-left:0; margin-right:0"><img height="1400" src="https://oscimg.oschina.net/oscnet/up-f6f4609111b363abd9760c6019b98f4ffa8.png" width="2240" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0"><strong><span><span>​</span></span><span style="background-color:#ffffff; color:#333333">待办排名，一目了然当前进度瓶颈</span></strong></p><p style="margin-left:0; margin-right:0"><img src="https://oscimg.oschina.net/oscnet/up-34d711f7fc6f11e69964e76afe679b10f1c.png" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0"><strong><span style="background-color:#ffffff; color:#333333">工作负载以日历和甘特图的形式显示，直观快捷</span></strong></p><p style="margin-left:0; margin-right:0"><img src="https://oscimg.oschina.net/oscnet/up-09d7d63c4e1bdd5e872f5d31a8eb37ec9d7.png" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0"><strong>风险分析中以拓补图的方式查看风险事项</strong></p><p style="margin-left:0; margin-right:0">数据来自工时日报中汇报的风险</p><p><img height="1008" src="https://oscimg.oschina.net/oscnet/up-0ceff85dfa412abc7a3e0514ce425a2203c.png" width="1978" referrerpolicy="no-referrer"></p><p>&nbsp;</p><p style="margin-left:0; margin-right:0"><strong>测试，开发，产品产出及工时&nbsp;一目了然</strong></p><p style="margin-left:0; margin-right:0"><img height="910" src="https://oscimg.oschina.net/oscnet/up-dec34fadc113b30bf8bd3125642d593aa49.png" width="2151" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0"><strong><span style="background-color:#ffffff; color:#333333">生成式全局看板，通过查询条件来定义看板，可定制不同的查询并保存</span></strong></p><p style="margin-left:0; margin-right:0"><span style="background-color:#ffffff; color:#333333">且可在看板上处理一切事务，如处事缺陷入流转，执行用例，处理任务，执行迭代事项</span></p><p style="margin-left:0; margin-right:0"><img src="https://oscimg.oschina.net/oscnet/up-cc48b5f660e7d971aa22451d999cb6faac8.png" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0"><strong><span style="background-color:#ffffff; color:#333333">多种视图模式，满足不同需要，围绕需求拉通所有研发活动，确保干系人信息对齐，一个页面实现主要研发活动的联动</span></strong></p><p style="margin-left:0; margin-right:0"><span style="background-color:#ffffff; color:#333333">再也不会在需求下不能直观看到任务和用例了</span></p><p style="margin-left:0; margin-right:0"><img src="https://oscimg.oschina.net/oscnet/up-d6afb8e19ff3f5ca37607629d64d9d6683d.png" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0"><strong><span style="background-color:#ffffff; color:#333333">需求下有用任务，或子需求&nbsp;用任务或子需求的工时来推算父需求的工时，如需注多有也是层层推算</span></strong></p><p style="margin-left:0; margin-right:0"><img src="https://oscimg.oschina.net/oscnet/up-679aa985289813b1217658de2f0659cb5a2.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong><span style="background-color:#ffffff; color:#333333">多事项迭代，从需求到测试到上线&nbsp;形开闭环</span></strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">从需求，到任务，到用例，到测试，到缺陷，到自动化测试到上线，一个完整的闭环，并自动生成迭代总结并存档</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">需求评审后，规化到迭代中，然后开发人员拆分需求为任务，同时测试可写测试用例，过程中间的产出放到</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">迭代的交付物中，自动和项目文档关联，在发布中定义上线事项及执行人</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img src="https://oscimg.oschina.net/oscnet/up-207c01d9ee7d616722cbe8c9ffa545be217.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>迭代总结</strong></p><p><img height="980" src="https://oscimg.oschina.net/oscnet/up-08a06d046bc7954344449b8856d07ecac98.png" width="1818" referrerpolicy="no-referrer"></p><p><strong>迭代报告中除了总览外其他几个 TAB 全为各分项数据明细&nbsp;</strong></p><p><img height="892" src="https://oscimg.oschina.net/oscnet/up-f9e80d2cbe5c7c8a60564fa0f14412cac35.png" width="1817" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">&nbsp;</p><p style="margin-left:0; margin-right:0"><strong><span style="background-color:#ffffff; color:#191b1f">围绕需求拉通所有研发活动</span></strong></p><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="color:#404040; text-align:start">在需求下可以直接把需求分解为任务，编写用例；</p><div><div><p><img height="572" src="https://oscimg.oschina.net/oscnet/up-d106a11fe0c6c627b7e986cb5b97ee333be.png" width="1200" referrerpolicy="no-referrer"></p><p style="text-align:left"><span style="background-color:#ffffff; color:#404040">需求祥情中，也能覆盘需求,从提出需求到测试及上线的明细</span></p></div></div><p style="margin-left:0; margin-right:0"><img height="967" src="https://oscimg.oschina.net/oscnet/up-9add63757354028801b402ccf8d6522ebf2.png" width="1572" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="margin-left:0; margin-right:0"><strong><span style="background-color:#ffffff; color:#333333">迭代下任务或任务管理中任务，可从负责&nbsp;人，任务类型，优先级，需求来分组显示</span></strong></p><p style="margin-left:0; margin-right:0"><img src="https://oscimg.oschina.net/oscnet/up-a3f249baccdd47a7cab3909b1c7542a331b.png" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0"><img height="1209" src="https://oscimg.oschina.net/oscnet/up-53f736d94d135645f26c342bd7df60e29fc.png" width="2127" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="margin-left:0; margin-right:0"><strong><span style="background-color:#ffffff; color:#191b1f">日报与工时整合，以批量的形式分分钟填好工时，让烦人的工时，不再烦人！</span></strong></p><p style="margin-left:0; margin-right:0"><span style="background-color:#ffffff; color:#333333">自动列出当日事项，在其后填写工时，缺陷及用例都计算了工时，可以完整统计迭代进度，项目进度，以及部门工时。按支持层层下钻到人，如项目下钻到迭代，再从迭代下钻到人，或是从部门下钻到人</span></p><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="margin-left:0; margin-right:0"><img src="https://oscimg.oschina.net/oscnet/up-299736c29a88fcf5852c75586b479d98edd.png" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="margin-left:0; margin-right:0"><img src="https://oscimg.oschina.net/oscnet/up-1a557f5ffa5c01cfcb1c376f730b57be994.png" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0"><strong><span style="background-color:#ffffff; color:#333333">以迭代的方式来组织测试，比传统的测试计划更便于管理</span></strong></p><p style="margin-left:0; margin-right:0">&nbsp;</p><p><img height="1041" src="https://oscimg.oschina.net/oscnet/up-c7fec603c316687ecf17e7d053069cff93d.png" width="1413" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0"><img src="https://oscimg.oschina.net/oscnet/up-3ab42eb2fb386872e14d3389e950ab2f038.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong><span style="background-color:#ffffff; color:#333333">零代码拖拽式实现代码的编译和部署</span></strong></p><p style="margin-left:0; margin-right:0"><img src="https://oscimg.oschina.net/oscnet/up-693acce6865fc2ccd7c8af95d87ace710be.png" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0"><strong><span style="background-color:#ffffff; color:#333333">零代码拖拽式进行接口自动化编排</span></strong></p><p style="margin-left:0; margin-right:0"><img src="https://oscimg.oschina.net/oscnet/up-9e840f7edf3da7c13586d292f7255fb2af9.png" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0"><strong><span style="background-color:#ffffff; color:#333333">自动推导接口依赖拓补关系图，让接口关系不再是黑匣子，便捷的接口调用链</span></strong></p><p style="margin-left:0; margin-right:0"><img src="https://oscimg.oschina.net/oscnet/up-5d6296dd4b63ca93912b9025366dd1eaf5e.png" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0"><strong><span style="background-color:#ffffff; color:#333333">拖拽生成断言和拖拽提取参数，让接口测试傻瓜化； 创新式接口混沌测试，瞬间完成接口健壮性测试。</span></strong></p><p style="margin-left:0; margin-right:0"><img src="https://oscimg.oschina.net/oscnet/up-418f33ad28ba511633fc6041bc8b36ae3d0.png" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0"><strong>最后打一个总结</strong><strong>：Codes 是一个：简单、轻量、超低学习成本的研发管理平台，不限功能 30 人免费，本地安装。创新性 SaaS 模式，零代码接口测试，零代码压力测试、零代码 CI CD 流水线编排等。<span>下面是图说 Codes：</span></strong></p><p style="margin-left:0; margin-right:0"><img height="3227" src="https://oscimg.oschina.net/oscnet/up-95ef72e0d10a678fc9097e0af4ce27917aa.jpg" width="1080" referrerpolicy="no-referrer"></p></div></div></div>
                                    ]]>
            </description>
            <pubDate>Fri, 29 Dec 2023 06:47:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/273283/codes-4-2-1-released</guid>
            <link>https://www.oschina.net/news/273283/codes-4-2-1-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[GreatSQL 8.0.32-25 今日发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h1>GreatSQL 8.0.32-25 今日发布</h1><h2>版本信息</h2><ul><li><p>发布时间：2023 年 12 月 28 日</p></li><li><p>版本号：8.0.32-25, Revision db07cc5cb73</p></li><li><p>下载链接：<a href="https://gitee.com/GreatSQL/GreatSQL/releases/tag/GreatSQL-8.0.32-25">RPM 包</a>、<a href="https://gitee.com/GreatSQL/GreatSQL/releases/tag/GreatSQL-8.0.32-25">TAR 包</a>、<a href="https://gitee.com/GreatSQL/GreatSQL/releases/tag/GreatSQL-8.0.32-25">源码包</a></p></li><li><p>用户手册：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgreatsql.cn%2Fdocs%2F8032-25%2F" target="_blank">GreatSQL 8.0.32-25 User Manual</a></p></li></ul><h2>特性增强</h2><p>GreatSQL 8.0.32-25 版本中首次推出支持高性能的内存查询加速 AP 引擎，可将 GreatSQL 的数据分析性能提升几个数量级；大幅增加 Oracle 兼容特性，支持更多数据类型、SQL 语法、函数及存储过程等；支持异步删除 InnoDB 大表；支持在 MGR 只读节点绑定动态 VIP 以及主节点切换时主动断开当前连接，缩短应用端不可用时长。</p><h3>高可用</h3><ul><li>支持在 MGR 单主（Single Primary）模式下，对只读节点绑定 VIP，业务可以通过该 VIP 来访问只读节点，实现只读节点的动态 VIP 漂移。更详细内容参考：MGR 绑定动态 VIP。</li><li>支持在 MGR 单主（Single Primary）模式下，当主节点切换时会主动关闭当前活跃连接，缩短应用端不可用时长。更详细内容参考：MGR 切主后断开应用连接。</li><li>在跨机房容灾场景，同时开启多源复制和主主复制时，可能出现数据回路问题。新增 replicate_server_mode 选项用于控制只应用多源复制管道内临近主节点上产生的 binlog，不会应用其他的非临近节点产生的 binlog，避免出现数据回路问题。多通道主主复制能减少机房容灾演练和切换时的主从配置变更，该特性由中移智家 DBA 团队（徐良）贡献代码。更多详细内容参考：GreatSQL 高可用特性之主主复制防止回路。</li><li>更多信息详见文档：高可用。</li></ul><h3>高性能</h3><ul><li><p>支持类似 MySQL HeatWave 的大规模并行、高性能的内存查询加速 AP 引擎，可将 GreatSQL 的数据分析性能提升几个数量级。在 32C64G 测试机环境下，TPC-H 100G 测试中 22 条 SQL 总耗时仅需不到 80 秒。更详细内容参考：Rapid 引擎。</p></li><li><p>支持异步删除 InnoDB 大表，删除 10G 以上大表时对系统负载几乎没影响，有效提高 InnoDB 引擎运行时性能的稳定性。更详细内容参考：异步删除 InnoDB 大表。</p></li><li><p>提升 InnoDB PQ 能力，支持 TPC-H Q21 查询优化能力。</p></li><li><p>更多信息详见文档：高性能。</p></li></ul><h3>高兼容</h3><ul><li><p>从 GreatSQL 8.0.32-25 版本开始，在 Oracle 兼容方面有了巨大提升，除了 OCI、DBlink、Packages 之外，支持大多数常用的 SQL 语法、数据类型、函数、存储过程、触发器、视图等功能。支持 CLOB、NUMBER、VARCHAR2、PLS_INTEGER 等数据类型，支持 ADD_MONTHS、CHR、DUMP 等函数，支持 ANY、ALL、Hierarchical Query、FULL JOIN 等 SQL 语法，支持存储过程、触发器、视图等兼容性。</p></li><li><p>更多信息详见文档：高兼容。</p></li></ul><h2>缺陷修复</h2><ul><li>修复当在多子网环境中的 MGR 读写节点绑定 VIP 后需手动刷新 ARP 表的问题 <a href="https://gitee.com/GreatSQL/GreatSQL/issues/I7F3PB">issue#I7F3PB</a>。</li><li>修复当接收端实例设置 <code>innodb_flush_method = O_DIRECT</code> 时，执行加密 CLONE 备份时性能特别差的问题。</li><li>修复启用 InnoDB PQ 特性后，TPC-H Q3、Q5 查询性能反倒下降的问题。</li><li>修复 Oracle 兼容函数 SUBSTR 及 SUBSTRB 在对传入参数自动做四舍五入与 Oracle 处理不一致的问题。</li><li>修复并行 LOAD DATA 无法正确分割复杂文本，同时会有长事务不提交导致 UNDO 持续增长的问题。</li><li>修复在 FOR LOOP 循环中用到 ROWNUM 时，在每轮循环中，数据查询结果集中的 ROWNUM 不能被重置从 0 再开始的问题。</li></ul><h2>注意事项</h2><h2>GreatSQL VS MySQL</h2><table cellspacing="0" style="border-collapse:collapse; box-sizing:border-box !important; display:table; margin:0px 0px 10px; max-width:100%; outline:0px; overflow-wrap:break-word !important; padding:0px; width:657px"><tbody><tr><th style="text-align:left"><strong>1.主要特性</strong></th><th style="text-align:center">GreatSQL 8.0.32-25</th><th style="text-align:center">MySQL 8.0.32</th></tr></tbody><tbody><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px">开源</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px">ACID 完整性</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px">MVCC 特性</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px">支持行锁</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px">Crash 自动修复</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px">表分区 (Partitioning)</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px">视图 (Views)</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px">子查询 (Subqueries)</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px">触发器 (Triggers)</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px">存储程序 (Stored Programs)</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px">外键 (Foreign Keys)</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px">窗口函数 (Window Functions)</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px">通用表表达式 CTE</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px">地理信息 (GIS)</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px">基于 GTID 的复制</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px">组复制 (MGR)</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px">MyRocks 引擎</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">&nbsp;</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px"><strong>2. 性能提升扩展</strong></td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">GreatSQL 8.0.32-25</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">MySQL 8.0.32</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px">AP 引擎</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">仅云上 HeatWave</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px">InnODB 并行查询</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">仅主键扫描</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px">并行 LOAD DATA</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">❌</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px">InnoDB 事务 ReadView 无锁优化</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">❌</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px">InnoDB 事务大锁拆分优化</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">❌</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px">InnoDB 资源组</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px">自定义 InnoDB 页大小</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px">Contention-Aware Transaction Scheduling</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px">InnoDB Mutexes 拆分优化</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">❌</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px">MEMORY 引擎优化</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">❌</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px">InnoDB Flushing 优化</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">❌</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px">并行 Doublewrite Buffer</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px">InnoDB 快速索引创建优化</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">❌</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px">VARCHAR/BLOB/JSON 类型存储单列压缩</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">❌</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px">数据字典中存储单列压缩信息</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">❌</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px"><strong>3. 面向开发者提升改进</strong></td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">GreatSQL 8.0.32-25</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">MySQL 8.0.32</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px">X API</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px">JSON</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px">NoSQL Socket-Level 接口</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px">InnoDB 全文搜索改进</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">❌</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px">更多 Hash/Digest 函数</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">❌</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px">Oracle 兼容-数据类型</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">❌</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px">Oracle 兼容-函数</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">❌</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px">Oracle 兼容-SQL 语法</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">❌</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px">Oracle 兼容-存储程序</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">❌</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px"><strong>4. 基础特性提升改进</strong></td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">GreatSQL 8.0.32-25</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">MySQL 8.0.32</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px">MGR 提升-地理标签</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">❌</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px">MGR 提升-仲裁节点</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">❌</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px">MGR 提升-读写节点绑定 VIP</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">❌</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px">MGR 提升-快速单主模式</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">❌</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px">MGR 提升-智能选主机制</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">❌</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px">MGR 提升-全新流控算法</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">❌</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px">information_schema 表数量</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">95</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">65</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px">全局性能和状态指标</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">853</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">434</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px">优化器直方图 (Histograms)</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px">Per-Table 性能指标</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">❌</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px">Per-Index 性能指标</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">❌</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px">Per-User 性能指标</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">❌</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px">Per-Client 性能指标</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">❌</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px">Per-Thread 性能指标</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">❌</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px">全局查询相应耗时统计</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">❌</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px">SHOW INNODB ENGINE STATUS 增强</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">❌</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px">回滚段信息增强</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">❌</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px">临时表信息增强</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">❌</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px">用户统计信息增强</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">❌</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px">Slow log 信息增强</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">❌</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px"><strong>5.安全性提升</strong></td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">GreatSQL 8.0.32-25</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">MySQL 8.0.32</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px">国密支持</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">❌</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px">备份加密</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">❌</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px">审计日志入库</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">❌</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px">SQL Roles</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px">SHA-2 密码 Hashing</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px">密码轮换策略</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px">PAM 认证插件</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">仅企业版</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px">审计插件</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">仅企业版</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px">Keyring 存储在文件中</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px">Keyring 存储在 Hashicorp Vault 中</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">仅企业版</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px">InnoDB 数据加密</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px">InnoDB 日志加密</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px">InnoDB 各种表空间文件加密</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px">二进制日志加密</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">❌</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px">临时文件加密</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">❌</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px">强制加密</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">❌</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px"><strong>6. 运维便利性提升</strong></td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">GreatSQL 8.0.32-25</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">MySQL 8.0.32</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px">DDL 原子性</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px">数据字典存储 InnoDB 表</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px">快速 DDL</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px">SET PERSIST</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px">不可见索引</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px">线程池 (Threadpool)</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">仅企业版</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px">备份锁</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">❌</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px">SHOW GRANTS 扩展</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">❌</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px">表损坏动作扩展</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">❌</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px">杀掉不活跃事务</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">❌</td></tr><tr><td style="border-color:#cccccc; border-style:solid; border-width:1px">START TRANSACTION WITH CONSISTENT SNAPSHOT 扩展</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">✔️</td><td style="border-color:#cccccc; border-style:solid; border-width:1px; text-align:center">❌</td></tr></tbody></table><p>此外，GreatSQL 8.0.32-25 基于 Percona Server for MySQL 8.0.32 版本，它在 MySQL 8.0.32 基础上做了大量的改进和提升以及众多新特性，详情请见：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.percona.com%2Fpercona-server%2F8.0%2Ffeature-comparison.html" target="_blank"><strong>Percona Server for MySQL feature comparison</strong></a>，这其中包括线程池、审计、数据脱敏等 MySQL 企业版才有的特性，以及 performance_schema 提升、information_schema 提升、性能和可扩展性提升、用户统计增强、PROCESSLIST 增强、Slow log 增强等大量改进和提升，这里不一一重复列出。</p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 29 Dec 2023 06:26:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/273278/greatsql-8-0-32-25-released</guid>
            <link>https://www.oschina.net/news/273278/greatsql-8-0-32-25-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[zorm 1.7.5 发布，文档属于开源项目的一部分]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span>Go 轻量 ORM, 零依赖，零侵入分布式事务，支持达梦 (dm), 金仓 (kingbase), 神通 (shentong), 南通 (gbase),TDengine,mysql,postgresql,oracle,mssql,sqlite,db2,clickhouse...</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">源码:<a href="https://gitee.com/chunanyong/zorm" target="_blank">https://gitee.com/chunanyong/zorm</a><br> 官网:<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fzorm.cn" target="_blank">https://zorm.cn</a></p><ul><li>基于原生 sql 语句<span style="background-color:#ffffff; color:#40485b">，</span>学习成本更低<span style="background-color:#ffffff; color:#40485b">，性能更优</span></li><li><a href="https://gitee.com/zhou-a-xing/zorm-generate-struct" target="_blank">代码生成器</a></li><li><span style="background-color:#ffffff; color:#40485b">代码精简，主体 3000 行，零依赖 5000 行，注释详细，方便定制修改</span></li><li><span style="color:#c0392b"><strong>支持事务传播，这是 zorm 诞生的主要原因</strong></span></li><li>支持 mysql,postgresql,oracle,mssql,sqlite,db2,<strong><span style="color:#c0392b">dm (达梦),kingbase (金仓),shentong (神通),gbase (南通),TDengine,clickhouse</span></strong></li><li>支持多库和读写分离</li><li>不支持联合主键，变通认为无主键，业务控制实现 (艰难取舍)</li><li>集成 seata-go,hptx,dbpack 支持全局托管，不修改业务代码，零侵入分布式事务</li><li>支持 clickhouse, 更新和删除语句使用 SQL92 标准语法</li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>更新:</strong></p><ol><li>感谢 @encircles 的<a href="https://gitee.com/chunanyong/zorm/pulls/5" target="_blank">pr</a>,修复缓存 key 存在不唯一的可能性</li><li>完善文档,注释</li></ol></div>
                                    ]]>
            </description>
            <pubDate>Fri, 29 Dec 2023 03:48:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/273262/zorm-1-7-5-released</guid>
            <link>https://www.oschina.net/news/273262/zorm-1-7-5-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[OpenNJet v2.00 发布啦！]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">在最新发布的 v2.0.0 版本中，对基础框架进行了大幅优化，增加对 HTTP/3 的支持，进一步丰富了 OpenNJet 的生态，动态能力逐渐成熟。此次更新主要包括以下五个方面：</p><ul><li><strong>基础框架大幅优化。</strong><span>&nbsp;</span>框架的优化对于 CoPilots 进行了加固，实现了 lua vm、高权限执行框架、配置沙箱等能力，从而进一步提高 OpenNJet 的稳定性以及执行效率。</li><li><strong>成熟的动态能力。</strong><span>&nbsp;</span>对模块继续进行动态化改造，优化了动态证书管理，覆盖企业灰度发布等关键场景，动态 location 能力在 v2.0.0 已经进入成熟阶段。</li><li><strong>加入新协议 HTTP/3 。</strong><span>&nbsp;</span>主要实现了 HTTP/3 的 Server 能力，以及 ftp 协议的代理能力。在安全的基础上实现灵活的负载均衡</li><li><strong>继续强化高效安全。</strong><span>&nbsp;</span>强化系统安全，加固自身；实现了业务安全，业务修复无损性能，更好的保护数据、提供可靠的服务，并简化运维任务。</li><li><strong>两个企业特性。</strong><span>&nbsp;</span>实现集群的基本构建，从而避免在故障转移、集群扩容新增加节点等人工操作，减少业务中断时间而无损性能；尝试引入智能化，合理分配资源。</li></ul><p><strong>详细解读：</strong><a href="https://my.oschina.net/u/6606114/blog/10456620">https://my.oschina.net/u/6606114/blog/10456620</a></p><p><strong>Gitee 仓库：</strong><a href="https://gitee.com/njet-rd/njet">https://gitee.com/njet-rd/njet</a></p><p><strong>官网：</strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnjet.org.cn%2F" target="_blank">https://njet.org.cn/</a></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 29 Dec 2023 03:40:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/273260/opennjet-2-00-released</guid>
            <link>https://www.oschina.net/news/273260/opennjet-2-00-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Rust 1.75.0 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff; color:#333333"><span style="color:#333333">Rust 1.75.0 稳定版已正式</span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.rust-lang.org%2F2023%2F12%2F28%2FRust-1.75.0.html" target="_blank">发布</a><span style="background-color:#ffffff; color:#333333"><span style="color:#333333">，主要带来以下变化：</span></span></p><h4 style="text-align:start">traits 中的<code>async fn</code><span>&nbsp;</span>和 return-position<span>&nbsp;</span><code>impl Trait</code></h4><p style="text-align:start"><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>Rust 1.75 支持在 Trait 中使用<code>async fn</code>和<code>-&gt; impl Trait</code>。但是，此初始版本存在<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.rust-lang.org%2F2023%2F12%2F21%2Fasync-fn-rpit-in-traits.html%23where-the-gaps-lie" target="_blank">公告帖子</a>中描述的一些限制。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:start"><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>预计这些限制将在未来的版本中取消。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><h4><strong><span style="background-color:#ffffff; color:#333333"><span style="color:#333333">指针字节偏移 API</span></span></strong></h4><p style="text-align:start"><span style="background-color:#ffffff; color:#333333">原始指针</span><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>（<code>*const T</code>和<code>*mut T</code>）主要用于支持以<code>T</code>为单位的操作。例如，<code>&lt;*const T&gt;::add(1)</code>将&nbsp;<code>size_of::&lt;T&gt;()</code>字节添加到指针的地址。在某些情况下，使用字节偏移量更方便，并且这些新 API 避免了要求调用者首先强制转换为<code>*const u8</code>/&nbsp;<code>*mut u8</code>。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fcore%2Fprimitive.pointer.html%23method.byte_add" target="_blank"><code>pointer::byte_add</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fcore%2Fprimitive.pointer.html%23method.byte_offset" target="_blank"><code>pointer::byte_offset</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fcore%2Fprimitive.pointer.html%23method.byte_offset_from" target="_blank"><code>pointer::byte_offset_from</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fcore%2Fprimitive.pointer.html%23method.byte_sub" target="_blank"><code>pointer::byte_sub</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fcore%2Fprimitive.pointer.html%23method.wrapping_byte_add" target="_blank"><code>pointer::wrapping_byte_add</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fcore%2Fprimitive.pointer.html%23method.wrapping_byte_offset" target="_blank"><code>pointer::wrapping_byte_offset</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fcore%2Fprimitive.pointer.html%23method.wrapping_byte_sub" target="_blank"><code>pointer::wrapping_byte_sub</code></a></li></ul><h4 style="text-align:start"><span><span><strong><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>rustc 的代码布局优化</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></span></span></h4><p><span><span><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>Rust 编译器的运行速度继续加快，此次发布的二进制版本采用了 BOLT 技术，使基准测试平均运行时间提高了 2%。该工具优化了包含大部分 rustc 代码的 librustc_driver.so 库的布局，从而提高了缓存利用率。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p><span><span><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>现在还在使用 -Ccodegen-units=1 构建 rustc，为在 LLVM 中进行优化提供了更多机会。这一优化为基准测试带来了 1.5% </span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="background-color:#ffffff; color:#000000">的平均运行时间平均提升。</span></p><p><span><span><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>在此版本中，这些优化仅限于 x86_64-unknown-linux-gnu 编译器。项目团队计划随着时间的推移将其扩展到更多平台。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><h3 style="text-align:start"><span><span><strong><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>稳定的 API</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></span></span></h3><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fcore%2Fsync%2Fatomic%2Fstruct.AtomicUsize.html%23method.from_ptr" target="_blank"><code>Atomic*::from_ptr</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fstd%2Ffs%2Fstruct.FileTimes.html" target="_blank"><code>FileTimes</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fstd%2Fos%2Fwindows%2Ffs%2Ftrait.FileTimesExt.html" target="_blank"><code>FileTimesExt</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fstd%2Ffs%2Fstruct.File.html%23method.set_modified" target="_blank"><code>File::set_modified</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fstd%2Ffs%2Fstruct.File.html%23method.set_times" target="_blank"><code>File::set_times</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fcore%2Fnet%2Fenum.IpAddr.html%23method.to_canonical" target="_blank"><code>IpAddr::to_canonical</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fcore%2Fnet%2Fstruct.Ipv6Addr.html%23method.to_canonical" target="_blank"><code>Ipv6Addr::to_canonical</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fcore%2Foption%2Fenum.Option.html%23method.as_slice" target="_blank"><code>Option::as_slice</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fcore%2Foption%2Fenum.Option.html%23method.as_mut_slice" target="_blank"><code>Option::as_mut_slice</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fcore%2Fprimitive.pointer.html%23method.byte_add" target="_blank"><code>pointer::byte_add</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fcore%2Fprimitive.pointer.html%23method.byte_offset" target="_blank"><code>pointer::byte_offset</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fcore%2Fprimitive.pointer.html%23method.byte_offset_from" target="_blank"><code>pointer::byte_offset_from</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fcore%2Fprimitive.pointer.html%23method.byte_sub" target="_blank"><code>pointer::byte_sub</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fcore%2Fprimitive.pointer.html%23method.wrapping_byte_add" target="_blank"><code>pointer::wrapping_byte_add</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fcore%2Fprimitive.pointer.html%23method.wrapping_byte_offset" target="_blank"><code>pointer::wrapping_byte_offset</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fcore%2Fprimitive.pointer.html%23method.wrapping_byte_sub" target="_blank"><code>pointer::wrapping_byte_sub</code></a></li></ul><p style="text-align:start"><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>这些 API 现在在 const</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="background-color:#ffffff; color:#000000"><span>&nbsp;</span>contexts&nbsp;</span><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>中是稳定的：</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fcore%2Fnet%2Fstruct.Ipv6Addr.html%23method.to_ipv4_mapped" target="_blank"><code>Ipv6Addr::to_ipv4_mapped</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fcore%2Fmem%2Funion.MaybeUninit.html%23method.assume_init_read" target="_blank"><code>MaybeUninit::assume_init_read</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fcore%2Fmem%2Funion.MaybeUninit.html%23method.zeroed" target="_blank"><code>MaybeUninit::zeroed</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fcore%2Fmem%2Ffn.discriminant.html" target="_blank"><code>mem::discriminant</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fcore%2Fmem%2Ffn.zeroed.html" target="_blank"><code>mem::zeroed</code></a></li></ul><h4 style="text-align:start"><span><span><strong><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>其他变化</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></span></span></h4><p style="text-align:start"><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>查看&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frust-lang%2Frust%2Freleases%2Ftag%2F1.75.0" target="_blank">Rust</a>、<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frust-lang%2Fcargo%2Fblob%2Fmaster%2FCHANGELOG.md%23cargo-175-2023-12-28" target="_blank">Cargo</a>&nbsp;和&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frust-lang%2Frust-clippy%2Fblob%2Fmaster%2FCHANGELOG.md%23rust-175" target="_blank">Clippy</a>&nbsp;中发生的所有变化。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:start"><span style="background-color:#ffffff; color:#333333"><span style="color:#333333">详情可</span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.rust-lang.org%2F2023%2F12%2F28%2FRust-1.75.0.html" target="_blank">查看官方公告</a><span style="background-color:#ffffff; color:#333333"><span style="color:#333333">。</span></span></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 29 Dec 2023 02:49:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/273247/rust-1-75-0-released</guid>
            <link>https://www.oschina.net/news/273247/rust-1-75-0-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[yuqing v1.2.0 已经发布，舆情监控系统]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>yuqing v1.2.0 已经发布，舆情监控系统</p><p>此版本更新内容包括：</p><p>1.修复了若干 bug 2.文章详情新增光学字符识别、图像识别、智写报告功能 3.搜索菜单改为全文搜索 4.新增监测大屏 5.用户识别鉴权逻辑由 session 改为 token 实现 6.今日热点后端逻辑迁移到<a href="https://gitee.com/stonedtx/yuqing-manager" target="_blank" rel="nofollow">开源情报后台管理系统</a></p><p>详情查看：<a href="https://gitee.com/stonedtx/yuqing/releases/v1.2.0" rel="nofollow">https://gitee.com/stonedtx/yuqing/releases/v1.2.0</a></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 29 Dec 2023 02:44:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/273244/yuqing-1-2-0-released</guid>
            <link>https://www.oschina.net/news/273244/yuqing-1-2-0-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[go-carbon v2.3.1 发布，轻量级、语义化、对开发者友好的 Golang 时间处理库]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">carbon 是一个轻量级、语义化、对开发者友好的 Golang 时间处理库，支持链式调用、农历和 gorm、xorm 等主流 orm。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">目前已被<span><span>&nbsp;</span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fyinggaozhen%2Fawesome-go-cn%23%25E6%2597%25A5%25E6%259C%259F%25E5%2592%258C%25E6%2597%25B6%25E9%2597%25B4" target="_blank">awesome-go-cn</a><span><span>&nbsp;</span></span>收录，如果您觉得不错，请给个 star 吧</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgolang-module%2Fcarbon" target="_blank">github.com/golang-module/carbon</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/golang-module/carbon" target="_blank">gitee.com/golang-module/carbon</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">定义模型</p><pre><code class="language-go">type Person struct {
    Name string `json:"name"`
    Age  int    `json:"age"`
    
    Birthday0 Carbon `json:"birthday0"`
    Birthday1 Carbon `json:"birthday1" carbon:"date"`
    Birthday2 Carbon `json:"birthday2" carbon:"time"`
    Birthday3 Carbon `json:"birthday3" carbon:"dateTime"`
    Birthday4 Carbon `json:"birthday4" carbon:"date" tz:"PRC"`
    Birthday5 Carbon `json:"birthday5" carbon:"time" tz:"PRC"`
    Birthday6 Carbon `json:"birthday6" carbon:"dateTime" tz:"PRC"`
}

或 

type Person struct {
    Name string `json:"name"`
    Age  int    `json:"age"`
    
    Birthday0 Carbon `json:"birthday0"`
    Birthday1 Carbon `json:"birthday1" carbon:"layout:2006-01-02"`
    Birthday2 Carbon `json:"birthday2" carbon:"layout:15:04:05"`
    Birthday3 Carbon `json:"birthday3" carbon:"layout:2006-01-02 15:04:05"`
    Birthday4 Carbon `json:"birthday4" carbon:"layout:2006-01-02" tz:"PRC"`
    Birthday5 Carbon `json:"birthday5" carbon:"layout:15:04:05" tz:"PRC"`
    Birthday6 Carbon `json:"birthday6" carbon:"layout:2006-01-02 15:04:05" tz:"PRC"`
}

或 

type Person struct {
    Name string `json:"name"`
    Age  int    `json:"age"`
    
    Birthday0 Carbon `json:"birthday0"`
    Birthday1 Carbon `json:"birthday1" carbon:"format:Y-m-d"`
    Birthday2 Carbon `json:"birthday2" carbon:"format:H:i:s"`
    Birthday3 Carbon `json:"birthday3" carbon:"format:Y-m-d H:i:s"`
    Birthday4 Carbon `json:"birthday4" carbon:"format:Y-m-d" tz:"PRC"`
    Birthday5 Carbon `json:"birthday5" carbon:"format:H:i:s" tz:"PRC"`
    Birthday6 Carbon `json:"birthday6" carbon:"format:Y-m-d H:i:s" tz:"PRC"`
}</code></pre><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">实例化模型</p><pre><code class="language-go">now := Parse("2020-08-05 13:14:15", PRC)
person := Person {
    Name:      "gouguoyin",
    Age:       18,

    Birthday0: now,
    Birthday1: now,
    Birthday2: now,
    Birthday3: now,
    Birthday4: now,
    Birthday5: now,
    Birthday6: now,
}</code></pre><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">JSON 编码</p><pre><code class="language-go">loadErr := carbon.LoadTag(&amp;person)
if loadErr != nil {
    // 错误处理
    log.Fatal(loadErr)
}
data, marshalErr := json.Marshal(person)
if marshalErr != nil {
    // 错误处理
    log.Fatal(marshalErr)
}
fmt.Printf("%s", data)
// 输出
{
    "name": "gouguoyin",
    "age": 18,
    "birthday0": "2020-08-05 13:14:15",
    "birthday1": "2020-08-05",
    "birthday2": "13:14:15",
    "birthday3": "2020-08-05 13:14:15",
    "birthday4": "2020-08-05",
    "birthday5": "213:14:15",
    "birthday6": "2020-08-05 13:14:15"
}</code></pre><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">JSON 解码</p><pre><code class="language-go">str := `{
    "name": "gouguoyin",
    "age": 18,
    "birthday0": "2020-08-05 13:14:15",
    "birthday1": "2020-08-05",
    "birthday2": "13:14:15",
    "birthday3": "2020-08-05 13:14:15",
    "birthday4": "2020-08-05",
    "birthday5": "213:14:15",
    "birthday6": "2020-08-05 13:14:15"
}`
var person Person

loadErr := carbon.LoadTag(&amp;person)
if loadErr != nil {
    // 错误处理
    log.Fatal(loadErr)
}

unmarshalErr := json.Unmarshal([]byte(str), &amp;person)
if unmarshalErr != nil {
    // 错误处理
    log.Fatal(unmarshalErr)
}

fmt.Sprintf("%s", person.Birthday0) // 2002-08-05 13:14:15
fmt.Sprintf("%s", person.Birthday1) // 2020-08-05
fmt.Sprintf("%s", person.Birthday2) // 13:14:15
fmt.Sprintf("%s", person.Birthday3) // 2002-08-05 13:14:15
fmt.Sprintf("%s", person.Birthday4) // 2002-08-05
fmt.Sprintf("%s", person.Birthday5) // 13:14:15
fmt.Sprintf("%s", person.Birthday6) // 2002-08-05 13:14:15</code></pre><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>更新日志</strong></p><ul><li>修复在<span>&nbsp;</span><code>Now</code><span>&nbsp;</span>方法中设置测试时间时<span>&nbsp;</span><code>testNow</code><span>&nbsp;</span>为 0，造成<span>&nbsp;</span><code>IsSetTestNow</code><span>&nbsp;</span>方法返回<span>&nbsp;</span><code>false</code><span>&nbsp;</span>的 bug</li><li>添加性能测试文件<span>&nbsp;</span><code>xxx_bench_test.go</code></li><li>增加格式模板常量，如<span>&nbsp;</span><code>DateTimeFormat</code>,<span>&nbsp;</span><code>DateFormat</code>,<span>&nbsp;</span><code>TimeFormat</code>,<span>&nbsp;</span><code>AtomFormat</code>,<span>&nbsp;</span><code>ANSICFormat</code></li><li>在<span>&nbsp;</span><code>loadTag</code><span>&nbsp;</span>函数中<span>&nbsp;</span><code>carbon</code><span>&nbsp;</span>标签增加对<span>&nbsp;</span><code>datetime</code>、<code>date</code>、<code>time</code>、<code>iso8601</code><span>&nbsp;</span>等字符串的支持</li><li>在<span>&nbsp;</span><code>loadTag</code><span>&nbsp;</span>函数中新增<span>&nbsp;</span><code>tz</code><span>&nbsp;</span>标签，用于设置时区</li><li>在<span>&nbsp;</span><code>ParseByLayout</code><span>&nbsp;</span>方法中添加对<span>&nbsp;</span><code>U</code>、<code>V</code>、<code>X</code>、<code>Z</code><span>&nbsp;</span>格式化符号的支持</li><li>在<span>&nbsp;</span><code>ToFormatString</code><span>&nbsp;</span>或<span>&nbsp;</span><code>Format</code><span>&nbsp;</span>方法中添加对<span>&nbsp;</span><code>v</code>、<code>u</code>、<code>x</code><span>&nbsp;</span>格式符号的支持</li><li>新增&nbsp;<code>LoadTag</code>&nbsp;方法<span style="background-color:#f6f6f6">，</span>利用反射通过设置 tag 进行 json 自定义编码和解码</li><li>将<span>&nbsp;</span><code>ClearTestNow</code><span>&nbsp;</span>方法重命名为<span>&nbsp;</span><code>UnSetTestNow</code></li><li>将<span>&nbsp;</span><code>HasTestNow</code><span>&nbsp;</span>方法重命名为<span>&nbsp;</span><code>IsSetTestNow</code></li><li>将<span>&nbsp;</span><code>xxx_test.go</code><span>&nbsp;</span>文件重命名为<span>&nbsp;</span><code>xxx_unit_test.go</code></li><li>将<span>&nbsp;</span><code>json.go</code><span>&nbsp;</span>文件重命名为<span>&nbsp;</span><code>encoding.go</code>,<span>&nbsp;</span><code>json_test.go</code><span>&nbsp;</span>文件重命名为<span>&nbsp;</span><code>encoding_unit_test.go</code></li><li>将<span>&nbsp;</span><code>Closest</code><span>&nbsp;</span>和<span>&nbsp;</span><code>Farthest</code><span>&nbsp;</span>方法从<span>&nbsp;</span><code>traveler.go</code><span>&nbsp;</span>文件移动到<span>&nbsp;</span><code>extremum.go</code>，从<span>&nbsp;</span><code>traveler_test.go</code><span>&nbsp;</span>文件移动到<span>&nbsp;</span><code>extremum_unit_test.go</code></li><li>将<span>&nbsp;</span><code>SetTestNow</code><span>&nbsp;</span>方法中接收者类型从<span>&nbsp;</span><code>结构体</code><span>&nbsp;</span>更改为<span>&nbsp;</span><code>指针</code></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Fri, 29 Dec 2023 01:38:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/273230/go-carbon-2-3-1-released</guid>
            <link>https://www.oschina.net/news/273230/go-carbon-2-3-1-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Simple Admin Go 语言分布式后台管理系统 v1.3.0 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h2>Simple Admin - Go 语言分布式后台管理系统 v1.3.0 更新</h2><h3>项目介绍</h3><p>Simple Admin 是一个开箱即用的分布式微服务后端管理系统，基于 go-zero 开发，为开发中大型后台提供了丰富的功能，支持三端代码生成。 官方自带多种扩展，助力中小企业快速上云，快速迭代。适合用于微服务学习和商用，开源免费。</p><h3>Simple Admin Core / Job / MCMS / FMS / Common v1.3.0 更新</h3><h4>介绍</h4><p>核心模块 Core, 定时任务模块 Job, 消息中心模块 MCMS, 以及文件管理模块 FMS 均已升级至 v1.3.0</p><h4>本次更新</h4><ul><li>新增 (Common): NewRedis 和 NewRedisCluster 方法合并为 NewUniversalRedis, 使得 redis 同时支持单体和集群</li><li>优化 (Common): Captcha store 使用 universal redis</li><li>重构 (Core): errorhandler 包重构为 dberrorhandler</li><li>新增 (Core): token 新增 username 字段，方便后台查看</li><li>优化：各个项目均已适配最新 Universal Redis</li><li>更新：更新依赖</li></ul><h3>Simple Admin Backend UI v1.3.0 更新</h3><h4>介绍</h4><p>Simple Admin UI 是基于 vue-vben-admin 二次开发的为 Simple Admin 专门开发的后台管理界面，基于 Vue3 和 TypeScript 开发， 提供后台错误统一处理，国际化等功能，本项目完全免费，可用于学习和商用.</p><h4>本次更新</h4><ul><li>新增（token）: token 页新增用户名字段</li><li>优化（page）：默认分页改为 50</li><li>更新：更新系统依赖和版本号</li></ul><h3>Goctls v1.6.20 更新</h3><h4>介绍</h4><p>Goctls 是一个基于 Go Zero 官方生成工具 Goctl 开发的针对 Simple Admin 适配优化的生成工具。提供强大的代码生成功能，同时集成了许多定制工具，实现快速开发微服务接入后台和前台​。三端代码生成可以大大提升开发效率，欢迎体验​。</p><h4>特性</h4><ul><li>go-swagger : 基于 go-swagger 而不是官方的@doc 注解</li><li>多国语言支持</li><li>优化错误信息处理,支持多语言错误</li><li>简单易用的校验器</li><li>支持代码生成，生成 API,RPC 和 web 端的 CRUD 代码</li><li>支持多种额外插件如 GORM, RocketMQ</li><li>对 Simple Admin 的针对性优化</li><li>rpc logic group 分组</li><li>全面支持 Ent 代码生成</li><li>额外工具如本地日志查看，环境变量查看</li></ul><h4>本次更新</h4><ul><li>优化 (ent)： 更新 cache 模板，支持 universal redis</li><li>优化 (api,rpc): 默认 redis 由 Client 改为 UniversalClient, 更新 middle ware</li><li>更新： 更新依赖</li></ul><h3>更新预览</h3><blockquote><p>使用 universal redis</p></blockquote><p>&nbsp;<img height="585" src="https://oscimg.oschina.net/oscnet/up-f64a4c516448c5351a27fab70e9d73b710a.jpg" width="902" referrerpolicy="no-referrer"></p><p><strong>注意：本次更新需要手动更新 redis 配置，参考 github 的项目修改历史，还需要更新下数据库表，即再次点击初始化</strong></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 29 Dec 2023 01:07:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/273225/simple-admin-go-1-3-0-released</guid>
            <link>https://www.oschina.net/news/273225/simple-admin-go-1-3-0-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
    </channel>
</rss>
