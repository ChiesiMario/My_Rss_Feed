<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[开源中国-软件更新资讯]]>
        </title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="https://rsshub.app/oschina/news/project" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[开源中国-软件更新资讯 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Tue, 10 Oct 2023 04:50:29 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[Ardour 8.0 正式发布，开源数字音频工作站]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>开源数字音频工作站 Ardour 8.0 已正式发布。</p><blockquote><p>Ardour 是开源的数字音频工作站软件，支持 Linux、macOS 和 Windows 系统。你可以使用它来录制、编辑和混合多轨音频，或者只是尝试新的想法、音乐和声音。</p><p>Ardour 的功能包括：多通道录音，非破坏性编辑，无限撤销 / 重做，全自动化的支持，一个强大的调音台，无限轨道 / 总线 / 插件，时间码同步和硬件控制。</p></blockquote><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-f349693e8ee83064bf20e39114d2484b76e.png" referrerpolicy="no-referrer"></p><p>8.0 除了修复 bug 外，还包含大量改进用户体验的变更 (Quality Of Life)：</p><ul><li>在用户长期要求下加入了调整 MIDI 音键速度的传统 Lollipops 编辑界面</li><li>允许用户根据需要编排音乐</li><li>支持 3 点编辑（3-point edits）</li><li>新的 MIDI Track Piano Roll Header</li><li>支持 Launchpad Pro</li><li>Quick Groups</li></ul><p>详情查看更新说明：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fardour.org%2Fwhatsnew.html%23" target="_blank">https://ardour.org/whatsnew.html</a><br> 下载地址：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcommunity.ardour.org%2Fdownload" target="_blank">https://community.ardour.org/download</a></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 10 Oct 2023 03:49:43 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261119/ardour-8-0-ga</guid>
            <link>https://www.oschina.net/news/261119/ardour-8-0-ga</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Git Extensions v4.2 RC1 发布，独立的 Git 仓库 UI 管理工具]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff; color:#333333">Git Extensions 是一个用于管理 git 存储库的独立 UI 工具，它可以与 Windows Explorer 和 Microsoft Visual Studio (2015/2017/2019) 集成。Git Extensions v4.2 RC1 现已</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgitextensions%2Fgitextensions%2Freleases%2Ftag%2Fv4.2-rc1" target="_blank">发布</a><span style="background-color:#ffffff; color:#333333">，更新亮点如下：</span></p><ul><li>推荐使用 Git 2.41</li><li>各种性能改进</li><li>各种 UI 改进</li><li>Git Commandlog 对话框的改进</li><li>对「Rebase」对话框的改进</li><li>允许「Save as...」多个文件</li><li>编辑器现在可使用 ALT + UP 和 ALT + DOWN 上下移动行</li><li>如果要求输入密码，OpenSSH 将使用 SSH_ASKPASS（需要 OpenSSH 8.4 或更高版本；对旧版本的 OpenSSH 没有影响）</li><li>仅在当前环境中自动将 GE 设置为编辑器</li><li>对「Could not load file or assembly」异常的更用户友好的处理</li><li>JIRA 插件现在支持个人访问令牌</li><li>垂直制表符 (SHIFT + ENTER) 现在被视为换行符</li><li>为 Windows on Arm64 (WoA) 添加构建 GE 的支持。不过，这需要手动构建。</li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">要求：<strong style="color:#1f2328">.NET 6.0 Desktop Runtime<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdotnet.microsoft.com%2Fdownload%2Fdotnet%2Fthank-you%2Fruntime-desktop-6.0.22-windows-x64-installer" target="_blank">v6.0.22</a></strong><strong>&nbsp;</strong>或更高版本</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">更多详情可查看<span style="background-color:#ffffff; color:#1f2328"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgitextensions%2Fgitextensions%2Fblob%2Fv4.2-rc1%2FGitUI%2FResources%2FChangeLog.md%23version-42-21-oct-2023" target="_blank">完整更改日志</a>。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 10 Oct 2023 02:29:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261099/gitextensions-v4-2-rc1-released</guid>
            <link>https://www.oschina.net/news/261099/gitextensions-v4-2-rc1-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Diboot 2.10.0 发布，基础组件持续优化]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span style="background-color:#ffffff; color:#333333">Diboot 2.9.0 版本已于近期发布，该</span>版本主要带来了基础组件的持续打磨优化、以及工作流版本的移动端重构、极复杂流程流转相关的 bug 修复等。</p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><strong>主要优化如下：</strong></p><p style="margin-left:0; margin-right:0"><strong>diboot-core 内核</strong></p><ul><li><span>getViewObject(queryWrapper, voClass)</span></li><li><span>getValueOfField(queryWrapper, getterFn)</span></li><li><span>@BindCount 注解优化为通过分组 count 查询计数实现</span></li><li><span>@BindField 注解支持通过中间表的多条件关联从表, 绑定从表字段 [Issue I71VHY]</span></li><li><span>@BindQuery 注解 Comparison.CONTAINS 类型支持查询 JsonArray 中是否包含某个值</span></li><li><span>BaseService 添加扩展方法:&nbsp;</span></li><li><span><span>JSON 工具类：优化 json 转换 parseArray 支持指定复杂类型</span></span></li><li><span>PropertiesUtils.get() 新增默认值参数</span></li><li><span>优化 SqlFileInitializer 执行多更新操作时事务回滚逻辑</span></li><li><span>优化 Jackson 配置，避免 BigDecimal 转换成 String 避免 JS 超长问题</span></li><li><span>f</span><span>ix: 关联表查询的关联字段排序命名问题</span></li><li><span>升级依赖版本：spring boot 至 v2.7.16 等</span></li></ul><p style="margin-left:0; margin-right:0"><strong><span>IAM 组件 diboot-IAM starter</span></strong></p><ul><li><span>移除脏数据检查逻辑，优化菜单资源响应性能</span></li><li><span>优化 redis 获取全部 keys 的实现，避免海量数据效率低的问题</span></li><li><span>优化用户体系模型默认填充更新时间，便于数据同步等场景提取增量数据</span></li><li><span>升级依赖版本：shiro 至 v1.12.0 等</span></li><li><span>定时任务组件 diboot-scheduler starter</span></li><li>fix：系统启动时的定时任务的加载判定逻辑错误导致定时无法启动的问题</li></ul><p style="margin-left:0; margin-right:0"><strong><span>文件、移动端、消息提醒组件</span></strong></p><ul><li><span>优化 Oracle 初始化 sql</span></li><li><span>升级依赖至最新：easy-excel 至 v3.3.2 等</span></li></ul><p style="margin-left:0; margin-right:0"><strong><span>PC 前端 diboot-antd-admin &amp; diboot-element-admin</span></strong></p><ul><li><span>修改密码支持密码强度校验</span></li><li><span>登录密码支持加密后传输</span></li><li><span>替换定时任务在线编辑器地址</span></li><li><span>预置功能的新建表单支持「连续添加」</span></li></ul><p style="margin-left:0; margin-right:0"><span style="color:#ac39ff"><strong><span style="color:#ac39ff">代码生成工具 diboot-devtools</span></strong></span></p><ul><li><span>新增</span>树形表自身支持生成左树右列表</li><li>移动端列表页支持搜索功能</li><li>form 表单支持生成保存并继续功能</li></ul><p style="margin-left:0; margin-right:0"><strong><span style="color:#ac39ff">微服务版（企业版） diboot-cloud</span></strong></p><ul><li>登录密码加密解密</li><li><span>替换定时编辑器链接</span></li><li><span>升级依赖版本: spring-cloud 2021.0.8，spring-boot 2.7.16, diboot-core 2.10.0</span></li></ul><p style="margin-left:0; margin-right:0"><span style="color:#ac39ff"><strong>工作流版（企业版）diboot-workflow</strong></span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><strong>🎉 新增 &amp; 优化：</strong></p><p style="margin-left:0; margin-right:0"><span style="color:#0052ff"><strong>表单：</strong></span></p><ul><li><span>新增地址定位、扫码录入，组件</span></li><li><span>新增高级子表单复制行功能</span></li><li><span>优化高级子表单支持模板打印适配</span></li><li><span>优化导出包含子表单数据的 excel</span></li><li><span>重构子表单 API 数据自动导入方案，通过数据手动变更传递数值变更来进行导入操作，防止出现不可控的导入操作或不响应问题</span></li><li><span>完善高级子表单中下拉框多组件关联的功能</span></li><li><span>重构高级子表单渲染 &amp; 子表单数据对接 &amp; 数据校验规则重构</span></li><li><span>优化子表单在行数据不全时的汇总计算 (剔除要素不完整的数据记录)</span></li></ul><p style="margin-left:0; margin-right:0"><span style="color:#0052ff"><strong>移动端：</strong></span></p><ul><li><span style="color:#ffa900">移动端展示基于 Vant 重构了，各个表单组件基于移动端规范重写适配：各表单组件、部门人员选择器、业务对象选择器等，以及各个流程办理相关移动端页面基于移动端规范和习惯重写，带来更好的 UI&amp;UE 体验。</span></li></ul><p style="margin-left:0; margin-right:0"><span style="color:#0052ff"><strong>流程：</strong></span></p><ul><li><span style="color:rgba(0, 0, 0, 0.9)">增加已办详情查看的字段权限控制</span></li><li><span style="color:rgba(0, 0, 0, 0.9)">优化设计器驳回配置，支持跨主子流程驳回</span></li><li><span style="color:rgba(0, 0, 0, 0.9)">优化默认分支由输入改为选择</span></li><li><span style="color:rgba(0, 0, 0, 0.9)">优化执行优先级配置</span></li><li><span style="color:rgba(0, 0, 0, 0.9)">优化流程获取元素方法</span></li></ul><p style="margin-left:0; margin-right:0"><span style="color:#0052ff">其他：</span></p><ul><li><span style="color:rgba(0, 0, 0, 0.9)">登录密码加密解密</span></li><li><span style="color:rgba(0, 0, 0, 0.9)">添加多数据库适配文档</span></li><li><span style="color:rgba(0, 0, 0, 0.9)">升级依赖版本、清理过期代码</span></li></ul><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><strong>🐛 修复：</strong></p><ul><li><span>fix: 修复并签任务驳回后再次执行任务完成数计算错误</span></li><li><span>fix: 移动端发起流程时，表单校验出错的问题</span></li><li><span>fix 修复多实例设置成跳过驳回后就不会自动认领的问题</span></li><li><span>fix 修复中间事件阻塞导致多实例数据设置异常</span></li><li><span>fix 修复 flowable 处理 outgoing、incoming 转化后丢失问题</span></li><li><span>fix 其他已知问题</span></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Tue, 10 Oct 2023 02:12:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261096/diboot-2-10-0-released</guid>
            <link>https://www.oschina.net/news/261096/diboot-2-10-0-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[MakuCloud v3.5 发布，最简洁的微服务解决方案]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h2>项目说明</h2><ul><li>maku-cloud 是采用<span>&nbsp;</span><span style="background-color:#ffffff; color:#40485b">SpringCloud 2022、SpringBoot 3.1、SpringSecurity 6.1、Nacos、Mybatis-Plus</span><span>&nbsp;</span>等框架，开发的一套 SpringCloud 快速开发平台，使用门槛极低，且采用 MIT 开源协议，完全免费开源，可免费用于<strong>商业项目</strong>等场景。</li><li>采用组件模式，扩展不同的业务功能，可以很方便的实现各种业务需求，且不会导致系统臃肿，若想使用某个组件，按需引入即可，反之亦然。</li><li>官网地址：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmaku.net" target="_blank">https://maku.net</a></li><li>开发文档：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmaku.net%2Fdocs%2Fmaku-cloud" target="_blank">https://maku.net/docs/maku-cloud</a></li><li>演示环境：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdemo.maku.net%2Fmaku-cloud" target="_blank">https://demo.maku.net/maku-cloud</a></li></ul><h2>更新日志</h2><ul><li>优化机构上级选择逻辑</li><li>优化菜单上级选择逻辑</li><li>优化 XSS 过滤方式</li><li>优化 Excel 工具</li><li>新增代码生效器 SQL</li><li>默认放开全部组件</li><li>暂时移除在线开发</li><li>升级 springboot 到 3.1.4</li><li>升级 maku-generator 到 3.0.3</li><li>升级 easytrans 到 2.2.7</li></ul><h2>开源汇总</h2><ul><li>低代码开发平台（单体版）：<a href="https://gitee.com/makunet/maku-boot">https://gitee.com/makunet/maku-boot</a></li><li>低代码开发平台（微服务）：<a href="https://gitee.com/makunet/maku-cloud">https://gitee.com/makunet/maku-cloud</a></li><li>超好用的代码生成器：<a href="https://gitee.com/makunet/maku-generator">https://gitee.com/makunet/maku-generator</a></li><li>Vue3.x 后台管理 UI：<a href="https://gitee.com/makunet/maku-admin">https://gitee.com/makunet/maku-admin</a></li><li>Vue3.x 表单设计器：<a href="https://gitee.com/makunet/maku-form-design">https://gitee.com/makunet/maku-form-design</a></li></ul><h1>架构图</h1><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img src="https://gitee.com/makunet/maku-cloud/raw/master/images/0.png" referrerpolicy="no-referrer"></p><h2>效果图</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://oscimg.oschina.net/oscnet/up-d0065ca4f1a855b06899086183836d0af0b.jpg" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://oscimg.oschina.net/oscnet/up-1844aaec5e2fc7d41592e22214d3b6c4fb7.jpg" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="1733" src="https://oscimg.oschina.net/oscnet/up-9c6a40c83e67737c217439e5a87113464fd.png" width="3451" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://oscimg.oschina.net/oscnet/up-ece73f2b6b04ec2c55941f6e740934ab7b1.jpg" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="1723" src="https://oscimg.oschina.net/oscnet/up-8fc9c3a69eae3db5d332871e74ee26b04fe.png" width="3449" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="1738" src="https://oscimg.oschina.net/oscnet/up-c3625112682db0465d9ab75f84bd9f5fd7a.png" width="3445" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 10 Oct 2023 02:02:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261094/makucloud-3-5-released</guid>
            <link>https://www.oschina.net/news/261094/makucloud-3-5-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Wow 2.6.8 发布，告别 ORM、贫血模型、阻抗失配]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>基于 DDD、EventSourcing 的现代响应式 CQRS 架构微服务开发框架</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FAhoo-Wang%2FWow%2Fblob%2Fmvp%2FLICENSE"><img alt="License" src="https://img.shields.io/badge/license-Apache%202-4EB1BA.svg" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FAhoo-Wang%2FWow%2Freleases"><img alt="GitHub release" src="https://img.shields.io/github/release/Ahoo-Wang/Wow.svg" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fmaven-badges.herokuapp.com%2Fmaven-central%2Fme.ahoo.wow%2Fwow-core"><img alt="Maven Central" src="https://maven-badges.herokuapp.com/maven-central/me.ahoo.wow/wow-core/badge.svg" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fapp.codacy.com%2Fgh%2FAhoo-Wang%2FWow%2Fdashboard%3Futm_source%3Dgh%26utm_medium%3Dreferral%26utm_content%3D%26utm_campaign%3DBadge_grade"><img alt="Codacy Badge" src="https://app.codacy.com/project/badge/Grade/cfc724df22db4f9387525258c8a59609" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fcodecov.io%2Fgh%2FAhoo-Wang%2FWow"><img alt="codecov" src="https://codecov.io/gh/Ahoo-Wang/Wow/branch/main/graph/badge.svg?token=uloJrLoQir" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FAhoo-Wang%2FWow"><img alt="Integration Test Status" src="https://github.com/Ahoo-Wang/Wow/actions/workflows/integration-test.yml/badge.svg" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FKotlinBy%2Fawesome-kotlin"><img alt="Awesome Kotlin Badge" src="https://kotlin.link/awesome-kotlin.svg" referrerpolicy="no-referrer"></a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><strong>领域驱动&nbsp;</strong><span>&nbsp;</span>|&nbsp;<span>&nbsp;</span><strong>事件驱动</strong><span>&nbsp;&nbsp;</span>|<span>&nbsp;&nbsp;</span><strong>测试驱动</strong><span>&nbsp;&nbsp;</span>|<span>&nbsp;&nbsp;</span><strong>声明式设计</strong><span>&nbsp;</span>｜<span>&nbsp;</span><strong>响应式编程</strong><span>&nbsp;</span>｜<span>&nbsp;</span><strong>命令查询职责分离</strong><span>&nbsp;</span>｜<span>&nbsp;</span><strong>事件溯源</strong></p><h2>更新内容 🎉 🎉 🎉</h2><ul><li>特性 (RouteSpec): 命令路由（<code>@CommandRoute</code>）路径参数支持未绑定命令体字段</li><li>特性: 支持使用租户 ID(<code>TenantId</code>) 参数构造状态聚合</li><li>依赖: 更新<span>&nbsp;</span><code>org.testcontainers:testcontainers-bom</code><span>&nbsp;</span>版本<span>&nbsp;</span><code>v1.19.1</code></li><li>依赖: 更新<span>&nbsp;</span><code>io.opentelemetry:opentelemetry-bom</code><span>&nbsp;</span>版本<span>&nbsp;</span><code>v1.31.0</code></li><li>依赖: 更新<span>&nbsp;</span><code>io.mockk:mockk</code><span>&nbsp;</span>版本<span>&nbsp;</span><code>v1.13.8</code></li></ul><h2>架构图</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-Architecture" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Architecture.svg" referrerpolicy="no-referrer"></p><h3>事件源</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-EventSourcing" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/EventSourcing.svg" referrerpolicy="no-referrer"></p><h3>可观测性</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-Observability" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/OpenTelemetry.png" referrerpolicy="no-referrer"></p><h3>Spring WebFlux 集成</h3><blockquote><p style="margin-left:0; margin-right:0">自动注册<span>&nbsp;</span><strong>命令</strong><span>&nbsp;</span>路由处理函数 (<code>HandlerFunction</code>) ，开发人员仅需编写领域模型，即可完成服务开发。</p></blockquote><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="OpenAPI-Swagger" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/OpenAPI-Swagger.png" referrerpolicy="no-referrer"></p><h3>测试套件：80%+ 的测试覆盖率轻而易举</h3><blockquote><p style="margin-left:0; margin-right:0">Given -&gt; When -&gt; Expect .</p></blockquote><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-CI-Flow" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/CI-Flow.png" referrerpolicy="no-referrer"></p><h2>前置条件</h2><ul><li>理解<span>&nbsp;</span><strong>领域驱动设计</strong>：《实现领域驱动设计》、《领域驱动设计：软件核心复杂性应对之道》</li><li>理解<span>&nbsp;</span><strong>命令查询职责分离</strong>（CQRS）</li><li>理解<span>&nbsp;</span><strong>事件溯源架构</strong></li><li>理解<span>&nbsp;</span><strong>响应式编程</strong></li></ul><h2>特性</h2><ul><li><span>&nbsp;</span>Aggregate Modeling 
  <ul><li><span>&nbsp;</span>Single Class</li><li><span>&nbsp;</span>Inheritance Pattern</li><li><span>&nbsp;</span>Aggregation Pattern</li></ul></li><li><span>&nbsp;</span>Saga Modeling 
  <ul><li><span>&nbsp;</span><code>StatelessSaga</code></li></ul></li><li><span>&nbsp;</span>Test Suite 
  <ul><li><span>&nbsp;</span>兼容性测试规范（TCK）</li><li><span>&nbsp;</span><code>AggregateVerifier</code></li><li><span>&nbsp;</span><code>SagaVerifier</code></li></ul></li><li><span>&nbsp;</span>EventSourcing 
  <ul><li>EventStore 
    <ul><li><span>&nbsp;</span>MongoDB (Recommend)</li><li><span>&nbsp;</span>R2dbc 
      <ul><li><span>&nbsp;</span>Database Sharding</li><li><span>&nbsp;</span>Table Sharding</li></ul></li><li><span>&nbsp;</span>Redis</li></ul></li><li>Snapshot 
    <ul><li><span>&nbsp;</span>MongoDB</li><li><span>&nbsp;</span>R2dbc 
      <ul><li><span>&nbsp;</span>Database Sharding</li><li><span>&nbsp;</span>Table Sharding</li></ul></li><li><span>&nbsp;</span>ElasticSearch</li><li><span>&nbsp;</span>Redis (Recommend)</li></ul></li></ul></li><li><span>&nbsp;</span>命令等待策略（<code>WaitStrategy</code>） 
  <ul><li><span>&nbsp;</span><code>SENT</code><span>&nbsp;</span>: 命令发送成功后发送完成信号</li><li><span>&nbsp;</span><code>PROCESSED</code><span>&nbsp;</span>: 命令处理完成后发送完成信号</li><li><span>&nbsp;</span><code>SNAPSHOT</code><span>&nbsp;</span>: 快照生成完成后发送完成信号</li><li><span>&nbsp;</span><code>PROJECTED</code><span>&nbsp;</span>: 命令产生的事件被投影后发送完成信号</li></ul></li><li><span>&nbsp;</span>CommandBus 
  <ul><li><span>&nbsp;</span><code>InMemoryCommandBus</code></li><li><span>&nbsp;</span><code>KafkaCommandBus</code><span>&nbsp;</span>(Recommend)</li><li><span>&nbsp;</span><code>RedisCommandBus</code></li><li><span>&nbsp;</span><code>LocalFirstCommandBus</code></li></ul></li><li><span>&nbsp;</span>DomainEventBus 
  <ul><li><span>&nbsp;</span><code>InMemoryDomainEventBus</code></li><li><span>&nbsp;</span><code>KafkaDomainEventBus</code><span>&nbsp;</span>(Recommend)</li><li><span>&nbsp;</span><code>RedisDomainEventBus</code></li><li><span>&nbsp;</span><code>LocalFirstDomainEventBus</code></li></ul></li><li><span>&nbsp;</span>StateEventBus 
  <ul><li><span>&nbsp;</span><code>InMemoryStateEventBus</code></li><li><span>&nbsp;</span><code>KafkaStateEventBus</code><span>&nbsp;</span>(Recommend)</li><li><span>&nbsp;</span><code>RedisStateEventBus</code></li><li><span>&nbsp;</span><code>LocalFirstStateEventBus</code></li></ul></li><li><span>&nbsp;</span>Spring 集成 
  <ul><li><span>&nbsp;</span>Spring Boot Auto Configuration</li><li><span>&nbsp;</span>Automatically register<span>&nbsp;</span><code>CommandAggregate</code><span>&nbsp;</span>to<span>&nbsp;</span><code>RouterFunction</code></li></ul></li><li><span>&nbsp;</span>可观测性 
  <ul><li><span>&nbsp;</span>OpenTelemetry</li></ul></li><li><span>&nbsp;</span>OpenAPI</li><li><span>&nbsp;</span><code>WowMetadata</code><span>&nbsp;</span>Generator 
  <ul><li><span>&nbsp;</span><code>wow-compiler</code></li></ul></li></ul><h2>Example</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/AhooWang/Wow/blob/main/example">Example</a></p><h2>单元测试套件</h2><h3>80%+ 的测试覆盖率轻而易举。</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="Test Coverage" src="https://gitee.com/AhooWang/Wow/raw/main/document/example/example-domain-jococo.png" referrerpolicy="no-referrer"></p><blockquote><p style="margin-left:0; margin-right:0">Given -&gt; When -&gt; Expect .</p></blockquote><h3>Aggregate Unit Test (<code>AggregateVerifier</code>)</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/AhooWang/Wow/blob/main/example/example-domain/src/test/kotlin/me/ahoo/wow/example/domain/order/OrderTest.kt">Aggregate Test</a></p><pre><code class="language-java"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">internal</span></span></span></span></span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">class</span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span></span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">OrderTest</span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span></span></span></span></span></span></span>{

    <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">private</span></span></span></span></span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span></span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">mockCreateOrder</span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span><span><span><span>()</span></span></span></span></span></span></span></span></span></span></span></span>: VerifiedStage&lt;OrderState&gt; {
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span></span> tenantId = GlobalIdGenerator.generateAsString()
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span></span> customerId = GlobalIdGenerator.generateAsString()

        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span></span> orderItem = OrderItem(
            GlobalIdGenerator.generateAsString(),
            GlobalIdGenerator.generateAsString(),
            BigDecimal.valueOf(<span><span><span><span><span><span>10</span></span></span></span></span></span>),
            <span><span><span><span><span><span>10</span></span></span></span></span></span>,
        )
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span></span> orderItems = listOf(orderItem)
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span></span> inventoryService = <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">object</span></span></span></span></span></span> : InventoryService {
            <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">override</span></span></span></span></span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span></span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">getInventory</span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span><span><span><span>(productId: </span></span></span></span></span></span></span></span></span></span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49">String</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span><span><span>)</span></span></span></span></span></span></span></span></span></span></span></span>: Mono&lt;<span><span><span><span><span><span>Int</span></span></span></span></span></span>&gt; {
                <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">return</span></span></span></span></span></span> orderItems.filter { it.productId == productId }.map { it.quantity }.first().toMono()
            }
        }
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span></span> pricingService = <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">object</span></span></span></span></span></span> : PricingService {
            <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">override</span></span></span></span></span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span></span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">getProductPrice</span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span><span><span><span>(productId: </span></span></span></span></span></span></span></span></span></span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49">String</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span><span><span>)</span></span></span></span></span></span></span></span></span></span></span></span>: Mono&lt;BigDecimal&gt; {
                <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">return</span></span></span></span></span></span> orderItems.filter { it.productId == productId }.map { it.price }.first().toMono()
            }
        }
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">return</span></span></span></span></span></span> aggregateVerifier&lt;Order, OrderState&gt;(tenantId = tenantId)
            .inject(DefaultCreateOrderSpec(inventoryService, pricingService))
            .given()
            .`<span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">when</span></span></span></span></span></span>`(CreateOrder(customerId, orderItems, SHIPPING_ADDRESS, <span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5">false</span></span></span></span></span></span>))
            .expectEventCount(<span><span><span><span><span><span>1</span></span></span></span></span></span>)
            .expectEventType(OrderCreated::<span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">class</span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span>.</span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">java</span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span>)</span></span></span></span></span></span>
            .expectStateAggregate {
                assertThat(it.aggregateId.tenantId, equalTo(tenantId))
            }
            .expectState {
                assertThat(it.id, notNullValue())
                assertThat(it.customerId, equalTo(customerId))
                assertThat(it.address, equalTo(SHIPPING_ADDRESS))
                assertThat(it.items, equalTo(orderItems))
                assertThat(it.status, equalTo(OrderStatus.CREATED))
            }
            .verify()
    }

    <span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">/** * 创建订单 */</span></span></span></span></span></span><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">@Test</span></span></span></span></span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span></span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">createOrder</span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span><span><span><span>()</span></span></span></span></span></span></span></span></span></span></span></span> {
        mockCreateOrder()
    }

    <span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">@Test</span></span></span></span></span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span></span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">createOrderGivenEmptyItems</span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span><span><span><span>()</span></span></span></span></span></span></span></span></span></span></span></span> {
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span></span> customerId = GlobalIdGenerator.generateAsString()
        aggregateVerifier&lt;Order, OrderState&gt;()
            .inject(mockk&lt;CreateOrderSpec&gt;(), <span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62">"createOrderSpec"</span></span></span></span></span></span>)
            .given()
            .`<span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">when</span></span></span></span></span></span>`(CreateOrder(customerId, listOf(), SHIPPING_ADDRESS, <span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5">false</span></span></span></span></span></span>))
            .expectErrorType(IllegalArgumentException::<span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">class</span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span>.</span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">java</span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span>)</span></span></span></span></span></span>
            .expectStateAggregate {
                <span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">/* * 该聚合对象处于未初始化状态，即该聚合未创建成功. */</span></span></span></span></span></span>
                assertThat(it.initialized, equalTo(<span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5">false</span></span></span></span></span></span>))
            }.verify()
    }

    <span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">/** * 创建订单-库存不足 */</span></span></span></span></span></span><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">@Test</span></span></span></span></span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span></span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">createOrderWhenInventoryShortage</span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span><span><span><span>()</span></span></span></span></span></span></span></span></span></span></span></span> {
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span></span> customerId = GlobalIdGenerator.generateAsString()
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span></span> orderItem = OrderItem(
            GlobalIdGenerator.generateAsString(),
            GlobalIdGenerator.generateAsString(),
            BigDecimal.valueOf(<span><span><span><span><span><span>10</span></span></span></span></span></span>),
            <span><span><span><span><span><span>10</span></span></span></span></span></span>,
        )
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span></span> orderItems = listOf(orderItem)
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span></span> inventoryService = <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">object</span></span></span></span></span></span> : InventoryService {
            <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">override</span></span></span></span></span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span></span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">getInventory</span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span><span><span><span>(productId: </span></span></span></span></span></span></span></span></span></span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49">String</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span><span><span>)</span></span></span></span></span></span></span></span></span></span></span></span>: Mono&lt;<span><span><span><span><span><span>Int</span></span></span></span></span></span>&gt; {
                <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">return</span></span></span></span></span></span> orderItems.filter { it.productId == productId }
                    <span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">/* * 模拟库存不足 */</span></span></span></span></span></span>
                    .map { it.quantity - <span><span><span><span><span><span>1</span></span></span></span></span></span> }.first().toMono()
            }
        }
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span></span> pricingService = <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">object</span></span></span></span></span></span> : PricingService {
            <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">override</span></span></span></span></span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span></span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">getProductPrice</span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span><span><span><span>(productId: </span></span></span></span></span></span></span></span></span></span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49">String</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span><span><span>)</span></span></span></span></span></span></span></span></span></span></span></span>: Mono&lt;BigDecimal&gt; {
                <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">return</span></span></span></span></span></span> orderItems.filter { it.productId == productId }.map { it.price }.first().toMono()
            }
        }

        aggregateVerifier&lt;Order, OrderState&gt;()
            .inject(DefaultCreateOrderSpec(inventoryService, pricingService))
            .given()
            .`<span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">when</span></span></span></span></span></span>`(CreateOrder(customerId, orderItems, SHIPPING_ADDRESS, <span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5">false</span></span></span></span></span></span>))
            <span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">/* * 期望：库存不足异常. */</span></span></span></span></span></span>
            .expectErrorType(InventoryShortageException::<span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">class</span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span>.</span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">java</span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span>)</span></span></span></span></span></span>
            .expectStateAggregate {
                <span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">/* * 该聚合对象处于未初始化状态，即该聚合未创建成功. */</span></span></span></span></span></span>
                assertThat(it.initialized, equalTo(<span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5">false</span></span></span></span></span></span>))
            }.verify()
    }

    <span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">/** * 创建订单-下单价格与当前价格不一致 */</span></span></span></span></span></span><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">@Test</span></span></span></span></span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span></span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">createOrderWhenPriceInconsistency</span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span><span><span><span>()</span></span></span></span></span></span></span></span></span></span></span></span> {
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span></span> customerId = GlobalIdGenerator.generateAsString()
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span></span> orderItem = OrderItem(
            GlobalIdGenerator.generateAsString(),
            GlobalIdGenerator.generateAsString(),
            BigDecimal.valueOf(<span><span><span><span><span><span>10</span></span></span></span></span></span>),
            <span><span><span><span><span><span>10</span></span></span></span></span></span>,
        )
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span></span> orderItems = listOf(orderItem)
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span></span> inventoryService = <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">object</span></span></span></span></span></span> : InventoryService {
            <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">override</span></span></span></span></span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span></span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">getInventory</span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span><span><span><span>(productId: </span></span></span></span></span></span></span></span></span></span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49">String</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span><span><span>)</span></span></span></span></span></span></span></span></span></span></span></span>: Mono&lt;<span><span><span><span><span><span>Int</span></span></span></span></span></span>&gt; {
                <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">return</span></span></span></span></span></span> orderItems.filter { it.productId == productId }.map { it.quantity }.first().toMono()
            }
        }
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span></span> pricingService = <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">object</span></span></span></span></span></span> : PricingService {
            <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">override</span></span></span></span></span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span></span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">getProductPrice</span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span><span><span><span>(productId: </span></span></span></span></span></span></span></span></span></span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49"><span><span><span style="color:#d73a49">String</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span><span><span>)</span></span></span></span></span></span></span></span></span></span></span></span>: Mono&lt;BigDecimal&gt; {
                <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">return</span></span></span></span></span></span> orderItems.filter { it.productId == productId }
                    <span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">/* * 模拟下单价格、商品定价不一致 */</span></span></span></span></span></span>
                    .map { it.price.plus(BigDecimal.valueOf(<span><span><span><span><span><span>1</span></span></span></span></span></span>)) }.first().toMono()
            }
        }
        aggregateVerifier&lt;Order, OrderState&gt;()
            .inject(DefaultCreateOrderSpec(inventoryService, pricingService))
            .given()
            .`<span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">when</span></span></span></span></span></span>`(CreateOrder(customerId, orderItems, SHIPPING_ADDRESS, <span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5">false</span></span></span></span></span></span>))
            <span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">/* * 期望：价格不一致异常. */</span></span></span></span></span></span>
            .expectErrorType(PriceInconsistencyException::<span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">class</span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span>.</span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">java</span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span>).</span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">verify</span></span></span></span></span></span></span></span></span></span></span></span>()
    }
}</code></pre><h3>Saga Unit Test (<code>SagaVerifier</code>)</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/AhooWang/Wow/blob/main/example/example-domain/src/test/kotlin/me/ahoo/wow/example/domain/cart/CartSagaTest.kt">Saga Test</a></p><pre><code class="language-java"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">class</span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span></span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">CartSagaTest</span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span></span></span></span></span></span></span>{

    <span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">@Test</span></span></span></span></span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span></span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">onOrderCreated</span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span><span><span><span>()</span></span></span></span></span></span></span></span></span></span></span></span> {
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">val</span></span></span></span></span></span> orderItem = OrderItem(
            GlobalIdGenerator.generateAsString(),
            GlobalIdGenerator.generateAsString(),
            BigDecimal.valueOf(<span><span><span><span><span><span>10</span></span></span></span></span></span>),
            <span><span><span><span><span><span>10</span></span></span></span></span></span>,
        )
        sagaVerifier&lt;CartSaga&gt;()
            .`<span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">when</span></span></span></span></span></span>`(
                mockk&lt;OrderCreated&gt; {
                    every {
                        customerId
                    } returns <span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62">"customerId"</span></span></span></span></span></span>
                    every {
                        items
                    } returns listOf(orderItem)
                    every {
                        fromCart
                    } returns <span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5"><span style="color:#005cc5">true</span></span></span></span></span></span>
                },
            )
            .expectCommandBody&lt;RemoveCartItem&gt; {
                assertThat(it.id, equalTo(<span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62">"customerId"</span></span></span></span></span></span>))
                assertThat(it.productIds, hasSize(<span><span><span><span><span><span>1</span></span></span></span></span></span>))
                assertThat(it.productIds.first(), equalTo(orderItem.productId))
            }
            .verify()
    }
}</code></pre><h2>设计</h2><h3>聚合建模</h3><table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:0px; border:none; box-sizing:border-box; color:#40485b; display:block; font-family:-apple-system,&quot;system-ui&quot;,&quot;Segoe UI&quot;,Helvetica,Arial,&quot;Apple Color Emoji&quot;,&quot;Segoe UI Emoji&quot;,&quot;Segoe UI Symbol&quot;,&quot;Liberation Sans&quot;,&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,&quot;Hiragino Sans GB&quot;,&quot;Wenquanyi Micro Hei&quot;,&quot;WenQuanYi Zen Hei&quot;,&quot;ST Heiti&quot;,SimHei,SimSun,&quot;WenQuanYi Zen Hei Sharp&quot;,sans-serif; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; line-height:inherit; margin:0px 0px 16px; max-width:100%; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; word-break:initial; word-spacing:0px"><tbody><tr><th><strong>Single Class</strong></th><th><strong>Inheritance Pattern</strong></th><th><strong>Aggregation Pattern</strong></th></tr></tbody><tbody><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><img alt="Single Class - Modeling" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Modeling-Single-Class-Pattern.svg" referrerpolicy="no-referrer"></td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><img alt="Inheritance Pattern- Modeling" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Modeling-Inheritance-Pattern.svg" referrerpolicy="no-referrer"></td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><img alt="Aggregation Pattern- Modeling" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Modeling-Aggregation-Pattern.svg" referrerpolicy="no-referrer"></td></tr></tbody></table><h3>加载聚合</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Load Aggregate" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Load-Aggregate.svg" referrerpolicy="no-referrer"></p><h3>聚合状态流</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Aggregate State Flow" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Aggregate-State-Flow.svg" referrerpolicy="no-referrer"></p><h3>发送命令</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Send Command" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Send-Command.svg" referrerpolicy="no-referrer"></p><h3>命令与事件流</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Command And Event Flow" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Command-Event-Flow.svg" referrerpolicy="no-referrer"></p><h3>Saga - OrderProcessManager (Demo)</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="OrderProcessManager" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Saga-Order.svg" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 10 Oct 2023 00:55:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261083/wow-2-6-8</guid>
            <link>https://www.oschina.net/news/261083/wow-2-6-8</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[简约 vue 3.0 轻后台管理框架 QingAdmin 日常优化]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div><h3><img alt="qing-admin" src="https://static.oschina.net/uploads/logo/qing-admin_tuSsE.png" referrerpolicy="no-referrer"></h3><h3><span style="color:#1abc9c"><strong>qing-admin</strong></span></h3></div><div><p style="margin-left:0; margin-right:0"><span style="background-color:#ffffff; color:#40485b">VUE 3.0 轻后台管理框架，技术栈 Vue 3 + TypeScript + Vite + element-plus 轻量搭配、简单好用！</span></p><p style="margin-left:0; margin-right:0"><span style="background-color:#ffffff; color:#40485b">在 vue3 的基础上开发，基于&nbsp; element-plus 二次封装，各个基础组件轻薄好用</span></p><p style="margin-left:0; margin-right:0"><span style="background-color:#ffffff; color:#40485b">支持多种界面布局展示，支持黑暗模式、灰色模式、色弱模式，完全自定义颜色，支持多语言，等特性。</span></p><p style="margin-left:0; margin-right:0">Apache 2.0 协议免费开源！！</p><p style="margin-left:0; margin-right:0"><a href="https://qingadmin.gitee.io/">演示地址&nbsp;https://qingadmin.gitee.io/</a></p><p style="margin-left:0; margin-right:0"><a href="https://gitee.com/aizuda/qing-admin">开源地址&nbsp;https://gitee.com/aizuda/qing-admin</a></p><h3>更新日志</h3><ul><li>&nbsp;fix: 灰色模式，横屏滚动修复</li><li>feat: Msg &amp; SearchMenu</li><li>feat: IconPicker 重构</li><li>feat: PickerIcon 重构，替换 MenuIcon</li><li>fix: tagViews select top</li></ul><h2>演示界面</h2><ul><li>优化菜单按钮显示</li></ul></div><p><img height="1273" src="https://oscimg.oschina.net/oscnet/up-093646fe3318d263753933a3e5aeb81b179.png" width="2160" referrerpolicy="no-referrer"></p><p>&nbsp;</p><div><div><ul><li>表格</li></ul><p><img height="1254" src="https://oscimg.oschina.net/oscnet/up-c230388f7f3c38d21f11ef15a4b3577fe90.png" width="2160" referrerpolicy="no-referrer"></p><p><img height="1254" src="https://oscimg.oschina.net/oscnet/up-7c82d0253d3ddfeefbd25b51adcef6abc2e.png" width="2160" referrerpolicy="no-referrer"></p><p>&nbsp;</p></div></div><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="1254" src="https://oscimg.oschina.net/oscnet/up-0846b03e9f4cab3c4a2a96ef5412ca52b11.png" width="2160" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="1254" src="https://oscimg.oschina.net/oscnet/up-faeb3a8e75a21258b6824d38fd32c9042f5.png" width="2160" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>快速搜索</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="1254" src="https://oscimg.oschina.net/oscnet/up-001c78ca8cfe19512fb10ade47713c30831.png" width="2160" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">&nbsp;</p><ul><li>表单</li></ul><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="表格 1" src="https://static.oschina.net/uploads/img/202310/01121309_r91O.png" referrerpolicy="no-referrer"></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="表格 2" src="https://static.oschina.net/uploads/img/202310/01121310_54ew.png" referrerpolicy="no-referrer"></p><ul><li>黑暗模式</li></ul><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="黑暗 1" src="https://static.oschina.net/uploads/img/202310/01121310_cRF7.png" referrerpolicy="no-referrer"></p><ul><li>灰色模式</li></ul><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="黑暗 1" src="https://static.oschina.net/uploads/img/202310/01121310_97HP.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">&nbsp;</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>色弱模式</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="1254" src="https://oscimg.oschina.net/oscnet/up-892d0f7c98d2e4d3ee81eaa698940c2abb5.png" width="2160" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 10 Oct 2023 00:49:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261082</guid>
            <link>https://www.oschina.net/news/261082</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[DjangoAdmin 敏捷开发框架 Flask+AntdVue 版本 v2.2.0 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff; color:#333333">v2.2.0 更新内容：</span><br><span style="background-color:#ffffff; color:#333333">1、新增支持原生 SQL 语句查询；</span><br><span style="background-color:#ffffff; color:#333333">2、新增验证码大小写校验规则；</span><br><span style="background-color:#ffffff; color:#333333">3、修复近期用户反馈的问题；</span></p><p><span style="background-color:#ffffff; color:#40485b">一款 Python 语言基于 Flask、Vue3、AntDesign、MySQL 等框架精心打造的一款模块化、高性能、企业级的敏捷开发框架，本着简化开发、提升开发效率的初衷触发，框架自研了一套个性化的组件，实现了可插拔的组件式开发方式：单图上传、多图上传、下拉选择、开关按钮、单选按钮、多选按钮、图片裁剪等等一系列个性化、轻量级的组件，是一款真正意义上实现组件化开发的敏捷开发框架。</span></p><p>&nbsp;</p><h2>软件信息</h2><ul><li>软件名称：DjangoAdmin 敏捷开发框架 Flask+AntdVue 版本</li><li>官网网址：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.djangoadmin.cn" target="_blank">https://www.djangoadmin.cn</a></li><li>文档网址：<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fdocs.flask.antdvue.djangoadmin.cn" target="_blank">http://docs.flask.antdvue.djangoadmin.cn</a></li><li>演示地址：<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmanage.flask.antdvue.djangoadmin.cn" target="_blank">http://manage.flask.antdvue.djangoadmin.cn</a></li></ul><h2>版本说明</h2><table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:0px; border:none; box-sizing:border-box; color:#40485b; display:block; font-family:-apple-system,BlinkMacSystemFont,&quot;Segoe UI&quot;,Helvetica,Arial,&quot;Apple Color Emoji&quot;,&quot;Segoe UI Emoji&quot;,&quot;Segoe UI Symbol&quot;,&quot;Liberation Sans&quot;,&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,&quot;Hiragino Sans GB&quot;,&quot;Wenquanyi Micro Hei&quot;,&quot;WenQuanYi Zen Hei&quot;,&quot;ST Heiti&quot;,SimHei,SimSun,&quot;WenQuanYi Zen Hei Sharp&quot;,sans-serif; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; line-height:inherit; margin:0px 0px 16px; max-width:100%; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:635px; word-break:initial; word-spacing:0px"><tbody><tr><th>版本名称</th><th>版本说明</th><th>版本地址</th></tr></tbody><tbody><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Django+Layui 混编版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 Django、Layui 等框架研发</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/djangoadmin/DjangoAdmin_Django_Layui">https://gitee.com/djangoadmin/DjangoAdmin_Django_Layui</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Flask+Layui 混编版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 Flask、Layui 等框架研发</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/djangoadmin/DjangoAdmin_Flask_Layui">https://gitee.com/djangoadmin/DjangoAdmin_Flask_Layui</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Tornado+Layui 混编版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 Tornado、Layui 等框架研发</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/djangoadmin/DjangoAdmin_Tornado_Layui">https://gitee.com/djangoadmin/DjangoAdmin_Tornado_Layui</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Django+EleVue 前后端分离版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 Django、Vue2.x、ElementUI 等框架研发前后端分离版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/djangoadmin/DjangoAdmin_Django_EleVue">https://gitee.com/djangoadmin/DjangoAdmin_Django_EleVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Flask+EleVue 前后端分离版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 Flask、Vue2.x、ElementUI 等框架研发前后端分离版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/djangoadmin/DjangoAdmin_Flask_EleVue">https://gitee.com/djangoadmin/DjangoAdmin_Flask_EleVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Tornado+EleVue 前后端分离版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 Tornado、Vue2.x、ElementUI 等框架研发前后端分离版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/djangoadmin/DjangoAdmin_Tornado_EleVue">https://gitee.com/djangoadmin/DjangoAdmin_Tornado_EleVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Django+AntdVue 前后端分离版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 Django、Vue3.x、AntDesign 等框架研发前后端分离版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/djangoadmin/DjangoAdmin_Django_AntdVue">https://gitee.com/djangoadmin/DjangoAdmin_Django_AntdVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Flask+AntdVue 前后端分离版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 Flask、Vue3.x、AntDesign 等框架研发前后端分离版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/djangoadmin/DjangoAdmin_Flask_AntdVue">https://gitee.com/djangoadmin/DjangoAdmin_Flask_AntdVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Tornado+AntdVue 前后端分离版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">采用 Tornado、Vue、AntDesign 等框架研发前后端分离版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/djangoadmin/DjangoAdmin_Tornado_AntdVue">https://gitee.com/djangoadmin/DjangoAdmin_Tornado_AntdVue</a></td></tr></tbody></table><h2>模块展示</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" height="1080" src="https://oscimg.oschina.net/oscnet/up-f7a24a73c67162c2b25bebd865d613d3025.png" width="1920" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 10 Oct 2023 00:44:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261081</guid>
            <link>https://www.oschina.net/news/261081</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[🍃 layui-vue v2.8.0 发布，一个 Vue 3 UI 框架]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>更新日志：</p><p>[新增] layer 组件 full 方法，必填参数为 id，用于弹出层最大化。<br> [优化] layer 组件 resize 启用时，拉伸选中文字的问题。<br> [优化] layer 组件 success 方法，加入 nextTick 优化，保证在弹层渲染后执行。<br> [修复] page 组件 total 属性回显数量不正确的问题。<br> [升级] layer-vue 2.0.4 版本。</p><p>更多详情：<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.layui-vue.com" target="_blank">http://www.layui-vue.com</a></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 09 Oct 2023 08:42:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261018/layui-vue-2-8-0-released</guid>
            <link>https://www.oschina.net/news/261018/layui-vue-2-8-0-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[DBErp 进销存系统 V1.2 Release 231009 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><span style="background-color:#ffffff; color:#333333"><strong>DBErp</strong> 基于 Laminas</span><span style="background-color:#ffffff; color:#333333">&nbsp;+ doctrine</span><span style="background-color:#ffffff; color:#333333">&nbsp;2 开发的一套进销存系统。</span></p><h2>系统框架</h2><ul><li>Laminas （Zendframework 3）</li><li>Doctrine 2</li></ul><h2>环境要求</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>服务器系统</strong>&nbsp;Linux、Unix、Mac、Windows、其他</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>web 服务器</strong>&nbsp;Apache、Nginx、IIS、其他</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>MySQL 版本</strong>&nbsp;&gt;= 5.6</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>PHP 版本</strong>&nbsp;&gt;= 7.4</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>PHP 扩展 | 库</strong></p><ul><li>PDO</li><li>SSL（openssl）</li><li>Fileinfo</li><li>intl</li><li>Curl</li><li>GD2</li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>系统空间</strong>&nbsp;&gt;= 500M</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>更新日志：</strong><br> 优化，税金修改为百分比<br> 优化，登录页面<br> 优化，其他出库的权限设置<br> 优化，其他入库加入同步采购价格的选项<br> 优化，帮助地址</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>在线文档地址：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.dberp.net%2F" target="_blank">https://docs.dberp.net/</a></strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>演示地址：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdemo.dberp.com.cn%2F" target="_blank">https://demo.dberp.com.cn/</a></strong><br><strong>后台登录账号：</strong>dberp<br><strong>后台登录密码：</strong>123456</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><img alt="dashboard" src="https://static.oschina.net/uploads/img/201906/30075605_OW5Q.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>下载地址：<span>&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdownload.loongdom.com.cn/dberp/V1.2/DBErpV1.2_Release231009.tar.gz" target="_blank">https://download.loongdom.com.cn/dberp/V1.2/DBErpV1.2_Release231009.tar.gz</a></span></strong></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 09 Oct 2023 08:34:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261013/dberp-1-2-231009-release</guid>
            <link>https://www.oschina.net/news/261013/dberp-1-2-231009-release</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Jmix 2.0.2 发布 - 企业级 Web 快速开发框架]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h2><span style="color:#fe8a34">Jmix 2.0.2 发布 - 企业级 Web 快速开发框架</span></h2><p style="color:black; margin-left:0; margin-right:0">Jmix Web 快速开发框架 2.0.2 发布，该补丁版本中主要包含了 Bug 修复，推荐升级：</p><p style="color:black; margin-left:0; margin-right:0">🛠️ 主要 Bug 修复：</p><ul><li><p>修复 REST API 的 CORS 问题。</p></li><li><p>BPM 建模器的一些问题。</p></li><li><p>开发时不自动安装 node_modules 的问题。</p></li><li><p>用 zip 命令打包项目后，打开的项目没有登录界面的问题。</p></li><li><p>AppSettings 扩展组件破坏了 input 弹窗的问题。</p></li><li><p>实体探查导出数据时抛异常的问题。</p></li></ul><p style="color:black; margin-left:0; margin-right:0">详细修复的问题列表，请参考 Jmix GitHub： https://github.com/jmix-framework/jmix/issues?q=is%3Aclosed+milestone%3A2.0.2</p><p style="color:black; margin-left:0; margin-right:0">🔑 Jmix 是一个覆盖应用程序全生命周期的 Java Web 快速开发框架。以 Spring Boot 作为开源基础框架，提供过程中的 Studio 开发工具以及开箱即用的扩展组件。通过 Jmix 实现您的数字化愿景，无低代码平台限制，无供应商依赖，无需按用户付费。</p><p style="color:black; margin-left:0; margin-right:0">资源：👉🏻<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.abmcode.com%2Fzh-cn%2Fjmix%2Fevaluate-jmix.html" target="_blank">Jmix 适合我吗？</a> 👉🏻<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.jmix.cn" target="_blank">中文官网</a></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 09 Oct 2023 07:16:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/260998/jmix-2-0-2</guid>
            <link>https://www.oschina.net/news/260998/jmix-2-0-2</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[DBeaver 23.2.2 发布，可视化数据库管理平台]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff; color:#333333">DBeaver 是一个免费开源的通用数据库工具，适用于开发人员和数据库管理员。DBeaver 23.2.2 现已发布，更新内容如下：</span></p><ul style="margin-left:0; margin-right:1.5em"><li>SQL editor： 
  <ul style="margin-left:0; margin-right:0"><li>改进了复杂 SQL 查询的自动完成功能</li><li>修复了在简单视图和高级视图之间切换时重新连接打开的编辑器的问题</li><li>SQL 控制枱现在可以另存为脚本</li></ul></li><li>ER diagrams： 
  <ul style="margin-left:0; margin-right:0"><li>添加了图表符号切换器</li><li>连接渲染得到改进</li><li>添加了 Crow’s foot 符号</li></ul></li><li>Data editor： 
  <ul style="margin-left:0; margin-right:0"><li>现在可以垂直显示多个查询结果</li><li>添加了「Go to column」(Ctrl+F) 操作</li><li>列搜索已添加到元数据面板</li><li>浮点数的数字格式已修复</li><li>打开 Calc 面板后出现空表的问题已解决</li><li>修复了为结果集设置行颜色的问题</li></ul></li><li>Data transfer：列自动映射现在可配置</li><li>General： 
  <ul style="margin-left:0; margin-right:0"><li>首选项页面上的「恢复默认设置」现在重置为实际的默认首选项</li><li>现在支持 Eclipse 2023-09 插件 API</li><li>修复了 macOS 上重置 UI 设置的问题</li><li>修复了在 Wayland 上运行时应用程序崩溃的问题</li><li>java.compiler 和 java.scripting 模块包含在捆绑的 Java 中</li></ul></li><li>Databases： 
  <ul style="margin-left:0; margin-right:0"><li>添加了 Damen 数据库扩展</li><li>Clickhouse：array map 表示已修复</li><li>Google Spanner：table DDL 生成问题已修复</li><li>DB2 LUW：trigger editor 已修复</li><li>Exasol：客户组创建已修复</li><li>Fireberd：添加了几个关键字</li><li>Materialized：系统模式加载已修复</li><li>PostgreSQL： 
    <ul style="margin-left:0; margin-right:0"><li>Backup/restore&nbsp;本机工具执行已修复</li><li>「欧洲/基辅」时区支持已修复</li></ul></li><li>Redshift： 
    <ul style="margin-left:0; margin-right:0"><li>Schemas loading 已修复</li><li>频谱表加载已修复（用于自定义驱动程序配置）</li></ul></li></ul></li></ul><p><span style="background-color:#ffffff; color:#333333">更新说明：</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdbeaver.io%2F2023%2F10%2F08%2Fdbeaver-23-2-2%2F" target="_blank">https://dbeaver.io/2023/10/08/dbeaver-23-2-2/</a></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 09 Oct 2023 06:08:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/260978/dbeaver-23-2-2-released</guid>
            <link>https://www.oschina.net/news/260978/dbeaver-23-2-2-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Solon 2.5.8 发布，诚邀 Java 开发者共建]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h3>诚邀?</h3><p style="color:#24292e; text-align:start">如果您对开源感兴趣且愿意学习和贡献，欢迎您共建 Solon 生态。Solon 计划明年推向国际市场，希望有对国外社区熟的同学加入帮忙。</p><h3>Solon 是什么框架？</h3><p style="color:#24292e; text-align:start"><strong>Java 生态级应用开发框架</strong>。从零开始构建，<span style="background-color:#f1c40f">有自己的标准规范与开放生态</span>（历时五年，具备全球第二级别的生态规模）。与其他框架相比，<span style="background-color:#f1c40f">解决了两个重要的痛点：启动慢，费内存</span>。</p><h3>解决痛点？</h3><p style="color:#24292e; text-align:start">由于 Solon&nbsp;Bean 容器的独特设计，不会因为扩展依赖变多而启动很慢（开发调试时，省时、爽快）！以知名开源项目「小诺」为例：</p><ul><li><a href="https://gitee.com/xiaonuobase/snowy">「snowy-spring 版」</a><span>&nbsp;</span>启动 15-50 秒</li><li><a href="https://gitee.com/xiaonuoadmin/snowy-solon">「snowy-solon 版」</a><span>&nbsp;</span><span style="background-color:#f1c40f">启动 3-5 秒，启动内存节省 1/3</span>（有兴趣的，欢迎拉取代码体验）</li></ul><h3>有什么可爱的特点？</h3><ul><li>启动快 5 ～ 10 倍。<span>&nbsp;</span><strong>（更快）</strong></li><li>qps 高 2～ 3 倍。<span>&nbsp;</span><strong>（更高）</strong></li><li>运行时内存节省 1/3 ~ 1/2。<span>&nbsp;</span><strong>（更少）</strong></li><li>打包可以缩小到 1/2 ~ 1/10；比如，300Mb 的变成了 23Mb。<span>&nbsp;</span><strong>（更小）</strong></li><li>同时支持 jdk8, jdk11, jdk17, jdk21,<span>&nbsp;</span><strong>graalvm native image</strong></li></ul><h3>入门探索视频（用户录制）：</h3><p><iframe frameborder="0" height="400" scrolling="no" src="https://player.bilibili.com/player.html?aid=938467339&amp;bvid=BV1RT4y1a7U5&amp;cid=583394292&amp;page=1" style="box-sizing: border-box; font-size: 16px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; color: rgb(36, 41, 46); font-family: -apple-system, &quot;system-ui&quot;, &quot;Segoe UI&quot;, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; text-align: start; background-color: rgb(255, 255, 255);" width="700" referrerpolicy="no-referrer"></iframe></p><h3>最近更新了什么？</h3><ul><li>增加 Context::headerOfResponse 接口</li><li>增加 http server gzip 整体配置支持（详见官网的<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsolon.noear.org%2Farticle%2F174" target="_blank">《应用常用配置说明》</a>）</li><li>增加 solon.web.staticfiles 对 gzip 的配置支持</li><li>增加 solon.boot.jdkhttp 对 gzip 的配置支持（取消内部的自动处理）</li><li>调整<span>&nbsp;</span><code>@Import</code><span>&nbsp;</span>替代<span>&nbsp;</span><code>@PropertySource</code>、<code>@TestPropertySource</code>，后者标为弃用（详见官网的<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsolon.noear.org%2Farticle%2F618" target="_blank">《@Import 使用说明》</a>）</li><li>调整<span>&nbsp;</span><code>@Rollback</code><span>&nbsp;</span>替代<span>&nbsp;</span><code>@TestRollback</code>，后者标为弃用</li><li>调整 SolonTestApp 默认关闭 http 服务；避免与已启动服务端口冲突</li><li>调整 solon.cache.jedis 的两个序列化实现，转到 solon.data（做为公用）</li><li>调整 solon.cache.redission RedissonCacheService 增加外部序列化接口支持</li><li>调整<span>&nbsp;</span><code>@Bean</code><span>&nbsp;</span>函数，参数没带注解的算必须</li><li>调整 paramsMap 增加 autoMultipart 处理</li><li>调整 nami,forest,feign 负载均衡的获取方式</li><li>修复 solon-maven-plugin 在 linux 下因为一些用户角色没有权限导致打包失败问题</li><li>优化<span>&nbsp;</span><code>VarGather</code><span>&nbsp;</span>检查增加自动排序</li><li>优化 Props::getMap 处理</li><li>简化 Props::getProp 处理提升性能</li><li>取消，全局未处理异常走总线的机制，转由 Log 框架接收（简化用户体验）</li><li>wood 升为 1.2.2</li><li>mybatis-flex 升为 1.6.8</li><li>fastmybatis 升为 2.9.7</li><li>easy-trans 升为 1.3.0</li><li>sa-token 升为 1.36.0</li><li>fastjson2 升为 2.4.0</li><li>jetty 升为 9.4.52.v20230823</li><li>undertow 升为 2.2.26.Final</li><li>redisx 升为 1.6.0</li></ul><h3>项目仓库地址？</h3><ul><li>gitee：<a href="https://gitee.com/noear/solon">https://gitee.com/noear/solon</a></li><li>github：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnoear%2Fsolon" target="_blank">https://github.com/noear/solon</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Mon, 09 Oct 2023 06:05:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/260977/solon-2-5-8-released</guid>
            <link>https://www.oschina.net/news/260977/solon-2-5-8-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[wmproxy 0.1 发布支持 http/https/socks5 代理及内网穿透功能]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h1>wmproxy</h1><p>一个同时支持 http/https/socks5 的代理，通过简单配置即可获取加密通道的内网穿透功能，支持 http/https/tcp 内网穿透</p><h2>📦 Installation &amp; 🏃 Usage</h2><h3>Installation</h3><pre><code class="language-bash">cargo install wmproxy
</code></pre><p>OR</p><pre><code class="language-bash">git clone https://github.com/tickbh/wmproxy
cd wmproxy
cargo install --path .
</code></pre><h3>Usage</h3><p>默认端口为 8090 端口，默认监听地址为 127.0.0.1</p><pre><code class="language-bash"># 直接通用默认参数
wmproxy

# 设置账号密码
wmproxy -p 8090 -b 0.0.0.0 --user wmproxy --pass wmproxy

# 其它指令
wmproxy --help

#配置文件版启动
wmproxy -c config/client.yaml
</code></pre><p>启动二级代理</p><ol><li>在本地启动代理</li></ol><pre><code class="language-bash">wmproxy -b 127.0.0.1 -p 8090 -S 127.0.0.1:8091 --ts
</code></pre><p>或者</p><pre><code class="language-bash">wmproxy -c config/client.yaml
</code></pre><p>配置文件如下:</p><pre><code># 连接服务端地址
server: 127.0.0.1:8091
# 连接服务端是否加密
ts: true

# 内网映射配置的数组
mappings:
  #将 localhost 的域名转发到本地的 127.0.0.1:8080
  - name: web
    mode: http
    local_addr: 127.0.0.1:8080
    domain: localhost
    headers:
      - [proxy, +, x-forward-for, $client_ip]
      - [proxy, +, from, $url]
      - [+, key, value]
      - [-, etag]
      - [+, last-modified, aaaa]

  #将 tcp 的流量无条件转到 127.0.0.1:8080
  - name: tcp
    mode: tcp
    local_addr: 127.0.0.1:8080
    domain:
</code></pre><p>因为纯转发，所以在当前节点设置账号密码没有意义<code>-S</code>表示连接到的二级代理地址，<strong>有该参数则表示是中转代理，否则是末端代理。</strong><code>--ts</code>表示连接父级代理的时候需要用加密的方式链接</p><ol><li>在远程启动代理</li></ol><pre><code class="language-bash">wmproxy --user proxy --pass proxy -b 0.0.0.0 -p 8091 --tc
</code></pre><p>或者</p><pre><code class="language-bash">wmproxy -c config/server.yaml
</code></pre><p>配置文件如下:</p><pre><code>#绑定的 ip 地址
bind_addr: 127.0.0.1:8091

#代理支持的功能，1 为 http，2 为 https，4 为 socks5
flag: 7

#内网映射 http 绑定地址
map_http_bind: 127.0.0.1:8001
#内网映射 tcp 绑定地址
map_tcp_bind: 127.0.0.1:8002
#内网映射 https 绑定地址
map_https_bind: 127.0.0.1:8003
#内网映射的公钥证书，为空则是默认证书
map_cert:
#内网映射的私钥证书，为空则是默认证书
map_key:

#接收客户端是为是加密客户端
tc: true
#当前服务模式，server 为服务端，client 为客户端
mode: server
</code></pre><p><code>--tc</code>表示接收子级代理的时候需要用加密的方式链接，可以<code>--cert</code>指定证书的公钥，<code>--key</code>指定证书的私钥，<code>--domain</code>指定证书的域名，如果不指定，则默认用自带的证书参数</p><blockquote><p>至此通过代理访问的，我们已经没有办法得到真正的请求地址，只能得到代理发起的请求</p></blockquote><h1>🚥 Roadmap</h1><h3>socks5</h3><ul><li>[x] IPV6 Support</li><li>[x] <code>SOCKS5</code> Authentication Methods 
  <ul><li>[x] <code>NOAUTH</code></li><li>[x] <code>USERPASS</code></li></ul></li><li>[x] <code>SOCKS5</code> Commands 
  <ul><li>[x] <code>CONNECT</code></li><li>[x] <code>UDP ASSOCIATE</code></li></ul></li></ul><h3>http/https</h3><ul><li>[x] IPV6 Support</li></ul><h3>内网穿透</h3><ul><li>[x] Http Support</li><li>[x] Https Support</li><li>[x] Tcp Support</li></ul><h4>支持功能</h4><ul><li>修改 HTTP 请求 Header</li><li>支持 HTTP2 的内网穿透</li></ul></div>
                                    ]]>
            </description>
            <pubDate>Mon, 09 Oct 2023 06:00:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/260975/wmproxy-0-1-released</guid>
            <link>https://www.oschina.net/news/260975/wmproxy-0-1-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[7 个月，100+ 贡献者，MyBatis-Flex v1.6.9 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:center"><img alt="" height="265" src="https://oscimg.oschina.net/oscnet/up-0d6ec96d8070deb116566704fcc7bfd1291.png" width="500" referrerpolicy="no-referrer"></p><h1>MyBatis-Flex： 一个优雅的 MyBatis 增强框架</h1><h1>特征</h1><h4>1、很轻量</h4><blockquote><p style="margin-left:0; margin-right:0">MyBatis-Flex 整个框架只依赖 MyBatis，再无其他任何第三方依赖。</p></blockquote><h4>2、只增强</h4><blockquote><p style="margin-left:0; margin-right:0">MyBatis-Flex 支持 CRUD、分页查询、多表查询、批量操作，但不丢失 MyBatis 原有的任何功能。</p></blockquote><h4>3、高性能</h4><blockquote><p style="margin-left:0; margin-right:0">MyBatis-Flex 采用独特的技术架构、相比许多同类框架，MyBatis-Flex 的在增删改查等方面的性能均超越其 5~10 倍或以上。</p></blockquote><h4>4、更灵动</h4><blockquote><p style="margin-left:0; margin-right:0">MyBatis-Flex 支持多主键、多表查询、逻辑删除、乐观锁、数据脱敏、数据加密、多数据源、分库分表、字段权限、 字段加密、多租户、事务管理、SQL 审计... 等等等等。 这一切，免费且灵动。</p></blockquote><p>MyBatis-Flex 从今年的 3 月份发布第一个版本后，到今天为止，已经开源了 7 个月的时间。</p><p>在这 7 个月中，MyBatis-Flex 由于&nbsp;<strong>极友好的 API 设计、无任何第三方依赖、轻量实现、免费且友好&nbsp;</strong>等诸多特点，得到了 100+ 为同学的参与贡献。<span style="background-color:#ffffff; color:#3c3c43">他们有的是学生，有的 10+ 年开发经验的工程师，也有来至于<span>&nbsp;</span></span><strong>阿里巴巴</strong><span style="background-color:#ffffff; color:#3c3c43">、</span><strong>腾讯</strong><span style="background-color:#ffffff; color:#3c3c43">、</span><strong>科大讯飞</strong><span style="background-color:#ffffff; color:#3c3c43">、<span>&nbsp;</span></span><strong>网宿科技</strong><span style="background-color:#ffffff; color:#3c3c43">、</span><strong>新东方</strong><span style="background-color:#ffffff; color:#3c3c43"><span>&nbsp;</span>等企业的同学，使得 MyBatis-Flex 在这 7 个月的时间里，一共关闭了 600+ 个 issue，发布了 60+ 个版本，成为 Gitee 上最为活跃的 ORM 框架。</span></p><p><span style="background-color:#ffffff; color:#3c3c43">没有这些同学的贡献，就没有 MyBatis-Flex 的成长。</span></p><p>&nbsp;</p><h4><strong>MyBatis-Flex v1.6.9 更新细节如下：</strong></h4><div><ul><li>新增：添加 SQL 审计模块的计数消息收集器，感谢<span>&nbsp;</span><a href="https://gitee.com/Suomm" target="_blank">@王帅</a></li><li>新增：QueryWrapper 的 Lambda 方式支持 allColumns 和 defaultColumns 构建功能，感谢<span>&nbsp;</span><a href="https://gitee.com/Suomm" target="_blank">@王帅</a></li><li>新增：Mapper 增加 Entity 作为入参进行查询与删除和查询的方法，这有利于对多主键实体类的删除和查询，感谢 @Watcher.Wang</li><li>新增：添加 ifNull 函数 lambda 下缺失的非 lambda elseColumn 参数的支持，感谢<span>&nbsp;</span><a href="https://gitee.com/guanmengyuan" target="_blank">@guanmengyuan</a></li><li>新增：<code>@RelationOneToMany</code><span>&nbsp;</span>添加支持 selfValueSplitBy 字符分割的配置支持，感谢<span>&nbsp;</span><a href="https://gitee.com/ice-samll" target="_blank">@Ice-samll</a></li><li>新增：添加构建所有列方法 QueryMethods.allColumns()，感谢<span>&nbsp;</span><a href="https://gitee.com/guanmengyuan" target="_blank">@guanmengyuan</a></li><li>优化：重构抽象 SQL 审计模块的消息收集器，感谢<span>&nbsp;</span><a href="https://gitee.com/Suomm" target="_blank">@王帅</a></li><li>优化：SpringBoot-starter 模块的 autoconfigure-processor 默认添加 optional 配置，感谢<span>&nbsp;</span><a href="https://gitee.com/freeman" target="_blank">@freeman</a><span>&nbsp;</span>Liu</li><li>修复：当<span>&nbsp;</span>@Relation 注解使用 valueField 配置时，在某些情况下抛出 IllegalStateException 异常的问题</li><li>修复：在 FlexConfiguration 替换 ResultMap 时，替换了用户自定义的配置可能导致异常的问题</li><li>修复：修复 QueryMethods.replace 无法支持空格替换的问题</li><li>修复：ManyToOne 在某些场景下出错 IllegalArgumentException 错误的问题</li><li>测试：添加关于<span>&nbsp;</span><code>@RelationOneToMany</code><span>&nbsp;</span>的 selfValueSplitBy 测试代码，感谢<span>&nbsp;</span><a href="https://gitee.com/ice-samll" target="_blank">@Ice-samll</a></li><li>测试：测试环境添加一个 SQL 格式化的相关依赖，感谢<span>&nbsp;</span><a href="https://gitee.com/Suomm" target="_blank">@王帅</a></li><li>测试：添加关于 Lambda 方式 SQL 列构建测试，感谢<span>&nbsp;</span><a href="https://gitee.com/Suomm" target="_blank">@王帅</a></li><li>文档：添加在 where 部分使用 SQL 函数的相关文档，感谢 @shaoerkuai</li><li>文档：添加关于<span>&nbsp;</span><code>@RelationOneToMany</code><span>&nbsp;</span>的 selfValueSplitBy 的使用文档，感谢<span>&nbsp;</span><a href="https://gitee.com/ice-samll" target="_blank">@Ice-samll</a></li><li>文档：修改将批量操作文档中的相关错别字，感谢<span>&nbsp;</span><a href="https://gitee.com/dataprince" target="_blank">@数据小王子</a>&nbsp;</li></ul></div><p><strong>这个版本得以发布，要感谢以上 8 位 pr 的同学，他们分别是：<span>&nbsp;</span></strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/dataprince" target="_blank">@数据小王子</a>、<a href="https://gitee.com/ice-samll" target="_blank">@Ice-samll</a>、<a href="https://gitee.com/Suomm" target="_blank">@王帅</a>、<a href="https://gitee.com/ice-samll" target="_blank">@Ice-samll</a>、<a href="https://gitee.com/freeman" target="_blank">@freeman</a><span>&nbsp;</span>Liu、<a href="https://gitee.com/guanmengyuan" target="_blank">@guanmengyuan</a>、@Watcher.Wang、@shaoerkuai</p><div><p style="margin-left:0; margin-right:0">更多的代码贡献者，请参考：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fintro%2Fwhat-is-mybatisflex.html%23%25E8%25B4%25A1%25E7%258C%25AE%25E8%2580%2585" target="_blank">https://mybatis-flex.com/zh/intro/what-is-mybatisflex.html#%E8%B4%A1%E7%8C%AE%E8%80%85</a></p></div><h4><strong>进一步了解 MyBatis-Flex 框架，请参考一下链接：</strong></h4><ul><li>1、快速开始：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fintro%2Fgetting-started.html" target="_blank">https://mybatis-flex.com/zh/intro/getting-started.html</a></li><li>2、多表关联查询：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fbase%2Fquery.html%23%25E5%2585%25B3%25E8%2581%2594%25E6%259F%25A5%25E8%25AF%25A2-%25E6%2588%2596%25E5%25A4%259A%25E8%25A1%25A8%25E6%259F%25A5%25E8%25AF%25A2" target="_blank">https://mybatis-flex.com/zh/base/query.html</a></li><li>3、一对多、多对一：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fbase%2Frelations-query.html" target="_blank">https://mybatis-flex.com/zh/base/relations-query.html</a></li><li>4、灵活的 QueryWrapper：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fbase%2Fquerywrapper.html" target="_blank">https://mybatis-flex.com/zh/base/querywrapper.html</a></li><li>5、逻辑删除：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fcore%2Flogic-delete.html" target="_blank">https://mybatis-flex.com/zh/core/logic-delete.html</a></li><li>6、乐观锁：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fcore%2Fversion.html" target="_blank">https://mybatis-flex.com/zh/core/version.html</a></li><li>7、数据填充：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fcore%2Ffill.html" target="_blank">https://mybatis-flex.com/zh/core/fill.html</a></li><li>6、数据脱敏：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fcore%2Fmask.html" target="_blank">https://mybatis-flex.com/zh/core/mask.html</a></li><li>7、SQL 审计：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fcore%2Faudit.html" target="_blank">https://mybatis-flex.com/zh/core/audit.html</a></li><li>8、多数据源：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fcore%2Fmulti-datasource.html" target="_blank">https://mybatis-flex.com/zh/core/multi-datasource.htm</a></li><li>9、数据源加密：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fcore%2Fdatasource-encryption.html" target="_blank">https://mybatis-flex.com/zh/core/datasource-encryption.html</a></li><li>10、动态表名：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fcore%2Fdynamic-table.html" target="_blank">https://mybatis-flex.com/zh/core/dynamic-table.html</a></li><li>11、事务管理：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fcore%2Ftx.html" target="_blank">https://mybatis-flex.com/zh/core/tx.html</a></li><li>12、数据权限：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fcore%2Fdata-permission.html" target="_blank">https://mybatis-flex.com/zh/core/data-permission.html</a></li><li>13、字段权限：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fcore%2Fcolumns-permission.html" target="_blank">https://mybatis-flex.com/zh/core/columns-permission.html</a></li><li>14、字段加密：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fcore%2Fcolumns-encrypt.html" target="_blank">https://mybatis-flex.com/zh/core/columns-encrypt.html</a></li><li>15、字典回写：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fcore%2Fcolumns-dict.html" target="_blank">https://mybatis-flex.com/zh/core/columns-dict.html</a></li><li>16、枚举属性：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fcore%2Fenum-property.html" target="_blank">https://mybatis-flex.com/zh/core/enum-property.html</a></li><li>17、多租户：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fcore%2Fmulti-tenancy.html" target="_blank">https://mybatis-flex.com/zh/core/multi-tenancy.html</a></li><li>18、代码生成器：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fothers%2Fcodegen.html" target="_blank">https://mybatis-flex.com/zh/others/codegen.html</a></li><li>19、QQ 交流群：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fintro%2Fqq-group.html" target="_blank">https://mybatis-flex.com/zh/intro/qq-group.html</a></li><li>20、更好用的功能正在路上：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com" target="_blank">https://mybatis-flex.com</a></li></ul><h4><strong>bilibili 视频教程（免费）：</strong></h4><p style="color:#3c3c43; margin-left:0; margin-right:0; text-align:start"><strong>课程 1：《MyBatis-Flex 视频教程》</strong></p><blockquote><p style="color:var(--vp-c-text-2); margin-left:0; margin-right:0">课程简介：该课程由<span>&nbsp;</span><a href="https://gitee.com/Suomm" target="_blank">王帅</a><span>&nbsp;</span>老师录制主讲，<span>&nbsp;</span><a href="https://gitee.com/Suomm" target="_blank">王帅</a><span>&nbsp;</span>老师也是除了作者以外，对 MyBatis-Flex 代码贡献最大的 committer。 其无论对 MyBatis 还是 MyBatis-Flex，都有非常深入的理解。</p></blockquote><p style="color:#3c3c43; margin-left:0; margin-right:0; text-align:start">课程地址：</p><p style="color:#3c3c43; margin-left:0; margin-right:0; text-align:start"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV11h411A7cU" target="_blank">https://www.bilibili.com/video/BV11h411A7cU</a></p><hr><p style="color:#3c3c43; margin-left:0; margin-right:0; text-align:start"><strong>课程 2：《MyBatis-Flex 轻松掌握，从零基础到高级应用的完整教程！持续更新中～》</strong></p><blockquote><p style="color:var(--vp-c-text-2); margin-left:0; margin-right:0">课程简介：该课程由周游老师录制，周游老师有多年的开发经验以及丰富的教学经验，能够把 MyBatis-Flex 的许多原理知识讲解的通俗易懂、深入浅出。</p></blockquote><p style="color:#3c3c43; margin-left:0; margin-right:0; text-align:start">课程地址：</p><p style="color:#3c3c43; margin-left:0; margin-right:0; text-align:start"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1kF411r7ky" target="_blank">https://www.bilibili.com/video/BV1kF411r7ky</a></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 09 Oct 2023 03:50:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/260954/mybatis-flex-1-6-9-released</guid>
            <link>https://www.oschina.net/news/260954/mybatis-flex-1-6-9-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[CMake 3.27.7 发布，开源构建系统]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>CMake 是一个跨平台的自动化构建系统，它使用一个名为 CMakeLists.txt 的文件来描述构建过程，可以产生标准的构建文件，如 Unix 的 Makefile 或 Windows Visual C++ 的 projects/workspaces 。文件 CMakeLists.txt 需要手工编写，也可以通过编写脚本进行半自动的生成。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">CMake 3.27.7 现已发布，一些亮点更新内容如下：</p><ul><li><span style="color:#000000">Android：-std=c++23 需要 Clang 18</span></li><li><span style="color:#000000">测试：Clarify RunCMake.CTestTimeout case name</span></li><li><span style="color:#000000">ctest：恢复对 --timeout 值高于默认测试超时的支持</span></li><li><span style="color:#000000">帮助：记录已设置变量的 CMP0124 行为</span></li><li><span style="color:#000000">FindPostgreSQL：添加对版本 16 的支持</span></li><li><span style="color:#000000">Linting：修复&nbsp;empty evaluated genex</span></li></ul><p><span style="color:#000000"><span style="background-color:#ffffff">详情可</span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.kitware.com%2Fcmake-3-27-7-available-for-download%2F" target="_blank">查看发布公告</a><span style="background-color:#ffffff; color:#333333">。</span></p><p><span style="background-color:#ffffff; color:#333333">下载：</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcmake.org%2Fdownload%2F" target="_blank">https://cmake.org/download/</a></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 09 Oct 2023 02:48:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/260939/cmake-3-27-7-released</guid>
            <link>https://www.oschina.net/news/260939/cmake-3-27-7-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[DBShop 商城系统 V3.3 Release 231008 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">DBShop 企业级商城系统，使用 PHP 语言基于 Laminas（Zendframework 3） + Doctrine 2 组合框架开发完成。可定制、多终端、多场景、多支付、多货币；严谨的安全机制，可靠稳定；方便的操作管理，节约时间；清晰的权限分配，责任分明；便捷的更新处理，一键搞定；丰富的插件市场，扩展无限。</p><h2>系统框架</h2><ul><li>Laminas （Zendframework 3）</li><li>Doctrine 2</li></ul><h2>环境要求</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>服务器系统</strong>&nbsp;Linux、Unix、Mac、Windows、其他</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>web 服务器</strong>&nbsp;Apache、Nginx、IIS、其他</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>MySQL 版本</strong>&nbsp;&gt;= 5.6</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>PHP 版本</strong>&nbsp;&gt;= 7.4</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>PHP 扩展 | 库</strong></p><ul><li>PDO</li><li>SSL（openssl）</li><li>Fileinfo</li><li>intl</li><li>Curl</li><li>GD2</li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>系统空间</strong>&nbsp;&gt;= 500M</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>更新日志：</strong><br> 新增，前台会员注册加入扩展功能<br> 修正，在线客服 qq 图标失效问题<br> 优化，在线客服新增微信显示<br> 优化，提示信息的语言包修改<br> 优化，货币设置加入小数位数设置<br> 优化，货币显示<br> 优化，订单金额显示优化<br> 优化，语言包<br> 优化，默认模板和健康绿模板去掉底部服务承诺<br> 优化，货币设置加入货币单位<br> 优化，前台调用<br> 优化，文章图片删除</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>在线文档地址：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.loongdom.com.cn" target="_blank">https://docs.loongdom.com.cn/</a></strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>前台演示地址：</strong><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fv3.dbshop.net%2F" target="_blank">http://v3.dbshop.net</a><br><strong>后台演示地址：</strong><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fv3.dbshop.net%2Fadmin" target="_blank">http://v3.dbshop.net/admin</a><br><strong>后台登录账号：</strong>dbshop<br><strong>后台登录密码：</strong>123456</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><img alt="" height="318" src="https://oscimg.oschina.net/oscnet/up-935399731889136addb4890704783bb91b2.png" width="700" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><img alt="" height="438" src="https://oscimg.oschina.net/oscnet/up-2a10d87169518ff3590a641b918e95a2814.png" width="700" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><img alt="" height="306" src="https://oscimg.oschina.net/oscnet/up-4c99aa3bc36cd815ba6585a6c400b726bb7.png" width="700" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><img alt="" height="404" src="https://oscimg.oschina.net/oscnet/up-21a7773040bd4fab00897a97c87e3d9c188.png" width="700" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><img alt="" height="396" src="https://oscimg.oschina.net/oscnet/up-4bc8e4e8bc97e0f0855e8337dce22da947c.png" width="700" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><img alt="" height="410" src="https://oscimg.oschina.net/oscnet/up-fdec0119a9a8bdc28c9cf30e11f42cafd3b.png" width="700" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>下载地址：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdownload.loongdom.com.cn/dbshop/V3.3/DBShopV3.3_Release231008.tar.gz" target="_blank">&nbsp;https://download.loongdom.com.cn/dbshop/V3.3/DBShopV3.3_Release231008.tar.gz</a></strong></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 09 Oct 2023 02:26:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/260937</guid>
            <link>https://www.oschina.net/news/260937</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[生产力桌面工具—想天工作台 7.0.30 版本发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><img src="https://www.apps.vip/wp-content/uploads/2023/09/1695004332-%E6%A1%8C%E9%9D%A2-1385x800.png" referrerpolicy="no-referrer"></p><p><span style="background-color:#ffffff; color:#40485b">想天工作台是一款集桌面管理、效率办公、游戏娱乐为一体的副屏「系统」（副屏最佳拍档，也可以在主屏窗口化使用）。 基于 Electron 和 Vue 全家桶开发。欢迎各位前端开发的小伙伴下载运行体验。</span></p><p><span style="background-color:#ffffff; color:#40485b">产品主页：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.apps.vip" target="_blank">www.apps.vip</a></span></p><p>目前客户端部分已经完全开源，并托管至 Gitee 上，近期我们也会推出离线版本，支持无服务端依赖运行。</p><p>本次 7.0.30 更新内容如下：<br><span style="color:#6a8759">[</span><span style="color:#6a8759">新增</span><span style="color:#6a8759">]</span><span style="color:#6a8759">新增</span><span style="color:#6a8759">2</span><span style="color:#6a8759">种番茄钟卡片</span><br><span style="color:#6a8759">[</span><span style="color:#6a8759">新增</span><span style="color:#6a8759">]</span><span style="color:#6a8759">番茄钟支持顶部状态栏提示，支持记录番茄数</span><br><span style="color:#6a8759">[</span><span style="color:#6a8759">新增</span><span style="color:#6a8759">]</span><span style="color:#6a8759">部分支线任务</span><br><span style="color:#6a8759">[</span><span style="color:#6a8759">新增</span><span style="color:#6a8759">]</span><span style="color:#6a8759">社群支持应用和分类的创建</span><br><span style="color:#6a8759">[</span><span style="color:#6a8759">新增</span><span style="color:#6a8759">]</span><span style="color:#6a8759">社群的社区应用支持评论和发布内容</span><br><span style="color:#6a8759">[</span><span style="color:#6a8759">优化</span><span style="color:#6a8759">]</span><span style="color:#6a8759">优化待办组件的右键菜单和应用样式</span></p><p><span style="color:#6a8759">[优化]</span><span style="color:#6a8759">优化桌面图标获取方式，获取到的图标非常高清</span><br><span style="color:#6a8759">[</span><span style="color:#6a8759">修复</span><span style="color:#6a8759">]</span><span style="color:#6a8759">修复其他一些小问题</span></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 09 Oct 2023 02:15:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/260932/xiangtian-workbench-7-0-30-released</guid>
            <link>https://www.oschina.net/news/260932/xiangtian-workbench-7-0-30-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[go-carbon v2.2.9 发布，轻量级、语义化、对开发者友好的 Golang 时间处理库]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">carbon 是一个轻量级、语义化、对开发者友好的 Golang 时间处理库，支持链式调用、农历和 gorm、xorm 等主流 orm</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">目前已被<span><span>&nbsp;</span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fyinggaozhen%2Fawesome-go-cn%23%25E6%2597%25A5%25E6%259C%259F%25E5%2592%258C%25E6%2597%25B6%25E9%2597%25B4" target="_blank">awesome-go-cn</a><span><span>&nbsp;</span></span>收录，如果您觉得不错，请给个 star 吧</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgolang-module%2Fcarbon" target="_blank">github.com/golang-module/carbon</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/golang-module/carbon" target="_blank">gitee.com/golang-module/carbon</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>更新日志</strong></p><ul><li>修复获取年龄方法计算错误的 bug</li><li>修复乌克兰语部分翻译错误的 bug</li><li>更改 <span style="color:#999999">DateTime</span>、<span style="color:#999999">DateTimeXXX</span>、<span style="color:#999999">Date</span>、<span style="color:#999999">DateXXX</span> 等结构体的类型 <p>&nbsp;</p></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Mon, 09 Oct 2023 02:05:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/260929/go-carbon-2-2-9-released</guid>
            <link>https://www.oschina.net/news/260929/go-carbon-2-2-9-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[TypeScript 5.3 Beta]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>TypeScript 5.3 已发布 Beta 测试版。</p><p><strong>主要变化</strong></p><ul><li><p>支持&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ftc39%2Fproposal-import-attributes" target="_blank">import attributes</a> 提案的最近更新</p></li><li><p><code>switch (true)</code>Narrowing</p></li><li><p>Narrowing On Comparisons to Booleans</p></li><li><p>检查对实例字段的<code>super</code>属性访问</p></li><li><p>针对类型的交互式嵌套提示 (Interactive Inlay Hints)</p></li><li><p>跳过 JSDoc 解析以进行优化</p></li><li><p>合并 <code>tsserverlibrary.js</code>和<code>typescript.js</code></p></li></ul><hr><p><strong><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ftc39%2Fproposal-import-attributes" target="_blank">import attributes</a></u></strong></p><p>import attributes 的一个用例是向运行时提供有关模块预期格式的信息。</p><pre><code class="language-javascript">// We only want this to be interpreted as JSON,
// not a runnable/malicious JavaScript file with a `.json` extension.
import obj from "./something.json" with { type: "json" };</code></pre><p>TypeScript 不会检查这些属性的内容，因为它们是特定于主机的，因此不会对它们进行检查，只是让浏览器和运行时处理它们（可能会出错）。</p><pre><code class="language-javascript">// TypeScript is fine with this.
// But your browser? Probably not.
import * as foo from "./foo.js" with { type: "fluffy bunny" };</code></pre><p>动态 import() 调用也可以通过第二个参数使用 import 属性。</p><pre><code class="language-javascript">const obj = await import("./something.json", {
    with: { type: "json" }
});</code></pre><p>第二个参数的预期类型由一个名为<code>ImportCallOptions</code>的类型定义，默认情况下，该类型只期望调用一个属性<code>with</code>。</p><p>请注意，导入属性是从早期的 "导入断言"（import assertions）提案演变而来的，该提案已在 TypeScript 4.5 中实现。最明显的区别是使用了<code>with</code>关键字而非<code>assert</code>关键字。但不太明显的区别是，运行时现在可以自由使用属性来指导导入路径的解析和解释，而导入断言只能在加载模块后断言某些特性。</p><p>随着时间的推移，TypeScript 将淘汰旧的导入断言语法，转而使用建议的导入属性语法。使用 assert 的现有代码应迁移到 with 关键字。需要导入属性的新代码应只使用<code>with</code>关键字。</p><p><strong><code>switch (true)</code>Narrowing</strong></p><p>TypeScript 5.3 可以根据<code>switch (true)</code>中每个<code>case</code>子句的条件执行 narrowing。</p><pre><code class="language-javascript">function f(x: unknown) {
    switch (true) {
        case typeof x === "string":
            // 'x' is a 'string' here
            console.log(x.toUpperCase());
            // falls through...

        case Array.isArray(x):
            // 'x' is a 'string | any[]' here.
            console.log(x.length);
            // falls through...

        default:
          // 'x' is 'unknown' here.
          // ...
    }
}</code></pre><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdevblogs.microsoft.com%2Ftypescript%2Fannouncing-typescript-5-3-beta%2F" target="_blank">详情查看发布公告</a>。</p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 08 Oct 2023 08:53:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261022/typescript-5-3-beta</guid>
            <link>https://www.oschina.net/news/261022/typescript-5-3-beta</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Apache Hudi 0.14.0 版本发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Apache Hudi 0.14.0 现已发布。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FATf-92UzW5iOGXYODYn0ug" target="_blank">公告</a>指出，该版本标志着一个重要的里程碑，具有一系列新功能和增强功能。其中包括引入<strong>Record Level Index</strong>、<strong>自动生成记录键</strong>&nbsp;、用于增量读取的&nbsp;<code>hudi_table_changes</code>函数等等。</p><p>值得注意的是，此版本还包含对&nbsp;<strong>Spark 3.4 的支持</strong>。在 Flink 方面，0.14.0 版本带来了一些令人兴奋的功能，例如<strong>一致哈希索引支持、支持 Flink 1.17 以及支持更新和删除语句</strong>。此外此版本还升级了 Hudi 表版本，提示用户查阅下面提供的迁移指南。我们鼓励用户在采用 0.14.0 版本之前查看重大特性、重大变化和行为变更。</p><h1>迁移指南</h1><p>在 0.14.0 版本进行了一些更改，例如从 ".aux" 文件夹中删除压缩计划以及引入新的日志块版本。作为此版本的一部分，表版本更新到版本 6。在具有旧表版本的表上运行版本 0.14.0 的 Hudi 作业时，会触发自动升级过程以将表升级到版本 6。升级对于每个 Hudi 表都是一次性的，因为升级完成后&nbsp;<code>hoodie.table.version</code>&nbsp;会在属性文件中更新。此外还包括用于降级的命令行工具，允许用户从表版本 6 降级到 5，或从 Hudi 0.14.0 恢复到 0.14.0 之前的版本。请从 0.14.0 环境使用此工具。有关更多详细信息，请参阅&nbsp;hudi-cli。</p><blockquote><p>注意：如果从旧版本（0.14.0 之前）迁移，建议按顺序检查每个旧版本的升级说明。</p></blockquote><h1>Bundle 包更新</h1><h3>新 Spark Bundle 包</h3><p>在此版本扩展了支持范围，包括 Spark 3.4 (hudi-spark3.4-bundle_2.12) 和 Spark 3.0 (hudi-spark3.0-bundle_2.12) 的 Bundle 包。请注意，在 Hudi 0.10.1 版本之后，对 Spark 3.0 的支持已停止，但由于社区的强烈兴趣，在此版本中恢复了对 Spark 3.0 的支持。</p><h1>重大变化</h1><h3>Spark SQL INSERT INTO 行为</h3><p>在 0.14.0 版本之前，Spark SQL 中通过 INSERT INTO 摄取的数据遵循 upsert 流程，其中多个版本的记录将合并为一个版本。但是从 0.14.0 开始更改了 INSERT INTO 的默认行为，默认行为更改为<code>insert</code>流。此更改显着提高了写入性能，因为它绕过了索引查找。</p><p>如果使用 preCombine 键创建表，则 INSERT INTO 的默认操作仍为&nbsp;<code>upsert</code>。相反如果没有设置 preCombine 键，则 INSERT INTO 的底层写操作默认为&nbsp;<code>insert</code>。用户可以根据自己的要求显式设置配置&nbsp;<code>hoodie.spark.sql.insert.into.operation</code>&nbsp;的值来灵活地覆盖此行为。此配置的可能值包括&nbsp;<code>insert</code>、<code>bulk_insert</code>&nbsp;和&nbsp;<code>upsert</code>。</p><p>此外在 0.14.0 版本中弃用了两个相关的旧配置</p><ul><li><p>hoodie.sql.insert.mode</p></li><li><p>hoodie.sql.bulk.insert.enable</p></li></ul><h1>行为变更</h1><h3>使用 Spark SQL Inserts 简化重复处理</h3><p>如果操作类型配置为 Spark SQL INSERT INTO 流的插入，用户现在可以选择使用配置设置 hoodie.datasource.insert.dup.policy 强制执行重复策略。此策略确定当正在摄取的传入记录已存在于存储中时采取的操作。此配置的可用值如下：</p><ul><li><p>none：不采取任何特定操作，如果传入记录包含重复项，则允许 Hudi 表中存在重复项。</p></li><li><p>drop：传入写入中的匹配记录将被删除，其余记录将被摄取。</p></li><li><p>fail：如果重新摄取相同的记录，写入操作将失败。本质上由键生成策略确定的给定记录只能被摄取到目标表中一次。</p></li></ul><p>通过添加此配置，旧的相关配置&nbsp;<code>hoodie.datasource.write.insert.drop.duplicates</code>&nbsp;现已弃用。当两者都指定时，新配置将优先于旧配置。如果未提供特定配置，则将采用较新配置的默认值。强烈鼓励用户迁移到使用这些较新的配置。</p><h3>MOR 表 Compaction</h3><p>对于 Spark 批写入器（Spark Datasource 和 Spark SQL），默认情况下会自动为 MOR（读取时合并）表启用压缩，除非用户显式覆盖此行为。用户可以选择通过将&nbsp;<code>hoodie.compact.inline</code>设置为&nbsp;<code>false</code>&nbsp;显式禁用压缩。如果用户不覆盖此配置，大约每 5 个增量提交（<code>hoodie.compact.inline.max.delta.commits</code>的默认值）会触发 MOR 表的压缩。</p><h3>HoodieDeltaStreamer 更名为 HoodieStreamer</h3><p>从版本 0.14.0 开始将 HoodieDeltaStreamer 重命名为 HoodieStreamer。同时确保了向后兼容性，以便现有的用户作业不受影响。但是在即将发布的版本中可能会停止对 Deltastreamer 的支持。因此强烈建议用户改用 HoodieStreamer。</p><h3>MERGE INTO JOIN CONDITION</h3><p>从 0.14.0 版本开始，当用户没有提供明确的规范时，Hudi 能够自动生成主记录键。此增强功能使&nbsp;<code>MERGE INTO JOIN</code>&nbsp;子句能够引用 Hudi 表中连接条件的任何数据列，其中主键由 Hudi 本身生成。但是在用户配置主记录键的情况下，连接条件仍然需要用户指定的主键字段。</p><h1>重大特性</h1><h3>Record Level Index</h3><p>Hudi 版本 0.14.0 引入了新的索引实现 -&nbsp;Record Level Index。记录级索引通过有效存储每条记录的位置并在索引查找操作期间实现快速检索，显着增强了大型表的写入性能。它可以有效地替代 Hudi 中常用的其他全局索引，例如 Global_bloom、Global_Simple 或 Hbase。</p><p>由于在查找过程中从各种数据文件收集索引数据的成本很高，布隆索引和简单索引对于大型数据集表现出较低的性能。而且，这些索引不保留一对一的记录键来记录文件路径映射；相反，他们在查找时通过优化搜索来推断映射。这些索引所需的每个文件的开销使得它们对于具有大量文件或记录的数据集效率较低。</p><p>另一方面，Hbase 索引为每个记录键保存一对一的映射，从而实现随数据集大小扩展的快速性能。然而，它需要一个单独的 HBase 集群来进行维护，这在操作上具有挑战性且资源密集型，需要专门的专业知识。</p><p>记录索引结合了 HBase 索引的速度和可扩展性，而没有其限制和开销。作为 HUDI 元数据表的一部分，未来写入和查询方面的任何性能增强都将自动转化为记录索引性能的改进。采用记录级索引有可能将索引查找性能提高 4 到 10 倍，具体取决于工作负载，即使对于超大规模数据集（例如 1TB）也是如此。</p><p>通过记录级别索引，可以观察到大型数据集的显着性能改进，因为延迟与摄取的数据量成正比。这与其他全局索引形成鲜明对比，其中索引查找时间随着表大小线性增加。记录级索引专门设计用于有效处理此类大规模数据的查找，而查找时间不会随着表大小的增长而线性增加。</p><p>为了利用这种快速的索引的优势，用户需要启用两种配置：</p><ul><li><p>必须启用&nbsp;<code>hoodie.metadata.record.index.enable</code>&nbsp;才能将记录级别索引写入元数据表。</p></li><li><p><code>hoodie.index.type</code>&nbsp;需要设置为&nbsp;<code>RECORD_INDEX</code>&nbsp;以便索引查找利用记录级别索引。</p></li></ul><h3>支持 Hudi 表自动生成键</h3><p>从 Hudi 最初的正式版本开始，主键是用户需要为任何 Hudi 表配置的必填字段。从 0.14.0 开始，我们放宽了这一限制。此增强功能解决了社区内的长期需求，其中某些用例不具有主键。版本 0.14.0 现在为用户提供了创建 Hudi 表的灵活性，而无需显式配置主键（通过省略配置设置 -&nbsp;<code>hoodie.datasource.write.recordkey.field</code>）。这种情况下 Hudi 将自动生成主键。此功能仅适用于新表，不能更改现有表。</p><p>所有 Spark 写入器都提供此功能，但有一定限制。对于仅追加类型的用例，如下四个写入器都允许插入和批量插入 - Spark Datasource、Spark SQL、Spark Streaming、Hoodie Streamer。仅使用 Spark SQL MERGE INTO 、 UPDATE 和 DELETE 语句支持更新和删除。对于 Spark Datasource，仅当 DataFrame 包含 Hudi 的元字段时才支持 UPDATE 和 DELETE。请查看快速入门指南，了解有关自动生成键的 Hudi 表 CRUD 操作的代码片段。</p><h3>Spark 3.4 版本支持</h3><p>添加 Spark 3.4 支持， Spark 3.4 的用户可以使用&nbsp;hudi-spark3.4-bundle。Spark 3.2、Spark 3.1、Spark3.0 和 Spark 2.4 将继续受支持。请检查迁移指南以获取 Bundle 包更新。可以浏览快速入门指南快速开始使用 Hudi 和 Spark 3.4。</p><h3>查询端改进</h3><h4>Athena 的元数据表支持</h4><p>用户现在可以与 Athena 无缝地利用 Hudi 的元数据表。文件列表索引通过从维护分区到文件映射的索引检索信息，消除了对递归文件系统调用（如「列表文件」）的需要。事实证明这种方法非常高效，尤其是在处理大量数据集时。使用 Hudi 0.14.0，用户可以在为其 Hudi 表执行 Glue 目录同步时激活基于元数据表的文件列表。要启用此功能，用户可以配置&nbsp;<code>hoodie.datasource.meta.sync.glue.metadata_file_listing</code>&nbsp;并在 Glue 同步过程中将其设置为 true。</p><h4>查询利用 Parquet 布隆过滤器</h4><p>在 Hudi 0.14.0 中，用户现在可以使用原生 Parquet 布隆过滤器，前提是他们的计算引擎支持 Apache Parquet 1.12.0 或更高版本。这种支持涵盖了数据集的写入和读取。Hudi 通过 Hadoop 配置方便使用原生 Parquet 布隆过滤器。用户需要使用代表要应用布隆过滤器的列的特定键来设置 Hadoop 配置。例如，&nbsp;<code>parquet.bloom.filter.enabled#rider=true</code>&nbsp;为 rider 列创建布隆过滤器。每当查询涉及 rider 列上的谓词时，布隆过滤器就会发挥作用，从而增强读取性能。</p><h4>多写入器的增量查询</h4><p>在多写入器场景中，由于并发写入活动，时间线中可能会出现间隙（requested 或 inflight 时刻不是最新时刻）。在执行增量查询时，这些间隙可能会导致结果不一致。为了解决这个问题，Hudi 0.14.0 引入了一个新的配置设置&nbsp;<code>hoodie.read.timeline.holes.resolution.policy</code>，专门用于处理增量查询中的这些不一致问题。该配置提供了三种可能的策略：</p><ul><li><p>FAIL：这是默认策略，当增量查询期间发现此类时间线间隙时，会引发异常。</p></li><li><p>BLOCK：在此策略中，增量查询的结果仅限于时间线中空洞之间的时间范围。例如，如果在 t0 到 t2 的增量查询范围内，在 t1 时刻检测到间隙，则查询将仅显示 t0 到 t1 之间的结果，而不会失败。</p></li><li><p>USE_TRANSITION_TIME：此策略是实验性的，涉及在增量查询期间使用状态转换时间，该时间基于时间线中提交元数据文件的文件修改时间。</p></li></ul><h4>Hive 3.x 的 Timestamp 类型支持</h4><p>相当长一段时间以来，Hudi 用户在读取 Spark 的 Timestamp 类型列以及随后尝试使用 Hive 3.x 读取它们时遇到了挑战。在 Hudi 0.13.x 中，我们引入了一种解决方法来缓解此问题，0.14.0 版本现在确保 HiveAvroSerializer 与 Hive 3.x 完全兼容以解决此问题。</p><h4>Google BigQuery 同步增强功能</h4><p>在 0.14.0 中，BigQuerySyncTool&nbsp;支持使用清单将表同步到 BigQuery。与传统方式相比，这预计将具有更好的查询性能。模式演进由清单方法支持。由于新的 schema 处理改进，不再需要从文件中删除分区列。要启用此功能，用户可以将&nbsp;<code>hoodie.gcp.bigquery.sync.use_bq_manifest_file</code>设置为&nbsp;<code>true</code>。</p><h3>Spark 读取端改进</h3><h4>MOR Bootstrap 表的快照读取支持</h4><p>在 0.14.0 中，为引导表添加了 MOR 快照读取支持。默认行为已通过多种方式进行了更改，以匹配非引导 MOR 表的行为。快照读取现在将成为默认读取模式。使用&nbsp;<code>hoodie.datasource.query.type=read_optimized</code>&nbsp;进行读取优化查询，这是以前的默认行为。此类表的 Hive 同步将导致表名带有 _ro 和 _rt 后缀，分别表示读取优化和快照读取。</p><h4>用于增量读取的表值函数 hudi_table_changes</h4><p>Hudi 已经提供了使用增量查询类型获取自给定提交时间戳以来更改的记录流的功能。在 Hudi 0.14.0 中，我们添加了一种新的、更简单的方法，使用名为 hudi_table_changes 的表值函数来获取 Hudi 数据集的最新状态或更改流。以下是有关如何使用此函数的语法和一些示例。</p><pre><code>SYNTAX
hudi_table_changes(table,&nbsp;queryType,&nbsp;beginTime&nbsp;[,&nbsp;endTime]);
--&nbsp;table:&nbsp;table&nbsp;identifier,&nbsp;example:&nbsp;db.tableName,&nbsp;tableName,&nbsp;or&nbsp;path&nbsp;for&nbsp;the&nbsp;table,&nbsp;example:&nbsp;hdfs://path/to/hudiTable.
--&nbsp;queryType:&nbsp;incremental&nbsp;query&nbsp;mode,&nbsp;valid&nbsp;values:&nbsp;latest_state,&nbsp;cdc
(for&nbsp;cdc&nbsp;query,&nbsp;first&nbsp;enable&nbsp;cdc&nbsp;for&nbsp;the&nbsp;table&nbsp;by&nbsp;setting&nbsp;cdc.enabled=true),
--&nbsp;beginTime:&nbsp;instantTime&nbsp;to&nbsp;begin&nbsp;query&nbsp;from,&nbsp;example:&nbsp;earliest,&nbsp;202305150000,
--&nbsp;endTime:&nbsp;optional&nbsp;instantTime&nbsp;to&nbsp;end&nbsp;query&nbsp;at,&nbsp;example:&nbsp;202305160000,

EXAMPLES
--&nbsp;incrementally&nbsp;query&nbsp;data&nbsp;by&nbsp;table&nbsp;name
--&nbsp;start&nbsp;from&nbsp;earliest&nbsp;available&nbsp;commit,&nbsp;end&nbsp;at&nbsp;latest&nbsp;available&nbsp;commit.
SELECT&nbsp;*&nbsp;FROM&nbsp;hudi_table_changes('db.table',&nbsp;'latest_state',&nbsp;'earliest');

--&nbsp;start&nbsp;from&nbsp;earliest,&nbsp;end&nbsp;at&nbsp;202305160000.
SELECT&nbsp;*&nbsp;FROM&nbsp;hudi_table_changes('table',&nbsp;'latest_state',&nbsp;'earliest',&nbsp;'202305160000');

--&nbsp;incrementally&nbsp;query&nbsp;data&nbsp;by&nbsp;path
--&nbsp;start&nbsp;from&nbsp;earliest&nbsp;available&nbsp;commit,&nbsp;end&nbsp;at&nbsp;latest&nbsp;available&nbsp;commit.
SELECT&nbsp;*&nbsp;FROM&nbsp;hudi_table_changes('path/to/table',&nbsp;'cdc',&nbsp;'earliest');

</code></pre><p>查看快速入门以获取更多示例。</p><h4>Spark 中新的 MOR 文件格式读取器</h4><p>基于&nbsp;RFC-72&nbsp;旨在重新设计 Hudi-Spark 集成的提案，我们引入了用于 MOR（读取合并）表的实验性文件格式读取器。与旧文件格式相比，该读取器预计可将读取延迟显着降低 20% 至 40%，特别是对于快照和引导查询。目标是使延迟更接近 COW（写入时复制）文件格式的延迟。要利用这种新文件格式，用户需要设置&nbsp;<code>hoodie.datasource.read.use.new.parquet.file.format=true</code>。值得注意的是，此功能仍处于实验阶段，并且存在一些限制。有关更多详细信息以及有兴趣做出贡献，请参阅&nbsp;HUDI-6568。</p><h3>Spark 写入端改进</h3><h4>Bulk_Insert 和行写入器增强</h4><p>0.14.0 版本支持在执行 INSERT OVERWRITE TABLE 和 INSERT OVERWRITE PARTITION 等 SQL 操作时使用批量插入操作。要启用批量插入，请将配置&nbsp;<code>hoodie.spark.sql.insert.into.operation</code>&nbsp;设置为值<code>bulk_insert</code>。与插入操作相比，批量插入具有更好的写入性能。另外简单存储桶索引也支持了行写入器。</p><h3>Hoodie DeltaStreamer 增强</h3><h4>动态配置更新</h4><p>当 Hoodie Streamer 以连续模式运行时，可以在每次同步调用之前刷新/更新属性。有兴趣的用户可以实现&nbsp;<code>org.apache.hudi.utilities.deltastreamer.ConfigurationHotUpdateStrategy</code>&nbsp;来利用它。</p><h4>HoodieStreamer 基于 SQL 文件的源</h4><p>HoodieStreamer 中添加了一个新源 -&nbsp;SqlFileBasedSource，旨在促进一次性回填场景。</p><h3>Flink 增强功能</h3><p>以下是 0.14.0 版本中基于 Flink Engine 的增强功能。</p><h4>一致的哈希索引支持</h4><p>与静态哈希索引（BUCKET 索引）相比，一致性哈希索引为写入者提供了数据桶的动态可扩展性。要利用此功能，请将选项<code>index.type</code>配置为 BUCKET 并将<code>hoodie.index.bucket.engine</code>设置为<code>CONSISTENT_HASHING</code>。</p><p>启用一致性哈希索引时，在写入器中激活异步 Clustering 调度非常重要。Clustering 计划应通过离线作业执行。在此过程中，写入器将在 Clustering Pending 时对新旧数据桶执行双重写入。虽然双写不会影响正确性，但强烈建议尽快执行 Clustering。</p><h4>用于流式读取的动态分区修剪</h4><p>在 0.14.0 之前，当查询具有恒定日期时间过滤的谓词时，Flink 流式读取器无法正确修剪日期时间分区。自此版本以来，Flink 流式查询已得到修复，以支持任何过滤谓词模式，包括但不限于日期时间过滤。</p><h4>简单桶索引表查询加速（带索引字段）</h4><p>对于一个简单的桶索引表，如果查询对索引键字段采用等式过滤谓词，Flink 引擎会优化规划，只包含来自非常特定数据桶的源数据文件；此类查询预计平均性能将提高近&nbsp;<code>hoodie.bucket.index.num.buckets</code>&nbsp;倍。</p><h4>Flink 1.17 支持</h4><p>Flink 1.17 支持新的编译 maven 配置文件 flink1.17，在 Flink Hudi Bundle 包 jar 的编译 cmd 中添加配置文件 -Pflink1.17 以启用与 Flink 1.17 的集成。</p><h4>Flink 更新删除语句</h4><p>自此版本以来，UPDATE 和 DELETE 语句已集成用于批量查询。当前只有定义主键的表可以正确处理该语句。</p><pre><code>UPDATE&nbsp;hudi_table&nbsp;SET&nbsp;...&nbsp;WHERE&nbsp;...
DELETE&nbsp;FROM&nbsp;hudi_table&nbsp;WHERE&nbsp;...

EXAMPLES
--&nbsp;update&nbsp;the&nbsp;specific&nbsp;records&nbsp;with&nbsp;constant&nbsp;age
UPDATE&nbsp;hudi_table&nbsp;SET&nbsp;age=19&nbsp;WHERE&nbsp;UUID&nbsp;in&nbsp;('id1',&nbsp;'id2');
--&nbsp;delete&nbsp;all&nbsp;the&nbsp;records&nbsp;that&nbsp;with&nbsp;age&nbsp;greater&nbsp;than&nbsp;23
DELETE&nbsp;FROM&nbsp;hudi_table&nbsp;WHERE&nbsp;age&nbsp;&gt;&nbsp;23;

</code></pre><h3>Java 增强功能</h3><p>Java 引擎已扩展支持许多写操作，使其与其他引擎保持一致。例如 Java Engine 0.14.0 中添加了压缩、Clustering 和元数据表支持。</p><h3>已知回退</h3><p>在 Hudi 0.14.0 中，当查询使用 ComplexKeyGenerator 或 CustomKeyGenerator 的表时，分区值以字符串形式返回。请注意，存储上没有类型更改，即分区字段以存储上的用户定义类型写入。这对于上述键生成器来说是一个重大变化，将在 0.14.1 中修复。</p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 08 Oct 2023 03:51:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/260955/apache-hudi-0-14-0-released</guid>
            <link>https://www.oschina.net/news/260955/apache-hudi-0-14-0-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
    </channel>
</rss>
