<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[开源中国-软件更新资讯]]>
        </title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="https://rsshub.app/oschina/news/project" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[开源中国-软件更新资讯 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Fri, 03 Nov 2023 03:56:38 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[Deno 1.38：新增 HTML 文档生成器、支持 HMR]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Deno 1.38 已正式<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeno.com%2Fblog%2Fv1.38" target="_blank">发布</a></u>。</p><p>公告写道，此版本为<code>deno doc</code>命令引入了重大改进，其中包括使用<code>deno doc --html</code>生成静态站点文档的能力。另外改进了 Node.js 兼容性、支持 HMR（模块热更新）。</p><p><strong>主要变化</strong></p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeno.com%2Fblog%2Fv1.38%23deno-doc-updates" target="_blank">改进<code>deno doc</code></a>：新的&nbsp;<code>deno doc --html</code>&nbsp;命令可生成包含项目文档的静态站点。</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeno.com%2Fblog%2Fv1.38%23hot-module-replacement" target="_blank">模块热更新</a>：新的&nbsp;<code>--unstable-hmr</code>&nbsp;flag 将检测变更，重新加载服务器，同时保留状态。</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeno.com%2Fblog%2Fv1.38%23nodejs-compatibility-improvements" target="_blank">改进 Node.js 兼容性</a>：现在从 Node 迁移时，使用 Deno 会更加容易。因为可以使用所选择的 npm 包管理器。通过&nbsp;<code>npm</code>&nbsp;安装 npm 模块并使用 Deno 运行它。</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeno.com%2Fblog%2Fv1.38%23fastest-jsx-transform" target="_blank">快速的 JSX 转换</a>：通过字符串连接而不是对象分配将 JSX 转换速度提高约 7-20 倍</li><li><code>deno run --env</code>&nbsp;：对&nbsp;<code>.env</code>&nbsp;文件的内置支持</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeno.com%2Fblog%2Fv1.38%23websockets-improvements" target="_blank">改进 WebSockets</a>：支持 HTTP/2 上的 RFC8841 Websocket 以及修复错误</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeno.com%2Fblog%2Fv1.38%23deno-task-supports-head-command" target="_blank"><code>deno task</code>&nbsp;支持&nbsp;<code>head</code>&nbsp;命令</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeno.com%2Fblog%2Fv1.38%23vscode-extension-and-language-server" target="_blank">针对 VSCode 扩展和语言服务器的稳定性改进</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fdeno.com%2Fblog%2Fv1.38%23denotest-support-in-the-repl" target="_blank">REPL 中的&nbsp;<code>Deno.test</code>&nbsp;支持</a>：与 Jupyter 运行良好</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeno.com%2Fblog%2Fv1.38%23jupyter-notebook-updates" target="_blank">Jupyter Notebook 更新</a>：支持富文本 HTML 输出</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeno.com%2Fblog%2Fv1.38%23deno-api-changes" target="_blank"><code>Deno</code>&nbsp;API 变更</a>：&nbsp;<code>Deno.serve</code>&nbsp;现在支持 unix 套接字</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeno.com%2Fblog%2Fv1.38%23web-api-changes" target="_blank">Web API 变更</a>：添加了&nbsp;<code>window.name</code>&nbsp;和&nbsp;<code>EventSource</code>&nbsp;</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeno.com%2Fblog%2Fv1.38%23standard-library-updates" target="_blank">标准库更新</a>：弃用<code>std/http/server.ts</code></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeno.com%2Fblog%2Fv1.38%23granular---unstable--flags" target="_blank">细粒度&nbsp;<code>--unstable-*</code>&nbsp;flags</a>：更好地对内部功能进行标记</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeno.com%2Fblog%2Fv1.38%23performance-improvements" target="_blank">改进性能</a>：当不使用可转移项时，&nbsp;<code>structuredClone</code>&nbsp;现在速度要快得多</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeno.com%2Fblog%2Fv1.38%23v8-120" target="_blank">V8 升级到 12.0</a>：引入&nbsp;<code>Array.fromAsync</code>&nbsp;和&nbsp;<code>Promise.withResolvers</code>&nbsp;</li></ul><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeno.com%2Fblog%2Fv1.38" target="_blank">详情</a>。</p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 03 Nov 2023 03:19:13 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264739/deno-1-38</guid>
            <link>https://www.oschina.net/news/264739/deno-1-38</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Visual Studio Code 1.84 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff; color:#333333">Visual Studio Code 1.84 现已发布，具体更新内容如下：</span></p><ul><li><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_84%23_accessibility" target="_blank">更多音频提示</a>&nbsp;</strong>- 新的音频提示可指示清除、保存和格式化活动。</li><li><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_84%23_workbench" target="_blank">自定义活动栏位置</a>&nbsp;</strong>- 将活动栏移至顶部以紧凑显示。</li></ul><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-a02489be8fd5595d8dc82350d192b5472a2.gif" width="400" referrerpolicy="no-referrer"></p><ul><li><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_84%23_hide-editor-tabs" target="_blank">隐藏编辑器选项卡</a>&nbsp;</strong>- 显示多个、单个或不显示编辑器选项卡。</li></ul><p><img alt="" height="207" src="https://oscimg.oschina.net/oscnet/up-398420c769b24caa7db39e15dfc6428ae6b.gif" width="500" referrerpolicy="no-referrer"></p><ul><li><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_84%23_maximize-editor-group" target="_blank">最大化 Editor Groups</a>&nbsp;</strong>- 快速展开活动的 Editor Group。</li></ul><p><img alt="" height="318" src="https://oscimg.oschina.net/oscnet/up-f7316c4fd42416ea0211da2c2149213e46f.gif" width="500" referrerpolicy="no-referrer"></p><ul><li><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_84%23_python" target="_blank">Python 改进</a>&nbsp;</strong>- 更好地在终端中运行代码，更轻松地创建虚拟环境。</li><li><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_84%23_fastapi-tutorial" target="_blank">FastAPI 教程</a>&nbsp;</strong>- 了解如何使用 VS Code 开发 Python FastAPI 应用程序。</li><li><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_84%23_gradle-for-java" target="_blank">Gradle for Java</a></strong>&nbsp;- 改进了对 Java Gradle 项目的支持。</li></ul><p><img height="104" src="https://oscimg.oschina.net/oscnet/up-239bfee4e76f665ff20e9fda7fc279bbaea.png" width="500" referrerpolicy="no-referrer"></p><ul><li><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_84%23_github-copilot" target="_blank">Preview：GitHub Copilot</a></strong>&nbsp;- 聊天「代理」，生成 commit 消息，终端支持。</li></ul><p>更多详情可<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_84" target="_blank">查看官方公告</a>。&nbsp;</p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 03 Nov 2023 02:48:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264731/vs-code-1-84-released</guid>
            <link>https://www.oschina.net/news/264731/vs-code-1-84-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[go-carbon v2.2.12 发布，轻量级、语义化、对开发者友好的 Golang 时间处理库]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">carbon 是一个轻量级、语义化、零依赖、对开发者友好的 Golang 时间处理库，支持链式调用、农历和 gorm、xorm 等主流 orm</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">目前已被<span><span>&nbsp;</span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fyinggaozhen%2Fawesome-go-cn%23%25E6%2597%25A5%25E6%259C%259F%25E5%2592%258C%25E6%2597%25B6%25E9%2597%25B4" target="_blank">awesome-go-cn</a><span><span>&nbsp;</span></span>收录，如果您觉得不错，请给个 star 吧</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgolang-module%2Fcarbon" target="_blank">github.com/golang-module/carbon</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/golang-module/carbon" target="_blank">gitee.com/golang-module/carbon</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>更新日志</strong></p><ul><li>增加对荷兰语的支持</li><li>测试文件里测试用例增加索引数字</li><li>去掉<span>&nbsp;</span><code>comparer.go</code><span>&nbsp;</span>文件里<span>&nbsp;</span><code>IsNow</code><span>&nbsp;</span>方法中的打印调试信息</li></ul></div>
                                    ]]>
            </description>
            <pubDate>Fri, 03 Nov 2023 02:24:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264729/go-carbon-2-2-12-released</guid>
            <link>https://www.oschina.net/news/264729/go-carbon-2-2-12-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[OpenNJet 版本更新到 V1.2.3]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span>☘️ </span><span style="background-color:#ffffff; color:#333333">OpenNJet 版本 1.2.3 现已发布，</span><span>该版本修复了一个 stream 流量劫持功能相关的 bug：</span></p><ul><li><span>关于配置 njtmesh_dest 指令，可能导致 stream 代理不能正常通信的问题</span></li></ul><div><div><span style="background-color:rgba(0, 0, 0, 0.04); color:#000000">👉</span><span>了解详情：<a href="https://gitee.com/njet-rd/njet/releases%EF%BB%BF">https://gitee.com/njet-rd/njet/releases﻿</a></span></div></div><p>&nbsp;</p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 03 Nov 2023 02:11:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264727/opennjet-1-2-3-released</guid>
            <link>https://www.oschina.net/news/264727/opennjet-1-2-3-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Wow 2.7.1 发布，让领域驱动设计变得触手可得]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>基于 DDD、EventSourcing 的现代响应式 CQRS 架构微服务开发框架</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FAhoo-Wang%2FWow%2Fblob%2Fmvp%2FLICENSE"><img alt="License" src="https://img.shields.io/badge/license-Apache%202-4EB1BA.svg" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FAhoo-Wang%2FWow%2Freleases"><img alt="GitHub release" src="https://img.shields.io/github/release/Ahoo-Wang/Wow.svg" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fapp.codacy.com%2Fgh%2FAhoo-Wang%2FWow%2Fdashboard%3Futm_source%3Dgh%26utm_medium%3Dreferral%26utm_content%3D%26utm_campaign%3DBadge_grade"><img alt="Codacy Badge" src="https://app.codacy.com/project/badge/Grade/cfc724df22db4f9387525258c8a59609" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fcodecov.io%2Fgh%2FAhoo-Wang%2FWow"><img alt="codecov" src="https://codecov.io/gh/Ahoo-Wang/Wow/branch/main/graph/badge.svg?token=uloJrLoQir" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FAhoo-Wang%2FWow"><img alt="Integration Test Status" src="https://github.com/Ahoo-Wang/Wow/actions/workflows/integration-test.yml/badge.svg" referrerpolicy="no-referrer"></a><span style="background-color:#ffffff; color:#40485b"><span>&nbsp;</span></span><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FKotlinBy%2Fawesome-kotlin"><img alt="Awesome Kotlin Badge" src="https://kotlin.link/awesome-kotlin.svg" referrerpolicy="no-referrer"></a></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><strong>领域驱动&nbsp;</strong><span>&nbsp;</span>|&nbsp;<span>&nbsp;</span><strong>事件驱动</strong><span>&nbsp;&nbsp;</span>|<span>&nbsp;&nbsp;</span><strong>测试驱动</strong><span>&nbsp;&nbsp;</span>|<span>&nbsp;&nbsp;</span><strong>声明式设计</strong><span>&nbsp;</span>｜<span>&nbsp;</span><strong>响应式编程</strong><span>&nbsp;</span>｜<span>&nbsp;</span><strong>命令查询职责分离</strong><span>&nbsp;</span>｜<span>&nbsp;</span><strong>事件溯源</strong></p><h2>更新内容 🎉 🎉 🎉</h2><ul><li>依赖: 更新<span>&nbsp;</span><code>CosId</code><span>&nbsp;</span>版本<span>&nbsp;</span><code>v2.5.6</code></li><li>依赖: 更新<span>&nbsp;</span><code>kotlin</code><span>&nbsp;</span>版本<span>&nbsp;</span><code>v1.9.20</code></li><li>依赖: 更新<span>&nbsp;</span><code>ksp</code><span>&nbsp;</span>版本<span>&nbsp;</span><code>v1.9.20-1.0.13</code></li><li>依赖: 更新<span>&nbsp;</span><code>detekt</code><span>&nbsp;</span>版本<span>&nbsp;</span><code>v1.23.3</code></li><li>重构: 移除重复的<span>&nbsp;</span><code>BatchResult</code><span>&nbsp;</span>类定义</li></ul><h2>架构图</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-Architecture" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Architecture.svg" referrerpolicy="no-referrer"></p><h2>性能测试 (Example)</h2><ul><li>测试代码：<a href="https://gitee.com/AhooWang/Wow/blob/main/example">Example</a></li><li>测试场景：加入购物车、下单</li><li>命令发送等待模式（<code>WaitStrategy</code>）：<code>SENT</code>、<code>PROCESSED</code></li></ul><h3>部署</h3><ul><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/perf/redis.yaml">Redis</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/perf/mongo.yaml">MongoDB</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/perf/kafka.yaml">Kafka</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/perf/config/mongo_kafka_redis.yaml">Application-Config</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/perf/deployment.yaml">Application-Deployment</a></li></ul><h3>测试报告</h3><h4>加入购物车</h4><ul><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/request/AddCartItem.http">请求</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/document/example/perf/Example.Cart.Add@SENT.pdf">详细报告 (PDF)-SENT</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/document/example/perf/Example.Cart.Add@PROCESSED.pdf">详细报告 (PDF)-PROCESSED</a></li></ul><blockquote><p style="margin-left:0; margin-right:0"><code>WaitStrategy</code>:<span>&nbsp;</span><code>SENT</code></p></blockquote><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="SENT" src="https://gitee.com/AhooWang/Wow/raw/main/document/example/perf/Example.Cart.Add@SENT.png" referrerpolicy="no-referrer"></p><blockquote><p style="margin-left:0; margin-right:0"><code>WaitStrategy</code>:<span>&nbsp;</span><code>PROCESSED</code></p></blockquote><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="PROCESSED" src="https://gitee.com/AhooWang/Wow/raw/main/document/example/perf/Example.Cart.Add@PROCESSED.png" referrerpolicy="no-referrer"></p><h4>下单</h4><ul><li><a href="https://gitee.com/AhooWang/Wow/blob/main/deploy/example/request/CreateOrder.http">请求</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/document/example/perf/Example.Order.Create@SENT.pdf">详细报告 (PDF)-SENT</a></li><li><a href="https://gitee.com/AhooWang/Wow/blob/main/document/example/perf/Example.Order.Create@PROCESSED.pdf">详细报告 (PDF)-PROCESSED</a></li></ul><blockquote><p style="margin-left:0; margin-right:0"><code>WaitStrategy</code>:<span>&nbsp;</span><code>SENT</code></p></blockquote><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="SENT" src="https://gitee.com/AhooWang/Wow/raw/main/document/example/perf/Example.Order.Create@SENT.png" referrerpolicy="no-referrer"></p><blockquote><p style="margin-left:0; margin-right:0"><code>WaitStrategy</code>:<span>&nbsp;</span><code>PROCESSED</code></p></blockquote><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="PROCESSED" src="https://gitee.com/AhooWang/Wow/raw/main/document/example/perf/Example.Order.Create@PROCESSED.png" referrerpolicy="no-referrer"></p><h2>事件源</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-EventSourcing" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/EventSourcing.svg" referrerpolicy="no-referrer"></p><h2>可观测性</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-Observability" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/OpenTelemetry.png" referrerpolicy="no-referrer"></p><h2>OpenAPI (Spring WebFlux 集成)</h2><blockquote><p style="margin-left:0; margin-right:0">自动注册<span>&nbsp;</span><strong>命令</strong><span>&nbsp;</span>路由处理函数 (<code>HandlerFunction</code>) ，开发人员仅需编写领域模型，即可完成服务开发。</p></blockquote><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-Spring-WebFlux-Integration" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/OpenAPI-Swagger.png" referrerpolicy="no-referrer"></p><h2>测试套件：80%+ 的测试覆盖率轻而易举</h2><blockquote><p style="margin-left:0; margin-right:0">Given -&gt; When -&gt; Expect .</p></blockquote><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Wow-CI-Flow" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/CI-Flow.png" referrerpolicy="no-referrer"></p><h2>前置条件</h2><ul><li>理解<span>&nbsp;</span><strong>领域驱动设计</strong>：《实现领域驱动设计》、《领域驱动设计：软件核心复杂性应对之道》</li><li>理解<span>&nbsp;</span><strong>命令查询职责分离</strong>（CQRS）</li><li>理解<span>&nbsp;</span><strong>事件源架构</strong></li><li>理解<span>&nbsp;</span><strong>响应式编程</strong></li></ul><h2>特性</h2><ul><li><span>&nbsp;</span>Aggregate Modeling 
  <ul><li><span>&nbsp;</span>Single Class</li><li><span>&nbsp;</span>Inheritance Pattern</li><li><span>&nbsp;</span>Aggregation Pattern</li></ul></li><li><span>&nbsp;</span>Saga Modeling 
  <ul><li><span>&nbsp;</span><code>StatelessSaga</code></li></ul></li><li><span>&nbsp;</span>Test Suite 
  <ul><li><span>&nbsp;</span>兼容性测试规范（TCK）</li><li><span>&nbsp;</span><code>AggregateVerifier</code></li><li><span>&nbsp;</span><code>SagaVerifier</code></li></ul></li><li><span>&nbsp;</span>EventSourcing 
  <ul><li>EventStore 
    <ul><li><span>&nbsp;</span>MongoDB (Recommend)</li><li><span>&nbsp;</span>R2dbc 
      <ul><li><span>&nbsp;</span>Database Sharding</li><li><span>&nbsp;</span>Table Sharding</li></ul></li><li><span>&nbsp;</span>Redis</li></ul></li><li>Snapshot 
    <ul><li><span>&nbsp;</span>MongoDB</li><li><span>&nbsp;</span>R2dbc 
      <ul><li><span>&nbsp;</span>Database Sharding</li><li><span>&nbsp;</span>Table Sharding</li></ul></li><li><span>&nbsp;</span>ElasticSearch</li><li><span>&nbsp;</span>Redis (Recommend)</li></ul></li></ul></li><li><span>&nbsp;</span>命令等待策略（<code>WaitStrategy</code>） 
  <ul><li><span>&nbsp;</span><code>SENT</code><span>&nbsp;</span>: 命令发送成功后发送完成信号</li><li><span>&nbsp;</span><code>PROCESSED</code><span>&nbsp;</span>: 命令处理完成后发送完成信号</li><li><span>&nbsp;</span><code>SNAPSHOT</code><span>&nbsp;</span>: 快照生成完成后发送完成信号</li><li><span>&nbsp;</span><code>PROJECTED</code><span>&nbsp;</span>: 命令产生的事件被投影后发送完成信号</li></ul></li><li><span>&nbsp;</span>CommandBus 
  <ul><li><span>&nbsp;</span><code>InMemoryCommandBus</code></li><li><span>&nbsp;</span><code>KafkaCommandBus</code><span>&nbsp;</span>(Recommend)</li><li><span>&nbsp;</span><code>RedisCommandBus</code></li><li><span>&nbsp;</span><code>LocalFirstCommandBus</code></li></ul></li><li><span>&nbsp;</span>DomainEventBus 
  <ul><li><span>&nbsp;</span><code>InMemoryDomainEventBus</code></li><li><span>&nbsp;</span><code>KafkaDomainEventBus</code><span>&nbsp;</span>(Recommend)</li><li><span>&nbsp;</span><code>RedisDomainEventBus</code></li><li><span>&nbsp;</span><code>LocalFirstDomainEventBus</code></li></ul></li><li><span>&nbsp;</span>StateEventBus 
  <ul><li><span>&nbsp;</span><code>InMemoryStateEventBus</code></li><li><span>&nbsp;</span><code>KafkaStateEventBus</code><span>&nbsp;</span>(Recommend)</li><li><span>&nbsp;</span><code>RedisStateEventBus</code></li><li><span>&nbsp;</span><code>LocalFirstStateEventBus</code></li></ul></li><li><span>&nbsp;</span>Spring 集成 
  <ul><li><span>&nbsp;</span>Spring Boot Auto Configuration</li><li><span>&nbsp;</span>Automatically register<span>&nbsp;</span><code>CommandAggregate</code><span>&nbsp;</span>to<span>&nbsp;</span><code>RouterFunction</code></li></ul></li><li><span>&nbsp;</span>可观测性 
  <ul><li><span>&nbsp;</span>OpenTelemetry</li></ul></li><li><span>&nbsp;</span>OpenAPI</li><li><span>&nbsp;</span><code>WowMetadata</code><span>&nbsp;</span>Generator 
  <ul><li><span>&nbsp;</span><code>wow-compiler</code></li></ul></li></ul><h2>Example</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/AhooWang/Wow/blob/main/example">Example</a></p><h2>单元测试套件</h2><h3>80%+ 的测试覆盖率轻而易举。</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Test Coverage" src="https://gitee.com/AhooWang/Wow/raw/main/document/example/example-domain-jococo.png" referrerpolicy="no-referrer"></p><blockquote><p style="margin-left:0; margin-right:0">Given -&gt; When -&gt; Expect .</p></blockquote><h3>Aggregate Unit Test (<code>AggregateVerifier</code>)</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/AhooWang/Wow/blob/main/example/example-domain/src/test/kotlin/me/ahoo/wow/example/domain/order/OrderTest.kt">Aggregate Test</a></p><pre><code><span style="color:#d73a49"><span style="color:#d73a49">internal</span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49">class</span></span></span><span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1">OrderTest</span></span></span><span></span></span>{

    <span style="color:#d73a49"><span style="color:#d73a49">private</span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span><span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1">mockCreateOrder</span></span></span><span><span><span>()</span></span></span></span>: VerifiedStage&lt;OrderState&gt; {
        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> tenantId = GlobalIdGenerator.generateAsString()
        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> customerId = GlobalIdGenerator.generateAsString()

        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> orderItem = OrderItem(
            GlobalIdGenerator.generateAsString(),
            GlobalIdGenerator.generateAsString(),
            BigDecimal.valueOf(<span><span>10</span></span>),
            <span><span>10</span></span>,
        )
        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> orderItems = listOf(orderItem)
        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> inventoryService = <span style="color:#d73a49"><span style="color:#d73a49">object</span></span> : InventoryService {
            <span style="color:#d73a49"><span style="color:#d73a49">override</span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span><span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1">getInventory</span></span></span><span><span><span>(productId: </span></span><span style="color:#d73a49"><span><span><span style="color:#d73a49">String</span></span></span></span><span><span>)</span></span></span></span>: Mono&lt;<span><span>Int</span></span>&gt; {
                <span style="color:#d73a49"><span style="color:#d73a49">return</span></span> orderItems.filter { it.productId == productId }.map { it.quantity }.first().toMono()
            }
        }
        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> pricingService = <span style="color:#d73a49"><span style="color:#d73a49">object</span></span> : PricingService {
            <span style="color:#d73a49"><span style="color:#d73a49">override</span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span><span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1">getProductPrice</span></span></span><span><span><span>(productId: </span></span><span style="color:#d73a49"><span><span><span style="color:#d73a49">String</span></span></span></span><span><span>)</span></span></span></span>: Mono&lt;BigDecimal&gt; {
                <span style="color:#d73a49"><span style="color:#d73a49">return</span></span> orderItems.filter { it.productId == productId }.map { it.price }.first().toMono()
            }
        }
        <span style="color:#d73a49"><span style="color:#d73a49">return</span></span> aggregateVerifier&lt;Order, OrderState&gt;(tenantId = tenantId)
            .inject(DefaultCreateOrderSpec(inventoryService, pricingService))
            .given()
            .`<span style="color:#d73a49"><span style="color:#d73a49">when</span></span>`(CreateOrder(customerId, orderItems, SHIPPING_ADDRESS, <span style="color:#005cc5"><span style="color:#005cc5">false</span></span>))
            .expectEventCount(<span><span>1</span></span>)
            .expectEventType(OrderCreated::<span><span style="color:#d73a49"><span><span style="color:#d73a49">class</span></span></span><span>.</span><span style="color:#6f42c1"><span><span style="color:#6f42c1">java</span></span></span><span>)</span></span>
            .expectStateAggregate {
                assertThat(it.aggregateId.tenantId, equalTo(tenantId))
            }
            .expectState {
                assertThat(it.id, notNullValue())
                assertThat(it.customerId, equalTo(customerId))
                assertThat(it.address, equalTo(SHIPPING_ADDRESS))
                assertThat(it.items, equalTo(orderItems))
                assertThat(it.status, equalTo(OrderStatus.CREATED))
            }
            .verify()
    }

    <span style="color:#6a737d"><span style="color:#6a737d">/**
     * 创建订单
     */</span></span><span style="color:#6a737d"><span style="color:#6a737d">@Test</span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span><span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1">createOrder</span></span></span><span><span><span>()</span></span></span></span> {
        mockCreateOrder()
    }

    <span style="color:#6a737d"><span style="color:#6a737d">@Test</span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span><span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1">createOrderGivenEmptyItems</span></span></span><span><span><span>()</span></span></span></span> {
        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> customerId = GlobalIdGenerator.generateAsString()
        aggregateVerifier&lt;Order, OrderState&gt;()
            .inject(mockk&lt;CreateOrderSpec&gt;(), <span style="color:#032f62"><span style="color:#032f62">"createOrderSpec"</span></span>)
            .given()
            .`<span style="color:#d73a49"><span style="color:#d73a49">when</span></span>`(CreateOrder(customerId, listOf(), SHIPPING_ADDRESS, <span style="color:#005cc5"><span style="color:#005cc5">false</span></span>))
            .expectErrorType(IllegalArgumentException::<span><span style="color:#d73a49"><span><span style="color:#d73a49">class</span></span></span><span>.</span><span style="color:#6f42c1"><span><span style="color:#6f42c1">java</span></span></span><span>)</span></span>
            .expectStateAggregate {
                <span style="color:#6a737d"><span style="color:#6a737d">/*
                 * 该聚合对象处于未初始化状态，即该聚合未创建成功.
                 */</span></span>
                assertThat(it.initialized, equalTo(<span style="color:#005cc5"><span style="color:#005cc5">false</span></span>))
            }.verify()
    }

    <span style="color:#6a737d"><span style="color:#6a737d">/**
     * 创建订单-库存不足
     */</span></span><span style="color:#6a737d"><span style="color:#6a737d">@Test</span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span><span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1">createOrderWhenInventoryShortage</span></span></span><span><span><span>()</span></span></span></span> {
        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> customerId = GlobalIdGenerator.generateAsString()
        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> orderItem = OrderItem(
            GlobalIdGenerator.generateAsString(),
            GlobalIdGenerator.generateAsString(),
            BigDecimal.valueOf(<span><span>10</span></span>),
            <span><span>10</span></span>,
        )
        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> orderItems = listOf(orderItem)
        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> inventoryService = <span style="color:#d73a49"><span style="color:#d73a49">object</span></span> : InventoryService {
            <span style="color:#d73a49"><span style="color:#d73a49">override</span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span><span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1">getInventory</span></span></span><span><span><span>(productId: </span></span><span style="color:#d73a49"><span><span><span style="color:#d73a49">String</span></span></span></span><span><span>)</span></span></span></span>: Mono&lt;<span><span>Int</span></span>&gt; {
                <span style="color:#d73a49"><span style="color:#d73a49">return</span></span> orderItems.filter { it.productId == productId }
                    <span style="color:#6a737d"><span style="color:#6a737d">/*
                     * 模拟库存不足
                     */</span></span>
                    .map { it.quantity - <span><span>1</span></span> }.first().toMono()
            }
        }
        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> pricingService = <span style="color:#d73a49"><span style="color:#d73a49">object</span></span> : PricingService {
            <span style="color:#d73a49"><span style="color:#d73a49">override</span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span><span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1">getProductPrice</span></span></span><span><span><span>(productId: </span></span><span style="color:#d73a49"><span><span><span style="color:#d73a49">String</span></span></span></span><span><span>)</span></span></span></span>: Mono&lt;BigDecimal&gt; {
                <span style="color:#d73a49"><span style="color:#d73a49">return</span></span> orderItems.filter { it.productId == productId }.map { it.price }.first().toMono()
            }
        }

        aggregateVerifier&lt;Order, OrderState&gt;()
            .inject(DefaultCreateOrderSpec(inventoryService, pricingService))
            .given()
            .`<span style="color:#d73a49"><span style="color:#d73a49">when</span></span>`(CreateOrder(customerId, orderItems, SHIPPING_ADDRESS, <span style="color:#005cc5"><span style="color:#005cc5">false</span></span>))
            <span style="color:#6a737d"><span style="color:#6a737d">/*
             * 期望：库存不足异常.
             */</span></span>
            .expectErrorType(InventoryShortageException::<span><span style="color:#d73a49"><span><span style="color:#d73a49">class</span></span></span><span>.</span><span style="color:#6f42c1"><span><span style="color:#6f42c1">java</span></span></span><span>)</span></span>
            .expectStateAggregate {
                <span style="color:#6a737d"><span style="color:#6a737d">/*
                 * 该聚合对象处于未初始化状态，即该聚合未创建成功.
                 */</span></span>
                assertThat(it.initialized, equalTo(<span style="color:#005cc5"><span style="color:#005cc5">false</span></span>))
            }.verify()
    }

    <span style="color:#6a737d"><span style="color:#6a737d">/**
     * 创建订单-下单价格与当前价格不一致
     */</span></span><span style="color:#6a737d"><span style="color:#6a737d">@Test</span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span><span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1">createOrderWhenPriceInconsistency</span></span></span><span><span><span>()</span></span></span></span> {
        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> customerId = GlobalIdGenerator.generateAsString()
        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> orderItem = OrderItem(
            GlobalIdGenerator.generateAsString(),
            GlobalIdGenerator.generateAsString(),
            BigDecimal.valueOf(<span><span>10</span></span>),
            <span><span>10</span></span>,
        )
        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> orderItems = listOf(orderItem)
        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> inventoryService = <span style="color:#d73a49"><span style="color:#d73a49">object</span></span> : InventoryService {
            <span style="color:#d73a49"><span style="color:#d73a49">override</span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span><span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1">getInventory</span></span></span><span><span><span>(productId: </span></span><span style="color:#d73a49"><span><span><span style="color:#d73a49">String</span></span></span></span><span><span>)</span></span></span></span>: Mono&lt;<span><span>Int</span></span>&gt; {
                <span style="color:#d73a49"><span style="color:#d73a49">return</span></span> orderItems.filter { it.productId == productId }.map { it.quantity }.first().toMono()
            }
        }
        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> pricingService = <span style="color:#d73a49"><span style="color:#d73a49">object</span></span> : PricingService {
            <span style="color:#d73a49"><span style="color:#d73a49">override</span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span><span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1">getProductPrice</span></span></span><span><span><span>(productId: </span></span><span style="color:#d73a49"><span><span><span style="color:#d73a49">String</span></span></span></span><span><span>)</span></span></span></span>: Mono&lt;BigDecimal&gt; {
                <span style="color:#d73a49"><span style="color:#d73a49">return</span></span> orderItems.filter { it.productId == productId }
                    <span style="color:#6a737d"><span style="color:#6a737d">/*
                     * 模拟下单价格、商品定价不一致
                     */</span></span>
                    .map { it.price.plus(BigDecimal.valueOf(<span><span>1</span></span>)) }.first().toMono()
            }
        }
        aggregateVerifier&lt;Order, OrderState&gt;()
            .inject(DefaultCreateOrderSpec(inventoryService, pricingService))
            .given()
            .`<span style="color:#d73a49"><span style="color:#d73a49">when</span></span>`(CreateOrder(customerId, orderItems, SHIPPING_ADDRESS, <span style="color:#005cc5"><span style="color:#005cc5">false</span></span>))
            <span style="color:#6a737d"><span style="color:#6a737d">/*
             * 期望：价格不一致异常.
             */</span></span>
            .expectErrorType(PriceInconsistencyException::<span><span style="color:#d73a49"><span><span style="color:#d73a49">class</span></span></span><span>.</span><span style="color:#6f42c1"><span><span style="color:#6f42c1">java</span></span></span><span>).</span><span style="color:#6f42c1"><span><span style="color:#6f42c1">verify</span></span></span></span>()
    }
}</code></pre><h3>Saga Unit Test (<code>SagaVerifier</code>)</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/AhooWang/Wow/blob/main/example/example-domain/src/test/kotlin/me/ahoo/wow/example/domain/cart/CartSagaTest.kt">Saga Test</a></p><pre><code><span><span style="color:#d73a49"><span><span style="color:#d73a49">class</span></span></span><span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1">CartSagaTest</span></span></span><span></span></span>{

    <span style="color:#6a737d"><span style="color:#6a737d">@Test</span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49">fun</span></span></span><span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1">onOrderCreated</span></span></span><span><span><span>()</span></span></span></span> {
        <span style="color:#d73a49"><span style="color:#d73a49">val</span></span> orderItem = OrderItem(
            GlobalIdGenerator.generateAsString(),
            GlobalIdGenerator.generateAsString(),
            BigDecimal.valueOf(<span><span>10</span></span>),
            <span><span>10</span></span>,
        )
        sagaVerifier&lt;CartSaga&gt;()
            .`<span style="color:#d73a49"><span style="color:#d73a49">when</span></span>`(
                mockk&lt;OrderCreated&gt; {
                    every {
                        customerId
                    } returns <span style="color:#032f62"><span style="color:#032f62">"customerId"</span></span>
                    every {
                        items
                    } returns listOf(orderItem)
                    every {
                        fromCart
                    } returns <span style="color:#005cc5"><span style="color:#005cc5">true</span></span>
                },
            )
            .expectCommandBody&lt;RemoveCartItem&gt; {
                assertThat(it.id, equalTo(<span style="color:#032f62"><span style="color:#032f62">"customerId"</span></span>))
                assertThat(it.productIds, hasSize(<span><span>1</span></span>))
                assertThat(it.productIds.first(), equalTo(orderItem.productId))
            }
            .verify()
    }
}</code></pre><h2>设计</h2><h3>聚合建模</h3><table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:0px; border:none; box-sizing:border-box; color:#40485b; display:block; font-family:-apple-system,&quot;system-ui&quot;,&quot;Segoe UI&quot;,Helvetica,Arial,&quot;Apple Color Emoji&quot;,&quot;Segoe UI Emoji&quot;,&quot;Segoe UI Symbol&quot;,&quot;Liberation Sans&quot;,&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,&quot;Hiragino Sans GB&quot;,&quot;Wenquanyi Micro Hei&quot;,&quot;WenQuanYi Zen Hei&quot;,&quot;ST Heiti&quot;,SimHei,SimSun,&quot;WenQuanYi Zen Hei Sharp&quot;,sans-serif; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; line-height:inherit; margin:0px 0px 16px; max-width:100%; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; word-break:initial; word-spacing:0px"><tbody><tr><th><strong>Single Class</strong></th><th><strong>Inheritance Pattern</strong></th><th><strong>Aggregation Pattern</strong></th></tr></tbody><tbody><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px; text-align:center"><img alt="Single Class - Modeling" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Modeling-Single-Class-Pattern.svg" referrerpolicy="no-referrer"></td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px; text-align:center"><img alt="Inheritance Pattern- Modeling" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Modeling-Inheritance-Pattern.svg" referrerpolicy="no-referrer"></td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px; text-align:center"><img alt="Aggregation Pattern- Modeling" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Modeling-Aggregation-Pattern.svg" referrerpolicy="no-referrer"></td></tr></tbody></table><h3>加载聚合</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Load Aggregate" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Load-Aggregate.svg" referrerpolicy="no-referrer"></p><h3>聚合状态流</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Aggregate State Flow" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Aggregate-State-Flow.svg" referrerpolicy="no-referrer"></p><h3>发送命令</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Send Command" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Send-Command.svg" referrerpolicy="no-referrer"></p><h3>命令与事件流</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="Command And Event Flow" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Command-Event-Flow.svg" referrerpolicy="no-referrer"></p><h3>Saga - OrderProcessManager (Demo)</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"><img alt="OrderProcessManager" src="https://gitee.com/AhooWang/Wow/raw/main/document/design/assets/Saga-Order.svg" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 03 Nov 2023 01:24:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264719/wow-2-7-1-released</guid>
            <link>https://www.oschina.net/news/264719/wow-2-7-1-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Zino 0.14 发布：基于 Rust 语言的新一代组装式应用开发框架]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#222222; text-align:start"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fphotino%2Fzino" target="_blank">Zino 开发框架</a>已发布 0.14 版本！这两个月的改进，主要集中在以下方面：</p><ul><li>支持通过配置定义本地目录；</li><li>服务器端口注册路由支持分组；</li><li>静态页面支持多页模式；</li><li>Response 动态内容添加 ETag 进行缓存控制；</li><li>全面支持国密算法 SM3、SM4；</li><li>进一步完善和优化 ORM，为 DefaultController 添加更多方法；</li><li>新增 zino-extra 库，提供非核心的功能 feature；</li><li>新增 zino-dioxus 库，提供 Dioxus 组件封装；</li><li>新增 zino-cli 库，提供脚手架工具。</li></ul><p><img height="417" src="https://oscimg.oschina.net/oscnet/up-046df710ba7c1cef26ed75fd48df97bfd74.png" width="700" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 02 Nov 2023 15:33:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264702/zino-0-14-released</guid>
            <link>https://www.oschina.net/news/264702/zino-0-14-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Bee V2.1.10 支持 OceanBase 数据库的 ORM]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><strong>分久必合!&nbsp; ORM,分片,PC 版,安卓版,鸿蒙版, GraphQL,&nbsp; 不如只用一个 Bee!&nbsp; 入门只需要 10 分钟!</strong></p><p><strong>Hibernate? MyBatis? JPA? 试下 Bee, 简单易用又功能强大，面向对象，自定义 sql 都支持良好，还支持 Sharding 分库分表.</strong></p><p><strong><span style="color:#3498db">Hibernate/MyBatis+ plus +Sharding JDBC + Jpa+ Spring data+ GraphQL+ App ORM (Android, 鸿蒙)</span><span style="color:#9b59b6">=</span><span style="color:#2980b9"><span>&nbsp;</span></span><span style="color:#e67e22">Bee</span><br> 要整合一堆的工具，还不如只用一个小巧又功能强大的工具。犹如 JAVA 界的数据源连接池 Hikari， 文件虽小，功能却不赖！</strong></p><h3><strong>V2.1.10(2023.10.30)</strong></h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><strong>1.支持 SQL 取反运算 NOT("!")</strong><br><strong>2.支持 OceanBase 数据库</strong><br> 3.doBeforeReturn 使用 finally<br><strong>4.多数据源配置,dbs 支持多环境覆盖配置</strong><br> 5.fixed bug:有两个配置项 (notSupportUnionQuery,executorSize) 没有加前缀 sharding_</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">&nbsp;</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong><span style="background-color:#fafafb">自动生成 Spring Boot 后端微服务代码，几秒钟即可完成，秒杀 GPT.</span></strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/automvc/gencode">https://gitee.com/automvc/gencode</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>Bee</strong><span style="background-color:#ffffff; color:#333333">&nbsp;是一个简单，易用，功能强大，开发速度快，编码少的 JAVA ORM 框架。连接，事务都可以由 Bee 框架负责管理.<span>&nbsp;</span></span><strong>Bee 简化了与 DB 交互的编码工作量，是&nbsp;</strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbaike.baidu.com%2Fitem%2F%25E7%25BC%2596%25E7%25A0%2581%25E5%25A4%258D%25E6%259D%2582%25E5%25BA%25A6%2F23229411%3Ffr%3Daladdin" target="_blank">编码复杂度</a>&nbsp;为<span>&nbsp;</span><strong><span style="color:#c0392b">O(1)</span><span>&nbsp;</span></strong>的 Java 框架！(技术交流群:扣 992650213 )</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="background-color:#ffffff; color:#333333">Bee 简单易用：单表操作、多表关联操作，可以不用写 sql, 极少语句就可以完成 SQL 操作；</span><strong>概念简单</strong><span style="background-color:#ffffff; color:#333333"><span>&nbsp;</span>,10 分钟即可入门。</span><br><span style="background-color:#ffffff; color:#333333">Bee 功能强大：<strong>复杂查询也支持向对象方式，分页查询性能更高</strong>，一级缓存即可支持个性化优化；具有分布式特性。</span><strong><span style="background-color:#ffffff">高级要求，还可以方便自定义 SQL 语句</span></strong><span style="background-color:#ffffff">。</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>下期功能预告:</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">你还想添加什么功能，请到评论区告诉我们.</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">项目首页:</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/automvc/bee" target="_blank">https://gitee.com/automvc/bee</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fautomvc%2Fbee" target="_blank">https://github.com/automvc/bee</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/automvc/bee-springboot">https://gitee.com/automvc/bee-springboot</a></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 02 Nov 2023 13:12:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264688/bee-2-1-10-released</guid>
            <link>https://www.oschina.net/news/264688/bee-2-1-10-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[企业级开源分布式中间件 | DBLE 3.23.08.0 版本发布！]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>以下对 DBLE 3.23.08.0&nbsp;版本的 Release Notes 进行详细解读。</p><p>文章主要分为以下四部分内容：</p><p>一、DBLE 项目介绍</p><p>二、新版本主要更新解读</p><p><span>三、完整&nbsp;Release Notes</span></p><p style="margin-left:0; margin-right:0">四、LTS 版本更新</p><p style="margin-left:0; margin-right:0"><span><strong>一、DBLE 项目介绍</strong></span></p><p>DBLE 是企业级开源分布式中间件，江湖人送外号&nbsp;<span style="color:#108080"><strong>「MyCat Plus」</strong></span>；以其简单稳定，持续维护，良好的社区环境和广大的群众基础得到了社区的大力支持；</p><p style="margin-left:0; margin-right:0"><strong>破壳日：</strong>2017.10.24</p><p><strong>爱好：</strong>开源</p><p><strong>技能：</strong>数据水平拆分、读写分离、分布式事务支持、多分片算法、全局 ID、IP/SQL 黑白名单</p><p><strong>特长：</strong>MySQL 语法兼容、复杂查询优化、低改造成本、成熟稳定、成熟技术栈</p><ul><li><p style="margin-left:0; margin-right:0; text-align:left"><span>DBLE 官方项目：</span></p><p><span>https://github.com/actiontech/dble</span></p></li><li><p style="margin-left:0; margin-right:0"><span>DBLE 官方文档（已更新）：</span></p><p style="margin-left:0; margin-right:0"><span>https://actiontech.github.io/dble-docs-cn</span></p></li><li><p><span>新版本 DBLE 下载地址及 Release Notes：</span></p><p><span>https://github.com/actiontech/dble/releases</span></p></li></ul><p><span><strong>官方课程：</strong></span></p><ul><li><p>点击学习<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzU2NzgwMTg0MA%3D%3D%26mid%3D2247486230%26idx%3D2%26sn%3Dffb7a2f34640da3ac0df23f7827ffa18%26chksm%3Dfc96e989cbe1609fb0d7624685d40a8a0e9cc25a62c245de27d3f991fcbfdcbccd449955ae57%26scene%3D21%23wechat_redirect" target="_blank">《DBLE 快速上手》</a><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzU2NzgwMTg0MA%3D%3D%26mid%3D2247484004%26idx%3D3%26sn%3D034cc89b1880e6486c884031f8c77827%26chksm%3Dfc96e0fbcbe169ed0e0a71f63f8bd52fdb8a6c425e8df25f8147e711054d28ec1575e760512c%26scene%3D21%23wechat_redirect" target="_blank">《DBLE 公开课》</a>课程，近期<span>已同步至社区</span><span>视频号和</span><span>&nbsp;B</span><span>&nbsp;</span><span>站</span><span>，欢迎观看</span><span>！</span></p></li></ul><p style="margin-left:0; margin-right:0"><span style="color:#888888">Tips：建议下载最新的 Releases 版本，下载 tar 压缩包即可，如有源码编译需求的，可以下载源码包。</span></p><p style="margin-left:0; margin-right:0"><span><strong>二、</strong><strong>新版本主要功能更新解</strong><strong>读</strong></span></p><p><strong><span style="background-color:#ffffff"><strong><span>新版 DBLE 新增&amp;重构功能 5 个，修复社区重要缺陷 2+，其他 bug 100+，和旧版本的不兼容项调整 1 处。</span></strong></span></strong></p><p style="margin-left:0; margin-right:0; text-align:left"><span><strong>致谢</strong></span>：</p><ul><li><p style="margin-left:0; margin-right:0; text-align:left"><span style="color:#4a4a4a">感谢 Github 用户提供的优质&nbsp;Issue，</span><span style="color:#ff4c00"><strong>Star 突破 1024！</strong></span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span style="color:#4a4a4a">感谢 QQ 群（669663113）和微信群内朋友提供的有效反馈。</span></p></li></ul><p style="margin-left:0; margin-right:0; text-align:left"><strong>主要更新：</strong></p><h4><span style="color:#148484"><strong><span style="color:#148484">1、支持 OLAP/OLTP 混合负载</span></strong></span></h4><p style="margin-left:0; margin-right:0; text-align:left"><span>新增<span>&nbsp;</span></span><span>hybridTAUs</span><span>er 用</span><span>户，DBLE<span>&nbsp;</span></span><span>会将前端下发</span><span>的 SQL<span>&nbsp;</span></span><span>根据一</span><span>些规则将 TP 型的路由</span><span>到 MySQL<span>&nbsp;</span></span><span>上，而<span>&nbsp;</span></span><span>AP 型，的路由到<span>&nbsp;</span></span><span>ClickHou</span><span>se 上，</span><span>实</span><span>现 AP/TP<span>&nbsp;</span></span><span>负载自动识别</span><span>下发。</span></p><p style="margin-left:0; margin-right:0; text-align:left"><span><strong><span style="background-color:#ffffff"><strong><span>TP/AP 路由规则：</span></strong></span></strong>&nbsp;</span></p><ul><li><p style="margin-left:0; margin-right:0; text-align:left"><span>包含聚合函数的 SELECT 需要下发给 AP，具体指：min、sum、count、avg、max、STDDEV_POP、STDDEV_SAMP、VAR_POP、VAR_SAMP、group by。</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>事务：ClickHouse 不支持事务，所以针对事务的情况都需要发给 TP。</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>增删改：根据数据同步机制，ClickHouse 使用 binlog 同步 MySQL 数据，可以认为 ClickHouse 作为从，MySQL 作为主，这样的结构也就限制 DML 只能下发给 TP。</span></p></li></ul><p style="margin-left:0; margin-right:0; text-align:left"><span>详情请见文档对应章节。</span></p><h4><span style="color:#148484"><strong><span>2、支持自主检测内部定时线程是否疑似 hang 和部分线程的中断/恢复操作</span></strong></span></h4><p style="margin-left:0; margin-right:0; text-align:left"><span>当 DBLE 遇到某些业务的 hang 场景，期望能在不重启 DBLE 方式解决 hang 问题；可以通过 thread @@print 操作（存在与 jstack 一样的 stw 风险），来定位疑似问题内部线程；经过再三确认后，可以先尝试使用 thread @@kill name='?' 操作（内部采用 interrupt 提前退出任务的方式）中断当前线程，在一定部分场景下可以解决当前 hang 问题，然后根据情况决定是否需要对此线程进行 thread @@recover name=? 操作。</span></p><ul><li><p style="margin-left:0; margin-right:0; text-align:left"><span>DBLE 自主检测内部定时线程（Timer\TimerScheduler）疑似 hang，如果出现疑似 hang，会有对应的告警和 dble.log 会有相应的 hang 关键字</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:left"><span>支持部分线程的中断/恢复操作</span></p></li></ul><p><span>详情请见文档对应章节。</span></p><p style="margin-left:0; margin-right:0"><span><strong>三、完整 Release Notes</strong></span></p><p style="margin-left:0; margin-right:0; text-align:left"><span><strong>特性：</strong></span></p><ul><li><p><span style="color:#333333"><span style="color:#333333">[#3831] 支持 OLAP/OLTP 混合负载</span>。更多详细信息，请参见 doc</span><span style="color:#148484"><strong>[1]</strong></span></p></li><li><p><span style="color:#333333"><span style="color:#333333">[#3832] ManagerFrontWorker 独立管理端线程池</span>。更多详细信息，请参见 doc<span style="color:#148484"><span style="color:#148484">[2]</span></span></span></p></li><li><p><span style="color:#333333"><span style="color:#333333">[#3833] 支持监控部分定时线程以及部分线程的中断操作。<span style="color:#333333">更多详细信息，请参见 doc</span><span style="color:#148484"><span style="color:#148484">[3]</span></span></span></span></p></li><li><p><span style="color:#333333"><span style="color:#333333">[#3834] 优化并统一 DBLE 相关内部统计信息</span>。更多详细信息，请参见 doc<span style="color:#148484"><span style="color:#148484">[4]</span></span></span></p></li><li><p><span style="color:#333333">[#3838] 加强对捕获的线程「错误」异常的处理。</span></p></li></ul><p><span><strong>缺陷修复：</strong></span></p><ul><li><p><span>[#3835]&nbsp;DBLE 启动时，某些异步初始化任务需要很长时间</span></p></li><li><p><span>[#3836] 后端的 lower_case_table_name 不一致时，DBLE 部分操作不符合预期</span></p></li><li><p><span>修复一些 DDL 问题</span></p></li><li><p><span>修复重新加载时 ClickHouse 同步变量错误</span></p></li><li><p><span>ChildTable 支持 specifyCharset 属性配置</span></p></li></ul><p style="margin-left:0; margin-right:0"><strong><span>和旧版本的不兼容项：</span></strong></p><ul><li><p><span>[#3834] 优化并统一 DBLE 相关内部统计信息。更多详细信息，请参见 doc<span style="color:#148484"><span style="color:#148484">[4]</span></span></span></p><p>&nbsp;</p></li></ul><p style="margin-left:0; margin-right:0"><span><strong>四、<span>LTS 版本更新</span></strong></span></p><p>对于 LTS 的版本，有小版本发出，修复一些 bug：</p><h1><strong><span>3.22.11.1</span></strong></h1><p style="margin-left:0; margin-right:0; text-align:left"><span><span>我们发布了 3.22.11.1，</span><span>这</span><span>是个 bug&nbsp;</span><span>修</span><span>复版本</span>。</span></p><ul><li><p style="color:#010101; margin-left:0; margin-right:0; text-align:left"><span>改善从连接池中获取连接的逻辑</span></p></li><li><p style="color:#010101; margin-left:0; margin-right:0; text-align:left"><span>某些场景下执行大包语句出现 hang、Lost connection...</span></p></li><li><p style="color:#010101; margin-left:0; margin-right:0; text-align:left"><span>支持 UPDATE/DELETE&nbsp;多表针对分片表 JOIN&nbsp;全局表</span></p></li><li><p style="color:#010101; margin-left:0; margin-right:0; text-align:left"><span>后端连接初始化时出现半连接场景的处理</span></p></li><li><p style="color:#010101; margin-left:0; margin-right:0; text-align:left"><span>主从切换后，业务端开启事务并进行回滚时，可能存在部分数据没有被回滚的现象</span></p></li><li><p style="color:#010101; margin-left:0; margin-right:0; text-align:left"><span>连接池的扩缩容线程 connection-pool-evictor-thread 意外退出，慢日志过多阻塞，导致心跳失败、创建连接失败</span></p></li></ul><h1><strong><span>3.22.01.6</span></strong></h1><p style="margin-left:0; margin-right:0; text-align:left"><span><span>我们发布了&nbsp;</span><span>3.22.01.6，</span><span>这是</span><span>个&nbsp;</span><span>bug&nbsp;</span><span>修</span><span>复版本。</span></span></p><ul><li><p style="color:#010101; margin-left:0; margin-right:0; text-align:left"><span>主从切换后，业务端开启事务并进行回滚时，可能存在部分数据没有被回滚的现象</span></p></li><li><p style="color:#010101; margin-left:0; margin-right:0; text-align:left"><span>开启 SQL 统计，并发线程没有抢到锁陷入死循环引起 CPU 使用率过高</span></p></li><li><p style="color:#010101; margin-left:0; margin-right:0; text-align:left"><span>连接池的扩缩容线程 connection-pool-evictor-thread 意外退出</span></p></li><li><p style="color:#010101; margin-left:0; margin-right:0; text-align:left"><span>慢日志过多阻塞，导致心跳失败、创建连接失败</span></p></li><li><p style="color:#010101; margin-left:0; margin-right:0; text-align:left"><span>慢日志 bug 导致队列消费线程异常退出</span></p></li><li><p style="color:#010101; margin-left:0; margin-right:0; text-align:left"><span>多语句下发出现 lost connnection...</span></p></li><li><p style="color:#010101; margin-left:0; margin-right:0; text-align:left"><span>加强 sequence 配置改动场景优化</span></p></li></ul><h1><strong><span>3.21.10.15</span></strong></h1><p style="margin-left:0; margin-right:0; text-align:left"><span><span>我们发布了&nbsp;</span><span>3.21.10.14，</span><span>这是</span><span>个</span><span>&nbsp;bug&nbsp;</span><span>修</span><span>复版本。</span></span></p><ul><li><p style="color:#010101; margin-left:0; margin-right:0; text-align:left"><span>max 函数处理 datetime/timestamp/time 列时，精度丢弃了</span></p></li><li><p style="color:#010101; margin-left:0; margin-right:0; text-align:left"><span>修改 dble_rw_split_entry 中 white_ips 列为 null，不生效</span></p></li><li><p style="color:#010101; margin-left:0; margin-right:0; text-align:left"><span>加强 sequence 配置改动场景优化</span></p></li><li><p style="color:#010101; margin-left:0; margin-right:0; text-align:left"><span>一些 NPE 的处理</span></p></li></ul><p style="margin-left:0; margin-right:0"><span><strong>引用参考</strong></span></p><p><strong><span>[1]<span style="color:#148484"><span>&nbsp;</span>HTAP：</span></span></strong><span>https://actiontech.github.io/dble-docs-cn/history/develop/2.Function/2.39_HTAP.html</span></p><p><strong><span>[2]<span>&nbsp;</span><span style="color:#148484">参数详情：</span></span></strong><span>https://actiontech.github.io/dble-docs-cn/history/develop/1.config_file/1.02_bootstrap.cnf.html</span></p><p><span><strong><span>[3]</span><span>&nbsp;</span><span style="color:#148484">线程处理：</span></strong><span>https://actiontech.github.io/dble-docs-cn/history/develop/2.Function/2.40_thread_cmd.html</span></span></p><p><strong><span>[4]&nbsp;<span style="color:#148484">变更内容：</span></span></strong><span>https://actiontech.github.io/dble-docs-cn/history/develop/1.config_file/1.10_version_change.html#config-title-3.23.08.0</span></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 02 Nov 2023 08:25:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264638/dble-3-23-08-0</guid>
            <link>https://www.oschina.net/news/264638/dble-3-23-08-0</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[SQLite 3.44.0 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">SQLite 是一个 C 语言库，实现了一个小型、快速、独立、高可靠性、全功能的 SQL 数据库引擎。SQLite 是世界上使用最多的数据库引擎。SQLite 的源代码属于公共领域，每个人都可以免费使用，用于任何目的。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">SQLite 3.44.0 现已发布，更新内容如下：</p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsqlite.org%2Flang_aggfunc.html" target="_blank">聚合函数</a>现在可以在其最后一个参数后包含 ORDER BY 子句。函数的参数按照指定的顺序进行处理。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsqlite.org%2Flang_aggfunc.html%23group_concat" target="_blank">这对于 string_agg()</a>&nbsp;和&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsqlite.org%2Fjson1.html%23jgrouparray" target="_blank">json_group_array()</a>&nbsp;等函数非常重要&nbsp;。</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsqlite.org%2Flang_corefunc.html%23concat" target="_blank">添加对 concat()</a>&nbsp;和&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsqlite.org%2Flang_corefunc.html%23concat_ws" target="_blank">concat_ws()</a>&nbsp;标量 SQL 函数的支持，与 PostgreSQL、SQLServer 和 MySQL 兼容。</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsqlite.org%2Flang_aggfunc.html%23group_concat" target="_blank">添加对 string_agg()</a>&nbsp;聚合 SQL 函数的支持，兼容 PostgreSQL 和 SQLServer。</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsqlite.org%2Flang_datefunc.html%23strftm" target="_blank">strftime() SQL 函数</a>上的新转换字母：%e %F %I %k %l %p %P %R %T %u</li><li>添加新的 C 语言 API：&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsqlite.org%2Fc3ref%2Fget_clientdata.html" target="_blank">sqlite3_get_clientdata()</a>&nbsp;和&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsqlite.org%2Fc3ref%2Fget_clientdata.html" target="_blank">sqlite3_set_clientdata()</a>。</li><li>现在，当运行 CREATE TABLE 语句本身时，会引发许多与 CREATE TABLE 相关的错误，而不是推迟到第一次实际使用表时。</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsqlite.org%2Fpragma.html%23pragma_integrity_check" target="_blank">PRAGMA integrity_check</a>&nbsp;命令现在使用新的&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsqlite.org%2Fvtab.html%23xintegrity" target="_blank">xIntegrity 方法</a>验证各种内置<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsqlite.org%2Fvtab.html" target="_blank">虚拟表</a>中内容的一致性。这适用于&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsqlite.org%2Ffts3.html" target="_blank">FTS3</a>、<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsqlite.org%2Ffts3.html%23fts4" target="_blank">FTS4</a>、<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsqlite.org%2Ffts5.html" target="_blank">FTS5</a>、<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsqlite.org%2Frtree.html" target="_blank">RTREE</a>&nbsp;和&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsqlite.org%2Fgeopoly.html" target="_blank">GEOPOLY</a>&nbsp;扩展。</li><li>SQLITE_DBCONFIG_DEFENSIVE 设置现在可防止<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsqlite.org%2Fc3ref%2Fc_dbconfig_defensive.html%23sqlitedbconfigdefensive" target="_blank">打开</a>&nbsp;PRAGMA&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsqlite.org%2Fpragma.html%23pragma_writable_schema" target="_blank">writable_schema 。</a>以前可以打开 writable_schema，但实际上不允许模式可写。现在则根本无法开启。</li><li>将内置&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsqlite.org%2Ffts3.html" target="_blank">FTS3</a>、<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsqlite.org%2Ffts3.html%23fts4" target="_blank">FTS4</a>、<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsqlite.org%2Ffts5.html" target="_blank">FTS5</a>、<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsqlite.org%2Frtree.html" target="_blank">RTREE</a>&nbsp;和&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsqlite.org%2Fgeopoly.html" target="_blank">GEOPOLY</a>&nbsp;虚拟表标记为&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsqlite.org%2Fc3ref%2Fc_vtab_constraint_support.html%23sqlitevtabinnocuous" target="_blank">SQLITE_VTAB_INNOCUOUS</a>，以便它们可以在高安全性部署中的触发器内部使用。</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsqlite.org%2Fpragma.html%23pragma_case_sensitive_like" target="_blank">PRAGMA case_sensitive_like</a>&nbsp;语句已弃用，因为当模式包含 LIKE 运算符时使用它可能会导致 PRAGMAintegrity_check 报告数据库<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsqlite.org%2Fpragma.html%23pragma_integrity_check" target="_blank">损坏</a>。</li><li>现在，只要使用 Microsoft C 编译器构建 SQLite，就会默认启用&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsqlite.org%2Fcompile.html%23use_seh" target="_blank">SQLITE_USE_SEH （结构化异常处理）。</a>可以使用 -DSQLITE_USE_SEH=0 禁用它</li><li>Query planner 优化： 
  <ul><li>在部分索引扫描中，如果 WHERE 子句暗示表列的常量值，则用该常量替换该表列的出现。这增加了部分索引作为覆盖索引的可能性。</li><li>禁用视图扫描优化（在<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsqlite.org%2Fchanges.html%23version_3_42_0" target="_blank">版本 3.42.0</a>&nbsp;中添加- item 1c），因为它会导致多个性能下降。取而代之的是，将 DISTINCT 子查询的估计行数减少 8 倍。</li></ul></li><li>SQLite 现在执行运行时检测，检测底层硬件是否支持精度大于「double」的「long double」，并根据检测结果使用适当的浮点例程。</li><li>Windows CLI 现在默认在支持 UTF-8 的平台上使用 UTF-8 进行输入和输出<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsqlite.org%2Fcli.html" target="_blank">。</a>--no-utf8 选项可用于禁用 UTF8 支持。</li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="background-color:#ffffff; color:#333333">更多详情可查看：</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsqlite.org%2Fchanges.html" target="_blank">https://sqlite.org/changes.html</a></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 02 Nov 2023 06:25:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264604/sqlite-3-44-0-released</guid>
            <link>https://www.oschina.net/news/264604/sqlite-3-44-0-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[功能强大的开源数据中台系统 DataCap 1.16.0 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div><blockquote><p style="margin-left:0; margin-right:0">推荐一套基于 SpringBoot 开发的简单、易用的开源权限管理平台，建议下载使用:<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdevlive-community%2Fauthx" target="_blank">https://github.com/devlive-community/authx</a></p></blockquote><blockquote><p style="margin-left:0; margin-right:0">推荐一套为 Java 开发人员提供方便易用的 SDK 来与 OpenAI 的 API 进行交互组件：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdevlive-community%2Fopenai-java-sdk" target="_blank">https://github.com/devlive-community/openai-java-sdk</a></p></blockquote></div><p style="color:rgba(0, 0, 0, 0.87); text-align:start"><strong>DataCap 发布!</strong></p><div><div><table border="1" style="background-color:var(--md-default-bg-color); border-collapse:initial; border-radius:0.1rem; border-spacing:0px; border:.05rem solid var(--md-typeset-table-color); box-sizing:inherit; display:inline-block; font-size:0.64rem; margin:0px; max-width:100%; overflow:auto; touch-action:auto; width:205.688px"><tbody><tr><th style="text-align:center; vertical-align:top">发布版本</th><th style="text-align:center; vertical-align:top">发布时间</th></tr></tbody><tbody><tr><td style="border-top:.05rem solid var(--md-typeset-table-color); text-align:center; vertical-align:top"><code>1.16.0</code></td><td style="border-top:.05rem solid var(--md-typeset-table-color); text-align:center; vertical-align:top"><code>2023-11-01</code></td></tr></tbody></table></div></div><h4>General<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fdatacap.devlive.org%2Fzh%2Frelease%2Flatest.html%23general" target="_blank">¶</a></h4><hr><ul><li>支持列顺序 <p><img alt="" height="732" src="https://datacap.edurt.io/release/latest/column_order.gif" width="1439" referrerpolicy="no-referrer"></p></li><li>支持删除行</li><li>支持删除多行<br><span>&nbsp;</span><img alt="Delete Rows" src="https://datacap.edurt.io/release/latest/delete_rows.gif" referrerpolicy="no-referrer"></li><li>支持无主键数据更新<br><span>&nbsp;</span><img alt="Update Columns" src="https://datacap.edurt.io/release/latest/update_columns.gif" referrerpolicy="no-referrer"></li><li>支持根据主键更新<br><span>&nbsp;</span><img alt="Update Without Primary Key" src="https://datacap.edurt.io/release/latest/update_without_primary_key.gif" referrerpolicy="no-referrer"></li><li>支持预览待处理的更改</li></ul><h4>Editor<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fdatacap.devlive.org%2Fzh%2Frelease%2Flatest.html%23editor" target="_blank">¶</a></h4><hr><ul><li>支持选择查询<span>&nbsp;</span><br><img alt="Selection Query" src="https://datacap.edurt.io/release/latest/selection_query.gif" referrerpolicy="no-referrer"></li><li>支持自定义配置<br><span>&nbsp;</span><img alt="Custom Configure" src="https://datacap.edurt.io/release/latest/custom_editor_configure.gif" referrerpolicy="no-referrer"></li></ul><h4>Docs<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fdatacap.devlive.org%2Fzh%2Frelease%2Flatest.html%23docs" target="_blank">¶</a></h4><hr><ul><li>添加用户配置文件文档</li></ul><h4>Dependencies<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fdatacap.devlive.org%2Fzh%2Frelease%2Flatest.html%23dependencies" target="_blank">¶</a></h4><hr><ul><li>更新 org.apache.maven.plugins:maven-javadoc-plugin<span>&nbsp;</span><code>3.5.0</code><span>&nbsp;</span>到<span>&nbsp;</span><code>3.6.0</code></li><li>更新 com.oceanbase:oceanbase-client<span>&nbsp;</span><code>2.4.2</code><span>&nbsp;</span>到<span>&nbsp;</span><code>2.4.5</code></li><li>更新 org.apache.maven.plugins:maven-javadoc-plugin<span>&nbsp;</span><code>3.5.0</code><span>&nbsp;</span>到<span>&nbsp;</span><code>3.6.0</code></li></ul><h4>下载地址</h4><hr><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdatacap.edurt.io%2Fdownload.html" target="_blank">https://datacap.edurt.io/download.html</a></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 02 Nov 2023 05:21:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264589/datacap-1-16-0-released</guid>
            <link>https://www.oschina.net/news/264589/datacap-1-16-0-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[netty 网络游戏服务器框架 ioGame 17.1.58 模拟客户端请求新 api]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div><p style="margin-left:0; margin-right:0; text-align:left"><span>ioGame 适用于</span><strong><span style="color:#df2a3f">网络游戏服务器、物联网、内部系统</span></strong><span>及各种需要长连接的场景；</span></p></div><h2>主要更新</h2><div><p style="margin-left:0; margin-right:0"><span>优化 FlowContext createRequestMessage</span></p><p style="margin-left:0; margin-right:0"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgame-town%2FioGame%2Fissues%2F194" target="_blank"><span>#194 </span></a></p><p style="margin-left:0; margin-right:0"><span>可能在 springboot 集成 light-domain-event 时，启动报 java.lang.ClassNotFoundException</span></p><p style="margin-left:0; margin-right:0"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgame-town%2FioGame%2Fissues%2F198" target="_blank"><span>#198 </span></a></p><div><p style="margin-left:0; margin-right:0"><span>关于改造现有或老客户端项目到 ioGame 遇到的问题</span></p></div><p style="margin-left:0; margin-right:0"><span>HeadMetadata 增加 customData 属性；用于自定义数据，专为开发者预留的一个字段，开发者可以利用该字段来传递自定义数据。该字段由开发者自己定义，框架不会对数据做任何处理，也不会做任何检查，开发者可以利用该字段来传递任何数据，包括自定义对象。</span></p><hr><p style="margin-left:0; margin-right:0"><strong><span>模拟客户端</span></strong></p><p style="margin-left:0; margin-right:0"><span>因发展需要，模拟客户端使用新 api ，与 </span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fru82oa0zeb6orlce" target="_blank"><span>SDK 风格</span></a><span>做统一。从 17.1.58 版本开始，推荐开发者使用新版本的 api。已经将老的 api 做了过期标记，将在 ioGame21 版本中完全移除这些过期的 api。整体变化不大，内容如下</span></p><p style="margin-left:0; margin-right:0"><strong><span>请求 api</span></strong></p><p style="margin-left:0; margin-right:0"><span>变更说明</span></p><div><blockquote><p style="margin-left:0; margin-right:0"><span>新版本反序列化消息放在 result 时解析。</span></p><p style="margin-left:0; margin-right:0"><span>setDescription 使用 setTitle 代替。</span></p><p style="margin-left:0; margin-right:0"><span>setInputRequestData 使用 setRequestData 代替。</span></p><p style="margin-left:0; margin-right:0"><span>对于 List 类型的使用更友好</span></p></blockquote></div><pre><code class="language-java">########## 请求 - 旧版本 ##########
// 创建一个模拟命令 - 【125-3】读取某个玩家的私有消息
ofCommandUserId(ChatCmd.readPrivateMessage).callback(ByteValueList.class, result -&gt; {
    List&lt;ChatMessage&gt; list = result.toList(ChatMessage.class);
    if (CollKit.isEmpty(list)) {
        return;
    }

    log.info("玩家【{}】读取私聊消息数量 : {}", userId, list.size());
    System.out.println("------------------------------");
    list.stream().map(ClientChatKit::toString).forEach(System.out::println);
    System.out.println("------------------------------");

}).setDescription("读取某个玩家的私有消息");

########## 请求 - 新版本 ##########
// 创建一个模拟命令 - 【125-3】读取某个玩家的私有消息
ofCommandUserId(ChatCmd.readPrivateMessage).setTitle("读取某个玩家的私有消息").callback(result -&gt; {
    List&lt;ChatMessage&gt; list = result.listValue(ChatMessage.class);
    if (CollKit.isEmpty(list)) {
        return;
    }
    
    log.info("玩家【{}】读取私聊消息数量 : {}", userId, list.size());
    System.out.println("------------------------------");
    list.stream().map(ClientChatKit::toString).forEach(System.out::println);
    System.out.println("------------------------------");
});</code></pre><pre><code class="language-java">########## 请求 - 旧版本 ##########
HelloReq helloReq = new HelloReq();
helloReq.name = "abc12";

ofCommand(DemoCmd.here).callback(HelloReq.class, result -&gt; {
    HelloReq value = result.getValue();
    log.info("value : {}", value);
}).setDescription("here").setRequestData(helloReq);


########## 请求 - 新版本 ##########
ofCommand(DemoCmd.here).setTitle("here").setRequestData(() -&gt; {
    HelloReq helloReq = new HelloReq();
    helloReq.name = "abc12";
    return helloReq;
}).callback(result -&gt; {
    HelloReq value = result.getValue(HelloReq.class);
    log.info("value : {}", value);
});</code></pre><p style="margin-left:0; margin-right:0"><strong><span>广播 api</span></strong></p><p style="margin-left:0; margin-right:0"><span>变更说明</span></p><div><p style="margin-left:0; margin-right:0"><span>listenBroadcast 使用 ofListen 代替。</span></p><p style="margin-left:0; margin-right:0"><span>新版本反序列化消息放在 result.getValue 时解析。</span></p></div><pre><code class="language-java">########## 广播 - 旧版本 ##########
// 广播监听回调 - 监听【125-11】玩家私聊消息通知
listenBroadcast(ChatNotifyMessage.class, result -&gt; {
    ChatNotifyMessage chatNotifyMessage = result.getValue();
    // 聊天消息发送方的 userId
    long senderId = chatNotifyMessage.senderId;
    log.info("玩家[{}]给我的私聊通知", senderId);
}, ChatCmd.notifyPrivate, "玩家私聊消息通知");

########## 广播 - 新版本 ##########
// 广播监听回调 - 监听【125-11】玩家私聊消息通知
ofListen(result -&gt; {
    ChatNotifyMessage chatNotifyMessage = result.getValue(ChatNotifyMessage.class);
    // 聊天消息发送方的 userId
    long senderId = chatNotifyMessage.senderId;
    log.info("玩家[{}]给我的私聊通知", senderId);
}, ChatCmd.notifyPrivate, "玩家私聊消息通知");</code></pre><p style="margin-left:0; margin-right:0"><strong><span>其他更新</span></strong></p><p style="margin-left:0; margin-right:0"><span>&lt;netty.version&gt;4.1.100.Final&lt;/netty.version&gt;</span><br><span>&lt;lombok.version&gt;1.18.30&lt;/lombok.version&gt;</span></p></div><p style="color:#333333; margin-left:20px; margin-right:0; text-align:start"><span><strong><span>学习推荐</span></strong></span></p><p style="color:#333333; margin-left:20px; margin-right:0; text-align:start"><span>基于 ioGame 实践产品推荐，Netty 大型多人在线回合制网络游戏，基于 ioGame 开发，</span><span><a href="https://gitee.com/iohao/ioGameMMO"><span>ioGameMMO</span></a></span></p><p style="color:#333333; margin-left:20px; margin-right:0; text-align:start"><span>基于 ioGame，</span><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fwe9eppym4yno9hq2" target="_blank"><span>28 行代码做个网页聊天室</span></a></span></p><div><p style="margin-left:0; margin-right:0"><strong><span>ioGame 使用趋势数据统计</span></strong></p><p style="margin-left:0; margin-right:0"><span>关注 ioGame 的游戏服务器开发者持续增多，</span><strong><span style="color:#df2a3f">2022-09 ~ 2023-08</span></strong><span><span>&nbsp;</span>月统计数据；</span></p><p style="margin-left:0; margin-right:0"><span>这里的统计信息是关于开发者关注 ioGame 框架相关的，从统计数据中可以看出，由于 ioGame 上手简单，功能强大等优点，得到了众多开发者的关注。如果你想知道 ioGame 有没有人在使用，可以先到这里看下统计数据、开发者的评价与讨论。</span></p><p style="margin-left:0; margin-right:0"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fgpxk93%23TwVa8" target="_blank"><span>https://www.yuque.com/iohao/game/gpxk93#TwVa8</span></a></p><p style="margin-left:0; margin-right:0"><span>这里展示了每月的统计数据，统计数据来源于语雀后台，这些数据都是</span><strong><span style="color:#df2a3f">真实的、客观存在的、活的</span></strong><span>。</span></p><blockquote><p style="margin-left:0; margin-right:0"><span>因为成本的原因，某宝某多还没有出现能提供这种服务的商家，所以这样的统计数据也更具真实性。</span></p></blockquote><p style="margin-left:0; margin-right:0"><span>通过统计数据，我们可以看到每天会有很多开发者在访问 ioGame 的在线文档，并且这些统计数据不是来源于口嗨的，也不是主观创造的。</span></p><p style="margin-left:0; margin-right:0"><span>所以，还在犹豫要不要使用 ioGame 的开发者们，更应该讨论的是 「为什么这些开发者会选择使用 ioGame」，而不是 ioGame 有没有人在使用的问题。</span></p><p style="margin-left:0; margin-right:0"><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao" target="_blank"><span>点击我，到语雀后台查看 ioGame 的数据</span></a></span></p></div><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://foruda.gitee.com/images/1692275688252532586/126141a7_5475.png" referrerpolicy="no-referrer"></p><div><h2><span>maven pom</span></h2><div><p style="margin-left:0; margin-right:0"><span>ioGame 已经上传到中央仓库，如果无法下载最新的框架源码，建议开发者的 maven 仓库代理使用原生的或腾讯云的代理，目前不推荐阿里云的代理。</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fswt3ls%23Amq4K" target="_blank"><span>腾讯云代理设置可参考这里</span></a><span>。</span></p><p style="margin-left:0; margin-right:0"><span>ioGame 最新版本查看<span>&nbsp;</span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fab15oe" target="_blank"><span>https://www.yuque.com/iohao/game/ab15oe</span></a></p><p style="margin-left:0; margin-right:0"><span>ioGame 是轻量级的网络游戏服务器框架，ioGame 没有中间件的强依赖，即无需安装任何其他的中间件产品；此时，你只需一个依赖即可获得整个框架，并同时支持开头介绍的全部功能特性。</span></p><pre><code class="language-xml"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333">&lt;</span></span></span></span></span></span></span></span><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a">dependency</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333">&gt;</span></span></span></span></span></span></span></span></span><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333">&lt;</span></span></span></span></span></span></span></span><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a">groupId</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333">&gt;</span></span></span></span></span></span></span></span></span>com.iohao.game<span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333">&lt;/</span></span></span></span></span></span></span></span><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a">groupId</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333">&gt;</span></span></span></span></span></span></span></span></span><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333">&lt;</span></span></span></span></span></span></span></span><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a">artifactId</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333">&gt;</span></span></span></span></span></span></span></span></span>run-one-netty<span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333">&lt;/</span></span></span></span></span></span></span></span><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a">artifactId</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333">&gt;</span></span></span></span></span></span></span></span></span><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333">&lt;</span></span></span></span></span></span></span></span><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a">version</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333">&gt;</span></span></span></span></span></span></span></span></span>${ioGame.version}<span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333">&lt;/</span></span></span></span></span></span></span></span><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a">version</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333">&gt;</span></span></span></span></span></span></span></span></span><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333">&lt;/</span></span></span></span></span></span></span></span><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a"><span style="color:#333333"><span style="color:#22863a">dependency</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333"><span style="color:#333333">&gt;</span></span></span></span></span></span></span></span></span></code></pre></div></div><hr><h2>框架整体预览导图</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://foruda.gitee.com/images/1683534421248294819/72c4dfdb_5475.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">&nbsp;</p><hr><h2><span>ioGame&nbsp;网络游戏服务器框架简介</span></h2><ul><li>无锁异步化、事件驱动的架构设计；轻量级，无需依赖任何第三方中间件或数据库就能支持集群、分布式</li><li>通过 ioGame 可以很容易的搭建出一个集群无中心节点、集群自动化、多进程的分步式游戏服务器</li><li>包体小、启动快、内存占用少、更加的节约、无需配置文件、提供了优雅的路由访问权限控制</li><li>让开发者使用一套业务代码，无需改动，支持多种连接方式：WebSocket、TCP、UDP</li><li>让开发者用一套业务代码，能轻松切换和扩展不同的通信协议：Protobuf、JSON</li><li>近原生的性能；业务框架在单线程中平均每秒可以执行 1152 万次业务逻辑</li><li>代码即联调文档、JSR380 验证、断言 + 异常机制 = 更少的维护成本</li><li>框架具备智能的同进程亲和性；开发中，业务代码可定位与跳转</li><li>架构部署灵活性与多样性：既可相互独立，又可相互融合</li><li>可同时与同类型的多个游戏逻辑服通信并得到数据</li><li>逻辑服之间可相互跨进程、跨机器进行通信</li><li>支持玩家对游戏逻辑服进行动态绑定</li><li>能与任何其他框架做融合共存</li><li>对 webMVC 开发者友好</li><li>无 spring 强依赖</li><li>零学习成本</li></ul><div><div><p style="margin-left:0; margin-right:0; text-align:left"><span>你是否想要开发一个</span><span style="color:#e74c3c"><strong>高性能、稳定、易用、自带负载均衡、避免类爆炸设计、可跨进程跨机器通信、集群无中心节点、集群自动化、有状态多进程的分步式的</strong></span><span>网络游戏服务器呢？如果是的话，这里向你推荐一个由 java 语言编写的网络游戏服务器框架 ioGame。下面将会从多个方面来对框架做一些简单的介绍。</span></p></div><blockquote><p style="margin-left:0; margin-right:0; text-align:left"><span>ioGame 是一个 java 网络游戏服务器框架，有以下特点：</span></p><div><div><ul><li><span>无锁异步化、事件驱动的架构设计</span></li><li><span>支持 websocket 和 socket 两种通信协议</span></li><li><span>支持 protobuf、json 等不同的通信协议</span></li><li><span>集群无中心节点、集群自动化、分布式的设计</span></li><li>真轻量级，不依赖任何第三方中间件或数据库就能支持集群、分布式</li><li><span>提供多种通讯方式，且逻辑服之间可以相互跨机器通信</span></li><li><span>与 spring 和其他框架融合方便</span></li><li><span>学习成本低，开发体验好</span></li><li><span>支持多服单进程、多服多进程的启动和部署方式</span></li><li><span>提供游戏文档生成的辅助功能</span></li><li><span>包体小、启动快、内存占用少</span></li><li><span>提供优雅的路由访问权限控</span></li><li><span>提供了灵活的线程扩展与设置</span></li><li><span>智能的同进程亲和性</span></li></ul></div></div></blockquote><div><div><p style="margin-left:0; margin-right:0"><span>ioGame 是一个专为网络游戏服务器设计的</span><span style="color:#262626">轻量级</span><span>框架，它可以帮助你快速地搭建和运行自己的游戏服务器。它适用于各种类型和规模的网络游戏，无论是 H5、手游还是 PC 游戏，无论是简单的聊天室，还是复杂的</span><strong><span style="color:#262626">全球同服</span></strong><span style="color:#262626">、回合制游戏、策略游戏、放置休闲游戏、即时战斗、</span><span>MMORPG 等，ioGame 都可以满足你的需求。</span></p><div><p style="margin-left:0; margin-right:0"><span style="color:#262626">ioGame 在打包、内存占用、启动速度等方面也是优秀的。打 jar 包后大约<span>&nbsp;</span></span><strong><span style="color:#262626">15MB</span></strong><span style="color:#262626">，应用通常会在<span>&nbsp;</span></span><strong><span style="color:#262626">0.x 秒</span></strong><span style="color:#262626">内完成启动，内存占用小。详细请看<span>&nbsp;</span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fzm6qg2%23LF8Qh" target="_blank"><span>快速从零编写服务器完整示例</span></a><span style="color:#262626">。</span></p><p style="margin-left:0; margin-right:0"><span>在生态融合方面，ioGame 可以很方便的与 spring 集成（5 行代码）；除了 spring 外，还能与任何其他的框架做</span><strong><span>融合</span></strong><span>，如：</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsolon.noear.org%2F" target="_blank"><span>solon</span></a><span><span>&nbsp;</span>... 等，从而使用其他框架的相关生态。</span></p><p style="margin-left:0; margin-right:0"><span>在轻量级方面，ioGame<span>&nbsp;</span></span><strong><span style="color:#df2a3f">不依赖任何第三方</span></strong><span>中间件或数据库</span><strong><span style="color:#df2a3f">就能支持集群、分布式</span></strong><span>，只需要 java 环境就可以运行。这意味着在使用上简单了，在部署上也为企业减少了部署成本、维护难度。使用 ioGame 时，只需一个依赖即可获得整个框架，而无需在安装其他服务，如： Nginx、Redis、MQ、Mysql、ZooKeeper、Protobuf 协议编译工具 ... ... 等。</span></p><p style="margin-left:0; margin-right:0"><span>在通讯方式方面，大部分框架只能支持推送（广播）这一类型的通讯方式；而 ioGame 则提供了 5 种类型的通讯方式，分别是单次请求处理、推送、单个逻辑服间的相互通讯、与同类型多个逻辑服相互通讯、</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fzgaldoxz6zgg0tgn" target="_blank"><span>脉冲通讯</span></a><span>。通过对各种通讯方式的组合使用，可以简单完成以往难以完成的工作，并且这些通讯方式都支持跨进程、跨机器通信。</span></p><p style="margin-left:0; margin-right:0"><span>在连接方式方面，ioGame 允许开发者</span><strong><span>使用一套业务代码</span></strong><span>，同时支持多种连接方式，无需进行任何修改。ioGame 已经支持了 TCP、WebSocket 和 UDP 连接方式，并且也支持在这几种连接方式之间进行灵活切换。连接方式是可扩展的，并且扩展操作也很简单，这意味着之后如果支持了 KCP，无论你当前项目使用的是 TCP、WebSocket 还是 UDP，都可以切换成 KCP；注意了，即使切换到 KCP 的连接方式，现有的业务代码也无需改变。</span></p><p style="margin-left:0; margin-right:0"><span>在通信协议方面，ioGame 让开发者</span><strong><span>用一套业务代码</span></strong><span>，就能轻松</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fuq2zrltrc7to27bt" target="_blank"><span>切换和扩展不同的通信协议</span></a><span>，如 Protobuf、JSON 等。只需一行代码，就可以从 Protobuf 切换到 JSON，无需改变业务方法。</span></p><p style="margin-left:0; margin-right:0"><span>在集群方面，ioGame 的 Broker （游戏网关）采用无中心节点、自动化的集群设计，所有节点平等且自治，不存在单点故障。集群能够</span><strong><span>自动管理和弹性扩缩</span></strong><span>，节点加入或退出时，能够自动保证负载均衡和数据一致性，不影响服务可用性。</span></p><p style="margin-left:0; margin-right:0"><span>在分布式方面，ioGame 的逻辑服使用了分布式设计思想，将服务器分为游戏对外服、游戏逻辑服等不同层次，并且每一层都有明确的职责和接口。这样可以提高代码可读性和可维护性，并且方便进行</span><strong><span>水平扩展</span></strong><span>。</span></p><p style="margin-left:0; margin-right:0"><span>在学习成本方面，ioGame 的学习成本非常低，可以说是</span><strong><span>零学习成本</span></strong><span>，即使没有游戏编程经验，也能轻松上手。开发者只需掌握普通的 java 方法或 webMVC 相关知识，就能用框架开发业务。框架不要求开发者改变编码习惯，而是自身适应开发者的需求。</span></p><p style="margin-left:0; margin-right:0"><span>在</span><span>同进程亲和性</span><span>方面，在同一进程内，不同 Netty 实例之间的通信，是通过内存进行传输的，不需要经过网络传输，数据传输速度极快。同进程亲和性指的是，优先访问同进程内的游戏逻辑服，当同进程内没有能处理请求的游戏逻辑服时，才会去其他进程或机器中查找能处理请求的游戏逻辑服；简单点说，框架对于请求的处理很智能，会优先将请求给同进程内的逻辑服消费。</span></p><p style="margin-left:0; margin-right:0"><span>在开发体验方面，ioGame 非常注重开发者的开发体验；框架提供了 JSR380 验证、断言 + 异常机制、</span><strong><span>业务代码定位</span></strong><span>... ... 等诸多丰富的功能，使得开发者的业务代码更加的清晰、简洁；</span></p><p style="margin-left:0; margin-right:0"><span>在业务的并发方面，框架为开发者解决了单个玩家的并发问题，也提供了解决同一房间或业务内多个玩家并发问题的解决方法；框架在线程的扩展性上提供了友好的支持，并不是只能提供呆板的线程数量设置；详细请看<span>&nbsp;</span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Feixd6x" target="_blank"><span>ioGame 线程相关</span></a><span>。</span></p><p style="margin-left:0; margin-right:0"><span>在分布式开发体验方面，通常在开发分布式应用时是需要启动多个进程的。这会让调试与排查问题变得非常困难，从而降低开发者的效率、增加工作量等，这也是很多框架都</span><strong><span>解决不了的问题</span></strong><span>，但 ioGame 做到了！ioGame 支持多服单进程的启动方式，这使得开发者在开发和调试分步式系统时更加简单。</span></p><p style="margin-left:0; margin-right:0"><span>与前端对接联调方面，ioGame 提供了</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Firth38" target="_blank"><span>游戏文档生成</span></a><span>的辅助功能，可以做到</span><strong><span>代码即对接文档</span></strong><span>。简单地说，当业务代码编写完后，框架会自动生成最新的文档。如果没有游戏文档的生成，那么你将要抽出一些时间来编写、维护对接文档的工作，而且当团队人数多了之后，文档就会很乱、不同步、不是最新的、忘记更新等情况就会出现。</span></p><p style="margin-left:0; margin-right:0"><span style="color:#262626">在部署方面，ioGame 支持</span><strong><span style="color:#262626">多服单进程</span></strong><span style="color:#262626">的方式部署，也支持</span><strong><span style="color:#262626">多服多进程</span></strong><span style="color:#262626">多机器的方式部署；在部署方式上可以随意的切换而不需要更改代码。日常中我们可以按照单体思维开发，到了生产可以选择使用多进程的方式部署。</span></p><div><p style="margin-left:0; margin-right:0"><span style="color:#333333">在模拟客户端测试方面，ioGame 提供了</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Ftc83ud" target="_blank"><span>压测 &amp; 模拟客户端请求</span></a><span style="color:#333333">模块。此模块是用于模拟客户端，简化模拟工作量，只需要编写对应请求与回调。除了可以模拟简单的请求外，通常还可以做一些复杂的请求编排，并支持复杂业务的压测。模拟测试的过程是可互动的，但也支持测试自动化。</span><strong><span style="color:#333333">与单元测试不同的是，该模块可以模拟真实的网络环境，并且在模拟测试的过程中与服务器交互是可持续的、可互动的</span></strong><span style="color:#333333">。</span></p></div><div><p style="margin-left:0; margin-right:0"><span style="color:#000000">在</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fzqgdv3g9if8w37vr" target="_blank"><span>架构灵活性</span></a><span style="color:#000000">方面，ioGame 的架构由三部分组成：1.游戏对外服、2.Broker（游戏网关）、3.游戏逻辑服；三者既可相互独立，又可相互融合。这意味着使用 ioGame 可以</span><strong><span style="color:#df2a3f">适应任何类型的游戏</span></strong><span style="color:#000000">，因为只需通过调整部署方式，就可以满足不同类型的游戏需求。在 ioGame 中进行这些调整工作非常简单，而且不会对现有代码产生不良影响。</span></p></div><p style="margin-left:0; margin-right:0"><span>开发者基于 ioGame 编写的项目模块，通常是条理清晰的，得益于框架对</span><strong><span>路由的合理设计</span></strong><span>，同时也为路由提供了优雅的</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fnap5y8p5fevhv99y" target="_blank"><span>访问权限控制</span></a><span>。当我们整理好这些模块后，对于其他开发者接管项目或后续的维护中，会是一个不错的帮助（</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fruaqza%2F%23OBwXQ" target="_blank"><span>模块的整理与建议</span></a><span>）。或许现阶段你感受不到这块的威力，随着你深入地使用实践就能体会到这么设计的诸多好处与优势。</span><br><br><span style="color:#262626">开发者基于 ioGame 编写的项目，通常是语法简洁的、高性能的、低延迟的；框架最低要求使用 JDK17，这样即可以让项目享受到 ZGC 带来的改进，还能享受语法上的简洁。从 JDK17 开始 ZGC 远低于其</span><strong><span style="color:#262626">亚毫秒级</span></strong><span style="color:#262626">暂停时间的目标，</span><span>可以在不影响游戏速度的情况下，清理掉多余的内存。这样就不会出现卡顿或者崩溃的问题了，</span><span style="color:#262626">相当于在项目中变相的引入了一位 JVM 调优大师，详细请看<span>&nbsp;</span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.jdon.com%2F57736" target="_blank"><span>JDK 17 垃圾回收 GC 性能飞跃提升</span></a><span style="color:#262626">。</span></p><p style="margin-left:0; margin-right:0"><span>综上所述，ioGame 是一个非常适合网络游戏开发的框架。可以让你轻松地创建高性能、低延迟、易扩展的游戏服务器，并且节省时间和资源。如果你想要快速地开发出令人惊艳的网络游戏，请不要犹豫，立即选择 ioGame 吧！框架</span><span style="color:#262626">屏蔽了很多复杂且重复性的工作，并可为项目中的功能模块结构、开发流程等进行</span><strong><span style="color:#262626">清晰的组织定义</span></strong><span style="color:#262626">，减少了后续的项目维护成本。</span></p><p style="margin-left:0; margin-right:0">框架在开发、部署、压测 &amp; 模拟测试 .. 等，各个阶段都提供了很好的支持。<span>相信你已经对 ioGame 有了一个初步的了解，虽然还有很多丰富的功能与特性没有介绍到，但你可以通过后续的实践过程中来深入了解。感谢你的阅读，并期待你使用 ioGame 来打造自己的游戏服务器。</span></p></div></div></div></div><hr><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span>ioGame<span>&nbsp;</span></span><span>由 [</span><span style="color:#e8323c">网络通信框架</span><span>] 和 [</span><span style="color:#e8323c">业务框架</span><span>] 组成。</span></p><div><ul><li><span style="color:#e8323c">网络通信框架</span><span>：</span><span style="color:#333333">职责是各服务器之间的网络通信</span></li><li><span style="color:#e8323c">业务框架</span><span>：</span><span style="color:#333333">职责是</span><span>业务逻辑的处理方式和编写方式</span></li></ul><h3><span style="color:#e8323c">网络通信框架</span><span><span>&nbsp;</span></span></h3><p style="margin-left:0; margin-right:0"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.sofastack.tech%2Fprojects%2Fsofa-bolt%2Foverview%2F" target="_blank"><span>SOFABolt</span></a><span><span>&nbsp;</span>是蚂蚁金融服务集团开发的一套基于 Netty 实现的网络通信框架。</span></p><ul><li><span>为了让 Java 程序员能将</span><span style="color:#e8323c">更多的精力放在</span><span>基于网络通信的</span><span style="color:#e8323c">业务逻辑实现上</span><span>，而不是过多的纠结于网络底层 NIO 的实现以及处理难以调试的网络问题，Netty 应运而生。</span></li><li><span>为了让中间件开发者能将更多的精力放在产品功能特性实现上，而不是重复地一遍遍制造通信框架的轮子，SOFABolt 应运而生。</span></li></ul><p style="margin-left:0; margin-right:0"><span>Bolt 名字取自迪士尼动画 - 闪电狗，是一个基于 Netty 最佳实践的</span><span style="color:#e8323c">轻量、易用、高性能、易扩展</span><span>的通信框架。</span></p><h3><span style="color:#e8323c">业务框架</span></h3><p style="margin-left:0; margin-right:0"><span>如果说<span>&nbsp;</span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.sofastack.tech%2Fprojects%2Fsofa-bolt%2Foverview%2F" target="_blank"><span>sofa-bolt</span></a><span><span>&nbsp;</span>是为了让 Java 程序员能</span><span style="color:#000000">将更多的精力放在基于网络通信的业务逻辑实现上</span><span>。而业务框架正是</span><span style="color:#e8323c">解决</span><span>业务逻辑</span><span style="color:#e8323c">如何方便实现</span><span>这一问题上。业务框架是游戏框架的一部分，职责是简化程序员的业务逻辑实现，业务框架使程序员能够快速的开始编写游戏业务。</span></p><p style="margin-left:0; margin-right:0"><span>业务框架对于每个 action （即业务的处理方法） 都是通过<span>&nbsp;</span></span><a href="https://www.oschina.net/p/reflectasm" target="_blank"><span>asm</span></a><span><span>&nbsp;</span>与 Singleton、Flyweight 、Command 等设计模式结合，对 action 的获取上通过 array 来得到，是一种近原生的方式。</span></p><div><p style="margin-left:0; margin-right:0"><span>单线程中，业务框架平均每秒可以执行 1152 万次业务逻辑</span></p></div><hr><h1><span>架构简图</span></h1><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://foruda.gitee.com/images/1685262312157920959/e8ceac25_5475.jpeg" referrerpolicy="no-referrer"></p><div><div><p style="margin-left:0; margin-right:0; text-align:center"><span style="color:#e8323c">通过 ioGame 你可以很容易的搭建出一个集群无中心节点、集群自动化、分步式的网络游戏服务器</span></p></div><div><div><div><div><div><p style="margin-left:0; margin-right:0; text-align:left"><span>从图中可以看出，游戏网关支持以集群方式启动多个实例。这个设计选择了集群的方式，因为游戏网关通常是无状态的，主要用于调度和转发任务</span></p><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="margin-left:0; margin-right:0"><span>而游戏对外服、游戏逻辑服使用分步式设计，支持启动多个相同类型的服务。这意味着，当玩家数量增加时，我们可以轻松增加相应类型的游戏逻辑服以处理更多请求。</span></p><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="margin-left:0; margin-right:0"><span>以游戏逻辑服为例，假设我们启动了两个 A 类型的游戏逻辑服，分别为 A-1 和 A-2。当玩家向 A 类型的游戏逻辑服发起多次请求时，游戏网关会使用默认的随机负载策略将请求分配给 A-1 和 A-2 来处理。</span></p><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="margin-left:0; margin-right:0"><span>现在我们明白，游戏对外服和游戏逻辑服都支持动态增加和减少。无论未来玩家数量增加或减少，我们都能够轻松应对。架构是支持玩家无感知更新的，这得益于分步式设计。举例来说，如果 A 类型的游戏逻辑服需要增加一些新功能，我们可以启动 A-3、A-4 等已经支持了新功能的服务器，然后逐步将之前的 A-1 和 A-2 下线，从而实现了无感知的更新。</span></p><p style="margin-left:0; margin-right:0"><span>此外，框架还支持玩家</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fidl1wm" target="_blank"><span>动态绑定游戏逻辑服</span></a><span>；玩家与游戏逻辑服绑定后，之后的请求都由该游戏逻辑服来处理。</span></p><p style="margin-left:0; margin-right:0"><span>除了游戏之外，ioGame 也适用于物联网相关项目。只需将图中的玩家视为具体的设备，即使存在数亿个设备，ioGame 的架构也可以轻松支持。从 2022 年开始，已经有一些物联网公司开始采用这一解决方案，并得到了很好的体验。</span></p><p style="margin-left:0; margin-right:0"><span>ioGame 适用于</span><strong><span style="color:#df2a3f">网络游戏服务器、物联网、内部系统</span></strong><span>及各种需要长连接的场景；</span></p></div></div></div></div></div></div><div><div><div><div><div><div><hr><div><h2>通过 ioGame 可以使得游戏编程变得简单，下面是一个业务示例</h2></div><div><h4><span style="color:#e8323c">协议文件定义</span></h4><p style="margin-left:0; margin-right:0"><span>首先我们自定义一个协议文件，这个协议文件作为我们的业务载体描述。这个协议是纯 java 代码编写的，使用的是 jprotobuf，jprotobuf 是对<span>&nbsp;</span></span><a href="https://www.oschina.net/p/protocol+buffers" target="_blank"><span>google protobuf</span></a><span><span>&nbsp;</span>的简化使用，性能同等。</span></p><p style="margin-left:0; margin-right:0"><span>可以把这理解成 DTO、POJO、业务数据载体等，其主要目的是用于业务数据的传输；</span></p><pre><code class="language-java"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">/** 请求 */</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62">@ProtobufClass</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62">@FieldDefaults</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>(level = AccessLevel.PUBLIC)
public class HelloReq {
    <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">String</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">name</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>;
}</code></pre><div><h4><span style="color:#e8323c">Action</span></h4><p style="margin-left:0; margin-right:0"><span>游戏服务</span><span style="color:#333333">器</span><span>的编程，游戏服务</span><span style="color:#333333">器</span><span>接收业务数据后，对业务数据进行处理。这段业务代码可以同时支持 TCP、WebSocket、UDP。</span></p></div><pre><code class="language-java"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">@ActionController(1)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">public</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49"><span><span style="color:#d73a49">class</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1"><span><span style="color:#6f42c1">DemoAction</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>{
    <span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d"><span style="color:#6a737d">@ActionMethod(0)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">public</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> HelloReq here(HelloReq helloReq) {
        HelloReq newHelloReq = new HelloReq();
        newHelloReq.name = helloReq.name + <span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62">", I'm here "</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>;
        <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">return</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> newHelloReq;
    }
}</code></pre><div><p style="margin-left:0; margin-right:0"><span>一个方法在业务框架中表示一个<span>&nbsp;</span></span><span style="color:#e8323c">Action</span><span>（一个业务动作）。</span></p><p style="margin-left:0; margin-right:0"><span>方法声名的参数是用于接收前端传入的业务数据，在方法 return 时，数据就可以被游戏前端接收到。程序员可以不需要关心业务框架的内部细节。</span></p><p style="margin-left:0; margin-right:0"><span>从上面的示例可以看出，这和普通的 java 类并无区别，同时这种设计方式</span><strong><span style="color:#fa8c16">避免了类爆炸</span></strong><span>。如果</span><span style="color:#e8323c">只负责编写游戏业务</span><span>，那么对于业务框架的学习可以</span><span style="color:#e8323c">到此为止</span><span>了。</span></p><p style="margin-left:0; margin-right:0"><span style="color:#f5222d">游戏编程就是如此简单</span><span>！</span></p><p style="margin-left:0; margin-right:0"><strong><span>问：我可以开始游戏服务</span></strong><strong><span style="color:#333333">器</span></strong><strong><span>的编程了吗？</span></strong></p><p style="margin-left:0; margin-right:0"><span>是的，你已经可以开始游戏服务</span><span style="color:#333333">器</span><span>的编程了。</span></p></div></div><div><p style="margin-left:0; margin-right:0"><strong><span>访问示例（控制枱）</span></strong></p><p style="margin-left:0; margin-right:0"><span>当我们访问<span>&nbsp;</span></span><span style="color:#e8323c">here<span>&nbsp;</span></span><span>方法时（通常由游戏前端来请求），控制枱将会打印</span></p></div><pre>┏━━━━━ Debug. [(DemoAction.java:<span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span>4</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>).here] ━━━ [cmd:<span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span>1</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> - subCmd:<span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span>0</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> - cmdMerge:<span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span>65536</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>]
┣ userId : <span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span>888</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>
┣ 参数: helloReq : HelloRe<span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62">q(name=塔姆)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>
┣ 响应: HelloRe<span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62"><span style="color:#032f62">q(name=塔姆, I'm here )</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>
┣ 时间: <span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span>0</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> ms (业务方法总耗时)
┗━━━━━ Debug [DemoAction.java] ━━━ [当前线程:RequestMessage-<span><span><span><span><span><span><span><span><span><span><span><span><span>8</span></span></span></span></span></span></span></span></span></span></span></span></span>-<span><span><span><span><span><span><span><span><span><span><span><span><span>1</span></span></span></span></span></span></span></span></span></span></span></span></span>] 
</pre><div><p style="margin-left:0; margin-right:0"><strong><span>控制枱打印说明</span></strong></p></div><div><pre><code><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">Debug</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>. <span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1">[(DemoAction.java:4).here]</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>：
    表示执行业务的是 <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">DemoAction</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> 类下的 <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">here</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> 方法，4 表示业务方法所在的代码行数。
    在工具中点击控制枱的 <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">DemoAction</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1">.java</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1">:4</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> 这条信息，就可以跳转到对应的代码中（快速导航到对应的代码），这是一个开发良好体验的开始！
<span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">userId</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> :  
    当前发起请求的，用户 <span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49"><span style="color:#d73a49">id</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>。
参数 :  
    通常是游戏前端传入的值。
响应：
    通常是业务方法返回的值 ，业务框架会把这个返回值推送到游戏前端。
时间：
    执行业务方法总耗时，我们可根据业务方法总耗时的时长来优化业务。
路由信息：<span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1"><span style="color:#6f42c1">[cmd - subCmd]</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>
    路由是唯一的访问地址。</code></pre><p style="margin-left:0; margin-right:0"><span>有了以上信息，游戏开发者可以很快的定位问题。如果没有可视化的信息，开发中会浪费很多时间在前后端的沟通上。问题包括：</span></p><ul><li><span>是否传参问题 （游戏前端说传了）</span></li><li><span>是否响应问题（游戏后端说返回了）</span></li><li><span>业务执行时长问题 （游戏前端说没收到响应， 游戏后端说早就响应了）</span></li></ul><p style="margin-left:0; margin-right:0"><span>其中</span><span style="color:#f5222d">代码导航</span><span>可以让开发者快速的跳转到业务类对应代码中，在多人合作的项目中，可以快速的知道业务经过了哪些方法的执行，使得我们可以快速的进行阅读或修改；</span></p><div><h2><span>框架内置功</span></h2></div><div><p style="margin-left:0; margin-right:0; text-align:left"><strong><span>内置多种可选模块，可按需选择，以方便应用开发：</span></strong></p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fgmfy1k" target="_blank"><span>领域事件</span></a><span><span>&nbsp;</span>（</span><span style="color:#333333">轻量级</span><span>单机最快 MQ --<span>&nbsp;</span></span><strong><span style="color:#333333">disruptor</span></strong><span style="color:#333333">；通过</span><span>领域事件模块，可为你的系统实现类似 Guava-EventBus、Spring 事件驱动模型 ApplicationEvent、业务解耦、规避并发、不阻塞主线程... 等，各种浪操作）</span></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fniflk0" target="_blank"><span>任务延时器</span></a><span><span>&nbsp;</span>（将来某个时间可对任务进行执行、暂停、取消等操作，并不是类似 Quartz 的任务调度）</span></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fekx6ve" target="_blank"><span>多环境切换</span></a><span><span>&nbsp;</span>（不同运行环境下的配置支持）</span></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fvpe2t6" target="_blank"><span>light-jprotobuf<span>&nbsp;</span></span></a><span>（</span><span style="color:#333333">补足 jprotobuf 不能让多个对象在单个 .proto 源文件中生成的需求，并简化 jprotobuf 对源文件的注释</span><span>）</span></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fwz7af5" target="_blank"><span>分步式锁</span></a><span><span>&nbsp;</span>(基于 Redisson 的简单实现)</span></li></ul><p style="margin-left:0; margin-right:0; text-align:left"><strong><span>内置的其他功能：</span></strong></p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fuueq3i" target="_blank"><span>心跳相关</span></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fhv5qqh" target="_blank"><span>用户上线、离线相关的钩子方法</span></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fwg6lk7" target="_blank"><span>UserSessions</span></a><span><span>&nbsp;</span>（对所有用户 UserSession 的管理，统计在线用户等）</span></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fwg6lk7" target="_blank"><span>UserSession</span></a><span><span>&nbsp;</span>(与 channel 是 1:1 的关系，可取到对应的 userId、channel 等信息。)</span></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Ftywkqv" target="_blank"><span>登录相关</span></a><span>（提供重复登录、顶号等相关增强功能）</span></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fieimzn" target="_blank"><span>业务参数基础类型，自动装箱、拆箱</span></a><span>（解决协议碎片）</span></li></ul></div><div><h2><span>适合人群？</span></h2><ol><li><span style="color:#333333">长期从事 web 内部系统开发人员， 想了解游戏的</span></li><li><span style="color:#333333">刚从事游戏开发的</span></li><li><span style="color:#333333">未从事过游戏开发，但却对其感兴趣的</span></li><li><span>对设计模式在实践中的应用和 sofa-bolt 有兴趣的学习者</span></li><li><span>可以接受新鲜事物的</span></li><li><span style="color:#40485b">想放弃祖传代码的</span></li></ol><p style="margin-left:0; margin-right:0; text-align:left"><span style="color:#333333">推荐实际编程经验一年以上的人员</span></p><p style="margin-left:0; margin-right:0; text-align:left">ioGame&nbsp;<span>提供了丰富的在线高质量使用文档，为你的团队助力，带上你们的小伙伴一起，这样就不用手把手的教了。</span></p></div></div></div></div></div></div></div></div></div></div>
                                    ]]>
            </description>
            <pubDate>Thu, 02 Nov 2023 04:32:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264582/iogame-17-1-58-released</guid>
            <link>https://www.oschina.net/news/264582/iogame-17-1-58-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Spring Tools 4.20.1 发布，Spring 开发工具]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff; color:#333333">Spring Tools 4 是由 Spring 团队打造的 Spring 开发工具，从零开始构建，融合了现代技术和开发者工具架构。它在单独的进程中运行，从构建之初就考虑到了性能问题，并且支持最新的 Spring 技术，为开发基于 Spring 的企业应用提供世界级支持。同时，全新版本的 Spring Tools 与 IDE 无关，可在各种编码环境中使用，支持 Eclipse、Visual Studio Code 与 Theia。</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="background-color:#ffffff; color:#333333">Spring Tools 4.20.1 现已<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fspring.io%2Fblog%2F2023%2F11%2F01%2Fspring-tools-4-20-1-released" target="_blank">发布</a>，主要变化包括：</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>important highlights</strong></p><ul><li>(Spring Boot)&nbsp;Spring Properties 的完成最初显示速度快了 10 倍（与连续调用一样快）</li><li>(Spring Boot) 围绕符号扫描和 Java 协调的各种性能优化</li><li>(Eclipse) 即将推出的 Eclipse 2023-12 版本可提供早期访问版本</li></ul><p><span style="background-color:#ffffff; color:#000000">Spring Tools 4.21.0 计划于 2023 年 12 月中旬发布。</span></p><p>更多详情可<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fspring-projects%2Fsts4%2Freleases%2Ftag%2F4.20.1.RELEASE" target="_blank">查看发布说明</a><span style="background-color:#ffffff; color:#333333">。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 02 Nov 2023 02:33:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264560/spring-tools-4-20-1-released</guid>
            <link>https://www.oschina.net/news/264560/spring-tools-4-20-1-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[LiteFlow v2.11.3 发布，双 11 需求多变？就靠这款规则引擎了]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><img height="383" src="https://oscimg.oschina.net/oscnet/up-f08932d3983c4a48ea53cfa8cafd3c91ab6.png" width="900" referrerpolicy="no-referrer"></p><h2><strong>LiteFlow 介绍</strong></h2><p><strong>LiteFlow 是一个开源编排式规则引擎，能够让你的系统逻辑任意编排，可选用脚本书写逻辑，支持多达 6 种脚本语言，支持丰富的第三方存储的支持，所有的逻辑和规则均可热变更。设计系统和重构系统的神器。</strong></p><p>LiteFlow 是 Gitee 的高 star 项目，过去一年来保持了非常快的增长趋势。</p><p>同时 LiteFlow 也是国内优秀的社区驱动型开源项目，开源将近 3 年，目前已经被各大公司应用在核心系统上。特性以及支持度都非常好。社区人数超过 3500 人。测试用例 1500 个，质量有保障。</p><p>如果你是第一次知道这个项目，可以去官网或相关的主页进行了解：</p><blockquote><p>项目官网:</p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fliteflow.cc" target="_blank">https://liteflow.cc</a></p><p>gitee 托管仓库：</p><p><a href="https://gitee.com/dromara/liteFlow">https://gitee.com/dromara/liteFlow</a></p><p>github 托管仓库：</p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdromara%2Fliteflow" target="_blank">https://github.com/dromara/liteflow</a></p></blockquote><h2><strong>新版本简介</strong></h2><p>LiteFlow 又发布新版本啦！v2.11.3 这个版本主要是修复社区里提出的一些 bug 的版本。</p><p>v2.11.3 总计有 1 个增强，5 个修复。</p><p>对于 SQL 插件，可能是大家用的最多的 LiteFlow 插件，我们在新版本里多增加了一个 enable 的配置映射。使得你在数据库中可以启用和禁用某些流程和脚本。具体文档可以看 SQL 插件那章。</p><p>同时我们修复了 2.11.0，2.11.1 两个新版本发布诸多特性中遗留下来的 bug。</p><p>建议在用 2.11.X 这个系列版本的都更新到这个版本。更新过程是平滑的。完全兼容。</p><p>我们每一个版本都在快速进步，得益于 LiteFlow 目前拥有一个非常强大的开源团队和一份对开源事业追求的热情。我们认真开发每一个特性，仔细对待每一个测试用例，热心回答社区每一个问题，诚恳听取大家的每一个建议，尽力修复每一个 bug。</p><p>如果你想加入我们，请联系我。</p><p>最近又到了一年一度的双 11 了，LiteFlow 目前运行在上百家公司的核心业务中。希望大家都能双 11 买买买，服务稳定，顺利度过双 11。</p><h2><strong>完整更新列表</strong></h2><pre><code>增强 #I8BPM9 SQL 插件增加 enable 字段的映射

https://gitee.com/dromara/liteFlow/issues/I8BPM9

修复 #I8BPMD 修复 2.11.2 中启动 parse 两次规则的问题

https://gitee.com/dromara/liteFlow/issues/I8BPMD

修复 #I8BPHS 修复 Redis 配置源哨兵模式的地址检查

https://gitee.com/dromara/liteFlow/issues/I8BPHS

修复 #I8AWHT LiteFlowChainELBuilder.validate() 存在 bug

https://gitee.com/dromara/liteFlow/issues/I8AWHT

修复 #I8AR0L 组件定义了重试和回滚，回滚也会被重试

https://gitee.com/dromara/liteFlow/issues/I8AR0L

修复 #I8AF1O 修复 redis 的订阅模式 mode 解析的 bug

https://gitee.com/dromara/liteFlow/issues/I8AF1O
</code></pre><p>如果你想加入社区群，可以在官网中查看如何加入群聊：</p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fliteflow.cc%2Fpages%2F73c2c3%2F" target="_blank">https://liteflow.cc/pages/73c2c3/</a></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 02 Nov 2023 02:13:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264554/liteflow-2-11-3-released</guid>
            <link>https://www.oschina.net/news/264554/liteflow-2-11-3-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[🔥 Solon v2.5.12 发布，Java 原生编译再起]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#24292e; text-align:start">最近，合作适配了<span>&nbsp;</span><code>Solon Native</code><span>&nbsp;</span>的第一个开源项目：<a href="https://gitee.com/dromara/neutrino-proxy">dromara/neutrino-proxy</a><span>&nbsp;</span>（Solon Native 里程碑意义！）。让我们对 Java 原生编译又起了新的希冀。总体来说：</p><ul><li>适配调整完后，代码变化不太大</li><li>整个过程是很麻烦的。因为社区版不能调试，只能不断试（发现缺什么，就补什么配置）</li></ul><h3>Solon 是什么框架？</h3><p style="color:#24292e; text-align:start"><strong>Java 新的生态级应用开发框架</strong>。<span style="background-color:#f1c40f">从零开始构建，有自己的标准规范与开放生态</span>（历时五年，具备全球第二级别的生态规模）。与其他框架相比，解决了两个重要的痛点：启动慢，费内存。</p><h3>解决痛点？</h3><p style="color:#24292e; text-align:start">由于 Solon&nbsp;Bean 容器的独特设计，<span style="background-color:#f1c40f">不会因为扩展依赖变多而启动很慢</span>（开发调试时，省时、爽快）！以知名开源项目「小诺」为例：</p><ul><li><a href="https://gitee.com/xiaonuobase/snowy">「snowy-spring 版」</a><span>&nbsp;</span>启动 15-50 秒</li><li><a href="https://gitee.com/xiaonuoadmin/snowy-solon">「snowy-solon 版」</a><span>&nbsp;</span><span style="background-color:#f1c40f">启动 3-5 秒，启动内存节省 1/3</span>（有兴趣的，欢迎拉取代码体验）</li></ul><h3>相对于 Spring，有什么特点？</h3><ul><li>启动快 5 ～ 10 倍。<span>&nbsp;</span><strong>（更快）</strong></li><li>qps 高 2～ 3 倍。<span>&nbsp;</span><strong>（更高）</strong></li><li>运行时内存节省 1/3 ~ 1/2。<span>&nbsp;</span><strong>（更少）</strong></li><li>打包可以缩小到 1/2 ~ 1/10；比如，300Mb 的变成了 23Mb。<span>&nbsp;</span><strong>（更小）</strong></li><li>同时支持 jdk8, jdk11, jdk17, jdk21,<span>&nbsp;</span><strong>graalvm native image</strong></li></ul><h3>入门探索视频（用户录制）：</h3><p><iframe frameborder="0" height="400" scrolling="no" src="https://player.bilibili.com/player.html?aid=938467339&amp;bvid=BV1RT4y1a7U5&amp;cid=583394292&amp;page=1" style="box-sizing: border-box; font-size: 16px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; color: rgb(36, 41, 46); font-family: -apple-system, system-ui, &quot;Segoe UI&quot;, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; text-align: start; background-color: rgb(255, 255, 255);" width="700" referrerpolicy="no-referrer"></iframe></p><h3>最近更新了什么？</h3><ul><li>调整 solon.view 插件，默认添加请求上下文 context 对象（感谢用户建议）</li><li>调整 SnackActionExecutor 默认关闭 className 读取（相对更安全）</li><li>优化 SolonApp 构造时日志处理，避免失去样式的可能。（感谢用户建议）</li><li>优化，容器停止时把 Closeable 接口的 bean 也关掉（感谢用户建议）</li><li>优化 solon.data 事务监听 afterCommit 事件之前移除事务状态（感谢用户建议）</li><li>优化，属性引用表达式，当环境变量无时马上使用默认值（环境变量是启动时即决定有无）（感谢用户建议）</li><li>优化 mqtt-solon-cloud-plugin 重构代码，增加异步发布与并发消费模式（并改为异步接口）（感谢用户建议）</li><li>优化 mqtt5-solon-cloud-plugin 重构代码，增加异步发布与并发消费模式（并改为异步接口）（感谢用户建议）</li><li>增加 solon.aot 支持使用命令行设置，构建 native image args</li><li>增加 Utils::isProxyClass 接口（用于检测，是否是 solon 生成的类代理）（感谢用户建议）</li><li>修复 solon.boot.smarthttp 可能会两次触发 close 的问题（感谢用户反馈）</li><li>snack3 升为 3.2.82</li><li>sqltoy 升为 5.2.75</li><li>mybatis-flex 升为 1.7.3</li><li>activemq 升为 5.15.12</li><li>sureness 升为 1.0.8</li><li>guava 升为 32.1.3-jre</li><li>pulsar 升为 2.11.2</li><li>beetlsql 升为 3.26.1-RELEASE</li><li>smarthttp 升为 1.3.5</li></ul><h3>项目仓库地址？</h3><ul><li>gitee：<a href="https://gitee.com/noear/solon">https://gitee.com/noear/solon</a></li><li>github：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnoear%2Fsolon" target="_blank">https://github.com/noear/solon</a></li></ul><p>&nbsp;</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 02 Nov 2023 02:02:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264550/solon-2-5-12-released</guid>
            <link>https://www.oschina.net/news/264550/solon-2-5-12-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[商城系统平台端更新登录、经营状况、平台管理模块]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div><div><div><div><p style="margin-left:0; margin-right:0"><strong>登录功能模块</strong></p></div><div><ul><li><span>密码登录：输入框提示语调整为【请输入手机号，或 账号】</span></li><li><strong><span style="color:#df2a3f">账号、密码</span></strong><span> 位数：限定为 11 位</span></li><li><span>在线时长：token 有效期 30 天 ，避免频繁登录</span></li><li><span>重复登录：处于登录状态打开后直接进入系统即可，目前操作用户名和密码没有错误但登录提示【用户名或密码错误】需要清缓存才行</span></li><li><span>店铺名称：需将店铺名称显示全</span></li><li><span>重置：</span><strong><span style="color:#df2a3f">所有搜索功能模块中都加上【重置】功能</span></strong></li></ul><p style="margin-left:0; margin-right:0"><strong><span>修改密码</span></strong></p><ul><li><span>将待修改用户的手机号显示出来，取消脱敏展示样式</span></li><li><span>验证码：改为与登录操作一致滑动图片将验证码填入框内</span></li></ul></div><p><strong>经营概况模块</strong></p><div><span>日注册用户数：将【今日访客数】改为【今日注册用户数】，即今日注册成功的总用户数</span></div><p>&nbsp;</p><p><strong>平台管理模块</strong></p></div><div><ul><li><span>菜单顺序：店铺管理、供应商管理、门店管理</span></li><li><span>删除：当删除【店铺、供应商】时，需同步将【签约类目、自己的商品】一并删除</span></li></ul><p style="margin-left:0; margin-right:0"><strong><span>店铺管理</span></strong></p><ul><li><span>店铺评分：将【商品评分】改为【店铺评分】，店铺评分是指本店已售评价商品的平均分</span></li><li><span>店铺 ID：将【ID】改为【店铺 ID】</span></li><li><span>添加类目：添加类目中需增加百分比符号显示</span></li></ul></div></div></div></div>
                                    ]]>
            </description>
            <pubDate>Thu, 02 Nov 2023 01:46:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264722</guid>
            <link>https://www.oschina.net/news/264722</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[youlai-mall v2.4.1 已经发布，全栈开源商城项目]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>youlai-mall v2.4.1 已经发布，全栈开源商城项目</p><p>此版本更新内容包括：</p><h2>前端发行版</h2><p><a href="https://gitee.com/youlaiorg/mall-admin/releases/tag/v2.1.1" target="_blank" rel="nofollow">mall-admin v2.1.1</a></p><h2>更新内容</h2><ul><li>chore: 更新 <code>nacos</code> 配置</li><li>refactor: 优化商品列表</li><li>chore(pom.xml): 升级项目版本号 <code>2.4.1</code></li><li>refactor: 网关代码重构</li><li>chore(pom.xml): 升级 <code>SpringBoot</code> 项目版本号 2.7.15</li><li>fix: 合并分支冲突解决</li><li>feat: 新增 <code>APP</code> 订单分页列表</li><li>fix: 订单提交字段名修改引发问题修复</li><li>fix: 订单提交字段名修改</li><li>refactor: 订单模块重构</li><li>refactor: 订单分页列表重构（嵌套子查询多参数处理、MapStruct 子属性是集合转化）</li><li>refactor: 订单超时取消释放库存优化</li><li>feat: 新增订单超时未支付取消流程单元测试，rabbitmq 关单和释放库存优化</li><li>feat: 购物车添加商品接口优化，添加商品购买流程单元测试</li><li>refactor: 订单商品重构、移除实验室模块、添加 Feign Decoder</li><li>refactor: 订单确认、提交和支付重构</li><li>docs: 更新 nacos 配置白名单路径</li><li>chore: 更新 seata 的配置中心地址</li><li>chore: 更新商品数据库表 (结构未变，数据改变，无需更新)</li><li>refactor: 微信小程序授权登录 OAuth2 代码重构优化</li><li>chore(pom.xml): 升级 SpringBoot 版本至 2.7.11</li><li>docs: SQL 添加 <code>use</code> 语句</li><li>fix: <code>laboratory</code> 启动模块报错问题修复</li><li>refactor: 优化线上数据库无权操作权限提示</li><li>fix: <code>SpringCache</code>未关联<code>redisConnection</code>无效问题修复</li><li>fix: 文件上传未关闭流问题修复</li><li>fix(logback-spring.xml): 修复因错误使用<code>LevelFilter</code>导致输出到文件的日志除了<code>INFO</code>其他级别日志不显示的问题</li></ul><p><strong>完整的更新日志</strong>: <a href="https://gitee.com/youlaitech/youlai-mall/compare/v2.0.1...v2.4.1" target="_blank" rel="nofollow">https://gitee.com/youlaitech/youlai-mall/compare/v2.0.1...v2.4.1</a></p><p>详情查看：<a href="https://gitee.com/youlaitech/youlai-mall/releases/v2.4.1" rel="nofollow">https://gitee.com/youlaitech/youlai-mall/releases/v2.4.1</a></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 02 Nov 2023 01:31:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264545/youlai-mall-2-4-1-released</guid>
            <link>https://www.oschina.net/news/264545/youlai-mall-2-4-1-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[spring-oauth-server v3.0.0 发布，全新升级到 OAuth2.1&OIDC1.0]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>在 spring-oauth-serverg 开源 10 周年之际，我们发布了全新的大版本 v3.0.0，从底层架构到整体的协议支持都做了大范围的升级与更新，更好的满足业务需要与跟上技术演进。</p><p>此版本升级更新的主要内容如下：</p><ol><li><p style="margin-left:0; margin-right:0">底层安全架构升级：jdk 升级 17(相比 jdk8 性能与稳定性有大提升), spring6.x, springboot3.x, thymeleaf 替换 servlet/jsp</p></li><li><p style="margin-left:0; margin-right:0">全面升级支持 OAuth2.1 协议与 OIDC1.0 协议 (同时弃用了旧的 grant_type, 如 password 模式)</p></li><li><p style="margin-left:0; margin-right:0">构建包由 war 换成 jar, SQL 相应调整</p></li><li><p style="margin-left:0; margin-right:0">用 spring-security-oauth2-authorization-server 升级替换 spring-security-oauth2, 详见<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fandaily.com%2Fblog%2F%3Fp%3D20077" target="_blank">背景说明</a></p></li><li><p style="margin-left:0; margin-right:0">界面使用说明按 OAuth2.1 进行友好设计并更新各提示语句</p></li><li><p style="margin-left:0; margin-right:0">增加 spring-restdocs 文档支持, 自动生成 API 相关文档</p></li></ol><p>&nbsp;</p><p><span style="background-color:#ffffff; color:#333333">v3.0.0 版本链接：</span><a href="https://gitee.com/shengzhao/spring-oauth-server/tree/3.0.0/">https://gitee.com/shengzhao/spring-oauth-server/tree/3.0.0/</a></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 01 Nov 2023 15:53:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264534/spring-oauth-server-3-0-0-released</guid>
            <link>https://www.oschina.net/news/264534/spring-oauth-server-3-0-0-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[无鱼 v0.8 已经发布，项目工时系统]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>无鱼 v0.8 已经发布，项目工时系统</p><p>此版本更新内容包括：</p><p>v0.8: 增加项目审核</p><p>1、新增了日志审批功能。</p><p>2、优化了项目填报后，强制列表刷新的问题。</p><p>3、优化了项目日报、项目月报中，超级管理员看不到所有项目的情况。</p><p>4、优化了部分日报详情界面</p><p>5、优化了部分菜单位置和数据</p><p>之前版本的用户不更新也可以，如果想要更新可以单独导入附件的 menu 数据，使用方法，第 1 步，备份数据库中 sys_menu 表。 第 2 步，导入附件中的 sys_menu.sql 文件。 第 3 步：根据新导入的菜单，重新调整角色权限。</p><p>或者根据 demo 环境自行调整。</p><p>6、细化了部分业务的菜单权限，老版本更新后对部分业务的操作权限需要重新配置。</p><h1>使用方法</h1><p>新搭建建议使用 compose 方式部署。 老版本需要替换后台程序、前端程序和更新数据库补丁。</p><p>部署链接：<a href="https://gitee.com/link?target=http%3A%2F%2Fwww.wuyu-soft.com%2Fdoc%2Fcost%2Fwycost-install-docker-compose%2F" target="_blank" rel="nofollow">http://www.wuyu-soft.com/doc/cost/wycost-install-docker-compose/</a></p><p>更新方法： 该版本需要更新前端文件、后端文件，以及数据库脚本。</p><p><a href="https://gitee.com/link?target=http%3A%2F%2Fwww.wuyu-soft.com%2Fdoc%2Fcost%2Fwycost-patch%2F" target="_blank" rel="nofollow">http://www.wuyu-soft.com/doc/cost/wycost-patch/</a></p><h1>交流</h1><p>QQ 群交流群，加群请联系 QQ：307484308（1） 去掉括号</p><p>#I66QG4</p><p>详情查看：<a href="https://gitee.com/wy-soft/wyproject/releases/v0.8" rel="nofollow">https://gitee.com/wy-soft/wyproject/releases/v0.8</a></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 01 Nov 2023 15:34:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264530/wuyu-0-8-released</guid>
            <link>https://www.oschina.net/news/264530/wuyu-0-8-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Transformers.js 2.7.0 发布，新增文本转语音]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Transformers.js 支持在浏览器中实现最先进的机器学习——无需服务器。它提供预训练模型和熟悉的 API，支持自然语言处理、计算机视觉、音频和多模态领域的任务。</p><p>借助 Transformers.js，开发者可以直接在浏览器中运行文本分类、图像分类、语音识别等任务，这使其成为 ML 从业者和研究人员的强大工具。</p><p>最近发布的<strong><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxenova%2Ftransformers.js%2Freleases%2Ftag%2F2.7.0" target="_blank"> Transformers.js 2.7.0 </a></u></strong>添加了一项重要功能：文本转语音。</p><p>下面是演示视频：</p><div class="ckeditor-html5-video" style="text-align:center"><video controls="controls" src="https://user-images.githubusercontent.com/26504141/277378666-9fa5131d-0e07-47fa-9a13-122c1b69d233.mp4">
  &nbsp;
 </video></div><p>&nbsp;</p><p>开发者表示目前只支持 speecht5 的文本转语音，将来会添加其他模型，如 bark 和 MMS。</p><p>为了展示在浏览器中文本转语音的强大功能，开发者还发布了一个简单的示例应用：</p><ul><li>演示：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhuggingface.co%2Fspaces%2FXenova%2Ftext-to-speech-client" target="_blank">https://huggingface.co/spaces/Xenova/text-to-speech-client</a></li><li>代码：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxenova%2Ftransformers.js%2Ftree%2Fmain%2Fexamples%2Ftext-to-speech-client" target="_blank">https://github.com/xenova/transformers.js/tree/main/examples/text-to-speech-client</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Wed, 01 Nov 2023 06:38:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264606/transformers-js-2-7-0-released</guid>
            <link>https://www.oschina.net/news/264606/transformers-js-2-7-0-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Kotlin 1.9.20 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Kotlin 1.9.20 版本已<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.jetbrains.com%2Fkotlin%2F2023%2F11%2Fkotlin-1-9-20-released%2F" target="_blank">发布</a>，适用于所有目标的 K2 编译器已进入 <strong style="color:#19191c">Beta&nbsp;</strong>阶段，<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.jetbrains.com%2Fkotlin%2F2023%2F11%2Fkotlin-multiplatform-stable%2F" target="_blank">Kotlin Multiplatform 已进入<strong>稳定阶段</strong></a>。</p><p style="margin-left:0; margin-right:0; text-align:start"><span><span><span><span><span style="color:#19191c"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>此版本的一些亮点更新如下：</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><ul style="margin-left:0; margin-right:0"><li>适用于所有目标的 K2 现已处于 Beta 阶段</li><li>稳定的 Kotlin Multiplatform</li><li>用于设置多平台项目的新默认&nbsp;hierarchy template</li><li>在 Kotlin Multiplatform 中完全支持 Gradle 配置缓存</li><li>Kotlin/Native 中默认启用自定义内存分配器</li><li>Kotlin/Native 中垃圾收集器的性能改进</li><li>Kotlin/Wasm 中的新目标和重命名目标，支持最新的 Wasm GC</li><li>在 Kotlin/Wasm 标准库中支持 WASI API</li></ul><h4><strong>适用于所有目标的新 Kotlin K2 编译器已达到 Beta 版&nbsp;</strong></h4><p><span style="background-color:#ffffff; color:#19191c">JetBrains 的 Kotlin 团队正在继续稳定新的 K2 编译器，这将带来重大的性能改进，加快新语言功能的开发，统一 Kotlin 支持的所有平台，并为多平台项目提供更好的架构。&nbsp;</span></p><p><strong>随着 1.9.20 版本的发布，新的 K2 编译器已面向所有平台进入 Beta&nbsp;阶段： JVM、Native、JS 和 Wasm。这意味着你现在可以在任何 Kotlin 项目中试用 K2。</strong></p><p style="margin-left:0; margin-right:0; text-align:start"><span><span><span><span><span style="color:#19191c"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>Kotlin 团队通过成功编译数十个用户和内部项目，确保了新编译器的质量。大量用户也参与了稳定过程，在他们的项目中尝试新的 K2 编译器并报告他们发现的任何问题。大量用户也参与了稳定化过程，在他们的项目中试用新的 K2 编译器，并报告了他们发现的任何问题。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="margin-left:0; margin-right:0; text-align:start"><span><span><span><span><span style="color:#19191c"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span><strong>Kotlin 1.9.20 版本还在 kapt 编译器插件中引入了 K2 支持。</strong>现在，所有重要的 Kotlin 编译器插件都支持 K2。其中包括 kapt、serialization、AtomicFU、Lombok、SAM with receiver、all-open、no-arg、jvm-abi-gen、Android Lint 和 Jetpack Compose 编译器插件。支持 K2 的 Kotlin Symbol Processing (KSP) 将于 Kotlin 1.9.20 后一周内发布。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="margin-left:0; margin-right:0; text-align:start"><span><span><span><span><span style="color:#19191c"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>如果你使用的是任何其他编译器插件，建议检查其文档以查看它们是否与 K2 兼容。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="margin-left:0; margin-right:0; text-align:start"><span><span><span><span><span style="color:#19191c"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span><strong>Kotlin 的下一个主要版本是 2.0.0，新的 K2 编译器将作为默认和稳定版本全面提供。</strong></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span style="color:#19191c"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>为了尽快解决发现的任何问题，项目团队计划频繁发布一系列小型 Kotlin 2.0 稳定版，包括 Beta1、Beta2、Beta3、RC1 和 RC2。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="margin-left:0; margin-right:0; text-align:start"><span><span><span><span><span style="color:#19191c"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>在发布 Kotlin 2.0.0-RC1 时，其计划确保与其他版本的 Kotlin 编译器编译的代码的二进制兼容性，并消除用 K2 编译的二进制文件中毒现象。使用户能够在生产环境中使用新的 K2 编译器。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="margin-left:0; margin-right:0; text-align:start">K2 编译器即将完成其稳定化过程并在 Kotlin 2.0 中默认启用，因此项目团队也呼吁尽可能多的开发人员来试用 K2 并报告任何存在的潜在问题。</p><p style="margin-left:0; margin-right:0; text-align:start">更多详情可<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.jetbrains.com%2Fkotlin%2F2023%2F11%2Fkotlin-1-9-20-released%2F" target="_blank">查看官方博客</a>。</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 01 Nov 2023 03:50:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264577/kotlin-1-9-20-released</guid>
            <link>https://www.oschina.net/news/264577/kotlin-1-9-20-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
    </channel>
</rss>
