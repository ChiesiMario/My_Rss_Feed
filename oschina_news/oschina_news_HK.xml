<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[開源中國-最新資訊]]>
        </title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="https://rsshub.app/oschina/news" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[開源中國-最新資訊 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Mon, 08 Jan 2024 06:15:27 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[Pulsar3.0 新功能介紹]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><img src="https://s2.loli.net/2024/01/03/1QuX3wI6P8hefLa.png" alt="Pulsar3.0-NewFeature.png" referrerpolicy="no-referrer"></p><p>在上一篇文章 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcrossoverjie.top%2F2023%2F12%2F24%2Fob%2FPulsar3.0-upgrade%2F" target="_blank">Pulsar3.0 升級指北</a>講了關於升級 Pulsar 集羣的關鍵步驟與災難恢復，本次主要分享一些 <code>Pulsar3.0</code> 的新功能與可能帶來的一些問題。</p><h1>升級後所遇到的問題</h1><p>先來個欲揚先抑，聊聊升級後所碰到的問題吧。</p><p>其中有兩個問題我們感知比較明顯，特別是第一個。</p><h2>topic 被刪除</h2><p>我們在上個月某天凌晨從 <code>2.11.2</code> 升級到 <code>3.0.1</code> 之後，進行了上一篇文章中所提到的功能性測試，發現沒什麼問題，覺得一切都還挺順利的，半個小時搞定後就下班了。</p><p>結果哪知道第二天是被電話叫醒的，有部分業務反饋業務重啓之後就無法連接到 Pulsar 了。</p><p><img src="https://s2.loli.net/2024/01/02/KUAnZ8W65jO3x7d.png" alt="image.png" referrerpolicy="no-referrer"> 最終定位是 topic 被刪除了。</p><blockquote><p>其中的細節還蠻多的，修復過程也是一波三折，後面我會單獨寫一篇文章來詳細梳理這個過程。</p></blockquote><p>在這個 issue 和 PR 中有詳細的描述： <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fpulsar%2Fissues%2F21653" target="_blank">https://github.com/apache/pulsar/issues/21653</a><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fpulsar%2Fpull%2F21704" target="_blank">https://github.com/apache/pulsar/pull/21704</a></p><p>感興趣的朋友也可以先看看。</p><h2>監控指標丟失</h2><p>第二個問題不是那麼嚴重，是升級後發現 bookkeeper 的一些監控指標丟失了，比如這裏的寫入延遲： <img src="https://s2.loli.net/2024/01/02/9c7qs4CX1lejOIn.png" alt="image.png" referrerpolicy="no-referrer"> 我也定位了蠻久，但不管是官方的 docker 鏡像還是源碼編譯都無法復現這個問題。</p><p>最終丟失的指標有這些：</p><ul><li>bookkeeper_server_ADD_ENTRY_REQUEST</li><li>bookkeeper_server_ADD_ENTRY_BLOCKED</li><li>bookkeeper_server_READ_ENTRY_BLOCKED</li><li>bookie_journal_JOURNAL_CB_QUEUE_SIZE</li><li>bookie_read_cache_hits_count</li><li>bookie_read_cache_misses_count</li><li>bookie_DELETED_LEDGER_COUNT</li><li>bookie_MAJOR_COMPACTION_COUNT</li></ul><p>詳細內容可以參考這個 issue： <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fpulsar%2Fissues%2F21766" target="_blank">https://github.com/apache/pulsar/issues/21766</a></p><h1>新特性</h1><p>講完了遇到的 bug，再來看看帶來的新特性，重點介紹我們用得上的特性。</p><h2>支持低負載均衡</h2><p><img src="https://s2.loli.net/2024/01/02/KVpW4DyNimlMhqH.png" alt="image.png" referrerpolicy="no-referrer"></p><p>當我們升級或者是重啓 broker 的時候，全部重啓成功後其實會發現最後重啓的那個 broker 是沒有流量的。</p><p>這個原理和優化在之前寫過的 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcrossoverjie.top%2F2023%2F02%2F07%2Fpulsar%2Fpulsar-load-banance%2F%23Pulsar-%25E8%25B4%259F%25E8%25BD%25BD%25E5%259D%2587%25E8%25A1%25A1%25E5%258E%259F%25E7%2590%2586" target="_blank">Pulsar 負載均衡原理及優化</a> 其實有詳細介紹。</p><p>本次 3.0 終於將那個優化發版了，之後只要我們配置 <code>lowerBoundarySheddingEnabled: true</code> 就能開啓這個低負載均衡的一個特性，使得低負載的 broker 依然有流量進入。</p><h2>跳過空洞消息</h2><p><img src="https://s2.loli.net/2024/01/02/nj2IyteVUQ79SBZ.png" alt="image.png" referrerpolicy="no-referrer"> Pulsar 可能會因為消息消費異常導致遊標出現空洞，從而導致磁盤得不到釋放；</p><p>所以我們有一個定時任務，會定期掃描積壓消息的 topic 判斷是否存在空洞消息，如果存在便可以在管理台使用 skipMessage API 跳過空洞消息，從而釋放磁盤。</p><p>但在 3.0 之前這個跳過 API 存在 bug，只要跳過的數量超過 8 時，實際跳過的數量就會小於 8.</p><p>具體 issue 和修復過程在這裏： <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fpulsar%2Fissues%2F20262" target="_blank">https://github.com/apache/pulsar/issues/20262</a><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fpulsar%2Fpull%2F20326" target="_blank">https://github.com/apache/pulsar/pull/20326</a></p><p>總之這個問題在 3.0 之後也是修復了，有類似需求的朋友也可以使用。</p><h2>新的負載均衡器</h2><p>同時也支持了一個新的負載均衡器，解決了以下問題：</p><ul><li>以前的負載均衡大量依賴 zk，當 topic 數量增多時對擴展性帶來問題。 
  <ul><li>新的負載均衡器使用 <code>non-persistent</code> 來存儲負載信息，就不再依賴 zk 。</li></ul></li><li>以前的負載均衡器需要依賴 <code>leader broker</code> 進行重定向到具體的 broker，其實這些重定向並無意義，徒增了系統開銷。 
  <ul><li>新的負載均衡器使用了 SystemTopic 來存放 topic 的所有權信息，這樣每個 broker 都可以拿到數據，從而不再需要從 leader broker 重定向了。</li></ul></li></ul><p>更多完整信息可以參考這個 PIP: <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fpulsar%2Fissues%2F16691" target="_blank">PIP-192: New Pulsar Broker Load Balancer</a></p><h2>支持大規模延遲消息</h2><p>第二個重大特性是支持大規模延遲消息，相信是有不少企業選擇 Pulsar 也是因為他原生就支持延遲消息。</p><p>我們也是大量在業務中使用延遲消息，以往的延遲消息有着以下一些問題：</p><ul><li>內存開銷過大，延遲消息的索引都是保存在內存中，即便是可以分佈在多個 broker 中分散存儲，但消耗依然較大 
  <ul><li>重點優化了索引的內存佔有量。</li></ul></li><li>重啓 broker 時會消耗大量時候重建索引 
  <ul><li>支持了索引快照，最大限度的降低了構建索引的資源消耗。</li></ul></li></ul><h1>待優化功能</h1><h2>監控面板優化</h2><p>最後即便是升級到了 3.0 依然還有一些待優化的功能，在之前的 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcrossoverjie.top%2F2023%2F08%2F03%2Fob%2FPulsar-Client%2F" target="_blank">從 Pulsar Client 的原理到它的監控面板</a>中有提到給客户端加了一些監控埋點信息。</p><p>最終使用下來發現還缺一個 ack 耗時的一個面板，其實日常碰到最多的問題就是突然不能消費了（或者消費過慢）。</p><p>這時如果有這樣的耗時面板，首先就可以定位出是否是消費者本身的問題。</p><p><img src="https://s2.loli.net/2024/01/03/YFoy4PfnRbz72qX.png" alt="image.png" referrerpolicy="no-referrer"> 目前還在開發中，大概類似於這樣的數據。</p><h1>總結</h1><p>Pulsar3.0 是 Pulsar 的第一個 LTS 版本，推薦儘快升級可以獲得長期支持。 但只要是軟件就會有 bug，即便是 LTS 版本，所以大家日常使用碰到 Bug 建議多向社區反饋，一起推動 Pulsar 的進步。</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 08 Jan 2024 04:13:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/crossoverjie/blog/10678357</guid>
            <link>https://my.oschina.net/crossoverjie/blog/10678357</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[AI 大模型首次牽手國民級綜藝，崑崙萬維天工 AI 聯合《最強大腦》加速大模型落地]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="margin-left:0; margin-right:0; text-align:justify"><span><span><span><span><span><span style="background-color:#ffffff"><span><span style="color:#222222"><span>1 月 5 日週五晚 21:20，由崑崙萬維「天工 APP」特約贊助的《最強大腦》第 11 季正式播出。</span></span></span></span></span><strong><span style="background-color:#ffffff"><span><span style="color:#222222"><span>這是 AI 大模型技術與國民級綜藝 IP 的首度深度合作</span></span></span></span></strong><span><span style="background-color:#ffffff"><span><span style="color:#222222"><span>，在節目中，「天工 APP」將發揮其能搜、能聊、能寫的多項超級 AI 大模型能力，與嘉賓選手深度互動，參與趣味腦力競技環節，從而進一步推動大模型技術的普適應用，降低技術門檻，讓越來越多的用户能夠輕鬆、便捷地擁抱大模型。</span></span></span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:left"><img alt="" height="713" src="https://oscimg.oschina.net/oscnet/up-0d6fccfb6752359be7a21bfe88595876a12.png" width="1267" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0; text-align:justify">&nbsp;</p><p style="margin-left:0; margin-right:0; text-align:justify"><span><span><span><span><span><span style="background-color:#ffffff"><span><span style="color:#222222"><span>作為一檔國內影響力最廣、最具代表性的國民級的大型科學競技綜藝節目，《最強大腦》在過去十年間已成功舉辦了 10 期，在 372 個挑戰項目中</span></span></span></span></span><span><span style="background-color:#ffffff"><span><span style="color:#222222"><span>，</span></span></span></span></span><span><span style="background-color:#ffffff"><span><span style="color:#222222"><span>近 600 位中外選手齊聚舞台，參與腦力競技、傳播科學知識，鼓勵越來越多的觀眾們不斷突破能力邊界，開拓大腦潛能。</span></span></span></span></span></span></span></span></span></p><p style="margin-left:0; margin-right:0; text-align:justify"><img alt="" height="713" src="https://oscimg.oschina.net/oscnet/up-b1a63ff1d5fe64826bead3eefd0c56b6bad.png" width="1267" referrerpolicy="no-referrer"></p><p style="margin-left:.0001pt; margin-right:0; text-align:left">&nbsp;</p><p style="margin-left:.0001pt; margin-right:0; text-align:left"><span><span><span><span><span><span style="background-color:#ffffff"><span><span style="color:#222222"><span>本次「天工 APP」與《最強大腦》第 11 季的深度合作，既是《最強大腦》在科學科普、賽制創新上的又一次嘗試，</span></span></span></span></span><strong><span style="background-color:#ffffff"><span><span style="color:#222222"><span>也是以「天工 APP」為代表的 AI 大模型技術在用户更多日常使用場景中的推廣與落地。</span></span></span></span></strong></span></span></span></span></p><p style="margin-left:0; margin-right:0; text-align:center"><img alt="" height="976" src="https://oscimg.oschina.net/oscnet/up-9741a5d12eccfbcf9dc28df09dd2ede734a.png" width="720" referrerpolicy="no-referrer"></p><p style="margin-left:.0001pt; margin-right:0; text-align:left">&nbsp;</p><p style="margin-left:0; margin-right:0; text-align:justify"><span><span><span><span><span><span style="background-color:#ffffff"><span><span style="color:#222222"><span>比如，在節目第一期的「天工開悟」環節中，用户可以通過在「天工 APP」中實時搜索「大位數速算法」，與台上的選手們同步學習運用心算技巧，挑戰最強大腦。</span></span></span></span></span></span></span></span></span></p><p style="margin-left:0; margin-right:0; text-align:center"><img alt="" height="751" src="https://oscimg.oschina.net/oscnet/up-ea25660c5d5c9745295d24537388f01df14.png" width="661" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0; text-align:center">&nbsp;</p><p style="margin-left:0; margin-right:0; text-align:center"><span><span><span><span><span><span style="background-color:#ffffff"><span><span style="color:#222222"><span>與此同時，「天工 APP」還與《最強大腦》聯合發起了</span></span></span></span></span><strong><span style="background-color:#ffffff"><span><span style="color:#222222"><span>腦力挑戰賽</span></span></span></span></strong><span><span style="background-color:#ffffff"><span><span style="color:#222222"><span>，用户可進入「天工 APP」最強大腦專區，通過 15 道邏輯、計算、觀察、記憶、空間、創造題目的作答，分析出用户專屬的「腦力潛能六維圖」，識別個人腦力潛能所在，從而有針對性地開發鍛鍊。</span></span></span></span></span></span></span></span></span></p><p style="margin-left:0; margin-right:0; text-align:left"><span><span><span><span><span style="color:#222222"><span>用户還可以在「天工 APP」裏為喜歡的選手投票助威，並贏得親臨現場的機會，共同見證本季腦王奪冠時刻。</span></span></span></span></span></span></p><p style="margin-left:0; margin-right:0; text-align:justify"><span><span><span><span><span><span style="background-color:#ffffff"><span><span style="color:#222222"><span>隨着後續節目的播出，還將有更多來自「天工 APP」的「驚喜彩蛋」，全方位地展現 AI 大模型技術在不同場景中如何為用户學習生活帶來便利，降低技術門檻，推動大模型技術走入千家萬户，讓 AI 觸手可及。</span></span></span></span></span></span></span></span></span></p><p style="margin-left:0; margin-right:0; text-align:justify"><span><span><span><span><strong><span style="background-color:#ffffff"><span><span style="color:#222222"><span>每週五晚 21:20 鎖定江蘇衞視，崑崙萬維天工 APP 攜手《最強大腦》第 11 季，天賦迴歸，腦力封神。</span></span></span></span></strong></span></span></span></span></p><p>&nbsp;</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 08 Jan 2024 04:03:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/274703</guid>
            <link>https://www.oschina.net/news/274703</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[某中學採購「智能互動宣泄儀」——實則為任天堂 Wii 的套殼]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>最近，廣州某中學的學生在網上發帖稱，該校採購了「智能互動宣泄儀」幫助學生們釋放壓力，該設備功能特徵包括：人機互動、體感訓練、體能檢測、力學感知、身心平衡訓練、虛擬運動訓練、建立宣泄檔案。</p><p>根據學生在微博上發佈的視頻，所謂「智能互動宣泄儀」<strong>其實是一台任天堂 Wii 遊戲機連接了一個顯示屏</strong>，但其採購價高達 46000 元。而在電商平台上，任天堂 Wii 遊戲機價格為 600 元左右。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-1c72c99904de625f4332ee6f95291e7b59c.png" referrerpolicy="no-referrer"></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-10711ecb9c79de2a4a684bd2258d3c2b699.png" referrerpolicy="no-referrer"></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-ff968abd3c6c2bc39a5823ed41712f0c0ce.png" referrerpolicy="no-referrer"></p><p>參見下圖，這確實是物理意義上的「套殼」：</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-58cd5cf8c2ac60c565c31e8513b12e1ec64.png" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 08 Jan 2024 03:17:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/274693</guid>
            <link>https://www.oschina.net/news/274693</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[TIOBE 2023 年度編程語言：C#]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>TIOBE&nbsp;宣佈&nbsp;2023 年度編程語言花落&nbsp;C#，這是&nbsp;C# 在 TIOBE 指數歷史上首次榮獲年度編程語言的獎項。</p><p><img height="64" src="https://oscimg.oschina.net/oscnet/up-db2c2ac24b28289dd46cdbf4bea8067aa28.png" width="700" referrerpolicy="no-referrer"></p><p>一直以來，C# 都穩居榜單前十名，去年則成為了年度漲幅最大的語言（+1.43%）。緊隨其後的是 Scratch（+0.83%）和 Fortran（+0.64%）</p><p><span style="color:#000000">TIOBE CEO&nbsp;Paul Jansen 認為，</span>C# 正在追趕四大語言的步伐，蠶食 Java 的市場份額，並在<span style="color:#24292e">Web 應用程序後端和遊戲</span>（得益於 Unity）等領域越來越受歡迎。「C# 可以免費使用，而且發展速度穩定，每次發佈新版本都會使語言更具表現力。C# 將繼續存在，甚至可能很快超過 Java。」</p><p>除此之外，去年的 TIOBE 指數還發生了一些其他的有趣變化。Fortran 和 Kotlin 取代了 R 和 Perl，常駐榜單 Top 20。一個有趣的問題是：2024 年，哪些語言將進入 TIOBE 指數前 20 名？</p><p><span style="color:#000000">Paul 的觀點是：</span>很難預測。2023 年，Julia 曾短暫進入 TIOBE 指數，但未能保持這一位置；要想獲得第二次機會，則需要 Julia 語言和社區的成熟。「我會把賭注押在 Dart（with&nbsp;Flutter）和 TypeScript 上。後者已經在業界得到了廣泛應用，但由於某些原因，它還沒有在 TIOBE 指數中取得突破。讓我們拭目以待 2024 年的發展。」</p><p><strong style="color:#333333">TIOBE 1 月 TOP 20 編程語言</strong></p><p><img height="413" src="https://oscimg.oschina.net/oscnet/up-51cde871f2fcdc7b05035d73cd44695f53c.png" width="500" referrerpolicy="no-referrer"></p><p>Scratch 相較上月上升一位&nbsp;<span style="background-color:#ffffff; color:#000000">(11→10)</span>，進入&nbsp;Top 10 榜單；Assembly language 被擠落，從第 10 位跌至 15。<span style="background-color:#ffffff; color:#000000">其他語言的一些波動還包括：</span></p><ul><li><span style="background-color:#ffffff; color:#333333">Go<span>&nbsp;</span></span><span style="background-color:#ffffff; color:#000000">的排名從 13 又回升至 11</span></li><li><span style="background-color:#ffffff; color:#000000">Delphi/Object Pascal&nbsp;</span><span style="background-color:#ffffff; color:#000000">的排名從 16 升至 13</span></li><li><span style="color:#000000">Swift&nbsp;<span style="background-color:#ffffff">的排名從 </span></span><span style="background-color:#ffffff; color:#000000">17 升至 16</span></li><li><span style="color:#000000">Kotlin&nbsp;<span style="background-color:#ffffff">的排名從 15&nbsp;跌至 17</span></span></li><li><span style="color:#000000"><span style="background-color:#ffffff">Ruby 的排名從 19 升至 18</span></span></li><li><span style="color:#000000"><span style="background-color:#ffffff">Rust 的排名從 18 跌至 19</span></span></li><li><span style="color:#000000"><span style="background-color:#ffffff">COBOL&nbsp;的排名從 23 升至 20</span></span></li><li><span style="background-color:#ffffff; color:#000000">Fortran、MATLAB 則分別保持第 12、14 位不變；上月榜單中第 20 位的 R 語言，在本月榜單中跌至了第 23 位，與&nbsp;</span><span style="color:#000000"><span style="background-color:#ffffff">COBOL 排名進行了互換。</span></span></li></ul><p><strong style="color:#333333">TOP 10 編程語言 TIOBE 指數走勢（2002-2024）</strong></p><p><img height="222" src="https://oscimg.oschina.net/oscnet/up-dc9e870242c6d049337fb838adea09a3236.png" width="700" referrerpolicy="no-referrer"></p><p><strong style="color:#333333">第 21-50 名編程語言排行</strong></p><p><img height="439" src="https://oscimg.oschina.net/oscnet/up-a98ae6f64844c6dc2d91b93487afbf1725d.png" width="500" referrerpolicy="no-referrer"></p><p><span style="background-color:#ffffff; color:#000000">第 51-100 名如下，由於它們之間的數值差異較小，僅以文本形式列出（按字母排序）：</span></p><blockquote><p>Algol, AutoLISP, Avenue, Bash, bc, Boo, CIL, CL (OS/400), CLIPS, Clojure, CLU, Curl, DiBOL, Erlang, Forth, Hack, Icon, Io, J, J#, JScript, LabVIEW, Ladder Logic, Lingo, LiveCode, M4, Maple, MQL5, NATURAL, Nim, OpenEdge ABL, PL/I, PostScript, PowerShell, Pure Data, Q, Racket, REXX, Ring, RPG, Scheme, Snap!, Solidity, SPARK, SPSS, Squirrel, Stata, Wolfram, Xojo, XQuery</p></blockquote><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="color:#000000">TIOBE 編程社區指數（The TIOBE Programming Community index）是一個衡量編程語言受歡迎程度的指標，該指數每月更新一次。評判的依據來自世界範圍內的工程師、課程和第三方供應商，包括流行的搜索引擎，如 Google、必應、雅虎、維基百科、亞馬遜、YouTube 和百度都被用於指數計算。值得注意的是，TIOBE 指數並不代表編程語言的好壞或編寫代碼的多少。</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="color:#000000">該指數可以用來檢查你的編程技能是否還能跟上時代的步伐，或者在開始建立一個新的軟件系統時，基於指數對採用何種編程語言做出決策。</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.tiobe.com%2Ftiobe-index%2Fprogramminglanguages_definition%2F" target="_blank">TIOBE 指數</a><span style="color:#000000">的定義方式，以及詳細榜單信息<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.tiobe.com%2Ftiobe-index%2F" target="_blank">均可查看官網</a>。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 08 Jan 2024 03:13:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/274691/tiobe-index-202401</guid>
            <link>https://www.oschina.net/news/274691/tiobe-index-202401</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[歡迎 Tianai-Captcha 加入 Dromara 開源社區，可能是開源界最好用的行為驗證碼工具]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h2>作者介紹</h2><blockquote><p>95 後大齡程序員，一名野生的民間技術愛好者，15 年學習編程技術，迫於生計於 17 年就職於某電商公司， 在從業生涯中，本項目 2020 年發佈後，後續也是改改停停，自古閒人出金貨，也許有一天筆者自由了，會好好的完善這套框架。</p></blockquote><h2>引言:</h2><blockquote><p>譬如在今之網絡世界，為保障資訊之安全，凡入網之人或事，多須經由驗證之法以證實己身之真實性。是以，驗證碼乃必不可少之一環也。其重要性備矣，具誠信者無不體知。</p><p>朕觀網絡之變幻，驗證碼多以隨機字母構成者為眾所周知。然而，此類驗證碼對於一般用户而言，尤其易於應用。蓋因滑動、點選等高級驗證碼，雖能提供更加友好之體驗，然然不易於普通用户之應用。</p><p>吾觀察於平民百姓，多未涉獵於技術深處，對於複雜之滑動、點選類驗證碼而言，或存不解其所在。且諸多普通用户或使用傳統設備，或因技術限制而難以適用此等新穎驗證碼。是以，此類驗證碼對於普羅百姓而言，未免難以為繼。</p><p>嗟乎！有智者聞我國民之難，乃發明滑動及點選驗證碼以應民需，其善心可嘉。彼將此等驗證碼開源，使廣大百姓得以輕鬆接納，實屬可喜可賀。</p><p>滑動及點選驗證碼之開源，如一泓清泉，滌盪網絡之隱憂。於此，一般百姓不復為驗證碼所困，得以輕鬆、便利之享用。其操作簡便，貼近生活，解民憂而廣受歡迎，實為普及網絡安全之一良策。</p><p>開源此等驗證碼者，其舉措實乃有益於民眾。不僅促進了網絡安全，亦鼓舞了普羅百姓參與其中之熱情。願諸般良好之舉措，皆能為社會大眾所接納，盛行於世。</p></blockquote><hr><h2>關於 TIANAI-CAPTCHA</h2><p><code>tianai-captcha</code>簡稱<code>tac</code>，是一款集成滑動類、點選類的一款行為驗證碼，以使用簡單、安全性強、界面美觀、接入方便而，是為集好看、功能多、安全性強的一款開源行為驗證碼工具。</p><hr><p><img alt="" src="https://files.mdnice.com/user/29321/f7dbe307-c5c2-4ee4-b3ec-1434a22b5b28.jpg" referrerpolicy="no-referrer"></p><p><img alt="" src="https://files.mdnice.com/user/29321/98590d8c-b83d-40d1-a136-028372f94236.jpg" referrerpolicy="no-referrer"></p><h2>在線體驗</h2><p><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fcaptcha.tianai.cloud" target="_blank">http://captcha.tianai.cloud</a></p><h2>使用方式</h2><p><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fdoc.captcha.tianai.cloud" target="_blank">http://doc.captcha.tianai.cloud</a></p><h2>源碼地址</h2><p><a href="https://gitee.com/dromara/tianai-captcha">https://gitee.com/dromara/tianai-captcha</a></p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdromara%2Ftianai-captcha" target="_blank">https://github.com/dromara/tianai-captcha</a></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 08 Jan 2024 02:59:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/274680</guid>
            <link>https://www.oschina.net/news/274680</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Linux Kernel 6.7 正式發佈]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Linus 在內核郵件列表<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flore.kernel.org%2Flkml%2FCAHk-%3Dwidprp4XoHUcsDe7e16YZjLYJWra-dK0hE1MnfPMf6C3Q%40mail.gmail.com%2F" target="_blank">宣佈</a></u>正式推出 Linux Kernel 6.7。</p><blockquote><p><img src="https://oscimg.oschina.net/oscnet/up-b6365c91033369ca50b55b531ed64765d8a.png" referrerpolicy="no-referrer"></p></blockquote><p>據稱此版本是有史以來合併數最多的版本之一，包含 17k+ 個非合併 commit，實際合併的超過 1000 個。</p><p><strong>主要變化</strong></p><ul><li>主線內核已合併實驗性 Bcachefs 文件系統</li><li>現在默認啓用 Intel Meteor Lake 顯卡支持</li><li>在 x86-64 內核上啓用/禁用 32 位模擬的選項</li><li>KVM 支持 LoongArch 虛擬化</li><li>KVM on RISC-V 支持 Smstateen 擴展</li><li>默認啓用 Intel Meteor Lake 圖形支持，同時還引入了針對 Intel Xe2Lunar Lake 圖形的支持</li><li>為&nbsp;Nouveau 開源圖形驅動程序新增對 NVIDIA GPU 系統處理器（GSP）固件的支持，從而帶來更好的電源管理性能，還包括 Nouveau 設置中的 RTX 40 加速</li><li>USB Type-C 驅動現已支持 DP Alt Mode 2.1</li><li>AMD Seamless Boot 現適用於更多 AMD 硬件</li><li>F2FS 現已支持更大的頁面大小</li><li>Btrfs 功能增強，例如添加了 FSID（臨時文件系統 ID）支持（Valve 希望為&nbsp;Steam Deck 的&nbsp; Steam OS 引入這一功能）</li><li>AppArmor 訪問控制現在可以應用於 io_uring，並支持創建用户命名空間</li><li>添加了 Rust 對工作隊列的綁定，並升級到 Rust 1.73 工具鏈</li><li>對 perf 工具進行了大量改進和功能更新</li><li>移除了古老的 videobuf 層</li><li>對 Logitech HID++ 進行了調整</li><li>ASUS WMI 驅動增加了對 Screenpad 的支持</li></ul><p><u><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.omgubuntu.co.uk%2F2024%2F01%2Flinux-kernel-6-7-new-features" target="_blank">詳情</a></strong></u>。</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 08 Jan 2024 02:37:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/274674/linux-kernel-6-7</guid>
            <link>https://www.oschina.net/news/274674/linux-kernel-6-7</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[馬化騰迴應早期微信「偷窺」用户相冊：圖片緩存加速造成的誤會]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>據 CSDN 報道，針對早前有軟件工程師爆料稱包括微信等在內的多款國民級 App 在後台反覆讀取用户相冊一事，1 月 5 日，馬化騰獨家迴應：「應該是 21 年 10 月的事了，圖片緩存加速造成的誤會，後面應該用 iOS 新的解決卡頓的 API 解決了」。並特別表示，「可以幫忙闢謠」。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-61301141026d7bfed6e78fc18961393ff36.png" referrerpolicy="no-referrer"></p><p>事情的前因還要追溯到 2021 年 10 月 8 日，當時蘋果 iOS 15 剛剛推出隱私新特性 「記錄 App 活動」，對所有 App 的隱私讀取行為進行了 7 天的監控，並使用 App Privacy Insights 對記錄進行讀取。 &nbsp;數碼博主、軟件開發工程師 @Hackl0us 發現微信在用户未主動激活 App 的情況下，在後台數次讀取用户相冊，每次讀取時間長達 40 秒，至 1 分鐘不等。</p><p><img src="https://oscimg.oschina.net/oscnet/up-5c44695ad62718318a0289820dd5dc8bb89.png" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 08 Jan 2024 02:08:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/274667</guid>
            <link>https://www.oschina.net/news/274667</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[ParadeDB —— 基於 Postgres 的 ElasticSearch 替代方案]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">ParadeDB 是</span>基於 Postgres 構建的開源 ElasticSearch 替代方案<span style="color:#000000">。開發團隊正在構建 ElasticSearch 產品套件的功能，首先是搜索。</span></p><p><span style="color:#000000">ParadeDB 提供所有 Postgres 數據庫中最全面的 Postgres 原生搜索功能。</span></p><ul><li><strong>全文搜索</strong>。使用可配置的分詞器、17 種語言的詞幹以及基於 SQL 的可擴展查詢語言按關鍵字或短語進行搜索。</li><li><strong>相似性搜索</strong>。使用預安裝的 pgvector 擴展和工作流程按語義進行搜索，逐步保持向量同步。</li><li><strong>混合搜索</strong>。通過混合搜索提供更高精確度和召回率的結果，該搜索結合了全文搜索和相似性搜索的優勢。</li><li><strong>BM25 Scoring</strong>。全文搜索結果按 BM25 排序，BM25 是 ElasticSearch 使用的基於術語的排名算法。</li><li><strong>分面搜索</strong>。通過分面搜索存儲和收集搜索結果的統計指標。</li><li><strong>分佈式搜索</strong>。ParadeDB 自動對索引進行分片，使開發人員的搜索速度比單節點 Postgres 快數百倍。</li></ul><p>ParadeDB 的搜索引擎基於 Tantivy 開發，Tantivy 是 Apache Lucene 的基於 Rust 的實現。</p></div>
                                                                ]]>
            </description>
            <pubDate>Mon, 08 Jan 2024 02:07:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/p/paradedb</guid>
            <link>https://www.oschina.net/p/paradedb</link>
        </item>
        <item>
            <title>
                <![CDATA[Gitee 推薦 | 輕量級隱私計算任務編排框架 Kuscia]]>
            </title>
            <description>
                <![CDATA[<h1><a id="user-content-kuscia" class="anchor" href="https://gitee.com/secretflow/kuscia#kuscia"></a>Kuscia</h1><p><a href="https://gitee.com/link?target=https%3A%2F%2Fdl.circleci.com%2Fstatus-badge%2Fredirect%2Fgh%2Fsecretflow%2Fkuscia%2Ftree%2Fmain"><img src="https://dl.circleci.com/status-badge/img/gh/secretflow/kuscia/tree/main.svg?style=svg" alt="CircleCI" referrerpolicy="no-referrer"></a></p><p align="center"><a href="https://gitee.com/secretflow/kuscia/blob/main/README.zh-CN.md">簡體中文</a>｜<a href="https://gitee.com/secretflow/kuscia/blob/main/README.md">English</a></p><p>Kuscia（Kubernetes-based Secure Collaborative InfrA）是一款基於 K3s 的輕量級隱私計算任務編排框架，旨在屏蔽異構基礎設施和協議，並提供統一的隱私計算底座。通過 Kuscia：</p><ul><li>你可以快速體驗隱私計算功能。</li><li>你可以獲得完整的隱私計算生產能力。</li><li>你可以與行業內多種隱私計算系統進行互聯互通。</li><li>你可以使用不同的中心化或點對點業務組網模式。</li></ul><p><img src="https://gitee.com/secretflow/kuscia/raw/main/docs/imgs/kuscia_architecture.png" alt="Kuscia" referrerpolicy="no-referrer"></p><h2><a id="user-content-文檔" class="anchor" href="https://gitee.com/secretflow/kuscia#%E6%96%87%E6%A1%A3"></a>文檔</h2><ul><li><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.secretflow.org.cn%2Fdocs%2Fkuscia%2Flatest%2Fzh-Hans%2F">Kuscia</a></li><li><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.secretflow.org.cn%2Fdocs%2Fkuscia%2Flatest%2Fzh-Hans%2Fgetting_started%2Findex.html">準備開始</a></li><li><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.secretflow.org.cn%2Fdocs%2Fkuscia%2Flatest%2Fzh-Hans%2Freference%2Findex.html">參考手冊</a></li><li><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.secretflow.org.cn%2Fdocs%2Fkuscia%2Flatest%2Fzh-Hans%2Ftutorial%2Findex.html">教程</a></li><li><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.secretflow.org.cn%2Fdocs%2Fkuscia%2Flatest%2Fzh-Hans%2Fdevelopment%2Findex.html">開發</a></li></ul><h2><a id="user-content-貢獻代碼" class="anchor" href="https://gitee.com/secretflow/kuscia#%E8%B4%A1%E7%8C%AE%E4%BB%A3%E7%A0%81"></a>貢獻代碼</h2><p>請查閲 <a href="https://gitee.com/secretflow/kuscia/blob/main/CONTRIBUTING.md">CONTRIBUTING.md</a></p><h2><a id="user-content-聲明" class="anchor" href="https://gitee.com/secretflow/kuscia#%E5%A3%B0%E6%98%8E"></a>聲明</h2><p>非正式發佈的 Kusica 版本僅用於演示，請勿在生產環境中使用。儘管此版本已涵蓋 Kuscia 的基礎功能，但由於項目存在功能不足和待完善項，可能存在部分安全問題和功能缺陷。因此，我們歡迎你積極提出建議，並期待正式版本的發佈。</p>]]>
            </description>
            <pubDate>Mon, 08 Jan 2024 02:02:00 GMT</pubDate>
            <guid isPermaLink="false">https://gitee.com/secretflow/kuscia</guid>
            <link>https://gitee.com/secretflow/kuscia</link>
        </item>
        <item>
            <title>
                <![CDATA[每日一博 | 米哈遊大數據雲原生實踐]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><em>作者：米哈遊大數據開發</em></p><p>近年來，容器、微服務、Kubernetes 等各項雲原生技術的日漸成熟，越來越多的公司開始選擇擁抱雲原生，並開始將 AI、大數據等類型的企業應用部署運行在雲原生之上。以 Spark 為例，在雲上運行 Spark 可以充分享有公共雲的彈性資源、運維管控和存儲服務等，並且業界也湧現了不少 Spark on Kubernetes 的優秀實踐。</p><p>在剛剛結束的 2023 雲棲大會上，米哈遊數據平台組大數據技術專家杜安明分享了米哈遊大數據架構向雲原生化升級過程中的目標、探索和實踐，以及如何通過以阿里雲容器服務 ACK 為底座的 Spark on K8s 架構，獲得在彈性計算、成本節約以及存算分離方面的價值。</p><h2>背景簡介</h2><p>隨着米哈遊業務的高速發展，大數據離線數據存儲量和計算任務量增長迅速，早期的大數據離線架構已不再滿足新場景和需求。</p><p>為瞭解決原有架構缺乏彈性、運維複雜、資源利用率低等問題，2022 年下半年，我們着手調研將大數據基礎架構雲原生化，並最終在阿里雲上落地了 Spark on K8s + OSS-HDFS 方案，目前在生產環境上已穩定運行了一年左右的時間，並獲得了彈性計算、成本節約以及存算分離這三大收益。</p><p><strong>1. 彈性計算</strong></p><p>由於遊戲業務會進行週期版本更新、開啓活動以及新遊戲的上線等，對離線計算資源的需求與消耗波動巨大，可能是平時水位的幾十上百倍。利用 K8s 集羣天然的彈性能力，將 Spark 計算任務調度到 K8s 上運行，可以比較輕鬆的解決這類場景下資源消耗洪峯問題。</p><p><strong>2. 成本節約</strong></p><p>依託阿里雲容器服務 Kubernetes 版 ACK 集羣自身強大的彈性能力，所有計算資源按量申請、用完釋放，再加上我們對 Spark 組件的定製改造，以及充分利用 ECI Spot 實例，在承載同等計算任務和資源消耗下，成本節約達 50%。</p><p><strong>3. 存算分離</strong></p><p>Spark 運行在 K8s 之上，完全使用 K8s 集羣的計算資源，而訪問的則數據也由 HDFS、OSS 逐步切換到 OSS-HDFS 上，中間 Shuffle 數據的讀寫採用 Celeborn，整套架構實現了計算和存儲的解耦，易於維護和擴展。</p><h2>Spark on K8s&nbsp;架構演進</h2><p>眾所周知，Spark 引擎可以支持並運行在多種資源管理器之上，比如 Yarn、K8s、Mesos 等。在大數據場景下，目前國內大多公司的 Spark 任務還是運行在 Yarn 集羣之上的，Spark 在 2.3 版本首次支持 K8s，並於 2021 年 3 月發佈的 Spark3.1 版本才正式 GA。</p><p>相較於 Yarn，Spark 在 K8s 上起步較晚，儘管在成熟度、穩定性等方面還存在一定的欠缺，但是 Spark on K8s 能夠實現彈性計算以及成本節約等非常突出的收益，所以各大公司也都在不斷進行嘗試和探索，在此過程中，Spark on K8s 的運行架構也在不斷的向前迭代演進。</p><p><img src="https://oscimg.oschina.net/oscnet/up-91f57f93e692da3c3bc6738e3cbe09d8dce.png" alt="" referrerpolicy="no-referrer"></p><h3>1. 在離線混部</h3><p>目前，將 Spark 任務運行在 K8s 上，大多公司採用的方案依舊是在線與離線混合部署的方式。架構設計依據的原理是，不同的業務系統會有不同的業務高峯時間。大數據離線業務系統典型任務高峯期間會是凌晨的&nbsp;0&nbsp;點到 9 點鐘，而像是各種應用微服務、Web 提供的 BI 系統等，常見的業務高峯期是白天時間，在這個時間以外的其它時間中，可以將業務系統的機器 Node 加入到 Spark 所使用的 K8s NameSpace &nbsp;中。如下圖所示，將 Spark 與其他在線應用服務等都部署在一套 K8s 集羣之上。</p><p><img src="https://oscimg.oschina.net/oscnet/up-c37f20f1df91812d5e7c562815e3b9f0ed4.png" alt="" referrerpolicy="no-referrer"></p><p>該架構的優點是可以通過在離線業務的混合部署和錯峯運行，來提升機器資源利用率並降低成本，但是缺點也比較明顯，即架構實施起來複雜，維護成本比較高，而且難以做到嚴格的資源隔離，尤其是網絡層面的隔離，業務之間不可避免的會產生一定的相互影響，此外，我們認為該方式也不符合雲原生的理念和未來發展趨勢。</p><h3>2. Spark&nbsp;on&nbsp;K8s&nbsp;+&nbsp;OSS-HDFS</h3><p>考慮到在離線混合部署的弊端，我們設計採用了一種新的、也更加符合雲原生的實現架構：底層存儲採用 OSS-HDFS(JindoFs)，計算集羣採用阿里雲的容器服務 ACK，Spark 選擇功能相對豐富且比較穩定的 3.2.3 版本。</p><p>OSS-HDFS 完全兼容了 HDFS 協議，除了具備 OSS 無限容量、支持數據冷熱存儲等優點以外，還支持了目錄原子性、毫秒級 rename 操作，非常適用於離線數倉，可以很好的平替現有 HDFS 和 OSS。</p><p>阿里雲 ACK 集羣提供了高性能、可伸縮的容器應用管理服務，可以支持企業級 Kubernetes 容器化應用的生命週期管理，ECS 是大家所熟知的阿里雲服務器，而彈性容器實例 ECI 是一種 Serverless 容器運行服務，可以按量秒級申請與釋放。</p><p>該架構簡單易維護，底層利用 ECI 的彈性能力，Spark 任務可以較為輕鬆的應對高峯流量，將 Spark 的 Executor 調度在 ECI 節點上運行，可最大程度的實現計算任務彈性與最佳的降本效果，整體架構的示意圖如下所示。</p><p><img src="https://oscimg.oschina.net/oscnet/up-02cd50d97a62975f921948f5fa16139e6dc.png" alt="" referrerpolicy="no-referrer"></p><h2>雲原生架構設計與實現</h2><h3>1. 基本原理</h3><p>在闡述具體實現之前，先簡要介紹一下 Spark 在 K8s 上運行的基本原理。Pod 在 K8s 中是最小的調度單元，Spark 任務的 Driver 和 Executor 都是一個單獨 Pod，每個 Pod 都分配了唯一的 IP 地址，Pod 可以包含一個或多個 Container，無論是 Driver 還是 Executor 的 JVM 進程，都是在 Container 中進行啓動、運行與銷燬的。</p><p>一個 Spark 任務被提交到 K8s 集羣之後，首先啓動的是 Driver Pod，而後 Driver 會向 Apiserver 按需申請 Executor，並由 Executor 去執行具體的 Task，作業完成之後由 Driver 負責清理所有的 Executor Pod，以下是這幾者關係的簡要示意圖。</p><p><img src="https://oscimg.oschina.net/oscnet/up-f76c245cf83130f4a99cf98056228951683.png" alt="" referrerpolicy="no-referrer"></p><h3>2. 執行流程</h3><p>下圖展示了完整的作業執行流程，用户在完成 Spark 作業開發後，會將任務發佈到調度系統上並進行相關運行參數的配置，調度系統定時將任務提交到自研的 Launcher 中間件，並由中間件來調用 spark-k8s-cli，最終由 Cli 將任務提交至 K8s 集羣上。任務提交成功之後，Spark Driver Pod 最先啓動，並向集羣申請分配 Executor Pod，Executor 在運行具體的 Task 時，會與外部 Hive、Iceberg、OLAP 數據庫、OSS-HDFS 等諸多大數據組件進行數據的訪問與交互，而 Spark Executor 之間的數據 Shuffle 則由 CeleBorn 來實現。</p><p><img src="https://oscimg.oschina.net/oscnet/up-f5d39e0da69d013c767af359682cf71fc2a.png" alt="" referrerpolicy="no-referrer"></p><h3>3. 任務提交</h3><p>關於如何將 Spark 任務提交到 K8s 集羣上，各個公司的做法不盡相同，下面先簡要描述下目前比較常規的做法，然後再介紹目前我們線上所使用的任務提交和管理方式。</p><h4>3.1 使用原生 spark-submit</h4><p>通過 spark-submit 命令直接提交，Spark 原生就支持這種方式，集成起來比較簡單，也符合用户的習慣，但是不方便進行作業狀態跟蹤和管理，無法自動配置 Spark UI 的 Service 和 Ingress，任務結束後也無法自動清理資源等，在生產環境中並不適合。</p><h4>3.2 使用 spark-on-k8s-operator</h4><p>這是目前較常用的一種提交作業方式，K8s 集羣需要事先安裝 spark-operator，客户端通過 kubectl 提交 yaml 文件來運行 Spark 作業。本質上這是對原生方式的擴展，最終提交作業依然是使用 spark-submit 方式，擴展的功能包括：作業管理，Service/Ingress 創建與清理，任務監控，Pod 增強等。此種方式可在生產環境中使用，但與大數據調度平台集成性不太好，對於不熟悉 K8s 的用户來説，使用起來複雜度和上手門檻相對較高。</p><h4>3.3 使用 spark-k8s-cli</h4><p>在生產環境上，我們採用 spark-k8s-cli 的方式進行任務的提交。spark-k8s-cli 本質上是一個可執行的文件，基於阿里雲 emr-spark-ack 提交工具我們進行了重構、功能增強和深度的定製。</p><p>spark-k8s-cli 融合 spark-submit 和 spark-operator 兩種作業提交方式的優點，使得所有作業都能通過 spark-operator 管理，支持運行交互式 spark-shell 和本地依賴的提交，並且在使用方式上與原生 spark-submit 語法完全一致。</p><p>在上線使用初期，我們所有任務的 Spark Submit JVM 進程都啓動在 Gateway Pod 中，在使用一段時間後，發現該方式穩定性不足，一旦 Gateway Pod 異常，其上的所有正在 Spark 任務都將失敗，另外 Spark 任務的日誌輸出也不好管理。鑑於此種情況，我們將 spark-k8s-cli 改成了每個任務使用單獨一個 Submit Pod 的方式，由 Submit Pod 來申請啓動任務的 Driver，Submit Pod 和 Driver Pod 一樣都運行在固定的 ECS 節點之上，Submit Pod 之間完全獨立，任務結束後 Submit Pod 也會自動釋放。spark-k8s-cli 的提交和運行原理如下圖所示。</p><p><img src="https://oscimg.oschina.net/oscnet/up-727f4fc057aedcd02fbc83b3b98bce9db35.png" alt="" referrerpolicy="no-referrer"></p><p>關於 spark-k8s-cli，除了上述基本的任務提交以外，我們還做了其他一些增強和定製化的功能。</p><ul><li>支持提交任務到同地域多個不同的 K8s 集羣上，實現集羣之間的負載均衡和故障轉移切換</li><li>實現類似 Yarn 資源不足時的自動排隊等待功能&nbsp;（K8s 如果設置了資源 Quota，當 Quota 達到上限後，任務會直接失敗）</li><li>增加與 K8s 網絡通信等異常處理、創建或啓動失敗重試等，對偶發的集羣抖動、網絡異常進行容錯</li><li>支持按照不同部門或業務線，對大規模補數任務進行限流和管控功能</li><li>內嵌任務提交失敗、容器創建或啓動失敗以及運行超時等告警功能</li></ul><h3>4. 日誌採集與展示</h3><p>K8s 集羣本身並沒有像 Yarn 那樣提供日誌自動聚合和展示的功能，Driver 和 Executor 的日誌收集需要用户自己來完成。目前比較常見的方案是在各個 K8s Node 上部署 Agent，通過 Agent 把日誌採集並落在第三方存儲上，比如 ES、SLS 等，但這些方式對於習慣了在 Yarn 頁面上點擊查看日誌的用户和開發者來説，使用起來很不方便，用户不得不跳轉到第三方系統上撈取查看日誌。</p><p>為實現 K8s Spark 任務日誌的便捷查看，我們對 Spark 代碼進行了改造，使 Driver 和 Executor 日誌最終都輸出到 OSS 上，用户可以在 Spark UI 和 Spark Jobhistory 上，直接點擊查看日誌文件。</p><p><img src="https://oscimg.oschina.net/oscnet/up-0eace11cc08cce9ab78ba861cb398c35717.png" alt="" referrerpolicy="no-referrer"></p><p>上圖所示為日誌的收集和展示原理，Spark 任務在啓動時，Driver 和 Executor 都會首先註冊一個 Shutdown Hook，當任務結束 JVM 退出時，調用 Hook 方法把完整的日誌上傳到 OSS 上。此外，想要完整查看日誌，還需要對 Spark 的 Job History 相關代碼做下改造，需要在 History 頁面顯示 stdout 和 stderr，並在點擊日誌時，從 OSS 上拉取對應 Driver 或 Executor 的日誌文件，最終由瀏覽器渲染查看。另外，對於正在運行中的任務，我們會提供一個 Spark Running Web UI 給用户，任務提交成功後，spark-operator&nbsp;會自動生成的 Service 和 Ingress 供用户查看運行詳情，此時日誌的獲取通過訪問 K8s 的 api 拉取對應 Pod 的運行日誌即可。</p><h3>5. 彈性與降本</h3><p>基於 ACK 集羣提供的彈性伸縮能力，再加上對 ECI 的充分利用，同等規模量級下的 Spark 任務，運行在 K8s 的總成本要明顯低於在 Yarn 固定集羣上，同時也大大提高了資源利用率。</p><p>彈性容器實例 ECI 是一種 Serverless 容器運行服務，ECI 和 ECS 最大的不同就在於 ECI 是按量秒級計費的，申請與釋放速度也是秒級的，所以 ECI 很適合 Spark 這一類負載峯谷明顯的計算場景。</p><p><img src="https://oscimg.oschina.net/oscnet/up-265d37ec5e9ec1a64b70219ca89169e35bc.png" alt="" referrerpolicy="no-referrer"></p><p>上圖示意了 Spark 任務在 ACK 集羣上如何申請和使用 ECI，使用前提是在集羣中安裝 ack-virtual-node 組件，並配置好 Vswitch 等信息，在任務運行時，Executor 被調度到虛擬節點上，並由虛擬節點申請創建和管理 ECI。</p><p>ECI 分為普通實例和搶佔式實例，搶佔式實例是一種低成本競價型實例，默認有 1 小時的保護期，適用於大部分 Spark 批處理場景，超出保護期後，搶佔式實例可能被強制回收。為進一步提升降本效果，充分利用搶佔式實例的價格優勢，我們對 Spark 進行改造，實現了 ECI 實例類型自動轉換的功能。Spark 任務的 Executor Pod 都優先運行在搶佔式 ECI 實例上，當發生庫存不足或其他原因無法申請創建搶佔式實例，則自動切換為使用普通 ECI 實例，保證任務的正常運行。&nbsp;具體實現原理和轉換邏輯如下圖所示。</p><p><img src="https://oscimg.oschina.net/oscnet/up-47f719ef69ab5b6992ea95f746548cc8ab4.png" alt="" referrerpolicy="no-referrer"></p><h3>6. Celeborn</h3><p>由於 K8s 節點的磁盤容量很小，而且節點都是用時申請、用完釋放的，無法保存大量的 Spark Shuffle 數據。如果對 Executor Pod 掛載雲盤，掛載盤的大小難以確定，考慮到數據傾斜等因素，磁盤的使用率也會比較低，使用起來比較複雜。此外，雖然 Spark 社區在 3.2 提供了 Reuse PVC 等功能，但是調研下來覺得功能尚不完備且穩定性不足。</p><p>為解決 Spark 在 K8s 上數據 Shuffle 的問題，在充分調研和對比多家開源產品後，最終採用了阿里開源的 Celeborn 方案。Celeborn 是一個獨立的服務，專門用於保存 Spark 的中間 Shuffle 數據，讓 Executor 不再依賴本地盤，該服務 K8s 和 Yarn 均可以使用。Celeborn 採用了 Push Shuffle 的模式，Shuffle 過程為追加寫、順序讀，提升數據讀寫性能和效率。</p><p>基於開源的 Celeborn 項目，我們內部也做了一些數據網絡傳輸方面的功能增強、Metrics 豐富、監控告警完善、Bug 修復等工作，目前已形成了內部穩定版本。</p><p><img src="https://oscimg.oschina.net/oscnet/up-08142d767f6df474b0c291a38b188840ab2.png" alt="" referrerpolicy="no-referrer"></p><h3>7. Kyuubi&nbsp;on&nbsp;K8s</h3><p>Kyuubi 是一個分佈式和多租户的網關，可以為 Spark、Flink 或 Trino 等提供 SQL 等查詢服務。在早期，我們的 Spark Adhoc 查詢是發送到 Kyuubi 上執行的。為瞭解決 Yarn 隊列資源不足，用户的查詢 SQL 無法提交和運行的問題，在 K8s 上我們也支持了 Kyuubi Server 的部署運行，當 Yarn 資源不足時，Spark 查詢自動切換到 K8s 上運行。鑑於 Yarn 集羣規模逐漸縮減，查詢資源無法保證，以及保障相同的用户查詢體驗，目前我們已將所有的 SparkSQL Adhoc 查詢提交到 K8s 上執行。</p><p>為了讓用户的 Adhoc 查詢也能在 K8s 上暢快運行，我們對 Kyuubi 也做了一些源碼改造，包括對 Kyuubi 項目中 docker-image-tool.sh、Deployment.yaml、Dockfile 文件的改寫，重定向 Log 到 OSS 上，Spark Operator 管理支持、權限控制、便捷查看任務運行 UI 等。</p><p><img src="https://oscimg.oschina.net/oscnet/up-a97f1245c24b11a2c25c62b1bf824f0c0eb.png" alt="" referrerpolicy="no-referrer"></p><h3>8. K8s&nbsp;Manager</h3><p>在 Spark on K8s 場景下，儘管 K8s 有集羣層面的監控告警，但是還不能完全滿足我們的需求。在生產環境中，我們更加關注的是在集羣上的 Spark 任務、Pod 狀態、資源消耗以及 ECI 等運行情況。利用 K8s 的 Watch 機制，我們實現了自己的監控告警服務 K8s Manager，下圖所示為該服務的示意圖。</p><p><img src="https://oscimg.oschina.net/oscnet/up-530ec8ff85f98c8ff44efed2349011ef832.png" alt="" referrerpolicy="no-referrer"></p><p>K8sManager 是內部實現的一個比較輕量的 Spring Boot 服務，實現的功能就是對各個 K8s 集羣上的 Pod、Quota、Service、ConfigMap、Ingress、Role 等各類資源信息監聽和彙總處理，從而生成自定義的 Metrics 指標，並對指標進行展示和異常告警，其中包括集羣 CPU 與 Memory 總使用量、當前運行的 Spark 任務數、Spark 任務內存資源消耗與運行時長 Top 統計、單日 Spark 任務量彙總、集羣 Pod 總數、Pod 狀態統計、ECI 機器型號與可用區分佈統計、過期資源監控等等，這裏就不一一列舉了。</p><h3>9. 其他工作</h3><h4>9.1 調度任務自動切換</h4><p>在我們的調度系統中，Spark 任務支持配置 Yarn、K8s、Auto 三種執行策略。如果用户任務指明瞭需要運行使用的資源管理器，則任務只會在 Yarn 或 K8s 上運行，若用户選擇了 Auto，則任務具體在哪裏執行，取決於當前 Yarn 隊列的資源使用率，如下圖所示。由於總任務量較大，且 Hive 任務也在不斷遷移至 Spark，目前仍然有部分任務運行在 Yarn 集羣上，但最終的形態所有任務將由 K8s 來託管。</p><p><img src="https://oscimg.oschina.net/oscnet/up-35f4cbad3736b91872ac6f9bd97d486d940.png" alt="" referrerpolicy="no-referrer"></p><h4>9.2 多可用區、多交換機支持</h4><p>Spark 任務運行過程中大量使用 ECI，ECI 創建成功有兩個前提條件: 1、能夠申請到 IP 地址；2、當前可用區有庫存。&nbsp;實際上，單個交換機提供的可用 IP 數量有限，單個可用區擁有的搶佔式實例的總個數也是有限的，因此在實際生產環境中，無論是使用普通 ECI 還是 Spot 類型的 ECI，比較好的實踐方式是配置支持多可用區、多交換機。</p><p><img src="https://oscimg.oschina.net/oscnet/up-f08f0ecc5c0e2ea97499e52e5fd1a5f60c4.png" alt="" referrerpolicy="no-referrer"></p><h4>9.3 成本計算</h4><p>由於在 Spark 任務提交時，都已明確指定了每個 Executor 的 Cpu、Memory 等型號信息，在任務結束 SparkContxt 關閉之前，我們可以從任務的中拿到每個 Executor 的實際運行時長，再結合單價，即可計算出 Spark 任務的大致花費。由於 ECI Spot 實例是隨着市場和庫存量隨時變動的，該方式計算出來的單任務成本是一個上限值，主要用於反映趨勢。</p><h4>9.4 優化 Spark&nbsp;Operator</h4><p>在上線初期任務量較少時，Spark Operator 服務運行良好，但隨着任務不斷增多，Operator 處理各類 Event 事件的速度越來越慢，甚至集羣出現大量的 ConfigMap、Ingress、Service 等任務運行過程中產生的資源無法及時清理導致堆積的情況，新提交 Spark 任務的 Web UI 也無法打開訪問。發現問題後，我們調整了 Operator 的協程數量，並實現對 Pod Event 的批量處理、無關事件的過濾、TTL 刪除等功能，解決了 Spark Operator 性能不足的問題。</p><h4>9.5 升級 Spark&nbsp;K8s&nbsp;Client</h4><p>Spark3.2.2 採用 fabric8(Kubernetes Java Client) 來訪問和操作 K8s 集羣中的資源，默認客户端版本為 5.4.1，在此版本中，當任務結束 Executor 集中釋放時，Driver 會大量發送 Delete Pod 的 Api 請求到 K8s Apiserver 上，對集羣 Apiserver 和 ETCD 造成較大的壓力，Apiserver 的 cpu 會瞬間飆高。</p><p>目前我們的內部 Spark 版本，已將 kubernetes-client 升級到 6.2.0，支持 pod 的批量刪除，解決 Spark 任務集中釋放時，由大量的刪除 Api 請求操作的集羣抖動。</p><h2>問題與解決方案</h2><p>在整個 Spark on K8s 的方案設計以及實施過程中，我們也遇到了各種各樣的問題、瓶頸和挑戰，這裏做下簡單的介紹，並給出我們的解決方案。</p><h3>1.&nbsp;彈性網卡釋放慢</h3><p>彈性網卡釋放速度慢的問題，屬於 ECI 大規模應用場景下的性能瓶頸，該問題會導致交換機上 IP 的劇烈消耗，最終導致 Spark 任務卡住或提交失敗，具體觸發原因如下圖所示。目前阿里雲團隊已通過技術升級改造解決，並大幅提升了釋放速度和整體性能。</p><p><img src="https://oscimg.oschina.net/oscnet/up-24660bc811456fd79a7853a00ff0a09a121.png" alt="" referrerpolicy="no-referrer"></p><h3>2.&nbsp;Watcher 失效</h3><p>Spark 任務在啓動 Driver 時，會創建對 Executor 的事件監聽器，用於實時獲取所有 Executor 的運行狀態，對於一些長時運行的 Spark 任務，這個監聽器往往會由於資源過期、網絡異常等情況而失效，因此在此情況下，需要對 Watcher 進行重置，否則任務可能會跑飛。該問題屬於 Spark 的一個 Bug，當前我們內部版本已修復，並將 PR 提供到了 Spark 社區。</p><p><img src="https://oscimg.oschina.net/oscnet/up-fe6ab9a8837a6d715aa3dbadb128573dc1d.png" alt="" referrerpolicy="no-referrer"></p><h3>3.&nbsp;任務卡死</h3><p>如上圖所示，Driver 通過 List 和 Watch 兩種方式來獲取 Executor 的運行狀況。Watch 採用被動監聽機制，但是由於網絡等問題可能會發生事件漏接收或漏處理，但這種概率比較低。List 採用主動請求的方式，比如每隔 3 分鐘，Driver 可向 Apiserver 請求一次自己任務當前全量 Executor 的信息。</p><p>由於 List 請求任務所有 Pod 信息，當任務較多時，頻繁 List 對 K8s 的 Apiserver 和 ETCD 造成較大壓力，早期我們關閉了定時 List，只使用 Watch。當 Spark 任務運行異常，比如有很多 Executor OOM 了，有一定概率會導致 Driver Watch 的信息錯誤，儘管 Task 還沒有運行完，但是 Driver 卻不再申請 Executor 去執行任務，發生任務卡死。對此我們的解決方案如下:</p><ul><li>在開啓 Watch 機制的同時，也開啓 List 機制，並將 List 時間間隔拉長，設置每 5 分鐘請求一次</li><li>修改 ExecutorPodsPollingSnapshotSource 相關代碼，允許 Apiserver 服務端緩存，從緩存中獲取全量 Pod 信息，降低 List 對集羣的壓力</li></ul><h3>4. Celeborn 讀寫超時、失敗</h3><p>ApacheCeleborn 是阿里開源的一款產品，前身為 RSS(Remote Shuffle Service)。在早期成熟度上還略有欠缺，在對網絡延遲、丟包異常處理等方面處理的不夠完善，導致線上出現一些有大量 Shuffle 數據的 Spark 任務運行時間很長、甚至任務失敗，以下三點是我們針對此問題的解決辦法。</p><ul><li>優化 Celeborn，形成內部版本，完善網絡包傳輸方面的代碼</li><li>調優 Celeborn&nbsp;Master 和 Worker 相關參數，提升 Shuffle 數據的讀寫性能</li><li>升級 ECI 底層鏡像版本，修復 ECI&nbsp;Linux 內核 Bug</li></ul><h3>5. 批量提交任務時，Quota 鎖衝突</h3><p>為了防止資源被無限使用，我們對每個 K8s 集羣都設置了 Quota 上限。在 K8s 中，Quota 也是一種資源，每一個 Pod 的申請與釋放都會修改 Quota 的內容 (Cpu/Memory 值)，當很多任務併發提交時，可能會發生 Quota 鎖衝突，從而影響任務 Driver 的創建，任務啓動失敗。</p><p>應對這種情況導致的任務啓動失敗，我們修改 Spark Driver Pod 的創建邏輯，增加可配置的重試參數，當檢測到 Driver Pod 創建是由於 Quota 鎖衝突引起時，進行重試創建。Executor Pod 的創建也可能會由於 Quota 鎖衝突而失敗，這種情況可以不用處理，Executor 創建失敗 Driver 會自動申請創建新的，相當於是自動重試了。</p><h3>6.&nbsp;批量提交任務時，UnknownHost 報錯</h3><p>當瞬時批量提交大量任務到集羣時，多個 Submit Pod 會同時啓動，並向 Terway 組件申請 IP 同時綁定彈性網卡，存在一定概率出現以下情況，即 Pod 已經啓動了，彈性網卡也綁定成功但是實際並沒有完全就緒，此時該 Pod 的網絡通信功能實際還無法正常使用，任務訪問 Core DNS 時，請求無法發出去，Spark 任務報錯 UnknownHost 並運行失敗。該問題我們通過下面這兩個措施進行規避和解決：</p><ul><li>為每台 ECS 節點，都分配一個 Terway&nbsp;Pod</li><li>開啓 Terway 的緩存功能，提前分配好 IP 和彈性網卡，新 Pod 來的直接從緩存池中獲取，用完之後歸還到緩存池中</li></ul><h3>7. 可用區之間網絡丟包</h3><p>為保障庫存的充足，各 K8s 集羣都配置了多可用區，但跨可用區的網絡通信要比同可用區之間通信的穩定性略差，即可用區之間就存在一定概率的丟包，表現為任務運行時長不穩定。</p><p>對於跨可用區存在網絡丟包的現象，可嘗試將 ECI 的調度策略設定為 VSwitchOrdered，這樣一個任務的所有 Executor 基本都在一個可用區，避免了不同可以區 Executor 之間的通信異常，導致的任務運行時間不穩定的問題。</p><h2>總結與展望</h2><p>最後，非常感謝阿里雲容器、ECI、EMR 等相關團隊的同學，在我們整個技術方案的落地與實際遷移過程中，給予了非常多的寶貴建議和專業的技術支持。</p><p>目前新的雲原生架構已在生產環境上穩定運行了近一年左右的時間，在未來，我們將持續對整體架構進行優化和提升，主要圍繞以下幾個方面:</p><ol><li><p>持續優化雲原生的整體方案，進一步提升系統承載與容災能力</p></li><li><p>雲原生架構升級，更多大數據組件容器化，讓整體架構更加徹底的雲原生化</p></li><li><p>更加細粒度的資源管理和精準的成本控制</p></li></ol></div>
                                    ]]>
            </description>
            <pubDate>Mon, 08 Jan 2024 01:59:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/3874284/blog/10404597</guid>
            <link>https://my.oschina.net/u/3874284/blog/10404597</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[微信團隊確認私密朋友圈存在 bug，現已修復]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>微信團隊今日上午通過微博迴應了「<strong>私密朋友圈存在 bug</strong>」的問題。</p><blockquote><p><img src="https://oscimg.oschina.net/oscnet/up-34320da0579bfc83ad3cb597de2fb3f1a80.png" referrerpolicy="no-referrer"></p><p><em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1930378853%2FNAIzytG5Y%23comment" target="_blank">https://weibo.com/1930378853/NAIzytG5Y</a></u></em></p></blockquote><p>從網友的反饋來看，許多微信用户最近在發佈私密朋友圈時，好友會在入口看到提醒朋友圈更新的「小紅點頭像」。但點進去卻發現對方並沒有發佈新內容。</p><blockquote><p><img src="https://oscimg.oschina.net/oscnet/up-b0fe2ae650294a4d3684dc3e1ef41cb7cc6.png" referrerpolicy="no-referrer"></p><p><img src="https://oscimg.oschina.net/oscnet/up-30399efe2ea7df75517428697b41ed60bf4.png" referrerpolicy="no-referrer"></p><p><img height="1168" src="https://oscimg.oschina.net/oscnet/up-03c6871c585c1eec034fbf03e988cee454d.png" width="994" referrerpolicy="no-referrer"></p></blockquote><p>根據微信團隊的迴應，「私密朋友圈顯示提醒」的 bug 僅在 1 月 1 日當天出現，並且是極小部分用户受影響。</p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 07 Jan 2024 06:04:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/274592</guid>
            <link>https://www.oschina.net/news/274592</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[GNOME 支持 RDP 協議，可通過圖形界面進行遠程登錄]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.phoronix.com%2Fnews%2FGNOME-RDP-Remote-Login" target="_blank">根據 Phoronix 的報道</a></u>，GNOME 桌面環境<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgitlab.gnome.org%2FGNOME%2Fgnome-remote-desktop%2F-%2Fmerge_requests%2F139" target="_blank">最近合併的 PR</a></u>&nbsp;實現了對遠程桌面協議 (RDP) 支持的重要部分。</p><p><img src="https://oscimg.oschina.net/oscnet/up-f8bcbc9835268555ad0adf16dcf7ea5a915.png" referrerpolicy="no-referrer"></p><p>正如 PR 所述，這項功能用於提供圖形化遠程登錄支持。該 PR 自 2022 年 8 月以來一直處於開啓狀態，直到 2024 年 1 月才被合併。該功能的實現依賴於 GNOME Session、GDM 和 GNOME Settings Daemon 等方面的變化，這些變化在過去一年內已經合併。這意味着在&nbsp;3 月發佈的 GNOME 46 版本中，這項功能將會正式上線。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-066aac4e76b43f37a7382fdcadcbfa32300.png" referrerpolicy="no-referrer"></p><p><img src="https://oscimg.oschina.net/oscnet/up-c76d08a2fa57ee735cdd5820ccbdc09d20f.png" referrerpolicy="no-referrer"></p><p>這個功能的具體實現細節包括對標準守護進程的抽象，以及實現了兩種新的行為。第一種是作為系統服務運行，它會在新的 RDP 連接時請求 GDM 啓動一個無 header GDM 登錄會話。第二種是在無 header 用户會話中運行（又名 daemon-handover），它會告訴系統服務使用 handover dbus 接口啓動交接過程。這兩種行為的實現使得 GNOME 桌面環境可以處理圖形遠程登錄的需求。</p><p>此外，這項功能還支持 Wayland。這意味着它不僅可以在 X11 上運行，還可以在 Wayland 上運行。這對於用户來説是一個好消息，因為他們可以在不同的顯示服務器上使用這項功能。</p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 07 Jan 2024 03:07:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/274575/gnome-rdp-remote-login</guid>
            <link>https://www.oschina.net/news/274575/gnome-rdp-remote-login</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Linux 的 Rust 試驗取得成功、Firefox 能否抓住機會……關於開源的 10 條預測]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>LWN 網站聯合創始人兼 Linux 內核維護者 Jonathan Corbet <u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flwn.net%2FSubscriberLink%2F954544%2F666b8433d343147e%2F" target="_blank">分享了他對 2024 年的預測</a></u>，內容包括 <strong>Linux 內核社區的變化、企業級 Linux 發行版的市場受到衝擊</strong>、<strong>Firefox 的未來</strong>、<strong>開源生成式人工智能 (Gen AI) 關注度更高</strong>、<strong>BPF 大有作為</strong>、<strong>Python no-GIL&nbsp;取得成功</strong>，以及<strong>開源項目維護者面臨的危機</strong>，等等。</p><p>下面簡單介紹&nbsp;Jonathan Corbet 的預測內容。</p><hr><p>一、Linux 內核社區開始<strong>不再將郵件列表作為其開發流程的核心</strong>。這一轉變會很緩慢，並且引起許多內核開發者的強烈抵制。但在這個連 Linus 老大都説要<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flwn.net%2FArticles%2F952034%2F" target="_blank">做出改變</a></u>的時代，不可思議的事情很有可能會發生。</p><p>&nbsp;</p><p>二、<strong>Linux 6.12 將是下一個長期穩定版內核</strong>，預計 2024 年 12 月 1 日發佈（除非 Linus 拒絕在美國感恩節假期後立即發佈，這種情況下將在一週後推出）。</p><p>&nbsp;</p><p>三、<strong>首批用户可見的 Rust 代碼最早可能在 Linux 6.8 中合併到內核</strong>。這些代碼初始階段應該不會支持許多系統，但它標誌着一個重要轉變：一旦 Rust 用於用户可見的功能，內核社區將不再可以輕易放棄對該語言的支持。換句話説，將用户可見的 Rust 代碼合併到內核中將宣告 Rust 試驗取得成功。</p><p>&nbsp;</p><p>四、<strong>紅帽的企業級 Linux 發行版市場將在 2024 年受到衝擊</strong>。該市場的控制權此前基本由紅帽 RHEL 統治，但隨着這一領域的競爭日趨激烈，打造穩定版 Linux 不需要再依賴 RHEL，供應商和用户有許多方法可以從 RHEL 手中奪走部分市場。</p><p>&nbsp;</p><p>五、<strong>谷歌在 Chrome 強推"Manifest V3"將引起廣泛抵制</strong>，但如果 Mozilla 今年只是押注人工智能，沒有將重心放在 Firefox 上——幫助全世界擺脱瀏覽器壟斷，<span>Firefox 可能</span>再也沒有這樣的機會來擴大市場份額。</p><p>&nbsp;</p><p>六、<strong>開源生成式人工智能 (Gen AI) 在 2024 將受到更廣泛關注</strong>。部分原因是，在該領域已經有案例證明開源項目比私有項目更具競爭力。而且這些私有平台今年將出現更多關於版權糾紛的事件——從而讓更多人將目光轉移到開源項目上。</p><p>&nbsp;</p><p>七、<strong>對 BPF 而言，今年將是重要的一年</strong>。這並不奇怪，因為過去幾年也是如此。像可擴展調度程序類這樣的項目似乎不會消失。與此同時，思科最近宣佈收購 Isovalent，這可能會為 BPF 開發帶來新的資源，當然也可能會像許多企業收購一樣——毀掉一個重要的 BPF 開發團隊。</p><p>&nbsp;</p><p>八、<span style="background-color:#ffffff; color:#474747"><strong>支持自由線程 (no-GIL) 的首個 Python 版本在 10 月發佈</strong>，並將取得一定的成功。</span></p><p>&nbsp;</p><p>九、<strong>過分追求指標將成為一個更大的問題</strong>。這些指標包括： CVE 數量、提交的錯誤報告、commit 數量、「審查」的補丁、toots 提升、獲得的討論論壇徽章，等等。</p><p>&nbsp;</p><p>十、<strong>開源項目維護者面臨的危機在 2024 將會加劇</strong>。自由開源軟件社區中有許多項目被廣泛依賴，但幾乎沒有得到支持。因此，這些項目往往會面臨進展緩慢、揹負大量技術債、安全問題等等。此現象並不是新鮮事，對於任何一直關注的人來説，它也不是隱藏的。但從所有跡象來看，重度依賴開源項目的公司在 2024 年並不會為它們提供更多的支持。</p></div>
                                    ]]>
            </description>
            <pubDate>Sat, 06 Jan 2024 05:32:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/274474</guid>
            <link>https://www.oschina.net/news/274474</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[2024 前端圈「開年之戰」：React 挖坑不填，要靠文檔來補？]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>起因是一名開發者發表推文讚揚了前端框架 React 的新版官方文檔，稱其直接把「坑」展示出來，並附上例子解釋出錯的原因以及會導致的問題——這種做法十分直觀，能幫助使用者瞭解當前的設計解決了怎樣的問題。</p><blockquote><p><img src="https://oscimg.oschina.net/oscnet/up-29971a818f05761efd952724a36cb5126c4.png" referrerpolicy="no-referrer"></p><p>via&nbsp;<em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftwitter.com%2Fnoworkforsixian%2Fstatus%2F1742574959241908434" target="_blank">https://twitter.com/noworkforsixian/status/1742574959241908434</a></u></em></p></blockquote><p>Vue 作者尤雨溪隨後轉發了這條推文並進行回覆，大意是説 <strong>React 挖了很多坑，但卻沒填上，而是通過文檔提醒用户繞開這些坑</strong>——然而用户不但沒有質疑為什麼會存在這些坑，反而感嘆文檔寫得好，這種心態像是被框架 PUA。</p><blockquote><p><img src="https://oscimg.oschina.net/oscnet/up-7ea2056dd0550b5976e1cb889064c136448.png" referrerpolicy="no-referrer"></p><p>via&nbsp;<em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftwitter.com%2Fyuxiyou%2Fstatus%2F1743174724841243077" target="_blank">https://twitter.com/yuxiyou/status/1743174724841243077</a></u></em></p></blockquote><p>尤雨溪繼續説道：「Vue 也難免有坑，但我如果看到用户以知道怎麼繞開 Vue 的坑而得意，我心裏是很羞愧的，因為我覺得框架應該努力去減少心智負擔而不是讓用户去研究回字有幾種寫法。」</p><blockquote><p><img src="https://oscimg.oschina.net/oscnet/up-313d0b3760ae846d09120fe9b43d629207c.png" referrerpolicy="no-referrer"></p></blockquote></div>
                                    ]]>
            </description>
            <pubDate>Sat, 06 Jan 2024 03:05:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/274449</guid>
            <link>https://www.oschina.net/news/274449</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[中國第三代自主超導量子計算機「本源悟空」即將發佈]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>「本源量子」官方公眾號<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FhUrSXNLwuMaNuARAjkNCYw" target="_blank">發文稱</a></u>，<strong>中國第三代自主超導量子計算機<span style="background-color:#e67e22">「本源悟空</span>」將在 24 小時內正式上線運行。</strong></p><blockquote><p><img src="https://oscimg.oschina.net/oscnet/up-d68339e31821f1a16662b0074f4f7f90016.png" referrerpolicy="no-referrer"></p></blockquote><p>「本源悟空」由中國第一家量子計算公司——本源量子自主研發。該量子計算機搭載 72 位自主超導量子芯片「悟空芯」，<strong>是目前中國最先進的可編程、可交付超導量子計算機</strong>。之所以取名「悟空」是因為 72 位與孫悟空「72 變」相呼應，也是對中國傳統文化的致敬。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-73be5c43630babc9ccfffb36ebd48687acd.png" referrerpolicy="no-referrer"></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-3792a867fb6b39678ea3c63eb1221927ee3.png" referrerpolicy="no-referrer"></p><p>本源量子第一代、第二代超導量子計算機均已交付中國用户使用。本源量子擁有中國首條量子芯片生產線、中國首款量子計算機操作系統、中國首個量子計算測控系統。本源量子計算專利數排名中國第一、全球第六。</p><hr><p>延伸閲讀</p><ul><li><a href="https://www.oschina.net/news/273970" target="news">百度擬將量子實驗室捐贈予北京量子院</a></li><li><a href="https://www.oschina.net/news/269585/ibm-quantum-roadmap-2033" target="news">IBM 公佈下一代量子處理器和 IBM 量子系統二號</a></li><li><a href="https://www.oschina.net/news/268299" target="news">阿里達摩院撤裁量子實驗室，已將實驗室及儀器設備贈予浙江大學</a></li><li><a href="https://www.oschina.net/news/259545" target="news">百度發佈首個量子領域大模型</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Sat, 06 Jan 2024 00:31:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/274432</guid>
            <link>https://www.oschina.net/news/274432</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[總結：停止自嗨、走進用户，努力提供有價值的服務]]>
            </title>
            <description>
                <![CDATA[<div class="content"><ol><li><span><span><span><span><strong><span><span><span><strong>運營總結：</strong></span></span></span></strong></span></span></span></span></li></ol><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span>1、每天在開源市場有 30 個左右的 start，github/gitee:start 總計 270，較上週增長 140，感謝研發同仁對開放籤的認可；</span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span>2、每天陸陸續續諮詢的用户有 5 個左右，感覺客户越來越多了，還沒有成交的客户，這得好好分析自己的不足；</span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span>3、當有客户諮詢我們時，我們首先秉持「能使用開源版就用開源版，實在有企業版本需求再使用企業版。」的原則引導客户，實際上開放籤開源工具版實際用户已經突破</span></span><span><span>1</span></span><span><span>00；</span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span>4、在產品能力、品牌等方面與市場上的老牌服務商（法大大、e 籤寶、上上籤、契約鎖等等前輩們）還有很大差距，比如安裝體驗不好、功能不全、服務不完善等，我們要多向他們學習。 &nbsp;&nbsp;&nbsp;</span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify">&nbsp;</p><ol><li><span><span><span><span><strong><span><span><span><strong>新年工作的第一週，就用自我吐槽的方式激勵開放籤變得更好吧。</strong></span></span></span></strong></span></span></span></span></li></ol><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span>槽點 1：用户體驗做的確實不好，要自責、要學習、要進步、要接受批評；</span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span>槽點 2：運營還很菜，叫好不叫座，要深度刨析問題出在哪裏？不能只關注自己而脱離用户；要大膽的否定自己，還要及時的建立信心；</span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span>槽點 3：內部管理有問題，1、工作目標不清晰，更新內容不能及時的內外同步；2、不能脱離用户，產品更新迭代要考慮、貼近用户。</span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span>&nbsp;</span></span></span></span></p><ol><li><span><span><span><span><strong><span><span><span><strong>開放籤本週更新內容：</strong></span></span></span></strong></span></span></span></span></li></ol><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span>1、優化了開源市場的產品介紹，便於大家更加系統的瞭解開放籤；</span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span>2、企業版增加站內消息服務；</span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span>3、優化了數字證書服務，支持 CA 事件證書；</span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span>4、完成 ofd 文件數字簽名的技術驗證；</span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span>5、優化了開放籤開源工具版、企業版的若干個用户體驗問題；</span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span>6、修改了開放籤開源工具版、企業版的若干個系統 bug。</span></span></span></span></span></span></p><ol><li><span><span><span><span><strong><span><span><span><strong>開放簽下週工作內容：</strong></span></span></span></strong></span></span></span></span></li></ol><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span>1、提供數字證書籤發、數字簽名的接口和 SDK 服務，解決電子籤跨語言、跨平台的問題，讓更多研發用户可以低門檻使用電子簽章能力；</span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span>2、集成 CA 長效證書，支持平台設置證書籤發規則；</span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span>3、優化企業印章樣式：調整印章的樣式及字體，圓章樣式增加信息編碼，支持橢圓章的生成；</span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span>4、修改 PDF 編輯、簽署工具，替換 itext-Pdf 工具版本。</span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><strong><span><span><strong>寫在最後：做工作的過程中要時刻銘記開放籤「開源開放」的價值觀。除了自己監督自己外，還要敢於接受更多的監督。不能脱離用户自嗨。要大膽的否定自己，還能及時的建立信心，相信自己可以做的更好。</strong></span></span></strong></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><strong><span><span><strong>2024，加油</strong></span></span></strong><strong><span><span><strong>！</strong></span></span></strong></span></span></span></span></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 05 Jan 2024 10:24:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/274371</guid>
            <link>https://www.oschina.net/news/274371</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[用 Spring Boot 3.2 虛擬線程搭建靜態文件服務器有多快？]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Spring Boot 3.2 於 2023 年 11 月大張旗鼓地發佈，標誌着 Java 開發領域的一個關鍵時刻。這一突破性的版本引入了一系列革命性的功能，包括：</p><ul><li>虛擬線程：利用 Project Loom 的虛擬線程釋放可擴展性，從而減少資源消耗並增強併發性。</li><li>Native Image 支持：通過 Native Image 編譯製作速度極快的應用程序，減少啓動時間並優化資源利用率。</li><li>JVM 檢查點：利用 CRaC 項目的 JVM 檢查點機制實現應用程序的快速重啓，無需冗長的重新初始化。</li><li>RestClient：採用新的 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.didispace.com%2Farticle%2Foblog%2Fspring-6-1-restclient.html" target="_blank">RestClient</a> 接口的功能方法，簡化 HTTP 交互並簡化代碼。</li><li>Spring for Apache Pulsar：利用 Apache Pulsar 的強大功能實現強大的消息傳遞功能，無縫集成到您的 Spring Boot 應用程序中。</li></ul><p>其中，虛擬線程是最近 Java 版本中引入的最具變革性的特性之一。正如官方文件所述：虛擬線程是輕量級線程，可減少編寫、維護和調試高吞吐量併發應用程序的工作量。線程是可以調度的最小處理單元。它與其他此類單位同時運行，並且在很大程度上獨立於其他此類單元運行。它是 java.lang.Thread 的一個實例。有兩種線程：平台線程和虛擬線程。平台線程是作為操作系統 （OS） 線程的瘦包裝器實現的。平台線程在其底層操作系統線程上運行 Java 代碼，平台線程在平台線程的整個生命週期內捕獲其操作系統線程。因此，可用平台線程數限制為操作系統線程數。與平台線程一樣，虛擬線程也是 java.lang.Thread 的實例。但是，虛擬線程不綁定到特定的操作系統線程。虛擬線程仍在操作系統線程上運行代碼。但是，當在虛擬線程中運行的代碼調用阻塞 I/O 操作時，Java 運行時會掛起虛擬線程，直到它可以恢復為止。與掛起的虛擬線程關聯的操作系統線程現在可以自由地對其他虛擬線程執行操作。虛擬線程適用於運行大部分時間被阻塞的任務，通常等待 I/O 操作完成。但是，它們不適用於長時間運行的 CPU 密集型操作。</p><p>雖然人們普遍認為虛擬線程在 I/O 密集型方案中表現出色，但它們在 CPU 密集型任務中的性能仍然是一個問號。本系列文章深入探討了虛擬線程在各種用例中的潛在優勢，從基本的「hello world」到靜態文件服務（I/O 密集型）、QR 碼生成（CPU 密集型）和多部分/表單數據處理（混合工作負載）等實際應用。</p><p>在本系列的開頭文章中，我們已經瞭解了虛擬線程與物理線程相比在最簡單（且不切實際）的 hello world 情況下的性能。物理線程和虛擬線程之間幾乎沒有任何性能或資源使用差異。在本文中，我們將更加「實用」，並針對靜態文件服務器情況進行比較。這絕對是一個常見且「真實世界」的案例。讓我們看看這次我們發現了什麼。</p><p>如果大家正在做 Spring Boot 2.3 升級 Spring 3.2，這裏順手給大家推薦<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.didispace.com%2Fspring-boot-2%2F10-5.html" target="_blank">Spring Boot 2.x 到 3.2 的升級指南</a>。</p><h2>測試環境</h2><p>所有測試均在配備 16G RAM、8 個物理內核和 4 個效率內核的 MacBook Pro M2 上執行。測試工具是 Bombardier，它是更快的 HTTP 負載測試器之一（用 Go 編寫）。</p><p>軟件版本為：</p><ul><li>Java v21.0.1</li><li>Spring Boot 3.2.1</li></ul><h3>程序配置</h3><p>除了主 Java 類之外，不需要編寫任何 Java 文件，靜態文件服務器只能通過配置就能發揮作用。</p><p><code>application.properties</code>文件如下：</p><pre><code class="language-properties">server.port=3000
spring.mvc.static-path-pattern=/static/**
spring.web.resources.static-locations=file:/Users/mayankc/Work/source/perfComparisons/static/
</code></pre><p>使用虛擬線程時，我們將通過添加以下行來啓用它們：</p><pre><code class="language-properties">spring.threads.virtual.enabled=true
</code></pre><p><code>pom.xml</code>內容：</p><pre><code class="language-xml">&lt;parent&gt;
    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
    &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;
    &lt;version&gt;3.2.1&lt;/version&gt;
    &lt;relativePath/&gt;
 &lt;/parent&gt;
 &lt;groupId&gt;com.example&lt;/groupId&gt;
 &lt;artifactId&gt;demo&lt;/artifactId&gt;
 &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;
 &lt;name&gt;demo&lt;/name&gt;
 &lt;description&gt;Demo project for Spring Boot&lt;/description&gt;
 &lt;properties&gt;
   &lt;java.version&gt;21&lt;/java.version&gt;
 &lt;/properties&gt;
 &lt;dependencies&gt;
   &lt;dependency&gt;
     &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
     &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;
   &lt;/dependency&gt;

  &lt;dependency&gt;
    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
    &lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;
    &lt;scope&gt;test&lt;/scope&gt;
  &lt;/dependency&gt;
 &lt;/dependencies&gt;
</code></pre><h3>測試數據</h3><p>大小完全相同但數據不同的 100K 文件被放置在靜態資源目錄中。每個文件大小正好是 102400 字節。</p><p>文件的命名範圍為 1 到 100000。</p><p>使用 Bombardier 的修改版本，為每次運行生成隨機請求 URL: <code>http://localhost:3000/static/&lt;file-name&gt;</code></p><h3>應用場景</h3><p>為了確保結果一致，每個測試在開始數據收集之前都會經歷 5K 請求預熱階段。</p><p>然後，在不同範圍的併發連接級別（50、100 和 300）中仔細記錄測量結果，每個級別都承受 500 萬個請求工作負載。</p><h3>結果評估</h3><p>除了簡單地跟蹤原始速度之外，我們還將採用詳細的指標框架來捕獲延遲分佈（最小值、百分位數、最大值）和吞吐量（每秒請求數）。</p><p>CPU 和內存的資源使用情況監控將補充此分析，從而提供不同工作負載下系統性能的全面瞭解。</p><h2>測試結果</h2><p>結果以圖表形式呈現如下：</p><p><img src="https://oscimg.oschina.net/oscnet/up-12882e69bbdea0bdc8e3f7b32c12c7b3dfd.png" alt="" referrerpolicy="no-referrer"></p><p><img src="https://oscimg.oschina.net/oscnet/up-db3292be4993ddb87e34c31e9a2694f1ef0.png" alt="" referrerpolicy="no-referrer"></p><p><img src="https://oscimg.oschina.net/oscnet/up-48311e2d40dbf3b3d9533225521068697ed.png" alt="" referrerpolicy="no-referrer"></p><p><img src="https://oscimg.oschina.net/oscnet/up-cdf07a45c601fdb5c24d3223f241fb17b25.png" alt="" referrerpolicy="no-referrer"></p><p><img src="https://oscimg.oschina.net/oscnet/up-72e62b62529f675eef0a6aea08cd9456979.png" alt="" referrerpolicy="no-referrer"></p><p><img src="https://oscimg.oschina.net/oscnet/up-bf8dc5db4d40991f2326eb0829c92aaeee1.png" alt="" referrerpolicy="no-referrer"></p><p><img src="https://oscimg.oschina.net/oscnet/up-d1c9bf51d014855a7e736f4d418fb45b325.png" alt="" referrerpolicy="no-referrer"></p><p><img src="https://oscimg.oschina.net/oscnet/up-4d001a71187efe35a945327bf7b8605d966.png" alt="" referrerpolicy="no-referrer"></p><p><img src="https://oscimg.oschina.net/oscnet/up-dc9cfb5e2916e4ff7437b96652009359662.png" alt="" referrerpolicy="no-referrer"></p><p><img src="https://oscimg.oschina.net/oscnet/up-606f2aaee8e192c177b604f6ea1b84cb330.png" alt="" referrerpolicy="no-referrer"></p><h2>總結</h2><p>對靜態文件服務的分析表明，物理線程在性能和資源效率方面略勝一籌（與我們的預期相反）。</p><p>不過，這種受 I/O 限制的場景可能並不是充分發揮虛擬線程潛力的理想場所。涉及數據庫交互的任務可能會顯示出更多令人信服的優勢。也許負載不足以讓虛擬線程發揮出最大的作用。為了找出答案，我們將在接下來的文章中介紹 URL 短鏈（數據庫驅動）、二維碼生成（CPU 受限）和混合工作負載場景（如表單數據處理），旨在揭示虛擬線程真正出類拔萃的案例。</p><blockquote><p>歡迎關注我的公眾號：程序猿 DD。第一時間瞭解前沿行業消息、分享深度技術乾貨、獲取優質學習資源</p></blockquote></div>
                                    ]]>
            </description>
            <pubDate>Fri, 05 Jan 2024 08:37:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/didispace/blog/10584578</guid>
            <link>https://my.oschina.net/didispace/blog/10584578</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[.NET 8、Mojo🔥、Bun 1.0……最硬核極客的年度發版彙總]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>回顧一下 2023 年最重磅、最極客、最硬核的（開源）項目更新資訊，保證全網最全——如有遺漏，歡迎補充。</p><h4><strong><a href="https://www.oschina.net/news/225892/wine-ce-0-released">Wine-CE 首個正式版發佈，可跨指令架構運行程序的 Wine</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/223655/lineageos-20">LineageOS 20 正式發佈，開源 Android 系統分支</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/226000/flutter-3-7-0-released">Flutter 3.7 穩定版發佈，開源跨平台應用開發工具包</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/227732/meilisearch-v1-enterprise-ready-stable">Meilisearch 1.0 穩定版發佈，Rust 高性能開源搜索引擎</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/230284/pigsty-v2-released">Pigsty v2 正式發佈：更好的 RDS PG 開源替代</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/228112/manticore-search-6-0-0-released">Manticore Search 6 正式發佈，C++ 高性能搜索引擎</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/227257/nutui-4-0-released">京東輕量級移動端組件庫 NutUI 4.0 正式發佈！</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/226769/go-1-20-released">Go 1.20 正式發佈</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/226770/elementary-os-7-released">歷經風波，elementary OS 7 正式發佈</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/228679/homebrew-4-0-0-released">Homebrew 4.0.0 發佈，MacOS 上的包管理器</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/230414/ffmpeg-6-0-released">FFmpeg 6.0 發佈</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/230089/conan-2-0-released">Conan 2.0 發佈，開源 C/C++ 包管理器</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/232912/typescript-5-0-released">TypeScript 5.0 發佈</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/233693/gnome-44-released">GNOME 44 正式發佈</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/236827/rt-thread-5-0-0-released">RT-Thread 5.0.0 發佈，嵌入式實時多線程操作系統</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/230671/godot-4-0-released">開源 3D 遊戲引擎 Godot 正式發佈 4.0</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/230702/ceresdb-1-0-ga">CeresDB 1.0 正式發佈，Rust 高性能雲原生時序數據庫</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/232768/pytorch-2.0-released">PyTorch 2.0 正式發佈，深度學習框架</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/234494/dragonflydb-1-0">開源內存數據庫 DragonflyDB 1.0 正式 GA，可替代 Redis</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/235410/slint-1-0-released">Slint 1.0 正式發佈，Rust 編寫的原生 GUI 工具包</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/236712/ferretdb-1-0-released">FerretDB 1.0 正式 GA，MongoDB 開源替代品</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/238201/layui-2-8-0-released">Layui 2.8.0 正式發佈，樸實歸來</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/239367/foobar2000-2-0-0-released">foobar2000 正式發佈 2.0</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/241121/delphi-11-n-cbuilder-11-ce-released">Delphi 11 和 C++Builder 11 社區版發佈</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/239478/qwik-1-0-released">Qwik 1.0 發佈，全棧式 Web 框架</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/240608/dart-3-released">Dart 3 正式發佈，100% 健全的空安全</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/243957/blink-1-0-released">Blink 1.0 正式發佈， 最小 x86 Linux 模擬器</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/246407/svelte-4-released">前端 UI 框架 Svelte 4 發佈</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/247324/ecmascript-2023">ECMAScript 2023 正式發佈</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/248275/openkylin-1-0-released">openKylin 1.0 重磅發佈</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/251034/arc-browser-1-0-mac-released">Arc 瀏覽器正式發佈 1.0，聲稱是 Chrome 的替代品</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/250365/cython-3-0-released">Cython 3.0 正式發佈</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/226341/autohotkey-v2">AutoHotkey v2 正式發佈，Windows 自動化工具</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/251878/capnproto-1-0-released">比 Protocol Buffers 快無限倍，開源十年後 Cap'n Proto 1.0 終發佈</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/252028/nim-v2-0-released">Nim v2.0 正式發佈，命令式編程語言</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/252385/harmonyos-4">華為正式發佈 HarmonyOS 4</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/253633/apache-doris-2-0-0-released">Apache Doris 2.0.0 版本正式發佈：盲測性能 10 倍提升，更統一多樣的極速分析體驗</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/256102/sudo-rs-0-2-0-first-stable">sudo-rs 發佈首個穩定版 0.2.0：內存安全、用 Rust 重寫的 sudo</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/257450/bun-v1-0">Bun 發佈 1.0 正式版本，Zig 編寫的 JavaScript 運行時</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/258730/jdk-21-lts-ga">Java 21 / JDK 21 (LTS) GA</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/257362/mojo-finally-here">Mojo🔥編程語言開放下載，聲稱比 Python 快 68000 倍</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/255156">Unity 引擎中國版「團結引擎」正式發佈</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/261319/curl-8-4-0">curl 8.4.0 正式發佈</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/263539/yarnpkg-4-0">Yarn 4.0 正式發佈，現代化的軟件包管理器</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/264749/vscode-floating-editor-windows">等了 7 年，vscode 史上呼聲最高的「浮動窗口」 特性，終於實現了</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/266507/dotnet-8-ga">.NET 8 正式 GA</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/267734/php-8-3-ga">PHP 8.3 GA</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/267934/spring-boot-3-2-0-released">Spring Boot 3.2.0 正式發佈</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/267801/fortran-2023">Fortran 2023 發佈</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/267838/rocketrs-0-5-released">Rust Web 框架 Rocket 發佈 v0.5</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/267021/vite5-released">Vite 5 正式發佈，基於原生 ESM 的 Web 開發構建工具</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/264989/openharmony-4-0-released">OpenHarmony 4.0 正式發佈</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/258221/postgresql-16-released">PostgreSQL 16 發佈</a></strong></h4><h4><strong><a href="https://my.oschina.net/u/5674736/blog/10320255">TiDB 7.5 LTS 發版，提升規模化場景下關鍵應用的穩定性和成本的靈活性</a></strong></h4><hr><p>其他年度盤點：</p><ul><li><strong><u><a href="https://www.oschina.net/news/273501">B 站崩了兩次、騰訊「3.29」一級事故……盤點 2023 十大宕機事故「冥場面」</a></u></strong></li><li><strong><u><a href="https://www.oschina.net/news/273843">MySQL 5.7、魔趣、李跳跳……盤點 2023 「停更」的項目和網站</a></u></strong></li></ul><p><span style="background-color:#ffffff; color:#333333">更多年度重磅事件回顧，</span><strong><span style="background-color:#e67e22">查看</span><em><u><a href="https://talk.gitee.com/report/china-open-source-2023-annual-report.pdf?fr=version_news0105"><span style="background-color:#e67e22">《2023 中國開源開發者報告》</span></a></u></em></strong><span style="background-color:#ffffff; color:#333333">。</span></p><p><img height="4950" src="https://oscimg.oschina.net/oscnet/up-59f0466f1d7224fd87f2ba7b06e61d7646e.png" width="3497" referrerpolicy="no-referrer"></p><p><img height="4950" src="https://oscimg.oschina.net/oscnet/up-7fb2d8fe048cf5dd0947b22aec9a0463b92.png" width="3497" referrerpolicy="no-referrer"></p><p><img height="4950" src="https://oscimg.oschina.net/oscnet/up-c3141e286ce5764be869856becde308b405.png" width="3497" referrerpolicy="no-referrer"></p><p><img height="4950" src="https://oscimg.oschina.net/oscnet/up-90a8b7883ea0d0ca9682896df5ff890289a.png" width="3497" referrerpolicy="no-referrer"></p><p><img height="4950" src="https://oscimg.oschina.net/oscnet/up-dce6bebf85fd45c23a47cee46689e2de776.png" width="3497" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 05 Jan 2024 07:26:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/274330</guid>
            <link>https://www.oschina.net/news/274330</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[OpenAI 擬每年投入 100-500 萬美元，以獲取新聞使用許可]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>最近與 OpenAI 進行談判的兩名媒體公司高管表示，OpenAI 願意每年投入 100 萬至 500 萬美元的費用，以與新聞出版公司達成協議，獲得將新聞文章用於訓練大語言模型的權利。</p><p>該公司目前正在與大約十幾家媒體公司進行談判。但 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.theinformation.com%2Farticles%2Fopenai-offers-publishers-as-little-as-1-million-a-year" target="_blank">The Information</a> 認為，即使對於小型出版商來説，這一金額也有點不夠看，可能會讓 OpenAI 很難達成協議。</p><p>12 月，OpenAI 表示已與出版巨頭 Axel Springer 建立合作關係，這是該公司首次與此類出版商建立合作關係。Axel Springer 是一家德國跨國大眾媒體公司，旗下擁有 Business Insider 和 Politico 等品牌。交易的財務條款並未公開，但據這兩位高管稱，交易金額在數千萬美元左右。</p><p><img height="213" src="https://oscimg.oschina.net/oscnet/up-16aa915803cda2a49d68dfc4645ca8d0487.png" width="700" referrerpolicy="no-referrer"></p><p>與此同時，一位高管透露，試圖在生成式 AI 領域趕上 OpenAI 和谷歌的蘋果公司，也在試圖與出版商達成內容使用協議。蘋果提供了更多的資金，但也希望獲得比 OpenAI 更廣泛地使用內容的權利；他們希望能夠以公司認為必要的任何方式將內容用於未來的 AI 產品。</p><p>目前，蘋果公司已經與 Condé Nast（旗下擁有《Vogue》和《紐約客》）以及 NBC News 和 IAC（旗下擁有《The Daily Beast》和《Better Homes and Gardens》）等出版商簽訂了價值約 5000 萬美元的協議。</p><p>《紐約時報》、CNN、路透社和 The Verge 的母公司 Vox Media 最近都禁止 OpenAI 的 GPT 爬蟲訪問數據。《紐約時報》在 12 月還起訴了 OpenAI 和微軟公司，稱這兩家公司非法使用其受版權保護的材料來訓練 AI 模型。此外，還有一些知名作者也對這些公司發起了訴訟。</p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 05 Jan 2024 06:53:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/274326/openai-offers-publishers-little-1m</guid>
            <link>https://www.oschina.net/news/274326/openai-offers-publishers-little-1m</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[生成式 AI 搜索引擎 Perplexity 融資 7360 萬美元]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">生成式 AI 搜索引擎初創公司 Perplexity AI</span>&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.perplexity.ai%2Fblog%2Fperplexity-raises-series-b-funding-round" target="_blank">表示</a><span style="color:#000000">，已成功籌集了 7360 萬美元的 B 輪資金，估值達到 5.2 億美元。迄今為止，該公司共籌集了 1 億美元的資金。</span></p><p><span style="color:#000000">B 輪融資由 Institutional Venture Partners LLC 領投，此前 A 輪和種子輪的現有投資者也參與其中：包括 NEA、Twitter 前副總裁 Elad Gil 和 Databricks Ventures。其他參投的還有 AI 芯片製造商巨頭 Nvidia Corp.、Bessemer Venture Partners、Facility Funds、Kindred Ventures、Shopify 首席執行官 Tobi Lutke 以及 Amazon.com Inc. 創始人 Jeff Bezos（通過 Bezos Expeditions Fund）等新投資者。</span></p><p><img height="281" src="https://oscimg.oschina.net/oscnet/up-cabc1d22fd6561f7feb4dfb9e357cfbde17.png" width="500" referrerpolicy="no-referrer"></p><p><span style="color:#000000">Perplexity 搜索工具的操作方式與傳統搜索引擎不同。它不需要人們輸入提供結果列表的關鍵字，而是允許用户提出問題，搜索引擎以對話方式做出響應。通過這種方式，它可以提供類似於 Google Bard 和 Bing Chat 等 AI 聊天機器人的搜索體驗。</span></p><p><span style="color:#000000">「藉助 Perplexity 的搜索工具，用户可以立即獲得任何問題的可靠答案，幷包含完整的來源和引文。」</span></p><p><span style="color:#000000">Perplexity 由多個 AI 大語言模型提供支持，包括公司內部開發的模型和第三方模型，如谷歌的 Gemini、Mistra 7BI、Anthropic 的 Claude 2.1 和 OpenAI 的 GPT-4。訂購該公司每月 20 美元的專業計劃的用户可以選擇使用的模型，該計劃提供 Perplexity Copilot 功能，可以解鎖個人偏好、文件上傳和圖像生成等許多功能。</span></p><p><span style="color:#000000">公告稱，自一年前公開推出 Perplexity 以來，這款對話式 AI 搜索引擎應用程序的月活躍用户數已增至 1000 萬，到 2023 年已服務了超過 5 億次查詢；移動應用程序已在 iOS 和 Android 上安裝超過一百萬次。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 05 Jan 2024 06:32:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/274324/perplexity-ai-raises-74m</guid>
            <link>https://www.oschina.net/news/274324/perplexity-ai-raises-74m</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
    </channel>
</rss>
