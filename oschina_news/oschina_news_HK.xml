<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[開源中國-最新資訊]]>
        </title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="https://rsshub.app/oschina/news" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[開源中國-最新資訊 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Fri, 02 Feb 2024 07:19:04 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[基於 Netty 開發輕量級 RPC 框架]]>
            </title>
            <description>
                <![CDATA[<div class="content"><blockquote><p>筆者在開發基於客户端/服務端模式通信的插件的時候，需要用到輕量級最小包依賴的 RPC 框架，而市面上的 RPC 框架份量過於龐大，最終打包下來都是幾十兆甚至上百兆，而這裏面大多數功能我都用不上，於是思來想去我決定寫一款屬於自己的輕量級 RPC 框架，簡單易用快速接入。</p></blockquote><span id="OSC_h2_1"></span><h2>關於技術選型</h2><span id="OSC_h3_2"></span><h3>協議序列化/反序列化</h3><p>網絡通信基於 TCP/IP 為基礎自定義應用層協議，常見的序列化/反序列化工具有 java 原生序列化，json,kryo,protobuf,fst,hessian 等。</p><p>在不考慮跨語言的情況下，從序列化時長/序列化大小/易用性/擴展性這幾方面考慮，綜合性比較強的是 kryo，但是 kryo 只支持 java 版本不能跨語言 (據説能跨語言但是非常複雜，相當於不能跨語言了)，protobuf 是性能最強的且支持跨語言，但是需要事先基於 proto 生成一個類，這會導致所有序列化和反序列化的時候只能用 proto 定義的類型。</p><p>最終選擇 kryo 和 protobuf 兩種序列化工具，使用的時候可選序列化類型，前者序列化幾乎不受限制，後者支持跨語言，但是必須事先生成 proto 類型的類並使用其作為序列化工具。</p><span id="OSC_h3_3"></span><h3>通信框架使用</h3><p>高性能異步非阻塞框架非 Netty 不可了，客户端和服務端基於 Netty 開發可事半功倍。</p><p>但是基於 Netty 再加上 zk 連接和各種工具打包完都需要 20M 左右，所以除了 client 和 server 端外，再開發一個 client-mini 模塊，這個模塊是 client 端基於 nio 開發的，性能雖然不如 netty 但是沒有任何依賴，打包下來僅 20kb。</p><span id="OSC_h3_4"></span><h3>服務註冊和發現</h3><p>註冊中心選擇 zookeeper 作為服務註冊和服務發現，當然如果只用單點模式的話其實是不需要註冊中心的，所以 zookeeper 是可選組件。</p><span id="OSC_h2_5"></span><h2>開發 RPC 框架</h2><p>好了，有了上述這些技術就可以步入 RPC 框架的開發了，我這裏分為了以下模塊：</p><ul><li>base : 基礎公共模塊</li><li>protocol : 協議層，包含應用層通信協議，以及序列化/反序列化，支持 kryo 和 protobuf</li><li>registry : 註冊模塊，基於 zookeeper 作為註冊中心，包含註冊服務和服務發現</li><li>server : 服務端</li><li>client : 客户端</li><li>client-mini : 不依賴任何包的客户端，基於 NIO</li></ul><span id="OSC_h3_6"></span><h3>應用層協議</h3><p>首先設計通信協議層，一個 rpc 框架通信的每一次請求主要包含服務名 (serviceName)，函數名 (methodName)，參數類型 (paramTypes) 和參數 (params) 等字段，當然再加上請求唯一 id: traceId</p><pre><code class="language-java">@ShadowEntity  
public class ShadowRPCRequest {  

    @ShadowField(1)  
    private String traceId;  

    @ShadowField(2)  
    private String serviceName;  

    @ShadowField(3)  
    private String methodName;  

    @ShadowField(4)  
    private Class&lt;?&gt;[] paramTypes;  

    @ShadowField(5)  
    private Object[] params;
}

</code></pre><p>上述 ShadowRPCRequest 是基於 kryo 序列化方式進行的一個定義，適合於客户端和服務端都是 java，如果要跨語言，則需要使用 protobuf，protobuf 首先定義一個 request.proto</p><pre><code class="language-proto">syntax = "proto3";  
  
  
package com.liubs.shadowrpc.protocol.entity;  
option java_outer_classname="ShadowRPCRequestProto";  
  
message ShadowRPCRequest {  
    string traceId = 1;  
    string serviceName = 2;  
    string methodName = 3;  
    repeated string paramTypes = 4; //參數類名  
    repeated bytes params = 5; //bytes 類型充當參數  
}

</code></pre><p>由於要跨語言，所以參數用 bytes 的集合類型，反序列化時需要二次解壓縮成具體的類型，但是即便是這樣仍然比 kryo 要快。</p><p>同理，與 ShadowRPCRequest 對應的消息體是響應 ShadowRPCResponse</p><pre><code class="language-java">@ShadowEntity  
public class ShadowRPCResponse {  
 
    @ShadowField(1)  
    private String traceId;  

    @ShadowField(2)  
    private int code;  

    @ShadowField(3)  
    private String errorMsg;  

    @ShadowField(4)  
    private Object result;
}

</code></pre><p>然後就是基於 kryo 和 protobuf 的序列化和反序列化了，kryo 有很多種序列化策略，考慮到函數參數需要支持增減字段，所以 kryo 使用 TaggedField 策略，上面的@ShadowField 註解是我進行的一些簡單的封裝，每次新增字段的時候需要加上註解即可，而 protobuf 天生就支持參數增減字段。</p><p>kryo 的序列化和反序列化如下：</p><pre><code class="language-java">public class KryoSerializer implements ISerializer {  
  
    private static ThreadLocal&lt;Kryo&gt; kryoThreadLocal = ThreadLocal.withInitial(() -&gt; {  
        Kryo kryo = new Kryo();  

        kryo.setDefaultSerializer(new KryoFieldSerializerFactory());  

        kryo.setReferences(false);  
        kryo.setRegistrationRequired(false); //不需要提前註冊  

        //註冊一定會用到的，序列化可以省點空間  
        kryo.register(Class.class);  
        kryo.register(Class[].class);  
        kryo.register(Object[].class);  
        kryo.register(ShadowRPCRequest.class);  
        kryo.register(ShadowRPCResponse.class);  

        return kryo;  
    });  
  
  
  
    @Override  
    public byte[] serialize(Object object) {  

        ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();  
        Output output = new Output(byteArrayOutputStream);  
        kryoThreadLocal.get().writeObject(output, object);  
        output.close();  
        return byteArrayOutputStream.toByteArray();  
    }  
  
    @Override  
    public &lt;T&gt; T deserialize(byte[] array, Class&lt;T&gt; clazz) {  

        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(array);  
        Input input = new Input(byteArrayInputStream);  
        T object = kryoThreadLocal.get().readObject(input, clazz);  
        input.close();  
        return object;  
    }  
}

</code></pre><p>protobuf 的序列化和反序列化則是通過調用生成的 proto 類來實現序列化和反序列化的，</p><p>序列化：</p><pre><code class="language-java">@Override  
public byte[] serialize(Object object) {  
    if (object instanceof MessageLite) {  
    return ((MessageLite) object).toByteArray();  
    }  
    if (object instanceof MessageLite.Builder) {  
    return (((MessageLite.Builder) object).build().toByteArray());  
    }  

    return new byte[0];  
}

</code></pre><p>反序列化:</p><pre><code class="language-java">
public &lt;T&gt; T deserialize(MessageLite messageLite,byte[] array, Class&lt;T&gt; clazz) {  
    return messageLite.getDefaultInstanceForType().getParserForType().parseFrom(array, 0, array.length);
}

</code></pre><span id="OSC_h3_7"></span><h3>消息的粘包/拆包和半包處理</h3><p>TCP/IP 是面向流的協議，操作系統底層其實並不關心我們自定義的應用層協議包是否完整，在高併發情況下，我們一次性發送多個包會被寫入到一個流中，就是所謂的「粘包」，而接收方則需要根據收到的流進行拆分得到具體的包，稱為「拆包」，</p><p><img height="183" src="https://oscimg.oschina.net/oscnet/up-f2a9582fee1ea86078a7229ef8328328729.png" width="600" referrerpolicy="no-referrer"></p><p>比如上面的 A,B,C,D,E,F 是一次性發送的包，但是在發送 D 的時候超過了發送緩衝區被拆分成了 D1 和 D2，而接收方從緩衝區讀取到 A,B,C,D1 的時候完全不知所措，我們需要處理每個包的邊界，並且還需要將第一次包中的 D1 和第二次包中的 D2 進行合併成 D 形成一個完整的包 D。</p><p>業界最常用的方案是，發送方在寫入緩衝區字節流的時候，先寫入消息的長度，再寫入消息字節，而接收方則先讀取長度 n，再讀取 n 個字節，如果字節數不到 n，則重製 position，等下一次讀取消息的時候再讀取完整 n 個長度的字節流形成一個消息包。</p><p>寫入字節流代碼：</p><pre><code class="language-java">int dataLength = data.length;  
out.writeInt(dataLength); // 先寫入消息長度  
out.writeBytes(data); // 寫入序列化後的數據

</code></pre><p>而接收方，用 netty 現成的 LengthFieldBasedFrameDecoder 即可</p><pre><code class="language-java">pipeline.addLast(new LengthFieldBasedFrameDecoder(globalConfig.getMaxFrameLength(),  
0, 4, 0, 4));

</code></pre><p>這裏的 4 表示 4 個字節 (int 類型)，它會先讀取 4 個字節，再讀取字節流，根據長度拆分不同的」Frame「，即我們需要的消息包。</p><span id="OSC_h3_8"></span><h3>Netty 構建通信框架</h3><p>針對 Netty 構建通信網絡初始化，最終目標是實現客户端發送一個 ShadowRPCRequest 消息就能調用服務並返回給客户端 ShadowRPCResponse 消息</p><pre><code class="language-java">NioEventLoopGroup bossGroup = new NioEventLoopGroup();  
NioEventLoopGroup workerGroup = new NioEventLoopGroup();
ServerBootstrap bootstrap = new ServerBootstrap();  
bootstrap.group(bossGroup, workerGroup)  
.channel(NioServerSocketChannel.class)  
.childHandler(new ShadowChannelInitializer(serverConfig))  
.option(ChannelOption.SO_BACKLOG, 128)  
.childOption(ChannelOption.SO_KEEPALIVE, true);  
  
channelFuture = bootstrap.bind(port).sync();

</code></pre><p>childHandler 裏面使用 ShadowChannelInitializer 作為每個連接的處理</p><pre><code class="language-java">public class ShadowChannelInitializer extends ChannelInitializer&lt;SocketChannel&gt; {  
  
    private ServerConfig serverConfig;  

    public ShadowChannelInitializer(ServerConfig serverConfig) {  
    this.serverConfig = serverConfig;  
    }  

    @Override  
    protected void initChannel(SocketChannel ch) throws Exception {  
    ChannelPipeline pipeline = ch.pipeline();  

    //qps 請求量統計  
    if(serverConfig.isQpsStat()) {  
    pipeline.addLast(new QpsStatHandler());  
    }  

    //處理幀邊界，解決拆包和粘包問題  
    pipeline.addLast(new LengthFieldBasedFrameDecoder(serverConfig.getMaxFrameLength(),  
    0, 4, 0, 4));  

    //消息序列化和反序列化  
    pipeline.addLast(new MessageHandler());  

    //服務處理  
    pipeline.addLast(new ServerHandler());  
    }  
}

</code></pre><p>緊接着就是對接收到客户端的 ShadowRPCRequest 消息的處理，ShadowRPCRequest 裏麪包含了服務名，函數名以及參數，考慮到也有可能是 protobuf 類型 ShadowRPCRequestProto，這裏統一轉換成抽象層的 model: RequestModel，字段和 ShadowRPCRequest 都差不多，然後找到對應的服務觸發邏輯和響應 ServerHandler</p><pre><code class="language-java">public class ServerHandler extends ChannelInboundHandlerAdapter {  
  
    @Override  
    public void channelRead(ChannelHandlerContext ctx, Object msg) throws Exception {  

    // 打印驗證影響速度，壓測時去掉  
    //logger.info("Server received: " + msg);  

    IModelParser modelParser = serializeModule.getSerializer().getModelParser();  

    RequestModel requestModel = modelParser.fromRequest(msg);  

    executorService.execute(()-&gt;{  
    try {  

        ServiceLookUp serviceLookUp = new ServiceLookUp();  
        serviceLookUp.setServiceName(requestModel.getServiceName());  
        serviceLookUp.setMethodName(requestModel.getMethodName());  
        serviceLookUp.setParamTypes(requestModel.getParamTypes());  
        ServiceTarget targetRPC = serverModule.getRPC(serviceLookUp);  

        Object result = targetRPC.invoke(requestModel.getParams());  

        ResponseModel responseModel = new ResponseModel();  
        responseModel.setTraceId(requestModel.getTraceId());  
        responseModel.setCode(ResponseCode.SUCCESS.getCode());  
        responseModel.setResult(result);  

        // 響應客户端  
        ctx.writeAndFlush(modelParser.toResponse(responseModel));  
        } catch (Exception e) {  
        e.printStackTrace();  
    }  

    });  

    }  
  
}

</code></pre><p>至於根據 RequestModel 是如何找到對應的服務的，就需要在服務端啓動的時候掃描所有的服務緩存到 serverModule 裏面了，這樣就能通過 serverModule 獲取到 targetRPC</p><pre><code class="language-java">@ShadowModule  
public class ServerModule implements IModule {  
    private static final Logger logger = LoggerFactory.getLogger(ServerModule.class);  

    @ModuleInject  
    private SerializeModule serializeModule;  

    private ServerConfig serverConfig;  

    //所有服務  
    private Map&lt;ServiceLookUp,ServiceTarget&gt; allRPC = new ConcurrentHashMap&lt;&gt;();  

    public void init(ServerConfig serverConfig,List&lt;String&gt; packages) {  
        this.serverConfig = serverConfig;  
        //初始化服務  
        List&lt;ShadowServiceHolder&lt;ShadowService&gt;&gt; shadowServices = new ArrayList&lt;&gt;();  

        for(String packageName : packages) {  
        try {  
        shadowServices.addAll(AnnotationScanner.scanAnnotations(packageName, ShadowService.class));  
        } catch (IOException e) {  
        logger.error("scanService err",e);  
        }  
        }  

        for(ShadowServiceHolder&lt;ShadowService&gt; ShadowServiceHolder : shadowServices) {  
        ShadowService serviceAnnotation = ShadowServiceHolder.getAnnotation();  
        Class&lt;?&gt; serviceClass = ShadowServiceHolder.getClassz();  
        try {  
        Object o = serviceClass.newInstance();  


        for(Method method : serviceClass.getMethods()) {  

        if(Modifier.isStatic(method.getModifiers()) || !Modifier.isPublic(method.getModifiers())){  
        continue;  
        }  

        ServiceLookUp serviceLookUp = new ServiceLookUp();  
        serviceLookUp.setServiceName(serviceAnnotation.serviceName());  
        serviceLookUp.setMethodName(method.getName());  
        serviceLookUp.setParamTypes(method.getParameterTypes());  

        ServiceTarget serviceTarget = new ServiceTarget();  
        serviceTarget.setTargetObj(o);  
        serviceTarget.setMethod(method);  
        addRPCInterface(serviceLookUp,serviceTarget);  
        }  

        } catch (InstantiationException | IllegalAccessException e) {  
        throw new RuntimeException(e);  
        }  
        }  
    }  

    public void addRPCInterface(ServiceLookUp lookUp,ServiceTarget obj) {  
        allRPC.put(lookUp,obj);  
    }  

    public ServiceTarget getRPC(ServiceLookUp lookUp) {  
        return allRPC.get(lookUp);  
    }  
  
  
  
}

</code></pre><span id="OSC_h3_9"></span><h3>客户端調用遠程 rpc 服務</h3><p>剛才我們把服務端接收 ShadowRPCRequest 消息並觸發邏輯返回 ShadowRPCResponse 消息實現了，而在客户端，我們只持有服務端的一個接口，要通過這個接口創建一個遠程服務調用，來實現 rpc 調用，我們最終要實現的效果是這樣的</p><pre><code class="language-java">IHello helloService = shadowClient.createRemoteProxy(IHello.class,"shadowrpc://DefaultGroup/helloservice");  
  
System.out.println("發送 hello 消息");  
String helloResponse = helloService.hello("Tom");  
System.out.println("hello 服務端響應:"+helloResponse);

</code></pre><p>IHello 是一個接口，沒有任何實現類，實現類在服務端，而客户端我們通過創建一個遠程代理的方式就能實現調用接口即發送 ShadowRPCRequest 消息到遠程服務器。</p><p>我們這裏使用動態代理，基於接口創建一個遠程對象</p><pre><code class="language-java">public static &lt;T&gt; T create(IConnection connection, Class&lt;T&gt; serviceStub, final String service) {  
  
    String[] serviceArr = service.replace("shadowrpc://","").split("/");  
    if(serviceArr.length &lt; 2) {  
    throw new IllegalArgumentException("service 參數不符合規範");  
    }  
    String group = serviceArr[0];  
    String serviceName = serviceArr[1];  

    return (T)Proxy.newProxyInstance(  
        serviceStub.getClassLoader(),  
        new Class&lt;?&gt;[]{serviceStub},  
        new RemoteHandler(connection,serviceStub,group,serviceName)  
    );  
}

</code></pre><p>RemoteHandler 中實現代理對象的邏輯，發送消息到遠程服務器</p><pre><code class="language-java">public class RemoteHandler implements InvocationHandler {  
private static final Logger logger = LoggerFactory.getLogger(RemoteHandler.class);  
  
/**  
* 如果不使用註冊中心，則必須有 ShadowClient  
*/  
private IConnection clientConnection;  
  
/**  
* 遠程接口 stub  
*/  
private Class&lt;?&gt; serviceStub;  
  
  
/**  
* 集羣  
*/  
private String group;  
  
/**  
* 服務名  
*/  
private String serviceName;  
  
  
private SerializeModule serializeModule = ModulePool.getModule(SerializeModule.class);  
  
public RemoteHandler(IConnection client, Class&lt;?&gt; serviceStub, String group,String serviceName) {  
    this.clientConnection = client;  
    this.serviceStub = serviceStub;  
    this.group = group;  
    this.serviceName = serviceName;  
}  
  
@Override  
public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {  
  
    try{  
        RequestModel requestModel = new RequestModel();  
        String traceId = UUID.randomUUID().toString();  
        requestModel.setTraceId(traceId);  
        requestModel.setServiceName(serviceName);  
        requestModel.setMethodName(method.getName());  
        requestModel.setParamTypes(method.getParameterTypes());  
        requestModel.setParams(args);  

        IModelParser modelParser = serializeModule.getSerializer().getModelParser();  
        Future&lt;?&gt; future = ReceiveHolder.getInstance().initFuture(traceId);  

        Channel channel = clientConnection.getChannel(group);  

        if(!channel.isOpen()) {  
        logger.error("服務器已關閉,發送消息拋棄...");  
        return null;  
        }  

        try{  
        channel.writeAndFlush(modelParser.toRequest(requestModel)).sync();  
        }catch (Exception e) {  
        logger.error("發送請求{}失敗",traceId);  
        return null;  
        }  

        ResponseModel responseModel = (ResponseModel)future.get(3, TimeUnit.SECONDS);  
        if(responseModel != null) {  
        return responseModel.getResult();  
        }else {  
        ReceiveHolder.getInstance().deleteWait(traceId);  
        logger.error("超時請求,拋棄消息{}",traceId);  
        return null;  
        }  

    }catch (Throwable e) {  
    logger.error("invoke err",e);  
    }  

    return null;  
    }  
}

</code></pre><span id="OSC_h3_10"></span><h3>服務註冊與發現</h3><p>上面實現的客户端和服務端是單節點通信的，要實現服務註冊與發現，需要註冊中心 Registry，服務端向註冊中心註冊服務，客户端訂閲服務節點的變化，獲取到服務節點列表後負載均衡 rpc 調用服務節點的機器。</p><p><img height="426" src="https://oscimg.oschina.net/oscnet/up-a708679e97a8b88ed64a0ec96095d73c4aa.png" width="796" referrerpolicy="no-referrer"></p><p>服務端在啓動的時候註冊服務到 zookeeper</p><pre><code class="language-java">serviceRegistry.registerServer(new ServerNode(group,IPUtil.getLocalIp(),port));

public void registerServer(ServerNode serverNode) {  
    try {  
    String path = ServiceRegistryPath.getServerNodePath(serverNode.getGroup(),  
    ServiceRegistryPath.uniqueKey(serverNode.getIp(),serverNode.getPort()));  
    this.zkNodePath = zooKeeperClient.create(path, serverNode.toBytes());  
    } catch (Exception e) {  
    e.printStackTrace();  
    }  
}

</code></pre><p>即在服務啓動的時候創建節點 /shadowrpc/services/group/node1，這個 node1 的值就是 ip+port，而在服務關閉的時候刪除這個節點</p><pre><code class="language-java">zooKeeperClient.delete(zkNodePath);

</code></pre><p>客户端就可以獲取 zk 下/shadowrpc/services/group 目錄下的所有節點，監聽目錄變化，動態維護服務端的列表</p><pre><code class="language-java">ServiceDiscovery serviceDiscovery = new ServiceDiscovery(ZK_URL);

//監聽增量變化事件  
//初始化狀態會同步 SERVER_ADDED 事件，所以不用獲取全量  
serviceDiscovery.watchService(group, (changeType, serverNode) -&gt; {  
    if(changeType == ServerChangeType.SERVER_ADDED) {  
        System.out.println("Child added: " + serverNode);  

        ShadowClient shadowClient = new ShadowClient(serverNode.getIp(),serverNode.getPort(),eventLoopGroup);  
        shadowClient.init();  
        finalShadowClients.add(shadowClient);  
    }else if(changeType == ServerChangeType.SERVER_REMOVED){  
        System.out.println("Child removed: " + serverNode);  

        Iterator&lt;ShadowClient&gt; iterator = finalShadowClients.iterator();  
        while(iterator.hasNext()) {  
            ShadowClient shadowClient1 = iterator.next();  
            if(serverNode.getIp().equals(shadowClient1.getRemoteIp()) &amp;&amp; serverNode.getPort() == shadowClient1.getRemotePort()) {  
                shadowClient1.close();  
                iterator.remove();  
            }  
        }  
    }
});

</code></pre><p>然後維護這個 List&lt;ShadowClient&gt;表示所有服務器列表的連接的增加和刪除，最後負載均衡從這個 List 裏面獲取連接源發送消息到遠程即可。</p><pre><code class="language-java">    int nextBalance = pollingBalance.getNextBalance();  
    shadowClientGroup.getShadowClients(group).get(nextBalance).writeAndFlush(message).sync();

</code></pre><span id="OSC_h3_11"></span><h3>精簡版 Client</h3><p>剛才的 Client 和 Server 都是使用 Netty 作為異步非阻塞框架搭建的，有的時候對性能要求不高但是對最終的包大小有要求的時候 (比如開發 IDEA 插件最好是 kb 級別的)，我們這裏基於 NIO 來的 Reactor 模式來搭建一套簡單版的 rpc client。</p><p>我們還是參考上面的 client，想服務端發送 Request 消息，下面是對 NIO 的一個簡單封裝 NIOClient</p><pre><code class="language-java">public void connect() throws IOException, ConnectTimeoutException {  
    socketChannel = SocketChannel.open();  
    socketChannel.configureBlocking(false);  
    selector = Selector.open();  
    socketChannel.register(selector, SelectionKey.OP_CONNECT);  

    socketChannel.connect(new InetSocketAddress(host, port));  
    isRunning = true;  

    //reactor 模式  
    this.nioReactor = new NIOReactor(this);  
    nioReactor.start();  

    //等待連接完成  
    try{  
    waitConnection.get(nioConfig.getConnectTimeout(), TimeUnit.MILLISECONDS);  
    } catch (InterruptedException | ExecutionException | TimeoutException e) {  
    isRunning = false;  
    throw new ConnectTimeoutException(String.format("連接服務器%s:%d 超時",host,port));  
    }  
}
    
public MessageSendFuture sendMessage(byte[] bytes) {  
    if(null == bytes || bytes.length == 0) {  
    return null;  
    }  

    ByteBuffer writeBuffer = ByteBuffer.allocate(4 + bytes.length); // 4 bytes for length field  
    writeBuffer.putInt(bytes.length); // Write length of the message  
    writeBuffer.put(bytes); // Write message itself  
    writeBuffer.flip();  

    // Add to write queue  
    MessageSendFuture future = new MessageSendFuture(writeBuffer);  
    writeQueue.add(future);  

    // Change interest to OP_WRITE  
    SelectionKey key = socketChannel.keyFor(selector);  
    if(!key.isValid()) {  
    return null;  
    }  
    key.interestOps(SelectionKey.OP_WRITE);  
    selector.wakeup();  

    return future;  
}

</code></pre><p>這裏寫入消息 sendMessage 的時候，也是先寫入長度 4 字節 bytes.length，再寫入 bytes。</p><p>下面是基於 Reactor 模式實現對連接消息，讀寫消息的統一處理</p><pre><code class="language-java">while (nioClient.isRunning()) {  
    try {  
    if (selector.select() &gt; 0) {  
    processSelectedKeys();  
    }  
    } catch (IOException e) {  
    logger.error("selector err",e);  
    }  
}
    
private void processSelectedKeys() throws IOException {  
    Set&lt;SelectionKey&gt; selectedKeys = selector.selectedKeys();  
    Iterator&lt;SelectionKey&gt; iter = selectedKeys.iterator();  

    while (nioClient.isRunning() &amp;&amp; iter.hasNext()) {  
    SelectionKey key = iter.next();  

    if (key.isConnectable()) {  
    handleConnect(key);  
    }  
    if (key.isWritable()) {  
    handleWrite(key);  
    }  
    if (key.isReadable()) {  
    handleRead(key);  
    }  
    iter.remove();  
    }  
}  

</code></pre><p>而對讀消息的拆包和半包處理原理也是和上面一樣的，也是讀取長度 4 字節，再讀取對應長度的字節，如果不夠重置 ByteBuffer 的 position 用於下次讀取,這裏是一個精簡版本</p><pre><code class="language-java">private void handleRead(SelectionKey key) {  
  
    ByteBuffer buffer = readByteBuffer;  

    int numRead = 0;  
    try {  
        numRead = socketChannel.read(buffer);  
    } catch (IOException e) {  
        handleClose(key);  
        return;  
    }  

    if (numRead &gt; 0) {  
        buffer.flip(); // 切換到讀模式  
        // 處理緩衝區中的所有數據  
        while (buffer.remaining() &gt; 4) { // 確保有足夠的數據讀取長度字段  
            buffer.mark();  
            int length = buffer.getInt();  
            //System.out.printf("read length=%d,remain=%d\n",length,buffer.remaining());  

            if (length &lt;= buffer.remaining()) {  
            byte[] data = new byte[length];  
                buffer.get(data);  
                nioClient.getReceiveMessageCallBack().handleMessage(data);  
            } else {  
                // 數據長度不足以構成一個完整的消息，重置並退出循環  
                buffer.reset();  
                break;  
            }  
        }  

        if (buffer.hasRemaining()) {  
            buffer.compact(); // 移動未處理數據到緩衝區開始位置  
        } else {  
            buffer.clear(); // 如果沒有剩餘數據，清空緩衝區  
        }  

        lastActiveTime = System.currentTimeMillis();  

    } else if (numRead &lt; 0) {  
        //接收到-1 表示服務器關閉  
        handleClose(key);  
    }  
}

</code></pre><span id="OSC_h2_12"></span><h2>RPC 框架的使用</h2><p>經過上述酣暢淋漓的 rpc 框架搭建，基本五臟俱全的 rpc 框架 ShadowRPC 就搭建完成了，下面是一些服務例子。</p><span id="OSC_h3_13"></span><h3>定義實體類</h3><pre><code class="language-java">@ShadowEntity
public class MyMessage {
    @ShadowField(1)
    private String content;

    @ShadowField(2)
    private int num;
}

</code></pre><p>如果是 protobuf 方式，可定義描述文件</p><pre><code class="language-proto">message MyMessage {
    string content = 1;
    int32 num = 2;
}

</code></pre><p>然後直接用 maven 插件 protobuf-maven-plugin 生成實體</p><span id="OSC_h3_14"></span><h3>編寫接口和服務類</h3><pre><code class="language-java">@ShadowInterface
public interface IHello {
    String hello(String msg);
    MyMessage say(MyMessage message);
}

</code></pre><p>protobuf 方式的接口需要保證參數和返回類型都是 protobuf 定義的類型</p><pre><code class="language-java">@ShadowInterface
public interface IHelloProto {
    MyMessageProto.MyMessage say(MyMessageProto.MyMessage message);
}

</code></pre><p>然後編寫服務實現類</p><pre><code class="language-java">@ShadowService(serviceName = "helloservice")
public class HelloService implements IHello {
    @Override
    public String hello(String msg) {
        return "Hello,"+msg;
    }
    @Override
    public MyMessage say(MyMessage message) {
        MyMessage message1 = new MyMessage();
        message1.setContent("hello received "+"("+message.getContent()+")");
        message1.setNum(message.getNum()+1);
        return message1;
    }
}

</code></pre><span id="OSC_h3_15"></span><h3>指定序列化類型和端口，啓動服務端</h3><p>單點啓動模式如下:</p><pre><code class="language-java">ServerConfig serverConfig = new ServerConfig();
        serverConfig.setQpsStat(true); //統計 qps
        serverConfig.setPort(2023);

ServerBuilder.newBuilder()
        .serverConfig(serverConfig)
        .addPackage("rpctest.hello")
        .build()
        .start(); 

</code></pre><p>使用 zk 作為集羣模式啓動</p><pre><code class="language-java">String ZK_URL = "localhost:2181";
ServerConfig serverConfig = new ServerConfig();
serverConfig.setGroup("DefaultGroup");
serverConfig.setPort(2023);
serverConfig.setRegistryUrl(ZK_URL);
serverConfig.setQpsStat(true); //統計 qps
serverConfig.setSerializer(SerializerEnum.KRYO.name());
ServerBuilder.newBuilder()
                .serverConfig(serverConfig)
                .addPackage("rpctest.hello")
                .build()
                .start();

</code></pre><span id="OSC_h3_16"></span><h3>客户端調用 rpc 服務</h3><pre><code class="language-java">ModulePool.getModule(ClientModule.class).init(new ClientConfig());

ShadowClient shadowClient = new ShadowClient("127.0.0.1",2023);
shadowClient.init();

IHello helloService = shadowClient.createRemoteProxy(IHello.class,"shadowrpc://DefaultGroup/helloservice");

logger.info("發送 hello 消息");
String helloResponse = helloService.hello("Tom");
logger.info("hello 服務端響應:"+helloResponse);

MyMessage message = new MyMessage();
message.setNum(100);
message.setContent("Hello, Server!");

System.out.printf("發送請求 : %s\n",message);
MyMessage response = helloService.say(message);
System.out.printf("接收服務端消息 : %s\n",response);    

</code></pre><p>使用 zk 作為服務發現負載均衡調用各個服務器</p><pre><code class="language-java">ClientConfig config = new ClientConfig();
config.setSerializer(SerializerStrategy.KRYO.name());
ModulePool.getModule(ClientModule.class).init(config);
String ZK_URL="localhost:2181";
ShadowClientGroup shadowClientGroup = new ShadowClientGroup(ZK_URL);
shadowClientGroup.init();

IHello helloService = shadowClientGroup.createRemoteProxy(IHello.class, "shadowrpc://DefaultGroup/helloservice");
List&lt;ShadowClient&gt; shadowClientList = shadowClientGroup.getShadowClients("DefaultGroup");

System.out.println("所有服務器: "+shadowClientList.stream().map(c-&gt; c.getRemoteIp()+":"+c.getRemotePort()).collect(Collectors.toList()));

for(int i = 0 ;i&lt;shadowClientList.size() * 5; i++) {
    String hello = helloService.hello(i + "");
    System.out.println(hello);
}

</code></pre><span id="OSC_h2_17"></span><h2>性能測試</h2><p>目前 Mac 筆記本 16G 4 核測試的 rpc 調用 hello 邏輯，如果使用 kryo 序列化/反序列化，100w 個請求耗時 27 秒，平均 QPS 為 3.7w，如果使用 protobuf 序列化/反序列化耗時 25 秒, 平均 QPS 為 4w，如果用 M1 芯片的 Mac，平均 QPS 可以達到 7W+，最高 QPS 可以達到 10w+。</p><span id="OSC_h2_18"></span><h2>源碼</h2><p>篇幅有限，介紹的時候不夠完整有些遺漏，所有源碼見: <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FLiubsyy%2FShadowRPC" target="_blank">https://github.com/Liubsyy/ShadowRPC</a><br> 目前僅供學習交流使用，後續我將逐步打磨此 rpc 框架達到企業級水準。</p><blockquote><p>本 RPC 框架使用的方案和技術棧都是業界通用，項目中部分源碼如有雷同純屬巧合。</p></blockquote></div>
                                    ]]>
            </description>
            <pubDate>Fri, 02 Feb 2024 07:11:01 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/3276866/blog/10993751</guid>
            <link>https://my.oschina.net/u/3276866/blog/10993751</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[VS Code 1.86 會導致遠程開發功能無法使用]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Visual Studio Code 今日發佈的最新版 <u><a href="https://www.oschina.net/news/277414/vs-code-1-86-released">1.86</a></u><span>&nbsp;引入一項嚴重的破壞性變化，其</span>遠程開發服務器工具鏈<span>最低環境要求的&nbsp;</span>glibc 版本提升為 2.28。</p><p>由於&nbsp;Ubuntu 18.04 LTS 使用 glibc 2.27，因此有開發者發現自己升級到 VS Code 新版本後，使用 Remote SSH 無法連接到遠程機器。</p><blockquote><p><img src="https://oscimg.oschina.net/oscnet/up-7159057b7f201b731192ad420804af1891b.png" referrerpolicy="no-referrer"></p><p><u><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fv2ex.com%2Ft%2F1013590" target="_blank">https://v2ex.com/t/1013590</a></em></u></p></blockquote><p>對於該問題，目前的解決方案有兩種：</p><ul><li><strong>根據對應的發行版，升級至 Ubuntu 20.04 LTS、Debian 10 或 RHEL 8</strong></li><li><strong>降級到 VS Code 1.85</strong></li></ul><blockquote><p><img src="https://oscimg.oschina.net/oscnet/up-cd7781af0c011f485dda9a5d8b8df221d79.png" referrerpolicy="no-referrer"></p></blockquote><p><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fdocs%2Fremote%2Ffaq%23_can-i-run-vs-code-server-on-older-linux-distributions" target="_blank">詳情查看官方 FAQ</a></u>。</p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 02 Feb 2024 06:23:21 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/277439/vscode-1-86-drops-ubuntu-18-04</guid>
            <link>https://www.oschina.net/news/277439/vscode-1-86-drops-ubuntu-18-04</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[CPU vs GPU：不僅僅是一字之差]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>當今科學技術的飛速發展，社會已經邁入了信息時代的智能化階段。人臉識別、智能客服、個性化推薦等應用已經深入到日常生活的各個方面。這些看得見的應用背後，是看不見的算力在默默地支撐着。在滿足這些高算力需求的過程中，CPU 和 GPU 作為計算機的核心組件發揮着重要的承載作用。那麼，CPU 和 GPU 到底是什麼？它們又有什麼區別？</p><p>隨着數據成為五大生產要素之一，算力的作用變得愈發重要。算力即計算能力（Computing Power），更具體來説，<strong>算力是指數據中心的服務器通過對數據進行處理後實現結果輸出的一種能力。</strong></p><p>算力的概念起源於計算機的發明初期。最早的計算機是由機械裝置完成計算任務，而算力指的就是這些機械裝置的計算能力。隨後，半導體技術的出現和發展，集成電路問世，開啓了芯片時代。計算機在芯片的加持下，功能越來越強大，體積也越來越小，最終誕生了個人計算機（PC），成為人類最重要的算力工具。</p><p>而後人工智能和大數據技術的迅猛發展也帶動了算力需求的飛速增長。無論是訓練複雜的神經網絡模型，還是進行大規模數據分析和處理，算力都扮演着至關重要的角色。如今，<strong>芯片已經成為算力的主要載體</strong>。當我們談論算力時，實際上是在討論 CPU 和 GPU 等芯片的計算能力。在計算機科學領域，CPU 和 GPU 作為計算機的核心組件，雖然名字只有「一字之差」，但其結構和功能卻大不相同。</p><span id="OSC_h1_1"></span><h1><strong>1 CPU vs GPU: 概念</strong></h1><p><strong>CPU（Central Processing Unit），即中央處理器</strong>，是電腦、手機等眾多電子產品的「心臟」。在我們日常生活的諸多場景中，如觀看視頻、玩遊戲、聊天互動等，<strong>CPU 發揮着統一指揮和調度的關鍵作用</strong>。它主要負責執行程序指令、進行算術和邏輯運算以及控制和協調計算機各個部件。</p><p>為了滿足處理各種不同數據的強大通用性能，CPU 的內部結構設計非常複雜。CPU 由多個核心組成，每個核心又包含算術邏輯單元、控制單元和高速緩存等組件，並且可以獨立地執行任務。至今為止，所有的 CPU 都遵循馮·諾依曼體系結構的基本工作流程：取指令，指令譯碼，執行指令，數據回寫，然後再取下一個指令、譯碼、執行、回寫，重複進行直到程序結束。通過這種工作流程，CPU 能夠有效地執行程序，並控制整個系統的運行。</p><p style="text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-10e85bcb595265cd760feadac4d6ff9b532.png" referrerpolicy="no-referrer"></p><p style="text-align:center">CPU 工作流程</p><p>然而，隨着計算機的普及，人們對圖形顯示的要求不斷提高，例如在進行復雜的三維建模時，需要處理大量的圖形數據以呈現逼真的效果；在玩大型遊戲時，要求系統能夠處理高分辨率的畫面和複雜的遊戲場景。儘管 CPU 內部採用了各種方法來加速指令執行，但隨着任務的增多，CPU 的性能顯得有些力不從心。</p><p>面對這個問題，能否考慮增加更多的 CPU 來解決呢？這固然是一種思路，但這涉及到相當高的成本，並且堆疊數量也不能保證完全解決計算能力不足的問題。這時候聰明的開發者就提出了一個更巧妙的解決方案：既然 CPU 的計算能力有限，為什麼不將計算單元堆疊在同一塊芯片上，讓它們處理大量運算的任務呢？於是，GPU 誕生了。</p><p><strong>GPU（Graphics Processing Unit），即圖形處理器，</strong> 顧名思義，一種專門用來處理圖形和圖像計算的處理器。<strong>GPU 最初是為圖形渲染和顯示而設計的，用於加速計算機中圖像的處理</strong>，例如在視頻遊戲、電影渲染、圖形設計等方面。它只有少量的控制單元和緩存單元，絕大部分的空間用來堆放運算單元，主要負責完成許多計算密集型任務。</p><span id="OSC_h1_2"></span><h1><strong>2 CPU vs GPU: 「差」在哪裏？</strong></h1><p>通過引入 GPU，計算機系統可以充分利用其強大的並行計算能力，加速圖形和圖像相關的計算任務。CPU 負責邏輯任務，而 GPU 來處理大量簡單重複的計算任務，這種不同類型的任務分配給不同類型的處理器的模式，大大提高了系統性能。那麼，CPU 和 GPU 到底「差」在哪裏呢？</p><p><strong>2.1 架構組成</strong></p><p>CPU 和 GPU 之間存在顯著差異，是因為它們各自針對不同的目標和需求來設計，具體體現在：</p><ul><li><p>CPU 需要有強大的通用性，以處理各種不同類型的數據，同時需要進行邏輯判斷，包括大量的分支跳轉和中斷處理，這導致內部結構異常複雜。</p></li><li><p>GPU 主要面向類型高度統一、相互無依賴的大規模數據，並在純淨的計算環境中執行，因此不需要處理複雜的邏輯操作。</p></li></ul><p>這就導致了 CPU 和 GPU 呈現出非常不同的架構：</p><p style="text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-8aa6a52075b93619752a89167782aee5119.png" referrerpolicy="no-referrer"></p><p style="text-align:center">CPU 基本架構</p><p style="text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-c3ccf2310c31a2e6354388180ec4615ba97.png" referrerpolicy="no-referrer"></p><p style="text-align:center">GPU 基本架構</p><p>CPU 擁有較大的緩存單元以及複雜的邏輯控制單元，相比之下計算能力只是 CPU 很小的一部分。而 GPU 則擁有數量眾多的計算單元和超長的流水線，但只有非常簡單的邏輯控制以及較小的緩存單元。</p><p><strong>2.2 設計理念</strong></p><p>CPU 和 GPU 的設計理念也截然不同。首先，<strong>CPU 是基於低延遲（Low Latency）設計的</strong>：</p><ul><li><p><strong>強大的運算單元：</strong> CPU 擁有數量較少但是單個計算性能更強的運算單元，可以減少操作延時，更快地響應。</p></li><li><p><strong>大容量緩存：</strong> 將一部分數據存儲到高速緩存當中，使得高延遲的內存訪問轉換為低延遲的緩存訪問。</p></li><li><p><strong>複雜的控制單元：</strong> 分支預測（Branch Prediction）機制可以降低分支延時；數據轉發（Data Forwarding）機制降低數據延時。</p></li></ul><p>而&nbsp;<strong>GPU 則是基於高通量（High Throughput）設計的</strong>：</p><ul><li><p><strong>精簡的運算單元：</strong> GPU 擁有大量的運算單元，雖然單個單元的性能比不上 CPU，但可以支持非常多的線程（Thread）從而達到非常大的吞吐量。</p></li><li><p><strong>小容量緩存：</strong> 與 CPU 不同，GPU 緩存的目的並不是用來存儲後面需要訪問的數據，而是為線程提供服務，如果有很多線程需要訪問同一個相同的數據，緩存會合並這些訪問，然後再去訪問內存。</p></li><li><p><strong>簡單的控制單元：</strong> GPU 的控制單元沒有分支預測和數據轉發機制。</p></li></ul><p>總的來説，CPU 擁有數量相對少（一般不超過兩位數）但能力更強的核心，能夠更快地處理單個任務，因而它尤其適合處理串行任務和邏輯控制等類型的工作。相比之下，GPU 擁有成百上千核，雖然每個核心運算能力較低，但可以將複雜任務分解成非常多的子任務再並行處理。</p><p style="text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-9572c4d616cb11ca84427a84df0d2e95c1d.png" referrerpolicy="no-referrer"></p><p style="text-align:center">串行處理過程</p><p style="text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-d325166b8458a82bfd616ed21119309a3aa.png" referrerpolicy="no-referrer"></p><p style="text-align:center">並行處理過程</p><p><strong>2.3 適用場景</strong></p><p>CPU 與 GPU 二者的設計目的並不一樣，因而適用的場景也截然不同。<strong>CPU 更擅長一次處理一項任務，而 GPU 則可以同時處理多項任務。</strong></p><p>用一個形象的比喻來解釋。CPU 就像是一架高速飛機，而 GPU 則相當於一隊貨櫃船。它們的任務是將大量貨物從 A 位置迅速運送到 B 位置。雖然 CPU（飛機）速度非常快，但每次只能攜帶少量的貨物，需要多次往返才能完成任務。相比之下，GPU（貨櫃船）雖然單次執行速度相對較慢，但通過協同工作，每艘都能同時攜帶一部分貨物，最終以集體的力量高效完成運輸任務。</p><p style="text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-b63aae29f97580397fb69a6ed0ae951f0e5.png" referrerpolicy="no-referrer"></p><p style="text-align:center">CPU 與 GPU 處理任務對比</p><p>因此，雖然 CPU 單次執行任務的時間更快，但是在需要大量重複工作負載時，GPU 優勢就越顯著。而當遇到前後計算步驟嚴密關聯的計算場景，這些任務涉及到「流」的問題，必須先計算完第一步，再去計算第二步。或是需要進行大量邏輯判斷和複雜計算的任務，比如運行操作系統、處理日常辦公任務、進行單線程編程等。這種時候，使用 GPU 的效率反而沒有 CPU 高。</p><p>綜上所述，CPU 是個集各種運算能力的大成者。它的優點在於調度、管理、協調能力強，並且可以做複雜的邏輯運算，但由於運算單元和內核較少，只適合做相對少量的運算。GPU 無法單獨工作，它相當於一大羣接受 CPU 調度的流水線員工，適合做大量的簡單運算。<strong>CPU 和 GPU 在功能上各有所長，互補不足，通過相互配合使用，實現最佳的計算性能</strong>。</p><p>因此，雖然 CPU 單次執行任務的時間更快，但是在需要大量重複工作負載時，GPU 優勢就越顯著。而當遇到前後計算步驟嚴密關聯的計算場景，這些任務涉及到「流」的問題，必須先計算完第一步，再去計算第二步。或是需要進行大量邏輯判斷和複雜計算的任務，比如運行操作系統、處理日常辦公任務、進行單線程編程等。這種時候，使用 GPU 的效率反而沒有 CPU 高。</p><p>綜上所述，CPU 是個集各種運算能力的大成者。它的優點在於調度、管理、協調能力強，並且可以做複雜的邏輯運算，但由於運算單元和內核較少，只適合做相對少量的運算。GPU 無法單獨工作，它相當於一大羣接受 CPU 調度的流水線員工，適合做大量的簡單運算。<strong>CPU 和 GPU 在功能上各有所長，互補不足，通過相互配合使用，實現最佳的計算性能</strong>。</p><span id="OSC_h1_3"></span><h1><strong>3 CPU vs GPU: 演進與發展</strong></h1><p>技術的不斷更新推動着計算機領域的快速發展，而在這個不斷演進的過程中，CPU 和 GPU 也在持續發展。在過去的幾十年裏它們在各自的領域取得了顯著的突破，為計算機應用提供了更高的性能和效率。這不僅推動了數字化時代信息技術的發展，也為各個領域帶來了新的可能性。</p><p><strong>3.1 揚長避短，穩步前進</strong></p><p>CPU 擁有強大的指令處理和計算能力（這裏強大的計算能力是指 CPU 可以勝任更復雜的計算任務），通常用於處理計算機的核心工作，包括解釋計算機指令和處理計算機軟件中的數據。例如我們在使用個人計算機時，用户和各種軟件會不斷地產生指令流，CPU 要完成的一個重要工作就是負責處理這些指令，保證它們按照規定的順序執行。此外，CPU 還要負責處理計算機軟件所產生的類型多樣且邏輯複雜的數據。</p><p>距離第一塊 CPU 4004 的誕生已經過去了五十多年，儘管與早期相比，CPU 在物理形態、設計製造和具體任務的執行上有了極大的發展，但是其基本的操作原理一直沒有改變。換句話來説 <strong>，CPU 的功能和使用場景並沒有發生較大的改變，無非是在能耗、性能以及可靠性上面不斷地優化。</strong></p><p><strong>3.2 GPU 加速應用遍地開花</strong></p><p>3.2.1 從 GPU 到 GPGPU</p><p>GPU 的概念在 1999 年 NVIDIA 公司發佈 GeForce 256 時被首次提出， 在早期，GPU 主要用於 3D 圖形渲染。但與 CPU 不同，隨着 GPU 的功能和運算能力越來越強大，開發者開始探索除了圖形處理之外，GPU 還能做什麼？</p><p>在 2003 年，NVIDIA 推出新產品 GeForce 8800 GTX 時，首次提出了 GPGPU（General-purpose computing on Graphics Processing Unit）的概念，即通用圖形處理器，意指利用 GPU 的計算能力，在非圖形處理領域進行更通用、更廣泛的計算。</p><p>到了 2007 年，NVIDIA 進一步提出了名為 CUDA（Compute Unified Device Architecture，計算統一設備架構）的全新技術，利用該技術可以通過 NVIDIA 的 GPU 進行圖像處理之外的計算任務，它揭開了 GPU 計算革命序幕。隨後，AMD 也推出了類似的技術：OpenCL（Open Computing Language）。OpenCL 是一個開放的、跨平台的並行計算框架，允許開發人員在不同的硬件平台（CPU、GPU、FPAG 等）上進行開發。</p><p>自此以後，<strong>GPU 不再以圖形的 3D 加速為唯一目的，而是能夠廣泛應用於各領域的通用計算加速，尤其是科學計算、大數據分析以及人工智能等領域。</strong></p><p>3.2.2 大模型與向量數據庫</p><p>當今互聯網世界所需的計算能力遠遠超出任何人的想象，並且只會隨着人工智能的興起而增加。以如今爆火的生成式 AI ChatGPT 為代表，大小為 175B 的 GPT-3 使用了 1024 張 A100 GPU 訓練了約 34 天，隨着參數數量的增加，往後 AI 需要的算力資源更是天文數字。</p><p>大模型同樣引發了數據庫領域的革命，此前不温不火的向量數據庫搭上了這輛順風車，一舉成為 AI 時代的新寵。在 2023 英偉達 GTC AI 開發者大會中，NVIDIA CEO 黃仁勳首次提及向量數據庫，並強調<strong>對於構建專有大模型的組織而言，向量數據庫至關重要。</strong></p><p>對於 AI 來説，向量是它理解世界的通用數據形式，不管是圖片、視頻、音頻，都可以通過轉換成向量來讓 AI 識別，<strong>向量數據庫作為專門對向量進行檢索和存儲的工具，能為大模型的應用落地解決諸如「沒有長期記憶」、「幻覺」、「知識更新不及時」等問題。</strong></p><p>但是，向量數據庫本身的性能也是一個問題，説到底與大模型的結合只是其應用的一部分，它本質上還是一個數據搜索和分析的工具，如果性能滿足不了用户需求，同樣也會被淘汰。於是乎，開發者們又想起了 GPU。</p><p>在向量數據庫中，最核心的功能在於向量相似性搜索，即在一個海量的數據中找到和某個向量最相似的向量，它的計算量十分龐大，而這恰好是 GPU 所擅長的，<strong>利用 GPU 的並行計算能力可以加速向量相似性搜索，顯著提高查詢速度，降低延遲。</strong></p><span id="OSC_h1_4"></span><h1><strong>4 雲原生向量數據庫 PieCloudVector 支持 GPU 加速</strong></h1><p>拓數派大模型數據計算系統 πDataCS 三大數據計算引擎之一：<a href="https://my.oschina.net/u/5944765/blog/10321799" rel="nofollow"><em>向量數據庫 PieCloudVector</em></a>，是大模型時代的分析型數據庫升維，目標是助力多模態大模型 AI 應用，進一步實現海量向量數據存儲與高效查詢。PieCloudVector 支持和配合大模型的 Embeddings，幫助基礎模型在場景 AI 的快速適配和二次開發，是大模型必備應用。</p><p><strong>PieCloudVector 充分利用現代化硬件能力，支持 GPU 加速功能。</strong> 這一特性讓 PieCloudVector 能夠利用 GPU 的並行計算能力來加速向量計算和數據處理任務，顯著縮短任務的執行時間，提高計算效率，幫助用户更高效地進行數據計算。特別是在需要處理大規模數據集或進行復雜的數值運算時，GPU 加速可以大幅提升計算性能。</p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 02 Feb 2024 05:49:21 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/5944765/blog/11020020</guid>
            <link>https://my.oschina.net/u/5944765/blog/11020020</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[社區月報丨 2024 年 1 月，多款應用迎更新，還有 deepin Meetup 的初次相見和久別重逢！]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>內容來源：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.deepin.org%2Fzh%2Fdeepin-community-monthly-report-2024-01%2F" target="_blank">deepin 社區</a></p><hr><h1><strong>deepin（深度）社區 1 月總覽</strong></h1><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">2024 年 1 月，有<strong>975</strong>位小夥伴加入了 deepin 開源社區大家庭，目前共有論壇夥伴<strong>151,007</strong>位；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">在 1 月，2024 年第一場 deepin Meetup 在北京正式舉辦，同時 deepin（深度）社區舉辦的龍年春節壁紙大賽也完美落下帷幕；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">1 月 deepin SIG 組共提交 PR 1116 個 ，提交 Issues 294 個，當前共有 SIG 組 40 個。</p><h1><strong>社區產品</strong></h1><h2><strong>深度之家</strong></h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">2024 年 1 月，深度之家共收到用户需求反饋及 bug166 條：</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">當中 bug 反饋 126 個，需求反饋 40 個，已修復/確認 16 個，包括用户反饋的【玲瓏卸載應用命令，第一次執行會報錯，再執行一次才能卸載成功】、【微信更新後登陸不了】等問題；</p><h2><strong>SIG 組 1 月進展</strong></h2><ol><li><strong>DDE SIG:</strong></li></ol><ul><li>DDE-launchpad 脱離技術預覽階段，DDE-shell、Treeland、DDM 進入技術預覽階段</li></ul><ol><li><strong>dde-port SIG:</strong></li></ol><ul><li>持續推進 DDE 在各個發行版的移植</li><li>BigLinux 發行版下的 DDE v23 初步支持</li></ul><ol><li><strong>deepin-sysdev-team：</strong></li></ol><ul><li>持續進行系統倉庫的打包與維護工作</li></ul><ol><li><strong>deepin-cicd-team:</strong></li></ol><ul><li>持續完善自動化流水線的智能程度</li></ul><ol><li><strong>deepin-ThemeDesign：</strong></li></ol><ul><li>已開始製作 deepin 適用壁紙，並嚮應用商店投遞中</li></ul><h1><strong>應用商店</strong></h1><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><img alt="" src="https://bbs.deepin.org/uploader/f/TQNIvpoxovcuW4fP.png?accessToken=eyJhbGciOiJIUzI1NiIsImtpZCI6ImRlZmF1bHQiLCJ0eXAiOiJKV1QifQ.eyJhdWQiOiJhY2Nlc3NfcmVzb3VyY2UiLCJleHAiOjE3MDY3ODA2OTEsImZpbGVHVUlEIjoiOE5rNk13Nk1EV0ZHendxTCIsImlhdCI6MTcwNjc4MDA5MSwidXNlcklkIjoxMDMxM30.ArE7u7SqsjnfBy4BwVNK3_zpcWgZNnqqlvwLaBhFwsI" referrerpolicy="no-referrer">應用上新 100 款 ：上新應用中，99 款應用同步上新至 deepin V23，99 款應用為 Linux 應用，1 款 Wine 應用；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">上新應用中包括中望 3D 2024、OpenTrace 等多款主流應用；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">應用更新 124 款 ：更新應用中，80 款應用同步在 deepin V23 中更新。其中 113 款為 Linux 應用，Android 應用 7 款，Wine 應用 4 款；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">1 月更新的應用當中包括 QQ、墨刀、有道雲筆記等主流應用。</p><h1><strong>deepin 論壇</strong></h1><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">1 月 deepin 論壇共發佈了<strong>8803</strong>帖子；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">共發佈主題帖<strong>1092</strong>個；</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">超過 900 + 新朋友加入到 deepin 論壇。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">當中，最受論壇用户歡迎的帖子 top5 為：</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>1.</strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbbs.deepin.org%2Fpost%2F267681" target="_blank">關於 deepin-V23 beta3 新版本的體驗，及個人看法</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>2</strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbbs.deepin.org%2Fpost%2F267289" target="_blank">.大家對文件管理器有什麼不滿嗎？</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>3.</strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbbs.deepin.org%2Fpost%2F267297" target="_blank">V23 任務欄改進建議，集中反饋貼！</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>4.</strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbbs.deepin.org%2Fpost%2F267665" target="_blank">真的不要再高仿了，越來越刷新對國產自主能力的認知！</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>5.</strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbbs.deepin.org%2Fpost%2F267231" target="_blank">揭秘 deepin V23 Beta3！deepin Meetup · 2024 北京，出發！</a></p><h1><strong>社區活動</strong></h1><h2><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.deepin.org%2Fzh%2Fwelcome-to-whlug%2F" target="_blank"><strong>【WHLUG】</strong></a></h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">2024 年 1 月 20 日下午，由 deepin（深度）社區聯合 Linux 中國、龍蜥社區（OpenAnolis）、華中科技大學網絡空間安全學院開源俱樂部一起舉辦的 Linux 愛好者線下沙龍活動（WHLUG）在武漢未來科技城成功舉辦。沙龍邀請了武漢地區的 Linux 愛好者，共同探討玲瓏、容器技術、Linux 內核、開源參與、高性能網絡等話題，現場氣氛熱烈。</p><p style="color:#333333; margin-left:0px; margin-right:0px; text-align:center"><img alt="image.png" src="https://storage.deepin.org/thread/202402010937419026_image.png" referrerpolicy="no-referrer"></p><h2><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.deepin.org%2Fzh%2Fdeepin-meetup%2F" target="_blank"><strong>deepin Meetup（北京站）</strong></a></h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">2024 年 1 月 27 日，deepin Meetup（北京站）成功舉辦，40 餘名用户參與。本次活動帶大家回顧 deepin（深度）社區的發展歷史，展示了社區部分明星產品及技術成果，並提前揭秘了 deepin V23 Beta3 的部分新增功能，如啓動器重構、UOS AI 預裝、新增低電閾值設置功能、支持了 Steam 原生應用的安裝等。各位 deepiner 線下相聚，昔日網友揭開神秘面紗，共同探討最新產品進展、分享使用心得、實操經驗，大家也對 deepin 未來發展提出了諸多寶貴意見，現場氛圍熱烈。</p><p style="color:#333333; margin-left:0px; margin-right:0px; text-align:center"><img alt="image.png" src="https://storage.deepin.org/thread/202402010938049219_image.png" referrerpolicy="no-referrer"></p><h2><strong>deepin（深度）社區春節壁紙大賽</strong></h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">在 2024 年春節來臨之際，國產操作系統「統信 UOS」及 deepin（深度）社區聯合舉辦全新一期壁紙創作大賽，面向所有對電腦操作系統個性美化感興趣的設計師，徵集壁紙作品，展示心中的獨特的「中國龍年」。活動已圓滿結束，總計收到有效作品數 90 份（156 張圖片），通過社區投遞系統上架壁紙作品包共計 75 個，參賽人數 23 人（其中 4 位設計師、2 位老師、8 位學生），大眾評委環節評分 300 次，參與人數 148 人。目前所有成功投稿的作品都已上架應用商店，可在應用商店中搜索【龍年壁紙】，安裝使用。</p><p style="color:#333333; margin-left:0px; margin-right:0px; text-align:center"><img alt="image.png" src="https://storage.deepin.org/thread/202402010938569200_image.png" referrerpolicy="no-referrer"></p><p style="text-align:center">參賽作品：古韻新繹，「龍」光煥發</p><p style="text-align:center">設計師：MC 李狗蛋</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><h1><strong>社區鳴謝</strong></h1><h2><strong>【論壇最活躍小夥伴】</strong></h2><ul><li>阿尼櫻奈奈</li><li>buyike</li><li>晚秋（lateautumn）</li></ul><h2><strong>【內測最活躍小夥伴】</strong></h2><ul><li>煙霞志</li><li>e*t@gmail.c<strong>o</strong>m**</li><li>jiutian123</li></ul><h2><strong>【PR 貢獻最活躍小夥伴】</strong></h2><ul><li>Zeno-sole</li><li>UTsweetyfish</li><li>Decodetalkers</li><li>xzl01</li><li>18202781743</li><li>liyigang1</li><li>tsic404</li></ul><p style="margin-left:0px; margin-right:0px; text-align:start"><strong>每個貢獻者都對深度開源社區的發展產生了巨大的影響，歡迎與我們同心協力，揚起 deepin 的桅杆！</strong></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 02 Feb 2024 05:42:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/277431</guid>
            <link>https://www.oschina.net/news/277431</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Visual Studio Code 1.86 發佈]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff; color:#333333">Visual Studio Code 1.86 現已發佈，具體更新內容如下：</span></p><ul><li><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_86%23_configure-zoom-levels-per-window" target="_blank">每個窗口的縮放級別</a>&nbsp;</strong>- 獨立調整每個窗口的縮放級別。</li></ul><p>默認情況下啓用的新設置 window.zoomPerWindow，可讓你配置縮放命令（放大、縮小、重置縮放），使其僅適用於活動窗口，而不適用於所有打開的窗口。</p><p><img height="243" src="https://oscimg.oschina.net/oscnet/up-f14b102590ab5aac409ad79a294e72514fe.png" width="500" referrerpolicy="no-referrer"></p><ul><li><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_86%23_accessibility" target="_blank">Hey Code 語音命令</a>&nbsp;</strong>- 使用語音命令啓動聊天會話。</li></ul><p>通過新的 accessibility.voice.keywordActivation 設置，你可以讓 VS Code 聽取"Hey Code"語音命令來啓動與 Copilot Chat 的語音會話。</p><p><img height="339" src="https://oscimg.oschina.net/oscnet/up-55edb93355df5d67344a7315bfb4fb21545.png" width="500" referrerpolicy="no-referrer"></p><ul><li><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_86%23_review-multiple-files-in-diff-editor" target="_blank">多文件差異編輯器</a>&nbsp;</strong>- 在差異編輯器中快速查看多個文件的差異。</li></ul><p>目前，多文件差異編輯器可用於查看本地變更、階段性變更、傳入/傳出變更、匿名變更以及來自拉取請求的變更。</p><p><img height="327" src="https://oscimg.oschina.net/oscnet/up-55d5b425a59b3942a58a11d969df093a76b.png" width="500" referrerpolicy="no-referrer"></p><ul><li><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_86%23_triggered-breakpoints" target="_blank">Triggered breakpoints</a>&nbsp;</strong>- 通過斷點依賴性進行高效調試。</li></ul><p><img height="320" src="https://oscimg.oschina.net/oscnet/up-513a8e67dc7d292258c20999360511d371e.png" width="500" referrerpolicy="no-referrer"></p><ul><li><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_86%23_sticky-scroll-in-tree-views" target="_blank">擴展 Sticky Scroll 支持</a>&nbsp;</strong>- tree views 和 notebooks 中的 Sticky Scroll。</li></ul><p><span style="background-color:#ffffff; color:#242424">為了確保 </span>Sticky Scroll&nbsp;<span style="background-color:#ffffff; color:#242424">不會佔用太多空間，它最多限制為視圖高度的 40%。</span></p><p><img height="325" src="https://oscimg.oschina.net/oscnet/up-b3cfb095462ff8efb6922e8a901ac07c040.png" width="500" referrerpolicy="no-referrer"></p><ul><li><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_86%23_languages" target="_blank">Markdown 粘貼選項</a>&nbsp;</strong>- 為鏈接、視頻和音頻元素提供豐富的粘貼支持。</li></ul><p><img height="245" src="https://oscimg.oschina.net/oscnet/up-3e9b77e9e2180d1e43283bf455ba0b6cd6a.png" width="500" referrerpolicy="no-referrer"></p><ul><li><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_86%23_more-powerful-and-flexible-auto-save-options" target="_blank">靈活的自動保存選項</a>&nbsp;</strong>- 出現錯誤時跳過自動保存或僅保存特定文件類型。</li></ul><p><img height="393" src="https://oscimg.oschina.net/oscnet/up-f97270ad9b2b761bb00c5e5863a1c284446.png" width="500" referrerpolicy="no-referrer"></p><ul><li><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_86%23_source-control" target="_blank">Source Control input</a>&nbsp;</strong>- 自定義提交輸入和每種語言的編輯器設置。</li><li><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_86%23_allow-disabling-notifications-per-extension" target="_blank">擴展通知</a>&nbsp;</strong>- 精細控制每個擴展的通知禁用。</li></ul><p><img height="132" src="https://oscimg.oschina.net/oscnet/up-0c9036ad03b6d255ad53f2958993d3a1922.png" width="500" referrerpolicy="no-referrer"></p><p><img height="152" src="https://oscimg.oschina.net/oscnet/up-3cf588072c8fdf708e70b071884ad4ae046.png" width="500" referrerpolicy="no-referrer"></p><ul><li><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_86%23_github-copilot" target="_blank">GitHub Copilot 更新</a>&nbsp;</strong>- 改進了默認上下文、添加文件作為上下文、AI 修復。</li></ul><p><img alt="" height="287" src="https://oscimg.oschina.net/oscnet/up-12dc52365310940dd5acfe69790fbe60984.png" width="500" referrerpolicy="no-referrer"></p><p><span style="background-color:#ffffff; color:#333333">更多詳情可</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_86" target="_blank">查看官方公告</a>。</p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 02 Feb 2024 03:33:09 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/277414/vs-code-1-86-released</guid>
            <link>https://www.oschina.net/news/277414/vs-code-1-86-released</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[開源日報：「Linux 中國」 開源社區宣佈停止運營；小紅書開源「InstantID」]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>歡迎閲讀 OSCHINA 編輯部出品的開源日報，每天更新一期。</p><p><strong># 2024.2.1</strong></p><h2><span><span><span style="color:#000000"><span><span><span style="color:#00b050">今日要點</span></span></span></span></span></span></h2><p style="text-align:justify"><strong>OpenSource Daily</strong></p><h3><u><a href="https://www.oschina.net/news/277235/java-proposal-scrap-sunmiscunsafe-memory-access" target="_blank">Java 提案計劃棄用 sun.misc.Unsafe 中的內存訪問</a></u></h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="color:#000000">OpenJDK 社區中一個名為 「<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopenjdk.org%2Fjeps%2F8323072" target="_blank">Deprecate Memory-Access Methods in sun.misc.Unsafe for Removal</a>」 的 JEP 草案提出，建議棄用 sun.misc.Unsafe 中的內存訪問方法，以便在未來的 Java 版本中將其進行刪除。</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="color:#000000">sun.misc.Unsafe 類於 2002 年引入，是 JDK 中 Java 類執行低級操作的一種方法，距今已有 20 多年的歷史。在該類的 87 個方法中，有 79 個用於內存訪問。</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="281" src="https://oscimg.oschina.net/oscnet/up-e6847ab49a09af3d783ef2fd5ae0f2b4b87.png" width="500" referrerpolicy="no-referrer"></p><p>提案的目標包括為在未來的 JDK 版本中移除 sun.misc.Unsafe 中的內存訪問方法做好準備，以及幫助開發人員瞭解他們的應用程序何時直接或間接依賴 sun.misc.Unsafe 中的內存訪問方法。但它並不旨在完全刪除 sun.misc.Unsafe 類，因為該類中的少量方法不用於內存訪問，所以將會保持不被棄用；它們的廢棄和移除將單獨進行。</p><h3><u><a href="https://www.oschina.net/news/277253" target="_blank">字節跳動 2 個雲原生開源項目進入 CNCF 雲原生全景圖</a></u></h3><p style="color:#222222; margin-left:8px; margin-right:8px; text-align:justify"><span style="color:#3e3e3e"><span>近日，字節跳動 2 個雲原生開源項目<span>&nbsp;</span></span><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzk0NDMzNjkxNw%3D%3D%26mid%3D2247484922%26idx%3D1%26sn%3Dfb8922282b6215f28f69a3d9e23fa855%26chksm%3Dc3277c80f450f596fa53c910a75c38e3c22ff864782ec626a0a9842be736dd8ea006d0f2f6b8%26scene%3D21%23wechat_redirect" target="_blank"><strong>Katalyst</strong></a></span><span>&nbsp;</span><span style="color:#3e3e3e"><span>和<span>&nbsp;</span></span><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzk0NDMzNjkxNw%3D%3D%26mid%3D2247485243%26idx%3D1%26sn%3D5f39a6597498268c6c965554b12a6849%26chksm%3Dc3277e41f450f75780babf0767f45ea712c1cf59f8b9c7f6d2b48809bb4158648d7c357a76a6%26scene%3D21%23wechat_redirect" target="_blank"><strong>KubeAdmiral</strong></a></span><span style="color:#3e3e3e">&nbsp;陸續進入&nbsp;CNCF 雲原生全景圖，均被收錄在<span>&nbsp;</span></span><span style="color:#0080ff"><em>Orchestration &amp; Management - Scheduling &amp; Orchestration</em></span><span style="color:#3e3e3e"><span>&nbsp;</span>分類下，成為 CNCF 官方認可生態構建工具中的一部分。</span></p><p style="color:#222222; margin-left:8px; margin-right:8px; text-align:justify"><img src="https://oscimg.oschina.net/oscnet/up-88b912acd053b7736fa52b640c7290716a9.png" referrerpolicy="no-referrer"></p><h3><u><a href="https://www.oschina.net/news/277277" target="_blank">「Linux 中國」 開源社區宣佈停止運營</a></u></h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="background-color:#ffffff; color:#000000">「Linux 中國」 微信公眾號於今日發文<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2F5a9zTiMn4hwOR5JU3kPzvw" target="_blank">宣佈</a>，從即日起，「Linux 中國」 這個社區，包括它的主網（</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flinux.cn%2F%C2%A0" target="_blank">https://linux.cn/&nbsp;</a><span style="background-color:#ffffff; color:#000000"><span>&nbsp;</span>）、公眾號、視頻號，以及下屬的《硬核觀察》欄目，將無限期停止更新和運營。</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img src="https://oscimg.oschina.net/oscnet/up-6e3343217de4d5b35d0b43dfd79e9b69d6d.png" referrerpolicy="no-referrer"></p><hr><h2><strong><span><span><span style="color:#000000"><span><span><span style="color:#00b050">今日觀察</span></span></span></span></span></span></strong></h2><p><img src="https://oscimg.oschina.net/oscnet/up-5f39b0daf9aacc34cdab04840e2ca4a55c5.png" referrerpolicy="no-referrer"></p><p><img src="https://oscimg.oschina.net/oscnet/up-c29ed5dd0eff8177570b890725186aed794.png" referrerpolicy="no-referrer"></p><hr><h2><strong><span><span><span style="color:#000000"><span><span><span style="color:#00b050">媒體觀點</span></span></span></span></span></span></strong></h2><p><img src="https://oscimg.oschina.net/oscnet/up-2ee8125c079733587845fab4edba43ee6a3.png" referrerpolicy="no-referrer"></p><hr><h2><strong><span><span><span style="color:#000000"><span><span><span style="color:#00b050">每日項目榜</span></span></span></span></span></span></strong></h2><p>GitHub 榜單：</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-99809320420fb783478a0b3f9f2c96a3f5f.png" referrerpolicy="no-referrer"><img alt="" src="https://oscimg.oschina.net/oscnet/up-4080a984211606c0eef9d3c0508f6e5cba9.png" referrerpolicy="no-referrer"></p><blockquote><h4>在線閲讀完整日報內容，訪問：<strong><u><a href="https://oscimg.oschina.net/public_shard/%E5%BC%80%E6%BA%90%E6%97%A5%E6%8A%A5%E7%AC%AC007%E6%9C%9F.pdf" target="_blank">開源日報第 007 期：「Linux 中國」 開源社區宣佈停止運營</a></u></strong></h4></blockquote><hr><p><strong>往期回顧</strong></p><ul><li><u><a href="https://oscimg.oschina.net/public_shard/%E5%BC%80%E6%BA%90%E6%97%A5%E6%8A%A5%E7%AC%AC006%E6%9C%9F%EF%BC%9A%E9%80%89%E6%8B%A9%E6%8A%80%E6%9C%AF%E6%A0%88%E4%B8%80%E5%AE%9A%E8%A6%81%E9%80%89%E6%8B%A9%E5%BC%80%E6%BA%90%E7%9A%84.pdf" target="_blank">開源日報第 006 期：選擇技術棧一定要選擇開源的</a></u></li><li><a href="http://www.oschina.net/news/277040"><u>開源日報第 005 期：RISC-V 萬兆開源交換機發售；npm 存在大量武林外傳視頻</u></a></li><li><u><a href="https://www.oschina.net/news/276864" target="news">開源日報第 004 期：百度輸入法在候選詞區域植入廣告；大神用 Excel 構建 CPU</a></u></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Fri, 02 Feb 2024 03:33:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/277415</guid>
            <link>https://www.oschina.net/news/277415</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[面壁智能發佈端側大模型「面壁 MiniCPM」]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>2 月 1 日，面壁智能舉辦新品發佈會，推出了最新的旗艦級多模態大模型「<strong>面壁 MiniCPM</strong>」，參數規模為 20 億，使用了 1TB 精選數據進行訓練。</p><p><img src="https://oscimg.oschina.net/oscnet/up-5755b77c7f59968d93c86bee2afb4c33560.png" referrerpolicy="no-referrer"></p><p>面壁智能 CEO 李大海在發佈會上表示，MiniCPM-2B 在多項主流評測榜單、中英文平均成績均超越了開源的 Mistral-7B，英文榜單的平均分甚至超越了 Falcon-40B、MPT-30B 等百億參數模型。</p><p><img src="https://oscimg.oschina.net/oscnet/up-12e488c7802d900b054d84644fcf4e6bd60.jpg" referrerpolicy="no-referrer"></p><p>所謂「端側大模型」，即模型服務部署在手機、電腦、IoT 設備等本地終端，直接由終端芯片完成推理過程，無需聯網。作為一款端側大模型，MiniCPM 聲稱「<em>跑通國際主流手機品牌與終端 CPU 芯片，老手機也無壓力</em>」，但從吞吐量來看，實際表現或許有待提升。</p><p><img src="https://oscimg.oschina.net/oscnet/up-b925911ce8d8133307958365ac3898b7f95.jpg" referrerpolicy="no-referrer"></p><p><strong>開源地址（內含技術報告）</strong>：</p><ul><li>MiniCPM GitHub：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenBMB%2FMiniCPM" target="_blank">https://github.com/OpenBMB/MiniCPM</a></li><li>OmniLMM GitHub：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenBMB%2FOmniLMM" target="_blank">https://github.com/OpenBMB/OmniLMM</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Fri, 02 Feb 2024 02:58:16 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/277407</guid>
            <link>https://www.oschina.net/news/277407</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[禪道 20.0.beta1 發佈啦，重構底層 PHP 和 UI 框架，用户體驗全面升級]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">大家好，禪道 20.0.beta1 發佈啦，本次發佈主要對用户界面 (UI) 進行了全新升級，包括：<strong>引入了無感刷新技術</strong>，大幅提升了在系統中的操作流暢度，能夠更加高效地完成任務；<strong>主題配色優化</strong>，能夠根據個人喜好或公司品牌風格進行個性化的界面設置，增強對系統的歸屬感和舒適度；<strong>儀表盤內容升級</strong>，地盤新增產品和項目維度的總覽和工作推進數據，產品儀表盤新增年度和月度推進數據、Bug 和發佈統計數據；<strong>表單頁面新增了簡潔版和完整版的兩種模式切換</strong>，在填寫信息時更加直觀和便捷，提高工作效率。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>禪道 20 版本對代碼進行了大規模重構</strong>，從框架層到業務代碼都進行了大幅改進。禪道作為開源軟件，重構後二次開發更加友好且易於維護，也帶來了<strong>更好的產品性能和更強的安全性</strong>。20 版本主要的重構工作包括：<strong>新的 UI 庫</strong>，禪道 20 版本使用自主開發的 ZUI3 前端框架，無論是交互體驗和開發效率都有質的飛躍；<strong>全新的 ZIN 頁面開發模式</strong>，通過配置的方式按需調用前端組件，實現了頁面的快速開發，大幅提升了開發效率，全新的擴展機制，更方便對頁面進行修改定製；<strong>引入 PHP 的強類型檢查</strong>，大幅減少系統模塊間調用過程中潛在 Bug 的產生；<strong>單元測試用例覆蓋 Model 層的所有 3000+方法</strong>，代碼更健壯；<strong>增加大量註釋，代碼更易讀、</strong>功能描述更清晰； 業務模塊在 MVC 的基礎上增加 zen/tao 兩個層次，<strong>優化了代碼的封裝和組織。</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcdn.easycorp.cn%2Fweb%2Fdata%2Fupload%2Feasycorp%2F202402%2Ff_aa8293c13dfccae5baf25fdaa2ceb08c.png" target="_blank"><img alt="" src="https://cdn.easycorp.cn/web/data/upload/easycorp/202402/f_aa8293c13dfccae5baf25fdaa2ceb08c.png" referrerpolicy="no-referrer"></a></strong><strong><span>&nbsp;</span></strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcdn.easycorp.cn%2Fweb%2Fdata%2Fupload%2Feasycorp%2F202402%2Ff_b0ab12a695340383f7800437019e03e2.png" target="_blank"><img alt="" src="https://cdn.easycorp.cn/web/data/upload/easycorp/202402/f_b0ab12a695340383f7800437019e03e2.png" referrerpolicy="no-referrer"></a></strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcdn.easycorp.cn%2Fweb%2Fdata%2Fupload%2Feasycorp%2F202402%2Ff_7f83e9718f01355c0ceb329a0c0fa8d1.png" target="_blank"><img alt="" src="https://cdn.easycorp.cn/web/data/upload/easycorp/202402/f_7f83e9718f01355c0ceb329a0c0fa8d1.png" referrerpolicy="no-referrer"></a></strong></p><h2><strong>新增功能點</strong></h2><h3><strong>配色優化：</strong></h3><div><ul><li>系統的主題顏色和對應名稱的優化，「玉煙紫」更名為「萱萱紫」。</li><li>不同狀態的顏色調整、優先級和嚴重程度等顏色的調整。</li></ul></div><h3><strong>其它優化：</strong></h3><ul><li>頂部導航的優化了分組。</li><li>頁面間跳轉的返回邏輯簡化。</li><li>針對 Tab 標籤的頁面，做了收起到處理。</li><li>相關概況頁佈局的調整。</li><li>列表左側模塊樹導航支持拖拽改變模塊樹寬度。</li><li>優化了動態加載的性能。</li><li>增強了部分流程中二次確認的彈窗，避免誤操作。</li><li>完善了系統概念性解釋的註釋説明。</li></ul><h3><strong>儀表盤：</strong></h3><ul><li>數據的展示引用度量項。</li><li>地盤儀表盤歡迎總覽區塊新增待我評審的內容。</li><li>地盤儀表盤新增禪道動態區塊。</li><li>地盤儀表盤新增團隊成就區塊。</li><li>儀表盤新增產品區塊相關統計和項目相關統計。</li><li>產品儀表盤中增加產品統計、產品發佈統計、產品 Bug 統計、產品年度工作量統計、產品月度推進分析。</li><li>產品儀表盤中增加研發需求列表。</li><li>項目儀表盤刪除了項目人力投入區塊、項目總覽區塊。</li><li>儀表盤區塊支持自定義排版佈局，添加區塊以及長短區塊切換的交互優化。</li><li>儀表盤增加可視化圖表的展示。</li></ul><h3><strong>相關表單：</strong></h3><ul><li>核心表單的佈局結構優化（項目集、項目、產品、執行、需求、任務、Bug、用例）。</li><li>複雜表單增加了簡潔版和完整版的切換，也支持將簡潔版收起的更多字段固定在表單中。</li><li>優化了表單中的編輯器。</li></ul><h3><strong>相關列表：</strong></h3><ul><li>項目集區分了產品視角和項目視角。</li><li>產品列表選擇項目集的交互調整。</li><li>用例步驟支持創建三層級，有子層級的父級步驟不可刪除。</li><li>用例步驟的拖拽交互優化。</li></ul><h3><strong>看板：</strong></h3><ul><li>項目集看板拆分了我參與的項目集、其他項目集。</li><li>項目集看板的展示樣式優化（項目集作為區域、產品作為泳道）</li><li>產品看板中拆分了我參與的產品和其他產品。</li><li>產品看板的展示樣式優化。</li></ul><h3><strong>後台：</strong></h3><ul><li>原創建項目的項目代號字段，調整到後台功能開關中，可將代號設置為必填項。</li></ul><h3><strong>文檔：</strong></h3><ul><li>文檔優化 markdown 編輯器</li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><span style="color:#333333"><strong>禪道本次發佈數據如下：</strong></span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><span style="color:#333333"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcdn.easycorp.cn%2Fweb%2Fdata%2Fupload%2Feasycorp%2F202402%2Ff_f2b0d295ff39b00659e0e9208481df32.png" target="_blank"><img alt="" src="https://cdn.easycorp.cn/web/data/upload/easycorp/202402/f_f2b0d295ff39b00659e0e9208481df32.png" referrerpolicy="no-referrer"></a></span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>本期優化的全部需求和 Bug：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Feasysoft%2Fzentaopms%2Fblob%2Fzentaopms_20.0.beta1%2Fdoc%2FCHANGELOG" target="_blank"><span style="color:#145ccd">請點擊查看</span></a></strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><span>▼儀表盤的佈局和界面優化，<span>地盤新增產品和項目維度的總覽和工作推進數據，產品儀表盤新增年度和月度推進數據、Bug 和發佈統計數據。<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcdn.easycorp.cn%2Fweb%2Fdata%2Fupload%2Feasycorp%2F202402%2Ff_bc7f7a8b406b9c427908acaab633343b.png" target="_blank"><img alt="" src="https://cdn.easycorp.cn/web/data/upload/easycorp/202402/f_bc7f7a8b406b9c427908acaab633343b.png" referrerpolicy="no-referrer"></a></span></span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><span><span><span>▼項目集列表拆分成項目視角和產品視角</span><span>。</span><span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcdn.easycorp.cn%2Fweb%2Fdata%2Fupload%2Feasycorp%2F202402%2Ff_86f117256691d9a55e9f8489ad68ee04.png" target="_blank"><img alt="" src="https://cdn.easycorp.cn/web/data/upload/easycorp/202402/f_86f117256691d9a55e9f8489ad68ee04.png" referrerpolicy="no-referrer"></a><span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcdn.easycorp.cn%2Fweb%2Fdata%2Fupload%2Feasycorp%2F202402%2Ff_8c7522b437d11b376c13ff8f53f8d3ab.png" target="_blank"><img alt="" src="https://cdn.easycorp.cn/web/data/upload/easycorp/202402/f_8c7522b437d11b376c13ff8f53f8d3ab.png" referrerpolicy="no-referrer"></a></span></span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">▼概況頁佈局和界面的優化。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcdn.easycorp.cn%2Fweb%2Fdata%2Fupload%2Feasycorp%2F202402%2Ff_79d604126e1449955d6a8eb8a5fa738a.png" target="_blank"><img alt="" src="https://cdn.easycorp.cn/web/data/upload/easycorp/202402/f_79d604126e1449955d6a8eb8a5fa738a.png" referrerpolicy="no-referrer"></a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><span>▼列表的全面優化，左側模塊樹支持拖拽改變列寬，檢索標籤過多時做了收起到更多的優化。<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcdn.easycorp.cn%2Fweb%2Fdata%2Fupload%2Feasycorp%2F202402%2Ff_2609d0095a1cd4640432b46f17e9998d.png" target="_blank"><img alt="" src="https://cdn.easycorp.cn/web/data/upload/easycorp/202402/f_2609d0095a1cd4640432b46f17e9998d.png" referrerpolicy="no-referrer"></a></span><span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcdn.easycorp.cn%2Fweb%2Fdata%2Fupload%2Feasycorp%2F202402%2Ff_acd156c472e2397c3ace1807fdfda38e.png" target="_blank"><img alt="" src="https://cdn.easycorp.cn/web/data/upload/easycorp/202402/f_acd156c472e2397c3ace1807fdfda38e.png" referrerpolicy="no-referrer"></a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">▼核心頁面<span>（</span><span>項目集、項目、產品、執行、需求、任務、Bug、用例</span><span>）</span>的創建表單的排版佈局調整，提供簡潔版和完整版兩種模式切換。<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcdn.easycorp.cn%2Fweb%2Fdata%2Fupload%2Feasycorp%2F202402%2Ff_7804f3500a575da7d5b24cbd3a077d66.png" target="_blank"><img alt="" src="https://cdn.easycorp.cn/web/data/upload/easycorp/202402/f_7804f3500a575da7d5b24cbd3a077d66.png" referrerpolicy="no-referrer"></a></p><h2><strong>下載鏈接</strong></h2><table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:0px; box-sizing:border-box; color:#333333; font-family:&quot;Microsoft YaHei&quot;; font-size:14px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; margin-bottom:20px; max-width:100%; orphans:2; text-align:start; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:797.5px; word-break:break-all; word-spacing:0px"><tbody><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px; vertical-align:top"><span>安裝包下載</span></td><td style="border-color:#dddddd; border-style:solid; border-width:1px; vertical-align:top"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.zentao.net%2Fdl%2Fzentao%2F20.0.beta1%2FZenTaoPMS-20.0.beta1-php7.0.zip" target="_blank"><span>php7.0</span></a><span>&nbsp; &nbsp;&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.zentao.net%2Fdl%2Fzentao%2F20.0.beta1%2FZenTaoPMS-20.0.beta1-php7.1.zip" target="_blank"><span>php7.1</span></a><span>&nbsp; &nbsp;&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.zentao.net%2Fdl%2Fzentao%2F20.0.beta1%2FZenTaoPMS-20.0.beta1-php7.2_7.4.zip" target="_blank"><span>php7.2_7.4</span></a><span>&nbsp; &nbsp;&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.zentao.net%2Fdl%2Fzentao%2F20.0.beta1%2FZenTaoPMS-20.0.beta1-php8.1.zip" target="_blank"><span>php8.1</span></a></td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px; vertical-align:top"><span>Windows 一鍵安裝包</span></td><td style="border-color:#dddddd; border-style:solid; border-width:1px; vertical-align:top"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.zentao.net%2Fdl%2Fzentao%2F20.0.beta1%2FZenTaoPMS-20.0.beta1-zbox.win64.exe" target="_blank"><span><span>64 位</span></span></a></td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px; vertical-align:top"><p style="margin-left:0; margin-right:0"><span>Linux 一鍵安裝包</span></p></td><td style="border-color:#dddddd; border-style:solid; border-width:1px; vertical-align:top"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.zentao.net%2Fdl%2Fzentao%2F20.0.beta1%2FZenTaoPMS-20.0.beta1-zbox_amd64.tar.gz" target="_blank"><span>amd64 位</span></a><span>&nbsp;</span><br><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.zentao.net%2Fdl%2Fzentao%2F20.0.beta1%2FZenTaoPMS-20.0.beta1-zbox_arm64.tar.gz" target="_blank"><span>arm64 位</span></a></td><td style="border-color:#dddddd; border-style:solid; border-width:1px; vertical-align:middle"><span style="color:#e53333">注：Linux 一鍵安裝包必須直接解壓到 /opt 目錄下。</span></td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px; vertical-align:top"><span>DEB 包下載：可以通過 dpkg 包管理器在 Ubuntu 和 Debian 系統下安裝</span></td><td style="border-color:#dddddd; border-style:solid; border-width:1px; vertical-align:top"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.zentao.net%2Fdl%2Fzentao%2F20.0.beta1%2FZenTaoPMS_20.0.beta1-php7.0-1_all.deb" target="_blank"><span>php7.0</span></a><span>&nbsp; &nbsp;&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.zentao.net%2Fdl%2Fzentao%2F20.0.beta1%2FZenTaoPMS_20.0.beta1-php7.1-1_all.deb" target="_blank"><span>php7.1</span></a><span>&nbsp; &nbsp;&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.zentao.net%2Fdl%2Fzentao%2F20.0.beta1%2FZenTaoPMS_20.0.beta1-php7.2_7.4-1_all.deb" target="_blank"><span>php7.2_7.4</span></a><span>&nbsp; &nbsp;&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.zentao.net%2Fdl%2Fzentao%2F20.0.beta1%2FZenTaoPMS_20.0.beta1-php8.1-1_all.deb" target="_blank"><span>php8.1</span></a></td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px; vertical-align:top"><span>RPM 包下載：可以通過 rpm 包管理器在 Centos 系統下安裝</span></td><td style="border-color:#dddddd; border-style:solid; border-width:1px; vertical-align:top"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.zentao.net%2Fdl%2Fzentao%2F20.0.beta1%2FZenTaoPMS-20.0.beta1-php7.0-1.noarch.rpm" target="_blank"><span>php7.0</span></a><span>&nbsp; &nbsp;&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.zentao.net%2Fdl%2Fzentao%2F20.0.beta1%2FZenTaoPMS-20.0.beta1-php7.1-1.noarch.rpm" target="_blank"><span>php7.1</span></a><span>&nbsp; &nbsp;&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.zentao.net%2Fdl%2Fzentao%2F20.0.beta1%2FZenTaoPMS-20.0.beta1-php7.2_7.4-1.noarch.rpm" target="_blank"><span>php7.2_7.4</span></a><span>&nbsp; &nbsp;&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.zentao.net%2Fdl%2Fzentao%2F20.0.beta1%2FZenTaoPMS-20.0.beta1-php8.1-1.noarch.rpm" target="_blank"><span>php8.1</span></a></td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px; vertical-align:middle"><span>最新版禪道客户端下載鏈接</span></td><td style="border-color:#dddddd; border-style:solid; border-width:1px; vertical-align:top"><span>Windows</span></td><td style="border-color:#dddddd; border-style:solid; border-width:1px; vertical-align:top"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.zentao.net%2Fdl%2Fzentaoclient%2F8.0%2Fzentaoclient.win64.setup.exe" target="_blank"><span>安裝包</span></a><span>&nbsp; &nbsp;&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.zentao.net%2Fdl%2Fzentaoclient%2F8.0%2Fzentaoclient.win64.zip" target="_blank"><span>壓縮包</span></a></td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px; vertical-align:top"><span>Linux</span></td><td style="border-color:#dddddd; border-style:solid; border-width:1px; vertical-align:top"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.zentao.net%2Fdl%2Fzentaoclient%2F8.0%2Fzentaoclient.linux64.deb" target="_blank"><span>安裝包</span></a><span>&nbsp; &nbsp;&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.zentao.net%2Fdl%2Fzentaoclient%2F8.0%2Fzentaoclient.linux64.tar.gz" target="_blank"><span>壓縮包 (.tar.gz)</span></a><span>&nbsp; &nbsp;&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.zentao.net%2Fdl%2Fzentaoclient%2F8.0%2Fzentaoclient.linux64.zip" target="_blank"><span>壓縮包 (.zip)</span></a></td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px; vertical-align:top"><span>macOS</span></td><td style="border-color:#dddddd; border-style:solid; border-width:1px; vertical-align:top"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.zentao.net%2Fdl%2Fzentaoclient%2F8.0%2Fzentaoclient.mac.dmg" target="_blank"><span>安裝包 (Intel)</span></a><span>&nbsp; &nbsp;&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.zentao.net%2Fdl%2Fzentaoclient%2F8.0%2Fzentaoclient.mac.m1.dmg" target="_blank"><span>安裝包 (Apple Silicon)</span></a></td></tr><tr></tr><tr></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px; vertical-align:top"><span>最新版禪道客户端服務器下載鏈接</span></td><td style="border-color:#dddddd; border-style:solid; border-width:1px; vertical-align:top"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.zentao.net%2Fdl%2Fxuanxuan%2F8.0%2Fxxd.8.0.win64.zip" target="_blank"><span>Windows</span></a><span>&nbsp; &nbsp;&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.zentao.net%2Fdl%2Fxuanxuan%2F8.0%2Fxxd.8.0.linux.x64.tar.gz" target="_blank"><span>Linux</span></a><span>&nbsp; &nbsp;&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.zentao.net%2Fdl%2Fxuanxuan%2F8.0%2Fxxd.8.0.mac.tar.gz" target="_blank"><span>macOS</span></a></td></tr><tr><td style="border-color:#dddddd; border-style:solid; border-width:1px; vertical-align:top"><span>禪道 Gogs 安裝包下載鏈接</span></td><td style="border-color:#dddddd; border-style:solid; border-width:1px; vertical-align:top"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.zentao.net%2Fdl%2Fgogs%2F0.12%2Fgogs_darwin_amd64" target="_blank"><span>macOS amd64</span></a><span>&nbsp; &nbsp;&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.zentao.net%2Fdl%2Fgogs%2F0.12%2Fgogs_linux_amd64" target="_blank"><span>Linux amd64</span></a><span>&nbsp; &nbsp;&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.zentao.net%2Fdl%2Fgogs%2F0.12%2Fgogs_windows_amd64.exe" target="_blank"><span>Windows amd64</span></a><span>&nbsp; &nbsp;&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.zentao.net%2Fdl%2Fgogs%2F0.12%2Fgogs_darwin_arm64" target="_blank"><span>macOS arm64</span></a><span>&nbsp; &nbsp;&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.zentao.net%2Fdl%2Fgogs%2F0.12%2Fgogs_linux_arm64" target="_blank"><span>Linux arm64</span></a></td></tr></tbody></table><h4>Docker 鏡像:<span style="color:#337fe5">&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhub.docker.com%2Fr%2Feasysoft%2Fzentao%2Ftags" target="_blank"><span style="color:#337fe5">點擊這裏</span></a></h4><h2><strong>幫助手冊</strong></h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">安裝文檔：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.zentao.net%2Fbook%2Fzentaopms%2F455.html" target="_blank"><span style="color:#337fe5">https://www.zentao.net/book/zentaopms/455.html</span></a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">升級文檔：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.zentao.net%2Fbook%2Fzentaopms%2F460.html" target="_blank"><span style="color:#337fe5">https://www.zentao.net/book/zentaopms/460.html</span></a></p><p style="color:#1b1f28; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><p style="color:#1b1f28; margin-left:0; margin-right:0; text-align:start"><strong>持續優化，定期更新，禪道一直在路上。</strong></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 02 Feb 2024 02:57:16 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/277405/zentao-20-beta1</guid>
            <link>https://www.oschina.net/news/277405/zentao-20-beta1</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[AI2 開源新 LLM，重新定義 open AI]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">艾倫人工智能研究所（Allen Institute for AI，簡稱 AI2）<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.allenai.org%2Fhello-olmo-a-truly-open-llm-43f7e7359222" target="_blank">宣佈</a>推出一個名為 OLMo 7B 的新大語言模型，並開源發佈了預訓練數據和訓練代碼。OLMo 7B 被描述為「一個真正開放的、最先進的大型語言模型」。</span></p><p><span style="color:#000000">AI2 是由已故的微軟公司聯合創始人保羅-艾倫（Paul Allen）於 2014 年在西雅圖創辦的一家非營利組織。該組織表示，他們開源 OLMo 模型旨在讓 AI 研究社區充分了解最先進的大語言模型（LLM），從而推動自然語言處理的發展，並以科學的方式正視現有 LLM 存在的問題。</span></p><p><span style="color:#000000">「通過向公眾完全開放 OLMo 及其訓練數據，AI2 在協作構建世界上最好的開放語言模型方面邁出了一大步。」</span></p><p><img height="282" src="https://oscimg.oschina.net/oscnet/up-5f4ac19f48b404e2adf9eed484a4a22035d.png" width="500" referrerpolicy="no-referrer"></p><p><span style="color:#000000">OLMo 框架具有一套完全開放的 AI 開發工具，包括：</span></p><ul><li><span style="color:#000000">完整的預訓練數據：該模型建立在 AI2 的 Dolma 語料庫上，該語料庫具有三萬億個用於語言模型預訓練的 token 開放語料，包括生成訓練數據的代碼。</span></li><li><span style="color:#000000">訓練代碼和模型權重： OLMo 框架包括 7B 規模的四個模型變體的完整模型權重，每個模型至少訓練有 2T token。提供了推理代碼、訓練指標和訓練日誌。</span></li><li><span style="color:#000000">評估：開發中使用的評估套件已發佈，每個模型包含 500 多個 checkpoints，來自訓練過程中的每 1000 個步驟，以及 Catwalk 項目下的評估代碼。</span></li></ul><p><span style="color:#000000">在接下來的幾個月中，AI2 計劃繼續迭代 OLMo，並將不同的模型大小、模式、數據集和功能引入 OLMo 系列。</span></p><p><span style="color:#000000">OLMo 項目負責人、AI2 NLP 研究高級主管、華盛頓大學艾倫學院教授 Noah Smith 表示:</span></p><blockquote><p><span style="color:#000000">「有了 OLMo，open 就是真正意味上的'open'，AI 研究界的每個人都可以訪問模型創建的各個方面，包括訓練代碼、評估方法、數據等。AI 曾經是一個以活躍的研究社區為中心的開放領域，但隨着模型的發展、成本的增加以及開始轉化為商業產品，AI 工作開始閉門造車。我們希望通過 OLMo 扭轉這一趨勢，讓研究界能夠團結起來，以科學的方式更好地理解和使用語言模型，從而開發出更負責任的 AI 技術，造福於每個人。」</span></p></blockquote><p>更多詳情可<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.allenai.org%2Fhello-olmo-a-truly-open-llm-43f7e7359222" target="_blank">查看官方博客</a>。&nbsp;</p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 02 Feb 2024 02:43:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/277402/allenai-olmo-truly-open-llm</guid>
            <link>https://www.oschina.net/news/277402/allenai-olmo-truly-open-llm</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[天津大學發佈中國首個腦機接口開源軟件平台 MetaBCI 研究成果]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>近日，天津大學神經工程團隊在數學與計算生物學領域 SCI 一區 TOP 期刊《Computers in Biology and Medicine》上發表論文，介紹了中國首個腦機接口開源軟件平台 MetaBCI 的技術架構與實現方法。</p><blockquote><p><img src="https://oscimg.oschina.net/oscnet/up-56d4176a2f8c23763ae4c465838482839ef.png" referrerpolicy="no-referrer"></p><p><u><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.sciencedirect.com%2Fscience%2Farticle%2Fpii%2FS0010482523012714%3Fvia%253Dihub" target="_blank">https://www.sciencedirect.com/science/article/pii/S0010482523012714?via%3Dihub</a></em></u></p></blockquote><p>據介紹，MetaBCI 針對 BCI 領域數據分佈散亂、算法復現困難、在線系統效率低的問題，規範了 BCI 數據結構與預處理流程、開發了通用的算法框架、利用了雙進程和雙線程提高在線實時效率，有助於降低構建腦-機接口系統的技術門檻，減少研發成本，促進轉化落地。</p><p><img src="https://oscimg.oschina.net/oscnet/up-6ec72a4b9fc60b7b8c54167afe9992a913c.png" referrerpolicy="no-referrer"></p><p>MetaBCI 由離線分析模塊 Brainda、刺激呈現模塊 Brainstim 和在線數據流模塊 Brainflow 三大部分構成，提供了面向 BCI 軟件層面全鏈條開發的解決方案。</p><ul><li>面向離線分析需求，Brainda 統一了現有公開數據集接口，優化了腦電數據讀取、處理流程，復現多種主要 BCI 數據分析及解碼算法，以此提高研究者的算法開發效率；</li><li>面向刺激呈現需求，Brainstim 提供了簡潔高效的範式設計模塊，可快速創建腦機接口範式刺激界面；</li><li>面向在線開發需求，Brainflow 利用雙線程、雙進程編程方法實現了實時高速的數據讀取、數據處理、結果反饋等功能，幫助開發者輕鬆搭建腦機接口在線實驗系統。</li></ul><p><img src="https://oscimg.oschina.net/oscnet/up-8f4d4e3e7fbcc8a74be3635f43436fba05b.png" referrerpolicy="no-referrer"></p><p>當前，MetaBCI 平台包含軟件代碼共 386 個類和函數，完成技術説明手冊 5 萬多字，同步更新英文 API 網頁（metabci.readthedocs.io/），平台共兼容 17 種 BCI 公開數據集，涵蓋 16 種數據分析方法和 55 種腦機解碼模型。</p><p>相較於現有的腦機接口軟件工具包，MetaBCI 基於開源語言 Python 編寫，並且能夠涵蓋腦機接口全鏈條功能。MetaBCI 完全打通了腦機接口軟硬件開發與設計鏈路，可為腦機接口在科學研究、醫療康復、娛樂生活、特種控制等領域的應用提供重要支撐，持續推動新一代腦機智能快速發展。</p><p><img src="https://oscimg.oschina.net/oscnet/up-b420b14a768151e8cb1615d426c11e3d30c.png" referrerpolicy="no-referrer"></p><p>MetaBCI 軟件代碼開源鏈接：<em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FTBC-TJU%2FMetaBCI" target="_blank">https://github.com/TBC-TJU/MetaBCI</a></u></em></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 02 Feb 2024 02:25:53 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/277399</guid>
            <link>https://www.oschina.net/news/277399</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[大模型評測體系「司南」 (OpenCompass2.0) 發佈]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>上海人工智能實驗室科學家團隊正式發佈了大模型開源開放評測體系「司南」 (OpenCompass2.0)，用於為大語言模型、多模態模型等提供一站式評測服務。</p><blockquote><p><img src="https://oscimg.oschina.net/oscnet/up-347708a4c8c2193cfa064cf35e0129504a2.png" referrerpolicy="no-referrer"></p><p><strong>司南 OpenCompass2.0 評測體系官網：</strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopencompass.org.cn%2F" target="_blank">https://opencompass.org.cn/</a><br><strong>GitHub 主頁：</strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopen-compass%2FOpenCompass%2F" target="_blank">https://github.com/open-compass/OpenCompass/</a></p></blockquote><p>據介紹，「司南」全面量化模型在<strong>知識、語言、理解、推理和考試</strong>等五大能力維度的表現，評測榜單涉及的大語言模型和多模態大模型超過 150 個，客觀中立地為大模型技術的創新提供堅實的技術支撐。截至目前，已有包括 Meta、阿里巴巴、騰訊、百度等 30 餘家國內外企業和科研機構採用「司南」助力開展技術研發。</p><p>OpenCompass2.0 對過去一年來主流開源模型和商業 API 模型進行了全面評測，分析結果顯示，GPT-4 Turbo 在各項評測中均獲最佳表現，智譜清言 GLM-4、阿里巴巴 Qwen-Max、百度文心一言 4.0 緊隨其後；大語言模型整體能力仍有較大提升空間，複雜推理相關能力仍是短板；中文場景下國內的模型更具優勢，與此同時，開源模型進步很快，以較小的體量達到較高性能水平，表現出較大的發展潛力。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-ba58dc3914ae82f80ebe074e7041caaf88f.png" referrerpolicy="no-referrer"></p><p>完整榜單：<em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frank.opencompass.org.cn%2Fhome" target="_blank">https://rank.opencompass.org.cn/home</a></u></em></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 02 Feb 2024 02:08:53 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/277396</guid>
            <link>https://www.oschina.net/news/277396</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[2024 最新一期中國數據庫流行榜公佈：阿里雲 PolarDB 登頂]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>2 月 1 日，數據庫社區「墨天輪」公佈了 2024 年最新一期中國數據庫流行度排行榜，<span style="color:#f39c12">阿里雲瑤池旗下的自研雲原生數據庫 PolarDB 奪冠，並刷新榜單總分紀錄</span>。墨天輪評價稱，<strong>因雲而生的 PolarDB 數據庫以客户需求為導向，並在業界開創性地落地「<span style="color:#f39c12"><strong><strong>三層解耦</strong></strong></span>」架構、多主多寫、HTAP、Serverless、集中與分佈式一體化等一系列業內領先的前沿技術，為用户提供了靈活、可靠的數據庫服務，解決了眾多業務問題。</strong></p><p>據瞭解，目前 PolarDB 已被 <span style="color:#f39c12"><strong>10000 家企業級用户</strong></span>採用，廣泛落地於政務、金融、電信、物流、互聯網等領域的核心業務系統。</p><p>墨天輪是中國知名數據庫技術社區，其發起的中國數據庫流行度排行榜，依據搜索引擎數據、核心案例數、資質數量、專利數、論文數等標準，對 <span style="color:#f39c12"><strong>290</strong></span> 個最主流的國產數據庫進行綜合評比。該榜單反映的是數據庫產品在市場中的活躍度，被譽為中國版的「DB-Engines 排名榜」。</p><p>在 2024 年 2 月的排行榜中，PolarDB 以 <span style="color:#f39c12"><strong>856.07 分</strong></span>刷新榜單記錄，排名第一，OceanBase、TiDB、OpenGauss、人大金倉分列 2~5 名。</p><p>誕生於 2017 年的 PolarDB 是中國首款自研雲原生數據庫，採用存儲計算分離、軟硬一體化設計。在彈性場景下，PolarDB 成本僅為傳統商業數據庫的 1/10，並於首批通過 2023 年國產數據庫安全可靠測評。2024 年 1 月，在首屆 PolarDB 開發者大會上，PolarDB「<strong><strong>三<span style="color:#f39c12">層分離</span></strong></strong>」<strong>新版本發佈，<span style="color:#f39c12">可節省 50% 數據庫成本</span></strong>、基於智能決策實現<span style="color:#f39c12"><strong>查詢性能 10 倍提升</strong></span>。</p><p>近年來，國產數據庫廣受市場青睞，PolarDB&nbsp;<span style="color:#f39c12"><strong>3 年增速超 400%</strong></span>，服務於<strong>自然人税收管理系統、全國 60% 的省級醫保信息平台等機構，以及中國聯通、友邦保險、海底撈、米哈遊</strong>等知名企業。</p><p>PolarDB 還是數據庫開源的重要推動者。目前 PolarDB 已正式開源近 3 年，建立了 15 個 SIG 組，吸引 3 萬+開發者和社區用户，以及<strong>韻達、網易數帆、龍蜥等 60 多家生態夥伴</strong>。PolarDB 開源數據庫工作室已在 10+所高校掛牌成立，與<strong>武漢大學、華東師範大學</strong>聯合開展教學課程、智慧問答助手等多個項目。</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 01 Feb 2024 09:39:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/277303</guid>
            <link>https://www.oschina.net/news/277303</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[「Linux 中國」 開源社區宣佈停止運營]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">「Linux 中國」微信公眾號於今日發文<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2F5a9zTiMn4hwOR5JU3kPzvw" target="_blank">宣佈</a>，從即日起，「Linux 中國」 這個社區，包括它的主網（</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flinux.cn%2F%C2%A0" target="_blank">https://linux.cn/&nbsp;</a><span style="color:#000000"> ）、公眾號、視頻號，以及下屬的《硬核觀察》欄目，將無限期停止更新和運營。</span></p><p><span style="color:#000000">主理人「硬核老王」在公告中透露，停止運營的原因其實很平常，大抵包括以下幾個方面：</span></p><blockquote><p><strong><span style="color:#000000">「Linux 中國」 已經完成了其歷史使命</span></strong></p><p><span style="color:#000000">最初，我們的願望是想把 「Linux 中國」 建設成一個傳播開源技術的公益型社區。但是經過十幾年的發展，目前開源文化和 Linux 相關的開源技術已經得到了廣泛傳播（在這期間，我們或許也做了一些小小的貢獻）。因此，繼續運營所能起到的作用並沒有那麼大了。</span></p><p><span style="color:#000000">出於偶然原因，「Linux 中國」 其實並未按照我們的最初設想發展，這麼多年下來，真正堅持下來的項目也就是一個翻譯團隊 LCTT，翻譯了數千篇文章，引導數百人蔘與了開源貢獻。然而，近年來，隨着計算機翻譯技術的進步，尤其是 ChatGPT 的出現，翻譯工作的必要性大為降低。自去年以來，我一直使用 ChatGPT 來翻譯一些文章，儘管還需要一至兩次校對，但基本沒什麼大問題。所以，LCTT 的存在也顯得不那麼重要了。</span></p><p><span style="color:#000000">事實上，LCTT 已經陷入了一種半死亡狀態，數百名貢獻者基本上都處於休眠了狀態，甚至由於技術原因，連自動化選題工作都難以維持。唯一能持續翻譯的，除了我，就是我們的首席譯者 geekpi 了。從這個角度來看，這已經不再是一個社區化的翻譯組織了。</span></p><p><strong><span style="color:#000000">最初的方向選擇和理想主義無法避免的結果</span></strong></p><p><span style="color:#000000">2003 年，在創立 「Linux 中國」 之前，我還創立過另外一個叫做 「炎黃角馬（CNGNU）」 的開源技術社區。但後來因為我創業失敗，這個社區就關閉了。隨後，我的弟弟王興江利用我手中閒置的域名 </span><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Flinux.cnlinux.cn" target="_blank"><span style="color:#000000">linux.cnlinux.cn</span></a><span style="color:#000000"> 建立了一個新的網站，我們給它起了一個狂妄的名字 「Linux 中國」 —— 實際上，需要澄清的是，我們和 Linux 的官方機構沒有任何關聯，也不代表 Linux 官方。</span></p><p><span style="color:#000000">建立這個網站（社區）的初衷是為了傳播知識和文化，並沒有考慮過未來的盈利模式，這也導致我們後來排斥將社區變成一個商業網站，去做一些培訓、會議之類的商業活動。</span></p><p><span style="color:#000000">但這帶來了巨大的資金壓力，尤其是在託管服務器價格高昂的那段時期。幸運的是，我們得到了七牛雲在 CDN 方面的贊助、阿里雲在 PR 方面的投放，讓我們得以發展。當然，還有一些其它的廣告主和朋友的贊助，稍後容我一一致謝。</span></p><p><span style="color:#000000">2015 年，我離開了中國電信，成為了一名自由人，沒有人再給我發工資了。這些年，「Linux 中國」 有一些收入，主要是為廣告商撰寫和發佈的一些文章，但是收入不太穩定。而在眾所周知的那三年裏，收入狀況甚至更慘淡。説實話，過去幾年，我大致處於一種個人經濟上的慢性失血狀態。</span></p><p><span style="color:#000000">所以，現在，當整體經濟不佳時，壓力更大。</span></p><p><strong><span style="color:#000000">個人疲憊和人生的交叉路口</span></strong></p><p><span style="color:#000000">近些年，「Linux 中國」 越來越像是一個 「個人」 網站，幾乎所有的流程都需要我親自來完成。「Linux 中國」 的公眾號自從開設的第一天起，就沒有任何一天停止過更新 —— 無論是年三十還是我的身體抱恙，無論是在出差路上還是帶家人出遊。這兩年，我又開始了《硬核觀察》欄目，這需要我每天花費數小時採編、錄製和發佈視頻，如今也有了 1263 期，從未停歇。</span></p><p><span style="color:#000000">累嗎？累，但更累的是，沒有盡頭的累。</span></p><p><span style="color:#000000">我今年正好五十歲了，對我來説，這個年齡是我需要重新定位人生的一個標誌點。當我三十歲時，我頗有一種 「頓覺昨日非」 的感覺，從此改變了人生軌跡；當我四十歲時，經歷了父親去世、稍後幾年弟弟及其他親人陸續去世的打擊；今年，我再次站在人生的交叉口，我想我應該有所改變了。</span></p><p><span style="color:#000000">幸運的是，我一直非常擔心的身體健康，目前還算還沒有出現大問題。前段時間去做了好幾年沒敢做的體檢，基本上沒太大的問題。</span></p></blockquote><p><span style="color:#000000">硬核老王透露，他在作出這一決定前曾反覆思考過，但始終沒有找到合適託付 「Linux 中國」 的人或機構。</span></p><p><span style="color:#000000">「一個不盈利、持續虧損的社區，很難找到能保持其獨立性和原則的託付人。我也不願意將 「Linux 中國」 所有的資產都賣給商業機構。有人曾經願意出高價買我們的域名，但是，他們出的價遠遠買不起我為此出售良心和名譽的代價。總的來説，就是因為這些大大小小的原因，我做出了艱難的決定，結束這些年的堅持。對不起了，大家。」</span></p><p><span style="color:#000000">除了對支持者們表達歉意以及感謝外，硬核老王表示，在這篇告別信發出後，除非有特殊情況，他將停止在 「Linux 中國」 的主網、公眾號、視頻號、B 站等所有渠道的內容發佈。</span></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:start"><span style="color:#000000">並在春節期間將 「Linux 中國」 所有發佈的文章都打包成一份電子書，供大家收藏留用。主網和公眾號也都會保持相當長的時間的訪問，只是可能不會再更新了。</span></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:start"><span style="color:#000000">此外，他個人則計劃在今年躺平幾個月，然後準備一個人出門走走，或許是自駕，或許是摩旅，去尋找一下人生的意義。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 01 Feb 2024 07:40:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/277277</guid>
            <link>https://www.oschina.net/news/277277</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Linux 基金會與 Lottie 合作，規範化文件格式]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">Linux 基金會<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.linuxfoundation.org%2Fpress%2Fannouncing-lottie-animation-community" target="_blank">宣佈</a>成立&nbsp;Lottie Animation Community (LAC)，致力於將 Lottie 文件格式打造成為一種高效、可擴展、跨平台的動畫矢量圖形技術和開放文件格式。</span></p><blockquote><p><span style="color:#000000">Lottie 是一種基於 JSON 格式的開源矢量圖形動畫文件格式。它由 Hernan Torrisi 於 2015 年首次創建，是一種用於從 Adobe After Effects 導出和播放動畫的導出格式。Lottie 近年來受到了廣泛關注，已成為一種非常流行的動畫格式；用於網絡、移動應用程序和其他系統，擁有多個獨立的渲染器實現和創建支持。</span></p><p><span style="color:#000000">Lottie 動畫通常使用 Adobe After Effects 製作，可包含複雜的動畫、動態圖形和交互元素。動畫製作完成後，可將其導出為 Lottie JSON 文件。該 JSON 文件包含重新創建動畫所需的所有信息，包括關鍵幀、緩和曲線和圖層信息。</span></p></blockquote><p><img height="309" src="https://oscimg.oschina.net/oscnet/up-be795c59c10636046c1f194ef42d588857f.png" width="700" referrerpolicy="no-referrer"></p><p><span style="color:#000000">Linux 基金會認為，Lottie 的演變和流行促使需要正式的格式規範和民主變革機制，以幫助該格式的開發者和消費者確保 Lottie 使用的不同平台上的可靠性能和兼容性。LAC 就是為了順應這一需求而成立。</span></p><p><span style="color:#000000">LAC 旨在將成為一個新的格式規範機構。現任 LAC 指導委員會成員包括 Hernan Torrisi、Gabriel Peal、Salih Abdul-Karim、 Google、LottieFiles 和 Airbnb。</span></p><p><span style="color:#000000">LAC 將作為一個項目在 Joint Development Foundation 的管理下運作，確保標準化工作以開放、協作的方式進行。同時保持透明度，確保社區中的每個人都能參與 Lottie 文件格式的開發和完善。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 01 Feb 2024 07:24:23 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/277274/lottie-animation-community</guid>
            <link>https://www.oschina.net/news/277274/lottie-animation-community</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Kurator V0.6.0：實現應用全流程生命週期管理]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>本文分享自華為雲社區《<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbbs.huaweicloud.com%2Fforum%2Fthread-0271141912138799003-1-1.html%3Futm_source%3Doschina%26utm_medium%3Dbbs-ex%26utm_campaign%3Dother%26utm_content%3Dcontent" target="_blank" rel="nofollow">Kurator V0.6.0：實現應用全流程生命週期管理</a>》，作者：雲容器大未來。</p><p>Kurator 是華為雲開源的面向分佈式雲原生環境的一站式解決方案。它利用 Karmada 作為多集羣編排基礎，內置集成了 Istio、Prometheus、Thanos、Volcano、KubeEdge、Argo 等主流雲原生技術。基於此，Kurator 構建了包括集羣艦隊管理、集羣生命週期管理、統一應用分發、流量治理、監控和策略管理在內的分佈式雲平台管理能力。</p><p><strong>在最新 0.6.0 版本中，Kurator 為雲原生應用增加了 CI/CD 流水線設置與管理功能，簡化流水線創建。此外，強化了 0.4.0 版本發佈的統一應用分發功能，可以在部署新應用時設置金絲雀（灰度）發佈、A/B 測試、藍綠髮布三種漸進式發佈策略。</strong>新增的流水線特性和漸進式發佈功能與統一分發能力結合，實現基於代碼倉庫的 GitOps 工作流。這有助於快速構建分佈式雲原生平台，簡化應用開發與發佈流程。Kurator CI/CD 的結構圖如下所示：</p><p><img src="https://bbs-img.huaweicloud.com/blogs/img/20240129/1706529011645122301.png" referrerpolicy="no-referrer"></p><p>用户更新代碼倉庫後，觸發 Kurator 流水線，完成代碼拉取、檢查、編譯並構建鏡像。其後，用户更新應用部署模板，例如更改應用配置中的鏡像信息。Kurator Application Controller 偵測到配置更新，將自動觸發已應用的漸進式發佈策略，實現應用的自動發佈。如此一來，整個軟件研發生命週期以代碼為中心，實現開發至發佈完整流程的自動化，簡化運維、部署工作。</p><span id="OSC_h1_1"></span><h1>流水線</h1><p>CI/CD 流水線實現源碼到發佈的自動化過程，包括源碼管理、檢查、測試等階段。但由於每個階段技術需求不同，導致流水線配置和管理難度大。Kurator 參考開源項目 Tekton，通過預定義常用任務模版的方式簡化流水線創建操作。用户只需指定任務名稱和代碼倉庫訪問憑證即可創建流水線，使用門檻低。對熟悉流水線的高級用户，Kurator 也支持自定義任務。用户可以根據自己需求定製任務內容，滿足個性化場景。通過預置任務模板和自定義任務的能力，Kurator 大幅簡化了流水線配置和管理的難度。</p><p><img src="https://bbs-img.huaweicloud.com/blogs/img/20240129/1706529025172859223.png" referrerpolicy="no-referrer"></p><p>從圖中可以看出，在使用流水線時，Kurator 完成了大部分工作。用户只需配置運行環境，選擇任務模板即可完成流水線創建，大大減少學習成本。特別是與傳統 Tekton 相比，Kurator 提供了預定義任務模板，用户只關注任務內容而不再處理具體實現，實現了流水線使用的極致簡化。</p><p>除了簡化流水線的創建操作外，Kurator 還考慮到了軟件供應鏈安全，可以在流水線構建鏡像時自動為其添加數字簽名和源頭證明，以防範假冒鏡像，保證鏡像源頭可靠，保證在鏡像製作方面的安全性。軟件供應鏈安全指的是保護軟件從開發到部署的整個生命週期過程中的安全性。軟件供應鏈安全可以提高軟件安全性能和用户信任度，預防惡意代碼滲透。簽名和證明添加後，鏡像將自動上傳至倉庫。在鏡像倉庫中可以直接查看鏡像簽名和證明的詳細情況，如圖所示。</p><p><img src="https://bbs-img.huaweicloud.com/blogs/img/20240129/1706529042004882142.png" referrerpolicy="no-referrer">用户可以用簽名過程生成的公鑰驗證鏡像簽名和源頭。這樣在生產中,生產者僅需公佈簽名公鑰，就能讓用户驗證數字簽名和來源證明。接下來將展示一個在 Kurator 中創建一個流水線的示例：</p><p><img src="https://bbs-img.huaweicloud.com/blogs/img/20240129/1706529059510694415.png" referrerpolicy="no-referrer"></p><p>在流水線定義 spec.tasks 中指定任務名稱，即可選擇 Kurator 內置的常用任務模板。目前內置的常用任務模板包括:</p><table border="1" cellspacing="0" style="border-collapse:collapse; border-spacing:0px; border:1px solid #f6f6f6; box-sizing:border-box; font-size:0.8em; max-width:100%; overflow:auto"><tbody><tr><td><p>&nbsp;</p><p>名稱</p><p>&nbsp;</p></td><td>任務目標</td></tr><tr><td>git-clone</td><td>拉取源碼</td></tr><tr><td>go-test</td><td>運行 go 代碼單元測試 <p>&nbsp;</p></td></tr><tr><td>go-lint</td><td>go 源碼靜態檢查</td></tr><tr><td>build-and-push-image</td><td>編譯，構建鏡像並上傳</td></tr></tbody></table><p>此外，通過 customTask 定義可以發佈自定義任務。通過指定 image、command 和 args,實現定製任務需求，如上述示例中自定義任務完成的工作就是打印 README.md。</p><p>更多的示例和細節，請參考: https://kurator.dev/docs/pipeline/</p><span id="OSC_h1_2"></span><h1>漸進式發佈</h1><p>金絲雀發佈、A/B 測試和藍綠髮布都是主流的應用發佈策略，可有效減少上線風險。Kurator 0.6.0 在原統一應用分發基礎上，增加漸進式發佈功能。現在應用可以指定三種漸進式發佈策略中的一種策略。同時，可以將具備發佈能力的統一分發，與 CI/CD 流水線結合起來，實現基於代碼倉庫的 GitOps 工作流。</p><span id="OSC_h2_3"></span><h2>金絲雀發佈</h2><p>金絲雀部署是一種漸進式發佈策略。先向少數用户發佈新的軟件版本進行測試，根據測試結果，決定是否向更多用户推出新版本。旨在最大限度地減少新版本上線後對用户的影響，是一種更安全、更可靠的軟件發佈策略。參閲以下的操作示例，瞭解如何使用 Kurator 配置金絲雀發佈。</p><p><img src="https://bbs-img.huaweicloud.com/blogs/img/20240129/1706529079804747862.png" referrerpolicy="no-referrer"></p><p>通過配置 rollout 中的 workload 字段，可以將金絲雀發佈的目標設置為 webapp 命名空間下名為 backend 的應用。發佈目標除了支持 deployment 應用之外，還支持 daemonSet 應用。流量分析使用 Kurator 內置的請求成功率（request-sueccess-rate）和平均訪問時延（request-duration）兩個指標作為衡量新版本是否健康的標準。其中通過 thresholdRange 指定閾值。示例中要求請求成功率<span style="background-color:#ffffff; color:#222222">達</span><strong>99%</strong>，平均訪問時延小於 500ms，新版本的服務才會被認定為健康。rolloutPolicy.canaryStrategy 配置了每次測試成功後，下次流量遞增的比例和最終允許測試版本流量佔比的最大值，從而實現漸進式發佈新版本。示例中每次遞增<span>&nbsp;</span><strong>10%</strong><span>&nbsp;</span>的流量流向新版本，最多為 50%。也可以設置 maxWeight 為 55，這樣在最後一次測試的時候，只會新增<span>&nbsp;</span><strong>5%<span>&nbsp;</span></strong>的流量流向新版本。除了這些配置之外，Kurator 還可以設定完成驗證之後，流量以什麼樣的比例逐步流向新版本。</p><p>更多細節請參考: https://kurator.dev/docs/fleet-manager/rollout/canary/</p><span id="OSC_h2_4"></span><h2>A/B 測試</h2><p>A/B 測試為效果測試，是驗證應用兩版本表現的測試方法。它通過將用户分到不同組，每個組體驗不同版本，然後分析每個組用户在使用過程中的各項指標，選擇效果較好的版本。A/B 測試也可以先讓部分用户試用新版本，收集真實環境下的用户反饋，再決定是否上線新版本。瞭解如何在 Kurator 配置應用的 A/B 測試，請參考下方操作示例。</p><p><strong><img src="https://bbs-img.huaweicloud.com/blogs/img/20240129/1706529101336764346.png" referrerpolicy="no-referrer"></strong></p><p>和金絲雀發佈類似，由 workload 指定 A/B 測試的目標。通過 metric 指定測試的指標。A/B 測試和金絲雀發佈不同的點在於需要配置 match 中的匹配規則，實現流量分組。上述 match 配置是隻有 http 請求頭滿足使用 FireFox 瀏覽器或請求的 cookie 中包含 「type=insider」 的情況下，請求才會被轉發到新版本。通過對不同請求頭的處理達到對用户分組的效果，對不同的版本進行效果測試。除了匹配請求頭之外，還能匹配 URI、端口號等。</p><p>更多細節請參考: https://kurator.dev/docs/fleet-manager/rollout/abtest/</p><span id="OSC_h2_5"></span><h2>藍綠髮布</h2><p>藍綠髮布是一種漸進零停機發布方法。它將生產環境分為兩個獨立運行的藍綠環境,藍環境承載當前實際流量，綠環境預部署新版本。新版本通過測試後,只需切換流量到綠環境，就能實現零停機升級。藍環境備用支持回滾。通過實時擴容，可近乎零停機完成迭代交付，提高發布效率和用户體驗。瞭解如何在 Kurator 配置藍綠髮布的操作示例，請參考下方。</p><p><img src="https://bbs-img.huaweicloud.com/blogs/img/20240129/1706529124611169009.png" referrerpolicy="no-referrer"></p><p>藍綠髮布需要配置目標應用、測試指標、迭代次數和容許測試失敗的次數，其中測試的迭代次數由 analysisTimes 指定，容許測試失敗的次數由 checkFailedTimes 指定，除此之外無需配置別的規則。因為藍綠髮布在測試新版本的時候是將全局流量轉發到綠環境中進行測試，沒有金絲雀發佈的漸進式流量遞增和 A/B 測試的對用户分組的需求。</p><p>更多細節請參: https://kurator.dev/docs/fleet-manager/rollout/blue-green/</p><span id="OSC_h1_6"></span><h1>未來展望</h1><p>綜上所述，通過 CI/CD 流水線和漸進式發佈功能，Kurator 實現了從源碼到發佈的完整流水線自動化，真正提升了開發效率和運維能力，實現開發、配置和發佈的應用全流程生命週期管理。此外還大幅簡化了採用 CI/CD 流水線和漸進式發佈的門檻。隨着 Kurator 的不斷迭代升級，我們還將繼續為流水線添加更多的預定義任務模板，為漸進式發佈提供更多的測試指標。歡迎大家試用 Kurator 並提出寶貴的意見與需求。Kurator 的門户為：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkurator-dev%2Fkurator" rel="nofollow" target="_blank">https://github.com/kurator-dev/kurator</a></p><p>隨着功能的逐漸完善，Kurator 將成為用户快速立體掌握雲原生技術體系、高效運行分佈式應用的強大工具。</p><span id="OSC_h3_7"></span><h3>參考鏈接</h3><p>Kurator 項目地址：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkurator-dev%2Fkurator" rel="nofollow" target="_blank">https://github.com/kurator-dev/kurator</a></p><p>CI/CD 流水線：https://kurator.dev/docs/pipeline/</p><p>軟件供應鏈安全：https://kurator.dev/docs/pipeline/chain-security/</p><p>漸進式發佈：https://kurator.dev/docs/fleet-manager/rollout/</p><p>金絲雀發佈：https://kurator.dev/docs/fleet-manager/rollout/canary/</p><p>A/B 測試：https://kurator.dev/docs/fleet-manager/rollout/abtest/</p><p>藍綠髮布：https://kurator.dev/docs/fleet-manager/rollout/blue-green/</p><p>&nbsp;</p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbbs.huaweicloud.com%2Fblogs%3Futm_source%3Doschina%26utm_medium%3Dbbs-ex%26utm_campaign%3Dother%26utm_content%3Dcontent" rel="nofollow" target="_blank"><strong>點擊關注，第一時間瞭解華為雲新鮮技術~</strong></a></p><p>&nbsp;</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 01 Feb 2024 05:49:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/4526289/blog/11009306</guid>
            <link>https://my.oschina.net/u/4526289/blog/11009306</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Java 提案計劃棄用 sun.misc.Unsafe 中的內存訪問]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">OpenJDK 社區中一個名為「<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopenjdk.org%2Fjeps%2F8323072" target="_blank">Deprecate Memory-Access Methods in sun.misc.Unsafe for Removal</a>」的 JEP 草案提出，建議棄用 sun.misc.Unsafe 中的內存訪問方法，以便在未來的 Java 版本中將其進行刪除。</span></p><p><span style="color:#000000">sun.misc.Unsafe 類於 2002 年引入，是 JDK 中 Java 類執行低級操作的一種方法，距今已有 20 多年的歷史。在該類的 87 個方法中，有 79 個用於內存訪問。</span></p><p><img height="281" src="https://oscimg.oschina.net/oscnet/up-e6847ab49a09af3d783ef2fd5ae0f2b4b87.png" width="500" referrerpolicy="no-referrer"></p><p><span style="color:#000000">該提案指出，自 JDK 9（用於訪問堆內內存）和 JDK 22（用於訪問堆外內存）以來，這些不受支持的方法已經有了受支持的替代方法。因此強烈建議庫開發人員從 sun.misc.Unsafe 遷移到受支持的替代方法，以便應用程序能夠順利遷移到現代 JDK。</span></p><p><span style="color:#000000">提案的目標包括為在未來的 JDK 版本中移除 sun.misc.Unsafe 中的內存訪問方法做好準備，以及幫助開發人員瞭解他們的應用程序何時直接或間接依賴 sun.misc.Unsafe 中的內存訪問方法。但它並不旨在完全刪除 sun.misc.Unsafe 類，因為該類中的少量方法不用於內存訪問，所以將會保持不被棄用；它們的廢棄和移除將單獨進行。</span></p><p><span style="color:#000000">提案並未明確提及將具體在哪個 Java 版本廢棄這些方法。但 JDK 22 計劃於 3 月份發佈，其功能集已被凍結；因此計劃於 9 月份發佈的 JDK 23 可能將是其目標。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 01 Feb 2024 03:47:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/277235/java-proposal-scrap-sunmiscunsafe-memory-access</guid>
            <link>https://www.oschina.net/news/277235/java-proposal-scrap-sunmiscunsafe-memory-access</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Lepton Search —— 對話式 AI 搜索工具]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Lepton Search 是用 500 行 Python 代碼構建的對話式 AI 搜索工具。該項目的後端是 Mixtral-8x7b 模型，託管在 Lepton AI，輸出速度能達到每秒大約 200 個 token，搜索引擎採用了 Bing 的搜索 API。</p><p><img src="https://oscimg.oschina.net/oscnet/up-653f2a2bd37324fb0d75d8ceb45ba2c5187.png" referrerpolicy="no-referrer"></p><p><strong>特性</strong></p><ul><li>內置 LLM 支持</li><li>內置搜索引擎支持</li><li>可定製 UI</li><li>可共享的緩存搜索結果</li></ul><p>&nbsp;</p></div>
                                                                ]]>
            </description>
            <pubDate>Thu, 01 Feb 2024 03:17:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/p/search-with-lepton</guid>
            <link>https://www.oschina.net/p/search-with-lepton</link>
        </item>
        <item>
            <title>
                <![CDATA[每日一博 | 開發 Java 應用時如何用好 Log]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="rich_media_content js_underline_content
                       autoTypeSetting24psection
            " id="js_content"><section style="margin-bottom: 8px;outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);text-align: center;visibility: visible;" data-mpa-powered-by="yiban.io"><img class="rich_pages wxw-img __bg_gif" data-backh="96" data-backw="578" data-cropselx1="0" data-cropselx2="578" data-cropsely1="0" data-cropsely2="96" data-imgfileid="503043467" data-ratio="0.16666666666666666" data-type="gif" data-w="636" src="https://oscimg.oschina.net/oscnet/86315af4-1081-4bac-801d-3b24be03a16d.gif" style="outline: 0px;letter-spacing: 0.544px;font-size: var(--articleFontsize);border-radius: 8px;text-align: justify;width: 100%;visibility: visible !important;background-size: 16px !important;height: auto;" referrerpolicy="no-referrer"><br style="outline: 0px;visibility: visible;"></section><section data-mpa-template="t" data-mpa-template-id="502" data-mpa-category="模板" style="outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);visibility: visible;"><section data-mpa-category="模板" data-mid="" style="padding-right: 1px;padding-left: 1px;outline: 0px;width: 677px;display: flex;justify-content: flex-start;align-items: center;flex-direction: column;visibility: visible;"><section data-mid="" style="outline: 0px;letter-spacing: 0.544px;width: 675px;display: grid;grid-template-columns: 26px auto;visibility: visible;"><section data-mid="" style="outline: 0px;width: 26px;height: 14px;display: flex;justify-content: center;align-items: center;align-self: center;visibility: visible;"><br style="outline: 0px;visibility: visible;"></section><section data-mid="" style="padding-left: 7px;outline: 0px;display: flex;justify-content: flex-start;align-items: center;visibility: visible;"><section data-mid="" style="margin-right: 7px;outline: 0px;text-align: left;visibility: visible;"><p data-mid="" style="outline: 0px;width: 0px;font-size: 14px;font-family: PingFangSC-Semibold, &quot;PingFang SC&quot;;font-weight: bold;color: rgb(58, 92, 244);line-height: 20px;visibility: visible;"><br style="outline: 0px;visibility: visible;"></p></section><section data-mid="" style="margin-bottom: 4px;outline: 0px;width: 635px;height: 1px;border-top: 1px solid rgb(58, 92, 244);align-self: flex-end;visibility: visible;"><br style="outline: 0px;visibility: visible;"></section></section></section><section data-mid="" style="padding: 7px 14px 9px 19px;outline: 0px;width: 675px;text-align: left;border-bottom: 1px solid rgb(58, 92, 244);visibility: visible;"><p style="outline: 0px;min-height: 24px;letter-spacing: 0.578px;text-align: justify;visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(0, 0, 0);text-align: left;text-indent: 2em;font-size: 15px;letter-spacing: 1px;">本篇文章，主要介紹應用如何正確使用日誌系統，幫助用户從依賴、輸出、清理、問題排查、報警等各方面全面掌握。</span></p></section></section></section><section style="margin-top: 8px;margin-bottom: 8px;outline: 0px;line-height: 1.75em;visibility: visible;"><br></section><section style="margin-bottom: 0px;outline: 0px;box-sizing: inherit;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);color: rgba(25, 26, 31, 0.9);font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 16px;text-align: center;visibility: visible;line-height: 1.75em;"><span style="outline: 0px;visibility: visible;font-size: 15px;letter-spacing: 1px;"><img class="rich_pages wxw-img" data-imgfileid="503043463" data-ratio="0.3161764705882353" data-s="300,640" data-type="png" data-w="408" src="https://oscimg.oschina.net/oscnet/cabc16ce-7fe8-42cf-aa27-c0c990e211f3.png" style="outline: 0px;color: rgb(34, 34, 34);font-family: system-ui, -apple-system, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;visibility: visible !important;width: 113px !important;" referrerpolicy="no-referrer"></span></section><section style="margin-bottom: 0px;outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);color: rgb(34, 34, 34);text-align: center;visibility: visible;line-height: normal;"><span style="outline: 0px;color: rgb(3, 69, 255);font-family: -apple-system, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 18px;letter-spacing: 1px;visibility: visible;">日誌相關的包的種類及使用</span></section><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;text-align: justify;"><ne-clipboard data="%7B%22type%22%3A%22fragment%22%2C%22name%22%3A%22%23fragment%22%2C%22children%22%3A%5B%7B%22type%22%3A%22element%22%2C%22id%22%3A%22UiUKr%22%2C%22name%22%3A%22h2%22%2C%22attrs%22%3A%7B%7D%2C%22children%22%3A%5B%7B%22type%22%3A%22text%22%2C%22id%22%3A%22u57ca2a4a%22%2C%22name%22%3A%22%23text%22%2C%22attrs%22%3A%7B%22color%22%3A%22rgb(0%2C%200%2C%200)%22%7D%2C%22data%22%3A%22%E6%97%A5%E5%BF%97%E7%B3%BB%E7%BB%9F%E4%B8%8E%E6%97%A5%E5%BF%97%E6%A1%86%E6%9E%B6%22%7D%5D%7D%5D%2C%22attrs%22%3A%7B%7D%7D" source="https%3A%2F%2Faliyuque.antfin.com%2Fwien.wuh%2Fdoc%2Fctdtsgv6r0esyll2%3FsingleDoc%23"><br></ne-clipboard></p><span id="OSC_h4_1"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 0.5em;margin-bottom: 8px;text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;text-align: justify;"><span style="outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong><strong style="outline: 0px;visibility: visible;"><span style="color: rgb(0, 17, 255);outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">日誌系統與日誌框架</span></strong></span></h4><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;text-align: justify;"><br></p><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;text-align: justify;"><span style="color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;text-align: left;text-indent: 32px;white-space: break-spaces;background-color: rgb(255, 255, 255);font-size: 15px;letter-spacing: 1px;">每個應用為了方便排查問題都要輸出日誌，大家經常使用：log4j、logback 等。我們先搞明白日誌系統的整套體系是如何運作的。</span></section><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;text-align: justify;"><br></p><ul class="list-paddingleft-1" style="list-style-type: disc;"><li style="color: rgb(0, 17, 255);"><span id="OSC_h3_2"></span><h3 style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;text-align: justify;"><span style="font-size: 15px;letter-spacing: 1px;color: rgb(0, 17, 255);">日誌系統</span></h3></li></ul><section style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></section><section style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;">直接負責打印輸出日誌，提供完整的日誌輸出能力：</span></section><ol class="list-paddingleft-1" style="list-style-type: decimal;"><li><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;text-align: justify;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;">JUL</span></section></li><ul ne-level="1" class="list-paddingleft-1" style="padding-left: 23px;list-style-position: initial;list-style-image: initial;"><li style="font-size: 15px;letter-spacing: 1px;"><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;text-align: justify;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;">java.util.logging.*，java 自帶的日誌系統簡稱 JUL。目前除了 Java 自身代碼很少被生態系統類庫使用。</span></section></li></ul><li><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;text-align: justify;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;">Log4j</span></section></li><ul ne-level="1" class="list-paddingleft-1" style="padding-left: 23px;list-style-position: initial;list-style-image: initial;"><li><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;text-align: justify;"><span style="font-size: 15px;letter-spacing: 1px;">https://logging.apache.org/</span><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;">，目前已經發展到 2.x 版本（2.x 版本有超越 logback 的趨勢），早期的 1.x 版本非常成功。開創日誌系統模型（Logger\Appender\Level 等概念）並被各種日誌框架採用，且一直沿用至今</span></section></li><li style="font-size: 15px;letter-spacing: 1px;"><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;text-align: justify;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;">log4j 可直接使用，也可配合日誌框架一起使用</span></section></li></ul><li><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;text-align: justify;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;">Logback</span></section></li></ol><ul class="list-paddingleft-1" style="padding-left: 23px;list-style: none;"><ul ne-level="1" class="list-paddingleft-1" style="padding-left: 23px;list-style-position: initial;list-style-image: initial;"><li><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;text-align: justify;"><span style="font-size: 15px;letter-spacing: 1px;">http://logback.qos.ch/</span><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;">，Log4j 作者的另一個作品，（比 Log4j1.x 新，Log4j2.x 舊）吸取多年經驗教訓重新設計的一套日誌系統，使用更方便、功能更強、性能更好。</span></section></li><li style="font-size: 15px;letter-spacing: 1px;"><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;text-align: justify;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;">logback 不能單獨使用，需配置日誌框架 SLF4J 一起使用</span></section></li></ul></ul><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;text-align: justify;"><br></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;text-align: justify;"><ne-clipboard source="https%3A%2F%2Faliyuque.antfin.com%2Fwien.wuh%2Fdoc%2Fctdtsgv6r0esyll2%3FsingleDoc%23"></ne-clipboard></section><ul class="list-paddingleft-1" style="list-style-type: disc;"><li style="color: rgb(0, 17, 255);"><span id="OSC_h3_3"></span><h3 style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;text-align: justify;"><span style="font-size: 15px;letter-spacing: 1px;color: rgb(0, 17, 255);">日誌框架</span></h3></li></ul><section style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></section><section style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;">為了克服各種日誌系統標準混亂，誕生了日誌框架，日誌框架不提供日誌輸出的功能，它定義標準，提供標準接口 API，日誌框架+日誌系統=輸出日誌。</span></section><section style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;">寫代碼過程中使用日誌框架的好處：編碼的時候調用日誌框架 API，部署的時候可根據不同的環境在多種日誌系統中隨意切換。</span></section><ol class="list-paddingleft-1" style="list-style-type: decimal;"><li><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;text-align: justify;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;">JCL</span></section></li><ul ne-level="1" class="list-paddingleft-1" style="padding-left: 23px;list-style-position: initial;list-style-image: initial;"><li><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;text-align: justify;"><span style="font-size: 15px;letter-spacing: 1px;">https://commons.apache.org/proper/commons-logging/</span><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;">，前幾年最流行的日誌框架，由 Apache 社區維護，大量的老牌知名框架版本都在使用，比如 Spring（甚至新版本依然在使用）。</span></section></li></ul><li><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;text-align: justify;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;">SLF4J</span></section></li></ol><ul class="list-paddingleft-1" style="padding-left: 23px;list-style: none;"><ul ne-level="1" class="list-paddingleft-1" style="padding-left: 23px;list-style-position: initial;list-style-image: initial;"><li><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;text-align: justify;"><span style="font-size: 15px;letter-spacing: 1px;">https://www.slf4j.org/</span><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;">，Log4j 作者推出，這幾年最流行的日誌框架，特別是配合 Logback 使用。 </span></section></li><li style="font-size: 15px;letter-spacing: 1px;"><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;text-align: justify;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;">當然也可以配合 log4j 使用</span></section></li></ul></ul><section style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;">目前在 Java 生態趨勢主要是使用：SLF4J+Logback 組合。</span></section><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;text-align: justify;"><br></p><span id="OSC_h4_4"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 0.5em;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;text-align: justify;"><span style="outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong><strong style="outline: 0px;visibility: visible;"><span style="color: rgb(0, 17, 255);outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">如何正確組合使用日誌系統和日誌框架</span></strong></span></h4><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 0.5em;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;"></h4><section style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><br></section><p style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;">上一節我們介紹了日誌框架和日誌系統，因為存在多套，所以：如何在系統中正確使用是我們的重點。</span></p><p style="min-height: 24px;text-align: left;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></p><ul class="list-paddingleft-1" style="list-style-type: disc;"><li style="color: rgb(0, 17, 255);"><span id="OSC_h3_5"></span><h3 style="min-height: 24px;text-align: left;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;color: rgb(0, 17, 255);">日誌系統之間互斥</span></h3></li></ul><section style="margin-bottom: 8px;line-height: 1.75em;margin-top: 8px;"><br></section><section style="margin-bottom: 8px;line-height: 1.75em;margin-top: 8px;text-align: center;"><span style="box-sizing: inherit;color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;"><img class="rich_pages wxw-img" data-imgfileid="503043462" data-ratio="0.7355704697986577" src="https://oscimg.oschina.net/oscnet/c9170f55-7f05-40d9-a26f-b71453fc1e8d.png" data-type="png" data-w="745" referrerpolicy="no-referrer"></span></section><ol class="list-paddingleft-1" style="list-style-type: decimal;"><li><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">日誌框架：JCL 和 JCL-over-SLF4J 橋接包直接互斥</span><br></section></li><li><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;">日誌系統：logback 和 slf4j-log4j12 互斥，不能共存</span></section></li></ol><section style="min-height: 24px;text-align: left;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></section><section style="min-height: 24px;text-align: left;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;">我們大概可枚舉出如下幾種組合：</span></section><table width="641"><tbody><tr style="height: 33px;"><td width="130" style="border-color: rgb(217, 217, 217);"><p style="min-height: 24px;text-align: left;"><span style="color: rgb(0, 0, 0);font-size: 15px;">類型</span></p></td><td width="511" style="min-height: 24px;text-align: left;border-color: rgb(217, 217, 217);height: 33px;"><p style="min-height: 24px;text-align: left;border-color: rgb(217, 217, 217);height: 33px;"><span style="color: rgb(0, 0, 0);font-size: 15px;">説明</span></p></td></tr><tr style="height: 33px;"><td width="130" style="border-color: rgb(217, 217, 217);"><p style="min-height: 24px;text-align: left;"><span style="color: rgb(0, 0, 0);font-size: 15px;">slf4j+logback</span></p></td><td width="511" style="border-color: rgb(217, 217, 217);"><p style="min-height: 24px;text-align: left;"><span style="color: rgb(0, 0, 0);font-size: 15px;">目前最主流的玩法，除了依賴 slf4j、logback，還需要考慮把二方庫和三方庫內部使用的 jcl 和 log4j 橋接到 slf4j 上來，並避免依賴反橋接的包</span></p></td></tr><tr style="height: 33px;"><td width="130" style="border-color: rgb(217, 217, 217);"><p style="min-height: 24px;text-align: left;"><span style="color: rgb(0, 0, 0);font-size: 15px;">slf4j+log4j</span></p></td><td width="511" style="border-color: rgb(217, 217, 217);"><p style="min-height: 24px;text-align: left;"><span style="color: rgb(0, 0, 0);font-size: 15px;">不推薦。需要把 slf4j 橋接到 log4j，並把 jul 橋接到 slf4j</span></p></td></tr><tr style="height: 33px;"><td width="130" style="border-color: rgb(217, 217, 217);"><p style="min-height: 24px;text-align: left;"><span style="color: rgb(0, 0, 0);font-size: 15px;">jcl+log4j</span></p></td><td width="511" style="border-color: rgb(217, 217, 217);"><p style="min-height: 24px;text-align: left;"><span style="color: rgb(0, 0, 0);font-size: 15px;">不推薦。這需要你直接使用 jcl 接口來編碼，並把把 slf4j 橋接到 log4j</span></p></td></tr><tr style="height: 33px;"><td width="130" style="border-color: rgb(217, 217, 217);"><p style="min-height: 24px;text-align: left;"><span style="color: rgb(0, 0, 0);font-size: 15px;">log4j</span></p></td><td width="511" style="border-color: rgb(217, 217, 217);"><p style="min-height: 24px;text-align: left;"><span style="color: rgb(0, 0, 0);font-size: 15px;">不推薦。直接依賴日誌系統</span></p></td></tr></tbody></table><p style="min-height: 24px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><br></p><ul class="list-paddingleft-1" style="list-style-type: disc;"><li style="color: rgb(0, 17, 255);"><span id="OSC_h3_6"></span><h3 style="min-height: 24px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;color: rgb(0, 17, 255);">slf4j+logback 組合</span></h3></li></ul><p style="margin-bottom: 8px;text-align: justify;margin-top: 8px;line-height: 1.75em;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;"><br></span></p><p style="min-height: 24px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;">下面列出一個正確的 slf4j+logback 依賴，這個環節很重要，很多應用因為依賴搞不清楚經常出現日誌丟失問題：</span></p><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="xml"><code><span class="code-snippet_outer">&lt;properties&gt;</span></code><code><span class="code-snippet_outer">  &lt;slf4j.version&gt;${xxxx}&lt;/slf4j.version&gt;</span></code><code><span class="code-snippet_outer">  &lt;logback.version&gt;${yyyyy}&lt;/logback.version&gt;</span></code><code><span class="code-snippet_outer">&lt;/properties&gt;</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">&lt;dependencyManagement&gt;</span></code><code><span class="code-snippet_outer">  &lt;dependencies&gt;</span></code><code><span class="code-snippet_outer">    &lt;dependency&gt;</span></code><code><span class="code-snippet_outer">      &lt;groupId&gt;commons-logging&lt;/groupId&gt;</span></code><code><span class="code-snippet_outer">      &lt;artifactId&gt;commons-logging&lt;/artifactId&gt;</span></code><code><span class="code-snippet_outer">      &lt;version&gt;999-not-exist&lt;/version&gt;</span></code><code><span class="code-snippet_outer">    &lt;/dependency&gt;</span></code><code><span class="code-snippet_outer">    &lt;dependency&gt;</span></code><code><span class="code-snippet_outer">      &lt;groupId&gt;com.alibaba.external&lt;/groupId&gt;</span></code><code><span class="code-snippet_outer">      &lt;artifactId&gt;jakarta.commons.logging&lt;/artifactId&gt;</span></code><code><span class="code-snippet_outer">      &lt;version&gt;999-not-exist&lt;/version&gt;</span></code><code><span class="code-snippet_outer">    &lt;/dependency&gt;</span></code><code><span class="code-snippet_outer">    &lt;dependency&gt;</span></code><code><span class="code-snippet_outer">      &lt;groupId&gt;org.slf4j&lt;/groupId&gt;</span></code><code><span class="code-snippet_outer">      &lt;artifactId&gt;slf4j-log4j12&lt;/artifactId&gt;</span></code><code><span class="code-snippet_outer">      &lt;version&gt;999-not-exist&lt;/version&gt;</span></code><code><span class="code-snippet_outer">    &lt;/dependency&gt;</span></code><code><span class="code-snippet_outer">    &lt;dependency&gt;</span></code><code><span class="code-snippet_outer">        &lt;groupId&gt;com.alibaba.external&lt;/groupId&gt;</span></code><code><span class="code-snippet_outer">        &lt;artifactId&gt;org.slf4j.slf4j-log4j12&lt;/artifactId&gt;</span></code><code><span class="code-snippet_outer">        &lt;version&gt;999-not-exist&lt;/version&gt;</span></code><code><span class="code-snippet_outer">    &lt;/dependency&gt;</span></code><code><span class="code-snippet_outer">    &lt;dependency&gt;</span></code><code><span class="code-snippet_outer">      &lt;groupId&gt;org.slf4j&lt;/groupId&gt;</span></code><code><span class="code-snippet_outer">      &lt;artifactId&gt;slf4j-nop&lt;/artifactId&gt;</span></code><code><span class="code-snippet_outer">      &lt;version&gt;999-not-exist&lt;/version&gt;</span></code><code><span class="code-snippet_outer">    &lt;/dependency&gt;</span></code><code><span class="code-snippet_outer">    &lt;dependency&gt;</span></code><code><span class="code-snippet_outer">      &lt;groupId&gt;org.slf4j&lt;/groupId&gt;</span></code><code><span class="code-snippet_outer">      &lt;artifactId&gt;slf4j-simple&lt;/artifactId&gt;</span></code><code><span class="code-snippet_outer">      &lt;version&gt;999-not-exist&lt;/version&gt;</span></code><code><span class="code-snippet_outer">    &lt;/dependency&gt;</span></code><code><span class="code-snippet_outer">    &lt;dependency&gt;</span></code><code><span class="code-snippet_outer">        &lt;groupId&gt;com.alibaba.external&lt;/groupId&gt;</span></code><code><span class="code-snippet_outer">        &lt;artifactId&gt;org.slf4j.slf4j-simple&lt;/artifactId&gt;</span></code><code><span class="code-snippet_outer">        &lt;version&gt;999-not-exist&lt;/version&gt;</span></code><code><span class="code-snippet_outer">    &lt;/dependency&gt;</span></code><code><span class="code-snippet_outer">    &lt;dependency&gt;</span></code><code><span class="code-snippet_outer">      &lt;groupId&gt;log4j&lt;/groupId&gt;</span></code><code><span class="code-snippet_outer">      &lt;artifactId&gt;log4j&lt;/artifactId&gt;</span></code><code><span class="code-snippet_outer">      &lt;version&gt;999-not-exist&lt;/version&gt;</span></code><code><span class="code-snippet_outer">    &lt;/dependency&gt;</span></code><code><span class="code-snippet_outer">    &lt;dependency&gt;</span></code><code><span class="code-snippet_outer">      &lt;groupId&gt;org.slf4j&lt;/groupId&gt;</span></code><code><span class="code-snippet_outer">      &lt;artifactId&gt;slf4j-api&lt;/artifactId&gt;</span></code><code><span class="code-snippet_outer">      &lt;version&gt;${slf4j.version}&lt;/version&gt;</span></code><code><span class="code-snippet_outer">    &lt;/dependency&gt;</span></code><code><span class="code-snippet_outer">    &lt;dependency&gt;</span></code><code><span class="code-snippet_outer">      &lt;groupId&gt;org.slf4j&lt;/groupId&gt;</span></code><code><span class="code-snippet_outer">      &lt;artifactId&gt;slf4j-ext&lt;/artifactId&gt;</span></code><code><span class="code-snippet_outer">      &lt;version&gt;${slf4j.version}&lt;/version&gt;</span></code><code><span class="code-snippet_outer">    &lt;/dependency&gt;</span></code><code><span class="code-snippet_outer">    &lt;dependency&gt;</span></code><code><span class="code-snippet_outer">      &lt;groupId&gt;org.slf4j&lt;/groupId&gt;</span></code><code><span class="code-snippet_outer">      &lt;artifactId&gt;jcl-over-slf4j&lt;/artifactId&gt;</span></code><code><span class="code-snippet_outer">      &lt;version&gt;${slf4j.version}&lt;/version&gt;</span></code><code><span class="code-snippet_outer">    &lt;/dependency&gt;</span></code><code><span class="code-snippet_outer">    &lt;dependency&gt;</span></code><code><span class="code-snippet_outer">      &lt;groupId&gt;org.slf4j&lt;/groupId&gt;</span></code><code><span class="code-snippet_outer">      &lt;artifactId&gt;jul-to-slf4j&lt;/artifactId&gt;</span></code><code><span class="code-snippet_outer">      &lt;version&gt;${slf4j.version}&lt;/version&gt;</span></code><code><span class="code-snippet_outer">    &lt;/dependency&gt;</span></code><code><span class="code-snippet_outer">    &lt;dependency&gt;</span></code><code><span class="code-snippet_outer">      &lt;groupId&gt;org.slf4j&lt;/groupId&gt;</span></code><code><span class="code-snippet_outer">      &lt;artifactId&gt;log4j-over-slf4j&lt;/artifactId&gt;</span></code><code><span class="code-snippet_outer">      &lt;version&gt;${slf4j.version}&lt;/version&gt;</span></code><code><span class="code-snippet_outer">    &lt;/dependency&gt;</span></code><code><span class="code-snippet_outer">    &lt;dependency&gt;</span></code><code><span class="code-snippet_outer">      &lt;groupId&gt;ch.qos.logback&lt;/groupId&gt;</span></code><code><span class="code-snippet_outer">      &lt;artifactId&gt;logback-core&lt;/artifactId&gt;</span></code><code><span class="code-snippet_outer">      &lt;version&gt;${logback.version}&lt;/version&gt;</span></code><code><span class="code-snippet_outer">    &lt;/dependency&gt;</span></code><code><span class="code-snippet_outer">    &lt;dependency&gt;</span></code><code><span class="code-snippet_outer">      &lt;groupId&gt;ch.qos.logback&lt;/groupId&gt;</span></code><code><span class="code-snippet_outer">      &lt;artifactId&gt;logback-classic&lt;/artifactId&gt;</span></code><code><span class="code-snippet_outer">      &lt;version&gt;${logback.version}&lt;/version&gt;</span></code><code><span class="code-snippet_outer">    &lt;/dependency&gt;</span></code><code><span class="code-snippet_outer">  &lt;/dependencies&gt;</span></code><code><span class="code-snippet_outer">&lt;/dependencyManagement&gt;</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">&lt;dependencies&gt;</span></code><code><span class="code-snippet_outer">  &lt;dependency&gt;</span></code><code><span class="code-snippet_outer">    &lt;groupId&gt;org.slf4j&lt;/groupId&gt;</span></code><code><span class="code-snippet_outer">    &lt;artifactId&gt;slf4j-api&lt;/artifactId&gt;</span></code><code><span class="code-snippet_outer">  &lt;/dependency&gt;</span></code><code><span class="code-snippet_outer">  &lt;dependency&gt;</span></code><code><span class="code-snippet_outer">    &lt;groupId&gt;org.slf4j&lt;/groupId&gt;</span></code><code><span class="code-snippet_outer">    &lt;artifactId&gt;slf4j-ext&lt;/artifactId&gt;</span></code><code><span class="code-snippet_outer">  &lt;/dependency&gt;</span></code><code><span class="code-snippet_outer">  &lt;dependency&gt;</span></code><code><span class="code-snippet_outer">    &lt;groupId&gt;org.slf4j&lt;/groupId&gt;</span></code><code><span class="code-snippet_outer">    &lt;artifactId&gt;jcl-over-slf4j&lt;/artifactId&gt;</span></code><code><span class="code-snippet_outer">  &lt;/dependency&gt;</span></code><code><span class="code-snippet_outer">  &lt;dependency&gt;</span></code><code><span class="code-snippet_outer">    &lt;groupId&gt;org.slf4j&lt;/groupId&gt;</span></code><code><span class="code-snippet_outer">    &lt;artifactId&gt;jul-to-slf4j&lt;/artifactId&gt;</span></code><code><span class="code-snippet_outer">  &lt;/dependency&gt;</span></code><code><span class="code-snippet_outer">  &lt;dependency&gt;</span></code><code><span class="code-snippet_outer">    &lt;groupId&gt;org.slf4j&lt;/groupId&gt;</span></code><code><span class="code-snippet_outer">    &lt;artifactId&gt;log4j-over-slf4j&lt;/artifactId&gt;</span></code><code><span class="code-snippet_outer">  &lt;/dependency&gt;</span></code><code><span class="code-snippet_outer">  &lt;dependency&gt;</span></code><code><span class="code-snippet_outer">    &lt;groupId&gt;ch.qos.logback&lt;/groupId&gt;</span></code><code><span class="code-snippet_outer">    &lt;artifactId&gt;logback-core&lt;/artifactId&gt;</span></code><code><span class="code-snippet_outer">  &lt;/dependency&gt;</span></code><code><span class="code-snippet_outer">  &lt;dependency&gt;</span></code><code><span class="code-snippet_outer">    &lt;groupId&gt;ch.qos.logback&lt;/groupId&gt;</span></code><code><span class="code-snippet_outer">    &lt;artifactId&gt;logback-classic&lt;/artifactId&gt;</span></code><code><span class="code-snippet_outer">  &lt;/dependency&gt;</span></code><code><span class="code-snippet_outer">&lt;/dependencies&gt;</span></code></pre></section><p style="min-height: 24px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;"><ne-clipboard source="https%3A%2F%2Faliyuque.antfin.com%2Fwien.wuh%2Fdoc%2Fctdtsgv6r0esyll2%3FsingleDoc%23"><br></ne-clipboard></span></p><ol class="list-paddingleft-1" style="list-style-type: decimal;"><li><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;text-align: justify;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">先將依賴全部寫在&lt;dependencyManagement&gt;節點中，這樣可影響間接依賴，如果只當初的使用 dependencies 節點，只會應用直接依賴</span></p></li><li><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;text-align: justify;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">使用 999-not-exist 這樣的版本：欺騙 maven，直接依賴一個空包占位，這樣 Maven 就不會再去依賴相同座標的真實依賴，間接起到排包的作用</span></p></li></ol><section style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;"><br></span></section><span id="OSC_h4_7"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 0.5em;margin-bottom: 8px;text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;text-align: justify;"><span style="outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong><strong style="outline: 0px;visibility: visible;"><span style="color: rgb(0, 17, 255);outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">logback 配置</span></strong></span></h4><section style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></section><ul class="list-paddingleft-1" style="list-style-type: disc;"><li style="color: rgb(0, 17, 255);"><span id="OSC_h3_8"></span><h3 style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;color: rgb(0, 17, 255);">文件名和位置</span></h3></li></ul><section style="min-height: 24px;text-align: left;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></section><table width="873"><tbody><tr style="height: 33px;"><td width="227" style="border-color: rgb(217, 217, 217);"><p style="min-height: 24px;text-align: left;"><span style="color: rgb(0, 0, 0);font-size: 15px;">應用類型</span></p></td><td width="166" style="border-color: rgb(217, 217, 217);"><p style="min-height: 24px;text-align: left;"><span style="color: rgb(0, 0, 0);font-size: 15px;">文件名</span></p></td><td width="230" style="border-color: rgb(217, 217, 217);"><p style="min-height: 24px;text-align: left;"><span style="color: rgb(0, 0, 0);font-size: 15px;">文件配置（啓動模塊）</span></p></td><td width="250" style="border-color: rgb(217, 217, 217);"><p style="min-height: 24px;text-align: left;"><span style="color: rgb(0, 0, 0);font-size: 15px;">説明</span></p></td></tr><tr style="height: 33px;"><td width="227" style="border-color: rgb(217, 217, 217);"><p style="min-height: 24px;text-align: left;"><span style="color: rgb(0, 0, 0);font-size: 15px;">spring-boot</span></p></td><td width="166" style="border-color: rgb(217, 217, 217);"><p style="min-height: 24px;text-align: left;"><span style="color: rgb(0, 0, 0);font-size: 15px;">logback-spring.xml</span></p></td><td width="230" style="border-color: rgb(217, 217, 217);"><p style="min-height: 24px;text-align: left;"><span style="color: rgb(0, 0, 0);font-size: 15px;">src/main/resources/</span></p></td><td width="250" style="border-color: rgb(217, 217, 217);"><p style="min-height: 24px;text-align: left;"><span style="color: rgb(0, 0, 0);font-size: 15px;">支持從 spring-boot 配置文件中直接讀取 property</span></p></td></tr><tr style="height: 33px;"><td width="227" style="border-color: rgb(217, 217, 217);"><p style="min-height: 24px;text-align: left;"><span style="color: rgb(0, 0, 0);font-size: 15px;">普通 java 應用</span></p></td><td width="166" style="border-color: rgb(217, 217, 217);"><p style="min-height: 24px;text-align: left;"><span style="color: rgb(0, 0, 0);font-size: 15px;">logback.xml</span></p></td><td width="230" style="border-color: rgb(217, 217, 217);"><p style="min-height: 24px;text-align: left;"><span style="color: rgb(0, 0, 0);font-size: 15px;">src/main/resources/</span></p></td><td width="250" style="border-color: rgb(217, 217, 217);"><br></td></tr><tr style="height: 33px;"><td width="227" style="border-color: rgb(217, 217, 217);"><p style="min-height: 24px;text-align: left;"><span style="color: rgb(0, 0, 0);font-size: 15px;">WAR 應用</span></p></td><td width="166" style="border-color: rgb(217, 217, 217);"><p style="min-height: 24px;text-align: left;"><span style="color: rgb(0, 0, 0);font-size: 15px;">logback.xml</span></p></td><td width="230" style="border-color: rgb(217, 217, 217);"><p style="min-height: 24px;text-align: left;"><span style="color: rgb(0, 0, 0);font-size: 15px;">src/main/webapp/WEB-INF/</span></p></td><td width="250" style="border-color: rgb(217, 217, 217);"><p style="min-height: 24px;text-align: left;"><span style="color: rgb(0, 0, 0);font-size: 15px;">需要依賴 slf4j-ext，然後在 web.xml 裏使用監聽器掛載這個文件</span></p><p style="min-height: 24px;text-align: left;"><img data-imgfileid="503043469" data-ratio="0.17224287484510534" src="https://oscimg.oschina.net/oscnet/f50acf96-72cd-4627-bcc5-a1741d7beea4.png" data-type="png" data-w="807" width="807" referrerpolicy="no-referrer"></p></td></tr><tr style="height: 33px;"><td width="227" style="border-color: rgb(217, 217, 217);"><p style="min-height: 24px;text-align: left;"><span style="color: rgb(0, 0, 0);font-size: 15px;">單元測試和集成測試</span></p></td><td width="166" style="border-color: rgb(217, 217, 217);"><p style="min-height: 24px;text-align: left;"><span style="color: rgb(0, 0, 0);font-size: 15px;">logback-test.xml</span></p></td><td width="230" style="border-color: rgb(217, 217, 217);"><p style="min-height: 24px;text-align: left;"><span style="color: rgb(0, 0, 0);font-size: 15px;">src/test/resources/</span></p></td><td width="250" style="border-color: rgb(217, 217, 217);"><br></td></tr></tbody></table><p style="min-height: 24px;text-align: justify;margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><br></p><ul class="list-paddingleft-1" style="list-style-type: disc;"><li style="color: rgb(0, 17, 255);"><span id="OSC_h3_9"></span><h3 style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;text-align: justify;"><span style="font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;color: rgb(0, 17, 255);">配置樣例</span></h3></li></ul><p style="min-height: 24px;text-align: justify;margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><br></p><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="xml"><code><span class="code-snippet_outer">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></code><code><span class="code-snippet_outer">&lt;configuration&gt;</span></code><code><span class="code-snippet_outer">  &lt;property name="APP_NAME" value="demo1" /&gt;</span></code><code><span class="code-snippet_outer">  &lt;property name="LOG_PATH" value="${user.home}/${APP_NAME}/logs" /&gt;</span></code><code><span class="code-snippet_outer">  &lt;property name="LOG_FILE" value="${LOG_PATH}/application.log" /&gt;</span></code><code><span class="code-snippet_outer">  &lt;property name="LOG.PATTERN" value="%d %-5level %X{EAGLEEYE_TRACE_ID}  %logger{5}[%L] - %msg%n"/&gt;</span></code><code><span class="code-snippet_outer">  &lt;property name="LOG.CHARSET" value="UTF-8"/&gt;</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">  &lt;appender name="APPLICATION"</span></code><code><span class="code-snippet_outer">    class="ch.qos.logback.core.rolling.RollingFileAppender"&gt;</span></code><code><span class="code-snippet_outer">    &lt;file&gt;${LOG_FILE}&lt;/file&gt;</span></code><code><span class="code-snippet_outer">    &lt;encoder&gt;</span></code><code><span class="code-snippet_outer">      &lt;pattern&gt;${LOG.PATTERN}&lt;/pattern&gt;</span></code><code><span class="code-snippet_outer">      &lt;charset&gt;${LOG.CHARSET}&lt;/charset&gt;</span></code><code><span class="code-snippet_outer">    &lt;/encoder&gt;</span></code><code><span class="code-snippet_outer">    &lt;rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy"&gt;</span></code><code><span class="code-snippet_outer">      &lt;fileNamePattern&gt;${LOG_FILE}.%d{yyyy-MM-dd}.%i.log&lt;/fileNamePattern&gt;</span></code><code><span class="code-snippet_outer">      &lt;maxHistory&gt;7&lt;/maxHistory&gt;</span></code><code><span class="code-snippet_outer">      &lt;maxFileSize&gt;50MB&lt;/maxFileSize&gt;</span></code><code><span class="code-snippet_outer">      &lt;totalSizeCap&gt;20GB&lt;/totalSizeCap&gt;</span></code><code><span class="code-snippet_outer">    &lt;/rollingPolicy&gt;</span></code><code><span class="code-snippet_outer">  &lt;/appender&gt;</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">  &lt;logger name="org.springframework" additivity="false"&gt;</span></code><code><span class="code-snippet_outer">    &lt;level value="error"/&gt;</span></code><code><span class="code-snippet_outer">    &lt;appender-ref ref="APPLICATION"/&gt;</span></code><code><span class="code-snippet_outer">  &lt;/logger&gt;</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">  &lt;logger name="com.ibatis" additivity="false"&gt;</span></code><code><span class="code-snippet_outer">    &lt;level value="error"/&gt;</span></code><code><span class="code-snippet_outer">    &lt;appender-ref ref="APPLICATION"/&gt;</span></code><code><span class="code-snippet_outer">  &lt;/logger&gt;</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">  &lt;logger name="org.mybatis" additivity="false"&gt;</span></code><code><span class="code-snippet_outer">    &lt;level value="error"/&gt;</span></code><code><span class="code-snippet_outer">    &lt;appender-ref ref="APPLICATION"/&gt;</span></code><code><span class="code-snippet_outer">  &lt;/logger&gt;</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">  &lt;logger name="java.sql" additivity="false"&gt;</span></code><code><span class="code-snippet_outer">    &lt;level value="error"/&gt;</span></code><code><span class="code-snippet_outer">    &lt;appender-ref ref="APPLICATION"/&gt;</span></code><code><span class="code-snippet_outer">  &lt;/logger&gt;</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">  &lt;logger name="sqlMonitor" additivity="false"&gt;</span></code><code><span class="code-snippet_outer">    &lt;level value="error"/&gt;</span></code><code><span class="code-snippet_outer">    &lt;appender-ref ref="APPLICATION"/&gt;</span></code><code><span class="code-snippet_outer">  &lt;/logger&gt;</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">  &lt;logger name="com.taobao" additivity="false"&gt;</span></code><code><span class="code-snippet_outer">    &lt;level value="error"/&gt;</span></code><code><span class="code-snippet_outer">    &lt;appender-ref ref="APPLICATION"/&gt;</span></code><code><span class="code-snippet_outer">  &lt;/logger&gt;</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">  &lt;logger name="com.alibaba" additivity="false"&gt;</span></code><code><span class="code-snippet_outer">    &lt;level value="error"/&gt;</span></code><code><span class="code-snippet_outer">    &lt;appender-ref ref="APPLICATION"/&gt;</span></code><code><span class="code-snippet_outer">  &lt;/logger&gt;</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">  &lt;logger name="com.alibaba.example.demo" additivity="false"&gt;</span></code><code><span class="code-snippet_outer">    &lt;level value="info"/&gt;</span></code><code><span class="code-snippet_outer">    &lt;appender-ref ref="APPLICATION"/&gt;</span></code><code><span class="code-snippet_outer">  &lt;/logger&gt;</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">  &lt;root level="error"&gt;</span></code><code><span class="code-snippet_outer">    &lt;appender-ref ref="APPLICATION" /&gt;</span></code><code><span class="code-snippet_outer">  &lt;/root&gt;</span></code><code><span class="code-snippet_outer">&lt;/configuration&gt;</span></code></pre></section><p style="min-height: 24px;text-align: justify;margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><br></p><ol class="list-paddingleft-1" style="list-style-type: decimal;"><li><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">使用 SizeAndTimeBasedRollingPolicy 使日誌可以根據大小和日期進行滾動</span></p></li><li><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">日誌編碼請使用 UTF-8</span></p></li><li><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">請正確使用日誌級別，不要統統輸出 error</span></p></li></ol><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></p><ul class="list-paddingleft-1" style="list-style-type: disc;"><li style="color: rgb(0, 17, 255);"><span id="OSC_h3_10"></span><h3 style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;color: rgb(0, 17, 255);">日誌級別根據不同環境可配</span></h3></li></ul><section style="margin-bottom: 8px;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;"><br></span></section><ol class="list-paddingleft-1" style="list-style-type: decimal;"><li><section style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">如果是 Pandora-boot 或 spring-boot 可以直接在配置裏使用 property 讀取 application.properties，application.properties 在不同環境下使用-Dspring.profiles.active 進行切換</span></section></li><li><section style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">普通應用和 WAR 應用：請使用 autoconfig-maven-plugin 插件</span></section></li></ol><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><br></p><section style="margin-bottom: 0px;outline: 0px;box-sizing: inherit;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);color: rgba(25, 26, 31, 0.9);font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 16px;text-align: center;visibility: visible;line-height: normal;"><span style="outline: 0px;font-size: 15px;letter-spacing: 1px;visibility: visible;"><img class="rich_pages wxw-img" data-imgfileid="503043470" data-ratio="0.3056872037914692" data-s="300,640" src="https://oscimg.oschina.net/oscnet/d505aed3-373e-4e4c-9bdf-c54a4361a176.png" data-type="png" data-w="422" style="outline: 0px;color: rgb(34, 34, 34);font-family: system-ui, -apple-system, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;visibility: visible !important;width: 117px !important;" referrerpolicy="no-referrer"></span></section><section style="margin-bottom: 0px;outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);color: rgb(34, 34, 34);text-align: center;visibility: visible;line-height: normal;"><span style="outline: 0px;font-family: -apple-system, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 18px;letter-spacing: 1px;visibility: visible;color: rgb(0, 17, 255);">一些實用的日誌技巧</span></section><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 0.5em;margin-bottom: 8px;text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;"><br></h4><span id="OSC_h4_11"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 0.5em;margin-bottom: 8px;text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;"><span style="outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong><strong style="outline: 0px;visibility: visible;"><span style="color: rgb(0, 17, 255);outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">動態修改日誌級別</span></strong></span></h4><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">場景：應用在運行中，默認日誌配置的打印級別是 error，但是我現在想針對某個包或者某個類輸出下 info 日誌。</span></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">使用 Arthas：https://arthas.aliyun.com/doc/logger.html，該工具提供了動態修改日誌的能力。</span></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;"><br></span></p><span id="OSC_h4_12"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 0.5em;margin-bottom: 8px;text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;"><span style="outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong><strong style="outline: 0px;visibility: visible;"><span style="color: rgb(0, 17, 255);outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">追加業務信息到日誌中，並格式化輸出：追加 MDC 信息，方便排查問題</span></strong></span></h4><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">這是日誌系統的一個擴容能力，可以把一些額外的信息輸出到日誌裏，只需要在 MDC 上下文中寫入 kv，https://logback.qos.ch/manual/mdc.html</span></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">例如：</span></p><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="cs"><code><span class="code-snippet_outer">public static void main(String[] args) {</span></code><code><span class="code-snippet_outer">    //代碼裏使用 MDC.put 寫入 key 為 traceId 的值</span></code><code><span class="code-snippet_outer">    //在 logback.xml 裏就可以使用%X{traceId}進行輸出</span></code><code><span class="code-snippet_outer">    MDC.put("traceId", UUID.randomUUID().toString().replace("-", ""));</span></code><code><span class="code-snippet_outer">}</span></code></pre></section><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;"><img class="rich_pages wxw-img" data-backh="161" data-backw="578" data-imgfileid="503043471" data-ratio="0.27870370370370373" src="https://oscimg.oschina.net/oscnet/3c0552bd-d751-47e9-8cab-83c2b8ae17ff.png" data-type="png" data-w="1080" style="width: 100%;height: auto;" referrerpolicy="no-referrer"></span></p><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;"><strong><span style="color: rgb(0, 0, 0);font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;"><br></span></strong></span></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;"><strong><span style="color: rgb(0, 0, 0);font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;"><ne-clipboard source="https%3A%2F%2Faliyuque.antfin.com%2Fwien.wuh%2Fdoc%2Fctdtsgv6r0esyll2%3FsingleDoc%23"></ne-clipboard></span></strong></span></section><span id="OSC_h4_13"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 0.5em;margin-bottom: 8px;text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;"><span style="outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong><strong style="outline: 0px;visibility: visible;"><span style="color: rgb(0, 17, 255);outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">配置定時日誌磁盤佔用清理</span></strong></span></h4><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">一定要配置合理的日誌清理策略，避免磁盤被打爆，可藉助日誌框架自身能力，或藉助可用的日誌清理系統（如果有）</span></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">在 logback.xml 配置中，可通過配置帶有清理作用的 rollingPolicy 來完成日誌定時清理和滾動，例如：SizeAndTimeBasedRollingPolicy</span></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;"><br></span></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;text-align: center;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;"><img class="rich_pages wxw-img" data-backh="102" data-backw="578" data-imgfileid="503043472" data-ratio="0.17696629213483145" src="https://oscimg.oschina.net/oscnet/c3b9e350-4cbb-45ca-aca4-6eb411ca0024.png" data-type="png" data-w="712" style="width: 100%;height: auto;" referrerpolicy="no-referrer"></span></p><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><ne-clipboard data="%7B%22type%22%3A%22fragment%22%2C%22name%22%3A%22%23fragment%22%2C%22children%22%3A%5B%7B%22type%22%3A%22element%22%2C%22id%22%3A%22u87788482%22%2C%22name%22%3A%22p%22%2C%22attrs%22%3A%7B%7D%2C%22children%22%3A%5B%7B%22type%22%3A%22text%22%2C%22id%22%3A%22u6f1d679a%22%2C%22name%22%3A%22%23text%22%2C%22attrs%22%3A%7B%7D%2C%22data%22%3A%22%E8%BF%99%E6%AE%B5%E9%85%8D%E7%BD%AE%E7%9A%84%E5%90%AB%E4%B9%89%E6%98%AF%EF%BC%9A%E6%9C%80%E5%A4%9A%E4%BF%9D%E7%95%997%E5%A4%A9%EF%BC%8C%E5%8D%95%E4%B8%AA%E6%96%87%E4%BB%B6%E6%9C%80%E5%A4%A750MB%EF%BC%8C%E8%AF%A5%E6%97%A5%E5%BF%97%EF%BC%88%E5%8C%85%E6%8B%AC%E6%BB%9A%E5%8A%A8%E7%9A%84%EF%BC%89%E6%9C%80%E5%A4%A7%E5%8F%AA%E8%83%BD%E4%BF%9D%E5%AD%9820GB%22%7D%5D%7D%5D%2C%22attrs%22%3A%7B%7D%7D" source="https%3A%2F%2Faliyuque.antfin.com%2Fwien.wuh%2Fdoc%2Fctdtsgv6r0esyll2%3FsingleDoc%23"></ne-clipboard></section><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">這段配置的含義是：最多保留 7 天，單個文件最大 50MB，該日誌（包括滾動的）最大隻能保存 20GB。</span></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></p><span id="OSC_h4_14"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 8px;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;"><span style="outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong><strong style="outline: 0px;visibility: visible;"><span style="color: rgb(0, 17, 255);outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">不要封裝一個日誌 Util，而應該直接使用日誌框架進行輸出</span></strong></span></h4><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">反例：LogUtil.log("通過封裝的日誌工具打印日誌");</span></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">正例：log.info("直接使用日誌框架的 api 進行日誌輸出");</span></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">理由：在日誌輸出的時候，日誌系統會打印日誌產生的原始位置：比如哪個包的哪個類，以及第幾行（如果配置了[%L]），如果你使用 LogUtil 等自己封裝的工具，所有的日誌輸出打印的位置都是 LogUtil 的，這樣不便於做日誌問題定位</span></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;"><br></span></p><p style="outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-align: center;text-wrap: wrap;visibility: visible;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);margin-top: 0px;margin-bottom: 0px;line-height: normal;"><img class="rich_pages wxw-img" data-imgfileid="503043473" data-ratio="0.3056872037914692" data-s="300,640" src="https://oscimg.oschina.net/oscnet/4d8c460d-e798-4e4f-a210-dc88203b75da.png" data-type="png" data-w="422" style="outline: 0px;letter-spacing: 0.544px;font-size: 14px;visibility: visible !important;width: 117px !important;" referrerpolicy="no-referrer"></p><p style="outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-align: center;text-wrap: wrap;background-color: rgb(255, 255, 255);color: rgb(100, 99, 99);font-size: 15px;margin-top: 0px;margin-bottom: 0px;line-height: normal;"><span style="outline: 0px;font-family: -apple-system, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 18px;color: rgb(0, 17, 255);letter-spacing: 1px;">系統日誌打不出來或者丟日誌排查思路</span></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(0, 0, 0);font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 1px;"></span><br></p><p style="min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">目前沒有現成的工具幫你一鍵做好這個事情，下面給出一個排查思路</span></p><ol class="list-paddingleft-1" style="padding-left: 23px;"><li style="font-size: 15px;letter-spacing: 1px;"><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">先明確該系統到底使用的是什麼日誌框架+日誌系統組合，這個很重要，必須搞清是何種組合才可有針對性的處理後續步驟</span></p></li><li style="font-size: 15px;letter-spacing: 1px;"><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">如果是 slf4j+logback 組合，則可根據第一章列出的 maven 依賴進行排包處理，優先保證依賴的包沒有錯誤，90% 的情況下都是包依賴混亂導致的日誌丟失</span></p></li><li style="font-size: 15px;letter-spacing: 1px;"><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">排查自己的 logback 配置文件是否放在正確的路徑下、文件名是否正確，配置文件位置不對也會導致日誌輸出的不對甚至丟失</span></p></li><li style="font-size: 15px;letter-spacing: 1px;"><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">檢查 logback 配置文件內部每個<span style="font-size: 15px;color: rgb(8, 8, 8);background-color: rgb(255, 255, 255);">logger 及其 level 配置是否正確，避免自己期望打印 info，卻配置了 error</span></span></p></li></ol><section style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;"><br></span></section><section style="margin-bottom: 0px;outline: 0px;color: rgb(34, 34, 34);font-size: 15px;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;text-align: center;line-height: normal;"><img class="rich_pages wxw-img" data-imgfileid="503043474" data-ratio="0.328125" data-s="300,640" src="https://oscimg.oschina.net/oscnet/41904b3a-eab4-4322-962a-be059bc4bfe2.png" data-type="png" data-w="256" style="outline: 0px;letter-spacing: 0.544px;font-size: 16px;visibility: visible !important;width: 122px !important;" referrerpolicy="no-referrer"></section><section style="margin-bottom: 0px;outline: 0px;font-size: 15px;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;color: rgb(100, 99, 99);text-align: center;line-height: normal;"><span style="outline: 0px;color: rgb(0, 17, 255);font-family: -apple-system, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 18px;letter-spacing: 1px;">總結</span></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><ne-clipboard source="https%3A%2F%2Faliyuque.antfin.com%2Fwien.wuh%2Fdoc%2Fctdtsgv6r0esyll2%3FsingleDoc%23"></ne-clipboard></section><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">日誌系統的正確使用，對於應用的日常維護和問題排查尤為重要，所謂：工欲善其事，必先利其器。本篇文章重點講解了日誌系統的結構和包如何正確依賴，這是很多同學最容易犯的錯誤，需要格外注意並認真閲讀，只有正確理解其中的含義才可以更好的使用日誌系統，在日常使用中大家要不斷總結經驗。</span></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;"><br></span></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">最後希望文章提供的內容能夠在日常開發和維護中為大家提供到切實的幫助。</span></p><section style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><br></section><p style="margin-bottom: 0px;outline: 0px;text-wrap: wrap;background-color: rgb(255, 255, 255);font-size: 11pt;font-family: DengXian;color: rgb(0, 0, 0);letter-spacing: normal;text-align: center;line-height: normal;"><img class="rich_pages wxw-img" data-imgfileid="503043475" data-ratio="0.328125" data-s="300,640" src="https://oscimg.oschina.net/oscnet/5b5ef821-c6ac-468b-8ebb-15a9d4bb271e.png" data-type="png" data-w="256" style="outline: 0px;font-size: 14.6667px;text-align: center;text-wrap: wrap;color: rgb(34, 34, 34);font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;visibility: visible !important;width: 133px !important;" referrerpolicy="no-referrer"></p><p style="margin-bottom: 0px;outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);line-height: 1.75em;text-align: center;"><span style="outline: 0px;box-sizing: inherit;color: rgb(0, 17, 255);font-family: -apple-system, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 18px;letter-spacing: 1px;">團隊介紹</span></p><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;">物流技術團隊是服務淘天物流部及零售行業的產技團隊，一直深耕在物流及供應鏈的數字化協同與運營領域：為零售業務提供靈活多樣的經營模式管理方案及可以快速適配市場變化的經營策略數宇化管理工具；為商家提供高效低成本的物流及供應鏈解決方案，加快資金效率，提升協同效率；為消費者提供即時便捷的購物體驗。</span></section><p><br></p><section data-role="outer" label="Powered by 135editor.com" style="margin-bottom: 0px;outline: 0px;letter-spacing: 0.544px;visibility: visible;"><section style="margin-top: 5px;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;font-size: 16px;word-break: break-all;color: rgb(0, 0, 0);font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;text-align: center;line-height: 1.75em;"><span style="outline: 0px;color: rgb(0, 17, 255);"><strong style="outline: 0px;">¤</strong></span><span style="outline: 0px;"><strong style="outline: 0px;">&nbsp;拓展閲讀&nbsp;</strong></span><span style="outline: 0px;color: rgb(0, 17, 255);"><strong style="outline: 0px;">¤</strong></span></section><section style="margin-top: 5px;margin-bottom: 5px;outline: 0px;letter-spacing: 0.544px;font-size: 16px;word-break: break-all;color: rgb(0, 0, 0);font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;text-align: center;line-height: 1.75em;"><br style="outline: 0px;"></section><section style="margin-top: 8px;margin-bottom: 8px;outline: 0px;font-family: -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 0.544px;text-indent: 0em;text-align: center;line-height: 1.75em;min-height: 24px;clear: both;visibility: visible;"><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fmp%2Fappmsgalbum%3F__biz%3DMzAxNDEwNjk5OQ%3D%3D%26action%3Dgetalbum%26album_id%3D2565944923443904512%23wechat_redirect" textvalue="3DXR 技術" linktype="text" imgurl="" imgdata="null" tab="innerlink" data-linktype="2" style="outline: 0px;color: var(--weui-LINK);-webkit-user-drag: none;cursor: pointer;">3DXR 技術</a>&nbsp;|&nbsp; 
   <a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fmp%2Fappmsgalbum%3F__biz%3DMzAxNDEwNjk5OQ%3D%3D%26action%3Dgetalbum%26album_id%3D1533906991218294785%23wechat_redirect" textvalue="終端技術" linktype="text" imgurl="" imgdata="null" tab="innerlink" data-linktype="2" style="outline: 0px;color: var(--weui-LINK);-webkit-user-drag: none;cursor: pointer;">終端技術</a>&nbsp;|&nbsp; 
   <a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fmp%2Fappmsgalbum%3F__biz%3DMzAxNDEwNjk5OQ%3D%3D%26action%3Dgetalbum%26album_id%3D1592015847500414978%23wechat_redirect" textvalue="音視頻技術" linktype="text" imgurl="" imgdata="null" tab="innerlink" data-linktype="2" style="outline: 0px;color: var(--weui-LINK);-webkit-user-drag: none;cursor: pointer;">音視頻技術</a></section><p style="margin-top: 8px;margin-bottom: 8px;outline: 0px;min-height: 24px;font-family: -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 0.544px;text-indent: 0em;text-align: center;line-height: 1.75em;visibility: visible;"><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fmp%2Fappmsgalbum%3F__biz%3DMzAxNDEwNjk5OQ%3D%3D%26action%3Dgetalbum%26album_id%3D1539610690070642689%23wechat_redirect" textvalue="服務端技術" linktype="text" imgurl="" imgdata="null" tab="innerlink" data-linktype="2" style="outline: 0px;color: var(--weui-LINK);-webkit-user-drag: none;cursor: pointer;">服務端技術</a><span style="outline: 0px;letter-spacing: 0.544px;">&nbsp;|&nbsp;</span><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fmp%2Fappmsgalbum%3F__biz%3DMzAxNDEwNjk5OQ%3D%3D%26action%3Dgetalbum%26album_id%3D2565883875634397185%23wechat_redirect" textvalue="技術質量" linktype="text" imgurl="" imgdata="null" tab="innerlink" data-linktype="2" style="outline: 0px;color: var(--weui-LINK);-webkit-user-drag: none;cursor: pointer;">技術質量</a>&nbsp;|&nbsp;<a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fmp%2Fappmsgalbum%3F__biz%3DMzAxNDEwNjk5OQ%3D%3D%26action%3Dgetalbum%26album_id%3D1522425612282494977%23wechat_redirect" textvalue="數據算法" linktype="text" imgurl="" imgdata="null" tab="innerlink" data-linktype="2" style="outline: 0px;color: var(--weui-LINK);-webkit-user-drag: none;cursor: pointer;">數據算法</a></p><p style="margin-top: 8px;margin-bottom: 8px;outline: 0px;min-height: 24px;font-family: -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 0.544px;text-indent: 0em;text-align: center;line-height: 1.75em;visibility: visible;"><br style="outline: 0px;"></p><section class="mp_profile_iframe_wrp" style="margin-bottom: 24px;outline: 0px;"><mp-common-profile class="custom_select_card mp_profile_iframe js_wx_tap_highlight" data-pluginname="mpprofile" data-id="MzAxNDEwNjk5OQ==" data-headimg="http://mmbiz.qpic.cn/mmbiz_png/33P2FdAnju8t5nZGhAatCrc4e2iaDfAaoInribRKxc7MOqdTGygfcLqSDxhj0trCHVEh94Sjl7zuWYzwouYtJ0VQ/300?wx_fmt=png&amp;wxfrom=19" data-nickname="大淘寶技術" data-alias="AlibabaMTT" data-signature="大淘寶技術官方賬號" data-from="2" data-index="0" data-origin_num="690" data-isban="0" data-biz_account_status="0" data-weui-theme="light" data-is_biz_ban="0"></mp-common-profile></section></section><p style="display: none;"><mp-style-type data-value="3"></mp-style-type></p></div><p style="color: #858585; font-size: 13px;">本文分享自微信公眾號 - 大淘寶技術（AlibabaMTT）。<br>如有侵權，請聯繫 support@oschina.cn 刪除。<br>本文參與「<a href="https://www.oschina.net/sharing-plan" target="_blank">OSC 源創計劃</a>」，歡迎正在閲讀的你也加入，一起分享。</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 01 Feb 2024 03:15:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/4662964/blog/10946665</guid>
            <link>https://my.oschina.net/u/4662964/blog/10946665</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[網易首款鴻蒙原生遊戲《倩女幽魂》手游完成開發，商業化版本已就緒]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">在 2023 年 12 月 15 日，網易遊戲正式宣佈啓動基於 HarmonyOS NEXT 鴻蒙原生應用開發。目前，作為網易首款鴻蒙原生遊戲，《倩女幽魂》不但完成了鴻蒙原生應用開發，且商業化版本已就緒。</span></p><p><img height="332" src="https://oscimg.oschina.net/oscnet/up-3f58a6b7c512c796452e424815d7ea46203.png" width="500" referrerpolicy="no-referrer"></p><p><span style="color:#000000">在華為遊戲中心和網易中台的深度合作下，基於 HarmonyOS SDK 在應用框架層面覆蓋 ArkTS、進程間通訊、數據管理等方面的底層基礎能力，《倩女幽魂》鴻蒙原生應用的開發得以更加簡單和高效。同時，《倩女幽魂》開發團隊快速完成了賬號登錄、消息推送以及應用內支付等一系列 HarmonyOS SDK 應用服務領域的集成，充分利用能力下沉 OS 底層的優勢，快速完成基礎服務的開發上線，為商業化版本上線做好充足準備。</span></p><p><span style="color:#000000">《倩女幽魂》鴻蒙原生應用商業化版本的就緒，也意味着由網易中台提供的賬號登錄、消息推送及應用內支付等 UniSDK 核心部分已支持 HarmonyOS，不但有助於網易遊戲更高效地完成更多鴻蒙原生遊戲開發與最終上架，更是鴻蒙生態遊戲建設前進的重要一步。</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span style="color:#000000">早在華為開發者大會上，網易雷火事業羣技術副總裁盧小軍宣佈，在網易遊戲和華為遊戲中心聯合調優下，《倩女幽魂》已率先完成在主體渲染和邏輯打通，基於 HarmonyOS 及其方舟圖形引擎，雙方不但僅花費三週時間就完成了完整遊戲邏輯的移植工作，而且整體渲染性能實現明顯提升，畫面更清晰、柔和，此外，還完成了幀數提升的同時降低功耗的性能調優，遊戲畫面單幀的功耗下降了 13%。給用户帶來更暢快持久的遊戲體驗。</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span style="color:#000000">公告稱，本次《倩女幽魂》鴻蒙原生應用商業化版本的就緒，可以看出網易與華為遊戲中心在技術應用和商業化層面更深入的鴻蒙生態合作，將進一步豐富鴻蒙生態下的遊戲品類與內容，也將通過鴻蒙為遊戲精品化發展和長線運營注入新活力，帶給用户更沉浸和多元的遊戲體驗。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 01 Feb 2024 03:13:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/277223</guid>
            <link>https://www.oschina.net/news/277223</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[開源日報：IntelliJ 負責人成為 JetBrains 新任 CEO，技術棧一定要選擇開源的]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">歡迎閲讀 OSCHINA 編輯部出品的開源日報，每天更新一期。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong># 2024.1.31&nbsp;</strong></p><h2 style="margin-left:0; margin-right:0; text-align:left"><span><span><span style="color:#000000"><span><span><span style="color:#00b050">今日要點</span></span></span></span></span></span></h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:justify"><strong>OpenSource Daily</strong></p><h3 style="margin-left:0; margin-right:0; text-align:left"><u><a href="https://www.oschina.net/news/277037/urllib3-works-in-the-browser" target="news">Python HTTP 庫 urllib3 支持直接在瀏覽器運行</a></u></h3><p><span style="background-color:#ffffff; color:#333333">Python HTTP 庫 urllib3 最新版本 2.2.0 新增了一項重磅特性 ——<span>&nbsp;</span></span><strong style="color:#333333">可直接在瀏覽器運行</strong><span style="background-color:#ffffff; color:#333333">。</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Furllib3.readthedocs.io%2Fen%2Fstable%2Freference%2Fcontrib%2Femscripten.html" target="_blank">根據介紹</a>，從 2.2.0 開始，urllib3 支持在 Pyodide 運行時中使用<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.mozilla.org%2Fen-US%2Fdocs%2FWeb%2FAPI%2FFetch_API" target="_blank">JavaScript fetch API</a>，或者在 fetch API 不可用時（例如當跨源隔離未激活時）返回<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.mozilla.org%2Fen-US%2Fdocs%2FWeb%2FAPI%2FXMLHttpRequest" target="_blank">XMLHttpRequest</a>。這意味着開發者可以使用該庫直接從瀏覽器發出 HTTP 請求。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">由於 urllib3 的 Emscripten 支持與 API 兼容，這意味着依賴於 urllib3 的庫現在也可以在 Emscripten 和 Pyodide 環境中使用。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="185" src="https://oscimg.oschina.net/oscnet/up-7e0846ecd450824c3e2a7cea0f00651c22c.png" width="500" referrerpolicy="no-referrer"></p><h3 style="margin-left:0; margin-right:0; text-align:left"><u><a href="https://www.oschina.net/news/277020" target="_blank">Opera 將推出全球首款非 WebKit 內核的 iOS 瀏覽器</a></u></h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">崑崙萬維旗下海外信息分發與元宇宙平台 Opera 近日宣佈，將為歐洲的 iPhone 和 iPad 用户帶來一款基於自研引擎的全新 AI 瀏覽器 「Opera One」。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">Opera 計劃於 3 月份首次亮相這款新瀏覽器，屆時 DMA（歐洲數字市場法案）將生效。由於這些變化僅在歐盟實施，Opera 強烈鼓勵蘋果將這些增強功能推廣至全球 iOS 用户。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">為了遵守 DMA，蘋果決定允許開發者提交非基於 WebKit 的瀏覽器，包括 Web 瀏覽器應用和在 iOS 應用中顯示網頁的應用內瀏覽器。Opera 表示，這些變化將使他們有機會為 iPhone 用户提供 Safari 之外的人工智能瀏覽器。</p><h3 style="margin-left:0; margin-right:0; text-align:left"><u><a href="https://www.oschina.net/news/277057/jetbrains-ceo-transition" target="_blank">IntelliJ 負責人 Kirill Skrygan 成為 JetBrains 新任 CEO</a></u></h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="background-color:#ffffff; color:#333333">JetBrains 公司正式對外宣佈了最新人事任命：原負責領導 IntelliJ 部門的 Kirill Skrygan&nbsp;將於 2024 年 2 月 1 日起擔任首席執行官。</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">JetBrains 在公告寫道：「在我們邁向人工智能發揮變革作用的新時代之際，公司已經建立了一個良好的底層基礎，並且可以在此基礎上繼續推動公司向前發展。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">作為新階段的一部分，Kirill Skrygan 自 2010 年加入 JetBrains，並在過去幾年裏一直領導 IntelliJ 部門，他將於 2024 年 2 月 1 日擔任首席執行官一職。」</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="330" src="https://oscimg.oschina.net/oscnet/up-3943b858bab2621d791912e56f8421bca6a.png" width="500" referrerpolicy="no-referrer"></p><hr><h2 style="margin-left:0; margin-right:0; text-align:left"><strong><span><span><span style="color:#000000"><span><span><span style="color:#00b050">用户觀點</span></span></span></span></span></span></strong></h2><p><img height="268" src="https://oscimg.oschina.net/oscnet/up-49e5260aa056b39c3b23ab565653c575979.png" width="500" referrerpolicy="no-referrer"></p><hr><h3 style="margin-left:0; margin-right:0; text-align:left"><strong><span><span><span style="color:#000000"><span><span><span style="color:#00b050">媒體觀點</span></span></span></span></span></span></strong></h3><h3 style="margin-left:0; margin-right:0; text-align:left"><img height="347" src="https://oscimg.oschina.net/oscnet/up-821e56c877d00d921add32f98bb57e78fa2.png" width="500" referrerpolicy="no-referrer"></h3><hr><h2 style="margin-left:0; margin-right:0; text-align:left"><strong><span><span><span style="color:#000000"><span><span><span style="color:#00b050">每日項目榜</span></span></span></span></span></span></strong></h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">GitHub 榜單：</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="312" src="https://oscimg.oschina.net/oscnet/up-10344e3be6272f1f3919d9779566cb59e8b.png" width="300" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="370" src="https://oscimg.oschina.net/oscnet/up-0c63d879e7c4cb3446298dd6574d33f490b.png" width="300" referrerpolicy="no-referrer"></p><blockquote><h4 style="margin-left:0; margin-right:0">在線閲讀完整日報內容，訪問：<strong><u><a href="https://oscimg.oschina.net/public_shard/%E5%BC%80%E6%BA%90%E6%97%A5%E6%8A%A5%E7%AC%AC006%E6%9C%9F%EF%BC%9A%E9%80%89%E6%8B%A9%E6%8A%80%E6%9C%AF%E6%A0%88%E4%B8%80%E5%AE%9A%E8%A6%81%E9%80%89%E6%8B%A9%E5%BC%80%E6%BA%90%E7%9A%84.pdf" target="_blank">開源日報第 006 期：選擇技術棧一定要選擇開源的</a></u></strong></h4></blockquote><hr><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>往期回顧</strong></p><ul style="list-style-type:disc; margin-left:0; margin-right:0"><li><a href="http://www.oschina.net/news/277040"><u>開源日報第 005 期：RISC-V 萬兆開源交換機發售；npm 存在大量武林外傳視頻</u></a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Thu, 01 Feb 2024 02:39:29 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/277214</guid>
            <link>https://www.oschina.net/news/277214</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
    </channel>
</rss>
