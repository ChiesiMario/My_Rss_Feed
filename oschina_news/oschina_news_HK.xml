<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[開源中國-最新資訊]]>
        </title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="http://rsshub.app/oschina/news" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[開源中國-最新資訊 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Fri, 15 Dec 2023 17:43:32 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[互聯網大廠月薪分佈：字節跳動超 5% 員工月薪高於 5 萬]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>某統計機構公開了一份國內互聯網大廠的月薪分佈。從統計來看，貝殼、阿里、滴滴、拼多多、快手和騰訊有超過 60% 的員工，月薪都在 3-5 萬區間。而拼多多和字節跳動，還有 5% 以上的員工月薪超過了 5 萬。</p><p><img src="https://oscimg.oschina.net/oscnet/up-6dee49384f61d67489bea92afa25362f142.png" referrerpolicy="no-referrer"></p><p>大家熟悉的華為，有 51% 的員工月薪在 3-5 萬區間（3.4% 員工月薪超過 5 萬），而小米這個數字為 47.5%。</p><p>事實上，不少互聯網公司內部都有等級評定，而像華為、阿里、騰訊內部，級別高的員工甚至年薪+分紅都輕鬆過百萬。</p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 15 Dec 2023 03:30:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271163</guid>
            <link>https://www.oschina.net/news/271163</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[鴻蒙系統即將走向獨立，多家高校設立「鴻蒙班」]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">澎湃新聞報道稱，華為以及鴻蒙系軟件廠商正在積極培養鴻蒙開發人才。其中，產學聯動、產教融合來培養鴻蒙生態人才是重要的一條路徑，很多高校已經設立了「鴻蒙班」。目前已有 23 家 985 高校、46 家 211 高校已開設或即將開設 HarmonyOS 相關課程。</span></p><p><span style="color:#000000">一位鴻蒙生態內部人士表示，目前鴻蒙開發人才比較緊缺，而安卓開發人才相對過剩，掌握鴻蒙的技術人員待遇比安卓開發人員要好一些，這使得很多開發人員願意轉崗鴻蒙開發。</span></p><p><span style="color:#000000">「鴻蒙開發難度並不大，基本上培訓 1-2 個月就可以開發了。但很多人認為鴻蒙不好做主要是工具比較少，其中常用的工具就那麼幾十種，但有些時候需要用到不常用的工具，安卓有幾千個上萬個工具，鴻蒙還比較少，需要開源成員不斷去開發工具。」</span></p><p><span style="color:#000000"><img alt="" height="281" src="https://oscimg.oschina.net/oscnet/up-5af2a19b40efd2d0cf528af680c4e240062.jpg" width="500" referrerpolicy="no-referrer"></span></p><p><span style="color:#000000">目前，南京大學已開設了《移動互聯網軟件工程》課程，將 HarmonyOS 作為課程核心，替換了原有的安卓開發課程。南京大學教授劉欽表示：</span></p><blockquote><p><span style="color:#000000">2010 年安卓生態剛起步時南大就開設了安卓課程，安卓那個時代是先進科學，從來沒有看到那麼大的一個開源手機操作系統，我們開設了安卓開發課程。如今是一個萬物互聯時代，鴻蒙操作系統給出的整套思路是針對萬物互聯的，能夠連接各種設備，我們認為在移動互聯網時代，學生以後從事軟件開發工作，你掌握這個很有必要，所以我們選擇這個時候開設這門課。</span></p><p><span style="color:#000000">我們這個是必選課，我們預計是 150-180 人之間，實際上有多少人選呢？230 多人，這個超出我們的預計，説明學生對鴻蒙操作系統還是願意去學的。</span></p></blockquote><p><span style="color:#000000">劉欽之前還曾公開表達過用鴻蒙替代安卓的意義，HarmonyOS 不再是「多一個選擇」，而是「對安卓的替代」。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 14 Dec 2023 10:24:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271083</guid>
            <link>https://www.oschina.net/news/271083</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[稚暉君創業公司再融資，金額超 6 億元，投前估值 35 億元]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2F36kr.com%2Fp%2F2560285742488705" target="_blank">據報道</a>，稚暉君創業公司智元機器人近日完成新一輪 A3 融資。</p><p>本輪融資由藍馳創投、中科創星、鼎暉投資、長飛基金、C 資本、高瓴創投、立景創新、三花控股集團、基石資本、臨港新片區基金和銀杏谷資本投資。 據瞭解，本輪投前估值為 35 億元，融資金額超 6 億元人民幣。</p><p>目前，該公司正在進行新一輪融資，投前 70 億元估值。截止發稿，官方並未給到回覆。</p><p>智元機器人因創始人「稚暉君」彭志輝而出名，公司希望對標特斯拉的擎天柱，產品方向為人形機器人。今年 8 月，智元推出了<em><u><a href="https://www.oschina.net/news/254290">遠徵 A1 人形機器人</a></u></em>，併發布了其自研的 PowerFlow 關節電機，反關節的設計和靈巧手 SkillHand。</p><p><img src="https://static.oschina.net/uploads/space/2023/0818/134556_I0Zb_2720166.jpg" referrerpolicy="no-referrer"></p><p>智元機器人在 8 月發佈會時表示，他們已經和多家頭部製造業服務企業對接，並面向 3C 電子、汽車裝備等不同場景，訓練了很多如擰螺絲的動作，公司預計 2024 年產品會推向商業化落地。</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 14 Dec 2023 08:41:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271228</guid>
            <link>https://www.oschina.net/news/271228</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[MariaDB 拆分 SkySQL，作為獨立公司成立]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">MariaDB<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmariadb.com%2Fnewsroom%2Fpress-releases%2Fmariadb-finalizes-spinoff-of-skysql%2F" target="_blank"> 宣佈</a>已將其 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fskysql.com%2F" target="_blank">SkySQL</a> 業務拆分為一家獨立的雲數據庫公司，以負責構建和支持 SkySQL 產品。</span></p><p><span style="color:#000000">「我們相信，此次分拆將促進依賴 SkySQL 的客户順利過渡。我們很高興 SkySQL 產品將在一家新公司的領導下繼續發展，同時讓我們能夠集中精力開發核心的 MariaDB 企業服務器產品。」</span></p><p><span style="color:#000000">未來，新公司 SkySQL Inc. 將承擔 SkySQL 數據庫即服務 (DBaaS) 的開發、銷售和支持工作。MariaDB 將持有 SkySQL 的股權，以強調兩家公司之間的長期合作關係。</span></p><p><span style="color:#000000">SkySQL DBaaS 產品是 MariaDB 數據庫的雲託管和生產級版本。SkySQL 表示，通過作為一個獨立實體推出，它將能夠加快向平台提供新功能的步伐。其主要優先事項之一是在 Microsoft Azure 上啓動該服務。目前，客户可以通過 Amazon Web Services 和 Google Cloud 進行訪問。</span></p><p><span style="color:#000000"><img alt="" height="294" src="https://oscimg.oschina.net/oscnet/up-a1e38eab7fc4e80eb5d8322843767666f63.webp" width="300" referrerpolicy="no-referrer"></span></p><p><span style="color:#000000">MariaDB 於 2020 年推出了 SkySQL，稱它是流行的 MariaDB 數據庫的雲原生版本，是 MySQL 數據庫的替代品。由於 SkySQL 是基於 Kubernetes 構建，因此它可以與任何類型的雲基礎設施相融合。</span></p><p><span style="color:#000000">SkySQL 的雲原生特性意味着客户可以更輕鬆地管理其數據庫部署。與 Oracle 等其他公司的數據庫產品相比，它的許可和管理也更容易。此外，SkySQL 是首批支持行、列式以及組合行和列式存儲的 DBaaS 服務之一，這是一種可以在同一個數據集上在一個位置處理事務和分析的技術。</span></p><p><span style="color:#000000">由於採用了 MariaDB 專有的 MaxScale 和 Xpand 技術，SkySQL 還聲稱比其他類型的數據庫具有更高的可用性和更大的可擴展性。</span></p><p><span style="color:#000000">作為一個獨立的實體，SkySQL 的領導團隊包括：首席執行官 Nithin Rao、聯合創始人 Jags Ramnarayan（首席技術官）和 Saravana Krishnamurthy (CPO)。曾在 MariaDB 中負責開發和運營 SkySQL 的核心技術團隊也已加入該公司。</span></p><p><span style="color:#000000">Rao <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsiliconangle.com%2F2023%2F12%2F14%2Fmariadb-spins-skysql-independent-database-service-company%2F" target="_blank">表示</a>，通過分拆 SkySQL，新公司將確保 SkySQL 繼續成為那些希望在雲中獲得最佳 MariaDB 體驗的客户的「不二之選」。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 14 Dec 2023 07:26:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271211/mariadb-spins-skysql-independent-company</guid>
            <link>https://www.oschina.net/news/271211/mariadb-spins-skysql-independent-company</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[FolkMQ 「多中心」集羣部署方案]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#24292e; text-align:start">FolkMQ 是一個新起的內存型消息中間件。</p><h3>簡介</h3><ul><li>採用 「多路複用」 + "內存運行" + "快照持久化" + "Broker 集羣模式"（可選）+</li><li>基於<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsocketd.noear.org%2F" target="_blank">Socket.D 網絡應用協議</a><span>&nbsp;</span>開發。全新設計，自主架構！</li></ul><table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:0px; box-sizing:border-box; color:#24292e; display:block; font-family:-apple-system,&quot;system-ui&quot;,&quot;Segoe UI&quot;,Helvetica,Arial,sans-serif,&quot;Apple Color Emoji&quot;,&quot;Segoe UI Emoji&quot;,&quot;Segoe UI Symbol&quot;; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; margin-bottom:16px; margin-top:0px; orphans:2; overflow:auto; text-align:start; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:960px; word-spacing:0px"><tbody><tr><th>角色</th><th>功能</th></tr></tbody><tbody><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">生產端</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">發佈消息（Qos0、Qos1）、發佈定時消息（Qos0、Qos1）、發佈重試</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">&nbsp;</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">&nbsp;</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">消費端</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">訂閲、取消訂閲</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">消費端</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">消費-ACK（自動、手動）</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">&nbsp;</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">&nbsp;</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">服務端</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">發佈-Confirm、訂閲-Confirm、取消訂閲-Confirm、派發-Retry、派發-Delayed</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">服務端</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">內存運行、快照持久化（自動、停機、手動）</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">服務端</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">集羣熱擴展</td></tr></tbody></table><h3>特點</h3><ul><li>高吞吐量、低延遲（單機版，180K TPS）</li><li>擴展性（集羣可」熱擴展「服務節點）</li><li>持久性、可靠性</li><li>高可用（只要有」一個「同類節點在即可）</li></ul><h3>多中心集羣部署演示：</h3><p><iframe frameborder="0" height="400" scrolling="no" src="https://player.bilibili.com/player.html?aid=409798174&amp;bvid=BV1vG411a7Q7&amp;cid=1367060964&amp;p=1" style="box-sizing: border-box; font-size: 16px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; color: rgb(36, 41, 46); font-family: -apple-system, &quot;system-ui&quot;, &quot;Segoe UI&quot;, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; text-align: start; background-color: rgb(255, 255, 255);" width="700" referrerpolicy="no-referrer"></iframe></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 14 Dec 2023 04:52:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271182</guid>
            <link>https://www.oschina.net/news/271182</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[OpenAI 「泄露」 GPT-4.5，價格是 GPT-4 的 6 倍]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>OpenAI 官網的產品價格訂閲頁面似乎意外地「泄露」了 GPT-4.5。按照頁面的信息，GPT-4.5 的價格是目前 GPT-4 的 6 倍。</p><blockquote><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-31d1ece739917eff1f166c5dbe37cdaf3cd.png" referrerpolicy="no-referrer"></p><p>來源：<em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.reddit.com%2Fr%2FOpenAI%2Fcomments%2F18i5n29%2Fanyone_hear_of_gpt45_drop_today%2F" target="_blank">https://www.reddit.com/r/OpenAI/comments/18i5n29/anyone_hear_of_gpt45_drop_today/</a></u></em></p></blockquote><p>根據描述，最先進的模型帶來了<strong>跨語言、音頻、視覺、視頻和 3D 的多模態功能，以及複雜的推理和跨模態理解</strong>，以及 3 個新型號：</p><ul><li>GPT-4.5</li><li>GPT-4.5-64k</li><li>GPT-4.5-audio-and-speech</li></ul></div>
                                    ]]>
            </description>
            <pubDate>Thu, 14 Dec 2023 03:44:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271170/openai-leak-gpt45</guid>
            <link>https://www.oschina.net/news/271170/openai-leak-gpt45</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[夸克瀏覽器 PC 版開啓內測]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff"><span style="color:#555555">夸克瀏覽器今天正式開啓 PC 版本的內測，安裝包大小 165 MB，基於 Chromium&nbsp;112 內核版本打造，目前內測版本功能相對簡單，主打夸克小工具和夸克網盤。</span></span></p><p><span style="background-color:#ffffff"><span style="color:#555555"><img alt="" height="313" src="https://oscimg.oschina.net/oscnet/up-7d2b1e9f052bd1f16e693666b844526c384.png" width="500" referrerpolicy="no-referrer"></span></span></p><p><span style="color:#555555"><img alt="" height="313" src="https://oscimg.oschina.net/oscnet/up-c1abc7d9868a44f006af303db9fc34bc1f2.png" width="500" referrerpolicy="no-referrer"></span></p><p><span style="background-color:#ffffff"><span style="color:#555555"><img alt="" height="319" src="https://oscimg.oschina.net/oscnet/up-1a021e823d1e28e62da4d57b8883ec880ef.png" width="300" referrerpolicy="no-referrer"></span></span></p><p><span style="background-color:#ffffff"><span style="color:#555555">安裝完成，需要使用夸克瀏覽器手機版掃碼登錄，登錄後的界面</span></span></p><p><span style="background-color:#ffffff"><span style="color:#555555"><img alt="" height="338" src="https://oscimg.oschina.net/oscnet/up-118ef3c22895713a51398d5edfc8ff9bde0.png" width="500" referrerpolicy="no-referrer"></span></span></p><p><span style="background-color:#ffffff"><span style="color:#555555">文件工具中心</span></span></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 14 Dec 2023 03:42:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271168</guid>
            <link>https://www.oschina.net/news/271168</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[遊戲引擎 Godot 4.2.1 發佈]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">Godot 4.2.1 現已發佈，</span><span style="background-color:#ffffff; color:#000000">共有 42 位貢獻者提交了約 74 項改進。</span><span style="color:#000000">這是&nbsp;</span><a href="https://www.oschina.net/news/268993/godot-4-2-arrives-in-style-stable" target="news">Godot 4.2</a>&nbsp;的<span style="color:#000000">第一個維護版本，它解決了其中一些問題，同時完全保持兼容性。</span></p><p><span style="color:#000000"><img alt="" height="281" src="https://oscimg.oschina.net/oscnet/up-472537cd914c94a5ea23c76df0066b4f9cf.webp" width="500" referrerpolicy="no-referrer"></span></p><p style="text-align:start"><span style="color:#000000">此版本中的一些最重要的修復是：</span></p><ul><li><p><span><span><span>對於 macOS 上的 GL 兼容性渲染器，項目團隊從 Metal ANGLE 後端切換回原生 OpenGL 驅動程序。他們原本希望 ANGLE 的 Metal 後端能夠使兼容性渲染器面向未來（因為 Apple 已棄用其原生 OpenGL 支持），並修復 macOS 上 OpenGL 驅動程序的一些已知驅動程序錯誤。但事實證明，ANGLE 的 Metal 後端帶來的問題比它解決的問題還要多，因此他們回滾了默認後端的更改 (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgodotengine%2Fgodot%2Fpull%2F85785" target="_blank">GH-85785</a>)。</span></span></span></p></li><li><p><span><span><span>還是在 macOS 上，新的 iOS 一鍵部署功能需要安裝 Xcode，並在編輯器啓動時使用&nbsp;<code class="language-plaintext">xcode-select</code>&nbsp;進行檢查。這可能會觸發一個安裝對話框，使 Godot 顯示為凍結狀態，而不向用户明確説明問題。項目團隊改為使用&nbsp;<code class="language-plaintext">mdfind</code>&nbsp;檢查 Xcode 是否已安裝，以解決此問題 (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgodotengine%2Fgodot%2Fpull%2F85774" target="_blank">GH-85774</a>)。</span></span></span></p></li><li><p><span><span><span>Android 上的 Vulkan 渲染器的一些 Bug 已得到解決，這些&nbsp;Bug 可能會導致崩潰或網格損壞 (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgodotengine%2Fgodot%2Fpull%2F84852" target="_blank">GH-84852</a>)。這也可能解決了某些 Android 設備上的 garbled tilemap 渲染問題，但還需確認。</span></span></span></p></li><li><p><span><span><span>許多使用 4.1 版 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgodot-jolt%2Fgodot-jolt%2F" target="_blank">Godot Jolt</a>&nbsp;插件的用户在將他們的項目升級到 4.2 版時都遇到了編輯器崩潰的問題，這是因為舊版本的 Godot Jolt 存在一個錯誤，導致它與 Godot 4.2 不兼容。鑑於這個問題似乎非常普遍，項目團隊決定專門為 Godot Jolt 添加一個 hack，以防止加載已知與 Godot 4.2 不兼容的舊版本 (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgodotengine%2Fgodot%2Fpull%2F85779" target="_blank">GH-85779</a>）。在成功加載禁用了 Godot Jolt 的項目後，應刪除已安裝的舊版本，並重新安裝與 Godot 4.2 兼容的最新版本。</span></span></span></p></li><li><p><span><span><span>還修復了處理 TileMap occluders 時出現的迴歸問題 (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgodotengine%2Fgodot%2Fpull%2F85893" target="_blank">GH-85893</a>)。</span></span></span></p></li><li><p><span><span><span>最近的 Emscripten 版本更改了默認堆棧大小，這導致在使用某些 API 時，Godot 4.2 中的 Web 導出出現問題。添加了所需的 linker flags 來恢復舊版 Emscripten 的行為，確保 Godot 在由最新 Emscripten 版本編譯後可以成功運行 (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgodotengine%2Fgodot%2Fpull%2F86036" target="_blank">GH-86036</a>)。</span></span></span></p></li></ul><p>更多詳情可查看官方<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgodotengine.org%2Farticle%2Fmaintenance-release-godot-4-2-1%2F" target="_blank">公告</a>。</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 14 Dec 2023 03:34:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271165/godot-4-2-1-released</guid>
            <link>https://www.oschina.net/news/271165/godot-4-2-1-released</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Bytebase 2.12.0 - 改進自動補全和佈局導航]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h2>🚀 新功能</h2><ul><li>支持 MySQL 高級自動補全。</li><li>支持從 UI 上導入分類分級配置。 <img src="https://oscimg.oschina.net/oscnet/up-0268af7aad60dafccd3d2d9f573a25e45b2.png" alt="file" referrerpolicy="no-referrer"></li></ul><h2>🔔 重大變更</h2><ul><li>作廢已有企業版試用證書。之後可以通過提交申請獲取新的試用證書。</li></ul><h2>🎄 改進</h2><ul><li><p>改進整體佈局和導航。</p></li><li><p>支持在 SQL 編輯器裏顯示以及查詢 PostgreSQL 數據庫分區表。</p></li><li><p>優化對數據庫/實例/慢查詢的過濾體驗。 <img src="https://oscimg.oschina.net/oscnet/up-0e38c7ab958fb392f60f9f749b38a5a5e48.png" alt="file" referrerpolicy="no-referrer"></p></li><li><p>Schema 編輯器性能優化。</p></li><li><p>支持 TiDB 7.5。</p></li><li><p>提升 MySQL SQL 審核，的兼容性。</p></li></ul><h2>🐞 Bug 修復</h2><ul><li>修復了當結果太大無法查詢 MongoDB 的問題。</li><li>修復了在 SQL Editor 中無法查詢 PostgreSQL 視圖的問題。</li></ul><h2>🎠 社區</h2><ul><li>感謝 @jinrenjie 提交 fix(smtp): fix host name error in smtp authentication #9674</li></ul><h2>📕 安裝及升級</h2><p>參考<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fbytebase%2Fbytebase%23installation" target="_blank">升級指南</a>。如果從之前版本升級，獲取新版本後，重新啓動升級即可。</p><hr><p>💡 更多資訊，請關注 Bytebase 公號：Bytebase</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 14 Dec 2023 03:31:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/6148470/blog/10321743</guid>
            <link>https://my.oschina.net/u/6148470/blog/10321743</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[贈書 + 5 折購書，作者線上親解《MLOps 工程實踐》]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><strong>如何實現 </strong><strong>AI</strong><strong> 規模化落地？</strong></p><p><strong>如何跨越 </strong><strong>AI</strong><strong> 工程化鴻溝？</strong></p><p><strong>如何解決 </strong><strong>AI</strong><strong> 落地的效果與效率難題？</strong></p><p>這三大問題，都可以在《MLOps 工程實踐：工具、技術與企業級應用》這本書中找到答案。</p><p>《MLOps 工程實踐》由第四範式創始人領銜撰寫，騰訊、小米、百度等分享經驗，涵蓋生產級機器學習項目相關技術理論、工具和大廠案例，構建可靠、高效、可複用、可擴展機器學習模型。</p><p>12 月 18 日晚 19:00，《MLOps 工程實踐》的三名作者陳慶、顏丙政、趙喜生將直播分享本書內容，並講述寫書背後的故事，一起探討 MLOps 的過去、現在和未來。</p><p><img height="600" src="https://oscimg.oschina.net/oscnet/up-60cbe740936b6e154b981698fc29b5ca488.png" width="600" referrerpolicy="no-referrer"></p><p>&nbsp;</p><p>此外，直播期間，我們還將對外<strong><span style="color:#2980b9">贈送 10 本《MLOps 工程實踐》</span></strong>，在直播評論區互動或參與直播抽獎即有機會獲得！</p><p>同時，在 12 月 18 日當天，定價 109 元的<span style="color:#2980b9"><strong>《MLOps 工程實踐》將打五折！</strong></span>掃碼入羣，即可獲取購書鏈接！</p><p><img height="401" src="https://oscimg.oschina.net/oscnet/up-c1ed9b7c34eb99c03694baa402a428eb7bd.png" width="414" referrerpolicy="no-referrer"></p><p><strong>直播主題：</strong>三大作者親解 MLOps ——《MLOps 工程實踐》讀書分享會</p><p><strong>直播時間：</strong>12 月 18 日（週一） 19:00-20:30</p><p><strong>直播平台：</strong>「OSC 開源社區」 視頻號</p><p><strong>主辦方：</strong>開源中國、機械工業出版社</p><div><div><p><strong>直播嘉賓：</strong></p><div><p>&nbsp;&nbsp; <strong>主持人：</strong></p><p>&nbsp;&nbsp;孫越，星策社區產品經理</p><p>&nbsp;&nbsp; <strong>分享嘉賓：</strong></p><p>&nbsp;&nbsp;陳慶，第四範式大語言模型式説解決方案產品負責人</p><p>&nbsp;&nbsp;顏丙政，第四範式架構師</p><p>&nbsp;&nbsp;趙喜生，騰訊機器學習平台架構師</p><p><img height="1422" src="https://oscimg.oschina.net/oscnet/up-96816a36a647d5cac6e6102f7c1ece4591d.png" width="800" referrerpolicy="no-referrer"></p><p><strong>除了贈書之外，我們還有更多直播福利：</strong></p></div></div></div><ul><li><p>互動抽獎：在直播評論區提問，被直播嘉賓回覆的用户可獲 OSC T 恤 1 件，名額不限。</p></li><li><p>福袋抽獎：直播中將有多輪抽獎，參與就有機會獲得 OSC T 恤、筆記本、馬克杯 、前沿技術書籍等。</p></li></ul><p><img height="281" src="https://oscimg.oschina.net/oscnet/up-5107f5e07c513d574174e5301fed5a6be4c.png" width="500" referrerpolicy="no-referrer"></p><p>小夥伴們，我們直播間見～</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 14 Dec 2023 03:16:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/3859945/blog/10321745</guid>
            <link>https://my.oschina.net/u/3859945/blog/10321745</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[JavaScript 引擎 V8 年度回顧：新編譯器、修改基礎架構、改進 GC……]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>V8 官方博客<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fv8.dev%2Fblog%2Fholiday-season-2023" target="_blank">回顧了</a></u> 2023 年的重要變化：通過創新的性能優化，V8 不斷突破 Web 領域的可能性界限。比如引入新的中間層編譯器，對頂層編譯器基礎架構、運行時和垃圾回收進行多項改進，從而全面提升速度。</p><p><img src="https://oscimg.oschina.net/oscnet/up-bf9e793830df03255fd7b3a067d1fec862c.png" referrerpolicy="no-referrer"></p><p>除了性能改進之外，V8 團隊還為 JavaScript 和 WebAssembly 添加了許多新功能。比如通過 WasmGC 將支持垃圾回收的編程語言用於 Web 開發（<u><em><a href="https://www.oschina.net/news/264807/wasmgc-chrome" target="_blank">Chrome 支持運行 Kotlin、Java 等 GC 編程語言</a></em></u>）。</p><p>此外還改進了沙箱基礎設施，併為 V8 引入了控制流完整性 (CFI)，為用户提供了更安全的環境。</p><p><img src="https://oscimg.oschina.net/oscnet/up-3394d169661bc1f898bec9fe7ebe5286e7a.png" referrerpolicy="no-referrer"></p><p><strong>V8 2023 重磅新特性回顧</strong></p><ol><li><p><strong>新的中間層編譯器 Maglev</strong>：Maglev 是 V8 引擎的新中間層編譯器，它的推出使得代碼的優化速度大大提高。相比於現有的編譯器，Maglev 的編譯速度快了 10 到 100 倍，並且在 JetStream 和 Speedometer 等性能測試中取得了 8.2% 和 6% 的性能提升。</p></li><li><p><strong>新的頂層優化編譯器架構 Turboshaft</strong>：V8 引擎還引入了 Turboshaft，這是一個用於頂層優化編譯器的新內部架構。使用 Turboshaft 後，編譯速度提高了一倍，這有助於節約能源併為未來的性能提升奠定基礎。</p></li><li><p><strong>更快的 HTML 解析器</strong>：V8 團隊對 HTML 解析器進行了優化，這導致 Speedometer 測試分數提高了 3.4%。這些變化也被 WebKit 項目採納，從而對 Chrome 瀏覽器的性能產生了積極影響。</p></li><li><p><strong>更快的 DOM 分配</strong>：V8 團隊還對 DOM 對象的內存分配策略進行了優化，這使得 DOM 對象的分配速度提高了 3 倍，並在 DOM 密集型測試中取得了顯著的改進。</p></li><li><p><strong>新的 JavaScript 特性</strong>：V8 引擎還推出了一系列新的 JavaScript 特性，包括可調整大小的 ArrayBuffers、ArrayBuffer 傳輸、String isWellFormed 和 toWellFormed 等。</p></li><li><p><strong>WebAssembly 更新</strong>：V8 引擎為 WebAssembly 引入了多個新特性和性能優化，包括對多內存的支持、尾調用、放鬆的 SIMD 等。</p></li><li><p><strong>WebAssembly 垃圾回收</strong>：V8 引擎最終實現了 WebAssembly 垃圾回收（WasmGC），這使得可以將使用 Java、Kotlin、Dart 等垃圾回收語言編寫的應用程序編譯為 WebAssembly，從而提高了其運行速度。</p></li><li><p><strong>安全增強</strong>：V8 引擎還在安全方面進行了改進，包括改進了沙箱基礎設施、引入了控制流完整性（CFI）等。</p></li></ol><p>原文：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fv8.dev%2Fblog%2Fholiday-season-2023" target="_blank">https://v8.dev/blog</a></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 14 Dec 2023 03:16:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271159/v8-2023-recap</guid>
            <link>https://www.oschina.net/news/271159/v8-2023-recap</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Deno 1.39：WebGPU 迴歸]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Deno 的 1.39 版本發佈標誌着該平台的一個重要更新，其中包含多項引人注目的改進和新特性。</p><h3>WebGPU 的迴歸</h3><p>Deno 1.39 重新引入了 WebGPU API 的支持，這一決定標誌着對於高性能、跨架構的 GPU 編程在 JavaScript 中的重要進展。WebGPU API，被視為 WebGL 的有效繼承者，為開發者提供了一種低級別、高性能的方式來直接編程 GPU 硬件。此規範已被最終確定，並且已經在 Chrome 瀏覽器中提供。Firefox 和 Safari 也正在進行相關支持的開發工作。</p><p>Deno 最初在 2021 年初引入了 WebGPU 的支持，但由於性能問題，這一特性在今年早些時候被移除。現在，這些性能問題已經得到解決，重新引入了 WebGPU。GPU 在執行某些數值運算方面，相比於 CPU，能夠提供極高的並行處理能力。這一點不僅在渲染和遊戲中非常有用，也在諸如機器學習算法這樣的應用中展現出極高的效率，因為這些算法通常可以被表達為一系列矩陣運算，而這些運算可以在 GPU 上高效執行。</p><p>Deno 中的 WebGPU 實現基於即將在 Firefox 中推出的 WebGPU 實現的同一底層系統，因此，開發者可以有信心地在這一基礎上構建應用。</p><p>以下是一個使用 WebGPU 獲取 GPU 信息的基本示例代碼：</p><pre><code class="language-javascript language-js">// 嘗試從用户代理獲取適配器。
const adapter = await navigator.gpu.requestAdapter();
if (adapter) {
  // 打印有關適配器的一些基本信息。
  const adapterInfo = await adapter.requestAdapterInfo();
  console.log(`Found adapter: ${adapterInfo.device}`); // 在某些系統上這可能為空
  const features = [...adapter.features.values()];
  console.log(`Supported features: ${features.join(", ")}`);
} else {
  console.error("No adapter found");
}
</code></pre><p>更多示例可以在他們的<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdenoland%2Fwebgpu-examples" target="_blank">webgpu-examples 倉庫</a>中查看。</p><p>儘管規範已穩定，但在 Deno 中，WebGPU 仍然被視為不穩定。要在 Deno 中使用 WebGPU，需要使用<code>--unstable-webgpu</code>標誌。Deno 團隊計劃在從社區獲得更多反饋，並有更多時間對實現與<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgpuweb%2Fcts" target="_blank">規範測試套件</a>進行驗證後，很快將其穩定下來。</p><p>為了提供更多的 WebGPU 功能，Deno 還添加了<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeno.com%2Fblog%2Fv1.39%23stdwebgpu" target="_blank"><code>std/webgpu</code></a>。</p><h3>更靈活的動態導入支持</h3><p>在此版本中，<code>deno compile</code>現在支持更多動態導入模式。由於 Deno 需要在編譯過程中靜態包含所有可能在運行時被導入的模塊，因此動態導入曾是一個挑戰。現在，Deno 能夠處理更復雜的動態導入模式，例如使用模板字符串的導入語句。</p><h3>Deno 語言服務器（LSP）的增強</h3><p>為了提升 Deno 語言服務器的性能，1.39 版本引入了顯著的性能改進。這包括優化了快速打字期間大量請求的處理，使在 IDE 中的編輯體驗更為流暢。此外，新增了一個關機超時機制，以及最新版本的 Deno 更新通知功能。</p><h3>Node.js 兼容性改進</h3><p>1.39 版本為了方便將現有的 TypeScript 代碼庫遷移到 Deno，引入了對不規範導入的支持。例如，它允許在沒有文件擴展名的情況下解析導入，或者使用不正確的文件擴展名導入 TypeScript 文件。此外，還增加了對<code>node_modules/.bin/</code>目錄中可執行文件在<code>deno task</code>中的運行支持。</p><h3>Deno API 的變更</h3><p>新版本中也包括了對 Deno API 的若干更改。例如，對於 Unix 套接字的<code>Deno.serve()</code>支持已穩定化，以及<code>Deno.HttpServer.shutdown()</code>的穩定化。此外，引入了<code>Deno.HttpClient</code>的使用關鍵字支持，以及對變更通知的<code>Deno.Kv.watch()</code> API。</p><h3>其他特性和修復</h3><p>1.39 版本還包括了其他許多新特性和修復，如 TypeScript 5.3 的支持，對 Jupyter 筆記本中代碼塊的格式化支持，以及多項對 Node.js API 的更新和錯誤修復。</p><p>這些更新和改進共同提升了 Deno 的性能、靈活性和兼容性，使其成為開發現代 JavaScript 和 TypeScript 應用程序的一個更加強大和多功能的平台。</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 14 Dec 2023 03:09:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271157/deno-1-39-released</guid>
            <link>https://www.oschina.net/news/271157/deno-1-39-released</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Firefox 為 Android 用户提供 450 多個新擴展]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">Mozilla 正式<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.mozilla.org%2Fen%2Fmozilla%2Fnew-extensions-youll-love-now-available-on-firefox-for-android%2F" target="_blank">宣佈</a>在 Addons.mozilla.org (AMO) Android 頁面上，面向用户提供 450 多個新的 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Faddons.mozilla.org%2Fzh-CN%2Fandroid%2F%3F_gl%3D1*72qen9*_ga*MTM5NzQ4MDI5My4xNzAwNjE4OTgx*_ga_X4N05QV93S*MTcwMjYwNzA0MC4xLjAuMTcwMjYwNzA0MC4wLjAuMA.." target="_blank">Firefox Android 版擴展</a>。</span></p><p><span style="color:#000000">「這一里程碑標誌着一個新的開放式移動擴展生態系統的啓動，開發者現在可以自由創建和發佈擴展，用户也可以輕鬆訪問並在 Firefox for Android 上安裝這些擴展。」</span></p><p><img height="303" src="https://oscimg.oschina.net/oscnet/up-7126e1593955faa3278ba5deb2d5c413912.png" width="700" referrerpolicy="no-referrer"></p><p><span style="color:#000000">Firefox 工程副總裁 Vicky Chin 稱，擴展最初的意義就是人們用來定製自己的互聯網體驗的一種方式。Firefox&nbsp;是當下唯一一個支持開放擴展生態系統的主要 Android 瀏覽器。他們計劃在未來幾個月啓用更多擴展，供用户選擇並定製自己的移動互聯網體驗。</span></p><p><span style="color:#000000">現在的人在<span style="background-color:#ffffff">很多事情上都依賴於移動設備 — 快速信息搜索、閲讀文章、聽音樂、尋找食譜等。</span>目前一些可用的相關擴展程序有：</span></p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Faddons.mozilla.org%2Fen-US%2Fandroid%2Faddon%2Fmidnight-lizard-quantum%2F%3Futm_source%3Daddons.mozilla.org%26utm%2520_medium%3Dreferral%26utm_content%3Dsearch" target="_blank"><strong>Midnight Lizard</strong></a><strong style="color:#000000"><span>&nbsp;</span>– 閲讀更輕鬆&nbsp;</strong></li></ul><p><span style="color:#000000">Midnight Lizard 擴展可以調節手機界面顏色，增加或減少亮度和對比度；還能添加藍光濾鏡、屏幕着色器，以及夜間模式。從而減輕眼睛疲勞，保持良好狀態。</span></p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Faddons.mozilla.org%2Fen-US%2Fandroid%2Faddon%2Fdark-background-light-text%2F%3Futm_source%3Daddons.mozilla.org%26utm_medium%3Dreferral%26utm_content%3Dsearch" target="_blank"><strong>深色背景和淺色文本</strong></a><strong>&nbsp;– 保持簡潔</strong></li></ul><p><span style="color:#000000">用户可以自由定製，讓所有網頁都以深色背景和淺色文本的方式呈現，或者也可只選擇部分網頁。</span></p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Faddons.mozilla.org%2Fen-US%2Fandroid%2Faddon%2Fworldwide-radio%2F" target="_blank"><strong>全球電台</strong></a><strong>&nbsp;– 盡情享受</strong></li></ul><p><span style="color:#000000">可直接從 Android 版 Firefox 瀏覽器訪問來自世界各地的 50,000 多個廣播電台。</span></p><p><span style="background-color:#ffffff; color:#000000">公告稱，隨着越來越多的開發者創建針對移動設備優化的內容，預計未來幾個月還將出現一波新的 Firefox for Android 擴展浪潮。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 14 Dec 2023 02:52:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271154/new-extensions-available-firefox-for-android</guid>
            <link>https://www.oschina.net/news/271154/new-extensions-available-firefox-for-android</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[AI 代碼助手盛行，編程語言排行榜都沒法做了]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>RedMonk 編程語言排行榜通過追蹤編程語言在 GitHub 和 Stack Overflow 上的代碼使用情況與討論數量，統計分析後進行排序，其旨在深入瞭解潛在的語言採用趨勢。因此在眾多編程語言榜單中，RedMonk 編程語言排行榜在專業度和認可度方面稱得上是業內天花板了。</p><blockquote><p>RedMonk 榜單的數據收集方式包含兩部分：<br> -使用 GitHub Archive 作為數據源對 GitHub 數據進行分析；<br> -Stack Overflow 部分則直接使用其提供的實用工具&nbsp;data explorer，具體排序算法見<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fredmonk.com%2Fsogrady%2F2019%2F07%2F18%2Flanguage-rankings-6-19%2F">官方介紹</a>。</p></blockquote><p>該榜單一年發佈兩次，上次更新是 5 月（<u><a href="https://www.oschina.net/news/241358/redmonk-language-rankings-1-23" target="news">RedMonk 排行：Objective-C 日漸衰落</a></u>）。按照慣例，第 2 次更新是 11 月，但直到現在也沒有任何動靜。</p><p>昨日，官方<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fredmonk.com%2Frstephens%2F2023%2F12%2F14%2Flanguage-rankings-update%2F" target="_blank">解釋</a></u>了為何遲遲不發佈新的編程語言榜單——原因是他們按照以往的方式獲取數據後發現，收集到的數據量跟往年比較相差巨大。</p><p>自 ChatGPT 發佈以來，各種 AI 代碼助手大行其道，因此問答社區的整體提問數量大幅下降。而在 GitHub 中，根據 GitHub Archive 的數據，與 2022 年 2 月的 PR 相比，2023 年 1 月的 PR 量下降了約 25%，完全出乎意料。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-fd179e77353ed33816985ce76dfca218f56.png" referrerpolicy="no-referrer"></p><p>RedMonk 稱雖然早已知曉 Stack Overflow 的流量已出現顯著下滑（<em><u><a href="https://www.oschina.net/news/251072/the-fall-of-stack-overflow" target="news">Stack Overflow 訪問量大幅下降</a></u></em>），但沒有預料到 GitHub 上的數據會出現如此重大的「異常」。</p><p>因此 RedMonk 指出，基於人工智能的代碼助手的出現和興起已經影響了 RedMonk 語言排名的數據。隨着問題和知識共享從公共論壇轉移到私人工具，他們從公開數據中確定有意義趨勢的能力將無限期地改變。</p><p>RedMonk 稱會繼續跟蹤這些趨勢，<strong>並確定樣本量的變化將如何影響他們進行排名</strong>，同時預告&nbsp;2024 年 1 月，發佈新榜單。</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 14 Dec 2023 02:50:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271153/redmonk-language-rankings-update</guid>
            <link>https://www.oschina.net/news/271153/redmonk-language-rankings-update</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Dart 3.2 發佈]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Dart 3.2 現已<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FPaf0h9KLgzEzAg_d4Egd8w" target="_blank">發佈</a>。該版本針對以下方面做出了改進：新增了一項語言功能，可對私有 final 字段進行非空升級；通過新增的互操作功能改善了開發者體驗；支持 DevTools 的擴展程序；並更新了 Web 路線圖，包括提供對 Wasm (又名 WebAssembly) 的支持。</p><h4><strong>私有 final 字段的非空升級</strong></h4><p>自 Dart 2.12 中引入健全的空安全 (sound null safety) 以來已過去幾年時間。Dart 3.2 中改進了流程分析引擎，以便夠對<strong>私有 final 字段</strong>實施類型升級。</p><p>可以這樣理解：對於私有 final 字段，它的值在初始分配後永不更改，因此僅檢查一次也是安全的。私有 final 字段升級從 Dart 3.2 起推出，並將應用於配置 3.2 及以上版本 Dart SDK 的項目。</p><p><strong>在 package:lints 3.0 中加入新的代碼分析選項</strong></p><p>針對代碼分析，還對 package:lints 中的標準代碼分析規則進行了一些改進。package 包含默認和推薦的靜態分析規則集，適用於任何根據 dart create 或 flutter create (通過 package:flutter_lints — package:lints 的擴展) 創建的新項目。</p><p>lint 集新的主要版本 (版本 3.0)&nbsp;現已推出。項目團隊在此修訂版的核心集中添加了六個 lint，在推薦集中添加了兩個 lint，可用於驗證 pubspec URL，以及驗證是否使用正確的參數調用集合方法等。</p><h4><strong>Dart 互操作性更新</strong></h4><p>從 Dart 3.2 開始，對原生互操作進行了許多改進:</p><ul><li><p>為 C FFI 引入了 NativeCallable.isolateLocal 構造函數，它可以根據任意 Dart 函數創建 C 函數指針。這是一項由 Pointer.fromFunction 提供的擴展功能，只能根據頂級函數創建函數指針。</p></li><li><p>更新了 Objective-C 綁定生成器，以使用在 Dart 3.1 中添加的 NativeCallable.listener。該生成器現在可以自動處理包含異步回調的 API，例如 Core Motion 這類此前需要手動編寫部分綁定代碼的 API。</p></li><li><p>為實現 Java 和 Kotlin 互操作而持續改進 package:jnigen。現在能夠將 package:cronet_http(適用於 Android 的 Cronet HTTP 客户端的封裝容器) 從手寫的綁定代碼遷移到自動生成的封裝容器。</p></li><li><p>在 Native Assets 功能方面取得了重大進展，該功能旨在解決與依賴原生代碼的 Dart package 分發相關的許多問題。Native Assets 提供統一的鈎子來集成構建 Flutter 和獨立 Dart 應用所涉及的各種構建系統，從而解決相關問題。您可以查看相關文檔獲取預覽。</p></li></ul><h4><strong>適用於 Dart package 的 DevTools 擴展程序</strong></h4><p>Dart DevTools 是一套用於支持純 Dart 和 Flutter 應用的調試及性能工具。項目團隊在 Dart 3.2 和 Flutter 3.16 中推出了新的擴展框架，讓 package 作者能夠直接在 DevTools 中為其 package 構建自定義工具。</p><p>因此，包含框架的 pub.dev package 能夠提供特定於其用例的自定義工具。「例如，Serverpod 的作者一直在努力為其 package 構建 DevTools，並且很高興在即將發佈的 1.2 版本中提供 DevTools 擴展程序。」</p><p><img alt="" height="370" src="https://oscimg.oschina.net/oscnet/up-284c1e74e984082b8e69288d70a8f9b2b2b.png" width="500" referrerpolicy="no-referrer"></p><h4><strong>Dart Web 和 Wasm 更新</strong></h4><p>項目團隊正在將高級託管語言 (如 Dart) 的垃圾回收功能添加到 Wasm 標準中。</p><p>Dart-to-Wasm 編譯器幾乎配備所有功能。「<span style="background-color:#ffffff; color:rgba(0, 0, 0, 0.9)">我們對性能和兼容性非常滿意，正在進一步關注邊緣情況，以確保在各種場景中實現暢快運行。</span>」</p><p>對於 Flutter Web 則完成了一個新的 "Skwasm" 渲染引擎開發。為了最大限度提高性能，Skwasm 通過 wasm-to-wasm 綁定，將編譯後的應用代碼直接連接到自定義 CanvasKit Wasm 模塊。這是 Flutter Web 多線程渲染支持的首次迭代，進一步提高了幀時間。</p><p>在採用 Wasm 的 Flutter Web 準備結束目前的實驗狀態之前，他們還計劃：</p><ul><li><p><strong><span>雙重編譯</span></strong><span>：生成 Wasm 和 JavaScript 輸出，並在運行時啓用功能檢測，以支持具備或不具備 Wasm-GC 支持的瀏覽器。</span></p></li><li><p><strong><span>現代 JavaScript 互操作性</span></strong><span>：一種新的基於擴展類型的 JS 互操作機制，當針對 JavaScript 和 Wasm 時，可以在 Dart 代碼、瀏覽器 API 和 JS 庫之間實現簡潔的、類型安全的調用。</span></p></li><li><p><strong><span>支持 Wasm 的瀏覽器 API</span></strong><span>：新的 package:web，基於現代 JS 互操作機制，取代了 dart:html (及相關庫)，藉此可輕鬆訪問瀏覽器 API，並且支持在 JS 和 Wasm 目標上使用。</span></p></li></ul><p><span>目前，其</span><span style="background-color:#ffffff; color:rgba(0, 0, 0, 0.9)">正在開始將大量的內部項目遷移到 package:web 和新的 JS 互操作機制，並希望在下一個穩定版本中向用户提供更多更新。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 14 Dec 2023 02:18:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271147/dart-3-2-released</guid>
            <link>https://www.oschina.net/news/271147/dart-3-2-released</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Google Groups 停止支持 Usenet]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>谷歌宣佈從&nbsp;2024 年 2 月 22 日開始，用户無法再使用 Google Groups（網址為 groups.google.com）向 Usenet 羣組發佈內容、訂閲 Usenet 羣組，或查看新的 Usenet 內容。但可以繼續查看和搜索 2024 年 2 月 22 日之前在 Google Groups 上發佈的歷史 Usenet 內容。</p><p><img src="https://oscimg.oschina.net/oscnet/up-3d4af7d4780a6e633853c6fc3460057d75c.png" referrerpolicy="no-referrer"></p><p>來源：<u><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsupport.google.com%2Fgroups%2Fanswer%2F11036538%3Fhl%3Den" target="_blank">https://support.google.com/groups/answer/11036538?hl=en</a></em></u></p><p>谷歌表示，在過去幾年裏，基於文本的 Usenet 羣組中的合規活躍已顯著下降，因為用户已轉向更現代的技術和格式，例如社交媒體和基於 Web 的論壇。目前通過 Usenet 傳播的大部分內容都是<strong>二進制（非文本）文件共享</strong>（Google Groups 不支持該項功能），以及垃圾郵件。</p><p>Usenet（/ˈjuːznɛt/）是一種在計算機上可用的全球分佈式討論系統。它是從通用的 Unix 到 Unix 複製（UUCP） 撥號網絡架構中發展出來的。</p><p>杜克大學研究生湯姆·特拉斯科特與吉姆·埃利斯在 1979 年設計了 Usenet，並於 1980 年發佈。用户閲讀和發佈消息到一個或多個主題類別，稱為「新聞組」。Usenet 在許多方面類似於公告板系統（BBS），並且是現在廣泛使用的 Internet 論壇的前身。</p><p>Linux 內核的命運齒輪啓動正是由 Usenet 見證——1991 年 8 月 26 日，芬蘭大學生 Linus Benedict Torvalds 向 comp.os.minix 新聞組的成員透露了出於 「業餘愛好」 而正在研究操作系統，當時 Linus 在郵件中表示自己搗鼓的操作系統只是一個業餘性質項目，不會像 GNU 那樣龐大和專業。</p><blockquote><p>我正在研究一款（自由的）操作系統（就是個興趣愛好，我不會搞得像 GNU 那麼大那麼專業），打算讓它工作在 386 (486) AT 平台上。它從四月就開始醖釀了，馬上就快好了。我希望那些喜歡或不喜歡 minix 的人能夠反饋意見，因為我的系統和它有點類似（同樣的文件系統的物理佈局 —— 由於實際原因，還有些其他的東西）。</p><p>我現在已經移植了&nbsp;bash (1.08) 和&nbsp;gcc (1.40)， 而且看起來奏效了。這意味着我會在幾個月內得到一些實用的東西。我想了解大多數人想要的特性是什麼，歡迎各位積極提出建議，不過我不保證能實現 :-)</p><p><img alt="" src="https://static.oschina.net/uploads/space/2019/0826/211817_vyJK_2720166.jpg" referrerpolicy="no-referrer"></p></blockquote></div>
                                    ]]>
            </description>
            <pubDate>Thu, 14 Dec 2023 02:14:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271146</guid>
            <link>https://www.oschina.net/news/271146</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[ChainForge —— 開源可視化編程環境]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="text-align:start"><span><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>ChainForge 是一個數據流提示工程環境，用於分析和評估 LLM 響應。它旨在對提示、聊天響應和響應質量進行早期、快速而直接的探索，而不僅僅是與個別 LLM 的臨時聊天。使用 ChainForge，你可以：</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><ul><li><strong>一次查詢多個 LLM，</strong>快速有效地測試提示的想法和變化。</li><li><strong>比較不同提示排列、不同模型和不同模型設置的響應質量，</strong>以選擇最適合你的用例的提示和模型。</li><li><strong>設置評估指標</strong>（評分函數）並立即可視化提示、提示參數、模型和模型設置的結果。</li><li><strong>跨模板參數和聊天模型同時進行多個對話。</strong>模板不僅僅是提示，還包括後續聊天消息，並在每次聊天對話時檢查和評估輸出。</li></ul><p style="text-align:start"><span><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>ChainForge 附帶了許多示例評估流程，讓你瞭解可能性，其中包括根據 OpenAI 評估中的基準生成的 188 個示例流程。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:start"><span><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span><img alt="" height="186" src="https://static.oschina.net/uploads/space/2023/0808/145508_tLk6_4252687.png" width="500" referrerpolicy="no-referrer"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:start"><span><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span><img alt="" height="322" src="https://static.oschina.net/uploads/space/2023/0808/145813_aswq_4252687.png" width="500" referrerpolicy="no-referrer"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:start"><span><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>ChainForge 的一個關鍵目標是促進提示和模型的<strong>比較</strong>和<strong>評估</strong>。基本特點是：</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><ul><li><strong>提示排列</strong>：設置提示模板並向其提供輸入變量的變體。ChainForge 將提示所有選定的 LLM 以及輸入提示的所有可能排列，以便你可以更好地感受到提示質量。你還可以以任意深度鏈接提示模板（例如，比較模板）。</li><li><strong>聊天輪流</strong>：超越提示和模板後續聊天消息，就像提示一樣。你可以測試用户查詢的措辭如何改變 LLM 的輸出，或者比較多個聊天模型（或具有不同設置的相同聊天模型！）的後續響應的質量。</li><li><strong>模型設置</strong>：更改支持的模型的設置，並比較不同的設置。例如，你可以通過添加多個 ChatGPT 模型、更改單個設置以及給每個模型起暱稱來衡量系統消息對 ChatGPT 的影響。ChainForge 將向模型的每個版本發送查詢。</li><li><strong>評估節點</strong>：探測鏈中的 LLM 響應並（經典地）測試它們的某些所需行為。從根本上講，這是基於 Python 腳本的。計劃在不久的將來為常見用例添加預設評估器節點（例如，名稱實體識別）。注意，你還可以將 LLM 響應鏈接到提示模板中，以幫助在更廣泛的評估方法之前以較低的成本評估輸出。</li><li><strong>可視化節點</strong>：在分組盒須圖（對於 <span style="background-color:#ffffff; color:#1f2328">numeric metrics</span>）和直方圖（對於 <span style="background-color:#ffffff; color:#1f2328">boolean metrics</span>）等圖上可視化評估結果。目前僅支持 <span style="background-color:#ffffff; color:#1f2328">numeric&nbsp;</span>和 <span style="background-color:#ffffff; color:#1f2328">boolean metrics</span>。目標是在未來為用户提供更多的繪圖控制和選項。</li></ul><p style="text-align:start"><span><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>總而言之，這些功能可讓你輕鬆：</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><ul><li><strong>比較提示和提示參數</strong>：選擇能夠最大化你的評估目標指標（例如，最低代碼錯誤率）的最佳提示集。或者，瞭解更改提示模板中的參數如何影響響​​應的質量。</li><li><strong>跨模型比較</strong>：跨模型和不同模型設置比較每個提示的響應。</li></ul></div>
                                                                ]]>
            </description>
            <pubDate>Thu, 14 Dec 2023 01:55:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/p/chainforge</guid>
            <link>https://www.oschina.net/p/chainforge</link>
        </item>
        <item>
            <title>
                <![CDATA[Gitee 推薦 | 雲原生成本優化開源項目 Crane]]>
            </title>
            <description>
                <![CDATA[<h1><a id="user-content-crane-cloud-resource-analytics-and-economics" class="anchor" href="https://gitee.com/gocrane/crane#crane-cloud-resource-analytics-and-economics"></a>Crane: Cloud Resource Analytics and Economics</h1><p><a href="https://gitee.com/link?target=https%3A%2F%2Fgoreportcard.com%2Freport%2Fgithub.com%2Fgocrane%2Fcrane"><img src="https://goreportcard.com/badge/github.com/gocrane/crane" alt="Go Report Card" referrerpolicy="no-referrer"></a><a href="https://gitee.com/link?target=https%3A%2F%2Fgodoc.org%2Fgithub.com%2Fgocrane%2Fcrane"><img src="https://godoc.org/github.com/gocrane/crane?status.svg" alt="GoDoc" referrerpolicy="no-referrer"></a><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.apache.org%2Flicenses%2FLICENSE-2.0.html"><img src="https://img.shields.io/github/license/gocrane/crane" alt="License" referrerpolicy="no-referrer"></a><img src="https://img.shields.io/github/go-mod/go-version/gocrane/crane" alt="GoVersion" referrerpolicy="no-referrer"></p><div align="center"><img alt="Crane logo" height="100" src="https://gitee.com/gocrane/crane/raw/main/docs/images/crane.svg" title="Crane" width="200" referrerpolicy="no-referrer"></div><hr><h2><a id="user-content-crane-是什麼" class="anchor" href="https://gitee.com/gocrane/crane#crane-%E6%98%AF%E4%BB%80%E4%B9%88"></a>Crane 是什麼</h2><blockquote><p><a href="https://gitee.com/gocrane/crane/blob/main/README.md">English</a> | 中文</p></blockquote><p>Crane 是一個基於 FinOps 的雲資源分析與成本優化平台。它的願景是在保證客户應用運行質量的前提下實現極致的降本。</p><div align="center"><img alt="fcs logo" height="200" src="https://gitee.com/gocrane/crane/raw/main/docs/images/Crane-FinOps-Certified-Solution.png" title="FinOps Certified Solution" width="200" referrerpolicy="no-referrer"></div><p>Crane 是 <a href="https://gitee.com/link?target=https%3A%2F%2Fwww.finops.org%2F">FinOps 基金會</a>認證的<a href="https://gitee.com/link?target=https%3A%2F%2Fwww.finops.org%2Fcertifications%2Ffinops-certified-solution%2F">雲優化方案</a>。</p><p><strong>如何在 Crane 中開啓成本優化之旅？</strong></p><ol><li><strong>成本展示</strong>: Kubernetes 資源 ( Deployments, StatefulSets ) 的多維度聚合與展示。</li><li><strong>成本分析</strong>: 週期性的分析集羣資源的狀態並提供優化建議。</li><li><strong>成本優化</strong>: 通過豐富的優化工具更新配置達成降本的目標。</li></ol><p><a href="https://gitee.com/link?target=https%3A%2F%2Fuser-images.githubusercontent.com%2F35299017%2F186680122-d7756b47-06be-44cb-8553-1957eaa3ed45.mp4">https://user-images.githubusercontent.com/35299017/186680122-d7756b47-06be-44cb-8553-1957eaa3ed45.mp4</a></p><p>Crane Dashboard <strong>在線 Demo</strong>: <a href="https://gitee.com/link?target=http%3A%2F%2Fdashboard.gocrane.io%2F">http://dashboard.gocrane.io/</a></p><h2><a id="user-content-main-features" class="anchor" href="https://gitee.com/gocrane/crane#main-features"></a>Main Features</h2><img alt="Crane Overview" height="330" src="https://gitee.com/gocrane/crane/raw/main/docs/images/crane-overview.png" width="900" referrerpolicy="no-referrer"><p><strong>成本可視化和優化評估</strong></p><ul><li>提供一組 Exporter 計算集羣雲資源的計費和賬單數據並存儲到你的監控系統，比如 Prometheus。</li><li>多維度的成本洞察，優化評估。通過 <code>Cloud Provider</code> 支持多雲計費。</li></ul><p><strong>推薦框架</strong></p><p>提供了一個可擴展的推薦框架以支持多種雲資源的分析，內置了多種推薦器：資源推薦，副本推薦，閒置資源推薦。<a href="https://gitee.com/link?target=https%3A%2F%2Fgocrane.io%2Fzh-cn%2Fdocs%2Ftutorials%2Frecommendation%2F">瞭解更多</a></p><p><strong>基於預測的水平彈性器</strong></p><p>EffectiveHorizontalPodAutoscaler 支持了預測驅動的彈性。它基於社區 HPA 做底層的彈性控制，支持更豐富的彈性觸發策略（預測，觀測，週期），讓彈性更加高效，並保障了服務的質量。<a href="https://gitee.com/link?target=https%3A%2F%2Fgocrane.io%2Fzh-cn%2Fdocs%2Ftutorials%2Fusing-effective-hpa-to-scaling-with-effectiveness%2F">瞭解更多</a></p><p><strong>負載感知的調度器</strong></p><p>動態調度器根據實際的節點利用率構建了一個簡單但高效的模型，並過濾掉那些負載高的節點來平衡集羣。<a href="https://gitee.com/link?target=https%3A%2F%2Fgocrane.io%2Fzh-cn%2Fdocs%2Ftutorials%2Fscheduling-pods-based-on-actual-node-load%2F">瞭解更多</a></p><p><strong>基於 QOS 的混部</strong></p><p>QOS 相關能力保證了運行在 Kubernetes 上的 Pod 的穩定性。具有多維指標條件下的幹擾檢測和主動迴避能力，支持精確操作和自定義指標接入；具有預測算法增強的彈性資源超賣能力，複用和限制集羣內的空閒資源；具備增強的旁路 cpuset 管理能力，在綁核的同時提升資源利用效率。<a href="https://gitee.com/gocrane/crane/blob/main/docs/tutorials/using-qos-ensurance.zh.md">瞭解更多</a>。</p><h2><a id="user-content-架構" class="anchor" href="https://gitee.com/gocrane/crane#%E6%9E%B6%E6%9E%84"></a>架構</h2><p>Crane 的整體架構如下：</p><img alt="Crane Overview" height="550" src="https://gitee.com/gocrane/crane/raw/main/docs/images/crane-arch.png" referrerpolicy="no-referrer"><p><strong>Craned</strong></p><p>Craned 是 Crane 的最核心組件，它管理了 CRDs 的生命週期以及 API。Craned 通過 <code>Deployment</code> 方式部署且由兩個容器組成：</p><ul><li>Craned: 運行了 Operators 用來管理 CRDs，向 Dashboard 提供了 WebApi，Predictors 提供了 TimeSeries API</li><li>Dashboard: 基於 TDesign's Starter 腳手架研發的前端項目，提供了易於上手的產品功能</li></ul><p><strong>Fadvisor</strong></p><p>Fadvisor 提供一組 Exporter 計算集羣雲資源的計費和賬單數據並存儲到你的監控系統，比如 Prometheus。Fadvisor 通過 <code>Cloud Provider</code> 支持了多雲計費的 API。</p><p><strong>Metric Adapter</strong></p><p>Metric Adapter 實現了一個 <code>Custom Metric Apiserver</code>. Metric Adapter 讀取 CRDs 信息並提供基於 <code>Custom/External Metric API</code> 的 HPA Metric 的數據。</p><p><strong>Crane Agent</strong></p><p>Crane Agent 通過 <code>DaemonSet</code> 部署在集羣的節點上。</p><h2><a id="user-content-快速開始" class="anchor" href="https://gitee.com/gocrane/crane#%E5%BF%AB%E9%80%9F%E5%BC%80%E5%A7%8B"></a>快速開始</h2><ul><li><a href="https://gitee.com/link?target=https%3A%2F%2Fgocrane.io%2Fzh-cn%2Fdocs%2Fgetting-started%2Fintroduction%2F">介紹</a></li><li><a href="https://gitee.com/link?target=https%3A%2F%2Fgocrane.io%2Fzh-cn%2Fdocs%2Fgetting-started%2Finstallation%2Fquick-start%2F">快速開始</a></li><li><a href="https://gitee.com/link?target=https%3A%2F%2Fgocrane.io%2Fzh-cn%2Fdocs%2Ftutorials%2F">教程</a></li></ul><h2><a id="user-content-文檔" class="anchor" href="https://gitee.com/gocrane/crane#%E6%96%87%E6%A1%A3"></a>文檔</h2><p>完整的文檔請<a href="https://gitee.com/link?target=https%3A%2F%2Fgocrane.io%2Fzh-cn">查看</a>。</p><h2><a id="user-content-社區" class="anchor" href="https://gitee.com/gocrane/crane#%E7%A4%BE%E5%8C%BA"></a>社區</h2><ul><li><p>Slack(English): <a href="https://gitee.com/link?target=https%3A%2F%2Fjoin.slack.com%2Ft%2Fgocrane%2Fshared_invite%2Fzt-1k3beos1i-ejN6sV0jx5_MAkKRbl~MFQ">https://gocrane.slack.com</a></p></li><li><p>微信羣:</p></li></ul><img alt="Wechat" src="https://user-images.githubusercontent.com/6251116/226240172-53bae906-3abc-4b04-89d5-eee11c13faaa.png" title="Wechat" width="200" referrerpolicy="no-referrer"><img alt="Wechat" src="https://gitee.com/gocrane/crane/raw/main/docs/images/wechat.jpeg" title="Wechat" width="200" referrerpolicy="no-referrer"><p>添加微信後回覆 "Crane"，小助手會定期將您加入微信羣。</p><ul><li>社區雙週會 (APAC, Chinese)
<ul><li><a href="https://gitee.com/link?target=https%3A%2F%2Fmeeting.tencent.com%2Fdm%2FSjY20wCJHy5F">Meeting Link</a></li><li><a href="https://gitee.com/link?target=https%3A%2F%2Fdoc.weixin.qq.com%2Fdoc%2Fw3_AHMAlwa_AFU7PT58rVhTFKXV0maR6%3Fscode%3DAJEAIQdfAAo0gvbrCIAHMAlwa_AFU">Meeting Notes</a></li><li><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.wolai.com%2F33xC4HB1JXCCH1x8umfioS">Video Records</a></li></ul></li></ul><h2><a id="user-content-roadmap" class="anchor" href="https://gitee.com/gocrane/crane#roadmap"></a>RoadMap</h2><p><a href="https://gitee.com/gocrane/crane/blob/main/docs/roadmaps/roadmap-2022.md">瞭解更多</a>。</p><h2><a id="user-content-如何貢獻" class="anchor" href="https://gitee.com/gocrane/crane#%E5%A6%82%E4%BD%95%E8%B4%A1%E7%8C%AE"></a>如何貢獻</h2><p>歡迎參與貢獻 Crane 項目。請參考 <a href="https://gitee.com/gocrane/crane/blob/main/CONTRIBUTING.md">CONTRIBUTING</a> 瞭解如何參與貢獻。</p><p>關於如何參與 Crane 的開發，你可以參考 <a href="https://gitee.com/gocrane/crane/blob/main/docs/developer-guide.md">開發文檔</a>。</p><h2><a id="user-content-行為準則" class="anchor" href="https://gitee.com/gocrane/crane#%E8%A1%8C%E4%B8%BA%E5%87%86%E5%88%99"></a>行為準則</h2><p>Crane 採用了 <a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fcncf%2Ffoundation%2Fblob%2Fmaster%2Fcode-of-conduct.md">CNCF Code of Conduct</a>.</p>]]>
            </description>
            <pubDate>Thu, 14 Dec 2023 01:50:00 GMT</pubDate>
            <guid isPermaLink="false">https://gitee.com/gocrane/crane</guid>
            <link>https://gitee.com/gocrane/crane</link>
        </item>
        <item>
            <title>
                <![CDATA[每日一博 | 理解 Mysql 索引原理及特性]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0px; margin-right:0px; text-align:left">作為開發人員，碰到了執行時間較長的 sql 時，基本上大家都會説」加個索引吧」。但是索引是什麼東西，索引有哪些特性，下面和大家簡單討論一下。</p><span id="OSC_h1_1"></span><h1>1 索引如何工作，是如何加快查詢速度</h1><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">索引就好比書本的目錄，提高數據庫表數據訪問速度的數據庫對象。當我們的請求打過來之後，如果有目錄，就會快速的定位到章節，再從章節裏找到數據。如果沒有目錄，如大海撈針一般，難度可見一斑。這就是我們經常碰到的罪魁禍首，全表掃描。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">一條索引記錄中包含的基本信息包括：鍵值（即你定義索引時指定的所有字段的值）+邏輯指針（指向數據頁或者另一索引頁）。通常狀況下，由於索引記錄僅包含索引字段值（以及 4-9 字節的指針），索引實體比真實的數據行要小許多，索引頁相較數據頁來説要密集許多。一個索引頁可以存儲數量更多的索引記錄，這意味着在索引中查找時在 I/O 上佔很大的優勢，理解這一點有助於從本質上了解使用索引的優勢，也是大部分性能優化所需要切入的點。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">1）沒有索引的情況下訪問數據：</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://img1.jcloudcs.com/developer.jdcloud.com/0c0cace5-88ad-42da-95e9-0c7518db68fa20220518151143.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">2）使用平衡二叉樹結構索引的情況下訪問數據：</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://img1.jcloudcs.com/developer.jdcloud.com/bad080ed-9e20-487d-8b2c-72cc65379a6d20220518151201.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">第一張圖沒有使用索引我們會進行順序查找，依照數據順序逐個進行匹配，進行了 5 次尋址才查詢出所需數據，第二張圖用了一個簡單的平衡二叉樹索引之後我們只用了 3 次，這還是數據量小的情況下，數據量大了效果更明顯，所以總結來説創建索引就是為了加快數據查找速度；</p><span id="OSC_h1_2"></span><h1>2 索引的組成部分和種類</h1><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">常見的索引的實現方式有很多種，比如 hash、數組、樹，下面為大家介紹下這幾種模型使用上有什麼區別</p><span id="OSC_h3_3"></span><h3>2.1 hash</h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">hash 思路簡單，就是把我們插入的 key 通過 hash 函數算法 (以前一般是取餘數，就好比 hashmap 的計算方式移位異或之類的)，計算出對應的 value，把這個 value 放到一個位置，這個位置叫做哈希槽。對應磁盤位置指針放入 hash 槽裏面。一句話總結 hash 索引，就是存儲了索引字段的 hash 值和數據所在磁盤文件指針。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">但是不可避免的是，無論什麼算法，數據量大了之後難免會出現不同的數據被放在一個 hash 槽裏面。比如字典上的 「吳」和」武」就是同音，你查字典的時候到這裏只能順序往下去找了。索引的處理也是這樣，會拉出一個鏈表，需要的時候順序遍歷即可。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://img1.jcloudcs.com/developer.jdcloud.com/89334960-0eef-4905-bfc1-e2d51f727a5f20220518151225.png" referrerpolicy="no-referrer"></p><ul><li>缺點：無序索引，區間查詢性能低，因為區間查詢會造成多次訪問磁盤，多次 io 耗時是很難接受的。</li><li>優點：insert 迅速，只需往後補就行</li><li>場景：等值查詢， 比如 memcached 。不適用大量重複數據的列，避免 hash 衝突</li><li>總結：想成 java 的 hashmap 即可</li></ul><span id="OSC_h3_4"></span><h3>2.2 有序數組</h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">如果我們需要區間查詢的時候，hash 索引的性能就不盡如人意了。這個時候有序數組的優勢就能體現出來了。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">當我們需要從一個有序數組裏取 A 和 B 之間的值時，只需要通過二分法定位到 A 的位置，時間複雜度 O(log(N)),接着從 A 遍歷到 B 即可，論速度的話，基本上可以説是最快的了。但是當我們需要更新的時候，需要進行的操作就很多了。如果需要插入一條數據，你需要挪動數據之後的所有數據，浪費性能。所以總結來説，只有不怎麼變化的數據適合有序數組結構的索引。</p><ul><li>缺點：insert 新數據的時候，需要改變後續所有數據，成本略高。</li><li>優點：查詢速度很快，理論最大值。</li><li>場景：歸檔查詢，日誌查詢等極少變化的</li><li>總結：就是順序排的數組</li></ul><span id="OSC_h3_5"></span><h3>2.3 二叉搜索樹</h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">基本原則是樹的左節點都小於父節點，右節點都大於父節點</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://img1.jcloudcs.com/developer.jdcloud.com/d7db16ff-ef8f-43d1-976f-3be199a8a17520220518151308.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">這裏我們就能看出來，二叉搜索樹的查詢效率原則上是 O(log(N))，為了保證是平衡二叉樹，更新效率也是 O(log(N))。但是數據很多的情況樹的高度會達到很高，過多次訪問磁盤，是不可取的。並且極端情況下，樹退化成鏈表，查詢的複雜度會被拉成 O(n)。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">進化成多叉樹，也就是多個子節點的時候，會大大的減少樹的高度，降低訪問磁盤。</p><ul><li>缺點：數據量大的時候，樹會過高，導致多次訪問磁盤</li><li>優點：進化成多叉樹，會降低樹高，訪問磁盤次數。</li><li>場景：適用很多場景</li><li>總結：左小右大的樹</li></ul><span id="OSC_h3_6"></span><h3>2.4 B 樹</h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">在每個節點存儲多個元素，在每個節點儘可能多的存儲數據。每個節點可以存儲 1000 個索引（16k/16=1000），這樣就將二叉樹改造成了多叉樹，通過增加樹的叉樹，將樹從高瘦變為矮胖。構建 1 百萬條數據，樹的高度只需要 2 層就可以（1000*1000=1 百萬），也就是説只需要 2 次磁盤 IO 就可以查詢到數據。磁盤 IO 次數變少了，查詢數據的效率也就提高了。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">這種數據結構我們稱為 B 樹，B 樹是一種多叉平衡查找樹</p><span id="OSC_h3_7"></span><h3>2.5 B+樹</h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">B+樹和 B 樹最主要的區別在於非葉子節點是否存儲數據的問題。</p><ul><li>B 樹：非葉子節點和葉子節點都會存儲數據。</li><li>B+樹：只有葉子節點才會存儲數據，非葉子節點至存儲鍵值。葉子節點之間使用雙向指針連接，最底層的葉子節點形成了一個雙向有序鏈表。</li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://img1.jcloudcs.com/developer.jdcloud.com/dae49342-5708-486d-bfc8-ef08438f97d420220518151353.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">正是因為 B+樹的葉子節點是通過鏈表連接的，所以找到下限後能很快進行區間查詢，比正常的中序遍歷快</p><span id="OSC_h1_8"></span><h1>3 索引的維護</h1><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">當你 insert 一條數據的時候，索引需要做出必要的操作來保證數據的有序型。一般自增數據直接在後面加就行了，特殊情況下如果數據加到了中間，就需要挪動後面所有的數據，這樣效率比較受影響。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">最糟糕的情況，如果當前的數據頁（頁是 mysql 存儲的最小單位）存滿了，需要申請一個新的數據頁，這個過程被稱為頁分裂。如果造成了頁分裂的話，勢必會造成性能的影響。但是 mysql 並不是無腦的數據分裂，如果你是從中間進行數據分裂的話，對於自增主鍵，會導致一半的性能浪費。mysql 會根據你的索引的類型，和追蹤插入數據的情況決定分裂的方式，一般都存在 mysql 數據頁的 head 裏面，如果是零散的插入，會從中間分裂。如果是順序插入，一般是會選擇插入點開始分裂，或者插入點往後幾行導致的。決定是否從中間分裂，還是從最後分裂。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://img1.jcloudcs.com/developer.jdcloud.com/852d73fd-8b03-4a8d-9a02-ef5fc3af0dc020220518151424.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">如果插入的是不規則的數據，沒法保證後一個值比前一個大，就會觸發上面説的分裂邏輯，最後達到下面的效果</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://img1.jcloudcs.com/developer.jdcloud.com/94e8b55f-3a09-424f-a02c-4386bcd1e00820220518151446.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">所以絕大多數情況下，我們都需要使用自增索引，除非需要業務自定義主鍵，最好能保證只有一個索引，且索引是唯一索引。這樣可以避免回表，導致查詢搜索兩棵樹。保證數據頁的有序性，可以更好的使用索引。</p><span id="OSC_h1_9"></span><h1>4 回表</h1><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">通俗的講就是，如果索引的列在 select 所需獲得的列中（因為在 mysql 中索引是根據索引列的值進行排序的，所以索引節點中存在該列中的部分值）或者根據一次索引查詢就能獲得記錄就不需要回表，如果 select 所需獲得列中有大量的非索引列，索引就需要先找到主鍵，再到表中找到相應的列的信息，這就叫回表。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">要介紹回表自然就得介紹聚集索引和非聚集索引<br> InnoDB 聚集索引的葉子節點存儲行記錄，因此， InnoDB 必須要有，且只有一個聚集索引：</p><ul><li>如果表定義了主鍵，則 PK 就是聚集索引；</li><li>如果表沒有定義主鍵，則第一個非空唯一索引（not NULL unique）列是聚集索引；</li><li>否則，InnoDB 會創建一個隱藏的 row-id 作為聚集索引；</li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://img1.jcloudcs.com/developer.jdcloud.com/4d39742a-3d3e-46ae-b8b8-4a0cfc210bea20220518151519.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">當我們使用普通索引查詢方式，則需要先搜索普通索引樹，然後得到主鍵 ID 後，再到 ID 索引樹搜索一次。因為非主鍵索引的葉子節點裏面，實際存的是主鍵的 ID。這個過程雖然用了索引，但實際上底層進行了兩次索引查詢，這個過程就稱為回表。也就是説，基於非主鍵索引的查詢需要多掃描一棵索引樹。因此，我們在應用中應該儘量使用主鍵查詢。或者有高頻請求時，合理建立聯合索引，防止回表。</p><span id="OSC_h1_10"></span><h1>5 索引覆蓋</h1><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">一句話表達的話，是隻需要在一棵索引樹上就能獲取 SQL 所需的所有列數據，無需回表，速度更快。落實到 sql 上的話，只要執行計劃裏面的輸出結果 Extra 字段為 Using index 時，能夠觸發索引覆蓋。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">常見的優化手段，就是上面提到的，將查詢的字段都建到索引裏面，至於 dba 願不願意讓你建，那就需要你們自己 battle 了。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">一般索引覆蓋適用的場景包括，全表 count 查詢優化、列查詢回表、分頁回表。高版本的 mysql 已經做了優化，當命中聯合索引的其中一個字段，另外一個是 id 的時候，會自動優化，無需回表。因為二級索引的葉子上存了 primary key，也算索引覆蓋，無需額外成本。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://img1.jcloudcs.com/developer.jdcloud.com/3de168ed-d16a-40b9-918f-5708a5afd79320220518151542.png" referrerpolicy="no-referrer"></p><span id="OSC_h1_11"></span><h1>6 最左匹配原則</h1><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">簡單來説，就是你使用 ‘xx%’的時候，符合條件的話也會使用索引。<br> 如果是聯合索引的話，我舉個例子，創建一個（a,b）的聯合索引</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://img1.jcloudcs.com/developer.jdcloud.com/2667417a-9461-42ab-9aba-a9672163013220220518151604.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">可以看到 a 的值是有順序的，1，1，2，2，3，3，而 b 的值是沒有順序的 1，2，1，4，1，2。但是我們又可發現 a 在等值的情況下，b 值又是按順序排列的，但是這種順序是相對的。這是因為 MySQL 創建聯合索引的規則是首先會對聯合索引的最左邊第一個字段排序，在第一個字段的排序基礎上，然後在對第二個字段進行排序。所以 b=2 這種查詢條件沒有辦法利用索引。舉個例子，我弄一個索引，<br> KEY<span>&nbsp;</span><code>idx_time_zone</code><span>&nbsp;</span>(<code>time_zone</code>,<code>time_string</code>) USING BTREE<br> 執行第一條 sql,全表掃描</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://img1.jcloudcs.com/developer.jdcloud.com/716156a7-d4a8-4ba3-8b26-d323c616b57120220518151840.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">執行第二條 sql，可以看到使用了索引。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://img1.jcloudcs.com/developer.jdcloud.com/7d52aa89-3d81-44d9-a0ee-d22f39b9a1bb20220518151851.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">再看兩條 sql，建立的索引是 KEY<span>&nbsp;</span><code>idx_time_zone</code><span>&nbsp;</span>(<code>time_zone</code>,<code>time_string</code>) USING BTREE</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://img1.jcloudcs.com/developer.jdcloud.com/99932f6e-53a8-4e76-a929-2d182bf661af20220518151906.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://img1.jcloudcs.com/developer.jdcloud.com/522e9e70-cd83-4e7d-a11f-06772def669720220518151913.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">按照正常邏輯來説，第二條 sql 是不符合索引字段的順序的，應該不能使用索引才對，但是實際情況卻和我們期望的不太一樣，這是為啥呢？</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">從 mysql 被 oracle 收購以後，mysql 加入了很多 oracle 以前的技術，高版本 mysql 自動優化了 where 條件的先後順序。簡單來説就是查詢優化器做了這一步操作，sql 會做預處理，那一條能更好的查詢就會使用那種規則。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">順便提一下 mysql 的查詢優化器能幫忙乾的一些事</p><span id="OSC_h3_12"></span><h3>6.1 條件轉化</h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">例如 where a=b and b=2，可以得到 a=2,條件傳遞。最後的 sql 是 a=2 and b=2 &gt; &lt; = like 都可以傳遞</p><span id="OSC_h3_13"></span><h3>6.2 無效代碼的排除</h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">例如 where 1=1 and a=2, 1=1 永遠是正確的，所以最後會優化成 a=2<br> 在比如 where 1=0 永遠是 false 的，這樣的也會被排除掉，整 sql 無效<br> 或者非空字段 where a is null ,這樣的也會被排除</p><span id="OSC_h3_14"></span><h3>6.3 提前計算</h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">包含數學運算的部分，例如 where a= 1+2 會幫你算好，where a=3</p><span id="OSC_h3_15"></span><h3>6.4 存取類型</h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">當我們評估一個條件表達式，MySQL 判斷該表達式的存取類型。下面是一些存取類型，按照從最優到最差的順序進行排列：</p><ul><li>system 系統表，並且是常量表</li><li>const 常量表</li><li>eq_ref unique/primary 索引，並且使用的是’=’進行存取</li><li>ref 索引使用’=’進行存取</li><li>ref_or_null 索引使用’=’進行存取，並且有可能為 NULL</li><li>range 索引使用 BETWEEN、IN、&gt;=、LIKE 等進行存取</li><li>index 索引全掃描</li><li>ALL 表全掃描</li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">經常看執行計劃的，一眼就能看出來這是啥意思，舉個例子</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">where index_col=2 and normal_col =3 這裏就會選用 index_col=2 會作為驅動項。驅動項的意思是指一個 sql 選定他的執行計劃的時候，可能有多條執行路徑，一個是全表掃描，再過濾是否符合索引字段及非索引字段的值。另一種是通過索引字段，鍵值=2 找到對應的索引樹，過濾後的結果，再比較是否符合非索引字段的值。一般情況下，走索引都比全表掃描需要讀取磁盤的次數少，所以稱它為更好的執行路徑，也就是通過索引字段，作為其驅動表達式</p><span id="OSC_h3_16"></span><h3>6.5 範圍存取</h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">簡單來説，a in(1,2,3) 和 a=1 or a=2 or a=3 是一樣的，between 1 and 2 和 a&gt;1 and a&lt;2 也是一樣的， 無需可以優化。</p><span id="OSC_h3_17"></span><h3>6.6 索引存取類型</h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">避免使用相同前綴的索引，也就是一個字段不要在多個索引上有相同的前綴。比如一個字段已經建立了唯一索引，這個時候如果再給他建立一個聯合索引，會導致優化器並不知道你要使用哪個索引。或者你建了前綴相同的一個單索引，一個聯合索引，就算你寫上了條件，也不一定能用上聯合索引。當然，可以 force，這就另説了。</p><span id="OSC_h3_18"></span><h3>6.7 轉換</h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">簡單的表達式可以進行轉換，比如 where -2 = a 會自動變成 where a= -2 ，但是如果牽扯到數學運算，就不能轉換了，比如 where 2= -a 這時候不會自動轉成 where a =-2.</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://img1.jcloudcs.com/developer.jdcloud.com/b6540c88-243d-482f-99c4-b9450e5d91b820220518152102.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">第二條 sql 就可以使用索引</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://img1.jcloudcs.com/developer.jdcloud.com/6cd2d32d-d033-4cc0-8913-d7d7ee152df420220518152115.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">所以，我們在開發的過程中，需要注意 sql 的寫法，自覺寫成 where a=-2</p><span id="OSC_h3_19"></span><h3>6.8 and、union、order by、group by 等</h3><p>1）and</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">and 條件後，如果都沒索引，掃描全表。有一個存取類型更好，見 5.4 ,會使用存儲類型更好的索引，如果都一樣，哪個索引先創建，用哪個。</p><p>2）union</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">union 每條語句單獨優化</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://img1.jcloudcs.com/developer.jdcloud.com/b9614405-17ae-4603-ac8e-829d32ce431e20220518152156.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">這裏就會分別執行兩條 sql，用到索引，再合併結果集</p><span id="OSC_h4_20"></span><h4>3）order by</h4><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">order by 會過濾無效排序，比如一個字段本來就有索引</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://img1.jcloudcs.com/developer.jdcloud.com/b722a940-cc4f-452d-ac78-de4b2874a4a920220518152333.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">第二條 sql 和第一條的查詢效果是一樣的</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://img1.jcloudcs.com/developer.jdcloud.com/e2e6d9a2-3d82-460c-b745-dfcfc150684120220518152355.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">所以，寫 sql 的時候，不要寫無用排序，比如 order by ‘xxx’ 這樣沒有意義。</p><p>4）group by</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">簡單來説 group by 的字段，有索引會走索引，group by a order by a 這裏的 order by 等於沒寫，結果集已經是排序完畢的了，參考 6.8-3 order by<br> select distinct col_a from table a 等價於 select col_a from a group by col_a</p><span id="OSC_h1_21"></span><h1>7 索引下推</h1><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">主要的核心點就在於把數據篩選的過程放在了存儲引擎層去處理，而不是像之前一樣放到 Server 層去做過濾。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">如果在一張表上，name 和 age 都建立索引，查詢條件為 where name like ‘xx%’ and age=11,在低版本的 mysql(5.6 以下) 的根據索引的最左匹配原則，可以得到放棄了 age，只根據 name 過濾數據。根據 name 拿到所有的 id 之後，再根據 id 回表。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">高版本 mysql 裏，沒有忽略 age 這個屬性，帶着 age 屬性過濾，直接過濾掉了 age 為 11 的數據，假設不根據 age 過濾的數據為 10 條，過濾後只剩 3 條，就少了 7 次回表。減少了 io 會大量減少性能消耗</p><span id="OSC_h1_22"></span><h1>8 小表驅動大表</h1><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">小表驅動大表，也是我們聽慣了的話了，其含義主要是指小表的數據集驅動大表的數據集，減少連接次數。打個比方:</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">表 A 有 1w 數據，表 B 有 100w 數據，如果 A 表作為驅動表，處於循環的外層，那麼只需要 1w 次的連接即可。如果 B 表在外層，那麼則需要循環 100w 次。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">下面我們實際測試看看，準備環境 mysql 5.7+</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://img1.jcloudcs.com/developer.jdcloud.com/332fc02e-0855-4d5c-9640-3729fb97671f20220518152438.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">準備兩張表，一張表 ib_asn_d 數據 9175， 一張表 bs_itembase_ext_attr 數據 1584115，都在商品編碼字段上有索引。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">首先小表驅動大表</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://img1.jcloudcs.com/developer.jdcloud.com/8ae8c5a2-fc81-404e-939c-4c5a846038aa20220518152459.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">多次反覆測試，執行時間大概 7 秒。<br> 接下來看看大表驅動小表。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://img1.jcloudcs.com/developer.jdcloud.com/84f43596-24b7-426a-a95e-5de71817c7c120220518152511.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">將近 300 秒，不是一個量級的。<br> 接下來分別分析執行計劃，執行計劃裏第一條就是驅動表。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://img1.jcloudcs.com/developer.jdcloud.com/4db8a038-c193-4a8a-bf50-90fbf633d61320220518152521.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">小表驅動大表，大表用了索引，小表全表掃描，只掃描 8000 多行</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://img1.jcloudcs.com/developer.jdcloud.com/c49f2138-2027-4b77-8748-0e0fc160950c20220518152612.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">大表驅動小表，大表全表掃描，需要掃描 147w 行。<br> 經過多次測試得出了結論:</p><ol><li>當使用 left join 時，左表是驅動表，右表是被驅動表 ;</li><li>當使用 right join 時，右表是驅動表，左表是被驅動表 ;</li><li>當使用 inner join 時，mysql 會選擇數據量比較小的表作為驅動表，大表作為被驅動表 ;</li><li>驅動表索引不生效，非驅動表索引生效</li></ol><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">保證小表是驅動表很重要。</p><span id="OSC_h1_23"></span><h1>9 總結</h1><ol><li>覆蓋索引：如果查詢條件使用的是普通索引（或是聯合索引的最左原則字段），查詢結果是聯合索引的字段或是主鍵，不用回表操作，直接返回結果，減少 IO 磁盤讀寫讀取整行數據，所以高頻字段建立聯合索引是很有必要的</li><li>最左前綴：聯合索引的最左 N 個字段，也可以是字符串索引的最左 M 個字符。建立索引的時候，注意左前綴不要重複，避免查詢優化器無法判定如何使用索引</li><li>索引下推：name like ‘hello%’and age &gt;10 檢索，MySQL 5.6 版本之前，會對匹配的數據進行回表查詢。5.6 版本後，會先過濾掉 age&lt;10 的數據，再進行回表查詢，減少回表率，提升檢索速度</li></ol><blockquote><p>作者：京東物流&nbsp;吳思維&nbsp;<br> 來源：京東雲開發者社區，轉載請註明來源</p></blockquote></div>
                                    ]]>
            </description>
            <pubDate>Thu, 14 Dec 2023 01:47:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/4090830/blog/10320986</guid>
            <link>https://my.oschina.net/u/4090830/blog/10320986</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[ChatGPT 作為非人類入選 Nature 2023 年度十大科學人物]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>頂級科學期刊《Nature》公佈 2023 年在科學領域產生重大影響的十位人物。<span style="font-family:-apple-system,BlinkMacSystemFont,&quot;Apple Color Emoji&quot;,&quot;Segoe UI Emoji&quot;,&quot;Segoe UI Symbol&quot;,&quot;Segoe UI&quot;,&quot;PingFang SC&quot;,&quot;Hiragino Sans GB&quot;,&quot;Microsoft YaHei&quot;,&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif">讓人驚訝的是，今年還有一位</span><strong style="font-family:-apple-system,BlinkMacSystemFont,&quot;Apple Color Emoji&quot;,&quot;Segoe UI Emoji&quot;,&quot;Segoe UI Symbol&quot;,&quot;Segoe UI&quot;,&quot;PingFang SC&quot;,&quot;Hiragino Sans GB&quot;,&quot;Microsoft YaHei&quot;,&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif">非人類入選</strong><span style="font-family:-apple-system,BlinkMacSystemFont,&quot;Apple Color Emoji&quot;,&quot;Segoe UI Emoji&quot;,&quot;Segoe UI Symbol&quot;,&quot;Segoe UI&quot;,&quot;PingFang SC&quot;,&quot;Hiragino Sans GB&quot;,&quot;Microsoft YaHei&quot;,&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif"> ，那就是過去一年出盡風頭的聊天機器人：<strong>ChatGPT</strong>。</span></p><blockquote><p><img src="https://oscimg.oschina.net/oscnet/up-6233f0c596f17c60e86a39faa3edff571b7.png" referrerpolicy="no-referrer"></p><p>來源：<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.nature.com%2Farticles%2Fd41586-023-03930-6" target="_blank">https://www.nature.com/articles/d41586-023-03930-6</a></u></p></blockquote><p>《自然》特寫部主編 Richard Monastersky 表示： 「<strong>雖然這個工具不算人物，也不完全滿足《自然》十大人物的評選條件，但我們將其破例納入榜單，從而承認生成式 AI 給科學發展和進步帶來的巨大改變。</strong>」</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-3ed50fc4e10684a58c8fbb439cb06452944.png" referrerpolicy="no-referrer"></p><p>選 ChatGPT 或許是為了「節目效果」，但「真正的 ChatGPT 之父」——<span style="font-family:-apple-system,BlinkMacSystemFont,&quot;Apple Color Emoji&quot;,&quot;Segoe UI Emoji&quot;,&quot;Segoe UI Symbol&quot;,&quot;Segoe UI&quot;,&quot;PingFang SC&quot;,&quot;Hiragino Sans GB&quot;,&quot;Microsoft YaHei&quot;,&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif">OpenAI 首席科學家 Ilya Sutskever 入選可謂是當之無愧，《自然》雜誌給出的上榜理由是「<strong>ChatGPT 和其他正在改變社會的人工智能系統的先驅</strong>」。</span></p><p><img src="https://oscimg.oschina.net/oscnet/up-b29f90b5017756aeba69d51325616e264cf.png" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 13 Dec 2023 10:16:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271077</guid>
            <link>https://www.oschina.net/news/271077</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
    </channel>
</rss>
