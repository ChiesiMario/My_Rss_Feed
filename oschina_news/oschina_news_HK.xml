<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[開源中國-最新資訊]]>
        </title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="https://rsshub.app/oschina/news" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[開源中國-最新資訊 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Tue, 26 Sep 2023 23:30:50 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[私域管理平台，LinkWeChat V4.9.4 版本發佈]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="background-color:#ffffff; color:#333333">LinkWeChat 是國內首個基於企業微信的開源 SCRM，在集成了企微強大的開放能力的基礎上，進一步升級拓展靈活高效的客户運營能力及多元化精準營銷能力，讓客户與企業之間建立強鏈接，幫助企業提高客户運營效率，強化營銷能力，拓展盈利空間，是企業私域流量管理與營銷的綜合解決方案，目前已經受到企業微信的官方推薦和國家級木蘭開源社區進行孵化，同時也是國家工信部重點扶持項目，同時也獲得 2022 年中國開源創新大賽二等獎。</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>LinkWeChat v4.9.4 主要的升級內容如下：</strong></p><p><span style="background-color:#ffffff; color:#40485b">1.客户列表新增黑名單功能。</span></p><p><img height="1296" src="https://oscimg.oschina.net/oscnet/up-58b99e69049a37367fe92947f265da738f6.png" width="2832" referrerpolicy="no-referrer"></p><p><span style="background-color:#ffffff; color:#40485b">2.軌跡素材新增標籤功能，可以預覽後自動給客户打標籤。</span></p><p><img height="1298" src="https://oscimg.oschina.net/oscnet/up-2db4e1e0183bfde7e1c6ee706fd8e53dc27.png" width="2832" referrerpolicy="no-referrer"></p><p><span style="background-color:#ffffff; color:#40485b">3.客户列表等統計功能相關 bug 修復。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 26 Sep 2023 10:08:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/259607/linkwechat-4-9-4-released</guid>
            <link>https://www.oschina.net/news/259607/linkwechat-4-9-4-released</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[nature v0.4.0-beta 發佈，靜態編譯強類型語言]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>nature v0.4.0-beta 已發佈。</p><p><strong>新增</strong></p><ol><li>編譯時錯誤優化，顯示文件名和行號，類型錯誤顯示類型原始標識</li><li>運行時 error 提供堆棧追蹤</li><li>多行註釋<code>/****/</code>支持</li><li>import 支持不帶前綴的導入方式<code>import utils as *</code></li><li>小型測試用例<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fweiwenhao%2Fparker" target="_blank">parker</a></li><li>參數解構功能支持，示例<code>call(...vec)</code></li><li>泛型類型支持遞歸<code>type numbert = gen intergert|flotert</code></li><li>二元運算符<code>||``&amp;&amp;</code>支持</li><li>包管理 import dir 支持, 此時會自動查找 dir 下的 main.n</li><li>包管理 import xxx_temp 支持，能夠定義 temp 文件與靜態庫進行交互</li><li>nature struct 調整為與 C 語言同構，能夠直接將 nature struct 傳遞給 c 語言</li><li>數據類型<code>arr&lt;T,len&gt;</code>支持，其在 stack 中進行分配，和 C 語言中<code>T ident[len]</code>同構</li><li>new 語法支持，nature struct 默認為 stack 分配，可以通過<code>ptr&lt;person&gt; p = new person</code>得到一個 heap 分配的 p</li><li>as 後的類型支持約束，如<code>var s = {} as {u8}</code>聲明瞭一個 set 類型將會被約束為<code>{u8}</code>類型，等同於<code>{u8} s = {}</code></li><li>包管理支持聲明 links 靜態庫鏈接，和 temps 模板聲明</li><li>新增標準庫字符串庫<code>import strings</code></li><li>為了更好的和 C 語言進行交互，新增類型<code>cptr</code>和<code>cptr&lt;T&gt;</code></li><li>增加內置語法關鍵字 sizeof 用來計算類型的 size，使用示例<code>int s = sizeof(person)</code></li><li>新增標準庫 fmt/os/path/strings/time</li><li>新增模板文件 (用於和 C 語言交互) builtin_temp(默認 import)，dirent_temp, libc_temp, strings_temp, syscall_temp</li></ol><p><strong>調整</strong></p><ol><li>type param 只能在全局進行定義</li><li>全局變量支持類型推導</li><li>刪除 set 函數，通過 as 約束聲明一個空的 set</li><li>list 類型定義調整為 vec, 支持使用 vec 原始結構體聲明並指定長度，示例<code>var terms = vec&lt;u8&gt;{len=12,cap=24}</code></li><li>string 類型調整為與 vec 同構，支持通過<code>str[0]</code>的方式訪問以及賦值，並支持 for in 遍歷</li><li>vec 類型方法 list.len() 調整為類型屬性，list.len, 並支持類型方法 slice/concat 等類型函數</li><li>for 迭代表達式錯誤與 break 和 continue 無法重複聲明錯誤</li><li>泛型 type i = gen int|int64 基本類型一致時重複生成</li><li>寄存器分配時 interval_add_range 添加 range 錯誤</li><li>set.contains() 計算 hash slot 錯誤</li><li>struct 中定義 fn 異常</li><li>鏈接器 elf rela addend 計算異常，addend = next_inst_offset - current_inst_rel offset</li><li>ssa rename 異常，部分線性 var def 未進行 rename</li><li>if 多行表達式 parser 解析異常</li><li>自動 GC 觸發時間異常，調整 GC 觸發時間點為 user mode</li><li>malloc 分配重複的內存區域時，由於沒有清空該區域導致 GC 異常，malloc 分配區域主動進行清空處理</li><li>import 優先級異常，local ident 可以覆蓋 import ident</li><li>修復 gcc11 下全局變量重複定義錯誤 #16</li></ol><p>詳細更新內容見<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnature-lang.org%2Fzh-Hans%2Fdocs%2Fprologue%2Frelease-notes" target="_blank">發行説明</a>。</p><hr><p>nature 是一款靜態編譯強類型語言，具有以下特徵：</p><ul><li>null 安全、泛型和聯合類型的類型系統</li><li>靜態交叉編譯，允許為目標機器生成可執行文件，無需依賴任何第三方組件</li><li>帶有增量垃圾回收的支持，支持自動垃圾回收（手動垃圾回收仍在設計中）</li><li>內置數據結構，如列表、映射、集合和元組</li><li>包和模塊管理</li><li>函數標籤（正在設計中）、閉包、錯誤處理和協程</li><li>SSA、線性掃描寄存器分配、反射機制、彙編器和鏈接器</li></ul><p><strong>代碼示例</strong></p><ul><li>錯誤處理</li></ul><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-d2b6588e6447b0758c61f7875e5909453b9.png" referrerpolicy="no-referrer"></p><ul><li>泛型</li></ul><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-800fe208102456a527ae7862be080914634.png" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 26 Sep 2023 03:06:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/259538/nature-0-4-0-beta</guid>
            <link>https://www.oschina.net/news/259538/nature-0-4-0-beta</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[高效能軟件工程師的 7 個習慣]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>管理學大師史蒂芬·柯維代表作《高效能人士的 7 個習慣》是商業書籍的經典之作，產生了積極而深遠的影響。如果我們把《高效能人士的 7 個習慣》的理念應用到軟件工程師身上，又會怎麼樣呢？</p><p>資深軟件工程師 Luthfur Chowdhury 根據職業生涯中見過的優秀軟件工程師的常見習慣，整理出以下清單——</p><p><strong>7 Habits of Highly Effective Software Engineers（高效能軟件工程師的 7 個習慣）：</strong></p><p><strong>1. 快速將想法打造出原型，進行概念驗證</strong></p><p>許多想法和新技術概念聽起來很棒，但現實往往會有所不同。</p><p>為了更好地瞭解想法的可行性，優秀的工程師會更快地投入原型設計和概念驗證。原型設計是一個很好的學習和探索工具。你會發現自己想到的方法是否可行，是否真正解決了你原來的問題，或者是否存在你之前沒有想到的限制。</p><p><strong>2. 有效評估工作量</strong></p><p>工作量評估會影響產品路線圖、技術方法和交付給終端用户的價值。</p><p>擁有良好評估能力的工程師的團隊會給他們的工作帶來信心。經常延期的團隊會產生壓力和不確定感。優秀的工程師通過跟蹤他們的估計和工作實際花費時間之間的差異來更好地做到這一點。</p><p><strong>3. 快速且及時地 review 代碼</strong></p><p>審查 PR 的速度越快，代碼改進的速度就越快，並且投入生產的速度也就越快。快速的代碼 review 可以向開發者提供反饋，同時代碼和相關概念仍然記憶猶新。</p><p><strong>4. 主動記錄代碼、設計和流程，形成文檔</strong></p><p>優秀的文檔將幫助未來的工程師維護和構建工作。</p><p>放棄現有系統的一個關鍵原因通常是周圍沒有人知道它是如何運行的，或者不瞭解技術決策背後的背景。優秀的工程師通過記錄他們的工作來確保他們留下堅實的基礎和遺產。</p><p><strong>5. 坦誠地參與技術討論</strong></p><p>構建出色的軟件需要一個對技術想法持開放和坦誠態度的團隊。</p><p>每個人都應該坦誠説出自己的想法，並營造一種邀請其他人也這樣做的氛圍。提出一個好主意並繼續重複它以使其變得更好。</p><p>如果看到了想法中的缺陷，就公開地指出來，並解釋你的理由。</p><p><strong>6. 完成「狗屎」工作</strong></p><p>只有完成工作才能取得成果。你需要把事情做好並交付生產。當一個項目接近完成時，我們都有過能量減弱的經歷，當時間不夠，終點線仍然感覺很遙遠的時候。這就是需要集中注意力、縮小功能範圍、保持強度水平並推動項目完成的地方。把事情做好是偉大工程師所體現的一種技能和習慣。</p><p><strong>7. 保持好奇心</strong></p><p>偉大的工程師往往具有天生的好奇心。他們不止對解決長期業務問題的新技術、新技術方法感興趣。因為他們的好奇心不僅限於技術，還會經常進一步瞭解他們所做工作的用户和業務背景，以及他們可以產生的影響。</p><p>原文：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmakingsmallercircles.com%2Farticles%2F7-habits-of-highly-effective-software-engineers%2F" target="_blank">https://makingsmallercircles.com/</a></p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 24 Sep 2023 09:42:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/259604/7-habits-of-highly-effective-software-engineers</guid>
            <link>https://www.oschina.net/news/259604/7-habits-of-highly-effective-software-engineers</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[雲原生週刊：K8s 的 13 個最佳開源監控工具]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h2>開源項目推薦</h2><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdevtron-labs%2Fsilver-surfer" target="_blank">Silver Surfer</a></h3><p>該項目旨在檢查 Kubernetes 對象的 API 版本兼容性，併為其提供遷移路徑，以便為集羣升級做好準備。</p><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Factions%2Factions-runner-controller" target="_blank">Actions Runner Controller</a></h3><p>Actions Runner Controller (ARC) 是一個 Kubernetes 操作器，可為 GitHub Actions 編排和擴展自託管運行器。</p><p>使用 ARC，您可以創建運行程序規模集，該規模集可根據存儲庫、組織或企業中運行的工作流數量自動擴展。由於受控運行程序可能是短暫的並且基於容器，因此新的運行程序實例可以快速、乾淨地擴展或縮減。</p><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fhelm%2Fhelm-mapkubeapis" target="_blank">helm-mapkubeapis</a></h3><p>這是一個 Helm 插件，可將版本中廢棄或移除的 Kubernetes API 映射到受支持的 API 中。</p><h2>文章推薦</h2><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmedium.com%2F%40omers1414%2Fmastering-argocd-management-advanced-gitops-techniques-for-flexibility-and-scale-5a1375958482" target="_blank">掌握 ArgoCD 管理：實現靈活性和規模的高級 GitOps 技術</a></h3><p>這篇文章深入探討瞭如何利用 ArgoCD 的潛力進行高級 GitOps 管理，通過 ApplicationSet Helm Chart 實現靈活的部署，以及通過擴展 ArgoCD 實例實現可擴展性和多租户支持的未來發展方向。</p><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flogz.io%2Fblog%2Fopen-source-monitoring-tools-for-kubernetes%2F" target="_blank">Kubernetes 的 13 個最佳開源監控工具</a></h3><p>這篇文章提供了關於 Kubernetes 的 13 個開源監控工具的概述，並介紹了每個工具的優點和缺點，以幫助讀者選擇適合其需求的工具。</p><h2>雲原生動態</h2><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.linuxfoundation.org%2Fpress%2Fannouncing-opentofu" target="_blank">Linux 基金會推出 OpenTofu</a></h3><p>Linux 基金會宣佈成立 OpenTofu，這是一個開源替代方案，用於 Terraform 廣泛使用的基礎設施即代碼工具。OpenTofu 以前被稱為 OpenTF，是對 Terraform 最近宣佈的許可證變更（從 Mozilla Public License v2.0（MPLv2）變更為 Business Source License v1.1）的開放和社區驅動的迴應，為每個人提供了一個可靠的開源替代方案，採用中立的治理模型。</p><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FgTzDuuX3ZdMjPrJ1qka2tw" target="_blank">Fluent Operator 2.5.0 發佈：新增多個插件</a></h3><p>Fluent Operator v2.5.0 新增 11 個 features， 其中 Fluent Bit 新增支持 7 個插件， Fluentd 新增支持 1 個插件。此外，對 Fluent Operator 也進行了增強，調整了默認參數，以便適應更多場景，並對 helm chart 進行了優化，用户可以更方便的進行安裝，並修復了部分 bug。</p><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.infoq.com%2Fnews%2F2023%2F09%2Fhashicorp-vault-kubernetes%2F%3FtopicPageSponsorship%3D6457dc55-9c2d-4b4a-a65a-641549fdbe17" target="_blank">適用於 Kubernetes 的 HashiCorp Vault Secrets Operator 正式推出</a></h3><p>HashiCorp 已將適用於 Kubernetes 的 HashiCorp Vault Secrets Operator 正式投入使用。該 Kubernetes Operator 將 Vault 的 secret 緩存相結合。操作員還處理 Secrets 輪換，並擁有用於各種特定於 Secrets 的自定義資源的控制器。</p><p>Vault Secrets Operators 監視其自定義資源定義 (CRD) 集的更改。每個 CRD 都允許操作員將 Vault Secret 同步到 Kubernetes Secret。該運算符將源 Vault secret 直接寫入目標 Kubernetes secret。這可確保對源所做的所有更改都能正確複製，並使用 Kubernetes 自定義資源來管理服務使用的 secret。應用程序能夠以 Kubernetes 原生方式從目的地使用 secret。</p><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdevclass.com%2F2023%2F09%2F21%2Fharness-introduces-gitness-open-source-git-platform%2F" target="_blank">Harness 推出開源 Git 平台 Gitness</a></h3><p>DevOps 公司 Harness 發佈了 Gitness，這是一個新的開源 Git 平台，據稱這是「近十年來開源 Git 平台的第一個重要版本」。</p><p>Gitness 有兩個主要組件，自託管的 Git 存儲庫和基於 Drone 的管道。</p><p>Harness 提供了所謂的軟件交付平台，該平台可以自託管、安裝在 AWS 上或由 Harness 託管的雲上，提供各種產品，包括持續交付、功能標記、錯誤跟蹤和混沌工程。該公司還提供多種可免費使用的開源或可用源代碼產品，但由於許可限制，並非所有產品都有資格成為真正的開源產品。</p><blockquote><p>本文由博客一文多發平台 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopenwrite.cn%3Ffrom%3Darticle_bottom" target="_blank">OpenWrite</a> 發佈！</p></blockquote></div>
                                    ]]>
            </description>
            <pubDate>Sun, 24 Sep 2023 09:20:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/4197945/blog/10114425</guid>
            <link>https://my.oschina.net/u/4197945/blog/10114425</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[低代碼引擎 —— TinyEngine]]>
            </title>
            <description>
                <![CDATA[<p align="center"><a href="https://gitee.com/link?target=https%3A%2F%2Fopentiny.design%2Ftiny-engine" target="_blank" rel="noopener noreferrer"><img alt="OpenTiny Logo" src="https://gitee.com/opentiny/tiny-engine/raw/develop/logo.svg" height="100" referrerpolicy="no-referrer"></a></p><p align="center">TinyEngine enables developers to customize low-code platforms, build low-bit platforms online in real time, and support secondary development or integration of low-bit platform capabilities.</p><p>English | <a href="https://gitee.com/opentiny/tiny-engine/blob/develop/README.zh-CN.md">簡體中文</a></p><p>🌈 Features:</p><ul><li>Cross-end cross-frame front-end components</li><li>Supports online real-time construction, secondary development, or being integrated.</li><li>Directly generate deployable source code without engine support.</li><li>Allows access to third-party components and customized extension plug-ins.</li><li>Supports high-code and low-code, and hybrid development and deployment of applications.</li><li>The platform accesses AI big model capabilities to help developers build applications.</li></ul><h2><a id="user-content-development" class="anchor" href="https://gitee.com/opentiny/tiny-engine#development"></a>Development</h2><h3><a id="user-content-dependencies-required-for-installation" class="anchor" href="https://gitee.com/opentiny/tiny-engine#dependencies-required-for-installation"></a>Dependencies required for installation</h3><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="nv">$ </span>npm <span class="nb">install</span></span><span id="LC2" class="line"><span class="nv">$ </span><span class="nb">pushd </span>mockServer</span><span id="LC3" class="line"><span class="nv">$ </span>npm <span class="nb">install</span></span><span id="LC4" class="line"><span class="nv">$ </span><span class="nb">popd</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><h3><a id="user-content-local-development-start-the-local-mock-server-and-use-the-mock-data-of-the-local-mock-server" class="anchor" href="https://gitee.com/opentiny/tiny-engine#local-development-start-the-local-mock-server-and-use-the-mock-data-of-the-local-mock-server"></a>Local development: Start the local mock server and use the mock data of the local mock server.</h3><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="nv">$ </span>npm run serve</span><span id="LC2" class="line"></span><span id="LC3" class="line"><span class="c"># start another terminal</span></span><span id="LC4" class="line"><span class="nv">$ </span><span class="nb">cd </span>mockServer</span><span id="LC5" class="line"><span class="nv">$ </span>npm run dev</span></pre><div class="markdown-code-block-copy-btn"></div></div></div><p>Open a browser: <code>http://localhost:8080/?type=app&amp;id=918&amp;tenant=1&amp;pageid=NTJ4MjvqoVj8OVsc</code><code>url search</code> Parameters:</p><ul><li><code>type=app</code> Application type</li><li><code>id=xxx</code> Application ID</li><li><code>tenant=xxx</code> Organization ID</li><li><code>pagdId=xxx</code> Page ID</li></ul><h2><a id="user-content-build" class="anchor" href="https://gitee.com/opentiny/tiny-engine#build"></a>Build</h2><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="c"># Build all plug-ins first</span></span><span id="LC2" class="line">npm run build:plugin</span><span id="LC3" class="line"></span><span id="LC4" class="line"><span class="c"># Build Designer</span></span><span id="LC5" class="line">npm run build:alpha or build:prod</span><span id="LC6" class="line"></span><span id="LC7" class="line"><span class="c"># Release all plug-ins.</span></span><span id="LC8" class="line">npm run publish:plugin</span><span id="LC9" class="line"></span><span id="LC10" class="line"><span class="c"># Publish the designer.</span></span><span id="LC11" class="line">npm run publish:core</span><span id="LC12" class="line"></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><h2><a id="user-content-common-packet-sending-process" class="anchor" href="https://gitee.com/opentiny/tiny-engine#common-packet-sending-process"></a>Common Packet Sending Process</h2><ol><li>Release the plug-in.</li></ol><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line">npm run build:plugin <span class="o">&amp;&amp;</span> npm run publish:plugin</span></pre><div class="markdown-code-block-copy-btn"></div></div></div><ol start="2"><li>Publish Designer</li></ol><p>a) Change the package name and version number.
Package name: @opentiny/tinybuilder-design-core-test
Version number: The last digit plus 1 each time. For example:</p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line">"name": "@opentiny/tinybuilder-design-core-test",</span><span id="LC2" class="line">"version": "1.0.87",</span></pre><div class="markdown-code-block-copy-btn"></div></div></div><p>b) npm publish</p><h2><a id="user-content--participation-and-contribution" class="anchor" href="https://gitee.com/opentiny/tiny-engine#-participation-and-contribution"></a>🤝 Participation and Contribution</h2><p>If you are interested in our open source project, please join us! 🎉</p><p>Please read the <a href="https://gitee.com/opentiny/tiny-engine/blob/develop/CONTRIBUTING.md">Contribution Guide</a> before participating in the contribution.</p><ul><li>Add official assistant WeChat opentiny-official and join the technical exchange group</li><li>Join the mailing list <a href="mailto:opentiny@googlegroups.com">opentiny@googlegroups.com</a></li></ul><h2><a id="user-content-license" class="anchor" href="https://gitee.com/opentiny/tiny-engine#license"></a>License</h2><p><a href="https://gitee.com/opentiny/tiny-engine/blob/develop/LICENSE">MIT</a></p>]]>
            </description>
            <pubDate>Sun, 24 Sep 2023 08:19:00 GMT</pubDate>
            <guid isPermaLink="false">https://gitee.com/opentiny/tiny-engine</guid>
            <link>https://gitee.com/opentiny/tiny-engine</link>
        </item>
        <item>
            <title>
                <![CDATA[ABP Framework — 基於 ASP.NET 的 Web 應用框架]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>ABP Framework 是基於 ASP.NET Core 用於創建現代 Web 應用程序的完整架構和基礎設施，遵循最佳實踐和約定。</p><p>ABP Framework 提供了完整的<span style="background-color:#ffffff; color:#212529">全棧應用程序基礎設施，主要功能</span></p><ul><li>多個 UI 選項</li><li>多個數據庫提供程序</li><li>ABP CLI</li><li>模塊化</li><li>多租户</li><li>BOOTSTRAP 標籤助手</li><li>動態表單</li><li>認證與授權</li><li>虛擬文件系統</li><li>DOMAIN DRIVEN DESIGN 基礎設施</li><li>自動 REST APIS</li><li>動態客户端代理</li><li>具有 RABBITMQ 集成的分佈式事件總線</li><li>測試基礎設施</li><li>……</li></ul><p><strong>架構</strong></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-2ab8ea6f22e02f599298ab0c79a0d3b25b4.png" referrerpolicy="no-referrer"></p><p>&nbsp;</p></div>
                                                                ]]>
            </description>
            <pubDate>Sun, 24 Sep 2023 07:12:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/p/abp-framework</guid>
            <link>https://www.oschina.net/p/abp-framework</link>
        </item>
        <item>
            <title>
                <![CDATA[Apache OpenOffice 是事實上的「無人維護」項目]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>《<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frocket9labs.com%2Fpost%2Fits-time-to-let-go-apache-software-foundation%2F" target="_blank">Apache Open Office as an unmaintained project?</a>》這篇文章今天在 Hacker News 引起了<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnews.ycombinator.com%2Fitem%3Fid%3D37645160" target="_blank">廣泛討論</a>。作者指出，Apache OpenOffice 最後一個大版本更新是在 2014 年 (<a href="https://www.oschina.net/news/51324/apache-openoffice-4-1-0-final" target="news">Apache OpenOffice 4.1.0</a>)，後面一直只發布小版本更新，目前最新版本是今年 2 月發佈的 4.1.14。</p><p>考慮到這些發佈歷史，是否可以將 Apache OpenOffice 視為一個無人維護的項目？</p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnews.ycombinator.com%2Fitem%3Fid%3D37645160" target="_blank"><img height="152" src="https://static.oschina.net/uploads/space/2023/0926/142540_9sYB_2720166.png" width="939" referrerpolicy="no-referrer"></a></p><p>文章簡單地回顧了 Apache OpenOffice 的歷史：</p><ul><li>1985 年，Star Division 公司發佈私有辦公軟件套裝 StarOffice</li><li>2000 年，Sun Microsystems 公開 StarOffice 源代碼，隨後 OpenOffice.org 誕生</li><li>2010 年，LibreOffice 基於 OpenOffice.org 源代碼發佈首個版本</li><li>2010 年，Oracle 收購 Sun Microsystems 之後將 OpenOffice.org 相關商標和代碼捐贈給了 Apache 軟件基金會，創造了 Apache Open Office</li><li>在 2012 年的第一個版本 3.4 和 2014 年的最後一個主要版本 4.1 之間，Apache Open Office 集成了 IBM Lotus Symphony，在捐贈給 Apache 軟件基金會後，添加了重新設計的側邊欄和一些其他新功能</li><li>自 2014 年以來……Apache OpenOffice 的更新主要是：錯誤修復、字典更新、錯誤修復、字典更新、空格「修復」、字典更新、字典更新……</li><li>相比之下，LibreOffice 在 OpenOffice.org 源代碼基礎上活躍開發至今，Apache OpenOffice 在 4.1 之後再也沒有發佈過大版本更新</li></ul><p>此外，<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fopenoffice%2Fcommits%2Ftrunk" target="_blank">從 OpenOffice 的提交記錄來看</a>，大多數 commit 都沒有意義。在許多情況下，這些 commit 甚至不會對程序進行任何更改，因為它們只是改動源代碼周圍的空白區域。</p><p><img height="2690" src="https://static.oschina.net/uploads/space/2023/0926/144608_xzWl_2720166.png" width="1787" referrerpolicy="no-referrer"></p><p>作者認為他們這樣做有兩個原因：</p><ol><li>有一些合情合理的空白字符問題需要解決。</li><li><strong>人們有動機讓一個項目看起來好像是活躍的，而實際上它並不活躍。</strong></li></ol><p>因此作者認為，Apache OpenOffice 項目已經變成了無人維護的狀態——這不是在質問 Apache 軟件基金會，這就是事實。他還説道，基金會及其貢獻者在近十年來不披露與缺乏實質性更新或變化有關的信息的方式，並且似乎故意掩蓋項目缺乏發展的情況。</p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 24 Sep 2023 06:51:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/259569/open-office-as-an-unmaintained-project</guid>
            <link>https://www.oschina.net/news/259569/open-office-as-an-unmaintained-project</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[微軟開源 windows-drivers-rs，用 Rust 開發 Windows 驅動程序]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">Microsoft Azure 首席技術官兼著名 Windows 軟件開發人員 Mark Russinovich 在社交平台上<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftwitter.com%2Fmarkrussinovich%2Fstatus%2F1705730703957405826" target="_blank">宣佈</a>，啓動了一個名為 windows-drivers-rs 的新開源項目。</span></p><p><span style="color:#000000">該項目可幫助開發人員使用 Rust 開發 Windows 驅動程序，旨在支持 WDM (Windows Driver Model) 和 WDF (Windows Driver Framework) 驅動程序開發模型。</span></p><p><span style="color:#000000"><img alt="" height="250" src="https://oscimg.oschina.net/oscnet/up-f6fe123e928e766cef55d1f83ecd65770f5.webp" width="500" referrerpolicy="no-referrer"></span></p><p><span style="color:#000000">當前版本的資源庫主要由 Rust crates 組成，具體包括：</span></p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmicrosoft%2Fwindows-drivers-rs%2Fblob%2Fmain%2Fcrates%2Fwdk-build" target="_blank">wdk-build</a><span style="color:#000000">：用於配置 Cargo 構建腳本以進行 WDK 的綁定生成和下游鏈接的庫。雖然此 crate 的編寫目的是靈活地適應不同的 WDK 版本和不同的 WDF 版本，但目前僅針對 NI eWDK、KMDF 1.33、UMDF 2.33 和 WDM 驅動程序進行了測試。舊版 DDK 可能缺少鏈接器選項。</span></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmicrosoft%2Fwindows-drivers-rs%2Fblob%2Fmain%2Fcrates%2Fwdk-sys" target="_blank">wdk-sys</a><span style="color:#000000">：直接 FFI 綁定到 WDK 中可用的 API。這包括從<code>bindgen</code>中自動生成的 ffi 綁定，以及包括手動重新實現 bindgen 無法生成的宏。</span></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmicrosoft%2Fwindows-drivers-rs%2Fblob%2Fmain%2Fcrates%2Fwdk" target="_blank">wdk</a><span style="color:#000000">：與 WDK 中可用的 API 的安全慣用綁定</span></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmicrosoft%2Fwindows-drivers-rs%2Fblob%2Fmain%2Fcrates%2Fwdk-panic" target="_blank">wdk-panic</a><span style="color:#000000">：使用 WDK 構建的程序的默認 panic 處理程序實現</span></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmicrosoft%2Fwindows-drivers-rs%2Fblob%2Fmain%2Fcrates%2Fwdk-alloc" target="_blank">wdk-alloc</a><span style="color:#000000">：對使用 WDK 編譯的二進制文件的分配支持</span></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmicrosoft%2Fwindows-drivers-rs%2Fblob%2Fmain%2Fcrates%2Fwdk-macros" target="_blank">wdk-macros</a><span style="color:#000000">：宏的集合，有助於更輕鬆地與 wdk-sys 的直接綁定進行交互。該 crate 通過<code>wdk-sys</code>重新導出，並且通常情況下 crates 不需要直接依賴<code>wdk-macros</code></span></li></ul><p><span style="color:#000000">具體示例可查看 </span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmicrosoft%2FWindows-rust-driver-samples" target="_blank">Windows-rust-driver-samples</a><span style="color:#000000">。</span></p><p><span style="color:#000000">值得注意的是，該項目仍處於早期階段，不建議用於商業用途；但微軟方面鼓勵社區對該項目的實驗、建議和討論。在 windows-drivers-rs 的開發過程中，該公司將把 GitHub 討論區作為與社區互動的主要形式。目前，windows-drivers-rs 項目已得到了微軟開發人員 Melvin Wang 的支持。</span></p><p><strong><span style="color:#000000">相關閲讀：</span></strong></p><ul><li><p style="margin-left:0px; margin-right:0px; text-align:start"><a href="https://www.oschina.net/news/238894/microsoft-windows-rust" target="_blank">微軟正在用 Rust 重寫核心 Windows 庫</a></p></li><li><p style="margin-left:0px; margin-right:0px; text-align:start"><a href="https://www.oschina.net/news/249719/rust-in-the-windows-kernel" target="_blank">微軟：加大力度在 Windows 11 使用 Rust</a></p></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Sun, 24 Sep 2023 06:44:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/259564/develop-windows-drivers-in-rust</guid>
            <link>https://www.oschina.net/news/259564/develop-windows-drivers-in-rust</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[谷歌建造海底光纜 Nuvem —— 連接葡萄牙、百慕大和美國]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Google Cloud 官方博客<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcloud.google.com%2Fblog%2Fproducts%2Finfrastructure%2Fintroducing-the-nuvem-subsea-cable%2F" target="_blank">宣佈 Nuvem</a> ——&nbsp;這是一個新的連接葡萄牙、百慕大和美國的跨大西洋海底光纜系統。</p><p>Nuvem&nbsp;是這條新海底光纜的名字，在葡萄牙語中是 'cloud' 的意思。Nuvem 將提升跨大西洋的網絡彈性，幫助滿足對數字服務不斷增長的需求。</p><p>這條新的光纜將增加國際路線的多樣性，並支持相關大陸和國家的信息和通信技術 (ICT) 基礎設施的發展。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-17a78469606eb791bffede853dbbe14484c.png" referrerpolicy="no-referrer"></p><p>▲ Nuvem 海底光纜路線</p><p>Nuvem 預計將於 2026 年投入使用，將為世界各地的 Google 用户和 Google Cloud 客户增加容量、提高可靠性並減少延遲。它將與 Firmina 和 Equiano 一起創建連接北美、南美、歐洲和非洲的重要數據長廊。</p><p>博客還提到，百慕大長期以來一直致力於發展海底光纜市場，而且全球 95% 的數據流動都是通過海底光纜傳輸。</p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 24 Sep 2023 03:54:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/259549/nuvem-subsea-cable</guid>
            <link>https://www.oschina.net/news/259549/nuvem-subsea-cable</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[百度發佈首個量子領域大模型]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">在近日召開的 2023 量子產業大會上，百度量子計算研究所所長段潤堯帶來百度量子軟硬件和解決方案等方面的最新成果，<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FQpACJh3RXKKfyKCvBvapjQ" target="_blank">發佈</a>了首個量子領域大模型，及百度量子助手和量子寫作助手兩大 AI 原生應用；還發布了量子領域大模型白皮書。</span></p><p><span style="color:#000000">根據介紹，百度發佈首個量子領域大模型，旨在芯片層、框架層、模型層及應用層等全棧技術上加速量子技術與大模型深度融合，充分激發兩大技術各自的潛力。該量子領域大模型是在文心一言基礎上，使用量子領域高質量數據進行更有針對性的訓練和優化而構建的量子領域大模型，能更好地理解量子知識，專業執行量子任務。</span></p><p><img alt="" height="333" src="https://oscimg.oschina.net/oscnet/up-0ff8b0a44302a63883fc37980394ad3c7c2.jpg" width="500" referrerpolicy="no-referrer"></p><p><span style="color:#000000">百度量子助手是依託百度量子知識庫與產業級知識增強文心大模型，基於 7800 萬原始數據、22 萬精調數據訓練打造。只需輸入 6 個變量，量子寫作助手可在 5 分鐘內撰寫一篇 13000 字符合格式要求的專利文檔，高效幫助企業將量子領域的研究成果與知識產權沉澱為企業資產。</span></p><p><span style="color:#000000">段潤堯表示，量子領域大模型的未來發展將會呈現出多個代表性階段。從近期以適配量子領域的行業大模型開始，大幅降低量子教育行業門檻；逐漸過渡為經典和量子混合大模型，再發展到通用量子領域大模型，有望實現大模型技術在數據、算法、算力等各維度的全面量子化；最終，量子領域大模型將會成為新時代的操作系統，在量子互聯網的基礎上互聯互通，成為社會發展的基礎設施。</span></p><p><span style="color:#000000">此外，段潤堯還公佈了百度在量子芯片、軟硬一體化解決方案等核心領域的最新進展。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 24 Sep 2023 03:22:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/259545</guid>
            <link>https://www.oschina.net/news/259545</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[聆心智能發佈定製角色對話交互模型 CharacterGLM]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">聆心智能團隊<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FoD4nJjAlWxp8wM_Lm0GEsQ" target="_blank">開發</a>了用於定製角色進行對話交互的 CharacterGLM，以 ChatGLM 模型為底座，具有 6B、12B、66B 的參數量。聆心智能將對社會開放 12B 和 66B 模型的 API 訪問，並將 CharacterGLM-6B 模型進行開源。</span></p><p><span style="color:#000000">該團隊採用人工交互的方式評測 CharacterGLM 與業界最強的競爭對手（以下簡稱 JP）的性能。定製了數十個角色，類型分佈於名人類、生活類、遊戲影音類和虛擬戀愛類；要求標註者與每個角色至少交互 20 輪，每輪對話由兩個模型生成回覆。標註者選擇勝出的回覆繼續展開對話，若回覆偏好相同則隨機選擇。</span></p><p><span style="color:#000000">按角色類別統計兩個模型的 win/tie/lose 比率。結果如表 1 所示，CharacterGLM 在大多數類別上的表現均優於 JP。</span></p><p><img height="228" src="https://oscimg.oschina.net/oscnet/up-629a6df96c49d3e6cd16ed068a107536ee4.png" width="500" referrerpolicy="no-referrer"></p><p><span style="color:#000000">為了衡量 CharacterGLM 在不同話題下的表現，其進一步將對話話題限定在常見的閒聊、訪談和戀愛場景下進行交互測試，評測方式與上面相同，結果如表 2 所示，CharacterGLM 在閒聊和戀愛場景下與 JP 持平，但在訪談場景下顯著優於 JP。</span></p><p><img height="223" src="https://oscimg.oschina.net/oscnet/up-bc7f2d8f46bbcaa6f9dd6419e087ba01cb0.png" width="500" referrerpolicy="no-referrer"></p><p><span style="color:#000000">以及進一步分析了 CharacterGLM 在不同輪次範圍內的角色表現，結果如表 3 所示，CharacterGLM 在對話的前期略次於 JP，但隨着對話的推進，CharacterGLM 的優勢則逐漸凸顯。</span></p><p><span style="color:#000000">下面展示了從交互測評數據中採樣的名人類、生活類、遊戲影音類和虛擬戀愛類角色的交互樣例。</span></p><p><strong><span style="color:#000000">名人類角色</span></strong></p><p><strong><span style="color:#000000"><img alt="" height="913" src="https://oscimg.oschina.net/oscnet/up-abb418380711fbc4c5f6af9c0640577898b.png" width="300" referrerpolicy="no-referrer"></span></strong></p><p><strong><span style="color:#000000">生活類角色</span></strong></p><p><strong><span style="color:#000000"><img alt="" height="421" src="https://oscimg.oschina.net/oscnet/up-2e4fe595a847879295de61567d340332e2f.png" width="300" referrerpolicy="no-referrer"></span></strong></p><p><strong><span style="color:#000000">遊戲影音類角色</span></strong></p><p><strong><span style="color:#000000"><img alt="" height="458" src="https://oscimg.oschina.net/oscnet/up-9e3176f285b0fbfada2bd51e4b8cdc7062b.png" width="300" referrerpolicy="no-referrer"></span></strong></p><p><strong><span style="color:#000000">虛擬戀愛類角色</span></strong></p><p><strong><span style="color:#000000"><img alt="" height="687" src="https://oscimg.oschina.net/oscnet/up-9ad6daae66ce227eb3a043cb4408ccf839a.png" width="300" referrerpolicy="no-referrer"></span></strong></p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 24 Sep 2023 03:09:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/259539</guid>
            <link>https://www.oschina.net/news/259539</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[OpenAI 為 ChatGPT 添加多模態輸入功能]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>OpenAI CEO Sam Altman 昨晚在 Twitter <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftwitter.com%2Fsama%2Fstatus%2F1706292549198237997" target="_blank">宣佈</a>，ChatGPT 新增了語音和圖像功能。換言之，ChatGPT 支持看、聽和説話了。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-7ac69cc2cb8172192a8ff7f1c26e65c8018.png" referrerpolicy="no-referrer"></p><p>據介紹，ChatGPT 此次推出的語音和圖像功能提供了一種新的、更直觀的界面類型，允許用户跟它進行語音對話，向 ChatGPT 展示説話內容。</p><p>更新之後的 ChatGPT 將會支持語音輸入和圖像輸入，更方便用户與機器人進行交流。其中語音輸入功能僅在 iOS 和 Android 平台上線，而圖像輸入功能將會登錄全平台。</p><p><strong>使用示例</strong></p><p><img src="https://static.oschina.net/uploads/space/2023/0926/110206_sVWo_2720166.gif" referrerpolicy="no-referrer"></p><p>新功能將會在兩週內陸續向 Plus 用户開放。</p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 24 Sep 2023 02:56:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/259535/chatgpt-can-now-see-hear-and-speak</guid>
            <link>https://www.oschina.net/news/259535/chatgpt-can-now-see-hear-and-speak</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Mwmbl —— 開源非盈利搜索引擎]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Mwmbl (發音類似 "mumble") 是一個用 Python 實現的，非營利、無廣告、免費的搜索引擎，注重可用性和速度。目前，它只不過是一個想法以及在小型索引上實現 Web 前端和搜索技術的<a href="https://mwmbl.org/">概念驗證。</a></p><p>項目<span style="background-color:#ffffff; color:#1f2328">願景是建立一個致力於提供高質量搜索（特別是針對黑客）的社區，其資金完全來自捐贈。</span></p><p><img alt="" height="394" src="https://static.oschina.net/uploads/space/2023/0919/162741_A8HW_4252687.gif" width="700" referrerpolicy="no-referrer"></p></div>
                                                                ]]>
            </description>
            <pubDate>Sun, 24 Sep 2023 02:30:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/p/mwmbl</guid>
            <link>https://www.oschina.net/p/mwmbl</link>
        </item>
        <item>
            <title>
                <![CDATA[Gitee 推薦 | Kubernetes 集羣部署工具 KubeKey]]>
            </title>
            <description>
                <![CDATA[<p>內容可能含有違規信息</p>
]]>
            </description>
            <pubDate>Sun, 24 Sep 2023 02:23:00 GMT</pubDate>
            <guid isPermaLink="false">https://gitee.com/kchstack/kubekey</guid>
            <link>https://gitee.com/kchstack/kubekey</link>
        </item>
        <item>
            <title>
                <![CDATA[每日一博 | 交易日均千萬訂單的存儲架構設計與實踐]]>
            </title>
            <description>
                <![CDATA[<div class="content"><span id="OSC_h1_1"></span><h1><span><span><span>一、訂單系統概述</span></span></span></h1><span id="OSC_h3_2"></span><h3><span><span><span>1.1 業務範圍</span></span></span></h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><span><span><span>服務業務線：快遞、快運、中小件、大件、冷鏈、國際、B2B 合同物流、CLPS、京喜、三入三出（採購入、退貨入、調撥入、銷售出、退供出、調撥出）等</span></span></span></p><span id="OSC_h3_3"></span><h3><span><span><span>1.2 訂單中心價值</span></span></span></h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><span><span><strong><span>1、解耦（</span></strong></span></span><span><span><span>提升系統穩定性</span></span></span><span><span><strong><span>）</span></strong></span></span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><span><span><strong><span>原系統：</span></strong></span></span><span><span><span>交易與生產耦合在一起，業務新增需求，涉及個上下游多個系統。ECLP、外單、運單、終端系統等。多條業務線的邏輯耦合在一起，單一業務條線的需求改動，涉及原系統中其他業務線的關聯改造。</span></span></span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><span><span><strong><span>新系統：</span></strong></span></span><span><span><span>交易與生產運營解耦：交易相關的需求在訂單的域內解決；生產側的需求，在生產域內解決，減少上下游的相互影響。</span></span></span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><span><span><span>業務條線接耦：不同業務線，業務流程不同，單一業務條線的需求改動，只在具體的流程中做迭代更新，不影響其他業務線。提升整個流程和業務的穩定性。</span></span></span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><span><span><strong><span>2、提升新業務接入速度</span></strong></span></span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><span><span><span>訂單中心向前台提供可複用的標準能力，提升新業務的導入速度。</span></span></span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><span><span><span>訂單中心將原系統中的大應用，拆分、抽象為多個小的應用組合，並支持不同場景下按需編排業務流程。新業務通過對中台公共標準能力的複用，可快速接入訂單中心，避免相同功能的重複建設。</span></span></span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><span><span><strong><span>3、提供全局化統一數據模型</span></strong></span></span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><span><span><strong><span>原系統：</span></strong></span></span><span><span><span>訂單分屬於多個系統，外單、ECLP、大件系統，有多套數據庫，業務語義不統一，不便於數據化建設。</span></span></span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><span><span><strong><span>新系統：</span></strong></span></span><span><span><span>訂單中心統一定義訂單的標準數據模型，讓不同業務的數據，沉澱在同一系統，</span></span></span><span><span><span style="color:#333333">減少訂單域相關功能的重複建設，避免資源浪費，打破部門壁壘。</span></span></span><span><span><span>使得數據和流程可以集中得以管理和優化，為集團經營分析、</span></span></span><span><span><strong><span>預測京東未來的創新空間，</span></strong></span></span><span><span><span>提供訂單域的標準數據。</span></span></span></p><span id="OSC_h1_4"></span><h1><span><span><span>二、架構介紹</span></span></span></h1><span id="OSC_h3_5"></span><h3><span><span><span>2.1 整體架構設計</span></span></span></h3><div><img alt="" height="663" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-09-06-11-186STGzUWAqSV88m9.png" width="532" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span>﻿</span></span></span><span><span><span>通過技術中台架構升級項目，將交易體系以新的接入-交易-履約-執行四層架構進行重新搭建。其中交易訂單負責物流與客户之間產生物流服務契約的單據流量收口，同時承載向下遊 OFC（訂單履約層）分發的職責。</span></span></span></p><span id="OSC_h3_6"></span><h3><span><span><span>2.2 實時數據層架構設計</span></span></span></h3><span id="OSC_h4_7"></span><h4><span><span><span>2.2.1 系統交互圖</span></span></span></h4><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><span><span><span>系統交互如下：</span></span></span></p><div><img alt="" height="556" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-09-06-11-1831YBALdgqayRN7mp.png" width="747" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span>﻿</span></span></span></p><p><span><span><span>訂單中心的標準接口在上層做了單據收口，同時我們在數據層也做了統一的收口。</span></span></span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><span><span><span>將</span></span></span><span><span><strong><span>業務架構與數據解耦</span></strong></span></span><span><span><span>，分佈式數據庫、緩存、一致性等高可用、高性能設計從業務架構範疇剝離，使業務架構聚焦在業務自身。</span></span></span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><span><span><strong><span>持久化系統</span></strong></span></span><span><span><span>：用於支撐接單、訂單修改、訂單取消、訂單刪除等數據持久化。</span></span></span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><span><span><strong><span>搜索系統</span></strong></span></span><span><span><span>：提供訂單詳情查詢、訂單列表查詢、訂單狀態流水查詢、判斷是否百川訂單等服務。</span></span></span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><span><span><strong><span>中繼系統</span></strong></span></span><span><span><span>：數據樞紐，通過消費消息隊列將訂單數據寫入 Elasticsearch、HBase、MySQL。</span></span></span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><span><span><strong><span>數據對賬系統</span></strong></span></span><span><span><span>：用於對比多套存儲中間件的數據是否一致，以保障數據最終一致性。</span></span></span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><span><span><strong><span>數據同步系統</span></strong></span></span><span><span><span>：將訂單列表查詢所需的查詢條件和列表展示字段從老系統同步至訂單中心，用於解決因切量過程中訂單數據存在於新老系統中而分頁困難的問題。</span></span></span></p><span id="OSC_h4_8"></span><h4><span><span><span>2.2.2 技術架構圖</span></span></span></h4><div><img alt="" height="568" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-09-06-11-1818Ny8awTwDlWZ11ZQ.png" width="767" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span>﻿</span></span></span></p><div><span style="color:black">•</span><span><span><span><span style="color:black">【讀寫分離架構】採用讀寫分離架構模式（CQRS），將訂單讀寫流量分離，以提高查詢性能和可擴展性，同時達到讀、寫解耦。</span></span></span></span></div><div><span style="color:black">•</span><span><span><span><span style="color:black">【緩存】使用分佈式緩存 Redis 緩存熱門訂單數據以及與訂單相關的信息提高併發和響應速度</span></span></span><span><span><span>減少對 HBase 的訪問</span></span></span><span><span><span style="color:black">，同時，通過主、備、臨時 3 套高性能緩存以提升系統容災能力。</span></span></span></span></div><div><span style="color:black">•</span><span><span><span><span style="color:black">【消息隊列】使用消息隊列 JMQ 實現異步處理訂單提升系統吞吐量，同時流量削峯減輕直接請求 ES、HBase、數據庫的壓力。將不同業務場景 (如下單、回傳) 使用不同的 Topic 進行隔離，</span></span></span><span><span><span>可以更好地管理和維護；將不同業務使用不同的 Topic 隔離，可以實現消息的並行處理和水平擴展，提高系統的吞吐量和性能。</span></span></span></span></div><div><span>•</span><span><span><span><span>【複雜查詢】使用搜索引擎 Elasticsearch 解決訂單複雜查詢，先通過 Elasticsearch 獲取訂單號，然後根據訂單號查詢分佈式緩存 Redis+列式數據庫 HBase。</span></span></span></span></div><div><span>•</span><span><span><span><span>【低成本持久化存儲】採用 HBase 列式數據庫以支持海量數據規模的存儲和極強的擴展能力。</span></span></span></span></div><div><span>•</span><span><span><span><span>【數據一致性】通過強事務、最終一致、冪等、補償、分佈式鎖、版本號等實現</span></span></span></span></div><div><span>•</span><span><span><span><span>【多租户架構】系統中採用多租户數據模型，將租户的數據分離存儲，以確保數據的隔離性和安全性。根據不同租户的需求動態擴展系統的容量和資源，可以支持系統的水平擴展。通過共享基礎設施和資源，多租户架構實現了更高的資源利用率和降低成本。</span></span></span></span></div><span id="OSC_h3_9"></span><h3><span><span><span>﻿</span></span></span><span><span><span>2.3 設計優勢</span></span></span></h3><span id="OSC_h4_10"></span><h4><span><span><span>2.3.1 高可用</span></span></span></h4><div><span style="color:black">•</span><span><span><span><span style="color:black">應用服務器、MySQL、Redis、HBase、JMQ 等均跨機房部署；</span></span></span><span><span><span>ES 單機房部署，搭建 ES 主備雙機房集羣</span></span></span></span></div><div><span style="color:black">•</span><span><span><span><span style="color:black">隔離、限流、熔斷、削峯、監控</span></span></span></span></div><span id="OSC_h4_11"></span><h4><span><span><span style="color:black">2.3.2 高性能</span></span></span></h4><div><span style="color:black">•</span><span><span><span><span style="color:black">高性</span></span></span><span><span><span>能緩</span></span></span><span><span><span style="color:black">存</span></span></span></span></div><div><span style="color:black">•</span><span><span><span><span style="color:black">異步化</span></span></span></span></div><span id="OSC_h4_12"></span><h4><span><span><span style="color:black">2.3.3 海量數據處理</span></span></span></h4><div><span style="color:black">•</span><span><span><span><span style="color:black">分庫分表</span></span></span></span></div><div><span style="color:black">•</span><span><span><span><span style="color:black">冷熱分離</span></span></span></span></div><div><span style="color:black">•</span><span><span><span><span style="color:black">列式存儲 (</span></span></span><span><span><span>HBase)</span></span></span></span></div><span id="OSC_h4_13"></span><h4><span><span><span>2.3.4 數據安全</span></span></span></h4><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><span><span><span style="color:black">敏感信息加密存儲，Log、Redis、ES、MySQL、HBase 等均採用加密存儲，「誰存儲誰加密，誰使用誰解密」。</span></span></span></p><span id="OSC_h1_14"></span><h1><span><span><span>三、訂單數據模型</span></span></span></h1><span id="OSC_h3_15"></span><h3><span><span><span>3.1 PDM 模型</span></span></span></h3><blockquote><span><span><span>在訂單模型設計上，基於統一業務屬性、抽象通用模型、歸納共性實體的原則，將訂單模型主要分成了訂單的主檔信息、訂單的貨品信息、訂單的物流服務信息、訂單的營銷信息、訂單的財務信息、訂單的客户渠道信息、訂單的收發貨信息、訂單的操作信息、訂單的擴展信息等幾類</span></span></span></blockquote><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><span><span><span>﻿</span></span></span></p><div><img alt="" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-09-06-11-18189KglU6qGqeUN7B.png" width="628" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span>﻿</span></span></span></p><div><img alt="" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-09-06-11-18H6HrmciYQrxOniE.png" width="795" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span>﻿</span></span></span></p><span id="OSC_h3_16"></span><h3><span><span><span>3.2 模型擴展性</span></span></span></h3><span id="OSC_h4_17"></span><h4><span><span><span>3.2.1 標準模型擴展性設計</span></span></span></h4><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><span><span><span>訂單中存在幾十上百個標識字段，若每次都採用新增字段形式，訂單業務屬性、數據模型會大量膨脹，腐蝕模型，同時開發效率較低，故採用 KV 形式承接和存儲。將標識劃分到各個業務域中，如訂單標識、貨品標識、營銷標識等。</span></span></span></p><span id="OSC_h4_18"></span><h4><span><span><span>3.2.2 個性化業務模型擴展性</span></span></span></h4><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><span><span><span>針對個性化業務，提供了一套可配置的數據庫字段管理方案，通過開箱即用的一些設置，訂單在提交、修改、查詢時，可以根據業務身份+業務類型+業務字段找到不同的數據模型以及數據擴展編碼，即找到存儲到哪張表哪個字段。在每張表都預留 N 個擴展屬性，同一個擴展屬性，不同的業務身份+業務類型表示不同的含義，以此實現擴展存儲。</span></span></span></p><div><img alt="" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-09-06-11-18I6o9tjo6Y7jFBGA.png" width="795" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span>﻿</span></span></span></p><span id="OSC_h1_19"></span><h1><span><span><span>四、未來及挑戰</span></span></span></h1><span id="OSC_h3_20"></span><h3><span><span><strong><span>4.1 訂單個性化查詢</span></strong></span></span></h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><span><span><span>個性化查詢需求增多，如模糊查詢、根據查詢條件實時聚合等需求，若 ES 索引都放在同一個集羣中，會影響整體集羣穩定性，但拆分後該業務數據無法與其他業務一塊查詢展示。</span></span></span></p><span id="OSC_h3_21"></span><h3><span><span><strong><span>4.2 單元化架構</span></strong></span></span></h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><span><span><span>當前接單持久化 TP99 是 47ms，在非跨機房情況下 TP99 是 20ms，從數據來看，跨機房對性能影響很大。</span></span></span></p><div><img alt="" height="192" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-09-06-11-1811oSHVJ8DjdRK11CW.png" width="767" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span>﻿</span></span></span><span><span><span>單元化，可以</span></span></span><span><span><strong><span>讓同一個用户的相關請求，只在一個機房內完成所有業務「閉環」，不再出現「跨機房」訪問</span></strong></span></span><span><span><span style="color:#555555">。</span></span></span><span><span><span>單元化的部署方式，可以讓每個機房部署在任意地區，隨時擴展新機房。</span></span></span><span><span><span>通過單元化，持續加強訂單平台的基座穩固。</span></span></span></p><span id="OSC_h3_22"></span><h3><span><span><strong><span>4.3 硬件成本控制</span></strong></span></span></h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><span><span><span>訂單日均單量不斷上升，數據量越來越大，隨之而來是硬件成本的增加，如何控制硬件成本增加，是當下及未來的一項挑戰。我們計劃通過數據歸檔、冷熱温數據分層等方式來</span></span></span><span><span><span>降低數據存儲成本。</span></span></span></p><blockquote><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><span><span><span>﻿作者：京東物流，王衞東</span></span></span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><span><span><span>來源：京東雲開發者社區，自猿其説 Tech 轉載請註明來源</span></span></span></p></blockquote></div>
                                    ]]>
            </description>
            <pubDate>Sun, 24 Sep 2023 02:21:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/4090830/blog/10114003</guid>
            <link>https://my.oschina.net/u/4090830/blog/10114003</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[關於 smart-doc 項目捐贈給同程旅行的重要通知]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>尊敬的 smart-doc 社區用户們：</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在這個秋高氣爽的國慶佳節前夕，我想向大家宣佈一個重要消息。我決定將 smart-doc 捐贈給同程旅行。自 2018 年以來，smart-doc 已經陪伴我們走過了五個春秋。在這五年的時間裏，我們一起見證了這個項目的成長和發展，它逐漸成長為備受歡迎的 API 文檔生成工具，也一起度過了無數個難忘的時光。然而，隨着時間的推移和社區需求的增加，我的個人精力已經無法滿足 smart-doc 未來更好的發展和國際化推廣。因此，我決定將其交給同程旅行，希望同程旅行能夠為 smart-doc 注入新的活力、資源和發展機遇。同程旅行作為一家領先的在線旅遊服務提供商，具有豐富的資源和技術實力，他們將能夠為 smart-doc 帶來更多的機遇和發展。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在捐贈之後，我將繼續參與 smart-doc 的日常維護工作，並以 PMC（Project Management Committee）成員的身份參與項目的決策和推進。我會盡我所能為 smart-doc 的發展貢獻自己的力量。同時，我也希望大家能夠繼續關注和支持這個項目，讓我們攜手共進，共同見證 smart-doc 的成長和發展。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;同時，我也要感謝所有給 smart-doc 點過 star 的各位用户以及同仁，<span style="color:#d35400"><strong>你們的 star，勝過我所讀過的詩</strong></span>！此外，我還要感激過去 smart-doc 的社區貢獻者們，你們無私的奉獻讓 smart-doc 在過去的時光裏更得越來越好。未來，我們也非常歡迎更多的開源小夥伴一起來參與 smart-doc 的社區共建，為全球開發者用户打造一款好用的 API 文檔生成工具。未來社區也會為優秀的貢獻者準備一些小禮品，以示感激和祝賀。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;最後，我衷心祝願每一個人都能夠<strong><span style="color:#d35400">走出半生，歸來仍是少年</span></strong>，<strong><span style="color:#d35400">在漫長的人生道路上保持初心和熱情</span></strong>。也祝願大家在這個國慶節期間有一個美好的旅程，享受快樂和幸福。同程旅行開源社區新的 smart-doc 版本將在國慶後推出，敬請期待！</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;再次感謝大家一直以來對 smart-doc 的支持和關注。我們相信，在同程旅行和社區用户的共同努力下，smart-doc 的未來一定會更加美好！</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><strong>項目地址</strong></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>GitHub 地址：</span><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FTongchengOpenSource%2Fsmart-doc" target="_blank">https://github.com/TongchengOpenSource/smart-doc</a></span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>Gitee 地址：</span><span><a href="https://gitee.com/TongchengOpenSource/smart-doc">https://gitee.com/TongchengOpenSource/smart-doc</a></span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start">&nbsp;</p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>敬禮！</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>smart-doc 作者 SunYu(上官胡鬧)</span></p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 24 Sep 2023 02:05:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/259520</guid>
            <link>https://www.oschina.net/news/259520</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Tiny RDM — 現代化輕量級跨平台 Redis 桌面客户端]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Tiny RDM 是一個現代化輕量級的跨平台 Redis 桌面客户端，支持 Mac、Windows 和 Linux。</p><p><strong>功能特性</strong></p><ul><li>基於 Webview，無內嵌瀏覽器</li><li>更精美的界面和直觀的結構佈局</li><li>多國語言支持（點我貢獻和完善多國語言支持）</li><li>便捷的數據查看和編輯修改</li><li>更多功能持續開發中…</li></ul><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-36601911cb73477055ae902c2211d0c08ec.png" referrerpolicy="no-referrer"></p></div>
                                                                ]]>
            </description>
            <pubDate>Sat, 23 Sep 2023 11:02:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/p/tiny-rdm</guid>
            <link>https://www.oschina.net/p/tiny-rdm</link>
        </item>
        <item>
            <title>
                <![CDATA[阿里雲通義千問 14B 模型開源]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff; color:#222222">阿里雲宣佈開源通義千問 140 億參數模型 Qwen-14B 及其對話模型 Qwen-14B-Chat，</span><span style="background-color:#ffffff; color:rgba(0, 0, 0, 0.9)">免費可商用。</span><span style="background-color:#ffffff; color:#222222">據阿里雲 CTO 周靖人介紹，Qwen-14B 在多個權威評測中超越同等規模模型，部分指標甚至接近 Llama2-70B。</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:left"><span><strong>Qwen-14B</strong>是一款支持多種語言的高性能開源模型，相比同類模型使用了更多的</span><span>高質量數據，整體訓練數據超過 3 萬億 Token，使得模型具備更強大的推理、認</span><span>知、規劃和記憶能力。</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:left"><strong><span>Qwen-14B-Chat&nbsp;</span></strong><span>是在基座模型上經過精細 SFT 得到的對話模型。</span><span>藉助基座模型強</span><span>大性能，Qwen-14B-Chat 生成內容的準確度大幅提升，也更符合人類偏好，內容</span><span>創作上的想象力和豐富度也有顯著擴展。</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:left"><span>用户可從魔搭社區直接下載模型，也可通過阿里雲靈積平台訪問和調用</span><span>Qwen-14B 和 Qwen-14B-Chat。</span></p><p style="margin-left:0; margin-right:0; text-align:left"><strong><span>效果展示：</span></strong></p><ul><li><p style="margin-left:0; margin-right:0; text-align:left">國際慣例自我認知</p></li></ul><p style="margin-left:0; margin-right:0; text-align:left"><img height="114" src="https://oscimg.oschina.net/oscnet/up-ba41084baf4e54574082f67689daa5ee7ad.png" width="500" referrerpolicy="no-referrer"></p><ul><li><p style="margin-left:0; margin-right:0; text-align:left">寫作創作</p></li></ul><p style="margin-left:0; margin-right:0; text-align:left"><img height="165" src="https://oscimg.oschina.net/oscnet/up-38bcc16d1d1f9d97efd019efa0766dd0427.png" width="500" referrerpolicy="no-referrer"></p><ul><li><p style="margin-left:0; margin-right:0; text-align:left">知識常識</p></li></ul><p style="margin-left:0; margin-right:0; text-align:left"><img height="135" src="https://oscimg.oschina.net/oscnet/up-07c15e6bbd711044edc21ef483bc70b8b15.png" width="500" referrerpolicy="no-referrer"></p><ul><li><p style="margin-left:0; margin-right:0; text-align:left">數學</p></li></ul><p style="margin-left:0; margin-right:0; text-align:left"><img height="137" src="https://oscimg.oschina.net/oscnet/up-29dde8414bcd875eea156ad12aa2b9a5716.png" width="500" referrerpolicy="no-referrer"></p><ul><li><p style="margin-left:0; margin-right:0; text-align:left">代碼</p></li></ul><p style="margin-left:0; margin-right:0; text-align:left"><img height="135" src="https://oscimg.oschina.net/oscnet/up-9efe859813065d5b02adf51a95674796dce.png" width="500" referrerpolicy="no-referrer"></p><ul><li><p style="margin-left:0; margin-right:0; text-align:left">安全</p></li></ul><p><img height="95" src="https://oscimg.oschina.net/oscnet/up-9e4c4580c590e97f8926d482a9d66168a3b.png" width="500" referrerpolicy="no-referrer">&nbsp;</p></div>
                                    ]]>
            </description>
            <pubDate>Sat, 23 Sep 2023 08:26:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/259447</guid>
            <link>https://www.oschina.net/news/259447</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[向 PC 廠商付錢阻礙 AMD 進入市場，英特爾被歐盟罰款 4 億美元]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">歐盟因一起&nbsp;<span style="background-color:#ffffff">2002 年至 2007&nbsp;</span>期間的市場壟斷案件對英特爾處以 4 億美元（3.76 億歐元）</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fec.europa.eu%2Fcommission%2Fpresscorner%2Fdetail%2Fen%2Fqanda_23_4571" target="_blank">的罰款</a><span style="color:#000000">。<span style="background-color:#ffffff">導致此罰款的案件與英特爾在 PC 處理器市場的商業行為有關，該公司以赤裸裸的限制行為阻礙競爭對手進入市場。</span></span></p><p><img height="259" src="https://oscimg.oschina.net/oscnet/up-2b85d5cfbdb20a92efee4134f93b711f816.png" width="700" referrerpolicy="no-referrer"></p><p><span style="color:#000000">相關裁決可追溯到 2009 年，彼時歐盟委員會對英特爾處以創紀錄的 10.6 億歐元罰款，理由是英特爾濫用其在 x86 中央處理單元（「CPU」）計算機芯片市場的主導地位。該公司的一些過分行為包括：</span></p><ul><li><span style="color:#000000">向計算機製造商提供全部或部分隱性回扣，條件是他們從英特爾購買全部或幾乎全部 x86 CPU（即所謂的「conditional rebates」&nbsp;）；</span></li><li><span style="color:#000000">向計算機製造商付費，以停止或推遲推出包含競爭對手 x86 CPU 的特定產品，並限制這些產品的銷售渠道（所謂的「naked restrictions」）。</span></li></ul><p><span style="color:#000000">此後英特爾方面提起了上訴，歐洲第二高等法院「歐盟普通法院」(General Court) 於 2022 年判決認為，歐盟委員會對英特爾有條件回扣的評估不完整，並認為該決定沒有充分證明這些回扣具有限制競爭的能力。該公司的一些行為（如隱性回扣）在上訴時因缺乏相關證據而被撤銷。</span></p><p><span style="color:#000000">但委員會仍認定了英特爾付錢給 PC 製造商以推遲或限制使用 AMD 處理器的產品的事實。</span><span style="color:#000000"><span style="background-color:#ffffff">並具體舉例稱：</span></span></p><ul><li><span style="color:#000000">2002 年 11 月至 2005 年 5 月期間，英特爾向惠普付款，條件是惠普 (i) 僅向中小型企業銷售基於其競爭對手 AMD x86 CPU 的商用台式機；(ii) 僅通過直接分銷渠道（而非分銷商）；(iii) 惠普推遲 6 個月在歐洲推出首款基於 AMD 的商用台式機。</span></li><li><span style="color:#000000">英特爾向宏碁支付款項的條件是，宏碁將基於 AMD 的筆記本電腦的推出時間從 2003 年 9 月推遲到 2004 年 1 月。</span></li><li><span style="color:#000000">英特爾向聯想付款的條件是，聯想將基於 AMD 的筆記本電腦的推出時間從 2006 年 6 月推遲到 2006 年底。</span></li></ul><p>「<span style="color:#000000">由於這些限制行為，計算機製造商停止、推遲或限制基於競爭對手芯片組的產品的商業化，而這些產品是他們積極計劃的，並且有消費者需求。因此，英特爾公司赤裸裸的限制對市場競爭造成了不利影響，剝奪了消費者本來可以擁有的選擇權。&nbsp;</span>」</p><p><span style="color:#000000">歐盟委員會目前正在就 <span style="background-color:#ffffff">General Court&nbsp;</span>對英特爾回扣行為的判決提起上訴，官方已向歐盟最高法院 -- 歐盟法院提出上訴。如果上訴被受理，英特爾被要求支付的罰款可能會增加。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Sat, 23 Sep 2023 08:19:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/259446/eu-intel-400-million-blocking-amds-market-access</guid>
            <link>https://www.oschina.net/news/259446/eu-intel-400-million-blocking-amds-market-access</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[馬斯克硬核遷移服務器]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>馬斯克傳裏面有一個故事，去年底馬斯克接手 Twitter 後為了省錢，要將薩克拉門託的服務器搬到波特蘭，IT 經理跟馬斯克彙報説要 9 個月，馬斯克覺得這時間太長了，一個月就能搞定，但 IT 經理堅持不妥協，於是他親自跑到機房拔電源租卡車搬服務器。</p><blockquote><p><img src="https://static.oschina.net/uploads/space/2023/0925/152809_qJYK_2720166.png" referrerpolicy="no-referrer"></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-08b1517c2a8541bf0ccb680727cc7118b0d.png" referrerpolicy="no-referrer"></p></blockquote><p>《伊隆·馬斯克親自搬運服務器，彰顯他在 X 公司（此前為 Twitter）的「狂熱緊迫感」》</p><p>*此內容改編自 Walter Isaacson 本月出版的傳記《伊隆·馬斯克》。</p><p>「這個時間表看起來像是我會認為勉強可以接受的嗎？」馬斯克問道。「顯然不是。如果計劃時間長，那就是錯的。」</p><p>那是 12 月 22 日深夜，位於 X 公司 10 樓的會議室，馬斯克正在與兩名基礎設施經理進行緊張的交談。他們之前與他的接觸並不多，尤其是在他心情不好時。</p><p>其中一人試圖解釋問題。位於薩克拉門託的一家數據服務公司允許 X 公司延長其服務器租約，以便在 2023 年有序遷出。「但今天早上」，這名顯得有些緊張的經理告訴馬斯克，「他們回來告訴我們説這個計劃不再適用，因為他們認為我們在財務上不再穩健。」</p><p>這個設施每年花費 X 公司超過 1 億美元。馬斯克想通過將服務器遷移到 X 公司在俄勒岡州波特蘭的其他設施來節省這筆費用。另一位經理表示這項工作不能立即進行。她平靜地説：「我們至少需要六到九個月的時間，因為薩克拉門託仍然需要服務流量。」</p><p>多年來，馬斯克經常面臨着他認為的必要與別人告訴他的可能之間的選擇。結果幾乎總是一樣的。他沉默了幾秒鐘，然後宣佈：「你們有 90 天時間來完成這項任務。如果你們做不到，你們可以辭職。」</p><p>這名經理開始詳細解釋遷移服務器到波特蘭的障礙。「機架密度不同，電力密度也不同」，她説。「所以機房需要進行升級。」她開始詳細介紹更多，但被馬斯克打斷。</p><p>「這讓我的大腦感到壓抑」，他説。</p><p>「對不起，我沒有這個意思」，她平穩地回答。</p><p>「你知道頭爆炸的表情符號嗎？」他問她。「我的腦袋現在就是這個感覺。真是一堆屁話。波特蘭明顯有大量的空間，從一個地方遷移到另一個地方簡直小菜一碟。」</p><p>當 X 公司的經理們再次試圖解釋時，馬斯克打斷了他們。「你們能不能去我們的服務器中心，然後給我發視頻？」他問。</p><p>那是聖誕節前的三天，經理承諾一週後提供視頻。「不，明天」，馬斯克命令。「我曾經自己建設過服務器中心，我可以判斷是否還可以放更多的服務器。這就是為什麼我問你們是否真的去過那些設施。如果你們沒有去過，那你們説的就是胡説八道。」</p><p>SpaceX 和 Tesla 的成功是因為馬斯克不懈地推動他的團隊更加敏捷、有創造力，併發起突擊衝刺以解決所有障礙。這就是他們如何在弗裏蒙特快速組裝汽車生產線，並在得克薩斯州的沙漠中建立試驗設施，以及在卡納維拉爾角使用舊零件建造發射場。</p><p>「你們需要做的就是將服務器遷移到波特蘭」，他説。「如果超過 30 天，我會很震驚。」他停頓了一下，重新計算。「找一家搬家公司，運輸電腦需要一個星期，然後再花一個星期來連接它們。兩週。就應該這樣。」</p><p>所有人都默不作聲。但馬斯克仍在發火。「如果你們租了一個 U-Haul （一家租車公司），你們可能自己就能完成。」兩位 X 公司的經理看着他，試圖判斷他是否是認真的。馬斯克的兩位親密助手 Steve Davis 和 Omead Afshar 也在場。他們多次看到過他這樣，知道他可能真的這麼認為。</p><p>「為什麼我們現在不去做？」James Musk 提議。</p><p>James 和他的弟弟 Andrew，是馬斯克的小堂弟，12 月 23 日，也就是那次令人沮喪的關於如何遷移服務器的基礎設施會議的次日，與他一同從舊金山飛往奧斯汀。他們原計劃去塔霍度過聖誕節，但那天伊隆邀請他們去奧斯汀。</p><p>James 有點猶豫，他精疲力竭，不想再加重壓力，但 Andrew 説服他們應該去。所以他們最後坐在飛機上聽伊隆抱怨服務器的事。</p><p>當飛機飛過拉斯維加斯時，James 提出了一個建議，他們現在就可以移動服務器。這是馬斯克喜歡的那種衝動、不切實際的建議。儘管已經是深夜，但他讓飛行員轉向，他們重新返回薩克拉門託。</p><p>他們着陸後能租到的唯一一輛車是豐田 Corolla。他們不確定晚上如何進入數據中心，但一個名為 Alex 的來自烏茲別克斯坦的 X 員工還在那裏。他欣然讓他們進入，並帶領他們參觀。</p><p>這個設施也為許多其他公司提供了服務器存放空間，非常安全，進入每個金庫都需要進行視網膜掃描。烏茲別克斯坦的 Alex 幫助他們進入了 X 公司的金庫，那裏有大約 5200 個冰箱大小的機架，每個機架有 30 台電腦。</p><p>「這些東西看起來並不難移動」，伊隆宣佈。這是一個扭曲現實的説法，因為每個機架重約 2500 磅，高 8 英尺。</p><p>「你們需要僱傭承包商來抬起地板面板」，Alex 説。「它們需要用吸盤來抬起。」他説，還需要另一組承包商去拆除電纜和地震杆。</p><p>馬斯克轉向他的保安，借了一把小刀。使用它，他能夠抬起地板上的一個通風口，這讓他可以撬開地板面板。然後他爬到服務器下面，用小刀撬開了一個電箱，拔掉了服務器插頭，等着看會發生什麼。沒什麼異常發生。服務器已經準備好遷移。</p><p>「這看起來並不難」，當他這麼説時，Alex 和其他人都目瞪口呆地看着他。此刻的馬斯克完全興奮起來。他大聲笑説，這就像是《碟中諜》的薩克拉門託版。</p><p>第二天——聖誕前夜，馬斯克召集了增援。Ross Nordeen，與他的朋友 James 在 Tesla 工作，從舊金山驅車而來。他在聯合廣場的 Apple Store 花了 2000 美元，買下了所有的 AirTags，這樣服務器在遷移過程中就可以被跟蹤。然後他去了家得寶，花了 2500 美元買了扳手、斷線鉗、頭燈和擰下地震螺栓所需的工具。</p><p>Steve Davis，馬斯克的忠誠副手，找人租了一輛半掛車，並安排了搬家車。其他來自 SpaceX 的援助隊員也已到達。這些服務器機架都有輪子，所以團隊能夠斷開其中四個並將它們推到待命的卡車上。這表明，這五千兩百多個服務器可能在幾天內全部移動。 「夥計們幹得好！」馬斯克興高采烈地説。</p><p>該設施的其他工作人員帶着混合的驚奇和恐懼看着。馬斯克和他的團隊在沒有用箱子包裝或用防護材料包裹的情況下，直接推動服務器，然後使用店裏買來的綁帶固定它們在卡車上。「我從未裝載過半掛車」，James 承認。Ross 稱其為「令人恐懼」。這就像清理衣櫥，「但裏面的東西都是至關重要的。」</p><p>下午 3 點，當他們把四台服務器裝到卡車上後，這一消息傳到了擁有並管理數據中心的 NTT 公司的高層。他們下令馬斯克的團隊停止行動。馬斯克的表情中混雜着歡樂和憤怒，這是他經常伴隨着他的狂熱激進時出現的情緒。他給存儲部門的 CEO 打電話，CEO 告訴他，在沒有專家的情況下，是不可能移動服務器機架的。「屁話」，馬斯克反駁。「我們已經裝了四台到半掛車上了。」</p><p>這位 CEO 隨後告訴他，一些地板承受不了超過 500 磅的壓力，所以滾動一個 2000 磅的服務器會造成損壞。馬斯克迴應説，服務器有四個輪子，所以任何一個點上的壓力只有 500 磅。「這傢伙數學真的不太行」，馬斯克告訴他的隊友。</p><p>在破壞了 NTT 管理層的聖誕前夜，並使他們在明年可能損失超過 1 億美元的收入後，馬斯克表示同情，並説他會暫停遷移服務器兩天。但他警告説，聖誕節後他們會繼續。</p><p>聖誕節後，Andrew 和 James 返回薩克拉門託，看看他們還能移動多少服務器。他們沒有帶足夠的衣服，所以去了沃爾瑪買了牛仔褲和 T 恤。</p><p>NTT 希望他們使用的搬運承包商收費是每小時 200 美元。所以 James 在 Yelp 上找到了一個名為 Extra Care Movers 的公司，他們只需要十分之一的費用。這家看起來有些亂七八糟的公司將低成本的理念發揮到極致。老闆曾在街上流浪，後來有了孩子，他正在試圖重整旗鼓。他沒有銀行賬户，所以 James 使用 PayPal 支付給他。</p><p>第二天，工作團隊希望付現金，所以 James 去銀行從他的個人賬户中取出了 13,000 美元。兩名團隊成員沒有身份證明，這使得他們很難進入設施。但他們用勤奮彌補了這一點。「每多移動一台服務器，你們可以得到一美元的小費」，James 在某個時刻宣佈。從那時起，每當他們將新的服務器裝到卡車上，工人們都會問他們現在裝了多少。</p><p>服務器上有用户數據，James 最初並沒有意識到，出於隱私原因，它們在遷移前應該被徹底擦除。「當我們知道這個時候，服務器已經被拔掉並推出去，所以我們不可能再推回去，插入，然後再擦除」，他説。此外，擦除軟件也不能工作。「靠，我們怎麼辦？」他問。伊隆建議他們鎖住卡車並進行追蹤。</p><p>所以 James 派人到家得寶買了一些大的掛鎖，他們將組合代碼發送到波特蘭，以便卡車可以在那裏被打開。「我簡直不敢相信它起作用了」，James 説。「他們都安全地到達了波特蘭。」</p><p>到這周結束時，他們已經使用了薩克拉門託所有可用的卡車。儘管該地區受到了雨的襲擊，他們在三天內移動了 700 多個機架。該設施之前的記錄是一個月移動 30 台。這仍然留下了大量的服務器在設施中，但這羣人已經證明瞭它們可以被快速移動。其餘的部分在 1 月份由 X 公司的基礎設施團隊處理。</p><p>這一切聽起來都很激動人心和鼓舞人心，對吧？這是馬斯克大膽和有創意的方法的一個例子！但與所有關於馬斯克的事情一樣，這也並非那麼簡單。這也是他魯莽、對反駁的不耐煩和他恐嚇人們的一個例子。一個星期前，X 公司的基礎設施工程師在那次令人頭疼的會議中試圖解釋為什麼快速關閉薩克拉門託中心會有問題，但他打斷了他們。他在忽略否定者時有很好的記錄。但並不完美。</p><p>在接下來的兩個月裏，X 公司不穩定。服務器的缺乏導致了多次系統崩潰，包括當馬斯克為總統候選人 Ron DeSantis 主持 Twitter Spaces 時。到 2023 年 3 月，馬斯克會承認：「回頭看，整個薩克拉門託的關停是一個錯誤。有人告訴我我們的數據中心有冗餘。我不知道的是，我們有 70,000 個硬編碼的引用指向薩克拉門託。由此導致的問題至今仍然存在。」</p><p>在 Tesla 和 SpaceX，他最有價值的助手已經學會瞭如何避開他的壞主意，並給他逐漸透露不受歡迎的信息，但 X 公司的老員工不知道該怎麼處理他。也就是説，X 公司還活着。薩克拉門託的事件向 X 公司的員工展示了，當他談到需要狂熱的緊迫感時，他是認真的。</p><p>Walter Isaacson 是 CNBC 的撰稿人，他還寫過關於伊隆·馬斯克、Jennifer Doudna、Leonardo da Vinci、Steve Jobs、Albert Einstein、Benjamin Franklin 和 Henry Kissinger 的傳記。他在 Tulane 大學教授歷史，曾是 Time 雜誌的編輯和 CNN 的 CEO。</p><p>相關鏈接</p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1727858283%2FNkRTyymTQ" target="_blank">https://weibo.com/1727858283/NkRTyymTQ</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftwitter.com%2Fthecat%2Fstatus%2F1705860673149059115" target="_blank">https://twitter.com/thecat/status/1705860673149059115</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.cnbc.com%2F2023%2F09%2F11%2Felon-musk-moved-twitter-servers-himself-in-the-night-new-biography-details-his-maniacal-sense-of-urgency.html" target="_blank">https://www.cnbc.com/2023/09/11/elon-musk-moved-twitter-servers-himself-in-the-night-new-biography-details-his-maniacal-sense-of-urgency.html</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Sat, 23 Sep 2023 07:31:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/259436/elon-musk-moved-twitter-servers-himself</guid>
            <link>https://www.oschina.net/news/259436/elon-musk-moved-twitter-servers-himself</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
    </channel>
</rss>
