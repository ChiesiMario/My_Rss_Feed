<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[開源中國-最新資訊]]>
        </title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="https://rsshub.app/oschina/news" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[開源中國-最新資訊 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Fri, 13 Oct 2023 09:06:21 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[TiDB 7.4 發版：正式兼容 MySQL 8.0]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#24292e; text-align:start"><span><img alt="1697163822053.jpg" height="298" src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/1697163822053-1697163902372.jpg" width="700" referrerpolicy="no-referrer"><span style="color:transparent"><span><span><span>﻿</span></span></span></span></span><span><span><span>﻿</span></span></span></p><p style="color:#24292e; text-align:start"><span><span><span>MySQL 是全球最受歡迎的開源數據庫，長期位於 DB-Engines Ranking 排行榜第二名，在世界範圍內擁有數量龐大的企業用户和開發者。然而，隨着時間的推移，MySQL 用户正面臨新挑戰。Oracle 官宣將在 2023 年 10 月終止 MySQL 5.7 版本的官方技術支持。據第三方統計顯示，目前仍有超過一半的 MySQL 服務器運行在 5.7 版本。在未來幾個月，大量的 MySQL 實例必須升級至 8.0 及更高版本，否則將無法享受 Oracle 提供的技術支持和重要補丁更新，企業級用户將面臨重大考驗。</span></span></span></p><p style="color:#24292e; text-align:start"><span><span><span>TiDB 作為新一代分佈式關係型數據庫，從誕生第一天起擁抱 MySQL 生態，不斷地兼容 MySQL 5.7 和 MySQL 8.0，為用户帶來更加順暢的遷移和使用體驗。本文將介紹 TiDB 7.4 DMR 在 MySQL 8.0 兼容方面的新進展，探討 TiDB 如何從根本上解決 MySQL 用户面臨的各種挑戰。</span></span></span></p><p style="color:#24292e; text-align:start"><span><span><span>﻿</span></span></span><span><img alt="1697164137656.jpg" height="100" src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/1697164137656-1697164159165.jpg" width="500" referrerpolicy="no-referrer"><span style="color:transparent"><span><span><span>﻿</span></span></span></span></span><span><span><span>﻿</span></span></span></p><p style="color:#24292e; text-align:start"><span><span><strong><span>○ 升級影響業務連續性</span></strong></span></span><span><span><span>。單實例或 "主從模式" 運行的 MySQL 升級時會造成數據庫服務的停機，可能會對業務運營造成衝擊。運行着大量 MySQL 實例的企業級用户，為了應對升級存在的潛在風險，需要投入大量的人力、物力進行測試和演練。</span></span></span></p><p style="color:#24292e; text-align:start"><span><span><strong><span>○ 業務規模擴展困難</span></strong></span></span><span><span><span>。隨着業務規模的擴大和數據使用場景的增多，用户通常需要在單機容量限制和分片管理複雜度之間進行權衡，數據庫擴展的難度制約了業務規模和發展速度。</span></span></span></p><p style="color:#24292e; text-align:start"><span><span><strong><span>○ 缺乏極致高可用方案</span></strong></span></span><span><span><span>。對於支撐核心業務場景的 MySQL 數據庫來説，如果遇到不可預測的宕機事件，恢復業務變得複雜，達成極低的恢復時間目標（RTO）成為數據庫管理員的挑戰。</span></span></span></p><p style="color:#24292e; text-align:start"><span><span><strong><span>○ 實時分析能力不足</span></strong></span></span><span><span><span>。MySQL 在處理大規模數據實時分析時性能不如在 OLTP（聯機事務處理）場景下出色。這對於需要進行復雜查詢和數據分析的業務是一個挑戰。</span></span></span></p><p style="color:#24292e; text-align:start"><span><span><strong><span>○ 原廠託管服務受限</span></strong></span></span><span><span><span>。雖然雲服務商都會提供 MySQL 託管服務，但大多缺乏 Oracle 原廠的官方支持。這意味着在處理深層次的產品問題和發現通用功能需求時，用户無法獲得來自數據庫原廠的快速反饋和支持。</span></span></span></p><p style="color:#24292e; text-align:start"><span><span><span>因此，遷移到一個成熟的產品並一舉解決上述難題，無疑是明智之舉。TiDB 就是 MySQL 全面升級的理想之選。選擇 TiDB，不僅可以擺脱 MySQL 升級和擴展性的困境，還能夠享受 HTAP、數據庫整合等多方面的額外收益。</span></span></span></p><p style="color:#24292e; text-align:start"><span><span><span>﻿</span></span></span><span><img alt="1697164120467.jpg" height="100" src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/1697164120467-1697164127958.jpg" width="500" referrerpolicy="no-referrer"><span style="color:transparent"><span><span><span>﻿</span></span></span></span></span><span><span><span>﻿</span></span></span></p><p style="color:#24292e; text-align:start"><span><span><span>TiDB 是由 PingCAP 自主研發的企業級分佈式關係型數據庫，具備水平擴縮容、金融級高可用、實時 HTAP、雲原生、兼容 MySQL 5.7 協議和生態等重要特性。TiDB 採用原生分佈式架構設計，具備靈活的彈性伸縮能力，整個過程對業務透明，無需人工幹預。TiDB 的多副本存儲和 Multi-Raft 協議確保數據的強一致性和高可用性，在部分副本發生故障時不影響數據的可用性。TiDB 通過滾動升級的方式使得版本更新的影響降至最低，此外可採用增加臨時節點的方式，確保 TiDB 在升級過程中的性能波動和連接閃斷控制在 5% 以內，大幅降低升級對業務的影響。</span></span></span></p><p style="color:#24292e; text-align:start"><span><span><span>另外，作為 TiDB 的締造者，PingCAP 基於全球領先雲服務商推出數據庫託管服務 TiDB Cloud，服務支持涵蓋複雜問題診斷、升級支持、緊急救援等，充分體現了原廠服務的優勢。</span></span></span></p><p style="color:#24292e; text-align:start"><span><span><span>﻿</span></span></span><span><img alt="1697164093953.jpg" height="100" src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/1697164093953-1697164104349.jpg" width="500" referrerpolicy="no-referrer"><span style="color:transparent"><span><span><span>﻿</span></span></span></span></span><span><span><span>﻿</span></span></span></p><p style="color:#24292e; text-align:start"><span><span><span>從項目初期開始，TiDB 堅持擁抱 MySQL 生態的產品戰略一直延續至今。TiDB 兼容 MySQL 的 wire protocol 和語法命令，這意味着 MySQL 客户端、MySQL 驅動程序以及部分 MySQL 工具可以直接在 TiDB 上運行。對於絕大多數在 MySQL 上運行的應用程序來説，幾乎不需要修改任何代碼。</span></span></span></p><p style="color:#24292e; text-align:start"><span><span><span>隨着 MySQL 8.0 的發佈，TiDB 在兼容 MySQL 5.7 的基礎之上，積極擴展了對 MySQL 8.0 的兼容。TiDB v7.4.0 版本發佈了對 MySQL 8.0 常用功能的支持，這使得平滑遷移 MySQL 8.0 的應用變得輕而易舉。本文列舉了部分功能：</span></span></span></p><p style="color:#24292e; text-align:start"><span><span><strong><span>3.1 公共表表達式（CTE）</span></strong></span></span></p><p style="color:#24292e; text-align:start"><span><span><span>作為 MySQL 8.0 引入的重要能力， TiDB 從 5.1 版本開始支持 ANSI SQL 99 標準的 CTE 及其遞歸的寫法。在編寫複雜查詢的時候，利用公共表表達式 (CTE) 可以構建一個臨時的中間結果集，在 SQL 語句中引用多次，提高 SQL 語句編寫效率，可讀性，執行效率。目前版本中，TiFlash 也同樣支持 CTE。</span></span></span></p><p style="color:#24292e; text-align:start"><span><span><span>比如表 authers 保存了作家的信息，book_authors 記錄了作家 id 與其所編寫書籍 id 的對應關係。</span></span></span></p><pre><code><span><span><span>mysql&gt;&nbsp;desc&nbsp;authors;
+------------+--------------+------+------+---------+-------+
|&nbsp;Field&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;Type&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;Null&nbsp;|&nbsp;Key&nbsp;&nbsp;|&nbsp;Default&nbsp;|&nbsp;Extra&nbsp;|
+------------+--------------+------+------+---------+-------+
|&nbsp;id&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;bigint(20)&nbsp;&nbsp;&nbsp;|&nbsp;NO&nbsp;&nbsp;&nbsp;|&nbsp;PRI&nbsp;&nbsp;|&nbsp;NULL&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|
|&nbsp;name&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;varchar(100)&nbsp;|&nbsp;NO&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;NULL&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|
|&nbsp;gender&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;tinyint(1)&nbsp;&nbsp;&nbsp;|&nbsp;YES&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;NULL&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|
|&nbsp;birth_year&nbsp;|&nbsp;smallint(6)&nbsp;&nbsp;|&nbsp;YES&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;NULL&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|
|&nbsp;death_year&nbsp;|&nbsp;smallint(6)&nbsp;&nbsp;|&nbsp;YES&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;NULL&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|
+------------+--------------+------+------+---------+-------+

mysql&gt;&nbsp;desc&nbsp;book_authors;
+-----------+------------+------+------+---------+-------+
|&nbsp;Field&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;Type&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;Null&nbsp;|&nbsp;Key&nbsp;&nbsp;|&nbsp;Default&nbsp;|&nbsp;Extra&nbsp;|
+-----------+------------+------+------+---------+-------+
|&nbsp;book_id&nbsp;&nbsp;&nbsp;|&nbsp;bigint(20)&nbsp;|&nbsp;NO&nbsp;&nbsp;&nbsp;|&nbsp;PRI&nbsp;&nbsp;|&nbsp;NULL&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|
|&nbsp;author_id&nbsp;|&nbsp;bigint(20)&nbsp;|&nbsp;NO&nbsp;&nbsp;&nbsp;|&nbsp;PRI&nbsp;&nbsp;|&nbsp;NULL&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|
+-----------+------------+------+------+---------+-------+</span></span></span></code></pre><p style="color:#24292e; text-align:start"><span><span><span>利用 CTE， 能夠很容易編寫出 SQL，列出最年長的 50 位作家分別編寫過多少書籍。</span></span></span></p><pre><code><span><span><span>mysql&gt;&nbsp;WITH&nbsp;top_50_eldest_authors_cte&nbsp;AS&nbsp;(
&nbsp;&nbsp;&nbsp;&nbsp;-&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SELECT&nbsp;a.id,&nbsp;a.name,&nbsp;(IFNULL(a.death_year,&nbsp;YEAR(NOW()))&nbsp;-&nbsp;a.birth_year)&nbsp;AS&nbsp;age
&nbsp;&nbsp;&nbsp;&nbsp;-&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FROM&nbsp;authors&nbsp;a
&nbsp;&nbsp;&nbsp;&nbsp;-&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ORDER&nbsp;BY&nbsp;age&nbsp;DESC
&nbsp;&nbsp;&nbsp;&nbsp;-&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LIMIT&nbsp;50
&nbsp;&nbsp;&nbsp;&nbsp;-&gt;&nbsp;)
&nbsp;&nbsp;&nbsp;&nbsp;-&gt;&nbsp;SELECT
&nbsp;&nbsp;&nbsp;&nbsp;-&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ANY_VALUE(ta.id)&nbsp;AS&nbsp;author_id,
&nbsp;&nbsp;&nbsp;&nbsp;-&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ANY_VALUE(ta.age)&nbsp;AS&nbsp;author_age,
&nbsp;&nbsp;&nbsp;&nbsp;-&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ANY_VALUE(ta.name)&nbsp;AS&nbsp;author_name,
&nbsp;&nbsp;&nbsp;&nbsp;-&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;COUNT(*)&nbsp;AS&nbsp;books
&nbsp;&nbsp;&nbsp;&nbsp;-&gt;&nbsp;FROM&nbsp;top_50_eldest_authors_cte&nbsp;ta
&nbsp;&nbsp;&nbsp;&nbsp;-&gt;&nbsp;LEFT&nbsp;JOIN&nbsp;book_authors&nbsp;ba&nbsp;ON&nbsp;ta.id&nbsp;=&nbsp;ba.author_id
&nbsp;&nbsp;&nbsp;&nbsp;-&gt;&nbsp;GROUP&nbsp;BY&nbsp;ta.id;
+-----------+------------+----------------------+-------+
|&nbsp;author_id&nbsp;|&nbsp;author_age&nbsp;|&nbsp;author_name&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;books&nbsp;|
+-----------+------------+----------------------+-------+
|&nbsp;524470241&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;80&nbsp;|&nbsp;Alexie&nbsp;Kirlin&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7&nbsp;|
|&nbsp;&nbsp;67511645&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;80&nbsp;|&nbsp;Bridgette&nbsp;Tromp&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;9&nbsp;|
...
|&nbsp;&nbsp;48355494&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;80&nbsp;|&nbsp;Audrey&nbsp;Mayert&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7&nbsp;|
+-----------+------------+----------------------+-------+
50&nbsp;rows&nbsp;in&nbsp;set&nbsp;(0.23&nbsp;sec)</span></span></span></code></pre><blockquote><ul><li><p><span><span><span>相關文檔：</span></span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.pingcap.com%2Fzh%2Ftidb%2Fstable%2Fdev-guide-use-common-table-expression" target="_blank"><span><span><span>https://docs.pingcap.com/zh/tidb/stable/dev-guide-use-common-table-expression</span></span></span></a><span><span><span>﻿</span></span></span></p></li></ul></blockquote><p style="color:#24292e; text-align:start"><span><span><strong><span>3.2 窗口函數 (window function)</span></strong></span></span></p><p style="color:#24292e; text-align:start"><span><span><span>窗口函數 (Window Function)，又被叫做分析函數， 在對數據進行分析、彙總、排序時會被用到。窗口函數能夠以 SQL 形式的寫法，來完成一些複雜的數據整理工作，協助用户發掘數據價值。例如，數據分組排序， 變化趨勢分析等。</span></span></span></p><p style="color:#24292e; text-align:start"><span><span><span>TiDB 目前已經完整支持了 MySQL 8.0 提供的窗口函數，大部分可以下推到 TiFlash 運行。</span></span></span></p><blockquote><ul><li><p><span><span><span>相關文檔：</span></span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.pingcap.com%2Fzh%2Ftidb%2Fstable%2Fwindow-functions" target="_blank"><span><span><span>https://docs.pingcap.com/zh/tidb/stable/window-functions</span></span></span></a><span><span><span>﻿</span></span></span></p></li></ul></blockquote><p style="color:#24292e; text-align:start"><span><span><strong><span>3.3 資源管控</span></strong></span></span></p><p style="color:#24292e; text-align:start"><span><span><span>TiDB 在 7.1 版本引入了資源管控，目的是能夠對集羣資源做合理分配，提升數據庫的穩定性，並降低數據庫的使用成本。在多個應用共享一個 TiDB 集羣的場景下， 資源隔離可以有效降低應用負載變化對其他應用產生的影響， 資源管理還能解決批量作業及後台任務對核心業務的影響，以及突發的 SQL 性能問題拖慢整個集羣，是提升大集羣穩定性的重要能力。</span></span></span></p><p style="color:#24292e; text-align:start"><span><span><span>儘管和 MySQL 的實現方式有差別，TiDB 兼容了 MySQL 指定資源組的語法以及 hint，降低用户學習成本和遷移成本。另外，TiDB 的資源隔離能夠更有效地對最重要的 I/O 資源進行管控，達到和 MySQL 同等甚至更好的效果。</span></span></span></p><p style="color:#24292e; text-align:start"><span><span><span>下面展示了利用資源管控，將 usr1 使用的所有資源控制在每秒 500 RU 以內。</span></span></span></p><p style="color:#24292e; text-align:start"><span><span><span>● 預估集羣容量</span></span></span></p><pre><code><span><span><span>mysql&gt;&nbsp;CALIBRATE&nbsp;RESOURCE</span></span></span></code></pre><p style="color:#24292e; text-align:start"><span><span><span>● 創建 app1 資源組，限額是每秒 500 RU</span></span></span></p><pre><code><span><span><span>mysql&gt;&nbsp;CREATE&nbsp;RESOURCE&nbsp;GROUP&nbsp;IF&nbsp;NOT&nbsp;EXISTS&nbsp;app1&nbsp;RU_PER_SEC&nbsp;=&nbsp;500;</span></span></span></code></pre><p style="color:#24292e; text-align:start"><span><span><span>● 將用户與資源組關聯，&nbsp;usr1&nbsp;的會話自動關聯到資源組&nbsp;app1</span></span></span></p><pre><code><span><span><span>mysql&gt;&nbsp;ALTER&nbsp;USER&nbsp;usr1&nbsp;RESOURCE&nbsp;GROUP&nbsp;app1;</span></span></span></code></pre><p style="color:#24292e; text-align:start"><span><span><span>也可以修改會話所屬的資源組</span></span></span></p><pre><code><span><span><span>mysql&gt;&nbsp;SET&nbsp;RESOURCE&nbsp;GROUP&nbsp;`app1`;</span></span></span></code></pre><p style="color:#24292e; text-align:start"><span><span><span>或者利用 hint RESOURCE_GROUP() 指定語句所屬的資源組</span></span></span></p><pre><code><span><span><span>mysql&gt;&nbsp;SELECT&nbsp;/*+&nbsp;RESOURCE_GROUP(rg1)&nbsp;*/&nbsp;*&nbsp;FROM&nbsp;t&nbsp;limit&nbsp;10;</span></span></span></code></pre><blockquote><ul><li><p><span><span><span>相關文檔：</span></span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.pingcap.com%2Fzh%2Ftidb%2Fstable%2Ftidb-resource-control" target="_blank"><span><span><span>https://docs.pingcap.com/zh/tidb/stable/tidb-resource-control</span></span></span></a><span><span><span>﻿</span></span></span></p></li></ul></blockquote><p style="color:#24292e; text-align:start"><span><span><strong><span>3.4 基於角色的權限管理</span></strong></span></span></p><p style="color:#24292e; text-align:start"><span><span><span>TiDB 支持 MySQL 兼容的角色管理。基於角色的授權，可以簡化權限管理的工作，並降低了出錯的風險。通過將權限與角色相關聯，可以更好地控制數據庫的訪問。客户可以將不同場景的工作進行分類，創建對應角色，並把角色授予有權限的數據庫用户， 數據庫用户在實際操作時，根據場景不同，切換角色，降低誤操作的可能。</span></span></span></p><p style="color:#24292e; text-align:start"><span><span><span>這裏舉一個利用角色拆分權限場景的例子。用户 dev_adm_usr 作為應用管理員，要操作數據庫 app_db 的數據，多數情況下只是查詢，偶爾在需要做數據修正的時候才會做修改。為了防止 dev_adm_usr 的誤操作，我們將兩部分權限利用角色拆開，只有必要的時候，才給自己賦予讀寫的角色。</span></span></span></p><p style="color:#24292e; text-align:start"><span><span><span>● 創建角色 app_read_role 和 app_write_role</span></span></span></p><pre><code><span><span><span>mysql&gt;&nbsp;CREATE&nbsp;ROLE&nbsp;'app_read_role',&nbsp;'app_write_role';</span></span></span></code></pre><p style="color:#24292e; text-align:start"><span><span><span>● 為角色授予對應的權限，這裏為兩個角色分別授予&nbsp;app_db&nbsp;的讀和寫的權限</span></span></span></p><pre><code><span><span><span>mysql&gt;&nbsp;GRANT&nbsp;SELECT&nbsp;ON&nbsp;app_db.*&nbsp;TO&nbsp;'app_read_role'@'%';
mysql&gt;&nbsp;GRANT&nbsp;INSERT,&nbsp;UPDATE,&nbsp;DELETE&nbsp;ON&nbsp;app_db.*&nbsp;TO&nbsp;'app_write_role'@'%';</span></span></span></code></pre><p style="color:#24292e; text-align:start"><span><span><span>● 將兩個角色授予用户 dev_adm_usr</span></span></span></p><pre><code><span><span><span>mysql&gt;&nbsp;GRANT&nbsp;'app_read_role','app_write_role'&nbsp;TO&nbsp;'dev_adm_usr'@'localhost';</span></span></span></code></pre><p style="color:#24292e; text-align:start"><span><span><span>● 把&nbsp;app_read_role&nbsp;設為&nbsp;dev_adm_usr 的默認角色，這樣用户 dev_adm_usr&nbsp;登錄時默認是隻讀權限</span></span></span></p><pre><code><span><span><span>mysql&gt;&nbsp;SET&nbsp;DEFAULT&nbsp;ROLE&nbsp;'app_read_role'&nbsp;TO&nbsp;'dev_adm_usr'@'localhost';</span></span></span></code></pre><p style="color:#24292e; text-align:start"><span><span><span>● 當&nbsp;dev_adm_usr&nbsp;需要修改數據時，啓用角色&nbsp;app_write_role</span></span></span></p><pre><code><span><span><span>mysql&gt;&nbsp;SET&nbsp;ROLE&nbsp;app_read_role,app_write_role;</span></span></span></code></pre><p style="color:#24292e; text-align:start"><span><span><span>或者啓用所有角色</span></span></span></p><pre><code><span><span><span>mysql&gt;&nbsp;SET&nbsp;ROLE&nbsp;ALL;</span></span></span></code></pre><blockquote><ul><li><p><span><span><span>相關文檔：</span></span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.pingcap.com%2Fzh%2Ftidb%2Fstable%2Frole-based-access-control" target="_blank"><span><span><span>https://docs.pingcap.com/zh/tidb/stable/role-based-access-control</span></span></span></a><span><span><span>﻿</span></span></span></p></li></ul></blockquote><p style="color:#24292e; text-align:start"><span><span><strong><span>3.5 增強 uft8mb4 字符集</span></strong></span></span></p><p style="color:#24292e; text-align:start"><span><span><span>MySQL 8.0 的一個重要變化是默認字符集變成了更通用的 uft8mb4，默認排序方式變為 utf8mb4_0900_ai_ci。TiDB 在新版本里也加入了 utf8mb4_0900_ai_ci 的排序方式，以便更輕鬆地進行系統遷移。</span></span></span></p><p style="color:#24292e; text-align:start"><span><span><span>為了同時兼容 MySQL 5.7 和 MySQL 8.0，TiDB 支持了 MySQL 兼容的變量 default_collation_for_utf8mb4。允許用户調整 utf8mb4 字符集的默認排序方式。這個方式確保了 TiDB 在不同 MySQL 版本之間的平滑過渡，並能夠適應不同應用程序的需求。</span></span></span></p><p style="color:#24292e; text-align:start"><span><span><span>如果從 MySQL 8.0 遷移，設為 8.0 默認排序 utf8mb4_0900_ai_ci</span></span></span></p><pre><code><span><span><span>set&nbsp;global&nbsp;default_collation_for_utf8mb4='utf8mb4_0900_ai_ci';</span></span></span></code></pre><p style="color:#24292e; text-align:start"><span><span><span>如果從 MySQL 5.7 遷移，設為 5.7 為 utf8mb4 的默認排序 utf8mb4_general_ci</span></span></span></p><pre><code><span><span><span>set&nbsp;global&nbsp;default_collation_for_utf8mb4='utf8mb4_general_ci';</span></span></span></code></pre><p style="color:#24292e; text-align:start"><span><span><strong><span>3.6 JSON 多值索引 (Multi-valued Index)</span></strong></span></span></p><p style="color:#24292e; text-align:start"><span><span><span>在支持了 MySQL 5.7 的完整函數之後，TiDB 在不斷添加對 MySQL 8.0 新發布功能的支持。最近的版本支持了"多值索引"，允許對 JSON 類型中的某個"數組"進行索引，從而提高了對 JSON 數據的檢索效率。與 MySQL 用法完全相同，這意味着在遷移過程中，無需修改數據建模或應用程序，用户可以繼續按照熟悉的方式操作 JSON 數據。</span></span></span></p><p style="color:#24292e; text-align:start"><span><span><span>多值索引是對普通索引結構的延伸。不同於普通索引與表 1:1 的對應關係， 多值索引與表的對應是 N:1。與 MySQL 相同， 條件中利用 MEMBER OF()，JSON_CONTAINS()，JSON_OVERLAPS() 這幾個函數檢索時，都可能會選擇到多值索引。</span></span></span></p><p style="color:#24292e; text-align:start"><span><span><span>比如，我們假定有一張客户信息表，所有詳細信息以 JSON 格式編入一個 JSON 類型的列中， 其中有一個數組結構保存客户所在的幾個城市。</span></span></span></p><p style="color:#24292e; text-align:start"><span><span><span>﻿</span></span></span><span><img alt="1697164069805.jpg" height="376" src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/1697164069805-1697164076620.jpg" width="700" referrerpolicy="no-referrer"><span style="color:transparent"><span><span><span>﻿</span></span></span></span></span><span><span><span>﻿</span></span></span></p><p style="color:#24292e; text-align:start"><span><span><span>當我們需要檢索哪些客户在北京時，如果沒有多值索引，這個查詢需要掃描整張表。</span></span></span></p><pre><code><span><span><span>SELECT&nbsp;name&nbsp;FROM&nbsp;customer
WHERE&nbsp;'beijing'&nbsp;MEMBER&nbsp;OF&nbsp;$.city;</span></span></span></code></pre><p style="color:#24292e; text-align:start"><span><span><span>這時我們可以針對 city 這個數組創建多值索引，上述查詢就可以利用索引檢索符合的記錄，大幅提升查詢性能。</span></span></span></p><pre><code><span><span><span>ALTER&nbsp;TABLE&nbsp;customers&nbsp;add&nbsp;index&nbsp;idx_city&nbsp;(name,&nbsp;(CAST(custinfo-&gt;'$.city'&nbsp;AS&nbsp;char(20)&nbsp;ARRAY)));</span></span></span></code></pre><p style="color:#24292e; text-align:start"><span><span><span>和普通索引一樣， 當優化器沒有選擇到多值索引時，可以利用優化器提示 USE_INDEX() 或 USE_INDEX_MERGE() 強制優化器做選擇。</span></span></span></p><blockquote><ul><li><p><span><span><span>相關文檔：</span></span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.pingcap.com%2Fzh%2Ftidb%2Fstable%2Fchoose-index%23%25E4%25BD%25BF%25E7%2594%25A8%25E5%25A4%259A%25E5%2580%25BC%25E7%25B4%25A2%25E5%25BC%2595" target="_blank"><span><span><span>https://docs.pingcap.com/zh/tidb/stable/choose-index#使用多值索引</span></span></span></a><span><span><span>﻿</span></span></span></p></li></ul></blockquote><p style="color:#24292e; text-align:start"><span><span><strong><span>3.7 修改會話變量的 hint ( SET_VAR())</span></strong></span></span></p><p style="color:#24292e; text-align:start"><span><span><span>MySQL 8.0 引入了一個特殊的 hint SET_VAR()。利用這個 hint，可以在語句運行期間修改某個會話級系統變量。TiDB 在 v7.4.0 也支持了這個 hint，提升了系統變量設置的靈活度， 能夠針對 SQL 語句做「定製」。包括優化器相關的，執行時相關的多個變量都支持用 hint 修改。</span></span></span></p><p style="color:#24292e; text-align:start"><span><span><span>比如，針對大表的分析處理，適當增加 SQL 的執行並行度。</span></span></span></p><pre><code><span><span><span>SELECT&nbsp;/*+&nbsp;set_var(tidb_executor_concurrency=20)&nbsp;*/
&nbsp;&nbsp;&nbsp;&nbsp;l_orderkey,
&nbsp;&nbsp;&nbsp;&nbsp;SUM(
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;l_extendedprice&nbsp;*&nbsp;(1&nbsp;-&nbsp;l_discount)
&nbsp;&nbsp;&nbsp;&nbsp;)&nbsp;AS&nbsp;revenue,
&nbsp;&nbsp;&nbsp;&nbsp;o_orderdate,
&nbsp;&nbsp;&nbsp;&nbsp;o_shippriority
FROM
&nbsp;&nbsp;&nbsp;&nbsp;customer,
&nbsp;&nbsp;&nbsp;&nbsp;orders,
&nbsp;&nbsp;&nbsp;&nbsp;lineitem
WHERE
&nbsp;&nbsp;&nbsp;&nbsp;c_mktsegment&nbsp;=&nbsp;'BUILDING'
AND&nbsp;c_custkey&nbsp;=&nbsp;o_custkey
AND&nbsp;l_orderkey&nbsp;=&nbsp;o_orderkey
AND&nbsp;o_orderdate&nbsp;&lt;&nbsp;DATE&nbsp;'1996-01-01'
AND&nbsp;l_shipdate&nbsp;&gt;&nbsp;DATE&nbsp;'1996-02-01'
GROUP&nbsp;BY
&nbsp;&nbsp;&nbsp;&nbsp;l_orderkey,
&nbsp;&nbsp;&nbsp;&nbsp;o_orderdate,
&nbsp;&nbsp;&nbsp;&nbsp;o_shippriority
ORDER&nbsp;BY
&nbsp;&nbsp;&nbsp;&nbsp;revenue&nbsp;DESC,
&nbsp;&nbsp;&nbsp;&nbsp;o_orderdate
limit&nbsp;10;</span></span></span></code></pre><p style="color:#24292e; text-align:start"><span><span><span>你也可以利用這個 hint 強制剛才的查詢選擇 TiFlash，而其他查詢保持不變。</span></span></span></p><pre><code><span><span><span>SELECT&nbsp;/*+&nbsp;set_var(tidb_isolation_read_engines='tidb,tiflash')&nbsp;*/
&nbsp;&nbsp;&nbsp;&nbsp;l_orderkey,
&nbsp;&nbsp;&nbsp;&nbsp;SUM(
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;l_extendedprice&nbsp;*&nbsp;(1&nbsp;-&nbsp;l_discount)
&nbsp;&nbsp;&nbsp;&nbsp;)&nbsp;AS&nbsp;revenue,
&nbsp;&nbsp;&nbsp;&nbsp;o_orderdate,
&nbsp;&nbsp;&nbsp;&nbsp;o_shippriority
FROM
&nbsp;&nbsp;&nbsp;&nbsp;customer,
&nbsp;&nbsp;&nbsp;&nbsp;orders,
&nbsp;&nbsp;&nbsp;&nbsp;lineitem
WHERE
&nbsp;&nbsp;&nbsp;&nbsp;c_mktsegment&nbsp;=&nbsp;'BUILDING'
AND&nbsp;c_custkey&nbsp;=&nbsp;o_custkey
AND&nbsp;l_orderkey&nbsp;=&nbsp;o_orderkey
AND&nbsp;o_orderdate&nbsp;&lt;&nbsp;DATE&nbsp;'1996-01-01'
AND&nbsp;l_shipdate&nbsp;&gt;&nbsp;DATE&nbsp;'1996-02-01'
GROUP&nbsp;BY
&nbsp;&nbsp;&nbsp;&nbsp;l_orderkey,
&nbsp;&nbsp;&nbsp;&nbsp;o_orderdate,
&nbsp;&nbsp;&nbsp;&nbsp;o_shippriority
ORDER&nbsp;BY
&nbsp;&nbsp;&nbsp;&nbsp;revenue&nbsp;DESC,
&nbsp;&nbsp;&nbsp;&nbsp;o_orderdate
limit&nbsp;10;</span></span></span></code></pre><blockquote><ul><li><p><span><span><span>相關文檔：</span></span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.pingcap.com%2Fzh%2Ftidb%2Fv7.4%2Foptimizer-hints%23set_varvar_namevar_value" target="_blank"><span><span><span>https://docs.pingcap.com/zh/tidb/v7.4/optimizer-hints#set_varvar_namevar_value</span></span></span></a><span><span><span>﻿</span></span></span></p></li></ul></blockquote><p style="color:#24292e; text-align:start"><span><span><strong><span>3.8 CHECK 約束</span></strong></span></span></p><p style="color:#24292e; text-align:start"><span><span><span>CHECK 約束，是一致性約束檢查的一種，用來維護數據的準確性。CHECK 約束可以用於限制表中某個字段的值必須滿足指定條件。當為表添加 CHECK 約束後，在插入或者更新數據時，TiDB 會檢查約束條件是否滿足，如果不滿足，則會報錯。</span></span></span></p><p style="color:#24292e; text-align:start"><span><span><span>MySQL 在 8.0 之前只支持 CHECK 約束的語法，在實際運行中並不會真正去檢查， 在 8.0 之後才全面支持。TiDB 在新版本中也添加了這個功能， 為了防止客户的 DDL 中有殘存的 CHECK 條件，可能會因為這個特性產生問題，TiDB 默認並不會開啓 CHECK 約束的檢查，而是通過變量 tidb_enable_check_constraint 手工開啓， 這充分體現了 TiDB 同時兼容 MySQL 5.7 和 8.0 的產品策略。</span></span></span></p><pre><code><span><span><span>mysql&gt;&nbsp;set&nbsp;global&nbsp;tidb_enable_check_constraint=on;

mysql&gt;&nbsp;CREATE&nbsp;TABLE&nbsp;t
&nbsp;&nbsp;&nbsp;&nbsp;-&gt;&nbsp;(&nbsp;a&nbsp;INT&nbsp;CHECK(a&nbsp;&gt;&nbsp;10)&nbsp;NOT&nbsp;ENFORCED,&nbsp;--&nbsp;不生效&nbsp;check
&nbsp;&nbsp;&nbsp;&nbsp;-&gt;&nbsp;&nbsp;&nbsp;b&nbsp;INT,
&nbsp;&nbsp;&nbsp;&nbsp;-&gt;&nbsp;&nbsp;&nbsp;c&nbsp;INT,
&nbsp;&nbsp;&nbsp;&nbsp;-&gt;&nbsp;&nbsp;&nbsp;CONSTRAINT&nbsp;c1&nbsp;CHECK&nbsp;(b&nbsp;&gt;&nbsp;c)
&nbsp;&nbsp;&nbsp;&nbsp;-&gt;&nbsp;);

mysql&gt;&nbsp;insert&nbsp;into&nbsp;t&nbsp;values&nbsp;(20,20,20);
ERROR&nbsp;3819&nbsp;(HY000):&nbsp;Check&nbsp;constraint&nbsp;'c1'&nbsp;is&nbsp;violated.</span></span></span></code></pre><blockquote><ul><li><p><span><span><span>相關文檔：</span></span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.pingcap.com%2Fzh%2Ftidb%2Fdev%2Fconstraints%23check-%25E7%25BA%25A6%25E6%259D%259F" target="_blank"><span><span><span>https://docs.pingcap.com/zh/tidb/dev/constraints#check-%E7%BA%A6%E6%9D%9F</span></span></span></a><span><span><span>﻿</span></span></span></p></li></ul></blockquote><p style="color:#24292e; text-align:start"><span><span><span>﻿</span></span></span><span><img alt="1697164045537.jpg" height="100" src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/1697164045537-1697164052811.jpg" width="500" referrerpolicy="no-referrer"><span style="color:transparent"><span><span><span>﻿</span></span></span></span></span><span><span><span>﻿</span></span></span></p><p style="color:#24292e; text-align:start"><span><span><span>為了降低用户數據遷移的複雜度，TiDB 推出了一款工具 TiDB Data Migration (DM) 。它能夠協助用户從與 MySQL 協議兼容的數據庫（MySQL、MariaDB、Aurora MySQL）到 TiDB 的全量數據遷移和增量數據同步。DM 支持 DDL 同步，分庫分表合併，並內置多種過濾器以靈活適應不同場景，切實地提升了數據遷移的效率。</span></span></span></p><p style="color:#24292e; text-align:start"><span><span><span>﻿</span></span></span><span><img alt="1697164019626.jpg" height="100" src="https://tidb-blog.oss-cn-beijing.aliyuncs.com/media/1697164019626-1697164031684.jpg" width="500" referrerpolicy="no-referrer"><span style="color:transparent"><span><span><span>﻿</span></span></span></span></span><span><span><span>﻿</span></span></span></p><p style="color:#24292e; text-align:start"><span><span><span>TiDB 7.4 將是 TiDB 7 系列最後一個 DMR 版本，針對 MySQL 8.0 做出了諸多優化。作為 MySQL 的全面升級，TiDB 的技術領先性幫助用户應對不斷變化的業務數據挑戰，實現業務的持續增長和創新。TiDB 在高度兼容 MySQL 5.7 和 MySQL 8.0 特性的同時，也將持續提供技術支持，確保用户能夠平滑地遷移各類業務應用程序，從而減少遷移過程中的工作量和風險。</span></span></span></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 13 Oct 2023 08:54:27 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261646/tidb-7-4-released</guid>
            <link>https://www.oschina.net/news/261646/tidb-7-4-released</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[掃清最後一片障礙，英國批准微軟收購動視暴雪]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">英國競爭與市場管理局（CMA）正式<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.gov.uk%2Fgovernment%2Fnews%2Fmicrosoft-concession-a-gamechanger-that-will-promote-competition" target="_blank">宣佈</a>，批准微軟收購動視暴雪的交易，從而為這筆交易掃除了最後一個主要全球監管障礙。交易完成後，微軟將成為世界上營收第三高的遊戲公司，僅次於騰訊和索尼。</span></p><p><span style="color:#000000">這一結果源於今年 8 月份微軟為完成交易所做出的一項讓步：即，由育碧取代微軟購買動視的雲流媒體版權。育碧將獲得動視未來 15 年內所有 PC 和遊戲機遊戲的雲流媒體版權，但這僅適用於歐洲經濟區 (EEA) 以外的市場。在歐洲經濟區內，育碧將獲得「銷售、分銷和轉授動視遊戲雲流媒體版本的非獨家許可。」 這意味着微軟也將能夠在歐洲獲得動視遊戲的雲流媒體播放權。</span></p><p><img height="373" src="https://oscimg.oschina.net/oscnet/up-032ff0710e6560c01ebe8e890fb455cc867.png" width="700" referrerpolicy="no-referrer"></p><p><span style="color:#000000"><span style="background-color:#ffffff">一直以來，CMA 都是該收購案最堅定的反對者。公告稱，</span>微軟的這一讓步解決了 CMA 有關市場壟斷的擔憂，從而同意重新審視該交易，並於 8 月啓動了新的調查。在調查完成後，CMA 則宣佈批准了該交易。</span></p><p><span style="color:#000000">CMA 首席執行官 Sarah Cardell 表示：「通過將動視暴雪的雲流媒體版權出售給育碧，我們確保微軟無法壟斷這個重要且快速發展的市場。隨着雲遊戲的發展，這種幹預將確保人們獲得更具競爭力的價格、更好的服務和更多的選擇。我們是全球唯一一家取得這一成果的競爭機構。 」</span></p><p><span style="color:#000000">但另一方面，Cardell 還對微軟在整個歷時約 20 個月的收購事件中的策略提出了批評，稱「企業及其顧問應該清楚地認識到，微軟採用的策略不是與 CMA 交涉的方式。 在我們最初的調查中，微軟本有機會進行重組，但它卻繼續堅持推進我們已經告知過他們的根本行不通的一攬子措施。以這種方式拖延訴訟只會浪費時間和金錢。」</span></p><p><span style="color:#000000">針對這一批准，微軟</span><span style="background-color:#ffffff; color:#2b2b2b">總裁 Brad Smith 也<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftwitter.com%2FBradSmi%2Fstatus%2F1712711053552107606" target="_blank">發文</a>表達了感謝，「</span><span style="color:#404040">我們現在已經跨過了</span><span style="background-color:#ffffff; color:#0f1419">這次收購的最終監管障礙，</span><span style="color:#404040">我們相信這將使得全球玩家和遊戲行業受益。</span><span style="background-color:#ffffff; color:#2b2b2b">」</span></p><p><img height="244" src="https://oscimg.oschina.net/oscnet/up-0dc46f62076b04db544fb535114c8b30dca.png" width="700" referrerpolicy="no-referrer"></p><p><strong><span style="color:#000000">相關閲讀：</span></strong></p><ul><li><a href="https://www.oschina.net/news/249038/microsoft-activision-blizzard-ftc-win" target="_blank">美國法院駁回 FTC 禁令請求，允許微軟收購暴雪</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Fri, 13 Oct 2023 08:03:41 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261636/cma-microsoft-activision</guid>
            <link>https://www.oschina.net/news/261636/cma-microsoft-activision</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[M2 Ultra 可並行運行 128 個 Llama2-7B 流]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>llama.cpp 是開發者 Georgi Gerganov 用純 C/C++ 代碼實現的&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Farxiv.org%2Fabs%2F2302.13971" target="_blank">LLaMA</a>&nbsp;模型推理開源項目。所謂推理，即是「給輸入-跑模型-得輸出」的模型運行過程。</p><p>最近 Georgi Gerganov 用搭載蘋果 <strong>M2 Ultra 處理器</strong>的設備運行了一系列測試，其中包括<strong>並行運行 128 個 Llama 2 7B 流</strong>。</p><p><img src="https://oscimg.oschina.net/oscnet/up-a4746f7529ff6aaa74c16a12aff409c17db.gif" referrerpolicy="no-referrer"></p><p>具體結果如下：</p><p><img height="1074" src="https://static.oschina.net/uploads/space/2023/1013/154448_xdg1_2720166.png" width="950" referrerpolicy="no-referrer"></p><p><em>via&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fggerganov%2Fllama.cpp%2Fpull%2F3228" target="_blank">https://github.com/ggerganov/llama.cpp/pull/3228</a></em></p><p>對於 M2 Ultra 的這番表現，<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnews.ycombinator.com%2Fitem%3Fid%3D37846387" target="_blank">有人給出瞭解釋</a>，M2 Ultra 或 M1 和 M2 系列 CPU 的速度之所以如此快，<strong>是因為執行推理任務的主要瓶頸是內存帶寬，而不是計算能力</strong>。</p><p><img src="https://static.oschina.net/uploads/space/2023/1013/155118_ZCum_2720166.png" referrerpolicy="no-referrer"></p><p>而 M2 Ultra 的帶寬為 800 GB/s，是普通現代台式機 CPU（雙通道 DDR4-6400 帶寬為 102 GB/s）的 8 倍。</p><p>如此高的帶寬是蘋果為 M1 和 M2 芯片設計了統一內存架構的結果。通常在筆記本電腦或台式機上，CPU 和 GPU 擁有不同的內存系統：高帶寬（但容量相對較低）的顯存和相對低帶寬（但容量較高）的 CPU 內存。</p><p>蘋果公司簡化了這種方案，轉而採用 CPU 和 GPU 共享的單一高帶寬內存系統。這樣做的唯一缺點是，這種高帶寬內存必須緊密集成在 M2 封裝中，因此最大容量受到限制。</p><p>例如，無論你花費 5,600 美元（最便宜的 Mac Studio 機型，配備 M2 Utra 和 192 GB 內存），還是 10,000 美元以上（最頂配 Mac Pro），都只能獲得最大 192 GB 內存。但另一方面，如果你的工作負載（如推理）不需要超過 192 GB 的內存，那就再好不過了。</p><p>如此看來，蘋果在這方面做出了正確的權衡。通常來説，在通用 CPU 的單插槽上實現 800 GB/s 的內存帶寬，這在以前從未實現過。</p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 13 Oct 2023 07:52:41 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261626</guid>
            <link>https://www.oschina.net/news/261626</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[微軟稱黑客組織正在利用 Atlassian 新的 0day 漏洞]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftechcrunch.com%2F2023%2F10%2F11%2Fchinese-state-hackers-atlassian-zero-day%2F" target="_blank">根據科技媒體 Techcrunch 報道</a>，微軟的威脅情報團隊在 X（前身為 Twitter）上發佈的帖子<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftwitter.com%2FMsftSecIntel%2Fstatus%2F1711871732644970856" target="_blank">表示</a>，它觀察到一個名為 Storm-0062 的黑客組織正在利用 Atlassian Confluence 數據中心和服務器中最近披露的一個關鍵缺陷。</p><p><img src="https://static.oschina.net/uploads/space/2023/1012/162312_aNLm_2720166.png" referrerpolicy="no-referrer"></p><p>Atlassian 在 10 月 4 日披露了其 Confluence 數據中心和服務器中的一個漏洞：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fconfluence.atlassian.com%2Fsecurity%2Fcve-2023-22515-privilege-escalation-vulnerability-in-confluence-data-center-and-server-1295682276.html" target="_blank">CVE-2023-22515</a>。</p><p><img src="https://static.oschina.net/uploads/space/2023/1012/162610_P2fX_2720166.png" referrerpolicy="no-referrer"></p><p>微軟安全團隊表示，它從 9 月 14 日起就觀察到了漏洞利用。Atlassian 本週更新了安全通知，稱該漏洞正被活躍利用，並表示此漏洞可能允許遠程攻擊者<strong>創建未經授權的管理員帳户來訪問 Confluence 服務器</strong>。</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 12 Oct 2023 08:27:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261452/atlassian-zero-day</guid>
            <link>https://www.oschina.net/news/261452/atlassian-zero-day</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[VMware Greenplum 7 正式發佈]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">VMware Greenplum 7 現已正式發佈。Greenplum 是一個統一分析和人工智能 (AI) 平台，旨在幫助企業充分利用其數據資源。VMware Greenplum 核心是以開源 PostgreSQL 項目為基礎，其獨特之處在於將商業智能（BI）和人工智能（AI）功能無縫集成在同一平台上。</span></p><p><span style="color:#000000"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FMzhw9dtYlKkuiIfhUYKByQ" target="_blank">公告</a>指出，VMware Greenplum 7 彰顯了對創建和演進一個內在安全、成熟和靈活的基於 SQL 的在線分析處理（OLAP）平台的承諾。這一創新平台引入了一系列增強和新加功能，重點是針對各種數據類型（無論是結構化、半結構化還是非結構化數據）的資源管理和複雜分析功能。 VMware Greenplum 7 在無縫數據可擴展性、多負載處理和部署靈活性方面也有許多重要更新。</span></p><p><span style="color:#000000">VMware Greenplum 7 的新功能：</span></p><ul><li><span style="color:#000000"><strong>開放源代碼和 PostgreSQL 12 的衍生：</strong>VMware Greenplum 7 建立在開源代碼的基礎上，利用了現代 PostgreSQL 版本的功能、可靠性和靈活性。與前一版本相比，Greenplum 7 植根於 PostgreSQL 12，並整合了近 5 年以來 PostgreSQL 的發佈版本。</span></li><li><span style="color:#000000"><strong>多種索引類型：</strong>&nbsp;VMware Greenplum 7 支持多種索引類型，包括 B 樹索引、哈希索引、位圖索引、塊範圍索引、文本索引、地理空間索引和 AI 向量索引。該功能可優化數據檢索和查詢性能。Greenplum 查詢優化器自 2009 年以來不斷改進，在第 6 版中取得了良好的性能記錄，在第 7 版中得到了擴展，提供了全面的索引選擇支持。&nbsp;</span></li><li><span style="color:#000000"><strong>利用 PXF 增強數據聯合：</strong>VMware Greenplum 7 中的平台擴展框架 (PXF) 經過改進，實現了卓越的數據聯合。企業現在可以通過 JDBC 查詢亞馬遜簡單存儲服務 (S3) 對象存儲、Hadoop 分佈式文件系統 (HDFS) 和其他關係數據庫中的數據集。它利用 PostgreSQL 的外來數據封裝器 API 來並行訪問遠程數據源，提供抽象數據模型來管理遠程數據的安全性和統計數據，以優化查詢。</span></li><li><span style="color:#000000"><strong>增強文本搜索：</strong>VMware Greenplum 7 擴展了文本搜索功能，同時支持詞法搜索和人工智能驅動的語義搜索，以提供更準確的搜索結果。詞法搜索支持基於關鍵字的傳統文本搜索，對於語義搜索，則由人工智能和向量 embeddings 提供支持。&nbsp;</span></li><li><span style="color:#000000"><strong>升級地理空間分析：</strong>VMware Greenplum 7 通過集成 PostGIS 版本 3 升級了地理空間分析功能。這一改進大大提高了地理空間查詢的速度和特徵豐富度。&nbsp;</span></li><li><span style="color:#000000"><strong>行級安全權限：</strong>&nbsp;該功能是對 VMware Greenplum 中已有的基於角色的安全模型以及表級和列級權限的補充。</span></li><li><span style="color:#000000"><strong>用於增強數據建模的生成列：</strong>&nbsp;VMware Greenplum 7 中引入了生成列，從而改進了數據抽象和建模，解決了安全特徵保留數據屏蔽等用例問題。&nbsp;</span></li><li><span style="color:#000000"><strong>改進的 DBA 查詢功能：</strong>&nbsp;Greenplum 7 對 DBA 查詢功能進行了大量改進，包括 UPSERT 支持、帶有事務的用户定義函數，以及對 ALTER TABLE 的改進以減少數據重寫。&nbsp;</span></li><li><span style="color:#000000"><strong>增強的半結構化和非結構化數據分析：</strong>&nbsp;Greenplum 7 除支持 XML 文檔外，還支持半結構化數據處理，如增強的 JSON 和數組數據處理功能。全文搜索和基於文本的詞法搜索索引可實現高效的文本存儲、索引和搜索。此外，向量嵌入可實現非結構化數據的濃縮和高效表示，允許跨多種語言對匹配的文檔、圖像和視頻進行相似性搜索，包括多語言搜索。&nbsp;</span></li><li><span style="color:#000000"><strong>PostgreSQL 擴展生態系統：</strong>&nbsp;更全面的 PostgreSQL 擴展支持，如高級密碼檢查、模糊字符串匹配、Hyperloglog、用於網絡數據的 Ip4r、用於媒體數據的 Isn、納秒時間戳、稀疏向量、用於透視的 Tablefunc、用於唯一標識符的 UUID 以及用於人工智能向量嵌入的 pg_vector，已全部支持。</span></li><li><span style="color:#000000"><strong>先進的資源管理：</strong>&nbsp;Greenplum 7 引入了一系列高級資源管理功能。這些功能可確保在高負載情況下的穩健性能。&nbsp;</span></li><li><span style="color:#000000"><strong>VMware vSphere 部署模型：</strong>&nbsp;Greenplum 7 可以參考推薦的架構部署在裸機或公共雲環境中。也可利用 Greenplum 7 版本中提供的自動部署模式無縫集成到 vSphere 私有云環境中。&nbsp;</span></li><li><span style="color:#000000"><strong>多數據中心災難恢復解決方案：</strong>&nbsp;作為多數據中心災難恢復解決方案的一部分，數據通過事務日誌歸檔進行復制，從而實現比 Greenplum 以前版本更高效、更低的恢復點目標（RPO）和恢復時間目標（RTO）災難恢復解決方案。&nbsp;</span></li><li><span style="color:#000000"><strong>新的擴展 PostgresML：</strong>提供新的用户定義函數，使用户可以在 VMware Greenplum 中使用數以萬計的開源人工智能/機器學習預訓練模型。&nbsp;</span></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Thu, 12 Oct 2023 07:18:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261611/greenplum-7-released</guid>
            <link>https://www.oschina.net/news/261611/greenplum-7-released</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[2023 CCF 中國開源大會丨開源商業化分論壇，即將開幕！]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="text-align:center"><img height="608" src="https://oscimg.oschina.net/oscnet/up-efd9ab459b96f871de47e91eb63966b717e.png" width="1080" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px">2023 CCF 中國開源大會即將於 10 月 21 日-22 日於湖南長沙舉行，將舉辦近 20 場領域平行分論壇。由<strong>馬越</strong>作為主席的<strong>開源商業化分論壇</strong>邀請您共同分享經驗和見解，共同探索開源領域的無限未來！</p><p style="margin-left:0px; margin-right:0px">&nbsp;</p><span id="OSC_h2_1"></span><h2><strong>一、分論壇簡介</strong></h2><p style="margin-left:0px; margin-right:0px">2023 CCF 中國開源大會「開源商業化」分論壇旨在幫助開發人員和企業家瞭解如何將開源項目轉化為可持續的商業模式。本論壇將討論開源項目商業化最佳實踐，分享成功案例，包括但不限於：開源項目的商業模式、融資和投資、法律問題、市場營銷、社區建設和管理、技術創新等，為更多開發者和企業提供可借鑑的經驗，共同推動開源生態建設，助力開源生態發展。<strong>屆時將於 2023 年 10 月 21 日 14：00-18：00 在湖南省長沙市北辰國際會議中心 1 層 102B 恭候各位同行~</strong></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0px; margin-right:0px">&nbsp;</p><span id="OSC_h2_2"></span><h2><strong>二、分論壇主席</strong></h2><p style="margin-left:0px; margin-right:0px; text-align:center"><img height="854" src="https://oscimg.oschina.net/oscnet/up-1888ff0415a286b8fd1237284c4b92ee2e2.png" width="572" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px; text-align:center"><strong><span>馬越</span></strong></p><p style="margin-left:0px; margin-right:0px; text-align:center"><strong>開源中國董事長、恆拓開源（834415）創始人、曾任董事長</strong></p><p style="margin-left:0px; margin-right:0px">馬越，開源中國董事長，恆拓開源（834415）創始人、曾任董事長。10 年美國開源技術設計和管理經驗，2006 年成為紅帽世界開源創新獎的首位華人獲獎者。</p><p style="margin-left:0px; margin-right:0px">2007 年響應政府號召回國創業，創立中國第一家開源技術服務公司：恆拓開源，用軟件開源化的價值理念為大型企業進行 IT 戰略諮詢，幫助企業落地開源技術整體解決方案，使開源技術在本土企業級應用領域有了廣泛實踐。</p><p style="margin-left:0px; margin-right:0px">2013 年至今建設開源中國，專注於本土開發者服務平台的建設。旗下運營的 gitee.com 目前已經成為世界第二大代碼託管平台，成為本土開源生態創新的基礎設施。</p><p style="margin-left:0px; margin-right:0px">&nbsp;</p><span id="OSC_h2_3"></span><h2><strong>三、分論壇演講</strong></h2><span id="OSC_h4_4"></span><h4><strong>（一）中國開源商業發展的現狀及思考</strong></h4><p style="margin-left:0px; margin-right:0px; text-align:center"><img height="854" src="https://oscimg.oschina.net/oscnet/up-fe8894eecddd1af4e192d6b2438998e75ea.png" width="572" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px; text-align:center"><strong><span>馬越</span></strong></p><p style="margin-left:0px; margin-right:0px; text-align:center"><strong>開源中國董事長、恆拓開源（834415）創始人、曾任董事長</strong></p><p style="margin-left:0px; margin-right:0px"><strong>1、嘉賓介紹</strong></p><p style="margin-left:0px; margin-right:0px">見分論壇主席介紹。</p><p style="margin-left:0px; margin-right:0px"><strong>2、演講內容</strong></p><p style="margin-left:0px; margin-right:0px">本土開源項目商業化現狀、痛點分析、解決方案建議。</p><p style="margin-left:0px; margin-right:0px; text-align:center">&nbsp;</p><span id="OSC_h4_5"></span><h4><strong>（二）大模型 to B 中的開源和商業探討</strong></h4><p style="margin-left:0px; margin-right:0px; text-align:center"><img height="555" src="https://oscimg.oschina.net/oscnet/up-2e94d9132889077a24cabbca9d2bfc0c616.png" width="497" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px; text-align:center"><strong><span>譚中意</span></strong></p><p style="margin-left:0px; margin-right:0px; text-align:center"><strong>CCF 開源發展委員會，常委</strong></p><p style="margin-left:0px; margin-right:0px"><strong>1、嘉賓介紹</strong></p><p style="margin-left:0px; margin-right:0px">譚中意，第四範式架構師，CCF 開源發展委員會常委， LF AI &amp; Data Generative AI Commons 發起人。</p><p style="margin-left:0px; margin-right:0px"><strong>2、演講內容</strong></p><p style="margin-left:0px; margin-right:0px">本分享探討在大模型 to B 領域內的開源和商業，包括機會和挑戰；重點探討基礎模型玩家的開源和商業，應用開發玩家的開源和商業等。</p><p style="margin-left:0px; margin-right:0px; text-align:center">&nbsp;</p><span id="OSC_h4_6"></span><h4><strong>（三）從開源到 Serverless —— TiDB 商業化演進邏輯</strong></h4><p style="margin-left:0px; margin-right:0px; text-align:center"><img height="460" src="https://oscimg.oschina.net/oscnet/up-688c84dc0f820396e8c0258362ace18bd02.png" width="306" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px; text-align:center"><strong><span>劉松</span></strong></p><p style="margin-left:0px; margin-right:0px; text-align:center"><strong>PingCAP 副總裁</strong></p><p style="margin-left:0px; margin-right:0px"><strong>1、嘉賓介紹</strong></p><p style="margin-left:0px; margin-right:0px">劉松，現任 PingCAP 副總裁，曾經擔任甲骨文大中國區技術戰略部總經理，阿里雲副總裁等職務，曾負責阿里雲的雲計算生態構建，智庫合作，人才培養計劃等工作。</p><p style="margin-left:0px; margin-right:0px">劉松長期活躍於中國軟件產業，親身觀察互聯網與信息化產業融合趨勢，在軟件與互聯網行業發展趨勢，雲計算和開源產業的商業模式構建，數據庫技術發展趨勢，企業數字化轉型等方面多年的實踐經驗。</p><p style="margin-left:0px; margin-right:0px"><strong>2、演講內容</strong></p><p style="margin-left:0px; margin-right:0px">TiDB 是 PingCAP 自主研發、開源的全球領先的分佈式關係數據庫，自 2015 年開源以來，已在全球範圍內得到廣泛應用。TiDB 的商業化歷程始於 2018 年，逐步走向全球化，並於 2022 年發佈 TiDB Cloud 雲數據庫。2023 年，PingCAP 推出了 TiDB Serverless 產品，將開源數據庫的優勢與雲原生技術相結合，為用户提供更簡單、更高效、更具成本效益的使用體驗。本次演講將圍繞 TiDB 的商業化歷程，從開源到雲數據庫，再到 Serverless，深入探討 TiDB 商業化演進的邏輯，以及貫穿始終的技術商業化思考。</p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0px; margin-right:0px; text-align:center">&nbsp;</p><span id="OSC_h4_7"></span><h4><strong><strong>（四）中國開源操作系統商業發展探索</strong></strong></h4><p style="margin-left:0px; margin-right:0px; text-align:center"><img height="459" src="https://oscimg.oschina.net/oscnet/up-5025b005efbe16d416795069b0e0b2a8d85.png" width="320" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px; text-align:center"><strong><span>任紫東</span></strong></p><p style="margin-left:0px; margin-right:0px; text-align:center"><strong>統信軟件解決方案中心，專家</strong></p><p style="margin-left:0px; margin-right:0px"><strong>1、嘉賓介紹</strong></p><p style="margin-left:0px; margin-right:0px">任紫東，統信技術中心資深專家，曾在國際操作系統公司從事操作系統工作近 15 年，曾在統信軟件產研中心，解決方案擔任技術與解決方案推廣工作。對操作系統生態與技術發展趨勢，國產操作系統建設與突破，開源社區運營與發展等方面有較深刻的瞭解，參加了歐拉社區、龍蜥社區、Deepin 開源社區的建設，在桌面操作系統和服務器操作系統商業落地替換領域有豐富經驗。</p><p style="margin-left:0px; margin-right:0px"><strong>2、演講內容</strong></p><p style="margin-left:0px; margin-right:0px">開源社區在 2010 年開始在中國探索，到 2020 年爆發，實現快速增長，期間筆者參與了幾大社區的建設和運營，在社區運營和治理，開放與商業，有諸多觀察和體會，特拋磚引玉，與參會者分享和討論。</p><p style="margin-left:0px; margin-right:0px; text-align:center">&nbsp;</p><span id="OSC_h4_8"></span><h4><strong><strong>（五）白鯨 DataOps 開源矩陣商業化之路</strong></strong></h4><p style="margin-left:0px; margin-right:0px; text-align:center"><img height="460" src="https://oscimg.oschina.net/oscnet/up-62b2d2deb36b74b85fb94410a82ef0786ad.png" width="309" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px; text-align:center"><strong><span>郭煒</span></strong></p><p style="margin-left:0px; margin-right:0px; text-align:center"><strong>白鯨開源 CEO</strong></p><p style="margin-left:0px; margin-right:0px"><strong>1、嘉賓介紹</strong></p><p style="margin-left:0px; margin-right:0px">郭煒，白鯨開源 CEO，Apache 基金會成員，Apache 孵化器導師，ClickHouse 華人社區創始人， Apache Dolphin Scheduler PMC，Apache SeaTunnel 導師。</p><p style="margin-left:0px; margin-right:0px">郭煒先生畢業於北京大學，現任中國通信學會開源技術委員會委員，TGO 鯤鵬會北京分會會長，ApacheCon Asia DataOps 論壇主席，波蘭 DataOps 峯會、北美 Big Data Day 演講嘉賓，虎嘯十年，傑出數字技術人物，中國開源社區最佳 33 人，中國 2021 年開源傑出人物。</p><p style="margin-left:0px; margin-right:0px">郭煒先生曾任易觀 CTO，聯想研究院大數據總監，萬達電商數據部總經理，先後在中金、IBM、Teradata 任大數據方重要職位，對大數據前沿研究做出卓越貢獻。同時郭先生參與多個技術社區工作，比如 Presto、Alluxio、Hbase 等，是國內開源社區領軍人物。</p><p style="margin-left:0px; margin-right:0px"><strong>2、演講內容</strong></p><p style="margin-left:0px; margin-right:0px">白鯨開源是由多名 Apache Software Foundation Member 成立的原生開源公司，維護着 Apache DolphinScheduler 和 Apache SeaTunnel 主要的社區維護者和貢獻者，擁有 2 個頂級 Apache 項目，員工 80% 都是 Apache Committer，共同打造開源原生的 DataOps 產品線，在 1 年內獲得多家頭部券商、保險、銀行行業和全球互聯網的商業客户，本次分享白鯨開源如何打造商業化產品並快速獲得商業化進展，希望給中國開源商業生態盡一份力量。</p><p style="margin-left:0px; margin-right:0px; text-align:center">&nbsp;</p><span id="OSC_h4_9"></span><h4><strong>（六）從開源時序數據庫到工業大數據處理平台——TDengine 的商業化之路</strong></h4><p style="margin-left:0px; margin-right:0px; text-align:center"><img height="456" src="https://oscimg.oschina.net/oscnet/up-8a4ee1bf334af43296eae96f50ce5c67540.png" width="333" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px; text-align:center"><strong><span>李廣</span></strong></p><p style="margin-left:0px; margin-right:0px; text-align:center"><strong>TDengine&nbsp;聯合創始人&nbsp;&amp;&nbsp;商業化&nbsp;VP</strong></p><p style="margin-left:0px; margin-right:0px"><strong>1、嘉賓介紹</strong></p><p style="margin-left:0px; margin-right:0px">李廣，TDengine 聯合創始人 &amp; 商業化 VP，原華為北研所高級工程師/研發部經理/華為運營商 BG 全球行銷資深產品經理/華為全球客户羣系統部部長 /華為公司解決方案 5 級架構師/華為大客户商業交易專業 5 級任職/華為 SDN &amp; NCE 產品商業管理負責人。</p><p style="margin-left:0px; margin-right:0px"><strong>2、演講內容</strong></p><p style="margin-left:0px; margin-right:0px">TDengine 時序數據處理引擎的初心;TDengine 從開源到工業大數據處理平台的變遷邏輯;TDengine 商業化邏輯的本質。</p><p style="margin-left:0px; margin-right:0px">&nbsp;</p><span id="OSC_h4_10"></span><h4><strong>（七）我們為什麼選擇深耕中國不出海</strong></h4><p style="margin-left:0px; margin-right:0px; text-align:center"><img height="457" src="https://oscimg.oschina.net/oscnet/up-37cf5084229f063ad2f468e8fa6cbf92118.png" width="303" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px; text-align:center"><strong><span>李倩</span></strong></p><p style="margin-left:0px; margin-right:0px; text-align:center"><strong>築棧（KodeRover / Zadig）創始人 &amp; CEO</strong></p><p style="margin-left:0px; margin-right:0px"><strong>1、嘉賓介紹</strong></p><p style="margin-left:0px; margin-right:0px">李倩，開源 Zadig 作者，築棧（KodeRover) 創始人兼 CEO；前七牛雲工程總監，阿里雲 MVP，QCon/MSUP/TGO/極客時間/騰訊 PCG/TEG 效能特邀專家，專注在雲原生 CI/CD、DevOps、平台工程架構等大規模軟件研發的基礎工程領域的研究和應用。</p><p style="margin-left:0px; margin-right:0px"><strong>2、演講內容</strong></p><p style="margin-left:0px; margin-right:0px">1. 下個十年，中國 To B 基礎軟件創業的大機遇（大機遇的特點：看不清、找不準、藏的深）。</p><p style="margin-left:0px; margin-right:0px">2. 商業化戰略和戰術。1）戰略：持續創新；2）戰術：接地氣 ——面向頭部和長尾企業的針對性戰術。</p><p style="margin-left:0px; margin-right:0px">3. 戰略性深耕中國。</p><p style="margin-left:0px; margin-right:0px">1）幫助最有生命力的國企/央企/民企的工程師真正把持續創新的國產化軟件用起來，用好；</p><p style="margin-left:0px; margin-right:0px">2）如何適應傳統採購；</p><p style="margin-left:0px; margin-right:0px">3）如何打造適閤中國的基礎軟件產業鏈。</p><p style="margin-left:0px; margin-right:0px">4. 戰術性不出海。</p><p style="margin-left:0px; margin-right:0px">1) 企業形成商業規模化之前，創始人必須做出單一市場的選擇打殲滅戰；</p><p style="margin-left:0px; margin-right:0px">2) 規模化的特質：已經在技術和商業雙維度上佔領市場絕對第一；</p><p style="margin-left:0px; margin-right:0px">3) 單一大市場形成規模化之後，可以考慮出海。</p><p style="margin-left:0px; margin-right:0px">&nbsp;</p><span id="OSC_h4_11"></span><h4><strong>（八）EMQ —— 開源數實融合基礎軟件的商業化</strong></h4><p style="margin-left:0px; margin-right:0px; text-align:center"><img height="434" src="https://oscimg.oschina.net/oscnet/up-b8b7ee75881f56df48b356ae55991504768.png" width="303" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px; text-align:center"><strong><span>金髮華</span></strong></p><p style="margin-left:0px; margin-right:0px; text-align:center"><strong>EMQ 映雲科技聯合創始人兼 CPO</strong></p><p style="margin-left:0px; margin-right:0px"><strong>1、嘉賓介紹</strong></p><p style="margin-left:0px; margin-right:0px">金髮華，EMQ 映雲科技聯合創始人兼 CPO。2018 年，金髮華加入 EMQ，負責公司產品與研發相關工作，LF Edge eKuiper 項目發起者；2016 年創業，成立大規模性能測試平台 xmeter.net，並於 2018 年被 EMQ 收購；在 2016 年之前的 10 年，就職於 IBM 中國開發中心，帶領團隊從事於軟件開發和測試工具、以及 DevOps 工具的研發。</p><p style="margin-left:0px; margin-right:0px"><strong>2、演講內容</strong></p><p style="margin-left:0px; margin-right:0px">EMQ 是一家開源物聯網數據基礎設施軟件供應商，交付全球領先的開源雲原生 MQTT 消息服務器和流處理數據庫，為企業雲/邊/端的海量物聯網數據提供高可靠、高性能的實時連接、移動、處理與集成，助力構建「面向未來」的物聯網平台與應用。本演講將介紹在數實融合大背景下，介紹 EMQ 提供的開源 + 商業化的技術在車聯網、工業、新能源等行業的應用，通過打通運營技術（OT）和信息技術（IT）系統之間的連接，能夠促進各行業的數字化轉型，實現更高效的運營和更智能的決策。</p><p style="margin-left:0px; margin-right:0px; text-align:center">&nbsp;</p><span id="OSC_h4_12"></span><h4><strong>（九）開源與 AI 時代下的投資邏輯</strong></h4><p style="margin-left:0px; margin-right:0px; text-align:center"><img height="445" src="https://oscimg.oschina.net/oscnet/up-b4ae757d240288e6aeb6c347ea7a187b825.png" width="376" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px; text-align:center"><strong><span>江志桐</span></strong></p><p style="margin-left:0px; margin-right:0px; text-align:center"><strong>天際科技投資副總裁</strong></p><p style="margin-left:0px; margin-right:0px"><strong>1、嘉賓介紹</strong></p><p style="margin-left:0px; margin-right:0px">江志桐，天際科技投資副總裁，雲計算、AI 行業負責人，加入天際科技投資前曾在華夏基金 (香港) 私募股權投資部任職。畢業於香港科技大學學士學位，加州伯克利商學院 MBA。</p><p style="margin-left:0px; margin-right:0px"><strong>2、演講內容</strong></p><p style="margin-left:0px; margin-right:0px">開源與 AI 交疊的時代背景下，投資機構的投資邏輯是什麼？天際資本如何預判與佈局？</p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0px; margin-right:0px">&nbsp;</p><span id="OSC_h2_13"></span><h2><span><strong>2023 CCF 中國開源大會</strong></span>（2023 CCF ChinaOSC）</h2><p style="margin-left:0px; margin-right:0px">2023 CCF 中國開源大會擬於<strong>2023 年 10 月 21 日至 22 日</strong>在<strong>湖南省長沙市北辰國際會議中心</strong>召開。大會由中國計算機學會、開放原子開源基金會主辦，CCF 開源發展委員會、湖南先進技術研究院承辦，中國電子信息產業集團有限公司協辦，CSDN 社區特別支持，本屆大會的主題為「開源聯合、聚力共贏」。</p><p style="margin-left:0px; margin-right:0px">本屆大會將組織特邀報告、高峯論壇和領域分論壇等多類型活動。大會將邀請開源及相關領域中國科學院院士、中國工程院院士與知名專家，為大會帶來特邀報告並參加開源高峯論壇等活動。本屆大會作為中國開源領域的年度盛會，誠摯地邀請開源領域學術界、企業界、教育界的學者、從業者、師生等前來參會，共見中國開源新徵程！</p><p style="margin-left:0px; margin-right:0px"><span>大會<strong>報名通道</strong>已開啓，歡迎開源領域學術界、企業界、教育界的學者、從業者、師生等前來參會，共見中國開源新徵程！</span></p><p style="margin-left:0px; margin-right:0px; text-align:center"><strong><span>大會註冊報名二維碼及鏈接：</span></strong></p><p style="margin-left:0px; margin-right:0px; text-align:center"><img height="500" src="https://oscimg.oschina.net/oscnet/up-60e4c511bc6c8aae589705b837bc553c206.png" width="500" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px; text-align:center"><strong><span style="background-color:#ffffff; color:rgba(0, 0, 0, 0.9)">https://chinaosc2023.ccf.org.cn/register</span></strong></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 12 Oct 2023 07:04:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/6852546/blog/10117508</guid>
            <link>https://my.oschina.net/u/6852546/blog/10117508</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Spring Framework 6.1 RC1]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Spring Framework 6.1 首個 RC 已發佈。</p><p><img src="https://static.oschina.net/uploads/space/2023/1013/134953_aBf5_2720166.png" referrerpolicy="no-referrer"></p><p><strong>主要變化</strong></p><ul><li>Spring Framework 6.1 要求 Jackson 2.14 基線並支持<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FFasterXML%2Fjackson-databind%2Fwiki%2FDatatypeFeatures" target="_blank">新的</a><code>DatatypeFeature</code></li><li>進一步改進 AOT，減少了運行時反射 (runtime reflection)，併為 GraalVM 中即將發生的可達性更改做好了準備</li><li>藉助新的&nbsp;<code>BodyInserter</code>&nbsp;方法變體，現在可以使用&nbsp;<code>OutputStream</code>&nbsp;作為反應式 Web API 中的數據源</li><li>函數式 Web 框架現在允許在提供靜態資源時進行標頭操作，方便編寫 HTTP 緩存響應標頭</li></ul><hr><p>Spring Framework 文檔<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fspring-projects%2Fspring-framework%2Fwiki%2FWhat%2527s-New-in-Spring-Framework-6.x">顯示</a>，Spring 6.1 已全面兼容虛擬線程 (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fspring-projects%2Fspring-framework%2Fissues%2F23443">Virtual Threads</a>) 和 JDK 21。</p><p><img alt="" src="https://static.oschina.net/uploads/space/2023/0817/140919_ppSy_2720166.png" referrerpolicy="no-referrer"></p><p>虛擬線程配置選項：專用的&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.spring.io%2Fspring-framework%2Fdocs%2F6.1.0-SNAPSHOT%2Fjavadoc-api%2Forg%2Fspringframework%2Fcore%2Ftask%2FVirtualThreadTaskExecutor.html">VirtualThreadTaskExecutor</a>&nbsp;和&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.spring.io%2Fspring-framework%2Fdocs%2F6.1.0-SNAPSHOT%2Fjavadoc-api%2Forg%2Fspringframework%2Fcore%2Ftask%2FSimpleAsyncTaskExecutor.html%23setVirtualThreads%28boolean%29">SimpleAsyncTaskExecutor 上的虛擬線程模式</a>，以及類似的具有 new-thread-per-task strategy 和虛擬線程模式的<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.spring.io%2Fspring-framework%2Fdocs%2F6.1.0-SNAPSHOT%2Fjavadoc-api%2Forg%2Fspringframework%2Fscheduling%2Fconcurrent%2FSimpleAsyncTaskScheduler.html">SimpleAsyncTaskScheduler</a>。</p><p>按照計劃，Spring Framework 6.1 正式版將於 11 月 GA，<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fspring.io%2Fblog%2F2023%2F10%2F12%2Fspring-framework-6-1-rc1-released" target="_blank">詳情查看發佈公告</a>。</p><hr><p>一同發佈的還有常規更新&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fspring.io%2Fblog%2F2023%2F10%2F12%2Fspring-framework-6-0-13-available-now" target="_blank">Spring Framework 6.0.13</a>。</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 12 Oct 2023 05:58:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261590/spring-framework-6-1-rc1-released</guid>
            <link>https://www.oschina.net/news/261590/spring-framework-6-1-rc1-released</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[項目管理軟件 Atlassian 斥資 9.75 億美元收購 Loom]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>總部位於澳大利亞的項目管理軟件提供商 Atlassian 宣佈計劃以近 10 億美元的價格（9.75 億美元）收購位於美國視頻消息平台 Loom。</p><blockquote><p><img src="https://static.oschina.net/uploads/space/2023/1013/120339_F5Rb_2720166.png" referrerpolicy="no-referrer"></p></blockquote><p>兩家公司表示，此次收購將幫助 Atlassian 提高其項目管理工具中的協作能力，並讓用户輕鬆地將視頻工作整合到他們現有的工作流程中。</p><p>在收購之前，Atlassian 是 Loom 企業級視頻平台的一個客户。Loom 的其他知名客户包括亞馬遜、蘋果、高盛和瞻博網絡等。</p><p>總部位於美國舊金山的 Loom 提供了一個異步視頻消息傳遞工具，可幫助用户通過即時共享的視頻進行通信。該公司成立於 2016 年，表示其 20 萬客户每月創建近 500 萬個 Loom 視頻。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-04936b7f95652bdd5174348d632c84c4650.png" referrerpolicy="no-referrer"></p><p>Atlassian 表示，收購完成後 Loom 仍將作為獨立產品提供，並計劃將 Loom 整合到其全套項目管理工具中。</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 12 Oct 2023 04:04:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261584</guid>
            <link>https://www.oschina.net/news/261584</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[2026 年將有 80% 的企業將採用 GenAI，增長 16 倍]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">Gartner 最新發布的一份</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.gartner.com%2Fen%2Fnewsroom%2Fpress-releases%2F2023-10-11-gartner-says-more-than-80-percent-of-enterprises-will-have-used-generative-ai-apis-or-deployed-generative-ai-enabled-applications-by-2026" target="_blank">報告</a><span style="color:#000000">指出，<span style="background-color:#ffffff">預測到 2026 年，超過 80% 的企業將使用生成式人工智能 (GenAI) 應用程序編程接口 (API) 或模型，和/或在生產環境中部署支持 GenAI 的應用程序。而在 2023 年，這一比例還不到 5%；這</span>意味着在短短三年內，採用或創建生成式 AI 模型的企業數量將增長 16 倍。</span></p><p><span style="color:#000000">Gartner 傑出副總裁分析師 Arun Chandrasekaran 稱，「生成式 AI 已成為企業管理層的首要任務，並引發了基礎模型之外的新工具的巨大創新。<span style="background-color:#ffffff">醫療保健、生命科學、法律、金融服務和公共部門等許多行業對生成式人工智能的需求正在不斷增加。</span>」</span></p><p><span style="color:#000000">該公司預計將在未來十年對組織產生巨大影響的<span style="background-color:#ffffff">三項創新</span>包括：</span><span style="background-color:#ffffff; color:#000000">支持 GenAI 的應用程序，基礎模型以及 AI 信任、風險和安全管理 (AI TRiSM)</span><span style="color:#000000">。</span></p><p><span style="color:#000000"><img alt="" height="312" src="https://oscimg.oschina.net/oscnet/up-121558672e450fdd70a9ec035bdf56bf188.png" width="500" referrerpolicy="no-referrer"></span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000">支持 GenAI 的應用程序使用&nbsp;GenAI 來實現用户體驗 (UX) 和任務增強，以加速和協助完成用户期望的結果。組織可以採用這些應用程序來促進員工的內部工作或為客户提供體驗，從而改善他們的服務和客户體驗。</span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000">Chandrasekaran 在報告中表示：「當今 GenAI 嵌入式功能最常見的模式是文本到 X，它通過使用自然語言進行快速工程，使工作人員能夠民主地完成過去的專門任務。<span style="background-color:#ffffff">然而，這些應用程序仍然存在諸如幻覺和不準確等障礙，可能會限制廣泛的影響和採用。</span>」&nbsp;</span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000">基礎模型是指生成式 AI 應用程序的機器學習模型，例如&nbsp;GPT&nbsp;與 ChatGPT 的關係。&nbsp;這些基礎模型經過大量數據的訓練，用於支持可以完成各種任務的不同應用程序。</span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000">基礎模型正處於技術成熟度曲線上預期膨脹的頂峯。Gartner 預測，到 2027 年，基礎模型將支撐 60% 的自然語言處理 (NLP) 用例，相較 2021 年的不到 5% 實現了大幅增長。</span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000">AI TRiSM 是指能夠解決生成式 AI 模型相關問題並確保其成功部署的一組解決方案。&nbsp;<span style="background-color:#ffffff">AI TRiSM 確保 AI 模型治理、可信性、公平性、可靠性、穩健性、有效性和數據保護。AI TRiSM 包括模型可解釋性和可解釋性、數據和內容異常檢測、AI 數據保護、模型操作和對抗攻擊抵抗的解決方案和技術。</span></span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000">AI TRiSM 是提供負責任的人工智能的重要框架，Gartner 預計其將在兩到五年內獲得主流採用。到 2026 年，將 AI 透明度、信任和安全性付諸實施的組織，其 AI 模型在採用率、業務目標和用户接受度方面將提高 50%。</span></p><p><span style="color:#000000">更多詳情可</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.gartner.com%2Fen%2Fnewsroom%2Fpress-releases%2F2023-10-11-gartner-says-more-than-80-percent-of-enterprises-will-have-used-generative-ai-apis-or-deployed-generative-ai-enabled-applications-by-2026" target="_blank">查看官方公告</a><span style="color:#000000">。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 12 Oct 2023 03:32:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261579/80-of-enterprises-generative-ai-2026</guid>
            <link>https://www.oschina.net/news/261579/80-of-enterprises-generative-ai-2026</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Ubuntu 23.10 發版插曲：因包含仇恨言論，ISO 鏡像被緊急「召回」]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Ubuntu 23.10 正式版今天發佈不久後，其桌面安裝程序 UI 的一組特定翻譯中<strong>被發現來自惡意貢獻者的仇恨言論</strong>。</p><blockquote><p><img alt="" src="https://static.oschina.net/uploads/space/2023/1013/110402_tO2M_2720166.png" referrerpolicy="no-referrer"></p></blockquote><p><em>via&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftwitter.com%2Fubuntu%2Fstatus%2F1712593893319930079" target="_blank">https://twitter.com/ubuntu/status/1712593893319930079</a></em></p><p>Canonical 官方知釋後立馬<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdiscourse.ubuntu.com%2Ft%2Fannouncement-ubuntu-desktop-23-10-release-image-is-being-updated-to-resolve-a-malicious-translation-incident%2F39365" target="_blank">「召回」</a>已發佈的 ISO 鏡像，並表示待修正完成後再上架新的鏡像。被刪除的受影響鏡像包括 <strong>Ubuntu Desktop 23.10、Ubuntu Budgie 23.10 和 Ubuntu Desktop 每日構建</strong>。</p><p><img src="https://static.oschina.net/uploads/space/2023/1013/113359_1piA_2720166.png" referrerpolicy="no-referrer"></p><p>官方表示，此事件僅影響桌面安裝程序中的一組翻譯，系統和數據不會受到影響。如果是從舊版本升級到 Ubuntu 23.10，沒有采用全新安裝，同樣不會受到影響。</p><hr><p>關於仇恨言論的具體內容，omgubuntu <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.omgubuntu.co.uk%2F2023%2F10%2Fubuntu-23-10-installer-translations-hijack" target="_blank">的報道</a>做了如下描述。整體感受就是看完之後只想求一雙沒看過的眼睛。</p><p><img height="615" src="https://static.oschina.net/uploads/space/2023/1013/132550_KgmV_2720166.png" width="1222" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 12 Oct 2023 03:29:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261578/ubuntu-23-10-recalled</guid>
            <link>https://www.oschina.net/news/261578/ubuntu-23-10-recalled</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Ubuntu 23.10 正式發佈，不妨趁週五升級一波！]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Ubuntu 23.10 已正式發佈，代號 "Mantic Minotaur"。該版本不是 LTS 版本，僅提供九個月的支持，一直到 2024 年 7 月。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-b016fea82900b50cf091fb97ed70edd800d.png" referrerpolicy="no-referrer"></p><p>Ubuntu 23.10 的默認安裝被配置為&nbsp;"<strong>Minimal"</strong>，也就是説現在默認安裝 Ubuntu 桌面是最小化安裝——不會包含額外的應用程序。當然用户可以選擇<strong> 'Expanded installation' </strong>選項來滿足更豐富的應用需求，以便在首次啓動時安裝 LibreOffice 和 Thunderbird 等日常應用。</p><p>此外，新版本引入了對 ZFS 引導安裝的支持，提升了存儲管理需求的靈活性和選擇性。這是基於 Subiquity 的安裝程序中的一項新功能，默認情況下不加密。加密的 ZFS 引導選項將在未來的版本中開發。</p><p>從 Ubuntu 23.10 開始，在 Ubuntu Core 多年經驗的基礎上，TPM 支持的全磁盤加密 (FDE) 將作為一項實驗功能引入。在支持的平台上，用户不再需要在啓動時手動輸入密碼。</p><p>其他值得關注的變化：</p><ul><li>桌面環境使用 GNOME 45</li><li>內核版本升級到 Linux Kernel 6.5</li><li>更新升級的安裝程序</li><li>受限的非特權用户命名空間</li><li>默認啓用多代 LRU 頁面回收</li><li>支持 idmapped Ceph 掛載</li><li>使用 Wayland 時默認啓用原生 Wayland 模式會話，以獲得更快的瀏覽體驗</li><li>預裝採用 Flutter 編寫的全新應用商店 "App Center"</li><li>使用 Netplan 作為 NetworkManager 的默認設置存儲後端</li><li><p>支持最新發布的&nbsp;樹莓派 5&nbsp;和&nbsp;HiFive Pro P550</p></li></ul><hr><p>此前曾報道過的部分變化：</p><ul><li><a href="https://www.oschina.net/news/258253/ubuntu-23-10-zfs-install">Ubuntu 23.10 安裝工具恢復支持 ZFS 文件系統</a></li><li><a href="https://www.oschina.net/news/257464/ubuntu-23-10-tpm-fde">Ubuntu 23.10 支持基於 TPM 的全磁盤加密</a></li><li><a href="https://www.oschina.net/news/247869/ubuntu-23-10-new-app-store-deb-support">Ubuntu 23.10 引入新的 「應用商店」，優先支持 Snap 格式</a></li><li><a href="https://www.oschina.net/news/256910/gnome-45-arrives-in-ubuntu-23-10">Ubuntu 23.10 每日構建版已搭載 GNOME 45</a></li><li><a href="https://www.oschina.net/news/250357/ubuntu-noto-fonts-change">Ubuntu 23.10 調整字體包，將 DejaVu 替換為 Noto</a></li><li><a href="https://www.oschina.net/news/255590/ubuntu-23-10-no-gimp-3-0">Ubuntu 23.10 不會預裝 GIMP 3.0 測試版</a></li></ul><p><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fubuntu.com%2Fdownload" target="_blank">下載地址</a>&nbsp;|&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdiscourse.ubuntu.com%2Ft%2Fmantic-minotaur-release-notes%2F35534" target="_blank">Release Notes</a></strong></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 12 Oct 2023 02:52:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261571/ubuntu-23-10-ga</guid>
            <link>https://www.oschina.net/news/261571/ubuntu-23-10-ga</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[更穩定高效、更廣泛兼容，openKylin Wayland SIG 成功研發 wlcom 合成器]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="margin-left:0; margin-right:0"><strong>近日，openKylin 社區 Wayland SIG 成功研發了基於 wayland 協議的合成器 Kylin wayland-compositor（簡稱 wlcom），實現了操作系統圖形棧底層核心子系統的進一步突破。</strong></p><p style="text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-6de842b2f992f25b078f771458805b5ab4f.png" referrerpolicy="no-referrer"></p><p><span>圖形顯示系統是人機交互的核心模塊，目前廣泛使用的 X-Window(也常稱為 X 或 X11) 顯示系統，最初由麻省理工學院 1984 年研發，歷經近 40 年的修補與擴展，代碼量龐大，維護困難，設計也已略顯「陳舊」。</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span>X 顯示系統中窗管與合成器是兩個獨立組件，通信開銷大，且存在窗口內容與合成器不同步的問題，容易造成圖像撕裂；X 客户端可篡改其他 X 客户端窗口屬性及顯示內容，安全性不強；合成管理器必須主動向 X 顯示服務獲取所有客户端圖像數據進行圖像合成，導致圖像顯示延遲風險增加。</span></p><p style="text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-b1bc0c4843a031812f77b3b19a1435688d9.jpg" referrerpolicy="no-referrer"></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span>針對 X 中的上述缺陷，開源社區於 2008 提出了替代方案—wayland 顯示服務器協議。該協議下，wayland 合成器與 wayland 顯示服務合為一個整體組件，通信開銷低；客户端之間的輸入和輸出隔離，提高了客户端的安全性；客户端頁面刷新時，合成器只處理數據有更新的區域，提高了顯示合成效率。</span></p><p style="margin-left:0; margin-right:0"><span>鑑於 wayland 相對 X 的巨大優勢，目前國際通用 linux 發行版本已經把 wayland 合成器作為默認的顯示服務器。但目前社區開源 wayland 合成器在兼容性及穩定性方面存在不足。一方面大多數基於 X 協議編寫的遊戲、圖形密集型等專業應用程序在 wayland 環境上兼容性較差，同時 wayland 各桌面環境定義了大量的私有協議，協議擴展難；另外，雖然 wayland 項目已經進行了十餘年，在使用上仍然不夠穩定，存在各種問題。</span></p><p style="margin-left:0; margin-right:0"><span>為解決上述問題，openKylin 社區 Wayland SIG 基於 wlroots 研發了 wayland 合成器—wlcom，其整體框架如下圖所示：</span></p><p style="margin-left:0; margin-right:0; text-align:center"><img alt="" height="1436" src="https://oscimg.oschina.net/oscnet/up-da45eed01db37e0cbf10899b2f3466d440a.jpg" width="2012" referrerpolicy="no-referrer"></p><p><span><span>目前，wlcom 已基本完成與 UKUI 核心組件融合，適配兼容主流媒體類、社交類、辦公類等 X 應用。關於 wlcom 更多細節，敬請關注 openKylin 公眾號。</span></span></p><p><strong>關於 Wayland SIG</strong></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span>openKylin Wayland SIG 小組由麒麟軟件有限公司發起成立，致力於新一代圖形顯示服務器相關技術研究，包括 wayland 合成器、X 兼容等，提供 wayland 相關軟件包的技術規劃、設計、開發、維護和升級服務，共同推動新一代圖形服務器技術發展及落地。</span></p><ul><li><p style="margin-left:0; margin-right:0; text-align:justify"><span style="color:#000000">郵件列表：</span></p><p style="margin-left:0; margin-right:0; text-align:justify"><span style="color:#0052ff">wayland@lists.openkylin.top</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span style="color:#000000">SIG 主頁：</span></p><p style="margin-left:0; margin-right:0; text-align:justify"><span style="color:#0052ff">https://gitee.com/openkylin/community/tree/master/sig/Wayland</span></p></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Thu, 12 Oct 2023 01:56:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261552</guid>
            <link>https://www.oschina.net/news/261552</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[夜鶯項目發佈 v6.3.0 版本，增加 Loki 和 TDEngine 數據源支持]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; text-align:left">大家好，夜鶯項目發佈 v6.3.0 版本，新增 Loki 和 TDEngine 數據源支持，並持續優化部署體驗，本文為大家簡要介紹一下相關更新內容。</p><h2>Loki、TDEngine 數據源支持</h2><p style="color:#333333; text-align:left"><img alt="20231013080250" src="https://download.flashcat.cloud/ulric/20231013080250.png" referrerpolicy="no-referrer"></p><p style="color:#333333; text-align:left">實際上，從 v6.2.0 開始，就支持了這倆數據源，不過還有些小瑕疵，故而在 v6.3.0 修復並正式對外宣傳。Loki 數據源的支持是來自社區小夥伴 @tripitakav，歡迎大家積極參與夜鶯開源項目，一起完善夜鶯的生態。TDEngine 數據源的支持由 @710leo 和 @jsers 主導，感謝他們的付出，夜鶯和 TDEngine 配合，算是一個純國產化的解決方案了。</p><p style="color:#333333; text-align:left">Loki 和 TDEngine 相關功能初步發佈，可能還會有一些小問題，歡迎大家積極反饋，我們會持續優化。軟件 Bug 和建議請通過 github issue 反饋，使用上的問題可以通過<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fanswer.flashcat.cloud%2F" target="_blank">論壇</a>反饋。</p><p style="color:#333333; text-align:left">github 地址：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fccfos%2Fnightingale" target="_blank">https://github.com/ccfos/nightingale</a>，大家可以 star 收藏，後續有更新會收到 github 的通知。</p><h2>去除 ops.yaml</h2><p style="color:#333333; text-align:left">新下載的包，大家會發現 etc 配置目錄缺少了 ops.yaml，這是因為把這個文件的內容內置到代碼裏了，降低維護成本。如果硬盤上還是有 ops.yaml，夜鶯會自動 merge 配置文件和代碼中的內容。</p><h2>修改 edge heartbeat 接口地址</h2><p style="color:#333333; text-align:left">之前的版本 categraf 向 edge 發心跳和向中心端發心跳 heartbeat 接口路徑不一樣，給很多小夥伴造成困擾。這次升級我們想了個辦法把這倆接口路徑統一了，都是<span>&nbsp;</span><code>/v1/n9e/heartbeat</code>，這樣就不會再有困擾了。</p><h2>其他更新</h2><ul><li>feat: SMTP 設置添加測試功能</li><li>feat: Elasticsearch 即時查詢日誌表格字段列支持後端排序</li><li>feat: 儀表盤蜂窩圖添加文字背景色設置</li><li>feat: 儀表盤表格圖新增導出到 CSV</li><li>feat: 儀表盤表格圖每行展示指定聚合維度值的維度支持配置多個維度</li><li>feat: 儀表盤表格圖 override 新增根據字段名匹配方式</li><li>feat: 儀表盤單位添加 Data rate 單位</li><li>refactor: 導入 Grafana dashboard 支持更多的版本</li><li>refactor: 儀表盤折線圖 legend 表格寬度自適應</li><li>refactor: 儀表盤指標圖展示標籤值時如果是數值類型配置單位和顏色設置</li><li>fix: 告警事件中 target_ident 偶發出錯問題 by qifenggang</li><li>fix: edge 模塊，同步 user_group 信息有誤問題 by tianyanli</li><li>fix: 修復蜂窩圖 legend 衝突問題</li><li>fix: 修復儀表盤如果選擇了絕對時間分享出去的圖的篩選時間顯示成了 UTC 時間問題</li><li>fix: 修復 Elasticsearch 源儀表盤圖不同索引的其他查詢條件相同導致序列名衝突問題</li><li>fix: 修復 Guest 用户無法查看儀表盤鏈接問題</li><li>fix: 快捷視圖修改動態過濾標籤後重新加載標籤值</li><li>fix: edge 模塊生成的告警事件 id 為空</li></ul><h3>最後</h3><p style="color:#333333; text-align:left">如果您覺得夜鶯項目不錯，歡迎到 github：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fccfos%2Fnightingale" target="_blank">https://github.com/ccfos/nightingale</a><span>&nbsp;</span>給我們一顆小 🌟🌟<span>&nbsp;</span><code>:-)</code></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 12 Oct 2023 00:06:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261542/nightingale-release-v6-3-0</guid>
            <link>https://www.oschina.net/news/261542/nightingale-release-v6-3-0</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[KCL 社區開源雙週報 | 更多 Kubernetes 模型和 IDE 插件功能支持!]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><img alt="" src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/751c1f01c30049ae95a0ed823adca32b~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1127&amp;h=435&amp;s=19510&amp;e=png&amp;a=1&amp;b=cee5bf" referrerpolicy="no-referrer"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkcl-lang" target="_blank">KCL</a> 是一個開源的基於約束的記錄及函數語言並通過成熟的編程語言技術和實踐來改進對大量繁雜配置比如雲原生 Kubernetes 配置場景的編寫，致力於構建圍繞配置的更好的模塊化、擴展性和穩定性，更簡單的邏輯編寫，以及更簡單的自動化和生態工具集成。</p><p>本欄目將會雙週更新 KCL 語言社區最新動態，包括功能、官網更新和最新的社區動態等，幫助大家更好地瞭解 KCL 社區！</p><p><em><strong>KCL 官網：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fkcl-lang.io%2F" target="_blank">https://kcl-lang.io</a></strong></em></p><h2>內容概述</h2><p>感謝所有貢獻者過去兩週 (2023 09.07 - 10.11) 的傑出工作，以下是重點合併內容概述</p><p><strong>🔧 語言及工具鏈更新</strong></p><ul><li>KCL v0.6.0 於 9.15 發佈，更新內容包括語言、工具鏈、社區集成，詳細內容請查看 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2Ff6RCZqxS2iliRGIz0036yA" target="_blank">https://mp.weixin.qq.com/s/f6RCZqxS2iliRGIz0036yA</a></li><li>KCL IDE 更新 - 支持對標準庫和內置函數的懸停提示，支持對 KCL 代碼錯誤的快速修復；發佈適配 Intellij IDEA 2023.2 的插件版本</li><li>KCL 包管理工具 KPM 更新 - kpm run 支持編譯 KCL 文件，並集成了導入工具</li><li>KCL 文檔工具更新 - 支持將 docstring Examples 章節輸出到文檔</li><li>KCL 語言更新 - 優化了一些錯誤信息的輸出，部分的錯誤信息中增加了修復建議</li></ul><p><strong>📰 官網和用例更新</strong></p><ul><li>KCL 官網新增 v0.6.0 文檔版本</li><li>KCL 模型新增容器、服務和 Pod Security Policy (PSP) 相關的配置編輯、校驗 20 個 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkcl-lang%2Fkrm-kcl%2Ftree%2Fmain%2Fexamples" target="_blank">https://github.com/kcl-lang/krm-kcl/tree/main/examples</a></li></ul><h2>特別鳴謝</h2><p>以下排名不分先後</p><ul><li>感謝 @jakezhu9 對 KCL Import 工具 Terraform Schema 到 KCL Schema 轉換的貢獻 🙌 <em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkcl-lang%2Fkcl-go%2Fpull%2F152" target="_blank">https://github.com/kcl-lang/kcl-go/pull/152</a></em></li><li>感謝 @jakezhu9 對 kpm 集成 Import 工具的貢獻 🙌 <em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkcl-lang%2Fkpm%2Fpull%2F194" target="_blank">https://github.com/kcl-lang/kpm/pull/194</a></em></li><li>感謝 @zwpaper 對 KCL 文檔和 Tree Sitter Grammar 做出的貢獻 🙌 <em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkcl-lang%2Ftree-sitter-kcl%2Fpull%2F1" target="_blank">https://github.com/kcl-lang/tree-sitter-kcl/pull/1</a></em> 等</li><li>感謝 @mrgleeco, @ghpu, @steeling, @prahaladramji, @zwpaper 等在使用 KCL 及工具鏈過程中提出的寶貴反饋和討論 🙌</li></ul><h2>精選更新</h2><h3>KCL IDE 插件更新</h3><p>在最近的 0.6.0 發佈中，KCL IDE 插件增加了標準庫和 builtin 函數的懸停提示，新增支持對 KCL 代碼錯誤的快速修復。此外，還增加了 language Server 側的 e2e 測試及 konfig 倉庫的集成測試，以保障 IDE 插件的穩定迭代。在尚未發佈的版本中，還新增了 <code>kcl-language-server version</code> 子命令以輸出版本信息。歡迎升級、使用 —— KCL 在各個 IDE 平台的插件安裝方式請查看<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fkcl-lang.io%2Fdocs%2Fuser_docs%2Fgetting-started%2Finstall%2F%232-install-kcl-ide-extension" target="_blank">https://kcl-lang.io/docs/user_docs/getting-started/install/#2-install-kcl-ide-extension</a></p><p>&nbsp;</p><h4>IntelliJ 插件</h4><ul><li>IntelliJ 插件現已適配 2023.2+ 版本，您可以在下面的鏈接中下載安裝：</li></ul><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkcl-lang%2Fintellij-kcl%2Freleases" target="_blank">https://github.com/kcl-lang/intellij-kcl/releases</a></p><h3>KCL 包管理工具</h3><p>kpm run 支持編譯 KCL 文件，並集成了導入工具，同時增加了 —quiet 來屏蔽輸出日誌。</p><p><img alt="" src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/531a6725e8f740229e9337fccf6933d3~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1136&amp;h=816&amp;s=91588&amp;e=png&amp;b=faf9f9" referrerpolicy="no-referrer"></p><h3>KCL 語言更新</h3><p>在尚未發佈的版本中，KCL 的編譯命令優化了一些錯誤信息的輸出，部分的錯誤信息中增加了修復建議： <img alt="" src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9bf254b8f62241fc877c8bb4ffba9807~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1642&amp;h=190&amp;s=99725&amp;e=png&amp;b=fefefe" referrerpolicy="no-referrer"></p><h3>KCL 模型更新</h3><p>近幾周內，我們提供了更多針對容器、服務和 Pod Security Policy (PSP) 配置編輯及校驗的使用案例。您可參照對應的示例引入以上配置和校驗： <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkcl-lang%2Fkrm-kcl%2Ftree%2Fmain%2Fexamples" target="_blank">https://github.com/kcl-lang/krm-kcl/tree/main/examples</a></p><p>下面我們以 Kubectl KCL 插件和 disallow-svc-lb 模型進行説明，disallow-svc-lb 的作用是對 Service 資源進行校驗，不允許 Service 資源的類型設置為 <code>LoadBalancer</code>，編寫如下 YAML 文件 (manifests.yaml)：</p><pre><code>apiVersion: krm.kcl.dev/v1alpha1
kind: KCLRun
metadata:
  name: disallow-svc-lb
  annotations: 
    krm.kcl.dev/version: 0.0.1
    krm.kcl.dev/type: validation
    documentation: &gt;-
      A validation that prevents the creation of Service resources of type `LoadBalancer`
spec:
  source: oci://ghcr.io/kcl-lang/disallow-svc-lb
---
apiVersion: v1
kind: Service
metadata:
  name: my-service
spec:
  selector:
    app.kubernetes.io/name: MyApp
  ports:
    - name: http
      protocol: TCP
      port: 80
  type: LoadBalancer # 錯誤地設置了 LoadBalancer
</code></pre><p>通過 Kubectl KCL 工具在客户端進行資源驗證：</p><pre><code>kubectl kcl apply -f manifests.yaml
</code></pre><p>我們會得到如下結果：</p><pre><code>A validation that prevents the creation of Service resources of type `LoadBalancer`, for Service: my-service
</code></pre><h3>社區動態</h3><p>集成了 KCL 0.6 的 KusionStack 發佈 0.9 版本，詳細更新內容請查看：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FnZOHdmgcfOMRf0XUXfSJ-g" target="_blank">https://mp.weixin.qq.com/s/nZOHdmgcfOMRf0XUXfSJ-g</a></p><h3>活動預告</h3><h4>KCD 杭州站 10.21 日線下活動</h4><p>Kubernetes Community Days（KCD）杭州站將於 10.21 舉行線下活動，活動詳情及報名：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FrnNhmT4yoO66bGYNtFtG6g" target="_blank">https://mp.weixin.qq.com/s/rnNhmT4yoO66bGYNtFtG6g</a></p><h4>KCL 開源雙週會</h4><p>近期 KCL 開源雙週會將於 10.12 進行，歡迎社區小夥伴踴躍參與、交流：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkcl-lang%2Fcommunity%2Fdiscussions%2F8" target="_blank">https://github.com/kcl-lang/community/discussions/8</a></p><p>點擊鏈接入會，或添加至會議列表： <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmeeting.tencent.com%2Fdm%2FHc6sNpqTWnPb" target="_blank">https://meeting.tencent.com/dm/Hc6sNpqTWnPb</a></p><p>#騰訊會議：778-2381-6338</p><p>複製該信息，打開手機騰訊會議即可參與</p><h2>其他資源</h2><p>❤️ 感謝所有 KCL 用户和社區小夥伴在社區中提出的寶貴反饋與建議。預計 11 月底我們會正式發佈 KCL v0.7 新版本，敬請期待!</p><p>更多其他資源請參考：</p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fkcl-lang.io%2F" target="_blank">KCL 網站</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fkusionstack.io%2F" target="_blank">KusionStack 網站</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fkcl-lang.io%2Fdocs%2Fcommunity%2Frelease-policy%2Froadmap" target="_blank">KCL 2023 路線規劃</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkcl-lang%2Fkcl%2Fmilestone%2F7" target="_blank">KCL v0.7.0 Milestone</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkcl-lang%2Fkcl%2Fissues" target="_blank">KCL Github Issues</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Forgs%2Fkcl-lang%2Fdiscussions" target="_blank">KCL Github Discussion</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkcl-lang%2Fcommunity" target="_blank">KCL Community</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Wed, 11 Oct 2023 12:38:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261492</guid>
            <link>https://www.oschina.net/news/261492</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[中興通訊「星雲研發大模型」：AI 編程助手、1000 億 token]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>2023 年 10 月 11 日-13 日，在中國移動全球合作伙伴大會舉辦期間，中興通訊「星雲研發大模型」亮相，<strong>旨在輔助開發人員進行需求分析、產品設計、編程、測試、版本部署等</strong>。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-0ea8f6611738c94f383a5186925f9339ae3.png" referrerpolicy="no-referrer"></p><p>據介紹，<strong>「星雲研發大模型」支持白名單機制有效控制使用範圍</strong>，以及代碼特徵值識別有效識別敏感代碼片段、敏感詞識別機制可實時監測並攔截敏感內容，還有後台審計機制可完整回溯安全事件等。</p><p>中興通訊表示，2023 年 4 月，「星雲研發大模型」使用啓動，截至目前，<strong>日活人數達 1.2 萬人，&nbsp;代碼採納率達 40%~45%，編碼提效 30%，整體研發提效 10%</strong>。</p><p>中興通訊將領域數據、Know-How 知識積累、數十萬篇通信領域技術文檔和<strong>1000 億 token</strong>的無線 / 核心網 / 雲代碼語料等注入大模型，進行增量預訓練，使用並行訓練框架。</p><p>中興通訊稱：「自研部署方案使用動態 batch 策略、PagedAttention 技術，結合無損模型量化，吞吐量大幅提升，<strong>單 GPU（A800）達到 1500tokens / s，僅使用 4 張 GPU 卡（A800）可滿足超千人使用需求</strong>。對比業界常規的部署方案，單 GPU 吞吐量分別提升 10 + 倍和 20 + 倍；結合 int4 量化技術，在模型精度不下降情況下，模型大小和顯存使用量均下降一半。」</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 11 Oct 2023 09:48:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261477</guid>
            <link>https://www.oschina.net/news/261477</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[開源中國發布大模型技術圖譜（LLM Tech Map）]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>LLM 技術圖譜 (LLM Tech Map) 是將 LLM 相關技術進行系統化和圖形化的呈現，此圖譜主要特點是「<strong>專注於技術人視角</strong>」，不求從 LLM 產業角度匯聚信息，而是希望讓從事相關工作或是想了解 LLM 的技術人有一個快速感知。</p><p><span style="color:#e67e22"><strong>核心價值：幫助技術人快速瞭解 LLM 的核心技術和關鍵方向。</strong></span></p><p style="text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-89419d5edbf373da239902e38c150921bc4.png" referrerpolicy="no-referrer"></p><p>LLM 技術圖譜（LLM Tech Map）從<strong>基礎設施</strong>、<strong>大模型</strong>、<strong>Agent</strong>、<strong>AI 編程</strong>、<strong>工具和平台</strong>，以及<strong>算力</strong>幾個方面，為開發者整理了當前 LLM 中最為熱門和硬核的技術領域以及相關的軟件產品和開源項目。</p><hr><h3>基礎設施</h3><p>LLM 技術圖譜（LLM Tech Map）的基礎設施部分主要包括以下幾個方面：</p><ul><li>向量數據庫：向量數據庫是專門用於存儲和檢索向量數據的數據庫，它可以為 LLM 提供高效的存儲和檢索能力。</li><li>數據庫向量支持：傳統數據庫通常不支持向量數據的存儲和檢索，數據庫向量支持可以為傳統數據庫添加向量數據的存儲和檢索能力。</li><li>大模型框架、微調 (Fine Tuning)：針對大模型的開發。</li><li>大模型訓練平台與工具</li></ul><h3>大模型</h3><p>LLM 技術圖譜（LLM Tech Map）的大模型部分主要包括以下幾個方面：</p><ul><li>備案上線的中國大模型：有牌照提供服務的大模型，需要注意的是大模型和相應的產品多半名稱不同。</li><li>知名大模型：在全球範圍內，已經發布了多款知名大模型，這些大模型在各個領域都取得了突破性的進展。</li><li>知名大模型應用：LLM 已經在多種應用場景中得到了應用，包括文本生成、機器翻譯、問答、自然語言推理等。</li></ul><h3>AI Agent（LLM Agent）</h3><p>LLM Agent 是指基於 LLM 技術構建的智能代理，它可以用於各種任務，比如讓機器與 ChatGPT 交互，一層一層挖掘信息，自動化完成任務；比如由機器人構成的虛擬小鎮。</p><h3>AI 編程</h3><p>讓 LLM 幫你編寫代碼。</p><h3>工具和平台</h3><p>LLM 技術圖譜（LLM Tech Map）的工具和平台部分主要包括以下幾個方面：</p><ul><li>LLMOps：簡單點説（大家當前在説的），就是「快速從大模型到應用」。</li><li>大模型聚合平台：匯聚大模型能力，提供服務。</li><li>開發工具：其它開發相關的 LLM 工具。</li></ul><h3>算力</h3><p>LLM 模型的訓練和部署需要大量的算力，算力是 LLM 技術發展的關鍵因素。</p><hr><p><strong>LLM Tech Map 已託管到 Gitee：<a href="https://gitee.com/oschina/llm-map" target="_blank">https://gitee.com/oschina/llm-map</a></strong></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 11 Oct 2023 09:11:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261467/oschina-llm-map</guid>
            <link>https://www.oschina.net/news/261467/oschina-llm-map</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[SiFive 推出兩款新型高性能 RISC-V 處理器]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">RISC-V 芯片廠商 SiFive <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.sifive.com%2Fpress%2Fsifive-announces-differentiated-solutions-for-generative" target="_blank">宣佈</a>推出兩款新產品 SiFive Performance P870 CPU 和 SiFive Intelligence X390，主要面向高性能計算和 AI/ML 應用。</span></p><p style="text-align:start"><span style="color:#000000">SiFive Performance P870 和 SiFive Intelligence X390 提供低功耗、計算密度和矢量計算能力，旨在為消費電子、汽車技術和基礎設施領域的數據密集型計算應用程序提供顯着的性能提升。</span></p><p style="text-align:start"><span style="color:#000000">SiFive 高管強調了該公司致力於推動高性能 RISC-V 創新並縮小與其他指令集架構的差距。並表示，消費電子和基礎設施等領域對半導體的需求不斷增長，推動了 RISC-V 生態系統的快速擴張。</span></p><p style="text-align:start"><img height="265" src="https://oscimg.oschina.net/oscnet/up-f6db62d251fa51cb784cdb2fef741ac53e2.png" width="500" referrerpolicy="no-referrer"></p><p style="text-align:start"><img height="254" src="https://oscimg.oschina.net/oscnet/up-44006158dd13e95de661c64ecf3bb99eddc.png" width="500" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000"><span style="background-color:#ffffff"><strong>SiFive </strong></span><strong>Performance</strong><span style="background-color:#ffffff"><strong> P870</strong></span></span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000"><span style="background-color:#ffffff">P870 </span>專為高性能消費類應用而設計，也可與數據中心的矢量處理器一起使用。<span style="background-color:#ffffff">在指令集架構可用性、吞吐量、並行性和內存帶寬方面</span>為 RISC-V 性能樹立了新標準。</span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000"><span style="background-color:#ffffff">P870 具有一個&nbsp;</span></span><span style="background-color:#ffffff; color:#000000">6 發射亂序執行核心</span><span style="color:#000000"><span style="background-color:#ffffff">和一個共享集羣高速緩存。與上一代 SiFive 性能處理器相比，P870 峯值單線程性能提升了 50% (specINT2k6)，最多可支持 32 </span>核集羣<span style="background-color:#ffffff">。</span></span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000"><span style="background-color:#ffffff">此外，P870 完全兼容 Google 對 RISC-V 上 Android 的平台要求，還提供其他經過驗證的 SiFive 功能：</span>128b VLEN 長度的 RISC-V 矢量 (RVV)、矢量加密和 Hypervisor 擴展、IOMMU 和先進中斷架構 (AIA)、非包含性 (non-inclusive) 三級緩存、經過驗證的 RISC-V WorldGuard 安全設計。</span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000"><span style="background-color:#ffffff"><strong>SiFive </strong></span><strong>Intelligence&nbsp;</strong><span style="background-color:#ffffff"><strong>X390</strong></span></span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000">SiFive Intelligence X390 以其前身 SiFive Intelligence X280 為基礎，<span style="background-color:#ffffff">憑藉單核配置、雙倍矢量長度和雙矢量 ALU，將矢量計算性能提高了 4 倍，並將持續數據帶寬量增加了 4 倍。</span></span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000"><span style="background-color:#ffffff">藉助 SiFive 矢量協處理器接口擴展 (VCIX)，公司可以輕鬆添加自己的矢量指令和/或加速硬件，並允許用户通過自定義指令大幅提高性能。</span></span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000"><span style="background-color:#ffffff">功能包括：1024 位 VLEN、512 位 DLEN、單/雙矢量 ALU、VCIX（2048 位輸出，1024 位輸入）。</span></span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000">「<span style="background-color:#ffffff">將 P870 高性能通用計算 SoC 與由 X390 和客户 AI 硬件引擎組成的高性能 NPU 集羣結合在一起，為產品設計人員提供高度靈活、低功耗和可編程的解決方案，併為複雜工作負載提供卓越的計算密度。</span>」</span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000">SiFive 強調了客户對這些組合解決方案的濃厚興趣，並表示其中一些客户使用高性能 SiFive 產品在芯片開發和商業化方面取得了成功。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 11 Oct 2023 09:07:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261465/sifive-two-new-high-performance-risc-v-processors</guid>
            <link>https://www.oschina.net/news/261465/sifive-two-new-high-performance-risc-v-processors</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Gitee 推薦 | 高性能輕量級代理庫 ProxyDispatch]]>
            </title>
            <description>
                <![CDATA[<h1><a id="user-content-proxydispatch" class="anchor" href="https://gitee.com/dotnetchina/ProxyDispatch#proxydispatch"></a>ProxyDispatch</h1><p><a href="https://gitee.com/dotnetchina/ProxyDispatch/blob/master/LICENSE"><img src="https://img.shields.io/badge/license-MIT-orange?cacheSeconds=10800" alt="license" referrerpolicy="no-referrer"></a><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.nuget.org%2Fpackages%2FProxyDispatch"><img src="https://img.shields.io/nuget/v/ProxyDispatch.svg?cacheSeconds=10800" alt="nuget" referrerpolicy="no-referrer"></a><a href="https://gitee.com/dotnetchina"><img src="https://img.shields.io/badge/organization-dotNET%20China-yellow?cacheSeconds=10800" alt="dotNET China" referrerpolicy="no-referrer"></a></p><p>基於 DispatchProxy 和 Roslyn 實現的高性能輕量級代理庫，支持類、接口、同步方法、異步方法攔截。</p><h2><a id="user-content-安裝" class="anchor" href="https://gitee.com/dotnetchina/ProxyDispatch#%E5%AE%89%E8%A3%85"></a>安裝</h2><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="n">dotnet</span><span class="w"></span><span class="nx">add</span><span class="w"></span><span class="nx">package</span><span class="w"></span><span class="nx">ProxyDispatch</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><h2><a id="user-content-快速入門" class="anchor" href="https://gitee.com/dotnetchina/ProxyDispatch#%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8"></a>快速入門</h2><p>我們在<a href="https://gitee.com/link?target=https%3A%2F%2Ffurion.baiqian.ltd%2Fdocs%2Fjob%2F">主頁</a>上有不少例子，這是讓您入門的第一個：</p><ol><li>定義代理攔截器，並實現 <code>AspectDispatchProxy</code> 抽象方法：</li></ol><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="k">public</span><span class="k">class</span><span class="nc">YourClassProxy</span><span class="p">:</span><span class="n">AspectDispatchProxy</span></span><span id="LC2" class="line"><span class="p">{</span></span><span id="LC3" class="line"><span class="c1">// 攔截同步</span></span><span id="LC4" class="line"><span class="k">public</span><span class="k">override</span><span class="kt">object</span><span class="nf">Invoke</span><span class="p">(</span><span class="n">Invocation</span><span class="n">invocation</span><span class="p">)</span></span><span id="LC5" class="line"><span class="p">{</span></span><span id="LC6" class="line"><span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"~~~調用同步方法：</span><span class="p">{</span><span class="n">invocation</span><span class="p">.</span><span class="n">Method</span><span class="p">}</span><span class="s">"</span><span class="p">);</span></span><span id="LC7" class="line"><span class="kt">var</span><span class="n">result</span><span class="p">=</span><span class="n">invocation</span><span class="p">.</span><span class="nf">Proceed</span><span class="p">();</span></span><span id="LC8" class="line"><span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"~~~調用同步方法結束，返回值：</span><span class="p">{</span><span class="n">result</span><span class="p">}</span><span class="s">"</span><span class="p">);</span></span><span id="LC9" class="line"><span class="k">return</span><span class="n">result</span><span class="p">;</span></span><span id="LC10" class="line"><span class="p">}</span></span><span id="LC11" class="line"></span><span id="LC12" class="line"><span class="c1">// 攔截異步</span></span><span id="LC13" class="line"><span class="k">public</span><span class="k">override</span><span class="k">async</span><span class="n">Task</span><span class="nf">InvokeAsync</span><span class="p">(</span><span class="n">Invocation</span><span class="n">invocation</span><span class="p">)</span></span><span id="LC14" class="line"><span class="p">{</span></span><span id="LC15" class="line"><span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"~~~調用異步 Task 方法：</span><span class="p">{</span><span class="n">invocation</span><span class="p">.</span><span class="n">Method</span><span class="p">}</span><span class="s">"</span><span class="p">);</span></span><span id="LC16" class="line"><span class="k">await</span><span class="n">invocation</span><span class="p">.</span><span class="nf">ProceedAsync</span><span class="p">();</span></span><span id="LC17" class="line"><span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"~~~調用異步 Task 方法結束"</span><span class="p">);</span></span><span id="LC18" class="line"><span class="p">}</span></span><span id="LC19" class="line"></span><span id="LC20" class="line"><span class="c1">// 攔截異步帶返回值</span></span><span id="LC21" class="line"><span class="k">public</span><span class="k">override</span><span class="k">async</span><span class="n">Task</span><span class="p">&lt;</span><span class="n">T</span><span class="p">&gt;</span><span class="n">InvokeAsync</span><span class="p">&lt;</span><span class="n">T</span><span class="p">&gt;(</span><span class="n">Invocation</span><span class="n">invocation</span><span class="p">)</span></span><span id="LC22" class="line"><span class="p">{</span></span><span id="LC23" class="line"><span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"~~~調用異步 Task&lt;T&gt; 方法：</span><span class="p">{</span><span class="n">invocation</span><span class="p">.</span><span class="n">Method</span><span class="p">}</span><span class="s">"</span><span class="p">);</span></span><span id="LC24" class="line"><span class="kt">var</span><span class="n">result</span><span class="p">=</span><span class="k">await</span><span class="n">invocation</span><span class="p">.</span><span class="n">ProceedAsync</span><span class="p">&lt;</span><span class="n">T</span><span class="p">&gt;();</span></span><span id="LC25" class="line"><span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"~~~調用異步 Task&lt;T&gt; 方法結束，返回值：</span><span class="p">{</span><span class="n">result</span><span class="p">}</span><span class="s">"</span><span class="p">);</span></span><span id="LC26" class="line"><span class="k">return</span><span class="n">result</span><span class="p">;</span></span><span id="LC27" class="line"><span class="p">}</span></span><span id="LC28" class="line"><span class="p">}</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><ol start="2"><li>定義需要攔截的類和接口：</li></ol><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="k">public</span><span class="k">class</span><span class="nc">YourClass</span><span class="p">:</span><span class="n">IYourClass</span></span><span id="LC2" class="line"><span class="p">{</span></span><span id="LC3" class="line"><span class="c1">// 同步方法</span></span><span id="LC4" class="line"><span class="k">public</span><span class="kt">string</span><span class="nf">SyncMethod</span><span class="p">(</span><span class="kt">string</span><span class="n">str</span><span class="p">)</span></span><span id="LC5" class="line"><span class="p">{</span></span><span id="LC6" class="line"><span class="k">return</span><span class="n">str</span><span class="p">;</span></span><span id="LC7" class="line"><span class="p">}</span></span><span id="LC8" class="line"></span><span id="LC9" class="line"><span class="c1">// 異步方法</span></span><span id="LC10" class="line"><span class="k">public</span><span class="k">async</span><span class="n">Task</span><span class="nf">AsyncMethod</span><span class="p">()</span></span><span id="LC11" class="line"><span class="p">{</span></span><span id="LC12" class="line"><span class="k">await</span><span class="n">Task</span><span class="p">.</span><span class="n">CompletedTask</span><span class="p">;</span></span><span id="LC13" class="line"><span class="p">}</span></span><span id="LC14" class="line"></span><span id="LC15" class="line"><span class="c1">// 異步方法帶返回值</span></span><span id="LC16" class="line"><span class="k">public</span><span class="k">async</span><span class="n">Task</span><span class="p">&lt;</span><span class="kt">int</span><span class="p">&gt;</span><span class="nf">AsyncMethodWithResult</span><span class="p">(</span><span class="kt">int</span><span class="n">num</span><span class="p">)</span></span><span id="LC17" class="line"><span class="p">{</span></span><span id="LC18" class="line"><span class="k">await</span><span class="n">Task</span><span class="p">.</span><span class="nf">Delay</span><span class="p">(</span><span class="m">10</span><span class="p">);</span></span><span id="LC19" class="line"><span class="k">return</span><span class="n">num</span><span class="p">+</span><span class="m">100</span><span class="p">;</span></span><span id="LC20" class="line"><span class="p">}</span></span><span id="LC21" class="line"></span><span id="LC22" class="line"><span class="c1">// 泛型方法</span></span><span id="LC23" class="line"><span class="k">public</span><span class="n">T</span><span class="n">GenericMethod</span><span class="p">&lt;</span><span class="n">T</span><span class="p">&gt;(</span><span class="n">T</span><span class="n">x</span><span class="p">)</span></span><span id="LC24" class="line"><span class="p">{</span></span><span id="LC25" class="line"><span class="k">return</span><span class="n">x</span><span class="p">;</span></span><span id="LC26" class="line"><span class="p">}</span></span><span id="LC27" class="line"><span class="p">}</span></span><span id="LC28" class="line"></span><span id="LC29" class="line"><span class="k">public</span><span class="k">interface</span><span class="nc">IYourClass</span></span><span id="LC30" class="line"><span class="p">{</span></span><span id="LC31" class="line"><span class="c1">// 同步方法</span></span><span id="LC32" class="line"><span class="kt">string</span><span class="nf">SyncMethod</span><span class="p">(</span><span class="kt">string</span><span class="n">str</span><span class="p">);</span></span><span id="LC33" class="line"></span><span id="LC34" class="line"><span class="c1">// 異步方法</span></span><span id="LC35" class="line"><span class="n">Task</span><span class="nf">AsyncMethod</span><span class="p">();</span></span><span id="LC36" class="line"></span><span id="LC37" class="line"><span class="c1">// 異步方法帶返回值</span></span><span id="LC38" class="line"><span class="n">Task</span><span class="p">&lt;</span><span class="kt">int</span><span class="p">&gt;</span><span class="nf">AsyncMethodWithResult</span><span class="p">(</span><span class="kt">int</span><span class="n">num</span><span class="p">);</span></span><span id="LC39" class="line"></span><span id="LC40" class="line"><span class="c1">// 泛型方法</span></span><span id="LC41" class="line"><span class="n">T</span><span class="n">GenericMethod</span><span class="p">&lt;</span><span class="n">T</span><span class="p">&gt;(</span><span class="n">T</span><span class="n">x</span><span class="p">);</span></span><span id="LC42" class="line"><span class="p">}</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><ol start="3"><li>創建攔截代理對象：</li></ol><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="c1">// 創建攔截對象</span></span><span id="LC2" class="line"><span class="kt">var</span><span class="n">yourClass</span><span class="p">=</span><span class="n">AspectDispatchProxy</span><span class="p">.</span><span class="n">Decorate</span><span class="p">&lt;</span><span class="n">IYourClass</span><span class="p">,</span><span class="n">YourClassProxy</span><span class="p">&gt;(</span><span class="k">new</span><span class="nf">YourClass</span><span class="p">());</span></span><span id="LC3" class="line"></span><span id="LC4" class="line"><span class="n">yourClass</span><span class="p">.</span><span class="nf">SyncMethod</span><span class="p">(</span><span class="s">"百小僧"</span><span class="p">);</span></span><span id="LC5" class="line"><span class="k">await</span><span class="n">yourClass</span><span class="p">.</span><span class="nf">AsyncMethod</span><span class="p">();</span></span><span id="LC6" class="line"><span class="k">await</span><span class="n">yourClass</span><span class="p">.</span><span class="nf">AsyncMethodWithResult</span><span class="p">(</span><span class="m">100</span><span class="p">);</span></span><span id="LC7" class="line"><span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"泛型方法 GenericMethod 調用，返回值："</span><span class="p">+</span><span class="n">yourClass</span><span class="p">.</span><span class="nf">GenericMethod</span><span class="p">(</span><span class="s">"Furion"</span><span class="p">));</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><p>輸出如下：</p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line">~~~調用同步方法：System.String SyncMethod<span class="o">(</span>System.String<span class="o">)</span></span><span id="LC2" class="line">~~~調用同步方法結束，返回值：百小僧</span><span id="LC3" class="line">~~~調用異步 Task 方法：System.Threading.Tasks.Task AsyncMethod<span class="o">()</span></span><span id="LC4" class="line">~~~調用異步 Task 方法結束</span><span id="LC5" class="line">~~~調用異步 Task&lt;T&gt; 方法：System.Threading.Tasks.Task<span class="sb">`</span>1[System.Int32] AsyncMethodWithResult<span class="o">(</span>Int32<span class="o">)</span></span><span id="LC6" class="line">~~~調用異步 Task&lt;T&gt; 方法結束，返回值：200</span><span id="LC7" class="line">泛型方法 GenericMethod 調用，返回值：Furion</span></pre><div class="markdown-code-block-copy-btn"></div></div></div><ol start="4"><li>還可以直接代理類，無需接口：</li></ol><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="c1">// 創建攔截對象（無依賴接口）</span></span><span id="LC2" class="line"><span class="kt">var</span><span class="n">yourClassNoInterface</span><span class="p">=</span><span class="n">AspectDispatchProxy</span><span class="p">.</span><span class="n">DecorateClass</span><span class="p">&lt;</span><span class="n">YourClass</span><span class="p">,</span><span class="n">YourClassProxy</span><span class="p">&gt;(</span><span class="k">new</span><span class="nf">YourClass</span><span class="p">());</span></span><span id="LC3" class="line"></span><span id="LC4" class="line"><span class="n">yourClassNoInterface</span><span class="p">.</span><span class="nf">SyncMethod</span><span class="p">(</span><span class="s">"百小僧"</span><span class="p">);</span></span><span id="LC5" class="line"><span class="k">await</span><span class="n">yourClassNoInterface</span><span class="p">.</span><span class="nf">AsyncMethod</span><span class="p">();</span></span><span id="LC6" class="line"><span class="k">await</span><span class="n">yourClassNoInterface</span><span class="p">.</span><span class="nf">AsyncMethodWithResult</span><span class="p">(</span><span class="m">100</span><span class="p">);</span></span><span id="LC7" class="line"><span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"泛型方法 GenericMethod 調用，返回值："</span><span class="p">+</span><span class="n">yourClassNoInterface</span><span class="p">.</span><span class="nf">GenericMethod</span><span class="p">(</span><span class="s">"Furion"</span><span class="p">));</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><p><a href="https://gitee.com/dotnetchina/ProxyDispatch">更多文檔</a></p><h2><a id="user-content-文檔" class="anchor" href="https://gitee.com/dotnetchina/ProxyDispatch#%E6%96%87%E6%A1%A3"></a>文檔</h2><p>您可以在<a href="https://gitee.com/dotnetchina/ProxyDispatch">主頁</a>找到 ProxyDispatch 文檔。</p><h2><a id="user-content-貢獻" class="anchor" href="https://gitee.com/dotnetchina/ProxyDispatch#%E8%B4%A1%E7%8C%AE"></a>貢獻</h2><p>該存儲庫的主要目的是繼續發展 ProxyDispatch 核心，使其更快、更易於使用。ProxyDispatch 的開發在 <a href="https://gitee.com/dotnetchina/ProxyDispatch">Gitee</a> 上公開進行，我們感謝社區貢獻錯誤修復和改進。</p><h2><a id="user-content-許可證" class="anchor" href="https://gitee.com/dotnetchina/ProxyDispatch#%E8%AE%B8%E5%8F%AF%E8%AF%81"></a>許可證</h2><p>ProxyDispatch 採用 <a href="https://gitee.com/dotnetchina/ProxyDispatch/blob/master/LICENSE">MIT</a> 開源許可證。</p>]]>
            </description>
            <pubDate>Wed, 11 Oct 2023 08:03:00 GMT</pubDate>
            <guid isPermaLink="false">https://gitee.com/dotnetchina/ProxyDispatch</guid>
            <link>https://gitee.com/dotnetchina/ProxyDispatch</link>
        </item>
        <item>
            <title>
                <![CDATA[PgHero —— PostgreSQL 性能儀錶板]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="text-align:start">pghero&nbsp;是一個&nbsp;<span><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>Postgres 的性能儀錶板。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:start"><span><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span><a href="https://pghero.dokkuapp.com/">查看實際效果</a></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:start"><span><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span><img alt="" height="294" src="https://static.oschina.net/uploads/space/2023/0912/163042_vtOX_4252687.png" width="500" referrerpolicy="no-referrer"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:start"><span><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>PgHero 可作為 Docker </span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="background-color:#ffffff; color:#1f2328">image</span><span><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>、Linux 軟件包和 Rails 引擎使用。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:start"><span><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>選擇你喜歡的安裝方法即可開始。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><ul><li><a href="https://github.com/ankane/pghero/blob/master/guides/Docker.md">Docker</a></li><li><a href="https://github.com/ankane/pghero/blob/master/guides/Linux.md">Linux</a></li><li><a href="https://github.com/ankane/pghero/blob/master/guides/Rails.md">Rails</a></li></ul></div>
                                                                ]]>
            </description>
            <pubDate>Wed, 11 Oct 2023 08:00:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/p/pghero</guid>
            <link>https://www.oschina.net/p/pghero</link>
        </item>
        <item>
            <title>
                <![CDATA[23 歲博士生修復 Firefox 中的 22 年「幽靈老 Bug」]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>2002 年 6 月 2 日，<strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugzilla.mozilla.org%2Fshow_bug.cgi%3Fid%3D148624" target="_blank">Firefox 用户報告了一個 bug</a></strong>：當鼠標懸浮在工具欄圖標上時會展示相關提示（該項特性名為 '<strong>Tooltips</strong>'）。如果此時將瀏覽器從前台切換到後台，該提示會仍然留在前台——就像幽靈一樣。而擺脱這一惱人提示的唯一方法是再次將瀏覽器從後台切換到前台，然後將鼠標從工具欄上移開。</p><p><img src="https://static.oschina.net/uploads/space/2023/1012/144535_rfv0_2720166.png" referrerpolicy="no-referrer"></p><p>該 bug 的具體復現如下圖所示：</p><blockquote><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-1072dc8473f17b2efeb96b6ea9187bc9c42.png" referrerpolicy="no-referrer"></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-e043a3cb01187401398a4118bd1e5ef854b.png" referrerpolicy="no-referrer"></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-20a34ca97d7a8aa279fbc5404fabcda5e9c.png" referrerpolicy="no-referrer"></p></blockquote><p>22 年後 Mozilla 終於為 Firefox 修復了該 bug，對應的 Bugzilla 報告也終於關閉了。</p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugzilla.mozilla.org%2Fshow_bug.cgi%3Fid%3D148624" target="_blank"><img src="https://static.oschina.net/uploads/space/2023/1012/143953_bmr4_2720166.png" referrerpolicy="no-referrer"></a></p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Farstechnica.com%2Fgadgets%2F2023%2F10%2F22-year-old-firefox-tooltip-bug-fixed-in-a-few-lines-offering-hope-to-us-all%2F" target="_blank">根據科技媒體 arstechnica 的報道</a>，幫助修復該 bug 的是斯坦福大學的一年級電機工程博士生 Yifan Zhu，這也是他第一次向開源項目貢獻補丁。</p><p><img src="https://static.oschina.net/uploads/space/2023/1012/145359_cKbi_2720166.png" referrerpolicy="no-referrer"></p><p><em>▲&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ffanzhuyifan.github.io%2F" target="_blank">https://fanzhuyifan.github.io/</a></em></p><p>Zhu 出生於 1999 年，也就是該 bug 首次報告三年之前。他是在 Linux 上使用郵件客户端 Thunderbird 時首次遭遇該 bug，認為這個 bug 太惱人了。他試着報告該 bug，結果發現它已經存在了 22 年之久，至今還沒有修復，可能是因為它是一個小問題也不會導致崩潰處理的優先度不高。</p><p>畢竟這個 bug 僅僅影響到非常小區域的 UI，用户順手就能臨時處理，而且有很多其他比它更嚴重的 bug 在排隊等待解決，所以這個 bug 就這樣變為了「陳年老 Bug」。</p><p>於是他決定自己來修復。他知道如何編程，也正好處於博士生開始前的暑假，<strong>但此前從未向開源項目貢獻代碼，也從未在 Firefox 之類的複雜項目上工作過</strong>。</p><p>雖然衝勁十足，但 Zhu 剛開始的修 bug 之路算不上順利。他先是在整個代碼庫裏搜索 '<strong>tooltip</strong>'，然後檢查可能存在錯誤的候選內容，並插入調試打印語句跟蹤執行。這樣的工作非常耗費時間。</p><p>不過正是通過這樣的「笨方法」，Zhu 最後定位到了問題所在。當鼠標懸浮在某個元素上時，一個計時器會啓動去顯示 tooltip，在鼠標移出事件後計時器將會取消。但使用快捷鍵切換窗口或虛擬桌面時，Firefox 沒有取消計時器。Zhu 遞交了補丁，<strong>讓 tooltip 的顯示基於 Firefox 失去焦點而不是鼠標離開應用</strong>。</p><p>幾個小時後，Zhu 收到 Mozilla 資深軟件工程師 Emilio Cobos Álvarez 的回覆，他幫助完善了 Zhu 的補丁並提交到代碼庫中，並表示 Zhu 的第一個 Firefox 補丁令人印象深刻。</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 11 Oct 2023 07:07:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261435/22-year-old-firefox-tooltip-bug-fixed</guid>
            <link>https://www.oschina.net/news/261435/22-year-old-firefox-tooltip-bug-fixed</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
    </channel>
</rss>
