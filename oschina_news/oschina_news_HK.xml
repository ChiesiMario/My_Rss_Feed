<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[開源中國-最新資訊]]>
        </title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="https://rsshub.app/oschina/news" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[開源中國-最新資訊 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Wed, 24 Jan 2024 05:10:50 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[如何估算開源軟件的實際價值？]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>哈佛商學院戰略小組 (Harvard Business School Strategy Unit) 近日發表論文<em><strong>《The Value of Open Source Software》</strong>，</em>深入研究瞭如何估算開源軟件的實際價值。</p><blockquote><p><img src="https://oscimg.oschina.net/oscnet/up-3ca34d03d4b061341454ff8132f8928095d.png" referrerpolicy="no-referrer"></p><p><u><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpapers.ssrn.com%2Fsol3%2Fpapers.cfm%3Fabstract_id%3D4693148" target="_blank">https://papers.ssrn.com/sol3/papers.cfm?abstract_id=4693148</a></em></u></p></blockquote><p>論文提到，開源軟件 (OSS) 作為一種全球公共產品，在經濟中發揮着至關重要的作用，也是我們今天使用的大多數技術的基礎。然而，由於開源軟件的非貨幣性質和缺乏集中使用跟蹤，很難衡量其價值。因此在經濟計量中，開源軟件在很大程度上仍未被計算在內。</p><p>儘管以前的研究已經估算了重新創建這種軟件的供應方成本，但由於缺乏數據，無法估算出開源軟件創造的更大的需求方（使用）價值。</p><p>為了瞭解廣泛使用的開源軟件的全部經濟和社會價值，研究人員利用了兩個互補來源的獨立全球數據，這些數據記錄了全球數百萬企業使用開源軟件的情況。</p><p>他們首先通過計算<strong>重新創建一次最廣泛使用的開源軟件的成本來估算供應方價值</strong>。然後，<strong>我們根據每個使用該軟件的公司的替代價值計算需求方價值</strong>——如果沒有開源軟件，這些公司就需要在內部自行開發該軟件。</p><p>按此估算，被廣泛使用的開源軟件的供應方價值為 41.5 億美元，而需求方的價值要大得多，達到 8.8 萬億美元。</p><p>研究人員發現，如果沒有開源軟件，企業在軟件方面的支出將是現在的 3.5 倍。在他們的樣本中，排名前 6 的編程語言佔開源軟件需求方價值的 84%。<strong>此外，96% 的需求方價值由僅 5% 的開源軟件開發者創造</strong>。</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 24 Jan 2024 03:02:50 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276494</guid>
            <link>https://www.oschina.net/news/276494</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Firefox 122.0 正式發佈]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Firefox 122.0 現已發佈，具體更新內容如下：</p><p><strong>New</strong></p><ul><li><p>Firefox 現在會在搜索引擎提供搜索建議時顯示圖像和描述。</p></li></ul><p><img height="214" src="https://oscimg.oschina.net/oscnet/up-4cbc89200801a7e727946349df3e26b39fc.png" width="700" referrerpolicy="no-referrer"></p><ul><li><p>翻譯功能提高了<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsupport.mozilla.org%2Fkb%2Fwebsite-translation" target="_blank">翻譯</a>網頁的質量。結果應該更加穩定。這解決了翻譯時頁面內容可能消失或交互式小部件可能損壞的問題。</p></li><li><p>Firefox 現在支持在 macOS 上創建和使用存儲在 iCloud Keychain 中的<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsupport.apple.com%2Fguide%2Fmac-help%2Fcreate-a-passkey-mchl4af65d1a%2Fmac" target="_blank">密鑰。</a></p></li><li><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.mozilla.org%2F" target="_blank">來自 Firefox Suggest 的 MDN Web Docs</a>&nbsp;文章建議將在地址欄中提供，供搜索 Web 開發相關信息的用户使用。</p></li><li><p>Web 內容的換行規則現在符合 Unicode 標準。這提高了 Web 瀏覽器對換行的兼容性。針對東亞和東南亞最終用户的另一項改進是，當雙擊中文、日語、緬甸語、老撾語、高棉語和泰語等語言的文本時，Firefox 現在支持正確的語言感知單詞選擇。</p></li><li><p>Firefox 現在為 Ubuntu、Debian 和 Linux Mint 上的 Linux 用户提供了新的&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsupport.mozilla.org%2Fkb%2Finstall-firefox-linux%23w_install-firefox-deb-package-for-debian-based-distributions" target="_blank">.deb 軟件包。</a></p></li></ul><p><strong>Fixed</strong></p><ul><li>各種<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.mozilla.org%2Fsecurity%2Fadvisories%2Fmfsa2024-01%2F" target="_blank">安全</a>修復。</li></ul><p><strong>Developer</strong></p><ul><li><p>修復 Inspector Rules 視圖中的<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ffxdx.dev%2Frules-view-enter-key%2F" target="_blank">鍵盤導航</a>。從 Firefox 122 開始，在檢查器中編輯選擇器、屬性名稱或屬性值時，Enter 鍵將不再將焦點移動到下一個輸入，而是驗證輸入的內容並聚焦匹配元素 (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugzilla.mozilla.org%2Fshow_bug.cgi%3Fid%3D1861674" target="_blank">#1861674</a>) 。用户仍然可以使用 Ctrl + Enter（macOS 上的 Cmd + Enter）或 Tab 來驗證並將焦點移動到下一個輸入。</p></li></ul><p><strong>Web Platform</strong></p><ul><li><p>啓用 offset-position 屬性，這對於大多數 offset-path 值很有用。在 offset-path&nbsp;CSS 屬性中添加了對&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.mozilla.org%2Fdocs%2FWeb%2FCSS%2Fray" target="_blank">ray()</a>、<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.mozilla.org%2Fdocs%2FWeb%2FCSS%2Fbasic-shape" target="_blank">basic-shape</a>、<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.mozilla.org%2Fdocs%2FWeb%2FCSS%2Fbox-edge%23values" target="_blank">coord-box</a>&nbsp;的支持。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.mozilla.org%2Fdocs%2FWeb%2FCSS%2Fclip-path" target="_blank">在 Clip-path</a>&nbsp;和&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.mozilla.org%2Fdocs%2FWeb%2FCSS%2Foffset-path" target="_blank">offset-path CSS 屬性上添加了對</a>&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.mozilla.org%2Fdocs%2FWeb%2FSVG%2FElement%2Frect" target="_blank">rect()</a>&nbsp;和&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.mozilla.org%2Fdocs%2FWeb%2FCSS%2Fbasic-shape%2Fxywh" target="_blank">xywh()</a>&nbsp;basic shapes 的支持。</p></li><li><p>Firefox 現在支持使用&nbsp;SMIL by animations&nbsp;&nbsp;對 SVG&nbsp;viewBox&nbsp;屬性進行動畫處理。</p></li><li><p>添加了 LargestContentfulPaint&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.mozilla.org%2Fdocs%2FWeb%2FAPI%2FLargestContentfulPaint" target="_blank">API</a>，它在用户與網頁交互之前提供有關最大圖像或文本繪製的計時信息。</p></li><li><p>現在支持&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.mozilla.org%2Fdocs%2FWeb%2FHTML%2FElement%2Fhr" target="_blank">hr</a><span style="background-color:#ffffff; color:#42425a"><span>&nbsp;</span>in<span>&nbsp;</span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.mozilla.org%2Fdocs%2FWeb%2FHTML%2FElement%2Fselect" target="_blank">select</a>，允許網站輕鬆地在元素內使用分隔符。</p></li><li><p><code>&lt;select&gt;</code>元素現在支持 showPicker 方法，這可用於通過 JavaScript 觸發下拉行為。</p></li><li><p>未知方案的後備 URL 解析器已更改為<code>DefaultURI</code>，這提高了規範遵循性和 Web 兼容性。</p></li><li><p>啓用&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ftc39%2Fproposal-arraybuffer-transfer" target="_blank">ArrayBuffer.prototype.transfer 提案</a>方法，該方法可以轉移&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.mozilla.org%2Fdocs%2FWeb%2FJavaScript%2FReference%2FGlobal_Objects%2FArrayBuffer" target="_blank">ArrayBuffer</a>&nbsp;數據的所有權。</p></li><li><p>添加了對<span style="background-color:#ffffff; color:#42425a"><span>&nbsp;</span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.mozilla.org%2Fdocs%2FWeb%2FAPI%2FScreen_Wake_Lock_API" target="_blank">Screen Wake Lock API 的</a>支持。</p></li><li><p>Firefox 現在可以識別「webauthn」autocomplete token，並會在表單自動填充對話框中建議使用密碼。</p></li><li><p>腳本現在可以在 Private Browsing 模式下存儲<code>cacheAPI</code>數據。獲得在常規瀏覽模式與 Private Browsing 模式下的統一體驗。</p></li><li><p>為了進一步保護用户隱私，Firefox 現在會對使用 currentColor 作為輸入的過濾器進行 taints filters。由於顏色可以通過 :visited&nbsp;pseudo selector 設置，它可能包含隱私敏感信息，因此必須將這些 primitives 標記為 tainted。這意味着如果你使用這樣的過濾器，將無法從&nbsp;canvas 中讀取過濾器輸出。</p></li><li><p>現在，Firefox 中默認啓用&nbsp;Uneven Level Protection Forward Error Correction&nbsp;(ULPFEC)。這為 WebRTC 服務提供了另一個可以利用的工具，為互聯網連接不穩定的用户提高視頻質量。</p></li></ul><p><strong>未解決</strong></p><ul><li>某些配備較舊 AMD CPU 的計算機可能會在文件對話框中看到圖像縮略圖錯誤地呈現為全黑。如果是這種情況，更新顯卡驅動程序應該可以解決此問題。</li></ul><p>詳情可<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.mozilla.org%2Fen-US%2Ffirefox%2F122.0%2Freleasenotes%2F" target="_blank">查看更新説明</a>。</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 24 Jan 2024 02:23:13 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276489/firefox-122-0-released</guid>
            <link>https://www.oschina.net/news/276489/firefox-122-0-released</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[有道開源 RAG 引擎 QAnything 版本更新啦]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:center"><img alt="" height="208" src="https://oscimg.oschina.net/oscnet/up-67e056e24f60398bb7bf271d9d54549517a.png" width="1080" referrerpolicy="no-referrer"></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:center"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnetease-youdao%2FQAnything" target="_blank" rel="nofollow">https://github.com/netease-youdao/QAnything</a></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:left"><span style="color:#000000"><strong><span><span>近日，我們將我們的</span>RAG<span>（基於檢索增強的生成，Retrieval Augmented Generation）</span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzA3NDgxOTk0Nw%3D%3D%26mid%3D2247487167%26idx%3D1%26sn%3D37b169a72c023534bca4e855fb74d384%26scene%3D21%23wechat_redirect" target="_blank" rel="nofollow">引擎 QAnything 開源了</a></strong></span><strong><span><span>，用户可以傳入 doc, pdf, 圖片，ppt, excel 等各種類型的文檔，就可以基於這些文檔問答，像 "</span>chatgpt<span>" 一樣的體驗。本次開源包括了 embedding, rerank, LLM，</span></span>向量數據庫<span>等所有必要的模型和系統模塊，用户可以一鍵下載，純本地搭建大模型問答系統，馬上開始使用。</span></strong></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:left">&nbsp;</p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:center"><img alt="" height="957" src="https://oscimg.oschina.net/oscnet/up-7e9ee4cc9ff72de7100d208ace2888f68ab.png" width="1080" referrerpolicy="no-referrer"></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:center">（QAnything 引擎系統架構圖）</p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:left">&nbsp;</p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:left"><strong>QAnything 受到廣大開發者的密切關注，<strong>開源近兩週，</strong>star 迅速漲到接近 2000，昨日 QAnything 進入到了 github 的 trending 版。</strong></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:center"><img alt="" height="533" src="https://oscimg.oschina.net/oscnet/up-9edabedec54be4f3aece687806112a66d1d.png" width="800" referrerpolicy="no-referrer"></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:center"><span>&nbsp; &nbsp;</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:center"><img alt="" height="823" src="https://oscimg.oschina.net/oscnet/up-b90732602b9da060344c0372ed724bcc120.jpg" width="1026" referrerpolicy="no-referrer"></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify">&nbsp;</p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:left"><strong>QAnything 開源後，廣大用户給我們提了很多的意見。我們研發人員日夜不停的回答用户問題，並緊鑼密鼓的改代碼。昨日，我們發佈了一個 Release 更新：</strong></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:left">&nbsp;</p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:left"><span style="color:#000000"><strong>QAnything 版本 V1.1.0</strong></span><strong>，讓安裝過程更簡單，體驗更流暢。</strong></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:left"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnetease-youdao%2FQAnything%2Freleases%2Ftag%2Fv1.1.0" target="_blank" rel="nofollow"><span>https://github.com/netease-youdao/QAnything/releases/tag/v1.1.0</span></a></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:left">&nbsp;</p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:left"><span><strong>Features:</strong></span></p><p><span><strong>- 安裝過程更簡單</strong></span></p><p><span><strong>&nbsp; -&nbsp;</strong>優化啓動流程，支持一鍵啓動：執行 bash run.sh 即可</span></p><p><span>&nbsp; -&nbsp;優化安裝過程的交互，提示信息更友好</span></p><p><span><strong>- 體驗更流暢</strong></span></p><p><span>&nbsp; -&nbsp;優化前端啓動速度，秒打開。感謝網友@jsoncode 的貢獻！</span></p><p><span><strong>- 部署選擇更多</strong></span></p><p><span>&nbsp; -&nbsp;優化顯存佔用，支持多 GPU 部署，目前支持單卡或雙卡部署，雙卡兩張卡顯存佔用分別為 11G，5G</span></p><p><span><strong>- 其他優化</strong></span></p><p><span><strong>&nbsp;</strong><span>&nbsp;</span>-&nbsp;向量庫佔用空間減少到原來的 1/3&nbsp;</span></p><p><span>&nbsp; -&nbsp;優化 xlsx，html 切分 chunk 時 size 過大導致的解析失敗</span></p><p><span>&nbsp; -&nbsp;優化知識庫內只有單文檔時回答的效果</span></p><p><span>&nbsp; -&nbsp;優化 pdf 解析效果，pdf 解析速度</span></p><p><span>&nbsp; -&nbsp;提供原始未修改 DockerFile</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:left">&nbsp;</p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify"><strong>QAnything 還在不斷迭代升級中，歡迎大家下載使用並提供寶貴反饋！</strong></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 23 Jan 2024 04:19:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/youdaotech/blog/10894309</guid>
            <link>https://my.oschina.net/youdaotech/blog/10894309</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Mozilla 修復了 Firefox 長達 21 年的「陳年老 bug」]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Firefox 的工單記錄頁面顯示，一個在 21 年前發現的 bug 終於被修復了。</p><p><img src="https://oscimg.oschina.net/oscnet/up-76c5db83fb95c2268e8259600065cdd5e1d.png" referrerpolicy="no-referrer"><br><em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugzilla.mozilla.org%2Fshow_bug.cgi%3Fid%3D221154" target="_blank">https://bugzilla.mozilla.org/show_bug.cgi?id=221154</a></u></em></p><p>根據描述，具體錯誤是<strong>表格單元格無法正確處理內容「溢出」的情況</strong>，不支持 'hidden'、<span style="font-family:-apple-system,BlinkMacSystemFont,&quot;Apple Color Emoji&quot;,&quot;Segoe UI Emoji&quot;,&quot;Segoe UI Symbol&quot;,&quot;Segoe UI&quot;,&quot;PingFang SC&quot;,&quot;Hiragino Sans GB&quot;,&quot;Microsoft YaHei&quot;,&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif">'auto' 和 'scroll' 屬性。</span></p><p>如下圖所示：</p><p><img src="https://oscimg.oschina.net/oscnet/up-df5fc6957b0a41e01c9a1c9f33e781f13d6.png" referrerpolicy="no-referrer"></p><p>開發者在評論中指出，這個錯誤是因表格單元格框架結構存在設計缺陷導致，它沒有像行組框架那樣將框架封裝到可伸縮框架中。</p><p>看起來這不是難以解決的問題，但不知為何拖了 20 年才被修復。去年也報道過類似的修復 Firefox 「陳年老 bug」 新聞：<u><em><a href="https://www.oschina.net/news/261435/22-year-old-firefox-tooltip-bug-fixed" target="_blank">23 歲博士生修復 Firefox 中的 22 年 「幽靈老 Bug」</a></em></u>。</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 23 Jan 2024 03:55:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276504</guid>
            <link>https://www.oschina.net/news/276504</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Oracle 的 2024 年 Java 工作規劃]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Oracle 的 Java 開發者佈道師 Nicolai Parlog 於近日發佈一段<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Finside.java%2F2024%2F01%2F18%2Fnewscast-61%2F" target="_blank">視頻</a>，介紹了 2024 年的 Java 工作規劃。其中涉及了一些 OpenJDK 項目，包括 Amber、Babylon、Leyden、Lilliput、Loom、Panama 和 Valhalla。</p><blockquote><p>2024 年，Java 不斷髮展。讓我們看看 OpenJDK 項目 Amber、Babylon、Leyden、Lilliput、Loom、Panama 和 Valhalla 今年的計劃是什麼，以及它們將如何推動 Java 向前發展。無論是模式匹配還是其他語言改進、與外部代碼、內存或平台的交互、內存局部性或效率，還是啓動時間，Java 在 2024 年將在很多領域進行改進。不過請記住，任何一年的大部分工作都不會在同一年發佈，因此許多改進只能在 2025 年或更晚的時間才能使用。</p></blockquote><p><img height="281" src="https://oscimg.oschina.net/oscnet/up-e5e07b35f475f1e4f839ab54e475326a17b.png" width="500" referrerpolicy="no-referrer"></p><p>對於 Babylon 項目，Parlog 提到了 code reflection、擴展 reflection API 以及允許在方法內轉換 Java 代碼等計劃。Babylon 團隊計劃在未來幾周內發佈一些用例工作，例如 auto-differentiating、C# LINQ emulation 和 GPU 編程等。不過，Babylon 項目仍處於早期階段，所以&nbsp;Parlog 預計該項目主線在 2024 年應該不會有任何實質性的內容。</p><p>至於孵化 Java VM 和 API 功能的 Loom 項目，Parlog 認為，該項目備受矚目的日子即將結束；因為虛擬線程已經最終確定，結構化併發和作用域值 API 也已在 Java 22 中達到了第二個預覽版，預計會在今年某個時候完成。Parlog 特別希望能夠在 synchronization non-pinning 和 file I/O non-capturing 方面取得進展，至少在 Linux 上使用 io_uring；但能不能在 2024 年實現不好説，畢竟距離 JDK 23 fork 只有 5 個月的時間了。</p><p>2023 年，Leyden 項目在研究潛在 potential condensers 方面取得了進展，並且提出了一些相當大的性能改進。2024 年的計劃包括完善冷凝器（Condenser）的概念並致力於原型冷凝器的生產準備，但也很難期待今年能有任何有形的成果落地。</p><p>Amber 項目仍然是 Java 語言發展背後的動力源泉，目前預覽的三個功能包括：字符串模板、簡化 main 方法以及 statements before this() and super()。Parlog 預計，這三個功能都將在 2024 年完成。正在探索的功能還包括 with 表達式和 primitive types in patterns。</p><p><img height="283" src="https://oscimg.oschina.net/oscnet/up-96670611d834699b5c2b1066895af7b0c12.png" width="500" referrerpolicy="no-referrer"></p><p>Panama 項目「有三項工作正在進行中」：Vector API 正處於孵化階段、Foreign Function &amp; Memory API 正在改進、jextract 工具正在構建中（Panama 項目 2024 年的主要事項）。</p><p>在 Valhalla 項目中，工作將集中在值類和對象上，它們提供僅具有實例字段且缺乏對象標識的類實例 final。表示 boxed primitives 的類 Integer、Double 和 Byte 是包裝或「box」不需要標識的簡單值的類的示例。刪除標識不僅可以消除開發人員對 == 應用於這些類的含義的困惑，而且還可以顯着減少 boxed Integer、Double 和 Byte 對象的運行時開銷。</p><p>Lilliput 項目旨在縮小 HotSpot JVM 中 Java object headers 的大小並減少 Java 內存佔用。2023 年 Lilliput 合併了一種替代的 fast-locking scheme，以便按預期減小 header size，但該方案在進入黃金階段之前還需進一步改進。因此，項目團隊現在的工作重點是完善 fast-locking scheme，但 Parlog 預計 header size 的改進不會在 2024 落地。</p><p>更多詳情可<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Finside.java%2F2024%2F01%2F18%2Fnewscast-61%2F" target="_blank">查看完整視頻</a>。</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 23 Jan 2024 03:38:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276501/oracles-plans-for-java-in-2024</guid>
            <link>https://www.oschina.net/news/276501/oracles-plans-for-java-in-2024</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[openKylin 社區生態委員會第四次會議圓滿召開]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span><span style="background-color:#ffffff">2024 年 1 月 23 日，</span><span style="background-color:#ffffff"><strong>openKylin 社區生態委員會第四次會議</strong></span><span style="background-color:#ffffff">圓滿召開。openKylin 社區生態委員會作為社區治理架構之一，主要職責為攜手社區核心夥伴，推動社區生態共建，打造創新解決方案，提升 openKylin 品牌影響力。</span></span></p><p><span><span style="background-color:#ffffff">本次會議由社區生態委員會成員單位</span><span style="background-color:#ffffff"><strong>北京技德系統技術有限公司</strong></span><span style="background-color:#ffffff">承辦，</span><span style="background-color:#ffffff"><strong>openKylin 社區生態委員會主任李震寧</strong></span><span style="background-color:#ffffff">擔任主持，20 家生態委員會單位代表於線上線下參會。會上總結和回顧了</span><span style="background-color:#ffffff"><strong>openKylin 社區兩個月來的運營發展情況</strong><strong>，</strong></span><span style="background-color:#ffffff">並針對</span><span style="background-color:#ffffff"><strong>後續重點活動計劃</strong></span><span style="background-color:#ffffff">等話題進行了討論。</span></span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-43ff9bd70670e16aaef0df0d374b5f35fff.jpg" referrerpolicy="no-referrer"></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span><span style="background-color:#ffffff"><strong>北京技德系統技術有限公司 CEO 張耀斌</strong></span></span><span style="background-color:#ffffff">作為會議的承辦方代表致辭，他表示很榮幸 openKylin 社區生態委員會走進技德，預祝第四次生態委員會會議圓滿成功！技德作為社區理事單位，成立了 AIService SIG，負責 openKylin 社區中 AI 技術相關的開發和信息交流。未來，技德也將秉承着開源聚力、共創未來的社區理念，與各生態夥伴夥伴共建共享，以社區鏈動產業共振，推動中國開源產業發展。</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span><span style="background-color:#ffffff"><strong>北京技德系統技術有限公司公共事務部主任王俊</strong></span></span><span><span style="background-color:#ffffff">針對 openKy</span><span style="background-color:#ffffff">lin 社區 2023 年第四季度運營亮點和要點做了回顧，從</span><span style="background-color:#ffffff">社區會員、平台、生態、SIG 和活動等方面進展向各委員進行了彙報，並對 2024 上半年活動計劃做了介紹。</span></span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span style="background-color:#ffffff">隨後，社區理事單位代表圍繞生態合作推廣、應用軟件適配和技術深度融合等方面分享了其與社區在 RISC-V 領域的合作成果。openKylin 社區 Release SIG Maintainer 張天雄就 openKylin 版本進展向各委員進行彙報。</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span style="background-color:#ffffff">會議最後，各參會委員圍繞社區運營進展及後續活動規劃展開了深入探討，並針對社區建設提出了各自的看法和建議。</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:left"><span style="background-color:#ffffff">社區的發展離不開各企業夥伴的大力支持。openKylin 社區生態委員會例會每兩月召開一次，會議期間，各委員代表匯聚一堂，就社區運營進展與規劃進行細緻的探討，對 openKylin 社區運營工作具有重要指導意義。openKylin 社區也將秉持開源、開放的原則，與各夥伴共同參與、共同治理，一起打造中國領先的開源操作系統根社區。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 23 Jan 2024 02:51:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276492</guid>
            <link>https://www.oschina.net/news/276492</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[驚訝！史上最年輕的 Apache Committer 誕生！！！]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-b74c559a04078fb6182d6af9815c351d338.png" referrerpolicy="no-referrer"></p><p>在 Apache StreamPark 被數以千計的星星和諸多榮譽的眷顧下，用户越來越多，遍佈各個行業。這一切的背後都是因為有一幫熱愛開源，願意投身開源項目建設的貢獻者。這其中有一批 「00 後」 的新星正悄然在社區嶄露頭角，他們正用自己的實際行動書寫着自己的開源故事。Apache StreamPark 社區近日迎來了兩位 「00」 後 Committer，下面讓我們一睹兩位 Committer 的風采。</p><span id="OSC_h1_1"></span><h1><strong>新晉 Committer&nbsp;之張超篇</strong></h1><hr><p><img height="648" src="https://oscimg.oschina.net/oscnet/up-63b75bc7d4a38c12ff48b29d44c7cf3bbe6.png" width="1216" referrerpolicy="no-referrer"></p><p><br><span style="background-color:#ffffff; color:rgba(0, 0, 0, 0.9)">很開心能夠被提名為 Apache StreamPark 的 Committer！非常感謝支持社區的每一位小夥伴！也感謝參與項目時社區的各位技術大拿們給予的指導和幫助！</span></p><p><iframe frameborder="no" height="400px" scrolling="no" src="https://player.bilibili.com/player.html?aid=666424225&amp;bvid=BV1Ra4y1C7EE&amp;cid=1411725695&amp;p=1" width="720px" referrerpolicy="no-referrer"></iframe></p><span id="OSC_h4_2"></span><h4>&nbsp;</h4><span id="OSC_h4_3"></span><h4><strong><strong><strong><strong><strong>主要貢獻</strong></strong></strong></strong></strong></h4><ol><li><p>Apache StreamPark 進入 Apache 孵化器期間參與從 MySQL 到 H2 數據庫的適配</p></li><li><p>變更 Mybatis-Plus 配置方式，簡化配置文件配置項</p></li><li><p>完善用户模塊刪除功能，部分前後端功能開發與適配，並追蹤後續討論、改進</p></li><li><p>參與整理、完成代碼風格和質量指南文檔，並參與相關代碼規範的推進工作</p></li><li><p>參與官網文檔的改進，完成中英文文檔編寫各 2 篇、翻譯 15&nbsp;篇以及其他文檔完善</p></li></ol><span id="OSC_h4_4"></span><h4><strong><strong><strong><strong><strong>結緣社區</strong></strong></strong></strong></strong></h4><p>對我來説，Apache 不僅僅是一個技術社區，它更像是一種信仰。在我還是個初學者的時候，提起 Apache Tomcat、Apache Maven 這樣的頂級項目，它們在我的心中就好像是編程世界的神話傳説。對於熱愛編程的我而言，Apache 代表着技術的極致、創新的精神，激勵着我不斷前行。想到有一天可能成為這個信仰的一份子，和全球的技術大牛們肩並肩，這種感覺，就像是夢想變成現實。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-7e1ecdc00c6b91bb4bab730f471cf204ac8.png" referrerpolicy="no-referrer"></p><p>我參與 Apache StreamPark 提交的第一個 PR 是處理客户端發起 GET 請求時攜帶了 「    」問題，是在 2022 年 8 月 28 日提交的，只用了一行箭頭函數的代碼就解決！持續貢獻到現在也已經一年多了。</p><p>在我印象中，那時 Apache&nbsp;StreamPark 還叫 StreamX，整個團隊都在為加入 Apache 孵化器做準備，這時項目急需對 H2 數據庫進行適配，而我正好是 Mybatis-Plus 的開發者。PMC 成員華傑哥[1]邀請我一同參與，我立馬答應了下來，然後開始從零瞭解 Apache StreamPark。即刻懷揣着興奮的心情，連夜肝代碼。第一個挑戰是 Windows 下的開發環境配置，消耗九牛二虎之力，總算終於跑通了代碼！等我抬頭一看發現天都亮了——時間真會玩，就這麼偷偷溜走了: )。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-270fbabed9d20e29eabf0f3261a698241f2.jpg" referrerpolicy="no-referrer"></p><p>後面我在陸陸續續參與開發中也遇到很多問題，記得印象很深的一次是有一天晚上在進行 Apache StreamPark 前端開發時，遇到一個前端組件的 BUG，處理了半天無果，最後求助社區的 PPMC 成員思柱哥[2]。思柱哥不僅幫我解決了問題，還手把手教我原理，真的很感謝思柱哥！這也是我切身感受到參與開源的樂趣之一，有很多技術大拿願意帶着你成長。</p><p>今年八月，我有幸去北京參加了 Apache Community Over Code 2023[3]。跟 Apache 社區的大佬們近距離接觸，真是開眼界了。Apache Way 最讓我印象深刻的就是 「社區大於代碼」 這個理念。特別是聽了 Apache Pulsar PMC 成員小狐狸小姐姐的演講後，我就豁然開朗：開源項目不僅僅是代碼，也需要一個文檔來告訴你它怎麼運作。因此我主動請纓參與文檔的完善工作，幫助社區文檔更友好！</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-02f03dc61579e20ce426bef16ae9accec92.png" referrerpolicy="no-referrer"></p><p>我每天都會堅持寫一篇博客，哪怕沒什麼可寫的技術題材，我也會堅持隨便積累一點。順帶一提我在任何地方都可以打開電腦寫代碼，譬如咖啡廳、飛機上、地鐵上等，甚至我去韓國旅遊時也在隨便找的一家咖啡廳處理 issue。</p><span id="OSC_h4_5"></span><h4><strong>社區印象</strong></h4><p>社區的大佬們真的各顯神通，在 Apache&nbsp;StreamPark 社區裏經常有熱心技術大拿願意提供幫助。並且也進一步地學習到不少開發規範和實用技巧，就比如讓代碼 「一塵不染」 的工具 Spotless、以及 Vue3 的知識點掌握等！在 Apache&nbsp;StreamPark 有一個使用登記收集的 Issue，其中有一條特別引起了我的注意：來自 「袁隆平農業高科技股份有限公司」 的使用登記。這家公司的名字源於雜交水稻之父袁隆平老先生，我為身處的社區能服務於這樣一家公司感到超級自豪。參與開源真的是一件很酷的事情！</p><span id="OSC_h4_6"></span><h4><strong>寄，語</strong></h4><p>從 Apache&nbsp;StreamPark 進入 Apache 孵化器，到現在一週年已經過去啦，期間讓人感動的瞬間數不勝數！期待更多小夥伴的加入和陪伴，咱們一同見證其從孵化器畢業，進一步為實時領域發展作出貢獻！</p><span id="OSC_h1_7"></span><h1><strong>新晉 Committer&nbsp;之蔡燦材篇</strong></h1><hr><p><img height="648" src="https://oscimg.oschina.net/oscnet/up-8120852d62a802a07553d710655b8046808.png" width="1216" referrerpolicy="no-referrer"></p><p>非常榮幸被提名為 Apache&nbsp;StreamPark 的 Committer！感謝社區的信任和肯定！感謝歷次討論、設計、協作和 review 過程中社區開發者給予的指導和幫助！</p><span id="OSC_h4_8"></span><h4><strong><strong><strong><strong><strong>主要貢獻</strong></strong></strong></strong></strong></h4><ol><li><p>參與 Kubernetes V2 Operator 重構 streampark-flink-kubernetes 模塊</p></li><li><p>測試、修復 streamp-flink-kubernetes 模塊並補充單元測試</p></li><li><p>積極參與方案討論、規範制定和代碼 Review</p></li><li><p>修復並完善官網文檔</p></li></ol><span id="OSC_h4_9"></span><h4><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong>結緣社區</strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></h4><p>Apache&nbsp;StreamPark 算是我第一個正式參與的開源項目,與社區結緣主要是因為 StremaPark PPMC 成員餘林穎哥[4](Al-assad)。那時候我想加入開源社區，但又覺得自己實力太菜，所以一直沒付諸行動。後面 Al-assad 就問我要不要參與 Apache&nbsp;StreamPark 社區，説有很多工作可以做，那時候我還有點怕自己會拖後腿，但大佬説有他兜底。我也就抱着試一試態度去參加了。</p><p>剛進社區，我就接下了三個 feature（真是初生牛犢不怕虎)，真實情況是因為那三個 feature 是很類似的需求，我就想一個是做，兩個也是做，那就一起接過來算了。一開始環境搭建在社區的各位大佬的幫助下，也是花了一星期時間成功搭建好了，後面就開始漫長的 debug 之旅。</p><p>在 debug 過程中，我也發現 Apache&nbsp;StreamPark 的一些問題，提了一些 PR 進行修復。令我比較驚訝的是，我的每個 PR 社區都回復的很快，並提了很多改進的意見、讓我學到了很多，也讓我更有動力。印象比較深的是：在完成第一個 feature 時，我寫的代碼其實很醜陋，幾個 PMC 成員們非凡不嫌棄還提了很多修改意見、鼓勵我慢慢改進，最後還是林穎哥出手才讓我第一個 feature 成功完成，那時候感覺自己幫了倒忙，感覺很不好意思。但 Al-assad 鼓勵我説是新人是這樣的啦，多進行嘗試就好了。在對第一個 feature 進行認真 review 代碼後，我後面兩個 feature 也順利完成了（雖然也是磕磕絆絆）。還記得最後一個 feature 合併的時候，我的心情都激動得快哭了，原來我也能做到自己曾經大學可望而可不及的事情（開源之夏）。記得之前有人看某個開源項目的時候，跟我説，你看這個人和你和你差不多大已經完成了三個 feature 了，我那時候在想什麼時候我也能這麼牛叉就好了，沒想到過了沒多久我也成為了 「這樣的人」，哈哈。</p><p>一開始，我打算搞完這三個 feature 就不參與社區了，後面認識了社區很多優秀的開發者讓我改變了這個想法，Apache&nbsp;StreamPark 社區開發者們非常的團結友善，核心貢獻者們更是犧牲休息時間投入到項目中，知道這一點的時候我十分吃驚。所以在這裏你能認識一羣真正熱愛代碼的人，我十分感謝在 Apache&nbsp;StreamPark 社區遇到每一位開發者，他們教會了我很多。在這個社區，我彷彿意識到開源精神的某種含義。</p><span id="OSC_h4_10"></span><h4><strong>寄，語</strong></h4><p>當然是希望 Apache&nbsp;StreamPark 社區越來越好啦，畢竟是我參加開源以來第一個加入的社區，期待新的小夥伴能加入進來，一起建設社區。如果是新手也不用害怕，我也是新手不也成功加入進來了嗎。祝 Apache StreamPark 能夠早日孵化成功, 祝各位 Apache&nbsp;StreamPark 社區的小夥伴都玩得開心，have fun！</p><span id="OSC_h1_11"></span><h1>**&nbsp;加，入 我，們&nbsp;**</h1><p>Apache&nbsp;StreamPark 是一個流處理應用程序開發管理框架。初衷是讓流處理更簡單，旨在輕鬆構建和管理流處理應用程序，提供使用 Apache Flink 和 Apache Spark 編寫流處理應用程序的開發框架，未來將支持更多其他引擎。同時，Apache&nbsp;StreamPark 提供了一個流處理應用管理平台，核心能力包括但不限於應用開發、調試、交互查詢、部署、運維、實時數倉等，於 2022 年 9 月通過投票正式成為 Apache 開源軟件基金會的孵化項目。</p><p>Apache&nbsp;StreamPark 社區一直以來都以用心做好一個項目為原則，高度關注項目質量，努力建設發展社區。我們時刻保持開發者謙遜樸素的本質，認真學習和遵循「The Apache Way」，秉承更加兼容幷包的心態，迎接更多的機遇與挑戰。誠摯歡迎更多的貢獻者參與到社區建設中來，和我們一道攜手共建。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-fb1f818f6981c4a0f1366a2ec6f60a7252e.png" referrerpolicy="no-referrer"></p><p>💻 項目地址：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fstreampark" target="_blank">https://github.com/apache/streampark</a><br> 🧐 提交問題和建議：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fstreampark%2Fissues" target="_blank">https://github.com/apache/streampark/issues</a><br> 🥁 貢獻代碼：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fstreampark%2Fpulls" target="_blank">https://github.com/apache/streampark/pulls</a><br> 📮 Proposal：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcwiki.apache.org%2Fconfluence%2Fdisplay%2FINCUBATOR%2FStreamPark%2BProposal" target="_blank">https://cwiki.apache.org/confluence/display/INCUBATOR/StreamPark+Proposal</a><br> 📧 訂閲社區開發郵件列表：**dev@streampark.apache.org&nbsp;<br> 💁‍♀️&nbsp;<strong>社區溝通：</strong><br><img alt="" src="https://oscimg.oschina.net/oscnet/up-d2fb1e3ea10be8a185704b27e79d83d2ad4.png" referrerpolicy="no-referrer"></p><p><strong>參考資料</strong><br> [1]&nbsp;<em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fwolfboys" target="_blank">https://github.com/wolfboys</a></em><br> [2]&nbsp;<em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fwangsizhu0504" target="_blank">https://github.com/wangsizhu0504</a></em><br> [3]&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcommunityovercode.org" target="_blank">https://communityovercode.org</a><br> [4]&nbsp;<em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FAl-assad" target="_blank">https://github.com/Al-assad</a></em></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 23 Jan 2024 02:29:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/streampark/blog/10890500</guid>
            <link>https://my.oschina.net/streampark/blog/10890500</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[SQLite 3.45 發佈，添加對 JSONB 格式支持]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>SQLite 3.45 <u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.sqlite.org%2Fchanges.html%23version_3_45_0" target="_blank">已發佈</a></u>。</p><blockquote><p>SQLite 是一個 C 語言庫，實現了一個小型、快速、獨立、高可靠性、全功能的 SQL 數據庫引擎。SQLite 是世界上使用最多的數據庫引擎。SQLite 的源代碼屬於公共領域，每個人都可以免費使用，用於任何目的。</p></blockquote><p>新版本重寫了所有 JSON 函數，改為新的內部解析樹格式 JSONB。JSONB 格式可以序列化並存儲在數據庫中，避免在使用 JSON 值時，還需要進行不必要的重複解析。因此通過支持 JSONB，SQLite 在處理 JSON 數據時能夠更高效靈活。</p><p>此外，JSONB 保留所有舊功能，並且所有 JSON 函數也可以接受 JSONB 二進制內容。</p><p>SQLite 承諾其生成的 JSONB 格式良好，但是由於 JSONB 本質上就是一個 BLOB，因此可能存在格式不正確的 JSONB，而 SQLite 在處理格式不正確的 JSONB，就可能出現不同行為，從而發生錯誤。不過 SQLite 也保證，格式錯誤的 JSONB 永遠不會導致內存錯誤或是類似問題，也不會出現系統漏洞。</p><p>&nbsp;</p><p>詳情查看&nbsp;<em><u><a href="https://www.oschina.net/news/269878/sqlite-lands-jsonb" target="_blank">SQLite 重寫了 JSON 函數 —— 推出 JSONB</a></u></em></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 23 Jan 2024 02:27:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276404/sqlite-3-45-released</guid>
            <link>https://www.oschina.net/news/276404/sqlite-3-45-released</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Ant Engine —— 開源遊戲引擎]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Ant 是由靈犀互娛開發的開源遊戲引擎。現階段僅將代碼倉庫公開，尚未正式發佈。文檔、示例等均待在 Wiki 上逐步完善。</p><p><strong>Ant 目錄結構</strong></p><ul><li>bin：編譯結果，exe/dll/lib 等</li><li>build：編譯的中間結果</li><li>clibs：c/c++代碼</li><li>engine：引擎基礎支持代碼，包括包管理器、啓動代碼等</li><li>pkg：引擎的各個功能包（包與包之間有依賴）</li><li>runtime：引擎運行時的不同平台支持</li><li>test：測試工程</li><li>tools：引擎相關的工具</li></ul></div>
                                                                ]]>
            </description>
            <pubDate>Tue, 23 Jan 2024 02:05:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/p/ant-engine</guid>
            <link>https://www.oschina.net/p/ant-engine</link>
        </item>
        <item>
            <title>
                <![CDATA[Gitee 推薦 | 摩爾斯電碼練習器 Coffee]]>
            </title>
            <description>
                <![CDATA[<h1><a id="user-content-zclub-coffee" class="anchor" href="https://gitee.com/FredyXu/coffee#zclub-coffee"></a>ZClub Coffee</h1><p>一個基於 ESP32 使用 ESP-IDF 架構開發的摩爾斯電碼練習器，使用 LVGL 製作圖形界面。可以實現摩爾斯電碼的本地練習以及通過網絡與其他使用此項目的 HAM 進行模擬通聯。</p><p><strong>目前項目正處於開發測試階段，不保證所有的功能都能正常使用，僅供有興趣的朋友搶先體驗。</strong></p><img src="https://gitee.com/FredyXu/coffee/raw/master/images/screen_1.png" width="300" referrerpolicy="no-referrer"><h1><a id="user-content-項目計劃及進度" class="anchor" href="https://gitee.com/FredyXu/coffee#%E9%A1%B9%E7%9B%AE%E8%AE%A1%E5%88%92%E5%8F%8A%E8%BF%9B%E5%BA%A6"></a>項目計劃及進度</h1><ul class="task-list"><li class="task-list-item"><p><input type="checkbox" class="task-list-item-checkbox" checked="" disabled=""> 基礎功能</p><ul class="task-list"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" checked="" disabled=""> 電碼錄入</li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" checked="" disabled=""> 電碼解譯</li></ul></li><li class="task-list-item"><p><input type="checkbox" class="task-list-item-checkbox" checked="" disabled=""><del>配網</del></p><ul class="task-list"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" checked="" disabled=""><del>微信配網</del></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" checked="" disabled=""><del>ESP-TOUCH 配網</del></li></ul></li><li class="task-list-item"><p><input type="checkbox" class="task-list-item-checkbox" disabled=""> 模擬通聯</p><ul class="task-list"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" checked="" disabled=""> WebSocket 方式模擬通聯</li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled=""> MQTT 方式模擬通聯</li></ul></li><li class="task-list-item"><p><input type="checkbox" class="task-list-item-checkbox" checked="" disabled=""> 設置</p><ul class="task-list"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" checked="" disabled=""> 在練習器上進行設置</li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" checked="" disabled=""> 在 Web 頁面上進行設置</li></ul></li><li class="task-list-item"><p><input type="checkbox" class="task-list-item-checkbox" disabled=""> 訓練</p><ul class="task-list"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled=""> 鍵入訓練</li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled=""> 解碼訓練</li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled=""> 訓練排行榜</li></ul></li><li class="task-list-item"><p><input type="checkbox" class="task-list-item-checkbox" disabled=""> 網絡對講</p></li><li class="task-list-item"><p><input type="checkbox" class="task-list-item-checkbox" disabled=""> SDR</p><ul class="task-list"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled=""> 本地 SDR</li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled=""> 網絡 SDR</li></ul></li></ul><h1><a id="user-content-物料清單" class="anchor" href="https://gitee.com/FredyXu/coffee#%E7%89%A9%E6%96%99%E6%B8%85%E5%8D%95"></a>物料清單</h1><p><strong>鑑於目前為測試階段，此物料清單不作為最終版本使用。所列內容可能隨時有改變。</strong></p><table><thead><tr><th align="left">名稱</th><th align="center">數量</th><th align="left">説明</th></tr></thead><tbody><tr><td align="left">ESP32 開發板</td><td align="center">1</td><td align="left"></td></tr><tr><td align="left">杜邦線</td><td align="center">若干</td><td align="left"></td></tr><tr><td align="left">揚聲器</td><td align="center">1</td><td align="left"></td></tr><tr><td align="left">旋轉編碼器</td><td align="center">1</td><td align="left"></td></tr><tr><td align="left">彩色顯示屏</td><td align="center">1</td><td align="left">顯示控制芯片 ILI9341<br>分辨率 240×320<br>觸摸控制芯片 XPT2046</td></tr><tr><td align="left">3.5 毫米音頻母座</td><td align="center">1</td><td align="left">用於連接電鍵</td></tr><tr><td align="left">3.5 毫米音頻線</td><td align="center">1</td><td align="left">公對公，用於連接電鍵。</td></tr><tr><td align="left">電鍵</td><td align="center">1</td><td align="left">手動或自動均可，或者也可以使用開關代替</td></tr><tr><td align="left">功放</td><td align="center"></td><td align="left">目前項目中並沒有使用功放，後續會添加</td></tr></tbody></table><h1><a id="user-content-使用方法" class="anchor" href="https://gitee.com/FredyXu/coffee#%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95"></a>使用方法</h1><h2><a id="user-content-接線" class="anchor" href="https://gitee.com/FredyXu/coffee#%E6%8E%A5%E7%BA%BF"></a>接線</h2><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line">DISP:顯示屏  </span><span id="LC2" class="line">TOUCH:觸摸控制引腳（可以不接，使用旋轉編碼器可進行所有操作）</span><span id="LC3" class="line">KEY:電鍵  </span><span id="LC4" class="line">ROT:旋轉編碼器  </span><span id="LC5" class="line">SPK:揚聲器</span></pre><div class="markdown-code-block-copy-btn"></div></div></div><p>所有模塊的 GND 均接入開發板的 GND 引腳，下表中不再重複説明。</p><table><thead><tr><th align="left">設備</th><th align="center">ESP32</th><th align="left">説明</th></tr></thead><tbody><tr><td align="left">DISP - MOSI</td><td align="center">GPIO13</td><td align="left">或標為 SDI</td></tr><tr><td align="left">DISP - CLK</td><td align="center">GPIO14</td><td align="left">或標為 SCK</td></tr><tr><td align="left">DISP - CS</td><td align="center">GPIO15</td><td align="left"></td></tr><tr><td align="left">DISP - DC</td><td align="center">GPIO2</td><td align="left"></td></tr><tr><td align="left">DISP - RESET</td><td align="center">GPIO4</td><td align="left"></td></tr><tr><td align="left">DISP - VCC</td><td align="center">VIN</td><td align="left"></td></tr><tr><td align="left">DISP - LED</td><td align="center">3V3</td><td align="left"></td></tr><tr><td align="left">TOUCH - IRQ</td><td align="center">GPIO27</td><td align="left"></td></tr><tr><td align="left">TOUCH - CS</td><td align="center">GPIO5</td><td align="left"></td></tr><tr><td align="left">TOUCH - CLK</td><td align="center">GPIO18</td><td align="left">或標為 SCK</td></tr><tr><td align="left">TOUCH - MOSI</td><td align="center">GPIO23</td><td align="left">或標為 DIN</td></tr><tr><td align="left">TOUCH - MISO</td><td align="center">GPIO19</td><td align="left">或標為 DO</td></tr><tr><td align="left">ROT - CLK</td><td align="center">GPIO33</td><td align="left"></td></tr><tr><td align="left">ROT - DT</td><td align="center">GPIO32</td><td align="left"></td></tr><tr><td align="left">ROT - SW</td><td align="center">GPIO12</td><td align="left"></td></tr><tr><td align="left">KEY - A</td><td align="center">GPIO34</td><td align="left">默認手動鍵使用該引腳</td></tr><tr><td align="left">KEY - B</td><td align="center">GPIO35</td><td align="left"></td></tr><tr><td align="left">SPK</td><td align="center">GPIO25</td><td align="left">暫時沒有使用功放，後續接線方法可能會發生改變</td></tr></tbody></table><p>如需更改引腳，可在在 coffee_lib 目錄下的 config.h 文件中進行配置。</p><h2><a id="user-content-固件上傳" class="anchor" href="https://gitee.com/FredyXu/coffee#%E5%9B%BA%E4%BB%B6%E4%B8%8A%E4%BC%A0"></a>固件上傳</h2><p>固件上傳可以使用以下三種方式</p><ul><li>使用樂鑫的 Flash download tool 工具上傳。（僅限 Windows 操作系統）</li><li>使用 IDF 工具上傳。（Windows、Linux 及 MacOS）</li><li>使用 VSCode 插件編譯上傳。（Windows、Linux 及 MacOS）</li></ul><p>以下分別介紹這三種方式的操作方法。</p><h3><a id="user-content-固件下載的方式安裝" class="anchor" href="https://gitee.com/FredyXu/coffee#%E5%9B%BA%E4%BB%B6%E4%B8%8B%E8%BD%BD%E7%9A%84%E6%96%B9%E5%BC%8F%E5%AE%89%E8%A3%85"></a>固件下載的方式安裝</h3><p><strong>此方式目前僅支持 Windows 操作系統</strong></p><ol><li><p>在<a href="https://gitee.com/link?target=https%3A%2F%2Fwww.espressif.com%2Fzh-hans%2Fsupport%2Fdownload%2Fother-tools">樂鑫工具下載頁面</a>下載 Flash 下載工具。
<img src="https://gitee.com/FredyXu/coffee/raw/master/images/WX20220907-193850@2x.png" alt="" referrerpolicy="no-referrer"></p></li><li><p>根據自己手上的開發板下載對應的 USB 驅動。目前市面上的 ESP32 開發板所使用的串口轉 USB 芯片多為 CH340 或 CP2102，確認好自己的開發板的芯片信號下載對應驅動即可。</p></li><li><p>確定開發板已經被電腦正確識別後，啓動樂鑫的 Flash 下載工具。
<img src="https://gitee.com/FredyXu/coffee/raw/master/images/WX20220907-200227@2x.png" alt="" referrerpolicy="no-referrer"></p></li><li><p>啓動後將<code>ChipType</code>選擇為<code>ESP32</code>，其他內容不變。如下圖：</p><img src="https://gitee.com/FredyXu/coffee/raw/master/images/WX20220907-194229@2x.png" width="200" referrerpolicy="no-referrer"></li><li><p>將 bin 目錄中的 4 個文件分別添加到工具中。記得要將工具中文件名稱前面的複選框勾選，並將每個文件對應的地址偏移寫到文件名後方。具體填寫內容如下表：</p><table><thead><tr><th align="left">文件名</th><th align="center">地址</th></tr></thead><tbody><tr><td align="left">bootloader.bin</td><td align="center">0x1000</td></tr><tr><td align="left">partition-table.bin</td><td align="center">0x8000</td></tr><tr><td align="left">ota_data_initial.bin</td><td align="center">0xd000</td></tr><tr><td align="left">coffee.bin</td><td align="center">0x10000</td></tr></tbody></table></li><li><p>選擇好正確的端口，點擊<code>START</code>後等待下載完成即可。完整的設置如下圖：</p><img src="https://gitee.com/FredyXu/coffee/raw/master/images/WX20220907-194930@2x.png" width="200" referrerpolicy="no-referrer"><p><strong>再次提醒：一定要將文件名稱前面的複選框勾選上</strong></p></li></ol><h3><a id="user-content-使用 idf 工具上傳" class="anchor" href="https://gitee.com/FredyXu/coffee#%E4%BD%BF%E7%94%A8idf%E5%B7%A5%E5%85%B7%E4%B8%8A%E4%BC%A0"></a>使用 IDF 工具上傳</h3><p>todo</p><h3><a id="user-content-使用 vscode 插件編譯上傳" class="anchor" href="https://gitee.com/FredyXu/coffee#%E4%BD%BF%E7%94%A8vscode%E6%8F%92%E4%BB%B6%E7%BC%96%E8%AF%91%E4%B8%8A%E4%BC%A0"></a>使用 VSCode 插件編譯上傳</h3><blockquote><p>使用 VSCode 中編譯使用的是樂鑫的<a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fespressif%2Fvscode-esp-idf-extension">vscode-esp-idf-extension</a>擴展插件。為什麼不用<a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fplatformio">PlatformIO</a>呢？因為 PlatformIO 所使用依賴庫大部分都是放在境外的服務器上，由於不便詳細闡述的原因，很多小夥伴沒有辦法正常安裝和使用。但是習慣使用 PlatformIO 的小夥伴也不用擔心，項目源碼在 PlatfromIO 上也可以正常跑通，IDF 版本使用 4.4.x 和 5 都可以，但是由於 IDF 5 的特性，使用的時候需要手動添加一些庫，例如 esp_websocket_client。具體詳情請參考樂鑫官方文檔關於<a href="https://gitee.com/link?target=https%3A%2F%2Fdocs.espressif.com%2Fprojects%2Fesp-idf%2Fzh_CN%2Fv5.0-beta1%2Fesp32%2Fmigration-guides%2Frelease-5.x%2Fremoved-components.html">從 ESP-IDF 中移出或棄用的組件</a>中的內容。</p></blockquote><ol><li><p>在<a href="https://gitee.com/link?target=https%3A%2F%2Fwww.python.org%2Fdownloads%2F">Python 官網的下載頁面</a>下載並安裝 python3。</p><img src="https://gitee.com/FredyXu/coffee/raw/master/images/WX20220908-221826@2x.png" width="300" referrerpolicy="no-referrer"><p>安裝時記得把底部的兩個複選框都勾選上</p><img src="https://gitee.com/FredyXu/coffee/raw/master/images/WX20220908-222624@2x.png" width="300" referrerpolicy="no-referrer"></li><li><p>下載保存源碼文件，git 或下載 zip 文件的方式均可。</p></li><li><p>在<a href="https://gitee.com/link?target=https%3A%2F%2Fcode.visualstudio.com%2F">官網</a>下載 VSCode。</p><img src="https://gitee.com/FredyXu/coffee/raw/master/images/1662638698095.jpg" width="300/" referrerpolicy="no-referrer"></li><li><p>在 VSCode 中的擴展標籤裏搜索並安裝」ESP-IDF「擴展插件。</p><img src="https://gitee.com/FredyXu/coffee/raw/master/images/WX20220908-202024@2x.png" width="300/" referrerpolicy="no-referrer"></li><li><p>插件下載完成後，點擊工具欄的」ESP-IDF「圖標，等待一會，初始化完成後會出現 ESP-IDF 安裝配置頁面。</p><img src="https://gitee.com/FredyXu/coffee/raw/master/images/WX20220908-202329@2x.png" width="300/" referrerpolicy="no-referrer"></li><li><p>出現安裝配置頁面後選擇」ADVANCED「選項。</p><img src="https://gitee.com/FredyXu/coffee/raw/master/images/WX20220908-202536@2x.png" width="300" referrerpolicy="no-referrer"></li><li><p>進入配置頁面後，在」Select download server「中儘量選擇樂鑫服務器（Espressif）而不是 Github。至於原因...這裏不便展開説明，會被屏蔽。</p><img src="https://gitee.com/FredyXu/coffee/raw/master/images/WX20220908-202830@2x.png" width="300" referrerpolicy="no-referrer"><p>IDF 的版本選擇 4.4.X。如果選項中沒有，可以勾選」Show all ESP-IDF tags「，之後就可以列出全部可下載版本。</p><p>一切就緒後點擊」Install「。</p></li><li><p>接下來就是耐心等待下載完成</p><img src="https://gitee.com/FredyXu/coffee/raw/master/images/WX20220908-203938@2x.png" width="300" referrerpolicy="no-referrer"><p><strong>温馨提示：如果不出意外的話，這一步驟需要極大的耐心</strong></p></li><li><p>接下來是下載"ESP-IDF Tools"， 同樣需要耐心等待。</p><img src="https://gitee.com/FredyXu/coffee/raw/master/images/WX20220908-205808@2x.png" width="300" referrerpolicy="no-referrer"><p>不過好在以上兩個步驟的這個過程只需要一次即可。</p></li><li><p>打開下載的項目文件夾，連接好 ESP32 開發板，選擇正確的端口，編譯並上傳。</p></li></ol><h1><a id="user-content-功能介紹" class="anchor" href="https://gitee.com/FredyXu/coffee#%E5%8A%9F%E8%83%BD%E4%BB%8B%E7%BB%8D"></a>功能介紹</h1><h2><a id="user-content-進入設置頁面" class="anchor" href="https://gitee.com/FredyXu/coffee#%E8%BF%9B%E5%85%A5%E8%AE%BE%E7%BD%AE%E9%A1%B5%E9%9D%A2"></a>進入設置頁面</h2><p>在主頁面按下編碼器按鈕即可進入設置頁面。</p><h2><a id="user-content-web 頁面設置" class="anchor" href="https://gitee.com/FredyXu/coffee#web%E9%A1%B5%E9%9D%A2%E8%AE%BE%E7%BD%AE"></a>Web 頁面設置</h2><p>在主頁長按編碼器按鈕即可彈出一個二維碼，當練習器與手機連接在同一個 WiFi 下時，掃描二維碼即可進入設置頁面。</p><h2><a id="user-content-傳輸內容格式約定" class="anchor" href="https://gitee.com/FredyXu/coffee#%E4%BC%A0%E8%BE%93%E5%86%85%E5%AE%B9%E6%A0%BC%E5%BC%8F%E7%BA%A6%E5%AE%9A"></a>傳輸內容格式約定</h2><p>目前網絡通信部分使用 WebSocket 方式，後續會添加 MQTT 方式可供選擇。兩種方式所傳輸的數據均使用同一種格式約定。具體約定內容如下：</p><p><code>發送時間|呼號|發送內容</code></p><p>其中，<code>發送時間</code>的格式為，小時:分鐘:秒鐘，每個時間使用 2 位數字表示，例如：<code>22:45:32</code>。<br>
每一部分內容之間使用」|「分割。完整示例如下：</p><p><code>22:45:32|BG7YXY|-.-. --.-</code></p><p>傳輸內容中不可包含電碼翻譯內容，電碼翻譯工作在練習器中實現。
如下內容為錯誤傳輸內容</p><p><code>22:45:32|BG7YXY|-.-.C --.-Q</code></p><p>儘管以上的傳輸內容可以正常工作，但是不建議這樣使用。原因如下：</p><ul><li><p>電碼是否需要翻譯在練習器中設定。練習器不過濾傳輸內容，會將所接收到的內容原樣輸出，所以如果將翻譯後的電碼一同傳輸會導致設置不翻譯電碼的用户顯示出翻譯後的內容。</p></li><li><p>後續功能中還將通過網絡傳輸其他內容，將翻譯後的電碼一同傳輸將影響此功能。</p></li></ul><h2><a id="user-content-自建服務器" class="anchor" href="https://gitee.com/FredyXu/coffee#%E8%87%AA%E5%BB%BA%E6%9C%8D%E5%8A%A1%E5%99%A8"></a>自建服務器</h2><p>用户可以自行搭建服務器使用，只需要實現如下功能即可。</p><ol><li>電碼內容通過文本格式傳輸，練習器發送的內容不包含發送時間信息，需要由服務器添加。練習器發送的內容示例如下：<code>BG7YXY|-.-. --.-</code> 。服務器需要將接收到的內容前插入時間信息，時間格式符合上一節」傳輸內容格式約定「中的要求。</li><li>將整理好的數據發送到在線的其他用户客户端中。最好能夠帶有羣組功能。後續我會將我的實現源碼共享出來供大家參考。</li></ol><h1><a id="user-content-特別鳴謝" class="anchor" href="https://gitee.com/FredyXu/coffee#%E7%89%B9%E5%88%AB%E9%B8%A3%E8%B0%A2"></a>特別鳴謝</h1><p>感謝 <strong>執水無為</strong> 提供關於練習器通聯訓練的促進機制的創意，稍後會在基礎功能穩定後添加進去。</p><p><strong>感謝在此項目中使用到的開源代碼的所有貢獻者們！世界因為有你們所以如此美好！</strong></p><h1><a id="user-content-更新日誌" class="anchor" href="https://gitee.com/FredyXu/coffee#%E6%9B%B4%E6%96%B0%E6%97%A5%E5%BF%97"></a>更新日誌</h1><p>2023-01-01</p><ul><li>完成練習器設置頁面部分</li></ul><p>2022-09-20</p><ul><li>優化設置部分</li><li>取消微信配網，改為使用 ESP 的 HTTP 服務進行設置</li><li>增加通知對話框</li></ul><p>2022-09-06</p><ul><li>優化按鍵檢查機制</li><li>優化分區表</li><li>調整 - 在播放接收到的電碼時不可鍵入電碼</li></ul><p>2022-09-05</p><ul><li>考慮到上網條件，將開發環境從 PlatformIO 更換到了樂鑫的 IDF 環境，以便下載相關內容的時候避免使用到境外服務器。</li><li>ESP-IDF 版本因為更換開發環境的原因，從 5.1.1 調整到 4.4.3</li></ul><p>2022-09-04</p><ul><li>完成電碼翻譯功能</li></ul>]]>
            </description>
            <pubDate>Tue, 23 Jan 2024 02:00:00 GMT</pubDate>
            <guid isPermaLink="false">https://gitee.com/FredyXu/coffee</guid>
            <link>https://gitee.com/FredyXu/coffee</link>
        </item>
        <item>
            <title>
                <![CDATA[每日一博 | Ngnix 常用配置及和基本功能講解]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0px; margin-right:0px; text-align:left">Ngnix 已經廣泛應用於 J-one 和 Jdos 的環境部署上，本文對 Ngnix 的常用的配置和基本功能進行講解，適合 Ngnix 入門學習。</p><span id="OSC_h1_1"></span><h1>1 核心配置</h1><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">找到 Nginx 安裝目錄下的 conf 目錄下 nginx.conf 文件，Ngnix 的基本功能配置是由它提供的。</p><span id="OSC_h2_2"></span><h2>1.1 配置文件結構</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">Nginx 的配置文件 (conf/nginx.conf) 整體上分為如下幾個部分：</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://img1.jcloudcs.com/developer.jdcloud.com/86865a3b-b7da-45c7-838d-9fce9ae9761b20230313164814.jpg" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">配置層級圖如下所示。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://img1.jcloudcs.com/developer.jdcloud.com/81aab960-45ae-4d09-a696-e70efc8bff1620230313164828.png" referrerpolicy="no-referrer"></p><span id="OSC_h2_3"></span><h2>1.2 配置文件示例</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">一個比較全的配置文件示例如下。</p><pre>&nbsp;</pre><ol><li><code><span style="color:#880000"># 以下是全局段配置</span></code></li><li><code><span style="color:#880000">#user administrator administrators; #配置用户或者組，默認為 nobody nobody。</span></code></li><li><code><span style="color:#880000">#worker_processes 2; #設置進程數，默認為 1</span></code></li><li><code><span style="color:#880000">#pid /nginx/pid/nginx.pid; #指定 nginx 進程運行文件存放地址</span></code></li><li><code><span style="color:#000000">error_log log</span><span style="color:#666600">/</span><span style="color:#000000">error</span><span style="color:#666600">.</span><span style="color:#000000">log debug</span><span style="color:#666600">;</span><span style="color:#000000"></span><span style="color:#880000">#制定日誌路徑，級別：debug|info|notice|warn|error|crit|alert|emerg</span></code></li><li><code><span style="color:#880000"># events 段配置信息</span></code></li><li><code><span style="color:#000000">events </span><span style="color:#666600">{</span></code></li><li><code><span style="color:#000000">accept_mutex on</span><span style="color:#666600">;</span><span style="color:#000000"></span><span style="color:#880000">#設置網路連接序列化，防止驚羣現象發生，默認為 on</span></code></li><li><code><span style="color:#000000">multi_accept on</span><span style="color:#666600">;</span><span style="color:#000000"></span><span style="color:#880000">#設置一個進程是否同時接受多個網絡連接，默認為 off</span></code></li><li><code><span style="color:#880000">#use epoll; #事件驅動模型，select|poll|kqueue|epoll|resig|/dev/poll|eventport</span></code></li><li><code><span style="color:#000000">worker_connections </span><span style="color:#006666">1024</span><span style="color:#666600">;</span><span style="color:#000000"></span><span style="color:#880000">#最大連接數，默認為 512</span></code></li><li><code><span style="color:#666600">}</span></code></li><li><code><span style="color:#880000"># http、配置請求信息</span></code></li><li><code><span style="color:#000000">http </span><span style="color:#666600">{</span></code></li><li><code><span style="color:#000000">include mime</span><span style="color:#666600">.</span><span style="color:#000000">types</span><span style="color:#666600">;</span><span style="color:#000000"></span><span style="color:#880000">#文件擴展名與文件類型映射表</span></code></li><li><code><span style="color:#000000">default_type application</span><span style="color:#666600">/</span><span style="color:#000000">octet</span><span style="color:#666600">-</span><span style="color:#000000">stream</span><span style="color:#666600">;</span><span style="color:#000000"></span><span style="color:#880000">#默認文件類型，默認為 text/plain</span></code></li><li><code><span style="color:#880000">#access_log off; #取消服務日誌 </span></code></li><li><code><span style="color:#000000">log_format myFormat </span><span style="color:#008800">'$remote_addr–$remote_user [$time_local] $request $status $body_bytes_sent $http_referer $http_user_agent $http_x_forwarded_for'</span><span style="color:#666600">;</span><span style="color:#000000"></span><span style="color:#880000">#自定義格式</span></code></li><li><code><span style="color:#000000">access_log log</span><span style="color:#666600">/</span><span style="color:#000000">access</span><span style="color:#666600">.</span><span style="color:#000000">log myFormat</span><span style="color:#666600">;</span><span style="color:#000000"></span><span style="color:#880000">#combined 為日誌格式的默認值</span></code></li><li><code><span style="color:#000000">sendfile on</span><span style="color:#666600">;</span><span style="color:#000000"></span><span style="color:#880000">#允許 sendfile 方式傳輸文件，默認為 off，可以在 http 塊，server 塊，location 塊。</span></code></li><li><code><span style="color:#000000">sendfile_max_chunk </span><span style="color:#006666">100k</span><span style="color:#666600">;</span><span style="color:#000000"></span><span style="color:#880000">#每個進程每次調用傳輸數量不能大於設定的值，默認為 0，即不設上限。</span></code></li><li><code><span style="color:#000000">keepalive_timeout </span><span style="color:#006666">65</span><span style="color:#666600">;</span><span style="color:#000000"></span><span style="color:#880000">#連接超時時間，默認為 75s，可以在 http，server，location 塊。</span></code></li><li>&nbsp;</li><li><code><span style="color:#000000">upstream mysvr </span><span style="color:#666600">{</span><span style="color:#000000"></span></code></li><li><code><span style="color:#000000">server </span><span style="color:#006666">127.0</span><span style="color:#666600">.</span><span style="color:#006666">0.1</span><span style="color:#666600">:</span><span style="color:#006666">7878</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#000000">server </span><span style="color:#006666">192.168</span><span style="color:#666600">.</span><span style="color:#006666">10.121</span><span style="color:#666600">:</span><span style="color:#006666">3333</span><span style="color:#000000"> backup</span><span style="color:#666600">;</span><span style="color:#000000"></span><span style="color:#880000">#熱備</span></code></li><li><code><span style="color:#666600">}</span></code></li><li><code><span style="color:#000000">error_page </span><span style="color:#006666">404</span><span style="color:#000000"> https</span><span style="color:#666600">://</span><span style="color:#000000">www</span><span style="color:#666600">.</span><span style="color:#000000">baidu</span><span style="color:#666600">.</span><span style="color:#000000">com</span><span style="color:#666600">;</span><span style="color:#000000"></span><span style="color:#880000">#錯誤頁</span></code></li><li><code><span style="color:#880000"># 第一個 Server 區塊開始，表示一個獨立的虛擬主機站點</span></code></li><li><code><span style="color:#000000">server </span><span style="color:#666600">{</span></code></li><li><code><span style="color:#000000">keepalive_requests </span><span style="color:#006666">120</span><span style="color:#666600">;</span><span style="color:#000000"></span><span style="color:#880000">#單連接請求上限次數。</span></code></li><li><code><span style="color:#000000">listen </span><span style="color:#006666">4545</span><span style="color:#666600">;</span><span style="color:#000000"></span><span style="color:#880000">#監聽端口</span></code></li><li><code><span style="color:#000000">server_name </span><span style="color:#006666">127.0</span><span style="color:#666600">.</span><span style="color:#006666">0.1</span><span style="color:#666600">;</span><span style="color:#000000"></span><span style="color:#880000">#監聽地址 </span></code></li><li><code><span style="color:#000000">location </span><span style="color:#666600">~*^.+</span><span style="color:#000000">$ </span><span style="color:#666600">{</span><span style="color:#000000"></span><span style="color:#880000">#請求的 url 過濾，正則匹配，~為區分大小寫，~*為不區分大小寫。</span></code></li><li><code><span style="color:#880000">#root path; #根目錄</span></code></li><li><code><span style="color:#880000">#index vv.txt; #設置默認頁</span></code></li><li><code><span style="color:#000000">proxy_pass http</span><span style="color:#666600">://</span><span style="color:#000000">mysvr</span><span style="color:#666600">;</span><span style="color:#000000"></span><span style="color:#880000">#請求轉向 mysvr 定義的服務器列表</span></code></li><li><code><span style="color:#000000">deny </span><span style="color:#006666">127.0</span><span style="color:#666600">.</span><span style="color:#006666">0.1</span><span style="color:#666600">;</span><span style="color:#000000"></span><span style="color:#880000">#拒絕的 ip</span></code></li><li><code><span style="color:#000000">allow </span><span style="color:#006666">172.18</span><span style="color:#666600">.</span><span style="color:#006666">5.54</span><span style="color:#666600">;</span><span style="color:#000000"></span><span style="color:#880000">#允許的 ip </span></code></li><li><code><span style="color:#666600">}</span><span style="color:#000000"></span></code></li><li><code><span style="color:#666600">}</span></code></li><li><code><span style="color:#666600">}</span></code></li></ol><span id="OSC_h2_4"></span><h2>1.3 locat 路徑映射講解</h2><span id="OSC_h3_5"></span><h3>1.3.1 格式：</h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">location [ = | ~ | ~<em><span>&nbsp;</span>| !~ | !~</em><span>&nbsp;</span>| @ ] uri {…}</p><span id="OSC_h3_6"></span><h3>1.3.2 解釋：</h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">= 表示精確匹配，如果找到，立即停止搜索並立即處理此請求。<br> ~ 表示執行一個正則匹配，區分大小寫匹配<br> ~<em><span>&nbsp;</span>表示執行一個正則匹配，不區分大小寫匹配<br> !~ 區分大小寫不匹配<br> !~</em><span>&nbsp;</span>不區分大小寫不匹配<br> ^~ 即表示只匹配普通字符（空格）。使用前綴匹配，^表示「非」，即不查詢正則表達式。如果匹配成功，則不再匹配其他 location。<br> @ 指定一個命名的 location，一般只用於內部重定向請求。例如 error_page, try_files<br> uri 是待匹配的請求字符串，可以不包含正則表達式，也可以包含正則表達式；</p><span id="OSC_h3_7"></span><h3>1.3.3 優先級和示例：</h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">[不加] &lt; [~/~*] &lt; [^~] &lt; [=]<br> 示例如下：</p><pre>&nbsp;</pre><ol><li><code><span style="color:#000000">location </span><span style="color:#666600">=</span><span style="color:#000000"></span><span style="color:#666600">/</span><span style="color:#000000"></span><span style="color:#666600">{</span></code></li><li><code><span style="color:#880000"># 精確匹配/，主機名後面不能帶任何字符串 /</span></code></li><li><code><span style="color:#880000"># 只匹配 http://abc.com</span></code></li><li><code><span style="color:#880000"># http://abc.com [匹配成功]</span></code></li><li><code><span style="color:#880000"># http://abc.com/index [匹配失敗]</span></code></li><li><code><span style="color:#666600">}</span></code></li><li><code><span style="color:#000000">location </span><span style="color:#666600">^~</span><span style="color:#000000"></span><span style="color:#666600">/</span><span style="color:#000000">img</span><span style="color:#666600">/</span><span style="color:#000000"></span><span style="color:#666600">{</span></code></li><li><code><span style="color:#880000">#以 /img/ 開頭的請求，都會匹配上</span></code></li><li><code><span style="color:#880000">#http://abc.com/img/a.jpg [成功]</span></code></li><li><code><span style="color:#880000">#http://abc.com/img/b.mp4 [成功]</span></code></li><li><code><span style="color:#666600">}</span></code></li><li><code><span style="color:#000000">location </span><span style="color:#666600">~*</span><span style="color:#000000"></span><span style="color:#666600">/</span><span style="color:#660066">Example</span><span style="color:#666600">/</span><span style="color:#000000"></span><span style="color:#666600">{</span></code></li><li><code><span style="color:#880000"># 則會忽略 uri 部分的大小寫</span></code></li><li><code><span style="color:#880000">#http://abc.com/test/Example/ [匹配成功]</span></code></li><li><code><span style="color:#880000">#http://abc.com/example/ [匹配成功]</span></code></li><li><code><span style="color:#666600">}</span></code></li><li><code><span style="color:#000000">location </span><span style="color:#666600">/</span><span style="color:#000000">documents </span><span style="color:#666600">{</span></code></li><li><code><span style="color:#880000"># 如果有正則表達式可以匹配，則優先匹配正則表達式。</span></code></li><li><code><span style="color:#880000">#http://abc.com/documentsabc [匹配成功]</span></code></li><li><code><span style="color:#666600">}</span></code></li><li><code><span style="color:#000000">location </span><span style="color:#666600">/</span><span style="color:#000000"></span><span style="color:#666600">{</span></code></li><li><code><span style="color:#880000">#http://abc.com/abc [匹配成功]</span></code></li><li><code><span style="color:#666600">}</span></code></li></ol><span id="OSC_h1_8"></span><h1>2 反向代理</h1><span id="OSC_h2_9"></span><h2>2.1 反向代理概念：</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">反向代理 (Reverse Proxy) 是指以代理服務器來接受 internet 上的連接請求，然後將請求轉發給內部網絡上的服務器，並將從服務器上得到的結果返回給 internet 上請求連接的客户端。真實的服務器不能直接被外部網絡訪問，所以需要一台代理服務器，而代理服務器能被外部網絡訪問的同時又跟真實服務器在同一個網絡環境，當然也可能是同一台服務器，端口不同而已。<br> 反向代理通過 proxy_pass 指令來實現。</p><span id="OSC_h2_10"></span><h2>2.2 反向代理示例：</h2><pre>&nbsp;</pre><ol><li><code><span style="color:#000000">server </span><span style="color:#666600">{</span></code></li><li><code><span style="color:#000000">listen </span><span style="color:#006666">80</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#000000">server_name localhost</span><span style="color:#666600">;</span></code></li><li>&nbsp;</li><li><code><span style="color:#000000">location </span><span style="color:#666600">/</span><span style="color:#000000"></span><span style="color:#666600">{</span></code></li><li><code><span style="color:#000000">proxy_pass http</span><span style="color:#666600">://</span><span style="color:#000000">localhost</span><span style="color:#666600">:</span><span style="color:#006666">8081</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#000000">proxy_set_header </span><span style="color:#660066">Host</span><span style="color:#000000"> $host</span><span style="color:#666600">:</span><span style="color:#000000">$server_port</span><span style="color:#666600">;#為請求頭添加</span><span style="color:#660066">Host</span><span style="color:#666600">字段，用於指定請求服務器的域名/</span><span style="color:#000000">IP</span><span style="color:#666600">地址和端口號。</span><span style="color:#000000"></span></code></li><li>&nbsp;</li><li><code><span style="color:#880000"># 設置用户 ip 地址</span></code></li><li><code><span style="color:#000000">proxy_set_header X</span><span style="color:#666600">-</span><span style="color:#660066">Forwarded</span><span style="color:#666600">-</span><span style="color:#660066">For</span><span style="color:#000000"> $remote_addr</span><span style="color:#666600">;#為請求頭添加</span><span style="color:#000000">XFF</span><span style="color:#666600">字段，值為客户端的</span><span style="color:#000000">IP</span><span style="color:#666600">地址。</span></code></li><li><code><span style="color:#880000"># 當請求服務器出錯去尋找其他服務器</span></code></li><li><code><span style="color:#000000">proxy_next_upstream error timeout invalid_header http_500 http_502 http_503</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#666600">}</span></code></li></ol><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">當我們訪問 localhost 的時候，ngnix 就將我們的請求轉到 localhost:8081 了</p><span id="OSC_h1_11"></span><h1>3 負載均衡</h1><span id="OSC_h2_12"></span><h2>3.1 負載均衡概念：</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">當有 2 台或以上服務器時，代理服務器根據規則將請求分發到指定的服務器上處理。</p><span id="OSC_h2_13"></span><h2>3.2 負載均衡策略及示例：</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">Nginx 目前支持多種負載均衡策略，這裏講解常用的 6 種。</p><span id="OSC_h3_14"></span><h3>3.2.1RR(round robin :輪詢，默認)：</h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">每個請求按時間順序逐一分配到不同的後端服務器，也就是説第一次請求分配到第一台服務器上，第二次請求分配到第二台服務器上，如果只有兩台服務器，第三次請求繼續分配到第一台上，這樣循環輪詢下去，也就是服務器接收請求的比例是 1:1， 如果後端服務器 down 掉，能自動剔除。輪詢是默認配置，不需要太多的配置<br> 同一個項目分別使用 8081 和 8082 端口啓動項目</p><pre>&nbsp;</pre><ol><li><code><span style="color:#000000">upstream web_servers </span><span style="color:#666600">{</span></code></li><li><code><span style="color:#000000">server localhost</span><span style="color:#666600">:</span><span style="color:#006666">8081</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#000000">server localhost</span><span style="color:#666600">:</span><span style="color:#006666">8082</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#666600">}</span></code></li><li>&nbsp;</li><li>&nbsp;</li><li><code><span style="color:#000000">server </span><span style="color:#666600">{</span></code></li><li><code><span style="color:#000000">listen </span><span style="color:#006666">80</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#000000">server_name localhost</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#880000">#access_log logs/host.access.log main;</span></code></li><li><code><span style="color:#000000">location </span><span style="color:#666600">/</span><span style="color:#000000"></span><span style="color:#666600">{</span></code></li><li><code><span style="color:#000000">proxy_pass http</span><span style="color:#666600">:</span><span style="color:#880000">//web_servers;</span></code></li><li><code><span style="color:#000000">proxy_set_header </span><span style="color:#660066">Host</span><span style="color:#000000"> $host</span><span style="color:#666600">:</span><span style="color:#000000">$server_port</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#666600">}</span></code></li><li><code><span style="color:#666600">}</span></code></li></ol><span id="OSC_h3_15"></span><h3>3.2.2 熱備：</h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">假設有 2 台服務器，當一台服務器發生事故時，才啓用第二台服務器給提供服務。服務器處理請求的順序：AAAAAA 突然 A 掛了，服務器處理請求的順序：BBBBBBBBBBBBBB…..</p><pre>&nbsp;</pre><ol><li><code><span style="color:#000000">upstream web_servers </span><span style="color:#666600">{</span></code></li><li><code><span style="color:#000000">server </span><span style="color:#006666">127.0</span><span style="color:#666600">.</span><span style="color:#006666">0.1</span><span style="color:#666600">:</span><span style="color:#006666">7878</span><span style="color:#666600">;</span><span style="color:#000000"></span></code></li><li><code><span style="color:#000000">server </span><span style="color:#006666">192.168</span><span style="color:#666600">.</span><span style="color:#006666">10.121</span><span style="color:#666600">:</span><span style="color:#006666">3333</span><span style="color:#000000"> backup</span><span style="color:#666600">;</span><span style="color:#000000"></span><span style="color:#880000">#熱備 </span></code></li><li><code><span style="color:#666600">}</span></code></li></ol><span id="OSC_h3_16"></span><h3>3.2.3 權重</h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">跟據配置的權重的大小而分發給不同服務器不同數量的請求。如果不設置，則默認為 1。下面服務器的請求順序為：ABBABBABBABBABB….。</p><pre>&nbsp;</pre><ol><li><code><span style="color:#000000">upstream web_servers </span><span style="color:#666600">{</span></code></li><li><code><span style="color:#000000">server localhost</span><span style="color:#666600">:</span><span style="color:#006666">8081</span><span style="color:#000000"> weight</span><span style="color:#666600">=</span><span style="color:#006666">1</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#000000">server localhost</span><span style="color:#666600">:</span><span style="color:#006666">8082</span><span style="color:#000000"> weight</span><span style="color:#666600">=</span><span style="color:#006666">2</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#666600">}</span></code></li></ol><span id="OSC_h3_17"></span><h3>3.2.4 ip_hash</h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">這樣每個 ip 地址固定訪問一個後端服務器，可以解決 session 的問題。</p><pre>&nbsp;</pre><ol><li><code><span style="color:#000000">upstream test </span><span style="color:#666600">{</span></code></li><li><code><span style="color:#000000">ip_hash</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#000000">server localhost</span><span style="color:#666600">:</span><span style="color:#006666">8080</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#000000">server localhost</span><span style="color:#666600">:</span><span style="color:#006666">8081</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#666600">}</span></code></li></ol><span id="OSC_h3_18"></span><h3>3.2.5 fair(第三方)</h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">按後端服務器的響應時間來分配請求，響應時間短的優先分配。這個配置是為了更快的給用户響應。</p><pre>&nbsp;</pre><ol><li><code><span style="color:#000000">upstream backend </span><span style="color:#666600">{</span></code></li><li><code><span style="color:#000000">fair</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#000000">server localhost</span><span style="color:#666600">:</span><span style="color:#006666">8080</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#000000">server localhost</span><span style="color:#666600">:</span><span style="color:#006666">8081</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#666600">}</span></code></li></ol><span id="OSC_h3_19"></span><h3>3.2.6 url_hash(第三方)</h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">按訪問 url 的 hash 結果來分配請求，使每個 url 定向到同一個後端服務器，後端服務器為緩存時比較有效。在 upstream 中加入 hash 語句，hash_method 是使用的 hash 算法</p><pre>&nbsp;</pre><ol><li><code><span style="color:#000000">upstream backend </span><span style="color:#666600">{</span></code></li><li><code><span style="color:#000000">hash_method crc32</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#000000">hash $request_uri</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#000000">server localhost</span><span style="color:#666600">:</span><span style="color:#006666">8080</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#000000">server localhost</span><span style="color:#666600">:</span><span style="color:#006666">8081</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#666600">}</span></code></li></ol><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">以上 6 種負載均衡各自適用不同情況下單獨或者混合使用，可以根據實際情況選擇使用，fair 和 url_hash 需要安裝第三方模塊才能使用。</p><span id="OSC_h1_20"></span><h1>4 動靜分離：</h1><span id="OSC_h2_21"></span><h2>4.1 動靜分離概念：</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">動靜分離是指在 web 服務器架構中，將靜態頁面與動態頁面或者靜態內容接口和動態內容接口分開不同系統訪問的架構設計方法，進而提升整個服務訪問性能和可維護性。</p><span id="OSC_h2_22"></span><h2>4.2 動靜分離示例：</h2><pre>&nbsp;</pre><ol><li><code><span style="color:#000000">upstream web_servers </span><span style="color:#666600">{</span></code></li><li><code><span style="color:#000000">server localhost</span><span style="color:#666600">:</span><span style="color:#006666">8081</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#000000">server localhost</span><span style="color:#666600">:</span><span style="color:#006666">8082</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#666600">}</span></code></li><li><code><span style="color:#000000">server </span><span style="color:#666600">{</span></code></li><li><code><span style="color:#000000">listen </span><span style="color:#006666">80</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#000000">server_name localhost</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#000000">set $doc_root </span><span style="color:#666600">/</span><span style="color:#000000">usr</span><span style="color:#666600">/</span><span style="color:#000000">local</span><span style="color:#666600">/</span><span style="color:#000000">var</span><span style="color:#666600">/</span><span style="color:#000000">www</span><span style="color:#666600">;</span></code></li><li>&nbsp;</li><li><code><span style="color:#000000">location </span><span style="color:#666600">~*</span><span style="color:#000000"> \.</span><span style="color:#666600">(</span><span style="color:#000000">gif</span><span style="color:#666600">|</span><span style="color:#000000">jpg</span><span style="color:#666600">|</span><span style="color:#000000">jpeg</span><span style="color:#666600">|</span><span style="color:#000000">png</span><span style="color:#666600">|</span><span style="color:#000000">bmp</span><span style="color:#666600">|</span><span style="color:#000000">ico</span><span style="color:#666600">|</span><span style="color:#000000">swf</span><span style="color:#666600">|</span><span style="color:#000000">css</span><span style="color:#666600">|</span><span style="color:#000000">js</span><span style="color:#666600">)</span><span style="color:#000000">$ </span><span style="color:#666600">{</span></code></li><li><code><span style="color:#000000">root $doc_root</span><span style="color:#666600">/</span><span style="color:#000000">img</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#666600">}</span></code></li><li><code><span style="color:#000000">location </span><span style="color:#666600">/</span><span style="color:#000000"></span><span style="color:#666600">{</span></code></li><li><code><span style="color:#000000">proxy_pass http</span><span style="color:#666600">://</span><span style="color:#000000">web_servers</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#000000">proxy_set_header </span><span style="color:#660066">Host</span><span style="color:#000000"> $host</span><span style="color:#666600">:</span><span style="color:#000000">$server_port</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#666600">}</span></code></li><li><code><span style="color:#000000">error_page </span><span style="color:#006666">500</span><span style="color:#000000"></span><span style="color:#006666">502</span><span style="color:#000000"></span><span style="color:#006666">503</span><span style="color:#000000"></span><span style="color:#006666">504</span><span style="color:#000000"></span><span style="color:#666600">/</span><span style="color:#006666">50x</span><span style="color:#666600">.</span><span style="color:#000000">html</span><span style="color:#666600">;</span><span style="color:#000000"></span><span style="color:#666600">#出現</span><span style="color:#000000"></span><span style="color:#006666">500</span><span style="color:#000000"></span><span style="color:#006666">502</span><span style="color:#000000"></span><span style="color:#006666">503</span><span style="color:#000000"></span><span style="color:#006666">504</span><span style="color:#666600">錯誤時走內部跳轉</span></code></li><li><code><span style="color:#000000">location </span><span style="color:#666600">=</span><span style="color:#000000"></span><span style="color:#666600">/</span><span style="color:#006666">50x</span><span style="color:#666600">.</span><span style="color:#000000">html </span><span style="color:#666600">{</span><span style="color:#000000"></span></code></li><li><code><span style="color:#000000">root $doc_root</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#666600">}</span></code></li><li><code><span style="color:#666600">}</span></code></li></ol><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">結果：訪問<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Flocalhost%2Ftest.jpg" rel="nofollow" target="_blank">http://localhost/test.jpg</a><span>&nbsp;</span>時直接返回/usr/local/var/www/img 路徑下的圖片.<br> 訪問<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Flocalhost%2Findex.html" rel="nofollow" target="_blank">http://localhost/index.html</a><span>&nbsp;</span>就會訪問後端服務器 (tomcat 等)</p><span id="OSC_h1_23"></span><h1>5 其他常用的指令：</h1><span id="OSC_h2_24"></span><h2>5.1.return 指令</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">返回 http 狀態碼和可選的第二個參數可以是重定向的 URL</p><pre>&nbsp;</pre><ol><li><code><span style="color:#000088">return</span><span style="color:#000000"> code </span><span style="color:#666600">[</span><span style="color:#000000">text</span><span style="color:#666600">];</span></code></li><li><code><span style="color:#000088">return</span><span style="color:#000000"> code URL</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#000088">return</span><span style="color:#000000"> URL</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#666600">例如：</span></code></li><li><code><span style="color:#000000">location </span><span style="color:#666600">/</span><span style="color:#000000"></span><span style="color:#666600">{</span></code></li><li><code><span style="color:#000088">return</span><span style="color:#000000"></span><span style="color:#006666">404</span><span style="color:#666600">;</span><span style="color:#000000"></span><span style="color:#880000"># 直接返回狀態碼</span></code></li><li><code><span style="color:#666600">}</span></code></li><li><code><span style="color:#000000">location </span><span style="color:#666600">/</span><span style="color:#000000"></span><span style="color:#666600">{</span></code></li><li><code><span style="color:#000088">return</span><span style="color:#000000"></span><span style="color:#006666">404</span><span style="color:#000000"></span><span style="color:#008800">"pages not found"</span><span style="color:#666600">;</span><span style="color:#000000"></span><span style="color:#880000"># 返回狀態碼 + 一段文本</span></code></li><li><code><span style="color:#666600">}</span></code></li><li><code><span style="color:#000000">location </span><span style="color:#666600">/</span><span style="color:#000000"></span><span style="color:#666600">{</span></code></li><li><code><span style="color:#000088">return</span><span style="color:#000000"></span><span style="color:#006666">302</span><span style="color:#000000"></span><span style="color:#666600">/</span><span style="color:#000000">bbs </span><span style="color:#666600">;</span><span style="color:#000000"></span><span style="color:#880000"># 返回狀態碼 + 重定向地址</span></code></li><li><code><span style="color:#666600">}</span></code></li><li><code><span style="color:#000000">location </span><span style="color:#666600">/</span><span style="color:#000000"></span><span style="color:#666600">{</span></code></li><li><code><span style="color:#000088">return</span><span style="color:#000000"> https</span><span style="color:#666600">:</span><span style="color:#880000">//www.baidu.com ; # 返回重定向地址</span></code></li><li><code><span style="color:#666600">}</span></code></li></ol><span id="OSC_h2_25"></span><h2>5.2 rewrite 指令</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">重寫 URI 請求 rewrite，通過使用 rewrite 指令在請求處理期間多次修改請求 URI，該指令具有一個可選參數和兩個必需參數。<br> 第一個 (必需) 參數是請求 URI 必須匹配的正則表達式。<br> 第二個參數是用於替換匹配 URI 的 URI。<br> 可選的第三個參數重寫策略</p><ul><li>last 重寫後的 URL 發起新請求，再次進入 server 段，重試 location 的中的匹配；</li><li>break 直接使用重寫後的 URL ，不再匹配其它 location 中語句；</li><li>redirect 返回 302 臨時重定向；</li><li>permanent 返回 301 永久重定向；</li></ul><pre>&nbsp;</pre><ol><li><code><span style="color:#000000">location </span><span style="color:#666600">/</span><span style="color:#000000">users</span><span style="color:#666600">/</span><span style="color:#000000"></span><span style="color:#666600">{</span></code></li><li><code><span style="color:#000000">rewrite </span><span style="color:#666600">^/</span><span style="color:#000000">users</span><span style="color:#666600">/(.*)</span><span style="color:#000000">$ </span><span style="color:#666600">/</span><span style="color:#000000">show</span><span style="color:#666600">?</span><span style="color:#000000">user</span><span style="color:#666600">=</span><span style="color:#000000">$1 </span><span style="color:#000088">break</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#666600">}</span></code></li></ol><span id="OSC_h2_26"></span><h2>5.3 error_page 指令</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">使用 error_page 指令，您可以配置 NGINX 返回自定義頁面以及錯誤代碼，替換響應中的其他錯誤代碼，或將瀏覽器重定向到其他 URI。在以下示例中，error_page 指令指定要返回 404 頁面錯誤代碼的頁面 (/404.html)。</p><pre>&nbsp;</pre><ol><li><code><span style="color:#000000">server</span><span style="color:#666600">{</span></code></li><li><code><span style="color:#000000">error_page </span><span style="color:#006666">500</span><span style="color:#000000"></span><span style="color:#006666">502</span><span style="color:#000000"></span><span style="color:#006666">503</span><span style="color:#000000"></span><span style="color:#006666">504</span><span style="color:#000000"></span><span style="color:#666600">/</span><span style="color:#006666">50x</span><span style="color:#666600">.</span><span style="color:#000000">html</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#000000">location </span><span style="color:#666600">=/</span><span style="color:#006666">50x</span><span style="color:#666600">.</span><span style="color:#000000">html</span><span style="color:#666600">{</span></code></li><li><code><span style="color:#000000">root html</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#666600">}</span></code></li><li><code><span style="color:#666600">}</span></code></li></ol><span id="OSC_h2_27"></span><h2>5.4 日誌</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">訪問日誌：需要開啓壓縮 gzip on; 否則不生成日誌文件，打開 log_format、access_log 註釋</p><pre>&nbsp;</pre><ol><li><code><span style="color:#000000">log_format main </span><span style="color:#008800">'$remote_addr - $remote_user [$time_local] "$request" '</span></code></li><li><code><span style="color:#008800">'$status $body_bytes_sent "$http_referer" '</span></code></li><li><code><span style="color:#008800">'"$http_user_agent" "$http_x_forwarded_for"'</span><span style="color:#666600">;</span></code></li><li>&nbsp;</li><li>&nbsp;</li><li><code><span style="color:#000000">access_log </span><span style="color:#666600">/</span><span style="color:#000000">usr</span><span style="color:#666600">/</span><span style="color:#000088">local</span><span style="color:#666600">/</span><span style="color:#000000">etc</span><span style="color:#666600">/</span><span style="color:#000000">nginx</span><span style="color:#666600">/</span><span style="color:#000000">logs</span><span style="color:#666600">/</span><span style="color:#000000">host</span><span style="color:#666600">.</span><span style="color:#000000">access</span><span style="color:#666600">.</span><span style="color:#000000">log main</span><span style="color:#666600">;</span></code></li><li>&nbsp;</li><li>&nbsp;</li><li><code><span style="color:#000000">gzip on</span></code></li></ol><span id="OSC_h2_28"></span><h2>5.5 deny 、allow 指令</h2><pre>&nbsp;</pre><ol><li><code><span style="color:#880000">#禁止訪問某個目錄</span></code></li><li><code><span style="color:#000000">location </span><span style="color:#666600">/</span><span style="color:#000000"></span><span style="color:#666600">{</span></code></li><li><code><span style="color:#000000">allow </span><span style="color:#006666">192.168</span><span style="color:#666600">.</span><span style="color:#006666">0.0</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#000000">allow </span><span style="color:#006666">127.0</span><span style="color:#666600">.</span><span style="color:#006666">0.1</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#000000">deny all</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#880000">#這段配置值允許 192.168.0./24 網段和 127.0.0.1 的請求，其他來源 IP 全部拒絕。</span></code></li><li><code><span style="color:#666600">}</span></code></li></ol><span id="OSC_h2_29"></span><h2>5.6 內置變量</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">nginx 的配置文件中可以使用的內置變量以美元符$開始。其中，大部分預定義的變量的值由客户端發送攜帶。<br> $args ：#這個變量等於請求行中的參數，同$query_string<br> $content_length ：請求頭中的 Content-length 字段。<br> $content_type ：請求頭中的 Content-Type 字段。<br> $document_root ：當前請求在 root 指令中指定的值。<br> $host ：請求行的主機名，為空則為請求頭字段 Host 中的主機名，再為空則與請求匹配的 server_name<br> $http_user_agent ：客户端 agent 信息<br> $http_cookie ：客户端 cookie 信息<br> $limit_rate ：這個變量可以限制連接速率。<br> $request_method ：客户端請求的動作，通常為 GET 或 POST。<br> $remote_addr ：客户端的 IP 地址。<br> $remote_port ：客户端的端口。<br> $remote_user ：已經經過 Auth Basic Module 驗證的用户名。<br> $request_filename ：當前請求的文件路徑，由 root 或 alias 指令與 URI 請求生成。<br> $scheme ：HTTP 方法（如 http，https）。<br> $server_protocol ：請求使用的協議，通常是 HTTP/1.0 或 HTTP/1.1。<br> $server_addr ：服務器地址，在完成一次系統調用後可以確定這個值。<br> $server_name ：服務器名稱。<br> $server_port ：請求到達服務器的端口號。<br> $request_uri ：包含請求參數的原始 URI，不包含主機名，如：」/foo/bar.php?arg=baz」。<br> $uri ：不帶請求參數的當前 URI，$uri 不包含主機名，如」/foo/bar.html」。<br> $document_uri ：與$uri 相同</p><span id="OSC_h1_30"></span><h1>6 總結</h1><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">Ngnix 是一款高性能反向代理服務器，學習它非常有必要，本文講解了 Ngnix 核心配置，介紹了反向代理，負載均衡，動靜分離三大功能，最後擴展了一些常用的指令。本文介紹了 Ngnix 的基礎用法，後續的 Ngnix 內核以及原理部分有待研究。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">作者：京東物流，殷世傑</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">來源：京東雲開發者社區，自猿其説 Tech 轉載請註明來源</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 23 Jan 2024 01:55:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/4090830/blog/10887916</guid>
            <link>https://my.oschina.net/u/4090830/blog/10887916</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[開放籤電子簽章企業版，業務線功能正確使用方法]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><strong><span><span><span><strong>一、業務線功能説明</strong></span></span></span></strong></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span><span>業務線全稱為「開放籤電子簽章業務線管理」，顧名思義業務線功能主要是圍繞用户不同業務場景下使用電子簽章的業務管理。用户可根據不同的業務場景（人力資源合同簽署、內部證明文件簽署、企業對企業簽署、企業對個人簽署等），通過業務線功能配置不同的電子簽署功能，從而更加便捷、安全的管理電子簽章的應用。</span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span><span>用户可通過業務線配置電子文件簽署的業務流程，通過對業務線進行配置來確定和規範簽署文件、簽署方、簽署過程，同時也極大的簡化了簽署發起的操作。</span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><strong><span><span><span><strong>二、功能特點</strong></span></span></span></strong></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><strong><span><span><span><strong>靈活規範：</strong></span></span></span></strong><span><span><span>通過業務線可快速構建出企業的各類簽約場景，並進行標準化管理。例如，人事合同簽署、內部文件審批簽字、銷售合同簽署、對外報告蓋章等場景；</span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><strong><span><span><span><strong>操作標準：</strong></span></span></span></strong><span><span><span>通過標準化的流程，確保各方按照一致的規範和要求進行文件簽署；</span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><strong><span><span><span><strong>風險控制：</strong></span></span></span></strong><span><span><span>通過業務線控制，降低簽署過程中因操作不當等帶來的風險；</span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><strong><span><span><span><strong>提高效率：</strong></span></span></span></strong><span><span><span>自動化和簡化發起流程，提高文件簽署的效率和速度；</span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><strong><span><span><span><strong>合規性：</strong></span></span></span></strong><span><span><span>確保文件簽署符合法律法規和企業內部政策；</span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><strong><span><span><span><strong>權限可控：</strong></span></span></span></strong><span><span><span>業務線設置各類權限，包括業務線本身的管理權、使用權，同時包括通過業務線發起的簽署業務的數據查看權限、文件下載權限；</span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><strong><span><span><span><strong>三、業務線功能説明</strong></span></span></span></strong></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><strong><span><span><span><strong>1、視頻講解</strong></span></span></span></strong></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><strong><span><span><span><strong>（1）業務線介紹：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1oc411x7zu%2F%3Fspm_id_from%3D888.80997.embed_other.whitelist%26t%3D43" target="_blank">視頻功能講解</a></strong></span></span></span></strong></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><strong><span><span><span><strong>（2）業務線配置介紹：</strong></span></span></span></strong></span></span></span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1Z94y1T7gB%2F%3Fspm_id_from%3D888.80997.embed_other.whitelist%26t%3D45" target="_blank"><span><span><span><span><strong><span><span><span><strong>視頻功能講解</strong></span></span></span></strong></span></span></span></span></a></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><strong><span><span><span><strong>2、文字説明</strong></span></span></span></strong></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><strong><span><span><span><strong>（1）基本信息設置</strong></span></span></span></strong></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><strong><span><span><span><strong>編號：</strong></span></span></span></strong><span><span><span>發起簽署時，可根據預設的規則自動生成文檔編號，統一一類簽署場景的編號規範，減少發起人輸入操作，編號規則支持文本、日期、流水號、時間戳，示例：KFQ-renshi-20230101-000001;</span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><strong><span><span><span><strong>主題：</strong></span></span></span></strong><span><span><span>發起簽署時，可根據預設的規則自動生成文檔主題，統一一類簽署場景的主題規範，減少發起人輸入操作，主題規則支持文本、業務線名稱、日期、流水號、時間戳、發起人姓名、接收方姓名，示例：KFQ-入職相關合同（2023 版本）-20230101-000001-李四;</span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><strong><span><span><span><strong>簽署方：</strong></span></span></span></strong><span><span><span>支持經辦人發起時自行設置和經辦人發起時，按照預設流程發起並簽署兩種方式。可設置簽署順序、發起方內部簽署人和外部接收方；</span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><strong><span><span><span><strong>抄送：</strong></span></span></span></strong><span><span><span>是否允許抄送，為該業務線設置抄送時機、抄送的用户類型、指定抄送人；</span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><strong><span><span><span><strong>簽約文件：</strong></span></span></span></strong><span><span><span>支持上傳本地文件和選擇在線模板，減少經辦人發起時重複上傳簽約文件。同時，可限制經辦人是否可刪除或新增簽約文件；</span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><strong><span><span><span><strong>附件：</strong></span></span></span></strong><span><span><span>限制經辦人發起簽署時是否可以上傳附件；</span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><strong><span><span><span><strong>簽署方式：</strong></span></span></span></strong></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span><span>a、使用 CA 數字證書（符合電子簽名法）：簽署文件時，需要使用 CA 機構頒發的數字證書；</span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span><span>b、使用平台防篡改證書（保護文件）（無法律效力）：簽署文件時，使用平台下發的防篡改證書，該證書非 CA 機構頒發，僅用於文件保護，避免文件被篡改，簽署後的文件不具備法律效力；</span></span></span></span></span></span></span></p><p><img height="709" src="https://oscimg.oschina.net/oscnet/up-3b855599317328959d0b6e8d2dbd23ef0d2.png" width="1280" referrerpolicy="no-referrer"></p><p style="margin-left:.0001pt; margin-right:0; text-align:center"><span><span><span><span><span><span><span>圖一、基本信息設置</span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><strong><span><span><span><strong>（2）權限管理</strong></span></span></span></strong></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span><span>業務線管理權限：業務線的管理權限和使用權限配置；</span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span><span>簽約文件權限設置：簽約數據查看權限和簽署文件下載權限配置.</span></span></span></span></span></span></span></p><p><img height="630" src="https://oscimg.oschina.net/oscnet/up-94a4f4e4dde46ddd76822def13d63575dbd.png" width="1280" referrerpolicy="no-referrer"></p><p style="margin-left:.0001pt; margin-right:0; text-align:center"><span><span><span><span><span><span><span><span>圖二、權限管理</span></span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span><span>（3）簽署位置及參數設置</span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span><span>指定各簽署方的簽署位置；</span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span><span>如果簽約文件中包含在線模板，可為模板中的各個參數指定對應的填寫方，在簽署環節時，各簽署人可根據設置完成待簽署文件的信息完善。</span></span></span></span></span></span></span></p><p><img height="708" src="https://oscimg.oschina.net/oscnet/up-921b6aa7ff79c0c801f4d5782b3d069f2a2.png" width="1280" referrerpolicy="no-referrer"></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify">&nbsp;</p><p style="margin-left:.0001pt; margin-right:0; text-align:center"><span><span><span><span><span><span><span><span>圖三、位置及參數設置</span></span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><strong><span><span><span><strong>​四、總結</strong></span></span></span></strong></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span><span>開放籤業務線具有靈活、便捷、安全的電子簽署業務配置能力。接下來業務線將持續更新，添加更多配置功能，使開放籤電子簽章系統可以滿足更多電子籤業務場景。</span></span></span></span></span></span></span></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 22 Jan 2024 07:04:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276436</guid>
            <link>https://www.oschina.net/news/276436</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Fedora 40 計劃採用 Bpfman 作為默認 eBPF 程序管理器]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="margin-left:0px; margin-right:0px; text-align:left">Fedora 40 正在考慮採用 bpfman 作為默認 eBPF 程序管理器，以簡化 eBPF 程序的部署和管理。</p><p style="margin-left:0px; margin-right:0px; text-align:left"><img alt="" src="https://oscimg.oschina.net/oscnet/up-20aea944299992e9369a9cfe05627bf7e4d.png" referrerpolicy="no-referrer"></p><p>開發者在提案寫道：「<em>bpfman 作為 eBPF 管理器，專注於簡化 eBPF 程序的部署和管理。bpfman 是一個軟件棧，旨在使加載、卸載、修改和監控 eBPF 程序變得更加容易，無論是在單個主機還是在 Kubernetes 集羣中。我們的目標是在 Fedora 引入 bpfman，讓系統能方便地加載 eBPF 程序。</em>」</p><blockquote><p style="margin-left:0px; margin-right:0px; text-align:left"><img src="https://oscimg.oschina.net/oscnet/up-a8b461fd85c4a7a0cfae3bf419d5b9e7681.png" referrerpolicy="no-referrer"><br><u><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ffedoraproject.org%2Fwiki%2FChanges%2FDefaultBpfman" target="_blank">https://fedoraproject.org/wiki/Changes/DefaultBpfman</a></em></u></p></blockquote><p style="margin-left:0px; margin-right:0px; text-align:left">該提案目前正在等待 Fedora 工程和指導委員會 (FESCo) 的批准，很可能會在 4 月份出現在 Fedora 40 中。</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 22 Jan 2024 06:16:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276433/fedora-40-bpfman-ebpf-manager</guid>
            <link>https://www.oschina.net/news/276433/fedora-40-bpfman-ebpf-manager</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Ubuntu Pro 包更新無法禁用引用户不滿]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">一名 Ubuntu 用户在 Launchpad 上提交了一份針對 update-manager 的錯誤報告，<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugs.launchpad.net%2Fubuntu%2F%2Bsource%2Fupdate-manager%2F%2Bbug%2F2047778" target="_blank">表達</a>了自己對 Ubuntu LTS 版本的軟件更新工具 (Software Updater tool) 無法禁止顯示 Ubuntu Pro 軟件包更新的不滿。</span></p><blockquote><p><span style="color:#000000">每次調用軟件更新程序時，我都會看到一個 Ubuntu Pro 安全更新列表，底部還有一條信息，告訴我需要啓用 Ubuntu Pro 才能更新，只有一個按鈕可供選擇，那就是"Remind Me Later"。我搜索了一下 Ubuntu Pro，想知道它到底是什麼，最後得出的結論是我不需要它；但似乎沒有任何方法可以永久拒絕安裝它。每次重啓電腦，我都會再次看到同樣的文件，唯一的選擇又是啓用 Pro 或稍後提醒，而這兩個選項都不能反映我的意願和願望。這究竟是一個選項，還是必須升級？作為用户，我對此感到很困惑。</span></p></blockquote><p><img height="263" src="https://static.oschina.net/uploads/space/2024/0123/140949_wfD7_4252687.png" width="500" referrerpolicy="no-referrer"></p><p><span style="color:#000000">他表示，也許這只是一個非常拙劣且引導性的營銷伎倆，而不是軟件本身存在 bug；但無論如何，有關 Ubuntu Pro 的這一困擾表明軟件更新程序存在缺陷，官方應該提供一種能讓用户拒絕升級的方法。</span></p><p><span style="color:#000000">Canonical 於去年更新了 update-manager（又稱 Software Updater tool），無論用户系統是否啓用 Ubuntu Pro，它都會顯示可用的 Ubuntu Pro 軟件包更新列表（如果未啓用，則無法安裝）。</span></p><p><span style="color:#000000">還有人反映稱，對於一些不太懂行的人而言，此舉更加迷惑。「我接到一些客户的電話，他們不知道自己的系統出了什麼問題，在進行更新時會看到一個更新管理器窗口，裏面有一些灰色的軟件包，你無法刪除，除非你啓用 ubuntu pro。」</span></p><p><span style="color:#000000">Canonical 的 Oliver Grawert 對此進行了<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugs.launchpad.net%2Fubuntu%2F%2Bsource%2Fupdate-manager%2F%2Bbug%2F2047778%2Fcomments%2F7" target="_blank">回覆</a>：</span></p><blockquote><p><span style="color:#000000">Pro 是一項完全免費的服務，適合個人和小型企業使用，它為用户提供了 2.5 多個附加軟件包的安全修復......為了維護這一點，canonical 安全團隊必須擴展規範的安全團隊。維護這 2.5 萬個軟件包是有成本的，canonical 在這裏所做的就是讓企業為這些額外的工作付費，然後再免費提供給社區...</span></p><p><span style="color:#000000">為了確保這些企業不會免費攫取，需要建立一個控制機制，這也是為什麼需要註冊才能獲得。</span></p></blockquote><p><span style="color:#000000">並反問用户，是更願意安全漏洞被知而不報從而被惡意行為者利用，還是更願意在更新時獲得可用修復程序的列表。此外，他還邀請有想法的用户提出解決問題的方案，項目團隊將進行考量：</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdiscourse.ubuntu.com%2Ft%2Fubuntu-pro-faq%2F34042" target="_blank">https://discourse.ubuntu.com/t/ubuntu-pro-faq/34042</a></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 22 Jan 2024 06:08:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276430/ubuntu-pro-software-updater-issue</guid>
            <link>https://www.oschina.net/news/276430/ubuntu-pro-software-updater-issue</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[FreeBSD 也要「鏽化」？團隊稱考慮在基礎系統採用 Rust]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>FreeBSD 開發者正在考慮允許在 FreeBSD 基礎系統中使用 Rust 編程語言的好處和成本。</p><blockquote><p><img src="https://oscimg.oschina.net/oscnet/up-a49c5ed65580e1dd715c12f8604797093fb.png" referrerpolicy="no-referrer"></p><p><em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flists.freebsd.org%2Farchives%2Ffreebsd-hackers%2F2024-January%2F002823.html" target="_blank">https://lists.freebsd.org/archives/freebsd-hackers/2024-January/002823.html</a></u></em></p></blockquote><p>郵件寫道，在 FreeBSD 基礎系統使用 Rust 的<strong>主要缺點是構建時間加倍。</strong>這是因為需要編譯基於 LLVM 的 Rustc 編譯器和 Rust 的所有附加功能，這些操作使得基礎系統的構建時間大約是當前的兩倍。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-a7d460b865a7215d966af4b4b1bd8a09b6e.png" referrerpolicy="no-referrer"></p><p>如果 FreeBSD 基礎系統採用了 Rust，開發者可以重新 Rust 重寫許多組件——而不是使用 C++，例如 ZFS 守護進程 (zfsd)、重寫 devd、WiFi 用户空間代碼也可以受益於用 Rust 編寫，等等。列舉部分如下：</p><blockquote><p>* ctl-exporter (I started this, but discovered that the CTL stats API is<br> &nbsp; unstable, so it can't live in ports. &nbsp;Instead, I had to do it in C).<br> &nbsp; https://github.com/freebsd/freebsd-src/commit/1a7f22d9c211f504f6c48a86401469181a67ec34</p><p>* fusefs tests. &nbsp;Absolutely impossible to do in C. &nbsp;I considered Rust, but went<br> &nbsp; with C++ so they could live in base. &nbsp;They are too closely coupled to<br> &nbsp; fusefs(5) to live out-of-tree.<br> &nbsp; https://github.com/freebsd/freebsd-src/tree/main/tests/sys/fs/fusefs</p><p>* devd. &nbsp;Currently C++, but imp suggested a rewrite.<br> &nbsp; https://github.com/freebsd/freebsd-src/tree/main/sbin/devd</p><p>* zfsd. &nbsp;Currently C++, but I've long pondered a rewrite. &nbsp;Using Rust would<br> &nbsp; make it more testable.<br> &nbsp; https://github.com/freebsd/freebsd-src/tree/main/cddl/usr.sbin/zfsd</p><p>* nscd. &nbsp;Currently C, but confusing and with no test coverage. &nbsp;I've<br> &nbsp; contemplated a rewrite myself, but I don't want to do it in C.<br> &nbsp; https://github.com/freebsd/freebsd-src/tree/main/usr.sbin/nscd</p><p>* The userland portion of the 802.11ac and Lightning stacks. &nbsp;scottl suggested<br> &nbsp; that these were good candidates for Rust.</p><p>* freebsd-kpi-r14-0 . &nbsp;https://crates.io/crates/freebsd-kpi-r14-0</p></blockquote></div>
                                    ]]>
            </description>
            <pubDate>Mon, 22 Jan 2024 05:54:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276426/freebsd-considers-rust-base</guid>
            <link>https://www.oschina.net/news/276426/freebsd-considers-rust-base</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[飛致雲旗下開源項目 GitHub Star 數量突破 100,000 個！]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#000000; text-align:start"><span><span style="color:#000000">2024 年 1 月 19 日，</span><strong><span style="color:#00355d">中國領先的開源軟件提供商 FIT2CLOUD 飛致雲宣佈，其旗下開源項目在代碼託管平台 GitHub 上所獲得的 Star 數量已經超過 100,000 個。</span></strong>與此同時，飛致雲旗下開源項目的月度新增軟件下載次數也超過 100,000 次。</span></p><p style="color:#000000; text-align:start"><img alt="" height="1080" src="https://oscimg.oschina.net/oscnet/up-e9826cd18696f364c38f706941565519335.jpg" width="1920" referrerpolicy="no-referrer"></p><p style="color:#000000; text-align:start"><span><span style="color:#000000">飛致雲的開源之旅起步於 2017 年 11 月對 JumpServer 開源堡壘機項目（</span></span><em><span><span style="color:#000000">https://github.com/jumpserver</span></span></em><span><span style="color:#000000">）的收購。此後基於長期的開源企業戰略和持續完善的社區生態，飛致雲相繼創立 MeterSphere 開源持續測試平台項目（</span></span><em><span><span style="color:#000000">https://github.com/metersphere</span></span></em><span><span style="color:#000000">）、DataEase 開源數據可視化分析平台項目（</span></span><em><span><span style="color:#000000">https://github.com/dataease</span></span></em><span><span style="color:#000000">）和 1Panel 開源面板項目（</span></span><em><span><span style="color:#000000">https://github.com/1Panel-dev</span></span></em><span><span style="color:#000000">），並且於 2021 年 1 月收購 Halo 開源建站工具項目（</span></span><em><span><span style="color:#3e3e3e"><span style="background-color:#feffff">https://github.com/halo-de</span></span><span style="color:#3e3e3e">v</span></span></em><span><span style="color:#3e3e3e"><span style="background-color:#feffff">）。</span></span></span></p><p style="color:#000000; text-align:start"><img alt="" height="574" src="https://oscimg.oschina.net/oscnet/up-a1bf6c4efe509ab85e280ab4441fdccdbc9.png" width="1396" referrerpolicy="no-referrer"></p><p style="color:#000000; text-align:start">在創新與併購的雙輪驅動下，飛致雲以「為數字經濟時代創造好軟件」為使命的開源生態體系不斷髮展壯大。目前，飛致雲旗下開源項目的貢獻者超過 1,700 位，有超過 7,000 位社區用户提交 Issue，Fork 總數量超過 24,000 次，PR（(Pull Request）數量超過 43,000 次。另據不完全統計，飛致雲開源社區交流總人數已經超過 30,000 人。</p><p style="color:#000000; text-align:start">飛致雲旗下五大核心開源項目的產研體系高速迭代又彼此聯動，並且通過開源社區運營持續收集用户反饋，與廣大社區用户保持高頻的良性互動，基於用户反饋不斷優化開源軟件產品。與此同時，飛致雲的開源增值服務模式也在過去的六年間不斷髮展和優化。目前在中國市場，飛致雲的開源付費用户已經超過 2,500 家，廣泛覆蓋金融、製造、能源、交通、醫療、教育、通信、傳媒、房地產、互聯網等行業。</p><p style="color:#000000; text-align:start">軟件是支撐數字經濟時代發展的重要基石。《「十四五」軟件和信息技術服務業發展規劃》指出，「開放、平等、協作、共享的開源模式，加速軟件迭代升級，促進產用協同創新，推動產業生態完善，成為全球軟件技術和產業創新的主導模式。當前，開源已覆蓋軟件開發的全域場景，正在構建新的軟件技術創新體系，引領新一代信息技術創新發展，全球 97% 的軟件開發者和 99% 的企業使用開源軟件，基礎軟件、工業軟件、新興平台軟件大多基於開源，開源軟件已經成為軟件產業創新源泉和‘標準件庫’。同時，開源開闢了產業競爭新賽道，基於全球開發者眾研眾用眾創的開源生態正加速形成。」</p><p style="color:#000000; text-align:start">FIT2CLOUD 飛致雲 CEO 阮志敏表示：<strong><span style="color:#00355d">秉持「軟件用起來才有價值，才有改進的機會」的核心價值觀，飛致雲正在向着「成為中國數字化團隊首選的通用工具軟件提供商」的願景目標不斷前行。在開源的道路上，我們與用户、與客户共成長。</span></strong></p><p style="color:#000000; text-align:start"><img alt="" height="890" src="https://oscimg.oschina.net/oscnet/up-2505ad47bc0e6df4ad47aa0868c55b792d0.png" width="1619" referrerpolicy="no-referrer"></p><p style="color:#000000; text-align:start"><span>▲ 圖 1 飛致雲開源大屏（2024 年 1 月 18 日 14:00）</span></p><p style="color:#000000; text-align:start"><img alt="" src="https://oscimg.oschina.net/oscnet/up-74c6a47084bfb41b02f7e7ccb612faf1db8.png" referrerpolicy="no-referrer"></p><p style="color:#000000; text-align:start"><span>▲ 圖 2 飛致雲公司概覽大屏（2024 年 1 月 18 日）</span></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 22 Jan 2024 04:17:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/4736111/blog/10919084</guid>
            <link>https://my.oschina.net/u/4736111/blog/10919084</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Nacos 2.3.0 正式版發佈，Nacos Controller 項目開源]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>作者：楊翊</p><h2>新版本發佈</h2><p>Nacos 2.3.0-BETA 版本經過 1 個多月的社區測試，修復了部分的問題並對部分新功能的使用進行了少量優化後，於 2023 年 12 月 7 日正式發佈。</p><p>Nacos 2.3.0 版本基於&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzUzNzYxNjAzMg%3D%3D%26mid%3D2247559032%26idx%3D1%26sn%3Dd9396e3bddc180e2bbeaea08c3286670%26chksm%3Dfae7ecb7cd9065a13b2aac2de154be3b682544b531c54fe3371fa8e78eef5953e05d6298010e%26scene%3D21%23wechat_redirect" target="_blank">2.3.0-BETA</a>&nbsp;版本為基礎，主要進行了如下更新：</p><ul><li>基於能力協商機制，支持通過 Grpc 的方式進行持久化服務實例的註冊及刪除。</li><li>Console UI 中顯示更多內容，例如部署模式等。</li><li>對參數校驗功能的實現方式進行優化。</li><li>對 TopN 指標的實現進行重構，優化準確性和內存消耗。</li></ul><p>詳細的更新日誌請查看：</p><pre><code>## Feature
[#11393] Support register or deregister persistent instance by grpc.

## Enhancement&amp;Refactor
[#11275] Enhance console ui deploy, show more information like `mode`.
[#11298] Strip groupNamePrefix of instance serviceName at register or deregister.
[#11310] Simplify the validate method for serviceinfo.
[#11342] Simplify BatchDeregister instances conditions to ip and port.
[#11343] Simplified parameters checker control logic.
[#11352] Refactor topN logic to enhance memory usage and accuracy.

## BugFix
[#10353] Handling DataIntegrityViolationException and DuplicateKeyException together.
[#11299] Fix console ui auth pagination failure.
[#11382] Fix console ui listening query pagination failure.
[#11384] Fix console ui comparing configuration failure.
[#11390] Fix Config EncryptionPluginService order problem.
[#11442] Fix listen configuration check failed without namespace.

## Dependency
[#11216] Declare httpcore as direct dependency to fix avoid conflict.
[#11396] Upgrade jackson same with spring boot dependency.
[#11439] Upgrade some UI component to solve security problem.
</code></pre><h2>Nacos Controller 項目開源</h2><p>在雲原生下，應用代碼與運行環境可以通過 Helm 或 Kustomize 等軟件進行交付、維護、CICD，但應用的 Nacos 配置依然需要手工地遷移、或使用控制枱修改發佈配置。藉助於&nbsp;Nacos Controller <strong>[</strong><strong>1]</strong> 項目，我們可以將 Nacos 配置管理下移到 Kubernetes 集羣中，又或是可以將 Kubernetes 中 ConfigMap 配置上移到 Nacos 控制枱中，從而實現統一管理能力。</p><h3>Nacos 配置下移到 Kubernetes 集羣中</h3><h4>工作機制</h4><p>Nacos Controller 監聽集羣內的 DC 資源，當 DC 資源發生變化時，Nacos Controller 將其中的配置內容同步到 Nacos Server 中。</p><p><img src="https://oscimg.oschina.net/oscnet/up-d13902a108e460eea74465f3e4c110b0598.png" alt="" referrerpolicy="no-referrer"></p><h4>簡易 Demo</h4><p>在 Nacos Controller 中，我們定義了一份 CRD：DynamicConfiguration（簡稱 DC），我們將 Nacos 配置保存在 ConfigMap 中，對配置的任何修改都通過 DC 將其中的配置同步到對應的 Nacos 服務端中。在後續的配置維護中，直接修改對應的 ConfigMap 即可。以下是一份簡易的 Demo 示例：</p><pre><code>apiVersion: nacos.io/v1
kind: DynamicConfiguration
metadata:
    name: dc-demo-cluster2server
spec:
  dataIds:
  - data-id1.properties
  - data-id2.yml
  nacosServer:
    endpoint: &lt;your-nacos-server-endpoint&gt;
    namespace: &lt;your-nacos-namespace-id&gt;
    group: &lt;your-nacos-group&gt;
    authRef:
      apiVersion: v1
      kind: Secret
      name: nacos-auth
  strategy:
    syncPolicy: Always
    syncDirection: cluster2server
    syncDeletion: true
  objectRef:
    apiVersion: v1
    kind: ConfigMap
    name: nacos-config-cm

---
apiVersion: v1
kind: ConfigMap
metadata:
    name: nacos-config-cm
    namespace: default
data:
    data-id1.properties: |
      key=value
      key2=value2
    data-id2.yml: |
      app:
        name: test

---
apiVersion: v1
kind: Secret
metadata:
    name: nacos-auth
data:
    ak: &lt;base64 ak&gt;
    sk: &lt;base64 sk&gt;
</code></pre><h3>Kubernetes 配置上移到 Nacos 控制枱</h3><h4>工作機制</h4><p>首先需要用户創建 DC 資源指定需要同步哪些 DataId，Nacos Controller 根據讀取到的 DC 配置，選擇性監聽 Nacos Server 中的相關配置並將配置改動同步到 Kubernetes 集羣中。</p><p><img src="https://oscimg.oschina.net/oscnet/up-d736813e431613b6413591d077040fda436.png" alt="" referrerpolicy="no-referrer"></p><h4>簡易 Demo</h4><p>雲原生下，應用除了需要加載 Nacos 配置外，還可能依賴一些環境變量，比如 JVM 參數通過環境變量注入。做得比較好的方式是通過 ConfigMap 等 Kubernetes 原生方式管理配置，通過引用的方式傳遞給應用 Pod。在 Nacos Controller 中，我們可以定義一份 DC，將 Nacos 服務端中的某些 DataId 同步到 Kubernetes 集羣中的 ConfigMap 中，從而實現配置的統一管理。以下是一份示例 Demo：</p><pre><code>apiVersion: nacos.io/v1
kind: DynamicConfiguration
metadata:
    name: dc-demo-server2cluster
spec:
  dataIds:
  - APP1_JVM_PARAMS
  - APP2_JVM_PARAMS
  nacosServer:
    endpoint: &lt;your-nacos-server-endpoint&gt;
    namespace: &lt;your-nacos-namespace-id&gt;
    group: &lt;your-nacos-group&gt;
    authRef:
      apiVersion: v1
      kind: Secret
      name: nacos-auth
  strategy:
    syncPolicy: Always
    syncDirection: server2cluster
    syncDeletion: true
---
apiVersion: v1
kind: Secret
metadata:
    name: nacos-auth
data:
    ak: &lt;base64 ak&gt;
    sk: &lt;base64 sk&gt;
</code></pre><h3>雲原生下的配置管理最佳實踐</h3><p>在使用 Kubernetes 的場景下，一個微服務應用的配置被分割成兩部份，一部分存放管理在 Kubernetes 集羣中的 Secret 或 ConfigMap 中，另一部份存放管理與 Nacos 配置中心。對於運維人員，我們需要知道哪些配置是存放在何處且同時需要對兩個平台的配置管理操作均有所瞭解，一來是增加了運維人員的知識門檻，二來是增加了應用配置運維的操作成本。通過 Nacos Controller 項目，我們將應用的所有配置集中於一處管理，降低應用配置運維的門檻與複雜性。</p><p><img src="https://oscimg.oschina.net/oscnet/up-15236dda6a0b791d16c3d87a0ff0ebbd209.png" alt="" referrerpolicy="no-referrer"></p><h4>面向 Kubernetes 運維偏好的用户</h4><p>通過 Nacos Controller 項目，我們將應用與應用配置的交付和維護集中在 Kubernetes 集羣中。</p><p><img src="https://oscimg.oschina.net/oscnet/up-ab4b6aba57a492717aa28a51934ed9fdddc.png" alt="" referrerpolicy="no-referrer"></p><p>以下通過一份 Helm 應用 Chart 包説明如何集中管理。</p><pre><code>.
├── Chart.yaml
├── charts
├── conf
│   ├── application-dev.properties
│   ├── application.properties
│   ├── consumer-app.properties
│   └── provider-app.yaml
├── templates
│   ├── consumer.yaml
│   ├── dc.yaml
│   └── provider.yaml
└── values.yaml
</code></pre><p>以上是一份 Chart 包目錄結構，其中 conf 目錄存放的是 Nacos 配置，文件名即 DataId，文件內容即對應的 Content。在 templates/dc.yaml 中，我們定義一份 ConfigMap 來組裝這些配置。templates 目錄中的 consumer.yaml 與 provider.yaml 分別是應用定義。</p><pre><code>apiVersion: v1
kind: ConfigMap
metadata:
  name: nacos-config
  namespace: {{ .Release.Namespace }}
data:
  {{- range $path, $_ := .Files.Glob "conf/**" }}
  {{ $path | base }}: |-
{{ $.Files.Get $path | indent 4}}
  {{- end }}
</code></pre><p><strong>使用上述方式定義好應用與配置後，可以藉助 git 實現應用、配置的版本管理。當需要發佈應用或配置時，修改對應文件後，執行 helm upgrade 命令即可。</strong></p><h4>面向 Nacos 運維偏好的用户</h4><p>Nacos 配置管理能力使得應用可以動態調整運行配置，但對於一些特殊的參數，如 JVM 參數、特殊環境變量、特殊目錄文件等內容，Nacos 配置管理依然無法涵蓋。在 Kubernetes 集羣中，我們一般將環境變量或一些特殊文件配置寫入 ConfigMap 中，通過 envFrom 能力將內容引用到環境變量中或者 volumeMount 掛載到文件系統中。這樣的配置管理能力與 Nacos 配置管理能力是散開的，不利於統一管理。藉助於 Nacos Controller，我們將這些配置上移到 Nacos 控制枱中，進行統一管理。</p><p><img src="https://oscimg.oschina.net/oscnet/up-7f674fb17e9b9797cbd3b76836c621c638b.png" alt="" referrerpolicy="no-referrer"></p><p>以下是一份 Demo 應用，通過 Nacos 控制枱管理 JVM 啓動參數：</p><pre><code>apiVersion: apps/v1
kind: Deployment
metadata:
  name: demo-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: demo-app
  template:
    metadata:
      labels:
        app: demo-app
    spec:
      containers:
      - name: demo-app
        image: openjdk:8 #替換為你的應用鏡像
        command: ["/bin/sh", "-c", "java -jar ${JVM_PARAMS} /app.jar"]
        env:
        - name: JVM_PARAMS # 從 ConfigMap 中載入 JVM 參數到環境變量中
          valueFrom:
            configMapKeyRef:
              name: nacos-config
              key: APP1_JVM_PARAMS

---
apiVersion: nacos.io/v1
kind: DynamicConfiguration
metadata:
    name: nacos-config
spec:
  dataIds:
  - APP1_JVM_PARAMS
  - APP2_JVM_PARAMS
  nacosServer:
    endpoint: &lt;your-nacos-server-endpoint&gt;
    namespace: &lt;your-nacos-namespace-id&gt;
    group: &lt;your-nacos-group&gt;
    authRef:
      apiVersion: v1
      kind: Secret
      name: nacos-auth
  strategy:
    syncPolicy: Always
    syncDirection: server2cluster
    syncDeletion: true
---
apiVersion: v1
kind: Secret
metadata:
    name: nacos-auth
data:
    ak: &lt;base64 ak&gt;
    sk: &lt;base64 sk&gt;
</code></pre><p>在 Nacos 控制枱中，修改 DataId：APP1_JVM_PARAMS 後，配置將自動同步到集羣的 ConfigMap 中。只需重啓相關應用，則對應的 JVM 參數將自動變化。<strong>成功實現將應用的所有配置集中管理在 Nacos 上。</strong></p><h2>Nacos 社區新晉&nbsp;Committer</h2><p>社區中新增了 2 位 Committer&nbsp;Karsonto <strong>[</strong><strong>2]</strong> 和&nbsp;Daydreamer-ia <strong>[</strong><strong>3]</strong> 。同時，Nacos 社區又迎來了一位來自開源之夏的 Committer 同學&nbsp;Daydreamer-ia&nbsp;。</p><p><img src="https://oscimg.oschina.net/oscnet/up-cff13fc011b530801a7a7de4e3fe2b1e895.png" alt="" referrerpolicy="no-referrer"></p><h2>展望</h2><h3>2.X 後續計劃</h3><p>從 2021 年 3 月 2.0.0 正式版發佈至今，2.X 版本已經走了接近 2 年時間，如今 2.3.0 版本發佈，完成了大部分功能的插件化提煉，在之後的 2.3.X 版本中，會主要對當前版本的問題進行修復，並做出小範圍的功能優化。同時對於 2.4.0 版本，會作為一個 Nacos3.0 的過度版本，對大量代碼進行優化重構，在提升穩定性、健壯性的同時，提升易用性和可觀測性，向 Nacos3.0 版本平穩過度。</p><h3>3.0 計劃</h3><p>Nacos 社區同時也開啓了關於&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzU4NzU0MDIzOQ%3D%3D%26mid%3D2247511397%26idx%3D3%26sn%3D3ed3ef95e5ce1e396554ba4f370a0254%26scene%3D21%23wechat_redirect" target="_blank">Nacos3.0</a>&nbsp;的暢想和規劃，Nacos 將會從統一控制面、支持國產化、存儲計算分離等方向進一步演進 Nacos 的功能和架構，歡迎社區積極參與到新版本的建設中。</p><p><img src="https://oscimg.oschina.net/oscnet/up-ae6e82384f221721d25cb6bc6624f7117ac.png" alt="" referrerpolicy="no-referrer"></p><p><img src="https://oscimg.oschina.net/oscnet/up-1fba0033910e46bee9c0a01b2d4172ae33e.png" alt="" referrerpolicy="no-referrer"></p><h2>About Nacos</h2><p>Nacos 致力於幫助您發現、配置和管理微服務。Nacos 提供了一組簡單易用的特性集，幫助您快速實現動態服務發現、服務配置、服務元數據及流量管理。Nacos 幫助您更敏捷和容易地構建、交付和管理微服務平台。Nacos 是構建以「服務」為中心的現代應用架構 (例如微服務範式、雲原生範式) 的服務基礎設施。</p><p>最後歡迎大家使用釘釘搜索羣號加入 Nacos 社區羣，釘釘羣號：12810027056</p><p><strong>相關鏈接：</strong></p><p>[1]&nbsp;Nacos Controller</p><p><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnacos-group%2Fnacos-controller" target="_blank">https://github.com/nacos-group/nacos-controller</a></em></p><p>[2]&nbsp;Karsonto</p><p><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkarsonto" target="_blank">https://github.com/karsonto</a></em></p><p>[3]&nbsp;Daydreamer-ia</p><p><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FDaydreamer-ia" target="_blank">https://github.com/Daydreamer-ia</a></em></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 22 Jan 2024 04:16:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/3874284/blog/10918936</guid>
            <link>https://my.oschina.net/u/3874284/blog/10918936</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[「回看 Milvus 的 2023」：AI 熱潮中的非典型向量數據庫]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>2023 年是 AI 應用開發領域的一個重要轉折點。</p><p>在這一年裏，大語言模型（LLMs）因其卓越的自然語言處理能力而廣受讚譽，極大地拓寬了機器學習應用的場景。開發者們逐漸意識到，有了 LLMs，他們可以設計出更智能、更容易互動的應用程序。與此同時，「向量數據庫」已成為業界的熱門話題，其作為大型模型長期記憶的角色得到了認可。像 RAG（檢索增強生成）模型、智能代理和多模態檢索等應用的興起生動地展示了向量數據庫在實現高效多模態數據檢索、減少大型模型的幻覺以及補充領域知識方面的巨大潛力。</p><p>此外，2023 年大模型技術的發展也帶來了另一個重要變化——嵌入提取能力的顯著提升。根據 Huggingface 上的 MTEB 排行榜數據，像 UAE、VoyageAI、CohereV3 和 bge 這樣的性能領先嵌入模型都在 2023 年發佈。它們的迅速發展進一步增強了向量檢索的有效性，為各種 AI 應用提供了更精確、更高效的數據處理能力。</p><p>當然，在這一年中，得益於應用場景的演變、資本投資和媒體炒作，向量數據庫已成為一個廣為人知的技術術語。數十家初創公司進入向量數據庫領域，許多傳統數據庫開始將向量作為一個重要的數據類型對待。然而，隨着知名度的提升，爭議也隨之而來，激起了關於專門向量數據庫必要性的辯論。無論是關係數據庫、NoSQL 還是搜索引擎，在許多情況下似乎都能替代向量數據庫。</p><p>回顧完熱鬧的 2023 年，我們來談談 2024 年。在我看來，2024 年伊始是個審視向量數據庫行業的好時機，包括在這一領域中獨樹一幟的 Milvus。</p><p>以下報告最初是為我們的 Milvus 社區內部反思而製作的，通過大模型重新整理，旨在提供對過去一年內向量數據庫領域真正進步和趨勢的清晰而詳細的視角。這將幫助 AIGC 應用開發者在技術選擇上做出更有教育意義和戰略性的決策。</p><h2>01.數據不會説謊</h2><p>Milvus 是全球第一款向量數據庫，首次開源是在 2019 年，以其高可靠性、可擴展性、搜索質量和性能而聞名。2023 年，我們見證了 AIGC 應用場景的演變所驅動一個向量數據庫重要的轉變，以下是一些最能代表 Milvus 在 2023 年進展的關鍵數據：</p><h3>0 - 滾動升級期間零停機時間</h3><p>對於許多向量數據庫的新手來説，他們選型的關注點往往更多地在功能上而非運營維護。應用開發者通常對他們的向量數據庫的穩定性的關注比對事務性數據庫的需求要低得多，因為他們的應用程序通常處於非常早期階段。然而，在 AIGC 應用領域，如果你想在生產環境中部署你的應用程序並實現最佳用户體驗，穩定性和可維護性就變得不可或缺。意識到這一點，Milvus 從 2.2.3 版本開始引入了滾動升級，通過在多個版本中持續改進，逐漸變得更加穩定，並最終實現了零停機時間的滾動升級。</p><h3>3X - 生產環境中的性能提升</h3><p>向量檢索的性能一直是向量數據庫的關注焦點。Zilliz 發佈了 VectorDB bench，以幫助測試不同場景下的向量檢索性能。與過去的方法不同，VectorDB bench 現在專注於真實世界的數據，包括更接近實際嵌入模型的數據集（如最新的 OpenAI 嵌入和 Clip 數據集）、更廣泛的測試場景（包括過濾、實時更新,刪除）和更大的測試數據集（大多數當前的測試框架針對的是小而固定的數據點，如果某些 vectordb 在數據集上作弊可能會誤導）。</p><p>目前，大多數向量檢索供應商提供的解決方案都圍繞開源 HNSW 算法的調整，這在各種生產部署中遇到顯著的性能挑戰，尤其是在涉及高過濾（超過 90%）和頻繁刪除的場景中。Milvus 在 2023 年不僅專注於最大化實驗室性能，而且轉向解決用户生產環境中的這些真實世界性能問題，在過濾、流式插入查詢等實際生產場景實現了 3 倍以上的性能提升。</p><h3>5% - Beir 數據集上的召回率提升</h3><p>Dense Embedding 雖然有效，但在某些場景中依然存在侷限性，如搜索特定名稱、對象、某些縮寫和短查詢上下文。Sparse Embeding 在這些情況下可以與 Dense Embedding 互補，結合 ReRanking，在一些數據集上實現了 5% 的 NDCG<a href="https://my.oschina.net/u/3333828">@10</a> 提升。除了搜索質量之外，Milvus 還引入了一種基於圖的 Sparse Embedding 檢索解決方案，顯著超過 WAND 等傳統搜索方法。在 NeurIPS BigANN 競賽中，Zilliz 員工王子豪提出的名為 Pyanns 的解決方案，並獲得了全球第一的成績，這個解決方案也是我們生產 Sparse Sembedding 方案的前身。隨着稀疏嵌入提取模型和 Reranker 的不斷髮展，向量數據庫中混合查詢的重要性將越來越大。（事實上，儘管 Splade 目前是最佳的稀疏向量提取模型，效果大大超過了 BM25 的檢索結果，根據我們的測試結果它可能不久後就不再是最佳的稀疏嵌入模型了。）</p><h3>10 倍 - 內存節省</h3><p>在 2023 年，檢索增強生成（RAG）模型被廣泛認為是向量數據庫的最主要應用之一。我們發現，在文檔被分割成塊之後，一個含有 500 個 Token 的 Chunk（通常 1000 字節）會轉換成一個 1536 維的 float32 向量（通常 3000 字節），這意味着向量數據的體積可能會超過原始文檔的大小，給成本帶來了重大挑戰。</p><p>作為第一個支持基於磁盤索引的開源向量數據庫，Milvus 通過磁盤混合存儲實現了五倍的內存節省。2023 年末的 Milvus 新版本允許通過內存映射文件（MMap）將標量和向量數據/索引加載到磁盤，與傳統的內存索引相比，這可以實現超過 10 倍的內存節省。特別值得注意的是，RAG 應用常展現出對冷熱數據不同的使用模式，這使得 MMap 數據緩存能力對於 RAG 應用尤其有益。</p><h3>20 次 - 版本迭代</h3><p>2023 年對 Milvus 而言是一個轉折性的年份。隨着應用場景的顯著演變，Milvus 的設計理念也相應地發生了改變。在 2.2.9 版本中引入的動態 Schema，標誌着 Milvus 從優先追求絕對性能向更強調用户友好性的轉變。我們在 2.3 版本中加入了諸如 Upsert、範圍搜索以及餘弦相似度等關鍵特性，均來自於用户的呼聲。整個年度的 20 次版本更新不僅體現了超過 300 名社區開發者的心血，也足以證明瞭社區以用户為中心的開發模式所帶來的積極成果。</p><h3>100 萬 - 單個集羣支持的租户數量</h3><p>在構建大模型應用時，多租户支持是關鍵特性，特別是在 RAG 和代理應用場景中，用户對數據隔離的要求越來越高。在面向消費者（ToC）的環境下，租户數量可能高達數百萬，這使得物理數據隔離變得不實際（在關係數據庫中創建數百萬個表是不可行的）。為應對這一挑戰，Milvus 引入了 PartitionKey 功能，使得基於 PartitionKey 的邏輯隔離和高效數據過濾成為可能。</p><p>在面向企業（ToB）的場景中，租户數量通常在數萬級別，實施物理資源隔離策略更加可行和可控。因此，在 2.3.4 版本中，Milvus 對內存管理、協程處理和 CPU 優化進行了顯著改進。這些改進使得在單個集羣中創建數萬個 Collection 變得可行，從而可以使用一個 Collection 一個租户的方式支持多租户。</p><h3>1000 萬次 - Docker 鏡像拉取</h3><p>在 2023 年的最後一天，Milvus 慶祝了一個引人注目的里程碑：達到 1000 萬次 Docker 鏡像下載。這一成就不僅凸顯了全球開發者對 Milvus 的興趣在與日俱增，也強調了 Milvus 在向量數據庫領域中日益增長的重要性。作為世界上第一個雲原生向量數據庫，Milvus 一直與 Kubernetes 和容器生態系統緊密結合。那麼未來呢？很多開發者都會好奇，向量數據庫領域的下一個熱點會是什麼？可能是無服務器架構（Serverless）嗎？這裏先賣個關子。</p><h3>100 億 - 單個 Collection 中的實體數量</h3><p>儘管在當前的 AI 熱潮中，可擴展性可能不是最吸引眼球的部分，但它仍然對業務的成功至關重要。</p><p>以一個實例來説明，我們就曾用 Milvus 幫助一個大型模型供應商從一個龐大的 100 億數據點集合中提取出深層價值。當然，並非所有用户的數據量都如此龐大，但 Milvus 以強大的可擴展性輕鬆適配不同數據體量的用户。</p><p>例如，在面對 1000 萬個數據點時，Milvus 的處理速度堪稱「如手指滑過絲綢般順滑」，為相應用户業務的持續發展打下堅實的基礎。在面對 1 億個數據點時，Milvus 可能是唯一一個能夠有序、靈活處理該規模的向量數據庫。當數據點高達 10 億時，用户往往面臨成本與性能的雙重挑戰，Milvus 則可以通過多種優化方式幫助用户解決這一困境。最後，如果大家有誰正面臨着處理 100 億數據實體的挑戰——請毫不猶豫地聯繫我們！我們可以共同探索如何支持和管理上述海量數據。</p><h2>02.向量數據庫的新認知</h2><p>除了數字上的里程碑，2023 年業務模式的改變也帶來了很多定性的認知。這些認知幫助我們深化了對向量這種數據類型的理解，也引導了我們思考向量數據庫未來的發展方向。</p><h3>大模型應用仍處於初期階段：避免重蹈智能手機時代「手電筒應用」的覆轍</h3><p>回顧移動互聯網早期，許多開發者創建瞭如手電筒或天氣預報等簡單應用，這些應用最終被整合到智能手機操作系統中。如今，大多數 AI 原生應用，例如迅速在 GitHub 上獲得 100,000 星的 AutoGPT，並未提供實際的業務價值，只是一些有價值的嘗試。這意味着 AIGC 場景對大模型和向量數據庫的應用都處於早期階段，對今年的向量數據庫使用場景可能只是 AI 原生轉型的第一波浪潮，期待真正的殺手級應用出現。</p><h3>向量數據庫持續分化</h3><p>就像數據庫發展為 OLTP、OLAP 和 NoSQL 等不同類型一樣，2023 年的向量數據庫開始顯示出多樣化的趨勢。超越傳統的在線服務範圍，離線分析領域變得更為重要，已經有專門的向量數據庫系統面向數據準備和分析領域。GPTCache 是我們在 2023 年開源的項目，旨在利用向量檢索 Cache 大模型輸出，這也為向量數據庫開拓了緩存這一全新的賽道。未來，我們滿懷希望並期待來年見證向量數據庫在更多樣化的應用場景和設計。</p><h3>向量語意的複雜性日增</h3><p>ANN 並非向量數據庫的唯一特性。許多人認為，支持最近鄰搜索就足以稱之為向量或 AI 原生數據庫。然而，向量所需的操作比想象中更為複雜。除了標量過濾和混合查詢外，為 AI 原生應用量身定製的數據庫應支持更復雜的語義能力，如 NN 過濾、KNN 聯接和集羣查詢。</p><p>對於 AI 原生應用而言，高彈性至關重要，但向量數據庫可能成為瓶頸</p><p>像 ChatGPT 這樣的 AI 應用，僅用兩個月時間月活躍用户就超過 1 億，其增長速度遠超以往任何業務。一旦業務開始加速增長，從 100 萬到 10 億數據點的快速擴展至關重要。AI 應用開發者受益於大型模型提供商提供的按需付費服務模式，顯著降低了運營成本。同樣，以符合這一模式的方式存儲向量數據對開發者有利，使他們能夠更專注於核心業務邏輯。與大型模型和其他依賴項不同，向量數據庫本質上維護狀態，這在可擴展性和彈性方面帶來了更大的挑戰。因此，在選擇向量數據庫時，彈性和可擴展性必須被視為關鍵因素。</p><h3>將機器學習應用於向量數據庫可以帶來驚人的高回報</h3><p>2023 年，我們大力投資 AI4DB，並取得了顯著的回報。與傳統數據庫相比，向量數據庫的固有不精確性使其更易於使用機器學習算法進行優化。我們引入了兩個關鍵能力：基於機器學習的自動參數調整索引 AutoIndex、基於數據聚類的數據分區策略，這兩者都顯著提高了 Milvus 企業版在雲上的搜索性能。</p><h3>開源與閉源</h3><p>在大型語言模型（LLM）領域，OpenAI 和 Claude 的閉源模型目前領先，而開源社區在沒有相當的計算資源和數據的情況下依然在苦苦掙扎。對於向量數據庫，我堅信開源最終將成為用户的首選。開源意味着更豐富的應用場景、更快的迭代和更強大的生態系統。更重要的是，數據庫是複雜的系統，不能像大型模型那樣不透明，用户必須充分理解數據庫本身才能找到最合理的使用的方式，開源的透明度對於用户來講不僅意味着自由更意味着可控。</p><h3>新的開始</h3><p>2023 年在大模型的變革中迅速流逝，而向量數據庫的故事似乎才剛剛開始。對於被認為是非典型向量數據庫的 Milvus 而言，我們的旅程並不是迷失在人工智能生成內容（AIGC）的熱潮中。</p><p>相反，我們專注於精心打造我們的產品，識別並培育最適合我們的應用場景，並致力於服務我們理想的用户羣體。我們希望對開源的承諾能夠彌合我們與用户之間的距離，讓他們即使在世界的任意一個角度都能感知到我們善意和工匠精神。</p><p>2023 年也見證了大量人工智能初創企業的成立和首輪融資。看到這些開發者的創新令人激動，這讓我想起了我最初為何投身於向量數據庫這一賽道。2024 年將是所有這些創新應用開始真正獲得關注的一年，不僅吸引融資，還會吸引真正的付費客户。這將為這些開發者帶來一系列全新的要求，因為構建一個幾乎不間斷、完全可擴展的解決方案至關重要……新的一年，我們頂峯相見！</p><p>本文作者系 Zilliz 合夥人、研發 VP 欒小凡</p><p>「你眼中的 Zilliz·2023」調研已開啓！歡迎各位在 Zilliz 微信後台私信我們，談談「過去一年你對 Zilliz 印象最深刻的一件事情是什麼？」範圍不限於 Zilliz 的單個產品，也可以談談對 Zilliz 的商業動態、線下活動、內容平台的文章等印象，字數不限，入選用户將收穫神秘禮物盲盒，歡迎來私～</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 22 Jan 2024 03:52:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/4209276/blog/10920789</guid>
            <link>https://my.oschina.net/u/4209276/blog/10920789</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[網易雲音樂第三方開源 API 因侵權被要求刪除]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>NeteaseCloudMusicApi 是 Node.js 編寫的非官方網易雲音樂 API，可用於獲取網易雲音樂平台的歌曲信息。該項目完全開源，在 GitHub 上的 star 數超過 3 萬。</p><p>根據公開的信息，NeteaseCloudMusicApi 主要是整理了網易雲音樂公開的網頁接口，在此基礎上進行聚合後以便其他項目進行調用。</p><blockquote><p><img src="https://oscimg.oschina.net/oscnet/up-5f0e449d6b5d2d7cbab05d8f27824a30533.png" referrerpolicy="no-referrer"></p></blockquote><p>近日，NeteaseCloudMusicApi 的開源倉庫清空了所有代碼，以及 commit 記錄等信息，並在 README 寫道：「<u><em>保護版權,此倉庫不再維護</em></u>」。</p><p><img src="https://oscimg.oschina.net/oscnet/up-a5fab4ac6b5a85c43ff9e4d4b90647baf96.png" referrerpolicy="no-referrer"></p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.landiannews.com%2Farchives%2F101953.html" target="_blank">據稱</a>原因是網易雲音樂發送法律通知給 NeteaseCloudMusicApi 開發者，聲明該項目侵犯網易公司的相關版權，要求開發者立即下線該項目中<strong>盜鏈網易雲音樂的方法及內容</strong>。</p><blockquote><p>網易雲音樂由杭州網易雲音樂有限公司獨立開發運營，網易雲音樂作為國內知名的在線音樂平台，致力於為用户提供優質的音樂內容服務，我司以高額的成本採購了海量音樂作品的內容，在未我司合法授權的任何第三方均沒有權利播放由我司享有版權的音樂作品，我司有權以自己的名義或授權第三方進行維權。</p><p>我司收到用户的舉報，您開發的 NeteaseCloudMusicApi 或存在涉嫌通過非法破解網易雲音樂內容接口的方式獲取網易雲音樂享有版權的歌曲內容。</p><p>貴司未經我司授權，通過技術手段破解繞開限制直接提供網易雲音樂享有版權的音樂作品內容，該行為不僅侵犯了我司享有的音樂作品版權，亦非法攫取了網易雲音樂的用户流量構成不正當競爭，損害了我司作為權利人的合法權益。</p><p>同時貴方通過非法技術手段破解網站獲取大量歌曲內容的行為，涉嫌構成侵犯著作權罪，破壞 / 非法入侵計算機信息系統罪及 / 或提供破壞 / 非法入侵計算機信息系統工具罪。</p><p>針對上述侵權行為，根據中華人民共和國《著作權法》、《刑法》等相關法律法規規定，我司現鄭重致函：</p><p>1、立即，下線 NeteaseCloudMusicApi 上盜鏈網易雲音樂的方法及內容；</p><p>2、在未獲得我方授權的前提下，停止一切侵犯我司合法權益的行為。</p><p>請貴方充分認識到該行為的違法性和嚴重性，按照本函要求立即處理侵權行為，並將處理結果及時告知我方。若貴方怠於履行該項義務，為維護自身合法權益，我司將採取包括訴訟、投訴、舉報等在內的一切必要的法律措施確保合法權利得到有效保護。</p></blockquote></div>
                                    ]]>
            </description>
            <pubDate>Mon, 22 Jan 2024 03:21:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276411</guid>
            <link>https://www.oschina.net/news/276411</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[《互聯網法律白皮書（2023 年）》發佈]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>2024 年 1 月 19 日，中國信息通信研究院（簡稱「中國信通院」）互聯網法律研究中心舉辦第七屆互聯網法律研討會，<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FSfy0OltG0u4n1YKNDSXmqg" target="_blank">發佈</a>《互聯網法律白皮書（2023 年）》。系統梳理過去一年國內外重要互聯網立法活動，深入分析我國互聯網立法的最新成果和國際互聯網立法進展，對未來互聯網立法工作進行了展望，希望能為社會各界瞭解互聯網領域立法情況提供有價值的參考。</p><p><strong>白皮書核心觀點</strong></p><ol><li><p>我國網絡空間法治化邁向新階段。我國加快推進互聯網立法進程，在網絡安全、數據安全、個人信息保護、互聯網平台等方面明確管理要求，為構建網絡綜合治理體系提供了法治保障。2023 年，我國互聯網法治建設繼續順應全球信息化發展大勢，立足我國互聯網發展實踐，不斷深化對依法治網的規律性認識，在保安全的基礎上向促發展邁進，查漏補缺、完善制度、細化規則。</p></li><li><p>我國互聯網法律體系日趨健全完善。我國深入貫徹落實黨中央關於網絡強國、數字中國的決策部署，積極推進互聯網立法工作，不斷完善相關法律制度規範，基本形成了具有中國特色的互聯網法律體系。網絡設施安全防護進一步加強，保障數據安全和促進數據價值釋放法律制度同步推進，互聯網平台發展的法治環境日益優化，新技術新模式發展逐步規範。</p></li><li><p>全球互聯網立法展現新趨勢新動向。2023 年，全球網絡安全立法持續推進，數據跨境流動和數據共享流通成為新的立法關注點，互聯網平台對網絡信息內容的管理義務進一步強化，全球加快對人工智能等新技術新應用的立法應對，各國加快推進互聯網立法進程為保障其國內發展、強化國際競爭提供製度保障。</p></li><li><p>構建適應數字經濟和實體經濟融合發展的互聯網法律體系。在習近平新時代中國特色社會主義思想指引下，我國需適應數字經濟發展要求，構建完善互聯網法律體系，補齊法制短板，通過分類分級制度實現精準施策。應對人工智能等新技術發展趨勢，為新技術的規範發展提供法治支撐。深入佈局研究互聯網立法前沿問題，探索構建數據基礎法律制度。進一步健全互聯網法律法規，提高我國數字經濟治理體系和治理能力現代化水平，以法治護航數字經濟行穩致遠。</p></li></ol><p><img height="280" src="https://oscimg.oschina.net/oscnet/up-2e6e5be1f936754aa5edce38c01aada886b.png" width="500" referrerpolicy="no-referrer"></p><p><img height="275" src="https://oscimg.oschina.net/oscnet/up-559d5e7fe744cce93a4ae209e492aee5880.png" width="500" referrerpolicy="no-referrer"></p><p><img height="272" src="https://oscimg.oschina.net/oscnet/up-7ae8f0a460439255c90efe36af5171f1195.png" width="500" referrerpolicy="no-referrer"></p><p><img height="271" src="https://oscimg.oschina.net/oscnet/up-ab6fa6ae131b9d94129e631761e1ee414c9.png" width="500" referrerpolicy="no-referrer"></p><p><img height="278" src="https://oscimg.oschina.net/oscnet/up-9998e54e517d56fe321f2268e243548c9f8.png" width="500" referrerpolicy="no-referrer"></p><p><img height="279" src="https://oscimg.oschina.net/oscnet/up-60418af84fcfa23ba48a3f631cff64713c5.png" width="500" referrerpolicy="no-referrer"></p><p><img height="277" src="https://oscimg.oschina.net/oscnet/up-6f1f74832bb661a34b0429d057d5aca4d93.png" width="500" referrerpolicy="no-referrer"></p><p><img height="275" src="https://oscimg.oschina.net/oscnet/up-e099e03ebfcf5a5101d332999447594f51a.png" width="500" referrerpolicy="no-referrer"></p><p><img height="285" src="https://oscimg.oschina.net/oscnet/up-ef189c3cccb8a9ec7d7e5540ddac9d9026d.png" width="500" referrerpolicy="no-referrer"></p><p><img height="284" src="https://oscimg.oschina.net/oscnet/up-9a859a2d1c378f75b300162a287fa4ffd38.png" width="500" referrerpolicy="no-referrer"></p><p><img height="284" src="https://oscimg.oschina.net/oscnet/up-39b8a71bbc15699a837a443f84672b1781c.png" width="500" referrerpolicy="no-referrer">&nbsp;</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 22 Jan 2024 02:15:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276402</guid>
            <link>https://www.oschina.net/news/276402</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
    </channel>
</rss>
