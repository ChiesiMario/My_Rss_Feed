<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[開源中國-最新資訊]]>
        </title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="https://rsshub.app/oschina/news" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[開源中國-最新資訊 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Wed, 27 Dec 2023 06:07:20 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[ClkLog —— 免費、可商用的輕量級完全開源的埋點用户分析系統]]>
            </title>
            <description>
                <![CDATA[<h1><a id="user-content-項目簡介" class="anchor" href="https://gitee.com/clklog/clklog#%E9%A1%B9%E7%9B%AE%E7%AE%80%E4%BB%8B"></a>項目簡介</h1><p>ClkLog 是一款記錄用户行為分析和畫像的免費可商用開源軟件，技術人員可快速搭建私有的應用系統。項目基於神策分析 SDK，採用 ClickHouse 數據庫對採集數據進行存儲，採用前後端分離的方式來實現的訪問統計和用户畫像分析系統。在這裏，你可以輕鬆看到用户訪問網頁、APP、小程序或業務系統的行為軌跡，同時也可以從時間、地域、渠道、用户訪客類型等多維度瞭解用户的全方位信息。</p><h1><a id="user-content-核心功能" class="anchor" href="https://gitee.com/clklog/clklog#%E6%A0%B8%E5%BF%83%E5%8A%9F%E8%83%BD"></a>核心功能</h1><ul><li><p><strong>數據採集</strong>：支持網頁、小程序、IOS、Android 等多端數據採集</p></li><li><p><strong>流量概覽</strong>：提供流量渠道、設備、地域、訪客類型多維度分析</p></li><li><p><strong>用户畫像</strong>：解析用户唯一 ID，定位追蹤用户全生命週期畫像</p></li><li><p><strong>數據下載</strong>：支持各項彙總數據、明細數據的下載</p></li></ul><h1><a id="user-content-技術棧選擇" class="anchor" href="https://gitee.com/clklog/clklog#%E6%8A%80%E6%9C%AF%E6%A0%88%E9%80%89%E6%8B%A9"></a>技術棧選擇</h1><ul><li><p><strong>後端</strong>：Redis 、Zookeeper、Kafka 、Flink</p></li><li><p><strong>前端</strong>：vue、vue-element-admin、element-ui 、echarts</p></li><li><p><strong>數據</strong>：Clickhouse</p></li></ul><h1><a id="user-content-示意圖" class="anchor" href="https://gitee.com/clklog/clklog#%E7%A4%BA%E6%84%8F%E5%9B%BE"></a>示意圖</h1><table><thead><tr><th><img src="https://gitee.com/clklog/clklog/raw/main/docs/assets/imgs/1.png" alt="" referrerpolicy="no-referrer"></th><th><img src="https://gitee.com/clklog/clklog/raw/main/docs/assets/imgs/2.png" alt="" referrerpolicy="no-referrer"></th></tr></thead><tbody><tr><td><img src="https://gitee.com/clklog/clklog/raw/main/docs/assets/imgs/3.png" alt="" referrerpolicy="no-referrer"></td><td><img src="https://gitee.com/clklog/clklog/raw/main/docs/assets/imgs/4.png" alt="" referrerpolicy="no-referrer"></td></tr><tr><td><img src="https://gitee.com/clklog/clklog/raw/main/docs/assets/imgs/5.png" alt="" referrerpolicy="no-referrer"></td><td><img src="https://gitee.com/clklog/clklog/raw/main/docs/assets/imgs/6.png" alt="" referrerpolicy="no-referrer"></td></tr><tr><td><img src="https://gitee.com/clklog/clklog/raw/main/docs/assets/imgs/7.png" alt="" referrerpolicy="no-referrer"></td><td><img src="https://gitee.com/clklog/clklog/raw/main/docs/assets/imgs/8.png" alt="" referrerpolicy="no-referrer"></td></tr></tbody></table><h1><a id="user-content-在線體驗" class="anchor" href="https://gitee.com/clklog/clklog#%E5%9C%A8%E7%BA%BF%E4%BD%93%E9%AA%8C"></a>在線體驗</h1><p>演示地址：<a href="https://gitee.com/link?target=https%3A%2F%2Fdemo.clklog.com" target="_blank"></a><a href="https://gitee.com/link?target=https%3A%2F%2Fdemo.clklog.com">https://demo.clklog.com</a></p><h1><a id="user-content-快速接入" class="anchor" href="https://gitee.com/clklog/clklog#%E5%BF%AB%E9%80%9F%E6%8E%A5%E5%85%A5"></a>快速接入</h1><p>官方文檔：<a href="https://gitee.com/link?target=https%3A%2F%2Fclklog.com"></a><a href="https://gitee.com/link?target=https%3A%2F%2Fclklog.com">https://clklog.com</a></p><h1><a id="user-content-協議許可" class="anchor" href="https://gitee.com/clklog/clklog#%E5%8D%8F%E8%AE%AE%E8%AE%B8%E5%8F%AF"></a>協議許可</h1><ul><li><p>開源協議：<a href="https://gitee.com/link?target=https%3A%2F%2Fwww.gnu.org%2Flicenses%2Fagpl-3.0.en.html">AGPL V3.0</a></p></li><li><p>免費使用：Clklog 遵循 AGPL V3.0 開源許可證, 使用的組織或個人在複製、分發、轉發或修改時請遵守相關條款，不得移除 ClkLog 相關版權標識進行。如有違反，ClkLog 將保留對侵權者追究責任的權利。</p></li><li><p>商業使用：請聯繫客服進行細節諮詢</p></li></ul><h1><a id="user-content-聯繫我們" class="anchor" href="https://gitee.com/clklog/clklog#%E8%81%94%E7%B3%BB%E6%88%91%E4%BB%AC"></a>聯繫我們</h1><ul><li><p>客服郵箱：<a href="mailto:info@clklog.com">info@clklog.com</a></p></li><li><p>客服手機：16621363853</p></li><li><p>客服微信：opensoft66</p></li><li><p>客服二維碼：<img title="" src="https://gitee.com/clklog/clklog/raw/main/docs/assets/imgs/contactqrcode.jpg" alt="" width="120" referrerpolicy="no-referrer"></p></li></ul>]]>
            </description>
            <pubDate>Wed, 27 Dec 2023 06:03:17 GMT</pubDate>
            <guid isPermaLink="false">https://gitee.com/clklog/clklog</guid>
            <link>https://gitee.com/clklog/clklog</link>
        </item>
        <item>
            <title>
                <![CDATA[華為雲多個開源項目通過信通院可信認證]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="margin-left:.0001pt; margin-right:0"><span><span><span><span><span><span>2023</span></span></span><span><span><span>年 12 月 21 日，由中國信息通信研究院主辦的《2024 中國信通院 ICT 深度觀察報告會》開源和軟件供應鏈分論壇上重磅發佈了可信開源評估結果。</span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0"><span><span><span><span><span><span>華為雲共計 3 個開源社區、5 個開源項目通過可信開源社區、可信開源項目認證，其中，三個開源社區：KubeEdge、Karmada、Volcano 在社區運營、社區治理與社區開發能力方面均獲得了先進級評級。</span></span></span></span></span></span></p><p style="margin-left:0.0001pt; margin-right:0px; text-align:center"><img height="2594" src="https://oscimg.oschina.net/oscnet/up-8c3992cba052f6407c45af867bb5b58ff96.jpg" width="3892" referrerpolicy="no-referrer"></p><p style="margin-left:.0001pt; margin-right:0; text-align:center">&nbsp;</p><span id="OSC_h2_1"></span><h2><span><span><span><strong><span><span><span>3</span></span></span></strong><strong><span><span><span>大開源社區通過可信開源社區 4 大專項測評，獲先進級評級</span></span></span></strong></span></span></span></h2><p style="margin-left:.0001pt; margin-right:0"><span><span><span><span><span><span>華為雲 3 大開源社區（KubeEdge、Volcano、Karmada）順利通過信通院可信開源社區成熟度能力檢驗，並在社區運營、社區治理與社區開發能力方面獲得先進級社區評級，該認證為中國信通院可信開源治理能力成熟度認證的最高等級。</span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:center"><img height="790" src="https://oscimg.oschina.net/oscnet/up-42e95f4a1bd080702470d5d9ffe006ece7f.jpg" width="563" referrerpolicy="no-referrer"></p><p style="margin-left:.0001pt; margin-right:0"><span><span><span><span><span><span>可信開源社區評估從基礎設施、社區治理、社區運營與社區開發等角度，梳理開源社區應關注的內容及指標，聚焦於如何構建活躍的開發者生態與可信的開源社區。先進級評級是可信開源社區評估的最高級別，相較於基礎級和增強級而言，先進級要求社區能夠針對開源社區進行更加專業化和自動化等管理。</span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0"><span><span><span><span><span><span>先進級認證不僅是對華為雲 3 大開源社區在開源軟件的開發流程、產生的技術貢獻、貢獻者管理、社區氛圍營造等維度結果的認可，更是對開源社區工作的肯定，未來這些社區將會持續加大技術研發投入，與社區用户、合作伙伴共建開源生態，持續創新。</span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:center"><img height="1864" src="https://oscimg.oschina.net/oscnet/up-f9465e80d1c92d3bb6719470eea23494dbf.jpg" width="4096" referrerpolicy="no-referrer"></p><span id="OSC_h2_2"></span><h2><span><span><span><strong><span><span><span>5</span></span></span></strong><strong><span><span><span>個開源項目通過中國信通院可信開源項目測評</span></span></span></strong></span></span></span></h2><p style="margin-left:.0001pt; margin-right:0"><span><span><span><span><span><span>華為雲一鍵構建分佈式雲原生平台 Kurator、雲原生無代理服務網格 Sermant、時序數據庫 openGemini、企業級前端組件庫 DevUI、OpenTiny Vue 均已通過中國信通院的可信開源項目認證檢測，並獲得可信開源項目評估證書。</span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:center"><img height="829" src="https://oscimg.oschina.net/oscnet/up-f237b87e138d721a6a69683b4b3edcc989f.jpg" width="582" referrerpolicy="no-referrer"></p><p style="margin-left:.0001pt; margin-right:0"><span><span><span><span><span><span>可信開源項目重點考察開源項目在許可證合規性、軟件安全性、軟件活躍度、技術成熟度、服務支持力和軟件兼容性六個方面的能力。</span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0"><span><span><span><span><span><span>通過可信開源項目認證，意味着以上這些項目通過了業界開源項目認證標準的檢驗，項目具有高質量、高可靠性、高安全性和高可維護性，這些項目可以為用户提供更好的開源軟件使用體驗。</span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0"><span><span><span><span><span><span>本次通過可信認證的開源社區與開源項目目前已廣泛應用於各行各業，通過不斷完善開發者生態，提升產品易用性，為企業或個人提供更多的選擇和機會，幫助個人或企業更好的利用開源技術提升業務效率和創新能力。</span></span></span></span></span></span></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 27 Dec 2023 03:41:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/6410005/blog/10332529</guid>
            <link>https://my.oschina.net/u/6410005/blog/10332529</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[openGemini 獲 1 項大獎，2 項認證，一年一個台階]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="text-align:center"><img height="306" src="https://oscimg.oschina.net/oscnet/up-2305df6d4314acb367af05d3ada47349caa.jpg" width="1021" referrerpolicy="no-referrer"></p><p>最近，openGemini 先後獲得開放原子基金會授予的 「2023 快速成長開源項目」 獎項，以及由中國信通院評估頒發的 「可信開源項目」 和 「可信數據庫」 兩項證書，成為社區最值得慶賀的事，可謂是「寒冬喜來茶當酒，竹爐湯沸火初紅」。回頭望，旭日東昇，社區就像一個朝氣蓬勃的小孩，正在一天天長大。這些榮譽的背後，是 openGemini 團隊、眾多社區開發者不斷努力和創新的結果。</p><ul><li><span id="OSC_h3_1"></span><h3><span><strong>2023 年度快速成長開源項目</strong></span></h3></li></ul><p style="margin-left:0; margin-right:0">開放原子基金會「2023 年度快速成長開源項目」評委會從時間範圍內的定量指標數據增長速度和定性指標情況發展速度兩個維度考察，綜合衡量了開源項目在 2023 年度社區治理（社區管理、開源合規管理、社區運營、基礎設施能力、安全治理）和社區活躍度（生態參與度、社區影響力和項目活躍度）方面的表現，決定授予 openGemini 社區「2023 年度快速成長開源項目」，充分肯定了 openGemini 社區在治理與生態方面做出的努力。</p><p style="margin-left:0px; margin-right:0px; text-align:center"><img height="889" src="https://oscimg.oschina.net/oscnet/up-6cfaf4c1a329a2a347fa19b42618269367e.jpg" width="600" referrerpolicy="no-referrer"></p><ul><li><span id="OSC_h3_2"></span><h3><span><strong>可信開源項目</strong></span></h3></li></ul><p style="margin-left:0; margin-right:0">「可信開源項目」 是由中國信通院推動的開源項目評估，對開源項目的健康程度與可持續性展開評測，以降低開源項目的安全風險，完善開源項目的開發者、用户生態。重點考察開源項目在許可證合規性、軟件安全性、軟件活躍度、技術成熟度、服務支持力和軟件兼容性六個方面的能力，全面衡量社區版開源項目的健康程度，為開源項目使用方提供選型的參考依據。openGemini 通過該項認證，充分證明瞭社區的健康程度和可持續性發展。</p><p style="margin-left:0px; margin-right:0px; text-align:center"><img height="807" src="https://oscimg.oschina.net/oscnet/up-c0917d6ee0589169bff1269025c1be55999.jpg" width="600" referrerpolicy="no-referrer"></p><ul><li><span id="OSC_h3_3"></span><h3><span><strong>可信數據庫</strong></span></h3></li></ul><p style="margin-left:0; margin-right:0">「可信數據庫」是由中國信通院開展的面向數據庫產品及周邊工具、數據庫服務商和應用側為評價目標的權威評測體系，重點考察時序數據庫基礎能力、兼容能力、管理能力、高可用能力、擴展性、兼容性等七個方面能力。openGemini 通過該項認證，再次證明 openGemini 項目是高質量、高安全的，能夠滿足海量時序數據存儲、處理、應用等各類場景數據管理需求。</p><p style="margin-left:0px; margin-right:0px; text-align:center"><img height="803" src="https://oscimg.oschina.net/oscnet/up-659dbe1066941e46180a914be7c208ddc31.jpg" width="600" referrerpolicy="no-referrer"></p><span id="OSC_h3_4"></span><h3><span><strong>再接再厲</strong></span><span><strong><em>✦</em></strong></span></h3><p style="margin-left:0; margin-right:0">作為一個開源項目，openGemini 一直致力於為開發者提供更好的平台和軟件，幫助他們瞭解數據庫架構、功能原理和內核開發過程，降低開發門檻，最終具備問題自我定位、自我修復的能力。同時也為最終用户提供更好的工具（目前社區的派生項目已達 20 餘個），幫助他們更好的使用 openGemini，降低生產成本，提高產品競爭力。在這個過程中，openGemini 團隊不僅注重技術的創新和優化，還積極投入社區建設，與其他開源項目合作，推動整個開源社區的發展。</p><p style="margin-left:0; margin-right:0">在未來，openGemini 社區將繼續努力，不斷提升自身的技術實力和社區影響力，為用户和開發者提供更好的時序數據庫軟件。同時，openGemini 也將繼續與其他開源項目合作，共同推動整個開源社區的發展，為技術的進步和社會的發展做出貢獻。一年一個台階，明年我們拭目以待！</p><p style="margin-left:0; margin-right:0">今日恰值冬至，祝福大家冬至歡愉，常安常樂。</p><p style="margin-left:0px; margin-right:0px; text-align:center"><img height="288" src="https://oscimg.oschina.net/oscnet/up-1ccc6c43a3a6a9ae796c53a6365d4d0d6e5.png" width="200" referrerpolicy="no-referrer"></p><hr><p style="color:#121212; margin-left:0; margin-right:0; text-align:justify">openGemini 官網：<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.opengemini.org%2F" target="_blank">http://www.openGemini.org</a></p><p style="color:#121212; margin-left:0; margin-right:0; text-align:justify">openGemini 開源地址：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FopenGemini" target="_blank">https://github.com/openGemini</a></p><p style="color:#121212; margin-left:0; margin-right:0; text-align:justify">openGemini 公眾號：</p><p style="color:#121212; margin-left:0; margin-right:0; text-align:justify"><img src="https://oscimg.oschina.net/oscnet/up-9c3a28f01ff2ece95893e6eb22755543105.jpg" style="margin-top:20px" referrerpolicy="no-referrer"></p><p style="color:#121212; margin-left:0; margin-right:0; text-align:justify">歡迎關注～ 誠邀你加入 openGemini 社區，共建、共治、共享未來！</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 27 Dec 2023 03:41:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/3234792/blog/10331495</guid>
            <link>https://my.oschina.net/u/3234792/blog/10331495</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[你好！Apache Seata]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>北京時間 2023 年 10 月 29 日，分佈式事務開源項目 Seata 正式通過 Apache 基金會的投票決議，<strong>以全票通過的優秀表現正式成為 Apache 孵化器項目！</strong></p><p>根據 Apache 基金會郵件列表顯示，在包含 13 個約束性投票 (binding votes) 和 6 個無約束性投票 (non-binding votes) 的投票全部持贊同意見，無棄權票和反對票，投票順利通過。</p><p><em>「Welcome&nbsp;Seata&nbsp;to&nbsp;the&nbsp;ASF&nbsp;incubator.」</em></p><p><img src="https://oscimg.oschina.net/oscnet/up-240076d1009f584bb6fe458f33fe0bedb6f.png" alt="" referrerpolicy="no-referrer"></p><h2>項目歷史</h2><ul><li><p>**早在&nbsp;**2007 年****阿里巴巴和螞蟻集團內部開發了分佈式事務中間件，用於解決電商、支付、物流等業務場景中應用數據的一致性問題。內部項目分別被稱為 TXC (Taobao Transaction Constructor)/XTS (eXtended Transaction Service)，該項目幾乎在每筆訂單的交易支付鏈路幾乎都有使用。</p></li><li><p><strong>自 2013 年以來</strong></p><p>阿里巴巴和螞蟻集團已在阿里雲和金融雲上向企業客户分別發佈了分佈式事務雲服務產品 GTS(global transaction service)/DTX(Distributed Transaction-eXtended)，在各個行業領域積累了大量用户。</p></li><li><p><strong>2019 年 1 月</strong></p><p>阿里巴巴集團正式開源了該項目，項目命名為 Fescar (Fast &amp; Easy Commit and Rollback)）。項目開源以來，它受到了眾多開發人員的熱烈歡迎和讚揚，開源一週收穫了超 3k star，曾一度蟬聯 GitHub Trending 排行榜第一。</p></li><li><p><strong>2019 年 4 月</strong></p><p>螞蟻集團數據中間件團隊加入了 Fescar 社區。為了創建一個更加開放和中立的社區，Fescar 改名為 Seata（Simple Extensible Autonomous Transaction Architecture），代碼倉庫從 Alibaba organization 遷移到其獨立的 Seata organization。</p></li><li><p><strong>2019 年 12 月</strong></p><p>Seata 開源項目正式發佈 1.0.0 GA 版本，標誌着項目已基本可生產使用。</p></li><li><p><strong>2023 年 10 月</strong></p><p>為了更好的通過社區驅動技術的演進，阿里和螞蟻集團正式將 Seata 捐贈給 Apache 基金會，提案通過了 Apache 基金會的投票決議。</p></li></ul><h2>項目現狀</h2><ul><li>Seata 開源 4 年來主項目在 GitHub&nbsp;<strong>累計收穫 star 超 24k，累計發佈版本超 40 次，參與代碼貢獻人數超 300 人。</strong></li><li>Seata 被各領域企業/組織廣泛應用於解決分佈式事務問題，在 GitHub「Used by」超過 3.1k 的倉庫依賴，金融領域企業紛紛試點使用。</li><li>Seata 對於市面上主流的關係數據庫，RPC 框架做了廣泛的支持，同時被許多第三方社區做了主動和被動集成。</li></ul><p><img src="https://oscimg.oschina.net/oscnet/up-c486e4329d5fe25e8f7bbd6d4290fdf4740.png" alt="" referrerpolicy="no-referrer"></p><h2>項目特性</h2><ul><li>提供 AT、TCC、Saga 和 XA 事務模式，支持事務模式的混用，滿足不同業務場景的數據一致性需求。</li><li>提供 Java、Golang 等多語言 SDK 支持。</li><li>支持了 Apache Dubbo、Spring Cloud Alibaba、gRPC、Motan、sofaRPC、HttpClient 等服務調用框架。</li><li>支持了 MySQL、MariaDB、Oracle、PostgreSQL、OceanBase、TiDB、SQLServer、PolarDB、Dameng 等關係數據庫無侵入 AT 事務模式的支持。</li><li>支持基於多種關係數據庫、Redis 存儲的存算分離的集羣模式，支持基於 Raft 的存算不分離集羣模式，滿足不同運維場景下的集羣高可用需求。</li><li>支持了市面上主流的註冊中心和配置中心。</li><li>提供了豐富的插件化擴展機制，支持用户自定義 SDK 側 30 多個擴展點。</li></ul><h2>致謝</h2><p>感謝所有曾經參與到社區的貢獻者。</p><p>特別感謝願意給 Seata 提供指導的 champion 和 mentors。</p><p>Champion：</p><ul><li>Sheng&nbsp;Wu(wusheng&nbsp;at&nbsp;apache&nbsp;dot&nbsp;org)</li></ul><p>Mentors：</p><ul><li>Sheng&nbsp;Wu(wusheng&nbsp;at&nbsp;apache&nbsp;dot&nbsp;org)</li><li>Justin&nbsp;Mclean(justin&nbsp;at&nbsp;classsoftware&nbsp;dot&nbsp;com)</li><li>Huxing&nbsp;Zhang(huxing&nbsp;at&nbsp;apache&nbsp;dot&nbsp;org)</li><li>Heng&nbsp;Du(duhengforever&nbsp;at&nbsp;apache&nbsp;dot&nbsp;org)</li></ul><p>我們堅信將 Seata 引入 ASF 可以推動更強大、更多元化的開源社區的發展。我們將努力踐行 Apache Way，同時歡迎更多的公司和個人加入到開發者隊伍中來，讓 Seata 社區更加健康和健壯的成長，讓更多人享受開源帶來的技術紅利！</p><h2>項目寄語</h2><p>四年前，我們秉持開源開放的理念，在社區寫下了第一行代碼。回顧過去四年，Seata 開源社區的技術演進和社區運營就像一次創業旅程。這四年我們取得了不菲的成績，Seata 的出現快速佔領了開發者的心智，<strong>成為了分佈式事務領域的事實標準，在理論實踐中我們牽頭推動了行業標準的建立。</strong> Seata 捐贈給 ASF 是我們邁向更多元化社區治理和全球化發展的重要里程碑。</p><p><em>--&nbsp;季敏｜Seata&nbsp;開源社區創始人</em></p><p>阿里雲是開源的受益方，也在持續貢獻開源，繼 Apache RocketMQ、Apache Dubbo 之後，我們將 Seata 也捐贈給了 ASF。相信 Seata 的捐贈，將進一步推動雲原生微服務領域的技術發展。一直以來，阿里雲通過投入開源，建立技術標準，幫助千萬開發者使用更先進的雲原生技術，讓社區生態和雲之間建立起非常好的連接，助力企業和雲協同發展。</p><p><em>--&nbsp;丁宇｜阿里云云原生應用平台負責人</em></p><p>分佈式事務是微服務架構最複雜，技術水位最深的部分，阿里&amp;螞蟻在開源捐獻之前申請了數十個專利，開源之後在社區推動下高速發展，<strong>吸收 70%+ 外部開發者，大幅降低分佈式的複雜度，擴展了分佈式事務的生態；</strong> 未來隨着微服務高速發展，隨着數據一致性要求越來越高，相信分佈式事務會發揮越來越大的作用！</p><p><em>-- 李豔林｜阿里雲微服務團隊負責人</em></p><p>Seata 是一款由阿里巴巴和螞蟻集團共同參與開發的分佈式事務解決方案，廣泛應用於兩家公司的內部系統。它的突出特點在於高性能和簡單易用，為微服務架構下的分佈式事務處理提供了高效且可靠的解決方案。我們堅信將 Seata 捐贈給 ASF，社區將會得到更好的發展，能為更多的開發者提供更優質的服務。同時，我們也期待更多的開發者能夠加入到 Seata 的開發中來，共同推動分佈式事務解決方案的進步和發展。</p><p><em>--&nbsp;謝吉寶｜阿里云云原生中間件負責人</em></p><p>恭喜 Seata 全票通過進入 Apache 孵化器！2019 年，螞蟻集團和阿里集團攜手一起開源了分佈式事務框架 Seata，各自貢獻了內部分佈式事務的最佳實踐。經過了四年的發展，Seata 早已成為一個被社區廣泛認可的分佈式事務項目，大量的貢獻者在 Seata 裏面貢獻代碼，豐富了 Seata 的各種功能，很多用户在自己的環境中使用 Seata，給 Seata 帶來了大量的實踐落地案例。<strong>Seata 進入 Apache 孵化器不是終點，而是新的起點，</strong> 期待 Seata 後面能夠持續按照 The Apache Way 的方式運作，以更加中立的姿態，吸引更多的貢獻者和用户，走向更加寬闊的未來。</p><p><em>--&nbsp;黃挺｜螞蟻集團中間件負責人</em></p><p>非常高興 Seata 這個阿里和螞蟻合作多年的開源項目進入 Apache 基金會進行孵化，相信 Apache Way 會幫助項目更加社區化、服務更多人，也期待 Apache 的 Seata 能為社區帶來更多微小而美好的改變。對於螞蟻開源來説，Seata 進入 Apache 孵化也是一個重要的里程碑，希望未來有更多螞蟻團隊發起的項目也能走上 Apache 之路。</p><p><em>--&nbsp;王旭｜螞蟻開源技術委員會副主席</em></p><p>很高興能夠作為 Champion 和 Mentor ，幫助 Seata 社區進入到 Apache 孵化器。Seata 項目在過去的 4 年，在分佈式事務領域取得了長足的進度，並以開放的心態面向社區，並一步步的做好走進 Apache 孵化器的各項準備工作。希望在未來的一到兩年的實踐中，項目成員能夠很好的學習以及融入 ASF 的文化中，並進一步增加社區的多元化和國際化。進入孵化器是一個里程碑，更是一個新的開始，祝賀 Seata 項目。</p><p><em>--&nbsp;吳晟｜Apache&nbsp;軟件基金會會員、Apache&nbsp;軟件基金會首位中國董事、Apache&nbsp;軟件基金會孵化器 PMC 成員和項目導師</em></p><p>我關注 Seata 這個項目關注很長時間，從 Fescar 到 Seata，該項目從誕生之初就保持了旺盛的生命力，在近幾年社區和逐步壯大，逐步成長為分佈式事務這個領域傑出的一個開源項目，很高興看到 Seata 加入 Apache 基金會進行孵化，相信 Seata 今後會以更加中立的身份，吸引更多的貢獻者，一羣走一起走可以走的更穩更遠。很榮幸以導師的身份陪伴 Seata 的孵化之旅，預祝 Seata 一切順利！&nbsp;</p><p><em>--&nbsp;張乎興｜Apache&nbsp;基金會成員、Apache Tomcat&nbsp;和&nbsp;Apache Dubbo&nbsp;社區&nbsp;PMC&nbsp;成員、Apache Seata(incubating)&nbsp;導師</em></p><p>Seata 作為在阿里跟螞蟻久經驗證的分佈式事務框架，不僅經歷了歷年海量流量的驗證，而且在開源之後迅速成長為國內分佈式事務領域的事實標準。很高興看到 Seata 成為 Apache 基金會孵化項目，作為一個新的開始，希望 Seata 能夠吸引更多的開發者，打磨更多的場景，行穩致遠，相信在眾多開發者的共同努力下，Seata 一定能夠成為數據與應用之間的堅實橋樑。&nbsp;</p><p><em>--&nbsp;杜恆｜ASF member、Apache RocketMQ PMC member</em></p><p>Seata 作為分佈式事務協調器，是微服務架構中最重要的獨立組件之一，也是整個阿里巴巴微服務領域最精華的部分之一。Seata 項目從開源以來就受到了廣泛的開發者支持，而現在它將進入 Apache 基金會孵化，我相信會在 Apache Way 開放的文化幫助下，Seata 項目將繼續成為微服務架構中的一顆明星，為我們帶來更多便利和創新。</p><p><em>--&nbsp;王小瑞｜AutoMQ&nbsp;聯合創始人&nbsp;&amp;&nbsp;CEO、Apache RocketMQ&nbsp;作者、PMC Chair</em></p><p>在分佈式、微服務領域，Seata 絕對佔得重要的一席，它開創性的創造了多種事務模式。Dubbo &amp; Spring Cloud Alibaba 一直和 Seata 有深度的集成與合作，我本人也與作者季敏、社區核心成員有過多次深入交流，<strong>這是一個有技術追求、有責任心、充滿活力的開源社區。</strong> 非常高興見證 Seata 加入 ASF 大家庭，開啓新的旅程，祝一切順利。</p><p><em>--&nbsp;劉軍｜Apache Dubbo PMC Chair、Spring Cloud Alibaba&nbsp;負責人</em></p><p>分佈式事務一直是一個被大眾敬而遠之，視而不見卻實際存在的問題,四年前 Seata 將業界對待分佈式事務的「鴕鳥心態」轉為輕鬆面對，將一個業界最難攻克的問題，以一種標準化、無侵入、低成本的方式引進，<strong>目前登記在冊已有數百家企業，覆蓋各式各樣的業務場景。</strong> 如果説四年前 Seata 是一粒種在這個領域的種子，那麼目前已經枝繁葉茂了，相信捐贈給 ASF 後更加的中立與開放,吸引更多開發者共同建設，共同演進分佈式事務領域的未來技術架構，將這顆已經枝繁葉茂的大樹做到碩果累累。</p><p><em>--&nbsp;陳健斌｜Apache Seata（incubating）PPMC&nbsp;成員</em></p><p>作為分佈式事務領域的重要項目，Seata 自誕生以來，一直致力於解決微服務架構下的數據一致性問題，<strong>幫助開發者構建高性能、易擴展、易使用的分佈式應用。</strong> 現在，Seata 即將踏上新的征程。我們相信 Seata 在捐贈給 ASF 這個大家庭後，將會得到更廣泛的關注和使用，也相信在未來的日子裏，Seata 將會為更多的開發者解決分佈式事務的難題。</p><p><em>--&nbsp;王良｜Apache Seata（incubating）PPMC&nbsp;成員</em></p><p>Seata 作為一個強大而穩定的開源分佈式事務解決方案，為廣大開發者在分佈式事務的場景下，提供了極大的幫助和便利。貢獻給 Apache 將進一步推動項目發展和全球社區的參與度。祝願在 Apache 的託管下，能夠不斷髮展，更加中立化，標準化，助力全球更多的開發者構建可靠的分佈式事務業務。</p><p><em>--&nbsp;雷志遠｜Apache Seata（incubating）PPMC&nbsp;成員</em></p><p>作為一名中間件老兵，有幸見證：微服務浪潮下，源自國內的分佈式事務中間件從阿里、螞蟻內部創新孵化，到商業化，再到開源，一步步走向更廣闊的天地，產生更大的價值。相信，捐贈給 ASF 將讓 SEATA 成為世界上更多「苦分佈式事務久矣」的開發者們的解藥！</p><p><em>--&nbsp;申海強｜Apache Seata（incubating）PPMC&nbsp;成員、前阿里分佈式事務中間件核心成員</em></p><p>有幸跟隨着這個項目從 Fescar 到 Seata 再到現在捐獻給 Apache 基金會，見證了在這四年時間裏一間又一間的企業因為 Seata 而解決了分佈式事務的難題。現在 Seata 站在了全新的起點上將以開放、包容的姿態去面對每一個用户，悉心聆聽每一個聲音，開拓出這條能夠通往全球的道路。</p><p><em>--&nbsp;張嘉偉｜Apache Seata(incubating)&nbsp;PPMC&nbsp;成員</em></p><p>非常高興看到 Seata 成為 Apache 孵化項目，這定會是分佈式事務領域的標杆解決方案。從最初的 Fescar 到 Seata，我與你一路相伴，讓我們一起努力，期待 Seata 蜕變成 Apache Seata。</p><p><em>--&nbsp;吳江坷｜Apache Seata（incubating)PPMC&nbsp;成員</em></p><p>在微服務開發模式下，分佈式系統的數據一致性常常成為系統的難題。Seata 開源以來，社區積累了各種事務模式解決方案和豐富的用户使用案例。非常高興 Seata 項目能加入 Apache 基金會，社區將更加開放和多元化，將吸引更多的提交者，幫助更多的用户，項目成為分佈式事務的事實標準。</p><p><em>--&nbsp;王欣｜Apache Dubbo&nbsp;社區&nbsp;PMC&nbsp;成員、Apache Seata（incubating）PPMC&nbsp;成員</em></p><h2>寫到最後</h2><p>為促進分佈式事務技術的普及和實踐，增進 Apache Seata（incubating）使用者的交流與學習，我們將定期邀請業內資深的技術專家，分享實戰經驗。</p><p>歡迎訂閲 <a href="https://www.oschina.net/action/GoToLink?url=mailto%3Adev-subscribe%40seata.apache.org" target="_blank">dev-subscribe@seata.apache.org</a> 郵件組，關注 Apache Seata（incubating）社區技術發展。</p><p>Seata 官網：<em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fseata.io%2Fzh-cn%2F" target="_blank">https://seata.io/zh-cn/</a></em></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 27 Dec 2023 03:32:52 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/3874284/blog/10419504</guid>
            <link>https://my.oschina.net/u/3874284/blog/10419504</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[dubbo-go v3.2.0 -alpha 版本預覽]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><em>作者：王宇軒， Apache Dubbo Committer</em></p><p>隨着 Dubbo3 在雲原生微服務方向的快速發展，Dubbo 的 go 語言實現迎來了 Dubbo3 版本以來最全面、最大幅度的一次升級，這次升級是全方位的，涉及 API、協議、流量管控、可觀測能力等。</p><p>總的來説，新版本的 dubbo-go：</p><ul><li><strong>全面升級 Triple 協議，</strong> 兼容 gRPC、標準 HTTP 客户端，提供簡單明瞭的 API 用於編寫 RPC server 與 client，解決組件間的基本通信問題。</li><li><strong>針對微服務場景，提供了完善的服務治理能力，</strong> 這包括配置管理、可觀測性、流量管控規則、生態集成與適配等的全面升級。</li></ul><p><img src="https://oscimg.oschina.net/oscnet/up-1ba6bcbccf62c5e941408b62bab31e2ff20.png" alt="" referrerpolicy="no-referrer"></p><h2>全新升級的 Triple 協議</h2><p>基於 dubbo-go 實現的 Triple 協議，你可以輕鬆編寫瀏覽器、gRPC 兼容的 RPC 服務，並讓這些服務同時運行在 HTTP/1 和 HTTP/2 上。</p><p><img src="https://oscimg.oschina.net/oscnet/up-c2f770e1d49c85a280727a64e462490922a.png" alt="" referrerpolicy="no-referrer"></p><p>如上圖所示，你可以使用 "http+json" 的標準形式訪問 dubbo-go 發佈的後端 triple 服務，基於這一特性， 我們可以在 dubbo 客户端在瀏覽器頁面、移動設備上訪問後端服務，使用標準 cURL 工具訪問服務，也可以讓比如 Spring 體系的應用輕鬆的調通 Dubbo 服務。</p><p>由於 Triple 協議完全兼容 gRPC 協議，Dubbo 後端服務有可以直接調通標準的 gRPC 服務，它們之間可以無縫的互通，不論是 unary 還是 streaming 通信模式。</p><h3>發佈一個 triple rpc 服務</h3><p>為了體驗升級後的 triple 協議，我們接下來會嘗試啓動一個 dubbo-go server，併發佈一個基於 triple 協議的服務。</p><p>創建一個新的 server 並啓動 server，它將在指定的端口監聽 triple 協議請求。</p><pre><code>func main() {
  srv, err := server.NewServer(
    server.WithServerProtocol(
      protocol.WithTriple(),
      protocol.WithPort(50051),
    ),
  )
  if err != nil {
    panic(err)
  }
  if err := greettriple.RegisterGreetServiceHandler(srv, &amp;api.GreetTripleServer{}); err != nil {
    panic(err)
  }
  if err := srv.Serve(); err != nil {
    panic(err)
  }
}
</code></pre><h3>cURL 訪問服務</h3><p>Triple 服務啓動完成之後，最簡單方式是使用 HTTP/1.1 POST 訪問服務，參數則作以標準 JSON 格式作為 HTTP 負載傳遞。如下是使用 cURL 命令的訪問示例：</p><pre><code>curl \
    --header "Content-Type: application/json" \
    --data '{"name": "Dubbo"}' \
    http://localhost:50051/greet.GreetService/Greet
</code></pre><p>Triple 協議的一項重大升級是支持標準 http 工具直接訪問，通過 cURL 可以極大的降低 dubbo-go 服務的測試驗證、前端接入成本。</p><h2>簡單明瞭的 API</h2><p>Dubbo Go SDK 支持使用 IDL 或編程語言特有的方式定義服務，並提供一套輕量的 API 來發布或調用這些服務。在上一節的示例中，我們已經看到了部分 dubbo-go API 的使用方式，接下來，讓我們更仔細全面的看一下新版本的 API 設計。</p><h3>RPC Server 與 Client</h3><p>對於一些 RPC 通信的場景，開發者只需要使用 dubbo-go 編寫一個最簡單的 RPC server 或者 RPC client，這在新版本 dubbo-go 中只需要幾行代碼即可完成。</p><p>通常，我們會使用 Protocol Buffer (IDL) 來定義一個 Dubbo 服務。</p><pre><code>syntax = "proto3";
package greet;

message GreetRequest {
  string name = 1;
}

message GreetResponse {
  string greeting = 1;
}

service GreetService {
  rpc Greet(GreetRequest) returns (GreetResponse) {}
}
</code></pre><p>使用 Protocol Buffers Compiler 從 IDL 生成 stub 代碼（篇幅關係，我們不在此展示，具體請參見官網 dubbo-go 快速開始）。接下來，我們實現 greettriple.GreeterClient 接口並提供自定義服務實現。</p><pre><code>type GreeterServer struct {
}

func (s *GreeterServer) SayHello(ctx context.Context, in *greet.HelloRequest) (*greet.User, error) {
  return &amp;greet.User{Name: "Hello " + in.Name, Id: "12345", Age: 21}, nil
}
</code></pre><p>以下是一個簡單的 RPC server 示例，執行協議信息，並註冊服務到 server 中：</p><pre><code>func main() {
  srv, err := server.NewServer(
    server.WithServer_Protocol(
      protocol.WithTriple(),
      protocol.WithPort(50052),
    ),
  )
  if err != nil {
    panic(err)
  }
  if err := greettriple.RegisterGreetServiceHandler(srv, &amp;api.GreetTripleServer{}); err != nil {
    panic(err)
  }
  if err := srv.Serve(); err != nil {
    panic(err)
  }
}
</code></pre><p>如前面 Triple 協議一節所述，你可以使用 cURL 直接測試以上 server 服務運行正常。與此同時，對應的 RPC client 示例如下：</p><pre><code>func main() {
  // for the most brief RPC case
  cli, err := client.NewClient(
    client.WithURL("tri://127.0.0.1:50052"),
  )
  if err != nil {
    panic(err)
  }
  svc, err := greettriple.NewGreetService(cli)
  if err != nil {
    panic(err)
  }

  common.TestClient(svc)
}
</code></pre><h3>微服務開發</h3><p>如果你正在開發微服務應用，那麼除了 RPC 通信之外，你通常還需要為應用配置一些服務治理能力，比如 retistry 註冊中心、配置中心、可觀測能力等。</p><p>以下展示瞭如何使用 dubbo-go 開發一個微服務應用。</p><p>首先，創建一個代表微服務的應用 Server，將服務註冊給它，添加註冊中心等服務治理配置。</p><pre><code>
func main() {
  // configure global configurations and common modules
  ins, err := dubbo.NewInstance(
    dubbo.WithName("dubbo_test"),
    dubbo.WithRegistry(
      registry.WithZookeeper(),
      registry.WithAddress("127.0.0.1:2181"),
    ),
    dubbo.WithProtocol(
      protocol.WithTriple(),
      protocol.WithPort(50052),
    ),
  )
    // create a server with registry and protocol set above
  srv, err := ins.NewServer()
  if err != nil {
    panic(err)
  }
    // register a service to server
  if err := greettriple.RegisterGreetServiceHandler(srv, &amp;api.GreetTripleServer{}); err != nil {
    panic(err)
  }
    // start the server
  if err := srv.Serve(); err != nil {
    panic(err)
  }
}
</code></pre><p>其中，Instance 是我們在新版本中引入的全局配置，你可以將所有微服務全局配置在這裏進行初始化。這裏，我們設置了微服務通信協議 protocol 和註冊中心 registry，如以下代碼片段所示：</p><pre><code>ins, err := dubbo.NewInstance(
    dubbo.WithName("dubbo_test"),
    dubbo.WithRegistry(
        registry.WithZookeeper(),
        registry.WithAddress("127.0.0.1:2181"),
    ),
    dubbo.WithProtocol(
        protocol.WithTriple(),
        protocol.WithPort(50052),
    ),
)
</code></pre><p>接下來的操作就非常簡單明瞭了，我們創建一個 server，將服務註冊給它並啓動，如下所示。如果有更多的服務，則可以依次註冊到 server 後再啓動。</p><pre><code>// create a server with registry and protocol set above
srv, err := ins.NewServer()
// register a service to server
if err := greettriple.RegisterGreetServiceHandler(srv, &amp;api.GreetTripleServer{}); err != nil {
    panic(err)
}
// start the server
if err := srv.Serve(); err != nil {
    panic(err)
}
</code></pre><p>以上就是一個微服務應用的基本開發過程，如果你的微服務應用要調用一些遠程 Dubbo 服務，那麼你只需要參照以下方式創建一個 client 就行了。</p><p>下面的代碼示例創建了一個 client，緊接着生成了一個 GreetService 遠程服務代理，之後，就可以像調用本地方法一樣調用遠端 Dubbo 服務了。client 將基於註冊中心實現 server 實例的自動發現並自動為流量應用負載均衡策略。</p><pre><code>func main() {
  // configure global configurations and common modules
  ins, err := dubbo.NewInstance(
    dubbo.WithName("dubbo_test"),
    dubbo.WithRegistry(
      registry.WithZookeeper(),
      registry.WithAddress("127.0.0.1:2181"),
    ),
  )
  
  // configure the params that only client layer cares
  cli, err := ins.NewClient()
  if err != nil {
    panic(err)
  }

  svc, err := greettriple.NewGreetService(cli)
  if err != nil {
    panic(err)
  }

  resp, err := svc.Greet(context.Background(), &amp;greet.GreetRequest{Name: "triple"})
  if err != nil {
    return err
  }
  logger.Infof("TRIPLE unary call resp: %s", resp.Greeting)
}
</code></pre><h2>企業級服務治理能力</h2><h3>動態配置</h3><p>除了 API 模式之外，Dubbo-go 支持基於配置文件驅動的編碼方式，這對於一些更大規模的微服務開發場景非常適用。在這種模式下，我們將 registry、protocol 等組件配置，甚至包括服務聲明等都放在 dubbogo.yml 文件中，框架會在啓動過程中完成配置文件加載。</p><p>以下是一個基於 dubbogo.yml 的微服務應用的開發示例：</p><p><img src="https://oscimg.oschina.net/oscnet/up-428c365aca1834e8772eaabd7bdbe8c423d.png" alt="" referrerpolicy="no-referrer"></p><p>其中，server.go 定義如下：</p><pre><code>func main() {
  greettriple.SetProviderService(&amp;GreeterServiceImpl{})
  if err := dubbo.Load(); err != nil {
    panic(err)
  }
}
</code></pre><p>dubbogo.yml 示例內容如下：</p><pre><code>dubbo:
  application: # 應用信息，服務啓動後會將相關信息註冊到註冊中心，可被客户端從 url 中識別
    name: myApp
  registries:
    nacos:
      protocol: nacos # 註冊中心選擇 nacos 
      address: 127.0.0.1:8848 # nacos ip
      group: DEFAULT_GROUP # nacos group, 默認 DEFAULT_GROUP
      namespace: 9fb00abb-278d-42fc-96bf-e0151601e4a1 # nacos namespaceID, should be created before. 默認 public
      username: abc
      password: abc
  protocols:
    dubbo:
      name: tri
      port: 20000
  provider:
    services:
      UserProviderWithCustomGroupAndVersion: # 接口三元組：接口名、版本號、分組。client 和 server 需要保持一致。
        interface: org.apache.dubbo.UserProvider.Test # 接口名必填
        version: myInterfaceVersion # 默認為空
        group: myInterfaceGroup # 默認為空
</code></pre><p>可以看到相比於之前的 API 編碼方式，這裏的 server.go 只有兩行代碼，dubbo.Load() 會完成所有配置的自動組裝並啓動相關組件，我們只需要在啓動應用時指定 export DUBBO_GO_CONFIG_PATH=$ABSOLUTE_PATH/conf/dubbogo.yml 即可。</p><h3>可觀測性</h3><p>自 3.2.0 版本開始，dubbo-go 重點升級了內置 metrics 指標採集能力，提供 RPC 調用（RT、QPS、調用量、請求成功數、請求失敗數、併發請求數等）、註冊中心、元數據中心、配置中心交互統計等豐富的內置採集埋點，支持多維度的指標聚合。</p><p>dubbo-go 內置 metrics 指標導出到 Prometheus + Grafana 體系的能力，以下是 dubbo-go v3.2.0 示例在 Grafana 的監控效果圖，具體示例我們將與隨後發佈在 dubbo-go-samples/metrics。</p><p><img src="https://oscimg.oschina.net/oscnet/up-d75533206a38fc2219b6f61e4a677d4d907.png" alt="" referrerpolicy="no-referrer"></p><h3>流量管控</h3><p>Dubbo 提供了豐富的流量管控策略：</p><ul><li><strong>地址發現與負載均衡，</strong> 地址發現支持服務實例動態上下線，負載均衡確保流量均勻的分佈到每個實例上。</li><li><strong>基於路由規則的流量管控，</strong> 路由規則對每次請求進行條件匹配，並將符合條件的請求路由到特定的地址子集。</li></ul><p>服務發現保證調用方看到最新的提供方實例地址，服務發現機制依賴註冊中心 (Zookeeper、Nacos、Istio 等) 實現。在消費端，Dubbo 提供了多種負載均衡策略，如隨機負載均衡策略、一致性哈希負載、基於權重的輪詢、最小活躍度優先、P2C 等。</p><p>Dubbo 的流量管控規則可以基於應用、服務、方法、參數等粒度精準的控制流量走向，根據請求的目標服務、方法以及請求體中的其他附加參數進行匹配，符合匹配條件的流量會進一步的按照特定規則轉發到一個地址子集。以下是 dubbo-go 流量管控規則可以實現的一些具體管控場景示例：</p><ul><li>基於權重的比例流量分發</li><li>灰度驗證</li><li>金絲雀發佈</li><li>按請求參數的路由</li><li>同區域優先</li><li>超時時間調整</li><li>重試</li><li>限流降級</li></ul><p>以下是一個基於 dubbo-go 實現的全鏈路灰度示例：</p><p><img src="https://oscimg.oschina.net/oscnet/up-5db7bb3a33e5312c6b284dee83c2f07e978.png" alt="" referrerpolicy="no-referrer"></p><p>以下是一個基於 dubbo-go 實現的按比例流量轉發示例：</p><p><img src="https://oscimg.oschina.net/oscnet/up-feff2328b1b30e38c9f80fedf30ef7d4849.png" alt="" referrerpolicy="no-referrer"></p><p>關於 dubbo-go 流量管控，我們以一個商城系統提供了一個完整的 demo 示例，感興趣的讀者可以參考詳細信息：</p><ul><li>流量管控規則詳情 <strong>[</strong><strong>1]</strong></li><li>流量管控商場示例解讀 <strong>[</strong><strong>2]</strong></li></ul><h3>生態</h3><p>dubbo-go 總體上遵循框架內核+插件的的設計理念，左側的框架內核定義了 dubbo-go 作為微服務框架的一些核心概念，右側的插件部分則提供了核心概念擴展實現。</p><p><img src="https://oscimg.oschina.net/oscnet/up-130d4ae7744867b2043dfa8d36fc953563e.png" alt="" referrerpolicy="no-referrer"></p><p>框架內核，可分為 4 個層次，從上到下依次為：</p><ul><li><p><strong>API 層</strong></p><p>dubbo-go 同時支持基於 IDL、interface/struct 的服務契約定義，兼顧跨語言與易用性訴求；支持基於純 yaml 文件的微服務配置模式；提供了同步、異步、單次 (unary)、流式 (streaming) 等 RPC 通信與編碼模型。</p></li><li><p><strong>服務治理層</strong></p><p>dubbo-go 內置了多維度的服務治理能力抽象，確保滿足微服務開發與集羣治理的核心訴求，這包括地址發現（Service Discovery）、負載均衡（Load Balancing）、可觀測指標（Metrics）、流量管控（Traffic Management）、全鏈路追蹤（Tracing）等。</p></li><li><p><strong>RPC 協議層</strong></p><p>dubbo-go 實現的最核心的 RPC 協議是 - triple 協議，triple 可同時工作在 http1/2 之上 (支持 CURL 直接訪問)，兼容 gRPC；從設計上，dubbo-go 還提供了多協議發佈服務的支持，你可以在一個進程內同時發佈 triple、dubbo2、rest、jsonRPC 等多種不同通信協議的服務。</p></li><li><p><strong>傳輸層</strong>支持 HTTP1/2、TCP 傳輸層，兼顧性能與通用性，同時支持多種序列化方式。</p></li></ul><p>插件體系極大的豐富了 dubbo-go 功能與生態，社區內置提供了大量的內置擴展實現，同時，開發者可以非常容易的根據需求增加擴展實現。以下是一些典型的插件定義：</p><ul><li><p><strong>Protocol</strong></p><p>dubbo-go 基於 protocol 插件內置提供了 triple、dubbo2、rest 等協議支持，通過擴展 protocol 可以為 dubbo-go 擴展更多協議。</p></li><li><p><strong>Service Discovery</strong></p><p>支持 Nacos、Zookeeper、Polaris 等主流注冊中心集成。</p></li><li><p><strong>Traffic Management</strong></p><p>dubbo-go 支持 Dubbo 體系定義的流量規則，可以實現在運行期動態的調整服務行為如超時時間、重試次數、限流參數等，通過控制流量分佈可以實現 A/B 測試、金絲雀發佈、多版本按比例流量分配、條件匹配路由、黑白名單等。</p></li><li><p><strong>Metrics</strong></p><p>提供 RPC 調用（RT、QPS、調用量、請求成功數、請求失敗數、併發請求數等）、註冊中心、元數據中心、配置中心交互統計等豐富的內置採集埋點，支持多維度的指標聚合。</p></li><li><p><strong>Logging</strong></p><p>提供通用的日誌採集接口定義，內置 Zap、Logrus 支持。</p></li><li><p><strong>Tracing</strong></p><p>提供分佈式鏈路追蹤能力，通過此插件擴展可接入 Zipkin、Jaeger、Skywalking 等鏈路追蹤系統。</p></li></ul><h2>總結</h2><p>dubbo-go 3.2.0 的首個 alpha 版本將於 11 月底發佈，本文是發版前的搶先預覽，感興趣的讀者也可以訪問源碼嚐鮮：<em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdubbo-go%2Ftree%2Ffeature-triple%2Fprotocol%2Ftriple%2Finternal" target="_blank">https://github.com/apache/dubbo-go/tree/feature-triple/protocol/triple/internal</a></em></p><p>接下來，我們將持續推進 3.2.0 版本迭代並計劃與 2 月份發佈正式穩定版本，詳細 Roadmap 請關注項目倉庫：<em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdubbo-go" target="_blank">https://github.com/apache/dubbo-go</a></em></p><p>社區期待 Go 語言相關開發者的加入，可搜索關注&nbsp;「apachedubbo」&nbsp;微信公眾號並回復 「dubbogo」 接受邀請，加入官方社羣組織。</p><p><strong>相關鏈接：</strong></p><p>[1]&nbsp;流量管控規則詳情</p><p><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcn.dubbo.apache.org%2Fzh-cn%2Foverview%2Fcore-features%2Ftraffic%2F" target="_blank">https://cn.dubbo.apache.org/zh-cn/overview/core-features/traffic/</a></em></p><p>[2]&nbsp;流量管控商場示例解讀</p><p><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcn.dubbo.apache.org%2Fzh-cn%2Foverview%2Ftasks%2Ftraffic-management%2F" target="_blank">https://cn.dubbo.apache.org/zh-cn/overview/tasks/traffic-management/</a></em></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 27 Dec 2023 03:31:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/3874284/blog/10422864</guid>
            <link>https://my.oschina.net/u/3874284/blog/10422864</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[微軟悄然推出 Copilot Android 版應用]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">微軟在一週前悄然<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftwitter.com%2Ftechosarusrex%2Fstatus%2F1739569672058450165" target="_blank">上線</a>了 Android 版本的 Copilot 應用，目前可從 Google Play 商店進行下載，但 iOS 版本尚未推出。</span></p><p><span style="color:#000000"><img alt="" height="423" src="https://oscimg.oschina.net/oscnet/up-fbbce70c8deda05fed32340399295f80d10.jpg" width="300" referrerpolicy="no-referrer"></span></p><p><span style="color:#000000">Android 版的 Copilot 應用與 ChatGPT 非常相似，可以訪問聊天機器人功能，通過 DALL-E 3 生成圖像，並可以為電子郵件和文檔起草文本。它還能夠免費訪問 OpenAI 最新的 GPT-4 模型，而如果用户使用 ChatGPT，就必須付費。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 27 Dec 2023 02:37:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272891/microsoft-copilot-app-for-android</guid>
            <link>https://www.oschina.net/news/272891/microsoft-copilot-app-for-android</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[deepin-IDE 版本更新，舊貌換新顏]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff; color:#000000">deepin-IDE（Deepin Union Code）<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FpPUEscN83gvcbKAwnK4vtQ" target="_blank">新版本</a>現已推出，具體更新內容如下：</span></p><h4><strong style="color:#020000">舊貌換新顏：從 Qt 到 DTK</strong></h4><p><span style="background-color:#ffffff; color:#000000">界面風格直接從 Qt 改為了 DTK。最新的設計圖如下：</span></p><p><strong style="color:#000000"><span style="color:#000000">最近打開頁面</span></strong></p><p><img height="350" src="https://oscimg.oschina.net/oscnet/up-cffc46c71bb34b82ff1e883d2da77193738.png" width="500" referrerpolicy="no-referrer"></p><p><strong style="color:#000000"><span style="color:#000000">編輯器界面</span></strong></p><p><img height="346" src="https://oscimg.oschina.net/oscnet/up-b076d0132b515149ab4328d485580c3df2a.png" width="500" referrerpolicy="no-referrer"></p><p><strong style="color:#000000"><span>調試界面</span></strong></p><p><img height="339" src="https://oscimg.oschina.net/oscnet/up-b40d7e22d09e7701b521c61213c58eb66aa.png" width="500" referrerpolicy="no-referrer"></p><p><span style="color:#000000">與此同時，<span style="background-color:#ffffff">deepin-IDE 也終於有了新圖標（設計靈感來源於</span><strong style="color:#000000">代碼裏面的 「&lt;/&gt;」 符號</strong><span style="background-color:#ffffff">）：</span></span></p><p><span style="background-color:#ffffff; color:#000000"><img alt="" height="200" src="https://oscimg.oschina.net/oscnet/up-59d41e000d8b29907d53e4d2e7e66e65d83.png" width="200" referrerpolicy="no-referrer"></span></p><h4><span style="color:#000000"><span style="background-color:#ffffff"><strong>上架 deepin</strong></span><span style="background-color:#ffffff">&nbsp;</span><span style="background-color:#ffffff"><strong>應用商</strong></span><span style="background-color:#ffffff"><strong>店</strong></span></span></h4><p><span style="color:#000000"><span style="background-color:#ffffff">deepin-IDE 已經上架 deepin 應用商店，用户可以一鍵下載安裝。</span></span></p><p><img height="318" src="https://oscimg.oschina.net/oscnet/up-7fa9f0e093913d11a7afcfa5664499699d1.png" width="500" referrerpolicy="no-referrer"></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify"><span style="color:#000000">也支持從倉庫安裝，在終端運行以下命令即可：</span></p><pre style="margin-left:0; margin-right:0"><code><span><span style="color:#0e9ce5">sudo</span> apt install deepin-unioncode</span></code></pre><h4><strong><span style="color:#000000">AI&nbsp;<span style="background-color:#ffffff">智能插件</span></span></strong></h4><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify"><span>deepin-IDE 中的智能插件是和智譜廠商合作，現已實現了智能問答、代碼翻譯、添加註釋、代碼生成等功能：</span></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify"><strong><span>智能問答</span></strong></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify"><span>開發中遇到的技術問題，可直接向 AI 提問。無需離開 IDE 環境去搜索引擎尋找答案，讓開發者更沉浸於開發環境。</span></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify"><img height="341" src="https://oscimg.oschina.net/oscnet/up-35da352f3dd017b20ed2ddd0404487019dc.png" width="500" referrerpolicy="no-referrer"></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify"><strong>代碼翻譯</strong></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify"><span style="background-color:#ffffff; color:#000000">基於 AI 大模型對代碼進行語義級翻譯，支持多種編程語言互譯。</span></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify"><img height="353" src="https://oscimg.oschina.net/oscnet/up-6e1018bbef2d2ca10e2edc1a12c23e18897.png" width="500" referrerpolicy="no-referrer"></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify"><strong><span>自動添加註釋</span></strong></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify"><span>支持給代碼自動添加行級註釋，節省大量開發時間。沒有註釋的歷史代碼，也不再是問題。</span></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify"><img height="312" src="https://oscimg.oschina.net/oscnet/up-23a91249eb343214cb0258b818b157f65fa.png" width="500" referrerpolicy="no-referrer"></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify"><strong><span>代碼生成和補全</span></strong></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify"><span>根據自然語言註釋描述的功能自動生成代碼，也可以根據已有的代碼自動生成後續代碼，補全當前行或生成後續若干行，幫助提高編程效率。</span></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify"><img height="285" src="https://oscimg.oschina.net/oscnet/up-8b8dce51b03eab7e6d8722ab2d3bdb64ca1.png" width="500" referrerpolicy="no-referrer"></p><h4 style="margin-left:0px; margin-right:0px; text-align:justify"><strong style="color:#020000">重磅：DTK 從此變簡單</strong></h4><p>本次最重要的更新是 deepin-IDE 的智能插件現已支持生成 DTK 風格的代碼。基於智譜大模型，以深度倉庫代碼、開發文檔、知識資產等作為訓練數據，經過深度調教、優化後，目前可以直接在問答模塊中生成 DTK 風格的代碼。以下是一些應用示例：</p><p>首先來一個「hello world」熱熱身：</p><p><img alt="" height="440" src="https://oscimg.oschina.net/oscnet/up-616813204fe4e1c1a59e3feab44ec1cb06e.png" width="300" referrerpolicy="no-referrer"></p><p><span style="background-color:#ffffff; color:#000000">接下來繼續提問，讓其寫一個 DTK 彈窗：</span></p><p><span style="background-color:#ffffff; color:#000000"><img alt="" height="438" src="https://oscimg.oschina.net/oscnet/up-c566d97ee7af8ae2aba0f7baca6b163d5a1.png" width="300" referrerpolicy="no-referrer"></span></p><p><span style="background-color:#ffffff; color:#000000">最後讓其寫一個文本編輯器：</span></p><p><span style="background-color:#ffffff; color:#000000"><img alt="" height="438" src="https://oscimg.oschina.net/oscnet/up-e40307e83fab53794a71888095e39889e76.png" width="300" referrerpolicy="no-referrer"></span></p><p><span style="background-color:#ffffff; color:#000000">相比於其它 AI 問答插件或同類型產品，deepin-IDE 插件回答的內容更加準確，給研發人員的效率帶來了巨大的</span><span style="background-color:#ffffff; color:#000000">提升。隨着後續 AI 模型的不斷調試、優化，相信能夠生成更多、更準確並且更貼合 deepin（深度）操作系統的回答。</span></p><p><span style="background-color:#ffffff; color:#000000">公告稱，「本次&nbsp;</span><span style="background-color:#ffffff; color:#000000">deepin-IDE&nbsp;</span><span style="background-color:#ffffff; color:#000000">更新的重點是在顏值提升和 AI 能力上，但 deepin-IDE 的目標是要成為 deepin（深度）操作系統生態建設的利器，僅是這些內容顯然是不夠的。所以後續會將首次官宣中的計劃逐步實現，把系統能力整合其中，讓其成為 deepin 生態建設中服務和流程的統一入口。」</span></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 27 Dec 2023 02:07:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272886</guid>
            <link>https://www.oschina.net/news/272886</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Pororoca —— HTTP 測試工具]]>
            </title>
            <description>
                <![CDATA[Pororoca 是一個支持 HTTP/2 和 HTTP/3 的 HTTP 測試工具，受到 Postman 的啓發，但有許多改進。適用於 Windows、Mac OSX 和 Linux。...]]>
            </description>
            <pubDate>Wed, 27 Dec 2023 02:06:00 GMT</pubDate>
            <guid isPermaLink="false">Pororoca —— HTTP 測試工具</guid>
            <link></link>
        </item>
        <item>
            <title>
                <![CDATA[Gitee 推薦 | 物聯網終端操作系統 TencentOS Tiny]]>
            </title>
            <description>
                <![CDATA[<h1><a id="user-content-開放原子開源基金會首批孵化項目" class="anchor" href="https://gitee.com/TencentOS/TencentOS-tiny#%E5%BC%80%E6%94%BE%E5%8E%9F%E5%AD%90%E5%BC%80%E6%BA%90%E5%9F%BA%E9%87%91%E4%BC%9A%E9%A6%96%E6%89%B9%E5%AD%B5%E5%8C%96%E9%A1%B9%E7%9B%AE"></a>開放原子開源基金會首批孵化項目</h1><p><img src="https://gitee.com/TencentOS/TencentOS-tiny/raw/master/doc/image/introduction/TencentOS_tiny_log.png" alt="" referrerpolicy="no-referrer"></p><p><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FTencent%2FTencentOS-tiny%2Fblob%2Fmaster%2FLICENSE"><img src="http://img.shields.io/badge/license-BSD-blue.svg" alt="license" referrerpolicy="no-referrer"></a><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FTencent%2FTencentOS-tiny%2Fpulls"><img src="https://img.shields.io/badge/PRs-welcome-blue.svg" alt="PRs Welcome" referrerpolicy="no-referrer"></a></p><p><a href="https://gitee.com/TencentOS/TencentOS-tiny/blob/master/README_en.md">(English Documents Available)</a></p><h1><a id="user-content-一 tencentos-tiny-簡介" class="anchor" href="https://gitee.com/TencentOS/TencentOS-tiny#%E4%B8%80tencentos-tiny-%E7%AE%80%E4%BB%8B"></a>一、TencentOS Tiny 簡介</h1><p><a href="https://gitee.com/link?target=https%3A%2F%2Fcloud.tencent.com%2Fproduct%2Ftos-tiny">TencentOS tiny</a> 是騰訊面向物聯網領域開發的實時操作系統，具有低功耗，低資源佔用，模塊化，安全可靠等特點，可有效提升物聯網終端產品開發效率。TencentOS tiny 提供精簡的 RTOS 內核，內核組件可裁剪可配置，可快速移植到多種主流 MCU (如 STM32 全系列) 及模組芯片上。而且，基於 RTOS 內核提供了豐富的物聯網組件，內部集成主流物聯網協議棧（如 CoAP/MQTT/TLS/DTLS/LoRaWAN/NB-IoT 等），可助力物聯網終端設備及業務快速接入騰訊雲物聯網平台。</p><h2><a id="user-content-1tencentos-tiny 整體架構" class="anchor" href="https://gitee.com/TencentOS/TencentOS-tiny#1tencentos-tiny%E6%95%B4%E4%BD%93%E6%9E%B6%E6%9E%84"></a>1、TencentOS tiny 整體架構</h2><p><img src="https://gitee.com/TencentOS/TencentOS-tiny/raw/master/doc/image/introduction/TencentOS_tiny_Architecture.png" alt="" referrerpolicy="no-referrer"></p><p>TencentOS tiny 主體架構圖，從下到上主要包括：</p><p><strong>CPU 庫</strong> ：TencentOS tiny 支持的 CPU IP 核架構，當前主要支持 ARM Cortex M0/3/4/7，Cortex A7，RISC-V、MSP430、AVR、STM8 等。</p><p><strong>驅動管理層</strong> ：包括板級支持包（BSP，主要由 MCU 芯片廠家開發與維護）、硬件抽象層（HAL，主要由 TencentOS tiny 提供，方便不同芯片的適配與移植）、設備驅動（Drivers，例如 Wi-Fi、GPRS、LoRa 等模塊的驅動程序）。</p><p><strong>內核</strong> ：TencentOS tiny 實時內核包括任務管理、實時調度、時間管理、中斷管理、內存管理、異常處理、軟件定時器、鏈表、消息隊列、信號量、互斥鎖、事件標誌等模塊。</p><p><strong>IoT 協議棧</strong>：TencentOS tiny 提供 lwip、AT Adapter、SAL 層，支持不同的網絡硬件，例如以太網、串口 Wi-Fi、GPRS、NB-IoT、4G 等通信模塊。TCP/IP 網絡協議棧上提供常用的物聯網協議棧，例如 CoAP、MQTT，支撐終端業務快速接入騰訊雲。</p><p><strong>安全框架</strong>：TencentOS tiny 為了確保物聯網終端數據傳輸安全以及設備認證安全，提供了完整的安全解決方案。安全框架提供的 DTLS 和 TLS 安全協議，加固了 COAP 及 MQTT 的傳輸層，可確保物聯網終端在對接騰訊雲時實現安全認證和數據加密；另外針對低資源的終端硬件，安全框架還提供與騰訊雲 IoTHub 配套的密鑰認證方案，確保資源受限設備也能在一定程度上實現設備安全認證。</p><p><strong>組件框架</strong>：TencentOS tiny 提供文件系統、KV 存儲、自組網、JS 引擎、低功耗框架、設備框架、OTA、調試工具鏈等一系列組件，供用户根據業務場景選用。</p><p><strong>開放 API（規劃開發中）</strong>：TencentOS tiny 將在協議中間件和框架層上提供開放 API 函數，方便用户調用中間件功能，使用户無需過多關心中間件具體實現，快速對接騰訊雲，實現終端業務上雲的需求，期望最大程度減少終端物聯網產品開發週期，節省開發成本。</p><p><strong>示例應用</strong>：TencentOS tiny 提供的示例代碼，模塊測試代碼等，方便用户參考使用。</p><h2><a id="user-content-2tencentos-tiny-優勢" class="anchor" href="https://gitee.com/TencentOS/TencentOS-tiny#2tencentos-tiny-%E4%BC%98%E5%8A%BF"></a>2、TencentOS tiny 優勢</h2><h3><a id="user-content-1 小體積" class="anchor" href="https://gitee.com/TencentOS/TencentOS-tiny#1%E5%B0%8F%E4%BD%93%E7%A7%AF"></a>(1).小體積</h3><p>最小內核：RAM 0.6KB，ROM 1.8KB
典型 LoraWAN 及傳感器應用：RAM 3.3KB，ROM 12KB</p><h3><a id="user-content-2 低功耗" class="anchor" href="https://gitee.com/TencentOS/TencentOS-tiny#2%E4%BD%8E%E5%8A%9F%E8%80%97"></a>(2).低功耗</h3><p>休眠最低功耗低至 2uA
支持外設功耗管理框架</p><h3><a id="user-content-3 豐富的-iot-組件" class="anchor" href="https://gitee.com/TencentOS/TencentOS-tiny#3%E4%B8%B0%E5%AF%8C%E7%9A%84-iot-%E7%BB%84%E4%BB%B6"></a>(3).豐富的 IoT 組件</h3><p>集成主流 IoT 協議棧
多種通信模組 SAL 層適配框架；
支持 OTA 升級
提供簡單易用端雲 API，加速用户業務接入騰訊雲</p><h3><a id="user-content-4 可靠的安全框架" class="anchor" href="https://gitee.com/TencentOS/TencentOS-tiny#4%E5%8F%AF%E9%9D%A0%E7%9A%84%E5%AE%89%E5%85%A8%E6%A1%86%E6%9E%B6"></a>(4).可靠的安全框架</h3><p>多樣化的安全分級方案
均衡安全需求&amp;成本控制</p><h3><a id="user-content-5 良好的可移植性" class="anchor" href="https://gitee.com/TencentOS/TencentOS-tiny#5%E8%89%AF%E5%A5%BD%E7%9A%84%E5%8F%AF%E7%A7%BB%E6%A4%8D%E6%80%A7"></a>(5).良好的可移植性</h3><p>內核及 IoT 組件高度解耦，提供標準適配層
提供自動化移植工具，提升開發效率</p><h3><a id="user-content-6 便捷的調試手段" class="anchor" href="https://gitee.com/TencentOS/TencentOS-tiny#6%E4%BE%BF%E6%8D%B7%E7%9A%84%E8%B0%83%E8%AF%95%E6%89%8B%E6%AE%B5"></a>(6).便捷的調試手段</h3><p>提供雲化的最後一屏調試功能
故障現場信息自動上傳雲平台，方便開發人員調試分析</p><h2><a id="user-content-3tencentos-tiny 攜手合作夥伴共建 iot 生態" class="anchor" href="https://gitee.com/TencentOS/TencentOS-tiny#3tencentos-tiny%E6%90%BA%E6%89%8B%E5%90%88%E4%BD%9C%E4%BC%99%E4%BC%B4%E5%85%B1%E5%BB%BAiot%E7%94%9F%E6%80%81"></a>3、TencentOS tiny 攜手合作夥伴共建 IoT 生態</h2><p><img src="https://gitee.com/TencentOS/TencentOS-tiny/raw/master/doc/image/introduction/Partners.png" alt="" referrerpolicy="no-referrer"></p><p>TencentOS tiny 自開源發佈以來也在努力發展合作伙伴，期待合作共贏，共同擴展 IoT 應用生態。目前已經與多家 MCU/IP 核廠家達成了合作，包括意法半導體、恩智浦半導體、兆易半導體、ARM、華大半導體、芯來科技等；也與無線 SOC 和模組廠家達成了廣泛的合作關係，包括瑞興恆方、國民技術、Nordic 藍牙、亮牛半導體、有人物聯網等，</p><p>除了 MCU 和模組外，TencentOS tiny 也積極推進終端產品及項目的落地，目前已經形成了 AI 智慧農業、智能貨櫃、智慧會議室等方案，並且在騰訊內部與微信支付、騰訊雲智慧行業、 AI 平台部、騰訊微瓴、QQ family 達成內部合作，共同擴展行業生態；同時也開始積極發展外部客户，目前與深圳光合顯示科技的墨水屏零售標籤、鑫悦購充電樁等達成業務合作。TencentOS tiny 將攜手合作夥伴為物聯網終端廠家提供更優質的 IoT 終端軟件解決方案，方便各種物聯網設備快速接入騰訊雲，共同擴展 IoT 生態，更好地支撐智慧城市、智能水錶、智能家居、智能穿戴、車聯網等多種行業應用。</p><p>歡迎 IoT 相關項目合作，有合作需求的請郵件聯繫 TencentOS tiny 官方工作人員，郵箱地址 ： <a href="mailto:supowang@tencent.com">supowang@tencent.com</a></p><h1><a id="user-content-二 tencentos-tiny-代碼目錄" class="anchor" href="https://gitee.com/TencentOS/TencentOS-tiny#%E4%BA%8Ctencentos-tiny-%E4%BB%A3%E7%A0%81%E7%9B%AE%E5%BD%95"></a>二、TencentOS tiny 代碼目錄</h1><ul><li><a href="https://gitee.com/TencentOS/TencentOS-tiny/blob/master/doc/09.Code_Directories.md">TencentOS tiny 代碼目錄説明</a></li></ul><h1><a id="user-content-三 tencentos-tiny-參考文檔" class="anchor" href="https://gitee.com/TencentOS/TencentOS-tiny#%E4%B8%89tencentos-tiny-%E5%8F%82%E8%80%83%E6%96%87%E6%A1%A3"></a>三、TencentOS tiny 參考文檔</h1><h2><a id="user-content-1 移植指南" class="anchor" href="https://gitee.com/TencentOS/TencentOS-tiny#1%E7%A7%BB%E6%A4%8D%E6%8C%87%E5%8D%97"></a>1、移植指南</h2><ul><li><a href="https://gitee.com/TencentOS/TencentOS-tiny/blob/master/doc/10.Porting_Manual_for_KEIL.md">TencentOS tiny 移植指南（KEIL 版本）</a></li><li><a href="https://gitee.com/TencentOS/TencentOS-tiny/blob/master/doc/11.Porting_Manual_for_IAR.md">TencentOS tiny 移植指南（IAR 版本）</a></li><li><a href="https://gitee.com/TencentOS/TencentOS-tiny/blob/master/doc/12.Porting_Manual_for_GCC.md">TencentOS tiny 移植指南（GCC 版本）</a></li><li><a href="https://gitee.com/TencentOS/TencentOS-tiny/blob/master/tools/mdk_pack/Documentation/README.md">TencentOS tiny 移植指南（基於 MDK pack)</a></li><li><a href="https://gitee.com/TencentOS/TencentOS-tiny/blob/master/tools/STM32CubeMX_pack/Documentation/README.md">TencentOS tiny 移植指南（基於 STM32 CubeMx)</a></li></ul><h2><a id="user-content-2tencentos-tiny-開發指南" class="anchor" href="https://gitee.com/TencentOS/TencentOS-tiny#2tencentos-tiny-%E5%BC%80%E5%8F%91%E6%8C%87%E5%8D%97"></a>2、TencentOS tiny 開發指南</h2><ul><li><a href="https://gitee.com/TencentOS/TencentOS-tiny/blob/master/doc/04.Development_Manual.md">TencentOS tiny 內核開發指南</a></li><li><a href="https://gitee.com/TencentOS/TencentOS-tiny/blob/master/doc/05.SDK_Manual.md">TencentOS tiny API 參考</a></li><li><a href="https://gitee.com/TencentOS/TencentOS-tiny/blob/master/doc/08.QCloud_IoTHub_Quick_Start.md">TencentOS tiny 對接騰訊雲 IoTHub 開發指南</a></li></ul><h2><a id="user-content-3tencentos-tiny-騰訊雲大學視頻教程" class="anchor" href="https://gitee.com/TencentOS/TencentOS-tiny#3tencentos-tiny-%E8%85%BE%E8%AE%AF%E4%BA%91%E5%A4%A7%E5%AD%A6%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B"></a>3、TencentOS tiny 騰訊雲大學視頻教程</h2><ul><li><a href="https://gitee.com/link?target=https%3A%2F%2Fcloud.tencent.com%2Fedu%2Fpaths%2Fseries%2FIoT">TencentOS tiny 端側開發實踐課</a></li></ul><h1><a id="user-content-四 tencentos-tiny-開源協議" class="anchor" href="https://gitee.com/TencentOS/TencentOS-tiny#%E5%9B%9Btencentos-tiny-%E5%BC%80%E6%BA%90%E5%8D%8F%E8%AE%AE"></a>四、TencentOS tiny 開源協議</h1><ul><li>TencentOS tiny 遵循 <a href="https://gitee.com/TencentOS/TencentOS-tiny/blob/master/LICENSE">BSD-3 開源許可協議</a></li></ul><h1><a id="user-content-五 tencentos-tiny-支持的物聯網平台" class="anchor" href="https://gitee.com/TencentOS/TencentOS-tiny#%E4%BA%94tencentos-tiny-%E6%94%AF%E6%8C%81%E7%9A%84%E7%89%A9%E8%81%94%E7%BD%91%E5%B9%B3%E5%8F%B0"></a>五、TencentOS tiny 支持的物聯網平台</h1><p>TencentOS tiny 能支持物聯網終端設備和業務快速接入<a href="https://gitee.com/link?target=https%3A%2F%2Fcloud.tencent.com%2Fproduct%2Fiotexplorer">騰訊雲物聯網平台 IoT Explorer</a>。</p><p>TencentOS tiny 結合騰訊雲物聯網開發平台 IoT Explorer，已經構築起連接通訊芯片到雲開發的能力，加上已經建設完成的國內最大規模 LoRa 網絡，騰訊徹底打通從芯片通訊開發、網絡支撐服務，物理設備定義管理，數據分析和多場景應用開發等全鏈條 IoT 雲開發服務能力，重新定義了物聯網開發模式，助力億級設備多方式多模式低門檻接入騰訊雲服務。作為物聯網基礎設施建設服務者，騰訊將持續打造開放的物聯網生態體系，促進物聯網生態良性發展。</p><h1><a id="user-content-六 tencentos-tiny-快速入門參考" class="anchor" href="https://gitee.com/TencentOS/TencentOS-tiny#%E5%85%ADtencentos-tiny-%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%E5%8F%82%E8%80%83"></a>六、TencentOS tiny 快速入門參考</h1><p>TencentOS tiny 聯合合作夥伴 (南京厚德物聯網) 設計了定製開發板，如下圖：
<img src="https://gitee.com/TencentOS/TencentOS-tiny/raw/master/doc/image/introduction/EVB_MX.png" alt="" referrerpolicy="no-referrer"></p><ul><li><a href="https://gitee.com/link?target=http%3A%2F%2Fwww.holdiot.com%2Fproduct%2Fshowproduct.php%3Fid%3D8">TencentOS tiny 定製開發板介紹頁</a>，開發者可以基於定製開發板進行快速入門學習，點擊下載參考文檔</li><li><a href="https://gitee.com/TencentOS/TencentOS-tiny/blob/master/doc/15.TencentOS_tiny_EVB_MX_Plus_Quick_Start.md">TencentOS-tiny 定製開發板入門指南</a></li></ul><h1><a id="user-content-七貢獻代碼" class="anchor" href="https://gitee.com/TencentOS/TencentOS-tiny#%E4%B8%83%E8%B4%A1%E7%8C%AE%E4%BB%A3%E7%A0%81"></a>七、貢獻代碼</h1><ul><li><ol><li>在您自己的 GitHub 賬户下 Fork TencentOS tiny 開源項目；</li></ol></li><li><ol start="2"><li>根據您的需求在本地 clone 一份 TencentOS tiny 代碼；</li></ol></li><li><ol start="3"><li>您修改或者新增功能後，push 到您 fork 的遠程分支；</li></ol></li><li><ol start="4"><li>創建 pull request，向 TencentOS tiny 官方開發分支提交合入請求；</li></ol></li><li><ol start="5"><li>TencentOS tiny 研發團隊會定期 review 代碼，通過測試後合入。</li></ol></li></ul><h1><a id="user-content-八加入 tencentos-tiny 官方 qq 技術交流羣" class="anchor" href="https://gitee.com/TencentOS/TencentOS-tiny#%E5%85%AB%E5%8A%A0%E5%85%A5tencentos-tiny%E5%AE%98%E6%96%B9qq%E6%8A%80%E6%9C%AF%E4%BA%A4%E6%B5%81%E7%BE%A4"></a>八、加入 TencentOS tiny 官方 QQ 技術交流羣</h1><p>掃碼加羣，請備註 TencentOS tiny 開發者，工作人員會根據備註進行審核：</p><p><img src="https://gitee.com/TencentOS/TencentOS-tiny/raw/master/doc/image/introduction/qq.png" alt="" referrerpolicy="no-referrer"></p><h1><a id="user-content-九第三方開發者評測" class="anchor" href="https://gitee.com/TencentOS/TencentOS-tiny#%E4%B9%9D%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BC%80%E5%8F%91%E8%80%85%E8%AF%84%E6%B5%8B"></a>九、第三方開發者評測</h1><p>1.基於 TencentOS tiny 的環境監測實戰項目
<a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2Fav73782956%3Ffrom%3Dsearch%26seid%3D4421984671929108231">【TencentOS tiny】環境監測實戰項目最終完整版</a>
感謝阿正的貢獻</p><p>2.基於野火 stm32f103 開發板上移植的 TencentOS tiny 例程、源碼剖析、視頻講解。
感謝 CSDN 博客專家傑傑的貢獻</p><h2><a id="user-content-簡單上手" class="anchor" href="https://gitee.com/TencentOS/TencentOS-tiny#%E7%AE%80%E5%8D%95%E4%B8%8A%E6%89%8B"></a>簡單上手：</h2><ul><li><a href="https://gitee.com/link?target=https%3A%2F%2Fblog.csdn.net%2Fjiejiemcu%2Farticle%2Fdetails%2F101034426">超詳細的 TencentOS tiny 移植到 STM32F103 全教程</a></li></ul><h2><a id="user-content-深度源碼分析" class="anchor" href="https://gitee.com/TencentOS/TencentOS-tiny#%E6%B7%B1%E5%BA%A6%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90"></a>深度源碼分析：</h2><ul><li><p><a href="https://gitee.com/link?target=https%3A%2F%2Fblog.csdn.net%2Fjiejiemcu%2Farticle%2Fdetails%2F99618912">【TencentOS tiny 學習】源碼分析（1）——task</a></p></li><li><p><a href="https://gitee.com/link?target=https%3A%2F%2Fblog.csdn.net%2Fjiejiemcu%2Farticle%2Fdetails%2F99665883">【TencentOS tiny 學習】源碼分析（2）——調度器</a></p></li><li><p><a href="https://gitee.com/link?target=https%3A%2F%2Fblog.csdn.net%2Fjiejiemcu%2Farticle%2Fdetails%2F99687678">【TencentOS tiny 學習】源碼分析（3）——隊列</a></p></li><li><p><a href="https://gitee.com/link?target=https%3A%2F%2Fblog.csdn.net%2Fjiejiemcu%2Farticle%2Fdetails%2F99781093">【TencentOS tiny 學習】源碼分析（4）——消息隊列</a></p></li><li><p><a href="https://gitee.com/link?target=https%3A%2F%2Fblog.csdn.net%2Fjiejiemcu%2Farticle%2Fdetails%2F100052643">【TencentOS tiny 學習】源碼分析（5）——信號量</a></p></li><li><p><a href="https://gitee.com/link?target=https%3A%2F%2Fblog.csdn.net%2Fjiejiemcu%2Farticle%2Fdetails%2F100056641">【TencentOS tiny 學習】源碼分析（6）——互斥鎖</a></p></li><li><p><a href="https://gitee.com/link?target=https%3A%2F%2Fblog.csdn.net%2Fjiejiemcu%2Farticle%2Fdetails%2F100492219">【TencentOS tiny 學習】源碼分析（7）——事件</a></p></li><li><p><a href="https://gitee.com/link?target=https%3A%2F%2Fblog.csdn.net%2Fjiejiemcu%2Farticle%2Fdetails%2F101846089">【TencentOS tiny 學習】源碼分析（8）——軟件定時器</a></p></li></ul><h2><a id="user-content-配套例程" class="anchor" href="https://gitee.com/TencentOS/TencentOS-tiny#%E9%85%8D%E5%A5%97%E4%BE%8B%E7%A8%8B"></a>配套例程：</h2><ul><li><p><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FjiejieTop%2FTencentOS-Demo%2Ftree%2Fmaster%2Fhello-world">【TencentOS tiny 學習】例程（0）——hello world</a></p></li><li><p><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FjiejieTop%2FTencentOS-Demo%2Ftree%2Fmaster%2F01-task">【TencentOS tiny 學習】例程（1）——task</a></p></li><li><p><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FjiejieTop%2FTencentOS-Demo%2Ftree%2Fmaster%2F02-queue">【TencentOS tiny 學習】例程（2）——隊列</a></p></li><li><p><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FjiejieTop%2FTencentOS-Demo%2Ftree%2Fmaster%2F03-msg_queue">【TencentOS tiny 學習】例程（3）——消息隊列</a></p></li><li><p><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FjiejieTop%2FTencentOS-Demo%2Ftree%2Fmaster%2F04-sem">【TencentOS tiny 學習】例程（4）——信號量</a></p></li><li><p><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FjiejieTop%2FTencentOS-Demo%2Ftree%2Fmaster%2F05-mutex">【TencentOS tiny 學習】例程（5）——互斥鎖</a></p></li><li><p><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FjiejieTop%2FTencentOS-Demo%2Ftree%2Fmaster%2F06-event">【TencentOS tiny 學習】例程（6）——事件</a></p></li><li><p><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FjiejieTop%2FTencentOS-Demo%2Ftree%2Fmaster%2F07-timer">【TencentOS tiny 學習】例程（7）——軟件定時器</a></p></li><li><p><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FjiejieTop%2FTencentOS-Demo%2Ftree%2Fmaster%2F08-mmblk">【TencentOS tiny 學習】例程（8）——內存池</a></p></li><li><p><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FjiejieTop%2FTencentOS-Demo%2Ftree%2Fmaster%2F09-mmheap">【TencentOS tiny 學習】例程（9）——內存堆</a></p></li></ul><h2><a id="user-content-視頻教程" class="anchor" href="https://gitee.com/TencentOS/TencentOS-tiny#%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B"></a>視頻教程：</h2><ul><li><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2Fav70478596%3Ffrom%3Dsearch%26seid%3D10160676184801585522">【TencentOS tiny 學習】視頻彙總</a></li><li><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2Fav70478596%2F%3Fp%3D1">【視頻】01-初識 TencentOS tiny</a></li><li><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2Fav70478596%2F%3Fp%3D2">【視頻】02-TencentOS tiny 基礎知識</a></li><li><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2Fav70478596%2F%3Fp%3D3">【視頻】03-TencentOS tiny 移植</a></li><li><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2Fav70478596%2F%3Fp%3D4">【視頻】04-TencentOS tiny 任務-1</a></li><li><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2Fav70478596%2F%3Fp%3D5">【視頻】05-TencentOS tiny 任務-2</a></li><li><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2Fav70478596%2F%3Fp%3D6">【視頻】06-TencentOS tiny 隊列-1</a></li><li><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2Fav70478596%2F%3Fp%3D7">【視頻】07-TencentOS tiny 隊列-2</a></li><li><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2Fav70478596%2F%3Fp%3D8">【視頻】08-TencentOS tiny 消息隊列</a></li><li><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2Fav70478596%2F%3Fp%3D9">【視頻】09-TencentOS tiny 信號量-1</a></li><li><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2Fav70478596%2F%3Fp%3D10">【視頻】10-TencentOS tiny 信號量-2</a></li><li><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2Fav70478596%2F%3Fp%3D11">【視頻】11-TencentOS tiny 互斥鎖-1</a></li><li><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2Fav70478596%2F%3Fp%3D12">【視頻】12-TencentOS tiny 互斥鎖-2</a></li><li><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2Fav70478596%2F%3Fp%3D13">【視頻】13-TencentOS tiny 互斥鎖-3</a></li><li><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2Fav70478596%2F%3Fp%3D14">【視頻】14-TencentOS tiny 事件-1</a></li><li><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2Fav70478596%2F%3Fp%3D15">【視頻】15-TencentOS tiny 事件-2</a></li><li><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2Fav70478596%2F%3Fp%3D16">【視頻】16-TencentOS tiny 軟件定時器-1</a></li><li><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2Fav70478596%2F%3Fp%3D11">【視頻】17-TencentOS tiny 軟件定時器-2</a></li><li><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2Fav70478596%2F%3Fp%3D18">【視頻】18-TencentOS tiny 軟件定時器-3</a></li></ul><h2><a id="user-content-相關 ppt 資料" class="anchor" href="https://gitee.com/TencentOS/TencentOS-tiny#%E7%9B%B8%E5%85%B3ppt%E8%B5%84%E6%96%99"></a>相關 PPT 資料：</h2><ul><li><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FjiejieTop%2FTencentOS-Demo%2Ftree%2Fmaster%2FPPT">【TencentOS tiny 學習】視頻 PPT</a></li></ul>]]>
            </description>
            <pubDate>Wed, 27 Dec 2023 01:54:00 GMT</pubDate>
            <guid isPermaLink="false">https://gitee.com/TencentOS/TencentOS-tiny</guid>
            <link>https://gitee.com/TencentOS/TencentOS-tiny</link>
        </item>
        <item>
            <title>
                <![CDATA[邀請好友使用 BaiduComate，贏取豐厚京東卡獎勵！]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h2><span><span><strong><strong><span><span><strong>什麼是 BaiduComate？</strong></span></span></strong></strong></span></span></h2><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span>BaiduComate 是基於文心大模型，結合百度積累多年的編程現場大數據和外部優秀開源數據，為你生成更符合實際研發場景的優質代碼的智能代碼助手。</span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span>Comate 目前可以通過自然語言及上下文，幫你生成代碼，更能契合您的個人代碼風格和業務需求，幫您提高編碼效率，更有技術問答來幫您解答編碼過程中遇到的技術難題。</span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span>同時 Comate 能夠幫您智能生成單元測試、快速生成代碼註釋、為您的代碼內容提供優化建議，讓您從繁雜零碎的工作中解放出來。</span></span></span></span></p><h2><span><span><strong><strong><span><span><strong>什麼活動？</strong></span></span></strong></strong></span></span></h2><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span>參與積分榜活動，邀請好友註冊並使用 BaiduComate，即可輕鬆贏取豐厚的京東卡獎勵。</span></span></span></span></p><h2><span><span><strong><strong><span><span><strong>活動怎麼玩？</strong></span></span></strong></strong></span></span></h2><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><strong><span><span><strong>一、活動時間：</strong></span></span></strong></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span>2023 年 12 月 26 日至 2023 年 12 月 31 日。</span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><strong><span><span><strong>二、活動內容：</strong></span></span></strong></span></span></p><ol><li><span><span>登錄 Comate（</span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcomate.baidu.com%2F" target="_blank"><u><span><span style="color:#3f83f8"><u><span>https://comate.baidu.com/</span></u></span></span></u></a><span><span>)，進入個人中心，分享您的專屬鏈接給好友，邀請好友註冊並使用 Comate；</span></span></li><li><span><span>您可以通過分享您的專屬鏈接或生成您的專屬二維碼向您的好友分享；</span></span></li></ol><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><img alt="" height="166" src="https://static.oschina.net/uploads/space/2023/1226/185627_hIls_4252687.png" width="700" referrerpolicy="no-referrer"></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><img alt="" height="149" src="https://static.oschina.net/uploads/space/2023/1226/185655_vMNA_4252687.png" width="700" referrerpolicy="no-referrer"></p><p><span><span>好友通過您的鏈接使用 Comate 後，您和您的好友將共同獲得 10 積分；</span></span></p><p><span><span>邀請的好友越多，獲得的京東卡獎勵越豐厚，您可在積分榜活動頁查看活動詳情（</span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcomate.baidu.com%2F1%2Factivity" target="_blank"><u><span><span style="color:#3f83f8"><u><span>https://comate.baidu.com/1/activity</span></u></span></span></u></a><span><span>）。</span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><img alt="" height="299" src="https://static.oschina.net/uploads/space/2023/1226/185733_Gean_4252687.png" width="700" referrerpolicy="no-referrer"></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><strong><span><span><strong>三、活動獎勵：</strong></span></span></strong></span></span></p><ol><li><span><span>積分超過 500 分且總排行榜前 20 名，可得 500 京東卡；</span></span></li><li><span><span>積分超過 200 分且總排行榜前 100 名，可得 200 京東卡；</span></span></li><li><span><span>積分超過 100 分且總排行榜前 200 名，可得 100 京東卡；</span></span></li><li><span><span>積分超過 50 分且總排行榜前 400 名，可得 50 京東卡；</span></span></li><li><span><span>其他有積分的用户，可以兑換 Baidu Comate 的使用時長，10 積分可兑換一個月的使用時長；</span></span></li><li><span><span>總排行榜前三且積分超過 500 分的用户，可額外獲得神秘大獎！</span></span></li></ol><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><strong><span><span><strong>四、活動規則：</strong></span></span></strong></span></span></p><ol><li><span><span><span style="color:#1c1d1f">被分享人註冊並使用 Comate 後，分享人和被分享人均加 10 分；</span></span></span></li><li><span><span>活動期間內，邀請的好友數量不設上限；</span></span></li><li><span><span>相同積分的用户，按照最後一名被邀請用户的使用先後順序進行排序；</span></span></li><li><span><span>京東卡將在活動結束後 15 個工作日內發放至用户賬户；</span></span></li><li><span><span><span style="color:#1c1d1f">更多規則詳見 Comate 官網活動頁</span></span></span><span><span>。</span></span></li></ol><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span>與好友一起探索 Comate 的無限可能，讓智能雲技術為您的代碼添色。現在，就通過您的專屬鏈接邀請好友加入 Comate，共同開啓智能新篇章！</span></span></span></span></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 26 Dec 2023 10:58:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272829</guid>
            <link>https://www.oschina.net/news/272829</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[信通院發佈《人工智能倫理治理研究報告（2023 年）》]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff; color:rgba(0, 0, 0, 0.9)">2023 年 12 月 26 日，中國信息通信研究院（簡稱「中國信通院」）在「2024 中國信通院 ICT 深度觀察報告會」科技倫理治理分論壇上發佈了《人工智能倫理治理研究報告（2023 年）》。</span></p><p style="margin-left:0; margin-right:0">報告在總結人工智能倫理治理有關概念和特點的基礎上，對人工智能生成內容、自動駕駛、智慧醫療三個典型應用場景的倫理風險進行分析，並結合國內外人工智能倫理治理實踐，提出人工智能倫理治理的四點展望，以期為更加廣泛深入的討論提供參考。</p><p style="margin-left:0; margin-right:0"><img alt="" height="424" src="https://oscimg.oschina.net/oscnet/up-c579b9404f2057e3d9c3aea95b7c78ca41e.png" width="300" referrerpolicy="no-referrer"></p><h4 style="margin-left:0px; margin-right:0px"><strong>報告核心觀點</strong></h4><p style="margin-left:0; margin-right:0"><strong>1. 人工智能倫理風險挑戰亟需關注</strong></p><p style="margin-left:0; margin-right:0">目前，人工智能引發的倫理挑戰已從理論研討變為現實風險。在技術研發階段，由於人工智能技術開發主體在數據獲取和使用、算法設計、模型調優等方面還存在技術能力和管理方式的不足，可能產生偏見歧視、隱私泄露、錯誤信息、不可解釋等倫理風險。在產品研發與應用階段，人工智能產品所面向的具體領域、人工智能系統的部署應用範圍等將影響人工智能倫理風險程度，並可能產生誤用濫用、過度依賴、衝擊教育與就業等倫理風險。對於人工智能生成內容、自動駕駛、智慧醫療等典型應用場景，需要根據風險發生頻率、影響範圍、影響程度等評估主要風險。</p><p style="margin-left:0; margin-right:0"><strong>2. 人工智能倫理治理是應對人工智能風險的有效機制</strong></p><p style="margin-left:0; margin-right:0">人工智能倫理治理是人工智能治理的重要組成部分，是應對人工智能風險挑戰的主要機制。人工智能倫理治理把以人為本、公平非歧視、透明可解釋、人類可控制、責任可追溯、可持續發展等作為核心內容，並根據人工智能技術發展和應用情況，及時提出調整人與人工智能關係和應對人工智能風險的方法。</p><p style="margin-left:0; margin-right:0"><strong>3. 各國積極推進人工智能倫理治理</strong></p><p style="margin-left:0; margin-right:0">為應對人工智能技術應用帶來的風險，世界各國積極推動人工智能倫理國際治理合作。各國政府通過出台人工智能倫理原則、發佈人工智能倫理治理指引、提供技術治理工具等加強本國本地區的人工智能倫理治理監管。我國通過積極完善人工智能倫理制度規範，探索人工智能倫理治理技術化、工程化、標準化落地措施，引導行業自律，加強人工智能治理國際合作等舉措推動人工智能向善發展。</p><p style="margin-left:0; margin-right:0"><strong>4. 人工智能倫理治理四點展望</strong></p><p style="margin-left:0; margin-right:0">在治理理念方面，堅持促進創新與防範風險相統一，統籌發展與安全。在治理舉措方面，健全多學科多主體合作、探索分類分級治理、推動治理技術工具開發。在能力建設方面，重視科研人員、開發人員、社會公眾等各主體科技倫理素養提升。在開放合作方面，積極參與全球人工智能倫理治理合作，推動人工智能技術造福人類。</p><hr><p style="margin-left:0; margin-right:0">完整報告地址：<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.caict.ac.cn%2Fkxyj%2Fqwfb%2Fztbg%2F202312%2Ft20231226_468983.htm" target="_blank">http://www.caict.ac.cn/kxyj/qwfb/ztbg/202312/t20231226_468983.htm</a></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 26 Dec 2023 09:23:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272816</guid>
            <link>https://www.oschina.net/news/272816</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[2023 年各編程語言中最流行的許可證]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">OSI 所屬的&nbsp;Voices of Open Source 發佈了一篇「<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.opensource.org%2Fthe-most-popular-licenses-for-each-language-2023%2F" target="_blank">2023 年每種語言中最流行的許可證</a>」的文章，揭示了每種編程語言生態系統中的許可偏好，並強調了清晰和標準化許可證對開發人員、組織和整個開源社區健康的重要性。</span></p><p><span style="color:#000000">文章指出，MIT 和 Apache 2.0 許可證在不同的編程語言和包管理器中最為普遍。JavaScript 社區通常傾向於使用 MIT 許可證，Python 開發人員則偏愛 Apache 2.0。ISC 許可證以其簡單性和寬容性在 JavaScript 社區中頗受歡迎。BSD 許可證（包括 3-Clause 和 2-Clause）保持穩定但相對較低的採用率。GPL 也有一定的影響力，但落後於 MIT 和 Apache 2.0。</span></p><h4><strong><span style="color:#000000">Javascript (npm)</span></strong></h4><p><span style="color:#000000">JavaScript 的 npm 軟件包管理器中，大多數組件採用的是 MIT 許可（53%），其次是 Apache 2.0（14.76%）和 ISC（10.48%）。ISC 許可證由 Internet Systems Consortium 發佈，雖然在 JavaScript 項目中很流行，但在其他編程語言中使用得並不多。小部分項目沒有許可證（8%）或或是沒有 SPDX 識別的許可證/無聲明（5.49%）。</span></p><p><span style="color:#000000"><img alt="" height="275" src="https://oscimg.oschina.net/oscnet/up-6f1b2371f321720b27dc902d1b1b82de159.png" width="500" referrerpolicy="no-referrer"></span></p><h4><strong><span style="color:#000000">.NET (Nuget)</span></strong></h4><p><span style="color:#000000">而在 .NET 的包管理器 Nuget 中，最令人擔憂的點在於，它的大部分組件要麼沒有許可證（26.76%），要麼被認定為"NOASSERTION"（31.95%）。使用 MIT 或 Apache 2.0 許可的比例分別為 21.55% 和 13.37%。</span></p><p><span style="color:#000000"><img alt="" height="286" src="https://oscimg.oschina.net/oscnet/up-9a25d804c9c72bfbf419888c776e096bf8c.png" width="500" referrerpolicy="no-referrer"></span></p><h4><strong><span style="color:#000000">Java (Maven)</span></strong></h4><p><span style="color:#000000">Maven (Java 的包管理器) 中的絕大多數組件都使用 Apache 2.0 許可證（69.18%），使用 MIT 的組件僅佔 7.4%。此外，被歸類於 NOASSERTION 的組件佔比為 14.75%。</span></p><p><span style="color:#000000"><img alt="" height="283" src="https://oscimg.oschina.net/oscnet/up-7beb2e608f1e7aed00f71e9ef72300b8bf4.png" width="500" referrerpolicy="no-referrer"></span></p><h4><strong><span style="color:#000000">Python (Pypi)</span></strong></h4><p><span style="color:#000000">在 Python 的包管理器 Pypi 中，MIT 和 Apache 2.0 許可下的組件佔主導地位，分別為 29.14% 和 23.98%。BSD 2-Clause 和 GPL 3.0 下的組件分別佔 6.25% 和 6.11%，還有相當一部分組件沒有許可（23.69%）。</span></p><p><span style="color:#000000"><img alt="" height="282" src="https://oscimg.oschina.net/oscnet/up-8a891bd50b9f1b941ece9f07d7b367b19c3.png" width="500" referrerpolicy="no-referrer"></span></p><h4><strong><span style="color:#000000">Ruby（Gem）</span></strong></h4><p><span style="color:#000000">Gem（Ruby 的包管理器）中絕大多數組件都使用 MIT 許可證 (63.11%)。其次是 Apache 2.0 和 BSD 3-Clause 許可證，分別佔 8.22% 和 6.66%。</span></p><p><span style="color:#000000"><img alt="" height="273" src="https://oscimg.oschina.net/oscnet/up-992730f13a25f44a6e27261837dd4cf2451.png" width="500" referrerpolicy="no-referrer"></span></p><h4><strong><span style="color:#000000">PHP（Composer）</span></strong></h4><p><span style="color:#000000">在 PHP 的包管理器 Composer 中，MIT 許可證非常受歡迎，佔 64.37%。BSD 3-Clause 和 Apache 2.0 下的項目分別佔 5.72% 和 3.92%。</span></p><p><span style="color:#000000"><img alt="" height="277" src="https://oscimg.oschina.net/oscnet/up-924aba8c7c052842a7bd363e09566d1e4cb.png" width="500" referrerpolicy="no-referrer"></span></p><h4><strong><span style="color:#000000">Go</span></strong></h4><p><span style="color:#000000">Apache 2.0 和 MIT 許可證在 Go 中佔主導地位，分別為 32.49% 和 20.1%。很大一部分 Go 組件沒有許可證（29.67%）。</span></p><p><span style="color:#000000"><img alt="" height="293" src="https://oscimg.oschina.net/oscnet/up-ff275f5eef822cdecae73540f0717f58d65.png" width="500" referrerpolicy="no-referrer"></span></p><h4><strong><span style="color:#000000">Rust（Crate）</span></strong></h4><p><span style="color:#000000">對於 crate（Rust 包管理器），使用 MIT 和/或 Apache 2.0 的項目佔主導地位，合計佔比 83.52%。</span></p><p><span style="color:#000000"><img alt="" height="275" src="https://oscimg.oschina.net/oscnet/up-e115fe1f099762a3b124de0f891eddaaae0.png" width="500" referrerpolicy="no-referrer"></span></p><hr><p><span style="color:#000000">總的來説，雖然市場上已經存在一些成熟的許可證供選擇，但仍有<span style="background-color:#ffffff">許多開源組件未指定許可證或標記為 SPDX 「NOASSERTION」。文章指出， 這種模糊性致使此類組件的使用也存在很多不確定性，</span><span style="background-color:#ffffff">可能會阻礙協作、</span><span style="background-color:#ffffff">並給開發者造成法律和安全風險。</span></span></p><p><span style="color:#000000">解決<span style="background-color:#ffffff">無許可證組件的</span>問題對於開源社區的持續健康發展至關重要。開發人員、組織和整個社區都受益於清晰和標準化的許可。它不僅促進協作，還確保法律合規性並保護貢獻者的知識產權。此外，它還可以幫助開發人員跟蹤可能存在漏洞的組件。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 26 Dec 2023 07:35:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272790/the-most-popular-licenses-for-each-language-2023</guid>
            <link>https://www.oschina.net/news/272790/the-most-popular-licenses-for-each-language-2023</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[如何在手機上使用 Linux＆如何培養多路徑開發思維？2023 年 12 月 WHLUG 回顧]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>2023 年 12 月 23 日下午，由 deepin（深度）社區主辦的武漢 Linux 用户組沙龍（WHLUG）成功舉行，20 餘名 Linux 愛好者齊聚一堂，10 餘名外地夥伴線上參與，共同度過 2023 年最後一場 WHLUG。</p><p>現在，一起來回顧本次年末收官活動的精彩瞬間吧！</p><h1>關於 Droidian 發行版的種種</h1><p>本次沙龍上，archiemeng 為大家分享了 Droidian 發行版的相關內容並進行了現場演示。Droidian 是一個基於 GNOME 的 Linux 手機端發行版，在提供基礎 Linux 手機應用的同時，對桌面應用有較完整的適配，且通過 Waydroid 對 Android 應用進行了一定的支持。</p><p>更重要的是，Droidian 對於上述兩種應用均能流暢運行，是一個可玩性極強的發行版。目前社區正在積極踴躍開發中，感興趣的用户可以自行去官網獲取刷機教程，也可以參與移植和開發等工作。</p><p>Droidian 官方網站：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdroidian.org%2F" target="_blank">https://droidian.org/</a></p><p style="text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-1f2dc7ca1122468904def7e4bc5cc3eb82e.jpg" referrerpolicy="no-referrer"></p><h1>畢業季，引用模塊化思路加載開源人生&nbsp;</h1><p>根據之前的話題收集，我們發現很多學生對於如何參與開源社區感到迷茫，所以在本次活動中，ziggy 便從實際經驗及當前就業背景出發，分享了學生時期如何參與開源社區併發揮自己的價值，以及如何引用模塊化思維在學業或職場中不斷打怪升級成長等話題。</p><p>ziggy 通過開源生態適配中的實際案例和項目經驗，生動形象地向學生們展示了掌握多領域知識的重要性。在討論過程中更是充分發揮了社區力量，大家通過經驗交流，為某歷史遺留問題提供瞭解決方案。此次分享不僅給學生們提供了實用的指導，也激發了他們對於參與開源社區的熱情和信心。</p><p style="text-align:center"><img height="615" src="https://oscimg.oschina.net/oscnet/up-e43d3f96df95ec88fcc0273bac9446650a9.png" width="1046" referrerpolicy="no-referrer"></p><p>值得一提的是，一位在 20 年前就參與 WHLUG 的資深用户也在本月來到現場，併為大家分享了經驗和心得。他表示，很多人在開源社區中提問時還略顯羞澀，希望大家能夠放下顧慮，樹立正確的社區參與心態，勇敢參與社區活動，共同推動開源社區的繁榮發展。</p><p style="text-align:center"><img height="683" src="https://oscimg.oschina.net/oscnet/up-cbb21d8467cf3f73da16231cabd999dbe48.png" width="913" referrerpolicy="no-referrer"></p><h1>小彩蛋</h1><p>WHLUG 自 1997 年創建以來，一直專注開源技術討論和分享，我們致力於為武漢的 Linux 愛好者創建一個不受外界幹擾的討論氛圍，讓每一個技術愛好者回歸技術本質。</p><p>我們誠摯地歡迎<strong>武漢地區的學生/開源愛好者</strong>加入，共同參與到 WHLUG 活動的策劃和組織中，同時，熱忱歡迎<strong>各高校社團</strong>與我們攜手，為構建武漢最純粹的 Linux 技術圈和推動本地開源發展貢獻力量。</p><p>若您對參與活動共建感興趣，<strong>請點擊<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwj.qq.com%2Fs2%2F13816139%2F8b53%2F" target="_blank">「此處」</a>或掃碼填寫報名錶</strong>，我們的工作人員將會與您取得聯繫，期待與您一同開啓這段激動人心的開源之旅！</p><p style="text-align:center"><img height="280" src="https://oscimg.oschina.net/oscnet/up-c7b73e05cc3a7a94a2d131d1c0fea354f78.png" width="290" referrerpolicy="no-referrer"></p><div><div><p><strong>什麼是 WHLUG：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.deepin.org%2Fzh%2Fwelcome-to-whlug%2F" target="_blank">武漢 LUG – 深度科技社區</a></strong></p><p><strong>瞭解 deepin：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.deepin.org%2Findex%2Fzh" target="_blank">deepin - 基於 Linux 的開源國產操作系</a></strong></p></div></div></div>
                                    ]]>
            </description>
            <pubDate>Tue, 26 Dec 2023 07:03:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272782</guid>
            <link>https://www.oschina.net/news/272782</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Kuasar 成為 CNCF 官方項目，探索容器運行時新紀元]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>本文分享自華為雲社區《<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbbs.huaweicloud.com%2Fblogs%2F418445%3Futm_source%3Doschina%26utm_medium%3Dbbs-ex%26utm_campaign%3Dother%26utm_content%3Dcontent" target="_blank" rel="nofollow">Kuasar 成為 CNCF 官方項目，探索容器運行時新紀元！</a>》，作者：雲容器大未來。</p><p>北京時間 12 月 20 日，雲原生計算基金會（CNCF）正式接納多沙箱容器運行時項目<span>&nbsp;</span><strong>Kuasar</strong>（https://github.com/kuasar-io/kuasar）。Kuasar 的加入，極大地推動了雲原生領域容器運行時技術的探索、創新和發展。</p><p><img alt="11.png" src="https://bbs-img.huaweicloud.com/blogs/img/20231222/1703228593906841756.png" referrerpolicy="no-referrer"></p><p>作為 CNCF 首個多沙箱容器運行時項目，Kuasar 於 2023 年 4 月在 KubeCon + CloudNativeCon Europe 上由華為雲、中國農業銀行以及 openEuler 社區、WasmEdge 社區和 Quark Containers 社區聯合發起。Kuasar 融入了各企業和社區在容器運行時領域的前沿探索、技術積累和生產實踐，開源至今受到業界的廣泛關注和支持，已收穫 900 多個 GitHub Star 和 70 多個 Fork，數十位來自外部企業、高校的開源愛好者參與開發貢獻和積極落地應用，Kuasar 正以開源創新的姿態促進雲原生產業發展。</p><div><div><div><div><div><p><strong>「WebAssembly 正在快速成為雲原生技術棧的一個關鍵部分，Kuasar 深度集成了高性能、輕量級的 WasmEdge 沙箱，Kuasar 的加入使得 WebAssembly 生態和 CNCF 生態聯繫更加緊密，未來 WasmEdge 和 Kuasar 將共同推動在大模型、邊緣計算和函數計算等領域的發展。」</strong><strong>—— WasmEdge 項目創始人 Michael Yuan</strong></p></div></div></div></div></div><div><div><div><div><div><p><strong>「openEuler 社區在 Kuasar 項目發佈之初就率先完成與 Kuasar 多沙箱生態的對接，推出基於 iSulad + Kuasar + StratoVirt 的極速輕量安全容器解決方案。未來 openEuler 社區將繼續深化與 CNCF 社區項目的合作，為用户提供更輕量、更安全、更多樣的容器化底座。」—— openEuler 技術委員會主席，胡欣蔚</strong></p></div></div></div></div></div><div><div><div><div><div><p><strong>「Kuasar 項目融入了華為雲在容器運行時領域多年的積累，結合了社區合作伙伴的實踐經驗。成為 CNCF 官方項目，表明了 Kuasar 社區開放治理的決心，致力於為企業和開發者提供廠商中立、多方協作的開放環境，促進各種沙箱技術的商用成熟，為用户帶來極致體驗。」—— CNCF 官方大使，華為云云原生開源團隊負責人，王澤鋒</strong></p></div></div></div></div></div><div><div><div><div><div><p><strong>「雲原生場景多樣化促進了多種沙箱技術的蓬勃發展，沙箱技術接入北向生態成為普遍需求，Kuasar 推動了 Containerd 中沙箱技術標準的統一，提供了多種沙箱技術實現，為 CNCF 的容器運行時板塊注入了新鮮活力。」—— CNCF 官方大使 Containerd 社區維護者，蔡威</strong></p></div></div></div></div></div><span id="OSC_h2_1"></span><h2>Kuasar 項目介紹</h2><p>為了滿足企業在雲原生場景下的訴求，業界出現了多種沙箱容器隔離技術。然而，應用雲原生的沙箱技術仍面臨挑戰。一方面，各類雲原生場景對沙箱提出更高要求，單一沙箱無法同時滿足用户雲上業務對安全隔離、極速低噪、標準通用等多個維度的要求，企業面臨雲原生業務場景全覆蓋問題；另一方面，支持多類沙箱帶來運維壓力顯著上升，當前業界沙箱技術對接容器運行時的實現缺乏統一開發框架，因此關鍵日誌、重要事件、沙箱管理邏輯等均存在差異，新引入沙箱的同時運維壓力陡增。</p><p>Kuasar 在保留傳統容器運行時功能的基礎上，與 Containerd 社區一起推動新的沙箱接口統一標準，並通過全面 Rust 化以及優化管理模型框架等手段，進一步降低管理開銷，簡化調用鏈路，靈活擴展對業界主流沙箱技術的支持。此外，通過支持多安全沙箱共節點部署，Kuasar 可以充分利用節點資源、降本增效，為用户提供更安全高效的沙箱場景解決方案。</p><p><img alt="12.png" src="https://bbs-img.huaweicloud.com/blogs/img/20231222/1703228609750179875.png" referrerpolicy="no-referrer"></p><p>▲ Kuasar 項目全景圖</p><p>南向沙箱方面，Kuasar 已支持基於輕量級虛擬化技術的安全容器沙箱（Cloud Hypervisor、Qemu、StratoVirt），基於新興的 WebAssembly 沙箱（WasmEdge、Wasmtime），基於進程級虛擬化的 App Kernel 沙箱（Quark）以及基於內核的原生普通容器沙箱（runC）；北向引擎方面，Kuasar 已與 Containerd 聯合構建最新的沙箱接口標準，並共同推動該標準在 Containerd v2.0 版本的完整實現。此外，輕量級容器引擎 iSulad 項目也已經完成與 Kuasar 項目的深度集成，支持在 openEuler 23.09 創新版本上一鍵部署。</p><span id="OSC_h2_2"></span><h2>未來可期</h2><p>此次 CNCF 正式將 Kuasar 接納為官方項目，將極大促進 Kuasar 上下游社區生態構建及合作。Kuasar 將持續探索雲原生容器運行時領域技術創新，在企業數字化、雲原生轉型過程中發揮作用，讓基於 Kuasar 的多沙箱容器運行時方案融入更廣泛的雲原生技術生態。</p><p>作為 CNCF 亞洲唯一創始成員、白金會員，華為雲在 CNCF 貢獻量、Kubernetes 社區和 Istio 社區的代碼貢獻量持續多年穩居亞洲第一，已向 CNCF 貢獻了業界首個雲原生邊緣計算項目 KubeEdge、首個雲原生批量算力項目 Volcano、首個多雲容器編排項目 Karmada 等多個重量級雲原生開源項目，並持續開源 Kurator、Kappital、Kmesh 等創新項目，與全球雲原生社區共同發展。</p><span id="OSC_h3_3"></span><h3>Kuasar 社區技術交流地址</h3><p>Kuasar 官網：https://kuasar.io</p><p>項目地址：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkuasar-io%2Fkuasar" rel="nofollow" target="_blank">https://github.com/kuasar-io/kuasar</a></p><p>Twitter:<span>&nbsp;</span>https://twitter.com/Kuasar_io</p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbbs.huaweicloud.com%2Fblogs%3Futm_source%3Doschina%26utm_medium%3Dbbs-ex%26utm_campaign%3Dother%26utm_content%3Dcontent" rel="nofollow" target="_blank"><strong>點擊關注，第一時間瞭解華為雲新鮮技術~</strong></a></p><p>&nbsp;</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 26 Dec 2023 03:42:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/4526289/blog/10412251</guid>
            <link>https://my.oschina.net/u/4526289/blog/10412251</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[雲原生週刊：Karmada 成為 CNCF 孵化項目]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h2>開源項目推薦</h2><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Femberstack%2Fkubernetes-reflector" target="_blank">kubernetes-reflector</a></h3><p>Reflector 是一個 Kubernetes 的插件，旨在監視資源（secrets 和 configmaps）的變化，並將這些變化反映到同一命名空間或其他命名空間中的鏡像資源中。</p><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsubstratusai%2Flingo" target="_blank">Lingo</a></h3><p>Lingo 是適用於 K8s 的 OpenAI 兼容 LLM 代理和自動縮放器。</p><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fflanksource%2Fcanary-checker" target="_blank">canary-checker</a></h3><p>canary-checker 是一個基於 Kubernetes 的本地平台，用於通過被動和主動（合成）機制監控應用程序和基礎架構的健康狀況。</p><h2>文章推薦</h2><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmedium.com%2F%40elementtech.dev%2Fkubernetes-image-proxy-cache-from-minutes-to-milliseconds-fd14173e831f" target="_blank">Kubernetes Harbor 圖像代理緩存 — 從幾分鐘到幾毫秒</a></h3><p>這篇文章介紹瞭如何通過使用 Harbor 作為 Kubernetes 的代理緩存來提高容器鏡像的拉取速度。文章首先解釋了 Kubernetes 中容器鏡像的拉取過程和現有的緩存機制的侷限性，然後介紹了 Harbor 作為一個 CNCF 項目的作用，並詳細説明瞭 Harbor 的 Pull Through Proxy Cache 機制。該機制可以在本地緩存中存儲常用的鏡像，當節點需要拉取鏡像時，可以直接從本地緩存中獲取，減少了網絡延遲和帶寬消耗。文章還介紹瞭如何在 Kubernetes 上安裝和配置 Harbor，並提供了使用 Harbor 的示例命令。最後，文章介紹瞭如何通過使用 Harbor Cache Mutating Webhook 來自動讓 Kubernetes 使用代理緩存。總體而言，這篇文章詳細介紹瞭如何通過 Harbor 實現快速的鏡像緩存，提高容器化環境中的部署效率。</p><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmedium.com%2F%40sushantkapare1717%2Fhelm-vs-kustomize-in-kubernetes-cc063bbb4b0e" target="_blank">Kubernetes 中的 Helm 與 Kustomize</a></h3><p>這篇文章比較了 Helm 和 Kustomize 這兩個用於管理 Kubernetes 清單文件的工具。文章首先介紹了 Kubernetes 在現代 IT 基礎架構中作為容器編排和管理的事實標準，並指出在規模化部署應用程序時，管理複雜配置和清單文件變得至關重要。然後詳細介紹了 Helm 和 Kustomize 這兩個工具的特點和優勢。Helm 是一個用於簡化應用程序部署和管理的 Kubernetes 包管理器，具有模板化、可重用性、版本管理和社區支持等優點。Kustomize 是另一個用於自定義 Kubernetes 清單文件的工具，採用"patch"的方法，支持聲明性修改現有清單文件和配置覆蓋。文章還提供了使用 Helm 和 Kustomize 的示例，並對它們進行了比較，包括模板化與補丁應用、靈活性和學習曲線等方面。最後，文章強調了根據具體需求和偏好選擇適合的工具的重要性，並鼓勵讀者保持對最新工具和最佳實踐的瞭解，以提高部署效率。</p><h2>雲原生動態</h2><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fthenewstack.io%2Fkarmada-finally-brings-multicloud-control-to-kubernetes%2F" target="_blank">Karmada 成為 CNCF 孵化項目</a></h3><p>日前，雲原生計算基金會的技術監督委員會 (TOC) 投票決定接受 Karmada 作為 CNCF 孵化項目。</p><p>Karmada 通過一組 Kubernetes 原生 API 和高級調度功能，提供了一種跨不同雲提供商運行 Kubernetes 集羣的方法。它不需要對應用程序本身進行任何更改。</p><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdevclass.com%2F2023%2F12%2F12%2Fdocker-buys-atomicjar-to-integrate-container-based-test-automation%2F" target="_blank">Docker 購買 AtomicJar 以集成基於容器的測試自動化</a></h3><p>Docker 購買了 AtomicJar 及其 Testcontainer 項目，為 Docker 提供了更好的測試方案，但引發了對未來許可成本和對其他容器運行時支持的擔憂。</p><p>Docker 首席執行官 Scott Johnston 表示，添加 TestContainers 使 Docker 的開發人員工作流程更加完整，為涵蓋構建、驗證、運行、調試和共享的現有功能添加了測試。</p><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.cncf.io%2Fblog%2F2023%2F12%2F21%2Fciliums-2023-annual-report%2F" target="_blank">Cilium 2023 年年度報告</a></h3><p>2023 年對於 Cilium 來説是一個重要的里程碑，被稱為 Cilium 畢業年。今年，我們看到 Cilium 生態系統在貢獻和採用方面都取得了顯着增長。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcilium%2Fcilium.io%2Fblob%2Fmain%2FAnnual-Reports%2FCilium%2520Annual%2520Report%25202023.pdf" target="_blank">2023 年 Cilium 年度報告</a>旨在強調這些進步，重點關注 Cilium 貢獻者和最終用户社區的增長和活動。</p><p>該報告通過項目里程碑和承諾等數字數據以及社區領導者、最終用户和貢獻者的個人見解，全面介紹了社區的健康狀況。它深入探討了幾個關鍵領域：Cilium 畢業進度、貢獻者增長、主要發佈亮點、2023 年 Cilium 用户調查的反饋、Cilium 在生產環境中的使用情況、社區參與和報價、社區活動以及 2024 年項目方向。</p><blockquote><p>本文由博客一文多發平台 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopenwrite.cn%3Ffrom%3Darticle_bottom" target="_blank">OpenWrite</a> 發佈！</p></blockquote></div>
                                    ]]>
            </description>
            <pubDate>Tue, 26 Dec 2023 03:41:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/4197945/blog/10398476</guid>
            <link>https://my.oschina.net/u/4197945/blog/10398476</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Fedora 40 計劃統一 /usr/bin 和 /usr/sbin]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>早在多年前，Fedora 曾合併了 /bin 和 /usr/bin。時至今日，針對 Fedora 40&nbsp;提交的一項最新更改<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ffedoraproject.org%2Fwiki%2FChanges%2FUnify_bin_and_sbin" target="_blank">提案</a>則提出，統一其&nbsp;/usr/bin&nbsp;和&nbsp;/usr/sbin&nbsp;位置；因為&nbsp;<span style="background-color:#ffffff; color:#121212">/bin 和 /sbin 之間的劃分已不再有用，且無人使用。</span></p><p>提案解釋稱：</p><blockquote><p>/usr/sbin 目錄成為 bin 的 symlink，這意味着 /usr/bin/foo 和 /usr/sbin/foo 等路徑指向同一個地方。/bin 和 /sbin 已經是 /usr/bin 和 /usr/sbin 的 symlink，因此 /bin/foo 和 /sbin/foo 實際上也指向同一個地方。/usr/sbin 將從默認的 $PATH 中刪除。</p></blockquote><p><img height="219" src="https://oscimg.oschina.net/oscnet/up-ed7d7efd2d93feaf5de7d017798772f87b4.png" width="700" referrerpolicy="no-referrer"></p><p>該變更提案認為這對 packagers 和 end-users 來説都是一種簡化，且 Fedora 將與 Debian 等其他 Linux 發行版更加兼容。</p><p><strong><span><span><span style="color:#373a3c"><span><span><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span><span><span>對 Fedora 的好處：</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></p><ul><li>Packagers&nbsp;不必考慮是將程序安裝在<code>%_bindir</code>還是<code>%_sbindir</code>。</li><li>用户不必考慮程序是安裝在<code>%_bindir</code>還是<code>%_sbindir</code>.</li><li>Fedora 與其他發行版變得更加兼容。「例如，我們有 /sbin/ip，而 Debian 有 /bin/ip；我們有 /bin/chmem 和 /bin/isosize，而 Debian 有 /sbin/chmem 和 /sbin/isosize、 我們還有 /sbin/{addpart,delpart,lnstat,nstat,partx,ping,rdma,resizeepart,ss,udevadm,update-alternatives}，而 Debian 的這些都在 /bin 下，等等。」</li><li>Fedora 與 Arch 更加兼容，Arch 於幾年前進行了合併。</li><li><code>execvp</code>和相關函數遍歷的目錄更少。這對於速度可能並不重要，但在查看日誌或<code>strace</code>輸出時是一個很好的簡化。</li></ul><p><strong><span><span><span style="color:#373a3c"><span><span><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span><span><span>升級/兼容性影響</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></p><p style="margin-left:0; margin-right:0; text-align:start"><span><span><span><span style="color:#373a3c"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>對於用户來説，這種變化基本上是不可見的。在過渡過程中，兩套路徑都應正常工作，用户在<code>$PATH</code>中應同時擁有這兩個目錄。一旦過渡完成，兩套路徑都將正常工作，但用户在<code>$PATH</code>中只能看到<code>/usr/bin</code>。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p>目前，該變更提案仍處於擬議狀態，需得到 FESCo 的批准後才能應用在四月發佈的 Fedora 40 中。</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 26 Dec 2023 03:28:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272754/fedora-40-unify-usr-bin-sbin</guid>
            <link>https://www.oschina.net/news/272754/fedora-40-unify-usr-bin-sbin</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[上雲？下雲？降本增笑？割韭菜？]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>本月，滴滴崩潰事件鬧得轟轟烈烈，各種離譜派單層出不窮，而造成這一混亂的，則是底層出故障的雲。尷尬的是，這已經不是第一次雲崩潰事件了，距離上一次阿里雲事件，還不到一個月。</p><p>一時之間，各種有關「雲」的討論紛紛揚揚：有人眼饞馬斯克的 X 下雲省錢，覺得反正都有風險，還不如自己弄，這樣更可掌控，也更清楚；有人則認為上雲才是未來的趨勢，想要發揮出軟件的最大優勢，上雲更合適。</p><p>那麼，實際操作中，到底是自建雲更安全，還是公有云更有保障？對普通的廠商而言，該怎麼選擇呢？對此，開源中國邀請了前滴滴軟件開發工程師李鶴、AutoMQ 聯合創始人 &amp; CTO 周新宇、前淘寶 DBA 蔣明、磐吉雲數 CEO 馮若航、公眾號《瑞典馬工》主理人馬工，一起來討論。</p><p>&nbsp;</p><span id="OSC_h1_1"></span><h1>上雲到底有沒有必要？雲是不是在割韭菜？</h1><p><strong>正方：周新宇 speaking ——</strong></p><p>我個人大概是在 16 年就加入阿里巴巴巴的中間件團隊了，服務了很多客户。從我個人的經驗來講：</p><p><strong>第一，沒有云之前，硬件出了問題，解決的門檻很高。</strong>阿里內部上雲之前，因為消息中間件集羣規模很大，硬件它總是在出問題，比如説因為網卡問題導致了 TCD 重視率很高，硬盤出現局部的不可寫；比如服務器某個硬件温度過高，導致一些局部的節點不可用。好在阿里有專業的團隊幫忙解決，但這在小企業就很難負擔了。</p><p><strong>第二，公有云比專有云效率高。</strong>像我們專門做交付，交付完才是第一步，後面有很多的運維工作，這些運維工作，如果我們遠程去做的話，效率比較低，如果去駐廠的話，成本又比較高。公有云的模式，通過聚集算力和統一標準，帶來了很多效率上的提升。</p><p><strong>第三，雲計算能加速業務的創新，提高社會運轉效率。</strong>像在線教育行業，幾年前，基本上都利用了公有云的優勢來快速進行業務的創新。如果沒有云計算，如果不上雲，這些完全不可能發生。還有疫情期間的遠程會議，一定程度上保障了社會各方面的正常運轉。背後的釘釘這些企業軟件，也都是雲計算在提供算力。</p><p>過去，大部分企業還是以雲託管的方式上雲為主，基本上就是傳統的軟件架構，通過這個方式進行上雲。但不管怎麼樣，一定程度上解決了效率和創新問題。今天在降本增效的浪潮下，企業用雲，可能不能暴力地照搬以前的架構了，架構需要面向雲的能力去設計、去優化，把雲原生的能力發揮出來。</p><p>&nbsp;</p><p><strong>反方：馮若航 speaking ——</strong></p><p>我比較喜歡用實打實的數據來定量分析雲。我的觀點是：在降本增效成為主旋律的大背景下，對於有一定規模的雲上企業來説，下雲自建是一個非常經濟務實的選項。我認為公有云它是有適用光譜的，絕對不是他們宣稱的數字化萬金油。不在這個光譜範圍內的業務，如果選擇上雲，或者是留在雲上，那就是被割韭菜了。</p><p><strong>我這有歪詩一首：世人常道雲上好，託管服務煩惱少。我言云乃殺豬盤，溢價百倍實厚顏。賽博地主搞壟斷，坐地起價剝血汗。運維外包嫖開源，租賃電腦炒概念。</strong></p><p>公有云的商業模式概括起來就是一個事兒：租——租服務器租帶寬租磁盤租運維，這跟租房沒有什麼本質的區別，自建我們就可以類比為買房。那麼租房還是買房的決定性因素是什麼？我認為是租售比。房子的租售比一般在幾百一個月，那大家買房可能要掂量。那麼，服務器的租售比、雲算力的租售比一般在半年左右使用費=購買價格。雲磁盤的租售比就更離譜了，只有十幾天到一個月。你用一塊雲盤十幾天就能買下來，你用一台雲服務器，六個月就能把它買下來，那麼你為什麼要把一個業務跑在這租的東西上，而不是直接把它買下來？如果你的業務生命週期超過六個月，你可以考慮把它買下來，而不是租。</p><p>為什麼雲的價格這麼貴？我認為根本原因在硬件上。硬件遵循着摩爾定律在指數增長，成本在指數下降，而這個指數變化並沒有在公有云的價格上反映出來，所以公有云從最開始的普惠基礎設施，發展到今天變成了一個殺豬盤。它的資源租賃價格已經達到了自建單價的幾十倍上百倍，堪稱終極的成本刺客。</p><p>這也引發了一些新的變化，比如説馬斯克的 X（Twitter）、DHH 的 37Signals，算了賬單之後，明智地選擇了從雲上搬遷下來，節約了每年上千萬甚至上億的成本。我認為，這些案例對於整個行業，都是非常具有借鑑意義的里程碑標誌。</p><p>所以，<strong>我認為雲的適用光譜就是三件事——小規模，高彈性，全球化。不在這三個場景之內的業務，你選擇留在雲上，就是在為幾倍幾十倍的溢價交智商税、被割韭菜。</strong></p><p>&nbsp;</p><p><strong>正方：周新宇 speaking ——</strong></p><p>我覺得這裏面有一個誤區，<strong>不能拿這個硬件的成本去跟軟件、甚至跟雲服務對比。</strong>比如説馮總以前寫過一篇文章，就是拿本地盤跟 EBS 價格做對比。實際上我認為 EBS 它本身是一個軟件服務，它背後是一整套的完整的分佈式系統，雲服務已經提供了至少三個九的可用性。但本地盤它是硬件，它的故障概率是比較高的，不同的廠商，年化的故障率可能都有差異，有些可能甚至高達 5% 左右。任何硬件壞了都可能導致無法訪問這個本地盤的數據，但在雲上，ECS 也好 EBS 也好，它們都是軟件，你可以理解為它們就是存算分離的。從應用角度來看，ECS、EBS 都是無狀態的，EBS 還解決了一個多副本問題。</p><p>如果今天要用本地盤，肯定得主副本，那數據的複製帶來的網絡帶寬消耗、計算資源消耗、存儲空間消耗，都需要考慮到成本里面。另外，EBS 它後面是一個大規模的存儲節點區域，是能夠應對大量磁盤故障的，也能夠解決這個數據完整性問題。如果真的要拿 EBS 跟本地盤去對比的話，我覺得至少得讓用户去自建一套分佈式存儲系統，跟使用 EBS 做對比，還得把運維的人力成本也考慮進去。這些在自建、規模比較小的情況下，是很難算清楚的。</p><p>&nbsp;</p><p><strong>反方：馮若航 speaking ——</strong></p><p><strong>上雲的成本比自建要高得多。</strong>我自己 15 年的時候在淘寶的 CNZZ，友盟+這個部門算是第一波被推上阿里雲的內部 BU。在上雲之前，我們有一個自己的機房，幾百台服務器，一年所有成本算進去 1000 萬。後來上了阿里雲大數據全家桶數據庫 ODPS 這些東西，每年計算 3000 萬存儲 4000 萬。從 1000 萬變成 7000 萬這件事直接給了我對雲的第一印象，因為阿里雲是手把手出工程師加入我們團隊幫我們改造業務搬上雲的，從原來的每年 1000 萬搬到了後來的每年 7000 萬，而乾的事情，本質上卻還是一模一樣的，都是統計和計算規模，也沒有出現特別的變化。在上完雲之後，我們的效能並沒有出現變化，但是成本卻是實打實地翻了七倍。</p><p>這是我自己親身經歷的一個案例。如果説更有共性的一件事，我覺得可以參考一下 Amazon。AWS 在 2013 年提出的公有云價值，他舉了六個點：彈性、敏捷、全球化出海、將資本支出轉變為運營支出，以及更低的成本、消除重複建設。</p><p>但是，<strong>這些公有云價值主張在 2023 年很多已經不成立了，</strong>甚至説很多已經沒有價值了。我認為還有價值的點就是彈性、agility 和全球化出海，但是這裏面覆蓋的光譜其實並不多，特別是在高價值用户羣體裏面並沒有覆蓋那麼多，更多是小微初創小規模業務會用到這些點。</p><p>比如這個 CAPEX 轉為 OPEX，將資本支出轉為運營支出。這一點，我認為除了對於那種連六個月都活不過的小業務有價值之外，凡是超過六個月，買肯定比租合算了。lower cost 是 AWS 當初相對於這些企業級解決方案來説的，它更便宜。比如説 Oracle 一盒 1 月你要付一萬塊錢，那麼 AWS 上的 RDS 每個月只要 1000 塊錢，是不是很便宜？但是那個時候，你可以説只有我這一家有云，所以我可以用這個價值定價，但現在誰家沒有一個 RDS ？開源的 RDS 管控都出來了。那麼這就變成了成本定價。既然是成本定價，我用雲數據庫加硬件，用這種開源的方案加上硬件 20 塊錢一盒，1 月不比這 1000 塊錢或者 400 塊錢的 RDS 要香嗎？lower cost 這個事兒已經完全變味兒了，現在不是 lower cost 是 higher cost。</p><p>至於消除重複建設這個事，我認為現在開源幹得已經比這好了，各家都有自己的 EC2 VPS，但是 K8s 很明顯一統了這些無狀態服務調度天下，所以我認為在 2023 年公有云的價值就剩下了全球化合規出海，它的適用光譜已經縮小到了小規模業務和高彈性業務和出海業務這三樣。以前我們業界大概有一個規模估算，你在雲上的年消費在 100 到 300 萬這個區間，你就應該考慮下雲了。我認為，隨着資源雲和開源平替的出現，100 萬-300 萬的閾值將會被進一步拉低至 10 萬-30 萬或者 1 萬-3 萬。我認為這件事很有可能會發生，而且正在發生。</p><p>&nbsp;</p><span id="OSC_h1_2"></span><h1>如今上雲還安全嗎？穩定性有多強？</h1><p><strong>反方：馬工 speaking ——</strong></p><p>對於安全，我有很多話説。作為一個軟件工程師最基本的是，你不能把密碼直接寫死、hard code 就編碼到你的代碼裏面，更不能把它提交到 Github 上，這屬於初級的實習生犯的錯誤對不對？</p><p>但是我看了一下，國內的騰訊雲阿里雲和華為雲什麼的，全都教用户把那個 Access ID，編碼到代碼裏面。阿里雲和騰訊雲去年已經改正了，因為我寫文章揭露他們。但是至今為止，華為雲和火山引擎上面的範例裏面還是頁編碼，Access key，這是非常不負責任的一個做法。</p><p>我為什麼説他們是一個草台班子，因為這就相當於修了一座橋，然後把橋的地基給抽掉了，或者説做了一個保險庫，但是把鑰匙給插在那個鎖上了。就這樣還談安全？</p><p>我們可以看一下更近的例子，滴滴出了事故影響了上千萬的出行，它連具體的技術原因都沒提出來，只説我們會改進、我們是一個內部系統。但這個內部系統是什麼？你怎麼改進這個系統？基礎系統是外購的，還是自研的？什麼都沒説，但是北京那個地鐵追尾，人家就成立調查組了，調查組就會有調查結論，就會有限期改正通知書，你得覆盤，你得彙報，監管部門會過來檢查，然後發通知給其他的地鐵公司，讓別人吸取他的教訓。這才是一個真正的工程行業。</p><p>我贊同周新宇説的「雲廠商的故障比自建機房的故障更令人矚目」，但是，<strong>我的機房出故障，我可以得到最全面的信息，雲廠商出故障，我得不到所有的信息，甚至他不給我信息。</strong>比如阿里雲至今也沒有披露技術細節。甚至有一些廠商，他是隱瞞故障，他不會跟你通知，而是想着偷偷修復了你就不知道了。這是一個非常讓我們擔心的問題：沒有透明度。這樣你也無法從業務上規避它，只能求它別出事了。這是非常危險的。</p><p>&nbsp;</p><p><strong>正方：周新宇 speaking ——</strong></p><p>今天雲廠商確實做得不夠好，但這也是會改進的。雲廠商在安全和數據完成這塊都有很大的投入，我們以前做一個架構，要經過很多層的安全架構評審，並不是説啥都不做。當然，雲計算這個技術也好，雲計算這種商業模式也好，它肯定是有進步空間的，不能因為當前雲廠商某些地方還不夠成熟，就完全否定上雲的優勢或者是雲計算的優勢。</p><p>&nbsp;</p><p><strong>正方：蔣明 speaking ——</strong></p><p>尤其是大規模的數據庫用户，還是上雲才能解決需求。像肯德基，阿里雲出事以後，他們就把業務遷到了抖音建的雲上，並沒有遷到自己的機房裏。</p><p>根據我的經驗，自建機房的話，如果只是一兩台機器託管一下的話，還是比較簡單的。但是當機器達到四五千台的時候，那你就會遇到 CPU 的故障、內存的故障和磁盤的故障，這時候，你就會很依賴監控系統。我有過大概 4000 多台物理機的這種機房託管經驗，當時用的是南京的管理系統，也是騰訊的開源軟件，實時監控用的是阿里的監控軟件 SLS，哪個磁盤出故障了，就發給線下的運維，讓他去換。如果全部都是自建的話，根本就做不到。</p><p>像我們現在的政務雲、水電煤背後的技術支持，全部都是在雲上的，政府的政務處理系統，銀行的交易系統也全部都在雲上，如果雲真的一無是處，那我們生活當中，支付寶就沒辦法掃了，錢也付不出去。</p><p>&nbsp;</p><p><strong>反方：馮若航 speaking ——</strong></p><p>我覺得你説的問題非常嚴峻，就是所謂的雲集中的問題。Gartner 最近發佈的 2023 年三季度新興風險報告裏面，<strong>雲集中風險已經連續第二年進入「五大新興風險」綜合榜單，在中國排第三位。</strong>雲集中説的就是雲廠商已成為了新的單點，爆炸半徑極大。阿里雲這一掛，有多少服務宕機了？如果政務雲金融雲這些都跑在阿里雲，那掛了怎麼辦？</p><p>去年阿里雲香港區域故障就導致香港政府很多單位的網站和電子政務不能用。</p><p>所以，<strong>這就是一個下雲的重要 argument ——為了安全性和自主可控。</strong>上雲其實就是放棄了自主可控，放棄了一部分的安全性。你沒有辦法對機密性、完整性去進行任何的驗證，甚至是追索。</p><p>我是搞信息安全的，安全裏面有三個點：CIA ——機密性，數據完整性和可用性。就是不丟，不壞，不宕。但是雲廠商它不給你兜機密性和完整性，它只給你兜可用性，而且是非常遜色的可用性。</p><p>比如説雲 RDS for PostgreSQL，這個雲數據庫的基礎版甚至都沒有望歸檔，也就是説它沒有數據庫 PITR 時間點恢復的能力，一個數據庫服務竟然沒有基礎的時間點恢復能力，我認為這對於一個數據庫用户來説是完全不可接受的。至於機密性，那就更沒法保證了，你甚至沒有辦法去驗證發現任何數據丟失。但要是自建機房，就不會存在這樣的風險。</p><p>&nbsp;</p><span id="OSC_h1_3"></span><h1>中小企業該怎麼選？</h1><p><strong>正方：周新宇 speaking ——</strong></p><p>如果是一家初創企業，那肯定是毫無疑問要上雲，第一天就應該把你的 IT 設施構建在雲上，這樣未來的業務創新或試錯成本都非常低。這是，如果你的企業已經在重度用雲，今天因為成本的問題在考慮是否下雲，那我覺得是要慎重的，因為不管是上雲還是下雲，折騰一次代價是比較大的。所以説更好的方式是去分析雲上的賬單，這裏相對於自建有很大的優勢：在雲上你的一切價格賬單都是透明的，到底貴在哪裏，可以針對性地去降本。</p><p>&nbsp;</p><p><strong>正方：蔣明 speaking ——</strong></p><p>可以用阿里雲、騰訊雲、AWS 的基礎建設能力，比如 ECS 或 OSS，加上第三方的開源軟件，比如 TiDB、AutoMQ，這些軟件，它價格便宜，又能用雲廠商最便宜的基礎能力構建一個企業的自動化 DevOps 系統，讓你用最低的成本，在雲上創業。至於後面企業大了，像馬斯克的 X 公司，那自建雲是最佳的選擇，畢竟成本會更低。</p><p>&nbsp;</p><p><strong>反方：馮若航 speaking ——</strong></p><p>從務實的角度來講，小企業其實是適合雲的，但是你也不要把所有的東西都深度依賴雲。</p><p>第一，你有自建能力，這是你跟雲廠商談價格折扣的最大籌碼！</p><p>第二，優先使用資源雲。什麼是資源雲？像租用它的虛擬機，儘可能的避免使用它的專有服務、被供應商鎖定。</p><p>第三，如果你在雲上非要用這些服務，請避免使用 AKSKIAM 這些讓你陷入供應商鎖定的東西。這些不僅會讓你陷入雲單點故障中，更是會把你綁在一個你下不來的賬單下。</p><p>&nbsp;</p><p><strong>反方：馬工 speaking ——</strong></p><p>我覺得雲是一個操作系統，你用雲就相當於從 Windows 系統切換到 Linux，這需要非常大的努力，需要一個範式轉移。這個轉移路上，你必須要有人帶着你走。但我目前看雲自己也不知道怎麼走。這有一個大膽的估測：</p><p>90% 的雲廠商的員工，沒有自己的雲賬號；</p><p>90% 的雲廠商的員工，沒有考過雲的認證；</p><p>90% 的雲廠商的員工，從來沒有在雲上維護過或者部署過一個生產系統。</p><p>我覺得大家還是謹慎一點，除非雲廠商能夠證明雲計算的價值點，然後給出一個很明確的路徑，不然的話你就不要那麼急躁地為了雲而云。另外，騰訊會議或者釘釘那不是雲，跟微信一樣，只是一個很普通的 Saas 系統，這個跟你要負責任的企業 IT 系統是完全不一樣的。</p><p>&nbsp;</p><p>大家對此怎麼看呢？快留言説説你的經驗吧~</p><p>&nbsp;</p><p>直播回放如下，錯過的趕緊掃碼看看回放吧↓↓↓</p><p style="text-align:center"><img height="255" src="https://oscimg.oschina.net/oscnet/up-0da327351049eec05882b4fa1fb0a6df839.png" width="257" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 26 Dec 2023 02:32:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/6852546/blog/10398475</guid>
            <link>https://my.oschina.net/u/6852546/blog/10398475</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[每日一博 | vivo 容器平台資源運營實踐]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="rich_media_content js_underline_content
                       autoTypeSetting24psection
            " id="js_content"><section style="font-size: 15px;line-height: 1.6;"><section style="margin: 10px 0% 8px;text-align: left;justify-content: flex-start;display: flex;flex-flow: row;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;vertical-align: top;border-left: 3px solid rgb(219, 219, 219);border-bottom-left-radius: 0px;padding-left: 8px;align-self: flex-start;flex: 0 0 auto;"><section style="color: rgba(0, 0, 0, 0.5);font-size: 14px;text-align: justify;" powered-by="xiumi.us"><p style="text-wrap: wrap;">作者：vivo 互聯網服務器團隊 - Chen Han</p></section></section></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section style="margin-top: 10px;margin-bottom: 10px;text-align: center;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;border-width: 1px;border-style: solid;border-color: rgb(160, 160, 160);padding: 10px;"><section style="text-align: left;" powered-by="xiumi.us"><section style="font-size: 14px;text-align: justify;line-height: 1.8;padding-right: 5px;padding-left: 5px;color: rgb(160, 160, 160);"><p style="text-wrap: wrap;">容器平台針對業務資源申請值偏大的運營問題，通過靜態超賣和動態超賣兩種技術方案，使業務資源申請值趨於合理化，提高平台資源裝箱率和資源利用率。</p></section></section></section></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section style="margin-top: 10px;margin-bottom: 10px;text-align: center;" powered-by="xiumi.us"><section style="padding: 3px;display: inline-block;border-bottom: 1px solid rgb(65, 94, 255);font-size: 17px;color: rgb(65, 94, 255);"><p>一、背景</p></section></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us">在 Kubernetes 中，容器申請資源有 request 和 limit 概念來描述資源請求的最小值和最大值。</p><section style="margin-top: 10px;margin-bottom: 10px;text-align: center;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;border-width: 1px;border-style: solid;border-color: rgb(160, 160, 160);padding: 10px;"><section style="text-align: justify;line-height: 1.8;padding-right: 5px;padding-left: 5px;" powered-by="xiumi.us"><ul class="list-paddingleft-1" style="list-style-type: disc;"><li><p style="text-wrap: wrap;"><span style="font-size: 15px;letter-spacing: 0.578px;text-wrap: wrap;">requests 值在容器調度時會結合節點的資源容量 (capacity) 進行匹配選擇節點</span><span style="font-size: 15px;letter-spacing: 0.578px;text-wrap: wrap;">。</span></p></li><li><p style="text-wrap: wrap;"><span style="letter-spacing: 0.034em;">limits 表示容器在節點運行時可以使用的資源上限，當嘗試超用資源時，CPU 會被約束 (throttled)，內存會終止 (oom-kill)。</span></p></li></ul></section></section></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us">總體而言，在調度的時候 requests 比較重要，在運行時 limits 比較重要。在實際使用時，容器資源規格 request 和 limit 的設置規格也一直都讓 Kubernetes 的用户飽受困擾：</p><section style="margin-top: 10px;margin-bottom: 10px;text-align: center;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;border-width: 1px;border-style: solid;border-color: rgb(160, 160, 160);padding: 10px;"><section style="text-align: justify;line-height: 1.8;padding-right: 5px;padding-left: 5px;" powered-by="xiumi.us"><ul class="list-paddingleft-1" style="list-style-type: disc;"><li><p style="text-wrap: wrap;"><strong><span style="font-size: 15px;letter-spacing: 0.578px;text-wrap: wrap;">對業務運維人員</span></strong><span style="font-size: 15px;letter-spacing: 0.578px;text-wrap: wrap;">：希望預留相當數量的資源冗餘來應對上下游鏈路的負載波動</span><span style="font-size: 15px;letter-spacing: 0.578px;text-wrap: wrap;">，保障線上應用的穩定性。</span></p></li><li><p style="text-wrap: wrap;"><strong><span style="letter-spacing: 0.034em;">對平台人員</span></strong><span style="letter-spacing: 0.034em;">：集羣的資源裝箱率高，節點利用率低，存在大量的空閒資源無法調度，造成算力浪費。</span></p></li></ul></section></section></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section style="margin-top: 10px;margin-bottom: 10px;text-align: center;" powered-by="xiumi.us"><section style="padding: 3px;display: inline-block;border-bottom: 1px solid rgb(65, 94, 255);font-size: 17px;color: rgb(65, 94, 255);"><p>二、現狀</p></section></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><span style="font-size: 16px;color: rgb(65, 95, 255);">2.1 vivo 容器平台介紹</span></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us">vivo 容器平台基於 Kubernetes 技術對內部業務提供容器服務。內部業務統一在 CICD 平台部署和管理容器資源，容器平台自研的 caas-openapi 組件提供 restful 接口與 CICD 交互。</p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us">平台通過標籤，從資源維度邏輯上可以分為測試池、共享池、專有池、混部池。</p><section style="margin-top: 10px;margin-bottom: 10px;text-align: right;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;border-width: 1px;border-style: solid;border-color: transparent;padding: 10px;background-color: rgb(239, 239, 239);height: auto;"><section style="font-size: 14px;text-align: justify;" powered-by="xiumi.us"><ul class="list-paddingleft-1" style="list-style-type: disc;"><li><p><strong><span style="font-size: 15px;letter-spacing: 0.578px;text-wrap: wrap;background-color: rgb(239, 239, 239);">測試池</span></strong><span style="font-size: 15px;letter-spacing: 0.578px;text-wrap: wrap;background-color: rgb(239, 239, 239);">：為業務部署容器測試，一般非現網業務，為業務測試提供便利。</span><br></p></li><li><p style="text-wrap: wrap;"><strong><span style="font-size: 15px;">共享池</span></strong><span style="font-size: 15px;">：為業務不感知物理機，類似公有云全託管容器服務。</span></p></li><li><p style="text-wrap: wrap;"><strong><span style="font-size: 15px;letter-spacing: 0.034em;">專有池</span></strong><span style="font-size: 15px;letter-spacing: 0.034em;">：為業務獨享物理機，類似公有云半托管容器服務，業務方獨佔資源，容器平台維護。</span></p></li><li><p style="text-wrap: wrap;"><strong><span style="font-size: 15px;letter-spacing: 0.034em;">混部池</span></strong><span style="font-size: 15px;letter-spacing: 0.034em;">：為業務獨享物理機，在專有池基礎上，混部離線業務，緩解離線資源缺口，提升整機利用率。</span></p></li></ul></section></section></section><p style="text-align: center;"><br></p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" data-imgfileid="100014003" data-ratio="0.5453315290933695" data-s="300,640" src="https://oscimg.oschina.net/oscnet/0bd49caa-1769-4418-89b1-2e353db5c6d5.png" data-type="png" data-w="739" style="" referrerpolicy="no-referrer"></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><span style="font-size: 16px;color: rgb(65, 95, 255);">2.2 資源部署現狀和問題</span></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us">vivo 容器平台的所有在線業務部署均要求設置 request 和 limit，且 request &lt;= limit，默認情況 request 等於 limit。在共享池中，常見業務 request 設置會出現如下情況：</p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section powered-by="xiumi.us"><p style="text-wrap: wrap;"><strong>（1） 較少情況</strong>，業務設置較低的 request 值，而實際使用資源遠大於它的 request 值，若大量 pod 調度一個節點，加劇節點熱點問題影響同節點其他業務。</p><p style="text-wrap: wrap;"><br></p><p style="text-wrap: wrap;"><strong>（2）大多情況</strong>，業務按最大資源需求設置較高的 request 值，而實際使用資源長期遠小於它的 request 值。業務側賬單成本高 (按 request 計費)，且容器異常退出時，重調度時可能因為平台空閒資源碎片，導致大規格容器無法調度。這會導致，平台側可調度資源少，但平台整體節點資源利用率偏低。</p><p style="text-wrap: wrap;"><br></p><p style="text-wrap: wrap;">對平台和用户方，request 值設置合理很重要，但平台無法直接判斷用户設置 request 值合理性，所以無法首次部署時硬限制。</p><p style="text-wrap: wrap;"><br></p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" data-imgfileid="100014004" data-ratio="0.5070967741935484" data-s="300,640" src="https://oscimg.oschina.net/oscnet/38a6b780-753d-4a77-b444-ad2c242316de.png" data-type="png" data-w="775" style="" referrerpolicy="no-referrer"></p><p style="text-wrap: wrap;"><br></p></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><span style="font-size: 16px;color: rgb(65, 95, 255);">2.3 資源規格合理性思考</span></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><strong>2.3.1 request 怎麼樣才是合理設置</strong></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us">request 值接近業務實際使用量，例如用户申請 request 為 2 核，limit 為 4 核，實際真實使用量最多 1 核，那麼合理 request 值設置為 1 核附近。但是業務真實使用量只有運行一段時間後才能評估，屬於後驗知識。</p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><strong>2.3.2 保障資源最大使用量</strong></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us">不修改 limit 值就能保障業務最大使用量符合業務預期。</p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" data-imgfileid="100014005" data-ratio="0.4636471990464839" data-s="300,640" src="https://oscimg.oschina.net/oscnet/858557c2-5110-48da-b2a0-9d5f9ba876a1.png" data-type="png" data-w="839" style="" referrerpolicy="no-referrer"></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section style="margin-top: 10px;margin-bottom: 10px;text-align: center;" powered-by="xiumi.us"><section style="padding: 3px;display: inline-block;border-bottom: 1px solid rgb(65, 94, 255);font-size: 17px;color: rgb(65, 94, 255);"><p>三、解決方案探索</p></section></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><span style="font-size: 16px;color: rgb(65, 95, 255);">3.1 靜態超賣方案</span></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section style="margin: 10px 0% 8px;text-align: left;justify-content: flex-start;display: flex;flex-flow: row;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;vertical-align: top;border-left: 3px solid rgb(65, 95, 255);border-bottom-left-radius: 0px;padding-left: 8px;align-self: flex-start;flex: 0 0 auto;"><section style="color: rgb(62, 62, 62);text-align: justify;" powered-by="xiumi.us"><p style="text-wrap: wrap;">思路：</p></section></section></section><p style="text-wrap: wrap;" powered-by="xiumi.us">靜態超賣方案是將 CICD 用户申請規格的 request 按一定比例降低，根據平台運營經驗設置不同集羣不同機房不同環境的靜態係數，由 caas-openapi 組件自動修改。如下圖：<br></p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" data-imgfileid="100014007" data-ratio="1.8846153846153846" data-s="300,640" src="https://oscimg.oschina.net/oscnet/844bc6e1-0139-4de4-9b85-5b61f7fb8572.png" data-type="png" data-w="338" style="" referrerpolicy="no-referrer"></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section style="margin: 10px 0% 8px;text-align: left;justify-content: flex-start;display: flex;flex-flow: row;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;vertical-align: top;border-left: 3px solid rgb(65, 95, 255);border-bottom-left-radius: 0px;padding-left: 8px;align-self: flex-start;flex: 0 0 auto;"><section style="color: rgb(62, 62, 62);text-align: justify;" powered-by="xiumi.us"><p style="text-wrap: wrap;">優點：</p></section></section></section><p style="text-wrap: wrap;" powered-by="xiumi.us">首次部署時可以應用，實現簡單。</p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section style="margin: 10px 0% 8px;text-align: left;justify-content: flex-start;display: flex;flex-flow: row;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;vertical-align: top;border-left: 3px solid rgb(65, 95, 255);border-bottom-left-radius: 0px;padding-left: 8px;align-self: flex-start;flex: 0 0 auto;"><section style="color: rgb(62, 62, 62);text-align: justify;" powered-by="xiumi.us"><p style="text-wrap: wrap;">缺點：</p></section></section></section><p style="text-wrap: wrap;" powered-by="xiumi.us">生產環境係數設置保守，導致 request 依然偏大，且由於內存是不可壓縮資源，實際實施時為避免業務實例內存 oom-kill，靜態超賣只開啓了 cpu 維度，未開啓內存靜態超賣。</p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><span style="font-size: 16px;color: rgb(65, 95, 255);">3.2 動態超賣方案</span></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><strong>3.2.1 方案思路</strong></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us">開發 caas-recommender 組件，基於業務監控數據的真實資源用量來修正業務 request 值。</p><section style="margin-top: 10px;margin-bottom: 10px;text-align: center;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;border-width: 1px;border-style: solid;border-color: rgb(160, 160, 160);padding: 10px;"><section style="text-align: justify;line-height: 1.8;padding-right: 5px;padding-left: 5px;" powered-by="xiumi.us"><ol class="list-paddingleft-1" style="list-style-type: decimal;"><li><p><span style="font-size: 15px;letter-spacing: 0.578px;text-wrap: wrap;">從監控組件拉取各個容器資源的真實使用量。</span><br></p></li><li><p style="text-wrap: wrap;"><span style="letter-spacing: 0.034em;">通過算法模型得到業務申請量的推薦值。</span></p></li><li><p style="text-wrap: wrap;"><span style="letter-spacing: 0.034em;">業務重新部署時，使用推薦值修改業務 request 值。</span></p></li></ol></section></section></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><strong>3.2.2 半衰期滑動窗口模型</strong></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us">結合容器業務的特點，對推薦算法有如下要求：</p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><ul class="list-paddingleft-1" style="list-style-type: disc;"><li><section powered-by="xiumi.us"><p style="text-wrap: wrap;">當 workload 負載上升時，結果需要快速響應變化，即越新的數據對算法模型的影響越大；</p></section></li><li><section powered-by="xiumi.us"><p style="text-wrap: wrap;"><span style="letter-spacing: 0.034em;">當 workload 負載下降時，結果需要推遲體現，即越舊的數據對算法結果的影響越小。</span></p></section></li></ul><section powered-by="xiumi.us"><p style="text-wrap: wrap;"><br></p><p style="text-wrap: wrap;">半衰期滑動窗口模型可以根據數據的時效性對其權重進行衰減，可以滿足上述要求。</p><p style="text-wrap: wrap;">詳細描述參考：google Borg Autopilot 的 moving window 模型，<a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdl.acm.org%2Fdoi%2Fpdf%2F10.1145%2F3342195.3387524" textvalue="參看原論文>>" linktype="text" imgurl="" tab="outerlink" data-linktype="2">參看原論文&gt;&gt;</a></p><p style="text-wrap: wrap;"><br></p><p style="text-wrap: wrap;">公式如下：</p></section><section style="font-size: 15px;line-height: 1.5;"><section style="text-align: left;line-height: 0;" powered-by="xiumi.us"><section style="vertical-align: middle;display: inline-block;line-height: 0;width: 50%;height: auto;"><br></section></section></section><section style="font-size: 15px;line-height: 1.5;"><section style="text-align: center;line-height: 0;" powered-by="xiumi.us"><section style="vertical-align: middle;display: inline-block;line-height: 0;width: 30%;height: auto;"><img class="rich_pages wxw-img" data-cropselx1="0" data-cropselx2="173" data-cropsely1="0" data-cropsely2="173" data-imgfileid="100014023" data-ratio="0.22407407407407406" data-s="300,640" src="https://oscimg.oschina.net/oscnet/1f44a5f7-da1d-4fd9-a403-67e1496d6613.jpg" data-type="jpeg" data-w="1080" style="vertical-align: middle;width: 578px;height: 130px;" referrerpolicy="no-referrer"></section></section></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us">其中&nbsp;τ&nbsp;為數據樣本的時間點，t1/2 為半衰期，表示每經過 t1/2 時間間隔，前一個 t1/2 時間窗口內數據樣本的權重就降低一半。</p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section style="margin: 10px 0% 8px;text-align: left;justify-content: flex-start;display: flex;flex-flow: row;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;vertical-align: top;border-left: 3px solid rgb(219, 219, 219);border-bottom-left-radius: 0px;padding-left: 8px;align-self: flex-start;flex: 0 0 auto;"><section style="color: rgb(62, 62, 62);text-align: justify;" powered-by="xiumi.us"><p style="text-wrap: wrap;"><strong>核心理念</strong>：在參考時間點之前的數據點，離的越遠權重越低。在參考時間點之後的數據點權重越高。</p><p style="text-wrap: wrap;"><br></p><p style="text-wrap: wrap;"><strong>半衰期 halfLife</strong>：經過時間 halfLife 後，權重值降低到一半。默認的 halfLife 為 24 小時。</p><p style="text-wrap: wrap;"><br></p><p style="text-wrap: wrap;"><strong>數據點的時間 timestamp</strong>：監控數據的時間戳。</p><p style="text-wrap: wrap;"><br></p><p style="text-wrap: wrap;"><strong>參考時間 referenceTimestamp</strong>：監控數據上的某個時間（一般是監控時間最近的零點 00:00）。</p><p style="text-wrap: wrap;"><br></p><p style="text-wrap: wrap;"><strong>衰減係數 decayFactor</strong>：2^((timestamp-referenceTimestamp)/halfLife)</p><p style="text-wrap: wrap;"><br></p><p style="text-wrap: wrap;"><strong>cpu 資源的固定權重</strong>：CPU 使用量數據對應的固定權重是基於容器 CPU request 值確定的。當 CPU request 增加時，對應的固定權重也隨之增加，舊的樣本數據固定權重將相對減少。</p><p style="text-wrap: wrap;"><br></p><p style="text-wrap: wrap;"><strong>memory 資源的固定權重</strong>：由於內存為不可壓縮資源，而內存使用量樣本對應的固定權重係數為 1.0。</p><p style="text-wrap: wrap;"><br></p><p style="text-wrap: wrap;"><strong>數據點權重 = 固定權重*衰減係數</strong></p><p style="text-wrap: wrap;"><br></p><p style="text-wrap: wrap;">例如現在的數據點的權重為 1，那麼 24 小時之前的監控數據點的權重為 0.5，48 小時前的數據點的權重為 0.25，48 小時後的數據權重為 4。</p></section></section></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><strong>3.2.3 指數直方圖計算推薦值</strong></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us">caas-recommender 每個掃描週期（默認 1min）從 metrics server 或 prometheus 中獲取帶時間戳的樣本數據，如 container 維度的 CPU、Memory 資源使用等。樣本數據結合權重值，為每個 workload 構建指數直方圖，指數直方圖中每個桶的大小以指數速率逐步提升。指數直方圖的樣本存儲方式也便於定期 checkpoint 保存，可以顯著提升程序 recover 性能。如下圖：</p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" data-imgfileid="100014009" data-ratio="0.7993079584775087" data-s="300,640" src="https://oscimg.oschina.net/oscnet/64da2d6c-d91d-4315-9e1f-cdbbf8bcd8cc.png" data-type="png" data-w="578" style="" referrerpolicy="no-referrer"></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><ol class="list-paddingleft-1" style="list-style-type: decimal;"><li><section powered-by="xiumi.us"><p style="text-wrap: wrap;">指數直方圖的橫軸定義為資源量，縱軸定義為對應權重，資源量統計間隔以 5% 左右的幅度增加。</p></section></li><li><section powered-by="xiumi.us"><p style="text-wrap: wrap;"><span style="letter-spacing: 0.034em;">桶的下標為 N，桶的大小是指數增加的 bucketSize=0.01*(1.05^N)，下標為 0 的桶的大小為 0.01，容納範圍為[0,0.01)，下標為 1 的桶的大小為 0.01*1.05^1=0.0105，容納範圍[0.01-0.0205)。</span><span style="letter-spacing: 0.034em;">[0.01,173]只需要兩百個桶即可完整保存。</span><span style="letter-spacing: 0.034em;"></span><span style="letter-spacing: 0.034em;"></span></p></section></li><li><section powered-by="xiumi.us"><p style="text-wrap: wrap;"><span style="letter-spacing: 0.034em;">將每個數據點，按照數值大小丟到對應的桶中。</span></p></section></li><li><section powered-by="xiumi.us"><p style="text-wrap: wrap;"><span style="letter-spacing: 0.034em;">當某個桶裏增加了一個數據點，則這個桶的權重增加</span><strong style="letter-spacing: 0.034em;">固定權重*衰減係數</strong><span style="letter-spacing: 0.034em;">，所有桶的權重也增加</span><strong style="letter-spacing: 0.034em;">固定權重*衰減係數</strong><span style="letter-spacing: 0.034em;">。</span></p></section></li><li><section powered-by="xiumi.us"><p style="text-wrap: wrap;"><span style="letter-spacing: 0.034em;">計算出 W(95)=95%*所有桶的總權重，如上圖僅考慮前 4 個桶，總權重為 20，w(95) 權重為 19。</span><span style="letter-spacing: 0.034em;">&nbsp;</span></p></section></li><li><section powered-by="xiumi.us"><p style="text-wrap: wrap;"><span style="letter-spacing: 0.034em;">從最小的桶到最大桶開始累加桶的權重，這個權重記為 S，當 S&gt;=W(95) 時候，這個時候桶的下標為 N，那麼下標為 N+1 桶的最小邊界值就是 95 百分位值，如上圖 N=3 時，S&gt;=W(95)，95 百分位值即為 0.01*1.05^2。</span></p></section></li></ol><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us">比如 CPU 波動較大且可壓縮，採用 95% 分位值（P95），內存採用 99% 分位值（P99）。最終得到 workload 的資源推薦值。</p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><strong>3.2.4 caas-recommender 組件流程圖</strong></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" data-imgfileid="100014010" data-ratio="0.9929971988795518" data-s="300,640" src="https://oscimg.oschina.net/oscnet/9640df4b-639d-4743-b458-23edf102c5a6.png" data-type="png" data-w="714" style="" referrerpolicy="no-referrer"></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section powered-by="xiumi.us"><p style="text-wrap: wrap;"><strong>1. 啓動 controller</strong>：profile Controller 監聽 profile template crd，根據 profile crd 創建相應維度的 recommendation crd，可支持 namepace\</p><p style="text-wrap: wrap;">workload\pod 維度。</p><p style="text-wrap: wrap;"><br></p><p style="text-wrap: wrap;"><strong>2. 初始化：</strong></p><p style="text-wrap: wrap;">判斷是否有 checkpoint，若無，可以選擇從 prometheus 拉取數據構建直方圖。若有，由 checkpoint 直接 recover。</p><p style="text-wrap: wrap;"><br></p><p style="text-wrap: wrap;"><strong>3. loop 循環：</strong></p><ul class="list-paddingleft-1" style="list-style-type: disc;"><li><p style="text-wrap: wrap;">從 recommendation crd 中判斷哪些 pod 需要納管（pod labels）</p></li><li><p style="text-wrap: wrap;">根據 pod label 從 Kubernetes 獲取 pod 信息</p></li><li><p style="text-wrap: wrap;">根據 pod 的 namespace 從 metrics server 拉取監控數據，由 container 數據匯聚成 pod 用量數據。</p></li><li><p style="text-wrap: wrap;">構建指數直方圖，填充 pod 用量數據和權重值。</p></li><li><p style="text-wrap: wrap;">根據直方圖的分位值計算推薦值</p></li><li><p style="text-wrap: wrap;">存儲推薦值和直方圖 chekpoint</p></li><li><p style="text-wrap: wrap;">gc 需要刪除的 recommendation crd 或者直方圖內存等無用數據。</p></li></ul><p style="text-wrap: wrap;"><br></p><p style="text-wrap: wrap;"><strong>4.支持原生 workload 常用類型</strong>，拓展支持了 OpenKruise 相關 workload 類型。</p></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><strong>3.2.5 推薦值校正規則</strong></p><section style="margin-top: 10px;margin-bottom: 10px;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;border-width: 1px;border-style: solid;border-color: transparent;padding: 10px;background-color: rgb(239, 239, 239);"><section powered-by="xiumi.us"><ul class="list-paddingleft-1" style="list-style-type: disc;"><li><p><span style="font-size: 15px;letter-spacing: 0.578px;text-wrap: wrap;background-color: rgb(239, 239, 239);">推薦值 = 模型推薦值 * 擴大倍數 (可配置)&nbsp;</span><br></p></li><li><p style="text-wrap: wrap;">推薦值 &lt; 原生 request 值：按照推薦值修改</p></li><li><p style="text-wrap: wrap;">推薦值 &gt; 原始 request 值:&nbsp; 按照原始 request 修改</p></li><li><p style="text-wrap: wrap;">內存是否修改可以通過配置</p></li><li><p style="text-wrap: wrap;"><span style="letter-spacing: 0.034em;">不修改 workload 的 limit 值</span></p></li></ul></section></section></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><span style="font-size: 16px;color: rgb(65, 95, 255);">3.3 HPA 利用率計算邏輯改造</span></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section powered-by="xiumi.us"><p style="text-wrap: wrap;">Pod 水平自動擴縮（Horizontal Pod Autoscaler, 簡稱 HPA）可以基於 CPU/MEM 利用率自動擴縮 workload 的 Pod 數量，也可以基於其他應程序提供的自定義度量指標來執行自動擴縮。</p><p style="text-wrap: wrap;"><br></p><p style="text-wrap: wrap;">原生 Kubernetes 的 HPA 擴縮容利用率計算方式是基於 request 值。若資源超賣，request 值被修改後，那麼業務設置的 HPA 失靈，導致容器不符合預期擴縮容。</p><p style="text-wrap: wrap;"><br></p><p style="text-wrap: wrap;">關於 HPA 是基於 request 還是基於 limit，目前 Kubernetes 社區還存在爭論，相關 issue 見 72811。若需要使用 limit 計算利用率，可以修改 kube-controller-manager 源碼，或者使用自定義指標來代替。</p><p style="text-wrap: wrap;"><br></p><p style="text-wrap: wrap;">vivo 容器平台兼容業務物理機利用率邏輯，規定內部統一監控系統的 Pod 利用率均基於 limit 計算。</p></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><strong>HPA 改造思路：</strong>通過修改 kube-controller-manager 源碼方式實現基於 limit 維度計算。</p><section style="margin-top: 10px;margin-bottom: 10px;text-align: center;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;border-width: 1px;border-style: solid;border-color: rgb(160, 160, 160);padding: 10px;"><section style="text-align: justify;line-height: 1.8;padding-right: 5px;padding-left: 5px;" powered-by="xiumi.us"><ul class="list-paddingleft-1" style="list-style-type: disc;"><li><p><span style="font-size: 15px;letter-spacing: 0.578px;text-wrap: wrap;">在</span><span style="font-size: 15px;letter-spacing: 0.578px;text-wrap: wrap;">pod annotation 中記錄設置值信息（request 值和 limit 值），以及維度信息（request 或 limit 維度）。</span><br></p></li><li><p style="text-wrap: wrap;"><span style="letter-spacing: 0.034em;">controller 計算 pod 資源時，判斷是否有指定 annotation，若有，解析 annotation 記錄值和維度信息計算利用率，若無，使用原生邏輯。</span><br></p></li></ul></section></section></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us">通過上述方式解耦 HPA 與 pod request 值，這樣平台的資源超賣功能修改 request 不影響 HPA 自動擴縮預期。</p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><span style="font-size: 16px;color: rgb(65, 95, 255);">3.4 專有池支持超賣能力</span></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us">專有池物理機由業務自行運維管理，從平台角度，不應該隨意修改業務的容器 request 規格。但是專有池業務也有降低容器規格，部署更多業務，複用資源，提高整機利用率的需求。平台默認所有共享池自動開啓超賣能力，專有池可配置選擇開啓超賣能力。</p><section style="margin-top: 10px;margin-bottom: 10px;text-align: center;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;border-width: 1px;border-style: solid;border-color: rgb(160, 160, 160);padding: 10px;"><section style="text-align: justify;line-height: 1.8;padding-right: 5px;padding-left: 5px;" powered-by="xiumi.us"><ul class="list-paddingleft-1" style="list-style-type: disc;"><li><p><span style="font-size: 15px;letter-spacing: 0.578px;text-wrap: wrap;">可自定義開啓超賣類型：</span><span style="font-size: 15px;letter-spacing: 0.578px;text-wrap: wrap;">靜態、動態、靜態+動態。</span><br></p></li><li><p style="text-wrap: wrap;">可自定義靜態係數、動態超賣擴大系數。</p></li><li><p style="text-wrap: wrap;"><span style="letter-spacing: 0.034em;">可配置是否自動修改超賣值，當不自動生效可通過接口查詢推薦值，由業務自行修改。</span></p></li></ul></section></section></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><span style="font-size: 16px;color: rgb(65, 95, 255);">3.5 整體方案</span></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section style="margin: 10px 0% 8px;text-align: left;justify-content: flex-start;display: flex;flex-flow: row;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;vertical-align: top;border-left: 3px solid rgb(65, 95, 255);border-bottom-left-radius: 0px;padding-left: 8px;align-self: flex-start;flex: 0 0 auto;"><section style="color: rgb(62, 62, 62);text-align: justify;" powered-by="xiumi.us"><p style="text-wrap: wrap;">首次部署：</p></section></section></section><section powered-by="xiumi.us"><p style="text-wrap: wrap;">根據先驗知識評估，通過固定靜態係數修改 request 值，再根據部署後各個 pod 監控用量數據，生成 workload 的 request 推薦值。</p><p style="text-wrap: wrap;"><br></p></section><section style="margin: 10px 0% 8px;text-align: left;justify-content: flex-start;display: flex;flex-flow: row;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;vertical-align: top;border-left: 3px solid rgb(65, 95, 255);border-bottom-left-radius: 0px;padding-left: 8px;align-self: flex-start;flex: 0 0 auto;"><section style="color: rgb(62, 62, 62);text-align: justify;" powered-by="xiumi.us"><p style="text-wrap: wrap;">再次部署：</p></section></section></section><p style="text-wrap: wrap;" powered-by="xiumi.us">若有推薦值，使用推薦值部署。無推薦值或者推薦值未生效時，使用靜態係數。</p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" data-imgfileid="100014011" data-ratio="0.6361111111111111" data-s="300,640" src="https://oscimg.oschina.net/oscnet/3e7583ce-f7a8-421b-811c-7ac199f805fe.png" data-type="png" data-w="1080" style="" referrerpolicy="no-referrer"></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section style="margin-top: 10px;margin-bottom: 10px;text-align: center;" powered-by="xiumi.us"><section style="padding: 3px;display: inline-block;border-bottom: 1px solid rgb(65, 94, 255);font-size: 17px;color: rgb(65, 94, 255);"><p>四、效果和收益</p></section></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><span style="font-size: 16px;color: rgb(65, 95, 255);">4.1 測試集羣收益</span></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" data-imgfileid="100014012" data-ratio="0.6662908680947013" data-s="300,640" src="https://oscimg.oschina.net/oscnet/d0349323-1425-40ad-b342-40cfec68f226.png" data-type="png" data-w="887" style="" referrerpolicy="no-referrer"></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section powered-by="xiumi.us"><p style="text-wrap: wrap;">原測試機器的靜態超賣係數很低，且只縮減 cpu 維度資源，導致集羣內存成為資源瓶頸。</p><p style="text-wrap: wrap;"><br></p><p style="text-wrap: wrap;">開啓動態超賣能力 4 個月後，納管 90% 的 workload，節點 pod 平均內存 request 由 4.07Gi 下降到 3.1Gi，內存平台裝箱率降低 10%，有效緩解集羣內存不足問題。</p></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><span style="font-size: 16px;color: rgb(65, 95, 255);">4.2 共享池生產集羣收益</span></p><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" data-imgfileid="100014013" data-ratio="0.6462053571428571" data-s="300,640" src="https://oscimg.oschina.net/oscnet/82973f95-b870-422f-a4f5-647a0b81e40c.png" data-type="png" data-w="896" style="" referrerpolicy="no-referrer"></p><section powered-by="xiumi.us"><p style="text-wrap: wrap;"><br></p><p style="text-wrap: wrap;">原生產集羣靜態超賣係數較高，CPU 資源裝箱率高，導致集羣的 CPU 成為瓶頸。</p><p style="text-wrap: wrap;"><br></p><p style="text-wrap: wrap;">開啓動態超賣能力 3 個月後，納管 60% 的 workload，節點 pod 平均 cpu request 由 2.86 降低為 2.35，整體 cpu 利用率相比未開啓前提升 8% 左右。</p></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section style="margin-top: 10px;margin-bottom: 10px;text-align: center;" powered-by="xiumi.us"><section style="padding: 3px;display: inline-block;border-bottom: 1px solid rgb(65, 94, 255);font-size: 17px;color: rgb(65, 94, 255);"><p>五、總結與展望</p></section></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section powered-by="xiumi.us"><p style="text-wrap: wrap;">vivo 容器平台通過資源超賣方案，將業務容器的 request 降低到合理值，降低業務使用成本，緩解了集羣資源不足問題，達到了提升節點利用率目的。但是當前僅在生產集羣開啓了 CPU 資源超賣，規劃近期開啓內存資源超賣。</p><p style="text-wrap: wrap;"><br></p><p style="text-wrap: wrap;">未來基於上述方法，可以納管更多維度，比如 GPU 卡利用率再結合 GPU 虛擬化能力，從而提高 GPU 資源共享效率。根據動態超賣推薦值可以用於構建用户畫像，區分業務是計算型或內存型，方便平台更好理解用户特性，輔助資源調度等。</p></section><p style="text-wrap: wrap;" powered-by="xiumi.us"><br></p><section style="color: rgb(65, 95, 255);" powered-by="xiumi.us"><p style="text-wrap: wrap;">參考資料：</p></section><ul class="list-paddingleft-1" style="list-style-type: disc;"><li><section powered-by="xiumi.us"><p><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.cnblogs.com%2FCCE-SWR%2Fp%2F10530980.html" textvalue="深入理解 Kubernetes 資源限制：CPU" linktype="text" imgurl="" tab="outerlink" data-linktype="2">深入理解 Kubernetes 資源限制：CPU</a></p></section></li><li><section powered-by="xiumi.us"><p><span style="letter-spacing: 0.034em;"><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.cnblogs.com%2FCCE-SWR%2Fp%2F10494025.html" textvalue="深入理解 Kubernetes 資源限制：內存&nbsp;" linktype="text" imgurl="" tab="outerlink" data-linktype="2">深入理解 Kubernetes 資源限制：內存&nbsp;</a></span></p></section></li><li><section powered-by="xiumi.us"><p><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzUzNzYxNjAzMg%3D%3D%26mid%3D2247524786%26idx%3D1%26sn%3Dddcc8c59751ddc8987c1b13fe0e71a61%26scene%3D21%23wechat_redirect" textvalue="資源畫像，讓容器資源規格的填寫不再糾結" linktype="text" imgurl="" tab="outerlink" data-linktype="2">資源畫像，讓容器資源規格的填寫不再糾結</a></p></section></li><li><section powered-by="xiumi.us"><p><span style="letter-spacing: 0.034em;"><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2F0fd.org%2F2020%2F09%2F05%2Fautopilot-workload-autoscaling-at-google%2F" textvalue="Autopilot: workload autoscaling at Google" linktype="text" imgurl="" tab="outerlink" data-linktype="2">Autopilot: workload autoscaling at Google</a></span></p></section></li><li><section powered-by="xiumi.us"><p><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.infoq.cn%2Farticle%2Fz40lmwmtoyvecq6tpoik" textvalue="深入理解 VPA Recommender" linktype="text" imgurl="" tab="outerlink" data-linktype="2">深入理解 VPA Recommender</a></p></section></li></ul><p style="text-wrap: wrap;"><br></p><p style="text-wrap: wrap;"><br></p><section style="" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: top;width: 40%;"><section style="margin-top: 0.5em;margin-bottom: 0.5em;" powered-by="xiumi.us"><section style="border-top: 1px dotted rgb(160, 160, 160);"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section></section><section style="display: inline-block;vertical-align: top;width: 20%;"><section style="text-align: center;color: rgb(160, 160, 160);font-size: 11px;" powered-by="xiumi.us"><p>END</p></section></section><section style="display: inline-block;vertical-align: top;width: 40%;"><section style="margin-top: 0.5em;margin-bottom: 0.5em;" powered-by="xiumi.us"><section style="border-top: 1px dotted rgb(160, 160, 160);"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section></section></section><section style="margin-top: 10px;margin-bottom: 10px;text-align: left;" powered-by="xiumi.us"><section style="padding-left: 1em;padding-right: 1em;display: inline-block;text-align: center;"><span style="display: inline-block;padding: 0.3em 0.5em;border-radius: 0.5em;background-color: rgb(65, 94, 255);color: rgb(255, 255, 255);" title="" opera-tn-ra-cell="_$.pages:0.layers:0.comps:132.title1"><p>猜你喜歡</p></span></section><section style="border-width: 1px;border-style: solid;border-color: transparent;margin-top: -1em;padding: 20px 10px 10px;background-color: rgb(239, 239, 239);text-align: center;"><section style="font-size: 14px;text-align: left;" powered-by="xiumi.us"><ul class="list-paddingleft-1" style="padding-left: 40px;list-style-position: outside;"><li><p><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzI4NjY4MTU5Nw%3D%3D%26mid%3D2247497810%26idx%3D1%26sn%3Dfb5334c9637cdde4b5125f69ed32e89f%26chksm%3Debdb88c0dcac01d6faf82e4d44e8421616ec9128f46ea494339a599c346b13212b9f1d774886%26scene%3D21%23wechat_redirect" textvalue="Hudi 在 vivo 湖倉一體的落地實踐" linktype="text" imgurl="" imgdata="null" data-itemshowtype="0" tab="innerlink" data-linktype="2">Hudi 在 vivo 湖倉一體的落地實踐</a></p></li><li><p><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzI4NjY4MTU5Nw%3D%3D%26mid%3D2247497721%26idx%3D1%26sn%3D7fc575754a006dc68bb08cf730971cde%26chksm%3Debdb876bdcac0e7d1b579c0e69b8d36854bb08457c231640dab9418ee75dd35788e90e0688bf%26scene%3D21%23wechat_redirect" textvalue="RocksDB 在 vivo 消息推送系統中的實踐" linktype="text" imgurl="" imgdata="null" data-itemshowtype="0" tab="innerlink" data-linktype="2">RocksDB 在 vivo 消息推送系統中的實踐</a></p></li><li><p><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzI4NjY4MTU5Nw%3D%3D%26mid%3D2247497638%26idx%3D1%26sn%3D7c773beb9f6062991ff11a068d55b132%26chksm%3Debdb8734dcac0e22e33f20a45472e8918c2b4bb7ccc47f138e3d1d37af76cd1fef986283edbd%26scene%3D21%23wechat_redirect" textvalue="線上 ES 集羣參數配置引起的業務異常案例分析" linktype="text" imgurl="" imgdata="null" data-itemshowtype="0" tab="innerlink" data-linktype="2">線上 ES 集羣參數配置引起的業務異常案例分析</a></p></li></ul></section></section></section></section><section class="mp_profile_iframe_wrp"><mp-common-profile class="js_uneditable custom_select_card mp_profile_iframe" data-pluginname="mpprofile" data-id="MzI4NjY4MTU5Nw==" data-headimg="http://mmbiz.qpic.cn/mmbiz_png/4g5IMGibSxt45QXJZicZ9gaNU2mRSlvqhQd94MJ7oQh4QFj1ibPV66xnUiaKoicSatwaGXepL5sBDSDLEckicX1ttibHg/0?wx_fmt=png" data-nickname="vivo 互聯網技術" data-alias="vivoVMIC" data-signature="分享 vivo 互聯網技術乾貨與沙龍活動，推薦最新行業動態與熱門會議。" data-from="0" data-is_biz_ban="0"></mp-common-profile></section><p style="display: none;"><mp-style-type data-value="3"></mp-style-type></p></div><p style="color: #858585; font-size: 13px;">本文分享自微信公眾號 - vivo 互聯網技術（vivoVMIC）。<br>如有侵權，請聯繫 support@oschina.cn 刪除。<br>本文參與「<a href="https://www.oschina.net/sharing-plan" target="_blank">OSC 源創計劃</a>」，歡迎正在閲讀的你也加入，一起分享。</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 26 Dec 2023 01:47:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/vivotech/blog/10322908</guid>
            <link>https://my.oschina.net/vivotech/blog/10322908</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[WAVE SUMMIT 迎來第十屆，文心一言將有最新披露！]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span>1</span></span><span><span>0</span></span><span><span>句話 2 分鐘，挑戰成功説服宿管阿姨開門，這個人羣中的「顯眼包」是一個接入文心大模型 4</span></span><span><span>.0</span></span><span><span>遊戲裏的 NPC，妥妥 「工具人」實錘～</span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span>嘗試用</span></span><span><span>AI</span></span><span><span>一鍵自動識別好壞咖啡豆，看一眼便知好壞，真正「顏值即正義」，讓咖啡星人狂喜～</span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span>藉助 AI 在</span></span><span><span>任何平面上模擬</span></span><span><span>的</span></span><span><span>鋼琴，</span></span><span><span>即興「彈奏」世界名曲，開一場科技感滿滿的專屬演奏會～</span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span>在虛擬世界</span></span><span><span>的</span></span><span><span>神奇辦公室，輸入你的創業方向，智慧打工人們將為你的項目勤勞奔走，並在過程中，把日報</span></span><span><span>、</span></span><span><span>週報寫好，讓你隨時掌握項目進度和最終成果</span></span><span><span>……</span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><img height="280" src="https://static.oschina.net/uploads/space/2023/1226/134838_ASJC_4252687.png" width="500" referrerpolicy="no-referrer"></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span>這些聽起來新奇而有趣的 A</span></span><span><span>I</span></span><span><span>應用，都將在兩天後舉行的 W</span></span><span><span>AVE SUMMIT+深度學習開發者大會 2023</span></span><span><span>開發者市集亮相。</span></span><span><span>作為業界影響力最大的深度學習與大模型開發者大會，WAVE SUMMIT+ 2023</span></span><span><span>定於</span></span><span><span>12 月 28 日</span></span><span><span>在</span></span><span><span>北京開啓</span></span><span><span>。</span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><img height="285" src="https://static.oschina.net/uploads/space/2023/1226/134858_tJnB_4252687.png" width="500" referrerpolicy="no-referrer"></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span>現場大咖雲集，</span></span><span><span>百度首席技術官</span></span><span><span>、</span></span><span><span>深度學習技術及應用國家工程研究中心主任王海峯</span></span><span><span>及數百位</span></span><span><span>產業大咖、知名學者、技術大牛、頂尖開源項目發起人等重磅嘉賓，從大模型技術、開源開放、產業護航、軟硬一體等議題出發，</span></span><span><span>為開發者奉上大模型時代低門檻開發和創建應用的硬核乾貨。</span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span>倒計時 2 天，大會的五大亮點帶大家搶鮮看。</span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><strong><span><span><strong>亮點一：趨勢引領，「扛把子」文心一言將曝新進展</strong></span></span></strong></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span>今年 1</span></span><span><span>0</span></span><span><span>月 1</span></span><span><span>7</span></span><span><span>日，迄今為止綜合實力最強的文心大模型 4</span></span><span><span>.0</span></span><span><span>重磅面世，</span></span><span><span>理解、生成、邏輯、記憶</span></span><span><span>四大能力得到</span></span><span><span>顯著提升，大語言模型</span></span><span><span>正在</span></span><span><span>為通用人工智能帶來曙光。</span></span><span><span>截至 1</span></span><span><span>1</span></span><span><span>月初，文心一言用户數達到 7</span></span><span><span>000</span></span><span><span>萬，場景達</span></span><span><span>4300</span></span><span><span>個。這</span></span><span><span>得益於飛槳與文心的協同優化，</span></span><span><span>文心大模型 4</span></span><span><span>.0</span></span><span><span>的</span></span><span><span>模型周均訓練有效率超過 98%，</span></span><span><span>相比於 3 月份，</span></span><span><span>訓練算法效率提升</span></span><span><span>至</span></span><span><span>3.6 倍</span></span><span><span>，推理性能提升至 5</span></span><span><span>0</span></span><span><span>倍。</span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span>本次大會，文心一言以及飛槳將披露技術和生態層面的最新進展，更關乎千萬開發者的切身使用體驗和權益～第十屆</span></span><span><span>WAVE SUMMIT</span></span><span><span>，值得期待。</span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><strong><span><span><strong>亮點二：乾貨十足，硬核低門檻開發秘籍大放送</strong></span></span></strong></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span>當今，技術圈萬眾矚目的</span></span><span><span>A</span></span><span><span>gent 到底是何方神聖，應該怎麼打造</span></span><span><span>A</span></span><span><span>gent？</span></span><span><span>大模型與開發工具鏈相結合，為開發提效提供了哪些</span></span><span><span>新</span></span><span><span>可能？</span></span><span><span>硬件-框架-模型到底怎樣協同優化發揮最大效能？開發者們的「趁手利器」</span></span><span><span>C</span></span><span><span>omate 還能怎麼用？你想了解的各類技術乾貨，前沿的科技圈熱點，來</span></span><span><span>WAVE SUMMIT+2023</span></span><span><span>，不容錯過！</span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><strong><span><span>亮點三：蓄勢待發，大模型賦能產業正當時</span></span></strong></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span>大會主論壇之後，聚焦前沿、產業、硬件、開發應用等主題的五大平行論壇同步舉行，將</span></span><span><span>大模型前沿技術分享與產業落地的</span></span><span><span>心法一一奉上。</span></span><span><span>科學啓智</span></span><span><span>、</span></span><span><span>AI 賦能</span></span><span><span>，</span></span><span><span>AI for Science 塑造多學科研究新範式</span></span><span><span>，跨界融合創新展現</span></span><span><span>巨大應用潛能</span></span><span><span>；大模型產業應用中的標杆先行者放大招：華晨寶馬將帶來企</span></span><span><span>業級大模型 Agent 服務平台</span></span><span><span>、東方電科新能源功率準確性提升實現能效優化……</span></span><span><span>主流硬件廠商悉數亮相：NVIDIA、Intel、中科曙光、昇騰、燧原科技、太初</span></span><span><span>……</span></span><span><span>飛槳硬件生態朋友圈再擴大，生態勢能貫通產業鏈。</span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><strong><span><span><strong>亮點四：羣星閃耀，AI 產業生態星河萬裏</strong></span></span></strong></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span>開源開放、眾行致遠</span></span><span><span>。為</span></span><span><span>持續引導探索產業 AI 關鍵場景，大會</span></span><span><span>還從</span></span><span><span>開源開放、產業創新等多個維度</span></span><span><span>，</span></span><span><span>評選出 「星河產業應用創新獎」，「文心 x 飛槳最具影響力開發者」</span></span><span><span>等大獎</span></span><span><span>，</span></span><span><span>並將於大會</span></span><span><span>現場頒獎，激發開源創新活力，</span></span><span><span>賦能產業繁榮生態，</span></span><span><span>助推產業智能化</span></span><span><span>。</span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span>W</span></span><span><span>AVE</span></span>&nbsp;<span><span>SUMMIT</span></span><span><span>&nbsp;五年十屆，這也是中</span></span><span><span>國 AI 技術生態繁榮與崛起的關鍵時期。</span></span><span><span>開發者作為中堅力量，為智能世界貢獻出自己的智慧；飛槳星河社區以開源開放的姿態，匯聚了開發者們最聰明的大腦。大會將設有開發者相關環節，讓大家看到羣像背後的一個個故事，感受一點點星光、見證科技讓世界更有温度。</span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><strong><span><span>亮點五：</span></span></strong><strong><span><span><strong>應用繁榮，創意市集與</strong></span></span></strong><strong><span><span><strong>AI</strong></span></span></strong><strong><span><span><strong>原生</strong></span></span></strong><strong><span><span><strong>W</strong></span></span></strong><strong><span><span><strong>orkshop 盡顯極客範</strong></span></span></strong></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span>這次</span></span><span><span>WAVE SUMMIT+ 2023 為開發者專設多個體驗互動環節，</span></span><span><span>前面</span></span><span><span>提到的開發者市集就是其中之一</span></span><span><span>。本次開發者市集上，幾十款開發者打造的</span></span><span><span>AI</span></span><span><span>互動小應用，帶你沉浸式感受技術的魅力，現場還有開發者親自講解、示範，零距離接觸那些開發者大神。</span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><img height="265" src="https://static.oschina.net/uploads/space/2023/1226/134921_vHME_4252687.png" width="500" referrerpolicy="no-referrer"></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span>此外，大會還為開發者們精心準備了三場</span></span><span><span>Workshop</span></span><span><span>，</span></span><span><span>現場</span></span><span><span>手把手教你</span></span><span><span>打造自己的 AI</span></span><span><span>原生</span></span><span><span>應用</span></span><span><span>。星河探索，智能應用，志在推進高質量、高可用的</span></span><span><span>AI</span></span><span><span>原生應用落地的最後一公里，</span></span><span><span>現場</span></span><span><span>將帶來星河社區</span></span><span><span>ERNIE Bot</span></span>&nbsp;<span><span>SDK</span></span><span><span>的能力講解與實戰，幫你解鎖文心一言無限可能，還有更多</span></span><span><span>AI</span></span><span><span>原生應用落地和開發實戰，</span></span><span><span>玩轉原生應用</span></span><span><span>，感受 AI 原生應用魅力。</span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span>在經歷過下午一系列酣暢的技術燒腦與極客碰撞後，晚上，開發者們可以到「</span></span><span><span>AI 開發者之夜</span></span><span><span>」好好放鬆一下，在這不僅可以挑戰</span></span><span><span>AI 原生小遊戲</span></span><span><span>，觀看精彩表演，也能「以 AI 會友」，共同奔赴 AI 時代的「詩與遠方」。</span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span>隨着大模型的爆發，人工智能</span></span><span><span>的風已經吹到</span></span><span><span>社會的</span></span><span><span>各個</span></span><span><span>角落。</span></span><span><span>W</span></span><span><span>AVE SUMMIT+ 2023</span></span><span><span>這場 AI 開發者的「嘉年華」，讓每位參會者深入探索基於大模型的 AI 應用，瞭解技術發展前沿信息和應用風向，在新時代新機遇來臨之際，抓住先機，創造更多可能。</span></span></span></span></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 25 Dec 2023 05:49:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272772</guid>
            <link>https://www.oschina.net/news/272772</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[2023 年度低代碼企業 TOP50 榜單公佈 — JeecgBoot 連續兩年榮登榜單]]>
            </title>
            <description>
                <![CDATA[<div class="content"><blockquote><p style="margin-left:0; margin-right:0">近日，中國科學院主管、科學出版社主辦的國家級核心期刊《互聯網週刊》聯合 eNet 研究院、德本諮詢評選的《2023 低代碼企業 50 強》榜單正式公佈。這一榜單的公佈引起了業內外的廣泛關注，因為其中涵蓋了低代碼開發領域的眾多傑出企業，展現了低代碼產業的發展趨勢和行業格局。</p></blockquote><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">在這份備受矚目的榜單中，知名企業釘釘、騰訊雲、華為雲等行業優秀廠商的產品悉數入選，充分展現了它們在低代碼領域的技術實力和市場影響力。而更加令人矚目的是，<code>JeecgBoot</code><span>&nbsp;</span>作為低代碼開發領域的領軍企業，連續兩年榮登榜單，憑藉其卓越的產品實力和市場表現，再次彰顯了其在行業中的領先地位和影響力。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">JeecgBoot 低代碼平台作為備受認可的低代碼開發平台，一直以來致力於為企業提供高效、靈活、可定製的低代碼開發解決方案。其產品以簡單易用、快速開發、可視化操作等特點而著稱，深受廣大企業用户的青睞。JeecgBoot 連續兩年榮登《2023 低代碼企業 50 強》榜單，再次印證了其在低代碼開發領域的卓越地位和不斷增長的市場影響力。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">www.jeecg.com</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" height="330" src="https://oscimg.oschina.net/oscnet/up-458906dcd2cc0cb63a454761d96b1602826.png" width="500" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">同時在 2023 年，JeecgBoot 又推出了 「敲敲雲」 零代碼產品，將為低代碼市場帶來新的競爭對手和發展動力。這不僅豐富了 JeecgBoot 的產品線，也為企業用户提供了更多元化的選擇。隨着低代碼和零代碼市場的不斷髮展，我們有理由相信，這將為整個數字化轉型領域帶來更多的機遇和活力。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">www.qiaoqiaoyun.com</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" height="300" src="https://oscimg.oschina.net/oscnet/up-cad61647c80a1dbdedac3adc1d490cb1917.png" width="500" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" height="2516" src="https://oscimg.oschina.net/oscnet/up-c3e1f9901ed0f7fbba1f83cc3cf120a9ab1.png" width="500" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 25 Dec 2023 03:09:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272750</guid>
            <link>https://www.oschina.net/news/272750</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
    </channel>
</rss>
