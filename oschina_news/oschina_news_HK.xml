<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[開源中國-最新資訊]]>
        </title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="https://rsshub.app/oschina/news" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[開源中國-最新資訊 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Thu, 18 Jan 2024 10:15:58 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[華為發佈 HarmonyOS NEXT 鴻蒙星河版（開發者預覽）]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>今天下午在深圳舉辦的鴻蒙生態千帆啓航儀式上，華為常務董事、終端 BG CEO 餘承東宣佈：<strong>HarmonyOS NEXT 鴻蒙星河版（開發者預覽版）面向開發者開放申請</strong>。鴻蒙星河版將實現六大極致原生體驗，包括原生精緻、易用、流暢、安全、智能和互聯。</p><p><img src="https://oscimg.oschina.net/oscnet/up-3b40ebae0c495dbbb24a8e02981c656ca22.jpg" referrerpolicy="no-referrer"></p><p>餘承東表示，首批鴻蒙原生應用生態夥伴已經突破 200 家。預計到今年年底，將有 5000 款應用完成鴻蒙原生開發。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-568f3f03223ab175b643dcf3434b6ad54ee.png" referrerpolicy="no-referrer"></p><p>據介紹，HarmonyOS NEXT 鴻蒙星河版採用華為自研內核，拋棄了傳統的 Linux 內核以及 AOSP 安卓開放源代碼項目等代碼，僅支持鴻蒙內核和鴻蒙系統的應用。</p><p>餘承東在發佈會現場表示，鴻蒙內核超越傳統內核，鴻蒙系統是真正的操作系統，從編程語言到編譯器都是全棧自研。他還説道，真正的操作系統需要有底座和生態支持。經過十年的發展和蝶變，鴻蒙操作系統已在各種場景設備上得到廣泛應用。華為力求在核心技術、全棧能力、底座和生態方面實現全面發展，打造真正的操作系統。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-9a92b0ee0233ea897e68426d8b4de28bcf6.png" referrerpolicy="no-referrer"></p><p>按照發布日程，HarmonyOS NEXT 鴻蒙星河版將於 Q2 推出開發者 Beta 版，Q4 發佈商用版。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-c3f2e68f3c1f3af41732820781574df2a78.png" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 18 Jan 2024 09:50:51 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276094</guid>
            <link>https://www.oschina.net/news/276094</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Wine 9.0 穩定版正式發佈，新增實驗性 Wayland 驅動]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Wine 9.0 穩定版已正式<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.winehq.org%2Fnews%2F2024011601" target="_blank">發佈</a></u>。</p><blockquote><p>Wine （「Wine Is Not an Emulator」 的首字母縮寫）是一個能夠在多種 POSIX-compliant 操作系統（諸如 Linux，macOS 及 BSD 等）上運行 Windows 應用的兼容層。它不是像虛擬機或者模擬器一樣模仿內部的 Windows 邏輯，而是將 Windows API 調用翻譯成為動態的 POSIX 調用，免除了性能和其它一些行為的內存佔用，能夠乾淨地整合 Windows 應用到桌面。</p></blockquote><p>9.0 亮點是引入新的 WoW64 架構和實驗性 Wayland 驅動程序。</p><p>主要變化：</p><ul><li>引入實驗性的 Wayland 驅動程序，默認未啓用</li><li>從 Windows 到 Unix 代碼的所有轉換都經過 NT 系統調用接口，這標誌着多年重構工作的完成</li><li>新的 WoW64 架構允許在純 64 位 Unix 系統運行 32 位 Windows 應用，該模式默認沒有啓用</li><li>增強 ARM64 平台支持</li><li>更新 Vulkan 驅動支持</li><li>改進 Direct3D 以及 DirectMusic 支持</li><li>……</li></ul><p><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgitlab.winehq.org%2Fwine%2Fwine%2F-%2Freleases%2Fwine-9.0" target="_blank">詳情查看發佈公告</a></u>。</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 18 Jan 2024 09:26:14 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276090/wine-9-0-released</guid>
            <link>https://www.oschina.net/news/276090/wine-9-0-released</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[GreptimeDB v0.6 發佈 | 支持 Datanodes 間遷移數據表 Region]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>2024 年新年伊始，Greptime 團隊攜新年的活力，持續進行緊鑼密鼓的版本迭代。繼上一次更新後，僅僅三週我們的開源時序數據庫就又迎來了一個更加強大、功能豐富的新版本——GreptimeDB v0.6。</p><p>接下來我們將介紹 GreptimeDB v0.6 的主要版本改進：</p><ul><li>v0.6 功能上新</li><li>其他亮點更新</li></ul><h2>Region Migration</h2><p>在 v0.5 版本中，我們引入了對 Kafka WAL 的支持，使得在多個 Datanode 之間實現 Region 數據的同步和遷移成為可能。在 0.6 版本中，我們初步實現了 Region Migration 功能，<strong>為用户提供了在 Datanode 之間遷移數據表 Region 的能力，同時保障了數據的完整性，為動態調節集羣負載提供了很好的基礎。</strong></p><p>例如，隨着查詢性能需求的增長，用户可以通過 Region Migration 輕鬆將數據表 Region 遷移到負載更低或者更大規格的 Datanode 節點，以實現更好的查詢性能。</p><p>未來，我們計劃引入動態 Region 分佈，該功能將在不中斷服務的情況下，根據實時監測的負載狀況和業務需求，智能地重新分配數據 Region，以優化資源利用。這將實現更加智能和高效的數據管理，為持續變化的業務環境提供可持續的支持。</p><h2>其他亮點更新</h2><ul><li><p>新增配置項，允許指定查詢的默認時區</p><p>通過增加 <code>--store-key-prefix</code> 配置選項，管理員可以指定 metasrv 所使用的 Key 前綴，從而避免鍵名衝突。</p></li><li><p>實現了 PromQL 中的 OR 邏輯算子</p><p>新增特殊的 <code>UNION</code> 算子（在 PromQL 中為 <code>OR</code>）專門用於特定的 PromQL 查詢場景。該算子接受兩個輸入節點，左子節點的所有列都會輸出，<code>compare_keys</code> 指定的列則用於檢查重複。遇到重複時，若均源自右節點則只保留首行，源自左節點則丟棄右節點的行；輸出包含所有左右節點的列，且行順序不固定。</p></li></ul><h2>未來展望</h2><p>在 v0.7 版本中，我們將引入一個全新的索引模塊，其中的第一個實現會是倒排索引。我們的目標是通過這個索引模塊來提升在海量時間線中篩選出少量時間線並進行查詢時的性能。這正是可觀測場景中 Metric Engine 着重關注的特性。目前，我們的團隊正在對兩者的結合進行測試，以確保其性能和穩定性。請大家期待我們即將發佈的 v0.7 版本！</p><h3>關於 Greptime 的小知識：</h3><p>Greptime 格睿科技於 2022 年創立，目前正在完善和打造時序數據庫 GreptimeDB，格睿雲 GreptimeCloud 和可觀測工具 GreptimeAI 這三款產品。</p><p>GreptimeDB 是一款用 Rust 語言編寫的時序數據庫，具有分佈式、開源、雲原生和兼容性強等特點，幫助企業實時讀寫、處理和分析時序數據的同時降低長期存儲成本；GreptimeCloud 可以為用户提供全託管的 DBaaS 服務，能夠與可觀測性、物聯網等領域高度結合；GreptimeAI 為 LLM 量身打造，提供成本、性能和生成過程的全鏈路監控。</p><p>GreptimeCloud 和 GreptimeAI 已正式公測，歡迎關注公眾號或官網瞭解最新動態！</p><p>官網：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgreptime.cn%2F" target="_blank">https://greptime.cn/</a></p><p>GitHub: <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FGreptimeTeam%2Fgreptimedb" target="_blank">https://github.com/GreptimeTeam/greptimedb</a></p><p>文檔：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.greptime.cn%2F" target="_blank">https://docs.greptime.cn/</a></p><p>Twitter: <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftwitter.com%2FGreptime" target="_blank">https://twitter.com/Greptime</a></p><p>Slack: <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgreptime.com%2Fslack" target="_blank">https://greptime.com/slack</a></p><p>LinkedIn: <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.linkedin.com%2Fcompany%2Fgreptime%2F" target="_blank">https://www.linkedin.com/company/greptime/</a></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 18 Jan 2024 09:20:51 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/6839317/blog/10862471</guid>
            <link>https://my.oschina.net/u/6839317/blog/10862471</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[開放籤電子簽章項目加入渠成開源社區]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">開放簽上線一個月，目前 gitee、github 兩個社區截止發稿前 start 總量 426，每週累計增長 100 左右。在開源中國、github、csdn 等社區得到了廣大開發者用户的關注，也得到渠成開源社區的關注，感謝他們。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">開放籤於 2024 年 1 月份正式加入渠成開源社區，希望能跟渠成開源社區一起發展，藉助和學習渠成的開源運營方法，把開放籤開源社區運營的越來越好。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>渠成開源社區介紹</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">渠成開源社區由禪道項目管理軟件團隊發起，社區的經營主體為青島渠成開源計算機網絡技術研究中心，是從事非營利性社會服務活動的社會組織。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">渠成開源社區主要面向一線開源軟件生產者、貢獻者、組織者、贊助商和用户，以解決具體實際問題為宗旨，旨在打造以開源軟件為核心紐帶的開源生態系統，真正做到讓每一個優秀的開源軟件都能實現商業化。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>渠成開源社區要做的事情</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">渠成開源社區以解決開源實際問題為宗旨，打造以開源軟件為核心的開源生態系統。社區會圍繞代碼工程側、經營模式側和社區活動側這三類事情展開：</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">幫助開源軟件社區把項目做得更好：支持開源任務懸賞，包含開源文檔、開源 Bug、開源極客營、開源測試、產品設計、UI 設計等等。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">幫助開源軟件社區把項目經營得更好：圍繞如何以開源軟件建立自己的經營模式提供文章、視頻、沙龍、培訓等一系列的內容。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">充分鏈接開源生態中的各種角色：通過各種社區功能、線上線下的活動建立各角色的充分鏈接。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>開放籤電子簽章介紹</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">開放籤團隊源自於電子合同 SaaS 公司，專注於提供電子簽章相關的專業解決方案，開放籤致力於將電子簽章產品、技術開源、開放，讓電子簽署更加簡單。我們更加相信秉承開放共享這一價值觀，能夠為產品與用户之間帶來更多信任。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">接下來，開放籤繼續秉持開源開放的精神，加入更多開源社區，探索更多的開源運營方式，為更多的開發者和用户帶來更多的共享，更好的服務。</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 18 Jan 2024 09:14:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276088</guid>
            <link>https://www.oschina.net/news/276088</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[字節跳動開源 Gödel Scheduler：在離線統一調度器]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>字節跳動宣佈基於 Kubernetes 系統自研分佈式調度器：Gödel Scheduler。一個能統一調度在線和離線業務的分佈式調度器，能在滿足在離線業務功能和性能需求的前提下，提供良好的擴展性和調度質量。</p><p>具備如下主要特點：</p><ul><li><p>基於 K8s Scheduler，結合<strong>樂觀併發</strong>思想，把最耗時的應用到節點匹配（filtering and scoring）操作放在 scheduler 組件，可以併發執行，提高大規模集羣調度吞吐；</p></li><li><p><strong>兩層調度語義</strong>抽象（Unit 和 Pod）和<strong>二級調度框架</strong>實現：提供更靈活的「批」調度能力，更好支持離線業務的同時，可以進一步提高調度吞吐和提升系統擴展性 （擴展後的框架可以更好地處理一些特殊場景）；</p></li><li><p>豐富的功能和優秀的性能，滿足在線，離線（批，流）和訓練等業務需求，真正做到統一調度；</p></li><li><p>兼容 Kubernetes 生態，可以替換 K8s Scheduler；</p><ul><li>由於性能以及架構優化，在 framework interface 上與 K8s Scheduler 不完全一樣，但擴展性不受影響，也可以像 Kubernetes 一樣實現 scheduling plugin；</li></ul></li></ul><p><span style="background-color:#ffffff; color:#3e3e3e">架構如下圖所示：</span></p><p><span style="background-color:#ffffff; color:#3e3e3e"><img alt="" height="207" src="https://oscimg.oschina.net/oscnet/up-df6660cb4c8f0bdd045a0ffbd83527872fc.png" width="500" referrerpolicy="no-referrer"></span></p><p><span style="color:#3e3e3e">Gödel Scheduler 由三個組件組成：</span><span style="color:#3e3e3e">Dispatcher、Scheduler<span>&nbsp;</span></span><span style="color:#3e3e3e">和</span><span style="color:#3e3e3e"><span>&nbsp;</span></span><span style="color:#3e3e3e">Binder</span><span style="color:#3e3e3e">。</span><span style="color:#3e3e3e">其中，Scheduler 組件是多實例，樂觀併發調度， Dispatcher 和 Binder 則是單實例。</span>&nbsp;</p><p>公告指出，<span style="color:#3e3e3e">在過去兩年裏，Gödel Scheduler 已在字節跳動內部大規模落地，提供豐富的調度語義和功能，包括但不限於 Gang、Job level affinity、微拓撲調度、豐富的排隊策略、搶佔策略以及調度策略等，它高效穩定地支撐着抖音、今日頭條等內部多種複雜業務的運行。</span></p><p><span style="color:#3e3e3e">除了架構優化以外，項目團隊還基於以前優化 Kubernetes 原生調度器的經驗，對 Gödel Scheduler 的實現進行了更深度的性能優化。結合內部優化過的 Kubernetes 系統，Gödel 調度器單分片吞吐可</span><span style="color:#000000">達&nbsp;<strong>2000+ Pods/s</strong>, 多分片可達&nbsp;<strong>5000+ Pods/s</strong>。並基</span><span style="color:#3e3e3e">於此不斷提升單集羣規模，目前字節跳動內部最大的線上單集羣規模已經達到 20000+&nbsp;節點、100w+ Pods。</span></p><p><span style="color:#3e3e3e">經過內部多年反覆驗證，目前&nbsp;<span style="background-color:#ffffff">Gödel 系統</span>已達相對穩定狀態。</span></p><p><span style="background-color:#ffffff; color:#3e3e3e">未來，開源團隊計劃持續迭代 Gödel scheduler，提供更加豐富的功能和更好的擴展性，不斷優化一些特殊場景下（比如高部署率，高搶佔頻率等）的調度吞吐。同時，通過重調度的方式希望解決</span><strong>調度性能</strong><span style="background-color:#ffffff; color:#3e3e3e">和</span><strong>調度質量</strong><span style="background-color:#ffffff; color:#3e3e3e">難兼顧的難題，在保證調度吞吐的基礎上，大幅提升調度質量。以及注重生態建設，兼容適配業務主流的系統和框架。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 18 Jan 2024 09:04:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276087</guid>
            <link>https://www.oschina.net/news/276087</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[OSI 報告：從歷史角度看 DOSP 做法]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">Open Source Initiative (OSI) 於日前發佈了一份名為「<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.opensource.org%2Fa-historic-view-of-the-practice-to-delay-releasing-open-source-software-osis-report%2F" target="_blank">Delayed Open Source Publication: A Survey of Historical and Current Practices</a>」的新報告，深入研究了 DOSP 的歷史、模式以及發展趨勢。</span></p><p><span style="color:#000000">延遲開源發佈 (DOSP) 是是首先在專有許可證下分發或公開部署軟件，然後以開源許可證有計劃地發佈該軟件源代碼的做法；Business Source License (BSL) 就是一種廣為人知的 DOSP 許可。</span></p><p><span style="color:#000000">在整個開源軟件歷史中，軟件生產商都一直在實踐 DOSP；報告收集了一些示例，並對其進行分類以進行分析。</span></p><p><img height="386" src="https://oscimg.oschina.net/oscnet/up-1d9caa78ae4188bd65c15762117db68688e.png" width="300" referrerpolicy="no-referrer"></p><p><span style="color:#000000">最早的 DOSP 實例之一是 1998 年左右根據"Aladdin Free Public License"發佈的 Aladdin GhostScript，後來過渡到同時採用專有許可和 GPL 的發佈模型。KDE 的 Qt 庫也是一個鮮明的示例，它將 DOSP 作為防止潛在開發中止的一種保障措施。Qt 的許可歷史很複雜，如今其可以在商業和開源 GPL 2.0、GPL 3.0 和 LGPL 3.0 許可下使用。</span></p><p><span style="color:#000000">研究人員<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fthenewstack.io%2Fdelayed-open-source-publication-emerges-as-open-source-rival%2F" target="_blank">發現</a> DOSP 大致有 3 種類型：</span></p><ul><li><span style="color:#000000">Unconditional scheduled relicensing。這種直接的方法涉及在過渡到開源許可之前預先定義的時間延遲。</span></li><li><span style="color:#000000">Event-driven relicensing。在這種情況下，開源發佈與特定事件相關聯，比如發佈新的專有版本，促使其前身開源。雖然這種方式曾經很常見，但現在已經很少使用了。</span></li><li><span style="color:#000000">Conditional relicensing。這種類型取決於某些條件，例如在轉向開源之前獲得資金或找到合適的非營利組織。但這個承諾可能會存在不會兑現的風險。</span></li></ul><p><span style="color:#000000">與 DOSP 相關的一個變種是 "visible source"或 "source available"。在這些模型中，源代碼通常是可用的，但沒有 Open Source Definition (OSD) 所保證的自由。近期比較著名的例子就是 Meta 的 AI 大語言模型 Llama 2 Community License，其代碼是可用的，但商業使用受到限制。</span></p><p><span style="color:#000000">OSI 研究人員發現，在 DOSP 早期，DOSP"通常是為了壟斷直接的商業收入：許可證將授予開源所需的大部分權限，但關鍵是不允許商業使用軟件"。"這一限制適用於包括用户在內的所有下游被許可方，而不僅僅是開發者。</span></p><p><span style="color:#000000">"然而，最近一些 DOSP 許可證是為了防止任何被許可人在與某些特定類型的軟件競爭的產品或服務中使用該軟件，而這些軟件對許可人來説具有重要的戰略意義，與直接收入無關。"</span></p><p><span style="color:#000000">例如，為 MariaDB 編寫的 BSL 1.1 不允許在生產中使用許可代碼，除非許可人使用"Additional Use Grant (AUG)"機制。但&nbsp;</span><span style="background-color:#ffffff; color:#222222">AUG 因公司而異，也正因如此，</span><span style="background-color:#ffffff; color:#142640">每個 BSL 實例實際上都是一個本質上不同的許可證。</span></p><p><span style="color:#000000">如今，BSL 正在興起。HashiCorp 在去年宣佈變更核心產品的開源協議，從 MPL 2.0 遷移到 BSL 1.1，CouchBase、DragonflyDB 和 ArangoDB 等十來個項目都也使用了 BSL 協議。</span></p><p><span style="color:#000000">除了 DOSP 許可證，MongoDB 和 Redis 等幾個面向雲的軟件項目在過去幾年中也放棄了開源許可證，轉而採用帶有非競爭條款的許可證 (如 SSPL)。</span></p><p><span style="color:#000000">研究認為，DOSP 是企業用來保持商業優勢，同時試圖儘可能多地保留開源的優勢的一種方式。但隨着延遲的增加，開源的好處也會越來越少。探索這些好處與獨佔利用期限之間的權衡是未來值得研究的方向。此外，DOSP 的實驗和多樣性也都比我們所意識到的要多得多--嘗試 DOSP 的項目、以及嘗試的方式都要遠遠多出想象。</span></p><p><span style="color:#000000">報告還提出了一些未來值得繼續研究的方向，包括：AGPL 與 DOSP 許可對比、對外部貢獻的影響、首次發佈開源代碼後的重新授權等等。</span></p><p><span style="color:#000000">更多詳情可<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopensource.org%2Fdelayed-open-source-publication%2F" target="_blank">查看完整報告</a>。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 18 Jan 2024 08:39:06 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276084/delayed-open-source-publication-osi-report</guid>
            <link>https://www.oschina.net/news/276084/delayed-open-source-publication-osi-report</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[雲風宣佈開源自研遊戲引擎 Ant Engine]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>知名遊戲開發者雲風昨天宣佈開源遊戲引擎 Ant Engine。</p><blockquote><p><img src="https://oscimg.oschina.net/oscnet/up-23bf9834f7a41a24e60e8e09ce41c348727.png" referrerpolicy="no-referrer"></p><p>via<em><u>&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftwitter.com%2Fcloudwu%2Fstatus%2F1747509339752116544" target="_blank">https://twitter.com/cloudwu/status/1747509339752116544</a></u></em></p></blockquote><p>雲風表示其所在公司已批准 Ant Engine 的開源申請，倉庫已對外開放，但現在尚未正式發佈，文檔、示例等均待在&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fejoy%2Fant%2Fwiki" target="_blank">Wiki</a>&nbsp;上逐步完善，遊戲倉庫將於年後公開。他還説道，Ant Engine 已經開發了 6 年，其團隊使用這個引擎開發的遊戲有一年曆史，技術部分已經全部完成（遊戲體驗部分還需要調整），性能方面超出預期。</p><p>Ant Engine 目前只有 iOS 版本完全可用。引擎可以在 Windows 上運行，但缺乏一些和 PC 相關的支持（比如接入 Steam ，更好的鍵盤鼠標支持）。Mac 版本略有不足，Android 版本尚未完成。</p><p><strong><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.codingnow.com%2F2024%2F01%2Fant_engine_open_source.html" target="_blank">雲風介紹道</a></u></strong>，<strong>Ant Engine 基於 Lua 開發</strong>，有極低的理解成本，和極高的動態可定製性。他還表示：「以往基於 Lua 這類動態語言開發的基礎設施中，最難解決是性能問題，而性能恰巧又已被 ANT 解決的相當不錯。ANT 在手機上有極好的性能，我們用它開發的遊戲，在極其複雜的場景下，iPhone 12 上依然可以小於每幀 10ms 的速度渲染。對於同等複雜度的場景，Unity 實現同等的效率將非常困難。」</p><ul><li>Ant Engine 技術特點：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fejoy%2Fant%2Fwiki%2FTechnicalFeatures" target="_blank">https://github.com/ejoy/ant/wiki/TechnicalFeatures</a></li><li>Ant Engine 的虛擬文件系統：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fejoy%2Fant%2Fwiki%2FVFS" target="_blank">https://github.com/ejoy/ant/wiki/VFS</a></li><li>Ant Engine&nbsp;的包系統：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fejoy%2Fant%2Fwiki%2FPackage" target="_blank">https://github.com/ejoy/ant/wiki/Package</a></li></ul><hr><p>吳雲洋（Cloud），網名雲風，畢業於中南大學，原網易遊戲核心成員、杭州研究中心總監，是網易《大話西遊》、《夢幻西遊》等遊戲的重要開發者。2011 年 9 月 5 日宣佈已從網易辭職。</p><p>雲風 GitHub 主頁：<em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcloudwu" target="_blank">https://github.com/cloudwu</a></u></em></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 18 Jan 2024 07:48:35 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276078/cloudwu-ant-engine-open-source</guid>
            <link>https://www.oschina.net/news/276078/cloudwu-ant-engine-open-source</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[RWKV 元始智能完成種子輪融資，非 Transformer 架構的開源大語言模型]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>元始智能是一家國產開源非 Transformer 架構大語言模型提供商，其核心產品<strong>RWKV</strong>兼具 Transformer 和 RNN 的優勢：推理效率高且恆定，顯存佔用少且恆定，支持無限上下文，對芯片友好。</p><p>近日，RWKV 元始智能<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2F7XpIuQ_sNQNzMNOqZajp3Q" target="_blank">完成種子輪融資</a></u>，投資方為陸奇於 2018 年創立的奇績創壇和某匿名投資者。目前元始智能已開始繼續融第二輪。</p><p>RWKV 是國產開源的首個非 Transformer 架構的大語言模型，目前已經迭代到第六代 RWKV-6。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-536b34de46699fb3de48f5d00644dded7b7.png" referrerpolicy="no-referrer"></p><p>RWKV 作者彭博在 2022 年 5 月開始訓練 RWKV-2，當時只有 1 億（100M）參數規模，後續在 2023 年 3 月訓練了 RWKV-4 140 億（14B）參數版本。</p><p>RWKV-5 的 15 億和 30 億參數版本已發佈，且 70 億參數版本會在 2024 年 1 月發佈。而 RWKV-6 的 15 億和 30 億參數版本將在 2024 年 2 月發佈，然後將繼續訓練 70 億和 140 億參數版本。</p><p>RWKV-5 和 RWKV-6 系列的特點是支持全球 100+種語言，也支持幾十種編程語言，目前可以在 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.rwkv.com%2F" target="_blank">https://www.rwkv.com/ </a>體驗在線 Demo。</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 18 Jan 2024 06:48:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276071</guid>
            <link>https://www.oschina.net/news/276071</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[智譜 AI 推出新一代基座模型 GLM-4，發起大模型開源基金]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>2024 年 01 月 16 日，在「智譜 AI 技術開放日 (Zhipu DevDay)」上，智譜 AI 發佈新一代基座大模型 GLM-4，據稱其整體性能相比 GLM3 全面提升 60%，逼近 GPT-4。</p><p><img src="https://oscimg.oschina.net/oscnet/up-ec790242fcd97c4ae3b363227a23e2c4e15.png" referrerpolicy="no-referrer"></p><p>GLM-4 亮點：</p><ul><li>支持更長上下文，單次提示詞能處理的文本可達 300 頁，上下文窗口長度最高達 128K</li><li>更強的多模態，文生圖和多模態理解得到增強</li><li>支持處理 Excel、PDF、PPT 等格式的文件</li><li>可自動調用代碼解釋器進行復雜的方程或微積分求解</li><li>支持更快推理速度，更多併發，大大降低推理成本</li><li>增強了智能體能力</li></ul><p>智譜 AI 還發布了 All Tools、GLMs、MaaS API、大模型科研基金、大模型開源基金以及「Z 計劃」創業基金等內容。</p><p>其中「大模型開源基金」包括三個「一千」：</p><ul><li>第一個「一千」，是 1000 張卡。智譜 AI 將為大模型開源社區提供一千張卡，助力開源開發；</li><li>第二個「一千」，是 1000 萬人民幣。智譜 AI 將提供 1000 萬元的現金用來支持與大模型相關的開源項目。</li><li>第三個「一千」是 1000 億 tokens。智譜 AI 將為優秀的開源開發者提供 1000 億免費 API tokens。</li></ul><p><img src="https://oscimg.oschina.net/oscnet/up-59f5243472f2ad88a4dcdaa6399e4738afc.png" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 18 Jan 2024 06:08:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276067</guid>
            <link>https://www.oschina.net/news/276067</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[操作教程｜JumpServer 堡壘機結合 Ansible 進行批量系統初始化]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#000000; text-align:start"><br> 運維人員常常需要對資產進行系統初始化的操作，而初始化服務器又是一項繁瑣的工作，需要花費運維人員大量的時間和精力。為了提高效率，許多組織會使用自動化工具和腳本來簡化這些任務。自動化工具的運用可以大幅降低運維人員的工作量，同時也能有效規避出錯的風險。</p><p style="color:#000000; text-align:start">Ansible 作為近年來十分火爆的一款開源運維自動化工具，可以幫助管理人員簡化系統配置、應用部署和任務執行等操作。同時，Ansible 也可以結合 JumpServer 作為批量資產運維工具，進行批量系統初始化操作，能夠很好地滿足廣大運維人員的實際需求。</p><p style="color:#000000; text-align:start">本文將介紹<strong>通過 JumpServer 內置的 Ansible 模塊批量初始化 Linux 服務器</strong>的具體方法，希望對廣大企業的運維人員提高運維管理效率有所幫助。</p><p style="color:#000000; text-align:start"><em><strong>一、Ansible 簡介</strong></em></p><p style="color:#000000; text-align:start">Ansible 是自動化運維領域最為常用的工具之一。它基於 Python 語言開發，集合了眾多運維工具（例如 Puppet、Cfengine、Chef、Func、Fabric）的優點，操作簡單，功能強大，支持批量系統配置、批量程序部署、批量運行命令等功能。</p><p style="color:#000000; text-align:start">通過 Ansible 實現運維自動化，能夠提高運維工程師的工作效率，減少人為失誤。Ansible 本身集成了非常豐富的模塊可以實現各種管理操作，並且能夠與多個平台進行交互對接。</p><p style="color:#000000; text-align:start">Playbook 模式（即劇本模式）是 Ansible 的主要管理方式，也是 Ansible 功能強大的關鍵所在。Playbook 模式是通過多個 Task（即任務）集合來完成某類功能的，例如 Web 服務的安裝部署、數據庫服務器的批量備份等，可以簡單地把 Playbook 理解為通過組合多條「<em>ad-hoc</em>」操作的配置文件。</p><p style="color:#000000; text-align:start"><img alt="" height="607" src="https://oscimg.oschina.net/oscnet/up-ec97596bbe3c49a8c994571701019aeee95.png" width="1080" referrerpolicy="no-referrer"></p><p style="color:#000000; text-align:start"><em><strong>二、實施方案</strong></em></p><p style="color:#000000; text-align:start">JumpServer 作為運維安全審計管理平台，本身內置 Ansible 模塊，可以實現對服務器等資產的安全管控。用户通過 JumpServer 的認證和授權功能，獲得相應權限後才能使用 Ansible 對目標主機進行操作，確保了操作的安全性。</p><p style="color:#000000; text-align:start">同時，Ansible 可以通過 JumpServer 來管理和執行各種任務，例如配置管理、軟件部署、批量命令執行等，簡化了操作流程。<strong>結合 Ansible 和 JumpServer 堡壘機，可以實現對服務器的中心化管理，提高系統的安全性和運維效率，提升企業的運維管理能力。</strong></p><p style="color:#000000; text-align:start"><strong><span style="color:#28937c">1. 準備工作</span></strong></p><p style="color:#000000; text-align:start"><span style="color:#3e3e3e">■</span><span>&nbsp;</span>準備一台機器，部署 JumpServer 運維安全審計系統；</p><p style="color:#000000; text-align:start">■ 準備若干台 Linux 服務器，用於測試批量系統初始化操作是否成功。</p><p style="color:#000000; text-align:start"><strong><span style="color:#279a81">2. 創建 Playbook 作業</span></strong></p><p style="color:#000000; text-align:start">■ 登錄 JumpServer 堡壘機，進入工作台界面；</p><p style="color:#000000; text-align:start"><img alt="" height="1474" src="https://oscimg.oschina.net/oscnet/up-82354437e26c9b76f3c5992f00b0bbf3d3f.png" width="2936" referrerpolicy="no-referrer"></p><p style="color:#000000; text-align:start"><span>▲ 圖 1 登錄 JumpServer 堡壘機</span></p><p style="color:#000000; text-align:start"><img alt="" height="924" src="https://oscimg.oschina.net/oscnet/up-abf08146ebcada9c11197b445ff8a2a98a3.png" width="1872" referrerpolicy="no-referrer"></p><p style="color:#000000; text-align:start"><span>▲ 圖 2 進入 JumpServer 工作台界面</span></p><p style="color:#000000; text-align:start">■ 在 JumpServer 中選擇「作業中心」→「模版管理」→「Playbook 管理」，創建 Playbook 模板；</p><p style="color:#000000; text-align:start"><img alt="" height="924" src="https://oscimg.oschina.net/oscnet/up-ff732debcb7b6a9d2fb42ba36cc207470c8.png" width="1872" referrerpolicy="no-referrer"></p><p style="color:#000000; text-align:start"><span>▲ 圖 3 創建 Playbook 模板</span></p><p style="color:#000000; text-align:start"><img alt="" height="924" src="https://oscimg.oschina.net/oscnet/up-dfdbd4fb2f6ab209505de32fde75836a7b2.png" width="1872" referrerpolicy="no-referrer"></p><p style="color:#000000; text-align:start"><span>▲ 圖 4 創建模板詳情</span></p><p style="color:#000000; text-align:start">■ 創建完成之後，管理頁面會出現新創建的模板信息，並填寫模板內容；</p><p style="color:#000000; text-align:start"><img alt="" height="924" src="https://oscimg.oschina.net/oscnet/up-d34497b1cbbb7896422ff3d523b0a76dd73.png" width="1872" referrerpolicy="no-referrer"></p><p style="color:#000000; text-align:start"><span>▲ 圖 5 新創建的模板</span></p><p style="color:#000000; text-align:start"><img alt="" height="924" src="https://oscimg.oschina.net/oscnet/up-6a04c7fdc288b0184cf3eb08899e775994e.png" width="1872" referrerpolicy="no-referrer"></p><p style="color:#000000; text-align:start"><span>▲ 圖 6 填寫模板內容</span></p><p style="color:#000000; text-align:start">Playbook 具體內容如下：</p><pre><code>[root@v3 ~]# cat main.yml
## write your playbook here
---
- hosts: all
  vars:
  remote_user:
 
  tasks:
  - name: 關閉防火牆
    service: name=firewalld state=stopped enabled=no
  
  - name: 關閉 selinux
    lineinfile:
      dest: /etc/selinux/config
      regexp: "^SELINUX="
      line: "SELINUX=disabled"
   
  - name: 即時生效
    shell: setenforce 0 ; swapoff -a
  
  - name: 關閉 swap
    lineinfile:
      dest: /etc/fstab
      regexp: ".*swap"
      line: ""
  
  - name: 拷貝時區
    copy: src=/usr/share/zoneinfo/Asia/Shanghai dest=/etc/localtime
  
  - name: 更新源
    shell: yum repolist
   
  - name: 安裝 lrzsz
    yum: name=lrzsz 
  
  - name: 安裝 net-tools
    yum: name=net-tools 
  
  - name: 安裝 wget
    yum: name=wget 
  
  - name: 安裝 gcc
    yum: name=gcc 
  
  - name: 安裝開發者工具庫
    yum: name='@Development Tools'
  
  - name: 更改內核最大連接數
    copy: src=/etc/security/limits.conf dest=/etc/security/limits.conf 
  
  - name: 設置 java 連接數
    shell: sed -i '$a vm.max_map_count=262144' /etc/sysctl.conf ; sysctl -p</code></pre><p style="color:#000000; text-align:start">■ 在 JumpServer 中選擇「作業中心」→「作業管理」，創建 Playbook 作業；</p><p style="color:#000000; text-align:start"><img alt="" height="924" src="https://oscimg.oschina.net/oscnet/up-3a1e53325ee0a2f9877ccd8049c04b00aa1.png" width="1872" referrerpolicy="no-referrer"></p><p style="color:#000000; text-align:start"><span>▲ 圖 7 創建 Playbook 作業</span></p><p style="color:#000000; text-align:start">■ 按照如下圖示填寫所需的信息；</p><p style="color:#000000; text-align:start"><img alt="" height="924" src="https://oscimg.oschina.net/oscnet/up-0806c230c209c2edb080e5d151d71622652.png" width="1872" referrerpolicy="no-referrer"></p><p style="color:#000000; text-align:start"><span>▲ 圖 8 填寫作業信息</span></p><p style="color:#000000; text-align:start">■ Playbook 作業創建成功後，運行 Playbook 作業進行測試；</p><p style="color:#000000; text-align:start"><img alt="" height="924" src="https://oscimg.oschina.net/oscnet/up-b412d1b6ae03bcb0fda9a3e8a2b718e7267.png" width="1872" referrerpolicy="no-referrer"></p><p style="color:#000000; text-align:start"><span>▲ 圖 9 運行新創建的作業</span></p><p style="color:#000000; text-align:start">■ 運行成功。在 JumpServer 中創建 Playbook 模板後，如果需要新增服務器，運維人員只需要創建一個 Playbook 作業即可快速完成資產的系統初始化，輕鬆解放雙手。</p><p style="color:#000000; text-align:start"><img alt="" height="600" src="https://oscimg.oschina.net/oscnet/up-9e4dc8f829c9be4ddaecbc8f611080d5aa1.png" width="900" referrerpolicy="no-referrer"></p><p style="color:#000000; text-align:start"><span>▲ 圖 10 成功執行 Playbook 作業</span></p><p>&nbsp;</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 18 Jan 2024 03:45:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276059</guid>
            <link>https://www.oschina.net/news/276059</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[紅帽正在開發 AI 工具]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Red Hat 工程師 Jiri Kyjovsky&nbsp;<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flists.fedoraproject.org%2Farchives%2Flist%2Fdevel%40lists.fedoraproject.org%2Fthread%2FMHUCYUJS7VZBESFYTALNAVPARK4RHPQO%2F" target="_blank">透露稱</a></u>，他們正在開發一款名為"<strong>Log Detective</strong>"的 AI 工具，通過人工智能模型來幫助分析 RPM 包構建失敗的原因。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-4011afdd7b7b4264fa60f8d2096ddb05293.png" referrerpolicy="no-referrer"></p><p>via&nbsp;<em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flog-detective.com%2F%23about" target="_blank">https://log-detective.com/</a></u></em></p><p>該工具將利用 AI 模型來識別和解釋構建失敗，並提供簡單的建議以解決問題。Log Detective 的目標是使 RPM 打包人員更容易找出構建失敗的原因。他們正在訓練 AI 模型，以便它能夠理解 RPM 構建日誌，並用簡單的語言解釋失敗原因，並提供修復建議。</p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flog-detective.com%2F" target="_blank">Log Detective 官網寫道</a>：</p><blockquote><p>每個構建都會產生數千行輸出，分割在多個日誌文件中。相關的錯誤消息可能在任何地方。這就像大海撈針一樣。</p><p>經驗豐富的打包者有一種直覺，錯誤消息最有可能出現在哪裏，但無論如何，這個過程都很乏味。新手則常常被複雜性所淹沒，完全錯過錯誤消息。</p><p>Log Detective 通過訓練 AI 模型來理解 RPM 構建日誌，並用簡單的語言解釋錯誤，提供修復方法的建議，開發者根本不需要打開日誌。</p></blockquote></div>
                                    ]]>
            </description>
            <pubDate>Thu, 18 Jan 2024 03:34:01 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276057/red-hat-ai-log-detective</guid>
            <link>https://www.oschina.net/news/276057/red-hat-ai-log-detective</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Linus Torvalds 重新開始為 Linux 6.8 合併新代碼]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>上週末，Linus Torvalds 所居住的俄勒岡州波特蘭地區<u><a href="https://www.oschina.net/news/275878/linux-6-8-merge-window-hiatus">遭遇嚴重冬季風暴</a></u>，導致互聯網和電力中斷。因此在 Linux 6.8 合併窗口期間，Linus 的 Git 合併工作被迫中斷近五天。但從內核倉庫的最新動態來看，合併工作現已重新啓動。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-597e98686d727d741b06dac623483c6803b.png" referrerpolicy="no-referrer"></p><p>Linus Torvalds 今天在 social.kernel.org 上<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsocial.kernel.org%2Fusers%2Ftorvalds" target="_blank">發佈的最後一條消息稱</a></u>，他的第五天"休假"正在進行，他所在地區希望今晚之前恢復供電，儘管昨天也有過類似的承諾，但沒有實現。但在這不不久後，他開始為 Linux 6.8 合併新代碼：</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-7160aba63cd79c783f54e5bd0d0f2f11d6a.png" referrerpolicy="no-referrer"></p><p>到目前為止，他還沒有在 Linux 內核郵件列表上宣佈是否需要延長合併窗口，或者因為 4~5 天的停機時間而做其他改動，但至少內核樹上有了新代碼。</p><p>Linux 6.8 將帶來許多新功能。如果原計劃不變，Linux 6.8-rc1 應該會在本週日發佈，標誌着合併窗口的結束，而穩定版 6.8 內核應該會在 3 月中旬發佈。</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 18 Jan 2024 03:05:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276056/linux-6-8-merges-resume</guid>
            <link>https://www.oschina.net/news/276056/linux-6-8-merges-resume</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[網易有道自研知識庫問答引擎 QAnything 開源]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>網易有道<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FkFOqYqhpy0Q4OvvGul-3qA" target="_blank">宣佈</a>自研的知識庫問答引擎 QAnything 正式開源：Q 是 question，A 是 answer，QAnything 的目標在於「萬物皆可問」。</p><p>除了可以調用雲端大模型服務，還支持純本地部署。系統支持 word、ppt、excel、pdf、圖片等多種文檔格式，直接導入進去即可像"ChatGPT"一樣問答。</p><p><img alt="" height="443" src="https://oscimg.oschina.net/oscnet/up-dd1c3f39b8916876b15ad0cc25aeaa24bfa.png" width="500" referrerpolicy="no-referrer"></p><p>（QAnything 系統架構圖）</p><p>QAnything 的主要原理是基於檢索增強的生成（Retrieval Augmented Generation，簡稱 RAG）。作為有道自研的 RAG 引擎，QAnything 結合了用户私有數據和大模型的優勢——用户的任何內容，以任意的形式存在，比如各種格式的文檔，音頻，數據庫等，都可以在 QAnything 的支持下，變成可以針對其內容進行問答的使用方式，通過這個技術框架用户可以很方便地搭建自己的智能知識助手。</p><p>值得一提的是，QAnything 是一套完整的 RAG 系統，包括專門優化的自研的 embedding 和 rerank 模型，微調後的 LLM，優化後的推理代碼，向量數據庫，以及一個立即上手可用的前端。所有的算法模型（包括 7B 大模型+embedding/rerank+OCR）佔用顯存不超過 16G。</p><p>如今，QAnything 已在有道翻譯文檔問答、有道速讀及有道內部業務的客服系統等多個產品中進行了應用。</p><p><img height="225" src="https://oscimg.oschina.net/oscnet/up-6945d43fa219cdaa7b5009ef9ffeb614e4e.png" width="500" referrerpolicy="no-referrer"></p><p><span style="background-color:#ffffff; color:rgba(0, 0, 0, 0.9)">公告表示，目前 QAnything 項目還在不斷迭代，歡迎大家參與開發，並給予更多反饋。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 18 Jan 2024 02:36:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276054</guid>
            <link>https://www.oschina.net/news/276054</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Rufus 4.4 發佈，開源 USB 啓動盤製作工具]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="font-family:-apple-system,BlinkMacSystemFont,&quot;Apple Color Emoji&quot;,&quot;Segoe UI Emoji&quot;,&quot;Segoe UI Symbol&quot;,&quot;Segoe UI&quot;,&quot;PingFang SC&quot;,&quot;Hiragino Sans GB&quot;,&quot;Microsoft YaHei&quot;,&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif">Rufus 4.4 已發佈，此版本修復了此前版本中存在的諸多 Bug，進一步增強了兼容性，並帶來了多項改進。</span></p><blockquote><p>Rufus 是一款格式化和創建 USB 啓動盤的輔助工具，適用於以下場景：</p><ul><li>需要將可引導 ISO (Windows、Linux、UEFI 等) 刻錄到 USB 安裝媒介的情況</li><li>需要處理未安裝操作系統的設備的情況</li><li>需要在 DOS 環境下刷寫 BIOS 或其他固件的情況</li><li>需要運行低級工具的情況</li></ul></blockquote><p>4.4&nbsp;新增 GRUB 2.12（Unix 操作系統的引導加載器）支持，並針對某些 UEFI bootloaders 中包含損壞符號鏈接的 Linux 發行版，提供變通解決方案。此外還修復了處理 .FFU 鏡像（即保存鏡像時）時的崩潰問題，並不再列出 Microsoft Dev Drives（這是為開發人員相關任務和工作流程優化的特殊 Windows 11 分區），此外改善了對 SDCX 讀卡器的支持。</p><p>主要變化：</p><ul><li>為使用損壞的符號鏈接作為 UEFI 引導加載器的發行版（如 Linux Mint 21.3）添加變通方式。</li><li>添加對 GRUB 2.12 的支持。</li><li>修復保存 .ffu 鏡像時遇到崩潰問題。</li><li>修復某些 Linux ISO 在 MBR 模式下無法添加 UEFI:NTFS 分區的問題。</li><li>防止列出 Microsoft Dev Drives。</li><li>改善對 SDXC 讀卡器的支持。</li><li>通過將數據區域的起點對齊至 1 MB，改進大型 FAT32 格式化。</li></ul><p>下載地址：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frufus.ie%2Fzh%2F" target="_blank">https://rufus.ie/zh/</a></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 18 Jan 2024 02:28:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276053/rufus-4-4-released</guid>
            <link>https://www.oschina.net/news/276053/rufus-4-4-released</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[WeChatMsg - 開源微信聊天記錄管理工具]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>WeChatMsg 是一款開源的微信聊天管理工具。</p><div><a href="https://memotrace.lc044.love/"><img height="240" src="https://memotrace.lc044.love/img/logo%20-%20%E5%89%AF%E6%9C%AC.png" referrerpolicy="no-referrer"></a></div><blockquote><div>&nbsp;</div><h2>前言</h2><div><p>我深信有意義的不是微信，而是隱藏在對話框背後的一個個<strong>深刻故事</strong>。未來，每個人都能擁有 AI 的陪伴，而你的數據能夠賦予它有關於你過去的珍貴記憶。我希望每個人都有將自己的生活痕跡👨‍👩‍👦👚🥗🏠️🚴🧋⛹️🛌🛀留存的權利，而不是遺忘💀。</p><p><strong>所以《留痕》</strong></p></div></blockquote><h2 style="text-align:start">🍉功能</h2><ul><li>還原微信聊天界面
<ul><li>🗨文本✅</li><li>🏝圖片✅</li><li>🐻‍❄️表情包✅</li><li>拍一拍等系統消息✅</li></ul></li><li>導出聊天記錄
<ul><li>sqlite 數據庫✅</li><li>HTML(文本、圖片、視頻、表情包、語音、文件、系統消息)✅</li><li>CSV 文檔✅</li><li>TXT 文檔✅</li><li>Word 文檔✅</li></ul></li><li>分析聊天數據，做成可視化年報 (急需前端大佬提供優質模板)</li><li>🔥<strong>項目持續更新中</strong></li><li>開發計劃
<ul><li>自主選擇年度報告年份</li><li>一鍵導出全部表情包、文件、圖片、視頻、語音</li><li>合併多個備份數據</li><li>批量導出數據</li><li>個人年度報告</li><li>羣組年度報告</li><li>按日期、關鍵詞索引</li></ul></li><li>小夥伴們想要其他功能可以留言哦📬</li><li>🔥項目正處於並將長期處於發展階段，給我一些時間♾️，你所期望的未來都會實現</li></ul></div>
                                                                ]]>
            </description>
            <pubDate>Thu, 18 Jan 2024 02:18:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/p/wechatmsg</guid>
            <link>https://www.oschina.net/p/wechatmsg</link>
        </item>
        <item>
            <title>
                <![CDATA[好好的 「代碼優化」 是怎麼一步步變成 「過度設計」 的]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="rich_media_content js_underline_content
                       autoTypeSetting24psection
            " id="js_content"><section style="margin-bottom: 8px;outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);text-align: center;visibility: visible;" data-mpa-powered-by="yiban.io"><img class="rich_pages wxw-img __bg_gif" data-backh="96" data-backw="578" data-cropselx1="0" data-cropselx2="578" data-cropsely1="0" data-cropsely2="96" data-imgfileid="503042843" data-ratio="0.16666666666666666" src="https://oscimg.oschina.net/oscnet/0cd486c9-de1a-49c7-a79b-2306f73c35c6.gif" data-type="gif" data-w="636" style="outline: 0px;letter-spacing: 0.544px;font-size: var(--articleFontsize);border-radius: 8px;text-align: justify;width: 100%;visibility: visible !important;background-size: 16px !important;height: auto;" referrerpolicy="no-referrer"><br style="outline: 0px;visibility: visible;"></section><section data-mpa-template="t" data-mpa-template-id="502" data-mpa-category="模板" style="outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);visibility: visible;"><section data-mpa-category="模板" data-mid="" style="padding-right: 1px;padding-left: 1px;outline: 0px;width: 677px;display: flex;justify-content: flex-start;align-items: center;flex-direction: column;visibility: visible;"><section data-mid="" style="outline: 0px;letter-spacing: 0.544px;width: 675px;display: grid;grid-template-columns: 26px auto;visibility: visible;"><section data-mid="" style="outline: 0px;width: 26px;height: 14px;display: flex;justify-content: center;align-items: center;align-self: center;visibility: visible;"><br style="outline: 0px;visibility: visible;"></section><section data-mid="" style="padding-left: 7px;outline: 0px;display: flex;justify-content: flex-start;align-items: center;visibility: visible;"><section data-mid="" style="margin-right: 7px;outline: 0px;text-align: left;visibility: visible;"><p data-mid="" style="outline: 0px;width: 0px;font-size: 14px;font-family: PingFangSC-Semibold, &quot;PingFang SC&quot;;font-weight: bold;color: rgb(58, 92, 244);line-height: 20px;visibility: visible;"><br style="outline: 0px;visibility: visible;"></p></section><section data-mid="" style="margin-bottom: 4px;outline: 0px;width: 635px;height: 1px;border-top: 1px solid rgb(58, 92, 244);align-self: flex-end;visibility: visible;"><br style="outline: 0px;visibility: visible;"></section></section></section><section data-mid="" style="padding: 7px 14px 9px 19px;outline: 0px;width: 675px;text-align: left;border-bottom: 1px solid rgb(58, 92, 244);visibility: visible;"><p style="margin-top: 8px;margin-bottom: 8px;outline: 0px;min-height: 24px;letter-spacing: 0.578px;text-align: justify;visibility: visible;line-height: 1.75em;"><span style="color: rgb(62, 62, 62);font-size: 15px;letter-spacing: 0.578px;text-wrap: wrap;">有一天 Review 師妹的代碼，看到一行很難看的代碼，畢竟師妹剛開始轉 JAVA，一些書寫小習慣還是要養成，所以錙銖必較還是有必要的，於是給出了一些優化思路的建議，以及為什麼要這麼做。建議完後，我並沒有停下」追求極致「的腳步，隨着不斷的思考，發現這段代碼的優化慢慢變得五花八門起來了，完成了一次「代碼優化」到「過度設計」的典型思考過程，這過程中涉及了很多 Java 的語法糖及設計模式的東西，很典型，能啓發思考，遂記錄下來。</span></p></section></section></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><br style="outline: 0px;visibility: visible;"></section><section style="margin-bottom: 0px;outline: 0px;box-sizing: inherit;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);color: rgba(25, 26, 31, 0.9);font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 16px;text-align: center;visibility: visible;line-height: 1.75em;"><span style="outline: 0px;visibility: visible;font-size: 15px;letter-spacing: 1px;"><img class="rich_pages wxw-img" data-imgfileid="503042840" data-ratio="0.3161764705882353" data-s="300,640" data-type="png" data-w="408" src="https://oscimg.oschina.net/oscnet/32fe6b4b-8bdc-4381-812a-d4d61bf97d58.png" style="outline: 0px;color: rgb(34, 34, 34);font-family: system-ui, -apple-system, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;visibility: visible !important;width: 113px !important;" referrerpolicy="no-referrer"></span></section><section style="margin-bottom: 0px;outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);color: rgb(34, 34, 34);text-align: center;visibility: visible;line-height: normal;"><span style="outline: 0px;color: rgb(3, 69, 255);font-family: -apple-system, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 18px;letter-spacing: 1px;visibility: visible;">一切的開始</span></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><br></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><span style="font-size: 15px;color: rgb(62, 62, 62);">起初是一段很簡單的代碼，開始僅僅是將外域的一些標識符轉換為域內的標識符。</span></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><br></section><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="cs"><code><span class="code-snippet_outer">public&nbsp;Integer&nbsp;parseSaleType(String&nbsp;saleTypeStr){</span></code><code><span class="code-snippet_outer">  if(saleTypeStr == null || saleTypeStr.equals("")){</span></code><code><span class="code-snippet_outer">    return null;</span></code><code><span class="code-snippet_outer">  }</span></code><code><span class="code-snippet_outer">  if(saleTypeStr.equals("JX")){</span></code><code><span class="code-snippet_outer">    return 1;</span></code><code><span class="code-snippet_outer">  }</span></code><code><span class="code-snippet_outer">  return null;</span></code><code><span class="code-snippet_outer">}</span></code></pre></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><br></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><span style="font-size: 15px;color: rgb(62, 62, 62);">邏輯上很簡單，實現的邏輯看上去也沒啥大問題，基本學校的老師也是這麼教的。</span></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><span style="font-size: 15px;color: rgb(62, 62, 62);"><br></span></section><section style="margin-bottom: 0px;outline: 0px;box-sizing: inherit;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);color: rgba(25, 26, 31, 0.9);font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 16px;text-align: center;visibility: visible;line-height: normal;"><span style="outline: 0px;font-size: 15px;letter-spacing: 1px;visibility: visible;"><img class="rich_pages wxw-img" data-imgfileid="503042842" data-ratio="0.3056872037914692" data-s="300,640" data-type="png" data-w="422" src="https://oscimg.oschina.net/oscnet/9766627e-6900-4974-8a8e-eabb92ae0829.png" style="outline: 0px;color: rgb(34, 34, 34);font-family: system-ui, -apple-system, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;visibility: visible !important;width: 117px !important;" referrerpolicy="no-referrer"></span></section><section style="margin-bottom: 0px;outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);color: rgb(34, 34, 34);text-align: center;visibility: visible;line-height: normal;"><span style="outline: 0px;font-family: -apple-system, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 18px;letter-spacing: 1px;visibility: visible;color: rgb(0, 17, 255);">語法規範</span></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><br></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;color: rgb(62, 62, 62);">但是嘛<span style="color: rgb(62, 62, 62);letter-spacing: 1px;">，不好看也容易犯錯誤，雞蛋裏挑骨頭也得挑，於是給出了幾個寫代碼的建議：</span></span></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></section><span id="OSC_h4_1"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong><strong style="outline: 0px;visibility: visible;"><span style="color: rgb(0, 17, 255);outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">有函數式方法的儘量用</span></strong></span></h4><section style="margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="color: rgb(0, 17, 255);outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;"><br></span></strong></span></section><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="javascript"><code><span class="code-snippet_outer"><span class="code-snippet__comment">//saleTypeStr == nullObjects.isNull(saleTypeStr)</span></span></code></pre></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><br></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><span style="font-size: 15px;color: rgb(62, 62, 62);">首先呢，雖然由於判斷 null 這麼寫不會報錯，但是按照常量寫==前面的要求，應該倒過來寫。另外，這種有 JDK 原生函數式的判斷方法，還是優先使用函數式的寫法，一來是有方法名比較直觀，另外也是方便之後熟練使用 Lamada，別寫出 .filter(x -&gt; null == x) 這樣的寫法，還是 .filter(Objects::isNull) 更可讀些。</span></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><span style="color: rgb(20, 20, 220);font-weight: bold;letter-spacing: 0.578px;background-color: rgb(255, 255, 255);font-family: -apple-system, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 16px;text-indent: 0em;"><br></span></section><span id="OSC_h4_2"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 8px;margin-bottom: 8px;text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;"><span style="outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong><strong style="outline: 0px;visibility: visible;"><span style="color: rgb(0, 17, 255);outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">判斷字符串為空不要自己寫容易漏邏輯，儘量使用現成的方法</span></strong></span></h4><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><br></section><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="bash"><code><span class="code-snippet_outer">//if(saleTypeStr&nbsp;==&nbsp;null&nbsp;||&nbsp;saleTypeStr.equals(""))</span></code><code><span class="code-snippet_outer">if(StringUtils.isBlank(saleTypeStr))</span></code></pre></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><br></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><span style="font-size: 15px;color: rgb(62, 62, 62);">雖然原方法裏無論判不判斷空字符或者空格字符都不會影響最終方法的表徵，但是從第一行想表達的判斷「字符串是不是為空」這件事來看，這行並不能判斷「空格字符」存在的情況，所以詞不達意，另外也趁機強化記憶下 isBlank 和 isEmpty 的區別。</span></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><span style="font-size: 15px;color: rgb(62, 62, 62);">org.apache.commons.lang3 裏有很多工具類，方法比較成熟邏輯也比較完整。</span></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><span style="font-size: 15px;color: rgb(62, 62, 62);">同理 org.apache.commons.collections4.CollectionUtils 還有一堆集合操作的工具。</span></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><span style="font-size: 15px;color: rgb(62, 62, 62);"><br></span></section><span id="OSC_h4_3"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 8px;margin-bottom: 8px;text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;"><span style="outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong><strong style="outline: 0px;visibility: visible;"><span style="color: rgb(0, 17, 255);outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">equals 判定，常量寫前面</span></strong></span></h4><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><br></section><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="bash"><code><span class="code-snippet_outer">//if(saleTypeStr.equals("JX"))</span></code><code><span class="code-snippet_outer">if("JX".equals(saleTypeStr))</span></code></pre></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><br></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><span style="font-size: 15px;color: rgb(62, 62, 62);">雖然前面判斷過 null，所以這裏並不會報空指針，但是但凡之後書寫前面漏了，這裏就開始報錯了。</span></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><br></section><span id="OSC_h4_4"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 8px;margin-bottom: 8px;text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;"><span style="outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong><strong style="outline: 0px;visibility: visible;"><span style="color: rgb(0, 17, 255);outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">少用魔法值，定義常量</span></strong></span></h4><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><strong style="color: rgb(62, 62, 62);font-size: 14px;letter-spacing: 0.034em;"></strong></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><br></section><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="java"><code><span class="code-snippet_outer">private&nbsp;static&nbsp;final&nbsp;String&nbsp;JX_SALE_TYPE_STR&nbsp;=&nbsp;"JX";</span></code><code><span class="code-snippet_outer">private static final Integer JX_SALE_TYPE_INT = 1;</span></code></pre></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><br></section><section style="line-height: 1.75em;margin-bottom: 8px;margin-top: 8px;"><span style="font-size: 15px;color: rgb(62, 62, 62);">但凡同一個魔法值在多處用，就怕漏改，所以收束定義在常量下，至少能保證全局引用的統一性。</span></section><section style="line-height: 1.75em;margin-bottom: 8px;margin-top: 8px;"><span style="font-size: 15px;color: rgb(62, 62, 62);"><br></span></section><span id="OSC_h4_5"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;margin-top: 8px;margin-bottom: 8px;"><span style="outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong><strong style="outline: 0px;visibility: visible;"><span style="color: rgb(0, 17, 255);outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">無狀態方法，可選擇定義為類靜態</span></strong></span></h4><p style="line-height: 1.75em;margin-top: 8px;margin-bottom: 8px;"><br></p><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="typescript"><code><span class="code-snippet_outer">//public&nbsp;Integer&nbsp;parseSaleType(String&nbsp;saleTypeStr)public static Integer parseSaleType(String saleTypeStr)</span></code></pre></section><section style="line-height: 1.75em;margin-bottom: 8px;margin-top: 8px;"><br></section><section style="line-height: 1.75em;margin-bottom: 8px;margin-top: 8px;"><span style="font-size: 15px;color: rgb(62, 62, 62);">方法本身跟所在類的實例對象狀態無關，且不會誘發線程安全問題，故符合被定義為 static 的條件，可先於對象創建在方法區，防止每個對象創建一次的時候，堆內存創建一次。</span></section><section data-mpa-template="t" mpa-from-tpl="t"><section style="margin: 33px auto;visibility: visible;" mpa-from-tpl="t"><section style="transform: scale(0.9);transform-origin: center center;box-sizing: border-box;visibility: visible;margin-top: 0px;margin-bottom: 0px;line-height: normal;"><section style="display: flex;flex-flow: row;text-align: center;justify-content: center;box-sizing: border-box;visibility: visible;" mpa-from-tpl="t"><section style="display: inline-block;vertical-align: middle;width: 156.797px;align-self: center;box-sizing: border-box;visibility: visible;" mpa-from-tpl="t"><section style="margin-top: 0.5em;margin-bottom: 0.5em;box-sizing: border-box;visibility: visible;" mpa-from-tpl="t"><section style="margin-bottom: 0px;outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;visibility: visible;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);text-align: center;line-height: normal;"><img class="rich_pages wxw-img" data-imgfileid="503042841" data-ratio="0.3056872037914692" data-s="300,640" src="https://oscimg.oschina.net/oscnet/3b57d41f-bf50-46bc-9f31-e741973316f3.png" data-type="png" data-w="422" style="outline: 0px;letter-spacing: 0.544px;font-size: 14px;visibility: visible !important;width: 117px !important;" referrerpolicy="no-referrer"></section><p style="outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);color: rgb(100, 99, 99);font-size: 15px;text-align: center;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="outline: 0px;font-family: -apple-system, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 18px;color: rgb(0, 17, 255);letter-spacing: 1px;">邏輯簡化</span></p></section></section></section></section></section></section><section style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="font-size: 15px;color: rgb(62, 62, 62);letter-spacing: 1px;">語法的問題強調完，就得再琢磨琢磨這段邏輯需不需要這麼多代碼來表述了，乍眼一看沒問題，但其實沒必要寫這麼多。</span></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 8px;"><span style="font-size: var(--articleFontsize);letter-spacing: 0.034em;text-align: left;"><br></span></section><span id="OSC_h4_6"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 0.5em;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;"><span style="outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong><strong style="outline: 0px;visibility: visible;"><span style="color: rgb(0, 17, 255);outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">明確主體邏輯</span></strong></span></h4><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 8px;"><strong style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: var(--articleFontsize);letter-spacing: 0.034em;"><span style="font-size: 15px;color: rgb(62, 62, 62);"><br></span></strong></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 8px;"><strong style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: var(--articleFontsize);letter-spacing: 0.034em;"><span style="font-size: 15px;color: rgb(62, 62, 62);">判斷入參有效性 -&gt; 處理核心邏輯 -&gt; 缺省返回</span></strong><span style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.034em;font-size: 15px;color: rgb(62, 62, 62);">，其實這個方法的構建思路是非常標準且合乎常理的，思考習慣很好，只是在這個簡單的方法場景不免邏輯有些冗餘。</span></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 8px;"><br></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 8px;"><span style="font-size: 15px;color: rgb(62, 62, 62);">其實再看這個方法，最核心的邏輯就是把字符串對應到數字上，其他不命中的情況返回 null 就可以了，那麼簡化邏輯後，為空判定其實可以去掉，直接變為：</span></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><br></section><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="java"><code><span class="code-snippet_outer">private&nbsp;static&nbsp;final&nbsp;String&nbsp;JX_SALE_TYPE_STR&nbsp;=&nbsp;"JX";</span></code><code><span class="code-snippet_outer">private static final Integer JX_SALE_TYPE_INT = 1;</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">public static Integer parseSaleType(String saleTypeStr){</span></code><code><span class="code-snippet_outer">  if(JX_SALE_TYPE_STR.equals(saleTypeStr)){</span></code><code><span class="code-snippet_outer">    return JX_SALE_TYPE_INT;</span></code><code><span class="code-snippet_outer">  }</span></code><code><span class="code-snippet_outer">  return null;</span></code><code><span class="code-snippet_outer">}</span></code></pre></section><section><section><section powered-by="xiumi.us"><p style="white-space: normal;margin-top: 0px;margin-bottom: 0px;"><strong style="letter-spacing: 0.034em;"><span style="font-size: 15px;"><br></span></strong></p><span id="OSC_h4_7"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 0.5em;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;"><span style="outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong><strong style="outline: 0px;visibility: visible;"><span style="color: rgb(0, 17, 255);outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">語法簡化：三元運算符</span></strong></span></h4><p><br></p></section></section><section style="margin-top: 0px;margin-bottom: 0px;"><span style="color: rgb(62, 62, 62);font-size: 15px;letter-spacing: 0.034em;">再仔細看下場景有沒有成熟的範式，【布爾式+返回值+非此即彼】，三元運算符可堪一用。</span></section></section><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="cs"><code><span class="code-snippet_outer">public static Integer parseSaleType(String saleTypeStr){</span></code><code><span class="code-snippet_outer">  return JX_SALE_TYPE_STR.equals(saleTypeStr) ? JX_SALE_TYPE_INT : null;</span></code><code><span class="code-snippet_outer">}</span></code></pre></section><section style="font-size: 15px;margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><section style="text-align: justify;justify-content: flex-start;margin: 10px 0%;display: flex;flex-flow: row;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: bottom;width: auto;min-width: 10%;flex: 0 0 auto;height: auto;align-self: flex-end;"><section powered-by="xiumi.us"><p style="white-space: normal;"><br></p><span id="OSC_h4_8"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 0.5em;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;"><span style="letter-spacing: 1px;"><span style="outline: 0px;visibility: visible;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong></span><strong style="color: rgb(0, 17, 255);letter-spacing: 1px;outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">語法簡化：Optional</span></strong></span></h4><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 0.5em;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;"><br></h4><span id="OSC_h4_9"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 0.5em;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;"><span style="font-size: 15px;">這個場景範式也滿足，【可能為空，有後續處理，有條件，有缺省值】，Optional 也算完美契合。</span></h4><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 0.5em;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;"><br></h4></section></section></section></section><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="cpp"><code><span class="code-snippet_outer">public static Integer parseSaleType(String saleTypeStr){</span></code><code><span class="code-snippet_outer">  Optional.ofNullable(saleTypeStr).filter(JX_SALE_TYPE_STR::equals).map(o -&gt; JX_SALE_TYPE_INT).orElse(null);</span></code><code><span class="code-snippet_outer">}</span></code></pre></section><p style="line-height: 1.75em;margin-top: 0px;margin-bottom: 8px;"><br></p><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;font-size: 15px;"><section powered-by="xiumi.us" style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;font-size: 15px;"><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;font-size: 15px;"><section powered-by="xiumi.us" style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;font-size: 15px;"><span id="OSC_h4_10"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 0.5em;text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;margin-bottom: 8px;"><span style="letter-spacing: 1px;"><span style="outline: 0px;visibility: visible;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong></span><strong style="color: rgb(0, 17, 255);outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">方法獨立存在的必要性討論</span></strong></span></h4><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 0.5em;text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;margin-bottom: 8px;"><br></h4><span id="OSC_h4_11"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 0.5em;text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;margin-bottom: 8px;"><span style="font-size: 15px;">其實語法簡化到三元運算符和 Optional 這一步，如果一個方法體內只有這一行，這個方法獨立存在的必要性的就開始存疑了，如果所有的轉換流程都能收束在工程中的某個環節上，且保證這個方法的引用僅存在一處，那麼這一行代碼其實放在主幹代碼上更好，防止來回跳轉的代碼閲讀障礙，當然這也僅僅是在現狀下的討論，如果存在且不僅限於以下幾種狀況時還得獨立出來：</span></h4></section></section></section></section><ol class="list-paddingleft-1" style="list-style-type: decimal;"><li style="margin-top: 0.5em;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;font-size: 15px;"><section style="margin-top: 0.5em;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;font-size: 15px;"><section style="text-align: justify;justify-content: flex-start;margin: 10px 0%;display: flex;flex-flow: row;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: bottom;width: auto;min-width: 10%;flex: 0 0 auto;height: auto;align-self: flex-end;"><span style="font-size: 15px;">未來除了一種邏輯分支外，還會擴展其他分支，並且有被擴展的可能；</span></section></section></section></li><li style="margin-top: 0.5em;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;font-size: 15px;"><section style="margin-top: 0.5em;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;font-size: 15px;"><section style="text-align: justify;justify-content: flex-start;margin: 10px 0%;display: flex;flex-flow: row;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: bottom;width: auto;min-width: 10%;flex: 0 0 auto;height: auto;align-self: flex-end;"><span style="font-size: 15px;">雖然還是一種邏輯分支，但是判斷的內容變長了，跟上下文和調用狀態有關；</span></section></section></section></li><li style="margin-top: 0.5em;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;font-size: 15px;"><section style="margin-top: 0.5em;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;font-size: 15px;"><section style="text-align: justify;justify-content: flex-start;margin: 10px 0%;display: flex;flex-flow: row;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: bottom;width: auto;min-width: 10%;flex: 0 0 auto;height: auto;align-self: flex-end;"><span style="font-size: 15px;">雖然還是一種邏輯分支，但是邏輯總在調整；</span></section></section></section></li><li style="margin-top: 0.5em;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;font-size: 15px;"><section style="margin-top: 0.5em;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;font-size: 15px;"><section style="text-align: justify;justify-content: flex-start;margin: 10px 0%;display: flex;flex-flow: row;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: bottom;width: auto;min-width: 10%;flex: 0 0 auto;height: auto;align-self: flex-end;"><span style="font-size: 15px;">一處定義，多點引用；</span></section></section></section><section style="margin-top: 0.5em;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;font-size: 15px;"><section style="text-align: justify;justify-content: flex-start;margin: 10px 0%;display: flex;flex-flow: row;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: bottom;width: auto;min-width: 10%;flex: 0 0 auto;height: auto;align-self: flex-end;"><br></section></section></section></li></ol><section style="margin-top: 0.5em;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;font-size: 15px;"><section style="margin-bottom: 0px;outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);text-align: center;line-height: normal;"><img class="rich_pages wxw-img" data-imgfileid="503042839" data-ratio="0.328125" data-s="300,640" data-type="png" data-w="256" src="https://oscimg.oschina.net/oscnet/0b0881dd-148e-4d14-91fe-eb53964d59ed.png" style="outline: 0px;letter-spacing: 0.544px;font-size: 16px;visibility: visible !important;width: 122px !important;" referrerpolicy="no-referrer"></section><section style="margin-bottom: 0px;outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);color: rgb(100, 99, 99);font-size: 15px;text-align: center;line-height: normal;"><span style="outline: 0px;color: rgb(0, 17, 255);font-family: -apple-system, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 18px;letter-spacing: 1px;">繼續拓展：定義枚舉</span></section></section><section style="text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;font-size: 15px;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><br></section><section style="text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;font-size: 15px;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">「如無必要，勿增實體」</span></section><section style="text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;font-size: 15px;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><br></section><section style="text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;font-size: 15px;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">假如這個傳入的字符其實還有很多種，返回的映射也有很多種的時候，其實在這裏繼續寫一堆常量定義就很不理智了。</span></section><section style="text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;font-size: 15px;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><section style="text-align: left;justify-content: flex-start;margin: 10px 0%;display: flex;flex-flow: row nowrap;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: bottom;width: auto;min-width: 10%;flex: 0 0 auto;height: auto;align-self: flex-end;"><section style="margin-top: 0.5em;text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;margin-bottom: 8px;font-size: 15px;" powered-by="xiumi.us"><p style="margin-top: 0.5em;text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;margin-bottom: 8px;font-size: 15px;"><br></p><span id="OSC_h4_12"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 0.5em;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;"><span style="letter-spacing: 1px;"><span style="outline: 0px;visibility: visible;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong></span><strong style="color: rgb(0, 17, 255);letter-spacing: 1px;outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">值枚舉構建</span></strong></span></h4><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;font-size: 15px;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><br></h4><span id="OSC_h4_13"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;font-size: 15px;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">考慮繼續將入參的所有可能和出參的所有可能，可以構建為兩組枚舉值，這樣所有的同簇常量就被放到一起了。</span></h4><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;font-size: 15px;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><br></h4><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;font-size: 15px;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><img class="rich_pages wxw-img" data-backh="189" data-backw="455" data-galleryid="" data-imgfileid="503042846" data-ratio="0.4153846153846154" data-s="300,640" src="https://oscimg.oschina.net/oscnet/f6a249a0-4411-4e31-abcc-705c6bab2de0.png" data-type="png" data-w="455" style="text-align: center;color: rgba(0, 0, 0, 0.9);font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: var(--articleFontsize);letter-spacing: 0.034em;width: 100%;" referrerpolicy="no-referrer"></h4></section></section></section></section><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="typescript"><code><span class="code-snippet_outer">public&nbsp;enum&nbsp;SaleTypeStrEnum{</span></code><code><span class="code-snippet_outer">  JX,</span></code><code><span class="code-snippet_outer">  // OTHERS</span></code><code><span class="code-snippet_outer">  ;</span></code><code><span class="code-snippet_outer">}</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">@AllArgsConstructor</span></code><code><span class="code-snippet_outer">@Getter</span></code><code><span class="code-snippet_outer">public enum SaleTypeIntEnum{</span></code><code><span class="code-snippet_outer">  JX(1),</span></code><code><span class="code-snippet_outer">  // OTHERS</span></code><code><span class="code-snippet_outer">  ;</span></code><code><span class="code-snippet_outer">  private Integer code;</span></code><code><span class="code-snippet_outer">}</span></code></pre></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><br></section><section style="text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;font-size: 15px;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><section style="text-align: left;justify-content: flex-start;margin: 10px 0%;display: flex;flex-flow: row nowrap;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: bottom;width: auto;min-width: 10%;flex: 0 0 auto;height: auto;align-self: flex-end;"><span style="font-size: 15px;letter-spacing: 1px;">但是這個枚舉功能並不完善，因為從入參映射為 SaleTypeStrEnum，依然需要一段轉換的邏輯，需要用到 SaleTypeStrEnum::name 來判定傳參命中了哪個，所以這個邏輯不應該放在枚舉外，繼續補充：</span></section></section></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><br></section><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="cs"><code><span class="code-snippet_outer">public&nbsp;enum&nbsp;SaleTypeStrEnum{</span></code><code><span class="code-snippet_outer">  JX,</span></code><code><span class="code-snippet_outer">  // OTHERS </span></code><code><span class="code-snippet_outer">  ;</span></code><code><span class="code-snippet_outer">  public static SaleTypeStrEnum getByName(String saleTypeStr){</span></code><code><span class="code-snippet_outer">    for (SaleTypeStrEnum value : SaleTypeStrEnum.values()) {</span></code><code><span class="code-snippet_outer">      if(value.name().equals(saleTypeStr)){</span></code><code><span class="code-snippet_outer">        return value;</span></code><code><span class="code-snippet_outer">      }</span></code><code><span class="code-snippet_outer">    }</span></code><code><span class="code-snippet_outer">    return null;</span></code><code><span class="code-snippet_outer">  }</span></code><code><span class="code-snippet_outer">}</span></code></pre></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><br></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><span style="font-size: 15px;letter-spacing: 1px;text-align: left;background-color: rgb(255, 255, 255);color: rgb(34, 34, 34);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">方法有了，但是每次傳進來值都要遍歷整個枚舉，O(n) 效率太低了，還是老規矩，空間換時間。</span><br></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><span style="font-size: 15px;color: rgb(62, 62, 62);"><br></span></section><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="typescript"><code><span class="code-snippet_outer">public&nbsp;enum&nbsp;SaleTypeStrEnum{</span></code><code><span class="code-snippet_outer">  JX,</span></code><code><span class="code-snippet_outer">  // OTHERS</span></code><code><span class="code-snippet_outer">  ;</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">  /**</span></code><code><span class="code-snippet_outer">    * 預熱轉換關係到內存</span></code><code><span class="code-snippet_outer">    */</span></code><code><span class="code-snippet_outer">  private static Map&lt;String, SaleTypeStrEnum&gt; NAME_MAP = Arrays.stream(SaleTypeStrEnum.values()).collect(Collectors.toMap(SaleTypeStrEnum::name, Function.identity()));</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">  public static SaleTypeStrEnum getByName(String saleTypeStr){</span></code><code><span class="code-snippet_outer">    return NAME_MAP.get(saleTypeStr);</span></code><code><span class="code-snippet_outer">  }</span></code><code><span class="code-snippet_outer">}</span></code></pre></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><br></section><p style="margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="font-size: 15px;text-align: left;background-color: rgb(255, 255, 255);color: rgb(34, 34, 34);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 1px;">這樣每次檢索就是 O(1) 了，那麼最終方法體內也能使用 switch 管理原本的 if-else</span></p><p style="margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><br></p><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="cs"><code><span class="code-snippet_outer">public&nbsp;static&nbsp;Integer&nbsp;parseSaleType(String&nbsp;saleTypeStr){</span></code><code><span class="code-snippet_outer">  switch(SaleTypeStrEnum.getByName(saleTypeStr)){</span></code><code><span class="code-snippet_outer">    case JX:return SaleTypeIntEnum.JX.getCode();</span></code><code><span class="code-snippet_outer">    // OTHERS</span></code><code><span class="code-snippet_outer">    default:return null;</span></code><code><span class="code-snippet_outer">  }</span></code><code><span class="code-snippet_outer">}</span></code></pre></section><section style="font-size: 15px;margin-top: 0px;margin-bottom: 0px;"><section style="text-align: justify;justify-content: flex-start;margin: 10px 0%;display: flex;flex-flow: row;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: bottom;width: auto;align-self: flex-end;flex: 0 0 0%;height: auto;line-height: 0;"><section style="text-align: right;" powered-by="xiumi.us"><br></section></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><section style="display: inline-block;vertical-align: bottom;width: auto;min-width: 10%;flex: 0 0 auto;height: auto;align-self: flex-end;"><section powered-by="xiumi.us"><p style="white-space: normal;"><br></p><span id="OSC_h4_14"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 0.5em;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;"><span style="letter-spacing: 1px;"><span style="outline: 0px;visibility: visible;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong></span><strong style="color: rgb(0, 17, 255);letter-spacing: 1px;outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">關係枚舉構建</span></strong></span></h4><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></h4><span id="OSC_h4_15"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="text-align: left;background-color: rgb(255, 255, 255);color: rgb(34, 34, 34);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 1px;">再仔細思考下，其實這裏在描述的內容，無論是哪個枚舉描述的內容都是同一件事物，方法本身就是描述兩個不同編碼的轉換關係，且轉換關係本身就是單向的，且映射路徑極度簡單，所以簡單化一點，可以直接構建轉換關係枚舉﻿。</span></h4><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></h4><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;text-align: center;"><img class="rich_pages wxw-img" data-galleryid="" data-imgfileid="503042845" data-ratio="0.5683453237410072" data-s="300,640" src="https://oscimg.oschina.net/oscnet/a9fb2fe6-5cab-4fa2-9653-70f97f05993f.png" data-type="png" data-w="278" style="color: rgb(62, 62, 62);font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;text-align: center;letter-spacing: 0.578px;" referrerpolicy="no-referrer"></h4></section></section></section></section></section><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="typescript"><code><span class="code-snippet_outer">@Getter</span></code><code><span class="code-snippet_outer">@AllArgsConstructor</span></code><code><span class="code-snippet_outer">public enum SaleTypeRelEnum {</span></code><code><span class="code-snippet_outer">  // 不在分別定義兩類變量，而是直接定義變量映射關係</span></code><code><span class="code-snippet_outer">  JX("JX", 1),</span></code><code><span class="code-snippet_outer">  // OTHERS</span></code><code><span class="code-snippet_outer">  ;</span></code><code><span class="code-snippet_outer">  private String fromCode;</span></code><code><span class="code-snippet_outer">  private Integer toCode;</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">  private static Map&lt;String, SaleTypeRelEnum&gt; FROM_CODE_MAP = Arrays.stream(SaleTypeRelEnum.values()).collect(Collectors.toMap(SaleTypeRelEnum::getFromCode, Function.identity()));</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">  public static SaleTypeRelEnum get(String saleTypeStr){</span></code><code><span class="code-snippet_outer">    return FROM_CODE_MAP.get(saleTypeStr);</span></code><code><span class="code-snippet_outer">  }</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">  public static Integer parseCode(String saleTypeStr){</span></code><code><span class="code-snippet_outer">    return Optional.ofNullable(SaleTypeRelEnum.get(saleTypeStr)).map(SaleTypeRelEnum::getToCode).orElse(null);</span></code><code><span class="code-snippet_outer">  }</span></code><code><span class="code-snippet_outer">}</span></code></pre></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><br></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><span style="color: rgb(62, 62, 62);font-size: 15px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.034em;">如果將轉關係作為枚舉，那麼從職責上劃分，轉換這個動作應該是封閉在枚舉內的固有行為，而不該暴露在外，故原來對方法的引用其實應該轉為對關係枚舉中 SaleTypeEnum::parseCode 方法的引用，O(1) 檢索且封閉性良好，同時支持更多簡單單向映射關係的管理，要是以後出現的新場景都是這種關係，那夠扛很久嘞。</span></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><span style="color: rgb(62, 62, 62);font-size: 15px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.034em;"><br></span></section><section style="outline: 0px;text-wrap: wrap;background-color: rgb(255, 255, 255);font-size: 11pt;font-family: DengXian;color: rgb(0, 0, 0);letter-spacing: normal;text-align: center;margin-top: 0px;margin-bottom: 0px;line-height: 1.75em;"><img class="rich_pages wxw-img" data-imgfileid="503042844" data-ratio="0.328125" data-s="300,640" src="https://oscimg.oschina.net/oscnet/aec4be25-424c-421a-bd55-847d3abb75e1.png" data-type="png" data-w="256" style="outline: 0px;color: rgb(34, 34, 34);font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;visibility: visible !important;width: 133px !important;" referrerpolicy="no-referrer"></section><section style="outline: 0px;text-align: center;margin-top: 0px;margin-bottom: 0px;line-height: 1.75em;"><span style="outline: 0px;box-sizing: inherit;color: rgb(0, 17, 255);font-family: -apple-system, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 18px;text-wrap: wrap;background-color: rgb(255, 255, 255);letter-spacing: 1px;">繼續拓展：設計模式</span></section><section style="margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><br></section><section style="margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="font-size: 15px;color: rgb(62, 62, 62);letter-spacing: 1px;">枚舉的前提還是基於無狀態前提，如果轉換的的映射關係不再單純，變得複雜，枚舉的簡單映射管理就不 work 了。</span></section><p style="margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="color: rgb(62, 62, 62);font-size: 15px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 1px;">﻿</span></p><p style="margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="font-size: 15px;color: rgb(62, 62, 62);letter-spacing: 1px;">「萬事不決，上設計模式」</span></p><p style="margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="color: rgb(62, 62, 62);font-size: 15px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 1px;">﻿</span></p><p style="margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="font-size: 15px;color: rgb(62, 62, 62);letter-spacing: 1px;">哎~就是玩兒~</span></p><p style="margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 16px;text-align: left;outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;"><br></span></strong></span></p><p style="margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 16px;text-align: left;outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong></span><strong style="font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 16px;text-align: left;color: rgb(0, 17, 255);letter-spacing: 1px;outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">策略模式-簡單實現</span></strong></p><p style="margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;color: rgb(62, 62, 62);font-size: 15px;letter-spacing: 1px;"><br></span></p><p style="margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;color: rgb(62, 62, 62);font-size: 15px;letter-spacing: 1px;">首先，依然將傳入的字符串作為路由依據，但是傳入的內容為了防止有未來擴展，所以構造一個上下文，策略本身基於上下文來處理，藉助上文定義的值枚舉做策略路由。</span></p><section style="text-align: center;margin-top: 0px;margin-bottom: 0px;"><img class="rich_pages wxw-img" data-galleryid="" data-imgfileid="503042848" data-ratio="0.42483660130718953" data-s="300,640" src="https://oscimg.oschina.net/oscnet/8374ff02-4a1a-4ed7-9a87-c797f2e3fcff.png" data-type="png" data-w="459" style="height: auto !important;" referrerpolicy="no-referrer"></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><br></section><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="java"><code><span class="code-snippet_outer">/**</span></code><code><span class="code-snippet_outer">  * 定義策略接口</span></code><code><span class="code-snippet_outer">  */</span></code><code><span class="code-snippet_outer">public interface SaleTypeParseStrategy{</span></code><code><span class="code-snippet_outer">  Integer parse(SaleTypeParseContext saleTypeParseContext);</span></code><code><span class="code-snippet_outer">}</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">/**</span></code><code><span class="code-snippet_outer">  * 策略實現</span></code><code><span class="code-snippet_outer">  */</span></code><code><span class="code-snippet_outer">public class JxSaleTypeParseStrategy implements SaleTypeParseStrategy{</span></code><code><span class="code-snippet_outer">  @Override</span></code><code><span class="code-snippet_outer">  public Integer parse(SaleTypeParseContext saleTypeParseContext) {</span></code><code><span class="code-snippet_outer">    return SaleTypeIntEnum.JX.getCode();</span></code><code><span class="code-snippet_outer">  }</span></code><code><span class="code-snippet_outer">}</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">/**</span></code><code><span class="code-snippet_outer">  * 調用上下文</span></code><code><span class="code-snippet_outer">  */</span></code><code><span class="code-snippet_outer">@Data</span></code><code><span class="code-snippet_outer">public class SaleTypeParseContext{</span></code><code><span class="code-snippet_outer">  private SaleTypeStrEnum saleTypeStr;</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">  private SaleTypeParseStrategy parseStrategy;</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">  public Integer pasre(){</span></code><code><span class="code-snippet_outer">    return parseStrategy.parse(this);</span></code><code><span class="code-snippet_outer">  }</span></code><code><span class="code-snippet_outer">}</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">public static Integer parseSaleType(String saleTypeStr){</span></code><code><span class="code-snippet_outer">  SaleTypeStrEnum saleTypeEnum = SaleTypeStrEnum.getByName(saleTypeStr);</span></code><code><span class="code-snippet_outer">  SaleTypeParseContext context = new SaleTypeParseContext();</span></code><code><span class="code-snippet_outer">  context.setSaleTypeStr(saleTypeEnum);</span></code><code><span class="code-snippet_outer">  switch(saleTypeStr){</span></code><code><span class="code-snippet_outer">    // 策略路由</span></code><code><span class="code-snippet_outer">    case JX:context.setParseStrategy(new JxSaleTypeParseStrategy());break;</span></code><code><span class="code-snippet_outer">    // 繼續擴展</span></code><code><span class="code-snippet_outer">    default:return null;</span></code><code><span class="code-snippet_outer">  }</span></code><code><span class="code-snippet_outer">  return context.parse();</span></code><code><span class="code-snippet_outer">}</span></code></pre></section><section style="margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><br></section><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;color: rgb(62, 62, 62);letter-spacing: 1px;">當然，如果是這種沒有上下文強依賴的策略，無論是靜態單例還是 Spring 單例都會是一個不錯的選擇。SaleTypeParseContext 本身可以繼續擴展內容和其他屬性繼<span style="color: rgb(62, 62, 62);">續豐富參數，策略實現中也可以繼續針對更多參數擴充邏輯。</span></span></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="background-color: rgb(255, 255, 255);font-size: 16px;font-weight: bold;text-indent: 0em;text-align: left;font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;outline: 0px;visibility: visible;color: rgb(0, 17, 255);letter-spacing: 1px;"><strong style="outline: 0px;visibility: visible;"><span style="background-color: rgb(255, 255, 255);font-weight: bold;text-align: left;color: rgb(20, 20, 220);text-indent: 0em;outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;"><br></span></strong></span></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="background-color: rgb(255, 255, 255);font-size: 16px;font-weight: bold;letter-spacing: 1px;text-indent: 0em;text-align: left;font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;outline: 0px;visibility: visible;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="color: rgb(20, 20, 220);text-indent: 0em;outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;"><span style="text-wrap: wrap;font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 16px;text-align: left;outline: 0px;visibility: visible;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong></span><strong style="text-wrap: wrap;font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 16px;text-align: left;color: rgb(0, 17, 255);letter-spacing: 1px;outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">策略工廠-手動容器</span></strong></span></strong><strong style="outline: 0px;visibility: visible;"></strong></span></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(62, 62, 62);font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 1px;"><br></span></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(62, 62, 62);font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 1px;">策略是個好東西，但是簡單實現下，這裏依然將策略實現的路由過程交給了調用方來做，那麼每增加一種實現，調用點還要繼續改，要是恰好有若干調用點就完犢子了，並不優雅，所以搞箇中間層容器工廠，解耦一下依賴。</span></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;color: rgb(62, 62, 62);letter-spacing: 1px;"><br></span></p><p style="text-align: center;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><img class="rich_pages wxw-img" data-galleryid="" data-imgfileid="503042847" data-ratio="0.3641207815275311" data-s="300,640" src="https://oscimg.oschina.net/oscnet/04ea1adc-df26-4624-87ea-c935c47a385b.png" data-type="png" data-w="563" style="height: auto !important;" referrerpolicy="no-referrer"></p><p style="text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></p><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="java"><code><span class="code-snippet_outer">@Component</span></code><code><span class="code-snippet_outer">public static class SaleTypeParseStrategyContainer{</span></code><code><span class="code-snippet_outer">  public final static Map&lt;SaleTypeStrEnum, SaleTypeParseStrategy&gt; STRATEGY_MAP = new HashMap&lt;&gt;();</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">  @PostConstruct</span></code><code><span class="code-snippet_outer">  public void init(){</span></code><code><span class="code-snippet_outer">    STRATEGY_MAP.put(SaleTypeStrEnum.JX, new JxSaleTypeParseStrategy());</span></code><code><span class="code-snippet_outer">    // 繼續拓展</span></code><code><span class="code-snippet_outer">  }</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">  public Integer parse(SaleTypeParseContext saleTypeParseContext){</span></code><code><span class="code-snippet_outer">    return Optional.ofNullable(STRATEGY_MAP.get(saleTypeParseContext.getSaleTypeStr())).map(strategy-&gt; strategy.parse(saleTypeParseContext)).orElse(null);</span></code><code><span class="code-snippet_outer">  }</span></code><code><span class="code-snippet_outer">}</span></code></pre></section><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></p><p style="margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="font-size: 15px;color: rgb(62, 62, 62);letter-spacing: 1px;">容器內手動創建各個策略的實現的單例後進行託管，那調用方只需要去構建上下文就好了，實際調用的方法更換為 SaleTypeParseStrategyContainer::parse，那後續無論策略如何豐富，調用方都不需要再感知這部分變化。後續出現了新的策略實現，<span style="color: rgb(62, 62, 62);">則在工廠內繼續追加路由表即可。</span></span></p><p style="margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="letter-spacing: 1px;"><strong style="font-size: 16px;letter-spacing: 1px;text-indent: 0em;text-align: left;color: rgb(0, 17, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;outline: 0px;visibility: visible;"><span style="text-indent: 0em;font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;outline: 0px;visibility: visible;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;"><br></span></strong></span></strong></span></p><p style="margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="letter-spacing: 1px;"><strong style="font-size: 16px;letter-spacing: 1px;text-indent: 0em;text-align: left;color: rgb(0, 17, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;outline: 0px;visibility: visible;"><span style="color: rgb(20, 20, 220);text-indent: 0em;outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;"><span style="font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;outline: 0px;visibility: visible;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong></span><strong style="font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;color: rgb(0, 17, 255);outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">註冊與發現&amp;策略工廠-Spring 容器</span></strong></span></strong><strong style="font-size: 16px;letter-spacing: 1px;text-indent: 0em;text-align: left;color: rgb(0, 17, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;outline: 0px;visibility: visible;"></strong></span></p><section><section powered-by="xiumi.us"><section><section powered-by="xiumi.us"><p style="margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><br></p><p style="margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="color: rgb(62, 62, 62);font-size: 15px;letter-spacing: 1px;">如果考慮到策略會依賴 Spring 的 bean 和其他有狀態對象，那麼這裏也可以改成 Spring 的注入模式，同時繼續將「支持哪種情況」由託管方容器移動至策略內部，改成由策略實現自身去註冊到容器中。</span></p><p style="margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><br></p><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><img class="rich_pages wxw-img" data-galleryid="" data-imgfileid="503042850" data-ratio="0.33276740237691" data-s="300,640" src="https://oscimg.oschina.net/oscnet/5f1309e8-d605-426f-867e-20fef37033d9.png" data-type="png" data-w="589" style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: var(--articleFontsize);letter-spacing: 0.034em;text-align: center;" referrerpolicy="no-referrer"></section></section></section></section></section><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="java"><code><span class="code-snippet_outer">public&nbsp;interface&nbsp;SaleTypeParseStrategy{</span></code><code><span class="code-snippet_outer">  Integer parse(SaleTypeParseContext saleTypeParseContext);</span></code><code><span class="code-snippet_outer">  // 所支持的情況</span></code><code><span class="code-snippet_outer">  SaleTypeStrEnum support();</span></code><code><span class="code-snippet_outer">}</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">@Component</span></code><code><span class="code-snippet_outer">public class JxSaleTypeParseStrategy implements SaleTypeParseStrategy{</span></code><code><span class="code-snippet_outer">  @Override</span></code><code><span class="code-snippet_outer">  public Integer parse(SaleTypeParseContext saleTypeParseContext) {</span></code><code><span class="code-snippet_outer">    return SaleTypeIntEnum.JX.getCode();</span></code><code><span class="code-snippet_outer">  }</span></code><code><span class="code-snippet_outer">  @Override</span></code><code><span class="code-snippet_outer">  public SaleTypeStrEnum support() {</span></code><code><span class="code-snippet_outer">    return SaleTypeStrEnum.JX;</span></code><code><span class="code-snippet_outer">  }</span></code><code><span class="code-snippet_outer">}</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">@Component</span></code><code><span class="code-snippet_outer">public static class SaleTypeParseStrategyContainer{</span></code><code><span class="code-snippet_outer">  public final static Map&lt;SaleTypeStrEnum, SaleTypeParseStrategy&gt; STRATEGY_MAP = new HashMap&lt;&gt;();</span></code><code><span class="code-snippet_outer">  @Autowired</span></code><code><span class="code-snippet_outer">  private List&lt;SaleTypeParseStrategy&gt; parseStrategyList;</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">  @PostConstruct</span></code><code><span class="code-snippet_outer">  public void init(){</span></code><code><span class="code-snippet_outer">    parseStrategyList.stream().forEach(strategy-&gt; STRATEGY_MAP.put(strategy.support(), strategy));</span></code><code><span class="code-snippet_outer">  }</span></code><code><span class="code-snippet_outer">  public Integer parse(SaleTypeParseContext saleTypeParseContext){</span></code><code><span class="code-snippet_outer">    return Optional.ofNullable(STRATEGY_MAP.get(saleTypeParseContext.getSaleTypeStr())).map(strategy-&gt; strategy.parse(saleTypeParseContext)).orElse(null);</span></code><code><span class="code-snippet_outer">  }</span></code><code><span class="code-snippet_outer">}</span></code></pre></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><br></section><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;color: rgb(62, 62, 62);">這樣的話，連容器都不用改了，追加策略實現的改動只與當前策略有關，調用方和容器類都不需要感知了，但是缺點就在於如果有倆策略支持的情況相同，取到的是哪個<span style="color: rgb(62, 62, 62);letter-spacing: 1px;">就聽天由命了~</span></span></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;color: rgb(62, 62, 62);letter-spacing: 1px;"><br></span></p><p style="font-size: 15px;text-align: left;justify-content: flex-start;flex-flow: row;vertical-align: bottom;width: auto;min-width: 10%;flex: 0 0 auto;height: auto;align-self: flex-end;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(20, 20, 220);font-weight: bold;letter-spacing: 1px;background-color: rgb(255, 255, 255);font-family: -apple-system, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 16px;text-indent: 0em;"><strong style="letter-spacing: 1px;text-indent: 0em;text-wrap: wrap;font-size: 16px;text-align: left;color: rgb(0, 17, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;outline: 0px;visibility: visible;"><span style="color: rgb(20, 20, 220);text-indent: 0em;outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;"><span style="font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;outline: 0px;visibility: visible;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong></span><strong style="font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;color: rgb(0, 17, 255);outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">註冊與發現&amp;責任鏈</span></strong></span></strong></span></p><section style="font-size: 15px;text-align: justify;justify-content: flex-start;flex-flow: row;vertical-align: bottom;width: auto;min-width: 10%;flex: 0 0 auto;height: auto;align-self: flex-end;margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="color: rgb(62, 62, 62);letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;text-align: justify;"><br></span></section><section style="font-size: 15px;text-align: justify;justify-content: flex-start;flex-flow: row;vertical-align: bottom;width: auto;min-width: 10%;flex: 0 0 auto;height: auto;align-self: flex-end;margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="color: rgb(62, 62, 62);letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;text-align: justify;">當然如果不能事先知道「支持哪種情況」，只能在運行時判斷「是否支持」，將事前判定改為運行時判定，廣義責任鏈會是一個不錯的選擇，把所有策略排成一排，誰舉手説自己能處理就誰處理。</span></section><p style="font-size: 15px;text-align: left;justify-content: flex-start;flex-flow: row;vertical-align: bottom;width: auto;min-width: 10%;flex: 0 0 auto;height: auto;align-self: flex-end;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(62, 62, 62);letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;text-align: justify;"><br></span></p><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(62, 62, 62);font-size: 15px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 1px;">﻿</span><img class="rich_pages wxw-img" data-galleryid="" data-imgfileid="503042849" data-ratio="0.3082077051926298" data-s="300,640" src="https://oscimg.oschina.net/oscnet/e9efe248-d032-45da-a437-a20a73077a84.png" data-type="png" data-w="597" style="text-align: center;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: var(--articleFontsize);letter-spacing: 0.034em;" referrerpolicy="no-referrer"></section><section style="text-align: justify;margin-top: 0px;margin-bottom: 0px;"><br></section><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="java"><code><span class="code-snippet_outer">public&nbsp;interface&nbsp;SaleTypeParseStrategy{</span></code><code><span class="code-snippet_outer">  Integer parse(SaleTypeParseContext saleTypeParseContext);</span></code><code><span class="code-snippet_outer">  // 用於判斷是否支持</span></code><code><span class="code-snippet_outer">  boolean support(SaleTypeParseContext saleTypeParseContext);</span></code><code><span class="code-snippet_outer">}</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">@Component</span></code><code><span class="code-snippet_outer">public class JxSaleTypeParseStrategy implements SaleTypeParseStrategy{</span></code><code><span class="code-snippet_outer">  @Override</span></code><code><span class="code-snippet_outer">  public Integer parse(SaleTypeParseContext saleTypeParseContext) {</span></code><code><span class="code-snippet_outer">    return SaleTypeIntEnum.JX.getCode();</span></code><code><span class="code-snippet_outer">  }</span></code><code><span class="code-snippet_outer">  @Override</span></code><code><span class="code-snippet_outer">  public boolean support(SaleTypeParseContext saleTypeParseContext) {</span></code><code><span class="code-snippet_outer">    return SaleTypeStrEnum.JX.equals(saleTypeParseContext.getSaleTypeStr());</span></code><code><span class="code-snippet_outer">  }</span></code><code><span class="code-snippet_outer">}</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">@Component</span></code><code><span class="code-snippet_outer">public static class SaleTypeParseStrategyContainer{</span></code><code><span class="code-snippet_outer">  @Autowired</span></code><code><span class="code-snippet_outer">  private List&lt;SaleTypeParseStrategy&gt; parseStrategyList;</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">  public Integer parse(SaleTypeParseContext saleTypeParseContext){</span></code><code><span class="code-snippet_outer">    return parseStrategyList.stream()</span></code><code><span class="code-snippet_outer">        .filter(strategy-&gt;strategy.support(saleTypeParseContext))</span></code><code><span class="code-snippet_outer">        .findAny()</span></code><code><span class="code-snippet_outer">        .map(strategy-&gt;strategy.parse(saleTypeParseContext))</span></code><code><span class="code-snippet_outer">        .orElse(null);</span></code><code><span class="code-snippet_outer">  }</span></code><code><span class="code-snippet_outer">}</span></code></pre></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><br></section><section style="font-size: 15px;text-align: justify;justify-content: flex-start;flex-flow: row;vertical-align: bottom;width: auto;min-width: 10%;flex: 0 0 auto;height: auto;align-self: flex-end;margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="color: rgb(62, 62, 62);letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;text-align: justify;font-size: 15px;">這樣的實現，依然可以將改動收束在策略本體上，修改相對集中，可以無耦地進行擴展。</span></section><section style="font-size: 15px;text-align: justify;justify-content: flex-start;flex-flow: row;vertical-align: bottom;width: auto;min-width: 10%;flex: 0 0 auto;height: auto;align-self: flex-end;margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="color: rgb(62, 62, 62);letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;text-align: justify;font-size: 15px;"><br></span></section><section style="margin-bottom: 0px;outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);text-align: center;line-height: normal;"><img class="rich_pages wxw-img" data-imgfileid="503042853" data-ratio="0.328125" data-s="300,640" src="https://oscimg.oschina.net/oscnet/564c4bbd-3a0d-430c-bde8-35f76f4e0d5a.png" data-type="png" data-w="256" style="outline: 0px;color: rgb(51, 51, 51);font-size: 20px;font-weight: bold;letter-spacing: 0.578px;visibility: visible !important;width: 134px !important;" referrerpolicy="no-referrer"></section><section style="margin-bottom: 0px;outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);color: rgb(100, 99, 99);font-size: 15px;text-align: center;line-height: normal;"><span style="outline: 0px;font-family: -apple-system, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 1px;font-size: 18px;color: rgb(0, 17, 255);">其他拓展</span></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">以上還只是在 JAVA 語言內去玩一些花樣，在當前這種場景下肯定是有過度設計的嫌疑，7 行代碼可以縮到 1 行，也可以擴充到 70 行，所以説嘛：</span></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">「用代碼行數來考量一個程序員是不太合適滴！~」</span></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">﻿</span></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">當然了，也還可以繼續藉助其他的中間件搞花樣，包括但不限於：</span></section><ol class="list-paddingleft-1" style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><li style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;font-size: 15px;letter-spacing: 1px;"><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">植入 Diamond 走走動態配置開關的思路；<br></span></section></li><li style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;font-size: 15px;letter-spacing: 1px;"><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">植入 QLExpress 搞搞邏輯表達式的思路；</span></section></li><li style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;font-size: 15px;letter-spacing: 1px;"><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">把策略實現改成 HsfProvider 走分佈式調用思路；</span></section></li><li style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;font-size: 15px;letter-spacing: 1px;"><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">藉助一些成熟的網關走服務路由的的調用思路；</span></section></li></ol><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">就不再此再過多展開了。</span><span style="color: rgb(100, 99, 99);font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 14px;letter-spacing: 0.578px;text-align: center;"></span></section><p><br></p><section data-role="outer" label="Powered by 135editor.com" style="margin-bottom: 0px;outline: 0px;letter-spacing: 0.544px;visibility: visible;"><section style="margin-top: 5px;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;font-size: 16px;word-break: break-all;color: rgb(0, 0, 0);font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;text-align: center;line-height: 1.75em;"><span style="outline: 0px;color: rgb(0, 17, 255);"><strong style="outline: 0px;">¤</strong></span><span style="outline: 0px;"><strong style="outline: 0px;">&nbsp;拓展閲讀&nbsp;</strong></span><span style="outline: 0px;color: rgb(0, 17, 255);"><strong style="outline: 0px;">¤</strong></span></section><section style="margin-top: 5px;margin-bottom: 5px;outline: 0px;letter-spacing: 0.544px;font-size: 16px;word-break: break-all;color: rgb(0, 0, 0);font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;text-align: center;line-height: 1.75em;"><br style="outline: 0px;"></section><section style="margin-top: 8px;margin-bottom: 8px;outline: 0px;font-family: -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 0.544px;text-indent: 0em;text-align: center;line-height: 1.75em;min-height: 24px;clear: both;visibility: visible;"><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fmp%2Fappmsgalbum%3F__biz%3DMzAxNDEwNjk5OQ%3D%3D%26action%3Dgetalbum%26album_id%3D2565944923443904512%23wechat_redirect" textvalue="3DXR 技術" linktype="text" imgurl="" imgdata="null" tab="innerlink" data-linktype="2" style="outline: 0px;color: var(--weui-LINK);-webkit-user-drag: none;cursor: pointer;">3DXR 技術</a>&nbsp;|&nbsp; 
   <a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fmp%2Fappmsgalbum%3F__biz%3DMzAxNDEwNjk5OQ%3D%3D%26action%3Dgetalbum%26album_id%3D1533906991218294785%23wechat_redirect" textvalue="終端技術" linktype="text" imgurl="" imgdata="null" tab="innerlink" data-linktype="2" style="outline: 0px;color: var(--weui-LINK);-webkit-user-drag: none;cursor: pointer;">終端技術</a>&nbsp;|&nbsp; 
   <a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fmp%2Fappmsgalbum%3F__biz%3DMzAxNDEwNjk5OQ%3D%3D%26action%3Dgetalbum%26album_id%3D1592015847500414978%23wechat_redirect" textvalue="音視頻技術" linktype="text" imgurl="" imgdata="null" tab="innerlink" data-linktype="2" style="outline: 0px;color: var(--weui-LINK);-webkit-user-drag: none;cursor: pointer;">音視頻技術</a></section><p style="margin-top: 8px;margin-bottom: 8px;outline: 0px;min-height: 24px;font-family: -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 0.544px;text-indent: 0em;text-align: center;line-height: 1.75em;visibility: visible;"><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fmp%2Fappmsgalbum%3F__biz%3DMzAxNDEwNjk5OQ%3D%3D%26action%3Dgetalbum%26album_id%3D1539610690070642689%23wechat_redirect" textvalue="服務端技術" linktype="text" imgurl="" imgdata="null" tab="innerlink" data-linktype="2" style="outline: 0px;color: var(--weui-LINK);-webkit-user-drag: none;cursor: pointer;">服務端技術</a><span style="outline: 0px;letter-spacing: 0.544px;">&nbsp;|&nbsp;</span><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fmp%2Fappmsgalbum%3F__biz%3DMzAxNDEwNjk5OQ%3D%3D%26action%3Dgetalbum%26album_id%3D2565883875634397185%23wechat_redirect" textvalue="技術質量" linktype="text" imgurl="" imgdata="null" tab="innerlink" data-linktype="2" style="outline: 0px;color: var(--weui-LINK);-webkit-user-drag: none;cursor: pointer;">技術質量</a>&nbsp;|&nbsp;<a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fmp%2Fappmsgalbum%3F__biz%3DMzAxNDEwNjk5OQ%3D%3D%26action%3Dgetalbum%26album_id%3D1522425612282494977%23wechat_redirect" textvalue="數據算法" linktype="text" imgurl="" imgdata="null" tab="innerlink" data-linktype="2" style="outline: 0px;color: var(--weui-LINK);-webkit-user-drag: none;cursor: pointer;">數據算法</a></p><p style="margin-top: 8px;margin-bottom: 8px;outline: 0px;min-height: 24px;font-family: -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 0.544px;text-indent: 0em;text-align: center;line-height: 1.75em;visibility: visible;"><br style="outline: 0px;"></p><section class="mp_profile_iframe_wrp" style="margin-bottom: 24px;outline: 0px;"><mp-common-profile class="custom_select_card mp_profile_iframe js_wx_tap_highlight" data-pluginname="mpprofile" data-id="MzAxNDEwNjk5OQ==" data-headimg="http://mmbiz.qpic.cn/mmbiz_png/33P2FdAnju8t5nZGhAatCrc4e2iaDfAaoInribRKxc7MOqdTGygfcLqSDxhj0trCHVEh94Sjl7zuWYzwouYtJ0VQ/300?wx_fmt=png&amp;wxfrom=19" data-nickname="大淘寶技術" data-alias="AlibabaMTT" data-signature="大淘寶技術官方賬號" data-from="2" data-index="0" data-origin_num="690" data-isban="0" data-biz_account_status="0" data-weui-theme="light" data-is_biz_ban="0"></mp-common-profile></section></section><section><section powered-by="xiumi.us"><section><section><section><section><article data-identifier-application__slash__x-doc-key="mxPOGyPLWx65nKa9"></article></section></section></section></section></section></section><section style="margin-bottom: 0px;"><section style="display: none;margin-top: 0px;"><br></section></section><p style="display: none;"><mp-style-type data-value="3"></mp-style-type></p></div><p style="color: #858585; font-size: 13px;">本文分享自微信公眾號 - 大淘寶技術（AlibabaMTT）。<br>如有侵權，請聯繫 support@oschina.cn 刪除。<br>本文參與「<a href="https://www.oschina.net/sharing-plan" target="_blank">OSC 源創計劃</a>」，歡迎正在閲讀的你也加入，一起分享。</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 18 Jan 2024 02:11:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/4662964/blog/10860307</guid>
            <link>https://my.oschina.net/u/4662964/blog/10860307</link>
            <author>
                <![CDATA[大淘寶技術]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[MySQL 8.3.0 GA]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>MySQL 8.3.0 於 2024 年 1 月 16 日正式發行，該版本的一些主要變化包括：</p><ul><li><p>企業版的數據屏蔽和脱敏功能中增加了在副本（次要成員）服務器的的內存中刷新數據的能力。可以通過「masking_dictionaries_flush()」函數進行手動刷新，也可以通過調度組件使用新的變量「componet_masking.dictionaries_flush_interval_seconds」配置為定時刷新。</p></li><li><p>企業版支持使用「component_telemetry」組件，收集服務器 OpenTelemetry 格式的度量數據。（僅支持 Linux 平台）</p></li><li><p>刪除--innodb 和 --skip-innodb 服務器選項。從 MySQL 5.6 版本起，innoDB 作為默認的存儲引擎，--innodb 和 --skip-innodb 服務器選項已經失去存在的意義，在此版本正式刪除</p></li><li><p>刪除 InnoDB memcached 插件。該插件在 8.0.22 中降級使用，在此版本中正式刪除</p></li><li><p>刪除 MySQL 複製中部分服務器選項和變量。這些變量在之前的版本進行了降級使用，在此版本中正式刪除，包括：</p><ul><li><p>--slave-rows-search-algorithms</p></li><li><p>log_bin_use_v1_events</p></li><li><p>--relay-log-info-file</p></li><li><p>--relay-log-info-repository</p></li><li><p>--master-info-file</p></li><li><p>--master-info-repository</p></li><li><p>transaction_write_set_extraction</p></li><li><p>group_replication_ip_whitelist</p></li><li><p>group_replication_primary_member</p></li></ul></li><li><p>禁止使用非空的「IGNORE_SERVER_IDS」列表。從此版本起，當開啓基於 GTID 進行復制時，將不再允許「CHANGE REPLICATION SOURCE TO」指向一個非空的「IGNORE_SERVER_IDS」列表，（由於「IGNORE_SERVER_IDS」與 GTID 模式不兼容，在 8.0 中已經降級處理），同理，如果一個已經存在的複製通道，在創建時使用了忽略服務器的列表，當其開啓 GTID 模式時，也將報錯。用户可以使用「CHANGE REPLICATION SOURCE TO IGNORE_SERVER_IDS = ();」清空忽略的服務器列表。</p></li><li><p>GTID 擴展格式。基於 GTID 的複製擴展了 GTID 的格式，用户可以為 GTID 打上標籤，方便對一組事務進行識別管理。新的格式為「UUID:&lt;TAG&gt;:NUMBER」，「&lt;TAG&gt;」是任意字符串，可以通過「SET gtid_next」進行設置，並在當前會話中持久有效。</p></li><li><p>自動化升級。在 Windows 上，MySQL Configurator 可以執行原地升級。例如「MySQL Server」8.3.0 可以取代現有的 MySQL Server 8.2.0 安裝，包括更新和重命名數據目錄。</p></li><li><p>增加了「explain_json_format_version」系統變量，用於「EXPLAIN FORMAT=JSON」語句。1 為默認值，與之前的格式一致，2 是基於訪問路徑的，目的為未來的優化器提供更好的兼容性。</p></li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="background-color:#ffffff; color:#222222">以上內容是 8.3.0 版本的一個快速瀏覽，詳細信息可訪問<span>&nbsp;</span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblogs.oracle.com%2Fmysql%2Fcategory%2Fmsq-announcements" target="_blank">MySQL 官網</a><span style="background-color:#ffffff; color:#222222">。</span><span style="background-color:#ffffff; color:#333333">&nbsp;</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="background-color:#ffffff; color:#222222">稿源：</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2Fyi5j80lvOBNqCRWMBz5fqQ" target="_blank">https://mp.weixin.qq.com/s/yi5j80lvOBNqCRWMBz5fqQ</a></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 18 Jan 2024 02:03:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276047/mysql-8-3-0-ga</guid>
            <link>https://www.oschina.net/news/276047/mysql-8-3-0-ga</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[禪道軟件獲 2024 首個 GVP（最有價值開源項目）]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff; color:#333333">2024 開門見喜！1 月 1 日，</span><strong>禪道項目管理軟件與旗下產品「ZUI 前端 UI 框架」入選 Gitee 最有價值開源項目計劃</strong><span style="background-color:#ffffff; color:#333333">，</span><span style="background-color:#ffffff; color:#337fe5"><strong>禪道項目管理軟件榮獲 2024 首個 GVP（最有價值開源項目）</strong></span><span style="background-color:#ffffff; color:#333333">！</span></p><div><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcdn.easycorp.cn%2Fweb%2Fdata%2Fupload%2Fzentao%2F202401%2Ff_2bcd4ea0943f839941cedad5b6bc543e.jpg" target="_blank"><img align="" alt="禪道-最有價值開源項目" height="298" src="https://cdn.easycorp.cn/web/data/upload/zentao/202401/f_2bcd4ea0943f839941cedad5b6bc543e.jpg" width="500" referrerpolicy="no-referrer"></a></div><p><span style="background-color:#ffffff; color:#333333">GVP（Gitee Most Valuable Project）最有價值開源項目計劃是 Gitee 綜合評定出的優秀開源項目的展示平台，代表了開源項目的高質量能力與水平。</span><br> &nbsp;</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">在十四年的開源之路中，禪道項目管理軟件在技術架構、產品創新、產品質量、社區參與度和用户影響力等方面都有着出色的表現。同時，禪道不斷關注和研究業內實踐，有機融合 IPD、SAFe、CMMI、Scrum、看板、瀑布和 DevOps 等七大項目管理模型，吸收人工智能（AI）、商業智能（BI）和信息管理（IM）等前沿技術，<strong><span style="color:#337fe5">旨在為用户提供專業高效的項目管理工具及落地解決方案</span></strong>。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:center"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcdn.easycorp.cn%2Fweb%2Fdata%2Fupload%2Fzentao%2F202401%2Ff_a7a01cec65c980b562bb018f156b7065.jpg" target="_blank"><img align="" alt="禪道-全生命週期項目管理軟件" height="1425" src="https://cdn.easycorp.cn/web/data/upload/zentao/202401/f_a7a01cec65c980b562bb018f156b7065.jpg" width="500" referrerpolicy="no-referrer"></a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:center"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcdn.easycorp.cn%2Fweb%2Fdata%2Fupload%2Fzentao%2F202401%2Ff_fcca93a985b436fd8e7b9270e65c223a.jpg" target="_blank"><img align="" alt="禪道-全生命週期項目管理軟件" height="1079" src="https://cdn.easycorp.cn/web/data/upload/zentao/202401/f_fcca93a985b436fd8e7b9270e65c223a.jpg" width="500" referrerpolicy="no-referrer"></a></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 18 Jan 2024 00:56:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276041/zentao-gvp</guid>
            <link>https://www.oschina.net/news/276041/zentao-gvp</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[阿里雲 MongoDB 7.0 正式發佈，帶來更加強大、高效、安全的數據庫解決方案]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="margin-left:0; margin-right:0"><strong>2024 年 1 月 10 日，阿里雲 MongoDB 7.0 版本正式發佈</strong>，帶來了諸多創新功能和顯著改進，旨在提升性能、增強數據管理能力，併為開發者提供更豐富、更靈活的工具集。無論是在大規模數據處理、實時分析還是在構建高性能應用方面，MongoDB 7.0 都無疑是值得期待和信賴的選擇。</p><p><img alt="" height="412" src="https://oscimg.oschina.net/oscnet/up-29cecb902f8b727b7168e653596a751f1dd.png" width="748" referrerpolicy="no-referrer"><img alt="" src="https://xiumi.us/studio/v5#/paper/for/509077302/cube/0" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0"><em><strong><span>開發簡化</span></strong></em></p><p style="margin-left:0; margin-right:0">增強查詢語言，包括操作符、變量和索引，<strong>可在 MongoDB 直接執行多種數值運算和高性能查詢</strong>，提升工作效率。</p><p style="margin-left:0; margin-right:0"><em><strong><span>性能提升</span></strong></em></p><p style="margin-left:0; margin-right:0">通過自動碎片整理減少數據 chunk 的數量和引入新的查詢執行引擎，<strong>使查詢性能較 6.0 版本有大幅的提升</strong>。</p><p style="margin-left:0; margin-right:0"><span><em><strong>簡化遷移</strong></em></span></p><p style="margin-left:0; margin-right:0">讓遷移和系統間的數據同步變得更簡單，<strong>使得從傳統關係型數據庫業務負載轉移到阿里雲 MongoDB 的任務更加快速和彈性</strong>，從而突破傳統關係型數據庫的限制和擴展的瓶頸。</p><p style="margin-left:0; margin-right:0"><em><strong><span>安全性</span></strong></em></p><p style="margin-left:0; margin-right:0">MongoDB 是能夠快速實施可搜索加密方案的領先平台，<strong>讓開發者在加密資料不解密的情況下進行查詢，快速找到所需資料。</strong></p><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="margin-left:0; margin-right:0">MongoDB 高級解決方案專家黃東旭表示：</p><p style="margin-left:0; margin-right:0">「<strong>MongoDB 7.0 通過持續創新和優化，為開發者和企業用户提供更強大、高效、安全的數據庫解決方案。MongoDB 從誕生起就是由開發者而創建，為開發者而創建。在未來，MongoDB 也會繼續將開發者置於首位，為開發者提供更多、更強大的新功能。</strong>」</p><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="margin-left:0; margin-right:0">阿里雲 MongoDB 技術專家鍾離表示：</p><p style="margin-left:0; margin-right:0">「<strong>MongoDB 7.0 帶來了不少新特性，而阿里雲在雲原生上能夠提供包括快速彈性、快速克隆回檔和智能運維等特性，使得阿里雲與 MongoDB 的合作實現一加一大於二的效果。</strong>」</p><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="margin-left:0; margin-right:0"><strong>阿里雲 MongoDB 7.0 的發佈標誌着這個業界領先的 NoSQL 數據庫系統的一個重要里程碑。</strong>MongoDB 在 2019 年就被 Stack Overflow 評為<strong>最被開發者喜愛</strong>的數據庫，目前在數據庫領域的知名排行榜 DB-Engines Rankings 中已上升至<strong>第五</strong>。MongoDB 這些年一直在不斷地進行版本的演進，從 2015 年的 3.0 的版本，到剛發佈的 7.0 版本，持續推出更優質的功能和特性，讓開發者可以獲得集成豐富工具的統一平台，改善開發體驗，對應用負載進行現代化改造。</p><p style="margin-left:0; margin-right:0">&nbsp;</p><p><img alt="" height="408" src="https://oscimg.oschina.net/oscnet/up-104c407750f6abbe4f6aa7da113ddc5a669.png" width="741" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0"><strong>阿里雲是中國唯一能提供 MongoDB 最新版本的雲廠商。</strong>從 2021 年 5 月國內獨家首發 5.0 版本，到如今的 7.0 版本 ，阿里雲 MongoDB 始終跟隨 MongoDB 公司的發佈節奏，致力於為開發者帶來最新版本的雲服務體驗。阿里雲與 MongoDB 戰略合作四週年，目前已經成為 MongoDB 在中國最大的雲服務提供商，業務拓展至互聯網、遊戲、汽車、製造、零售等行業，累計為數萬名客户提供 MongoDB 雲服務。</p><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="margin-left:0; margin-right:0">請訪問產品網站，瞭解更多阿里雲 MongoDB 的介紹。</p><p><img alt="" height="325" src="https://oscimg.oschina.net/oscnet/up-b457fd48dd92ec01dddf398b0536e6adbb5.png" width="588" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0">關注獲取更多精彩內容</p><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="margin-left:0; margin-right:0">中國官方網站</p><p style="margin-left:0; margin-right:0">www.mongodb.com/zh-cn</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 17 Jan 2024 14:16:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276036/mongodb-7-0-released</guid>
            <link>https://www.oschina.net/news/276036/mongodb-7-0-released</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[書生·浦語 2.0（InternLM2）大語言模型正式開源]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>1 月 17 日，書生·浦語 2.0（InternLM2）發佈會暨書生·浦源大模型挑戰賽啓動儀式在上海舉行。上海人工智能實驗室與商湯科技聯合香港中文大學和復旦大學正式發佈新一代大語言模型<strong>書⽣·浦語 2.0（InternLM2）</strong>。</p><p><img src="https://oscimg.oschina.net/oscnet/up-52e9a3ed647ca67a108395c42fa403f5137.jpg" referrerpolicy="no-referrer"></p><blockquote><p>開源地址</p><ul><li>Github：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FInternLM%2FInternLM" target="_blank">https://github.com/InternLM/InternLM</a></li><li>HuggingFace：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhuggingface.co%2Finternlm" target="_blank">https://huggingface.co/internlm</a></li><li>ModelScope：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmodelscope.cn%2Forganization%2FShanghai_AI_Laboratory" target="_blank">https://modelscope.cn/organization/Shanghai_AI_Laboratory</a></li></ul></blockquote><p>據介紹，InternLM2 是在 2.6 萬億 token 的高質量語料上訓練得到的。沿襲第一代書生·浦語（InternLM）的設定，InternLM2 包含 7B 及 20B 兩種參數規格及基座、對話等版本，滿足不同複雜應用場景需求。秉持「以高質量開源賦能創新」理念，上海 AI 實驗室繼續提供 InternLM2 免費商用授權。</p><p>InternLM2 的核心理念在於迴歸語言建模的本質，致力於通過提高語料質量及信息密度，實現模型基座語言建模能力獲得質的提升，進而在數理、代碼、對話、創作等各方面都取得長足進步，<strong>綜合性能達到同量級開源模型的領先水平。</strong>其支持 200K token 的上下文，一次性接收並處理約 30 萬漢字的輸入內容，準確提取關鍵信息，實現長文本中「大海撈針」。</p><p><img src="https://oscimg.oschina.net/oscnet/up-7c9cb74f4a31bdfb986e5bd545788786bac.png" referrerpolicy="no-referrer"></p><p><img src="https://oscimg.oschina.net/oscnet/up-318647a9bfbcddcb935f2efd51bc26c7cdf.png" referrerpolicy="no-referrer"></p><p>此外，InternLM2 的各項能力獲得全面進步，相比於初代 InternLM，在推理、數學、代碼等方面的能力提升尤為顯著，綜合能力領先於同量級開源模型。</p><p>根據大語言模型的應用方式和用户關注的重點領域，研究人員定義了語言、知識、推理、數學、代碼、考試等六個能力維度，在 55 個主流評測集上對多個同量級模型的表現進行了綜合評測。評測結果顯示，InternLM2 的輕量級（7B）及中量級（20B）版本性能在同量級模型中表現優異。</p><p><img src="https://oscimg.oschina.net/oscnet/up-63b21de53ea876e2f73bebcc2d1cb185f26.png" referrerpolicy="no-referrer"></p><p><img src="https://oscimg.oschina.net/oscnet/up-5b27ccfd736b8e6c812fa412f2b84901be4.png" referrerpolicy="no-referrer"></p><ul></ul></div>
                                    ]]>
            </description>
            <pubDate>Wed, 17 Jan 2024 12:09:49 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276033/shanghai-ai-lab-internlm2</guid>
            <link>https://www.oschina.net/news/276033/shanghai-ai-lab-internlm2</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
    </channel>
</rss>
