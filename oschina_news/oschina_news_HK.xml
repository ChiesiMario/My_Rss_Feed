<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[開源中國-最新資訊]]>
        </title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="https://rsshub.app/oschina/news" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[開源中國-最新資訊 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Mon, 18 Dec 2023 13:39:06 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[國芯科技推出全國產 RAID 卡解決方案 CCUSR8116]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>蘇州國芯科技<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FRYHsS9suYQrzlvlcsCRxjw" target="_blank">官微</a>消息稱，近期，蘇州國芯科技股份有限公司的全資子公司廣州領芯科技有限公司，基於自研 RAID 芯片 CCRD3316 正式推出全國產 RAID 卡解決方案 CCUSR8116。</p><p>全國產 RAID 卡解決方案 CCUSR8116 面向服務器應用場景，可以為客户提供可靠的大容量存儲陣列管理，可根據客户需求定製整體解決方案。方案基於自研 RAID 主控芯片 CCRD3316，有以下特點：主控芯片全自研，全國產 BOM 物料，具有完善的配套驅動和工具，具備全面的 RAID 數據保護機制，支持 RAID0/1/5/6/10/50/60/JBOD 模式。</p><p><img alt="" height="307" src="https://oscimg.oschina.net/oscnet/up-90b8576d519c92abcea375d81931483fc54.png" width="500" referrerpolicy="no-referrer"></p><h4 style="margin-left:0px; margin-right:0px; text-align:justify"><strong><span>CCUSR8116</span></strong><strong><span>技術規格</span></strong><strong><span>：</span></strong></h4><table cellpadding="0" cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; box-sizing:border-box !important; color:rgba(0, 0, 0, 0.9); display:table; font-family:system-ui,-apple-system,BlinkMacSystemFont,&quot;Helvetica Neue&quot;,&quot;PingFang SC&quot;,&quot;Hiragino Sans GB&quot;,&quot;Microsoft YaHei UI&quot;,&quot;Microsoft YaHei&quot;,Arial,sans-serif; font-size:17px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:0.544px; margin:0px 0px 10px; max-width:100%; orphans:2; outline:0px; overflow-wrap:break-word !important; padding:0px; text-align:justify; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:676.991px; word-spacing:0px"><tbody><tr><td style="border-color:black; border-style:solid; border-width:1pt; height:32.55pt"><p style="margin-left:0; margin-right:0; text-align:center"><strong><span>主機接口</span></strong></p></td><td style="border-bottom:1pt solid windowtext; border-image:initial; border-left:none; border-right:1pt solid windowtext; border-top:1pt solid windowtext; height:32.55pt"><p style="margin-left:0; margin-right:0; text-align:center"><span>PCIe Gen &nbsp;3.0 x8 （8Gb/s）</span></p></td><td style="border-bottom:1pt solid windowtext; border-image:initial; border-left:none; border-right:1pt solid windowtext; border-top:1pt solid windowtext; height:32.55pt"><p style="margin-left:0; margin-right:0; text-align:center"><strong><span>硬盤接口</span></strong></p></td><td style="border-bottom:1pt solid windowtext; border-image:initial; border-left:none; border-right:1pt solid windowtext; border-top:1pt solid windowtext; height:32.55pt"><p style="margin-left:0; margin-right:0; text-align:center"><span>x16 &nbsp;SATA3.0（6Gb/s）</span></p></td></tr><tr><td style="border-bottom:1pt solid windowtext; border-image:initial; border-left:1pt solid windowtext; border-right:1pt solid windowtext; border-top:none"><p style="margin-left:0; margin-right:0; text-align:center"><strong><span>接口類型</span></strong></p></td><td style="border-bottom:1pt solid windowtext; border-image:initial; border-left:none; border-right:1pt solid windowtext; border-top:none"><p style="margin-left:0; margin-right:0; text-align:center"><span>x4 SFF-8643 mini-SAS</span></p><p style="margin-left:0; margin-right:0; text-align:center"><span>（水平安裝）</span></p></td><td style="border-bottom:1pt solid windowtext; border-image:initial; border-left:none; border-right:1pt solid windowtext; border-top:none"><p style="margin-left:0; margin-right:0; text-align:center"><strong><span>機櫃管理</span></strong></p></td><td style="border-bottom:1pt solid windowtext; border-image:initial; border-left:none; border-right:1pt solid windowtext; border-top:none"><p style="margin-left:0; margin-right:0; text-align:center"><span>SGPIO</span></p></td></tr><tr><td style="border-bottom:1pt solid windowtext; border-image:initial; border-left:1pt solid windowtext; border-right:1pt solid windowtext; border-top:none"><p style="margin-left:0; margin-right:0; text-align:center"><strong><span>數據緩存</span></strong></p></td><td style="border-bottom:1pt solid windowtext; border-image:initial; border-left:none; border-right:1pt solid windowtext; border-top:none"><p style="margin-left:0; margin-right:0; text-align:center"><span>2 GB DDR3</span></p></td><td style="border-bottom:1pt solid windowtext; border-image:initial; border-left:none; border-right:1pt solid windowtext; border-top:none"><p style="margin-left:0; margin-right:0; text-align:center"><strong><span>緩存保護</span></strong></p></td><td style="border-bottom:1pt solid windowtext; border-image:initial; border-left:none; border-right:1pt solid windowtext; border-top:none"><p style="margin-left:0; margin-right:0; text-align:center"><span>eMMC+超級電容</span></p></td></tr><tr><td style="border-bottom:1pt solid windowtext; border-image:initial; border-left:1pt solid windowtext; border-right:1pt solid windowtext; border-top:none"><p style="margin-left:0; margin-right:0; text-align:center"><strong><span>RAID</span></strong><strong><span>模式</span></strong></p></td><td style="border-bottom:1pt solid windowtext; border-image:initial; border-left:none; border-right:1pt solid windowtext; border-top:none"><p style="margin-left:0; margin-right:0; text-align:center"><span>0/1/5/6/10/50/60/JBOD</span></p></td><td style="border-bottom:1pt solid windowtext; border-image:initial; border-left:none; border-right:1pt solid windowtext; border-top:none"><p style="margin-left:0; margin-right:0; text-align:center"><strong><span>最大功耗</span></strong></p></td><td style="border-bottom:1pt solid windowtext; border-image:initial; border-left:none; border-right:1pt solid windowtext; border-top:none"><p style="margin-left:0; margin-right:0; text-align:center"><span>9 瓦</span></p></td></tr><tr><td style="border-bottom:1pt solid windowtext; border-image:initial; border-left:1pt solid windowtext; border-right:1pt solid windowtext; border-top:none"><p style="margin-left:0; margin-right:0; text-align:center"><strong><span>外形尺寸</span></strong></p></td><td style="border-bottom:1pt solid windowtext; border-image:initial; border-left:none; border-right:1pt solid windowtext; border-top:none"><p style="margin-left:0; margin-right:0; text-align:center"><span>標準半高卡</span></p></td><td style="border-bottom:1pt solid windowtext; border-image:initial; border-left:none; border-right:1pt solid windowtext; border-top:none"><p style="margin-left:0; margin-right:0; text-align:center"><strong><span>工作温度</span></strong></p></td><td style="border-bottom:1pt solid windowtext; border-image:initial; border-left:none; border-right:1pt solid windowtext; border-top:none"><p style="margin-left:0; margin-right:0; text-align:center"><span>-25℃--85℃</span></p></td></tr></tbody></table><h4 style="margin-left:0px; margin-right:0px; text-align:justify"><strong><span>CCUSR8116</span></strong><strong><span>配套軟件</span></strong><strong><span>：</span></strong></h4><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span>管理軟件套件主要包含 BIOS、操作系統、BMC 三個環境下驅動和軟件。</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span><strong><span>BIOS</span></strong><strong><span>：</span></strong><span>BIOS 固件升級工具、BIOS 命令行配置工具、BIOS UEFI 人機界面工具。</span></span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span><strong><span>操作系統：</span></strong><span>驅動軟件、命令行界面陣列管理工具、基於 Web 的圖形化陣列管理工具。</span></span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span><strong><span>BMC</span></strong><strong><span>：</span></strong><span>查詢和配置 API。</span></span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><img alt="" height="211" src="https://oscimg.oschina.net/oscnet/up-d80c654f89929a5968d6e23453490c0ae4d.png" width="500" referrerpolicy="no-referrer"></p><p><span>目前整套方案已經適配測試的國產服務器主機平台有海光、龍芯、飛騰、申威、兆芯等；國產操作系統有麒麟、UOS；國產 BIOS 有崑崙、百敖。</span></p><p><span>公告稱，「公司上述產品方案的推出實現了同類產品的全國產化替代，可廣泛應用於海量數據存儲、AI 計算加速、企業關鍵應用、邊緣計算、視頻流媒體和網絡應用等服務器產品，特別是信創領域相關服務器產品。」</span></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 18 Dec 2023 10:46:13 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271622</guid>
            <link>https://www.oschina.net/news/271622</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[騰訊雲捐贈 OpenTenBase 數據庫軟件，共建國產基礎軟件新生態]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="text-align:justify"><span><span><span><span><span style="color:#333333"><span><span><span><span style="color:#000000">12 月 16 日，在 2023 開放原子開發者大會上，騰訊雲宣佈將企業級分佈式數據庫 TDSQL 的社區發行版 OpenTenBase 捐贈給開放原子基金會，通過開源共創的方式，與上下游產業鏈以及開發者共同打造繁榮數據庫技術生態。</span></span></span></span></span></span></span></span></span></p><p style="text-align:justify"><span><span><span><span><span style="color:#333333"><span><span><span><span style="color:#000000">OpenTenBase 目前已在騰訊社交、遊戲、廣告、金融等內部業務及外部商用場景下打磨 10 年以上，可完美適用於擁有海量數據、高併發、高 HTAP，以及分佈式事務能力的應用場景。</span></span></span></span></span></span></span></span></span></p><p style="text-align:justify"><span><span><span><span><span style="color:#333333"><span><span><span><span style="color:#000000">據瞭解，這是繼編譯器軟件 OpenKona JDK，以及全鏈路自主演進的操作系統 OpenCloudOS 之後，騰訊捐贈的又一重磅基礎軟件項目。</span></span></span></span></span></span></span></span></span></p><p style="text-align:center"><img height="227" src="https://oscimg.oschina.net/oscnet/up-6e8f6de3ceea50b20299f7571c2c3e08b52.png" width="600" referrerpolicy="no-referrer"></p><p style="text-align:justify"><span><span><span><span><span style="color:#333333"><span><span><span><span style="color:#000000">開放原子開源基金會秘書長馮冠霖表示：「很高興看到騰訊能夠把多年研發打磨、通過海量業務場景考驗的基礎軟件數據庫項目 OpenTenBase 開源並捐贈到基金會，未來，基金會將秉持中立開放的態度，與業界一起將 OpenTenBase 打造成為具有全球影響力的優秀開源項目。」</span></span></span></span></span></span></span></span></span></p><p style="text-align:justify"><span><span><span><span><span style="color:#333333"><span><span><span><span style="color:#000000">數據庫作為計算機三大基礎軟件之一,向下可充分發揮硬件算力,向上支撐上層的應用需求,是信息系統高效運行的關鍵基礎。騰訊雲數據庫研發總經理潘安羣表示，OpenTenBase 數據庫在技術上填補了業內基於 PostgreSQL 的開源分佈式 OLTP 系統空白，並且集 HTAP 雙引擎、分佈式事務一致性、高 SQL 兼容度、複雜查詢等技術能力於一身，能夠為企業數字化轉型提供強有力支撐。</span></span></span></span></span></span></span></span></span></p><p style="text-align:justify"><span><span><span><span><span style="color:#333333"><span><span><span><span style="color:#000000">比如，在引擎方面，OpenTenBase 同時支持 OLTP（在線交易處理）和 OLAP（在線分析處理）能力，能夠有效降低業務架構複雜度和成本；在事務一致性方面，引入全局事務管理節點來管理分佈式事務，通過分佈式事務一致性技術來保證在全分佈式環境下的事務一致性；在兼容性方面，高度兼容 PostgreSQL 版本和 Oracle 版本；在查詢方面則全新開發分佈式查詢優化器，可將複雜查詢的性能提升十倍以上。</span></span></span></span></span></span></span></span></span></p><p style="text-align:justify"><span><span><span><span><span style="color:#333333"><span><span><span><span style="color:#000000">騰訊雲數據庫 TDSQL 近年來在多個領域取得重要突破，在性能上，今年 3 月刷新 TPC-C 世界記錄，每分鐘事務處理數達到 8.14 億；在最新的 IDC 報告中，位居中國分佈式關係型數據庫「領導者」類別，並在市場份額上取得國內第一的成績。</span></span></span></span></span></span></span></span></span></p><p style="text-align:justify"><span><span><span><span><span style="color:#333333"><span><span><span><span style="color:#000000">騰訊雲數據庫總經理王義成介紹，TDSQL 已涵蓋金融級分佈式、雲原生、分析型等多引擎融合的完整數據庫產品體系，提供業界領先的金融級高可用、存算分離、數據倉庫、企業級安全等能力。未來會持續投入和突破數據庫核心技術，打造更加健康可持續發展的數據庫生態和開源社區，為企業數字化轉型提供長久動力。</span></span></span></span></span></span></span></span></span></p><p style="text-align:justify"><span><span><span><span><span style="color:#333333"><span><span><span><span style="color:#000000">騰訊是開源技術的堅定推進者和建設者，多年來一直不斷推動更底層更重磅的技術對外開放。截至目前，騰訊已經對外開源了 170 餘個項目，在全球企業開源榜位居前十，獲得了超過 47 萬的開發者關注和點贊。在本次峯會上，騰訊獲頒「開放原子校源行傑出合作伙伴」「白金捐贈人」「三年傑出貢獻人」「開源安全委員會年度貢獻單位」等多項大獎，並參與開源人才教育、操作系統創新、AI 數據存儲、木蘭峯會等多個分論壇。</span></span></span></span></span></span></span></span></span></p><p style="text-align:justify"><span><span><span><span><span style="color:#333333"><span><span><span><span style="color:#000000">未來，騰訊雲將秉持開放、開源戰略，持續打磨技術能力，攜手開放原子開源基金會、廣大開發者和各行業合作伙伴，推動我國關鍵數字基礎設施加速突破。</span></span></span></span></span></span></span></span></span></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 18 Dec 2023 08:44:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/3859945/blog/10322307</guid>
            <link>https://my.oschina.net/u/3859945/blog/10322307</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[淺談 Socket.D 與響應式編程]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h2>一、Socket.D 的主要特性</h2><p style="color:#24292e; text-align:start">首先，<a href="https://gitee.com/noear/socketd">Scoket.D</a><span>&nbsp;</span>是高效一個二進制的網絡通訊協議（官方的講法是：基於事件和語義消息流的網絡應用協議），能夠滿足很多場景下使用。其次，Scoket.D 是温和的響應式（採用回調風格）。</p><h3>1、三種通訊模式</h3><ul><li>send 只是發送（發送後不管了）</li></ul><p style="color:#24292e; text-align:start">發送一個請求，無需為這個請求發送答覆報文。適用於監控埋點，日誌上報等，這種場景下無需回執，丟失幾個請求無傷大雅。</p><ul><li>sendAndRequest（發送並請求，要求一個「答覆」）</li></ul><p style="color:#24292e; text-align:start">發送一條請求消息，響應方收到後發回一個答覆消息。傳統的 HTTP 就是典型的 sendAndRequest。</p><ul><li>sendAndSubscribe（發送並訂閲，可接收 N 個「答覆」）</li></ul><p style="color:#24292e; text-align:start">發送一個訂閲消息，響應方收到後發回 N 個答覆報文。傳統的 MQ 是典型的 sendAndSubscribe。</p><h3>2、雙向監聽雙向會話</h3><p style="color:#24292e; text-align:start">Server 可以監聽 Client 發來的消息；Client 也可以監聽 Server 發來的消息。形成的 Session，更是可以相互對發消息。</p><h3>3、其它</h3><ul><li>二進制協議，緊湊高效</li><li>有語議、有事件</li><li>多路複用</li><li>靈活的傳輸層切換: TCP/UDP/WebSocket 等</li><li>支持自動分等高級特性</li></ul><h3>4、與其它協議對比</h3><p style="color:#24292e; text-align:start">感觀上像是各協議的優點提純。簡單且強大，非常有未來感！</p><table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:0px; box-sizing:border-box; color:#24292e; display:block; font-family:-apple-system,&quot;system-ui&quot;,&quot;Segoe UI&quot;,Helvetica,Arial,sans-serif,&quot;Apple Color Emoji&quot;,&quot;Segoe UI Emoji&quot;,&quot;Segoe UI Symbol&quot;; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; margin-bottom:16px; margin-top:0px; orphans:2; overflow:auto; text-align:start; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:960px; word-spacing:0px"><tbody><tr><th>對比項目</th><th>socket.d</th><th>http</th><th>websocket</th><th>rsocket</th><th>socket.io</th></tr></tbody><tbody><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">發消息（Qos0）</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">有</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">無</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">有</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">有</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">有</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">發送並請求（Qos1）</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">有</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">有</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">無</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">有</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">無</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">發送並訂閲</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">有</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">無</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">無</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">有</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">無</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">答覆或響應</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">有</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">有</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">無</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">有</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">無</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">單連接雙向通訊</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">有</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">無</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">有 (不便)</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">有</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">有 (不便)</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">數據分片</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">有</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">/</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">無</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">有</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">有</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">斷線自動重連</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">有</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">/</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">無</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">有</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">有</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">有元信息</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">有</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">有</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">無</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">有</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">無</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">有事件（或路徑）</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">有</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">有</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">無</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">無</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">有</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">有流（或消息關聯性）</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">有</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">無</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">無</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">有</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">無</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Broker 模式集羣</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">有</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">無</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">無</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">有</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">無</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">異步</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">異步</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">同步</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">異步</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">異步</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">異步</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">接口體驗</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">經典</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">經典</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">經典</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">響應式 (複雜)</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">經典</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">基礎傳輸協議</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">tcp, udp, ws</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">tcp</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">http</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">tcp, udp, ws</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">ws</td></tr></tbody></table><h2>二、Socket.D 的內部實現</h2><h3>1、幀的設計</h3><p style="color:#24292e; text-align:start">socket.d 是以幀為單位進行傳輸。大的幀還會自動分片成小幀進行傳輸（超過 16MB 自動分裂重組，大小可配置），到達接收端後再自動聚合。</p><ul><li>幀的邏輯結構</li></ul><pre><code class="language-css">frame: {flag, message: {sid, event, entity: { metaString, data}}}
</code></pre><p style="color:#24292e; text-align:start">幀的數據邏輯結構：幀裏有標誌和消息；消息裏有流標識、事件、實體；實體裏有元信息字符串和數據。</p><ul><li>完整的標準幀碼</li></ul><pre><code class="language-css"><span style="color:#986801">[len:int]</span><span style="color:#986801">[flag:int]</span><span style="color:#986801">[sid:str(&lt;64)]</span><span style="color:#986801">[\n]</span><span style="color:#986801">[event:str(&lt;512)]</span><span style="color:#986801">[\n]</span><span style="color:#986801">[metaString:str(&lt;4k)]</span><span style="color:#986801">[\n]</span><span style="color:#986801">[data:byte(&lt;16m)]</span></code></pre><table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:0px; box-sizing:border-box; color:#24292e; display:block; font-family:-apple-system,&quot;system-ui&quot;,&quot;Segoe UI&quot;,Helvetica,Arial,sans-serif,&quot;Apple Color Emoji&quot;,&quot;Segoe UI Emoji&quot;,&quot;Segoe UI Symbol&quot;; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; margin-bottom:16px; margin-top:0px; orphans:2; overflow:auto; text-align:start; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:960px; word-spacing:0px"><tbody><tr><th>字段</th><th>類型</th><th>大小</th><th>説明</th></tr></tbody><tbody><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">len</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">int</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">4 字節</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">幀長度（包括它自己的 4 字節佔位）</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">flag</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">int</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">4 字節</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">標誌（相當於協議指令）</td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">sid</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">String</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">64 字節以內</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">流標識。<code>格式為： guid</code></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">event</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">String</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">512 字節以內</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">事件。<code>格式為：可見字符 string</code></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">metaString</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">String</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">4Kb 以內</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">元信息字符串。<code>格式為：通用的 uri queryString</code></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">data</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">byte[]</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">16Mb 以內</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">數據。<code>格式為： byte[]</code></td></tr></tbody></table><p style="color:#24292e; text-align:start">注意：當使用 udp 傳輸時，幀長度不能超過 2k （聽説，實際不能超過 1.4k ）</p><ul><li>簡化的輔助幀碼（Ping, Pong, Close），取消了 message 部分</li></ul><pre><code class="language-python">[<span style="color:#c18401">len</span>:<span style="color:#c18401">int</span>][flag:<span style="color:#c18401">int</span>]
</code></pre><h3>2、數據實體——Entity</h3><p style="color:#24292e; text-align:start">基於幀之上，一般開發者接觸到的是 Entity, 它類似一個 HTTP 報文，可以是一個 Request，也可以是一個 Response。由兩個部分組成：</p><ul><li>MetaString 元信息字符串，類似 HTTP 的 header。格式：字符串</li><li>Data 數據，類似 HTTP 的 body。格式：二進制</li></ul><h3>3、玩法</h3><p style="color:#24292e; text-align:start">Socket.D 有很多玩法，傳統的 RPC 自然不在話下，用來做 IM 也未嘗不可，開發 MQ 也很簡單（<a href="https://gitee.com/noear/folkmq">FolkMQ</a><span>&nbsp;</span>就是用它開發的）。某些特性也可以用來做代理或者網絡穿透。 IoT 的場景，比如小明的家裏有個智能空調，小明想在外面通過手機 APP 來控制空調開關，如何優雅地描述這個控制問題？最精煉的解決方案就是"小明調用空調上開關的 API"。</p><p style="color:#24292e; text-align:start">另外最經典的玩法就是 Broker 了，Broker 類似一種「軟路由」的方案，可以讓服務的發佈訪問變得簡單。發佈服務只要連接到 Broker，調用方通過反向請求的方式來讓 Broker 透明轉發即可，摒棄了傳統的註冊中心，端口管理等常見的服務治理手段。</p><h3>4、關於 Socket.D Broker</h3><p style="color:#24292e; text-align:start">Broker 有很多優勢，發佈服務不需要監聽端口，無需 Sidecar，服務註冊變得簡單，無需 zk、etcd 之類，LoadBalance 變得簡單，也更安全，沒監聽端口後很難攻擊。也有很多劣勢，網絡上多了一跳，性能是有一定損耗的，Broker 是中心化設計，類似我們平時全局的 Nginx 一樣，但是 Broker 的優雅啓停顯然更加複雜，受限於整個 Broker 集羣的瓶頸等等。上帝為你關閉了一扇門，就一定會為你打開一扇窗。</p><h2>三、響應式編程，難嗎？</h2><p style="color:#24292e; text-align:start">響應式編程是個老話題了，它早已無處不在，甚至你在 Excel 裏 SUM 求和，本質上也是種響應式的思維。響應式本質上就是響應變化的數據流。Socket.D 這個協議本身就是以響應式之名，將其擴展到網絡層面。</p><p style="color:#24292e; text-align:start">但是，響應式接口對一般程序員，不太友好。Socket.D 是響應式，但採用"經典的回調界面"。</p><h2>四、總結</h2><p style="color:#24292e; text-align:start">Socket.D 是個很有趣的網絡協議，未來應該會普及流行。它解決問題的思路和設計很令人耳目一新。如果大家有興趣，可以去它的官網瞭解下。</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 18 Dec 2023 07:12:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271572</guid>
            <link>https://www.oschina.net/news/271572</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[HashiCorp 聯合創始人離職，準備涉足新領域]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">在&nbsp;HashiCorp 成立十一週年之際，公司聯合創始人 Mitchell Hashimoto 面向全體職員及社區發送了一封<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.hashicorp.com%2Fblog%2Fmitchell-reflects-as-he-departs-hashicorp" target="_blank">告別信</a>，宣佈他將從 HashiCorp 離職。</span></p><p><span style="color:#000000">「我最近剛慶祝了 HashiCorp 成立 11 週年，回顧過去的十年，我覺得沒有比這更好的方式來度過我的這一段人生了。」</span></p><p><span style="color:#000000">HashiCorp 由 Hashimoto 和 Armon Dadgar（現任首席技術官）於 2012 年創立。現任首席執行官是於 2016 年加入公司的 Dave McJannet，此前曾在 Hortonworks、VMware 和微軟任職。</span></p><p><span style="color:#000000"><img alt="" height="332" src="https://oscimg.oschina.net/oscnet/up-18a06853b25d3cf15c7d5439600cbec5df6.webp" width="500" referrerpolicy="no-referrer"></span></p><p><em><span style="color:#737578">Armon、Mitchell 和 Dave</span></em></p><p><span style="color:#000000">Hashimoto 透露，離開 HashiCorp 是他長期以來一直在思考和計劃的事情。他一直以來的願景就是建立一家不需要自己負責日常運營、且能夠有其他領導者接任的公司。因此，他在 2016 年辭去了首席執行官一職，並於 2021 年離開領導團隊和董事會。</span></p><p><span style="color:#000000">今年 9 月份，他迎來了他的第一個孩子，也正是這一契機促使他做出離開&nbsp;HashiCorp 的決定。「雲自動化和基礎設施工具的世界仍然充滿機遇和增長，但在專門從事這一領域的工具工作近 15 年之後，我已經準備好涉足新的領域。」</span></p><p><span style="color:#000000">Hashimoto 回顧了 HashiCorp 一路走來的經歷，並向&nbsp;<span style="background-color:#ffffff">McJannet 和 Dadgar 表示了敬意。GitHub 2023 年 Octoverse 狀態報告指出，HashiCorp 配置語言的採用率持續增長，同比增長 36%。</span></span></p><p><span style="color:#000000"><span style="background-color:#ffffff">外界對&nbsp;</span>Hashimoto 的離開各有猜測。近段時間，該公司因變更許可協議的事情引起了諸多紛爭。一位業內人士認為，公司創始人的名字是公司品牌的一部分，他的離開很少會預示着一些正向的發展。HashiCorp 則拒絕對此發表評論。</span></p><p><strong><span style="color:#000000">相關閲讀：</span></strong></p><ul><li><a href="https://www.oschina.net/news/253275/hashicorp-adopts-business-source-license" target="news">HashiCorp 核心產品變更開源協議，未來將採用 BSL</a></li><li><a href="https://www.oschina.net/news/255700/opentf-fork-terraform" target="news">HashiCorp 採用 BSL 後，社區創建 Terraform 分支 OpenTF</a></li><li><a href="https://www.oschina.net/news/270477/hashicorp-vault-openbao-fork" target="news">HashiCorp 採用 BSL 後續，Linux 基金會孵化 Vault 開源替代品</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Mon, 18 Dec 2023 07:01:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271569/hashimoto-departs-hashicorp</guid>
            <link>https://www.oschina.net/news/271569/hashimoto-departs-hashicorp</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[🔥周熱點 | 商湯科技創始人湯曉鷗離世；C#有望成為年度編程語言..........]]>
            </title>
            <description>
                <![CDATA[回顧一週熱門資訊。2023.12.11-2023.12.17]]>
            </description>
            <pubDate>Mon, 18 Dec 2023 07:01:00 GMT</pubDate>
            <guid isPermaLink="false">https://mp.weixin.qq.com/s?__biz=MzA4OTI5NjUwOA==&#38;mid=2649094056&#38;idx=1&#38;sn=57418822bd640c45ac54ed573c95699c&#38;chksm=880c4cbbbf7bc5ad23ac2df6cfe74b4f06bb7f47b1428060246e36d8dffce0dad7e26fddef61&#38;token=1144454168&#38;lang=zh_CN#rd</guid>
            <link>https://mp.weixin.qq.com/s?__biz=MzA4OTI5NjUwOA==&#38;mid=2649094056&#38;idx=1&#38;sn=57418822bd640c45ac54ed573c95699c&#38;chksm=880c4cbbbf7bc5ad23ac2df6cfe74b4f06bb7f47b1428060246e36d8dffce0dad7e26fddef61&#38;token=1144454168&#38;lang=zh_CN#rd</link>
        </item>
        <item>
            <title>
                <![CDATA[要解鎖小米手機 BL？先做一份 Java 程序員面試題]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>小米最近啓用了新的解鎖 Bootloader 流程，除了要去小米社區獲取經驗（要求社區等級達到 5），還需要參與答題。</p><p>答題要求：</p><blockquote><ol><li>答題開放時間為：工作日上午 10 點 - 下午 18 點（法定節假日為答題系統維護時間，請參閲」近期答題系統維護時間」），還請合理安排答題時間。 [近期答題系統維護時間：2023 年 12 月 16 日 - 17 日、2023 年 12 月 23 - 24 日、2023 年 12 月 30 日 - 2024 年 1 月 1 日]</li><li>答題成績每週三上午 10:59 失效，如答題通過，請務必在週三中午 11 點前完成申請，避免成績失效影響申請</li><li>用户即使滿足解鎖申請條件，如在社交媒介（包括但不限於各論壇、微博、微信、QQ 羣等）對小米有過惡意詆譭、謾罵、造謠等情況，申請不予通過</li><li>用户即使滿足解鎖申請條件，如在申請時不填寫申請理由、或使用 AI 生成申請理由、或申請理由出現過辱罵威脅等內容，申請不予通過</li><li>用户即使滿足解鎖申請條件，但出現被判定為作弊的行為（包括但不限於找人「代答」、使用腳本或工具達到申請條件等），或有其他違反小米賬號使用協議的相關情形，申請不予通過</li></ol></blockquote><p>可以看到，答題有時間限制，而且隨着時間推移小米不停地更新問題庫。新問題甚至加上了排列組合速算：</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-45e03e2ab55ddf67fdbd42f7b1b5b02becd.png" referrerpolicy="no-referrer"></p><p>下面這種題目的難度確定不是雷總招 Java 程序員用的面試題嗎？JVM 垃圾回收機制都整上了……</p><p><img src="https://oscimg.oschina.net/oscnet/up-33b487bb3fc7e05ce34ab6bed8fabaf2b4a.png" referrerpolicy="no-referrer"><img height="1484" src="https://oscimg.oschina.net/oscnet/up-246ac5dd82b0862a70fe3d11a7cda949a3d.png" width="892" referrerpolicy="no-referrer"><img src="https://oscimg.oschina.net/oscnet/up-fa8da0795c61974da6d4f0554fabd9010a9.png" referrerpolicy="no-referrer"></p><p>據瞭解，小米官方在 11 月<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweb.vip.miui.com%2Fpage%2Finfo%2Fmio%2Fmio%2Fdetail%3FpostId%3D41559680" target="_blank">宣佈 Bootloader 解鎖權限變更</a></u>：</p><blockquote><p><img src="https://oscimg.oschina.net/oscnet/up-4f489c01770aa3a174774f20cafe2abdb6b.png" referrerpolicy="no-referrer"></p></blockquote><p>總結下來就是：</p><ul><li>小米社區的等級為 5 級</li><li>完成實名驗證</li><li>參與答題</li><li>每年最多隻能解鎖 3 台小米設備的 Bootloader</li><li>引導加載程序解鎖僅在解鎖之日起一年內有效，之後您必須為該特定小米設備重新解鎖引導加載程序一年</li><li>申請解鎖​​Bootloader 權限時，72 小時內不能使用該設備</li><li>如果引導加載程序解鎖，HyperOS 設備將不會收到更新（這一特定更新也適用於全球用户）</li></ul><p><img height="1660" src="https://oscimg.oschina.net/oscnet/up-adb61862206cae6b8a931759672e13280d0.png" width="776" referrerpolicy="no-referrer"><img src="https://oscimg.oschina.net/oscnet/up-893e84a9c2497eb96f8e7a3c32142572cbe.png" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 18 Dec 2023 05:52:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271547</guid>
            <link>https://www.oschina.net/news/271547</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[開源軟件無法通過「更低價」獲取市場]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Lago 是一個用於基於計量和使用量的開源計費工具，提供了開源（自己本地部署）和 SaaS 版本。Lago 是專門針對處理複雜計費邏輯場景打造的低代碼工具，用户可以直接使用 UI 或 API，來創建計費指標和計劃。</p><blockquote><p><img src="https://oscimg.oschina.net/oscnet/up-e25d1d8220a67a57066c2312fa80bdc6ff4.png" referrerpolicy="no-referrer"></p><p>來源：<em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgetlago%2Flago%2Fwiki%2FOpen-Source-does-not-win-by-being-cheaper" target="_blank">https://github.com/getlago/lago/wiki/Open-Source-does-not-win-by-being-cheaper</a></u></em></p></blockquote><p>Lago 聯合創始人發表文章《<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgetlago%2Flago%2Fwiki%2FOpen-Source-does-not-win-by-being-cheaper" target="_blank"><em>Open Source does not win by being cheaper</em></a></u>》探討了開源軟件的競爭優勢。正如標題所言，她認為<strong>開源軟件無法通過「更低價」取勝</strong>——迎合價格敏感的人反而是一種失敗。</p><p>因為開源軟件優勢在<strong>於靈活性、透明度、安全性、數據可移植性以及持續性</strong>。</p><ul><li>開源軟件使得組織能夠快速整合新技術到其技術棧中，相比傳統方法，團隊可以更快地將開源軟件連接到他們每天使用的其他工具上。這種靈活性使得開發團隊能夠根據需要構建完美的工具，而不是被迫改變他們的工作方式以適應不靈活的專有工具。</li><li>開源軟件使得組織能夠掌控自己的安全性，因為所有人都可以徹底檢查源代碼，這樣漏洞就能更快地得到修復，從而不斷增強軟件的安全性。在遠程工作的時代，開源軟件也能夠促進高信任的遠程協作，保護敏感數據的安全。</li><li>開源軟件能夠避免供應商鎖定，使得數據可移植。相比專有軟件，開源軟件提供了避免供應商鎖定的自由和靈活，使得組織能夠自由地攜帶數據到任何他們想去的地方。 &nbsp;</li><li>開源軟件還具有可持續性。相比專有軟件可能會因為公司破產或者推出新產品而停止更新，開源軟件由一個龐大的社區支持，因此不太可能停止維護。即使社區停止維護，你也有自由訪問和修改源代碼的權利。</li></ul></div>
                                    ]]>
            </description>
            <pubDate>Mon, 18 Dec 2023 04:15:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271534</guid>
            <link>https://www.oschina.net/news/271534</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[State of PostgreSQL 2023 報告解讀]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="rich_media_content js_underline_content
                       autoTypeSetting24psection
            " id="js_content"><section style="margin-right: 8px;margin-left: 8px;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);text-align: left;"><span style="outline: 0px;font-size: 16px;letter-spacing: 0.5px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">基於 PostgreSQL 內核的時序數據庫廠商 Timescale 發佈了一年一度的 State of Postgres 2023 報告。</span><br style="outline: 0px;"></section><section style="margin-right: 8px;margin-left: 8px;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);text-align: left;line-height: 1.75em;"><img class="rich_pages wxw-img" data-height="491" data-imgfileid="100028228" data-ratio="0.43796296296296294" data-type="png" data-w="1080" data-width="1122" src="https://oscimg.oschina.net/oscnet/cd5af3fa-a9bf-434f-83f2-c05037fe9543.png" style="outline: 0px;width: 677px !important;visibility: visible !important;" referrerpolicy="no-referrer"></section><h1 style="margin-right: 8px;margin-bottom: 8px;margin-left: 8px;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);text-align: left;line-height: 1.75em;"><strong style="outline: 0px;"><span style="outline: 0px;letter-spacing: 0.5px;font-size: 20px;"><img class="rich_pages wxw-img" data-imgfileid="100028227" data-ratio="0.10925925925925926" data-s="300,640" data-type="png" data-w="1080" src="https://oscimg.oschina.net/oscnet/501f9254-8909-4823-ab73-fc5268cf32eb.png" style="outline: 0px;letter-spacing: 0.578px;width: 677px !important;visibility: visible !important;" referrerpolicy="no-referrer"></span></strong></h1><span id="OSC_h1_1"></span><h1 style="margin-right: 8px;margin-bottom: 16px;margin-left: 8px;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);text-align: left;line-height: 1.75em;"><strong style="outline: 0px;"><span style="outline: 0px;letter-spacing: 0.5px;font-size: 20px;">Timescale 介紹</span></strong></h1><section style="margin-right: 8px;margin-left: 8px;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);text-align: left;line-height: 1.75em;"><span style="outline: 0px;font-size: 16px;letter-spacing: 0.5px;">簡單先介紹一下 Timescale 這家公司的歷史。它最早是提供了一個 PG 的插件，引入了 Hypertable 這個概念，來高效地處理時序數據，後來提供了託管的雲服務。今年又緊跟潮流陸續引入了 Serverless 和 Vector。</span></section><section style="margin-right: 8px;margin-left: 8px;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);text-align: left;line-height: 1.75em;"><img class="rich_pages wxw-img" data-height="426" data-imgfileid="100028231" data-ratio="0.287962962962963" data-type="png" data-w="1080" data-width="1478" src="https://oscimg.oschina.net/oscnet/a7d587c3-0b0e-4aab-baa3-951ed19898a2.png" style="outline: 0px;width: 677px !important;visibility: visible !important;" referrerpolicy="no-referrer"></section><section style="margin-right: 8px;margin-left: 8px;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);text-align: left;line-height: 1.75em;"><span style="outline: 0px;font-size: 16px;letter-spacing: 0.5px;">Timescale 也在今年做了一次品牌升級，筆者覺得是比較成功的。Logo 有辨識度且含義貼切，整體的風格也契合公司的階段。在商業能力這塊，Timescale 應該是目前 Postgres 陣營裏最成熟的。不過 Timescale 本身做的是基於 Postgres 的時序數據庫而不是 Postgres 通用數據庫，所以它也要面臨其他專門做時序數據庫的競爭。</span></section><section style="margin-right: 8px;margin-left: 8px;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);text-align: left;line-height: 1.75em;"><img class="rich_pages wxw-img" data-height="511" data-imgfileid="100028230" data-ratio="0.5273477812177503" data-type="png" data-w="969" data-width="969" src="https://oscimg.oschina.net/oscnet/1f9e8c6a-72d2-464e-a6ab-35cd8c64987d.png" style="outline: 0px;width: 677px !important;visibility: visible !important;" referrerpolicy="no-referrer"></section><section style="margin-right: 8px;margin-left: 8px;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);text-align: left;line-height: 1.75em;"><span style="outline: 0px;font-size: 16px;letter-spacing: 0.5px;">Wiki 上顯示的發佈時間應該是錯誤的，2017 年筆者在 Google Cloud SQL 負責 Postgres 時, Timescale 團隊就接觸過我們希望可以引入他們的插件。當時從成熟度的考慮，並沒有接納。不過有點意外的是，現在 Google Cloud SQL 上仍然沒有上架 Timescale 插件。</span></section><section style="margin-right: 8px;margin-left: 8px;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);text-align: left;line-height: 1.75em;"><img class="rich_pages wxw-img" data-height="192" data-imgfileid="100028229" data-ratio="0.24" data-type="png" data-w="800" data-width="800" src="https://oscimg.oschina.net/oscnet/0fd31385-064f-4dc5-a1d1-bba6ce8e6b3c.png" style="outline: 0px;width: 677px !important;visibility: visible !important;" referrerpolicy="no-referrer"></section><h1 style="margin-right: 8px;margin-bottom: 8px;margin-left: 8px;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);text-align: left;line-height: 1.75em;"><span style="outline: 0px;letter-spacing: 0.5px;"><img class="rich_pages wxw-img" data-imgfileid="100028236" data-ratio="0.10925925925925926" data-s="300,640" data-type="png" data-w="1080" src="https://oscimg.oschina.net/oscnet/ad316e21-e120-445c-8d6f-6ef5bd28e852.png" style="outline: 0px;letter-spacing: 0.578px;width: 677px !important;visibility: visible !important;" referrerpolicy="no-referrer"></span></h1><span id="OSC_h1_2"></span><h1 style="margin-right: 8px;margin-bottom: 16px;margin-left: 8px;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);text-align: left;line-height: 1.75em;"><span style="outline: 0px;letter-spacing: 0.5px;font-size: 20px;"><strong style="outline: 0px;">報告整體</strong></span></h1><section style="margin-right: 8px;margin-left: 8px;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);text-align: left;line-height: 1.75em;"><span style="outline: 0px;font-size: 16px;letter-spacing: 0.5px;">首先這是一份相對有偏向性的報告，本身 Timescale 的立場就使得報告的受眾羣體會是 Postgres 的使用者。比如説下面這個問題的答案。</span></section><section style="margin-right: 8px;margin-left: 8px;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);text-align: left;line-height: 1.75em;"><img class="rich_pages wxw-img" data-height="431" data-imgfileid="100028234" data-ratio="0.49032992036405004" data-type="png" data-w="879" data-width="879" src="https://oscimg.oschina.net/oscnet/a668922b-94d7-430c-a764-3493f797369a.png" style="outline: 0px;width: 677px !important;visibility: visible !important;" referrerpolicy="no-referrer"></section><section style="margin-right: 8px;margin-left: 8px;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);text-align: left;line-height: 1.75em;"><span style="outline: 0px;font-size: 16px;letter-spacing: 0.5px;">Timescale 從 2019 開始做 State of PostgreSQL，今年的調研持續 6 周，報告結果從 888 份問卷中彙總而成。</span></section><section style="margin-right: 8px;margin-left: 8px;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);text-align: left;line-height: 1.75em;"><img class="rich_pages wxw-img" data-height="54" data-imgfileid="100028232" data-ratio="0.0819423368740516" data-type="png" data-w="659" data-width="659" src="https://oscimg.oschina.net/oscnet/1e0c2b22-819c-45af-abaa-34d7b547f49d.png" style="outline: 0px;width: 659px !important;visibility: visible !important;" referrerpolicy="no-referrer"></section><section style="margin-right: 8px;margin-left: 8px;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);text-align: left;line-height: 1.75em;"><span style="outline: 0px;font-size: 16px;letter-spacing: 0.5px;">相比於我們之前做過的<a target="_blank" href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzkzMjI2MDY5OQ%3D%3D%26mid%3D2247506004%26idx%3D1%26sn%3Dc6eb5cb91a61e78ddd4d2d3948b94e28%26chksm%3Dc25ce660f52b6f76de08b19c4e3d032b9733d65efb9dfe26072ff29d87b2b2e5a254d1c59d2f%26scene%3D21%23wechat_redirect" textvalue="谷歌 DORA" linktype="text" imgurl="" imgdata="null" data-itemshowtype="0" tab="innerlink" data-linktype="2" hasload="1" style="outline: 0px;color: var(--weui-LINK);-webkit-user-drag: none;cursor: pointer;">谷歌 DORA</a>&nbsp;以及&nbsp;<a target="_blank" href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzkzMjI2MDY5OQ%3D%3D%26mid%3D2247506451%26idx%3D1%26sn%3D04b3b6f6313f1243eb43fb90a70c1205%26chksm%3Dc25ce427f52b6d31fee26c69a9e5e86d064aeead057165bae50ef1747bd2dfcd2be85e5bcda3%26scene%3D21%23wechat_redirect" textvalue="JetBrains 開發者報告" linktype="text" imgurl="" imgdata="null" data-itemshowtype="0" tab="innerlink" data-linktype="2" hasload="1" style="outline: 0px;color: var(--weui-LINK);-webkit-user-drag: none;cursor: pointer;">JetBrains 開發者報告</a>，Timescale 報告樣本數要小許多，一是因為 Timescale 還沒有那麼大的影響力，二是 PostgreSQL 只是整個開發者羣體下的數據庫領域下的一個垂直領域。</span></section><h1 style="margin-right: 8px;margin-bottom: 8px;margin-left: 8px;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);text-align: left;line-height: 1.75em;"><span style="outline: 0px;letter-spacing: 0.5px;"><img class="rich_pages wxw-img" data-imgfileid="100028233" data-ratio="0.10925925925925926" data-s="300,640" data-type="png" data-w="1080" src="https://oscimg.oschina.net/oscnet/3366c12e-fe40-426c-85c4-1ddd4eab39a3.png" style="outline: 0px;letter-spacing: 0.578px;width: 677px !important;visibility: visible !important;" referrerpolicy="no-referrer"></span></h1><span id="OSC_h1_3"></span><h1 style="margin-right: 8px;margin-bottom: 16px;margin-left: 8px;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);text-align: left;line-height: 1.75em;"><span style="outline: 0px;letter-spacing: 0.5px;font-size: 20px;"><strong style="outline: 0px;">調研人羣</strong></span></h1><section style="margin-right: 8px;margin-left: 8px;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);text-align: left;line-height: 1.75em;"><img class="rich_pages wxw-img" data-height="1074" data-imgfileid="100028235" data-ratio="1.2740213523131672" data-type="png" data-w="843" data-width="843" src="https://oscimg.oschina.net/oscnet/85c8e1e0-f192-4498-8f2e-c092d4442c4c.png" style="outline: 0px;width: 677px !important;visibility: visible !important;" referrerpolicy="no-referrer"></section><section style="margin-right: 8px;margin-left: 8px;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);text-align: left;line-height: 1.75em;"><span style="outline: 0px;font-size: 16px;letter-spacing: 0.5px;">沒有再細分到國家。工作經驗分佈比較平均，有點意外的，尤其是 10 年以上佔了 2/3。</span></section><section style="margin-right: 8px;margin-left: 8px;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);text-align: left;"><img class="rich_pages wxw-img" data-galleryid="" data-imgfileid="100028240" data-ratio="0.48703703703703705" data-s="300,640" data-type="png" data-w="1080" src="https://oscimg.oschina.net/oscnet/fdd18ffc-3bc8-4a08-96f2-644460c06f16.png" style="outline: 0px;width: 677px !important;visibility: visible !important;" referrerpolicy="no-referrer"></section><section style="margin-right: 8px;margin-left: 8px;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);text-align: left;line-height: 1.75em;"><span style="outline: 0px;font-size: 16px;letter-spacing: 0.5px;">Postgres 基本盤還是後端開發人員。</span></section><h1 style="margin-right: 8px;margin-bottom: 8px;margin-left: 8px;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);text-align: left;line-height: 1.75em;"><span style="outline: 0px;letter-spacing: 0.5px;"><img class="rich_pages wxw-img" data-imgfileid="100028237" data-ratio="0.10925925925925926" data-s="300,640" data-type="png" data-w="1080" src="https://oscimg.oschina.net/oscnet/a36affdd-f583-4a4a-8d93-c94650b59189.png" style="outline: 0px;letter-spacing: 0.578px;width: 677px !important;visibility: visible !important;" referrerpolicy="no-referrer"></span></h1><span id="OSC_h1_4"></span><h1 style="margin-right: 8px;margin-bottom: 16px;margin-left: 8px;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);text-align: left;line-height: 1.75em;"><span style="outline: 0px;letter-spacing: 0.5px;font-size: 20px;"><strong style="outline: 0px;">選擇 PostgreSQL 的原因</strong></span></h1><section style="margin-right: 8px;margin-left: 8px;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);text-align: left;line-height: 1.75em;"><img class="rich_pages wxw-img" data-height="639" data-imgfileid="100028238" data-ratio="0.8374836173001311" data-type="png" data-w="763" data-width="763" src="https://oscimg.oschina.net/oscnet/0ed0e918-8ace-42ae-96f5-d0d9c862025d.png" style="outline: 0px;width: 677px !important;visibility: visible !important;" referrerpolicy="no-referrer"></section><section style="margin-right: 8px;margin-left: 8px;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);text-align: left;line-height: 1.75em;"><span style="outline: 0px;font-size: 16px;letter-spacing: 0.5px;">開源證書是最大的優勢。但這裏沒有説清楚是相比於使用不同開源證書的 MySQL，還是相比於閉源的數據庫。豐富的的功能另一個顯著的優勢。相對來説選擇 Extension 的人沒有預想的多。這裏最有意思的是 15+ 工作經驗的，排序是證書 &gt; 穩定性 &gt; 功能 &gt; ACID。大道至簡，返璞歸真。</span></section><h1 style="margin-right: 8px;margin-bottom: 8px;margin-left: 8px;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);text-align: left;line-height: 1.75em;"><span style="outline: 0px;letter-spacing: 0.5px;"><img class="rich_pages wxw-img" data-imgfileid="100028239" data-ratio="0.10947368421052632" data-s="300,640" data-type="png" data-w="950" src="https://oscimg.oschina.net/oscnet/68d055a2-cd96-46f0-9198-67e3632ded36.png" style="outline: 0px;letter-spacing: 0.578px;width: 677px !important;visibility: visible !important;" referrerpolicy="no-referrer"></span></h1><span id="OSC_h1_5"></span><h1 style="margin-right: 8px;margin-bottom: 16px;margin-left: 8px;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);text-align: left;line-height: 1.75em;"><span style="outline: 0px;letter-spacing: 0.5px;font-size: 20px;"><strong style="outline: 0px;">PostgreSQL 的上手體驗</strong></span></h1><section style="margin-right: 8px;margin-left: 8px;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);text-align: left;line-height: 1.75em;"><img class="rich_pages wxw-img" data-height="799" data-imgfileid="100028241" data-ratio="0.9913151364764268" data-type="png" data-w="806" data-width="806" src="https://oscimg.oschina.net/oscnet/b93f20a5-0e01-44bc-97a0-d1addc9ca49b.png" style="outline: 0px;width: 677px !important;visibility: visible !important;" referrerpolicy="no-referrer"></section><section style="margin-right: 8px;margin-left: 8px;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);text-align: left;line-height: 1.75em;"><span style="outline: 0px;font-size: 16px;letter-spacing: 0.5px;">平均水平以上，但談不上很優秀。PostgreSQL 強大功能的另一面就是上手更有門檻。比如説 Database / Schema / Table 三層以及對應的權限系統，適合大型項目，對小型開發就顯得臃腫了。</span></section><h1 style="margin-right: 8px;margin-bottom: 8px;margin-left: 8px;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);text-align: left;line-height: 1.75em;"><span style="outline: 0px;letter-spacing: 0.5px;"><img class="rich_pages wxw-img" data-imgfileid="100028242" data-ratio="0.10947368421052632" data-s="300,640" data-type="png" data-w="950" src="https://oscimg.oschina.net/oscnet/c98ae2aa-f829-4205-8b0b-fb214af265b7.png" style="outline: 0px;letter-spacing: 0.578px;width: 677px !important;visibility: visible !important;" referrerpolicy="no-referrer"></span></h1><span id="OSC_h1_6"></span><h1 style="margin-right: 8px;margin-bottom: 16px;margin-left: 8px;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);text-align: left;line-height: 1.75em;"><span style="outline: 0px;letter-spacing: 0.5px;font-size: 20px;"><strong style="outline: 0px;">生態和工具</strong></span></h1><section style="margin-right: 8px;margin-left: 8px;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);text-align: left;line-height: 1.75em;"><img class="rich_pages wxw-img" data-height="499" data-imgfileid="100028244" data-ratio="0.5802325581395349" data-type="png" data-w="860" data-width="860" src="https://oscimg.oschina.net/oscnet/824110b9-ef61-4c32-876a-0332684230c7.png" style="outline: 0px;width: 677px !important;visibility: visible !important;" referrerpolicy="no-referrer"></section><section style="margin-right: 8px;margin-left: 8px;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);text-align: left;line-height: 1.75em;"><span style="outline: 0px;font-size: 16px;letter-spacing: 0.5px;">這個插件的問題有點狡猾，把 favorite 和 most frequently 並在了一起，結果東道主的 timescaledb 就力壓 pg_stat_statements 了🤔。</span></section><section style="margin-right: 8px;margin-left: 8px;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);text-align: left;line-height: 1.75em;"><img class="rich_pages wxw-img" data-height="555" data-imgfileid="100028243" data-ratio="0.69375" data-type="png" data-w="800" data-width="800" src="https://oscimg.oschina.net/oscnet/f8247ef4-d129-48ed-a4cc-3c28e338a0ae.png" style="outline: 0px;width: 677px !important;visibility: visible !important;" referrerpolicy="no-referrer"></section><section style="margin-right: 8px;margin-left: 8px;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);text-align: left;line-height: 1.75em;"><span style="outline: 0px;font-size: 16px;letter-spacing: 0.5px;">DBeaver 在通用數據庫客户端裏遙遙領先。</span></section><section style="margin-right: 8px;margin-left: 8px;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);text-align: left;"><img class="rich_pages wxw-img" data-galleryid="" data-imgfileid="100028245" data-ratio="0.3675925925925926" data-s="300,640" data-type="png" data-w="1080" src="https://oscimg.oschina.net/oscnet/6e69c23e-2d83-4ebb-b659-fc9376670d41.png" style="outline: 0px;width: 677px !important;visibility: visible !important;" referrerpolicy="no-referrer"></section><section style="margin-right: 8px;margin-left: 8px;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);text-align: left;line-height: 1.75em;"><span style="outline: 0px;font-size: 16px;letter-spacing: 0.5px;">pgBouncer 依然是最流行的工具，不用連接池的話，很容易造成連接打滿。第二常用的就是可視化查詢計劃工具 Depesz，這個工具也存在好久了，也是開源的，Bytebase 也在 SQL Editor 中集成了。</span></section><section style="margin-right: 8px;margin-left: 8px;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);text-align: left;line-height: 1.75em;"><img class="rich_pages wxw-img" data-height="613" data-imgfileid="100028246" data-ratio="0.706221198156682" data-type="png" data-w="868" data-width="868" src="https://oscimg.oschina.net/oscnet/f8dfc64a-fbc1-4842-a091-2d879484363a.png" style="outline: 0px;width: 677px !important;visibility: visible !important;" referrerpolicy="no-referrer"></section><section style="margin-right: 8px;margin-left: 8px;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);text-align: left;line-height: 1.75em;"><span style="outline: 0px;font-size: 16px;letter-spacing: 0.5px;">版本分佈情況。</span></section><section style="margin-right: 8px;margin-left: 8px;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);text-align: left;line-height: 1.75em;"><img class="rich_pages wxw-img" data-height="944" data-imgfileid="100028250" data-ratio="1.1919191919191918" data-type="png" data-w="792" data-width="792" src="https://oscimg.oschina.net/oscnet/74982ce9-c6ca-4c25-866a-314109c0aad0.png" style="outline: 0px;width: 677px !important;visibility: visible !important;" referrerpolicy="no-referrer"></section><section style="margin-right: 8px;margin-left: 8px;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);text-align: left;line-height: 1.75em;"><span style="outline: 0px;font-size: 16px;letter-spacing: 0.5px;">使用上的挑戰。果然是把 VACUUM 單獨拎出來吊打了。</span></section><section style="margin-right: 8px;margin-left: 8px;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);text-align: left;line-height: 1.75em;"><img class="rich_pages wxw-img" data-height="1054" data-imgfileid="100028251" data-ratio="1.2031963470319635" data-type="png" data-w="876" data-width="876" src="https://oscimg.oschina.net/oscnet/aa0683c7-95a8-4143-81d3-3b0c3886da09.png" style="outline: 0px;width: 677px !important;visibility: visible !important;" referrerpolicy="no-referrer"></section><section style="margin-right: 8px;margin-left: 8px;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);text-align: left;line-height: 1.75em;"><span style="outline: 0px;font-size: 16px;letter-spacing: 0.5px;">部署的方式，這個圖沒有太看懂，如果大家都跌了，那應該有人大漲才對？不過當年最早做 Postgres 託管的 Heroku 也快要退出歷史舞台了。</span></section><section style="margin-right: 8px;margin-left: 8px;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);text-align: left;line-height: 1.75em;"><img class="rich_pages wxw-img" data-height="573" data-imgfileid="100028249" data-ratio="0.7234848484848485" data-type="png" data-w="792" data-width="792" src="https://oscimg.oschina.net/oscnet/ff3168f9-d1e4-4d0f-a2b8-98f6e6603aea.png" style="outline: 0px;width: 677px !important;visibility: visible !important;" referrerpolicy="no-referrer"></section><section style="margin-right: 8px;margin-left: 8px;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);text-align: left;line-height: 1.75em;"><span style="outline: 0px;font-size: 16px;letter-spacing: 0.5px;">在 Kubernetes 上部署 PG 的方式，CloudNativePG 和 Helm 並駕齊驅。國內用前者的應該不多。</span></section><section style="margin-right: 8px;margin-left: 8px;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);text-align: left;line-height: 1.75em;"><img class="rich_pages wxw-img" data-height="784" data-imgfileid="100028248" data-ratio="1.0509383378016086" data-type="png" data-w="746" data-width="746" src="https://oscimg.oschina.net/oscnet/386daa0d-8dbe-4d35-9561-199894922ea3.png" style="outline: 0px;width: 677px !important;visibility: visible !important;" referrerpolicy="no-referrer"></section><section style="margin-right: 8px;margin-left: 8px;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);text-align: left;line-height: 1.75em;"><span style="outline: 0px;font-size: 16px;letter-spacing: 0.5px;">使用的功能點，這些都算是高級功能，也體現了 PostgreSQL 高級能力的實用性。</span></section><section style="margin-right: 8px;margin-left: 8px;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);text-align: left;line-height: 1.75em;"><img class="rich_pages wxw-img" data-height="862" data-imgfileid="100028247" data-ratio="1.0883838383838385" data-type="png" data-w="792" data-width="792" src="https://oscimg.oschina.net/oscnet/996c4cd7-8946-4f74-8385-d4cc9cef449c.png" style="outline: 0px;width: 677px !important;visibility: visible !important;" referrerpolicy="no-referrer"></section><section style="margin-right: 8px;margin-left: 8px;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);text-align: left;line-height: 1.75em;"><span style="outline: 0px;font-size: 16px;letter-spacing: 0.5px;">JSON 還是很香。</span></section><section style="margin-right: 8px;margin-left: 8px;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);text-align: left;line-height: 1.75em;"><img class="rich_pages wxw-img" data-height="865" data-imgfileid="100028252" data-ratio="1.1248374512353707" data-type="png" data-w="769" data-width="769" src="https://oscimg.oschina.net/oscnet/d1c9661b-ebb7-4cd3-8e88-2d2ff2f2e967.png" style="outline: 0px;width: 677px !important;visibility: visible !important;" referrerpolicy="no-referrer"></section><section style="margin-right: 8px;margin-left: 8px;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);text-align: left;line-height: 1.75em;"><span style="outline: 0px;font-size: 16px;letter-spacing: 0.5px;">阿里雲在全球市場份額和 GCP 比較接近。但這個報告主要面向海外，所以阿里雲就相對靠後了。也可以從側面看出光中國是一個多麼巨大的市場。</span></section><section style="margin-right: 8px;margin-left: 8px;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);text-align: left;line-height: 1.75em;"><img class="rich_pages wxw-img" data-height="616" data-imgfileid="100028256" data-ratio="0.7897435897435897" data-type="png" data-w="780" data-width="780" src="https://oscimg.oschina.net/oscnet/70a24bc6-76f4-45ab-b71c-b6b2184a64a8.png" style="outline: 0px;width: 677px !important;visibility: visible !important;" referrerpolicy="no-referrer"></section><section style="margin-right: 8px;margin-left: 8px;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);text-align: left;line-height: 1.75em;"><span style="outline: 0px;font-size: 16px;letter-spacing: 0.5px;">除了 PG 外使用的其它數據庫，也可以側面反映其他數據庫的流行度，和 DB-Engines 排名是有些區別的。</span></section><section style="margin-right: 8px;margin-left: 8px;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);text-align: left;line-height: 1.75em;"><img class="rich_pages wxw-img" data-height="542" data-imgfileid="100028254" data-ratio="0.5425425425425425" data-type="png" data-w="999" data-width="999" src="https://oscimg.oschina.net/oscnet/a8573963-5970-4b4a-93a9-2617f06a730d.png" style="outline: 0px;width: 677px !important;visibility: visible !important;" referrerpolicy="no-referrer"></section><section style="margin-right: 8px;margin-left: 8px;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);text-align: left;line-height: 1.75em;"><img class="rich_pages wxw-img" data-height="554" data-imgfileid="100028255" data-ratio="0.7194805194805195" data-type="png" data-w="770" data-width="770" src="https://oscimg.oschina.net/oscnet/03d8af15-c980-47fe-a5c8-a03f4fb0c3cd.png" style="outline: 0px;width: 677px !important;visibility: visible !important;" referrerpolicy="no-referrer"></section><section style="margin-right: 8px;margin-left: 8px;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);text-align: left;line-height: 1.75em;"><span style="outline: 0px;font-size: 16px;letter-spacing: 0.5px;">PG 實例數據量大小，相當符合正態分佈。</span></section><h1 style="margin-right: 8px;margin-bottom: 8px;margin-left: 8px;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);text-align: left;line-height: 1.75em;"><strong style="outline: 0px;"><span style="outline: 0px;letter-spacing: 0.5px;"><img class="rich_pages wxw-img" data-imgfileid="100028253" data-ratio="0.10947368421052632" data-s="300,640" data-type="png" data-w="950" src="https://oscimg.oschina.net/oscnet/8b2a9189-22b1-445a-b57b-d27970f040d3.png" style="outline: 0px;letter-spacing: 0.578px;width: 677px !important;visibility: visible !important;" referrerpolicy="no-referrer"></span></strong></h1><span id="OSC_h1_7"></span><h1 style="margin-right: 8px;margin-bottom: 16px;margin-left: 8px;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);text-align: left;line-height: 1.75em;"><span style="outline: 0px;font-size: 20px;"><strong style="outline: 0px;"><span style="outline: 0px;letter-spacing: 0.5px;">社區</span></strong></span></h1><section style="margin-right: 8px;margin-left: 8px;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);text-align: left;line-height: 1.75em;"><span style="outline: 0px;font-size: 16px;letter-spacing: 0.5px;">可以給做社區的同行一些參考。</span></section><section style="margin-right: 8px;margin-left: 8px;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);text-align: left;line-height: 1.75em;"><img class="rich_pages wxw-img" data-height="630" data-imgfileid="100028257" data-ratio="0.7134767836919592" data-type="png" data-w="883" data-width="883" src="https://oscimg.oschina.net/oscnet/60877cea-77d9-410f-8be6-c67dece7fe15.png" style="outline: 0px;width: 677px !important;visibility: visible !important;" referrerpolicy="no-referrer"></section><section style="margin-right: 8px;margin-left: 8px;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);text-align: left;"><img class="rich_pages wxw-img" data-galleryid="" data-imgfileid="100028260" data-ratio="0.45555555555555555" data-s="300,640" data-type="png" data-w="1080" src="https://oscimg.oschina.net/oscnet/034de392-ecd8-4ba0-98ae-a0810e7ffddc.png" style="outline: 0px;width: 677px !important;visibility: visible !important;" referrerpolicy="no-referrer"></section><section style="margin-right: 8px;margin-left: 8px;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);text-align: left;line-height: 1.75em;"><span style="outline: 0px;font-size: 16px;letter-spacing: 0.5px;">Postgres Weekly Newsletter 比較有影響力。不過它這次也給報告帶了貨，所以也會造成偏向性。</span></section><section style="margin-right: 8px;margin-left: 8px;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);text-align: left;line-height: 1.75em;"><img class="rich_pages wxw-img" data-height="1071" data-imgfileid="100028259" data-ratio="1.3205918618988903" data-type="png" data-w="811" data-width="811" src="https://oscimg.oschina.net/oscnet/1b0a0f17-913a-424f-96eb-77d1f3db4739.png" style="outline: 0px;width: 677px !important;visibility: visible !important;" referrerpolicy="no-referrer"></section><section style="margin-right: 8px;margin-bottom: 8px;margin-left: 8px;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);text-align: left;line-height: 1.75em;"><span style="outline: 0px;font-size: 16px;letter-spacing: 0.5px;">一些希望社區改進的地方。其中幾點筆者也有感觸：</span></section><ol start="1" class="list-paddingleft-1" style="margin-right: 8px;margin-left: 8px;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);"><li style="outline: 0px;font-size: 16px;letter-spacing: 0.5px;"><p style="margin-bottom: 8px;outline: 0px;text-align: left;line-height: 1.75em;"><span style="outline: 0px;">PG 的官方文檔已經很詳盡了，不過如果配些示例圖的話，會更容易吸收。</span></p></li><li style="outline: 0px;font-size: 16px;letter-spacing: 0.5px;"><p style="margin-bottom: 8px;outline: 0px;text-align: left;line-height: 1.75em;"><span style="outline: 0px;">郵件列表的問答形式比較過時，找帖子，翻帖子真的有點累。</span></p></li><li style="outline: 0px;font-size: 16px;letter-spacing: 0.5px;"><p style="margin-bottom: 24px;outline: 0px;text-align: left;line-height: 1.75em;"><span style="outline: 0px;">需要更多面嚮應用開發者以及研發流程 DevOps 的內容，而不是僅僅針對 DBA 和數據庫內核開發者的內容。</span></p></li></ol><h1 style="margin-right: 8px;margin-bottom: 8px;margin-left: 8px;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);text-align: left;line-height: 1.75em;"><span style="outline: 0px;letter-spacing: 0.5px;"><img class="rich_pages wxw-img" data-imgfileid="100028261" data-ratio="0.10947368421052632" data-s="300,640" data-type="png" data-w="950" src="https://oscimg.oschina.net/oscnet/6e944c0d-405f-487a-8843-286af419526b.png" style="outline: 0px;letter-spacing: 0.578px;width: 677px !important;visibility: visible !important;" referrerpolicy="no-referrer"></span></h1><span id="OSC_h1_8"></span><h1 style="margin-right: 8px;margin-bottom: 16px;margin-left: 8px;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);text-align: left;line-height: 1.75em;"><span style="outline: 0px;letter-spacing: 0.5px;font-size: 20px;"><strong style="outline: 0px;">AI</strong></span></h1><section style="margin-right: 8px;margin-left: 8px;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);text-align: left;line-height: 1.75em;"><span style="outline: 0px;font-size: 16px;letter-spacing: 0.5px;">今年報告裏自然不能免俗的會有 AI 問題。</span></section><section style="margin-right: 8px;margin-left: 8px;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);text-align: left;line-height: 1.75em;"><img class="rich_pages wxw-img" data-height="527" data-imgfileid="100028258" data-ratio="0.6185446009389671" data-type="png" data-w="852" data-width="852" src="https://oscimg.oschina.net/oscnet/18cd5bca-5ace-4986-9b8f-79a414cf4730.png" style="outline: 0px;width: 677px !important;visibility: visible !important;" referrerpolicy="no-referrer"></section><section style="margin-right: 8px;margin-left: 8px;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);text-align: left;line-height: 1.75em;"><span style="outline: 0px;font-size: 16px;letter-spacing: 0.5px;">大多數人還是持觀望態度。</span></section><section style="margin-right: 8px;margin-left: 8px;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);text-align: left;line-height: 1.75em;"><img class="rich_pages wxw-img" data-height="745" data-imgfileid="100028262" data-ratio="0.8602771362586605" src="https://oscimg.oschina.net/oscnet/564482fa-4e4d-4a60-a4d8-71e6b5f5996c.png" data-type="png" data-w="866" data-width="866" style="outline: 0px;width: 677px !important;visibility: visible !important;" referrerpolicy="no-referrer"></section><section style="margin-right: 8px;margin-left: 8px;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);text-align: left;line-height: 1.75em;"><span style="outline: 0px;font-size: 16px;letter-spacing: 0.5px;">讓向量處理和關係型數據處理在同一個數據庫是 PG 最大的優勢。一專多能，傳統藝能。</span></section><hr style="outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);border-style: solid;border-right-width: 0px;border-bottom-width: 0px;border-left-width: 0px;border-color: rgba(0, 0, 0, 0.1);transform-origin: 0px 0px;transform: scale(1, 0.5);"><p style="margin-top: 16px;margin-right: 8px;margin-left: 8px;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);text-align: left;line-height: 1.75em;"><span style="outline: 0px;font-size: 16px;letter-spacing: 0.5px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">就這些啦，這裏只選取了部分報告摘要，也建議去閲讀原文&nbsp;</span><span style="outline: 0px;font-size: 16px;letter-spacing: 0.5px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;color: rgb(79, 70, 229);">https://www.timescale.com/blog/announcing-the-new-timescale/</span><span style="outline: 0px;font-size: 16px;letter-spacing: 0.5px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">。</span></p><p style="margin-top: 16px;margin-right: 8px;margin-left: 8px;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);text-align: left;line-height: 1.75em;"><span style="outline: 0px;font-size: 16px;letter-spacing: 0.5px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;"><br></span></p><p style="margin-top: 16px;margin-right: 8px;margin-left: 8px;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);text-align: left;line-height: 1.75em;"><span style="outline: 0px;font-size: 16px;letter-spacing: 0.5px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;"><strong style="outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;font-size: 15px;color: rgb(34, 34, 34);text-align: start;text-indent: 36.8px;background-color: rgb(255, 255, 255);"><img class="rich_pages wxw-img" data-backh="331" data-backw="562" data-imgfileid="100028263" data-ratio="0.5881188118811881" data-s="300,640" src="https://oscimg.oschina.net/oscnet/472df27d-7aa5-4400-94e4-c618daac1eed.png" data-type="png" data-w="1010" style="outline: 0px;letter-spacing: 0.544px;color: rgb(51, 51, 51);width: 100%;visibility: visible !important;height: auto;" referrerpolicy="no-referrer"><img class="rich_pages wxw-img" data-backh="262" data-backw="562" data-cropselx1="0" data-cropselx2="578" data-cropsely1="0" data-cropsely2="269" data-imgfileid="100028264" data-ratio="0.46574074074074073" data-s="300,640" src="https://oscimg.oschina.net/oscnet/985ed68d-c3d1-4cef-8cd8-54e0c6bb2f8c.png" data-type="png" data-w="1080" style="outline: 0px;letter-spacing: 0.544px;color: rgb(51, 51, 51);border-radius: 8px;width: 100%;background-size: 16px !important;visibility: visible !important;height: auto;" referrerpolicy="no-referrer"></strong></span></p><p style="display: none;"><mp-style-type data-value="3"></mp-style-type></p></div><p style="color: #858585; font-size: 13px;">本文分享自微信公眾號 - 開源軟件聯盟 PostgreSQL 分會（kaiyuanlianmeng）。<br>如有侵權，請聯繫 support@oschina.cn 刪除。<br>本文參與「<a href="https://www.oschina.net/sharing-plan" target="_blank">OSC 源創計劃</a>」，歡迎正在閲讀的你也加入，一起分享。</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 18 Dec 2023 03:47:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/postgresqlchina/blog/10322198</guid>
            <link>https://my.oschina.net/postgresqlchina/blog/10322198</link>
            <author>
                <![CDATA[PostgreSQLChina]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[React Native 0.73 穩定版]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>React Native 最新穩定版 0.73<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ffacebook%2Freact-native%2Freleases%2Ftag%2Fv0.73.0" target="_blank"> 已發佈</a></u>。此版本主要變化包括增加了對使用 Hermes 進行調試的改進、符號鏈接支持 (symlink) 進入穩定階段、Android 14 支持以及新的實驗性功能。此外還棄用了舊版調試功能，併發布了新架構的下一個支柱：<strong>無橋接模式 (Bridgeless Mode)</strong>。</p><ul><li><strong>Hermes 支持查看控制枱歷史</strong></li></ul><p><code>console.log()</code>是開發者快速調試 JavaScript 代碼的主流方法。在以前的版本中，在連接調試器之前，不會記錄 React Native 應用程序中的控制枱日誌。這使得觀察應用程序加載早期發生的日誌變得困難。</p><p>React Native 0.73 解決了這個問題。 Hermes 現在會在後台捕獲所有&nbsp;<code>console.log()</code>&nbsp;調用，這些調用將在首次連接調試器時發送到控制枱選項卡 — 與 Web 瀏覽器中的調試體驗相匹配。新特性適用於 Flipper、連接到 Hermes 的 Chrome DevTools 以及實驗性的 New Debugger。</p><ul><li><strong>更新調試文檔</strong></li></ul><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-bd62abb0cb33479ed1b38184f22ce355f7c.png" referrerpolicy="no-referrer"></p><ul><li><strong>新的實驗性調試器</strong></li></ul><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-8a6d3d0d1a1e52514f576b21e6b81c25f09.png" referrerpolicy="no-referrer"></p><ul><li><strong>支持使用 Kotlin 編寫 Android 應用</strong></li></ul><p>從 0.73 開始，Kotlin 已成為使用 React Native 構建 Android 應用程序的推薦語言。這遵循了 Android 生態系統多年來的發展方向，並允許開發者使用現代編程語言編寫應用程序。</p><p>此版本更新了 Android 上的 React Native 模板，以使用 Kotlin 而不是 Java。新的<code>MainActivity.kt</code>和<code>MainApplication.kt</code>文件大小減小了 36%。</p><p>詳情：<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Freactnative.dev%2Fblog%2F2023%2F12%2F06%2F0.73-debugging-improvements-stable-symlinks" target="_blank">https://reactnative.dev/blog</a></u></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 18 Dec 2023 03:41:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271523/reactnative-0-73-stable</guid>
            <link>https://www.oschina.net/news/271523/reactnative-0-73-stable</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[.NET 8 AOT 與 LLVM 什麼關係？]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#4a4a4a; margin-left:0; margin-right:0; text-align:center"><span><strong><span style="color:#3c70c6">前言</span></strong></span></p><p style="color:#4a4a4a; margin-left:0; margin-right:0; text-align:left">.NET8 的 AOT 為了支持各個平台，比如 MacOS,Linux 等平台，ILC(AOT Compiler) 的目標文件用的是 LLVM 生成的。本篇看下。</p><p style="color:#4a4a4a; margin-left:0; margin-right:0; text-align:left">原文:<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg5NDYwNjU4MA%3D%3D%26mid%3D2247485778%26idx%3D1%26sn%3Dc7fce583f2eadab39b626aaf6ca7c6c6%26chksm%3Dc01c44c9f76bcddf7fae3828297699e1252e7b97c1e84b5d2b09502732e9ccb6fd5fa1d69335%26token%3D2009208964%26lang%3Dzh_CN%23rd" rel="nofollow" target="_blank"><u><strong>.NET8 AOT 與 LLVM 什麼關係?</strong></u></a></p><p style="color:#4a4a4a; margin-left:0px; margin-right:0px; text-align:center">公眾號:jianghuht，歡迎關注</p><p style="color:#4a4a4a; margin-left:0px; margin-right:0px; text-align:center"><u><strong><img alt="" height="430" src="https://oscimg.oschina.net/oscnet/up-736ea9cda29ab0849e37b740d5b255ea7bc.png" width="430" referrerpolicy="no-referrer"></strong></u></p><p style="color:#4a4a4a; margin-left:0; margin-right:0; text-align:center"><span><strong><span style="color:#3c70c6">詳述</span></strong></span></p><p style="color:#4a4a4a; margin-left:0; margin-right:0; text-align:left"><span>為了更為細緻的讓大家瞭解 LLVM 在 AOT 裏面的作用，這裏用一個例子演示下。以下以最新版的.NET8.0/windows11 為藍本演示。</span></p><p style="color:#4a4a4a; margin-left:0; margin-right:0; text-align:left"><strong><span>第一步:</span></strong><span>在 nuget 上面下載一個 ILC 組件,名稱:runtime.win-x64.Microsoft.DotNet.ILCompiler</span></p><p style="color:#4a4a4a; margin-left:0; margin-right:0; text-align:left"><strong>第二步:</strong>找到這個包在你當前電腦的路徑，一般為如下，這個路徑有個 objwriter.dll:</p><pre><code><span><span style="color:#ca7d37">C</span>:\<span style="color:#ca7d37">Users</span>\<span style="color:#ca7d37">Administrator</span>\<span>.nuget</span>\<span style="color:#ca7d37">packages</span>\<span style="color:#ca7d37">runtime</span><span>.win-x64</span><span>.microsoft</span><span>.dotnet</span><span>.ilcompiler</span>\8<span>.0</span><span>.0</span>\<span style="color:#ca7d37">tools</span></span></code></pre><p style="color:#4a4a4a; margin-left:0; margin-right:0; text-align:left"><strong><span>第三步:</span></strong>操作 objwriter.dll</p><p style="color:#4a4a4a; margin-left:0; margin-right:0; text-align:left"><span style="background-color:#ffffff">新建一個.NET8 控制枱應用程序，把這個 objwriter.dll 放入到控制枱</span><span style="background-color:#ffffff">bin/x64/debug/net8.0 目錄下。</span><span style="background-color:#ffffff">Main 寫入如下代碼：</span></p><pre><code><span>  [<span style="color:#afafaf">DllImport(<span>"objwriter.dll"</span>)</span>]</span></code><code><span><span><span style="color:#ca7d37">private</span><span style="color:#ca7d37">static</span><span style="color:#ca7d37">extern</span> IntPtr <span style="color:#dd1144">InitObjWriter</span>(<span>[MarshalAs(UnmanagedType.LPUTF8Str</span>)] <span style="color:#ca7d37">string</span> objectFilePath, <span style="color:#ca7d37">string</span> triple</span> = <span style="color:#0e9ce5">null</span>);</span></code><code><span>  [<span style="color:#afafaf">DllImport(<span>"objwriter.dll"</span>)</span>]</span></code><code><span><span><span style="color:#ca7d37">private</span><span style="color:#ca7d37">static</span><span style="color:#ca7d37">extern</span><span style="color:#ca7d37">void</span><span style="color:#dd1144">FinishObjWriter</span>(<span>IntPtr objWriter</span>)</span>;</span></code><code><span>  [<span style="color:#afafaf">DllImport(<span>"objwriter.dll"</span>)</span>]</span></code><code><span><span><span style="color:#ca7d37">private</span><span style="color:#ca7d37">static</span><span style="color:#ca7d37">extern</span><span style="color:#ca7d37">void</span><span style="color:#dd1144">EmitIntValue</span>(<span>IntPtr objWriter, <span style="color:#ca7d37">ulong</span><span style="color:#ca7d37">value</span>, <span style="color:#ca7d37">int</span> size</span>)</span>;</span></code><code><span><span style="color:#ca7d37">private</span> IntPtr _nativeObjectWriter = IntPtr.Zero;</span></code><code><span><span><span style="color:#ca7d37">static</span><span style="color:#ca7d37">void</span><span style="color:#dd1144">Main</span>(<span><span style="color:#ca7d37">string</span>[] args</span>)</span></span></code><code><span>  {</span></code><code><span>      IntPtr objectWriter = InitObjWriter(<span style="color:#dd1144">"Demo.obj"</span>, <span style="color:#dd1144">"x86_64-pc-win32-windows"</span>);</span></code><code><span>      EmitIntValue(objectWriter, <span style="color:#0e9ce5">0x10</span>, <span style="color:#0e9ce5">4</span>);</span></code><code><span>      FinishObjWriter(objectWriter);</span></code><code><span>  }</span></code></pre><p style="color:#4a4a4a; margin-left:0; margin-right:0; text-align:left"><span style="background-color:#ffffff; color:#4a4a4a">objwriter.dll 通過 LLVM_Project 項目構建，應用於.NET8 ILC AOT 裏面。</span></p><p style="color:#4a4a4a; margin-left:0; margin-right:0; text-align:left">以上代碼運行之後，就會在控制枱的 bin/x64/debug/net8.0 目錄下面看到生成的目標文件 Demo.obj。這個就是 ILC 調用 LLVM 生成的當前 Windows 平台 (InitObjWriter 的參數:x86_64-pc-win32-windows 表示的是 Windows 目標文件) 上面的目標文件，此後通過引導程序 BootStrap(關於.NET8 AOT 引導程序參考:<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg5NDYwNjU4MA%3D%3D%26mid%3D2247484953%26idx%3D1%26sn%3D3d9e15f17fe5ccbfd3f36ff64a0e25c4%26chksm%3Dc01c4b82f76bc294ed18a3db625c379281f61da3e35e84ed68072aed51e92125f416468d3efb%26scene%3D21%23wechat_redirect" target="_blank" rel="nofollow"><u><strong>.Net8 的 AOT 引導程序 BootStrap</strong></u></a><span>) 鏈接下，即可生成獨立的可執行文件。</span></p><p style="color:#4a4a4a; margin-left:0; margin-right:0; text-align:left">以上就是 LLVM 在.NET8 AOT 裏面的簡單應用。</p><p style="color:#4a4a4a; margin-left:0; margin-right:0; text-align:center"><span><strong><span style="color:#3c70c6">題外話</span></strong></span></p><p style="color:#4a4a4a; margin-left:0; margin-right:0; text-align:left">微軟從.NET7.0 開始，就有意識的分離.NET 裏面的各個耦合度極高的組件。舉個例子，比如説在.NET Framework 裏面 GC 和 CLR 分離是不可想象的，但是在.NET8.0 裏面，GC 不僅和 CLR 分離，JIT 也可以和 CLR 分離。進行獨自定製。這些.NET 核心組件通過動態鏈接庫，也即是 DLL 的形式分發出來，可以讓開發人員進行自由定製。</p><p style="color:#4a4a4a; margin-left:0; margin-right:0; text-align:left">這裏稍微列舉下:</p><p style="color:#4a4a4a; margin-left:0; margin-right:0; text-align:left"><strong>1.</strong>ILC 的可移植性目標文件組件:objwriter.dll(本文所述)</p><p style="color:#4a4a4a; margin-left:0; margin-right:0; text-align:left"><strong>2.</strong>分離的可定製 GC 組件:clrgc.dll(參考:<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg5NDYwNjU4MA%3D%3D%26mid%3D2247485315%26idx%3D1%26sn%3Db964e0860d799e3b01cc99e258f10ef6%26chksm%3Dc01c4a18f76bc30e6cb78c731df1c2389e9ced771f710c455bfe9fe45e131a89f0d18ad49e4a%26scene%3D21%23wechat_redirect" target="_blank" rel="nofollow"><u><strong>自定義 GC 垃圾回收</strong></u></a>)</p><p style="color:#4a4a4a; margin-left:0; margin-right:0; text-align:left"><strong>3.</strong><span>分離的可定製 JIT 組件:</span>c<span>lrjit.dll（參考:</span><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg5NDYwNjU4MA%3D%3D%26mid%3D2247485395%26idx%3D1%26sn%3Db640a5e447083dc7312effe3dc28dfe9%26chksm%3Dc01c4a48f76bc35ecec1f6aa4559d8fcf8686cec2e4d489afe35f1f021cd9a8c8e436fcd5afa%26scene%3D21%23wechat_redirect" target="_blank" rel="nofollow"><u><strong>自定義 JIT 即時編譯</strong></u></a><span>）</span></p><p style="color:#4a4a4a; margin-left:0; margin-right:0; text-align:left"><strong>4.</strong>分離的可定製 CLR 組件:coreclr.dll（參考:目前空白）</p><p style="color:#4a4a4a; margin-left:0; margin-right:0; text-align:left"><strong>5.</strong>可自定義的運行時宿主組件<span>:hostfxr.dll(參考:</span><u><strong>自定義</strong></u><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg5NDYwNjU4MA%3D%3D%26mid%3D2247484930%26idx%3D1%26sn%3D3c9e3dc9f97fff2339db202122993991%26chksm%3Dc01c4b99f76bc28fa9cc60ff3e2ee6f32b28e76ba3e9a188bdec8160eba5c3b92a4a198ef6e5%26scene%3D21%23wechat_redirect" target="_blank" rel="nofollow"><strong><span>宿主組件</span></strong></a><span>)</span></p><p style="color:#4a4a4a; margin-left:0; margin-right:0; text-align:left">以上都可以進行自由定製，你在各個平台上 (MacOS/Linux) 看到的動態鏈接庫 DLL，都是有自定製進行各種平台的自由分發，比如國內外大熱的 Risc-V 支持的新平台，比如國內的 Arm64 指令集平台等。</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 18 Dec 2023 03:21:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/5407571/blog/10322112</guid>
            <link>https://my.oschina.net/u/5407571/blog/10322112</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[一個 38 歲程序員，在技術圈自由遊曳]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>程超，一個 38 歲的程序員，面對互聯網世界的暗流湧動，顯得遊刃有餘。</p><p>最近，他正在忙着研究生畢業答辯，不過其生活節奏仍然非常規律：每天早上六點起牀，跑步五到十公里；然後學英語背單詞，已經堅持了七百六十多天；接着送孩子上學，再去上班，上班路上看技術文檔或是練聽力；晚上回去看看書，直到零點。</p><p>從事互聯網行業 16 年，程超深耕支付、交易、訂單等業務，頗擅長 DevOps、AIOps、基礎架構、穩定性建設、高併發等技術。因此，熱衷於分享知識的他，在技術圈留下了不少足跡，除了用「小程故事多」的網名發佈了諸多的技術博文之外，還主導了《高可用可伸縮微服務架構》一書，併合著有《深入分佈式緩存——從原理到實踐》，此外還翻譯了《Spring5 設計模式》。</p><p>此外程超還被多個技術社區所認可，獲得過「騰訊雲 TVP」「阿里雲 MVP 成員」「雲智慧最有價值專家」等稱號。</p><p>我們很想知道：在忙碌的工作之外，程超是如何達成這許多成就的；在職業生涯轉折點，他的選擇是什麼；關於寫作、出書、翻譯，他有哪些心得可以分享；面對 AI 等新技術的到來，他又做了什麼。為此，我們採訪了程超，看看他如何在技術圈自由遊曳。</p><p style="text-align:center"><img height="624" src="https://oscimg.oschina.net/oscnet/up-0d2b69c27c7ab1e6eedcc1ae4168e55b94e.png" width="500" referrerpolicy="no-referrer"></p><p style="text-align:center"><strong>程超，高級</strong><strong>研發管理</strong><strong>專家</strong></p><span id="OSC_h4_1"></span><h4>一、能否介紹一下您當前的工作方向？</h4><p>主要有兩個：一是 DevOps 平台建設，二是 AI 工程建設。之前我一直負責公司的穩定性建設，以及 DevOps、AIOps 的體系建設，今年年初開始研究 AI 相關，建設公司的 AI 工程，目前已經上線一個平台支持公司的智能客服業務。</p><span id="OSC_h4_2"></span><h4>二、從事互聯網行業 16 年，最引以為傲的成就是什麼？</h4><p>職業生涯挺長，有很多收穫與感悟，總結下來：</p><p>在公司層面：</p><ul><li><p>在目前公司主導了 DevOps 和 AiOps 相關的工作，推動了多雲架構的設計與研發，同時也負責團隊管理。你的工作在公司內部得到了認可，獲得了 2022 年度最佳領導獎和最佳技術團隊獎。</p></li><li><p>松果出行階段，負責了多個業務線的核心工作，尤其是訂單中台和用户中心的設計和架構工作。通過性能優化和微服務體系建設，你成功將服務性能從 500qps 提升到 3000qps。此外我設計和開發了多個關鍵系統，如訂單重試中心、超時控制中心等。</p></li><li><p>在易寶支付，我主要聚焦在支付平台和實時統計方面。在優化和重構支付平台的過程中，你將性能從 50TPS 提升到 200TPS，並且實現了可擴展性，這為公司帶來了巨大的收益。同時獲得了公司的年度"工匠提名獎"和"開放分享獎"。</p></li></ul><p>在個人層面：</p><p>負責書籍的撰寫和翻譯工作，包括《高可用可伸縮微服務架構》的主導、合著書籍《深入分佈式緩存——從原理到實踐》以及翻譯《Spring5 設計模式》。此外我還擔任過極客時間的講師，貢獻過每日一課等視頻課程。</p><span id="OSC_h4_3"></span><h4>三、您在過去的工作中，遇到最具挑戰性的項目是什麼？ 對您而言，在該項目中的最大收穫是什麼？</h4><p>最具挑戰的項目是支付交易平台，不僅需要平台提供高併發能力，同時也要保障系統的資金安全，與錢有關的項目往往都需要特別謹慎。</p><p>最大的收穫是對自己的技術體系做了重新梳理，做項目要三思而後行，穩定性保障的多種技術方案和手段。</p><span id="OSC_h4_4"></span><h4>四、能否跟我們聊一下一路以來您的職業發展路徑？在技術方向這塊經歷了什麼樣的變化？</h4><p>個人堅持的理念是一專多能。首先是要專，從畢業到現在，我一直堅持 Java 技術方向，然而 Java 發展很快，從我剛接觸的 Jdk1.5 一直髮展到今天的 Java21，已經經歷了非常多的版本，而我一直在堅持學習，雖然到目前還談不上極為精通，但至少已經積累了大量工作經驗。</p><p>其次是多能， 目前在市面上除了 Java 這個老牌開發語言，還有非常多其他類語言，比如 Go、Python、Rust 等等，每種語言的出現一定有它的優勢和使用場景，因此需要根據項目情況、使用場景，適當選擇最合適的語言來對項目進行整體提高。</p><span id="OSC_h4_5"></span><h4>五、在技術方向抉擇的過程中，您是主動選擇還是被動接受的？</h4><p>從心理學的角度來講，技術方向的主動選擇會給人帶來更多的自主感覺，主動選擇自己熟悉的技術方向，更容易產生成就感，而成就感會帶給人以責任感，也將伴隨的是積極的態度與行動。</p><p>當然這個世界本來就是多樣性，有主動的技術選擇，就一定會存在被動的情況，當在某一場景下，自己無法把握技術方向，而只能變為被動選擇的時候，應該選擇接受，從整體上分析現狀，改變自己的格局和視野，變化角度來看問題，積極調整心態，化被動為主動。</p><span id="OSC_h4_6"></span><h4>六、您是什麼時候開始有自己明確的職業規劃的？當工作方向跟職業規劃發生衝突時，您是如何選擇的？</h4><p>我是工作到第五年的時候，開始認真思考自己的職業規則。</p><p>有一個網上看到的冷笑話。很多程序員每天都在寫代碼，每天都很忙，當面試官問他，你的職業規劃是什麼？程序員回答説：「沒有「。那麼，如果你必須選擇一個角色，你會選擇什麼？例如，技術總監。程序員回答説：「CEO」......</p><p>很多程序員在剛畢業工作的時候，往往前幾年都是想多學習技術，多積累經驗，當工作到一定時間，就會遇到職業瓶頸，這就需要認真思考自己未來應該如何規劃，這往往也是程序員未來選擇的分水嶺。是一直做技術，做架構師、高級架構師、首席架構師，還是從事技術管理，做經理、總監、CTO ？還是有可能會轉型，做產品、銷前，或是創業？是要一直在一個領域深耕，還是會變換方向和領域，做個多面手？這裏面應該如何選擇呢？我們瞭解自己嗎？自己是內向，還是外向，喜歡溝通，還是喜歡安靜，這都是決定未來方向的衡量指標。</p><p>當工作方向與職業規劃衝突的時候，不要輕易立刻下決定，要先思考：</p><ul><li><p>方向</p></li></ul><p>假如你自己的職業規劃目標是做架構師，那麼現在公司決定讓人做經理，那麼管理性質的崗位就與架構師的目標不匹配，按常理來説應該止損，重新選擇架構師的技術方向。但是重新選擇的前提是，你之前制定的規劃是合理的。為什麼這樣説的呢？我遇到一些朋友，他們也有自己的職業規劃，結果深入溝通後才現，他們的職業規劃並不十分合理，既不符合自身的優勢或性格，也不符合現實情況。</p><ul><li><p>平台</p></li></ul><p>其實方向不能拋開平台而存在，我們要考慮目前所處的平台如何。這裏會涉及到公司與部門，假如公司走下坡路了，公司也沒有明確的發展方向，無法讓你在新的工作方向上提升自己的競爭力，那麼當工作方向與規劃衝突的時候，那這樣的平台有可能會消耗自己的時間。</p><span id="OSC_h4_7"></span><h4>七、您先後在京東、360 和易寶支付等公司工作過。想知道在不同公司，您的工作方式和風格有何不同？</h4><p>其實每家公司都有自己的特點與優點，但可以根據所處的行業，來匹配不同的工作方式。</p><p><strong>京東：</strong> 因為公司規模非常大和人員非常多，所以溝通和協作可能需要更多的層級，並需要更多的協調工作來確保項目順利推進。另外作為一個大型電商平台，京東可能更注重創新和用户體驗，可能更傾向於嘗試新技術和創新解決方案。</p><p><strong>360：</strong> 安全領域可能更注重團隊間的嚴格合規和保密性，可能有更多的審查和驗證程序，以確保代碼的安全性和質量，注重穩定性和已有的可靠技術。</p><p><strong>易寶支付：</strong> 在金融領域，可能更加註重細節和合規性，以及資金安全性。可能有更嚴格的流程和規範，以確保系統的穩定性和安全性，做事風格是三思而後行，要充分考慮，認真考慮各種可能存在的情況，要能給客户帶來穩定性和可靠性的體驗。</p><span id="OSC_h4_8"></span><h4>八、不同公司對您的職業發展有何影響？在不同公司，您學到的最寶貴的經驗是什麼？</h4><ul><li><p>在京東更多的是學習到了電商與互聯網經驗，學到了高併發場景的應用，收穫了很多技術的最佳實踐，以及在大公司與不同部門如何高效協作。</p></li><li><p>在易寶支付我收穫瞭如何建設穩定性的平台，如何站在用户角度去思考，如何帶領一支大團隊來高效協同，共同完成目標。此外公司還為我培訓了大量管理方面的課程，讓我的管理經驗從野路子變成具有方法論的系統性實踐。</p></li><li><p>在現在公司，收穫的更多是建立產品化思維，讓我的想法不再僅是基於技術思維，要以產品角度來思考，讓自己做的產品如何得到更好的用户體驗，如何更快更高效地響應用户的需求與問題。</p></li></ul><p>可以看到我的職業發展是一條從底層逐步向上層的過程，從底層技術思維到管理思維，再到產品思維。</p><span id="OSC_h4_9"></span><h4>九、互聯網技術變化相當之快，您是如何應對挑戰和變化的？</h4><ul><li><p>需要持續學習，積極參加各種培訓、講座、研討會等活動，學習最新的科技發展動態和應用技巧。</p></li><li><p>培養團隊協作能力，團隊合作可以集思廣益，共同面對挑戰，解決難題。</p></li><li><p>多關注信息來源，不斷湧現的新技術和信息意味着需要更多的時間和精力去跟上這些變化。</p></li><li><p>接受改變，應該以積極的心態去擁抱和適應，不能去抵制他們。</p></li></ul><span id="OSC_h4_10"></span><h4>十、面對技術的快速變化，跟十年前的自己相比，心態有什麼不一樣嗎？</h4><p>十年前，自己更願意在熟悉的領域深耕，如今自己心態更開放，更願意接觸不同的技術和方向，這中間有職位的變化導致，也有經過十年的技術沉澱後，技術視野需要變得寬廣，不管是哪個方式，我始終持續學習。</p><span id="OSC_h4_11"></span><h4>十一、您當前關注互聯網行業的哪些熱點領域？將如何平衡個人發展和行業發展的關係？</h4><p>當前最熱的領域無非就是 AIGC 了，我一直在持續關注，不過幸運的是，我目前正在做這一相關的工作。</p><p>對於許多人來説，個人發展和職業發展是兩個重要的方面，但卻經常會出現平衡問題。有時候，我們會專注於一方面而忽視另一方面。如果我們只關注行業發展而不注重個人發展，我們可能會陷入職業倦怠。反之，如果我們僅關注個人發展而不注重行業發展，我們可能會錯過許多職業機會。</p><p>其實我認為這兩者完全可以做到相輔相成，行業發展代表的是趨勢，個人發展只能代表自己某一場景下制定的目標。個人發展只是能過去發展的梳理，然後對未來的展望，當新的行業發展到來時，這將會對個人發展帶來衝擊和變動，我們將接受這一切，如果認為新的行業發展帶來的是機遇和機會，那麼可以適當調整個人的發展，將新行業發展與個人發展進行適當結合與融入，讓個人發展變得與時俱進，始終保持競爭力才是根本。</p><span id="OSC_h4_12"></span><h4>十二、DevOps、AIOps 的概念近幾年在國內頗為盛行，您是什麼時候開始接觸這方面的？有什麼機緣巧合嗎？</h4><p>我是在 2014 開始正式接觸併產生濃厚興趣的，但當時我在負責業務線的部門，發現業務團隊與運維團隊協作並不是非常順暢，存在着業務開發端，測試端和運維端的信息鴻溝，所以我想推動解決這個事，發現 DevOps 的核心更是解決這三者的關係的，打通軟件交付過程中的 IT 工具鏈，使各個團隊減少時間損耗，更高效地協作。於是我從國內外網站上看了幾百篇相關文章，在社區裏與相關朋友討論 DevOps 的推動與發展，與公司高層溝通我的想法，與運維團隊緊密溝通配合，開始推動 DevOps 在公司的落地。</p><span id="OSC_h4_13"></span><h4>十三、從瞭解 DevOps、AIOps 等概念到實際落地，您經歷了怎樣的一個過程，能夠否結合案例聊一聊？實踐 DevOps、AIOps 其中的難點是什麼？</h4><p>先談談其中的難點。</p><p><strong>DevOps：</strong></p><p>文化變革： DevOps 不僅僅是工具和流程，更是一種文化變革。最大的挑戰之一是將團隊從傳統的瀑布式開發模式轉變為迭代、自動化和協作的方式。這需要時間和領導層的支持。</p><p>自動化： 自動化是 DevOps 的核心，但建立自動化流程需要投入大量時間和資源。自動化測試、部署和監控等方面的工具選擇和集成是挑戰之一。</p><p>工具鏈整合： 在 DevOps 中，使用多種工具來實現自動化流程，但這些工具的整合和互操作性可能會帶來複雜性和困難。</p><p>團隊溝通與協作： 從傳統的團隊結構轉變為跨職能團隊需要更多的溝通和協作。團隊成員可能需要適應新的工作方式和角色。</p><p>文化變革和接受度： 引入 DevOps 文化可能會遇到團隊成員的抵制或不適應。確保他們理解變革的重要性並逐步接受需要耐心和教育。</p><p>持續學習與改進： DevOps 是一個持續改進的過程。持續學習新技術和最佳實踐，以及不斷改進工作流程是非常重要的。</p><p><strong>AIOps</strong><strong>：</strong></p><p>數據質量和整合： AIOps 依賴於大量數據來進行分析和預測。確保數據的質量、完整性以及不同數據源的整合是挑戰之一。</p><p>算法和模型選擇： 選擇合適的機器學習算法和模型來應對特定的運維挑戰需要一定的專業知識。在實踐中，不同情況可能需要不同的算法，因此選擇和調整模型是一個挑戰。</p><p>解釋性和透明性： 對於許多業務場景來説，AI 模型的決策必須可解釋和透明。這意味着需要找到平衡，確保模型的預測不僅僅是準確的，而且還能解釋其背後的原因。</p><p>逐步採用： 對於一些組織來説，接受和信任 AI 在運維中的作用可能需要時間。逐步展示 AI 在提高效率和準確性方面的成果是至關重要的。</p><p>團隊技能提升： 引入 AIOps 可能需要團隊成員具備一定的機器學習和數據分析知識。這可能需要培訓和技能提升計劃。</p><p>監管和合規性考慮： 在某些行業，AI 的使用可能受到監管和合規性要求的限制。確保 AI 系統符合相關法規是挑戰之一。</p><p>我目前公司正是經歷了這一陣痛，在前期依然是依靠傳統運維的方式，導致生產和上線效率極低，因為變更導致的故障頻出。而 DevOps 平台推出後，從研發生產域（需求管理、迭代管理、開發和測試），持續交付與佈署（研發資源、發佈管理、運行時管理、分析大盤、系統管理等），到產線運行域（aPaaS、bPaaS、tPaaS、dPaaS 以及多雲管理平台、CMDB)， SRE 域（智能分析與告警平台、排班中心、統一數據採集平台、技術中間件統一管理平台）等多領域進行統一自助管理，實現一站式全生命週期管理。</p><span id="OSC_h4_14"></span><h4>十四、大模型技術的發展，給 AIOps 帶來了什麼樣的影響？ 面對大模型對 AIOps 技術帶來的巨大影響，身處其中，您的感受是什麼？</h4><p>主要有四個方面的影響：</p><ul><li><p>智能決策支持： 大模型技術能夠處理更多更復雜的數據，使 AIOps 系統能夠提供更智能的決策支持。</p></li><li><p>異常檢測和預測能力： 大模型能夠提供更準確和高效的異常檢測和預測。通過分析歷史數據和實時流數據，AIOps 系統可以更好地識別潛在的故障和異常模式，甚至在問題發生之前預測到可能出現的問題。</p></li><li><p>自動化運維： 藉助大模型技術，AIOps 系統可以更好地實現自動化運維。這意味着系統能夠自主識別問題並嘗試自動修復，減少對人工幹預的需求，提高運維效率。</p></li><li><p>精細化的問題定位： 有助於提供更精準的問題定位。通過對複雜數據的分析，AIOps 系統可以更準確地定位問題所在，提供更具針對性的解決方案。</p></li></ul><p>大模型技術對 AIOps 的影響是革命性的。對我而言，身處這個變革中讓我感到興奮和充滿挑戰。這種變革為 AIOps 注入了更多可能性，讓我們能夠更全面、更智能地處理運維問題。這種感受就像站在技術的前沿，目睹着未來的可能性一樣。同時，也帶來了新的學習和適應等方面的挑戰，但這也是促使自己不斷進步和學習的機會。</p><span id="OSC_h4_15"></span><h4>十五、您先後參寫了兩本《高可用可伸縮微服務架構》、《深入分佈式緩存》著作，又翻譯《Spring5 設計模式》一書，想問您寫作/翻譯的初衷和動機是什麼？</h4><p>我之前在 CSDN 上寫了二百多篇技術博客，其中包括微服務相關的，也包括緩存相關的，當時寫作的初衷就是想把自己積累下來的博客文章能夠以書籍的方式做個系統性梳理，這樣不僅便於知識的系統化，同時也能更好地和讀者進行交流。</p><p>而翻譯的想法來源於我持續的英語學習，在翻譯《Spring5 設計模式》書之前，我已經持續學習英語五年，深知學習英語的重要性，這是打開與世界交流的窗口，所以正好有朋友約我翻譯這本書，所以我想做嘗試，也是對自己多年英語學習的一個檢驗。</p><span id="OSC_h4_16"></span><h4>十六、這些創作給您的工作和生活有帶來了什麼變化？</h4><p>首先這些創作本質上是會給自己帶來技術影響力的提升，增加更多與同行交流的的機會，其次這也是一種深度學習和整理知識的過程，需要將複雜的技術概念轉化為易於理解的內容，這種能力可以讓我更好地將技術知識分享給其他人，同時也加深了自己對技術領域的理解。</p><span id="OSC_h4_17"></span><h4>十七、您在寫作過程中的創作經驗和心得可以分享嗎？</h4><p>寫書本身是一件持續性的體力與腦力勞動，需要對自己的主題做出針對性的內容建設，同時也會佔用大量的業餘時間來寫，我記得當時我每天早上六點起牀開始寫，寫到八點然後趕快去上班，晚上下班回來經常寫到零點左右，而且週末也會減少陪伴家人的時間。當然家人在這個過程中也給與我很大的支持和鼓勵。</p><p>寫作的過程往往是漫長的，很多時候遇到一些寫作瓶頸後容易產生放棄的情緒，遇到這種情況，首先想到的一定是正向能量的輸入，就是堅持，還有與出版社編輯或是朋友進行相關溝通，找到解決問題的辦法，不能輕言放棄。</p><p><strong>下面聊一下寫書的過程：</strong></p><ul><li><p>首先要考慮書籍的選題，如何確定選題，是選一個稀缺的書籍題目，還是在眾多重複的主題之間想一個標新立異的。</p></li><li><p>第二要考慮受眾羣體，其實越偏入門的書，越容易產生銷售，越有深度的書，受眾羣體的層級就越高，寫作難度也就越大。</p></li><li><p>第三就是寫作資料的收集，我們是否之前已經積累了大量與主題相關的材料，這點挺重要的。這決定你的寫作速度，如果之前從來沒有收集和創作過與主題相關的材料，那寫作過程將是漫長的。</p></li><li><p>第四就是要充分考慮寫作大綱，大綱是書籍的靈魂，大綱的成功與否，將在一定程度上決定書籍的銷量是否成功。</p></li><li><p>第五是寫作計劃，什麼時候開始寫？什麼時候寫完？每個月的進度是多少？每個星期的進度要多少？每天都寫多少？要做好統籌規劃。</p></li><li><p>第六就是真正寫作了，在寫作的過程中，你的自律能力會不斷地提高，讓你感覺到了一種機械的狀態，而這種狀態，會讓你忘記掉時間，這就是心流。而自律依賴於目標，依賴於你的慾望。自律剛開始會打破你原有的習慣，會讓你感覺是一件痛苦的事，但堅持一段時間後，就覺得，這其實沒什麼。</p></li><li><p>第七是寫作的時候，要考慮藉助哪些工具。有些出版社採用的是在線 markdown，有一些出版社則接收的是 Word。所以，在你採用工具之前，先了解一下最後的格式。而我建議使用可以分佈式協作的版本管理平台，諸如於 GitHub 或者雲共享平台等。這樣可以高效地進行協同。</p></li><li><p>第八是要考慮，這本書是一個人寫，還是多個人寫，一個人寫就是進度會慢，但更加聚焦，進度自己能把控。多人寫作的話就需要團隊管理能力，每個人的情況不一樣，對於知識的掌握情況也不一樣，他們目前的忙閒程度也不一樣，如何更好地管控每個人的進度，就需要與大家一起討論，制定每週例會溝通進度與遇到的問題，大家一起想辦法解決，而不至於讓其個作者太過落後，影響整體書籍進度的編寫。</p></li></ul><span id="OSC_h4_18"></span><h4>十八、聽説您目前正在寫一本穩定性建設相關的書，能否跟我們聊一聊這本書？為什麼會選擇這一方向？當前進展如何？</h4><p>目前確實是在寫一本關於穩定性建設的書，原因就是想把多年積累下來的經驗做個總結分享給大家，這本書的構想囊括了從穩定性建設的總論到技術組件的建設，每個章節都涵蓋了不同方面的主題，例如微服務帶來的挑戰、故障發現與定位、故障的快速解決，分佈式事務、服務限流和熔斷等等。為讀者提供了系統穩定性建設的全面視角，從概念到實踐都有所涉及。每章都有明確的目標，介紹了相關技術領域的知識點，並提供了實際場景下的解決方案。</p><p>當前這本書已經完成三分之一，相信明年上半年會寫完出版。</p><span id="OSC_h4_19"></span><h4>十九、您獲得過「騰訊雲 TVP」「阿里雲 MVP」「雲智慧最有價值專家」等稱號，能否結合自身案例談一下，社區對個人成長和行業發展的重要性？</h4><p>以我參與的，騰訊雲 TVP 團隊傾力打造的 TVP 第六期吐槽大會為例，由 6 位，騰訊雲 TVP 專家與 Cloud Studio 產品及技術掌舵人強強碰撞，直面產品問題，共同為 Cloud Studio 產品指明提升方向，為 AI 時代雲端 IDE 的未來發展探索更多可能。</p><p>技術的發展少不了 issue 區的反饋，產品的進步免不了用户的吐槽。騰訊雲將產品使用開放出來，傾聽業界專家與用户心聲，持續打磨升級技術和產品能力，為用户提供更極致的產品體驗。個人的成長也能夠通過與社區專家的多次碰撞得到極大的提高與視野的開闊。</p><span id="OSC_h4_20"></span><h4>二十、您對個人未來發展有何期待？</h4><p>目前正在從事 AIGC 相關的研究和研發，是我的興趣點，也希望未來能夠在這方面不斷深耕與發展。</p><div>
  &nbsp; 
</div></div>
                                    ]]>
            </description>
            <pubDate>Mon, 18 Dec 2023 03:02:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/3859945/blog/10322167</guid>
            <link>https://my.oschina.net/u/3859945/blog/10322167</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Debian 將停止支持 i386 架構]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Debian GNU/Linux 團隊在最近的 DebConf 會議上<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flists.debian.org%2Fdebian-devel-announce%2F1997%2F12%2Fthreads.html" target="_blank">決定</a></u>，<strong>其 Linux 內核、Debian 安裝器和 Debian 鏡像團隊未來將不再支持 i386 架構</strong>。這意味着用户需要考慮將系統遷移到更現代的架構，以確保系統的長期支持和兼容性。</p><blockquote><p>i386 架構是英特爾的 32 位微處理器，最初被稱為 80386，後來更名為 i386。它是 x86 架構的一部分，是早期個人電腦和工作站的中央處理單元（CPU）。i386 架構具有 32 位數據寬度和 32 位地址寬度，支持實模式、保護模式和虛擬模式。</p><p>雖然 i386 架構已經過時，但它對後來的 x86 處理器設計產生了深遠影響。i386 的後繼產品包括 i486 和 P5 Pentium 系列處理器，這些處理器都是基於 i386 設計的後代產品。</p></blockquote><p>此後用户可以<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.phoronix.com%2Fnews%2FDebian-Plans-Cease-i386" target="_blank">通過兩種方式</a></u>來運行 i386：</p><ul><li>作為 amd64 系統上的多架構選項</li><li>作為其他架構系統上的 i386 chroot</li></ul><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-1aa45d2c70d5a540253652db272c69ff530.png" referrerpolicy="no-referrer"></p><p>Debian 並不打算像 Ubuntu 那樣將 i386 作為部分架構，arch:any 仍將包含 i386，因此一切都將默認構建。希望放棄 i386 支持的維護者可以在與軟件包的反向（構建）依賴關係協調後放棄 i386 支持，就像放棄對其他架構的支持一樣。Debian 方面指出，並不反對在出現這些變更時對基線進行修改。</p><p>考慮到其他 Linux 發行版多年來一直在放棄 i386，一些 Linux 發行版甚至提高了它們的 x86-64 微架構基線，看到 Debian 也最終也決定停止支持 i386，尤其是在 Debian 13 大約兩年後發佈之前，這並不太令人驚訝。</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 18 Dec 2023 02:50:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271507/debian-plans-cease-i386</guid>
            <link>https://www.oschina.net/news/271507/debian-plans-cease-i386</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[字節跳動被 OpenAI 「封號」事件始末]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>12 月 16 日，The Verge 根據獲得的內部文件<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.theverge.com%2F2023%2F12%2F15%2F24003151%2Fbytedance-china-openai-microsoft-competitor-llm" target="_blank">報道稱</a></u>，字節跳動曾秘密使用 OpenAI 的技術來開發自己的大語言模型，在代號為 Project Seed 的項目各階段，都使用了 Azure 上的 OpenAI API 進行模型的訓練和評估，<strong>並且頻繁觸及 API 的最大限額</strong>。</p><blockquote><p><img src="https://oscimg.oschina.net/oscnet/up-cfbc41a7285880aacc51983647d94705836.png" referrerpolicy="no-referrer"></p><p>來源：<em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.theverge.com%2F2023%2F12%2F15%2F24003151%2Fbytedance-china-openai-microsoft-competitor-llm" target="_blank">https://www.theverge.com/2023/12/15/24003151/bytedance-china-openai-microsoft-competitor-llm</a></u></em></p></blockquote><p>報道還稱，相關員工知悉這種做法違反 OpenAI 使用政策，並在內部 Lark 上的對話中提及了「數據脱敏」等説法。但幾個月前，字節命令團隊在「模型開發的任何階段」停止使用 GPT 生成的文本。同期，字節的「豆包」服務在國內獲批並上線。據稱，字節的內部目標是年底達到 GPT-3.5 的水平，明年中達到 GPT-4 的水平。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-2998d77fbdf3ed444a1ad273512c149fd5d.png" referrerpolicy="no-referrer"></p><p>該報道發出後，<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.theverge.com%2F2023%2F12%2F15%2F24003542%2Fopenai-suspends-bytedances-account-after-it-used-gpt-to-train-its-own-ai-model" target="_blank">OpenAI 聲明稱</a></u>，字節的 API 用量很少，但已將其賬户暫停使用並做進一步調查。如發現違反使用政策，將要求糾正或關停賬户。微軟在聲明中重述了 Azure OpenAI 服務的政策，但未對報道事實或後續措施置評。</p><p><img src="https://oscimg.oschina.net/oscnet/up-e9398156152491a1ed3203047b0cf781449.png" referrerpolicy="no-referrer"></p><blockquote><p>OpenAI 發言人 Niko Felix 確認字節跳動的賬户已被暫停，並説道：「所有 API 客户都必須遵守我們的使用政策，以確保我們的技術得到良好利用。雖然字節跳動對我們 API 的使用很少，但我們在進一步調查期間已暫停了他們的帳户。如果我們發現他們的使用不遵守這些政策，我們將要求他們進行必要的更改或終止其帳户。」</p></blockquote><p>就此，字節國外發言人於 16 日對 The Verge 表示，GPT 生成的數據在 Project Seed 項目開發的早期就被用於註釋模型，並在今年年中左右從字節跳動的訓練數據中刪除。GPT 僅在中國以外市場的產品和功能中使用，豆包則是基於自行開發的模型，且僅在中國可用。</p><p>字節相關負責人則於 17 日迴應媒體稱，<strong>僅在年初有部分工程師將 OpenAI 服務用於較小模型的實驗性項目研究</strong>；隨着公司在 4 月引入 GPT API 調用規範檢查，這種做法已經停止；9 月，內部又進行了一輪檢查並採取進一步規範措施；在未來幾天裏會再次全面檢查，以確保嚴格遵守相關服務的使用條款。</p><p>對於 OpenAI 禁止用其服務訓練競爭模型的政策，歷來存在不同看法。支持的觀點認為，OpenAI 為訓練模型做了大量前期投入，藉助其服務「抄近道」是不正當的。反對的觀點則認為，OpenAI 的訓練過程得益於當時對 AI 訓練無戒備的外部環境，在其之後的模型已不再能輕易獲得到同樣規模的訓練數據，阻止其他公司調用其模型相當於建立事實上的壟斷。</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 18 Dec 2023 02:28:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271501/bytedance-china-openai-microsoft-competitor-llm</guid>
            <link>https://www.oschina.net/news/271501/bytedance-china-openai-microsoft-competitor-llm</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[12.23 源創會·上海站，聊聊 LLM 基礎設施]]>
            </title>
            <description>
                <![CDATA[12.23 源創會·上海站，聊聊 LLM 基礎設施]]>
            </description>
            <pubDate>Sun, 17 Dec 2023 16:57:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/event/2331502</guid>
            <link>https://www.oschina.net/event/2331502</link>
        </item>
        <item>
            <title>
                <![CDATA[Chrome 測試限制跨站點跟蹤功能，以逐步淘汰第三方 Cookie]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">谷歌 Chrome 瀏覽器正在測試 Tracking Protection，一項可限制<span style="background-color:#ffffff">跨站點跟蹤的新功能</span>。</span></p><p><span style="color:#000000">這項新功能是谷歌"</span><span style="background-color:#ffffff; color:#202124">Privacy Sandbox</span><span style="color:#000000">"計劃的一部分，該計劃旨在以負責任的方式在 2024 年下半年逐步淘汰第三方 cookie，其中包括為網站創建新的工具來實現基本功能，並給予開發人員適應的時間。</span></p><p><span style="color:#000000">Tracking Protection&nbsp;<span style="background-color:#ffffff">的引入將首先從一小部分 Chrome 用户開始，公告透露，</span>他們將於 2024 年 1 月 4 日開始測試 Tracking Protection 功能，面向全球 1% 的 Chrome 瀏覽器用户推出。</span></p><p><span style="color:#000000">近三十年來，第三方 cookie 一直是網絡的基本組成部分。它們可用於跟蹤網站活動，但網站同時也在使用它們來支持一系列在線體驗，例如幫助用户登錄或展示相關廣告。</span></p><blockquote><p><span style="color:#000000">「通過 Privacy Sandbox，我們正在採取負責任的方式逐步淘汰 Chrome 中的第三方 Cookie。我們為網站構建了新工具，支持關鍵用例，併為開發人員提供了過渡時間。我們將從一小部分 Chrome 用户開始引入 Tracking Protection，以便開發者可以測試他們對沒有第三方 Cookie 的網絡的準備情況。」</span></p></blockquote><p>參與&nbsp;<span style="color:#000000">Tracking Protection 功能試用的用户將隨機抽取。被選中的用户在</span><span style="background-color:#ffffff; color:#202124">打開 Chrome 瀏覽器時，會收到相關通知。啓用該功能後，用户在瀏覽網頁時，默認情況下第三方 cookie 將受到限制，從而限制在不同網站上跟蹤的能力。</span></p><p><span style="background-color:#ffffff; color:#202124"><img alt="" height="344" src="https://oscimg.oschina.net/oscnet/up-57f1c84f1b3c261331013a59a537fd1aae8.webp" width="500" referrerpolicy="no-referrer"></span></p><p><span style="background-color:#ffffff; color:#202124">如果某個網站在沒有第三方 cookie 的情況下無法運行，而 Chrome 瀏覽器又發現用户遇到了該問題（比如進行了多次頁面刷新），就會在地址欄右側的眼睛圖標上提示用户暫時重新啓用該網站的第三方 cookie。</span></p><p><span style="background-color:#ffffff; color:#202124"><img alt="" height="300" src="https://oscimg.oschina.net/oscnet/up-7dfa96f75c4d4ba43aa7ade9fd6ab653d77.gif" width="300" referrerpolicy="no-referrer"></span></p><p><span style="color:#000000">此前，谷歌方面已經發布一系列 Privacy Sandbox 更新。 譬如 8 月推出了 Project Flight，該項目包含一系列示例應用程序，共同展示了 Privacy Sandbox API 在真實用户體驗中的實際應用。</span></p><p><span style="color:#000000">更多詳情可<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.google%2Fproducts%2Fchrome%2Fprivacy-sandbox-tracking-protection%2F" target="_blank">查看官方博客</a>。</span></p><p><strong><span style="color:#000000">相關閲讀：</span></strong></p><ul><li><a href="https://www.oschina.net/news/204434/google-delays-third-party-cookies" target="_blank">2022、2023 再到 2024，谷歌再次推遲 Cookies 淘汰時間</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Sun, 17 Dec 2023 04:18:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271417/google-chrome-tracking-protection</guid>
            <link>https://www.oschina.net/news/271417/google-chrome-tracking-protection</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[ONF 解散，將所有業務轉移到 Linux 基金會]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Open Networking Foundation (ONF) <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.linuxfoundation.org%2Fpress%2Fonf-merges-market-leading-portfolio-of-networking-projects-into-linux-foundation" target="_blank">宣佈</a>，其涵蓋接入、邊緣和雲解決方案的領先開源網絡項目組合將畢業成為 Linux 基金會下的獨立項目。「此舉為三個主要項目領域（Broadband，Aether 和 P4）創造了獨立的、由社區領導的治理，併為項目的廣泛協作和採用奠定了基礎。」</p><p><img alt="" height="281" src="https://oscimg.oschina.net/oscnet/up-7377a8aba31c8b7c4d29de527f9310b8382.webp" width="500" referrerpolicy="no-referrer"></p><p>由於此次合併，ONF 將解散，將所有業務轉移到 Linux 基金會。Linux 基金會將創建三個新的項目指導基金，以支持技術項目的工作，包括：</p><ul><li>LF Broadband Directed Fund - 支持一系列改變寬帶網絡和被動光纖網絡（Passive Optical Network，PON）行業的項目。該組合包括用於構建開放寬帶網絡的 SEBA 參考設計和用於虛擬化多廠商 PON 系統的 VOLTHA 開源項目。這些項目已在德國電信、Jio、Türk Telekom 等世界各地部署。</li><li>Aether Directed Fund - 支持一系列 5G 移動網絡項目，包括 Aether（私有 5G 和邊緣計算）、SD-Core（開放 5G 移動核心）和 SD-RAN（開放 RAN）。電信、商業和研究部署依賴於這些項目，並且剛剛獲得了 200 萬美元的美國政府研究撥款，以推動 5G 網絡的節能和可持續性。</li><li>P4 Directed Fund - 支持一系列工作，實現網絡數據平面的可編程性，包括 P4 體系結構、語言、API、應用和平台。其中包括可編程網絡 Fabric 的開源編譯器和堆棧實現（SD-Fabric、Stratum），在從雲到數據中心和運營商邊緣網絡（如 Comcast、Google、SKT、騰訊和巴西的空中交通管制系統）的各種部署中。</li></ul><p>公告稱，ONF 與 LF 的合併反映了項目治理的變化，但保留了基於社區合作的技術項目的演進過程，以適應市場需求的變化。</p><p>ONF 現有的技術指導團隊<span style="color:#000000">將繼續指導技術工作</span>。但成立了新的管理委員會，以領導每個新指導基金，使社區完全擁有項目的方向和 ONF 為指導基金提供的約 500 萬美元資金的應用權。這些資金將用於有選擇地為項目提供工程人員的支持。</p><p>&nbsp;詳情可<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.linuxfoundation.org%2Fpress%2Fonf-merges-market-leading-portfolio-of-networking-projects-into-linux-foundation" target="_blank">查看官方公告</a>。</p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 17 Dec 2023 03:31:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271412/onf-linux-foundation</guid>
            <link>https://www.oschina.net/news/271412/onf-linux-foundation</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[HTTPie Desktop —— 跨平台 API 測試客户端]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>HTTPie for Web &amp; Desktop，跨平台 API 測試客户端，輕鬆測試 REST、GraphQL 和 HTTP API。目前已發佈了適用於 Mac、Windows 和 Linux 的 HTTPie for Desktop 版本。初次安裝後，應用程序會持續自動更新。</p><p><strong>特點：</strong></p><ul style="margin-left:0; margin-right:0"><li><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span style="color:rgb(209 209 207/var(--tw-text-opacity))"><span><span><span><span>與 API 輕鬆交互</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></li><li><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span style="color:rgb(209 209 207/var(--tw-text-opacity))"><span><span><span><span>利用人工智能輔助工作的力量</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></li><li><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span style="color:rgb(209 209 207/var(--tw-text-opacity))"><span><span><span><span>在空間、集合和選項卡中組織您的工作</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></li><li><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span style="color:rgb(209 209 207/var(--tw-text-opacity))"><span><span><span><span>使用變量和環境參數化請求</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></li><li><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span style="color:rgb(209 209 207/var(--tw-text-opacity))"><span><span><span><span>通過自動保存和實時同步跨設備工作</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></li><li><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span style="color:rgb(209 209 207/var(--tw-text-opacity))"><span><span><span><span>構建並預覽請求而不發送請求</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></li><li><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span style="color:rgb(209 209 207/var(--tw-text-opacity))"><span><span><span><span>無需帳户即可離線使用該應用程序</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></li></ul><p><img alt="" height="307" src="https://static.oschina.net/uploads/space/2023/1009/155957_SR87_4252687.png" width="500" referrerpolicy="no-referrer"></p></div>
                                                                ]]>
            </description>
            <pubDate>Sun, 17 Dec 2023 03:20:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/p/httpie-desktop</guid>
            <link>https://www.oschina.net/p/httpie-desktop</link>
        </item>
        <item>
            <title>
                <![CDATA[Gitee 推薦 | 基於 eBPF 的 Linux 審計觀測工具 safeguard]]>
            </title>
            <description>
                <![CDATA[<h1><a id="user-content-safeguard-linux-security-audit-control-and-behavior-analysis-tools-based-on-krsiebpflsm" class="anchor" href="https://gitee.com/openeuler/safeguard#safeguard-linux-security-audit-control-and-behavior-analysis-tools-based-on-krsiebpflsm"></a>safeguard: Linux security audit, control, and behavior analysis tools based on KRSI(eBPF+LSM)</h1><p>針對操作系統、內核安全，safeguard 是一個基於 eBPF 的 Linux 審計觀測工具，可以實現安全操作的攔截及審計記錄。項目採用 libbpfgo 庫，使用 go 語言實現頂層控制</p><h1><a id="user-content-特性" class="anchor" href="https://gitee.com/openeuler/safeguard#%E7%89%B9%E6%80%A7"></a>特性</h1><ul><li>審計：日誌記錄配置範圍內的行為</li><li>控制：針對文件，進程，網絡的安全訪問控制</li><li>行為分析：收集信息，進行資源，熱點，異常等分析</li><li>主機管理：從安全角度自動化構建細粒度資產信息</li><li>風險管理：精準發現內部風險，快速定位問題並有效解決安全風險</li><li>入侵檢測：提供多錨點的檢測能力，能夠實時、準確的感知入侵事件，發現失陷主機，並提供對入侵事件的響應手段。</li></ul><p><img src="https://gitee.com/openeuler/safeguard/raw/master/docs/architecture.png" alt="architecture" referrerpolicy="no-referrer"></p><h1><a id="user-content-編譯" class="anchor" href="https://gitee.com/openeuler/safeguard#%E7%BC%96%E8%AF%91"></a>編譯</h1><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="nv">$ </span>git clone <span class="nt">--recursive</span> https://gitee.com/openeuler/safeguard.git <span class="o">&amp;&amp;</span><span class="nb">cd </span>safeguard</span><span id="LC2" class="line"><span class="c"># $ vagrant up &amp;&amp; vagrant reload</span></span><span id="LC3" class="line"><span class="c"># $ vagrant ssh</span></span><span id="LC4" class="line"></span><span id="LC5" class="line"><span class="nv">$ </span>make libbpf-static</span><span id="LC6" class="line"><span class="nv">$ </span>make build</span><span id="LC7" class="line"></span><span id="LC8" class="line"><span class="nv">$ </span><span class="nb">sudo</span> ./build/safeguard <span class="nt">--config</span> config/safeguard.yml <span class="c">#|grep BLOCK</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><h1><a id="user-content-項目功能部分位於開發階段" class="anchor" href="https://gitee.com/openeuler/safeguard#%E9%A1%B9%E7%9B%AE%E5%8A%9F%E8%83%BD%E9%83%A8%E5%88%86%E4%BD%8D%E4%BA%8E%E5%BC%80%E5%8F%91%E9%98%B6%E6%AE%B5"></a>項目功能 (部分位於開發階段)</h1><h3><a id="user-content-審計控制" class="anchor" href="https://gitee.com/openeuler/safeguard#%E5%AE%A1%E8%AE%A1%E6%8E%A7%E5%88%B6"></a>審計控制</h3><p>文件：</p><ul><li>追蹤文件系統的活動，包括文件的打開、關閉、讀寫、刪除等。</li><li>修改文件系統的行為，例如攔截某些文件操作，或者實現自定義的<strong>安全策略</strong>。
安全策略：
<ol><li>攔截或重定向某些文件操作，使用 eBPF 來攔截對敏感文件的讀寫操作，或者重定向對某些文件的訪問到其他位置。</li><li>實現自定義的訪問控制，使用 eBPF 來檢查對文件的訪問者的身份、權限、環境等信息，然後根據一些規則來允許或拒絕訪問。</li><li>實現自定義的審計和監控，使用 eBPF 來記錄對某些文件的操作的詳細信息，如操作者、時間、內容等，並將這些信息輸出到日誌。</li></ol></li></ul><p>進程：</p><ul><li>追蹤進程的生命週期，例如進程的創建、終止、調度、上下文切換等。</li><li>修改進程的行為，例如注入或修改某些系統調用，或者實現自定義的調度策略。</li></ul><p>網絡：</p><ul><li>追蹤網絡的活動，例如網絡包的發送、接收、轉發、丟棄等。</li><li>修改網絡的行為，例如過濾或重寫某些網絡包，或者實現自定義的路由策略。</li></ul><h3><a id="user-content-行為分析" class="anchor" href="https://gitee.com/openeuler/safeguard#%E8%A1%8C%E4%B8%BA%E5%88%86%E6%9E%90"></a>行為分析</h3><ul><li><p>收集並分析文件系統的性能、熱點、異常等。（選擇合適的 eBPF 程序類型和掛載點，例如，使用 kprobes 或 tracepoints 來追蹤文件系統相關的內核函數或事件，如 vfs_read, vfs_write, ext4_sync_file 等。）</p></li><li><p>收集信息來分析進程的資源消耗、狀態變化、依賴關係等（do_fork, do_exit, schedule 等）。</p></li><li><p>收集信息，分析網絡的流量、延遲、丟包率、擁塞等（使用 tc 或 xdp 來追蹤網絡包的發送、接收、轉發、丟棄等事件）。</p></li></ul><h3><a id="user-content-主機管理" class="anchor" href="https://gitee.com/openeuler/safeguard#%E4%B8%BB%E6%9C%BA%E7%AE%A1%E7%90%86"></a>主機管理</h3><p>從安全角度自動化構建細粒度資產信息，支持對業務層資產精準識別和動態感知，讓保護對象清晰可見。</p><ul><li>賬號展示</li><li>端口列表</li><li>進程列表</li></ul><h3><a id="user-content-風險管理" class="anchor" href="https://gitee.com/openeuler/safeguard#%E9%A3%8E%E9%99%A9%E7%AE%A1%E7%90%86"></a>風險管理</h3><p>精準發現內部風險，快速定位問題並有效解決安全風險，提供詳細的資產信息、風險信息以供分析和響應。</p><ul><li>漏洞檢測</li><li>安全補丁</li><li>弱密碼</li><li>系統風險</li><li>賬號風險</li></ul><h3><a id="user-content-入侵檢測" class="anchor" href="https://gitee.com/openeuler/safeguard#%E5%85%A5%E4%BE%B5%E6%A3%80%E6%B5%8B"></a>入侵檢測</h3><p>提供多錨點的檢測能力，能夠實時、準確的感知入侵事件，發現失陷主機，並提供對入侵事件的響應手段。</p><ul><li>暴力破解</li><li>異常登錄</li><li>反彈 shell</li><li>本地提權</li><li>後門檢測，Web 後門</li></ul><h1><a id="user-content-開發路線" class="anchor" href="https://gitee.com/openeuler/safeguard#%E5%BC%80%E5%8F%91%E8%B7%AF%E7%BA%BF"></a>開發路線</h1><table><thead><tr><th></th><th></th><th align="center">23.12（22.03 LTS SP3）</th><th align="center">24.03 LTS</th><th align="center">24.09 創新版本</th><th align="center">24.09（24.03 LTS SP1）</th><th align="center">已實現</th></tr></thead><tbody><tr><td>控制-主機規則設置</td><td>文件操作攔截</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center">✓</td></tr><tr><td></td><td>進程攔截（採用 path hook）</td><td align="center">✓</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td></td><td>網絡攔截</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center">✓</td></tr><tr><td>主機管理</td><td>賬號</td><td align="center">✓</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td></td><td>端口</td><td align="center">✓</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td></td><td>進程</td><td align="center">✓</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td>風險管理</td><td>漏洞檢測</td><td align="center"></td><td align="center"></td><td align="center">✓</td><td align="center"></td><td align="center"></td></tr><tr><td></td><td>安全補丁</td><td align="center"></td><td align="center"></td><td align="center">✓</td><td align="center"></td><td align="center"></td></tr><tr><td></td><td>弱密碼</td><td align="center"></td><td align="center"></td><td align="center">✓</td><td align="center"></td><td align="center"></td></tr><tr><td></td><td>系統風險</td><td align="center"></td><td align="center"></td><td align="center">✓</td><td align="center"></td><td align="center"></td></tr><tr><td></td><td>賬號風險</td><td align="center"></td><td align="center"></td><td align="center">✓</td><td align="center"></td><td align="center"></td></tr><tr><td>入侵檢測</td><td>暴力破解</td><td align="center"></td><td align="center">✓</td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td></td><td>異常登錄</td><td align="center"></td><td align="center">✓</td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td></td><td>反彈 shell</td><td align="center"></td><td align="center"></td><td align="center">✓</td><td align="center"></td><td align="center"></td></tr><tr><td></td><td>本地提權</td><td align="center"></td><td align="center">✓</td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td></td><td>後門檢測，Web 後門</td><td align="center"></td><td align="center"></td><td align="center">✓</td><td align="center"></td><td align="center"></td></tr><tr><td>安全日誌</td><td>審計日誌：文件 hook 攔截方式由路徑更改為 inode</td><td align="center">✓</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center">✓</td></tr><tr><td></td><td>登錄日誌</td><td align="center">✓</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td></td><td>賬户變更日誌</td><td align="center"></td><td align="center">✓</td><td align="center"></td><td align="center"></td><td align="center"></td></tr></tbody></table><h1><a id="user-content-license" class="anchor" href="https://gitee.com/openeuler/safeguard#license"></a>LICENSE</h1><p>safeguard's userspace program is licensed under Apache License 2.0 License.<br>
eBPF programs inside <a href="https://gitee.com/openeuler/safeguard/blob/master/pkg/bpf">pkg/bpf directory</a> are licensed under <a href="https://gitee.com/openeuler/safeguard/blob/master/pkg/bpf/LICENSE.md">GNU General Public License version 2</a>.</p>]]>
            </description>
            <pubDate>Sun, 17 Dec 2023 03:14:00 GMT</pubDate>
            <guid isPermaLink="false">https://gitee.com/openeuler/safeguard</guid>
            <link>https://gitee.com/openeuler/safeguard</link>
        </item>
        <item>
            <title>
                <![CDATA[每日一博 | PWA 離線方案研究報告]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>本文並不是介紹如何將一個網頁配置成離線應用並支持安裝下載的。研究 PWA 的目的僅僅是為了保證用户的資源可以直接從本地加載，來忽略全國或者全球網絡質量對頁面加載速度造成影響。當然，如果頁面上所需的資源，除了資源文件外並不需要任何的網絡請求，那它除了不支持</span></span></span><span><span><strong><span>安裝到桌面</span></strong></span></span><span><span><span>，已經算是一個離線應用了。</span></span></span></p><span id="OSC_h1_1"></span><h1><span><span><span>什麼是 PWA</span></span></span></h1><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>PWA（Progressive Web App）是一種結合了網頁和原生應用程序功能的新型應用程序開發方法。PWA 通過使用現代 Web 技術，例如 Service Worker 和 Web App Manifest，為用户提供了類似原生應用的體驗。</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><strong><span><span><span>從用户角度來看，PWA 具有以下特點：</span></span></span></strong></p><div><span>1.</span><span><span><span><span>可離線訪問：PWA 可以在離線狀態下加載和使用，使用户能夠在沒有網絡連接的情況下繼續瀏覽應用；</span></span></span></span></div><div><span>2.</span><span><span><span><span>可安裝：用户可以將 PWA 添加到主屏幕，就像安裝原生應用一樣，方便快捷地訪問；</span></span></span></span></div><div><span>3.</span><span><span><span><span>推送通知：PWA 支持推送通知功能，可以向用户發送實時更新和提醒；</span></span></span></span></div><div><span>4.</span><span><span><span><span>響應式佈局：PWA 可以適應不同設備和屏幕大小，提供一致的用户體驗。</span></span></span></span></div><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><strong><span><span><span>從開發者角度來看，PWA 具有以下優勢：</span></span></span></strong></p><div><span>1.</span><span><span><span><span>跨平台開發：PWA 可以在多個平台上運行，無需單獨開發不同的應用程序；</span></span></span></span></div><div><span>2.</span><span><span><span><span>更新便捷：PWA 的更新可以通過服務器端更新 Service Worker 來實現，用户無需手動更新應用；</span></span></span></span></div><div><span>3.</span><span><span><span><span>可發現性：PWA 可以通過搜索引擎進行索引，增加應用的可發現性；</span></span></span></span></div><div><span>4.</span><span><span><span><span>安全性：PWA 使用 HTTPS 協議傳輸數據，提供更高的安全性。</span></span></span></span></div><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>總之，PWA 是一種具有離線訪問、可安裝、推送通知和響應式佈局等特點的新型應用開發方法，為用户提供更好的體驗，為開發者帶來更高的效率。</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>我們從 PWA 的各種能力中，聚焦下其</span></span></span><span><span><strong><span>可離線訪問</span></strong></span></span><span><span><span>的能力。</span></span></span></p><span id="OSC_h1_2"></span><h1><span><span><span>Service Worker</span></span></span></h1><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>離線加載本質上是頁面所需的各種</span></span></span><span><span><code><span>js</span></code></span></span><span><span><span>、</span></span></span><span><span><code><span>css</span></code></span></span><span><span><span>以及頁面本身的</span></span></span><span><span><code><span>html</span></code></span></span><span><span><span>，都可以緩存到本地，不再從網絡上請求。這個能力是通過</span></span></span><span><span><code><span>Service Worker</span></code></span></span><span><span><span>來實現的。</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>Service Worker 是一種在瀏覽器背後運行的腳本，用於處理網絡請求和緩存數據。它可以攔截和處理網頁請求，使得網頁能夠在離線狀態下加載和運行。Service Worker 可以緩存資源，包括 HTML、CSS、JavaScript 和圖像等，從而提供更快的加載速度和離線訪問能力。它還可以實現推送通知和後台同步等功能，為 Web 應用帶來更強大的功能和用户體驗。</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>某些情況下，Service Worker 和瀏覽器插件的 background 很相似，但在功能和使用方式上有一些區別：</span></span></span></p><ul><li><span><span><span><strong><span>功能差異：</span></strong></span></span><span><span><span> Service Worker 主要用於處理網絡請求和緩存數據，可以攔截和處理網頁請求，實現離線訪問和資源緩存等功能。而瀏覽器插件的 background 主要用於擴展瀏覽器功能，例如修改頁面、攔截請求、操作 DOM 等。</span></span></span></span></li><li><span><span><span><strong><span>運行環境：</span></strong></span></span><span><span><span> Service Worker 運行在瀏覽器的後台，獨立於網頁運行。它可以在網頁關閉後繼續運行，並且可以在多個頁面之間共享狀態。而瀏覽器插件的 background 也在後台運行，但是它的生命週期與瀏覽器窗口相關，關閉瀏覽器窗口後插件也會被終止。</span></span></span></span></li><li><span><span><span><strong><span>權限限制：</span></strong></span></span><span><span><span> 由於安全考慮，Service Worker 受到一定的限制，無法直接訪問 DOM，只能通過 postMessage() 方法與網頁進行通信。而瀏覽器插件的 background 可以直接操作 DOM，對頁面有更高的控制權。</span></span></span></span></li></ul><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>總的來説，Service Worker 更適合用於處理網絡請求和緩存數據，提供離線訪問和推送通知等功能；而瀏覽器插件的 background 則更適合用於擴展瀏覽器功能，操作頁面 DOM，攔截請求等。</span></span></span></p><span id="OSC_h1_3"></span><h1><span><span><span>註冊</span></span></span></h1><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>註冊一個 Service Worker 其實是非常簡單的，下面舉個簡單的例子</span></span></span></p><pre><code><span><span><span style="color:#708090">&lt;!-- index.html --&gt;</span></span><span><span></span></span><span><span style="color:#708090">&lt;!DOCTYPE html&gt;</span></span><span><span></span></span><span><span style="color:#990055">&lt;html&gt;</span></span><span><span></span></span><span><span style="color:#990055">&lt;head&gt;</span></span><span><span></span></span><span><span style="color:#990055">&lt;title&gt;</span></span><span><span>Service Worker 示例</span></span><span><span style="color:#990055">&lt;/title&gt;</span></span><span><span></span></span><span><span style="color:#990055">&lt;/head&gt;</span></span><span><span></span></span><span><span style="color:#990055">&lt;body&gt;</span></span><span><span></span></span><span><span style="color:#990055">&lt;script&gt;</span></span><span><span>
    if ('serviceWorker' in navigator) {
      window.addEventListener('load', function() {
        navigator.serviceWorker.register('/service-worker.js')
          .then(function(registration) {
            console.log('Service Worker 註冊成功:', registration.scope);
          })
          .catch(function(error) {
            console.log('Service Worker 註冊失敗:', error);
          });
      });
    }
  </span></span><span><span style="color:#990055">&lt;/script&gt;</span></span><span><span></span></span><span><span style="color:#990055">&lt;/body&gt;</span></span><span><span></span></span><span><span style="color:#990055">&lt;/html&gt;</span></span><span><span></span></span></span></code></pre><pre><code><span><span><span style="color:#708090">// service-worker.js</span></span><span><span></span></span><span><span style="color:#708090">// 定義需要預緩存的文件列表</span></span><span><span></span></span><span><span style="color:#0077aa">const</span></span><span><span> filesToCache </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span></span></span><span><span style="color:#999999">[</span></span><span><span></span></span><span><span style="color:#669900">'/'</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#669900">'/index.html'</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#669900">'/styles.css'</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#669900">'/script.js'</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#669900">'/image.jpg'</span></span><span><span></span></span><span><span style="color:#999999">]</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#708090">// 安裝 Service Worker 時進行預緩存</span></span><span><span>
self</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">addEventListener</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#669900">'install'</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#0077aa">function</span></span><span><span style="color:#999999">(</span></span><span><span>event</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span>
  event</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">waitUntil</span></span><span><span style="color:#999999">(</span></span><span><span>
    caches</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">open</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#669900">'my-cache'</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">then</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#0077aa">function</span></span><span><span style="color:#999999">(</span></span><span><span>cache</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span> cache</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">addAll</span></span><span><span style="color:#999999">(</span></span><span><span>filesToCache</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#708090">// 激活 Service Worker</span></span><span><span>
self</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">addEventListener</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#669900">'activate'</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#0077aa">function</span></span><span><span style="color:#999999">(</span></span><span><span>event</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span>
  event</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">waitUntil</span></span><span><span style="color:#999999">(</span></span><span><span>
    caches</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">keys</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">then</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#0077aa">function</span></span><span><span style="color:#999999">(</span></span><span><span>cacheNames</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span> Promise</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">all</span></span><span><span style="color:#999999">(</span></span><span><span>
        cacheNames</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">filter</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#0077aa">function</span></span><span><span style="color:#999999">(</span></span><span><span>cacheName</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span> cacheName </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">!==</span></span><span><span></span></span><span><span style="color:#669900">'my-cache'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">map</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#0077aa">function</span></span><span><span style="color:#999999">(</span></span><span><span>cacheName</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span> caches</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">delete</span></span><span><span style="color:#999999">(</span></span><span><span>cacheName</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#708090">// 攔截 fetch 事件並從緩存中返回響應</span></span><span><span>
self</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">addEventListener</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#669900">'fetch'</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#0077aa">function</span></span><span><span style="color:#999999">(</span></span><span><span>event</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span>
  event</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">respondWith</span></span><span><span style="color:#999999">(</span></span><span><span>
    caches</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">match</span></span><span><span style="color:#999999">(</span></span><span><span>event</span></span><span><span style="color:#999999">.</span></span><span><span>request</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">then</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#0077aa">function</span></span><span><span style="color:#999999">(</span></span><span><span>response</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span> response </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">||</span></span><span><span></span></span><span><span style="color:#dd4a68">fetch</span></span><span><span style="color:#999999">(</span></span><span><span>event</span></span><span><span style="color:#999999">.</span></span><span><span>request</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span></span></code></pre><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>上述示例中，註冊 Service Worker 的邏輯包含在 HTML 文件的</span></span></span><span><span><code><span>&lt;script&gt;</span></code></span></span><span><span><span>標籤中。當瀏覽器加載頁面時，會檢查是否支持 Service Worker，如果支持，則註冊 Service Worker 文件</span></span></span><span><span><code><span>/service-worker.js</span></code></span></span><span><span><span>。</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>Service Worker 文件中，首先定義了需要預緩存的文件列表</span></span></span><span><span><code><span>filesToCache</span></code></span></span><span><span><span>。在</span></span></span><span><span><code><span>install</span></code></span></span><span><span><span>事件中，將這些文件添加到緩存中。在</span></span></span><span><span><code><span>activate</span></code></span></span><span><span><span>事件中，刪除舊緩存。在</span></span></span><span><span><code><span>fetch</span></code></span></span><span><span><span>事件中，攔截請求並從緩存中返回響應。</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>Service Worker 文件</span></span></span><span><span><code><span>service-worker.js</span></code></span></span><span><span><span>需要放置在頁面的主域名下。在調用</span></span></span><span><span><code><span>navigator.serviceWorker.register('/service-worker.js')</span></code></span></span><span><span><span>時，可以在第二個參數中設置</span></span></span><span><span><code><span>scope</span></code></span></span><span><span><span>，用來確定 Service Worker 的影響範圍，默認是 sw 文件所在 path 的作用域。</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>需要注意的是，如果 sw 文件被放置在</span></span></span><span><span><code><span>/a</span></code></span></span><span><span><span>目錄下，是不能設置作用域為</span></span></span><span><span><code><span>/</span></code></span></span><span><span><span>的。因為文件本身路徑的級別小於根路徑。</span></span></span></p><span id="OSC_h1_4"></span><h1><span><span><span>使用</span></span></span></h1><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>當我們按照上面的示例，配置好了</span></span></span><span><span><code><span>html</span></code></span></span><span><span><span>及對應的</span></span></span><span><span><code><span>sw.js</span></code></span></span><span><span><span>後，啓動服務並刷新頁面，應該就能看到控制枱打印出了</span></span></span><span><span><code><span>Service Worker 註冊成功</span></code></span></span><span><span><span>的日誌。</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>如果在 chrome 瀏覽器中，可以打開控制枱，切換到應用 Tab，就能看到我們剛註冊好的應用了。 </span></span></span></p><div><img alt="" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-12-02-17-022Ah2qfo8NupBJK8.png" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span>﻿</span></span></span></p><p><span><span><span>此時在瀏覽器的緩存空間中，也能發現我們開闢的緩存</span></span></span><span><span><code><span>my-cache</span></code></span></span><span><span><span>，內部存儲着我們指定的預緩存文件</span></span></span><span><span><code><span>index.html</span></code></span></span><span><span><span>。由於我的項目只有根頁面，所以只有一個條目。</span></span></span></p><div><img alt="" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-12-02-17-02z9Numw0dw0WYJTS.png" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span>﻿</span></span></span></p><p><span><span><span>此時如果頁面所需的所有文件都被緩存了，即使將瀏覽器設置成斷網模式，刷新頁面也是能打開的。本文的目的並不是創建離線應用，下面我們講講上面方式會面臨的問題。</span></span></span></p><span id="OSC_h3_5"></span><h3><span><span><span>如何確定預緩存範圍</span></span></span></h3><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>如果我們的項目只有一個倉庫，可以使用一些</span></span></span><span><span><code><span>webpack</span></code></span></span><span><span><span>插件，可以直接幫我們生成</span></span></span><span><span><code><span>sw</span></code></span></span><span><span><span>文件。每次重新構建都會生成新的文件，這樣就不用擔心多存或者少存文件了。同時，在下一章節的刪除舊緩存中，每次更新版本號就好了。</span></span></span></p><blockquote><span><span><span>﻿</span></span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdevelopers.google.com%2Fweb%2Ftools%2Fworkbox" target="_blank" rel="nofollow"><span><span><span>Workbox</span></span></span></a><span><span><span>是一個用於創建離線優先的網絡應用程序的 JavaScript 庫。它提供了一套工具和功能，幫助開發人員創建可靠的離線體驗，並使網頁應用程序能夠在網絡連接不穩定或斷開的情況下正常工作。Workbox 可以用於緩存和提供離線資源，實現離線頁面導航，處理後台同步和推送通知等功能。它能夠簡化離線應用程序的開發過程，並提供強大的緩存管理和資源加載能力。</span></span></span></blockquote><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>對於有統一配置後台的微前端項目，這個問題有些棘手。</span></span></span></p><div><span>1.</span><span><span><span><span>由於有後台管理，更新某個模塊的文件很常見，但並不想每次都更新</span></span></span><span><span><code><span>sw.js</span></code></span></span><span><span><span>。</span></span></span></span></div><div><span>2.</span><span><span><span><span>由於資源的不確定性，無法在</span></span></span><span><span><code><span>precache</span></code></span></span><span><span><span>中列舉出所有的資源列表，即使列舉出了，可能用户永遠也不會用到某個文件，造成緩存浪費或溢出。</span></span></span></span></div><div><span>3.</span><span><span><span><span>出於第 1、2 條緣由，更新</span></span></span><span><span><code><span>sw</span></code></span></span><span><span><span>文件後，無法確定如何刪除舊緩存。</span></span></span></span></div><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>對於這個問題，首先確定的是，先在</span></span></span><span><span><code><span>precache</span></code></span></span><span><span><span>中列舉出所有的基礎底座的資源文件，並單獨佔用一個</span></span></span><span><span><code><span>cacheName</span></code></span></span><span><span><span>。</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>對於剩下的不確定性的業務文件，可以使用動態緩存的方式，這個會在後面具體講解，也是本文要研究的重點。</span></span></span></p><span id="OSC_h3_6"></span><h3><span><span><span>資源更新</span></span></span></h3><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>由於刷新頁面後，所有資源都從緩存中獲取，此時修改</span></span></span><span><span><code><span>html</span></code></span></span><span><span><span>後，再刷新瀏覽器，頁面並沒有更新。</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>這個問題其實不用太擔心，雖然我們的資源都被緩存了，但是</span></span></span><span><span><code><span>sw.js</span></code></span></span><span><span><span>本身是不會被緩存的。即使我們在下一次更新中，刪除了頁面上註冊 Service Worker 的代碼，已經註冊的 Service Worker 也會一直激活，直到我們主動的刪除它。</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>對於一般的 SPA 項目，上線後資源一般是不變的，如果我們希望更新頁面，只需要更新</span></span></span><span><span><code><span>sw.js</span></code></span></span><span><span><span>就好。當註冊的 Service Worker 文件發生變化時，瀏覽器會自動下載新的 Service Worker 文件，並在下一次訪問頁面時激活新的 Service Worker。</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>更新文件需要注意幾個問題：</span></span></span></p><div><span>1.</span><span><span><span><strong><span>刪除舊緩存：</span></strong></span></span></span></div><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>示例代碼中，在</span></span></span><span><span><code><span>activate</span></code></span></span><span><span><span>階段，我們執行了刪除緩存的邏輯。真實環境中，一般會將</span></span></span><span><span><code><span>cacheName</span></code></span></span><span><span><span>帶上版本號，每次更新</span></span></span><span><span><code><span>sw</span></code></span></span><span><span><span>都更新下版本號。這樣每次都會將舊緩存刪掉，並重新開闢新版本的緩存。各瀏覽器對於緩存超出後的處理是不同的，例如</span></span></span><span><span><code><span>chrome</span></code></span></span><span><span><span>就是緩存逐出策略。及時的清理緩存，可以防止出現一些奇怪的問題。</span></span></span></p><pre><code><span><span><span style="color:#0077aa">const</span></span><span><span> version </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span></span></span><span><span style="color:#669900">'v1'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">const</span></span><span><span> preCacheName </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span></span></span><span><span style="color:#669900">'pre-cache-'</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">+</span></span><span><span> version</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#708090">// 將後文調用的 ’my-cache‘的位置替換為 preCacheName</span></span><span><span></span></span></span></code></pre><div><span>2.</span><span><span><span><strong><span>Service Worker 更新不及時：</span></strong></span></span></span></div><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>同一個域下，只能有一個 Service Worker 被激活，只有所有該域下的頁面都關閉了，下一個註冊的 Service Worker 才能被激活並取代上一個。對於某些用户來説，這個時間太長了。</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>因此，我們需要在</span></span></span><span><span><code><span>install</span></code></span></span><span><span><span>事件中，等待</span></span></span><span><span><code><span>precache</span></code></span></span><span><span><span>環節結束後，調用</span></span></span><span><span><code><span>self.skipWaiting();</span></code></span></span><span><span><span>來立即激活新的 Service Worker，但並不會立即接管控制所有客户端（即瀏覽器標籤頁）。這意味着舊的 Service Worker 仍然會處理當前打開的頁面，直到這些頁面被關閉或重新加載。</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>為了確保新的 Service Worker 可以立即接管所有客户端，在</span></span></span><span><span><code><span>activate</span></code></span></span><span><span><span>事件中調用</span></span></span><span><span><code><span>clients.claim()</span></code></span></span><span><span><span>方法。這個方法會在新的 Service Worker 激活後，立即接管所有已打開的頁面，而不需要等待這些頁面重新加載。這樣可以確保新的 Service Worker 能夠立即生效，提供更新的功能和服務。</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>更改完後的代碼如下，這樣修改後，</span></span></span><span><span><code><span>skipWaiting()</span></code></span></span><span><span><span>和</span></span></span><span><span><code><span>clients.claim()</span></code></span></span><span><span><span>方法會在異步操作完成後被調用，確保新的 Service Worker 在安裝完成後立即激活並接管所有客户端。</span></span></span></p><pre><code><span><span><span style="color:#708090">// 安裝 Service Worker 時進行預緩存</span></span><span><span>
self</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">addEventListener</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#669900">'install'</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#0077aa">function</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span>event</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span>
  event</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">waitUntil</span></span><span><span style="color:#999999">(</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span style="color:#0077aa">async</span></span><span><span></span></span><span><span style="color:#0077aa">function</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">await</span></span><span><span> caches
        </span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">open</span></span><span><span style="color:#999999">(</span></span><span><span>preCacheName</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">then</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#0077aa">function</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span>cache</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span> cache</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">addAll</span></span><span><span style="color:#999999">(</span></span><span><span>filesToCache</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">then</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=&gt;</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span>
          self</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">skipWaiting</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#708090">// 激活 Service Worker</span></span><span><span>
self</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">addEventListener</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#669900">'activate'</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#0077aa">function</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span>event</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span>
  event</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">waitUntil</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#0077aa">async</span></span><span><span></span></span><span><span style="color:#0077aa">function</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">await</span></span><span><span></span></span><span><span style="color:#dd4a68">clearOutdateResources</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span>
    self</span></span><span><span style="color:#999999">.</span></span><span><span>clients</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">claim</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span></span></code></pre><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>現在，更新下</span></span></span><span><span><code><span>index.html</span></code></span></span><span><span><span>，然後將上述</span></span></span><span><span><code><span>sw.js</span></code></span></span><span><span><span>的更新保存，接着刷新兩次頁面 (不要着急，給註冊和加載資源一些時間，可以在控制枱中觀察下 Service Worker 的活躍狀態以及緩存的變化)。</span></span></span></p><div><img alt="" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-12-02-17-060ft9bqjUqI5nj5X.png" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span>﻿</span></span></span></p><p><span><span><span>可以在某個時刻，發現同時存在兩個 Service Worker，一個處於激活狀態，是我們正在使用的，另一個處於待激活狀態，因為正在進行</span></span></span><span><span><code><span>install</span></code></span></span><span><span><span>。此時緩存空間也會同時存在兩個版本的緩存，等新的 Service Worker 激活後，就會刪除舊緩存。然後就只存在一個最新的 Service Worker 了，同時緩存也只剩一個了。</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>現在每次用户打開新的頁面，</span></span></span></p><ul><li><span><span><span><span>優先從緩存中獲取資源</span></span></span></span></li><li><span><span><span><span>如果發現</span></span></span><span><span><code><span>sw</span></code></span></span><span><span><span>文件被更新，安裝新的文件</span></span></span></span></li><li><span><span><span><span>文件內會下載新的資源，同時刪除舊緩存，並且接管所有頁面</span></span></span></span></li><li><span><span><span><span>用户下一次打開新頁面或刷新當前頁面，就會展示最新的內容</span></span></span></span></li></ul><span id="OSC_h1_7"></span><h1><span><span><span>能力擴展</span></span></span></h1><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>基礎操作搞定了。但是上面我們還欠了點技術債，即如果不確定到底有哪些資源，怎麼動態的做出緩存。不要着急，現在先進行下擴展閲讀。</span></span></span></p><span id="OSC_h3_8"></span><h3><span><span><span>緩存的幾種策略</span></span></span></h3><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>當談到 Service Worker 緩存策略時，有以下幾種常見的策略：</span></span></span></p><ul><li><span><span><span><span>Cache First（優先緩存）：首先嚐試從緩存中獲取響應，如果緩存中存在該資源，則直接返回；如果沒有緩存或緩存過期，則向網絡發送請求。</span></span></span></span></li><li><span><span><span><span>Network First（優先網絡）：首先嚐試從網絡獲取響應，如果網絡請求成功，則返回網絡響應；如果網絡請求失敗，則從緩存中獲取響應，即使緩存過期也會返回緩存的響應。</span></span></span></span></li><li><span><span><span><span>Cache Only（僅緩存）：只從緩存中獲取響應，不向網絡發送請求。適用於完全離線可訪問的資源。</span></span></span></span></li><li><span><span><span><span>Network Only（僅網絡）：只從網絡獲取響應，不使用緩存。適用於需要實時數據的場景。</span></span></span></span></li><li><span><span><span><span>Stale-While-Revalidate（同時更新和使用緩存）：首先嚐試從緩存中獲取響應，如果緩存過期，則向網絡發送請求獲取最新響應，並更新緩存。同時返回緩存的響應，以便快速展示內容。</span></span></span></span></li></ul><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>上文中我們使用的，就是緩存優先模式。對於不怎麼更新或者只有一個倉庫的應用來説，使用</span></span></span><span><span><code><span>sw.js</span></code></span></span><span><span><span>文件的更新來説已經足夠了。畢竟代碼寫的越多，bug 就越多。同比，更新的越頻繁，系統就越不穩定。</span></span></span></p><span id="OSC_h3_9"></span><h3><span><span><span>Stale-While-Revalidate</span></span></span></h3><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>其他策略如果有興趣，可以自行搜索，現在我們來講下動態緩存是怎麼實現的。畢竟對於微服務來説，不更新</span></span></span><span><span><code><span>sw</span></code></span></span><span><span><span>是最好的，如果能忘了它就更好了。</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>上文中我們介紹了</span></span></span><span><span><code><span>Cache First</span></code></span></span><span><span><span>，重新附下代碼</span></span></span></p><pre><code><span><span><span style="color:#708090">// 攔截 fetch 事件並從緩存中返回響應</span></span><span><span>
self</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">addEventListener</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#669900">'fetch'</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#0077aa">function</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span>event</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span>
  event</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">respondWith</span></span><span><span style="color:#999999">(</span></span><span><span>
    caches</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">match</span></span><span><span style="color:#999999">(</span></span><span><span>event</span></span><span><span style="color:#999999">.</span></span><span><span>request</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">then</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#0077aa">function</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span>response</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span> response </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">||</span></span><span><span></span></span><span><span style="color:#dd4a68">fetch</span></span><span><span style="color:#999999">(</span></span><span><span>event</span></span><span><span style="color:#999999">.</span></span><span><span>request</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span></span></code></pre><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>新增一個</span></span></span><span><span><code><span>mock.js</span></code></span></span><span><span><span>，腳本會向 body 中新增一個字符串。將</span></span></span><span><span><code><span>js</span></code></span></span><span><span><span>文件使用</span></span></span><span><span><code><span>script</span></code></span></span><span><span><span>的方式加載。</span></span></span></p><pre><code><span><span><span style="color:#708090">// mock.js</span></span><span><span></span></span><span><span style="color:#0077aa">const</span></span><span><span> div </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span> document</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">createElement</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#669900">'div'</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span>
div</span></span><span><span style="color:#999999">.</span></span><span><span>innerText </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span></span></span><span><span style="color:#669900">'Hello World'</span></span><span><span style="color:#999999">;</span></span><span><span>
document</span></span><span><span style="color:#999999">.</span></span><span><span>body</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">appendChild</span></span><span><span style="color:#999999">(</span></span><span><span>div</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#708090">// index.html</span></span><span><span></span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">&lt;</span></span><span><span>script src</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span style="color:#669900">"./mock.js"</span></span><span><span> type</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span style="color:#669900">"text/javascript"</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">&gt;</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">&lt;</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">/</span></span><span><span>script</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">&gt;</span></span><span><span></span></span></span></code></pre><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>同時調整下</span></span></span><span><span><code><span>sw</span></code></span></span><span><span><span>的攔截邏輯。</span></span></span></p><pre><code><span><span><span style="color:#708090">// 新增 runtime 緩存</span></span><span><span></span></span><span><span style="color:#0077aa">const</span></span><span><span> runtimeCacheName </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span></span></span><span><span style="color:#669900">'runtime-cache-'</span></span><span><span></span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">+</span></span><span><span> version</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#708090">// 符合條件也是緩存優先，但是每次都重新發起網絡請求更新緩存</span></span><span><span></span></span><span><span style="color:#0077aa">const</span></span><span><span></span></span><span><span>isStaleWhileRevalidate</span></span><span><span></span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span>request</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=&gt;</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">const</span></span><span><span> url </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span> request</span></span><span><span style="color:#999999">.</span></span><span><span>url</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">const</span></span><span><span> index </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span></span></span><span><span style="color:#999999">[</span></span><span><span style="color:#669900">'http://127.0.0.1:5500/mock.js'</span></span><span><span style="color:#999999">]</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">indexOf</span></span><span><span style="color:#999999">(</span></span><span><span>url</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span> index </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">!==</span></span><span><span></span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">-</span></span><span><span style="color:#990055">1</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">;</span></span><span><span>

self</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">addEventListener</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#669900">'fetch'</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#0077aa">function</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span>event</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span>
  event</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">respondWith</span></span><span><span style="color:#999999">(</span></span><span><span></span></span><span><span style="color:#708090">// 嘗試從緩存中獲取響應</span></span><span><span>
    caches</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">match</span></span><span><span style="color:#999999">(</span></span><span><span>event</span></span><span><span style="color:#999999">.</span></span><span><span>request</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">then</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#0077aa">function</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span>response</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">var</span></span><span><span> fetchPromise </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span></span></span><span><span style="color:#dd4a68">fetch</span></span><span><span style="color:#999999">(</span></span><span><span>event</span></span><span><span style="color:#999999">.</span></span><span><span>request</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">then</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#0077aa">function</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span>networkResponse</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#708090">// 符合匹配條件才克隆響應並將其添加到緩存中</span></span><span><span></span></span><span><span style="color:#0077aa">if</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span style="color:#dd4a68">isStaleWhileRevalidate</span></span><span><span style="color:#999999">(</span></span><span><span>event</span></span><span><span style="color:#999999">.</span></span><span><span>request</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">var</span></span><span><span> responseToCache </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span> networkResponse</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">clone</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span>
          caches</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">open</span></span><span><span style="color:#999999">(</span></span><span><span>runtimeCacheName</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">then</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#0077aa">function</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span>cache</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span>
            cache</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">put</span></span><span><span style="color:#999999">(</span></span><span><span>event</span></span><span><span style="color:#999999">.</span></span><span><span>request</span></span><span><span style="color:#999999">,</span></span><span><span> responseToCache</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">clone</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span> networkResponse</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#708090">// 返回緩存的響應，然後更新緩存中的響應</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span> response </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">||</span></span><span><span> fetchPromise</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span></span></code></pre><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>現在每次用户打開新的頁面，</span></span></span></p><ul><li><span><span><span><span>優先從緩存中獲取資源，同時發起一個網絡請求</span></span></span></span></li><li><span><span><span><span>有緩存則直接返回緩存，沒有則返回一個</span></span></span><span><span><code><span>fetchPromise</span></code></span></span></span></li><li><span><span><span><code><span>fetchPromise</span></code></span></span><span><span><span>內部更新符合緩存條件的請求</span></span></span></span></li><li><span><span><span><span>用户下一次打開新頁面或刷新當前頁面，就會展示最新的內容</span></span></span></span></li></ul><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>通過修改</span></span></span><span><span><code><span>isStaleWhileRevalidate</span></code></span></span><span><span><span>中 url 的匹配條件，就能夠控制是否更新緩存。在上面的示例中，我們可以將</span></span></span><span><span><code><span>index.html</span></code></span></span><span><span><span>從</span></span></span><span><span><code><span>precache</span></code></span></span><span><span><span>列表中移除，放入</span></span></span><span><span><code><span>runtime</span></code></span></span><span><span><span>中，或者專門處理下</span></span></span><span><span><code><span>index.html</span></code></span></span><span><span><span>的放置規則，去更新</span></span></span><span><span><code><span>precache</span></code></span></span><span><span><span>中的緩存。最好不要出現多個緩存桶中存在同一個</span></span></span><span><span><code><span>request</span></code></span></span><span><span><span>的緩存，那樣就不知道走的到底是哪個緩存了。</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>一般來説，微前端的應用，資源文件都有個固定的存放位置，文件本身通過在文件名上增加</span></span></span><span><span><code><span>hash</span></code></span></span><span><span><span>或版本號來進行區分。我們在</span></span></span><span><span><code><span>isStaleWhileRevalidate</span></code></span></span><span><span><span>函數中匹配存放資源位置的路徑，這樣用户在第二次打開頁面時，就可以直接使用緩存了。如果是內嵌頁面，可以與平台溝通，是否可以在應用冷起的時候，偷偷訪問一個資源頁面，提前進行預加載，這樣就能在首次打開的時候也享受本地緩存了。</span></span></span></p><span id="OSC_h3_10"></span><h3><span><span><span>緩存過期</span></span></span></h3><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>即使我們緩存了一些資源文件，例如 Iconfont、字體庫等只會更新自身內容，但不會變化名稱的文件。僅使用</span></span></span><span><span><code><span>Stale-While-Revalidate</span></code></span></span><span><span><span>其實也是可以的。用户會在第二次打開頁面時看到最新的內容。</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>但為了提高一些體驗，例如，用户半年沒打開頁面了，突然在今天打開了一下，展示歷史的內容就不太合適了，這時候可以增加一個緩存過期的策略。</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>如果我們使用的是</span></span></span><span><span><code><span>Workbox</span></code></span></span><span><span><span>，通過使用</span></span></span><span><span><code><span>ExpirationPlugin</span></code></span></span><span><span><span>來實現的。</span></span></span><span><span><code><span>ExpirationPlugin</span></code></span></span><span><span><span>是</span></span></span><span><span><code><span>Workbox</span></code></span></span><span><span><span>中的一個緩存插件，它允許為緩存條目設置過期時間。示例如下所示</span></span></span></p><pre><code><span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> registerRoute </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'workbox-routing'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> CacheFirst</span></span><span><span style="color:#999999">,</span></span><span><span> StaleWhileRevalidate </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'workbox-strategies'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> ExpirationPlugin </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'workbox-expiration'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#708090">// 設置緩存的有效期為一小時</span></span><span><span></span></span><span><span style="color:#0077aa">const</span></span><span><span> cacheExpiration </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span>
  maxAgeSeconds</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#990055">60</span></span><span><span></span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">*</span></span><span><span></span></span><span><span style="color:#990055">60</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#708090">// 一小時</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#708090">// 使用 CacheFirst 策略，並應用 ExpirationPlugin</span></span><span><span></span></span><span><span style="color:#dd4a68">registerRoute</span></span><span><span style="color:#999999">(</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span>{ request }</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=&gt;</span></span><span><span> request</span></span><span><span style="color:#999999">.</span></span><span><span>destination </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">===</span></span><span><span></span></span><span><span style="color:#669900">'image'</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#0077aa">new</span></span><span><span></span></span><span><span style="color:#dd4a68">CacheFirst</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">{</span></span><span><span>
    cacheName</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">'image-cache'</span></span><span><span style="color:#999999">,</span></span><span><span>
    plugins</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#999999">[</span></span><span><span></span></span><span><span style="color:#0077aa">new</span></span><span><span></span></span><span><span style="color:#dd4a68">ExpirationPlugin</span></span><span><span style="color:#999999">(</span></span><span><span>cacheExpiration</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">]</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#708090">// 使用 StaleWhileRevalidate 策略，並應用 ExpirationPlugin</span></span><span><span></span></span><span><span style="color:#dd4a68">registerRoute</span></span><span><span style="color:#999999">(</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span>{ request }</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=&gt;</span></span><span><span> request</span></span><span><span style="color:#999999">.</span></span><span><span>destination </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">===</span></span><span><span></span></span><span><span style="color:#669900">'script'</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#0077aa">new</span></span><span><span></span></span><span><span style="color:#dd4a68">StaleWhileRevalidate</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">{</span></span><span><span>
    cacheName</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">'script-cache'</span></span><span><span style="color:#999999">,</span></span><span><span>
    plugins</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#999999">[</span></span><span><span></span></span><span><span style="color:#0077aa">new</span></span><span><span></span></span><span><span style="color:#dd4a68">ExpirationPlugin</span></span><span><span style="color:#999999">(</span></span><span><span>cacheExpiration</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">]</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span></span></code></pre><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>或者我們可以實現一下自己的緩存過期策略。首先是增加緩存過期時間。在原本的更新緩存的基礎上，設置自己的</span></span></span><span><span><code><span>cache-control</span></code></span></span><span><span><span>，然後再放入緩存中。示例中直接刪除了原本的</span></span></span><span><span><code><span>cache-control</span></code></span></span><span><span><span>，真正使用中，需要判斷下，比如</span></span></span><span><span><code><span>no-cache</span></code></span></span><span><span><span>類型的資源，就不要使用緩存了。</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>每次命中緩存時，都會判斷下是否過期，如果過期，則直接返回從網絡中獲取的最新的請求，並更新緩存。</span></span></span></p><pre><code><span><span><span>self</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">addEventListener</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#669900">'fetch'</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#0077aa">function</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span>event</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span>
  event</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">respondWith</span></span><span><span style="color:#999999">(</span></span><span><span></span></span><span><span style="color:#708090">// 嘗試從緩存中獲取響應</span></span><span><span>
    caches</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">match</span></span><span><span style="color:#999999">(</span></span><span><span>event</span></span><span><span style="color:#999999">.</span></span><span><span>request</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">then</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#0077aa">function</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span>response</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">var</span></span><span><span> fetchPromise </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span></span></span><span><span style="color:#dd4a68">fetch</span></span><span><span style="color:#999999">(</span></span><span><span>event</span></span><span><span style="color:#999999">.</span></span><span><span>request</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">then</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#0077aa">function</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span>networkResponse</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">if</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span style="color:#dd4a68">isStaleWhileRevalidate</span></span><span><span style="color:#999999">(</span></span><span><span>event</span></span><span><span style="color:#999999">.</span></span><span><span>request</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#708090">// 檢查響應的狀態碼是否為成功</span></span><span><span></span></span><span><span style="color:#0077aa">if</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span>networkResponse</span></span><span><span style="color:#999999">.</span></span><span><span>status </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">===</span></span><span><span></span></span><span><span style="color:#990055">200</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#708090">// 克隆響應並將其添加到緩存中</span></span><span><span></span></span><span><span style="color:#0077aa">var</span></span><span><span> clonedResponse </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span> networkResponse</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">clone</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#708090">// 在存儲到緩存之前，設置正確的緩存頭部</span></span><span><span></span></span><span><span style="color:#0077aa">var</span></span><span><span> headers </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span></span></span><span><span style="color:#0077aa">new</span></span><span><span></span></span><span><span style="color:#dd4a68">Headers</span></span><span><span style="color:#999999">(</span></span><span><span>networkResponse</span></span><span><span style="color:#999999">.</span></span><span><span>headers</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span>
            headers</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">delete</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#669900">'cache-control'</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span>
            headers</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">append</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#669900">'cache-control'</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#669900">'public, max-age=3600'</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#708090">// 設置緩存有效期為 1 小時</span></span><span><span></span></span><span><span style="color:#708090">// 創建新的響應對象並存儲到緩存中</span></span><span><span></span></span><span><span style="color:#0077aa">var</span></span><span><span> cachedResponse </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span></span></span><span><span style="color:#0077aa">new</span></span><span><span></span></span><span><span style="color:#dd4a68">Response</span></span><span><span style="color:#999999">(</span></span><span><span>clonedResponse</span></span><span><span style="color:#999999">.</span></span><span><span>body</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span>
              status</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span> networkResponse</span></span><span><span style="color:#999999">.</span></span><span><span>status</span></span><span><span style="color:#999999">,</span></span><span><span>
              statusText</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span> networkResponse</span></span><span><span style="color:#999999">.</span></span><span><span>statusText</span></span><span><span style="color:#999999">,</span></span><span><span>
              headers</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span> headers</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span>

            caches</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">open</span></span><span><span style="color:#999999">(</span></span><span><span>runtimeCacheName</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">then</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">(</span></span><span><span>cache</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=&gt;</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span>
              cache</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">put</span></span><span><span style="color:#999999">(</span></span><span><span>event</span></span><span><span style="color:#999999">.</span></span><span><span>request</span></span><span><span style="color:#999999">,</span></span><span><span> cachedResponse</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span> networkResponse</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#708090">// 檢查緩存的響應是否存在且未過期</span></span><span><span></span></span><span><span style="color:#0077aa">if</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span>response </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">&amp;&amp;</span></span><span><span></span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">!</span></span><span><span style="color:#dd4a68">isExpired</span></span><span><span style="color:#999999">(</span></span><span><span>response</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span> response</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#708090">// 返回緩存的響應</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span> fetchPromise</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">function</span></span><span><span></span></span><span><span style="color:#dd4a68">isExpired</span></span><span><span style="color:#999999">(</span></span><span><span>response</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#708090">// 從響應的 headers 中獲取緩存的有效期信息</span></span><span><span></span></span><span><span style="color:#0077aa">var</span></span><span><span> cacheControl </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span> response</span></span><span><span style="color:#999999">.</span></span><span><span>headers</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">get</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#669900">'cache-control'</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">if</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span>cacheControl</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">var</span></span><span><span> maxAgeMatch </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span> cacheControl</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">match</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#ee9900">/max-age=(\d+)/</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">if</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span>maxAgeMatch</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">var</span></span><span><span> maxAgeSeconds </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span></span></span><span><span style="color:#dd4a68">parseInt</span></span><span><span style="color:#999999">(</span></span><span><span>maxAgeMatch</span></span><span><span style="color:#999999">[</span></span><span><span style="color:#990055">1</span></span><span><span style="color:#999999">]</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#990055">10</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">var</span></span><span><span> requestTime </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span> Date</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">parse</span></span><span><span style="color:#999999">(</span></span><span><span>response</span></span><span><span style="color:#999999">.</span></span><span><span>headers</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">get</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#669900">'date'</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">var</span></span><span><span> expirationTime </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span> requestTime </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">+</span></span><span><span> maxAgeSeconds </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">*</span></span><span><span></span></span><span><span style="color:#990055">1000</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#708090">// 檢查當前時間是否超過了緩存的有效期</span></span><span><span></span></span><span><span style="color:#0077aa">if</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span>Date</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">now</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">&lt;</span></span><span><span> expirationTime</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span></span></span><span><span style="color:#990055">false</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#708090">// 未過期</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span></span></span><span><span style="color:#990055">true</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#708090">// 已過期</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span></span></code></pre><blockquote><span><span><span>從 Service Worker 發起的請求，可能會被瀏覽器自身的內存緩存或硬盤緩存捕獲，然後直接返回。</span></span></span></blockquote><span id="OSC_h3_11"></span><h3><span><span><span>精確清理緩存</span></span></span></h3><blockquote><span><span><span>下面的內容，默認為微前端應用。</span></span></span></blockquote><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>隨着微前端應用的更新，會逐漸出現失效的資源文件一直出現在緩存中，時間長了可能會導致緩存溢出。</span></span></span></p><span id="OSC_h4_12"></span><h4><span><span><span>定時更新</span></span></span></h4><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>例如以半年為期限，定期更新</span></span></span><span><span><code><span>sw</span></code></span></span><span><span><span>文件的版本號，每次更新都會一刀切的將上一個版本中的</span></span></span><span><span><strong><span>動態緩存</span></strong></span></span><span><span><span>幹掉，此操作會導致下次加載變慢，因為會重新通過網絡請求的方式加載來創建緩存。但如果更新頻率控制得當，並且資源拆分合理，用户感知不會很大。</span></span></span></p><span id="OSC_h4_13"></span><h4><span><span><span>處理不常用緩存</span></span></span></h4><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>上文中的緩存過期策略，並不適用於此處。因為微服務中資源文件中，只要文件名不變，內容就應該不變。我們只是期望刪除超過一定時間沒有使用的條目，防止緩存溢出。這裏也使用</span></span></span><span><span><code><span>Stale-While-Revalidate</span></code></span></span><span><span><span>的原因是為了幫助我們識別長期不使用的</span></span></span><span><span><code><span>js</span></code></span></span><span><span><span>文件，方便刪除。</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>本來可以使用</span></span></span><span><span><code><span>self.registration.periodicSync.register</span></code></span></span><span><span><span>來創建一個週期性任務，但是由於兼容性問題，放棄了。需要的可自行研究，附上</span></span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.mozilla.org%2Fen-US%2Fdocs%2FWeb%2FAPI%2FPeriodicSyncManager" target="_blank" rel="nofollow"><span><span><span>網址</span></span></span></a><span><span><span>。</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>這裏我們換一個條件。每當有網絡請求被觸發時，啓動一個延遲 20s 的</span></span></span><span><span><code><span>debounce</span></code></span></span><span><span><span>函數，來處理緩存問題。先把之前的清除舊版本緩存的函數改名成</span></span></span><span><span><code><span>clearOldResources</span></code></span></span><span><span><span>。然後設定緩存過期時間為 10s，刷新兩次頁面來觸發網路請求，20s 之後，</span></span></span><span><span><code><span>runtime</span></code></span></span><span><span><span>緩存中的</span></span></span><span><span><code><span>mock.js</span></code></span></span><span><span><span>就會被刪除了。真實場景下，延遲函數和緩存過期都不會這麼短，可以設置成 5min 和 3 個月。</span></span></span></p><pre><code><span><span><span style="color:#0077aa">function</span></span><span><span></span></span><span><span style="color:#dd4a68">debounce</span></span><span><span style="color:#999999">(</span></span><span><span>func, delay</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">let</span></span><span><span> timerId</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span></span></span><span><span style="color:#0077aa">function</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span>...args</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#dd4a68">clearTimeout</span></span><span><span style="color:#999999">(</span></span><span><span>timerId</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span>

    timerId </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span></span></span><span><span style="color:#dd4a68">setTimeout</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=&gt;</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#dd4a68">func</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">apply</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#0077aa">this</span></span><span><span style="color:#999999">,</span></span><span><span> args</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">,</span></span><span><span> delay</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">const</span></span><span><span> clearOutdateResources </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span></span></span><span><span style="color:#dd4a68">debounce</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#0077aa">function</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span>
  cache
    </span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">open</span></span><span><span style="color:#999999">(</span></span><span><span>runtimeCacheName</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">keys</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">then</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#0077aa">function</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span>requests</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span>
      requests</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">forEach</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#0077aa">function</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span>request</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span>
        cache</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">match</span></span><span><span style="color:#999999">(</span></span><span><span>request</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">then</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#0077aa">function</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span>response</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#708090">// response 為匹配到的 Response 對象</span></span><span><span></span></span><span><span style="color:#0077aa">if</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span style="color:#dd4a68">isExpiredWithTime</span></span><span><span style="color:#999999">(</span></span><span><span>response</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#990055">10</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span>
            cache</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">delete</span></span><span><span style="color:#999999">(</span></span><span><span>request</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">function</span></span><span><span></span></span><span><span style="color:#dd4a68">isExpiredWithTime</span></span><span><span style="color:#999999">(</span></span><span><span>response, time</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">var</span></span><span><span> requestTime </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span> Date</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">parse</span></span><span><span style="color:#999999">(</span></span><span><span>response</span></span><span><span style="color:#999999">.</span></span><span><span>headers</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">get</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#669900">'date'</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">if</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">!</span></span><span><span>requestTime</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span></span></span><span><span style="color:#990055">false</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">var</span></span><span><span> expirationTime </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span> requestTime </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">+</span></span><span><span> time </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">*</span></span><span><span></span></span><span><span style="color:#990055">1000</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#708090">// 檢查當前時間是否超過了緩存的有效期</span></span><span><span></span></span><span><span style="color:#0077aa">if</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span>Date</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">now</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">&lt;</span></span><span><span> expirationTime</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span></span></span><span><span style="color:#990055">false</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#708090">// 未過期</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span></span></span><span><span style="color:#990055">true</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#708090">// 已過期</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span></span></code></pre><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>重新總結下微前端應用下的緩存配置：</span></span></span></p><div><span>1.</span><span><span><span><span>使用版本號，並初始化</span></span></span><span><span><code><span>preCache</span></code></span></span><span><span><span>和</span></span></span><span><span><code><span>runtimeCache</span></code></span></span></span></div><div><span style="color:var(--vscode-textPreformat-foreground)">2.</span><span><span><span><code><span>preCache</span></code></span></span><span><span><span>中預緩存基座數據，使用</span></span></span><span><span><code><span>Cache First</span></code></span></span><span><span><span>策略，</span></span></span><span><span><code><span>sw</span></code></span></span><span><span><span>不更新則基座數據不更新</span></span></span></span></div><div><span style="color:var(--vscode-textPreformat-foreground)">3.</span><span><span><span><code><span>runtimeCache</span></code></span></span><span><span><span>使用</span></span></span><span><span><code><span>Stale-While-Revalidate</span></code></span></span><span><span><span>策略負責動態緩存業務資源的數據，每次訪問頁面都動態更新一次</span></span></span></span></div><div><span>4.</span><span><span><span><span>使用</span></span></span><span><span><code><span>debounce</span></code></span></span><span><span><span>函數，每次訪問頁面都會延遲清除過期的緩存</span></span></span></span></div><div><span>5.</span><span><span><span><span>如果需要更新</span></span></span><span><span><code><span>preCache</span></code></span></span><span><span><span>中的基座數據，則需要升級版本號並重新安裝</span></span></span><span><span><code><span>sw</span></code></span></span><span><span><span>文件。新服務激活後會刪除上一個版本的數據</span></span></span></span></div><div><span style="color:var(--vscode-textPreformat-foreground)">6.</span><span><span><span><code><span>runtimeCache</span></code></span></span><span><span><span>和</span></span></span><span><span><code><span>preCache</span></code></span></span><span><span><span>不能同時存儲一個資源，否則可能導致混亂。</span></span></span></span></div><span id="OSC_h1_14"></span><h1><span><span><span>最終示例</span></span></span></h1><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>下面是最終的</span></span></span><span><span><code><span>sw.js</span></code></span></span><span><span><span>，我刪除掉了緩存過期的邏輯，如有需要請自行從上文代碼中獲取。順便我增加了一點點喪心病狂的錯誤處理邏輯。</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>理論上，</span></span></span><span><span><code><span>index.html</span></code></span></span><span><span><span>應該放入預緩存的列表裏，但我懶得寫在</span></span></span><span><span><code><span>Stale-While-Revalidate</span></code></span></span><span><span><span>裏分別更新</span></span></span><span><span><code><span>preCache</span></code></span></span><span><span><span>和</span></span></span><span><span><code><span>runtimeCache</span></code></span></span><span><span><span>了，相信看完上面內容的你，一定可以自己實現對應邏輯。</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>如果你用了下面的文件，每次刷新完頁面的 20s 後，runtime 的緩存就會被清空，因為我們過期時間只設置了 10s。而每次發起請求後的 20s 後就會進行過期判斷。</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>在真實的驗證過程中，有部分</span></span></span></p><pre><code><span><span><span style="color:#0077aa">const</span></span><span><span> version </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span></span></span><span><span style="color:#669900">'v1'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">const</span></span><span><span> preCacheName </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span></span></span><span><span style="color:#669900">'pre-cache-'</span></span><span><span></span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">+</span></span><span><span> version</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">const</span></span><span><span> runtimeCacheName </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span></span></span><span><span style="color:#669900">'runtime-cache'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#708090">// runtime 不進行整體清除</span></span><span><span></span></span><span><span style="color:#0077aa">const</span></span><span><span> filesToCache </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span></span></span><span><span style="color:#999999">[</span></span><span><span style="color:#999999">]</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#708090">// 這裏將 index.html 放到動態緩存裏了，為了搭自動更新的便車。這個小項目也沒別的需要預緩存的了</span></span><span><span></span></span><span><span style="color:#0077aa">const</span></span><span><span> maxAgeSeconds </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span></span></span><span><span style="color:#990055">10</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#708090">// 緩存過期時間，單位 s</span></span><span><span></span></span><span><span style="color:#0077aa">const</span></span><span><span> debounceClearTime </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span></span></span><span><span style="color:#990055">20</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#708090">// 延遲清理緩存時間，單位 s</span></span><span><span></span></span><span><span style="color:#708090">// 符合條件也是緩存優先，但是每次都重新發起網絡請求更新緩存</span></span><span><span></span></span><span><span style="color:#0077aa">const</span></span><span><span></span></span><span><span>isStaleWhileRevalidate</span></span><span><span></span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span>request</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=&gt;</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">const</span></span><span><span> url </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span> request</span></span><span><span style="color:#999999">.</span></span><span><span>url</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">const</span></span><span><span> index </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span></span></span><span><span style="color:#999999">[</span></span><span><span>`${self.location.origin}/mock.js`</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span>`${self.location.origin}/index.html`</span></span><span><span style="color:#999999">]</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">indexOf</span></span><span><span style="color:#999999">(</span></span><span><span>url</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span> index </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">!==</span></span><span><span></span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">-</span></span><span><span style="color:#990055">1</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#708090">/*********************上面是配置代碼***************************** */</span></span><span><span></span></span><span><span style="color:#0077aa">const</span></span><span><span></span></span><span><span>addResourcesToCache</span></span><span><span></span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span></span></span><span><span style="color:#0077aa">async</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=&gt;</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span> caches</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">open</span></span><span><span style="color:#999999">(</span></span><span><span>preCacheName</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">then</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">(</span></span><span><span>cache</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=&gt;</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span> cache</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">addAll</span></span><span><span style="color:#999999">(</span></span><span><span>filesToCache</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#708090">// 安裝 Service Worker 時進行預緩存</span></span><span><span>
self</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">addEventListener</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#669900">'install'</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#0077aa">function</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span>event</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span>
  event</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">waitUntil</span></span><span><span style="color:#999999">(</span></span><span><span></span></span><span><span style="color:#dd4a68">addResourcesToCache</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">then</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=&gt;</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span>
      self</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">skipWaiting</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#708090">// 刪除上個版本的數據</span></span><span><span></span></span><span><span style="color:#0077aa">async</span></span><span><span></span></span><span><span style="color:#0077aa">function</span></span><span><span></span></span><span><span style="color:#dd4a68">clearOldResources</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span> caches</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">keys</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">then</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#0077aa">function</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span>cacheNames</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span> Promise</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">all</span></span><span><span style="color:#999999">(</span></span><span><span>
      cacheNames
        </span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">filter</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#0077aa">function</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span>cacheName</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span></span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">!</span></span><span><span style="color:#999999">[</span></span><span><span>preCacheName</span></span><span><span style="color:#999999">,</span></span><span><span> runtimeCacheName</span></span><span><span style="color:#999999">]</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">includes</span></span><span><span style="color:#999999">(</span></span><span><span>cacheName</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">map</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#0077aa">function</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span>cacheName</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span> caches</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">delete</span></span><span><span style="color:#999999">(</span></span><span><span>cacheName</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#708090">// 激活 Service Worker</span></span><span><span>
self</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">addEventListener</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#669900">'activate'</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#0077aa">function</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span>event</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span>
  event</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">waitUntil</span></span><span><span style="color:#999999">(</span></span><span><span></span></span><span><span style="color:#dd4a68">clearOldResources</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">finally</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=&gt;</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span>
      self</span></span><span><span style="color:#999999">.</span></span><span><span>clients</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">claim</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#dd4a68">clearOutdateResources</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#708090">// 緩存優先</span></span><span><span></span></span><span><span style="color:#0077aa">const</span></span><span><span></span></span><span><span>isCacheFirst</span></span><span><span></span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span>request</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=&gt;</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">const</span></span><span><span> url </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span> request</span></span><span><span style="color:#999999">.</span></span><span><span>url</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">const</span></span><span><span> index </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span> filesToCache</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">findIndex</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">(</span></span><span><span>u</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=&gt;</span></span><span><span> url</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">includes</span></span><span><span style="color:#999999">(</span></span><span><span>u</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span> index </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">!==</span></span><span><span></span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">-</span></span><span><span style="color:#990055">1</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">function</span></span><span><span></span></span><span><span style="color:#dd4a68">addToCache</span></span><span><span style="color:#999999">(</span></span><span><span>cacheName, request, response</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">try</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span>
    caches</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">open</span></span><span><span style="color:#999999">(</span></span><span><span>cacheName</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">then</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">(</span></span><span><span>cache</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=&gt;</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span>
      cache</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">put</span></span><span><span style="color:#999999">(</span></span><span><span>request</span></span><span><span style="color:#999999">,</span></span><span><span> response</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">catch</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span>error</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span>
    console</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">error</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#669900">'add to cache error =&gt;'</span></span><span><span style="color:#999999">,</span></span><span><span> error</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">async</span></span><span><span></span></span><span><span style="color:#0077aa">function</span></span><span><span></span></span><span><span style="color:#dd4a68">cacheFirst</span></span><span><span style="color:#999999">(</span></span><span><span>request</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">try</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span> caches
      </span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">match</span></span><span><span style="color:#999999">(</span></span><span><span>request</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">then</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">(</span></span><span><span>response</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=&gt;</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">if</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span>response</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span> response</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span></span></span><span><span style="color:#dd4a68">fetch</span></span><span><span style="color:#999999">(</span></span><span><span>request</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">then</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">(</span></span><span><span>response</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=&gt;</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#708090">// 檢查是否成功獲取到響應</span></span><span><span></span></span><span><span style="color:#0077aa">if</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">!</span></span><span><span>response </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">||</span></span><span><span> response</span></span><span><span style="color:#999999">.</span></span><span><span>status </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">!==</span></span><span><span></span></span><span><span style="color:#990055">200</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span> response</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#708090">// 返回原始響應</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">var</span></span><span><span> clonedResponse </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span> response</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">clone</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#dd4a68">addToCache</span></span><span><span style="color:#999999">(</span></span><span><span>runtimeCacheName</span></span><span><span style="color:#999999">,</span></span><span><span> request</span></span><span><span style="color:#999999">,</span></span><span><span> clonedResponse</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span> response</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">catch</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=&gt;</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span>
        console</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">error</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#669900">'match in cacheFirst error'</span></span><span><span style="color:#999999">,</span></span><span><span> error</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span></span></span><span><span style="color:#dd4a68">fetch</span></span><span><span style="color:#999999">(</span></span><span><span>request</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">catch</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span>error</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span>
    console</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">error</span></span><span><span style="color:#999999">(</span></span><span><span>error</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span></span></span><span><span style="color:#dd4a68">fetch</span></span><span><span style="color:#999999">(</span></span><span><span>request</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#708090">// 緩存優先，同步更新</span></span><span><span></span></span><span><span style="color:#0077aa">async</span></span><span><span></span></span><span><span style="color:#0077aa">function</span></span><span><span></span></span><span><span style="color:#dd4a68">handleFetch</span></span><span><span style="color:#999999">(</span></span><span><span>request</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">try</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#dd4a68">clearOutdateResources</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#708090">// 嘗試從緩存中獲取響應</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span> caches</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">match</span></span><span><span style="color:#999999">(</span></span><span><span>request</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">then</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#0077aa">function</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span>response</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">var</span></span><span><span> fetchPromise </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span></span></span><span><span style="color:#dd4a68">fetch</span></span><span><span style="color:#999999">(</span></span><span><span>request</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">then</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#0077aa">function</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span>networkResponse</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#708090">// 檢查響應的狀態碼是否為成功</span></span><span><span></span></span><span><span style="color:#0077aa">if</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">!</span></span><span><span>networkResponse </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">||</span></span><span><span> networkResponse</span></span><span><span style="color:#999999">.</span></span><span><span>status </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">!==</span></span><span><span></span></span><span><span style="color:#990055">200</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span> networkResponse</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#708090">// 克隆響應並將其添加到緩存中</span></span><span><span></span></span><span><span style="color:#0077aa">var</span></span><span><span> clonedResponse </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span> networkResponse</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">clone</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#dd4a68">addToCache</span></span><span><span style="color:#999999">(</span></span><span><span>runtimeCacheName</span></span><span><span style="color:#999999">,</span></span><span><span> request</span></span><span><span style="color:#999999">,</span></span><span><span> clonedResponse</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span> networkResponse</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#708090">// 返回緩存的響應，然後更新緩存中的響應</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span> response </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">||</span></span><span><span> fetchPromise</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">catch</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span>error</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span>
    console</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">error</span></span><span><span style="color:#999999">(</span></span><span><span>error</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span></span></span><span><span style="color:#dd4a68">fetch</span></span><span><span style="color:#999999">(</span></span><span><span>request</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span>

self</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">addEventListener</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#669900">'fetch'</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#0077aa">function</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span>event</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">const</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> request </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span> event</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">if</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span style="color:#dd4a68">isCacheFirst</span></span><span><span style="color:#999999">(</span></span><span><span>request</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span>
    event</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">respondWith</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#dd4a68">cacheFirst</span></span><span><span style="color:#999999">(</span></span><span><span>request</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">if</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span style="color:#dd4a68">isStaleWhileRevalidate</span></span><span><span style="color:#999999">(</span></span><span><span>request</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span>
    event</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">respondWith</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#dd4a68">handleFetch</span></span><span><span style="color:#999999">(</span></span><span><span>request</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">function</span></span><span><span></span></span><span><span style="color:#dd4a68">debounce</span></span><span><span style="color:#999999">(</span></span><span><span>func, delay</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">let</span></span><span><span> timerId</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span></span></span><span><span style="color:#0077aa">function</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span>...args</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#dd4a68">clearTimeout</span></span><span><span style="color:#999999">(</span></span><span><span>timerId</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span>

    timerId </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span></span></span><span><span style="color:#dd4a68">setTimeout</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=&gt;</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#dd4a68">func</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">apply</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#0077aa">this</span></span><span><span style="color:#999999">,</span></span><span><span> args</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">,</span></span><span><span> delay</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">const</span></span><span><span> clearOutdateResources </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span></span></span><span><span style="color:#dd4a68">debounce</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#0077aa">function</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">try</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span>
    caches</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">open</span></span><span><span style="color:#999999">(</span></span><span><span>runtimeCacheName</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">then</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">(</span></span><span><span>cache</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=&gt;</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span>
      cache</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">keys</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">then</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#0077aa">function</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span>requests</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span>
        requests</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">forEach</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#0077aa">function</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span>request</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span>
          cache</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">match</span></span><span><span style="color:#999999">(</span></span><span><span>request</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">then</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#0077aa">function</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span>response</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">const</span></span><span><span> isExpired </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span></span></span><span><span style="color:#dd4a68">isExpiredWithTime</span></span><span><span style="color:#999999">(</span></span><span><span>response</span></span><span><span style="color:#999999">,</span></span><span><span> maxAgeSeconds</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">if</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span>isExpired</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span>
              cache</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">delete</span></span><span><span style="color:#999999">(</span></span><span><span>request</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">catch</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span>error</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span>
    console</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">error</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#669900">'clearOutdateResources error =&gt; '</span></span><span><span style="color:#999999">,</span></span><span><span> error</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">,</span></span><span><span> debounceClearTime </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">*</span></span><span><span></span></span><span><span style="color:#990055">1000</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">function</span></span><span><span></span></span><span><span style="color:#dd4a68">isExpiredWithTime</span></span><span><span style="color:#999999">(</span></span><span><span>response, time</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">var</span></span><span><span> requestTime </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span> Date</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">parse</span></span><span><span style="color:#999999">(</span></span><span><span>response</span></span><span><span style="color:#999999">.</span></span><span><span>headers</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">get</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#669900">'date'</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">if</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">!</span></span><span><span>requestTime</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span></span></span><span><span style="color:#990055">false</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">var</span></span><span><span> expirationTime </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span> requestTime </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">+</span></span><span><span> time </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">*</span></span><span><span></span></span><span><span style="color:#990055">1000</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#708090">// 檢查當前時間是否超過了緩存的有效期</span></span><span><span></span></span><span><span style="color:#0077aa">if</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span>Date</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">now</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">&lt;</span></span><span><span> expirationTime</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span></span></span><span><span style="color:#990055">false</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#708090">// 未過期</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span></span></span><span><span style="color:#990055">true</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#708090">// 已過期</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span></span></code></pre><span id="OSC_h3_15"></span><h3><span><span><strong><span>注意</span></strong></span></span></h3><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>在真實的驗證過程中，有部分資源獲取不到</span></span></span><span><span><code><span>date</span></code></span></span><span><span><span>這個數據，因此為了保險，我們還是在存入緩存時，自己補充一個存入時間</span></span></span></p><pre><code><span><span><span></span></span><span><span style="color:#708090">// 克隆響應並將其添加到緩存中</span></span><span><span></span></span><span><span style="color:#0077aa">var</span></span><span><span> clonedResponse </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span> networkResponse</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">clone</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#708090">// 在存儲到緩存之前，設置正確的緩存頭部</span></span><span><span></span></span><span><span style="color:#0077aa">var</span></span><span><span> headers </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span></span></span><span><span style="color:#0077aa">new</span></span><span><span></span></span><span><span style="color:#dd4a68">Headers</span></span><span><span style="color:#999999">(</span></span><span><span>networkResponse</span></span><span><span style="color:#999999">.</span></span><span><span>headers</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span>

headers</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">append</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#669900">'sw-save-date'</span></span><span><span style="color:#999999">,</span></span><span><span> Date</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">now</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#708090">// 創建新的響應對象並存儲到緩存中</span></span><span><span></span></span><span><span style="color:#0077aa">var</span></span><span><span> cachedResponse </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span></span></span><span><span style="color:#0077aa">new</span></span><span><span></span></span><span><span style="color:#dd4a68">Response</span></span><span><span style="color:#999999">(</span></span><span><span>clonedResponse</span></span><span><span style="color:#999999">.</span></span><span><span>body</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span>
  status</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span> networkResponse</span></span><span><span style="color:#999999">.</span></span><span><span>status</span></span><span><span style="color:#999999">,</span></span><span><span>
  statusText</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span> networkResponse</span></span><span><span style="color:#999999">.</span></span><span><span>statusText</span></span><span><span style="color:#999999">,</span></span><span><span>
  headers</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span> headers</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span></span></code></pre><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>在判斷過期時，取我們自己寫入的</span></span></span><span><span><code><span>key</span></code></span></span><span><span><span>即可。</span></span></span></p><pre><code><span><span><span style="color:#0077aa">function</span></span><span><span></span></span><span><span style="color:#dd4a68">isExpiredWithTime</span></span><span><span style="color:#999999">(</span></span><span><span>response, time</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">var</span></span><span><span> requestTime </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span></span></span><span><span style="color:#dd4a68">Number</span></span><span><span style="color:#999999">(</span></span><span><span>response</span></span><span><span style="color:#999999">.</span></span><span><span>headers</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">get</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#669900">'sw-save-date'</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">if</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">!</span></span><span><span>requestTime</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span></span></span><span><span style="color:#990055">false</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">var</span></span><span><span> expirationTime </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span> requestTime </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">+</span></span><span><span> time </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">*</span></span><span><span></span></span><span><span style="color:#990055">1000</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#708090">// 檢查當前時間是否超過了緩存的有效期</span></span><span><span></span></span><span><span style="color:#0077aa">if</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span>Date</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">now</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">&lt;</span></span><span><span> expirationTime</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span></span></span><span><span style="color:#990055">false</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#708090">// 未過期</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span></span></span><span><span style="color:#990055">true</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#708090">// 已過期</span></span><span><span></span></span><span><span style="color:#999999">}</span></span></span></code></pre><span id="OSC_h3_16"></span><h3><span><span><span>不可見響應</span></span></span></h3><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>還記得上面為了安全考慮，在存入緩存時，對響應的狀態做了判斷，非 200 的都不緩存。然後就又發現異常場景了。</span></span></span></p><pre><code><span><span><span></span></span><span><span style="color:#708090">// 檢查是否成功獲取到響應</span></span><span><span></span></span><span><span style="color:#0077aa">if</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">!</span></span><span><span>response </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">||</span></span><span><span> response</span></span><span><span style="color:#999999">.</span></span><span><span>status </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">!==</span></span><span><span></span></span><span><span style="color:#990055">200</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span> response</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#708090">// 返回原始響應</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span></span></code></pre><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><code><span>opaque</span></code></span></span><span><span><span> 響應通常指的是跨源請求（CORS）中的一種情況，在該情況下，瀏覽器出於安全考慮，不允許訪問服務端返回的響應內容。</span></span></span><span><span><code><span>opaque</span></code></span></span><span><span><span> 響應通常發生在服務工作者（Service Workers）進行的跨源請求中，且沒有 CORS 頭部的情況下。</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><code><span>opaque</span></code></span></span><span><span><span> 響應的特徵是：</span></span></span></p><ul><li><span><span><span><span>響應的內容無法被 JavaScript 訪問。</span></span></span></span></li><li><span><span><span><span>響應的大小無法確定，因此 Chrome 開發者工具中會顯示為 (opaque)。</span></span></span></span></li><li><span><span><span><span>響應的狀態碼通常是 0，即使實際上服務器可能返回了不同的狀態碼。</span></span></span></span></li></ul><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>因此我們需要做一些補充動作。不單是補充</span></span></span><span><span><code><span>cors</span></code></span></span><span><span><span>模式，還得同步設置下</span></span></span><span><span><code><span>credentials</span></code></span></span><span><span><span>。</span></span></span></p><pre><code><span><span><span></span></span><span><span style="color:#0077aa">const</span></span><span><span> newRequest </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span>
  request</span></span><span><span style="color:#999999">.</span></span><span><span>url </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">===</span></span><span><span></span></span><span><span style="color:#669900">'index.html'</span></span><span><span></span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">?</span></span><span><span> request
    </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#0077aa">new</span></span><span><span></span></span><span><span style="color:#dd4a68">Request</span></span><span><span style="color:#999999">(</span></span><span><span>request</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> mode</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">'cors'</span></span><span><span style="color:#999999">,</span></span><span><span> credentials</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">'omit'</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span></span></code></pre><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>在 Service Workers 發起網絡請求時，如果頁面本身需要認證，那就像上面代碼那樣，對頁面請求做個判斷。</span></span></span><span><span><code><span>request.url === 'index.html'</span></code></span></span><span><span><span>是我寫的示例，真實請求中，需要拼出完整的 url 路徑。而對於資源文件，走非認證的</span></span></span><span><span><code><span>cors</span></code></span></span><span><span><span>請求即可。將請求的</span></span></span><span><span><code><span>request</span></code></span></span><span><span><span>改為我們變更後的</span></span></span><span><span><code><span>newRequest</span></code></span></span><span><span><span>，請求資源就可以正常的被緩存了。</span></span></span></p><pre><code><span><span><span style="color:#0077aa">var</span></span><span><span> fetchPromise </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span></span></span><span><span style="color:#dd4a68">fetch</span></span><span><span style="color:#999999">(</span></span><span><span>newRequest</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">then</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#0077aa">function</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span>networkResponse</span></span><span><span style="color:#999999">)</span></span></span></code></pre><span id="OSC_h1_17"></span><h1><span><span><span>銷燬</span></span></span></h1><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>離線緩存用得好升職加薪，用不好就刪庫跑路。除了上面的一點點的防錯邏輯，整體的降級方案一定要有。</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>看到這裏，應該已經忘了 Service Worker 是如何被註冊上的吧。沒事，我們看個新的腳本。在原本的基礎上，我們加了個變量</span></span></span><span><span><code><span>SW_FALLBACK</span></code></span></span><span><span><span>，如果離線緩存出問題了，趕緊到管理後台，把對應的值改成</span></span></span><span><span><code><span>true</span></code></span></span><span><span><span>。讓用户多刷新兩次就好了。只要不是徹底的崩潰導致</span></span></span><span><span><code><span>html</span></code></span></span><span><span><span>無法更新，這個方案就沒問題。</span></span></span></p><pre><code><span><span><span style="color:#708090">// 如果有問題，將此值改成 true</span></span><span><span></span></span><span><span style="color:#990055">SW_FALLBACK</span></span><span><span></span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span></span></span><span><span style="color:#990055">false</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">if</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span style="color:#669900">'serviceWorker'</span></span><span><span></span></span><span><span style="color:#0077aa">in</span></span><span><span> navigator</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">if</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">!</span></span><span><span style="color:#990055">SW_FALLBACK</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span>
    navigator</span></span><span><span style="color:#999999">.</span></span><span><span>serviceWorker
      </span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">register</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#669900">'/eemf-service-worker.js'</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">then</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">(</span></span><span><span>registration</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=&gt;</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span>
        console</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">log</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#669900">'Service Worker 註冊成功！'</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">catch</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">(</span></span><span><span>error</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=&gt;</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span>
        console</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">log</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#669900">'Service Worker 註冊失敗：'</span></span><span><span style="color:#999999">,</span></span><span><span> error</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">else</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span>
    navigator</span></span><span><span style="color:#999999">.</span></span><span><span>serviceWorker</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">getRegistration</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#669900">'/'</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">then</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">(</span></span><span><span>reg</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=&gt;</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span>
      reg </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">&amp;&amp;</span></span><span><span> reg</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">unregister</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">if</span></span><span><span style="color:#999999">(</span></span><span><span>reg</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">{</span></span><span><span>
        window</span></span><span><span style="color:#999999">.</span></span><span><span>location</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">reload</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span></span></code></pre><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>對於沒有管理後台配置</span></span></span><span><span><code><span>html</span></code></span></span><span><span><span>的項目，可以將上面的腳本移動到</span></span></span><span><span><code><span>sw-register.js</span></code></span></span><span><span><span>的腳本中，在</span></span></span><span><span><code><span>html</span></code></span></span><span><span><span>以</span></span></span><span><span><code><span>script</span></code></span></span><span><span><span>的形式加載該腳本，並將該文件緩存設置為</span></span></span><span><span><code><span>no-cache</span></code></span></span><span><span><span>，也不要在</span></span></span><span><span><code><span>sw</span></code></span></span><span><span><span>中緩存該文件。這樣出問題後，覆寫下該文件即可。</span></span></span></p><span id="OSC_h1_18"></span><h1><span><span><span>總結</span></span></span></h1><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>所有要説的，在上面都説完了。PWA 的離線方案，是一種很好的解決方案，但是也有其侷限性。本項目所用的 demo 已經上傳到了</span></span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsuilang%2FPWA-demo" target="_blank" rel="nofollow"><span><span><span>github</span></span></span></a><span><span><span>，可自行查看。</span></span></span></p><span id="OSC_h1_19"></span><h1><span><span><span>參考文檔</span></span></span></h1><ul><li><span><span><span><span>﻿</span></span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.mozilla.org%2Fzh-CN%2Fdocs%2FWeb%2FAPI%2FService_Worker_API" target="_blank" rel="nofollow"><span><span><span>Service Worker</span></span></span></a><span><span><span>﻿</span></span></span></span></li><li><span><span><span><span>﻿</span></span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.chrome.com%2Fdocs%2Fworkbox%2Fservice-worker-overview%2F" target="_blank" rel="nofollow"><span><span><span>Service worker overview</span></span></span></a><span><span><span>﻿</span></span></span></span></li><li><span><span><span><span>﻿</span></span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdevelopers.google.com%2Fweb%2Ftools%2Fworkbox" target="_blank" rel="nofollow"><span><span><span>Workbox</span></span></span></a><span><span><span>﻿</span></span></span></span></li><li><span><span><span><span>GPT 問答</span></span></span></span></li></ul><blockquote><p>作者：CHO 張鵬程</p><p>來源：京東雲開發者社區，轉載請註明來源</p></blockquote></div>
                                    ]]>
            </description>
            <pubDate>Sun, 17 Dec 2023 03:02:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/4090830/blog/10320663</guid>
            <link>https://my.oschina.net/u/4090830/blog/10320663</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[商湯科技創始人湯曉鷗離世，享年 55 歲]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>12 月 16 日，騰訊新聞報道稱，商湯科技董事長、人工智能科學家湯曉鷗於 12 月 15 日在睡夢中不幸離世，享年 55 歲。</p><p>湯曉鷗主要從事計算機視覺相關領域的研究，包括多媒體、計算機視覺、模式識別及視頻處理，是全球人臉識別技術的「開拓者」和「探路者」。</p><blockquote><p><img height="1272" src="https://static.oschina.net/uploads/space/2023/1216/153402_su2B_2720166.png" width="1442" referrerpolicy="no-referrer"></p><p>來源：<em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fview.inews.qq.com%2Fa%2F20231216A051VT00" target="_blank"><span style="background-color:rgba(0, 0, 0, 0); color:inherit">https://</span>view.inews.qq.com/a/20231216A051<span style="background-color:rgba(0, 0, 0, 0); color:inherit">VT00</span></a></u></em></p></blockquote><p>最早的網傳消息：</p><blockquote><p><img src="https://static.oschina.net/uploads/space/2023/1216/153606_97lp_2720166.png" referrerpolicy="no-referrer"></p><p>來源：<em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1644054135%2FNxokl6vOQ%3Fpagetype%3Dprofilefeed" target="_blank">https://weibo.com/1644054135/Nxokl6vOQ</a></u></em></p></blockquote><p>公開信息顯示，湯曉鷗 1968 年出生於遼寧鞍山，香港中文大學信息工程學系教授、工程學院傑出學人。湯曉鷗於 1990 年從中國科學技術大學畢業；1991 年獲得美國羅切斯特大學碩士學位；1996 年獲得麻省理工學院博士學位，之後進入香港中文大學工作；2001 年創立了香港中文大學多媒體實驗室；2005 年至 2007 年在微軟亞洲研究院工作，擔任視覺計算組主任；2008 年在深圳先進技術研究院多媒體集成技術研究室工作，擔任主任和研究員。</p><p><img height="457" src="https://oscimg.oschina.net/oscnet/up-a417892a92b7c38cf49b69a36526d033f48.png" width="300" referrerpolicy="no-referrer"></p><p><span style="background-color:#ffffff; color:#333333">湯曉鷗指導的博士生何愷明是深度殘差網絡 (ResNets) 的主要開發者。深度殘差網絡</span>使神經網絡能夠達到前所未有的深度，獲得以前難以實現的能力，促成了多個突破性的成果——包括 AlphaGo、AlphaFold 和 ChatGPT，為人工智能做出了基礎性貢獻。</p></div>
                                    ]]>
            </description>
            <pubDate>Sat, 16 Dec 2023 07:34:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271336</guid>
            <link>https://www.oschina.net/news/271336</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
    </channel>
</rss>
